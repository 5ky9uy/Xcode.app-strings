@(#)PROGRAM:IDS  PROJECT:IDS-
IDSInternalQueue - assertQueueIsNotCurrent in %s failed {symbols: %@}. The only acceptable callstack includes dealloc.
Instantiating %{public}@ from daemon -- returning nil
%s is deprecated, please use startTrackingPeer:forType:
%s is deprecated, please use stopTrackingPeer:forType:
Exception returned from daemon: %@
  Ensuring connection to daemon (has checked: %@)
  Grabbing remote daemon port (listener ID: %@)
Requesting connectionID %lu usingSync YES
ConnectionID %lu is more recent, ignoring.
Completed connection {connectionID %lu, fatalError %@, relevantConnection: %@, localObject: %@, acquiringDaemonConnection: %@}
  Built object: %@
  Failed to build remote object for listener: %@
Remote Object exists, not creating new remote object
Flushed send queue
Resume at disconnect %p
We're still not connected, kicking off disconnect notification
We're still connected, hiding the disconnect!
  Connecting to idsdaemon system is shutting down: %@  hasBeenSuspended %@
XPC has informed us that a fatal error has occured, we will not be attempting to reconnect any further
connectToDaemonWithLaunch capabilities %d
connectToDaemonWithLaunch calling into _setServices capabilities %d
Already connected... not connecting
_connectToDaemonWithLaunch: %@ services: %@ commands: %@ capabilities: %d
Suspend at connect %p
Resume due to connect completion %p
Tried to connect to IDS daemon but we got no remote object ... handling as if the remote object died.
Resume due to failed connect %p
Sending down new services %@ commands %@ capabilities %d. sendServices %@ sendCommands %@ sendCaps %@
Sending down new services %@ commands %@ capabilities %d
Set services: %@  (Previous: %@)
Set commands: %@  (Previous: %@)
Updating capabilities: %d  (Previous: %d)
IDSInternalQueue - assertQueueIsCurrent in %s failed {symbols: %@}. The only acceptable callstack includes dealloc.
Disconnecting from daemon - no listeners
%s: adding delegate on service %@ _notificationServices %@
Adding listener with ID: %@    services: %@   commands %@
Removing listener with ID: %@    services (count): %@   commands (count): %@   capabilities %@
Tried to remove non existent listener with ID: %@
Set %@: %@  for listener ID: %@
setCapabilities %d for listenerID %@ has no ID
setCapabilities %d for listenerID %@ is not a valid listener
setCapabilities %d for listenerID %@ - listener map already contains our capabilities
Set caps: %d  for listener ID: %@
Request to block until connected
 => Not blocking, already connected
 => Not blocking, shutting down
 => Starting connect
 => No remote object, can't block
Finished blocking for daemon connection
Cleaning up daemonConnectedGroup %p
Cleaning up LOCAL object
Cleaning up REMOTE object
Disconnected from agent (local)...
 ... disconnection from agent (local) being handled by ivarQueue
Disconnected from agent (remote)...
 ... disconnection from agent (remote) being handled by ivarQueue
Will auto reconnect...
 ...auto reconnecting
System application did suspend
System application did enter background
System application did enter foreground
System application did resume
Received call to roll encryption keys
IDSLocalSetupStart
IDSLocalSetupCompleted
IDSLocalSetupStop
IDSLocalSetupUnpair
IDSLocalSetupUnpairStart
IDSAddPairedDevice %@
Asked to pair device with cbuuid: %@
IDSConnectPairedDevice %@
%s %@
%s %@ %p %p
%s is DEPRECATED! Please use IDSGetPairedDevicesWithCompletionBlock
%s is DEPRECATED! Please use IDSInitialLocalSyncStartedForServices
%s is DEPRECATED! Please use IDSInitialLocalSyncCompletedForServices
Local setup - received incoming sync message
%s: invalid device %@
%@ Created
%@ parsing direct messaging state: %llu
%@ direct messaging supported: %d
[%llu %s] Dealloc
%@ Cancel
%@ Invalidate
%@ Updated destination device: %@
%@ connected devices changed %@
%@ peerIsNearby %d peerIsConnected %d changed %d
%@ received direct-messaging metadata %@
%@ direct messaging allowed: %d
%@ connection entered state: %d
%@ Invalid device
%@ direct messaging socket: %d, error: %@
Invalid context
%@ Received context %@
Invalid stream name
we are the originator
%@ Ignoring incoming request as existing request is in progress
Received error: %@
[%llu %s] Ignoring HS Header
[%llu %s] Received Header: v %u t %u l %u
[%llu %s] received ack for seq num %u guid: %@
[%llu %s] message for guid %@ already timed out
[%llu %s] received App-Level ack for: %@
[%llu %s] connection wrote ack for guid: %@(%u)
[%llu %s] connection wrote app-ack for guid: %@(0)
Invalid TLV size for type %d
Message %@ failed to send due to %ld
[%llu %s] Downgrading priority of message with guid %@ to Default from Urgent, client %@ is not configured to send urgent messages
[%llu %s] Client requesting to send message with guid %@ options %@
[%llu %s] Message %@ taking long, retrying
[%llu %s] Replacing guid: %@ with guid: %@
[%llu %s] connection wrote message w/ seq num %u guid %@
[%llu %s] Error! powerAssertionOptions is nil. Cannot get power assertion.
[%llu %s] logConnectionStatisticsInPowerDictionary: %@
malformed tlv received ((%d + %zu + %zu > %lu)
malformed tlv received ((%d + %u > %lu)
Created IDSGroupSessionDataCryptor: %@
encryptData: plaintext larger than GCM can support for topic %@ data.length %lu
encryptData: failed to create CommonCrypto cryptor for topic %@ error %ld
encryptData: failed to set IV for topic %@ error %ld
encryptData: failed to add AAD for topic %@ error %ld
encryptData: failed to encrypt for topic %@ error %ld
encryptData: failed to create auth tag for topic %@ error %ld
encryptData: failed to reset cryptor for topic %@ error %ld
decryptData: insufficient incoming data for topic %@ size %lu
decryptData: unknown keyID for topic %@ keyID %@
decryptData: failed to create cryptor for topic %@ keyID %@ error %ld
decryptData: unknown version for topic %@ keyID %@ version %u
decryptData: failed to set IV for topic %@ keyID %@ error %ld
decryptData: failed to decrypt for topic %@ keyID %@ error %ld
decryptData: failed to verify auth tag for topic %@ keyID %@ error %ld
decryptData: failed to reset cryptor for topic %@ keyID %@ error %ld
Invalidating _IDSGroupSession { self: %p, _internal: %p }
IDSGroupSession method invoked without a valid internal session! { self: %p, _internal: %p }
createAliasForParticipantID created %llu from %llu and %@
createAliasForLocalParticipantIDWithSalt created %llu from %llu and %@
createAliasForLocalParticipantIDWithSalt created and returning %llu
IDS daemon took too long to respond to participantIDForAlias:salt:
manageDesignatedMembers: invalid type: %u
IDSReportiMessageSpam - %@  (toURI: %@)
IDSReportiMessageUnknownSenderWithBlackholeAndJunkStatus - %@, %@, %@, %@, %@  (toURI: %@)
IDSCheckiMessageUnknownSender (toURI: %@ Count: %@)
%@ posting availability change notification (%@) - available: %d
%@ creating monitor for service: %@
%@ adding listener `%@` for service: %@
%@ removing listener `%@` for service: %@
%@ no more listeners for service: %@
%@ no listener matching `%@` for service: %@
Exception: %@ in handler: %@ while executing a block
%@ accountDictionariesForService %@
All accounts after first connection to daemon: %@
%@ enabledAccountsForService %@
All enabledAccounts %@
IDSDaemonListener _removeAccountOnIvarQueue %@ was told of an account without a unique id or service name: %@
IDSDaemonListener accountAdded %@ was told of an account without a unique id or service name: %@
%s: %@
IDSDaemonListener accountRemoved %@ was told of an account without a unique id or service name: %@
IDSDaemonListener accountEnabled was told of an account without a unique id %@ or service %@
Incoming account enabled: %@
IDSDaemonListener accountDisabled was told of an account without a unique id %@ or service %@
Incoming account disabled: %@
Account info changed %@
IDSDaemonListener accountInfoChanged %@ was told of an account without a unique id or service name: %@
Found active device in dependent devices update, updating activeDevice ID to %@ for %@
Dependent devices updated, setting %@ to (isActive: %@)
Current devices for account %@: %@
Found existing local device, removing %@
Local device added %@, we'll trigger didSwitchActivePairedDevice callback since we already have an active device %@
Local device added %@, we'll trigger didSwitchActivePairedDevice callback since we already had a locally paired device
Local device added, updating activeDevice ID to %@
New devices for account %@: %@
Active device was removed, clearing active uniqueID %@
Tinker device added %@, we'll trigger didSwitchActivePairedDevice callback since we already have an active device %@
Tinker device added %@, we'll trigger didSwitchActivePairedDevice callback since we already had a locally paired device
Tinker device added, updating activeDevice ID to %@
Found active device in tinker device update, updating activeDevice ID to %@ for %@
Tinker device updated, setting %@ to (isActive: %@)
tinkerDeviceAdded %@
tinkerDeviceRemoved %@
tinkerDeviceUpdated %@
familyInfoUpdated %@
Family Info was nil %@
ID status not valid for %@
Refresh registration for account %@
No device ID: can't update nsuuid. Bailing...
Checking for updates for device with new nsuuid { nsuuid: %@, device: %@}
No account with device %@ and mismatched nsuuid were found.  No updates made
Did get identities {identities: %@, error: %@}
Calling didSwitch for topic %@
DidSwitch callback for %@ (handler %@) was handled %@
Unhandled didSwitch callback for topic %@
Updating isActive state for all accounts %@
New active unique ID is nil
Account unique ID is nil, can't switch active device ID
Switching active device to %@ for service %@
Current linked devices for service %@: %@
New linked devices for service %@: %@
Active paired device switched, updating activeDevice ID to %@
Switching active device to %@ for account %@
Unsetting active device unique ID due to quick switch or new pairing start
Setup complete with info
Deferred setup on ivar queue, got accounts %@
Services all disappeared, removing all accounts
Deferred setup on ivar queue, got enabled accounts %@
Notified account enabled %@ for service %@
Enabled accounts all disappeared, removing all enabled accounts
Deferred setup on ivar queue, got %lu dependent devices
Dependent devices all disappeared, removing all dependent devices
Deferred setup on ivar queue, got %lu linked devices
Dealing with family members
Device identifier from daemon: %@
Active device uniqueID from daemon: %@ account map %@ service map %@
Direct messaging peer identifier: %@
Setup info is not complete, waiting...
Connection is not complete, waiting...
Connection complete, notifying
Connection complete
XPC object received %@:%@
Exception: %@ in handler: %@ while executing: %@
Device identifier changing from %@ to %@
Unnecessary invocation of deviceIdentifierDidChange:
Setting up delegate %p
Sending the real-time media prekey of this device to the group %@
the delegate object %@ doesn't respond to the selector didReceivePublickeys:
the delegate object %@ doesn't respond to the selector didReceiveMasterKeyMaterials:
unknown object type %@
Expiration dates in the past are not allowed: %@
Creaating new activity monitor with activity %@ service identifier %@
Adding delegate %@ to activity monitor %@
IDSActivity is not allowed for non-tvOS devices.
Stopping broadcast with subActivity %@
Getting listening status for self: %@
Error checking for isListening {xpcError: %@}
Set listening for updates %d on self %@
Error setting isListening {xpcError: %@}
Subscription completion handler called, subscriptions: %@ error %@
Error getting current subscriptions {xpcError: %@}
setupInvitationsForService: Fetched pending invitations from daemon: %@
setupInvitationsForService: Fetched received invitations from daemon: %@
setupInvitationsForService: Failed to unarchive pending invitation {%@} with error {%@}
setupInvitationsForService: Failed to unarchive received invitation {%@} with error {%@}
validateStrictDecodingForSentInvitation: Failed to validate strict decoding for invitation with error {%@}
sendInvitationToDestination: received %@ from IDSService with error {%@}
sendInvitationToDestination: Invitation {%@} not added to pendingInvitations. Calling serverAcknowledgedBlock
cancelInvitation: received %@ from IDSService with error {%@}
cancelInvitation: Invitation {%@} not removed from pendingInvitations. Calling serverAcknowledgedBlock
acceptInvitation: received %@ from IDSService with error {%@}
acceptInvitation: Invitation {%@} not removed from receivedInvitations. Calling serverAcknowledgedBlock
declineInvitation: received %@ from IDSService with error {%@}
declineInvitation: Invitation {%@} not removed from receivedInvitations. Calling serverAcknowledgedBlock
Validating Invitation: Null invitation, dropping
Validating Invitation: Expiry date has passed {%@}
Validating Invitation: There is no stored invitation with unique id {%@}
Validating Invitation: Stored invitation's sender mergeId {%@} is invalid. Could not compare to received invitation's sender mergeId {%@}
Validating Invitation: Sender mergeId {%@} does not match stored invitation's sender mergeId {%@}
Validating Invitation: Sender merge ID for received invitation {%@} does not match the stored invitation {%@}
IncomingInvitation: Invitation state %ld. Delivered {%@} to delegate incomingInvitation
IncomingInvitation: No delegate found for manager:incomingInvitation:
IncomingInvitation: Invitation state %ld. Delivered {%@} to delegate senderDidCancelInvitation
IncomingInvitation: No delegate found for manager:senderDidCancelInvitation:
IncomingInvitation: Invalid Invitaion state %ld. Not delivered {%@} to delegate
IncomingInvitationUpdate: Invitation state %ld. Delivered {%@} to delegate receiverDidAcceptInvitation
IncomingInvitationUpdate: No delegate found for manager:receiverDidAcceptInvitation:
IncomingInvitationUpdate: Invitation state %ld. Delivered {%@} to delegate receiverDidDeclineInvitation
IncomingInvitationUpdate: No delegate found for manager:receiverDidDeclineInvitation:
IncomingInvitationUpdate: Invalid Invitaion state %ld. Not delivered {%@} to delegate
InvitationManager didSendWithSuccess: Identifier {%@}. didSendWithSuccess {%@} with error %@
InvitationManager didSendWithSuccess: No invitation found with identifier {%@}
InvitationManager didSendWithSuccess: Calling block for invitation with identifier {%@} and state {%ld}
InvitationManager didSendWithSuccess: No invitation ack block found with identifier {%@}
Client initialized IDSServerMessagingController with topic: %@ uuid: %@
XPC interruption for client %@
Setting up xpc for client %@
Error fetching server messaging collaborator {error: %@}
Failing message due to xpc interruption {guid: %@, error: %@}
Calling out to client completion { guid: %@, success: %@, error: %@ }
Client added delegate to listen for incoming messages from server { uuid: %@, delegate count: %lu }
Client requested send { clientUUID: %@, guid: %@, options: %@ }
Client requested certified delivery receipt { clientUUID: %@, guid: %@, context: %@ }
Client received incoming data { clientUUID: %@, guid: %@, context: %@ }
No delegates found to handle incoming server message { guid: %@ }
Forwarding server message to delegate { guid: %@, delegate: %p }
Did receive registration identity update {delegates: %{public}@}
IDSSignInController init {self: %p}
IDSSignInController dealloc {self: %p}
Setting delegate {service: %@, delegate: %p, status: %@}
Removing delegate {service: %@}
%s called with nil completion - returning
Enable user on service {userType: %llu, service: %@}
Already enabled
Enabling apple id - starting machine
Enabling phone number - completed
No matching account {error: %@}
Disable user on service {userType: %llu, service: %@}
Already disabled
No account found -- completing {userType: %llu, service: %@}
Checking user statuses {service: %@}
Finished checking user statuses {status: %@, service: %@}
Provided credential {credential: %p, user: %@, service: %@}
Invalid params {error: %@}
Set for account password {username: %@, error: %@}
Sign in user {user: %@, service: %@, shouldWait: %@}
Sign in user with provided credential {user: %@, credential: %p, service: %@}
Sign out service {service: %@}
Calling sign in controller's client completion block {completion: %@, error: %@}
Initialized state machine {self: %p, accountID: %@, serviceName: %@, state: %@, completion: %@}
Schedule validation after {self: %p, delay: %@, accountID: %@, allowFuzz: %@, signOut: %@}
Periodic validation fired {delay: %f, allowFuzz: %@, signOut: %@}
No description to validate {accountID: %@}
Validating state {stateNumber: %@, account: %@}
Completed {errorCode: %llu, account: %@}
No account to validate {accountID: %@, description: %@}
Re-enable, looks like things didn't progress
Transitioning to registering
Validating delegate state {changes: %@, current: %@, cached: %@}
Added interesting account {account: %@}
Account disabled {account: %@}
Account removed {account: %@}
Account updated {account: %@}
IDSSession dealloced
Received invalid options %@, bailing
Received IDQueryCompletedWithFromURI %@ idStatusUpdates %@ service %@ success %@ error %@
Updated local cache to %@
Notifying delegate %@ about ID status update
addListener:forService:
ListenerID is empty, bailing...
Service name is empty, bailing...
%@ -> %@
Final map after add %@
removeListenerID:forService:
Final map after remove %@
%s  (simulatorDeviceID: %@)
Failed to soft link IDSSimulatorLocalPairingAddPairedDevice
Failed to soft link IDSSimulatorLocalPairingDeletePairedDevice
Failed to soft link IDSSimulatorLocalPairingSwitchActivePairedDevice
IDSFirewall - assert valid queue failed in %s
IDSFirewall populateImpactedServices for service %@
Error fetching firewall collaborator {error: %@}
IDSFirewall update for service %@ donateEntries %@
IDSFirewall update for service %@ removeDonatedEntries %@
IDSFirewall update for service %@ removeEntries %@
IDSFirewall update for service %@ replaceDonatedEntriesWithEntries %@
IDSFirewall update for service %@ replaceAllEntriesWithEntries %@
IDSFirewall currentEntries for service %@
IDSFirewall update for service %@ removeAllDonatedEntries
IDSFirewall update for service %@ removeAllEntries
IDSFirewall recentlyBlockedEntries for service %@
IDSGroupEncryptionKeyMaterialCache
IDSGroupEncryptionKeyMaterialCache received key %@
IDSGroupEncryptionKeyMaterialCache invalidateKeyMaterialByKeyIndexes %@
IDSGroupEncryptionKeyMaterialCache enumerating keyID %@, locally generated:%@, generation counter:%u
Process does not have sandbox permission to access IDS mach port -- connection will fail! {portName: %@}
 => Found response with %d keys
Daemon didn't grant connection
Received Connection Invalid
Received Connection Interrupted
Failed IDSDaemonRequestConnection, no reply
There are currently no family handles on service. Failing message, will try to fetch members.
Handle: %@ is not in family.
Service received %@ familyInfoUpdated
Creating IDSGroupSessionUnicastParameter with local id %@ and remote id %@
%s: received new traffic classifiers %@
Cannot save invalid device info: %@
Received paired device info, sending to daemon for saving
Cannot delete empty CBUUID {cbuuid: %{private}@}
%s: device CBUUID: %@
%s: Empty completion block/queue
Querying local device info from IDSD asynchronously
XPC Connection Error - Failed to get localDeviceInfo {error: %{public}@}
Received local device info from daemon, device: %@
getLocalDeviceInfoFailed {error: %{public}@}
Querying paired device info from IDSD asynchronously
XPC Connection error - Failed to get pairedDeviceInfo {error: %{public}@}
Received paired device info from daemon, device: %@
getPairedDeviceInfo error {error: %{public}@}
Received pairing removed notification from daemon, device: %@, deleted: %@
Invoking pairingDelete completion block
XPC Connection error - Failed to constuct RA response dictionary {error: %{public}@}
Failed to create IDSAuthenticationSigningResult due to a mismatch between subscription identifiers and authentication certificates! {subscriptionIdentifiers: %@, authenticationCertificates: %@}
Client requested authenticate phone on an unsupported platform -- failing request {clientError: %@}
Client request to authenticate phone {uuid: %@}
Client requested phone authentication signature on an unsupported platform -- failing request {clientError: %@}
Client request to generate phone authentication signature over data {uuid: %@}
Client requested carrier token on an unsupported platform -- failing request {clientError: %@}
Client request for carrier token {uuid: %@}
Received authenticate phone response from daemon {uuid: %@, phoneCertificateData: %@, handler: %@, completion: %@, clientError: %@}
Received phone authentication signature response from daemon {uuid: %@, signature: %@, signingResult: %@, handler: %@, completion: %@, clientError: %@}
Received carrier token response from daemon {uuid: %@, carrierToken: %@, handler: %@, completion: %@, clientError: %@}
Timed out phone authentication signature request -- calling completion block with timeout error {completionBlock: %@}
Timed out phone authentication certificate request -- calling completion block with timeout error {completionBlock: %@}
Timed out phone carrier token operation -- calling completion block with timeout error {completionBlock: %@}
Client requested to set current phone user subscription source on an unsupported platform -- failing request {clientError: %@}
Client request to set current phone subscription source {uuid: %@}
Client requested current phone user subscription source on an unsupported platform -- failing request {clientError: %@}
Client request for current phone subscription source {uuid: %@}
Failed to weak link FTSelectedPNRSubscription from FTServices for synchronous fetch of phone user subscription source
Unable to determine selected phone user subscription source synchronously {subscriptionSource: %ld, selectedContext: %@, subscriptionError: %@}
Returning current phone user subscription source synchronously {subscriptionSource: %ld, clientError: %@}
Timed out phone subscription source operation -- calling completion block with timeout error {completionBlock: %@}
Received response after setting current phone user subscription from daemon {uuid: %@, subscriptionSource: %@, handler: %@, completion: %@, clientError: %@}
Received current phone user subscription response from daemon {uuid: %@, subscriptionSource: %@, handler: %@, completion: %@, clientError: %@}
Alloc'ing IDSXPCConnectionRemoteObjectPromise {pointer: %p}
Dealloc'ing IDSXPCConnectionRemoteObjectPromise {target: %{public}@, pointer: %p}
Failing xpc connection promise {pendingInvocations: %{public}@, error: %{public}@}
Failing xpcRemoteObjectPromise with no pending invocations {error: %{public}@}
Found existing IDSAccountController %@ for service %@
Tried to create IDSAccountController with empty service, ignoring...
Couldn't find existing IDSAccountController adding new one %@
    %@ -> %p
Deallocing IDSAccountController %@
%p will be removed from account controller map automatically
* Request to setup account with aliases: %@ and parameters:
  => password : REDACTED
  => %@ : %@
* Request to add account: %@   service: %@
* Request to remove account: %@   service: %@
* Request to enable account: %@   service: %@
* Request to disable account: %@   service: %@
Initializing _IDSGroupSession { self: %p, uniqueID: %@, instanceID: %@ }
Conference server at: %s:%d
No conference server support, cannot connect to server at %s:%d
_fromID: %@, _isLightweightParticipant: %@, _destinationsLightweightStatus: %@
Invalidating _IDSGroupSession { self: %p, uniqueID: %@, instanceID: %@ }
Deallocating _IDSGroupSession { self: %p, uniqueID: %@, instanceID: %@ }
_IDSGroupSession was deallocated without being invalidated -- this may indicate an orphaned daemon session! { self: %p, uniqueID: %@, instanceID: %@ }
Disconnected from daemon, notifying client of groupSession %@
Empty unique ID
Empty instance ID
Empty account ID
Setting up session delegate %p
lightweightStatusDict: %@, _destinationLightweightStatus: %@
updateMembers messagingCapabilities called
REQUIRED_ATTRIBUTE - Warning, missing %@ to add to %s
currentURL: %@, _isLightweightParticipant: %@
updateParticipantType: invalid _fromID
updateParticipantType to %u, _destinationsLightweightStatus: %@
updateParticipantType: triggered remotely: lightweightStatusDict: %@, _destinationLightweightStatus: %@
Cannot join a session that is already ended, ignoring...
joinWithOptions called %@
%s:%d %{private}@
Cannot join a session without the participant data information.
cfs_client_send_join_request, _cfs_requestID: %d, clientID: %llu, groupID: %s, data: %@, result: %d
cfs_client_send_leave_request, result: %d
requestURIsForParticipantIDs: request has no participants.
GroupSession is invalidated.
requestURIsForParticipantIDs {id:%@, participant count:%lu, total requests :%lu}
No local key material found. Skip completion handler udpate.
No completion handlers detected inside _dataCryptorRequests.
Updating %lu completion handlers in _dataCryptorRequests
requestDataCryptorForTopic: topic is empty!
createSessionIDAliasWithSalt(async) created %@ from %@ and %@
createAliasForParticipantID(async) created %llu from %llu and %@
createAliasForLocalParticipantIDWithSalt(async) created %llu from %llu and %@
getParticipantIDForAlias(async) added %@ to %@
Session %@ received report
Ignoring didReceiveReport, session doesn't match %@ vs. %@
Ignoring group session termination, session doesn't match %@ vs. %@
Group session %@ was terminated
Group session ended %@ with reason %d error %@
Ignoring group session ended, session doesn't match %@ vs. %@
Did join group session %@
Ignoring sessionDidJoinGroup {self:%p, _uniqueID:%@, identifier:%@}
Did join group session %@, participantUpdate %@
Received localParticipantID: %llu
Did leave group session %@
Ignoring sessionDidLeaveGroup {self:%p, _uniqueID:%@, identifier:%@}
ParticipantDidJoin group session %@, participantInfo %@
Ignoring participantDidJoinGroupWithInfo {self:%p, _uniqueID:%@, identifier:%@}
ParticipantDidLeave group session %@, participantInfo %@
Ignoring participantDidLeaveGroupWithInfo {self:%p, _uniqueID:%@, identifier:%@}
Ignoring didReceiveActiveParticipants {self:%p, _uniqueID:%@, identifier:%@}
didReceiveActiveParticipants: count %lu for group session: %@
Ignoring didReceiveActiveLightweightParticipants {self:%p, _uniqueID:%@, identifier:%@}
didReceiveActiveLightweightParticipants: count %lu for group session: %@
didRegisterPluginAllocationInfo for session: %@, sessionInfo: %@
Ignoring didRegisterPluginAllocationInfo {self:%p, _uniqueID:%@, identifier:%@}
didUnregisterPluginAllocationInfo for session: %@, sessionInfo: %@
Ignoring didUnregisterPluginAllocationInfo {self:%p, _uniqueID:%@, identifier:%@}
Ignoring group session didReceiveBlockedParticipantIDs, session doesn't match %@ vs. %@
Group session %@ code: %u, type: %u, isTruncated: %@, didReceiveBlockedParticipantIDs: %@
Ignoring group session didReceiveQueryBlockedParticipantIDs, session doesn't match %@ vs. %@
Group session %@ code: %u, isTruncated: %@, didReceiveQueryBlockedParticipantIDs: %@
Ignoring group session didRemoveParticipantIDs, session doesn't match %@ vs. %@
Group session %@ code: %u, isTruncated: %@, didRemoveParticipantIDs: %@
Ignoring group session didReceiveKeyMaterial {self:%p, _uniqueID:%@, identifier:%@}
Can't store key material for session %@
Group session %@ didReceiveKeyMaterial SKM: %@
shouldInvalidateKeyMaterialByKeyIndexes for session %@, expiredKeyIndexes: %@
Ignoring group session shouldInvalidateKeyMaterialByKeyIndexes, session doesn't match %@ vs. %@
Ignoring sessionDidReceiveParticipantUpgrade, session doesn't match %@ vs. %@
sessionDidReceiveParticipantUpgrade %@, type: %u, error: %@
sessionDidReceiveParticipantUpgrade %@, change _isLightweightParticipant to %@
Ignoring group session didReceiveParticipantIDs:withCode:managementType:, session doesn't match %@ vs. %@
Group session %@ code: %u, type: %u, didReceiveParticipantIDs: %@
Ignoring group session didReceiveURIsForParticipantIDs:, session doesn't match %@ vs. %@
Group session %@ didReceiveURIsForParticipantIDs: count:%lu
Ignoring group session participantUpdated, session doesn't match %@ vs. %@
participantUpdatedForSession %@
hasOutdatedSKI %@
didCreateParticipantIDAlias %llu salt %@ participantID %llu
didReceiveParticipantID %llu salt %@ participantIDAlias %llu
Ignoring group session didReceiveDataBlob, session doesn't match %@ vs. %@
session %@ participant: %@, didReceiveDataBlob: %@
Ignoring group session didReceiveData:dataType:forParticipant, session doesn't match %@ vs. %@
session %@ participant: %@, type: %u, didReceiveData: %@
Ignoring group session didReceiveServerErrorCode, session doesn't match %@ vs. %@
session %@ didReceiveServerErrorCode: %u
xpc object: [%@] context: [%@]
Ignoring socket, session doesn't match %@ vs. %@
Received XPC Response Error: %@
Request type %d failed with error code %d, make sure to set the participant info.
No conference server support, lost connection to server!
Request type %d succeeded
REPLY_TYPE_JOIN_REPLY
cfs_client left group session
Number of clients broadcasted: %u
REPLY_TYPE_JOIN_NOTIFICATION
Client %u left
REPLY_TYPE_BROADCAST_NOTIFICATION
Unknown reply type: %d
process_cfs_client_blob_set: client count: %u
process_cfs_client_blob: clientid: %llu, datasz: %u
Fetching groups from groupIDs {groupIDs.count: %ld}
Failed to fetch groups {error: %{public}@, groupIDs: %{private}@}
Fetched groups with success {groups.count: %ld}
Fetch groupds {groups: %{private}@}
Fetching transport log messages
Fetched messages from transport log
Account identity for task handler - failed to get content - fail {error: %{public}@}
Registration identities updated - clearing client cache
Group Context Created %@
Faied to get address in FixedQuickRelayServerAddress defaults
Decoded relay-server-address %@:%u
Decoded base64 relay-session-id %@
Decoded base64 relay-session-token %@
Decoded base64 relay-session-key %@
Using preallocated tokens from user defaults
Missing a defaults for hardcoded QR session info
_IDSConnection - initing {self: %p, account.serviceName: %@}
Account delegate has been cleaned up via weak references %p
setCapabilities %u  %@, result = %@
!setState guid=%@
sendMessage - Inspecting message {%@} payload for security issues
Downgrading priority of message with GUID %@ to Default from Urgent, The client %@ is not configured to send urgent messages
Downgrading waking status of message with GUID %@ to non-waking, the client %@ is not configured to send waking messages.  Total messages downgraded: %u
Invalid %@ value was given! {given: %@}
Client %@ is forcing QR for Cloud Message with GUID %@
QueueOneIdentifier not a string! [%@]
callstack %@
OUTGOING-CLIENT_REQUEST:%@ SERVICE:%@
Client request to send %@ on service: %{public}@   guid: %{public}@   to destinations: %@   options: %@    size: %d] (%lu pending)
5 {curProtocol: %hhu, prevProtocol: %hhu, prevBundleID: %@, curUUID: %{public,uuid_t}.16P, curPktLen: %u, logSeqn: %hhu}
sendPayload - could not find account uniqueID! self: %@ account: %@
%@ unable to plist-serialize dictionary %@ !!
Client request to send %{public}@ message (dictionary) service: %{public}@  to destinations: %@   options: %@]
sendPayload - could not plist serialize dictionary.
sendInvitation - preparing to send invitation : %@
sendInvitation - invitation payload for id {%@}: %@
sendInvitation - could not find account uniqueID! self: %@ account: %@
sendInvitationUpdate - preparing to send invitation : %@
sendInvitationUpdate - invitation payload for id {%@}: %@
sendInvitationUpdate - could not find account uniqueID! self: %@ account: %@
%@ asked to send server message %@ with command %@ - invalid value!
incomingAppLevelAckFromDirectConnection: %@ guid %@
incomingAckFromDirectConnection: %@ guid %@
incomingDataFromDirectConnection: %@ guid %@
incomingMessageFromDirectConnection: %@
incomingProtobufFromDirectConnection: %@
incomingGUIDAckFromDirectConnection: %@/%@
%@ not connecting to identityservicesd - no serviceName for account %@
Failed to connect to identityservicesd; %@ %@
%@ resending %@ alternate %@ due to daemon disconnection.
OUTGOING-UPDATE:%@ CODE:%ld LASTCALL:%@
%@ outgoing message guid response: %{public}@  callbackID: %@  response code: %ld   error: %{public}@  WiProx error: Error Domain=%{public}@ Code=%{public}@ %{public}@  lastCall: %@
%@ outgoing message guid response: %{public}@  callbackID: %@  response code: %ld   error: %{public}@   lastCall: %@  endpointState: %ld
Server Timestamp for UpdatedWithResponseCode? { serverReceivedTime: %@, serverTimestamp: %@}
IDS sending success is NO though error is unset
  => <%@:%p> finished handling message guid: %@  (connection:messageIdentifier:alternateCallbackID:updatedWithResponseCode:error:lastCall:)
  => <%@:%p> finished handling message guid: %@  (connection:identifier:didSendWithSuccess:error:context:)
%@ identifier %@ callbackID %@ willSendToDests count %@ skipped count %@  map count %@
  => <%@:%p> finished handling message guid: %@  (connection:identifier:alternateCallbackID:willSendToDestinations:skippedDestinations:registrationPropertyToDestinations:)
%@ received app-level ack with identifier %@ context %@
Recieved did send opportunistic data {connection: %@, identifier: %@, accountID: %@, toIDs: %@}
_IDSConnection incoming topic for another connection {self: %p, type: %@, topic: %@, self.topic: %@}
_IDSConnection incoming handle for another connection {self: %p, type: %@, localURI: %@, self.aliases: %@, account.uuid: %@, self.pseudonyms: %@}
Ignoring %@, account is not configured: %@    isActive: %@  isRegistered: %@  isLocal: %@  serviceIdentifier: %@  registrationStatus: %ld  registrationCert: %@
Ignoring %@ for topic %@ because fromID %@ is a suppressed IDSDevice.
Connection recieved message
%@ received message: %@  topic %@  from: %@  to: %@  payload items: %d
INCOMING-CLIENT_MESSAGE:%@ SERVICE:%@
9 {curProtocol: %hhu, nextProtocol: %hhu, curUUID: %{public,uuid_t}.16P, curPktLen: %u, logSeqn: %hhu}
Warning! Message with guid %@ exceeds size limitations of MPKL_UUID_NEXT macro.
%@ received data: %@ topic %@  from: %@  to: %@
INCOMING-CLIENT_DATA:%@ SERVICE:%@
%@ received Engram Dict: %@ topic %@  from: %@  to: %@
Accessory data commands are only supported on AppleID accounts, This one is not for me.
%@ received Accessory data: %@ topic %@  from: %@  to: %@
%@ received Accessory Report Message: %@ topic %@  from: %@  to: %@
incomingInvitation - received incoming invitation message : %@
incomingInvitationUpdate - received incoming invitation message : %@
INCOMING-CLIENT_PROTOBUF:%@ SERVICE:%@
Client received protobuf from daemon %@ for topic: %@  messageID: %@  fromID: %@
 => Handed protobuf ID %@ to delegate: %@
Ack'ing message %@ to daemon that client got it
Received context: %@
Recipient topic: %@
Ignoring for: %@
Client received notification that cache was flushed { service: %@, remoteURI: %@, fromURI: %@, guid: %@ }
INCOMING-CLIENT_PENDING:%@ SERVICE:%@
Client received pending incoming message from daemon %@ for topic: %@  messageID: %@  fromID: %@
Received incoming invitation %@ forTopic %@ sessionID %@ toIdentifier %@ fromID %@ transportType %@
Received incoming group session participant update forTopic %@
Received incoming group session participant data update forTopic %@
Incoming Group Share
Incoming Registered Identities
checkTransportLog {reason: %ld}
Failed type check! {key: %@, class: %@}
Client has set export object %@
Invalidation Handled
Interruption Handled
%@ %s  (serviceDelegate: %@)
%@ %s  (delegateIdentifier: %@)
%@ %s
Unacknowledged IDSServiceDelegate objects: %@
Warning! No write completion handler to invoke.
%s (%s: %@)   (%s: %p)   (%s: %p)
%s (%s: %@)   (%s: %@)   (%s: %p)   (%s: %p)
%s (%s: %p)   (%s: %p)
Failed to get pairing records {error: %{public}@}
Failed to get pairing collaborator {error: %{public}@}
About to call local pairing completion block { block: %p, error: %@ }
Calling local pairing completion block %p
_IDSDeviceConnection was created without an IDSDevice %@ or service %@
<%p> The client passed the smaller timeout %@ than the default value. IDSDeviceConnection will use the default value.
<%p> Init connection socket %d with options: %@  device: %@  (%@)  (name %@) service %@ connectionUUID %@ timeout %@
<%p> _IDSDeviceConnection has timed out waiting for a socket.
<%p> Updating stream pair: %@:%@
<%p> Updated socket traffic class: %d
<%p> Closing socket: %d (name %@)
<%p> Closing socket: skipped, a new connection for this %@
<%p> World, id[%@] !=? id[%@]
<%p> xpc object: [%@] context: [%@]
Received XPC Response/Socket: %d    Error: %@
Received XPC Response/Socket: %d
<%p> Opened socket: %d (Success: %@ ) %@ (%@)
Open socket request already timed out, closing %d.
Daemon died, closing socket: %d
IDSAccountController created with service %@ serviceToken %@
Adding listener with ID %@ topics %@
Daemon disconnected, we'll need to reload accounts for service: %@
Updating delegates of account changes
Re-loading cached accounts for service: %@ with dictionaries %@
Account loaded was of unknown account type %d, ignoring...
Old account set %@
New account set %@
New enabled accounts set %@
Requesting setup of account: %@   service: %@  transaction: %@  accountConfig: %@
We have a real account registered, hiding local account
We don't have a real account registered, adding and enabling local account
Client request to enable account ID: %@
Client request to disable account ID: %@
Account added was of unknown account type %d, bailing...
**** Account added has no uniqueID **** %@
Received account removed %@ for topic %@
Did not find an existing account to remove with unique ID %@
**** Account removed has no uniqueID **** %@
Received account updated %@ for topic %@
Did not find an existing account to update with unique ID %@, creating one
Account updated was of unknown account type %d, ignoring...
**** Account updated has no uniqueID **** %@
Received accounts changed %@ for topic %@  service: %@  (Cached: %@)
No uniqueID for account %@, ignoring...
Did not find an existing account to update with unique ID %@
Account changed was of unknown account type %d, ignoring...
Could not create IDSAccount with info %@
Original accounts %@
Accounts Modified %@
Removing accounts %@
Setup complete - no transaction ID, bailing...
SetupCompleteForAccount %@ transactionID %@ setupError %@
Setup handler block %p for transactionID %@
Account setup completed but we don't have an account, ignoring...
Setup completed for account %@ isActive %@ setupError %@
Account enabled - no unique ID, bailing...
Account enabled - no service, bailing...
Received account enabled %@ on service %@
Adding enabled account %@
Did not find an existing account to enable with unique ID %@
Account disabled - no unique ID, bailing...
Account disabled - no service, bailing...
Received account disabled %@ on service %@
Removing enabled account %@
Did not find an existing account to disable with unique ID %@
Hard deregistering, %@
Triggering final deregister, %@
Clearing IDS state
Alloc'ing IDSXPCDaemonController {pointer: %p}
IDSXPCDaemonController connection interrupted -- Dropping collaborators {collaborators: %{public}@, pointer: %p}
Dealloc'ing IDSXPCDaemonController {pointer: %p}
Activating daemon controller
Get collaborator {identifier: %{public}@, timeout: %f}
Creating collaborator promise {identifier: %{public}@}
Got collaborator {identifier: %{public}@, proxy: %{public}@}
Failed to get collaborator {identifier: %{public}@, error: %{public}@}
Get sync collaborator
Failed to get data for publicIdentity {dataProtectionClass: %{public}@, error: %{public}@}
Failed to get data for fullIdentity {dataProtectionClass: %{public}@, error: %{public}@}
Error fetching key transparency collaborator {error: %@}
%s called with nil completion -- returning
%s called with nil KT application -- returning
Fetching KT eligibility with completion {application: %@}
Updating IDS Server with KT Opt in Info {optInInfo: %@}
Creating new IDSAccount %p with config %@ uniqueID %@ serviceName %@
Created new IDSAccount %p with loginID %@ uniqueID %@ serviceName %@
Framework register account
Client requesting to register account: %@
Framework unregister account
Client requesting to unregister account: %@
Framework force remove account
Client requesting to force remove account: %@
Framework reregister account
Client requesting to reregister (with reidentify %@) account: %@
Framework deactivate account
Client requesting to deactivate and purge identify account: %@
iCloud sign in hack with userName %@ password %@
iCloud sign out hack
Kicking get dependent
Client request for IDSCopyLocalDeviceUniqueID: %@
createDataBlobFrom: encoded %@
Exception handling _strictlyUnarchivedObjectOfClasses: %@
extractDictionaryFromDataBlobFrom: decoded %@
requestNWConnectionWithDataBlob: decoded participantIDAlias %llu from %@
Tried to create an account with empty service name, bailing...
Tried to create an account with unknown account type %d, bailing...
No account type specified, setting to Apple ID
New account info %@ for %@
Account setting regionID {regionID: %@, account: %@}
Account setting regionBasePhoneNumber {regionBasePhoneNumber: %@, account: %@}
Adding IDSDevice %@
Devices updated %d
Devices before %@
Devices after %@
Local account, ignoring request for keychain registration
Registered URIs for %@ with service type %@ account type %d
Registration cert for %@ with service type %@ account type %d
Push token for %@ with service type %@ account type %d
%@ not connecting to identityservicesd - no serviceName for config %@
Account %@ received registration status changed: %@
Account %@ received aliases changed: %@
Account received %@ vetted aliases changed
Account received %@ profile changed: %@
Account %@ received login changed: %@
Account received %@ displayName changed: %@
Account %@ received pseudonyms changed: %@
Account received %@ dependentDevicesUpdated %@
Account received %@ dependentDevicesUpdatedUponReconnect (devices count: %@)
Account received %@ localDeviceAdded %@
Devices updated %@
Account received %@ localDeviceRemoved %@
Account %@ received request to refresh registration
Cannot force remove an account that is not a temporary phone account: %@
Call made to deprecated IDSService API with service domain %{public}@
Called unimplemented function, please remove calls to %s
Unable to retrieve firewall, invalid service identifier -- failing {self: %@}
iCloud sign in with userName %@ authToken %@ password %@ accountInfo %@ status %@ and handles %@
iCloud sign out
iCloud update for userName %@ accountInfo %@
iCloud modify for userName %@
iTunes sign in with userName %@ authToken %@ password %@ accountInfo %@ status %@ and handles %@
iTunes sign out
GameCenter sign in with userName %@ authToken %@ password %@ accountInfo %@ status %@ and handles %@
GameCenter sign out
GameCenter modify for userName %@
IDS update user { oldUserName: %@, newUserName: %@ }
Instantiating %{public}@ from daemon -- returning
_IDSService - serviceWithIdentifier finished {serviceObject: %p}
Framework init with service, commands
_IDSService - initing {self: %p, service: %@, commands: %@, manualAck: %@}
No definition found for service: %@. IDSService cannot be created!
Framework init with service commands
_IDSService - deallocing {self: %p, serviceName: %@}
_IDSService - added delegate {self: %p, serviceName %@, listenerCaps %@, delegates: %lu, wantsPseudonymUpdates: %@}
_IDSService - removed delegate {self: %p, serviceName %@, delegate: %p}
Framework Daemon Connected
%@: OTRTestCallback: token is %@, setupTime is %.6f, error==nil is %d
%@ Switched active paired device for service name %@. deviceUniqueID: %@
Ignoring didSwitch callback for %@, mine is %@
%@ Update cache with active device
%@ Pre didSwitch call back block
%@ Notifying delegate %p of active device switch to %@ (delegateIdentifier %@)
%@ Pre devicesChanged call back block
%@ Notifying delegate %p of devices changing (devices %@)
%@ Pre linkedDevicesChanged call back block
%@ Notifying delegate %p of linked devices changing (devices %@)
%@ Group notify
Stopped suspending traffic to the daemon.
Service received %@ tinkerDeviceAdded (linkedDevices count: %@)
Linked devices updated %@
Service received %@ tinkerDeviceRemoved (linkedDevices count: %@)
Service received %@ tinkerDeviceUpdated (linkedDevices count: %@)
Service received %@ linkedDevicesUpdated (linkedDevices count: %@)
Connection map:
   %@ => %@
Tearing down connection for %@
activeAccountsChanged, oldSet: %@  newSet: %@
Calling active accounts changed %@ with delegate %p
*** dropping devicesChanged callback! -- accountsChanged
incomingOpportunisticData on connection guid %@ using engram %@ delegateCount %ld
Calling out to IDSService delegate %p for incomingOpportunisticData if it responds.
Done for IDSService delegate %p for incomingOpportunisticData - doesRespondToSelector? %@
incomingData on connection guid %@ using engram %@ delegateCount %ld
incomingData of size %lu on connection %@ account %@ from ID %@ sender-side-identifier %@
Calling out to IDSService delegate %p for incomingData if it responds.
Done for IDSService delegate %p for incomingData - doesRespondToSelector? %@
Context %@ WantsAppAck %@ AppAckGuid %@ storageGuid %@
Sending app-level ack dispatch called for message %@
incomingGroupData on connection guid %@ using engram %@ delegateCount %ld
incomingGroupData of size %lu on connection %@ account %@ from ID %@ sender-side-identifier %@
Error converting Group Data to ENGroup %@
No error returned however unable to create group from data (timeout?) %@, Original Data: %@
Received sentAhead group {groupID: %{public}@}
Group Share Persisted %@
Calling out to IDSService delegate %p for incomingAccessoryData if it responds.
Done for IDSService delegate %p for incomingAccessoryData - doesRespondToSelector? %@
Calling out to IDSService delegate %p for incomingAccessoryReportMessage if it responds.
Done for IDSService delegate %p for incomingAccessoryReportMessage - doesRespondToSelector? %@
Invalid state {%ld} received in incomingInvitation. Dropping invitation %@
incomingInvitation: created invitation object from incoming message : {%@}
Calling out to IDSService delegate %p for incomingInvitation if it responds.
Done for IDSService delegate %p for incomingInvitation - doesRespondToSelector? %@
Invalid state {%ld} received in incomingInvitationUpdate. Dropping invitation %@
incomingInvitationUpdate: created invitation object from incoming message : {%@}
Calling out to IDSService delegate %p for incomingInvitationUpdate if it responds.
Done for IDSService delegate %p for incomingInvitationUpdate - doesRespondToSelector? %@
Service recieved message
incomingMessage on connection %@ account %@ from ID %@  from device: %@  sender-side-identifier: %@
incomingMessage on connection guid %@ using engram %@ delegateCount %ld
Failed to consume sandbox extension! {errno: %d}
No sandbox extension for received resource [%@]
Given resource URL appears unacceptable! [%@]
Remove file success: %@, error: %@ (accessed %d)
Calling out to IDSService delegate %p for incomingResource if it responds.
Done for IDSService delegate %p for incomingResource - doesRespondToSelector? %@
Calling out to IDSService delegate %p for incomingResource with metadata if it responds.
Done for IDSService delegate %p for incomingResource with metadata - doesRespondToSelector? %@
Calling out to IDSService delegate %p for incomingMessage if it responds.
Done for IDSService delegate %p for incomingMessage - doesRespondToSelector? %@
Calling out to IDSService delegate %p for incomingMessage with context if it responds.
Done for IDSService delegate %p for incomingMessage with context - doesRespondToSelector? %@
Service finished calling out
Incoming protobuf %@, routing to selector/delegate. sender-side-identifier %@
Incoming protobuf on connection guid %@ using engram %@ delegateCount %ld
Found selector %@ fullSelector %@ for key 0x%x
 => Delgate %p responds to: %@, passing along protobuf: %p
   * Done handling
No selector for key 0x%x = type(%u) isResponse(%@), notifying delegates
 => Delgate %p responds unhandled protobuf passing along protobuf: %p
No delegate was registered that could handle protobuf %@
incomingTopLevelMessage on connection guid %@ using engram %@ delegateCount %ld
No delegates for incoming madrid message. Sending 115 for guid %@
Calling out to IDSService delegate %p for incomingTopLevelMessage if it responds.
Done for IDSService delegate %p for incomingTopLevelMessage - doesRespondToSelector? %@ guid: %@
Calling out to IDSService delegate %p for incomingPendingMessage if it responds.
Done for IDSService delegate %p for incomingPendingMessage - doesRespondToSelector? %@
DecryptedEngramData %@ %@
  {decryptedData.length: %{public}@}
Decrypting Engram Message, Org Payload %@
Failed decrypting Engram {error: %@, serviceName: %@}
isActiveChanged on connection %@ isActive %@
devicesChanged on connection %@ account %@ all devices %@ num delegates: %lu
*** dropping devicesChanged callback!
connectedDevicesChanged on connection %@ account %@ devices %@
%@ got messageIdentifier %@ callbackID %@ updatedWithResponseCode: %ld error %@ lastCall %@
%@ got messageIdentifier %@ callbackID %@ updatedWithResponseCode: %ld error %@ lastCall %@ sentBytes %@ totalBytes %@
%@ got identifier %@ callbackID %@ willSendToDestinations %@ skippedDests %@ regPropsToDests (count) %@
%@ got identifier %@ didSendWithSuccess %@  error %@ num delegates: %lu
%@ got identifier %@ hasBeenDeliveredWithContext %@
%@ didFlushCacheForRemoteURI %@ fromURI %@ guid %@
Sending up options to client: %@
Received group session participant update {service: %@, update: %@, context: %@}
Recieved did send opportunistic data {service: %@, identifier: %@, toIDs: %@}
Filtering account %@ with aliases %@  isActive? %@  canSend? %@
Linked devices before %@
Linked devices after %@
Adding linked IDSDevice %@
Linked devices updated with count %d
No URI found on any account -- returning nil {accounts: %@}
No account matched URI -- returning nil {URI: %@, accounts: %@}
provisionPseudonymForURI called {URI: %@, properties: %@, requestUUID: %@, self: %@}
No account matched pseudonym -- returning nil {pseudonym: %@, accounts: %@}
renewPseudonym called {pseudonym: %@, expiry: %f, requestUUID: %@, self: %@}
revokePseudonym called {pseudonym: %@, requestUUID: %@, self: %@}
finishedProvisioningPseudonym called but no block! {pseudonym: %@, success:%@, requestUUID: %@, error:%@, self: %@}
finishedProvisioningPseudonym called {pseudonym: %@, success:%@, requestUUID: %@, error:%@, self: %@}
finishedRenewingPseudonym called but no block! {pseudonym: %@, success:%@, requestUUID: %@, error:%@, self: %@}
finishedRenewingPseudonym called {pseudonym: %@, success:%@, requestUUID: %@, error:%@, self: %@}
finishedRevokingPseudonymWithSuccess called but no block {success:%@, requestUUID: %@, error:%@, self: %@}
finishedRevokingPseudonymWithSuccess called {success:%@, requestUUID: %@, error:%@, self: %@}
Told to diversify an invalid key type {options: %@, self: %@}
signData called {requestID: %@, data: %@, algo: %ld, options: %@, self: %@}
verifySignedData called {requestID: %@, signedData: %@, data: %@, uri: %@, algo: %ld, options: %@, self: %@}
finishedSigningForRequest called but no block! {requestUUID: %@, signedData: %@, error: %@, self: %@}
finishedSigningForRequest called {requestUUID: %@, signedData: %@, error: %@, self: %@}
finishedVerifyingSignedDataForRequest called but no block! {requestUUID: %@, sucess: %@, error: %@, self: %@}
finishedVerifyingSignedDataForRequest called {requestUUID: %@, sucess: %@, error: %@, self: %@}
No account matched to report with -- returning nil {fromURI: %@, accounts: %@}
reportApprovalOfURI called {tempURI: %@, fromURI: %@, requestID: %@, self: %@}
finishedReportingRequestUUID called but no block {requestUUID: %@, error:%@, self: %@}
finishedReportingRequestUUID called {requestUUID: %@, error:%@, self: %@}
Ignoring sub-services update, couldn't find active device
Ignoring sub-services update, couldn't find uniqueID for device %@
Triggering Internal resend of Sub Services to daemon
Framework Set Protobuf Action
Framework Get Protobuf Action
Attempting To Send message from account %@ to destinations %@
Sending message on a client that is not sandboxed!
Attempting to send on a non local account, this message is allowed to progress
Attempting to send to more than 1 destination, this message will fail in the daemon if necessary
Attempting to send to a remote destination from a local account, this is permited if proxy is permitted and will fail in the daemon if not
Client request to send opportunistic data {identifier: %@, options: %@, dataLength: %llu}
Client request to cancel opportunistic data {identifier: %@, serviceName: %@}
Framework Send Protobuf
!setState priority=%@
!setState destination=%@
Framework Send Data
!setState service=%@
Framework Send Accessory Data
!setState accessoryID=%@
Sending AccessoryData Now
sendAccessoryData - Could not find connection for account %@
sendAccessoryData - All accounts %@
sendInvitation - Service is not enabled for Invitations
sendInvitation - Could not find connection for account %@
sendInvitation - All accounts %@
sendInvitationUpdate - Service is not enabled for Invitations
sendInvitationUpdate - Could not find connection for account %@
sendInvitationUpdate - All accounts %@
setWakingPushPriority - invalid priority
sendServerMessage - Could not find connection for account %@
sendServerMessage - All accounts %@
FromID %@, strippedURI %@, token %@
Comparing device token %@ to token %@
Did not find a device matching the token %@
setPreferInfraWiFi: %@
setLinkPreferences: %{public}@
Received invalid link preferences
forceOTRNegotiation
Framework Send Resource At URL
!setState ResourceURL=%@
!setState serviceName=%@
sendResourceAtURL - resourceURL not a file %@
Attempted to link or copy file %@ destination %@ (%s to %@)
sendResourceAtURL - unable to link or copy file %@
sendResourceAtURL - resourceURL %@  isFileURL %@  localDelivery %@
Failed to issue sandbox extension for linked/copied file [%@]
Failed to issue sandbox extension for original file [%@]
Sending Ahead group {groupID: %{public}@}
sendMessage - Could not find connection for account %@
sendMessage - All accounts %@
sendMessage - Unable to send message to this destination from this account %@
No valid service identifier to report spam.
No spam message type specified.
Call made to manually ack a message, however this service does not support manually acking of messages
sendCertifiedDeliveryReceipt passing context to daemon { context: %@ }
sendCertifiedDeliveryReceipt context passed to incorrect service { context.service: %@, service: %@ }
sendCertifiedDeliveryReceipt given nil certified delivery context
Creating datagram channel with destination %@ => %@
Creating datagram channel with socket %d => %@
Failed to send group ahead {group: %@, error: %@}
Did send group ahead {group: %@ identifier: %@}
Enforcing sandbox policy...
%@ (initializing service %@) is not sandboxed but is in the sandbox allowlist.  Not enforcing sandbox policy.
ABORT: %@ (initializing service %@) IS NOT SANDBOXED
%@ (initializing service %@) is sandboxed
*** Account wants to drop devicesChanged callback {account.isTransientAllowlistedAccount: %@, account.isFirstGDRAllowlistedAccount: %@}
sendResourceAtURL - can't allocate %ld bytes for new file path
sendResourceAtURL - failed to clone file %@ => %@ (error %d). Will try hard link.
sendResourceAtURL - failed to link and failed to copy file %@ => %@ (error %@)
Clearing out _connection, we're disconnecting
Forcing a disconnect, terminating connection
No service %@, bailing...
No block %p, bailing...
Cache request for service %@
transactionID map after ADD %@
Sending cache request for service %@ transactionID %@
transactionID map after REMOVE %@
Could not create message for cache query
No listenerID %@, bailing...
Cached ID status request (destinations: %@)  (service: %@)  (listenerID: %@)  (transactionID: %@)
No destinations, not issuing query...
Received cached id status {destinations: %@, service: %@, error: %@}
ID status renewal request (destinations: %@)  (service: %@)  (listenerID: %@)  (transactionID: %@)
Received id status {destinations: %@, service: %@, error: %@}
ID remote device request (destination: %@)  (service: %@)  (listenerID: %@)  (transactionID: %@)
No message to send %@, ignoring...
Query service disconnected
Error requesting client: %@
No connection to send message on
%s called with a nil completion -- returning
Requesting selected subscriptions with completion
%s called with nil subscription -- returning
Selecting subscription with completion {subscription: %@}
Unselecting subscription with completion {subscription: %@}
Setting selected subscriptions with completion {subscriptions: %@}
%s called with nil alias -- returning
Removing temporary phone alias with completion {alias: %@}
Error fetching registration collaborator {error: %@}
Disabling temporary phone alias with completion {alias: %@}
Enabling temporary phone alias with completion {alias: %@}
Requesting unselected temporary phone aliases with completion
Requesting selected subscriptions synchronously
Selecting subscription synchronously
Unselecting subscription synchronously
Setting selected subscriptions synchronously
Removing temporary phone alias synchronously {alias: %@}
Enabling temporary phone alias synchronously {alias: %@}
Disabling temporary phone alias synchronously {alias: %@}
Requesting unselected temporary aliases synchronously
Error fetching sync registration collaborator {err: %@}
handleGroupSessionKeyValues: keyValues is not a dictionary. Is: %@
handleGroupSessionKeyValues: received dictionary %@
handleGroupSessionKeyValues: remoteParticipantIDToData is not a dictionary for key:%@ data: %@
handleGroupSessionKeyValues: key %@
handleGroupSessionKeyValues: invalid participantID for key:%@ participantID:%@
handleGroupSessionKeyValues: key:%@ participantID:%@
handleGroupSessionKeyValues: invalid value for key:%@ participantID:%@ value:%@
handleGroupSessionKeyValues: key:%@ participantID:%@ data:%@
IDSGroupSessionKeyValueDelivery init: %@
failed to get keyValueDelivery for session %@: %@
keyValueDelivery: %@
removeDeliveryHandler: could not find proxy for handler %@
sendData: sending key: %d for capability: %@
sendData: finished sending key: %d for capability:%@
Alloc'ing IDSXPCConnection {remoteObject: %{public}@, pointer: %p}
IDSXPCConnection interrupted
IDSXPCConnection invalidated
Dealloc'ing IDSXPCConnection {remoteObject: %{public}@, pointer: %p}
transaction finished -- calling invoke {selector: %{public}@, uuid: %{public}@}
TransactionUUID missing from pendingTransactions --  Skipping invoke {selector: %{public}@, uuid: %{public}@}
Dropping all pending transactions {pendingTransaction: %{public}@, remoteObject: %{public}@, pointer: %p}
Alloc'ing IDSXPCConnectionTimeoutProxy {target: %{public}@, connection: %{public}@, pointer: %p}
Dealloc'ing IDSXPCConnectionTimeoutProxy {target: %{public}@, connection: %{public}@, pointer: %p}
xpc message timed out -- calling error {selector: %{public}@, uuid: %{public}@, timeout: %{public}@}
Clearing transaction timeout timer {selector: %{public}@, uuid: %{public}@}
Starting timeout for xpc message {selector: %{public}@, uuid: %{public}@, timeout: %{public}@}
Received device state note {uniqueID: %@, weakSelf: %p, nearbyID: %@}
Device note -- old: {isNearby: %d, isConnected: %d, isCloudConnected: %d} new: {isNearby: %d, isConnected: %d, isCloudConnected: %d}
Client request to set uuid %@ on device %@
  => Device doesn't support it, ignoring
Nearby triggering nearbyDevicesChanged on account %p %@
Connected triggering connectedDevicesChanged on account %p %@
Cloud connected triggering cloudConnectedDevicesChanged on service %p %@
State change triggering linkedDevicesChanged on service %p %@ for device: %@
Purging idStatusCache
Sending ID status update (%d) for service %@ destination %@
No destinations, bailing...
No service, bailing...
No listenerID, bailing...
No query complete block, bailing...
Received results for service: %@  updates %@
No completion block, bailing...
No queue, bailing...
No listener ID, bailing...
Destination "%@" not found in id query results %@. Verify destination is a properly formed IDS destination (and not just the handle string).
Received results for service: %@  updates {%@}
_warmupQueryCacheForService:  (service: %@)
No service name, bailing...
Received cache for service %@, %d count
_flushQueryCacheForService:  (service: %@)
addDelegate:forService:listenerID:queue:  (delegate: %p)   (service: %@)   (listenerID: %@)   (queue: %p)
Invalid add delegate params -- bailing...
Listeners after ADD %@
removeDelegate:forService:listenerID:  (delegate: %p)   (service: %@)   (listenerID: %@)
Invalid remove delegate params -- bailing...
Listeners after REMOVE %@
start stats timer %p.
stop stats timer %p.
Will skip daemon link for link %d, disableDaemonFallback is enabled.
LinkID %d associated with direct connection %@
LinkID %d unassociated with direct connection %@
LinkID %d associated with LinkContext %@
Dumping link contexts and direct connections
<%p> -- connection %@ link context %@
Found empty connection for link context %@
Cleaning up left over connection %@ for link context %@
 Warning ! Could not find mappedParticipant:%llu in linkID %d dictionary:%@
 Warning ! Could not find mappedParticipant:%lld in linkID %d dictionary:%@
received baseband notification packet.
DCR %zdB (%c %d)
DCR %zdB (%c %d/%d)
_processIncomingDatagram: IDSHBHDecryptDataWithKey failed!
Error in _processIncomingDatagram: StunUtilProcessIncomingChannelData returned false.
addDirectConnectionForLinkID: linkID has to be greater than 0.
addDirectConnectionForLinkID child connection already created previously: %@
addDirectConnectionForLinkID missing child connection ID - skip for now
addDirectConnectionForLinkID missing child connection ID - skip for now.
addDirectConnectionForLinkID create connection (%c) with client ID %@ for linkContext %@
addDirectConnectionForLinkID failed to create child connection
addDirectConnectionForLinkID: nexus is not supported for path :%@.
addDirectConnectionForLinkID connection event %s for %@
<%p> addDirectConnectionForLinkID linkID: %d %@
<%p> addDirectConnectionForLinkID - associating connection %@ from linkID %d with virtual linkID %d
<%p> removeDirectConnectionForLinkID linkID: %d
<%p> connectionForLinkID - disabled with DisableDirectConnectionSend
Direct connection is invalidated. Skipping <%@> direct read.
<%@> direct read failed %d due to datagram_count 0 - removing direct connection
 ** direct reading (%c) linkID %d connection <%p> packet %u/%u datagram length %zu
packet:
_makeDirectPacketBufferFromDatagram: datagramSize is %u, and exceeds IDSLinkPacketBuffer limit
_makeDirectPacketBufferFromDatagram: datagramSize has no data
_makeDirectPacketBufferFromDatagram: wrong linkID %d.
_makeDirectPacketBufferFromDatagram: IDSHBHEncryptDataWithKey failed!
_makeDirectPacketBufferFromDatagram: encryptedData length is greater than maxBufferLength!
QuickRelayHeaderDebug _makeDirectPacketBufferFromDatagram: packetBufferSize is %zd, result:%d, channel number:%d
_sendStatsRequestViaDaemon: invalid stats data, return
_sendStatsRequestViaDaemon: serialized metadata size: %lu, greater than max allowed sent size, return
DCW failed for %d packet(s), %uB (%d).
DCW %uB/%1d (%c %d)
DCW %uB/%1d (%c %d/%d)
 ** direct write (%c) linkID %d connection <%p> error %d datagram length %u
packet:
<%@> direct write failed error_number %d calling completion handler %p
Simulator Proxy metadata connection waiting
Simulator Proxy metadata connection failed
Simulator Proxy metadata connection is ready
Simulator Proxy metadata connection is cancelled
Sending Metadata: %@
Metadata reply received: %@
<%p> Creating with socket %d
<%p> Creating with destination %@
<%p> Invalid operation mode value %ld - defaulting to IDSDatagramChannelOperationModeFileDescriptor
<%p> Got IDSDatagramChannelNWContextKey %@ from client.
<%p> Invalid preferred data path value %ld - defaulting to IDSDatagramChannelDataPathThroughIDSDaemon
<%p> Shared direct data path not compatible with file descriptor mode - defaulting to IDSDatagramChannelDataPathThroughIDSDaemon
<%p> Operation mode %@ (%d) preferred datapath %@ (%d)
proc_pidinfo for pid %d returned client unique PID %llu
proc_pidinfo for pid %d failed (errno: %d)
invalid operation mode %d
-dealloc called for %@
<%@> sent the first data packet (size: %lu)
<%@> TX %f bytes/s %f packets/s
<%@> received the first data packet (size: %lu)
<%@> RX %f bytes/s %f packets/s
-underlyingFileDescriptor called for %@
<%@> first read, will send dummy link information
<%@> dummy link information
removeIDSDataChannelLinkContext: connection already closed
<%@>  removeIDSDataChannelLinkContext:%u, linkContexts %@
<%@> Can't find the linkContext of linkID %u, linkContexts %@
<%@> sent IDSDataChannelEventDisconnected, linkID %u, linkContexts %@, reason: %d
invalid link attribute size (%u), too small.
Got relay server provider:%d, session token:%dB, session key:%dB
Got hbhEncryptionkey:%@ and hbhDecryptionkey:%@
This is a virtual relay link(%u). Copying over attributes from delegated link(%u)
Copied relay server provider:%d, session token:%dB, session key:%dB
Copied hbhEncryptionkey:%@ and hbhDecryptionkey:%@
<%@> got connectedLinkID %d (link family:%u) (mtu:%u) (l-conn:%u) (l-RAT:%u) (l-flags:0x%x) (l-dataSoMask: %u) (r-conn:%u) (r-RAT:%u) (r-flags:0x%x) (r-datasoMask:%u) isVirtualRelayLink: %@, childConnectionID: %@, channelNumber: %04X (Current LinkContexts %@
addDirectConnectionForLinkID: request child connectionID for linkID %d
<%@> sent IDSDataChannelEventConnected, current link contexts %@
can't find link %d for the default
<%@> sendMediaEncryptionEventInfo MKM:%{private}@, MKS:%{private}@, MKI:%{private}@ locally generated:%{private}@ encryptionSequenceNumber:%{private}@
<%@> sendMediaMembershipChangedInfo membershipChanged:%u
processMetadataForDatagram datagramSize(%zd) <= kIDSClientChannelMetadataLengthSize - returning
processMetadataForDatagram %d + metadataSize(%zd) > datagramSize(%zd) - returning
got PacketLinkID %d
kClientChannelMetadataType_PacketLinkID should be 1 byte, not %u bytes, field: %u
got trafficClass %u
kClientChannelMetadataType_TrafficClassKey should be %d bytes, not %u bytes, field: %u
got DSCP %u
kClientChannelMetadataType_DSCPKey should be %d bytes, not %u bytes, field: %u
got arrivalTime %f
kClientChannelMetadataType_PacketArrivalTime should be %d bytes, not %u bytes, field: %u
got invalid streamIDCount %d
got streamIDCount %d
got streamID bytes:%@
kClientChannelMetadataType_StreamIDsKey: size mismatch (%u != %u), ignore.
got Channel Priority %u
kClientChannelMetadataType_PriorityKey should be 1 byte, not %u bytes, field: %u
got CT(packet counting) option
kClientChannelMetadataType_CountPacketKey  should be 1 byte, not %u bytes, field: %u
kClientChannelMetadataType_GenerationCounterLSBKey should be 1 byte, not %u bytes, field: %u
got probeGroupID %u
kClientChannelMetadataType_ProbeGroupIDKey should be 2 bytes, not %u bytes, field: %u
got Participant ID %llu
error: we received Participant ID %llu
kClientChannelMetadataType_ParticipantID should be 8 byte, not %u bytes, field: %u
got disconnectedLinkID %d, linkUUID %@, reason: %d
kClientChannelMetadataType_LinkDisconnected should be %d byte, not %u bytes, field: %u
got defaultLinkID %d
kClientChannelMetadataType_DefaultLinkID should be 1 byte, not %u bytes, field: %u
got ratType %u
kClientChannelMetadataType_RATChanged requires the cellular link. something is wrong...
kClientChannelMetadataType_RATChanged should be 1 bytes, not %u bytes, field: %u
got preConnectionDataSize %u
kClientChannelMetadataType_PreConnectionDataSizeKey should be 1 bytes, not %u bytes, field: %u
kClientChannelMetadataType_PreConnectionDataKey got wrong size (%u > %u)
got preConnectionData, called IDSDataChannelEventPreConnectionData event
kClientChannelMetadataType_PreConnectionDataKey should know its size
<%@> sent IDSDataChannelEventRSSI (%u, %u, %u)
kClientChannelMetadataType_QueryRSSI should be %u, not %u bytes, field: %u
kClientChannelMetadataType_GetLinkStatusKey - invalid fieldBytesSize: 0
kClientChannelMetadataType_GetLinkStatusKey - invalid totalLinkIDs: 0
kClientChannelMetadataType_GetLinkStatusKey - no valid currentLinkIDCount
kClientChannelMetadataType_GetLinkStatusKey - no valid linkID
kClientChannelMetadataType_GetLinkStatusKey: linkID: %d, no valid timestamp
kClientChannelMetadataType_GetLinkStatusKey: linkID: %d, no valid reorderedPackets
kClientChannelMetadataType_GetLinkStatusKey: linkID: %d, no valid probingRequests
kClientChannelMetadataType_GetLinkStatusKey: linkID: %d, no valid probingResponses
kClientChannelMetadataType_GetLinkStatusKey: linkID: %d, no valid offsetAndRTTCount
kClientChannelMetadataType_GetLinkStatusKey: linkID: %d, no valid requestOffset, i: %d
kClientChannelMetadataType_GetLinkStatusKey: linkID: %d, no valid rtt, i: %d
kClientChannelMetadataType_ProbingRequestOffsetKey - total size: %lu, all keys: %@, output: %@
kClientChannelMetadataType_MaxBitrateKey should be %u, not %u bytes, field: %u
got MTU %u
kClientChannelMetadataType_CellularMTUChanged requires the cellular link. something is wrong...
kClientChannelMetadataType_CellularMTUChanged should be %u bytes, not %u bytes, field: %u
kClientChannelMetadataType_InfoReportKey report %@
kClientChannelMetadataType_InfoReportKey should be bigger than %u bytes.
kClientChannelMetadataType_EncryptionMKMKey got MKM %@ size %u
kClientChannelMetadataType_EncryptionMKSKey got MKS %@ size %u
kClientChannelMetadataType_EncryptionMKIKey got MKI %@ size %u
kClientChannelMetadataType_EncryptionLocallyGeneratedInfoKey should be 1 byte, not %u
kClientChannelMetadataType_EncryptionMembershipChangedKey should be 1 byte, not %u
kClientChannelMetadataType_SessionReinitiated - IDSDSession is reinitiated
kClientChannelMetadataType_SessionReinitiated should be 1 byte, not %d
kClientChannelMetadataType_SessionInfoKey - Couldn't get NSData from fieldBytes
kClientChannelMetadataType_SessionInfoKey - Couldn't decode NSData %@ (error: %@)
kClientChannelMetadataType_SessionInfoKey - %@
kClientChannelMetadataType_SessionInfoResponseErrorKey errorCode %u
kClientChannelMetadataType_SessionInfoResponseErrorKey should be %u byte, not %u
kClientChannelMetadataType_StatsKey - Couldn't get NSData from fieldBytes
kClientChannelMetadataType_StatsKey - Couldn't decode NSData %@
kClientChannelMetadataType_StatsKey - %@
kClientChannelMetadataType_StatsID should be %u byte, not %u
kClientChannelMetadataType_StatsServerTimeStamp should be %u byte, not %u
kClientChannelMetadataType_StatsServerPacketInterval should be %u byte, not %u
kClientChannelMetadataType_StatsTotalServerPacketReceived should be %u byte, not %u
kClientChannelMetadataType_StatsTotalServerPacketSent should be %u byte, not %u
kClientChannelMetadataType_StatsUplinkBandwidth should be %u byte, not %u
kClientChannelMetadataType_DebugDataTransferTypeKey should be 1 byte, not %u
kClientChannelMetadataType_OptOutPriorityFilter should be 1 byte, not %u bytes, field: %u
kClientChannelMetadataType_TransitionPacketFlag should be 1 byte, not %u bytes, field: %u
kClientChannelMetadataType_nwPathWiFiFlagsChanged got wifiLocalAttributes: %u
send event to client about kClientChannelMetadataType_nwPathWiFiFlagsChanged, wifiLocalAttributes: %u
kClientChannelMetadataType_nwPathWiFiFlagsChanged should be %u bytes, not %u bytes, field: %u
kClientChannelMetadataType_nwPathCellularFlagsChanged got cellularLocalAttributes: %u
send event to client about kClientChannelMetadataType_nwPathCellularFlagsChanged, cellularLocalAttributes: %u
kClientChannelMetadataType_nwPathCellularFlagsChanged should be %u bytes, not %u bytes, field: %u
kClientChannelMetadataType_DebugDataTransferKey got data size %u
kClientChannelMetadataType_SoMaskChanged got SoMask: %u
send event to client about kClientChannelMetadataType_SoMaskChanged, SoMask: %u
kClientChannelMetadataType_SoMaskChanged should be %u bytes, not %u bytes, field: %u
kClientChannelMetadataType_NeedsHBHEncryption should be %u byte, not %u
kClientChannelMetadataType_EncryptionSequenceNumber got %llu (*Client <- IDSD)
kClientChannelMetadataType_EncryptionSequenceNumber should be %u bytes, not %u bytes, field: %u
kClientChannelMetadataType_LinkSuggestion - Couldn't get NSData from fieldBytes
kClientChannelMetadataType_LinkSuggestion - Couldn't decode NSData %@ (error: %@)
kClientChannelMetadataType_LinkSuggestion - %@
kClientChannelMetadataType_RetransmittedPacket should be %u byte, not %u
kClientChannelMetadataType_NonRetransmittablePacket should be %u byte, not %u
kClientChannelMetadataType_EventReportingBlob - Couldn't get NSData from fieldBytes
kClientChannelMetadataType_EventReportingBlob - Couldn't decode NSData %@ (error: %@)
kClientChannelMetadataType_EventReportingBlob - %@
kClientChannelMetadataType_ParticipantMappingReplacment - Couldn't get NSData from fieldBytes
linkID %d, got kClientChannelMetadataType_ParticipantMappingReplacment: %@
kClientChannelMetadataType_ParticipantMappingReplacment - Couldn't decode NSData.
kClientChannelMetadataType_ParticipantMappingUpdate - Couldn't get NSData from fieldBytes
linkID %d, got kClientChannelMetadataType_ParticipantMappingUpdate: %@
kClientChannelMetadataType_ParticipantMappingUpdate - Couldn't decode NSData.
addDirectConnectionForLinkID: received child connectionID for linkID %d
kClientChannelMetadataType_ChildConnectionID should be %u bytes, not %u bytes
Unknown metadata type: %u
_extractDictionaryFromData - Couldn't decode NSData, error:%@, extractedDataType:%@
readFromNWConnection: _internal->_connection: Only has statsID: %x
<%@> read details: datagramSize %ld metadataSize %ld dataOffset %ld [%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x ...]
<%@> read details: datagramSize %ld metadataSize %ld dataOffset %ld
<%@> read sanity check failed: datagramSize %ld metadataSize %ld dataOffset %ld
<%@> read failed %d due to datagram_count 0 - calling event handler %p
 ** reading %u packets remaining: mapped %p length %zu hasMetadata %u
<%@> read nonfatal failure errno %d
<%@> read failed errno %d calling event handler %p
<%@> read returned 0 bytes calling event handler %p
-close called for %@
-invalidate called for %@
<%@> cannot start datagram channel with no socket and no connection
<%@> nw_connection_create_with_connected_socket failed. socketDescriptor %d might be invalid.
-start called for %@
<%@> got event connected and calls event handler %p
<%@> got event error %@ and calls event handler %p
<%@> got event disconnected with error %@ and calls event handler %p
Not enough packet buffer space. Space left %lu datagram size %u metadata size %u
<%@> write linkID %d error_number %d calling completion handler %p dataCreateTime %0.6lf writeTime %0.6lf [%013.6lf]
<%@> write failed error_number %d calling completion handler %p
<%@> write failed to send all bytes %d < %d
<%@> write returned 0 - connection terminated
<%@> write nonfatal failure errno %d
<%@> write failed errno %d
-setEventHandler called for %@
-setReadHandler called for %@
-setReadHandlerWithOptions called for %@
-setWriteCompletionHandler called for %@
<%@> does not have readHandler!
<%@> sendMetadata: not connected yet - tearing down or waiting for -start
<%@> write details: metadataSize %ld
<%@> write error_number %d calling setChannelPreferences
<%@> write failed error_number %d calling setChannelPreferences
<%@> write done for setChannelPreferences
<%@> setChannelPreferences dictionary: %@
<%@> IDSDataChannelPreferencePreConnectionDataKey - %@, _waitForPreConnectionDataForConnected? %@
<%@> client channel connection is not ready. Wait to send preConnectionData
<%@> IDSDataChannelPreferenceDefaultLinkSelectionKey - linkID:%d
<%@> IDSDataChannelPreferenceBasebandRegistrationKey - linkID:%d, reg_key:%u registerOperation:%u
<%@> IDSDataChannelPreferenceBasebandQueueFlushKey - %@
<%@> IDSDataChannelPreferenceDiscardLinkIDsKey - %@
<%@> IDSDataChannelPreferenceUpdateQualityOfServiceKey - LinkID: %d, %@
<%@> IDSDataChannelPreferenceQueryInformationKey - queryType: %d
<%@> IDSDataChannelPreferenceSetMaxBitrateKey - maxBitrate: %u for LinkID: %d
<%@> IDSDataChannelPreferenceRemoteDeviceVersionKey - remoteDeviceVersion: %u
<%@> kClientChannelMetadataType_ProcessIDKey - %d
<%@> kClientChannelMetadataType_RemoteDeviceVersionKey remoteDeviceVersion: %u
<%@> kClientChannelMetadataType_BasebandQueueFlushPayloadSizeKey %u
<%@> kClientChannelMetadataType_DiscardLinkIDsKey the maximum of links is %d
<%@> kClientChannelMetadataType_PreConnectionDataSizeKey %u
<%@> kClientChannelMetadataType_PreConnectionDataKey %@
<%@> kClientChannelMetadataType_UpdateQoSIsGoodKey IsGood:%@ LinkID:%d
<%@> kClientChannelMetadataType_QueryRSSI
<%@> kClientChannelMetadataType_MaxBitrateKey maxBitrate:%u LinkID:%d
<%@> IDSDataChannelPreferenceNeedsEncryptionInfoKey - we'll request the encryption info
<%@> kClientChannelMetadataType_ForceUpdateEncryptionInfoKey - we'll update the encryption info.
<%@>: setWiFiAssist: %@
<%@>: startActiveProbingWithOptions: invalid probing Data, return
<%@>: startActiveProbingWithOptions: serialized metadata size: %lu, greater than max allowed sent size, return
<%@>: startActiveProbingWithOptions: %@ size: %lu
<%@>: stopActiveProbingWithOptions: invalid probing Data, return
<%@>: stopActiveProbingWithOptions: serialized metadata size: %lu, greater than max allowed sent size, return
<%@>: stopActiveProbingWithOptions: %@ size: %lu
<%@>: flushLinkProbingStatusWithOptions: invalid probing options, return
<%@>: flushLinkProbingStatusWithOptions: serialized metadata size: %lu, greater than max allowed sent size, return
<%@>: flushLinkProbingStatusWithOptions: %@ size: %lu
<%@>: queryStatusWithOptions: invalid query options, return
<%@>: queryStatusWithOptions: serialized metadata size: %lu, greater than max allowed sent size, return
<%@>: queryStatusWithOptions: %@ size: %lu
<%@>: setUPlusOneMode: %@ isInitiator: %@
<%@>: startMKMRecoveryForParticipantIDs: %@
<%@>: startMKMRecoveryForParticipantIDs: invalid participantIDs size
<%@>: startMKMRecoveryForParticipantIDs: metadata size: %lu, greater than max allowed sent size, return
<%@>: startMKMRecoveryForParticipantIDs: %@, %@ size: %lu
%@: requestSessionInfoWithOptions: %{private}@ size: %lu
Could not reportDictionary with type %d because dictionary is too large
%@: reportMKIArrival: mki %@ at %@
%@: reportFirstIncomingPacketTimeForMKI: first incoming packet for mki %@ at %@
%@: reportFirstOutgoingPacketTimeForMKI: first outgoing packet for mki %@ at %@
storing encryption sequence number: %llu (*Client -> IDSD)
Client setup service -- checked in {service: %@}
Client setup service -- failed check in! {service: %@}
Finalized check in -- finishing {service: %@}
Client received xpc-wake event -- storing {service: %@, description: %s}
Adding listener ID: %@   for service: %@
Removing listener ID: %@   for service: %@
Client ID status to refresh ID status for destinations %@  on service: %@   from listenerID: %@
Client %@ is attempting to send more than a reasonable amount of URI's in a query {count: %lu}
Client ID status to force refresh ID status for destinations %@  on service: %@   from listenerID: %@
Client ID status to refresh ID status for destination %@  on service: %@   from listenerID: %@
Client ID status for required ID status for destinations %@  on service: %@   from listenerID: %@
Client ID status for required ID status for destination %@  on service: %@   from listenerID: %@
Client ID Info Request for destinations %@ on service: %@ from listenerID: %@ with infoTypes: %llu
Client requesting to warmup the query cache for service: %@
Client requesting to flush the query cache for service: %@
** BLOCKING Client ID status to refresh ID status for destination %@  on service: %@   from listenerID: %@
** BLOCKING Client ID status to refresh ID status for destinations %@  on service: %@   from listenerID: %@
  => Done: %f
** BLOCKING Client ID status cache request for destination %@  on service: %@ respectExpiry: %@   from listenerID: %@
** BLOCKING Client ID status cache request for destinations %@  on service: %@ respectExpiry: %@   from listenerID: %@
Client Remote Device Request for destinations %@  on service: %@   from listenerID: %@
** BLOCKING  Client Remote Device Request for destinations %@  on service: %@   from listenerID: %@
Client ID status request for destinations %@  on service: %@   from listenerID: %@
Client ID status request for destination %@  on service: %@   from listenerID: %@
Disconnected from daemon, notifying client of session %@
%@: Empty unique ID
%@: Empty account ID
%@: Empty destinations set
%@ - existing socket pair, ignoring request to create
Setting up socket pair to daemon
%@ - %@ %d (%s)
Sending allocation request with options %@
Sending Session Invitation with options %@
Sending Session Invitation with data (%lu bytes), declineOnError %@
Sending Session Invitation Cancel
Sending Session Invitation Cancel with data (%lu bytes)
Sending Session Invitation Cancel with Reason %u
Sending Session Invitation Accept
Sending Session Invitation Accept with data (%lu bytes)
Sending Session Invitation Decline
Sending Session Invitation Decline with data (%lu bytes)
Skipping destination %{private}@, which is not in this session's list of destinations: %{private}@
Asked if shouldUseSocketForTransport %@
%@ - Session not connected can't send data yet, ignoring...
%@ - No socket pair connection setup, ignoring...
%@ - No data to send, ignoring...
Sending data Client -> Daemon  (hash: %lu)  (length: %lu)
Session accept received fromID %@ sessionID %@ with data %@
Ignoring accept, session doesn't match %@ vs. %@
Session decline received fromID %@ sessionID %@ with data %@
Ignoring decline, session doesn't match %@ vs. %@
Session cancel received fromID %@ sessionID %@ with data %@
Ignoring cancel, session doesn't match %@ vs. %@
Session message received fromID %@ sessionID %@ with data %@
Ignoring message, session doesn't match %@ vs. %@
Session end received fromID %@ sessionID %@ with data %@
Ignoring end, session doesn't match %@ vs. %@
Session %@ invitation sent to tokens %@ shouldBreakBeforeMake %@
Ignoring session:invitationSentToTokens:, session doesn't match %@ vs. %@
Ignoring session started, session doesn't match %@ vs. %@
Session started for IDSSessionID: %@
Session ended %@ with reason %d error %@
Ignoring session ended, session doesn't match %@ vs. %@
Session audio enabled ? %@
Ignoring audioEnabled, session doesn't match %@ vs. %@
Session muted ? %@
Ignoring muted, session doesn't match %@ vs. %@
Ignoring xpc object, session doesn't match %@ vs. %@
Received initial link type %d for session %@ with error %@.
Received invalid initial link type xpc object for session %@ with error %@.
Received invalid xpc object type: %@.
Session %@ received the report: %@
UNRL: Received data Daemon -> Client  (data hash: %lu)  (length: %lu)
Daemon Interfaced Group context controller starting up
Error fetching sync activity monitor collaborator {err: %@}
Error fetching activity monitor collaborator {error: %@}
No delegate, bailing...
Client request to invalidate: %@
Scheduling next batch in %f
setDestinations %@
We're dead, bailing
Destinations are the same, bailing
Setting time of death to %@
Received cached results %@
Received 0 cached results, query all destinations
 * Next query timer hit: %@
We're dead, not querying: %@
We've reached the max number of queries for this batch, not adding anymore: %@
We've reached the max number of queries, not adding anymore: %@
Received results %@
We've reached the max number of queries, possibly deferring queries: %@ %@
Invalidating next query timer: %@
Calling out to old delegate %p
Calling out to old delegate %p for service %@
Returning results to delegate %p
No delegate %p or queue %p
-[IDSServiceMonitor init] {self: %p, service: %@}
-[IDSServiceMonitor dealloc] {self: %p}
-[IDSServiceMonitor _updateAvailability] {self: %p, state: %llu, previousAvailability: %llu}
IDSTransactionLogSync
Got token
!setState Token=%@
failed to get token {error: %@}
Fetching messages
!addState moreComing=%@
Persisted token
moreComing -- continue
No more coming -- done
Failed to persist token {token: %@, error: %@}
Failed to ingest messages {error: %@}
Failed to fetch messages {error: %@}
got transaction messages from transport messages {transactionMessages.count: %ld, transportMessages.count: %ld}
Failed to get transaction messages from transport messges {transportMessages: %{private}@, participants: %{private}@, groups: %{private}@, error: %{public}@}
Failed to get groups or participants {error: %{public}@}
Failed to get account information {error: %{public}@}
Fetching participants/groups for deviceMessges {deviceMessages.count: %ld, groupMessages.count: %ld}
Got participants {participants.count: %ld, destinations: %ld}
Error getting participants from device messages {error: %{public}@, participants: %{private}@, deviceMessages: %{private}@}
Got groups {groups.count: %ld, groupIDs.count: %ld}
Error getting groups from group messages {error: %{public}@, groups: %{private}@, groupMessages: %{private}@}
Error getting groups or participants {error: %{public}@}
Failed to decrypt device message {error: %{public}@}
Failed to get account for recipient alias {alias: %{private}@, accounts: %{private}@, message: %{private}@}
Message missing sender/recipient alias {senderAlias: %{private}@, recipientAlias: %{private}@, message: %{private}@, senderAlias==nil: %{public}@, recipientAlias==nil: %{public}@}
-[IDSContinuity initWithDelegate:queue:]
v8@?0
-[IDSContinuity startTrackingPeer:]
-[IDSContinuity stopTrackingPeer:]
__kIDSDaemonDidConnectNotification
__kIDSDaemonWillConnectNotification
__kIDSDaemonDidDisconnectNotification
__k_IDSDaemonDidDisconnectNotification
__k_IDSDaemonDidConnectNotification
__kIDSDaemonConnectionLostNotification
QueryWithReplySync
QueryWithReply
IDSDaemonControllerContext
com.apple.IDSDaemonControllerIvarQueue
com.apple.IDSDaemonControllerQueue
com.apple.IDSDaemonControllerConnectingQueue
listenerID
services
commands
notificationServices
bundleID
processName
agentRequested
v16@?0@"NSObject<OS_xpc_object>"8
v28@?0@"IMRemoteObject"8@"NSDictionary"16B24
Caught exception: %@   name: %@   reason: %@   userInfo: %@ in function: %s
-[IDSDaemonController _makeConnectionWithLaunch:completionBlock:]_block_invoke
-[IDSDaemonController _disconnectFromDaemonWithForce:]_block_invoke
com.apple.private.alloy.pbbridge
com.apple.private.alloy.accountssync
v32@?0@8@16^B24
-[IDSDaemonController setCurXPCMessagePriority:]
-[IDSDaemonController curXPCMessagePriority]
-[IDSDaemonController addedDelegateForService:withCompletion:]_block_invoke
xpc-object
object
object-context
com.apple.identityservices.xpc
accountsd
SyncReplySupport
LengthOnlyHeaderProtocol
i16@?0@"NSObject<OS_nw_framer>"8
Q16@?0@"NSObject<OS_nw_framer>"8
Q28@?0*8Q16B24
v36@?0@"NSObject<OS_nw_framer>"8@"NSObject<OS_nw_protocol_metadata>"16Q24B32
KTVerificationInfo
Class getKTVerificationInfoClass(void)_block_invoke
IDSXPCKeyTransparency.m
Unable to find class %s
void *TransparencyLibrary(void)
KTLoggableData
Class getKTLoggableDataClass(void)_block_invoke
KTSelfVerificationHealableErrors
Class getKTSelfVerificationHealableErrorsClass(void)_block_invoke
firewall-uri
firewall-lastseen
firewall-mergeid
firewall-isdonated
<IDSFirewallEntry %p>: uri %@ lastSeen %@ isDonated %@ mergeID %@
__kIDSKeyRollingCompleteNotification
IDSSecurityKeyRollingRollKeys
IDSSecurityKeyRolling.m
!_IDSRunningInDaemon()
IDSSecurityKeyRollingRegenerateRegisteredIdentity
socket failed, errno: %d
gethostbyname failed, errno: %d
connect failed, errno: %d
IDSLocalSetupStart
IDSLocalSetup.m
IDSLocalSetupCompleted
IDSLocalSetupStop
IDSLocalSetupUnpair
IDSLocalSetupUnpairStart
IDSAddPairedDevice
IDSConfigureDemoMode
DemoModeConfig
12345678-0000-DADA-DADA-DEADBEEEEEEE
IDSConnectPairedDevice
IDSDeletePairedDevice
IDSDeletePairedDeviceWithCompletion
v16@?0@"NSDictionary"8
IDSDeletePairedDeviceWithCompletionBlock
IDSGetPairedDevicesWithCompletionBlock
IDSGetPairedDevices
IDSGetDeliveryStatsWithCompletionBlock
IDSInitialLocalSyncStarted
IDSInitialLocalSyncCompleted
IDSInitialLocalSyncStartedForServices
IDSInitialLocalSyncCompletedForServices
IDSIncomingAccountSyncMessage
IDSSetAllowedTrafficClassifiersForDevice
IDSGetAllowedTrafficClassifiersForDevice
IDSDropAllMessagesWithoutAnyAllowedTrafficClassifier
ids-dm-iri
ids-dm-ori
ids-dm-sqnm
ids-dm-spmf
ids-dm-tc
ids-dm-afsqnm
ids-dm-cd
ids-dm-cm
ids-dm-cpb
ids-dm-snd-params
ids-dm-options
ids-dm-snd-time
ids-dm-msg-id
ids-dm-msg-guid
com.apple.private.alloy.
<unknown>
[%llu 
-[IDSDirectMessageConnection setDestinationDevice:]
IDSDirectMessageFireAndForget
-[IDSDirectMessageConnection isMessageEligible:options:destinationDevice:]
-[IDSDirectMessageConnection updateConnectedDevices:]
-[IDSDirectMessageConnection updateMetadata:]
directMsgAllowedForServices
com.apple.ids.direct-messaging
v20@?0i8Q12
peerIDForDirectMsg
pidForIDSD
IDSDirectMessaging
com.apple.ids
v20@?0i8@"NSObject<OS_nw_error>"12
dmsg-%s
v20@?0i8@"NSError"12
-[IDSDirectMessageConnection receivedDirectMessagingSocketWithContext:]
streamName
dmsg-
streamFlags
v36@?0@"NSObject<OS_dispatch_data>"8@"NSObject<OS_nw_content_context>"16B24@"NSObject<OS_nw_error>"28
v16@?0@"NSObject<OS_nw_error>"8
-[IDSDirectMessageConnection sendAppAckWithGUID:]
v24@?0C8I12*16
-[IDSDirectMessageConnection sendMessageWithParameters:options:]
ids-dm-%@
IDSLocalStatisticsCategory
IDSLocalOutgoingMessageBytes
IDSLocalOutgoingMessages
IDSLocalIncomingMessageBytes
IDSLocalIncomingMessages
IDS Local Network Stats
com.apple.madrid
com.apple.ess
com.apple.private.ac
com.apple.private.alloy.facetime.video
com.apple.private.alloy.facetime.audio
com.apple.private.alloy.facetime.mw
com.apple.private.alloy.facetime.multi
com.apple.private.alloy.bulletinboard
com.apple.private.alloy.photostream
com.apple.private.alloy.maps
com.apple.private.alloy.screensharing
com.apple.private.alloy.sms
com.apple.private.alloy.multiplex1
com.apple.private.alloy.biz
v32@?0@"NSData"8@"NSData"16@"NSUUID"24
Encryption failed - plaintext larger than GCM can support for topic %@ data.length %lu
Encryption failed - failed to create CommonCrypto cryptor for topic %@ error %ld
-[IDSGroupSessionDataCryptor encryptData:sequenceNumber:error:]
IDSGroupSessionDataCryptor.m
0 == SecRandomCopyBytes(kSecRandomDefault, IDSGROUPSESSIONCRYPTOR_NONCE_SIZE_NBYTES, nonceBytes)
Encryption failed - CommonCryptor failed to set IV for topic %@ error %ld
Encryption failed - CommonCryptor failed to add AAD for topic %@ error %ld
Encryption failed - CommonCryptor failed to encrypt for topic %@ error %ld
Encryption failed - CommonCryptor failed to create auth tag for topic %@ error %ld
Encryption failed - CommonCryptor failed to reset for topic %@ error %ld
Decryption failed - data has insufficient bytes to decrypt for topic %@ keyID %@
Decryption failed - unknown keyID %@
Decryption failed - CommonCryptor fails to create cryptor for topic %@ keyID %@ error %ld
Decryption failed - unknown version for topic %@ keyID %@ version %u
Decryption failed - CommonCryptor fails to set IV for topic %@ keyID %@ error %ld
Decryption failed - CommonCryptor failed to decrypt for topic %@ keyID %@ error %ld
Decryption failed - failed to verify auth tag for topic %@ keyID %@ error %ld
Decryption failed - CommonCryptor failed to reset for topic %@ keyID %@ error %ld
{Class:%@, Topic:%@, EncryptionKeyID:%@, DecryptionKeyCount:%lu}
{Object:%p, Class:%@, Topic:%@, EncryptionKeyID:%@, DecryptionKeys:%@}
topic
encryptingKeyID
encryptingKey
encryptingKeySalt
decryptingKeyIDs
decryptingKeys
decryptingKeySalts
-[IDSGroupSession initWithAccount:destinations:options:]
-[IDSGroupSession initWithAccount:options:]
-[IDSGroupSession _internal_sessionWithValidityCheck]
v16@?0Q8
session:
-[IDSGroupSession _internal]
%@%u
groupsession
0.0.0.0
3030
IDSGroupAgent
IDSReportiMessageSpam
IDSReportiMessageSpam.m
IDSReportiMessageUnknownSenderWithBlackholeAndJunkStatus
IDSCheckiMessageUnknownSender
_IDSScheduleTimeoutForReportiMessageSpamCheckUnkownCompletionBlock
_IDSScheduleTimeoutForAnyCompletionBlock
_IDSListenForReportiMessageSpamResponses
__IDSServiceAvailabilityDidChangeNotification
availability
service
IDSDaemonListener-ivarQueue: %@
IDSDaemonListenerContext
v16@?0@"<IDSDaemonListenerProtocol>"8
v32@?0@8Q16^B24
-[IDSDaemonListener accountAdded:]
-[IDSDaemonListener accountRemoved:]
com.apple.private.alloy.voicemailsync
v32@?0@"NSDictionary"8Q16^B24
serviceInfo
enabledAccountsInfo
dependentDevices
linkedDevices
familyInfo
familyDevices
pendingInvitationMap
receivedInvitationMap
maxMessageSizes
deviceIdentifier
activeDeviceUniqueID
v12@?0B8
-[_IDSRealTimeEncryptionProxy initWithAccount:]
-[_IDSRealTimeEncryptionProxy setDelegate:queue:]
-[_IDSRealTimeEncryptionProxy sendPrekeyToGroup:]
-[_IDSRealTimeEncryptionProxy requestPublicKeys]
-[_IDSRealTimeEncryptionProxy sendMasterKeyMaterialToGroup:]
-[_IDSRealTimeEncryptionProxy requestMasterKeyMaterialForGroup:]
-[_IDSRealTimeEncryptionProxy sendMKMRecoveryRequestToGroup:]
-[_IDSRealTimeEncryptionProxy resetKeysForGroup:]
object-type
public-keys
master-key-materials
com.apple.ids.activity.error
presence
presence-subscription-ttl-sec
@16@?0@"IDSDevice"8
 tokens: %@
 URIs: %@
 deviceUniqueIDs: %@
<%@: %p; subactivity: %@ expirationDate: %@%@>
subActivity
appcontext
deviceids
tokens
uris
expirationDate
<%@: %p; subActivity: %@; pushToken: %@; serverTimestamp: %llu; clientContext: %@>
subactivity
pushtoken
servertimestamp
clientcontext
online
%@-%@
v16@?0@"<IDSXPCActivityMonitor>"8
v20@?0B8@"NSError"12
v24@?0@"<IDSXPCActivityMonitor>"8@"NSError"16
v16@?0@"NSError"8
v24@?0@"NSArray"8@"NSError"16
IDSInvitations-defaultQueue
Failed to validate strict decoding for invitation
IDSInvitationIsSenderMergeIdCheckEnabled
IDSServerMessagingErrorDomain
timeout
fromStorage
cdContext
identifier
v16@?0@"IDSXPCDaemonController"8
IDSRegistrationControlDisableRegistrationType
IDSRegistrationControl.m
IDSRegistrationControlEnableRegistrationType
IDSRegistrationControlGetStateForRegistrationType
v16@?0@"<IDSDaemonProtocol>"8
IDSRegistrationControlSyncGetStateForRegistrationType
v24@?0q8@"NSError"16
_IDSScheduleTimeoutForRegistrtionControlActionCompletionBlock
_IDSScheduleTimeoutForAnyCompletionBlockWithSync
_IDSListenForRegistrationControlResponses
_IDSScheduleTimeoutForRegistrtionControlStateCompletionBlock
_IDSScheduleSyncTimeoutForRegistrtionControlStateCompletionBlock
IDSSignInControllerErrorDomain
IDSSignInControllerInternalErrorDomain
IDSSignInControllerErrorAccountKey
<%@: %p> Type: %@ Status: %@
<%@: %p> Service: %@ Infos: %@
com.apple.identityservices.IDSSignInController
-[IDSSignInController enableUserType:onService:completion:]
v24@?0@"IDSAccount"8@"IDSAccountController"16
-[IDSSignInController disableUserType:onService:completion:]
@16@?0@"IDSAccount"8
-[IDSSignInController statusOfUsersOnService:withCompletion:]
-[IDSSignInController provideCredential:forUser:onService:withCompletion:]
FaceTime
iMessage
v28@?0@"NSString"8@"NSString"16B24
-[IDSSignInController signInUsername:onService:waitUntilRegistered:withCompletion:]
-[IDSSignInController signInUsername:withProvidedCredential:onService:waitUntilRegistered:completion:]
-[IDSSignInController signOutService:completion:]
B16@?0@"IDSSignInControllerAccountDescription"8
v24@?0q8q16
@"NSCountedSet"16@?0@"NSArray"8
%llu,%llu
Phone
AppleID
SignedOut
Disabled
Enabled
Pending
direction
-[IDSSession initWithAccount:destinations:transportType:]
-[IDSSession initWithAccount:destinations:options:]
-[IDSSession _initWithAccount:destinations:transportType:uniqueID:]
-[IDSSession _internal]
v32@?0@"NSString"8@"NSDictionary"16^B24
v16@?0@"<IDSIDQueryControllerDelegate>"8
void IDSSimulatedLocalPairingAddPairedDevice(NSUUID *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
IDSSimulatorLocalPairingAddPairedDevice
IDSSimulatorSupport
void IDSSimulatedLocalPairingDeletePairedDevice(NSUUID *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
IDSSimulatorLocalPairingDeletePairedDevice
void IDSSimulatedLocalPairingSwitchActivePairedDevice(NSUUID *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
IDSSimulatorLocalPairingSwitchActivePairedDevice
IDSFirewall.m
Invalid parameter not satisfying: %@
completion
-[IDSFirewall populateImpactedServices:]
v24@?0@"NSSet"8@"NSError"16
-[IDSFirewall donateEntries:withCompletion:]
v16@?0@"<IDSXPCFirewall>"8
-[IDSFirewall removeDonatedEntries:withCompletion:]
-[IDSFirewall removeEntries:withCompletion:]
-[IDSFirewall replaceDonatedEntriesWithEntries:withCompletion:]
-[IDSFirewall replaceAllEntriesWithEntries:withCompletion:]
-[IDSFirewall currentDonatedEntries:]
-[IDSFirewall currentEntries:]
-[IDSFirewall removeAllDonatedEntries:]
-[IDSFirewall removeAllEntries:]
-[IDSFirewall recentlyBlockedEntries:]
<IDSFirewall %p>: Service %@ Queue %@ ImpactedServices %@
IDSIDQueryControllerErrorDomain
destinations
IDSBatchIDQueryControllerQueue
com.apple.IDSDaemonRequestConnectionQueue
portName
setupInfo
setup-request
response
granted
v28@?0@"NSObject<OS_xpc_object>"8@"NSDictionary"16B24
mach-lookup
IDSSendMessageOptionTimeout
IDSSendMessageOptionSkipPayloadCheck
IDSSendMessageOptionTopLevelDictionary
IDSSendMessageOptionDirectMessaging
IDSSendMessageOptionDataToEncrypt
IDSSendMessageOptionWantsResponse
IDSSendMessageOptionFromID
IDSSendMessageOptionCommand
IDSSendMessageOptionWantsDeliveryStatus
IDSSendMessageOptionWantsCertifiedDelivery
IDSSendMessageOptionDeliveryStatusContext
IDSSendMessageOptionUUID
IDSSendMessageOptionAlternateCallbackIdentifier
IDSSendMessageOptionEncryptPayload
IDSSendMessageOptionCompressPayload
IDSSendMessageOptionFireAndForget
IDSSendMessageOptionWantsClientAcknowledgement
IDSSendMessageOptionLocalDelivery
IDSSendMessageOptionForceLocalDelivery
IDSSendMessageOptionRequireBluetooth
IDSSendMessageOptionRequireLocalWiFi
IDSSendMessageOptionDuet
IDSSendMessageOptionExpectsPeerResponse
IDSSendMessageOptionPeerResponseIdentifier
IDSSendMessageOptionOpportunisticDuet
IDSSendMessageOptionTethering
IDSSendMessageOptionActivityContinuation
IDSSendMessageOptionNSURLSession
IDSSendMessageOptionMapTile
IDSSendMessageOptionNonWaking
IDSSendMessageOptionBypassDuet
IDSSendMessageOptionFakeMessage
IDSSendMessageOptionRequireAllRegistrationProperties
IDSSendMessageOptionRequireLackOfRegistrationProperties
IDSSendMessageOptionInterestingRegistrationProperties
IDSSendMessageOptionQueueOneIdentifier
IDSSendMessageOptionDuetIdentifiersOverride
IDSSendMessageOptionSockPuppet
IDSSendMessageOptionEnforceRemoteTimeouts
IDSSendMessageOptionAccessToken
IDSSendMessageOptionHomeKitMessage
IDSSendMessageOptionDisableAliasValidation
IDSSendMessageOptionForceEncryptionOff
IDSSendMessageOptionSubServiceKey
IDSSendMessageOptionAllowCloudDeliveryKey
IDSSendMessageOptionAlwaysSkipSelfKey
IDSSendMessageOptionNonCloudWakingKey
IDSSendMessageOptionMetricReportIdentifier
IDSSendMessageOptionLiveMessageDelivery
IDSSendMessageOptionWantsProgress
IDSSendMessageOptionDropMessageIndicator
IDSSendMessageOptionOriginalTimestampKey
IDSSendMessageOptionPushPriority
IDSSendMessageOptionPublicMessageIntent
IDSSendMessageOptionDeliveryTimeKey
IDSSendMessageOptionDeliveryMinimumTimeKey
IDSSendMessageOptionSendModeKey
IDSSendMessageOptionWantsFirewallDonation
-[IDSConnection _initWithAccount:commands:indirectDelegateCallouts:]
-[IDSConnection _internal]
groupSessionID
salt
serviceName
Unable to create nw_connection. The failure was caused due to invalid parameters or not being able to extract the address from the socket.
Error
%F %T 
%-6u %p %s 
IDSTransactionLogErrorDomain
Family handles not loaded on service.
Could not send to non family member.
_IDSPasswordManager.m
This method should only be run on clients
localParticipantID
remoteParticipantID
connectionIndex
dataMode
com.apple.identityservicesd.nsxpc
-[IDSPairedDeviceManager setAllowedTrafficClassifiers:]_block_invoke
-[IDSPairedDeviceManager deletePairedDevice:withCompletionBlock:queue:]_block_invoke
-[IDSPairedDeviceManager getLocalDeviceInfoWithCompletionBlock:queue:]
v24@?0@"NSDictionary"8@"NSError"16
-[IDSPairedDeviceManager getPairedDeviceInfoWithCompletionBlock:queue:]
-[IDSPairedDeviceManager getDeliveryStatsWithCompletionBlock:queue:]
IDSPhoneCertificateVendorErrorDomain
<%@: %p authenticationCertificateSignatures: %@>
com.apple.IDS.IDSPhoneCertificateVendor
An unknown error occurred
Failed to fetch local phone authentication certificate
Failed to fetch carrier token
Failed to generate phone authentication signature
Request timed out waiting for response from daemon
The requested operation is not supported on this platform
Unknown phone certificate error
@16@?0@"NSData"8
TEST_IMEI
TEST_NONCE
v24@?0@"IDSCarrierToken"8@"NSError"16
FTSelectedPNRSubscription
FTServices
cfs_client_blob_set_get_blob
IDSCFSClient.c
index < set->count
cfs_client_create
callback != NULL
tcp_connect failed, errno: %d
pthread_create failed, errno: %d
cfs_client_destroy
client->fd >= 0
client->isrunning
shutdown failed, errno: %d
pthread_join failed, errno: %d
start
size > 0
read failed, errno: %d
n == DESERIALIZER_SUCCESS
bad reply type: %d
connection closed
DESERIALIZER_BAD_DATA
deserialize failed
IDSXPCConnectionRemoteObjectPromise.m
IDSXPCConnectionRemoteObjectPromise can only be fulfilled once
XPC methods must have void return values {selector: %@}
-[IDSAccountController _initWithService:onIDSQueue:]
-[IDSAccountController _initWithService:]
-[IDSAccountController initWithService:]
-[IDSAccountController _internal]
IDSGroupSessionParticipantUpdateParticipantIdentifierKey
-[_IDSGroupSession initWithAccount:destinations:options:delegateContext:]
forceUPlusOneSession
FixedConferenceServerAddress
-[_IDSGroupSession invalidate]
-[_IDSGroupSession daemonDisconnected]
-[_IDSGroupSession _broadcastNewSessionToDaemon]
-[_IDSGroupSession _callDelegateWithBlock:]
-[_IDSGroupSession setDelegate:queue:]
-[_IDSGroupSession uniqueID]
-[_IDSGroupSession updateMembers:withContext:triggeredLocally:]
-[_IDSGroupSession updateMembers:withContext:messagingCapabilities:triggeredLocally:]
-[_IDSGroupSession manageDesignatedMembers:withType:]
-[_IDSGroupSession removeParticipantIDs:]
-[_IDSGroupSession updateParticipantData:withContext:]
-[_IDSGroupSession setParticipantInfo:]
-[_IDSGroupSession updateParticipantType:members:withContext:triggeredLocally:]
currentDestinationsLightweightStatus
v32@?0@"NSString"8@16^B24
-[_IDSGroupSession joinWithOptions:]
joinGroupSessionError
Cannot join a session that is already ended.
%@ joinWithOptions: %@
_IDSGroupSession.m
Cannot join a session without the participant data information.
-[_IDSGroupSession leaveGroupSessionWithOptions:]
-[_IDSGroupSession reconnectUPlusOneSession]
-[_IDSGroupSession setPreferences:]
-[_IDSGroupSession setRequiredCapabilities:requiredLackOfCapabilities:]
-[_IDSGroupSession sessionEndedReason]
-[_IDSGroupSession requestActiveParticipants]
-[_IDSGroupSession requestURIsForParticipantIDs:completionHandler:]
No participants provided.
GroupSession is invalidated.
-[_IDSGroupSession registerPluginWithOptions:]
options[IDSGroupSessionPluginNameKey]
-[_IDSGroupSession unregisterPluginWithOptions:]
-[_IDSGroupSession requestEncryptionKeyForParticipants:]
-[_IDSGroupSession _checkAndSendDataCryptor]
v24@?0@"IDSGroupEncryptionKeyMaterial"8^B16
-[_IDSGroupSession requestDataCryptorForTopic:completionHandler:]
-[_IDSGroupSession createSessionIDAliasWithSalt:delegateQueueCompletionHandler:]
-[_IDSGroupSession createAliasForParticipantID:salt:delegateQueueCompletionHandler:]
-[_IDSGroupSession createAliasForLocalParticipantIDWithSalt:delegateQueueCompletionHandler:]
-[_IDSGroupSession getParticipantIDForAlias:salt:delegateQueueCompletionHandler:]
-[_IDSGroupSession session:didReceiveReport:]
Session %@ full received report: %@
v16@?0@"<IDSGroupSessionDelegate>"8
-[_IDSGroupSession groupSessionDidTerminate:]
-[_IDSGroupSession groupSessionEnded:withReason:error:]
-[_IDSGroupSession sessionDidJoinGroup:participantsInfo:error:]
Group session %@ existing participants for did join %@
-[_IDSGroupSession sessionDidJoinGroup:participantInfo:error:]
Group session %@, existing participants for did join %@
-[_IDSGroupSession sessionDidJoinGroup:participantUpdateDictionary:error:]
-[_IDSGroupSession sessionDidLeaveGroup:error:]
-[_IDSGroupSession session:participantDidJoinGroupWithInfo:]
-[_IDSGroupSession session:participantDidLeaveGroupWithInfo:]
-[_IDSGroupSession session:didReceiveActiveParticipants:success:]
didReceiveActiveParticipants: %@ for group session: %@
-[_IDSGroupSession session:didReceiveActiveLightweightParticipants:success:]
didReceiveActiveLightweightParticipants: %@ for group session: %@
-[_IDSGroupSession session:didRegisterPluginAllocationInfo:]
-[_IDSGroupSession session:didUnregisterPluginAllocationInfo:]
-[_IDSGroupSession session:didReceiveBlockedParticipantIDs:withCode:withType:isTruncated:]
-[_IDSGroupSession session:didReceiveQueryBlockedParticipantIDs:withCode:isTruncated:]
-[_IDSGroupSession session:didRemoveParticipantIDs:withCode:isTruncated:]
-[_IDSGroupSession session:didReceiveKeyMaterial:]
-[_IDSGroupSession session:shouldInvalidateKeyMaterialByKeyIndexes:]
-[_IDSGroupSession sessionDidReceiveParticipantUpgrade:participantType:error:]
-[_IDSGroupSession session:didReceiveParticipantIDs:withCode:managementType:]
-[_IDSGroupSession session:didReceiveURIsForParticipantIDs:withRequestID:]
-[_IDSGroupSession participantUpdatedForSession:]
-[_IDSGroupSession session:hasOutdatedSKI:]
-[_IDSGroupSession session:didCreateParticipantIDAlias:forParticipantID:salt:]
-[_IDSGroupSession session:didReceiveParticipantID:forParticipantIDAlias:salt:]
v32@?0@"IMPair"8Q16^B24
-[_IDSGroupSession session:didReceiveDataBlob:forParticipant:]
-[_IDSGroupSession session:didReceiveData:dataType:forParticipant:]
-[_IDSGroupSession session:didReceiveServerErrorCode:]
session-device-socket
sessionID
error
%llu
kIDSGroupContextControllerPersistedToken
kIDSGroupContextControllerListenerID
v24@?0@"IDSGroupContextControllerContent"8@"NSError"16
v24@?0@"ENGroup"8@"NSError"16
v16@?0@"CUTAsyncReducerState"8
v16@?0@"CUTResult"8
v24@?0@"ENGroupContext"8@"NSError"16
v16@?0@"NSArray"8
v36@?0@"NSArray"8B16@"IDSCloudKitTransportLogChangeToken"20@"NSError"28
v16@?0@"ENGroup"8
FixedQuickRelayServerAddress
FixedQuickRelaySessionID
FixedQuickRelaySessionToken
FixedQuickRelaySessionKey
sessionInfo
-[_IDSConnection initWithAccount:commands:indirectDelegateCallouts:delegateContext:]
-[_IDSConnection createDirectMessageConnectionIfNeeded]
-[_IDSConnection account]
-[_IDSConnection isActive]
-[_IDSConnection addDelegate:queue:completion:]
v16@?0@?<v@?>8
-[_IDSConnection _callDelegatesRespondingToSelector:withPreCallbacksBlock:callbackBlock:postCallbacksBlock:group:]
-[_IDSConnection setDelegateCapabilities:]
IDSConnection
allowlistedidsservices
IDSClientBringsUpCloudMessaging
Force Cloud Messaging
IDSActivityContinuationIdentifier
IDSOpportunisticDuetIdentifier
q24@?0@"NSString"8@"NSString"16
Warning, missing %@ to add to %s
unknown type
-[_IDSConnection sendProtobuf:toDestinations:priority:options:identifier:error:]
Cannot send to empty destination set
Cannot send with an inactive account
Cannot send payload of this size
Invalid address: %@
protobuf
Could not find account uniqueID!
-[_IDSConnection sendMessage:toDestinations:priority:options:identifier:error:]
Cannot send empty message
URGENT
Default
Sync
message (dictionary)
Could not plist serialize dictionary or otherwise empty payload
-[_IDSConnection sendData:toDestinations:priority:options:identifier:error:]
data
-[_IDSConnection sendInvitation:toDestination:priority:options:identifier:error:]
Invitation has expired
invitation (send)
-[_IDSConnection sendInvitationUpdate:toDestination:priority:options:identifier:error:]
invitation (update)
-[_IDSConnection sendServerMessage:command:]
-[_IDSConnection account:isActiveChanged:]
v16@?0@"<IDSConnectionDelegate>"8
-[_IDSConnection account:devicesChanged:]
-[_IDSConnection account:nearbyDevicesChanged:]
-[_IDSConnection account:connectedDevicesChanged:]
-[_IDSConnection _connect]
-[_IDSConnection _resendPendingSends]
-[_IDSConnection daemonConnected]
-[_IDSConnection messageIdentifierInner:alternateCallbackID:forAccount:updatedWithResponseCode:error:lastCall:context:isDirectMessage:]
Unknown error
-[_IDSConnection messageIdentifier:alternateCallbackID:forAccount:willSendToDestinations:skippedDestinations:registrationPropertyToDestinations:]
-[_IDSConnection messageIdentifier:forTopic:toIdentifier:fromIdentifier:hasBeenDeliveredWithContext:]
app-level ack
-[_IDSConnection didSendOpportunisticDataWithIdentifier:onAccount:toIDs:]
-[_IDSConnection messageReceived:withGUID:withPayload:forTopic:toIdentifier:fromID:context:]
message
-[_IDSConnection dataReceived:withGUID:forTopic:toIdentifier:fromID:context:]
-[_IDSConnection engramDataReceived:withGUID:forTopic:toIdentifier:fromID:context:]
-[_IDSConnection accessoryDataReceived:withGUID:forTopic:toIdentifier:fromID:context:]
-[_IDSConnection accessoryReportMessageReceived:accessoryID:controllerID:withGUID:forTopic:toIdentifier:fromID:context:]
accessoryReportMessage
-[_IDSConnection protobufReceived:withGUID:forTopic:toIdentifier:fromID:context:]
(unknown)
-[_IDSConnection receivedMetadataForDirectMessaging:]
direct-messaging-socket-received
object-flags
object-recipient
-[_IDSConnection didFlushCacheForService:remoteURI:fromURI:guid:]
flush cache notification
-[_IDSConnection pendingIncomingMessageWithGUID:forTopic:toIdentifier:fromID:context:]
pending
-[_IDSConnection sessionInvitationReceivedWithPayload:forTopic:sessionID:toIdentifier:fromID:transportType:]
session invitation
-[_IDSConnection receivedGroupSessionParticipantUpdate:forTopic:toIdentifier:fromID:context:]
group session participant update
-[_IDSConnection receivedGroupSessionParticipantDataUpdate:forTopic:toIdentifier:fromID:]
group session participant data update
-[_IDSConnection checkTransportLogWithReason:]
ClientSessionStore
-[_IDSSessionStore sessionForAccount:fromID:identifier:transportType:]
com.apple.identityservicesd.nsxpc.auth
v16@?0@"NSMutableSet"8
-[IDSQuickSwitchAcknowledgementTracker awaitAcknowledgementFromServiceDelegate:]
Registration
-[IDSQuickSwitchAcknowledgementTracker identifierForServiceDelegate:]
%@ (%p)
-[IDSQuickSwitchAcknowledgementTracker stopAwaitingAcknowledgementFromServiceDelegateWithIdentifier:]
-[IDSQuickSwitchAcknowledgementTracker stopAwaitingAcknowledgementFromAllServiceDelegates]
/Library/Caches/com.apple.xbs/Sources/IdentityServices_Sim/IDS/IDSDataChannelsUtils.m
IDSLocalPairingAddPairedDevice
IDSLocalPairing.m
void IDSLocalPairingAddPairedDevice(NSUUID *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
cbuuid
block
queue
v16@?0@"<IDSXPCPairing>"8
IDSLocalPairingAddPairedDeviceWithInfo
void IDSLocalPairingAddPairedDeviceWithInfo(IDSLocalPairingAddPairedDeviceInfo *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
info
IDSLocalPairingUpdatePairedDevicePairingType
void IDSLocalPairingUpdatePairedDevicePairingType(NSUUID *__strong, IDSPairingType, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
@(pairingType)
IDSLocalPairingConnectPairedDevice
void IDSLocalPairingConnectPairedDevice(NSUUID *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
IDSLocalPairingSetupCompletedForPairedDevice
void IDSLocalPairingSetupCompletedForPairedDevice(NSUUID *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
IDSLocalPairingSwitchActivePairedDevice
void IDSLocalPairingSwitchActivePairedDevice(NSUUID *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
IDSLocalPairingDisconnectActivePairedDevice
void IDSLocalPairingDisconnectActivePairedDevice(__strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
IDSLocalPairingRedeliverMessages
void IDSLocalPairingRedeliverMessages(IDSDevice *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
deviceUniqueID
IDSLocalPairingDeletePairedDevice
void IDSLocalPairingDeletePairedDevice(NSUUID *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
IDSLocalPairingUnpairStartForDevice
void IDSLocalPairingUnpairStartForDevice(NSUUID *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
IDSLocalPairingStopForDevice
void IDSLocalPairingStopForDevice(NSUUID *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
IDSLocalPairingUnpairForDevice
void IDSLocalPairingUnpairForDevice(NSUUID *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
IDSLocalPairingForgetPairedDevice
void IDSLocalPairingForgetPairedDevice(NSUUID *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
IDSLocalPairingGetPairingDevicesWithCompletionBlock
void IDSLocalPairingGetPairingDevicesWithCompletionBlock(__strong IDSLocalPairingPairedDevicesCompletionBlock, __strong dispatch_queue_t)
IDSLocalPairingGetPairedDevicesWithCompletionBlock
void IDSLocalPairingGetPairedDevicesWithCompletionBlock(__strong IDSLocalPairingPairedDevicesCompletionBlock, __strong dispatch_queue_t)
IDSLocalPairingGetPairingRecordsWithCompletionBlock
void IDSLocalPairingGetPairingRecordsWithCompletionBlock(__strong IDSLocalPairingPairingRecordsCompletionBlock, __strong dispatch_queue_t)
v32@?0@"IDSLocalPairingLocalDeviceRecord"8@"NSDictionary"16@"NSError"24
IDSLocalPairingSetAllowedTrafficClassifiersForDevice
void IDSLocalPairingSetAllowedTrafficClassifiersForDevice(NSSet *__strong, IDSDevice *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
classifiers
IDSLocalPairingGetAllowedTrafficClassifiersForDevice
void IDSLocalPairingGetAllowedTrafficClassifiersForDevice(IDSDevice *__strong, __strong IDSLocalPairingTrafficClassifiersCompletionBlock, __strong dispatch_queue_t)
IDSLocalPairingDropAllMessagesWithoutAnyAllowedTrafficClassifier
void IDSLocalPairingDropAllMessagesWithoutAnyAllowedTrafficClassifier(IDSDevice *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
IDSLocalPairingReunionSyncStartedForServices
void IDSLocalPairingReunionSyncStartedForServices(NSArray *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
IDSLocalPairingReunionSyncCompletedForServices
void IDSLocalPairingReunionSyncCompletedForServices(NSArray *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
kcbuuid
kPairingProtocolVersion
kBTOutOfBandKey
kSupportsIPsecWithSPPLink
kBluetoothMACAddress
kShouldPairDirectlyOverIPsec
kPairingType
<%@: %p cbuuid: %@, pairingProtocolVersion: %ld, BTOutOfBandKey.length: %ld, supportsIPsecWithSPPLink: %ld, shouldPairDirectlyOverIPsec: %ld, bluetoothMACAddress.length: %ld, pairingType: %ld>
-[_IDSDeviceConnection initWithDevice:options:completionHandler:queue:]
completionHandlerID
protocol
Socket open timed out
-[_IDSDeviceConnection _connect]
-[_IDSDeviceConnection setStreamPairWithInputStream:outputStream:]
-[_IDSDeviceConnection updateConnectionWithOptions:error:]
Cannot change priority when not connected
Could not set traffic class for underlying socket
Invalid priority level specified
Options dictionary contains no valid options
-[_IDSDeviceConnection close]
device-socket
metrics
Error: %@
%@_%@
deserialize failed, bad magic number2
group name length is 0
group name is not 0-terminated
client blob size too big: %u
deserialize failed, bad magic number3
-[_IDSAccountController initWithService:delegateContext:]
-[_IDSAccountController accounts]
-[_IDSAccountController internalAccounts]
-[_IDSAccountController enabledAccounts]
-[_IDSAccountController serviceName]
-[_IDSAccountController addDelegate:queue:]
-[_IDSAccountController _callDelegatesRespondingToSelector:withPreCallbacksBlock:callbackBlock:postCallbacksBlock:group:]
-[_IDSAccountController _connect]
-[_IDSAccountController daemonDisconnected]
v16@?0@"<IDSAccountControllerDelegate>"8
-[_IDSAccountController _loadCachedAccountsWithDictionaries:]
@16@?0@8
-[_IDSAccountController _loadCachedAccounts]
-[_IDSAccountController accountWithUniqueID:]
-[_IDSAccountController accountWithLoginID:service:]
-[_IDSAccountController _setupAccountWithLoginID:accountConfig:authToken:password:completionHandler:]
-[_IDSAccountController setupAccountWithLoginID:aliases:password:completionHandler:]
status
-[_IDSAccountController addAccount:]
-[_IDSAccountController _removeAndDeregisterAccount:]
-[_IDSAccountController _removeAccount:]
-[_IDSAccountController _updateLocalAccountVisibility]
-[_IDSAccountController enableAccount:]
-[_IDSAccountController disableAccount:]
-[_IDSAccountController accountAdded:]
-[_IDSAccountController accountRemoved:]
-[_IDSAccountController accountUpdated:]
-[_IDSAccountController accountsChanged:forTopic:]
v24@?0@8^B16
-[_IDSAccountController setupCompleteForAccount:transactionID:setupError:]
IDSAccountController-setupCompleteQueue
-[_IDSAccountController accountEnabled:onService:]
-[_IDSAccountController accountDisabled:onService:]
IDSHardDeregister
IDSRegistrationReset.m
IDSTriggerFinalDeregister
IDSClearState
contextPayload
<IDSDictionaryInvitationContext %p>: schemaIdentifier %@ contextType %ld payload %@
@"NSXPCConnection"8@?0
pairing
v24@?0@"<IDSXPCDaemon>"8@?<v@?@@"NSError">16
pairedDeviceManager
reunionSync
opportunistic
registration
activityMonitor
serverMessaging
keyTransparency
firewall
groupSessionKeyValueDeliveryProvider
internalTesting
v24@?0@8@"NSError"16
kIdentityData
kError
kIdentityDataMap
Missing identity for class-%@
kCBUUID
<%@: %p cbuuid: %@ classA: %@, errorClassA: %@, classC: %@, errorClassC: %@, classD: %@, errorClassD: %@>
<%@: %p classA: %@, errorClassA: %@, classC: %@, errorClassC: %@, classD: %@, errorClassD: %@>
IDSKeyTransparencyManagerErrorDomain
-[IDSKeyTransparencyManager getKeyTransparencyOptInEligiblityForApplication:withCompletion:]
v16@?0@"<IDSXPCKeyTransparency>"8
-[IDSKeyTransparencyManager sendOptInUpdateForApplications:withCompletion:]
v16@?0@"IDSKTOptInResult"8
-[IDSKeyTransparencyManager sendOptInUpdateForApplicationsOptInState:withCompletion:]
KTSelfVerificationInfo
Class getKTSelfVerificationInfoClass(void)_block_invoke
IDSKeyTransparencyManager.m
NSString *getkKTApplicationIdentifierIDS(void)
kKTApplicationIdentifierIDS
NSString *getkKTApplicationIdentifierIDSFaceTime(void)
kKTApplicationIdentifierIDSFaceTime
NSString *getkKTApplicationIdentifierIDSMultiplex(void)
kKTApplicationIdentifierIDSMultiplex
-[IDSAccount _initWithDictionary:uniqueID:serviceName:]
-[IDSAccount initWithDictionary:uniqueID:serviceName:]
-[IDSAccount initWithLoginID:uniqueID:serviceName:]
-[IDSAccount _internal]
-[IDSAccount _isEnabled]
-[IDSAccount _setIsEnabled:]
%@: %p [Service: %@  User: %@  ID: %@  Type: %@  Active: %@  Registration Status: %@]
IDSiCloudSignInHack
IDSiCloudSignInHack.m
IDSiCloudSignOutHack
IDSKickGetDependent
IDSReRegister
IDSRepairAccounts
biz:
device:%@
guest-device:%@
No cloudID Provided
urn:ck:%@
Required Field Is Empty
A required Field Is Empty
ServiceUserID and AdminID can not be the same
groupSessionIDAlias
participantIDAlias
listeningPort
IDSGroupSessionUnicastConnector
PreSharedKey has Unexpected size.
Unknown parameter
Unable to create PSK.
Listener failed with error code %d
Listener cancelled
v16@?0@"NSObject<OS_nw_connection>"8
v16@?0@"NSObject<OS_nw_protocol_options>"8
v32@?0@"NSObject<OS_sec_protocol_metadata>"8@"NSObject<OS_sec_trust>"16@?<v@?B>24
groupsession:%@:ids:%@:L
Unable to create connection to the virtual participant.
IDSToolTestOnlyPSKIdentity
-[_IDSAccount initWithDictionary:uniqueID:serviceName:delegateContext:]
-[_IDSAccount initWithLoginID:uniqueID:serviceName:delegateContext:]
-[_IDSAccount _isiCloudPairingService]
com.apple.private.alloy.icloudpairing
-[_IDSAccount _isThumperService]
com.apple.private.alloy.thumper.keys
-[_IDSAccount _isMagnoliaService]
com.apple.private.alloy.ct.commcenter.sim.cloud
-[_IDSAccount addDelegate:queue:]
-[_IDSAccount _callDelegatesRespondingToSelector:withPreCallbacksBlock:callbackBlock:postCallbacksBlock:group:]
-[_IDSAccount addRegistrationDelegate:queue:]
-[_IDSAccount removeRegistrationDelegate:]
-[_IDSAccount _callRegistrationDelegatesWithBlock:]
-[_IDSAccount _objectForKey:]
-[_IDSAccount _setObject:forKey:]
-[_IDSAccount isInTransientRegistrationState]
-[_IDSAccount isActive]
-[_IDSAccount setAccountInfo:]
-[_IDSAccount accountInfo]
-[_IDSAccount profileInfo]
-[_IDSAccount canSend]
-[_IDSAccount aliases]
B16@?0@8
inbox.appleid.apple.com
-[_IDSAccount serviceName]
-[_IDSAccount primaryServiceName]
-[_IDSAccount uniqueID]
-[_IDSAccount _isEnabled]
-[_IDSAccount _setIsEnabled:]
-[_IDSAccount setRegionID:]
-[_IDSAccount setRegionBasePhoneNumber:]
-[_IDSAccount setDisplayName:]
-[_IDSAccount _updateDependentDevicesWithDevicesInfo:]
-[_IDSAccount _loadCachedDevices]
-[_IDSAccount _reloadCachedDevices]
-[_IDSAccount suppressedDevices]
-[_IDSAccount devices]
-[_IDSAccount nearbyDevices]
-[_IDSAccount connectedDevices]
-[_IDSAccount _callDevicesChanged]
v16@?0@"<IDSAccountDelegate>"8
-[_IDSAccount _callNearbyDevicesChanged]
-[_IDSAccount _callConnectedDevicesChanged]
-[_IDSAccount _callCloudConnectedDevicesChanged]
-[_IDSAccount _keychainRegistration]
-[_IDSAccount nextRegistrationDate]
next-registration-date
-[_IDSAccount dateRegistered]
registration-date
-[_IDSAccount _registeredURIs]
-[_IDSAccount registeredURIs]
-[_IDSAccount accountRegisteredURIs]
@16@?0@"NSString"8
-[_IDSAccount registrationCertificate]
ids-registration-cert
-[_IDSAccount pushToken]
push-token
-[_IDSAccount description]
<%p:%@:%@:%@:%@:%@:%@>
-[_IDSAccount _connect]
-[_IDSAccount account:registrationStatusInfoChanged:]
v16@?0@"<IDSAccountRegistrationDelegate>"8
-[_IDSAccount account:aliasesChanged:]
-[_IDSAccount account:vettedAliasesChanged:]
-[_IDSAccount account:profileChanged:]
-[_IDSAccount account:loginChanged:]
-[_IDSAccount account:displayNameChanged:]
-[_IDSAccount account:pseudonymsChanged:]
-[_IDSAccount account:dependentDevicesUpdated:]
-[_IDSAccount account:dependentDevicesUpdatedUponReconnect:]
-[_IDSAccount account:localDeviceAdded:]
-[_IDSAccount refreshRegistrationForAccount:]
+[IDSService serviceWithIdentifier:commands:manuallyAckMessages:completion:]
v24@?0@"_IDSService"8@"NSError"16
-[IDSService initWithService:commands:manuallyAckMessages:]
-[IDSService initWithService:serviceDomain:]
-[IDSService _internal]
-[IDSService activateAlias:]
-[IDSService activateAliases:]
-[IDSService deactivateAlias:]
-[IDSService deactivateAliases:]
B24@?0@"IDSAccount"8^B16
IDSService.m
requestProperties
LinkType
PacketsPerSecond
InputBytesPerSecond
OutputBytesPerSecond
Intent
Timestamp
IDSAppleCareSignIDSIn
IDSAppleCareSignIn.m
IDSAppleCareSignIDSOut
IDSAppleCareSetDaemonDisconnectedBlock
com.apple.registration
saveviewRegTimeout
IDSiCloudSignIn
IDSiCloudSignIn.m
IDSiCloudSignOut
IDSiCloudUpdate
IDSiCloudModify
IDSiTunesSignIn
IDSiTunesSignOut
IDSGameCenterSignIn
IDSGameCenterSignOut
IDSGameCenterModify
IDSDaemonRequestTimer.m
The request context map should be empty after canceling all countdowns.
+[_IDSService serviceWithIdentifier:commands:manuallyAckMessages:delegateContext:completion:]
-[_IDSService initWithService:commands:manuallyAckMessages:delegateContext:]
IDSSimulatorSupportRegisterDataHandler
v32@?0@"NSString"8@"NSData"16@"NSString"24
Couldn't soft link IDSSimulatorSupportRegisterDataHandler(). Just failing here
IDSSimulatorSupportUnregisterDataHandler
Couldn't soft link IDSSimulatorSupportUnregisterDataHandler(). Just failing here
Failed to deserialize data %p. error: %@
options
senderDeviceID
type
pbType
pbIsResponse
Failed to create IDSProtobuf from data %p
fileData
fileName
fileAttrs
Failed to create staging directory at %@ from data %p:%@
Failed to write file data to %@ from data %@: %@
Failed to set file attributes for %@ to %@ from data %p: %@
ackedMsgID
ackedSubService
v16@?0@"<IDSServiceDelegate>"8
IDSSimulatorSupportSendDataWithOptions
Failed to to archive ack dict %@ for message %@ on service %@ subservice %@
Failed to send ack for message %@ on service %@ subservice %@
v36@?0B8@"NSString"12@"NSError"20@"NSDictionary"28
Couldn't soft link IDSSimulatorSupportSendData(). Just failing here
-[_IDSService addDelegate:queue:]
v32@?0@8@"IDSConnection"16^B24
-[_IDSService _callDelegatesRespondingToSelector:withPreCallbacksBlock:callbackBlock:postCallbacksBlock:group:]
-[_IDSService daemonConnected]
-[_IDSService OTRTestCallback:time:error:]
-[_IDSService didSwitchActivePairedDevice:forService:wasHandled:]
v16@?0@"NSString"8
-[_IDSService _activeDeviceForUniqueID:]
-[_IDSService _callLinkedDevicesChanged]
-[_IDSService _logConnectionMap]
v32@?0@"NSString"8@"IDSConnection"16^B24
-[_IDSService _tearDownConnectionForUniqueID:]
-[_IDSService _callIsActiveChanged]
-[_IDSService accountController:accountAdded:]
-[_IDSService accountController:accountRemoved:]
-[_IDSService accountController:accountEnabled:]
-[_IDSService accountController:accountDisabled:]
-[_IDSService connection:incomingOpportunisticData:withIdentifier:fromID:context:]
-[_IDSService connection:incomingData:fromID:context:]
-[_IDSService connection:incomingGroupData:fromID:context:]
-[_IDSService connection:incomingAccessoryData:fromID:context:]
-[_IDSService connection:incomingAccessoryReportMessage:accessoryID:controllerID:context:]
-[_IDSService connection:incomingInvitation:fromID:context:]
-[_IDSService connection:incomingInvitationUpdate:fromID:context:]
-[_IDSService connection:incomingMessage:fromID:context:]
/Library/IdentityServices/files/
/Library/IdentityServices/incomingfiles/
v16@?0q8
-[_IDSService connection:incomingProtobuf:fromID:context:]
service:account:fromID:context:
-[_IDSService connection:incomingTopLevelMessage:fromID:messageContext:]
-[_IDSService connection:incomingPendingMessageFromID:context:]
-[_IDSService connection:incomingEngramMessage:fromID:context:]
IDSIncomingMessageDecryptedData
v36@?0@"NSData"8@"ENGroup"16@"NSError"24B32
-[_IDSService connection:isActiveChanged:]
-[_IDSService connection:devicesChanged:]
-[_IDSService _callDelegatesForDevicesChanged]
-[_IDSService connection:nearbyDevicesChanged:]
-[_IDSService connection:connectedDevicesChanged:]
-[_IDSService connection:messageIdentifier:alternateCallbackID:updatedWithResponseCode:error:lastCall:messageContext:]
-[_IDSService connection:identifier:alternateCallbackID:willSendToDestinations:skippedDestinations:registrationPropertyToDestinations:]
-[_IDSService connection:identifier:didSendWithSuccess:error:context:]
-[_IDSService connection:identifier:fromID:hasBeenDeliveredWithContext:]
-[_IDSService connection:didFlushCacheForRemoteURI:fromURI:guid:]
-[_IDSService connection:account:sessionInviteReceived:fromID:transportType:options:context:messageContext:]
-[_IDSService connection:account:receivedGroupSessionParticipantUpdate:context:]
-[_IDSService connection:account:receivedGroupSessionParticipantDataUpdate:]
-[_IDSService connection:didSendOpportunisticDataWithIdentifier:toIDs:]
-[_IDSService isPretendingToBeFull]
-[_IDSService setPretendingToBeFull:]
-[_IDSService serviceDomain]
-[_IDSService iCloudAccount]
-[_IDSService _filteredAccountsFrom:]
-[_IDSService accounts]
-[_IDSService internalAccounts]
-[_IDSService devices]
-[_IDSService serviceProperties]
-[_IDSService canSend]
-[_IDSService _loadCachedLinkedDevices]
-[_IDSService _updateLinkedDevicesWithDevicesInfo:]
-[_IDSService linkedDevicesWithRelationship:]
B16@?0@"IDSPseudonym"8
v16@?0@8
_IDSService.m
-[_IDSService updateSubServices:forDevice:]
-[_IDSService resendSubServicesToDaemonForCurrentDevice]
-[_IDSService setProtobufAction:forProtobufType:isResponse:]
-[_IDSService protobufActionForType:isResponse:]
com.apple.private.alloy.idscredentials
com.apple.private.alloy.maps.eta
com.apple.private.alloy.nearby
com.apple.private.alloy.willow
B16@?0@"IDSAccount"8
q24@?0@"IDSAccount"8@"IDSAccount"16
device:
-[_IDSService sendOpportunisticData:options:identifier:error:]
-[_IDSService _sendSimulatorMessage:fromAccount:toDestinations:priority:options:identifier:error:]
Failed to delete file at %@ after sending
simID
originalSimDestination
_IDSService
-[_IDSService _sendSimulatorProtobuf:fromAccount:toDestinations:priority:options:identifier:error:]
IDSSimulatorSupportGetCurrentConnectedSimulatorID
Out of space
-[_IDSService _sendSimulatorData:fromAccount:toDestinations:priority:options:identifier:error:]
-[_IDSService sendAccessoryData:toAccessoryID:accessToken:options:identifier:error:]
Could not find valid account
Service is not enabled for Invitations
Invalid priority
-[_IDSService sendData:priority:options:identifier:error:]
-[_IDSService sendServerMessage:command:fromAccount:]
-[_IDSService cancelIdentifier:error:]
-[_IDSService getProgressUpdateForIdentifier:error:]
-[_IDSService uriForFromID:]
+[_IDSService deviceForFromID:fromDevices:]
-[_IDSService deviceForFromID:]
-[_IDSService linkedDeviceForFromID:withRelationship:]
-[_IDSService devicesForBTUUID:]
-[_IDSService deviceForUniqueID:]
-[_IDSService setPreferInfraWiFi:]
-[_IDSService setLinkPreferences:]
-[_IDSService startOTRTest:]
-[_IDSService testCloudQRConnection]
Sending non-file resource unsupported
Unable to link or copy file
resourceTransferMessageDict
com.apple.identityservices.send
-[_IDSService sendAheadGroup:priority:options:identifier:completion:]
-[_IDSService sendAheadGroup:priority:options:identifier:completion:]_block_invoke
Destination device is not active for this account
v24@?0@"NSData"8@"NSError"16
-[_IDSService reportSpamMessage:]
-[_IDSService sendAckForMessageWithContext:]
Unable to create stream connection with destination
Unable to create datagram channel with destination
Unable to create datagram channel with socket descriptor
-[_IDSService groupContextController:didCreateGroup:]
-[_IDSService groupContextController:accountsForAlises:]
IDSSimulatorSupportErrorDomain
IDSSimulatorSupportOptionSetMessageIdentifier
_idsSimulatorSupportOptionsFromIDSSendOptions()
Failed to decode data of %lu bytes to a uuid string
<%@: %p change: %@; updateFlags: %@; pseudonym: %@>
Feature disabled
Server error
Internal server error
Invalid URI
Missing entitlements
Unable to send request
Pseudonym limit reached
Request failed
Max number of in flight provisions reached
Invalid parameters
URI not a token URI
Daemon disconnected
Service has no application key
Cannot perform query
Query failed
Query rate limited
Remote identity unregistered
Remote identity registered without signing key type
Unable to load signing key type
MessageProtection signing/verification error
Local device unregistered
SecKey signing/verification error
Failed to diversify key
.XXXX
addressbooksyncd
airplayutil
amsaccountsd
assistantd
Assistive Control
audioDeviceTest
audioperftest
Bridge
CallHistorySyncHelper
Carousel
carouseluitrigger
ClarityBoard
cloudpaird
com.apple.accessibility.AccessibilityUIServer
com.apple.audio.virtualaudio.IntegrationTests.xctrunner
com.apple.FTLivePhotoService
companion_proxy
companionappd
companioncamerad
companionfindlocallyd
companionmessagesd
coreautomationd
coreduetd
demod
diagnosticextensionsd
ekgremlin
eventkitsyncd
fmflocatord
gamed
homeutil
HomeKitTestHostApp
IDSInvitationTestApp
idsrelay
idstool
IMAP Unit Tests-Runner
IMNotificationServiceAgent
IntegrationTests-Runner
iosdiagnosticsd
iTester
itesterd.mobile
itunescloudd
Legacy Account Migration Tests-
livabilityd
loctilestool
mediaremoted
Messages Catalyst
MessageUnitTests-Runner
MessagesViewService
minilab
mobiletimerd
mstreamd
Music
nanoappregistryd
nanobackupd
nanofindlocallyd
nanomediaremotelinkagent
nanomessagesd
nanonewscd
nanonewsgd
nanopassd
nanophoned
nanophotosd
nanoprefsyncd
nanoregistryd
NanoSettings
nanosubridged
nanosystemsettingsd
nanotimekitcompaniond
nanotimekitd
NPKCompanionAgent
nptocompaniond
NTKFaceSnapshotService
pairedunlockd
passutil
Pineboard
Preferences
proactiveeventtrackerd
ProtectedCloudKeySyncing
ProxiedCrashCopier
ratescalar
remotemediaservicesd
resourcegrabberd
SafeView
ScreenSharingServer
screenshotsyncd
searchpartyuseragent
seserviced
Setup
sosd
SoundBoard
SpringBoard
SSInvitationAgent
subridged
symptomsd-diag
syncgen
sysdiagnose
taptoradard
timed
tipsd
ToolChestAgent
tursd
UnitTests-Runner
utilitybeltd
wifid
WirelessRadioManagerd
xctest
Added
Removed
Updated
Unknown
IDSTransactionLogMessageAccountUniqueIDKey
IDSTransactionLogMessageFromIDKey
IDSTransactionLogMessageLoginIDKey
IDSTransactionLogMessageServiceNameKey
IDSTransactionLogMessageDictionaryValueKey
IDSTransactionLogMessageDataValueKey
com.apple.springboard
service-cache-request
transactionID
is-springboard
cache
cached-id-status-query
respect-expiry
id-status-query
force
bypass-limit
remote-device-status-query
destination
disallow-query
id-status-info-query
info-types
id-info-options
IDSPhoneSubscriptionSelectorErrorDomain
subSlot
subLableID
<%@: %p; slot: %d; labelID: %@>
expiration
selected
<%@: %p; URI: %@, expirationDate: %@, selected: %@>
@"IDSXPCDaemonController"16@?0@"NSObject<OS_dispatch_queue>"8
-[IDSPhoneSubscriptionSelector requestSelectedSubscriptionsWithCompletion:]
v16@?0@"<IDSXPCRegistration>"8
-[IDSPhoneSubscriptionSelector selectSubscription:withCompletion:]
Subscription info is nil
-[IDSPhoneSubscriptionSelector unselectSubscription:withCompletion:]
-[IDSPhoneSubscriptionSelector setSelectedSubscriptions:withCompletion:]
Subscription infos is nil
-[IDSPhoneSubscriptionSelector removeTemporaryPhoneAlias:withCompletion:]
Alias is nil
-[IDSPhoneSubscriptionSelector disableTemporaryPhoneAlias:withCompletion:]
-[IDSPhoneSubscriptionSelector enableTemporaryPhoneAlias:withCompletion:]
-[IDSPhoneSubscriptionSelector requestUnselectedTemporaryPhoneAliasesWithError:]
v24@?0@"<IDSXPCRegistration>"8@"NSError"16
-[IDSPhoneSubscriptionSelector selectSubscription:withError:]
-[IDSPhoneSubscriptionSelector unselectSubscription:withError:]
-[IDSPhoneSubscriptionSelector setSelectedSubscriptions:withError:]
-[IDSPhoneSubscriptionSelector removeTemporaryPhoneAlias:withError:]
-[IDSPhoneSubscriptionSelector enableTemporaryPhoneAlias:withError:]
-[IDSPhoneSubscriptionSelector disableTemporaryPhoneAlias:withError:]
v24@?0@"<IDSXPCGroupSessionKeyValueDelivery>"8@"NSError"16
XPC doesn't set up
Unknown account type
Unknown service
Empty user name
Empty service name
Process not entitled
Component disconnected
Component crashed
Remote user isn't registered
Attachment send failed
Encryption failed
Message send failed
Invalid caller id
Payload is too big to send
Unknown exception
Timed out
The destination device for this message was not connected before the timeout fired
This message was written into the connection, but did not receive an ack.  Check Bluetooth conditions and that your process is not hung on the receiver.
This message was a non-waking message and the destination device for this message did not wake before the timeout fired
Replaced
Device Unpaired
Bluetooth required
No space
Cannot read resource
Data protection class unavailable
Remote device is locked.
Database filled up
Revision lock forced failure
Service version not compatible
Destination device is no longer the active device
Destination device for this message was inactive for an extended period
A over C encryption is not available at this time
Class A encryption keys are not available at this time
Send to Tinker default paired device
Phone number not bounded to an Apple ID is not supported for family services.
No error
Invalid state
Operation failed
com.apple.Transport
IDSService
QRAllocator
IDSDeviceConnection
IDSDataChannels
IDSLocalSetup
IDSReportSpam
NRPairing
com.apple.IDS
transactionLog
DaemonController
DaemonListener
IDSConnection-oversize
IDSDirectMessagingConnection
Connection
continuity
IDSSession
_IDSGroupSession
_IDSGroupSession-oversize
DaemonProxy
GUIDTRACE
Accounts
IDSAccountController
IDSDevice
ServiceAvailability
IDSRealTimeEncryptionProxy
IDQuery
_IDSSession
fromID
<IDSSentInvitation %p>: uniqueID %@ senderMergeID %@ state %ld expirationDate %@ destination %@
<IDSReceivedInvitation %p>: uniqueID %@ senderMergeID %@ state %ld expirationDate %@ destination %@
IDSXPCConnectionErrorDomain
IDSXPCConnectionTransactionUUID
Missing entitlement "%@"
v32@?0@"NSUUID"8@?<v@?>16^B24
Timed-out expecting response for @selector(%@)
-[_IDSDevice initWithDictionary:]
-[_IDSDevice uniqueID]
-[_IDSDevice uniqueIDOverride]
-[_IDSDevice productBuildVersion]
-[_IDSDevice productName]
-[_IDSDevice productVersion]
-[_IDSDevice modelIdentifier]
-[_IDSDevice name]
-[_IDSDevice service]
-[_IDSDevice fullDescription]
[%@ %p:   Name: %@   Model: %@   UniqueID: %@   UniqueID Override: %@   Push Token: %@   Service: %@   Handles: %@   linkedUserURIs: %@   nsuuid: %@   relationship: %lu   supportsSMSRelay: %@   supportsMMSRelay: %@   supportsPhoneCalls: %@   deviceColor: %@   enclosureColor: %@  local: %@   defaultPairedDevice: %@   isNearby: %@  isConnected: %@  isCloudConnected: %@  isActive: %@  isLocallyPaired: %@  build: %@   pairing protocol: %lu   min compatibility version: %lu   max compatibility version: %lu]
-[_IDSDevice description]
[%@ %p:   Name: %@    Model: %@   UniqueID: %@   UniqueID Override: %@   Push Token: %@   Service: %@   nsuuid: %@   relationship: %lu    supportsSMSRelay: %@   supportsMMSRelay: %@   supportsPhoneCalls: %@   deviceColor: %@   enclosureColor: %@  local: %@   defaultPairedDevice: %@   isNearby: %@  isConnected: %@  isActive: %@  isLocallyPaired: %@  isHSATrusted: %@  build: %@   pairing protocol: %lu   min compatibility version: %lu   max compatibility version: %lu]
all 0s
[%p uid: %@, tok: %@, near: %@, conn: %@, active: %@, rel: %lu]
-[_IDSDevice isNearby]
-[_IDSDevice isConnected]
-[_IDSDevice isCloudConnected]
-[_IDSDevice locallyPresent]
-[_IDSDevice isDefaultPairedDevice]
-[_IDSDevice isLocallyPaired]
-[_IDSDevice isActive]
-[_IDSDevice relationship]
-[_IDSDevice pairingProtocolVersion]
-[_IDSDevice minCompatibilityVersion]
-[_IDSDevice maxCompatibilityVersion]
-[_IDSDevice serviceMinCompatibilityVersion]
-[_IDSDevice linkedUserURIs]
-[_IDSDevice setNSUUID:]
-[_IDSDevice nsuuid]
-[_IDSDevice stableBluetoothIdentifier]
-[_IDSDevice supportsiCloudPairing]
-[_IDSDevice supportsTethering]
-[_IDSDevice supportsHandoff]
-[_IDSDevice supportsApplePay]
-[_IDSDevice supportsSMSRelay]
-[_IDSDevice supportsMMSRelay]
-[_IDSDevice supportsPhoneCalls]
-[_IDSDevice deviceType]
-[_IDSDevice deviceColor]
-[_IDSDevice enclosureColor]
-[_IDSDevice isHSATrusted]
-[_IDSDevice pushToken]
-[_IDSDevice identities]
-[_IDSDevice _addIdentity:]
-[_IDSDevice _setAccount:]
-[_IDSDevice _setService:]
com.apple._IDSDevice.notification
_IDSIDQueryControllerConnectionQueue
_IDSIDQueryControllerQueue
set-id-status
v40@?0@"NSDictionary"8@"NSString"16@"NSString"24@"NSError"32
    "%@" =     (
        %@
    );
disableDaemonFallback
DisableDirectConnectionSend
v24@?0^@8I16i20
/Library/Caches/com.apple.xbs/Sources/IdentityServices_Sim/IDS/IDSDataChannels_Direct.m
%d-send
%d-recv
Not enough packet buffer space
IDSDC packet metadata
Failed to send write bytes (%d)
Data Port is 0
Metadata received is not the same
Unable to parse reply
127.0.0.1
17153
-[IDSDevice _initWithDictionary:]
-[IDSDevice initWithDictionary:]
-[IDSDevice _internal]
event-type
connected-link
disconnected-link
disconnected-link-ids
disconnected-link-uuids
disconnected-reason
rat-changed
default-link
default-link-id
rssi-key
preconnection-data-key
mtu-changed
somask-changed
info-report-events-key
error-key
encryption-info-key
membership-changed-reason-key
stat-response-key
session-info-response-key
probing-response-key
debug-data-type-key
debug-data-key
reporting-blob-key
preference-default-link-selection
preference-baseband-registration
preference-baseband-queue-flush-payload
preference-baseband-queue-flush
preference-pre-connection-data
preference-wait-for-pre-connection-data
preference-update-qos
preference-update-qos-is-good
preference-discard-link-ids
preference-query-information
preference-max-bitrate
preference-needs-encryption-info
preference-needs-force-update-encryption-info
preference-set-debugdata-type-key
preference-set-debugdata-key
preference-remote-device-version-key
baseband-registration-key
baseband-notification-operation-key
max-bitrate-key
wifi-local-attributes-changed-key
cellular-local-attributes-changed-key
<LinkContext %p> linkID %d (UUID:%@, QRSessionID:%@) networkType %u connectionType %s maxMTU %u RATType %lu maxBitrate %u (remote networkType %u connectionType %s RATType %lu), relay(provider:%d, token:%dB) serverIsDegraded: %@ localLinkFlags 0x%x remoteLinkFlags 0x%x, localDataSoMask: %u, remoteDataSoMask: %u, virtualRelayLink: %@, delegatedLinkID %d, localInterfaceName: %@
DatagramChannelFunctionalLogging
IDSDataChannelsRealTimeQueue
FileDescriptor
Dispatch
Daemon
Direct
<%p> channelFD %d connected %@ eventHandler %p readHandler %p withOptions %p auto %@
<%p> socket %d connected %@ eventHandler %p readHandler %p withOptions %p connetion %@
<%p> socket %d connected %@ eventHandler %p readHandler %p withOptions %p
-[IDSDatagramChannel underlyingFileDescriptor]
IDSDataChannels.m
_internal->_operationMode == IDSDatagramChannelOperationModeFileDescriptor
/Library/Caches/com.apple.xbs/Sources/IdentityServices_Sim/IDS/Client/IDSDataChannels.m
none
IDSFoundation
got CT(packet counting) option
kClientChannelMetadataType_CountPacketKey  should be 1 byte, not %u bytes, field: %u
kClientChannelMetadataType_GenerationCounterLSBKey should be 1 byte, not %u bytes, field: %u
got probeGroupID %u
kClientChannelMetadataType_ProbeGroupIDKey should be 2 bytes, not %u bytes, field: %u
linkStatus
IDS couldn't receive the response for the session info request.
v32@?0@"NSNumber"8@"NSNumber"16^B24
read sanity check failed: datagramSize %ld metadataSize %ld dataOffset %ld
-[IDSDatagramChannel start]
_internal->_readHandler
_internal->_eventHandler
_internal->_operationMode == IDSDatagramChannelOperationModeDispatch
Failed to send all bytes (%d < %d)
Connection terminated
Failed to send (errno %d)
-[IDSDatagramChannel readyToRead]
Could not serialize provided metadata.
The serialized metadata was greater than the max slot size allowed to send over the channel
%@-idswake
v24@?0@"NSObject<OS_xpc_object>"8@"NSObject<OS_xpc_object>"16
v16@?0@"NSMutableDictionary"8
-[IDSDeviceConnection initSocketWithDevice:options:completionHandler:queue:]
-[IDSDeviceConnection initStreamWithDevice:options:completionHandler:queue:]
Unable to create input and output stream
-[IDSDeviceConnection _internal]
FTPasswordManager
IDSGetServiceUserIDsWithCompletionBlock
IDSHomeKit.m
IDSGetAdminAccessTokensWithCompletionBlock
IDSGetConsentTokensWithCompletionBlock
IDSGetUserAccessTokensWithCompletionBlock
IDSRefreshUserAccessTokensWithCompletionBlock
IDSIDQueryControllerQueue
-[_IDSContinuity initWithDelegate:queue:delegateContext:]
-[_IDSContinuity startAdvertisingOfType:withData:withOptions:]
-[_IDSContinuity stopAdvertisingOfType:]
-[_IDSContinuity startScanningForType:withData:mask:peers:]
-[_IDSContinuity startScanningForType:withData:mask:]
-[_IDSContinuity startScanningForType:withData:mask:peers:boostedScan:duplicates:]
-[_IDSContinuity startScanningForType:withData:mask:boostedScan:duplicates:]
-[_IDSContinuity stopScanningForType:]
-[_IDSContinuity startTrackingPeer:forType:]
-[_IDSContinuity stopTrackingPeer:forType:]
-[_IDSContinuity _handleReconnect]
v16@?0@"<IDSContinuityDelegate>"8
-[_IDSContinuity _callDelegateWithBlock:]
nbuffer_append
IDSNBuffer.c
nbuffer_get_free_space(buf) >= size
nbuffer_ensure_freespace
-[_IDSSession _initWithAccount:destinations:transportType:connectionCountHint:needsToWaitForPreConnectionData:uniqueID:delegateContext:]
com.apple.private.alloy.phonecontinuity
-[_IDSSession _initWithAccount:destinations:options:delegateContext:]
-[_IDSSession initWithAccount:destinations:transportType:uniqueID:delegateContext:]
-[_IDSSession initWithAccount:destinations:transportType:delegateContext:]
-[_IDSSession initWithAccount:destinations:options:delegateContext:]
-[_IDSSession daemonDisconnected]
-[_IDSSession _broadcastNewSessionToDaemon]
-[_IDSSession _callDelegateWithBlock:]
-[_IDSSession setDelegate:queue:]
v16@?0@"<IDSSessionDelegate>"8
-[_IDSSession socket]
-[_IDSSession uniqueID]
-[_IDSSession _setupUnreliableSocketPairConnection]
-[_IDSSession _setupSocketPairToDaemon]
Error creating socketpair
Error getting socket flags from socketFD[0]
Error setting O_NONBLOCK flag on socketFD[0]
Error getting socket flags from socketFD[1]
Error setting O_NONBLOCK flag on socketFD[1]
Error setting SO_NOSIGPIPE on socketFD[0]
Error setting SO_NOSIGPIPE on socketFD[1]
Error setting SO_SNDBUF size on socketFD[0]
Error setting SO_SNDBUF size on socketFD[1]
Error setting SO_RCVBUF size on socketFD[0]
Error setting SO_RCVBUF size on socketFD[1]
socket
session-socket
socket-type
raw-socket
-[_IDSSession sendAllocationRequest:]
-[_IDSSession sendInvitationWithOptions:]
-[_IDSSession sendInvitationWithData:declineOnError:]
-[_IDSSession cancelInvitation]
-[_IDSSession cancelInvitationWithData:]
-[_IDSSession cancelInvitationWithRemoteEndedReasonOverride:]
-[_IDSSession acceptInvitation]
-[_IDSSession acceptInvitationWithData:]
-[_IDSSession declineInvitation]
-[_IDSSession declineInvitationWithData:]
-[_IDSSession reconnectSession]
-[_IDSSession endSession]
-[_IDSSession endSessionWithData:]
-[_IDSSession sendSessionMessage:]
-[_IDSSession sendSessionMessage:toDestinations:]
-[_IDSSession setAudioEnabled:]
-[_IDSSession getAudioEnabled]
-[_IDSSession setMuted:]
-[_IDSSession getMuted]
-[_IDSSession setPreferences:]
-[_IDSSession getPreferences]
-[_IDSSession setInviteTimeout:]
-[_IDSSession inviteTimeout]
-[_IDSSession sessionEndedReason]
-[_IDSSession sendData:error:]
-[_IDSSession sessionAcceptReceived:fromID:withData:]
-[_IDSSession sessionDeclineReceived:fromID:withData:]
-[_IDSSession sessionCancelReceived:fromID:withData:]
-[_IDSSession sessionMessageReceived:fromID:withData:]
-[_IDSSession sessionEndReceived:fromID:withData:]
-[_IDSSession session:invitationSentToTokens:shouldBreakBeforeMake:]
-[_IDSSession allocationDone:sessionInfo:]
-[_IDSSession sessionStarted:]
-[_IDSSession sessionEnded:withReason:error:]
-[_IDSSession session:audioEnabled:]
-[_IDSSession session:muted:]
session-initial-link-type
-[_IDSSession session:didReceiveReport:]
-[_IDSSession connection:didReceiveData:]
v20@?0@"NSArray"8B16
IDSInternalQueue
IDSInternalQueueControllerContext
com.apple.identityservices.error
dictionary
TTLItem
batch-query-limit
batch-query-time-limit
batch-query-use-death-timer
batch-query-time-to-live
batch-query-interval
batch-query-first-interval
batch-query-size
batch-query-max
-[IDSRealTimeEncryptionProxy initWithAccount:]
__kIDSServiceMonitorAvailabilityDidChangeNotification
kiMessageChangedNotification
kFaceTimeChangedNotification
kCallingChangedNotification
kScreenSharingChangedNotification
<%@: %p service:%@, serviceAvailability: %llu>
IDSTransactionLogTaskHandler.m
Unexpected task type
Abstract method
v24@?0@"<NSSecureCoding>"8@"NSError"16
v36@?0@"NSArray"8@"<NSSecureCoding>"16B24@"NSError"28
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
v24@?0@"IDSTransactionLogTaskHandlerAccountInfo"8@"NSError"16
_delegate
softlink:r:path:/System/Library/PrivateFrameworks/Transparency.framework/Transparency
softlink:r:path:/System/Library/PrivateFrameworks/Transparency.framework/Transparency
IDSContinuity
IDSDaemonProtocol
NSObject
IDSDaemonListenerProtocol
IDSDaemonController
IDSDaemonControllerForwarder
IDSXPCInternalTesting
IDSXPCInternalTestingInterface
IDSXPCKeyTransparency
IDSXPCKeyTransparencyInterface
IDSFirewallEntry
NSSecureCoding
NSCoding
NSCopying
IDSXPCReunionSync
IDSXPCReunionSyncInterface
IDSDirectMessageConnection
IDSGroupSessionDataCryptor
IDSGroupSession
IDSXPCRegistration
IDSXPCRegistrationInterface
IDSServiceAvailabilityController
IDSServiceContainer
IDSDaemonListener
_IDSRealTimeEncryptionProxy
IDSActivityInfo
IDSActivityUpdate
IDSActivityMonitor
_IDSActivityMonitorXPCConnectorXPCListener
IDSInvitationManager
IDSServiceDelegateInvitation
IDSServiceDelegate
IDSServerMessagingOptions
IDSServerMessagingOutgoingContext
IDSServerMessagingIncomingContext
IDSServerMessagingController
IDSXPCServerMessagingClient
IDSGroupContextNotifyingObserver
IDSGroupContextObserverDaemonProtocol
IDSSignInServiceUserInfo
IDSSignInServiceUserStatus
IDSSignInControllerAccountDescription
IDSSignInController
IDSAccountRegistrationDelegate
IDSAccountControllerDelegate
FaceTimeSupport
IDSSession
IDSCT
IDSAppleCareDaemonResponseListener
IDSFirewall
IDSBatchIDQueryController
IDSGroupEncryptionKeyMaterialCache
IDSConnection
Deprecated
IDSGroupSessionBroadcastParameter
IDSXPCPairing
IDSXPCPairingInterface
IDSDaemonResponseHandler
IDSTransactionLogTask
IDSTransactionLogSyncTask
IDSFamilyService
_IDSPasswordManager
IDSGroupSessionUnicastParameter
IDSXPCDaemon
IDSXPCDaemonInterface
IDSXPCDaemonClient
IDSXPCDaemonClientInterface
_IDSCompletionHandler
IDSPairedDeviceManager
IDSCarrierTokenRequestParameters
IDSCarrierToken
IDSAuthenticationSigningResult
IDSPhoneCertificateVendor
IDSRegistrationControlDaemonResponseListener
IDSXPCConnectionRemoteObjectPromise
IDSAccountController
_IDSGroupSession
IDSBaseSocketPairConnectionDelegate
IDSGroupContextController
IDSTransactionLogTaskHandlerDelegate
IDSGroupContextNotifyingObserverDelegate
IDSGroupContextControllerContent
IDSQuickRelayFixedTokenAllocator
_IDSConnection
IDSAccountDelegate
IDSDirectMessageConnectionDelegate
IDSSendXPCProtocol
_IDSSessionStore
IDSGroupContextDaemonProtocol
IDSGroupContextDataSourceDaemonProtocol
IDSGroupContextCacheMiddlewareDaemonProtocol
IDSDaemonProtocolController
IDSQuickSwitchAcknowledgementTracker
IDSLocalPairingAddPairedDeviceInfo
_IDSDeviceConnectionActiveMap
_IDSDeviceConnection
_IDSAccountController
IDSDictionaryInvitationContext
IDSInvitationContext
IDSXPCDaemonController
IDSLocalPairingIdentityDataErrorPair
IDSLocalPairingRecord
IDSLocalPairingPairedDeviceRecord
IDSLocalPairingLocalDeviceRecord
IDSXPCGroupSessionKeyValueDeliveryProvider
IDSXPCGroupSessionKeyValueDeliveryProviderInterface
IDSKTVerificationInfoProvider
KTVerificationInfoProvider
IDSKeyTransparencyManager
IDSAccount
_IDSGenericCompletionHandler
IDSHomeKitManager
IDSReportiMessageSpamDaemonResponseListener
IDSGroupSessionUnicastConnector
_IDSAccount
IDSXPCPairedDeviceManager
IDSXPCPairedDeviceManagerInterface
IDSService
IDSDaemonRequestContext
IDSDaemonRequestTimer
IDSAutoCleanup
_IDSService
IDSGroupContextControllerDelegate
IDSConnectionDelegatePrivate
IDSConnectionDelegate
IDSServicePseudonymChange
IDSTransactionLogMessage
IDSTransactionLogDataMessage
IDSTransactionLogDictionaryMessage
IDSPhoneSubscription
IDSPhoneTemporaryAliasDescription
IDSPhoneSubscriptionSelector
IDSGroupSessionKeyValueDeliveryHandlerProxy
IDSXPCGroupSessionKeyValueDeliveryDelegate
IDSGroupSessionKeyValueDelivery
IDSTransportLog
IDSLogging
IDSInvitation
IDSSentInvitation
IDSReceivedInvitation
IDSXPCConnection
NSXPCConnectionDelegate
IDSXPCConnectionTimeoutProxy
_IDSDevice
_IDSIDQueryController
IDSXPCOpportunistic
IDSXPCOpportunisticInterface
DirectConnections
IDSSimulatorProxyGroupSession
IDSDevice
_IDSDataChannelLinkContext
IDSDataChannelLinkContext
_IDSDatagramChannel
IDSDatagramChannel
_IDSXPCCheckInInfo
_IDSXPCCheckinManager
IDSDeviceConnection
IDSXPCActivityMonitor
IDSXPCActivityMonitorClient
IDSXPCActivityMonitorInterface
IDSIDQueryController
_IDSContinuity
IDSXPCFirewall
IDSXPCFirewallInterface
_IDSSession
Additions
IDSGroupContextDataSource
ENGroupContextDataSource
ENGroupContextCacheMiddleware
ENGroupContextMiddleware
IDSInternalQueueController
IDSServerMessagingMessage
IDSXPCServerMessaging
IDSXPCServerMessagingInterface
_IDSActivityMonitorXPCConnector
IDSXPCGroupSessionKeyValueDelivery
IDSXPCGroupSessionKeyValueDeliveryInterface
_IDSBatchIDQueryController
IDSIDQueryControllerDelegate
IDSRealTimeEncryptionProxy
IDSServiceMonitor
IDSTransactionLogTaskHandlerAccountInfo
IDSTransactionLogTaskHandler
IDSTransactionLogBaseTaskHandler
IDSTransactionLogSyncTaskHandler
ACKTracker
IDSDataChannels
BTOutOfBandKey
RATType
CTSIMSFromPhoneSubscriptions:
T@"IDSEndpointCapabilities",R,N
CrossLayerLogging
T@"NSData",R,N,V_BTOutOfBandKey
DaemonController
T@"NSDate",R,N,V_expirationDate
DaemonProxy
T@"NSSet",R,C,N
GUIDTRACE
T@"NSString",R,N,V_carrierNonce
GroupSessionKeyValueDelivery
TB,N,V_directMessagingSupported
IDSAccountController
TB,N,V_supportsIPsecWithSPPLink
IDSConnection_oversize
TB,R,N,V_isSync
IDSDeviceConnection
TI,V_totalPacketsReceivedOnLink
IDSLocalSetup
Ti,N,V_directMessagingRetryMSEC
IDSReportSpam
Tq,R,N,V_pairingProtocolVersion
IDSService
_BTOutOfBandKey
IDSSession
__imFirstObject
IMEI
_alwaysSkipSelf
NRPairing
_cachedCommands
OTRTestCallback:time:error:
_callDelegatesForDevicesChanged
QRSessionID
_cloudConnected
SIMForIdentifier:
_connectionUUID
ServiceAvailability
_delegateToInfo
T#,R
_directMessagingReportStatsMSEC
T@"<IDSActivityMonitorListenerDelegate>",W,N,V_delegate
_dumpLinkContextConnectionsInfo
T@"<IDSDirectMessageConnectionDelegate>",W,N,V_delegate
_enableStrictSecureDecodingMode
T@"<IDSGroupContextControllerDelegate>",N,V_delegate
_fromID
T@"<IDSGroupSessionKeyValueDeliveryHandler>",W,N,V_handler
_groupSessionID
T@"<IDSInvitationManagerDelegate>",W,N,V_delegate
_isAudioEnabled
T@"<IDSXPCAdapter>",&,N,V_XPCAdapter
_isDeviceOnline
T@"<NSXPCProxyCreating>",&,N,V_remoteObject
_joinLeaveError
T@"CUTDeferredTaskQueue",&,N,V_pseudonymUpdateTaskQueue
_linkID
T@"ENAccountIdentity",&,N,V_accountIdentity
_matchingDevice
T@"ENGroupContext",&,N,V_groupContext
_messageContext
T@"IDSCTAdapter",&,N,V_CTAdapter
_nextQueryTimer
T@"IDSCloudKitContainer",&,N,V_cloudKitContainer
_outgoingMessageLoggingSequence
T@"IDSDaemonRequestTimer",R,N,V_daemonRequestTimer
_peerID
T@"IDSDevice",&,N,V_device
_registeredURIs
T@"IDSDeviceConnection",&,N,V_deviceConnection
_removeAccount:
T@"IDSEndpointCapabilities",R,N,V_capabilities
_setDirectConnection:forLinkID:
T@"IDSGroupContextNotifyingObserver",&,N,V_observer
_socket
T@"IDSPseudonym",R,N,V_pseudonym
_stopStatsTimer
T@"IDSServiceMonitor",&,N,V_monitor
_tearDownConnectionForUniqueID:
T@"IDSServiceProperties",R,C,N
_unreliableSocketPairConnection
T@"IDSTransactionLogTask",&,N,V_task
accountController:accountAdded:
T@"IDSURI",R,N,V_uri
accountRemoved:
T@"IDSXPCConnection",&,N,V_rootConnection
accountUpdated:
T@"IDSXPCDaemonController",&,N,V_syncDaemonController
allKeys
T@"IMPowerAssertion",&,N,V_assertion
appleID
T@"NSArray",&,N,V_URIs
batchQueryController:updatedDestinationsStatus:onService:error:
T@"NSArray",R,C,N
cleanupSession:
T@"NSArray",R,N,V_authenticationCertificateSignatures
completionBlock
T@"NSArray",R,N,V_serviceUserInfos
connectingQueue
T@"NSArray",R,W,N
connectionQueue
T@"NSData",&,N,V_identityData
containsObject:
T@"NSData",&,N,V_salt
context
T@"NSData",C,V_appleID
currentCalendar
T@"NSData",C,V_relayIPv6
currentProgress
T@"NSData",C,V_relaySessionKey
dataWithLength:
T@"NSData",R
delegatedLinkID
T@"NSData",R,N,V_clientContext
destinationURIs
T@"NSData",R,N,V_inputData
devices
T@"NSData",R,N,V_pushToken
disableAccount:
T@"NSData",R,W,N
enabledAccounts
T@"NSDate",R,N
fullDescription
T@"NSDate",R,W,N
getAudioEnabled
T@"NSDictionary",&,N,V_applicationToVerificationInfoProviders
getDispatchDataForPacketBuffer:
T@"NSDictionary",&,N,V_directMessagingMetadata
getPairedDevicesWithCompletion:
T@"NSDictionary",&,N,V_dsidToFamilyMember
groupSessionKeyValueDeliveryProviderCollaboratorWithCompletion:
T@"NSDictionary",&,N,V_protectionClassIdentityDataMap
handlerWithTask:delegate:queue:
T@"NSDictionary",R,N
hasEntitlement:
T@"NSDictionary",R,N,V_dictionaryValue
initWithFormat:
T@"NSError",&,N,V_error
initWithString:
T@"NSInputStream",R,N
initialLinkType
T@"NSMapTable",&,N,V_interruptionHandlerByTarget
isEqualToArray:
T@"NSMutableArray",&,N,V_connectionMessageSendQueue
isMuted
T@"NSMutableDictionary",&,N,V_accountIDDescriptionMap
isReply
T@"NSMutableDictionary",&,N,V_completionBlocksByRequestID
isValid
T@"NSMutableDictionary",&,N,V_initialStateByService
killSystemTimer
T@"NSMutableDictionary",&,N,V_messageIDToMessageDictionary
localDataSoMask
T@"NSMutableDictionary",&,N,V_queueOneToMessageIDDictionary
lowercaseString
T@"NSMutableDictionary",&,N,V_syncCollaboratorDictionary
message
T@"NSMutableSet",R,N,V_listeners
methodSignature
T@"NSNumber",&,N,V_timeout
modelIdentifier
T@"NSNumber",C,V_relayPort
T@"NSObject<OS_dispatch_queue>",&,N,V_connectionQueue
numberWithBool:
T@"NSObject<OS_dispatch_queue>",&,N,V_signInQueue
numberWithLong:
T@"NSObject<OS_dispatch_queue>",R,N,V_ivarQueue
participantData
T@"NSObject<OS_dispatch_queue>",R,N,V_remoteMessageQueue
passwordUpdated
T@"NSObject<OS_dispatch_source>",&,N,V_reporterTimer
peerIsConnected
T@"NSObject<OS_nw_connection>",&,N,V_connection
perform
T@"NSObject<OS_nw_parameters>",R,N,V_parameters
promise
T@"NSObject<OS_xpc_object>",&,N,V_tempObject
pseudonymURIMap
T@"NSProtocolChecker",R,N,V_protocol
receiveMessages
T@"NSSet",&,N,V_familyMembers
registerPluginForGroup:options:
T@"NSSet",R,N,V_impactedServiceIdentifiers
relaySessionKey
T@"NSSet",R,N,V_requiredLackOfCapabilities
remoteLinkFlags
T@"NSString",&,N,V_activityIdentifier
removeListener:
T@"NSString",&,N,V_currentStreamName
responseHandler
T@"NSString",&,N,V_labelID
scopeID
T@"NSString",&,N,V_mergeID
sendData:error:
T@"NSString",&,N,V_peerID
sendMediaMembershipChangedInfo:
T@"NSString",&,N,V_serviceName
service
T@"NSString",&,N,V_uuid
serviceSpaceDidBecomeAvailable:
T@"NSString",R
sessionStarted:
T@"NSString",R,C,N
setAccessToken:
T@"NSString",R,C,N,V_senderMergeID
setAccountUUID:
T@"NSString",R,N
setCompletionBlocksByRequestID:
T@"NSString",R,N,V_accountUniqueID
setDisplayName:
T@"NSString",R,N,V_fromID
setFakeMessage:
T@"NSString",R,N,V_groupSessionIDAlias
setHandlerUUID:
T@"NSString",R,N,V_loginID
setInterruptionHandlerByTarget:
T@"NSString",R,N,V_subActivity
setMessageData:
T@"NSString",R,N,V_topic
setMultiplexer:
T@"NSString",R,W,N
setNumberStyle:
T@"NSUUID",&,N,SsetNSUUID:
setPreferences:
T@"NSUUID",R
setServiceName:
T@"NSUUID",R,N
setSignInQueue:
T@"NSXPCConnection",&,N,V_connection
setWakingPushPriority:forTopic:
T@"_IDSAccount",R,&,N
setWithObjects:
T@"_IDSConnection",R,N
T@"_IDSService",R,N
stringByAppendingPathComponent:
T@,R,N,V_block
supportsHandoff
T@?,C,N,V_batchProcessingBlock
unselectSubscription:withError:
T@?,C,N,V_completionBlock
uppercaseString
T@?,C,N,V_daemonControllerBuilder
validateProfile
T@?,C,N,V_handler
.cxx_destruct
IDQuery
Accounts
KeyTransparency
CTAdapter
T@"IDSDataChannelLinkContext",R
Connection
T@"NSArray",R,N
DSID
T@"NSDate",&,N,V_expirationDate
DaemonListener
T@"NSMutableDictionary",&,N,V_connectionInfoByServiceIdentifier
FZIDType
T@"NSString",&,N,V_listenerGUID
GroupSessionDataCryptor
T@,&,N,V_target
IDQueryCompletedWithFromURI:idStatusUpdates:service:success:error:
TB,N,V_pendingAckTimerSuspended
IDSConnection
TB,N,V_trafficClassTLVProcessed
IDSDevice
TB,R,V_isLightweightParticipant
IDSDirectMessagingConnection
TQ,R,N,V_status
IDSRealTimeEncryptionProxy
Ti,N,V_priority
IDSServerMessaging
IDSService_oversized
_MKIArrivalTime
IDSiCloudSignInHack
_accountsLoaded
MTUForAddressFamily:
_cachedAccounts
NSUUID
_cachedServices
QRAllocator
_cbuuid
RealTimeEncryptionController
_connectionType
SIMIdentifier
_daemonListener
SimulatorProxy
_device
T*,N,V_shortServiceNameCString
_disconnectFromDaemonWithForce:
T@"<IDSDestinationProtocol>",R,C,N,V_destination
_enableAccount:
T@"<IDSGroupContextCacheMiddlewareDaemonProtocol>",R,N
_expirationDate
T@"<IDSGroupContextDataSourceDaemonProtocol>",R,N
_getAdminAccessTokensCompletion
T@"<IDSInvitationContext>",R,N,V_context
_incomingMessageLoggingSequence
T@"<IDSTransactionLogTaskHandlerDelegate>",W,N,V_delegate
_isDead
T@"<IDSXPCConnectionProtocol>",&,N,V_connection
_isSync
T@"<_IDSPasswordManager>",&,N,V_passwordManager
_lastUpdateCaps
T@"CUTPromiseSeal",&,N,V_seal
_localLinkFlags
T@"ENAccountIdentity",R,N,V_accountIdentity
_maxMTU
T@"IDSAccount",R,N
_nearby
T@"IDSCertifiedDeliveryContext",&,N,V_certifiedDeliveryContext
_nsuuid
T@"IDSDaemonListener",R,N,V_daemonListener
_parent
T@"IDSDestination",R,N
_protectionClassIdentityDataMap
T@"IDSDevice",&,N,V_matchingDevice
_relaySessionID
T@"IDSDirectMessageConnection",&,N,V_directMessageConnection
_rootConnection
T@"IDSGroupContextController",R,&,N,V_groupContextController
_setWiFiAssist:
T@"IDSPhoneCertificateVendor",&,N,V_strongSelfReference
_status
T@"IDSService",R,N,V_internal
_target
T@"IDSServiceProperties",&,N,V_serviceProperties
_tokens
T@"IDSTransactionLogSyncTask",&,N,V_syncTask
account
T@"IDSURI",R,N,V_URI
accountIdentity
T@"IDSXPCConnection",&,N,V_connection
accountUniqueID
T@"IDSXPCDaemonController",&,N,V_daemonController
aliases
T@"IDSXPCDaemonController",&,N,V_xpcDaemonController
allowedServices
T@"IMRemoteObject<IDSDaemonProtocol>",&,N,V_remoteObject
arrayWithArray:
T@"NSArray",R
canSend
T@"NSArray",R,N,V_URIs
command
T@"NSArray",R,N,V_deviceUniqueIDs
connectToDaemon
T@"NSArray",R,N,V_tokens
connectionIndex
T@"NSData",&,N,V_bluetoothMACAddress
connectionState
T@"NSData",&,N,V_messageData
containsString:
T@"NSData",C,N,V_appContext
continuityClientInstanceCreated
T@"NSData",C,V_relayIP
currentEntries:
T@"NSData",C,V_relaySessionID
daemonConnected
T@"NSData",C,V_relaySessionToken
dealloc
T@"NSData",R,N
dequeueMessages
T@"NSData",R,N,V_dataValue
deviceUniqueIDs
T@"NSData",R,N,V_nonce
dictionaryValue
T@"NSData",R,N,V_salt
dropAllMessagesWithoutAnyAllowedClassifierForDevice:completion:
T@"NSDate",R,C,N,V_expirationDate
fetchPeerVerificationInfoForApplication:forURIs:withCompletion:
T@"NSDate",R,N,V_lastSeen
general
T@"NSDictionary",&,N
getDestinations
T@"NSDictionary",&,N,V_cachedPseudonymURIMap
getKeyTransparencyOptInEligiblityForApplication:withCompletion:
T@"NSDictionary",&,N,V_dsidToDeviceList
groupID
T@"NSDictionary",&,N,V_powerAssertionOptions
handler
T@"NSDictionary",R,C,V_dictionary
handles
T@"NSDictionary",R,N,V_aliasToAccountsMap
idStatusUpdatedForDestinations:
T@"NSDictionary",R,W,N
initWithService:delegate:queue:
T@"NSHashTable",&,N,V_delegateMap
initWithTopic:daemonController:
T@"NSMapTable",&,N,V_delegateByServiceType
isDirectMessage
T@"NSMapTable",&,N,V_sessionBySessionID
isLocallyPaired
T@"NSMutableArray",&,N,V_pendingInvocations
isProxy
T@"NSMutableDictionary",&,N,V_collaboratorPromiseDictionary
isSetupComplete
T@"NSMutableDictionary",&,N,V_inFlightRequests
keyType
T@"NSMutableDictionary",&,N,V_listenersByActivity
labelID
T@"NSMutableDictionary",&,N,V_pendingTransactions
loginID
T@"NSMutableDictionary",&,N,V_serviceNameAccountControllerMap
mergeID
T@"NSMutableSet",&,N,V_delegates
messageIdentifier:alternateCallbackID:forAccount:willSendToDestinations:skippedDestinations:registrationPropertyToDestinations:
T@"NSNumber",&,N,V_state
metrics
T@"NSNumber",C,V_relayCombinedSoftwareID
monitor
T@"NSObject<OS_dispatch_queue>",&,N,V_connectingQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
numberWithChar:
T@"NSObject<OS_dispatch_queue>",N,V_queue
originalCommand
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
passwordManager
T@"NSObject<OS_dispatch_source>",&,N,V_pendingAckTimer
payload
T@"NSObject<OS_nw_connection>",&,N,V_cachedConnection
pendingAckTimer
T@"NSObject<OS_nw_endpoint>",R,N,V_endpoint
phoneUserStatus
T@"NSObject<OS_os_log>",R
protobufReceived:withGUID:forTopic:toIdentifier:fromID:context:
T@"NSOutputStream",R,N
readFromSocketDescriptorWithReadHandler:readHandlerWithOptions:
T@"NSSet",&,N
registerAccount
T@"NSSet",R,N
relayIP
T@"NSSet",R,N,V_requiredCapabilities
release
T@"NSString",&,N
removeDelegate:
T@"NSString",&,N,V_applicationIdentifier
resetConnection
T@"NSString",&,N,V_identifier
retainArguments
T@"NSString",&,N,V_loginID
selectedSubscriptionsWithError:
T@"NSString",&,N,V_messageID
sendInvitation:toDestination:priority:options:identifier:error:
T@"NSString",&,N,V_service
serverTimestamp
T@"NSString",&,N,V_uniqueID
serviceNameAccountControllerMap
T@"NSString",C,N,V_multiplexer
session:invitationSentToTokens:
T@"NSString",R,C
T@"NSString",R,C,N,V_fromID
setAccountInfo:
T@"NSString",R,C,V_schemaIdentifier
setCheckinLock:
T@"NSString",R,N,V_IMEI
setDelegateMap:
T@"NSString",R,N,V_activity
setDropMessageIndicatorCommand:
T@"NSString",R,N,V_groupSessionID
setForceKeyRoll:withCompletion:
T@"NSString",R,N,V_listenerID
setHasMetadata:
T@"NSString",R,N,V_serviceName
setMTU:
T@"NSString",R,N,V_tokenString
setMessageUUID:
T@"NSString",R,N,V_uniqueID
setNotifyToken:
T@"NSUUID",&
setPairingType:
T@"NSUUID",C,N,V_handlerUUID
setReadHandler:
T@"NSUUID",R,C,N,V_uniqueID
setShouldPairDirectlyOverIPsec:
T@"NSUUID",R,N,V_cbuuid
setSyncDaemonControllerBuilder:
T@"NSXPCInterface",&,N,V_interface
setWantsAppAck:
T@"_IDSActivityMonitorXPCConnector",&,N,V_XPCConnector
shouldContinueFromLastSyncPoint
T@"_IDSDeviceConnection",R,N
startLocalSetup
T@,&,N,V_boostContext
success
T@,W,N,V_delegate
timeout
T@?,C,N,V_completion
updateMetadata:
T@?,C,N,V_connectionReadyCallback
T@?,C,N,V_errorHandler
warning
T@?,C,N,V_invalidationHandler
T@?,C,N,V_knownRecordIDsFromList
T@?,C,N,V_syncDaemonControllerBuilder
T@?,R,N,V_completion
TB,N
TB,N,GisPretendingToBeFull
TB,N,S_setHidingDisconnect:
TB,N,S_setIsEnabled:
TB,N,V_conciseACKSupported
TB,N,V_connectionIsIncoming
TB,N,V_connectionSetupInProgress
TB,N,V_directMessagingAllowed
TB,N,V_finishedTransaction
TB,N,V_forSyncMessaging
TB,N,V_fromServerStorage
TB,N,V_isDeviceOnline
TB,N,V_isDonated
TB,N,V_manuallyAckMessages
TB,N,V_peerIsConnected
TB,N,V_peerIsNearby
TB,N,V_peerSupportsDeviceConnection
TB,N,V_shouldContinueFromLastSyncPoint
TB,N,V_shouldPairDirectlyOverIPsec
TB,N,V_syncOntoMain
TB,N,V_trafficClassInitialized
TB,N,V_upgradedTrafficClass
TB,N,V_wantsPseudonymUpdates
TB,R
TB,R,N
TB,R,N,GisCloudConnected
TB,R,N,GisConnected
TB,R,N,GisNearby
TB,R,N,V_selected
TB,S_setAutoReconnect:,V_autoReconnect
TC,R
TI,N,V_dataProtectionClass
TI,N,V_trafficClassToUse
TI,N,V_wakingDowngradeCount
TI,R
TI,R,N
TI,R,N,V_state
TI,V_totalPacketsSentOnLink
TQ,N,V_directMessagingState
TQ,N,V_identifier
TQ,N,V_incomingMessageBytes
TQ,N,V_incomingMessageCount
TQ,N,V_outgoingMessageBytes
TQ,N,V_outgoingMessageCount
TQ,R
TQ,R,N
TQ,R,N,V_changeType
TQ,R,N,V_connectionIndex
TQ,R,N,V_initialLinkType
TQ,R,N,V_localParticipantID
TQ,R,N,V_participantIDAlias
TQ,R,N,V_remoteParticipantID
TQ,R,N,V_serverTimestamp
TQ,R,N,V_serviceType
TQ,R,N,V_type
TS,R
Tc,R
Td,N,V_signInFuzz
Td,N,V_signInTimeout
Td,N,V_timeout
Ti,N,V_connectionState
Ti,N,V_curXPCMessagePriority
Ti,N,V_directMessagingReportStatsMSEC
Ti,N,V_directMessagingTimeOutMSEC
Ti,N,V_notifyToken
Ti,R,N
Ti,V_socket
Tq,N
Tq,N,V_idsPriorityToUse
Tq,N,V_pairingType
Tq,N,V_subscriptionSlot
Tq,N,V_trafficClassApplied
Tq,R
Tq,R,N
Tq,R,N,V_dataMode
Tq,R,N,V_state
Tq,R,N,V_subscriptionSource
Tq,R,N,V_updateFlags
Tq,R,V_contextType
Tq,R,V_dataPathType
Tq,R,V_state
T{?=qqq},R,N
T{os_unfair_lock_s=I},N,V_checkinLock
T{os_unfair_lock_s=I},N,V_inFlightLock
URIWithPrefixedURI:
URIs
UTF8String
UUID
UUIDString
XPCAdapter
XPCConnector
_CTAdapter
_FTOptionallyDecompressData
_IDSDataFromBase64String:
_IDSGroupSession
_IDSGroupSession_oversize
_IDSService
_IDSSession
_IMEI
_QRSessionID
_RATType
_URI
_URIFromFZIDType:
_URIs
_URIsToParticipantIDRequests
_XPCAdapter
_XPCConnector
___oldDealloc
__imArrayByApplyingBlock:
__imArrayByFilteringWithBlock:
__imDataWithHexString:
__imDataWithRandomBytes:
__imSetByApplyingBlock:
__imSetFromArray
__mainThreadPostNotificationName:object:userInfo:
__postSetupComplete
__sendMessage:queue:reply:failBlock:waitForReply:
_accessCount
_accessDelegateIdentifiersInCriticalSectionWithBlock:
_accessRequestContextMapInCriticalSectionWithBlock:
_account
_accountConfig
_accountController
_accountControllerForName:
_accountID
_accountIDDescriptionMap
_accountIdentity
_accountToActiveDeviceUniqueID
_accountToDevices
_accountUniqueID
_accountWithAlias:
_accountWithURI:orPseudonym:
_accountWithUniqueID:
_acknowledgementBlockWithDelegateIdentifier:
_acknowledgementTracker
_acquiringDaemonConnection
_actionOnAccountOfType:onService:actionBlock:
_activeConnectionMap
_activeDevice
_activeDeviceForUniqueID:
_activity
_activityIdentifier
_addIdentity:
_agentDidLaunchNotification:
_aliasToAccountsMap
_allowedTrafficClassifiers
_appContext
_appearsToBeEmail
_appearsToBePhoneNumber
_appearsToBePseudonymID
_appleID
_applicationIdentifier
_applicationToVerificationInfoProviders
_applicationWillTerminate
_assertVoidReturnValueInInvocation:
_assertion
_authenticationCertificateSignatures
_autoReconnect
_availability
_availabilityHandlers
_awdMetrics
_batchProcessingBlock
_bestGuessURI
_block
_blockUntilSendQueueIsEmpty
_bluetoothMACAddress
_boostContext
_broadcastNewSessionToDaemon
_buildPacketBufferMetaData:
_cache
_cacheForService:
_cachedCapabilities
_cachedConnection
_cachedPseudonymURIMap
_cachedStatusForDestination:service:
_callCloudConnectedDevicesChanged
_callConnectedDevicesChanged
_callDelegateWithBlock:
_callDelegatesRespondingToSelector:withPreCallbacksBlock:callbackBlock:postCallbacksBlock:
_callDelegatesRespondingToSelector:withPreCallbacksBlock:callbackBlock:postCallbacksBlock:group:
_callDelegatesWithBlock:
_callDelegatesWithBlock:delegateMap:
_callDelegatesWithBlock:group:
_callDevicesChanged
_callHandlersAsyncWithBlock:
_callHandlersWithBlock:
_callHandlersWithBlockOnIvarQueue:
_callHandlersWithBlockOnIvarQueue:cleanup:
_callIsActiveChanged
_callLinkedDevicesChanged
_callNearbyDevicesChanged
_callRegistrationDelegatesWithBlock:
_calloutPseudonymsDidUpdate
_calloutToDelegateWithResult:error:
_canAccount:sendWithFromID:
_canServiceNameAcceptMessagesInTransientRegistrationState:
_capabilities
_carrierNonce
_cellularLink
_certifiedDeliveryContext
_cfsJoinReply
_cfsLeaveReply
_cfs_client
_cfs_requestID
_changeType
_channelNumber
_checkAndSendDataCryptor
_checkinLock
_childConnectionID
_cleanupAllPendingTransactions
_cleanupBlock
_cleanupCompletionBlock
_cleanupSocketPairConnections
_cleanupStateForAccountID:
_clientContext
_clientErrorForCode:underlyingError:
_clientIsSandboxed
_clientTimeout
_clientUUID
_close
_cloudConnectedStateChanged
_cloudKitContainer
_collaboratorPromiseDictionary
_collaboratorWithIdentifier:interface:timeout:errorHandler:resolverBlock:
_commands
_completeWithError:
_completion
_completionBlock
_completionBlocksByRequestID
_conciseACKSupported
_connect
_connectToDaemonWithLaunch:services:commands:capabilities:
_connected
_connectedStateChanged
_connectingQueue
_connection
_connectionComplete
_connectionCountHint
_connectionID
_connectionIndex
_connectionInfoByServiceIdentifier
_connectionIsIncoming
_connectionMessageSendQueue
_connectionQueue
_connectionReadyCallback
_connectionSetupInProgress
_connectionState
_connectionWithAccount:commands:indirectDelegateCallouts:
_contentWithCompletion:
_context
_contextKey
_contextType
_copyForEnumerating
_createAccountControllerForService:
_createAccountWithDictionary:accountID:serviceName:
_createParticipantIDAliasCallbacks
_createXPCConnectionOnQueue:
_criticalFindRequestContextWithResponseHandler:
_criticalInvalidateTimeoutAndReturnHandlerForRequestID:
_criticalInvokeTimeoutBlockForRequestID:
_curXPCMessagePriority
_currentCachedIDStatusForDestination:service:listenerID:
_currentCachedRemoteDevicesForDestinations:service:listenerID:
_currentIDStatusForDestination:service:listenerID:
_currentIDStatusForDestination:service:respectExpiry:listenerID:
_currentIDStatusForDestinations:service:listenerID:
_currentIDStatusForDestinations:service:respectExpiry:listenerID:
_currentMessageContext
_currentRemoteDevicesForDestinations:service:listenerID:queue:waitForReply:completionBlock:
_currentStreamName
_daemonConnectedGroup
_daemonController
_daemonControllerBuilder
_daemonDied:
_daemonProxyWithErrorHandler:
_daemonRequestTimer
_dataCryptorRequests
_dataMode
_dataPathType
_dataProtectionClass
_dataValue
_debugDescriptionForErrorCode:
_decryptionCryptorsByKeyID
_decryptionKeysByKeyID
_defaultLinkID
_defaultPairedDevice
_delegate
_delegateByServiceType
_delegateCapabilities
_delegateContext
_delegateIdentifiers
_delegateIdentifiersMutex
_delegateMap
_delegateMapForListenerID:service:
_delegateQueue
_delegatedLinkID
_delegates
_deleteCompletion
_deliveryHandlers
_deliveryStatsCompletion
_destination
_destinations
_destinationsInMessages:
_destinationsLightweightStatus
_destinationsToQuery
_destinationsToQuerylock
_deviceConnection
_deviceIdentifier
_deviceUniqueIDs
_devices
_devicesLoaded
_dictionary
_dictionaryRepresentation
_dictionaryValue
_didCacheGroup:completion:
_didCreateGroup:completion:
_didJoinCallback
_didLeaveCallback
_didReceiveDecryptionFailureForGroup:completion:
_didUpdateGroup:withNewGroup:completion:
_directConnectionForLinkID:
_directConnectionIsReady
_directConnectionsByLinkID
_directMessageConnection
_directMessagingAllowed
_directMessagingMetadata
_directMessagingRetryMSEC
_directMessagingState
_directMessagingSupported
_directMessagingTimeOutMSEC
_directOrDaemonConnectionForLinkID:
_disableAccount:
_disableEncryption
_disallowCellularInterface
_disallowWifiInterface
_disconnectFromQueryService
_disconnectedBlock
_dsidToDeviceList
_dsidToFamilyMember
_enableSingleChannelDirectMode
_enabledAccounts
_encryptingCryptor
_encryptingKey
_encryptingKeyID
_encryptingKeySalt
_endpoint
_enforceSandboxPolicy
_error
_errorHandler
_eventHandler
_everHadDelegate
_existingParticipants
_extractparticipantIDToHashedIDMappingFromData:
_failMessages
_familyMembers
_fatalErrorOccured
_fetchGroupWithGroupID:skipCache:completion:
_filteredAccountsFrom:
_finishedTransaction
_firstPacketArrivalTimeForMKI
_flushQueryCacheForService:
_forSyncMessaging
_forwarder
_fromServerStorage
_fullIdenityForDataProtectionClass:error:
_getConsentTokensCompletion
_getParticipantIDForAliasCallbacks
_getParticipantIDForAliasDelegateQueueCallbacks
_getServiceUserIDsCompletion
_getUserAccessTokensCompletion
_groupContext
_groupContextCacheMiddleware
_groupContextController
_groupContextDataSource
_groupFromPublicDataRepresentation:completion:
_groupID
_groupIDsFromMessages:
_groupSessionIDAlias
_groupsByGroupIDFromGroups:
_handleDaemonException:
_handleInterruption
_handleLastCallForPendingIdentifier:callbackID:
_handlePretendingToBeFullWithIdentifier:
_handleReconnect
_handleServiceMonitorNotification:
_handleSystemTimerFired:
_handler
_handlerUUID
_handlers
_hasBeenSuspended
_hasCacheForService:
_hasCheckedForDaemon
_hasMetadata
_hasTimedOut
_hbhDecryptionkey
_hbhEncryptionkey
_hidingDisconnect
_idStatusCache
_idStatusForDestinations:service:listenerID:allowRenew:respectExpiry:waitForReply:forceRefresh:bypassLimit:completionBlock:
_identifier
_identityData
_idsPriorityToUse
_idsSimulatorSupportDataHandlerToken
_imMethodSignatureForSelector:
_immutableCloudConnected
_impactedServiceIdentifiers
_inFlightLock
_inFlightRequests
_incomingBytes
_incomingMessageBytes
_incomingMessageCount
_incomingPackets
_indirectDelegateCallouts
_info
_init
_initWithAccount:commands:indirectDelegateCallouts:
_initWithAccount:destinations:options:delegateContext:
_initWithAccount:destinations:transportType:connectionCountHint:needsToWaitForPreConnectionData:uniqueID:delegateContext:
_initWithAccount:destinations:transportType:uniqueID:
_initWithAccountUniqueID:fromID:loginID:serviceName:
_initWithDelegateContext:
_initWithDictionary:
_initWithDictionary:uniqueID:serviceName:
_initWithQueue:isSync:
_initWithQueue:isSync:connectionCreationBlock:
_initWithQueue:syncOntoMain:takingOverAndResumingConnection:forSyncMessaging:
_initWithService:
_initWithService:onIDSQueue:
_initWithSubActivity:
_initialLinkType
_initialStateByService
_initializeStateMachineForAccountID:service:state:completion:
_inputData
_inputStreamForSocket
_instanceID
_interface
_internal
_internalDidSwitchActivePairedDevice:forService:
_internalQueueController
_internalSwitchActivePairedDevice:forAccount:
_internalSwitchActivePairedDevice:forService:
_internal_sessionWithValidityCheck
_interruptionHandlerByTarget
_invalidateNextQueryTimer
_invalidationHandler
_invitationsLoadedFromDisk
_inviteTimeout
_invocationHasBlock:
_isAccountInValidRegistrationStateToAcceptMessages
_isDefaultPairedDevice
_isDestinationSingleLocalAddress:
_isDonated
_isDroppingMessages
_isEnabled
_isInvalidated
_isInvisibleAlias:
_isLegacy
_isLightweightParticipant
_isListenerWithID:listeningToService:
_isLocalAccountVisible
_isMagnoliaService
_isMuted
_isPhoneCertificateVendorSupported
_isServiceCurrentlyEnabled:
_isSessionInfoValid:
_isThumperService
_isValidServiceType:
_isVirtualRelayLink
_isiCloudPairingService
_ivarQueue
_keyMaterialCache
_keychainRegistration
_knownRecordIDsFromList
_labelID
_lastIncomingStatReport
_lastIsActiveSet
_lastOutgoingStatReport
_lastSeen
_linkContextForLinkID:
_linkContexts
_linkContextsByLinkID
_linkIDToParticipantMap
_linkUUID
_linkedDevices
_linkedDevicesLoaded
_listenerCapabilities
_listenerCaps
_listenerCommands
_listenerGUID
_listenerID
_listenerIDToServicesMap
_listenerServices
_listenerSetUpdated
_listeners
_listenersByActivity
_loadCachedAccounts
_loadCachedAccountsWithDictionaries:
_loadCachedDevices
_loadCachedLinkedDevices
_localCompletion
_localDataSoMask
_localInterfaceName
_localObject
_localObjectCleanup
_localParticipantID
_localRelayLinkID
_localRemoteRelayLinkIDToVirtualLinkIDMap
_lock
_logConnectionMap
_logReceivingStats:
_logSendingStats:
_loginID
_makeConnectionWithLaunch:completionBlock:
_makeDirectPacketBufferFromDatagram:datagramSize:currentDatagramCount:totalDatagramCount:datagramInfo:datagramOptions:linkContext:
_makePacketBufferFromDatagram:datagramSize:currentDatagramCount:totalDatagramCount:datagramInfo:datagramOptions:
_manuallyAckMessages
_maxBitrate
_mergeID
_messageData
_messageID
_messageIDToMessageDictionary
_messageTypeForCommand:
_methodSignatureForRemoteSelector:
_monitor
_mtu
_multiplexer
_nearbyStateChanged
_nearbyToken
_needsMediaEncryptionInfo
_needsToWaitForPreConnectionData
_networkType
_nextQuery:
_nonce
_noteDisconnected
_noteSetupComplete
_notificationServices
_notifyToken
_numberOfQueriesDone
_objectForKey:
_observer
_openSocketCompletionHandler
_openSocketCompletionHandlerID
_openSocketCompletionHandlerQueue
_operationMode
_osChannelFD
_outgoingBytes
_outgoingMessageBytes
_outgoingMessageCount
_outgoingPackets
_outputStreamForSocket
_pairedCompletion
_pairingProtocolVersion
_pairingType
_parameters
_parentUniquePID
_parseQuickRelayDefaults
_participantIDAlias
_participantInfo
_participantsByAliasFromParticipants:
_passwordManager
_pathEvaluator
_payloadFromDecryptedData:
_peerIsConnected
_peerIsNearby
_peerSupportsDeviceConnection
_pendingAccountsToRemove
_pendingAckTimer
_pendingAckTimerSuspended
_pendingInvitations
_pendingInvocations
_pendingRegisteredIdentitiesBlock
_pendingSends
_pendingTransactions
_performBlock:
_performBlock:wait:
_performLockedAccess:
_performSyncAction:
_performSyncBlock:
_postAvailability:
_postNotificationForService:availability:
_postedSetupComplete
_powerAssertionOptions
_preConnectionData
_preferCellularForCallSetup
_preferences
_preferredAddressFamily
_preferredDataPathType
_preferredURIForAccount:
_pretendingToBeFull
_preventReconnect
_previousError
_priority
_probingDict
_processAccountSet:
_processIncomingDatagram:datagramSize:linkID:linkContext:
_protobufSelectors
_protocol
_pseudonym
_pseudonymUpdateTaskQueue
_publicDataRepresentationForGroup:completion:
_publicIdenityForDataProtectionClass:error:
_purgeIDStatusCache
_purgeIDStatusCacheAfter:
_pushToken
_qrReason
_queue
_queueController
_queueOneToMessageIDDictionary
_rateLimiter
_readFromDirectConnection:linkID:linkContext:
_readHandler
_readHandlerWithOptions
_readLock
_receivedInvitations
_receivedPreConnectionData
_refreshIDStatusForDestination:service:listenerID:
_refreshIDStatusForDestinations:service:listenerID:
_refreshIDStatusForDestinations:service:listenerID:allowRefresh:respectExpiry:waitForReply:forceRefresh:bypassLimit:queue:completionBlock:
_refreshUserAccessTokensCompletion
_registrationDelegateToInfo
_relayCombinedSoftwareID
_relayIP
_relayIPv6
_relayPort
_relayServerProvider
_relaySessionKey
_relaySessionToken
_reloadCachedDevices
_reloadCachedLinkedDevices
_remoteConnectionType
_remoteDataSoMask
_remoteLinkFlags
_remoteMessageQueue
_remoteNetworkType
_remoteObject
_remoteObjectCleanup
_remoteParticipantID
_remoteRATType
_remoteRelayLinkID
_removeAccountOnIvarQueue:
_removeAndDeregisterAccount:
_removeDirectConnection:
_removeInvalidEntries:
_replaceSentinelInSendParameters:withCurrentActiveDevice:
_reportDictionary:forKey:
_reportFirstIncomingPacketTimeForMKI:time:
_reportFirstOutgoingPacketTimeForMKI:time:
_reportMKIArrival:time:isLocallyGenerated:
_reporterTimer
_requestCacheForService:completionBlock:
_requestCachedStatusForDestinations:service:waitForReply:respectExpiry:listenerID:completionBlock:
_requestContextMap
_requestContextMapLock
_requestIDInfoForDestinations:service:infoTypes:options:listenerID:queue:completionBlock:
_requestNWConnectionforIDSGroupSessionBroadcastParameter:
_requestNWConnectionforIDSGroupSessionUnicastParameter:
_requestRemoteDevicesForDestination:service:listenerID:waitForReply:completionBlock:
_requestStatusForDestinations:service:waitForReply:forceRefresh:bypassLimit:listenerID:completionBlock:
_requestTimer
_requiredCapabilities
_requiredLackOfCapabilities
_reregisterAndReidentify:
_reregisterAndReidentify:account:
_resendPendingSends
_respondsToRemoteSelector:
_responseHandler
_salt
_scheduleNextQuery:
_scheduleTimeoutForCarrierTokenCompletionBlock:
_scheduleTimeoutForPhoneAuthenticationCertificateRequestCompletionBlock:
_scheduleTimeoutForPhoneAuthenticationSignatureRequestCompletionBlock:
_scheduleTimeoutForPhoneSubscriptionSourceCompletionBlock:
_scheduleValidationAfter:forAccountID:allowFuzz:signOut:
_schemaIdentifier
_seal
_selected
_sendData:withOptions:identifier:completion:
_sendMissingMessageMetric:
_sendSequenceNumberMetadataToDaemon:
_sendSimulatorData:fromAccount:toDestinations:priority:options:identifier:error:
_sendSimulatorMessage:fromAccount:toDestinations:priority:options:identifier:error:
_sendSimulatorProtobuf:fromAccount:toDestinations:priority:options:identifier:error:
_sendStatsRequestViaDaemon
_sendWithParameters:options:loggingType:loggingDataSize:
_senderMergeID
_sendingAccountForAccount:
_sendingAccountForAccount:destination:fromID:
_sendingMetadata
_sentFirstReadLinkInfo
_serverAcknowledgedBlockMap
_serverAcknowledgedBlockWithInvitationMap
_serverIsDegraded
_serverTimestamp
_service
_serviceName
_serviceNameAccountControllerMap
_serviceNameForType:
_serviceProperties
_serviceReference
_serviceToActiveDeviceUniqueID
_serviceToFamilyDevices
_serviceToFamilyInfo
_serviceToLinkedDevices
_serviceToMaxMessageSize
_serviceToPendingInvitations
_serviceToReceivedInvitations
_serviceToken
_serviceType
_serviceTypeForName:
_serviceUserInfos
_services
_sessionBySessionID
_sessionConfig
_sessionEndedReason
_sessionID
_setAccount:
_setAllValuesFromDictionary:
_setApplicationWillTerminate
_setAutoReconnect:
_setCapabilities:
_setCommands:
_setCurrentIDStatus:forDestination:service:
_setHidingDisconnect:
_setIsEnabled:
_setLinkContext:forLinkID:
_setObject:forKey:
_setQueue:
_setService:
_setServices:
_setServices:commands:capabilities:
_setTemporaryMessageContext:
_setUpNWConnectionforTesting:
_setUpXPC
_setupAccountWithLoginID:accountConfig:authToken:password:completionHandler:
_setupComplete
_setupInfoComplete
_setupInterruptionHandler
_setupNewConnectionForAccount:
_setupSocketPairToDaemon
_setupUnreliableSocketPairConnection
_setupXPC
_shortServiceNameCString
_shouldAcceptIncomingType:forTopic:localURI:remoteURI:validateAliases:guid:
_shouldContinueFromLastSyncPoint
_shouldPairDirectlyOverIPsec
_shouldUseSocketForTransport
_signInFuzz
_signInQueue
_signInTimeout
_socketDescriptor
_stableGroupID
_startAsUPlusOneSession
_startAutomatically
_startCalled
_startListeningToMonitor:
_startStatsTimer
_state
_stateChanged
_statsTimer
_statusOfAccount:
_statusOfUsersOnService:
_stopAwaitingQuickSwitchAcknowledgementFromDelegateWithIdentifier:
_stopListeningToMonitor:
_streamName
_streamPreferences
_strictlyUnarchivedObjectOfClasses:fromData:error:
_stringForKey:
_stripFZIDPrefix
_stripPotentialTokenURIWithToken:
_strongSelfReference
_subActivity
_subServices
_subscriptionSlot
_subscriptionSource
_subscriptionSourceForContext:
_subscriptionSourceFromIntegerValue:
_supportsIPsecWithSPPLink
_suppressedDevices
_sync
_syncCollaboratorDictionary
_syncDaemonController
_syncDaemonControllerBuilder
_syncOntoMain
_syncTask
_sync_collaboratorWithIdentifier:errorHandler:resolverBlock:
_sync_currentIDStatusForDestinations:service:respectExpiry:listenerID:completionBlock:
_sync_currentRemoteDevicesForDestinations:service:listenerID:completionBlock:
_sync_refreshIDStatusForDestinations:service:listenerID:completionBlock:
_systemTimer
_task
_tempObject
_temporarilyStoreMessage:forServiceIdentifier:
_timeOfDeath
_timeout
_timeoutBlock
_timingOutDaemonProxyWithTimeout:errorHandler:
_token
_tokenString
_topic
_topicToAccountDictionaries
_topicToEnabledAccounts
_totalPacketsReceivedOnLink
_totalPacketsSentOnLink
_trafficClassApplied
_trafficClassInitialized
_trafficClassTLVProcessed
_trafficClassToUse
_transactionIDToBlockMap
_transactionIDToHandlersMap
_transactionMessageFromTransportMessage:groups:participants:accountInfo:
_transactionMessageFromTransportMessage:withDecryptedPayload:accountInfo:
_transactionMessageFromTransportMessage:withGroupID:groups:accountInfo:
_transactionMessageFromTransportMessage:withParticipants:accountInfo:
_transactionMessagesFromTransportMessages:withParticipants:groups:accountInfo:completion:
_translateParticipantIDForIncomingPacket:forLinkID:
_translateParticipantIDForOutgoingPacket:forLinkID:
_transportType
_type
_uniqueID
_uniqueIDForDevice:
_uniqueIDLock
_uniqueIDToConnection
_uniqueIDToProgress
_updateActivity:isSupported:
_updateAvailability
_updateCacheWithDictionary:service:
_updateDelegatesWithOldAccounts:newAccounts:
_updateDependentDevicesWithDevicesInfo:
_updateFlags
_updateLinkedDevicesWithDevicesInfo:
_updateLocalAccountVisibility
_updateSelfRetentionBasedOnInFlightRequestCount
_updateService:withTinkerDevice:shouldAdd:shouldSwitch:
_upgradedTrafficClass
_uri
_useConfServer
_uuid
_validateDelegateState
_validateStateForAccountID:timeoutMode:
_verboseFunctionalLogging
_waitForPreConnectionDataForConnected
_wakingDowngradeCount
_wantsPseudonymUpdates
_warmupQueryCacheForService:
_writeDatagram:datagramSize:datagramInfo:options:completionHandler:
_writeHandler
_writeLock
_writeToDirectConnection:datagram:datagramSize:currentDatagramCount:totalDatagramCount:datagramInfo:datagramOptions:completionHandler:
_writeToNWConnection:datagram:datagramSize:currentDatagramCount:totalDatagramCount:datagramInfo:datagramOptions:completionHandler:
_writeToNWConnectionArrayOfDatagrams:datagramSizes:datagramInfo:datagramOptions:datagramCount:completionHandler:
_writeToOSChannelDatagrams:datagramSizes:datagramInfo:datagramOptions:datagramCount:completionHandler:
_writeToSocket:datagrams:datagramSizes:datagramInfo:datagramOptions:datagramCount:completionHandler:
_xpc
_xpcDaemonController
absoluteString
acAccountWithProfileID:username:accountStore:
acceptInvitation
acceptInvitation:
acceptInvitation:withContext:serverAcknowledgedBlock:
acceptInvitation:withData:
acceptInvitationWithData:
accessoryDataReceived:withGUID:forTopic:toIdentifier:fromID:context:
accessoryReportMessageReceived:accessoryID:controllerID:withGUID:forTopic:toIdentifier:fromID:context:
account:accountInfoChanged:
account:aliasesChanged:
account:connectedDevicesChanged:
account:dependentDevicesUpdated:
account:dependentDevicesUpdatedUponReconnect:
account:devicesChanged:
account:displayNameChanged:
account:isActiveChanged:
account:localDeviceAdded:
account:localDeviceRemoved:
account:loginChanged:
account:nearbyDevicesChanged:
account:profileChanged:
account:pseudonymsChanged:
account:registrationStatusInfoChanged:
account:vettedAliasesChanged:
accountAdded:
accountController:accountDisabled:
accountController:accountEnabled:
accountController:accountRemoved:
accountController:accountUpdated:
accountDictionariesForService:
accountDisabled:onService:
accountEnabled
accountEnabled:onService:
accountForAlias:
accountIDDescriptionMap
accountInfo
accountMatchingSim:
accountMatchingSimIdentifier:
accountRegisteredURIs
accountSync
accountType
accountWithLoginID:service:
accountWithUniqueID:
accounts
accountsChanged:forTopic:
acknowledgeMessageWithGUID:forAccountWithUniqueID:broadcastTime:messageSize:priority:
acknowledgeMessageWithStorageGUID:realGUID:forAccountWithUniqueID:broadcastTime:messageSize:priority:broadcastID:connectionType:
acknowledgeOutgoingMessageWithGUID:alternateCallbackID:forAccountWithUniqueID:
acknowledgeSessionID:clientID:
activateAlias:
activateAliases:
activateWithCompletion:
activeAliases
activeID
activity
activityIdentifier
activityInfoWithSubActivity:URIs:
activityInfoWithSubActivity:devices:
activityInfoWithSubActivity:tokens:
activityMonitor:didReceiveActivityUpdate:
activityMonitorCollaboratorWithCompletion:
activityMonitorCollaboratorWithErrorHandler:
addAccount:
addAccountWithLoginID:serviceName:uniqueID:accountType:accountInfo:
addAliases:
addAliases:toAccount:
addDelegate:
addDelegate:forService:listenerID:queue:
addDelegate:queue:
addDelegate:queue:completion:
addDelegate:withDelegateProperties:queue:
addDeliveryHandler:
addDeliveryHandler:uuid:
addDirectConnectionForLinkID:linkContext:
addEntries:withCompletion:
addEntriesFromDictionary:
addHandler:
addIndex:
addInterruptionHandler:forTarget:
addListener:forTopic:
addListenerID:
addListenerID:forService:
addListenerID:services:
addListenerID:services:commands:
addNewIDSDataChannelLinkWithAttributes:linkAttributesLength:
addObject:
addObjectsFromArray:
addObserver:selector:name:object:
addPairedDevice:
addPairedDevice:completion:
addPairedDeviceWithInfo:completion:
addRegistrationDelegate:queue:
addedDelegateForService:withCompletion:
adminAccessTokens:error:
alias
aliasStrings
aliasToAccountsMap
aliasesToRegister
allKeysForObject:
allObjects
allValues
allocationDone:sessionInfo:
allowCloudDelivery
allowUrgentMessages
allowWakingMessages
allowedTrafficClassifiers
alternateCallbackID
anyObject
appContext
appendBytes:length:
appendFormat:
appendMiddleware:
appendString:
appleCareSignInUserName:DSID:authToken:requestID:
appleCareSignOutUserWithRequestID:
appleIDUserStatus
applecareResponseForRequestID:withError:
applicationIdentifier
applicationToVerificationInfoProviders
archivedDataWithRootObject:requiringSecureCoding:error:
array
arrayByAddingObject:
arrayByApplyingSelector:
arrayWithObject:
arrayWithObjects:count:
assertQueueIsCurrent
assertQueueIsNotCurrent
assertTransportThreadRealTimeMode:completionHandler:
assertion
attributesOfItemAtPath:error:
augmentConnectionGroupNetworkParameters:
augmentNetworkParametersForSession:participantID:parameters:
augmentNetworkParametersForSessionAlias:participantIDAlias:salt:parameters:
augmentSimulatorNetworkParametersForSession:participantID:parameters:withQueue:completionHandler:
augmentSimulatorNetworkParametersForSessionAlias:participantIDAlias:salt:parameters:withQueue:completionHandler:
authTokenChanged:forAccount:
authenticateAccount
authenticateAccount:
authenticatePhoneWithCompletion:
authenticatePhoneWithRequestUUID:
authenticationCertificateSignatures
authenticationChangedForAccount:
autoBugCaptureWithCompletion:
autorelease
availabilityForListenerID:forService:
awaitAcknowledgementFromServiceDelegate:
batchProcessingBlock
beginBroadcastingWithInfo:withCompletion:
block
blockRemoteTimeouts
blockUntilConnected
blockUntilSendQueueIsEmpty
bluetoothMACAddress
boolValue
boostContext
broadcastID
broadcastParameterForService:
broadcastProxyForTarget:messageContext:protocol:
broadcastProxyForTarget:messageContext:protocol:priority:completion:
broadcastTime
bundleIdentifier
bytes
bytesSent
cStringUsingEncoding:
cacheIncomingGroup:completion:
cachedConnection
cachedMetadata
cachedPseudonymURIMap
callStackSymbols
canSendMessageWithAccount:toDestination:
canUseDirectMessaging
cancel
cancelIdentifier:error:
cancelInvitation
cancelInvitation:
cancelInvitation:serverAcknowledgedBlock:
cancelInvitation:withData:
cancelInvitation:withRemoteEndedReasonOverride:
cancelInvitationWithData:
cancelInvitationWithRemoteEndedReasonOverride:
cancelItemWithIdentifier:service:
cancelOpportunisticDataOnService:withIdentifier:
cancelOpportunisticDataWithIdentifier:error:
cancelPendingAckTimer
capabilities
capabilitiesForListenerID:
carrierNonce
caseInsensitiveCompare:
cbuuid
certifiedDeliveryContext
changeType
channelNumber
checkIfListeningForActivity:completion:
checkMessageSize:priority:
checkServerStorageForService:withCompletion:
checkTransportLogWithReason:
checkinLock
childConnectionID
class
cleanupSessionWithInstanceID:
clearCacheWithCompletion:
clearIDSState
clearPowerAssertion
clientContext
close
closeSocketWithOptions:
cloudConnected
cloudKitContainer
code
collaboratorPromiseDictionary
commands
commandsForListenerID:
compactDescription
compare:
completion
completionBlocksByRequestID
componentsSeparatedByString:
conciseACKSupported
conformsToProtocol:
connectPairedDevice:
connectPairedDeviceWithID:completion:
connectToDaemonWithLaunch:
connectToDaemonWithLaunch:services:commands:capabilities:
connectToPeer:
connected
connectedDevices
connectedLinks
connection
connection:account:receivedGroupSessionParticipantDataUpdate:
connection:account:receivedGroupSessionParticipantUpdate:context:
connection:account:sessionInviteReceived:fromID:transportType:options:context:messageContext:
connection:connectedDevicesChanged:
connection:devicesChanged:
connection:didFlushCacheForRemoteURI:fromURI:guid:
connection:didHintCheckingTransportLogWithReason:
connection:didReceiveData:
connection:didSendOpportunisticDataWithIdentifier:toIDs:
connection:didUpdateDeviceIdentity:error:context:
connection:handleInvocation:isReply:
connection:identifier:alternateCallbackID:willSendToDestinations:skippedDestinations:registrationPropertyToDestinations:
connection:identifier:didSendWithSuccess:error:context:
connection:identifier:fromID:hasBeenDeliveredWithContext:
connection:incomingAccessoryData:fromID:context:
connection:incomingAccessoryReportMessage:accessoryID:controllerID:context:
connection:incomingAckWithIdentifier:forTopic:toIdentifier:fromIdentifier:hasBeenDeliveredWithContext:isAppAck:
connection:incomingData:fromID:context:
connection:incomingDataFromDirectConnection:withGUID:forTopic:toIdentifier:fromID:context:
connection:incomingEngramMessage:fromID:context:
connection:incomingGUIDAckFromDirectConnection:
connection:incomingGroupData:fromID:context:
connection:incomingInvitation:fromID:context:
connection:incomingInvitationUpdate:fromID:context:
connection:incomingMessage:fromID:
connection:incomingMessage:fromID:context:
connection:incomingMessageFromDirectConnection:withGUID:forTopic:toIdentifier:fromID:context:
connection:incomingOpportunisticData:withIdentifier:fromID:context:
connection:incomingPendingMessageFromID:context:
connection:incomingProtobuf:fromID:context:
connection:incomingProtobufFromDirectConnection:withGUID:forTopic:toIdentifier:fromID:context:
connection:incomingTopLevelMessage:fromID:messageContext:
connection:isActiveChanged:
connection:messageIdentifier:alternateCallbackID:updatedWithResponseCode:error:lastCall:
connection:messageIdentifier:alternateCallbackID:updatedWithResponseCode:error:lastCall:messageContext:
connection:messageSendFailed:responseCode:
connection:nearbyDevicesChanged:
connectionComplete:withResponse:
connectionDidClose:
connectionForLinkID:
connectionInfoByServiceIdentifier
connectionIsIncoming
connectionMessageSendQueue
connectionReadyCallback
connectionSetupInProgress
connectionType
consentTokens:error:
constructRAResponseDictionary:completionHandler:
constructRAResponseDictionaryForServices:completionHandler:
consumeQueryContext:
containerForService:create:
contextType
continueWithResult:
continuity
continuity:didDiscoverType:withData:fromPeer:
continuity:didFailToStartAdvertisingOfType:withError:
continuity:didFailToStartScanningForType:withError:
continuity:didLosePeer:type:
continuity:didStartAdvertisingOfType:
continuity:didStartScanningForType:
continuity:didStartTrackingPeer:type:error:
continuity:didStopAdvertisingOfType:
continuity:didStopAdvertisingOfType:withError:
continuity:didStopScanningForType:
continuity:didStopTrackingPeer:type:
continuityConnectToPeer:
continuityDidConnectToPeer:withError:
continuityDidDisconnectFromPeer:withError:
continuityDidDiscoverPeerWithData:fromPeer:
continuityDidDiscoverType:withData:fromPeer:
continuityDidFailToStartAdvertisingOfType:withError:
continuityDidFailToStartScanningForType:withError:
continuityDidLosePeer:
continuityDidLosePeer:forType:
continuityDidStartAdvertisingOfType:
continuityDidStartScanningForType:
continuityDidStartTrackingPeer:error:
continuityDidStartTrackingPeer:forType:error:
continuityDidStopAdvertisingOfType:
continuityDidStopAdvertisingOfType:withError:
continuityDidStopScanningForType:
continuityDidStopTrackingPeer:
continuityDidStopTrackingPeer:forType:
continuityDidUpdateState:
continuityDidUpdateStateToState:
continuityDisconnectFromPeer:
continuityStartAdvertisingOfType:withData:withOptions:
continuityStartScanningForType:withData:mask:
continuityStartScanningForType:withData:mask:boostedScan:duplicates:
continuityStartScanningForType:withData:mask:peers:
continuityStartScanningForType:withData:mask:peers:boostedScan:duplicates:
continuityStartTrackingPeer:forType:
continuityStopAdvertisingOfType:
continuityStopScanningForType:
continuityStopTrackingPeer:forType:
controller:receivedIncomingMessageData:context:
copy
copyItemAtPath:toPath:error:
copyOpportunisticCacheWithBlock:
copyStringGUIDForObject:
copyWithZone:
count
countByEnumeratingWithState:objects:count:
createAliasForLocalParticipantIDWithSalt:
createAliasForLocalParticipantIDWithSalt:completionHandler:
createAliasForLocalParticipantIDWithSalt:delegateQueueCompletionHandler:
createAliasForParticipantID:salt:
createAliasForParticipantID:salt:completionHandler:
createAliasForParticipantID:salt:delegateQueueCompletionHandler:
createAliasForParticipantID:salt:sessionID:
createDataBlobFrom:port:
createDirectMessageConnectionIfNeeded
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
createDispatchDataForMessageSend:isAck:ackMessageId:
createEndpointForSessionIDAlias:topic:participantIDAlias:salt:
createGroupDescriptorForSessionIDAlias:topic:salt:
createIfNecessaryDirectConnectionForLinkID:linkContext:
createServiceConnectionWithServiceName:invalidationHandler:terminationHandler:peerEventHandler:peerQueue:
createSessionIDAliasWithSalt:completionHandler:
createSessionIDAliasWithSalt:delegateQueueCompletionHandler:
curXPCMessagePriority
currentDonatedEntries:
currentECVersionWithBlock:
currentHandler
currentIDStatusForDestination:service:listenerID:queue:completionBlock:
currentIDStatusForDestination:service:respectExpiry:listenerID:queue:completionBlock:
currentIDStatusForDestinations:service:listenerID:queue:completionBlock:
currentIDStatusForDestinations:service:respectExpiry:listenerID:queue:completionBlock:
currentItem
currentPhoneUserSubscriptionSourceWithError:
currentRemoteDevicesForDestinations:service:listenerID:queue:completionBlock:
currentResult
currentSIMsWithError:
currentStreamName
currentSubscriptionsForActivity:completion:
currentThread
cypherIdentifier
daemonConnectionLost
daemonController
daemonControllerBuilder
daemonControllerDidConnect
daemonControllerDidDisconnect
daemonControllerWillConnect
daemonDisconnected
daemonListener
daemonRequestTimer
data
dataMode
dataPathType
dataProtectionClass
dataReceived:withGUID:forTopic:toIdentifier:fromID:context:
dataUsingEncoding:
dataValue
dataWithBytes:length:
dataWithContentsOfFile:options:error:
dataWithPropertyList:format:options:error:
datagramChannelForSessionDestination:error:
datagramChannelForSessionDestination:options:error:
datagramChannelForSocketDescriptor:error:
datagramConnectionForSessionDestination:error:
datagramConnectionForSessionDestination:uid:error:
datagramConnectionForSocketDescriptor:error:
date
dateByAddingComponents:toDate:options:
dateRegistered
deactivateAlias:
deactivateAliases:
deactivateAndPurgeIdentify
deactivateAndPurgeIdentifyForAccount:
deactivatePairedDevices
debugDescription
declineInvitation
declineInvitation:
declineInvitation:serverAcknowledgedBlock:
declineInvitation:withData:
declineInvitationWithData:
decodeBoolForKey:
decodeInt64ForKey:
decodeIntForKey:
decodeIntegerForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
decodeTopLevelObjectOfClass:forKey:error:
decryptData:keyID:sequenceNumber:error:
defaultBroadcaster
defaultCenter
defaultLink
defaultManager
defaultProperties
delegate
delegateByServiceType
delegateMap
delegates
deleteAllCachedValuesForGroupWithID:WithCompletion:
deleteAllKnownGroupsForGroupContext:completion:
deleteAllKnownGroupsWithCompletion:
deleteCachedValueForForGroupContext:withGroupID:completion:
deletePairedDevice:
deletePairedDevice:withCompletionBlock:queue:
deletePairedDeviceWithID:completion:
deliveryStats:
dependentDevicesForAccount:
description
destination
destinationCorrelationIdentifier
destinationLightweightStatus
destinationWithDestinations:
destinationWithDevice:
destinationWithDeviceURI:
destinationWithRapportPublicIdentifier:
destinationWithRapportPublicIdentifierURI:
destinationWithStrings:
destinationWithURI:
destinations
device
device:nsuuidChanged:
device:pairingDeleted:
deviceChangedForDeviceID:isNearby:isConnected:isCloudConnected:completionHandler:
deviceColor
deviceConnection
deviceConnectionKey
deviceForFromID:
deviceForFromID:fromDevices:
deviceForUniqueID:
deviceIdentifier
deviceIdentifierDidChange:
deviceType
deviceWithIdentifier:
devicesForBTUUID:
dictionary
dictionaryRepresentation
dictionaryWithCapacity:
dictionaryWithDictionary:
dictionaryWithObjects:forKeys:count:
dictionaryWithObjectsAndKeys:
dictionaryWithPlistData:
didAuthenticatePhoneWithAuthenticationCertificateData:requestUUID:error:
didCacheGroup:completion:
didCreateGroup:completion:
didFetchPhoneUserSubscriptionSource:requestUUID:error:
didFlushCacheForService:remoteURI:fromURI:guid:
didGeneratePhoneAuthenticationSignature:nonce:certificates:labelIDs:inputData:requestUUID:error:
didGetIdentities:error:
didReceiveDecryptionFailureForGroup:completion:
didReceiveMasterKeyMaterials:
didReceivePublickeys:
didReceiveRegistrationIdentityUpdateWithCompletion:
didRequestCarrierTokenString:requestUUID:error:
didSendOpportunisticDataWithIdentifier:onAccount:toIDs:
didSetPhoneUserSubscriptionSource:requestUUID:error:
didSwitchActivePairedDevice:
didSwitchActivePairedDevice:forService:wasHandled:
didUpdateGroup:withNewGroup:completion:
directConnectionReady
directMessageConnection
directMessagingAllowed
directMessagingMetadata
directMessagingReportStatsMSEC
directMessagingRetryMSEC
directMessagingState
directMessagingSupported
directMessagingTimeOutMSEC
disableTemporaryPhoneAlias:withCompletion:
disableTemporaryPhoneAlias:withError:
disableUserType:onService:completion:
disconnectActivePairedDevice:
disconnectFromDaemon
disconnectFromPeer:
displayName
diversifier
domain
donateEntries:withCompletion:
doubleValue
dropAllMessagesWithoutAnyAllowedClassifier
dsidToDeviceList
dsidToFamilyMember
enableAccount:
enableTemporaryPhoneAlias:withCompletion:
enableTemporaryPhoneAlias:withError:
enableUserType:onService:completion:
enabledAccountsForService:
enclosureColor
encodeBool:forKey:
encodeInt64:forKey:
encodeInt:forKey:
encodeInteger:forKey:
encodeObject:forKey:
encodeWithCoder:
encryptData:sequenceNumber:error:
encryptedPayload
endSession
endSession:
endSession:withData:
endSessionWithData:
endpoint
endpointState
engramDataReceived:withGUID:forTopic:toIdentifier:fromID:context:
engramGroupID
enqueueExecutionWithTarget:afterDelay:
enumerateCachedKeyMaterialUsingBlock:
enumerateDecryptingKeysAndSaltsUsingBlock:
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
error
errorForMissingEntitlement:
errorHandler
errorWithDomain:code:userInfo:
executablePath
expectsPeerResponse
expirationDate
expiryEpoch
extractDictionaryFromDataBlobFrom:error:
failWithError:
failedDecryptingMessage:reason:forGroupID:onService:
failedToSendMessage:responseCode:
familyDevicesForService:listenerID:withCompletion:
familyEndpointData
familyHandles
familyInfoForService:
familyMembers
featureID
fetchAllKnownGroups:
fetchChangesSinceToken:completion:
fetchCloudKitTransparencyStateWithCompletion:
fetchEndpointCacheStateForServiceIdentifier:localURI:remoteURI:completion:
fetchFamilyMembersWithDevices:
fetchGroupWithGroupID:completion:
fetchGroupWithID:completion:
fetchPeerVerificationInfos:completionBlock:
fetchPhoneUserSubscriptionSourceWithRequestUUID:
fetchPrivateClientDataDescriptionForService:completion:
fetchPrivateDeviceDataDescription:
fetchSelfVerificationInfo:
fetchSelfVerificationInfoForApplication:withCompletion:
fetchStoredUserDescriptions:
fetchTransparentEndpointsForServiceIdentifier:localURI:remoteURI:verifyAgainstTrustCircle:completion:
fetchVerifierAccountKeyPublicDataWithCompletion:
fetchVerifierAccountKeyTrustedDevicesWithCompletion:
fetchVerifierCloudKitTrustedDevicesWithCompletion:
fetchVerifierKVSTrustedDevicesWithCompletion:
fetchVerifierTrustedDevicesWithCompletion:
fetchXPCStateDescriptionForProcesses:withCompletion:
fileSystemRepresentation
fileURLWithPath:
finishedProvisioningPseudonym:success:error:forRequestUUID:
finishedRenewingPseudonym:success:error:requestUUID:
finishedReportingRequestUUID:withError:
finishedRevokingPseudonymWithSuccess:error:requestUUID:
finishedSigningForRequest:signedData:error:
finishedTransaction
finishedVerifyingSignedDataForRequest:success:error:
firewallCollaboratorWithCompletion:
firewallCollaboratorWithErrorHandler:
first
firstObject
firstRoutableInternetDestinationForSelf
flushCache
flushLinkProbingStatusWithOptions:
forSyncMessaging
forceAccountRenewalOnService:
forceRefreshIDStatusForDestinations:service:listenerID:queue:completionBlock:
forceRemoveAccount
forceRemoveAccount:
forgetDeviceWithID:completion:
forwardInvocation:
forwardMethodWithReplyIsSync:block:
forwarderWithCompletion:
forwardingTargetForSelector:
fromID
fromServerStorage
fulfillWithRemoteObject:
fulfillWithValue:
fullIdentityClassA:
fullIdentityClassC:
fullIdentityClassD:
gameCenterModifyForUserName:
gameCenterSignInWithUserName:authToken:password:accountInfo:accountStatus:handles:
gameCenterSignOut
generateMetadataWithDatagramInfo:options:currentDatagramCount:totalDatagramCount:byteBuffer:
generatePhoneAuthenticationSignatureOverData:withCompletion:
generatePhoneAuthenticationSignatureOverData:withRequestUUID:
generationCounter
getAdminAccessTokensWithWithServiceUserID:accessoryID:pairingToken:completionBlock:queue:
getArgumentTypeAtIndex:
getConsentTokensWithServiceUserID:accessoryIDs:adminID:completionBlock:queue:
getContext
getDecryptionKeyIDSet
getDeliveryStats
getDeliveryStatsWithCompletionBlock:queue:
getDestinationsLightweightStatusDict
getDirectMessagingMetadataDictionary
getEncryptionKeyID
getFileSystemRepresentation:maxLength:
getIDSDataChannelsQueue
getLocalDeviceInfoWithCompletion:
getLocalDeviceInfoWithCompletionBlock:queue:
getMessageTypeForFirstMessage
getMuted
getNwProtocolMetaDataForTrafficClass:
getPairedDeviceInfoWithCompletion:
getPairedDeviceInfoWithCompletionBlock:queue:
getPairingDevicesWithCompletion:
getPairingRecordsWithCompletion:
getParticipantIDForAlias:salt:completionHandler:
getParticipantIDForAlias:salt:delegateQueueCompletionHandler:
getParticipantIDForAlias:salt:sessionID:
getPowerAssertion
getPreferences
getProgressUpdateForIdentifier:error:
getProgressUpdateForIdentifier:service:
getQueue
getRegisteredIdentities
getServiceUserIDsWithCompletionBlock:queue:
getURIsToParticipantIDRequests
getUUIDBytes:
getUserAccessTokensWithServiceUserID:userID:userHandle:accessoryRequests:completionBlock:queue:
groupContext
groupContext:cacheGroup:completion:
groupContext:cachedGroupWithID:completion:
groupContext:fetchAllKnownGroups:
groupContext:fetchGroupWithID:completion:
groupContext:latestCachedGroupWithStableID:completion:
groupContext:upsertGroupWithInfo:previousGroup:completion:
groupContextCacheMiddleware
groupContextController
groupContextController:accountsForAlises:
groupContextController:didCreateGroup:
groupContextDataSource
groupContextWithCompletion:
groupCrypto
groupFromPublicDataRepresentation:completion:
groupFromPublicDataRepresentation:inContext:completion:
groupSessionDidTerminate:
groupSessionEnded:withReason:error:
groupSessionID
groupSessionIDAlias
groupSessionKeyValueDeliveryProviderCollaboratorWithErrorHandler:
groupShareReceived:withGUID:forTopic:toIdentifier:fromID:context:
handleFailureInFunction:file:lineNumber:description:
handleFailureInMethod:object:file:lineNumber:description:
handleGroupSessionKeyValues:
handleGroupSessionValue:forKey:participant:
handleIncomingDatagram:datagramSize:datagramInfo:datagramOptions:
handleIncomingUpdate:onActivity:completion:
handleReceivedIncomingMessageData:identifier:context:
handlerUUID
hardDeregister
hasActiveConnection:forKey:
hasListenerForID:
hasListenerID:
hasListenerID:forService:
hasPostedSetupComplete
hasPrefix:
hasSuffix:
hash
hbhDecryptionkey
hbhEncryptionkey
healSelf:completionBlock:
healSelfForApplication:withHealableErrors:withCompletion:
homeKitGetAdminAccessTokensWithServiceUserID:accessoryID:pairingToken:
homeKitGetConsentTokensWithServiceUserID:accessoryIDs:adminID:
homeKitGetServiceUserIDs
homeKitGetUserAccessTokensWithServiceUserID:userID:userHandle:accessoryRequests:
homeKitRefreshUserAccessTokensWithServiceUserID:userID:accessoryRequests:
iCloud
iCloudAccount
iCloudModifyForUserName:
iCloudSignInHackWithUserName:password:
iCloudSignInWithUserName:authToken:password:accountInfo:accountStatus:handles:
iCloudSignOut
iCloudSignOutHack
iCloudUpdateForUserName:accountInfo:
iMessageReportSpamCheckUnknownResponseForRequestID:status:abusive:delay:withError:
iTunesSignInWithUserName:authToken:password:accountInfo:accountStatus:handles:
iTunesSignOut
idInfoForDestinations:service:infoTypes:options:listenerID:queue:completionBlock:
idStatusUpdatedForDestinations:service:
identifier
identifierForServiceDelegate:
identities
identityData
identityDataForDataProtectionClass:error:
identityWithData:error:
idsPriorityToUse
impactedServiceIdentifiers
impactedServicesForService:withCompletion:
inFlightLock
inFlightRequestCount
inFlightRequests
incomingAccountSyncMessage:
incomingInvitation:withGUID:forTopic:toIdentifier:fromID:context:
incomingInvitationUpdate:withGUID:forTopic:toIdentifier:fromID:context:
incomingMessageBytes
incomingMessageCount
incomingResponseIdentifier
incrementAccessCount
indexOfObject:
init
initForReadingFromData:error:
initForSyncMessagingWithQueue:takingOverAndResumingConnection:
initSocketWithDevice:options:completionHandler:queue:
initStreamWithDevice:options:completionHandler:queue:
initSyncControllerWithQueue:
initWithAccount:
initWithAccount:commands:
initWithAccount:commands:indirectDelegateCallouts:delegateContext:
initWithAccount:destinations:options:
initWithAccount:destinations:options:delegateContext:
initWithAccount:destinations:transportType:
initWithAccount:destinations:transportType:delegateContext:
initWithAccount:destinations:transportType:uniqueID:delegateContext:
initWithAccount:options:
initWithAccountIdentity:aliasToAccountsMap:serviceName:
initWithAccountIdentity:dataSource:queue:
initWithAccountKey:deviceKey:
initWithActivity:serviceIdentifier:
initWithActivity:serviceIdentifier:queue:
initWithActivity:serviceIdentifier:queue:xpcConnector:
initWithApplicationIdentifier:
initWithArray:
initWithAttributes:maxBitrate:relayServerProvider:relaySessionToken:relaySessionKey:hbhEncryptionkey:hbhDecryptionkey:
initWithBase64EncodedString:options:
initWithBlock:
initWithBlock:queue:
initWithBlock:queue:isSync:
initWithBool:
initWithBytes:length:
initWithBytes:length:encoding:
initWithCBUUID:pairingProtocolVersion:BTOutOfBandKey:
initWithCBUUID:publicIdentityDataClassA:classC:classD:
initWithCapabilitiesMap:
initWithCapacity:
initWithCapacity:queue:block:
initWithCoder:
initWithConnectedSocket:dataMode:connectionIndex:
initWithConnection:protocol:alreadyConfigured:forceSecureCoding:
initWithData:accountUniqueID:fromID:loginID:serviceName:
initWithData:encoding:
initWithDataRepresentation:
initWithDefaults
initWithDelegate:queue:
initWithDelegate:queue:delegateContext:
initWithDelegateContext:queueController:
initWithDestination:options:
initWithDestination:state:expirationDate:uniqueID:context:
initWithDevice:options:completionHandler:queue:
initWithDictionary:
initWithDictionary:accountUniqueID:fromID:loginID:serviceName:
initWithDictionary:boostContext:
initWithDictionary:schema:
initWithDictionary:uniqueID:serviceName:
initWithDictionary:uniqueID:serviceName:delegateContext:
initWithDictionaryRepresentation:
initWithDisconnectedBlockAndNoTimeout:
initWithDomain:code:userInfo:
initWithDummyInformation
initWithEncryptionContext:encryptionKeySize:
initWithError:
initWithFeatureID:scopeID:expiryEpoch:allowedServices:
initWithFromServerStorage:certifiedDeliveryContext:identifier:
initWithGroupSessionID:localParticipantID:remoteParticipantID:dataMode:connectionIndex:
initWithGroupSessionID:localParticipantID:remoteParticipantID:salt:dataMode:connectionIndex:
initWithGroupSessionID:participantID:dataMode:
initWithGroupSessionID:salt:serviceName:
initWithGroupSessionID:serviceName:
initWithGroupSessionIDAlias:participantIDAlias:salt:dataMode:
initWithHandler:
initWithHandler:queue:
initWithIdentifier:
initWithIdentifier:timeoutSec:properties:
initWithIdentityData:
initWithIdentityData:error:
initWithIdentityDataClassA:classC:classD:
initWithInput:initialValue:
initWithInteger:
initWithInterface:queue:
initWithKeyOptions:valueOptions:capacity:
initWithLimit:timeLimit:
initWithLoginID:uniqueID:serviceName:
initWithLoginID:uniqueID:serviceName:delegateContext:
initWithMachServiceName:options:
initWithName:contextKey:
initWithObjects:
initWithObjectsAndKeys:
initWithPasswordManager:CTAdapter:signInTimeout:signInFuzz:queue:
initWithPayload:
initWithPrefixedURI:
initWithProtobufData:type:isResponse:
initWithProtocol:
initWithProtocol:ivarQueue:remoteMessageQueue:
initWithProtocol:ivarQueue:remoteMessageQueue:completion:
initWithPseudonym:changeType:updateFlags:
initWithQueue:
initWithQueue:connectionCreationBlock:
initWithQueue:remoteObject:
initWithQueue:syncOntoMain:takingOverAndResumingConnection:
initWithQueue:takingOverAndResumingConnection:
initWithQueueController:ivarQueue:
initWithReason:guid:service:additionalInformation:
initWithRemoteObject:rootConnection:
initWithRequestTimer:
initWithResponseHandler:timeoutBlock:systemTimer:
initWithService:
initWithService:commands:
initWithService:commands:manuallyAckMessages:
initWithService:commands:manuallyAckMessages:delegateContext:
initWithService:delegate:queue:parent:
initWithService:delegateContext:
initWithService:manuallyAckMessages:
initWithService:queue:
initWithService:serviceDomain:
initWithServiceIdentifier:
initWithServiceName:queue:delegate:
initWithServiceType:userInfos:
initWithSessionID:
initWithSet:
initWithSet:copyItems:
initWithSocket:queue:delegate:
initWithSocketDescriptor:
initWithState:expirationDate:uniqueID:context:
initWithSubActivity:pushToken:serverTimestamp:clientContext:isDeviceOnline:
initWithSubscriptionIdentifier:authenticationCertificate:signature:nonce:
initWithSubscriptionIdentifiers:authenticationCertificates:inputData:nonce:signature:
initWithSubscriptionSlot:labelID:
initWithSubscriptionSource:IMEI:carrierNonce:
initWithSuccess:
initWithSuccess:serverProvidedSMT:error:
initWithSyncDaemonControllerBuilder:
initWithSyncDaemonControllerBuilder:daemonControllerBuilder:
initWithTarget:connection:protocol:forceSecureCoding:offMainThread:
initWithTarget:connection:timeoutInSeconds:errorHandler:
initWithTask:delegate:queue:
initWithTimeInterval:name:shouldWake:target:selector:userInfo:
initWithTimeIntervalSince1970:
initWithTimeIntervalSinceNow:
initWithTokenString:
initWithTopic:
initWithTopic:keyManager:
initWithURI:
initWithURI:andLastSeenDate:
initWithURI:expirationDate:selected:
initWithURI:isUserVisible:validationStatus:
initWithURI:maskedURI:properties:
initWithUUIDBytes:
initWithUUIDString:
initWithUnprefixedURI:
initWithUserType:status:
initWithWithFullIdentityDataClassA:classC:classD:
initWithXPCAdapter:
initWithfromID:state:expirationDate:uniqueID:context:
initialLocalSyncCompletedForServices:
initialLocalSyncStartedForServices:
initialStateByService
initialize
inputData
inputStream
inspectPayload:messageGuid:
intValue
integerValue
interalTestingCollaboratorWithCompletion:
interalTestingCollaboratorWithErrorHandler:
interface
interfaceWithProtocol:
internal
internalAccounts
interruptionHandler
interruptionHandlerByTarget
intersectSet:
invalidate
invalidateDirectConnections
invalidateKeyMaterialByKeyIndexes:
invalidateTimeoutAndReturnHandlerForRequestID:
invalidateTimeoutsAndReturnHandlersForAllRequests
invalidationHandler
invitationTimeOut
inviteTimeout
invocationWithMethodSignature:
invoke
invokeWithTarget:
isActive
isAudioEnabled
isAwaitingAcknowledgement
isCloudConnected
isConnected
isConnecting
isDaemonConnection:
isDefaultPairedDevice
isDeviceOnline
isDirectMessagingRequested:
isDonated
isEnabled
isEqual:
isEqualToCryptor:
isEqualToData:
isEqualToIgnoringCase:
isEqualToNumber:
isEqualToPhoneSubscription:
isEqualToPseudonym:
isEqualToPseudonymChange:
isEqualToPseudonymProperties:
isEqualToSet:
isEqualToString:
isEqualToURI:
isFaceTimeEnabled
isFileURL
isFirstGDRAllowlistedAccount
isGeneratedLocally
isHSATrusted
isIdentical:
isInTransientRegistrationState
isInternalInstall
isInvitationService
isKindOfClass:
isLightweightParticipant
isMemberOfClass:
isMessageEligible:options:destinationDevice:
isNearby
isNonUIInstall
isPretendingToBeFull
isQueueCurrent
isResponse
isSync
isTemporary
isTinker
isTokenURI
isTransientAllowlistedAccount
isUsableForOuterMessaging
isUserDisabled
isUserVisible
isValidDestination:error:
isVirtualRelayLink
isiMessageEnabled
ivarQueue
joinGroupSession:withOptions:
joinWithOptions:
keyDiversifier
keyIndex
keyRepresentationForType:isResponse:
keyTransparencyCollaboratorWithCompletion:
keyTransparencyCollaboratorWithErrorHandler:
keyValueDelivery
keyValueDeliveryForSessionID:
keyValueDeliveryForSessionID:completionHandler:
kickGetDependentForAccount:
kickSelfVerificationForServiceIdentifier:localURI:remoteURI:completion:
kickVerificationForServiceIdentifier:localURI:remoteURI:completion:
knownRecordIDsFromList
lastActivityDate
lastPathComponent
lastSeen
latestCachedGroupWithStableID:completion:
leaveGroupSession
leaveGroupSession:participantInfo:options:
leaveGroupSessionWithOptions:
length
linkID
linkItemAtPath:toPath:error:
linkUUID
linkedDeviceForFromID:withRelationship:
linkedDevicesForService:
linkedDevicesWithRelationship:
linkedUserURIs
listenForIncomingConnection:
listener
listenerGUID
listenerID
listeners
listenersByActivity
listeningForUpdates
localInterfaceName
localLinkFlags
localObject
localObjectDiedNotification:
localObjectExists
localPairingResponseForRequestID:withError:
localPairingResponseForRequestID:withError:pairedDevices:
localParticipantID
localRelayLinkID
localSetupCompleted
localSetupUnpair
localSetupUnpairStart
locallyPresent
lock
logConnectionStatisticsInPowerDictionary
longLongValue
longValue
mainBundle
manageDesignatedMembers:forGroup:sessionID:withType:
manageDesignatedMembers:withType:
manager:incomingInvitation:
manager:receiverDidAcceptInvitation:
manager:receiverDidDeclineInvitation:
manager:senderDidCancelInvitation:
manuallyAckMessages
matchingDevice
matchingSim
maxBitrate
maxCompatibilityVersion
maxEffectivePayloadSize
maxEffectivePayloadSizeForService:
maxHomeKitPayloadSize
maxMTU
messageBody
messageData
messageID
messageIDToMessageDictionary
messageIdentifier:alternateCallbackID:forAccount:updatedWithResponseCode:error:lastCall:context:
messageIdentifier:forTopic:toIdentifier:fromIdentifier:hasBeenDeliveredWithContext:
messageIdentifierInner:alternateCallbackID:forAccount:updatedWithResponseCode:error:lastCall:context:isDirectMessage:
messageReceived:withGUID:withPayload:forTopic:toIdentifier:fromID:context:
messageUUID
methodReturnLength
methodReturnType
methodSignatureForSelector:
middlewareCacheCostForContext:
minCompatibilityVersion
minusSet:
multiplexer
mutableBytes
mutableCopy
name
nearby
nearbyDevices
networkType
nextRegistrationDate
nonWaking
nonce
noteCreatedService:
noteFinishedTransactionForService:
noteItem:
notifyToken
nsuuid
nukeCloudKitTransparencyStateWithCompletion:
nukeTransparencyStateWithCompletion:
null
numberFromString:
numberOfArguments
numberWithDouble:
numberWithInt:
numberWithInteger:
numberWithLongLong:
numberWithUnsignedChar:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLong:
numberWithUnsignedLongLong:
numberWithUnsignedShort:
object
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
objectsPassingTest:
observer
oneToOneECCQuicktestEncryptionWithData:completion:
open
openSocketWithOptions:
openedSocket:forHandlerID:error:
operatingSystemVersion
opportunistic
opportunisticCollaboratorWithCompletion:
opportunisticCollaboratorWithErrorHandler:
opportunisticDataReceived:withIdentifier:fromID:context:
originalGUID
osChannelInfoLog
outgoingMessageBytes
outgoingMessageCount
outgoingResponseIdentifier
outputStream
pairWithFirst:second:
pairedDeviceManagerCollaboratorWithCompletion:
pairedDeviceManagerCollaboratorWithErrorHandler:
pairedDevicesInfo:
pairingCollaboratorWithCompletion:
pairingCollaboratorWithErrorHandler:
pairingCollaboratorWithTimeout:errorHandler:
pairingProtocolVersion
pairingType
parameters
parseDirectMessagingState
participantID
participantIDAlias
participantIDForAlias:salt:
participantIdentifier
participantUpdatedForSession:
participants
participantsForCypher:completion:
participantsForDestinations:service:listenerID:queue:completionBlock:
participantsFromEndpoints:
passwordChanged:forAccount:
passwordUpdatedForAccount:
path
peerID
peerIsNearby
peerResponseIdentifier
peerSupportsDeviceConnection
pendingAckTimerSuspended
pendingIncomingMessageWithGUID:forTopic:toIdentifier:fromID:context:
pendingInvitations
pendingInvitationsForService:
pendingInvocations
pendingTransactions
performAction:errorHandler:
performBlock:
performBlock:waitUntilDone:
performDaemonControllerTask:
performGroupTask:
performOutstandingKeyTransparencyVerificationWithCompletion:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performSyncAction:
performTask:
persistPendingInvitation:forService:withUniqueID:
persistReceivedInvitation:forService:withUniqueID:
persistedTokenForTaskHandler:completion:
phoneSubscriptionWithLabelID:
phoneSubscriptionWithSIM:
phoneSubscriptionWithSubscriptionSlot:
phoneSubscriptionWithSubscriptionSlot:andLabelID:
phoneSubscriptionsFromCTSIMs:
plistData
pointerValue
populateImpactedServices:
popupPromptWithTitle:message:defaultButton:defaultUrl:alternateButton:alternatrUrl:completion:
postNewDeviceNotification:iCloudSignIn:iMessageSignIn:facetimeSignIn:forAppleID:
postNotificationName:object:
powerAssertionOptions
prefixedURI
pretendingToBeFull
primaryServiceName
priority
processDatagram:datagramSize:readHandler:readHandlerWithOptions:
processIncomingMessage:messageType:messageIdentifier:
processInfo
processMetadataForDatagram:size:datagramInfo:options:
processName
productBuildVersion
productName
productVersion
profileID
profileInfo
profileValidationErrorReason
profileValidationStatus
progressWithTotalUnitCount:
properties
protectionClassIdentityDataMap
protobuf
protobufActionForIncomingRequestsOfType:
protobufActionForIncomingResponsesOfType:
protobufActionForType:isResponse:
protocol
provideCredential:forUser:onService:withCompletion:
provisionPseudonymForURI:onAccount:withProperties:requestProperties:requestUUID:
provisionPseudonymForURI:withProperties:completion:
provisionPseudonymForURI:withProperties:requestProperties:completion:
provisionPseudonymWithProperties:completion:
provisionPseudonymWithProperties:requestProperties:completion:
pseudonym
pseudonymForPseudonymURI:
pseudonymPropertiesWithFeatureID:expiryDurationInSeconds:
pseudonymPropertiesWithFeatureID:scopeID:expiryDurationInSeconds:
pseudonymUpdateTaskQueue
pseudonyms
pseudonymsForMaskedURI:
pseudonymsForMaskedURI:matchingProperties:
publicDataRepresentationForGroup:completion:
publicDataRepresentationForGroup:inContext:completion:
publicIdentityClassA:
publicIdentityClassC:
publicIdentityClassD:
pushToken
pushTopic
qFetchParticipantsFromDeviceMessges:andGroupsFromGroupMessages:completion:
qGroupContextWithDeviceIdentity:completion:
qIngestMessages:completion:
qPerformWithToken:
qSetupSeal
queryStatusWithOptions:
queue
queueOneIdentifier
queueOneToMessageIDDictionary
raise:format:
rangeOfString:
reRegisterWithUserID:action:service:
readDatagramWithCompletionHandler:
readDatagramsWithCompletionHandler:
readFromNWConnection:maximumDatagrams:readHandler:readHandlerWithOptions:
readyToRead
reason
receivedDirectMessagingSocketWithContext:
receivedGroupSessionParticipantDataUpdate:forTopic:toIdentifier:fromID:
receivedGroupSessionParticipantUpdate:forTopic:toIdentifier:fromID:context:
receivedIDSSimulatorSupportData:serviceName:messageIdentifier:
receivedInvitations
receivedInvitationsForService:
receivedMetadataForDirectMessaging:
recentlyBlockedEntries:
recipientAlias
reconnectSession
reconnectSessionWithUniqueID:
reconnectUPlusOneSession
recvKeyMaterial:
redeliverMessagesForDevice:completion:
reduceWithCompletion:
refreshIDStatusForDestination:service:listenerID:queue:completionBlock:
refreshIDStatusForDestinations:service:listenerID:forceRefresh:queue:completionBlock:
refreshIDStatusForDestinations:service:listenerID:queue:completionBlock:
refreshIDStatusForDestinations:service:listenerID:queue:errorCompletionBlock:
refreshRegistrationForAccount:
refreshUserAccessTokens:error:
refreshUserAccessTokensWithServiceUserID:userID:accessoryRequests:completionBlock:queue:
regenerateRegisteredIdentity
regionBasePhoneNumber
regionID
regionServerContext
registerAccount:
registerForNotificationsOnServices:
registerPluginWithOptions:
registerResultBlock:
registeredIdentityTimestampsWithBlock:
registeredURIs
registration
registrationAlertInfo
registrationCertificate
registrationCollaboratorWithCompletion:
registrationCollaboratorWithErrorHandler:
registrationControlGetRegistrationStateForRegistrationType:requestID:
registrationControlResponseForRequestID:withError:
registrationControlSetRegistrationStateForRegistrationType:toState:requestID:
registrationControlStatusResponseForRequestID:requestID:withError:
registrationError
registrationFailedForAccount:needsDeletion:
registrationInfo
registrationStatus
registrationWithServiceType:accountType:isTemporary:value:
relationship
relayCombinedSoftwareID
relayIPv6
relayPort
relayServerProvider
relaySessionID
relaySessionToken
reloadAccounts
remoteConnectionType
remoteDataSoMask
remoteMessageQueue
remoteNetworkType
remoteObject
remoteObjectDiedNotification:
remoteObjectExists
remoteObjectProxy
remoteObjectProxyWithErrorHandler:
remoteObjectProxyWithTimeoutInSeconds:errorHandler:
remoteObjectProxyWithUserInfo:errorHandler:
remoteParticipantID
remoteRATType
remoteRelayLinkID
removeAccount:
removeActiveConnection:forKey:
removeAliases:
removeAliases:fromAccount:
removeAllDonatedEntries:
removeAllEntries:
removeAllObjects
removeConnectionWithConnectionName:completionHandler:
removeDelegate:forService:listenerID:
removeDelegateForService:
removeDeliveryHandler:
removeDirectConnectionForLinkID:
removeDonatedEntries:withCompletion:
removeEntries:withCompletion:
removeFirstObject
removeHandler:
removeIDSDataChannelLinkContext:linkUUID:reason:
removeInterruptionHandlerForTarget:
removeItemAtPath:error:
removeItemAtURL:error:
removeListener:forTopic:
removeListenerID:
removeListenerID:forService:
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removeObjectsAtIndexes:
removeObjectsForKeys:
removeObjectsInArray:
removeObjectsInRange:
removeObserver:name:object:
removeOrderedObjectForKey:
removeParticipantIDs:
removeParticipantIDs:forGroup:sessionID:
removeParticipants:
removePendingInvitation:
removePendingInvitation:forService:
removeReceivedInvitation:
removeReceivedInvitation:forService:
removeRegistrationDelegate:
removeSentinelFromAliases:
removeTemporaryPhoneAlias:withCompletion:
removeTemporaryPhoneAlias:withError:
renewPseudonym:forUpdatedDuration:completion:
renewPseudonym:forUpdatedExpiryEpoch:completion:
renewPseudonym:forUpdatedExpiryEpoch:requestProperties:completion:
renewPseudonym:onAccount:forUpdatedExpiryEpoch:requestProperties:requestUUID:
repairAccounts
replaceAllEntriesWithEntries:withCompletion:
replaceDonatedEntriesWithEntries:withCompletion:
replaceEntries:replaceAll:withCompletion:
replaceEntries:withCompletion:
replaceObjectAtIndex:withObject:
replacementObjectForXPCConnection:encoder:object:
reportAction:ofTempURI:fromURI:onAccount:requestUUID:
reportAction:ofTempURI:fromURI:withCompletion:
reportFirstIncomingPacketTimeForMKI:
reportFirstOutgoingPacketTimeForMKI:
reportMKIArrival:isLocallyGenerated:
reportSpamMessage:
reportSpamMessage:serviceIdentifier:
reporterTimer
reportiMessageSpam:toURI:
reportiMessageSpamCheckUnknown:count:requestID:
reportiMessageUnknownSender:messageID:isBlackholed:isJunked:messageServerTimestamp:toURI:
requestActiveParticipants
requestActiveParticipantsForGroupSession:
requestCarrierTokenForSubscriptionSource:IMEI:carrierNonce:requestUUID:
requestCarrierTokenWithMessageBody:completion:
requestCarrierTokenWithParameters:completion:
requestCurrentPhoneUserSubscriptionSourceWithCompletion:
requestDataBlob:
requestDataBlobForParticipantIDs:
requestDataCryptorForTopic:completionHandler:
requestEncryptionKeyForGroup:participants:
requestEncryptionKeyForParticipants:
requestIDStatusForDestination:service:listenerID:queue:completionBlock:
requestIDStatusForDestinations:service:listenerID:queue:completionBlock:
requestMasterKeyMaterialForGroup:
requestNWConnectionToVirtualParticipant:forSession:completionHandler:
requestNWConnectionWithDataBlob:completionHandler:
requestNWConnectionforIDSGroupSessionBroadcastParameter:withCompletionHandler:
requestNWConnectionforIDSGroupSessionUnicastParameter:
requestNWConnectionforIDSGroupSessionUnicastParameter:withCompletionHandler:
requestPublicKeys
requestPublicKeysForRealTimeEncryption:forAccountWithID:
requestRealTimeEncryptionMasterKeyMaterial:forGroup:
requestSelectedSubscriptionsWithCompletion:
requestSessionInfoWithOptions:
requestURIsForParticipantIDs:completionHandler:
requestURIsForParticipantIDs:withRequestID:forGroupSession:
requestUnselectedTemporaryPhoneAliasesWithCompletion:
requestUnselectedTemporaryPhoneAliasesWithError:
requireBluetooth
requiredCapabilities
requiredIDStatusForDestination:service:listenerID:queue:completionBlock:
requiredIDStatusForDestinations:service:listenerID:queue:completionBlock:
requiredLackOfCapabilities
resendSubServicesToDaemonForCurrentDevice
resetKeysForGroup:
resetRealTimeEncryptionKeys:forGroup:
resourceTransferMetadata
resourceTransferSandboxExtension
resourceTransferURLString
respondsToSelector:
resume
resumePendingAckTimer
retain
retainCount
retrieveFirewallWithQueue:completion:
reunionSyncCollaboratorForClientProcessName:withCompletion:
reunionSyncCollaboratorWithErrorHandler:
reunionSyncCompletedForServices:requestID:
reunionSyncCompletedForServices:withCompletion:
reunionSyncStartedForServices:requestID:
reunionSyncStartedForServices:withCompletion:
revokePseudonym:completion:
revokePseudonym:onAccount:requestProperties:requestUUID:
revokePseudonym:requestProperties:completion:
rootConnection
salt
scanUnsignedLongLong:
scannerWithString:
scheduleRead
scheduleTimeoutWithResponseHandler:timeoutInterval:timeoutBlock:
scheduleTransactionLogTask:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
schemaIdentifier
seal
second
selectDefaultLink:
selectSubscription:withCompletion:
selectSubscription:withError:
selected
selectedPhoneNumberRegistrationSubscriptionWithError:
selector
self
sendAccessoryData:toAccessoryID:accessToken:options:identifier:error:
sendAckForMessageID:guidToAck:
sendAckForMessageWithContext:
sendAheadGroup:priority:options:identifier:completion:
sendAheadGroup:priority:options:identifier:error:
sendAllocationRequest:
sendAllocationRequest:options:
sendAppAckForDirectMessage:
sendAppAckWithGUID:
sendAppAckWithGUID:toDestination:forAccountWithUniqueID:connectionType:
sendCertifiedDeliveryReceipt:
sendCertifiedDeliveryReceipt:serviceName:
sendData:
sendData:forKey:encryption:capability:
sendData:forKey:encryption:capability:completionHandler:
sendData:forKey:encryption:capability:withCompletion:
sendData:fromAccount:toDestinations:priority:options:identifier:error:
sendData:priority:options:identifier:error:
sendData:toDestinations:priority:options:identifier:error:
sendEventConnectedWithDummyLinkInfo
sendFakePushFromFile:completion:
sendInvitation
sendInvitation:fromAccount:toDestination:options:identifier:error:
sendInvitation:toDestination:options:identifier:error:
sendInvitation:withData:declineOnError:
sendInvitation:withOptions:
sendInvitationToDestination:expirationDate:context:serverAcknowledgedBlock:
sendInvitationUpdate:fromAccount:toDestination:options:identifier:error:
sendInvitationUpdate:toDestination:options:identifier:error:
sendInvitationUpdate:toDestination:priority:options:identifier:error:
sendInvitationWithData:
sendInvitationWithData:declineOnError:
sendInvitationWithOptions:
sendMKMRecoveryRequestToGroup:
sendMasterKeyMaterialToGroup:
sendMediaEncryptionInfoWithMKM:MKS:MKI:isLocallyGenerated:encryptionSequenceNumber:
sendMessage:fromAccount:toDestinations:options:identifier:error:
sendMessage:fromAccount:toDestinations:priority:options:identifier:error:
sendMessage:toDestinations:options:identifier:error:
sendMessage:toDestinations:priority:options:identifier:error:
sendMessageData:onTopic:withOptions:identifier:completion:
sendMessageData:withOptions:identifier:completion:
sendMessageWithParameters:options:
sendMessageWithSendParameters:
sendMetadata
sendOpportunisticData:onService:usingAccountWithUniqueID:withIdentifier:options:
sendOpportunisticData:options:identifier:error:
sendOptInUpdateForApplications:withCompletion:
sendOptInUpdateForApplicationsOptInState:withCompletion:
sendPersistedFile:userInfo:toDestinations:usingAccountWithUniqueID:identifier:
sendPrekeyToGroup:
sendProtobuf:fromAccount:toDestinations:priority:options:identifier:error:
sendProtobuf:toDestinations:priority:options:identifier:error:
sendRealTimeEncryptionMKMRecoveryRequest:toGroup:
sendRealTimeEncryptionMasterKeyMaterial:toGroup:
sendRealTimeMediaPrekey:toGroup:
sendResourceAtURL:metadata:fromAccount:toDestinations:priority:options:identifier:error:
sendResourceAtURL:metadata:toDestinations:priority:options:identifier:error:
sendServerMessage:command:
sendServerMessage:command:fromAccount:
sendServerMessage:command:usingAccountWithUniqueID:
sendSessionMessage:
sendSessionMessage:toDestinations:
sendSessionMessage:toDestinations:forSessionWithUniqueID:
sendXPCObject:
sendXPCObject:objectContext:
senderAlias
senderCorrelationIdentifier
senderMergeID
serializeSessionInfoMetadata:
serverIsDegraded
serverMessagingCollaboratorWithCompletion:
serverMessagingCollaboratorWithErrorHandler:
serverReceivedTime
serverVerifiableEncoding
service:account:identifier:alternateCallbackID:willSendToDestinations:skippedDestinations:registrationPropertyToDestinations:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:sentBytes:totalBytes:
service:account:incomingAccessoryData:fromAccessoryID:context:
service:account:incomingAccessoryReportMessage:controllerID:accessoryID:context:
service:account:incomingData:fromID:context:
service:account:incomingInvitation:withContext:
service:account:incomingInvitationUpdate:withContext:
service:account:incomingMessage:fromID:
service:account:incomingMessage:fromID:context:
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingTopLevelMessage:fromID:messageContext:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:messageIdentifier:alternateCallbackID:updatedWithResponseCode:error:lastCall:
service:account:messageIdentifier:alternateCallbackID:updatedWithResponseCode:error:lastCall:messageContext:
service:account:receivedGroupSessionParticipantDataUpdate:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantUpdate:context:
service:activeAccountsChanged:
service:connectedDevicesChanged:
service:devicesChanged:
service:didFlushCacheForRemoteURI:fromURI:guid:
service:didHintCheckingTransportLogWithReason:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:didSwitchActivePairedDevice:acknowledgementBlock:
service:didUpdatePseudonymsWithChanges:
service:familyInfoUpdated:
service:linkedDevicesChanged:
service:linkedDevicesUpdated:
service:nearbyDevicesChanged:
service:tinkerDeviceAdded:
service:tinkerDeviceRemoved:
service:tinkerDeviceUpdated:
service:token:time:error:
serviceAllowedTrafficClassifiersDidReset:
serviceAvailability
serviceDomain
serviceIdentifier
serviceMinCompatibilityVersion
serviceName
serviceProperties
serviceType
serviceUserIDs:error:
serviceUserInfos
serviceWithIdentifier:commands:manuallyAckMessages:completion:
serviceWithIdentifier:commands:manuallyAckMessages:delegateContext:completion:
serviceWithIdentifier:completion:
services
servicesForListenerID:
session:audioEnabled:
session:didCreateParticipantIDAlias:forParticipantID:salt:
session:didReceiveActiveLightweightParticipants:success:
session:didReceiveActiveParticipants:success:
session:didReceiveBlockedParticipantIDs:withCode:isTruncated:
session:didReceiveBlockedParticipantIDs:withCode:withType:isTruncated:
session:didReceiveData:
session:didReceiveData:dataType:forParticipant:
session:didReceiveDataBlob:forParticipant:
session:didReceiveKeyMaterial:
session:didReceiveParticipantID:forParticipantIDAlias:salt:
session:didReceiveParticipantIDs:withCode:managementType:
session:didReceiveQueryBlockedParticipantIDs:withCode:isTruncated:
session:didReceiveReport:
session:didReceiveServerErrorCode:
session:didReceiveURIsForParticipantIDs:withRequestID:
session:didRegisterPluginAllocationInfo:
session:didRemoveParticipantIDs:withCode:isTruncated:
session:didUnregisterPluginAllocationInfo:
session:hasOutdatedSKI:
session:invitationSentToTokens:shouldBreakBeforeMake:
session:muted:
session:participantDidJoinGroupWithInfo:
session:participantDidLeaveGroupWithInfo:
session:receivedInvitationAcceptFromID:
session:receivedInvitationAcceptFromID:withData:
session:receivedInvitationCancelFromID:
session:receivedInvitationCancelFromID:withData:
session:receivedInvitationDeclineFromID:
session:receivedInvitationDeclineFromID:withData:
session:receivedSessionEndFromID:withData:
session:receivedSessionMessageFromID:withData:
session:shouldInvalidateKeyMaterialByKeyIndexes:
sessionAcceptReceived:fromID:withData:
sessionBySessionID
sessionCancelReceived:fromID:withData:
sessionDeclineReceived:fromID:withData:
sessionDidJoinGroup:participantInfo:error:
sessionDidJoinGroup:participantUpdate:error:
sessionDidJoinGroup:participantUpdateDictionary:error:
sessionDidJoinGroup:participantsInfo:error:
sessionDidLeaveGroup:error:
sessionDidReceiveParticipantUpgrade:participantType:error:
sessionEndReceived:fromID:withData:
sessionEnded:
sessionEnded:withReason:error:
sessionEndedReason
sessionForAccount:fromID:identifier:transportType:
sessionID
sessionIDAliasWithSalt:
sessionInvitationReceivedWithPayload:forTopic:sessionID:toIdentifier:fromID:transportType:
sessionMessageReceived:fromID:withData:
sessiondidReceiveKeyUpdate:
setAccountIDDescriptionMap:
setAccountIdentity:
setActiveConnection:forKey:
setActivityContinuation:
setActivityIdentifier:
setAllowCloudDelivery:
setAllowedTrafficClasses:
setAllowedTrafficClassifiers:
setAllowedTrafficClassifiersForDevice:classifiers:completion:
setAlternateCallbackID:
setAlwaysSkipSelf:
setAppContext:
setAppleID:
setApplicationIdentifier:
setApplicationToVerificationInfoProviders:
setArgument:atIndex:
setAssertion:
setAttributes:ofItemAtPath:error:
setAudioEnabled:
setAudioEnabled:forSessionWithUniqueID:
setAuthToken:
setBatchProcessingBlock:
setBluetoothMACAddress:
setBoostContext:
setByAddingObjectsFromSet:
setBypassDuet:
setBypassStorage:
setCTAdapter:
setCachedConnection:
setCachedPseudonymURIMap:
setCapabilities:forListenerID:shouldLog:
setCertifiedDeliveryContext:
setChannelPreferences:
setChildConnectionID:
setClasses:forSelector:argumentIndex:ofReply:
setClearStateOnLaunch:
setCloudKitContainer:
setCollaboratorPromiseDictionary:
setCommand:
setCommandContext:
setCommands:forListenerID:
setCompletedUnitCount:
setCompletion:
setCompletionBlock:
setCompressPayload:
setConciseACKSupported:
setConnectingQueue:
setConnection:
setConnectionInfoByServiceIdentifier:
setConnectionIsIncoming:
setConnectionMessageSendQueue:
setConnectionQueue:
setConnectionReadyCallback:
setConnectionSetupInProgress:
setConnectionState:
setContext:
setCurXPCMessagePriority:
setCurrentPhoneUserSubscriptionSource:completion:
setCurrentStreamName:
setDaemonController:
setDaemonControllerBuilder:
setDaemonDeathResend:
setData:
setDataProtectionClass:
setDataToEncrypt:
setDecodingFailurePolicy:
setDelegate:
setDelegate:forService:
setDelegate:queue:
setDelegateByServiceType:
setDelegateCapabilities:
setDelegateLinkID:
setDelegates:
setDeliveryMinimumTime:
setDeliveryStatusContext:
setDeliveryTime:
setDestinationDevice:
setDestinations:
setDevice:
setDeviceConnection:
setDirectConnectionReady:
setDirectMessageConnection:
setDirectMessagingAllowed:
setDirectMessagingMetadata:
setDirectMessagingReportStatsMSEC:
setDirectMessagingRetryMSEC:
setDirectMessagingState:
setDirectMessagingSupported:
setDirectMessagingTimeOutMSEC:
setDisableAliasValidation:
setDsidToDeviceList:
setDsidToFamilyMember:
setDuetIdentifiersOverride:
setECVersion:withCompletion:
setEncryptPayload:
setEnforceRemoteTimeouts:
setError:
setErrorHandler:
setEventHandler:
setExpectsPeerResponse:
setExpirationDate:
setExportedInterface:
setExportedObject:
setFamilyMembers:
setFinishedTransaction:
setFireAndForget:
setForSyncMessaging:
setForceEncryptionOff:
setFromID:
setFromServerStorage:
setGroupContext:
setGroupData:
setHandler:
setHomeKitPayload:
setIdentifier:
setIdentityData:
setIdsPriorityToUse:
setInFlightLock:
setInFlightRequests:
setIncomingMessageBytes:
setIncomingMessageCount:
setInitialStateByService:
setInterestingRegistrationProperties:
setInterface:
setInterface:forSelector:argumentIndex:ofReply:
setInterruptionHandler:
setInvalidationHandler:
setInvitationTimeOut:
setInviteTimeout:
setInviteTimetout:forSessionWithUniqueID:
setIsAudioEnabled:
setIsDeviceOnline:
setIsDonated:
setIsMuted:
setIsVirtualRelayLink:
setKeyMaterialCache:
setKnownRecordIDsFromList:
setLabelID:
setLinkIDToParticipantMap:
setLinkPreferences:
setLinkPreferences:service:
setListenerGUID:
setListenerServices:commands:capabilities:
setListenersByActivity:
setListeningForUpdates:
setLiveMessageDelivery:
setLocalDelivery:
setLoginID:
setManuallyAckMessages:
setMatchingDevice:
setMaxBitrate:
setMergeID:
setMessage:
setMessageID:
setMessageIDToMessageDictionary:
setMetricReportIdentifier:
setMonitor:
setMuted:
setMuted:forSessionWithUniqueID:
setNSUUID:
setNSUUID:onDeviceWithUniqueID:forService:
setNeedReply:
setNonCloudWaking:
setNonWaking:
setObject:forKey:
setObject:forKeyedSubscript:
setObserver:
setOnGroupCreate:
setOrderedObject:forKey:
setOriginalGUID:
setOriginalTimestamp:
setOutgoingMessageBytes:
setOutgoingMessageCount:
setPairedDeviceInfo:
setParticipantID:
setParticipantInfo:
setPassword:
setPassword:forUsername:onService:
setPassword:forUsername:onService:completionBlock:
setPasswordManager:
setPeerID:
setPeerIsConnected:
setPeerIsNearby:
setPeerResponseIdentifier:
setPeerSupportsDeviceConnection:
setPendingAckTimer:
setPendingAckTimerSuspended:
setPendingInvocations:
setPendingTransactions:
setPhoneUserSubscriptionSource:withRequestUUID:
setPowerAssertionOptions:
setPreferInfraWiFi:
setPreferInfraWiFi:service:
setPreferences:forSessionWithUniqueID:
setPreferredDataPathType:
setPretendingToBeFull:
setPriority:
setProtectionClassIdentityDataMap:
setProtobuf:
setProtobufAction:forIncomingRequestsOfType:
setProtobufAction:forIncomingResponsesOfType:
setProtobufAction:forProtobufType:isResponse:
setPseudonymUpdateTaskQueue:
setPushPriority:
setQueryContext:
setQueue:
setQueueOneIdentifier:
setQueueOneToMessageIDDictionary:
setRATType:
setReadHandlerWithOptions:
setReducerBlock:
setRegionBasePhoneNumber:
setRegionID:
setRelayCombinedSoftwareID:
setRelayIP:
setRelayIPv6:
setRelayPort:
setRelaySessionID:
setRelaySessionKey:
setRelaySessionToken:
setRemoteObject:
setRemoteObjectInterface:
setReporterTimer:
setRequireAllRegistrationProperties:
setRequireBluetooth:
setRequireLackOfRegistrationProperties:
setRequireLocalWiFi:
setRequiredCapabilities:requiredLackOfCapabilities:
setRequiredCapabilities:requiredLackOfCapabilities:forSessionWithUniqueID:
setRootConnection:
setSalt:
setSeal:
setSecond:
setSelectedSubscriptions:withCompletion:
setSelectedSubscriptions:withError:
setSelector:
setSendMode:
setSenderMergeID:
setService:
setServiceNameAccountControllerMap:
setServiceProperties:
setServices:forListenerID:
setSessionBySessionID:
setSessionID:
setShortServiceNameCString:
setShouldContinueFromLastSyncPoint:
setShouldListen:forActivity:completion:
setSignInFuzz:
setSignInTimeout:
setSocket:
setState:
setStreamPairWithInputStream:outputStream:
setStreamPreferences:
setStrongSelfReference:
setSubService:
setSubscriptionSlot:
setSupportsIPsecWithSPPLink:
setSync:
setSyncCollaboratorDictionary:
setSyncDaemonController:
setSyncOntoMain:
setSyncTask:
setTarget:
setTask:
setTempObject:
setTimeout:
setTotalPacketsReceivedOnLink:
setTotalPacketsSentOnLink:
setTotalUnitCount:
setTrafficClassApplied:
setTrafficClassInitialized:
setTrafficClassTLVProcessed:
setTrafficClassToUse:
setUPlusOneMode:isInitiator:
setURIs:
setUniqueID:
setUpgradedTrafficClass:
setUseDictAsTopLevel:
setUsedEngram:
setUuid:
setValue:forKey:
setWakingDowngradeCount:
setWakingPushPriority:error:
setWantsCertifiedDelivery:
setWantsDeliveryStatus:
setWantsFirewallDonation:
setWantsManualAck:
setWantsProgress:
setWantsPseudonymUpdates:
setWantsResponse:
setWiFiAssist:
setWithArray:
setWithObject:
setWriteCompletionHandler:
setXPCAdapter:
setXPCConnector:
setXpcDaemonController:
setupAccountWithLoginID:aliases:password:completionHandler:
setupAccountWithLoginID:password:completionHandler:
setupAccountWithLoginID:serviceName:accountType:accountConfig:authToken:password:transactionID:
setupAccountWithSetupParameters:aliases:completionHandler:
setupActivityMonitorClient:forActivity:
setupCompleteForAccount:transactionID:setupError:
setupCompleteWithInfo:
setupCompletedForPairedDeviceWithID:completion:
setupConnectionIfApplicable
setupIDSDeviceConnection
setupInvitationsForService:
setupNewSessionWithConfiguration:
setupRealtimeEncryptionController:forAccountWithID:
setupServerMessagingClient:withUUID:forTopic:
sharedDefaults
sharedInstance
sharedInstanceForBagType:
shortServiceNameCString
shortValue
shouldPairDirectlyOverIPsec
shouldReportMetric
shouldUseSocketForTransport
signData:withAlgorithm:completion:
signData:withAlgorithm:onService:options:requestUUID:
signData:withAlgorithm:options:completion:
signInController
signInController:service:didChangeStatus:
signInFuzz
signInQueue
signInTimeout
signInUsername:onService:waitUntilRegistered:withCompletion:
signInUsername:withProvidedCredential:onService:waitUntilRegistered:completion:
signOutService:completion:
slot
slotID
socket
sortedArrayUsingComparator:
stableBluetoothIdentifier
standardUserDefaults
start
startActiveProbingWithOptions:
startAdvertisingOfType:withData:withOptions:
startInternal
startMKMRecoveryForParticipantIDs:
startOTRTest:
startOTRTest:priority:
startPowerLogReportTimer
startScanningForType:withData:mask:
startScanningForType:withData:mask:boostedScan:duplicates:
startScanningForType:withData:mask:peers:
startScanningForType:withData:mask:peers:boostedScan:duplicates:
startScanningForType:withData:mask:peers:withOptions:
startScanningForType:withData:mask:peers:withOptions:boostedScan:
startScanningForType:withData:mask:peers:withOptions:boostedScan:duplicates:
startScanningForType:withData:mask:withOptions:
startScanningForType:withData:mask:withOptions:boostedScan:
startScanningForType:withData:mask:withOptions:boostedScan:duplicates:
startScanningForType:withData:peers:withOptions:
startScanningForType:withData:withOptions:
startTrackingPeer:
startTrackingPeer:forType:
state
status
statusOfUsersOnService:withCompletion:
stopActiveProbingWithOptions:
stopAdvertisingOfType:
stopAwaitingAcknowledgementFromAllServiceDelegates
stopAwaitingAcknowledgementFromServiceDelegateWithIdentifier:
stopBroadcastingForSubActivity:withCompletion:
stopLocalPairingForDeviceWithID:completion:
stopLocalSetup
stopScanningForType:
stopTrackingPeer:
stopTrackingPeer:forType:
storageGuid
streamConnectionForSessionDestination:error:
streamConnectionForSocketDescriptor:error:
stringByAppendingString:
stringByReplacingOccurrencesOfString:withString:
stringGUID
stringRepresentation
stringWithCString:encoding:
stringWithFileSystemRepresentation:length:
stringWithFormat:
stringWithUTF8String:
strongSelfReference
strongToWeakObjectsMapTable
subActivity
subscribeInfo:forActivity:withCompletion:
subscriptionSlot
subscriptionSource
subscriptions
substringFromIndex:
superclass
supportsApplePay
supportsIPsecWithSPPLink
supportsIdentification
supportsMMSRelay
supportsPhoneCalls
supportsSMSRelay
supportsSecureCoding
supportsTethering
supportsiCloudPairing
suppressedDevices
suspendPendingAckTimer
switchActivePairedDevice:forAccount:
switchActivePairedDevice:forService:
switchActivePairedDeviceWithID:completion:
syncCollaboratorDictionary
syncDaemonController
syncDaemonControllerBuilder
syncOntoMain
syncTask
synchronousRemoteObjectProxyWithErrorHandler:
systemApplicationDidEnterBackground
systemApplicationDidResume
systemApplicationDidSuspend
systemApplicationWillEnterForeground
systemIsShuttingDown
systemTimer
tapToRadarWithTitle:message:context:completion:
target
task
taskHandler:accountInfoForAliases:completion:
taskHandler:groupsWithGroupIDs:completion:
taskHandler:messagesFromToken:completion:
taskHandler:participantsWithDestinations:completion:
taskHandler:persistToken:completion:
teardownAll
teardownService:
tempObject
testCloudQRConnection
testCloudQRConnection:
test_receiveData:forKey:fromParticipant:
threadDictionary
timeIntervalSince1970
timeIntervalSinceDate:
timeIntervalSinceNow
timeIntervalSinceReferenceDate
timeToUnderLimit:
timeoutBlock
timing
tokenString
tokens
topic
totalBytes
totalPacketsReceivedOnLink
totalPacketsSentOnLink
trackingPreventionSecret
trafficClassApplied
trafficClassInitialized
trafficClassTLVProcessed
trafficClassToUse
transactionLog
transactionLogMessageFromDictionaryRepresentation:
transportLog
triggerAllFirewallNotificationsWithHandle:delay:service:
triggerFinalDeregister
triggerFirewallDBCleanupWithInterval:
triggerKeyRollWithCompletion:
tryForceFamilyFetch
type
unarchivedObjectOfClass:fromData:error:
unarchivedObjectOfClasses:fromData:error:
underLimit
underLimitForItem:
underlyingFileDescriptor
unicastConnectorWithDataMode:
unicastParameterForParticipantID:dataMode:connectionIndex:
unicastParameterForParticipantIDAlias:salt:dataMode:connectionIndex:
unionSet:
uniqueID
uniqueIDOverride
unlock
unpairDeviceWithID:completion:
unpairStartForDeviceWithID:completion:
unprefixedURI
unregisterAccount
unregisterAccount:
unregisterPluginForGroup:options:
unregisterPluginWithOptions:
unselectSubscription:withCompletion:
unselectedTemporaryPhoneAliasesWithError:
unsetQueryContext:
unsignedCharValue
unsignedIntValue
unsignedIntegerValue
unsignedLongLongValue
unsignedLongValue
unsignedShortValue
unsubscribeActivity:andSubActivity:withCompletion:
unvalidateAliases:
unvalidateAliases:forAccount:
updateAccount:withAccountInfo:
updateAccountWithAccountInfo:
updateAuthorizationCredentials:token:
updateAuthorizationCredentials:token:forAccount:
updateAvailability
updateConnectedDevices:
updateConnection:
updateConnectionWithOptions:error:
updateDeviceIdentity:error:
updateFlags
updateMembers:forGroup:sessionID:withContext:messagingCapabilities:triggeredLocally:lightweightStatusDict:
updateMembers:withContext:messagingCapabilities:triggeredLocally:
updateMembers:withContext:triggeredLocally:
updatePairedDevice:pairingType:completion:
updatePairedDeviceWithID:supportIPsec:completion:
updateParticipantData:forGroup:sessionID:withContext:
updateParticipantData:withContext:
updateParticipantType:forGroup:sessionID:members:triggeredLocally:withContext:lightweightStatusDict:
updateParticipantType:members:withContext:triggeredLocally:
updateSubServices:
updateSubServices:forDevice:
updateSubServices:forService:deviceUniqueID:
updateTrafficClass:
updateUserWithOldUserName:newUserName:
upgradedTrafficClass
upsertGroupWithInfo:previousGroup:completion:
uriForFromID:
useCurrentEncryptionkeyWithHandler:
usedEngram
userAccessTokens:error:
userInfo
userUniqueIdentifier
utilities
uuid
validateAliases:
validateAliases:forAccount:
validateCachedGroup:isParentOfGroup:completion:
validateProfileForAccount:
validateReceivedInvitation:
validateStrictDecodingForSentInvitation:
value
valueForEntitlement:
valueWithPointer:
verificationInfoProviderForApplication:
verificationInfoProviderIdForApplication:
verifyAndRevealData:sendingDevice:cypherIdentifier:error:
verifyAndRevealData:withReceipient:cypherIdentifier:error:
verifySignedData:matchesData:forAlgorithm:onService:tokenUri:options:requestUUID:
verifySignedData:matchesExpectedData:withTokenURI:forAlgorithm:completion:
verifySignedData:matchesExpectedData:withTokenURI:forAlgorithm:options:completion:
vettedAliases
voicemailSync
waitForReply
wakingDowngradeCount
wantsAppAck
wantsPseudonymUpdates
wantsResponse
wantsTinkerDevices
wasInterrupted
watchPairing
weakObjectsHashTable
weakRefWithObject:
weakSharedInstance
weakToStrongObjectsMapTable
writeArrayOfDatagrams:datagramSizes:datagramInfo:datagramOptions:datagramCount:completionHandler:
writeDatagram:datagramSize:datagramInfo:options:completionHandler:
writeDatagram:datagramSize:flags:completionHandler:
writeDatagrams:datagramsSize:datagramsInfo:datagramsCount:options:completionHandler:
writeToFile:options:error:
xpcDaemonController
xpcObject:objectContext:
zone
@32@0:8@16@24
v16@0:8
q16@0:8
v40@0:8q16@24@32
v24@0:8q16
v48@0:8q16@24@32@40
v56@0:8q16@24@32@40@48
v60@0:8q16@24@32@40@48B56
v52@0:8q16@24@32@40B48
v64@0:8q16@24@32@40@48B56B60
v56@0:8q16@24@32@40B48B52
v24@0:8@16
v32@0:8@16q24
@"_IDSContinuity"
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v68@0:8@16@24i32@36@44@52@60
v52@0:8@16@24@32i40@44
v32@0:8@16@24
v40@0:8@16@24@32
v56@0:8@16@24@32@40@48
v56@0:8@16@24d32@40@48
v48@0:8@16@24@32@40
v56@0:8@16q24@32@40@48
v72@0:8@16@24q32@40@48@56@64
v64@0:8@16@24@32@40@48@56
v28@0:8B16@20
v48@0:8@16q24@32@40
v80@0:8@16@24@32@40@48@56q64q72
v48@0:8@16@24@32q40
v36@0:8@16@24I32
v32@0:8q16@24
v36@0:8@16@24B32
v28@0:8@16I24
v68@0:8@16@24@32@40@48B56@60
v44@0:8@16@24@32S40
v64@0:8S16@20@28@36B44@48@56
v40@0:8Q16@24@32
v48@0:8q16@24@32B40B44
v56@0:8@16@24B32B36@40@48
v40@0:8q16q24@32
v68@0:8@"NSString"16@"NSString"24i32@"NSDictionary"36@"NSString"44@"NSString"52@"NSString"60
v52@0:8@"NSString"16@"NSString"24@"NSString"32i40@"NSDictionary"44
v24@0:8@"NSString"16
v32@0:8@"NSString"16@"NSDictionary"24
v32@0:8@"NSString"16@"NSString"24
v40@0:8@"NSString"16@"NSString"24@"NSString"32
v32@0:8@"NSArray"16@"NSString"24
v56@0:8@"IDSURI"16@"NSString"24@"IDSPseudonymProperties"32@"IDSPseudonymRequestProperties"40@"NSString"48
v56@0:8@"IDSPseudonym"16@"NSString"24d32@"IDSPseudonymRequestProperties"40@"NSString"48
v48@0:8@"IDSPseudonym"16@"NSString"24@"IDSPseudonymRequestProperties"32@"NSString"40
v56@0:8@"NSData"16q24@"NSString"32@"IDSSigningOptions"40@"NSString"48
v72@0:8@"NSData"16@"NSData"24q32@"NSString"40@"IDSURI"48@"IDSSigningOptions"56@"NSString"64
v32@0:8@"NSNumber"16@"NSString"24
v64@0:8@"NSString"16@"NSString"24@"NSString"32@"NSDictionary"40@"NSNumber"48@"NSArray"56
v40@0:8@"NSString"16@"NSNumber"24@"NSString"32
v32@0:8@"NSData"16@"NSString"24
v48@0:8@"NSNumber"16@"NSString"24@"NSString"32@"NSString"40
v24@0:8@"NSArray"16
v24@0:8@"NSSet"16
v40@0:8@"NSArray"16@"NSString"24@"NSString"32
v24@0:8@"NSDictionary"16
v56@0:8@"NSData"16@"NSString"24@"NSString"32@"NSString"40@"NSDictionary"48
v32@0:8@"NSDictionary"16@"NSString"24
v56@0:8@"NSURL"16@"NSDictionary"24@"NSArray"32@"NSString"40@"NSString"48
v40@0:8@"NSDictionary"16@"NSNumber"24@"NSString"32
v28@0:8B16@"NSString"20
v32@0:8@"NSString"16q24
v48@0:8@"NSDictionary"16q24@"ENGroupID"32@"NSString"40
v56@0:8@"NSString"16@"NSString"24@"NSNumber"32@"NSNumber"40@"NSNumber"48
v80@0:8@"NSString"16@"NSString"24@"NSString"32@"NSNumber"40@"NSNumber"48@"NSNumber"56q64q72
v48@0:8@"NSString"16@"NSString"24@"NSString"32q40
v36@0:8@"NSSet"16@"NSSet"24I32
v32@0:8q16@"NSString"24
v32@0:8@"NSObject<OS_xpc_object>"16@"NSDictionary"24
v36@0:8@"NSString"16@"NSData"24B32
v32@0:8@"NSString"16@"NSData"24
v28@0:8@"NSString"16I24
v40@0:8@"NSData"16@"NSSet"24@"NSString"32
v68@0:8@"NSArray"16@"NSString"24@"NSString"32@"NSData"40@"IDSMessagingCapabilities"48B56@"NSDictionary"60
v44@0:8@"NSArray"16@"NSString"24@"NSString"32S40
v40@0:8@"NSSet"16@"NSString"24@"NSString"32
v48@0:8@"NSData"16@"NSString"24@"NSString"32@"NSData"40
v64@0:8S16@"NSString"20@"NSString"28@"NSArray"36B44@"NSData"48@"NSDictionary"56
v40@0:8@"NSString"16@"NSDictionary"24@"NSDictionary"32
v40@0:8@"NSArray"16@"NSUUID"24@"NSString"32
v32@0:8@"NSString"16@"NSArray"24
v40@0:8@"NSArray"16@"NSArray"24@"NSString"32
v40@0:8Q16@"NSData"24@"NSString"32
v40@0:8q16@"NSData"24@"NSDictionary"32
v40@0:8q16@"NSData"24@"NSData"32
v48@0:8q16@"NSData"24@"NSData"32@"NSArray"40
v48@0:8q16@"NSData"24@"NSData"32B40B44
v56@0:8q16@"NSData"24@"NSData"32@"NSArray"40B48B52
v56@0:8@"NSString"16@"NSString"24B32B36@"NSNumber"40@"NSString"48
v56@0:8q16@"IDSURI"24@"IDSURI"32@"NSString"40@"NSString"48
v40@0:8@"NSString"16@"NSString"24@"NSData"32
v40@0:8@"NSString"16@"NSArray"24@"NSString"32
v48@0:8@"NSString"16@"NSString"24@"NSString"32@"NSArray"40
v40@0:8@"NSString"16@"NSString"24@"NSArray"32
v48@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40
v40@0:8q16q24@"NSString"32
v40@0:8@"NSData"16@"NSString"24@"NSString"32
v72@0:8@16@24@32@40@48@56@64
v80@0:8@16@24@32@40@48@56@64@72
v68@0:8@16@24@32q40@48B56@60
v40@0:8@16d24@32
v52@0:8@16@24@32B40@44
v36@0:8@16I24@28
v28@0:8@16B24
v44@0:8@16@24I32S36B40
v40@0:8@16@24I32B36
v36@0:8@16S24@28
v40@0:8@16@24I32S36
v48@0:8@16Q24Q32@40
v44@0:8@16@24S32@36
v40@0:8@16q24@32
v40@0:8@16@24^B32
v52@0:8@16q24B32d36@44
v44@0:8@16B24@28@36
v36@0:8B16@20@28
v36@0:8@16B24@28
v28@0:8B16@"NSDictionary"20
v48@0:8@"NSData"16@"NSString"24@"NSString"32@"NSDictionary"40
v72@0:8@"NSDictionary"16@"NSString"24@"NSDictionary"32@"NSString"40@"NSString"48@"NSString"56@"NSDictionary"64
v64@0:8@"NSData"16@"NSString"24@"NSString"32@"NSString"40@"NSString"48@"NSDictionary"56
v80@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@"NSString"48@"NSString"56@"NSString"64@"NSDictionary"72
v64@0:8@"NSDictionary"16@"NSString"24@"NSString"32@"NSString"40@"NSString"48@"NSDictionary"56
v68@0:8@"NSString"16@"NSString"24@"NSString"32q40@"NSError"48B56@"NSDictionary"60
v64@0:8@"NSString"16@"NSString"24@"NSString"32@"NSArray"40@"NSArray"48@"NSDictionary"56
v56@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@"NSDictionary"48
v40@0:8@"NSString"16d24@"NSError"32
v40@0:8@"NSString"16@"NSString"24@"NSError"32
v32@0:8@"NSString"16@"NSNumber"24
v32@0:8@"NSData"16@"NSError"24
v40@0:8@"NSData"16@"NSString"24@"NSError"32
v72@0:8@"NSData"16@"NSData"24@"NSArray"32@"NSArray"40@"NSData"48@"NSString"56@"NSError"64
v40@0:8@"NSNumber"16@"NSString"24@"NSError"32
v52@0:8@"NSString"16@"NSDictionary"24@"NSString"32B40@"NSError"44
v64@0:8@"NSDictionary"16@"NSString"24@"NSString"32@"NSString"40@"NSString"48@"NSNumber"56
v36@0:8@"NSString"16I24@"NSError"28
v36@0:8@"NSString"16@"NSSet"24B32
v28@0:8@"NSString"16B24
v40@0:8@"NSString"16@"NSArray"24@"NSError"32
v40@0:8@"NSString"16@"NSDictionary"24@"NSError"32
v32@0:8@"NSString"16@"NSError"24
v36@0:8@"NSString"16@"NSArray"24B32
v44@0:8@"NSString"16@"NSArray"24I32S36B40
v40@0:8@"NSString"16@"NSArray"24I32B36
v36@0:8@"NSString"16S24@"NSError"28
v40@0:8@"NSString"16@"NSArray"24I32S36
v40@0:8@"NSString"16@"NSDictionary"24@"NSUUID"32
v32@0:8@"NSString"16@"NSUUID"24
v48@0:8@"NSString"16Q24Q32@"NSData"40
v40@0:8@"NSString"16@"NSData"24@"NSDictionary"32
v44@0:8@"NSString"16@"NSData"24S32@"NSDictionary"36
v56@0:8@"NSDictionary"16@"NSString"24@"NSString"32@"NSString"40@"NSDictionary"48
v48@0:8@"NSDictionary"16@"NSString"24@"NSString"32@"NSString"40
v40@0:8@"NSObject<OS_xpc_object>"16@"NSString"24@"NSError"32
v40@0:8@"NSString"16q24@"NSError"32
v32@0:8q16@"NSError"24
v40@0:8q16@"NSData"24@"NSString"32
v32@0:8@"NSArray"16@"NSError"24
v40@0:8@"NSString"16@"NSString"24^B32
v40@0:8@"NSString"16@"NSError"24@"NSArray"32
v40@0:8q16@"NSString"24@"NSError"32
v52@0:8@"NSString"16q24B32d36@"NSError"44
v44@0:8@"IDSPseudonym"16B24@"NSError"28@"NSString"36
v36@0:8B16@"NSError"20@"NSString"28
v40@0:8@"NSString"16@"NSData"24@"NSError"32
v36@0:8@"NSString"16B24@"NSError"28
v28@0:8@?16B24
v24@0:8@?16
B28@0:8B16@?20
v20@0:8B16
v40@0:8B16@20@28I36
B20@0:8B16
B40@0:8B16@20@28I36
I16@0:8
B20@0:8I16
v20@0:8i16
i16@0:8
v32@0:8@16@?24
B40@0:8@16@24@32
B32@0:8@16@24
@24@0:8@16
I24@0:8@16
B32@0:8I16@20B28
v28@0:8B16@?20
@24@0:8@?16
@"IMRemoteObject<IDSDaemonProtocol>"
@"IDSDaemonControllerForwarder"
@"IMLocalObject"
@"IDSDaemonListener"
@"NSProtocolChecker"
@"NSString"
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_dispatch_group>"
@"NSMutableDictionary"
@"NSSet"
@"NSMutableSet"
@40@0:8@16@24@32
@48@0:8@16@24@32@?40
@?16@0:8
v28@0:8I16@?20
v48@0:8@16@24@32@?40
v72@0:8@16@24@32@40@48@56@?64
v52@0:8@16@24@32B40@?44
v44@0:8@16B24B28B32@?36
v44@0:8@16B24B28B32@36
v24@0:8d16
v32@0:8@"NSData"16@?<v@?@"NSDictionary"@"NSError">24
v24@0:8@?<v@?@"NSArray">16
v28@0:8B16@?<v@?>20
v24@0:8@?<v@?I>16
v28@0:8I16@?<v@?>20
v24@0:8@?<v@?>16
v32@0:8@"NSString"16@?<v@?>24
v48@0:8@"NSString"16@"NSString"24@"NSDictionary"32@?<v@?>40
v72@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@"NSString"48@"NSString"56@?<v@?>64
v24@0:8@?<v@?@"NSError">16
v48@0:8@"NSString"16@"IDSURI"24@"IDSURI"32@?<v@?@"IDSQueryKeyTransparencyContext"@"NSArray"@"NSError">40
v52@0:8@"NSString"16@"IDSURI"24@"IDSURI"32B40@?<v@?@"IDSKTVerificationResult"@"NSError">44
v48@0:8@"NSString"16@"IDSURI"24@"IDSURI"32@?<v@?@"NSError">40
v24@0:8@?<v@?@"NSArray"@"NSError">16
v24@0:8@?<v@?@"NSData"@"NSError">16
v32@0:8@"NSString"16@?<v@?@"NSError">24
v44@0:8@"NSString"16B24B28B32@?<v@?@"NSError">36
v32@0:8@"NSString"16@?<v@?@"NSString"@"NSError">24
v24@0:8@?<v@?@"NSString">16
v32@0:8@"NSArray"16@?<v@?@"NSString">24
v28@0:8B16@?<v@?@"NSError">20
v32@0:8@"NSString"16@?<v@?@"NSMutableArray">24
v44@0:8@"NSString"16B24B28B32@"NSString"36
v40@0:8@"NSString"16d24@"NSString"32
v40@0:8@16@24@?32
v40@0:8@"NSString"16@"NSArray"24@?<v@?@"NSDictionary"@"NSError">32
v32@0:8@"NSString"16@?<v@?@"KTSelfVerificationInfo"@"NSError">24
v40@0:8@"NSString"16@"KTSelfVerificationHealableErrors"24@?<v@?B>32
v32@0:8@"NSString"16@?<v@?B@"NSUUID"@"NSError">24
v32@0:8@"NSDictionary"16@?<v@?@"IDSKTOptInResult">24
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^{_NSZone=}16
@"IDSURI"
@"NSDate"
v32@0:8@"NSArray"16@?<v@?@"NSError">24
v20@0:8S16
v32@0:8@16C24I28
v28@0:8I16@20
C16@0:8
@32@0:8@16B24I28
v24@0:8Q16
*16@0:8
v24@0:8*16
v20@0:8I16
@"NSObject<OS_nw_connection>"
@"NSMutableArray"
@"<IDSDirectMessageConnectionDelegate>"
@"NSObject<OS_dispatch_source>"
@"IDSDevice"
@"IDSDeviceConnection"
@"IDSServiceProperties"
@"IMPowerAssertion"
@"NSDictionary"
@40@0:8@16Q24^@32
@48@0:8@16@24Q32^@40
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSUUID"
@"NSData"
^{_CCCryptor=}
@"NSMapTable"
@40@0:8@16Q24@32
@48@0:8@16Q24@32@40
@48@0:8@16@24Q32@40
Q32@0:8Q16@24
Q24@0:8@16
v40@0:8Q16@24@?32
v44@0:8@16@24@32B40
v28@0:8@16S24
v40@0:8S16@20@28B36
@40@0:8Q16q24Q32
@48@0:8Q16@24q32Q40
@24@0:8q16
@"_IDSGroupSession"
v32@0:8@"IDSPhoneSubscription"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"IDSURI"16@?<v@?B@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSDictionary">24
@28@0:8@16B24
q32@0:8@16@24
@"IDSServiceMonitor"
v32@0:8@?16@?24
@40@0:8@16@24B32B36
q24@0:8@16
@"IDSInternalQueueController"
@"NSHashTable"
@"CUTWeakReference"
@"NSArray"
@52@0:8@16@24Q32@40B48
v40@0:8@"IDSActivityUpdate"16@"NSString"24@?<v@?>32
@48@0:8@16@24@32@40
@"<IDSActivityMonitorListenerDelegate>"
@"_IDSActivityMonitorXPCConnector"
v56@0:8@16@24q32@40@48
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32@"IDSMessageContext"40
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSReceivedInvitation"32@"IDSMessageContext"40
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSentInvitation"32@"IDSMessageContext"40
@"IDSService"
@"<IDSInvitationManagerDelegate>"
@"NSNumber"
@36@0:8B16@20@28
@"IDSCertifiedDeliveryContext"
v40@0:8@"NSData"16@"NSString"24@"IDSServerMessagingIncomingContext"32
v48@0:8@16@24^@32@?40
{os_unfair_lock_s=I}16@0:8
v20@0:8{os_unfair_lock_s=I}16
@"IDSXPCDaemonController"
v32@0:8@"ENGroup"16@?<v@?@"NSError">24
v40@0:8@"ENGroup"16@"ENGroup"24@?<v@?@"NSError">32
@32@0:8Q16Q24
@32@0:8Q16@24
v32@0:8@"IDSAccountController"16@"IDSAccount"24
@56@0:8@16@24d32d40@48
v32@0:8@16Q24
v40@0:8Q16Q24@?32
@24@0:8Q16
v32@0:8Q16@?24
v48@0:8@16@24Q32@?40
v44@0:8@16Q24B32@?36
v52@0:8@16@24Q32B40@?44
v40@0:8d16@24B32B36
B40@0:8Q16Q24@?32
d16@0:8
@"IDSCTAdapter"
@40@0:8@16@24q32
@48@0:8@16@24q32@40
B32@0:8@16^@24
Q24@0:8Q16
@"_IDSSession"
@"IDSDaemonRequestTimer"
@"_IDSBatchIDQueryController"
@36@0:8@16@24B32
B64@0:8@16@24q32@40^@48^@56
@"_IDSConnection"
B56@0:8@16@24@32^@40^@48
@"NSObject<OS_nw_parameters>"
@"NSObject<OS_nw_endpoint>"
v40@0:8@16q24@?32
v36@0:8@16B24@?28
v32@0:8@"NSUUID"16@?<v@?@"NSError">24
v32@0:8@"IDSLocalPairingAddPairedDeviceInfo"16@?<v@?@"NSError">24
v40@0:8@"NSUUID"16q24@?<v@?@"NSError">32
v24@0:8@?<v@?@"IDSLocalPairingLocalDeviceRecord"@"NSDictionary"@"NSError">16
v36@0:8@"NSUUID"16B24@?<v@?@"NSError">28
v40@0:8@"NSString"16@"NSSet"24@?<v@?@"NSError">32
B72@0:8@16@24@32q40@48^@56^@64
v48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?@"NSString"@"NSString"B>40
@56@0:8@16Q24Q32q40Q48
@64@0:8@16Q24Q32@40q48Q56
@36@0:8i16q20Q28
v24@0:8@?<v@?@"<IDSXPCPairing>"@"NSError">16
v24@0:8@?<v@?@"<IDSXPCPairedDeviceManager>"@"NSError">16
v32@0:8@"NSString"16@?<v@?@"<IDSXPCReunionSync>"@"NSError">24
v24@0:8@?<v@?@"<IDSXPCOpportunistic>"@"NSError">16
v24@0:8@?<v@?@"<IDSXPCRegistration>"@"NSError">16
v24@0:8@?<v@?@"<IDSXPCActivityMonitor>"@"NSError">16
v24@0:8@?<v@?@"<IDSXPCServerMessaging>"@"NSError">16
v24@0:8@?<v@?@"<IDSXPCKeyTransparency>"@"NSError">16
v24@0:8@?<v@?@"<IDSXPCFirewall>"@"NSError">16
v24@0:8@?<v@?@"<IDSXPCGroupSessionKeyValueDeliveryProvider>"@"NSError">16
v24@0:8@?<v@?@"<IDSXPCInternalTesting>"@"NSError">16
@32@0:8@?16@24
v40@0:8@16@?24@32
v32@0:8@?16@24
@"_IDSCompletionHandler"
@40@0:8q16@24@32
@56@0:8@16@24@32@40@48
@32@0:8q16@24
q24@0:8q16
@"IDSPhoneCertificateVendor"
v32@0:8q16@?24
q24@0:8^@16
@"NSXPCInterface"
@"_IDSAccountController"
v32@0:8@"IDSBaseSocketPairConnection"16@"NSData"24
v24@0:8@"IDSBaseSocketPairConnection"16
@"IDSBaseSocketPairConnection"
^{cfs_client_s=}
@"NSError"
@"IDSGroupEncryptionKeyMaterialCache"
v40@0:8@"IDSTransactionLogTaskHandler"16@"NSArray"24@?<v@?@"NSArray"@"NSError">32
v40@0:8@"IDSTransactionLogTaskHandler"16@"<NSSecureCoding>"24@?<v@?@"NSArray"@"<NSSecureCoding>"B@"NSError">32
v40@0:8@"IDSTransactionLogTaskHandler"16@"<NSSecureCoding>"24@?<v@?@"NSError">32
v32@0:8@"IDSTransactionLogTaskHandler"16@?<v@?@"<NSSecureCoding>"@"NSError">24
v40@0:8@"IDSTransactionLogTaskHandler"16@"NSSet"24@?<v@?@"IDSTransactionLogTaskHandlerAccountInfo"@"NSError">32
@"<IDSGroupContextControllerDelegate>"
@"CUTPromiseSeal"
@"IDSCloudKitContainer"
@"ENGroupContext"
@"ENAccountIdentity"
v28@0:8@"IDSAccount"16B24
v32@0:8@"IDSAccount"16@"NSArray"24
v40@0:8@16@24q32
v68@0:8@16@24@32@40@48@56B64
v40@0:8@"IDSDirectMessageConnection"16@"NSString"24q32
v72@0:8@"IDSDirectMessageConnection"16@"NSDictionary"24@"NSString"32@"NSString"40@"NSString"48@"NSString"56@"NSDictionary"64
v32@0:8@"IDSDirectMessageConnection"16@"NSString"24
v72@0:8@"IDSDirectMessageConnection"16@"NSData"24@"NSString"32@"NSString"40@"NSString"48@"NSString"56@"NSDictionary"64
v68@0:8@"IDSDirectMessageConnection"16@"NSString"24@"NSString"32@"NSString"40@"NSString"48@"NSDictionary"56B64
v24@0:8@"NSObject<OS_xpc_object>"16
@44@0:8@16@24B32@36
v48@0:8:16@?24@?32@?40
v56@0:8:16@?24@?32@?40@48
@48@0:8@16@24@32Q40
v72@0:8@16@24@32q40@48B56@60B68
B60@0:8@16@24@32@40B48@52
@"IDSAccount"
@"IMOrderedMutableDictionary"
@"IDSDirectMessageConnection"
v40@0:8@"_ENGroupInfo"16@"ENGroup"24@?<v@?@"ENGroup"@"NSError">32
v32@0:8@"ENGroupID"16@?<v@?@"ENGroup"@"NSError">24
v32@0:8@"ENGroup"16@?<v@?@"NSData"@"NSError">24
v32@0:8@"NSData"16@?<v@?@"ENGroup"@"NSError">24
v32@0:8@"<ENCypher>"16@?<v@?@"NSArray"B>24
v40@0:8@"ENGroup"16@"ENGroup"24@?<v@?B@"NSError">32
v32@0:8@"ENStableGroupID"16@?<v@?@"ENGroup">24
v32@0:8@"ENGroupID"16@?<v@?>24
@"NSXPCConnection"
@"IDSGroupContextNotifyingObserver"
{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}
@40@0:8@16q24@32
@48@0:8@16@24@?32@40
@"NSInputStream"
@"NSOutputStream"
v56@0:8@16@24@32@40@?48
@24@0:8@"NSDictionary"16
@"NSDictionary"16@0:8
@32@0:8@16@?24
@36@0:8@16B24@?28
@32@0:8d16@?24
@56@0:8@16@24d32@?40@?48
@40@0:8@16@?24@?32
@"IDSXPCConnection"
@28@0:8I16^@20
@24@0:8^@16
v32@0:8@"NSString"16@?<v@?@"<IDSXPCGroupSessionKeyValueDelivery>"@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSDictionary"@"NSError">24
v24@0:8@?<v@?@"KTSelfVerificationInfo"@"NSError">16
v32@0:8@"KTSelfVerificationHealableErrors"16@?<v@?B>24
@"_IDSAccount"
v56@0:8@16@24@32@?40@48
v64@0:8@16@24@32@40@?48@56
@"_IDSGenericCompletionHandler"
@32@0:8@16^@24
@40@0:8@16Q24q32
@48@0:8@16Q24@32q40
@28@0:8@16S24
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
B32@0:8Q16q24
v44@0:8@16@24B32@?36
v28@0:8:16S24
:20@0:8S16
B48@0:8@16@24@32^@40
B64@0:8@16@24@32@40^@48^@56
B32@0:8q16^@24
B56@0:8@16q24@32^@40^@48
@32@0:8@16q24
@36@0:8@16I24^@28
@28@0:8i16^@20
@40@0:8@16@24^@32
v40@0:8@16d24@?32
@40@0:8@16@24d32
@32@0:8@16d24
v48@0:8@16q24@32@?40
v56@0:8@16@24@32q40@?48
v64@0:8@16@24@32q40@48@?56
v48@0:8q16@24@32@?40
@"_IDSService"
@40@0:8@16@?24@32
@"IDSDaemonResponseHandler"
@"IMTimer"
@40@0:8@16d24@?32
v52@0:8@16@24B32@36@?44
v32@0:8@"IDSGroupContextController"16@"ENGroup"24
@"NSDictionary"32@0:8@"IDSGroupContextController"16@"NSSet"24
v52@0:8@16@24B32@36@44
v56@0:8@"IDSConnection"16@"NSData"24@"NSString"32@"NSString"40@"IDSMessageContext"48
v48@0:8@"IDSConnection"16@"NSDictionary"24@"NSString"32@"IDSMessageContext"40
v48@0:8@"IDSConnection"16@"NSData"24@"NSString"32@"IDSMessageContext"40
v48@0:8@"IDSConnection"16@"IDSDeviceIdentity"24@"NSError"32@"IDSMessageContext"40
v56@0:8@"IDSConnection"16@"NSString"24@"NSString"32@"NSString"40@"IDSMessageContext"48
v40@0:8@"IDSConnection"16@"NSString"24@"IDSMessageContext"32
v48@0:8@"IDSConnection"16@"IDSProtobuf"24@"NSString"32@"IDSMessageContext"40
v28@0:8@"IDSConnection"16B24
v32@0:8@"IDSConnection"16@"NSArray"24
v52@0:8@"IDSConnection"16@"NSString"24B32@"NSError"36@"IDSMessageContext"44
v48@0:8@"IDSConnection"16@"NSString"24@"NSString"32@40
v32@0:8@"IDSConnection"16q24
v40@0:8@"IDSConnection"16@"NSDictionary"24@"NSString"32
v40@0:8@"IDSConnection"16@"NSString"24@"NSArray"32
v60@0:8@16@24@32q40@48B56
v60@0:8@"IDSConnection"16@"NSString"24@"NSString"32q40@"NSError"48B56
v68@0:8@"IDSConnection"16@"NSString"24@"NSString"32q40@"NSError"48B56@60
v64@0:8@"IDSConnection"16@"NSString"24@"NSString"32@"NSArray"40@"NSArray"48@"NSDictionary"56
v48@0:8@"IDSConnection"16@"NSDictionary"24@"NSString"32@40
v48@0:8@"IDSConnection"16@"NSString"24@"NSString"32@"NSString"40
v80@0:8@"IDSConnection"16@"IDSAccount"24@"NSString"32@"NSString"40@"NSNumber"48@"NSDictionary"56@"NSData"64@72
v48@0:8@"IDSConnection"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32@"IDSMessageContext"40
v40@0:8@"IDSConnection"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
@?24@0:8@16
v48@0:8@16d24@32@?40
v32@0:8:16S24B28
:24@0:8S16B20
v24@0:8^@16
B80@0:8@16@24@32@40q48@56^@64^@72
B56@0:8@16q24@32^@40@?48
@"IDSAccountController"
@"IDSGroupContextController"
@"IDSQuickSwitchAcknowledgementTracker"
@"CUTDeferredTaskQueue"
@"IDSPseudonym"
v56@0:8@16@24B32B36@40@?48
v60@0:8@16@24B32B36B40@44@?52
v72@0:8@16@24Q32@40@48@56@?64
@52@0:8@16@24@?32@?40B48
@"<IDSGroupSessionKeyValueDeliveryHandler>"
v40@0:8@16I24I28@32
v48@0:8@16I24I28@32@?40
v36@0:8@16I24Q28
@"<IDSXPCGroupSessionKeyValueDelivery>"
@48@0:8q16@24@32@40
@"<IDSInvitationContext>"
@56@0:8@16q24@32@40@48
@"<IDSDestinationProtocol>"
@"<NSSecureCoding>"40@0:8@"NSXPCConnection"16@"NSXPCCoder"24@32
v36@0:8@"NSXPCConnection"16@"NSInvocation"24B32
@36@0:8@16B24@28
@40@0:8@16B24@28B36
@"<NSXPCProxyCreating>"
@48@0:8@16@24d32@?40
@"IDSEndpointCapabilities"
v68@0:8@16@24@32B40B44B48B52B56@?60
B76@0:8@16@24@32B40B44B48B52B56@60@?68
B48@0:8@16@24@32@?40
B52@0:8@16@24B32@36@?44
B60@0:8@16@24@32B40@44@?52
B56@0:8@16@24@32@40@?48
B60@0:8@16@24B32@36@44@?52
B60@0:8@16@24@32@40B48@?52
B72@0:8@16@24Q32@40@48@56@?64
q40@0:8@16@24@32
@"NSObject<OS_xpc_object>"
v24@0:8@?<v@?@"NSDictionary">16
@20@0:8c16
v28@0:8@16c24
q28@0:8Q16c24
Q28@0:8q16c24
v40@0:8r*16I24c28@32
@28@0:8c16@20
v28@0:8c16@20
v20@0:8c16
v36@0:8@16c24@28
^{?=*QqqIBBBBBBBBI{sockaddr_storage=CC[6c]q[112c]}{sockaddr_storage=CC[6c]q[112c]}{sockaddr_storage=CC[6c]q[112c]}SCi[8{?=*Si[12S]qCSCBBS{?=SSSSS}BBi[4S]CBBBI}]ccid[16C]QQ@iI[0C]}62@0:8r^v16I24C28C32{?=cSCSC}36^{?=IQSCc[12S]CS{?=SSSSS}dQBQ[16C]BB}46@54
v70@0:8@16r^v24I32C36C40{?=cSCSC}44^{?=IQSCc[12S]CS{?=SSSSS}dQBQ[16C]BB}54@?62
@20@0:8S16
@24@0:8^{?=*QqqIBBBBBBBBI{sockaddr_storage=CC[6c]q[112c]}{sockaddr_storage=CC[6c]q[112c]}{sockaddr_storage=CC[6c]q[112c]}SCi[8{?=*Si[12S]qCSCBBS{?=SSSSS}BBi[4S]CBBBI}]ccid[16C]QQ@iI[0C]}16
v56@0:8@16Q24@32@40@?48
v64@0:8@16Q24@32@40@48@?56
{?=qqq}16@0:8
@"_IDSDevice"
@68@0:8^{?=[16C][16C]CCCCCCCCSSIISSSSB[16C]C[16c]C}16I24q28@36@44@52@60
c16@0:8
S16@0:8
v20@0:8C16
@"_IDSDataChannelLinkContext"
@"NSObject<OS_nw_context>"
@"NSObject<OS_nw_path_evaluator>"
@"IDSDataChannelLinkContext"
[256@"NSObject<OS_nw_connection>"]
[256@"IDSDataChannelLinkContext"]
@20@0:8i16
v32@0:8c16@20C28
v28@0:8*16S24
v52@0:8@16@24@32B40Q44
v48@0:8r*16Q24^{?=cSCSC}32^{?=IQSCc[12S]CS{?=SSSSS}dQBQ[16C]BB}40
B48@0:8r*16Q24@?32@?40
v46@0:8r*16I24{?=cSCSC}28^{?=IQSCc[12S]CS{?=SSSSS}dQBQ[16C]BB}38
v44@0:8@16I24@?28@?36
v60@0:8r^^v16^I24^{?=cSCSC}32^^{?}40i48@?52
^{?=*QqqIBBBBBBBBI{sockaddr_storage=CC[6c]q[112c]}{sockaddr_storage=CC[6c]q[112c]}{sockaddr_storage=CC[6c]q[112c]}SCi[8{?=*Si[12S]qCSCBBS{?=SSSSS}BBi[4S]CBBBI}]ccid[16C]QQ@iI[0C]}54@0:8r^v16I24C28C32{?=cSCSC}36^{?=IQSCc[12S]CS{?=SSSSS}dQBQ[16C]BB}46
v64@0:8i16r^^v20^I28^{?=cSCSC}36^^{?}44i52@?56
v60@0:8r^^v16^I24^{?=cSCSC}32i40^^{?}44@?52
v54@0:8r^v16I24{?=cSCSC}28^{?=IQSCc[12S]CS{?=SSSSS}dQBQ[16C]BB}38@?46
v46@0:8r^v16I24{?=cSCSC}28@?38
v24@0:8^{?=*QqqIBBBBBBBBI{sockaddr_storage=CC[6c]q[112c]}{sockaddr_storage=CC[6c]q[112c]}{sockaddr_storage=CC[6c]q[112c]}SCi[8{?=*Si[12S]qCSCBBS{?=SSSSS}BBi[4S]CBBBI}]ccid[16C]QQ@iI[0C]}16
^{?=*QqqIBBBBBBBBI{sockaddr_storage=CC[6c]q[112c]}{sockaddr_storage=CC[6c]q[112c]}{sockaddr_storage=CC[6c]q[112c]}SCi[8{?=*Si[12S]qCSCBBS{?=SSSSS}BBi[4S]CBBBI}]ccid[16C]QQ@iI[0C]}20@0:8B16
v24@0:8B16B20
v28@0:8@16C24
v50@0:8{?=cSCSC}16^{?=IQSCc[12S]CS{?=SSSSS}dQBQ[16C]BB}26C34C38^{?=****B}42
@"_IDSDatagramChannel"
@"<IDSXPCConnectionProtocol>"
@"<IDSXPCAdapter>"
@"_IDSDeviceConnection"
v36@0:8B16@20@?28
v32@0:8@"<IDSXPCActivityMonitorClient>"16@"NSString"24
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v36@0:8B16@"NSString"20@?<v@?@"NSError">28
v32@0:8@"NSString"16@?<v@?@"NSArray"@"NSError">24
v40@0:8@"IDSActivityInfo"16@"NSString"24@?<v@?@"NSError">32
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError">32
q44@0:8@16@24B32@36
@"_IDSIDQueryController"
v32@0:8@"NSString"16@?<v@?@"NSSet"@"NSError">24
v36@0:8@"NSArray"16B24@?<v@?@"NSError">28
@68@0:8@16@24q32Q40B48@52@60
@56@0:8@16@24q32@40@48
v48@0:8@"ENGroupContext"16@"_ENGroupInfo"24@"ENGroup"32@?<v@?@"ENGroup"@"NSError">40
v40@0:8@"ENGroupContext"16@"ENGroupID"24@?<v@?@"ENGroup"@"NSError">32
v40@0:8@"ENGroup"16@"ENGroupContext"24@?<v@?@"NSData"@"NSError">32
v40@0:8@"NSData"16@"ENGroupContext"24@?<v@?@"ENGroup"@"NSError">32
q24@0:8@"ENGroupContext"16
v40@0:8@"ENGroupContext"16@"ENGroup"24@?<v@?>32
v40@0:8@"ENGroupContext"16@"ENGroupID"24@?<v@?@"ENGroup">32
v40@0:8@"ENGroupContext"16@"ENStableGroupID"24@?<v@?@"ENGroup">32
v32@0:8@"ENGroupContext"16@?<v@?@"NSArray">24
v32@0:8@"ENGroupContext"16@?<v@?>24
v40@0:8@"ENGroupContext"16@"ENGroupID"24@?<v@?>32
@32@0:8*16^v24
v40@0:8@"<IDSXPCServerMessagingClient>"16@"NSString"24@"NSString"32
v56@0:8@"NSData"16@"NSString"24@"IDSServerMessagingOptions"32@"NSString"40@?<v@?B@"NSError">48
v24@0:8@"IDSCertifiedDeliveryContext"16
@32@0:8@?16@?24
v32@0:8@"<IDSXPCGroupSessionKeyValueDeliveryDelegate>"16@"NSUUID"24
v24@0:8@"NSUUID"16
v48@0:8@"NSData"16I24I28@"NSString"32@?<v@?@"NSError">40
v36@0:8@"NSData"16I24Q28
@"NSTimer"
@"_IDSRealTimeEncryptionProxy"
@"IDSTransactionLogTask"
@"IDSTransactionLogSyncTask"
@"<IDSTransactionLogTaskHandlerDelegate>"
@(#)PROGRAM:IDS  PROJECT:IDS-
.ESf
IDSInternalQueue - assertQueueIsNotCurrent in %s failed {symbols: %@}. The only acceptable callstack includes dealloc.
Instantiating %{public}@ from daemon -- returning nil
%s is deprecated, please use startTrackingPeer:forType:
%s is deprecated, please use stopTrackingPeer:forType:
Exception returned from daemon: %@
  Ensuring connection to daemon (has checked: %@)
  Grabbing remote daemon port (listener ID: %@)
Requesting connectionID %lu usingSync YES
ConnectionID %lu is more recent, ignoring.
Completed connection {connectionID %lu, fatalError %@, relevantConnection: %@, localObject: %@, acquiringDaemonConnection: %@}
  Built object: %@
  Failed to build remote object for listener: %@
Remote Object exists, not creating new remote object
Flushed send queue
Resume at disconnect %p
We're still not connected, kicking off disconnect notification
We're still connected, hiding the disconnect!
  Connecting to idsdaemon system is shutting down: %@  hasBeenSuspended %@
XPC has informed us that a fatal error has occured, we will not be attempting to reconnect any further
connectToDaemonWithLaunch capabilities %d
connectToDaemonWithLaunch calling into _setServices capabilities %d
Already connected... not connecting
_connectToDaemonWithLaunch: %@ services: %@ commands: %@ capabilities: %d
Suspend at connect %p
Resume due to connect completion %p
Tried to connect to IDS daemon but we got no remote object ... handling as if the remote object died.
Resume due to failed connect %p
Sending down new services %@ commands %@ capabilities %d. sendServices %@ sendCommands %@ sendCaps %@
Sending down new services %@ commands %@ capabilities %d
Set services: %@  (Previous: %@)
Set commands: %@  (Previous: %@)
Updating capabilities: %d  (Previous: %d)
IDSInternalQueue - assertQueueIsCurrent in %s failed {symbols: %@}. The only acceptable callstack includes dealloc.
Disconnecting from daemon - no listeners
%s: adding delegate on service %@ _notificationServices %@
Adding listener with ID: %@    services: %@   commands %@
Removing listener with ID: %@    services (count): %@   commands (count): %@   capabilities %@
Tried to remove non existent listener with ID: %@
Set %@: %@  for listener ID: %@
setCapabilities %d for listenerID %@ has no ID
setCapabilities %d for listenerID %@ is not a valid listener
setCapabilities %d for listenerID %@ - listener map already contains our capabilities
Set caps: %d  for listener ID: %@
Request to block until connected
 => Not blocking, already connected
 => Not blocking, shutting down
 => Starting connect
 => No remote object, can't block
Finished blocking for daemon connection
Cleaning up daemonConnectedGroup %p
Cleaning up LOCAL object
Cleaning up REMOTE object
Disconnected from agent (local)...
 ... disconnection from agent (local) being handled by ivarQueue
Disconnected from agent (remote)...
 ... disconnection from agent (remote) being handled by ivarQueue
Will auto reconnect...
 ...auto reconnecting
System application did suspend
System application did enter background
System application did enter foreground
System application did resume
Received call to roll encryption keys
IDSLocalSetupStart
IDSLocalSetupCompleted
IDSLocalSetupStop
IDSLocalSetupUnpair
IDSLocalSetupUnpairStart
IDSAddPairedDevice %@
Asked to pair device with cbuuid: %@
IDSConnectPairedDevice %@
%s %@
%s %@ %p %p
%s is DEPRECATED! Please use IDSGetPairedDevicesWithCompletionBlock
%s is DEPRECATED! Please use IDSInitialLocalSyncStartedForServices
%s is DEPRECATED! Please use IDSInitialLocalSyncCompletedForServices
Local setup - received incoming sync message
%s: invalid device %@
%@ Created
%@ parsing direct messaging state: %llu
%@ direct messaging supported: %d
[%llu %s] Dealloc
%@ Cancel
%@ Invalidate
%@ Updated destination device: %@
%@ connected devices changed %@
%@ peerIsNearby %d peerIsConnected %d changed %d
%@ received direct-messaging metadata %@
%@ direct messaging allowed: %d
%@ connection entered state: %d
%@ Invalid device
%@ direct messaging socket: %d, error: %@
Invalid context
%@ Received context %@
Invalid stream name
we are the originator
%@ Ignoring incoming request as existing request is in progress
Received error: %@
[%llu %s] Ignoring HS Header
[%llu %s] Received Header: v %u t %u l %u
[%llu %s] received ack for seq num %u guid: %@
[%llu %s] message for guid %@ already timed out
[%llu %s] received App-Level ack for: %@
[%llu %s] connection wrote ack for guid: %@(%u)
[%llu %s] connection wrote app-ack for guid: %@(0)
Invalid TLV size for type %d
Message %@ failed to send due to %ld
[%llu %s] Downgrading priority of message with guid %@ to Default from Urgent, client %@ is not configured to send urgent messages
[%llu %s] Client requesting to send message with guid %@ options %@
[%llu %s] Message %@ taking long, retrying
[%llu %s] Replacing guid: %@ with guid: %@
[%llu %s] connection wrote message w/ seq num %u guid %@
[%llu %s] Error! powerAssertionOptions is nil. Cannot get power assertion.
[%llu %s] logConnectionStatisticsInPowerDictionary: %@
malformed tlv received ((%d + %zu + %zu > %lu)
malformed tlv received ((%d + %u > %lu)
Created IDSGroupSessionDataCryptor: %@
encryptData: plaintext larger than GCM can support for topic %@ data.length %lu
encryptData: failed to create CommonCrypto cryptor for topic %@ error %ld
encryptData: failed to set IV for topic %@ error %ld
encryptData: failed to add AAD for topic %@ error %ld
encryptData: failed to encrypt for topic %@ error %ld
encryptData: failed to create auth tag for topic %@ error %ld
encryptData: failed to reset cryptor for topic %@ error %ld
decryptData: insufficient incoming data for topic %@ size %lu
decryptData: unknown keyID for topic %@ keyID %@
decryptData: failed to create cryptor for topic %@ keyID %@ error %ld
decryptData: unknown version for topic %@ keyID %@ version %u
decryptData: failed to set IV for topic %@ keyID %@ error %ld
decryptData: failed to decrypt for topic %@ keyID %@ error %ld
decryptData: failed to verify auth tag for topic %@ keyID %@ error %ld
decryptData: failed to reset cryptor for topic %@ keyID %@ error %ld
Invalidating _IDSGroupSession { self: %p, _internal: %p }
IDSGroupSession method invoked without a valid internal session! { self: %p, _internal: %p }
createAliasForParticipantID created %llu from %llu and %@
createAliasForLocalParticipantIDWithSalt created %llu from %llu and %@
createAliasForLocalParticipantIDWithSalt created and returning %llu
IDS daemon took too long to respond to participantIDForAlias:salt:
manageDesignatedMembers: invalid type: %u
IDSReportiMessageSpam - %@  (toURI: %@)
IDSReportiMessageUnknownSenderWithBlackholeAndJunkStatus - %@, %@, %@, %@, %@  (toURI: %@)
IDSCheckiMessageUnknownSender (toURI: %@ Count: %@)
%@ posting availability change notification (%@) - available: %d
%@ creating monitor for service: %@
%@ adding listener `%@` for service: %@
%@ removing listener `%@` for service: %@
%@ no more listeners for service: %@
%@ no listener matching `%@` for service: %@
Exception: %@ in handler: %@ while executing a block
%@ accountDictionariesForService %@
All accounts after first connection to daemon: %@
%@ enabledAccountsForService %@
All enabledAccounts %@
IDSDaemonListener _removeAccountOnIvarQueue %@ was told of an account without a unique id or service name: %@
IDSDaemonListener accountAdded %@ was told of an account without a unique id or service name: %@
%s: %@
IDSDaemonListener accountRemoved %@ was told of an account without a unique id or service name: %@
IDSDaemonListener accountEnabled was told of an account without a unique id %@ or service %@
Incoming account enabled: %@
IDSDaemonListener accountDisabled was told of an account without a unique id %@ or service %@
Incoming account disabled: %@
Account info changed %@
IDSDaemonListener accountInfoChanged %@ was told of an account without a unique id or service name: %@
Found active device in dependent devices update, updating activeDevice ID to %@ for %@
Dependent devices updated, setting %@ to (isActive: %@)
Current devices for account %@: %@
Found existing local device, removing %@
Local device added %@, we'll trigger didSwitchActivePairedDevice callback since we already have an active device %@
Local device added %@, we'll trigger didSwitchActivePairedDevice callback since we already had a locally paired device
Local device added, updating activeDevice ID to %@
New devices for account %@: %@
Active device was removed, clearing active uniqueID %@
Tinker device added %@, we'll trigger didSwitchActivePairedDevice callback since we already have an active device %@
Tinker device added %@, we'll trigger didSwitchActivePairedDevice callback since we already had a locally paired device
Tinker device added, updating activeDevice ID to %@
Found active device in tinker device update, updating activeDevice ID to %@ for %@
Tinker device updated, setting %@ to (isActive: %@)
tinkerDeviceAdded %@
tinkerDeviceRemoved %@
tinkerDeviceUpdated %@
familyInfoUpdated %@
Family Info was nil %@
ID status not valid for %@
Refresh registration for account %@
No device ID: can't update nsuuid. Bailing...
Checking for updates for device with new nsuuid { nsuuid: %@, device: %@}
No account with device %@ and mismatched nsuuid were found.  No updates made
Did get identities {identities: %@, error: %@}
Calling didSwitch for topic %@
DidSwitch callback for %@ (handler %@) was handled %@
Unhandled didSwitch callback for topic %@
Updating isActive state for all accounts %@
New active unique ID is nil
Account unique ID is nil, can't switch active device ID
Switching active device to %@ for service %@
Current linked devices for service %@: %@
New linked devices for service %@: %@
Active paired device switched, updating activeDevice ID to %@
Switching active device to %@ for account %@
Unsetting active device unique ID due to quick switch or new pairing start
Setup complete with info
Deferred setup on ivar queue, got accounts %@
Services all disappeared, removing all accounts
Deferred setup on ivar queue, got enabled accounts %@
Notified account enabled %@ for service %@
Enabled accounts all disappeared, removing all enabled accounts
Deferred setup on ivar queue, got %lu dependent devices
Dependent devices all disappeared, removing all dependent devices
Deferred setup on ivar queue, got %lu linked devices
Dealing with family members
Device identifier from daemon: %@
Active device uniqueID from daemon: %@ account map %@ service map %@
Direct messaging peer identifier: %@
Setup info is not complete, waiting...
Connection is not complete, waiting...
Connection complete, notifying
Connection complete
XPC object received %@:%@
Exception: %@ in handler: %@ while executing: %@
Device identifier changing from %@ to %@
Unnecessary invocation of deviceIdentifierDidChange:
Setting up delegate %p
Sending the real-time media prekey of this device to the group %@
the delegate object %@ doesn't respond to the selector didReceivePublickeys:
the delegate object %@ doesn't respond to the selector didReceiveMasterKeyMaterials:
unknown object type %@
Expiration dates in the past are not allowed: %@
Creaating new activity monitor with activity %@ service identifier %@
Adding delegate %@ to activity monitor %@
IDSActivity is not allowed for non-tvOS devices.
Stopping broadcast with subActivity %@
Getting listening status for self: %@
Error checking for isListening {xpcError: %@}
Set listening for updates %d on self %@
Error setting isListening {xpcError: %@}
Subscription completion handler called, subscriptions: %@ error %@
Error getting current subscriptions {xpcError: %@}
setupInvitationsForService: Fetched pending invitations from daemon: %@
setupInvitationsForService: Fetched received invitations from daemon: %@
setupInvitationsForService: Failed to unarchive pending invitation {%@} with error {%@}
setupInvitationsForService: Failed to unarchive received invitation {%@} with error {%@}
validateStrictDecodingForSentInvitation: Failed to validate strict decoding for invitation with error {%@}
sendInvitationToDestination: received %@ from IDSService with error {%@}
sendInvitationToDestination: Invitation {%@} not added to pendingInvitations. Calling serverAcknowledgedBlock
cancelInvitation: received %@ from IDSService with error {%@}
cancelInvitation: Invitation {%@} not removed from pendingInvitations. Calling serverAcknowledgedBlock
acceptInvitation: received %@ from IDSService with error {%@}
acceptInvitation: Invitation {%@} not removed from receivedInvitations. Calling serverAcknowledgedBlock
declineInvitation: received %@ from IDSService with error {%@}
declineInvitation: Invitation {%@} not removed from receivedInvitations. Calling serverAcknowledgedBlock
Validating Invitation: Null invitation, dropping
Validating Invitation: Expiry date has passed {%@}
Validating Invitation: There is no stored invitation with unique id {%@}
Validating Invitation: Stored invitation's sender mergeId {%@} is invalid. Could not compare to received invitation's sender mergeId {%@}
Validating Invitation: Sender mergeId {%@} does not match stored invitation's sender mergeId {%@}
Validating Invitation: Sender merge ID for received invitation {%@} does not match the stored invitation {%@}
IncomingInvitation: Invitation state %ld. Delivered {%@} to delegate incomingInvitation
IncomingInvitation: No delegate found for manager:incomingInvitation:
IncomingInvitation: Invitation state %ld. Delivered {%@} to delegate senderDidCancelInvitation
IncomingInvitation: No delegate found for manager:senderDidCancelInvitation:
IncomingInvitation: Invalid Invitaion state %ld. Not delivered {%@} to delegate
IncomingInvitationUpdate: Invitation state %ld. Delivered {%@} to delegate receiverDidAcceptInvitation
IncomingInvitationUpdate: No delegate found for manager:receiverDidAcceptInvitation:
IncomingInvitationUpdate: Invitation state %ld. Delivered {%@} to delegate receiverDidDeclineInvitation
IncomingInvitationUpdate: No delegate found for manager:receiverDidDeclineInvitation:
IncomingInvitationUpdate: Invalid Invitaion state %ld. Not delivered {%@} to delegate
InvitationManager didSendWithSuccess: Identifier {%@}. didSendWithSuccess {%@} with error %@
InvitationManager didSendWithSuccess: No invitation found with identifier {%@}
InvitationManager didSendWithSuccess: Calling block for invitation with identifier {%@} and state {%ld}
InvitationManager didSendWithSuccess: No invitation ack block found with identifier {%@}
Client initialized IDSServerMessagingController with topic: %@ uuid: %@
XPC interruption for client %@
Setting up xpc for client %@
Error fetching server messaging collaborator {error: %@}
Failing message due to xpc interruption {guid: %@, error: %@}
Calling out to client completion { guid: %@, success: %@, error: %@ }
Client added delegate to listen for incoming messages from server { uuid: %@, delegate count: %lu }
Client requested send { clientUUID: %@, guid: %@, options: %@ }
Client requested certified delivery receipt { clientUUID: %@, guid: %@, context: %@ }
Client received incoming data { clientUUID: %@, guid: %@, context: %@ }
No delegates found to handle incoming server message { guid: %@ }
Forwarding server message to delegate { guid: %@, delegate: %p }
Did receive registration identity update {delegates: %{public}@}
IDSSignInController init {self: %p}
IDSSignInController dealloc {self: %p}
Setting delegate {service: %@, delegate: %p, status: %@}
Removing delegate {service: %@}
%s called with nil completion - returning
Enable user on service {userType: %llu, service: %@}
Already enabled
Enabling apple id - starting machine
Enabling phone number - completed
No matching account {error: %@}
Disable user on service {userType: %llu, service: %@}
Already disabled
No account found -- completing {userType: %llu, service: %@}
Checking user statuses {service: %@}
Finished checking user statuses {status: %@, service: %@}
Provided credential {credential: %p, user: %@, service: %@}
Invalid params {error: %@}
Set for account password {username: %@, error: %@}
Sign in user {user: %@, service: %@, shouldWait: %@}
Sign in user with provided credential {user: %@, credential: %p, service: %@}
Sign out service {service: %@}
Calling sign in controller's client completion block {completion: %@, error: %@}
Initialized state machine {self: %p, accountID: %@, serviceName: %@, state: %@, completion: %@}
Schedule validation after {self: %p, delay: %@, accountID: %@, allowFuzz: %@, signOut: %@}
Periodic validation fired {delay: %f, allowFuzz: %@, signOut: %@}
No description to validate {accountID: %@}
Validating state {stateNumber: %@, account: %@}
Completed {errorCode: %llu, account: %@}
No account to validate {accountID: %@, description: %@}
Re-enable, looks like things didn't progress
Transitioning to registering
Validating delegate state {changes: %@, current: %@, cached: %@}
Added interesting account {account: %@}
Account disabled {account: %@}
Account removed {account: %@}
Account updated {account: %@}
IDSSession dealloced
Received invalid options %@, bailing
Received IDQueryCompletedWithFromURI %@ idStatusUpdates %@ service %@ success %@ error %@
Updated local cache to %@
Notifying delegate %@ about ID status update
addListener:forService:
ListenerID is empty, bailing...
Service name is empty, bailing...
%@ -> %@
Final map after add %@
removeListenerID:forService:
Final map after remove %@
%s  (simulatorDeviceID: %@)
Failed to soft link IDSSimulatorLocalPairingAddPairedDevice
Failed to soft link IDSSimulatorLocalPairingDeletePairedDevice
Failed to soft link IDSSimulatorLocalPairingSwitchActivePairedDevice
IDSFirewall - assert valid queue failed in %s
IDSFirewall populateImpactedServices for service %@
Error fetching firewall collaborator {error: %@}
IDSFirewall update for service %@ donateEntries %@
IDSFirewall update for service %@ removeDonatedEntries %@
IDSFirewall update for service %@ removeEntries %@
IDSFirewall update for service %@ replaceDonatedEntriesWithEntries %@
IDSFirewall update for service %@ replaceAllEntriesWithEntries %@
IDSFirewall currentEntries for service %@
IDSFirewall update for service %@ removeAllDonatedEntries
IDSFirewall update for service %@ removeAllEntries
IDSFirewall recentlyBlockedEntries for service %@
IDSGroupEncryptionKeyMaterialCache
IDSGroupEncryptionKeyMaterialCache received key %@
IDSGroupEncryptionKeyMaterialCache invalidateKeyMaterialByKeyIndexes %@
IDSGroupEncryptionKeyMaterialCache enumerating keyID %@, locally generated:%@, generation counter:%u
Process does not have sandbox permission to access IDS mach port -- connection will fail! {portName: %@}
 => Found response with %d keys
Daemon didn't grant connection
Received Connection Invalid
Received Connection Interrupted
Failed IDSDaemonRequestConnection, no reply
There are currently no family handles on service. Failing message, will try to fetch members.
Handle: %@ is not in family.
Service received %@ familyInfoUpdated
Creating IDSGroupSessionUnicastParameter with local id %@ and remote id %@
%s: received new traffic classifiers %@
Cannot save invalid device info: %@
Received paired device info, sending to daemon for saving
Cannot delete empty CBUUID {cbuuid: %{private}@}
%s: device CBUUID: %@
%s: Empty completion block/queue
Querying local device info from IDSD asynchronously
XPC Connection Error - Failed to get localDeviceInfo {error: %{public}@}
Received local device info from daemon, device: %@
getLocalDeviceInfoFailed {error: %{public}@}
Querying paired device info from IDSD asynchronously
XPC Connection error - Failed to get pairedDeviceInfo {error: %{public}@}
Received paired device info from daemon, device: %@
getPairedDeviceInfo error {error: %{public}@}
Received pairing removed notification from daemon, device: %@, deleted: %@
Invoking pairingDelete completion block
XPC Connection error - Failed to constuct RA response dictionary {error: %{public}@}
Failed to create IDSAuthenticationSigningResult due to a mismatch between subscription identifiers and authentication certificates! {subscriptionIdentifiers: %@, authenticationCertificates: %@}
Client requested authenticate phone on an unsupported platform -- failing request {clientError: %@}
Client request to authenticate phone {uuid: %@}
Client requested phone authentication signature on an unsupported platform -- failing request {clientError: %@}
Client request to generate phone authentication signature over data {uuid: %@}
Client requested carrier token on an unsupported platform -- failing request {clientError: %@}
Client request for carrier token {uuid: %@}
Received authenticate phone response from daemon {uuid: %@, phoneCertificateData: %@, handler: %@, completion: %@, clientError: %@}
Received phone authentication signature response from daemon {uuid: %@, signature: %@, signingResult: %@, handler: %@, completion: %@, clientError: %@}
Received carrier token response from daemon {uuid: %@, carrierToken: %@, handler: %@, completion: %@, clientError: %@}
Timed out phone authentication signature request -- calling completion block with timeout error {completionBlock: %@}
Timed out phone authentication certificate request -- calling completion block with timeout error {completionBlock: %@}
Timed out phone carrier token operation -- calling completion block with timeout error {completionBlock: %@}
Client requested to set current phone user subscription source on an unsupported platform -- failing request {clientError: %@}
Client request to set current phone subscription source {uuid: %@}
Client requested current phone user subscription source on an unsupported platform -- failing request {clientError: %@}
Client request for current phone subscription source {uuid: %@}
Failed to weak link FTSelectedPNRSubscription from FTServices for synchronous fetch of phone user subscription source
Unable to determine selected phone user subscription source synchronously {subscriptionSource: %ld, selectedContext: %@, subscriptionError: %@}
Returning current phone user subscription source synchronously {subscriptionSource: %ld, clientError: %@}
Timed out phone subscription source operation -- calling completion block with timeout error {completionBlock: %@}
Received response after setting current phone user subscription from daemon {uuid: %@, subscriptionSource: %@, handler: %@, completion: %@, clientError: %@}
Received current phone user subscription response from daemon {uuid: %@, subscriptionSource: %@, handler: %@, completion: %@, clientError: %@}
Alloc'ing IDSXPCConnectionRemoteObjectPromise {pointer: %p}
Dealloc'ing IDSXPCConnectionRemoteObjectPromise {target: %{public}@, pointer: %p}
Failing xpc connection promise {pendingInvocations: %{public}@, error: %{public}@}
Failing xpcRemoteObjectPromise with no pending invocations {error: %{public}@}
Found existing IDSAccountController %@ for service %@
Tried to create IDSAccountController with empty service, ignoring...
Couldn't find existing IDSAccountController adding new one %@
    %@ -> %p
Deallocing IDSAccountController %@
%p will be removed from account controller map automatically
* Request to setup account with aliases: %@ and parameters:
  => password : REDACTED
  => %@ : %@
* Request to add account: %@   service: %@
* Request to remove account: %@   service: %@
* Request to enable account: %@   service: %@
* Request to disable account: %@   service: %@
Initializing _IDSGroupSession { self: %p, uniqueID: %@, instanceID: %@ }
Conference server at: %s:%d
No conference server support, cannot connect to server at %s:%d
_fromID: %@, _isLightweightParticipant: %@, _destinationsLightweightStatus: %@
Invalidating _IDSGroupSession { self: %p, uniqueID: %@, instanceID: %@ }
Deallocating _IDSGroupSession { self: %p, uniqueID: %@, instanceID: %@ }
_IDSGroupSession was deallocated without being invalidated -- this may indicate an orphaned daemon session! { self: %p, uniqueID: %@, instanceID: %@ }
Disconnected from daemon, notifying client of groupSession %@
Empty unique ID
Empty instance ID
Empty account ID
Setting up session delegate %p
lightweightStatusDict: %@, _destinationLightweightStatus: %@
updateMembers messagingCapabilities called
REQUIRED_ATTRIBUTE - Warning, missing %@ to add to %s
currentURL: %@, _isLightweightParticipant: %@
updateParticipantType: invalid _fromID
updateParticipantType to %u, _destinationsLightweightStatus: %@
updateParticipantType: triggered remotely: lightweightStatusDict: %@, _destinationLightweightStatus: %@
Cannot join a session that is already ended, ignoring...
joinWithOptions called %@
%s:%d %{private}@
Cannot join a session without the participant data information.
cfs_client_send_join_request, _cfs_requestID: %d, clientID: %llu, groupID: %s, data: %@, result: %d
cfs_client_send_leave_request, result: %d
requestURIsForParticipantIDs: request has no participants.
GroupSession is invalidated.
requestURIsForParticipantIDs {id:%@, participant count:%lu, total requests :%lu}
No local key material found. Skip completion handler udpate.
No completion handlers detected inside _dataCryptorRequests.
Updating %lu completion handlers in _dataCryptorRequests
requestDataCryptorForTopic: topic is empty!
createSessionIDAliasWithSalt(async) created %@ from %@ and %@
createAliasForParticipantID(async) created %llu from %llu and %@
createAliasForLocalParticipantIDWithSalt(async) created %llu from %llu and %@
getParticipantIDForAlias(async) added %@ to %@
Session %@ received report
Ignoring didReceiveReport, session doesn't match %@ vs. %@
Ignoring group session termination, session doesn't match %@ vs. %@
Group session %@ was terminated
Group session ended %@ with reason %d error %@
Ignoring group session ended, session doesn't match %@ vs. %@
Did join group session %@
Ignoring sessionDidJoinGroup {self:%p, _uniqueID:%@, identifier:%@}
Did join group session %@, participantUpdate %@
Received localParticipantID: %llu
Did leave group session %@
Ignoring sessionDidLeaveGroup {self:%p, _uniqueID:%@, identifier:%@}
ParticipantDidJoin group session %@, participantInfo %@
Ignoring participantDidJoinGroupWithInfo {self:%p, _uniqueID:%@, identifier:%@}
ParticipantDidLeave group session %@, participantInfo %@
Ignoring participantDidLeaveGroupWithInfo {self:%p, _uniqueID:%@, identifier:%@}
Ignoring didReceiveActiveParticipants {self:%p, _uniqueID:%@, identifier:%@}
didReceiveActiveParticipants: count %lu for group session: %@
Ignoring didReceiveActiveLightweightParticipants {self:%p, _uniqueID:%@, identifier:%@}
didReceiveActiveLightweightParticipants: count %lu for group session: %@
didRegisterPluginAllocationInfo for session: %@, sessionInfo: %@
Ignoring didRegisterPluginAllocationInfo {self:%p, _uniqueID:%@, identifier:%@}
didUnregisterPluginAllocationInfo for session: %@, sessionInfo: %@
Ignoring didUnregisterPluginAllocationInfo {self:%p, _uniqueID:%@, identifier:%@}
Ignoring group session didReceiveBlockedParticipantIDs, session doesn't match %@ vs. %@
Group session %@ code: %u, type: %u, isTruncated: %@, didReceiveBlockedParticipantIDs: %@
Ignoring group session didReceiveQueryBlockedParticipantIDs, session doesn't match %@ vs. %@
Group session %@ code: %u, isTruncated: %@, didReceiveQueryBlockedParticipantIDs: %@
Ignoring group session didRemoveParticipantIDs, session doesn't match %@ vs. %@
Group session %@ code: %u, isTruncated: %@, didRemoveParticipantIDs: %@
Ignoring group session didReceiveKeyMaterial {self:%p, _uniqueID:%@, identifier:%@}
Can't store key material for session %@
Group session %@ didReceiveKeyMaterial SKM: %@
shouldInvalidateKeyMaterialByKeyIndexes for session %@, expiredKeyIndexes: %@
Ignoring group session shouldInvalidateKeyMaterialByKeyIndexes, session doesn't match %@ vs. %@
Ignoring sessionDidReceiveParticipantUpgrade, session doesn't match %@ vs. %@
sessionDidReceiveParticipantUpgrade %@, type: %u, error: %@
sessionDidReceiveParticipantUpgrade %@, change _isLightweightParticipant to %@
Ignoring group session didReceiveParticipantIDs:withCode:managementType:, session doesn't match %@ vs. %@
Group session %@ code: %u, type: %u, didReceiveParticipantIDs: %@
Ignoring group session didReceiveURIsForParticipantIDs:, session doesn't match %@ vs. %@
Group session %@ didReceiveURIsForParticipantIDs: count:%lu
Ignoring group session participantUpdated, session doesn't match %@ vs. %@
participantUpdatedForSession %@
hasOutdatedSKI %@
didCreateParticipantIDAlias %llu salt %@ participantID %llu
didReceiveParticipantID %llu salt %@ participantIDAlias %llu
Ignoring group session didReceiveDataBlob, session doesn't match %@ vs. %@
session %@ participant: %@, didReceiveDataBlob: %@
Ignoring group session didReceiveData:dataType:forParticipant, session doesn't match %@ vs. %@
session %@ participant: %@, type: %u, didReceiveData: %@
Ignoring group session didReceiveServerErrorCode, session doesn't match %@ vs. %@
session %@ didReceiveServerErrorCode: %u
xpc object: [%@] context: [%@]
Ignoring socket, session doesn't match %@ vs. %@
Received XPC Response Error: %@
Request type %d failed with error code %d, make sure to set the participant info.
No conference server support, lost connection to server!
Request type %d succeeded
REPLY_TYPE_JOIN_REPLY
cfs_client left group session
Number of clients broadcasted: %u
REPLY_TYPE_JOIN_NOTIFICATION
Client %u left
REPLY_TYPE_BROADCAST_NOTIFICATION
Unknown reply type: %d
process_cfs_client_blob_set: client count: %u
process_cfs_client_blob: clientid: %llu, datasz: %u
Fetching groups from groupIDs {groupIDs.count: %ld}
Failed to fetch groups {error: %{public}@, groupIDs: %{private}@}
Fetched groups with success {groups.count: %ld}
Fetch groupds {groups: %{private}@}
Fetching transport log messages
Fetched messages from transport log
Account identity for task handler - failed to get content - fail {error: %{public}@}
Registration identities updated - clearing client cache
Group Context Created %@
Faied to get address in FixedQuickRelayServerAddress defaults
Decoded relay-server-address %@:%u
Decoded base64 relay-session-id %@
Decoded base64 relay-session-token %@
Decoded base64 relay-session-key %@
Using preallocated tokens from user defaults
Missing a defaults for hardcoded QR session info
_IDSConnection - initing {self: %p, account.serviceName: %@}
Account delegate has been cleaned up via weak references %p
setCapabilities %u  %@, result = %@
!setState guid=%@
sendMessage - Inspecting message {%@} payload for security issues
Downgrading priority of message with GUID %@ to Default from Urgent, The client %@ is not configured to send urgent messages
Downgrading waking status of message with GUID %@ to non-waking, the client %@ is not configured to send waking messages.  Total messages downgraded: %u
Invalid %@ value was given! {given: %@}
Client %@ is forcing QR for Cloud Message with GUID %@
QueueOneIdentifier not a string! [%@]
callstack %@
OUTGOING-CLIENT_REQUEST:%@ SERVICE:%@
Client request to send %@ on service: %{public}@   guid: %{public}@   to destinations: %@   options: %@    size: %d] (%lu pending)
5 {curProtocol: %hhu, prevProtocol: %hhu, prevBundleID: %@, curUUID: %{public,uuid_t}.16P, curPktLen: %u, logSeqn: %hhu}
sendPayload - could not find account uniqueID! self: %@ account: %@
%@ unable to plist-serialize dictionary %@ !!
Client request to send %{public}@ message (dictionary) service: %{public}@  to destinations: %@   options: %@]
sendPayload - could not plist serialize dictionary.
sendInvitation - preparing to send invitation : %@
sendInvitation - invitation payload for id {%@}: %@
sendInvitation - could not find account uniqueID! self: %@ account: %@
sendInvitationUpdate - preparing to send invitation : %@
sendInvitationUpdate - invitation payload for id {%@}: %@
sendInvitationUpdate - could not find account uniqueID! self: %@ account: %@
%@ asked to send server message %@ with command %@ - invalid value!
incomingAppLevelAckFromDirectConnection: %@ guid %@
incomingAckFromDirectConnection: %@ guid %@
incomingDataFromDirectConnection: %@ guid %@
incomingMessageFromDirectConnection: %@
incomingProtobufFromDirectConnection: %@
incomingGUIDAckFromDirectConnection: %@/%@
%@ not connecting to identityservicesd - no serviceName for account %@
Failed to connect to identityservicesd; %@ %@
%@ resending %@ alternate %@ due to daemon disconnection.
OUTGOING-UPDATE:%@ CODE:%ld LASTCALL:%@
%@ outgoing message guid response: %{public}@  callbackID: %@  response code: %ld   error: %{public}@  WiProx error: Error Domain=%{public}@ Code=%{public}@ %{public}@  lastCall: %@
%@ outgoing message guid response: %{public}@  callbackID: %@  response code: %ld   error: %{public}@   lastCall: %@  endpointState: %ld
Server Timestamp for UpdatedWithResponseCode? { serverReceivedTime: %@, serverTimestamp: %@}
IDS sending success is NO though error is unset
  => <%@:%p> finished handling message guid: %@  (connection:messageIdentifier:alternateCallbackID:updatedWithResponseCode:error:lastCall:)
  => <%@:%p> finished handling message guid: %@  (connection:identifier:didSendWithSuccess:error:context:)
%@ identifier %@ callbackID %@ willSendToDests count %@ skipped count %@  map count %@
  => <%@:%p> finished handling message guid: %@  (connection:identifier:alternateCallbackID:willSendToDestinations:skippedDestinations:registrationPropertyToDestinations:)
%@ received app-level ack with identifier %@ context %@
Recieved did send opportunistic data {connection: %@, identifier: %@, accountID: %@, toIDs: %@}
_IDSConnection incoming topic for another connection {self: %p, type: %@, topic: %@, self.topic: %@}
_IDSConnection incoming handle for another connection {self: %p, type: %@, localURI: %@, self.aliases: %@, account.uuid: %@, self.pseudonyms: %@}
Ignoring %@, account is not configured: %@    isActive: %@  isRegistered: %@  isLocal: %@  serviceIdentifier: %@  registrationStatus: %ld  registrationCert: %@
Ignoring %@ for topic %@ because fromID %@ is a suppressed IDSDevice.
Connection recieved message
%@ received message: %@  topic %@  from: %@  to: %@  payload items: %d
INCOMING-CLIENT_MESSAGE:%@ SERVICE:%@
9 {curProtocol: %hhu, nextProtocol: %hhu, curUUID: %{public,uuid_t}.16P, curPktLen: %u, logSeqn: %hhu}
Warning! Message with guid %@ exceeds size limitations of MPKL_UUID_NEXT macro.
%@ received data: %@ topic %@  from: %@  to: %@
INCOMING-CLIENT_DATA:%@ SERVICE:%@
%@ received Engram Dict: %@ topic %@  from: %@  to: %@
Accessory data commands are only supported on AppleID accounts, This one is not for me.
%@ received Accessory data: %@ topic %@  from: %@  to: %@
%@ received Accessory Report Message: %@ topic %@  from: %@  to: %@
incomingInvitation - received incoming invitation message : %@
incomingInvitationUpdate - received incoming invitation message : %@
INCOMING-CLIENT_PROTOBUF:%@ SERVICE:%@
Client received protobuf from daemon %@ for topic: %@  messageID: %@  fromID: %@
 => Handed protobuf ID %@ to delegate: %@
Ack'ing message %@ to daemon that client got it
Received context: %@
Recipient topic: %@
Ignoring for: %@
Client received notification that cache was flushed { service: %@, remoteURI: %@, fromURI: %@, guid: %@ }
INCOMING-CLIENT_PENDING:%@ SERVICE:%@
Client received pending incoming message from daemon %@ for topic: %@  messageID: %@  fromID: %@
Received incoming invitation %@ forTopic %@ sessionID %@ toIdentifier %@ fromID %@ transportType %@
Received incoming group session participant update forTopic %@
Received incoming group session participant data update forTopic %@
Incoming Group Share
Incoming Registered Identities
checkTransportLog {reason: %ld}
Failed type check! {key: %@, class: %@}
Client has set export object %@
Invalidation Handled
Interruption Handled
%@ %s  (serviceDelegate: %@)
%@ %s  (delegateIdentifier: %@)
%@ %s
Unacknowledged IDSServiceDelegate objects: %@
Warning! No write completion handler to invoke.
%s (%s: %@)   (%s: %p)   (%s: %p)
%s (%s: %@)   (%s: %@)   (%s: %p)   (%s: %p)
%s (%s: %p)   (%s: %p)
Failed to get pairing records {error: %{public}@}
Failed to get pairing collaborator {error: %{public}@}
About to call local pairing completion block { block: %p, error: %@ }
Calling local pairing completion block %p
_IDSDeviceConnection was created without an IDSDevice %@ or service %@
<%p> The client passed the smaller timeout %@ than the default value. IDSDeviceConnection will use the default value.
<%p> Init connection socket %d with options: %@  device: %@  (%@)  (name %@) service %@ connectionUUID %@ timeout %@
<%p> _IDSDeviceConnection has timed out waiting for a socket.
<%p> Updating stream pair: %@:%@
<%p> Updated socket traffic class: %d
<%p> Closing socket: %d (name %@)
<%p> Closing socket: skipped, a new connection for this %@
<%p> World, id[%@] !=? id[%@]
<%p> xpc object: [%@] context: [%@]
Received XPC Response/Socket: %d    Error: %@
Received XPC Response/Socket: %d
<%p> Opened socket: %d (Success: %@ ) %@ (%@)
Open socket request already timed out, closing %d.
Daemon died, closing socket: %d
IDSAccountController created with service %@ serviceToken %@
Adding listener with ID %@ topics %@
Daemon disconnected, we'll need to reload accounts for service: %@
Updating delegates of account changes
Re-loading cached accounts for service: %@ with dictionaries %@
Account loaded was of unknown account type %d, ignoring...
Old account set %@
New account set %@
New enabled accounts set %@
Requesting setup of account: %@   service: %@  transaction: %@  accountConfig: %@
We have a real account registered, hiding local account
We don't have a real account registered, adding and enabling local account
Client request to enable account ID: %@
Client request to disable account ID: %@
Account added was of unknown account type %d, bailing...
**** Account added has no uniqueID **** %@
Received account removed %@ for topic %@
Did not find an existing account to remove with unique ID %@
**** Account removed has no uniqueID **** %@
Received account updated %@ for topic %@
Did not find an existing account to update with unique ID %@, creating one
Account updated was of unknown account type %d, ignoring...
**** Account updated has no uniqueID **** %@
Received accounts changed %@ for topic %@  service: %@  (Cached: %@)
No uniqueID for account %@, ignoring...
Did not find an existing account to update with unique ID %@
Account changed was of unknown account type %d, ignoring...
Could not create IDSAccount with info %@
Original accounts %@
Accounts Modified %@
Removing accounts %@
Setup complete - no transaction ID, bailing...
SetupCompleteForAccount %@ transactionID %@ setupError %@
Setup handler block %p for transactionID %@
Account setup completed but we don't have an account, ignoring...
Setup completed for account %@ isActive %@ setupError %@
Account enabled - no unique ID, bailing...
Account enabled - no service, bailing...
Received account enabled %@ on service %@
Adding enabled account %@
Did not find an existing account to enable with unique ID %@
Account disabled - no unique ID, bailing...
Account disabled - no service, bailing...
Received account disabled %@ on service %@
Removing enabled account %@
Did not find an existing account to disable with unique ID %@
Hard deregistering, %@
Triggering final deregister, %@
Clearing IDS state
Alloc'ing IDSXPCDaemonController {pointer: %p}
IDSXPCDaemonController connection interrupted -- Dropping collaborators {collaborators: %{public}@, pointer: %p}
Dealloc'ing IDSXPCDaemonController {pointer: %p}
Activating daemon controller
Get collaborator {identifier: %{public}@, timeout: %f}
Creating collaborator promise {identifier: %{public}@}
Got collaborator {identifier: %{public}@, proxy: %{public}@}
Failed to get collaborator {identifier: %{public}@, error: %{public}@}
Get sync collaborator
Failed to get data for publicIdentity {dataProtectionClass: %{public}@, error: %{public}@}
Failed to get data for fullIdentity {dataProtectionClass: %{public}@, error: %{public}@}
Error fetching key transparency collaborator {error: %@}
%s called with nil completion -- returning
%s called with nil KT application -- returning
Fetching KT eligibility with completion {application: %@}
Updating IDS Server with KT Opt in Info {optInInfo: %@}
Creating new IDSAccount %p with config %@ uniqueID %@ serviceName %@
Created new IDSAccount %p with loginID %@ uniqueID %@ serviceName %@
Framework register account
Client requesting to register account: %@
Framework unregister account
Client requesting to unregister account: %@
Framework force remove account
Client requesting to force remove account: %@
Framework reregister account
Client requesting to reregister (with reidentify %@) account: %@
Framework deactivate account
Client requesting to deactivate and purge identify account: %@
iCloud sign in hack with userName %@ password %@
iCloud sign out hack
Kicking get dependent
Client request for IDSCopyLocalDeviceUniqueID: %@
createDataBlobFrom: encoded %@
Exception handling _strictlyUnarchivedObjectOfClasses: %@
extractDictionaryFromDataBlobFrom: decoded %@
requestNWConnectionWithDataBlob: decoded participantIDAlias %llu from %@
Tried to create an account with empty service name, bailing...
Tried to create an account with unknown account type %d, bailing...
No account type specified, setting to Apple ID
New account info %@ for %@
Account setting regionID {regionID: %@, account: %@}
Account setting regionBasePhoneNumber {regionBasePhoneNumber: %@, account: %@}
Adding IDSDevice %@
Devices updated %d
Devices before %@
Devices after %@
Local account, ignoring request for keychain registration
Registered URIs for %@ with service type %@ account type %d
Registration cert for %@ with service type %@ account type %d
Push token for %@ with service type %@ account type %d
%@ not connecting to identityservicesd - no serviceName for config %@
Account %@ received registration status changed: %@
Account %@ received aliases changed: %@
Account received %@ vetted aliases changed
Account received %@ profile changed: %@
Account %@ received login changed: %@
Account received %@ displayName changed: %@
Account %@ received pseudonyms changed: %@
Account received %@ dependentDevicesUpdated %@
Account received %@ dependentDevicesUpdatedUponReconnect (devices count: %@)
Account received %@ localDeviceAdded %@
Devices updated %@
Account received %@ localDeviceRemoved %@
Account %@ received request to refresh registration
Cannot force remove an account that is not a temporary phone account: %@
Call made to deprecated IDSService API with service domain %{public}@
Called unimplemented function, please remove calls to %s
Unable to retrieve firewall, invalid service identifier -- failing {self: %@}
iCloud sign in with userName %@ authToken %@ password %@ accountInfo %@ status %@ and handles %@
iCloud sign out
iCloud update for userName %@ accountInfo %@
iCloud modify for userName %@
iTunes sign in with userName %@ authToken %@ password %@ accountInfo %@ status %@ and handles %@
iTunes sign out
GameCenter sign in with userName %@ authToken %@ password %@ accountInfo %@ status %@ and handles %@
GameCenter sign out
GameCenter modify for userName %@
IDS update user { oldUserName: %@, newUserName: %@ }
Instantiating %{public}@ from daemon -- returning
_IDSService - serviceWithIdentifier finished {serviceObject: %p}
Framework init with service, commands
_IDSService - initing {self: %p, service: %@, commands: %@, manualAck: %@}
No definition found for service: %@. IDSService cannot be created!
Framework init with service commands
_IDSService - deallocing {self: %p, serviceName: %@}
_IDSService - added delegate {self: %p, serviceName %@, listenerCaps %@, delegates: %lu, wantsPseudonymUpdates: %@}
_IDSService - removed delegate {self: %p, serviceName %@, delegate: %p}
Framework Daemon Connected
%@: OTRTestCallback: token is %@, setupTime is %.6f, error==nil is %d
%@ Switched active paired device for service name %@. deviceUniqueID: %@
Ignoring didSwitch callback for %@, mine is %@
%@ Update cache with active device
%@ Pre didSwitch call back block
%@ Notifying delegate %p of active device switch to %@ (delegateIdentifier %@)
%@ Pre devicesChanged call back block
%@ Notifying delegate %p of devices changing (devices %@)
%@ Pre linkedDevicesChanged call back block
%@ Notifying delegate %p of linked devices changing (devices %@)
%@ Group notify
Stopped suspending traffic to the daemon.
Service received %@ tinkerDeviceAdded (linkedDevices count: %@)
Linked devices updated %@
Service received %@ tinkerDeviceRemoved (linkedDevices count: %@)
Service received %@ tinkerDeviceUpdated (linkedDevices count: %@)
Service received %@ linkedDevicesUpdated (linkedDevices count: %@)
Connection map:
   %@ => %@
Tearing down connection for %@
activeAccountsChanged, oldSet: %@  newSet: %@
Calling active accounts changed %@ with delegate %p
*** dropping devicesChanged callback! -- accountsChanged
incomingOpportunisticData on connection guid %@ using engram %@ delegateCount %ld
Calling out to IDSService delegate %p for incomingOpportunisticData if it responds.
Done for IDSService delegate %p for incomingOpportunisticData - doesRespondToSelector? %@
incomingData on connection guid %@ using engram %@ delegateCount %ld
incomingData of size %lu on connection %@ account %@ from ID %@ sender-side-identifier %@
Calling out to IDSService delegate %p for incomingData if it responds.
Done for IDSService delegate %p for incomingData - doesRespondToSelector? %@
Context %@ WantsAppAck %@ AppAckGuid %@ storageGuid %@
Sending app-level ack dispatch called for message %@
incomingGroupData on connection guid %@ using engram %@ delegateCount %ld
incomingGroupData of size %lu on connection %@ account %@ from ID %@ sender-side-identifier %@
Error converting Group Data to ENGroup %@
No error returned however unable to create group from data (timeout?) %@, Original Data: %@
Received sentAhead group {groupID: %{public}@}
Group Share Persisted %@
Calling out to IDSService delegate %p for incomingAccessoryData if it responds.
Done for IDSService delegate %p for incomingAccessoryData - doesRespondToSelector? %@
Calling out to IDSService delegate %p for incomingAccessoryReportMessage if it responds.
Done for IDSService delegate %p for incomingAccessoryReportMessage - doesRespondToSelector? %@
Invalid state {%ld} received in incomingInvitation. Dropping invitation %@
incomingInvitation: created invitation object from incoming message : {%@}
Calling out to IDSService delegate %p for incomingInvitation if it responds.
Done for IDSService delegate %p for incomingInvitation - doesRespondToSelector? %@
Invalid state {%ld} received in incomingInvitationUpdate. Dropping invitation %@
incomingInvitationUpdate: created invitation object from incoming message : {%@}
Calling out to IDSService delegate %p for incomingInvitationUpdate if it responds.
Done for IDSService delegate %p for incomingInvitationUpdate - doesRespondToSelector? %@
Service recieved message
incomingMessage on connection %@ account %@ from ID %@  from device: %@  sender-side-identifier: %@
incomingMessage on connection guid %@ using engram %@ delegateCount %ld
Failed to consume sandbox extension! {errno: %d}
No sandbox extension for received resource [%@]
Given resource URL appears unacceptable! [%@]
Remove file success: %@, error: %@ (accessed %d)
Calling out to IDSService delegate %p for incomingResource if it responds.
Done for IDSService delegate %p for incomingResource - doesRespondToSelector? %@
Calling out to IDSService delegate %p for incomingResource with metadata if it responds.
Done for IDSService delegate %p for incomingResource with metadata - doesRespondToSelector? %@
Calling out to IDSService delegate %p for incomingMessage if it responds.
Done for IDSService delegate %p for incomingMessage - doesRespondToSelector? %@
Calling out to IDSService delegate %p for incomingMessage with context if it responds.
Done for IDSService delegate %p for incomingMessage with context - doesRespondToSelector? %@
Service finished calling out
Incoming protobuf %@, routing to selector/delegate. sender-side-identifier %@
Incoming protobuf on connection guid %@ using engram %@ delegateCount %ld
Found selector %@ fullSelector %@ for key 0x%x
 => Delgate %p responds to: %@, passing along protobuf: %p
   * Done handling
No selector for key 0x%x = type(%u) isResponse(%@), notifying delegates
 => Delgate %p responds unhandled protobuf passing along protobuf: %p
No delegate was registered that could handle protobuf %@
incomingTopLevelMessage on connection guid %@ using engram %@ delegateCount %ld
No delegates for incoming madrid message. Sending 115 for guid %@
Calling out to IDSService delegate %p for incomingTopLevelMessage if it responds.
Done for IDSService delegate %p for incomingTopLevelMessage - doesRespondToSelector? %@ guid: %@
Calling out to IDSService delegate %p for incomingPendingMessage if it responds.
Done for IDSService delegate %p for incomingPendingMessage - doesRespondToSelector? %@
DecryptedEngramData %@ %@
  {decryptedData.length: %{public}@}
Decrypting Engram Message, Org Payload %@
Failed decrypting Engram {error: %@, serviceName: %@}
isActiveChanged on connection %@ isActive %@
devicesChanged on connection %@ account %@ all devices %@ num delegates: %lu
*** dropping devicesChanged callback!
connectedDevicesChanged on connection %@ account %@ devices %@
%@ got messageIdentifier %@ callbackID %@ updatedWithResponseCode: %ld error %@ lastCall %@
%@ got messageIdentifier %@ callbackID %@ updatedWithResponseCode: %ld error %@ lastCall %@ sentBytes %@ totalBytes %@
%@ got identifier %@ callbackID %@ willSendToDestinations %@ skippedDests %@ regPropsToDests (count) %@
%@ got identifier %@ didSendWithSuccess %@  error %@ num delegates: %lu
%@ got identifier %@ hasBeenDeliveredWithContext %@
%@ didFlushCacheForRemoteURI %@ fromURI %@ guid %@
Sending up options to client: %@
Received group session participant update {service: %@, update: %@, context: %@}
Recieved did send opportunistic data {service: %@, identifier: %@, toIDs: %@}
Filtering account %@ with aliases %@  isActive? %@  canSend? %@
Linked devices before %@
Linked devices after %@
Adding linked IDSDevice %@
Linked devices updated with count %d
No URI found on any account -- returning nil {accounts: %@}
No account matched URI -- returning nil {URI: %@, accounts: %@}
provisionPseudonymForURI called {URI: %@, properties: %@, requestUUID: %@, self: %@}
No account matched pseudonym -- returning nil {pseudonym: %@, accounts: %@}
renewPseudonym called {pseudonym: %@, expiry: %f, requestUUID: %@, self: %@}
revokePseudonym called {pseudonym: %@, requestUUID: %@, self: %@}
finishedProvisioningPseudonym called but no block! {pseudonym: %@, success:%@, requestUUID: %@, error:%@, self: %@}
finishedProvisioningPseudonym called {pseudonym: %@, success:%@, requestUUID: %@, error:%@, self: %@}
finishedRenewingPseudonym called but no block! {pseudonym: %@, success:%@, requestUUID: %@, error:%@, self: %@}
finishedRenewingPseudonym called {pseudonym: %@, success:%@, requestUUID: %@, error:%@, self: %@}
finishedRevokingPseudonymWithSuccess called but no block {success:%@, requestUUID: %@, error:%@, self: %@}
finishedRevokingPseudonymWithSuccess called {success:%@, requestUUID: %@, error:%@, self: %@}
Told to diversify an invalid key type {options: %@, self: %@}
signData called {requestID: %@, data: %@, algo: %ld, options: %@, self: %@}
verifySignedData called {requestID: %@, signedData: %@, data: %@, uri: %@, algo: %ld, options: %@, self: %@}
finishedSigningForRequest called but no block! {requestUUID: %@, signedData: %@, error: %@, self: %@}
finishedSigningForRequest called {requestUUID: %@, signedData: %@, error: %@, self: %@}
finishedVerifyingSignedDataForRequest called but no block! {requestUUID: %@, sucess: %@, error: %@, self: %@}
finishedVerifyingSignedDataForRequest called {requestUUID: %@, sucess: %@, error: %@, self: %@}
No account matched to report with -- returning nil {fromURI: %@, accounts: %@}
reportApprovalOfURI called {tempURI: %@, fromURI: %@, requestID: %@, self: %@}
finishedReportingRequestUUID called but no block {requestUUID: %@, error:%@, self: %@}
finishedReportingRequestUUID called {requestUUID: %@, error:%@, self: %@}
Ignoring sub-services update, couldn't find active device
Ignoring sub-services update, couldn't find uniqueID for device %@
Triggering Internal resend of Sub Services to daemon
Framework Set Protobuf Action
Framework Get Protobuf Action
Attempting To Send message from account %@ to destinations %@
Sending message on a client that is not sandboxed!
Attempting to send on a non local account, this message is allowed to progress
Attempting to send to more than 1 destination, this message will fail in the daemon if necessary
Attempting to send to a remote destination from a local account, this is permited if proxy is permitted and will fail in the daemon if not
Client request to send opportunistic data {identifier: %@, options: %@, dataLength: %llu}
Client request to cancel opportunistic data {identifier: %@, serviceName: %@}
Framework Send Protobuf
!setState priority=%@
!setState destination=%@
Framework Send Data
!setState service=%@
Framework Send Accessory Data
!setState accessoryID=%@
Sending AccessoryData Now
sendAccessoryData - Could not find connection for account %@
sendAccessoryData - All accounts %@
sendInvitation - Service is not enabled for Invitations
sendInvitation - Could not find connection for account %@
sendInvitation - All accounts %@
sendInvitationUpdate - Service is not enabled for Invitations
sendInvitationUpdate - Could not find connection for account %@
sendInvitationUpdate - All accounts %@
setWakingPushPriority - invalid priority
sendServerMessage - Could not find connection for account %@
sendServerMessage - All accounts %@
FromID %@, strippedURI %@, token %@
Comparing device token %@ to token %@
Did not find a device matching the token %@
setPreferInfraWiFi: %@
setLinkPreferences: %{public}@
Received invalid link preferences
forceOTRNegotiation
Framework Send Resource At URL
!setState ResourceURL=%@
!setState serviceName=%@
sendResourceAtURL - resourceURL not a file %@
Attempted to link or copy file %@ destination %@ (%s to %@)
sendResourceAtURL - unable to link or copy file %@
sendResourceAtURL - resourceURL %@  isFileURL %@  localDelivery %@
Failed to issue sandbox extension for linked/copied file [%@]
Failed to issue sandbox extension for original file [%@]
Sending Ahead group {groupID: %{public}@}
sendMessage - Could not find connection for account %@
sendMessage - All accounts %@
sendMessage - Unable to send message to this destination from this account %@
No valid service identifier to report spam.
No spam message type specified.
Call made to manually ack a message, however this service does not support manually acking of messages
sendCertifiedDeliveryReceipt passing context to daemon { context: %@ }
sendCertifiedDeliveryReceipt context passed to incorrect service { context.service: %@, service: %@ }
sendCertifiedDeliveryReceipt given nil certified delivery context
Creating datagram channel with destination %@ => %@
Creating datagram channel with socket %d => %@
Failed to send group ahead {group: %@, error: %@}
Did send group ahead {group: %@ identifier: %@}
Enforcing sandbox policy...
%@ (initializing service %@) is not sandboxed but is in the sandbox allowlist.  Not enforcing sandbox policy.
ABORT: %@ (initializing service %@) IS NOT SANDBOXED
%@ (initializing service %@) is sandboxed
*** Account wants to drop devicesChanged callback {account.isTransientAllowlistedAccount: %@, account.isFirstGDRAllowlistedAccount: %@}
sendResourceAtURL - can't allocate %ld bytes for new file path
sendResourceAtURL - failed to clone file %@ => %@ (error %d). Will try hard link.
sendResourceAtURL - failed to link and failed to copy file %@ => %@ (error %@)
Clearing out _connection, we're disconnecting
Forcing a disconnect, terminating connection
No service %@, bailing...
No block %p, bailing...
Cache request for service %@
transactionID map after ADD %@
Sending cache request for service %@ transactionID %@
transactionID map after REMOVE %@
Could not create message for cache query
No listenerID %@, bailing...
Cached ID status request (destinations: %@)  (service: %@)  (listenerID: %@)  (transactionID: %@)
No destinations, not issuing query...
Received cached id status {destinations: %@, service: %@, error: %@}
ID status renewal request (destinations: %@)  (service: %@)  (listenerID: %@)  (transactionID: %@)
Received id status {destinations: %@, service: %@, error: %@}
ID remote device request (destination: %@)  (service: %@)  (listenerID: %@)  (transactionID: %@)
No message to send %@, ignoring...
Query service disconnected
Error requesting client: %@
No connection to send message on
%s called with a nil completion -- returning
Requesting selected subscriptions with completion
%s called with nil subscription -- returning
Selecting subscription with completion {subscription: %@}
Unselecting subscription with completion {subscription: %@}
Setting selected subscriptions with completion {subscriptions: %@}
%s called with nil alias -- returning
Removing temporary phone alias with completion {alias: %@}
Error fetching registration collaborator {error: %@}
Disabling temporary phone alias with completion {alias: %@}
Enabling temporary phone alias with completion {alias: %@}
Requesting unselected temporary phone aliases with completion
Requesting selected subscriptions synchronously
Selecting subscription synchronously
Unselecting subscription synchronously
Setting selected subscriptions synchronously
Removing temporary phone alias synchronously {alias: %@}
Enabling temporary phone alias synchronously {alias: %@}
Disabling temporary phone alias synchronously {alias: %@}
Requesting unselected temporary aliases synchronously
Error fetching sync registration collaborator {err: %@}
handleGroupSessionKeyValues: keyValues is not a dictionary. Is: %@
handleGroupSessionKeyValues: received dictionary %@
handleGroupSessionKeyValues: remoteParticipantIDToData is not a dictionary for key:%@ data: %@
handleGroupSessionKeyValues: key %@
handleGroupSessionKeyValues: invalid participantID for key:%@ participantID:%@
handleGroupSessionKeyValues: key:%@ participantID:%@
handleGroupSessionKeyValues: invalid value for key:%@ participantID:%@ value:%@
handleGroupSessionKeyValues: key:%@ participantID:%@ data:%@
IDSGroupSessionKeyValueDelivery init: %@
failed to get keyValueDelivery for session %@: %@
keyValueDelivery: %@
removeDeliveryHandler: could not find proxy for handler %@
sendData: sending key: %d for capability: %@
sendData: finished sending key: %d for capability:%@
Alloc'ing IDSXPCConnection {remoteObject: %{public}@, pointer: %p}
IDSXPCConnection interrupted
IDSXPCConnection invalidated
Dealloc'ing IDSXPCConnection {remoteObject: %{public}@, pointer: %p}
transaction finished -- calling invoke {selector: %{public}@, uuid: %{public}@}
TransactionUUID missing from pendingTransactions --  Skipping invoke {selector: %{public}@, uuid: %{public}@}
Dropping all pending transactions {pendingTransaction: %{public}@, remoteObject: %{public}@, pointer: %p}
Alloc'ing IDSXPCConnectionTimeoutProxy {target: %{public}@, connection: %{public}@, pointer: %p}
Dealloc'ing IDSXPCConnectionTimeoutProxy {target: %{public}@, connection: %{public}@, pointer: %p}
xpc message timed out -- calling error {selector: %{public}@, uuid: %{public}@, timeout: %{public}@}
Clearing transaction timeout timer {selector: %{public}@, uuid: %{public}@}
Starting timeout for xpc message {selector: %{public}@, uuid: %{public}@, timeout: %{public}@}
Received device state note {uniqueID: %@, weakSelf: %p, nearbyID: %@}
Device note -- old: {isNearby: %d, isConnected: %d, isCloudConnected: %d} new: {isNearby: %d, isConnected: %d, isCloudConnected: %d}
Client request to set uuid %@ on device %@
  => Device doesn't support it, ignoring
Nearby triggering nearbyDevicesChanged on account %p %@
Connected triggering connectedDevicesChanged on account %p %@
Cloud connected triggering cloudConnectedDevicesChanged on service %p %@
State change triggering linkedDevicesChanged on service %p %@ for device: %@
Purging idStatusCache
Sending ID status update (%d) for service %@ destination %@
No destinations, bailing...
No service, bailing...
No listenerID, bailing...
No query complete block, bailing...
Received results for service: %@  updates %@
No completion block, bailing...
No queue, bailing...
No listener ID, bailing...
Destination "%@" not found in id query results %@. Verify destination is a properly formed IDS destination (and not just the handle string).
Received results for service: %@  updates {%@}
_warmupQueryCacheForService:  (service: %@)
No service name, bailing...
Received cache for service %@, %d count
_flushQueryCacheForService:  (service: %@)
addDelegate:forService:listenerID:queue:  (delegate: %p)   (service: %@)   (listenerID: %@)   (queue: %p)
Invalid add delegate params -- bailing...
Listeners after ADD %@
removeDelegate:forService:listenerID:  (delegate: %p)   (service: %@)   (listenerID: %@)
Invalid remove delegate params -- bailing...
Listeners after REMOVE %@
start stats timer %p.
stop stats timer %p.
Will skip daemon link for link %d, disableDaemonFallback is enabled.
LinkID %d associated with direct connection %@
LinkID %d unassociated with direct connection %@
LinkID %d associated with LinkContext %@
Dumping link contexts and direct connections
<%p> -- connection %@ link context %@
Found empty connection for link context %@
Cleaning up left over connection %@ for link context %@
 Warning ! Could not find mappedParticipant:%llu in linkID %d dictionary:%@
 Warning ! Could not find mappedParticipant:%lld in linkID %d dictionary:%@
received baseband notification packet.
DCR %zdB (%c %d)
DCR %zdB (%c %d/%d)
_processIncomingDatagram: IDSHBHDecryptDataWithKey failed!
Error in _processIncomingDatagram: StunUtilProcessIncomingChannelData returned false.
addDirectConnectionForLinkID: linkID has to be greater than 0.
addDirectConnectionForLinkID child connection already created previously: %@
addDirectConnectionForLinkID missing child connection ID - skip for now
addDirectConnectionForLinkID missing child connection ID - skip for now.
addDirectConnectionForLinkID create connection (%c) with client ID %@ for linkContext %@
addDirectConnectionForLinkID failed to create child connection
addDirectConnectionForLinkID: nexus is not supported for path :%@.
addDirectConnectionForLinkID connection event %s for %@
<%p> addDirectConnectionForLinkID linkID: %d %@
<%p> addDirectConnectionForLinkID - associating connection %@ from linkID %d with virtual linkID %d
<%p> removeDirectConnectionForLinkID linkID: %d
<%p> connectionForLinkID - disabled with DisableDirectConnectionSend
Direct connection is invalidated. Skipping <%@> direct read.
<%@> direct read failed %d due to datagram_count 0 - removing direct connection
 ** direct reading (%c) linkID %d connection <%p> packet %u/%u datagram length %zu
packet:
_makeDirectPacketBufferFromDatagram: datagramSize is %u, and exceeds IDSLinkPacketBuffer limit
_makeDirectPacketBufferFromDatagram: datagramSize has no data
_makeDirectPacketBufferFromDatagram: wrong linkID %d.
_makeDirectPacketBufferFromDatagram: IDSHBHEncryptDataWithKey failed!
_makeDirectPacketBufferFromDatagram: encryptedData length is greater than maxBufferLength!
QuickRelayHeaderDebug _makeDirectPacketBufferFromDatagram: packetBufferSize is %zd, result:%d, channel number:%d
_sendStatsRequestViaDaemon: invalid stats data, return
_sendStatsRequestViaDaemon: serialized metadata size: %lu, greater than max allowed sent size, return
DCW failed for %d packet(s), %uB (%d).
DCW %uB/%1d (%c %d)
DCW %uB/%1d (%c %d/%d)
 ** direct write (%c) linkID %d connection <%p> error %d datagram length %u
packet:
<%@> direct write failed error_number %d calling completion handler %p
Simulator Proxy metadata connection waiting
Simulator Proxy metadata connection failed
Simulator Proxy metadata connection is ready
Simulator Proxy metadata connection is cancelled
Sending Metadata: %@
Metadata reply received: %@
<%p> Creating with socket %d
<%p> Creating with destination %@
<%p> Invalid operation mode value %ld - defaulting to IDSDatagramChannelOperationModeFileDescriptor
<%p> Got IDSDatagramChannelNWContextKey %@ from client.
<%p> Invalid preferred data path value %ld - defaulting to IDSDatagramChannelDataPathThroughIDSDaemon
<%p> Shared direct data path not compatible with file descriptor mode - defaulting to IDSDatagramChannelDataPathThroughIDSDaemon
<%p> Operation mode %@ (%d) preferred datapath %@ (%d)
proc_pidinfo for pid %d returned client unique PID %llu
proc_pidinfo for pid %d failed (errno: %d)
invalid operation mode %d
-dealloc called for %@
<%@> sent the first data packet (size: %lu)
<%@> TX %f bytes/s %f packets/s
<%@> received the first data packet (size: %lu)
<%@> RX %f bytes/s %f packets/s
-underlyingFileDescriptor called for %@
<%@> first read, will send dummy link information
<%@> dummy link information
removeIDSDataChannelLinkContext: connection already closed
<%@>  removeIDSDataChannelLinkContext:%u, linkContexts %@
<%@> Can't find the linkContext of linkID %u, linkContexts %@
<%@> sent IDSDataChannelEventDisconnected, linkID %u, linkContexts %@, reason: %d
invalid link attribute size (%u), too small.
Got relay server provider:%d, session token:%dB, session key:%dB
Got hbhEncryptionkey:%@ and hbhDecryptionkey:%@
This is a virtual relay link(%u). Copying over attributes from delegated link(%u)
Copied relay server provider:%d, session token:%dB, session key:%dB
Copied hbhEncryptionkey:%@ and hbhDecryptionkey:%@
<%@> got connectedLinkID %d (link family:%u) (mtu:%u) (l-conn:%u) (l-RAT:%u) (l-flags:0x%x) (l-dataSoMask: %u) (r-conn:%u) (r-RAT:%u) (r-flags:0x%x) (r-datasoMask:%u) isVirtualRelayLink: %@, childConnectionID: %@, channelNumber: %04X (Current LinkContexts %@
addDirectConnectionForLinkID: request child connectionID for linkID %d
<%@> sent IDSDataChannelEventConnected, current link contexts %@
can't find link %d for the default
<%@> sendMediaEncryptionEventInfo MKM:%{private}@, MKS:%{private}@, MKI:%{private}@ locally generated:%{private}@ encryptionSequenceNumber:%{private}@
<%@> sendMediaMembershipChangedInfo membershipChanged:%u
processMetadataForDatagram datagramSize(%zd) <= kIDSClientChannelMetadataLengthSize - returning
processMetadataForDatagram %d + metadataSize(%zd) > datagramSize(%zd) - returning
got PacketLinkID %d
kClientChannelMetadataType_PacketLinkID should be 1 byte, not %u bytes, field: %u
got trafficClass %u
kClientChannelMetadataType_TrafficClassKey should be %d bytes, not %u bytes, field: %u
got DSCP %u
kClientChannelMetadataType_DSCPKey should be %d bytes, not %u bytes, field: %u
got arrivalTime %f
kClientChannelMetadataType_PacketArrivalTime should be %d bytes, not %u bytes, field: %u
got invalid streamIDCount %d
got streamIDCount %d
got streamID bytes:%@
kClientChannelMetadataType_StreamIDsKey: size mismatch (%u != %u), ignore.
got Channel Priority %u
kClientChannelMetadataType_PriorityKey should be 1 byte, not %u bytes, field: %u
got CT(packet counting) option
kClientChannelMetadataType_CountPacketKey  should be 1 byte, not %u bytes, field: %u
kClientChannelMetadataType_GenerationCounterLSBKey should be 1 byte, not %u bytes, field: %u
got probeGroupID %u
kClientChannelMetadataType_ProbeGroupIDKey should be 2 bytes, not %u bytes, field: %u
got Participant ID %llu
error: we received Participant ID %llu
kClientChannelMetadataType_ParticipantID should be 8 byte, not %u bytes, field: %u
got disconnectedLinkID %d, linkUUID %@, reason: %d
kClientChannelMetadataType_LinkDisconnected should be %d byte, not %u bytes, field: %u
got defaultLinkID %d
kClientChannelMetadataType_DefaultLinkID should be 1 byte, not %u bytes, field: %u
got ratType %u
kClientChannelMetadataType_RATChanged requires the cellular link. something is wrong...
kClientChannelMetadataType_RATChanged should be 1 bytes, not %u bytes, field: %u
got preConnectionDataSize %u
kClientChannelMetadataType_PreConnectionDataSizeKey should be 1 bytes, not %u bytes, field: %u
kClientChannelMetadataType_PreConnectionDataKey got wrong size (%u > %u)
got preConnectionData, called IDSDataChannelEventPreConnectionData event
kClientChannelMetadataType_PreConnectionDataKey should know its size
<%@> sent IDSDataChannelEventRSSI (%u, %u, %u)
kClientChannelMetadataType_QueryRSSI should be %u, not %u bytes, field: %u
kClientChannelMetadataType_GetLinkStatusKey - invalid fieldBytesSize: 0
kClientChannelMetadataType_GetLinkStatusKey - invalid totalLinkIDs: 0
kClientChannelMetadataType_GetLinkStatusKey - no valid currentLinkIDCount
kClientChannelMetadataType_GetLinkStatusKey - no valid linkID
kClientChannelMetadataType_GetLinkStatusKey: linkID: %d, no valid timestamp
kClientChannelMetadataType_GetLinkStatusKey: linkID: %d, no valid reorderedPackets
kClientChannelMetadataType_GetLinkStatusKey: linkID: %d, no valid probingRequests
kClientChannelMetadataType_GetLinkStatusKey: linkID: %d, no valid probingResponses
kClientChannelMetadataType_GetLinkStatusKey: linkID: %d, no valid offsetAndRTTCount
kClientChannelMetadataType_GetLinkStatusKey: linkID: %d, no valid requestOffset, i: %d
kClientChannelMetadataType_GetLinkStatusKey: linkID: %d, no valid rtt, i: %d
kClientChannelMetadataType_ProbingRequestOffsetKey - total size: %lu, all keys: %@, output: %@
kClientChannelMetadataType_MaxBitrateKey should be %u, not %u bytes, field: %u
got MTU %u
kClientChannelMetadataType_CellularMTUChanged requires the cellular link. something is wrong...
kClientChannelMetadataType_CellularMTUChanged should be %u bytes, not %u bytes, field: %u
kClientChannelMetadataType_InfoReportKey report %@
kClientChannelMetadataType_InfoReportKey should be bigger than %u bytes.
kClientChannelMetadataType_EncryptionMKMKey got MKM %@ size %u
kClientChannelMetadataType_EncryptionMKSKey got MKS %@ size %u
kClientChannelMetadataType_EncryptionMKIKey got MKI %@ size %u
kClientChannelMetadataType_EncryptionLocallyGeneratedInfoKey should be 1 byte, not %u
kClientChannelMetadataType_EncryptionMembershipChangedKey should be 1 byte, not %u
kClientChannelMetadataType_SessionReinitiated - IDSDSession is reinitiated
kClientChannelMetadataType_SessionReinitiated should be 1 byte, not %d
kClientChannelMetadataType_SessionInfoKey - Couldn't get NSData from fieldBytes
kClientChannelMetadataType_SessionInfoKey - Couldn't decode NSData %@ (error: %@)
kClientChannelMetadataType_SessionInfoKey - %@
kClientChannelMetadataType_SessionInfoResponseErrorKey errorCode %u
kClientChannelMetadataType_SessionInfoResponseErrorKey should be %u byte, not %u
kClientChannelMetadataType_StatsKey - Couldn't get NSData from fieldBytes
kClientChannelMetadataType_StatsKey - Couldn't decode NSData %@
kClientChannelMetadataType_StatsKey - %@
kClientChannelMetadataType_StatsID should be %u byte, not %u
kClientChannelMetadataType_StatsServerTimeStamp should be %u byte, not %u
kClientChannelMetadataType_StatsServerPacketInterval should be %u byte, not %u
kClientChannelMetadataType_StatsTotalServerPacketReceived should be %u byte, not %u
kClientChannelMetadataType_StatsTotalServerPacketSent should be %u byte, not %u
kClientChannelMetadataType_StatsUplinkBandwidth should be %u byte, not %u
kClientChannelMetadataType_DebugDataTransferTypeKey should be 1 byte, not %u
kClientChannelMetadataType_OptOutPriorityFilter should be 1 byte, not %u bytes, field: %u
kClientChannelMetadataType_TransitionPacketFlag should be 1 byte, not %u bytes, field: %u
kClientChannelMetadataType_nwPathWiFiFlagsChanged got wifiLocalAttributes: %u
send event to client about kClientChannelMetadataType_nwPathWiFiFlagsChanged, wifiLocalAttributes: %u
kClientChannelMetadataType_nwPathWiFiFlagsChanged should be %u bytes, not %u bytes, field: %u
kClientChannelMetadataType_nwPathCellularFlagsChanged got cellularLocalAttributes: %u
send event to client about kClientChannelMetadataType_nwPathCellularFlagsChanged, cellularLocalAttributes: %u
kClientChannelMetadataType_nwPathCellularFlagsChanged should be %u bytes, not %u bytes, field: %u
kClientChannelMetadataType_DebugDataTransferKey got data size %u
kClientChannelMetadataType_SoMaskChanged got SoMask: %u
send event to client about kClientChannelMetadataType_SoMaskChanged, SoMask: %u
kClientChannelMetadataType_SoMaskChanged should be %u bytes, not %u bytes, field: %u
kClientChannelMetadataType_NeedsHBHEncryption should be %u byte, not %u
kClientChannelMetadataType_EncryptionSequenceNumber got %llu (*Client <- IDSD)
kClientChannelMetadataType_EncryptionSequenceNumber should be %u bytes, not %u bytes, field: %u
kClientChannelMetadataType_LinkSuggestion - Couldn't get NSData from fieldBytes
kClientChannelMetadataType_LinkSuggestion - Couldn't decode NSData %@ (error: %@)
kClientChannelMetadataType_LinkSuggestion - %@
kClientChannelMetadataType_RetransmittedPacket should be %u byte, not %u
kClientChannelMetadataType_NonRetransmittablePacket should be %u byte, not %u
kClientChannelMetadataType_EventReportingBlob - Couldn't get NSData from fieldBytes
kClientChannelMetadataType_EventReportingBlob - Couldn't decode NSData %@ (error: %@)
kClientChannelMetadataType_EventReportingBlob - %@
kClientChannelMetadataType_ParticipantMappingReplacment - Couldn't get NSData from fieldBytes
linkID %d, got kClientChannelMetadataType_ParticipantMappingReplacment: %@
kClientChannelMetadataType_ParticipantMappingReplacment - Couldn't decode NSData.
kClientChannelMetadataType_ParticipantMappingUpdate - Couldn't get NSData from fieldBytes
linkID %d, got kClientChannelMetadataType_ParticipantMappingUpdate: %@
kClientChannelMetadataType_ParticipantMappingUpdate - Couldn't decode NSData.
addDirectConnectionForLinkID: received child connectionID for linkID %d
kClientChannelMetadataType_ChildConnectionID should be %u bytes, not %u bytes
Unknown metadata type: %u
_extractDictionaryFromData - Couldn't decode NSData, error:%@, extractedDataType:%@
readFromNWConnection: _internal->_connection: Only has statsID: %x
<%@> read details: datagramSize %ld metadataSize %ld dataOffset %ld [%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x ...]
<%@> read details: datagramSize %ld metadataSize %ld dataOffset %ld
<%@> read sanity check failed: datagramSize %ld metadataSize %ld dataOffset %ld
<%@> read failed %d due to datagram_count 0 - calling event handler %p
 ** reading %u packets remaining: mapped %p length %zu hasMetadata %u
<%@> read nonfatal failure errno %d
<%@> read failed errno %d calling event handler %p
<%@> read returned 0 bytes calling event handler %p
-close called for %@
-invalidate called for %@
<%@> cannot start datagram channel with no socket and no connection
<%@> nw_connection_create_with_connected_socket failed. socketDescriptor %d might be invalid.
-start called for %@
<%@> got event connected and calls event handler %p
<%@> got event error %@ and calls event handler %p
<%@> got event disconnected with error %@ and calls event handler %p
Not enough packet buffer space. Space left %lu datagram size %u metadata size %u
<%@> write linkID %d error_number %d calling completion handler %p dataCreateTime %0.6lf writeTime %0.6lf [%013.6lf]
<%@> write failed error_number %d calling completion handler %p
<%@> write failed to send all bytes %d < %d
<%@> write returned 0 - connection terminated
<%@> write nonfatal failure errno %d
<%@> write failed errno %d
-setEventHandler called for %@
-setReadHandler called for %@
-setReadHandlerWithOptions called for %@
-setWriteCompletionHandler called for %@
<%@> does not have readHandler!
<%@> sendMetadata: not connected yet - tearing down or waiting for -start
<%@> write details: metadataSize %ld
<%@> write error_number %d calling setChannelPreferences
<%@> write failed error_number %d calling setChannelPreferences
<%@> write done for setChannelPreferences
<%@> setChannelPreferences dictionary: %@
<%@> IDSDataChannelPreferencePreConnectionDataKey - %@, _waitForPreConnectionDataForConnected? %@
<%@> client channel connection is not ready. Wait to send preConnectionData
<%@> IDSDataChannelPreferenceDefaultLinkSelectionKey - linkID:%d
<%@> IDSDataChannelPreferenceBasebandRegistrationKey - linkID:%d, reg_key:%u registerOperation:%u
<%@> IDSDataChannelPreferenceBasebandQueueFlushKey - %@
<%@> IDSDataChannelPreferenceDiscardLinkIDsKey - %@
<%@> IDSDataChannelPreferenceUpdateQualityOfServiceKey - LinkID: %d, %@
<%@> IDSDataChannelPreferenceQueryInformationKey - queryType: %d
<%@> IDSDataChannelPreferenceSetMaxBitrateKey - maxBitrate: %u for LinkID: %d
<%@> IDSDataChannelPreferenceRemoteDeviceVersionKey - remoteDeviceVersion: %u
<%@> kClientChannelMetadataType_ProcessIDKey - %d
<%@> kClientChannelMetadataType_RemoteDeviceVersionKey remoteDeviceVersion: %u
<%@> kClientChannelMetadataType_BasebandQueueFlushPayloadSizeKey %u
<%@> kClientChannelMetadataType_DiscardLinkIDsKey the maximum of links is %d
<%@> kClientChannelMetadataType_PreConnectionDataSizeKey %u
<%@> kClientChannelMetadataType_PreConnectionDataKey %@
<%@> kClientChannelMetadataType_UpdateQoSIsGoodKey IsGood:%@ LinkID:%d
<%@> kClientChannelMetadataType_QueryRSSI
<%@> kClientChannelMetadataType_MaxBitrateKey maxBitrate:%u LinkID:%d
<%@> IDSDataChannelPreferenceNeedsEncryptionInfoKey - we'll request the encryption info
<%@> kClientChannelMetadataType_ForceUpdateEncryptionInfoKey - we'll update the encryption info.
<%@>: setWiFiAssist: %@
<%@>: startActiveProbingWithOptions: invalid probing Data, return
<%@>: startActiveProbingWithOptions: serialized metadata size: %lu, greater than max allowed sent size, return
<%@>: startActiveProbingWithOptions: %@ size: %lu
<%@>: stopActiveProbingWithOptions: invalid probing Data, return
<%@>: stopActiveProbingWithOptions: serialized metadata size: %lu, greater than max allowed sent size, return
<%@>: stopActiveProbingWithOptions: %@ size: %lu
<%@>: flushLinkProbingStatusWithOptions: invalid probing options, return
<%@>: flushLinkProbingStatusWithOptions: serialized metadata size: %lu, greater than max allowed sent size, return
<%@>: flushLinkProbingStatusWithOptions: %@ size: %lu
<%@>: queryStatusWithOptions: invalid query options, return
<%@>: queryStatusWithOptions: serialized metadata size: %lu, greater than max allowed sent size, return
<%@>: queryStatusWithOptions: %@ size: %lu
<%@>: setUPlusOneMode: %@ isInitiator: %@
<%@>: startMKMRecoveryForParticipantIDs: %@
<%@>: startMKMRecoveryForParticipantIDs: invalid participantIDs size
<%@>: startMKMRecoveryForParticipantIDs: metadata size: %lu, greater than max allowed sent size, return
<%@>: startMKMRecoveryForParticipantIDs: %@, %@ size: %lu
%@: requestSessionInfoWithOptions: %{private}@ size: %lu
Could not reportDictionary with type %d because dictionary is too large
%@: reportMKIArrival: mki %@ at %@
%@: reportFirstIncomingPacketTimeForMKI: first incoming packet for mki %@ at %@
%@: reportFirstOutgoingPacketTimeForMKI: first outgoing packet for mki %@ at %@
storing encryption sequence number: %llu (*Client -> IDSD)
Client setup service -- checked in {service: %@}
Client setup service -- failed check in! {service: %@}
Finalized check in -- finishing {service: %@}
Client received xpc-wake event -- storing {service: %@, description: %s}
Adding listener ID: %@   for service: %@
Removing listener ID: %@   for service: %@
Client ID status to refresh ID status for destinations %@  on service: %@   from listenerID: %@
Client %@ is attempting to send more than a reasonable amount of URI's in a query {count: %lu}
Client ID status to force refresh ID status for destinations %@  on service: %@   from listenerID: %@
Client ID status to refresh ID status for destination %@  on service: %@   from listenerID: %@
Client ID status for required ID status for destinations %@  on service: %@   from listenerID: %@
Client ID status for required ID status for destination %@  on service: %@   from listenerID: %@
Client ID Info Request for destinations %@ on service: %@ from listenerID: %@ with infoTypes: %llu
Client requesting to warmup the query cache for service: %@
Client requesting to flush the query cache for service: %@
** BLOCKING Client ID status to refresh ID status for destination %@  on service: %@   from listenerID: %@
  => Done: %f
** BLOCKING Client ID status to refresh ID status for destinations %@  on service: %@   from listenerID: %@
** BLOCKING Client ID status cache request for destination %@  on service: %@ respectExpiry: %@   from listenerID: %@
** BLOCKING Client ID status cache request for destinations %@  on service: %@ respectExpiry: %@   from listenerID: %@
Client Remote Device Request for destinations %@  on service: %@   from listenerID: %@
** BLOCKING  Client Remote Device Request for destinations %@  on service: %@   from listenerID: %@
Client ID status request for destinations %@  on service: %@   from listenerID: %@
Client ID status request for destination %@  on service: %@   from listenerID: %@
Disconnected from daemon, notifying client of session %@
%@: Empty unique ID
%@: Empty account ID
%@: Empty destinations set
%@ - existing socket pair, ignoring request to create
Setting up socket pair to daemon
%@ - %@ %d (%s)
Sending allocation request with options %@
Sending Session Invitation with options %@
Sending Session Invitation with data (%lu bytes), declineOnError %@
Sending Session Invitation Cancel
Sending Session Invitation Cancel with data (%lu bytes)
Sending Session Invitation Cancel with Reason %u
Sending Session Invitation Accept
Sending Session Invitation Accept with data (%lu bytes)
Sending Session Invitation Decline
Sending Session Invitation Decline with data (%lu bytes)
Skipping destination %{private}@, which is not in this session's list of destinations: %{private}@
Asked if shouldUseSocketForTransport %@
%@ - Session not connected can't send data yet, ignoring...
%@ - No socket pair connection setup, ignoring...
%@ - No data to send, ignoring...
Sending data Client -> Daemon  (hash: %lu)  (length: %lu)
Session accept received fromID %@ sessionID %@ with data %@
Ignoring accept, session doesn't match %@ vs. %@
Session decline received fromID %@ sessionID %@ with data %@
Ignoring decline, session doesn't match %@ vs. %@
Session cancel received fromID %@ sessionID %@ with data %@
Ignoring cancel, session doesn't match %@ vs. %@
Session message received fromID %@ sessionID %@ with data %@
Ignoring message, session doesn't match %@ vs. %@
Session end received fromID %@ sessionID %@ with data %@
Ignoring end, session doesn't match %@ vs. %@
Session %@ invitation sent to tokens %@ shouldBreakBeforeMake %@
Ignoring session:invitationSentToTokens:, session doesn't match %@ vs. %@
Ignoring session started, session doesn't match %@ vs. %@
Session started for IDSSessionID: %@
Session ended %@ with reason %d error %@
Ignoring session ended, session doesn't match %@ vs. %@
Session audio enabled ? %@
Ignoring audioEnabled, session doesn't match %@ vs. %@
Session muted ? %@
Ignoring muted, session doesn't match %@ vs. %@
Ignoring xpc object, session doesn't match %@ vs. %@
Received initial link type %d for session %@ with error %@.
Received invalid initial link type xpc object for session %@ with error %@.
Received invalid xpc object type: %@.
Session %@ received the report: %@
UNRL: Received data Daemon -> Client  (data hash: %lu)  (length: %lu)
Daemon Interfaced Group context controller starting up
Error fetching sync activity monitor collaborator {err: %@}
Error fetching activity monitor collaborator {error: %@}
No delegate, bailing...
Client request to invalidate: %@
Scheduling next batch in %f
setDestinations %@
We're dead, bailing
Destinations are the same, bailing
Setting time of death to %@
Received cached results %@
Received 0 cached results, query all destinations
 * Next query timer hit: %@
We're dead, not querying: %@
We've reached the max number of queries for this batch, not adding anymore: %@
We've reached the max number of queries, not adding anymore: %@
Received results %@
We've reached the max number of queries, possibly deferring queries: %@ %@
Invalidating next query timer: %@
Calling out to old delegate %p
Calling out to old delegate %p for service %@
Returning results to delegate %p
No delegate %p or queue %p
-[IDSServiceMonitor init] {self: %p, service: %@}
-[IDSServiceMonitor dealloc] {self: %p}
-[IDSServiceMonitor _updateAvailability] {self: %p, state: %llu, previousAvailability: %llu}
IDSTransactionLogSync
Got token
!setState Token=%@
failed to get token {error: %@}
Fetching messages
!addState moreComing=%@
Persisted token
moreComing -- continue
No more coming -- done
Failed to persist token {token: %@, error: %@}
Failed to ingest messages {error: %@}
Failed to fetch messages {error: %@}
got transaction messages from transport messages {transactionMessages.count: %ld, transportMessages.count: %ld}
Failed to get transaction messages from transport messges {transportMessages: %{private}@, participants: %{private}@, groups: %{private}@, error: %{public}@}
Failed to get groups or participants {error: %{public}@}
Failed to get account information {error: %{public}@}
Fetching participants/groups for deviceMessges {deviceMessages.count: %ld, groupMessages.count: %ld}
Got participants {participants.count: %ld, destinations: %ld}
Error getting participants from device messages {error: %{public}@, participants: %{private}@, deviceMessages: %{private}@}
Got groups {groups.count: %ld, groupIDs.count: %ld}
Error getting groups from group messages {error: %{public}@, groups: %{private}@, groupMessages: %{private}@}
Error getting groups or participants {error: %{public}@}
Failed to decrypt device message {error: %{public}@}
Failed to get account for recipient alias {alias: %{private}@, accounts: %{private}@, message: %{private}@}
Message missing sender/recipient alias {senderAlias: %{private}@, recipientAlias: %{private}@, message: %{private}@, senderAlias==nil: %{public}@, recipientAlias==nil: %{public}@}
-[IDSContinuity initWithDelegate:queue:]
v8@?0
-[IDSContinuity startTrackingPeer:]
-[IDSContinuity stopTrackingPeer:]
__kIDSDaemonDidConnectNotification
__kIDSDaemonWillConnectNotification
__kIDSDaemonDidDisconnectNotification
__k_IDSDaemonDidDisconnectNotification
__k_IDSDaemonDidConnectNotification
__kIDSDaemonConnectionLostNotification
QueryWithReplySync
QueryWithReply
IDSDaemonControllerContext
com.apple.IDSDaemonControllerIvarQueue
com.apple.IDSDaemonControllerQueue
com.apple.IDSDaemonControllerConnectingQueue
listenerID
services
commands
notificationServices
bundleID
processName
agentRequested
v16@?0@"NSObject<OS_xpc_object>"8
v28@?0@"IMRemoteObject"8@"NSDictionary"16B24
Caught exception: %@   name: %@   reason: %@   userInfo: %@ in function: %s
-[IDSDaemonController _makeConnectionWithLaunch:completionBlock:]_block_invoke_5
-[IDSDaemonController _disconnectFromDaemonWithForce:]_block_invoke
com.apple.private.alloy.pbbridge
com.apple.private.alloy.accountssync
v32@?0@8@16^B24
-[IDSDaemonController setCurXPCMessagePriority:]
-[IDSDaemonController curXPCMessagePriority]
-[IDSDaemonController addedDelegateForService:withCompletion:]_block_invoke
xpc-object
object
object-context
com.apple.identityservices.xpc
accountsd
SyncReplySupport
LengthOnlyHeaderProtocol
i16@?0@"NSObject<OS_nw_framer>"8
Q16@?0@"NSObject<OS_nw_framer>"8
Q28@?0*8Q16B24
v36@?0@"NSObject<OS_nw_framer>"8@"NSObject<OS_nw_protocol_metadata>"16Q24B32
KTVerificationInfo
Class getKTVerificationInfoClass(void)_block_invoke
IDSXPCKeyTransparency.m
Unable to find class %s
void *TransparencyLibrary(void)
KTLoggableData
Class getKTLoggableDataClass(void)_block_invoke
KTSelfVerificationHealableErrors
Class getKTSelfVerificationHealableErrorsClass(void)_block_invoke
firewall-uri
firewall-lastseen
firewall-mergeid
firewall-isdonated
<IDSFirewallEntry %p>: uri %@ lastSeen %@ isDonated %@ mergeID %@
__kIDSKeyRollingCompleteNotification
IDSSecurityKeyRollingRollKeys
IDSSecurityKeyRolling.m
!_IDSRunningInDaemon()
IDSSecurityKeyRollingRegenerateRegisteredIdentity
socket failed, errno: %d
gethostbyname failed, errno: %d
connect failed, errno: %d
IDSLocalSetupStart
IDSLocalSetup.m
IDSLocalSetupCompleted
IDSLocalSetupStop
IDSLocalSetupUnpair
IDSLocalSetupUnpairStart
IDSAddPairedDevice
IDSConfigureDemoMode
DemoModeConfig
12345678-0000-DADA-DADA-DEADBEEEEEEE
IDSConnectPairedDevice
IDSDeletePairedDevice
IDSDeletePairedDeviceWithCompletion
v16@?0@"NSDictionary"8
IDSDeletePairedDeviceWithCompletionBlock
IDSGetPairedDevicesWithCompletionBlock
IDSGetPairedDevices
IDSGetDeliveryStatsWithCompletionBlock
IDSInitialLocalSyncStarted
IDSInitialLocalSyncCompleted
IDSInitialLocalSyncStartedForServices
IDSInitialLocalSyncCompletedForServices
IDSIncomingAccountSyncMessage
IDSSetAllowedTrafficClassifiersForDevice
IDSGetAllowedTrafficClassifiersForDevice
IDSDropAllMessagesWithoutAnyAllowedTrafficClassifier
ids-dm-iri
ids-dm-ori
ids-dm-sqnm
ids-dm-spmf
ids-dm-tc
ids-dm-afsqnm
ids-dm-cd
ids-dm-cm
ids-dm-cpb
ids-dm-snd-params
ids-dm-options
ids-dm-snd-time
ids-dm-msg-id
ids-dm-msg-guid
com.apple.private.alloy.
<unknown>
[%llu 
-[IDSDirectMessageConnection setDestinationDevice:]
IDSDirectMessageFireAndForget
-[IDSDirectMessageConnection isMessageEligible:options:destinationDevice:]
-[IDSDirectMessageConnection updateConnectedDevices:]
-[IDSDirectMessageConnection updateMetadata:]
directMsgAllowedForServices
com.apple.ids.direct-messaging
v20@?0i8Q12
peerIDForDirectMsg
pidForIDSD
IDSDirectMessaging
com.apple.ids
v20@?0i8@"NSObject<OS_nw_error>"12
dmsg-%s
v20@?0i8@"NSError"12
-[IDSDirectMessageConnection receivedDirectMessagingSocketWithContext:]
streamName
dmsg-
streamFlags
v36@?0@"NSObject<OS_dispatch_data>"8@"NSObject<OS_nw_content_context>"16B24@"NSObject<OS_nw_error>"28
v16@?0@"NSObject<OS_nw_error>"8
-[IDSDirectMessageConnection sendAppAckWithGUID:]
v24@?0C8I12*16
-[IDSDirectMessageConnection sendMessageWithParameters:options:]
ids-dm-%@
IDSLocalStatisticsCategory
IDSLocalOutgoingMessageBytes
IDSLocalOutgoingMessages
IDSLocalIncomingMessageBytes
IDSLocalIncomingMessages
IDS Local Network Stats
com.apple.madrid
com.apple.ess
com.apple.private.ac
com.apple.private.alloy.facetime.video
com.apple.private.alloy.facetime.audio
com.apple.private.alloy.facetime.mw
com.apple.private.alloy.facetime.multi
com.apple.private.alloy.bulletinboard
com.apple.private.alloy.photostream
com.apple.private.alloy.maps
com.apple.private.alloy.screensharing
com.apple.private.alloy.sms
com.apple.private.alloy.multiplex1
com.apple.private.alloy.biz
v32@?0@"NSData"8@"NSData"16@"NSUUID"24
Encryption failed - plaintext larger than GCM can support for topic %@ data.length %lu
Encryption failed - failed to create CommonCrypto cryptor for topic %@ error %ld
-[IDSGroupSessionDataCryptor encryptData:sequenceNumber:error:]
IDSGroupSessionDataCryptor.m
0 == SecRandomCopyBytes(kSecRandomDefault, IDSGROUPSESSIONCRYPTOR_NONCE_SIZE_NBYTES, nonceBytes)
Encryption failed - CommonCryptor failed to set IV for topic %@ error %ld
Encryption failed - CommonCryptor failed to add AAD for topic %@ error %ld
Encryption failed - CommonCryptor failed to encrypt for topic %@ error %ld
Encryption failed - CommonCryptor failed to create auth tag for topic %@ error %ld
Encryption failed - CommonCryptor failed to reset for topic %@ error %ld
Decryption failed - data has insufficient bytes to decrypt for topic %@ keyID %@
Decryption failed - unknown keyID %@
Decryption failed - CommonCryptor fails to create cryptor for topic %@ keyID %@ error %ld
Decryption failed - unknown version for topic %@ keyID %@ version %u
Decryption failed - CommonCryptor fails to set IV for topic %@ keyID %@ error %ld
Decryption failed - CommonCryptor failed to decrypt for topic %@ keyID %@ error %ld
Decryption failed - failed to verify auth tag for topic %@ keyID %@ error %ld
Decryption failed - CommonCryptor failed to reset for topic %@ keyID %@ error %ld
{Class:%@, Topic:%@, EncryptionKeyID:%@, DecryptionKeyCount:%lu}
{Object:%p, Class:%@, Topic:%@, EncryptionKeyID:%@, DecryptionKeys:%@}
topic
encryptingKeyID
encryptingKey
encryptingKeySalt
decryptingKeyIDs
decryptingKeys
decryptingKeySalts
-[IDSGroupSession initWithAccount:destinations:options:]
-[IDSGroupSession initWithAccount:options:]
-[IDSGroupSession _internal_sessionWithValidityCheck]
v16@?0Q8
session:
-[IDSGroupSession _internal]
%@%u
groupsession
0.0.0.0
3030
IDSGroupAgent
IDSReportiMessageSpam
IDSReportiMessageSpam.m
IDSReportiMessageUnknownSenderWithBlackholeAndJunkStatus
IDSCheckiMessageUnknownSender
_IDSScheduleTimeoutForReportiMessageSpamCheckUnkownCompletionBlock
_IDSScheduleTimeoutForAnyCompletionBlock
_IDSListenForReportiMessageSpamResponses
__IDSServiceAvailabilityDidChangeNotification
availability
service
IDSDaemonListener-ivarQueue: %@
IDSDaemonListenerContext
v16@?0@"<IDSDaemonListenerProtocol>"8
v32@?0@8Q16^B24
-[IDSDaemonListener accountAdded:]
-[IDSDaemonListener accountRemoved:]
com.apple.private.alloy.voicemailsync
v32@?0@"NSDictionary"8Q16^B24
serviceInfo
enabledAccountsInfo
dependentDevices
linkedDevices
familyInfo
familyDevices
pendingInvitationMap
receivedInvitationMap
maxMessageSizes
deviceIdentifier
activeDeviceUniqueID
v12@?0B8
-[_IDSRealTimeEncryptionProxy initWithAccount:]
-[_IDSRealTimeEncryptionProxy setDelegate:queue:]
-[_IDSRealTimeEncryptionProxy sendPrekeyToGroup:]
-[_IDSRealTimeEncryptionProxy requestPublicKeys]
-[_IDSRealTimeEncryptionProxy sendMasterKeyMaterialToGroup:]
-[_IDSRealTimeEncryptionProxy requestMasterKeyMaterialForGroup:]
-[_IDSRealTimeEncryptionProxy sendMKMRecoveryRequestToGroup:]
-[_IDSRealTimeEncryptionProxy resetKeysForGroup:]
object-type
public-keys
master-key-materials
com.apple.ids.activity.error
presence
presence-subscription-ttl-sec
@16@?0@"IDSDevice"8
 tokens: %@
 URIs: %@
 deviceUniqueIDs: %@
<%@: %p; subactivity: %@ expirationDate: %@%@>
subActivity
appcontext
deviceids
tokens
uris
expirationDate
<%@: %p; subActivity: %@; pushToken: %@; serverTimestamp: %llu; clientContext: %@>
subactivity
pushtoken
servertimestamp
clientcontext
online
%@-%@
v16@?0@"<IDSXPCActivityMonitor>"8
v20@?0B8@"NSError"12
v24@?0@"<IDSXPCActivityMonitor>"8@"NSError"16
v16@?0@"NSError"8
v24@?0@"NSArray"8@"NSError"16
IDSInvitations-defaultQueue
Failed to validate strict decoding for invitation
IDSInvitationIsSenderMergeIdCheckEnabled
IDSServerMessagingErrorDomain
timeout
fromStorage
cdContext
identifier
v16@?0@"IDSXPCDaemonController"8
IDSRegistrationControlDisableRegistrationType
IDSRegistrationControl.m
IDSRegistrationControlEnableRegistrationType
IDSRegistrationControlGetStateForRegistrationType
v16@?0@"<IDSDaemonProtocol>"8
IDSRegistrationControlSyncGetStateForRegistrationType
v24@?0q8@"NSError"16
_IDSScheduleTimeoutForRegistrtionControlActionCompletionBlock
_IDSScheduleTimeoutForAnyCompletionBlockWithSync
_IDSListenForRegistrationControlResponses
_IDSScheduleTimeoutForRegistrtionControlStateCompletionBlock
_IDSScheduleSyncTimeoutForRegistrtionControlStateCompletionBlock
IDSSignInControllerErrorDomain
IDSSignInControllerInternalErrorDomain
IDSSignInControllerErrorAccountKey
<%@: %p> Type: %@ Status: %@
<%@: %p> Service: %@ Infos: %@
com.apple.identityservices.IDSSignInController
-[IDSSignInController enableUserType:onService:completion:]
v24@?0@"IDSAccount"8@"IDSAccountController"16
-[IDSSignInController disableUserType:onService:completion:]
@16@?0@"IDSAccount"8
-[IDSSignInController statusOfUsersOnService:withCompletion:]
-[IDSSignInController provideCredential:forUser:onService:withCompletion:]
FaceTime
iMessage
v28@?0@"NSString"8@"NSString"16B24
-[IDSSignInController signInUsername:onService:waitUntilRegistered:withCompletion:]
-[IDSSignInController signInUsername:withProvidedCredential:onService:waitUntilRegistered:completion:]
-[IDSSignInController signOutService:completion:]
B16@?0@"IDSSignInControllerAccountDescription"8
v24@?0q8q16
@"NSCountedSet"16@?0@"NSArray"8
%llu,%llu
Phone
AppleID
SignedOut
Disabled
Enabled
Pending
direction
-[IDSSession initWithAccount:destinations:transportType:]
-[IDSSession initWithAccount:destinations:options:]
-[IDSSession _initWithAccount:destinations:transportType:uniqueID:]
-[IDSSession _internal]
v32@?0@"NSString"8@"NSDictionary"16^B24
v16@?0@"<IDSIDQueryControllerDelegate>"8
void IDSSimulatedLocalPairingAddPairedDevice(NSUUID *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
IDSSimulatorLocalPairingAddPairedDevice
IDSSimulatorSupport
void IDSSimulatedLocalPairingDeletePairedDevice(NSUUID *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
IDSSimulatorLocalPairingDeletePairedDevice
void IDSSimulatedLocalPairingSwitchActivePairedDevice(NSUUID *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
IDSSimulatorLocalPairingSwitchActivePairedDevice
IDSFirewall.m
Invalid parameter not satisfying: %@
completion
-[IDSFirewall populateImpactedServices:]
v24@?0@"NSSet"8@"NSError"16
-[IDSFirewall donateEntries:withCompletion:]
v16@?0@"<IDSXPCFirewall>"8
-[IDSFirewall removeDonatedEntries:withCompletion:]
-[IDSFirewall removeEntries:withCompletion:]
-[IDSFirewall replaceDonatedEntriesWithEntries:withCompletion:]
-[IDSFirewall replaceAllEntriesWithEntries:withCompletion:]
-[IDSFirewall currentDonatedEntries:]
-[IDSFirewall currentEntries:]
-[IDSFirewall removeAllDonatedEntries:]
-[IDSFirewall removeAllEntries:]
-[IDSFirewall recentlyBlockedEntries:]
<IDSFirewall %p>: Service %@ Queue %@ ImpactedServices %@
IDSIDQueryControllerErrorDomain
destinations
IDSBatchIDQueryControllerQueue
com.apple.IDSDaemonRequestConnectionQueue
portName
setupInfo
setup-request
response
granted
v28@?0@"NSObject<OS_xpc_object>"8@"NSDictionary"16B24
mach-lookup
IDSSendMessageOptionTimeout
IDSSendMessageOptionSkipPayloadCheck
IDSSendMessageOptionTopLevelDictionary
IDSSendMessageOptionDirectMessaging
IDSSendMessageOptionDataToEncrypt
IDSSendMessageOptionWantsResponse
IDSSendMessageOptionFromID
IDSSendMessageOptionCommand
IDSSendMessageOptionWantsDeliveryStatus
IDSSendMessageOptionWantsCertifiedDelivery
IDSSendMessageOptionDeliveryStatusContext
IDSSendMessageOptionUUID
IDSSendMessageOptionAlternateCallbackIdentifier
IDSSendMessageOptionEncryptPayload
IDSSendMessageOptionCompressPayload
IDSSendMessageOptionFireAndForget
IDSSendMessageOptionWantsClientAcknowledgement
IDSSendMessageOptionLocalDelivery
IDSSendMessageOptionForceLocalDelivery
IDSSendMessageOptionRequireBluetooth
IDSSendMessageOptionRequireLocalWiFi
IDSSendMessageOptionDuet
IDSSendMessageOptionExpectsPeerResponse
IDSSendMessageOptionPeerResponseIdentifier
IDSSendMessageOptionOpportunisticDuet
IDSSendMessageOptionTethering
IDSSendMessageOptionActivityContinuation
IDSSendMessageOptionNSURLSession
IDSSendMessageOptionMapTile
IDSSendMessageOptionNonWaking
IDSSendMessageOptionBypassDuet
IDSSendMessageOptionFakeMessage
IDSSendMessageOptionRequireAllRegistrationProperties
IDSSendMessageOptionRequireLackOfRegistrationProperties
IDSSendMessageOptionInterestingRegistrationProperties
IDSSendMessageOptionQueueOneIdentifier
IDSSendMessageOptionDuetIdentifiersOverride
IDSSendMessageOptionSockPuppet
IDSSendMessageOptionEnforceRemoteTimeouts
IDSSendMessageOptionAccessToken
IDSSendMessageOptionHomeKitMessage
IDSSendMessageOptionDisableAliasValidation
IDSSendMessageOptionForceEncryptionOff
IDSSendMessageOptionSubServiceKey
IDSSendMessageOptionAllowCloudDeliveryKey
IDSSendMessageOptionAlwaysSkipSelfKey
IDSSendMessageOptionNonCloudWakingKey
IDSSendMessageOptionMetricReportIdentifier
IDSSendMessageOptionLiveMessageDelivery
IDSSendMessageOptionWantsProgress
IDSSendMessageOptionDropMessageIndicator
IDSSendMessageOptionOriginalTimestampKey
IDSSendMessageOptionPushPriority
IDSSendMessageOptionPublicMessageIntent
IDSSendMessageOptionDeliveryTimeKey
IDSSendMessageOptionDeliveryMinimumTimeKey
IDSSendMessageOptionSendModeKey
IDSSendMessageOptionWantsFirewallDonation
-[IDSConnection _initWithAccount:commands:indirectDelegateCallouts:]
-[IDSConnection _internal]
groupSessionID
salt
serviceName
Unable to create nw_connection. The failure was caused due to invalid parameters or not being able to extract the address from the socket.
Error
%F %T 
%-6u %p %s 
IDSTransactionLogErrorDomain
Family handles not loaded on service.
Could not send to non family member.
_IDSPasswordManager.m
This method should only be run on clients
localParticipantID
remoteParticipantID
connectionIndex
dataMode
com.apple.identityservicesd.nsxpc
-[IDSPairedDeviceManager setAllowedTrafficClassifiers:]_block_invoke
-[IDSPairedDeviceManager deletePairedDevice:withCompletionBlock:queue:]_block_invoke_4
-[IDSPairedDeviceManager getLocalDeviceInfoWithCompletionBlock:queue:]
v24@?0@"NSDictionary"8@"NSError"16
-[IDSPairedDeviceManager getPairedDeviceInfoWithCompletionBlock:queue:]
-[IDSPairedDeviceManager getDeliveryStatsWithCompletionBlock:queue:]
IDSPhoneCertificateVendorErrorDomain
<%@: %p authenticationCertificateSignatures: %@>
com.apple.IDS.IDSPhoneCertificateVendor
An unknown error occurred
Failed to fetch local phone authentication certificate
Failed to fetch carrier token
Failed to generate phone authentication signature
Request timed out waiting for response from daemon
The requested operation is not supported on this platform
Unknown phone certificate error
@16@?0@"NSData"8
TEST_IMEI
TEST_NONCE
v24@?0@"IDSCarrierToken"8@"NSError"16
FTSelectedPNRSubscription
FTServices
cfs_client_blob_set_get_blob
IDSCFSClient.c
index < set->count
cfs_client_create
callback != NULL
tcp_connect failed, errno: %d
pthread_create failed, errno: %d
cfs_client_destroy
client->fd >= 0
client->isrunning
shutdown failed, errno: %d
pthread_join failed, errno: %d
start
size > 0
read failed, errno: %d
n == DESERIALIZER_SUCCESS
bad reply type: %d
connection closed
DESERIALIZER_BAD_DATA
deserialize failed
IDSXPCConnectionRemoteObjectPromise.m
IDSXPCConnectionRemoteObjectPromise can only be fulfilled once
XPC methods must have void return values {selector: %@}
-[IDSAccountController _initWithService:onIDSQueue:]
-[IDSAccountController _initWithService:]
-[IDSAccountController initWithService:]
-[IDSAccountController _internal]
IDSGroupSessionParticipantUpdateParticipantIdentifierKey
-[_IDSGroupSession initWithAccount:destinations:options:delegateContext:]
forceUPlusOneSession
FixedConferenceServerAddress
-[_IDSGroupSession invalidate]
-[_IDSGroupSession daemonDisconnected]
-[_IDSGroupSession _broadcastNewSessionToDaemon]
-[_IDSGroupSession _callDelegateWithBlock:]
-[_IDSGroupSession setDelegate:queue:]
-[_IDSGroupSession uniqueID]
-[_IDSGroupSession updateMembers:withContext:triggeredLocally:]
-[_IDSGroupSession updateMembers:withContext:messagingCapabilities:triggeredLocally:]
-[_IDSGroupSession manageDesignatedMembers:withType:]
-[_IDSGroupSession removeParticipantIDs:]
-[_IDSGroupSession updateParticipantData:withContext:]
-[_IDSGroupSession setParticipantInfo:]
-[_IDSGroupSession updateParticipantType:members:withContext:triggeredLocally:]
currentDestinationsLightweightStatus
v32@?0@"NSString"8@16^B24
-[_IDSGroupSession joinWithOptions:]
joinGroupSessionError
Cannot join a session that is already ended.
%@ joinWithOptions: %@
_IDSGroupSession.m
Cannot join a session without the participant data information.
-[_IDSGroupSession leaveGroupSessionWithOptions:]
-[_IDSGroupSession reconnectUPlusOneSession]
-[_IDSGroupSession setPreferences:]
-[_IDSGroupSession setRequiredCapabilities:requiredLackOfCapabilities:]
-[_IDSGroupSession sessionEndedReason]
-[_IDSGroupSession requestActiveParticipants]
-[_IDSGroupSession requestURIsForParticipantIDs:completionHandler:]
No participants provided.
GroupSession is invalidated.
-[_IDSGroupSession registerPluginWithOptions:]
options[IDSGroupSessionPluginNameKey]
-[_IDSGroupSession unregisterPluginWithOptions:]
-[_IDSGroupSession requestEncryptionKeyForParticipants:]
-[_IDSGroupSession _checkAndSendDataCryptor]
v24@?0@"IDSGroupEncryptionKeyMaterial"8^B16
-[_IDSGroupSession requestDataCryptorForTopic:completionHandler:]
-[_IDSGroupSession createSessionIDAliasWithSalt:delegateQueueCompletionHandler:]
-[_IDSGroupSession createAliasForParticipantID:salt:delegateQueueCompletionHandler:]
-[_IDSGroupSession createAliasForLocalParticipantIDWithSalt:delegateQueueCompletionHandler:]
-[_IDSGroupSession getParticipantIDForAlias:salt:delegateQueueCompletionHandler:]
-[_IDSGroupSession session:didReceiveReport:]
Session %@ full received report: %@
v16@?0@"<IDSGroupSessionDelegate>"8
-[_IDSGroupSession groupSessionDidTerminate:]
-[_IDSGroupSession groupSessionEnded:withReason:error:]
-[_IDSGroupSession sessionDidJoinGroup:participantsInfo:error:]
Group session %@ existing participants for did join %@
-[_IDSGroupSession sessionDidJoinGroup:participantInfo:error:]
Group session %@, existing participants for did join %@
-[_IDSGroupSession sessionDidJoinGroup:participantUpdateDictionary:error:]
-[_IDSGroupSession sessionDidLeaveGroup:error:]
-[_IDSGroupSession session:participantDidJoinGroupWithInfo:]
-[_IDSGroupSession session:participantDidLeaveGroupWithInfo:]
-[_IDSGroupSession session:didReceiveActiveParticipants:success:]
didReceiveActiveParticipants: %@ for group session: %@
-[_IDSGroupSession session:didReceiveActiveLightweightParticipants:success:]
didReceiveActiveLightweightParticipants: %@ for group session: %@
-[_IDSGroupSession session:didRegisterPluginAllocationInfo:]
-[_IDSGroupSession session:didUnregisterPluginAllocationInfo:]
-[_IDSGroupSession session:didReceiveBlockedParticipantIDs:withCode:withType:isTruncated:]
-[_IDSGroupSession session:didReceiveQueryBlockedParticipantIDs:withCode:isTruncated:]
-[_IDSGroupSession session:didRemoveParticipantIDs:withCode:isTruncated:]
-[_IDSGroupSession session:didReceiveKeyMaterial:]
-[_IDSGroupSession session:shouldInvalidateKeyMaterialByKeyIndexes:]
-[_IDSGroupSession sessionDidReceiveParticipantUpgrade:participantType:error:]
-[_IDSGroupSession session:didReceiveParticipantIDs:withCode:managementType:]
-[_IDSGroupSession session:didReceiveURIsForParticipantIDs:withRequestID:]
-[_IDSGroupSession participantUpdatedForSession:]
-[_IDSGroupSession session:hasOutdatedSKI:]
-[_IDSGroupSession session:didCreateParticipantIDAlias:forParticipantID:salt:]
-[_IDSGroupSession session:didReceiveParticipantID:forParticipantIDAlias:salt:]
v32@?0@"IMPair"8Q16^B24
-[_IDSGroupSession session:didReceiveDataBlob:forParticipant:]
-[_IDSGroupSession session:didReceiveData:dataType:forParticipant:]
-[_IDSGroupSession session:didReceiveServerErrorCode:]
session-device-socket
sessionID
error
%llu
kIDSGroupContextControllerPersistedToken
kIDSGroupContextControllerListenerID
v24@?0@"IDSGroupContextControllerContent"8@"NSError"16
v24@?0@"ENGroup"8@"NSError"16
v16@?0@"CUTAsyncReducerState"8
v16@?0@"CUTResult"8
v24@?0@"ENGroupContext"8@"NSError"16
v16@?0@"NSArray"8
v36@?0@"NSArray"8B16@"IDSCloudKitTransportLogChangeToken"20@"NSError"28
v16@?0@"ENGroup"8
FixedQuickRelayServerAddress
FixedQuickRelaySessionID
FixedQuickRelaySessionToken
FixedQuickRelaySessionKey
sessionInfo
-[_IDSConnection initWithAccount:commands:indirectDelegateCallouts:delegateContext:]
-[_IDSConnection createDirectMessageConnectionIfNeeded]
-[_IDSConnection account]
-[_IDSConnection isActive]
-[_IDSConnection addDelegate:queue:completion:]
v16@?0@?<v@?>8
-[_IDSConnection _callDelegatesRespondingToSelector:withPreCallbacksBlock:callbackBlock:postCallbacksBlock:group:]
-[_IDSConnection setDelegateCapabilities:]
IDSConnection
allowlistedidsservices
IDSClientBringsUpCloudMessaging
Force Cloud Messaging
IDSActivityContinuationIdentifier
IDSOpportunisticDuetIdentifier
q24@?0@"NSString"8@"NSString"16
Warning, missing %@ to add to %s
unknown type
-[_IDSConnection sendProtobuf:toDestinations:priority:options:identifier:error:]
Cannot send to empty destination set
Cannot send with an inactive account
Cannot send payload of this size
Invalid address: %@
protobuf
Could not find account uniqueID!
-[_IDSConnection sendMessage:toDestinations:priority:options:identifier:error:]
Cannot send empty message
URGENT
Default
Sync
message (dictionary)
Could not plist serialize dictionary or otherwise empty payload
-[_IDSConnection sendData:toDestinations:priority:options:identifier:error:]
data
-[_IDSConnection sendInvitation:toDestination:priority:options:identifier:error:]
Invitation has expired
invitation (send)
-[_IDSConnection sendInvitationUpdate:toDestination:priority:options:identifier:error:]
invitation (update)
-[_IDSConnection sendServerMessage:command:]
-[_IDSConnection account:isActiveChanged:]
v16@?0@"<IDSConnectionDelegate>"8
-[_IDSConnection account:devicesChanged:]
-[_IDSConnection account:nearbyDevicesChanged:]
-[_IDSConnection account:connectedDevicesChanged:]
-[_IDSConnection _connect]
-[_IDSConnection _resendPendingSends]
-[_IDSConnection daemonConnected]
-[_IDSConnection messageIdentifierInner:alternateCallbackID:forAccount:updatedWithResponseCode:error:lastCall:context:isDirectMessage:]
Unknown error
-[_IDSConnection messageIdentifier:alternateCallbackID:forAccount:willSendToDestinations:skippedDestinations:registrationPropertyToDestinations:]
-[_IDSConnection messageIdentifier:forTopic:toIdentifier:fromIdentifier:hasBeenDeliveredWithContext:]
app-level ack
-[_IDSConnection didSendOpportunisticDataWithIdentifier:onAccount:toIDs:]
-[_IDSConnection messageReceived:withGUID:withPayload:forTopic:toIdentifier:fromID:context:]
message
-[_IDSConnection dataReceived:withGUID:forTopic:toIdentifier:fromID:context:]
-[_IDSConnection engramDataReceived:withGUID:forTopic:toIdentifier:fromID:context:]
-[_IDSConnection accessoryDataReceived:withGUID:forTopic:toIdentifier:fromID:context:]
-[_IDSConnection accessoryReportMessageReceived:accessoryID:controllerID:withGUID:forTopic:toIdentifier:fromID:context:]
accessoryReportMessage
-[_IDSConnection protobufReceived:withGUID:forTopic:toIdentifier:fromID:context:]
(unknown)
-[_IDSConnection receivedMetadataForDirectMessaging:]
direct-messaging-socket-received
object-flags
object-recipient
-[_IDSConnection didFlushCacheForService:remoteURI:fromURI:guid:]
flush cache notification
-[_IDSConnection pendingIncomingMessageWithGUID:forTopic:toIdentifier:fromID:context:]
pending
-[_IDSConnection sessionInvitationReceivedWithPayload:forTopic:sessionID:toIdentifier:fromID:transportType:]
session invitation
-[_IDSConnection receivedGroupSessionParticipantUpdate:forTopic:toIdentifier:fromID:context:]
group session participant update
-[_IDSConnection receivedGroupSessionParticipantDataUpdate:forTopic:toIdentifier:fromID:]
group session participant data update
-[_IDSConnection checkTransportLogWithReason:]
ClientSessionStore
-[_IDSSessionStore sessionForAccount:fromID:identifier:transportType:]
com.apple.identityservicesd.nsxpc.auth
v16@?0@"NSMutableSet"8
-[IDSQuickSwitchAcknowledgementTracker awaitAcknowledgementFromServiceDelegate:]
Registration
-[IDSQuickSwitchAcknowledgementTracker identifierForServiceDelegate:]
%@ (%p)
-[IDSQuickSwitchAcknowledgementTracker stopAwaitingAcknowledgementFromServiceDelegateWithIdentifier:]
-[IDSQuickSwitchAcknowledgementTracker stopAwaitingAcknowledgementFromAllServiceDelegates]
/Library/Caches/com.apple.xbs/Sources/IdentityServices_Sim/IDS/IDSDataChannelsUtils.m
IDSLocalPairingAddPairedDevice
IDSLocalPairing.m
void IDSLocalPairingAddPairedDevice(NSUUID *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
cbuuid
block
queue
v16@?0@"<IDSXPCPairing>"8
IDSLocalPairingAddPairedDeviceWithInfo
void IDSLocalPairingAddPairedDeviceWithInfo(IDSLocalPairingAddPairedDeviceInfo *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
info
IDSLocalPairingUpdatePairedDevicePairingType
void IDSLocalPairingUpdatePairedDevicePairingType(NSUUID *__strong, IDSPairingType, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
@(pairingType)
IDSLocalPairingConnectPairedDevice
void IDSLocalPairingConnectPairedDevice(NSUUID *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
IDSLocalPairingSetupCompletedForPairedDevice
void IDSLocalPairingSetupCompletedForPairedDevice(NSUUID *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
IDSLocalPairingSwitchActivePairedDevice
void IDSLocalPairingSwitchActivePairedDevice(NSUUID *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
IDSLocalPairingDisconnectActivePairedDevice
void IDSLocalPairingDisconnectActivePairedDevice(__strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
IDSLocalPairingRedeliverMessages
void IDSLocalPairingRedeliverMessages(IDSDevice *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
deviceUniqueID
IDSLocalPairingDeletePairedDevice
void IDSLocalPairingDeletePairedDevice(NSUUID *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
IDSLocalPairingUnpairStartForDevice
void IDSLocalPairingUnpairStartForDevice(NSUUID *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
IDSLocalPairingStopForDevice
void IDSLocalPairingStopForDevice(NSUUID *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
IDSLocalPairingUnpairForDevice
void IDSLocalPairingUnpairForDevice(NSUUID *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
IDSLocalPairingForgetPairedDevice
void IDSLocalPairingForgetPairedDevice(NSUUID *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
IDSLocalPairingGetPairingDevicesWithCompletionBlock
void IDSLocalPairingGetPairingDevicesWithCompletionBlock(__strong IDSLocalPairingPairedDevicesCompletionBlock, __strong dispatch_queue_t)
IDSLocalPairingGetPairedDevicesWithCompletionBlock
void IDSLocalPairingGetPairedDevicesWithCompletionBlock(__strong IDSLocalPairingPairedDevicesCompletionBlock, __strong dispatch_queue_t)
IDSLocalPairingGetPairingRecordsWithCompletionBlock
void IDSLocalPairingGetPairingRecordsWithCompletionBlock(__strong IDSLocalPairingPairingRecordsCompletionBlock, __strong dispatch_queue_t)
v32@?0@"IDSLocalPairingLocalDeviceRecord"8@"NSDictionary"16@"NSError"24
IDSLocalPairingSetAllowedTrafficClassifiersForDevice
void IDSLocalPairingSetAllowedTrafficClassifiersForDevice(NSSet *__strong, IDSDevice *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
classifiers
IDSLocalPairingGetAllowedTrafficClassifiersForDevice
void IDSLocalPairingGetAllowedTrafficClassifiersForDevice(IDSDevice *__strong, __strong IDSLocalPairingTrafficClassifiersCompletionBlock, __strong dispatch_queue_t)
IDSLocalPairingDropAllMessagesWithoutAnyAllowedTrafficClassifier
void IDSLocalPairingDropAllMessagesWithoutAnyAllowedTrafficClassifier(IDSDevice *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
IDSLocalPairingReunionSyncStartedForServices
void IDSLocalPairingReunionSyncStartedForServices(NSArray *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
IDSLocalPairingReunionSyncCompletedForServices
void IDSLocalPairingReunionSyncCompletedForServices(NSArray *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
kcbuuid
kPairingProtocolVersion
kBTOutOfBandKey
kSupportsIPsecWithSPPLink
kBluetoothMACAddress
kShouldPairDirectlyOverIPsec
kPairingType
<%@: %p cbuuid: %@, pairingProtocolVersion: %ld, BTOutOfBandKey.length: %ld, supportsIPsecWithSPPLink: %ld, shouldPairDirectlyOverIPsec: %ld, bluetoothMACAddress.length: %ld, pairingType: %ld>
-[_IDSDeviceConnection initWithDevice:options:completionHandler:queue:]
completionHandlerID
protocol
Socket open timed out
-[_IDSDeviceConnection _connect]
-[_IDSDeviceConnection setStreamPairWithInputStream:outputStream:]
-[_IDSDeviceConnection updateConnectionWithOptions:error:]
Cannot change priority when not connected
Could not set traffic class for underlying socket
Invalid priority level specified
Options dictionary contains no valid options
-[_IDSDeviceConnection close]
device-socket
metrics
Error: %@
%@_%@
deserialize failed, bad magic number2
group name length is 0
group name is not 0-terminated
client blob size too big: %u
deserialize failed, bad magic number3
-[_IDSAccountController initWithService:delegateContext:]
-[_IDSAccountController accounts]
-[_IDSAccountController internalAccounts]
-[_IDSAccountController enabledAccounts]
-[_IDSAccountController serviceName]
-[_IDSAccountController addDelegate:queue:]
-[_IDSAccountController _callDelegatesRespondingToSelector:withPreCallbacksBlock:callbackBlock:postCallbacksBlock:group:]
-[_IDSAccountController _connect]
-[_IDSAccountController daemonDisconnected]
v16@?0@"<IDSAccountControllerDelegate>"8
-[_IDSAccountController _loadCachedAccountsWithDictionaries:]
@16@?0@8
-[_IDSAccountController _loadCachedAccounts]
-[_IDSAccountController accountWithUniqueID:]
-[_IDSAccountController accountWithLoginID:service:]
-[_IDSAccountController _setupAccountWithLoginID:accountConfig:authToken:password:completionHandler:]
-[_IDSAccountController setupAccountWithLoginID:aliases:password:completionHandler:]
status
-[_IDSAccountController addAccount:]
-[_IDSAccountController _removeAndDeregisterAccount:]
-[_IDSAccountController _removeAccount:]
-[_IDSAccountController _updateLocalAccountVisibility]
-[_IDSAccountController enableAccount:]
-[_IDSAccountController disableAccount:]
-[_IDSAccountController accountAdded:]
-[_IDSAccountController accountRemoved:]
-[_IDSAccountController accountUpdated:]
-[_IDSAccountController accountsChanged:forTopic:]
v24@?0@8^B16
-[_IDSAccountController setupCompleteForAccount:transactionID:setupError:]
IDSAccountController-setupCompleteQueue
-[_IDSAccountController accountEnabled:onService:]
-[_IDSAccountController accountDisabled:onService:]
IDSHardDeregister
IDSRegistrationReset.m
IDSTriggerFinalDeregister
IDSClearState
contextPayload
<IDSDictionaryInvitationContext %p>: schemaIdentifier %@ contextType %ld payload %@
@"NSXPCConnection"8@?0
pairing
v24@?0@"<IDSXPCDaemon>"8@?<v@?@@"NSError">16
pairedDeviceManager
reunionSync
opportunistic
registration
activityMonitor
serverMessaging
keyTransparency
firewall
groupSessionKeyValueDeliveryProvider
internalTesting
v24@?0@8@"NSError"16
kIdentityData
kError
kIdentityDataMap
Missing identity for class-%@
kCBUUID
<%@: %p cbuuid: %@ classA: %@, errorClassA: %@, classC: %@, errorClassC: %@, classD: %@, errorClassD: %@>
<%@: %p classA: %@, errorClassA: %@, classC: %@, errorClassC: %@, classD: %@, errorClassD: %@>
IDSKeyTransparencyManagerErrorDomain
-[IDSKeyTransparencyManager getKeyTransparencyOptInEligiblityForApplication:withCompletion:]
v16@?0@"<IDSXPCKeyTransparency>"8
-[IDSKeyTransparencyManager sendOptInUpdateForApplications:withCompletion:]
v16@?0@"IDSKTOptInResult"8
-[IDSKeyTransparencyManager sendOptInUpdateForApplicationsOptInState:withCompletion:]
KTSelfVerificationInfo
Class getKTSelfVerificationInfoClass(void)_block_invoke
IDSKeyTransparencyManager.m
NSString *getkKTApplicationIdentifierIDS(void)
kKTApplicationIdentifierIDS
NSString *getkKTApplicationIdentifierIDSFaceTime(void)
kKTApplicationIdentifierIDSFaceTime
NSString *getkKTApplicationIdentifierIDSMultiplex(void)
kKTApplicationIdentifierIDSMultiplex
-[IDSAccount _initWithDictionary:uniqueID:serviceName:]
-[IDSAccount initWithDictionary:uniqueID:serviceName:]
-[IDSAccount initWithLoginID:uniqueID:serviceName:]
-[IDSAccount _internal]
-[IDSAccount _isEnabled]
-[IDSAccount _setIsEnabled:]
%@: %p [Service: %@  User: %@  ID: %@  Type: %@  Active: %@  Registration Status: %@]
IDSiCloudSignInHack
IDSiCloudSignInHack.m
IDSiCloudSignOutHack
IDSKickGetDependent
IDSReRegister
IDSRepairAccounts
biz:
device:%@
guest-device:%@
No cloudID Provided
urn:ck:%@
Required Field Is Empty
A required Field Is Empty
ServiceUserID and AdminID can not be the same
groupSessionIDAlias
participantIDAlias
listeningPort
IDSGroupSessionUnicastConnector
PreSharedKey has Unexpected size.
Unknown parameter
Unable to create PSK.
Listener failed with error code %d
Listener cancelled
v16@?0@"NSObject<OS_nw_connection>"8
v16@?0@"NSObject<OS_nw_protocol_options>"8
v32@?0@"NSObject<OS_sec_protocol_metadata>"8@"NSObject<OS_sec_trust>"16@?<v@?B>24
groupsession:%@:ids:%@:L
Unable to create connection to the virtual participant.
IDSToolTestOnlyPSKIdentity
-[_IDSAccount initWithDictionary:uniqueID:serviceName:delegateContext:]
-[_IDSAccount initWithLoginID:uniqueID:serviceName:delegateContext:]
-[_IDSAccount _isiCloudPairingService]
com.apple.private.alloy.icloudpairing
-[_IDSAccount _isThumperService]
com.apple.private.alloy.thumper.keys
-[_IDSAccount _isMagnoliaService]
com.apple.private.alloy.ct.commcenter.sim.cloud
-[_IDSAccount addDelegate:queue:]
-[_IDSAccount _callDelegatesRespondingToSelector:withPreCallbacksBlock:callbackBlock:postCallbacksBlock:group:]
-[_IDSAccount addRegistrationDelegate:queue:]
-[_IDSAccount removeRegistrationDelegate:]
-[_IDSAccount _callRegistrationDelegatesWithBlock:]
-[_IDSAccount _objectForKey:]
-[_IDSAccount _setObject:forKey:]
-[_IDSAccount isInTransientRegistrationState]
-[_IDSAccount isActive]
-[_IDSAccount setAccountInfo:]
-[_IDSAccount accountInfo]
-[_IDSAccount profileInfo]
-[_IDSAccount canSend]
-[_IDSAccount aliases]
B16@?0@8
inbox.appleid.apple.com
-[_IDSAccount serviceName]
-[_IDSAccount primaryServiceName]
-[_IDSAccount uniqueID]
-[_IDSAccount _isEnabled]
-[_IDSAccount _setIsEnabled:]
-[_IDSAccount setRegionID:]
-[_IDSAccount setRegionBasePhoneNumber:]
-[_IDSAccount setDisplayName:]
-[_IDSAccount _updateDependentDevicesWithDevicesInfo:]
-[_IDSAccount _loadCachedDevices]
-[_IDSAccount _reloadCachedDevices]
-[_IDSAccount suppressedDevices]
-[_IDSAccount devices]
-[_IDSAccount nearbyDevices]
-[_IDSAccount connectedDevices]
-[_IDSAccount _callDevicesChanged]
v16@?0@"<IDSAccountDelegate>"8
-[_IDSAccount _callNearbyDevicesChanged]
-[_IDSAccount _callConnectedDevicesChanged]
-[_IDSAccount _callCloudConnectedDevicesChanged]
-[_IDSAccount _keychainRegistration]
-[_IDSAccount nextRegistrationDate]
next-registration-date
-[_IDSAccount dateRegistered]
registration-date
-[_IDSAccount _registeredURIs]
-[_IDSAccount registeredURIs]
-[_IDSAccount accountRegisteredURIs]
@16@?0@"NSString"8
-[_IDSAccount registrationCertificate]
ids-registration-cert
-[_IDSAccount pushToken]
push-token
-[_IDSAccount description]
<%p:%@:%@:%@:%@:%@:%@>
-[_IDSAccount _connect]
-[_IDSAccount account:registrationStatusInfoChanged:]
v16@?0@"<IDSAccountRegistrationDelegate>"8
-[_IDSAccount account:aliasesChanged:]
-[_IDSAccount account:vettedAliasesChanged:]
-[_IDSAccount account:profileChanged:]
-[_IDSAccount account:loginChanged:]
-[_IDSAccount account:displayNameChanged:]
-[_IDSAccount account:pseudonymsChanged:]
-[_IDSAccount account:dependentDevicesUpdated:]
-[_IDSAccount account:dependentDevicesUpdatedUponReconnect:]
-[_IDSAccount account:localDeviceAdded:]
-[_IDSAccount refreshRegistrationForAccount:]
+[IDSService serviceWithIdentifier:commands:manuallyAckMessages:completion:]
v24@?0@"_IDSService"8@"NSError"16
-[IDSService initWithService:commands:manuallyAckMessages:]
-[IDSService initWithService:serviceDomain:]
-[IDSService _internal]
-[IDSService activateAlias:]
-[IDSService activateAliases:]
-[IDSService deactivateAlias:]
-[IDSService deactivateAliases:]
B24@?0@"IDSAccount"8^B16
IDSService.m
requestProperties
LinkType
PacketsPerSecond
InputBytesPerSecond
OutputBytesPerSecond
Intent
Timestamp
IDSAppleCareSignIDSIn
IDSAppleCareSignIn.m
IDSAppleCareSignIDSOut
IDSAppleCareSetDaemonDisconnectedBlock
com.apple.registration
saveviewRegTimeout
IDSiCloudSignIn
IDSiCloudSignIn.m
IDSiCloudSignOut
IDSiCloudUpdate
IDSiCloudModify
IDSiTunesSignIn
IDSiTunesSignOut
IDSGameCenterSignIn
IDSGameCenterSignOut
IDSGameCenterModify
IDSDaemonRequestTimer.m
The request context map should be empty after canceling all countdowns.
+[_IDSService serviceWithIdentifier:commands:manuallyAckMessages:delegateContext:completion:]
-[_IDSService initWithService:commands:manuallyAckMessages:delegateContext:]
IDSSimulatorSupportRegisterDataHandler
v32@?0@"NSString"8@"NSData"16@"NSString"24
Couldn't soft link IDSSimulatorSupportRegisterDataHandler(). Just failing here
IDSSimulatorSupportUnregisterDataHandler
Couldn't soft link IDSSimulatorSupportUnregisterDataHandler(). Just failing here
Failed to deserialize data %p. error: %@
options
senderDeviceID
type
pbType
pbIsResponse
Failed to create IDSProtobuf from data %p
fileData
fileName
fileAttrs
Failed to create staging directory at %@ from data %p:%@
Failed to write file data to %@ from data %@: %@
Failed to set file attributes for %@ to %@ from data %p: %@
ackedMsgID
ackedSubService
v16@?0@"<IDSServiceDelegate>"8
IDSSimulatorSupportSendDataWithOptions
Failed to to archive ack dict %@ for message %@ on service %@ subservice %@
Failed to send ack for message %@ on service %@ subservice %@
v36@?0B8@"NSString"12@"NSError"20@"NSDictionary"28
Couldn't soft link IDSSimulatorSupportSendData(). Just failing here
-[_IDSService addDelegate:queue:]
v32@?0@8@"IDSConnection"16^B24
-[_IDSService _callDelegatesRespondingToSelector:withPreCallbacksBlock:callbackBlock:postCallbacksBlock:group:]
-[_IDSService daemonConnected]
-[_IDSService OTRTestCallback:time:error:]
-[_IDSService didSwitchActivePairedDevice:forService:wasHandled:]
v16@?0@"NSString"8
-[_IDSService _activeDeviceForUniqueID:]
-[_IDSService _callLinkedDevicesChanged]
-[_IDSService _logConnectionMap]
v32@?0@"NSString"8@"IDSConnection"16^B24
-[_IDSService _tearDownConnectionForUniqueID:]
-[_IDSService _callIsActiveChanged]
-[_IDSService accountController:accountAdded:]
-[_IDSService accountController:accountRemoved:]
-[_IDSService accountController:accountEnabled:]
-[_IDSService accountController:accountDisabled:]
-[_IDSService connection:incomingOpportunisticData:withIdentifier:fromID:context:]
-[_IDSService connection:incomingData:fromID:context:]
-[_IDSService connection:incomingGroupData:fromID:context:]
-[_IDSService connection:incomingAccessoryData:fromID:context:]
-[_IDSService connection:incomingAccessoryReportMessage:accessoryID:controllerID:context:]
-[_IDSService connection:incomingInvitation:fromID:context:]
-[_IDSService connection:incomingInvitationUpdate:fromID:context:]
-[_IDSService connection:incomingMessage:fromID:context:]
/Library/IdentityServices/files/
/Library/IdentityServices/incomingfiles/
v16@?0q8
-[_IDSService connection:incomingProtobuf:fromID:context:]
service:account:fromID:context:
-[_IDSService connection:incomingTopLevelMessage:fromID:messageContext:]
-[_IDSService connection:incomingPendingMessageFromID:context:]
-[_IDSService connection:incomingEngramMessage:fromID:context:]
IDSIncomingMessageDecryptedData
v36@?0@"NSData"8@"ENGroup"16@"NSError"24B32
-[_IDSService connection:isActiveChanged:]
-[_IDSService connection:devicesChanged:]
-[_IDSService _callDelegatesForDevicesChanged]
-[_IDSService connection:nearbyDevicesChanged:]
-[_IDSService connection:connectedDevicesChanged:]
-[_IDSService connection:messageIdentifier:alternateCallbackID:updatedWithResponseCode:error:lastCall:messageContext:]
-[_IDSService connection:identifier:alternateCallbackID:willSendToDestinations:skippedDestinations:registrationPropertyToDestinations:]
-[_IDSService connection:identifier:didSendWithSuccess:error:context:]
-[_IDSService connection:identifier:fromID:hasBeenDeliveredWithContext:]
-[_IDSService connection:didFlushCacheForRemoteURI:fromURI:guid:]
-[_IDSService connection:account:sessionInviteReceived:fromID:transportType:options:context:messageContext:]
-[_IDSService connection:account:receivedGroupSessionParticipantUpdate:context:]
-[_IDSService connection:account:receivedGroupSessionParticipantDataUpdate:]
-[_IDSService connection:didSendOpportunisticDataWithIdentifier:toIDs:]
-[_IDSService isPretendingToBeFull]
-[_IDSService setPretendingToBeFull:]
-[_IDSService serviceDomain]
-[_IDSService iCloudAccount]
-[_IDSService _filteredAccountsFrom:]
-[_IDSService accounts]
-[_IDSService internalAccounts]
-[_IDSService devices]
-[_IDSService serviceProperties]
-[_IDSService canSend]
-[_IDSService _loadCachedLinkedDevices]
-[_IDSService _updateLinkedDevicesWithDevicesInfo:]
-[_IDSService linkedDevicesWithRelationship:]
B16@?0@"IDSPseudonym"8
v16@?0@8
_IDSService.m
-[_IDSService updateSubServices:forDevice:]
-[_IDSService resendSubServicesToDaemonForCurrentDevice]
-[_IDSService setProtobufAction:forProtobufType:isResponse:]
-[_IDSService protobufActionForType:isResponse:]
com.apple.private.alloy.idscredentials
com.apple.private.alloy.maps.eta
com.apple.private.alloy.nearby
com.apple.private.alloy.willow
B16@?0@"IDSAccount"8
q24@?0@"IDSAccount"8@"IDSAccount"16
device:
-[_IDSService sendOpportunisticData:options:identifier:error:]
-[_IDSService _sendSimulatorMessage:fromAccount:toDestinations:priority:options:identifier:error:]
Failed to delete file at %@ after sending
simID
originalSimDestination
_IDSService
-[_IDSService _sendSimulatorProtobuf:fromAccount:toDestinations:priority:options:identifier:error:]
IDSSimulatorSupportGetCurrentConnectedSimulatorID
Out of space
-[_IDSService _sendSimulatorData:fromAccount:toDestinations:priority:options:identifier:error:]
-[_IDSService sendAccessoryData:toAccessoryID:accessToken:options:identifier:error:]
Could not find valid account
Service is not enabled for Invitations
Invalid priority
-[_IDSService sendData:priority:options:identifier:error:]
-[_IDSService sendServerMessage:command:fromAccount:]
-[_IDSService cancelIdentifier:error:]
-[_IDSService getProgressUpdateForIdentifier:error:]
-[_IDSService uriForFromID:]
+[_IDSService deviceForFromID:fromDevices:]
-[_IDSService deviceForFromID:]
-[_IDSService linkedDeviceForFromID:withRelationship:]
-[_IDSService devicesForBTUUID:]
-[_IDSService deviceForUniqueID:]
-[_IDSService setPreferInfraWiFi:]
-[_IDSService setLinkPreferences:]
-[_IDSService startOTRTest:]
-[_IDSService testCloudQRConnection]
Sending non-file resource unsupported
Unable to link or copy file
resourceTransferMessageDict
com.apple.identityservices.send
-[_IDSService sendAheadGroup:priority:options:identifier:completion:]
-[_IDSService sendAheadGroup:priority:options:identifier:completion:]_block_invoke
Destination device is not active for this account
v24@?0@"NSData"8@"NSError"16
-[_IDSService reportSpamMessage:]
-[_IDSService sendAckForMessageWithContext:]
Unable to create stream connection with destination
Unable to create datagram channel with destination
Unable to create datagram channel with socket descriptor
-[_IDSService groupContextController:didCreateGroup:]
-[_IDSService groupContextController:accountsForAlises:]
IDSSimulatorSupportErrorDomain
IDSSimulatorSupportOptionSetMessageIdentifier
_idsSimulatorSupportOptionsFromIDSSendOptions()
Failed to decode data of %lu bytes to a uuid string
<%@: %p change: %@; updateFlags: %@; pseudonym: %@>
Feature disabled
Server error
Internal server error
Invalid URI
Missing entitlements
Unable to send request
Pseudonym limit reached
Request failed
Max number of in flight provisions reached
Invalid parameters
URI not a token URI
Daemon disconnected
Service has no application key
Cannot perform query
Query failed
Query rate limited
Remote identity unregistered
Remote identity registered without signing key type
Unable to load signing key type
MessageProtection signing/verification error
Local device unregistered
SecKey signing/verification error
Failed to diversify key
.XXXX
addressbooksyncd
airplayutil
amsaccountsd
assistantd
Assistive Control
audioDeviceTest
audioperftest
Bridge
CallHistorySyncHelper
Carousel
carouseluitrigger
ClarityBoard
cloudpaird
com.apple.accessibility.AccessibilityUIServer
com.apple.audio.virtualaudio.IntegrationTests.xctrunner
com.apple.FTLivePhotoService
companion_proxy
companionappd
companioncamerad
companionfindlocallyd
companionmessagesd
coreautomationd
coreduetd
demod
diagnosticextensionsd
ekgremlin
eventkitsyncd
fmflocatord
gamed
homeutil
HomeKitTestHostApp
IDSInvitationTestApp
idsrelay
idstool
IMAP Unit Tests-Runner
IMNotificationServiceAgent
IntegrationTests-Runner
iosdiagnosticsd
iTester
itesterd.mobile
itunescloudd
Legacy Account Migration Tests-
livabilityd
loctilestool
mediaremoted
Messages Catalyst
MessageUnitTests-Runner
MessagesViewService
minilab
mobiletimerd
mstreamd
Music
nanoappregistryd
nanobackupd
nanofindlocallyd
nanomediaremotelinkagent
nanomessagesd
nanonewscd
nanonewsgd
nanopassd
nanophoned
nanophotosd
nanoprefsyncd
nanoregistryd
NanoSettings
nanosubridged
nanosystemsettingsd
nanotimekitcompaniond
nanotimekitd
NPKCompanionAgent
nptocompaniond
NTKFaceSnapshotService
pairedunlockd
passutil
Pineboard
Preferences
proactiveeventtrackerd
ProtectedCloudKeySyncing
ProxiedCrashCopier
ratescalar
remotemediaservicesd
resourcegrabberd
SafeView
ScreenSharingServer
screenshotsyncd
searchpartyuseragent
seserviced
Setup
sosd
SoundBoard
SpringBoard
SSInvitationAgent
subridged
symptomsd-diag
syncgen
sysdiagnose
taptoradard
timed
tipsd
ToolChestAgent
tursd
UnitTests-Runner
utilitybeltd
wifid
WirelessRadioManagerd
xctest
Added
Removed
Updated
Unknown
IDSTransactionLogMessageAccountUniqueIDKey
IDSTransactionLogMessageFromIDKey
IDSTransactionLogMessageLoginIDKey
IDSTransactionLogMessageServiceNameKey
IDSTransactionLogMessageDictionaryValueKey
IDSTransactionLogMessageDataValueKey
com.apple.springboard
service-cache-request
transactionID
is-springboard
cache
cached-id-status-query
respect-expiry
id-status-query
force
bypass-limit
remote-device-status-query
destination
disallow-query
id-status-info-query
info-types
id-info-options
IDSPhoneSubscriptionSelectorErrorDomain
subSlot
subLableID
<%@: %p; slot: %d; labelID: %@>
expiration
selected
<%@: %p; URI: %@, expirationDate: %@, selected: %@>
@"IDSXPCDaemonController"16@?0@"NSObject<OS_dispatch_queue>"8
-[IDSPhoneSubscriptionSelector requestSelectedSubscriptionsWithCompletion:]
v16@?0@"<IDSXPCRegistration>"8
-[IDSPhoneSubscriptionSelector selectSubscription:withCompletion:]
Subscription info is nil
-[IDSPhoneSubscriptionSelector unselectSubscription:withCompletion:]
-[IDSPhoneSubscriptionSelector setSelectedSubscriptions:withCompletion:]
Subscription infos is nil
-[IDSPhoneSubscriptionSelector removeTemporaryPhoneAlias:withCompletion:]
Alias is nil
-[IDSPhoneSubscriptionSelector disableTemporaryPhoneAlias:withCompletion:]
-[IDSPhoneSubscriptionSelector enableTemporaryPhoneAlias:withCompletion:]
-[IDSPhoneSubscriptionSelector requestUnselectedTemporaryPhoneAliasesWithError:]
v24@?0@"<IDSXPCRegistration>"8@"NSError"16
-[IDSPhoneSubscriptionSelector selectSubscription:withError:]
-[IDSPhoneSubscriptionSelector unselectSubscription:withError:]
-[IDSPhoneSubscriptionSelector setSelectedSubscriptions:withError:]
-[IDSPhoneSubscriptionSelector removeTemporaryPhoneAlias:withError:]
-[IDSPhoneSubscriptionSelector enableTemporaryPhoneAlias:withError:]
-[IDSPhoneSubscriptionSelector disableTemporaryPhoneAlias:withError:]
v24@?0@"<IDSXPCGroupSessionKeyValueDelivery>"8@"NSError"16
XPC doesn't set up
Unknown account type
Unknown service
Empty user name
Empty service name
Process not entitled
Component disconnected
Component crashed
Remote user isn't registered
Attachment send failed
Encryption failed
Message send failed
Invalid caller id
Payload is too big to send
Unknown exception
Timed out
The destination device for this message was not connected before the timeout fired
This message was written into the connection, but did not receive an ack.  Check Bluetooth conditions and that your process is not hung on the receiver.
This message was a non-waking message and the destination device for this message did not wake before the timeout fired
Replaced
Device Unpaired
Bluetooth required
No space
Cannot read resource
Data protection class unavailable
Remote device is locked.
Database filled up
Revision lock forced failure
Service version not compatible
Destination device is no longer the active device
Destination device for this message was inactive for an extended period
A over C encryption is not available at this time
Class A encryption keys are not available at this time
Send to Tinker default paired device
Phone number not bounded to an Apple ID is not supported for family services.
No error
Invalid state
Operation failed
com.apple.Transport
IDSService
QRAllocator
IDSDeviceConnection
IDSDataChannels
IDSLocalSetup
IDSReportSpam
NRPairing
com.apple.IDS
transactionLog
DaemonController
DaemonListener
IDSConnection-oversize
IDSDirectMessagingConnection
Connection
continuity
IDSSession
_IDSGroupSession
_IDSGroupSession-oversize
DaemonProxy
GUIDTRACE
Accounts
IDSAccountController
IDSDevice
ServiceAvailability
IDSRealTimeEncryptionProxy
IDQuery
_IDSSession
fromID
<IDSSentInvitation %p>: uniqueID %@ senderMergeID %@ state %ld expirationDate %@ destination %@
<IDSReceivedInvitation %p>: uniqueID %@ senderMergeID %@ state %ld expirationDate %@ destination %@
IDSXPCConnectionErrorDomain
IDSXPCConnectionTransactionUUID
Missing entitlement "%@"
v32@?0@"NSUUID"8@?<v@?>16^B24
Timed-out expecting response for @selector(%@)
-[_IDSDevice initWithDictionary:]
-[_IDSDevice uniqueID]
-[_IDSDevice uniqueIDOverride]
-[_IDSDevice productBuildVersion]
-[_IDSDevice productName]
-[_IDSDevice productVersion]
-[_IDSDevice modelIdentifier]
-[_IDSDevice name]
-[_IDSDevice service]
-[_IDSDevice fullDescription]
[%@ %p:   Name: %@   Model: %@   UniqueID: %@   UniqueID Override: %@   Push Token: %@   Service: %@   Handles: %@   linkedUserURIs: %@   nsuuid: %@   relationship: %lu   supportsSMSRelay: %@   supportsMMSRelay: %@   supportsPhoneCalls: %@   deviceColor: %@   enclosureColor: %@  local: %@   defaultPairedDevice: %@   isNearby: %@  isConnected: %@  isCloudConnected: %@  isActive: %@  isLocallyPaired: %@  build: %@   pairing protocol: %lu   min compatibility version: %lu   max compatibility version: %lu]
-[_IDSDevice description]
[%@ %p:   Name: %@    Model: %@   UniqueID: %@   UniqueID Override: %@   Push Token: %@   Service: %@   nsuuid: %@   relationship: %lu    supportsSMSRelay: %@   supportsMMSRelay: %@   supportsPhoneCalls: %@   deviceColor: %@   enclosureColor: %@  local: %@   defaultPairedDevice: %@   isNearby: %@  isConnected: %@  isActive: %@  isLocallyPaired: %@  isHSATrusted: %@  build: %@   pairing protocol: %lu   min compatibility version: %lu   max compatibility version: %lu]
all 0s
[%p uid: %@, tok: %@, near: %@, conn: %@, active: %@, rel: %lu]
-[_IDSDevice isNearby]
-[_IDSDevice isConnected]
-[_IDSDevice isCloudConnected]
-[_IDSDevice locallyPresent]
-[_IDSDevice isDefaultPairedDevice]
-[_IDSDevice isLocallyPaired]
-[_IDSDevice isActive]
-[_IDSDevice relationship]
-[_IDSDevice pairingProtocolVersion]
-[_IDSDevice minCompatibilityVersion]
-[_IDSDevice maxCompatibilityVersion]
-[_IDSDevice serviceMinCompatibilityVersion]
-[_IDSDevice linkedUserURIs]
-[_IDSDevice setNSUUID:]
-[_IDSDevice nsuuid]
-[_IDSDevice stableBluetoothIdentifier]
-[_IDSDevice supportsiCloudPairing]
-[_IDSDevice supportsTethering]
-[_IDSDevice supportsHandoff]
-[_IDSDevice supportsApplePay]
-[_IDSDevice supportsSMSRelay]
-[_IDSDevice supportsMMSRelay]
-[_IDSDevice supportsPhoneCalls]
-[_IDSDevice deviceType]
-[_IDSDevice deviceColor]
-[_IDSDevice enclosureColor]
-[_IDSDevice isHSATrusted]
-[_IDSDevice pushToken]
-[_IDSDevice identities]
-[_IDSDevice _addIdentity:]
-[_IDSDevice _setAccount:]
-[_IDSDevice _setService:]
com.apple._IDSDevice.notification
_IDSIDQueryControllerConnectionQueue
_IDSIDQueryControllerQueue
set-id-status
v40@?0@"NSDictionary"8@"NSString"16@"NSString"24@"NSError"32
    "%@" =     (
        %@
    );
disableDaemonFallback
DisableDirectConnectionSend
v24@?0^@8I16i20
/Library/Caches/com.apple.xbs/Sources/IdentityServices_Sim/IDS/IDSDataChannels_Direct.m
%d-send
%d-recv
Not enough packet buffer space
IDSDC packet metadata
Failed to send write bytes (%d)
Data Port is 0
Metadata received is not the same
Unable to parse reply
127.0.0.1
17153
-[IDSDevice _initWithDictionary:]
-[IDSDevice initWithDictionary:]
-[IDSDevice _internal]
event-type
connected-link
disconnected-link
disconnected-link-ids
disconnected-link-uuids
disconnected-reason
rat-changed
default-link
default-link-id
rssi-key
preconnection-data-key
mtu-changed
somask-changed
info-report-events-key
error-key
encryption-info-key
membership-changed-reason-key
stat-response-key
session-info-response-key
probing-response-key
debug-data-type-key
debug-data-key
reporting-blob-key
preference-default-link-selection
preference-baseband-registration
preference-baseband-queue-flush-payload
preference-baseband-queue-flush
preference-pre-connection-data
preference-wait-for-pre-connection-data
preference-update-qos
preference-update-qos-is-good
preference-discard-link-ids
preference-query-information
preference-max-bitrate
preference-needs-encryption-info
preference-needs-force-update-encryption-info
preference-set-debugdata-type-key
preference-set-debugdata-key
preference-remote-device-version-key
baseband-registration-key
baseband-notification-operation-key
max-bitrate-key
wifi-local-attributes-changed-key
cellular-local-attributes-changed-key
<LinkContext %p> linkID %d (UUID:%@, QRSessionID:%@) networkType %u connectionType %s maxMTU %u RATType %lu maxBitrate %u (remote networkType %u connectionType %s RATType %lu), relay(provider:%d, token:%dB) serverIsDegraded: %@ localLinkFlags 0x%x remoteLinkFlags 0x%x, localDataSoMask: %u, remoteDataSoMask: %u, virtualRelayLink: %@, delegatedLinkID %d, localInterfaceName: %@
DatagramChannelFunctionalLogging
IDSDataChannelsRealTimeQueue
FileDescriptor
Dispatch
Daemon
Direct
<%p> channelFD %d connected %@ eventHandler %p readHandler %p withOptions %p auto %@
<%p> socket %d connected %@ eventHandler %p readHandler %p withOptions %p connetion %@
<%p> socket %d connected %@ eventHandler %p readHandler %p withOptions %p
-[IDSDatagramChannel underlyingFileDescriptor]
IDSDataChannels.m
_internal->_operationMode == IDSDatagramChannelOperationModeFileDescriptor
/Library/Caches/com.apple.xbs/Sources/IdentityServices_Sim/IDS/Client/IDSDataChannels.m
none
IDSFoundation
got CT(packet counting) option
kClientChannelMetadataType_CountPacketKey  should be 1 byte, not %u bytes, field: %u
kClientChannelMetadataType_GenerationCounterLSBKey should be 1 byte, not %u bytes, field: %u
got probeGroupID %u
kClientChannelMetadataType_ProbeGroupIDKey should be 2 bytes, not %u bytes, field: %u
linkStatus
IDS couldn't receive the response for the session info request.
v32@?0@"NSNumber"8@"NSNumber"16^B24
read sanity check failed: datagramSize %ld metadataSize %ld dataOffset %ld
-[IDSDatagramChannel start]
_internal->_readHandler
_internal->_eventHandler
_internal->_operationMode == IDSDatagramChannelOperationModeDispatch
Failed to send all bytes (%d < %d)
Connection terminated
Failed to send (errno %d)
-[IDSDatagramChannel readyToRead]
Could not serialize provided metadata.
The serialized metadata was greater than the max slot size allowed to send over the channel
%@-idswake
v24@?0@"NSObject<OS_xpc_object>"8@"NSObject<OS_xpc_object>"16
v16@?0@"NSMutableDictionary"8
-[IDSDeviceConnection initSocketWithDevice:options:completionHandler:queue:]
-[IDSDeviceConnection initStreamWithDevice:options:completionHandler:queue:]
Unable to create input and output stream
-[IDSDeviceConnection _internal]
FTPasswordManager
IDSGetServiceUserIDsWithCompletionBlock
IDSHomeKit.m
IDSGetAdminAccessTokensWithCompletionBlock
IDSGetConsentTokensWithCompletionBlock
IDSGetUserAccessTokensWithCompletionBlock
IDSRefreshUserAccessTokensWithCompletionBlock
IDSIDQueryControllerQueue
-[_IDSContinuity initWithDelegate:queue:delegateContext:]
-[_IDSContinuity startAdvertisingOfType:withData:withOptions:]
-[_IDSContinuity stopAdvertisingOfType:]
-[_IDSContinuity startScanningForType:withData:mask:peers:]
-[_IDSContinuity startScanningForType:withData:mask:]
-[_IDSContinuity startScanningForType:withData:mask:peers:boostedScan:duplicates:]
-[_IDSContinuity startScanningForType:withData:mask:boostedScan:duplicates:]
-[_IDSContinuity stopScanningForType:]
-[_IDSContinuity startTrackingPeer:forType:]
-[_IDSContinuity stopTrackingPeer:forType:]
-[_IDSContinuity _handleReconnect]
v16@?0@"<IDSContinuityDelegate>"8
-[_IDSContinuity _callDelegateWithBlock:]
nbuffer_append
IDSNBuffer.c
nbuffer_get_free_space(buf) >= size
nbuffer_ensure_freespace
-[_IDSSession _initWithAccount:destinations:transportType:connectionCountHint:needsToWaitForPreConnectionData:uniqueID:delegateContext:]
com.apple.private.alloy.phonecontinuity
-[_IDSSession _initWithAccount:destinations:options:delegateContext:]
-[_IDSSession initWithAccount:destinations:transportType:uniqueID:delegateContext:]
-[_IDSSession initWithAccount:destinations:transportType:delegateContext:]
-[_IDSSession initWithAccount:destinations:options:delegateContext:]
-[_IDSSession daemonDisconnected]
-[_IDSSession _broadcastNewSessionToDaemon]
-[_IDSSession _callDelegateWithBlock:]
-[_IDSSession setDelegate:queue:]
v16@?0@"<IDSSessionDelegate>"8
-[_IDSSession socket]
-[_IDSSession uniqueID]
-[_IDSSession _setupUnreliableSocketPairConnection]
-[_IDSSession _setupSocketPairToDaemon]
Error creating socketpair
Error getting socket flags from socketFD[0]
Error setting O_NONBLOCK flag on socketFD[0]
Error getting socket flags from socketFD[1]
Error setting O_NONBLOCK flag on socketFD[1]
Error setting SO_NOSIGPIPE on socketFD[0]
Error setting SO_NOSIGPIPE on socketFD[1]
Error setting SO_SNDBUF size on socketFD[0]
Error setting SO_SNDBUF size on socketFD[1]
Error setting SO_RCVBUF size on socketFD[0]
Error setting SO_RCVBUF size on socketFD[1]
socket
session-socket
socket-type
raw-socket
-[_IDSSession sendAllocationRequest:]
-[_IDSSession sendInvitationWithOptions:]
-[_IDSSession sendInvitationWithData:declineOnError:]
-[_IDSSession cancelInvitation]
-[_IDSSession cancelInvitationWithData:]
-[_IDSSession cancelInvitationWithRemoteEndedReasonOverride:]
-[_IDSSession acceptInvitation]
-[_IDSSession acceptInvitationWithData:]
-[_IDSSession declineInvitation]
-[_IDSSession declineInvitationWithData:]
-[_IDSSession reconnectSession]
-[_IDSSession endSession]
-[_IDSSession endSessionWithData:]
-[_IDSSession sendSessionMessage:]
-[_IDSSession sendSessionMessage:toDestinations:]
-[_IDSSession setAudioEnabled:]
-[_IDSSession getAudioEnabled]
-[_IDSSession setMuted:]
-[_IDSSession getMuted]
-[_IDSSession setPreferences:]
-[_IDSSession getPreferences]
-[_IDSSession setInviteTimeout:]
-[_IDSSession inviteTimeout]
-[_IDSSession sessionEndedReason]
-[_IDSSession sendData:error:]
-[_IDSSession sessionAcceptReceived:fromID:withData:]
-[_IDSSession sessionDeclineReceived:fromID:withData:]
-[_IDSSession sessionCancelReceived:fromID:withData:]
-[_IDSSession sessionMessageReceived:fromID:withData:]
-[_IDSSession sessionEndReceived:fromID:withData:]
-[_IDSSession session:invitationSentToTokens:shouldBreakBeforeMake:]
-[_IDSSession allocationDone:sessionInfo:]
-[_IDSSession sessionStarted:]
-[_IDSSession sessionEnded:withReason:error:]
-[_IDSSession session:audioEnabled:]
-[_IDSSession session:muted:]
session-initial-link-type
-[_IDSSession session:didReceiveReport:]
-[_IDSSession connection:didReceiveData:]
v20@?0@"NSArray"8B16
IDSInternalQueue
IDSInternalQueueControllerContext
com.apple.identityservices.error
dictionary
TTLItem
batch-query-limit
batch-query-time-limit
batch-query-use-death-timer
batch-query-time-to-live
batch-query-interval
batch-query-first-interval
batch-query-size
batch-query-max
-[IDSRealTimeEncryptionProxy initWithAccount:]
__kIDSServiceMonitorAvailabilityDidChangeNotification
kiMessageChangedNotification
kFaceTimeChangedNotification
kCallingChangedNotification
kScreenSharingChangedNotification
<%@: %p service:%@, serviceAvailability: %llu>
IDSTransactionLogTaskHandler.m
Unexpected task type
Abstract method
v24@?0@"<NSSecureCoding>"8@"NSError"16
v36@?0@"NSArray"8@"<NSSecureCoding>"16B24@"NSError"28
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
v24@?0@"IDSTransactionLogTaskHandlerAccountInfo"8@"NSError"16
_delegate
softlink:r:path:/System/Library/PrivateFrameworks/Transparency.framework/Transparency
softlink:r:path:/System/Library/PrivateFrameworks/Transparency.framework/Transparency
IDSContinuity
IDSDaemonProtocol
NSObject
IDSDaemonListenerProtocol
IDSDaemonController
IDSDaemonControllerForwarder
IDSXPCInternalTesting
IDSXPCInternalTestingInterface
IDSXPCKeyTransparency
IDSXPCKeyTransparencyInterface
IDSFirewallEntry
NSSecureCoding
NSCoding
NSCopying
IDSXPCReunionSync
IDSXPCReunionSyncInterface
IDSDirectMessageConnection
IDSGroupSessionDataCryptor
IDSGroupSession
IDSXPCRegistration
IDSXPCRegistrationInterface
IDSServiceAvailabilityController
IDSServiceContainer
IDSDaemonListener
_IDSRealTimeEncryptionProxy
IDSActivityInfo
IDSActivityUpdate
IDSActivityMonitor
_IDSActivityMonitorXPCConnectorXPCListener
IDSInvitationManager
IDSServiceDelegateInvitation
IDSServiceDelegate
IDSServerMessagingOptions
IDSServerMessagingOutgoingContext
IDSServerMessagingIncomingContext
IDSServerMessagingController
IDSXPCServerMessagingClient
IDSGroupContextNotifyingObserver
IDSGroupContextObserverDaemonProtocol
IDSSignInServiceUserInfo
IDSSignInServiceUserStatus
IDSSignInControllerAccountDescription
IDSSignInController
IDSAccountRegistrationDelegate
IDSAccountControllerDelegate
FaceTimeSupport
IDSSession
IDSCT
IDSAppleCareDaemonResponseListener
IDSFirewall
IDSBatchIDQueryController
IDSGroupEncryptionKeyMaterialCache
IDSConnection
Deprecated
IDSGroupSessionBroadcastParameter
IDSXPCPairing
IDSXPCPairingInterface
IDSDaemonResponseHandler
IDSTransactionLogTask
IDSTransactionLogSyncTask
IDSFamilyService
_IDSPasswordManager
IDSGroupSessionUnicastParameter
IDSXPCDaemon
IDSXPCDaemonInterface
IDSXPCDaemonClient
IDSXPCDaemonClientInterface
_IDSCompletionHandler
IDSPairedDeviceManager
IDSCarrierTokenRequestParameters
IDSCarrierToken
IDSAuthenticationSigningResult
IDSPhoneCertificateVendor
IDSRegistrationControlDaemonResponseListener
IDSXPCConnectionRemoteObjectPromise
IDSAccountController
_IDSGroupSession
IDSBaseSocketPairConnectionDelegate
IDSGroupContextController
IDSTransactionLogTaskHandlerDelegate
IDSGroupContextNotifyingObserverDelegate
IDSGroupContextControllerContent
IDSQuickRelayFixedTokenAllocator
_IDSConnection
IDSAccountDelegate
IDSDirectMessageConnectionDelegate
IDSSendXPCProtocol
_IDSSessionStore
IDSGroupContextDaemonProtocol
IDSGroupContextDataSourceDaemonProtocol
IDSGroupContextCacheMiddlewareDaemonProtocol
IDSDaemonProtocolController
IDSQuickSwitchAcknowledgementTracker
IDSLocalPairingAddPairedDeviceInfo
_IDSDeviceConnectionActiveMap
_IDSDeviceConnection
_IDSAccountController
IDSDictionaryInvitationContext
IDSInvitationContext
IDSXPCDaemonController
IDSLocalPairingIdentityDataErrorPair
IDSLocalPairingRecord
IDSLocalPairingPairedDeviceRecord
IDSLocalPairingLocalDeviceRecord
IDSXPCGroupSessionKeyValueDeliveryProvider
IDSXPCGroupSessionKeyValueDeliveryProviderInterface
IDSKTVerificationInfoProvider
KTVerificationInfoProvider
IDSKeyTransparencyManager
IDSAccount
_IDSGenericCompletionHandler
IDSHomeKitManager
IDSReportiMessageSpamDaemonResponseListener
IDSGroupSessionUnicastConnector
_IDSAccount
IDSXPCPairedDeviceManager
IDSXPCPairedDeviceManagerInterface
IDSService
IDSDaemonRequestContext
IDSDaemonRequestTimer
IDSAutoCleanup
_IDSService
IDSGroupContextControllerDelegate
IDSConnectionDelegatePrivate
IDSConnectionDelegate
IDSServicePseudonymChange
IDSTransactionLogMessage
IDSTransactionLogDataMessage
IDSTransactionLogDictionaryMessage
IDSPhoneSubscription
IDSPhoneTemporaryAliasDescription
IDSPhoneSubscriptionSelector
IDSGroupSessionKeyValueDeliveryHandlerProxy
IDSXPCGroupSessionKeyValueDeliveryDelegate
IDSGroupSessionKeyValueDelivery
IDSTransportLog
IDSLogging
IDSInvitation
IDSSentInvitation
IDSReceivedInvitation
IDSXPCConnection
NSXPCConnectionDelegate
IDSXPCConnectionTimeoutProxy
_IDSDevice
_IDSIDQueryController
IDSXPCOpportunistic
IDSXPCOpportunisticInterface
DirectConnections
IDSSimulatorProxyGroupSession
IDSDevice
_IDSDataChannelLinkContext
IDSDataChannelLinkContext
_IDSDatagramChannel
IDSDatagramChannel
_IDSXPCCheckInInfo
_IDSXPCCheckinManager
IDSDeviceConnection
IDSXPCActivityMonitor
IDSXPCActivityMonitorClient
IDSXPCActivityMonitorInterface
IDSIDQueryController
_IDSContinuity
IDSXPCFirewall
IDSXPCFirewallInterface
_IDSSession
Additions
IDSGroupContextDataSource
ENGroupContextDataSource
ENGroupContextCacheMiddleware
ENGroupContextMiddleware
IDSInternalQueueController
IDSServerMessagingMessage
IDSXPCServerMessaging
IDSXPCServerMessagingInterface
_IDSActivityMonitorXPCConnector
IDSXPCGroupSessionKeyValueDelivery
IDSXPCGroupSessionKeyValueDeliveryInterface
_IDSBatchIDQueryController
IDSIDQueryControllerDelegate
IDSRealTimeEncryptionProxy
IDSServiceMonitor
IDSTransactionLogTaskHandlerAccountInfo
IDSTransactionLogTaskHandler
IDSTransactionLogBaseTaskHandler
IDSTransactionLogSyncTaskHandler
ACKTracker
IDSDataChannels
BTOutOfBandKey
RATType
CTSIMSFromPhoneSubscriptions:
T@"IDSEndpointCapabilities",R,N
CrossLayerLogging
T@"NSData",R,N,V_BTOutOfBandKey
DaemonController
T@"NSDate",R,N,V_expirationDate
DaemonProxy
T@"NSSet",R,C,N
GUIDTRACE
T@"NSString",R,N,V_carrierNonce
GroupSessionKeyValueDelivery
TB,N,V_directMessagingSupported
IDSAccountController
TB,N,V_supportsIPsecWithSPPLink
IDSConnection_oversize
TB,R,N,V_isSync
IDSDeviceConnection
TI,V_totalPacketsReceivedOnLink
IDSLocalSetup
Ti,N,V_directMessagingRetryMSEC
IDSReportSpam
Tq,R,N,V_pairingProtocolVersion
IDSService
_BTOutOfBandKey
IDSSession
__imFirstObject
IMEI
_alwaysSkipSelf
NRPairing
_cachedCommands
OTRTestCallback:time:error:
_callDelegatesForDevicesChanged
QRSessionID
_cloudConnected
SIMForIdentifier:
_connectionUUID
ServiceAvailability
_delegateToInfo
T#,R
_directMessagingReportStatsMSEC
T@"<IDSActivityMonitorListenerDelegate>",W,N,V_delegate
_dumpLinkContextConnectionsInfo
T@"<IDSDirectMessageConnectionDelegate>",W,N,V_delegate
_enableStrictSecureDecodingMode
T@"<IDSGroupContextControllerDelegate>",N,V_delegate
_fromID
T@"<IDSGroupSessionKeyValueDeliveryHandler>",W,N,V_handler
_groupSessionID
T@"<IDSInvitationManagerDelegate>",W,N,V_delegate
_isAudioEnabled
T@"<IDSXPCAdapter>",&,N,V_XPCAdapter
_isDeviceOnline
T@"<NSXPCProxyCreating>",&,N,V_remoteObject
_joinLeaveError
T@"CUTDeferredTaskQueue",&,N,V_pseudonymUpdateTaskQueue
_linkID
T@"ENAccountIdentity",&,N,V_accountIdentity
_matchingDevice
T@"ENGroupContext",&,N,V_groupContext
_messageContext
T@"IDSCTAdapter",&,N,V_CTAdapter
_nextQueryTimer
T@"IDSCloudKitContainer",&,N,V_cloudKitContainer
_outgoingMessageLoggingSequence
T@"IDSDaemonRequestTimer",R,N,V_daemonRequestTimer
_peerID
T@"IDSDevice",&,N,V_device
_registeredURIs
T@"IDSDeviceConnection",&,N,V_deviceConnection
_removeAccount:
T@"IDSEndpointCapabilities",R,N,V_capabilities
_setDirectConnection:forLinkID:
T@"IDSGroupContextNotifyingObserver",&,N,V_observer
_socket
T@"IDSPseudonym",R,N,V_pseudonym
_stopStatsTimer
T@"IDSServiceMonitor",&,N,V_monitor
_tearDownConnectionForUniqueID:
T@"IDSServiceProperties",R,C,N
_unreliableSocketPairConnection
T@"IDSTransactionLogTask",&,N,V_task
accountController:accountAdded:
T@"IDSURI",R,N,V_uri
accountRemoved:
T@"IDSXPCConnection",&,N,V_rootConnection
accountUpdated:
T@"IDSXPCDaemonController",&,N,V_syncDaemonController
allKeys
T@"IMPowerAssertion",&,N,V_assertion
appleID
T@"NSArray",&,N,V_URIs
batchQueryController:updatedDestinationsStatus:onService:error:
T@"NSArray",R,C,N
cleanupSession:
T@"NSArray",R,N,V_authenticationCertificateSignatures
completionBlock
T@"NSArray",R,N,V_serviceUserInfos
connectingQueue
T@"NSArray",R,W,N
connectionQueue
T@"NSData",&,N,V_identityData
containsObject:
T@"NSData",&,N,V_salt
context
T@"NSData",C,V_appleID
currentCalendar
T@"NSData",C,V_relayIPv6
currentProgress
T@"NSData",C,V_relaySessionKey
dataWithLength:
T@"NSData",R
delegatedLinkID
T@"NSData",R,N,V_clientContext
destinationURIs
T@"NSData",R,N,V_inputData
devices
T@"NSData",R,N,V_pushToken
disableAccount:
T@"NSData",R,W,N
enabledAccounts
T@"NSDate",R,N
fullDescription
T@"NSDate",R,W,N
getAudioEnabled
T@"NSDictionary",&,N,V_applicationToVerificationInfoProviders
getDispatchDataForPacketBuffer:
T@"NSDictionary",&,N,V_directMessagingMetadata
getPairedDevicesWithCompletion:
T@"NSDictionary",&,N,V_dsidToFamilyMember
groupSessionKeyValueDeliveryProviderCollaboratorWithCompletion:
T@"NSDictionary",&,N,V_protectionClassIdentityDataMap
handlerWithTask:delegate:queue:
T@"NSDictionary",R,N
hasEntitlement:
T@"NSDictionary",R,N,V_dictionaryValue
initWithFormat:
T@"NSError",&,N,V_error
initWithString:
T@"NSInputStream",R,N
initialLinkType
T@"NSMapTable",&,N,V_interruptionHandlerByTarget
isEqualToArray:
T@"NSMutableArray",&,N,V_connectionMessageSendQueue
isMuted
T@"NSMutableDictionary",&,N,V_accountIDDescriptionMap
isReply
T@"NSMutableDictionary",&,N,V_completionBlocksByRequestID
isValid
T@"NSMutableDictionary",&,N,V_initialStateByService
killSystemTimer
T@"NSMutableDictionary",&,N,V_messageIDToMessageDictionary
localDataSoMask
T@"NSMutableDictionary",&,N,V_queueOneToMessageIDDictionary
lowercaseString
T@"NSMutableDictionary",&,N,V_syncCollaboratorDictionary
message
T@"NSMutableSet",R,N,V_listeners
methodSignature
T@"NSNumber",&,N,V_timeout
modelIdentifier
T@"NSNumber",C,V_relayPort
T@"NSObject<OS_dispatch_queue>",&,N,V_connectionQueue
numberWithBool:
T@"NSObject<OS_dispatch_queue>",&,N,V_signInQueue
numberWithLong:
T@"NSObject<OS_dispatch_queue>",R,N,V_ivarQueue
participantData
T@"NSObject<OS_dispatch_queue>",R,N,V_remoteMessageQueue
passwordUpdated
T@"NSObject<OS_dispatch_source>",&,N,V_reporterTimer
peerIsConnected
T@"NSObject<OS_nw_connection>",&,N,V_connection
perform
T@"NSObject<OS_nw_parameters>",R,N,V_parameters
promise
T@"NSObject<OS_xpc_object>",&,N,V_tempObject
pseudonymURIMap
T@"NSProtocolChecker",R,N,V_protocol
receiveMessages
T@"NSSet",&,N,V_familyMembers
registerPluginForGroup:options:
T@"NSSet",R,N,V_impactedServiceIdentifiers
relaySessionKey
T@"NSSet",R,N,V_requiredLackOfCapabilities
remoteLinkFlags
T@"NSString",&,N,V_activityIdentifier
removeListener:
T@"NSString",&,N,V_currentStreamName
responseHandler
T@"NSString",&,N,V_labelID
scopeID
T@"NSString",&,N,V_mergeID
sendData:error:
T@"NSString",&,N,V_peerID
sendMediaMembershipChangedInfo:
T@"NSString",&,N,V_serviceName
service
T@"NSString",&,N,V_uuid
serviceSpaceDidBecomeAvailable:
T@"NSString",R
sessionStarted:
T@"NSString",R,C,N
setAccessToken:
T@"NSString",R,C,N,V_senderMergeID
setAccountUUID:
T@"NSString",R,N
setCompletionBlocksByRequestID:
T@"NSString",R,N,V_accountUniqueID
setDisplayName:
T@"NSString",R,N,V_fromID
setFakeMessage:
T@"NSString",R,N,V_groupSessionIDAlias
setHandlerUUID:
T@"NSString",R,N,V_loginID
setInterruptionHandlerByTarget:
T@"NSString",R,N,V_subActivity
setMessageData:
T@"NSString",R,N,V_topic
setMultiplexer:
T@"NSString",R,W,N
setNumberStyle:
T@"NSUUID",&,N,SsetNSUUID:
setPreferences:
T@"NSUUID",R
setServiceName:
T@"NSUUID",R,N
setSignInQueue:
T@"NSXPCConnection",&,N,V_connection
setWakingPushPriority:forTopic:
T@"_IDSAccount",R,&,N
setWithObjects:
T@"_IDSConnection",R,N
T@"_IDSService",R,N
stringByAppendingPathComponent:
T@,R,N,V_block
supportsHandoff
T@?,C,N,V_batchProcessingBlock
unselectSubscription:withError:
T@?,C,N,V_completionBlock
uppercaseString
T@?,C,N,V_daemonControllerBuilder
validateProfile
T@?,C,N,V_handler
.cxx_destruct
IDQuery
Accounts
KeyTransparency
CTAdapter
T@"IDSDataChannelLinkContext",R
Connection
T@"NSArray",R,N
DSID
T@"NSDate",&,N,V_expirationDate
DaemonListener
T@"NSMutableDictionary",&,N,V_connectionInfoByServiceIdentifier
FZIDType
T@"NSString",&,N,V_listenerGUID
GroupSessionDataCryptor
T@,&,N,V_target
IDQueryCompletedWithFromURI:idStatusUpdates:service:success:error:
TB,N,V_pendingAckTimerSuspended
IDSConnection
TB,N,V_trafficClassTLVProcessed
IDSDevice
TB,R,V_isLightweightParticipant
IDSDirectMessagingConnection
TQ,R,N,V_status
IDSRealTimeEncryptionProxy
Ti,N,V_priority
IDSServerMessaging
IDSService_oversized
_MKIArrivalTime
IDSiCloudSignInHack
_accountsLoaded
MTUForAddressFamily:
_cachedAccounts
NSUUID
_cachedServices
QRAllocator
_cbuuid
RealTimeEncryptionController
_connectionType
SIMIdentifier
_daemonListener
SimulatorProxy
_device
T*,N,V_shortServiceNameCString
_disconnectFromDaemonWithForce:
T@"<IDSDestinationProtocol>",R,C,N,V_destination
_enableAccount:
T@"<IDSGroupContextCacheMiddlewareDaemonProtocol>",R,N
_expirationDate
T@"<IDSGroupContextDataSourceDaemonProtocol>",R,N
_getAdminAccessTokensCompletion
T@"<IDSInvitationContext>",R,N,V_context
_incomingMessageLoggingSequence
T@"<IDSTransactionLogTaskHandlerDelegate>",W,N,V_delegate
_isDead
T@"<IDSXPCConnectionProtocol>",&,N,V_connection
_isSync
T@"<_IDSPasswordManager>",&,N,V_passwordManager
_lastUpdateCaps
T@"CUTPromiseSeal",&,N,V_seal
_localLinkFlags
T@"ENAccountIdentity",R,N,V_accountIdentity
_maxMTU
T@"IDSAccount",R,N
_nearby
T@"IDSCertifiedDeliveryContext",&,N,V_certifiedDeliveryContext
_nsuuid
T@"IDSDaemonListener",R,N,V_daemonListener
_parent
T@"IDSDestination",R,N
_protectionClassIdentityDataMap
T@"IDSDevice",&,N,V_matchingDevice
_relaySessionID
T@"IDSDirectMessageConnection",&,N,V_directMessageConnection
_rootConnection
T@"IDSGroupContextController",R,&,N,V_groupContextController
_setWiFiAssist:
T@"IDSPhoneCertificateVendor",&,N,V_strongSelfReference
_status
T@"IDSService",R,N,V_internal
_target
T@"IDSServiceProperties",&,N,V_serviceProperties
_tokens
T@"IDSTransactionLogSyncTask",&,N,V_syncTask
account
T@"IDSURI",R,N,V_URI
accountIdentity
T@"IDSXPCConnection",&,N,V_connection
accountUniqueID
T@"IDSXPCDaemonController",&,N,V_daemonController
aliases
T@"IDSXPCDaemonController",&,N,V_xpcDaemonController
allowedServices
T@"IMRemoteObject<IDSDaemonProtocol>",&,N,V_remoteObject
arrayWithArray:
T@"NSArray",R
canSend
T@"NSArray",R,N,V_URIs
command
T@"NSArray",R,N,V_deviceUniqueIDs
connectToDaemon
T@"NSArray",R,N,V_tokens
connectionIndex
T@"NSData",&,N,V_bluetoothMACAddress
connectionState
T@"NSData",&,N,V_messageData
containsString:
T@"NSData",C,N,V_appContext
continuityClientInstanceCreated
T@"NSData",C,V_relayIP
currentEntries:
T@"NSData",C,V_relaySessionID
daemonConnected
T@"NSData",C,V_relaySessionToken
dealloc
T@"NSData",R,N
dequeueMessages
T@"NSData",R,N,V_dataValue
deviceUniqueIDs
T@"NSData",R,N,V_nonce
dictionaryValue
T@"NSData",R,N,V_salt
dropAllMessagesWithoutAnyAllowedClassifierForDevice:completion:
T@"NSDate",R,C,N,V_expirationDate
fetchPeerVerificationInfoForApplication:forURIs:withCompletion:
T@"NSDate",R,N,V_lastSeen
general
T@"NSDictionary",&,N
getDestinations
T@"NSDictionary",&,N,V_cachedPseudonymURIMap
getKeyTransparencyOptInEligiblityForApplication:withCompletion:
T@"NSDictionary",&,N,V_dsidToDeviceList
groupID
T@"NSDictionary",&,N,V_powerAssertionOptions
handler
T@"NSDictionary",R,C,V_dictionary
handles
T@"NSDictionary",R,N,V_aliasToAccountsMap
idStatusUpdatedForDestinations:
T@"NSDictionary",R,W,N
initWithService:delegate:queue:
T@"NSHashTable",&,N,V_delegateMap
initWithTopic:daemonController:
T@"NSMapTable",&,N,V_delegateByServiceType
isDirectMessage
T@"NSMapTable",&,N,V_sessionBySessionID
isLocallyPaired
T@"NSMutableArray",&,N,V_pendingInvocations
isProxy
T@"NSMutableDictionary",&,N,V_collaboratorPromiseDictionary
isSetupComplete
T@"NSMutableDictionary",&,N,V_inFlightRequests
keyType
T@"NSMutableDictionary",&,N,V_listenersByActivity
labelID
T@"NSMutableDictionary",&,N,V_pendingTransactions
loginID
T@"NSMutableDictionary",&,N,V_serviceNameAccountControllerMap
mergeID
T@"NSMutableSet",&,N,V_delegates
messageIdentifier:alternateCallbackID:forAccount:willSendToDestinations:skippedDestinations:registrationPropertyToDestinations:
T@"NSNumber",&,N,V_state
metrics
T@"NSNumber",C,V_relayCombinedSoftwareID
monitor
T@"NSObject<OS_dispatch_queue>",&,N,V_connectingQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
numberWithChar:
T@"NSObject<OS_dispatch_queue>",N,V_queue
originalCommand
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
passwordManager
T@"NSObject<OS_dispatch_source>",&,N,V_pendingAckTimer
payload
T@"NSObject<OS_nw_connection>",&,N,V_cachedConnection
pendingAckTimer
T@"NSObject<OS_nw_endpoint>",R,N,V_endpoint
phoneUserStatus
T@"NSObject<OS_os_log>",R
protobufReceived:withGUID:forTopic:toIdentifier:fromID:context:
T@"NSOutputStream",R,N
readFromSocketDescriptorWithReadHandler:readHandlerWithOptions:
T@"NSSet",&,N
registerAccount
T@"NSSet",R,N
relayIP
T@"NSSet",R,N,V_requiredCapabilities
release
T@"NSString",&,N
removeDelegate:
T@"NSString",&,N,V_applicationIdentifier
resetConnection
T@"NSString",&,N,V_identifier
retainArguments
T@"NSString",&,N,V_loginID
selectedSubscriptionsWithError:
T@"NSString",&,N,V_messageID
sendInvitation:toDestination:priority:options:identifier:error:
T@"NSString",&,N,V_service
serverTimestamp
T@"NSString",&,N,V_uniqueID
serviceNameAccountControllerMap
T@"NSString",C,N,V_multiplexer
session:invitationSentToTokens:
T@"NSString",R,C
T@"NSString",R,C,N,V_fromID
setAccountInfo:
T@"NSString",R,C,V_schemaIdentifier
setCheckinLock:
T@"NSString",R,N,V_IMEI
setDelegateMap:
T@"NSString",R,N,V_activity
setDropMessageIndicatorCommand:
T@"NSString",R,N,V_groupSessionID
setForceKeyRoll:withCompletion:
T@"NSString",R,N,V_listenerID
setHasMetadata:
T@"NSString",R,N,V_serviceName
setMTU:
T@"NSString",R,N,V_tokenString
setMessageUUID:
T@"NSString",R,N,V_uniqueID
setNotifyToken:
T@"NSUUID",&
setPairingType:
T@"NSUUID",C,N,V_handlerUUID
setReadHandler:
T@"NSUUID",R,C,N,V_uniqueID
setShouldPairDirectlyOverIPsec:
T@"NSUUID",R,N,V_cbuuid
setSyncDaemonControllerBuilder:
T@"NSXPCInterface",&,N,V_interface
setWantsAppAck:
T@"_IDSActivityMonitorXPCConnector",&,N,V_XPCConnector
shouldContinueFromLastSyncPoint
T@"_IDSDeviceConnection",R,N
startLocalSetup
T@,&,N,V_boostContext
success
T@,W,N,V_delegate
timeout
T@?,C,N,V_completion
updateMetadata:
T@?,C,N,V_connectionReadyCallback
T@?,C,N,V_errorHandler
warning
T@?,C,N,V_invalidationHandler
T@?,C,N,V_knownRecordIDsFromList
T@?,C,N,V_syncDaemonControllerBuilder
T@?,R,N,V_completion
TB,N
TB,N,GisPretendingToBeFull
TB,N,S_setHidingDisconnect:
TB,N,S_setIsEnabled:
TB,N,V_conciseACKSupported
TB,N,V_connectionIsIncoming
TB,N,V_connectionSetupInProgress
TB,N,V_directMessagingAllowed
TB,N,V_finishedTransaction
TB,N,V_forSyncMessaging
TB,N,V_fromServerStorage
TB,N,V_isDeviceOnline
TB,N,V_isDonated
TB,N,V_manuallyAckMessages
TB,N,V_peerIsConnected
TB,N,V_peerIsNearby
TB,N,V_peerSupportsDeviceConnection
TB,N,V_shouldContinueFromLastSyncPoint
TB,N,V_shouldPairDirectlyOverIPsec
TB,N,V_syncOntoMain
TB,N,V_trafficClassInitialized
TB,N,V_upgradedTrafficClass
TB,N,V_wantsPseudonymUpdates
TB,R
TB,R,N
TB,R,N,GisCloudConnected
TB,R,N,GisConnected
TB,R,N,GisNearby
TB,R,N,V_selected
TB,S_setAutoReconnect:,V_autoReconnect
TC,R
TI,N,V_dataProtectionClass
TI,N,V_trafficClassToUse
TI,N,V_wakingDowngradeCount
TI,R
TI,R,N
TI,R,N,V_state
TI,V_totalPacketsSentOnLink
TQ,N,V_directMessagingState
TQ,N,V_identifier
TQ,N,V_incomingMessageBytes
TQ,N,V_incomingMessageCount
TQ,N,V_outgoingMessageBytes
TQ,N,V_outgoingMessageCount
TQ,R
TQ,R,N
TQ,R,N,V_changeType
TQ,R,N,V_connectionIndex
TQ,R,N,V_initialLinkType
TQ,R,N,V_localParticipantID
TQ,R,N,V_participantIDAlias
TQ,R,N,V_remoteParticipantID
TQ,R,N,V_serverTimestamp
TQ,R,N,V_serviceType
TQ,R,N,V_type
TS,R
Tc,R
Td,N,V_signInFuzz
Td,N,V_signInTimeout
Td,N,V_timeout
Ti,N,V_connectionState
Ti,N,V_curXPCMessagePriority
Ti,N,V_directMessagingReportStatsMSEC
Ti,N,V_directMessagingTimeOutMSEC
Ti,N,V_notifyToken
Ti,R,N
Ti,V_socket
Tq,N
Tq,N,V_idsPriorityToUse
Tq,N,V_pairingType
Tq,N,V_subscriptionSlot
Tq,N,V_trafficClassApplied
Tq,R
Tq,R,N
Tq,R,N,V_dataMode
Tq,R,N,V_state
Tq,R,N,V_subscriptionSource
Tq,R,N,V_updateFlags
Tq,R,V_contextType
Tq,R,V_dataPathType
Tq,R,V_state
T{?=qqq},R,N
T{os_unfair_lock_s=I},N,V_checkinLock
T{os_unfair_lock_s=I},N,V_inFlightLock
URIWithPrefixedURI:
URIs
UTF8String
UUID
UUIDString
XPCAdapter
XPCConnector
_CTAdapter
_FTOptionallyDecompressData
_IDSDataFromBase64String:
_IDSGroupSession
_IDSGroupSession_oversize
_IDSService
_IDSSession
_IMEI
_QRSessionID
_RATType
_URI
_URIFromFZIDType:
_URIs
_URIsToParticipantIDRequests
_XPCAdapter
_XPCConnector
___oldDealloc
__imArrayByApplyingBlock:
__imArrayByFilteringWithBlock:
__imDataWithHexString:
__imDataWithRandomBytes:
__imSetByApplyingBlock:
__imSetFromArray
__mainThreadPostNotificationName:object:userInfo:
__postSetupComplete
__sendMessage:queue:reply:failBlock:waitForReply:
_accessCount
_accessDelegateIdentifiersInCriticalSectionWithBlock:
_accessRequestContextMapInCriticalSectionWithBlock:
_account
_accountConfig
_accountController
_accountControllerForName:
_accountID
_accountIDDescriptionMap
_accountIdentity
_accountToActiveDeviceUniqueID
_accountToDevices
_accountUniqueID
_accountWithAlias:
_accountWithURI:orPseudonym:
_accountWithUniqueID:
_acknowledgementBlockWithDelegateIdentifier:
_acknowledgementTracker
_acquiringDaemonConnection
_actionOnAccountOfType:onService:actionBlock:
_activeConnectionMap
_activeDevice
_activeDeviceForUniqueID:
_activity
_activityIdentifier
_addIdentity:
_agentDidLaunchNotification:
_aliasToAccountsMap
_allowedTrafficClassifiers
_appContext
_appearsToBeEmail
_appearsToBePhoneNumber
_appearsToBePseudonymID
_appleID
_applicationIdentifier
_applicationToVerificationInfoProviders
_applicationWillTerminate
_assertVoidReturnValueInInvocation:
_assertion
_authenticationCertificateSignatures
_autoReconnect
_availability
_availabilityHandlers
_awdMetrics
_batchProcessingBlock
_bestGuessURI
_block
_blockUntilSendQueueIsEmpty
_bluetoothMACAddress
_boostContext
_broadcastNewSessionToDaemon
_buildPacketBufferMetaData:
_cache
_cacheForService:
_cachedCapabilities
_cachedConnection
_cachedPseudonymURIMap
_cachedStatusForDestination:service:
_callCloudConnectedDevicesChanged
_callConnectedDevicesChanged
_callDelegateWithBlock:
_callDelegatesRespondingToSelector:withPreCallbacksBlock:callbackBlock:postCallbacksBlock:
_callDelegatesRespondingToSelector:withPreCallbacksBlock:callbackBlock:postCallbacksBlock:group:
_callDelegatesWithBlock:
_callDelegatesWithBlock:delegateMap:
_callDelegatesWithBlock:group:
_callDevicesChanged
_callHandlersAsyncWithBlock:
_callHandlersWithBlock:
_callHandlersWithBlockOnIvarQueue:
_callHandlersWithBlockOnIvarQueue:cleanup:
_callIsActiveChanged
_callLinkedDevicesChanged
_callNearbyDevicesChanged
_callRegistrationDelegatesWithBlock:
_calloutPseudonymsDidUpdate
_calloutToDelegateWithResult:error:
_canAccount:sendWithFromID:
_canServiceNameAcceptMessagesInTransientRegistrationState:
_capabilities
_carrierNonce
_cellularLink
_certifiedDeliveryContext
_cfsJoinReply
_cfsLeaveReply
_cfs_client
_cfs_requestID
_changeType
_channelNumber
_checkAndSendDataCryptor
_checkinLock
_childConnectionID
_cleanupAllPendingTransactions
_cleanupBlock
_cleanupCompletionBlock
_cleanupSocketPairConnections
_cleanupStateForAccountID:
_clientContext
_clientErrorForCode:underlyingError:
_clientIsSandboxed
_clientTimeout
_clientUUID
_close
_cloudConnectedStateChanged
_cloudKitContainer
_collaboratorPromiseDictionary
_collaboratorWithIdentifier:interface:timeout:errorHandler:resolverBlock:
_commands
_completeWithError:
_completion
_completionBlock
_completionBlocksByRequestID
_conciseACKSupported
_connect
_connectToDaemonWithLaunch:services:commands:capabilities:
_connected
_connectedStateChanged
_connectingQueue
_connection
_connectionComplete
_connectionCountHint
_connectionID
_connectionIndex
_connectionInfoByServiceIdentifier
_connectionIsIncoming
_connectionMessageSendQueue
_connectionQueue
_connectionReadyCallback
_connectionSetupInProgress
_connectionState
_connectionWithAccount:commands:indirectDelegateCallouts:
_contentWithCompletion:
_context
_contextKey
_contextType
_copyForEnumerating
_createAccountControllerForService:
_createAccountWithDictionary:accountID:serviceName:
_createParticipantIDAliasCallbacks
_createXPCConnectionOnQueue:
_criticalFindRequestContextWithResponseHandler:
_criticalInvalidateTimeoutAndReturnHandlerForRequestID:
_criticalInvokeTimeoutBlockForRequestID:
_curXPCMessagePriority
_currentCachedIDStatusForDestination:service:listenerID:
_currentCachedRemoteDevicesForDestinations:service:listenerID:
_currentIDStatusForDestination:service:listenerID:
_currentIDStatusForDestination:service:respectExpiry:listenerID:
_currentIDStatusForDestinations:service:listenerID:
_currentIDStatusForDestinations:service:respectExpiry:listenerID:
_currentMessageContext
_currentRemoteDevicesForDestinations:service:listenerID:queue:waitForReply:completionBlock:
_currentStreamName
_daemonConnectedGroup
_daemonController
_daemonControllerBuilder
_daemonDied:
_daemonProxyWithErrorHandler:
_daemonRequestTimer
_dataCryptorRequests
_dataMode
_dataPathType
_dataProtectionClass
_dataValue
_debugDescriptionForErrorCode:
_decryptionCryptorsByKeyID
_decryptionKeysByKeyID
_defaultLinkID
_defaultPairedDevice
_delegate
_delegateByServiceType
_delegateCapabilities
_delegateContext
_delegateIdentifiers
_delegateIdentifiersMutex
_delegateMap
_delegateMapForListenerID:service:
_delegateQueue
_delegatedLinkID
_delegates
_deleteCompletion
_deliveryHandlers
_deliveryStatsCompletion
_destination
_destinations
_destinationsInMessages:
_destinationsLightweightStatus
_destinationsToQuery
_destinationsToQuerylock
_deviceConnection
_deviceIdentifier
_deviceUniqueIDs
_devices
_devicesLoaded
_dictionary
_dictionaryRepresentation
_dictionaryValue
_didCacheGroup:completion:
_didCreateGroup:completion:
_didJoinCallback
_didLeaveCallback
_didReceiveDecryptionFailureForGroup:completion:
_didUpdateGroup:withNewGroup:completion:
_directConnectionForLinkID:
_directConnectionIsReady
_directConnectionsByLinkID
_directMessageConnection
_directMessagingAllowed
_directMessagingMetadata
_directMessagingRetryMSEC
_directMessagingState
_directMessagingSupported
_directMessagingTimeOutMSEC
_directOrDaemonConnectionForLinkID:
_disableAccount:
_disableEncryption
_disallowCellularInterface
_disallowWifiInterface
_disconnectFromQueryService
_disconnectedBlock
_dsidToDeviceList
_dsidToFamilyMember
_enableSingleChannelDirectMode
_enabledAccounts
_encryptingCryptor
_encryptingKey
_encryptingKeyID
_encryptingKeySalt
_endpoint
_enforceSandboxPolicy
_error
_errorHandler
_eventHandler
_everHadDelegate
_existingParticipants
_extractparticipantIDToHashedIDMappingFromData:
_failMessages
_familyMembers
_fatalErrorOccured
_fetchGroupWithGroupID:skipCache:completion:
_filteredAccountsFrom:
_finishedTransaction
_firstPacketArrivalTimeForMKI
_flushQueryCacheForService:
_forSyncMessaging
_forwarder
_fromServerStorage
_fullIdenityForDataProtectionClass:error:
_getConsentTokensCompletion
_getParticipantIDForAliasCallbacks
_getParticipantIDForAliasDelegateQueueCallbacks
_getServiceUserIDsCompletion
_getUserAccessTokensCompletion
_groupContext
_groupContextCacheMiddleware
_groupContextController
_groupContextDataSource
_groupFromPublicDataRepresentation:completion:
_groupID
_groupIDsFromMessages:
_groupSessionIDAlias
_groupsByGroupIDFromGroups:
_handleDaemonException:
_handleInterruption
_handleLastCallForPendingIdentifier:callbackID:
_handlePretendingToBeFullWithIdentifier:
_handleReconnect
_handleServiceMonitorNotification:
_handleSystemTimerFired:
_handler
_handlerUUID
_handlers
_hasBeenSuspended
_hasCacheForService:
_hasCheckedForDaemon
_hasMetadata
_hasTimedOut
_hbhDecryptionkey
_hbhEncryptionkey
_hidingDisconnect
_idStatusCache
_idStatusForDestinations:service:listenerID:allowRenew:respectExpiry:waitForReply:forceRefresh:bypassLimit:completionBlock:
_identifier
_identityData
_idsPriorityToUse
_idsSimulatorSupportDataHandlerToken
_imMethodSignatureForSelector:
_immutableCloudConnected
_impactedServiceIdentifiers
_inFlightLock
_inFlightRequests
_incomingBytes
_incomingMessageBytes
_incomingMessageCount
_incomingPackets
_indirectDelegateCallouts
_info
_init
_initWithAccount:commands:indirectDelegateCallouts:
_initWithAccount:destinations:options:delegateContext:
_initWithAccount:destinations:transportType:connectionCountHint:needsToWaitForPreConnectionData:uniqueID:delegateContext:
_initWithAccount:destinations:transportType:uniqueID:
_initWithAccountUniqueID:fromID:loginID:serviceName:
_initWithDelegateContext:
_initWithDictionary:
_initWithDictionary:uniqueID:serviceName:
_initWithQueue:isSync:
_initWithQueue:isSync:connectionCreationBlock:
_initWithQueue:syncOntoMain:takingOverAndResumingConnection:forSyncMessaging:
_initWithService:
_initWithService:onIDSQueue:
_initWithSubActivity:
_initialLinkType
_initialStateByService
_initializeStateMachineForAccountID:service:state:completion:
_inputData
_inputStreamForSocket
_instanceID
_interface
_internal
_internalDidSwitchActivePairedDevice:forService:
_internalQueueController
_internalSwitchActivePairedDevice:forAccount:
_internalSwitchActivePairedDevice:forService:
_internal_sessionWithValidityCheck
_interruptionHandlerByTarget
_invalidateNextQueryTimer
_invalidationHandler
_invitationsLoadedFromDisk
_inviteTimeout
_invocationHasBlock:
_isAccountInValidRegistrationStateToAcceptMessages
_isDefaultPairedDevice
_isDestinationSingleLocalAddress:
_isDonated
_isDroppingMessages
_isEnabled
_isInvalidated
_isInvisibleAlias:
_isLegacy
_isLightweightParticipant
_isListenerWithID:listeningToService:
_isLocalAccountVisible
_isMagnoliaService
_isMuted
_isPhoneCertificateVendorSupported
_isServiceCurrentlyEnabled:
_isSessionInfoValid:
_isThumperService
_isValidServiceType:
_isVirtualRelayLink
_isiCloudPairingService
_ivarQueue
_keyMaterialCache
_keychainRegistration
_knownRecordIDsFromList
_labelID
_lastIncomingStatReport
_lastIsActiveSet
_lastOutgoingStatReport
_lastSeen
_linkContextForLinkID:
_linkContexts
_linkContextsByLinkID
_linkIDToParticipantMap
_linkUUID
_linkedDevices
_linkedDevicesLoaded
_listenerCapabilities
_listenerCaps
_listenerCommands
_listenerGUID
_listenerID
_listenerIDToServicesMap
_listenerServices
_listenerSetUpdated
_listeners
_listenersByActivity
_loadCachedAccounts
_loadCachedAccountsWithDictionaries:
_loadCachedDevices
_loadCachedLinkedDevices
_localCompletion
_localDataSoMask
_localInterfaceName
_localObject
_localObjectCleanup
_localParticipantID
_localRelayLinkID
_localRemoteRelayLinkIDToVirtualLinkIDMap
_lock
_logConnectionMap
_logReceivingStats:
_logSendingStats:
_loginID
_makeConnectionWithLaunch:completionBlock:
_makeDirectPacketBufferFromDatagram:datagramSize:currentDatagramCount:totalDatagramCount:datagramInfo:datagramOptions:linkContext:
_makePacketBufferFromDatagram:datagramSize:currentDatagramCount:totalDatagramCount:datagramInfo:datagramOptions:
_manuallyAckMessages
_maxBitrate
_mergeID
_messageData
_messageID
_messageIDToMessageDictionary
_messageTypeForCommand:
_methodSignatureForRemoteSelector:
_monitor
_mtu
_multiplexer
_nearbyStateChanged
_nearbyToken
_needsMediaEncryptionInfo
_needsToWaitForPreConnectionData
_networkType
_nextQuery:
_nonce
_noteDisconnected
_noteSetupComplete
_notificationServices
_notifyToken
_numberOfQueriesDone
_objectForKey:
_observer
_openSocketCompletionHandler
_openSocketCompletionHandlerID
_openSocketCompletionHandlerQueue
_operationMode
_osChannelFD
_outgoingBytes
_outgoingMessageBytes
_outgoingMessageCount
_outgoingPackets
_outputStreamForSocket
_pairedCompletion
_pairingProtocolVersion
_pairingType
_parameters
_parentUniquePID
_parseQuickRelayDefaults
_participantIDAlias
_participantInfo
_participantsByAliasFromParticipants:
_passwordManager
_pathEvaluator
_payloadFromDecryptedData:
_peerIsConnected
_peerIsNearby
_peerSupportsDeviceConnection
_pendingAccountsToRemove
_pendingAckTimer
_pendingAckTimerSuspended
_pendingInvitations
_pendingInvocations
_pendingRegisteredIdentitiesBlock
_pendingSends
_pendingTransactions
_performBlock:
_performBlock:wait:
_performLockedAccess:
_performSyncAction:
_performSyncBlock:
_postAvailability:
_postNotificationForService:availability:
_postedSetupComplete
_powerAssertionOptions
_preConnectionData
_preferCellularForCallSetup
_preferences
_preferredAddressFamily
_preferredDataPathType
_preferredURIForAccount:
_pretendingToBeFull
_preventReconnect
_previousError
_priority
_probingDict
_processAccountSet:
_processIncomingDatagram:datagramSize:linkID:linkContext:
_protobufSelectors
_protocol
_pseudonym
_pseudonymUpdateTaskQueue
_publicDataRepresentationForGroup:completion:
_publicIdenityForDataProtectionClass:error:
_purgeIDStatusCache
_purgeIDStatusCacheAfter:
_pushToken
_qrReason
_queue
_queueController
_queueOneToMessageIDDictionary
_rateLimiter
_readFromDirectConnection:linkID:linkContext:
_readHandler
_readHandlerWithOptions
_readLock
_receivedInvitations
_receivedPreConnectionData
_refreshIDStatusForDestination:service:listenerID:
_refreshIDStatusForDestinations:service:listenerID:
_refreshIDStatusForDestinations:service:listenerID:allowRefresh:respectExpiry:waitForReply:forceRefresh:bypassLimit:queue:completionBlock:
_refreshUserAccessTokensCompletion
_registrationDelegateToInfo
_relayCombinedSoftwareID
_relayIP
_relayIPv6
_relayPort
_relayServerProvider
_relaySessionKey
_relaySessionToken
_reloadCachedDevices
_reloadCachedLinkedDevices
_remoteConnectionType
_remoteDataSoMask
_remoteLinkFlags
_remoteMessageQueue
_remoteNetworkType
_remoteObject
_remoteObjectCleanup
_remoteParticipantID
_remoteRATType
_remoteRelayLinkID
_removeAccountOnIvarQueue:
_removeAndDeregisterAccount:
_removeDirectConnection:
_removeInvalidEntries:
_replaceSentinelInSendParameters:withCurrentActiveDevice:
_reportDictionary:forKey:
_reportFirstIncomingPacketTimeForMKI:time:
_reportFirstOutgoingPacketTimeForMKI:time:
_reportMKIArrival:time:isLocallyGenerated:
_reporterTimer
_requestCacheForService:completionBlock:
_requestCachedStatusForDestinations:service:waitForReply:respectExpiry:listenerID:completionBlock:
_requestContextMap
_requestContextMapLock
_requestIDInfoForDestinations:service:infoTypes:options:listenerID:queue:completionBlock:
_requestNWConnectionforIDSGroupSessionBroadcastParameter:
_requestNWConnectionforIDSGroupSessionUnicastParameter:
_requestRemoteDevicesForDestination:service:listenerID:waitForReply:completionBlock:
_requestStatusForDestinations:service:waitForReply:forceRefresh:bypassLimit:listenerID:completionBlock:
_requestTimer
_requiredCapabilities
_requiredLackOfCapabilities
_reregisterAndReidentify:
_reregisterAndReidentify:account:
_resendPendingSends
_respondsToRemoteSelector:
_responseHandler
_salt
_scheduleNextQuery:
_scheduleTimeoutForCarrierTokenCompletionBlock:
_scheduleTimeoutForPhoneAuthenticationCertificateRequestCompletionBlock:
_scheduleTimeoutForPhoneAuthenticationSignatureRequestCompletionBlock:
_scheduleTimeoutForPhoneSubscriptionSourceCompletionBlock:
_scheduleValidationAfter:forAccountID:allowFuzz:signOut:
_schemaIdentifier
_seal
_selected
_sendData:withOptions:identifier:completion:
_sendMissingMessageMetric:
_sendSequenceNumberMetadataToDaemon:
_sendSimulatorData:fromAccount:toDestinations:priority:options:identifier:error:
_sendSimulatorMessage:fromAccount:toDestinations:priority:options:identifier:error:
_sendSimulatorProtobuf:fromAccount:toDestinations:priority:options:identifier:error:
_sendStatsRequestViaDaemon
_sendWithParameters:options:loggingType:loggingDataSize:
_senderMergeID
_sendingAccountForAccount:
_sendingAccountForAccount:destination:fromID:
_sendingMetadata
_sentFirstReadLinkInfo
_serverAcknowledgedBlockMap
_serverAcknowledgedBlockWithInvitationMap
_serverIsDegraded
_serverTimestamp
_service
_serviceName
_serviceNameAccountControllerMap
_serviceNameForType:
_serviceProperties
_serviceReference
_serviceToActiveDeviceUniqueID
_serviceToFamilyDevices
_serviceToFamilyInfo
_serviceToLinkedDevices
_serviceToMaxMessageSize
_serviceToPendingInvitations
_serviceToReceivedInvitations
_serviceToken
_serviceType
_serviceTypeForName:
_serviceUserInfos
_services
_sessionBySessionID
_sessionConfig
_sessionEndedReason
_sessionID
_setAccount:
_setAllValuesFromDictionary:
_setApplicationWillTerminate
_setAutoReconnect:
_setCapabilities:
_setCommands:
_setCurrentIDStatus:forDestination:service:
_setHidingDisconnect:
_setIsEnabled:
_setLinkContext:forLinkID:
_setObject:forKey:
_setQueue:
_setService:
_setServices:
_setServices:commands:capabilities:
_setTemporaryMessageContext:
_setUpNWConnectionforTesting:
_setUpXPC
_setupAccountWithLoginID:accountConfig:authToken:password:completionHandler:
_setupComplete
_setupInfoComplete
_setupInterruptionHandler
_setupNewConnectionForAccount:
_setupSocketPairToDaemon
_setupUnreliableSocketPairConnection
_setupXPC
_shortServiceNameCString
_shouldAcceptIncomingType:forTopic:localURI:remoteURI:validateAliases:guid:
_shouldContinueFromLastSyncPoint
_shouldPairDirectlyOverIPsec
_shouldUseSocketForTransport
_signInFuzz
_signInQueue
_signInTimeout
_socketDescriptor
_stableGroupID
_startAsUPlusOneSession
_startAutomatically
_startCalled
_startListeningToMonitor:
_startStatsTimer
_state
_stateChanged
_statsTimer
_statusOfAccount:
_statusOfUsersOnService:
_stopAwaitingQuickSwitchAcknowledgementFromDelegateWithIdentifier:
_stopListeningToMonitor:
_streamName
_streamPreferences
_strictlyUnarchivedObjectOfClasses:fromData:error:
_stringForKey:
_stripFZIDPrefix
_stripPotentialTokenURIWithToken:
_strongSelfReference
_subActivity
_subServices
_subscriptionSlot
_subscriptionSource
_subscriptionSourceForContext:
_subscriptionSourceFromIntegerValue:
_supportsIPsecWithSPPLink
_suppressedDevices
_sync
_syncCollaboratorDictionary
_syncDaemonController
_syncDaemonControllerBuilder
_syncOntoMain
_syncTask
_sync_collaboratorWithIdentifier:errorHandler:resolverBlock:
_sync_currentIDStatusForDestinations:service:respectExpiry:listenerID:completionBlock:
_sync_currentRemoteDevicesForDestinations:service:listenerID:completionBlock:
_sync_refreshIDStatusForDestinations:service:listenerID:completionBlock:
_systemTimer
_task
_tempObject
_temporarilyStoreMessage:forServiceIdentifier:
_timeOfDeath
_timeout
_timeoutBlock
_timingOutDaemonProxyWithTimeout:errorHandler:
_token
_tokenString
_topic
_topicToAccountDictionaries
_topicToEnabledAccounts
_totalPacketsReceivedOnLink
_totalPacketsSentOnLink
_trafficClassApplied
_trafficClassInitialized
_trafficClassTLVProcessed
_trafficClassToUse
_transactionIDToBlockMap
_transactionIDToHandlersMap
_transactionMessageFromTransportMessage:groups:participants:accountInfo:
_transactionMessageFromTransportMessage:withDecryptedPayload:accountInfo:
_transactionMessageFromTransportMessage:withGroupID:groups:accountInfo:
_transactionMessageFromTransportMessage:withParticipants:accountInfo:
_transactionMessagesFromTransportMessages:withParticipants:groups:accountInfo:completion:
_translateParticipantIDForIncomingPacket:forLinkID:
_translateParticipantIDForOutgoingPacket:forLinkID:
_transportType
_type
_uniqueID
_uniqueIDForDevice:
_uniqueIDLock
_uniqueIDToConnection
_uniqueIDToProgress
_updateActivity:isSupported:
_updateAvailability
_updateCacheWithDictionary:service:
_updateDelegatesWithOldAccounts:newAccounts:
_updateDependentDevicesWithDevicesInfo:
_updateFlags
_updateLinkedDevicesWithDevicesInfo:
_updateLocalAccountVisibility
_updateSelfRetentionBasedOnInFlightRequestCount
_updateService:withTinkerDevice:shouldAdd:shouldSwitch:
_upgradedTrafficClass
_uri
_useConfServer
_uuid
_validateDelegateState
_validateStateForAccountID:timeoutMode:
_verboseFunctionalLogging
_waitForPreConnectionDataForConnected
_wakingDowngradeCount
_wantsPseudonymUpdates
_warmupQueryCacheForService:
_writeDatagram:datagramSize:datagramInfo:options:completionHandler:
_writeHandler
_writeLock
_writeToDirectConnection:datagram:datagramSize:currentDatagramCount:totalDatagramCount:datagramInfo:datagramOptions:completionHandler:
_writeToNWConnection:datagram:datagramSize:currentDatagramCount:totalDatagramCount:datagramInfo:datagramOptions:completionHandler:
_writeToNWConnectionArrayOfDatagrams:datagramSizes:datagramInfo:datagramOptions:datagramCount:completionHandler:
_writeToOSChannelDatagrams:datagramSizes:datagramInfo:datagramOptions:datagramCount:completionHandler:
_writeToSocket:datagrams:datagramSizes:datagramInfo:datagramOptions:datagramCount:completionHandler:
_xpc
_xpcDaemonController
absoluteString
acAccountWithProfileID:username:accountStore:
acceptInvitation
acceptInvitation:
acceptInvitation:withContext:serverAcknowledgedBlock:
acceptInvitation:withData:
acceptInvitationWithData:
accessoryDataReceived:withGUID:forTopic:toIdentifier:fromID:context:
accessoryReportMessageReceived:accessoryID:controllerID:withGUID:forTopic:toIdentifier:fromID:context:
account:accountInfoChanged:
account:aliasesChanged:
account:connectedDevicesChanged:
account:dependentDevicesUpdated:
account:dependentDevicesUpdatedUponReconnect:
account:devicesChanged:
account:displayNameChanged:
account:isActiveChanged:
account:localDeviceAdded:
account:localDeviceRemoved:
account:loginChanged:
account:nearbyDevicesChanged:
account:profileChanged:
account:pseudonymsChanged:
account:registrationStatusInfoChanged:
account:vettedAliasesChanged:
accountAdded:
accountController:accountDisabled:
accountController:accountEnabled:
accountController:accountRemoved:
accountController:accountUpdated:
accountDictionariesForService:
accountDisabled:onService:
accountEnabled
accountEnabled:onService:
accountForAlias:
accountIDDescriptionMap
accountInfo
accountMatchingSim:
accountMatchingSimIdentifier:
accountRegisteredURIs
accountSync
accountType
accountWithLoginID:service:
accountWithUniqueID:
accounts
accountsChanged:forTopic:
acknowledgeMessageWithGUID:forAccountWithUniqueID:broadcastTime:messageSize:priority:
acknowledgeMessageWithStorageGUID:realGUID:forAccountWithUniqueID:broadcastTime:messageSize:priority:broadcastID:connectionType:
acknowledgeOutgoingMessageWithGUID:alternateCallbackID:forAccountWithUniqueID:
acknowledgeSessionID:clientID:
activateAlias:
activateAliases:
activateWithCompletion:
activeAliases
activeID
activity
activityIdentifier
activityInfoWithSubActivity:URIs:
activityInfoWithSubActivity:devices:
activityInfoWithSubActivity:tokens:
activityMonitor:didReceiveActivityUpdate:
activityMonitorCollaboratorWithCompletion:
activityMonitorCollaboratorWithErrorHandler:
addAccount:
addAccountWithLoginID:serviceName:uniqueID:accountType:accountInfo:
addAliases:
addAliases:toAccount:
addDelegate:
addDelegate:forService:listenerID:queue:
addDelegate:queue:
addDelegate:queue:completion:
addDelegate:withDelegateProperties:queue:
addDeliveryHandler:
addDeliveryHandler:uuid:
addDirectConnectionForLinkID:linkContext:
addEntries:withCompletion:
addEntriesFromDictionary:
addHandler:
addIndex:
addInterruptionHandler:forTarget:
addListener:forTopic:
addListenerID:
addListenerID:forService:
addListenerID:services:
addListenerID:services:commands:
addNewIDSDataChannelLinkWithAttributes:linkAttributesLength:
addObject:
addObjectsFromArray:
addObserver:selector:name:object:
addPairedDevice:
addPairedDevice:completion:
addPairedDeviceWithInfo:completion:
addRegistrationDelegate:queue:
addedDelegateForService:withCompletion:
adminAccessTokens:error:
alias
aliasStrings
aliasToAccountsMap
aliasesToRegister
allKeysForObject:
allObjects
allValues
allocationDone:sessionInfo:
allowCloudDelivery
allowUrgentMessages
allowWakingMessages
allowedTrafficClassifiers
alternateCallbackID
anyObject
appContext
appendBytes:length:
appendFormat:
appendMiddleware:
appendString:
appleCareSignInUserName:DSID:authToken:requestID:
appleCareSignOutUserWithRequestID:
appleIDUserStatus
applecareResponseForRequestID:withError:
applicationIdentifier
applicationToVerificationInfoProviders
archivedDataWithRootObject:requiringSecureCoding:error:
array
arrayByAddingObject:
arrayByApplyingSelector:
arrayWithObject:
arrayWithObjects:count:
assertQueueIsCurrent
assertQueueIsNotCurrent
assertTransportThreadRealTimeMode:completionHandler:
assertion
attributesOfItemAtPath:error:
augmentConnectionGroupNetworkParameters:
augmentNetworkParametersForSession:participantID:parameters:
augmentNetworkParametersForSessionAlias:participantIDAlias:salt:parameters:
augmentSimulatorNetworkParametersForSession:participantID:parameters:withQueue:completionHandler:
augmentSimulatorNetworkParametersForSessionAlias:participantIDAlias:salt:parameters:withQueue:completionHandler:
authTokenChanged:forAccount:
authenticateAccount
authenticateAccount:
authenticatePhoneWithCompletion:
authenticatePhoneWithRequestUUID:
authenticationCertificateSignatures
authenticationChangedForAccount:
autoBugCaptureWithCompletion:
autorelease
availabilityForListenerID:forService:
awaitAcknowledgementFromServiceDelegate:
batchProcessingBlock
beginBroadcastingWithInfo:withCompletion:
block
blockRemoteTimeouts
blockUntilConnected
blockUntilSendQueueIsEmpty
bluetoothMACAddress
boolValue
boostContext
broadcastID
broadcastParameterForService:
broadcastProxyForTarget:messageContext:protocol:
broadcastProxyForTarget:messageContext:protocol:priority:completion:
broadcastTime
bundleIdentifier
bytes
bytesSent
cStringUsingEncoding:
cacheIncomingGroup:completion:
cachedConnection
cachedMetadata
cachedPseudonymURIMap
callStackSymbols
canSendMessageWithAccount:toDestination:
canUseDirectMessaging
cancel
cancelIdentifier:error:
cancelInvitation
cancelInvitation:
cancelInvitation:serverAcknowledgedBlock:
cancelInvitation:withData:
cancelInvitation:withRemoteEndedReasonOverride:
cancelInvitationWithData:
cancelInvitationWithRemoteEndedReasonOverride:
cancelItemWithIdentifier:service:
cancelOpportunisticDataOnService:withIdentifier:
cancelOpportunisticDataWithIdentifier:error:
cancelPendingAckTimer
capabilities
capabilitiesForListenerID:
carrierNonce
caseInsensitiveCompare:
cbuuid
certifiedDeliveryContext
changeType
channelNumber
checkIfListeningForActivity:completion:
checkMessageSize:priority:
checkServerStorageForService:withCompletion:
checkTransportLogWithReason:
checkinLock
childConnectionID
class
cleanupSessionWithInstanceID:
clearCacheWithCompletion:
clearIDSState
clearPowerAssertion
clientContext
close
closeSocketWithOptions:
cloudConnected
cloudKitContainer
code
collaboratorPromiseDictionary
commands
commandsForListenerID:
compactDescription
compare:
completion
completionBlocksByRequestID
componentsSeparatedByString:
conciseACKSupported
conformsToProtocol:
connectPairedDevice:
connectPairedDeviceWithID:completion:
connectToDaemonWithLaunch:
connectToDaemonWithLaunch:services:commands:capabilities:
connectToPeer:
connected
connectedDevices
connectedLinks
connection
connection:account:receivedGroupSessionParticipantDataUpdate:
connection:account:receivedGroupSessionParticipantUpdate:context:
connection:account:sessionInviteReceived:fromID:transportType:options:context:messageContext:
connection:connectedDevicesChanged:
connection:devicesChanged:
connection:didFlushCacheForRemoteURI:fromURI:guid:
connection:didHintCheckingTransportLogWithReason:
connection:didReceiveData:
connection:didSendOpportunisticDataWithIdentifier:toIDs:
connection:didUpdateDeviceIdentity:error:context:
connection:handleInvocation:isReply:
connection:identifier:alternateCallbackID:willSendToDestinations:skippedDestinations:registrationPropertyToDestinations:
connection:identifier:didSendWithSuccess:error:context:
connection:identifier:fromID:hasBeenDeliveredWithContext:
connection:incomingAccessoryData:fromID:context:
connection:incomingAccessoryReportMessage:accessoryID:controllerID:context:
connection:incomingAckWithIdentifier:forTopic:toIdentifier:fromIdentifier:hasBeenDeliveredWithContext:isAppAck:
connection:incomingData:fromID:context:
connection:incomingDataFromDirectConnection:withGUID:forTopic:toIdentifier:fromID:context:
connection:incomingEngramMessage:fromID:context:
connection:incomingGUIDAckFromDirectConnection:
connection:incomingGroupData:fromID:context:
connection:incomingInvitation:fromID:context:
connection:incomingInvitationUpdate:fromID:context:
connection:incomingMessage:fromID:
connection:incomingMessage:fromID:context:
connection:incomingMessageFromDirectConnection:withGUID:forTopic:toIdentifier:fromID:context:
connection:incomingOpportunisticData:withIdentifier:fromID:context:
connection:incomingPendingMessageFromID:context:
connection:incomingProtobuf:fromID:context:
connection:incomingProtobufFromDirectConnection:withGUID:forTopic:toIdentifier:fromID:context:
connection:incomingTopLevelMessage:fromID:messageContext:
connection:isActiveChanged:
connection:messageIdentifier:alternateCallbackID:updatedWithResponseCode:error:lastCall:
connection:messageIdentifier:alternateCallbackID:updatedWithResponseCode:error:lastCall:messageContext:
connection:messageSendFailed:responseCode:
connection:nearbyDevicesChanged:
connectionComplete:withResponse:
connectionDidClose:
connectionForLinkID:
connectionInfoByServiceIdentifier
connectionIsIncoming
connectionMessageSendQueue
connectionReadyCallback
connectionSetupInProgress
connectionType
consentTokens:error:
constructRAResponseDictionary:completionHandler:
constructRAResponseDictionaryForServices:completionHandler:
consumeQueryContext:
containerForService:create:
contextType
continueWithResult:
continuity
continuity:didDiscoverType:withData:fromPeer:
continuity:didFailToStartAdvertisingOfType:withError:
continuity:didFailToStartScanningForType:withError:
continuity:didLosePeer:type:
continuity:didStartAdvertisingOfType:
continuity:didStartScanningForType:
continuity:didStartTrackingPeer:type:error:
continuity:didStopAdvertisingOfType:
continuity:didStopAdvertisingOfType:withError:
continuity:didStopScanningForType:
continuity:didStopTrackingPeer:type:
continuityConnectToPeer:
continuityDidConnectToPeer:withError:
continuityDidDisconnectFromPeer:withError:
continuityDidDiscoverPeerWithData:fromPeer:
continuityDidDiscoverType:withData:fromPeer:
continuityDidFailToStartAdvertisingOfType:withError:
continuityDidFailToStartScanningForType:withError:
continuityDidLosePeer:
continuityDidLosePeer:forType:
continuityDidStartAdvertisingOfType:
continuityDidStartScanningForType:
continuityDidStartTrackingPeer:error:
continuityDidStartTrackingPeer:forType:error:
continuityDidStopAdvertisingOfType:
continuityDidStopAdvertisingOfType:withError:
continuityDidStopScanningForType:
continuityDidStopTrackingPeer:
continuityDidStopTrackingPeer:forType:
continuityDidUpdateState:
continuityDidUpdateStateToState:
continuityDisconnectFromPeer:
continuityStartAdvertisingOfType:withData:withOptions:
continuityStartScanningForType:withData:mask:
continuityStartScanningForType:withData:mask:boostedScan:duplicates:
continuityStartScanningForType:withData:mask:peers:
continuityStartScanningForType:withData:mask:peers:boostedScan:duplicates:
continuityStartTrackingPeer:forType:
continuityStopAdvertisingOfType:
continuityStopScanningForType:
continuityStopTrackingPeer:forType:
controller:receivedIncomingMessageData:context:
copy
copyItemAtPath:toPath:error:
copyOpportunisticCacheWithBlock:
copyStringGUIDForObject:
copyWithZone:
count
countByEnumeratingWithState:objects:count:
createAliasForLocalParticipantIDWithSalt:
createAliasForLocalParticipantIDWithSalt:completionHandler:
createAliasForLocalParticipantIDWithSalt:delegateQueueCompletionHandler:
createAliasForParticipantID:salt:
createAliasForParticipantID:salt:completionHandler:
createAliasForParticipantID:salt:delegateQueueCompletionHandler:
createAliasForParticipantID:salt:sessionID:
createDataBlobFrom:port:
createDirectMessageConnectionIfNeeded
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
createDispatchDataForMessageSend:isAck:ackMessageId:
createEndpointForSessionIDAlias:topic:participantIDAlias:salt:
createGroupDescriptorForSessionIDAlias:topic:salt:
createIfNecessaryDirectConnectionForLinkID:linkContext:
createServiceConnectionWithServiceName:invalidationHandler:terminationHandler:peerEventHandler:peerQueue:
createSessionIDAliasWithSalt:completionHandler:
createSessionIDAliasWithSalt:delegateQueueCompletionHandler:
curXPCMessagePriority
currentDonatedEntries:
currentECVersionWithBlock:
currentHandler
currentIDStatusForDestination:service:listenerID:queue:completionBlock:
currentIDStatusForDestination:service:respectExpiry:listenerID:queue:completionBlock:
currentIDStatusForDestinations:service:listenerID:queue:completionBlock:
currentIDStatusForDestinations:service:respectExpiry:listenerID:queue:completionBlock:
currentItem
currentPhoneUserSubscriptionSourceWithError:
currentRemoteDevicesForDestinations:service:listenerID:queue:completionBlock:
currentResult
currentSIMsWithError:
currentStreamName
currentSubscriptionsForActivity:completion:
currentThread
cypherIdentifier
daemonConnectionLost
daemonController
daemonControllerBuilder
daemonControllerDidConnect
daemonControllerDidDisconnect
daemonControllerWillConnect
daemonDisconnected
daemonListener
daemonRequestTimer
data
dataMode
dataPathType
dataProtectionClass
dataReceived:withGUID:forTopic:toIdentifier:fromID:context:
dataUsingEncoding:
dataValue
dataWithBytes:length:
dataWithContentsOfFile:options:error:
dataWithPropertyList:format:options:error:
datagramChannelForSessionDestination:error:
datagramChannelForSessionDestination:options:error:
datagramChannelForSocketDescriptor:error:
datagramConnectionForSessionDestination:error:
datagramConnectionForSessionDestination:uid:error:
datagramConnectionForSocketDescriptor:error:
date
dateByAddingComponents:toDate:options:
dateRegistered
deactivateAlias:
deactivateAliases:
deactivateAndPurgeIdentify
deactivateAndPurgeIdentifyForAccount:
deactivatePairedDevices
debugDescription
declineInvitation
declineInvitation:
declineInvitation:serverAcknowledgedBlock:
declineInvitation:withData:
declineInvitationWithData:
decodeBoolForKey:
decodeInt64ForKey:
decodeIntForKey:
decodeIntegerForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
decodeTopLevelObjectOfClass:forKey:error:
decryptData:keyID:sequenceNumber:error:
defaultBroadcaster
defaultCenter
defaultLink
defaultManager
defaultProperties
delegate
delegateByServiceType
delegateMap
delegates
deleteAllCachedValuesForGroupWithID:WithCompletion:
deleteAllKnownGroupsForGroupContext:completion:
deleteAllKnownGroupsWithCompletion:
deleteCachedValueForForGroupContext:withGroupID:completion:
deletePairedDevice:
deletePairedDevice:withCompletionBlock:queue:
deletePairedDeviceWithID:completion:
deliveryStats:
dependentDevicesForAccount:
description
destination
destinationCorrelationIdentifier
destinationLightweightStatus
destinationWithDestinations:
destinationWithDevice:
destinationWithDeviceURI:
destinationWithRapportPublicIdentifier:
destinationWithRapportPublicIdentifierURI:
destinationWithStrings:
destinationWithURI:
destinations
device
device:nsuuidChanged:
device:pairingDeleted:
deviceChangedForDeviceID:isNearby:isConnected:isCloudConnected:completionHandler:
deviceColor
deviceConnection
deviceConnectionKey
deviceForFromID:
deviceForFromID:fromDevices:
deviceForUniqueID:
deviceIdentifier
deviceIdentifierDidChange:
deviceType
deviceWithIdentifier:
devicesForBTUUID:
dictionary
dictionaryRepresentation
dictionaryWithCapacity:
dictionaryWithDictionary:
dictionaryWithObjects:forKeys:count:
dictionaryWithObjectsAndKeys:
dictionaryWithPlistData:
didAuthenticatePhoneWithAuthenticationCertificateData:requestUUID:error:
didCacheGroup:completion:
didCreateGroup:completion:
didFetchPhoneUserSubscriptionSource:requestUUID:error:
didFlushCacheForService:remoteURI:fromURI:guid:
didGeneratePhoneAuthenticationSignature:nonce:certificates:labelIDs:inputData:requestUUID:error:
didGetIdentities:error:
didReceiveDecryptionFailureForGroup:completion:
didReceiveMasterKeyMaterials:
didReceivePublickeys:
didReceiveRegistrationIdentityUpdateWithCompletion:
didRequestCarrierTokenString:requestUUID:error:
didSendOpportunisticDataWithIdentifier:onAccount:toIDs:
didSetPhoneUserSubscriptionSource:requestUUID:error:
didSwitchActivePairedDevice:
didSwitchActivePairedDevice:forService:wasHandled:
didUpdateGroup:withNewGroup:completion:
directConnectionReady
directMessageConnection
directMessagingAllowed
directMessagingMetadata
directMessagingReportStatsMSEC
directMessagingRetryMSEC
directMessagingState
directMessagingSupported
directMessagingTimeOutMSEC
disableTemporaryPhoneAlias:withCompletion:
disableTemporaryPhoneAlias:withError:
disableUserType:onService:completion:
disconnectActivePairedDevice:
disconnectFromDaemon
disconnectFromPeer:
displayName
diversifier
domain
donateEntries:withCompletion:
doubleValue
dropAllMessagesWithoutAnyAllowedClassifier
dsidToDeviceList
dsidToFamilyMember
enableAccount:
enableTemporaryPhoneAlias:withCompletion:
enableTemporaryPhoneAlias:withError:
enableUserType:onService:completion:
enabledAccountsForService:
enclosureColor
encodeBool:forKey:
encodeInt64:forKey:
encodeInt:forKey:
encodeInteger:forKey:
encodeObject:forKey:
encodeWithCoder:
encryptData:sequenceNumber:error:
encryptedPayload
endSession
endSession:
endSession:withData:
endSessionWithData:
endpoint
endpointState
engramDataReceived:withGUID:forTopic:toIdentifier:fromID:context:
engramGroupID
enqueueExecutionWithTarget:afterDelay:
enumerateCachedKeyMaterialUsingBlock:
enumerateDecryptingKeysAndSaltsUsingBlock:
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
error
errorForMissingEntitlement:
errorHandler
errorWithDomain:code:userInfo:
executablePath
expectsPeerResponse
expirationDate
expiryEpoch
extractDictionaryFromDataBlobFrom:error:
failWithError:
failedDecryptingMessage:reason:forGroupID:onService:
failedToSendMessage:responseCode:
familyDevicesForService:listenerID:withCompletion:
familyEndpointData
familyHandles
familyInfoForService:
familyMembers
featureID
fetchAllKnownGroups:
fetchChangesSinceToken:completion:
fetchCloudKitTransparencyStateWithCompletion:
fetchEndpointCacheStateForServiceIdentifier:localURI:remoteURI:completion:
fetchFamilyMembersWithDevices:
fetchGroupWithGroupID:completion:
fetchGroupWithID:completion:
fetchPeerVerificationInfos:completionBlock:
fetchPhoneUserSubscriptionSourceWithRequestUUID:
fetchPrivateClientDataDescriptionForService:completion:
fetchPrivateDeviceDataDescription:
fetchSelfVerificationInfo:
fetchSelfVerificationInfoForApplication:withCompletion:
fetchStoredUserDescriptions:
fetchTransparentEndpointsForServiceIdentifier:localURI:remoteURI:verifyAgainstTrustCircle:completion:
fetchVerifierAccountKeyPublicDataWithCompletion:
fetchVerifierAccountKeyTrustedDevicesWithCompletion:
fetchVerifierCloudKitTrustedDevicesWithCompletion:
fetchVerifierKVSTrustedDevicesWithCompletion:
fetchVerifierTrustedDevicesWithCompletion:
fetchXPCStateDescriptionForProcesses:withCompletion:
fileSystemRepresentation
fileURLWithPath:
finishedProvisioningPseudonym:success:error:forRequestUUID:
finishedRenewingPseudonym:success:error:requestUUID:
finishedReportingRequestUUID:withError:
finishedRevokingPseudonymWithSuccess:error:requestUUID:
finishedSigningForRequest:signedData:error:
finishedTransaction
finishedVerifyingSignedDataForRequest:success:error:
firewallCollaboratorWithCompletion:
firewallCollaboratorWithErrorHandler:
first
firstObject
firstRoutableInternetDestinationForSelf
flushCache
flushLinkProbingStatusWithOptions:
forSyncMessaging
forceAccountRenewalOnService:
forceRefreshIDStatusForDestinations:service:listenerID:queue:completionBlock:
forceRemoveAccount
forceRemoveAccount:
forgetDeviceWithID:completion:
forwardInvocation:
forwardMethodWithReplyIsSync:block:
forwarderWithCompletion:
forwardingTargetForSelector:
fromID
fromServerStorage
fulfillWithRemoteObject:
fulfillWithValue:
fullIdentityClassA:
fullIdentityClassC:
fullIdentityClassD:
gameCenterModifyForUserName:
gameCenterSignInWithUserName:authToken:password:accountInfo:accountStatus:handles:
gameCenterSignOut
generateMetadataWithDatagramInfo:options:currentDatagramCount:totalDatagramCount:byteBuffer:
generatePhoneAuthenticationSignatureOverData:withCompletion:
generatePhoneAuthenticationSignatureOverData:withRequestUUID:
generationCounter
getAdminAccessTokensWithWithServiceUserID:accessoryID:pairingToken:completionBlock:queue:
getArgumentTypeAtIndex:
getConsentTokensWithServiceUserID:accessoryIDs:adminID:completionBlock:queue:
getContext
getDecryptionKeyIDSet
getDeliveryStats
getDeliveryStatsWithCompletionBlock:queue:
getDestinationsLightweightStatusDict
getDirectMessagingMetadataDictionary
getEncryptionKeyID
getFileSystemRepresentation:maxLength:
getIDSDataChannelsQueue
getLocalDeviceInfoWithCompletion:
getLocalDeviceInfoWithCompletionBlock:queue:
getMessageTypeForFirstMessage
getMuted
getNwProtocolMetaDataForTrafficClass:
getPairedDeviceInfoWithCompletion:
getPairedDeviceInfoWithCompletionBlock:queue:
getPairingDevicesWithCompletion:
getPairingRecordsWithCompletion:
getParticipantIDForAlias:salt:completionHandler:
getParticipantIDForAlias:salt:delegateQueueCompletionHandler:
getParticipantIDForAlias:salt:sessionID:
getPowerAssertion
getPreferences
getProgressUpdateForIdentifier:error:
getProgressUpdateForIdentifier:service:
getQueue
getRegisteredIdentities
getServiceUserIDsWithCompletionBlock:queue:
getURIsToParticipantIDRequests
getUUIDBytes:
getUserAccessTokensWithServiceUserID:userID:userHandle:accessoryRequests:completionBlock:queue:
groupContext
groupContext:cacheGroup:completion:
groupContext:cachedGroupWithID:completion:
groupContext:fetchAllKnownGroups:
groupContext:fetchGroupWithID:completion:
groupContext:latestCachedGroupWithStableID:completion:
groupContext:upsertGroupWithInfo:previousGroup:completion:
groupContextCacheMiddleware
groupContextController
groupContextController:accountsForAlises:
groupContextController:didCreateGroup:
groupContextDataSource
groupContextWithCompletion:
groupCrypto
groupFromPublicDataRepresentation:completion:
groupFromPublicDataRepresentation:inContext:completion:
groupSessionDidTerminate:
groupSessionEnded:withReason:error:
groupSessionID
groupSessionIDAlias
groupSessionKeyValueDeliveryProviderCollaboratorWithErrorHandler:
groupShareReceived:withGUID:forTopic:toIdentifier:fromID:context:
handleFailureInFunction:file:lineNumber:description:
handleFailureInMethod:object:file:lineNumber:description:
handleGroupSessionKeyValues:
handleGroupSessionValue:forKey:participant:
handleIncomingDatagram:datagramSize:datagramInfo:datagramOptions:
handleIncomingUpdate:onActivity:completion:
handleReceivedIncomingMessageData:identifier:context:
handlerUUID
hardDeregister
hasActiveConnection:forKey:
hasListenerForID:
hasListenerID:
hasListenerID:forService:
hasPostedSetupComplete
hasPrefix:
hasSuffix:
hash
hbhDecryptionkey
hbhEncryptionkey
healSelf:completionBlock:
healSelfForApplication:withHealableErrors:withCompletion:
homeKitGetAdminAccessTokensWithServiceUserID:accessoryID:pairingToken:
homeKitGetConsentTokensWithServiceUserID:accessoryIDs:adminID:
homeKitGetServiceUserIDs
homeKitGetUserAccessTokensWithServiceUserID:userID:userHandle:accessoryRequests:
homeKitRefreshUserAccessTokensWithServiceUserID:userID:accessoryRequests:
iCloud
iCloudAccount
iCloudModifyForUserName:
iCloudSignInHackWithUserName:password:
iCloudSignInWithUserName:authToken:password:accountInfo:accountStatus:handles:
iCloudSignOut
iCloudSignOutHack
iCloudUpdateForUserName:accountInfo:
iMessageReportSpamCheckUnknownResponseForRequestID:status:abusive:delay:withError:
iTunesSignInWithUserName:authToken:password:accountInfo:accountStatus:handles:
iTunesSignOut
idInfoForDestinations:service:infoTypes:options:listenerID:queue:completionBlock:
idStatusUpdatedForDestinations:service:
identifier
identifierForServiceDelegate:
identities
identityData
identityDataForDataProtectionClass:error:
identityWithData:error:
idsPriorityToUse
impactedServiceIdentifiers
impactedServicesForService:withCompletion:
inFlightLock
inFlightRequestCount
inFlightRequests
incomingAccountSyncMessage:
incomingInvitation:withGUID:forTopic:toIdentifier:fromID:context:
incomingInvitationUpdate:withGUID:forTopic:toIdentifier:fromID:context:
incomingMessageBytes
incomingMessageCount
incomingResponseIdentifier
incrementAccessCount
indexOfObject:
init
initForReadingFromData:error:
initForSyncMessagingWithQueue:takingOverAndResumingConnection:
initSocketWithDevice:options:completionHandler:queue:
initStreamWithDevice:options:completionHandler:queue:
initSyncControllerWithQueue:
initWithAccount:
initWithAccount:commands:
initWithAccount:commands:indirectDelegateCallouts:delegateContext:
initWithAccount:destinations:options:
initWithAccount:destinations:options:delegateContext:
initWithAccount:destinations:transportType:
initWithAccount:destinations:transportType:delegateContext:
initWithAccount:destinations:transportType:uniqueID:delegateContext:
initWithAccount:options:
initWithAccountIdentity:aliasToAccountsMap:serviceName:
initWithAccountIdentity:dataSource:queue:
initWithAccountKey:deviceKey:
initWithActivity:serviceIdentifier:
initWithActivity:serviceIdentifier:queue:
initWithActivity:serviceIdentifier:queue:xpcConnector:
initWithApplicationIdentifier:
initWithArray:
initWithAttributes:maxBitrate:relayServerProvider:relaySessionToken:relaySessionKey:hbhEncryptionkey:hbhDecryptionkey:
initWithBase64EncodedString:options:
initWithBlock:
initWithBlock:queue:
initWithBlock:queue:isSync:
initWithBool:
initWithBytes:length:
initWithBytes:length:encoding:
initWithCBUUID:pairingProtocolVersion:BTOutOfBandKey:
initWithCBUUID:publicIdentityDataClassA:classC:classD:
initWithCapabilitiesMap:
initWithCapacity:
initWithCapacity:queue:block:
initWithCoder:
initWithConnectedSocket:dataMode:connectionIndex:
initWithConnection:protocol:alreadyConfigured:forceSecureCoding:
initWithData:accountUniqueID:fromID:loginID:serviceName:
initWithData:encoding:
initWithDataRepresentation:
initWithDefaults
initWithDelegate:queue:
initWithDelegate:queue:delegateContext:
initWithDelegateContext:queueController:
initWithDestination:options:
initWithDestination:state:expirationDate:uniqueID:context:
initWithDevice:options:completionHandler:queue:
initWithDictionary:
initWithDictionary:accountUniqueID:fromID:loginID:serviceName:
initWithDictionary:boostContext:
initWithDictionary:schema:
initWithDictionary:uniqueID:serviceName:
initWithDictionary:uniqueID:serviceName:delegateContext:
initWithDictionaryRepresentation:
initWithDisconnectedBlockAndNoTimeout:
initWithDomain:code:userInfo:
initWithDummyInformation
initWithEncryptionContext:encryptionKeySize:
initWithError:
initWithFeatureID:scopeID:expiryEpoch:allowedServices:
initWithFromServerStorage:certifiedDeliveryContext:identifier:
initWithGroupSessionID:localParticipantID:remoteParticipantID:dataMode:connectionIndex:
initWithGroupSessionID:localParticipantID:remoteParticipantID:salt:dataMode:connectionIndex:
initWithGroupSessionID:participantID:dataMode:
initWithGroupSessionID:salt:serviceName:
initWithGroupSessionID:serviceName:
initWithGroupSessionIDAlias:participantIDAlias:salt:dataMode:
initWithHandler:
initWithHandler:queue:
initWithIdentifier:
initWithIdentifier:timeoutSec:properties:
initWithIdentityData:
initWithIdentityData:error:
initWithIdentityDataClassA:classC:classD:
initWithInput:initialValue:
initWithInteger:
initWithInterface:queue:
initWithKeyOptions:valueOptions:capacity:
initWithLimit:timeLimit:
initWithLoginID:uniqueID:serviceName:
initWithLoginID:uniqueID:serviceName:delegateContext:
initWithMachServiceName:options:
initWithName:contextKey:
initWithObjects:
initWithObjectsAndKeys:
initWithPasswordManager:CTAdapter:signInTimeout:signInFuzz:queue:
initWithPayload:
initWithPrefixedURI:
initWithProtobufData:type:isResponse:
initWithProtocol:
initWithProtocol:ivarQueue:remoteMessageQueue:
initWithProtocol:ivarQueue:remoteMessageQueue:completion:
initWithPseudonym:changeType:updateFlags:
initWithQueue:
initWithQueue:connectionCreationBlock:
initWithQueue:remoteObject:
initWithQueue:syncOntoMain:takingOverAndResumingConnection:
initWithQueue:takingOverAndResumingConnection:
initWithQueueController:ivarQueue:
initWithReason:guid:service:additionalInformation:
initWithRemoteObject:rootConnection:
initWithRequestTimer:
initWithResponseHandler:timeoutBlock:systemTimer:
initWithService:
initWithService:commands:
initWithService:commands:manuallyAckMessages:
initWithService:commands:manuallyAckMessages:delegateContext:
initWithService:delegate:queue:parent:
initWithService:delegateContext:
initWithService:manuallyAckMessages:
initWithService:queue:
initWithService:serviceDomain:
initWithServiceIdentifier:
initWithServiceName:queue:delegate:
initWithServiceType:userInfos:
initWithSessionID:
initWithSet:
initWithSet:copyItems:
initWithSocket:queue:delegate:
initWithSocketDescriptor:
initWithState:expirationDate:uniqueID:context:
initWithSubActivity:pushToken:serverTimestamp:clientContext:isDeviceOnline:
initWithSubscriptionIdentifier:authenticationCertificate:signature:nonce:
initWithSubscriptionIdentifiers:authenticationCertificates:inputData:nonce:signature:
initWithSubscriptionSlot:labelID:
initWithSubscriptionSource:IMEI:carrierNonce:
initWithSuccess:
initWithSuccess:serverProvidedSMT:error:
initWithSyncDaemonControllerBuilder:
initWithSyncDaemonControllerBuilder:daemonControllerBuilder:
initWithTarget:connection:protocol:forceSecureCoding:offMainThread:
initWithTarget:connection:timeoutInSeconds:errorHandler:
initWithTask:delegate:queue:
initWithTimeInterval:name:shouldWake:target:selector:userInfo:
initWithTimeIntervalSince1970:
initWithTimeIntervalSinceNow:
initWithTokenString:
initWithTopic:
initWithTopic:keyManager:
initWithURI:
initWithURI:andLastSeenDate:
initWithURI:expirationDate:selected:
initWithURI:isUserVisible:validationStatus:
initWithURI:maskedURI:properties:
initWithUUIDBytes:
initWithUUIDString:
initWithUnprefixedURI:
initWithUserType:status:
initWithWithFullIdentityDataClassA:classC:classD:
initWithXPCAdapter:
initWithfromID:state:expirationDate:uniqueID:context:
initialLocalSyncCompletedForServices:
initialLocalSyncStartedForServices:
initialStateByService
initialize
inputData
inputStream
inspectPayload:messageGuid:
intValue
integerValue
interalTestingCollaboratorWithCompletion:
interalTestingCollaboratorWithErrorHandler:
interface
interfaceWithProtocol:
internal
internalAccounts
interruptionHandler
interruptionHandlerByTarget
intersectSet:
invalidate
invalidateDirectConnections
invalidateKeyMaterialByKeyIndexes:
invalidateTimeoutAndReturnHandlerForRequestID:
invalidateTimeoutsAndReturnHandlersForAllRequests
invalidationHandler
invitationTimeOut
inviteTimeout
invocationWithMethodSignature:
invoke
invokeWithTarget:
isActive
isAudioEnabled
isAwaitingAcknowledgement
isCloudConnected
isConnected
isConnecting
isDaemonConnection:
isDefaultPairedDevice
isDeviceOnline
isDirectMessagingRequested:
isDonated
isEnabled
isEqual:
isEqualToCryptor:
isEqualToData:
isEqualToIgnoringCase:
isEqualToNumber:
isEqualToPhoneSubscription:
isEqualToPseudonym:
isEqualToPseudonymChange:
isEqualToPseudonymProperties:
isEqualToSet:
isEqualToString:
isEqualToURI:
isFaceTimeEnabled
isFileURL
isFirstGDRAllowlistedAccount
isGeneratedLocally
isHSATrusted
isIdentical:
isInTransientRegistrationState
isInternalInstall
isInvitationService
isKindOfClass:
isLightweightParticipant
isMemberOfClass:
isMessageEligible:options:destinationDevice:
isNearby
isNonUIInstall
isPretendingToBeFull
isQueueCurrent
isResponse
isSync
isTemporary
isTinker
isTokenURI
isTransientAllowlistedAccount
isUsableForOuterMessaging
isUserDisabled
isUserVisible
isValidDestination:error:
isVirtualRelayLink
isiMessageEnabled
ivarQueue
joinGroupSession:withOptions:
joinWithOptions:
keyDiversifier
keyIndex
keyRepresentationForType:isResponse:
keyTransparencyCollaboratorWithCompletion:
keyTransparencyCollaboratorWithErrorHandler:
keyValueDelivery
keyValueDeliveryForSessionID:
keyValueDeliveryForSessionID:completionHandler:
kickGetDependentForAccount:
kickSelfVerificationForServiceIdentifier:localURI:remoteURI:completion:
kickVerificationForServiceIdentifier:localURI:remoteURI:completion:
knownRecordIDsFromList
lastActivityDate
lastPathComponent
lastSeen
latestCachedGroupWithStableID:completion:
leaveGroupSession
leaveGroupSession:participantInfo:options:
leaveGroupSessionWithOptions:
length
linkID
linkItemAtPath:toPath:error:
linkUUID
linkedDeviceForFromID:withRelationship:
linkedDevicesForService:
linkedDevicesWithRelationship:
linkedUserURIs
listenForIncomingConnection:
listener
listenerGUID
listenerID
listeners
listenersByActivity
listeningForUpdates
localInterfaceName
localLinkFlags
localObject
localObjectDiedNotification:
localObjectExists
localPairingResponseForRequestID:withError:
localPairingResponseForRequestID:withError:pairedDevices:
localParticipantID
localRelayLinkID
localSetupCompleted
localSetupUnpair
localSetupUnpairStart
locallyPresent
lock
logConnectionStatisticsInPowerDictionary
longLongValue
longValue
mainBundle
manageDesignatedMembers:forGroup:sessionID:withType:
manageDesignatedMembers:withType:
manager:incomingInvitation:
manager:receiverDidAcceptInvitation:
manager:receiverDidDeclineInvitation:
manager:senderDidCancelInvitation:
manuallyAckMessages
matchingDevice
matchingSim
maxBitrate
maxCompatibilityVersion
maxEffectivePayloadSize
maxEffectivePayloadSizeForService:
maxHomeKitPayloadSize
maxMTU
messageBody
messageData
messageID
messageIDToMessageDictionary
messageIdentifier:alternateCallbackID:forAccount:updatedWithResponseCode:error:lastCall:context:
messageIdentifier:forTopic:toIdentifier:fromIdentifier:hasBeenDeliveredWithContext:
messageIdentifierInner:alternateCallbackID:forAccount:updatedWithResponseCode:error:lastCall:context:isDirectMessage:
messageReceived:withGUID:withPayload:forTopic:toIdentifier:fromID:context:
messageUUID
methodReturnLength
methodReturnType
methodSignatureForSelector:
middlewareCacheCostForContext:
minCompatibilityVersion
minusSet:
multiplexer
mutableBytes
mutableCopy
name
nearby
nearbyDevices
networkType
nextRegistrationDate
nonWaking
nonce
noteCreatedService:
noteFinishedTransactionForService:
noteItem:
notifyToken
nsuuid
nukeCloudKitTransparencyStateWithCompletion:
nukeTransparencyStateWithCompletion:
null
numberFromString:
numberOfArguments
numberWithDouble:
numberWithInt:
numberWithInteger:
numberWithLongLong:
numberWithUnsignedChar:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLong:
numberWithUnsignedLongLong:
numberWithUnsignedShort:
object
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
objectsPassingTest:
observer
oneToOneECCQuicktestEncryptionWithData:completion:
open
openSocketWithOptions:
openedSocket:forHandlerID:error:
operatingSystemVersion
opportunistic
opportunisticCollaboratorWithCompletion:
opportunisticCollaboratorWithErrorHandler:
opportunisticDataReceived:withIdentifier:fromID:context:
originalGUID
osChannelInfoLog
outgoingMessageBytes
outgoingMessageCount
outgoingResponseIdentifier
outputStream
pairWithFirst:second:
pairedDeviceManagerCollaboratorWithCompletion:
pairedDeviceManagerCollaboratorWithErrorHandler:
pairedDevicesInfo:
pairingCollaboratorWithCompletion:
pairingCollaboratorWithErrorHandler:
pairingCollaboratorWithTimeout:errorHandler:
pairingProtocolVersion
pairingType
parameters
parseDirectMessagingState
participantID
participantIDAlias
participantIDForAlias:salt:
participantIdentifier
participantUpdatedForSession:
participants
participantsForCypher:completion:
participantsForDestinations:service:listenerID:queue:completionBlock:
participantsFromEndpoints:
passwordChanged:forAccount:
passwordUpdatedForAccount:
path
peerID
peerIsNearby
peerResponseIdentifier
peerSupportsDeviceConnection
pendingAckTimerSuspended
pendingIncomingMessageWithGUID:forTopic:toIdentifier:fromID:context:
pendingInvitations
pendingInvitationsForService:
pendingInvocations
pendingTransactions
performAction:errorHandler:
performBlock:
performBlock:waitUntilDone:
performDaemonControllerTask:
performGroupTask:
performOutstandingKeyTransparencyVerificationWithCompletion:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performSyncAction:
performTask:
persistPendingInvitation:forService:withUniqueID:
persistReceivedInvitation:forService:withUniqueID:
persistedTokenForTaskHandler:completion:
phoneSubscriptionWithLabelID:
phoneSubscriptionWithSIM:
phoneSubscriptionWithSubscriptionSlot:
phoneSubscriptionWithSubscriptionSlot:andLabelID:
phoneSubscriptionsFromCTSIMs:
plistData
pointerValue
populateImpactedServices:
popupPromptWithTitle:message:defaultButton:defaultUrl:alternateButton:alternatrUrl:completion:
postNewDeviceNotification:iCloudSignIn:iMessageSignIn:facetimeSignIn:forAppleID:
postNotificationName:object:
powerAssertionOptions
prefixedURI
pretendingToBeFull
primaryServiceName
priority
processDatagram:datagramSize:readHandler:readHandlerWithOptions:
processIncomingMessage:messageType:messageIdentifier:
processInfo
processMetadataForDatagram:size:datagramInfo:options:
processName
productBuildVersion
productName
productVersion
profileID
profileInfo
profileValidationErrorReason
profileValidationStatus
progressWithTotalUnitCount:
properties
protectionClassIdentityDataMap
protobuf
protobufActionForIncomingRequestsOfType:
protobufActionForIncomingResponsesOfType:
protobufActionForType:isResponse:
protocol
provideCredential:forUser:onService:withCompletion:
provisionPseudonymForURI:onAccount:withProperties:requestProperties:requestUUID:
provisionPseudonymForURI:withProperties:completion:
provisionPseudonymForURI:withProperties:requestProperties:completion:
provisionPseudonymWithProperties:completion:
provisionPseudonymWithProperties:requestProperties:completion:
pseudonym
pseudonymForPseudonymURI:
pseudonymPropertiesWithFeatureID:expiryDurationInSeconds:
pseudonymPropertiesWithFeatureID:scopeID:expiryDurationInSeconds:
pseudonymUpdateTaskQueue
pseudonyms
pseudonymsForMaskedURI:
pseudonymsForMaskedURI:matchingProperties:
publicDataRepresentationForGroup:completion:
publicDataRepresentationForGroup:inContext:completion:
publicIdentityClassA:
publicIdentityClassC:
publicIdentityClassD:
pushToken
pushTopic
qFetchParticipantsFromDeviceMessges:andGroupsFromGroupMessages:completion:
qGroupContextWithDeviceIdentity:completion:
qIngestMessages:completion:
qPerformWithToken:
qSetupSeal
queryStatusWithOptions:
queue
queueOneIdentifier
queueOneToMessageIDDictionary
raise:format:
rangeOfString:
reRegisterWithUserID:action:service:
readDatagramWithCompletionHandler:
readDatagramsWithCompletionHandler:
readFromNWConnection:maximumDatagrams:readHandler:readHandlerWithOptions:
readyToRead
reason
receivedDirectMessagingSocketWithContext:
receivedGroupSessionParticipantDataUpdate:forTopic:toIdentifier:fromID:
receivedGroupSessionParticipantUpdate:forTopic:toIdentifier:fromID:context:
receivedIDSSimulatorSupportData:serviceName:messageIdentifier:
receivedInvitations
receivedInvitationsForService:
receivedMetadataForDirectMessaging:
recentlyBlockedEntries:
recipientAlias
reconnectSession
reconnectSessionWithUniqueID:
reconnectUPlusOneSession
recvKeyMaterial:
redeliverMessagesForDevice:completion:
reduceWithCompletion:
refreshIDStatusForDestination:service:listenerID:queue:completionBlock:
refreshIDStatusForDestinations:service:listenerID:forceRefresh:queue:completionBlock:
refreshIDStatusForDestinations:service:listenerID:queue:completionBlock:
refreshIDStatusForDestinations:service:listenerID:queue:errorCompletionBlock:
refreshRegistrationForAccount:
refreshUserAccessTokens:error:
refreshUserAccessTokensWithServiceUserID:userID:accessoryRequests:completionBlock:queue:
regenerateRegisteredIdentity
regionBasePhoneNumber
regionID
regionServerContext
registerAccount:
registerForNotificationsOnServices:
registerPluginWithOptions:
registerResultBlock:
registeredIdentityTimestampsWithBlock:
registeredURIs
registration
registrationAlertInfo
registrationCertificate
registrationCollaboratorWithCompletion:
registrationCollaboratorWithErrorHandler:
registrationControlGetRegistrationStateForRegistrationType:requestID:
registrationControlResponseForRequestID:withError:
registrationControlSetRegistrationStateForRegistrationType:toState:requestID:
registrationControlStatusResponseForRequestID:requestID:withError:
registrationError
registrationFailedForAccount:needsDeletion:
registrationInfo
registrationStatus
registrationWithServiceType:accountType:isTemporary:value:
relationship
relayCombinedSoftwareID
relayIPv6
relayPort
relayServerProvider
relaySessionID
relaySessionToken
reloadAccounts
remoteConnectionType
remoteDataSoMask
remoteMessageQueue
remoteNetworkType
remoteObject
remoteObjectDiedNotification:
remoteObjectExists
remoteObjectProxy
remoteObjectProxyWithErrorHandler:
remoteObjectProxyWithTimeoutInSeconds:errorHandler:
remoteObjectProxyWithUserInfo:errorHandler:
remoteParticipantID
remoteRATType
remoteRelayLinkID
removeAccount:
removeActiveConnection:forKey:
removeAliases:
removeAliases:fromAccount:
removeAllDonatedEntries:
removeAllEntries:
removeAllObjects
removeConnectionWithConnectionName:completionHandler:
removeDelegate:forService:listenerID:
removeDelegateForService:
removeDeliveryHandler:
removeDirectConnectionForLinkID:
removeDonatedEntries:withCompletion:
removeEntries:withCompletion:
removeFirstObject
removeHandler:
removeIDSDataChannelLinkContext:linkUUID:reason:
removeInterruptionHandlerForTarget:
removeItemAtPath:error:
removeItemAtURL:error:
removeListener:forTopic:
removeListenerID:
removeListenerID:forService:
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removeObjectsAtIndexes:
removeObjectsForKeys:
removeObjectsInArray:
removeObjectsInRange:
removeObserver:name:object:
removeOrderedObjectForKey:
removeParticipantIDs:
removeParticipantIDs:forGroup:sessionID:
removeParticipants:
removePendingInvitation:
removePendingInvitation:forService:
removeReceivedInvitation:
removeReceivedInvitation:forService:
removeRegistrationDelegate:
removeSentinelFromAliases:
removeTemporaryPhoneAlias:withCompletion:
removeTemporaryPhoneAlias:withError:
renewPseudonym:forUpdatedDuration:completion:
renewPseudonym:forUpdatedExpiryEpoch:completion:
renewPseudonym:forUpdatedExpiryEpoch:requestProperties:completion:
renewPseudonym:onAccount:forUpdatedExpiryEpoch:requestProperties:requestUUID:
repairAccounts
replaceAllEntriesWithEntries:withCompletion:
replaceDonatedEntriesWithEntries:withCompletion:
replaceEntries:replaceAll:withCompletion:
replaceEntries:withCompletion:
replaceObjectAtIndex:withObject:
replacementObjectForXPCConnection:encoder:object:
reportAction:ofTempURI:fromURI:onAccount:requestUUID:
reportAction:ofTempURI:fromURI:withCompletion:
reportFirstIncomingPacketTimeForMKI:
reportFirstOutgoingPacketTimeForMKI:
reportMKIArrival:isLocallyGenerated:
reportSpamMessage:
reportSpamMessage:serviceIdentifier:
reporterTimer
reportiMessageSpam:toURI:
reportiMessageSpamCheckUnknown:count:requestID:
reportiMessageUnknownSender:messageID:isBlackholed:isJunked:messageServerTimestamp:toURI:
requestActiveParticipants
requestActiveParticipantsForGroupSession:
requestCarrierTokenForSubscriptionSource:IMEI:carrierNonce:requestUUID:
requestCarrierTokenWithMessageBody:completion:
requestCarrierTokenWithParameters:completion:
requestCurrentPhoneUserSubscriptionSourceWithCompletion:
requestDataBlob:
requestDataBlobForParticipantIDs:
requestDataCryptorForTopic:completionHandler:
requestEncryptionKeyForGroup:participants:
requestEncryptionKeyForParticipants:
requestIDStatusForDestination:service:listenerID:queue:completionBlock:
requestIDStatusForDestinations:service:listenerID:queue:completionBlock:
requestMasterKeyMaterialForGroup:
requestNWConnectionToVirtualParticipant:forSession:completionHandler:
requestNWConnectionWithDataBlob:completionHandler:
requestNWConnectionforIDSGroupSessionBroadcastParameter:withCompletionHandler:
requestNWConnectionforIDSGroupSessionUnicastParameter:
requestNWConnectionforIDSGroupSessionUnicastParameter:withCompletionHandler:
requestPublicKeys
requestPublicKeysForRealTimeEncryption:forAccountWithID:
requestRealTimeEncryptionMasterKeyMaterial:forGroup:
requestSelectedSubscriptionsWithCompletion:
requestSessionInfoWithOptions:
requestURIsForParticipantIDs:completionHandler:
requestURIsForParticipantIDs:withRequestID:forGroupSession:
requestUnselectedTemporaryPhoneAliasesWithCompletion:
requestUnselectedTemporaryPhoneAliasesWithError:
requireBluetooth
requiredCapabilities
requiredIDStatusForDestination:service:listenerID:queue:completionBlock:
requiredIDStatusForDestinations:service:listenerID:queue:completionBlock:
requiredLackOfCapabilities
resendSubServicesToDaemonForCurrentDevice
resetKeysForGroup:
resetRealTimeEncryptionKeys:forGroup:
resourceTransferMetadata
resourceTransferSandboxExtension
resourceTransferURLString
respondsToSelector:
resume
resumePendingAckTimer
retain
retainCount
retrieveFirewallWithQueue:completion:
reunionSyncCollaboratorForClientProcessName:withCompletion:
reunionSyncCollaboratorWithErrorHandler:
reunionSyncCompletedForServices:requestID:
reunionSyncCompletedForServices:withCompletion:
reunionSyncStartedForServices:requestID:
reunionSyncStartedForServices:withCompletion:
revokePseudonym:completion:
revokePseudonym:onAccount:requestProperties:requestUUID:
revokePseudonym:requestProperties:completion:
rootConnection
salt
scanUnsignedLongLong:
scannerWithString:
scheduleRead
scheduleTimeoutWithResponseHandler:timeoutInterval:timeoutBlock:
scheduleTransactionLogTask:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
schemaIdentifier
seal
second
selectDefaultLink:
selectSubscription:withCompletion:
selectSubscription:withError:
selected
selectedPhoneNumberRegistrationSubscriptionWithError:
selector
self
sendAccessoryData:toAccessoryID:accessToken:options:identifier:error:
sendAckForMessageID:guidToAck:
sendAckForMessageWithContext:
sendAheadGroup:priority:options:identifier:completion:
sendAheadGroup:priority:options:identifier:error:
sendAllocationRequest:
sendAllocationRequest:options:
sendAppAckForDirectMessage:
sendAppAckWithGUID:
sendAppAckWithGUID:toDestination:forAccountWithUniqueID:connectionType:
sendCertifiedDeliveryReceipt:
sendCertifiedDeliveryReceipt:serviceName:
sendData:
sendData:forKey:encryption:capability:
sendData:forKey:encryption:capability:completionHandler:
sendData:forKey:encryption:capability:withCompletion:
sendData:fromAccount:toDestinations:priority:options:identifier:error:
sendData:priority:options:identifier:error:
sendData:toDestinations:priority:options:identifier:error:
sendEventConnectedWithDummyLinkInfo
sendFakePushFromFile:completion:
sendInvitation
sendInvitation:fromAccount:toDestination:options:identifier:error:
sendInvitation:toDestination:options:identifier:error:
sendInvitation:withData:declineOnError:
sendInvitation:withOptions:
sendInvitationToDestination:expirationDate:context:serverAcknowledgedBlock:
sendInvitationUpdate:fromAccount:toDestination:options:identifier:error:
sendInvitationUpdate:toDestination:options:identifier:error:
sendInvitationUpdate:toDestination:priority:options:identifier:error:
sendInvitationWithData:
sendInvitationWithData:declineOnError:
sendInvitationWithOptions:
sendMKMRecoveryRequestToGroup:
sendMasterKeyMaterialToGroup:
sendMediaEncryptionInfoWithMKM:MKS:MKI:isLocallyGenerated:encryptionSequenceNumber:
sendMessage:fromAccount:toDestinations:options:identifier:error:
sendMessage:fromAccount:toDestinations:priority:options:identifier:error:
sendMessage:toDestinations:options:identifier:error:
sendMessage:toDestinations:priority:options:identifier:error:
sendMessageData:onTopic:withOptions:identifier:completion:
sendMessageData:withOptions:identifier:completion:
sendMessageWithParameters:options:
sendMessageWithSendParameters:
sendMetadata
sendOpportunisticData:onService:usingAccountWithUniqueID:withIdentifier:options:
sendOpportunisticData:options:identifier:error:
sendOptInUpdateForApplications:withCompletion:
sendOptInUpdateForApplicationsOptInState:withCompletion:
sendPersistedFile:userInfo:toDestinations:usingAccountWithUniqueID:identifier:
sendPrekeyToGroup:
sendProtobuf:fromAccount:toDestinations:priority:options:identifier:error:
sendProtobuf:toDestinations:priority:options:identifier:error:
sendRealTimeEncryptionMKMRecoveryRequest:toGroup:
sendRealTimeEncryptionMasterKeyMaterial:toGroup:
sendRealTimeMediaPrekey:toGroup:
sendResourceAtURL:metadata:fromAccount:toDestinations:priority:options:identifier:error:
sendResourceAtURL:metadata:toDestinations:priority:options:identifier:error:
sendServerMessage:command:
sendServerMessage:command:fromAccount:
sendServerMessage:command:usingAccountWithUniqueID:
sendSessionMessage:
sendSessionMessage:toDestinations:
sendSessionMessage:toDestinations:forSessionWithUniqueID:
sendXPCObject:
sendXPCObject:objectContext:
senderAlias
senderCorrelationIdentifier
senderMergeID
serializeSessionInfoMetadata:
serverIsDegraded
serverMessagingCollaboratorWithCompletion:
serverMessagingCollaboratorWithErrorHandler:
serverReceivedTime
serverVerifiableEncoding
service:account:identifier:alternateCallbackID:willSendToDestinations:skippedDestinations:registrationPropertyToDestinations:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:sentBytes:totalBytes:
service:account:incomingAccessoryData:fromAccessoryID:context:
service:account:incomingAccessoryReportMessage:controllerID:accessoryID:context:
service:account:incomingData:fromID:context:
service:account:incomingInvitation:withContext:
service:account:incomingInvitationUpdate:withContext:
service:account:incomingMessage:fromID:
service:account:incomingMessage:fromID:context:
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingTopLevelMessage:fromID:messageContext:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:messageIdentifier:alternateCallbackID:updatedWithResponseCode:error:lastCall:
service:account:messageIdentifier:alternateCallbackID:updatedWithResponseCode:error:lastCall:messageContext:
service:account:receivedGroupSessionParticipantDataUpdate:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantUpdate:context:
service:activeAccountsChanged:
service:connectedDevicesChanged:
service:devicesChanged:
service:didFlushCacheForRemoteURI:fromURI:guid:
service:didHintCheckingTransportLogWithReason:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:didSwitchActivePairedDevice:acknowledgementBlock:
service:didUpdatePseudonymsWithChanges:
service:familyInfoUpdated:
service:linkedDevicesChanged:
service:linkedDevicesUpdated:
service:nearbyDevicesChanged:
service:tinkerDeviceAdded:
service:tinkerDeviceRemoved:
service:tinkerDeviceUpdated:
service:token:time:error:
serviceAllowedTrafficClassifiersDidReset:
serviceAvailability
serviceDomain
serviceIdentifier
serviceMinCompatibilityVersion
serviceName
serviceProperties
serviceType
serviceUserIDs:error:
serviceUserInfos
serviceWithIdentifier:commands:manuallyAckMessages:completion:
serviceWithIdentifier:commands:manuallyAckMessages:delegateContext:completion:
serviceWithIdentifier:completion:
services
servicesForListenerID:
session:audioEnabled:
session:didCreateParticipantIDAlias:forParticipantID:salt:
session:didReceiveActiveLightweightParticipants:success:
session:didReceiveActiveParticipants:success:
session:didReceiveBlockedParticipantIDs:withCode:isTruncated:
session:didReceiveBlockedParticipantIDs:withCode:withType:isTruncated:
session:didReceiveData:
session:didReceiveData:dataType:forParticipant:
session:didReceiveDataBlob:forParticipant:
session:didReceiveKeyMaterial:
session:didReceiveParticipantID:forParticipantIDAlias:salt:
session:didReceiveParticipantIDs:withCode:managementType:
session:didReceiveQueryBlockedParticipantIDs:withCode:isTruncated:
session:didReceiveReport:
session:didReceiveServerErrorCode:
session:didReceiveURIsForParticipantIDs:withRequestID:
session:didRegisterPluginAllocationInfo:
session:didRemoveParticipantIDs:withCode:isTruncated:
session:didUnregisterPluginAllocationInfo:
session:hasOutdatedSKI:
session:invitationSentToTokens:shouldBreakBeforeMake:
session:muted:
session:participantDidJoinGroupWithInfo:
session:participantDidLeaveGroupWithInfo:
session:receivedInvitationAcceptFromID:
session:receivedInvitationAcceptFromID:withData:
session:receivedInvitationCancelFromID:
session:receivedInvitationCancelFromID:withData:
session:receivedInvitationDeclineFromID:
session:receivedInvitationDeclineFromID:withData:
session:receivedSessionEndFromID:withData:
session:receivedSessionMessageFromID:withData:
session:shouldInvalidateKeyMaterialByKeyIndexes:
sessionAcceptReceived:fromID:withData:
sessionBySessionID
sessionCancelReceived:fromID:withData:
sessionDeclineReceived:fromID:withData:
sessionDidJoinGroup:participantInfo:error:
sessionDidJoinGroup:participantUpdate:error:
sessionDidJoinGroup:participantUpdateDictionary:error:
sessionDidJoinGroup:participantsInfo:error:
sessionDidLeaveGroup:error:
sessionDidReceiveParticipantUpgrade:participantType:error:
sessionEndReceived:fromID:withData:
sessionEnded:
sessionEnded:withReason:error:
sessionEndedReason
sessionForAccount:fromID:identifier:transportType:
sessionID
sessionIDAliasWithSalt:
sessionInvitationReceivedWithPayload:forTopic:sessionID:toIdentifier:fromID:transportType:
sessionMessageReceived:fromID:withData:
sessiondidReceiveKeyUpdate:
setAccountIDDescriptionMap:
setAccountIdentity:
setActiveConnection:forKey:
setActivityContinuation:
setActivityIdentifier:
setAllowCloudDelivery:
setAllowedTrafficClasses:
setAllowedTrafficClassifiers:
setAllowedTrafficClassifiersForDevice:classifiers:completion:
setAlternateCallbackID:
setAlwaysSkipSelf:
setAppContext:
setAppleID:
setApplicationIdentifier:
setApplicationToVerificationInfoProviders:
setArgument:atIndex:
setAssertion:
setAttributes:ofItemAtPath:error:
setAudioEnabled:
setAudioEnabled:forSessionWithUniqueID:
setAuthToken:
setBatchProcessingBlock:
setBluetoothMACAddress:
setBoostContext:
setByAddingObjectsFromSet:
setBypassDuet:
setBypassStorage:
setCTAdapter:
setCachedConnection:
setCachedPseudonymURIMap:
setCapabilities:forListenerID:shouldLog:
setCertifiedDeliveryContext:
setChannelPreferences:
setChildConnectionID:
setClasses:forSelector:argumentIndex:ofReply:
setClearStateOnLaunch:
setCloudKitContainer:
setCollaboratorPromiseDictionary:
setCommand:
setCommandContext:
setCommands:forListenerID:
setCompletedUnitCount:
setCompletion:
setCompletionBlock:
setCompressPayload:
setConciseACKSupported:
setConnectingQueue:
setConnection:
setConnectionInfoByServiceIdentifier:
setConnectionIsIncoming:
setConnectionMessageSendQueue:
setConnectionQueue:
setConnectionReadyCallback:
setConnectionSetupInProgress:
setConnectionState:
setContext:
setCurXPCMessagePriority:
setCurrentPhoneUserSubscriptionSource:completion:
setCurrentStreamName:
setDaemonController:
setDaemonControllerBuilder:
setDaemonDeathResend:
setData:
setDataProtectionClass:
setDataToEncrypt:
setDecodingFailurePolicy:
setDelegate:
setDelegate:forService:
setDelegate:queue:
setDelegateByServiceType:
setDelegateCapabilities:
setDelegateLinkID:
setDelegates:
setDeliveryMinimumTime:
setDeliveryStatusContext:
setDeliveryTime:
setDestinationDevice:
setDestinations:
setDevice:
setDeviceConnection:
setDirectConnectionReady:
setDirectMessageConnection:
setDirectMessagingAllowed:
setDirectMessagingMetadata:
setDirectMessagingReportStatsMSEC:
setDirectMessagingRetryMSEC:
setDirectMessagingState:
setDirectMessagingSupported:
setDirectMessagingTimeOutMSEC:
setDisableAliasValidation:
setDsidToDeviceList:
setDsidToFamilyMember:
setDuetIdentifiersOverride:
setECVersion:withCompletion:
setEncryptPayload:
setEnforceRemoteTimeouts:
setError:
setErrorHandler:
setEventHandler:
setExpectsPeerResponse:
setExpirationDate:
setExportedInterface:
setExportedObject:
setFamilyMembers:
setFinishedTransaction:
setFireAndForget:
setForSyncMessaging:
setForceEncryptionOff:
setFromID:
setFromServerStorage:
setGroupContext:
setGroupData:
setHandler:
setHomeKitPayload:
setIdentifier:
setIdentityData:
setIdsPriorityToUse:
setInFlightLock:
setInFlightRequests:
setIncomingMessageBytes:
setIncomingMessageCount:
setInitialStateByService:
setInterestingRegistrationProperties:
setInterface:
setInterface:forSelector:argumentIndex:ofReply:
setInterruptionHandler:
setInvalidationHandler:
setInvitationTimeOut:
setInviteTimeout:
setInviteTimetout:forSessionWithUniqueID:
setIsAudioEnabled:
setIsDeviceOnline:
setIsDonated:
setIsMuted:
setIsVirtualRelayLink:
setKeyMaterialCache:
setKnownRecordIDsFromList:
setLabelID:
setLinkIDToParticipantMap:
setLinkPreferences:
setLinkPreferences:service:
setListenerGUID:
setListenerServices:commands:capabilities:
setListenersByActivity:
setListeningForUpdates:
setLiveMessageDelivery:
setLocalDelivery:
setLoginID:
setManuallyAckMessages:
setMatchingDevice:
setMaxBitrate:
setMergeID:
setMessage:
setMessageID:
setMessageIDToMessageDictionary:
setMetricReportIdentifier:
setMonitor:
setMuted:
setMuted:forSessionWithUniqueID:
setNSUUID:
setNSUUID:onDeviceWithUniqueID:forService:
setNeedReply:
setNonCloudWaking:
setNonWaking:
setObject:forKey:
setObject:forKeyedSubscript:
setObserver:
setOnGroupCreate:
setOrderedObject:forKey:
setOriginalGUID:
setOriginalTimestamp:
setOutgoingMessageBytes:
setOutgoingMessageCount:
setPairedDeviceInfo:
setParticipantID:
setParticipantInfo:
setPassword:
setPassword:forUsername:onService:
setPassword:forUsername:onService:completionBlock:
setPasswordManager:
setPeerID:
setPeerIsConnected:
setPeerIsNearby:
setPeerResponseIdentifier:
setPeerSupportsDeviceConnection:
setPendingAckTimer:
setPendingAckTimerSuspended:
setPendingInvocations:
setPendingTransactions:
setPhoneUserSubscriptionSource:withRequestUUID:
setPowerAssertionOptions:
setPreferInfraWiFi:
setPreferInfraWiFi:service:
setPreferences:forSessionWithUniqueID:
setPreferredDataPathType:
setPretendingToBeFull:
setPriority:
setProtectionClassIdentityDataMap:
setProtobuf:
setProtobufAction:forIncomingRequestsOfType:
setProtobufAction:forIncomingResponsesOfType:
setProtobufAction:forProtobufType:isResponse:
setPseudonymUpdateTaskQueue:
setPushPriority:
setQueryContext:
setQueue:
setQueueOneIdentifier:
setQueueOneToMessageIDDictionary:
setRATType:
setReadHandlerWithOptions:
setReducerBlock:
setRegionBasePhoneNumber:
setRegionID:
setRelayCombinedSoftwareID:
setRelayIP:
setRelayIPv6:
setRelayPort:
setRelaySessionID:
setRelaySessionKey:
setRelaySessionToken:
setRemoteObject:
setRemoteObjectInterface:
setReporterTimer:
setRequireAllRegistrationProperties:
setRequireBluetooth:
setRequireLackOfRegistrationProperties:
setRequireLocalWiFi:
setRequiredCapabilities:requiredLackOfCapabilities:
setRequiredCapabilities:requiredLackOfCapabilities:forSessionWithUniqueID:
setRootConnection:
setSalt:
setSeal:
setSecond:
setSelectedSubscriptions:withCompletion:
setSelectedSubscriptions:withError:
setSelector:
setSendMode:
setSenderMergeID:
setService:
setServiceNameAccountControllerMap:
setServiceProperties:
setServices:forListenerID:
setSessionBySessionID:
setSessionID:
setShortServiceNameCString:
setShouldContinueFromLastSyncPoint:
setShouldListen:forActivity:completion:
setSignInFuzz:
setSignInTimeout:
setSocket:
setState:
setStreamPairWithInputStream:outputStream:
setStreamPreferences:
setStrongSelfReference:
setSubService:
setSubscriptionSlot:
setSupportsIPsecWithSPPLink:
setSync:
setSyncCollaboratorDictionary:
setSyncDaemonController:
setSyncOntoMain:
setSyncTask:
setTarget:
setTask:
setTempObject:
setTimeout:
setTotalPacketsReceivedOnLink:
setTotalPacketsSentOnLink:
setTotalUnitCount:
setTrafficClassApplied:
setTrafficClassInitialized:
setTrafficClassTLVProcessed:
setTrafficClassToUse:
setUPlusOneMode:isInitiator:
setURIs:
setUniqueID:
setUpgradedTrafficClass:
setUseDictAsTopLevel:
setUsedEngram:
setUuid:
setValue:forKey:
setWakingDowngradeCount:
setWakingPushPriority:error:
setWantsCertifiedDelivery:
setWantsDeliveryStatus:
setWantsFirewallDonation:
setWantsManualAck:
setWantsProgress:
setWantsPseudonymUpdates:
setWantsResponse:
setWiFiAssist:
setWithArray:
setWithObject:
setWriteCompletionHandler:
setXPCAdapter:
setXPCConnector:
setXpcDaemonController:
setupAccountWithLoginID:aliases:password:completionHandler:
setupAccountWithLoginID:password:completionHandler:
setupAccountWithLoginID:serviceName:accountType:accountConfig:authToken:password:transactionID:
setupAccountWithSetupParameters:aliases:completionHandler:
setupActivityMonitorClient:forActivity:
setupCompleteForAccount:transactionID:setupError:
setupCompleteWithInfo:
setupCompletedForPairedDeviceWithID:completion:
setupConnectionIfApplicable
setupIDSDeviceConnection
setupInvitationsForService:
setupNewSessionWithConfiguration:
setupRealtimeEncryptionController:forAccountWithID:
setupServerMessagingClient:withUUID:forTopic:
sharedDefaults
sharedInstance
sharedInstanceForBagType:
shortServiceNameCString
shortValue
shouldPairDirectlyOverIPsec
shouldReportMetric
shouldUseSocketForTransport
signData:withAlgorithm:completion:
signData:withAlgorithm:onService:options:requestUUID:
signData:withAlgorithm:options:completion:
signInController
signInController:service:didChangeStatus:
signInFuzz
signInQueue
signInTimeout
signInUsername:onService:waitUntilRegistered:withCompletion:
signInUsername:withProvidedCredential:onService:waitUntilRegistered:completion:
signOutService:completion:
slot
slotID
socket
sortedArrayUsingComparator:
stableBluetoothIdentifier
standardUserDefaults
start
startActiveProbingWithOptions:
startAdvertisingOfType:withData:withOptions:
startInternal
startMKMRecoveryForParticipantIDs:
startOTRTest:
startOTRTest:priority:
startPowerLogReportTimer
startScanningForType:withData:mask:
startScanningForType:withData:mask:boostedScan:duplicates:
startScanningForType:withData:mask:peers:
startScanningForType:withData:mask:peers:boostedScan:duplicates:
startScanningForType:withData:mask:peers:withOptions:
startScanningForType:withData:mask:peers:withOptions:boostedScan:
startScanningForType:withData:mask:peers:withOptions:boostedScan:duplicates:
startScanningForType:withData:mask:withOptions:
startScanningForType:withData:mask:withOptions:boostedScan:
startScanningForType:withData:mask:withOptions:boostedScan:duplicates:
startScanningForType:withData:peers:withOptions:
startScanningForType:withData:withOptions:
startTrackingPeer:
startTrackingPeer:forType:
state
status
statusOfUsersOnService:withCompletion:
stopActiveProbingWithOptions:
stopAdvertisingOfType:
stopAwaitingAcknowledgementFromAllServiceDelegates
stopAwaitingAcknowledgementFromServiceDelegateWithIdentifier:
stopBroadcastingForSubActivity:withCompletion:
stopLocalPairingForDeviceWithID:completion:
stopLocalSetup
stopScanningForType:
stopTrackingPeer:
stopTrackingPeer:forType:
storageGuid
streamConnectionForSessionDestination:error:
streamConnectionForSocketDescriptor:error:
stringByAppendingString:
stringByReplacingOccurrencesOfString:withString:
stringGUID
stringRepresentation
stringWithCString:encoding:
stringWithFileSystemRepresentation:length:
stringWithFormat:
stringWithUTF8String:
strongSelfReference
strongToWeakObjectsMapTable
subActivity
subscribeInfo:forActivity:withCompletion:
subscriptionSlot
subscriptionSource
subscriptions
substringFromIndex:
superclass
supportsApplePay
supportsIPsecWithSPPLink
supportsIdentification
supportsMMSRelay
supportsPhoneCalls
supportsSMSRelay
supportsSecureCoding
supportsTethering
supportsiCloudPairing
suppressedDevices
suspendPendingAckTimer
switchActivePairedDevice:forAccount:
switchActivePairedDevice:forService:
switchActivePairedDeviceWithID:completion:
syncCollaboratorDictionary
syncDaemonController
syncDaemonControllerBuilder
syncOntoMain
syncTask
synchronousRemoteObjectProxyWithErrorHandler:
systemApplicationDidEnterBackground
systemApplicationDidResume
systemApplicationDidSuspend
systemApplicationWillEnterForeground
systemIsShuttingDown
systemTimer
tapToRadarWithTitle:message:context:completion:
target
task
taskHandler:accountInfoForAliases:completion:
taskHandler:groupsWithGroupIDs:completion:
taskHandler:messagesFromToken:completion:
taskHandler:participantsWithDestinations:completion:
taskHandler:persistToken:completion:
teardownAll
teardownService:
tempObject
testCloudQRConnection
testCloudQRConnection:
test_receiveData:forKey:fromParticipant:
threadDictionary
timeIntervalSince1970
timeIntervalSinceDate:
timeIntervalSinceNow
timeIntervalSinceReferenceDate
timeToUnderLimit:
timeoutBlock
timing
tokenString
tokens
topic
totalBytes
totalPacketsReceivedOnLink
totalPacketsSentOnLink
trackingPreventionSecret
trafficClassApplied
trafficClassInitialized
trafficClassTLVProcessed
trafficClassToUse
transactionLog
transactionLogMessageFromDictionaryRepresentation:
transportLog
triggerAllFirewallNotificationsWithHandle:delay:service:
triggerFinalDeregister
triggerFirewallDBCleanupWithInterval:
triggerKeyRollWithCompletion:
tryForceFamilyFetch
type
unarchivedObjectOfClass:fromData:error:
unarchivedObjectOfClasses:fromData:error:
underLimit
underLimitForItem:
underlyingFileDescriptor
unicastConnectorWithDataMode:
unicastParameterForParticipantID:dataMode:connectionIndex:
unicastParameterForParticipantIDAlias:salt:dataMode:connectionIndex:
unionSet:
uniqueID
uniqueIDOverride
unlock
unpairDeviceWithID:completion:
unpairStartForDeviceWithID:completion:
unprefixedURI
unregisterAccount
unregisterAccount:
unregisterPluginForGroup:options:
unregisterPluginWithOptions:
unselectSubscription:withCompletion:
unselectedTemporaryPhoneAliasesWithError:
unsetQueryContext:
unsignedCharValue
unsignedIntValue
unsignedIntegerValue
unsignedLongLongValue
unsignedLongValue
unsignedShortValue
unsubscribeActivity:andSubActivity:withCompletion:
unvalidateAliases:
unvalidateAliases:forAccount:
updateAccount:withAccountInfo:
updateAccountWithAccountInfo:
updateAuthorizationCredentials:token:
updateAuthorizationCredentials:token:forAccount:
updateAvailability
updateConnectedDevices:
updateConnection:
updateConnectionWithOptions:error:
updateDeviceIdentity:error:
updateFlags
updateMembers:forGroup:sessionID:withContext:messagingCapabilities:triggeredLocally:lightweightStatusDict:
updateMembers:withContext:messagingCapabilities:triggeredLocally:
updateMembers:withContext:triggeredLocally:
updatePairedDevice:pairingType:completion:
updatePairedDeviceWithID:supportIPsec:completion:
updateParticipantData:forGroup:sessionID:withContext:
updateParticipantData:withContext:
updateParticipantType:forGroup:sessionID:members:triggeredLocally:withContext:lightweightStatusDict:
updateParticipantType:members:withContext:triggeredLocally:
updateSubServices:
updateSubServices:forDevice:
updateSubServices:forService:deviceUniqueID:
updateTrafficClass:
updateUserWithOldUserName:newUserName:
upgradedTrafficClass
upsertGroupWithInfo:previousGroup:completion:
uriForFromID:
useCurrentEncryptionkeyWithHandler:
usedEngram
userAccessTokens:error:
userInfo
userUniqueIdentifier
utilities
uuid
validateAliases:
validateAliases:forAccount:
validateCachedGroup:isParentOfGroup:completion:
validateProfileForAccount:
validateReceivedInvitation:
validateStrictDecodingForSentInvitation:
value
valueForEntitlement:
valueWithPointer:
verificationInfoProviderForApplication:
verificationInfoProviderIdForApplication:
verifyAndRevealData:sendingDevice:cypherIdentifier:error:
verifyAndRevealData:withReceipient:cypherIdentifier:error:
verifySignedData:matchesData:forAlgorithm:onService:tokenUri:options:requestUUID:
verifySignedData:matchesExpectedData:withTokenURI:forAlgorithm:completion:
verifySignedData:matchesExpectedData:withTokenURI:forAlgorithm:options:completion:
vettedAliases
voicemailSync
waitForReply
wakingDowngradeCount
wantsAppAck
wantsPseudonymUpdates
wantsResponse
wantsTinkerDevices
wasInterrupted
watchPairing
weakObjectsHashTable
weakRefWithObject:
weakSharedInstance
weakToStrongObjectsMapTable
writeArrayOfDatagrams:datagramSizes:datagramInfo:datagramOptions:datagramCount:completionHandler:
writeDatagram:datagramSize:datagramInfo:options:completionHandler:
writeDatagram:datagramSize:flags:completionHandler:
writeDatagrams:datagramsSize:datagramsInfo:datagramsCount:options:completionHandler:
writeToFile:options:error:
xpcDaemonController
xpcObject:objectContext:
zone
@32@0:8@16@24
v16@0:8
q16@0:8
v40@0:8q16@24@32
v24@0:8q16
v48@0:8q16@24@32@40
v56@0:8q16@24@32@40@48
v60@0:8q16@24@32@40@48B56
v52@0:8q16@24@32@40B48
v64@0:8q16@24@32@40@48B56B60
v56@0:8q16@24@32@40B48B52
v24@0:8@16
v32@0:8@16q24
@"_IDSContinuity"
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v68@0:8@16@24i32@36@44@52@60
v52@0:8@16@24@32i40@44
v32@0:8@16@24
v40@0:8@16@24@32
v56@0:8@16@24@32@40@48
v56@0:8@16@24d32@40@48
v48@0:8@16@24@32@40
v56@0:8@16q24@32@40@48
v72@0:8@16@24q32@40@48@56@64
v64@0:8@16@24@32@40@48@56
v28@0:8B16@20
v48@0:8@16q24@32@40
v80@0:8@16@24@32@40@48@56q64q72
v48@0:8@16@24@32q40
v36@0:8@16@24I32
v32@0:8q16@24
v36@0:8@16@24B32
v28@0:8@16I24
v68@0:8@16@24@32@40@48B56@60
v44@0:8@16@24@32S40
v64@0:8S16@20@28@36B44@48@56
v40@0:8Q16@24@32
v48@0:8q16@24@32B40B44
v56@0:8@16@24B32B36@40@48
v40@0:8q16q24@32
v68@0:8@"NSString"16@"NSString"24i32@"NSDictionary"36@"NSString"44@"NSString"52@"NSString"60
v52@0:8@"NSString"16@"NSString"24@"NSString"32i40@"NSDictionary"44
v24@0:8@"NSString"16
v32@0:8@"NSString"16@"NSDictionary"24
v32@0:8@"NSString"16@"NSString"24
v40@0:8@"NSString"16@"NSString"24@"NSString"32
v32@0:8@"NSArray"16@"NSString"24
v56@0:8@"IDSURI"16@"NSString"24@"IDSPseudonymProperties"32@"IDSPseudonymRequestProperties"40@"NSString"48
v56@0:8@"IDSPseudonym"16@"NSString"24d32@"IDSPseudonymRequestProperties"40@"NSString"48
v48@0:8@"IDSPseudonym"16@"NSString"24@"IDSPseudonymRequestProperties"32@"NSString"40
v56@0:8@"NSData"16q24@"NSString"32@"IDSSigningOptions"40@"NSString"48
v72@0:8@"NSData"16@"NSData"24q32@"NSString"40@"IDSURI"48@"IDSSigningOptions"56@"NSString"64
v32@0:8@"NSNumber"16@"NSString"24
v64@0:8@"NSString"16@"NSString"24@"NSString"32@"NSDictionary"40@"NSNumber"48@"NSArray"56
v40@0:8@"NSString"16@"NSNumber"24@"NSString"32
v32@0:8@"NSData"16@"NSString"24
v48@0:8@"NSNumber"16@"NSString"24@"NSString"32@"NSString"40
v24@0:8@"NSArray"16
v24@0:8@"NSSet"16
v40@0:8@"NSArray"16@"NSString"24@"NSString"32
v24@0:8@"NSDictionary"16
v56@0:8@"NSData"16@"NSString"24@"NSString"32@"NSString"40@"NSDictionary"48
v32@0:8@"NSDictionary"16@"NSString"24
v56@0:8@"NSURL"16@"NSDictionary"24@"NSArray"32@"NSString"40@"NSString"48
v40@0:8@"NSDictionary"16@"NSNumber"24@"NSString"32
v28@0:8B16@"NSString"20
v32@0:8@"NSString"16q24
v48@0:8@"NSDictionary"16q24@"ENGroupID"32@"NSString"40
v56@0:8@"NSString"16@"NSString"24@"NSNumber"32@"NSNumber"40@"NSNumber"48
v80@0:8@"NSString"16@"NSString"24@"NSString"32@"NSNumber"40@"NSNumber"48@"NSNumber"56q64q72
v48@0:8@"NSString"16@"NSString"24@"NSString"32q40
v36@0:8@"NSSet"16@"NSSet"24I32
v32@0:8q16@"NSString"24
v32@0:8@"NSObject<OS_xpc_object>"16@"NSDictionary"24
v36@0:8@"NSString"16@"NSData"24B32
v32@0:8@"NSString"16@"NSData"24
v28@0:8@"NSString"16I24
v40@0:8@"NSData"16@"NSSet"24@"NSString"32
v68@0:8@"NSArray"16@"NSString"24@"NSString"32@"NSData"40@"IDSMessagingCapabilities"48B56@"NSDictionary"60
v44@0:8@"NSArray"16@"NSString"24@"NSString"32S40
v40@0:8@"NSSet"16@"NSString"24@"NSString"32
v48@0:8@"NSData"16@"NSString"24@"NSString"32@"NSData"40
v64@0:8S16@"NSString"20@"NSString"28@"NSArray"36B44@"NSData"48@"NSDictionary"56
v40@0:8@"NSString"16@"NSDictionary"24@"NSDictionary"32
v40@0:8@"NSArray"16@"NSUUID"24@"NSString"32
v32@0:8@"NSString"16@"NSArray"24
v40@0:8@"NSArray"16@"NSArray"24@"NSString"32
v40@0:8Q16@"NSData"24@"NSString"32
v40@0:8q16@"NSData"24@"NSDictionary"32
v40@0:8q16@"NSData"24@"NSData"32
v48@0:8q16@"NSData"24@"NSData"32@"NSArray"40
v48@0:8q16@"NSData"24@"NSData"32B40B44
v56@0:8q16@"NSData"24@"NSData"32@"NSArray"40B48B52
v56@0:8@"NSString"16@"NSString"24B32B36@"NSNumber"40@"NSString"48
v56@0:8q16@"IDSURI"24@"IDSURI"32@"NSString"40@"NSString"48
v40@0:8@"NSString"16@"NSString"24@"NSData"32
v40@0:8@"NSString"16@"NSArray"24@"NSString"32
v48@0:8@"NSString"16@"NSString"24@"NSString"32@"NSArray"40
v40@0:8@"NSString"16@"NSString"24@"NSArray"32
v48@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40
v40@0:8q16q24@"NSString"32
v40@0:8@"NSData"16@"NSString"24@"NSString"32
v72@0:8@16@24@32@40@48@56@64
v80@0:8@16@24@32@40@48@56@64@72
v68@0:8@16@24@32q40@48B56@60
v40@0:8@16d24@32
v52@0:8@16@24@32B40@44
v36@0:8@16I24@28
v28@0:8@16B24
v44@0:8@16@24I32S36B40
v40@0:8@16@24I32B36
v36@0:8@16S24@28
v40@0:8@16@24I32S36
v48@0:8@16Q24Q32@40
v44@0:8@16@24S32@36
v40@0:8@16q24@32
v40@0:8@16@24^B32
v52@0:8@16q24B32d36@44
v44@0:8@16B24@28@36
v36@0:8B16@20@28
v36@0:8@16B24@28
v28@0:8B16@"NSDictionary"20
v48@0:8@"NSData"16@"NSString"24@"NSString"32@"NSDictionary"40
v72@0:8@"NSDictionary"16@"NSString"24@"NSDictionary"32@"NSString"40@"NSString"48@"NSString"56@"NSDictionary"64
v64@0:8@"NSData"16@"NSString"24@"NSString"32@"NSString"40@"NSString"48@"NSDictionary"56
v80@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@"NSString"48@"NSString"56@"NSString"64@"NSDictionary"72
v64@0:8@"NSDictionary"16@"NSString"24@"NSString"32@"NSString"40@"NSString"48@"NSDictionary"56
v68@0:8@"NSString"16@"NSString"24@"NSString"32q40@"NSError"48B56@"NSDictionary"60
v64@0:8@"NSString"16@"NSString"24@"NSString"32@"NSArray"40@"NSArray"48@"NSDictionary"56
v56@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@"NSDictionary"48
v40@0:8@"NSString"16d24@"NSError"32
v40@0:8@"NSString"16@"NSString"24@"NSError"32
v32@0:8@"NSString"16@"NSNumber"24
v32@0:8@"NSData"16@"NSError"24
v40@0:8@"NSData"16@"NSString"24@"NSError"32
v72@0:8@"NSData"16@"NSData"24@"NSArray"32@"NSArray"40@"NSData"48@"NSString"56@"NSError"64
v40@0:8@"NSNumber"16@"NSString"24@"NSError"32
v52@0:8@"NSString"16@"NSDictionary"24@"NSString"32B40@"NSError"44
v64@0:8@"NSDictionary"16@"NSString"24@"NSString"32@"NSString"40@"NSString"48@"NSNumber"56
v36@0:8@"NSString"16I24@"NSError"28
v36@0:8@"NSString"16@"NSSet"24B32
v28@0:8@"NSString"16B24
v40@0:8@"NSString"16@"NSArray"24@"NSError"32
v40@0:8@"NSString"16@"NSDictionary"24@"NSError"32
v32@0:8@"NSString"16@"NSError"24
v36@0:8@"NSString"16@"NSArray"24B32
v44@0:8@"NSString"16@"NSArray"24I32S36B40
v40@0:8@"NSString"16@"NSArray"24I32B36
v36@0:8@"NSString"16S24@"NSError"28
v40@0:8@"NSString"16@"NSArray"24I32S36
v40@0:8@"NSString"16@"NSDictionary"24@"NSUUID"32
v32@0:8@"NSString"16@"NSUUID"24
v48@0:8@"NSString"16Q24Q32@"NSData"40
v40@0:8@"NSString"16@"NSData"24@"NSDictionary"32
v44@0:8@"NSString"16@"NSData"24S32@"NSDictionary"36
v56@0:8@"NSDictionary"16@"NSString"24@"NSString"32@"NSString"40@"NSDictionary"48
v48@0:8@"NSDictionary"16@"NSString"24@"NSString"32@"NSString"40
v40@0:8@"NSObject<OS_xpc_object>"16@"NSString"24@"NSError"32
v40@0:8@"NSString"16q24@"NSError"32
v32@0:8q16@"NSError"24
v40@0:8q16@"NSData"24@"NSString"32
v32@0:8@"NSArray"16@"NSError"24
v40@0:8@"NSString"16@"NSString"24^B32
v40@0:8@"NSString"16@"NSError"24@"NSArray"32
v40@0:8q16@"NSString"24@"NSError"32
v52@0:8@"NSString"16q24B32d36@"NSError"44
v44@0:8@"IDSPseudonym"16B24@"NSError"28@"NSString"36
v36@0:8B16@"NSError"20@"NSString"28
v40@0:8@"NSString"16@"NSData"24@"NSError"32
v36@0:8@"NSString"16B24@"NSError"28
v28@0:8@?16B24
v24@0:8@?16
B28@0:8B16@?20
v20@0:8B16
v40@0:8B16@20@28I36
B20@0:8B16
B40@0:8B16@20@28I36
I16@0:8
B20@0:8I16
v20@0:8i16
i16@0:8
v32@0:8@16@?24
B40@0:8@16@24@32
B32@0:8@16@24
@24@0:8@16
I24@0:8@16
B32@0:8I16@20B28
v28@0:8B16@?20
@24@0:8@?16
@"IMRemoteObject<IDSDaemonProtocol>"
@"IDSDaemonControllerForwarder"
@"IMLocalObject"
@"IDSDaemonListener"
@"NSProtocolChecker"
@"NSString"
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_dispatch_group>"
@"NSMutableDictionary"
@"NSSet"
@"NSMutableSet"
@40@0:8@16@24@32
@48@0:8@16@24@32@?40
@?16@0:8
v28@0:8I16@?20
v48@0:8@16@24@32@?40
v72@0:8@16@24@32@40@48@56@?64
v52@0:8@16@24@32B40@?44
v44@0:8@16B24B28B32@?36
v44@0:8@16B24B28B32@36
v24@0:8d16
v32@0:8@"NSData"16@?<v@?@"NSDictionary"@"NSError">24
v24@0:8@?<v@?@"NSArray">16
v28@0:8B16@?<v@?>20
v24@0:8@?<v@?I>16
v28@0:8I16@?<v@?>20
v24@0:8@?<v@?>16
v32@0:8@"NSString"16@?<v@?>24
v48@0:8@"NSString"16@"NSString"24@"NSDictionary"32@?<v@?>40
v72@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@"NSString"48@"NSString"56@?<v@?>64
v24@0:8@?<v@?@"NSError">16
v48@0:8@"NSString"16@"IDSURI"24@"IDSURI"32@?<v@?@"IDSQueryKeyTransparencyContext"@"NSArray"@"NSError">40
v52@0:8@"NSString"16@"IDSURI"24@"IDSURI"32B40@?<v@?@"IDSKTVerificationResult"@"NSError">44
v48@0:8@"NSString"16@"IDSURI"24@"IDSURI"32@?<v@?@"NSError">40
v24@0:8@?<v@?@"NSArray"@"NSError">16
v24@0:8@?<v@?@"NSData"@"NSError">16
v32@0:8@"NSString"16@?<v@?@"NSError">24
v44@0:8@"NSString"16B24B28B32@?<v@?@"NSError">36
v32@0:8@"NSString"16@?<v@?@"NSString"@"NSError">24
v24@0:8@?<v@?@"NSString">16
v32@0:8@"NSArray"16@?<v@?@"NSString">24
v28@0:8B16@?<v@?@"NSError">20
v32@0:8@"NSString"16@?<v@?@"NSMutableArray">24
v44@0:8@"NSString"16B24B28B32@"NSString"36
v40@0:8@"NSString"16d24@"NSString"32
v40@0:8@16@24@?32
v40@0:8@"NSString"16@"NSArray"24@?<v@?@"NSDictionary"@"NSError">32
v32@0:8@"NSString"16@?<v@?@"KTSelfVerificationInfo"@"NSError">24
v40@0:8@"NSString"16@"KTSelfVerificationHealableErrors"24@?<v@?B>32
v32@0:8@"NSString"16@?<v@?B@"NSUUID"@"NSError">24
v32@0:8@"NSDictionary"16@?<v@?@"IDSKTOptInResult">24
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^{_NSZone=}16
@"IDSURI"
@"NSDate"
v32@0:8@"NSArray"16@?<v@?@"NSError">24
v20@0:8S16
v32@0:8@16C24I28
v28@0:8I16@20
C16@0:8
@32@0:8@16B24I28
v24@0:8Q16
*16@0:8
v24@0:8*16
v20@0:8I16
@"NSObject<OS_nw_connection>"
@"NSMutableArray"
@"<IDSDirectMessageConnectionDelegate>"
@"NSObject<OS_dispatch_source>"
@"IDSDevice"
@"IDSDeviceConnection"
@"IDSServiceProperties"
@"IMPowerAssertion"
@"NSDictionary"
@40@0:8@16Q24^@32
@48@0:8@16@24Q32^@40
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSUUID"
@"NSData"
^{_CCCryptor=}
@"NSMapTable"
@40@0:8@16Q24@32
@48@0:8@16Q24@32@40
@48@0:8@16@24Q32@40
Q32@0:8Q16@24
Q24@0:8@16
v40@0:8Q16@24@?32
v44@0:8@16@24@32B40
v28@0:8@16S24
v40@0:8S16@20@28B36
@40@0:8Q16q24Q32
@48@0:8Q16@24q32Q40
@24@0:8q16
@"_IDSGroupSession"
v32@0:8@"IDSPhoneSubscription"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"IDSURI"16@?<v@?B@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSDictionary">24
@28@0:8@16B24
q32@0:8@16@24
@"IDSServiceMonitor"
v32@0:8@?16@?24
@40@0:8@16@24B32B36
q24@0:8@16
@"IDSInternalQueueController"
@"NSHashTable"
@"CUTWeakReference"
@"NSArray"
@52@0:8@16@24Q32@40B48
v40@0:8@"IDSActivityUpdate"16@"NSString"24@?<v@?>32
@48@0:8@16@24@32@40
@"<IDSActivityMonitorListenerDelegate>"
@"_IDSActivityMonitorXPCConnector"
v56@0:8@16@24q32@40@48
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32@"IDSMessageContext"40
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSReceivedInvitation"32@"IDSMessageContext"40
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSentInvitation"32@"IDSMessageContext"40
@"IDSService"
@"<IDSInvitationManagerDelegate>"
@"NSNumber"
@36@0:8B16@20@28
@"IDSCertifiedDeliveryContext"
v40@0:8@"NSData"16@"NSString"24@"IDSServerMessagingIncomingContext"32
v48@0:8@16@24^@32@?40
{os_unfair_lock_s=I}16@0:8
v20@0:8{os_unfair_lock_s=I}16
@"IDSXPCDaemonController"
v32@0:8@"ENGroup"16@?<v@?@"NSError">24
v40@0:8@"ENGroup"16@"ENGroup"24@?<v@?@"NSError">32
@32@0:8Q16Q24
@32@0:8Q16@24
v32@0:8@"IDSAccountController"16@"IDSAccount"24
@56@0:8@16@24d32d40@48
v32@0:8@16Q24
v40@0:8Q16Q24@?32
@24@0:8Q16
v32@0:8Q16@?24
v48@0:8@16@24Q32@?40
v44@0:8@16Q24B32@?36
v52@0:8@16@24Q32B40@?44
v40@0:8d16@24B32B36
B40@0:8Q16Q24@?32
d16@0:8
@"IDSCTAdapter"
@40@0:8@16@24q32
@48@0:8@16@24q32@40
B32@0:8@16^@24
Q24@0:8Q16
@"_IDSSession"
@"IDSDaemonRequestTimer"
@"_IDSBatchIDQueryController"
@36@0:8@16@24B32
B64@0:8@16@24q32@40^@48^@56
@"_IDSConnection"
B56@0:8@16@24@32^@40^@48
@"NSObject<OS_nw_parameters>"
@"NSObject<OS_nw_endpoint>"
v40@0:8@16q24@?32
v36@0:8@16B24@?28
v32@0:8@"NSUUID"16@?<v@?@"NSError">24
v32@0:8@"IDSLocalPairingAddPairedDeviceInfo"16@?<v@?@"NSError">24
v40@0:8@"NSUUID"16q24@?<v@?@"NSError">32
v24@0:8@?<v@?@"IDSLocalPairingLocalDeviceRecord"@"NSDictionary"@"NSError">16
v36@0:8@"NSUUID"16B24@?<v@?@"NSError">28
v40@0:8@"NSString"16@"NSSet"24@?<v@?@"NSError">32
B72@0:8@16@24@32q40@48^@56^@64
v48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?@"NSString"@"NSString"B>40
@56@0:8@16Q24Q32q40Q48
@64@0:8@16Q24Q32@40q48Q56
@36@0:8i16q20Q28
v24@0:8@?<v@?@"<IDSXPCPairing>"@"NSError">16
v24@0:8@?<v@?@"<IDSXPCPairedDeviceManager>"@"NSError">16
v32@0:8@"NSString"16@?<v@?@"<IDSXPCReunionSync>"@"NSError">24
v24@0:8@?<v@?@"<IDSXPCOpportunistic>"@"NSError">16
v24@0:8@?<v@?@"<IDSXPCRegistration>"@"NSError">16
v24@0:8@?<v@?@"<IDSXPCActivityMonitor>"@"NSError">16
v24@0:8@?<v@?@"<IDSXPCServerMessaging>"@"NSError">16
v24@0:8@?<v@?@"<IDSXPCKeyTransparency>"@"NSError">16
v24@0:8@?<v@?@"<IDSXPCFirewall>"@"NSError">16
v24@0:8@?<v@?@"<IDSXPCGroupSessionKeyValueDeliveryProvider>"@"NSError">16
v24@0:8@?<v@?@"<IDSXPCInternalTesting>"@"NSError">16
@32@0:8@?16@24
v40@0:8@16@?24@32
v32@0:8@?16@24
@"_IDSCompletionHandler"
@40@0:8q16@24@32
@56@0:8@16@24@32@40@48
@32@0:8q16@24
q24@0:8q16
@"IDSPhoneCertificateVendor"
v32@0:8q16@?24
q24@0:8^@16
@"NSXPCInterface"
@"_IDSAccountController"
v32@0:8@"IDSBaseSocketPairConnection"16@"NSData"24
v24@0:8@"IDSBaseSocketPairConnection"16
@"IDSBaseSocketPairConnection"
^{cfs_client_s=}
@"NSError"
@"IDSGroupEncryptionKeyMaterialCache"
v40@0:8@"IDSTransactionLogTaskHandler"16@"NSArray"24@?<v@?@"NSArray"@"NSError">32
v40@0:8@"IDSTransactionLogTaskHandler"16@"<NSSecureCoding>"24@?<v@?@"NSArray"@"<NSSecureCoding>"B@"NSError">32
v40@0:8@"IDSTransactionLogTaskHandler"16@"<NSSecureCoding>"24@?<v@?@"NSError">32
v32@0:8@"IDSTransactionLogTaskHandler"16@?<v@?@"<NSSecureCoding>"@"NSError">24
v40@0:8@"IDSTransactionLogTaskHandler"16@"NSSet"24@?<v@?@"IDSTransactionLogTaskHandlerAccountInfo"@"NSError">32
@"<IDSGroupContextControllerDelegate>"
@"CUTPromiseSeal"
@"IDSCloudKitContainer"
@"ENGroupContext"
@"ENAccountIdentity"
v28@0:8@"IDSAccount"16B24
v32@0:8@"IDSAccount"16@"NSArray"24
v40@0:8@16@24q32
v68@0:8@16@24@32@40@48@56B64
v40@0:8@"IDSDirectMessageConnection"16@"NSString"24q32
v72@0:8@"IDSDirectMessageConnection"16@"NSDictionary"24@"NSString"32@"NSString"40@"NSString"48@"NSString"56@"NSDictionary"64
v32@0:8@"IDSDirectMessageConnection"16@"NSString"24
v72@0:8@"IDSDirectMessageConnection"16@"NSData"24@"NSString"32@"NSString"40@"NSString"48@"NSString"56@"NSDictionary"64
v68@0:8@"IDSDirectMessageConnection"16@"NSString"24@"NSString"32@"NSString"40@"NSString"48@"NSDictionary"56B64
v24@0:8@"NSObject<OS_xpc_object>"16
@44@0:8@16@24B32@36
v48@0:8:16@?24@?32@?40
v56@0:8:16@?24@?32@?40@48
@48@0:8@16@24@32Q40
v72@0:8@16@24@32q40@48B56@60B68
B60@0:8@16@24@32@40B48@52
@"IDSAccount"
@"IMOrderedMutableDictionary"
@"IDSDirectMessageConnection"
v40@0:8@"_ENGroupInfo"16@"ENGroup"24@?<v@?@"ENGroup"@"NSError">32
v32@0:8@"ENGroupID"16@?<v@?@"ENGroup"@"NSError">24
v32@0:8@"ENGroup"16@?<v@?@"NSData"@"NSError">24
v32@0:8@"NSData"16@?<v@?@"ENGroup"@"NSError">24
v32@0:8@"<ENCypher>"16@?<v@?@"NSArray"B>24
v40@0:8@"ENGroup"16@"ENGroup"24@?<v@?B@"NSError">32
v32@0:8@"ENStableGroupID"16@?<v@?@"ENGroup">24
v32@0:8@"ENGroupID"16@?<v@?>24
@"NSXPCConnection"
@"IDSGroupContextNotifyingObserver"
{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}
@40@0:8@16q24@32
@48@0:8@16@24@?32@40
@"NSInputStream"
@"NSOutputStream"
v56@0:8@16@24@32@40@?48
@24@0:8@"NSDictionary"16
@"NSDictionary"16@0:8
@32@0:8@16@?24
@36@0:8@16B24@?28
@32@0:8d16@?24
@56@0:8@16@24d32@?40@?48
@40@0:8@16@?24@?32
@"IDSXPCConnection"
@28@0:8I16^@20
@24@0:8^@16
v32@0:8@"NSString"16@?<v@?@"<IDSXPCGroupSessionKeyValueDelivery>"@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSDictionary"@"NSError">24
v24@0:8@?<v@?@"KTSelfVerificationInfo"@"NSError">16
v32@0:8@"KTSelfVerificationHealableErrors"16@?<v@?B>24
@"_IDSAccount"
v56@0:8@16@24@32@?40@48
v64@0:8@16@24@32@40@?48@56
@"_IDSGenericCompletionHandler"
@32@0:8@16^@24
@40@0:8@16Q24q32
@48@0:8@16Q24@32q40
@28@0:8@16S24
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
B32@0:8Q16q24
v44@0:8@16@24B32@?36
v28@0:8:16S24
:20@0:8S16
B48@0:8@16@24@32^@40
B64@0:8@16@24@32@40^@48^@56
B32@0:8q16^@24
B56@0:8@16q24@32^@40^@48
@32@0:8@16q24
@36@0:8@16I24^@28
@28@0:8i16^@20
@40@0:8@16@24^@32
v40@0:8@16d24@?32
@40@0:8@16@24d32
@32@0:8@16d24
v48@0:8@16q24@32@?40
v56@0:8@16@24@32q40@?48
v64@0:8@16@24@32q40@48@?56
v48@0:8q16@24@32@?40
@"_IDSService"
@40@0:8@16@?24@32
@"IDSDaemonResponseHandler"
@"IMTimer"
@40@0:8@16d24@?32
v52@0:8@16@24B32@36@?44
v32@0:8@"IDSGroupContextController"16@"ENGroup"24
@"NSDictionary"32@0:8@"IDSGroupContextController"16@"NSSet"24
v52@0:8@16@24B32@36@44
v56@0:8@"IDSConnection"16@"NSData"24@"NSString"32@"NSString"40@"IDSMessageContext"48
v48@0:8@"IDSConnection"16@"NSDictionary"24@"NSString"32@"IDSMessageContext"40
v48@0:8@"IDSConnection"16@"NSData"24@"NSString"32@"IDSMessageContext"40
v48@0:8@"IDSConnection"16@"IDSDeviceIdentity"24@"NSError"32@"IDSMessageContext"40
v56@0:8@"IDSConnection"16@"NSString"24@"NSString"32@"NSString"40@"IDSMessageContext"48
v40@0:8@"IDSConnection"16@"NSString"24@"IDSMessageContext"32
v48@0:8@"IDSConnection"16@"IDSProtobuf"24@"NSString"32@"IDSMessageContext"40
v28@0:8@"IDSConnection"16B24
v32@0:8@"IDSConnection"16@"NSArray"24
v52@0:8@"IDSConnection"16@"NSString"24B32@"NSError"36@"IDSMessageContext"44
v48@0:8@"IDSConnection"16@"NSString"24@"NSString"32@40
v32@0:8@"IDSConnection"16q24
v40@0:8@"IDSConnection"16@"NSDictionary"24@"NSString"32
v40@0:8@"IDSConnection"16@"NSString"24@"NSArray"32
v60@0:8@16@24@32q40@48B56
v60@0:8@"IDSConnection"16@"NSString"24@"NSString"32q40@"NSError"48B56
v68@0:8@"IDSConnection"16@"NSString"24@"NSString"32q40@"NSError"48B56@60
v64@0:8@"IDSConnection"16@"NSString"24@"NSString"32@"NSArray"40@"NSArray"48@"NSDictionary"56
v48@0:8@"IDSConnection"16@"NSDictionary"24@"NSString"32@40
v48@0:8@"IDSConnection"16@"NSString"24@"NSString"32@"NSString"40
v80@0:8@"IDSConnection"16@"IDSAccount"24@"NSString"32@"NSString"40@"NSNumber"48@"NSDictionary"56@"NSData"64@72
v48@0:8@"IDSConnection"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32@"IDSMessageContext"40
v40@0:8@"IDSConnection"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
@?24@0:8@16
v48@0:8@16d24@32@?40
v32@0:8:16S24B28
:24@0:8S16B20
v24@0:8^@16
B80@0:8@16@24@32@40q48@56^@64^@72
B56@0:8@16q24@32^@40@?48
@"IDSAccountController"
@"IDSGroupContextController"
@"IDSQuickSwitchAcknowledgementTracker"
@"CUTDeferredTaskQueue"
@"IDSPseudonym"
v56@0:8@16@24B32B36@40@?48
v60@0:8@16@24B32B36B40@44@?52
v72@0:8@16@24Q32@40@48@56@?64
@52@0:8@16@24@?32@?40B48
@"<IDSGroupSessionKeyValueDeliveryHandler>"
v40@0:8@16I24I28@32
v48@0:8@16I24I28@32@?40
v36@0:8@16I24Q28
@"<IDSXPCGroupSessionKeyValueDelivery>"
@48@0:8q16@24@32@40
@"<IDSInvitationContext>"
@56@0:8@16q24@32@40@48
@"<IDSDestinationProtocol>"
@"<NSSecureCoding>"40@0:8@"NSXPCConnection"16@"NSXPCCoder"24@32
v36@0:8@"NSXPCConnection"16@"NSInvocation"24B32
@36@0:8@16B24@28
@40@0:8@16B24@28B36
@"<NSXPCProxyCreating>"
@48@0:8@16@24d32@?40
@"IDSEndpointCapabilities"
v68@0:8@16@24@32B40B44B48B52B56@?60
B76@0:8@16@24@32B40B44B48B52B56@60@?68
B48@0:8@16@24@32@?40
B52@0:8@16@24B32@36@?44
B60@0:8@16@24@32B40@44@?52
B56@0:8@16@24@32@40@?48
B60@0:8@16@24B32@36@44@?52
B60@0:8@16@24@32@40B48@?52
B72@0:8@16@24Q32@40@48@56@?64
q40@0:8@16@24@32
@"NSObject<OS_xpc_object>"
v24@0:8@?<v@?@"NSDictionary">16
@20@0:8c16
v28@0:8@16c24
q28@0:8Q16c24
Q28@0:8q16c24
v40@0:8r*16I24c28@32
@28@0:8c16@20
v28@0:8c16@20
v20@0:8c16
v36@0:8@16c24@28
^{?=*QqqIBBBBBBBBI{sockaddr_storage=CC[6c]q[112c]}{sockaddr_storage=CC[6c]q[112c]}{sockaddr_storage=CC[6c]q[112c]}SCi[8{?=*Si[12S]qCSCBBS{?=SSSSS}BBi[4S]CBBBI}]ccid[16C]QQ@iI[0C]}62@0:8r^v16I24C28C32{?=cSCSC}36^{?=IQSCc[12S]CS{?=SSSSS}dQBQ[16C]BB}46@54
v70@0:8@16r^v24I32C36C40{?=cSCSC}44^{?=IQSCc[12S]CS{?=SSSSS}dQBQ[16C]BB}54@?62
@20@0:8S16
@24@0:8^{?=*QqqIBBBBBBBBI{sockaddr_storage=CC[6c]q[112c]}{sockaddr_storage=CC[6c]q[112c]}{sockaddr_storage=CC[6c]q[112c]}SCi[8{?=*Si[12S]qCSCBBS{?=SSSSS}BBi[4S]CBBBI}]ccid[16C]QQ@iI[0C]}16
v56@0:8@16Q24@32@40@?48
v64@0:8@16Q24@32@40@48@?56
{?=qqq}16@0:8
@"_IDSDevice"
@68@0:8^{?=[16C][16C]CCCCCCCCSSIISSSSB[16C]C[16c]C}16I24q28@36@44@52@60
c16@0:8
S16@0:8
v20@0:8C16
@"_IDSDataChannelLinkContext"
@"NSObject<OS_nw_context>"
@"NSObject<OS_nw_path_evaluator>"
@"IDSDataChannelLinkContext"
[256@"NSObject<OS_nw_connection>"]
[256@"IDSDataChannelLinkContext"]
@20@0:8i16
v32@0:8c16@20C28
v28@0:8*16S24
v52@0:8@16@24@32B40Q44
v48@0:8r*16Q24^{?=cSCSC}32^{?=IQSCc[12S]CS{?=SSSSS}dQBQ[16C]BB}40
B48@0:8r*16Q24@?32@?40
v46@0:8r*16I24{?=cSCSC}28^{?=IQSCc[12S]CS{?=SSSSS}dQBQ[16C]BB}38
v44@0:8@16I24@?28@?36
v60@0:8r^^v16^I24^{?=cSCSC}32^^{?}40i48@?52
^{?=*QqqIBBBBBBBBI{sockaddr_storage=CC[6c]q[112c]}{sockaddr_storage=CC[6c]q[112c]}{sockaddr_storage=CC[6c]q[112c]}SCi[8{?=*Si[12S]qCSCBBS{?=SSSSS}BBi[4S]CBBBI}]ccid[16C]QQ@iI[0C]}54@0:8r^v16I24C28C32{?=cSCSC}36^{?=IQSCc[12S]CS{?=SSSSS}dQBQ[16C]BB}46
v64@0:8i16r^^v20^I28^{?=cSCSC}36^^{?}44i52@?56
v60@0:8r^^v16^I24^{?=cSCSC}32i40^^{?}44@?52
v54@0:8r^v16I24{?=cSCSC}28^{?=IQSCc[12S]CS{?=SSSSS}dQBQ[16C]BB}38@?46
v46@0:8r^v16I24{?=cSCSC}28@?38
v24@0:8^{?=*QqqIBBBBBBBBI{sockaddr_storage=CC[6c]q[112c]}{sockaddr_storage=CC[6c]q[112c]}{sockaddr_storage=CC[6c]q[112c]}SCi[8{?=*Si[12S]qCSCBBS{?=SSSSS}BBi[4S]CBBBI}]ccid[16C]QQ@iI[0C]}16
^{?=*QqqIBBBBBBBBI{sockaddr_storage=CC[6c]q[112c]}{sockaddr_storage=CC[6c]q[112c]}{sockaddr_storage=CC[6c]q[112c]}SCi[8{?=*Si[12S]qCSCBBS{?=SSSSS}BBi[4S]CBBBI}]ccid[16C]QQ@iI[0C]}20@0:8B16
v24@0:8B16B20
v28@0:8@16C24
v50@0:8{?=cSCSC}16^{?=IQSCc[12S]CS{?=SSSSS}dQBQ[16C]BB}26C34C38^{?=****B}42
@"_IDSDatagramChannel"
@"<IDSXPCConnectionProtocol>"
@"<IDSXPCAdapter>"
@"_IDSDeviceConnection"
v36@0:8B16@20@?28
v32@0:8@"<IDSXPCActivityMonitorClient>"16@"NSString"24
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v36@0:8B16@"NSString"20@?<v@?@"NSError">28
v32@0:8@"NSString"16@?<v@?@"NSArray"@"NSError">24
v40@0:8@"IDSActivityInfo"16@"NSString"24@?<v@?@"NSError">32
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError">32
q44@0:8@16@24B32@36
@"_IDSIDQueryController"
v32@0:8@"NSString"16@?<v@?@"NSSet"@"NSError">24
v36@0:8@"NSArray"16B24@?<v@?@"NSError">28
@68@0:8@16@24q32Q40B48@52@60
@56@0:8@16@24q32@40@48
v48@0:8@"ENGroupContext"16@"_ENGroupInfo"24@"ENGroup"32@?<v@?@"ENGroup"@"NSError">40
v40@0:8@"ENGroupContext"16@"ENGroupID"24@?<v@?@"ENGroup"@"NSError">32
v40@0:8@"ENGroup"16@"ENGroupContext"24@?<v@?@"NSData"@"NSError">32
v40@0:8@"NSData"16@"ENGroupContext"24@?<v@?@"ENGroup"@"NSError">32
q24@0:8@"ENGroupContext"16
v40@0:8@"ENGroupContext"16@"ENGroup"24@?<v@?>32
v40@0:8@"ENGroupContext"16@"ENGroupID"24@?<v@?@"ENGroup">32
v40@0:8@"ENGroupContext"16@"ENStableGroupID"24@?<v@?@"ENGroup">32
v32@0:8@"ENGroupContext"16@?<v@?@"NSArray">24
v32@0:8@"ENGroupContext"16@?<v@?>24
v40@0:8@"ENGroupContext"16@"ENGroupID"24@?<v@?>32
@32@0:8*16^v24
v40@0:8@"<IDSXPCServerMessagingClient>"16@"NSString"24@"NSString"32
v56@0:8@"NSData"16@"NSString"24@"IDSServerMessagingOptions"32@"NSString"40@?<v@?B@"NSError">48
v24@0:8@"IDSCertifiedDeliveryContext"16
@32@0:8@?16@?24
v32@0:8@"<IDSXPCGroupSessionKeyValueDeliveryDelegate>"16@"NSUUID"24
v24@0:8@"NSUUID"16
v48@0:8@"NSData"16I24I28@"NSString"32@?<v@?@"NSError">40
v36@0:8@"NSData"16I24Q28
@"NSTimer"
@"_IDSRealTimeEncryptionProxy"
@"IDSTransactionLogTask"
@"IDSTransactionLogSyncTask"
@"<IDSTransactionLogTaskHandlerDelegate>"
