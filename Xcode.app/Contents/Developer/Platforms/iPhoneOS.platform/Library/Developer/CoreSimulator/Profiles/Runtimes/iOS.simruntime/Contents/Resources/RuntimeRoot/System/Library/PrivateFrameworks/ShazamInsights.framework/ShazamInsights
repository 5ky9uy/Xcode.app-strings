@(#)PROGRAM:ShazamInsights  PROJECT:ShazamKit-207
artists
tracks
v24@?0@"SHClusterSQLiteDataStore"8@"NSError"16
v40@?0@"NSURL"8@"NSString"16d24@"NSError"32
v24@?0@"SHDataFetcherFileInfo"8@"NSError"16
v16@?0@"SHInsightsConfiguration"8
CREATE TABLE if not exists Cohesion(id INTEGER PRIMARY KEY, high INTEGER, medium INTEGER, low INTEGER, CONSTRAINT constraint_name UNIQUE(low, medium, high) ON CONFLICT IGNORE)
CREATE TABLE if not exists MediaItems(sh_appleMusicID VARCHAR, cohesion INTEGER, FOREIGN KEY(cohesion) REFERENCES Cohesion(id))
CREATE TABLE if not exists Metadata(type VARCHAR, hash VARCHAR, storefront VARCHAR, creationDate DATE)
INSERT INTO Cohesion (low, medium, high) VALUES (?, ?, ?) returning id
INSERT INTO MediaItems (sh_appleMusicID, cohesion) VALUES (?, ?);
v40@?0@"NSString"8@"NSString"16@"NSString"24@"NSArray"32
com.apple.ShazamInsights
%@_temp
unknown
v8@?0
v24@?0@"SHClusterController"8@"NSError"16
v32@?0@"SHInsightsConfiguration"8@"NSString"16@"NSError"24
INSIGHTS_CUSTOM
PRAGMA cell_size_check=ON
PRAGMA quick_check
v16@?0^{sqlite3_stmt=}8
SELECT COUNT(*) FROM %@
BEGIN
COMMIT
select type, storefront, hash, creationDate from Metadata LIMIT 1
Failed to read the database metadata
Unknown Error
INSERT into Metadata(type, hash, storefront, creationDate) VALUES(?,?,?,?)
Metadata
UPDATE Metadata set type = ?, hash = ?, storefront = ?, creationDate = ?
clusters
%lu%@
Shazam
shazam-insights
baseURL
geocharts/path
geocharts/minGeohashLength
geocharts/maxGeohashLength
targeting/path
targeting/enabled
targeting/updateInterval
tracks/enabled
tracks/maxAgeInSeconds
artists/path
artists/enabled
artists/maxAgeInSeconds
v16@?0@"NSError"8
%@%@
PRAGMA table_info('MediaItems')
select %@ from MediaItems where cohesion = (select cohesion from MediaItems where %@ = <MEDIA_NAME> COLLATE %@) and %@ != <MEDIA_NAME2> COLLATE %@
<MEDIA_NAME>
<MEDIA_NAME2>
select %@ from MediaItems where %@ COLLATE %@ in (<MEDIA_IDS>)
<MEDIA_IDS>
select %@ from MediaItems t1, Cohesion c1 INNER JOIN (select  c2.high, c2.medium, c2.low from MediaItems t2, Cohesion c2 where t2.%@ in (<SEED_MEDIA_IDS>) AND t2.cohesion = c2.id order by %@) as s1 ON s1.low = c1.low
 AND s1.medium = c1.medium
 AND s1.high = c1.high AND s1.medium = c1.medium
 where t1.%@ in (<QUERY_MEDIA_IDS>) AND t1.cohesion = c1.id order by %@
<SEED_MEDIA_IDS>
<QUERY_MEDIA_IDS>
Cohesion
v24@?0@"NSString"8@"NSError"16
geoHashSuffixes
geoHash
trackPool
geoHashTrackPools
Etag
If-None-Match
v32@?0@"NSHTTPURLResponse"8@"NSURL"16@"NSError"24
v32@?0@"NSHTTPURLResponse"8@"NSData"16@"NSError"24
com.apple.ShazamInsightsDataFetcher
There was a problem fetching the data
The requested data was not found, please amend your query
The data was found but it was invalid
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
v32@?0@"NSURL"8@"NSURLResponse"16@"NSError"24
0123456789bcdefghjkmnpqrstuvwxyz
Cluster data already loaded
Failed to load the datastore %@
Failed to create the caches directory!
Failed to delete existing database %@
Failed to move database into place %@
Failed to turn on cell_size_check %@
Failed to run quick check %@
Unknown database type %@, assuming it is tracks
Failed to open database for metadata with error %@
Unreadable metadata, failing
Error reading metadata %@
Error updating metadata %@
Fetching insights configuration...
Failed to load insights configuration %@, using defaults
Failed to open database for artist query %@
Failed to perform artists query %@
Failed get a trackID from tracks query
Failed to query database %@
Failed to check database load status %@
Etag missing for request to %@, replacing with random hash
Network call: %@ failed with bad server response: %@
Invalid character in geohash %@: %c
SHRegion
SHClusterController
SHClusterLoader
SHAffinityGroupQuery
SHStubbedNetworkRequester
SHNetworkRequester
NSObject
SHLocalDataFetcher
SHDataFetcher
SHMediaItemPropertyCollection
SHClusterStatus
SHFileChecksum
SHJSONLClusterImporter
SHClusterImporter
SHClusterImporterUtils
SHClusterQuery
SHSQLiteUtils
SHClusterMetadataQuery
SHClusterMetadata
SHClusterJSONLReader
SHJSONLDataDetokenizerDelegate
SHTimeAndPlaceController
SHTimeAndPlaceAffinityGroup
SHInsightsConfiguration
SHClusterStatementRunner
SHClusterSQLiteDataStore
SHClusterLoaderRequest
SHAffinityGroup
SHTimeAndPlaceServerResponseParser
SHCDNDataFetcher
SHInsightsError
SHInsightsNetworkRequester
Geohash
SHDataFetcherFileInfo
SHSQLiteClusterImporter
T@"NSArray",R,N
JSONObjectWithData:options:error:
T@"NSString",R,C,N,V_uniqueHash
T@"<SHDataFetcher>",R,N,V_dataFetcher
T@"NSURL",R,N,V_downloadFileURL
T@"CLLocation",R,N,V_location
T@"NSArray",R,N,V_validDatabaseKeys
allHeaderFields
T@"NSData",R,N,V_requestData
base64EncodedStringWithOptions:
T@"NSDate",R,N
clusterForType:
T@"NSDictionary",R,N,V_geohashKeyedRegions
currentCalendar
T@"NSMutableArray",&,N,V_mutableMediaItems
dataURL
T@"NSString",C,N,V_mimeType
dealloc
T@"NSString",C,N,V_uniqueHash
geohash
T@"NSString",R,C,N
initWithString:
T@"NSString",R,C,N,V_requiredStorefront
isProxy
T@"NSString",R,N,V_property
regions
T@"NSURL",R,N,V_databaseFilePathURL
requestWithURL:
T@"NSURL",R,N,V_destinationURL
T@"NSURL",R,N,V_sourceURL
setValuesForKeysWithDictionary:
T@"SHBagContract",R,N,V_bagContract
stringFromDate:
T@"SHClusterSQLiteDataStore",R,N,V_dataStore
.cxx_destruct
T@"NSString",R,C,N,V_storefront
T#,R
T@"NSURL",R,N,V_dataFilePathURL
T@"<SHNetworkRequester>",R,N,V_networkRequester
_databaseMaxAge
T@"NSArray",R,N,V_regions
_destinationURL
T@"NSData",R,N,V_data
artistClusterDefaultLocationURL
T@"NSDate",&,N,V_creationDate
cachesDirectory
T@"NSDate",R,N,V_creationDate
compressionType
T@"NSHTTPURLResponse",R,N,V_httpResponse
dataFilePathURL
T@"NSSet",R,N,V_collection
dateFromString:
T@"NSString",C,N,V_storefront
downloadFileURL
T@"NSString",R,C
initWithData:suggestedFileName:
T@"NSString",R,C,N,V_geohash
insert:appleMusicID:cohesionID:
T@"NSString",R,C,N,V_suggestedFileName
messageForCode:
T@"NSURL",&,N,V_dataURL
release
T@"NSURL",R,N,V_databaseURL
runSQL:onDatabase:replacingTokens:withObjects:rowHandler:error:
T@"NSURL",R,N,V_outputURL
setIsDataValid:
T@"SHAffinityGroup",R,N,V_affinityGroup
stringByAppendingPathComponent:
T@"SHClusterMetadata",&,N,V_metadata
uppercaseString
T@"SHClusterStatementRunner",R,N,V_query
T@"SHClusterStatus",R,N
T@"SKCloudServiceController",R,N,V_cloudServiceController
T@?,C,N,V_callback
TB,N,V_isDataValid
TB,R,N
TQ,N,V_index
TQ,R
T^{sqlite3=},R,N,V_db
Td,R,N
Td,R,N,V_databaseMaxAge
Ti,R,N
Tq,N,V_loadStatus
Tq,R,N
Tq,R,N,V_clusterType
Tq,R,N,V_cohesionLevel
Tq,R,N,V_groupType
Tq,R,N,V_type
URLByAppendingPathComponent:
URLByAppendingPathExtension:
URLByDeletingLastPathComponent
URLForRequestForStorefront:withCompletion:
URLRepresentation
URLWithString:
UTF8String
UUID
UUIDString
_affinityGroup
_bagContract
_callback
_cloudServiceController
_clusterType
_cohesionLevel
_collection
_creationDate
_data
_dataFetcher
_dataFilePathURL
_dataStore
_dataURL
_databaseFilePathURL
_databaseURL
_downloadFileURL
_geohash
_geohashKeyedRegions
_groupType
_httpResponse
_index
_isDataValid
_loadStatus
_location
_metadata
_mimeType
_mutableMediaItems
_networkRequester
_outputURL
_property
_query
_regions
_requestData
_requiredStorefront
_sourceURL
_storefront
_suggestedFileName
_type
_uniqueHash
_validDatabaseKeys
absoluteString
addBagKey:defaultValue:
addObject:
addValue:forHTTPHeaderField:
affinityGroup
affinityGroupsAtCohesionLevel:forQuery:queryCollection:filteredBy:
affinityGroupsForLocation:atDate:completionHandler:
affinityGroupsFromData:atLocation:onDate:completionHandler:
affinityGroupsFromQueryCollection:filteredBySeedCollection:completionHandler:
allObjects
appendFormat:
appendMediaItem:
appendString:
appleMusicID
array
arrayWithObjects:count:
artistsCachedDataMaxAge
artistsCluster
artistsClusterEndpoint
artistsEnabled
autorelease
bagContract
booleanBackedByStringForKey:
buildTemporaryClusterURLWithError:
bytes
cStringUsingEncoding:
callback
checksumDataForFile:withError:
checksumForFile:withError:
class
clearTemporaryDatabaseFileAtURL:withError:
closeAndReturnError:
closeDatabase:error:
cloudServiceController
clusterConfiguration:
clusterDataAtURL:forLocation:date:completionHandler:
clusterType
code
cohesionLevel
collection
collectionWithArray:representingProperty:
commitTransactionOnDatabase:
compare:options:
components:fromDate:
componentsSeparatedByString:
conformsToProtocol:
controllerForType:withCompletionHandler:
coordinate
copy
copyDatabaseFromURL:toDatabaseDestinationURL:error:
copyItemAtURL:toURL:error:
count
countByEnumeratingWithState:objects:count:
createDatabase:atURL:error:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
createTables:error:
creationDate
data
dataFetcher
dataFetcherForSourceURL:
dataStatus
dataStore
dataStoreTypeFromString:
dataTaskWithRequest:completionHandler:
dataWithBytes:length:
dataWithContentsOfURL:
database:hasPopulatedTable:error:
databaseFilePathURL
databaseMaxAge
databaseURL
databaseURLForName:
date
dateFormatter
dateWithTimeIntervalSinceNow:
debugDescription
decompressFile:withAlgorithm:toLocation:error:
defaultManager
defenseAgainstBadDatabase:
description
destinationURL
dictionary
dictionaryWithCapacity:
dictionaryWithObjects:forKeys:count:
doesRequestEtag:matchInResponse:
domain
doubleBackedByStringForKey:
downloadResourceFromRequest:completionHandler:
downloadTaskWithRequest:completionHandler:
endpointFromDate:insights:location:
errorWithCode:underlyingError:
errorWithCode:underlyingError:keyOverrides:
errorWithDomain:code:userInfo:
fetchClusterURL:forCurrentStorefront:cachedUniqueHash:completionHandler:
fetchSharedInstanceWithCompletion:
fileExistsAtPath:
fileHandleForReadingFromURL:error:
fileURLWithPath:isDirectory:
filterMediaItemQueryCollection:bySeedCollection:completionHandler:
filterQueryCollection:byItemsWithinCluster:
firstObject
geoChartsEndpointForDate:geoHash:
geohashKeyedRegions
groupType
hasNotPassedExpiryDate:isForCountryCode:
hasPrefix:
hash
httpResponse
importClusters:toParentCluster:startIndex:
importerForFile:
index
init
initWithArray:representingProperty:
initWithBagContract:
initWithBaseDictionaryKey:profile:profileVersion:
initWithBytes:length:encoding:
initWithCString:encoding:
initWithClusterType:databaseMaxAge:forStorefront:databaseFilePathURL:
initWithData:encoding:
initWithDataFetcher:dataStore:
initWithDataStore:
initWithDataURL:
initWithDataURL:suggestedFileName:
initWithDatabaseURL:
initWithGeohash:
initWithHTTPResponse:requestData:downloadFileURL:
initWithLocation:
initWithNetworkRequester:
initWithRegions:affinityGroup:
initWithType:
initWithType:cohesionLevel:
initWithType:sourceURL:destinationURL:
initWithType:sourceURL:outputURL:
initWithType:storefront:uniqueHash:creationDate:
insert:low:medium:high:
intValue
integerBackedByStringForKey:
intersectSet:
isDataLoaded
isDataValid
isEqual:
isEqualToString:
isFileURL
isKindOfClass:
isMemberOfClass:
lastPathComponent
laterDate:
length
loadBaseDictionary:
loadDataForRequest:completionHandler:
loadDataFromFileInfo:withMetadata:toDestinationURL:error:
loadDataFromURL:error:
loadFromURL:type:storefront:reuseExistingData:completion:
loadStatus
location
maxGeoChartsGeohashLength
mediaItemWithProperties:
mediaItems
mediaItemsAtCohesionLevel:forQueryMediaIDs:filteredBySeedMediaIDs:error:
mediaItemsForPropertyCollection:completionHandler:
mediaItemsFromPropertyCollection:error:
mediaItemsMatchingValuesInCollection:completionHandler:
mediaItemsSimilarToMediaItemValue:forKey:error:
mediaItemsSimilarToValue:forKey:completionHandler:
mediaItemsWithHighCohesionToValue:forProperty:completionHandler:
mediaItemsWithQuery:tokens:objects:error:
metadata
metadataFromDatabaseAtLocation:error:
mimeType
minGeoChartsGeohashLength
mutableCopy
mutableMediaItems
networkRequester
objectAtIndexedSubscript:
objectForKeyedSubscript:
openDatabase:atURL:error:
outputURL
parsedJSONObject:error:
path
pathExtension
performRequest:completionHandler:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
property
query
queryStringForCount:
readDataLineByLineFromURL:error:callback:
readDataOfLength:
regionAffinityGroupsFromServerData:error:
regionsForGeohash:
removeItemAtURL:error:
removeObject:
replaceOccurrencesOfString:withString:options:range:
requestData
requestStorefrontCountryCodeWithCompletionHandler:
requiredStorefront
respondsToSelector:
response:data:error:
resultsFromQueryBlock:completionHandler:
resume
retain
retainCount
runNoResultSQL:onDatabase:error:
self
setCallback:
setCreationDate:
setDataURL:
setDelegate:
setFormatOptions:
setIndex:
setLoadStatus:
setMetadata:
setMimeType:
setMutableMediaItems:
setObject:forKeyedSubscript:
setStorefront:
setUniqueHash:
setValue:forKey:
setWithArray:
setWithCapacity:
sh_geoHashToCoordinates:
sh_geohashOfLength:
sh_roundCoordinateValuesToGeohashOfLength:
sh_toGeohash
sharedSession
shouldDeleteExistingDatabaseAtOutputURL
sourceURL
sourceURLWithCompletion:
sqliteDatabaseExistsAtURL:
startTransactionOnDatabase:
statusCode
statusWithCompletionHandler:
storefront
string
stringByAppendingString:
stringForKey:
stringFromStoreType:
stringWithCString:encoding:
stringWithFormat:
stringWithString:
substringToIndex:
suggestedExtension
suggestedFileName
suggestedFilename
superclass
supportedCompressionTypeFromFilePathExtension:
supportedKeys
supportedKeysForDatabase
supportedKeysForDatabaseAsString
supportedKeysForDatabaseAsStringWithPrefix:
tokenizedURLForBagPathKey:
trackClusterDefaultLocationURL
tracksCachedDataMaxAge
tracksCluster
tracksClusterEndpointForStorefront:
tracksEnabled
type
uniqueHash
updateToken:withValue:
validDatabaseKeys
valueForHTTPHeaderField:
weekOfYear
writeMetadata:toDatabaseAtLocation:error:
year
zone
@24@0:8@16
@16@0:8
v16@0:8
@"NSString"
@"CLLocation"
v40@0:8@16@24@?32
v32@0:8@16@?24
v32@0:8@?16@?24
@32@0:8@16@24
@48@0:8q16@24@32@40
@"SHClusterStatementRunner"
@"SHClusterSQLiteDataStore"
v52@0:8@16q24@32B40@?44
@"<SHDataFetcher>"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@"NSURLRequest"16@?<v@?@"NSHTTPURLResponse"@"NSData"@"NSError">24
v32@0:8@"NSURLRequest"16@?<v@?@"NSHTTPURLResponse"@"NSURL"@"NSError">24
@40@0:8@16@24@32
@"NSData"
@"NSURL"
@"NSHTTPURLResponse"
v48@0:8@16@24@32@?40
v48@0:8@"NSURL"16@"NSString"24@"NSString"32@?<v@?@"SHDataFetcherFileInfo"@"NSError">40
v48@0:8@"NSURL"16@"CLLocation"24@"NSDate"32@?<v@?@"SHDataFetcherFileInfo"@"NSError">40
@"NSSet"
q16@0:8
v24@0:8q16
v20@0:8B16
v24@0:8@16
@"SHClusterMetadata"
@32@0:8@16^@24
B48@0:8@16@24@32^@40
B48@0:8@"SHDataFetcherFileInfo"16@"SHClusterMetadata"24@"NSURL"32^@40
B32@0:8^{sqlite3=}16^@24
q36@0:8^{sqlite3=}16i24i28i32
B40@0:8^{sqlite3=}16@24q32
@24@0:8^@16
B40@0:8@16@24^@32
B32@0:8@16^@24
@24@0:8q16
@40@0:8q16@24@32
v32@0:8q16@?24
v24@0:8@?16
B40@0:8^^{sqlite3}16@24^@32
B24@0:8^{sqlite3=}16
B40@0:8@16^{sqlite3=}24^@32
B64@0:8@16^{sqlite3=}24@32@40@?48^@56
B40@0:8^{sqlite3=}16@24^@32
@24@0:8Q16
v24@0:8^{sqlite3=}16
q24@0:8@16
@"NSDate"
B40@0:8@16^@24@?32
v40@0:8@16@24Q32
v24@0:8Q16
@?16@0:8
@"NSDictionary"
@"NSArray"
@"SHAffinityGroup"
d16@0:8
@"SHBagContract"
^{sqlite3=}16@0:8
@40@0:8@16@24^@32
@48@0:8@16@24@32^@40
@48@0:8q16@24@32^@40
^{sqlite3=}
@48@0:8q16d24@32@40
B32@0:8@16@24
@"SKCloudServiceController"
@32@0:8q16q24
@"NSMutableArray"
@"<SHNetworkRequester>"
@32@0:8q16@24
{CLLocationCoordinate2D=dd}24@0:8Q16
{CLLocationCoordinate2D=dd}24@0:8@16
i16@0:8
@(#)PROGRAM:ShazamInsights  PROJECT:ShazamKit-207
artists
tracks
v24@?0@"SHClusterSQLiteDataStore"8@"NSError"16
v40@?0@"NSURL"8@"NSString"16d24@"NSError"32
v24@?0@"SHDataFetcherFileInfo"8@"NSError"16
v16@?0@"SHInsightsConfiguration"8
CREATE TABLE if not exists Cohesion(id INTEGER PRIMARY KEY, high INTEGER, medium INTEGER, low INTEGER, CONSTRAINT constraint_name UNIQUE(low, medium, high) ON CONFLICT IGNORE)
CREATE TABLE if not exists MediaItems(sh_appleMusicID VARCHAR, cohesion INTEGER, FOREIGN KEY(cohesion) REFERENCES Cohesion(id))
CREATE TABLE if not exists Metadata(type VARCHAR, hash VARCHAR, storefront VARCHAR, creationDate DATE)
INSERT INTO Cohesion (low, medium, high) VALUES (?, ?, ?) returning id
INSERT INTO MediaItems (sh_appleMusicID, cohesion) VALUES (?, ?);
v40@?0@"NSString"8@"NSString"16@"NSString"24@"NSArray"32
com.apple.ShazamInsights
%@_temp
unknown
v8@?0
v24@?0@"SHClusterController"8@"NSError"16
v32@?0@"SHInsightsConfiguration"8@"NSString"16@"NSError"24
INSIGHTS_CUSTOM
PRAGMA cell_size_check=ON
PRAGMA quick_check
v16@?0^{sqlite3_stmt=}8
SELECT COUNT(*) FROM %@
BEGIN
COMMIT
select type, storefront, hash, creationDate from Metadata LIMIT 1
Failed to read the database metadata
Unknown Error
INSERT into Metadata(type, hash, storefront, creationDate) VALUES(?,?,?,?)
Metadata
UPDATE Metadata set type = ?, hash = ?, storefront = ?, creationDate = ?
clusters
%lu%@
Shazam
shazam-insights
baseURL
geocharts/path
geocharts/minGeohashLength
geocharts/maxGeohashLength
targeting/path
targeting/enabled
targeting/updateInterval
tracks/enabled
tracks/maxAgeInSeconds
artists/path
artists/enabled
artists/maxAgeInSeconds
v16@?0@"NSError"8
%@%@
PRAGMA table_info('MediaItems')
select %@ from MediaItems where cohesion = (select cohesion from MediaItems where %@ = <MEDIA_NAME> COLLATE %@) and %@ != <MEDIA_NAME2> COLLATE %@
<MEDIA_NAME>
<MEDIA_NAME2>
select %@ from MediaItems where %@ COLLATE %@ in (<MEDIA_IDS>)
<MEDIA_IDS>
select %@ from MediaItems t1, Cohesion c1 INNER JOIN (select  c2.high, c2.medium, c2.low from MediaItems t2, Cohesion c2 where t2.%@ in (<SEED_MEDIA_IDS>) AND t2.cohesion = c2.id order by %@) as s1 ON s1.low = c1.low
 AND s1.medium = c1.medium
 AND s1.high = c1.high AND s1.medium = c1.medium
 where t1.%@ in (<QUERY_MEDIA_IDS>) AND t1.cohesion = c1.id order by %@
<SEED_MEDIA_IDS>
<QUERY_MEDIA_IDS>
Cohesion
v24@?0@"NSString"8@"NSError"16
geoHashSuffixes
geoHash
trackPool
geoHashTrackPools
Etag
If-None-Match
v32@?0@"NSHTTPURLResponse"8@"NSURL"16@"NSError"24
v32@?0@"NSHTTPURLResponse"8@"NSData"16@"NSError"24
com.apple.ShazamInsightsDataFetcher
There was a problem fetching the data
The requested data was not found, please amend your query
The data was found but it was invalid
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
v32@?0@"NSURL"8@"NSURLResponse"16@"NSError"24
0123456789bcdefghjkmnpqrstuvwxyz
Cluster data already loaded
Failed to load the datastore %@
Failed to create the caches directory!
Failed to delete existing database %@
Failed to move database into place %@
Failed to turn on cell_size_check %@
Failed to run quick check %@
Unknown database type %@, assuming it is tracks
Failed to open database for metadata with error %@
Unreadable metadata, failing
Error reading metadata %@
Error updating metadata %@
Fetching insights configuration...
Failed to load insights configuration %@, using defaults
Failed to open database for artist query %@
Failed to perform artists query %@
Failed get a trackID from tracks query
Failed to query database %@
Failed to check database load status %@
Etag missing for request to %@, replacing with random hash
Network call: %@ failed with bad server response: %@
Invalid character in geohash %@: %c
SHRegion
SHClusterController
SHClusterLoader
SHAffinityGroupQuery
SHStubbedNetworkRequester
SHNetworkRequester
NSObject
SHLocalDataFetcher
SHDataFetcher
SHMediaItemPropertyCollection
SHClusterStatus
SHFileChecksum
SHJSONLClusterImporter
SHClusterImporter
SHClusterImporterUtils
SHClusterQuery
SHSQLiteUtils
SHClusterMetadataQuery
SHClusterMetadata
SHClusterJSONLReader
SHJSONLDataDetokenizerDelegate
SHTimeAndPlaceController
SHTimeAndPlaceAffinityGroup
SHInsightsConfiguration
SHClusterStatementRunner
SHClusterSQLiteDataStore
SHClusterLoaderRequest
SHAffinityGroup
SHTimeAndPlaceServerResponseParser
SHCDNDataFetcher
SHInsightsError
SHInsightsNetworkRequester
Geohash
SHDataFetcherFileInfo
SHSQLiteClusterImporter
T@"NSArray",R,N
JSONObjectWithData:options:error:
T@"NSString",R,C,N,V_uniqueHash
T@"<SHDataFetcher>",R,N,V_dataFetcher
T@"NSURL",R,N,V_downloadFileURL
T@"CLLocation",R,N,V_location
T@"NSArray",R,N,V_validDatabaseKeys
allHeaderFields
T@"NSData",R,N,V_requestData
base64EncodedStringWithOptions:
T@"NSDate",R,N
clusterForType:
T@"NSDictionary",R,N,V_geohashKeyedRegions
currentCalendar
T@"NSMutableArray",&,N,V_mutableMediaItems
dataURL
T@"NSString",C,N,V_mimeType
dealloc
T@"NSString",C,N,V_uniqueHash
geohash
T@"NSString",R,C,N
initWithString:
T@"NSString",R,C,N,V_requiredStorefront
isProxy
T@"NSString",R,N,V_property
regions
T@"NSURL",R,N,V_databaseFilePathURL
requestWithURL:
T@"NSURL",R,N,V_destinationURL
T@"NSURL",R,N,V_sourceURL
setValuesForKeysWithDictionary:
T@"SHBagContract",R,N,V_bagContract
stringFromDate:
T@"SHClusterSQLiteDataStore",R,N,V_dataStore
.cxx_destruct
T@"NSString",R,C,N,V_storefront
T#,R
T@"NSURL",R,N,V_dataFilePathURL
T@"<SHNetworkRequester>",R,N,V_networkRequester
_databaseMaxAge
T@"NSArray",R,N,V_regions
_destinationURL
T@"NSData",R,N,V_data
artistClusterDefaultLocationURL
T@"NSDate",&,N,V_creationDate
cachesDirectory
T@"NSDate",R,N,V_creationDate
compressionType
T@"NSHTTPURLResponse",R,N,V_httpResponse
dataFilePathURL
T@"NSSet",R,N,V_collection
dateFromString:
T@"NSString",C,N,V_storefront
downloadFileURL
T@"NSString",R,C
initWithData:suggestedFileName:
T@"NSString",R,C,N,V_geohash
insert:appleMusicID:cohesionID:
T@"NSString",R,C,N,V_suggestedFileName
messageForCode:
T@"NSURL",&,N,V_dataURL
release
T@"NSURL",R,N,V_databaseURL
runSQL:onDatabase:replacingTokens:withObjects:rowHandler:error:
T@"NSURL",R,N,V_outputURL
setIsDataValid:
T@"SHAffinityGroup",R,N,V_affinityGroup
stringByAppendingPathComponent:
T@"SHClusterMetadata",&,N,V_metadata
uppercaseString
T@"SHClusterStatementRunner",R,N,V_query
T@"SHClusterStatus",R,N
T@"SKCloudServiceController",R,N,V_cloudServiceController
T@?,C,N,V_callback
TB,N,V_isDataValid
TB,R,N
TQ,N,V_index
TQ,R
T^{sqlite3=},R,N,V_db
Td,R,N
Td,R,N,V_databaseMaxAge
Ti,R,N
Tq,N,V_loadStatus
Tq,R,N
Tq,R,N,V_clusterType
Tq,R,N,V_cohesionLevel
Tq,R,N,V_groupType
Tq,R,N,V_type
URLByAppendingPathComponent:
URLByAppendingPathExtension:
URLByDeletingLastPathComponent
URLForRequestForStorefront:withCompletion:
URLRepresentation
URLWithString:
UTF8String
UUID
UUIDString
_affinityGroup
_bagContract
_callback
_cloudServiceController
_clusterType
_cohesionLevel
_collection
_creationDate
_data
_dataFetcher
_dataFilePathURL
_dataStore
_dataURL
_databaseFilePathURL
_databaseURL
_downloadFileURL
_geohash
_geohashKeyedRegions
_groupType
_httpResponse
_index
_isDataValid
_loadStatus
_location
_metadata
_mimeType
_mutableMediaItems
_networkRequester
_outputURL
_property
_query
_regions
_requestData
_requiredStorefront
_sourceURL
_storefront
_suggestedFileName
_type
_uniqueHash
_validDatabaseKeys
absoluteString
addBagKey:defaultValue:
addObject:
addValue:forHTTPHeaderField:
affinityGroup
affinityGroupsAtCohesionLevel:forQuery:queryCollection:filteredBy:
affinityGroupsForLocation:atDate:completionHandler:
affinityGroupsFromData:atLocation:onDate:completionHandler:
affinityGroupsFromQueryCollection:filteredBySeedCollection:completionHandler:
allObjects
appendFormat:
appendMediaItem:
appendString:
appleMusicID
array
arrayWithObjects:count:
artistsCachedDataMaxAge
artistsCluster
artistsClusterEndpoint
artistsEnabled
autorelease
bagContract
booleanBackedByStringForKey:
buildTemporaryClusterURLWithError:
bytes
cStringUsingEncoding:
callback
checksumDataForFile:withError:
checksumForFile:withError:
class
clearTemporaryDatabaseFileAtURL:withError:
closeAndReturnError:
closeDatabase:error:
cloudServiceController
clusterConfiguration:
clusterDataAtURL:forLocation:date:completionHandler:
clusterType
code
cohesionLevel
collection
collectionWithArray:representingProperty:
commitTransactionOnDatabase:
compare:options:
components:fromDate:
componentsSeparatedByString:
conformsToProtocol:
controllerForType:withCompletionHandler:
coordinate
copy
copyDatabaseFromURL:toDatabaseDestinationURL:error:
copyItemAtURL:toURL:error:
count
countByEnumeratingWithState:objects:count:
createDatabase:atURL:error:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
createTables:error:
creationDate
data
dataFetcher
dataFetcherForSourceURL:
dataStatus
dataStore
dataStoreTypeFromString:
dataTaskWithRequest:completionHandler:
dataWithBytes:length:
dataWithContentsOfURL:
database:hasPopulatedTable:error:
databaseFilePathURL
databaseMaxAge
databaseURL
databaseURLForName:
date
dateFormatter
dateWithTimeIntervalSinceNow:
debugDescription
decompressFile:withAlgorithm:toLocation:error:
defaultManager
defenseAgainstBadDatabase:
description
destinationURL
dictionary
dictionaryWithCapacity:
dictionaryWithObjects:forKeys:count:
doesRequestEtag:matchInResponse:
domain
doubleBackedByStringForKey:
downloadResourceFromRequest:completionHandler:
downloadTaskWithRequest:completionHandler:
endpointFromDate:insights:location:
errorWithCode:underlyingError:
errorWithCode:underlyingError:keyOverrides:
errorWithDomain:code:userInfo:
fetchClusterURL:forCurrentStorefront:cachedUniqueHash:completionHandler:
fetchSharedInstanceWithCompletion:
fileExistsAtPath:
fileHandleForReadingFromURL:error:
fileURLWithPath:isDirectory:
filterMediaItemQueryCollection:bySeedCollection:completionHandler:
filterQueryCollection:byItemsWithinCluster:
firstObject
geoChartsEndpointForDate:geoHash:
geohashKeyedRegions
groupType
hasNotPassedExpiryDate:isForCountryCode:
hasPrefix:
hash
httpResponse
importClusters:toParentCluster:startIndex:
importerForFile:
index
init
initWithArray:representingProperty:
initWithBagContract:
initWithBaseDictionaryKey:profile:profileVersion:
initWithBytes:length:encoding:
initWithCString:encoding:
initWithClusterType:databaseMaxAge:forStorefront:databaseFilePathURL:
initWithData:encoding:
initWithDataFetcher:dataStore:
initWithDataStore:
initWithDataURL:
initWithDataURL:suggestedFileName:
initWithDatabaseURL:
initWithGeohash:
initWithHTTPResponse:requestData:downloadFileURL:
initWithLocation:
initWithNetworkRequester:
initWithRegions:affinityGroup:
initWithType:
initWithType:cohesionLevel:
initWithType:sourceURL:destinationURL:
initWithType:sourceURL:outputURL:
initWithType:storefront:uniqueHash:creationDate:
insert:low:medium:high:
intValue
integerBackedByStringForKey:
intersectSet:
isDataLoaded
isDataValid
isEqual:
isEqualToString:
isFileURL
isKindOfClass:
isMemberOfClass:
lastPathComponent
laterDate:
length
loadBaseDictionary:
loadDataForRequest:completionHandler:
loadDataFromFileInfo:withMetadata:toDestinationURL:error:
loadDataFromURL:error:
loadFromURL:type:storefront:reuseExistingData:completion:
loadStatus
location
maxGeoChartsGeohashLength
mediaItemWithProperties:
mediaItems
mediaItemsAtCohesionLevel:forQueryMediaIDs:filteredBySeedMediaIDs:error:
mediaItemsForPropertyCollection:completionHandler:
mediaItemsFromPropertyCollection:error:
mediaItemsMatchingValuesInCollection:completionHandler:
mediaItemsSimilarToMediaItemValue:forKey:error:
mediaItemsSimilarToValue:forKey:completionHandler:
mediaItemsWithHighCohesionToValue:forProperty:completionHandler:
mediaItemsWithQuery:tokens:objects:error:
metadata
metadataFromDatabaseAtLocation:error:
mimeType
minGeoChartsGeohashLength
mutableCopy
mutableMediaItems
networkRequester
objectAtIndexedSubscript:
objectForKeyedSubscript:
openDatabase:atURL:error:
outputURL
parsedJSONObject:error:
path
pathExtension
performRequest:completionHandler:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
property
query
queryStringForCount:
readDataLineByLineFromURL:error:callback:
readDataOfLength:
regionAffinityGroupsFromServerData:error:
regionsForGeohash:
removeItemAtURL:error:
removeObject:
replaceOccurrencesOfString:withString:options:range:
requestData
requestStorefrontCountryCodeWithCompletionHandler:
requiredStorefront
respondsToSelector:
response:data:error:
resultsFromQueryBlock:completionHandler:
resume
retain
retainCount
runNoResultSQL:onDatabase:error:
self
setCallback:
setCreationDate:
setDataURL:
setDelegate:
setFormatOptions:
setIndex:
setLoadStatus:
setMetadata:
setMimeType:
setMutableMediaItems:
setObject:forKeyedSubscript:
setStorefront:
setUniqueHash:
setValue:forKey:
setWithArray:
setWithCapacity:
sh_geoHashToCoordinates:
sh_geohashOfLength:
sh_roundCoordinateValuesToGeohashOfLength:
sh_toGeohash
sharedSession
shouldDeleteExistingDatabaseAtOutputURL
sourceURL
sourceURLWithCompletion:
sqliteDatabaseExistsAtURL:
startTransactionOnDatabase:
statusCode
statusWithCompletionHandler:
storefront
string
stringByAppendingString:
stringForKey:
stringFromStoreType:
stringWithCString:encoding:
stringWithFormat:
stringWithString:
substringToIndex:
suggestedExtension
suggestedFileName
suggestedFilename
superclass
supportedCompressionTypeFromFilePathExtension:
supportedKeys
supportedKeysForDatabase
supportedKeysForDatabaseAsString
supportedKeysForDatabaseAsStringWithPrefix:
tokenizedURLForBagPathKey:
trackClusterDefaultLocationURL
tracksCachedDataMaxAge
tracksCluster
tracksClusterEndpointForStorefront:
tracksEnabled
type
uniqueHash
updateToken:withValue:
validDatabaseKeys
valueForHTTPHeaderField:
weekOfYear
writeMetadata:toDatabaseAtLocation:error:
year
zone
@24@0:8@16
@16@0:8
v16@0:8
@"NSString"
@"CLLocation"
v40@0:8@16@24@?32
v32@0:8@16@?24
v32@0:8@?16@?24
@32@0:8@16@24
@48@0:8q16@24@32@40
@"SHClusterStatementRunner"
@"SHClusterSQLiteDataStore"
v52@0:8@16q24@32B40@?44
@"<SHDataFetcher>"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@"NSURLRequest"16@?<v@?@"NSHTTPURLResponse"@"NSData"@"NSError">24
v32@0:8@"NSURLRequest"16@?<v@?@"NSHTTPURLResponse"@"NSURL"@"NSError">24
@40@0:8@16@24@32
@"NSData"
@"NSURL"
@"NSHTTPURLResponse"
v48@0:8@16@24@32@?40
v48@0:8@"NSURL"16@"NSString"24@"NSString"32@?<v@?@"SHDataFetcherFileInfo"@"NSError">40
v48@0:8@"NSURL"16@"CLLocation"24@"NSDate"32@?<v@?@"SHDataFetcherFileInfo"@"NSError">40
@"NSSet"
q16@0:8
v24@0:8q16
v20@0:8B16
v24@0:8@16
@"SHClusterMetadata"
@32@0:8@16^@24
B48@0:8@16@24@32^@40
B48@0:8@"SHDataFetcherFileInfo"16@"SHClusterMetadata"24@"NSURL"32^@40
B32@0:8^{sqlite3=}16^@24
q36@0:8^{sqlite3=}16i24i28i32
B40@0:8^{sqlite3=}16@24q32
@24@0:8^@16
B40@0:8@16@24^@32
B32@0:8@16^@24
@24@0:8q16
@40@0:8q16@24@32
v32@0:8q16@?24
v24@0:8@?16
B40@0:8^^{sqlite3}16@24^@32
B24@0:8^{sqlite3=}16
B40@0:8@16^{sqlite3=}24^@32
B64@0:8@16^{sqlite3=}24@32@40@?48^@56
B40@0:8^{sqlite3=}16@24^@32
@24@0:8Q16
v24@0:8^{sqlite3=}16
q24@0:8@16
@"NSDate"
B40@0:8@16^@24@?32
v40@0:8@16@24Q32
v24@0:8Q16
@?16@0:8
@"NSDictionary"
@"NSArray"
@"SHAffinityGroup"
d16@0:8
@"SHBagContract"
^{sqlite3=}16@0:8
@40@0:8@16@24^@32
@48@0:8@16@24@32^@40
@48@0:8q16@24@32^@40
^{sqlite3=}
@48@0:8q16d24@32@40
B32@0:8@16@24
@"SKCloudServiceController"
@32@0:8q16q24
@"NSMutableArray"
@"<SHNetworkRequester>"
@32@0:8q16@24
{CLLocationCoordinate2D=dd}24@0:8Q16
{CLLocationCoordinate2D=dd}24@0:8@16
i16@0:8
