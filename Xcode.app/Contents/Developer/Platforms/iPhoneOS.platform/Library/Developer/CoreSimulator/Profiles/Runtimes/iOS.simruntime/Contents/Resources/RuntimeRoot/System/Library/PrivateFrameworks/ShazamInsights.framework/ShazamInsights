@(#)PROGRAM:ShazamInsights  PROJECT:ShazamKit-195.1
33333ch@
artists
tracks
v24@?0@"SHClusterSQLiteDataStore"8@"NSError"16
v40@?0@"NSURL"8@"NSString"16d24@"NSError"32
v24@?0@"SHDataFetcherFileInfo"8@"NSError"16
v16@?0@"SHInsightsConfiguration"8
CREATE TABLE if not exists Cohesion(id INTEGER PRIMARY KEY, high INTEGER, medium INTEGER, low INTEGER, CONSTRAINT constraint_name UNIQUE(low, medium, high) ON CONFLICT IGNORE)
CREATE TABLE if not exists MediaItems(sh_appleMusicID VARCHAR, cohesion INTEGER, FOREIGN KEY(cohesion) REFERENCES Cohesion(id))
CREATE TABLE if not exists Metadata(type VARCHAR, hash VARCHAR, storefront VARCHAR, creationDate DATE)
INSERT INTO Cohesion (low, medium, high) VALUES (?, ?, ?) returning id
INSERT INTO MediaItems (sh_appleMusicID, cohesion) VALUES (?, ?);
v40@?0@"NSString"8@"NSString"16@"NSString"24@"NSArray"32
com.apple.ShazamInsights
%@_temp
unknown
v8@?0
v24@?0@"SHClusterController"8@"NSError"16
v32@?0@"SHInsightsConfiguration"8@"NSString"16@"NSError"24
INSIGHTS_CUSTOM
PRAGMA cell_size_check=ON
PRAGMA quick_check
v16@?0^{sqlite3_stmt=}8
SELECT COUNT(*) FROM %@
BEGIN
COMMIT
select type, storefront, hash, creationDate from Metadata LIMIT 1
Failed to read the database metadata
Unknown Error
INSERT into Metadata(type, hash, storefront, creationDate) VALUES(?,?,?,?)
Metadata
UPDATE Metadata set type = ?, hash = ?, storefront = ?, creationDate = ?
clusters
%lu%@
Shazam
shazam-insights
baseURL
geocharts/path
geocharts/minGeohashLength
geocharts/maxGeohashLength
targeting/path
targeting/enabled
targeting/updateInterval
tracks/enabled
tracks/maxAgeInSeconds
artists/path
artists/enabled
artists/maxAgeInSeconds
v16@?0@"NSError"8
%@%@
PRAGMA table_info('MediaItems')
select %@ from MediaItems where cohesion = (select cohesion from MediaItems where %@ = <MEDIA_NAME> COLLATE %@) and %@ != <MEDIA_NAME2> COLLATE %@
<MEDIA_NAME>
<MEDIA_NAME2>
select %@ from MediaItems where %@ COLLATE %@ in (<MEDIA_IDS>)
<MEDIA_IDS>
select %@ from MediaItems t1, Cohesion c1 INNER JOIN (select  c2.high, c2.medium, c2.low from MediaItems t2, Cohesion c2 where t2.%@ in (<SEED_MEDIA_IDS>) AND t2.cohesion = c2.id order by %@) as s1 ON s1.low = c1.low
 AND s1.medium = c1.medium
 AND s1.high = c1.high AND s1.medium = c1.medium
 where t1.%@ in (<QUERY_MEDIA_IDS>) AND t1.cohesion = c1.id order by %@
<SEED_MEDIA_IDS>
<QUERY_MEDIA_IDS>
Cohesion
v24@?0@"NSString"8@"NSError"16
geoHashSuffixes
geoHash
trackPool
geoHashTrackPools
Etag
If-None-Match
v32@?0@"NSHTTPURLResponse"8@"NSURL"16@"NSError"24
v32@?0@"NSHTTPURLResponse"8@"NSData"16@"NSError"24
com.apple.ShazamInsightsDataFetcher
There was a problem fetching the data
The requested data was not found, please amend your query
The data was found but it was invalid
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
v32@?0@"NSURL"8@"NSURLResponse"16@"NSError"24
0123456789bcdefghjkmnpqrstuvwxyz
Cluster data already loaded
Failed to load the datastore %@
Failed to create the caches directory!
Failed to delete existing database %@
Failed to move database into place %@
Failed to turn on cell_size_check %@
Failed to run quick check %@
Unknown database type %@, assuming it is tracks
Failed to open database for metadata with error %@
Unreadable metadata, failing
Error reading metadata %@
Error updating metadata %@
Fetching insights configuration...
Failed to load insights configuration %@, using defaults
Failed to open database for artist query %@
Failed to perform artists query %@
Failed get a trackID from tracks query
Failed to query database %@
Failed to check database load status %@
Etag missing for request to %@, replacing with random hash
Network call: %@ failed with bad server response: %@
Invalid character in geohash %@: %c
SHRegion
SHClusterController
SHClusterLoader
SHAffinityGroupQuery
SHStubbedNetworkRequester
SHNetworkRequester
NSObject
SHLocalDataFetcher
SHDataFetcher
SHMediaItemPropertyCollection
SHClusterStatus
SHFileChecksum
SHJSONLClusterImporter
SHClusterImporter
SHClusterImporterUtils
SHClusterQuery
SHSQLiteUtils
SHClusterMetadataQuery
SHClusterMetadata
SHClusterJSONLReader
SHJSONLDataDetokenizerDelegate
SHTimeAndPlaceController
SHTimeAndPlaceAffinityGroup
SHInsightsConfiguration
SHClusterStatementRunner
SHClusterSQLiteDataStore
SHClusterLoaderRequest
SHAffinityGroup
SHTimeAndPlaceServerResponseParser
SHCDNDataFetcher
SHInsightsError
SHInsightsNetworkRequester
Geohash
SHDataFetcherFileInfo
SHSQLiteClusterImporter
init
initWithGeohash:
initWithLocation:
geohash
location
.cxx_destruct
_geohash
_location
T@"NSString",R,C,N,V_geohash
T@"CLLocation",R,N,V_location
databaseFilePathURL
initWithDatabaseURL:
dataStore
dataStatus
loadStatus
errorWithCode:underlyingError:
query
mediaItemsSimilarToMediaItemValue:forKey:error:
allObjects
mediaItemsFromPropertyCollection:error:
array
affinityGroupsAtCohesionLevel:forQuery:queryCollection:filteredBy:
addObject:
filterQueryCollection:byItemsWithinCluster:
copy
collection
mutableCopy
mediaItems
countByEnumeratingWithState:objects:count:
appleMusicID
removeObject:
property
initWithArray:representingProperty:
count
mediaItemsAtCohesionLevel:forQueryMediaIDs:filteredBySeedMediaIDs:error:
clusterType
initWithType:cohesionLevel:
appendMediaItem:
databaseURLForName:
cachesDirectory
URLByAppendingPathComponent:
URLByAppendingPathExtension:
artistClusterDefaultLocationURL
trackClusterDefaultLocationURL
initWithDataStore:
mediaItemsSimilarToValue:forKey:completionHandler:
mediaItemsForPropertyCollection:completionHandler:
resultsFromQueryBlock:completionHandler:
affinityGroupsFromQueryCollection:filteredBySeedCollection:completionHandler:
_query
_dataStore
T@"SHClusterStatementRunner",R,N,V_query
T@"SHClusterSQLiteDataStore",R,N,V_dataStore
dataFetcherForSourceURL:
type
outputURL
initWithClusterType:databaseMaxAge:forStorefront:databaseFilePathURL:
initWithDataFetcher:dataStore:
shouldDeleteExistingDatabaseAtOutputURL
loadFromURL:type:storefront:reuseExistingData:completion:
sourceURLWithCompletion:
isDataValid
dataFetcher
uniqueHash
domain
isEqualToString:
code
storefront
creationDate
initWithType:storefront:uniqueHash:creationDate:
compressionType
buildTemporaryClusterURLWithError:
dataFilePathURL
decompressFile:withAlgorithm:toLocation:error:
initWithDataURL:
importerForFile:
loadDataFromFileInfo:withMetadata:toDestinationURL:error:
fetchClusterURL:forCurrentStorefront:cachedUniqueHash:completionHandler:
loadDataForRequest:completionHandler:
_dataFetcher
T@"<SHDataFetcher>",R,N,V_dataFetcher
minGeoChartsGeohashLength
sh_geohashOfLength:
geoChartsEndpointForDate:geoHash:
data
affinityGroupsFromData:atLocation:onDate:completionHandler:
clusterDataAtURL:forLocation:date:completionHandler:
fetchSharedInstanceWithCompletion:
affinityGroupsForLocation:atDate:completionHandler:
httpResponse
downloadFileURL
requestData
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
performRequest:completionHandler:
downloadResourceFromRequest:completionHandler:
initWithHTTPResponse:requestData:downloadFileURL:
_requestData
_downloadFileURL
_httpResponse
T@"NSData",R,N,V_requestData
T@"NSURL",R,N,V_downloadFileURL
T@"NSHTTPURLResponse",R,N,V_httpResponse
defaultManager
path
fileExistsAtPath:
checksumForFile:withError:
errorWithDomain:code:userInfo:
setStorefront:
date
setCreationDate:
setUniqueHash:
dataWithContentsOfURL:
setWithArray:
collectionWithArray:representingProperty:
_collection
_property
T@"NSSet",R,N,V_collection
T@"NSString",R,N,V_property
metadata
setLoadStatus:
setIsDataValid:
dataURL
setDataURL:
setMetadata:
_isDataValid
_loadStatus
_dataURL
_metadata
T@"NSURL",&,N,V_dataURL
Tq,N,V_loadStatus
TB,N,V_isDataValid
T@"SHClusterMetadata",&,N,V_metadata
T@"NSString",R,C,N
T@"NSDate",R,N
Tq,R,N
checksumDataForFile:withError:
base64EncodedStringWithOptions:
fileHandleForReadingFromURL:error:
readDataOfLength:
bytes
length
closeAndReturnError:
dataWithBytes:length:
runNoResultSQL:onDatabase:error:
cStringUsingEncoding:
createDatabase:atURL:error:
createTables:error:
clearTemporaryDatabaseFileAtURL:withError:
startTransactionOnDatabase:
intValue
insert:low:medium:high:
insert:appleMusicID:cohesionID:
readDataLineByLineFromURL:error:callback:
commitTransactionOnDatabase:
closeDatabase:error:
copyDatabaseFromURL:toDatabaseDestinationURL:error:
writeMetadata:toDatabaseAtLocation:error:
firstObject
stringByAppendingPathComponent:
fileURLWithPath:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
UUID
UUIDString
stringWithFormat:
sqliteDatabaseExistsAtURL:
removeItemAtURL:error:
URLByDeletingLastPathComponent
copyItemAtURL:toURL:error:
tracksCluster
artistsCluster
initWithType:sourceURL:destinationURL:
sourceURL
destinationURL
initWithType:sourceURL:outputURL:
controllerForType:withCompletionHandler:
isFileURL
initWithType:
artistsCachedDataMaxAge
tracksCachedDataMaxAge
clusterConfiguration:
clusterForType:
filterMediaItemQueryCollection:bySeedCollection:completionHandler:
mediaItemsWithHighCohesionToValue:forProperty:completionHandler:
mediaItemsMatchingValuesInCollection:completionHandler:
statusWithCompletionHandler:
_sourceURL
_destinationURL
_type
T@"NSURL",R,N,V_sourceURL
T@"NSURL",R,N,V_destinationURL
Tq,R,N,V_type
stringWithCString:encoding:
dictionaryWithObjects:forKeys:count:
absoluteString
defenseAgainstBadDatabase:
runSQL:onDatabase:replacingTokens:withObjects:rowHandler:error:
objectAtIndexedSubscript:
queryStringForCount:
replaceOccurrencesOfString:withString:options:range:
string
appendString:
openDatabase:atURL:error:
database:hasPopulatedTable:error:
initWithBytes:length:encoding:
compare:options:
stringFromStoreType:
setFormatOptions:
dateFormatter
dateFromString:
dataStoreTypeFromString:
errorWithCode:underlyingError:keyOverrides:
stringFromDate:
metadataFromDatabaseAtLocation:error:
_uniqueHash
_storefront
_creationDate
_clusterType
T@"NSString",R,C,N,V_uniqueHash
T@"NSString",R,C,N,V_storefront
T@"NSDate",R,N,V_creationDate
Tq,R,N,V_clusterType
setCallback:
setDelegate:
loadDataFromURL:error:
arrayWithObjects:count:
index
importClusters:toParentCluster:startIndex:
setIndex:
objectForKeyedSubscript:
stringByAppendingString:
setObject:forKeyedSubscript:
componentsSeparatedByString:
callback
parsedJSONObject:error:
_index
_callback
TQ,N,V_index
T@?,C,N,V_callback
regionAffinityGroupsFromServerData:error:
maxGeoChartsGeohashLength
regionsForGeohash:
affinityGroup
regions
dictionaryWithCapacity:
hasPrefix:
substringToIndex:
geohashKeyedRegions
initWithRegions:affinityGroup:
_geohashKeyedRegions
_regions
_affinityGroup
T@"NSDictionary",R,N,V_geohashKeyedRegions
T@"NSArray",R,N,V_regions
T@"SHAffinityGroup",R,N,V_affinityGroup
bagContract
loadBaseDictionary:
initWithBaseDictionaryKey:profile:profileVersion:
addBagKey:defaultValue:
doubleBackedByStringForKey:
booleanBackedByStringForKey:
tokenizedURLForBagPathKey:
updateToken:withValue:
URLRepresentation
currentCalendar
components:fromDate:
year
weekOfYear
integerBackedByStringForKey:
stringForKey:
initWithString:
initWithBagContract:
tracksEnabled
tracksClusterEndpointForStorefront:
artistsEnabled
artistsClusterEndpoint
_bagContract
T@"SHBagContract",R,N,V_bagContract
Td,R,N
TB,R,N
dealloc
supportedKeysForDatabase
databaseURL
supportedKeys
intersectSet:
supportedKeysForDatabaseAsString
mediaItemsWithQuery:tokens:objects:error:
setWithCapacity:
dictionary
validDatabaseKeys
setValue:forKey:
mediaItemWithProperties:
supportedKeysForDatabaseAsStringWithPrefix:
stringWithString:
appendFormat:
_databaseURL
_validDatabaseKeys
T^{sqlite3=},R,N,V_db
T@"NSURL",R,N,V_databaseURL
T@"NSArray",R,N,V_validDatabaseKeys
databaseMaxAge
dateWithTimeIntervalSinceNow:
isDataLoaded
requiredStorefront
hasNotPassedExpiryDate:isForCountryCode:
laterDate:
_databaseMaxAge
_databaseFilePathURL
_requiredStorefront
T@"NSString",R,N,V_requiredStorefront
T@"SHClusterStatus",R,N
Td,R,N,V_databaseMaxAge
T@"NSURL",R,N,V_databaseFilePathURL
cloudServiceController
uppercaseString
URLForRequestForStorefront:withCompletion:
requestStorefrontCountryCodeWithCompletionHandler:
_cloudServiceController
_outputURL
T@"SKCloudServiceController",R,N,V_cloudServiceController
T@"NSURL",R,N,V_outputURL
mutableMediaItems
groupType
cohesionLevel
setMutableMediaItems:
_groupType
_cohesionLevel
_mutableMediaItems
T@"NSMutableArray",&,N,V_mutableMediaItems
Tq,R,N,V_groupType
Tq,R,N,V_cohesionLevel
T@"NSArray",R,N
JSONObjectWithData:options:error:
initWithNetworkRequester:
requestWithURL:
addValue:forHTTPHeaderField:
networkRequester
statusCode
doesRequestEtag:matchInResponse:
suggestedFilename
initWithDataURL:suggestedFileName:
valueForHTTPHeaderField:
allHeaderFields
initWithData:suggestedFileName:
endpointFromDate:insights:location:
_networkRequester
T@"<SHNetworkRequester>",R,N,V_networkRequester
messageForCode:
setValuesForKeysWithDictionary:
sharedSession
response:data:error:
dataTaskWithRequest:completionHandler:
resume
downloadTaskWithRequest:completionHandler:
initWithData:encoding:
sh_geoHashToCoordinates:
coordinate
initWithCString:encoding:
UTF8String
sh_toGeohash
sh_roundCoordinateValuesToGeohashOfLength:
lastPathComponent
suggestedFileName
pathExtension
supportedCompressionTypeFromFilePathExtension:
URLWithString:
suggestedExtension
mimeType
setMimeType:
_data
_dataFilePathURL
_suggestedFileName
_mimeType
T@"NSURL",R,N,V_dataFilePathURL
T@"NSData",R,N,V_data
T@"NSString",R,C,N,V_suggestedFileName
Ti,R,N
T@"NSDate",&,N,V_creationDate
T@"NSString",C,N,V_storefront
T@"NSString",C,N,V_uniqueHash
T@"NSString",C,N,V_mimeType
@24@0:8@16
@16@0:8
v16@0:8
@"NSString"
@"CLLocation"
v40@0:8@16@24@?32
v32@0:8@16@?24
v32@0:8@?16@?24
@32@0:8@16@24
@48@0:8q16@24@32@40
@"SHClusterStatementRunner"
@"SHClusterSQLiteDataStore"
v52@0:8@16q24@32B40@?44
@"<SHDataFetcher>"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@"NSURLRequest"16@?<v@?@"NSHTTPURLResponse"@"NSData"@"NSError">24
v32@0:8@"NSURLRequest"16@?<v@?@"NSHTTPURLResponse"@"NSURL"@"NSError">24
@40@0:8@16@24@32
@"NSData"
@"NSURL"
@"NSHTTPURLResponse"
v48@0:8@16@24@32@?40
v48@0:8@"NSURL"16@"NSString"24@"NSString"32@?<v@?@"SHDataFetcherFileInfo"@"NSError">40
v48@0:8@"NSURL"16@"CLLocation"24@"NSDate"32@?<v@?@"SHDataFetcherFileInfo"@"NSError">40
@"NSSet"
q16@0:8
v24@0:8q16
v20@0:8B16
v24@0:8@16
@"SHClusterMetadata"
@32@0:8@16^@24
B48@0:8@16@24@32^@40
B48@0:8@"SHDataFetcherFileInfo"16@"SHClusterMetadata"24@"NSURL"32^@40
B32@0:8^{sqlite3=}16^@24
q36@0:8^{sqlite3=}16i24i28i32
B40@0:8^{sqlite3=}16@24q32
@24@0:8^@16
B40@0:8@16@24^@32
B32@0:8@16^@24
@24@0:8q16
@40@0:8q16@24@32
v32@0:8q16@?24
v24@0:8@?16
B40@0:8^^{sqlite3}16@24^@32
B24@0:8^{sqlite3=}16
B40@0:8@16^{sqlite3=}24^@32
B64@0:8@16^{sqlite3=}24@32@40@?48^@56
B40@0:8^{sqlite3=}16@24^@32
@24@0:8Q16
v24@0:8^{sqlite3=}16
q24@0:8@16
@"NSDate"
B40@0:8@16^@24@?32
v40@0:8@16@24Q32
v24@0:8Q16
@?16@0:8
@"NSDictionary"
@"NSArray"
@"SHAffinityGroup"
d16@0:8
@"SHBagContract"
^{sqlite3=}16@0:8
@40@0:8@16@24^@32
@48@0:8@16@24@32^@40
@48@0:8q16@24@32^@40
^{sqlite3=}
@48@0:8q16d24@32@40
B32@0:8@16@24
@"SKCloudServiceController"
@32@0:8q16q24
@"NSMutableArray"
@"<SHNetworkRequester>"
@32@0:8q16@24
{CLLocationCoordinate2D=dd}24@0:8Q16
{CLLocationCoordinate2D=dd}24@0:8@16
i16@0:8
@(#)PROGRAM:ShazamInsights  PROJECT:ShazamKit-195.1
33333ch@
artists
tracks
v24@?0@"SHClusterSQLiteDataStore"8@"NSError"16
v40@?0@"NSURL"8@"NSString"16d24@"NSError"32
v24@?0@"SHDataFetcherFileInfo"8@"NSError"16
v16@?0@"SHInsightsConfiguration"8
CREATE TABLE if not exists Cohesion(id INTEGER PRIMARY KEY, high INTEGER, medium INTEGER, low INTEGER, CONSTRAINT constraint_name UNIQUE(low, medium, high) ON CONFLICT IGNORE)
CREATE TABLE if not exists MediaItems(sh_appleMusicID VARCHAR, cohesion INTEGER, FOREIGN KEY(cohesion) REFERENCES Cohesion(id))
CREATE TABLE if not exists Metadata(type VARCHAR, hash VARCHAR, storefront VARCHAR, creationDate DATE)
INSERT INTO Cohesion (low, medium, high) VALUES (?, ?, ?) returning id
INSERT INTO MediaItems (sh_appleMusicID, cohesion) VALUES (?, ?);
v40@?0@"NSString"8@"NSString"16@"NSString"24@"NSArray"32
com.apple.ShazamInsights
%@_temp
unknown
v8@?0
v24@?0@"SHClusterController"8@"NSError"16
v32@?0@"SHInsightsConfiguration"8@"NSString"16@"NSError"24
INSIGHTS_CUSTOM
PRAGMA cell_size_check=ON
PRAGMA quick_check
v16@?0^{sqlite3_stmt=}8
SELECT COUNT(*) FROM %@
BEGIN
COMMIT
select type, storefront, hash, creationDate from Metadata LIMIT 1
Failed to read the database metadata
Unknown Error
INSERT into Metadata(type, hash, storefront, creationDate) VALUES(?,?,?,?)
Metadata
UPDATE Metadata set type = ?, hash = ?, storefront = ?, creationDate = ?
clusters
%lu%@
Shazam
shazam-insights
baseURL
geocharts/path
geocharts/minGeohashLength
geocharts/maxGeohashLength
targeting/path
targeting/enabled
targeting/updateInterval
tracks/enabled
tracks/maxAgeInSeconds
artists/path
artists/enabled
artists/maxAgeInSeconds
v16@?0@"NSError"8
%@%@
PRAGMA table_info('MediaItems')
select %@ from MediaItems where cohesion = (select cohesion from MediaItems where %@ = <MEDIA_NAME> COLLATE %@) and %@ != <MEDIA_NAME2> COLLATE %@
<MEDIA_NAME>
<MEDIA_NAME2>
select %@ from MediaItems where %@ COLLATE %@ in (<MEDIA_IDS>)
<MEDIA_IDS>
select %@ from MediaItems t1, Cohesion c1 INNER JOIN (select  c2.high, c2.medium, c2.low from MediaItems t2, Cohesion c2 where t2.%@ in (<SEED_MEDIA_IDS>) AND t2.cohesion = c2.id order by %@) as s1 ON s1.low = c1.low
 AND s1.medium = c1.medium
 AND s1.high = c1.high AND s1.medium = c1.medium
 where t1.%@ in (<QUERY_MEDIA_IDS>) AND t1.cohesion = c1.id order by %@
<SEED_MEDIA_IDS>
<QUERY_MEDIA_IDS>
Cohesion
v24@?0@"NSString"8@"NSError"16
geoHashSuffixes
geoHash
trackPool
geoHashTrackPools
Etag
If-None-Match
v32@?0@"NSHTTPURLResponse"8@"NSURL"16@"NSError"24
v32@?0@"NSHTTPURLResponse"8@"NSData"16@"NSError"24
com.apple.ShazamInsightsDataFetcher
There was a problem fetching the data
The requested data was not found, please amend your query
The data was found but it was invalid
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
v32@?0@"NSURL"8@"NSURLResponse"16@"NSError"24
0123456789bcdefghjkmnpqrstuvwxyz
Cluster data already loaded
Failed to load the datastore %@
Failed to create the caches directory!
Failed to delete existing database %@
Failed to move database into place %@
Failed to turn on cell_size_check %@
Failed to run quick check %@
Unknown database type %@, assuming it is tracks
Failed to open database for metadata with error %@
Unreadable metadata, failing
Error reading metadata %@
Error updating metadata %@
Fetching insights configuration...
Failed to load insights configuration %@, using defaults
Failed to open database for artist query %@
Failed to perform artists query %@
Failed get a trackID from tracks query
Failed to query database %@
Failed to check database load status %@
Etag missing for request to %@, replacing with random hash
Network call: %@ failed with bad server response: %@
Invalid character in geohash %@: %c
SHRegion
SHClusterController
SHClusterLoader
SHAffinityGroupQuery
SHStubbedNetworkRequester
SHNetworkRequester
NSObject
SHLocalDataFetcher
SHDataFetcher
SHMediaItemPropertyCollection
SHClusterStatus
SHFileChecksum
SHJSONLClusterImporter
SHClusterImporter
SHClusterImporterUtils
SHClusterQuery
SHSQLiteUtils
SHClusterMetadataQuery
SHClusterMetadata
SHClusterJSONLReader
SHJSONLDataDetokenizerDelegate
SHTimeAndPlaceController
SHTimeAndPlaceAffinityGroup
SHInsightsConfiguration
SHClusterStatementRunner
SHClusterSQLiteDataStore
SHClusterLoaderRequest
SHAffinityGroup
SHTimeAndPlaceServerResponseParser
SHCDNDataFetcher
SHInsightsError
SHInsightsNetworkRequester
Geohash
SHDataFetcherFileInfo
SHSQLiteClusterImporter
dictionary
isFileURL
stringWithCString:encoding:
valueForHTTPHeaderField:
fileHandleForReadingFromURL:error:
currentCalendar
appendString:
pathExtension
removeObject:
booleanBackedByStringForKey:
isEqualToString:
fileExistsAtPath:
removeItemAtURL:error:
URLRepresentation
setObject:forKeyedSubscript:
stringFromDate:
path
base64EncodedStringWithOptions:
uppercaseString
appendFormat:
componentsSeparatedByString:
hasPrefix:
stringForKey:
URLByAppendingPathExtension:
closeAndReturnError:
defaultManager
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
initWithData:encoding:
sharedSession
components:fromDate:
updateToken:withValue:
resume
loadDataFromURL:error:
allObjects
initWithString:
URLByDeletingLastPathComponent
decompressFile:withAlgorithm:toLocation:error:
supportedCompressionTypeFromFilePathExtension:
stringByAppendingString:
JSONObjectWithData:options:error:
dataWithContentsOfURL:
errorWithDomain:code:userInfo:
compare:options:
intersectSet:
addValue:forHTTPHeaderField:
objectForKeyedSubscript:
UUID
URLByAppendingPathComponent:
stringByAppendingPathComponent:
countByEnumeratingWithState:objects:count:
dataWithBytes:length:
initWithCString:encoding:
suggestedFilename
dateWithTimeIntervalSinceNow:
dataTaskWithRequest:completionHandler:
readDataOfLength:
doubleBackedByStringForKey:
objectAtIndexedSubscript:
integerBackedByStringForKey:
string
count
addObject:
setWithCapacity:
loadBaseDictionary:
initWithBytes:length:encoding:
downloadTaskWithRequest:completionHandler:
domain
requestWithURL:
dateFromString:
setFormatOptions:
intValue
addBagKey:defaultValue:
UTF8String
URLWithString:
copyItemAtURL:toURL:error:
initWithBaseDictionaryKey:profile:profileVersion:
statusCode
substringToIndex:
length
setWithArray:
code
setDelegate:
requestStorefrontCountryCodeWithCompletionHandler:
firstObject
year
arrayWithObjects:count:
absoluteString
setValuesForKeysWithDictionary:
laterDate:
dictionaryWithObjects:forKeys:count:
stringWithString:
UUIDString
date
mutableCopy
cStringUsingEncoding:
lastPathComponent
array
copy
setValue:forKey:
stringWithFormat:
dictionaryWithCapacity:
fileURLWithPath:
bytes
coordinate
mediaItemWithProperties:
weekOfYear
replaceOccurrencesOfString:withString:options:range:
allHeaderFields
appleMusicID
init
initWithGeohash:
initWithLocation:
geohash
location
.cxx_destruct
_geohash
_location
T@"NSString",R,C,N,V_geohash
T@"CLLocation",R,N,V_location
artistClusterDefaultLocationURL
trackClusterDefaultLocationURL
databaseURLForName:
initWithDataStore:
mediaItemsSimilarToValue:forKey:completionHandler:
mediaItemsForPropertyCollection:completionHandler:
resultsFromQueryBlock:completionHandler:
affinityGroupsFromQueryCollection:filteredBySeedCollection:completionHandler:
filterQueryCollection:byItemsWithinCluster:
affinityGroupsAtCohesionLevel:forQuery:queryCollection:filteredBy:
query
dataStore
_query
_dataStore
T@"SHClusterStatementRunner",R,N,V_query
T@"SHClusterSQLiteDataStore",R,N,V_dataStore
loadDataForRequest:completionHandler:
initWithDataFetcher:dataStore:
loadFromURL:type:storefront:reuseExistingData:completion:
dataFetcher
_dataFetcher
T@"<SHDataFetcher>",R,N,V_dataFetcher
affinityGroupsForLocation:atDate:completionHandler:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
performRequest:completionHandler:
downloadResourceFromRequest:completionHandler:
initWithHTTPResponse:requestData:downloadFileURL:
requestData
downloadFileURL
httpResponse
_requestData
_downloadFileURL
_httpResponse
T@"NSData",R,N,V_requestData
T@"NSURL",R,N,V_downloadFileURL
T@"NSHTTPURLResponse",R,N,V_httpResponse
fetchClusterURL:forCurrentStorefront:cachedUniqueHash:completionHandler:
clusterDataAtURL:forLocation:date:completionHandler:
collectionWithArray:representingProperty:
initWithArray:representingProperty:
collection
property
_collection
_property
T@"NSSet",R,N,V_collection
T@"NSString",R,N,V_property
uniqueHash
storefront
creationDate
clusterType
loadStatus
setLoadStatus:
isDataValid
setIsDataValid:
dataURL
setDataURL:
metadata
setMetadata:
_isDataValid
_loadStatus
_dataURL
_metadata
T@"NSURL",&,N,V_dataURL
Tq,N,V_loadStatus
TB,N,V_isDataValid
T@"SHClusterMetadata",&,N,V_metadata
T@"NSString",R,C,N
T@"NSDate",R,N
Tq,R,N
checksumForFile:withError:
checksumDataForFile:withError:
loadDataFromFileInfo:withMetadata:toDestinationURL:error:
createTables:error:
insert:low:medium:high:
insert:appleMusicID:cohesionID:
cachesDirectory
buildTemporaryClusterURLWithError:
copyDatabaseFromURL:toDatabaseDestinationURL:error:
clearTemporaryDatabaseFileAtURL:withError:
importerForFile:
clusterForType:
artistsCluster
tracksCluster
initWithType:sourceURL:destinationURL:
controllerForType:withCompletionHandler:
filterMediaItemQueryCollection:bySeedCollection:completionHandler:
mediaItemsWithHighCohesionToValue:forProperty:completionHandler:
mediaItemsMatchingValuesInCollection:completionHandler:
statusWithCompletionHandler:
sourceURL
destinationURL
type
_sourceURL
_destinationURL
_type
T@"NSURL",R,N,V_sourceURL
T@"NSURL",R,N,V_destinationURL
Tq,R,N,V_type
createDatabase:atURL:error:
openDatabase:atURL:error:
defenseAgainstBadDatabase:
closeDatabase:error:
runNoResultSQL:onDatabase:error:
runSQL:onDatabase:replacingTokens:withObjects:rowHandler:error:
database:hasPopulatedTable:error:
queryStringForCount:
startTransactionOnDatabase:
commitTransactionOnDatabase:
dataStoreTypeFromString:
stringFromStoreType:
dateFormatter
metadataFromDatabaseAtLocation:error:
writeMetadata:toDatabaseAtLocation:error:
initWithType:storefront:uniqueHash:creationDate:
_uniqueHash
_storefront
_creationDate
_clusterType
T@"NSString",R,C,N,V_uniqueHash
T@"NSString",R,C,N,V_storefront
T@"NSDate",R,N,V_creationDate
Tq,R,N,V_clusterType
parsedJSONObject:error:
readDataLineByLineFromURL:error:callback:
importClusters:toParentCluster:startIndex:
index
setIndex:
callback
setCallback:
_index
_callback
TQ,N,V_index
T@?,C,N,V_callback
affinityGroupsFromData:atLocation:onDate:completionHandler:
initWithRegions:affinityGroup:
geohashKeyedRegions
regionsForGeohash:
regions
affinityGroup
_geohashKeyedRegions
_regions
_affinityGroup
T@"NSDictionary",R,N,V_geohashKeyedRegions
T@"NSArray",R,N,V_regions
T@"SHAffinityGroup",R,N,V_affinityGroup
fetchSharedInstanceWithCompletion:
bagContract
initWithBagContract:
tracksCachedDataMaxAge
tracksEnabled
tracksClusterEndpointForStorefront:
artistsCachedDataMaxAge
artistsEnabled
artistsClusterEndpoint
geoChartsEndpointForDate:geoHash:
maxGeoChartsGeohashLength
minGeoChartsGeohashLength
tokenizedURLForBagPathKey:
_bagContract
T@"SHBagContract",R,N,V_bagContract
Td,R,N
TB,R,N
dealloc
supportedKeys
initWithDatabaseURL:
supportedKeysForDatabase
mediaItemsSimilarToMediaItemValue:forKey:error:
mediaItemsFromPropertyCollection:error:
mediaItemsWithQuery:tokens:objects:error:
mediaItemsAtCohesionLevel:forQueryMediaIDs:filteredBySeedMediaIDs:error:
supportedKeysForDatabaseAsString
supportedKeysForDatabaseAsStringWithPrefix:
databaseURL
validDatabaseKeys
_databaseURL
_validDatabaseKeys
T^{sqlite3=},R,N,V_db
T@"NSURL",R,N,V_databaseURL
T@"NSArray",R,N,V_validDatabaseKeys
sqliteDatabaseExistsAtURL:
initWithClusterType:databaseMaxAge:forStorefront:databaseFilePathURL:
hasNotPassedExpiryDate:isForCountryCode:
isDataLoaded
dataStatus
databaseMaxAge
databaseFilePathURL
requiredStorefront
_databaseMaxAge
_databaseFilePathURL
_requiredStorefront
T@"NSString",R,N,V_requiredStorefront
T@"SHClusterStatus",R,N
Td,R,N,V_databaseMaxAge
T@"NSURL",R,N,V_databaseFilePathURL
initWithType:
initWithType:sourceURL:outputURL:
shouldDeleteExistingDatabaseAtOutputURL
URLForRequestForStorefront:withCompletion:
sourceURLWithCompletion:
clusterConfiguration:
cloudServiceController
outputURL
_cloudServiceController
_outputURL
T@"SKCloudServiceController",R,N,V_cloudServiceController
T@"NSURL",R,N,V_outputURL
initWithType:cohesionLevel:
appendMediaItem:
mediaItems
groupType
cohesionLevel
mutableMediaItems
setMutableMediaItems:
_groupType
_cohesionLevel
_mutableMediaItems
T@"NSMutableArray",&,N,V_mutableMediaItems
Tq,R,N,V_groupType
Tq,R,N,V_cohesionLevel
T@"NSArray",R,N
regionAffinityGroupsFromServerData:error:
initWithNetworkRequester:
doesRequestEtag:matchInResponse:
endpointFromDate:insights:location:
networkRequester
_networkRequester
T@"<SHNetworkRequester>",R,N,V_networkRequester
messageForCode:
errorWithCode:underlyingError:
errorWithCode:underlyingError:keyOverrides:
response:data:error:
sh_toGeohash
sh_roundCoordinateValuesToGeohashOfLength:
sh_geohashOfLength:
sh_geoHashToCoordinates:
dataFetcherForSourceURL:
initWithData:suggestedFileName:
initWithDataURL:suggestedFileName:
initWithDataURL:
compressionType
suggestedExtension
data
dataFilePathURL
suggestedFileName
setCreationDate:
setStorefront:
setUniqueHash:
mimeType
setMimeType:
_data
_dataFilePathURL
_suggestedFileName
_mimeType
T@"NSURL",R,N,V_dataFilePathURL
T@"NSData",R,N,V_data
T@"NSString",R,C,N,V_suggestedFileName
Ti,R,N
T@"NSDate",&,N,V_creationDate
T@"NSString",C,N,V_storefront
T@"NSString",C,N,V_uniqueHash
T@"NSString",C,N,V_mimeType
@24@0:8@16
@16@0:8
v16@0:8
@"NSString"
@"CLLocation"
v40@0:8@16@24@?32
v32@0:8@16@?24
v32@0:8@?16@?24
@32@0:8@16@24
@48@0:8q16@24@32@40
@"SHClusterStatementRunner"
@"SHClusterSQLiteDataStore"
v52@0:8@16q24@32B40@?44
@"<SHDataFetcher>"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@"NSURLRequest"16@?<v@?@"NSHTTPURLResponse"@"NSData"@"NSError">24
v32@0:8@"NSURLRequest"16@?<v@?@"NSHTTPURLResponse"@"NSURL"@"NSError">24
@40@0:8@16@24@32
@"NSData"
@"NSURL"
@"NSHTTPURLResponse"
v48@0:8@16@24@32@?40
v48@0:8@"NSURL"16@"NSString"24@"NSString"32@?<v@?@"SHDataFetcherFileInfo"@"NSError">40
v48@0:8@"NSURL"16@"CLLocation"24@"NSDate"32@?<v@?@"SHDataFetcherFileInfo"@"NSError">40
@"NSSet"
q16@0:8
v24@0:8q16
v20@0:8B16
v24@0:8@16
@"SHClusterMetadata"
@32@0:8@16^@24
B48@0:8@16@24@32^@40
B48@0:8@"SHDataFetcherFileInfo"16@"SHClusterMetadata"24@"NSURL"32^@40
B32@0:8^{sqlite3=}16^@24
q36@0:8^{sqlite3=}16i24i28i32
B40@0:8^{sqlite3=}16@24q32
@24@0:8^@16
B40@0:8@16@24^@32
B32@0:8@16^@24
@24@0:8q16
@40@0:8q16@24@32
v32@0:8q16@?24
v24@0:8@?16
B40@0:8^^{sqlite3}16@24^@32
B24@0:8^{sqlite3=}16
B40@0:8@16^{sqlite3=}24^@32
B64@0:8@16^{sqlite3=}24@32@40@?48^@56
B40@0:8^{sqlite3=}16@24^@32
@24@0:8Q16
v24@0:8^{sqlite3=}16
q24@0:8@16
@"NSDate"
B40@0:8@16^@24@?32
v40@0:8@16@24Q32
v24@0:8Q16
@?16@0:8
@"NSDictionary"
@"NSArray"
@"SHAffinityGroup"
d16@0:8
@"SHBagContract"
^{sqlite3=}16@0:8
@40@0:8@16@24^@32
@48@0:8@16@24@32^@40
@48@0:8q16@24@32^@40
^{sqlite3=}
@48@0:8q16d24@32@40
B32@0:8@16@24
@"SKCloudServiceController"
@32@0:8q16q24
@"NSMutableArray"
@"<SHNetworkRequester>"
@32@0:8q16@24
{CLLocationCoordinate2D=dd}24@0:8Q16
{CLLocationCoordinate2D=dd}24@0:8@16
i16@0:8
