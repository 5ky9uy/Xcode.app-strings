PROFILE_ACCOUNT_DESCRIPTION
Localizable
DASettingsDataclassConfigurationViewController.m
You need to subclass %@
DADiagnosticsEnabled
DIAG_LINK_TITLE
Diagnostic
DIAG_DUMP_RUNTIME_STATE
dataaccessd
DALogs
%Y-%m-%d-%H%M%S
Library/Logs/CrashReporter/%@/Logs-%@
Log Notes [%@]
==========================================================
==========================================================
Notes.log
DIAG_LOG_SAVED_MESSAGE
DIAG_LOG_SAVED_TITLE
v8@?0
DIAG_NOTES_TITLE
DIAG_NO_LOGS_TO_SAVE_TITLE
DIAGS_NO_LOGS_TO_SAVE_MESSAGE
DIAG_SAVING_ADDITIONAL_DATA_TITLE
DIAG_SAVING_ADDITIONAL_DATA_MESSAGE
dataaccess.log
kDADiagnosticSaveNotesDelegate
DIAGS_NOTES_PROMPT
DESCRIPTION
v16@?0@"UIAlertAction"8
ACCOUNT_UNIQUE_CONSTRAINT_FAILED_TITLE
DataAccess
CANCEL
CONTINUE
SETUP_WITHOUT_SSL_TITLE
SETUP_WITHOUT_SSL_BODY
v16@?0q8
USE_SSL
ACCOUNT_VERIFICATION_FAILED
SAVE
EDIT
NEXT
DONE
http
https://%@
EMAIL
HOST
USERNAME
PASSWORD
com.apple.mobilemail
Setting _backingAccountInfo.authenticated = YES for Account identifier %@ and username %@
Individual Settings Bundles MUST create their own da accounts
Individual Settings Bundles MUST create their own default accounts
Individual Settings Bundles should handle account validation
Individual Settings Bundles should know if they have enough values
Parsing host string "%@" led to exception %@
Couldn't parse host string "%@" into a URL. Using it directly
Requesting delete from ACAccountStore
Couldn't remove the account: %@
Requesting account save from ACAccountStore
Couldn't save the account: %@
ACAccountStore saved my account, dismissing
DASettingsDataclassConfigurationViewController
DASettingsAdditions
DADiagnosticsPSController
DADiagnosticSaveNotesDelegate
UIAlertViewDelegate
NSObject
DADiagnosticsNotesController
DADiagnosticsNotesPane
DASettingsAccountsUIController
DAValidityCheckConsumer
UIActionSheetDelegate
_disableButtons
T#,R
account
T@"DAAccount",&,N,V_daAccount
alertView:clickedButtonAtIndex:
TB,N,V_accountNeedsAdd
containsObject:
TB,N,V_confirmedUnvalidatedAccount
dealloc
TB,N,V_haveRegisteredForAccountsChanged
handleClearAllLogsForSpecifier:
TB,N,V_needsSave
lastGroupSpecifierInSpecifiers:
TB,N,V_validatedSuccessfully
otherSpecifiers
URLWithString:
propertyForKey:
_accountNeedsAdd
release
_attemptedValidation
setConfirmedUnvalidatedAccount:
_cancelButtonPressed
setOn:animated:
_confirmedUnvalidatedAccount
specifierForID:
_defaultAccountDescription
stringByAppendingPathExtension:
_didSetFullHostURL
validateAccount
_dismissSavingDataAlert
viewWillAppear:
.cxx_destruct
_simpleConfirmSheetDismissedSEL
T@"DAAccount",&,N,V_account
accountNeedsAdd
T@"NSString",R,C
bundleForClass:
TB,N,V_attemptedValidation
control
TB,N,V_didSetFullHostURL
dismiss
TB,N,V_isSettingUpNewAccount
isProxy
TB,N,V_transitioningToFinishedAccountSetup
numberWithBool:
TQ,R
preferenceValue
_account
pushController:
_accountsChanged:
removeObserver:
_beginAccountValidation
setLoggingEnabled:forSpecifier:
_confirmSaveUnvalidatedAccount
showIdenticalAccountFailureView
_daAccount
stringByAppendingPathComponent:
_deleteAccount
suspend
_dismissAndUpdateParent
viewControllers
_enableButtons
_finishSaveAccountDismissWhenDone:
_haveRegisteredForAccountsChanged
_isSettingUpNewAccount
_listenForAccountsChangedNotifications
_navTitle
_needsSave
_notesView
_okButtonPressed
_presentNotesController
_saveAccountDismissWhenDone:
_savingDataAlert
_simpleAlert
_transitioningToFinishedAccountSetup
_validatedSuccessfully
absoluteString
account:isValid:validationError:
accountBooleanPropertyWithSpecifier:
accountDescription
accountDescriptionForFirstTimeSetup
accountFromSpecifier
accountInfoControllerClass
accountIsManaged
accountOperationsHelper
accountPropertyWithSpecifier:
accountSpecifiers
accountStore
actionSheet:clickedButtonAtIndex:
actionSheet:didDismissWithButtonIndex:
actionSheet:willDismissWithButtonIndex:
actionSheetCancel:
actionWithTitle:style:handler:
addAction:
addObject:
addObjectsFromArray:
addObserver:selector:name:object:
addSubview:
addTask:
alertControllerWithTitle:message:preferredStyle:
alertView:didDismissWithButtonIndex:
alertView:willDismissWithButtonIndex:
alertViewCancel:
alertViewShouldEnableFirstOtherButton:
array
arrayWithObjects:count:
attemptedValidation
autorelease
backingAccountInfo
becomeFirstResponder
boolValue
booleanPropertyWithSpecifier:
bundleIdentifier
buttonSpecifierWithTitle:target:action:confirmationInfo:
calendarDate
cancelButtonClicked:
cancelButtonTapped:
capitalizedString
class
cleanupAccountFiles
componentsSeparatedByString:
confirmedUnvalidatedAccount
conformsToProtocol:
controller:didFinishSettingUpAccount:
copyItemAtPath:toPath:error:
count
countByEnumeratingWithState:objects:count:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
currentDevice
currentHandler
currentlyEditingCell
daAccount
daAccountWithBackingAccountInfo:
daemonAppropriateAccountClassForACAccount:
deallocating
debugDescription
defaultCenter
defaultManager
deleteAccountButtonTapped
description
descriptionWithCalendarFormat:
diagnosticSpecifiers
diagnosticsVisible
didConfirmSaveUnvalidatedAccount:
didConfirmTryWithoutSSL:
didPresentActionSheet:
didPresentAlertView:
didSetFullHostURL
dismissAnimated:
dismissViewControllerAnimated:completion:
dismissWithClickedButtonIndex:animated:
dismissesAfterInitialSetup
doneButton
doneButtonTapped:
dumpRuntimeStateSpecifiers
emailAddress
emptyGroupSpecifier
fileExistsAtPath:isDirectory:
fileSystemRepresentation
finishedAccountSetup
firstResponder
friendlyName
groupSpecifierWithName:
handleDumpRuntimeStateForSpecifier:
handleFailureInMethod:object:file:lineNumber:description:
handleSaveAllLogsForSpecifier:
handleSaveAllLogsStep2
hasAccountWithDescription:
hasPrefix:
hash
haveEnoughValues
haveRegisteredForAccountsChanged
hideProgressWithPrompt:
host
identifier
indexForIndexPath:
indexOfCurrentlyEditingCell
indexPathForCell:
init
initWithBackingAccountInfo:
initWithBarButtonSystemItem:target:action:
initWithFrame:
initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:
initWithTitle:style:target:action:
isEqual:
isEqualToString:
isFirstTimeSetup
isKindOfClass:
isLoggingEnabledForSpecifier:
isMemberOfClass:
isRunningFromMobileMailApp
isSettingUpNewAccount
isSuspended
isSuspendedEventsOnly
lastObject
lastPathComponent
leftBarButtonItem
length
linkSpecifier
loadView
localizedAccountSetupTitleString
localizedAccountTitleString
localizedConfirmSaveUnvalidatedAccountMessageString
localizedConfirmSaveUnvalidatedAccountTitleString
localizedIdenticalAccountFailureMessage
localizedStringForKey:value:table:
localizedValidationFailureTitleString
mainBundle
managingOwnerIdentifier
mcBackingProfile
mutableCopy
navigationController
navigationItem
needsSave
newDefaultAccount
objectAtIndexedSubscript:
objectForKeyedSubscript:
operationsHelper:didRemoveAccount:withSuccess:error:
operationsHelper:didSaveAccount:withSuccess:error:
pane
parentController
passwordWithExpected:
pathExtension
pathsOfAllLogFiles
pathsOfPurgableFiles
performSelector:
performSelector:withObject:
performSelector:withObject:afterDelay:
performSelector:withObject:withObject:
preferenceSpecifierNamed:target:set:get:detail:cell:edit:
presentViewController:animated:completion:
principalURL
properties
propertyValueChanged:
purgeFileAtPath:
rangeOfString:
reload
reloadAccount
reloadParentSpecifier
reloadSpecifierID:
reloadSpecifiers
removeAccount:
removeItemAtPath:error:
removeObject:
removeObserver:name:object:
removeParentSpecifier
resignFirstResponder
respondsToSelector:
retain
retainCount
rightBarButtonItem
rootController
runSimpleAlertWithTitle:message:
runSimpleAlertWithTitle:message:dismissedSelector:
saveAccount:requireVerification:
saveFileAtPath:toDirectory:withExtension:error:
saveLogsWithNotes:
saveModifiedPropertiesOnBackingAccount
saveNotesInBackground:
savedLogsDirectoryNameForSpecifier:
self
setAccount:
setAccountBooleanProperty:withSpecifier:
setAccountDescription:
setAccountNeedsAdd:
setAccountProperty:withSpecifier:
setAttemptedValidation:
setAuthenticated:
setAutoresizingMask:
setBooleanProperty:withSpecifier:
setBounces:
setCellsChecked:
setDaAccount:
setDidSetFullHostURL:
setEditable:
setEmailAddress:
setEnabled:
setFont:
setHaveRegisteredForAccountsChanged:
setHost:
setHostString:
setIgnoresInteractionEvents:
setIsSettingUpNewAccount:
setKeyboardType:
setLeftBarButtonItem:
setNeedsSave:
setNeedsSaveAndValidation:
setObject:forKeyedSubscript:
setParentController:
setPassword:
setPrincipalURL:
setPrompt:
setProperty:forKey:
setRightBarButtonItem:
setSelectedRange:
setShouldDoInitialAutodiscovery:
setShouldShowDeleteAccountButton:
setSpecifier:
setStatusBarShowsProgress:
setTaskCompletionAssertionEnabled:
setTitle:
setTransitioningToFinishedAccountSetup:
setUseSSL:
setUsername:
setValidatedSuccessfully:
setupWithDictionary:
sharedApplication
sharedInstance
shouldAutorotateToInterfaceOrientation:
shouldVerifyBeforeAccountSave
show
showAlertWithButtons:title:message:completion:
showConfirmationForDeletingAccount:completion:
showConfirmationWithButtons:title:message:destructive:completion:
showSSLFailureView
specifier
specifierAtIndex:
specifiers
stopValidationWithPrompt:showButtons:
stringWithFormat:
superclass
superview
switchSpecifierWithTitle:target:setter:getter:key:
systemFontOfSize:
table
tableView:cellForRowAtIndexPath:
taskFinished:
text
textField
topViewController
transitioningToFinishedAccountSetup
transitionsAfterInitialSetup
updateDoneButton
useSSL
userInfo
userInterfaceIdiom
username
validatedSuccessfully
validationInProgress
view
viewDidLoad
viewWillDisappear:
willPresentActionSheet:
willPresentAlertView:
window
writeToFile:atomically:encoding:error:
zone
v16@0:8
@16@0:8
v20@0:8B16
v24@0:8@16
#16@0:8
B16@0:8
v44@0:8@16@24B32@36
@"DAAccount"
@56@0:8@16@24:32:40@48
@48@0:8@16@24:32@40
v24@0:8@"NSString"16
B24@0:8@16
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16q24
v32@0:8@"UIAlertView"16q24
v24@0:8@"UIAlertView"16
B24@0:8@"UIAlertView"16
v40@0:8@16@24:32
v32@0:8@16@24
@24@0:8@16
v28@0:8B16@20
B48@0:8@16@24@32^@40
@"UIAlertView"
B24@0:8q16
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"UITextView"
v36@0:8@16B24@28
v36@0:8@"DAAccount"16B24@"NSError"28
v32@0:8@"UIActionSheet"16q24
v24@0:8@"UIActionSheet"16
@32@0:8@16@24
v48@0:8@16@24@32@?40
i16@0:8
PROFILE_ACCOUNT_DESCRIPTION
Localizable
DASettingsDataclassConfigurationViewController.m
You need to subclass %@
DADiagnosticsEnabled
DIAG_LINK_TITLE
Diagnostic
DIAG_DUMP_RUNTIME_STATE
dataaccessd
DALogs
%Y-%m-%d-%H%M%S
Library/Logs/CrashReporter/%@/Logs-%@
Log Notes [%@]
==========================================================
==========================================================
Notes.log
DIAG_LOG_SAVED_MESSAGE
DIAG_LOG_SAVED_TITLE
v8@?0
DIAG_NOTES_TITLE
DIAG_NO_LOGS_TO_SAVE_TITLE
DIAGS_NO_LOGS_TO_SAVE_MESSAGE
DIAG_SAVING_ADDITIONAL_DATA_TITLE
DIAG_SAVING_ADDITIONAL_DATA_MESSAGE
dataaccess.log
kDADiagnosticSaveNotesDelegate
DIAGS_NOTES_PROMPT
DESCRIPTION
v16@?0@"UIAlertAction"8
ACCOUNT_UNIQUE_CONSTRAINT_FAILED_TITLE
DataAccess
CANCEL
CONTINUE
SETUP_WITHOUT_SSL_TITLE
SETUP_WITHOUT_SSL_BODY
v16@?0q8
USE_SSL
ACCOUNT_VERIFICATION_FAILED
SAVE
EDIT
NEXT
DONE
http
https://%@
EMAIL
HOST
USERNAME
PASSWORD
com.apple.mobilemail
Setting _backingAccountInfo.authenticated = YES for Account identifier %@ and username %@
Individual Settings Bundles MUST create their own da accounts
Individual Settings Bundles MUST create their own default accounts
Individual Settings Bundles should handle account validation
Individual Settings Bundles should know if they have enough values
Parsing host string "%@" led to exception %@
Couldn't parse host string "%@" into a URL. Using it directly
Requesting delete from ACAccountStore
Couldn't remove the account: %@
Requesting account save from ACAccountStore
Couldn't save the account: %@
ACAccountStore saved my account, dismissing
DASettingsDataclassConfigurationViewController
DASettingsAdditions
DADiagnosticsPSController
DADiagnosticSaveNotesDelegate
UIAlertViewDelegate
NSObject
DADiagnosticsNotesController
DADiagnosticsNotesPane
DASettingsAccountsUIController
DAValidityCheckConsumer
UIActionSheetDelegate
_disableButtons
T#,R
account
T@"DAAccount",&,N,V_daAccount
alertView:clickedButtonAtIndex:
TB,N,V_accountNeedsAdd
containsObject:
TB,N,V_confirmedUnvalidatedAccount
dealloc
TB,N,V_haveRegisteredForAccountsChanged
handleClearAllLogsForSpecifier:
TB,N,V_needsSave
lastGroupSpecifierInSpecifiers:
TB,N,V_validatedSuccessfully
otherSpecifiers
URLWithString:
propertyForKey:
_accountNeedsAdd
release
_attemptedValidation
setConfirmedUnvalidatedAccount:
_cancelButtonPressed
setOn:animated:
_confirmedUnvalidatedAccount
specifierForID:
_defaultAccountDescription
stringByAppendingPathExtension:
_didSetFullHostURL
validateAccount
_dismissSavingDataAlert
viewWillAppear:
.cxx_destruct
_simpleConfirmSheetDismissedSEL
T@"DAAccount",&,N,V_account
accountNeedsAdd
T@"NSString",R,C
bundleForClass:
TB,N,V_attemptedValidation
control
TB,N,V_didSetFullHostURL
dismiss
TB,N,V_isSettingUpNewAccount
isProxy
TB,N,V_transitioningToFinishedAccountSetup
numberWithBool:
TQ,R
preferenceValue
_account
pushController:
_accountsChanged:
removeObserver:
_beginAccountValidation
setLoggingEnabled:forSpecifier:
_confirmSaveUnvalidatedAccount
showIdenticalAccountFailureView
_daAccount
stringByAppendingPathComponent:
_deleteAccount
suspend
_dismissAndUpdateParent
viewControllers
_enableButtons
_finishSaveAccountDismissWhenDone:
_haveRegisteredForAccountsChanged
_isSettingUpNewAccount
_listenForAccountsChangedNotifications
_navTitle
_needsSave
_notesView
_okButtonPressed
_presentNotesController
_saveAccountDismissWhenDone:
_savingDataAlert
_simpleAlert
_transitioningToFinishedAccountSetup
_validatedSuccessfully
absoluteString
account:isValid:validationError:
accountBooleanPropertyWithSpecifier:
accountDescription
accountDescriptionForFirstTimeSetup
accountFromSpecifier
accountInfoControllerClass
accountIsManaged
accountOperationsHelper
accountPropertyWithSpecifier:
accountSpecifiers
accountStore
actionSheet:clickedButtonAtIndex:
actionSheet:didDismissWithButtonIndex:
actionSheet:willDismissWithButtonIndex:
actionSheetCancel:
actionWithTitle:style:handler:
addAction:
addObject:
addObjectsFromArray:
addObserver:selector:name:object:
addSubview:
addTask:
alertControllerWithTitle:message:preferredStyle:
alertView:didDismissWithButtonIndex:
alertView:willDismissWithButtonIndex:
alertViewCancel:
alertViewShouldEnableFirstOtherButton:
array
arrayWithObjects:count:
attemptedValidation
autorelease
backingAccountInfo
becomeFirstResponder
boolValue
booleanPropertyWithSpecifier:
bundleIdentifier
buttonSpecifierWithTitle:target:action:confirmationInfo:
calendarDate
cancelButtonClicked:
cancelButtonTapped:
capitalizedString
class
cleanupAccountFiles
componentsSeparatedByString:
confirmedUnvalidatedAccount
conformsToProtocol:
controller:didFinishSettingUpAccount:
copyItemAtPath:toPath:error:
count
countByEnumeratingWithState:objects:count:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
currentDevice
currentHandler
currentlyEditingCell
daAccount
daAccountWithBackingAccountInfo:
daemonAppropriateAccountClassForACAccount:
deallocating
debugDescription
defaultCenter
defaultManager
deleteAccountButtonTapped
description
descriptionWithCalendarFormat:
diagnosticSpecifiers
diagnosticsVisible
didConfirmSaveUnvalidatedAccount:
didConfirmTryWithoutSSL:
didPresentActionSheet:
didPresentAlertView:
didSetFullHostURL
dismissAnimated:
dismissViewControllerAnimated:completion:
dismissWithClickedButtonIndex:animated:
dismissesAfterInitialSetup
doneButton
doneButtonTapped:
dumpRuntimeStateSpecifiers
emailAddress
emptyGroupSpecifier
fileExistsAtPath:isDirectory:
fileSystemRepresentation
finishedAccountSetup
firstResponder
friendlyName
groupSpecifierWithName:
handleDumpRuntimeStateForSpecifier:
handleFailureInMethod:object:file:lineNumber:description:
handleSaveAllLogsForSpecifier:
handleSaveAllLogsStep2
hasAccountWithDescription:
hasPrefix:
hash
haveEnoughValues
haveRegisteredForAccountsChanged
hideProgressWithPrompt:
host
identifier
indexForIndexPath:
indexOfCurrentlyEditingCell
indexPathForCell:
init
initWithBackingAccountInfo:
initWithBarButtonSystemItem:target:action:
initWithFrame:
initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:
initWithTitle:style:target:action:
isEqual:
isEqualToString:
isFirstTimeSetup
isKindOfClass:
isLoggingEnabledForSpecifier:
isMemberOfClass:
isRunningFromMobileMailApp
isSettingUpNewAccount
isSuspended
isSuspendedEventsOnly
lastObject
lastPathComponent
leftBarButtonItem
length
linkSpecifier
loadView
localizedAccountSetupTitleString
localizedAccountTitleString
localizedConfirmSaveUnvalidatedAccountMessageString
localizedConfirmSaveUnvalidatedAccountTitleString
localizedIdenticalAccountFailureMessage
localizedStringForKey:value:table:
localizedValidationFailureTitleString
mainBundle
managingOwnerIdentifier
mcBackingProfile
mutableCopy
navigationController
navigationItem
needsSave
newDefaultAccount
objectAtIndexedSubscript:
objectForKeyedSubscript:
operationsHelper:didRemoveAccount:withSuccess:error:
operationsHelper:didSaveAccount:withSuccess:error:
pane
parentController
passwordWithExpected:
pathExtension
pathsOfAllLogFiles
pathsOfPurgableFiles
performSelector:
performSelector:withObject:
performSelector:withObject:afterDelay:
performSelector:withObject:withObject:
preferenceSpecifierNamed:target:set:get:detail:cell:edit:
presentViewController:animated:completion:
principalURL
properties
propertyValueChanged:
purgeFileAtPath:
rangeOfString:
reload
reloadAccount
reloadParentSpecifier
reloadSpecifierID:
reloadSpecifiers
removeAccount:
removeItemAtPath:error:
removeObject:
removeObserver:name:object:
removeParentSpecifier
resignFirstResponder
respondsToSelector:
retain
retainCount
rightBarButtonItem
rootController
runSimpleAlertWithTitle:message:
runSimpleAlertWithTitle:message:dismissedSelector:
saveAccount:requireVerification:
saveFileAtPath:toDirectory:withExtension:error:
saveLogsWithNotes:
saveModifiedPropertiesOnBackingAccount
saveNotesInBackground:
savedLogsDirectoryNameForSpecifier:
self
setAccount:
setAccountBooleanProperty:withSpecifier:
setAccountDescription:
setAccountNeedsAdd:
setAccountProperty:withSpecifier:
setAttemptedValidation:
setAuthenticated:
setAutoresizingMask:
setBooleanProperty:withSpecifier:
setBounces:
setCellsChecked:
setDaAccount:
setDidSetFullHostURL:
setEditable:
setEmailAddress:
setEnabled:
setFont:
setHaveRegisteredForAccountsChanged:
setHost:
setHostString:
setIgnoresInteractionEvents:
setIsSettingUpNewAccount:
setKeyboardType:
setLeftBarButtonItem:
setNeedsSave:
setNeedsSaveAndValidation:
setObject:forKeyedSubscript:
setParentController:
setPassword:
setPrincipalURL:
setPrompt:
setProperty:forKey:
setRightBarButtonItem:
setSelectedRange:
setShouldDoInitialAutodiscovery:
setShouldShowDeleteAccountButton:
setSpecifier:
setStatusBarShowsProgress:
setTaskCompletionAssertionEnabled:
setTitle:
setTransitioningToFinishedAccountSetup:
setUseSSL:
setUsername:
setValidatedSuccessfully:
setupWithDictionary:
sharedApplication
sharedInstance
shouldAutorotateToInterfaceOrientation:
shouldVerifyBeforeAccountSave
show
showAlertWithButtons:title:message:completion:
showConfirmationForDeletingAccount:completion:
showConfirmationWithButtons:title:message:destructive:completion:
showSSLFailureView
specifier
specifierAtIndex:
specifiers
stopValidationWithPrompt:showButtons:
stringWithFormat:
superclass
superview
switchSpecifierWithTitle:target:setter:getter:key:
systemFontOfSize:
table
tableView:cellForRowAtIndexPath:
taskFinished:
text
textField
topViewController
transitioningToFinishedAccountSetup
transitionsAfterInitialSetup
updateDoneButton
useSSL
userInfo
userInterfaceIdiom
username
validatedSuccessfully
validationInProgress
view
viewDidLoad
viewWillDisappear:
willPresentActionSheet:
willPresentAlertView:
window
writeToFile:atomically:encoding:error:
zone
v16@0:8
@16@0:8
v20@0:8B16
v24@0:8@16
#16@0:8
B16@0:8
v44@0:8@16@24B32@36
@"DAAccount"
@56@0:8@16@24:32:40@48
@48@0:8@16@24:32@40
v24@0:8@"NSString"16
B24@0:8@16
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16q24
v32@0:8@"UIAlertView"16q24
v24@0:8@"UIAlertView"16
B24@0:8@"UIAlertView"16
v40@0:8@16@24:32
v32@0:8@16@24
@24@0:8@16
v28@0:8B16@20
B48@0:8@16@24@32^@40
@"UIAlertView"
B24@0:8q16
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"UITextView"
v36@0:8@16B24@28
v36@0:8@"DAAccount"16B24@"NSError"28
v32@0:8@"UIActionSheet"16q24
v24@0:8@"UIActionSheet"16
@32@0:8@16@24
v48@0:8@16@24@32@?40
i16@0:8
