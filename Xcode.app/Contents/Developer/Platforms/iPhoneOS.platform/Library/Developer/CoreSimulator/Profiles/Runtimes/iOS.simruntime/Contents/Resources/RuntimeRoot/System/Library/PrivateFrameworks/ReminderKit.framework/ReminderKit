@(#)PROGRAM:ReminderKit  PROJECT:ReminderKit-815
u"A-C
?333333
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA>AAA?456789:;<=AAAAAAA
AAAAAA
 !"#$%&'()*+,-./0123AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
@(#)PROGRAM:CRFramework  PROJECT:ReminderKit-
N6google8protobuf11MessageLiteE
N6google8protobuf2io17ArrayOutputStreamE
N6google8protobuf2io18StringOutputStreamE
N15replica_manager22VectorTimestampElementE
N15replica_manager12ReplicaEntryE
N15replica_manager14ReplicaManagerE
N6google8protobuf2io20ZeroCopyOutputStreamE
N18versioned_document8DocumentE
N18versioned_document7VersionE
N8topotext6StringE
N8topotext34VectorTimestamp_Clock_ReplicaClockE
N8topotext21VectorTimestamp_ClockE
N8topotext15VectorTimestampE
N8topotext6CharIDE
N8topotext9SubstringE
N8topotext15Selection_RangeE
N8topotext9SelectionE
N8topotext12AttributeRunE
N8topotext4FontE
N8topotext14ParagraphStyleE
N8topotext11HashtagInfoE
N8topotext14AttachmentInfoE
N8topotext10AttachmentE
N8topotext8LocationE
N8topotext5MediaE
N8topotext12PreviewImageE
N8topotext4TodoE
N8topotext5ColorE
N6google8protobuf14FatalExceptionE
N6google8protobuf7ClosureE
N6google8protobuf8internal16FunctionClosure0E
N4CRDT8ObjectIDE
N4CRDT9TimestampE
N4CRDT14RegisterLatestE
N4CRDT23VectorTimestamp_ElementE
N4CRDT15VectorTimestampE
N4CRDT18Dictionary_ElementE
N4CRDT10DictionaryE
N4CRDT13Index_ElementE
N4CRDT5IndexE
N4CRDT13OneOf_ElementE
N4CRDT5OneOfE
N4CRDT27StringArray_ArrayAttachmentE
N4CRDT11StringArrayE
N4CRDT5ArrayE
N4CRDT10OrderedSetE
N4CRDT30Document_CustomObject_MapEntryE
N4CRDT21Document_CustomObjectE
N4CRDT18Document_DocObjectE
N4CRDT8DocumentE
Reminders
DEFAULT_TASK_CALENDAR_NAME
local
Invalid day number
dayOfTheWeek
weekNumber
%ld%@
%@ <0x%x> { %@ }
com.apple.reminderkit
default
type
ascending
REMCDAuxiliaryReminderChangeDeleteInfo
REMCDAuxiliaryReminderChangeMoveInfo
%llu.%llu
[%@]
<%@: %p>{UUID: %d, clock: %@, state: %@}
In Use
Available
{UUID: %d, clock: %@}
v8@?0
com.apple.dt.xctest.tool
com.apple.TestReminderKit.xctrunner
com.apple.iOSTestReminders.xctrunner
com.apple.macOSTestReminders.xctrunner
com.apple.watchOSTestReminders.xctrunner
Invalid crdtID
Invalid replicaUUIDIndex
Invalid crdtIDIndex
B32@?0@"REMReplicaEntry"8Q16^B24
v16@?0@"REMReplicaEntry"8
<%@: %p> {
currentVersion: %llu
maxLastSavedVersion: %llu
Replica UUIDs: %@
Replica Entries: %@
%lu: %@
v32@?0@"NSUUID"8Q16^B24
%@: %@
v32@?0@"NSString"8@"NSMutableArray"16^B24
version: %llu
Replica UUIDs: %@
Replica Entries: %@
Cannot deserialize replica manager from input data
Cannot serialize replica manager to data
Attempting to serialize a REMReplicaManager that is marked non-persistable
managerData
version
<%@: %p>{version: %llu; %ld bytes}
/Library/Caches/com.apple.xbs/Sources/ReminderKit_Sim/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h
CHECK failed: (index) >= (0): 
CHECK failed: (index) < (size()): 
<%@: %p>{crdtID: %@}
ImportOptionConsiderDTENDForDueDate
/RID=
%@/RID=%llu
New in %@
This list is shared
Shared with %@
Shared with %@ & %u other(s)
Shared by %@
Invited by %@
declined
Invitation to share a reminder list with %@.
%1$@ %2$@ your shared reminder list.
joined
Local
%@ and %lu other items
Due Today
Untitled
New Reminder
%u more reminders
Complete
Ignore
Later
Mark as Completed
You have overdue reminders
Remind Me Tomorrow
Remind Me in an Hour
Remind Me in the Morning
Remind Me Next Weekend
Remind Me This Afternoon
Remind Me Tonight
%@ assigned you a reminder
%@ assigned you %lu reminders
View
Decline
Decline All
%u more lists with assignments
New Assignment
New List
Unknown
CUSTOM_SMART_LIST_MORNING_START_HOUR
CUSTOM_SMART_LIST_MORNING_END_HOUR
CUSTOM_SMART_LIST_AFTERNOON_START_HOUR
CUSTOM_SMART_LIST_AFTERNOON_END_HOUR
CUSTOM_SMART_LIST_EVENING_START_HOUR
CUSTOM_SMART_LIST_EVENING_END_HOUR
CUSTOM_SMART_LIST_NIGHT_START_HOUR
CUSTOM_SMART_LIST_NIGHT_END_HOUR
TIME_OF_DAY_CREATION_MORNING
TIME_OF_DAY_CREATION_NOON
TIME_OF_DAY_CREATION_AFTERNOON
TIME_OF_DAY_CREATION_EVENING
TIME_OF_DAY_CREATION_NIGHT
TIME_OF_DAY_CREATION_TONIGHT
%@ added %lu reminders to %@
%lu reminders were added to %@
New reminders added
%@ completed %lu reminders in %@
%lu reminders were completed in %@
New reminders completed
changeTracking
editor
crdt
alarmEngine
timelineEngine
housekeepingingActivityScheduler
extraneousAlarmCleaner
inlineTagAutoConvertEngine
templates
accountPlugin
utility
com.apple.reminderkit.store
suggestedAttributes
cloudkit
cloudkit.collaboration
migration
dataAccess
userAction
siriKit
applicationShortcut
notification
search
account
analytics
scripting
com.apple.reminderkit.signpost
database
sync
container
stagedLightweightCoreDataMigration
read
write
OVERSIZED
com.apple.ReminderKit.REMChangeErrorDomain
Unexpected type of input token.
Error occurred internally executing history request.
Unsupported type of history result.
Failed to delete history.
Change token expired -- history is incomplete/truncated.
Failed to coalesce changes due to internal errors.
Could not map to an account object ID from the transaction.
Could not look up a store for the account identifier in the tracking state.
Persistence layer failure trying to read or write tracking state.
Could not encode or decode tracking state due to corrupted data.
Could not encode or decode auxiliary change info.
Could not find account store
%@ {%@}
objectID
accountID
listID
parentReminderID
daCalendarItemUniqueIdentifier
externalIdentifier
externalModificationTag
daSyncToken
daPushKey
minimumSupportedVersion
titleDocumentData
titleDocument
completed
completionDate
priority
flagged
startDateComponents
dueDateComponents
timeZone
allDay
creationDate
lastModifiedDate
recurrenceRules
notesDocumentData
notesDocument
attachments
alarms
assignments
hashtags
contactHandles
icsDisplayOrder
icsUrl
importedICSData
subtaskIDsToUndelete
hashtagIDsToUndelete
userActivity
siriFoundInAppsData
siriFoundInAppsUserConfirmation
lastBannerPresentationDate
%@.%@
storage
'%s' is unexpectedly nil
<%@: %p %@>
self.storage
accountCapabilities
B24@?0@"REMAttachment"8@16
B32@?0@"REMAttachment"8Q16^B24
B24@?0@"REMAttachment"8@"NSDictionary"16
v24@?0@"REMAssignment"8^B16
<%@: %p reminderCount: %@, hasDisplayDate: %@, hasHashtags: %@, hasLocationTriggersOrVehicleEventTriggers: %@, hasImageAttachments: %@>
reminderCount
hasDisplayDate
hasHashtags
hasLocationTriggersOrVehicleEventTriggers
hasImageAttachments
<%@: %p objectIdentifier: %@>
com.apple.reminderkit.storeMustRefresh
com.apple.reminderkit.storeChanged
com.apple.reminderkit.shouldNotifyOfInteractionWithPeople
com.apple.reminderkit.didCompleteInitializeAllAccounts
REMStoreDidChangeNotification
AppDelegate
DebugMenu
SignificantTimeChanged
v12@?0i8
createIsolatedStoreContainer
v16@?0@"NSError"8
v24@?0@"REMStoreContainerToken"8@"NSError"16
destroyIsolatedStoreContainerWithToken
<%@: %p[%ld] storeContainerToken: %@>
<%@ inProgressSaveRequestContainer: %@>
nukeDatabase
@16@?0@"_REMInProgressSaveRequestsContainer"8
fetchReplicaManagerForAccountID:
v24@?0@"REMReplicaManagerSerializedData"8@"NSError"16
fetchReplicaManagersForAccountID
v24@?0@"NSDictionary"8@"NSError"16
saveRequest
v16@?0@"<REMXPCStorePerformer>"8
fetchRequest
v24@?0@"REMFetchResult"8@"NSError"16
inv_%@
v24@?0@"REMStoreInvocationResult"8@"NSError"16
swInv_%@
v24@?0@"REMStoreSwiftInvocationResult"8@"NSError"16
v24@?0@"REMList"8^B16
reminderIDsMergeableOrdering
reminderIDsOrderingHints
fetchShareForList
v24@?0@"CKShare"8@"NSError"16
createShareForList
updateShare
stopShare
acceptShare
v28@?0B8@"NSString"12@"NSError"20
distributedEvaluation
DistributedEvaluation Export produced no result and no error
v24@?0@"NSData"8@"NSError"16
queryAnchoredBubbleCloudOverrides
v20@?0B8@"NSError"12
respondToCalDAVSharedList
Given invitation list isn't a CalDAV list.
Given invitation list isn't a sharing invitation.
Given invitation list has no external identifier.
Could not find the external identifier from the given invitation list.
Implementation error to use unknown CalDAV share response.
___dummy-client-identifier
___dummy-account-identifier
notifyOfInteractionWithPeople
MCIsManagedAccountWithObjectID:
v24@?0@"NSNumber"8@"NSError"16
triggerSyncForDataAccessAccountsWithAccountIDs
v16@?0@"<REMXPCSyncInterfacePerformer>"8
updateAccountsAndSync
v24@?0B8B12@"NSError"16
updateAccountWithAccountID
removeOrphanedAccountsWithCompletion
requestToMergeLocalDataIntoSyncData
requestToDeleteSyncData
requestToDeleteLocalData
addCKShareObserverIfNeededForAccountID
requestToUpdateClientConnections
repairPhantomObjectsWithObjectIDs
v24@?0@"NSArray"8@"NSError"16
test_setupForManualHashtagLabelRefreshing
test_refreshHashtagLabelsImmediately
test_handleIncompleteTemplateOperationQueueItemsImmediately
test_immediatelyCreateOrUpdatePublicLinkOfTemplate
v24@?0@"REMTemplatePublicLink"8@"NSError"16
test_immediatelyRevokePublicLinkOfTemplate
v24@?0@"REMObjectID"8@"NSError"16
test_revertImageAttachmentsToUnDeduped
<%@: %p identifier: %@>
identifier
fetchResultTokenToDiffAgainst
resultData
resultStorages
latestFetchResultToken
Attempting to instantiate an abstract class. Please use a subclass of REMAlarmTrigger.
Abstract method called -[%@ %@]
REMCDAlarmTrigger
REMCDAlarmTimeIntervalTrigger
timeInterval
%@ %f
REMCDAlarmDateTrigger
%@ %@
dateComponents
REMCDAlarmLocationTrigger
structuredLocation
proximity
%@ {structuredLocation = %@; proximity = %ld;}
REMCDAlarmVehicleTrigger
event
%@ {event = %@}
REMCAlarmContactTrigger
contactRepresentation
%@ {contact: %@}
REMAlarmVehicleTriggerEventNone
REMAlarmVehicleTriggerEventConnected
REMAlarmVehicleTriggerEventDisconnected
Unknown REMAlarmVehicleTriggerEvent %ld
v32@?0@"<REMCRMergeableDataType>"8Q16^B24
<%@: %p document: %@>
REMCRMergeableOrderedSet
Failed to merge CR documents.
replicaIDSource
document
<%@: %p type:%ld, %@>
<%@: %p[%ld.%ld] type:%ld name:%@ %@>
name
markedForRemoval
pinnedListsManualOrdering
templatesManualOrdering
listIDsToUndelete
smartListIDsToUndelete
listIDsMergeableOrdering
listIDsMergeableOrderingData
resolutionTokenMapData
resolutionTokenMap
listsDADisplayOrderChanged
personID
personIDSalt
inactive
didChooseToMigrate
didChooseToMigrateLocally
didFinishMigration
persistenceCloudSchemaVersion
daConstraintsDescriptionPath
daAllowsCalendarAddDeleteModify
daSupportsSharedCalendars
daWasMigrated
effectiveMinimumSupportedVersion
debugSyncDisabled
REMAccount missing required fields
listIDsMergeableOrderingData is nil when trying to deserialize from account storage
REMCDAccount
Event will occur every hour.
Event will occur every %@ hours.
Event will occur every day.
Event will occur every %@ days.
Event will occur every week.
Event will occur every %@ weeks.
Event will occur every weekday.
Event will occur every week on %@.
Event will occur every %@ weeks on %@.
Event will occur every month on the %@ %@.
Event will occur every %@ months on the %@ %@.
Event will occur every month on the %@-XX01.
Event will occur every month on the %@.
Event will occur every %@ months on the %@-XX01.
Event will occur every %@ months on the %@.
Event will occur every month on %@.
Event will occur every %@ months on %@.
Event will occur every month.
Event will occur every %@ months.
, %@
Recurrence rule last item format.  The last part of a list: X, Y and Z. Here %@ is 'Z'
 and %@
Event will occur every %@ years.
Event will occur every year.
Event will occur every year on the %@ %@ of %@.
Event will occur every %@ years on the %@ %@ of %@.
Event will occur every year on the %@ %@.
Event will occur every %@ years on the %@ %@.
Event will occur every year on the %@ of %@.
Event will occur every %@ years on the %@ of %@.
Event will occur every year on the %@.
Event will occur every %@ years on the %@.
Event will occur every year on every %@ in %@.
Event will occur every %@ years on every %@ in %@.
Event will occur every year on every %@.
Event will occur every %@ years on every %@.
Event will occur every year in %@.
Event will occur every %@ years in %@.
-[NSDateFormatter weekdaySymbols] invalid, reverting to US dates
Sunday
Monday
Tuesday
Wednesday
Thursday
Friday
Saturday
-[NSDateFormatter monthSymbols] invalid, reverting to US dates
January
February
March
April
June
July
August
September
October
November
December
the last part of a list: X, Y and Z. Here %@ is 'Z'
, %@-XX01
last day
1st-XX01
2nd-XX01
3rd-XX01
4th-XX01
5th-XX01
6th-XX01
7th-XX01
8th-XX01
9th-XX01
10th-XX01
10th
11th-XX01
11th
12th-XX01
12th
13th-XX01
13th
14th-XX01
14th
15th-XX01
15th
16th-XX01
16th
17th-XX01
17th
18th-XX01
18th
19th-XX01
19th
20th-XX01
20th
21st-XX01
21st
22nd-XX01
22nd
23rd-XX01
23rd
24th-XX01
24th
25th-XX01
25th
26th-XX01
26th
27th-XX01
27th
28th-XX01
28th
29th-XX01
29th
30th-XX01
30th
31st-XX01
31st
last
1st-XX02
2nd-XX02
3rd-XX02
4th-XX02
5th-XX02
6th-XX02
7th-XX02
8th-XX02
9th-XX02
10th-XX02
11th-XX02
12th-XX02
13th-XX02
14th-XX02
15th-XX02
16th-XX02
17th-XX02
18th-XX02
19th-XX02
20th-XX02
21st-XX02
22nd-XX02
23rd-XX02
24th-XX02
25th-XX02
26th-XX02
27th-XX02
28th-XX02
29th-XX02
30th-XX02
31st-XX02
32nd-XX02
32nd
33rd-XX02
33rd
34th-XX02
34th
35th-XX02
35th
36th-XX02
36th
37th-XX02
37th
38th-XX02
38th
39th-XX02
39th
40th-XX02
40th
41st-XX02
41st
42nd-XX02
42nd
43rd-XX02
43rd
44th-XX02
44th
45th-XX02
45th
46th-XX02
46th
47th-XX02
47th
48th-XX02
48th
49th-XX02
49th
50th-XX02
50th
51st-XX02
51st
52nd-XX02
52nd
53rd-XX02
53rd
 or %@
, %@-XX02
day-XX02
weekday
weekend day
, and %@
Monthly
Custom Repeat
Every %u hours
Hourly
Every %u days
Daily
SINGULAR_WEEKLY_RECURRENCE
Weekly
Every %u weeks
Weekdays
Weekends
Every %u weeks on %@
Every %u months on the last day
Every month on the last day
Every %u months on the first day
Every month on the first day
Every %u months
Every %u months, each %@
Every month, each %@
Every %u months that have %u days
Every month that has %u days
Every %u months on the last weekday
Every month on the last weekday
Every %u months on the first weekday
Every month on the first weekday
Every %u months on the last weekend day
Every month on the last weekend day
Every %u months on the first weekend day
Every month on the first weekend day
Every %u months on the %@
Every month on the %@
Every %u years in %@
Every year in %@
Every %u years on the last day %@
Every year on the last day %@
Every %u years on the first day %@
Every year on the first day %@
Every %u years on the last weekday %@
Every year on the last weekday %@
Every %u years on the first weekday %@
Every year on the first weekday %@
Every %u years on the last weekend day %@
Every year on the last weekend day %@
Every %u years on the first weekend day %@
Every year on the first weekend day %@
Every %u years on the %@ %@
Every year on the %@ %@
Every %u years
Yearly
first
second
third
fourth
fifth
Custom by-day item format
of January%@
of February%@
of March%@
of April%@
of May%@
of June%@
of July%@
of August%@
of September%@
of October%@
of November%@
of December%@
Never
Biweekly
LOCALIZED_CUSTOM_REPEAT_TYPE_DESCRIPTION
Custom
Every 3 Months
Every 6 Months
predicateDescriptor
sortDescriptors
options
<%@: %p predicate: %@, sortDescriptors: %@>
Calendar must be nil or Gregorian
%@_%ld_%ld_%ld_%ld_%ld_%ld_%ld_%ld
__floating
lastConsumedChangeToken
lastConsumedDate
com.apple.reminders
group.com.apple.reminders
com.apple.remindd
com.apple.remindtool
com.apple.aps.remindd
com.apple.reminders.ReminderIndex
com.apple.remindd.userInteractive
remindd
com.apple.ReminderKitUI.ReminderCreationViewService
com.apple.reminders.ics
DEFAULT_LIST
v40@?0@8{_NSRange=QQ}16^B32
v40@?0@"NSDictionary"8{_NSRange=QQ}16^B32
%@/%@
crdtID
<%@: %p> (account=%@, crdtId=%@)
Remindtool(CloudKitDeleteAll)
Remindtool(CloudKitRestart)
Remindtool(CloudKitSync)
UpdateAccounts
<No protocol supplied>
REMCDAlarm
trigger
acknowledgedDate
alarmUID
originalAlarmUID
 (uid: %@)
 (original-uid: %@)
%@ %@ %@%@
startDate
dueDate
alarmStorage
list
parentReminder
metadata
parentSavedReminderIdentifier
template
titleAsString
primaryLocaleInferredFromLastUsedKeyboard
isCompleted
notesAsString
displayDate
<%@: %p objectID: %@, attachments.count: %ld, alarms.count: %ld, assignments.count: %ld, hashtags.count: %ld>
startDate: %@ tz: %@
dueDate: %@ tz: %@
displayDate: %@ tz: %@
%@ tz: %@
alarm[%ld]: %@
/?&:$+,;=@
x-apple-eventkit-alert-x-apple-reminder://%@
REMCDReminder
isUniversal
trackedAccountCapabilities
-[REMAccountChangeItem addSmartListChangeItem:]
-[REMAccountChangeItem insertSmartListChangeItem:beforeSmartListChangeItem:]
-[REMAccountChangeItem insertSmartListChangeItem:beforeSmartListChangeItem:] (sibling)
-[REMAccountChangeItem insertSmartListChangeItem:afterSmartListChangeItem:]
-[REMAccountChangeItem insertSmartListChangeItem:afterSmartListChangeItem:] (sibling)
-[REMAccountChangeItem addMergeableOrderingNode:]
-[REMAccountChangeItem insertMergeableOrderingNode:beforeMergeableOrderingNode:]
-[REMAccountChangeItem insertMergeableOrderingNode:beforeMergeableOrderingNode:] (sibling)
-[REMAccountChangeItem insertMergeableOrderingNode:afterMergeableOrderingNode:]
-[REMAccountChangeItem insertMergeableOrderingNode:afterMergeableOrderingNode:] (sibling)
v32@?0@"NSString"8Q16^B24
v16@?0@"REMMutableCRMergeableOrderedSet"8
mergeableOrderingNode (%@) has incorrect saveRequest (%@). Expected %@
incompleteReminderCounts
scheduledCount
objectIDs
parentListID
subtaskCounts
dueDateCounts
count
accountIdentifier
activityDate
activityType
authorUserRecordIDString
ckParentCloudObjectEntityName
ckParentCloudObjectIdentifier
ckIdentifier
sharedEntityName
uuidForChangeTracking
<%@: %p accountIdentifier: %@, activityDate: %@, activityType: %@, authorUserRecordIDString: %@, ckParentCloudObjectEntityName: %@, ckParentCloudObjectIdentifier: %@, ckIdentifier: %@, sharedEntityName: %@, uuidForChangeTracking: %@
complete
titleMayHaveDirtyHashtag
notesMayHaveDirtyHashtag
cascadeHashtagLabelApproval
unknown
ILL-DEFINED
<%@: %p date: %@, timeZone: %@, allDay: %ld>
date
isAllDay
com.apple.reminders.smartlist.today
com.apple.reminders.smartlist.flagged
com.apple.reminders.smartlist.scheduled
com.apple.reminders.smartlist.all
com.apple.reminders.smartlist.assigned
com.apple.reminders.smartlist.siriFoundInApps
com.apple.reminders.smartlist.custom
com.apple.reminders.smartlist.tagged
com.apple.reminders.smartlist.completed
self.account
currentChangeTokenForAllAccounts
v16@?0@"REMChangeToken"8
v16@?0@"<REMXPCChangeTrackingPerformer>"8
currentChangeTokenForAccountTypes
types=%@
currentChangeToken
accountIdentifier=%@
earliestChangeToken
getTrackingState
v24@?0@"REMChangeTrackingState"8@"NSError"16
saveTrackingState
fetchHistoryAfterToken
v24@?0@"REMChangeSet"8@"NSError"16
fetchHistoryAfterDate
deleteHistoryBeforeToken
deleteHistoryBeforeDate
persistenceStoreID
v16@?0@"NSString"8
fetchAuxiliaryChangeInfo
clientName
 - {clientName: %@, accountIdentifier: %@};
com.apple.reminders.fdb
parentAccountID
configuration
color
badgeEmblem
showingLargeAttachments
sortingStyle
unsavedManualOrdering
publicLink
mostRecentPublicLinkUpdateRequestDate
isPersisted
canonicalName
firstOccurrenceCreationDate
recencyDate
<%@: %p name: %@, canonicalName: %@, firstOccurrenceCreationDate: %@, recencyDate: %@, uuidForChangeTracking: %@>
uuidString
hostURL
<%@: %p objectID: %@, owner: %@, uuid: %@, hostURL: %@, extID: %@>
REMCDCalDAVNotification
reminderID
<%@: %p objectID: %@, uti: %@>
REMCDAttachment
REMCDFileAttachment
fileSize
fileURL
isTemporaryFileURL
REMCDImageAttachment
width
height
REMCDURLAttachment
<%@: %p objectID: %@>
<%@: %p objectID: %@, url: %@>
state
isObserver
timeElapsed
listsMigrated
remindersMigrated
<%@ %p (
state: %@, 
isObserver: %@, 
timeElapsed: %@, 
listsMigrated: %@, 
remindersMigrated: %@, 
log: %@)>
daIsEventOnlyContainer
owningListIdentifier
displayName
address
owningReminderIdentifier
reminderIdentifier
entityName
uuid
changeID
changedObjectID
changeType
tombstone
updatedProperties
remObjectIdentifier
shareeOwningListIdentifier
shareeDisplayName
shareeAddress
assignmentOwningReminderIdentifier
hashtagName
hashtagReminderIdentifier
<REMNSPersistentHistoryChange - changeID(%lld) changeType(%@) mocID(%@) remID(%@)>
REMChangeType
REMChangeTypeInsert
REMChangeTypeUpdate
REMChangeTypeDelete
mailto:
tel:
persistentHistoryTokens
<%@: %p persistentHistoryTokens: %@> 
REMChangeSet<%p>: {raw-txn-count=%lu, chg-ids-from=%lld, chg-ids-to=%lld}; {filtered-txn-count=%lu, cnsld-inserts=%lu, cnsld-updates=%lu, #cnsld-deletes=%lu}; {error=%@}
q24@?0@"REMChangeObject"8@"REMChangeObject"16
B16@?0@"REMChangeObject"8
v24@?0@"NSArray"8q16
error
transactions
supportedVersion=(V:%lld,EV:%lld,U:%@)
bookmarks1
bookmarks2
celebration1
celebration2
concept1
concept2
concept3
education1
education2
education3
education4
education5
finance1
finance2
finance3
fitness
food
health1
health2
lifestyle1
lifestyle2
location1
location2
location3
media1
media2
media3
media4
media5
nature1
nature2
people1
people2
people3
pet1
pet2
pet3
shopping1
shopping2
shopping3
shopping4
sport1
sport2
sport3
sport4
sport5
sport6
symbol1
symbol2
symbol3
symbol4
symbol5
symbol6
symbol7
transport1
transport2
transport3
transport4
vacation
weather1
weather2
weather3
weather4
weather5
wine
work1
work2
work3
work4
work5
endDate is nil
endDate
occurrenceCount
%@ %p { UNTIL=%@ } 
%@ %p { COUNT=%lu }
com.apple.remindd.dataaccess.REMSaveRequest.author
com.apple.remindd.dataaccess.accountSetPersonID.author
com.apple.remindd.dataaccess
com.apple.CRDT.NSString
preWarmModels
suggestedAttributesPerformer-%@
uncachedSuggestedAttributesPerfomer produced no result and no error
v24@?0@"<REMXPCSuggestedAttributesPerformer>"8@"NSError"16
RemindersCount
includeUnsupported
includingSubtasks
includeConcealedObjects
parentReminderIDs
includeIncomplete
includeCompleted
isUnsupported
externalIdentifiers
listObjectID
daCalendarItemUniqueIdentifiers
accountStorages
listStorages
reminderStorages
allowConcealedObjects
<%@: %p shouldIncludeHashtags: %@, shouldIncludeAlarmTriggersBasedOnDateOrTimeInterval: %@, shouldIncludeAlarmTriggersBasedOnLocationOrVehicle: %@, shouldIncludeContactsHandleData: %@>
shouldIncludeHashtags
shouldIncludeAlarmTriggersBasedOnDateOrTimeInterval
shouldIncludeAlarmTriggersBasedOnLocationOrVehicle
smartListType
createIfNeeded
accountObjectID
groupObjectID
smartListStorages
parentListStorages
markedForDeletion
effectiveMinimumSupportedAppVersion
REMDAChangeTrackingHelper: Cannot get last consumed token when trying to peekHasChangesSinceLastConsumed
The given model class is not a known trackable-fetchable type for this API, you shouldn't call this with {modelClass: %@}.
The given model class is not a known trackable type for this API, you shouldn't call this with {modelClass: %@}.
v16@?0@"<REMDAChangedIdentifierResult>"8
v16@?0@"REMObjectID"8
v24@?0@"REMChangeObject"8q16
Mixed change types is not supported.
resolutionTokenMap_v2_JSON
resolutionTokenMap_v3_JSONData
The given model class does not support fetching, shouldn't enter this function call {%@}.
The given model class does not support concealed objects, shouldn't enter this function call with includeConcealedObjects=YES {%@}.
@"<_REMDAChangeTrackableModel>"36@?0@"REMObjectID"8B16@"REMStore"20^@28
@"NSDictionary"32@?0@"NSArray"8@"REMStore"16^@24
@"<REMDAChangedIdentifierResult>"16@?0@"REMChangeTombstone"8
@"<REMDAChangedIdentifierResult>"16@?0@"<_REMDAChangeTrackableModel>"8
<%@: %p objectID: %@, owningListIdentifier: %@>
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: ASSERT failure: Should not attempt to check properties affecting isConcealed for REMSharee.
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: ASSERT failure: Should not attempt to fetch by object ID for REMSharee.
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: ASSERT failure: Should not attempt to fetch by object IDs for REMSharee.
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: ASSERT failure: Should not attempt to call +rem_DA_deletedKeyFromConcealedModelObjectBlock for REMSharee.
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: ASSERT failure: Should not attempt to check properties affecting isConcealed for REMCalDAVNotification.
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: ASSERT failure: Should not attempt to fetch by object ID for REMCalDAVNotification.
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: ASSERT failure: Should not attempt to fetch by object IDs for REMCalDAVNotification.
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: ASSERT failure: Should not attempt to call +rem_DA_deletedKeyFromConcealedModelObjectBlock for REMCalDAVNotification.
<%@: %p objectID: %@, owningReminderIdentifier: %@>
assignee
<%@: %p objectID: %@, name: %@, reminderIdentifier: %@>
v24@?0@"REMHashtag"8^B16
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: ASSERT failure: Should not attempt to check properties affecting isConcealed for REMSharedToMeReminderPlaceholder.
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: ASSERT failure: Should not attempt to fetch by object ID for REMSharedToMeReminderPlaceholder.
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: ASSERT failure: Should not attempt to fetch by object IDs for REMSharedToMeReminderPlaceholder.
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: ASSERT failure: Should not attempt to call +rem_DA_deletedKeyFromConcealedModelObjectBlock for REMSharedToMeReminderPlaceholder.
listIDs
REMErrorObjectIDEntityNameKey
REMErrorObjectIDUUIDKey
REMErrorRetryAfterKey
Mismatched objectID type {objectID: %@, expected: %@}
Unexpected Error
Missing entitlement: %@
Missing entitlement: %@ {requestedAccessLevel: %@, currentAccesslevel: %@}
Operation is throttled {remainingTime: %.4f}
Operation is babysat {operationName: %@}
No such object error {objectID: %@}
No such object error {externalIdentifier: %@}
No such object error {daCalendarItemUniqueIdentifier: %@}
No such smart list error {smartListType: %@}
No active CloudKit account is currently logged in or enabled
Persistent store not found for some of the changed objects {accountIdentifiers: %@}
Moving object across is unsupported {objectID: %@}
Moving between accounts is unsupported {fromAccountID: %@, toAccountID: %@: objectID: %@}
List should not have nil account {listID: %@}
Moving between lists is unsupported in this account {fromListID: %@, toListID: %@, accountID: %@}
Nested subtasks is unsupported {parentReminderID: %@, reminderID: %@}
Subtask has different list from its parent reminder {parentReminderID: %@, reminderID: %@}
Unable to undelete hashtag from another reminder {hashtagID: %@, reminderID: %@}
Action is unavailable to non-CloudKit account {accountID: %@}
Removing an account at the same time inserting it is unsupported {accountID: %@}
Removing an account at the same time setting it as active is unsupported {accountID: %@}
Object { id: %@, zoneOwner: %@} and its parent { id: %@, zoneOwner: %@} with different zones are unsupported
Unhandled constraint conflict {identifier: %@, constraint: %@}
Unexpected nil property {class: %@, property: %@}
Unexpected nil property {remObjectID: %@, property: %@}
NSUnderlyingException
exception.name: %@, reason: %@
assigneeID
originatorID
status
assignedDate
_debug_cdAssigneeLinked
_debug_cdOriginatorLinked
<%@: %p objectID: %@, reminderID: %@, status: %@, date: %@, originatorID: %@, assigneeID: %@, originatorLinked: %@, assigneeLinked: %@>
REMCDAssignment
C6613346-F378-45AB-8DBD-57BE9AAFB009
counter
modificationTime
replicaID
<counter=%ld modificationTime=%lf replicaID=%@>
DisableAssertAlert
Internal Reminders Bug
File Radar
Stop Asking
Cancel
tap-to-radar
ComponentName
ComponentVersion
ComponentID
964249
AutoDiagnostics
phone
Classification
Serious Bug
Reproducibility
Not Applicable
Title
Description
@"REMAccount"16@?0@"REMSaveRequest"8
@"REMList"16@?0@"REMSaveRequest"8
@"REMReminder"16@?0@"REMSaveRequest"8
@16@?0@"REMSaveRequest"8
com.apple.remindd.eventKitMigration.begin
com.apple.remindd.eventKitMigration.error
stage
errorDomain
errorCode
@"NSMutableDictionary"8@?0
com.apple.remindd.eventKitMigration.end
success
duration
@"NSDictionary"8@?0
REMDatabaseMigrationContextStageUnknown
REMDatabaseMigrationContextStageSetup
REMDatabaseMigrationContextStageAccountCreation
REMDatabaseMigrationContextStageListCreation
REMDatabaseMigrationContextStageReminderCreation
REMDatabaseMigrationContextStageSave
REMDatabaseMigrationContextStageArchiveEventKitData
fetchedAccountStorages
fetchedListStorages
fetchedReminderStorages
requestedObjectIDs
fetchResultToken
[a:%ld,l:%ld,r:%ld,ids:%ld]
count: %ld
objectIDs.count: %ld
metadata: %@
fetchResultToken: %@
<%@: %p type: %@%@%@>
5d18e4d0-8a71-406c-899d-6ff8e3e94c37
3B242529-8F5D-47A1-9351-444101218C30
iCloud
iCloud Non-primary
CalDAV
Exchange
Undefined
CloudKit_Primary
CloudKit_Full
CalDav
LocalInternal
reminderTitleCategoryEmbeddingFilename
includeListNames
includeListNameFuzzedEmbeddings
includeReminderTitles
includeReminderTitleFuzzedEmbeddings
includeSystemLanguage
includeSystemTimezone
includeAccountType
includeListGroupInfo
includeReminderTitleSaltedHash
includeDates
includeRecurrenceInfo
includeLocationInfo
includeAttachmentUTIs
includeRemindMeWhenMessagingInfo
includeAlarmDates
includeSubtaskInfo
includeUserActivityInfo
includeIsFlagged
includePriority
relevantWordTagsIncludeOtherWord
dateResolutionInSeconds
includeReminderTitleCategoryFilteredStopWords
includeReminderTitleCategoryUniversalGrammar
includeReminderTitleCategorySentence2Vec
reminderTitleCategoryDistanceTolerance
reminderTitleCategoryEmbeddingURL
<%@:%p 
%@:%ld 
%@:%.3f 
%@:%@ 
Did not find url {filename: %@, key: %@, urls: %@}
Unexpected type for fileame {filename: %@, key: %@}
sourceListID
shouldSaveCompleted
TPItemNumber
<%@: %p serviceName:%@>
eventKitSyncStub
v24@?0@8@"NSError"16
store
debug
indexing
%@ {locationUID = %@}
%@ {title: %@; latlong: (%f, %f); radius: %f; locationUID = %@}
title
latitude
longitude
radius
locationUID
routing
referenceFrameString
contactLabel
mapKitHandle
backingStore
<%@: %p backingStore: %@>
orange
yellow
green
lightBlue
blue
indigo
purple
pink
rose
brown
gray
custom
#[\dA-F]{6}([\dA-F]{2})?
0123456789ABCDEF
Q16@?0@"NSString"8
#%02X%02X%02X
#%02X%02X%02X%02X
alpha
colorRGBSpace
daSymbolicColorName
daHexString
ckSymbolicColorName
REMColor:rgba(%lf,%lf,%lf,%lf)
#FF3B30
#FF9500
#FFCC00
#4CD964
#5AC8FA
#007AFF
#5856D6
#E357A8
#FF2D55
#D9A69F
#9D8563
#5B626A
showRemindersAsOverdue
databaseMigrationTestModeEnabled
isDatabaseMigrated
databaseMigrationTimedOut
lastDatabaseMigrationSystemBuildVersion
cloudKitMigrationMaxNumInvocations
cloudKitMigrationMaxNumFailures
cloudKitMigrationDelayAfterError
cloudKitMigrationObserverPollingInterval
cloudKitMigrationSimulatedError
cloudKitResultsLimitPerSyncOperation
cloudKitMigrationDisableCleanUp
preferredDefaultListID
preferredDefaultListObjectIDUrl
acAccountIdentifierToMergeLocalDataIntoSyncData
acAccountIdentifiersToMigrateInactivatedCalDavData
cloudKitMergeLocalLastDateMaxRetryReached
cloudKitMergeLocalLastBuildVersionMaxRetryReached
cloudKitSchemaCatchUpSyncLastSuccessDate
cloudKitSchemaCatchUpSyncLastSuccessBuildVersion
cloudKitSchemaCatchUpSyncSchedulingState
cloudKitSchemaCatchUpSyncLastScheduledDate
debugForceSupportCloudKitSchemaCatchUpSyncBackgroundScheduling
cloudKitMaxNumAlarmIDsInReminderCKRecordDebugOverride
spotlightIndexVersion
nextScheduledAlarmDate
lastPresentAlarmDate
lastSuggestedAttributesAutoTrainingToken
suggestedAttributesHarvestingOverrides
muteNotificationForSharedList
embedding
neighborsToConsider
suggestedAttributesTrainingOverrides
corebehavior
suggestedAttributesAccepted
lastSyncPoll
lastCloudConfigurationDownload
lastExtraneousAlarmsProcessedDate
useExtraneousAlarmBackOffThrottleInterval
staledFileAttachmentCleanupLastExecutionDate
staledFileAttachmentCleanupContainerDeemedClean
userInteractionsData
simulateMAIDAccount
enableWelcomeScreen
forceShowWelcomeScreen
forceShowWhatsNewScreen
enableInAppDebugMenu
enableHashingUserIdentifiablesWithPersonIDSalt
todayNotificationFireTime
disableAlarmEngineDataSourcePrefetching
enableAssignmentNotifications
accountsListCategorizedCountsCache
hashtagLabelsInCustomSmartListFilterCache
debugSimulateSqliteFull
tipKitCachedCountOfUncompletedReminders
tipKitCachedCountOfLists
tipKitCachedCountOfListsWithCustomBadge
tipKitCachedCountOfCustomSmartLists
tipKitCachedCountOfHashtags
lastViewedNotificationsPermissionWarmingSheetDate
lastDismissedNotificationsPermissionInlineRequestDate
hasViewedContactsAccessAlertForLocation
hasViewedContactsAccessAlertForMessaging
hasViewedContactsAccessAlertForCalDAVSharing
didShowReminderDeletePrivacyWarning
remCurrentRuntimeVersionDebuggingOverride
forceEligibleForAutoCloudKitMigration
forceBasicAAAccountEligibleForCloudKitReminders
syncActivityNotificationEngine_accountSignInTime
sharedListActivityNotifications_demoMode
shouldIncludeRemindersDueTodayInBadgeCount
_temp
REMCDSavedReminder
REMCDSavedAttachment
remindersIsUsingCloudKit
remindersDidFinishMigrationToCloudKit
v32@?0@"ACAccount"8Q16^B24
https://p01-caldav.icloud.com:443
com.apple.reminders.apple-account-utilities
%@.description
%@.aa_accountClass
%@.aa_personID
%@.aa_altDSID
%@.didChooseToMigrate
%@.didFinishMigration
%@.isManagedAppleID
%@.isEnabledForDataclass
%@.eligibleForAutoCloudKitMigration
%@.isEligibleForCloudKitReminders
timestamp
changes
transactionNumber
storeID
bundleID
processID
contextName
author
token
<REMNSPersistentHistoryTransaction - txnNo(%lld) timestamp(%@) storeID(%@) contextName(%@) author(%@) chgCount(%ld) token(%@)>
orderedIdentifiers
<%@: %p url: %@, configuration: %@, creationDate: %@, lastModifiedDate: %@, expirationDate: %@, canBeUpdated: %@>
expirationDate
canBeUpdated
<%@: %p objectID: %@, reminderID: %@, type: %@, name: %@, creation date: %@>
REMCDHashtag
REMCDSharedToMeReminderPlaceholder
com.apple.CRDT.REMObjectID
Cannot merge REMObjectID with different value.
recurrenceEnd
frequency
interval
firstDayOfTheWeek
daysOfTheWeek
daysOfTheMonth
daysOfTheYear
weeksOfTheYear
monthsOfTheYear
setPositions
<%@: %p objectID: %@, reminderID: %@, accountID: %@>
<%@: %p objectID: %@, reminderID: %@, accountID: %@> %@
RRULE:%@
FREQ=%@
;INTERVAL=%lu
;UNTIL=%@
;COUNT=%lu
;BYMONTH=%@
;BYMONTHDAY=%@
;BYYEARDAY=%@
;BYWEEKNO=%@
;BYDAY=%@
;BYSETPOS=%@
;WKST=%@
HOURLY
DAILY
WEEKLY
MONTHLY
YEARLY
yyyyMMdd
yyyyMMdd'T'HHmmss
yyyyMMdd'T'HHmmss'Z'
REMCDRecurrenceRule
modifiedDate
listType
topLevelElementIDs
secondaryLevelElementIDsByTopLevelElementID
uncommitedElementsAccountID
REMCDManualSortHint_v1
REM_WRAP(%@)
InternalBuild
<%@: %p phones.count=%ld emails.count=%ld>
phones
emails
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/
DA_statusReports
DataAccessEnabled
Enable DataAccess
Disable DataAccess
BabysitterEnabled
Enable Babysitter
Disable Babysitter
DADREMChangeTrackingBehaviors
com.apple.dataaccess.BehaviorOptionsChanged
BehaviorOptions
com.apple.DataAccess.BehaviorOptions
DA_crashDaemon
parentAccount
parentList
manualOrdering
filterData
pinnedDate
mostRecentTargetTemplateIdentifier
<%@: %p objectID: %@, smartListType: %@, sortingStyle: %@>
REMCDSmartList
<%@: %p acounts.count: %ld, lists.count: %ld, smartLists.count: %ld, templates.count: %ld, reminders.count: %ld>
accountStorage
listChangeItem
Assertion Failure. Missing REMAccountChangeItem associated with REMListChangeItem. {listChangeItem: %@}
accountGroupContextChangeItem
accountChangeItem (%@) has incorrect saveRequest (%@). Expected %@
accountChangeItem
listSublistContextChangeItem (%@) has incorrect saveRequest (%@). Expected %@
listStorage
reminderChangeItem
reminderChangeItem.storage
Assertion Failure. Missing REMListChangeItem associated with REMReminderChangeItem. {reminderChangeItem: %@}
Cannot add CSL because the given accountChangeItem does not support it {accountID: %@}
smartList
smartListStorage
remTemplate
templateStorage
listChangeItem (%@) has incorrect saveRequest (%@). Expected %@
listChangeItem is a group and adding reminder to group is not currently supported {listChangeItem: %@}
parentReminderChangeItem (%@) has incorrect saveRequest (%@). Expected %@
reminder
com.apple.eventkitsyncd
com.apple.reminderkit.REMSaveRequest
v48@?0@"NSArray"8@"NSArray"16@"NSArray"24@"NSArray"32@"NSArray"40
accountChangeItem.objectID
newObjectID
listChangeItem.objectID
smartListChangeItem
smartListChangeItem.objectID
templateChangeItem
templateChangeItem.objectID
reminderChangeItem.objectID
original
List has incorrect save request {original: %@, saveRequest: %@, expectedSaveRequest: %@}
parentReminderSubtaskContextChangeItem
Parent reminder has incorrect save request {original: %@, saveRequest: %@, expectedSaveRequest: %@}
Original reminder has incorrect save request {original: %@, saveRequest: %@, expectedSaveRequest: %@}
Cannot add CSL to sublist context because the account does not support it {accountID: %@}
x-apple-reminderkit
<%@>
%@://%@/%@
%@~%@
<%@>%@~%@
REMFetchRequestTypeStoragesAndParents
REMFetchRequestTypeStoragesOnly
REMFetchRequestTypeCount
REMFetchRequestTypeObjectIDs
REMFetchRequestTypeMetadata
Unknown REMFetchRequestType %ld
fetchExecutor
fetchLimit
<%@: %p type: %@, executor:%@%@>
isGroup
reminderIDsToUndelete
childListIDsToUndelete
childSmartListIDsToUndelete
reminderIDsMergeableOrderingData
remindersICSDisplayOrderChanged
daExternalIdentificationTag
daDisplayOrder
daIsReadOnly
daIsImmutable
daIsNotificationsCollection
lastUserAccessDate
templateID
sharedOwnerName
sharedOwnerAddress
sharingStatus
sharees
sharedOwnerID
calDAVNotifications
isPlaceholder
currentUserShareParticipantID
daBulkRequests
<%@: %p %@ %@ [%ld.%ld (%ld)]>
reminderIDsMergeableOrderingData is nil when trying to deserialize from list storage
REMCDList
startingDueDate
endingDueDate
descriptors
text
textMatching
objectIDs: %@
listID: %@
parentReminderID: %@
startingDueDate: %@
endingDueDate: %@
completed: %d
descriptors: %@
textMatching: %ld text: %@
<%@: %p type: %ld %@>
dueBefore
dueAfter
hasLocation
location
X-Apple-Radius
X-APPLE-RADIUS
X-Apple-ABUID
X-APPLE-ABUID
X-APPLE-REFERENCEFRAME
405e3bdb-9308-4ad5-85b5-d3c5943d17c5
3C8C2A71-84BF-4C87-8EFD-BB4827650D15
B24@?0@8@"NSDictionary"16
hash
reminderIDs
v16@?0@"REMCRReminderIDList"8
Should not call +cdEntityName on this test-only class.
com.apple.remindd.RDStoreController.defaultValuesMigration
com.apple.remindd.RDStoreController.JSONPropertiesMigration
com.apple.remindd.RDStoreController.CKParentReminderIdentifierMigration
com.apple.remindd.RDStoreController.OrphanedListMigration
com.apple.remindd.RDStoreController.DiacriticsInsensitiveHashtagLabelsMigration
com.apple.remindd.RDStoreController.AutoConvertSharedInlineTagsMigration
RDStoreControllerAccountIdentifierHashtagLabelsMigrationAuthor
RDStoreControllerUnsetCKDirtyFlagsInNonCKAccountsMigrationAuthor
com.apple.remindd.RDStoreController.IsPinnedByCurrentUserMigrationAuthor
com.apple.remindd.RDStoreController.MostRecentTargetTemplateIdentifierByCurrentUserMigrationAuthor
com.apple.RDStoreController.createAccountStore
com.apple.RDStoreController.deleteAccountStore
com.apple.remindd.RDDisplayDateUpdater
com.apple.remindd.notificationConsumer.lastBannerPresentationDate
com.apple.remindd.todayEngine.notification.lastBannerPresentationDate
com.apple.remindd.ICCloudContext
com.apple.remindd.ICCloudContext.internal
com.apple.remindd.ICCloudContext.serverChangeToken
com.apple.remindd.RDHashtagLabelUpdater.author
com.apple.remindd.RDStalePinnedListsEventHandler.author
com.apple.remindd.RDTemplateOperation.author
com.apple.remindd.RDSharedInlineTagAutoConvertEngine.author
com.apple.remindd.RDSyncActivityNotificationEngine.author
com.apple.remindd.RDStagedLightweightMigrationAuthor.author
com.apple.remindd.historyTracking
CalDAVMobileAccountDelegatePrincipalPath
REMCRMergeableStringDocument
Failed to merge documents.
America/Los_Angeles
America/New_York
Reminders/
Container_v1/
IsolatedContainers/
MLModels/
TemporaryMLModels/
xctest
remindtool
REMPathsCreateApplicationDocumentsURL
LocationBundles
RemindersAlerts.bundle
REMPathsCreatePersistentdataURL
ppt.sentinel
Action is only applicable to CSL {action: %@, smartList: %@}
REMSmartListChangeItem tries to remove itself from an untracked or unknown account change item {parentAccountID: %@, accountChangeItem.objectID: %@}
Unknown error in fetchActiveCloudKitAccountObjectIDsWithOption yielding nil fetchResult.accountIDs
accountIDs
purpose
fetchREMObjectIDOnly
%@%@
(fetchREMObjectIDOnly)
fetchOption
%@(fetchOption=%@)
valueStorage
<%@: %p valueStorage: %@>
Emoji
{"%@" : "%@"}
NSData+Random: SecRandomCopyBytes error: %d
v24@?0@"NSMutableOrderedSet"8@"NSMutableDictionary"16
v16@?0@"NSMutableOrderedSet"8
-[REMListSublistContextChangeItem addSmartListChangeItem:]
-[REMListSublistContextChangeItem insertSmartListChangeItem:beforeSmartListChangeItem:]
-[REMListSublistContextChangeItem insertSmartListChangeItem:beforeSmartListChangeItem:] (sibling)
-[REMListSublistContextChangeItem insertSmartListChangeItem:afterSmartListChangeItem:]
-[REMListSublistContextChangeItem insertSmartListChangeItem:afterSmartListChangeItem:] (sibling)
-[REMListSublistContextChangeItem addMergeableOrderingNode:]
-[REMListSublistContextChangeItem insertMergeableOrderingNode:beforeMergeableOrderingNode:]
-[REMListSublistContextChangeItem insertMergeableOrderingNode:beforeMergeableOrderingNode:] (sibling)
templateStorages
<%@: %p objectID: %@
REMCDTemplate
Reminder
geo:%f,%f
none
high
medium
Unexpected REMReminderChangeTrackingProperty key.
ListsCount
ListsWithCustomBadgeCount
UncompletedRemindersCount
CompletedRemindersCountInList
CompletedRemindersCount
CustomSmartListsCount
HashtagsCount
%@ (type=%@, bytes=%@, details=%@)
{type: %@, title: %@, URL: %@, userInfo: %@}
%@ (type=%@, bytes=%@)
universalLink
NSUserActivity
SiriIntent
Unknown REMUserActivityType %ld
firstName
middleName
lastName
namePrefix
nameSuffix
nickname
accessLevel
<%@: %p objectID: %@, listID: %@, status: %@, access: %@>
<%@: %p objectID: %@, listID: %@, status: %@, access: %@, address: %@>
REMCDSharee
0D5A5BA9-302D-4518-AE2D-58DDA388E850
-REMCDOBJECT_DELETED-
%@%@%@
debug_useInMemoryPreferredDefaultListStorage
includeMarkedForDeletionOnly
templateObjectID
aa_isRemindersAutoMigratableToCK
manual
displayDate_asc
displayDate_desc
priority_asc
priority_desc
creationDate_asc
creationDate_desc
title_asc
title_desc
_TTREMHashtag
Invalid merge, classes must be equal for merge.
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
<%@ %p %@ %@>
v40@?0@"<CRDataType>"8@"<CRDataType>"16^v24@"CRCoder"32
@"<CRDataType>"32@?0r^v8^@16@"CRCoder"24
v16@?0@"CRCoder"8
<%@ %p>
<%@ %p (
  %@ %@,
  %@ : %@ %@,
<%@ %p>(
  %@:%lu.%lu
<%@ %p>(
1.2.11
v24@?0^v8^B16
v56@?0{TopoIDRange={TopoID=@I}I}8{TopoIDRange={TopoID=@I}I}32
v32@?0^v8{_NSRange=QQ}16
TopoText
TTMergeableString graph has loop.
TTMergeableString graph has two characters with the same id.
mergeA-%p.data
mergeB-%p.data
DebugDumpMergeData
Reached substring that is not in our graph.
<%@ %p = '%@'>
subgraph cluster_%ld%p_%ld {
  rankdir="LR";
<Fragment>
  label="%@_%ld (%ld)    '%@'"
  color=lightgrey;
  N%ld%p [label="Start\n%@,%d"];
  N%ld%p [label="End\n%@,%d"];
  N%ld%p [label="%@ %@,%d-%u (%@,%d)"];
  N%ld%p -> N%ld%p;
com.apple.coreCRDT
TTArray
TTArray: no object at index %lu
TTArrayAttachment
TTArray cannot merge with object of type %@.
v16@?0@"TTArray"8
Q16@?0@"NSUUID"8
<TTMergeableStringSelection %p 
 %@:%d
-%@:%d
set_affinity
topotext.pb.h
::topotext::Selection_Affinity_IsValid(value)
GetEmptyStringAlreadyInited
generated_message_util.h
empty_string_ != NULL
CHECK failed: (&other) != (this): 
CHECK failed: (start) >= (0): 
CHECK failed: (num) >= (0): 
CHECK failed: (start + num) <= (size()): 
CHECK failed: (current_size_) > (0): 
protobufArchiveKey
set_alignment
::topotext::ParagraphStyle_Alignment_IsValid(value)
set_writingdirection
::topotext::AttributeRun_WritingDirection_IsValid(value)
<TTMergeableStringUndoGroup %p %@>
v16@?0@"CRArray"8
v32@?0@"<CRDataType><CREquatable>"8Q16^B24
CRArray cannot merge with object of type %@.
Cannot merge NSNumber with different value.
integerValue
doubleValue
No topological sort of completion handlers.
v40@?0@8@16@"CRVectorTimestamp"24^B32
Invalid CRRegisterLatest merge, classes must be equal for merge.
values
%@, 
%ld.
Natural
 needsParagraphCleanup
<%@: %p style=%lu alignment=%lu indent=%ld %@%@%@%@>
 needsListCleanup
<TTMergeableStringUndoAttributeCommand %p 
%@:%d-%u => %@ 
TTFont
TTHints
TTUnderline
TTStrikethrough
TTColor
TTStyle
TPMaxApproxItemNumber
TPInsertDate
TTTimestamp
DDFoundExistingLink
_UITextInputDictationResultMetadata
NSSuperScript
v32@?0@8@16^B24
CRPropertyRegisterLatest
CRPropertySet
CRPropertyOneOf
identity
Invalid CRObject merge, classes must be equal for merge.
v32@?0@"NSString"8@"<CRDataType>"16^B24
<%@ %p %@>
v@:@
Cannot merge NSUUID with different value.
%02X%02X
UUIDIndex
<%@: %p %@ %0.1f%@%@>
 bold
 italic
v16@?0@"<CRDataType>"8
v16@?0@8
<%@ %p version=%@ root=%@>
self
Subclass must implement.
Cannot tombstone a non-value / non-identified object.
NSAttachment
NSLink
NSWritingDirection
NSTextAlternatives
clock
subclock
<%@ %p %ld:%@>
%ld:%@
Cannot calculate deltas for vector timestamps.
%@:%lu 
com.apple.CRDT.NSNumber
com.apple.CRDT.NSUUID
com.apple.CRDT.CRRegisterMultiValueLeast
com.apple.CRDT.CRRegisterMultiValue
TTMergeableUndoStringDidAddUndoNotification
CRTombstoneOrderedSet
CRTombstoneOrderedSet: inserting element at invalid index
v16@?0@"CRTombstoneOrderedSet"8
v24@?0Q8^B16
CRTombstoneOrderedSet: moving element to an invalid index
v24@?0@"NSUUID"8^B16
CRTombstoneOrderedSet cannot merge with object of type %@.
<TTMergeableStringUndoEditCommand %p Delete:
%@:%d-%u, 
  Insert:
%@:%d-%u=>'%@', 
(cannot determine missing fields for lite message)
/Library/Caches/com.apple.xbs/Sources/ReminderKit_Sim/CRProtobuf/protobuf-lite/google/protobuf/message_lite.cc
CHECK failed: !coded_out.HadError(): 
CHECK failed: IsInitialized(): 
serialize
parse
Can't 
 message of type "
" because it is missing required fields: 
CHECK failed: (byte_size_before_serialization) == (byte_size_after_serialization): 
Protocol message was modified concurrently during serialization.
CHECK failed: (bytes_produced_by_serialization) == (byte_size_before_serialization): 
Byte size calculation and serialization were inconsistent.  This may indicate a bug in protocol buffers or it may be caused by concurrent modification of the message.
This shouldn't be called if all the sizes are equal.
/Library/Caches/com.apple.xbs/Sources/ReminderKit_Sim/CRProtobuf/protobuf-lite/google/protobuf/io/zero_copy_stream_impl_lite.cc
CHECK failed: (last_returned_size_) > (0): 
BackUp() can only be called after a successful Next().
CHECK failed: (count) <= (last_returned_size_): 
CHECK failed: (count) >= (0): 
Cannot allocate buffer larger than kint32max for 
StringOutputStream.
CHECK failed: (count) <= (target_->size()): 
/Library/Caches/com.apple.xbs/Sources/ReminderKit_Sim/CRProtobuf/protobuf-lite/replica-manager.pb.cc
CHECK failed: (&from) != (this): 
replica_manager.VectorTimestampElement
replica_manager.ReplicaEntry
replica_manager.ReplicaManager
down_cast
common.h
f == NULL || dynamic_cast<To>(f) != NULL
/Library/Caches/com.apple.xbs/Sources/ReminderKit_Sim/CRProtobuf/protobuf-lite/google/protobuf/io/zero_copy_stream.cc
This ZeroCopyOutputStream doesn't support aliasing. Reaching here usually means a ZeroCopyOutputStream implementation bug.
/Library/Caches/com.apple.xbs/Sources/ReminderKit_Sim/CRProtobuf/protobuf-lite/versioned-document.pb.cc
versioned_document.Document
versioned_document.Version
/Library/Caches/com.apple.xbs/Sources/ReminderKit_Sim/CRProtobuf/protobuf-lite/topotext.pb.cc
topotext.String
topotext.VectorTimestamp.Clock.ReplicaClock
topotext.VectorTimestamp.Clock
topotext.VectorTimestamp
topotext.CharID
topotext.Substring
topotext.Selection.Range
topotext.Selection
topotext.AttributeRun
topotext.Font
topotext.ParagraphStyle
topotext.HashtagInfo
topotext.AttachmentInfo
topotext.Attachment
topotext.Location
topotext.Media
topotext.PreviewImage
topotext.Todo
topotext.Color
CHECK failed: (size()) < (Capacity()): 
/Library/Caches/com.apple.xbs/Sources/ReminderKit_Sim/CRProtobuf/protobuf-lite/google/protobuf/stubs/common.cc
This program requires version 
 of the Protocol Buffer runtime library, but the installed version is 
.  Please update your library.  If you compiled the program yourself, make sure that your headers are from the same version of Protocol Buffers as your link-time library.  (Version verification failed in "
This program was compiled against version 
 of the Protocol Buffer runtime library, which is not compatible with the installed version (
).  Contact the program author for an update.  If you compiled the program yourself, make sure that your headers are from the same version of Protocol Buffers as your link-time library.  (Version verification failed in "
%d.%d.%d
INFO
WARNING
ERROR
FATAL
[libprotobuf %s %s:%d] %s
pthread_mutex_lock: 
pthread_mutex_unlock: 
/Library/Caches/com.apple.xbs/Sources/ReminderKit_Sim/CRProtobuf/protobuf-lite/google/protobuf/io/coded_stream.cc
The total number of bytes read was 
A protocol message was rejected because it was too big (more than 
 bytes).  To increase the limit (or to disable these warnings), see CodedInputStream::SetTotalBytesLimit() in google/protobuf/io/coded_stream.h.
CHECK failed: (0) == (BufferSize()): 
Reading dangerously large protocol message.  If the message turns out to be larger than 
 bytes, parsing will be halted for security reasons.  To increase the limit (or to disable these warnings), see CodedInputStream::SetTotalBytesLimit() in google/protobuf/io/coded_stream.h.
CHECK failed: (buffer_size) >= (0): 
/Library/Caches/com.apple.xbs/Sources/ReminderKit_Sim/CRProtobuf/protobuf-lite/crframework.pb.cc
CRDT.ObjectID
CRDT.Timestamp
CRDT.RegisterLatest
CRDT.VectorTimestamp.Element
CRDT.VectorTimestamp
CRDT.Dictionary.Element
CRDT.Dictionary
CRDT.Index.Element
CRDT.Index
CRDT.OneOf.Element
CRDT.OneOf
CRDT.StringArray.ArrayAttachment
CRDT.StringArray
CRDT.Array
CRDT.OrderedSet
CRDT.Document.CustomObject.MapEntry
CRDT.Document.CustomObject
CRDT.Document.DocObject
CRDT.Document
/Library/Caches/com.apple.xbs/Sources/ReminderKit_Sim/CRProtobuf/protobuf-lite/google/protobuf/wire_format_lite.cc
CHECK failed: value.size() <= kint32max: 
Unknown REMWeekday %ld
Unknown REMListSortDescriptorType %ld
rem_log_fault_if(aCount != bCount) -- clock elements should have the same count {aCount: %ld, bCount: %ld}
Creating a new, in-memory only replica manager {account = %@}
Deserializing existing replica manager {account = %@, size = %lu}
Creating a new replica manager {account = %@}
Clock element list is incompatible with existing list {cliet: %@}
Client clock newer that replica manager clock {client: %@, clientClockElementList: %@, replicaEntry.clockElementList: %@, replicaUUID: %@}
rem_log_fault_if(!entry.inUse) -- Client attempt to update replica while it is not in use {client: %@, replicaUUID: %@}
rem_log_fault_if(client != entry.client) -- Client attempt to update a replica not checked out by it {client: %@, entry.client: %@}
rem_log_fault_if(comparisonResult != REMClockElementsComparisonResultDescending) -- Can only update with a newer version.
rem_log_fault_if(!entry.inUse) -- Client attempts to return replicaUUID while it is not in use {client = %@, replicaUUID = %@}
rem_log_fault_if(client != entry.client) -- Client attempts to return replicaUUID not checked out by it {client = %@, replicaUUID = %@, checked out by = %@}
Importing ICS data into list change item {%@}.
Failed to parse data to ICS document {error: %@}.
Could not find a component with {key: %@}.
Added ICSTodo as reminder change item into list change item {reminder: %@, list: %@}.
Setting ICS item UID to reminder change item {%@, uid: %@}.
The imported ICS reminder doesn't have display order and creation time. {icsTodoItem.url: %@}
Import ICS alarm and triggers to reminder {alarmUID: %@, reminderID: %@}.
Imported ICS alarm has no UID, generating one {alarmUID: %@, reminderID: %@}.
Importing a Proximity/Location trigger when we have already imported a TimeInterval/Date trigger from the same ICSAlarm. So we found a concrete case that they co-exist. {alarmUID: %@, reminderID: %@}
Trying to import setting proximity without a location. {alarmUID: %@, reminderID: %@}
Trying to import setting location without a proximity value. {alarmUID: %@, reminderID: %@}
Couldn't populate the recurrence rule {icsRecurrence: %@, reminderID: %@}
Ignoring invalid coordinates when converting location from ICS: %@
Ignoring unexpected location URL scheme when converting location from ICS: %@.
Encountered an ICS frequency that we don't handle: %d. Defaulting to daily
Encountered an unknown ICS frequency: %d
Encountered an unknown ICSWeekday: %d
Unknown ReminderKit change tracking error code.
ERROR: REMChangeError occurred - code=%@, desc=%@, nserror=%@
[%{public}@] Passing in nil '%s'
rem_log_fault_if(listChangeItem == nil) -- listChangeItem is nil. Unable to insert ordering info to the list.
trackedAccountCapabilities is unexpectedly nil when getting reminderChangeItem.accountCapabilities {objectID: %{public}@}
Unable to duplicate. parentReminderID is present but parentReminder.subtaskContext is nil. {parentReminderID: %@}
Unable to duplicate. Cannot find list with listID {listID: %@}
Malformed original reminder - either parentReminderID or listID must be non-nil.
Only keeping earliest date alarm of reminder {reminderID: %{public}@, supportsMultipleDateAlarmsOnRecurrence: false, dateAlarms count:%lu}
[%{public}@] self.objectID should not be nil when copying this change item {self: %@}
[%{public}@] _trackedAccountCapabilitiesForObjectID should NOT yield nil result when copying this change item with a non-nil save request {objectID: %{public}@}
rem_log_fault_if(listChangeItem == nil) -- listChangeItem is nil. Unable to update list when setting icsDisplayOrder.
Adding recurrenceRule before recurrenceRule {reminderChangeItem: %@, recurrenceRule: %@, siblisngRecurrenceRule: %@}
Adding recurrenceRule after recurrenceRule {reminderChangeItem: %@, recurrenceRule: %@, siblisngRecurrenceRule: %@}
Removing recurrenceRule {reminderChangeItem: %@, recurrenceRule: %@}
Removing all recurrenceRules {reminderChangeItem: %@}
Behavior is undefined if you set a time interval (duration) alarm trigger without a due date on the reminder!
Adding alarm  {reminderChangeItem: %@, alarm: %@}
REMSaveRequest.isSaved MUST be FALSE
Adding data attachment {reminderChangeItem: %@, data.length: %ld, uti: %@}
Adding image attachment {reminderChangeItem: %@, data.length: %ld, width: %ld, height: %ld}
Adding attachment before attachment {reminderChangeItem: %@, attachment: %@, siblisngAttachment: %@}
Adding attachment after attachment {reminderChangeItem: %@, attachment: %@, siblisngAttachment: %@}
Removing attachment {reminderChangeItem: %@, attachment: %@}
Removing all attachments {reminderChangeItem: %@}
Removing all attachments {reminderChangeItem: %@} for class %@
Adding assignment {reminderChangeItem: %@, assignment: %@}
Removing assignment {reminderChangeItem: %@, assignment: %@}
Removing all assignment {reminderChangeItem: %@}
Adding hashtag {reminderChangeItem: %@, hashtag: %@}
Removing hashtag {reminderChangeItem: %@, hashtag: %@}
Removing all hashtags {reminderChangeItem: %@}
REMStore did change
Failed to create isolated store container {error: %@}
Did create isolated store container {token: %@}
Failed to destroy isolated store container {error: %@, token: %@}
Did destroy isolated store container {token: %@}
Created isolated store {store: %@}
Invalidating REMStore {store: %@}
Not invalidating connection for REMStore becuase its not an isolated store {store: %@}
xpc error while using debug performer {error :%@}
Nuked database with error: %@
XPC error while fetching replica manager {error: %@, account: %@}
Store replica manager fetch successful {account: %@, fetchSerializedData: %@}
Store replica manager fetch failed {error: %@, account: %@}
Store replica manager fetch successful {account: %@, bundleID: %@, managerByID.count: %lu}
Store replica manager fetch failed {error: %@, account: %@, bundleID: %@}
XPC error while saving {error: %{public}@, store: %@}
Failed to get results from fetchResult {error: %@, fetchResult: %@, fetchRequest: %@}
REMStore.fetchByObjectID
XPC error while executing fetchRequest {error: %@, fetchRequest: %@}
Store fetch successful {fetchRequest: %@, fetchResult: %@}
Succesfully executed fetch {fetchResult: %@}
Failed to get fetchResult or error from fetchRequest {fetchRequest: %@}
Store failed to execute fetchRequest {error: %@, fetchRequest: %@, store: %@}
REMStore Invocation
 enableTelemetry=YES Name=%{public, signpost.telemetry:string1, Name=InvocationName}s UserInteractive=%{public, signpost.telemetry:number1, Name=UserInteractive}d
FETCH START {name: %{public}@}
FETCH END ERROR_XPC {name: %{public}@, error: %{public}@}
FETCH END {name: %{public}@}
FETCH END ERROR {name: %{public}@, error: %{public}@}
 enableTelemetry=YES 
REMStore.invocation
REMStore swiftInvocation
FETCH START {name: %{public}@, parametersData.length %ld, storages.count: %ld}
FETCH END {name: %{public}@, result.data.length: %ld, result.storages.count: %ld}
FETCH END ERROR {name: %{public}@, error: %@}
 enableTelemetry=YES ResultCount=%{public, signpost.telemetry:number1, Name:ResultCount}ld DataSize=%{public, signpost.telemetry:number2, Name:DataSize}ld
Unexpected error when fetching all reminders from list {list: %@, error: %@}
Unexpected error when fetching all accounts: %@
Unexpected error when fetching all lists from account {account: %@, error: %@}
xpc error while using xpcPerformer {error: %{public}@, store: %@}
(client) Unexpected duplicate change item on objects with the same objectID {objectID: %{public}@}
REMStore.save
(client) SAVE START {author: %{public}@, accountChangeItems.count: %lu, listChangeItems.count: %lu, smartListChangeItems: %lu, reminderChangeItems.count: %lu}
A template should be modified using 'REMTemplateChangeItem' instead of 'REMListChangeItem'
Will save REMReplicaManager {version: %llu, accountID: %@}
Failed to serialize REMReplicaManager {error: %{public}@}
(client) SAVE FAIL {error: %{public}@}
(client) SAVE END
Marking REMReplicaManager as saved {version: %llu, accountID: %@}
XPC error while fetching share for list {error: %@, list: %@}
Store fetch share failed {error: %@, account: %@}
Store fetch share successful {list: %@, share: %@}
XPC error while creating share for list {error: %@, list: %@}
Store create share failed {error: %@, account: %@}
Store create share successful {list: %@, share: %@}
XPC error while updating share {error: %@, share: %@, accountID: %{public}@}
XPC error while stopping share {error: %@, share: %@, accountID: %{public}@}
XPC error while accepting share {error: %@, metadata: %@}
(client) DistributedEvaluation Export START {options: %{public}@
XPC error while fetching store performer {error: %{public}@}
DistributedEvaluation Export produced no result and no error
DistributedEvaluation Export ERROR {error: %{public}@}
(client) DistributedEvaluation Export END
XPC error while querying iCloud configuration for Suggested Attributes harvesting parameters {error: %{public}@}
Given invitation list isn't a CalDAV list {invitationList: %@, account: %@}
Given invitation list isn't a sharing invitation {invitationList: %@, account: %@}
Given invitation list has no external identifier {invitationList: %@, account: %@}
Could not find the external identifier from the given invitation list {invitationList: %@, account: %@}
XPC error while accepting CalDAV share {error: %@, invitationList: %@}
Could not create a change tracking client because some of the parameters are missing.
Could not get a daemon controller to create the change tracking client.
_shouldNotifyReminddOfInteractionWithPeople returned NO. Skipping notification {people: %@}
_shouldNotifyReminddOfInteractionWithPeople returned YES. Notifying people interaction {people: %@}
Failed to notify of interaction {error: %@, people: %@}
XPC error while notifying of interaction {error: %@, people: %@}
Failed to register shouldNotifyOfInteractionWithPeople with notifyd {status: %d}
Failed to register shouldNotifyOfInteractionWithPeople with notify. Returning YES to _shouldNotifyReminddOfInteractionWithPeople {token: %d}
Failed to check notifyd token. Returning YES to _shouldNotifyReminddOfInteractionWithPeople {token: %d, status: %d}
shouldNotifyOfInteractionWithPeople did not change. Returning cached value {__sShouldNotifyRemindd: %d}
shouldNotifyOfInteractionWithPeople did change. Updating cache
Failed to get notify state. Returning YES to _shouldNotifyReminddOfInteractionWithPeople {token: %d, status: %d}
Successfuly notify_get_state updating cache {state: %llu}
DEPRECATED API called -[REMStore fetchReminderWithExternalIdentifier:inList:error:] called, without bounded by an REMList as param.
DEPRECATED API called -[REMStore fetchRemindersWithExternalIdentifiers:inList:error:] called, without bounded by an REMList as param.
XPC error while trying to perform MCIsManagedAccountWithObjectID {error: %@, account: %@}
Store perform MCIsManagedAccountWithObjectID successful {account: %@, MCIsManaged: %@}
Store perform MCIsManagedAccountWithObjectID failed {error: %@, account: %@}
EventKitSync: enabled on iOS
Triggering sync for dataAccess accounts {accountIDs: %{public}@}
XPC error while syncing {error: %{public}@}
Sync throttled
Error updating account. Not Triggering sync {error: %@}
XPC error while updating accounts {error: %@}
XPC error while updating account {error: %@, accountID: %@}
XPC error while removing orphaned accounts {error: %@}
XPC error while syncing {error: %@}
XPC error while requesting to initiate merge local data to sync data {accountIdentifier: %@, error: %@}
XPC error while requesting to delete sync data {accountIdentifier: %@, error: %@}
XPC error while requesting to delete local data {error: %@}
XPC error while adding share observer {error: %@, accountID: %{public}@}
_REMDACalDAVSyncReplicaManagerProvider: Deserializing existing replica manager {account = %@, size = %lu}
_REMDACalDAVSyncReplicaManagerProvider: Creating a new replica manager {account = %@}
XPC error while requesting to update client connections {isAsynchronous: %@, shouldKeepAlive: %@, error: %@}
repairPhantomObjectsWithObjectIDs: Invoked with {objectIDs: %{public}@}
XPC error while getting store performer for repairPhantomObjectsWithObjectIDs {error: %@, objectIDs: %{public}@}
repairPhantomObjectsWithObjectIDs failed {error: %@, phantomObjectIDs: %{public}@}
repairPhantomObjectsWithObjectIDs successful {result: %{public}@}
xpc error while using debug performer {error: %@}
Unknown REMAlarmProximity %ld
Unknown REMAlarmVehicleTriggerEvent %ld
Undo stack is empty. Cannot -undo.
rem_log_fault_if(![self.undos containsObject:undo]) -- Supplied undo is not found in undo stack. Normally, if the undo is obtained from this particular REMCRMergeableOrderedSet, the undo will also be present in self.undos, whose value is now: %@
rem_log_fault_if(_listIDsMergeableOrdering == nil && _listIDsMergeableOrderingData == nil) -- Attempted to decode REMAccountStorage with both _listIDsMergeableOrdering and _listIDsMergeableOrderingData missing {objectID: %{public}@, name: %{sensitive}@}
Attempted to decode REMAccount missing objectID, type or name {objectID: %{public}@, type: %ld, name: %@, markedForRemoval: %d}
rem_log_fault_if(self->_listIDsMergeableOrderingData == nil) -- Attempted to encode REMAccountStorage with both _listIDsMergeableOrdering and _listIDsMergeableOrderingData missing {objectID: %{public}@, name: %{sensitive}@}
You are about to trigger decoding the listIDsMergeableOrdering. This is probably not what you want for performance to trigger it from -isEqual:, unless you are running Tests then it's fine {class: %{public}@, self-idsOrdering: %@, other-idsOrdering: %@}
You are about to trigger decoding the resolution token map from JSON data. This is probably not what you want for performance to trigger it from -isEqual:, unless you are running Tests then it's fine {class: %{public}@, self-map: %@, other-map: %@}
Nil listIDsMergeableOrderingData when reading listIDsMergeableOrdering from account storage. Initialize an empty set {objectID: %{public}@}
REMAccountStorage listIDsMergeableOrdering deserialized {objectID: %{public}@, self: %p, orderedSet.count: %@}
Failed to read listIDsMergeableOrdering from data. Returning empty set {error: %@}
Nil resolutionTokenMapData when reading resolutionTokenMap from account storage. Initialize an empty map {list: %@}
Unknown REMAccountType %ld
REMChangeTracking+AuxiliaryChgInfo: Could not instantiate auxiliary change info model for {class: %{public}@, remObjectID: %{public}@}
REMChangeTracking+AuxiliaryChgInfo: Failed to decode data to plist dictionary for {class: %{public}@, remObjectID: %{public}@, plistError: %{public}@}
REMChangeTracking+AuxiliaryChgInfo: No object identifier decoded from plist dictionary for {class: %{public}@, remObjectID: %{public}@}
REMChangeTracking+AuxiliaryChgInfo: Decoded object identifier from the plist dictionary does not match with input object ID for {class: %{public}@, remObjectID: %{public}@, decodedObjID: %{public}@}
Could not get a date component with floating time zone {date %@, flags: %@}
Could not get a date component with {date %@, timeZone: %@, flags: %@}
Calendar must be nil or Gregorian
Invalid date components: must have at least a year, a month, and a day
Date components without time zone cannot be compared to date components with timezone
Date components with time zone cannot be compared to date components without timezone
Cannot create date from date components
REMChangedKeysObserver detected a change {keyPath: %@, old: %@, new: %@}
Invalid nil value provided when trying to -addHashtag:range: to REMMutableCRMergeableStringDocument {self: %p, replicaID: %@, range: %@}
Added TTREMHashtag to this REMMutableCRMergeableStringDocument {self: %p, replicaID: %@, value: %@, range: %@}
Removed TTREMHashtag from this REMMutableCRMergeableStringDocument {self: %p, replicaID: %@, value: %@, range: %@}
Unexpected Class of TTREMHashtagAttributeName objects found {value: %@, range: %@}
Unexpected Class of TTREMHashtagAttributeName objects found in enumeration {value: %@, range: %@}
Invalid nil value provided when trying to -rem_addHashtag:range: to this NSMutableAttributedString {self: %p, range: %@}
Added TTREMHashtag to this NSMutableAttributedString {self: %p, value: %@, range: %@}
rem_log_fault_if(src != nil && result == nil) -- Unexpected object type in checked dynamic cast %@ expects %@
rem_log_fault_if(!protocol) -- Protocol is nil {src: %@}
rem_log_fault_if(src != nil && result == nil) -- Unexpected object type in checked protocol cast %@ expects %s
Tried to compare two REMReminderStorage instances without first deserializing their CRDT titleDocument {self: %@, other: %@}
Tried to compare two REMReminderStorage instances without first deserializing their CRDT notesDocument {self: %@, other: %@}
Failed to read titleDocument from data. Returning nil.
Failed to read notesDocument from data. Returning nil.
Nil resolutionTokenMapData when reading resolutionTokenMap from reminder storage. Initialize an empty map {class: %{public}@, reminder: %@}
Unknown REMSiriFoundInAppsUserConfirmation %ld
Should not be trying to compare with the universal token.
Should not be trying to compare equality of the universal token. Use REMCHANGE_IS_UNIVERSAL_TOKEN() instead.
rem_log_fault_if(!isUniversal) -- isUniversal == NO on decoded universal change token
rem_log_fault_if(!trackedAccountCapabilities) -- invalid nil value for '%s'
trackedAccountCapabilities is unexpectedly nil when getting accountChangeItem.capabilities {objectID: %{public}@}
Attemped to get ordering of lists not belonging to the provided account {objectIDs: %@}
Tried to remove node not present in ordering list {objectID: %{public}@, ordering: %{public}@}
Tried to move list ID not present in ordering list {objectID: %@, ordering: %@}
Tried to move list ID beyond bounds of ordering list {objectID: %@, count: %@}
rem_log_fault_if(mergeableOrderingNode.accountID == nil || ![mergeableOrderingNode.accountID isEqual:self.objectID]) -- mergeableOrderingNode must have been assigned to this account change item at this point
Failed to find the insert after index of the given sibling list -- Appending to the end {objectID: %@}.
Unknown REMListPredicateDescriptorType %ld
Attempted to describe invalid REMSharedEntitySyncActivityType with value %ld
REMDisplayDate unexpectedly initialized with a nil date. Returning nil.
Unable to obtain a valid floating date from floating date components; returning nil
Unable to obtain a valid non-floating date from non-floating date components; returning nil
Floating date components must not have a timezone {dateComponents %@}
Non-floating date components must have a timezone {dateComponents %@}
Non-floating display date is all day but only floating display dates should be all day {dateComponents %@}
rem_log_fault_if(!self.account) -- invalid nil value for '%s'
+[lastTransactionTimestampWithManagedObjectContext:affectedStores:] Failed to obtain current PHT token {affectedsStores: %@}
+[lastTransactionTimestampWithManagedObjectContext:affectedStores:] Failed to fetch history {error: %{public}@, affectedsStores: %@}
rem_log_fault_if(!error) -- Daemon returned nil result and error for persistentHistoryFetch {token: %{public}@}
rem_log_fault_if(!error) -- Daemon returned nil result and error for persistentHistoryFetch {date: %{public}@}
xpc error while using debug performer {error: %{public}@, store: %@}
rem_log_fault_if(!debugPerformer) -- Failed to get debugPerformer fetching persistentStoreID {accountID: %{public}@}
xpc error while using changeTracking performer {error: %{public}@, store: %@}
rem_log_fault_if(!changeTrackingPerformer) -- Returned nil for both error and changeTrackingPerformer
rem_log_fault_if(coalescedChangeObjects == nil) -- changeObject.coalescedChanges should not be nil if changeObject.isCoalesced is YES
No auxiliary change info object IDs found with change object {changeObject: %@}
Auxiliary change info object IDs to fetch {objectIDs: %{public}@, changeObject: %@}
Daemon returned error for auxiliary change info fetch with {error: %{public}@, changeObject: %@, auxChgInfoIds: %{public}@}
rem_log_fault_if(!changeObject) -- ERROR changeObjectsMap lost track of {auxiliaryChangeInfoObjectID: %{public}@}
rem_log_fault_if(!data) -- ERROR XPC returned a mapOfData that has no data entry for {auxiliaryChangeInfoObjectID: %{public}@}
Failed to decode one of the change infos data for {changeObject: %@, objectID: %{public}@, decodeError: %{public}@}
Created new container for account ID %@
Created new default container
Created CKContainer with public cloud database
rem_log_fault_if(!accountChangeItem.capabilities.supportsTemplates) -- Attempt to create REMTemplateChangeItem into account not supporting templates {account: %{public}@}
REMCalDAVNotification is designed to be immutable and does not do marked-for-deletion.
Invalid 0 value provided when trying to -rem_setFontHint:isOn:range: to this NSMutableAttributedString {self: %p, range: %@}
Added REMTTFontHint to this NSMutableAttributedString {self: %p, hint: %lu, range: %@}
Added REMTTUnderline to this NSMutableAttributedString {self: %p, value: %d, range: %@}
Adding snooze alarm: %@
Acknowledging original alarm: %@
Replacing alarm with acknowledged version: %@
Not replacing non-temporal alarm: %@
Unable to remove temporary file because {error: %@}
Unable to create temporary directory because {error: %@}
Unable to write temporary file because {error: %@}
Unable to link temporary file because {error: %@}
_REMChangedObjectIDStorage: nil value passed to non-nil parameter. Something must have gone wrong. {uuid: %{public}@, entityName: %{public}@}
Cannot convert changedObjectIDStorage to changedObjectID because it is nil in persistentHistoryChange {change: %@}
Cannot convert changedObjectIDStorage to changedObjectID because entityName is nil in persistentHistoryChange {change: %@}
Unexpected REMChangeType {type: %lu}
Unknown REMChangeType %ld
REMChangeSet applyFilterByTransactionAuthors: {self=%p, exclude=%d, authors=%{public}@}
transaction has no mapped accountID! {txn: %@}
Trying to populate flattened changes with a change that lost back pointer to its transaction %@.
chg.changedObjectID is nil! {chg: %@, txn: %@}
Unknown persistent history change type. {changeType: %lu}
rem_log_fault_if(!changedObjectID) -- Nil coalesced.changeObjectID {coalesced: %@}
rem_log_fault_if(!changedObjectID) -- Nil update change objectID {ups[0]: %@}
rem_log_fault_if(!ins) -- Nil change for insertedID {insertedID: %{public}@}
REMChangeSet _filterAndFlattenAndConsolidateChanges was successful. ChangeSet: %@
REMChangeSet _filterAndFlattenAndConsolidateChanges failed. ChangeSet: %@
Requested change tracking for unsupported class {klass: %{public}@}
Missing changeEntityName {change: %@}
REMChangeSet is in error or truncated. Returning nil token for account {accountID: %{public}@, error: %@, isTruncated: %{public}@, transactions: %@}
REMChangeset does not contain token for accountID (this is not an error). Returning nil {accountID: %{public}@, transactions: %@}
rem_log_fault_if(transactions.count != 0) -- Attempt to decode an error change set with non-empty transaction list. {error: %@, transaction: %@}
REMChangeSet initWithCoder: {self=%p}
Unknown REMReminderSortDescriptorType %ld
remCurrentRuntimeVersionDebuggingOverride = %ld
An REMRecurrenceEnd was created with an occurrence count of 0. %@
XPC error performing suggestedAttributesPerformer.preWarmModel {error: %{public}@}
REMSuggestedAttributesPerformer swiftInvocation
 enableTelemetry=YES Name=%{public, signpost.telemetry:string1, Name=InvocationName}s}d
INVOCATION START {name: %{public}@, parametersData.length %ld, storages.count: %ld}
INVOCATION END ERROR_XPC {name: %{public}@, error: %{public}@}
INVOCATION END {name: %{public}@, result.data.length: %ld, result.storages.count: %ld}
INVOCATION END ERROR {name: %{public}@, error: %@}
suggestedAttributesPerformer invalidated. Dropping cache
Cache-miss getting suggestedAttributesPerformer. Resolving.
Failed to get storePerformer for suggestedAttributesPerformer. {action: %@}
uncachedSuggestedAttributesPerfomer produced no result and no error
uncachedSuggestedAttributesPerfomer ERROR {error: %{public}@}
REMRemindersDataView: Requested to fetch non-existent reminder {objectID: %{public}@}
Failed to fetch reminders count of list {listID: %@}
Failed to fetch reminders count with parentReminderID {parentReminderID: %@}
Requested non-existent reminder {externalIdentifier: %@}
REMRemindersDataView: Requested to fetch non-existent reminders {externalIdentifier: %{public}@}
REMRemindersDataView: Requested to fetch non-existent reminder {daCalendarItemUniqueIdentifier: %{public}@}
REMRemindersDataView: Could not map an account for the fetched reminder {reminderID: %{public}@, accountID: %{public}@}
The given account does not support CSL fetching {accountID: %{public}@}
The given group is not from an account that supports CSL fetching {groupID: %{public}@}
REMDAChangeTrackingHelper: ERROR: Couldn't initialize REMDAChangeTrackingHelper without an account.
REMDAChangeTrackingHelper: ERROR: Couldn't initialize REMDAChangeTrackingHelper without an REM store {account: %{public}@}.
REMDAChangeTrackingHelper: ERROR: Couldn't initialize REMDAChangeTrackingHelper because we failed to obtain a change tracking API handle {account: %{public}@}.
REMDAChangeTrackingHelper: ERROR: Failed to get change tracking state with error {clientID: %{public}@, error: %@}
REMDAChangeTrackingHelper: ERROR: Failed to get current change token to initialize tracking state with error {clientID: %{public}@, error: %@}
REMDAChangeTrackingHelper: Initializing a change tracking state for {clientID: %{public}@, nowToken: %{public}@}
REMDAChangeTrackingHelper: ERROR: Failed to save an initialization of tracking state with error {clientID: %{public}@, error: %@}
REMDAChangeTrackingHelper: Found and fetched change tracking state for {clientID: %{public}@, lastSyncToken: %{public}@, lastSyncDate: %{public}@}
REMDAChangeTrackingHelper: Cannot get last consumed token when compareCurrentChangeTokenToLastConsumedWithError {clientID: %{public}@}
REMDAChangeTrackingHelper: Cannot get last current change token when compareCurrentChangeTokenToLastConsumedWithError {clientID: %{public}@}
REMDAChangeTrackingHelper: compareCurrentChangeTokenToLastConsumedWithError: comparing current token vs last consumed: {clientID: %{public}@, current: %{public}@, lastConsumed: %{public}@}
REMDAChangeTrackingHelper: Fails to compare current token with last consumed when compareCurrentChangeTokenToLastConsumedWithError {clientID: %{public}@}
REMDAChangeTrackingHelper: fetched history since {clientID: %{public}@, lastSyncToken: %{public}@, lastSyncDate: %{public}@, changeSet: %{public}@}
REMDAChangeTrackingHelper: ERROR: Fetched truncated or error change history {clientID: %{public}@, lastSyncToken: %{public}@, isTruncated: %{public}@, changeSet.error: %@}
REMDAChangeTrackingHelper: Will try to reset tracking state to current token because we had a truncated or error change-set {clientID: %{public}@, nowToken: %{public}@}
REMDAChangeTrackingHelper: fetchChangesSinceLastConsumed done {clientID: %{public}@, lastSyncToken: %{public}@, upToToken: %{public}@}
REMDAChangeTrackingHelper: Had problem getting change history for account "%{public}@"
REMDAChangeTrackingHelper: ERROR: Could not get a change tracking client to fetch history for {client: %{public}@, accountID: %{public}@}
REMDAChangeTrackingHelper: ERROR: Cannot get current token to mark to {clientID: %{public}@, account: %{public}@, error: %@}
REMDAChangeTrackingHelper: No newer change token in this history {token: %{public}@, clientID: %{public}@, account: %{public}@}
REMDAChangeTrackingHelper: ERROR: Unexpected change token {token: %{public}@, clientID: %{public}@, account: %{public}@, error: %@}
REMDAChangeTrackingHelper: No newer change token in this history {clientID: %{public}@, account: %{public}@}
REMDAChangeTrackingHelper: ERROR: Failed to save tracking state with error {tokenToSave: %{public}@, clientID: %{public}@, error: %@, account: %{public}@, forcedToCurrent: %d}
REMDAChangeTrackingHelper: markChangesConsumed done {tokenToSave: %{public}@, clientID: %{public}@, account: %{public}@, forcedToCurrent: %d}
REMDAChangeTrackingHelper: ERROR: We didn't get a change tracking client so we have no change set to enumerate from %{public}@.
REMDAChangeTrackingHelper: ERROR: Couldn't change tracking client ID to enumerate changed objects from %{public}@.
REMDAChangeTrackingHelper: ERROR: Couldn't get REM account objectID to enumerate changed objects from %{public}@ for %{public}@.
REMDAChangeTrackingHelper: Change set is nil and we have nothing to enumerate for %{public}@.
REMDAChangeTrackingHelper: Change set was truncated or had error and we are not going to enumerate it for %{public}@ {isTruncated: %{public}@, changeSet.error: %@}.
REMDAChangeTrackingHelper: Why does the just inserted object got a deletionKey? {objectID: %{public}@, deletionKey: %{public}@, clientID: %{public}@}
REMDAChangeTrackingHelper: (NOTICE)(May be legit) Had a (real-)deleted model object without a deletion key (e.g. external id) {objectID: %{public}@, clientID: %{public}@}
REMDAChangeTrackingHelper: Unexpectedly got a changed model object from a different account {modelObject: %{public}@, modelObject.account: %{public}@, daREMAccount: %{public}@, clientID: %{public}@, changeType: %lu}
REMDAChangeTrackingHelper: Could not find changed model object(s) in the ReminderKit with {clientID: %{public}@, changeType: %lu, missingIDs: %{public}@}
REMDAChangeTrackingHelper: ERROR: Failed to fetch changed model objects for account: {remAccount: %{public}@, clientID: %{public}@, changeType: %lu}
REMDAChangeTrackingHelper: Cannot handleIsConcealedUpdatesInChange as given change has nil changedObjectID {modelClass: %{public}@, clientID: %{public}@, changeID: %lld}
REMDAChangeTrackingHelper: (NOTICE)(Can be legit) Had a concealed (e.g. lazy deleted) model object without a deletion key (e.g. externalIdentifier) {objectID: %{public}@, modelObject: %{public}@, clientID: %{public}@}
REMDAChangeTrackingHelper: (Can be legit) Couldn't even fetch the concealed object with includeConcealedObjects=YES and we can only return nil deletion key {objectID: %{public}@, modelObject: %{public}@, clientID: %{public}@}
REMDAChangeTrackingHelper: _fetchModelObjectOfClass:withObjectID:includeConcealedObjects: Cannot proceed to fetch because the change objectID is nil {clientID: %{public}@, model: %{public}@}.
rem_log_fault_if(!remStore) -- REMDAChangeTrackingHelper: remStore is nil when trying to _fetchModelObjectOfClass:withObjectID:includeConcealedObjects:
REMDAChangeTrackingHelper: _fetchModelObjectOfClass:withObjectID:includeConcealedObjects: failed {clientID: %{public}@, error: %@}
rem_log_fault_if(!remStore) -- REMDAChangeTrackingHelper: remStore is nil when trying to _fetchModelObjectsOfClass:withObjectIDs:
REMDAChangeTrackingHelper: ERROR: Couldn't get a change tracking client from store for DataAccess from {account %{public}@}.
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: ERROR: Failed to fetch REMList {objectID: %{public}@, includeConcealedObjects: %{public}@, error: %@}.
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: ERROR: Failed to fetch REMList {objectIDs: %{public}@, error: %@}.
rem_log_fault_if(![list respondsToSelector:@selector(shouldUseExternalIdentifierAsDeletionKey)]) -- REMList should conform to REMExternalSyncMetadataProviding {list: %{public}@}
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: ERROR: Failed to fetch REMReminder {objectID: %{public}@, includeConcealedObjects: %{public}@, error: %@}.
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: ERROR: Failed to fetch REMReminder {objectIDs: %{public}@, error: %@}.
rem_log_fault_if(![reminder respondsToSelector:@selector(shouldUseExternalIdentifierAsDeletionKey)]) -- REMReminder should conform to REMExternalSyncMetadataProviding {reminder: %{public}@}
rem_log_fault_if(assignments.count > 1) -- REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: FAULT: Fetch returned more than 1 assignment with 1 object ID.
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: ERROR: LOOKATME Requested REMAssignment not found {objectID: %{public}@, includeConcealedObjects: %{public}@, error: %@}.
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: ERROR: LOOKATME Failed to fetch REMAssignment {objectID: %{public}@, includeConcealedObjects: %{public}@, error: %@}.
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: ERROR: Failed to fetch REMAssignment {objectIDs: %{public}@, error: %@}.
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: LOOKATME: Can't cast concealed object to REMAssignment {concealedObject: %@}.
rem_log_fault_if(hashtags.count > 1) -- REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: FAULT: Fetch returned more than 1 hashtag with 1 object ID.
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: ERROR: LOOKATME Requested REMHashtag not found {objectID: %{public}@, includeConcealedObjects: %{public}@, error: %@}.
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: ERROR: LOOKATME Failed to fetch REMHashtag {objectID: %{public}@, includeConcealedObjects: %{public}@, error: %@}.
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: ERROR: Failed to fetch REMHashtag {objectIDs: %{public}@, error: %@}.
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: LOOKATME: Can't cast concealed object to REMHashtag {concealedObject: %@}.
Mismatched objectID type {objectID: %@, expected: %@}
No error object to produce REMErrorCodeMultipleErrors.
noSuchObject REMError has an invalid UUID string {errorUUIDString: %{public}@}
noSuchObject REMError has unexpected keys {error.userInfo: %{public}@}
Unknown REMAssignmentStatus %ld
Can't construct REMResolutionToken from invalid JSON {jsonObject: %@}
Not showing alert for assertion because defaults key was set
Failed [%d] to create CFUserNotificationRef for alertOptions: %@
User decided to disable the assertion alerts
Disabled the assertion alert
rem_log_fault_if([self.inProgressSaveRequests containsObject:saveRequest]) -- SaveRequest save already in progress {saveRequest: %@, inProgressSaveRequests: %@}
REMSaveRequest.isSaved MUST be TRUE
SaveRequest is not in progress. Ignoring. {saveRequest: %@, inProgressSaveRequests: %@}
Failed to get account for inProgressList. Returning nil {listObjectID: %@, accountID: %@}
Failed to get parentlist for inProgressList. Returning nil {listObjectID: %@, trackedListChangeItem.parentListID: %@
Failed to get list for inProgressReminder. Returning nil {reminderObjectID: %@, listID: %@}
Failed to get parent reminder for inProgressReminder. Returning nil {reminderObjectID: %@, parentReminderID: %@}
ReminderChangeItem missing both listID and parentReminderID. Returning nil {reminderObjectID: %@}
REMDatabaseMigrationAccountInfo cannot be initialized without an account type and an identifier.
Failed to create isolated store container for database migration {error: %{public}@}
Failed to destroy isolated store container for database migration {error: %{public}@}
Database Migration will begin
Migration Error {identifier: %{public}@, stage: %{public}@, error: %{public}@, error.debugDescription: %@}
_postMigrationLocalAccountCleanup: Trying to clean up local account after local migration
_postMigrationLocalAccountCleanup: Cannot fetch local account lists for post local migration cleanup {error: %{public}@}
_postMigrationLocalAccountCleanup: No lists or only one list is found. No cleanup is necessary
_postMigrationLocalAccountCleanup: Failed to reminders count of the default list for post local migration cleanup {error: %{public}@}
_postMigrationLocalAccountCleanup: Our default list isn't empty. Not going to remove it
_postMigrationLocalAccountCleanup: Removing empty default list because the local migration has copied some list(s) to the local account
_postMigrationLocalAccountCleanup: Failed to save account objects for local migration {error: %{public}@}
_postMigrationLocalAccountCleanup: Empty default list removed
_postMigrationLocalAccountCleanup: No local account is found for post local migration cleanup. This is unexpected {error: %{public}@}
Database Migration did finish {success: %d, duration: %.2f}
ensureAccountsExist: Finished calling [_cleanLocalDatabases]
ensureAccountsExist: There is no need to clean local database before we ensure accounts exist for local migration.
ensureAccountsExist: There's no input account info. There's nothing we need to do.
ensureAccountsExist: Local account is ignored {accountID: %{public}@, name: %@}
ensureAccountsExist: About to add account per request {accountID: %{public}@, name: %@, type: %ld}
ensureAccountsExist: Found unexpected existing account with external identifier we are about to use for creating new account {uuid: %{public}@}
ensureAccountsExist: Invalid UUID. Skip. {uuid: %{public}@}
ensureAccountsExist: CloudKit account type is not expected. {uuid: %{public}@}
ensureAccountsExist: About to save pending changes to our database
Failed to save account objects for local migration {error: %{public}@}
ensureAccountsExist: Decommissioned [REMDatabaseMigrationContext ensureAccountsExist:] called. Migration will not work.
ensureAccountsExist: Given account info #(%{public}@) does not contain an identifier: %@
ensureAccountsExist: Given account info #(%{public}@) does not contain an account type: %@
Failed to fetch existing accounts when trying to clear local database before we can create clean ones for local migration {error: %{public}@}
REMDatabaseMigrationContext found existing CalDAV account locally before migration, deleting store: {name: %@, id: %{public}@, externalIdentifier: %{public}@}
REMDatabaseMigrationContext found existing local account locally before migration, emptying content: {id: %{public}@}
_cleanLocalDatabases saving changes
Failed to remove existing accounts when trying to clear local database before we can create clean ones for local migration {error: %{public}@}
Unknown REMFetchRequestType %ld
isConsideredEmpty: Error fetching lists from local account {error: %@}.
isConsideredEmpty: Account thas more than 1 lists. Treating as non-empty.
isConsideredEmpty: Error fetching reminders from list in local account {listID: %@, error: %@}.
isConsideredEmpty: Account has no reminders. Treating as empty.
isConsideredEmpty: Account has reminders. Treating as non-empty.
isConsideredEmpty: Account has no lists. Treating as empty.
Performed XPC -MCIsManagedAccountWithObjectID: failed {account: %@, error: %@}
Performed XPC -MCIsManagedAccountWithObjectID: successful {account: %@, result: %@}
rem_log_fault_if(listIDsMergeableOrdering == nil) -- account.storage.listIDsMergeableOrdering should not be nil {objectID: %{public}@}
Invalid unknown account type, cannot convert to string {%@}.
Unknown account type, cannot convert to string {%@}.
Account type should not be REMAccountTypeCount
rem_log_fault_if(!self.owner) -- Editting REMReplicaIDHelper without an owner {replicaIDHelper: %@}
Added REMTTParagraphStyle to this NSMutableAttributedString {self: %p, paragraphStyle: %@, range: %@}
Remove REMTTParagraphStyle from this NSMutableAttributedString {self: %p, range: %@}
Created new REMXPCDaemonController {self: %{public}@}
REMXPCDaemonController invalidate
Clearing cached performer due to proxy xpc error {name: %{public}@, error: %{public}@}
Returning existing performer {name: %{public}@, performer: %@}
Clearing cached performer due to resolve xpc error {name: %{public}@, error: %{public}@}
Returning existing performer {name: %{public}@, reason: %{public}@, performer: %@}
Cache-miss getting performer. Resolving async {name: %{public}@, reason: %{public}@}
xpc connection error getting resolver {name: %{public}@, error: %{public}@}
Resolve performer {name: %{public}@, performer: %@}
Error resolving performer {name: %{public}@, error: %{public}@}
Cache-miss getting performer. Resolving sync {name: %{public}@, reason: %{public}@}
Resolved performer {name: %{public}@, performer: %@}
XPC connection was interrupted
XPC connection was invalidated
REMCRMutableAttributedString: Deleting portion of text within a non-editable attribute range. Removing the attribute {self: %p, key: %@, replacementRange: %@, ranges: %@}
REMCRMutableAttributedString: Inserting text within a non-editable attribute range. Removing the attribute {self: %p, key: %@, replacementRange: %@, attrRange: %@}
REMCRMutableAttributedString: Non-editable attributes were extended around the insertion point, now unapply the extension to the attributes {self: %p, keys: %@, range: %@}
Error decoding color {error: %@}
Error encoding color
Unknown REMColorRGBSpace %ld
REMUserDefaults created {suiteName: %@, container: %@}
REMUserDefaults created {standardUserDefaults: true}
REMUserDefaults created {suiteName: %@}
REMUserDefaults KVO change observed {userDefaultsKey: %@}
rem_log_fault_if(!sharedInstance) -- Failed to create REMAppleAccountUtilities shared instance
unsafeUntilSystemReady_allCloudKitRemindersEnabledICloudACAccounts encounters an iCloud ACAccount with nil identifier, skipped {account: %@}
unsafeUntilSystemReady_icloudACAccountMatchingAccountIdentifier can't find a matching ACAccount with {accountIdentifier: %{public}@}
unsafeUntilSystemReady_iCloudAccountCalDavServiceWithAccountID failed to match ACAccount with {accountID: %{public}@}
Trying to set didChooseToMigrate=%d didFinishMigration=%d on ACAccount (%@)
Actually setting didChooseToMigrate=%d didFinishMigration=%d on ACAccount (%@)
Error saving migration state to ACAccount: %@
Saved didChooseToMigrate=%d didFinishMigration=%d on ACAccount (%{public}@)
Trying to unset didChooseToMigrate and didFinishMigration on ACAccount (%@)
XXXXXXXXX: Done unset didChooseToMigrate and didFinishMigration on ACAccount (%@)
Unknown REMHashtagType %ld
Hourly recurrence is not supported by CalendarFoundation.
Unknown REMRecurrenceFrequency %ld
Unable to unarchive data to create REMContactRepresentation: %@
XPC error while fetching status reports {error: %@}
Error getting DataAccess status reports {error: %@}
xpc error while trying to carsh daemon {error: %@}
xpc error while using xpcPerformer {error: %{public}@}
Nil resolutionTokenMapData when reading resolutionTokenMap from smartlist storage. Initialize an empty map {smartlist: %@}
Unknown REMAccountSortDescriptorType %ld
Creating saveRequest in migration mode
Creating saveRequest in CalDAV-Sync mode
Creating saveRequest in EventKitSync mode
Creating saveRequest in AccountDataMoving mode
Failed to add list using template because account does not support templates. {accountChangeItem.objectID: %{public}@}
Template has no name {templateID: %{public}@}
Failed to add list using public template because account does not support templates. {accountChangeItem.objectID: %{public}@}
Public template has no name {publicTemplateObjectID: %{public}@}
rem_log_fault_if(![[reminderObjectID entityName] isEqualToString:[REMTemplate cdEntityNameForSavedReminder]]) -- Failed to add new reminder to a list, which represents a template, because reminderObjectID.entityName was not REMCDSavedReminder {reminderObjectID: %@}
rem_log_fault_if(![[reminderObjectID entityName] isEqualToString:[REMReminder cdEntityName]]) -- Failed to add new reminder to a list, which does not represents a template, because reminderObjectID.entityName was not REMCDReminder {reminderObjectID: %@}
rem_log_fault_if(![[reminderObjectID entityName] isEqualToString:[REMTemplate cdEntityNameForSavedReminder]]) -- Failed to add new reminder to parent saved reminder in a template because reminderObjectID.entityName was not REMCDSavedReminder {reminderObjectID: %@}
rem_log_fault_if(![[reminderObjectID entityName] isEqualToString:[REMReminder cdEntityName]]) -- Failed to add new reminder to parent reminder in a list because reminderObjectID.entityName was not REMCDReminder {reminderObjectID: %@}
resolutionTokenMap should never be undefined
Save Request has no changed keys. Opted to return early as no-op. {author: %{public}@, saveIsNoopIfNoChangedKeys: %d}
LOOKATME: Save Request has no changed keys. Save will continue. Revisit if caller should avoid such saves. {author: %{public}@}
os_transaction INIT {name: com.apple.reminderkit.REMSaveRequest}
REMSaveRequest save async
os_transaction RELEASE {name: com.apple.reminderkit.REMSaveRequest}
REMSaveRequest save sync
notifyChangeDelegateForSaveSuccess: SHOULD_NOTIFY {name: com.apple.reminderkit.REMSaveRequest}
RecurrenceClone: Started performRecurrenceClone
RecurrenceClone: Error fetching parentsOfRecurrentSubtasks {error: %@}
RecurrenceClone: Performing check for isCompleted and has recurrenceRules {reminderID: %{public}@};
RecurrenceClone: Advancing forward alarm of reminder with new date trigger {reminderID: %{public}@, oldDateTrigger: %{public}@, newDateTrigger: %{public}@, defaultTimeZone: %{public}@}, systemTimeZone: %{public}@, localTimeZone: %{public}@};
RecurrenceClone: Unable to advance forward date alarm for reminder with dueDate missing timezone {reminderID: %{public}@, dueDate: %{public}@}
RecurrenceClone: Adding new date alarm of reminder with dueDate {reminderID: %{public}@, dueDate: %{public}@}; failed to advance forward any previous date alarms
RecurrenceClone: Fixing dueDate drift to match displayDate {reminderID: %{public}@, dueDate: %{public}@, displayDate: %{public}@};
RecurrenceClone: New recurrence rules of reminder {reminderID: %{public}@, recurrenceRuleID: %{public}@, recurrenceRule: %{public}@};
RecurrenceClone: Keep old recurrence rule of reminder {reminderID: %{public}@, recurrenceRuleID: %{public}@, recurrenceRule: %{public}@};
RecurrenceClone: Unable to clone recurrent reminder with dueDateAdvanceAmount < 0 {reminderID: %{public}@, dueDateAdvanceAmount: %f}
RecurrenceClone: Skipping performRecurrentClone to advance forward date alarm for reminder, didn't meet conditions for isCompleted and hasRecurrenceRules {reminderID: %{public}@, isCompleted:%{public}i, recurrenceRuleID: %{public}@, recurrenceRule: %{public}@, ruleCount: %{public}@};
_trackAccountCapabilities {SaveRequest: %@ accountCapabilities: %@ objectID: %@
_trackedAccountCapabilitiesForObjectID {SaveRequest: %@ objectID: %@
Don't have account capabilities for {objectID: %@}
Failed to create REMObjectID {url: %@}
REMObjectID: nil value passed to non-nil parameter. Something must have gone wrong. {uuid: %@, entityName: %@}
Failed to serialize provided reminderIDsMergeableOrdering. Using emptyArray {error: %@}
Serialized input reminderIDsMergeableOrdering into data when init REMListStorage. {objectID: %@}
rem_log_fault_if(_reminderIDsMergeableOrdering == nil && _reminderIDsMergeableOrderingData == nil) -- Attempted to decode REMListStorage with both _reminderIDsMergeableOrdering and _reminderIDsMergeableOrderingData missing {objectID: %{public}@, name: %{sensitive}@}
Attempted to decode REMListStorage missing objectID, name, reminderIDs {objectID: %{public}@, name: %{sensitive}@}
rem_log_fault_if(self.reminderIDsMergeableOrderingData == nil) -- Attempted to encode REMListStorage with both _reminderIDsMergeableOrdering and _reminderIDsMergeableOrderingData missing {%{public}@}
You are about to trigger decoding the reminderIDsMergeableordering. This is probably not what you want for performance to trigger it from -isEqual:, unless you are running Tests then it's fine {class: %{public}@, self-idsOrdering: %@, other-idsOrdering: %@}
Nil reminderIDsMergeableOrderingData when reading reminderIDsMergeableOrdering from list storage. Initialize an empty set {objectID: %{public}@}
REMListStorage reminderIDsMergeableOrdering deserialized {objectID: %{public}@, self: %p, orderedSet.count: %@}
Failed to read reminderIDsMergeableOrdering from data. Returning empty set {error: %@}
Nil resolutionTokenMapData when reading resolutionTokenMap from list storage. Initialize an empty map {list: %@}
Failed to serialize uuidStrings {error: %@, uuidStrings: %@}
Missing reminderIDsMergeableOrderingData. Returning nil {list: %@}
Failed to create uuid from string. Skipping objectID from list {uuidString: %@}
unexpected class for deserialized reminderIDsMergeableOrdering. Returning nil {class: %@}
Failed to deserialize reminderIDsMergeableOrdering data. Returning nil {error: %@, list: %@}
Unknown REMListSharingStatus %ld
Unknown REMReminderPredicateDescriptorType %ld
Unknown REMReminderPredicateDescriptorTextMatching %ld
rem_log_fault_if(self.storage.reminderIDsMergeableOrdering == nil) -- list.store.reminderIDsMergeableOrdering should not be nil {objectID: %{public}@}
rem_log_fault_if(self.account == nil) -- REMList.account is nil for -shouldUseExternalIdentifierAsDeletionKey {listID: %{public}@}
hack_overrideReminderIDsOrderingWithOrderedObjectIDs: reminderIDsMergeableOrdering set {ids.count: %@}
rem_log_fault_if(![document isKindOfClass:[CRTTCompatibleDocument class]]) -- Unexpected class for deserialized document for REMCRReminderIDList {document: %@}
An unexpected list is passed to the undo block which does not match the originating list. Passed in: %@
rem_log_fault_if(![self.replicaIDSource.crdtID isEqualToString:anotherDocument.replicaIDSource.crdtID]) -- Documents with different CRDT IDs cannot be merged.
Failed to deserialize mergeable string document {objectID: %@, key: %@}: %@
NSFileManager failed to return our group container, falling back to bundle proxy
Failed to get group container URL for "%@"
%@ group container URL is not reachable. URL=%@
Error creating %@ group container: %@
Group container URL: %@
rem_log_fault_if(!accountChangeItem.capabilities.supportsCustomSmartLists) -- Attempt to create REMSmartListChangeItem into account not supporting CSL {account: %{public}@}
Action is only applicable to CSL {action: %{public}@, smartList: %{public}@}
'- [REMSmartListChangeItem setIsPinned:]' should not be called because account does not support pinned lists {objectID: %@}
rem_log_fault_if(fetchResult.accountIDs.count > 1) -- Unexpectedly fetched more than 1 primary active cloudkit account REMObjectID {count: %@}
rem_log_fault_if(accounts.count > 1) -- Unexpectedly fetched more than 1 primary active cloudkit account {count: %@}
REMAccountsDataView: Requested to fetch non-existent account {objectID: %{public}@}
REMAccountsDataView: Requested to fetch non-existent account {externalIdentifier: %{public}@}
Request results with account without externalIdentifier {objectID: %@}
REMAccountsDataView -fetchAccountsWithExternalIdentifiers: More than 1 account found for the given external identifier {extID: %@, acctObjID1: %@, acctObjID2: %@}.
REMAccountsDataView -fetchAccountsWithExternalIdentifiers: fetched more accounts than the number of external identifiers {expected: %@, actual: %@}.
Unknown REMAccountsDataViewInvocation_fetchAll_purpose %ld
Tried to initialize a nested group {listChangeItem: %@}
trackedAccountCapabilities is unexpectedly nil when getting listChangeItem.accountCapabilities {objectID: %{public}@}
Trying to optimistically insert reminderID to the ordering of a REMListChangeItem for a REMReminderChangeItem tracked by the same REMSaveRequest {saveRequest: %@}
objectID of reminderChangeItem does not exist in its listChangeItem.reminderIDsMergeableOrdering {objectID: %@}
Unexpected index of objectID in reminderIDsMergeableOrdering {index: %ld}
Cannot move reminders across accounts {original: %@, accountID: %@, expectedAccountID: %@}
Cannot move reminder across lists for account {original: %@, accountID: %@}
Cannot move reminder across shared lists for account {original: %@, accountID: %@}
Tried to add a new subtask with a parent reminder but could not find the parent reminder in the list's reminder IDs ordering {listID: %@, reminderID: %@, parentReminderID: %@}.
Tried to remove reminder not present in ordering list {objectID: %@, ordering: %@}
rem_log_fault_if(accountChangeItem == nil) -- accountChangeItem is nil. Unable to update account when setting daDisplayOrder.
rem_log_fault_if(accountChangeItem == nil) -- accountChangeItem is nil. Unable to update account when setting daIsNotificationsCollection.
'- [REMListChangeItem setIsPinned:]' should not be called because account does not support pinned lists {objectID: %@}
rem_log_fault_if(reminderChangeItem.listID == nil || ![reminderChangeItem.listID isEqual:self.objectID]) -- reminderChangeItem must have been assigned to this list change item at this point
Failed to find the insert after index of the given sibling reminder -- Appending to the end {objectID: %@}.
REMListChangeItem updated storage.reminderIDsMergeableOrdering {objectID: %@, saveReq: %@, ordering.count: %@}
Nested group is not supported {orderingNodeObjectID: %{public}@, parentListID: %{public}@}
Adding calDAVNotification {listChangeItem: %@, calDAVNotification: %@}
Removing calDAVNotification {listChangeItem: %@, calDAVNotification: %@}
Attempted to remove a calDAVNotification object that does not belong to this list {listChangeItem: %@, calDAVNotification: %@}
Removing all calDAVNotifications {listChangeItem: %@}
Updating calDAVNotification {listChangeItem: %@, calDAVNotification: %@}
Attempted to update a calDAVNotification object that does not belong to this list {listChangeItem: %@, calDAVNotification: %@}
Adding sharee {listChangeItem: %@, sharee: %@}
Removing sharee {listChangeItem: %@, recurrenceRule: %@}
Removing all sharee {listChangeItem: %@}
ListChangeItem (AccountDataMover): Copying from a source list which is a group, the case is not supported for now {sourceID: %@}.
REMTemplatesDataView: Requested to fetch non-existent template {objectID: %{public}@}
Nil resolutionTokenMapData when reading resolutionTokenMap from template storage. Initialize an empty map {template: %@}
Couldn't create ICSComponents for reminder %@
Failed to parse reminder.importedICSData to an ICS document {error: %@}.
Failed to obtain an NSTimeZone from reminder.timeZone when exporting due date components to ICS {timeZoneString: %@, reminderID: %@}.
Couldn't update the calendar item components of reminder.
rem_log_fault_if(REMIsInvalidICSAlarmDateComponents(remAlarmDateTrigger.dateComponents)) -- ReminderKit does not create nor import invalid alarm trigger date in alarms.
Unexpected type of REMAlarmTrigger (%@), unable to export to ICSAlarm.
AlarmUID was not set, generating one when exporting to ICS {remObjectID: %@}.
UpdateICSStructuredLocationFromREMStructuredLocation dropping mapkit handle because it exceeds the max length restriction on many servers.
Couldn't create an ICSRecurrence from REMRecurrenceRule %@ {reminderID: %@}
Setting ICS recurrence until date: untilDate=%@ remEndDate=%@)
Setting ICS byday days array: %@ %@
Encountered an unknown calendar frequency: %@
Encountered an unknown REMWeekday: %@
Found internal inconsistency between reminder.storage.timeZone vs reminder.storage.dueDateComponents.timeZone {dueDateComponents.timeZone: %@, storage.timeZone: %@}.
Found internal inconsistency between reminder.storage.allDay vs reminder.storage.dueDateComponents {dueDateComponents: %@}.
rem_log_fault_if(self.account == nil) -- REMReminder.account is nil for -shouldUseExternalIdentifierAsDeletionKey {reminderID: %{public}@}
REMTipKit: Failed to fetch lists count
REMTipKit: Failed to fetch lists with custom badge count
REMTipKit: Failed to fetch uncompleted reminders count
REMTipKit: Failed to fetch completed reminders count
REMTipKit: Failed to fetch completed reminders in list count
REMTipKit: Failed to fetch custom smart lists count
REMTipKit: Failed to fetch hashtags count
Error when archiving NSUserActivity. {userActivity: %@}
Error when archiving Siri Intent. {siriIntent: %@, error: %@}
Failed to serialize user activity {error: %@}
Error decoding REMUserActivity {error: %@}
Error encoding REMUserActivity
Timed out serializing user activity.
Error when unarchiving Siri Intent. {error: %@}
Unknown REMUserActivityType %ld
Unknown REMShareeStatus %ld
Unknown REMShareeAccessLevel %ld
Comparing two undefined resolution token is unexpected and should never happen {key: %{public}@, self.map.allKeys: %@, other.map.allKeys: %@}
Error encoding resolution token map {error: %@}
Error decoding resolution token map {error: %@}
Unexpected class to decode data to REMResolutionTokenMap. Returning nil {class: %@}
Failed to decode data to REMResolutionTokenMap. Returning nil {error: %@}
REMListsDataView: Requested to fetch non-existent list {objectID: %{public}@}
REMListsDataView: Requested to fetch non-existent list {externalIdentifier: %{public}@}
REMListsDataView: Requested to fetch non-existent lists in account with {externalIdentifier: %{public}@, account.remObjectID: %{public}@}
REMListsDataView: Requested to fetch list for non-existent template {templateobjectID: %{public}@}
rem_eligibleForAutoCloudKitMigration: {identifier: %{public}@, aa_isRemindersAutoMigratableToCK: %d, forceEligibleForAutoCloudKitMigration: %d}
rem_eligibleForAutoCloudKitMigration: Not an AppleAccount {identifier: %{public}@}
rem_isEligibleForCloudKitReminders: AAAccount is .basic but forceBasicAAAccountEligibleForCloudKitReminders is turned on, returning YES {identifier: %{public}@}
TTMergeableString document set to non-TT-compatible document.
TTMergeableString initialized with non-TT-compatible document.
rem_log_fault_if(self.document.sharedTopotextTimestamp != self.timestamp) -- Timestamp should be the same the as one in document.
Setting value for an existing key has no effect in a CRDictionary.
inflate failed returned %d
inflateEnd failed
Text clock is too low.
Style clock is too low.
Dumping merge: %p %@ %@ %@
Failed to merge strings: %@
Failed to merge strings.
No object at index %{public}lu
Cannot merge with object of type %{public}@.
TTMergeableStringSelection protobuf corrupt.
TTVersionedDocument is wrong versionedDocumentSerializationVersion %d != %d.
TTVersionedDocument gzipped protobuf corrupt.
Loading old version %d < %d
Loading current version %d
Loading future version %d > %d where min-supported %d
Should not attempt to load invalid version.
TTVersionedDocument did not load any compatible version.
Saving versioned document %d with %d future versions.
TTVectorMultiTimestamp protobuf corrupt.
TTVectorMultiTimestamp clock requires uuids.
TTVectorMultiTimestamp requires the same number of clocks as capacity %d != %ld.
TTParagraphStyle protobuf corrupt.
TTMergeableAttributedString cannot load attributes.
TTMergeableAttributedString attribute length is not equal to string length.
TTMergeableAttributedString cannot load attachment without identifier/info.
Incorrect number of color components for foreground color. Expected %d and got %d
Saving hashtag without identifier!
Merging should not modify local replica clock: %ld => %ld
Version clock should equal cached replica clock: %ld => %ld
rem_log_fault_if(![self isEqual:other]) -- Cannot merge NSString with different value.
TTMergeableString protobuf corrupt.
Corrupt mergeable string, bad string data.
Corrupt mergeable string, substring missing component.
Corrupt mergeable string, uuid index > number of uuids - loading empty string.
Corrupt mergeable string, substring max > string max.
Corrupt mergeable string, child substring index > number of substrings.
Corrupt mergeable string, length of substrings != attributedString length.
Corrupt mergeable string, zeroed UUID timestamp.
Inserting element at invalid index %lu
Moving element at invalid index %lu
CRTombstoneOrderedSet cannot merge with object of type %{public}@.
REMDisplayNameUtils
REMRecurrenceDayOfWeek
NSCopying
NSSecureCoding
NSCoding
REMListSortDescriptor
REMAuxiliaryReminderChangeDeleteInfo
REMAuxiliaryReminderChangeInfo
REMAuxiliaryReminderChangeMoveInfo
REMClockElementList
REMReplicaEntry
REMReplicaManager
REMReplicaManagerSerializedData
_REMDefaultReplicaManagerProvider
REMReplicaManagerProviding
NSObject
REMSaveRequestImporting
Importing
REMBundleLookupObject
REMXPCIndexingPerformer
REMXPCIndexingPerformerInterface
REMLog
REMSignpost
REMLogStore
REMChangeError
REMReminderChangeItem
REMConflictResolving
REMSaveRequestTrackedValue
REMExternalSyncMetadataWritableProviding
REMSupportedVersionProviding
REMSupportedVersionUpdating
SiriFoundInApps
REMReminderSubtaskContextChangeItem
REMReminderAttachmentContextChangeItem
REMReminderFlaggedContextChangeItem
REMReminderAssignmentContextChangeItem
REMReminderHashtagContextChangeItem
REMTemplateContentAttributes
REMTTHashtag
REMStore
CalDAVSharing
ChangeTrackingSupport
REMChangeTrackingProvider
IndentingUnsupportedSubtasks
ChangeTrackingProvider_IntegrationTestsOnlyAPIsSupport
iMessageInteractionSPI
TipKit
EventKitBridging
SiriSearch
CalendarDataAccess
EventKitCompatibility
REMAssignment_ChangeTrackingInternalSupport
REMHashtag_ChangeTrackingInternalSupport
UserActivity
AccountManagement_PrivateSPIs
AccountManagement_Internal
Templates
Sharing
_REMDACalDAVSyncReplicaManagerProvider
ReplicaManagerProviders
ClientConnections
REMClientConnectionsInteractable
PhantomObjectRepairing
Debugging
UnitTest
REMStoreContainerToken
REMStoreSwiftInvocation
REMStoreSwiftInvocationResult
ReminderKitAdditions
REMAlarmTrigger
REMObjectIDProviding
REMNullableObjectIDProviding
REMAlarmTimeIntervalTrigger
REMAlarmDateTrigger
REMAlarmLocationTrigger
REMAlarmVehicleTrigger
REMAlarmContactTrigger
REMCRMergeableOrderedSet
REMMutableCRMergeableOrderedSet
REMReplicaIDHelperOwner
CRUndoDelegate
REMAccountStorage
REMObjectStorageSupportedVersionProviding
_REMSupportedVersionAssignableEffectiveVersion
REMRecurrenceRuleFormatter
REMAuxiliaryChangeInfoType
REMAuxiliaryChangeInfoObject
REMAuxiliaryChangeInfoFetchResult
REMChangeTrackingInternalAccess
REMListFetchExecutor
REMEnableObjectiveCpp
REMSaveRequestTrackedValueContainer
ReplicaClock
REMReplicaClockProviding
REMChangeTrackingState
reminddIntegrationTests_additions
REMChangedKeysObserver
Hashtags
REMTTHashtagHosting
REMCRMergeableStringDocument_Hashtags
REMReplicaIDSource
REMXPCSyncInterfacePerformer
REMXPCSyncInterfacePerformerInterface
REMAlarm
REMReminderStorage
REMChangeToken
_REMChangeUniversalToken
REMAccountChangeItem
REMPersonIDProviding
REMAccountGroupContextChangeItem
REMAccountPinnedListsContextChangeItem
REMAccountTemplatesContextChangeItem
REMListFetchMetadata
REMListPredicateDescriptor
REMReminderFetchExecutor
REMReminderFetchMetadata
REMReminderFetchMetadataDueDateCount
REMSharedEntitySyncActivity
REMDisplayDate
REMSmartList
REMSmartListCustomContext
REMChangeTracking
REMAuxiliaryChangeInfoAdditions
_REMChangeTrackingClientID
REMChangeTrackingClientIdentifying
REMCloudContainer
REMTemplateChangeItem
REMHashtagLabel
REMCalDAVNotification
REMExternalSyncMetadataProviding
REMMutableCalDAVNotification
REMTTStyle
REMCRMergeableStringDocument_Styling
REMXPCChangeTrackingPerformer
REMXPCChangeTrackingPerformerInterface
Snooze
REMAttachment
REMFileAttachment
REMImageAttachment
REMURLAttachment
REMMigrationResult
_REMChangedObjectIDStorage
REMChangedObjectIdentifying
_REMNSPersistentHistoryChangeStorage
REMNSPersistentHistoryChangeTombstone
REMNSPersistentHistoryChange
HexStringAdditions
REMChangeTransaction
REMFetchResultToken
REMChangeSet
REMReminderSortDescriptor
REMChangeTombstone
REMChangeObject
REMChangeCoalesceable
REMRecurrenceEnd
REMAccountCapabilities
CRDT_REMAdditions_Subset
NSXPCProxyCreating
REMSuggestedAttributesPerformer
REMRemindersDataView
REMRemindersDataViewInvocation_fetchByParentReminderID
REMRemindersDataViewInvocation_fetchByListID
REMRemindersDataViewInvocation_fetchByObjectID
REMRemindersDataViewInvocation_fetchByPredicateDescriptor
REMRemindersDataViewInvocation_fetchByParentReminderIDs
REMRemindersDataViewInvocation_fetchReminderIDsByParentReminderID
REMRemindersDataViewInvocation_fetchByExternalIdentifier
REMRemindersDataViewInvocation_fetchByDACalendarItemUniqueIdentifier
REMRemindersDataViewInvocation_fetchRemindersCountByListID
REMRemindersDataViewInvocation_fetchRemindersCountByParentReminderID
REMRemindersDataViewInvocationResult
REMAssignmentsDataViewInvocation_fetchByObjectID
REMAssignmentsDataViewInvocationResult
REMHashtagsDataViewInvocation_fetchByObjectID
REMHashtagsDataViewInvocationResult
REMTemplatePublicLinkConfiguration
REMSmartListsDataView
REMSmartListsDataViewInvocation_fetchSmartList
REMSmartListsDataViewInvocation_fetchAllCustomSmartLists
REMSmartListsDataViewInvocation_fetchCustomSmartListsInAccount
REMSmartListsDataViewInvocation_fetchCustomSmartListsInGroup
REMSmartListsDataViewInvocationResult
REMDAChangeTrackingHelper
UnitTests
REMDAChangeTrackingHelper_Additions
REMDAChangeTrackableFetchableModel
REMDAChangeTrackableModel
REMDAChangedModelObjectResult
REMDAChangedIdentifierResult
REMDAChangeTrackingHelper_PrivateAdditions
_REMDAChangeTrackableModel
REMDAShareeTombstone
REMDAAssignmentTombstone
REMDAHashtagTombstone
REMEventKitBridgingDataView
REMEventKitBridgingDataViewInvocation_fetchLists
REMEventKitBridgingDataViewInvocation_fetchReminders
REMEventKitBridgingDataViewInvocation_fetchIncompleteRemindersWithDueDate
REMEventKitBridgingDataViewInvocation_fetchCompletedRemindersWithCompletionDate
REMError
REMAssignment
CDIngestorExtensions
REMResolutionToken
REMRadarUtilities
_REMInProgressSaveRequestsContainer
REMDatabaseMigrationAccountInfo
REMDatabaseMigrationContext
REMFetchResult
REMAccount
REMAccountGroupContext
REMAccountTemplatesContext
REMAccountTypeHost
REMReplicaIDHelper
REMReplicaManagerClient
REMHumanReadableIdentifier
REMDistributedEvaluationCollectionOptions
REMReminderFetchOptions
REMTemplateConfiguration
REMTTParagraphStyle
REMXPCDaemonController
REMDaemonController
REMXPCDaemonControllerPerformerResolver
REMXPCDaemonControllerPerformerResolver_store
REMXPCDaemonControllerPerformerResolver_debug
REMXPCDaemonControllerPerformerResolver_changeTracking
REMXPCDaemonControllerPerformerResolver_sync
REMXPCDaemonControllerPerformerResolver_indexing
REMXPCDaemonControllerExportedObject
REMXPCClient
REMStructuredLocation
REMFetchMetadata
REMCRMutableAttributedString
REMColor
REMUserDefaults
REMDaemonUserDefaults
REMUserDefaultsObserver
REMUserDefaultsObserveToken
REMTemplate
REMXPCStorePerformer
REMXPCStorePerformerInterface
REMAppleAccountUtilities
_REMNSPersistentHistoryTransactionStorage
REMNSPersistentHistoryTransaction
REMOrderedIdentifierMap
REMTemplatePublicLink
REMHashtag
REMHashtagProtocol
REMSharedToMeReminderPlaceholder
CRDT_Additions
REMCRMergeableDataType
CRDataType
CREquatable
CRCoding
REMRecurrenceRule
REMXPCDaemon
REMXPCDaemonInterface
REMXPCClientInterface
REMManualOrdering
REMNSPersistentHistoryToken
REMSystemUtilities
REMXPCDebugPerformer
REMXPCDebugPerformerInterface
REMXPCSuggestedAttributesPerformer
REMXPCSuggestedAttributesPerformerInterface
REMContactRepresentation
Base64
REMDataAccessBehaviorManager
REMSmartListStorage
REMAccountSortDescriptor
REMSaveRequest
AddAccount
AddAccount_BackwardCompatibility
AddAccount_TestingSupport
AddAccount_Internal
SmartList
REMObjectID
REMFetchRequest
_REMFetchExecutor
REMListStorage
REMReminderPredicateDescriptor
REMXPCStorageClasses
REMSiriSearchLimitedDataView
REMSiriSearchLimitedDataViewInvocation_fetchReminders
REMList
REMListAppearanceContext
REMListSublistContext
REMListCalDAVNotificationContext
REMListShareeContext
REMSnoozeTimeUtils
REMCRReminderIDList
REMCRMergeableStringDocument
REMMutableCRMergeableStringDocument
DataConversion
REMDispatchQueue
REMPaths
REMDisplayDateUtils
REMSmartListChangeItem
REMMergeableOrderingNode
REMSmartListCustomContextChangeItem
REMAccountsDataView
REMAccountsDataViewInvocationREMObjectIDOnlyResult
REMAccountsDataViewInvocationResult
REMAccountsDataViewInvocation_fetchAll
REMAccountsDataViewInvocation_fetchPrimaryActiveCloudKitAccount
REMAccountsDataViewInvocation_fetchActiveCloudKitAccountObjectIDs
REMAccountsDataViewInvocation_fetchByObjectID
REMAccountsDataViewInvocation_fetchByExternalIdentifier
REMStoreInvocationValueStorage
REMStoreInvocation
REMStoreInvocationResult
REMListBadge
SecureRandom
REMListChangeItem
REMListAppearanceContextChangeItem
REMListSublistContextChangeItem
REMListCalDAVNotificationContextChangeItem
REMListShareeContextChangeItem
AccountDataMoving
UnitTestsExtensions
REMTemplatesDataView
REMTemplatesDataViewInvocation_fetchTemplatesInAccount
REMTemplatesDataViewInvocation_fetchByObjectIDs
REMTemplatesDataViewInvocationResult
REMTemplateStorage
REMExporting
ICSExport
REMReminder
REMReminderSubtaskContext
REMReminderAttachmentContext
REMReminderFlaggedContext
REMReminderAssignmentContext
REMReminderHashtagContext
REMCRUndo
REMMutableCRUndo
REMTipKitDataView
REMTipKitDataViewInvocation_fetchListsCount
REMTipKitDataViewInvocation_fetchListsWithCustomBadgeCount
REMTipKitDataViewInvocation_fetchUncompletedRemindersCount
REMTipKitDataViewInvocation_fetchCompletedRemindersCount
REMTipKitDataViewInvocation_fetchCompletedRemindersCountInList
REMTipKitDataViewInvocation_fetchCustomSmartListsCount
REMTipKitDataViewInvocation_fetchHashtagsCount
REMUserActivity
REMSharee
REMShareeNameCleanup
REMResolutionTokenMap
REMExternalSyncMetadataUtils
REMListsDataView
REMListsDataViewInvocation_fetchListsInAccount
REMListsDataViewInvocation_fetchListsInGroup
REMListsDataViewInvocation_fetchByObjectIDs
REMListsDataViewInvocation_fetchDefaultList
REMListsDataViewInvocation_fetchDefaultListRequiringCloudKit
REMListsDataViewInvocation_fetchUserSelectableDefaultLists
REMListsDataViewInvocation_dataAccessFetchListsInAccount
REMListsDataViewInvocation_dataAccessFetchByObjectID
REMListsDataViewInvocation_changeTrackingFetchByObjectIDIncludingConcealed
REMListsDataViewInvocation_dataAccessFetchByExternalIdentifier
REMListsDataViewInvocation_userActivityFetchByExternalIdentifier
REMListsDataViewInvocation_debugFetchPhantomLists
REMListsDataViewInvocationResult
REMListsDataViewInvocation_fetchByTemplateObjectID
TTREMHashtag
TTModelAttributeComparable
CRCoderArchiver
CRDictionaryElement
CRDictionary
NSFastEnumeration
TTVectorTimestampElement
TTVectorTimestamp
TTVectorMultiTimestamp
Gzip
TTMergeableString
TTArray
TTMergeableStringDelegate
TTMergeableStringSelection
TTMergeableStringIDTracker
TTVersionedDocument
TTVectorTimestampPersistenceAdditions
TTParagraphStylePersistenceAdditions
TTMergeableStringUndoGroup
TTMergeableStringUndoCommand
CRTTCompatibleDocument
TTAttributedStringPersistenceAdditions
CRArray
CRCoderUnarchiverCompletionHandler
CRCoderUnarchiver
CRSet
CRRegisterLatest
CRRegisterMultiValue
CRRegisterMultiValueLeast
RemindersAdditions
TTParagraphStyle
NSMutableCopying
TTMutableParagraphStyle
CRRegisterGreatest
CRRegisterLeast
TTMergeableStringUndoAttributeCommand
PersistenceAdditions
TTMergeableAttributedString
CRObject
CRIdentifiable
TTFont
CRDocument
TTMergeableStringVersionedDocument
CRRegister
CRReplica
TTMergeableStringPersistenceAdditions
CRTimestamp
CRVectorTimestampElement
CRVectorTimestamp
CRCoder
CppConvenience
TTMergeableUndoString
CRTombstoneOrderedSet
TTMergeableStringUndoEditCommand
TTCRVectorTimestamp
TTCRVectorMultiTimestamp
ICProtobufUtilities
CRConstant
NSUUIDAdditions
length
isEqualToString:
lowercaseString
displayNameFromListName:isPlaceholder:
displayNameFromAccountName:
initWithDayOfTheWeek:weekNumber:
raise:format:
init
decodeIntegerForKey:
dayOfTheWeek
encodeInteger:forKey:
weekNumber
iCalendarValueFromDayOfTheWeek:
stringWithFormat:
iCalendarDescription
dayOfWeek:
dayOfWeek:weekNumber:
supportsSecureCoding
copyWithZone:
encodeWithCoder:
initWithCoder:
TB,R
description
hash
isEqual:
_dayOfTheWeek
_weekNumber
Tq,R,N,V_dayOfTheWeek
Tq,R,N,V_weekNumber
initWithType:ascending:
decodeBoolForKey:
type
ascending
encodeBool:forKey:
sortDescriptorSortingByNameAscending:
sortDescriptorSortingByOrderingInAccountAscending:
_ascending
_type
Tq,R,N,V_type
TB,R,N,V_ascending
cdEntityName
reminderIdentifier
oldListIdentifier
oldExternalIdentifier
T@"NSString",R,N
T@"NSString",R,D,N
copy
count
arrayWithCapacity:
countByEnumeratingWithState:objects:count:
clock
setClock:
subclock
setSubclock:
addObject:
initWithCRVectorTimestampElements:
elements
objectAtIndexedSubscript:
rem_compareToVectorTimestampElement:
list:isCompatibleToList:
compareList:toList:
firstObject
componentsJoinedByString:
initWithTTVectorTimestampElements:
encodeIntoEntryArchive:
initWithEntryArchive:
setElements:
.cxx_destruct
_elements
T@"NSArray",C,N,V_elements
replicaUUIDIndex
clockElementList
initWithReplicaUUIDIndex:clockElementList:inUse:forClient:
inUse
persistenceDescription
hasEqualPersistedPropertiesAs:
setReplicaUUIDIndex:
setClockElementList:
setInUse:
client
setClient:
_inUse
_replicaUUIDIndex
_clockElementList
_client
TI,N,V_replicaUUIDIndex
T@"REMClockElementList",&,N,V_clockElementList
TB,N,V_inUse
T@"<REMReplicaManagerClient>",N,V_client
uuid
objectForKeyedSubscript:
disablesInMemoryOnlyCheck
shouldUseNewInMemoryOnlyReplicaManager
setIsPersistable:
fetchReplicaManagerForAccountID:error:
managerData
replicaManagerWithSerializedData:error:
dictionary
setObject:forKeyedSubscript:
mainBundle
bundleIdentifier
commonInit
orderedSet
orderedSetWithCapacity:
initWithUUIDBytes:
dictionaryWithCapacity:
initWithBytes:length:encoding:
internalErrorWithDebugDescription:
array
numberWithUnsignedInt:
replicaUUIDs
getUUIDBytes:
replicaEntries
UTF8String
lengthOfBytesUsingEncoding:
l_checkoutReplicaUUIDForClient:
performLocked:
crdtID
objectForKey:
setObject:forKey:
objectAtIndex:
indexOfObjectPassingTest:
indexOfObject:
clockElementListForReplicaUUID:
UUID
currentVersion
setCurrentVersion:
replicaUUID
l_updateVersionOfEntry:forClient:
modifyReplicaEntryForClient:block:
l_replicaUUIDsDescription
l_replicaEntriesDescriptionForPersistence:
maxLastSavedVersion
enumerateObjectsUsingBlock:
enumerateKeysAndObjectsUsingBlock:
isPersistable
hasUnsavedChanges
isRepresentingDiscardedReplicaManager
bytes
initWithArchive:error:
version
setMaxLastSavedVersion:
encodeIntoArchive:
initWithLength:
mutableBytes
initWithManagerData:version:
exceededMaxSerializedSize
serializedDataRepresentingDiscardedReplicaManager
l_serializedDataWithError:
setExceededMaxSerializedSize:
numberWithBool:
numberWithUnsignedLongLong:
UUIDString
arrayWithObject:
replicaManagerForAccountID:store:
unsavedReplicaManagersForAccountIDs:
setDisablesInMemoryOnlyCheck:
replicaManagerIfLoadedForAccountID:
setReplicaManager:forAccountID:
checkoutReplicaUUIDForClient:
updateVersionForClient:
returnReplicaForClient:
serializedDataCappedAtMaxSize:error:
didSaveVersion:
replicaEntryCount
availabilityOfFirstReplicaForCRDTID:
clockOfFirstReplicaForCRDTID:
hasEqualPersistedEntriesAs:
addRandomReplicaEntriesWithCount:
ivarLock
setIvarLock:
setReplicaUUIDs:
setReplicaEntries:
_isPersistable
_exceededMaxSerializedSize
_ivarLock
_replicaUUIDs
_replicaEntries
_currentVersion
_maxLastSavedVersion
T{os_unfair_lock_s=I},N,V_ivarLock
TB,N,V_isPersistable
T@"NSMutableOrderedSet",&,N,V_replicaUUIDs
T@"NSMutableDictionary",&,N,V_replicaEntries
TQ,N,V_currentVersion
TQ,N,V_maxLastSavedVersion
TB,N,V_exceededMaxSerializedSize
encodeObject:forKey:
encodeInt64:forKey:
decodeObjectOfClass:forKey:
decodeInt64ForKey:
data
_managerData
_version
TB,R,N
T@"NSData",R,N,V_managerData
TQ,R,N,V_version
store
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
replicaManagerForAccountID:
initWithStore:
_store
T@"REMStore",R,N,V_store
crdt
summary
rem_nonNilSummary
objectID
initWithData:options:error:
saveRequest
updateLastModifiedDates
setUpdateLastModifiedDates:
cloneCompletedRecurrentRemindersAtSave
setCloneCompletedRecurrentRemindersAtSave:
calendar
componentKeys
componentForKey:
addReminderWithTitle:toListChangeItem:
_populateReminderChangeItem:withICSTodoItem:icsCalendar:isNew:withOptions:
_iCalendarDataFromICSTodoItem:icsCalendar:
setImportedICSData:
updateReminderChangeItem:fromICSTodo:icsCalendar:isNew:withOptions:
recurrence_id
rem_dateWithICSCalendar:
timeIntervalSinceReferenceDate
setDaCalendarItemUniqueIdentifier:
componentsSeparatedByString:
x_calendarserver_access
setX_calendarserver_access:
arrayWithObjects:count:
setComponents:options:
setTitleAsString:
setNotesAsString:
last_modified
dtstamp
rem_dateAsUTC
setLastModifiedDate:
created
setCreationDate:
priority
setPriority:
icsDueOrEndDateWithICSCalendarItem:options:
components
setDueDateComponents:
systemTimeZoneForDate:
dueDateComponents
setTimeZone:
updateUIDInReminderChangeItem:fromICSComponent:icsCalendar:
setIcsUrl:
_populateAlarmsInReminderChangeItem:withICSAlarms:icsCalendar:
_populateRecurrencesInReminderChangeItem:withICSComponent:icsCalendar:
completed
percentComplete
status
date
setCompleted:
setCompletionDate:
x_apple_activity
value
initWithUniversalLink:
setUserActivity:
x_apple_appLinkData
initWithUserActivityData:
x_apple_sort_order
setIcsDisplayOrder:
listChangeItem
setRemindersICSDisplayOrderChanged:
valueForKey:
unsignedIntegerValue
dtend
removeAllAlarms
action
trigger
isDurationBased
_addAlarmsToReminderChangeItem:withICSAlarm:icsCalendar:
x_wr_alarmuid
makeUID
timeInterval
initWithTimeInterval:
addAlarmWithTrigger:
setAlarmUID:
initWithValue:
initWithDateComponents:
x_apple_proximity
x_apple_structured_location
location
initWithStructuredLocation:proximity:
initWithEvent:
acknowledged
setAcknowledgedDate:
relatedTo
setOriginalAlarmUID:
removeAllRecurrenceRules
rrule
accountID
addRecurrenceRule:
importRemindersFromICSData:insertIntoListChangeItem:error:
updateReminderChangeItem:fromICSData:isNew:withOptions:error:
write
title
initWithTitle:
scheme
absoluteString
substringFromIndex:
rangeOfString:
substringToIndex:
doubleValue
setLatitude:
setLongitude:
parameterValueForName:
setRadius:
address
setAddress:
routing
setRouting:
setReferenceFrameString:
setContactLabel:
mapKitHandle
setMapKitHandle:
freq
interval
integerValue
wkst
until
dateByAddingTimeInterval:
recurrenceEndWithEndDate:
recurrenceEndWithOccurrenceCount:
byday
weekday
number
newObjectID
bymonthday
bymonth
byweekno
byyearday
bysetpos
initRecurrenceRuleWithObjectID:accountID:reminderID:frequency:interval:firstDayOfTheWeek:daysOfTheWeek:daysOfTheMonth:monthsOfTheYear:weeksOfTheYear:daysOfTheYear:setPositions:end:
initWithCalendar:
ICSDataWithOptions:
localizedStringForKey:value:table:
bundleForClass:
testIndexDummyItemWithCompletion:
reindexAllSearchableItemsWithAcknowledgementHandler:
reindexSearchableItemsWithIdentifiers:acknowledgementHandler:
deleteAllSearchableItemsWithCompletionHandler:
interfaceWithProtocol:
interface
changeTracking
editor
alarmEngine
timelineEngine
housekeepingingActivityScheduler
extraneousAlarmCleaner
inlineTagAutoConvertEngine
templates
accountPlugin
utility
suggestedAttributes
cloudkit
cloudkitCollaboration
migration
dataAccess
userAction
siriKit
applicationShortcut
notification
search
account
analytics
scripting
T@"NSObject<OS_os_log>",R,N
database
sync
container
stagedLightweightCoreDataMigration
read
OVERSIZED
_defaultDescriptionForREMChangeErrorCode:
errorWithREMChangeErrorCode:description:underlyingError:
numberWithInteger:
initWithDomain:code:userInfo:
errorWithREMChangeErrorCode:
errorWithREMChangeErrorCode:debugDescription:
errorWithREMChangeErrorCode:underlyingError:
setWithArray:
_trackAccountCapabilities:forObjectID:
initWithTarget:keysToObserve:includeInitial:
initWithSaveRequest:storage:accountCapabilities:changedKeysObserver:
initWithObjectID:listID:accountID:
titleReplicaIDSource
initWithReplicaIDSource:string:
setTitleDocument:
lowLevelAddReminderIDToOrdering:withParentReminderChangeItem:
accountCapabilities
initWithSaveRequest:storage:accountCapabilities:observeInitialValues:
reminderChangeItem
listID
setParentReminderID:
_updateListWithReminderChangeItem:
copyInto:
storage
_trackedAccountCapabilitiesForObjectID:
initWithAccountType:
datesDebugDescriptionInTimeZone:
titleAsString
insertsCompletedRecurrentCloneAtTail
parentReminderID
_trackedReminderChangeItemForObjectID:
subtaskContext
addReminderWithTitle:toReminderSubtaskContextChangeItem:reminderObjectID:
insertReminderChangeItem:beforeReminderChangeItem:
addReminderWithTitle:toListChangeItem:reminderObjectID:
insertReminderChangeItem:adjacentToReminderChangeItem:isAfter:withParentReminderChangeItem:
assignmentContext
currentAssignment
assigneeID
originatorID
addAssignmentWithAssigneeID:originatorID:status:
assignedDate
setAssignedDate:
setTitle:
notes
setNotes:
creationDate
lastModifiedDate
isCompleted
completionDate
startDateComponents
setStartDateComponents:
lastBannerPresentationDate
setLastBannerPresentationDate:
userActivity
icsUrl
recurrenceRules
initWithRecurrenceRule:objectID:accountID:reminderID:
_copyAlarmsInto:
attachmentContext
removeAllAttachments
attachments
initWithAttachment:objectID:accountID:reminderID:
addAttachment:
flaggedContext
flagged
setFlagged:
removeAllAssignments
hashtagContext
removeAllHashtags
hashtags
name
initWithObjectID:accountID:reminderID:type:name:
addHashtag:
objectIdentifier
setObjectIdentifier:
initWithAttributedString:
rem_replaceTTREMHashtag:withTTREMHashtag:
alarms
initWithCapacity:
initWithAlarm:objectID:
alarmUID
originalAlarmUID
setAlarms:
isSnooze
isTemporal
numberWithDouble:
containsObject:
dateComponents
rem_stringRepresentation
rem_compare:
supportsMultipleDateAlarmsOnRecurrence
addObjectsFromArray:
arrayWithArray:
changedKeysObserver
_trackedListChangeItemForObjectID:
titleDocument
attributedString
isEqualToAttributedString:
mutableDocument
initWithReplicaIDSource:
replicaManagerProvider
setReplicaManagerProvider:
wipeAndReplaceWithString:
setPrimaryLocaleInferredFromLastUsedKeyboard:
primaryLocaleInferredFromLastUsedKeyboard
_editDocument:replicaIDSource:newString:
keyDidChange:
initWithString:
notesDocument
notesAsString
notesReplicaIDSource
setNotesDocument:
rem_gregorianEquivalent
updateDisplayDate
rem_isAllDayDateComponents
setAllDay:
timeZone
defaultTimeZone
removeAllSnoozeAlarms
removeAlarm:updateDisplayDate:
icsDisplayOrder
initRecurrenceRuleWithObjectID:accountID:reminderID:frequency:interval:end:
addRecurrenceRuleWithFrequency:interval:firstDayOfTheWeek:daysOfTheWeek:daysOfTheMonth:monthsOfTheYear:weeksOfTheYear:daysOfTheYear:setPositions:end:
insertRecurrenceRule:afterRecurrenceRule:
mutableCopy
insertObject:atIndex:
setRecurrenceRules:
removeObject:
rem_dateWithDateComponents:timeZone:
laterDate:
nextRecurrentDueDateAfter:dueDate:timeZone:allDay:recurrenceRules:
timeIntervalSinceDate:
rem_dateComponentsWithDate:timeZone:isAllDay:
rem_strippingTimeZone
initWithTrigger:
addAlarm:
addAlarm:updateDisplayDate:
supportsSubtasks
isSubtask
initWithReminderChangeItem:
supportsAttachments
supportsFlagged
supportsAssignments
supportsHashtags
lowLevelRemoveReminderIDFromOrdering:
setListID:
removeFromListAllowingUndo
willChangeValueForKey:
didChangeValueForKey:
removeFromParentReminderAllowingUndo
changedKeys
isSaved
setValue:forKey:
entityName
cdEntityNameForSavedReminder
resolutionTokenKeyForChangedKeyInREMReminderChangeItemOfREMCDSavedReminder:
resolutionTokenKeyForChangedKeyInREMReminderChangeItemOfREMCDReminder:
isUnsupported
initialize
resolutionTokenKeyForChangedKey:
resolutionTokenMap
setResolutionTokenMap:
resolutionTokenMapData
setResolutionTokenMapData:
T@"REMResolutionTokenMap",&,N
T@"NSData",&,N
shallowCopyWithSaveRequest:
externalIdentifier
setExternalIdentifier:
externalModificationTag
setExternalModificationTag:
daSyncToken
setDaSyncToken:
daPushKey
setDaPushKey:
T@"NSString",C,N
minimumSupportedVersion
effectiveMinimumSupportedVersion
Tq,R,N
setMinimumSupportedVersion:
Tq,N
initWithObjectID:title:insertIntoListChangeItem:
initWithObjectID:title:insertIntoParentReminderSubtaskContextChangeItem:
initWithReminderChangeItem:insertIntoListChangeItem:
initWithReminderChangeItem:insertIntoParentReminderSubtaskContextChangeItem:
duplicateForRecurrenceUsingReminderID:
dedupedAndFilteredNonSnoozeAlarms:
setDueDateComponentsWithAlarmsIfNeeded:
addRecurrenceRuleWithFrequency:interval:end:
addRecurrenceRuleWithFrequency:interval:daysOfTheWeek:daysOfTheMonth:monthsOfTheYear:weeksOfTheYear:daysOfTheYear:setPositions:end:
insertRecurrenceRule:beforeRecurrenceRule:
removeRecurrenceRule:
nextRecurrentAdvanceAmountForDateComponents:afterDate:
nextRecurrentDueDateComponentsAfter:
setAlarms:updateDisplayDate:
removeAlarm:
removeFromList
updateAccountCapabilities:
removeFromParentReminder
forwardingTargetForSelector:
valueForUndefinedKey:
setValue:forUndefinedKey:
setStorage:
setChangedKeysObserver:
_saveRequest
_storage
_changedKeysObserver
T@"REMChangedKeysObserver",&,N,V_changedKeysObserver
T@"REMObjectID",&,D,N
T@"NSArray",&,D,N
assignments
T@"NSSet",&,D,N
subtaskIDsToUndelete
hashtagIDsToUndelete
titleDocumentData
T@"NSData",&,D,N
notesDocumentData
T@"NSString",&,N
allDay
TB,R,D,N
TQ,D,N
importedICSData
remObjectID
T@"REMObjectID",R,D,N
T@"NSDate",C,D,N
T@"REMReminderStorage",&,N,V_storage
T@"REMAccountCapabilities",R,D,N
T@"REMCRMergeableStringDocument",&,D,N
contactHandles
T@"REMContactRepresentation",C,D,N
Tq,D,N
daCalendarItemUniqueIdentifier
T@"NSString",C,D,N
T@"REMUserActivity",C,D,N
siriFoundInAppsData
T@"NSData",C,D,N
siriFoundInAppsUserConfirmation
displayDate
T@"REMDisplayDate",R,C,D,N
isOverdue
isRecurrent
legacyNotificationIdentifier
T@"NSString",R,C,D,N
T@"NSURL",C,D,N
T@"REMReminderAssignmentContextChangeItem",R,N
T@"REMReminderHashtagContextChangeItem",R,N
T@"REMSaveRequest",R,N,V_saveRequest
T@"REMListChangeItem",R,N
T@"NSAttributedString",C,N
TB,D,N,GisCompleted
T@"NSDateComponents",C,D,N
T@"NSArray",R,D,N
T@"REMReminderAttachmentContextChangeItem",R,N
T@"REMReminderSubtaskContextChangeItem",R,N
T@"REMReminderFlaggedContextChangeItem",R,N
T@"REMResolutionTokenMap",&,D,N
Tq,R,D,N
setSiriFoundInAppsUserConfirmation:
confirmForSiriFoundInAppsAppendingToList:
rejectForSiriFoundInApps
_listChangeItem
undeleteReminderWithID:usingUndo:
setByAddingObject:
setSubtaskIDsToUndelete:
addReminderChangeItem:
insertReminderChangeItem:afterReminderChangeItem:
undeleteSubtaskWithID:usingUndo:
setReminderChangeItem:
_reminderChangeItem
T@"REMReminderChangeItem",&,N,V_reminderChangeItem
predicateWithBlock:
filteredArrayUsingPredicate:
attachmentsOfClass:
resourceValuesForKeys:error:
newObjectIDForFileAttachment
unsignedLongLongValue
initWithObjectID:accountID:reminderID:UTI:fileSize:fileURL:data:
insertAttachment:afterAttachment:
newObjectIDForImageAttachment
initWithObjectID:accountID:reminderID:UTI:fileSize:fileURL:data:width:height:
removeURLAttachments
addURLAttachmentWithURL:
newObjectIDForURLAttachment
initWithObjectID:accountID:reminderID:url:metadata:
removeAllAttachmentsWithClass:
setAttachments:
removeObjectAtIndex:
filterUsingPredicate:
newObjectIDForSavedAttachment
fileAttachments
imageAttachments
urlAttachments
addFileAttachmentWithURL:error:
addFileAttachmentWithData:uti:
addImageAttachmentWithURL:width:height:error:
addImageAttachmentWithData:uti:width:height:
setURLAttachmentWithURL:
insertAttachment:beforeAttachment:
removeAttachment:
mutableAttachments
setMutableAttachments:
_mutableAttachments
T@"NSMutableArray",&,N,V_mutableAttachments
T@"NSArray",R,N
orderValue
setAssignments:
initWithObjectID:accountID:reminderID:assigneeID:originatorID:status:
addAssignment:
addAssignmentWithAssignee:originator:status:
removeAssignment:
mutableAssignments
setMutableAssignments:
_mutableAssignments
T@"NSMutableSet",&,N,V_mutableAssignments
T@"REMAssignment",R,N
T@"NSSet",R,N
setHashtags:
initWithObjectID:accountID:reminderID:type:name:creationDate:
setHashtagIDsToUndelete:
addHashtagWithType:name:
addHashtagWithType:name:creationDate:
removeHashtag:
undeleteHashtagWithID:
cancelUndeleteHashtagWithID:
mutableHashtags
setMutableHashtags:
_mutableHashtags
T@"NSMutableSet",&,N,V_mutableHashtags
reminderCount
hasDisplayDate
hasHashtags
hasLocationTriggersOrVehicleEventTriggers
hasImageAttachments
initWithReminderCount:hasDisplayDate:hasHashtags:hasLocationTriggersOrVehicleEventTriggers:hasImageAttachments:
_hasDisplayDate
_hasHashtags
_hasLocationTriggersOrVehicleEventTriggers
_hasImageAttachments
_reminderCount
Tq,R,N,V_reminderCount
TB,R,N,V_hasDisplayDate
TB,R,N,V_hasHashtags
TB,R,N,V_hasLocationTriggersOrVehicleEventTriggers
TB,R,N,V_hasImageAttachments
initWithObjectIdentifier:
attributeName
attributeFromHashtag:
attributeValue:hasEqualHashtagObjectIdentifierIn:
_objectIdentifier
T@"NSString",R,N,V_objectIdentifier
storeQueue
defaultCenter
postNotificationName:object:
weakSharedInstance
syncDebugPerformerWithReason:errorHandler:
createIsolatedStoreContainerWithCompletion:
destroyIsolatedStoreContainerWithToken:completion:
initWithStoreContainerToken:
initWithDaemonController:storeContainerToken:
userInteractiveDaemonController
storeContainerToken
storeGeneration
l_inProgressSaveRequestsContainer
daemonController
invalidate
setDaemonController:
nukeDatabase:
fetchAllAccountsWithError:
fetchAllAccountsForAccountManagementWithError:
fetchAccountsWithError:
fetchAllAccountsForDumpingWithError:
siriFoundInAppsListID
fetchListWithObjectID:error:
latestSaveInProgressAccount:
_withInProgressSaveRequestContainer:
latestSaveInProgressList:
latestSaveInProgressReminder:
latestSaveInProgressReminderForReminderChangeItem:
fetchPrimaryActiveCloudKitAccountREMObjectIDWithError:
fetchPrimaryActiveCloudKitAccountWithError:
fetchActiveCloudKitAccountObjectIDsWithFetchOption:error:
fetchAccountWithObjectID:error:
fetchAccountsWithObjectIDs:error:
fetchListsWithObjectIDs:error:
fetchCustomSmartListWithObjectID:error:
fetchCustomSmartListsWithError:
fetchRemindersWithObjectIDs:error:
fetchRemindersMatchingPredicateDescriptor:sortDescriptors:options:error:
fetchRemindersWithParentReminderIDs:error:
fetchReminderWithObjectID:error:
_xpcSyncStorePerformerWithReason:errorHandler:
fetchReplicaManagerForAccountID:completion:
fetchReplicaManagersForAccountID:bundleID:completion:
_incrementStoreGeneration
saveRequestSaveDidStart:
syncToCloudKit
_saveAccountChangeItems:listChangeItems:smartListChangeItems:templateChangeItems:reminderChangeItems:author:replicaManagerProvider:synchronously:syncToCloudKit:performer:completion:
saveRequestSaveDidFinish:
asyncStorePerformerWithReason:loadHandler:errorHandler:
fetchResultByExecutingFetchRequest:error:
fetchExecutor
resultsFromFetchResult:inStore:error:
executeFetchRequest:error:
executeFetchRequest:completion:
assertOnMainThreadFetches
_isUserInteractiveStore
cStringUsingEncoding:
performInvocation:completion:
resultData
resultStorages
performSwiftInvocation:withParametersData:storages:completion:
fetchRemindersWithError:
localizedDescription
enumerateAllListsWithBlock:
_enumerateAllListsIncludingGroups:withBlock:
fetchListsWithError:
isGroup
sublistContext
syncStorePerformerWithReason:errorHandler:
_addChangeItemChangedKeys:objectID:toChangedKeysMap:
pinnedListsContext
unsavedManualOrdering
templatesContextChangeItem
initWithArray:
isSubsetOfSet:
manualOrdering
mode
saveAccountStorages:listStorages:smartListStorages:templateStorages:reminderStorages:changedKeys:replicaManagers:author:mode:synchronously:syncToCloudKit:completion:
fetchShareForObjectWithID:completion:
createShareForObjectWithID:appIconData:completion:
updateShare:accountID:completion:
stopShare:accountID:completion:
acceptShareWithMetadata:completion:
daemonUserDefaults
siriShouldRouteIntentsToNewRemindersApp
compressedDistributedEvaluationDataWithOptions:completion:
fetchEligibleDefaultListsWithError:
fetchDefaultListWithError:
fetchDefaultListRequiringCloudKitWithAccountID:error:
accountTypeHost
isPrimaryCloudKit
isCloudBased
isLocal
nonUserInteractiveStore
anchoredBubbleEnabledWithCompletion:
storeDidChangeNotificationName
createIsolatedStoreContainerWithError:
destroyIsolatedStoreContainerWithToken:error:
initUserInteractive:
initWithDaemonController:
nukeDatabase
fetchAccountsIncludingInactive:error:
fetchAccountsForDumpingWithError:
fetchSiriFoundInAppsListWithError:
refreshAccount:
refreshList:
refreshReminder:
optimisticallyMaterializeReminderChangeItem:
fetchReplicaManagersForAccountID:bundleID:error:
saveSaveRequest:accountChangeItems:listChangeItems:smartListChangeItems:templateChangeItems:reminderChangeItems:author:replicaManagerProvider:error:
saveSaveRequest:accountChangeItems:listChangeItems:smartListChangeItems:templateChangeItems:reminderChangeItems:author:replicaManagerProvider:queue:completion:
resultsIndexedByObjectIDFromExecutingFetchRequest:error:
countForFetchRequest:error:
resultFromPerformingInvocation:error:
resultFromPerformingSwiftInvocation:parametersData:storages:error:
enumerateAllRemindersWithBlock:
enumerateAllGroupsAndListsWithBlock:
fetchShareForListWithID:error:
createShareForListWithID:appIconData:error:
updateShare:accountID:queue:completion:
stopShare:accountID:queue:completion:
acceptShareWithMetadata:queue:completion:
everConnectedToCar
compressedDistributedEvaluationDataWithOptions:error:
fetchDefaultListRequiringCloudKitWithError:
fetchDefaultListRequiringCloudKitAccountWithAccountID:error:
fetchDefaultAccountWithError:
anchoredBubbleCloudOverridesWithCompletion:
lock
setMode:
setAssertOnMainThreadFetches:
setNonUserInteractiveStore:
_assertOnMainThreadFetches
_lock
_storeContainerToken
_l_inProgressSaveRequestsContainer
_daemonController
_mode
_nonUserInteractiveStore
T@"REMStoreContainerToken",R,N,V_storeContainerToken
T@"_REMInProgressSaveRequestsContainer",R,N,V_l_inProgressSaveRequestsContainer
T{os_unfair_lock_s=I},R,N,V_lock
T@"<REMDaemonController>",&,N,V_daemonController
TQ,N,V_mode
TB,N,V_assertOnMainThreadFetches
T@"REMStore",&,N,V_nonUserInteractiveStore
_respondToCalDAVSharedList:withResponse:queue:completion:
isCalDav
sharingStatus
invalidParameterErrorWithDescription:
acceptCalDAVShareWithCalendarURL:acAccountID:completion:
rejectCalDAVShareWithCalendarURL:acAccountID:completion:
acceptCalDAVSharedList:queue:completion:
rejectCalDAVSharedList:queue:completion:
provideChangeTrackingForAccountID:clientName:transactionAuthorKeysToExclude:
initWithClientName:accountIdentifier:
initWithClientID:daemonController:transactionAuthorKeysToExclude:
initWithClientID:daemonController:
fetchListIncludingConcealedWithObjectID:includeMarkedForDeletionOnly:error:
fetchReminderIncludingConcealedWithObjectID:error:
provideChangeTrackingForAccountID:clientName:
fetchListIncludingMarkedForDeleteWithObjectID:error:
fetchListIncludingConcealedWithObjectID:error:
fetchReminderIncludingMarkedForDeleteWithObjectID:error:
fetchRemindersIncludingUnsupportedWithObjectIDs:error:
provideAnonymousChangeTrackingWithTransactionAuthorKeysToExclude:
notifyOfInteractionWithPeople:force:completion:
_shouldNotifyReminddOfInteractionWithPeople
notifyOfInteractionWithPeople:completion:
notifyOfInteractionWithPeople:
domain
code
fetchListsWithCustomBadgeCountWithError:
fetchCompletedRemindersCountWithError:
fetchCustomSmartListsCountWithError:
fetchHashtagsCountWithError:
hasActiveCloudKitAccountForTipKitWithError:
containsListWithCustomBadgeForTipKitWithError:
completedRemindersCountForTipKitWithError:
containsCustomSmartListForTipKitWithError:
containsHashtagsForTipKitWithError:
fetchRemindersWithListIDs:error:
fetchIncompleteRemindersWithDueDateFrom:to:withListIDs:error:
fetchCompletedRemindersWithCompletionDateFrom:to:withListIDs:error:
fetchAllRemindersWithExternalIdentifier:error:
fetchListsForEventKitBridgingWithError:
fetchRemindersForEventKitBridgingWithListIDs:error:
fetchIncompleteRemindersForEventKitBridgingWithDueDateFrom:to:withListIDs:error:
fetchCompletedRemindersForEventKitBridgingWithCompletionDateFrom:to:withListIDs:error:
fetchRemindersMatchingTitle:dueAfter:dueBefore:isCompleted:hasLocation:location:error:
fetchAccountWithExternalIdentifier:error:
fetchAccountsWithExternalIdentifiers:error:
fetchListsIncludingSpecialContainersInAccount:error:
fetchListIncludingSpecialContainerWithObjectID:error:
fetchReminderWithExternalIdentifier:inList:error:
fetchReminderWithExternalIdentifier:error:
fetchRemindersWithExternalIdentifiers:inList:error:
fetchRemindersWithExternalIdentifiers:error:
fetchReminderWithDACalendarItemUniqueIdentifier:inList:error:
fetchRemindersWithDACalendarItemUniqueIdentifiers:inList:error:
MCIsManagedAccountWithObjectID:completion:
newAppShouldTakeoverEKReminderNotifications
dataaccessDaemonStopSyncingReminders
MCIsManagedAccountWithObjectID:error:
notificationsEnabled
isEventKitSyncEnabledForReminderKit
initWithObjectIDs:
setAllowConcealedObjects:
fetchAssignmentsWithObjectIDs:includeConcealedObjects:error:
fetchHashtagsWithObjectIDs:includeConcealedObjects:error:
fetchAllListsWithExternalIdentifier:inAccount:error:
fetchAllListsWithExternalIdentifier:error:
updateAccountWithAccountID:restartDA:completion:
syncDataAccessAccountsWithAccountIDs:bypassThrottler:completion:
asyncSyncInterfacePerformerWithReason:loadHandler:errorHandler:
updateAccountWithAccountID:completion:
triggerSyncForDataAccessAccountsWithAccountIDs:
_triggerSyncWithReason:forcingCloudKitReload:discretionary:bypassThrottler:completion:
updateAccountsAndFetchMigrationState:completion:
updateAccountWithACAccountID:restartDA:completion:
removeOrphanedAccountWithCompletion:
restartCloudKitSyncWithReason:bypassThrottler:completion:
syncCloudKitWithReason:discretionary:bypassThrottler:completion:
requestToMergeLocalDataIntoSyncDataWithAccountIdentifier:completion:
requestToDeleteSyncDataWithAccountIdentifier:completion:
requestToDeleteLocalDataWithCompletion:
triggerThrottledSyncWithReason:discretionary:completion:
updateAccountsAndSync:completion:
removeOrphanedAccountsWithCompletion:
fetchTemplateWithObjectID:error:
fetchListRepresentationOfTemplateWithObjectID:error:
addCKShareObserverIfNeededForAccountID:completion:
addCKShareObserverIfNeededForAccountID:queue:completion:
replicaManagerForAccountID:withStore:
setStore:
T@"REMStore",&,N,V_store
replicaManagerProviderForCalDAVSync
requestToUpdateClientConnectionsWithShouldKeepAlive:
requestToUpdateClientConnectionsAsynchronously:shouldKeepAlive:completion:
validatePhantomObjectsWith:shouldRepair:completion:
repairPhantomObjectsWithObjectIDs:error:
debugFetchPhantomListsWithError:
setupManualHashtagLabelUpdater
refreshHashtagLabelsImmediately
handleIncompleteTemplateOperationQueueItemsImmediately
immediatelyCreateOrUpdatePublicLinkOfTemplateWithTemplateObjectID:configuration:completion:
immediatelyRevokePublicLinkOfTemplateWithTemplateObjectID:completion:
synchronous_revertImageAttachmentsToUnDeduped:completion:
test_setupForManualHashtagLabelRefreshing
test_refreshHashtagLabelsImmediately
test_handleIncompleteTemplateOperationQueueItemsImmediately
test_immediatelyCreateOrUpdatePublicLinkOfTemplateWithTemplateObjectID:configuration:error:
test_immediatelyRevokePublicLinkOfTemplateWithTemplateObjectID:error:
test_revertImageAttachmentsToUnDeduped:error:
identifier
initWithIdentifier:
_identifier
T@"NSUUID",R,N,V_identifier
initWithFetchResultTokenToDiffAgainst:
fetchResultTokenToDiffAgainst
_fetchResultTokenToDiffAgainst
T@"REMFetchResultToken",R,N,V_fetchResultTokenToDiffAgainst
remStorageClasses
decodeObjectOfClasses:forKey:
initWithResultData:storages:latestFetchResultToken:
latestFetchResultToken
_resultData
_resultStorages
_latestFetchResultToken
T@"NSData",R,N,V_resultData
T@"NSDictionary",R,N,V_resultStorages
T@"REMFetchResultToken",R,N,V_latestFetchResultToken
stringForKey:
URLWithString:
objectIDWithURL:
urlRepresentation
objectIDForKey:
setObjectID:forKey:
_deepCopy
initWithObjectID:
objectIDWithUUID:
objectIDWithUUID:entityName:
T@"REMObjectID",R,N
initWithAlarmTrigger:objectID:
isContentEqual:
setObjectID:
_objectID
T@"REMObjectID",&,N,V_objectID
setTimeInterval:
decodeDoubleForKey:
encodeDouble:forKey:
initWithObjectID:timeInterval:
_timeInterval
Td,N,V_timeInterval
setDateComponents:
initWithObjectID:dateComponents:
_dateComponents
T@"NSDateComponents",C,N,V_dateComponents
setStructuredLocation:
setProximity:
structuredLocation
proximity
initWithObjectID:structuredLocation:proximity:
_structuredLocation
_proximity
T@"REMStructuredLocation",C,N,V_structuredLocation
Tq,N,V_proximity
setEvent:
event
initWithObjectID:event:
_event
Tq,N,V_event
contactRepresentation
initWithContactRepresentation:
initWithObjectID:contactRepresentation:
_contactRepresentation
T@"REMContactRepresentation",R,N,V_contactRepresentation
initWithReplicaIDSource:document:undos:
replicaUUIDForCreation
initWithReplica:
initWithDocument:
setRootObject:
realizeLocalChanges
initWithReplicaIDSource:document:
nonEditingReplicaUUID
unarchiveFromData:replica:
document
rootObject
orderedSetWithOrderedSet:
isEqualToOrderedSet:
indexOfEqualObject:
replicaIDSource
undos
initWithReplicaIDSource:immutableDocumentToEdit:undos:
archivedData
copyForReplica:
mergeWithDocument:
dictionaryWithObjects:forKeys:count:
replica
initWithReplicaIDSource:serializedData:error:
initWithReplicaIDSource:orderedSet:
mutableOrderedSet
serializedData
mergedOrderedSetWithOrderedSet:error:
setReplicaIDSource:
setDocument:
_replicaIDSource
_document
_undos
T@"REMReplicaIDSource",&,N,V_replicaIDSource
T@"CRDocument",&,N,V_document
T@"NSMutableArray",R,N,V_undos
T@"NSOrderedSet",R,N
TQ,R,N
setDelegate:
initWithReplicaIDSource:owner:replicaClockProvider:
replicaIDHelper
didCopy
willEdit
setCurrentUndo:
documentToEdit
currentUndo
immutableCopy
moveObjectFromIndex:toIndex:
lastObject
removeLastObject
undoBlocks
reverseObjectEnumerator
addUndoBlock:
setReplicaClockProvider:
replicaIDHelperDidAcquireReplicaUUID:
T@"<REMReplicaManagerProviding>",&,N
addUndoCommandsForObject:block:
wantsUndoCommands
immutableOrderedSet
undo
undo:
setReplicaIDHelper:
_replicaManagerProvider
_replicaIDHelper
_currentUndo
T@"REMReplicaIDHelper",&,N,V_replicaIDHelper
T@"REMMutableCRUndo",&,N,V_currentUndo
T@"<REMReplicaManagerProviding>",&,N,V_replicaManagerProvider
initWithObjectID:type:name:nullableListIDsMergeableOrdering:
isCloudKit
listIDsMergeableOrderingReplicaIDSourceWithAccountID:
initWithObjectID:type:name:listIDsMergeableOrdering:
setListIDsMergeableOrdering:
setListIDsMergeableOrderingData:
pinnedListsManualOrdering
setPinnedListsManualOrdering:
templatesManualOrdering
setTemplatesManualOrdering:
listIDsToUndelete
setListIDsToUndelete:
smartListIDsToUndelete
setSmartListIDsToUndelete:
listsDADisplayOrderChanged
setListsDADisplayOrderChanged:
personID
setPersonID:
personIDSalt
setPersonIDSalt:
inactive
setInactive:
didChooseToMigrate
setDidChooseToMigrate:
didChooseToMigrateLocally
setDidChooseToMigrateLocally:
didFinishMigration
setDidFinishMigration:
persistenceCloudSchemaVersion
setPersistenceCloudSchemaVersion:
daConstraintsDescriptionPath
setDaConstraintsDescriptionPath:
daAllowsCalendarAddDeleteModify
setDaAllowsCalendarAddDeleteModify:
daSupportsSharedCalendars
setDaSupportsSharedCalendars:
daWasMigrated
setDaWasMigrated:
setEffectiveMinimumSupportedVersion:
debugSyncDisabled
setDebugSyncDisabled:
setWithObjects:
setMarkedForRemoval:
markedForRemoval
failWithError:
allObjects
listIDsMergeableOrdering
listIDsMergeableOrderingData
numberWithUnsignedInteger:
_accountType
initWithType:
cdKeyToStorageKeyMap
resolutionTokenMapWithJSONData:keyMap:
initWithAccountID:objectID:property:
initWithObjectID:type:name:
optionalObjectID
setStoreGenerationIfNeeded:
displayName
serializedListIDsMergeableOrdering
hasDeserializedListIDsMergeableOrdering
listIDsMergeableOrderingReplicaIDSource
_isAddingExtraPrimaryCKAccountForTesting
_setIsAddingExtraPrimaryCKAccountForTesting:
setType:
setName:
_accountTypeHost
_storeGeneration
_copyGeneration
_listIDsMergeableOrdering
_markedForRemoval
_listsDADisplayOrderChanged
_inactive
_didChooseToMigrate
_didChooseToMigrateLocally
_didFinishMigration
_debugSyncDisabled
_daAllowsCalendarAddDeleteModify
_daSupportsSharedCalendars
_daWasMigrated
_name
_listIDsMergeableOrderingData
_pinnedListsManualOrdering
_templatesManualOrdering
_listIDsToUndelete
_smartListIDsToUndelete
_resolutionTokenMap
_resolutionTokenMapData
_personID
_personIDSalt
_persistenceCloudSchemaVersion
_daConstraintsDescriptionPath
Tq,N,V_type
T@"NSString",&,N,V_name
T@"REMCRMergeableOrderedSet",&,N
T@"NSData",&,N,V_listIDsMergeableOrderingData
T@"REMManualOrdering",&,N,V_pinnedListsManualOrdering
T@"REMManualOrdering",&,N,V_templatesManualOrdering
TB,N,V_markedForRemoval
T@"NSSet",&,N,V_listIDsToUndelete
T@"NSSet",&,N,V_smartListIDsToUndelete
TB,N,V_listsDADisplayOrderChanged
T@"REMResolutionTokenMap",&,N,V_resolutionTokenMap
T@"NSData",&,N,V_resolutionTokenMapData
T@"NSString",C,N,V_personID
T@"NSData",C,N,V_personIDSalt
TB,N,V_inactive
TB,N,V_didChooseToMigrate
TB,N,V_didChooseToMigrateLocally
TB,N,V_didFinishMigration
Tq,N,V_persistenceCloudSchemaVersion
TB,N,V_debugSyncDisabled
T@"NSString",C,N,V_daConstraintsDescriptionPath
TB,N,V_daAllowsCalendarAddDeleteModify
TB,N,V_daSupportsSharedCalendars
TB,N,V_daWasMigrated
T@"NSString",C,N,VexternalIdentifier
T@"NSString",C,N,VexternalModificationTag
T@"NSString",C,N,VdaSyncToken
T@"NSString",C,N,VdaPushKey
frequency
daysOfTheWeek
daysOfTheMonth
monthsOfTheYear
weeksOfTheYear
daysOfTheYear
setPositions
recurrenceEnd
naturalLanguageDescriptionForFrequency:interval:daysOfTheWeek:daysOfTheMonth:monthsOfTheYear:weeksOfTheYear:daysOfTheYear:setPositions:end:withStartDate:
currentCalendar
components:fromDate:
_readableWeekDays
_readableMonths
localizedStringFromNumber:numberStyle:
daysTypeForDayArray:
_andDaysOfWeekString:
_weekDayPositionAsString:
_orDaysOfWeekString:
string
_dayOfMonthAsString:
appendString:
appendFormat:
month
standaloneWeekdaySymbols
initWithObjects:
standaloneMonthSymbols
_numberedWeekDayString:
_daysOfWeek
_customDayCombinationDescription:
shortNaturalLanguageDescriptionForFrequency:interval:daysOfTheWeek:daysOfTheMonth:monthsOfTheYear:setPositions:date:timeZone:lowercase:
currentLocale
arrayWithObjects:
lowercaseStringWithLocale:
localizedStringWithFormat:
_stringForDayOfWeek:
intValue
isEqualToArray:
_stringForByDayOfWeek:setPositions:
_stringForMonthNumber:
_localizedOfMonthStringForMonth:
_byDayOfWeekOrdinalStrings
_customByDayItemFormatLocalizedString
repeatTypeForFrequency:interval:daysOfTheWeek:daysOfTheMonth:monthsOfTheYear:weeksOfTheYear:daysOfTheYear:setPositions:end:recurrenceDate:recurrenceTimeZone:getRepeatEnd:
occurrenceCount
endDate
naturalLanguageDescriptionForRecurrenceRule:withStartDate:
shortNaturalLanguageDescriptionForRecurrenceRule:date:timeZone:lowercase:
repeatTypeForRecurrenceRules:recurrenceDate:recurrenceTimeZone:getRepeatEnd:
localizedDescriptionForRepeatType:
rangeOfUnit:inUnit:forDate:
setRemObjectID:
resolveInstanceMethod:
T@"NSDictionary",R,N
initWithREMObjectID:
T@"REMObjectID",&,N,VremObjectID
T@"NSDictionary",&,N,V_storage
changeObjectForAuxiliaryChangeInfoMap
initWithAuxiliaryChangeInfoType:
changeObjectForAuxiliaryChangeInfo:
auxiliaryChangeInfos
typedKlass
setTypedKlass:
setChangeObjectForAuxiliaryChangeInfoMap:
_auxiliaryChangeInfos
_typedKlass
_changeObjectForAuxiliaryChangeInfoMap
T#,N,V_typedKlass
T@"NSMutableDictionary",&,N,V_changeObjectForAuxiliaryChangeInfoMap
T@"NSArray",R,N,V_auxiliaryChangeInfos
propertyListWithData:options:format:error:
initWithUUIDString:
auxiliaryChangeInfoFromData:withObjectID:fromChangeObject:error:
setAuxiliaryChangeInfos:
auxiliaryChangeInfoFetchResultOfType:
predicateDescriptor
sortDescriptors
options
fetchedAccountStorages
initWithStore:storage:
fetchedListStorages
initWithStore:account:storage:
requestedObjectIDs
parentListID
setParentList:
initWithPredicateDescriptor:sortDescriptors:options:
resultsFromFetchResult:inAccount:error:
resultsFromFetchResult:inParentList:error:
setPredicateDescriptor:
setSortDescriptors:
_predicateDescriptor
_sortDescriptors
_options
T@"REMListPredicateDescriptor",&,N,V_predicateDescriptor
T@"NSArray",&,N,V_sortDescriptors
TQ,R,N,V_options
weakValue
template
setWeakValue:
valueForSaveRequest:
valueWithoutPerformingCopy
setTemplate:
_weakValue
_template
T@"<REMSaveRequestTrackedValue>",W,N,V_weakValue
T@"<REMSaveRequestTrackedValue>",&,N,V_template
setYear:
setMonth:
setDay:
setHour:
setMinute:
setSecond:
setCalendar:
calendarIdentifier
setNanosecond:
year
hour
minute
second
nanosecond
exceptionWithName:reason:userInfo:
calendarWithIdentifier:
component:fromDate:
timeZoneWithName:
dateFromComponents:
compare:
rem_dateComponentsByAddingTimeInterval:
rem_allDayDateComponents
rem_isValidDateComponents
rem_isWeekendDateComponents
rem_dateComponentsWithDateUsingArchivingTimeZone:isAllDay:
rem_dateWithDateComponentsUsingArchivingTimeZone:
rem_dateComponentsWithYear:month:day:hour:minute:second:allDay:timeZone:
initWithCalendarIdentifier:
rem_isEquivalentTo:
mergeableString
generateIdsForLocalChanges
timestamp
timestamps
clockElementForUUID:
lastConsumedChangeToken
lastConsumedDate
setLastConsumedChangeToken:
setLastConsumedDate:
_lastConsumedChangeToken
_lastConsumedDate
T@"NSDate",&,N,V_lastConsumedDate
T@"REMChangeToken",&,N,V_lastConsumedChangeToken
addObserver:forKeyPath:options:context:
removeObserver:forKeyPath:context:
dealloc
null
mutableChangedKeys
observeValueForKeyPath:ofObject:change:context:
target
keysToObserve
setKeysToObserve:
setMutableChangedKeys:
_target
_keysToObserve
_mutableChangedKeys
T@"NSArray",&,N,V_keysToObserve
T@"NSMutableSet",&,N,V_mutableChangedKeys
T@"NSObject",R,N,V_target
attributesAtIndex:effectiveRange:
enumerateAttribute:inRange:options:usingBlock:
removeAttribute:range:
setAttributes:range:
rem_hashtagAtIndex:effectiveRange:
rem_enumerateHashtagInRange:options:usingBlock:
hashtagAtIndex:effectiveRange:
enumerateHashtagInRange:options:usingBlock:
removeObjectForKey:
enumerateAttributesInRange:options:usingBlock:
addHashtag:range:
removeHashtagInRange:
rem_hashtagAtIndex:effectiveRange:wantsLongestEffectiveRange:inRange:
attribute:atIndex:longestEffectiveRange:inRange:
attribute:atIndex:effectiveRange:
rem_hashtagAtIndex:longestEffectiveRange:inRange:
addAttribute:value:range:
rem_addHashtag:range:
rem_removeHashtagInRange:
crdtIDWithObjectID:property:
initWithAccountID:crdtID:
_accountID
_crdtID
T@"REMObjectID",R,N,V_accountID
T@"NSString",R,N,V_crdtID
deleteApplicationDataFromCloudKitWithAccountID:completion:
migrateICloudCalDavToCloudKitWithAccountID:disableCache:userInitiated:completion:
debugDownloadMigrationCacheWithAccountID:completion:
fetchUserRecordWithAccountID:completion:
setMigrationStateToDidChooseToMigrate:didFinishMigration:createZoneAccountIfFinishMigration:accountID:completion:
fetchServerRecordFor:completion:
observeCloudKitNetworkActivityChanges
setTrigger:
initWithTrigger:objectID:
acknowledgedDate
isAcknowledged
isOriginal
_trigger
_acknowledgedDate
_alarmUID
_originalAlarmUID
T@"REMAlarmTrigger",&,N,V_trigger
T@"NSDate",&,N,V_acknowledgedDate
T@"NSString",&,N,V_alarmUID
T@"NSString",&,N,V_originalAlarmUID
setTitleDocumentData:
setNotesDocumentData:
setContactHandles:
setSiriFoundInAppsData:
setDisplayDate:
rem_formatterWithTimeZone:
rem_stringFromDateComponents:
stringFromDate:
documentFromSerializedData:replicaIDSource:forKey:ofObjectID:
URLFragmentAllowedCharacterSet
removeCharactersInString:
stringByAddingPercentEncodingWithAllowedCharacters:
titleReplicaIDSourceWithAccountID:reminderID:
notesReplicaIDSourceWithAccountID:reminderID:
initWithDueDateComponents:alarms:
startOfDayForDate:
isAllDay
showRemindersAsOverdue
isDate:overdueAtReferenceDate:allDay:showAllDayRemindersAsOverdue:
setTitleAsStringByCDIngestor:
setNotesAsStringByCDIngestor:
setAccountID:
_hasDeserializedTitleDocument
_hasDeserializedNotesDocument
_deserializedTitleDocumentCache
_deserializedNotesDocumentCache
_completed
_allDay
_listID
_parentReminderID
_titleDocumentData
_notesDocumentData
_primaryLocaleInferredFromLastUsedKeyboard
_titleAsString
_notesAsString
_completionDate
_subtaskIDsToUndelete
_hashtagIDsToUndelete
_priority
_startDateComponents
_dueDateComponents
_timeZone
_creationDate
_lastModifiedDate
_recurrenceRules
_attachments
_alarms
_contactHandles
_icsDisplayOrder
_icsUrl
_importedICSData
_daCalendarItemUniqueIdentifier
_userActivity
_siriFoundInAppsData
_siriFoundInAppsUserConfirmation
_lastBannerPresentationDate
_flagged
_assignments
_hashtags
_displayDate
T@"NSString",&,N,V_titleAsString
T@"NSString",&,N,V_notesAsString
T@"REMObjectID",&,N,V_accountID
T@"REMObjectID",&,N,V_listID
T@"REMObjectID",&,N,V_parentReminderID
T@"NSData",&,N,V_titleDocumentData
T@"NSData",&,N,V_notesDocumentData
T@"NSString",&,N,V_primaryLocaleInferredFromLastUsedKeyboard
TB,N,GisCompleted,V_completed
T@"NSDate",C,N,V_completionDate
T@"NSSet",&,N,V_subtaskIDsToUndelete
T@"NSSet",&,N,V_hashtagIDsToUndelete
TQ,N,V_priority
T@"NSDateComponents",C,N,V_startDateComponents
T@"NSDateComponents",C,N,V_dueDateComponents
T@"NSString",C,N,V_timeZone
TB,N,V_allDay
T@"NSDate",C,N,V_creationDate
T@"NSDate",C,N,V_lastModifiedDate
T@"NSArray",&,N,V_recurrenceRules
T@"NSArray",&,N,V_attachments
T@"NSArray",&,N,V_alarms
T@"REMContactRepresentation",&,N,V_contactHandles
TQ,N,V_icsDisplayOrder
T@"NSURL",C,N,V_icsUrl
T@"NSData",&,N,V_importedICSData
T@"NSString",C,N,V_daCalendarItemUniqueIdentifier
T@"REMUserActivity",C,N,V_userActivity
T@"NSData",C,N,V_siriFoundInAppsData
Tq,N,V_siriFoundInAppsUserConfirmation
T@"NSDate",C,N,V_lastBannerPresentationDate
Tq,N,V_flagged
T@"NSSet",&,N,V_assignments
T@"NSSet",&,N,V_hashtags
T@"REMDisplayDate",C,N,V_displayDate
T@"NSString",R,C,N
dictionaryWithObjectsAndKeys:
compareToken:error:
universalToken
isUniversal
initWithSaveRequest:storage:capabilities:changedKeysObserver:
_emptyListIDsOrderingWithAccountID:
initWithSaveRequest:storage:capabilities:observeInitialValues:
capabilities
supportsGroups
initWithAccountChangeItem:
supportsPinnedLists
supportsTemplates
addMergeableOrderingNode:
insertMergeableOrderingNode:beforeMergeableOrderingNode:
insertMergeableOrderingNode:afterMergeableOrderingNode:
assertIsCustomSmartListWithAction:
insertMergeableOrderingNode:adjacentToMergeableOrderingNode:isAfter:withParentMergeableOrderingNode:
_lowLevelApplyUndoToOrdering:
allKeys
canCopyReminderLosslesslyFromAccountWithType:toAccountWithType:accountTypeHost:
_editListIDsOrderingUsingBlock:
parentSubContainerID
_reassignMergeableOrderingNode:withParentListChangeItem:
_lowLevelAddMergeableOrderingNodeToOrdering:atIndexOfSibling:isAfter:withParentMergeableOrderingNode:
removeFromParentWithAccountChangeItem:
setParentOwnerID:
setParentSubContainerID:
T@"NSData",C,N
initWithObjectID:type:name:insertIntoSaveRequest:
groupContext
addListChangeItem:
insertListChangeItem:beforeListChangeItem:
insertListChangeItem:afterListChangeItem:
addSmartListChangeItem:
insertSmartListChangeItem:beforeSmartListChangeItem:
insertSmartListChangeItem:afterSmartListChangeItem:
undeleteListWithID:usingUndo:
undeleteSmartListWithID:usingUndo:
removeFromStore
mergeableOrderingNodesByOrderingMergeableOrderingNodes:
canCopyReminderLosslesslyToAccountChangeItem:
lowLevelAddMergeableOrderingNodeIDToOrdering:withParentMergeableOrderingNode:
lowLevelRemoveMergeableOrderingNodeIDFromOrdering:
test_lowLevelEditOrderingByMovingListObjectID:toTarget:
T@"REMCRMergeableOrderedSet",R,D,N
T@"NSData",R,D,N
T@"REMManualOrdering",&,D,N
TB,D,N
T@"NSString",&,D,N
T@"REMAccountStorage",R,C,N,V_storage
T@"REMAccountPinnedListsContextChangeItem",R,N
T@"REMAccountGroupContextChangeItem",R,N
accountChangeItem
setAccountChangeItem:
_accountChangeItem
T@"REMAccountChangeItem",&,N,V_accountChangeItem
updateManualOrdering:
T@"REMManualOrdering",R,N
addTemplateWithName:configuration:toAccountChangeItem:
addTemplateWithName:configuration:
incompleteReminderCounts
scheduledCount
initWithIncompleteReminderCounts:scheduledCount:
_incompleteReminderCounts
_scheduledCount
T@"NSDictionary",R,N,V_incompleteReminderCounts
Tq,R,N,V_scheduledCount
objectIDs
predicateDescriptorForAllLists
setParentListID:
setObjectIDs:
_parentListID
_objectIDs
T@"REMObjectID",&,N,V_parentListID
T@"NSArray",&,N,V_objectIDs
fetchedReminderStorages
initWithStore:list:storage:
allValues
setParentReminder:
list
resultsFromFetchResult:inList:error:
resultsFromFetchResult:inParentReminder:error:
T@"REMReminderPredicateDescriptor",&,N,V_predicateDescriptor
subtaskCounts
dueDateCounts
initWithSubtaskCounts:
initWithDueDateCounts:
initWithSubtaskCounts:dueDateCounts:
_subtaskCounts
_dueDateCounts
T@"NSDictionary",R,N,V_subtaskCounts
T@"NSArray",R,N,V_dueDateCounts
dueDate
initWithDueDate:count:
_dueDate
_count
T@"NSDate",R,N,V_dueDate
Tq,R,N,V_count
containsValueForKey:
accountIdentifier
activityDate
activityType
authorUserRecordIDString
ckParentCloudObjectEntityName
ckParentCloudObjectIdentifier
ckIdentifier
sharedEntityName
uuidForChangeTracking
activityTypeDescription
initWithAccountIdentifier:activityDate:activityType:authorUserRecordIDString:ckParentCloudObjectEntityName:ckParentCloudObjectIdentifier:ckIdentifier:sharedEntityName:uuidForChangeTracking:
_accountIdentifier
_activityDate
_activityType
_authorUserRecordIDString
_ckParentCloudObjectEntityName
_ckParentCloudObjectIdentifier
_ckIdentifier
_sharedEntityName
_uuidForChangeTracking
T@"NSString",R,N,V_accountIdentifier
T@"NSDate",R,N,V_activityDate
Tq,R,N,V_activityType
T@"NSString",R,N,V_authorUserRecordIDString
T@"NSString",R,N,V_ckParentCloudObjectEntityName
T@"NSString",R,N,V_ckParentCloudObjectIdentifier
T@"NSString",R,N,V_ckIdentifier
T@"NSString",R,N,V_sharedEntityName
T@"NSUUID",R,N,V_uuidForChangeTracking
distantFuture
displayDateWithDueDateComponents:alarms:
initWithDate:allDay:timeZone:
boolValue
initWithFloatingDateComponents:nonFloatingDateComponents:
_date
T@"NSDate",R,C,N,V_date
TB,R,N,GisAllDay,V_allDay
T@"NSTimeZone",R,N,V_timeZone
parentList
pinnedDate
mostRecentTargetTemplateIdentifier
smartListType
initWithSmartList:account:parentList:
initWithStore:account:parentList:storage:
isPinned
isOriginOfExistingTemplate
customContext
setAccount:
_account
_parentList
T@"REMAccount",&,N,V_account
T@"REMList",&,N,V_parentList
T@"REMSmartListStorage",C,N,V_storage
parentAccountID
T@"NSDate",R,D,N
T@"NSUUID",R,D,N
T@"REMAccountCapabilities",R,N
T@"REMResolutionTokenMap",R,D,N
color
T@"REMColor",R,D,N
badgeEmblem
filterData
showingLargeAttachments
isPersisted
T@"REMSmartListCustomContext",R,N
sortingStyle
smartlist
initWithRawValue:
badge
setSmartlist:
_smartlist
T@"REMSmartList",&,N,V_smartlist
T@"REMColor",R,N
T@"REMListBadge",R,N
T@"REMAccount",R,N,V_account
T@"REMList",R,N,V_parentList
entityNamesToIncludeFromTracking
internalTransactionAuthorKeysToExclude
persistentStoreCoordinator
currentPersistentHistoryTokenFromStores:
fetchHistoryTransactionForToken:
executeRequest:error:
result
performBlockAndWait:
distantPast
defaultTransactionAuthorKeysToExclude
currentChangeToken:
_performChangeTrackingWithReason:block:xpcErrorHandler:
currentChangeTokenForAccountTypes:completion:
changeTrackingClientID
currentChangeTokenForAccountID:completion:
earliestChangeTokenForAccountID:completion:
getTrackingStateWithClientID:completion:
saveTrackingState:withClientID:completionHandler:
entityNames
transactionFetchLimit
fetchHistoryAfterToken:entityNames:transactionFetchLimit:completionHandler:
transactionAuthorKeysToExclude
consolidateAndFilterChangesWithTransactionAuthors:isExclusion:
errorChangeSetWithError:
fetchHistoryAfterDate:entityNames:transactionFetchLimit:completionHandler:
deleteHistoryBeforeToken:completionHandler:
deleteHistoryBeforeDate:completionHandler:
persistenceStoreIDForAccountID:completion:
syncChangeTrackingPerformerWithReason:errorHandler:
entityNamesToIncludeFromTrackingWithOptionProvider:
lastTransactionTimestampWithManagedObjectContext:affectedStores:
currentChangeTokenForAllAccountsWithError:
currentChangeTokenForAccountTypes:error:
currentChangeTokenWithError:
earliestChangeTokenWithError:
getTrackingStateWithError:
saveTrackingState:error:
fetchHistoryAfterToken:error:
fetchHistoryAfterDate:error:
deleteHistoryBeforeToken:error:
deleteHistoryBeforeDate:error:
persistenceStoreIDForAccountID:error:
setEntityNames:
setTransactionFetchLimit:
_changeTrackingClientID
_entityNames
_transactionFetchLimit
_transactionAuthorKeysToExclude
T@"NSSet",R,N,V_transactionAuthorKeysToExclude
T@"<REMChangeTrackingClientIdentifying>",R,N,V_changeTrackingClientID
T@"<REMDaemonController>",R,N,V_daemonController
T@"NSArray",&,N,V_entityNames
TQ,N,V_transactionFetchLimit
isCoalesced
coalescedChanges
arrayByAddingObjectsFromArray:
transaction
changes
changeType
changedObjectID
fetchAuxiliaryChangeInfos:completionHandler:
fetchAuxiliaryChangeInfosOfType:withChangeObject:error:
clientName
stringByAppendingString:
_clientName
T@"NSString",R,N,V_clientName
newCloudContainerForAccountID:
isSandboxEnvironment
initWithContainerIdentifier:environment:
initWithAccountID:
setAccountOverrideInfo:
initWithContainerID:options:
initWithContainerID:
setSourceApplicationBundleIdentifier:
newCloudContainerForAccount:
newCloudContainerWithPublicCloudDatabase
initWithSaveRequest:storage:changedKeysObserver:
initWithObjectID:accountID:name:
setParentAccountID:
setConfiguration:
initWithObjectID:listType:listID:modifiedDate:
setUnsavedManualOrdering:
initWithSaveRequest:storage:observeInitialValues:
rawValue
setBadgeEmblem:
initWithObjectID:name:configuration:insertIntoAccountChangeItem:
setBadge:
removeFromParentAccount
configuration
T@"REMTemplateConfiguration",&,D,N
publicLink
T@"REMTemplatePublicLink",R,D,N
T@"REMColor",&,D,N
T@"REMListBadge",C,N
mostRecentPublicLinkUpdateRequestDate
T@"REMTemplateStorage",R,C,N,V_storage
canonicalName
firstOccurrenceCreationDate
recencyDate
isEqualToHashtagLabel:
initWithName:
initWithName:canonicalName:firstOccurrenceCreationDate:recencyDate:uuidForChangeTracking:
_canonicalName
_firstOccurrenceCreationDate
_recencyDate
T@"NSString",R,N,V_name
T@"NSString",R,N,V_canonicalName
T@"NSDate",R,N,V_firstOccurrenceCreationDate
T@"NSDate",R,N,V_recencyDate
uuidString
hostURL
decodeExternalIdentifierForMarkedForDeletionObject:
externalIdentifierForMarkedForDeletionObject
shouldUseExternalIdentifierAsDeletionKey
initCalDAVNotificationWithObjectID:accountID:listID:uuidString:hostURL:externalIdentifier:externalModificationTag:
setUuidString:
setHostURL:
_uuidString
_hostURL
T@"NSString",&,N,V_uuidString
T@"NSURL",&,N,V_hostURL
T@"REMObjectID",R,N,V_objectID
T@"REMObjectID",R,N,V_listID
T@"NSURL",&,D,N
attributeNameForStyle:
rem_fontHintAtIndex:effectiveRange:
rem_isUnderlinedAtIndex:effectiveRange:
beginEditing
endEditing
rem_setFontHint:isOn:inRange:
rem_setUnderline:inRange:
setWithObject:
setClasses:forSelector:argumentIndex:ofReply:
snoozeToDate:
_createSnoozeAlarmWithDateComponents:
nextThirdsHourFromHour:
nextThirdsHour:
_cleanupOriginalAlarmsForSnoozing
_timeIntervalToAddSinceStartDate:withNow:step:
dateWithTimeIntervalSinceNow:
snoozeFromNowForTimeInterval:
snoozeToNextThirds
snoozeForever
snoozeFromDueDateForFutureIntegralMultipleOfTimeInterval:
initWithObjectID:accountID:reminderID:UTI:
reminderID
_uti
_reminderID
T@"REMObjectID",R,N,V_reminderID
T@"NSString",R,N,V_uti
createTemporaryFileWithData:UTI:
isTemporaryFileURL
fileURL
startAccessingSecurityScopedResource
defaultManager
removeItemAtURL:error:
stopAccessingSecurityScopedResource
reminderDataURL
URLForDirectory:inDomain:appropriateForURL:create:error:
processInfo
globallyUniqueString
URLByAppendingPathComponent:
URLByAppendingPathExtension:
createTemporaryFileURLWithUTI:
writeToURL:options:error:
fileSize
initWithURL:readonly:
setFileSize:
linkItemAtURL:toURL:error:
setFileURL:
setIsTemporaryFileURL:
_isTemporaryFileURL
_fileSize
_fileURL
TQ,N,V_fileSize
T@"NSURL",&,N,V_fileURL
TB,N,V_isTemporaryFileURL
width
height
setWidth:
setHeight:
_width
_height
TQ,N,V_width
TQ,N,V_height
metadata
setUrl:
setMetadata:
_url
_metadata
T@"NSURL",&,N,V_url
T@"NSData",&,N,V_metadata
state
isObserver
timeElapsed
listsMigrated
remindersMigrated
initWithState:IsObserver:timeElapsed:listsMigrated:remindersMigrated:log:
_isObserver
_state
_timeElapsed
_listsMigrated
_remindersMigrated
_log
T@"NSString",R,N,V_state
TB,R,N,V_isObserver
Td,R,N,V_timeElapsed
TQ,R,N,V_listsMigrated
TQ,R,N,V_remindersMigrated
T@"NSString",R,N,V_log
initWithUUID:entityName:
T@"NSUUID",R,N
setUuid:
setEntityName:
_uuid
_entityName
T@"NSUUID",&,N,V_uuid
T@"NSString",&,N,V_entityName
changeID
changedObjectIDStorage
tombstone
updatedProperties
setChangeID:
setChangedObjectIDStorage:
setChangeType:
setTombstone:
setUpdatedProperties:
_changeID
_changedObjectIDStorage
_changeType
_tombstone
_updatedProperties
Tq,N,V_changeID
T@"_REMChangedObjectIDStorage",C,N,V_changedObjectIDStorage
Tq,N,V_changeType
T@"REMNSPersistentHistoryChangeTombstone",C,N,V_tombstone
T@"NSSet",C,N,V_updatedProperties
remObjectIdentifier
persistentHistoryChangeTombstone
daIsEventOnlyContainer
shareeOwningListIdentifier
shareeDisplayName
shareeAddress
assignmentOwningReminderIdentifier
hashtagName
hashtagReminderIdentifier
initWithDictionary:
hashtagLabelUUIDForChangeTracking
syncActivityUUIDForChangeTracking
setPersistentHistoryChangeTombstone:
_persistentHistoryChangeTombstone
T@"NSDictionary",&,V_persistentHistoryChangeTombstone
T@"NSUUID",R
initWithStorage:
persistentHistoryChange
shortStringForChangeType:
internal_ChangeTransaction
cachedChangedREMObjectID
setCachedChangedREMObjectID:
stringForChangeType:
stringByReplacingOccurrencesOfString:withString:
setWithSet:
unionSet:
setInternal_ChangeTransaction:
initWithPersistentHistoryChange:
changedManagedObjectID
resolveObjectIDWithUUID:entityName:
copyForCoalescing
setIsCoalesced:
setCoalescedChanges:
_isCoalesced
_internal_ChangeTransaction
_coalescedChanges
_persistentHistoryChange
_cachedChangedREMObjectID
T@"_REMNSPersistentHistoryChangeStorage",&,V_storage
T@"NSPersistentHistoryChange",R,W,V_persistentHistoryChange
T@"REMObjectID",&,V_cachedChangedREMObjectID
T@"REMChangeTransaction",W,N,V_internal_ChangeTransaction
TB,N,V_isCoalesced
T@"NSArray",&,N,V_coalescedChanges
dataWithLength:
characterAtIndex:
setLength:
rem_dataWithHexString:
storeID
author
token
_timestamp
_changes
_storeID
_author
_token
T@"NSDate",R,N,V_timestamp
T@"NSArray",R,N,V_changes
T@"NSString",R,N,V_storeID
T@"NSString",R,N,V_author
T@"REMChangeToken",R,N,V_token
rangeOfString:options:
rem_hasPrefixCaseInsensitive:
rem_hasMailto
rem_hasTel
rem_addingMailto
rem_removingMailto
rem_addingTel
rem_removingTel
rem_isFirstString:equalToSecondString:
unarchivedObjectOfClass:fromData:error:
initWithPersistentHistoryTokens:
persistentHistoryTokens
archivedDataWithRootObject:requiringSecureCoding:error:
fetchResultTokenFromDataRepresentation:error:
dataRepresentationWithError:
_persistentHistoryTokens
T@"NSDictionary",R,N,V_persistentHistoryTokens
initWithError:
isTruncated
error
filteredTransactions
filterByTransactionAuthorStrings
filterByTransactionAuthorsIsExclusion
setFilterByTransactionAuthorStrings:
setFilterByTransactionAuthorsIsExclusion:
_filterAndFlattenAndConsolidateChanges
transactions
setError:
setFilteredTransactions:
sortUsingComparator:
subarrayWithRange:
removeObjectsForKeys:
sortedArrayUsingComparator:
setUpdates:
setInserts:
setDeletes:
conformsToREMChangeTrackingIdentifiable
methodForSelector:
inserts
updates
deletes
initWithChangeTransactions:
applyFilterByTransactionAuthors:isExclusion:
enumerateChanges:forModelsOfClass:withBlock:
lastChangeTokenForAccountID:
setIsTruncated:
_isTruncated
_filterByTransactionAuthorsIsExclusion
_transactions
_inserts
_updates
_deletes
_error
_filterByTransactionAuthorStrings
_filteredTransactions
T@"NSError",&,N,V_error
TB,N,V_isTruncated
T@"NSArray",&,N,V_inserts
T@"NSArray",&,N,V_updates
T@"NSArray",&,N,V_deletes
T@"NSArray",&,N,V_filterByTransactionAuthorStrings
TB,N,V_filterByTransactionAuthorsIsExclusion
T@"NSArray",&,N,V_filteredTransactions
T@"NSArray",R,N,V_transactions
sortDescriptorSortingByTitleAscending:
sortDescriptorSortingByCreationDateAscending:
sortDescriptorSortingByDueDateAscending:
sortDescriptorSortingByPriorityAscending:
sortDescriptorSortingByOrderingInListAscending:
_remObjectIdentifier
_externalIdentifier
_daIsEventOnlyContainer
_shareeOwningListIdentifier
_shareeDisplayName
_shareeAddress
_assignmentOwningReminderIdentifier
_hashtagName
_hashtagReminderIdentifier
_hashtagLabelUUIDForChangeTracking
_syncActivityUUIDForChangeTracking
T@"NSUUID",R,N,V_remObjectIdentifier
T@"NSString",R,N,V_externalIdentifier
T@"NSNumber",R,N,V_daIsEventOnlyContainer
T@"NSUUID",R,N,V_shareeOwningListIdentifier
T@"NSString",R,N,V_shareeDisplayName
T@"NSString",R,N,V_shareeAddress
T@"NSUUID",R,N,V_assignmentOwningReminderIdentifier
T@"NSString",R,N,V_hashtagName
T@"NSUUID",R,N,V_hashtagReminderIdentifier
T@"NSUUID",R,N,V_hashtagLabelUUIDForChangeTracking
T@"NSUUID",R,N,V_syncActivityUUIDForChangeTracking
_transaction
_changedObjectID
T@"REMChangeTransaction",R,W,N,V_transaction
Tq,R,N,V_changeID
T@"REMObjectID",R,N,V_changedObjectID
Tq,R,N,V_changeType
T@"REMChangeTombstone",R,N,V_tombstone
remCurrentRuntimeVersionDebuggingOverride
setDebug_rem_nowOverride:
debug_rem_nowOverride
rem_now
T@"NSDate",R,C,N
T@"NSDate",C,N
initWithEndDate:
initWithOccurrenceCount:
dateWithTimeIntervalSinceReferenceDate:
callStackSymbols
isEqualToDate:
usesEndDate
_endDate
_occurrenceCount
T@"NSDate",R,N,V_endDate
TQ,R,N,V_occurrenceCount
supportsListAppearance
supportsCloudKitSync
supportsEventKitSync
supportsLocation
supportsPersonTrigger
supportsCalDAVNotifications
supportsListSharees
supportsListShareesMutation
supportsMoveAcrossLists
supportsMoveAcrossSharedLists
supportsCRDTs
defaultReminderPriorityLevel
supportsHandoff
supportsReminderActions
supportsHourlyRecurrence
supportsCustomSmartLists
supportsTextStyling
supportsDeletionByTTL
_supportsSubtasks
_supportsAttachments
_supportsListAppearance
_supportsGroups
_supportsFlagged
_supportsPersonTrigger
_supportsLocation
_supportsHourlyRecurrence
_supportsTemplates
_supportsEventKitSync
_supportsCloudKitSync
_supportsCalDAVNotifications
_supportsListSharees
_supportsListShareesMutation
_supportsMoveAcrossLists
_supportsMoveAcrossSharedLists
_supportsMultipleDateAlarmsOnRecurrence
_supportsHandoff
_supportsReminderActions
_supportsCRDTs
_supportsAssignments
_supportsHashtags
_insertsCompletedRecurrentCloneAtTail
_supportsCustomSmartLists
_supportsPinnedLists
_supportsTextStyling
_supportsDeletionByTTL
_defaultReminderPriorityLevel
TB,R,N,V_supportsEventKitSync
TB,R,N,V_supportsCloudKitSync
TB,R,N,V_supportsCalDAVNotifications
TB,R,N,V_supportsListSharees
TB,R,N,V_supportsListShareesMutation
TB,R,N,V_supportsMoveAcrossLists
TB,R,N,V_supportsMoveAcrossSharedLists
TB,R,N,V_supportsMultipleDateAlarmsOnRecurrence
Tq,R,N,V_defaultReminderPriorityLevel
TB,R,N,V_supportsHandoff
TB,R,N,V_supportsReminderActions
TB,R,N,V_supportsCRDTs
TB,R,N,V_supportsAssignments
TB,R,N,V_supportsHashtags
TB,R,N,V_insertsCompletedRecurrentCloneAtTail
TB,R,N,V_supportsCustomSmartLists
TB,R,N,V_supportsPinnedLists
TB,R,N,V_supportsTextStyling
TB,R,N,V_supportsDeletionByTTL
TB,R,N,V_supportsSubtasks
TB,R,N,V_supportsAttachments
TB,R,N,V_supportsListAppearance
TB,R,N,V_supportsGroups
TB,R,N,V_supportsFlagged
TB,R,N,V_supportsPersonTrigger
TB,R,N,V_supportsLocation
TB,R,N,V_supportsHourlyRecurrence
TB,R,N,V_supportsTemplates
rem_registerClassAtCRCoderIfNeeded
registerClass:forType:
queue
q_syncSuggestedAttributesPerformerWithReason:errorHandler:
preWarmModels
q_cachedXPCPerformer
q_resolveSuggestedAttributesPerformerWithReason:errorHandler:
remoteObjectProxy
remoteObjectProxyWithErrorHandler:
synchronousRemoteObjectProxyWithErrorHandler:
setQ_cachedXPCPerformer:
uncachedSuggestedAttributesPerformerWithReason:completion:
initWithQueue:store:
setQueue:
_queue
_q_cachedXPCPerformer
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
T@"<REMXPCSuggestedAttributesPerformer>",&,N,V_q_cachedXPCPerformer
initWithListID:includingSubtasks:
accountStorages
listStorages
reminderStorages
remindersFromAccountStorages:listStorages:reminderStorages:store:requestedReminderIDs:
initWithParentReminderID:includeUnsupported:
noSuchObjectErrorWithObjectID:
fetchRemindersWithObjectIDs:includeConcealed:error:
initWithParentReminderIDs:
initWithParentReminderID:includeIncomplete:includeCompleted:isUnsupported:
setIncludeConcealedObjects:
remindersFromAccountStorages:listStorages:reminderStorages:store:showMarkedForDeleteObjects:
initWithListID:
storedPropertyForKey:
unexpectedError
initWithParentReminderID:
noSuchObjectErrorWithExternalIdentifier:
initWithExternalIdentifiers:listObjectID:
remindersFromAccountStorages:listStorages:reminderStorages:store:requestedStringIdentifiers:identifierSelector:
remindersFromAccountStorages:listStorages:reminderStorages:store:
noSuchObjectErrorWithDACalendarItemUniqueIdentifier:
initWithDACalendarItemUniqueIdentifiers:listObjectID:
fetchRemindersWithListID:includingSubtasks:error:
fetchRemindersWithParentReminderID:includeUnsupported:error:
fetchObjectIDsOfRemindersWithParentReminderID:includeIncomplete:includeCompleted:isUnsupported:error:
fetchRemindersCountWithListID:error:
fetchRemindersCountWithParentReminderID:error:
includeUnsupported
_includeUnsupported
T@"REMObjectID",R,N,V_parentReminderID
TB,R,N,V_includeUnsupported
includingSubtasks
_includingSubtasks
TB,R,N,V_includingSubtasks
includeConcealedObjects
_includeConcealedObjects
T@"NSArray",R,N,V_objectIDs
TB,N,V_includeConcealedObjects
T@"REMReminderPredicateDescriptor",R,N,V_predicateDescriptor
T@"NSArray",R,N,V_sortDescriptors
T@"REMReminderFetchOptions",R,N,V_options
parentReminderIDs
_parentReminderIDs
T@"NSArray",R,N,V_parentReminderIDs
includeIncomplete
includeCompleted
_includeIncomplete
_includeCompleted
_isUnsupported
TB,R,N,V_includeIncomplete
TB,R,N,V_includeCompleted
TB,R,N,V_isUnsupported
externalIdentifiers
listObjectID
_externalIdentifiers
_listObjectID
T@"NSArray",R,N,V_externalIdentifiers
T@"REMObjectID",R,N,V_listObjectID
daCalendarItemUniqueIdentifiers
_daCalendarItemUniqueIdentifiers
T@"NSArray",R,N,V_daCalendarItemUniqueIdentifiers
initWithAccountStorages:listStorages:reminderStorages:objectIDs:
_accountStorages
_listStorages
_reminderStorages
T@"NSArray",R,N,V_accountStorages
T@"NSArray",R,N,V_listStorages
T@"NSArray",R,N,V_reminderStorages
allowConcealedObjects
_allowConcealedObjects
TB,N,V_allowConcealedObjects
initWithAssignments:
T@"NSSet",R,N,V_assignments
initWithHashtags:
T@"NSSet",R,N,V_hashtags
shouldIncludeHashtags
shouldIncludeAlarmTriggersBasedOnDateOrTimeInterval
shouldIncludeAlarmTriggersBasedOnLocationOrVehicle
shouldIncludeContactsHandleData
initWithShouldIncludeHashtags:shouldIncludeAlarmTriggersBasedOnDateOrTimeInterval:shouldIncludeAlarmTriggersBasedOnLocationOrVehicle:
_shouldIncludeHashtags
_shouldIncludeAlarmTriggersBasedOnDateOrTimeInterval
_shouldIncludeAlarmTriggersBasedOnLocationOrVehicle
TB,R,N,V_shouldIncludeHashtags
TB,R,N,V_shouldIncludeAlarmTriggersBasedOnDateOrTimeInterval
TB,R,N,V_shouldIncludeAlarmTriggersBasedOnLocationOrVehicle
initWithSmartListType:objectID:createIfNeeded:
smartListStorages
parentListStorages
smartListsFromSmartListStorages:accountStorages:parentListStorages:store:
initWithParentAccountObjectID:
initWithParentGroupObjectID:
fetchNonCustomSmartListWithSmartListType:createIfNeeded:error:
fetchCustomSmartListsInAccount:error:
fetchCustomSmartListsInGroup:error:
createIfNeeded
setCreateIfNeeded:
_createIfNeeded
_smartListType
T@"NSString",R,N,V_smartListType
TB,N,V_createIfNeeded
accountObjectID
_accountObjectID
T@"REMObjectID",R,N,V_accountObjectID
groupObjectID
_groupObjectID
T@"REMObjectID",R,N,V_groupObjectID
initWithSmartListStorages:accountStorages:parentListStorages:
initWithSmartListStorages:
_smartListStorages
_parentListStorages
T@"NSArray",R,N,V_smartListStorages
T@"NSDictionary",R,N,V_accountStorages
T@"NSDictionary",R,N,V_parentListStorages
initWithREMDAAccount:clientName:withREMStore:entityNames:
loggingDescription
_rem_changeTracking:
cached_currentChangeToken
setCached_currentChangeToken:
cached_currentTrackingState
setCached_currentTrackingState:
upToToken
fetchAndInitializeChangeTrackingStateIfNeeded
changeSet
_debug_mockChangeSet
setChangeSet:
setSinceToken:
setCached_insertedModelObjectResultsByModelClassName:
setCached_updatedModelObjectResultsByModelClassName:
setUpToToken:
rem_accountObjectID
markChangesConsumed:
sinceToken
_cachedModeObjectResultsForModelClass:changeType:
_changeTypeMaskFromChangeType:
_changedModelObjectsOfClass:ofChangeTypes:shouldOutputFetchedModels:
_setCachedModeObjectResults:forModelClass:changeType:
_rem_accountObjectID
_handleIsConcealedUpdatesInChange:ofModelClass:forClientID:concealedHandler:unconcealedHandler:
shouldIgnoreChangeOfModelClassProperties:withChangeObject:
rem_DA_deletedKeyFromTombstoneBlock
rem_DA_supportsFetching
_fetchModelObjectsOfClass:withObjectIDs:
removeObjectsInArray:
rem_DA_supportsConcealedObjects
rem_DA_propertiesAffectingIsConcealed
_fetchModelObjectOfClass:withObjectID:includeConcealedObjects:
rem_DA_deletedKeyFromConcealedModelObjectBlock
minusSet:
remStore
rem_DA_fetchByObjectIDBlock
rem_DA_fetchByObjectIDsBlock
cached_insertedModelObjectResultsByModelClassName
cached_updatedModelObjectResultsByModelClassName
cached_remAccountObjectID
setCached_remAccountObjectID:
initWithREMDAAccount:clientName:withREMStore:
compareCurrentChangeTokenToLastConsumedWithResult:error:
fetchChangesSinceLastConsumed
markChangesConsumed
changedModelObjectsOfModelClass:ofChangeType:
changedIdentifiersOfModelClass:ofChangeType:
clearCachedModelObjectResultsForModelClass:
setClientName:
setRemStore:
setChangeTracking:
set_debug_mockChangeSet:
_changeSet
_sinceToken
_upToToken
_remStore
_changeTracking
_cached_remAccountObjectID
_cached_insertedModelObjectResultsByModelClassName
_cached_updatedModelObjectResultsByModelClassName
_cached_currentChangeToken
_cached_currentTrackingState
__debug_mockChangeSet
T@"REMChangeSet",&,N,V_changeSet
T@"REMChangeToken",&,N,V_sinceToken
T@"REMChangeToken",&,N,V_upToToken
T@"REMStore",&,N,V_remStore
T@"REMChangeTracking",&,N,V_changeTracking
T@"REMObjectID",&,N,V_cached_remAccountObjectID
T@"NSMutableDictionary",&,N,V_cached_insertedModelObjectResultsByModelClassName
T@"NSMutableDictionary",&,N,V_cached_updatedModelObjectResultsByModelClassName
T@"REMChangeToken",&,N,V_cached_currentChangeToken
T@"REMChangeTrackingState",&,N,V_cached_currentTrackingState
T@"REMChangeSet",&,N,V__debug_mockChangeSet
T@"NSString",&,N,V_clientName
T@"<REMDAAccountProviding>",R,N,V_account
_debug_resetCaches
_debug_setMockChangeSet:
_debug_currentChangeTokenWithError:
isChangeTrackableModel
isChangeTrackableFetchableModel
T@?,R,N
owningListIdentifier
setOwningListIdentifier:
setDisplayName:
_owningListIdentifier
_displayName
_address
T@"NSUUID",&,N,V_objectIdentifier
T@"NSUUID",&,N,V_owningListIdentifier
T@"NSString",&,N,V_displayName
T@"NSString",&,N,V_address
owningReminderIdentifier
setOwningReminderIdentifier:
_owningReminderIdentifier
T@"NSUUID",&,N,V_owningReminderIdentifier
arrayByAddingObject:
anyObject
setReminderIdentifier:
_reminderIdentifier
T@"NSUUID",&,N,V_reminderIdentifier
listsFromAccountStorages:listStorages:store:requestedListIDs:
initWithListIDs:
initWithListIDs:startDate:endDate:
listIDs
_listIDs
T@"NSArray",R,N,V_listIDs
startDate
_startDate
T@"NSDate",R,N,V_startDate
_errorSanitizedForXPCFromError:
_isCoreDataError:
_errorWithCode:underlyingError:
errorWithDomain:code:userInfo:
userInfo
dictionaryWithDictionary:
reason
errorSanitizedForXPCFromError:
mismatchedObjectIDWithObjectID:expected:
errorFromErrors:
unauthorizedErrorWithMissingEntitlement:
unauthorizedErrorWithMissingEntitlement:requestedAccessLevel:currentAccesslevel:
throttledErrorWithRemainingTimeInterval:
babySatErrorWithOperationName:
cancelledError
retryLaterErrorWithInterval:
tooManyLoadedStoresError
notSupportedError
internetNotReachableError
isNoSuchObjectError:forObjectID:
noSuchSmartListErrorWithSmartListType:
noPrimaryActiveCloudKitAccountError
accountStoreMissingError:
saveErrorWithCoreDataError:
validationErrorMoveAcrossAccount:
validationErrorMoveFromAccount:toAccount:objectID:
validationErrorListHasNoAccount:
validationErrorMoveReminderFromList:toList:inAccount:
validationErrorNestedSubtask:parentReminderID:
validationErrorSubtaskAndParentNotOnSameList:parentReminderID:
validationErrorUndeleteHashtagFromAnotherReminder:expectedReminderID:
validationErrorNotCloudKitAccount:
validationErrorRemoveAccountBeingInserted:
validationErrorRemoveAccountBeingActivated:
validationErrorDifferentZoneObjectID:zoneOwnerName:parentObjectID:parentZoneOwnerName:
constraintConflictWithIdentifier:constraint:
nullifiedRelationshipErrorWithRelationshipName:
unexpectedNilPropertyWithClass:property:
unexpectedNilPropertyWithObjectID:property:
xpcPerformerUnavailableErrorWithDescription:
catchObjCException:error:
initWithObjectID:accountID:reminderID:assigneeID:originatorID:status:assignedDate:
_debug_cdAssigneeLinked
_debug_cdOriginatorLinked
isEqualToAssignment:
nullifiedAssignmentOriginatorID
orderValueWithAssignedDate:objectIdentifier:
isOriginatorNullified
set_debug_cdAssigneeLinked:
set_debug_cdOriginatorLinked:
__debug_cdAssigneeLinked
__debug_cdOriginatorLinked
_status
_assigneeID
_originatorID
_assignedDate
T@"NSDate",C,N,V_assignedDate
TB,N,V__debug_cdAssigneeLinked
TB,N,V__debug_cdOriginatorLinked
Tq,R,N,V_status
T@"REMObjectID",R,N,V_assigneeID
T@"REMObjectID",R,N,V_originatorID
nullifiedOriginatorAssignmentWithObjectID:accountID:reminderID:assigneeID:status:assignedDate:
setCounter:
setModificationTime:
setReplicaID:
initWithCounter:modificationTime:replicaID:
counter
modificationTime
replicaID
CR_compare:
resolutionTokenWithJSONObject:
initWithDefaultValue
update
_counter
_modificationTime
_replicaID
Tq,N,V_counter
Td,N,V_modificationTime
T@"NSUUID",&,N,V_replicaID
standardUserDefaults
boolForKey:
createRadarWithTitle:description:
setBool:forKey:
setScheme:
setHost:
initWithName:value:
setQueryItems:
defaultWorkspace
openURL:configuration:completionHandler:
promptUserToFileBugWithAlertMessage:bugTitle:bugDescription:
inProgressSaveRequests
_latestSaveInProgressAccountForObjectID:saveRequest:
_firstMatchInSaveRequests:
_latestSaveInProgressListForObjectID:fallbackAccount:fallbackParentList:saveRequest:
parentReminder
_latestSaveInProgressReminderForObjectID:fallbackAccount:fallbackList:fallbackParentList:fallbackParentReminder:saveRequest:
_trackedAccountChangeItemForObjectID:
setInProgressSaveRequests:
_inProgressSaveRequests
T@"NSMutableArray",&,N,V_inProgressSaveRequests
initWithAccountType:identifier:name:
T@"NSString",R,N,V_identifier
databaseMigrationTestModeEnabled
initWithSandboxDatabaseEnabled:
containerToken
systemBuildVersion
lastDatabaseMigrationSystemBuildVersion
isDatabaseMigrated
setIsDatabaseMigrated:
cachedStore
setCachedStore:
setContainerToken:
destroySandboxContainerIfNecessary
setMigrationStartDate:
setLastReportedErrorIdentifier:
setLastReportedError:
setLastReportedErrorStage:
localAccountID
localAccountDefaultListID
updateList:
removeFromParent
saveSynchronouslyWithError:
migrationStartDate
timeIntervalSinceNow
lastReportedErrorStage
lastReportedErrorIdentifier
lastReportedError
_diagnosticReportWithStage:failureIdentifier:error:
setShouldDataAccessStopSyncingReminders:
setLastDatabaseMigrationSystemBuildVersion:
_postMigrationLocalAccountCleanup
hasPerformedEnsureAccountsExist
_cleanLocalDatabases:
setHasPerformedEnsureAccountsExist:
__addAccountWithType:name:accountObjectID:
_migrationAccountInfosFromDEPRECATEDInfoDictionaryList:
ensureAccountsExistWithMigrationAccountInfos:error:
isExchange
updateAccount:
shouldDeleteMigratedData
reportMigrationWillBegin
reportMigrationErrorWithIdentifier:atStage:error:objectLocator:
reportMigrationDidFinishWithSuccess:
ensureAccountsExist:error:
ensureAccountsExist:
_hasPerformedEnsureAccountsExist
_containerToken
_cachedStore
_migrationStartDate
_lastReportedErrorIdentifier
_lastReportedErrorStage
_lastReportedError
TB,N
T@"REMStoreContainerToken",&,N,V_containerToken
T@"REMStore",&,N,V_cachedStore
T@"NSDate",&,N,V_migrationStartDate
TB,N,V_hasPerformedEnsureAccountsExist
T@"NSString",&,N,V_lastReportedErrorIdentifier
TQ,N,V_lastReportedErrorStage
T@"NSError",&,N,V_lastReportedError
fetchResultToken
initWithCount:
initWithAccountStorages:listStorages:reminderStorages:requestedObjectIDs:metadata:
initWithAccountStorages:
initWithListStorages:
initWithReminderStorages:
initWithRequestedObjectIDs:
initWithMetadata:
setFetchResultToken:
_requestedObjectIDs
_fetchedAccountStorages
_fetchedListStorages
_fetchedReminderStorages
_fetchResultToken
T@"NSArray",R,N,V_requestedObjectIDs
T@"NSArray",R,N,V_fetchedAccountStorages
T@"NSArray",R,N,V_fetchedListStorages
T@"NSArray",R,N,V_fetchedReminderStorages
T@"REMFetchMetadata",R,N,V_metadata
T@"REMFetchResultToken",&,N,V_fetchResultToken
initWithAccount:
fetchListsInAccount:error:
fetchListIncludingSpecialContainerWithExternalIdentifier:inAccount:error:
shouldUseExternalIdentifierAsDeletionKeyWithAccountType:
localInternalAccountID
_accountTypeMaskWithBitMask:
isCloudBasedAccountType:
supportsSharingLists
templatesContext
canCopyReminderLosslesslyToAccount:
isConsideredEmptyWithResultPtr:withError:
fetchListsIncludingSpecialContainersWithError:
fetchListIncludingSpecialContainerWithExternalIdentifier:error:
MCIsManagedWithResultPtr:error:
listIDsOrdering
daSupportsPhoneNumbers
setCapabilities:
_capabilities
T@"NSSet",R,D,N
T@"REMAccountTemplatesContext",R,N
T@"REMAccountCapabilities",&,N,V_capabilities
T@"REMAccountGroupContext",R,N
fetchGroupsWithError:
fetchTemplatesInAccount:error:
fetchTemplatesWithError:
isNonPrimaryCloudKit
isLocalInternal
isValid
internalDescription
replicaManager
acquiredReplicaUUID
setAcquiredReplicaUUID:
owner
didSerialize
lazilyCachedReplicaManagerProvider
setLazilyCachedReplicaManagerProvider:
replicaClockProvider
setOwner:
_replicaClockProvider
_owner
_acquiredReplicaUUID
_lazilyCachedReplicaManagerProvider
T@"<REMReplicaIDHelperOwner>",W,N,V_owner
T@"NSUUID",&,N,V_acquiredReplicaUUID
T@"<REMReplicaManagerProviding>",&,N,V_lazilyCachedReplicaManagerProvider
T@"REMReplicaManager",R,N
T@"<REMReplicaClockProviding>",&,N,V_replicaClockProvider
rem_humanReadableIdentifier
_init
setIncludeListNames:
setIncludeReminderTitles:
setIncludeListNameFuzzedEmbeddings:
setIncludeReminderTitleFuzzedEmbeddings:
setIncludeSystemLanguage:
setIncludeSystemTimezone:
setIncludeAccountType:
setIncludeListGroupInfo:
setIncludeReminderTitleSaltedHash:
setIncludeDayOfWeek:
setIncludeDates:
setIncludeRecurrenceInfo:
setIncludeLocationInfo:
setIncludeAttachmentUTIs:
setIncludeRemindMeWhenMessagingInfo:
setIncludeAlarmDates:
setIncludeSubtaskInfo:
setIncludeUserActivityInfo:
setIncludeIsFlagged:
setIncludePriority:
setRelevantWordTagsIncludeOtherWord:
setDateResolutionInSeconds:
setCreationDateWithinDays:
setReminderTitleCategoryEmbeddingURL:
setIncludeReminderTitleCategorySentence2Vec:
setIncludeReminderTitleCategoryUniversalGrammar:
setIncludeReminderTitleCategoryFilteredStopWords:
setReminderTitleCategoryDistanceTolerance:
_attachmentURLFromFilenameWithKey:inJSONRepresentation:attachmentURLs:error:
optionsWithDefaultValues
includeListNames
remdes_boolForKey:defaultValue:
includeListNameFuzzedEmbeddings
includeReminderTitles
includeReminderTitleFuzzedEmbeddings
includeSystemLanguage
includeSystemTimezone
includeAccountType
includeListGroupInfo
includeReminderTitleSaltedHash
includeDates
includeRecurrenceInfo
includeLocationInfo
includeAttachmentUTIs
includeRemindMeWhenMessagingInfo
includeAlarmDates
includeSubtaskInfo
includeUserActivityInfo
includeIsFlagged
includePriority
relevantWordTagsIncludeOtherWord
remdes_nsuintegerForKey:defaultValue:
includeReminderTitleCategoryFilteredStopWords
includeReminderTitleCategoryUniversalGrammar
includeReminderTitleCategorySentence2Vec
remdes_doubleForKey:defaultValue:
dateResolutionInSeconds
reminderTitleCategoryEmbeddingURL
reminderTitleCategoryDistanceTolerance
isInternalInstall
lastPathComponent
optionsWithEverythingOff
optionsFromJSONRepresentation:attachmentURLs:error:
includeDayOfWeek
creationDateWithinDays
_includeListNames
_includeReminderTitles
_includeListNameFuzzedEmbeddings
_includeReminderTitleFuzzedEmbeddings
_includeSystemLanguage
_includeSystemTimezone
_includeAccountType
_includeListGroupInfo
_includeReminderTitleSaltedHash
_includeDates
_includeDayOfWeek
_includeRecurrenceInfo
_includeLocationInfo
_includeAttachmentUTIs
_includeRemindMeWhenMessagingInfo
_includeAlarmDates
_includeSubtaskInfo
_includeUserActivityInfo
_includeIsFlagged
_includePriority
_relevantWordTagsIncludeOtherWord
_includeReminderTitleCategoryFilteredStopWords
_includeReminderTitleCategoryUniversalGrammar
_includeReminderTitleCategorySentence2Vec
_reminderTitleCategoryDistanceTolerance
_reminderTitleCategoryEmbeddingURL
_dateResolutionInSeconds
_creationDateWithinDays
TB,N,V_includeListNames
TB,N,V_includeReminderTitles
TB,N,V_includeListNameFuzzedEmbeddings
TB,N,V_includeReminderTitleFuzzedEmbeddings
TB,N,V_includeSystemLanguage
TB,N,V_includeSystemTimezone
TB,N,V_includeAccountType
TB,N,V_includeListGroupInfo
TB,N,V_includeReminderTitleSaltedHash
TB,N,V_includeDates
TB,N,V_includeDayOfWeek
TB,N,V_includeRecurrenceInfo
TB,N,V_includeLocationInfo
TB,N,V_includeAttachmentUTIs
TB,N,V_includeRemindMeWhenMessagingInfo
TB,N,V_includeAlarmDates
TB,N,V_includeSubtaskInfo
TB,N,V_includeUserActivityInfo
TB,N,V_includeIsFlagged
TB,N,V_includePriority
TB,N,V_relevantWordTagsIncludeOtherWord
TB,N,V_includeReminderTitleCategoryFilteredStopWords
TB,N,V_includeReminderTitleCategoryUniversalGrammar
TB,N,V_includeReminderTitleCategorySentence2Vec
Td,N,V_reminderTitleCategoryDistanceTolerance
T@"NSURL",&,N,V_reminderTitleCategoryEmbeddingURL
TQ,N,V_dateResolutionInSeconds
TQ,N,V_creationDateWithinDays
sourceListID
shouldSaveCompleted
initWithSourceListID:shouldSaveCompleted:
_shouldSaveCompleted
_sourceListID
T@"REMObjectID",R,N,V_sourceListID
TB,R,N,V_shouldSaveCompleted
defaultParagraphStyle
setInnerStyle:
paragraphStyleNamed:
innerStyle
style
listBulletInAttributedString:atIndex:
initWithContents:
initWithStyle:
remParagraphStyle
attributedValue
_innerStyle
T@"TTParagraphStyle",&,N,V_innerStyle
T@"NSObject",R,N
rem_paragraphStyleAtIndex:effectiveRange:
rem_addParagraphNamedStyle:inRange:
rem_removeParagraphNamedStyleFromRange:
_xpcConnectionReconnectingIfNecessary
initWithStoreContainerToken:userInteractive:
serviceName
xpcConnection
exportedObject
setCloudKitNetworkActivityDelegate:
_syncPerformerWithResolver:reason:errorHandler:
_asyncPerformerWithResolver:reason:loadHandler:errorHandler:
_resolveAndCachePerformerWithResolver:reason:errorHandler:
l_performersByName
_asyncResolveAndCachePerformerWithResolver:reason:completion:
_resolvePerformerWithResolver:reason:errorHandler:
_asyncResolvePerformerWithResolver:reason:completion:
resolveWithDaemon:reason:completion:
initWithMachServiceName:options:
setRemoteObjectInterface:
cloudKitNetworkActivityDelegate
setExportedObject:
setExportedInterface:
_xpcConnectionDidInterrupt
removeAllObjects
setInterruptionHandler:
_xpcConnectionDidInvalidate
setXpcConnection:
setInvalidationHandler:
resume
cloudKitNetworkActivityDidChange:
syncDebugPerformerWithErrorHandler:
syncSyncInterfacePerformerWithReason:errorHandler:
syncIndexingPerformerWithReason:errorHandler:
asyncIndexingPerformerWithReason:loadHandler:errorHandler:
setL_performersByName:
setServiceName:
setStoreContainerToken:
_cloudKitNetworkActivityDelegate
_l_performersByName
_serviceName
_xpcConnection
T@"NSMutableDictionary",&,N,V_l_performersByName
T@"NSString",&,N,V_serviceName
T@"NSXPCConnection",&,N,V_xpcConnection
T@"REMStoreContainerToken",&,N,V_storeContainerToken
T@"<REMXPCDaemonControllerCloudKitNetworkActivityDelegate>",W,N,V_cloudKitNetworkActivityDelegate
processName
storePerformerWithProcessName:storeContainerToken:reason:completion:
debugPerformerWithStoreContainerToken:reason:completion:
changeTrackingPerformerWithStoreContainerToken:reason:completion:
syncInterfacePerformerWithReason:completion:
indexingPerformerWithReason:completion:
cloudKitNetworkActivityDidUpdate:
locationUID
latitude
longitude
radius
referenceFrameString
contactLabel
initWithTitle:locationUID:latitude:longitude:radius:address:routing:referenceFrameString:contactLabel:mapKitHandle:
initWithTitle:locationUID:
host
minimumRegionMonitoringDistance
Td,R,N
_title
_latitude
_longitude
_radius
_routing
_referenceFrameString
_contactLabel
_mapKitHandle
_locationUID
T@"NSString",R,N,V_locationUID
T@"NSString",C,N,V_title
Td,N,V_latitude
Td,N,V_longitude
Td,N,V_radius
T@"NSString",C,N,V_address
T@"NSString",C,N,V_routing
T@"NSString",C,N,V_referenceFrameString
T@"NSString",C,N,V_contactLabel
T@"NSData",C,N,V_mapKitHandle
formatOptions
setFormatOptions:
dateFromString:
rem_dateComponentsFromString:
backingStore
nonEditableAttributes
valueWithRange:
rangeValue
reportDidEdit:range:changeInLength:
replaceCharactersInRange:withString:
mutableCopyWithZone:
allocWithZone:
initWithBackingStore:
allowlistedAttributesForModel
editObserver
mutableAttributedString:didEdit:range:changeInLength:
allowedAttributesForModel
classForCoder
setEditObserver:
setBackingStore:
_editObserver
_backingStore
T@"NSMutableAttributedString",&,N,V_backingStore
T@"<REMCRMutableAttributedStringEditObserver>",W,N,V_editObserver
initWithRed:green:blue:alpha:
initWithRed:green:blue:alpha:colorSpace:
initWithHexString:
initWithWhite:alpha:
hexString
uppercaseString
substringWithRange:
initWithDASymbolicColorName:daHexString:ckSymbolicColorName:
green
blue
alpha
hexStringWithAlpha
daSymbolicColorName
daHexString
ckSymbolicColorName
colorRGBSpace
encodeInt:forKey:
decodeIntForKey:
initForReadingFromData:error:
initRequiringSecureCoding:
encodedData
colorWithRed:green:blue:alpha:
colorWithRed:green:blue:alpha:targetRGBSpace:
colorWithHexString:
clearColor
blackColor
whiteColor
grayColor
lightGrayColor
redColor
greenColor
blueColor
cyanColor
yellowColor
magentaColor
orangeColor
purpleColor
brownColor
colorWithDictionaryData:error:
initWithRed:green:blue:alpha:colorSpace:daSymbolicColorName:daHexString:ckSymbolicColorName:
initWithDASymbolicColorName:daHexString:
initWithCKSymbolicColorName:hexString:
archivedDictionaryDataWithError:
_colorRGBSpace
_blue
_red
_green
_alpha
_daSymbolicColorName
_daHexString
_ckSymbolicColorName
T@"NSString",R,N,V_daSymbolicColorName
T@"NSString",R,N,V_daHexString
T@"NSString",R,N,V_ckSymbolicColorName
TQ,R,N,V_colorRGBSpace
Td,R,N,V_blue
Td,R,N,V_red
Td,R,N,V_green
Td,R,N,V_alpha
initWithSuiteName:containerURL:
_initWithSuiteName:container:
initWithSuiteName:
_addObserverForKey:block:
userDefaults
observers
initWithOptions:capacity:
initWithUserDefaults:key:block:
userDefaultsKey
removeObserver:forKeyPath:
block
appGroupUserDefaults
T@"REMDaemonUserDefaults",R,N
_startObservingValuesForKey:block:
_startStreamingValuesForKey:block:
_removeObserver:
suiteName
showRemindersAsOverdue_cached
setShowRemindersAsOverdue_cached:
_showRemindersAsOverdue_cached
_suiteName
_observers
_userDefaults
T@"NSString",R,N,V_suiteName
T@"NSMutableDictionary",R,N,V_observers
TB,N,V_showRemindersAsOverdue_cached
T@"NSUserDefaults",R,N,V_userDefaults
defaultValues
registerDefaults:
_deletePreferredDefaultListObjectIDUrl
preferredDefaultListID
muteNotificationForSharedList
dictionaryWithObject:forKey:
setMuteNotificationForSharedList:
dictionaryForKey:
numberWithLong:
todayNotificationFireTimeFromStorageNumber:
storageNumberForTodayNotificationTime:
todayNotificationFireTime
shouldIncludeRemindersDueTodayInBadgeCount
deletePreferredDefaultListID
_pptPreferredDefaultListIDKey
setPreferredDefaultListID:
setDatabaseMigrationTestModeEnabled:
databaseMigrationTimedOut
setDatabaseMigrationTimedOut:
cloudKitMigrationMaxNumInvocations
setCloudKitMigrationMaxNumInvocations:
cloudKitMigrationMaxNumFailures
setCloudKitMigrationMaxNumFailures:
cloudKitMigrationDelayAfterError
setCloudKitMigrationDelayAfterError:
cloudKitMigrationObserverPollingInterval
setCloudKitMigrationObserverPollingInterval:
cloudKitMigrationSimulatedError
setCloudKitMigrationSimulatedError:
cloudKitResultsLimitPerSyncOperation
setCloudKitResultsLimitPerSyncOperation:
cloudKitMigrationDisableCleanUp
setCloudKitMigrationDisableCleanUp:
observePreferredDefaultListIDWithBlock:
preferredDefaultListObjectIDUrl
setPreferredDefaultListObjectIDUrl:
acAccountIdentifierToMergeLocalDataIntoSyncData
setAcAccountIdentifierToMergeLocalDataIntoSyncData:
acAccountIdentifiersToMigrateInactivatedCalDavData
setAcAccountIdentifiersToMigrateInactivatedCalDavData:
cloudKitMergeLocalLastDateMaxRetryReached
setCloudKitMergeLocalLastDateMaxRetryReached:
cloudKitMergeLocalLastBuildVersionMaxRetryReached
setCloudKitMergeLocalLastBuildVersionMaxRetryReached:
cloudKitSchemaCatchUpSyncLastSuccessDate
setCloudKitSchemaCatchUpSyncLastSuccessDate:
cloudKitSchemaCatchUpSyncLastSuccessBuildVersion
setCloudKitSchemaCatchUpSyncLastSuccessBuildVersion:
cloudKitSchemaCatchUpSyncSchedulingState
setCloudKitSchemaCatchUpSyncSchedulingState:
cloudKitSchemaCatchUpSyncLastScheduledDate
setCloudKitSchemaCatchUpSyncLastScheduledDate:
debugForceSupportCloudKitSchemaCatchUpSyncBackgroundScheduling
setDebugForceSupportCloudKitSchemaCatchUpSyncBackgroundScheduling:
cloudKitMaxNumAlarmIDsInReminderCKRecordDebugOverride
setCloudKitMaxNumAlarmIDsInReminderCKRecordDebugOverride:
spotlightIndexVersion
setSpotlightIndexVersion:
nextScheduledAlarmDate
setNextScheduledAlarmDate:
lastPresentAlarmDate
setLastPresentAlarmDate:
lastSuggestedAttributesAutoTrainingToken
setLastSuggestedAttributesAutoTrainingToken:
setSuggestedAttributesHarvestingOverrides:
muteNotificationOptionsForSharedList:
setMuteNotificationOptions:forSharedList:
removeMuteNotificationOptionsForSharedList:
setBestKForKNN:
setSuggestedAttributesTrainingOverrides:
setCoreBehaviorTrainingParameters:
setSuggestedAttributesAccepted:
lastSyncPoll
setLastSyncPoll:
lastCloudConfigurationDownload
setLastCloudConfigurationDownload:
lastExtraneousAlarmsProcessedDate
setLastExtraneousAlarmsProcessedDate:
useExtraneousAlarmBackOffThrottleInterval
setUseExtraneousAlarmBackOffThrottleInterval:
staledFileAttachmentCleanupLastExecutionDate
setStaledFileAttachmentCleanupLastExecutionDate:
staledFileAttachmentCleanupContainerDeemedClean
setStaledFileAttachmentCleanupContainerDeemedClean:
userInteractionsData
setUserInteractionsData:
simulateMAIDAccount
setSimulateMAIDAccount:
setShowRemindersAsOverdue:
observeShowRemindersAsOverdueWithBlock:
enableWelcomeScreen
setEnableWelcomeScreen:
forceShowWelcomeScreen
setForceShowWelcomeScreen:
forceShowWhatsNewScreen
setForceShowWhatsNewScreen:
enableInAppDebugMenu
setEnableInAppDebugMenu:
enableAutoGenerateCKPersonIDSalt
enableHashingUserIdentifiablesWithPersonIDSalt
setEnableHashingUserIdentifiablesWithPersonIDSalt:
setTodayNotificationFireTime:
streamTodayNotificationFireTime:
disableAlarmEngineDataSourcePrefetching
setDisableAlarmEngineDataSourcePrefetching:
enableAssignmentNotifications
setEnableAssignmentNotifications:
suggestedAttributesTrainingOverrides
suggestedAttributesHarvestingOverrides
suggestedAttributesAccepted
accountsListCategorizedCountsCache
setAccountsListCategorizedCountsCache:
hashtagLabelsInCustomSmartListFilterCache
setHashtagLabelsInCustomSmartListFilterCache:
debugSimulateSqliteFull
setDebugSimulateSqliteFull:
tipKitCachedCountOfUncompletedReminders
setTipKitCachedCountOfUncompletedReminders:
tipKitCachedCountOfLists
setTipKitCachedCountOfLists:
tipKitCachedCountOfListsWithCustomBadge
setTipKitCachedCountOfListsWithCustomBadge:
tipKitCachedCountOfCustomSmartLists
setTipKitCachedCountOfCustomSmartLists:
tipKitCachedCountOfHashtags
setTipKitCachedCountOfHashtags:
lastViewedNotificationsPermissionWarmingSheetDate
setLastViewedNotificationsPermissionWarmingSheetDate:
lastDismissedNotificationsPermissionInlineRequestDate
setLastDismissedNotificationsPermissionInlineRequestDate:
hasViewedContactsAccessAlertForLocation
setHasViewedContactsAccessAlertForLocation:
hasViewedContactsAccessAlertForMessaging
setHasViewedContactsAccessAlertForMessaging:
hasViewedContactsAccessAlertForCalDAVSharing
setHasViewedContactsAccessAlertForCalDAVSharing:
didShowReminderDeletePrivacyWarning
setDidShowReminderDeletePrivacyWarning:
setRemCurrentRuntimeVersionDebuggingOverride:
forceEligibleForAutoCloudKitMigration
setForceEligibleForAutoCloudKitMigration:
forceBasicAAAccountEligibleForCloudKitReminders
setForceBasicAAAccountEligibleForCloudKitReminders:
syncActivityNotificationEngine_accountSignInTime
setSyncActivityNotificationEngine_accountSignInTime:
setSharedListActivityNotifications_demoMode:
sharedListActivityNotifications_demoMode
setShouldIncludeRemindersDueTodayInBadgeCount:
streamShouldIncludeRemindersDueTodayInBadgeCount:
ppt_handleInstall
ppt_handleRestore
T@"NSNumber",&,N
T@"NSArray",&,N
T@"NSDate",&,N
T@"NSNumber",C,N
T@"REMObjectID",&,N
T@"NSURL",&,N
T@"NSDateComponents",&,N
T@"NSDictionary",C,N
removed
setRemoved:
stopObserving
setUserDefaults:
setUserDefaultsKey:
setBlock:
_removed
_userDefaultsKey
_block
T@"REMUserDefaults",&,N,V_userDefaults
T@"NSString",C,N,V_userDefaultsKey
T@?,C,N,V_block
TB,N,V_removed
cdEntityNameForSavedAttachment
newObjectIDForSavedReminder
T@"REMTemplateStorage",C,N,V_storage
fetchContentAttributesOfTemplateWithObjectID:completion:
createOrUpdatePublicLinkForTemplateWithObjectID:configuration:completion:
createPublicContentPreviewOfTemplateWithObjectID:configuration:completion:
revokePublicLinkForTemplateWithObjectID:completion:
downloadPublicTemplateWithPublicLinkURLUUID:completion:
setInterface:forSelector:argumentIndex:ofReply:
initForObservingAccountStoreChanges:
accountStoreDidChange:
addObserver:selector:name:object:
removeObserver:
_debug_primaryICloudACAccount
_updateCachedICloudACAccounts
accessQueue
_debug_fullICloudACAccount
unsafeUntilSystemReady_allICloudACAccounts
rem_isEligibleForCloudKitReminders
enabledDataclasses
dataclassProperties
unsafeUntilSystemReady_icloudACAccountMatchingAccountIdentifier:
aa_regionInfo
displayedHostname
_invalidateCachedICloudACAccounts
saveAccount:withCompletionHandler:
accountDescription
cachedICloudACAccountsAreValid
accountStore
aa_primaryAppleAccount
aa_appleAccounts
setCachedICloudACAccountsAreValid:
accountTypeWithAccountTypeIdentifier:
accountsWithAccountType:
displayAccount
rem_isManagedAppleID
isEnabledForDataclass:
shortDebugName
aa_accountClass
aa_personID
aa_altDSID
aa_isAccountClass:
rem_eligibleForAutoCloudKitMigration
set_debug_primaryICloudACAccount:
set_debug_fullICloudACAccount:
sharedInstance
accountDescriptionWithACAccount:
unsafeUntilSystemReady_primaryICloudACAccount
unsafeUntilSystemReady_allCloudKitRemindersEnabledICloudACAccounts
unsafeUntilSystemReady_iCloudAccountCalDavServiceWithAccountID:
unsafeUntilSystemReady_displayedHostnameOfICloudACAccountWithAccountIdentifier:
invalidateICloudACAccounts
saveDidChooseToMigrate:didFinishMigration:toACAccount:inStore:completionHandler:
unsafeUntilSystemReady_allICloudAccountsWithCloudKitEnabled
_unsetMigrationFlagsWithACAccount:inStore:completionHandler:
_setPrimaryICloudACAccount:
_setNonPrimaryICloudACAccount:
setAccountStore:
_cachedICloudACAccountsAreValid
_unsafeUntilSystemReady_primaryICloudACAccount
_unsafeUntilSystemReady_allICloudACAccounts
_accountStore
__debug_primaryICloudACAccount
__debug_fullICloudACAccount
T@"ACAccountStore",&,N,V_accountStore
TB,N,V_cachedICloudACAccountsAreValid
T@"ACAccount",&,N,V__debug_primaryICloudACAccount
T@"ACAccount",&,N,V__debug_fullICloudACAccount
T@"ACAccount",R,V_unsafeUntilSystemReady_primaryICloudACAccount
T@"NSArray",R,V_unsafeUntilSystemReady_allICloudACAccounts
transactionNumber
bundleID
processID
contextName
setTimestamp:
setChanges:
setTransactionNumber:
setStoreID:
setBundleID:
setProcessID:
setContextName:
setAuthor:
setToken:
_transactionNumber
_bundleID
_processID
_contextName
T@"NSDate",C,N,V_timestamp
T@"NSArray",C,N,V_changes
Tq,N,V_transactionNumber
T@"NSString",C,N,V_storeID
T@"NSString",C,N,V_bundleID
T@"NSString",C,N,V_processID
T@"NSString",C,N,V_contextName
T@"NSString",C,N,V_author
T@"REMNSPersistentHistoryToken",&,N,V_token
T@"REMObjectID",C,N,V_accountID
_resolveAccountID:
T@"_REMNSPersistentHistoryTransactionStorage",&,V_storage
initWithOrderedIdentifiers:
setOrderedIdentifiers:
orderedIdentifiers
decodeArrayOfObjectsOfClass:forKey:
_orderedIdentifiers
T@"NSArray",&,N,V_orderedIdentifiers
expirationDate
canBeUpdated
initWithURL:configuration:creationDate:lastModifiedDate:expirationDate:canBeUpdated:
_canBeUpdated
_configuration
_expirationDate
T@"NSURL",R,N,V_url
T@"REMTemplatePublicLinkConfiguration",R,N,V_configuration
T@"NSDate",R,N,V_creationDate
T@"NSDate",R,N,V_lastModifiedDate
T@"NSDate",R,N,V_expirationDate
TB,R,N,V_canBeUpdated
isEqualToHashtag:
isEqualToSharedToMeReminderPlaceholder:
initWithObjectID:accountID:
decodeStringForKey:
initWithCRCoder:
encodeString:forKey:
encodeWithCRCoder:
mergeWith:
deltaSince:in:
walkGraph:
realizeLocalChangesIn:
firstDayOfTheWeek
isEqualToRecurrenceRule:
stringValueAsDateOnly:isFloating:
iCalendarValueFromRecurrenceType:
iCalendarValueFromDate:isDateOnly:isFloating:
iCalendarValueFromWeekday:
stringWithString:
setFormatterBehavior:
setDateFormat:
setEventStartDate:
setEventEndDate:
setEventTimeZone:
setDaysOfTheWeek:
setDaysOfTheMonth:
setDaysOfTheYear:
setWeeksOfTheYear:
setMonthsOfTheYear:
setSetPositions:
setInterval:
_convertREMRecurrenceFrequencyToCalRecurrenceFrequency:
setFrequency:
setWeekStart:
weekStart
setEndDate:
copyOccurrenceDatesWithInitialDate:allDay:rangeStart:rangeEnd:timeZone:limit:
sortedArrayUsingSelector:
initWithRecurrenceRule:objectID:end:
_recurrenceEnd
_frequency
_interval
_firstDayOfTheWeek
_daysOfTheWeek
_daysOfTheMonth
_daysOfTheYear
_weeksOfTheYear
_monthsOfTheYear
_setPositions
T@"REMRecurrenceEnd",R,C,N,V_recurrenceEnd
Tq,R,N,V_frequency
Tq,R,N,V_interval
Tq,R,N,V_firstDayOfTheWeek
T@"NSArray",R,N,V_daysOfTheWeek
T@"NSArray",R,N,V_daysOfTheMonth
T@"NSArray",R,N,V_daysOfTheYear
T@"NSArray",R,N,V_weeksOfTheYear
T@"NSArray",R,N,V_monthsOfTheYear
T@"NSArray",R,N,V_setPositions
T@"NSXPCInterface",R,N
initWithObjectID:listType:listID:topLevelElementIDs:secondaryLevelElementIDsByTopLevelElementID:uncommitedElementsAccountID:modifiedDate:
listType
topLevelElementIDs
initWithArray:copyItems:
secondaryLevelElementIDsByTopLevelElementID
initWithDictionary:copyItems:
uncommitedElementsAccountID
modifiedDate
_listType
_topLevelElementIDs
_secondaryLevelElementIDsByTopLevelElementID
_uncommitedElementsAccountID
_modifiedDate
Ts,R,N,V_listType
T@"NSString",R,N,V_listID
T@"NSArray",R,N,V_topLevelElementIDs
T@"NSDictionary",R,N,V_secondaryLevelElementIDsByTopLevelElementID
T@"REMObjectID",R,N,V_uncommitedElementsAccountID
T@"NSDate",R,N,V_modifiedDate
initWithPersistentHistoryToken:
T@"NSPersistentHistoryToken",R,N,V_token
systemVersionDictionary
daemonVersion:
daemonPid:
daemonStatus:completion:
containerURL:
containerStats:
testInitialSyncWithAccountName:completion:
testReinitializeCloudKitWithAccountIdentifier:completionHandler:
testFlagAccountForInactivatedCalDAVDataMigrationWithAccountIdentifier:completionHandler:
cancelCloudKitSync:
cloudKitStatus:
fireDebugNotificationWithText:identifier:categoryIdentifier:reference:isRemove:completion:
purgeDeletedObjectsWithCompletionHandler:
lowLevelMarkForDeletionWithObjectID:shouldSetDirtyFlags:shouldRemoveFromParent:completion:
lowLevelUnmarkForDeletionWithObjectID:shouldSetDirtyFlags:completion:
fetchGeofencesWithCompletion:
addGeofenceWithLatitude:longitude:radius:uuid:completion:
removeGeofenceWithUUID:completion:
simulateCoreLocationEnterRegionWithIdentifier:completion:
simulateCoreLocationExitRegionWithIdentifier:completion:
crashDaemonWithMessage:
fetchContactsMatching:completion:
logStoresDirectoryContents
dataAccessStatusReports:
registerBabysitterWith:completion:
resetBabysitterWithRestrictedAccountID:completion:
downloadContainerWithAccountID:outputDir:completion:
purgeCKRecordWithRecordType:identifier:completion:
fetchAllManualSortHintsWithDetails:completion:
fetchManualSortHintWithListType:listID:completion:
removeManualSortHintWithIdentifier:completion:
resetAllManualSortHintsWithCompletion:
resetManualSortHintWithIdentifier:completion:
resetManualSortHintWithListType:listID:completion:
resetManualSortHintBeforeLastAccessed:completion:
updateManualSortHintWithIdentifier:lastAccessed:completion:
validateHashtagLabelsWithoutHashtagWithRepair:completion:
validateHashtagLabelsWithConcealedHashtagsWithRepair:completion:
validateHashtagsWithoutHashtagLabelWithRepair:completion:
validateHashtagsWithMismatchedHashtagsWithRepair:completion:
validateHashtagsWithSharedToMeReminderCKIdentifierAndMismatchedReminderCKIdentifierWithRepair:completion:
validateSharedToMeReminderPlaceholdersWithRepair:completion:
fetchAccountListOrderedIdentifiersWithAccountID:completion:
fetchAllSharedEntitySyncActivities:
addSharedEntitySyncActivityWithActivity:completion:
removeAllSharedEntitySyncActivityWithCompletion:
removeSharedEntitySyncActivityWithUUIDForChangeTracking:completion:
removeSharedEntitySyncActivitiesWithCKIdentifier:completion:
updateMinimumSupportedVersionWithObjectID:minimumSupportedVersion:completion:
updateRemCurrentRuntimeVersionDebuggingOverride:
phones
emails
intersectsSet:
initWithStringValue:
isLikePhoneNumber:
initWithPhones:emails:
representationFromData:
matchesContactRepresentation:
setPhones:
setEmails:
_phones
_emails
T@"NSArray",C,N,V_phones
T@"NSArray",C,N,V_emails
dataUsingEncoding:
dataWithBytes:length:
base64EncodedString
dataFromBase64String:
_debugPerformerWithReason:errorHandler:
_getBoolForKey:withDefaultValue:
_setBoolValue:forBehaviorKey:
_crashDaemonWithMessage:
_getIntegerForKey:withDefaultValue:
changeTrackingBehaviors
_setIntegerValue:forBehaviorKey:
fetchStatusReportsWithError:
isDataAccessEnabled
enableDataAccess
disableDataAccess
isBabySitterEnabled
enableBabySitter
disableBabySitter
applyChangeTrackingBehavior:
unapplyChangeTrackingBehavior:
T@"REMXPCDaemonController",&,N,V_daemonController
initWithObjectID:accountID:smartListType:
setSortingStyle:
setManualOrdering:
setIsPersisted:
setShowingLargeAttachments:
setColor:
setFilterData:
setPinnedDate:
setMostRecentTargetTemplateIdentifier:
setSmartListType:
setAccountCapabilities:
_showingLargeAttachments
_isPersisted
_pinnedDate
_accountCapabilities
_manualOrdering
_mostRecentTargetTemplateIdentifier
_parentAccountID
_color
_badgeEmblem
_filterData
T@"REMAccountCapabilities",&,N,V_accountCapabilities
T@"NSString",C,N,V_smartListType
T@"REMManualOrdering",&,N,V_manualOrdering
T@"NSString",C,N,VsortingStyle
T@"NSDate",C,N,V_pinnedDate
T@"NSUUID",&,N,V_mostRecentTargetTemplateIdentifier
TB,N,V_showingLargeAttachments
T@"REMObjectID",&,N,V_parentAccountID
T@"NSString",C,N,V_name
T@"REMColor",&,N,V_color
T@"NSString",&,N,V_badgeEmblem
T@"NSData",&,N,V_filterData
TB,N,V_isPersisted
trackedAccountChangeItems
trackedListChangeItems
trackedSmartListChangeItems
trackedTemplateChangeItems
trackedReminderChangeItems
_trackAccountChangeItem:
initWithObjectID:name:insertIntoAccountChangeItem:isGroup:
_trackListChangeItem:
addGroupWithName:toAccountGroupContextChangeItem:groupObjectID:
initWithObjectID:name:insertIntoAccountChangeItem:
addListWithName:toAccountChangeItem:listObjectID:
initWithObjectID:name:insertIntoListSublistContextChangeItem:
addListWithName:toListSublistContextChangeItem:listObjectID:
setTemplateID:
_updateListStorage:accountCapabilities:
initWithCustomSmartListObjectID:insertIntoAccountChangeItem:
_trackSmartListChangeItem:
_trackedSmartListChangeItemForObjectID:
_trackTemplateChangeItem:
addTemplateWithName:configuration:toAccountChangeItem:templateObjectID:
_trackedTemplateChangeItemForObjectID:
_trackReminderChangeItem:
updateForKey:
_updateResolutionTokenMapForChangeItem:
sharees
isSharedWithShareeCount:sharingStatus:
saveRequestChangeEvents
_changeItemsAreAllEmpty
saveIsNoopIfNoChangedKeys
setSaved:
notifyChangeDelegateForSaveSuccess:
_prepareSave:
notifyChangeDelegate
callbackQueue
notifyEventFromSaveRequest:
performPreSaveActions
_willSaveAccountChangeItems:listChangeItems:smartListChangeItems:templateChangeItems:reminderChangeItems:
performRecurrenceClone
setWithCapacity:
objectEnumerator
updateReminder:
systemTimeZone
localTimeZone
trackedAccountCapabilities
_updateAccountWithListChangeItem:
addGroupWithName:toAccountGroupContextChangeItem:
addListWithName:toAccountChangeItem:
addListWithName:toListSublistContextChangeItem:
addListUsingTemplate:toAccountChangeItem:
addListUsingPublicTemplateWithREMListRepresentation:toAccountChangeItem:
addCustomSmartListWithName:toAccountChangeItem:smartListObjectID:
updateSmartList:
updateTemplate:
addReminderWithTitle:toReminderSubtaskContextChangeItem:
saveWithQueue:completion:
_updateTrackedAccountChangeItem:withObjectID:
_updateTrackedListChangeItem:withObjectID:
_updateTrackedSmartListChangeItem:withObjectID:
_updateTrackedReminderChangeItem:withObjectID:
_copyReminder:toListChangeItem:
_copyReminder:toReminderSubtaskContextChangeItem:
_copyReminderChangeItem:toListChangeItem:
_copyReminderChangeItem:toReminderSubtaskContextChangeItem:
setSaveRequestChangeEvents:
setSaveIsNoopIfNoChangedKeys:
applyCRDTsWithoutMerging
setApplyCRDTsWithoutMerging:
setSyncToCloudKit:
setNotifyChangeDelegate:
_saved
_updateLastModifiedDates
_saveIsNoopIfNoChangedKeys
_cloneCompletedRecurrentRemindersAtSave
_applyCRDTsWithoutMerging
_syncToCloudKit
_trackedTemplateChangeItems
_saveRequestChangeEvents
_trackedAccountChangeItems
_trackedListChangeItems
_trackedSmartListChangeItems
_trackedReminderChangeItems
_trackedAccountCapabilities
_notifyChangeDelegate
T@"NSMutableDictionary",R,N,V_trackedTemplateChangeItems
T@"NSMutableSet",&,N,V_saveRequestChangeEvents
saved
TB,N,GisSaved,V_saved
T@"NSMutableDictionary",R,N,V_trackedAccountChangeItems
T@"NSMutableDictionary",R,N,V_trackedListChangeItems
T@"NSMutableDictionary",R,N,V_trackedSmartListChangeItems
T@"NSMutableDictionary",R,N,V_trackedReminderChangeItems
T@"NSMutableDictionary",R,N,V_trackedAccountCapabilities
TB,N,V_updateLastModifiedDates
TB,N,V_saveIsNoopIfNoChangedKeys
TB,N,V_cloneCompletedRecurrentRemindersAtSave
TB,N,V_applyCRDTsWithoutMerging
TB,N,V_syncToCloudKit
T@"<REMSaveRequestNotifyChangeDelegate>",W,N,V_notifyChangeDelegate
_addLocalAccountWithName:accountObjectID:
_addCalDavAccountWithName:accountObjectID:
_addExchangeAccountWithName:accountObjectID:
_addLocalAccountWithName:
_addCalDavAccountWithName:
_addExchangeAccountWithName:
__addAccountWithType:name:
_addAccountWithType:name:accountObjectID:
_addAccountWithType:name:
_addTestOnlyLocalInternalAccountWithName:accountObjectID:
_addTestOnlyPrimaryCKAccountWithName:accountObjectID:
_addTestOnlyExtraPrimaryCKAccountWithName:accountObjectID:
_addTestOnlyNonPrimaryCKAccountWithName:accountObjectID:
_addTestOnlyLocalInternalAccountWithName:
_addTestOnlyPrimaryCKAccountWithName:
_addTestOnlyExtraPrimaryCKAccountWithName:
_addTestOnlyNonPrimaryCKAccountWithName:
initWithCustomSmartListObjectID:insertIntoListSublistContextChangeItem:
addCustomSmartListWithName:toListSublistContextChangeItem:smartListObjectID:
pathComponents
stringRepresentation
redactedDescription
T@"NSUUID",R,N,V_uuid
T@"NSString",R,N,V_entityName
T@"NSURL",R,N
copyWithType:
initWithFetchExecutor:
fetchLimit
setFetchLimit:
storagesAndParentFetchRequest
storagesOnlyFetchRequest
countOnlyFetchRequest
objectIDsOnlyFetchRequest
metadataFetchRequest
fetchRequestWithFetchResultToken:
setFetchExecutor:
_fetchLimit
_fetchExecutor
T@"_REMFetchExecutor",&,N,V_fetchExecutor
TQ,N,V_fetchLimit
metadataFromFetchResult:inStore:error:
initWithObjectID:accountID:name:isGroup:reminderIDsMergeableOrdering:
reminderIDUUIDStringsJSONDataFromReminderIDsMergeableOrdering:error:
initWithObjectID:accountID:name:isGroup:reminderIDsMergeableOrderingData:
reminderIDsMergeableOrderingData
setReminderIDsMergeableOrdering:
setIsGroup:
daExternalIdentificationTag
setDaExternalIdentificationTag:
daBulkRequests
setDaBulkRequests:
daDisplayOrder
setDaDisplayOrder:
setDaIsEventOnlyContainer:
daIsReadOnly
setDaIsReadOnly:
daIsImmutable
setDaIsImmutable:
daIsNotificationsCollection
setDaIsNotificationsCollection:
lastUserAccessDate
setLastUserAccessDate:
reminderIDsOrderingHints
setReminderIDsOrderingHints:
reminderIDsToUndelete
setReminderIDsToUndelete:
childListIDsToUndelete
setChildListIDsToUndelete:
childSmartListIDsToUndelete
setChildSmartListIDsToUndelete:
remindersICSDisplayOrderChanged
templateID
sharedOwnerName
setSharedOwnerName:
sharedOwnerAddress
setSharedOwnerAddress:
setSharingStatus:
setSharees:
sharedOwnerID
setSharedOwnerID:
calDAVNotifications
setCalDAVNotifications:
isPlaceholder
setIsPlaceholder:
currentUserShareParticipantID
setCurrentUserShareParticipantID:
orderedSetWithArray:
dataWithPropertyList:format:options:error:
reminderIDsMergeableOrdering
reminderIDsMergeableOrderingFromReminderIDUUIDStringsJSONData:error:
dataWithJSONObject:options:error:
JSONObjectWithData:options:error:
_forceDisableFullRemindersSorting
set_forceDisableFullRemindersSorting:
ekColor
hasDeserializedReminderIDsMergeableOrdering
setReminderIDsMergeableOrderingData:
_reminderIDsMergeableOrdering
_isGroup
_remindersICSDisplayOrderChanged
_daIsReadOnly
_daIsImmutable
_daIsNotificationsCollection
_isPlaceholder
_reminderIDsMergeableOrderingData
_reminderIDsOrderingHints
_reminderIDsToUndelete
_childListIDsToUndelete
_childSmartListIDsToUndelete
_templateID
_sharedOwnerName
_sharedOwnerAddress
_sharingStatus
_sharees
_sharedOwnerID
_lastUserAccessDate
_calDAVNotifications
_daExternalIdentificationTag
_daBulkRequests
_daDisplayOrder
_currentUserShareParticipantID
TB,N,V_isGroup
T@"NSOrderedSet",&,N
T@"NSData",&,N,V_reminderIDsMergeableOrderingData
T@"NSDictionary",&,N,V_reminderIDsOrderingHints
T@"NSSet",&,N,V_reminderIDsToUndelete
T@"NSSet",&,N,V_childListIDsToUndelete
T@"NSSet",&,N,V_childSmartListIDsToUndelete
TB,N,V_remindersICSDisplayOrderChanged
T@"REMObjectID",&,N,V_templateID
T@"NSString",C,N,V_sharedOwnerName
T@"NSString",C,N,V_sharedOwnerAddress
Tq,N,V_sharingStatus
T@"NSArray",&,N,V_sharees
T@"REMObjectID",&,N,V_sharedOwnerID
T@"NSDate",C,N,V_lastUserAccessDate
T@"NSArray",&,N,V_calDAVNotifications
T@"NSString",&,N,V_daExternalIdentificationTag
T@"NSDictionary",&,N,V_daBulkRequests
Tq,N,V_daDisplayOrder
TB,N,V_daIsEventOnlyContainer
TB,N,V_daIsReadOnly
TB,N,V_daIsImmutable
TB,N,V_daIsNotificationsCollection
TB,N,V_isPlaceholder
T@"NSString",C,N,V_currentUserShareParticipantID
setDescriptors:
setStartingDueDate:
setEndingDueDate:
setText:
setTextMatching:
startingDueDate
endingDueDate
descriptors
text
textMatching
andPredicateDescriptorWithDescriptors:
orPredicateDescriptorWithDescriptors:
predicateDescriptorForRemindersWithListID:
predicateDescriptorForRemindersWithParentReminderID:
predicateDescriptorForRemindersWithObjectIDs:
predicateDescriptorForRemindersWithDueDateOnOrBefore:
predicateDescriptorForRemindersWithDueDateOnOrAfter:
predicateDescriptorForRemindersWithDueDateBetween:and:
predicateDescriptorForRemindersWithDisplayDateOnOrBefore:
predicateDescriptorForRemindersWithDisplayDateOnOrAfter:
predicateDescriptorForRemindersWithDisplayDateBetween:and:
predicateDescriptorForRemindersWithCompleted:
predicateDescriptorForRemindersWithTitleEquals:
predicateDescriptorForRemindersWithTitleContains:
predicateDescriptorForRemindersWithTitleBeginsWith:
predicateDescriptorForRemindersWithTitleEndsWith:
initWithReminderPredicateDescriptor:
_startingDueDate
_endingDueDate
_descriptors
_text
_textMatching
T@"NSDate",&,N,V_startingDueDate
T@"NSDate",&,N,V_endingDueDate
TB,N,V_completed
T@"NSArray",&,N,V_descriptors
T@"NSString",&,N,V_text
Tq,N,V_textMatching
initWithTitle:dueAfter:dueBefore:isCompleted:hasLocation:location:
dueBefore
dueAfter
hasLocation
_dueAfter
_dueBefore
_hasLocation
_location
T@"NSString",R,N,V_title
T@"NSDate",R,N,V_dueAfter
T@"NSDate",R,N,V_dueBefore
T@"NSNumber",R,N,V_completed
T@"NSNumber",R,N,V_hasLocation
T@"NSString",R,N,V_location
initWithList:
isSharedToMe
isOwnedByMeWithSharingStatus:
shareeContext
sharedOwner
formattedName
isShared
formattedSharedOwnerName
isOwnedByMe
shareesExcludingOwner
fetchRequestWithPredicateDescriptor:sortDescriptors:
appearanceContext
calDAVNotificationContext
reminderIDsOrdering
canBeShared
canBeIncludedInGroup
fetchRemindersAndSubtasksWithError:
fetchRemindersCountWithError:
sharingStatusText
hack_overrideReminderIDsOrderingWithOrderedObjectIDs:
T@"NSDictionary",R,D,N
T@"REMListStorage",C,N,V_storage
T@"NSOrderedSet",R,D,N
T@"NSDate",R,C,D,N
T@"REMListCalDAVNotificationContext",R,N
T@"REMListShareeContext",R,N
T@"REMListAppearanceContext",R,N
T@"REMListSublistContext",R,N
emblem
setList:
_list
T@"REMList",&,N,V_list
fetchListsInGroup:error:
sortDescriptorWithKey:ascending:
sortedArrayUsingDescriptors:
_sharedOwner
T@"REMSharee",R,N,V_sharedOwner
initWithDocument:objectID:
reminderIDsProxy
mutableOrderedSetValueForKey:
delegate
_orderedSet
addUndoCommandsForList:block:
listFromSerializedData:replica:
addReminder:
countOfReminderIDs
objectInReminderIDsAtIndex:
indexInReminderIDsOfObject:
insertObject:inReminderIDsAtIndex:
removeObjectFromReminderIDsAtIndex:
_reminderIDsStorage
_delegate
_replica
_remObjectID
T@"NSUUID",R,N,V_replica
T@"REMObjectID",&,N,V_remObjectID
T@"NSObject<REMCRReminderIDListDelegate>",W,N,V_delegate
T@"NSMutableOrderedSet",R,N
initWithReplicaID:
insertString:atIndex:
initWithMergeableString:
initWithData:andReplicaID:
serialize
initWithReplicaIDSource:immutableDocumentToEdit:
rem_isEqual:
rem_copyWithReplicaIDForNewEdits:
mergeWithStringVersionedDocument:
mergedWithDocument:error:
T@"TTMergeableStringVersionedDocument",&,N,V_document
T@"NSAttributedString",R,N
T@"TTMergeableAttributedString",R,N
deleteCharactersInRange:
insertAttributedString:atIndex:
immutableDocument
_test_insertString:atIndex:
remDebugTimeZone_LosAngeles
remDebugTimeZone_NewYork
remDebugTimeZone_GMT
isEqualToTimeZone:
getCharacters:range:
_shouldUseCentralizedDataPath
URLsForDirectory:inDomains:
URLForGroupContainerWithIdentifier:
checkResourceIsReachableAndReturnError:
applicationDocumentsURL
containerURLForSecurityApplicationGroupIdentifier:
bundleProxyForIdentifier:
groupContainerURLs
attributesForGroupContainerDirectory
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
mainContainerURL
URLByAppendingPathComponent:isDirectory:
containerURLForMLModel
locationBundleURL
setApplicationDocumentsURL:
mainContainerBackupURL
pptSentinelURLInContainerURL:
urlForIsolatedContainerWithIdentifier:
MLModelURL
temporaryMLModelURL
setIsCacheSet:
setFloatingDateComponents:
setNonFloatingDateComponents:
setHasAlarmDateComponents:
_displayDateWithDueDateComponents:alarms:hasAlarmDateComponents:floatingDateComponents:nonFloatingDateComponents:displayDateUtils:
isCacheSet
invokeWithCache:
hasAlarmDateComponents
floatingDateComponents
nonFloatingDateComponents
updateDisplayDateWithDueDateComponents:alarm:alarmsProviding:
delegete
setDelegete:
_isCacheSet
_hasAlarmDateComponents
_delegete
_floatingDateComponents
_nonFloatingDateComponents
TB,N,V_isCacheSet
TB,N,V_hasAlarmDateComponents
T@"NSDateComponents",&,N,V_dueDateComponents
T@"NSDateComponents",&,N,V_floatingDateComponents
T@"NSDateComponents",&,N,V_nonFloatingDateComponents
T@"<REMDisplayDateUtilsDelegate>",W,N,V_delegete
initWithCustomSmartListObjectID:insertIntoAccountChangeItem:withParentListChangeItem:
removeFromParentAllowingUndoWithAccountChangeItem:
initWithSmartListChangeItem:
isSubContainer
parentOwnerID
setIsPinned:
parentAccount
_parentAccount
T@"REMAccount",R,N,V_parentAccount
T@"REMSmartListStorage",R,C,N,V_storage
T@"REMSmartListCustomContextChangeItem",R,N
smartListChangeItem
setSmartListChangeItem:
_smartListChangeItem
T@"REMSmartListChangeItem",&,N,V_smartListChangeItem
T@"REMColor",C,N
initWithPurpose:
accountsFromStorages:
initWithFetchREMObjectIDOnly:
accountIDs
initWithFetchOption:
initWithExternalIdentifiers:
initWithAccountIDs:
_accountIDs
T@"NSArray",R,N,V_accountIDs
initWithStorages:
purpose
_purpose
Tq,R,N,V_purpose
fetchREMObjectIDOnly
_fetchREMObjectIDOnly
TB,R,N,V_fetchREMObjectIDOnly
fetchOption
_fetchOption
Tq,R,N,V_fetchOption
valueStorage
setValueStorage:
storeProperty:forKey:
_valueStorage
T@"NSMutableDictionary",&,N,V_valueStorage
setEmblem:
setEmoji:
_isJSONString:
_emojiFromRawString:
emoji
initWithEmblem:
initWithEmoji:
_isSingleCharacterEmoji:
T@"NSString",C,N,Vemblem
T@"NSString",C,N,Vemoji
rem_dataWithRandomBytesWithLength:
initWithObjectID:name:insertIntoAccountChangeItem:isGroup:withParentList:
initWithListChangeItem:
removeFromAccountAllowingUndo
_lowLevelAddReminderIDToOrdering:relativeToSiblingID:isAfter:
setByAddingObjectsFromArray:
_editReminderIDsOrderingUsingBlock:
_reassignReminderChangeItem:withParentReminderChangeItem:
_lowLevelAddReminderChangeItemToOrdering:atIndexOfSibling:isAfter:withParent:
numberWithUnsignedLong:
addEntriesFromDictionary:
removeFromParentAllowingUndo
optimisticallyInsertReminderIDToOrderingForReminderChangeItemBeingSaved:
undeleteRemindersWithoutUndoWithIDs:isCalDAV:
T@"NSDictionary",&,D,N
T@"REMListStorage",R,C,N,V_storage
T@"REMListCalDAVNotificationContextChangeItem",R,N
T@"REMListShareeContextChangeItem",R,N
T@"REMListAppearanceContextChangeItem",R,N
T@"REMListSublistContextChangeItem",R,N
setListChangeItem:
T@"REMListChangeItem",&,N,V_listChangeItem
_insertMergeableOrderingNode:adjacentToMergeableOrderingNode:isAfter:
undeleteChildListWithID:usingUndo:
undeleteChildSmartListWithID:usingUndo:
_addCalDAVNotification:
addCalDAVNotificationWithUUIDString:hostURL:externalIdentifier:externalModificationTag:
removeCalDAVNotication:
clearCalDAVNotifications
updateCalDAVNotification:withBlock:
initShareeWithObjectID:accountID:listID:displayName:firstName:middleName:lastName:namePrefix:nameSuffix:nickname:address:status:accessLevel:
addSharee:
addShareeWithDisplayName:firstName:middleName:lastName:namePrefix:nameSuffix:nickname:address:status:accessLevel:
givenName
middleName
familyName
namePrefix
nameSuffix
nickname
addShareeWithDisplayName:firstName:lastName:address:status:accessLevel:
addShareeWithPersonNameComponents:address:status:accessLevel:
removeSharee:
removeAllSharees
copyListDataFrom:
_testingOnly_setReminderIDsMergeableOrder:
_testingOnly_listShareeContextChangeItem
templateStorages
templatesFromTemplateStorages:store:
fetchTemplatesWithObjectIDs:error:
T@"NSSet",R,N,V_objectIDs
initWithTemplateStorages:
_templateStorages
T@"NSArray",R,N,V_templateStorages
setMostRecentPublicLinkUpdateRequestDate:
setPublicLink:
_sortingStyle
_unsavedManualOrdering
_mostRecentPublicLinkUpdateRequestDate
_publicLink
T@"REMTemplateConfiguration",&,N,V_configuration
T@"NSString",C,N,V_badgeEmblem
T@"NSString",C,N,V_sortingStyle
T@"REMManualOrdering",&,N,V_unsavedManualOrdering
T@"NSDate",&,N,V_mostRecentPublicLinkUpdateRequestDate
T@"REMTemplatePublicLink",&,N,V_publicLink
exportICSCalendarFromReminders:exportingOption:
_icsCalendarItemsFromReminders:exportingOption:
icsTodoFromReminder:exportingOption:
initWithYear:month:day:
setDue:
initWithYear:month:day:hour:minute:second:timeZone:
initWithYear:month:day:hour:minute:second:
setDtstart:
_updateICSComponentWithReminder:icsCalendarItem:
setUid:
universalLink
initWithValue:type:
setX_apple_activity:
userActivityData
setX_apple_appLinkData:
setPercentComplete:
setStatus:
setX_apple_sort_order:
setSummary:
setDescription:
setDtstamp:
setLast_modified:
setCreated:
exportICSCalendarFromReminders:
icsTodoFromReminder:
CalGregorianGMTCalendar
initWithDate:
dtstart
setComponents:
initWithWeeks:days:hours:minutes:seconds:
initWithDuration:
setAction:
setX_wr_alarmuid:
setX_apple_proximity:
setAcknowledged:
setRelatedTo:
setX_apple_structured_location:
setValue:type:
setParameterValue:forName:
stringValue
ICSStringWithOptions:
setRrule:
initWithFrequency:
setWkst:
setCount:
setUntil:
initWithWeekday:number:
setByday:
setBymonth:
setBymonthday:
setByweekno:
setByyearday:
setBysetpos:
fetchRequestForRemindersListID:withSortDescriptors:
initWithReminder:
fetchRequestForRemindersListID:
fetchRequestForScheduledRemindersWithDueDateOnOrAfter:
_parentReminder
T@"REMReminder",&,N,V_parentReminder
T@"REMReminderStorage",R,N,V_storage
T@"REMCRMergeableStringDocument",R,D,N
T@"REMContactRepresentation",R,D,N
TQ,R,D,N
T@"NSURL",R,D,N
T@"REMUserActivity",R,D,N
T@"REMReminderAssignmentContext",R,N
T@"REMReminderHashtagContext",R,N
T@"REMList",R,N,V_list
T@"NSAttributedString",R,C,N
TB,R,D,N,GisCompleted
T@"NSDateComponents",R,C,D,N
T@"REMReminderAttachmentContext",R,N
T@"REMReminderSubtaskContext",R,N
T@"REMReminderFlaggedContext",R,N
reminder
hasSubtasksWithError:
fetchRemindersForMovingWithError:
fetchObjectIDsOfCompletedSubtasksWithError:
fetchObjectIDsOfUnsupportedSubtasksWithError:
setReminder:
_reminder
T@"REMReminder",&,N,V_reminder
T@"REMReminder",R,N
T@"REMReminder",W,N,V_reminder
initWithUndoBlocks:
_undoBlocks
T@"NSArray",R,N,V_undoBlocks
T@"NSMutableArray",R,N,V_undoBlocks
fetchListsCountWithError:
fetchUncompletedRemindersCountWithError:
fetchCompletedRemindersCountInList:error:
dataFromUserActivity:
initWithType:storage:
_createUserActivityDataWithOptions:completionHandler:
initWithData:encoding:
_initWithUserActivityData:
stringForActivityType:
debugDescriptionDetails
webpageURL
siriIntent
userActivityWithUserActivity:completion:
userActivityWithDictionaryData:error:
initWithUserActivity:
initWithSiriIntent:
archivedDictionaryData
T@"NSData",R,N,V_storage
firstName
lastName
accessLevel
isEqualToSharee:
setGivenName:
setMiddleName:
setFamilyName:
setNamePrefix:
setNameSuffix:
setNickname:
rem_tidyFormattedNameString
formattedNameWithStyle:
personNameComponents
localizedStringFromPersonNameComponents:style:options:
formattedStringValue
initShareeWithObjectID:accountID:listID:displayName:firstName:lastName:address:status:accessLevel:
initShareeWithObjectID:accountID:listID:personNameComponents:address:status:accessLevel:
shortName
_firstName
_middleName
_lastName
_namePrefix
_nameSuffix
_nickname
_accessLevel
T@"NSString",R,N,V_displayName
T@"NSString",R,N,V_firstName
T@"NSString",R,N,V_middleName
T@"NSString",R,N,V_lastName
T@"NSString",R,N,V_namePrefix
T@"NSString",R,N,V_nameSuffix
T@"NSString",R,N,V_nickname
T@"NSPersonNameComponents",R,N
T@"NSString",R,N,V_address
Tq,R,N,V_accessLevel
whitespaceCharacterSet
stringByTrimmingCharactersInSet:
setMap:
initWithMap:
compare:forKey:
compareAndMergeWithMap:forKey:
keyEnumerator
mapWithData:
initTokenWithDefaultValueIfNecessaryForKey:
mergeWithMap:forKey:
forceMergeFromMap:forKey:
getTokenForKey:
setToken:forKey:
getTokenKeys
_map
T@"NSMutableDictionary",&,N,V_map
encodeExternalIdentifierForMarkedForDeletionObject:
initWithDebugUseInMemoryPreferredDefaultListStorage:
initWithAccountObjectID:debugUseInMemoryPreferredDefaultListStorage:
listsFromAccountStorages:listStorages:store:
listsFromAccountStorages:listStorages:store:requestedExternalIdentifiers:
fetchListsIncludingSpecialContainersWithObjectIDs:error:
fetchListsWithExternalIdentifiers:inAccount:error:
initWithExternalIdentifiers:accountObjectID:
setIncludeMarkedForDeletionOnly:
initWithExternalIdentifier:accountObjectID:
initWithTemplateObjectID:
debug_useInMemoryPreferredDefaultListStorage
setDebug_useInMemoryPreferredDefaultListStorage:
_debug_useInMemoryPreferredDefaultListStorage
TB,N,V_debug_useInMemoryPreferredDefaultListStorage
includeMarkedForDeletionOnly
_includeMarkedForDeletionOnly
TB,N,V_includeMarkedForDeletionOnly
initWithAccountStorages:listStorages:objectIDs:
templateObjectID
_templateObjectID
T@"REMObjectID",R,N,V_templateObjectID
accountType
aa_isManagedAppleID
isProvisionedForDataclass:
rem_didChooseToMigrate
rem_didFinishMigration
rem_isPrimaryAppleAccount
isHashtag:equalToModelComparable:
isEqualToModelComparable:
T@"NSString",C,N,V_objectIdentifier
setReplicaUUID:
sharedTopotextTimestamp
mergeWithString:mergeTimestamps:
stringsWithClocksNeedingUpdating
stringsWithClocksToResetAfterRealizingLocalChanges
T@"CRTTCompatibleDocument",&,N
currentDocumentObjectForDecoding
initWithArchive:andReplicaID:andSharedTimestamp:
currentDocumentObjectForEncoding
encodeWithCRCoder:string:
saveToArchive:
initWithCRCoder:string:
registerCRClasses
encodeDocument:
setCurrentDocument:
setKeySet:
setUuidSet:
setEncodedObjects:
currentDocument
encodeIntoProtobufTimestamp:coder:
startVersion
encodedObjects
valueWithNonretainedObject:
setTypeIndexForCurrentCustomObjectIfNecessary:
keySet
typeSet
uuidSet
typeIndexForClass:
currentCustomObjectForEncoding
mutableObjectIDForKey:
encodeObject:forObjectID:
indexForKey:
encodedDataWithDocument:
encodeUUID:forKey:
encodeInt32:forKey:
encodeUInt32:forKey:
encodeUInt64:forKey:
encodeUUIDIndexFromUUID:
.cxx_construct
currentDocObjectEncodingStack
_uuidSet
_keySet
_encodedObjects
_currentDocument
T@"NSMutableOrderedSet",&,N,V_uuidSet
T@"NSMutableOrderedSet",&,N,V_keySet
T@"NSMutableOrderedSet",&,N,V_encodedObjects
T^v,N,V_currentDocument
initWithValue:timestamp:
shortDescription
temporaryElementWithValue:
setValue:
_value
T@"<CRDataType>",&,N,V_value
T@"CRVectorTimestamp",&,N,V_timestamp
strongToStrongObjectsMapTable
encodeWithCRCoder:dictionary:
encodeWithCRCoder:dictionary:elementValueCoder:
contents
initWithCRCoder:dictionary:
decodeObjectForProtobufObjectID:
initWithCRCoder:dictionary:elementValueDecoder:
initWithProtobufTimestamp:decoder:
addDecoderCompletionHandler:dependency:for:
replicaClock
unserialisedIdentifier
setClock:forUUID:
setDocumentFor:
setRemoveClock:
clockForUUID:
removeUUID:
unserializedReplicaClock
setUnserializedReplicaClock:
removeClock
mergeWithDictionary:
minusVectorTimestamp:
localObject:
enumerateKeysObjectsAndTimestampsUsingBlock:
setContents:
_contents
_removeClock
T@"NSMapTable",&,N,V_contents
Tq,N,V_removeClock
T@"CRDocument",W,N,V_document
_clock
_subclock
TQ,N,V_clock
TQ,N,V_subclock
mergeWithTimestamp:
compareTo:
TTCompare:
allUUIDs
setClock:subclock:forUUID:
sortedUUIDs
subclockForUUID:
incrementClockForUUID:
setObject:atIndexedSubscript:
initWithTimestamps:
isDocumentShared
clockElementForUUID:atIndex:
clockForUUID:atIndex:
setClock:forUUID:atIndex:
setClock:subclock:forUUID:atIndex:
setTimestamps:
_timestamps
T@"NSArray",&,N,V_timestamps
increaseLengthBy:
dataWithData:
TT_gzipInflate
TT_gzipDeflate
initWithReplicaID:asFragment:
TTZero
initWithArchive:andReplicaID:
replaceCharactersInRange:withAttributedString:
getSubstrings:forCharacterRange:
deleteSubstrings:withCharacterRanges:
orderedSubstrings
splitTopoSubstring:atIndex:
invalidateCache
insertAttributedString:after:before:
coalesce
selectionForCharacterRanges:selectionAffinity:
setSelectionAffinity:
selectionRanges
characterRangesForSelection:selectedSubstringsBlock:
selectionAffinity
shouldInvalidateCachedSubstringsWithTimestamp:
updateClock
unserialisedReplicaID
edited:range:changeInLength:
updateSubstringIndexes
getSubstrings:inOrderedSubstrings:forCharacterRange:
substring:modifiedAfter:
textEitherSideOfSelectionAnchor:wasModifiedAfter:
updateCache
ic_appendAttributedSubstring:fromRange:
isFragment
updateTopoIDRange:toNewRangeID:
traverseUnordered:
objectsNeedingUpdatedRanges
hasTopoIDsThatCanChange
minusHashTable:
generateIdsForLocalChangesSafeForSharedTimestamp:
cleanupObjectsNeedingUpdatedRanges
startNodes
endNodes
initWithIndexesInRange:
intersectsIndexesInRange:
addIndexesInRange:
mutableString
stringByAppendingPathComponent:
writeToFile:atomically:
dumpMergeData:
checkTimestampLogStyleErrors:
canMergeString:
check:
ic_replaceCharactersInRange:withAttributedSubstring:fromRange:
sortSplitNodes
updateAttributedStringAfterMerge
graphIsEqual:
TTShortDescription
replicaUUIDForCharacterAtIndex:
selectionForCharacterRanges:
characterRangesForSelection:
resetLocalReplicaClocksToTimestampValues
_testSetTextTimestamp:
updateTimestampsInRange:
moveRange:toIndex:
getSubstringBeforeTopoID:
getSubstrings:forTopoIDRange:
getCharacterRanges:forSubstrings:
getCharacterIndexForCharID:
enumerateSubstrings:
enumerateRangesModifiedAfter:usingBlock:
selection:wasModifiedAfter:
mergeWithString:
dotDescription:
hasLocalChanges
setHasLocalChanges:
setAttributedString:
replicaTextClock
replicaStyleClock
_startNodes
_endNodes
_orderedSubstrings
_unserializedClock
_editCount
_cacheInvalid
_updateRangeBlock
_hasLocalChanges
_replicaUUID
_objectsNeedingUpdatedRanges
_attributedString
_replicaTextClock
_replicaStyleClock
T@"TTVectorMultiTimestamp",&,N,V_timestamp
TB,N,V_hasLocalChanges
T@"NSUUID",&,N,V_replicaUUID
T@"NSMutableAttributedString",&,N,V_attributedString
TQ,R,N,V_replicaTextClock
TQ,R,N,V_replicaStyleClock
T@"NSObject<TTMergeableStringDelegate>",W,N,V_delegate
T@"NSHashTable",R,N,V_objectsNeedingUpdatedRanges
textAttachmentAtIndex:
initWithUTF8String:
applyToString:
addUndoCommand:
replaceObjectAtIndex:withObject:
nsArray
T@"TTMergeableAttributedString",R,N,V_contents
T@"NSObject<CRUndoDelegate>",W,N,V_delegate
initWithArchive:
initWithData:
_selectionRanges
_selectionAffinity
TQ,N,V_selectionAffinity
loadData:
loadArchive:
versionedDocumentSerializationVersion
loadDocumentArchive:
serializationVersion
dataWithBytesNoCopy:length:freeWhenDone:
mergeVersion:fromData:
serializeCurrentVersion:
documentArchive
saveCurrentVersion:
futureVersionCount
mergeWithVersionedDocument:
maxDocumentVersion
setDocumentArchive:
_documentArchive
T^v,N,V_documentArchive
initWithData:andCapacity:
initWithArchive:andCapacity:
setStyle:
textAlignmentForParagraphStyleAlignment:
setAlignment:
writingDirectionForAttribute:
setWritingDirection:
setIndent:
setStartingItemNumber:
setHints:
alignment
paragraphStyleAlignmentForTextAlignment:
writingDirection
attributeForWritingDirection:
indent
startingItemNumber
hints
setSeen:
addToGroup:
commands
seen
containsIndexesInRange:
closeGroup
addCommand:
addSeenRange:
setCommands:
_seen
_commands
T@"NSMutableDictionary",&,N,V_seen
T@"NSMutableArray",&,N,V_commands
initWithVersion:startVersion:rootObject:replica:topoTimestamp:
initWithVersion:startVersion:rootObject:replica:
setSharedTopotextTimestamp:
setStringsWithClocksNeedingUpdating:
setStringsWithClocksToResetAfterRealizingLocalChanges:
mergeResultForMergingWithDocument:
mergeTimestampWithDocument:
_sharedTopotextTimestamp
_stringsWithClocksNeedingUpdating
_stringsWithClocksToResetAfterRealizingLocalChanges
T@"TTCRVectorMultiTimestamp",&,N,V_sharedTopotextTimestamp
T@"NSMutableArray",&,N,V_stringsWithClocksNeedingUpdating
T@"NSMutableArray",&,N,V_stringsWithClocksToResetAfterRealizingLocalChanges
initWithArchive:andReplicaID:withOrderedSubstrings:timestamp:
attributesForRun:
numberWithInt:
defaultCStringEncoding
stringWithCString:encoding:
unsignedLongValue
saveAttributesOfString:toArchive:
attributesAtIndex:longestEffectiveRange:inRange:
saveAttributes:toArchive:
i_saveDeltasSinceTimestamp:toArchive:
saveDeltaSinceTimestamp:toArchive:
initWithTTArray:contents:document:
setArray:
_addObject:
_insertObject:atIndex:
_insertObject:withIdentifier:atIndex:forUndo:
removeObjectAtIndex:forUndo:
setMoveClock:
moveClock
firstIndexOf:fromIndex:
_moveClock
_array
T@"TTArray",&,N,V_array
T@"CRDictionary",&,N,V_contents
TB,N,V_moveClock
hasDecodableValueForKey:
decodeInt32ForKey:
initWithInteger:
initWithDouble:
dependency
setDependency:
T@?,C,N,Vblock
T@,W,N,Vdependency
T@,W,N,Vvalue
decodeDocumentFromData:replica:
isSubclassOfClass:
allocedDocObjects
typeSetForDecoding
typeToClassDict
willModifySelfInInitForClass:
setReplica:
setCompletionHandlers:
setUuidArray:
uuidArray
setTypeSetForDecoding:
setAllocedDocObjects:
stringWithUTF8String:
setCurrentDocObjectForDecodingPtr:
allocedObjectAtIndex:outNeedsInit:
sortCompletionHandlers
completionHandlers
currentDocObjectForDecodingPtr
currentObjectIDForKey:
decodedDocumentFromData:replica:
decodeObjectForKey:
decodeUUIDForKey:
decodeUInt32ForKey:
decodeUInt64ForKey:
decodeUUIDFromUUIDIndex:
_allocedDocObjects
_currentDocObjectForDecodingPtr
_typeSetForDecoding
_uuidArray
_completionHandlers
T@"NSUUID",C,N,V_replica
T@"NSMutableArray",&,N,V_allocedDocObjects
Tr^v,N,V_currentDocObjectForDecodingPtr
T@"NSMutableOrderedSet",&,N,V_typeSetForDecoding
T@"NSMutableArray",&,N,V_uuidArray
T@"NSMutableArray",&,N,V_completionHandlers
weakObjectsHashTable
initWithCRCoder:set:
setDictionary:
nextObject
setUpdated:
encodeWithCRCoder:set:
encodeWithCRCoder:set:elementValueCoder:
initWithCRCoder:set:elementValueDecoder:
member:
addObserver:
setObject:
setObservers:
_dictionary
T@"CRDictionary",&,N,V_dictionary
T@"NSHashTable",&,N,V_observers
T@"CRDocument",W,N
T@"NSArray",R,C
initWithReplica:andCounter:
initWithContents:timestamp:document:
encodeIntoProtobufRegisterLatest:coder:
initWithProtobufRegisterLatest:decoder:
initWithContents:document:
mergeWithRegisterLatest:
timestampForReplica:
_setContents:
isEqualContents:
T@"CRTimestamp",&,N,V_timestamp
values
cachedValues
setCachedValues:
mergeWithRegisterMultiValue:
initWithValues:
allContents
setValues:
_values
_cachedValues
T@"CRSet",&,N,V_values
T@"NSSet",&,N,V_cachedValues
needsParagraphCleanup
setNeedsParagraphCleanup:
needsListCleanup
setNeedsListCleanup:
isEqualToParagraphStyle:
isEqualToModelParagraphStyle:
isList
isUnknownStyle
canIndent
isHeader
preferSingleLine
wantsFollowingNewLine
uniqueToLine
trackingUUID
_needsParagraphCleanup
_needsListCleanup
_style
_hints
_alignment
_writingDirection
_indent
_startingItemNumber
TI,N,V_style
Tq,N,V_alignment
Tq,N,V_writingDirection
TQ,N,V_indent
TQ,N,V_startingItemNumber
TI,N,V_hints
TB,N,V_needsParagraphCleanup
TB,N,V_needsListCleanup
TI,D,N
compare:with:
mergeWithRegisterGreatest:
setAttributes:substring:
attributeRanges
_attributeRanges
T^v,R,N,V_attributeRanges
initWithCRCoder:stringArray:
serializeDataFromArchive:
allowlistedTypingAttributes
initWithString:attributes:
attributesEqual:toRange:modelEqual:
attributesEqual:to:modelEqual:
allowlistedAttributesForStyle
CRProperties
registerWithType:contents:
setupConstraintsFor:in:
initWithIdentity:fields:
objects
identity
fields
mergeWithObject:
CR_shortDescription
hasPrefix:
keyFromSelector:
setFieldKey:value:
_identity
_fields
T@"NSUUID",R,N,V_identity
T@"NSDictionary",R,N,V_fields
constant
CR_repeatedCharUUID:
CR_zero
fontName
pointSize
fontHints
initWithName:size:hints:
nativeFont
setNativeFont:
_fontHints
_fontName
_pointSize
_nativeFont
T@,&,N,V_nativeFont
T@"NSString",R,N,V_fontName
Td,R,N,V_pointSize
TI,R,N,V_fontHints
initWithVersion:rootObject:replica:
updateGraphDocumentPointers
updateObjectsSet
hashTableWithOptions:
walkGraph:root:
maxClock:forUUID:
mergeWithData:
documentWithReplica:
documentWithRootObject:replica:
updateObjects:
deltaSince:
_startVersion
_rootObject
_objects
_replicaClock
_unserializedReplicaClock
T@"CRVectorTimestamp",R,N,V_version
T@"CRVectorTimestamp",R,N,V_startVersion
T@,&,N,V_rootObject
Tq,R,N,V_replicaClock
Tq,N,V_unserializedReplicaClock
T@"NSMutableDictionary",R,N,V_objects
setMergeableString:
_mergeableString
T@"TTMergeableAttributedString",&,N,V_mergeableString
encodeWithCRCoder:array:
initWithCRCoder:array:
registerWithType:contents:document:
T@,&,D,N
initWithArchive:andReplicaID:withOrderedSubstrings:
saveSubstrings:archiveSet:linkSet:archivedString:toArchive:
attributedSubstringFromRange:
appendAttributedString:
serializeDeltaSinceTimestamp:
isEqualToTimestamp:
nextTimestampForReplica:
nextTimestamp
earlierTimestamp:
laterTimestamp:
T@"NSUUID",&,N,V_replica
encodeWithCRCoder:orderedSet:
ordering
initWithCRCoder:orderedSet:
initWithOrdering:elements:document:
_registerClass:forType:cluster:
clusterTypeSet
_clusterTypeSet
T@"NSOrderedSet",R,N,V_clusterTypeSet
CR_toStdString
CR_UUIDFromStdString:
insertStrings
deleteRanges
applyUndoCommand:
undeleteSubstrings:
cachedIdentifierSet
setOrdering:
regenerateNSOrderedIdentifierSetAndIndexMapping
generateNSOrderedIdentifierSetWithIndexMapping:
addIndex:
indexSetWithIndex:
objectForIdentifier:
cachedIndexMapping
firstIndex
identifierForObjectInCachedSet:
shiftCachedIndicesStartingAtIndex:by:
undoablyRemoveObjectIdentifiersFromElements:
wipeoutCaches
undoablyInsertObjectIdentifiersIntoElements:
shiftIndexesStartingAtIndex:by:
enumerateIndexesUsingBlock:
_removeObjectsFromOrderingAtIndices:
moveObjectFromIndex:toIndex:mutableSafe:
removeIndex:
reinsertIdentifier:withMaskedIdentifiers:atIndex:forObjectToMove:
moveObjectsAtIndexes:toIndex:
enumerateIndexesWithOptions:usingBlock:
lastIndex
containsObjectEqualTo:
safeMoveObjectFromIndex:toIndex:
realizeElementMutations
_cachedIdentifierSet
_cachedIndexMapping
_ordering
T@"NSMutableOrderedSet",R,N,V_cachedIdentifierSet
T@"NSMapTable",R,N,V_cachedIndexMapping
T@"CRArray",&,N,V_ordering
T@"CRSet",&,N,V_elements
updateInsertTopoIDRange:toNewRangeID:
_deleteRanges
_insertStrings
T^v,R,N,V_deleteRanges
T^v,R,N,V_insertStrings
setCrTimestamp:
crTimestamp
_crTimestamp
T@"CRVectorTimestamp",&,N,V_crTimestamp
@28@0:8@16B24
@24@0:8@16
@24@0:8q16
@32@0:8q16q24
B16@0:8
@24@0:8^{_NSZone=}16
v24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@16@0:8
Q16@0:8
B24@0:8@16
q16@0:8
@20@0:8B16
@28@0:8q16B24
@"NSString"16@0:8
B32@0:8@16@24
q32@0:8@16@24
v24@0:8^v16
@24@0:8r^v16
v16@0:8
@"NSArray"
@40@0:8I16@20B28@32
I16@0:8
v20@0:8I16
v20@0:8B16
@"REMClockElementList"
@"<REMReplicaManagerClient>"
@32@0:8@16@24
@32@0:8@16^@24
v32@0:8@16@24
@32@0:8r^v16^@24
v24@0:8@?16
v32@0:8@16@?24
@24@0:8^@16
@28@0:8B16^@20
v24@0:8Q16
v24@0:8q16
{os_unfair_lock_s=I}16@0:8
v20@0:8{os_unfair_lock_s=I}16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSMutableOrderedSet"
@"NSMutableDictionary"
@32@0:8@16Q24
@"NSData"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"REMReplicaManager"24@0:8@"REMObjectID"16
@"NSDictionary"24@0:8@"NSSet"16
@"REMStore"
@40@0:8@16@24^@32
v52@0:8@16@24@32B40@44
B52@0:8@16@24B32@36^@44
v40@0:8@16@24@32
v24@0:8@?<v@?@"NSError">16
v24@0:8@?<v@?>16
v32@0:8@"NSArray"16@?<v@?>24
@32@0:8q16@24
@40@0:8q16@24@32
@"NSString"24@0:8@"NSString"16
@"NSSet"16@0:8
@"REMResolutionTokenMap"16@0:8
v24@0:8@"REMResolutionTokenMap"16
@"NSData"16@0:8
v24@0:8@"NSData"16
@24@0:8@"REMSaveRequest"16
v24@0:8@"NSString"16
@48@0:8@16@24@32@40
@44@0:8@16@24@32B40
@40@0:8@16@24@32
@40@0:8q16q24@32
@88@0:8q16q24@32@40@48@56@64@72@80
@96@0:8q16q24q32@40@48@56@64@72@80@88
d32@0:8@16@24
v28@0:8@16B24
@"REMSaveRequest"
@"REMReminderStorage"
@"REMChangedKeysObserver"
@"REMReminderChangeItem"
@24@0:8#16
@48@0:8@16Q24Q32^@40
@48@0:8@16@24Q32Q40
v24@0:8#16
@"NSMutableArray"
@40@0:8@16@24q32
@"NSMutableSet"
@40@0:8q16B24B28B32B36
@"NSString"
B32@0:8@16^@24
@32@0:8q16^@24
@48@0:8@16@24@32^@40
B88@0:8@16@24@32@40@48@56@64@72^@80
v96@0:8@16@24@32@40@48@56@64@72@80@?88
Q32@0:8@16^@24
v28@0:8B16@?20
@32@0:8@16@?24
v96@0:8@16@24@32@40@48@56@64B72B76@80@?88
v48@0:8@16@24@32@?40
v40@0:8@16@24@?32
@24@0:8@?16
@"REMStoreContainerToken"
@"_REMInProgressSaveRequestsContainer"
@"<REMDaemonController>"
v48@0:8@16q24@32@?40
@"REMChangeTracking"32@0:8@"REMObjectID"16@"NSString"24
@"REMChangeTracking"40@0:8@"REMObjectID"16@"NSString"24@"NSSet"32
v36@0:8@16B24@?28
B24@0:8^@16
Q24@0:8^@16
@72@0:8@16@24@32@40@48@56^@64
@36@0:8@16B24^@28
v44@0:8@16B24B28B32@?36
v32@0:8B16B20@?24
v32@0:8B16B20@?<v@?@"NSError">24
v32@0:8@16^@24
@"NSUUID"
@"REMFetchResultToken"
@"NSDictionary"
@"REMObjectID"16@0:8
@"REMObjectID"24@0:8@"NSUUID"16
@"REMObjectID"
@32@0:8@16d24
@24@0:8d16
d16@0:8
v24@0:8d16
@"NSDateComponents"
@32@0:8@16q24
@"REMStructuredLocation"
@"REMContactRepresentation"
@24@0:8Q16
Q24@0:8@16
@"REMReplicaIDSource"
@"CRDocument"
v24@0:8@"REMReplicaIDHelper"16
@"<REMReplicaManagerProviding>"16@0:8
v24@0:8@"<REMReplicaManagerProviding>"16
v32@0:8@16@?<v@?@>24
@32@0:8Q16Q24
@"<REMReplicaManagerProviding>"
@"REMReplicaIDHelper"
@"REMMutableCRUndo"
@48@0:8@16q24@32@40
@40@0:8@16q24@32
@"REMAccountTypeHost"
@"REMCRMergeableOrderedSet"
@"REMManualOrdering"
@"NSSet"
@"REMResolutionTokenMap"
@96@0:8q16q24@32@40@48@56@64@72@80@88
q24@0:8@16
@84@0:8q16q24@32@40@48@56@64@72B80
q48@0:8@16@24@32o^@40
q112@0:8q16q24@32@40@48@56@64@72@80@88@96o^@104
@"NSDictionary"16@0:8
@40@0:8@16@24Q32
@"REMListPredicateDescriptor"
@"<REMSaveRequestTrackedValue>"
@36@0:8@16@24B32
@76@0:8q16q24q32q40q48q56B64@68
@"REMClockElementList"24@0:8@"NSUUID"16
@"REMChangeToken"
@"NSDate"
v48@0:8@16@24@32^v40
@"NSObject"
@32@0:8Q16^{_NSRange=QQ}24
v48@0:8{_NSRange=QQ}16Q32@?40
@"REMTTHashtag"32@0:8Q16^{_NSRange=QQ}24
v48@0:8{_NSRange=QQ}16Q32@?<v@?@"REMTTHashtag"{_NSRange=QQ}^B>40
v40@0:8@16{_NSRange=QQ}24
v32@0:8{_NSRange=QQ}16
@48@0:8Q16^{_NSRange=QQ}24{_NSRange=QQ}32
@52@0:8Q16^{_NSRange=QQ}24B32{_NSRange=QQ}36
v40@0:8@16B24B28@?32
v44@0:8B16B20B24@28@?36
v40@0:8@"NSString"16B24B28@?<v@?@"NSError">32
v36@0:8@"NSString"16B24@?<v@?@"NSError">28
v36@0:8@"NSArray"16B24@?<v@?@"NSError">28
v32@0:8@"NSString"16@?<v@?@"NSError">24
v40@0:8@"REMObjectID"16B24B28@?<v@?@"REMMigrationResult"@"NSError">32
v32@0:8@"NSString"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"CKRecord"@"NSError">24
v44@0:8B16B20B24@"NSString"28@?<v@?@"NSError">36
v32@0:8@"REMObjectID"16@?<v@?@"CKRecord"@"NSError">24
@"REMAlarmTrigger"
B40@0:8@16@24B32B36
@"REMCRMergeableStringDocument"
@"NSURL"
@"REMUserActivity"
@"REMDisplayDate"
q32@0:8@16^@24
v32@0:8@16Q24
v44@0:8@16@24B32@36
@"REMAccountStorage"
@"REMAccountChangeItem"
@"REMReminderPredicateDescriptor"
@88@0:8@16@24q32@40@48@56@64@72@80
@36@0:8@16B24@28
@"NSTimeZone"
@"REMSmartListStorage"
@"REMAccount"
@"REMList"
@"REMSmartList"
v40@0:8@16@?24@?32
@"<REMChangeTrackingClientIdentifying>"
@40@0:8#16@24^@32
@"REMTemplateStorage"
@56@0:8@16@24@32@40@48
@72@0:8@16@24@32@40@48@56@64
Q32@0:8q16^{_NSRange=QQ}24
B32@0:8q16^{_NSRange=QQ}24
v44@0:8Q16B24{_NSRange=QQ}28
v36@0:8B16{_NSRange=QQ}20
v32@0:8q16@?24
v48@0:8@16@24Q32@?40
v24@0:8@?<v@?@"REMChangeToken">16
v32@0:8q16@?<v@?@"REMChangeToken">24
v32@0:8@"NSString"16@?<v@?@"REMChangeToken">24
v32@0:8@"<REMChangeTrackingClientIdentifying>"16@?<v@?@"REMChangeTrackingState"@"NSError">24
v40@0:8@"REMChangeTrackingState"16@"<REMChangeTrackingClientIdentifying>"24@?<v@?@"NSError">32
v48@0:8@"REMChangeToken"16@"NSArray"24Q32@?<v@?@"REMChangeSet"@"NSError">40
v48@0:8@"NSDate"16@"NSArray"24Q32@?<v@?@"REMChangeSet"@"NSError">40
v32@0:8@"REMChangeToken"16@?<v@?@"NSError">24
v32@0:8@"NSDate"16@?<v@?@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSDictionary"@"NSError">24
d40@0:8@16@24d32
@72@0:8@16@24@32@40Q48@56@64
@88@0:8@16@24@32@40Q48@56@64Q72Q80
@60@0:8@16B24d28Q36Q44@52
@"NSUUID"16@0:8
@"_REMChangedObjectIDStorage"
@"REMNSPersistentHistoryChangeTombstone"
@"REMChangeTransaction"
@"_REMNSPersistentHistoryChangeStorage"
@"NSPersistentHistoryChange"
B28@0:8@16B24
B40@0:8q16#24@?32
@"NSError"
@"NSNumber"
@"NSArray"16@0:8
@"REMChangeTombstone"
@24@0:8@?<v@?@"NSError">16
@"NSObject<OS_dispatch_queue>"
@"<REMXPCSuggestedAttributesPerformer>"
@64@0:8@16@24@32@40@48:56
@52@0:8@16@24@32@40B48
@44@0:8@16B24B28B32^@36
@"REMReminderFetchOptions"
@36@0:8@16B24B28B32
@28@0:8B16B20B24
B32@0:8#16@24
B32@0:8^q16^@24
@32@0:8#16q24
@36@0:8#16q24B32
v56@0:8@16#24@32@?40@?48
@36@0:8#16@24B32
@32@0:8#16@24
q24@0:8q16
v40@0:8@16#24q32
@"<REMDAAccountProviding>"
@"REMChangeSet"
@"REMChangeTracking"
@"REMChangeTrackingState"
@?16@0:8
@?<@"<_REMDAChangeTrackableModel>"@?@"REMObjectID"B@"REMStore"^@>16@0:8
@?<@"NSDictionary"@?@"NSArray"@"REMStore"^@>16@0:8
@?<@"<REMDAChangedIdentifierResult>"@?@"REMChangeTombstone">16@0:8
@?<@"<REMDAChangedIdentifierResult>"@?@"<_REMDAChangeTrackableModel>">16@0:8
@32@0:8@16#24
B32@0:8@?16^@24
@64@0:8@16@24@32@40@48q56
@72@0:8@16@24@32@40@48q56@64
@64@0:8@16@24@32@40q48@56
@40@0:8q16d24@32
@64@0:8@16@24@32@40@48@56
v48@0:8@16Q24@32@40
v40@0:8Q16@24@32
@"REMFetchMetadata"
B40@0:8q16q24@32
B24@0:8q16
B32@0:8^B16^@24
@"REMAccountCapabilities"
@"<REMReplicaClockProviding>"
@"<REMReplicaIDHelperOwner>"
Q32@0:8@16Q24
d32@0:8@16d24
@"TTParagraphStyle"
@32@0:8q16^{_NSRange=QQ}24
v40@0:8q16{_NSRange=QQ}24
@"<REMXPCChangeTrackingPerformer>"32@0:8@"NSString"16@?<v@?@"NSError">24
@"<REMXPCDebugPerformer>"32@0:8@"NSString"16@?<v@?@"NSError">24
@"<REMXPCDebugPerformer>"24@0:8@?<v@?@"NSError">16
@"<REMXPCStorePerformer>"32@0:8@"NSString"16@?<v@?@"NSError">24
v40@0:8@"NSString"16@?<v@?@"<REMXPCStorePerformer>">24@?<v@?@"NSError">32
@"<REMXPCSyncInterfacePerformer>"32@0:8@"NSString"16@?<v@?@"NSError">24
v40@0:8@"NSString"16@?<v@?@"<REMXPCSyncInterfacePerformer>">24@?<v@?@"NSError">32
@"<REMXPCIndexingPerformer>"32@0:8@"NSString"16@?<v@?@"NSError">24
v40@0:8@"NSString"16@?<v@?@"<REMXPCIndexingPerformer>">24@?<v@?@"NSError">32
@40@0:8@16@24@?32
v48@0:8@16@24@?32@?40
@"<REMXPCDaemonControllerCloudKitNetworkActivityDelegate>"
@"NSXPCConnection"
v24@0:8@"NSNumber"16
@96@0:8@16@24d32d40d48@56@64@72@80@88
v40@0:8{_NSRange=QQ}16@32
v48@0:8q16{_NSRange=QQ}24q40
@"<REMCRMutableAttributedStringEditObserver>"
@"NSMutableAttributedString"
@48@0:8d16d24d32d40
@56@0:8d16d24d32d40Q48
@32@0:8d16d24
@80@0:8d16d24d32d40Q48@56@64@72
@"NSUserDefaults"
v32@0:8Q16@24
@"REMUserDefaults"
v104@0:8@16@24@32@40@48@56@64@72Q80B88B92@?96
v32@0:8@"REMFetchRequest"16@?<v@?@"REMFetchResult"@"NSError">24
v32@0:8@"REMStoreInvocation"16@?<v@?@"REMStoreInvocationResult"@"NSError">24
v48@0:8@"REMStoreSwiftInvocation"16@"NSData"24@"NSDictionary"32@?<v@?@"REMStoreSwiftInvocationResult"@"NSError">40
v32@0:8@"REMObjectID"16@?<v@?@"REMReplicaManagerSerializedData"@"NSError">24
v40@0:8@"REMObjectID"16@"NSString"24@?<v@?@"NSDictionary"@"NSError">32
v32@0:8@"REMDistributedEvaluationCollectionOptions"16@?<v@?@"NSData"@"NSError">24
v104@0:8@"NSArray"16@"NSArray"24@"NSArray"32@"NSArray"40@"NSArray"48@"NSDictionary"56@"NSDictionary"64@"NSString"72Q80B88B92@?<v@?@"NSError">96
v32@0:8@"REMObjectID"16@?<v@?@"CKShare"@"NSError">24
v40@0:8@"REMObjectID"16@"NSData"24@?<v@?@"CKShare"@"NSError">32
v40@0:8@"CKShare"16@"NSString"24@?<v@?@"NSError">32
v32@0:8@"CKShareMetadata"16@?<v@?B@"NSString"@"NSError">24
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError">32
v32@0:8@"NSArray"16@?<v@?@"NSError">24
v32@0:8@"REMObjectID"16@?<v@?@"REMTemplateContentAttributes"@"NSError">24
v40@0:8@"REMObjectID"16@"REMTemplatePublicLinkConfiguration"24@?<v@?@"REMTemplatePublicLink"@"NSError">32
v40@0:8@"REMObjectID"16@"REMTemplatePublicLinkConfiguration"24@?<v@?@"REMObjectID"@"NSError">32
v32@0:8@"REMObjectID"16@?<v@?@"REMObjectID"@"NSError">24
v32@0:8@"NSUUID"16@?<v@?@"REMObjectID"@"NSError">24
v28@0:8B16@?<v@?BB@"NSError">20
v36@0:8@"NSString"16B24@?<v@?BB@"NSError">28
v24@0:8@?<v@?B@"NSError">16
v32@0:8@"NSString"16@?<v@?@"<REMXPCSuggestedAttributesPerformer>"@"NSError">24
v32@0:8@"REMObjectID"16@?<v@?@"NSNumber"@"NSError">24
v36@0:8@"NSArray"16B24@?<v@?@"NSArray"@"NSError">28
v48@0:8B16B20@24@32@?40
@"ACAccount"
@"ACAccountStore"
@"REMNSPersistentHistoryToken"
@"_REMNSPersistentHistoryTransactionStorage"
@60@0:8@16@24@32@40@48B56
@"REMTemplatePublicLinkConfiguration"
@56@0:8@16@24@32q40@48
@64@0:8@16@24@32q40@48@56
v24@0:8@"<CRDataType>"16
@"<CRDataType>"32@0:8@"CRVectorTimestamp"16@"CRDocument"24
v24@0:8@"CRDocument"16
v24@0:8@?<v@?@>16
v24@0:8@"CRCoder"16
@24@0:8@"CRCoder"16
@32@0:8@16B24B28
@52@0:8@16@24@32B40@44
i24@0:8q16
@64@0:8@16@24@32q40q48@56
@120@0:8@16@24@32q40q48q56@64@72@80@88@96@104@112
@24@0:8B16B20
@"REMRecurrenceEnd"
v40@0:8@"REMStoreContainerToken"16@"NSString"24@?<v@?@"<REMXPCChangeTrackingPerformer>"@"NSError">32
v40@0:8@"REMStoreContainerToken"16@"NSString"24@?<v@?@"<REMXPCDebugPerformer>"@"NSError">32
v48@0:8@"NSString"16@"REMStoreContainerToken"24@"NSString"32@?<v@?@"<REMXPCStorePerformer>"@"NSError">40
v32@0:8@"NSString"16@?<v@?@"<REMXPCSyncInterfacePerformer>"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"<REMXPCIndexingPerformer>"@"NSError">24
@68@0:8@16s24@28@36@44@52@60
@44@0:8@16s24@28@36
s16@0:8
@"NSPersistentHistoryToken"
v60@0:8@16@24@32@40B48@?52
v56@0:8d16d24d32@40@?48
v40@0:8@16q24@?32
v24@0:8@?<v@?@"NSString">16
v28@0:8B16@?<v@?@"NSDictionary"@"NSError">20
v24@0:8@?<v@?@"NSURL">16
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v32@0:8@"NSString"16@?<v@?q@"NSDictionary"@"NSError">24
v24@0:8@?<v@?@"NSString"@"NSDictionary"@"NSError">16
v60@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40B48@?<v@?@"NSError">52
v32@0:8@"REMObjectID"16@?<v@?@"NSString">24
v40@0:8@"REMObjectID"16B24B28@?<v@?@"NSError">32
v36@0:8@"REMObjectID"16B24@?<v@?@"NSError">28
v24@0:8@?<v@?@"NSArray">16
v56@0:8d16d24d32@"NSUUID"40@?<v@?>48
v32@0:8@"NSUUID"16@?<v@?>24
v32@0:8@"NSString"16@?<v@?>24
v32@0:8@"NSString"16@?<v@?@"NSArray">24
v24@0:8@?<v@?@"REMStoreContainerToken"@"NSError">16
v32@0:8@"REMStoreContainerToken"16@?<v@?@"NSError">24
v24@0:8@?<v@?@"NSArray"@"NSError">16
v40@0:8@"NSString"16@"NSURL"24@?<v@?@"NSError">32
v40@0:8@"NSString"16@"NSUUID"24@?<v@?@"NSError">32
v28@0:8B16@?<v@?@"NSArray"@"NSError">20
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSArray"@"NSError">32
v32@0:8@"NSUUID"16@?<v@?@"NSError">24
v40@0:8@"NSUUID"16@"NSDate"24@?<v@?@"NSError">32
v32@0:8@"NSUUID"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"REMSharedEntitySyncActivity"16@?<v@?@"NSError">24
v40@0:8@"REMObjectID"16q24@?<v@?@"NSError">32
v28@0:8B16@20
v32@0:8q16@24
q32@0:8@16q24
@"REMXPCDaemonController"
@"REMColor"
v56@0:8@16@24@32@40@48
@"<REMSaveRequestNotifyChangeDelegate>"
@"_REMFetchExecutor"
@"NSOrderedSet"
B32@0:8Q16q24
@"REMListStorage"
@"REMSharee"
@"CRTombstoneOrderedSet"
@"NSObject<REMCRReminderIDListDelegate>"
@"TTMergeableStringVersionedDocument"
@60@0:8@16@24B32@36@44@52
@"<REMDisplayDateUtilsDelegate>"
@"REMSaveRequest"16@0:8
v24@0:8@"REMAccountChangeItem"16
v24@0:8@"REMObjectID"16
@"REMSmartListChangeItem"
B36@0:8@16@24B32
@"REMListChangeItem"
v36@0:8@16@24B32
@96@0:8@16@24@32@40@48@56@64@72q80q88
@64@0:8@16@24@32@40q48q56
@48@0:8@16@24q32q40
@"REMTemplateConfiguration"
@"REMTemplatePublicLink"
@"REMReminder"
@120@0:8@16@24@32@40@48@56@64@72@80@88@96q104q112
@88@0:8@16@24@32@40@48@56@64q72q80
@72@0:8@16@24@32@40@48q56q64
B24@0:8@"<TTModelAttributeComparable>"16
@32@0:8@16r^v24
v32@0:8@16^v24
v32@0:8d16@24
v28@0:8i16@20
v28@0:8I16@20
^v24@0:8@16
^v16@0:8
i24@0:8@16
{vector<CRDT::Document_DocObject *, std::allocator<CRDT::Document_DocObject *>>="__begin_"^^{Document_DocObject}"__end_"^^{Document_DocObject}"__end_cap_"{__compressed_pair<CRDT::Document_DocObject **, std::allocator<CRDT::Document_DocObject *>>="__value_"^^{Document_DocObject}}}
@"<CRDataType>"
@"CRVectorTimestamp"
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
v40@0:8@16^v24@?32
@40@0:8@16r^v24@?32
@"NSMapTable"
v40@0:8Q16Q24@32
v40@0:8Q16@24Q32
v48@0:8Q16Q24@32Q40
v32@0:8^v16^v24
{TopoIDRange={TopoID=@I}I}40@0:8@16^v24^v32
v40@0:8{_NSRange=QQ}16Q32
v40@0:8^v16{_NSRange=QQ}24
v48@0:8^v16^v24{_NSRange=QQ}32
^v32@0:8{TopoID=@I}16
v48@0:8^v16{TopoIDRange={TopoID=@I}I}24
Q32@0:8{TopoID=@I}16
q32@0:8^v16@24
B40@0:8{TopoID=@I}16@32
^v28@0:8^v16I24
v64@0:8{TopoIDRange={TopoID=@I}I}16{TopoIDRange={TopoID=@I}I}40
Q28@0:8@16B24
{vector<TopoSubstring *, std::allocator<TopoSubstring *>>="__begin_"^^{TopoSubstring}"__end_"^^{TopoSubstring}"__end_cap_"{__compressed_pair<TopoSubstring **, std::allocator<TopoSubstring *>>="__value_"^^{TopoSubstring}}}
@"TTVectorMultiTimestamp"
@"NSObject<TTMergeableStringDelegate>"
@"NSHashTable"
v48@0:8Q16{_NSRange=QQ}24q40
@"NSObject<CRUndoDelegate>"
@"TTMergeableAttributedString"
{vector<std::pair<TopoID, TopoID>, std::allocator<std::pair<TopoID, TopoID>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::pair<TopoID, TopoID> *, std::allocator<std::pair<TopoID, TopoID>>>="__value_"^v}}
v24@0:8r^v16
@24@0:8^I16
@32@0:8r^v16Q24
q20@0:8i16
v24@0:8@"TTMergeableUndoString"16
B24@0:8@"TTMergeableStringUndoGroup"16
B40@0:8{TopoIDRange={TopoID=@I}I}16
@"TTCRVectorMultiTimestamp"
@48@0:8r^v16@24^v32@40
@44@0:8@16@24Q32B40
v28@0:8Q16B24
v32@0:8Q16Q24
@"TTArray"
@"CRDictionary"
@32@0:8Q16^B24
r^v24@0:8@16
d24@0:8@16
I24@0:8@16
v40@0:8@?16@24@32
r^v16@0:8
@32@0:8r^v16@24
v32@0:8^v16@24
@"CRTimestamp"
@"CRSet"
@20@0:8I16
B48@0:8@16{_NSRange=QQ}24^B40
B40@0:8@16@24^B32
@20@0:8C16
@36@0:8@16d24I32
v32@0:8@?16@24
v56@0:8{_NSRange=QQ}16@32{_NSRange=QQ}40
@32@0:8Q16@24
@40@0:8Q16@24@32
@40@0:8r^v16@24@32
@40@0:8r^v16@24^v32
v56@0:8^v16^v24^v32^@40^v48
@32@0:8@16^v24
v32@0:8#16@24
v36@0:8#16@24B32
Q24@0:8#16
{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}16@0:8
v32@0:8Q16q24
v36@0:8Q16Q24B32
v48@0:8@16@24Q32@40
@"CRArray"
@(#)PROGRAM:ReminderKit  PROJECT:ReminderKit-815
#(-27<AFKPUZ_dinsx}
?333333
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA>AAA?456789:;<=AAAAAAA
AAAAAA
 !"#$%&'()*+,-./0123AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
@(#)PROGRAM:CRFramework  PROJECT:ReminderKit-
E#EEA(-2
N6google8protobuf11MessageLiteE
N6google8protobuf2io17ArrayOutputStreamE
N6google8protobuf2io18StringOutputStreamE
N15replica_manager22VectorTimestampElementE
N15replica_manager12ReplicaEntryE
N15replica_manager14ReplicaManagerE
N6google8protobuf2io20ZeroCopyOutputStreamE
N18versioned_document8DocumentE
N18versioned_document7VersionE
 $(,
'=BKF
+%(!
N8topotext6StringE
N8topotext34VectorTimestamp_Clock_ReplicaClockE
N8topotext21VectorTimestamp_ClockE
N8topotext15VectorTimestampE
N8topotext6CharIDE
N8topotext9SubstringE
N8topotext15Selection_RangeE
N8topotext9SelectionE
N8topotext12AttributeRunE
N8topotext4FontE
N8topotext14ParagraphStyleE
N8topotext11HashtagInfoE
N8topotext14AttachmentInfoE
N8topotext10AttachmentE
N8topotext8LocationE
N8topotext5MediaE
N8topotext12PreviewImageE
N8topotext4TodoE
N8topotext5ColorE
N6google8protobuf14FatalExceptionE
N6google8protobuf7ClosureE
N6google8protobuf8internal16FunctionClosure0E
"%,/25
#&),/2
N4CRDT8ObjectIDE
N4CRDT9TimestampE
N4CRDT14RegisterLatestE
N4CRDT23VectorTimestamp_ElementE
N4CRDT15VectorTimestampE
N4CRDT18Dictionary_ElementE
N4CRDT10DictionaryE
N4CRDT13Index_ElementE
N4CRDT5IndexE
N4CRDT13OneOf_ElementE
N4CRDT5OneOfE
N4CRDT27StringArray_ArrayAttachmentE
N4CRDT11StringArrayE
N4CRDT5ArrayE
N4CRDT10OrderedSetE
N4CRDT30Document_CustomObject_MapEntryE
N4CRDT21Document_CustomObjectE
N4CRDT18Document_DocObjectE
N4CRDT8DocumentE
Reminders
DEFAULT_TASK_CALENDAR_NAME
local
Invalid day number
dayOfTheWeek
weekNumber
%ld%@
%@ <0x%x> { %@ }
com.apple.reminderkit
default
type
ascending
REMCDAuxiliaryReminderChangeDeleteInfo
REMCDAuxiliaryReminderChangeMoveInfo
%llu.%llu
[%@]
<%@: %p>{UUID: %d, clock: %@, state: %@}
In Use
Available
{UUID: %d, clock: %@}
v8@?0
com.apple.dt.xctest.tool
com.apple.TestReminderKit.xctrunner
com.apple.iOSTestReminders.xctrunner
com.apple.macOSTestReminders.xctrunner
com.apple.watchOSTestReminders.xctrunner
Invalid crdtID
Invalid replicaUUIDIndex
Invalid crdtIDIndex
B32@?0@"REMReplicaEntry"8Q16^B24
v16@?0@"REMReplicaEntry"8
<%@: %p> {
currentVersion: %llu
maxLastSavedVersion: %llu
Replica UUIDs: %@
Replica Entries: %@
%lu: %@
v32@?0@"NSUUID"8Q16^B24
%@: %@
v32@?0@"NSString"8@"NSMutableArray"16^B24
version: %llu
Replica UUIDs: %@
Replica Entries: %@
Cannot deserialize replica manager from input data
Cannot serialize replica manager to data
Attempting to serialize a REMReplicaManager that is marked non-persistable
managerData
version
<%@: %p>{version: %llu; %ld bytes}
/Library/Caches/com.apple.xbs/Sources/ReminderKit_Sim/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h
CHECK failed: (index) >= (0): 
CHECK failed: (index) < (size()): 
<%@: %p>{crdtID: %@}
ImportOptionConsiderDTENDForDueDate
/RID=
%@/RID=%llu
New in %@
This list is shared
Shared with %@
Shared with %@ & %u other(s)
Shared by %@
Invited by %@
declined
Invitation to share a reminder list with %@.
%1$@ %2$@ your shared reminder list.
joined
Local
%@ and %lu other items
Due Today
Untitled
New Reminder
%u more reminders
Complete
Ignore
Later
Mark as Completed
You have overdue reminders
Remind Me Tomorrow
Remind Me in an Hour
Remind Me in the Morning
Remind Me Next Weekend
Remind Me This Afternoon
Remind Me Tonight
%@ assigned you a reminder
%@ assigned you %lu reminders
View
Decline
Decline All
%u more lists with assignments
New Assignment
New List
Unknown
CUSTOM_SMART_LIST_MORNING_START_HOUR
CUSTOM_SMART_LIST_MORNING_END_HOUR
CUSTOM_SMART_LIST_AFTERNOON_START_HOUR
CUSTOM_SMART_LIST_AFTERNOON_END_HOUR
CUSTOM_SMART_LIST_EVENING_START_HOUR
CUSTOM_SMART_LIST_EVENING_END_HOUR
CUSTOM_SMART_LIST_NIGHT_START_HOUR
CUSTOM_SMART_LIST_NIGHT_END_HOUR
TIME_OF_DAY_CREATION_MORNING
TIME_OF_DAY_CREATION_NOON
TIME_OF_DAY_CREATION_AFTERNOON
TIME_OF_DAY_CREATION_EVENING
TIME_OF_DAY_CREATION_NIGHT
TIME_OF_DAY_CREATION_TONIGHT
%@ added %lu reminders to %@
%lu reminders were added to %@
New reminders added
%@ completed %lu reminders in %@
%lu reminders were completed in %@
New reminders completed
changeTracking
editor
crdt
alarmEngine
timelineEngine
housekeepingingActivityScheduler
extraneousAlarmCleaner
inlineTagAutoConvertEngine
templates
accountPlugin
utility
com.apple.reminderkit.store
suggestedAttributes
cloudkit
cloudkit.collaboration
migration
dataAccess
userAction
siriKit
applicationShortcut
notification
search
account
analytics
scripting
com.apple.reminderkit.signpost
database
sync
container
stagedLightweightCoreDataMigration
read
write
OVERSIZED
com.apple.ReminderKit.REMChangeErrorDomain
Unexpected type of input token.
Error occurred internally executing history request.
Unsupported type of history result.
Failed to delete history.
Change token expired -- history is incomplete/truncated.
Failed to coalesce changes due to internal errors.
Could not map to an account object ID from the transaction.
Could not look up a store for the account identifier in the tracking state.
Persistence layer failure trying to read or write tracking state.
Could not encode or decode tracking state due to corrupted data.
Could not encode or decode auxiliary change info.
Could not find account store
%@ {%@}
objectID
accountID
listID
parentReminderID
daCalendarItemUniqueIdentifier
externalIdentifier
externalModificationTag
daSyncToken
daPushKey
minimumSupportedVersion
titleDocumentData
titleDocument
completed
completionDate
priority
flagged
startDateComponents
dueDateComponents
timeZone
allDay
creationDate
lastModifiedDate
recurrenceRules
notesDocumentData
notesDocument
attachments
alarms
assignments
hashtags
contactHandles
icsDisplayOrder
icsUrl
importedICSData
subtaskIDsToUndelete
hashtagIDsToUndelete
userActivity
siriFoundInAppsData
siriFoundInAppsUserConfirmation
lastBannerPresentationDate
%@.%@
storage
'%s' is unexpectedly nil
<%@: %p %@>
self.storage
accountCapabilities
B24@?0@"REMAttachment"8@16
B32@?0@"REMAttachment"8Q16^B24
B24@?0@"REMAttachment"8@"NSDictionary"16
v24@?0@"REMAssignment"8^B16
<%@: %p reminderCount: %@, hasDisplayDate: %@, hasHashtags: %@, hasLocationTriggersOrVehicleEventTriggers: %@, hasImageAttachments: %@>
reminderCount
hasDisplayDate
hasHashtags
hasLocationTriggersOrVehicleEventTriggers
hasImageAttachments
<%@: %p objectIdentifier: %@>
com.apple.reminderkit.storeMustRefresh
com.apple.reminderkit.storeChanged
com.apple.reminderkit.shouldNotifyOfInteractionWithPeople
com.apple.reminderkit.didCompleteInitializeAllAccounts
REMStoreDidChangeNotification
AppDelegate
DebugMenu
SignificantTimeChanged
v12@?0i8
createIsolatedStoreContainer
v16@?0@"NSError"8
v24@?0@"REMStoreContainerToken"8@"NSError"16
destroyIsolatedStoreContainerWithToken
<%@: %p[%ld] storeContainerToken: %@>
<%@ inProgressSaveRequestContainer: %@>
nukeDatabase
@16@?0@"_REMInProgressSaveRequestsContainer"8
fetchReplicaManagerForAccountID:
v24@?0@"REMReplicaManagerSerializedData"8@"NSError"16
fetchReplicaManagersForAccountID
v24@?0@"NSDictionary"8@"NSError"16
saveRequest
v16@?0@"<REMXPCStorePerformer>"8
fetchRequest
v24@?0@"REMFetchResult"8@"NSError"16
inv_%@
v24@?0@"REMStoreInvocationResult"8@"NSError"16
swInv_%@
v24@?0@"REMStoreSwiftInvocationResult"8@"NSError"16
v24@?0@"REMList"8^B16
reminderIDsMergeableOrdering
reminderIDsOrderingHints
fetchShareForList
v24@?0@"CKShare"8@"NSError"16
createShareForList
updateShare
stopShare
acceptShare
v28@?0B8@"NSString"12@"NSError"20
distributedEvaluation
DistributedEvaluation Export produced no result and no error
v24@?0@"NSData"8@"NSError"16
queryAnchoredBubbleCloudOverrides
v20@?0B8@"NSError"12
respondToCalDAVSharedList
Given invitation list isn't a CalDAV list.
Given invitation list isn't a sharing invitation.
Given invitation list has no external identifier.
Could not find the external identifier from the given invitation list.
Implementation error to use unknown CalDAV share response.
___dummy-client-identifier
___dummy-account-identifier
notifyOfInteractionWithPeople
MCIsManagedAccountWithObjectID:
v24@?0@"NSNumber"8@"NSError"16
triggerSyncForDataAccessAccountsWithAccountIDs
v16@?0@"<REMXPCSyncInterfacePerformer>"8
updateAccountsAndSync
v24@?0B8B12@"NSError"16
updateAccountWithAccountID
removeOrphanedAccountsWithCompletion
requestToMergeLocalDataIntoSyncData
requestToDeleteSyncData
requestToDeleteLocalData
addCKShareObserverIfNeededForAccountID
requestToUpdateClientConnections
repairPhantomObjectsWithObjectIDs
v24@?0@"NSArray"8@"NSError"16
test_setupForManualHashtagLabelRefreshing
test_refreshHashtagLabelsImmediately
test_handleIncompleteTemplateOperationQueueItemsImmediately
test_immediatelyCreateOrUpdatePublicLinkOfTemplate
v24@?0@"REMTemplatePublicLink"8@"NSError"16
test_immediatelyRevokePublicLinkOfTemplate
v24@?0@"REMObjectID"8@"NSError"16
test_revertImageAttachmentsToUnDeduped
<%@: %p identifier: %@>
identifier
fetchResultTokenToDiffAgainst
resultData
resultStorages
latestFetchResultToken
Attempting to instantiate an abstract class. Please use a subclass of REMAlarmTrigger.
Abstract method called -[%@ %@]
REMCDAlarmTrigger
REMCDAlarmTimeIntervalTrigger
timeInterval
%@ %f
REMCDAlarmDateTrigger
%@ %@
dateComponents
REMCDAlarmLocationTrigger
structuredLocation
proximity
%@ {structuredLocation = %@; proximity = %ld;}
REMCDAlarmVehicleTrigger
event
%@ {event = %@}
REMCAlarmContactTrigger
contactRepresentation
%@ {contact: %@}
REMAlarmVehicleTriggerEventNone
REMAlarmVehicleTriggerEventConnected
REMAlarmVehicleTriggerEventDisconnected
Unknown REMAlarmVehicleTriggerEvent %ld
v32@?0@"<REMCRMergeableDataType>"8Q16^B24
<%@: %p document: %@>
REMCRMergeableOrderedSet
Failed to merge CR documents.
replicaIDSource
document
<%@: %p type:%ld, %@>
<%@: %p[%ld.%ld] type:%ld name:%@ %@>
name
markedForRemoval
pinnedListsManualOrdering
templatesManualOrdering
listIDsToUndelete
smartListIDsToUndelete
listIDsMergeableOrdering
listIDsMergeableOrderingData
resolutionTokenMapData
resolutionTokenMap
listsDADisplayOrderChanged
personID
personIDSalt
inactive
didChooseToMigrate
didChooseToMigrateLocally
didFinishMigration
persistenceCloudSchemaVersion
daConstraintsDescriptionPath
daAllowsCalendarAddDeleteModify
daSupportsSharedCalendars
daWasMigrated
effectiveMinimumSupportedVersion
debugSyncDisabled
REMAccount missing required fields
listIDsMergeableOrderingData is nil when trying to deserialize from account storage
REMCDAccount
Event will occur every hour.
Event will occur every %@ hours.
Event will occur every day.
Event will occur every %@ days.
Event will occur every week.
Event will occur every %@ weeks.
Event will occur every weekday.
Event will occur every week on %@.
Event will occur every %@ weeks on %@.
Event will occur every month on the %@ %@.
Event will occur every %@ months on the %@ %@.
Event will occur every month on the %@-XX01.
Event will occur every month on the %@.
Event will occur every %@ months on the %@-XX01.
Event will occur every %@ months on the %@.
Event will occur every month on %@.
Event will occur every %@ months on %@.
Event will occur every month.
Event will occur every %@ months.
, %@
Recurrence rule last item format.  The last part of a list: X, Y and Z. Here %@ is 'Z'
 and %@
Event will occur every %@ years.
Event will occur every year.
Event will occur every year on the %@ %@ of %@.
Event will occur every %@ years on the %@ %@ of %@.
Event will occur every year on the %@ %@.
Event will occur every %@ years on the %@ %@.
Event will occur every year on the %@ of %@.
Event will occur every %@ years on the %@ of %@.
Event will occur every year on the %@.
Event will occur every %@ years on the %@.
Event will occur every year on every %@ in %@.
Event will occur every %@ years on every %@ in %@.
Event will occur every year on every %@.
Event will occur every %@ years on every %@.
Event will occur every year in %@.
Event will occur every %@ years in %@.
-[NSDateFormatter weekdaySymbols] invalid, reverting to US dates
Sunday
Monday
Tuesday
Wednesday
Thursday
Friday
Saturday
-[NSDateFormatter monthSymbols] invalid, reverting to US dates
January
February
March
April
June
July
August
September
October
November
December
the last part of a list: X, Y and Z. Here %@ is 'Z'
, %@-XX01
last day
1st-XX01
2nd-XX01
3rd-XX01
4th-XX01
5th-XX01
6th-XX01
7th-XX01
8th-XX01
9th-XX01
10th-XX01
10th
11th-XX01
11th
12th-XX01
12th
13th-XX01
13th
14th-XX01
14th
15th-XX01
15th
16th-XX01
16th
17th-XX01
17th
18th-XX01
18th
19th-XX01
19th
20th-XX01
20th
21st-XX01
21st
22nd-XX01
22nd
23rd-XX01
23rd
24th-XX01
24th
25th-XX01
25th
26th-XX01
26th
27th-XX01
27th
28th-XX01
28th
29th-XX01
29th
30th-XX01
30th
31st-XX01
31st
last
1st-XX02
2nd-XX02
3rd-XX02
4th-XX02
5th-XX02
6th-XX02
7th-XX02
8th-XX02
9th-XX02
10th-XX02
11th-XX02
12th-XX02
13th-XX02
14th-XX02
15th-XX02
16th-XX02
17th-XX02
18th-XX02
19th-XX02
20th-XX02
21st-XX02
22nd-XX02
23rd-XX02
24th-XX02
25th-XX02
26th-XX02
27th-XX02
28th-XX02
29th-XX02
30th-XX02
31st-XX02
32nd-XX02
32nd
33rd-XX02
33rd
34th-XX02
34th
35th-XX02
35th
36th-XX02
36th
37th-XX02
37th
38th-XX02
38th
39th-XX02
39th
40th-XX02
40th
41st-XX02
41st
42nd-XX02
42nd
43rd-XX02
43rd
44th-XX02
44th
45th-XX02
45th
46th-XX02
46th
47th-XX02
47th
48th-XX02
48th
49th-XX02
49th
50th-XX02
50th
51st-XX02
51st
52nd-XX02
52nd
53rd-XX02
53rd
 or %@
, %@-XX02
day-XX02
weekday
weekend day
, and %@
Monthly
Custom Repeat
Every %u hours
Hourly
Every %u days
Daily
SINGULAR_WEEKLY_RECURRENCE
Weekly
Every %u weeks
Weekdays
Weekends
Every %u weeks on %@
Every %u months on the last day
Every month on the last day
Every %u months on the first day
Every month on the first day
Every %u months
Every %u months, each %@
Every month, each %@
Every %u months that have %u days
Every month that has %u days
Every %u months on the last weekday
Every month on the last weekday
Every %u months on the first weekday
Every month on the first weekday
Every %u months on the last weekend day
Every month on the last weekend day
Every %u months on the first weekend day
Every month on the first weekend day
Every %u months on the %@
Every month on the %@
Every %u years in %@
Every year in %@
Every %u years on the last day %@
Every year on the last day %@
Every %u years on the first day %@
Every year on the first day %@
Every %u years on the last weekday %@
Every year on the last weekday %@
Every %u years on the first weekday %@
Every year on the first weekday %@
Every %u years on the last weekend day %@
Every year on the last weekend day %@
Every %u years on the first weekend day %@
Every year on the first weekend day %@
Every %u years on the %@ %@
Every year on the %@ %@
Every %u years
Yearly
first
second
third
fourth
fifth
Custom by-day item format
of January%@
of February%@
of March%@
of April%@
of May%@
of June%@
of July%@
of August%@
of September%@
of October%@
of November%@
of December%@
Never
Biweekly
LOCALIZED_CUSTOM_REPEAT_TYPE_DESCRIPTION
Custom
Every 3 Months
Every 6 Months
predicateDescriptor
sortDescriptors
options
<%@: %p predicate: %@, sortDescriptors: %@>
Calendar must be nil or Gregorian
%@_%ld_%ld_%ld_%ld_%ld_%ld_%ld_%ld
__floating
lastConsumedChangeToken
lastConsumedDate
com.apple.reminders
group.com.apple.reminders
com.apple.remindd
com.apple.remindtool
com.apple.aps.remindd
com.apple.reminders.ReminderIndex
com.apple.remindd.userInteractive
remindd
com.apple.ReminderKitUI.ReminderCreationViewService
com.apple.reminders.ics
DEFAULT_LIST
v40@?0@8{_NSRange=QQ}16^B32
v40@?0@"NSDictionary"8{_NSRange=QQ}16^B32
%@/%@
crdtID
<%@: %p> (account=%@, crdtId=%@)
Remindtool(CloudKitDeleteAll)
Remindtool(CloudKitRestart)
Remindtool(CloudKitSync)
UpdateAccounts
<No protocol supplied>
REMCDAlarm
trigger
acknowledgedDate
alarmUID
originalAlarmUID
 (uid: %@)
 (original-uid: %@)
%@ %@ %@%@
startDate
dueDate
alarmStorage
list
parentReminder
metadata
parentSavedReminderIdentifier
template
titleAsString
primaryLocaleInferredFromLastUsedKeyboard
isCompleted
notesAsString
displayDate
<%@: %p objectID: %@, attachments.count: %ld, alarms.count: %ld, assignments.count: %ld, hashtags.count: %ld>
startDate: %@ tz: %@
dueDate: %@ tz: %@
displayDate: %@ tz: %@
%@ tz: %@
alarm[%ld]: %@
/?&:$+,;=@
x-apple-eventkit-alert-x-apple-reminder://%@
REMCDReminder
isUniversal
trackedAccountCapabilities
-[REMAccountChangeItem addSmartListChangeItem:]
-[REMAccountChangeItem insertSmartListChangeItem:beforeSmartListChangeItem:]
-[REMAccountChangeItem insertSmartListChangeItem:beforeSmartListChangeItem:] (sibling)
-[REMAccountChangeItem insertSmartListChangeItem:afterSmartListChangeItem:]
-[REMAccountChangeItem insertSmartListChangeItem:afterSmartListChangeItem:] (sibling)
-[REMAccountChangeItem addMergeableOrderingNode:]
-[REMAccountChangeItem insertMergeableOrderingNode:beforeMergeableOrderingNode:]
-[REMAccountChangeItem insertMergeableOrderingNode:beforeMergeableOrderingNode:] (sibling)
-[REMAccountChangeItem insertMergeableOrderingNode:afterMergeableOrderingNode:]
-[REMAccountChangeItem insertMergeableOrderingNode:afterMergeableOrderingNode:] (sibling)
v32@?0@"NSString"8Q16^B24
v16@?0@"REMMutableCRMergeableOrderedSet"8
mergeableOrderingNode (%@) has incorrect saveRequest (%@). Expected %@
incompleteReminderCounts
scheduledCount
objectIDs
parentListID
subtaskCounts
dueDateCounts
count
accountIdentifier
activityDate
activityType
authorUserRecordIDString
ckParentCloudObjectEntityName
ckParentCloudObjectIdentifier
ckIdentifier
sharedEntityName
uuidForChangeTracking
<%@: %p accountIdentifier: %@, activityDate: %@, activityType: %@, authorUserRecordIDString: %@, ckParentCloudObjectEntityName: %@, ckParentCloudObjectIdentifier: %@, ckIdentifier: %@, sharedEntityName: %@, uuidForChangeTracking: %@
complete
titleMayHaveDirtyHashtag
notesMayHaveDirtyHashtag
cascadeHashtagLabelApproval
unknown
ILL-DEFINED
<%@: %p date: %@, timeZone: %@, allDay: %ld>
date
isAllDay
com.apple.reminders.smartlist.today
com.apple.reminders.smartlist.flagged
com.apple.reminders.smartlist.scheduled
com.apple.reminders.smartlist.all
com.apple.reminders.smartlist.assigned
com.apple.reminders.smartlist.siriFoundInApps
com.apple.reminders.smartlist.custom
com.apple.reminders.smartlist.tagged
com.apple.reminders.smartlist.completed
self.account
currentChangeTokenForAllAccounts
v16@?0@"REMChangeToken"8
v16@?0@"<REMXPCChangeTrackingPerformer>"8
currentChangeTokenForAccountTypes
types=%@
currentChangeToken
accountIdentifier=%@
earliestChangeToken
getTrackingState
v24@?0@"REMChangeTrackingState"8@"NSError"16
saveTrackingState
fetchHistoryAfterToken
v24@?0@"REMChangeSet"8@"NSError"16
fetchHistoryAfterDate
deleteHistoryBeforeToken
deleteHistoryBeforeDate
persistenceStoreID
v16@?0@"NSString"8
fetchAuxiliaryChangeInfo
clientName
 - {clientName: %@, accountIdentifier: %@};
com.apple.reminders.fdb
parentAccountID
configuration
color
badgeEmblem
showingLargeAttachments
sortingStyle
unsavedManualOrdering
publicLink
mostRecentPublicLinkUpdateRequestDate
isPersisted
canonicalName
firstOccurrenceCreationDate
recencyDate
<%@: %p name: %@, canonicalName: %@, firstOccurrenceCreationDate: %@, recencyDate: %@, uuidForChangeTracking: %@>
uuidString
hostURL
<%@: %p objectID: %@, owner: %@, uuid: %@, hostURL: %@, extID: %@>
REMCDCalDAVNotification
reminderID
<%@: %p objectID: %@, uti: %@>
REMCDAttachment
REMCDFileAttachment
fileSize
fileURL
isTemporaryFileURL
REMCDImageAttachment
width
height
REMCDURLAttachment
<%@: %p objectID: %@>
<%@: %p objectID: %@, url: %@>
state
isObserver
timeElapsed
listsMigrated
remindersMigrated
<%@ %p (
state: %@, 
isObserver: %@, 
timeElapsed: %@, 
listsMigrated: %@, 
remindersMigrated: %@, 
log: %@)>
daIsEventOnlyContainer
owningListIdentifier
displayName
address
owningReminderIdentifier
reminderIdentifier
entityName
uuid
changeID
changedObjectID
changeType
tombstone
updatedProperties
remObjectIdentifier
shareeOwningListIdentifier
shareeDisplayName
shareeAddress
assignmentOwningReminderIdentifier
hashtagName
hashtagReminderIdentifier
<REMNSPersistentHistoryChange - changeID(%lld) changeType(%@) mocID(%@) remID(%@)>
REMChangeType
REMChangeTypeInsert
REMChangeTypeUpdate
REMChangeTypeDelete
mailto:
tel:
persistentHistoryTokens
<%@: %p persistentHistoryTokens: %@> 
REMChangeSet<%p>: {raw-txn-count=%lu, chg-ids-from=%lld, chg-ids-to=%lld}; {filtered-txn-count=%lu, cnsld-inserts=%lu, cnsld-updates=%lu, #cnsld-deletes=%lu}; {error=%@}
q24@?0@"REMChangeObject"8@"REMChangeObject"16
B16@?0@"REMChangeObject"8
v24@?0@"NSArray"8q16
error
transactions
supportedVersion=(V:%lld,EV:%lld,U:%@)
bookmarks1
bookmarks2
celebration1
celebration2
concept1
concept2
concept3
education1
education2
education3
education4
education5
finance1
finance2
finance3
fitness
food
health1
health2
lifestyle1
lifestyle2
location1
location2
location3
media1
media2
media3
media4
media5
nature1
nature2
people1
people2
people3
pet1
pet2
pet3
shopping1
shopping2
shopping3
shopping4
sport1
sport2
sport3
sport4
sport5
sport6
symbol1
symbol2
symbol3
symbol4
symbol5
symbol6
symbol7
transport1
transport2
transport3
transport4
vacation
weather1
weather2
weather3
weather4
weather5
wine
work1
work2
work3
work4
work5
endDate is nil
endDate
occurrenceCount
%@ %p { UNTIL=%@ } 
%@ %p { COUNT=%lu }
com.apple.remindd.dataaccess.REMSaveRequest.author
com.apple.remindd.dataaccess.accountSetPersonID.author
com.apple.remindd.dataaccess
com.apple.CRDT.NSString
preWarmModels
suggestedAttributesPerformer-%@
uncachedSuggestedAttributesPerfomer produced no result and no error
v24@?0@"<REMXPCSuggestedAttributesPerformer>"8@"NSError"16
RemindersCount
includeUnsupported
includingSubtasks
includeConcealedObjects
parentReminderIDs
includeIncomplete
includeCompleted
isUnsupported
externalIdentifiers
listObjectID
daCalendarItemUniqueIdentifiers
accountStorages
listStorages
reminderStorages
allowConcealedObjects
<%@: %p shouldIncludeHashtags: %@, shouldIncludeAlarmTriggersBasedOnDateOrTimeInterval: %@, shouldIncludeAlarmTriggersBasedOnLocationOrVehicle: %@, shouldIncludeContactsHandleData: %@>
shouldIncludeHashtags
shouldIncludeAlarmTriggersBasedOnDateOrTimeInterval
shouldIncludeAlarmTriggersBasedOnLocationOrVehicle
smartListType
createIfNeeded
accountObjectID
groupObjectID
smartListStorages
parentListStorages
markedForDeletion
effectiveMinimumSupportedAppVersion
REMDAChangeTrackingHelper: Cannot get last consumed token when trying to peekHasChangesSinceLastConsumed
The given model class is not a known trackable-fetchable type for this API, you shouldn't call this with {modelClass: %@}.
The given model class is not a known trackable type for this API, you shouldn't call this with {modelClass: %@}.
v16@?0@"<REMDAChangedIdentifierResult>"8
v16@?0@"REMObjectID"8
v24@?0@"REMChangeObject"8q16
Mixed change types is not supported.
resolutionTokenMap_v2_JSON
resolutionTokenMap_v3_JSONData
The given model class does not support fetching, shouldn't enter this function call {%@}.
The given model class does not support concealed objects, shouldn't enter this function call with includeConcealedObjects=YES {%@}.
@"<_REMDAChangeTrackableModel>"36@?0@"REMObjectID"8B16@"REMStore"20^@28
@"NSDictionary"32@?0@"NSArray"8@"REMStore"16^@24
@"<REMDAChangedIdentifierResult>"16@?0@"REMChangeTombstone"8
@"<REMDAChangedIdentifierResult>"16@?0@"<_REMDAChangeTrackableModel>"8
<%@: %p objectID: %@, owningListIdentifier: %@>
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: ASSERT failure: Should not attempt to check properties affecting isConcealed for REMSharee.
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: ASSERT failure: Should not attempt to fetch by object ID for REMSharee.
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: ASSERT failure: Should not attempt to fetch by object IDs for REMSharee.
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: ASSERT failure: Should not attempt to call +rem_DA_deletedKeyFromConcealedModelObjectBlock for REMSharee.
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: ASSERT failure: Should not attempt to check properties affecting isConcealed for REMCalDAVNotification.
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: ASSERT failure: Should not attempt to fetch by object ID for REMCalDAVNotification.
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: ASSERT failure: Should not attempt to fetch by object IDs for REMCalDAVNotification.
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: ASSERT failure: Should not attempt to call +rem_DA_deletedKeyFromConcealedModelObjectBlock for REMCalDAVNotification.
<%@: %p objectID: %@, owningReminderIdentifier: %@>
assignee
<%@: %p objectID: %@, name: %@, reminderIdentifier: %@>
v24@?0@"REMHashtag"8^B16
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: ASSERT failure: Should not attempt to check properties affecting isConcealed for REMSharedToMeReminderPlaceholder.
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: ASSERT failure: Should not attempt to fetch by object ID for REMSharedToMeReminderPlaceholder.
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: ASSERT failure: Should not attempt to fetch by object IDs for REMSharedToMeReminderPlaceholder.
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: ASSERT failure: Should not attempt to call +rem_DA_deletedKeyFromConcealedModelObjectBlock for REMSharedToMeReminderPlaceholder.
listIDs
REMErrorObjectIDEntityNameKey
REMErrorObjectIDUUIDKey
REMErrorRetryAfterKey
Mismatched objectID type {objectID: %@, expected: %@}
Unexpected Error
Missing entitlement: %@
Missing entitlement: %@ {requestedAccessLevel: %@, currentAccesslevel: %@}
Operation is throttled {remainingTime: %.4f}
Operation is babysat {operationName: %@}
No such object error {objectID: %@}
No such object error {externalIdentifier: %@}
No such object error {daCalendarItemUniqueIdentifier: %@}
No such smart list error {smartListType: %@}
No active CloudKit account is currently logged in or enabled
Persistent store not found for some of the changed objects {accountIdentifiers: %@}
Moving object across is unsupported {objectID: %@}
Moving between accounts is unsupported {fromAccountID: %@, toAccountID: %@: objectID: %@}
List should not have nil account {listID: %@}
Moving between lists is unsupported in this account {fromListID: %@, toListID: %@, accountID: %@}
Nested subtasks is unsupported {parentReminderID: %@, reminderID: %@}
Subtask has different list from its parent reminder {parentReminderID: %@, reminderID: %@}
Unable to undelete hashtag from another reminder {hashtagID: %@, reminderID: %@}
Action is unavailable to non-CloudKit account {accountID: %@}
Removing an account at the same time inserting it is unsupported {accountID: %@}
Removing an account at the same time setting it as active is unsupported {accountID: %@}
Object { id: %@, zoneOwner: %@} and its parent { id: %@, zoneOwner: %@} with different zones are unsupported
Unhandled constraint conflict {identifier: %@, constraint: %@}
Unexpected nil property {class: %@, property: %@}
Unexpected nil property {remObjectID: %@, property: %@}
NSUnderlyingException
exception.name: %@, reason: %@
assigneeID
originatorID
status
assignedDate
_debug_cdAssigneeLinked
_debug_cdOriginatorLinked
<%@: %p objectID: %@, reminderID: %@, status: %@, date: %@, originatorID: %@, assigneeID: %@, originatorLinked: %@, assigneeLinked: %@>
REMCDAssignment
C6613346-F378-45AB-8DBD-57BE9AAFB009
counter
modificationTime
replicaID
<counter=%ld modificationTime=%lf replicaID=%@>
DisableAssertAlert
Internal Reminders Bug
File Radar
Stop Asking
Cancel
tap-to-radar
ComponentName
ComponentVersion
ComponentID
964249
AutoDiagnostics
phone
Classification
Serious Bug
Reproducibility
Not Applicable
Title
Description
@"REMAccount"16@?0@"REMSaveRequest"8
@"REMList"16@?0@"REMSaveRequest"8
@"REMReminder"16@?0@"REMSaveRequest"8
@16@?0@"REMSaveRequest"8
com.apple.remindd.eventKitMigration.begin
com.apple.remindd.eventKitMigration.error
stage
errorDomain
errorCode
@"NSMutableDictionary"8@?0
com.apple.remindd.eventKitMigration.end
success
duration
@"NSDictionary"8@?0
REMDatabaseMigrationContextStageUnknown
REMDatabaseMigrationContextStageSetup
REMDatabaseMigrationContextStageAccountCreation
REMDatabaseMigrationContextStageListCreation
REMDatabaseMigrationContextStageReminderCreation
REMDatabaseMigrationContextStageSave
REMDatabaseMigrationContextStageArchiveEventKitData
fetchedAccountStorages
fetchedListStorages
fetchedReminderStorages
requestedObjectIDs
fetchResultToken
[a:%ld,l:%ld,r:%ld,ids:%ld]
count: %ld
objectIDs.count: %ld
metadata: %@
fetchResultToken: %@
<%@: %p type: %@%@%@>
5d18e4d0-8a71-406c-899d-6ff8e3e94c37
3B242529-8F5D-47A1-9351-444101218C30
iCloud
iCloud Non-primary
CalDAV
Exchange
Undefined
CloudKit_Primary
CloudKit_Full
CalDav
LocalInternal
reminderTitleCategoryEmbeddingFilename
includeListNames
includeListNameFuzzedEmbeddings
includeReminderTitles
includeReminderTitleFuzzedEmbeddings
includeSystemLanguage
includeSystemTimezone
includeAccountType
includeListGroupInfo
includeReminderTitleSaltedHash
includeDates
includeRecurrenceInfo
includeLocationInfo
includeAttachmentUTIs
includeRemindMeWhenMessagingInfo
includeAlarmDates
includeSubtaskInfo
includeUserActivityInfo
includeIsFlagged
includePriority
relevantWordTagsIncludeOtherWord
dateResolutionInSeconds
includeReminderTitleCategoryFilteredStopWords
includeReminderTitleCategoryUniversalGrammar
includeReminderTitleCategorySentence2Vec
reminderTitleCategoryDistanceTolerance
reminderTitleCategoryEmbeddingURL
<%@:%p 
%@:%ld 
%@:%.3f 
%@:%@ 
Did not find url {filename: %@, key: %@, urls: %@}
Unexpected type for fileame {filename: %@, key: %@}
sourceListID
shouldSaveCompleted
TPItemNumber
<%@: %p serviceName:%@>
eventKitSyncStub
v24@?0@8@"NSError"16
store
debug
indexing
%@ {locationUID = %@}
%@ {title: %@; latlong: (%f, %f); radius: %f; locationUID = %@}
title
latitude
longitude
radius
locationUID
routing
referenceFrameString
contactLabel
mapKitHandle
backingStore
<%@: %p backingStore: %@>
orange
yellow
green
lightBlue
blue
indigo
purple
pink
rose
brown
gray
custom
#[\dA-F]{6}([\dA-F]{2})?
0123456789ABCDEF
Q16@?0@"NSString"8
#%02X%02X%02X
#%02X%02X%02X%02X
alpha
colorRGBSpace
daSymbolicColorName
daHexString
ckSymbolicColorName
REMColor:rgba(%lf,%lf,%lf,%lf)
#FF3B30
#FF9500
#FFCC00
#4CD964
#5AC8FA
#007AFF
#5856D6
#E357A8
#FF2D55
#D9A69F
#9D8563
#5B626A
showRemindersAsOverdue
databaseMigrationTestModeEnabled
isDatabaseMigrated
databaseMigrationTimedOut
lastDatabaseMigrationSystemBuildVersion
cloudKitMigrationMaxNumInvocations
cloudKitMigrationMaxNumFailures
cloudKitMigrationDelayAfterError
cloudKitMigrationObserverPollingInterval
cloudKitMigrationSimulatedError
cloudKitResultsLimitPerSyncOperation
cloudKitMigrationDisableCleanUp
preferredDefaultListID
preferredDefaultListObjectIDUrl
acAccountIdentifierToMergeLocalDataIntoSyncData
acAccountIdentifiersToMigrateInactivatedCalDavData
cloudKitMergeLocalLastDateMaxRetryReached
cloudKitMergeLocalLastBuildVersionMaxRetryReached
cloudKitSchemaCatchUpSyncLastSuccessDate
cloudKitSchemaCatchUpSyncLastSuccessBuildVersion
cloudKitSchemaCatchUpSyncSchedulingState
cloudKitSchemaCatchUpSyncLastScheduledDate
debugForceSupportCloudKitSchemaCatchUpSyncBackgroundScheduling
cloudKitMaxNumAlarmIDsInReminderCKRecordDebugOverride
spotlightIndexVersion
nextScheduledAlarmDate
lastPresentAlarmDate
lastSuggestedAttributesAutoTrainingToken
suggestedAttributesHarvestingOverrides
muteNotificationForSharedList
embedding
neighborsToConsider
suggestedAttributesTrainingOverrides
corebehavior
suggestedAttributesAccepted
lastSyncPoll
lastCloudConfigurationDownload
lastExtraneousAlarmsProcessedDate
useExtraneousAlarmBackOffThrottleInterval
staledFileAttachmentCleanupLastExecutionDate
staledFileAttachmentCleanupContainerDeemedClean
userInteractionsData
simulateMAIDAccount
enableWelcomeScreen
forceShowWelcomeScreen
forceShowWhatsNewScreen
enableInAppDebugMenu
enableHashingUserIdentifiablesWithPersonIDSalt
todayNotificationFireTime
disableAlarmEngineDataSourcePrefetching
enableAssignmentNotifications
accountsListCategorizedCountsCache
hashtagLabelsInCustomSmartListFilterCache
debugSimulateSqliteFull
tipKitCachedCountOfUncompletedReminders
tipKitCachedCountOfLists
tipKitCachedCountOfListsWithCustomBadge
tipKitCachedCountOfCustomSmartLists
tipKitCachedCountOfHashtags
lastViewedNotificationsPermissionWarmingSheetDate
lastDismissedNotificationsPermissionInlineRequestDate
hasViewedContactsAccessAlertForLocation
hasViewedContactsAccessAlertForMessaging
hasViewedContactsAccessAlertForCalDAVSharing
didShowReminderDeletePrivacyWarning
remCurrentRuntimeVersionDebuggingOverride
forceEligibleForAutoCloudKitMigration
forceBasicAAAccountEligibleForCloudKitReminders
syncActivityNotificationEngine_accountSignInTime
sharedListActivityNotifications_demoMode
shouldIncludeRemindersDueTodayInBadgeCount
_temp
REMCDSavedReminder
REMCDSavedAttachment
remindersIsUsingCloudKit
remindersDidFinishMigrationToCloudKit
v32@?0@"ACAccount"8Q16^B24
https://p01-caldav.icloud.com:443
com.apple.reminders.apple-account-utilities
%@.description
%@.aa_accountClass
%@.aa_personID
%@.aa_altDSID
%@.didChooseToMigrate
%@.didFinishMigration
%@.isManagedAppleID
%@.isEnabledForDataclass
%@.eligibleForAutoCloudKitMigration
%@.isEligibleForCloudKitReminders
timestamp
changes
transactionNumber
storeID
bundleID
processID
contextName
author
token
<REMNSPersistentHistoryTransaction - txnNo(%lld) timestamp(%@) storeID(%@) contextName(%@) author(%@) chgCount(%ld) token(%@)>
orderedIdentifiers
<%@: %p url: %@, configuration: %@, creationDate: %@, lastModifiedDate: %@, expirationDate: %@, canBeUpdated: %@>
expirationDate
canBeUpdated
<%@: %p objectID: %@, reminderID: %@, type: %@, name: %@, creation date: %@>
REMCDHashtag
REMCDSharedToMeReminderPlaceholder
com.apple.CRDT.REMObjectID
Cannot merge REMObjectID with different value.
recurrenceEnd
frequency
interval
firstDayOfTheWeek
daysOfTheWeek
daysOfTheMonth
daysOfTheYear
weeksOfTheYear
monthsOfTheYear
setPositions
<%@: %p objectID: %@, reminderID: %@, accountID: %@>
<%@: %p objectID: %@, reminderID: %@, accountID: %@> %@
RRULE:%@
FREQ=%@
;INTERVAL=%lu
;UNTIL=%@
;COUNT=%lu
;BYMONTH=%@
;BYMONTHDAY=%@
;BYYEARDAY=%@
;BYWEEKNO=%@
;BYDAY=%@
;BYSETPOS=%@
;WKST=%@
HOURLY
DAILY
WEEKLY
MONTHLY
YEARLY
yyyyMMdd
yyyyMMdd'T'HHmmss
yyyyMMdd'T'HHmmss'Z'
REMCDRecurrenceRule
modifiedDate
listType
topLevelElementIDs
secondaryLevelElementIDsByTopLevelElementID
uncommitedElementsAccountID
REMCDManualSortHint_v1
REM_WRAP(%@)
InternalBuild
<%@: %p phones.count=%ld emails.count=%ld>
phones
emails
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/
DA_statusReports
DataAccessEnabled
Enable DataAccess
Disable DataAccess
BabysitterEnabled
Enable Babysitter
Disable Babysitter
DADREMChangeTrackingBehaviors
com.apple.dataaccess.BehaviorOptionsChanged
BehaviorOptions
com.apple.DataAccess.BehaviorOptions
DA_crashDaemon
parentAccount
parentList
manualOrdering
filterData
pinnedDate
mostRecentTargetTemplateIdentifier
<%@: %p objectID: %@, smartListType: %@, sortingStyle: %@>
REMCDSmartList
<%@: %p acounts.count: %ld, lists.count: %ld, smartLists.count: %ld, templates.count: %ld, reminders.count: %ld>
accountStorage
listChangeItem
Assertion Failure. Missing REMAccountChangeItem associated with REMListChangeItem. {listChangeItem: %@}
accountGroupContextChangeItem
accountChangeItem (%@) has incorrect saveRequest (%@). Expected %@
accountChangeItem
listSublistContextChangeItem (%@) has incorrect saveRequest (%@). Expected %@
listStorage
reminderChangeItem
reminderChangeItem.storage
Assertion Failure. Missing REMListChangeItem associated with REMReminderChangeItem. {reminderChangeItem: %@}
Cannot add CSL because the given accountChangeItem does not support it {accountID: %@}
smartList
smartListStorage
remTemplate
templateStorage
listChangeItem (%@) has incorrect saveRequest (%@). Expected %@
listChangeItem is a group and adding reminder to group is not currently supported {listChangeItem: %@}
parentReminderChangeItem (%@) has incorrect saveRequest (%@). Expected %@
reminder
com.apple.eventkitsyncd
com.apple.reminderkit.REMSaveRequest
v48@?0@"NSArray"8@"NSArray"16@"NSArray"24@"NSArray"32@"NSArray"40
accountChangeItem.objectID
newObjectID
listChangeItem.objectID
smartListChangeItem
smartListChangeItem.objectID
templateChangeItem
templateChangeItem.objectID
reminderChangeItem.objectID
original
List has incorrect save request {original: %@, saveRequest: %@, expectedSaveRequest: %@}
parentReminderSubtaskContextChangeItem
Parent reminder has incorrect save request {original: %@, saveRequest: %@, expectedSaveRequest: %@}
Original reminder has incorrect save request {original: %@, saveRequest: %@, expectedSaveRequest: %@}
Cannot add CSL to sublist context because the account does not support it {accountID: %@}
x-apple-reminderkit
<%@>
%@://%@/%@
%@~%@
<%@>%@~%@
REMFetchRequestTypeStoragesAndParents
REMFetchRequestTypeStoragesOnly
REMFetchRequestTypeCount
REMFetchRequestTypeObjectIDs
REMFetchRequestTypeMetadata
Unknown REMFetchRequestType %ld
fetchExecutor
fetchLimit
<%@: %p type: %@, executor:%@%@>
isGroup
reminderIDsToUndelete
childListIDsToUndelete
childSmartListIDsToUndelete
reminderIDsMergeableOrderingData
remindersICSDisplayOrderChanged
daExternalIdentificationTag
daDisplayOrder
daIsReadOnly
daIsImmutable
daIsNotificationsCollection
lastUserAccessDate
templateID
sharedOwnerName
sharedOwnerAddress
sharingStatus
sharees
sharedOwnerID
calDAVNotifications
isPlaceholder
currentUserShareParticipantID
daBulkRequests
<%@: %p %@ %@ [%ld.%ld (%ld)]>
reminderIDsMergeableOrderingData is nil when trying to deserialize from list storage
REMCDList
startingDueDate
endingDueDate
descriptors
text
textMatching
objectIDs: %@
listID: %@
parentReminderID: %@
startingDueDate: %@
endingDueDate: %@
completed: %d
descriptors: %@
textMatching: %ld text: %@
<%@: %p type: %ld %@>
dueBefore
dueAfter
hasLocation
location
X-Apple-Radius
X-APPLE-RADIUS
X-Apple-ABUID
X-APPLE-ABUID
X-APPLE-REFERENCEFRAME
405e3bdb-9308-4ad5-85b5-d3c5943d17c5
3C8C2A71-84BF-4C87-8EFD-BB4827650D15
B24@?0@8@"NSDictionary"16
hash
reminderIDs
v16@?0@"REMCRReminderIDList"8
Should not call +cdEntityName on this test-only class.
com.apple.remindd.RDStoreController.defaultValuesMigration
com.apple.remindd.RDStoreController.JSONPropertiesMigration
com.apple.remindd.RDStoreController.CKParentReminderIdentifierMigration
com.apple.remindd.RDStoreController.OrphanedListMigration
com.apple.remindd.RDStoreController.DiacriticsInsensitiveHashtagLabelsMigration
com.apple.remindd.RDStoreController.AutoConvertSharedInlineTagsMigration
RDStoreControllerAccountIdentifierHashtagLabelsMigrationAuthor
RDStoreControllerUnsetCKDirtyFlagsInNonCKAccountsMigrationAuthor
com.apple.remindd.RDStoreController.IsPinnedByCurrentUserMigrationAuthor
com.apple.remindd.RDStoreController.MostRecentTargetTemplateIdentifierByCurrentUserMigrationAuthor
com.apple.RDStoreController.createAccountStore
com.apple.RDStoreController.deleteAccountStore
com.apple.remindd.RDDisplayDateUpdater
com.apple.remindd.notificationConsumer.lastBannerPresentationDate
com.apple.remindd.todayEngine.notification.lastBannerPresentationDate
com.apple.remindd.ICCloudContext
com.apple.remindd.ICCloudContext.internal
com.apple.remindd.ICCloudContext.serverChangeToken
com.apple.remindd.RDHashtagLabelUpdater.author
com.apple.remindd.RDStalePinnedListsEventHandler.author
com.apple.remindd.RDTemplateOperation.author
com.apple.remindd.RDSharedInlineTagAutoConvertEngine.author
com.apple.remindd.RDSyncActivityNotificationEngine.author
com.apple.remindd.RDStagedLightweightMigrationAuthor.author
com.apple.remindd.historyTracking
CalDAVMobileAccountDelegatePrincipalPath
REMCRMergeableStringDocument
Failed to merge documents.
America/Los_Angeles
America/New_York
Reminders/
Container_v1/
IsolatedContainers/
MLModels/
TemporaryMLModels/
xctest
remindtool
REMPathsCreateApplicationDocumentsURL
LocationBundles
RemindersAlerts.bundle
REMPathsCreatePersistentdataURL
ppt.sentinel
Action is only applicable to CSL {action: %@, smartList: %@}
REMSmartListChangeItem tries to remove itself from an untracked or unknown account change item {parentAccountID: %@, accountChangeItem.objectID: %@}
Unknown error in fetchActiveCloudKitAccountObjectIDsWithOption yielding nil fetchResult.accountIDs
accountIDs
purpose
fetchREMObjectIDOnly
%@%@
(fetchREMObjectIDOnly)
fetchOption
%@(fetchOption=%@)
valueStorage
<%@: %p valueStorage: %@>
Emoji
{"%@" : "%@"}
NSData+Random: SecRandomCopyBytes error: %d
v24@?0@"NSMutableOrderedSet"8@"NSMutableDictionary"16
v16@?0@"NSMutableOrderedSet"8
-[REMListSublistContextChangeItem addSmartListChangeItem:]
-[REMListSublistContextChangeItem insertSmartListChangeItem:beforeSmartListChangeItem:]
-[REMListSublistContextChangeItem insertSmartListChangeItem:beforeSmartListChangeItem:] (sibling)
-[REMListSublistContextChangeItem insertSmartListChangeItem:afterSmartListChangeItem:]
-[REMListSublistContextChangeItem insertSmartListChangeItem:afterSmartListChangeItem:] (sibling)
-[REMListSublistContextChangeItem addMergeableOrderingNode:]
-[REMListSublistContextChangeItem insertMergeableOrderingNode:beforeMergeableOrderingNode:]
-[REMListSublistContextChangeItem insertMergeableOrderingNode:beforeMergeableOrderingNode:] (sibling)
templateStorages
<%@: %p objectID: %@
REMCDTemplate
Reminder
geo:%f,%f
none
high
medium
Unexpected REMReminderChangeTrackingProperty key.
ListsCount
ListsWithCustomBadgeCount
UncompletedRemindersCount
CompletedRemindersCountInList
CompletedRemindersCount
CustomSmartListsCount
HashtagsCount
%@ (type=%@, bytes=%@, details=%@)
{type: %@, title: %@, URL: %@, userInfo: %@}
%@ (type=%@, bytes=%@)
universalLink
NSUserActivity
SiriIntent
Unknown REMUserActivityType %ld
firstName
middleName
lastName
namePrefix
nameSuffix
nickname
accessLevel
<%@: %p objectID: %@, listID: %@, status: %@, access: %@>
<%@: %p objectID: %@, listID: %@, status: %@, access: %@, address: %@>
REMCDSharee
0D5A5BA9-302D-4518-AE2D-58DDA388E850
-REMCDOBJECT_DELETED-
%@%@%@
debug_useInMemoryPreferredDefaultListStorage
includeMarkedForDeletionOnly
templateObjectID
aa_isRemindersAutoMigratableToCK
manual
displayDate_asc
displayDate_desc
priority_asc
priority_desc
creationDate_asc
creationDate_desc
title_asc
title_desc
_TTREMHashtag
Invalid merge, classes must be equal for merge.
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
<%@ %p %@ %@>
v40@?0@"<CRDataType>"8@"<CRDataType>"16^v24@"CRCoder"32
@"<CRDataType>"32@?0r^v8^@16@"CRCoder"24
v16@?0@"CRCoder"8
<%@ %p>
<%@ %p (
  %@ %@,
  %@ : %@ %@,
<%@ %p>(
  %@:%lu.%lu
<%@ %p>(
1.2.11
v24@?0^v8^B16
v56@?0{TopoIDRange={TopoID=@I}I}8{TopoIDRange={TopoID=@I}I}32
v32@?0^v8{_NSRange=QQ}16
TopoText
TTMergeableString graph has loop.
TTMergeableString graph has two characters with the same id.
mergeA-%p.data
mergeB-%p.data
DebugDumpMergeData
Reached substring that is not in our graph.
<%@ %p = '%@'>
subgraph cluster_%ld%p_%ld {
  rankdir="LR";
<Fragment>
  label="%@_%ld (%ld)    '%@'"
  color=lightgrey;
  N%ld%p [label="Start\n%@,%d"];
  N%ld%p [label="End\n%@,%d"];
  N%ld%p [label="%@ %@,%d-%u (%@,%d)"];
  N%ld%p -> N%ld%p;
com.apple.coreCRDT
TTArray
TTArray: no object at index %lu
TTArrayAttachment
TTArray cannot merge with object of type %@.
v16@?0@"TTArray"8
Q16@?0@"NSUUID"8
<TTMergeableStringSelection %p 
 %@:%d
-%@:%d
set_affinity
topotext.pb.h
::topotext::Selection_Affinity_IsValid(value)
GetEmptyStringAlreadyInited
generated_message_util.h
empty_string_ != NULL
CHECK failed: (&other) != (this): 
CHECK failed: (start) >= (0): 
CHECK failed: (num) >= (0): 
CHECK failed: (start + num) <= (size()): 
CHECK failed: (current_size_) > (0): 
protobufArchiveKey
set_alignment
::topotext::ParagraphStyle_Alignment_IsValid(value)
set_writingdirection
::topotext::AttributeRun_WritingDirection_IsValid(value)
<TTMergeableStringUndoGroup %p %@>
v16@?0@"CRArray"8
v32@?0@"<CRDataType><CREquatable>"8Q16^B24
CRArray cannot merge with object of type %@.
Cannot merge NSNumber with different value.
integerValue
doubleValue
No topological sort of completion handlers.
v40@?0@8@16@"CRVectorTimestamp"24^B32
Invalid CRRegisterLatest merge, classes must be equal for merge.
values
%@, 
%ld.
Natural
 needsParagraphCleanup
<%@: %p style=%lu alignment=%lu indent=%ld %@%@%@%@>
 needsListCleanup
<TTMergeableStringUndoAttributeCommand %p 
%@:%d-%u => %@ 
TTFont
TTHints
TTUnderline
TTStrikethrough
TTColor
TTStyle
TPMaxApproxItemNumber
TPInsertDate
TTTimestamp
DDFoundExistingLink
_UITextInputDictationResultMetadata
NSSuperScript
v32@?0@8@16^B24
CRPropertyRegisterLatest
CRPropertySet
CRPropertyOneOf
identity
Invalid CRObject merge, classes must be equal for merge.
v32@?0@"NSString"8@"<CRDataType>"16^B24
<%@ %p %@>
v@:@
Cannot merge NSUUID with different value.
%02X%02X
UUIDIndex
<%@: %p %@ %0.1f%@%@>
 bold
 italic
v16@?0@"<CRDataType>"8
v16@?0@8
<%@ %p version=%@ root=%@>
self
Subclass must implement.
Cannot tombstone a non-value / non-identified object.
NSAttachment
NSLink
NSWritingDirection
NSTextAlternatives
clock
subclock
<%@ %p %ld:%@>
%ld:%@
Cannot calculate deltas for vector timestamps.
%@:%lu 
com.apple.CRDT.NSNumber
com.apple.CRDT.NSUUID
com.apple.CRDT.CRRegisterMultiValueLeast
com.apple.CRDT.CRRegisterMultiValue
TTMergeableUndoStringDidAddUndoNotification
CRTombstoneOrderedSet
CRTombstoneOrderedSet: inserting element at invalid index
v16@?0@"CRTombstoneOrderedSet"8
v24@?0Q8^B16
CRTombstoneOrderedSet: moving element to an invalid index
v24@?0@"NSUUID"8^B16
CRTombstoneOrderedSet cannot merge with object of type %@.
<TTMergeableStringUndoEditCommand %p Delete:
%@:%d-%u, 
  Insert:
%@:%d-%u=>'%@', 
(cannot determine missing fields for lite message)
/Library/Caches/com.apple.xbs/Sources/ReminderKit_Sim/CRProtobuf/protobuf-lite/google/protobuf/message_lite.cc
CHECK failed: !coded_out.HadError(): 
CHECK failed: IsInitialized(): 
serialize
parse
Can't 
 message of type "
" because it is missing required fields: 
CHECK failed: (byte_size_before_serialization) == (byte_size_after_serialization): 
Protocol message was modified concurrently during serialization.
CHECK failed: (bytes_produced_by_serialization) == (byte_size_before_serialization): 
Byte size calculation and serialization were inconsistent.  This may indicate a bug in protocol buffers or it may be caused by concurrent modification of the message.
This shouldn't be called if all the sizes are equal.
/Library/Caches/com.apple.xbs/Sources/ReminderKit_Sim/CRProtobuf/protobuf-lite/google/protobuf/io/zero_copy_stream_impl_lite.cc
CHECK failed: (last_returned_size_) > (0): 
BackUp() can only be called after a successful Next().
CHECK failed: (count) <= (last_returned_size_): 
CHECK failed: (count) >= (0): 
Cannot allocate buffer larger than kint32max for 
StringOutputStream.
CHECK failed: (count) <= (target_->size()): 
/Library/Caches/com.apple.xbs/Sources/ReminderKit_Sim/CRProtobuf/protobuf-lite/replica-manager.pb.cc
CHECK failed: (&from) != (this): 
replica_manager.VectorTimestampElement
replica_manager.ReplicaEntry
replica_manager.ReplicaManager
down_cast
common.h
f == NULL || dynamic_cast<To>(f) != NULL
/Library/Caches/com.apple.xbs/Sources/ReminderKit_Sim/CRProtobuf/protobuf-lite/google/protobuf/io/zero_copy_stream.cc
This ZeroCopyOutputStream doesn't support aliasing. Reaching here usually means a ZeroCopyOutputStream implementation bug.
/Library/Caches/com.apple.xbs/Sources/ReminderKit_Sim/CRProtobuf/protobuf-lite/versioned-document.pb.cc
versioned_document.Document
versioned_document.Version
/Library/Caches/com.apple.xbs/Sources/ReminderKit_Sim/CRProtobuf/protobuf-lite/topotext.pb.cc
topotext.String
topotext.VectorTimestamp.Clock.ReplicaClock
topotext.VectorTimestamp.Clock
topotext.VectorTimestamp
topotext.CharID
topotext.Substring
topotext.Selection.Range
topotext.Selection
topotext.AttributeRun
topotext.Font
topotext.ParagraphStyle
topotext.HashtagInfo
topotext.AttachmentInfo
topotext.Attachment
topotext.Location
topotext.Media
topotext.PreviewImage
topotext.Todo
topotext.Color
CHECK failed: (size()) < (Capacity()): 
/Library/Caches/com.apple.xbs/Sources/ReminderKit_Sim/CRProtobuf/protobuf-lite/google/protobuf/stubs/common.cc
This program requires version 
 of the Protocol Buffer runtime library, but the installed version is 
.  Please update your library.  If you compiled the program yourself, make sure that your headers are from the same version of Protocol Buffers as your link-time library.  (Version verification failed in "
This program was compiled against version 
 of the Protocol Buffer runtime library, which is not compatible with the installed version (
).  Contact the program author for an update.  If you compiled the program yourself, make sure that your headers are from the same version of Protocol Buffers as your link-time library.  (Version verification failed in "
%d.%d.%d
INFO
WARNING
ERROR
FATAL
[libprotobuf %s %s:%d] %s
pthread_mutex_lock: 
pthread_mutex_unlock: 
/Library/Caches/com.apple.xbs/Sources/ReminderKit_Sim/CRProtobuf/protobuf-lite/google/protobuf/io/coded_stream.cc
The total number of bytes read was 
A protocol message was rejected because it was too big (more than 
 bytes).  To increase the limit (or to disable these warnings), see CodedInputStream::SetTotalBytesLimit() in google/protobuf/io/coded_stream.h.
CHECK failed: (0) == (BufferSize()): 
Reading dangerously large protocol message.  If the message turns out to be larger than 
 bytes, parsing will be halted for security reasons.  To increase the limit (or to disable these warnings), see CodedInputStream::SetTotalBytesLimit() in google/protobuf/io/coded_stream.h.
CHECK failed: (buffer_size) >= (0): 
/Library/Caches/com.apple.xbs/Sources/ReminderKit_Sim/CRProtobuf/protobuf-lite/crframework.pb.cc
CRDT.ObjectID
CRDT.Timestamp
CRDT.RegisterLatest
CRDT.VectorTimestamp.Element
CRDT.VectorTimestamp
CRDT.Dictionary.Element
CRDT.Dictionary
CRDT.Index.Element
CRDT.Index
CRDT.OneOf.Element
CRDT.OneOf
CRDT.StringArray.ArrayAttachment
CRDT.StringArray
CRDT.Array
CRDT.OrderedSet
CRDT.Document.CustomObject.MapEntry
CRDT.Document.CustomObject
CRDT.Document.DocObject
CRDT.Document
/Library/Caches/com.apple.xbs/Sources/ReminderKit_Sim/CRProtobuf/protobuf-lite/google/protobuf/wire_format_lite.cc
CHECK failed: value.size() <= kint32max: 
Unknown REMWeekday %ld
Unknown REMListSortDescriptorType %ld
rem_log_fault_if(aCount != bCount) -- clock elements should have the same count {aCount: %ld, bCount: %ld}
Creating a new, in-memory only replica manager {account = %@}
Deserializing existing replica manager {account = %@, size = %lu}
Creating a new replica manager {account = %@}
Clock element list is incompatible with existing list {cliet: %@}
Client clock newer that replica manager clock {client: %@, clientClockElementList: %@, replicaEntry.clockElementList: %@, replicaUUID: %@}
rem_log_fault_if(!entry.inUse) -- Client attempt to update replica while it is not in use {client: %@, replicaUUID: %@}
rem_log_fault_if(client != entry.client) -- Client attempt to update a replica not checked out by it {client: %@, entry.client: %@}
rem_log_fault_if(comparisonResult != REMClockElementsComparisonResultDescending) -- Can only update with a newer version.
rem_log_fault_if(!entry.inUse) -- Client attempts to return replicaUUID while it is not in use {client = %@, replicaUUID = %@}
rem_log_fault_if(client != entry.client) -- Client attempts to return replicaUUID not checked out by it {client = %@, replicaUUID = %@, checked out by = %@}
Importing ICS data into list change item {%@}.
Failed to parse data to ICS document {error: %@}.
Could not find a component with {key: %@}.
Added ICSTodo as reminder change item into list change item {reminder: %@, list: %@}.
Setting ICS item UID to reminder change item {%@, uid: %@}.
The imported ICS reminder doesn't have display order and creation time. {icsTodoItem.url: %@}
Import ICS alarm and triggers to reminder {alarmUID: %@, reminderID: %@}.
Imported ICS alarm has no UID, generating one {alarmUID: %@, reminderID: %@}.
Importing a Proximity/Location trigger when we have already imported a TimeInterval/Date trigger from the same ICSAlarm. So we found a concrete case that they co-exist. {alarmUID: %@, reminderID: %@}
Trying to import setting proximity without a location. {alarmUID: %@, reminderID: %@}
Trying to import setting location without a proximity value. {alarmUID: %@, reminderID: %@}
Couldn't populate the recurrence rule {icsRecurrence: %@, reminderID: %@}
Ignoring invalid coordinates when converting location from ICS: %@
Ignoring unexpected location URL scheme when converting location from ICS: %@.
Encountered an ICS frequency that we don't handle: %d. Defaulting to daily
Encountered an unknown ICS frequency: %d
Encountered an unknown ICSWeekday: %d
Unknown ReminderKit change tracking error code.
ERROR: REMChangeError occurred - code=%@, desc=%@, nserror=%@
[%{public}@] Passing in nil '%s'
rem_log_fault_if(listChangeItem == nil) -- listChangeItem is nil. Unable to insert ordering info to the list.
trackedAccountCapabilities is unexpectedly nil when getting reminderChangeItem.accountCapabilities {objectID: %{public}@}
Unable to duplicate. parentReminderID is present but parentReminder.subtaskContext is nil. {parentReminderID: %@}
Unable to duplicate. Cannot find list with listID {listID: %@}
Malformed original reminder - either parentReminderID or listID must be non-nil.
Only keeping earliest date alarm of reminder {reminderID: %{public}@, supportsMultipleDateAlarmsOnRecurrence: false, dateAlarms count:%lu}
[%{public}@] self.objectID should not be nil when copying this change item {self: %@}
[%{public}@] _trackedAccountCapabilitiesForObjectID should NOT yield nil result when copying this change item with a non-nil save request {objectID: %{public}@}
rem_log_fault_if(listChangeItem == nil) -- listChangeItem is nil. Unable to update list when setting icsDisplayOrder.
Adding recurrenceRule before recurrenceRule {reminderChangeItem: %@, recurrenceRule: %@, siblisngRecurrenceRule: %@}
Adding recurrenceRule after recurrenceRule {reminderChangeItem: %@, recurrenceRule: %@, siblisngRecurrenceRule: %@}
Removing recurrenceRule {reminderChangeItem: %@, recurrenceRule: %@}
Removing all recurrenceRules {reminderChangeItem: %@}
Behavior is undefined if you set a time interval (duration) alarm trigger without a due date on the reminder!
Adding alarm  {reminderChangeItem: %@, alarm: %@}
REMSaveRequest.isSaved MUST be FALSE
Adding data attachment {reminderChangeItem: %@, data.length: %ld, uti: %@}
Adding image attachment {reminderChangeItem: %@, data.length: %ld, width: %ld, height: %ld}
Adding attachment before attachment {reminderChangeItem: %@, attachment: %@, siblisngAttachment: %@}
Adding attachment after attachment {reminderChangeItem: %@, attachment: %@, siblisngAttachment: %@}
Removing attachment {reminderChangeItem: %@, attachment: %@}
Removing all attachments {reminderChangeItem: %@}
Removing all attachments {reminderChangeItem: %@} for class %@
Adding assignment {reminderChangeItem: %@, assignment: %@}
Removing assignment {reminderChangeItem: %@, assignment: %@}
Removing all assignment {reminderChangeItem: %@}
Adding hashtag {reminderChangeItem: %@, hashtag: %@}
Removing hashtag {reminderChangeItem: %@, hashtag: %@}
Removing all hashtags {reminderChangeItem: %@}
REMStore did change
Failed to create isolated store container {error: %@}
Did create isolated store container {token: %@}
Failed to destroy isolated store container {error: %@, token: %@}
Did destroy isolated store container {token: %@}
Created isolated store {store: %@}
Invalidating REMStore {store: %@}
Not invalidating connection for REMStore becuase its not an isolated store {store: %@}
xpc error while using debug performer {error :%@}
Nuked database with error: %@
XPC error while fetching replica manager {error: %@, account: %@}
Store replica manager fetch successful {account: %@, fetchSerializedData: %@}
Store replica manager fetch failed {error: %@, account: %@}
Store replica manager fetch successful {account: %@, bundleID: %@, managerByID.count: %lu}
Store replica manager fetch failed {error: %@, account: %@, bundleID: %@}
XPC error while saving {error: %{public}@, store: %@}
Failed to get results from fetchResult {error: %@, fetchResult: %@, fetchRequest: %@}
REMStore.fetchByObjectID
XPC error while executing fetchRequest {error: %@, fetchRequest: %@}
Store fetch successful {fetchRequest: %@, fetchResult: %@}
Succesfully executed fetch {fetchResult: %@}
Failed to get fetchResult or error from fetchRequest {fetchRequest: %@}
Store failed to execute fetchRequest {error: %@, fetchRequest: %@, store: %@}
REMStore Invocation
 enableTelemetry=YES Name=%{public, signpost.telemetry:string1, Name=InvocationName}s UserInteractive=%{public, signpost.telemetry:number1, Name=UserInteractive}d
FETCH START {name: %{public}@}
FETCH END ERROR_XPC {name: %{public}@, error: %{public}@}
FETCH END {name: %{public}@}
FETCH END ERROR {name: %{public}@, error: %{public}@}
 enableTelemetry=YES 
REMStore.invocation
REMStore swiftInvocation
FETCH START {name: %{public}@, parametersData.length %ld, storages.count: %ld}
FETCH END {name: %{public}@, result.data.length: %ld, result.storages.count: %ld}
FETCH END ERROR {name: %{public}@, error: %@}
 enableTelemetry=YES ResultCount=%{public, signpost.telemetry:number1, Name:ResultCount}ld DataSize=%{public, signpost.telemetry:number2, Name:DataSize}ld
Unexpected error when fetching all reminders from list {list: %@, error: %@}
Unexpected error when fetching all accounts: %@
Unexpected error when fetching all lists from account {account: %@, error: %@}
xpc error while using xpcPerformer {error: %{public}@, store: %@}
(client) Unexpected duplicate change item on objects with the same objectID {objectID: %{public}@}
REMStore.save
(client) SAVE START {author: %{public}@, accountChangeItems.count: %lu, listChangeItems.count: %lu, smartListChangeItems: %lu, reminderChangeItems.count: %lu}
A template should be modified using 'REMTemplateChangeItem' instead of 'REMListChangeItem'
Will save REMReplicaManager {version: %llu, accountID: %@}
Failed to serialize REMReplicaManager {error: %{public}@}
(client) SAVE FAIL {error: %{public}@}
(client) SAVE END
Marking REMReplicaManager as saved {version: %llu, accountID: %@}
XPC error while fetching share for list {error: %@, list: %@}
Store fetch share failed {error: %@, account: %@}
Store fetch share successful {list: %@, share: %@}
XPC error while creating share for list {error: %@, list: %@}
Store create share failed {error: %@, account: %@}
Store create share successful {list: %@, share: %@}
XPC error while updating share {error: %@, share: %@, accountID: %{public}@}
XPC error while stopping share {error: %@, share: %@, accountID: %{public}@}
XPC error while accepting share {error: %@, metadata: %@}
(client) DistributedEvaluation Export START {options: %{public}@
XPC error while fetching store performer {error: %{public}@}
DistributedEvaluation Export produced no result and no error
DistributedEvaluation Export ERROR {error: %{public}@}
(client) DistributedEvaluation Export END
XPC error while querying iCloud configuration for Suggested Attributes harvesting parameters {error: %{public}@}
Given invitation list isn't a CalDAV list {invitationList: %@, account: %@}
Given invitation list isn't a sharing invitation {invitationList: %@, account: %@}
Given invitation list has no external identifier {invitationList: %@, account: %@}
Could not find the external identifier from the given invitation list {invitationList: %@, account: %@}
XPC error while accepting CalDAV share {error: %@, invitationList: %@}
Could not create a change tracking client because some of the parameters are missing.
Could not get a daemon controller to create the change tracking client.
_shouldNotifyReminddOfInteractionWithPeople returned NO. Skipping notification {people: %@}
_shouldNotifyReminddOfInteractionWithPeople returned YES. Notifying people interaction {people: %@}
Failed to notify of interaction {error: %@, people: %@}
XPC error while notifying of interaction {error: %@, people: %@}
Failed to register shouldNotifyOfInteractionWithPeople with notifyd {status: %d}
Failed to register shouldNotifyOfInteractionWithPeople with notify. Returning YES to _shouldNotifyReminddOfInteractionWithPeople {token: %d}
Failed to check notifyd token. Returning YES to _shouldNotifyReminddOfInteractionWithPeople {token: %d, status: %d}
shouldNotifyOfInteractionWithPeople did not change. Returning cached value {__sShouldNotifyRemindd: %d}
shouldNotifyOfInteractionWithPeople did change. Updating cache
Failed to get notify state. Returning YES to _shouldNotifyReminddOfInteractionWithPeople {token: %d, status: %d}
Successfuly notify_get_state updating cache {state: %llu}
DEPRECATED API called -[REMStore fetchReminderWithExternalIdentifier:inList:error:] called, without bounded by an REMList as param.
DEPRECATED API called -[REMStore fetchRemindersWithExternalIdentifiers:inList:error:] called, without bounded by an REMList as param.
XPC error while trying to perform MCIsManagedAccountWithObjectID {error: %@, account: %@}
Store perform MCIsManagedAccountWithObjectID successful {account: %@, MCIsManaged: %@}
Store perform MCIsManagedAccountWithObjectID failed {error: %@, account: %@}
EventKitSync: enabled on iOS
Triggering sync for dataAccess accounts {accountIDs: %{public}@}
XPC error while syncing {error: %{public}@}
Sync throttled
Error updating account. Not Triggering sync {error: %@}
XPC error while updating accounts {error: %@}
XPC error while updating account {error: %@, accountID: %@}
XPC error while removing orphaned accounts {error: %@}
XPC error while syncing {error: %@}
XPC error while requesting to initiate merge local data to sync data {accountIdentifier: %@, error: %@}
XPC error while requesting to delete sync data {accountIdentifier: %@, error: %@}
XPC error while requesting to delete local data {error: %@}
XPC error while adding share observer {error: %@, accountID: %{public}@}
_REMDACalDAVSyncReplicaManagerProvider: Deserializing existing replica manager {account = %@, size = %lu}
_REMDACalDAVSyncReplicaManagerProvider: Creating a new replica manager {account = %@}
XPC error while requesting to update client connections {isAsynchronous: %@, shouldKeepAlive: %@, error: %@}
repairPhantomObjectsWithObjectIDs: Invoked with {objectIDs: %{public}@}
XPC error while getting store performer for repairPhantomObjectsWithObjectIDs {error: %@, objectIDs: %{public}@}
repairPhantomObjectsWithObjectIDs failed {error: %@, phantomObjectIDs: %{public}@}
repairPhantomObjectsWithObjectIDs successful {result: %{public}@}
xpc error while using debug performer {error: %@}
Unknown REMAlarmProximity %ld
Unknown REMAlarmVehicleTriggerEvent %ld
Undo stack is empty. Cannot -undo.
rem_log_fault_if(![self.undos containsObject:undo]) -- Supplied undo is not found in undo stack. Normally, if the undo is obtained from this particular REMCRMergeableOrderedSet, the undo will also be present in self.undos, whose value is now: %@
rem_log_fault_if(_listIDsMergeableOrdering == nil && _listIDsMergeableOrderingData == nil) -- Attempted to decode REMAccountStorage with both _listIDsMergeableOrdering and _listIDsMergeableOrderingData missing {objectID: %{public}@, name: %{sensitive}@}
Attempted to decode REMAccount missing objectID, type or name {objectID: %{public}@, type: %ld, name: %@, markedForRemoval: %d}
rem_log_fault_if(self->_listIDsMergeableOrderingData == nil) -- Attempted to encode REMAccountStorage with both _listIDsMergeableOrdering and _listIDsMergeableOrderingData missing {objectID: %{public}@, name: %{sensitive}@}
You are about to trigger decoding the listIDsMergeableOrdering. This is probably not what you want for performance to trigger it from -isEqual:, unless you are running Tests then it's fine {class: %{public}@, self-idsOrdering: %@, other-idsOrdering: %@}
You are about to trigger decoding the resolution token map from JSON data. This is probably not what you want for performance to trigger it from -isEqual:, unless you are running Tests then it's fine {class: %{public}@, self-map: %@, other-map: %@}
Nil listIDsMergeableOrderingData when reading listIDsMergeableOrdering from account storage. Initialize an empty set {objectID: %{public}@}
REMAccountStorage listIDsMergeableOrdering deserialized {objectID: %{public}@, self: %p, orderedSet.count: %@}
Failed to read listIDsMergeableOrdering from data. Returning empty set {error: %@}
Nil resolutionTokenMapData when reading resolutionTokenMap from account storage. Initialize an empty map {list: %@}
Unknown REMAccountType %ld
REMChangeTracking+AuxiliaryChgInfo: Could not instantiate auxiliary change info model for {class: %{public}@, remObjectID: %{public}@}
REMChangeTracking+AuxiliaryChgInfo: Failed to decode data to plist dictionary for {class: %{public}@, remObjectID: %{public}@, plistError: %{public}@}
REMChangeTracking+AuxiliaryChgInfo: No object identifier decoded from plist dictionary for {class: %{public}@, remObjectID: %{public}@}
REMChangeTracking+AuxiliaryChgInfo: Decoded object identifier from the plist dictionary does not match with input object ID for {class: %{public}@, remObjectID: %{public}@, decodedObjID: %{public}@}
Could not get a date component with floating time zone {date %@, flags: %@}
Could not get a date component with {date %@, timeZone: %@, flags: %@}
Calendar must be nil or Gregorian
Invalid date components: must have at least a year, a month, and a day
Date components without time zone cannot be compared to date components with timezone
Date components with time zone cannot be compared to date components without timezone
Cannot create date from date components
REMChangedKeysObserver detected a change {keyPath: %@, old: %@, new: %@}
Invalid nil value provided when trying to -addHashtag:range: to REMMutableCRMergeableStringDocument {self: %p, replicaID: %@, range: %@}
Added TTREMHashtag to this REMMutableCRMergeableStringDocument {self: %p, replicaID: %@, value: %@, range: %@}
Removed TTREMHashtag from this REMMutableCRMergeableStringDocument {self: %p, replicaID: %@, value: %@, range: %@}
Unexpected Class of TTREMHashtagAttributeName objects found {value: %@, range: %@}
Unexpected Class of TTREMHashtagAttributeName objects found in enumeration {value: %@, range: %@}
Invalid nil value provided when trying to -rem_addHashtag:range: to this NSMutableAttributedString {self: %p, range: %@}
Added TTREMHashtag to this NSMutableAttributedString {self: %p, value: %@, range: %@}
rem_log_fault_if(src != nil && result == nil) -- Unexpected object type in checked dynamic cast %@ expects %@
rem_log_fault_if(!protocol) -- Protocol is nil {src: %@}
rem_log_fault_if(src != nil && result == nil) -- Unexpected object type in checked protocol cast %@ expects %s
Tried to compare two REMReminderStorage instances without first deserializing their CRDT titleDocument {self: %@, other: %@}
Tried to compare two REMReminderStorage instances without first deserializing their CRDT notesDocument {self: %@, other: %@}
Failed to read titleDocument from data. Returning nil.
Failed to read notesDocument from data. Returning nil.
Nil resolutionTokenMapData when reading resolutionTokenMap from reminder storage. Initialize an empty map {class: %{public}@, reminder: %@}
Unknown REMSiriFoundInAppsUserConfirmation %ld
Should not be trying to compare with the universal token.
Should not be trying to compare equality of the universal token. Use REMCHANGE_IS_UNIVERSAL_TOKEN() instead.
rem_log_fault_if(!isUniversal) -- isUniversal == NO on decoded universal change token
rem_log_fault_if(!trackedAccountCapabilities) -- invalid nil value for '%s'
trackedAccountCapabilities is unexpectedly nil when getting accountChangeItem.capabilities {objectID: %{public}@}
Attemped to get ordering of lists not belonging to the provided account {objectIDs: %@}
Tried to remove node not present in ordering list {objectID: %{public}@, ordering: %{public}@}
Tried to move list ID not present in ordering list {objectID: %@, ordering: %@}
Tried to move list ID beyond bounds of ordering list {objectID: %@, count: %@}
rem_log_fault_if(mergeableOrderingNode.accountID == nil || ![mergeableOrderingNode.accountID isEqual:self.objectID]) -- mergeableOrderingNode must have been assigned to this account change item at this point
Failed to find the insert after index of the given sibling list -- Appending to the end {objectID: %@}.
Unknown REMListPredicateDescriptorType %ld
Attempted to describe invalid REMSharedEntitySyncActivityType with value %ld
REMDisplayDate unexpectedly initialized with a nil date. Returning nil.
Unable to obtain a valid floating date from floating date components; returning nil
Unable to obtain a valid non-floating date from non-floating date components; returning nil
Floating date components must not have a timezone {dateComponents %@}
Non-floating date components must have a timezone {dateComponents %@}
Non-floating display date is all day but only floating display dates should be all day {dateComponents %@}
rem_log_fault_if(!self.account) -- invalid nil value for '%s'
+[lastTransactionTimestampWithManagedObjectContext:affectedStores:] Failed to obtain current PHT token {affectedsStores: %@}
+[lastTransactionTimestampWithManagedObjectContext:affectedStores:] Failed to fetch history {error: %{public}@, affectedsStores: %@}
rem_log_fault_if(!error) -- Daemon returned nil result and error for persistentHistoryFetch {token: %{public}@}
rem_log_fault_if(!error) -- Daemon returned nil result and error for persistentHistoryFetch {date: %{public}@}
xpc error while using debug performer {error: %{public}@, store: %@}
rem_log_fault_if(!debugPerformer) -- Failed to get debugPerformer fetching persistentStoreID {accountID: %{public}@}
xpc error while using changeTracking performer {error: %{public}@, store: %@}
rem_log_fault_if(!changeTrackingPerformer) -- Returned nil for both error and changeTrackingPerformer
rem_log_fault_if(coalescedChangeObjects == nil) -- changeObject.coalescedChanges should not be nil if changeObject.isCoalesced is YES
No auxiliary change info object IDs found with change object {changeObject: %@}
Auxiliary change info object IDs to fetch {objectIDs: %{public}@, changeObject: %@}
Daemon returned error for auxiliary change info fetch with {error: %{public}@, changeObject: %@, auxChgInfoIds: %{public}@}
rem_log_fault_if(!changeObject) -- ERROR changeObjectsMap lost track of {auxiliaryChangeInfoObjectID: %{public}@}
rem_log_fault_if(!data) -- ERROR XPC returned a mapOfData that has no data entry for {auxiliaryChangeInfoObjectID: %{public}@}
Failed to decode one of the change infos data for {changeObject: %@, objectID: %{public}@, decodeError: %{public}@}
Created new container for account ID %@
Created new default container
Created CKContainer with public cloud database
rem_log_fault_if(!accountChangeItem.capabilities.supportsTemplates) -- Attempt to create REMTemplateChangeItem into account not supporting templates {account: %{public}@}
REMCalDAVNotification is designed to be immutable and does not do marked-for-deletion.
Invalid 0 value provided when trying to -rem_setFontHint:isOn:range: to this NSMutableAttributedString {self: %p, range: %@}
Added REMTTFontHint to this NSMutableAttributedString {self: %p, hint: %lu, range: %@}
Added REMTTUnderline to this NSMutableAttributedString {self: %p, value: %d, range: %@}
Adding snooze alarm: %@
Acknowledging original alarm: %@
Replacing alarm with acknowledged version: %@
Not replacing non-temporal alarm: %@
Unable to remove temporary file because {error: %@}
Unable to create temporary directory because {error: %@}
Unable to write temporary file because {error: %@}
Unable to link temporary file because {error: %@}
_REMChangedObjectIDStorage: nil value passed to non-nil parameter. Something must have gone wrong. {uuid: %{public}@, entityName: %{public}@}
Cannot convert changedObjectIDStorage to changedObjectID because it is nil in persistentHistoryChange {change: %@}
Cannot convert changedObjectIDStorage to changedObjectID because entityName is nil in persistentHistoryChange {change: %@}
Unexpected REMChangeType {type: %lu}
Unknown REMChangeType %ld
REMChangeSet applyFilterByTransactionAuthors: {self=%p, exclude=%d, authors=%{public}@}
transaction has no mapped accountID! {txn: %@}
Trying to populate flattened changes with a change that lost back pointer to its transaction %@.
chg.changedObjectID is nil! {chg: %@, txn: %@}
Unknown persistent history change type. {changeType: %lu}
rem_log_fault_if(!changedObjectID) -- Nil coalesced.changeObjectID {coalesced: %@}
rem_log_fault_if(!changedObjectID) -- Nil update change objectID {ups[0]: %@}
rem_log_fault_if(!ins) -- Nil change for insertedID {insertedID: %{public}@}
REMChangeSet _filterAndFlattenAndConsolidateChanges was successful. ChangeSet: %@
REMChangeSet _filterAndFlattenAndConsolidateChanges failed. ChangeSet: %@
Requested change tracking for unsupported class {klass: %{public}@}
Missing changeEntityName {change: %@}
REMChangeSet is in error or truncated. Returning nil token for account {accountID: %{public}@, error: %@, isTruncated: %{public}@, transactions: %@}
REMChangeset does not contain token for accountID (this is not an error). Returning nil {accountID: %{public}@, transactions: %@}
rem_log_fault_if(transactions.count != 0) -- Attempt to decode an error change set with non-empty transaction list. {error: %@, transaction: %@}
REMChangeSet initWithCoder: {self=%p}
Unknown REMReminderSortDescriptorType %ld
remCurrentRuntimeVersionDebuggingOverride = %ld
An REMRecurrenceEnd was created with an occurrence count of 0. %@
XPC error performing suggestedAttributesPerformer.preWarmModel {error: %{public}@}
REMSuggestedAttributesPerformer swiftInvocation
 enableTelemetry=YES Name=%{public, signpost.telemetry:string1, Name=InvocationName}s}d
INVOCATION START {name: %{public}@, parametersData.length %ld, storages.count: %ld}
INVOCATION END ERROR_XPC {name: %{public}@, error: %{public}@}
INVOCATION END {name: %{public}@, result.data.length: %ld, result.storages.count: %ld}
INVOCATION END ERROR {name: %{public}@, error: %@}
suggestedAttributesPerformer invalidated. Dropping cache
Cache-miss getting suggestedAttributesPerformer. Resolving.
Failed to get storePerformer for suggestedAttributesPerformer. {action: %@}
uncachedSuggestedAttributesPerfomer produced no result and no error
uncachedSuggestedAttributesPerfomer ERROR {error: %{public}@}
REMRemindersDataView: Requested to fetch non-existent reminder {objectID: %{public}@}
Failed to fetch reminders count of list {listID: %@}
Failed to fetch reminders count with parentReminderID {parentReminderID: %@}
Requested non-existent reminder {externalIdentifier: %@}
REMRemindersDataView: Requested to fetch non-existent reminders {externalIdentifier: %{public}@}
REMRemindersDataView: Requested to fetch non-existent reminder {daCalendarItemUniqueIdentifier: %{public}@}
REMRemindersDataView: Could not map an account for the fetched reminder {reminderID: %{public}@, accountID: %{public}@}
The given account does not support CSL fetching {accountID: %{public}@}
The given group is not from an account that supports CSL fetching {groupID: %{public}@}
REMDAChangeTrackingHelper: ERROR: Couldn't initialize REMDAChangeTrackingHelper without an account.
REMDAChangeTrackingHelper: ERROR: Couldn't initialize REMDAChangeTrackingHelper without an REM store {account: %{public}@}.
REMDAChangeTrackingHelper: ERROR: Couldn't initialize REMDAChangeTrackingHelper because we failed to obtain a change tracking API handle {account: %{public}@}.
REMDAChangeTrackingHelper: ERROR: Failed to get change tracking state with error {clientID: %{public}@, error: %@}
REMDAChangeTrackingHelper: ERROR: Failed to get current change token to initialize tracking state with error {clientID: %{public}@, error: %@}
REMDAChangeTrackingHelper: Initializing a change tracking state for {clientID: %{public}@, nowToken: %{public}@}
REMDAChangeTrackingHelper: ERROR: Failed to save an initialization of tracking state with error {clientID: %{public}@, error: %@}
REMDAChangeTrackingHelper: Found and fetched change tracking state for {clientID: %{public}@, lastSyncToken: %{public}@, lastSyncDate: %{public}@}
REMDAChangeTrackingHelper: Cannot get last consumed token when compareCurrentChangeTokenToLastConsumedWithError {clientID: %{public}@}
REMDAChangeTrackingHelper: Cannot get last current change token when compareCurrentChangeTokenToLastConsumedWithError {clientID: %{public}@}
REMDAChangeTrackingHelper: compareCurrentChangeTokenToLastConsumedWithError: comparing current token vs last consumed: {clientID: %{public}@, current: %{public}@, lastConsumed: %{public}@}
REMDAChangeTrackingHelper: Fails to compare current token with last consumed when compareCurrentChangeTokenToLastConsumedWithError {clientID: %{public}@}
REMDAChangeTrackingHelper: fetched history since {clientID: %{public}@, lastSyncToken: %{public}@, lastSyncDate: %{public}@, changeSet: %{public}@}
REMDAChangeTrackingHelper: ERROR: Fetched truncated or error change history {clientID: %{public}@, lastSyncToken: %{public}@, isTruncated: %{public}@, changeSet.error: %@}
REMDAChangeTrackingHelper: Will try to reset tracking state to current token because we had a truncated or error change-set {clientID: %{public}@, nowToken: %{public}@}
REMDAChangeTrackingHelper: fetchChangesSinceLastConsumed done {clientID: %{public}@, lastSyncToken: %{public}@, upToToken: %{public}@}
REMDAChangeTrackingHelper: Had problem getting change history for account "%{public}@"
REMDAChangeTrackingHelper: ERROR: Could not get a change tracking client to fetch history for {client: %{public}@, accountID: %{public}@}
REMDAChangeTrackingHelper: ERROR: Cannot get current token to mark to {clientID: %{public}@, account: %{public}@, error: %@}
REMDAChangeTrackingHelper: No newer change token in this history {token: %{public}@, clientID: %{public}@, account: %{public}@}
REMDAChangeTrackingHelper: ERROR: Unexpected change token {token: %{public}@, clientID: %{public}@, account: %{public}@, error: %@}
REMDAChangeTrackingHelper: No newer change token in this history {clientID: %{public}@, account: %{public}@}
REMDAChangeTrackingHelper: ERROR: Failed to save tracking state with error {tokenToSave: %{public}@, clientID: %{public}@, error: %@, account: %{public}@, forcedToCurrent: %d}
REMDAChangeTrackingHelper: markChangesConsumed done {tokenToSave: %{public}@, clientID: %{public}@, account: %{public}@, forcedToCurrent: %d}
REMDAChangeTrackingHelper: ERROR: We didn't get a change tracking client so we have no change set to enumerate from %{public}@.
REMDAChangeTrackingHelper: ERROR: Couldn't change tracking client ID to enumerate changed objects from %{public}@.
REMDAChangeTrackingHelper: ERROR: Couldn't get REM account objectID to enumerate changed objects from %{public}@ for %{public}@.
REMDAChangeTrackingHelper: Change set is nil and we have nothing to enumerate for %{public}@.
REMDAChangeTrackingHelper: Change set was truncated or had error and we are not going to enumerate it for %{public}@ {isTruncated: %{public}@, changeSet.error: %@}.
REMDAChangeTrackingHelper: Why does the just inserted object got a deletionKey? {objectID: %{public}@, deletionKey: %{public}@, clientID: %{public}@}
REMDAChangeTrackingHelper: (NOTICE)(May be legit) Had a (real-)deleted model object without a deletion key (e.g. external id) {objectID: %{public}@, clientID: %{public}@}
REMDAChangeTrackingHelper: Unexpectedly got a changed model object from a different account {modelObject: %{public}@, modelObject.account: %{public}@, daREMAccount: %{public}@, clientID: %{public}@, changeType: %lu}
REMDAChangeTrackingHelper: Could not find changed model object(s) in the ReminderKit with {clientID: %{public}@, changeType: %lu, missingIDs: %{public}@}
REMDAChangeTrackingHelper: ERROR: Failed to fetch changed model objects for account: {remAccount: %{public}@, clientID: %{public}@, changeType: %lu}
REMDAChangeTrackingHelper: Cannot handleIsConcealedUpdatesInChange as given change has nil changedObjectID {modelClass: %{public}@, clientID: %{public}@, changeID: %lld}
REMDAChangeTrackingHelper: (NOTICE)(Can be legit) Had a concealed (e.g. lazy deleted) model object without a deletion key (e.g. externalIdentifier) {objectID: %{public}@, modelObject: %{public}@, clientID: %{public}@}
REMDAChangeTrackingHelper: (Can be legit) Couldn't even fetch the concealed object with includeConcealedObjects=YES and we can only return nil deletion key {objectID: %{public}@, modelObject: %{public}@, clientID: %{public}@}
REMDAChangeTrackingHelper: _fetchModelObjectOfClass:withObjectID:includeConcealedObjects: Cannot proceed to fetch because the change objectID is nil {clientID: %{public}@, model: %{public}@}.
rem_log_fault_if(!remStore) -- REMDAChangeTrackingHelper: remStore is nil when trying to _fetchModelObjectOfClass:withObjectID:includeConcealedObjects:
REMDAChangeTrackingHelper: _fetchModelObjectOfClass:withObjectID:includeConcealedObjects: failed {clientID: %{public}@, error: %@}
rem_log_fault_if(!remStore) -- REMDAChangeTrackingHelper: remStore is nil when trying to _fetchModelObjectsOfClass:withObjectIDs:
REMDAChangeTrackingHelper: ERROR: Couldn't get a change tracking client from store for DataAccess from {account %{public}@}.
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: ERROR: Failed to fetch REMList {objectID: %{public}@, includeConcealedObjects: %{public}@, error: %@}.
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: ERROR: Failed to fetch REMList {objectIDs: %{public}@, error: %@}.
rem_log_fault_if(![list respondsToSelector:@selector(shouldUseExternalIdentifierAsDeletionKey)]) -- REMList should conform to REMExternalSyncMetadataProviding {list: %{public}@}
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: ERROR: Failed to fetch REMReminder {objectID: %{public}@, includeConcealedObjects: %{public}@, error: %@}.
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: ERROR: Failed to fetch REMReminder {objectIDs: %{public}@, error: %@}.
rem_log_fault_if(![reminder respondsToSelector:@selector(shouldUseExternalIdentifierAsDeletionKey)]) -- REMReminder should conform to REMExternalSyncMetadataProviding {reminder: %{public}@}
rem_log_fault_if(assignments.count > 1) -- REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: FAULT: Fetch returned more than 1 assignment with 1 object ID.
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: ERROR: LOOKATME Requested REMAssignment not found {objectID: %{public}@, includeConcealedObjects: %{public}@, error: %@}.
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: ERROR: LOOKATME Failed to fetch REMAssignment {objectID: %{public}@, includeConcealedObjects: %{public}@, error: %@}.
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: ERROR: Failed to fetch REMAssignment {objectIDs: %{public}@, error: %@}.
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: LOOKATME: Can't cast concealed object to REMAssignment {concealedObject: %@}.
rem_log_fault_if(hashtags.count > 1) -- REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: FAULT: Fetch returned more than 1 hashtag with 1 object ID.
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: ERROR: LOOKATME Requested REMHashtag not found {objectID: %{public}@, includeConcealedObjects: %{public}@, error: %@}.
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: ERROR: LOOKATME Failed to fetch REMHashtag {objectID: %{public}@, includeConcealedObjects: %{public}@, error: %@}.
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: ERROR: Failed to fetch REMHashtag {objectIDs: %{public}@, error: %@}.
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: LOOKATME: Can't cast concealed object to REMHashtag {concealedObject: %@}.
Mismatched objectID type {objectID: %@, expected: %@}
No error object to produce REMErrorCodeMultipleErrors.
noSuchObject REMError has an invalid UUID string {errorUUIDString: %{public}@}
noSuchObject REMError has unexpected keys {error.userInfo: %{public}@}
Unknown REMAssignmentStatus %ld
Can't construct REMResolutionToken from invalid JSON {jsonObject: %@}
Not showing alert for assertion because defaults key was set
Failed [%d] to create CFUserNotificationRef for alertOptions: %@
User decided to disable the assertion alerts
Disabled the assertion alert
rem_log_fault_if([self.inProgressSaveRequests containsObject:saveRequest]) -- SaveRequest save already in progress {saveRequest: %@, inProgressSaveRequests: %@}
REMSaveRequest.isSaved MUST be TRUE
SaveRequest is not in progress. Ignoring. {saveRequest: %@, inProgressSaveRequests: %@}
Failed to get account for inProgressList. Returning nil {listObjectID: %@, accountID: %@}
Failed to get parentlist for inProgressList. Returning nil {listObjectID: %@, trackedListChangeItem.parentListID: %@
Failed to get list for inProgressReminder. Returning nil {reminderObjectID: %@, listID: %@}
Failed to get parent reminder for inProgressReminder. Returning nil {reminderObjectID: %@, parentReminderID: %@}
ReminderChangeItem missing both listID and parentReminderID. Returning nil {reminderObjectID: %@}
REMDatabaseMigrationAccountInfo cannot be initialized without an account type and an identifier.
Failed to create isolated store container for database migration {error: %{public}@}
Failed to destroy isolated store container for database migration {error: %{public}@}
Database Migration will begin
Migration Error {identifier: %{public}@, stage: %{public}@, error: %{public}@, error.debugDescription: %@}
_postMigrationLocalAccountCleanup: Trying to clean up local account after local migration
_postMigrationLocalAccountCleanup: Cannot fetch local account lists for post local migration cleanup {error: %{public}@}
_postMigrationLocalAccountCleanup: No lists or only one list is found. No cleanup is necessary
_postMigrationLocalAccountCleanup: Failed to reminders count of the default list for post local migration cleanup {error: %{public}@}
_postMigrationLocalAccountCleanup: Our default list isn't empty. Not going to remove it
_postMigrationLocalAccountCleanup: Removing empty default list because the local migration has copied some list(s) to the local account
_postMigrationLocalAccountCleanup: Failed to save account objects for local migration {error: %{public}@}
_postMigrationLocalAccountCleanup: Empty default list removed
_postMigrationLocalAccountCleanup: No local account is found for post local migration cleanup. This is unexpected {error: %{public}@}
Database Migration did finish {success: %d, duration: %.2f}
ensureAccountsExist: Finished calling [_cleanLocalDatabases]
ensureAccountsExist: There is no need to clean local database before we ensure accounts exist for local migration.
ensureAccountsExist: There's no input account info. There's nothing we need to do.
ensureAccountsExist: Local account is ignored {accountID: %{public}@, name: %@}
ensureAccountsExist: About to add account per request {accountID: %{public}@, name: %@, type: %ld}
ensureAccountsExist: Found unexpected existing account with external identifier we are about to use for creating new account {uuid: %{public}@}
ensureAccountsExist: Invalid UUID. Skip. {uuid: %{public}@}
ensureAccountsExist: CloudKit account type is not expected. {uuid: %{public}@}
ensureAccountsExist: About to save pending changes to our database
Failed to save account objects for local migration {error: %{public}@}
ensureAccountsExist: Decommissioned [REMDatabaseMigrationContext ensureAccountsExist:] called. Migration will not work.
ensureAccountsExist: Given account info #(%{public}@) does not contain an identifier: %@
ensureAccountsExist: Given account info #(%{public}@) does not contain an account type: %@
Failed to fetch existing accounts when trying to clear local database before we can create clean ones for local migration {error: %{public}@}
REMDatabaseMigrationContext found existing CalDAV account locally before migration, deleting store: {name: %@, id: %{public}@, externalIdentifier: %{public}@}
REMDatabaseMigrationContext found existing local account locally before migration, emptying content: {id: %{public}@}
_cleanLocalDatabases saving changes
Failed to remove existing accounts when trying to clear local database before we can create clean ones for local migration {error: %{public}@}
Unknown REMFetchRequestType %ld
isConsideredEmpty: Error fetching lists from local account {error: %@}.
isConsideredEmpty: Account thas more than 1 lists. Treating as non-empty.
isConsideredEmpty: Error fetching reminders from list in local account {listID: %@, error: %@}.
isConsideredEmpty: Account has no reminders. Treating as empty.
isConsideredEmpty: Account has reminders. Treating as non-empty.
isConsideredEmpty: Account has no lists. Treating as empty.
Performed XPC -MCIsManagedAccountWithObjectID: failed {account: %@, error: %@}
Performed XPC -MCIsManagedAccountWithObjectID: successful {account: %@, result: %@}
rem_log_fault_if(listIDsMergeableOrdering == nil) -- account.storage.listIDsMergeableOrdering should not be nil {objectID: %{public}@}
Invalid unknown account type, cannot convert to string {%@}.
Unknown account type, cannot convert to string {%@}.
Account type should not be REMAccountTypeCount
rem_log_fault_if(!self.owner) -- Editting REMReplicaIDHelper without an owner {replicaIDHelper: %@}
Added REMTTParagraphStyle to this NSMutableAttributedString {self: %p, paragraphStyle: %@, range: %@}
Remove REMTTParagraphStyle from this NSMutableAttributedString {self: %p, range: %@}
Created new REMXPCDaemonController {self: %{public}@}
REMXPCDaemonController invalidate
Clearing cached performer due to proxy xpc error {name: %{public}@, error: %{public}@}
Returning existing performer {name: %{public}@, performer: %@}
Clearing cached performer due to resolve xpc error {name: %{public}@, error: %{public}@}
Returning existing performer {name: %{public}@, reason: %{public}@, performer: %@}
Cache-miss getting performer. Resolving async {name: %{public}@, reason: %{public}@}
xpc connection error getting resolver {name: %{public}@, error: %{public}@}
Resolve performer {name: %{public}@, performer: %@}
Error resolving performer {name: %{public}@, error: %{public}@}
Cache-miss getting performer. Resolving sync {name: %{public}@, reason: %{public}@}
Resolved performer {name: %{public}@, performer: %@}
XPC connection was interrupted
XPC connection was invalidated
REMCRMutableAttributedString: Deleting portion of text within a non-editable attribute range. Removing the attribute {self: %p, key: %@, replacementRange: %@, ranges: %@}
REMCRMutableAttributedString: Inserting text within a non-editable attribute range. Removing the attribute {self: %p, key: %@, replacementRange: %@, attrRange: %@}
REMCRMutableAttributedString: Non-editable attributes were extended around the insertion point, now unapply the extension to the attributes {self: %p, keys: %@, range: %@}
Error decoding color {error: %@}
Error encoding color
Unknown REMColorRGBSpace %ld
REMUserDefaults created {suiteName: %@, container: %@}
REMUserDefaults created {standardUserDefaults: true}
REMUserDefaults created {suiteName: %@}
REMUserDefaults KVO change observed {userDefaultsKey: %@}
rem_log_fault_if(!sharedInstance) -- Failed to create REMAppleAccountUtilities shared instance
unsafeUntilSystemReady_allCloudKitRemindersEnabledICloudACAccounts encounters an iCloud ACAccount with nil identifier, skipped {account: %@}
unsafeUntilSystemReady_icloudACAccountMatchingAccountIdentifier can't find a matching ACAccount with {accountIdentifier: %{public}@}
unsafeUntilSystemReady_iCloudAccountCalDavServiceWithAccountID failed to match ACAccount with {accountID: %{public}@}
Trying to set didChooseToMigrate=%d didFinishMigration=%d on ACAccount (%@)
Actually setting didChooseToMigrate=%d didFinishMigration=%d on ACAccount (%@)
Error saving migration state to ACAccount: %@
Saved didChooseToMigrate=%d didFinishMigration=%d on ACAccount (%{public}@)
Trying to unset didChooseToMigrate and didFinishMigration on ACAccount (%@)
XXXXXXXXX: Done unset didChooseToMigrate and didFinishMigration on ACAccount (%@)
Unknown REMHashtagType %ld
Hourly recurrence is not supported by CalendarFoundation.
Unknown REMRecurrenceFrequency %ld
Unable to unarchive data to create REMContactRepresentation: %@
XPC error while fetching status reports {error: %@}
Error getting DataAccess status reports {error: %@}
xpc error while trying to carsh daemon {error: %@}
xpc error while using xpcPerformer {error: %{public}@}
Nil resolutionTokenMapData when reading resolutionTokenMap from smartlist storage. Initialize an empty map {smartlist: %@}
Unknown REMAccountSortDescriptorType %ld
Creating saveRequest in migration mode
Creating saveRequest in CalDAV-Sync mode
Creating saveRequest in EventKitSync mode
Creating saveRequest in AccountDataMoving mode
Failed to add list using template because account does not support templates. {accountChangeItem.objectID: %{public}@}
Template has no name {templateID: %{public}@}
Failed to add list using public template because account does not support templates. {accountChangeItem.objectID: %{public}@}
Public template has no name {publicTemplateObjectID: %{public}@}
rem_log_fault_if(![[reminderObjectID entityName] isEqualToString:[REMTemplate cdEntityNameForSavedReminder]]) -- Failed to add new reminder to a list, which represents a template, because reminderObjectID.entityName was not REMCDSavedReminder {reminderObjectID: %@}
rem_log_fault_if(![[reminderObjectID entityName] isEqualToString:[REMReminder cdEntityName]]) -- Failed to add new reminder to a list, which does not represents a template, because reminderObjectID.entityName was not REMCDReminder {reminderObjectID: %@}
rem_log_fault_if(![[reminderObjectID entityName] isEqualToString:[REMTemplate cdEntityNameForSavedReminder]]) -- Failed to add new reminder to parent saved reminder in a template because reminderObjectID.entityName was not REMCDSavedReminder {reminderObjectID: %@}
rem_log_fault_if(![[reminderObjectID entityName] isEqualToString:[REMReminder cdEntityName]]) -- Failed to add new reminder to parent reminder in a list because reminderObjectID.entityName was not REMCDReminder {reminderObjectID: %@}
resolutionTokenMap should never be undefined
Save Request has no changed keys. Opted to return early as no-op. {author: %{public}@, saveIsNoopIfNoChangedKeys: %d}
LOOKATME: Save Request has no changed keys. Save will continue. Revisit if caller should avoid such saves. {author: %{public}@}
os_transaction INIT {name: com.apple.reminderkit.REMSaveRequest}
REMSaveRequest save async
os_transaction RELEASE {name: com.apple.reminderkit.REMSaveRequest}
REMSaveRequest save sync
notifyChangeDelegateForSaveSuccess: SHOULD_NOTIFY {name: com.apple.reminderkit.REMSaveRequest}
RecurrenceClone: Started performRecurrenceClone
RecurrenceClone: Error fetching parentsOfRecurrentSubtasks {error: %@}
RecurrenceClone: Performing check for isCompleted and has recurrenceRules {reminderID: %{public}@};
RecurrenceClone: Advancing forward alarm of reminder with new date trigger {reminderID: %{public}@, oldDateTrigger: %{public}@, newDateTrigger: %{public}@, defaultTimeZone: %{public}@}, systemTimeZone: %{public}@, localTimeZone: %{public}@};
RecurrenceClone: Unable to advance forward date alarm for reminder with dueDate missing timezone {reminderID: %{public}@, dueDate: %{public}@}
RecurrenceClone: Adding new date alarm of reminder with dueDate {reminderID: %{public}@, dueDate: %{public}@}; failed to advance forward any previous date alarms
RecurrenceClone: Fixing dueDate drift to match displayDate {reminderID: %{public}@, dueDate: %{public}@, displayDate: %{public}@};
RecurrenceClone: New recurrence rules of reminder {reminderID: %{public}@, recurrenceRuleID: %{public}@, recurrenceRule: %{public}@};
RecurrenceClone: Keep old recurrence rule of reminder {reminderID: %{public}@, recurrenceRuleID: %{public}@, recurrenceRule: %{public}@};
RecurrenceClone: Unable to clone recurrent reminder with dueDateAdvanceAmount < 0 {reminderID: %{public}@, dueDateAdvanceAmount: %f}
RecurrenceClone: Skipping performRecurrentClone to advance forward date alarm for reminder, didn't meet conditions for isCompleted and hasRecurrenceRules {reminderID: %{public}@, isCompleted:%{public}i, recurrenceRuleID: %{public}@, recurrenceRule: %{public}@, ruleCount: %{public}@};
_trackAccountCapabilities {SaveRequest: %@ accountCapabilities: %@ objectID: %@
_trackedAccountCapabilitiesForObjectID {SaveRequest: %@ objectID: %@
Don't have account capabilities for {objectID: %@}
Failed to create REMObjectID {url: %@}
REMObjectID: nil value passed to non-nil parameter. Something must have gone wrong. {uuid: %@, entityName: %@}
Failed to serialize provided reminderIDsMergeableOrdering. Using emptyArray {error: %@}
Serialized input reminderIDsMergeableOrdering into data when init REMListStorage. {objectID: %@}
rem_log_fault_if(_reminderIDsMergeableOrdering == nil && _reminderIDsMergeableOrderingData == nil) -- Attempted to decode REMListStorage with both _reminderIDsMergeableOrdering and _reminderIDsMergeableOrderingData missing {objectID: %{public}@, name: %{sensitive}@}
Attempted to decode REMListStorage missing objectID, name, reminderIDs {objectID: %{public}@, name: %{sensitive}@}
rem_log_fault_if(self.reminderIDsMergeableOrderingData == nil) -- Attempted to encode REMListStorage with both _reminderIDsMergeableOrdering and _reminderIDsMergeableOrderingData missing {%{public}@}
You are about to trigger decoding the reminderIDsMergeableordering. This is probably not what you want for performance to trigger it from -isEqual:, unless you are running Tests then it's fine {class: %{public}@, self-idsOrdering: %@, other-idsOrdering: %@}
Nil reminderIDsMergeableOrderingData when reading reminderIDsMergeableOrdering from list storage. Initialize an empty set {objectID: %{public}@}
REMListStorage reminderIDsMergeableOrdering deserialized {objectID: %{public}@, self: %p, orderedSet.count: %@}
Failed to read reminderIDsMergeableOrdering from data. Returning empty set {error: %@}
Nil resolutionTokenMapData when reading resolutionTokenMap from list storage. Initialize an empty map {list: %@}
Failed to serialize uuidStrings {error: %@, uuidStrings: %@}
Missing reminderIDsMergeableOrderingData. Returning nil {list: %@}
Failed to create uuid from string. Skipping objectID from list {uuidString: %@}
unexpected class for deserialized reminderIDsMergeableOrdering. Returning nil {class: %@}
Failed to deserialize reminderIDsMergeableOrdering data. Returning nil {error: %@, list: %@}
Unknown REMListSharingStatus %ld
Unknown REMReminderPredicateDescriptorType %ld
Unknown REMReminderPredicateDescriptorTextMatching %ld
rem_log_fault_if(self.storage.reminderIDsMergeableOrdering == nil) -- list.store.reminderIDsMergeableOrdering should not be nil {objectID: %{public}@}
rem_log_fault_if(self.account == nil) -- REMList.account is nil for -shouldUseExternalIdentifierAsDeletionKey {listID: %{public}@}
hack_overrideReminderIDsOrderingWithOrderedObjectIDs: reminderIDsMergeableOrdering set {ids.count: %@}
rem_log_fault_if(![document isKindOfClass:[CRTTCompatibleDocument class]]) -- Unexpected class for deserialized document for REMCRReminderIDList {document: %@}
An unexpected list is passed to the undo block which does not match the originating list. Passed in: %@
rem_log_fault_if(![self.replicaIDSource.crdtID isEqualToString:anotherDocument.replicaIDSource.crdtID]) -- Documents with different CRDT IDs cannot be merged.
Failed to deserialize mergeable string document {objectID: %@, key: %@}: %@
NSFileManager failed to return our group container, falling back to bundle proxy
Failed to get group container URL for "%@"
%@ group container URL is not reachable. URL=%@
Error creating %@ group container: %@
Group container URL: %@
rem_log_fault_if(!accountChangeItem.capabilities.supportsCustomSmartLists) -- Attempt to create REMSmartListChangeItem into account not supporting CSL {account: %{public}@}
Action is only applicable to CSL {action: %{public}@, smartList: %{public}@}
'- [REMSmartListChangeItem setIsPinned:]' should not be called because account does not support pinned lists {objectID: %@}
rem_log_fault_if(fetchResult.accountIDs.count > 1) -- Unexpectedly fetched more than 1 primary active cloudkit account REMObjectID {count: %@}
rem_log_fault_if(accounts.count > 1) -- Unexpectedly fetched more than 1 primary active cloudkit account {count: %@}
REMAccountsDataView: Requested to fetch non-existent account {objectID: %{public}@}
REMAccountsDataView: Requested to fetch non-existent account {externalIdentifier: %{public}@}
Request results with account without externalIdentifier {objectID: %@}
REMAccountsDataView -fetchAccountsWithExternalIdentifiers: More than 1 account found for the given external identifier {extID: %@, acctObjID1: %@, acctObjID2: %@}.
REMAccountsDataView -fetchAccountsWithExternalIdentifiers: fetched more accounts than the number of external identifiers {expected: %@, actual: %@}.
Unknown REMAccountsDataViewInvocation_fetchAll_purpose %ld
Tried to initialize a nested group {listChangeItem: %@}
trackedAccountCapabilities is unexpectedly nil when getting listChangeItem.accountCapabilities {objectID: %{public}@}
Trying to optimistically insert reminderID to the ordering of a REMListChangeItem for a REMReminderChangeItem tracked by the same REMSaveRequest {saveRequest: %@}
objectID of reminderChangeItem does not exist in its listChangeItem.reminderIDsMergeableOrdering {objectID: %@}
Unexpected index of objectID in reminderIDsMergeableOrdering {index: %ld}
Cannot move reminders across accounts {original: %@, accountID: %@, expectedAccountID: %@}
Cannot move reminder across lists for account {original: %@, accountID: %@}
Cannot move reminder across shared lists for account {original: %@, accountID: %@}
Tried to add a new subtask with a parent reminder but could not find the parent reminder in the list's reminder IDs ordering {listID: %@, reminderID: %@, parentReminderID: %@}.
Tried to remove reminder not present in ordering list {objectID: %@, ordering: %@}
rem_log_fault_if(accountChangeItem == nil) -- accountChangeItem is nil. Unable to update account when setting daDisplayOrder.
rem_log_fault_if(accountChangeItem == nil) -- accountChangeItem is nil. Unable to update account when setting daIsNotificationsCollection.
'- [REMListChangeItem setIsPinned:]' should not be called because account does not support pinned lists {objectID: %@}
rem_log_fault_if(reminderChangeItem.listID == nil || ![reminderChangeItem.listID isEqual:self.objectID]) -- reminderChangeItem must have been assigned to this list change item at this point
Failed to find the insert after index of the given sibling reminder -- Appending to the end {objectID: %@}.
REMListChangeItem updated storage.reminderIDsMergeableOrdering {objectID: %@, saveReq: %@, ordering.count: %@}
Nested group is not supported {orderingNodeObjectID: %{public}@, parentListID: %{public}@}
Adding calDAVNotification {listChangeItem: %@, calDAVNotification: %@}
Removing calDAVNotification {listChangeItem: %@, calDAVNotification: %@}
Attempted to remove a calDAVNotification object that does not belong to this list {listChangeItem: %@, calDAVNotification: %@}
Removing all calDAVNotifications {listChangeItem: %@}
Updating calDAVNotification {listChangeItem: %@, calDAVNotification: %@}
Attempted to update a calDAVNotification object that does not belong to this list {listChangeItem: %@, calDAVNotification: %@}
Adding sharee {listChangeItem: %@, sharee: %@}
Removing sharee {listChangeItem: %@, recurrenceRule: %@}
Removing all sharee {listChangeItem: %@}
ListChangeItem (AccountDataMover): Copying from a source list which is a group, the case is not supported for now {sourceID: %@}.
REMTemplatesDataView: Requested to fetch non-existent template {objectID: %{public}@}
Nil resolutionTokenMapData when reading resolutionTokenMap from template storage. Initialize an empty map {template: %@}
Couldn't create ICSComponents for reminder %@
Failed to parse reminder.importedICSData to an ICS document {error: %@}.
Failed to obtain an NSTimeZone from reminder.timeZone when exporting due date components to ICS {timeZoneString: %@, reminderID: %@}.
Couldn't update the calendar item components of reminder.
rem_log_fault_if(REMIsInvalidICSAlarmDateComponents(remAlarmDateTrigger.dateComponents)) -- ReminderKit does not create nor import invalid alarm trigger date in alarms.
Unexpected type of REMAlarmTrigger (%@), unable to export to ICSAlarm.
AlarmUID was not set, generating one when exporting to ICS {remObjectID: %@}.
UpdateICSStructuredLocationFromREMStructuredLocation dropping mapkit handle because it exceeds the max length restriction on many servers.
Couldn't create an ICSRecurrence from REMRecurrenceRule %@ {reminderID: %@}
Setting ICS recurrence until date: untilDate=%@ remEndDate=%@)
Setting ICS byday days array: %@ %@
Encountered an unknown calendar frequency: %@
Encountered an unknown REMWeekday: %@
Found internal inconsistency between reminder.storage.timeZone vs reminder.storage.dueDateComponents.timeZone {dueDateComponents.timeZone: %@, storage.timeZone: %@}.
Found internal inconsistency between reminder.storage.allDay vs reminder.storage.dueDateComponents {dueDateComponents: %@}.
rem_log_fault_if(self.account == nil) -- REMReminder.account is nil for -shouldUseExternalIdentifierAsDeletionKey {reminderID: %{public}@}
REMTipKit: Failed to fetch lists count
REMTipKit: Failed to fetch lists with custom badge count
REMTipKit: Failed to fetch uncompleted reminders count
REMTipKit: Failed to fetch completed reminders count
REMTipKit: Failed to fetch completed reminders in list count
REMTipKit: Failed to fetch custom smart lists count
REMTipKit: Failed to fetch hashtags count
Error when archiving NSUserActivity. {userActivity: %@}
Error when archiving Siri Intent. {siriIntent: %@, error: %@}
Failed to serialize user activity {error: %@}
Error decoding REMUserActivity {error: %@}
Error encoding REMUserActivity
Timed out serializing user activity.
Error when unarchiving Siri Intent. {error: %@}
Unknown REMUserActivityType %ld
Unknown REMShareeStatus %ld
Unknown REMShareeAccessLevel %ld
Comparing two undefined resolution token is unexpected and should never happen {key: %{public}@, self.map.allKeys: %@, other.map.allKeys: %@}
Error encoding resolution token map {error: %@}
Error decoding resolution token map {error: %@}
Unexpected class to decode data to REMResolutionTokenMap. Returning nil {class: %@}
Failed to decode data to REMResolutionTokenMap. Returning nil {error: %@}
REMListsDataView: Requested to fetch non-existent list {objectID: %{public}@}
REMListsDataView: Requested to fetch non-existent list {externalIdentifier: %{public}@}
REMListsDataView: Requested to fetch non-existent lists in account with {externalIdentifier: %{public}@, account.remObjectID: %{public}@}
REMListsDataView: Requested to fetch list for non-existent template {templateobjectID: %{public}@}
rem_eligibleForAutoCloudKitMigration: {identifier: %{public}@, aa_isRemindersAutoMigratableToCK: %d, forceEligibleForAutoCloudKitMigration: %d}
rem_eligibleForAutoCloudKitMigration: Not an AppleAccount {identifier: %{public}@}
rem_isEligibleForCloudKitReminders: AAAccount is .basic but forceBasicAAAccountEligibleForCloudKitReminders is turned on, returning YES {identifier: %{public}@}
TTMergeableString document set to non-TT-compatible document.
TTMergeableString initialized with non-TT-compatible document.
rem_log_fault_if(self.document.sharedTopotextTimestamp != self.timestamp) -- Timestamp should be the same the as one in document.
Setting value for an existing key has no effect in a CRDictionary.
inflate failed returned %d
inflateEnd failed
Text clock is too low.
Style clock is too low.
Dumping merge: %p %@ %@ %@
Failed to merge strings: %@
Failed to merge strings.
No object at index %{public}lu
Cannot merge with object of type %{public}@.
TTMergeableStringSelection protobuf corrupt.
TTVersionedDocument is wrong versionedDocumentSerializationVersion %d != %d.
TTVersionedDocument gzipped protobuf corrupt.
Loading old version %d < %d
Loading current version %d
Loading future version %d > %d where min-supported %d
Should not attempt to load invalid version.
TTVersionedDocument did not load any compatible version.
Saving versioned document %d with %d future versions.
TTVectorMultiTimestamp protobuf corrupt.
TTVectorMultiTimestamp clock requires uuids.
TTVectorMultiTimestamp requires the same number of clocks as capacity %d != %ld.
TTParagraphStyle protobuf corrupt.
TTMergeableAttributedString cannot load attributes.
TTMergeableAttributedString attribute length is not equal to string length.
TTMergeableAttributedString cannot load attachment without identifier/info.
Incorrect number of color components for foreground color. Expected %d and got %d
Saving hashtag without identifier!
Merging should not modify local replica clock: %ld => %ld
Version clock should equal cached replica clock: %ld => %ld
rem_log_fault_if(![self isEqual:other]) -- Cannot merge NSString with different value.
TTMergeableString protobuf corrupt.
Corrupt mergeable string, bad string data.
Corrupt mergeable string, substring missing component.
Corrupt mergeable string, uuid index > number of uuids - loading empty string.
Corrupt mergeable string, substring max > string max.
Corrupt mergeable string, child substring index > number of substrings.
Corrupt mergeable string, length of substrings != attributedString length.
Corrupt mergeable string, zeroed UUID timestamp.
Inserting element at invalid index %lu
Moving element at invalid index %lu
CRTombstoneOrderedSet cannot merge with object of type %{public}@.
 l
REMDisplayNameUtils
REMRecurrenceDayOfWeek
NSCopying
NSSecureCoding
NSCoding
REMListSortDescriptor
REMAuxiliaryReminderChangeDeleteInfo
REMAuxiliaryReminderChangeInfo
REMAuxiliaryReminderChangeMoveInfo
REMClockElementList
REMReplicaEntry
REMReplicaManager
REMReplicaManagerSerializedData
_REMDefaultReplicaManagerProvider
REMReplicaManagerProviding
NSObject
REMSaveRequestImporting
Importing
REMBundleLookupObject
REMXPCIndexingPerformer
REMXPCIndexingPerformerInterface
REMLog
REMSignpost
REMLogStore
REMChangeError
REMReminderChangeItem
REMConflictResolving
REMSaveRequestTrackedValue
REMExternalSyncMetadataWritableProviding
REMSupportedVersionProviding
REMSupportedVersionUpdating
SiriFoundInApps
REMReminderSubtaskContextChangeItem
REMReminderAttachmentContextChangeItem
REMReminderFlaggedContextChangeItem
REMReminderAssignmentContextChangeItem
REMReminderHashtagContextChangeItem
REMTemplateContentAttributes
REMTTHashtag
REMStore
CalDAVSharing
ChangeTrackingSupport
REMChangeTrackingProvider
IndentingUnsupportedSubtasks
ChangeTrackingProvider_IntegrationTestsOnlyAPIsSupport
iMessageInteractionSPI
TipKit
EventKitBridging
SiriSearch
CalendarDataAccess
EventKitCompatibility
REMAssignment_ChangeTrackingInternalSupport
REMHashtag_ChangeTrackingInternalSupport
UserActivity
AccountManagement_PrivateSPIs
AccountManagement_Internal
Templates
Sharing
_REMDACalDAVSyncReplicaManagerProvider
ReplicaManagerProviders
ClientConnections
REMClientConnectionsInteractable
PhantomObjectRepairing
Debugging
UnitTest
REMStoreContainerToken
REMStoreSwiftInvocation
REMStoreSwiftInvocationResult
ReminderKitAdditions
REMAlarmTrigger
REMObjectIDProviding
REMNullableObjectIDProviding
REMAlarmTimeIntervalTrigger
REMAlarmDateTrigger
REMAlarmLocationTrigger
REMAlarmVehicleTrigger
REMAlarmContactTrigger
REMCRMergeableOrderedSet
REMMutableCRMergeableOrderedSet
REMReplicaIDHelperOwner
CRUndoDelegate
REMAccountStorage
REMObjectStorageSupportedVersionProviding
_REMSupportedVersionAssignableEffectiveVersion
REMRecurrenceRuleFormatter
REMAuxiliaryChangeInfoType
REMAuxiliaryChangeInfoObject
REMAuxiliaryChangeInfoFetchResult
REMChangeTrackingInternalAccess
REMListFetchExecutor
REMEnableObjectiveCpp
REMSaveRequestTrackedValueContainer
ReplicaClock
REMReplicaClockProviding
REMChangeTrackingState
reminddIntegrationTests_additions
REMChangedKeysObserver
Hashtags
REMTTHashtagHosting
REMCRMergeableStringDocument_Hashtags
REMReplicaIDSource
REMXPCSyncInterfacePerformer
REMXPCSyncInterfacePerformerInterface
REMAlarm
REMReminderStorage
REMChangeToken
_REMChangeUniversalToken
REMAccountChangeItem
REMPersonIDProviding
REMAccountGroupContextChangeItem
REMAccountPinnedListsContextChangeItem
REMAccountTemplatesContextChangeItem
REMListFetchMetadata
REMListPredicateDescriptor
REMReminderFetchExecutor
REMReminderFetchMetadata
REMReminderFetchMetadataDueDateCount
REMSharedEntitySyncActivity
REMDisplayDate
REMSmartList
REMSmartListCustomContext
REMChangeTracking
REMAuxiliaryChangeInfoAdditions
_REMChangeTrackingClientID
REMChangeTrackingClientIdentifying
REMCloudContainer
REMTemplateChangeItem
REMHashtagLabel
REMCalDAVNotification
REMExternalSyncMetadataProviding
REMMutableCalDAVNotification
REMTTStyle
REMCRMergeableStringDocument_Styling
REMXPCChangeTrackingPerformer
REMXPCChangeTrackingPerformerInterface
Snooze
REMAttachment
REMFileAttachment
REMImageAttachment
REMURLAttachment
REMMigrationResult
_REMChangedObjectIDStorage
REMChangedObjectIdentifying
_REMNSPersistentHistoryChangeStorage
REMNSPersistentHistoryChangeTombstone
REMNSPersistentHistoryChange
HexStringAdditions
REMChangeTransaction
REMFetchResultToken
REMChangeSet
REMReminderSortDescriptor
REMChangeTombstone
REMChangeObject
REMChangeCoalesceable
REMRecurrenceEnd
REMAccountCapabilities
CRDT_REMAdditions_Subset
NSXPCProxyCreating
REMSuggestedAttributesPerformer
REMRemindersDataView
REMRemindersDataViewInvocation_fetchByParentReminderID
REMRemindersDataViewInvocation_fetchByListID
REMRemindersDataViewInvocation_fetchByObjectID
REMRemindersDataViewInvocation_fetchByPredicateDescriptor
REMRemindersDataViewInvocation_fetchByParentReminderIDs
REMRemindersDataViewInvocation_fetchReminderIDsByParentReminderID
REMRemindersDataViewInvocation_fetchByExternalIdentifier
REMRemindersDataViewInvocation_fetchByDACalendarItemUniqueIdentifier
REMRemindersDataViewInvocation_fetchRemindersCountByListID
REMRemindersDataViewInvocation_fetchRemindersCountByParentReminderID
REMRemindersDataViewInvocationResult
REMAssignmentsDataViewInvocation_fetchByObjectID
REMAssignmentsDataViewInvocationResult
REMHashtagsDataViewInvocation_fetchByObjectID
REMHashtagsDataViewInvocationResult
REMTemplatePublicLinkConfiguration
REMSmartListsDataView
REMSmartListsDataViewInvocation_fetchSmartList
REMSmartListsDataViewInvocation_fetchAllCustomSmartLists
REMSmartListsDataViewInvocation_fetchCustomSmartListsInAccount
REMSmartListsDataViewInvocation_fetchCustomSmartListsInGroup
REMSmartListsDataViewInvocationResult
REMDAChangeTrackingHelper
UnitTests
REMDAChangeTrackingHelper_Additions
REMDAChangeTrackableFetchableModel
REMDAChangeTrackableModel
REMDAChangedModelObjectResult
REMDAChangedIdentifierResult
REMDAChangeTrackingHelper_PrivateAdditions
_REMDAChangeTrackableModel
REMDAShareeTombstone
REMDAAssignmentTombstone
REMDAHashtagTombstone
REMEventKitBridgingDataView
REMEventKitBridgingDataViewInvocation_fetchLists
REMEventKitBridgingDataViewInvocation_fetchReminders
REMEventKitBridgingDataViewInvocation_fetchIncompleteRemindersWithDueDate
REMEventKitBridgingDataViewInvocation_fetchCompletedRemindersWithCompletionDate
REMError
REMAssignment
CDIngestorExtensions
REMResolutionToken
REMRadarUtilities
_REMInProgressSaveRequestsContainer
REMDatabaseMigrationAccountInfo
REMDatabaseMigrationContext
REMFetchResult
REMAccount
REMAccountGroupContext
REMAccountTemplatesContext
REMAccountTypeHost
REMReplicaIDHelper
REMReplicaManagerClient
REMHumanReadableIdentifier
REMDistributedEvaluationCollectionOptions
REMReminderFetchOptions
REMTemplateConfiguration
REMTTParagraphStyle
REMXPCDaemonController
REMDaemonController
REMXPCDaemonControllerPerformerResolver
REMXPCDaemonControllerPerformerResolver_store
REMXPCDaemonControllerPerformerResolver_debug
REMXPCDaemonControllerPerformerResolver_changeTracking
REMXPCDaemonControllerPerformerResolver_sync
REMXPCDaemonControllerPerformerResolver_indexing
REMXPCDaemonControllerExportedObject
REMXPCClient
REMStructuredLocation
REMFetchMetadata
REMCRMutableAttributedString
REMColor
REMUserDefaults
REMDaemonUserDefaults
REMUserDefaultsObserver
REMUserDefaultsObserveToken
REMTemplate
REMXPCStorePerformer
REMXPCStorePerformerInterface
REMAppleAccountUtilities
_REMNSPersistentHistoryTransactionStorage
REMNSPersistentHistoryTransaction
REMOrderedIdentifierMap
REMTemplatePublicLink
REMHashtag
REMHashtagProtocol
REMSharedToMeReminderPlaceholder
CRDT_Additions
REMCRMergeableDataType
CRDataType
CREquatable
CRCoding
REMRecurrenceRule
REMXPCDaemon
REMXPCDaemonInterface
REMXPCClientInterface
REMManualOrdering
REMNSPersistentHistoryToken
REMSystemUtilities
REMXPCDebugPerformer
REMXPCDebugPerformerInterface
REMXPCSuggestedAttributesPerformer
REMXPCSuggestedAttributesPerformerInterface
REMContactRepresentation
Base64
REMDataAccessBehaviorManager
REMSmartListStorage
REMAccountSortDescriptor
REMSaveRequest
AddAccount
AddAccount_BackwardCompatibility
AddAccount_TestingSupport
AddAccount_Internal
SmartList
REMObjectID
REMFetchRequest
_REMFetchExecutor
REMListStorage
REMReminderPredicateDescriptor
REMXPCStorageClasses
REMSiriSearchLimitedDataView
REMSiriSearchLimitedDataViewInvocation_fetchReminders
REMList
REMListAppearanceContext
REMListSublistContext
REMListCalDAVNotificationContext
REMListShareeContext
REMSnoozeTimeUtils
REMCRReminderIDList
REMCRMergeableStringDocument
REMMutableCRMergeableStringDocument
DataConversion
REMDispatchQueue
REMPaths
REMDisplayDateUtils
REMSmartListChangeItem
REMMergeableOrderingNode
REMSmartListCustomContextChangeItem
REMAccountsDataView
REMAccountsDataViewInvocationREMObjectIDOnlyResult
REMAccountsDataViewInvocationResult
REMAccountsDataViewInvocation_fetchAll
REMAccountsDataViewInvocation_fetchPrimaryActiveCloudKitAccount
REMAccountsDataViewInvocation_fetchActiveCloudKitAccountObjectIDs
REMAccountsDataViewInvocation_fetchByObjectID
REMAccountsDataViewInvocation_fetchByExternalIdentifier
REMStoreInvocationValueStorage
REMStoreInvocation
REMStoreInvocationResult
REMListBadge
SecureRandom
REMListChangeItem
REMListAppearanceContextChangeItem
REMListSublistContextChangeItem
REMListCalDAVNotificationContextChangeItem
REMListShareeContextChangeItem
AccountDataMoving
UnitTestsExtensions
REMTemplatesDataView
REMTemplatesDataViewInvocation_fetchTemplatesInAccount
REMTemplatesDataViewInvocation_fetchByObjectIDs
REMTemplatesDataViewInvocationResult
REMTemplateStorage
REMExporting
ICSExport
REMReminder
REMReminderSubtaskContext
REMReminderAttachmentContext
REMReminderFlaggedContext
REMReminderAssignmentContext
REMReminderHashtagContext
REMCRUndo
REMMutableCRUndo
REMTipKitDataView
REMTipKitDataViewInvocation_fetchListsCount
REMTipKitDataViewInvocation_fetchListsWithCustomBadgeCount
REMTipKitDataViewInvocation_fetchUncompletedRemindersCount
REMTipKitDataViewInvocation_fetchCompletedRemindersCount
REMTipKitDataViewInvocation_fetchCompletedRemindersCountInList
REMTipKitDataViewInvocation_fetchCustomSmartListsCount
REMTipKitDataViewInvocation_fetchHashtagsCount
REMUserActivity
REMSharee
REMShareeNameCleanup
REMResolutionTokenMap
REMExternalSyncMetadataUtils
REMListsDataView
REMListsDataViewInvocation_fetchListsInAccount
REMListsDataViewInvocation_fetchListsInGroup
REMListsDataViewInvocation_fetchByObjectIDs
REMListsDataViewInvocation_fetchDefaultList
REMListsDataViewInvocation_fetchDefaultListRequiringCloudKit
REMListsDataViewInvocation_fetchUserSelectableDefaultLists
REMListsDataViewInvocation_dataAccessFetchListsInAccount
REMListsDataViewInvocation_dataAccessFetchByObjectID
REMListsDataViewInvocation_changeTrackingFetchByObjectIDIncludingConcealed
REMListsDataViewInvocation_dataAccessFetchByExternalIdentifier
REMListsDataViewInvocation_userActivityFetchByExternalIdentifier
REMListsDataViewInvocation_debugFetchPhantomLists
REMListsDataViewInvocationResult
REMListsDataViewInvocation_fetchByTemplateObjectID
TTREMHashtag
TTModelAttributeComparable
CRCoderArchiver
CRDictionaryElement
CRDictionary
NSFastEnumeration
TTVectorTimestampElement
TTVectorTimestamp
TTVectorMultiTimestamp
Gzip
TTMergeableString
TTArray
TTMergeableStringDelegate
TTMergeableStringSelection
TTMergeableStringIDTracker
TTVersionedDocument
TTVectorTimestampPersistenceAdditions
TTParagraphStylePersistenceAdditions
TTMergeableStringUndoGroup
TTMergeableStringUndoCommand
CRTTCompatibleDocument
TTAttributedStringPersistenceAdditions
CRArray
CRCoderUnarchiverCompletionHandler
CRCoderUnarchiver
CRSet
CRRegisterLatest
CRRegisterMultiValue
CRRegisterMultiValueLeast
RemindersAdditions
TTParagraphStyle
NSMutableCopying
TTMutableParagraphStyle
CRRegisterGreatest
CRRegisterLeast
TTMergeableStringUndoAttributeCommand
PersistenceAdditions
TTMergeableAttributedString
CRObject
CRIdentifiable
TTFont
CRDocument
TTMergeableStringVersionedDocument
CRRegister
CRReplica
TTMergeableStringPersistenceAdditions
CRTimestamp
CRVectorTimestampElement
CRVectorTimestamp
CRCoder
CppConvenience
TTMergeableUndoString
CRTombstoneOrderedSet
TTMergeableStringUndoEditCommand
TTCRVectorTimestamp
TTCRVectorMultiTimestamp
ICProtobufUtilities
CRConstant
NSUUIDAdditions
localizedStringForKey:value:table:
predicateWithBlock:
unarchivedObjectOfClass:fromData:error:
encodedData
localizedStringFromNumber:numberStyle:
initWithAttributedString:
calendarIdentifier
isLikePhoneNumber:
notifyEventFromSaveRequest:
calendarWithIdentifier:
localizedStringFromPersonNameComponents:style:options:
dataWithBytesNoCopy:length:freeWhenDone:
decodeIntForKey:
localizedStringWithFormat:
callStackSymbols
decodeIntegerForKey:
dataWithData:
addUndoCommandsForList:block:
initWithBytes:length:encoding:
setClasses:forSelector:argumentIndex:ofReply:
decodeObjectOfClass:forKey:
callbackQueue
processInfo
setMiddleName:
decodeObjectOfClasses:forKey:
host
initWithString:attributes:
processName
null
loggingDescription
setFormatOptions:
initWithCalendar:
propertyListWithData:options:format:error:
entityNamesToIncludeFromTracking
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
hour
setMinute:
initWithCalendarIdentifier:
setFormatterBehavior:
number
defaultCenter
unsignedLongValue
setFrequency:
initWithUTF8String:
numberWithBool:
allKeys
enumerateAttribute:inRange:options:usingBlock:
defaultManager
enumerateAttributesInRange:options:usingBlock:
numberWithDouble:
setGivenName:
resourceValuesForKeys:error:
unionSet:
setMonth:
numberWithInteger:
allValues
setSourceApplicationBundleIdentifier:
setMonthsOfTheYear:
enumerateKeysAndObjectsUsingBlock:
defaultTimeZone
result
defaultCStringEncoding
allocWithZone:
lowercaseString
numberWithLong:
numberWithUnsignedInt:
lowercaseStringWithLocale:
numberWithUnsignedInteger:
setComponents:
isProvisionedForDataclass:
created
mainBundle
setStatus:
setComponents:options:
defaultWorkspace
numberWithUnsignedLong:
setHost:
initWithContainerID:
numberWithUnsignedLongLong:
makeUID
initWithURL:readonly:
initWithObjects:
setHour:
intersectsIndexesInRange:
initWithContainerID:options:
errorWithDomain:code:userInfo:
setNamePrefix:
resume
currentCalendar
raise:format:
initWithContainerIdentifier:environment:
initWithUUIDBytes:
setNameSuffix:
unsignedLongLongValue
setNanosecond:
rangeOfString:
initWithOptions:capacity:
until
reverseObjectEnumerator
appendFormat:
valueWithNonretainedObject:
initWithUUIDString:
objectEnumerator
rangeOfString:options:
setNickname:
appendString:
setCount:
setSummary:
rangeOfUnit:inUnit:forDate:
rangeValue
rrule
setCreated:
currentLocale
isSubsetOfSet:
saveAccount:withCompletionHandler:
currentPersistentHistoryTokenFromStores:
exceptionWithName:reason:userInfo:
weakObjectsHashTable
archivedDataWithRootObject:requiringSecureCoding:error:
aa_accountClass
initWithValue:type:
aa_altDSID
characterAtIndex:
reason
arrayByAddingObject:
initWithWeekday:number:
aa_appleAccounts
executeRequest:error:
isSubclassOfClass:
arrayByAddingObjectsFromArray:
checkResourceIsReachableAndReturnError:
writeToFile:atomically:
initWithWeeks:days:hours:minutes:seconds:
arrayWithArray:
aa_isAccountClass:
methodForSelector:
dictionaryForKey:
arrayWithCapacity:
dictionaryWithCapacity:
aa_isManagedAppleID
initWithData:encoding:
initWithYear:month:day:
initWithData:options:error:
aa_personID
exportedObject
sortDescriptorWithKey:ascending:
arrayWithObject:
dictionaryWithDictionary:
openURL:configuration:completionHandler:
initWithYear:month:day:hour:minute:second:
lastIndex
aa_primaryAppleAccount
arrayWithObjects:
initWithDate:
dictionaryWithObject:forKey:
initWithYear:month:day:hour:minute:second:timeZone:
recurrence_id
sortUsingComparator:
aa_regionInfo
arrayWithObjects:count:
dictionaryWithObjects:forKeys:count:
absoluteString
minusSet:
sortedArrayUsingComparator:
_initWithSuiteName:container:
dictionaryWithObjectsAndKeys:
minute
CalGregorianGMTCalendar
ICSDataWithOptions:
didChangeValueForKey:
sortedArrayUsingDescriptors:
_initWithUserActivityData:
setUid:
failWithError:
sortedArrayUsingSelector:
ICSStringWithOptions:
setParameterValue:forName:
scheme
familyName
enumerateIndexesUsingBlock:
JSONObjectWithData:options:error:
setUntil:
registerDefaults:
second
enumerateIndexesWithOptions:usingBlock:
setObject:atIndexedSubscript:
uppercaseString
standaloneMonthSymbols
systemTimeZone
initWithDictionary:copyItems:
systemTimeZoneForDate:
month
removeAttribute:range:
relatedTo
orderedSetWithArray:
standaloneWeekdaySymbols
orderedSetWithCapacity:
removeCharactersInString:
standardUserDefaults
orderedSetWithOrderedSet:
firstIndex
accountDescription
initWithDomain:code:userInfo:
URLByAppendingPathComponent:
startAccessingSecurityScopedResource
addIndex:
filterUsingPredicate:
addIndexesInRange:
displayAccount
URLByAppendingPathComponent:isDirectory:
setValue:forKey:
cloudKitNetworkActivityDidChange:
URLByAppendingPathExtension:
initWithDuration:
filteredArrayUsingPredicate:
mutableAttributedString:didEdit:range:changeInLength:
startOfDayForDate:
setDateFormat:
setPercentComplete:
URLForDirectory:inDomain:appropriateForURL:create:error:
mutableBytes
userInfo
lastObject
setValue:type:
intValue
code
setDay:
lastPathComponent
attribute:atIndex:effectiveRange:
URLFragmentAllowedCharacterSet
setAccountOverrideInfo:
data
mutableCopy
parameterValueForName:
URLWithString:
setDaysOfTheMonth:
attribute:atIndex:longestEffectiveRange:inRange:
firstObject
setWeekStart:
setAcknowledged:
stopAccessingSecurityScopedResource
interfaceWithProtocol:
accountType
setDaysOfTheWeek:
displayedHostname
setWeeksOfTheYear:
removeItemAtURL:error:
URLsForDirectory:inDomains:
setDaysOfTheYear:
UTF8String
distantFuture
setInterface:forSelector:argumentIndex:ofReply:
accountTypeWithAccountTypeIdentifier:
minusHashTable:
UUID
setWithArray:
distantPast
last_modified
setAction:
dataUsingEncoding:
mutableOrderedSetValueForKey:
UUIDString
hasPrefix:
timeIntervalSinceDate:
setInterruptionHandler:
setWithCapacity:
laterDate:
accountsWithAccountType:
dataWithBytes:length:
setWithObject:
acknowledged
intersectsSet:
appendAttributedString:
timeIntervalSinceNow
setInterval:
rem_accountObjectID
dataWithJSONObject:options:error:
valueForKey:
setDescription:
hashTableWithOptions:
setWithObjects:
timeIntervalSinceReferenceDate
dataWithLength:
removeObjectsForKeys:
setInvalidationHandler:
moveObjectsAtIndexes:toIndex:
domain
setWithSet:
removeObjectsInArray:
formatOptions
dataWithPropertyList:format:options:error:
action
timeZoneWithName:
nanosecond
setWkst:
mutableString
dtstamp
valueWithRange:
pathComponents
setQueryItems:
invokeWithCache:
attributedSubstringFromRange:
setX_apple_activity:
removeObserver:forKeyPath:
percentComplete
removeObserver:forKeyPath:context:
setX_apple_appLinkData:
attributesAtIndex:longestEffectiveRange:inRange:
component:fromDate:
dtstart
indexOfObjectPassingTest:
initWithFrequency:
performBlockAndWait:
componentForKey:
setX_apple_proximity:
dataclassProperties
nextObject
formattedStringValue
freq
componentKeys
setX_apple_sort_order:
numberWithInt:
increaseLengthBy:
dateByAddingTimeInterval:
lengthOfBytesUsingEncoding:
components
setX_apple_structured_location:
setX_calendarserver_access:
setRelatedTo:
stringByAddingPercentEncodingWithAllowedCharacters:
setDtstamp:
shiftIndexesStartingAtIndex:by:
initWithLength:
components:fromDate:
stringByAppendingString:
boolForKey:
linkItemAtURL:toURL:error:
setDtstart:
setX_wr_alarmuid:
dateFromComponents:
componentsJoinedByString:
webpageURL
stringByReplacingOccurrencesOfString:withString:
getCharacters:range:
setDue:
indexSetWithIndex:
initForReadingFromData:error:
componentsSeparatedByString:
dateFromString:
bundleForClass:
setYear:
stringByTrimmingCharactersInSet:
setBool:forKey:
weekStart
weekday
setByAddingObject:
getUUIDBytes:
addAttribute:value:range:
dateWithTimeIntervalSinceNow:
bundleIdentifier
initRequiringSecureCoding:
dateWithTimeIntervalSinceReferenceDate:
stringForKey:
setByAddingObjectsFromArray:
givenName
bundleProxyForIdentifier:
globallyUniqueString
setByday:
stringFromDate:
fetchHistoryTransactionForToken:
whitespaceCharacterSet
isDurationBased
byday
addEntriesFromDictionary:
setEndDate:
setBymonth:
initWithMachServiceName:options:
bymonth
willChangeValueForKey:
isEnabledForDataclass:
setBymonthday:
groupContainerURLs
bymonthday
initWithAccountID:
stringValue
setRemoteObjectInterface:
setBysetpos:
bysetpos
isEqualToArray:
setLast_modified:
persistentStoreCoordinator
stringByAppendingPathComponent:
stringWithFormat:
setByweekno:
bytes
wkst
stringWithCString:encoding:
initWithName:value:
setByyearday:
stringWithString:
setEventEndDate:
isEqualToAttributedString:
byweekno
enabledDataclasses
stringWithUTF8String:
setLength:
setEventStartDate:
byyearday
encodeBool:forKey:
writeToURL:options:error:
isEqualToDate:
containerURLForSecurityApplicationGroupIdentifier:
addObjectsFromArray:
removeIndex:
setEventTimeZone:
x_apple_activity
cStringUsingEncoding:
addObserver:forKeyPath:options:context:
containsValueForKey:
subarrayWithRange:
x_apple_appLinkData
strongToStrongObjectsMapTable
setExportedInterface:
addObserver:selector:name:object:
x_apple_proximity
isEqualToOrderedSet:
encodeInt:forKey:
copy
setExportedObject:
encodeInteger:forKey:
x_apple_sort_order
containsIndexesInRange:
substringFromIndex:
x_apple_structured_location
setRrule:
postNotificationName:object:
substringToIndex:
x_calendarserver_access
initWithString:
setScheme:
substringWithRange:
isEqualToString:
x_wr_alarmuid
setFamilyName:
initWithDouble:
setSecond:
initWithStringValue:
copyOccurrenceDatesWithInitialDate:allDay:rangeStart:rangeEnd:timeZone:limit:
initWithArray:
setCalendar:
shortDebugName
isEqualToTimeZone:
decodeArrayOfObjectsOfClass:forKey:
localTimeZone
setSetPositions:
initWithIndexesInRange:
decodeBoolForKey:
initWithArray:copyItems:
_createUserActivityDataWithOptions:completionHandler:
localizedDescription
year
initWithInteger:
initWithSuiteName:
summary
calendar
displayNameFromListName:isPlaceholder:
displayNameFromAccountName:
init
dayOfWeek:
dayOfWeek:weekNumber:
supportsSecureCoding
copyWithZone:
encodeWithCoder:
initWithCoder:
TB,R
initWithDayOfTheWeek:weekNumber:
iCalendarValueFromDayOfTheWeek:
iCalendarDescription
description
hash
isEqual:
dayOfTheWeek
weekNumber
_dayOfTheWeek
_weekNumber
Tq,R,N,V_dayOfTheWeek
Tq,R,N,V_weekNumber
sortDescriptorSortingByNameAscending:
sortDescriptorSortingByOrderingInAccountAscending:
initWithType:ascending:
type
ascending
_ascending
_type
Tq,R,N,V_type
TB,R,N,V_ascending
cdEntityName
reminderIdentifier
oldListIdentifier
oldExternalIdentifier
T@"NSString",R,N
T@"NSString",R,D,N
list:isCompatibleToList:
compareList:toList:
initWithCRVectorTimestampElements:
initWithTTVectorTimestampElements:
encodeIntoEntryArchive:
initWithEntryArchive:
elements
setElements:
.cxx_destruct
_elements
T@"NSArray",C,N,V_elements
initWithReplicaUUIDIndex:clockElementList:inUse:forClient:
persistenceDescription
hasEqualPersistedPropertiesAs:
replicaUUIDIndex
setReplicaUUIDIndex:
clockElementList
setClockElementList:
inUse
setInUse:
client
setClient:
_inUse
_replicaUUIDIndex
_clockElementList
_client
TI,N,V_replicaUUIDIndex
T@"REMClockElementList",&,N,V_clockElementList
TB,N,V_inUse
T@"<REMReplicaManagerClient>",N,V_client
replicaManagerForAccountID:store:
shouldUseNewInMemoryOnlyReplicaManager
unsavedReplicaManagersForAccountIDs:
replicaManagerWithSerializedData:error:
disablesInMemoryOnlyCheck
setDisablesInMemoryOnlyCheck:
replicaManagerIfLoadedForAccountID:
setReplicaManager:forAccountID:
commonInit
initWithArchive:error:
encodeIntoArchive:
performLocked:
checkoutReplicaUUIDForClient:
l_checkoutReplicaUUIDForClient:
modifyReplicaEntryForClient:block:
updateVersionForClient:
l_updateVersionOfEntry:forClient:
returnReplicaForClient:
l_replicaUUIDsDescription
l_replicaEntriesDescriptionForPersistence:
hasUnsavedChanges
l_serializedDataWithError:
serializedDataCappedAtMaxSize:error:
didSaveVersion:
replicaEntryCount
availabilityOfFirstReplicaForCRDTID:
clockOfFirstReplicaForCRDTID:
hasEqualPersistedEntriesAs:
addRandomReplicaEntriesWithCount:
ivarLock
setIvarLock:
isPersistable
setIsPersistable:
replicaUUIDs
setReplicaUUIDs:
replicaEntries
setReplicaEntries:
currentVersion
setCurrentVersion:
maxLastSavedVersion
setMaxLastSavedVersion:
exceededMaxSerializedSize
setExceededMaxSerializedSize:
_isPersistable
_exceededMaxSerializedSize
_ivarLock
_replicaUUIDs
_replicaEntries
_currentVersion
_maxLastSavedVersion
T{os_unfair_lock_s=I},N,V_ivarLock
TB,N,V_isPersistable
T@"NSMutableOrderedSet",&,N,V_replicaUUIDs
T@"NSMutableDictionary",&,N,V_replicaEntries
TQ,N,V_currentVersion
TQ,N,V_maxLastSavedVersion
TB,N,V_exceededMaxSerializedSize
serializedDataRepresentingDiscardedReplicaManager
initWithManagerData:version:
isRepresentingDiscardedReplicaManager
managerData
version
_managerData
_version
TB,R,N
T@"NSData",R,N,V_managerData
TQ,R,N,V_version
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
replicaManagerForAccountID:
initWithStore:
store
_store
T@"REMStore",R,N,V_store
rem_nonNilSummary
dtend
importRemindersFromICSData:insertIntoListChangeItem:error:
updateReminderChangeItem:fromICSTodo:icsCalendar:isNew:withOptions:
updateReminderChangeItem:fromICSData:isNew:withOptions:error:
updateUIDInReminderChangeItem:fromICSComponent:icsCalendar:
_iCalendarDataFromICSTodoItem:icsCalendar:
_populateReminderChangeItem:withICSTodoItem:icsCalendar:isNew:withOptions:
icsDueOrEndDateWithICSCalendarItem:options:
_populateAlarmsInReminderChangeItem:withICSAlarms:icsCalendar:
_addAlarmsToReminderChangeItem:withICSAlarm:icsCalendar:
_populateRecurrencesInReminderChangeItem:withICSComponent:icsCalendar:
testIndexDummyItemWithCompletion:
reindexAllSearchableItemsWithAcknowledgementHandler:
reindexSearchableItemsWithIdentifiers:acknowledgementHandler:
deleteAllSearchableItemsWithCompletionHandler:
interface
changeTracking
editor
crdt
alarmEngine
timelineEngine
housekeepingingActivityScheduler
extraneousAlarmCleaner
inlineTagAutoConvertEngine
templates
accountPlugin
utility
suggestedAttributes
cloudkit
cloudkitCollaboration
migration
dataAccess
userAction
siriKit
applicationShortcut
notification
search
account
analytics
scripting
T@"NSObject<OS_os_log>",R,N
database
sync
container
stagedLightweightCoreDataMigration
read
write
OVERSIZED
_defaultDescriptionForREMChangeErrorCode:
errorWithREMChangeErrorCode:
errorWithREMChangeErrorCode:debugDescription:
errorWithREMChangeErrorCode:underlyingError:
errorWithREMChangeErrorCode:description:underlyingError:
initialize
resolutionTokenKeyForChangedKeyInREMReminderChangeItemOfREMCDReminder:
resolutionTokenKeyForChangedKeyInREMReminderChangeItemOfREMCDSavedReminder:
resolutionTokenKeyForChangedKey:
changedKeys
resolutionTokenMap
setResolutionTokenMap:
resolutionTokenMapData
setResolutionTokenMapData:
T@"REMResolutionTokenMap",&,N
T@"NSData",&,N
shallowCopyWithSaveRequest:
externalIdentifier
setExternalIdentifier:
externalModificationTag
setExternalModificationTag:
daSyncToken
setDaSyncToken:
daPushKey
setDaPushKey:
T@"NSString",C,N
isUnsupported
minimumSupportedVersion
effectiveMinimumSupportedVersion
Tq,R,N
setMinimumSupportedVersion:
Tq,N
initWithSaveRequest:storage:accountCapabilities:changedKeysObserver:
initWithSaveRequest:storage:accountCapabilities:observeInitialValues:
initWithObjectID:title:insertIntoListChangeItem:
initWithObjectID:title:insertIntoParentReminderSubtaskContextChangeItem:
initWithReminderChangeItem:insertIntoListChangeItem:
initWithReminderChangeItem:insertIntoParentReminderSubtaskContextChangeItem:
accountCapabilities
datesDebugDescriptionInTimeZone:
duplicateForRecurrenceUsingReminderID:
copyInto:
_copyAlarmsInto:
dedupedAndFilteredNonSnoozeAlarms:
listChangeItem
title
titleAsString
_editDocument:replicaIDSource:newString:
setPrimaryLocaleInferredFromLastUsedKeyboard:
primaryLocaleInferredFromLastUsedKeyboard
setTitle:
setTitleAsString:
setCompleted:
notes
notesAsString
setNotes:
setNotesAsString:
setDueDateComponents:
setDueDateComponentsWithAlarmsIfNeeded:
setIcsDisplayOrder:
addRecurrenceRuleWithFrequency:interval:end:
addRecurrenceRuleWithFrequency:interval:daysOfTheWeek:daysOfTheMonth:monthsOfTheYear:weeksOfTheYear:daysOfTheYear:setPositions:end:
addRecurrenceRuleWithFrequency:interval:firstDayOfTheWeek:daysOfTheWeek:daysOfTheMonth:monthsOfTheYear:weeksOfTheYear:daysOfTheYear:setPositions:end:
addRecurrenceRule:
insertRecurrenceRule:beforeRecurrenceRule:
insertRecurrenceRule:afterRecurrenceRule:
removeRecurrenceRule:
removeAllRecurrenceRules
nextRecurrentAdvanceAmountForDateComponents:afterDate:
nextRecurrentDueDateComponentsAfter:
addAlarmWithTrigger:
addAlarm:
addAlarm:updateDisplayDate:
setAlarms:
setAlarms:updateDisplayDate:
removeAlarm:
removeAlarm:updateDisplayDate:
removeAllAlarms
updateDisplayDate
isSubtask
subtaskContext
attachmentContext
flaggedContext
assignmentContext
hashtagContext
removeFromListAllowingUndo
removeFromList
removeFromParentReminderAllowingUndo
updateAccountCapabilities:
removeFromParentReminder
forwardingTargetForSelector:
valueForUndefinedKey:
setValue:forUndefinedKey:
saveRequest
storage
setStorage:
changedKeysObserver
setChangedKeysObserver:
_saveRequest
_storage
_changedKeysObserver
T@"REMChangedKeysObserver",&,N,V_changedKeysObserver
objectID
T@"REMObjectID",&,D,N
listID
attachments
T@"NSArray",&,D,N
recurrenceRules
assignments
T@"NSSet",&,D,N
hashtags
subtaskIDsToUndelete
hashtagIDsToUndelete
titleDocumentData
T@"NSData",&,D,N
notesDocumentData
T@"NSString",&,N
timeZone
allDay
TB,R,D,N
icsDisplayOrder
TQ,D,N
importedICSData
remObjectID
T@"REMObjectID",R,D,N
lastModifiedDate
T@"NSDate",C,D,N
accountID
T@"REMReminderStorage",&,N,V_storage
T@"REMAccountCapabilities",R,D,N
parentReminderID
titleDocument
T@"REMCRMergeableStringDocument",&,D,N
notesDocument
contactHandles
T@"REMContactRepresentation",C,D,N
flagged
Tq,D,N
daCalendarItemUniqueIdentifier
T@"NSString",C,D,N
userActivity
T@"REMUserActivity",C,D,N
siriFoundInAppsData
T@"NSData",C,D,N
siriFoundInAppsUserConfirmation
lastBannerPresentationDate
creationDate
displayDate
T@"REMDisplayDate",R,C,D,N
isOverdue
isRecurrent
legacyNotificationIdentifier
T@"NSString",R,C,D,N
icsUrl
T@"NSURL",C,D,N
T@"REMReminderAssignmentContextChangeItem",R,N
T@"REMReminderHashtagContextChangeItem",R,N
T@"REMSaveRequest",R,N,V_saveRequest
T@"REMListChangeItem",R,N
T@"NSAttributedString",C,N
completed
TB,D,N,GisCompleted
completionDate
priority
startDateComponents
T@"NSDateComponents",C,D,N
dueDateComponents
alarms
T@"NSArray",R,D,N
T@"REMReminderAttachmentContextChangeItem",R,N
T@"REMReminderSubtaskContextChangeItem",R,N
T@"REMReminderFlaggedContextChangeItem",R,N
T@"REMResolutionTokenMap",&,D,N
Tq,R,D,N
confirmForSiriFoundInAppsAppendingToList:
rejectForSiriFoundInApps
initWithReminderChangeItem:
addReminderChangeItem:
insertReminderChangeItem:beforeReminderChangeItem:
insertReminderChangeItem:afterReminderChangeItem:
undeleteSubtaskWithID:usingUndo:
_listChangeItem
reminderChangeItem
setReminderChangeItem:
_reminderChangeItem
T@"REMReminderChangeItem",&,N,V_reminderChangeItem
attachmentsOfClass:
fileAttachments
imageAttachments
urlAttachments
addFileAttachmentWithURL:error:
addFileAttachmentWithData:uti:
addImageAttachmentWithURL:width:height:error:
addImageAttachmentWithData:uti:width:height:
setURLAttachmentWithURL:
addURLAttachmentWithURL:
removeURLAttachments
addAttachment:
insertAttachment:beforeAttachment:
insertAttachment:afterAttachment:
removeAttachment:
removeAllAttachments
removeAllAttachmentsWithClass:
newObjectIDForURLAttachment
newObjectIDForFileAttachment
newObjectIDForImageAttachment
mutableAttachments
setMutableAttachments:
_mutableAttachments
T@"NSMutableArray",&,N,V_mutableAttachments
T@"NSArray",R,N
setFlagged:
currentAssignment
addAssignment:
addAssignmentWithAssignee:originator:status:
addAssignmentWithAssigneeID:originatorID:status:
removeAssignment:
removeAllAssignments
mutableAssignments
setMutableAssignments:
_mutableAssignments
T@"NSMutableSet",&,N,V_mutableAssignments
T@"REMAssignment",R,N
T@"NSSet",R,N
addHashtag:
addHashtagWithType:name:
addHashtagWithType:name:creationDate:
removeHashtag:
removeAllHashtags
undeleteHashtagWithID:
cancelUndeleteHashtagWithID:
mutableHashtags
setMutableHashtags:
_mutableHashtags
T@"NSMutableSet",&,N,V_mutableHashtags
initWithReminderCount:hasDisplayDate:hasHashtags:hasLocationTriggersOrVehicleEventTriggers:hasImageAttachments:
reminderCount
hasDisplayDate
hasHashtags
hasLocationTriggersOrVehicleEventTriggers
hasImageAttachments
_hasDisplayDate
_hasHashtags
_hasLocationTriggersOrVehicleEventTriggers
_hasImageAttachments
_reminderCount
Tq,R,N,V_reminderCount
TB,R,N,V_hasDisplayDate
TB,R,N,V_hasHashtags
TB,R,N,V_hasLocationTriggersOrVehicleEventTriggers
TB,R,N,V_hasImageAttachments
attributeName
attributeFromHashtag:
attributeValue:hasEqualHashtagObjectIdentifierIn:
initWithObjectIdentifier:
objectIdentifier
_objectIdentifier
T@"NSString",R,N,V_objectIdentifier
storeDidChangeNotificationName
createIsolatedStoreContainerWithError:
destroyIsolatedStoreContainerWithToken:error:
siriShouldRouteIntentsToNewRemindersApp
initWithStoreContainerToken:
initUserInteractive:
initWithDaemonController:
initWithDaemonController:storeContainerToken:
storeGeneration
invalidate
nukeDatabase
fetchAccountsWithError:
fetchAccountsIncludingInactive:error:
fetchAccountsForDumpingWithError:
fetchSiriFoundInAppsListWithError:
refreshAccount:
refreshList:
refreshReminder:
optimisticallyMaterializeReminderChangeItem:
fetchPrimaryActiveCloudKitAccountREMObjectIDWithError:
fetchPrimaryActiveCloudKitAccountWithError:
fetchActiveCloudKitAccountObjectIDsWithFetchOption:error:
fetchAccountWithObjectID:error:
fetchAccountsWithObjectIDs:error:
fetchListWithObjectID:error:
fetchListsWithObjectIDs:error:
fetchCustomSmartListWithObjectID:error:
fetchCustomSmartListsWithError:
fetchRemindersWithObjectIDs:error:
fetchRemindersMatchingPredicateDescriptor:sortDescriptors:options:error:
fetchRemindersWithParentReminderIDs:error:
fetchReminderWithObjectID:error:
fetchReplicaManagerForAccountID:error:
fetchReplicaManagersForAccountID:bundleID:error:
saveSaveRequest:accountChangeItems:listChangeItems:smartListChangeItems:templateChangeItems:reminderChangeItems:author:replicaManagerProvider:error:
saveSaveRequest:accountChangeItems:listChangeItems:smartListChangeItems:templateChangeItems:reminderChangeItems:author:replicaManagerProvider:queue:completion:
executeFetchRequest:error:
resultsIndexedByObjectIDFromExecutingFetchRequest:error:
countForFetchRequest:error:
fetchResultByExecutingFetchRequest:error:
resultFromPerformingInvocation:error:
resultFromPerformingSwiftInvocation:parametersData:storages:error:
enumerateAllRemindersWithBlock:
enumerateAllListsWithBlock:
enumerateAllGroupsAndListsWithBlock:
_enumerateAllListsIncludingGroups:withBlock:
_xpcSyncStorePerformerWithReason:errorHandler:
_addChangeItemChangedKeys:objectID:toChangedKeysMap:
_saveAccountChangeItems:listChangeItems:smartListChangeItems:templateChangeItems:reminderChangeItems:author:replicaManagerProvider:synchronously:syncToCloudKit:performer:completion:
fetchShareForListWithID:error:
createShareForListWithID:appIconData:error:
updateShare:accountID:queue:completion:
stopShare:accountID:queue:completion:
acceptShareWithMetadata:queue:completion:
everConnectedToCar
compressedDistributedEvaluationDataWithOptions:error:
fetchEligibleDefaultListsWithError:
fetchDefaultListWithError:
fetchDefaultListRequiringCloudKitWithError:
fetchDefaultListRequiringCloudKitAccountWithAccountID:error:
fetchDefaultAccountWithError:
_withInProgressSaveRequestContainer:
_incrementStoreGeneration
_isUserInteractiveStore
nonUserInteractiveStore
anchoredBubbleCloudOverridesWithCompletion:
storeContainerToken
l_inProgressSaveRequestsContainer
lock
daemonController
setDaemonController:
mode
setMode:
assertOnMainThreadFetches
setAssertOnMainThreadFetches:
setNonUserInteractiveStore:
_assertOnMainThreadFetches
_lock
_storeContainerToken
_l_inProgressSaveRequestsContainer
_daemonController
_mode
_nonUserInteractiveStore
T@"REMStoreContainerToken",R,N,V_storeContainerToken
T@"_REMInProgressSaveRequestsContainer",R,N,V_l_inProgressSaveRequestsContainer
T{os_unfair_lock_s=I},R,N,V_lock
T@"<REMDaemonController>",&,N,V_daemonController
TQ,N,V_mode
TB,N,V_assertOnMainThreadFetches
T@"REMStore",&,N,V_nonUserInteractiveStore
acceptCalDAVSharedList:queue:completion:
rejectCalDAVSharedList:queue:completion:
_respondToCalDAVSharedList:withResponse:queue:completion:
provideChangeTrackingForAccountID:clientName:
provideChangeTrackingForAccountID:clientName:transactionAuthorKeysToExclude:
fetchListIncludingMarkedForDeleteWithObjectID:error:
fetchListIncludingConcealedWithObjectID:error:
fetchReminderIncludingConcealedWithObjectID:error:
fetchReminderIncludingMarkedForDeleteWithObjectID:error:
fetchRemindersIncludingUnsupportedWithObjectIDs:error:
provideAnonymousChangeTrackingWithTransactionAuthorKeysToExclude:
notifyOfInteractionWithPeople:force:completion:
notifyOfInteractionWithPeople:
_shouldNotifyReminddOfInteractionWithPeople
hasActiveCloudKitAccountForTipKitWithError:
containsListWithCustomBadgeForTipKitWithError:
completedRemindersCountForTipKitWithError:
containsCustomSmartListForTipKitWithError:
containsHashtagsForTipKitWithError:
fetchListsForEventKitBridgingWithError:
fetchRemindersForEventKitBridgingWithListIDs:error:
fetchIncompleteRemindersForEventKitBridgingWithDueDateFrom:to:withListIDs:error:
fetchCompletedRemindersForEventKitBridgingWithCompletionDateFrom:to:withListIDs:error:
fetchAllRemindersWithExternalIdentifier:error:
fetchRemindersMatchingTitle:dueAfter:dueBefore:isCompleted:hasLocation:location:error:
fetchAccountWithExternalIdentifier:error:
fetchAccountsWithExternalIdentifiers:error:
fetchListsIncludingSpecialContainersInAccount:error:
fetchListIncludingSpecialContainerWithObjectID:error:
fetchReminderWithExternalIdentifier:inList:error:
fetchRemindersWithExternalIdentifiers:inList:error:
fetchReminderWithDACalendarItemUniqueIdentifier:inList:error:
fetchRemindersWithDACalendarItemUniqueIdentifiers:inList:error:
MCIsManagedAccountWithObjectID:error:
notificationsEnabled
dataaccessDaemonStopSyncingReminders
isEventKitSyncEnabledForReminderKit
fetchAssignmentsWithObjectIDs:includeConcealedObjects:error:
fetchHashtagsWithObjectIDs:includeConcealedObjects:error:
fetchAllListsWithExternalIdentifier:error:
updateAccountWithAccountID:completion:
triggerSyncForDataAccessAccountsWithAccountIDs:
triggerThrottledSyncWithReason:discretionary:completion:
updateAccountsAndSync:completion:
updateAccountWithAccountID:restartDA:completion:
removeOrphanedAccountsWithCompletion:
_triggerSyncWithReason:forcingCloudKitReload:discretionary:bypassThrottler:completion:
requestToMergeLocalDataIntoSyncDataWithAccountIdentifier:completion:
requestToDeleteSyncDataWithAccountIdentifier:completion:
requestToDeleteLocalDataWithCompletion:
fetchTemplateWithObjectID:error:
fetchListRepresentationOfTemplateWithObjectID:error:
addCKShareObserverIfNeededForAccountID:queue:completion:
replicaManagerForAccountID:withStore:
setStore:
T@"REMStore",&,N,V_store
replicaManagerProviderForCalDAVSync
requestToUpdateClientConnectionsAsynchronously:shouldKeepAlive:completion:
repairPhantomObjectsWithObjectIDs:error:
debugFetchPhantomListsWithError:
test_setupForManualHashtagLabelRefreshing
test_refreshHashtagLabelsImmediately
test_handleIncompleteTemplateOperationQueueItemsImmediately
test_immediatelyCreateOrUpdatePublicLinkOfTemplateWithTemplateObjectID:configuration:error:
test_immediatelyRevokePublicLinkOfTemplateWithTemplateObjectID:error:
test_revertImageAttachmentsToUnDeduped:error:
initWithIdentifier:
identifier
_identifier
T@"NSUUID",R,N,V_identifier
initWithFetchResultTokenToDiffAgainst:
name
fetchResultTokenToDiffAgainst
_fetchResultTokenToDiffAgainst
T@"REMFetchResultToken",R,N,V_fetchResultTokenToDiffAgainst
initWithResultData:storages:latestFetchResultToken:
resultData
resultStorages
latestFetchResultToken
_resultData
_resultStorages
_latestFetchResultToken
T@"NSData",R,N,V_resultData
T@"NSDictionary",R,N,V_resultStorages
T@"REMFetchResultToken",R,N,V_latestFetchResultToken
objectIDForKey:
setObjectID:forKey:
newObjectID
objectIDWithUUID:
T@"REMObjectID",R,N
initWithObjectID:
initWithAlarmTrigger:objectID:
isTemporal
isContentEqual:
_deepCopy
setObjectID:
_objectID
T@"REMObjectID",&,N,V_objectID
initWithObjectID:timeInterval:
initWithTimeInterval:
timeInterval
setTimeInterval:
_timeInterval
Td,N,V_timeInterval
initWithDateComponents:
initWithObjectID:dateComponents:
dateComponents
setDateComponents:
_dateComponents
T@"NSDateComponents",C,N,V_dateComponents
initWithObjectID:structuredLocation:proximity:
initWithStructuredLocation:proximity:
structuredLocation
setStructuredLocation:
proximity
setProximity:
_structuredLocation
_proximity
T@"REMStructuredLocation",C,N,V_structuredLocation
Tq,N,V_proximity
initWithObjectID:event:
initWithEvent:
event
setEvent:
_event
Tq,N,V_event
initWithObjectID:contactRepresentation:
initWithContactRepresentation:
contactRepresentation
_contactRepresentation
T@"REMContactRepresentation",R,N,V_contactRepresentation
initWithReplicaIDSource:document:
initWithReplicaIDSource:document:undos:
initWithReplicaIDSource:orderedSet:
initWithReplicaIDSource:serializedData:error:
orderedSet
count
objectAtIndex:
indexOfEqualObject:
enumerateObjectsUsingBlock:
mutableOrderedSet
serializedData
mergedOrderedSetWithOrderedSet:error:
replicaIDSource
setReplicaIDSource:
document
setDocument:
undos
_replicaIDSource
_document
_undos
T@"REMReplicaIDSource",&,N,V_replicaIDSource
T@"CRDocument",&,N,V_document
T@"NSMutableArray",R,N,V_undos
T@"NSOrderedSet",R,N
TQ,R,N
replicaIDHelperDidAcquireReplicaUUID:
replicaManagerProvider
setReplicaManagerProvider:
T@"<REMReplicaManagerProviding>",&,N
addUndoCommandsForObject:block:
wantsUndoCommands
initWithReplicaIDSource:immutableDocumentToEdit:undos:
immutableOrderedSet
documentToEdit
insertObject:atIndex:
addObject:
removeObjectAtIndex:
moveObjectFromIndex:toIndex:
undo
undo:
replicaIDHelper
setReplicaIDHelper:
currentUndo
setCurrentUndo:
_replicaManagerProvider
_replicaIDHelper
_currentUndo
T@"REMReplicaIDHelper",&,N,V_replicaIDHelper
T@"REMMutableCRUndo",&,N,V_currentUndo
T@"<REMReplicaManagerProviding>",&,N,V_replicaManagerProvider
listIDsMergeableOrderingReplicaIDSourceWithAccountID:
setEffectiveMinimumSupportedVersion:
initWithObjectID:type:name:listIDsMergeableOrdering:
initWithObjectID:type:name:nullableListIDsMergeableOrdering:
initWithObjectID:type:name:
optionalObjectID
setStoreGenerationIfNeeded:
displayName
listIDsMergeableOrdering
setListIDsMergeableOrdering:
serializedListIDsMergeableOrdering
hasDeserializedListIDsMergeableOrdering
accountTypeHost
cdKeyToStorageKeyMap
listIDsMergeableOrderingReplicaIDSource
_isAddingExtraPrimaryCKAccountForTesting
_setIsAddingExtraPrimaryCKAccountForTesting:
setType:
setName:
listIDsMergeableOrderingData
setListIDsMergeableOrderingData:
pinnedListsManualOrdering
setPinnedListsManualOrdering:
templatesManualOrdering
setTemplatesManualOrdering:
markedForRemoval
setMarkedForRemoval:
listIDsToUndelete
setListIDsToUndelete:
smartListIDsToUndelete
setSmartListIDsToUndelete:
listsDADisplayOrderChanged
setListsDADisplayOrderChanged:
personID
setPersonID:
personIDSalt
setPersonIDSalt:
inactive
setInactive:
didChooseToMigrate
setDidChooseToMigrate:
didChooseToMigrateLocally
setDidChooseToMigrateLocally:
didFinishMigration
setDidFinishMigration:
persistenceCloudSchemaVersion
setPersistenceCloudSchemaVersion:
debugSyncDisabled
setDebugSyncDisabled:
daConstraintsDescriptionPath
setDaConstraintsDescriptionPath:
daAllowsCalendarAddDeleteModify
setDaAllowsCalendarAddDeleteModify:
daSupportsSharedCalendars
setDaSupportsSharedCalendars:
daWasMigrated
setDaWasMigrated:
_accountTypeHost
_storeGeneration
_copyGeneration
_listIDsMergeableOrdering
_markedForRemoval
_listsDADisplayOrderChanged
_inactive
_didChooseToMigrate
_didChooseToMigrateLocally
_didFinishMigration
_debugSyncDisabled
_daAllowsCalendarAddDeleteModify
_daSupportsSharedCalendars
_daWasMigrated
_name
_listIDsMergeableOrderingData
_pinnedListsManualOrdering
_templatesManualOrdering
_listIDsToUndelete
_smartListIDsToUndelete
_resolutionTokenMap
_resolutionTokenMapData
_personID
_personIDSalt
_persistenceCloudSchemaVersion
_daConstraintsDescriptionPath
Tq,N,V_type
T@"NSString",&,N,V_name
T@"REMCRMergeableOrderedSet",&,N
T@"NSData",&,N,V_listIDsMergeableOrderingData
T@"REMManualOrdering",&,N,V_pinnedListsManualOrdering
T@"REMManualOrdering",&,N,V_templatesManualOrdering
TB,N,V_markedForRemoval
T@"NSSet",&,N,V_listIDsToUndelete
T@"NSSet",&,N,V_smartListIDsToUndelete
TB,N,V_listsDADisplayOrderChanged
T@"REMResolutionTokenMap",&,N,V_resolutionTokenMap
T@"NSData",&,N,V_resolutionTokenMapData
T@"NSString",C,N,V_personID
T@"NSData",C,N,V_personIDSalt
TB,N,V_inactive
TB,N,V_didChooseToMigrate
TB,N,V_didChooseToMigrateLocally
TB,N,V_didFinishMigration
Tq,N,V_persistenceCloudSchemaVersion
TB,N,V_debugSyncDisabled
T@"NSString",C,N,V_daConstraintsDescriptionPath
TB,N,V_daAllowsCalendarAddDeleteModify
TB,N,V_daSupportsSharedCalendars
TB,N,V_daWasMigrated
T@"NSString",C,N,VexternalIdentifier
T@"NSString",C,N,VexternalModificationTag
T@"NSString",C,N,VdaSyncToken
T@"NSString",C,N,VdaPushKey
naturalLanguageDescriptionForRecurrenceRule:withStartDate:
naturalLanguageDescriptionForFrequency:interval:daysOfTheWeek:daysOfTheMonth:monthsOfTheYear:weeksOfTheYear:daysOfTheYear:setPositions:end:withStartDate:
_readableWeekDays
_readableMonths
_andDaysOfWeekString:
_numberedWeekDayString:
_daysOfWeek
_dayOfMonthAsString:
_weekDayPositionAsString:
_orDaysOfWeekString:
_customDayCombinationDescription:
daysTypeForDayArray:
shortNaturalLanguageDescriptionForRecurrenceRule:date:timeZone:lowercase:
shortNaturalLanguageDescriptionForFrequency:interval:daysOfTheWeek:daysOfTheMonth:monthsOfTheYear:setPositions:date:timeZone:lowercase:
_stringForDayOfWeek:
_stringForMonthNumber:
_byDayOfWeekOrdinalStrings
_customByDayItemFormatLocalizedString
_stringForByDayOfWeek:setPositions:
_localizedOfMonthStringForMonth:
repeatTypeForRecurrenceRules:recurrenceDate:recurrenceTimeZone:getRepeatEnd:
repeatTypeForFrequency:interval:daysOfTheWeek:daysOfTheMonth:monthsOfTheYear:weeksOfTheYear:daysOfTheYear:setPositions:end:recurrenceDate:recurrenceTimeZone:getRepeatEnd:
localizedDescriptionForRepeatType:
resolveInstanceMethod:
T@"NSDictionary",R,N
initWithREMObjectID:
setRemObjectID:
T@"REMObjectID",&,N,VremObjectID
T@"NSDictionary",&,N,V_storage
initWithAuxiliaryChangeInfoType:
changeObjectForAuxiliaryChangeInfo:
auxiliaryChangeInfos
typedKlass
setTypedKlass:
changeObjectForAuxiliaryChangeInfoMap
setChangeObjectForAuxiliaryChangeInfoMap:
_auxiliaryChangeInfos
_typedKlass
_changeObjectForAuxiliaryChangeInfoMap
T#,N,V_typedKlass
T@"NSMutableDictionary",&,N,V_changeObjectForAuxiliaryChangeInfoMap
T@"NSArray",R,N,V_auxiliaryChangeInfos
auxiliaryChangeInfoFromData:withObjectID:fromChangeObject:error:
setAuxiliaryChangeInfos:
auxiliaryChangeInfoFetchResultOfType:
initWithPredicateDescriptor:sortDescriptors:options:
resultsFromFetchResult:inStore:error:
resultsFromFetchResult:inAccount:error:
resultsFromFetchResult:inParentList:error:
predicateDescriptor
setPredicateDescriptor:
sortDescriptors
setSortDescriptors:
options
_predicateDescriptor
_sortDescriptors
_options
T@"REMListPredicateDescriptor",&,N,V_predicateDescriptor
T@"NSArray",&,N,V_sortDescriptors
TQ,R,N,V_options
initWithValue:
valueForSaveRequest:
valueWithoutPerformingCopy
weakValue
setWeakValue:
template
setTemplate:
_weakValue
_template
T@"<REMSaveRequestTrackedValue>",W,N,V_weakValue
T@"<REMSaveRequestTrackedValue>",&,N,V_template
rem_gregorianEquivalent
rem_dateComponentsByAddingTimeInterval:
rem_strippingTimeZone
rem_allDayDateComponents
rem_isValidDateComponents
rem_isAllDayDateComponents
rem_isWeekendDateComponents
rem_compare:
rem_stringRepresentation
rem_dateComponentsWithDateUsingArchivingTimeZone:isAllDay:
rem_dateComponentsWithDate:timeZone:isAllDay:
rem_dateWithDateComponentsUsingArchivingTimeZone:
rem_dateWithDateComponents:timeZone:
rem_dateComponentsWithYear:month:day:hour:minute:second:allDay:timeZone:
clockElementListForReplicaUUID:
lastConsumedChangeToken
setLastConsumedChangeToken:
lastConsumedDate
setLastConsumedDate:
_lastConsumedChangeToken
_lastConsumedDate
T@"NSDate",&,N,V_lastConsumedDate
T@"REMChangeToken",&,N,V_lastConsumedChangeToken
dealloc
initWithTarget:keysToObserve:includeInitial:
observeValueForKeyPath:ofObject:change:context:
keyDidChange:
target
keysToObserve
setKeysToObserve:
mutableChangedKeys
setMutableChangedKeys:
_target
_keysToObserve
_mutableChangedKeys
T@"NSArray",&,N,V_keysToObserve
T@"NSMutableSet",&,N,V_mutableChangedKeys
T@"NSObject",R,N,V_target
rem_replaceTTREMHashtag:withTTREMHashtag:
hashtagAtIndex:effectiveRange:
enumerateHashtagInRange:options:usingBlock:
addHashtag:range:
removeHashtagInRange:
rem_hashtagAtIndex:effectiveRange:
rem_hashtagAtIndex:longestEffectiveRange:inRange:
rem_hashtagAtIndex:effectiveRange:wantsLongestEffectiveRange:inRange:
rem_enumerateHashtagInRange:options:usingBlock:
rem_addHashtag:range:
rem_removeHashtagInRange:
crdtIDWithObjectID:property:
initWithAccountID:objectID:property:
initWithAccountID:crdtID:
crdtID
_accountID
_crdtID
T@"REMObjectID",R,N,V_accountID
T@"NSString",R,N,V_crdtID
syncCloudKitWithReason:discretionary:bypassThrottler:completion:
restartCloudKitSyncWithReason:bypassThrottler:completion:
syncDataAccessAccountsWithAccountIDs:bypassThrottler:completion:
deleteApplicationDataFromCloudKitWithAccountID:completion:
migrateICloudCalDavToCloudKitWithAccountID:disableCache:userInitiated:completion:
debugDownloadMigrationCacheWithAccountID:completion:
fetchUserRecordWithAccountID:completion:
setMigrationStateToDidChooseToMigrate:didFinishMigration:createZoneAccountIfFinishMigration:accountID:completion:
fetchServerRecordFor:completion:
observeCloudKitNetworkActivityChanges
rem_dateAsUTC
rem_dateWithICSCalendar:
initWithTrigger:objectID:
initWithTrigger:
initWithAlarm:objectID:
isAcknowledged
isOriginal
isSnooze
trigger
setTrigger:
acknowledgedDate
setAcknowledgedDate:
alarmUID
setAlarmUID:
originalAlarmUID
setOriginalAlarmUID:
_trigger
_acknowledgedDate
_alarmUID
_originalAlarmUID
T@"REMAlarmTrigger",&,N,V_trigger
T@"NSDate",&,N,V_acknowledgedDate
T@"NSString",&,N,V_alarmUID
T@"NSString",&,N,V_originalAlarmUID
titleReplicaIDSourceWithAccountID:reminderID:
notesReplicaIDSourceWithAccountID:reminderID:
isDate:overdueAtReferenceDate:allDay:showAllDayRemindersAsOverdue:
initWithObjectID:listID:accountID:
setTitleDocument:
setTitleAsStringByCDIngestor:
setNotesDocument:
setNotesAsStringByCDIngestor:
titleReplicaIDSource
notesReplicaIDSource
setAccountID:
setListID:
setParentReminderID:
setTitleDocumentData:
setNotesDocumentData:
isCompleted
setCompletionDate:
setSubtaskIDsToUndelete:
setHashtagIDsToUndelete:
setPriority:
setStartDateComponents:
setTimeZone:
setAllDay:
setCreationDate:
setLastModifiedDate:
setRecurrenceRules:
setAttachments:
setContactHandles:
setIcsUrl:
setImportedICSData:
setDaCalendarItemUniqueIdentifier:
setUserActivity:
setSiriFoundInAppsData:
setSiriFoundInAppsUserConfirmation:
setLastBannerPresentationDate:
setAssignments:
setHashtags:
setDisplayDate:
_hasDeserializedTitleDocument
_hasDeserializedNotesDocument
_deserializedTitleDocumentCache
_deserializedNotesDocumentCache
_completed
_allDay
_listID
_parentReminderID
_titleDocumentData
_notesDocumentData
_primaryLocaleInferredFromLastUsedKeyboard
_titleAsString
_notesAsString
_completionDate
_subtaskIDsToUndelete
_hashtagIDsToUndelete
_priority
_startDateComponents
_dueDateComponents
_timeZone
_creationDate
_lastModifiedDate
_recurrenceRules
_attachments
_alarms
_contactHandles
_icsDisplayOrder
_icsUrl
_importedICSData
_daCalendarItemUniqueIdentifier
_userActivity
_siriFoundInAppsData
_siriFoundInAppsUserConfirmation
_lastBannerPresentationDate
_flagged
_assignments
_hashtags
_displayDate
T@"NSString",&,N,V_titleAsString
T@"NSString",&,N,V_notesAsString
T@"REMObjectID",&,N,V_accountID
T@"REMObjectID",&,N,V_listID
T@"REMObjectID",&,N,V_parentReminderID
T@"NSData",&,N,V_titleDocumentData
T@"NSData",&,N,V_notesDocumentData
T@"NSString",&,N,V_primaryLocaleInferredFromLastUsedKeyboard
TB,N,GisCompleted,V_completed
T@"NSDate",C,N,V_completionDate
T@"NSSet",&,N,V_subtaskIDsToUndelete
T@"NSSet",&,N,V_hashtagIDsToUndelete
TQ,N,V_priority
T@"NSDateComponents",C,N,V_startDateComponents
T@"NSDateComponents",C,N,V_dueDateComponents
T@"NSString",C,N,V_timeZone
TB,N,V_allDay
T@"NSDate",C,N,V_creationDate
T@"NSDate",C,N,V_lastModifiedDate
T@"NSArray",&,N,V_recurrenceRules
T@"NSArray",&,N,V_attachments
T@"NSArray",&,N,V_alarms
T@"REMContactRepresentation",&,N,V_contactHandles
TQ,N,V_icsDisplayOrder
T@"NSURL",C,N,V_icsUrl
T@"NSData",&,N,V_importedICSData
T@"NSString",C,N,V_daCalendarItemUniqueIdentifier
T@"REMUserActivity",C,N,V_userActivity
T@"NSData",C,N,V_siriFoundInAppsData
Tq,N,V_siriFoundInAppsUserConfirmation
T@"NSDate",C,N,V_lastBannerPresentationDate
Tq,N,V_flagged
T@"NSSet",&,N,V_assignments
T@"NSSet",&,N,V_hashtags
T@"REMDisplayDate",C,N,V_displayDate
T@"NSString",R,C,N
compareToken:error:
universalToken
isUniversal
_emptyListIDsOrderingWithAccountID:
T@"NSData",C,N
initWithSaveRequest:storage:capabilities:changedKeysObserver:
initWithSaveRequest:storage:capabilities:observeInitialValues:
initWithObjectID:type:name:insertIntoSaveRequest:
capabilities
groupContext
pinnedListsContext
templatesContextChangeItem
addListChangeItem:
insertListChangeItem:beforeListChangeItem:
insertListChangeItem:afterListChangeItem:
addSmartListChangeItem:
insertSmartListChangeItem:beforeSmartListChangeItem:
insertSmartListChangeItem:afterSmartListChangeItem:
addMergeableOrderingNode:
insertMergeableOrderingNode:beforeMergeableOrderingNode:
insertMergeableOrderingNode:afterMergeableOrderingNode:
undeleteListWithID:usingUndo:
undeleteSmartListWithID:usingUndo:
removeFromStore
mergeableOrderingNodesByOrderingMergeableOrderingNodes:
canCopyReminderLosslesslyToAccountChangeItem:
lowLevelAddMergeableOrderingNodeIDToOrdering:withParentMergeableOrderingNode:
lowLevelRemoveMergeableOrderingNodeIDFromOrdering:
test_lowLevelEditOrderingByMovingListObjectID:toTarget:
insertMergeableOrderingNode:adjacentToMergeableOrderingNode:isAfter:withParentMergeableOrderingNode:
_reassignMergeableOrderingNode:withParentListChangeItem:
_lowLevelAddMergeableOrderingNodeToOrdering:atIndexOfSibling:isAfter:withParentMergeableOrderingNode:
_lowLevelApplyUndoToOrdering:
_editListIDsOrderingUsingBlock:
T@"REMCRMergeableOrderedSet",R,D,N
T@"NSData",R,D,N
T@"REMManualOrdering",&,D,N
TB,D,N
T@"NSString",&,D,N
T@"REMAccountStorage",R,C,N,V_storage
T@"REMAccountPinnedListsContextChangeItem",R,N
T@"REMAccountGroupContextChangeItem",R,N
initWithAccountChangeItem:
accountChangeItem
setAccountChangeItem:
_accountChangeItem
T@"REMAccountChangeItem",&,N,V_accountChangeItem
unsavedManualOrdering
updateManualOrdering:
T@"REMManualOrdering",R,N
addTemplateWithName:configuration:
initWithIncompleteReminderCounts:scheduledCount:
incompleteReminderCounts
scheduledCount
_incompleteReminderCounts
_scheduledCount
T@"NSDictionary",R,N,V_incompleteReminderCounts
Tq,R,N,V_scheduledCount
predicateDescriptorForAllLists
initWithType:
parentListID
setParentListID:
objectIDs
setObjectIDs:
_parentListID
_objectIDs
T@"REMObjectID",&,N,V_parentListID
T@"NSArray",&,N,V_objectIDs
resultsFromFetchResult:inList:error:
resultsFromFetchResult:inParentReminder:error:
T@"REMReminderPredicateDescriptor",&,N,V_predicateDescriptor
initWithSubtaskCounts:
initWithDueDateCounts:
initWithSubtaskCounts:dueDateCounts:
subtaskCounts
dueDateCounts
_subtaskCounts
_dueDateCounts
T@"NSDictionary",R,N,V_subtaskCounts
T@"NSArray",R,N,V_dueDateCounts
initWithDueDate:count:
dueDate
_dueDate
_count
T@"NSDate",R,N,V_dueDate
Tq,R,N,V_count
initWithAccountIdentifier:activityDate:activityType:authorUserRecordIDString:ckParentCloudObjectEntityName:ckParentCloudObjectIdentifier:ckIdentifier:sharedEntityName:uuidForChangeTracking:
activityTypeDescription
accountIdentifier
activityDate
activityType
authorUserRecordIDString
ckParentCloudObjectEntityName
ckParentCloudObjectIdentifier
ckIdentifier
sharedEntityName
uuidForChangeTracking
_accountIdentifier
_activityDate
_activityType
_authorUserRecordIDString
_ckParentCloudObjectEntityName
_ckParentCloudObjectIdentifier
_ckIdentifier
_sharedEntityName
_uuidForChangeTracking
T@"NSString",R,N,V_accountIdentifier
T@"NSDate",R,N,V_activityDate
Tq,R,N,V_activityType
T@"NSString",R,N,V_authorUserRecordIDString
T@"NSString",R,N,V_ckParentCloudObjectEntityName
T@"NSString",R,N,V_ckParentCloudObjectIdentifier
T@"NSString",R,N,V_ckIdentifier
T@"NSString",R,N,V_sharedEntityName
T@"NSUUID",R,N,V_uuidForChangeTracking
initWithDate:allDay:timeZone:
initWithFloatingDateComponents:nonFloatingDateComponents:
initWithDueDateComponents:alarms:
date
isAllDay
_date
T@"NSDate",R,C,N,V_date
TB,R,N,GisAllDay,V_allDay
T@"NSTimeZone",R,N,V_timeZone
initWithStore:storage:
initWithStore:account:parentList:storage:
isPinned
isOriginOfExistingTemplate
customContext
setAccount:
parentList
setParentList:
_account
_parentList
T@"REMAccount",&,N,V_account
T@"REMList",&,N,V_parentList
T@"REMSmartListStorage",C,N,V_storage
parentAccountID
pinnedDate
T@"NSDate",R,D,N
mostRecentTargetTemplateIdentifier
T@"NSUUID",R,D,N
T@"REMAccountCapabilities",R,N
T@"REMResolutionTokenMap",R,D,N
color
T@"REMColor",R,D,N
badgeEmblem
filterData
showingLargeAttachments
isPersisted
smartListType
T@"REMSmartListCustomContext",R,N
sortingStyle
initWithSmartList:account:parentList:
badge
smartlist
setSmartlist:
_smartlist
T@"REMSmartList",&,N,V_smartlist
T@"REMColor",R,N
T@"REMListBadge",R,N
T@"REMAccount",R,N,V_account
T@"REMList",R,N,V_parentList
entityNamesToIncludeFromTrackingWithOptionProvider:
internalTransactionAuthorKeysToExclude
defaultTransactionAuthorKeysToExclude
lastTransactionTimestampWithManagedObjectContext:affectedStores:
initWithClientID:daemonController:
initWithClientID:daemonController:transactionAuthorKeysToExclude:
currentChangeTokenForAllAccountsWithError:
currentChangeTokenForAccountTypes:error:
currentChangeTokenWithError:
earliestChangeTokenWithError:
getTrackingStateWithError:
saveTrackingState:error:
fetchHistoryAfterToken:error:
fetchHistoryAfterDate:error:
deleteHistoryBeforeToken:error:
deleteHistoryBeforeDate:error:
persistenceStoreIDForAccountID:error:
_performChangeTrackingWithReason:block:xpcErrorHandler:
changeTrackingClientID
entityNames
setEntityNames:
transactionFetchLimit
setTransactionFetchLimit:
transactionAuthorKeysToExclude
_changeTrackingClientID
_entityNames
_transactionFetchLimit
_transactionAuthorKeysToExclude
T@"NSSet",R,N,V_transactionAuthorKeysToExclude
T@"<REMChangeTrackingClientIdentifying>",R,N,V_changeTrackingClientID
T@"<REMDaemonController>",R,N,V_daemonController
T@"NSArray",&,N,V_entityNames
TQ,N,V_transactionFetchLimit
fetchAuxiliaryChangeInfosOfType:withChangeObject:error:
initWithClientName:accountIdentifier:
clientName
_clientName
T@"NSString",R,N,V_clientName
isSandboxEnvironment
newCloudContainerForAccount:
newCloudContainerForAccountID:
newCloudContainerWithPublicCloudDatabase
initWithSaveRequest:storage:changedKeysObserver:
initWithSaveRequest:storage:observeInitialValues:
initWithObjectID:name:configuration:insertIntoAccountChangeItem:
setBadge:
removeFromParentAccount
configuration
T@"REMTemplateConfiguration",&,D,N
publicLink
T@"REMTemplatePublicLink",R,D,N
T@"REMColor",&,D,N
T@"REMListBadge",C,N
mostRecentPublicLinkUpdateRequestDate
T@"REMTemplateStorage",R,C,N,V_storage
initWithName:
initWithName:canonicalName:firstOccurrenceCreationDate:recencyDate:uuidForChangeTracking:
isEqualToHashtagLabel:
canonicalName
firstOccurrenceCreationDate
recencyDate
_canonicalName
_firstOccurrenceCreationDate
_recencyDate
T@"NSString",R,N,V_name
T@"NSString",R,N,V_canonicalName
T@"NSDate",R,N,V_firstOccurrenceCreationDate
T@"NSDate",R,N,V_recencyDate
externalIdentifierForMarkedForDeletionObject
shouldUseExternalIdentifierAsDeletionKey
initCalDAVNotificationWithObjectID:accountID:listID:uuidString:hostURL:externalIdentifier:externalModificationTag:
uuidString
setUuidString:
hostURL
setHostURL:
_uuidString
_hostURL
T@"NSString",&,N,V_uuidString
T@"NSURL",&,N,V_hostURL
T@"REMObjectID",R,N,V_objectID
T@"REMObjectID",R,N,V_listID
T@"NSURL",&,D,N
attributeNameForStyle:
rem_fontHintAtIndex:effectiveRange:
rem_isUnderlinedAtIndex:effectiveRange:
rem_setFontHint:isOn:inRange:
rem_setUnderline:inRange:
currentChangeToken:
currentChangeTokenForAccountTypes:completion:
currentChangeTokenForAccountID:completion:
earliestChangeTokenForAccountID:completion:
getTrackingStateWithClientID:completion:
saveTrackingState:withClientID:completionHandler:
fetchHistoryAfterToken:entityNames:transactionFetchLimit:completionHandler:
fetchHistoryAfterDate:entityNames:transactionFetchLimit:completionHandler:
deleteHistoryBeforeToken:completionHandler:
deleteHistoryBeforeDate:completionHandler:
fetchAuxiliaryChangeInfos:completionHandler:
removeAllSnoozeAlarms
snoozeFromNowForTimeInterval:
snoozeToDate:
snoozeToNextThirds
snoozeForever
snoozeFromDueDateForFutureIntegralMultipleOfTimeInterval:
_timeIntervalToAddSinceStartDate:withNow:step:
_createSnoozeAlarmWithDateComponents:
_cleanupOriginalAlarmsForSnoozing
initWithObjectID:accountID:reminderID:UTI:
initWithAttachment:objectID:accountID:reminderID:
reminderID
_uti
_reminderID
T@"REMObjectID",R,N,V_reminderID
T@"NSString",R,N,V_uti
createTemporaryFileURLWithUTI:
createTemporaryFileWithData:UTI:
initWithObjectID:accountID:reminderID:UTI:fileSize:fileURL:data:
fileSize
setFileSize:
fileURL
setFileURL:
isTemporaryFileURL
setIsTemporaryFileURL:
_isTemporaryFileURL
_fileSize
_fileURL
TQ,N,V_fileSize
T@"NSURL",&,N,V_fileURL
TB,N,V_isTemporaryFileURL
initWithObjectID:accountID:reminderID:UTI:fileSize:fileURL:data:width:height:
width
setWidth:
height
setHeight:
_width
_height
TQ,N,V_width
TQ,N,V_height
initWithObjectID:accountID:reminderID:url:metadata:
setUrl:
metadata
setMetadata:
_url
_metadata
T@"NSURL",&,N,V_url
T@"NSData",&,N,V_metadata
initWithState:IsObserver:timeElapsed:listsMigrated:remindersMigrated:log:
state
isObserver
timeElapsed
listsMigrated
remindersMigrated
_isObserver
_state
_timeElapsed
_listsMigrated
_remindersMigrated
_log
T@"NSString",R,N,V_state
TB,R,N,V_isObserver
Td,R,N,V_timeElapsed
TQ,R,N,V_listsMigrated
TQ,R,N,V_remindersMigrated
T@"NSString",R,N,V_log
uuid
entityName
T@"NSUUID",R,N
initWithUUID:entityName:
setUuid:
setEntityName:
_uuid
_entityName
T@"NSUUID",&,N,V_uuid
T@"NSString",&,N,V_entityName
changeID
setChangeID:
changedObjectIDStorage
setChangedObjectIDStorage:
changeType
setChangeType:
tombstone
setTombstone:
updatedProperties
setUpdatedProperties:
_changeID
_changedObjectIDStorage
_changeType
_tombstone
_updatedProperties
Tq,N,V_changeID
T@"_REMChangedObjectIDStorage",C,N,V_changedObjectIDStorage
Tq,N,V_changeType
T@"REMNSPersistentHistoryChangeTombstone",C,N,V_tombstone
T@"NSSet",C,N,V_updatedProperties
initWithDictionary:
remObjectIdentifier
daIsEventOnlyContainer
shareeOwningListIdentifier
shareeDisplayName
shareeAddress
assignmentOwningReminderIdentifier
hashtagName
hashtagReminderIdentifier
hashtagLabelUUIDForChangeTracking
syncActivityUUIDForChangeTracking
persistentHistoryChangeTombstone
setPersistentHistoryChangeTombstone:
_persistentHistoryChangeTombstone
T@"NSDictionary",&,V_persistentHistoryChangeTombstone
T@"NSUUID",R
shortStringForChangeType:
stringForChangeType:
initWithStorage:
initWithPersistentHistoryChange:
changedManagedObjectID
resolveObjectIDWithUUID:entityName:
transaction
changedObjectID
copyForCoalescing
internal_ChangeTransaction
setInternal_ChangeTransaction:
isCoalesced
setIsCoalesced:
coalescedChanges
setCoalescedChanges:
persistentHistoryChange
cachedChangedREMObjectID
setCachedChangedREMObjectID:
_isCoalesced
_internal_ChangeTransaction
_coalescedChanges
_persistentHistoryChange
_cachedChangedREMObjectID
T@"_REMNSPersistentHistoryChangeStorage",&,V_storage
T@"NSPersistentHistoryChange",R,W,V_persistentHistoryChange
T@"REMObjectID",&,V_cachedChangedREMObjectID
T@"REMChangeTransaction",W,N,V_internal_ChangeTransaction
TB,N,V_isCoalesced
T@"NSArray",&,N,V_coalescedChanges
rem_dataWithHexString:
timestamp
changes
storeID
author
token
_timestamp
_changes
_storeID
_author
_token
T@"NSDate",R,N,V_timestamp
T@"NSArray",R,N,V_changes
T@"NSString",R,N,V_storeID
T@"NSString",R,N,V_author
T@"REMChangeToken",R,N,V_token
rem_hasPrefixCaseInsensitive:
rem_hasMailto
rem_addingMailto
rem_removingMailto
rem_hasTel
rem_addingTel
rem_removingTel
rem_isFirstString:equalToSecondString:
fetchResultTokenFromDataRepresentation:error:
initWithPersistentHistoryTokens:
dataRepresentationWithError:
persistentHistoryTokens
_persistentHistoryTokens
T@"NSDictionary",R,N,V_persistentHistoryTokens
conformsToREMChangeTrackingIdentifiable
errorChangeSetWithError:
initWithError:
initWithChangeTransactions:
consolidateAndFilterChangesWithTransactionAuthors:isExclusion:
applyFilterByTransactionAuthors:isExclusion:
_filterAndFlattenAndConsolidateChanges
enumerateChanges:forModelsOfClass:withBlock:
lastChangeTokenForAccountID:
transactions
inserts
setInserts:
updates
setUpdates:
deletes
setDeletes:
isTruncated
setIsTruncated:
error
setError:
filterByTransactionAuthorStrings
setFilterByTransactionAuthorStrings:
filterByTransactionAuthorsIsExclusion
setFilterByTransactionAuthorsIsExclusion:
filteredTransactions
setFilteredTransactions:
_isTruncated
_filterByTransactionAuthorsIsExclusion
_transactions
_inserts
_updates
_deletes
_error
_filterByTransactionAuthorStrings
_filteredTransactions
T@"NSError",&,N,V_error
TB,N,V_isTruncated
T@"NSArray",&,N,V_inserts
T@"NSArray",&,N,V_updates
T@"NSArray",&,N,V_deletes
T@"NSArray",&,N,V_filterByTransactionAuthorStrings
TB,N,V_filterByTransactionAuthorsIsExclusion
T@"NSArray",&,N,V_filteredTransactions
T@"NSArray",R,N,V_transactions
sortDescriptorSortingByTitleAscending:
sortDescriptorSortingByCreationDateAscending:
sortDescriptorSortingByDueDateAscending:
sortDescriptorSortingByPriorityAscending:
sortDescriptorSortingByOrderingInListAscending:
_remObjectIdentifier
_externalIdentifier
_daIsEventOnlyContainer
_shareeOwningListIdentifier
_shareeDisplayName
_shareeAddress
_assignmentOwningReminderIdentifier
_hashtagName
_hashtagReminderIdentifier
_hashtagLabelUUIDForChangeTracking
_syncActivityUUIDForChangeTracking
T@"NSUUID",R,N,V_remObjectIdentifier
T@"NSString",R,N,V_externalIdentifier
T@"NSNumber",R,N,V_daIsEventOnlyContainer
T@"NSUUID",R,N,V_shareeOwningListIdentifier
T@"NSString",R,N,V_shareeDisplayName
T@"NSString",R,N,V_shareeAddress
T@"NSUUID",R,N,V_assignmentOwningReminderIdentifier
T@"NSString",R,N,V_hashtagName
T@"NSUUID",R,N,V_hashtagReminderIdentifier
T@"NSUUID",R,N,V_hashtagLabelUUIDForChangeTracking
T@"NSUUID",R,N,V_syncActivityUUIDForChangeTracking
_transaction
_changedObjectID
T@"REMChangeTransaction",R,W,N,V_transaction
Tq,R,N,V_changeID
T@"REMObjectID",R,N,V_changedObjectID
Tq,R,N,V_changeType
T@"REMChangeTombstone",R,N,V_tombstone
setDebug_rem_nowOverride:
debug_rem_nowOverride
rem_now
T@"NSDate",R,C,N
T@"NSDate",C,N
recurrenceEndWithEndDate:
recurrenceEndWithOccurrenceCount:
initWithEndDate:
initWithOccurrenceCount:
usesEndDate
endDate
occurrenceCount
_endDate
_occurrenceCount
T@"NSDate",R,N,V_endDate
TQ,R,N,V_occurrenceCount
initWithAccountType:
supportsSubtasks
supportsAttachments
supportsListAppearance
supportsGroups
supportsFlagged
supportsPersonTrigger
supportsLocation
supportsHourlyRecurrence
supportsTemplates
supportsEventKitSync
supportsCloudKitSync
supportsCalDAVNotifications
supportsListSharees
supportsListShareesMutation
supportsMoveAcrossLists
supportsMoveAcrossSharedLists
supportsMultipleDateAlarmsOnRecurrence
defaultReminderPriorityLevel
supportsHandoff
supportsReminderActions
supportsCRDTs
supportsAssignments
supportsHashtags
insertsCompletedRecurrentCloneAtTail
supportsCustomSmartLists
supportsPinnedLists
supportsTextStyling
supportsDeletionByTTL
_supportsSubtasks
_supportsAttachments
_supportsListAppearance
_supportsGroups
_supportsFlagged
_supportsPersonTrigger
_supportsLocation
_supportsHourlyRecurrence
_supportsTemplates
_supportsEventKitSync
_supportsCloudKitSync
_supportsCalDAVNotifications
_supportsListSharees
_supportsListShareesMutation
_supportsMoveAcrossLists
_supportsMoveAcrossSharedLists
_supportsMultipleDateAlarmsOnRecurrence
_supportsHandoff
_supportsReminderActions
_supportsCRDTs
_supportsAssignments
_supportsHashtags
_insertsCompletedRecurrentCloneAtTail
_supportsCustomSmartLists
_supportsPinnedLists
_supportsTextStyling
_supportsDeletionByTTL
_defaultReminderPriorityLevel
TB,R,N,V_supportsEventKitSync
TB,R,N,V_supportsCloudKitSync
TB,R,N,V_supportsCalDAVNotifications
TB,R,N,V_supportsListSharees
TB,R,N,V_supportsListShareesMutation
TB,R,N,V_supportsMoveAcrossLists
TB,R,N,V_supportsMoveAcrossSharedLists
TB,R,N,V_supportsMultipleDateAlarmsOnRecurrence
Tq,R,N,V_defaultReminderPriorityLevel
TB,R,N,V_supportsHandoff
TB,R,N,V_supportsReminderActions
TB,R,N,V_supportsCRDTs
TB,R,N,V_supportsAssignments
TB,R,N,V_supportsHashtags
TB,R,N,V_insertsCompletedRecurrentCloneAtTail
TB,R,N,V_supportsCustomSmartLists
TB,R,N,V_supportsPinnedLists
TB,R,N,V_supportsTextStyling
TB,R,N,V_supportsDeletionByTTL
TB,R,N,V_supportsSubtasks
TB,R,N,V_supportsAttachments
TB,R,N,V_supportsListAppearance
TB,R,N,V_supportsGroups
TB,R,N,V_supportsFlagged
TB,R,N,V_supportsPersonTrigger
TB,R,N,V_supportsLocation
TB,R,N,V_supportsHourlyRecurrence
TB,R,N,V_supportsTemplates
rem_registerClassAtCRCoderIfNeeded
remoteObjectProxy
remoteObjectProxyWithErrorHandler:
synchronousRemoteObjectProxyWithErrorHandler:
initWithQueue:store:
preWarmModels
q_syncSuggestedAttributesPerformerWithReason:errorHandler:
q_resolveSuggestedAttributesPerformerWithReason:errorHandler:
queue
setQueue:
q_cachedXPCPerformer
setQ_cachedXPCPerformer:
_queue
_q_cachedXPCPerformer
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
T@"<REMXPCSuggestedAttributesPerformer>",&,N,V_q_cachedXPCPerformer
remindersFromAccountStorages:listStorages:reminderStorages:store:requestedReminderIDs:
remindersFromAccountStorages:listStorages:reminderStorages:store:requestedStringIdentifiers:identifierSelector:
remindersFromAccountStorages:listStorages:reminderStorages:store:
remindersFromAccountStorages:listStorages:reminderStorages:store:showMarkedForDeleteObjects:
fetchRemindersWithListID:includingSubtasks:error:
fetchRemindersWithParentReminderID:includeUnsupported:error:
fetchObjectIDsOfRemindersWithParentReminderID:includeIncomplete:includeCompleted:isUnsupported:error:
fetchRemindersWithObjectIDs:includeConcealed:error:
fetchRemindersCountWithListID:error:
fetchRemindersCountWithParentReminderID:error:
initWithParentReminderID:includeUnsupported:
includeUnsupported
_includeUnsupported
T@"REMObjectID",R,N,V_parentReminderID
TB,R,N,V_includeUnsupported
initWithListID:includingSubtasks:
includingSubtasks
_includingSubtasks
TB,R,N,V_includingSubtasks
initWithObjectIDs:
includeConcealedObjects
setIncludeConcealedObjects:
_includeConcealedObjects
T@"NSArray",R,N,V_objectIDs
TB,N,V_includeConcealedObjects
T@"REMReminderPredicateDescriptor",R,N,V_predicateDescriptor
T@"NSArray",R,N,V_sortDescriptors
T@"REMReminderFetchOptions",R,N,V_options
initWithParentReminderIDs:
parentReminderIDs
_parentReminderIDs
T@"NSArray",R,N,V_parentReminderIDs
initWithParentReminderID:includeIncomplete:includeCompleted:isUnsupported:
includeIncomplete
includeCompleted
_includeIncomplete
_includeCompleted
_isUnsupported
TB,R,N,V_includeIncomplete
TB,R,N,V_includeCompleted
TB,R,N,V_isUnsupported
initWithExternalIdentifiers:listObjectID:
externalIdentifiers
listObjectID
_externalIdentifiers
_listObjectID
T@"NSArray",R,N,V_externalIdentifiers
T@"REMObjectID",R,N,V_listObjectID
initWithDACalendarItemUniqueIdentifiers:listObjectID:
daCalendarItemUniqueIdentifiers
_daCalendarItemUniqueIdentifiers
T@"NSArray",R,N,V_daCalendarItemUniqueIdentifiers
initWithListID:
initWithParentReminderID:
initWithAccountStorages:listStorages:reminderStorages:objectIDs:
accountStorages
listStorages
reminderStorages
_accountStorages
_listStorages
_reminderStorages
T@"NSArray",R,N,V_accountStorages
T@"NSArray",R,N,V_listStorages
T@"NSArray",R,N,V_reminderStorages
allowConcealedObjects
setAllowConcealedObjects:
_allowConcealedObjects
TB,N,V_allowConcealedObjects
initWithAssignments:
T@"NSSet",R,N,V_assignments
initWithHashtags:
T@"NSSet",R,N,V_hashtags
initWithShouldIncludeHashtags:shouldIncludeAlarmTriggersBasedOnDateOrTimeInterval:shouldIncludeAlarmTriggersBasedOnLocationOrVehicle:
shouldIncludeContactsHandleData
shouldIncludeHashtags
shouldIncludeAlarmTriggersBasedOnDateOrTimeInterval
shouldIncludeAlarmTriggersBasedOnLocationOrVehicle
_shouldIncludeHashtags
_shouldIncludeAlarmTriggersBasedOnDateOrTimeInterval
_shouldIncludeAlarmTriggersBasedOnLocationOrVehicle
TB,R,N,V_shouldIncludeHashtags
TB,R,N,V_shouldIncludeAlarmTriggersBasedOnDateOrTimeInterval
TB,R,N,V_shouldIncludeAlarmTriggersBasedOnLocationOrVehicle
smartListsFromSmartListStorages:accountStorages:parentListStorages:store:
fetchNonCustomSmartListWithSmartListType:createIfNeeded:error:
fetchCustomSmartListsInAccount:error:
fetchCustomSmartListsInGroup:error:
initWithSmartListType:objectID:createIfNeeded:
createIfNeeded
setCreateIfNeeded:
_createIfNeeded
_smartListType
T@"NSString",R,N,V_smartListType
TB,N,V_createIfNeeded
initWithParentAccountObjectID:
accountObjectID
_accountObjectID
T@"REMObjectID",R,N,V_accountObjectID
initWithParentGroupObjectID:
groupObjectID
_groupObjectID
T@"REMObjectID",R,N,V_groupObjectID
initWithSmartListStorages:
initWithSmartListStorages:accountStorages:parentListStorages:
smartListStorages
parentListStorages
_smartListStorages
_parentListStorages
T@"NSArray",R,N,V_smartListStorages
T@"NSDictionary",R,N,V_accountStorages
T@"NSDictionary",R,N,V_parentListStorages
shouldIgnoreChangeOfModelClassProperties:withChangeObject:
initWithREMDAAccount:clientName:withREMStore:
initWithREMDAAccount:clientName:withREMStore:entityNames:
fetchAndInitializeChangeTrackingStateIfNeeded
compareCurrentChangeTokenToLastConsumedWithResult:error:
fetchChangesSinceLastConsumed
markChangesConsumed
markChangesConsumed:
changedModelObjectsOfModelClass:ofChangeType:
changedIdentifiersOfModelClass:ofChangeType:
_changedModelObjectsOfClass:ofChangeTypes:shouldOutputFetchedModels:
_handleIsConcealedUpdatesInChange:ofModelClass:forClientID:concealedHandler:unconcealedHandler:
_fetchModelObjectOfClass:withObjectID:includeConcealedObjects:
_fetchModelObjectsOfClass:withObjectIDs:
_changeTypeMaskFromChangeType:
_cachedModeObjectResultsForModelClass:changeType:
_setCachedModeObjectResults:forModelClass:changeType:
clearCachedModelObjectResultsForModelClass:
_rem_changeTracking:
_rem_accountObjectID
setClientName:
changeSet
setChangeSet:
sinceToken
setSinceToken:
upToToken
setUpToToken:
remStore
setRemStore:
setChangeTracking:
cached_remAccountObjectID
setCached_remAccountObjectID:
cached_insertedModelObjectResultsByModelClassName
setCached_insertedModelObjectResultsByModelClassName:
cached_updatedModelObjectResultsByModelClassName
setCached_updatedModelObjectResultsByModelClassName:
cached_currentChangeToken
setCached_currentChangeToken:
cached_currentTrackingState
setCached_currentTrackingState:
_debug_mockChangeSet
set_debug_mockChangeSet:
_changeSet
_sinceToken
_upToToken
_remStore
_changeTracking
_cached_remAccountObjectID
_cached_insertedModelObjectResultsByModelClassName
_cached_updatedModelObjectResultsByModelClassName
_cached_currentChangeToken
_cached_currentTrackingState
__debug_mockChangeSet
T@"REMChangeSet",&,N,V_changeSet
T@"REMChangeToken",&,N,V_sinceToken
T@"REMChangeToken",&,N,V_upToToken
T@"REMStore",&,N,V_remStore
T@"REMChangeTracking",&,N,V_changeTracking
T@"REMObjectID",&,N,V_cached_remAccountObjectID
T@"NSMutableDictionary",&,N,V_cached_insertedModelObjectResultsByModelClassName
T@"NSMutableDictionary",&,N,V_cached_updatedModelObjectResultsByModelClassName
T@"REMChangeToken",&,N,V_cached_currentChangeToken
T@"REMChangeTrackingState",&,N,V_cached_currentTrackingState
T@"REMChangeSet",&,N,V__debug_mockChangeSet
T@"NSString",&,N,V_clientName
T@"<REMDAAccountProviding>",R,N,V_account
_debug_resetCaches
_debug_setMockChangeSet:
_debug_currentChangeTokenWithError:
isChangeTrackableModel
isChangeTrackableFetchableModel
rem_DA_supportsFetching
rem_DA_supportsConcealedObjects
rem_DA_propertiesAffectingIsConcealed
rem_DA_fetchByObjectIDBlock
rem_DA_fetchByObjectIDsBlock
rem_DA_deletedKeyFromTombstoneBlock
rem_DA_deletedKeyFromConcealedModelObjectBlock
T@?,R,N
setObjectIdentifier:
owningListIdentifier
setOwningListIdentifier:
setDisplayName:
address
setAddress:
_owningListIdentifier
_displayName
_address
T@"NSUUID",&,N,V_objectIdentifier
T@"NSUUID",&,N,V_owningListIdentifier
T@"NSString",&,N,V_displayName
T@"NSString",&,N,V_address
owningReminderIdentifier
setOwningReminderIdentifier:
_owningReminderIdentifier
T@"NSUUID",&,N,V_owningReminderIdentifier
setReminderIdentifier:
_reminderIdentifier
T@"NSUUID",&,N,V_reminderIdentifier
fetchListsWithError:
fetchRemindersWithListIDs:error:
fetchIncompleteRemindersWithDueDateFrom:to:withListIDs:error:
fetchCompletedRemindersWithCompletionDateFrom:to:withListIDs:error:
initWithListIDs:
listIDs
_listIDs
T@"NSArray",R,N,V_listIDs
initWithListIDs:startDate:endDate:
startDate
_startDate
T@"NSDate",R,N,V_startDate
errorSanitizedForXPCFromError:
internalErrorWithDebugDescription:
mismatchedObjectIDWithObjectID:expected:
unexpectedError
errorFromErrors:
unauthorizedErrorWithMissingEntitlement:
unauthorizedErrorWithMissingEntitlement:requestedAccessLevel:currentAccesslevel:
throttledErrorWithRemainingTimeInterval:
babySatErrorWithOperationName:
cancelledError
retryLaterErrorWithInterval:
tooManyLoadedStoresError
notSupportedError
internetNotReachableError
isNoSuchObjectError:forObjectID:
noSuchObjectErrorWithObjectID:
noSuchObjectErrorWithExternalIdentifier:
noSuchObjectErrorWithDACalendarItemUniqueIdentifier:
noSuchSmartListErrorWithSmartListType:
noPrimaryActiveCloudKitAccountError
accountStoreMissingError:
saveErrorWithCoreDataError:
validationErrorMoveAcrossAccount:
validationErrorMoveFromAccount:toAccount:objectID:
validationErrorListHasNoAccount:
validationErrorMoveReminderFromList:toList:inAccount:
validationErrorNestedSubtask:parentReminderID:
validationErrorSubtaskAndParentNotOnSameList:parentReminderID:
validationErrorUndeleteHashtagFromAnotherReminder:expectedReminderID:
validationErrorNotCloudKitAccount:
validationErrorRemoveAccountBeingInserted:
validationErrorRemoveAccountBeingActivated:
validationErrorDifferentZoneObjectID:zoneOwnerName:parentObjectID:parentZoneOwnerName:
constraintConflictWithIdentifier:constraint:
nullifiedRelationshipErrorWithRelationshipName:
invalidParameterErrorWithDescription:
unexpectedNilPropertyWithClass:property:
unexpectedNilPropertyWithObjectID:property:
xpcPerformerUnavailableErrorWithDescription:
catchObjCException:error:
_isCoreDataError:
_errorWithCode:underlyingError:
_errorSanitizedForXPCFromError:
orderValueWithAssignedDate:objectIdentifier:
initWithObjectID:accountID:reminderID:assigneeID:originatorID:status:
initWithObjectID:accountID:reminderID:assigneeID:originatorID:status:assignedDate:
isEqualToAssignment:
isOriginatorNullified
orderValue
status
assigneeID
originatorID
assignedDate
setAssignedDate:
_debug_cdAssigneeLinked
set_debug_cdAssigneeLinked:
_debug_cdOriginatorLinked
set_debug_cdOriginatorLinked:
__debug_cdAssigneeLinked
__debug_cdOriginatorLinked
_status
_assigneeID
_originatorID
_assignedDate
T@"NSDate",C,N,V_assignedDate
TB,N,V__debug_cdAssigneeLinked
TB,N,V__debug_cdOriginatorLinked
Tq,R,N,V_status
T@"REMObjectID",R,N,V_assigneeID
T@"REMObjectID",R,N,V_originatorID
nullifiedOriginatorAssignmentWithObjectID:accountID:reminderID:assigneeID:status:assignedDate:
resolutionTokenWithJSONObject:
initWithCounter:modificationTime:replicaID:
initWithDefaultValue
update
compare:
counter
setCounter:
modificationTime
setModificationTime:
replicaID
setReplicaID:
_counter
_modificationTime
_replicaID
Tq,N,V_counter
Td,N,V_modificationTime
T@"NSUUID",&,N,V_replicaID
promptUserToFileBugWithAlertMessage:bugTitle:bugDescription:
createRadarWithTitle:description:
saveRequestSaveDidStart:
saveRequestSaveDidFinish:
latestSaveInProgressAccount:
latestSaveInProgressList:
latestSaveInProgressReminder:
latestSaveInProgressReminderForReminderChangeItem:
_latestSaveInProgressAccountForObjectID:saveRequest:
_latestSaveInProgressListForObjectID:fallbackAccount:fallbackParentList:saveRequest:
_latestSaveInProgressReminderForObjectID:fallbackAccount:fallbackList:fallbackParentList:fallbackParentReminder:saveRequest:
_firstMatchInSaveRequests:
inProgressSaveRequests
setInProgressSaveRequests:
_inProgressSaveRequests
T@"NSMutableArray",&,N,V_inProgressSaveRequests
initWithAccountType:identifier:name:
isCloudKit
T@"NSString",R,N,V_identifier
initWithSandboxDatabaseEnabled:
shouldDeleteMigratedData
isDatabaseMigrated
setIsDatabaseMigrated:
setShouldDataAccessStopSyncingReminders:
destroySandboxContainerIfNecessary
reportMigrationWillBegin
reportMigrationErrorWithIdentifier:atStage:error:objectLocator:
_postMigrationLocalAccountCleanup
reportMigrationDidFinishWithSuccess:
_diagnosticReportWithStage:failureIdentifier:error:
ensureAccountsExistWithMigrationAccountInfos:error:
ensureAccountsExist:error:
ensureAccountsExist:
_migrationAccountInfosFromDEPRECATEDInfoDictionaryList:
_cleanLocalDatabases:
containerToken
setContainerToken:
cachedStore
setCachedStore:
migrationStartDate
setMigrationStartDate:
hasPerformedEnsureAccountsExist
setHasPerformedEnsureAccountsExist:
lastReportedErrorIdentifier
setLastReportedErrorIdentifier:
lastReportedErrorStage
setLastReportedErrorStage:
lastReportedError
setLastReportedError:
_hasPerformedEnsureAccountsExist
_containerToken
_cachedStore
_migrationStartDate
_lastReportedErrorIdentifier
_lastReportedErrorStage
_lastReportedError
TB,N
T@"REMStoreContainerToken",&,N,V_containerToken
T@"REMStore",&,N,V_cachedStore
T@"NSDate",&,N,V_migrationStartDate
TB,N,V_hasPerformedEnsureAccountsExist
T@"NSString",&,N,V_lastReportedErrorIdentifier
TQ,N,V_lastReportedErrorStage
T@"NSError",&,N,V_lastReportedError
initWithCount:
initWithAccountStorages:listStorages:reminderStorages:requestedObjectIDs:metadata:
initWithAccountStorages:
initWithListStorages:
initWithReminderStorages:
initWithRequestedObjectIDs:
initWithMetadata:
requestedObjectIDs
fetchedAccountStorages
fetchedListStorages
fetchedReminderStorages
fetchResultToken
setFetchResultToken:
_requestedObjectIDs
_fetchedAccountStorages
_fetchedListStorages
_fetchedReminderStorages
_fetchResultToken
T@"NSArray",R,N,V_requestedObjectIDs
T@"NSArray",R,N,V_fetchedAccountStorages
T@"NSArray",R,N,V_fetchedListStorages
T@"NSArray",R,N,V_fetchedReminderStorages
T@"REMFetchMetadata",R,N,V_metadata
T@"REMFetchResultToken",&,N,V_fetchResultToken
localInternalAccountID
localAccountID
canCopyReminderLosslesslyFromAccountWithType:toAccountWithType:accountTypeHost:
_accountTypeMaskWithBitMask:
isCloudBasedAccountType:
supportsSharingLists
templatesContext
canCopyReminderLosslesslyToAccount:
isConsideredEmptyWithResultPtr:withError:
fetchListsIncludingSpecialContainersWithError:
fetchListIncludingSpecialContainerWithExternalIdentifier:error:
MCIsManagedWithResultPtr:error:
listIDsOrdering
daSupportsPhoneNumbers
setCapabilities:
_capabilities
T@"NSSet",R,D,N
T@"REMAccountTemplatesContext",R,N
T@"REMAccountCapabilities",&,N,V_capabilities
T@"REMAccountGroupContext",R,N
initWithAccount:
fetchGroupsWithError:
fetchTemplatesWithError:
isCloudBased
isPrimaryCloudKit
isNonPrimaryCloudKit
isCalDav
isExchange
isLocal
isLocalInternal
isValid
internalDescription
_accountType
replicaUUIDForCreation
nonEditingReplicaUUID
replicaUUID
initWithReplicaIDSource:owner:replicaClockProvider:
willEdit
didCopy
didSerialize
replicaManager
replicaClockProvider
setReplicaClockProvider:
owner
setOwner:
acquiredReplicaUUID
setAcquiredReplicaUUID:
lazilyCachedReplicaManagerProvider
setLazilyCachedReplicaManagerProvider:
_replicaClockProvider
_owner
_acquiredReplicaUUID
_lazilyCachedReplicaManagerProvider
T@"<REMReplicaIDHelperOwner>",W,N,V_owner
T@"NSUUID",&,N,V_acquiredReplicaUUID
T@"<REMReplicaManagerProviding>",&,N,V_lazilyCachedReplicaManagerProvider
T@"REMReplicaManager",R,N
T@"<REMReplicaClockProviding>",&,N,V_replicaClockProvider
rem_humanReadableIdentifier
optionsWithDefaultValues
optionsWithEverythingOff
optionsFromJSONRepresentation:attachmentURLs:error:
_attachmentURLFromFilenameWithKey:inJSONRepresentation:attachmentURLs:error:
_init
includeListNames
includeListNameFuzzedEmbeddings
includeReminderTitles
includeReminderTitleFuzzedEmbeddings
setIncludeListNames:
setIncludeReminderTitles:
setIncludeListNameFuzzedEmbeddings:
setIncludeReminderTitleFuzzedEmbeddings:
includeSystemLanguage
setIncludeSystemLanguage:
includeSystemTimezone
setIncludeSystemTimezone:
includeAccountType
setIncludeAccountType:
includeListGroupInfo
setIncludeListGroupInfo:
includeReminderTitleSaltedHash
setIncludeReminderTitleSaltedHash:
includeDates
setIncludeDates:
includeDayOfWeek
setIncludeDayOfWeek:
includeRecurrenceInfo
setIncludeRecurrenceInfo:
includeLocationInfo
setIncludeLocationInfo:
includeAttachmentUTIs
setIncludeAttachmentUTIs:
includeRemindMeWhenMessagingInfo
setIncludeRemindMeWhenMessagingInfo:
includeAlarmDates
setIncludeAlarmDates:
includeSubtaskInfo
setIncludeSubtaskInfo:
includeUserActivityInfo
setIncludeUserActivityInfo:
includeIsFlagged
setIncludeIsFlagged:
includePriority
setIncludePriority:
relevantWordTagsIncludeOtherWord
setRelevantWordTagsIncludeOtherWord:
includeReminderTitleCategoryFilteredStopWords
setIncludeReminderTitleCategoryFilteredStopWords:
includeReminderTitleCategoryUniversalGrammar
setIncludeReminderTitleCategoryUniversalGrammar:
includeReminderTitleCategorySentence2Vec
setIncludeReminderTitleCategorySentence2Vec:
reminderTitleCategoryDistanceTolerance
setReminderTitleCategoryDistanceTolerance:
reminderTitleCategoryEmbeddingURL
setReminderTitleCategoryEmbeddingURL:
dateResolutionInSeconds
setDateResolutionInSeconds:
creationDateWithinDays
setCreationDateWithinDays:
_includeListNames
_includeReminderTitles
_includeListNameFuzzedEmbeddings
_includeReminderTitleFuzzedEmbeddings
_includeSystemLanguage
_includeSystemTimezone
_includeAccountType
_includeListGroupInfo
_includeReminderTitleSaltedHash
_includeDates
_includeDayOfWeek
_includeRecurrenceInfo
_includeLocationInfo
_includeAttachmentUTIs
_includeRemindMeWhenMessagingInfo
_includeAlarmDates
_includeSubtaskInfo
_includeUserActivityInfo
_includeIsFlagged
_includePriority
_relevantWordTagsIncludeOtherWord
_includeReminderTitleCategoryFilteredStopWords
_includeReminderTitleCategoryUniversalGrammar
_includeReminderTitleCategorySentence2Vec
_reminderTitleCategoryDistanceTolerance
_reminderTitleCategoryEmbeddingURL
_dateResolutionInSeconds
_creationDateWithinDays
TB,N,V_includeListNames
TB,N,V_includeReminderTitles
TB,N,V_includeListNameFuzzedEmbeddings
TB,N,V_includeReminderTitleFuzzedEmbeddings
TB,N,V_includeSystemLanguage
TB,N,V_includeSystemTimezone
TB,N,V_includeAccountType
TB,N,V_includeListGroupInfo
TB,N,V_includeReminderTitleSaltedHash
TB,N,V_includeDates
TB,N,V_includeDayOfWeek
TB,N,V_includeRecurrenceInfo
TB,N,V_includeLocationInfo
TB,N,V_includeAttachmentUTIs
TB,N,V_includeRemindMeWhenMessagingInfo
TB,N,V_includeAlarmDates
TB,N,V_includeSubtaskInfo
TB,N,V_includeUserActivityInfo
TB,N,V_includeIsFlagged
TB,N,V_includePriority
TB,N,V_relevantWordTagsIncludeOtherWord
TB,N,V_includeReminderTitleCategoryFilteredStopWords
TB,N,V_includeReminderTitleCategoryUniversalGrammar
TB,N,V_includeReminderTitleCategorySentence2Vec
Td,N,V_reminderTitleCategoryDistanceTolerance
T@"NSURL",&,N,V_reminderTitleCategoryEmbeddingURL
TQ,N,V_dateResolutionInSeconds
TQ,N,V_creationDateWithinDays
boolValue
unsignedIntegerValue
doubleValue
remdes_boolForKey:defaultValue:
remdes_nsuintegerForKey:defaultValue:
remdes_doubleForKey:defaultValue:
initWithSourceListID:shouldSaveCompleted:
sourceListID
shouldSaveCompleted
_shouldSaveCompleted
_sourceListID
T@"REMObjectID",R,N,V_sourceListID
TB,R,N,V_shouldSaveCompleted
initWithContents:
initWithStyle:
remParagraphStyle
listBulletInAttributedString:atIndex:
attributedValue
innerStyle
setInnerStyle:
_innerStyle
T@"TTParagraphStyle",&,N,V_innerStyle
T@"NSObject",R,N
rem_paragraphStyleAtIndex:effectiveRange:
rem_addParagraphNamedStyle:inRange:
rem_removeParagraphNamedStyleFromRange:
weakSharedInstance
userInteractiveDaemonController
syncChangeTrackingPerformerWithReason:errorHandler:
syncDebugPerformerWithReason:errorHandler:
syncDebugPerformerWithErrorHandler:
syncStorePerformerWithReason:errorHandler:
asyncStorePerformerWithReason:loadHandler:errorHandler:
syncSyncInterfacePerformerWithReason:errorHandler:
asyncSyncInterfacePerformerWithReason:loadHandler:errorHandler:
syncIndexingPerformerWithReason:errorHandler:
asyncIndexingPerformerWithReason:loadHandler:errorHandler:
initWithStoreContainerToken:userInteractive:
setCloudKitNetworkActivityDelegate:
_syncPerformerWithResolver:reason:errorHandler:
_asyncPerformerWithResolver:reason:loadHandler:errorHandler:
_resolveAndCachePerformerWithResolver:reason:errorHandler:
_asyncResolveAndCachePerformerWithResolver:reason:completion:
_asyncResolvePerformerWithResolver:reason:completion:
_resolvePerformerWithResolver:reason:errorHandler:
_xpcConnectionReconnectingIfNecessary
_xpcConnectionDidInterrupt
_xpcConnectionDidInvalidate
cloudKitNetworkActivityDelegate
l_performersByName
setL_performersByName:
serviceName
setServiceName:
xpcConnection
setXpcConnection:
setStoreContainerToken:
_cloudKitNetworkActivityDelegate
_l_performersByName
_serviceName
_xpcConnection
T@"NSMutableDictionary",&,N,V_l_performersByName
T@"NSString",&,N,V_serviceName
T@"NSXPCConnection",&,N,V_xpcConnection
T@"REMStoreContainerToken",&,N,V_storeContainerToken
T@"<REMXPCDaemonControllerCloudKitNetworkActivityDelegate>",W,N,V_cloudKitNetworkActivityDelegate
resolveWithDaemon:reason:completion:
cloudKitNetworkActivityDidUpdate:
minimumRegionMonitoringDistance
Td,R,N
initWithTitle:
initWithTitle:locationUID:
initWithTitle:locationUID:latitude:longitude:radius:address:routing:referenceFrameString:contactLabel:mapKitHandle:
latitude
setLatitude:
longitude
setLongitude:
radius
setRadius:
routing
setRouting:
referenceFrameString
setReferenceFrameString:
contactLabel
setContactLabel:
mapKitHandle
setMapKitHandle:
locationUID
_title
_latitude
_longitude
_radius
_routing
_referenceFrameString
_contactLabel
_mapKitHandle
_locationUID
T@"NSString",R,N,V_locationUID
T@"NSString",C,N,V_title
Td,N,V_latitude
Td,N,V_longitude
Td,N,V_radius
T@"NSString",C,N,V_address
T@"NSString",C,N,V_routing
T@"NSString",C,N,V_referenceFrameString
T@"NSString",C,N,V_contactLabel
T@"NSData",C,N,V_mapKitHandle
rem_dateComponentsFromString:
rem_stringFromDateComponents:
rem_formatterWithTimeZone:
nonEditableAttributes
allowedAttributesForModel
initWithBackingStore:
string
attributesAtIndex:effectiveRange:
replaceCharactersInRange:withString:
setAttributes:range:
mutableCopyWithZone:
classForCoder
reportDidEdit:range:changeInLength:
editObserver
setEditObserver:
backingStore
setBackingStore:
_editObserver
_backingStore
T@"NSMutableAttributedString",&,N,V_backingStore
T@"<REMCRMutableAttributedStringEditObserver>",W,N,V_editObserver
colorWithRed:green:blue:alpha:
colorWithRed:green:blue:alpha:targetRGBSpace:
colorWithHexString:
clearColor
blackColor
whiteColor
grayColor
lightGrayColor
redColor
greenColor
blueColor
cyanColor
yellowColor
magentaColor
orangeColor
purpleColor
brownColor
colorWithDictionaryData:error:
initWithWhite:alpha:
initWithRed:green:blue:alpha:
initWithRed:green:blue:alpha:colorSpace:
initWithRed:green:blue:alpha:colorSpace:daSymbolicColorName:daHexString:ckSymbolicColorName:
initWithHexString:
initWithDASymbolicColorName:daHexString:ckSymbolicColorName:
initWithDASymbolicColorName:daHexString:
initWithCKSymbolicColorName:hexString:
hexString
hexStringWithAlpha
archivedDictionaryDataWithError:
colorRGBSpace
blue
green
alpha
daSymbolicColorName
daHexString
ckSymbolicColorName
_colorRGBSpace
_blue
_red
_green
_alpha
_daSymbolicColorName
_daHexString
_ckSymbolicColorName
T@"NSString",R,N,V_daSymbolicColorName
T@"NSString",R,N,V_daHexString
T@"NSString",R,N,V_ckSymbolicColorName
TQ,R,N,V_colorRGBSpace
Td,R,N,V_blue
Td,R,N,V_red
Td,R,N,V_green
Td,R,N,V_alpha
daemonUserDefaults
appGroupUserDefaults
T@"REMDaemonUserDefaults",R,N
initWithSuiteName:containerURL:
_startObservingValuesForKey:block:
_startStreamingValuesForKey:block:
_addObserverForKey:block:
_removeObserver:
suiteName
observers
showRemindersAsOverdue_cached
setShowRemindersAsOverdue_cached:
userDefaults
_showRemindersAsOverdue_cached
_suiteName
_observers
_userDefaults
T@"NSString",R,N,V_suiteName
T@"NSMutableDictionary",R,N,V_observers
TB,N,V_showRemindersAsOverdue_cached
T@"NSUserDefaults",R,N,V_userDefaults
defaultValues
todayNotificationFireTimeFromStorageNumber:
storageNumberForTodayNotificationTime:
newAppShouldTakeoverEKReminderNotifications
databaseMigrationTestModeEnabled
setDatabaseMigrationTestModeEnabled:
databaseMigrationTimedOut
setDatabaseMigrationTimedOut:
lastDatabaseMigrationSystemBuildVersion
setLastDatabaseMigrationSystemBuildVersion:
cloudKitMigrationMaxNumInvocations
setCloudKitMigrationMaxNumInvocations:
cloudKitMigrationMaxNumFailures
setCloudKitMigrationMaxNumFailures:
cloudKitMigrationDelayAfterError
setCloudKitMigrationDelayAfterError:
cloudKitMigrationObserverPollingInterval
setCloudKitMigrationObserverPollingInterval:
cloudKitMigrationSimulatedError
setCloudKitMigrationSimulatedError:
cloudKitResultsLimitPerSyncOperation
setCloudKitResultsLimitPerSyncOperation:
cloudKitMigrationDisableCleanUp
setCloudKitMigrationDisableCleanUp:
preferredDefaultListID
setPreferredDefaultListID:
deletePreferredDefaultListID
observePreferredDefaultListIDWithBlock:
preferredDefaultListObjectIDUrl
setPreferredDefaultListObjectIDUrl:
_deletePreferredDefaultListObjectIDUrl
acAccountIdentifierToMergeLocalDataIntoSyncData
setAcAccountIdentifierToMergeLocalDataIntoSyncData:
acAccountIdentifiersToMigrateInactivatedCalDavData
setAcAccountIdentifiersToMigrateInactivatedCalDavData:
cloudKitMergeLocalLastDateMaxRetryReached
setCloudKitMergeLocalLastDateMaxRetryReached:
cloudKitMergeLocalLastBuildVersionMaxRetryReached
setCloudKitMergeLocalLastBuildVersionMaxRetryReached:
cloudKitSchemaCatchUpSyncLastSuccessDate
setCloudKitSchemaCatchUpSyncLastSuccessDate:
cloudKitSchemaCatchUpSyncLastSuccessBuildVersion
setCloudKitSchemaCatchUpSyncLastSuccessBuildVersion:
cloudKitSchemaCatchUpSyncSchedulingState
setCloudKitSchemaCatchUpSyncSchedulingState:
cloudKitSchemaCatchUpSyncLastScheduledDate
setCloudKitSchemaCatchUpSyncLastScheduledDate:
debugForceSupportCloudKitSchemaCatchUpSyncBackgroundScheduling
setDebugForceSupportCloudKitSchemaCatchUpSyncBackgroundScheduling:
cloudKitMaxNumAlarmIDsInReminderCKRecordDebugOverride
setCloudKitMaxNumAlarmIDsInReminderCKRecordDebugOverride:
spotlightIndexVersion
setSpotlightIndexVersion:
nextScheduledAlarmDate
setNextScheduledAlarmDate:
lastPresentAlarmDate
setLastPresentAlarmDate:
lastSuggestedAttributesAutoTrainingToken
setLastSuggestedAttributesAutoTrainingToken:
setSuggestedAttributesHarvestingOverrides:
setMuteNotificationForSharedList:
muteNotificationOptionsForSharedList:
setMuteNotificationOptions:forSharedList:
removeMuteNotificationOptionsForSharedList:
setBestKForKNN:
setSuggestedAttributesTrainingOverrides:
setCoreBehaviorTrainingParameters:
setSuggestedAttributesAccepted:
lastSyncPoll
setLastSyncPoll:
lastCloudConfigurationDownload
setLastCloudConfigurationDownload:
lastExtraneousAlarmsProcessedDate
setLastExtraneousAlarmsProcessedDate:
useExtraneousAlarmBackOffThrottleInterval
setUseExtraneousAlarmBackOffThrottleInterval:
staledFileAttachmentCleanupLastExecutionDate
setStaledFileAttachmentCleanupLastExecutionDate:
staledFileAttachmentCleanupContainerDeemedClean
setStaledFileAttachmentCleanupContainerDeemedClean:
userInteractionsData
setUserInteractionsData:
simulateMAIDAccount
setSimulateMAIDAccount:
showRemindersAsOverdue
setShowRemindersAsOverdue:
observeShowRemindersAsOverdueWithBlock:
enableWelcomeScreen
setEnableWelcomeScreen:
forceShowWelcomeScreen
setForceShowWelcomeScreen:
forceShowWhatsNewScreen
setForceShowWhatsNewScreen:
enableInAppDebugMenu
setEnableInAppDebugMenu:
enableAutoGenerateCKPersonIDSalt
enableHashingUserIdentifiablesWithPersonIDSalt
setEnableHashingUserIdentifiablesWithPersonIDSalt:
todayNotificationFireTime
setTodayNotificationFireTime:
streamTodayNotificationFireTime:
disableAlarmEngineDataSourcePrefetching
setDisableAlarmEngineDataSourcePrefetching:
enableAssignmentNotifications
setEnableAssignmentNotifications:
suggestedAttributesTrainingOverrides
suggestedAttributesHarvestingOverrides
muteNotificationForSharedList
suggestedAttributesAccepted
accountsListCategorizedCountsCache
setAccountsListCategorizedCountsCache:
hashtagLabelsInCustomSmartListFilterCache
setHashtagLabelsInCustomSmartListFilterCache:
debugSimulateSqliteFull
setDebugSimulateSqliteFull:
tipKitCachedCountOfUncompletedReminders
setTipKitCachedCountOfUncompletedReminders:
tipKitCachedCountOfLists
setTipKitCachedCountOfLists:
tipKitCachedCountOfListsWithCustomBadge
setTipKitCachedCountOfListsWithCustomBadge:
tipKitCachedCountOfCustomSmartLists
setTipKitCachedCountOfCustomSmartLists:
tipKitCachedCountOfHashtags
setTipKitCachedCountOfHashtags:
lastViewedNotificationsPermissionWarmingSheetDate
setLastViewedNotificationsPermissionWarmingSheetDate:
lastDismissedNotificationsPermissionInlineRequestDate
setLastDismissedNotificationsPermissionInlineRequestDate:
hasViewedContactsAccessAlertForLocation
setHasViewedContactsAccessAlertForLocation:
hasViewedContactsAccessAlertForMessaging
setHasViewedContactsAccessAlertForMessaging:
hasViewedContactsAccessAlertForCalDAVSharing
setHasViewedContactsAccessAlertForCalDAVSharing:
didShowReminderDeletePrivacyWarning
setDidShowReminderDeletePrivacyWarning:
remCurrentRuntimeVersionDebuggingOverride
setRemCurrentRuntimeVersionDebuggingOverride:
forceEligibleForAutoCloudKitMigration
setForceEligibleForAutoCloudKitMigration:
forceBasicAAAccountEligibleForCloudKitReminders
setForceBasicAAAccountEligibleForCloudKitReminders:
syncActivityNotificationEngine_accountSignInTime
setSyncActivityNotificationEngine_accountSignInTime:
setSharedListActivityNotifications_demoMode:
sharedListActivityNotifications_demoMode
setShouldIncludeRemindersDueTodayInBadgeCount:
shouldIncludeRemindersDueTodayInBadgeCount
streamShouldIncludeRemindersDueTodayInBadgeCount:
_pptPreferredDefaultListIDKey
ppt_handleInstall
ppt_handleRestore
T@"NSNumber",&,N
T@"NSArray",&,N
T@"NSDate",&,N
T@"NSNumber",C,N
T@"REMObjectID",&,N
T@"NSURL",&,N
T@"NSDateComponents",&,N
T@"NSDictionary",C,N
stopObserving
initWithUserDefaults:key:block:
setUserDefaults:
userDefaultsKey
setUserDefaultsKey:
block
setBlock:
removed
setRemoved:
_removed
_userDefaultsKey
_block
T@"REMUserDefaults",&,N,V_userDefaults
T@"NSString",C,N,V_userDefaultsKey
T@?,C,N,V_block
TB,N,V_removed
cdEntityNameForSavedReminder
newObjectIDForSavedReminder
cdEntityNameForSavedAttachment
newObjectIDForSavedAttachment
T@"REMTemplateStorage",C,N,V_storage
executeFetchRequest:completion:
performInvocation:completion:
performSwiftInvocation:withParametersData:storages:completion:
fetchReplicaManagerForAccountID:completion:
fetchReplicaManagersForAccountID:bundleID:completion:
compressedDistributedEvaluationDataWithOptions:completion:
saveAccountStorages:listStorages:smartListStorages:templateStorages:reminderStorages:changedKeys:replicaManagers:author:mode:synchronously:syncToCloudKit:completion:
fetchShareForObjectWithID:completion:
createShareForObjectWithID:appIconData:completion:
updateShare:accountID:completion:
stopShare:accountID:completion:
addCKShareObserverIfNeededForAccountID:completion:
acceptShareWithMetadata:completion:
acceptCalDAVShareWithCalendarURL:acAccountID:completion:
rejectCalDAVShareWithCalendarURL:acAccountID:completion:
notifyOfInteractionWithPeople:completion:
fetchContentAttributesOfTemplateWithObjectID:completion:
createOrUpdatePublicLinkForTemplateWithObjectID:configuration:completion:
createPublicContentPreviewOfTemplateWithObjectID:configuration:completion:
revokePublicLinkForTemplateWithObjectID:completion:
downloadPublicTemplateWithPublicLinkURLUUID:completion:
updateAccountsAndFetchMigrationState:completion:
updateAccountWithACAccountID:restartDA:completion:
removeOrphanedAccountWithCompletion:
uncachedSuggestedAttributesPerformerWithReason:completion:
anchoredBubbleEnabledWithCompletion:
MCIsManagedAccountWithObjectID:completion:
requestToUpdateClientConnectionsWithShouldKeepAlive:
validatePhantomObjectsWith:shouldRepair:completion:
accountStoreDidChange:
sharedInstance
accountDescriptionWithACAccount:
initForObservingAccountStoreChanges:
unsafeUntilSystemReady_primaryICloudACAccount
unsafeUntilSystemReady_allICloudACAccounts
unsafeUntilSystemReady_allCloudKitRemindersEnabledICloudACAccounts
unsafeUntilSystemReady_icloudACAccountMatchingAccountIdentifier:
unsafeUntilSystemReady_iCloudAccountCalDavServiceWithAccountID:
unsafeUntilSystemReady_displayedHostnameOfICloudACAccountWithAccountIdentifier:
invalidateICloudACAccounts
saveDidChooseToMigrate:didFinishMigration:toACAccount:inStore:completionHandler:
accessQueue
_updateCachedICloudACAccounts
_invalidateCachedICloudACAccounts
unsafeUntilSystemReady_allICloudAccountsWithCloudKitEnabled
_unsetMigrationFlagsWithACAccount:inStore:completionHandler:
_setPrimaryICloudACAccount:
_setNonPrimaryICloudACAccount:
accountStore
setAccountStore:
cachedICloudACAccountsAreValid
setCachedICloudACAccountsAreValid:
_debug_primaryICloudACAccount
set_debug_primaryICloudACAccount:
_debug_fullICloudACAccount
set_debug_fullICloudACAccount:
_cachedICloudACAccountsAreValid
_unsafeUntilSystemReady_primaryICloudACAccount
_unsafeUntilSystemReady_allICloudACAccounts
_accountStore
__debug_primaryICloudACAccount
__debug_fullICloudACAccount
T@"ACAccountStore",&,N,V_accountStore
TB,N,V_cachedICloudACAccountsAreValid
T@"ACAccount",&,N,V__debug_primaryICloudACAccount
T@"ACAccount",&,N,V__debug_fullICloudACAccount
T@"ACAccount",R,V_unsafeUntilSystemReady_primaryICloudACAccount
T@"NSArray",R,V_unsafeUntilSystemReady_allICloudACAccounts
setTimestamp:
setChanges:
transactionNumber
setTransactionNumber:
setStoreID:
bundleID
setBundleID:
processID
setProcessID:
contextName
setContextName:
setAuthor:
setToken:
_transactionNumber
_bundleID
_processID
_contextName
T@"NSDate",C,N,V_timestamp
T@"NSArray",C,N,V_changes
Tq,N,V_transactionNumber
T@"NSString",C,N,V_storeID
T@"NSString",C,N,V_bundleID
T@"NSString",C,N,V_processID
T@"NSString",C,N,V_contextName
T@"NSString",C,N,V_author
T@"REMNSPersistentHistoryToken",&,N,V_token
T@"REMObjectID",C,N,V_accountID
_resolveAccountID:
T@"_REMNSPersistentHistoryTransactionStorage",&,V_storage
initWithOrderedIdentifiers:
orderedIdentifiers
setOrderedIdentifiers:
_orderedIdentifiers
T@"NSArray",&,N,V_orderedIdentifiers
initWithURL:configuration:creationDate:lastModifiedDate:expirationDate:canBeUpdated:
expirationDate
canBeUpdated
_canBeUpdated
_configuration
_expirationDate
T@"NSURL",R,N,V_url
T@"REMTemplatePublicLinkConfiguration",R,N,V_configuration
T@"NSDate",R,N,V_creationDate
T@"NSDate",R,N,V_lastModifiedDate
T@"NSDate",R,N,V_expirationDate
TB,R,N,V_canBeUpdated
initWithObjectID:accountID:reminderID:type:name:
initWithObjectID:accountID:reminderID:type:name:creationDate:
isEqualToHashtag:
initWithObjectID:accountID:
isEqualToSharedToMeReminderPlaceholder:
mergeWith:
deltaSince:in:
walkGraph:
realizeLocalChangesIn:
initWithCRCoder:
encodeWithCRCoder:
iCalendarValueFromRecurrenceType:
iCalendarValueFromDate:isDateOnly:isFloating:
iCalendarValueFromWeekday:
nextRecurrentDueDateAfter:dueDate:timeZone:allDay:recurrenceRules:
_convertREMRecurrenceFrequencyToCalRecurrenceFrequency:
initRecurrenceRuleWithObjectID:accountID:reminderID:frequency:interval:end:
initRecurrenceRuleWithObjectID:accountID:reminderID:frequency:interval:firstDayOfTheWeek:daysOfTheWeek:daysOfTheMonth:monthsOfTheYear:weeksOfTheYear:daysOfTheYear:setPositions:end:
initWithRecurrenceRule:objectID:accountID:reminderID:
initWithRecurrenceRule:objectID:end:
isEqualToRecurrenceRule:
stringValueAsDateOnly:isFloating:
recurrenceEnd
frequency
interval
firstDayOfTheWeek
daysOfTheWeek
daysOfTheMonth
daysOfTheYear
weeksOfTheYear
monthsOfTheYear
setPositions
_recurrenceEnd
_frequency
_interval
_firstDayOfTheWeek
_daysOfTheWeek
_daysOfTheMonth
_daysOfTheYear
_weeksOfTheYear
_monthsOfTheYear
_setPositions
T@"REMRecurrenceEnd",R,C,N,V_recurrenceEnd
Tq,R,N,V_frequency
Tq,R,N,V_interval
Tq,R,N,V_firstDayOfTheWeek
T@"NSArray",R,N,V_daysOfTheWeek
T@"NSArray",R,N,V_daysOfTheMonth
T@"NSArray",R,N,V_daysOfTheYear
T@"NSArray",R,N,V_weeksOfTheYear
T@"NSArray",R,N,V_monthsOfTheYear
T@"NSArray",R,N,V_setPositions
changeTrackingPerformerWithStoreContainerToken:reason:completion:
debugPerformerWithStoreContainerToken:reason:completion:
storePerformerWithProcessName:storeContainerToken:reason:completion:
syncInterfacePerformerWithReason:completion:
indexingPerformerWithReason:completion:
T@"NSXPCInterface",R,N
initWithObjectID:listType:listID:topLevelElementIDs:secondaryLevelElementIDsByTopLevelElementID:uncommitedElementsAccountID:modifiedDate:
initWithObjectID:listType:listID:modifiedDate:
listType
topLevelElementIDs
secondaryLevelElementIDsByTopLevelElementID
uncommitedElementsAccountID
modifiedDate
_listType
_topLevelElementIDs
_secondaryLevelElementIDsByTopLevelElementID
_uncommitedElementsAccountID
_modifiedDate
Ts,R,N,V_listType
T@"NSString",R,N,V_listID
T@"NSArray",R,N,V_topLevelElementIDs
T@"NSDictionary",R,N,V_secondaryLevelElementIDsByTopLevelElementID
T@"REMObjectID",R,N,V_uncommitedElementsAccountID
T@"NSDate",R,N,V_modifiedDate
initWithPersistentHistoryToken:
T@"NSPersistentHistoryToken",R,N,V_token
isInternalInstall
systemVersionDictionary
systemBuildVersion
daemonVersion:
daemonPid:
daemonStatus:completion:
containerURL:
containerStats:
nukeDatabase:
testInitialSyncWithAccountName:completion:
testReinitializeCloudKitWithAccountIdentifier:completionHandler:
testFlagAccountForInactivatedCalDAVDataMigrationWithAccountIdentifier:completionHandler:
cancelCloudKitSync:
cloudKitStatus:
fireDebugNotificationWithText:identifier:categoryIdentifier:reference:isRemove:completion:
persistenceStoreIDForAccountID:completion:
purgeDeletedObjectsWithCompletionHandler:
lowLevelMarkForDeletionWithObjectID:shouldSetDirtyFlags:shouldRemoveFromParent:completion:
lowLevelUnmarkForDeletionWithObjectID:shouldSetDirtyFlags:completion:
fetchGeofencesWithCompletion:
addGeofenceWithLatitude:longitude:radius:uuid:completion:
removeGeofenceWithUUID:completion:
simulateCoreLocationEnterRegionWithIdentifier:completion:
simulateCoreLocationExitRegionWithIdentifier:completion:
crashDaemonWithMessage:
fetchContactsMatching:completion:
createIsolatedStoreContainerWithCompletion:
destroyIsolatedStoreContainerWithToken:completion:
logStoresDirectoryContents
dataAccessStatusReports:
registerBabysitterWith:completion:
resetBabysitterWithRestrictedAccountID:completion:
downloadContainerWithAccountID:outputDir:completion:
purgeCKRecordWithRecordType:identifier:completion:
fetchAllManualSortHintsWithDetails:completion:
fetchManualSortHintWithListType:listID:completion:
removeManualSortHintWithIdentifier:completion:
resetAllManualSortHintsWithCompletion:
resetManualSortHintWithIdentifier:completion:
resetManualSortHintWithListType:listID:completion:
resetManualSortHintBeforeLastAccessed:completion:
updateManualSortHintWithIdentifier:lastAccessed:completion:
setupManualHashtagLabelUpdater
refreshHashtagLabelsImmediately
handleIncompleteTemplateOperationQueueItemsImmediately
immediatelyCreateOrUpdatePublicLinkOfTemplateWithTemplateObjectID:configuration:completion:
immediatelyRevokePublicLinkOfTemplateWithTemplateObjectID:completion:
synchronous_revertImageAttachmentsToUnDeduped:completion:
validateHashtagLabelsWithoutHashtagWithRepair:completion:
validateHashtagLabelsWithConcealedHashtagsWithRepair:completion:
validateHashtagsWithoutHashtagLabelWithRepair:completion:
validateHashtagsWithMismatchedHashtagsWithRepair:completion:
validateHashtagsWithSharedToMeReminderCKIdentifierAndMismatchedReminderCKIdentifierWithRepair:completion:
validateSharedToMeReminderPlaceholdersWithRepair:completion:
fetchAccountListOrderedIdentifiersWithAccountID:completion:
fetchAllSharedEntitySyncActivities:
addSharedEntitySyncActivityWithActivity:completion:
removeAllSharedEntitySyncActivityWithCompletion:
removeSharedEntitySyncActivityWithUUIDForChangeTracking:completion:
removeSharedEntitySyncActivitiesWithCKIdentifier:completion:
updateMinimumSupportedVersionWithObjectID:minimumSupportedVersion:completion:
updateRemCurrentRuntimeVersionDebuggingOverride:
representationFromData:
initWithPhones:emails:
matchesContactRepresentation:
archivedData
phones
setPhones:
emails
setEmails:
_phones
_emails
T@"NSArray",C,N,V_phones
T@"NSArray",C,N,V_emails
base64EncodedString
dataFromBase64String:
integerValue
fetchStatusReportsWithError:
isDataAccessEnabled
enableDataAccess
disableDataAccess
isBabySitterEnabled
enableBabySitter
disableBabySitter
changeTrackingBehaviors
applyChangeTrackingBehavior:
unapplyChangeTrackingBehavior:
_setBoolValue:forBehaviorKey:
_getBoolForKey:withDefaultValue:
_setIntegerValue:forBehaviorKey:
_getIntegerForKey:withDefaultValue:
_crashDaemonWithMessage:
_debugPerformerWithReason:errorHandler:
T@"REMXPCDaemonController",&,N,V_daemonController
initWithObjectID:accountID:smartListType:
setSortingStyle:
setPinnedDate:
setSmartListType:
setAccountCapabilities:
manualOrdering
setManualOrdering:
setMostRecentTargetTemplateIdentifier:
setShowingLargeAttachments:
setParentAccountID:
setColor:
setBadgeEmblem:
setFilterData:
setIsPersisted:
_showingLargeAttachments
_isPersisted
_pinnedDate
_accountCapabilities
_manualOrdering
_mostRecentTargetTemplateIdentifier
_parentAccountID
_color
_badgeEmblem
_filterData
T@"REMAccountCapabilities",&,N,V_accountCapabilities
T@"NSString",C,N,V_smartListType
T@"REMManualOrdering",&,N,V_manualOrdering
T@"NSString",C,N,VsortingStyle
T@"NSDate",C,N,V_pinnedDate
T@"NSUUID",&,N,V_mostRecentTargetTemplateIdentifier
TB,N,V_showingLargeAttachments
T@"REMObjectID",&,N,V_parentAccountID
T@"NSString",C,N,V_name
T@"REMColor",&,N,V_color
T@"NSString",&,N,V_badgeEmblem
T@"NSData",&,N,V_filterData
TB,N,V_isPersisted
updateAccount:
_updateAccountWithListChangeItem:
addGroupWithName:toAccountGroupContextChangeItem:groupObjectID:
addGroupWithName:toAccountGroupContextChangeItem:
addListWithName:toAccountChangeItem:listObjectID:
addListWithName:toAccountChangeItem:
addListWithName:toListSublistContextChangeItem:listObjectID:
addListWithName:toListSublistContextChangeItem:
addListUsingTemplate:toAccountChangeItem:
addListUsingPublicTemplateWithREMListRepresentation:toAccountChangeItem:
updateList:
_updateListStorage:accountCapabilities:
_updateListWithReminderChangeItem:
addCustomSmartListWithName:toAccountChangeItem:smartListObjectID:
updateSmartList:
addTemplateWithName:configuration:toAccountChangeItem:templateObjectID:
addTemplateWithName:configuration:toAccountChangeItem:
updateTemplate:
addReminderWithTitle:toListChangeItem:reminderObjectID:
addReminderWithTitle:toListChangeItem:
addReminderWithTitle:toReminderSubtaskContextChangeItem:reminderObjectID:
addReminderWithTitle:toReminderSubtaskContextChangeItem:
updateReminder:
_updateResolutionTokenMapForChangeItem:
_willSaveAccountChangeItems:listChangeItems:smartListChangeItems:templateChangeItems:reminderChangeItems:
saveWithQueue:completion:
saveSynchronouslyWithError:
notifyChangeDelegateForSaveSuccess:
_changeItemsAreAllEmpty
_prepareSave:
performPreSaveActions
performRecurrenceClone
_trackedAccountChangeItemForObjectID:
_trackAccountChangeItem:
_updateTrackedAccountChangeItem:withObjectID:
_trackedListChangeItemForObjectID:
_trackListChangeItem:
_updateTrackedListChangeItem:withObjectID:
_trackedSmartListChangeItemForObjectID:
_trackSmartListChangeItem:
_updateTrackedSmartListChangeItem:withObjectID:
_trackedTemplateChangeItemForObjectID:
_trackTemplateChangeItem:
_trackedReminderChangeItemForObjectID:
_trackReminderChangeItem:
_updateTrackedReminderChangeItem:withObjectID:
_trackAccountCapabilities:forObjectID:
_trackedAccountCapabilitiesForObjectID:
_copyReminder:toListChangeItem:
_copyReminder:toReminderSubtaskContextChangeItem:
_copyReminderChangeItem:toListChangeItem:
_copyReminderChangeItem:toReminderSubtaskContextChangeItem:
trackedTemplateChangeItems
saveRequestChangeEvents
setSaveRequestChangeEvents:
isSaved
setSaved:
trackedAccountChangeItems
trackedListChangeItems
trackedSmartListChangeItems
trackedReminderChangeItems
trackedAccountCapabilities
updateLastModifiedDates
setUpdateLastModifiedDates:
saveIsNoopIfNoChangedKeys
setSaveIsNoopIfNoChangedKeys:
cloneCompletedRecurrentRemindersAtSave
setCloneCompletedRecurrentRemindersAtSave:
applyCRDTsWithoutMerging
setApplyCRDTsWithoutMerging:
syncToCloudKit
setSyncToCloudKit:
notifyChangeDelegate
setNotifyChangeDelegate:
_saved
_updateLastModifiedDates
_saveIsNoopIfNoChangedKeys
_cloneCompletedRecurrentRemindersAtSave
_applyCRDTsWithoutMerging
_syncToCloudKit
_trackedTemplateChangeItems
_saveRequestChangeEvents
_trackedAccountChangeItems
_trackedListChangeItems
_trackedSmartListChangeItems
_trackedReminderChangeItems
_trackedAccountCapabilities
_notifyChangeDelegate
T@"NSMutableDictionary",R,N,V_trackedTemplateChangeItems
T@"NSMutableSet",&,N,V_saveRequestChangeEvents
saved
TB,N,GisSaved,V_saved
T@"NSMutableDictionary",R,N,V_trackedAccountChangeItems
T@"NSMutableDictionary",R,N,V_trackedListChangeItems
T@"NSMutableDictionary",R,N,V_trackedSmartListChangeItems
T@"NSMutableDictionary",R,N,V_trackedReminderChangeItems
T@"NSMutableDictionary",R,N,V_trackedAccountCapabilities
TB,N,V_updateLastModifiedDates
TB,N,V_saveIsNoopIfNoChangedKeys
TB,N,V_cloneCompletedRecurrentRemindersAtSave
TB,N,V_applyCRDTsWithoutMerging
TB,N,V_syncToCloudKit
T@"<REMSaveRequestNotifyChangeDelegate>",W,N,V_notifyChangeDelegate
_addLocalAccountWithName:accountObjectID:
_addLocalAccountWithName:
_addCalDavAccountWithName:accountObjectID:
_addCalDavAccountWithName:
_addExchangeAccountWithName:accountObjectID:
_addExchangeAccountWithName:
_addAccountWithType:name:accountObjectID:
_addAccountWithType:name:
_addTestOnlyLocalInternalAccountWithName:accountObjectID:
_addTestOnlyLocalInternalAccountWithName:
_addTestOnlyPrimaryCKAccountWithName:accountObjectID:
_addTestOnlyPrimaryCKAccountWithName:
_addTestOnlyExtraPrimaryCKAccountWithName:accountObjectID:
_addTestOnlyExtraPrimaryCKAccountWithName:
_addTestOnlyNonPrimaryCKAccountWithName:accountObjectID:
_addTestOnlyNonPrimaryCKAccountWithName:
__addAccountWithType:name:accountObjectID:
__addAccountWithType:name:
addCustomSmartListWithName:toListSublistContextChangeItem:smartListObjectID:
objectIDWithUUID:entityName:
objectIDWithURL:
stringRepresentation
urlRepresentation
redactedDescription
T@"NSUUID",R,N,V_uuid
T@"NSString",R,N,V_entityName
T@"NSURL",R,N
initWithFetchExecutor:
storagesAndParentFetchRequest
storagesOnlyFetchRequest
countOnlyFetchRequest
objectIDsOnlyFetchRequest
metadataFetchRequest
fetchRequestWithFetchResultToken:
copyWithType:
fetchLimit
setFetchLimit:
fetchExecutor
setFetchExecutor:
_fetchLimit
_fetchExecutor
T@"_REMFetchExecutor",&,N,V_fetchExecutor
TQ,N,V_fetchLimit
metadataFromFetchResult:inStore:error:
reminderIDUUIDStringsJSONDataFromReminderIDsMergeableOrdering:error:
reminderIDsMergeableOrderingFromReminderIDUUIDStringsJSONData:error:
_forceDisableFullRemindersSorting
set_forceDisableFullRemindersSorting:
initWithObjectID:accountID:name:
initWithObjectID:accountID:name:isGroup:reminderIDsMergeableOrdering:
initWithObjectID:accountID:name:isGroup:reminderIDsMergeableOrderingData:
ekColor
reminderIDsMergeableOrdering
setReminderIDsMergeableOrdering:
hasDeserializedReminderIDsMergeableOrdering
isGroup
setIsGroup:
reminderIDsMergeableOrderingData
setReminderIDsMergeableOrderingData:
reminderIDsOrderingHints
setReminderIDsOrderingHints:
reminderIDsToUndelete
setReminderIDsToUndelete:
childListIDsToUndelete
setChildListIDsToUndelete:
childSmartListIDsToUndelete
setChildSmartListIDsToUndelete:
remindersICSDisplayOrderChanged
setRemindersICSDisplayOrderChanged:
templateID
setTemplateID:
sharedOwnerName
setSharedOwnerName:
sharedOwnerAddress
setSharedOwnerAddress:
sharingStatus
setSharingStatus:
sharees
setSharees:
sharedOwnerID
setSharedOwnerID:
lastUserAccessDate
setLastUserAccessDate:
calDAVNotifications
setCalDAVNotifications:
daExternalIdentificationTag
setDaExternalIdentificationTag:
daBulkRequests
setDaBulkRequests:
daDisplayOrder
setDaDisplayOrder:
setDaIsEventOnlyContainer:
daIsReadOnly
setDaIsReadOnly:
daIsImmutable
setDaIsImmutable:
daIsNotificationsCollection
setDaIsNotificationsCollection:
isPlaceholder
setIsPlaceholder:
currentUserShareParticipantID
setCurrentUserShareParticipantID:
_reminderIDsMergeableOrdering
_isGroup
_remindersICSDisplayOrderChanged
_daIsReadOnly
_daIsImmutable
_daIsNotificationsCollection
_isPlaceholder
_reminderIDsMergeableOrderingData
_reminderIDsOrderingHints
_reminderIDsToUndelete
_childListIDsToUndelete
_childSmartListIDsToUndelete
_templateID
_sharedOwnerName
_sharedOwnerAddress
_sharingStatus
_sharees
_sharedOwnerID
_lastUserAccessDate
_calDAVNotifications
_daExternalIdentificationTag
_daBulkRequests
_daDisplayOrder
_currentUserShareParticipantID
TB,N,V_isGroup
T@"NSOrderedSet",&,N
T@"NSData",&,N,V_reminderIDsMergeableOrderingData
T@"NSDictionary",&,N,V_reminderIDsOrderingHints
T@"NSSet",&,N,V_reminderIDsToUndelete
T@"NSSet",&,N,V_childListIDsToUndelete
T@"NSSet",&,N,V_childSmartListIDsToUndelete
TB,N,V_remindersICSDisplayOrderChanged
T@"REMObjectID",&,N,V_templateID
T@"NSString",C,N,V_sharedOwnerName
T@"NSString",C,N,V_sharedOwnerAddress
Tq,N,V_sharingStatus
T@"NSArray",&,N,V_sharees
T@"REMObjectID",&,N,V_sharedOwnerID
T@"NSDate",C,N,V_lastUserAccessDate
T@"NSArray",&,N,V_calDAVNotifications
T@"NSString",&,N,V_daExternalIdentificationTag
T@"NSDictionary",&,N,V_daBulkRequests
Tq,N,V_daDisplayOrder
TB,N,V_daIsEventOnlyContainer
TB,N,V_daIsReadOnly
TB,N,V_daIsImmutable
TB,N,V_daIsNotificationsCollection
TB,N,V_isPlaceholder
T@"NSString",C,N,V_currentUserShareParticipantID
andPredicateDescriptorWithDescriptors:
orPredicateDescriptorWithDescriptors:
predicateDescriptorForRemindersWithListID:
predicateDescriptorForRemindersWithParentReminderID:
predicateDescriptorForRemindersWithObjectIDs:
predicateDescriptorForRemindersWithDueDateOnOrBefore:
predicateDescriptorForRemindersWithDueDateOnOrAfter:
predicateDescriptorForRemindersWithDueDateBetween:and:
predicateDescriptorForRemindersWithDisplayDateOnOrBefore:
predicateDescriptorForRemindersWithDisplayDateOnOrAfter:
predicateDescriptorForRemindersWithDisplayDateBetween:and:
predicateDescriptorForRemindersWithCompleted:
predicateDescriptorForRemindersWithTitleEquals:
predicateDescriptorForRemindersWithTitleContains:
predicateDescriptorForRemindersWithTitleBeginsWith:
predicateDescriptorForRemindersWithTitleEndsWith:
initWithReminderPredicateDescriptor:
startingDueDate
setStartingDueDate:
endingDueDate
setEndingDueDate:
descriptors
setDescriptors:
text
setText:
textMatching
setTextMatching:
_startingDueDate
_endingDueDate
_descriptors
_text
_textMatching
T@"NSDate",&,N,V_startingDueDate
T@"NSDate",&,N,V_endingDueDate
TB,N,V_completed
T@"NSArray",&,N,V_descriptors
T@"NSString",&,N,V_text
Tq,N,V_textMatching
remStorageClasses
initWithTitle:dueAfter:dueBefore:isCompleted:hasLocation:location:
dueAfter
dueBefore
hasLocation
location
_dueAfter
_dueBefore
_hasLocation
_location
T@"NSString",R,N,V_title
T@"NSDate",R,N,V_dueAfter
T@"NSDate",R,N,V_dueBefore
T@"NSNumber",R,N,V_completed
T@"NSNumber",R,N,V_hasLocation
T@"NSString",R,N,V_location
fetchRequestWithPredicateDescriptor:sortDescriptors:
siriFoundInAppsListID
localAccountDefaultListID
isSharedWithShareeCount:sharingStatus:
isOwnedByMeWithSharingStatus:
initWithStore:account:storage:
appearanceContext
sublistContext
calDAVNotificationContext
shareeContext
reminderIDsOrdering
canBeShared
canBeIncludedInGroup
isShared
isOwnedByMe
isSharedToMe
fetchRemindersWithError:
fetchRemindersAndSubtasksWithError:
fetchRemindersCountWithError:
formattedSharedOwnerName
sharingStatusText
fetchReminderWithExternalIdentifier:error:
fetchRemindersWithExternalIdentifiers:error:
hack_overrideReminderIDsOrderingWithOrderedObjectIDs:
T@"NSDictionary",R,D,N
T@"REMListStorage",C,N,V_storage
T@"NSOrderedSet",R,D,N
T@"NSDate",R,C,D,N
T@"REMListCalDAVNotificationContext",R,N
T@"REMListShareeContext",R,N
T@"REMListAppearanceContext",R,N
T@"REMListSublistContext",R,N
initWithList:
list
setList:
_list
T@"REMList",&,N,V_list
shareesExcludingOwner
sharedOwner
_sharedOwner
T@"REMSharee",R,N,V_sharedOwner
nextThirdsHourFromHour:
nextThirdsHour:
listFromSerializedData:replica:
initWithDocument:objectID:
copyForReplica:
addReminder:
reminderIDsProxy
countOfReminderIDs
objectInReminderIDsAtIndex:
indexInReminderIDsOfObject:
insertObject:inReminderIDsAtIndex:
removeObjectFromReminderIDsAtIndex:
_orderedSet
delegate
setDelegate:
replica
_reminderIDsStorage
_delegate
_replica
_remObjectID
T@"NSUUID",R,N,V_replica
T@"REMObjectID",&,N,V_remObjectID
T@"NSObject<REMCRReminderIDListDelegate>",W,N,V_delegate
T@"NSMutableOrderedSet",R,N
initWithReplicaIDSource:string:
mergeableString
attributedString
mutableDocument
mergedWithDocument:error:
T@"TTMergeableStringVersionedDocument",&,N,V_document
T@"NSAttributedString",R,N
T@"TTMergeableAttributedString",R,N
initWithReplicaIDSource:
initWithReplicaIDSource:immutableDocumentToEdit:
immutableDocument
wipeAndReplaceWithString:
_test_insertString:atIndex:
documentFromSerializedData:replicaIDSource:forKey:ofObjectID:
rem_isEquivalentTo:
remDebugTimeZone_LosAngeles
remDebugTimeZone_NewYork
remDebugTimeZone_GMT
storeQueue
_shouldUseCentralizedDataPath
applicationDocumentsURL
locationBundleURL
setApplicationDocumentsURL:
reminderDataURL
URLForGroupContainerWithIdentifier:
attributesForGroupContainerDirectory
mainContainerURL
mainContainerBackupURL
pptSentinelURLInContainerURL:
urlForIsolatedContainerWithIdentifier:
containerURLForMLModel
MLModelURL
temporaryMLModelURL
_displayDateWithDueDateComponents:alarms:hasAlarmDateComponents:floatingDateComponents:nonFloatingDateComponents:displayDateUtils:
displayDateWithDueDateComponents:alarms:
updateDisplayDateWithDueDateComponents:alarm:alarmsProviding:
delegete
setDelegete:
isCacheSet
setIsCacheSet:
hasAlarmDateComponents
setHasAlarmDateComponents:
floatingDateComponents
setFloatingDateComponents:
nonFloatingDateComponents
setNonFloatingDateComponents:
_isCacheSet
_hasAlarmDateComponents
_delegete
_floatingDateComponents
_nonFloatingDateComponents
TB,N,V_isCacheSet
TB,N,V_hasAlarmDateComponents
T@"NSDateComponents",&,N,V_dueDateComponents
T@"NSDateComponents",&,N,V_floatingDateComponents
T@"NSDateComponents",&,N,V_nonFloatingDateComponents
T@"<REMDisplayDateUtilsDelegate>",W,N,V_delegete
isSubContainer
removeFromParentWithAccountChangeItem:
parentOwnerID
setParentOwnerID:
parentSubContainerID
setParentSubContainerID:
initWithCustomSmartListObjectID:insertIntoAccountChangeItem:
initWithCustomSmartListObjectID:insertIntoAccountChangeItem:withParentListChangeItem:
initWithCustomSmartListObjectID:insertIntoListSublistContextChangeItem:
assertIsCustomSmartListWithAction:
setIsPinned:
removeFromParentAllowingUndoWithAccountChangeItem:
parentAccount
_parentAccount
T@"REMAccount",R,N,V_parentAccount
T@"REMSmartListStorage",R,C,N,V_storage
T@"REMSmartListCustomContextChangeItem",R,N
initWithSmartListChangeItem:
smartListChangeItem
setSmartListChangeItem:
_smartListChangeItem
T@"REMSmartListChangeItem",&,N,V_smartListChangeItem
T@"REMColor",C,N
fetchAllAccountsWithError:
fetchAllAccountsForAccountManagementWithError:
fetchAllAccountsForDumpingWithError:
accountsFromStorages:
initWithAccountIDs:
accountIDs
_accountIDs
T@"NSArray",R,N,V_accountIDs
initWithStorages:
initWithPurpose:
purpose
_purpose
Tq,R,N,V_purpose
initWithFetchREMObjectIDOnly:
fetchREMObjectIDOnly
_fetchREMObjectIDOnly
TB,R,N,V_fetchREMObjectIDOnly
initWithFetchOption:
fetchOption
_fetchOption
Tq,R,N,V_fetchOption
initWithExternalIdentifiers:
storeProperty:forKey:
storedPropertyForKey:
valueStorage
setValueStorage:
_valueStorage
T@"NSMutableDictionary",&,N,V_valueStorage
initWithEmblem:
initWithEmoji:
initWithRawValue:
rawValue
_isSingleCharacterEmoji:
_emojiFromRawString:
_isJSONString:
emblem
setEmblem:
emoji
setEmoji:
T@"NSString",C,N,Vemblem
T@"NSString",C,N,Vemoji
rem_dataWithRandomBytesWithLength:
initWithObjectID:name:insertIntoAccountChangeItem:
initWithObjectID:name:insertIntoAccountChangeItem:isGroup:withParentList:
initWithObjectID:name:insertIntoAccountChangeItem:isGroup:
initWithObjectID:name:insertIntoListSublistContextChangeItem:
removeFromParent
removeFromAccountAllowingUndo
removeFromParentAllowingUndo
undeleteReminderWithID:usingUndo:
optimisticallyInsertReminderIDToOrderingForReminderChangeItemBeingSaved:
undeleteRemindersWithoutUndoWithIDs:isCalDAV:
insertReminderChangeItem:adjacentToReminderChangeItem:isAfter:withParentReminderChangeItem:
lowLevelAddReminderIDToOrdering:withParentReminderChangeItem:
lowLevelRemoveReminderIDFromOrdering:
_lowLevelAddReminderIDToOrdering:relativeToSiblingID:isAfter:
_reassignReminderChangeItem:withParentReminderChangeItem:
_lowLevelAddReminderChangeItemToOrdering:atIndexOfSibling:isAfter:withParent:
_editReminderIDsOrderingUsingBlock:
T@"NSDictionary",&,D,N
T@"REMListStorage",R,C,N,V_storage
T@"REMListCalDAVNotificationContextChangeItem",R,N
T@"REMListShareeContextChangeItem",R,N
T@"REMListAppearanceContextChangeItem",R,N
T@"REMListSublistContextChangeItem",R,N
initWithListChangeItem:
setListChangeItem:
T@"REMListChangeItem",&,N,V_listChangeItem
_insertMergeableOrderingNode:adjacentToMergeableOrderingNode:isAfter:
undeleteChildListWithID:usingUndo:
undeleteChildSmartListWithID:usingUndo:
addCalDAVNotificationWithUUIDString:hostURL:externalIdentifier:externalModificationTag:
_addCalDAVNotification:
removeCalDAVNotication:
clearCalDAVNotifications
updateCalDAVNotification:withBlock:
addSharee:
addShareeWithDisplayName:firstName:middleName:lastName:namePrefix:nameSuffix:nickname:address:status:accessLevel:
addShareeWithDisplayName:firstName:lastName:address:status:accessLevel:
addShareeWithPersonNameComponents:address:status:accessLevel:
removeSharee:
removeAllSharees
copyListDataFrom:
_testingOnly_setReminderIDsMergeableOrder:
_testingOnly_listShareeContextChangeItem
fetchTemplatesInAccount:error:
fetchTemplatesWithObjectIDs:error:
templatesFromTemplateStorages:store:
T@"NSSet",R,N,V_objectIDs
initWithTemplateStorages:
templateStorages
_templateStorages
T@"NSArray",R,N,V_templateStorages
setConfiguration:
setUnsavedManualOrdering:
setMostRecentPublicLinkUpdateRequestDate:
setPublicLink:
_sortingStyle
_unsavedManualOrdering
_mostRecentPublicLinkUpdateRequestDate
_publicLink
T@"REMTemplateConfiguration",&,N,V_configuration
T@"NSString",C,N,V_badgeEmblem
T@"NSString",C,N,V_sortingStyle
T@"REMManualOrdering",&,N,V_unsavedManualOrdering
T@"NSDate",&,N,V_mostRecentPublicLinkUpdateRequestDate
T@"REMTemplatePublicLink",&,N,V_publicLink
exportICSCalendarFromReminders:
exportICSCalendarFromReminders:exportingOption:
_icsCalendarItemsFromReminders:exportingOption:
icsTodoFromReminder:
icsTodoFromReminder:exportingOption:
_updateICSComponentWithReminder:icsCalendarItem:
fetchRequestForRemindersListID:
fetchRequestForRemindersListID:withSortDescriptors:
fetchRequestForScheduledRemindersWithDueDateOnOrAfter:
initWithStore:list:storage:
parentReminder
setParentReminder:
_parentReminder
T@"REMReminder",&,N,V_parentReminder
T@"REMReminderStorage",R,N,V_storage
T@"REMCRMergeableStringDocument",R,D,N
T@"REMContactRepresentation",R,D,N
TQ,R,D,N
T@"NSURL",R,D,N
T@"REMUserActivity",R,D,N
T@"REMReminderAssignmentContext",R,N
T@"REMReminderHashtagContext",R,N
T@"REMList",R,N,V_list
T@"NSAttributedString",R,C,N
TB,R,D,N,GisCompleted
T@"NSDateComponents",R,C,D,N
T@"REMReminderAttachmentContext",R,N
T@"REMReminderSubtaskContext",R,N
T@"REMReminderFlaggedContext",R,N
initWithReminder:
hasSubtasksWithError:
fetchRemindersForMovingWithError:
fetchObjectIDsOfCompletedSubtasksWithError:
fetchObjectIDsOfUnsupportedSubtasksWithError:
reminder
setReminder:
_reminder
T@"REMReminder",&,N,V_reminder
T@"REMReminder",R,N
T@"REMReminder",W,N,V_reminder
initWithUndoBlocks:
undoBlocks
_undoBlocks
T@"NSArray",R,N,V_undoBlocks
addUndoBlock:
immutableCopy
T@"NSMutableArray",R,N,V_undoBlocks
fetchListsCountWithError:
fetchListsWithCustomBadgeCountWithError:
fetchUncompletedRemindersCountWithError:
fetchCompletedRemindersCountWithError:
fetchCompletedRemindersCountInList:error:
fetchCustomSmartListsCountWithError:
fetchHashtagsCountWithError:
userActivityWithUserActivity:completion:
userActivityWithDictionaryData:error:
dataFromUserActivity:
stringForActivityType:
initWithType:storage:
initWithUniversalLink:
initWithUserActivity:
initWithUserActivityData:
initWithSiriIntent:
archivedDictionaryData
universalLink
userActivityData
siriIntent
debugDescriptionDetails
T@"NSData",R,N,V_storage
nullifiedAssignmentOriginatorID
initShareeWithObjectID:accountID:listID:displayName:firstName:middleName:lastName:namePrefix:nameSuffix:nickname:address:status:accessLevel:
initShareeWithObjectID:accountID:listID:displayName:firstName:lastName:address:status:accessLevel:
initShareeWithObjectID:accountID:listID:personNameComponents:address:status:accessLevel:
isEqualToSharee:
personNameComponents
formattedName
shortName
formattedNameWithStyle:
firstName
middleName
lastName
namePrefix
nameSuffix
nickname
accessLevel
_firstName
_middleName
_lastName
_namePrefix
_nameSuffix
_nickname
_accessLevel
T@"NSString",R,N,V_displayName
T@"NSString",R,N,V_firstName
T@"NSString",R,N,V_middleName
T@"NSString",R,N,V_lastName
T@"NSString",R,N,V_namePrefix
T@"NSString",R,N,V_nameSuffix
T@"NSString",R,N,V_nickname
T@"NSPersonNameComponents",R,N
T@"NSString",R,N,V_address
Tq,R,N,V_accessLevel
rem_tidyFormattedNameString
mapWithData:
resolutionTokenMapWithJSONData:keyMap:
initWithMap:
updateForKey:
initTokenWithDefaultValueIfNecessaryForKey:
compare:forKey:
compareAndMergeWithMap:forKey:
mergeWithMap:forKey:
forceMergeFromMap:forKey:
getTokenForKey:
setToken:forKey:
getTokenKeys
setMap:
_map
T@"NSMutableDictionary",&,N,V_map
encodeExternalIdentifierForMarkedForDeletionObject:
decodeExternalIdentifierForMarkedForDeletionObject:
shouldUseExternalIdentifierAsDeletionKeyWithAccountType:
listsFromAccountStorages:listStorages:store:requestedListIDs:
listsFromAccountStorages:listStorages:store:requestedExternalIdentifiers:
listsFromAccountStorages:listStorages:store:
fetchListsInAccount:error:
fetchListsInGroup:error:
fetchDefaultListRequiringCloudKitWithAccountID:error:
fetchListsIncludingSpecialContainersWithObjectIDs:error:
fetchListIncludingSpecialContainerWithExternalIdentifier:inAccount:error:
fetchListsWithExternalIdentifiers:inAccount:error:
fetchListIncludingConcealedWithObjectID:includeMarkedForDeletionOnly:error:
fetchAllListsWithExternalIdentifier:inAccount:error:
initWithDebugUseInMemoryPreferredDefaultListStorage:
debug_useInMemoryPreferredDefaultListStorage
setDebug_useInMemoryPreferredDefaultListStorage:
_debug_useInMemoryPreferredDefaultListStorage
TB,N,V_debug_useInMemoryPreferredDefaultListStorage
initWithAccountObjectID:debugUseInMemoryPreferredDefaultListStorage:
includeMarkedForDeletionOnly
setIncludeMarkedForDeletionOnly:
_includeMarkedForDeletionOnly
TB,N,V_includeMarkedForDeletionOnly
initWithExternalIdentifiers:accountObjectID:
initWithExternalIdentifier:accountObjectID:
initWithAccountStorages:listStorages:objectIDs:
initWithTemplateObjectID:
templateObjectID
_templateObjectID
T@"REMObjectID",R,N,V_templateObjectID
rem_didChooseToMigrate
rem_didFinishMigration
rem_isManagedAppleID
rem_isPrimaryAppleAccount
rem_eligibleForAutoCloudKitMigration
rem_isEligibleForCloudKitReminders
isHashtag:equalToModelComparable:
isEqualToModelComparable:
T@"NSString",C,N,V_objectIdentifier
T@"CRTTCompatibleDocument",&,N
initWithCRCoder:string:
encodeWithCRCoder:string:
encodedDataWithDocument:
encodeDocument:
setTypeIndexForCurrentCustomObjectIfNecessary:
encodeObject:forKey:
encodeObject:forObjectID:
encodeString:forKey:
encodeUUID:forKey:
encodeDouble:forKey:
encodeInt32:forKey:
encodeInt64:forKey:
encodeUInt32:forKey:
encodeUInt64:forKey:
encodeUUIDIndexFromUUID:
mutableObjectIDForKey:
currentCustomObjectForEncoding
currentDocumentObjectForEncoding
indexForKey:
uuidSet
setUuidSet:
keySet
setKeySet:
encodedObjects
setEncodedObjects:
currentDocument
setCurrentDocument:
.cxx_construct
currentDocObjectEncodingStack
_uuidSet
_keySet
_encodedObjects
_currentDocument
T@"NSMutableOrderedSet",&,N,V_uuidSet
T@"NSMutableOrderedSet",&,N,V_keySet
T@"NSMutableOrderedSet",&,N,V_encodedObjects
T^v,N,V_currentDocument
temporaryElementWithValue:
initWithValue:timestamp:
value
setValue:
_value
T@"<CRDataType>",&,N,V_value
T@"CRVectorTimestamp",&,N,V_timestamp
countByEnumeratingWithState:objects:count:
initWithDocument:
encodeWithCRCoder:dictionary:
encodeWithCRCoder:dictionary:elementValueCoder:
initWithCRCoder:dictionary:
initWithCRCoder:dictionary:elementValueDecoder:
keyEnumerator
enumerateKeysObjectsAndTimestampsUsingBlock:
objectForKey:
setObject:forKey:
objectForKeyedSubscript:
setObject:forKeyedSubscript:
removeObjectForKey:
removeAllObjects
mergeWithDictionary:
contents
setContents:
removeClock
setRemoveClock:
_contents
_removeClock
T@"NSMapTable",&,N,V_contents
Tq,N,V_removeClock
T@"CRDocument",W,N,V_document
clock
setClock:
subclock
setSubclock:
_clock
_subclock
TQ,N,V_clock
TQ,N,V_subclock
TTCompare:
clockElementForUUID:
clockForUUID:
subclockForUUID:
setClock:forUUID:
setClock:subclock:forUUID:
incrementClockForUUID:
allUUIDs
sortedUUIDs
compareTo:
mergeWithTimestamp:
initWithCapacity:
initWithTimestamps:
isDocumentShared
clockElementForUUID:atIndex:
clockForUUID:atIndex:
setClock:forUUID:atIndex:
setClock:subclock:forUUID:atIndex:
timestamps
setTimestamps:
_timestamps
T@"NSArray",&,N,V_timestamps
TT_gzipInflate
TT_gzipDeflate
unserialisedReplicaID
initWithReplicaID:
initWithReplicaID:asFragment:
length
insertString:atIndex:
replaceCharactersInRange:withAttributedString:
deleteCharactersInRange:
insertAttributedString:atIndex:
beginEditing
endEditing
replicaUUIDForCharacterAtIndex:
selectionForCharacterRanges:
selectionForCharacterRanges:selectionAffinity:
characterRangesForSelection:
characterRangesForSelection:selectedSubstringsBlock:
shouldInvalidateCachedSubstringsWithTimestamp:
resetLocalReplicaClocksToTimestampValues
_testSetTextTimestamp:
isFragment
startNodes
endNodes
updateTimestampsInRange:
deleteSubstrings:withCharacterRanges:
insertAttributedString:after:before:
moveRange:toIndex:
getSubstrings:forCharacterRange:
getSubstrings:inOrderedSubstrings:forCharacterRange:
getSubstringBeforeTopoID:
getSubstrings:forTopoIDRange:
getCharacterRanges:forSubstrings:
getCharacterIndexForCharID:
enumerateSubstrings:
substring:modifiedAfter:
enumerateRangesModifiedAfter:usingBlock:
textEitherSideOfSelectionAnchor:wasModifiedAfter:
selection:wasModifiedAfter:
splitTopoSubstring:atIndex:
orderedSubstrings
updateCache
invalidateCache
updateAttributedStringAfterMerge
updateSubstringIndexes
coalesce
updateTopoIDRange:toNewRangeID:
cleanupObjectsNeedingUpdatedRanges
generateIdsForLocalChanges
generateIdsForLocalChangesSafeForSharedTimestamp:
canMergeString:
updateClock
check:
checkTimestampLogStyleErrors:
dumpMergeData:
mergeWithString:
mergeWithString:mergeTimestamps:
sortSplitNodes
traverseUnordered:
graphIsEqual:
dotDescription:
setReplicaUUID:
hasLocalChanges
setHasLocalChanges:
objectsNeedingUpdatedRanges
setAttributedString:
replicaTextClock
replicaStyleClock
_startNodes
_endNodes
_orderedSubstrings
_unserializedClock
_editCount
_cacheInvalid
_updateRangeBlock
_hasLocalChanges
_replicaUUID
_objectsNeedingUpdatedRanges
_attributedString
_replicaTextClock
_replicaStyleClock
T@"TTVectorMultiTimestamp",&,N,V_timestamp
TB,N,V_hasLocalChanges
T@"NSUUID",&,N,V_replicaUUID
T@"NSMutableAttributedString",&,N,V_attributedString
TQ,R,N,V_replicaTextClock
TQ,R,N,V_replicaStyleClock
T@"NSObject<TTMergeableStringDelegate>",W,N,V_delegate
T@"NSHashTable",R,N,V_objectsNeedingUpdatedRanges
edited:range:changeInLength:
addUndoCommand:
textAttachmentAtIndex:
indexOfObject:
removeLastObject
replaceObjectAtIndex:withObject:
objectAtIndexedSubscript:
nsArray
T@"TTMergeableAttributedString",R,N,V_contents
T@"NSObject<CRUndoDelegate>",W,N,V_delegate
hasTopoIDsThatCanChange
selectionRanges
initWithData:
initWithArchive:
saveToArchive:
serialize
selectionAffinity
setSelectionAffinity:
_selectionRanges
_selectionAffinity
TQ,N,V_selectionAffinity
serializationVersion
versionedDocumentSerializationVersion
loadData:
loadArchive:
loadDocumentArchive:
futureVersionCount
mergeVersion:fromData:
serializeCurrentVersion:
saveCurrentVersion:
mergeWithVersionedDocument:
maxDocumentVersion
documentArchive
setDocumentArchive:
_documentArchive
T^v,N,V_documentArchive
initWithData:andCapacity:
initWithArchive:andCapacity:
textAlignmentForParagraphStyleAlignment:
paragraphStyleAlignmentForTextAlignment:
applyToString:
addToGroup:
closeGroup
addCommand:
addSeenRange:
seen
setSeen:
commands
setCommands:
_seen
_commands
T@"NSMutableDictionary",&,N,V_seen
T@"NSMutableArray",&,N,V_commands
initWithVersion:startVersion:rootObject:replica:
mergeResultForMergingWithDocument:
mergeTimestampWithDocument:
realizeLocalChanges
initWithVersion:startVersion:rootObject:replica:topoTimestamp:
sharedTopotextTimestamp
setSharedTopotextTimestamp:
stringsWithClocksNeedingUpdating
setStringsWithClocksNeedingUpdating:
stringsWithClocksToResetAfterRealizingLocalChanges
setStringsWithClocksToResetAfterRealizingLocalChanges:
_sharedTopotextTimestamp
_stringsWithClocksNeedingUpdating
_stringsWithClocksToResetAfterRealizingLocalChanges
T@"TTCRVectorMultiTimestamp",&,N,V_sharedTopotextTimestamp
T@"NSMutableArray",&,N,V_stringsWithClocksNeedingUpdating
T@"NSMutableArray",&,N,V_stringsWithClocksToResetAfterRealizingLocalChanges
initWithArchive:andReplicaID:withOrderedSubstrings:timestamp:
i_saveDeltasSinceTimestamp:toArchive:
saveDeltaSinceTimestamp:toArchive:
writingDirectionForAttribute:
attributeForWritingDirection:
attributesForRun:
saveAttributes:toArchive:
saveAttributesOfString:toArchive:
initWithTTArray:contents:document:
_addObject:
_insertObject:atIndex:
_insertObject:withIdentifier:atIndex:forUndo:
removeObjectAtIndex:forUndo:
firstIndexOf:fromIndex:
array
setArray:
moveClock
setMoveClock:
_moveClock
_array
T@"TTArray",&,N,V_array
T@"CRDictionary",&,N,V_contents
TB,N,V_moveClock
dependency
setDependency:
T@?,C,N,Vblock
T@,W,N,Vdependency
T@,W,N,Vvalue
decodedDocumentFromData:replica:
willModifySelfInInitForClass:
allocedObjectAtIndex:outNeedsInit:
decodeDocumentFromData:replica:
currentObjectIDForKey:
decodeObjectForKey:
decodeObjectForProtobufObjectID:
decodeStringForKey:
decodeUUIDForKey:
decodeDoubleForKey:
decodeInt32ForKey:
decodeInt64ForKey:
decodeUInt32ForKey:
decodeUInt64ForKey:
decodeUUIDFromUUIDIndex:
hasDecodableValueForKey:
addDecoderCompletionHandler:dependency:for:
sortCompletionHandlers
currentDocumentObjectForDecoding
setReplica:
allocedDocObjects
setAllocedDocObjects:
currentDocObjectForDecodingPtr
setCurrentDocObjectForDecodingPtr:
typeSetForDecoding
setTypeSetForDecoding:
uuidArray
setUuidArray:
completionHandlers
setCompletionHandlers:
_allocedDocObjects
_currentDocObjectForDecodingPtr
_typeSetForDecoding
_uuidArray
_completionHandlers
T@"NSUUID",C,N,V_replica
T@"NSMutableArray",&,N,V_allocedDocObjects
Tr^v,N,V_currentDocObjectForDecodingPtr
T@"NSMutableOrderedSet",&,N,V_typeSetForDecoding
T@"NSMutableArray",&,N,V_uuidArray
T@"NSMutableArray",&,N,V_completionHandlers
encodeWithCRCoder:set:
encodeWithCRCoder:set:elementValueCoder:
initWithCRCoder:set:
initWithCRCoder:set:elementValueDecoder:
member:
containsObject:
allObjects
anyObject
addObserver:
removeObserver:
setUpdated:
removeObject:
setObject:
dictionary
setDictionary:
setObservers:
_dictionary
T@"CRDictionary",&,N,V_dictionary
T@"NSHashTable",&,N,V_observers
T@"CRDocument",W,N
T@"NSArray",R,C
initWithContents:document:
initWithContents:timestamp:document:
initWithProtobufRegisterLatest:decoder:
encodeIntoProtobufRegisterLatest:coder:
_setContents:
isEqualContents:
mergeWithRegisterLatest:
T@"CRTimestamp",&,N,V_timestamp
initWithValues:
allContents
mergeWithRegisterMultiValue:
values
setValues:
cachedValues
setCachedValues:
_values
_cachedValues
T@"CRSet",&,N,V_values
T@"NSSet",&,N,V_cachedValues
rem_copyWithReplicaIDForNewEdits:
rem_isEqual:
defaultParagraphStyle
paragraphStyleNamed:
isEqualToParagraphStyle:
isEqualToModelParagraphStyle:
setStyle:
isUnknownStyle
canIndent
isList
isHeader
preferSingleLine
wantsFollowingNewLine
uniqueToLine
trackingUUID
style
alignment
setAlignment:
writingDirection
setWritingDirection:
indent
setIndent:
startingItemNumber
setStartingItemNumber:
hints
setHints:
needsParagraphCleanup
setNeedsParagraphCleanup:
needsListCleanup
setNeedsListCleanup:
_needsParagraphCleanup
_needsListCleanup
_style
_hints
_alignment
_writingDirection
_indent
_startingItemNumber
TI,N,V_style
Tq,N,V_alignment
Tq,N,V_writingDirection
TQ,N,V_indent
TQ,N,V_startingItemNumber
TI,N,V_hints
TB,N,V_needsParagraphCleanup
TB,N,V_needsListCleanup
TI,D,N
compare:with:
mergeWithRegisterGreatest:
attributeRanges
_attributeRanges
T^v,R,N,V_attributeRanges
serializeDataFromArchive:
initWithArchive:andReplicaID:
initWithCRCoder:stringArray:
allowlistedAttributesForModel
allowlistedAttributesForStyle
allowlistedTypingAttributes
attributesEqual:toRange:modelEqual:
attributesEqual:to:modelEqual:
setAttributes:substring:
CRProperties
keyFromSelector:
identity
initWithIdentity:fields:
setupConstraintsFor:in:
setFieldKey:value:
mergeWithObject:
fields
_identity
_fields
T@"NSUUID",R,N,V_identity
T@"NSDictionary",R,N,V_fields
CR_compare:
CR_shortDescription
CR_repeatedCharUUID:
CR_zero
initWithName:size:hints:
fontName
pointSize
fontHints
nativeFont
setNativeFont:
_fontHints
_fontName
_pointSize
_nativeFont
T@,&,N,V_nativeFont
T@"NSString",R,N,V_fontName
Td,R,N,V_pointSize
TI,R,N,V_fontHints
documentWithReplica:
documentWithRootObject:replica:
unarchiveFromData:replica:
initWithReplica:
initWithVersion:rootObject:replica:
setRootObject:
updateObjects:
localObject:
mergeWithData:
walkGraph:root:
updateGraphDocumentPointers
updateObjectsSet
setDocumentFor:
mergeWithDocument:
deltaSince:
startVersion
rootObject
objects
replicaClock
unserializedReplicaClock
setUnserializedReplicaClock:
_startVersion
_rootObject
_objects
_replicaClock
_unserializedReplicaClock
T@"CRVectorTimestamp",R,N,V_version
T@"CRVectorTimestamp",R,N,V_startVersion
T@,&,N,V_rootObject
Tq,R,N,V_replicaClock
Tq,N,V_unserializedReplicaClock
T@"NSMutableDictionary",R,N,V_objects
initWithData:andReplicaID:
initWithMergeableString:
mergeWithStringVersionedDocument:
setMergeableString:
_mergeableString
T@"TTMergeableAttributedString",&,N,V_mergeableString
ic_replaceCharactersInRange:withAttributedSubstring:fromRange:
ic_appendAttributedSubstring:fromRange:
encodeWithCRCoder:array:
initWithCRCoder:array:
registerWithType:contents:
registerWithType:contents:document:
T@,&,D,N
unserialisedIdentifier
rem_compareToVectorTimestampElement:
initWithArchive:andReplicaID:andSharedTimestamp:
initWithArchive:andReplicaID:withOrderedSubstrings:
saveSubstrings:archiveSet:linkSet:archivedString:toArchive:
serializeDeltaSinceTimestamp:
initWithProtobufTimestamp:decoder:
encodeIntoProtobufTimestamp:coder:
initWithReplica:andCounter:
nextTimestampForReplica:
nextTimestamp
isEqualToTimestamp:
earlierTimestamp:
laterTimestamp:
shortDescription
T@"NSUUID",&,N,V_replica
encodeWithCRCoder:orderedSet:
initWithCRCoder:orderedSet:
timestampForReplica:
maxClock:forUUID:
removeUUID:
minusVectorTimestamp:
registerCRClasses
registerClass:forType:
_registerClass:forType:cluster:
typeSet
typeToClassDict
typeIndexForClass:
clusterTypeSet
_clusterTypeSet
T@"NSOrderedSet",R,N,V_clusterTypeSet
CR_toStdString
CR_UUIDFromStdString:
applyUndoCommand:
undeleteSubstrings:
initWithOrdering:elements:document:
cachedIdentifierSet
cachedIndexMapping
regenerateNSOrderedIdentifierSetAndIndexMapping
generateNSOrderedIdentifierSetWithIndexMapping:
wipeoutCaches
objectForIdentifier:
identifierForObjectInCachedSet:
containsObjectEqualTo:
undoablyRemoveObjectIdentifiersFromElements:
undoablyInsertObjectIdentifiersIntoElements:
shiftCachedIndicesStartingAtIndex:by:
safeMoveObjectFromIndex:toIndex:
moveObjectFromIndex:toIndex:mutableSafe:
_removeObjectsFromOrderingAtIndices:
reinsertIdentifier:withMaskedIdentifiers:atIndex:forObjectToMove:
realizeElementMutations
ordering
setOrdering:
_cachedIdentifierSet
_cachedIndexMapping
_ordering
T@"NSMutableOrderedSet",R,N,V_cachedIdentifierSet
T@"NSMapTable",R,N,V_cachedIndexMapping
T@"CRArray",&,N,V_ordering
T@"CRSet",&,N,V_elements
updateInsertTopoIDRange:toNewRangeID:
deleteRanges
insertStrings
_deleteRanges
_insertStrings
T^v,R,N,V_deleteRanges
T^v,R,N,V_insertStrings
crTimestamp
setCrTimestamp:
_crTimestamp
T@"CRVectorTimestamp",&,N,V_crTimestamp
constant
TTShortDescription
TTZero
@28@0:8@16B24
@24@0:8@16
@24@0:8q16
@32@0:8q16q24
B16@0:8
@24@0:8^{_NSZone=}16
v24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@16@0:8
Q16@0:8
B24@0:8@16
q16@0:8
@20@0:8B16
@28@0:8q16B24
@"NSString"16@0:8
B32@0:8@16@24
q32@0:8@16@24
v24@0:8^v16
@24@0:8r^v16
v16@0:8
@"NSArray"
@40@0:8I16@20B28@32
I16@0:8
v20@0:8I16
v20@0:8B16
@"REMClockElementList"
@"<REMReplicaManagerClient>"
@32@0:8@16@24
@32@0:8@16^@24
v32@0:8@16@24
@32@0:8r^v16^@24
v24@0:8@?16
v32@0:8@16@?24
@24@0:8^@16
@28@0:8B16^@20
v24@0:8Q16
v24@0:8q16
{os_unfair_lock_s=I}16@0:8
v20@0:8{os_unfair_lock_s=I}16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSMutableOrderedSet"
@"NSMutableDictionary"
@32@0:8@16Q24
@"NSData"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"REMReplicaManager"24@0:8@"REMObjectID"16
@"NSDictionary"24@0:8@"NSSet"16
@"REMStore"
@40@0:8@16@24^@32
v52@0:8@16@24@32B40@44
B52@0:8@16@24B32@36^@44
v40@0:8@16@24@32
v24@0:8@?<v@?@"NSError">16
v24@0:8@?<v@?>16
v32@0:8@"NSArray"16@?<v@?>24
@32@0:8q16@24
@40@0:8q16@24@32
@"NSString"24@0:8@"NSString"16
@"NSSet"16@0:8
@"REMResolutionTokenMap"16@0:8
v24@0:8@"REMResolutionTokenMap"16
@"NSData"16@0:8
v24@0:8@"NSData"16
@24@0:8@"REMSaveRequest"16
v24@0:8@"NSString"16
@48@0:8@16@24@32@40
@44@0:8@16@24@32B40
@40@0:8@16@24@32
@40@0:8q16q24@32
@88@0:8q16q24@32@40@48@56@64@72@80
@96@0:8q16q24q32@40@48@56@64@72@80@88
d32@0:8@16@24
v28@0:8@16B24
@"REMSaveRequest"
@"REMReminderStorage"
@"REMChangedKeysObserver"
@"REMReminderChangeItem"
@24@0:8#16
@48@0:8@16Q24Q32^@40
@48@0:8@16@24Q32Q40
v24@0:8#16
@"NSMutableArray"
@40@0:8@16@24q32
@"NSMutableSet"
@40@0:8q16B24B28B32B36
@"NSString"
B32@0:8@16^@24
@32@0:8q16^@24
@48@0:8@16@24@32^@40
B88@0:8@16@24@32@40@48@56@64@72^@80
v96@0:8@16@24@32@40@48@56@64@72@80@?88
Q32@0:8@16^@24
v28@0:8B16@?20
@32@0:8@16@?24
v96@0:8@16@24@32@40@48@56@64B72B76@80@?88
v48@0:8@16@24@32@?40
v40@0:8@16@24@?32
@24@0:8@?16
@"REMStoreContainerToken"
@"_REMInProgressSaveRequestsContainer"
@"<REMDaemonController>"
v48@0:8@16q24@32@?40
@"REMChangeTracking"32@0:8@"REMObjectID"16@"NSString"24
@"REMChangeTracking"40@0:8@"REMObjectID"16@"NSString"24@"NSSet"32
v36@0:8@16B24@?28
B24@0:8^@16
Q24@0:8^@16
@72@0:8@16@24@32@40@48@56^@64
@36@0:8@16B24^@28
v44@0:8@16B24B28B32@?36
v32@0:8B16B20@?24
v32@0:8B16B20@?<v@?@"NSError">24
v32@0:8@16^@24
@"NSUUID"
@"REMFetchResultToken"
@"NSDictionary"
@"REMObjectID"16@0:8
@"REMObjectID"24@0:8@"NSUUID"16
@"REMObjectID"
@32@0:8@16d24
@24@0:8d16
d16@0:8
v24@0:8d16
@"NSDateComponents"
@32@0:8@16q24
@"REMStructuredLocation"
@"REMContactRepresentation"
@24@0:8Q16
Q24@0:8@16
@"REMReplicaIDSource"
@"CRDocument"
v24@0:8@"REMReplicaIDHelper"16
@"<REMReplicaManagerProviding>"16@0:8
v24@0:8@"<REMReplicaManagerProviding>"16
v32@0:8@16@?<v@?@>24
@32@0:8Q16Q24
@"<REMReplicaManagerProviding>"
@"REMReplicaIDHelper"
@"REMMutableCRUndo"
@48@0:8@16q24@32@40
@40@0:8@16q24@32
@"REMAccountTypeHost"
@"REMCRMergeableOrderedSet"
@"REMManualOrdering"
@"NSSet"
@"REMResolutionTokenMap"
@96@0:8q16q24@32@40@48@56@64@72@80@88
q24@0:8@16
@84@0:8q16q24@32@40@48@56@64@72B80
q48@0:8@16@24@32o^@40
q112@0:8q16q24@32@40@48@56@64@72@80@88@96o^@104
@"NSDictionary"16@0:8
@40@0:8@16@24Q32
@"REMListPredicateDescriptor"
@"<REMSaveRequestTrackedValue>"
@36@0:8@16@24B32
@76@0:8q16q24q32q40q48q56B64@68
@"REMClockElementList"24@0:8@"NSUUID"16
@"REMChangeToken"
@"NSDate"
v48@0:8@16@24@32^v40
@"NSObject"
@32@0:8Q16^{_NSRange=QQ}24
v48@0:8{_NSRange=QQ}16Q32@?40
@"REMTTHashtag"32@0:8Q16^{_NSRange=QQ}24
v48@0:8{_NSRange=QQ}16Q32@?<v@?@"REMTTHashtag"{_NSRange=QQ}^B>40
v40@0:8@16{_NSRange=QQ}24
v32@0:8{_NSRange=QQ}16
@48@0:8Q16^{_NSRange=QQ}24{_NSRange=QQ}32
@52@0:8Q16^{_NSRange=QQ}24B32{_NSRange=QQ}36
v40@0:8@16B24B28@?32
v44@0:8B16B20B24@28@?36
v40@0:8@"NSString"16B24B28@?<v@?@"NSError">32
v36@0:8@"NSString"16B24@?<v@?@"NSError">28
v36@0:8@"NSArray"16B24@?<v@?@"NSError">28
v32@0:8@"NSString"16@?<v@?@"NSError">24
v40@0:8@"REMObjectID"16B24B28@?<v@?@"REMMigrationResult"@"NSError">32
v32@0:8@"NSString"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"CKRecord"@"NSError">24
v44@0:8B16B20B24@"NSString"28@?<v@?@"NSError">36
v32@0:8@"REMObjectID"16@?<v@?@"CKRecord"@"NSError">24
@"REMAlarmTrigger"
B40@0:8@16@24B32B36
@"REMCRMergeableStringDocument"
@"NSURL"
@"REMUserActivity"
@"REMDisplayDate"
q32@0:8@16^@24
v32@0:8@16Q24
v44@0:8@16@24B32@36
@"REMAccountStorage"
@"REMAccountChangeItem"
@"REMReminderPredicateDescriptor"
@88@0:8@16@24q32@40@48@56@64@72@80
@36@0:8@16B24@28
@"NSTimeZone"
@"REMSmartListStorage"
@"REMAccount"
@"REMList"
@"REMSmartList"
v40@0:8@16@?24@?32
@"<REMChangeTrackingClientIdentifying>"
@40@0:8#16@24^@32
@"REMTemplateStorage"
@56@0:8@16@24@32@40@48
@72@0:8@16@24@32@40@48@56@64
Q32@0:8q16^{_NSRange=QQ}24
B32@0:8q16^{_NSRange=QQ}24
v44@0:8Q16B24{_NSRange=QQ}28
v36@0:8B16{_NSRange=QQ}20
v32@0:8q16@?24
v48@0:8@16@24Q32@?40
v24@0:8@?<v@?@"REMChangeToken">16
v32@0:8q16@?<v@?@"REMChangeToken">24
v32@0:8@"NSString"16@?<v@?@"REMChangeToken">24
v32@0:8@"<REMChangeTrackingClientIdentifying>"16@?<v@?@"REMChangeTrackingState"@"NSError">24
v40@0:8@"REMChangeTrackingState"16@"<REMChangeTrackingClientIdentifying>"24@?<v@?@"NSError">32
v48@0:8@"REMChangeToken"16@"NSArray"24Q32@?<v@?@"REMChangeSet"@"NSError">40
v48@0:8@"NSDate"16@"NSArray"24Q32@?<v@?@"REMChangeSet"@"NSError">40
v32@0:8@"REMChangeToken"16@?<v@?@"NSError">24
v32@0:8@"NSDate"16@?<v@?@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSDictionary"@"NSError">24
d40@0:8@16@24d32
@72@0:8@16@24@32@40Q48@56@64
@88@0:8@16@24@32@40Q48@56@64Q72Q80
@60@0:8@16B24d28Q36Q44@52
@"NSUUID"16@0:8
@"_REMChangedObjectIDStorage"
@"REMNSPersistentHistoryChangeTombstone"
@"REMChangeTransaction"
@"_REMNSPersistentHistoryChangeStorage"
@"NSPersistentHistoryChange"
B28@0:8@16B24
B40@0:8q16#24@?32
@"NSError"
@"NSNumber"
@"NSArray"16@0:8
@"REMChangeTombstone"
@24@0:8@?<v@?@"NSError">16
@"NSObject<OS_dispatch_queue>"
@"<REMXPCSuggestedAttributesPerformer>"
@64@0:8@16@24@32@40@48:56
@52@0:8@16@24@32@40B48
@44@0:8@16B24B28B32^@36
@"REMReminderFetchOptions"
@36@0:8@16B24B28B32
@28@0:8B16B20B24
B32@0:8#16@24
B32@0:8^q16^@24
@32@0:8#16q24
@36@0:8#16q24B32
v56@0:8@16#24@32@?40@?48
@36@0:8#16@24B32
@32@0:8#16@24
q24@0:8q16
v40@0:8@16#24q32
@"<REMDAAccountProviding>"
@"REMChangeSet"
@"REMChangeTracking"
@"REMChangeTrackingState"
@?16@0:8
@?<@"<_REMDAChangeTrackableModel>"@?@"REMObjectID"B@"REMStore"^@>16@0:8
@?<@"NSDictionary"@?@"NSArray"@"REMStore"^@>16@0:8
@?<@"<REMDAChangedIdentifierResult>"@?@"REMChangeTombstone">16@0:8
@?<@"<REMDAChangedIdentifierResult>"@?@"<_REMDAChangeTrackableModel>">16@0:8
@32@0:8@16#24
B32@0:8@?16^@24
@64@0:8@16@24@32@40@48q56
@72@0:8@16@24@32@40@48q56@64
@64@0:8@16@24@32@40q48@56
@40@0:8q16d24@32
@64@0:8@16@24@32@40@48@56
v48@0:8@16Q24@32@40
v40@0:8Q16@24@32
@"REMFetchMetadata"
B40@0:8q16q24@32
B24@0:8q16
B32@0:8^B16^@24
@"REMAccountCapabilities"
@"<REMReplicaClockProviding>"
@"<REMReplicaIDHelperOwner>"
Q32@0:8@16Q24
d32@0:8@16d24
@"TTParagraphStyle"
@32@0:8q16^{_NSRange=QQ}24
v40@0:8q16{_NSRange=QQ}24
@"<REMXPCChangeTrackingPerformer>"32@0:8@"NSString"16@?<v@?@"NSError">24
@"<REMXPCDebugPerformer>"32@0:8@"NSString"16@?<v@?@"NSError">24
@"<REMXPCDebugPerformer>"24@0:8@?<v@?@"NSError">16
@"<REMXPCStorePerformer>"32@0:8@"NSString"16@?<v@?@"NSError">24
v40@0:8@"NSString"16@?<v@?@"<REMXPCStorePerformer>">24@?<v@?@"NSError">32
@"<REMXPCSyncInterfacePerformer>"32@0:8@"NSString"16@?<v@?@"NSError">24
v40@0:8@"NSString"16@?<v@?@"<REMXPCSyncInterfacePerformer>">24@?<v@?@"NSError">32
@"<REMXPCIndexingPerformer>"32@0:8@"NSString"16@?<v@?@"NSError">24
v40@0:8@"NSString"16@?<v@?@"<REMXPCIndexingPerformer>">24@?<v@?@"NSError">32
@40@0:8@16@24@?32
v48@0:8@16@24@?32@?40
@"<REMXPCDaemonControllerCloudKitNetworkActivityDelegate>"
@"NSXPCConnection"
v24@0:8@"NSNumber"16
@96@0:8@16@24d32d40d48@56@64@72@80@88
v40@0:8{_NSRange=QQ}16@32
v48@0:8q16{_NSRange=QQ}24q40
@"<REMCRMutableAttributedStringEditObserver>"
@"NSMutableAttributedString"
@48@0:8d16d24d32d40
@56@0:8d16d24d32d40Q48
@32@0:8d16d24
@80@0:8d16d24d32d40Q48@56@64@72
@"NSUserDefaults"
v32@0:8Q16@24
@"REMUserDefaults"
v104@0:8@16@24@32@40@48@56@64@72Q80B88B92@?96
v32@0:8@"REMFetchRequest"16@?<v@?@"REMFetchResult"@"NSError">24
v32@0:8@"REMStoreInvocation"16@?<v@?@"REMStoreInvocationResult"@"NSError">24
v48@0:8@"REMStoreSwiftInvocation"16@"NSData"24@"NSDictionary"32@?<v@?@"REMStoreSwiftInvocationResult"@"NSError">40
v32@0:8@"REMObjectID"16@?<v@?@"REMReplicaManagerSerializedData"@"NSError">24
v40@0:8@"REMObjectID"16@"NSString"24@?<v@?@"NSDictionary"@"NSError">32
v32@0:8@"REMDistributedEvaluationCollectionOptions"16@?<v@?@"NSData"@"NSError">24
v104@0:8@"NSArray"16@"NSArray"24@"NSArray"32@"NSArray"40@"NSArray"48@"NSDictionary"56@"NSDictionary"64@"NSString"72Q80B88B92@?<v@?@"NSError">96
v32@0:8@"REMObjectID"16@?<v@?@"CKShare"@"NSError">24
v40@0:8@"REMObjectID"16@"NSData"24@?<v@?@"CKShare"@"NSError">32
v40@0:8@"CKShare"16@"NSString"24@?<v@?@"NSError">32
v32@0:8@"CKShareMetadata"16@?<v@?B@"NSString"@"NSError">24
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError">32
v32@0:8@"NSArray"16@?<v@?@"NSError">24
v32@0:8@"REMObjectID"16@?<v@?@"REMTemplateContentAttributes"@"NSError">24
v40@0:8@"REMObjectID"16@"REMTemplatePublicLinkConfiguration"24@?<v@?@"REMTemplatePublicLink"@"NSError">32
v40@0:8@"REMObjectID"16@"REMTemplatePublicLinkConfiguration"24@?<v@?@"REMObjectID"@"NSError">32
v32@0:8@"REMObjectID"16@?<v@?@"REMObjectID"@"NSError">24
v32@0:8@"NSUUID"16@?<v@?@"REMObjectID"@"NSError">24
v28@0:8B16@?<v@?BB@"NSError">20
v36@0:8@"NSString"16B24@?<v@?BB@"NSError">28
v24@0:8@?<v@?B@"NSError">16
v32@0:8@"NSString"16@?<v@?@"<REMXPCSuggestedAttributesPerformer>"@"NSError">24
v32@0:8@"REMObjectID"16@?<v@?@"NSNumber"@"NSError">24
v36@0:8@"NSArray"16B24@?<v@?@"NSArray"@"NSError">28
v48@0:8B16B20@24@32@?40
@"ACAccount"
@"ACAccountStore"
@"REMNSPersistentHistoryToken"
@"_REMNSPersistentHistoryTransactionStorage"
@60@0:8@16@24@32@40@48B56
@"REMTemplatePublicLinkConfiguration"
@56@0:8@16@24@32q40@48
@64@0:8@16@24@32q40@48@56
v24@0:8@"<CRDataType>"16
@"<CRDataType>"32@0:8@"CRVectorTimestamp"16@"CRDocument"24
v24@0:8@"CRDocument"16
v24@0:8@?<v@?@>16
v24@0:8@"CRCoder"16
@24@0:8@"CRCoder"16
@32@0:8@16B24B28
@52@0:8@16@24@32B40@44
i24@0:8q16
@64@0:8@16@24@32q40q48@56
@120@0:8@16@24@32q40q48q56@64@72@80@88@96@104@112
@24@0:8B16B20
@"REMRecurrenceEnd"
v40@0:8@"REMStoreContainerToken"16@"NSString"24@?<v@?@"<REMXPCChangeTrackingPerformer>"@"NSError">32
v40@0:8@"REMStoreContainerToken"16@"NSString"24@?<v@?@"<REMXPCDebugPerformer>"@"NSError">32
v48@0:8@"NSString"16@"REMStoreContainerToken"24@"NSString"32@?<v@?@"<REMXPCStorePerformer>"@"NSError">40
v32@0:8@"NSString"16@?<v@?@"<REMXPCSyncInterfacePerformer>"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"<REMXPCIndexingPerformer>"@"NSError">24
@68@0:8@16s24@28@36@44@52@60
@44@0:8@16s24@28@36
s16@0:8
@"NSPersistentHistoryToken"
v60@0:8@16@24@32@40B48@?52
v56@0:8d16d24d32@40@?48
v40@0:8@16q24@?32
v24@0:8@?<v@?@"NSString">16
v28@0:8B16@?<v@?@"NSDictionary"@"NSError">20
v24@0:8@?<v@?@"NSURL">16
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v32@0:8@"NSString"16@?<v@?q@"NSDictionary"@"NSError">24
v24@0:8@?<v@?@"NSString"@"NSDictionary"@"NSError">16
v60@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40B48@?<v@?@"NSError">52
v32@0:8@"REMObjectID"16@?<v@?@"NSString">24
v40@0:8@"REMObjectID"16B24B28@?<v@?@"NSError">32
v36@0:8@"REMObjectID"16B24@?<v@?@"NSError">28
v24@0:8@?<v@?@"NSArray">16
v56@0:8d16d24d32@"NSUUID"40@?<v@?>48
v32@0:8@"NSUUID"16@?<v@?>24
v32@0:8@"NSString"16@?<v@?>24
v32@0:8@"NSString"16@?<v@?@"NSArray">24
v24@0:8@?<v@?@"REMStoreContainerToken"@"NSError">16
v32@0:8@"REMStoreContainerToken"16@?<v@?@"NSError">24
v24@0:8@?<v@?@"NSArray"@"NSError">16
v40@0:8@"NSString"16@"NSURL"24@?<v@?@"NSError">32
v40@0:8@"NSString"16@"NSUUID"24@?<v@?@"NSError">32
v28@0:8B16@?<v@?@"NSArray"@"NSError">20
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSArray"@"NSError">32
v32@0:8@"NSUUID"16@?<v@?@"NSError">24
v40@0:8@"NSUUID"16@"NSDate"24@?<v@?@"NSError">32
v32@0:8@"NSUUID"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"REMSharedEntitySyncActivity"16@?<v@?@"NSError">24
v40@0:8@"REMObjectID"16q24@?<v@?@"NSError">32
v28@0:8B16@20
v32@0:8q16@24
q32@0:8@16q24
@"REMXPCDaemonController"
@"REMColor"
v56@0:8@16@24@32@40@48
@"<REMSaveRequestNotifyChangeDelegate>"
@"_REMFetchExecutor"
@"NSOrderedSet"
B32@0:8Q16q24
@"REMListStorage"
@"REMSharee"
@"CRTombstoneOrderedSet"
@"NSObject<REMCRReminderIDListDelegate>"
@"TTMergeableStringVersionedDocument"
@60@0:8@16@24B32@36@44@52
@"<REMDisplayDateUtilsDelegate>"
@"REMSaveRequest"16@0:8
v24@0:8@"REMAccountChangeItem"16
v24@0:8@"REMObjectID"16
@"REMSmartListChangeItem"
B36@0:8@16@24B32
@"REMListChangeItem"
v36@0:8@16@24B32
@96@0:8@16@24@32@40@48@56@64@72q80q88
@64@0:8@16@24@32@40q48q56
@48@0:8@16@24q32q40
@"REMTemplateConfiguration"
@"REMTemplatePublicLink"
@"REMReminder"
@120@0:8@16@24@32@40@48@56@64@72@80@88@96q104q112
@88@0:8@16@24@32@40@48@56@64q72q80
@72@0:8@16@24@32@40@48q56q64
B24@0:8@"<TTModelAttributeComparable>"16
@32@0:8@16r^v24
v32@0:8@16^v24
v32@0:8d16@24
v28@0:8i16@20
v28@0:8I16@20
^v24@0:8@16
^v16@0:8
i24@0:8@16
{vector<CRDT::Document_DocObject *, std::allocator<CRDT::Document_DocObject *>>="__begin_"^^{Document_DocObject}"__end_"^^{Document_DocObject}"__end_cap_"{__compressed_pair<CRDT::Document_DocObject **, std::allocator<CRDT::Document_DocObject *>>="__value_"^^{Document_DocObject}}}
@"<CRDataType>"
@"CRVectorTimestamp"
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
v40@0:8@16^v24@?32
@40@0:8@16r^v24@?32
@"NSMapTable"
v40@0:8Q16Q24@32
v40@0:8Q16@24Q32
v48@0:8Q16Q24@32Q40
v32@0:8^v16^v24
{TopoIDRange={TopoID=@I}I}40@0:8@16^v24^v32
v40@0:8{_NSRange=QQ}16Q32
v40@0:8^v16{_NSRange=QQ}24
v48@0:8^v16^v24{_NSRange=QQ}32
^v32@0:8{TopoID=@I}16
v48@0:8^v16{TopoIDRange={TopoID=@I}I}24
Q32@0:8{TopoID=@I}16
q32@0:8^v16@24
B40@0:8{TopoID=@I}16@32
^v28@0:8^v16I24
v64@0:8{TopoIDRange={TopoID=@I}I}16{TopoIDRange={TopoID=@I}I}40
Q28@0:8@16B24
{vector<TopoSubstring *, std::allocator<TopoSubstring *>>="__begin_"^^{TopoSubstring}"__end_"^^{TopoSubstring}"__end_cap_"{__compressed_pair<TopoSubstring **, std::allocator<TopoSubstring *>>="__value_"^^{TopoSubstring}}}
@"TTVectorMultiTimestamp"
@"NSObject<TTMergeableStringDelegate>"
@"NSHashTable"
v48@0:8Q16{_NSRange=QQ}24q40
@"NSObject<CRUndoDelegate>"
@"TTMergeableAttributedString"
{vector<std::pair<TopoID, TopoID>, std::allocator<std::pair<TopoID, TopoID>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::pair<TopoID, TopoID> *, std::allocator<std::pair<TopoID, TopoID>>>="__value_"^v}}
v24@0:8r^v16
@24@0:8^I16
@32@0:8r^v16Q24
q20@0:8i16
v24@0:8@"TTMergeableUndoString"16
B24@0:8@"TTMergeableStringUndoGroup"16
B40@0:8{TopoIDRange={TopoID=@I}I}16
@"TTCRVectorMultiTimestamp"
@48@0:8r^v16@24^v32@40
@44@0:8@16@24Q32B40
v28@0:8Q16B24
v32@0:8Q16Q24
@"TTArray"
@"CRDictionary"
@32@0:8Q16^B24
r^v24@0:8@16
d24@0:8@16
I24@0:8@16
v40@0:8@?16@24@32
r^v16@0:8
@32@0:8r^v16@24
v32@0:8^v16@24
@"CRTimestamp"
@"CRSet"
@20@0:8I16
B48@0:8@16{_NSRange=QQ}24^B40
B40@0:8@16@24^B32
@20@0:8C16
@36@0:8@16d24I32
v32@0:8@?16@24
v56@0:8{_NSRange=QQ}16@32{_NSRange=QQ}40
@32@0:8Q16@24
@40@0:8Q16@24@32
@40@0:8r^v16@24@32
@40@0:8r^v16@24^v32
v56@0:8^v16^v24^v32^@40^v48
@32@0:8@16^v24
v32@0:8#16@24
v36@0:8#16@24B32
Q24@0:8#16
{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}16@0:8
v32@0:8Q16q24
v36@0:8Q16Q24B32
v48@0:8@16@24Q32@40
@"CRArray"
