@(#)PROGRAM:MOVStreamIO  PROJECT:MOVStreamIO-1
A610L010L3.315.114ggr4ggb4rbg4brg
610L010L3.315.114ggr4ggb4rbg4brg
010L010L010L010L010L010L010Lfvuy610L3.31
com.apple.videoeng.streamerror
com.apple.videoeng.streamwriterwarning
com.apple.videoeng.streamreaderwarning
com.apple.videoeng.streamreadererror
ErrorInfoStreamId
Unknown
StreamEncoderType
PixelFormat
ColorStreamBitrate
EncodingQuality
VideoTransform
HEVCQPValue
ExpectedFrameRateForStream
RawBayerRearrangeTypeKey
UseSlimXCompression
FrameMetadataFormat
OriginalTimestampWhenWrittenToFile
MarksOutputTrackAsEnabled
VideoTrackTypeInfo
PixelBufferExactBytesPerRow
CustomEncoderConfig
StreamConvertNonPlanarBuffersTo8bitMonochrome
ProResEncodingQuality
com.apple.mio.tracktype.AlphaDataOnly
com.apple.mio.tracktype.NoVideoData
com.apple.mio.tracktype.IRData
com.apple.mio.tracktype.RasterOrientedVideoData
hvc1
hw.pagesize
hw.cachelinesize
Cannot retrieve available video encoder list, error %d
{CGAffineTransform=dddddd}
Embedded configuration must not be nil.
decoding is set up for this sample buffer. Cannot tell whether it's a key frame or not
This sample buffer doesn't have any attachment. Cannot tell whether it's a key frame or not
mdta/com.apple.track_kind
mdta/com.apple.stream_sample_attachments
mdta/com.apple.metadata_stream_item
version
default_options
mdta/com.apple.framework.state.MOVStreamIO
mdta/com.apple.stream_sample_format
mdta/com.apple.stream_encoded_sample_format
mdta/com.apple.stream_related_to_stream
mdta/com.apple.stream_relation_specifier
mdta/com.apple.stream_type_info
mdta/com.apple.stream_sample_exact_bytes_per_row
mdta/com.apple.stream_sample_attachments_serialization_mode
mdta/com.apple.stream_raw_bayer_rearrange_type
metadata
CFBundleShortVersionString
%d.%d.%d%@
%d.%d.%d
%d.%d
Cannot compare with nil object.
Version: %@
Cannot copy version %@
mdta/com.apple.trackStreamType
mdta/com.apple.metadataTrackType
mdta/com.apple.MOVStreamIO.stateMetadataIdentifier
mdta/com.apple.MOVStreamIO.versionKey
mdta/com.apple.MOVStreamIO.defaultOptions
mdta/com.apple.trackStreamPixelFormat
mdta/com.apple.trackStreamEncodedPixelFormat
mdta/com.apple.trackStreamAttachmentsSerializationMode
mdta/com.apple.trackTypeInfo
mdta/com.apple.trackStreamRelatedToStream
mdta/com.apple.trackStreamRelationSpecifier
mdta/com.apple.exactBytesPerRow
mdta/com.apple.RawBayerRearrangeType
mdta/com.apple.rawSampleBufferAttachmentDict
mdta/com.apple.metadataDict
3.15.0
Cannot create pixel buffer pool for adjusting Bytes Per Row. (%@)
Cannot convert pixel buffer. (%@)
Invalid ExactBytesPerRow value type!
Assert: (%d) %s - f: %s, l: %d
VTCompressionSessionCreate failed
/Library/Caches/com.apple.xbs/Sources/MOVStreamIO_Sim/MOVStreamIO/VTEncoder/MOVStreamEncoderConfig.mm
ProfileLevel
SupportedValueList
Cannot read config from file '%@'.
codecType
encoderSpecification
sessionProperties
Cannot write to file %@.
Finishing Queues
Cannot create pixel buffer pool for Non-Planar stream.
v8@?0
com.apple.movstreamio.framework
DEBUG_LOG
com.apple.movstreamio.defaultlog
MOVStreamIO
mdta/com.apple.rawIMUDict
mdta/com.apple.imuTrackType
AudioFormatObject
AdditionalAudioSettings
readyForMoreMediaData
Target path is an existing directory.
com.apple.streamwriter.writing
com.apple.streamwriter.encoding
init
Unknown stream id.
Stream is an audio stream, use [MOVStreamWriter setWritingBufferCapacity:forAudioStream:]
Stream is a video stream, use [MOVStreamWriter setWritingBufferCapacity:forStream:]
Stream is an audio stream, use [MOVStreamWriter writingBufferCapacityForAudioStream:]
Stream is an audio stream, use [MOVStreamWriter writingBufferCapacityForStream:]
Stream is an audio stream, use [MOVStreamWriter writingBufferUsageForAudioStream:]
Stream is an audio stream, use [MOVStreamWriter writingBufferUsageForStream:]
State Change: %@ - (%@) -> %@
status
Caller must provide a delegateCallbackQueue
Cannot find track for stream %@
Cannot add tracks while not idle
Cannot add two metadata tracks with the same name
Unable to find stream with identifier %@
recordingConfiguration cannot be null or empty
Format description cannot be null
Cannot add two tracks with the same stream name
Not matching kMIOPixelBufferExactBytesPerRow value %@.
No video track type info (MIOVideoTrackTypeInfo) specified for stream '%@'.
Invalid audio format
Incompatible item %@:%@.
Current state does not support prepareToRecord.
prepareToRecord
prepareQueue
executePrepareToRecord
-[MOVStreamWriter executePrepareToRecordWithMovieMetadata:]_block_invoke
MOVStreamWriter.mm
-[MOVStreamWriter addIsReadyObservers]
Cannot append to stream that hasn't been set up.
Cannot append: writer is not recording. Current writer state: %@
[VTEncoder] processing buffer for stream '%@' is full, dropping buffer (Pending:%lld Queue:%ld Fifo:%ld Capacity:%ld).
Mode for pixel buffer attachements for RawBayer pixel buffers is not set to PLIST! Default format is overriden by client (kMIOFrameAttachmentSerializationMode), this will be ignored for RawBayer.
appendPixelBuffer
Exception occurred during encoding %@ for stream '%@'. Dropping frame.
Sample buffer was appended with presentation timestamp (%f) less than (or equal to) previous sample buffer (%f) for stream '%@'. Dropping frame.
Sample buffer creation failed (error: %i) for stream '%@'. Dropping frame. Info: Used FD: %@  Buffer FD: %@
Sample Buffer cannot be nil.
Attachments cannot be nil.
Cannot append to a stream that hasn't been set up.
Pixel format not defined for stream '%@'.
Sample Buffer with invalid PTS for stream '%@'.
Cannot append sample buffer with encoder type not MIOStreamEncoderTypeNone.
[FIFO] FIFO buffer for stream '%s' is full, dropping older buffer.
Sample buffer encoding failed (encoder status: %i flags: %d) for stream '%@'. Dropping frame.
Missing customEncoderConfigDelegate '%@'. Cannot encode!
overrideVideoEncoderSpecificationForstreamId
configureSessionOverride
codecTypeOverrideForstreamId
Cannot append metadata when the track was never added. Call addMetadataTrack: before prepareToRecord.
Invalid time stamp is not supported for metadata for stream '%@'.
No metadata appended because it's empty
No metadata appended because the AVTimedMetadataGroup* is nil
FIFO buffer for metadata stream '%@' is full, dropping older buffer.
Cannot append associated metadata when the track was never added. Call addMetadataTrackAssociatedWith:forIdentifier: before prepareToRecord.
nullptr IMU metadata
asyncWriteAssociatedMetadata
[%s associated with %s] metadata input not ready for more data, dropping samples
Cannot append audioSample <null>.
Cannot append stream type that hasn't been set up.
Could not append audio sample because it is nil
Current writer state does not support finishRecording.
finishRecording
Cannot finishRecording.
finishAndDrainFifoFirst
-[MOVStreamWriter finishAndDrainFifoFirst]
com.apple.movstreamwriter.timeout
cancelRecording
forceFinishRecording
finishAVWriter
-[MOVStreamWriter finishAVWriter]_block_invoke
processCancelRecording
Late frames arrived from encoder. Drain fifos again...
processFinishRecording-checkIfFifoAreEmpty
q24@?0@8@16
processFinishRecording
checkForFinishing
-[MOVStreamWriter checkForFinishing]
writeSampleBuffer
Exception occurred during writing %@ for stream '%@'. Dropping frame.
writeMetadataOfSample
Exception occurred during writing %@ for stream '%@'. Dropping sample.
writeMetadata
-[MOVStreamWriter encoderTypeForStream:]
configuration
Error creating writer output setting for stream '%@' Error: %@.
Unsupported media type (%d) for stream '%@'.
Unable to use output settings (%@) for track '%@'.
Error creating AVAssetWriterInput (%@) for track '%@'.
Unable to get metadata format description for stream: %@
Can't add stream and metadata inputs to the asset writer to stream: %@
Can't add smetadata input to the asset writer to stream: %@
Cannot setup metadata associated with %@: %@ stream doesn't exist
mdta/%@
Unable to get metadata format
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
Recording
%d_%zu
Cannot allocate reference buffer.
Invalid pixel buffer configuration.
875704438_1
1278226736_0
1735549492_0
1983131704_0
2019963440_1
2019963442_0
2016686640_0
875704438_0
825306677_0
1278226742_0
1919379252_0
875836518_1
2019963440_0
2016687156_1
875836518_0
825437747_0
2019963956_1
875836534_1
2016686642_1
1650943796_0
875836534_0
1111970369_0
1932996149_0
2016687156_0
1983066168_0
875704422_1
1278226488_0
2019963442_1
2019963956_0
2016686640_1
1734505012_0
2016686642_0
875704422_0
Cannot create pixel buffer transfer session
Cannot create pixel buffer pool
Cannot create new pixel buffer.
Cannot transfer pixel buffer
Cannot copy pixel buffer
MOVStreamFrameConverter dealloc > release pool
Frame %f (%@)
CVBytesPerRow
%@.%@
%@[%d]
Unsupported data type, cannot serialize object %@.
Unsupported raw data format, cannot deserialize object.
BitsPerComponent
FullRangeVideo
Cannot find track (%d) in '%@'.
No format description for track (%d) in '%@'.
Cannot add output to track (%d) in '%@'.
Cannot read from track (%d) in '%@'.
Cannot get sample buffer from track (%d) in '%@': %@
No pixel buffer in track (%d) in '%@'.
No sample buffer in track (%d) in '%@'.
HEVC_Monochrome12_AutoLevel
HEVC_Monochrome10_AutoLevel
RawBayer
Error joining Warhol-Buffer for RawBayer pixel buffer.
Init
Finishing AVWriter
splitBayerIntoWarhol
joinWarholIntoBayer
splitCompandedBayerIntoWarhol
joinCompandedWarholIntoBayer
-[MetalPixelBufferUtility processBayerBuffer:withWarholBuffer:shiftCount:msbReplication:operation:sampleSize:]
MetalPixelBufferUtility.m
(width % vectorsPerLine) == 0
commandBuffer != nil
computeEncoder != nil
Depth
Color
FrontDepth
FrontColor
FrontIR
Cancelled
mdta/custom.
RawBayerFormat
mdta/com.apple.stream_sample_exact_bytes_per_row_multiplanar
%@%@
Invalid value type for PixelBufferExactBytesPerRow.
Preparing Cancelling
Forcing Finish
Frame size too small
/Library/Caches/com.apple.xbs/Sources/MOVStreamIO_Sim/MOVStreamIO/VTEncoder/HEVCLosslessEncoder.mm
Cannot check AllowFrameReordering status of encoding session. Assuming disabled.
VTCompressionSessionEncodeFrame failed
kVTCompressionPropertyKey_Usage failed
HEVC_Main_AutoLevel
HEVC_Main10_AutoLevel
HEVC_Main444_AutoLevel
HEVC_Main44410_AutoLevel
HEVC_MainStill_AutoLevel
VTVideoEncoderSetProperty failed
kVTCompressionPropertyKey_Priority failed
VTVideoEncoderSetProperty kVTCompressionPropertyKey_MaxKeyFrameIntervalDuration failed
VTVideoEncoderSetProperty kVTCompressionPropertyKey_ExpectedFrameRate failed
EnableRCFW
VTVideoEncoderSetProperty my_kVTCompressionPropertyKey_EnableRCFW failed
EnableQPMod
VTVideoEncoderSetProperty my_kVTCompressionPropertyKey_EnableQPMod failed
InitialQPI
VTVideoEncoderSetProperty  my_kVTCompressionPropertyKey_InitialQPI failed
InitialQPP
VTVideoEncoderSetProperty my_kVTCompressionPropertyKey_InitialQPP failed
InitialQPB
VTVideoEncoderSetProperty my_kVTCompressionPropertyKey_InitialQPB failed
LossLess
VTVideoEncoderSetProperty my_kVTCompressionPropertyKey_LossLess failed
VTVideoEncoderSetProperty kVTCompressionPropertyKey_RealTime failed
DebugMetadataSEI
VTVideoEncoderSetProperty my_kVTCompressionPropertyKey_DebugMetadataSEI2 failed
OutputBitDepth
VTVideoEncoderSetProperty my_kVTCompressionPropertyKey_OutputBitDepth failed
Cancelling
mdta/com.apple.trackStreamEncoding
DeviceMotion
RawGyro
RawAccel
slim
HEVCMonochrome
h264
HEVC
none
Can't add audio track (%@) to the AVAssetReader.
Can't add metadata track (%@) to the AVAssetReader.
Unknown IMU data type, ignoring: '%@'
Can't add output for scene track (%@) to the AVAssetReader.
Invalid ExactBytesPerRow value type for stream '%@': %@.
Decoder required for '%@' is not available.
Unknown stream type detected.
Undefined pixel format for stream '%@'. Ignoring stream.
Can't add video track (%@) to the AVAssetReader.
Cannot read sample buffer for '%@': %@
-[MOVStreamReaderStreamOutput nextSampleBufferForStreamAttachementsData:timestamp:error:]
MOVStreamReaderStreamOutput.mm
self.assetReader.error != nil
Metadata PLIST Read error: %@
Wrong attachments serialization mode (fallback to JSON).
Metadata JSON Read error: %@
 Unknown AttachmentSerializationMode = %d for frame metadata!
-[MOVStreamReaderStreamOutput grabNextMetadataItemsOfTrackAssociatedWithStreamWithIdentifier:timeRange:error:]
No AVAssetReaderOutputMetadataAdaptor found for metadata stream: '%@'
-[MOVStreamReaderStreamOutput grabNextTimedMetadataGroupOfStreamError:]
-[MOVStreamReaderStreamOutput grabNextMetadataOfStreamTimeRange:error:]
HEVCMonochrom
MetadataKeyTable
MetadataKeyValue
BackColorWide
BackColorTele
BackIR
BackDepth
Cannot create L008 pixel buffer pool for Non-Planar stream.
3.17.17
MIOBossMode
MIODisableFrameReordering
MIOBitrateMultiplier
MIOBitrateOverride
MIOForceColorLossless
MIOForce10bitMonoByVT
MIOForceLossless8bitMonoByVT
MIOSkipSourceHint
URL must be a file URL type. (%@)
File doesn't exist. (%@)
No MOVStreamReaderDelegate set.
Invalid file path. (%@)
MOVStreamReader asset is nil
Time to reset to is invalid
-video
-%lu
-audio
-scene
-metadata
Start Reading (AVAssetReader) Error: %@  Status: %ld
File doesn't contain stream '%@'.
No or invalid MOVStreamIO version information in MOV!
-[MOVStreamReader movVersionCheck]
MOVStreamReader.mm
versionError == nil
MOV created with a newer MOVStreamIO version '%@' (current '%@')!
v32@?0@"AVMetadataItem"8Q16^B24
Missing stream id.
File doesn't contain data for requested stream '%@'.
Stream '%@' is not a video stream.
Stream '%@' is not an audio stream.
Stream '%@' is not a scene stream.
Stream '%@' is not a metadata stream.
Missing stream id for copy next frame.
Cannot grab metadata. Missing metadata stream id.
Cannot grab metadata. Unknown metadata stream '%@'.
Error joining Warhol-Buffer for Companded-RawBayer pixel buffer.
SlimXFormat
+[MOVStreamOutputSettings outputSettingsForStream:defaultFrameRate:]
MOVStreamOutputSettings.mm
Invalid encoder type.
ap4x
ProRes4444 only supports high and medium quality setting.
AllowFrameReordering
Quality
Failed
Cannot create pixel buffer pool for RawBayer stream.
duration = %5.3f msec, min/max/avg/count = %5.3f/%5.3f/%5.3f/%d
com.apple.streamwriter.vtencoding
Encoder not configured yet.
Preparing
Finished
Draining FIFO
 ERROR [MOVStreamIO]: %{public}@ 
 WARNING [MOVStreamIO]: %{public}@ 
ExactBytesPerRow count doesn't match pixel buffers plane count!
Invalid ExactBytesPerRow value type!
Cannot convert pixel buffer. (%{public}@)
%{public}@
 ERROR: Cannot read config from file '%{public}@'. 
 ERROR: %{public}@. 
MOVStreamWriter init with URL %{public}@
MOVStreamWriter dealloc
Flushing pixel buffer pool...
Configuration not supported.
Start prepareToRecordWithMovieMetadata
Init av writer...
MOVStreamWriter set movieFragmentInterval to %f
Writer setupAssetWriterStreamInputs
Writer setupMetadataInputs
Writer setupAssociatedMetadataInputs
Writer add MOV metadata
Writer startWriting
Writer register KVO
Writer transition status
 ERROR: 'addIsReadyObservers' called twice 
MOVStreamWriter appendPixelBuffer at '%5.3f' to stream '%{public}@'
MOVStreamWriter appendSampleBuffer at '%5.3f' to stream '%{public}@'
[FIFO] add to fifo '%{public}@' %ld
MOVStreamWriter metadata group at '%5.3f' to stream '%{public}@'
MOVStreamWriter metadata at '%5.3f' to stream '%{public}@'
Info: The metadata append triggered the start for the asset writer. Are you sure this is what you want?
 ERROR: appendTimedMetadataGroup exception: %{public}@ 
Close all VT encoders.
Wait for encoders...
All encoders closed.
Writing pending frame attachements for stream '%{public}@'.
FINISHING!
[FIFO] Precheck All Fifo items written '%{public}@'
 ERROR: [FIFO] CANNOT Write Item of metadata stream '%{public}@' for state %{public}@ 
Start Session by '%{public}@' at %f
 ERROR: [FIFO] CANNOT Write Item of stream '%{public}@' for state %{public}@ 
Will add AVAssetWriterInput for stream '%{public}@' with outputSettings: %{public}@ 
 sourceFormatHint: %{public}@
Setup metadata track with identifier "%{public}@"
Setup metadata track with legacy identifier "%{public}@"
BytesPerPixelLookUp: Register %zu for %@
Cannot allocate reference buffer.
Invalid pixel buffer configuration.
ERROR CREATING PIXELBUFFERREFCOPY %d
Inconsistent height.
Inconsistent bytes per row.
Inconsistent width.
Error creating pixel buffer from pool (%d).
Cannot copyPixelBuffer, not matching plane count
Cannot copyPixelBuffer, not matching bytes per row
Can't serialize object as JSON: %{public}@
Invalid ExactBytesPerRow value type: %{public}@
Unable to serialize MOVStream State metatdata as JSON: %{public}@
Failed to create Metal Device.
Failed to find the default library. error: %{public}@
Failed to find the metal splitBayerIntoWarhol function.
Failed to find the metal joinWarholIntoBayer function.
Failed to find the metal splitCompandedBayerIntoWarhol function.
Failed to find the metal joinCompandedWarholIntoBayer function.
Failed to created pipeline state object, error %{public}@.
Failed to create the command queue.
Bayer Buffer width is not a multiple of 8
processBayerBuffer error recevied: %{public}@
Unable to serialize audio metatdata as PLIST: %{public}@
Error: The metadata dictionary is not valid for XML v1.0 plist Format
Error: Cannot serialize metadata to plist
Unable to serialize depth metatdata as JSON: %{public}@
Can't create metadata format description...
AllowFrameReordering: %d
Custom video encoder configuration.
Encoder Config >> kVTCompressionPropertyKey_Usage = %d
Profile passed unrecognized (%d). exit.
Encoder Config >> kVTCompressionPropertyKey_ProfileLevel = %{public}@
Encoder Config >> kVTCompressionPropertyKey_Priority = %d
Encoder Config >> kVTCompressionPropertyKey_AllowFrameReordering = %d
Encoder Config >> kVTCompressionPropertyKey_MaxKeyFrameIntervalDuration = %f
Encoder Config >> kVTCompressionPropertyKey_ExpectedFrameRate = %f
Encoder Config >> my_kVTCompressionPropertyKey_LossLess = %d
Encoder Config >> kVTCompressionPropertyKey_RealTime = %d
Encoder Config >> my_kVTCompressionPropertyKey_DebugMetadataSEI2 = %d
Assert: (%d) %s - f: %s, l: %d
Encoder Config >> my_kVTCompressionPropertyKey_OutputBitDepth = %d
Assert: %s - f: %s, l: %d
*-----------------------------------------------------------------------------*
Detected %{public}@ stream
Detected %{public}@ IMU data type
Detected scene %{public}@ stream
Got a Depth/IR stream which uses unknown version of SLIM (%d)
[WARNING] MOVStreamIO Debug Mode enabled. This could change the Framework behavior.
[WARNING] Default setting for '%{public}@' was changed from '%{public}@' to '%{public}@'. This can affect your recordings!
 ERROR: Cannot initialize reader: %{public}@ 
MOVStreamReader registerOutput with nil output.
MOVStreamReader registerOutput unknown media type (%ld).
 ERROR: %{public}@ 
MOVStreamReader: Setup video output for '%{public}@'.
MOVStreamReader: Register video output for '%{public}@'.
MOVStreamReader: Register video output for '%{public}@', failed.
MOVStreamReader: Setup audio output for '%{public}@'.
MOVStreamReader: Register audio output for '%{public}@'.
MOVStreamReader: Register audio output for '%{public}@', failed.
MOVStreamReader: Setup scene output for '%{public}@'.
MOVStreamReader: Register scene output for '%{public}@'.
MOVStreamReader: Register scene output for '%{public}@', failed.
MOVStreamReader: Setup metadata output for '%{public}@'.
MOVStreamReader: Register metadata output for '%{public}@'.
MOVStreamReader: Register metadata output for '%{public}@', failed.
MOVStreamIO state metadata is not in PLIST format. Fallback to JSON.
MOVStreamIO state metadata JSON error: %{public}@
 WARNING [MOVStreamReader]: %{public}@ 
MOVStreamWriter: Disable 'AllowFrameReordering' related to r50244907.
No sample buffer received. VTCompressionSession failed with status: %d
%{public}@: Encoder closed.
 ERROR: Set '%{public}@' to '%{public}@' in encoder config (Err: %d). 
MOVStreamIO
MOVStreamIOUtility
Version
NSCopying
DefaultPostProcessor
MOVStreamPostProcessor
NSObject
MOVStreamEncoderConfig
MOVStreamWriterStateFinishQueues
MOVStreamWriterState
L008ToNonPlanarPostProcessor
MOVStreamPostProcessorSizeAdjusting
MIOLog
Delegate
SampleBufferAndMetadata
MOVStreamWriter
VideoEncoderInterfaceDelegate
MOVStreamWriterStateContext
MOVStreamWriterDeprecated
MOVStreamWriterDeprecationNominates
MOVStreamWriterStateRecording
PixelBufferUtility
PreProcessorFactory
MOVStreamFrameConverter
MOVStreamFrame
DefaultPreProcessor
MOVStreamPreProcessor
Private
PostProcessorFactory
L016Raw14PreProcessor
RawBayerFromYUVPostProcessor
MOVStreamWriterStateInit
MOVStreamWriterStateFinishAVWriter
MetalPixelBufferUtility
Legacy
MOVStreamWriterStateCancelled
TrackMetadata
MOVStreamWriterStatePrepareCancelling
MOVStreamWriterStateForceFinish
MOVStreamWriterStateCancelling
MOVStreamReaderStreamOutput
MOVStreamReaderStreamOutputPrivate
MOVStreamReaderVideoStreamOutputPrivate
MOVStreamReaderVideoStreamOutput
MOVStreamReaderSampleStreamOutput
MOVStreamReaderBaseStreamOutput
MOVStreamReaderAudioStreamOutput
MOVStreamReaderMetadataStreamOutput
NonPlanarToL008Processor
MOVStreamOptions
MOVStreamReader
MOVStreamReaderDeprecationNominates
MOVStreamReaderDeprecated
MOVStreamReaderEnhancedAccess
CompandedRawBayerPostProcessor
MOVStreamOutputSettings
MOVStreamWriterStateFailed
RawBayerTo1stPlaneYUVPreProcessor
CompandedRawBayerPreProcessor
VideoEncoderInterface
EncoderConfigDelegate
L016Raw14PostProcessor
MOVStreamWriterStatePreparing
RawBayerPostProcessor
RawBayerPreProcessor
MOVStreamWriterStateFinished
MOVStreamWriterStateDrainFifo
RawBayerToYUVPreProcessor
movStreamIOErrorWithDomain:message:code:
readerErrorWithMessage:code:
movStreamIOWarningWithDomain:message:code:
streamErrorWithMessage:code:
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
defaultLog
debugEnabled
userInfo
mutableCopy
domain
code
setObject:forKey:
errorByAddingStreamId:
populateReaderError:message:code:
readerWarningWithMessage:code:
populateStreamError:message:code:
writerWarningWithMessage:code:
internalErrorWithMessage:code:
UTF8String
lengthOfBytesUsingEncoding:
numberWithUnsignedLong:
objectForKeyedSubscript:
getJsonFriendlyCopy:
getPlistFriendlyCopyOf:
processInfo
isOperatingSystemAtLeastVersion:
isEncoderAvailableWithEncoderName:
stringWithFormat:
exceptionWithName:reason:userInfo:
countByEnumeratingWithState:objects:count:
objectForKey:
isEqualToString:
valueWithBytes:objCType:
getValue:
valueWithCGAffineTransform:
copy
clampedQuality:
numberWithDouble:
numberWithUnsignedInt:
numberWithInteger:
transformAngleFromVideoOrientation:
jsonFriendlyCopy:
plistFriendlyCopyOf:
formatForPixelBuffer:
getPreferredPlaneAlignmentSize
getPreferredBytesPerRowAlignmentSize
isEncoderAvailableForEncoderType:
getDefaultBitrateForVideoDimension:atExpectedFramerate:forEncoderType:
CGAffineTransformValueFromNSValue:
addTransform:toConfiguration:
addTrackTypeInfo:toConfiguration:
addEncodingQuality:toConfiguration:
monochrome10bitHEVCLosslessEncoderConfig
monochrome8bitHEVCLosslessEncoderConfig
monochrome8bitHEVCEncoderConfig
monochrome8bitHEVCEncoderConfigWithBitrate:
monochrome10bitHEVCEncoderConfigWithQuality:
monochrome8bitHEVCEncoderConfigWithQuality:
colorHEVCEncoderConfigWithQuality:
color8bitHEVCWithAlphaEncoderConfig
color8bitHEVCWithAlphaEncoderConfigWithBitrate:
colorHEVCLosslessEncoderConfig
colorHEVCEncoderConfig
colorWithAlphaLossless8bitHEVCEncoderConfig
colorH264EncoderConfig
colorHEVCEncoderConfigWithBitrate:
colorH264EncoderConfigWithBitrate:
slimEncoderConfig
slimXEncoderConfig
noneEncoderConfig
sampleBufferConfigWithPixelFormat:
audioNoneEncoderConfig
customEncoderConfig
customEncoderConfigWithEmbeddedConfiguration:
monochrome10bitHEVCEncoderConfig
monochrome10bitHEVCEncoderConfigWithBitrate:
proRes4444EncoderConfig
proRes422EncoderConfig
proRes422EncoderConfigWithQuality:
proRes4444EncoderConfigWithHighQuality
isKeyFrame:error:
initWithVersionString:error:
bundleForClass:
objectForInfoDictionaryKey:
init
componentsSeparatedByString:
count
objectAtIndexedSubscript:
isAllDigitsInString:
intValue
decimalDigitCharacterSet
rangeOfCharacterFromSet:
stringByTrimmingCharactersInSet:
invertedSet
length
major
minor
bugfix
modifier
compare:
compareToVersion:
getVersionAsString
allocWithZone:
isEqualToVersion:
hash
stringByAppendingFormat:
addObject:
pre3_15_0_Mapping
versionZero
allVersionedKeysForKey:modifier:
copyWithZone:
description
isEqual:
versionedKey:modifier:
.cxx_destruct
_major
_minor
_bugfix
_modifier
TI,R,V_major
TI,R,V_minor
TI,R,V_bugfix
T@"NSString",R,V_modifier
setOriginalPixelFormat:
originalPixelFormat
shouldRemovePaddingOfPixelBuffer:metadata:
pixelBufferWithoutPaddingFromPixelBuffer:error:
shouldChangeBytesPerRowOfPixelBuffer:
exactBytesPerRow
pixelBufferWithExactBytesPerRow:fromPixelBuffer:error:
dealloc
unsignedIntegerValue
objectAtIndex:
minimumBytesPerRowForPixelBuffer:
removePadding
initWithTargetWidth:height:format:bytesPerRow:
convertPixelBuffer:
arrayWithObjects:count:
initWithTargetWidth:height:format:bytesPerRows:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
initWithOriginalPixelFormat:
processedPixelBufferFrom:metadata:error:
setRemovePadding:
processedPixelFormat
setExactBytesPerRow:
TI,R
T@,&
TI,N
_converter
TB,VremovePadding
T@,&,VexactBytesPerRow
TI,N,VoriginalPixelFormat
AVEProfileLevel10BitMonochrome
initWithCodecType:encoderSpecification:sessionProperties:
dataWithContentsOfFile:
propertyListWithData:options:format:error:
unsignedIntValue
codecType
encoderSpecification
sessionProperties
dataWithPropertyList:format:options:error:
writeToFile:atomically:
isEncoderAvailableOfType:withId:
encoderIdsForType:
monochrome10BitEncoderConfigUsingAVEWithQuality:
monochrome10BitEncoderConfigUsingAVEWithBitrate:
supportedProfileLevelsForHEVC
initWithContentsOfFile:error:
writeToFile:error:
setCodecType:
setEncoderSpecification:
setSessionProperties:
_codecType
_encoderSpecification
_sessionProperties
TI,V_codecType
T@"NSDictionary",&,V_encoderSpecification
T@"NSDictionary",&,V_sessionProperties
setCriticalError:
processFinishRecording
canConfigure:
canAppendData:
canWriteData:
stopWriterWhenFifosAreEmpty:
canFinishRecording:
prepareRecording:
prepareFinished:
finishRecording:
forceFinishRecording:
nextFinishStep:
cancelRecording:
finishedCancelRecording:
criticalErrorOccurred:context:
activateWithContext:
name
writerStatus
T@"NSString",R
Tq,R
bytesPerPixelForFormat:
adjustedWidthForWidth:
createPixelBufferPoolWithWidth:height:format:extendedPixelsPerRow:minBufferCount:
pixelBufferFromPool:
copyPixelBuffer:toPixelBuffer:bytesPerPixel:
_pool
initWithSuiteName:
boolForKey:
T@"NSObject<OS_os_log>",R
streamWriter:changedStatusTo:
streamWriterDidFinishPreparing
streamWriterDidFinishRecording
streamWriterDidFailWithError:
criticalError
streamWriterDidCancelRecording:
streamWriter:writingSessionDidStartAtTime:stream:mediaType:
writerStatusChanged:writerDelegate:delegateCallbackQueue:
writingSessionDidStartAtTime:streamId:mediaType:writerDelegate:delegateCallbackQueue:
sampleBuffer
setSampleBuffer:
metadata
setMetadata:
_sampleBuffer
_metadata
T^{opaqueCMSampleBuffer=},V_sampleBuffer
T@"AVTimedMetadataGroup",&,V_metadata
defaultManager
path
fileExistsAtPath:isDirectory:
setLegacyKeysMode:
activateNewState:byEvent:
setSessionStartTime:
setMovieFragmentInterval:
removeIsReadyObservers
isAudioStream:
willChangeValueForKey:
didChangeValueForKey:
delegate
removeItemAtURL:error:
informDelegateAboutError:
setDelegate:
relateStream:toStream:relationSpecifier:error:
addMetadataTrack:formatDescription:
defaultMetadataWritingBufferCapacity
valueForKey:
verifyExactBytesPerRow:width:height:pixelFormat:
defaultAudioWritingBufferCapacity
defaultWritingBufferCapacity
defaultFactory
preProcessorForFormat:recordingConfiguration:
outputSettingsForStream:defaultFrameRate:
formatDescription
addTrackForStreamWithIdentifier:formatDescription:recordingConfiguration:
setTrackMetadata:forStream:error:
isCustomTrackMetadataCompatibleObject:
setTrackMetadata:forMetadataStream:error:
setMovMetadataItems:
initWithURL:fileType:error:
movieFragmentInterval
setupAssetWriterStreamInputsWithError:
setupMetadataInputsWithError:
setupAssociatedMetadataInputsWithError:
getMOVStreamIOMetadataItem
addObjectsFromArray:
startWriting
addIsReadyObservers
error
addObserver:forKeyPath:options:context:
removeObserver:forKeyPath:
boolValue
stringWithUTF8String:
informDelegateAboutIsReady:forStream:
consumeSamplesOfVideoAudioStream:
consumeMetadatOfMetadataStream:
sessionStartTime
pendigFrames
isPixelBufferRawBayer:
isPixelBufferCompandedRawBayer:
attachmentSerializationModeForStream:withDefaultMode:fromMap:
getMetadataGroupForBuffer:stream:presentationTime:serializationMode:
processedPixelBufferCopyOf:streamData:error:
encodeFrame:pst:frameProperties:metadata:
formatDescriptionForPixelBuffer:streamData:
newSampleReady:metadata:presentationTime:streamKey:streamId:isAudioSample:
getPixelFormatForStream:fromMap:
encoderTypeForStream:
appendSampleBuffer:attachments:streamId:
dataWithJSONObject:options:error:
metadataItem
setIdentifier:
setDataType:
setExtraAttributes:
setValue:
initWithItems:timeRange:
fifoDropsEnabled:
firstObject
removeObjectAtIndex:
frameReorderingEnabled
streamWriter:encodedBuffer:pts:metadata:forStream:
lastEncodingStatus
lastEncodingInfoFlags
customEncoderConfigDelegate
streamWriter:overrideVideoEncoderSpecificationForStream:
streamWriter:configureSessionOverride:forStream:
streamWriter:codecTypeOverrideForStream:
timeRange
queueMetadataGroup:stream:
initWithCapacity:
asyncWriteAssociatedMetadata:metadataKey:associatedStreamKey:
startSessionAtSourceTime:
isReadyForMoreMediaData
appendTimedMetadataGroup:
informDelegateAboutMediaWrittenForStream:mediaType:
getAudioMetadataForBuffer:
checkIfFifoAreEmpty
startFinishingTimeoutTimer
resubmitTimeoutBlock
status
informDelegateAboutFinishingTimeout
forceFinishRecording
finishingTimeout
removeAllObjects
cancelTimeoutBlock
clearAllFifoQueues
closeEncoderInDispatchGroup:
markAsFinished
finishAVWriter
finishWritingWithCompletionHandler:
cancelWriting
fileExistsAtPath:
removeItemAtPath:error:
sortedArrayUsingComparator:
writeVideoFrameStreamAttachmentsData:toMetadataAdaptor:ofStream:
state
resetTimeoutRefTime
checkForFinishing
writeMetadata:forStreamId:
isReadyForMoreDataForStreamId:fromMap:
writeSampleBuffer:andMetadata:forStreamId:
appendSampleBuffer:
arrayWithObject:
doubleValue
settings
config
initForStream:configuration:delegate:
expectedFrameRate
initWithExpectedFrameRate:forStream:delegate:
useCustomEncoderConfig
setCustomEncoderConfig:
canApplyOutputSettings:forMediaType:
baseMediaTimeScale
createTrackFormatDescriptionFromStreamData:
sharedOptions
skipSourceHint
initWithMediaType:outputSettings:sourceFormatHint:
setMediaTimeScale:
getVideoTransformForStream:
setTransform:
setExpectsMediaDataInRealTime:
legacyKeysMode
getTrackMetadataForStream:
getLegacyTrackMetadataForStream:
getTrackInputPixelFormatMetadataForStream:fromMap:
getTrackEncodedPixelFormatMetadataForStream:fromMap:
getLegacyTrackInputPixelFormatMetadataForStream:fromMap:
getLegacyTrackEncodedPixelFormatMetadataForStream:fromMap:
getLegacyTrackMetadataForAttachmentsSerializationMode:fromMap:
getTrackMetadataForAttachmentsSerializationMode:fromMap:
getTrackMetadataForTrackTypeInfo:fromMap:
createRelatedToStreamMetadata:
createRelationSpecifierMetadata:
getTrackMetadataForExactBytesPerRow:fromMap:error:
isPixelFormatRawBayer:
getTrackMetadataForRawBayerRearrangeType:fromMap:
customTrackMetadataForStream:fromMap:
marksOutputTracksAsEnabledForStream:fromMap:
setMarksOutputTrackAsEnabled:
createMetadataFormatDescription:
addTrackAssociationWithTrackOfInput:type:
assetWriterInputMetadataAdaptorWithAssetWriterInput:
canAddInput:
addInput:
streamWriter:stream:preparedTrackInputs:mediaType:
identifier
arrayWithObjects:
customMetadataTrackMetadataForStream:fromMap:
setDefaultWritingBufferCapacity:
setDefaultAudioWritingBufferCapacity:
setDefaultMetadataWritingBufferCapacity:
prepareToRecordWithMovieMetadata:
streamWriterEncounteredAnError:
streamWriter:inputForStream:changedIsReadyStatusTo:
streamWriterReachedFinishingTimeout:
streamWriter:mediaWrittenForStream:mediaType:
encoder:encodedSampleBuffer:metadata:presentationTime:streamId:
encoder:encodingFailedForStream:
encoder:overrideVideoEncoderSpecificationForstreamId:
encoder:configureSessionOverride:streamId:
encoder:codecTypeOverrideForstreamId:
executePrepareToRecordWithMovieMetadata:
finishAndDrainFifoFirst
deleteMOVFile
deleteFileOnCancel
processCancelRecording
processForceFinishRecording
movMetadataItems
T@"NSArray",&
T@"NSError",&
setVideoTransformFromOrientation:
addTrackForStreamWithIdentifier:formatDescription:encoderConfig:
prepareToRecord
setTrackMetadata:forStream:
setTrackMetadata:forMetadataStream:
relateStream:toStream:relationSpecifier:
fifoBufferSizeForStream:
fifoBufferCapacity
setFifoBufferCapacity:
initWithURL:andExpectedFrameRate:
setWritingBufferCapacity:forStream:
setWritingBufferCapacity:forAudioStream:
setWritingBufferCapacity:forMetadataStream:
writingBufferCapacityForStream:
writingBufferCapacityForAudioStream:
writingBufferCapacityForMetadataStream:
writingBufferUsageForStream:
writingBufferUsageForAudioStream:
writingBufferUsageForMetadataStream:
setDelegate:callbackQueue:
setExpectedFrameRate:
setVideoTransform:
setRealTimeCapture:
addMetadataTrack:
addMetadataTrackAssociatedWith:withIdentifier:withFormatDescription:
addAudioTrackForStreamWithIdentifier:audioFormat:additionalSettings:
observeValueForKeyPath:ofObject:change:context:
attachmentSerializationModeForStream:withDefaultMode:
marksOutputTracksAsEnabledForStream:
appendPixelBuffer:presentationTime:toStreamId:
appendVideoSampleBuffer:attachmentMetadata:streamId:
appendVideoSampleBuffer:attachments:streamId:
appendTimeMetadataGroup:toStream:
appendMetadata:withTimeStamp:toStream:
appendMetadata:associatedWith:toStream:
appendAudioBuffer:forStream:
finishRecording
cancelRecording
getExpectedFrameRateForStream:
setFinishingTimeout:
setBaseMediaTimeScale:
setCustomEncoderConfigDelegate:
setState:
.cxx_construct
m_delegateCallbackQueue
m_writingQueue
m_processingQueue
_timeoutQueue
_timeoutBlock
m_writeURL
m_assetWriter
m_expectedFrameRate
m_realtime
m_haveStartedSession
m_videoTransform
m_streamDataMap
m_orderedStreamNames
m_metadataDataMap
m_orderedMetadataStreamNames
m_associatedMetadataDataMap
m_lastPtsForStream
m_observingIsReady
_state
_defaultWritingBufferCapacity
_defaultAudioWritingBufferCapacity
_defaultMetadataWritingBufferCapacity
_criticalError
_baseMediaTimeScale
_finishingTimeout
_customEncoderConfigDelegate
_delegate
_movieFragmentInterval
_sessionStartTime
T@"<MOVStreamWriterDelegate>",W,V_delegate
T@"<MOVStreamWriterState>",&,V_state
T{?=qiIq},V_movieFragmentInterval
T{?=qiIq},V_sessionStartTime
Td,V_finishingTimeout
Ti,V_baseMediaTimeScale
T@"NSError",R
T@"<MOVStreamCustomEncoderConfigDelegate>",W,V_customEncoderConfigDelegate
T@"NSArray",&,VmovMetadataItems
TB,VlegacyKeysMode
sharedBytesPerPixelLookUp
integerValue
createPixelBufferAttributesWithWidth:height:extendedPixelsPerRow:pixelFormat:bytesPerRowAlignment:planeAlignment:
createPixelBufferAttributesWithWidth:height:pixelFormat:bytesPerRow:
splitBayerBuffer:intoWarholPixelBuffer:shiftBitsLeftBy:
splitBayerBuffer:intoYUVPixelBuffer:shiftBitsLeftBy:
joinYUVBuffer:intoRawBayerPixelBuffer:shiftBitsLeftBy:msbReplication:
splitCompandedBayerBuffer:intoCompandedWarholPixelBuffer:
createRawPixelBufferWithWidth:height:extendedRows:extendedPixelsPerRow:pixelFormat:bytesPerRowAlignment:planeAlignment:bufferCacheMode:
isPixelFormatCompandedRawBayer:
cStringUsingEncoding:
sharedMetalPixelBufferUtility
joinWarholBuffer:intoBayerBuffer:shiftBitsRightBy:msbReplication:
joinCompandedWarholBuffer:intoCompandedBayerBuffer:
createPixelBufferAttributesWithWidth:height:pixelFormat:bytesPerRows:
copyData:toPlanarPixelBuffer:toPlane:
bytes
copyPixelBufferData:ofPlane:
dataWithLength:
mutableBytes
arrayWithCapacity:
numberWithInt:
replaceObjectAtIndex:withObject:
valueWithRange:
createRawPixelBufferWithWidth:height:pixelFormat:bytesPerRow:
newPixelBufferRefCopy:
copyFromPixelBuffer:toPixelBuffer:andShiftBits:
createNewL010PixelBufferPoolWithReferencePixelBuffer:minimumBufferCount:
createNewL008PixelBufferPoolWithReferencePixelBuffer:minimumBufferCount:
newWarholBufferFromRawBayerPixelBuffer:withPixelBufferPool:
newYUVBufferFromRawBayerPixelBuffer:withPixelBufferPool:
newRawBayerBufferFromYUVPixelBuffer:withPixelBufferPool:msbReplication:
newWarholBufferFromCompandedRawBayerPixelBuffer:withPixelBufferPool:
newWarholBufferFromRawBayerPixelBuffer:
fillPlaneOfPixelBuffer:planeIndex:withValue:
writeBuffer:ofSize:toFile:
verticallySplitPixelBuffer:intoTopPixelBuffer:bottomPixelBuffer:
concatPixelBuffer:withPixelBuffer:targetPixelBuffer:
extendedPixelsPerRowOfPixelBuffer:
createPixelBufferPoolWithWidth:height:format:bytesPerRow:minBufferCount:
createPixelBufferPoolWithWidth:height:format:bytesPerRows:minBufferCount:
copyData:toNonPlanarPixelBuffer:
copyNonPlanarPixelBufferData:
readFrameFromFile:width:height:pixelFormat:
writeBuffer:toFile:
histogramOf8BitBuffer:
rangesOf8BitBuffer:
create4444AYpCbCr16PixelBufferFillAlphaWithData:width:height:
copyMonochromeBuffer:toAlphaChannelOfBuffer:
copyuint16Data:toAlphaChannelOfBuffer:
copyAlphaChannelOfBuffer:touint16Data:
copyAlphaChannelOfBuffer:toMonochromeBuffer:
extendedPixelsRightForPlanarBufferWidth:height:bytesPerRow:format:
numberOfPlanesForPixelFormatType:
pixelBufferSizeWithPadding:
initWithTargetWidth:height:format:extendedPixelsPerRow:
transferSessionUsageDisabled
setTransferSessionUsageDisabled:
_transferSession
_transferSessionUsageDisabled
TB,V_transferSessionUsageDisabled
initWithPixelBuffer:timeStamp:context:
pixelBuffer
timeStamp
cmTimeStamp
context
_pixelBuffer
_timeStamp
_context
_cmTimeStamp
T^{__CVBuffer=},R,V_pixelBuffer
Td,R,V_timeStamp
T{?=qiIq},R,V_cmTimeStamp
T@,R,V_context
getPixelFormatFromStreamData:
inputPixelFormatFromStreamData:
encodedPixelFormatFromStreamData:
longValue
setValue:forKey:
isValidJSONObject:
isValidJSONObject:path:
unsignedLongValue
propertyList:isValidForFormat:
trackWithTrackID:
formatDescriptions
assetReaderTrackOutputWithTrack:outputSettings:
assetReaderWithAsset:error:
canAddOutput:
addOutput:
startReading
copyNextSampleBuffer
containsObject:
createL010FormatDescriptionFromL016FormatDescription:
createL010FormatDescriptionFromRawBayerFormatDescription:
createxf20FormatDescriptionFromRawBayerFormatDescription:
createL008FormatDescriptionFromNonPlanarFormatDescription:
createL008FormatDescriptionFromCompandedRawBayerFormatDescription:
plistSerializedObject:error:
plistDeserializedObject:error:
guessYCbCrPixelFormatFromFormatDescription:
detectPixelFormatForAsset:videoTrackId:error:
rawBayerMSBReplication
initWithOriginalPixelFormat:rawBayerMSBReplication:
initWithOriginalPixelFormat:l010OutputFormatRAW14L016:
l010OutputFormatRAW14L016
postProcessorFromReader:originalPixelFormat:encodedFormat:encoderType:streamId:
currentOptions
localizedDescription
createHEVCCompatiblePixelBuffer:
setRawBayerMSBReplication:
_rawBayerMSBReplication
TB,N,V_rawBayerMSBReplication
processBayerBuffer:withWarholBuffer:shiftCount:msbReplication:operation:sampleSize:
newDefaultLibraryWithBundle:error:
newFunctionWithName:
newComputePipelineStateWithFunction:error:
newCommandQueue
setEnabled:
newBufferWithBytesNoCopy:length:options:deallocator:
commandBuffer
computeCommandEncoder
setComputePipelineState:
setBuffer:offset:atIndex:
setBytes:length:atIndex:
maxTotalThreadsPerThreadgroup
dispatchThreadgroups:threadsPerThreadgroup:
endEncoding
commit
waitUntilCompleted
enabled
_metalDevice
_metalCommandQueue
_pipeLineStates
_enabled
TB,N,V_enabled
streamIdFromTrackStreamTypeIdentifier:
overrideVideoEncoderSpecification
codecTypeOverride
configureSessionOverride:
track
minFrameDuration
nominalFrameRate
setVersion:
setReader:
setAssetReader:
setTrack:
value
assetReader
setAssetTrack:
setStreamOutput:
setDeterminedPixelFormat:
setAttachmentSerializationMode:
setRelatedStreamId:
setRelationSpecifier:
setTrackTypeInfo:
setPostProcessor:
setStreamId:
getKeyFromMetadataTrack:
initWithTrack:outputSettings:
initWithAssetReaderTrackOutput:
setAttachmentsAdaptor:
setMetadataAdaptors:
setIsLegacyIMUTrack:
streamOutput
preferredTransform
postProcessor
playbackPixelFormatForTrack:ofStream:streamEncodingType:inputPixelFormat:delegate:
reader:pixelFormatForStream:suggestedFormat:
reader
reader:overrideBytesPerRowForStream:storedValue:customTrackMetadata:originalPixelFormat:encodedPixelFormat:
customTrackMetadata
reader:bytesPerRowForStream:storedValue:
alwaysCopiesSampleDataForStream
setAlwaysCopiesSampleData:
reader:alwaysCopiesSampleDataForStream:
streamId
assetTrack
rangeOfString:
stringByReplacingOccurrencesOfString:withString:
metadataAdaptors
allKeys
determinedPixelFormat
outputSettings
nextSampleBufferForStreamAttachementsData:timestamp:error:
decodeAttachmentsData:error:
attachmentsDataForStreamPts:duration:
setFutureAttachmentsData:
setFutureAttachementsPts:
setFutureAttachementsDuration:
setEndOfStreamReached:
frameDuration
futureAttachmentsData
futureAttachementsPts
futureAttachementsDuration
attachmentsAdaptor
nextTimedMetadataGroup
items
attachmentSerializationMode
JSONObjectWithData:options:error:
grabNextSampleBufferForStreamTimestamp:error:
allValues
mediaType
version
playbackPixelFormatForTrack:ofStream:delegate:
initWithData:encoding:
asset
trackID
pixelFormatForUnknownTrackOfReader:
initWithVideoTrack:assetReader:associatedMetadataTracks:version:unknownStreamId:reader:delegate:error:
initWithAudioTrack:assetReader:associatedMetadataTracks:version:unknownStreamId:reader:delegate:error:
initWithSceneTrack:assetReader:associatedMetadataTracks:version:unknownStreamId:reader:delegate:error:
initWithMetadataTrack:assetReader:version:unknownStreamId:reader:delegate:error:
nextAttachmentWithError:
T@"<MOVStreamPostProcessor>",&
getAssociatedMetadataStreams
grabNextMetadataItemsOfTrackAssociatedWithStreamWithIdentifier:timeRange:error:
endOfStreamReached
T@"AVAssetTrack",R,W
TB,R
relatedStreamId
relationSpecifier
pixelFormatForStream
getOutputPixelFormatForStream
removePixelBufferPadding:
copyNextFrameForStreamTimestamp:error:
nextPixelBufferForStreamAttachementsData:timestamp:error:
transform
trackTypeInfo
T{CGAffineTransform=dddddd},R
grabNextAudioSampleForStreamTimestamp:error:
grabNextMetadataOfStreamTimeRange:error:
grabNextTimedMetadataGroupOfStreamError:
isLegacyIMUTrack
setMediaType:
_frameDuration
_isLegacyIMUTrack
_endOfStreamReached
_originalPixelFormat
_determinedPixelFormat
_attachmentSerializationMode
_streamOutput
_metadataAdaptors
_attachmentsAdaptor
_futureAttachmentsData
_version
_reader
_assetReader
_track
_streamId
_assetTrack
_relatedStreamId
_relationSpecifier
_trackTypeInfo
_mediaType
_futureAttachementsPts
_futureAttachementsDuration
_transform
T@"AVAssetReaderTrackOutput",&,V_streamOutput
T@"NSDictionary",&,V_metadataAdaptors
T@"AVAssetReaderOutputMetadataAdaptor",&,V_attachmentsAdaptor
TI,V_originalPixelFormat
TI,V_determinedPixelFormat
Ti,V_attachmentSerializationMode
TB,V_isLegacyIMUTrack
T@"NSData",&,V_futureAttachmentsData
T{?=qiIq},V_futureAttachementsPts
T{?=qiIq},V_futureAttachementsDuration
T@"Version",W,V_version
T@"<MOVStreamReaderDelegate>",W,V_delegate
T@"MOVStreamReader",W,V_reader
T@"AVAssetReader",W,V_assetReader
T@"AVAssetTrack",W,V_track
T@"NSString",&,V_streamId
T@"AVAssetTrack",W,V_assetTrack
TB,V_endOfStreamReached
T@"NSString",&,V_relatedStreamId
T@"NSString",&,V_relationSpecifier
T{CGAffineTransform=dddddd},V_transform
TQ,V_trackTypeInfo
Tq,V_mediaType
T{?=qiIq},R
T@"<MOVStreamPostProcessor>",&,VpostProcessor
registerStandardDefaults
localDefaults
standardUserDefaults
standardDefaultValues
dictionaryWithCapacity:
checkHasValue:changedForKey:
registerDefaults:
T@"MOVStreamOptions",R
checkBossMode
disableFrameReordering
bitrateMultiplier
bitrateOverride
forceColorLossless
force10bitMonoByVT
forceLossless8bitMonoByVT
_debugMode
Td,R
initWithURL:delegate:error:
isFileURL
URLAssetWithURL:options:
movVersionCheck
resetReaderTo:error:
fileURLWithPath:
initWithContentsOfURL:delegate:error:
cancelReading
initWithAsset:error:
clearOutputs
tracksWithMediaType:
findAllAssociatedMetadataTrackInAsset:forTrack:
reader:didReceiveWarning:
registerOutput:
setTimeRange:
trackForStream:
metadataTrackForStream:
initWithURL:options:error:
tracks
isTrack:byIdInTracks:
removeTrack:
initWithAsset:presetName:
setOutputURL:
setOutputFileType:
exportAsynchronouslyWithCompletionHandler:
movstreamIOMetadataForMovie
containsStream:
enumerateObjectsUsingBlock:
containsMetadataStream:
naturalSize
getSizeForStream:
duration
trackMetadataForStream:
getMetadataStreamsAssociatedTo:error:
grabNextSampleBufferForStream:timestamp:error:
grabNextMetadataOfStream:timeRange:error:
associatedTracksOfType:
initWithURL:error:
getMetadataStreamsAssociatedTo:
getUnknownMetadataStreamsAssociatedTo:
grabNextMetadataOfStream:timeRange:
pixelFormatForStream:
setL010OutputFormatRAW14L016:
resetReader:
endOfStream
outputForVideoStream:error:
outputForAudioStream:error:
outputForSceneStream:error:
outputForMetadataStream:error:
nextSampleBufferForStream:attachementsData:timestamp:error:
nextPixelBufferForStream:attachementsData:timestamp:error:
initWithContentsOfFile:delegate:error:
saveStream:toFile:error:
transformForStream:
metadataForMovie
getRelatedStreamForStreamId:
getRelationSpecifierForStreamId:
getStreamsRelatedToStream:
trackMetadataForMetadataStream:
getOutputSizeForStream:
getOutputPixelFormatForStream:
trackTypeInfoForStream:
getFrameRateForStream:
getMinFrameDurationForStream:
removePixelBufferPadding:forStream:
getAllStreams
getAllAudioStreams
getAllSceneStreams
trackMetadataForAudioStream:
containsAudioStream:
getAllMetadataStreams
copyNextFrameForStream:timestamp:error:
grabNextAudioSampleForStream:timestamp:error:
grabNextMetadataItemsOfTrackAssociatedWith:withIdentifier:timeRange:error:
nextAttachmentForStream:error:
grabNextTimedMetadataGroupOfStream:error:
hasFinishedReading
hasReachedEndOfStream:
hasReachedEndOfMetadataStream:
m_asset
m_assetReader
_sampleStreams
_orderedVideoStreamIds
_orderedAudioStreamIds
_orderedSceneStreamIds
_metadataStreams
_orderedMetadataStreamIds
_l010OutputFormatRAW14L016
_movVersion
matchDeprecatedType:
slimSettings:frameRate:
h264Settings:frameRate:
hevc8bitWithAlphaSettings:frameRate:
hevc8bitWithAlphaLosslessSettings:frameRate:
hevcColorSettings:frameRate:
hevc8bitMonochromeSettings:frameRate:
hevc8bitMonochromeLosslessSettings:frameRate:
hevcColorLosslessSettings:frameRate:
hevc10bitMonochromeLosslessSettings:frameRate:
hevc10bitMonochromeSettings:frameRate:
prores422Settings:frameRate:
prores4444Settings:frameRate:
audioSettings:
customEncoderSettings:frameRate:
initWithConfig:
initWithFrameRate:useCustomEncoderConfig:
addEntriesFromDictionary:
initWithSettings:
initWithFrameRate:
getBitsPerSecondForColorStream:frameRate:
getQualitySetting:
applyBitrateModifiersTo:
_useCustomEncoderConfig
_settings
_config
_expectedFrameRate
T@"NSDictionary",R,V_settings
T@"MOVStreamEncoderConfig",R,V_config
TB,R,V_useCustomEncoderConfig
Td,R,V_expectedFrameRate
writeSampleBuffer:pts:metadata:withStatus:andFlags:
skipFrameWithStatus:andFlags:
setPendigFrames:
setupEncoderWithWidth:andHeight:imageFormat:andFramerate:
processFrame:pst:frameProperties:metadata:
closeEncoder
applySessionProperties:
useQPEncoding:
m_encoder
m_encoderInitialized
m_qpValue
m_stream
m_delegate
m_config
m_encodingQueue
m_firstFrameReceived
_customEncoderConfig
_lastEncodingStatus
_lastEncodingInfoFlags
_pendigFrames
Tq,V_pendigFrames
TI,R,V_lastEncodingStatus
TI,R,V_lastEncodingInfoFlags
TB,V_customEncoderConfig
TB,N,V_l010OutputFormatRAW14L016
@24@0:8@16
@32@0:8@16q24
v40@0:8^@16@24q32
@40@0:8@16@24q32
d20@0:8i16
r^{opaqueCMFormatDescription=}24@0:8^{__CVBuffer=}16
Q16@0:8
B20@0:8i16
B24@0:8@16
Q36@0:8{?=ii}16d24i32
@64@0:8{CGAffineTransform=dddddd}16
{CGAffineTransform=dddddd}24@0:8@16
@72@0:8{CGAffineTransform=dddddd}16@64
@32@0:8Q16@24
@32@0:8d16@24
@16@0:8
@24@0:8Q16
@24@0:8d16
@20@0:8I16
@24@0:8q16
B32@0:8^{opaqueCMSampleBuffer=}16^@24
@32@0:8@16@24
@24@0:8^{_NSZone=}16
@32@0:8@16^@24
q24@0:8@16
I16@0:8
v16@0:8
@"NSString"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
^{__CVBuffer=}40@0:8^{__CVBuffer=}16@24^@32
v20@0:8B16
v24@0:8@16
v20@0:8I16
^{__CVBuffer=}40@0:8^{__CVBuffer=}16@"NSDictionary"24^@32
Q24@0:8^{__CVBuffer=}16
B24@0:8^{__CVBuffer=}16
B32@0:8^{__CVBuffer=}16@24
^{__CVBuffer=}32@0:8^{__CVBuffer=}16^@24
^{__CVBuffer=}40@0:8@16^{__CVBuffer=}24^@32
@"MOVStreamFrameConverter"
B28@0:8I16@20
@36@0:8I16@20@28
B32@0:8@16^@24
@"NSDictionary"
q16@0:8
B24@0:8@"<MOVStreamWriterStateContext>"16
@"<MOVStreamWriterState>"24@0:8@"<MOVStreamWriterStateContext>"16
@"<MOVStreamWriterState>"32@0:8@"NSError"16@"<MOVStreamWriterStateContext>"24
v24@0:8@"<MOVStreamWriterStateContext>"16
Q24@0:8Q16
^{__CVPixelBufferPool=}
v40@0:8q16@24@32
v72@0:8{?=qiIq}16@40q48@56@64
^{opaqueCMSampleBuffer=}16@0:8
v24@0:8^{opaqueCMSampleBuffer=}16
^{opaqueCMSampleBuffer=}
@"AVTimedMetadataGroup"
v72@0:8@16^{opaqueCMSampleBuffer=}24@32{?=qiIq}40@64
v32@0:8@16@24
B40@0:8@16^{OpaqueVTCompressionSession=}24@32
I32@0:8@16@24
v72@0:8@"VideoEncoderInterface"16^{opaqueCMSampleBuffer=}24@"AVTimedMetadataGroup"32{?=qiIq}40@"NSString"64
v32@0:8@"VideoEncoderInterface"16@"NSString"24
@"NSDictionary"32@0:8@"VideoEncoderInterface"16@"NSString"24
B40@0:8@"VideoEncoderInterface"16^{OpaqueVTCompressionSession=}24@"NSString"32
I32@0:8@"VideoEncoderInterface"16@"NSString"24
v24@0:8@"NSArray"16
@"NSArray"16@0:8
@"NSError"16@0:8
v24@0:8@"NSError"16
v40@0:8@16r^{opaqueCMFormatDescription=}24@32
v40@0:8@"NSString"16r^{opaqueCMFormatDescription=}24@"NSDictionary"32
B32@0:8@16@24
B40@0:8@16@24@32
Q24@0:8@16
v24@0:8Q16
B32@0:8@"NSDictionary"16@"NSString"24
B40@0:8@"NSString"16@"NSString"24@"NSString"32
Q24@0:8@"NSString"16
@32@0:8@16d24
B24@0:8^{StreamRecordingData=^{opaqueCMFormatDescription}B@@@@@@Q@@^{__CVPixelBufferPool}@@@{?=qiIq}Q@q}16
v32@0:8Q16@24
B24@0:8d16
B64@0:8{CGAffineTransform=dddddd}16
B48@0:8@16@24@32^@40
B20@0:8B16
v32@0:8@16r^{opaqueCMFormatDescription=}24
v40@0:8@16@24^{opaqueCMFormatDescription=}32
v40@0:8@16@24@32
B40@0:8@16@24^@32
v48@0:8@16@24@32^v40
i44@0:8{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}16i40
B40@0:8{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}16
v56@0:8^{__CVBuffer=}16{?=qiIq}24@48
v40@0:8^{opaqueCMSampleBuffer=}16@24@32
v92@0:8^{opaqueCMSampleBuffer=}16@24{?=qiIq}32{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}56@80B88
v56@0:8@16{?=qiIq}24@48
v72@0:8@16{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}24{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}48
v32@0:8^{opaqueCMSampleBuffer=}16@24
d24@0:8@16
i24@0:8@16
v24@0:8^@16
v40@0:8@16^{opaqueCMFormatDescription=}24@32
v28@0:8B16@20
v32@0:8@16q24
{?=qiIq}16@0:8
v40@0:8{?=qiIq}16
d16@0:8
v24@0:8d16
i16@0:8
v20@0:8i16
@"NSObject<OS_dispatch_queue>"
@"NSURL"
@"AVAssetWriter"
{CGAffineTransform="a"d"b"d"c"d"d"d"tx"d"ty"d}
{map<std::string, (anonymous namespace)::StreamRecordingData, std::less<std::string>, std::allocator<std::pair<const std::string, (anonymous namespace)::StreamRecordingData>>>="__tree_"{__tree<std::__value_type<std::string, (anonymous namespace)::StreamRecordingData>, std::__map_value_compare<std::string, std::__value_type<std::string, (anonymous namespace)::StreamRecordingData>, std::less<std::string>, true>, std::allocator<std::__value_type<std::string, (anonymous namespace)::StreamRecordingData>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, (anonymous namespace)::StreamRecordingData>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, (anonymous namespace)::StreamRecordingData>, std::less<std::string>, true>>="__value_"Q}}}
{vector<std::string, std::allocator<std::string>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::string *, std::allocator<std::string>>="__value_"^v}}
{map<std::string, (anonymous namespace)::MetadataRecordingData, std::less<std::string>, std::allocator<std::pair<const std::string, (anonymous namespace)::MetadataRecordingData>>>="__tree_"{__tree<std::__value_type<std::string, (anonymous namespace)::MetadataRecordingData>, std::__map_value_compare<std::string, std::__value_type<std::string, (anonymous namespace)::MetadataRecordingData>, std::less<std::string>, true>, std::allocator<std::__value_type<std::string, (anonymous namespace)::MetadataRecordingData>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, (anonymous namespace)::MetadataRecordingData>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, (anonymous namespace)::MetadataRecordingData>, std::less<std::string>, true>>="__value_"Q}}}
{map<std::string, std::map<std::string, (anonymous namespace)::MetadataRecordingData>, std::less<std::string>, std::allocator<std::pair<const std::string, std::map<std::string, (anonymous namespace)::MetadataRecordingData>>>>="__tree_"{__tree<std::__value_type<std::string, std::map<std::string, (anonymous namespace)::MetadataRecordingData>>, std::__map_value_compare<std::string, std::__value_type<std::string, std::map<std::string, (anonymous namespace)::MetadataRecordingData>>, std::less<std::string>, true>, std::allocator<std::__value_type<std::string, std::map<std::string, (anonymous namespace)::MetadataRecordingData>>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, std::map<std::string, (anonymous namespace)::MetadataRecordingData>>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, std::map<std::string, (anonymous namespace)::MetadataRecordingData>>, std::less<std::string>, true>>="__value_"Q}}}
{map<std::string, CMTime, std::less<std::string>, std::allocator<std::pair<const std::string, CMTime>>>="__tree_"{__tree<std::__value_type<std::string, CMTime>, std::__map_value_compare<std::string, std::__value_type<std::string, CMTime>, std::less<std::string>, true>, std::allocator<std::__value_type<std::string, CMTime>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, CMTime>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, CMTime>, std::less<std::string>, true>>="__value_"Q}}}
@"<MOVStreamWriterState>"
@"NSError"
@"NSArray"
@"<MOVStreamCustomEncoderConfigDelegate>"
@"<MOVStreamWriterDelegate>"
{?="value"q"timescale"i"flags"I"epoch"q}
^{__CVBuffer=}48@0:8I16I20I24I28i32I36I40I44
^{__CVBuffer=}32@0:8I16I20i24I28
^{__CFDictionary=}36@0:8I16I20i24@28
^{__CFDictionary=}32@0:8I16I20i24I28
^{__CFDictionary=}40@0:8I16I20I24i28I32I36
^{__CVBuffer=}24@0:8^{__CVBuffer=}16
B36@0:8^{__CVBuffer=}16^{__CVBuffer=}24i32
^{__CVPixelBufferPool=}32@0:8^{__CVBuffer=}16Q24
^{__CVBuffer=}32@0:8^{__CVBuffer=}16^{__CVPixelBufferPool=}24
^{__CVBuffer=}36@0:8^{__CVBuffer=}16^{__CVPixelBufferPool=}24B32
B32@0:8^{__CVBuffer=}16i24S28
B20@0:8I16
v40@0:8r*16Q24@32
B40@0:8^{__CVBuffer=}16^{__CVBuffer=}24i32B36
B32@0:8^{__CVBuffer=}16^{__CVBuffer=}24
B40@0:8^{__CVBuffer=}16^{__CVBuffer=}24^{__CVBuffer=}32
^{__CVPixelBufferPool=}52@0:8Q16Q24I32Q36Q44
^{__CVPixelBufferPool=}52@0:8Q16Q24I32@36Q44
^{__CVBuffer=}24@0:8^{__CVPixelBufferPool=}16
B40@0:8^{__CVBuffer=}16^{__CVBuffer=}24Q32
B32@0:8@16^{__CVBuffer=}24
B40@0:8@16^{__CVBuffer=}24Q32
@24@0:8^{__CVBuffer=}16
@32@0:8^{__CVBuffer=}16Q24
^{__CVBuffer=}36@0:8@16I24I28I32
^{__CVBuffer=}40@0:8^{__CFData=}16Q24Q32
B32@0:8^S16^{__CVBuffer=}24
B32@0:8^{__CVBuffer=}16^S24
q44@0:8Q16Q24Q32I40
q20@0:8I16
@32@0:8^{opaqueCMFormatDescription=}16@24
@44@0:8Q16Q24I32Q36
@44@0:8Q16Q24I32@36
^{OpaqueVTPixelTransferSession=}
@40@0:8^{__CVBuffer=}16d24@32
^{__CVBuffer=}16@0:8
^{__CVBuffer=}
^{__CVBuffer=}40@0:8^{__CVBuffer=}16^{StreamRecordingData=^{opaqueCMFormatDescription}B@@@@@@Q@@^{__CVPixelBufferPool}@@@{?=qiIq}Q@q}24^@32
r^{opaqueCMFormatDescription=}24@0:8^{StreamRecordingData=^{opaqueCMFormatDescription}B@@@@@@Q@@^{__CVPixelBufferPool}@@@{?=qiIq}Q@q}16
r^{opaqueCMFormatDescription=}32@0:8^{__CVBuffer=}16^{StreamRecordingData=^{opaqueCMFormatDescription}B@@@@@@Q@@^{__CVPixelBufferPool}@@@{?=qiIq}Q@q}24
I24@0:8^{StreamRecordingData=^{opaqueCMFormatDescription}B@@@@@@Q@@^{__CVPixelBufferPool}@@@{?=qiIq}Q@q}16
^{opaqueCMFormatDescription=}24@0:8^{opaqueCMFormatDescription=}16
Q20@0:8I16
B44@0:8@16Q24Q32I40
I24@0:8^{opaqueCMFormatDescription=}16
I36@0:8@16i24^@28
d24@0:8d16
@48@0:8@16I24I28@32@40
@24@0:8I16B20
B48@0:8^{__CVBuffer=}16^{__CVBuffer=}24i32B36i40i44
@"<MTLDevice>"
@"<MTLCommandQueue>"
[5@"<MTLComputePipelineState>"]
@24@0:8^{opaqueCMSampleBuffer=}16
B32@0:8@16^v24
@60@0:8^{__CVBuffer=}16@24{?=qiIq}32i56
B48@0:8{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}16^v40
i52@0:8{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}16i40^v44
@32@0:8@16^v24
@40@0:8@16^v24^@32
r^{opaqueCMFormatDescription=}24@0:8@16
I32@0:8@16^v24
@80@0:8@16@24@32@40@48@56@64^@72
@72@0:8@16@24@32@40@48@56^@64
@80@0:8@"AVAssetTrack"16@"AVAssetReader"24@"NSArray"32@"Version"40@"NSString"48@"MOVStreamReader"56@"<MOVStreamReaderDelegate>"64^@72
@72@0:8@"AVAssetTrack"16@"AVAssetReader"24@"Version"32@"NSString"40@"MOVStreamReader"48@"<MOVStreamReaderDelegate>"56^@64
@24@0:8^@16
@"NSDictionary"24@0:8^@16
@"NSDictionary"16@0:8
@"<MOVStreamPostProcessor>"16@0:8
v24@0:8@"<MOVStreamPostProcessor>"16
@40@0:8n@16o^{?={?=qiIq}{?=qiIq}}24o^@32
@"NSArray"40@0:8n@"NSString"16o^{?={?=qiIq}{?=qiIq}}24o^@32
@"AVAssetTrack"16@0:8
^{opaqueCMSampleBuffer=}32@0:8o^{?=qiIq}16o^@24
^{opaqueCMSampleBuffer=}40@0:8o^@16o^{?=qiIq}24o^@32
^{__CVBuffer=}32@0:8o^{?=qiIq}16o^@24
^{__CVBuffer=}40@0:8o^@16o^{?=qiIq}24o^@32
{CGAffineTransform=dddddd}16@0:8
@32@0:8o^{?={?=qiIq}{?=qiIq}}16o^@24
@24@0:8o^@16
@"NSArray"32@0:8o^{?={?=qiIq}{?=qiIq}}16o^@24
@"AVTimedMetadataGroup"24@0:8o^@16
@32@0:8^{?=qiIq}16^{?=qiIq}24
i52@0:8@16@24@32I40@44
i40@0:8@16@24@32
v64@0:8{CGAffineTransform=dddddd}16
v24@0:8q16
@"<MOVStreamPostProcessor>"
@"AVAssetReaderTrackOutput"
@"AVAssetReaderOutputMetadataAdaptor"
@"NSData"
@"Version"
@"<MOVStreamReaderDelegate>"
@"MOVStreamReader"
@"AVAssetReader"
@"AVAssetTrack"
@40@0:8@16@24^@32
@32@0:8@16^{?={?=qiIq}{?=qiIq}}24
I24@0:8@16
@32@0:8@"NSURL"16^@24
@40@0:8@"NSURL"16@"<MOVStreamReaderDelegate>"24^@32
@"NSArray"24@0:8@"NSString"16
@"NSArray"32@0:8@"NSString"16^{?={?=qiIq}{?=qiIq}}24
I24@0:8@"NSString"16
B24@0:8^@16
@32@0:8n@16o^@24
^{opaqueCMSampleBuffer=}48@0:8n@16o^@24o^{?=qiIq}32o^@40
^{__CVBuffer=}48@0:8n@16o^@24o^{?=qiIq}32o^@40
@"<MOVStreamReaderVideoStreamOutput>"32@0:8n@"NSString"16o^@24
@"<MOVStreamReaderAudioStreamOutput>"32@0:8n@"NSString"16o^@24
@"<MOVStreamReaderSceneStreamOutput>"32@0:8n@"NSString"16o^@24
@"<MOVStreamReaderMetadataStreamOutput>"32@0:8n@"NSString"16o^@24
^{opaqueCMSampleBuffer=}48@0:8n@"NSString"16o^@24o^{?=qiIq}32o^@40
^{__CVBuffer=}48@0:8n@"NSString"16o^@24o^{?=qiIq}32o^@40
B48@0:8{?=qiIq}16^@40
{CGSize=dd}24@0:8@16
{?=qiIq}24@0:8@16
^{__CVBuffer=}40@0:8@16^{?=qiIq}24^@32
^{opaqueCMSampleBuffer=}40@0:8@16^{?=qiIq}24^@32
@48@0:8@16@24^{?={?=qiIq}{?=qiIq}}32^@40
@40@0:8@16^{?={?=qiIq}{?=qiIq}}24^@32
@"AVURLAsset"
@"NSMutableDictionary"
@"NSMutableArray"
@32@0:8^{StreamRecordingData=^{opaqueCMFormatDescription}B@@@@@@Q@@^{__CVPixelBufferPool}@@@{?=qiIq}Q@q}16d24
@24@0:8^{StreamRecordingData=^{opaqueCMFormatDescription}B@@@@@@Q@@^{__CVPixelBufferPool}@@@{?=qiIq}Q@q}16
Q32@0:8^{StreamRecordingData=^{opaqueCMFormatDescription}B@@@@@@Q@@^{__CVPixelBufferPool}@@@{?=qiIq}Q@q}16d24
d24@0:8^{StreamRecordingData=^{opaqueCMFormatDescription}B@@@@@@Q@@^{__CVPixelBufferPool}@@@{?=qiIq}Q@q}16
i20@0:8i16
@28@0:8d16B24
@"MOVStreamEncoderConfig"
B24@0:8^{OpaqueVTCompressionSession=}16
@40@0:8d16@24@32
@40@0:8@16@24@32
v36@0:8i16i20i24d28
v64@0:8^{__CVBuffer=}16{?=qiIq}24^{__CFDictionary=}48@56
v24@0:8i16I20
v64@0:8^{opaqueCMSampleBuffer=}16{?=qiIq}24@48i56I60
^{HEVCLosslessEncoder=@iid^{OpaqueVTCompressionSession}{EncoderConfig=iiiidBBBBBi}{?=qiIq}IIIBB}
@"<VideoEncoderInterfaceDelegate>"
@(#)PROGRAM:MOVStreamIO  PROJECT:MOVStreamIO-1
A610L010L3.315.114ggr4ggb4rbg4brg
610L010L3.315.114ggr4ggb4rbg4brg
 47:=
010L010L010L010L010L010L010Lfvuy610L3.31
ssES7>ZL#
com.apple.videoeng.streamerror
com.apple.videoeng.streamwriterwarning
com.apple.videoeng.streamreaderwarning
com.apple.videoeng.streamreadererror
ErrorInfoStreamId
Unknown
StreamEncoderType
PixelFormat
ColorStreamBitrate
EncodingQuality
VideoTransform
HEVCQPValue
ExpectedFrameRateForStream
RawBayerRearrangeTypeKey
UseSlimXCompression
FrameMetadataFormat
OriginalTimestampWhenWrittenToFile
MarksOutputTrackAsEnabled
VideoTrackTypeInfo
PixelBufferExactBytesPerRow
CustomEncoderConfig
StreamConvertNonPlanarBuffersTo8bitMonochrome
ProResEncodingQuality
com.apple.mio.tracktype.AlphaDataOnly
com.apple.mio.tracktype.NoVideoData
com.apple.mio.tracktype.IRData
com.apple.mio.tracktype.RasterOrientedVideoData
hvc1
hw.pagesize
hw.cachelinesize
Cannot retrieve available video encoder list, error %d
{CGAffineTransform=dddddd}
Embedded configuration must not be nil.
decoding is set up for this sample buffer. Cannot tell whether it's a key frame or not
This sample buffer doesn't have any attachment. Cannot tell whether it's a key frame or not
mdta/com.apple.track_kind
mdta/com.apple.stream_sample_attachments
mdta/com.apple.metadata_stream_item
version
default_options
mdta/com.apple.framework.state.MOVStreamIO
mdta/com.apple.stream_sample_format
mdta/com.apple.stream_encoded_sample_format
mdta/com.apple.stream_related_to_stream
mdta/com.apple.stream_relation_specifier
mdta/com.apple.stream_type_info
mdta/com.apple.stream_sample_exact_bytes_per_row
mdta/com.apple.stream_sample_attachments_serialization_mode
mdta/com.apple.stream_raw_bayer_rearrange_type
metadata
CFBundleShortVersionString
%d.%d.%d%@
%d.%d.%d
%d.%d
Cannot compare with nil object.
Version: %@
Cannot copy version %@
mdta/com.apple.trackStreamType
mdta/com.apple.metadataTrackType
mdta/com.apple.MOVStreamIO.stateMetadataIdentifier
mdta/com.apple.MOVStreamIO.versionKey
mdta/com.apple.MOVStreamIO.defaultOptions
mdta/com.apple.trackStreamPixelFormat
mdta/com.apple.trackStreamEncodedPixelFormat
mdta/com.apple.trackStreamAttachmentsSerializationMode
mdta/com.apple.trackTypeInfo
mdta/com.apple.trackStreamRelatedToStream
mdta/com.apple.trackStreamRelationSpecifier
mdta/com.apple.exactBytesPerRow
mdta/com.apple.RawBayerRearrangeType
mdta/com.apple.rawSampleBufferAttachmentDict
mdta/com.apple.metadataDict
3.15.0
Cannot create pixel buffer pool for adjusting Bytes Per Row. (%@)
Cannot convert pixel buffer. (%@)
Invalid ExactBytesPerRow value type!
Assert: (%d) %s - f: %s, l: %d
VTCompressionSessionCreate failed
/Library/Caches/com.apple.xbs/Sources/MOVStreamIO_Sim/MOVStreamIO/VTEncoder/MOVStreamEncoderConfig.mm
ProfileLevel
SupportedValueList
Cannot read config from file '%@'.
codecType
encoderSpecification
sessionProperties
Cannot write to file %@.
Finishing Queues
Cannot create pixel buffer pool for Non-Planar stream.
v8@?0
com.apple.movstreamio.framework
DEBUG_LOG
com.apple.movstreamio.defaultlog
MOVStreamIO
mdta/com.apple.rawIMUDict
mdta/com.apple.imuTrackType
AudioFormatObject
AdditionalAudioSettings
readyForMoreMediaData
Target path is an existing directory.
com.apple.streamwriter.writing
com.apple.streamwriter.encoding
init
Unknown stream id.
Stream is an audio stream, use [MOVStreamWriter setWritingBufferCapacity:forAudioStream:]
Stream is a video stream, use [MOVStreamWriter setWritingBufferCapacity:forStream:]
Stream is an audio stream, use [MOVStreamWriter writingBufferCapacityForAudioStream:]
Stream is an audio stream, use [MOVStreamWriter writingBufferCapacityForStream:]
Stream is an audio stream, use [MOVStreamWriter writingBufferUsageForAudioStream:]
Stream is an audio stream, use [MOVStreamWriter writingBufferUsageForStream:]
State Change: %@ - (%@) -> %@
status
Caller must provide a delegateCallbackQueue
Cannot find track for stream %@
Cannot add tracks while not idle
Cannot add two metadata tracks with the same name
Unable to find stream with identifier %@
recordingConfiguration cannot be null or empty
Format description cannot be null
Cannot add two tracks with the same stream name
Not matching kMIOPixelBufferExactBytesPerRow value %@.
No video track type info (MIOVideoTrackTypeInfo) specified for stream '%@'.
Invalid audio format
Incompatible item %@:%@.
Current state does not support prepareToRecord.
prepareToRecord
prepareQueue
executePrepareToRecord
-[MOVStreamWriter executePrepareToRecordWithMovieMetadata:]_block_invoke
MOVStreamWriter.mm
-[MOVStreamWriter addIsReadyObservers]
Cannot append to stream that hasn't been set up.
Cannot append: writer is not recording. Current writer state: %@
[VTEncoder] processing buffer for stream '%@' is full, dropping buffer (Pending:%lld Queue:%ld Fifo:%ld Capacity:%ld).
Mode for pixel buffer attachements for RawBayer pixel buffers is not set to PLIST! Default format is overriden by client (kMIOFrameAttachmentSerializationMode), this will be ignored for RawBayer.
appendPixelBuffer
Exception occurred during encoding %@ for stream '%@'. Dropping frame.
Sample buffer was appended with presentation timestamp (%f) less than (or equal to) previous sample buffer (%f) for stream '%@'. Dropping frame.
Sample buffer creation failed (error: %i) for stream '%@'. Dropping frame. Info: Used FD: %@  Buffer FD: %@
Sample Buffer cannot be nil.
Attachments cannot be nil.
Cannot append to a stream that hasn't been set up.
Pixel format not defined for stream '%@'.
Sample Buffer with invalid PTS for stream '%@'.
Cannot append sample buffer with encoder type not MIOStreamEncoderTypeNone.
[FIFO] FIFO buffer for stream '%s' is full, dropping older buffer.
Sample buffer encoding failed (encoder status: %i flags: %d) for stream '%@'. Dropping frame.
Missing customEncoderConfigDelegate '%@'. Cannot encode!
overrideVideoEncoderSpecificationForstreamId
configureSessionOverride
codecTypeOverrideForstreamId
Cannot append metadata when the track was never added. Call addMetadataTrack: before prepareToRecord.
Invalid time stamp is not supported for metadata for stream '%@'.
No metadata appended because it's empty
No metadata appended because the AVTimedMetadataGroup* is nil
FIFO buffer for metadata stream '%@' is full, dropping older buffer.
Cannot append associated metadata when the track was never added. Call addMetadataTrackAssociatedWith:forIdentifier: before prepareToRecord.
nullptr IMU metadata
asyncWriteAssociatedMetadata
[%s associated with %s] metadata input not ready for more data, dropping samples
Cannot append audioSample <null>.
Cannot append stream type that hasn't been set up.
Could not append audio sample because it is nil
Current writer state does not support finishRecording.
finishRecording
Cannot finishRecording.
finishAndDrainFifoFirst
-[MOVStreamWriter finishAndDrainFifoFirst]
com.apple.movstreamwriter.timeout
cancelRecording
forceFinishRecording
finishAVWriter
-[MOVStreamWriter finishAVWriter]_block_invoke
processCancelRecording
Late frames arrived from encoder. Drain fifos again...
processFinishRecording-checkIfFifoAreEmpty
q24@?0@8@16
processFinishRecording
checkForFinishing
-[MOVStreamWriter checkForFinishing]
writeSampleBuffer
Exception occurred during writing %@ for stream '%@'. Dropping frame.
writeMetadataOfSample
Exception occurred during writing %@ for stream '%@'. Dropping sample.
writeMetadata
-[MOVStreamWriter encoderTypeForStream:]
configuration
Error creating writer output setting for stream '%@' Error: %@.
Unsupported media type (%d) for stream '%@'.
Unable to use output settings (%@) for track '%@'.
Error creating AVAssetWriterInput (%@) for track '%@'.
Unable to get metadata format description for stream: %@
Can't add stream and metadata inputs to the asset writer to stream: %@
Can't add smetadata input to the asset writer to stream: %@
Cannot setup metadata associated with %@: %@ stream doesn't exist
mdta/%@
Unable to get metadata format
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
Recording
%d_%zu
Cannot allocate reference buffer.
Invalid pixel buffer configuration.
875704438_1
1278226736_0
1735549492_0
1983131704_0
2019963440_1
2019963442_0
2016686640_0
875704438_0
825306677_0
1278226742_0
1919379252_0
875836518_1
2019963440_0
2016687156_1
875836518_0
825437747_0
2019963956_1
875836534_1
2016686642_1
1650943796_0
875836534_0
1111970369_0
1932996149_0
2016687156_0
1983066168_0
875704422_1
1278226488_0
2019963442_1
2019963956_0
2016686640_1
1734505012_0
2016686642_0
875704422_0
Cannot create pixel buffer transfer session
Cannot create pixel buffer pool
Cannot create new pixel buffer.
Cannot transfer pixel buffer
Cannot copy pixel buffer
MOVStreamFrameConverter dealloc > release pool
Frame %f (%@)
CVBytesPerRow
%@.%@
%@[%d]
Unsupported data type, cannot serialize object %@.
Unsupported raw data format, cannot deserialize object.
BitsPerComponent
FullRangeVideo
Cannot find track (%d) in '%@'.
No format description for track (%d) in '%@'.
Cannot add output to track (%d) in '%@'.
Cannot read from track (%d) in '%@'.
Cannot get sample buffer from track (%d) in '%@': %@
No pixel buffer in track (%d) in '%@'.
No sample buffer in track (%d) in '%@'.
HEVC_Monochrome12_AutoLevel
HEVC_Monochrome10_AutoLevel
RawBayer
Error joining Warhol-Buffer for RawBayer pixel buffer.
Init
Finishing AVWriter
splitBayerIntoWarhol
joinWarholIntoBayer
splitCompandedBayerIntoWarhol
joinCompandedWarholIntoBayer
-[MetalPixelBufferUtility processBayerBuffer:withWarholBuffer:shiftCount:msbReplication:operation:sampleSize:]
MetalPixelBufferUtility.m
(width % vectorsPerLine) == 0
commandBuffer != nil
computeEncoder != nil
Depth
Color
FrontDepth
FrontColor
FrontIR
Cancelled
mdta/custom.
RawBayerFormat
mdta/com.apple.stream_sample_exact_bytes_per_row_multiplanar
%@%@
Invalid value type for PixelBufferExactBytesPerRow.
Preparing Cancelling
Forcing Finish
Frame size too small
/Library/Caches/com.apple.xbs/Sources/MOVStreamIO_Sim/MOVStreamIO/VTEncoder/HEVCLosslessEncoder.mm
Cannot check AllowFrameReordering status of encoding session. Assuming disabled.
VTCompressionSessionEncodeFrame failed
kVTCompressionPropertyKey_Usage failed
HEVC_Main_AutoLevel
HEVC_Main10_AutoLevel
HEVC_Main444_AutoLevel
HEVC_Main44410_AutoLevel
HEVC_MainStill_AutoLevel
VTVideoEncoderSetProperty failed
kVTCompressionPropertyKey_Priority failed
VTVideoEncoderSetProperty kVTCompressionPropertyKey_MaxKeyFrameIntervalDuration failed
VTVideoEncoderSetProperty kVTCompressionPropertyKey_ExpectedFrameRate failed
EnableRCFW
VTVideoEncoderSetProperty my_kVTCompressionPropertyKey_EnableRCFW failed
EnableQPMod
VTVideoEncoderSetProperty my_kVTCompressionPropertyKey_EnableQPMod failed
InitialQPI
VTVideoEncoderSetProperty  my_kVTCompressionPropertyKey_InitialQPI failed
InitialQPP
VTVideoEncoderSetProperty my_kVTCompressionPropertyKey_InitialQPP failed
InitialQPB
VTVideoEncoderSetProperty my_kVTCompressionPropertyKey_InitialQPB failed
LossLess
VTVideoEncoderSetProperty my_kVTCompressionPropertyKey_LossLess failed
VTVideoEncoderSetProperty kVTCompressionPropertyKey_RealTime failed
DebugMetadataSEI
VTVideoEncoderSetProperty my_kVTCompressionPropertyKey_DebugMetadataSEI2 failed
OutputBitDepth
VTVideoEncoderSetProperty my_kVTCompressionPropertyKey_OutputBitDepth failed
Cancelling
mdta/com.apple.trackStreamEncoding
DeviceMotion
RawGyro
RawAccel
slim
HEVCMonochrome
h264
HEVC
none
Can't add audio track (%@) to the AVAssetReader.
Can't add metadata track (%@) to the AVAssetReader.
Unknown IMU data type, ignoring: '%@'
Can't add output for scene track (%@) to the AVAssetReader.
Invalid ExactBytesPerRow value type for stream '%@': %@.
Decoder required for '%@' is not available.
Unknown stream type detected.
Undefined pixel format for stream '%@'. Ignoring stream.
Can't add video track (%@) to the AVAssetReader.
Cannot read sample buffer for '%@': %@
-[MOVStreamReaderStreamOutput nextSampleBufferForStreamAttachementsData:timestamp:error:]
MOVStreamReaderStreamOutput.mm
self.assetReader.error != nil
Metadata PLIST Read error: %@
Wrong attachments serialization mode (fallback to JSON).
Metadata JSON Read error: %@
 Unknown AttachmentSerializationMode = %d for frame metadata!
-[MOVStreamReaderStreamOutput grabNextMetadataItemsOfTrackAssociatedWithStreamWithIdentifier:timeRange:error:]
No AVAssetReaderOutputMetadataAdaptor found for metadata stream: '%@'
-[MOVStreamReaderStreamOutput grabNextTimedMetadataGroupOfStreamError:]
-[MOVStreamReaderStreamOutput grabNextMetadataOfStreamTimeRange:error:]
HEVCMonochrom
MetadataKeyTable
MetadataKeyValue
BackColorWide
BackColorTele
BackIR
BackDepth
Cannot create L008 pixel buffer pool for Non-Planar stream.
3.17.17
MIOBossMode
MIODisableFrameReordering
MIOBitrateMultiplier
MIOBitrateOverride
MIOForceColorLossless
MIOForce10bitMonoByVT
MIOForceLossless8bitMonoByVT
MIOSkipSourceHint
URL must be a file URL type. (%@)
File doesn't exist. (%@)
No MOVStreamReaderDelegate set.
Invalid file path. (%@)
MOVStreamReader asset is nil
Time to reset to is invalid
-video
-%lu
-audio
-scene
-metadata
Start Reading (AVAssetReader) Error: %@  Status: %ld
File doesn't contain stream '%@'.
No or invalid MOVStreamIO version information in MOV!
-[MOVStreamReader movVersionCheck]
MOVStreamReader.mm
versionError == nil
MOV created with a newer MOVStreamIO version '%@' (current '%@')!
v32@?0@"AVMetadataItem"8Q16^B24
Missing stream id.
File doesn't contain data for requested stream '%@'.
Stream '%@' is not a video stream.
Stream '%@' is not an audio stream.
Stream '%@' is not a scene stream.
Stream '%@' is not a metadata stream.
Missing stream id for copy next frame.
Cannot grab metadata. Missing metadata stream id.
Cannot grab metadata. Unknown metadata stream '%@'.
Error joining Warhol-Buffer for Companded-RawBayer pixel buffer.
SlimXFormat
+[MOVStreamOutputSettings outputSettingsForStream:defaultFrameRate:]
MOVStreamOutputSettings.mm
Invalid encoder type.
ap4x
ProRes4444 only supports high and medium quality setting.
AllowFrameReordering
Quality
Failed
Cannot create pixel buffer pool for RawBayer stream.
duration = %5.3f msec, min/max/avg/count = %5.3f/%5.3f/%5.3f/%d
com.apple.streamwriter.vtencoding
Encoder not configured yet.
Preparing
Finished
Draining FIFO
 ERROR [MOVStreamIO]: %{public}@ 
 WARNING [MOVStreamIO]: %{public}@ 
ExactBytesPerRow count doesn't match pixel buffers plane count!
Invalid ExactBytesPerRow value type!
Cannot convert pixel buffer. (%{public}@)
%{public}@
 ERROR: Cannot read config from file '%{public}@'. 
 ERROR: %{public}@. 
MOVStreamWriter init with URL %{public}@
MOVStreamWriter dealloc
Flushing pixel buffer pool...
Configuration not supported.
Start prepareToRecordWithMovieMetadata
Init av writer...
MOVStreamWriter set movieFragmentInterval to %f
Writer setupAssetWriterStreamInputs
Writer setupMetadataInputs
Writer setupAssociatedMetadataInputs
Writer add MOV metadata
Writer startWriting
Writer register KVO
Writer transition status
 ERROR: 'addIsReadyObservers' called twice 
MOVStreamWriter appendPixelBuffer at '%5.3f' to stream '%{public}@'
MOVStreamWriter appendSampleBuffer at '%5.3f' to stream '%{public}@'
[FIFO] add to fifo '%{public}@' %ld
MOVStreamWriter metadata group at '%5.3f' to stream '%{public}@'
MOVStreamWriter metadata at '%5.3f' to stream '%{public}@'
Info: The metadata append triggered the start for the asset writer. Are you sure this is what you want?
 ERROR: appendTimedMetadataGroup exception: %{public}@ 
Close all VT encoders.
Wait for encoders...
All encoders closed.
Writing pending frame attachements for stream '%{public}@'.
FINISHING!
[FIFO] Precheck All Fifo items written '%{public}@'
 ERROR: [FIFO] CANNOT Write Item of metadata stream '%{public}@' for state %{public}@ 
Start Session by '%{public}@' at %f
 ERROR: [FIFO] CANNOT Write Item of stream '%{public}@' for state %{public}@ 
Will add AVAssetWriterInput for stream '%{public}@' with outputSettings: %{public}@ 
 sourceFormatHint: %{public}@
Setup metadata track with identifier "%{public}@"
Setup metadata track with legacy identifier "%{public}@"
BytesPerPixelLookUp: Register %zu for %@
Cannot allocate reference buffer.
Invalid pixel buffer configuration.
ERROR CREATING PIXELBUFFERREFCOPY %d
Inconsistent height.
Inconsistent bytes per row.
Inconsistent width.
Error creating pixel buffer from pool (%d).
Cannot copyPixelBuffer, not matching plane count
Cannot copyPixelBuffer, not matching bytes per row
Can't serialize object as JSON: %{public}@
Invalid ExactBytesPerRow value type: %{public}@
Unable to serialize MOVStream State metatdata as JSON: %{public}@
Failed to create Metal Device.
Failed to find the default library. error: %{public}@
Failed to find the metal splitBayerIntoWarhol function.
Failed to find the metal joinWarholIntoBayer function.
Failed to find the metal splitCompandedBayerIntoWarhol function.
Failed to find the metal joinCompandedWarholIntoBayer function.
Failed to created pipeline state object, error %{public}@.
Failed to create the command queue.
Bayer Buffer width is not a multiple of 8
processBayerBuffer error recevied: %{public}@
Unable to serialize audio metatdata as PLIST: %{public}@
Error: The metadata dictionary is not valid for XML v1.0 plist Format
Error: Cannot serialize metadata to plist
Unable to serialize depth metatdata as JSON: %{public}@
Can't create metadata format description...
AllowFrameReordering: %d
Custom video encoder configuration.
Encoder Config >> kVTCompressionPropertyKey_Usage = %d
Profile passed unrecognized (%d). exit.
Encoder Config >> kVTCompressionPropertyKey_ProfileLevel = %{public}@
Encoder Config >> kVTCompressionPropertyKey_Priority = %d
Encoder Config >> kVTCompressionPropertyKey_AllowFrameReordering = %d
Encoder Config >> kVTCompressionPropertyKey_MaxKeyFrameIntervalDuration = %f
Encoder Config >> kVTCompressionPropertyKey_ExpectedFrameRate = %f
Encoder Config >> my_kVTCompressionPropertyKey_LossLess = %d
Encoder Config >> kVTCompressionPropertyKey_RealTime = %d
Encoder Config >> my_kVTCompressionPropertyKey_DebugMetadataSEI2 = %d
Assert: (%d) %s - f: %s, l: %d
Encoder Config >> my_kVTCompressionPropertyKey_OutputBitDepth = %d
Assert: %s - f: %s, l: %d
*-----------------------------------------------------------------------------*
Detected %{public}@ stream
Detected %{public}@ IMU data type
Detected scene %{public}@ stream
Got a Depth/IR stream which uses unknown version of SLIM (%d)
[WARNING] MOVStreamIO Debug Mode enabled. This could change the Framework behavior.
[WARNING] Default setting for '%{public}@' was changed from '%{public}@' to '%{public}@'. This can affect your recordings!
 ERROR: Cannot initialize reader: %{public}@ 
MOVStreamReader registerOutput with nil output.
MOVStreamReader registerOutput unknown media type (%ld).
 ERROR: %{public}@ 
MOVStreamReader: Setup video output for '%{public}@'.
MOVStreamReader: Register video output for '%{public}@'.
MOVStreamReader: Register video output for '%{public}@', failed.
MOVStreamReader: Setup audio output for '%{public}@'.
MOVStreamReader: Register audio output for '%{public}@'.
MOVStreamReader: Register audio output for '%{public}@', failed.
MOVStreamReader: Setup scene output for '%{public}@'.
MOVStreamReader: Register scene output for '%{public}@'.
MOVStreamReader: Register scene output for '%{public}@', failed.
MOVStreamReader: Setup metadata output for '%{public}@'.
MOVStreamReader: Register metadata output for '%{public}@'.
MOVStreamReader: Register metadata output for '%{public}@', failed.
MOVStreamIO state metadata is not in PLIST format. Fallback to JSON.
MOVStreamIO state metadata JSON error: %{public}@
 WARNING [MOVStreamReader]: %{public}@ 
MOVStreamWriter: Disable 'AllowFrameReordering' related to r50244907.
No sample buffer received. VTCompressionSession failed with status: %d
%{public}@: Encoder closed.
 ERROR: Set '%{public}@' to '%{public}@' in encoder config (Err: %d). 
MOVStreamIO
MOVStreamIOUtility
Version
NSCopying
DefaultPostProcessor
MOVStreamPostProcessor
NSObject
MOVStreamEncoderConfig
MOVStreamWriterStateFinishQueues
MOVStreamWriterState
L008ToNonPlanarPostProcessor
MOVStreamPostProcessorSizeAdjusting
MIOLog
Delegate
SampleBufferAndMetadata
MOVStreamWriter
VideoEncoderInterfaceDelegate
MOVStreamWriterStateContext
MOVStreamWriterDeprecated
MOVStreamWriterDeprecationNominates
MOVStreamWriterStateRecording
PixelBufferUtility
PreProcessorFactory
MOVStreamFrameConverter
MOVStreamFrame
DefaultPreProcessor
MOVStreamPreProcessor
Private
PostProcessorFactory
L016Raw14PreProcessor
RawBayerFromYUVPostProcessor
MOVStreamWriterStateInit
MOVStreamWriterStateFinishAVWriter
MetalPixelBufferUtility
Legacy
MOVStreamWriterStateCancelled
TrackMetadata
MOVStreamWriterStatePrepareCancelling
MOVStreamWriterStateForceFinish
MOVStreamWriterStateCancelling
MOVStreamReaderStreamOutput
MOVStreamReaderStreamOutputPrivate
MOVStreamReaderVideoStreamOutputPrivate
MOVStreamReaderVideoStreamOutput
MOVStreamReaderSampleStreamOutput
MOVStreamReaderBaseStreamOutput
MOVStreamReaderAudioStreamOutput
MOVStreamReaderMetadataStreamOutput
NonPlanarToL008Processor
MOVStreamOptions
MOVStreamReader
MOVStreamReaderDeprecationNominates
MOVStreamReaderDeprecated
MOVStreamReaderEnhancedAccess
CompandedRawBayerPostProcessor
MOVStreamOutputSettings
MOVStreamWriterStateFailed
RawBayerTo1stPlaneYUVPreProcessor
CompandedRawBayerPreProcessor
VideoEncoderInterface
EncoderConfigDelegate
L016Raw14PostProcessor
MOVStreamWriterStatePreparing
RawBayerPostProcessor
RawBayerPreProcessor
MOVStreamWriterStateFinished
MOVStreamWriterStateDrainFifo
RawBayerToYUVPreProcessor
length
valueWithBytes:objCType:
error
stringByTrimmingCharactersInSet:
allValues
valueForKey:
enumerateObjectsUsingBlock:
computeCommandEncoder
stringByReplacingOccurrencesOfString:withString:
value
allKeys
path
componentsSeparatedByString:
stringByAppendingFormat:
firstObject
userInfo
associatedTracksOfType:
setOutputURL:
replaceObjectAtIndex:withObject:
endEncoding
getValue:
canApplyOutputSettings:forMediaType:
startWriting
setOutputFileType:
removeTrack:
compare:
outputSettings
assetWriterInputMetadataAdaptorWithAssetWriterInput:
unsignedLongValue
preferredTransform
countByEnumeratingWithState:objects:count:
identifier
commit
addTrackAssociationWithTrackOfInput:type:
startSessionAtSourceTime:
count
minFrameDuration
canAddOutput:
commandBuffer
addOutput:
startReading
finishWritingWithCompletionHandler:
unsignedIntegerValue
initWithMediaType:outputSettings:sourceFormatHint:
assetReaderWithAsset:error:
setValue:forKey:
setObject:forKey:
invertedSet
canAddInput:
unsignedIntValue
objectForKeyedSubscript:
rangeOfString:
initWithItems:timeRange:
newFunctionWithName:
defaultManager
assetReaderTrackOutputWithTrack:outputSettings:
items
cStringUsingEncoding:
URLAssetWithURL:options:
standardUserDefaults
setValue:
removeObserver:forKeyPath:
objectForKey:
metadataItem
newDefaultLibraryWithBundle:error:
setDataType:
copyNextSampleBuffer
integerValue
rangeOfCharacterFromSet:
removeObjectAtIndex:
objectForInfoDictionaryKey:
asset
writeToFile:atomically:
code
tracksWithMediaType:
newComputePipelineStateWithFunction:error:
intValue
isValidJSONObject:
bytes
removeItemAtURL:error:
addObject:
objectAtIndexedSubscript:
arrayWithObjects:count:
tracks
newCommandQueue
fileURLWithPath:
initWithData:encoding:
removeItemAtPath:error:
bundleForClass:
objectAtIndex:
addEntriesFromDictionary:
setComputePipelineState:
setMediaTimeScale:
trackWithTrackID:
streamWriter:overrideVideoEncoderSpecificationForStream:
isReadyForMoreMediaData
newBufferWithBytesNoCopy:length:options:deallocator:
arrayWithObjects:
fileExistsAtPath:isDirectory:
numberWithUnsignedLong:
setBytes:length:atIndex:
naturalSize
maxTotalThreadsPerThreadgroup
addInput:
decimalDigitCharacterSet
setMarksOutputTrackAsEnabled:
arrayWithObject:
propertyListWithData:options:format:error:
copy
fileExistsAtPath:
setBuffer:offset:atIndex:
removeAllObjects
boolValue
numberWithUnsignedInt:
initWithURL:options:error:
sortedArrayUsingComparator:
propertyList:isValidForFormat:
willChangeValueForKey:
arrayWithCapacity:
setTimeRange:
boolForKey:
numberWithInteger:
waitUntilCompleted
dataWithPropertyList:format:options:error:
doubleValue
addObserver:forKeyPath:options:context:
exportAsynchronouslyWithCompletionHandler:
initWithURL:fileType:error:
mutableCopy
trackID
numberWithInt:
dataWithLength:
markAsFinished
initWithCapacity:
containsObject:
mutableBytes
streamWriter:configureSessionOverride:forStream:
setIdentifier:
domain
UTF8String
numberWithDouble:
JSONObjectWithData:options:error:
dataWithJSONObject:options:error:
initWithTrack:outputSettings:
dispatchThreadgroups:threadsPerThreadgroup:
appendTimedMetadataGroup:
streamWriter:codecTypeOverrideForStream:
initWithAssetReaderTrackOutput:
formatDescriptions
longValue
dataWithContentsOfFile:
initWithAsset:presetName:
processInfo
setAlwaysCopiesSampleData:
nominalFrameRate
timeRange
localizedDescription
exceptionWithName:reason:userInfo:
isOperatingSystemAtLeastVersion:
cancelWriting
addObjectsFromArray:
appendSampleBuffer:
isFileURL
initWithAsset:error:
didChangeValueForKey:
registerDefaults:
nextTimedMetadataGroup
valueWithRange:
formatDescription
setExtraAttributes:
initWithSuiteName:
dictionaryWithObjects:forKeys:count:
stringWithUTF8String:
errorWithDomain:code:userInfo:
dictionaryWithCapacity:
lengthOfBytesUsingEncoding:
setExpectsMediaDataInRealTime:
allocWithZone:
cancelReading
isEqualToString:
stringWithFormat:
errorByAddingStreamId:
readerErrorWithMessage:code:
populateReaderError:message:code:
readerWarningWithMessage:code:
populateStreamError:message:code:
writerWarningWithMessage:code:
streamErrorWithMessage:code:
internalErrorWithMessage:code:
movStreamIOErrorWithDomain:message:code:
movStreamIOWarningWithDomain:message:code:
transformAngleFromVideoOrientation:
jsonFriendlyCopy:
plistFriendlyCopyOf:
formatForPixelBuffer:
getPreferredPlaneAlignmentSize
getPreferredBytesPerRowAlignmentSize
isEncoderAvailableForEncoderType:
isEncoderAvailableWithEncoderName:
getDefaultBitrateForVideoDimension:atExpectedFramerate:forEncoderType:
valueWithCGAffineTransform:
CGAffineTransformValueFromNSValue:
addTransform:toConfiguration:
addTrackTypeInfo:toConfiguration:
addEncodingQuality:toConfiguration:
monochrome10bitHEVCLosslessEncoderConfig
monochrome8bitHEVCLosslessEncoderConfig
monochrome8bitHEVCEncoderConfig
monochrome8bitHEVCEncoderConfigWithBitrate:
monochrome10bitHEVCEncoderConfigWithQuality:
monochrome8bitHEVCEncoderConfigWithQuality:
colorHEVCEncoderConfigWithQuality:
color8bitHEVCWithAlphaEncoderConfig
color8bitHEVCWithAlphaEncoderConfigWithBitrate:
colorHEVCLosslessEncoderConfig
colorHEVCEncoderConfig
colorWithAlphaLossless8bitHEVCEncoderConfig
colorH264EncoderConfig
colorHEVCEncoderConfigWithBitrate:
colorH264EncoderConfigWithBitrate:
slimEncoderConfig
slimXEncoderConfig
noneEncoderConfig
sampleBufferConfigWithPixelFormat:
audioNoneEncoderConfig
customEncoderConfig
customEncoderConfigWithEmbeddedConfiguration:
monochrome10bitHEVCEncoderConfig
monochrome10bitHEVCEncoderConfigWithBitrate:
proRes4444EncoderConfig
proRes422EncoderConfig
proRes422EncoderConfigWithQuality:
proRes4444EncoderConfigWithHighQuality
isKeyFrame:error:
init
versionZero
pre3_15_0_Mapping
allVersionedKeysForKey:modifier:
copyWithZone:
initWithVersionString:error:
getVersionAsString
compareToVersion:
isEqualToVersion:
description
isAllDigitsInString:
isEqual:
hash
versionedKey:modifier:
major
minor
bugfix
modifier
.cxx_destruct
_major
_minor
_bugfix
_modifier
TI,R,V_major
TI,R,V_minor
TI,R,V_bugfix
T@"NSString",R,V_modifier
dealloc
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
initWithOriginalPixelFormat:
processedPixelBufferFrom:metadata:error:
removePadding
setRemovePadding:
processedPixelFormat
exactBytesPerRow
setExactBytesPerRow:
originalPixelFormat
setOriginalPixelFormat:
TI,R
T@,&
TI,N
minimumBytesPerRowForPixelBuffer:
shouldChangeBytesPerRowOfPixelBuffer:
shouldRemovePaddingOfPixelBuffer:metadata:
pixelBufferWithoutPaddingFromPixelBuffer:error:
pixelBufferWithExactBytesPerRow:fromPixelBuffer:error:
_converter
TB,VremovePadding
T@,&,VexactBytesPerRow
TI,N,VoriginalPixelFormat
isEncoderAvailableOfType:withId:
encoderIdsForType:
monochrome10BitEncoderConfigUsingAVEWithQuality:
monochrome10BitEncoderConfigUsingAVEWithBitrate:
supportedProfileLevelsForHEVC
initWithCodecType:encoderSpecification:sessionProperties:
initWithContentsOfFile:error:
writeToFile:error:
codecType
setCodecType:
encoderSpecification
setEncoderSpecification:
sessionProperties
setSessionProperties:
_codecType
_encoderSpecification
_sessionProperties
TI,V_codecType
T@"NSDictionary",&,V_encoderSpecification
T@"NSDictionary",&,V_sessionProperties
canConfigure:
canAppendData:
canWriteData:
stopWriterWhenFifosAreEmpty:
canFinishRecording:
prepareRecording:
prepareFinished:
finishRecording:
forceFinishRecording:
nextFinishStep:
cancelRecording:
finishedCancelRecording:
criticalErrorOccurred:context:
activateWithContext:
name
writerStatus
T@"NSString",R
Tq,R
adjustedWidthForWidth:
_pool
debugEnabled
defaultLog
T@"NSObject<OS_os_log>",R
streamWriter:changedStatusTo:
streamWriterDidFinishPreparing
streamWriterDidFinishRecording
streamWriterDidFailWithError:
streamWriterDidCancelRecording:
streamWriter:writingSessionDidStartAtTime:stream:mediaType:
writerStatusChanged:writerDelegate:delegateCallbackQueue:
writingSessionDidStartAtTime:streamId:mediaType:writerDelegate:delegateCallbackQueue:
sampleBuffer
setSampleBuffer:
metadata
setMetadata:
_sampleBuffer
_metadata
T^{opaqueCMSampleBuffer=},V_sampleBuffer
T@"AVTimedMetadataGroup",&,V_metadata
streamWriter:encodedBuffer:pts:metadata:forStream:
streamWriter:stream:preparedTrackInputs:mediaType:
streamWriterEncounteredAnError:
streamWriter:inputForStream:changedIsReadyStatusTo:
streamWriterReachedFinishingTimeout:
streamWriter:mediaWrittenForStream:mediaType:
encoder:encodedSampleBuffer:metadata:presentationTime:streamId:
encoder:encodingFailedForStream:
encoder:overrideVideoEncoderSpecificationForstreamId:
encoder:configureSessionOverride:streamId:
encoder:codecTypeOverrideForstreamId:
executePrepareToRecordWithMovieMetadata:
finishAndDrainFifoFirst
processFinishRecording
finishAVWriter
deleteMOVFile
deleteFileOnCancel
processCancelRecording
processForceFinishRecording
movMetadataItems
setMovMetadataItems:
criticalError
setCriticalError:
T@"NSArray",&
T@"NSError",&
setVideoTransformFromOrientation:
addTrackForStreamWithIdentifier:formatDescription:encoderConfig:
prepareToRecord
setTrackMetadata:forStream:
setTrackMetadata:forMetadataStream:
relateStream:toStream:relationSpecifier:
fifoBufferSizeForStream:
legacyKeysMode
setLegacyKeysMode:
fifoBufferCapacity
setFifoBufferCapacity:
initWithURL:andExpectedFrameRate:
isAudioStream:
defaultWritingBufferCapacity
setDefaultWritingBufferCapacity:
defaultAudioWritingBufferCapacity
setDefaultAudioWritingBufferCapacity:
defaultMetadataWritingBufferCapacity
setDefaultMetadataWritingBufferCapacity:
setWritingBufferCapacity:forStream:
setWritingBufferCapacity:forAudioStream:
setWritingBufferCapacity:forMetadataStream:
writingBufferCapacityForStream:
writingBufferCapacityForAudioStream:
writingBufferCapacityForMetadataStream:
writingBufferUsageForStream:
writingBufferUsageForAudioStream:
writingBufferUsageForMetadataStream:
activateNewState:byEvent:
status
setDelegate:callbackQueue:
setExpectedFrameRate:
setVideoTransform:
relateStream:toStream:relationSpecifier:error:
setRealTimeCapture:
checkIfFifoAreEmpty
addMetadataTrack:
addMetadataTrack:formatDescription:
addMetadataTrackAssociatedWith:withIdentifier:withFormatDescription:
addTrackForStreamWithIdentifier:formatDescription:recordingConfiguration:
addAudioTrackForStreamWithIdentifier:audioFormat:additionalSettings:
setTrackMetadata:forStream:error:
setTrackMetadata:forMetadataStream:error:
prepareToRecordWithMovieMetadata:
addIsReadyObservers
removeIsReadyObservers
observeValueForKeyPath:ofObject:change:context:
attachmentSerializationModeForStream:withDefaultMode:
marksOutputTracksAsEnabledForStream:
appendPixelBuffer:presentationTime:toStreamId:
appendVideoSampleBuffer:attachmentMetadata:streamId:
appendVideoSampleBuffer:attachments:streamId:
appendSampleBuffer:attachments:streamId:
newSampleReady:metadata:presentationTime:streamKey:streamId:isAudioSample:
appendTimeMetadataGroup:toStream:
appendMetadata:withTimeStamp:toStream:
queueMetadataGroup:stream:
appendMetadata:associatedWith:toStream:
asyncWriteAssociatedMetadata:metadataKey:associatedStreamKey:
appendAudioBuffer:forStream:
finishRecording
startFinishingTimeoutTimer
resubmitTimeoutBlock
resetTimeoutRefTime
cancelTimeoutBlock
cancelRecording
clearAllFifoQueues
forceFinishRecording
checkForFinishing
consumeMetadatOfMetadataStream:
consumeSamplesOfVideoAudioStream:
writeSampleBuffer:andMetadata:forStreamId:
writeVideoFrameStreamAttachmentsData:toMetadataAdaptor:ofStream:
writeMetadata:forStreamId:
getExpectedFrameRateForStream:
getVideoTransformForStream:
encoderTypeForStream:
setupAssetWriterStreamInputsWithError:
setupMetadataInputsWithError:
setupAssociatedMetadataInputsWithError:
informDelegateAboutError:
informDelegateAboutIsReady:forStream:
informDelegateAboutFinishingTimeout
informDelegateAboutMediaWrittenForStream:mediaType:
movieFragmentInterval
setMovieFragmentInterval:
sessionStartTime
setSessionStartTime:
finishingTimeout
setFinishingTimeout:
baseMediaTimeScale
setBaseMediaTimeScale:
customEncoderConfigDelegate
setCustomEncoderConfigDelegate:
delegate
setDelegate:
state
setState:
.cxx_construct
m_delegateCallbackQueue
m_writingQueue
m_processingQueue
_timeoutQueue
_timeoutBlock
m_writeURL
m_assetWriter
m_expectedFrameRate
m_realtime
m_haveStartedSession
m_videoTransform
m_streamDataMap
m_orderedStreamNames
m_metadataDataMap
m_orderedMetadataStreamNames
m_associatedMetadataDataMap
m_lastPtsForStream
m_observingIsReady
_state
_defaultWritingBufferCapacity
_defaultAudioWritingBufferCapacity
_defaultMetadataWritingBufferCapacity
_criticalError
_baseMediaTimeScale
_finishingTimeout
_customEncoderConfigDelegate
_delegate
_movieFragmentInterval
_sessionStartTime
T@"<MOVStreamWriterDelegate>",W,V_delegate
T@"<MOVStreamWriterState>",&,V_state
T{?=qiIq},V_movieFragmentInterval
T{?=qiIq},V_sessionStartTime
Td,V_finishingTimeout
Ti,V_baseMediaTimeScale
T@"NSError",R
T@"<MOVStreamCustomEncoderConfigDelegate>",W,V_customEncoderConfigDelegate
T@"NSArray",&,VmovMetadataItems
TB,VlegacyKeysMode
sharedBytesPerPixelLookUp
createRawPixelBufferWithWidth:height:extendedRows:extendedPixelsPerRow:pixelFormat:bytesPerRowAlignment:planeAlignment:bufferCacheMode:
createRawPixelBufferWithWidth:height:pixelFormat:bytesPerRow:
createPixelBufferAttributesWithWidth:height:pixelFormat:bytesPerRows:
createPixelBufferAttributesWithWidth:height:pixelFormat:bytesPerRow:
createPixelBufferAttributesWithWidth:height:extendedPixelsPerRow:pixelFormat:bytesPerRowAlignment:planeAlignment:
newPixelBufferRefCopy:
copyFromPixelBuffer:toPixelBuffer:andShiftBits:
createNewL010PixelBufferPoolWithReferencePixelBuffer:minimumBufferCount:
createNewL008PixelBufferPoolWithReferencePixelBuffer:minimumBufferCount:
newWarholBufferFromRawBayerPixelBuffer:withPixelBufferPool:
newYUVBufferFromRawBayerPixelBuffer:withPixelBufferPool:
newRawBayerBufferFromYUVPixelBuffer:withPixelBufferPool:msbReplication:
newWarholBufferFromCompandedRawBayerPixelBuffer:withPixelBufferPool:
newWarholBufferFromRawBayerPixelBuffer:
fillPlaneOfPixelBuffer:planeIndex:withValue:
isPixelBufferRawBayer:
isPixelFormatRawBayer:
isPixelBufferCompandedRawBayer:
isPixelFormatCompandedRawBayer:
writeBuffer:ofSize:toFile:
joinYUVBuffer:intoRawBayerPixelBuffer:shiftBitsLeftBy:msbReplication:
splitBayerBuffer:intoYUVPixelBuffer:shiftBitsLeftBy:
splitBayerBuffer:intoWarholPixelBuffer:shiftBitsLeftBy:
joinWarholBuffer:intoBayerBuffer:shiftBitsRightBy:msbReplication:
splitCompandedBayerBuffer:intoCompandedWarholPixelBuffer:
joinCompandedWarholBuffer:intoCompandedBayerBuffer:
verticallySplitPixelBuffer:intoTopPixelBuffer:bottomPixelBuffer:
concatPixelBuffer:withPixelBuffer:targetPixelBuffer:
extendedPixelsPerRowOfPixelBuffer:
createPixelBufferPoolWithWidth:height:format:extendedPixelsPerRow:minBufferCount:
createPixelBufferPoolWithWidth:height:format:bytesPerRow:minBufferCount:
createPixelBufferPoolWithWidth:height:format:bytesPerRows:minBufferCount:
pixelBufferFromPool:
copyPixelBuffer:toPixelBuffer:bytesPerPixel:
copyData:toNonPlanarPixelBuffer:
copyData:toPlanarPixelBuffer:toPlane:
copyNonPlanarPixelBufferData:
copyPixelBufferData:ofPlane:
readFrameFromFile:width:height:pixelFormat:
writeBuffer:toFile:
histogramOf8BitBuffer:
rangesOf8BitBuffer:
create4444AYpCbCr16PixelBufferFillAlphaWithData:width:height:
copyMonochromeBuffer:toAlphaChannelOfBuffer:
copyuint16Data:toAlphaChannelOfBuffer:
copyAlphaChannelOfBuffer:touint16Data:
copyAlphaChannelOfBuffer:toMonochromeBuffer:
extendedPixelsRightForPlanarBufferWidth:height:bytesPerRow:format:
numberOfPlanesForPixelFormatType:
pixelBufferSizeWithPadding:
defaultFactory
preProcessorForFormat:recordingConfiguration:
initWithTargetWidth:height:format:extendedPixelsPerRow:
initWithTargetWidth:height:format:bytesPerRow:
initWithTargetWidth:height:format:bytesPerRows:
convertPixelBuffer:
transferSessionUsageDisabled
setTransferSessionUsageDisabled:
_transferSession
_transferSessionUsageDisabled
TB,V_transferSessionUsageDisabled
initWithPixelBuffer:timeStamp:context:
pixelBuffer
timeStamp
cmTimeStamp
context
_pixelBuffer
_timeStamp
_context
_cmTimeStamp
T^{__CVBuffer=},R,V_pixelBuffer
Td,R,V_timeStamp
T{?=qiIq},R,V_cmTimeStamp
T@,R,V_context
processedPixelBufferCopyOf:streamData:error:
createTrackFormatDescriptionFromStreamData:
formatDescriptionForPixelBuffer:streamData:
inputPixelFormatFromStreamData:
encodedPixelFormatFromStreamData:
createL010FormatDescriptionFromL016FormatDescription:
createL010FormatDescriptionFromRawBayerFormatDescription:
createxf20FormatDescriptionFromRawBayerFormatDescription:
bytesPerPixelForFormat:
createL008FormatDescriptionFromNonPlanarFormatDescription:
createL008FormatDescriptionFromCompandedRawBayerFormatDescription:
getJsonFriendlyCopy:
isValidJSONObject:path:
getPlistFriendlyCopyOf:
verifyExactBytesPerRow:width:height:pixelFormat:
plistSerializedObject:error:
plistDeserializedObject:error:
guessYCbCrPixelFormatFromFormatDescription:
detectPixelFormatForAsset:videoTrackId:error:
AVEProfileLevel10BitMonochrome
clampedQuality:
postProcessorFromReader:originalPixelFormat:encodedFormat:encoderType:streamId:
fifoDropsEnabled:
getMOVStreamIOMetadataItem
initWithOriginalPixelFormat:rawBayerMSBReplication:
rawBayerMSBReplication
setRawBayerMSBReplication:
_rawBayerMSBReplication
TB,N,V_rawBayerMSBReplication
sharedMetalPixelBufferUtility
processBayerBuffer:withWarholBuffer:shiftCount:msbReplication:operation:sampleSize:
enabled
setEnabled:
_metalDevice
_metalCommandQueue
_pipeLineStates
_enabled
TB,N,V_enabled
streamIdFromTrackStreamTypeIdentifier:
getAudioMetadataForBuffer:
isReadyForMoreDataForStreamId:fromMap:
getMetadataGroupForBuffer:stream:presentationTime:serializationMode:
marksOutputTracksAsEnabledForStream:fromMap:
attachmentSerializationModeForStream:withDefaultMode:fromMap:
customTrackMetadataForStream:fromMap:
customMetadataTrackMetadataForStream:fromMap:
getTrackMetadataForAttachmentsSerializationMode:fromMap:
getLegacyTrackMetadataForAttachmentsSerializationMode:fromMap:
getTrackMetadataForRawBayerRearrangeType:fromMap:
getTrackMetadataForStream:
getLegacyTrackMetadataForStream:
getTrackInputPixelFormatMetadataForStream:fromMap:
getLegacyTrackInputPixelFormatMetadataForStream:fromMap:
getLegacyTrackEncodedPixelFormatMetadataForStream:fromMap:
getTrackEncodedPixelFormatMetadataForStream:fromMap:
createRelatedToStreamMetadata:
createRelationSpecifierMetadata:
getTrackMetadataForTrackTypeInfo:fromMap:
getTrackMetadataForExactBytesPerRow:fromMap:error:
createMetadataFormatDescription:
isCustomTrackMetadataCompatibleObject:
getPixelFormatForStream:fromMap:
getPixelFormatFromStreamData:
reader:pixelFormatForStream:suggestedFormat:
reader:overrideBytesPerRowForStream:storedValue:customTrackMetadata:originalPixelFormat:encodedPixelFormat:
reader:bytesPerRowForStream:storedValue:
reader:alwaysCopiesSampleDataForStream:
pixelFormatForUnknownTrackOfReader:
initWithVideoTrack:assetReader:associatedMetadataTracks:version:unknownStreamId:reader:delegate:error:
initWithAudioTrack:assetReader:associatedMetadataTracks:version:unknownStreamId:reader:delegate:error:
initWithSceneTrack:assetReader:associatedMetadataTracks:version:unknownStreamId:reader:delegate:error:
initWithMetadataTrack:assetReader:version:unknownStreamId:reader:delegate:error:
nextAttachmentWithError:
customTrackMetadata
postProcessor
setPostProcessor:
T@"<MOVStreamPostProcessor>",&
getAssociatedMetadataStreams
grabNextMetadataItemsOfTrackAssociatedWithStreamWithIdentifier:timeRange:error:
streamId
assetTrack
endOfStreamReached
mediaType
T@"AVAssetTrack",R,W
TB,R
grabNextSampleBufferForStreamTimestamp:error:
nextSampleBufferForStreamAttachementsData:timestamp:error:
relatedStreamId
relationSpecifier
pixelFormatForStream
getOutputPixelFormatForStream
removePixelBufferPadding:
copyNextFrameForStreamTimestamp:error:
nextPixelBufferForStreamAttachementsData:timestamp:error:
transform
trackTypeInfo
T{CGAffineTransform=dddddd},R
grabNextAudioSampleForStreamTimestamp:error:
grabNextMetadataOfStreamTimeRange:error:
grabNextTimedMetadataGroupOfStreamError:
frameDuration
alwaysCopiesSampleDataForStream
attachmentsDataForStreamPts:duration:
decodeAttachmentsData:error:
playbackPixelFormatForTrack:ofStream:streamEncodingType:inputPixelFormat:delegate:
getKeyFromMetadataTrack:
playbackPixelFormatForTrack:ofStream:delegate:
streamOutput
setStreamOutput:
metadataAdaptors
setMetadataAdaptors:
attachmentsAdaptor
setAttachmentsAdaptor:
determinedPixelFormat
setDeterminedPixelFormat:
attachmentSerializationMode
setAttachmentSerializationMode:
isLegacyIMUTrack
setIsLegacyIMUTrack:
futureAttachmentsData
setFutureAttachmentsData:
futureAttachementsPts
setFutureAttachementsPts:
futureAttachementsDuration
setFutureAttachementsDuration:
version
setVersion:
reader
setReader:
assetReader
setAssetReader:
track
setTrack:
setStreamId:
setAssetTrack:
setEndOfStreamReached:
setRelatedStreamId:
setRelationSpecifier:
setTransform:
setTrackTypeInfo:
setMediaType:
_frameDuration
_isLegacyIMUTrack
_endOfStreamReached
_originalPixelFormat
_determinedPixelFormat
_attachmentSerializationMode
_streamOutput
_metadataAdaptors
_attachmentsAdaptor
_futureAttachmentsData
_version
_reader
_assetReader
_track
_streamId
_assetTrack
_relatedStreamId
_relationSpecifier
_trackTypeInfo
_mediaType
_futureAttachementsPts
_futureAttachementsDuration
_transform
T@"AVAssetReaderTrackOutput",&,V_streamOutput
T@"NSDictionary",&,V_metadataAdaptors
T@"AVAssetReaderOutputMetadataAdaptor",&,V_attachmentsAdaptor
TI,V_originalPixelFormat
TI,V_determinedPixelFormat
Ti,V_attachmentSerializationMode
TB,V_isLegacyIMUTrack
T@"NSData",&,V_futureAttachmentsData
T{?=qiIq},V_futureAttachementsPts
T{?=qiIq},V_futureAttachementsDuration
T@"Version",W,V_version
T@"<MOVStreamReaderDelegate>",W,V_delegate
T@"MOVStreamReader",W,V_reader
T@"AVAssetReader",W,V_assetReader
T@"AVAssetTrack",W,V_track
T@"NSString",&,V_streamId
T@"AVAssetTrack",W,V_assetTrack
TB,V_endOfStreamReached
T@"NSString",&,V_relatedStreamId
T@"NSString",&,V_relationSpecifier
T{CGAffineTransform=dddddd},V_transform
TQ,V_trackTypeInfo
Tq,V_mediaType
T{?=qiIq},R
T@"<MOVStreamPostProcessor>",&,VpostProcessor
sharedOptions
T@"MOVStreamOptions",R
checkBossMode
localDefaults
currentOptions
disableFrameReordering
bitrateMultiplier
bitrateOverride
forceColorLossless
force10bitMonoByVT
forceLossless8bitMonoByVT
skipSourceHint
standardDefaultValues
checkHasValue:changedForKey:
registerStandardDefaults
_debugMode
Td,R
reader:didReceiveWarning:
initWithURL:error:
initWithURL:delegate:error:
getMetadataStreamsAssociatedTo:
getUnknownMetadataStreamsAssociatedTo:
grabNextMetadataOfStream:timeRange:
pixelFormatForStream:
l010OutputFormatRAW14L016
setL010OutputFormatRAW14L016:
resetReader:
endOfStream
outputForVideoStream:error:
outputForAudioStream:error:
outputForSceneStream:error:
outputForMetadataStream:error:
nextSampleBufferForStream:attachementsData:timestamp:error:
nextPixelBufferForStream:attachementsData:timestamp:error:
initWithContentsOfFile:delegate:error:
initWithContentsOfURL:delegate:error:
clearOutputs
registerOutput:
resetReaderTo:error:
saveStream:toFile:error:
isTrack:byIdInTracks:
movVersionCheck
transformForStream:
metadataForMovie
movstreamIOMetadataForMovie
getRelatedStreamForStreamId:
getRelationSpecifierForStreamId:
getStreamsRelatedToStream:
trackMetadataForStream:
trackMetadataForMetadataStream:
getSizeForStream:
getOutputSizeForStream:
getOutputPixelFormatForStream:
trackTypeInfoForStream:
trackForStream:
metadataTrackForStream:
getFrameRateForStream:
getMinFrameDurationForStream:
removePixelBufferPadding:forStream:
duration
containsStream:
containsMetadataStream:
getAllStreams
getAllAudioStreams
getAllSceneStreams
trackMetadataForAudioStream:
containsAudioStream:
getAllMetadataStreams
getMetadataStreamsAssociatedTo:error:
copyNextFrameForStream:timestamp:error:
grabNextAudioSampleForStream:timestamp:error:
grabNextSampleBufferForStream:timestamp:error:
grabNextMetadataItemsOfTrackAssociatedWith:withIdentifier:timeRange:error:
nextAttachmentForStream:error:
grabNextTimedMetadataGroupOfStream:error:
grabNextMetadataOfStream:timeRange:error:
hasFinishedReading
hasReachedEndOfStream:
hasReachedEndOfMetadataStream:
findAllAssociatedMetadataTrackInAsset:forTrack:
m_asset
m_assetReader
_sampleStreams
_orderedVideoStreamIds
_orderedAudioStreamIds
_orderedSceneStreamIds
_metadataStreams
_orderedMetadataStreamIds
_l010OutputFormatRAW14L016
_movVersion
outputSettingsForStream:defaultFrameRate:
customEncoderSettings:frameRate:
audioSettings:
prores4444Settings:frameRate:
prores422Settings:frameRate:
hevc10bitMonochromeLosslessSettings:frameRate:
hevc10bitMonochromeSettings:frameRate:
hevcColorLosslessSettings:frameRate:
hevc8bitMonochromeLosslessSettings:frameRate:
hevc8bitMonochromeSettings:frameRate:
hevcColorSettings:frameRate:
hevc8bitWithAlphaLosslessSettings:frameRate:
hevc8bitWithAlphaSettings:frameRate:
h264Settings:frameRate:
slimSettings:frameRate:
getBitsPerSecondForColorStream:frameRate:
getQualitySetting:
applyBitrateModifiersTo:
matchDeprecatedType:
initWithSettings:
initWithConfig:
initWithFrameRate:
initWithFrameRate:useCustomEncoderConfig:
settings
config
useCustomEncoderConfig
expectedFrameRate
_useCustomEncoderConfig
_settings
_config
_expectedFrameRate
T@"NSDictionary",R,V_settings
T@"MOVStreamEncoderConfig",R,V_config
TB,R,V_useCustomEncoderConfig
Td,R,V_expectedFrameRate
createHEVCCompatiblePixelBuffer:
overrideVideoEncoderSpecification
configureSessionOverride:
codecTypeOverride
initWithExpectedFrameRate:forStream:delegate:
initForStream:configuration:delegate:
useQPEncoding:
setupEncoderWithWidth:andHeight:imageFormat:andFramerate:
processFrame:pst:frameProperties:metadata:
encodeFrame:pst:frameProperties:metadata:
frameReorderingEnabled
closeEncoder
closeEncoderInDispatchGroup:
skipFrameWithStatus:andFlags:
writeSampleBuffer:pts:metadata:withStatus:andFlags:
lastEncodingStatus
lastEncodingInfoFlags
pendigFrames
setPendigFrames:
setCustomEncoderConfig:
m_encoder
m_encoderInitialized
m_qpValue
m_stream
m_delegate
m_config
m_encodingQueue
m_firstFrameReceived
_customEncoderConfig
_lastEncodingStatus
_lastEncodingInfoFlags
_pendigFrames
Tq,V_pendigFrames
TI,R,V_lastEncodingStatus
TI,R,V_lastEncodingInfoFlags
TB,V_customEncoderConfig
initWithOriginalPixelFormat:l010OutputFormatRAW14L016:
TB,N,V_l010OutputFormatRAW14L016
applySessionProperties:
@24@0:8@16
@32@0:8@16q24
v40@0:8^@16@24q32
@40@0:8@16@24q32
d20@0:8i16
r^{opaqueCMFormatDescription=}24@0:8^{__CVBuffer=}16
Q16@0:8
B20@0:8i16
B24@0:8@16
Q36@0:8{?=ii}16d24i32
@64@0:8{CGAffineTransform=dddddd}16
{CGAffineTransform=dddddd}24@0:8@16
@72@0:8{CGAffineTransform=dddddd}16@64
@32@0:8Q16@24
@32@0:8d16@24
@16@0:8
@24@0:8Q16
@24@0:8d16
@20@0:8I16
@24@0:8q16
B32@0:8^{opaqueCMSampleBuffer=}16^@24
@32@0:8@16@24
@24@0:8^{_NSZone=}16
@32@0:8@16^@24
q24@0:8@16
I16@0:8
v16@0:8
@"NSString"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
^{__CVBuffer=}40@0:8^{__CVBuffer=}16@24^@32
v20@0:8B16
v24@0:8@16
v20@0:8I16
^{__CVBuffer=}40@0:8^{__CVBuffer=}16@"NSDictionary"24^@32
Q24@0:8^{__CVBuffer=}16
B24@0:8^{__CVBuffer=}16
B32@0:8^{__CVBuffer=}16@24
^{__CVBuffer=}32@0:8^{__CVBuffer=}16^@24
^{__CVBuffer=}40@0:8@16^{__CVBuffer=}24^@32
@"MOVStreamFrameConverter"
B28@0:8I16@20
@36@0:8I16@20@28
B32@0:8@16^@24
@"NSDictionary"
q16@0:8
B24@0:8@"<MOVStreamWriterStateContext>"16
@"<MOVStreamWriterState>"24@0:8@"<MOVStreamWriterStateContext>"16
@"<MOVStreamWriterState>"32@0:8@"NSError"16@"<MOVStreamWriterStateContext>"24
v24@0:8@"<MOVStreamWriterStateContext>"16
Q24@0:8Q16
^{__CVPixelBufferPool=}
v40@0:8q16@24@32
v72@0:8{?=qiIq}16@40q48@56@64
^{opaqueCMSampleBuffer=}16@0:8
v24@0:8^{opaqueCMSampleBuffer=}16
^{opaqueCMSampleBuffer=}
@"AVTimedMetadataGroup"
v72@0:8@16^{opaqueCMSampleBuffer=}24@32{?=qiIq}40@64
v32@0:8@16@24
B40@0:8@16^{OpaqueVTCompressionSession=}24@32
I32@0:8@16@24
v72@0:8@"VideoEncoderInterface"16^{opaqueCMSampleBuffer=}24@"AVTimedMetadataGroup"32{?=qiIq}40@"NSString"64
v32@0:8@"VideoEncoderInterface"16@"NSString"24
@"NSDictionary"32@0:8@"VideoEncoderInterface"16@"NSString"24
B40@0:8@"VideoEncoderInterface"16^{OpaqueVTCompressionSession=}24@"NSString"32
I32@0:8@"VideoEncoderInterface"16@"NSString"24
v24@0:8@"NSArray"16
@"NSArray"16@0:8
@"NSError"16@0:8
v24@0:8@"NSError"16
v40@0:8@16r^{opaqueCMFormatDescription=}24@32
v40@0:8@"NSString"16r^{opaqueCMFormatDescription=}24@"NSDictionary"32
B32@0:8@16@24
B40@0:8@16@24@32
Q24@0:8@16
v24@0:8Q16
B32@0:8@"NSDictionary"16@"NSString"24
B40@0:8@"NSString"16@"NSString"24@"NSString"32
Q24@0:8@"NSString"16
@32@0:8@16d24
B24@0:8^{StreamRecordingData=^{opaqueCMFormatDescription}B@@@@@@Q@@^{__CVPixelBufferPool}@@@{?=qiIq}Q@q}16
v32@0:8Q16@24
B24@0:8d16
B64@0:8{CGAffineTransform=dddddd}16
B48@0:8@16@24@32^@40
B20@0:8B16
v32@0:8@16r^{opaqueCMFormatDescription=}24
v40@0:8@16@24^{opaqueCMFormatDescription=}32
v40@0:8@16@24@32
B40@0:8@16@24^@32
v48@0:8@16@24@32^v40
i44@0:8{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}16i40
B40@0:8{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}16
v56@0:8^{__CVBuffer=}16{?=qiIq}24@48
v40@0:8^{opaqueCMSampleBuffer=}16@24@32
v92@0:8^{opaqueCMSampleBuffer=}16@24{?=qiIq}32{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}56@80B88
v56@0:8@16{?=qiIq}24@48
v72@0:8@16{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}24{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}48
v32@0:8^{opaqueCMSampleBuffer=}16@24
d24@0:8@16
i24@0:8@16
v24@0:8^@16
v40@0:8@16^{opaqueCMFormatDescription=}24@32
v28@0:8B16@20
v32@0:8@16q24
{?=qiIq}16@0:8
v40@0:8{?=qiIq}16
d16@0:8
v24@0:8d16
i16@0:8
v20@0:8i16
@"NSObject<OS_dispatch_queue>"
@"NSURL"
@"AVAssetWriter"
{CGAffineTransform="a"d"b"d"c"d"d"d"tx"d"ty"d}
{map<std::string, (anonymous namespace)::StreamRecordingData, std::less<std::string>, std::allocator<std::pair<const std::string, (anonymous namespace)::StreamRecordingData>>>="__tree_"{__tree<std::__value_type<std::string, (anonymous namespace)::StreamRecordingData>, std::__map_value_compare<std::string, std::__value_type<std::string, (anonymous namespace)::StreamRecordingData>, std::less<std::string>, true>, std::allocator<std::__value_type<std::string, (anonymous namespace)::StreamRecordingData>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, (anonymous namespace)::StreamRecordingData>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, (anonymous namespace)::StreamRecordingData>, std::less<std::string>, true>>="__value_"Q}}}
{vector<std::string, std::allocator<std::string>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::string *, std::allocator<std::string>>="__value_"^v}}
{map<std::string, (anonymous namespace)::MetadataRecordingData, std::less<std::string>, std::allocator<std::pair<const std::string, (anonymous namespace)::MetadataRecordingData>>>="__tree_"{__tree<std::__value_type<std::string, (anonymous namespace)::MetadataRecordingData>, std::__map_value_compare<std::string, std::__value_type<std::string, (anonymous namespace)::MetadataRecordingData>, std::less<std::string>, true>, std::allocator<std::__value_type<std::string, (anonymous namespace)::MetadataRecordingData>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, (anonymous namespace)::MetadataRecordingData>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, (anonymous namespace)::MetadataRecordingData>, std::less<std::string>, true>>="__value_"Q}}}
{map<std::string, std::map<std::string, (anonymous namespace)::MetadataRecordingData>, std::less<std::string>, std::allocator<std::pair<const std::string, std::map<std::string, (anonymous namespace)::MetadataRecordingData>>>>="__tree_"{__tree<std::__value_type<std::string, std::map<std::string, (anonymous namespace)::MetadataRecordingData>>, std::__map_value_compare<std::string, std::__value_type<std::string, std::map<std::string, (anonymous namespace)::MetadataRecordingData>>, std::less<std::string>, true>, std::allocator<std::__value_type<std::string, std::map<std::string, (anonymous namespace)::MetadataRecordingData>>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, std::map<std::string, (anonymous namespace)::MetadataRecordingData>>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, std::map<std::string, (anonymous namespace)::MetadataRecordingData>>, std::less<std::string>, true>>="__value_"Q}}}
{map<std::string, CMTime, std::less<std::string>, std::allocator<std::pair<const std::string, CMTime>>>="__tree_"{__tree<std::__value_type<std::string, CMTime>, std::__map_value_compare<std::string, std::__value_type<std::string, CMTime>, std::less<std::string>, true>, std::allocator<std::__value_type<std::string, CMTime>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, CMTime>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, CMTime>, std::less<std::string>, true>>="__value_"Q}}}
@"<MOVStreamWriterState>"
@"NSError"
@"NSArray"
@"<MOVStreamCustomEncoderConfigDelegate>"
@"<MOVStreamWriterDelegate>"
{?="value"q"timescale"i"flags"I"epoch"q}
^{__CVBuffer=}48@0:8I16I20I24I28i32I36I40I44
^{__CVBuffer=}32@0:8I16I20i24I28
^{__CFDictionary=}36@0:8I16I20i24@28
^{__CFDictionary=}32@0:8I16I20i24I28
^{__CFDictionary=}40@0:8I16I20I24i28I32I36
^{__CVBuffer=}24@0:8^{__CVBuffer=}16
B36@0:8^{__CVBuffer=}16^{__CVBuffer=}24i32
^{__CVPixelBufferPool=}32@0:8^{__CVBuffer=}16Q24
^{__CVBuffer=}32@0:8^{__CVBuffer=}16^{__CVPixelBufferPool=}24
^{__CVBuffer=}36@0:8^{__CVBuffer=}16^{__CVPixelBufferPool=}24B32
B32@0:8^{__CVBuffer=}16i24S28
B20@0:8I16
v40@0:8r*16Q24@32
B40@0:8^{__CVBuffer=}16^{__CVBuffer=}24i32B36
B32@0:8^{__CVBuffer=}16^{__CVBuffer=}24
B40@0:8^{__CVBuffer=}16^{__CVBuffer=}24^{__CVBuffer=}32
^{__CVPixelBufferPool=}52@0:8Q16Q24I32Q36Q44
^{__CVPixelBufferPool=}52@0:8Q16Q24I32@36Q44
^{__CVBuffer=}24@0:8^{__CVPixelBufferPool=}16
B40@0:8^{__CVBuffer=}16^{__CVBuffer=}24Q32
B32@0:8@16^{__CVBuffer=}24
B40@0:8@16^{__CVBuffer=}24Q32
@24@0:8^{__CVBuffer=}16
@32@0:8^{__CVBuffer=}16Q24
^{__CVBuffer=}36@0:8@16I24I28I32
^{__CVBuffer=}40@0:8^{__CFData=}16Q24Q32
B32@0:8^S16^{__CVBuffer=}24
B32@0:8^{__CVBuffer=}16^S24
q44@0:8Q16Q24Q32I40
q20@0:8I16
@32@0:8^{opaqueCMFormatDescription=}16@24
@44@0:8Q16Q24I32Q36
@44@0:8Q16Q24I32@36
^{OpaqueVTPixelTransferSession=}
@40@0:8^{__CVBuffer=}16d24@32
^{__CVBuffer=}16@0:8
^{__CVBuffer=}
^{__CVBuffer=}40@0:8^{__CVBuffer=}16^{StreamRecordingData=^{opaqueCMFormatDescription}B@@@@@@Q@@^{__CVPixelBufferPool}@@@{?=qiIq}Q@q}24^@32
r^{opaqueCMFormatDescription=}24@0:8^{StreamRecordingData=^{opaqueCMFormatDescription}B@@@@@@Q@@^{__CVPixelBufferPool}@@@{?=qiIq}Q@q}16
r^{opaqueCMFormatDescription=}32@0:8^{__CVBuffer=}16^{StreamRecordingData=^{opaqueCMFormatDescription}B@@@@@@Q@@^{__CVPixelBufferPool}@@@{?=qiIq}Q@q}24
I24@0:8^{StreamRecordingData=^{opaqueCMFormatDescription}B@@@@@@Q@@^{__CVPixelBufferPool}@@@{?=qiIq}Q@q}16
^{opaqueCMFormatDescription=}24@0:8^{opaqueCMFormatDescription=}16
Q20@0:8I16
B44@0:8@16Q24Q32I40
I24@0:8^{opaqueCMFormatDescription=}16
I36@0:8@16i24^@28
d24@0:8d16
@48@0:8@16I24I28@32@40
@24@0:8I16B20
B48@0:8^{__CVBuffer=}16^{__CVBuffer=}24i32B36i40i44
@"<MTLDevice>"
@"<MTLCommandQueue>"
[5@"<MTLComputePipelineState>"]
@24@0:8^{opaqueCMSampleBuffer=}16
B32@0:8@16^v24
@60@0:8^{__CVBuffer=}16@24{?=qiIq}32i56
B48@0:8{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}16^v40
i52@0:8{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}16i40^v44
@32@0:8@16^v24
@40@0:8@16^v24^@32
r^{opaqueCMFormatDescription=}24@0:8@16
I32@0:8@16^v24
@80@0:8@16@24@32@40@48@56@64^@72
@72@0:8@16@24@32@40@48@56^@64
@80@0:8@"AVAssetTrack"16@"AVAssetReader"24@"NSArray"32@"Version"40@"NSString"48@"MOVStreamReader"56@"<MOVStreamReaderDelegate>"64^@72
@72@0:8@"AVAssetTrack"16@"AVAssetReader"24@"Version"32@"NSString"40@"MOVStreamReader"48@"<MOVStreamReaderDelegate>"56^@64
@24@0:8^@16
@"NSDictionary"24@0:8^@16
@"NSDictionary"16@0:8
@"<MOVStreamPostProcessor>"16@0:8
v24@0:8@"<MOVStreamPostProcessor>"16
@40@0:8n@16o^{?={?=qiIq}{?=qiIq}}24o^@32
@"NSArray"40@0:8n@"NSString"16o^{?={?=qiIq}{?=qiIq}}24o^@32
@"AVAssetTrack"16@0:8
^{opaqueCMSampleBuffer=}32@0:8o^{?=qiIq}16o^@24
^{opaqueCMSampleBuffer=}40@0:8o^@16o^{?=qiIq}24o^@32
^{__CVBuffer=}32@0:8o^{?=qiIq}16o^@24
^{__CVBuffer=}40@0:8o^@16o^{?=qiIq}24o^@32
{CGAffineTransform=dddddd}16@0:8
@32@0:8o^{?={?=qiIq}{?=qiIq}}16o^@24
@24@0:8o^@16
@"NSArray"32@0:8o^{?={?=qiIq}{?=qiIq}}16o^@24
@"AVTimedMetadataGroup"24@0:8o^@16
@32@0:8^{?=qiIq}16^{?=qiIq}24
i52@0:8@16@24@32I40@44
i40@0:8@16@24@32
v64@0:8{CGAffineTransform=dddddd}16
v24@0:8q16
@"<MOVStreamPostProcessor>"
@"AVAssetReaderTrackOutput"
@"AVAssetReaderOutputMetadataAdaptor"
@"NSData"
@"Version"
@"<MOVStreamReaderDelegate>"
@"MOVStreamReader"
@"AVAssetReader"
@"AVAssetTrack"
@40@0:8@16@24^@32
@32@0:8@16^{?={?=qiIq}{?=qiIq}}24
I24@0:8@16
@32@0:8@"NSURL"16^@24
@40@0:8@"NSURL"16@"<MOVStreamReaderDelegate>"24^@32
@"NSArray"24@0:8@"NSString"16
@"NSArray"32@0:8@"NSString"16^{?={?=qiIq}{?=qiIq}}24
I24@0:8@"NSString"16
B24@0:8^@16
@32@0:8n@16o^@24
^{opaqueCMSampleBuffer=}48@0:8n@16o^@24o^{?=qiIq}32o^@40
^{__CVBuffer=}48@0:8n@16o^@24o^{?=qiIq}32o^@40
@"<MOVStreamReaderVideoStreamOutput>"32@0:8n@"NSString"16o^@24
@"<MOVStreamReaderAudioStreamOutput>"32@0:8n@"NSString"16o^@24
@"<MOVStreamReaderSceneStreamOutput>"32@0:8n@"NSString"16o^@24
@"<MOVStreamReaderMetadataStreamOutput>"32@0:8n@"NSString"16o^@24
^{opaqueCMSampleBuffer=}48@0:8n@"NSString"16o^@24o^{?=qiIq}32o^@40
^{__CVBuffer=}48@0:8n@"NSString"16o^@24o^{?=qiIq}32o^@40
B48@0:8{?=qiIq}16^@40
{CGSize=dd}24@0:8@16
{?=qiIq}24@0:8@16
^{__CVBuffer=}40@0:8@16^{?=qiIq}24^@32
^{opaqueCMSampleBuffer=}40@0:8@16^{?=qiIq}24^@32
@48@0:8@16@24^{?={?=qiIq}{?=qiIq}}32^@40
@40@0:8@16^{?={?=qiIq}{?=qiIq}}24^@32
@"AVURLAsset"
@"NSMutableDictionary"
@"NSMutableArray"
@32@0:8^{StreamRecordingData=^{opaqueCMFormatDescription}B@@@@@@Q@@^{__CVPixelBufferPool}@@@{?=qiIq}Q@q}16d24
@24@0:8^{StreamRecordingData=^{opaqueCMFormatDescription}B@@@@@@Q@@^{__CVPixelBufferPool}@@@{?=qiIq}Q@q}16
Q32@0:8^{StreamRecordingData=^{opaqueCMFormatDescription}B@@@@@@Q@@^{__CVPixelBufferPool}@@@{?=qiIq}Q@q}16d24
d24@0:8^{StreamRecordingData=^{opaqueCMFormatDescription}B@@@@@@Q@@^{__CVPixelBufferPool}@@@{?=qiIq}Q@q}16
i20@0:8i16
@28@0:8d16B24
@"MOVStreamEncoderConfig"
B24@0:8^{OpaqueVTCompressionSession=}16
@40@0:8d16@24@32
@40@0:8@16@24@32
v36@0:8i16i20i24d28
v64@0:8^{__CVBuffer=}16{?=qiIq}24^{__CFDictionary=}48@56
v24@0:8i16I20
v64@0:8^{opaqueCMSampleBuffer=}16{?=qiIq}24@48i56I60
^{HEVCLosslessEncoder=@iid^{OpaqueVTCompressionSession}{EncoderConfig=iiiidBBBBBi}{?=qiIq}IIIBB}
@"<VideoEncoderInterfaceDelegate>"
