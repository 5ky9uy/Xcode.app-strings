@(#)PROGRAM:MOVStreamIO  PROJECT:MOVStreamIO-1
A610L010L3.315.114ggr4ggb4rbg4brg
610L010L3.315.114ggr4ggb4rbg4brg
010L010L010L010L010L010L010Lfvuy610L3.31
com.apple.videoeng.streamerror
com.apple.videoeng.streamwarning
com.apple.videoeng.miopixelbufferpoolerror
com.apple.videoeng.streamwriterwarning
com.apple.videoeng.streamreaderwarning
com.apple.videoeng.streamreadererror
ErrorInfoStreamId
Unknown
StreamEncoderType
PixelFormat
ColorStreamBitrate
EncodingQuality
VideoTransform
HEVCQPValue
ExpectedFrameRateForStream
RawBayerRearrangeTypeKey
UseSlimXCompression
FrameMetadataFormat
OriginalTimestampWhenWrittenToFile
MarksOutputTrackAsEnabled
VideoTrackTypeInfo
PixelBufferExactBytesPerRow
CustomEncoderConfig
StreamConvertNonPlanarBuffersTo8bitMonochrome
EncodeAttachments
ProResEncodingQuality
com.apple.mio.tracktype.AlphaDataOnly
com.apple.mio.tracktype.NoVideoData
com.apple.mio.tracktype.IRData
com.apple.mio.tracktype.RasterOrientedVideoData
hvc1
hw.pagesize
hw.cachelinesize
Cannot retrieve available video encoder list, error %d
{CGAffineTransform=dddddd}
Embedded configuration must not be nil.
Unsupported bit depth (%zu).
Not supported setting: 8bit 422
+[MOVStreamIOUtility colorRecordingConfigBitDepth:lossless:chromaSampling:error:]
MOVStreamIOUtility.mm
decoding is set up for this sample buffer. Cannot tell whether it's a key frame or not
This sample buffer doesn't have any attachment. Cannot tell whether it's a key frame or not
mdta/com.apple.track_kind
mdta/com.apple.stream_sample_attachments
mdta/com.apple.metadata_stream_item
version
default_options
mdta/com.apple.framework.state.MOVStreamIO
mdta/com.apple.stream_sample_format
mdta/com.apple.stream_encoded_sample_format
mdta/com.apple.stream_related_to_stream
mdta/com.apple.stream_relation_specifier
mdta/com.apple.stream_type_info
mdta/com.apple.stream_sample_exact_bytes_per_row
mdta/com.apple.stream_sample_attachments_serialization_mode
mdta/com.apple.stream_raw_bayer_rearrange_type
metadata
CFBundleShortVersionString
%d.%d.%d%@
%d.%d.%d
%d.%d
Cannot compare with nil object.
Version: %@
Cannot copy version %@
mdta/com.apple.trackStreamType
mdta/com.apple.metadataTrackType
mdta/com.apple.MOVStreamIO.stateMetadataIdentifier
mdta/com.apple.MOVStreamIO.versionKey
mdta/com.apple.MOVStreamIO.defaultOptions
mdta/com.apple.trackStreamPixelFormat
mdta/com.apple.trackStreamEncodedPixelFormat
mdta/com.apple.trackStreamAttachmentsSerializationMode
mdta/com.apple.trackTypeInfo
mdta/com.apple.trackStreamRelatedToStream
mdta/com.apple.trackStreamRelationSpecifier
mdta/com.apple.exactBytesPerRow
mdta/com.apple.RawBayerRearrangeType
mdta/com.apple.rawSampleBufferAttachmentDict
mdta/com.apple.metadataDict
3.15.0
Cannot create pixel buffer pool for adjusting Bytes Per Row. (%@)
Cannot convert pixel buffer. (%@)
Invalid ExactBytesPerRow value type!
codecType
encoderSpecification
sessionProperties
Assert: (%d) %s - f: %s, l: %d
VTCompressionSessionCreate failed
/Library/Caches/com.apple.xbs/Sources/MOVStreamIO_Sim/MOVStreamIO/VTEncoder/MOVStreamEncoderConfig.mm
ProfileLevel
SupportedValueList
Cannot read config from file '%@'.
Cannot write to file %@.
 name=%@
<%@: %p%@ sampleCount=%@ samples=[%@
... and %@ more]>
vector
Finishing Queues
Cannot create pixel buffer pool for Non-Planar stream.
com.apple.movstreamio.framework
DEBUG_LOG
v8@?0
com.apple.movstreamio.defaultlog
MOVStreamIO
mdta/com.apple.rawIMUDict
mdta/com.apple.imuTrackType
AudioFormatObject
AdditionalAudioSettings
readyForMoreMediaData
Target path is an existing directory.
com.apple.streamwriter.writing
com.apple.streamwriter.encoding
init
Unknown stream id.
Stream is an audio stream, use [MOVStreamWriter setWritingBufferCapacity:forAudioStream:]
Stream is a video stream, use [MOVStreamWriter setWritingBufferCapacity:forStream:]
Stream is an audio stream, use [MOVStreamWriter writingBufferCapacityForAudioStream:]
Stream is not an audio stream, use [MOVStreamWriter writingBufferCapacityForStream:]
Stream is an audio stream, use [MOVStreamWriter writingBufferUsageForAudioStream:]
Stream is not an audio stream, use [MOVStreamWriter writingBufferUsageForStream:]
State Change: %@ - (%@) -> %@
status
Caller must provide a delegateCallbackQueue
Cannot find track for stream %@
Cannot add tracks while not idle
Cannot add two metadata tracks with the same name
Unable to find stream with identifier %@
recordingConfiguration cannot be null or empty
Format description cannot be null
Cannot add two tracks with the same stream name
Not matching kMIOPixelBufferExactBytesPerRow value %@.
No video track type info (MIOVideoTrackTypeInfo) specified for stream '%@'.
Encode attachment keys for stream '%@' are defined but empty.
Encode attachment keys for stream '%@' are not Strings.
Encode attachment keys for stream '%@' are not provided as an Array.
Invalid audio format
Incompatible item %@:%@.
Current state does not support prepareToRecord.
prepareToRecord
prepareQueue
executePrepareToRecord
-[MOVStreamWriter executePrepareToRecordWithMovieMetadata:]_block_invoke
MOVStreamWriter.mm
-[MOVStreamWriter addIsReadyObservers]
Cannot append to stream that hasn't been set up.
Cannot append: writer is not recording. Current writer state: %@
[VTEncoder] processing buffer for stream '%@' is full, dropping buffer (Pending:%lld Queue:%ld Fifo:%ld Capacity:%ld).
Mode for pixel buffer attachements for RawBayer pixel buffers is not set to PLIST! Default format is overriden by client (kMIOFrameAttachmentSerializationMode), this will be ignored for RawBayer.
appendPixelBuffer
Exception occurred during encoding %@ for stream '%@'. Dropping frame.
Sample buffer was appended with presentation timestamp (%f) less than (or equal to) previous sample buffer (%f) for stream '%@'. Dropping frame.
Sample buffer creation failed (error: %i) for stream '%@'. Dropping frame. Info: Used FD: %@  Buffer FD: %@
Sample Buffer cannot be nil.
Attachments cannot be nil.
Cannot append to a stream that hasn't been set up.
Pixel format not defined for stream '%@'.
Sample Buffer with invalid PTS for stream '%@'.
Cannot append sample buffer with encoder type not MIOStreamEncoderTypeNone.
[FIFO] FIFO buffer for stream '%s' is full, dropping older buffer.
Sample buffer encoding failed (encoder status: %i flags: %d) for stream '%@'. Dropping frame.
Missing customEncoderConfigDelegate '%@'. Cannot encode!
overrideVideoEncoderSpecificationForstreamId
configureSessionOverride
codecTypeOverrideForstreamId
Cannot append metadata when the track was never added. Call addMetadataTrack: before prepareToRecord.
Invalid time stamp is not supported for metadata for stream '%@'.
No metadata appended because it's empty
No metadata appended because the AVTimedMetadataGroup* is nil
FIFO buffer for metadata stream '%@' is full, dropping older buffer.
Cannot append associated metadata when the track was never added. Call addMetadataTrackAssociatedWith:forIdentifier: before prepareToRecord.
nullptr IMU metadata
asyncWriteAssociatedMetadata
[%s associated with %s] metadata input not ready for more data, dropping samples
Cannot append audioSample <null>.
Cannot append stream type that hasn't been set up.
Could not append audio sample because it is nil
Current writer state does not support finishRecording.
finishRecording
Cannot finishRecording.
finishAndDrainFifoFirst
-[MOVStreamWriter finishAndDrainFifoFirst]
com.apple.movstreamwriter.timeout
cancelRecording
forceFinishRecording
finishAVWriter
-[MOVStreamWriter finishAVWriter]_block_invoke
processCancelRecording
Late frames arrived from encoder. Drain fifos again...
processFinishRecording-checkIfFifoAreEmpty
q24@?0@8@16
processFinishRecording
checkForFinishing
-[MOVStreamWriter checkForFinishing]
writeSampleBuffer
Exception occurred during writing %@ for stream '%@'. Dropping frame.
writeMetadataOfSample
Exception occurred during writing %@ for stream '%@'. Dropping sample.
writeMetadata
-[MOVStreamWriter encoderTypeForStream:]
configuration
Error creating writer output setting for stream '%@' Error: %@.
Unsupported media type (%d) for stream '%@'.
Unable to use output settings (%@) for track '%@'.
Error creating AVAssetWriterInput (%@) for track '%@'.
Unable to get metadata format description for stream: %@
Can't add stream and metadata inputs to the asset writer to stream: %@
Can't add smetadata input to the asset writer to stream: %@
Cannot setup metadata associated with %@: %@ stream doesn't exist
mdta/%@
Unable to get metadata format
basic_string
Recording
%d_%zu
Cannot allocate reference buffer.
Invalid pixel buffer configuration.
875704438_1
1278226736_0
1735549492_0
1983131704_0
2019963440_1
2019963442_0
2016686640_0
875704438_0
825306677_0
1278226742_0
1919379252_0
875836518_1
2019963440_0
2016687156_1
875836518_0
825437747_0
2019963956_1
875836534_1
2016686642_1
1650943796_0
875836534_0
1111970369_0
1932996149_0
2016687156_0
1983066168_0
875704422_1
1278226488_0
2019963442_1
2019963956_0
2016686640_1
1734505012_0
2016686642_0
875704422_0
Cannot create pixel buffer transfer session
Cannot create pixel buffer pool
Cannot create new pixel buffer.
Cannot transfer pixel buffer
Cannot copy pixel buffer
Frame %f (%@)
CVBytesPerRow
%@.%@
%@[%d]
Unsupported data type, cannot serialize object %@.
Unsupported raw data format, cannot deserialize object.
BitsPerComponent
FullRangeVideo
Cannot find track (%d) in '%@'.
No format description for track (%d) in '%@'.
Cannot add output to track (%d) in '%@'.
Cannot read from track (%d) in '%@'.
Cannot get sample buffer from track (%d) in '%@': %@
No pixel buffer in track (%d) in '%@'.
No sample buffer in track (%d) in '%@'.
HEVC_Monochrome12_AutoLevel
HEVC_Monochrome10_AutoLevel
RawBayer
Cannot create pixel buffer rotation session (err: %d)
-[MOVStreamFrameTransform initWithRotation:flip:]
MOVStreamFrameTransform.m
Cannot set rotation property (err: %d).
Cannot set horizontal flip (err: %d).
Cannot set vertical flip (err: %d).
Cannot create pixel buffer pool.
Cannot rotate pixel buffer (err: %d).
Error joining Warhol-Buffer for RawBayer pixel buffer.
Cannot create pixel buffer pool for RawBayer stream.
Init
Finishing AVWriter
Minimum PixelBufferPool attributes not satistfied, missing key: 
Error creating underlying pixel buffer pool: %d
BufferPoolAllocationThreshold
splitBayerIntoWarhol
joinWarholIntoBayer
splitCompandedBayerIntoWarhol
joinCompandedWarholIntoBayer
-[MetalPixelBufferUtility processBayerBuffer:withWarholBuffer:shiftCount:msbReplication:operation:sampleSize:]
MetalPixelBufferUtility.m
(width % vectorsPerLine) == 0
commandBuffer != nil
computeEncoder != nil
Depth
Color
FrontDepth
FrontColor
FrontIR
Cancelled
mdta/custom.
RawBayerFormat
mdta/com.apple.stream_sample_exact_bytes_per_row_multiplanar
%@%@
Invalid value type for PixelBufferExactBytesPerRow.
Preparing Cancelling
Forcing Finish
Frame size too small
/Library/Caches/com.apple.xbs/Sources/MOVStreamIO_Sim/MOVStreamIO/VTEncoder/HEVCLosslessEncoder.mm
Cannot check AllowFrameReordering status of encoding session. Assuming disabled.
VTCompressionSessionEncodeFrame failed
kVTCompressionPropertyKey_Usage failed
HEVC_Main_AutoLevel
HEVC_Main10_AutoLevel
HEVC_Main444_AutoLevel
HEVC_Main44410_AutoLevel
HEVC_MainStill_AutoLevel
VTVideoEncoderSetProperty failed
kVTCompressionPropertyKey_Priority failed
VTVideoEncoderSetProperty kVTCompressionPropertyKey_MaxKeyFrameIntervalDuration failed
VTVideoEncoderSetProperty kVTCompressionPropertyKey_ExpectedFrameRate failed
EnableRCFW
VTVideoEncoderSetProperty my_kVTCompressionPropertyKey_EnableRCFW failed
EnableQPMod
VTVideoEncoderSetProperty my_kVTCompressionPropertyKey_EnableQPMod failed
InitialQPI
VTVideoEncoderSetProperty  my_kVTCompressionPropertyKey_InitialQPI failed
InitialQPP
VTVideoEncoderSetProperty my_kVTCompressionPropertyKey_InitialQPP failed
InitialQPB
VTVideoEncoderSetProperty my_kVTCompressionPropertyKey_InitialQPB failed
LossLess
VTVideoEncoderSetProperty my_kVTCompressionPropertyKey_LossLess failed
VTVideoEncoderSetProperty kVTCompressionPropertyKey_RealTime failed
VTVideoEncoderSetProperty kVTCompressionPropertyKey_MaximizePowerEfficiency failed
DebugMetadataSEI
VTVideoEncoderSetProperty my_kVTCompressionPropertyKey_DebugMetadataSEI2 failed
OutputBitDepth
VTVideoEncoderSetProperty my_kVTCompressionPropertyKey_OutputBitDepth failed
Cancelling
mdta/com.apple.trackStreamEncoding
DeviceMotion
RawGyro
RawAccel
slim
HEVCMonochrome
h264
HEVC
none
Can't add audio track (%@) to the AVAssetReader.
Can't add metadata track (%@) to the AVAssetReader.
Unknown IMU data type, ignoring: '%@'
Can't add output for scene track (%@) to the AVAssetReader.
Invalid ExactBytesPerRow value type for stream '%@': %@.
Decoder required for '%@' is not available.
PortTypeBack
Unknown stream type detected.
Undefined pixel format for stream '%@'. Ignoring stream.
Can't add video track (%@) to the AVAssetReader.
Cannot read sample buffer for '%@': %@
-[MOVStreamReaderStreamOutput nextSampleBufferForStreamAttachementsData:timestamp:error:]
MOVStreamReaderStreamOutput.mm
self.assetReader.error != nil
Metadata PLIST Read error: %@
Wrong attachments serialization mode (fallback to JSON).
Metadata JSON Read error: %@
 Unknown AttachmentSerializationMode = %d for frame metadata!
-[MOVStreamReaderStreamOutput grabNextMetadataItemsOfTrackAssociatedWithStreamWithIdentifier:timeRange:error:]
No AVAssetReaderOutputMetadataAdaptor found for metadata stream: '%@'
-[MOVStreamReaderStreamOutput grabNextTimedMetadataGroupOfStreamError:]
-[MOVStreamReaderStreamOutput grabNextMetadataOfStreamTimeRange:error:]
HEVCMonochrom
MetadataKeyTable
MetadataKeyValue
BackColorWide
BackColorTele
BackIR
BackDepth
Cannot create L008 pixel buffer pool for Non-Planar stream.
3.19.2
MIOBossMode
MIODisableFrameReordering
MIOBitrateMultiplier
MIOBitrateOverride
MIOForceColorLossless
MIOForce10bitMonoByVT
MIOForceLossless8bitMonoByVT
MIOSkipSourceHint
URL must be a file URL type. (%@)
File doesn't exist. (%@)
No MOVStreamReaderDelegate set.
Invalid file path. (%@)
MOVStreamReader asset is nil
Time to reset to is invalid
-video
-%lu
-audio
-scene
-metadata
Start Reading (AVAssetReader) Error: %@  Status: %ld
File doesn't contain stream '%@'.
No or invalid MOVStreamIO version information in MOV!
-[MOVStreamReader movVersionCheck]
MOVStreamReader.mm
versionError == nil
MOV created with a newer MOVStreamIO version '%@' (current '%@')!
v32@?0@"AVMetadataItem"8Q16^B24
Missing stream id.
File doesn't contain data for requested stream '%@'.
Stream '%@' is not a video stream.
Stream '%@' is not an audio stream.
Stream '%@' is not a scene stream.
Stream '%@' is not a metadata stream.
Missing stream id for copy next frame.
Cannot grab metadata. Missing metadata stream id.
Cannot grab metadata. Unknown metadata stream '%@'.
Error joining Warhol-Buffer for Companded-RawBayer pixel buffer.
<%@: %p%@ sampleCount=%@ samples=[%@... and %@ more]>
<%@: %p%@ sampleCount=%@ samples=[%@]>
{?=qiIq}
SlimXFormat
+[MOVStreamOutputSettings outputSettingsForStream:defaultFrameRate:enableAVEHighPerformanceProfile:]
MOVStreamOutputSettings.mm
Invalid encoder type.
AllowFrameReordering
HEVC_Main42210_AutoLevel
+[MOVStreamOutputSettings hevcColorSettingsLossless:quality:bitsPerSecond:bitDepth10:chromaSampling:frameRate:dimensions:enableAVEHighPerformanceProfile:]
HEVC_Main422_AutoLevel
ap4x
ProRes4444 only supports high and medium quality setting.
Quality
Failed
duration = %5.3f msec, min/max/avg/count = %5.3f/%5.3f/%5.3f/%d
com.apple.streamwriter.vtencoding
Encoder not configured yet.
Preparing
Finished
-[MOVStreamTimestamps sampleTimelineForAssetTrack:shouldStartTimestampsAtZero:]
MOVStreamTimestamps.m
CMTimeRangeEqual(sourceRange, timeMapping.source)
CMTimeRangeEqual(targetRange, timeMapping.target)
CMTIME_COMPARE_INLINE(pts, ==, pts0)
Draining FIFO
 ERROR [MIOPixelBufferPool]: %{public}@ 
 ERROR [MOVStreamIO]: %{public}@ 
 WARNING [MOVStreamIO]: %{public}@ 
ExactBytesPerRow count doesn't match pixel buffers plane count!
Invalid ExactBytesPerRow value type!
Cannot convert pixel buffer. (%{public}@)
%{public}@
 ERROR: Cannot read config from nil dictionary
 ERROR: Cannot read config from file '%{public}@'. 
 ERROR: %{public}@. 
MOVStreamWriter init with URL %{public}@
MOVStreamWriter dealloc
Configuration not supported.
Start prepareToRecordWithMovieMetadata
Init av writer...
MOVStreamWriter set movieFragmentInterval to %f
Writer setupAssetWriterStreamInputs
Writer setupMetadataInputs
Writer setupAssociatedMetadataInputs
Writer add MOV metadata
Writer startWriting
Writer register KVO
Writer transition status
 ERROR: 'addIsReadyObservers' called twice 
MOVStreamWriter appendPixelBuffer at '%5.3f' to stream '%{public}@'
MOVStreamWriter appendSampleBuffer at '%5.3f' to stream '%{public}@'
[FIFO] add to fifo '%{public}@' %ld
MOVStreamWriter metadata group at '%5.3f' to stream '%{public}@'
MOVStreamWriter metadata at '%5.3f' to stream '%{public}@'
Info: The metadata append triggered the start for the asset writer. Are you sure this is what you want?
 ERROR: appendTimedMetadataGroup exception: %{public}@ 
Close all VT encoders.
Wait for encoders...
All encoders closed.
Writing pending frame attachements for stream '%{public}@'.
FINISHING!
[FIFO] Precheck All Fifo items written '%{public}@'
 ERROR: [FIFO] CANNOT Write Item of metadata stream '%{public}@' for state %{public}@ 
Start Session by '%{public}@' at %f
 ERROR: [FIFO] CANNOT Write Item of stream '%{public}@' for state %{public}@ 
Will add AVAssetWriterInput for stream '%{public}@' with outputSettings: %{public}@ 
 sourceFormatHint: %{public}@
Setup metadata track with identifier "%{public}@"
Setup metadata track with legacy identifier "%{public}@"
BytesPerPixelLookUp: Register %zu for %@
Cannot allocate reference buffer.
Invalid pixel buffer configuration.
ERROR CREATING PIXELBUFFERREFCOPY %d
Inconsistent height.
Inconsistent bytes per row.
Inconsistent width.
Error creating pixel buffer from pool (%d).
Cannot copyPixelBuffer, not matching plane count
Cannot copyPixelBuffer, not matching bytes per row
Can't serialize object as JSON: %{public}@
Invalid ExactBytesPerRow value type: %{public}@
Unable to serialize MOVStream State metatdata as JSON: %{public}@
 ERROR: Do not call -[%{public}@ init].
Failed to create Metal Device.
Failed to find the default library. error: %{public}@
Failed to find the metal splitBayerIntoWarhol function.
Failed to find the metal joinWarholIntoBayer function.
Failed to find the metal splitCompandedBayerIntoWarhol function.
Failed to find the metal joinCompandedWarholIntoBayer function.
Failed to created pipeline state object, error %{public}@.
Failed to create the command queue.
Bayer Buffer width is not a multiple of 8
processBayerBuffer error recevied: %{public}@
Unable to serialize audio metatdata as PLIST: %{public}@
Error: The metadata dictionary is not valid for XML v1.0 plist Format
Error: Cannot serialize metadata to plist
Unable to serialize depth metatdata as JSON: %{public}@
Can't create metadata format description...
AllowFrameReordering: %d
Missing format discription for VTCompressionSession.
Custom video encoder configuration.
Encoder Config >> kVTCompressionPropertyKey_Usage = %d
Profile passed unrecognized (%d). exit.
Encoder Config >> kVTCompressionPropertyKey_ProfileLevel = %{public}@
Encoder Config >> kVTCompressionPropertyKey_Priority = %d
Encoder Config >> kVTCompressionPropertyKey_AllowFrameReordering = %d
Encoder Config >> kVTCompressionPropertyKey_MaxKeyFrameIntervalDuration = %f
Encoder Config >> kVTCompressionPropertyKey_ExpectedFrameRate = %f
Encoder Config >> my_kVTCompressionPropertyKey_LossLess = %d
Encoder Config >> kVTCompressionPropertyKey_RealTime = %d
Encoder Config >> kVTCompressionPropertyKey_MaximizePowerEfficiency = %d
Encoder Config >> my_kVTCompressionPropertyKey_DebugMetadataSEI2 = %d
Assert: (%d) %s - f: %s, l: %d
Encoder Config >> my_kVTCompressionPropertyKey_OutputBitDepth = %d
Assert: %s - f: %s, l: %d
*-----------------------------------------------------------------------------*
Detected %{public}@ stream
Found empty abandoned associated metadata track (Track id: %d), > ignoring.
Invalid 'kRawSampleBufferAttachmentsIdentifier': %@
Detected %{public}@ IMU data type
Detected scene %{public}@ stream
Got a Depth/IR stream which uses unknown version of SLIM (%d)
[WARNING] MOVStreamIO Debug Mode enabled. This could change the Framework behavior.
[WARNING] Default setting for '%{public}@' was changed from '%{public}@' to '%{public}@'. This can affect your recordings!
 ERROR: Cannot initialize reader: %{public}@ 
MOVStreamReader registerOutput with nil output.
MOVStreamReader registerOutput unknown media type (%ld).
 ERROR: %{public}@ 
MOVStreamReader: Setup video output for '%{public}@'.
MOVStreamReader: Register video output for '%{public}@'.
MOVStreamReader: Register video output for '%{public}@', failed.
MOVStreamReader: Setup audio output for '%{public}@'.
MOVStreamReader: Register audio output for '%{public}@'.
MOVStreamReader: Register audio output for '%{public}@', failed.
MOVStreamReader: Setup scene output for '%{public}@'.
MOVStreamReader: Register scene output for '%{public}@'.
MOVStreamReader: Register scene output for '%{public}@', failed.
MOVStreamReader: Setup metadata output for '%{public}@'.
MOVStreamReader: Register metadata output for '%{public}@'.
MOVStreamReader: Register metadata output for '%{public}@', failed.
MOVStreamIO state metadata is not in PLIST format. Fallback to JSON.
MOVStreamIO state metadata JSON error: %{public}@
 WARNING [MOVStreamReader]: %{public}@ 
 ERROR: Could not create %{public}@ with nil parameter
MOVStreamWriter: Disable 'AllowFrameReordering' related to r50244907.
No sample buffer received. VTCompressionSession failed with status: %d
%{public}@: Encoder closed.
 ERROR: Set '%{public}@' to '%{public}@' in encoder config (Err: %d). 
 ERROR: Could not create %{pubic}@ with nil parameter
MOVStreamIO
MOVStreamIOUtility
Version
NSCopying
DefaultPostProcessor
MOVStreamPostProcessor
NSObject
MOVStreamEncoderConfig
SampleTimeBuffer
MOVStreamWriterStateFinishQueues
MOVStreamWriterState
L008ToNonPlanarPostProcessor
MOVStreamPostProcessorSizeAdjusting
y416ToRawBayerPostProcessor
MIOLog
SampleTimeRangeBuffer
Delegate
SampleBufferAndMetadata
MOVStreamWriter
VideoEncoderInterfaceDelegate
MOVStreamWriterStateContext
MOVStreamWriterDeprecated
MOVStreamWriterDeprecationNominates
MOVStreamWriterStateRecording
PixelBufferUtility
PreProcessorFactory
MOVStreamFrameConverter
MOVStreamFrame
DefaultPreProcessor
MOVStreamPreProcessor
Private
PostProcessorFactory
MOVStreamFrameTransform
SampleTimeRangeList
L016Raw14PreProcessor
RawBayerFromYUVPostProcessor
RawBayerToy416PreProcessor
MOVStreamWriterStateInit
MOVStreamWriterStateFinishAVWriter
MIOPixelBufferPool
MetalPixelBufferUtility
Legacy
MOVStreamWriterStateCancelled
TrackMetadata
MOVStreamWriterStatePrepareCancelling
MOVStreamWriterStateForceFinish
MOVStreamWriterStateCancelling
MOVStreamReaderStreamOutput
MOVStreamReaderStreamOutputPrivate
MOVStreamReaderVideoStreamOutputPrivate
MOVStreamReaderVideoStreamOutput
MOVStreamReaderSampleStreamOutput
MOVStreamReaderBaseStreamOutput
MOVStreamReaderAudioStreamOutput
MOVStreamReaderMetadataStreamOutput
NonPlanarToL008Processor
MOVStreamOptions
MOVStreamReader
MOVStreamReaderDeprecationNominates
MOVStreamReaderDeprecated
MOVStreamReaderEnhancedAccess
CompandedRawBayerPostProcessor
SampleTimeList
MOVStreamOutputSettings
MOVStreamWriterStateFailed
RawBayerTo1stPlaneYUVPreProcessor
CompandedRawBayerPreProcessor
VideoEncoderInterface
EncoderConfigDelegate
L016Raw14PostProcessor
MOVStreamWriterStatePreparing
RawBayerPostProcessor
RawBayerPreProcessor
MOVStreamWriterStateFinished
MOVStreamTimestamps
MOVStreamWriterStateDrainFifo
RawBayerToYUVPreProcessor
T@"AVAssetTrack",W,V_assetTrack
.cxx_destruct
T@"NSArray",R,N
CGAffineTransformValueFromNSValue:
T#,R
_cached_cmtimes
T@"<MOVStreamPostProcessor>",&
_pipeLineStates
T@"<MOVStreamReaderDelegate>",W,V_delegate
_ranges
T@"<MOVStreamWriterState>",&,V_state
allKeys
T@"AVAssetReaderOutputMetadataAdaptor",&,V_attachmentsAdaptor
bitrateOverride
T@"AVAssetTrack",&,N,V_assetTrack
cancelRecording
T@"AVAssetTrack",W,V_track
cmtimes
T@"MOVStreamEncoderConfig",R,V_config
containsObject:
T@"MOVStreamReader",W,V_reader
context
T@"NSArray",&
dealloc
T@"NSArray",R,C,N,V_cached_ranges
enabled
T@"NSData",&,V_futureAttachmentsData
finishRecording
T@"NSDictionary",&,V_encoderSpecification
hevcColorSettingsLossless:quality:bitsPerSecond:bitDepth10:chromaSampling:frameRate:dimensions:enableAVEHighPerformanceProfile:
T@"NSDictionary",&,V_sessionProperties
initWithConfig:
T@"NSDictionary",R,V_settings
isEmpty
T@"NSError",R
isPixelFormatCompandedRawBayer:
T@"NSString",&,V_relatedStreamId
m_asset
T@"NSString",&,V_streamId
m_streamDataMap
T@"NSString",R
movVersionCheck
T@"NSString",R,V_modifier
nextFinishStep:
T@"Version",W,V_version
prepareToRecord
T@,&,VexactBytesPerRow
relatedStreamId
setAssetReader:
TB,N,V_l010OutputFormatRAW14L016
setCustomEncoderConfigDelegate:
TB,N,V_shouldAppendEndOfStreamTimestamp
stepInPresentationOrderByCount:
TB,R
streamWriterEncounteredAnError:
TB,V_customEncoderConfig
trackID
TB,V_isLegacyIMUTrack
valueWithRange:
TB,VlegacyKeysMode
writingBufferCapacityForStream:
.cxx_construct
T@"NSArray",&,VmovMetadataItems
AVEProfileLevel10BitMonochrome
T^{__CVBuffer=},R,V_pixelBuffer
JSONObjectWithData:options:error:
_bugfix
T@"<MOVStreamCustomEncoderConfigDelegate>",W,V_customEncoderConfigDelegate
_config
T@"<MOVStreamPostProcessor>",&,VpostProcessor
_poolAttributes
T@"<MOVStreamWriterDelegate>",W,V_delegate
_reader
T@"AVAssetReader",W,V_assetReader
alwaysCopiesSampleDataForStream
T@"AVAssetReaderTrackOutput",&,V_streamOutput
bundleForClass:
T@"AVAssetTrack",R,W
clampedQuality:
T@"AVTimedMetadataGroup",&,V_metadata
consumeMetadatOfMetadataStream:
T@"MOVStreamOptions",R
containsStream:
T@"MOVStreamTimestamps",&,N,V_timestamps
dataWithLength:
T@"NSArray",R,C,N,V_cached_cmtimes
enableAVEHighPerformanceProfile
T@"NSArray",R,C,N,V_cached_times
encoder:encodedSampleBuffer:metadata:presentationTime:streamId:
T@"NSDictionary",&,N,V_poolAttributes
getMetadataStreamsAssociatedTo:
T@"NSDictionary",&,V_metadataAdaptors
initWithAssetReaderTrackOutput:
T@"NSDictionary",R
inputPixelFormatFromStreamData:
T@"NSError",&
isPixelBufferCompandedRawBayer:
T@"NSObject<OS_os_log>",R
isProxy
T@"NSString",&,V_relationSpecifier
m_encodingQueue
T@"NSString",C,N,V_name
monochrome8bitHEVCEncoderConfig
T@"NSString",R,C
newCommandQueue
T@"SampleTimeList",&,N,V_timeList
pixelBufferPool
T@,&
registerOutput:
T@,R,V_context
release
TB,N,V_enabled
setAttachmentSerializationMode:
TB,N,V_rawBayerMSBReplication
setShouldStartTimestampsAtZero:
TB,N,V_shouldStartTimestampsAtZero
streamWriterDidCancelRecording:
TB,R,V_useCustomEncoderConfig
trackForStream:
TB,V_endOfStreamReached
trackMetadataForMetadataStream:
TB,V_transferSessionUsageDisabled
version
TB,VremovePadding
TI,N
TI,N,VoriginalPixelFormat
TI,R
TI,R,V_bugfix
TI,R,V_lastEncodingInfoFlags
TI,R,V_lastEncodingStatus
TI,R,V_major
TI,R,V_minor
TI,V_codecType
TI,V_determinedPixelFormat
TI,V_originalPixelFormat
TQ,R
TQ,R,N
TQ,V_trackTypeInfo
T^{__CVPixelBufferPool=},N,V_pixelBufferPool
T^{opaqueCMSampleBuffer=},V_sampleBuffer
Td,R
Td,R,V_expectedFrameRate
Td,R,V_timeStamp
Td,V_finishingTimeout
Ti,V_attachmentSerializationMode
Ti,V_baseMediaTimeScale
Tq,R
Tq,V_mediaType
Tq,V_pendigFrames
T{?=qiIq},R
T{?=qiIq},R,V_cmTimeStamp
T{?=qiIq},V_futureAttachementsDuration
T{?=qiIq},V_futureAttachementsPts
T{?=qiIq},V_movieFragmentInterval
T{?=qiIq},V_sessionStartTime
T{CGAffineTransform=dddddd},R
T{CGAffineTransform=dddddd},V_transform
URLAssetWithURL:options:
UTF8String
_assetReader
_assetTrack
_attachmentSerializationMode
_attachmentsAdaptor
_baseMediaTimeScale
_cached_ranges
_cached_times
_cmTimeStamp
_codecType
_context
_converter
_criticalError
_customEncoderConfig
_customEncoderConfigDelegate
_debugMode
_defaultAudioWritingBufferCapacity
_defaultMetadataWritingBufferCapacity
_defaultWritingBufferCapacity
_delegate
_determinedPixelFormat
_enabled
_encoderSpecification
_endOfStreamReached
_expectedFrameRate
_finishingTimeout
_frameDuration
_futureAttachementsDuration
_futureAttachementsPts
_futureAttachmentsData
_isLegacyIMUTrack
_l010OutputFormatRAW14L016
_lastEncodingInfoFlags
_lastEncodingStatus
_major
_mediaType
_metadata
_metadataAdaptors
_metadataStreams
_metalCommandQueue
_metalDevice
_minor
_modifier
_movVersion
_movieFragmentInterval
_name
_orderedAudioStreamIds
_orderedMetadataStreamIds
_orderedSceneStreamIds
_orderedVideoStreamIds
_originalPixelFormat
_pendigFrames
_pixelBuffer
_pixelBufferPool
_pool
_rawBayerMSBReplication
_relatedStreamId
_relationSpecifier
_rotation
_rotationSession
_sampleBuffer
_sampleStreams
_sessionProperties
_sessionStartTime
_settings
_shouldAppendEndOfStreamTimestamp
_shouldStartTimestampsAtZero
_state
_streamId
_streamOutput
_timeList
_timeStamp
_timeoutBlock
_timeoutQueue
_times
_timestamps
_track
_trackTypeInfo
_transferSession
_transferSessionUsageDisabled
_transform
_useCustomEncoderConfig
_version
activateNewState:byEvent:
activateWithContext:
addAudioTrackForStreamWithIdentifier:audioFormat:additionalSettings:
addEncodingQuality:toConfiguration:
addEntriesFromDictionary:
addInput:
addIsReadyObservers
addMetadataTrack:
addMetadataTrack:formatDescription:
addMetadataTrackAssociatedWith:withIdentifier:withFormatDescription:
addObject:
addObjectsFromArray:
addObserver:forKeyPath:options:context:
addOutput:
addTrackAssociationWithTrackOfInput:type:
addTrackForStreamWithIdentifier:formatDescription:encoderConfig:
addTrackForStreamWithIdentifier:formatDescription:recordingConfiguration:
addTrackTypeInfo:toConfiguration:
addTransform:toConfiguration:
adjustedWidthForWidth:
allValues
allVersionedKeysForKey:modifier:
allocWithZone:
appendAudioBuffer:forStream:
appendFormat:
appendMetadata:associatedWith:toStream:
appendMetadata:withTimeStamp:toStream:
appendPixelBuffer:presentationTime:toStreamId:
appendSampleBuffer:
appendSampleBuffer:attachments:streamId:
appendString:
appendTime:
appendTimeMetadataGroup:toStream:
appendTimeRange:
appendTimedMetadataGroup:
appendVideoSampleBuffer:attachmentMetadata:streamId:
appendVideoSampleBuffer:attachments:streamId:
applyBitrateModifiersTo:
applySessionProperties:
arrayWithCapacity:
arrayWithObject:
arrayWithObjects:
arrayWithObjects:count:
asset
assetReader
assetReaderTrackOutputWithTrack:outputSettings:
assetReaderWithAsset:error:
assetTrack
assetWriterInputMetadataAdaptorWithAssetWriterInput:
associatedTracksOfType:
asyncWriteAssociatedMetadata:metadataKey:associatedStreamKey:
attachmentSerializationMode
attachmentSerializationModeForStream:withDefaultMode:
attachmentSerializationModeForStream:withDefaultMode:fromMap:
attachmentsAdaptor
attachmentsDataForStreamPts:duration:
audioNoneEncoderConfig
audioSettings:
autorelease
baseMediaTimeScale
bitrateMultiplier
boolForKey:
boolValue
bugfix
bytes
bytesPerPixelForFormat:
cStringUsingEncoding:
cached_cmtimes
cached_ranges
cached_times
canAddInput:
canAddOutput:
canAppendData:
canApplyOutputSettings:forMediaType:
canConfigure:
canFinishRecording:
canWriteData:
cancelReading
cancelRecording:
cancelTimeoutBlock
cancelWriting
checkBossMode
checkForFinishing
checkHasValue:changedForKey:
checkIfFifoAreEmpty
chromaSamplingEncoding:
class
clearAllFifoQueues
clearCachedProperties
clearOutputs
closeEncoder
closeEncoderInDispatchGroup:
cmTimeStamp
code
codecType
codecTypeOverride
color8bitHEVCWithAlphaEncoderConfig
color8bitHEVCWithAlphaEncoderConfigWithBitrate:
colorH264EncoderConfig
colorH264EncoderConfigWithBitrate:
colorHEVCEncoderConfig
colorHEVCEncoderConfigWithBitrate:
colorHEVCEncoderConfigWithQuality:
colorHEVCLosslessEncoderConfig
colorRecordingConfigBitDepth:bitrate:chromaSampling:error:
colorRecordingConfigBitDepth:chromaSampling:error:
colorRecordingConfigBitDepth:lossless:chromaSampling:error:
colorRecordingConfigBitDepth:quality:chromaSampling:error:
colorWithAlphaLossless8bitHEVCEncoderConfig
commandBuffer
commit
compare:
compareToVersion:
componentsSeparatedByString:
computeCommandEncoder
concatPixelBuffer:withPixelBuffer:targetPixelBuffer:
config
configureSessionOverride:
conformsToProtocol:
consumeSamplesOfVideoAudioStream:
containsAudioStream:
containsMetadataStream:
containsTimeRange:
convertPixelBuffer:
copy
copyAlphaChannelOfBuffer:toMonochromeBuffer:
copyAlphaChannelOfBuffer:touint16Data:
copyData:toNonPlanarPixelBuffer:
copyData:toPlanarPixelBuffer:toPlane:
copyFromPixelBuffer:toPixelBuffer:andShiftBits:
copyMonochromeBuffer:toAlphaChannelOfBuffer:
copyNextFrameForStream:timestamp:error:
copyNextFrameForStreamTimestamp:error:
copyNextSampleBuffer
copyNonPlanarPixelBufferData:
copyPixelBuffer:toPixelBuffer:bytesPerPixel:
copyPixelBufferData:ofPlane:
copyWithZone:
copyuint16Data:toAlphaChannelOfBuffer:
count
countByEnumeratingWithState:objects:count:
create4444AYpCbCr16PixelBufferFillAlphaWithData:width:height:
createFormatDescriptionFromPixelBuffer:
createHEVCCompatiblePixelBuffer:
createL008FormatDescriptionFromCompandedRawBayerFormatDescription:
createL008FormatDescriptionFromNonPlanarFormatDescription:
createL010FormatDescriptionFromL016FormatDescription:
createL010FormatDescriptionFromRawBayerFormatDescription:
createMIOPixelBufferPoolWithWidth:height:pixelFormat:
createMIOPixelBufferPoolWithWidth:height:pixelFormat:exactBytesPerRow:minBufferCount:
createMIOPixelBufferPoolWithWidth:height:pixelFormat:exactBytesPerRows:minBufferCount:
createMIOPixelBufferPoolWithWidth:height:pixelFormat:extendedPixelsPerRow:minBufferCount:
createMIOPixelBufferPoolWithWidth:height:pixelFormat:minBufferCount:
createMetadataFormatDescription:
createNewL008MIOPixelBufferPoolWithReferencePixelBuffer:minBufferCount:
createNewL008PixelBufferPoolWithReferencePixelBuffer:minimumBufferCount:
createNewL010MIOPixelBufferPoolWithReferencePixelBuffer:minBufferCount:
createNewL010PixelBufferPoolWithReferencePixelBuffer:minimumBufferCount:
createPixelBufferAttributesWithWidth:height:extendedPixelsPerRow:pixelFormat:bytesPerRowAlignment:planeAlignment:
createPixelBufferAttributesWithWidth:height:pixelFormat:bytesPerRow:
createPixelBufferAttributesWithWidth:height:pixelFormat:bytesPerRows:
createPixelBufferPoolWithWidth:height:format:bytesPerRow:minBufferCount:
createPixelBufferPoolWithWidth:height:format:bytesPerRows:minBufferCount:
createPixelBufferPoolWithWidth:height:format:extendedPixelsPerRow:minBufferCount:
createRawPixelBufferWithWidth:height:extendedRows:extendedPixelsPerRow:pixelFormat:bytesPerRowAlignment:planeAlignment:bufferCacheMode:
createRawPixelBufferWithWidth:height:pixelFormat:bytesPerRow:
createRelatedToStreamMetadata:
createRelationSpecifierMetadata:
createTrackFormatDescriptionFromStreamData:
createxf20FormatDescriptionFromRawBayerFormatDescription:
criticalError
criticalErrorOccurred:context:
currentOptions
customEncoderConfig
customEncoderConfigDelegate
customEncoderConfigWithEmbeddedConfiguration:
customEncoderSettings:frameRate:enableAVEHighPerformanceProfile:
customMetadataTrackMetadataForStream:fromMap:
customTrackMetadata
customTrackMetadataForStream:fromMap:
dataWithContentsOfFile:
dataWithJSONObject:options:error:
dataWithPropertyList:format:options:error:
debugDescription
debugEnabled
decimalDigitCharacterSet
decodeAttachmentsData:error:
defaultAudioWritingBufferCapacity
defaultFactory
defaultLog
defaultManager
defaultMetadataWritingBufferCapacity
defaultWritingBufferCapacity
delegate
deleteFileOnCancel
deleteMOVFile
description
detectPixelFormatForAsset:videoTrackId:error:
determinedPixelFormat
dictionary
dictionaryRepresentation
dictionaryWithCapacity:
dictionaryWithObjects:forKeys:count:
didChangeValueForKey:
disableFrameReordering
dispatchThreadgroups:threadsPerThreadgroup:
domain
doubleValue
duration
encodeFrame:pst:frameProperties:metadata:
encodedPixelFormatFromStreamData:
encoder:codecTypeOverrideForstreamId:
encoder:configureSessionOverride:streamId:
encoder:encodingFailedForStream:
encoder:overrideVideoEncoderSpecificationForstreamId:
encoderIdsForType:
encoderSpecification
encoderTypeForStream:
endEncoding
endOfStream
endOfStreamReached
endTimeForAssetTrack:
enumerateObjectsUsingBlock:
error
errorByAddingStreamId:
errorWithDomain:code:userInfo:
exactBytesPerRow
exceptionWithName:reason:userInfo:
executePrepareToRecordWithMovieMetadata:
expectedFrameRate
exportAsynchronouslyWithCompletionHandler:
extendedPixelsPerRowOfPixelBuffer:
extendedPixelsRightForPlanarBufferWidth:height:bytesPerRow:format:
fifoBufferCapacity
fifoBufferSizeForStream:
fifoDropsEnabled:
fileExistsAtPath:
fileExistsAtPath:isDirectory:
fileURLWithPath:
fillPlaneOfPixelBuffer:planeIndex:withValue:
findAllAssociatedMetadataTrackInAsset:forTrack:
finishAVWriter
finishAndDrainFifoFirst
finishRecording:
finishWritingWithCompletionHandler:
finishedCancelRecording:
finishingTimeout
firstObject
force10bitMonoByVT
forceColorLossless
forceFinishRecording
forceFinishRecording:
forceLossless8bitMonoByVT
formatDescription
formatDescriptionForPixelBuffer:streamData:
formatDescriptions
formatForPixelBuffer:
frameDuration
frameRangeFrom:to:
frameReorderingEnabled
futureAttachementsDuration
futureAttachementsPts
futureAttachmentsData
generalHEVCColorSettings:frameRate:enableAVEHighPerformanceProfile:
getAllAudioStreams
getAllMetadataStreams
getAllSceneStreams
getAllStreams
getAllocationThreshold
getAssociatedMetadataStreams
getAudioMetadataForBuffer:
getBitsPerSecondForColorStream:frameRate:
getDefaultBitrateForVideoDimension:atExpectedFramerate:forEncoderType:
getExpectedFrameRateForStream:
getFrameRateForStream:
getJsonFriendlyCopy:
getKeyFromMetadataTrack:
getLegacyTrackEncodedPixelFormatMetadataForStream:fromMap:
getLegacyTrackInputPixelFormatMetadataForStream:fromMap:
getLegacyTrackMetadataForAttachmentsSerializationMode:fromMap:
getLegacyTrackMetadataForStream:
getMOVStreamIOMetadataItem
getMaximumBufferAge
getMetadataGroupForBuffer:stream:presentationTime:serializationMode:
getMetadataStreamsAssociatedTo:error:
getMinFrameDurationForStream:
getMinimumBufferCount
getOutputPixelFormatForStream
getOutputPixelFormatForStream:
getOutputSizeForStream:
getPixelBuffer
getPixelFormatForStream:fromMap:
getPixelFormatFromStreamData:
getPlistFriendlyCopyOf:
getPreferredBytesPerRowAlignmentSize
getPreferredPlaneAlignmentSize
getQualitySetting:
getRelatedStreamForStreamId:
getRelationSpecifierForStreamId:
getSizeForStream:
getStreamsRelatedToStream:
getTrackEncodedPixelFormatMetadataForStream:fromMap:
getTrackInputPixelFormatMetadataForStream:fromMap:
getTrackMetadataForAttachmentsSerializationMode:fromMap:
getTrackMetadataForExactBytesPerRow:fromMap:error:
getTrackMetadataForRawBayerRearrangeType:fromMap:
getTrackMetadataForStream:
getTrackMetadataForTrackTypeInfo:fromMap:
getUnknownMetadataStreamsAssociatedTo:
getValue:
getVersionAsString
getVideoTransformForStream:
grabNextAudioSampleForStream:timestamp:error:
grabNextAudioSampleForStreamTimestamp:error:
grabNextMetadataItemsOfTrackAssociatedWith:withIdentifier:timeRange:error:
grabNextMetadataItemsOfTrackAssociatedWithStreamWithIdentifier:timeRange:error:
grabNextMetadataOfStream:timeRange:
grabNextMetadataOfStream:timeRange:error:
grabNextMetadataOfStreamTimeRange:error:
grabNextSampleBufferForStream:timestamp:error:
grabNextSampleBufferForStreamTimestamp:error:
grabNextTimedMetadataGroupOfStream:error:
grabNextTimedMetadataGroupOfStreamError:
guessYCbCrPixelFormatFromFormatDescription:
h264Settings:frameRate:enableAVEHighPerformanceProfile:
hasFinishedReading
hasReachedEndOfMetadataStream:
hasReachedEndOfStream:
hash
hevc10bitMonochromeLosslessSettings:frameRate:enableAVEHighPerformanceProfile:
hevc10bitMonochromeSettings:frameRate:enableAVEHighPerformanceProfile:
hevc8bitMonochromeLosslessSettings:frameRate:enableAVEHighPerformanceProfile:
hevc8bitMonochromeSettings:frameRate:enableAVEHighPerformanceProfile:
hevc8bitWithAlphaLosslessSettings:frameRate:enableAVEHighPerformanceProfile:
hevc8bitWithAlphaSettings:frameRate:enableAVEHighPerformanceProfile:
hevcColorLosslessSettings:frameRate:enableAVEHighPerformanceProfile:
hevcColorSettings:frameRate:enableAVEHighPerformanceProfile:
histogramOf8BitBuffer:
identifier
indexOfTimeRangeAtTime:
informDelegateAboutError:
informDelegateAboutFinishingTimeout
informDelegateAboutIsReady:forStream:
informDelegateAboutMediaWrittenForStream:mediaType:
init
initForStream:configuration:delegate:
initWithAsset:error:
initWithAsset:presetName:
initWithAssetTrack:
initWithAudioTrack:assetReader:associatedMetadataTracks:version:unknownStreamId:reader:delegate:error:
initWithCapacity:
initWithCodecType:encoderSpecification:sessionProperties:
initWithContentsOfFile:delegate:error:
initWithContentsOfFile:error:
initWithContentsOfURL:delegate:error:
initWithData:encoding:
initWithDictionary:
initWithExpectedFrameRate:forStream:delegate:enableAVEHighPerformanceProfile:
initWithFrameRate:
initWithFrameRate:useCustomEncoderConfig:
initWithItems:timeRange:
initWithMediaType:outputSettings:sourceFormatHint:
initWithMetadataTrack:assetReader:version:unknownStreamId:reader:delegate:error:
initWithOriginalPixelFormat:
initWithOriginalPixelFormat:l010OutputFormatRAW14L016:
initWithOriginalPixelFormat:rawBayerMSBReplication:
initWithPixelBuffer:bufferAttributes:poolAttributes:error:
initWithPixelBuffer:timeStamp:context:
initWithRotation:flip:
initWithSceneTrack:assetReader:associatedMetadataTracks:version:unknownStreamId:reader:delegate:error:
initWithSettings:
initWithSuiteName:
initWithTargetWidth:height:format:bytesPerRow:
initWithTargetWidth:height:format:bytesPerRows:
initWithTargetWidth:height:format:extendedPixelsPerRow:
initWithTimeRange:
initWithTimeRanges:
initWithTimes:
initWithTimestamps:
initWithTrack:outputSettings:
initWithURL:andExpectedFrameRate:
initWithURL:delegate:error:
initWithURL:error:
initWithURL:fileType:error:
initWithURL:options:error:
initWithVersionString:error:
initWithVideoTrack:assetReader:associatedMetadataTracks:version:unknownStreamId:reader:delegate:error:
intValue
integerValue
internalErrorWithMessage:code:
internalWarningWithMessage:code:
invertedSet
isAllDigitsInString:
isAudioStream:
isBitDepth10Encoding:
isCustomTrackMetadataCompatibleObject:
isEncoderAvailableForEncoderType:
isEncoderAvailableOfType:withId:
isEncoderAvailableWithEncoderName:
isEqual:
isEqualToString:
isEqualToVersion:
isFileURL
isKeyFrame:error:
isKindOfClass:
isLegacyIMUTrack
isLosslessColorEncoding:
isMemberOfClass:
isOperatingSystemAtLeastVersion:
isPixelBufferRawBayer:
isPixelFormatRawBayer:
isReadyForMoreDataForStreamId:fromMap:
isReadyForMoreMediaData
isTrack:byIdInTracks:
isValidJSONObject:
isValidJSONObject:path:
items
joinCompandedWarholBuffer:intoCompandedBayerBuffer:
joinWarholBuffer:intoBayerBuffer:shiftBitsRightBy:msbReplication:
joinYUVBuffer:intoRawBayerPixelBuffer:shiftBitsLeftBy:msbReplication:
jsonFriendlyCopy:
l010OutputFormatRAW14L016
lastEncodingInfoFlags
lastEncodingStatus
lastObject
legacyKeysMode
length
lengthOfBytesUsingEncoding:
localDefaults
localizedDescription
longValue
m_assetReader
m_assetWriter
m_associatedMetadataDataMap
m_config
m_delegate
m_delegateCallbackQueue
m_enableAVEHighPerformanceProfile
m_encoder
m_encoderInitialized
m_expectedFrameRate
m_firstFrameReceived
m_haveStartedSession
m_lastPtsForStream
m_metadataDataMap
m_observingIsReady
m_orderedMetadataStreamNames
m_orderedStreamNames
m_processingQueue
m_qpValue
m_realtime
m_stream
m_videoTransform
m_writeURL
m_writingQueue
major
makeSampleCursorAtFirstSampleInDecodeOrder
markAsFinished
marksOutputTracksAsEnabledForStream:
marksOutputTracksAsEnabledForStream:fromMap:
matchDeprecatedType:
maxTotalThreadsPerThreadgroup
mediaType
metadata
metadataAdaptors
metadataForMovie
metadataItem
metadataTrackForStream:
minFrameDuration
minimumBytesPerRowForPixelBuffer:
minor
mioPixelBufferPoolErrorWithMessage:code:
modifier
monochrome10BitEncoderConfigUsingAVEWithBitrate:
monochrome10BitEncoderConfigUsingAVEWithQuality:
monochrome10bitHEVCEncoderConfig
monochrome10bitHEVCEncoderConfigWithBitrate:
monochrome10bitHEVCEncoderConfigWithQuality:
monochrome10bitHEVCLosslessEncoderConfig
monochrome8bitHEVCEncoderConfigWithBitrate:
monochrome8bitHEVCEncoderConfigWithQuality:
monochrome8bitHEVCLosslessEncoderConfig
movMetadataItems
movStreamIOErrorWithDomain:message:code:
movStreamIOWarningWithDomain:message:code:
movieFragmentInterval
movstreamIOMetadataForMovie
mutableBytes
mutableCopy
name
naturalSize
newBufferWithBytesNoCopy:length:options:deallocator:
newComputePipelineStateWithFunction:error:
newDefaultLibraryWithBundle:error:
newFunctionWithName:
newPixelBufferRefCopy:
newPixelBufferRefCopy:attachmentKeysToCopy:
newRawBayerBufferFromYUVPixelBuffer:withPixelBufferPool:msbReplication:
newSampleReady:metadata:presentationTime:streamKey:streamId:isAudioSample:
newWarholBufferFromCompandedRawBayerPixelBuffer:withPixelBufferPool:
newWarholBufferFromRawBayerPixelBuffer:
newWarholBufferFromRawBayerPixelBuffer:withPixelBufferPool:
newYUVBufferFromRawBayerPixelBuffer:withPixelBufferPool:
nextAttachmentForStream:error:
nextAttachmentWithError:
nextPixelBufferForStream:attachementsData:timestamp:error:
nextPixelBufferForStreamAttachementsData:timestamp:error:
nextSampleBufferForStream:attachementsData:timestamp:error:
nextSampleBufferForStreamAttachementsData:timestamp:error:
nextTimedMetadataGroup
nominalFrameRate
noneEncoderConfig
numberOfPlanesForPixelFormatType:
numberWithDouble:
numberWithInt:
numberWithInteger:
numberWithUnsignedInt:
numberWithUnsignedLong:
objectAtIndex:
objectAtIndexedSubscript:
objectForInfoDictionaryKey:
objectForKey:
objectForKeyedSubscript:
observeValueForKeyPath:ofObject:change:context:
originalPixelFormat
outputForAudioStream:error:
outputForMetadataStream:error:
outputForSceneStream:error:
outputForVideoStream:error:
outputSettings
outputSettingsForStream:defaultFrameRate:enableAVEHighPerformanceProfile:
overrideVideoEncoderSpecification
path
pendigFrames
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
pixelBuffer
pixelBufferFromPool:
pixelBufferSizeWithPadding:
pixelBufferWithExactBytesPerRow:fromPixelBuffer:error:
pixelBufferWithoutPaddingFromPixelBuffer:error:
pixelFormatForStream
pixelFormatForStream:
pixelFormatForUnknownTrackOfReader:
playbackPixelFormatForTrack:ofStream:delegate:
playbackPixelFormatForTrack:ofStream:streamEncodingType:inputPixelFormat:delegate:
plistDeserializedObject:error:
plistFriendlyCopyOf:
plistSerializedObject:error:
poolAttributes
populateReaderError:message:code:
populateStreamError:message:code:
postProcessor
postProcessorFromReader:originalPixelFormat:encodedFormat:encoderType:streamId:
pre3_15_0_Mapping
preProcessorForFormat:recordingConfiguration:
preferredTransform
prepareFinished:
prepareRecording:
prepareToRecordWithMovieMetadata:
presentationTimeStamp
proRes422EncoderConfig
proRes422EncoderConfigWithQuality:
proRes4444EncoderConfig
proRes4444EncoderConfigWithHighQuality
processBayerBuffer:withWarholBuffer:shiftCount:msbReplication:operation:sampleSize:
processCancelRecording
processFinishRecording
processForceFinishRecording
processFrame:pst:frameProperties:metadata:
processInfo
processedPixelBufferCopyOf:streamData:error:
processedPixelBufferFrom:metadata:error:
processedPixelFormat
propertyList:isValidForFormat:
propertyListWithData:options:format:error:
prores422Settings:frameRate:
prores4444Settings:frameRate:
queueMetadataGroup:stream:
rangeOfCharacterFromSet:
rangeOfString:
rangesOf8BitBuffer:
rawBayerMSBReplication
readFrameFromFile:width:height:pixelFormat:
reader
reader:alwaysCopiesSampleDataForStream:
reader:bytesPerRowForStream:storedValue:
reader:didReceiveWarning:
reader:overrideBytesPerRowForStream:storedValue:customTrackMetadata:originalPixelFormat:encodedPixelFormat:
reader:pixelFormatForStream:suggestedFormat:
readerErrorWithMessage:code:
readerWarningWithMessage:code:
recheckDebugEnabled
registerDefaults:
registerStandardDefaults
relateStream:toStream:relationSpecifier:
relateStream:toStream:relationSpecifier:error:
relationSpecifier
removeAllObjects
removeIsReadyObservers
removeItemAtPath:error:
removeItemAtURL:error:
removeObjectAtIndex:
removeObserver:forKeyPath:
removePadding
removePixelBufferPadding:
removePixelBufferPadding:forStream:
removeTrack:
replaceObjectAtIndex:withObject:
resetReader:
resetReaderTo:error:
resetTimeoutRefTime
respondsToSelector:
resubmitTimeoutBlock
retain
retainCount
sampleBuffer
sampleBufferConfigWithPixelFormat:
sampleTimelineForAssetTrack:
sampleTimelineForAssetTrack:shouldStartTimestampsAtZero:
saveStream:toFile:error:
segments
self
sessionProperties
sessionStartTime
setAlwaysCopiesSampleData:
setAssetTrack:
setAttachmentsAdaptor:
setBaseMediaTimeScale:
setBuffer:offset:atIndex:
setBytes:length:atIndex:
setCodecType:
setComputePipelineState:
setCriticalError:
setCustomEncoderConfig:
setDataType:
setDefaultAudioWritingBufferCapacity:
setDefaultMetadataWritingBufferCapacity:
setDefaultWritingBufferCapacity:
setDelegate:
setDelegate:callbackQueue:
setDeterminedPixelFormat:
setEnabled:
setEncoderSpecification:
setEndOfStreamReached:
setExactBytesPerRow:
setExpectedFrameRate:
setExpectsMediaDataInRealTime:
setExtraAttributes:
setFifoBufferCapacity:
setFinishingTimeout:
setFutureAttachementsDuration:
setFutureAttachementsPts:
setFutureAttachmentsData:
setIdentifier:
setIsLegacyIMUTrack:
setL010OutputFormatRAW14L016:
setLegacyKeysMode:
setMarksOutputTrackAsEnabled:
setMediaTimeScale:
setMediaType:
setMetadata:
setMetadataAdaptors:
setMovMetadataItems:
setMovieFragmentInterval:
setName:
setObject:forKey:
setOriginalPixelFormat:
setOutputFileType:
setOutputURL:
setPendigFrames:
setPixelBufferPool:
setPoolAttributes:
setPostProcessor:
setRawBayerMSBReplication:
setReader:
setRealTimeCapture:
setRelatedStreamId:
setRelationSpecifier:
setRemovePadding:
setSampleBuffer:
setSessionProperties:
setSessionStartTime:
setShouldAppendEndOfStreamTimestamp:
setState:
setStreamId:
setStreamOutput:
setTimeList:
setTimeRange:
setTimestamps:
setTrack:
setTrackMetadata:forMetadataStream:
setTrackMetadata:forMetadataStream:error:
setTrackMetadata:forStream:
setTrackMetadata:forStream:error:
setTrackTypeInfo:
setTransferSessionUsageDisabled:
setTransform:
setValue:
setValue:forKey:
setVersion:
setVideoTransform:
setVideoTransformFromOrientation:
setWritingBufferCapacity:forAudioStream:
setWritingBufferCapacity:forMetadataStream:
setWritingBufferCapacity:forStream:
settings
setupAssetWriterStreamInputsWithError:
setupAssociatedMetadataInputsWithError:
setupEncoderWithWidth:andHeight:imageFormat:formatDescription:andFramerate:
setupMetadataInputsWithError:
sharedBytesPerPixelLookUp
sharedMetalPixelBufferUtility
sharedOptions
shouldAppendEndOfStreamTimestamp
shouldChangeBytesPerRowOfPixelBuffer:
shouldRemovePaddingOfPixelBuffer:metadata:
shouldStartTimestampsAtZero
skipFrameWithStatus:andFlags:
skipSourceHint
slimEncoderConfig
slimSettings:frameRate:
slimXEncoderConfig
sortedArrayUsingComparator:
splitBayerBuffer:intoWarholPixelBuffer:shiftBitsLeftBy:
splitBayerBuffer:intoYUVPixelBuffer:shiftBitsLeftBy:
splitCompandedBayerBuffer:intoCompandedWarholPixelBuffer:
standardDefaultValues
standardUserDefaults
startFinishingTimeoutTimer
startReading
startSessionAtSourceTime:
startWriting
state
status
stopWriterWhenFifosAreEmpty:
streamErrorWithMessage:code:
streamId
streamIdFromTrackStreamTypeIdentifier:
streamOutput
streamWriter:changedStatusTo:
streamWriter:codecTypeOverrideForStream:
streamWriter:configureSessionOverride:forStream:
streamWriter:encodedBuffer:pts:metadata:forStream:
streamWriter:inputForStream:changedIsReadyStatusTo:
streamWriter:mediaWrittenForStream:mediaType:
streamWriter:overrideVideoEncoderSpecificationForStream:
streamWriter:stream:preparedTrackInputs:mediaType:
streamWriter:writingSessionDidStartAtTime:stream:mediaType:
streamWriterDidFailWithError:
streamWriterDidFinishPreparing
streamWriterDidFinishRecording
streamWriterReachedFinishingTimeout:
stringByAppendingFormat:
stringByAppendingString:
stringByReplacingOccurrencesOfString:withString:
stringByTrimmingCharactersInSet:
stringWithFormat:
stringWithUTF8String:
superclass
supportedProfileLevelsForHEVC
timeAtIndex:
timeList
timeMapping
timeRange
timeRangeAtIndex:
timeRangeFrom:to:
timeRangeList
timeStamp
timeWithSeconds:
timeline
times
timestamps
timestampsForMetadataStream:
timestampsForStream:
totalSampleDataLength
track
trackMetadataForAudioStream:
trackMetadataForStream:
trackTypeInfo
trackTypeInfoForStream:
trackWithTrackID:
tracks
tracksWithMediaType:
transferSessionUsageDisabled
transform
transform:
transformAngleFromVideoOrientation:
transformForStream:
unsignedIntValue
unsignedIntegerValue
unsignedLongValue
useCustomEncoderConfig
useQPEncoding:
userInfo
value
value:withObjCType:
valueForKey:
valueWithBytes:objCType:
valueWithCGAffineTransform:
verifyExactBytesPerRow:width:height:pixelFormat:
versionZero
versionedKey:modifier:
verticallySplitPixelBuffer:intoTopPixelBuffer:bottomPixelBuffer:
waitUntilCompleted
willChangeValueForKey:
writeBuffer:ofSize:toFile:
writeBuffer:toFile:
writeMetadata:forStreamId:
writeSampleBuffer:andMetadata:forStreamId:
writeSampleBuffer:pts:metadata:withStatus:andFlags:
writeToFile:atomically:
writeToFile:error:
writeVideoFrameStreamAttachmentsData:toMetadataAdaptor:ofStream:
writerStatus
writerStatusChanged:writerDelegate:delegateCallbackQueue:
writerWarningWithMessage:code:
writingBufferCapacityForAudioStream:
writingBufferCapacityForMetadataStream:
writingBufferUsageForAudioStream:
writingBufferUsageForMetadataStream:
writingBufferUsageForStream:
writingSessionDidStartAtTime:streamId:mediaType:writerDelegate:delegateCallbackQueue:
zone
@24@0:8@16
@32@0:8@16q24
v40@0:8^@16@24q32
@40@0:8@16@24q32
d20@0:8i16
r^{opaqueCMFormatDescription=}24@0:8^{__CVBuffer=}16
Q16@0:8
B20@0:8i16
B24@0:8@16
Q36@0:8{?=ii}16d24i32
@64@0:8{CGAffineTransform=dddddd}16
{CGAffineTransform=dddddd}24@0:8@16
@72@0:8{CGAffineTransform=dddddd}16@64
@32@0:8Q16@24
@32@0:8d16@24
@16@0:8
@24@0:8Q16
@24@0:8d16
@20@0:8I16
@24@0:8q16
@44@0:8Q16B24q28^@36
@48@0:8Q16Q24q32^@40
@48@0:8Q16d24q32^@40
@40@0:8Q16q24^@32
B32@0:8^{opaqueCMSampleBuffer=}16^@24
@32@0:8@16@24
@24@0:8^{_NSZone=}16
@32@0:8@16^@24
q24@0:8@16
I16@0:8
v16@0:8
@"NSString"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
^{__CVBuffer=}40@0:8^{__CVBuffer=}16@24^@32
v20@0:8B16
v24@0:8@16
v20@0:8I16
^{__CVBuffer=}40@0:8^{__CVBuffer=}16@"NSDictionary"24^@32
Q24@0:8^{__CVBuffer=}16
B24@0:8^{__CVBuffer=}16
B32@0:8^{__CVBuffer=}16@24
^{__CVBuffer=}32@0:8^{__CVBuffer=}16^@24
^{__CVBuffer=}40@0:8@16^{__CVBuffer=}24^@32
@"MOVStreamFrameConverter"
B28@0:8I16@20
@36@0:8I16@20@28
B32@0:8@16^@24
@"NSDictionary"
v40@0:8{?=qiIq}16
{vector<CMTime, std::allocator<CMTime>>="__begin_"^{?}"__end_"^{?}"__end_cap_"{__compressed_pair<CMTime *, std::allocator<CMTime>>="__value_"^{?}}}
q16@0:8
B24@0:8@"<MOVStreamWriterStateContext>"16
@"<MOVStreamWriterState>"24@0:8@"<MOVStreamWriterStateContext>"16
@"<MOVStreamWriterState>"32@0:8@"NSError"16@"<MOVStreamWriterStateContext>"24
v24@0:8@"<MOVStreamWriterStateContext>"16
Q24@0:8Q16
@"MIOPixelBufferPool"
v64@0:8{?={?=qiIq}{?=qiIq}}16
{vector<CMTimeRange, std::allocator<CMTimeRange>>="__begin_"^{?}"__end_"^{?}"__end_cap_"{__compressed_pair<CMTimeRange *, std::allocator<CMTimeRange>>="__value_"^{?}}}
v40@0:8q16@24@32
v72@0:8{?=qiIq}16@40q48@56@64
^{opaqueCMSampleBuffer=}16@0:8
v24@0:8^{opaqueCMSampleBuffer=}16
^{opaqueCMSampleBuffer=}
@"AVTimedMetadataGroup"
v72@0:8@16^{opaqueCMSampleBuffer=}24@32{?=qiIq}40@64
v32@0:8@16@24
B40@0:8@16^{OpaqueVTCompressionSession=}24@32
I32@0:8@16@24
v72@0:8@"VideoEncoderInterface"16^{opaqueCMSampleBuffer=}24@"AVTimedMetadataGroup"32{?=qiIq}40@"NSString"64
v32@0:8@"VideoEncoderInterface"16@"NSString"24
@"NSDictionary"32@0:8@"VideoEncoderInterface"16@"NSString"24
B40@0:8@"VideoEncoderInterface"16^{OpaqueVTCompressionSession=}24@"NSString"32
I32@0:8@"VideoEncoderInterface"16@"NSString"24
v24@0:8@"NSArray"16
@"NSArray"16@0:8
@"NSError"16@0:8
v24@0:8@"NSError"16
v40@0:8@16r^{opaqueCMFormatDescription=}24@32
v40@0:8@"NSString"16r^{opaqueCMFormatDescription=}24@"NSDictionary"32
B32@0:8@16@24
B40@0:8@16@24@32
Q24@0:8@16
v24@0:8Q16
B32@0:8@"NSDictionary"16@"NSString"24
B40@0:8@"NSString"16@"NSString"24@"NSString"32
Q24@0:8@"NSString"16
@32@0:8@16d24
{?=qiIq}24@0:8d16
B24@0:8^{StreamRecordingData=^{opaqueCMFormatDescription}B@@@@@@Q@@@@@@@{?=qiIq}Q@q}16
v32@0:8Q16@24
B24@0:8d16
B64@0:8{CGAffineTransform=dddddd}16
B48@0:8@16@24@32^@40
B20@0:8B16
v32@0:8@16r^{opaqueCMFormatDescription=}24
v40@0:8@16@24^{opaqueCMFormatDescription=}32
v40@0:8@16@24@32
B40@0:8@16@24^@32
v48@0:8@16@24@32^v40
i44@0:8{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__long={?=b1b63}Q*}{__short={?=b1b7}[0c][23c]}{__raw=[3Q]})}}}16i40
B40@0:8{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__long={?=b1b63}Q*}{__short={?=b1b7}[0c][23c]}{__raw=[3Q]})}}}16
v56@0:8^{__CVBuffer=}16{?=qiIq}24@48
v40@0:8^{opaqueCMSampleBuffer=}16@24@32
v92@0:8^{opaqueCMSampleBuffer=}16@24{?=qiIq}32{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__long={?=b1b63}Q*}{__short={?=b1b7}[0c][23c]}{__raw=[3Q]})}}}56@80B88
v56@0:8@16{?=qiIq}24@48
v72@0:8@16{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__long={?=b1b63}Q*}{__short={?=b1b7}[0c][23c]}{__raw=[3Q]})}}}24{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__long={?=b1b63}Q*}{__short={?=b1b7}[0c][23c]}{__raw=[3Q]})}}}48
v32@0:8^{opaqueCMSampleBuffer=}16@24
d24@0:8@16
i24@0:8@16
v24@0:8^@16
v40@0:8@16^{opaqueCMFormatDescription=}24@32
v28@0:8B16@20
v32@0:8@16q24
{?=qiIq}16@0:8
d16@0:8
v24@0:8d16
i16@0:8
v20@0:8i16
@"NSObject<OS_dispatch_queue>"
@"NSURL"
@"AVAssetWriter"
{CGAffineTransform="a"d"b"d"c"d"d"d"tx"d"ty"d}
{map<std::string, (anonymous namespace)::StreamRecordingData, std::less<std::string>, std::allocator<std::pair<const std::string, (anonymous namespace)::StreamRecordingData>>>="__tree_"{__tree<std::__value_type<std::string, (anonymous namespace)::StreamRecordingData>, std::__map_value_compare<std::string, std::__value_type<std::string, (anonymous namespace)::StreamRecordingData>, std::less<std::string>, true>, std::allocator<std::__value_type<std::string, (anonymous namespace)::StreamRecordingData>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, (anonymous namespace)::StreamRecordingData>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, (anonymous namespace)::StreamRecordingData>, std::less<std::string>, true>>="__value_"Q}}}
{vector<std::string, std::allocator<std::string>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::string *, std::allocator<std::string>>="__value_"^v}}
{map<std::string, (anonymous namespace)::MetadataRecordingData, std::less<std::string>, std::allocator<std::pair<const std::string, (anonymous namespace)::MetadataRecordingData>>>="__tree_"{__tree<std::__value_type<std::string, (anonymous namespace)::MetadataRecordingData>, std::__map_value_compare<std::string, std::__value_type<std::string, (anonymous namespace)::MetadataRecordingData>, std::less<std::string>, true>, std::allocator<std::__value_type<std::string, (anonymous namespace)::MetadataRecordingData>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, (anonymous namespace)::MetadataRecordingData>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, (anonymous namespace)::MetadataRecordingData>, std::less<std::string>, true>>="__value_"Q}}}
{map<std::string, std::map<std::string, (anonymous namespace)::MetadataRecordingData>, std::less<std::string>, std::allocator<std::pair<const std::string, std::map<std::string, (anonymous namespace)::MetadataRecordingData>>>>="__tree_"{__tree<std::__value_type<std::string, std::map<std::string, (anonymous namespace)::MetadataRecordingData>>, std::__map_value_compare<std::string, std::__value_type<std::string, std::map<std::string, (anonymous namespace)::MetadataRecordingData>>, std::less<std::string>, true>, std::allocator<std::__value_type<std::string, std::map<std::string, (anonymous namespace)::MetadataRecordingData>>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, std::map<std::string, (anonymous namespace)::MetadataRecordingData>>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, std::map<std::string, (anonymous namespace)::MetadataRecordingData>>, std::less<std::string>, true>>="__value_"Q}}}
{map<std::string, CMTime, std::less<std::string>, std::allocator<std::pair<const std::string, CMTime>>>="__tree_"{__tree<std::__value_type<std::string, CMTime>, std::__map_value_compare<std::string, std::__value_type<std::string, CMTime>, std::less<std::string>, true>, std::allocator<std::__value_type<std::string, CMTime>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, CMTime>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, CMTime>, std::less<std::string>, true>>="__value_"Q}}}
@"<MOVStreamWriterState>"
@"NSError"
@"NSArray"
@"<MOVStreamCustomEncoderConfigDelegate>"
@"<MOVStreamWriterDelegate>"
{?="value"q"timescale"i"flags"I"epoch"q}
^{__CVBuffer=}48@0:8I16I20I24I28i32I36I40I44
^{__CVBuffer=}32@0:8I16I20i24I28
^{__CFDictionary=}36@0:8I16I20i24@28
^{__CFDictionary=}32@0:8I16I20i24I28
^{__CFDictionary=}40@0:8I16I20I24i28I32I36
^{__CVBuffer=}24@0:8^{__CVBuffer=}16
^{__CVBuffer=}32@0:8^{__CVBuffer=}16@24
B36@0:8^{__CVBuffer=}16^{__CVBuffer=}24i32
^{__CVPixelBufferPool=}32@0:8^{__CVBuffer=}16Q24
^{__CVBuffer=}32@0:8^{__CVBuffer=}16^{__CVPixelBufferPool=}24
^{__CVBuffer=}36@0:8^{__CVBuffer=}16^{__CVPixelBufferPool=}24B32
B32@0:8^{__CVBuffer=}16i24S28
B20@0:8I16
v40@0:8r*16Q24@32
B40@0:8^{__CVBuffer=}16^{__CVBuffer=}24i32B36
B32@0:8^{__CVBuffer=}16^{__CVBuffer=}24
B40@0:8^{__CVBuffer=}16^{__CVBuffer=}24^{__CVBuffer=}32
^{__CVPixelBufferPool=}52@0:8Q16Q24I32Q36Q44
^{__CVPixelBufferPool=}52@0:8Q16Q24I32@36Q44
^{__CVBuffer=}24@0:8^{__CVPixelBufferPool=}16
B40@0:8^{__CVBuffer=}16^{__CVBuffer=}24Q32
B32@0:8@16^{__CVBuffer=}24
B40@0:8@16^{__CVBuffer=}24Q32
@24@0:8^{__CVBuffer=}16
@32@0:8^{__CVBuffer=}16Q24
^{__CVBuffer=}36@0:8@16I24I28I32
^{__CVBuffer=}40@0:8^{__CFData=}16Q24Q32
B32@0:8^S16^{__CVBuffer=}24
B32@0:8^{__CVBuffer=}16^S24
q44@0:8Q16Q24Q32I40
q20@0:8I16
@32@0:8^{opaqueCMFormatDescription=}16@24
@44@0:8Q16Q24I32Q36
@44@0:8Q16Q24I32@36
^{OpaqueVTPixelTransferSession=}
@40@0:8^{__CVBuffer=}16d24@32
^{__CVBuffer=}16@0:8
^{__CVBuffer=}
^{__CVBuffer=}40@0:8^{__CVBuffer=}16^{StreamRecordingData=^{opaqueCMFormatDescription}B@@@@@@Q@@@@@@@{?=qiIq}Q@q}24^@32
r^{opaqueCMFormatDescription=}24@0:8^{StreamRecordingData=^{opaqueCMFormatDescription}B@@@@@@Q@@@@@@@{?=qiIq}Q@q}16
r^{opaqueCMFormatDescription=}32@0:8^{__CVBuffer=}16^{StreamRecordingData=^{opaqueCMFormatDescription}B@@@@@@Q@@@@@@@{?=qiIq}Q@q}24
I24@0:8^{StreamRecordingData=^{opaqueCMFormatDescription}B@@@@@@Q@@@@@@@{?=qiIq}Q@q}16
^{opaqueCMFormatDescription=}24@0:8^{opaqueCMFormatDescription=}16
Q20@0:8I16
B44@0:8@16Q24Q32I40
I24@0:8^{opaqueCMFormatDescription=}16
I36@0:8@16i24^@28
d24@0:8d16
@48@0:8@16I24I28@32@40
@32@0:8q16q24
^{OpaqueVTPixelRotationSession=}
@24@0:8r^v16
@64@0:8{?={?=qiIq}{?=qiIq}}16
B64@0:8{?={?=qiIq}{?=qiIq}}16
{?={?=qiIq}{?=qiIq}}16@0:8
{?={?=qiIq}{?=qiIq}}24@0:8Q16
q40@0:8{?=qiIq}16
@24@0:8I16B20
@36@0:8Q16Q24I32
@52@0:8Q16Q24I32Q36Q44
@52@0:8Q16Q24I32@36Q44
@48@0:8^{__CVBuffer=}16^{__CFDictionary=}24^{__CFDictionary=}32^@40
^{__CVPixelBufferPool=}16@0:8
v24@0:8^{__CVPixelBufferPool=}16
^{__CVPixelBufferPool=}
B48@0:8^{__CVBuffer=}16^{__CVBuffer=}24i32B36i40i44
@"<MTLDevice>"
@"<MTLCommandQueue>"
[5@"<MTLComputePipelineState>"]
@24@0:8^{opaqueCMSampleBuffer=}16
B32@0:8@16^v24
@60@0:8^{__CVBuffer=}16@24{?=qiIq}32i56
B48@0:8{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__long={?=b1b63}Q*}{__short={?=b1b7}[0c][23c]}{__raw=[3Q]})}}}16^v40
i52@0:8{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__long={?=b1b63}Q*}{__short={?=b1b7}[0c][23c]}{__raw=[3Q]})}}}16i40^v44
@32@0:8@16^v24
@40@0:8@16^v24^@32
r^{opaqueCMFormatDescription=}24@0:8@16
I32@0:8@16^v24
@80@0:8@16@24@32@40@48@56@64^@72
@72@0:8@16@24@32@40@48@56^@64
@80@0:8@"AVAssetTrack"16@"AVAssetReader"24@"NSArray"32@"Version"40@"NSString"48@"MOVStreamReader"56@"<MOVStreamReaderDelegate>"64^@72
@72@0:8@"AVAssetTrack"16@"AVAssetReader"24@"Version"32@"NSString"40@"MOVStreamReader"48@"<MOVStreamReaderDelegate>"56^@64
@24@0:8^@16
@"NSDictionary"24@0:8^@16
@"NSDictionary"16@0:8
@"<MOVStreamPostProcessor>"16@0:8
v24@0:8@"<MOVStreamPostProcessor>"16
@40@0:8n@16o^{?={?=qiIq}{?=qiIq}}24o^@32
@"NSArray"40@0:8n@"NSString"16o^{?={?=qiIq}{?=qiIq}}24o^@32
@"AVAssetTrack"16@0:8
^{opaqueCMSampleBuffer=}32@0:8o^{?=qiIq}16o^@24
^{opaqueCMSampleBuffer=}40@0:8o^@16o^{?=qiIq}24o^@32
^{__CVBuffer=}32@0:8o^{?=qiIq}16o^@24
^{__CVBuffer=}40@0:8o^@16o^{?=qiIq}24o^@32
{CGAffineTransform=dddddd}16@0:8
@32@0:8o^{?={?=qiIq}{?=qiIq}}16o^@24
@24@0:8o^@16
@"NSArray"32@0:8o^{?={?=qiIq}{?=qiIq}}16o^@24
@"AVTimedMetadataGroup"24@0:8o^@16
@32@0:8^{?=qiIq}16^{?=qiIq}24
i52@0:8@16@24@32I40@44
i40@0:8@16@24@32
v64@0:8{CGAffineTransform=dddddd}16
v24@0:8q16
@"<MOVStreamPostProcessor>"
@"AVAssetReaderTrackOutput"
@"AVAssetReaderOutputMetadataAdaptor"
@"NSData"
@"Version"
@"<MOVStreamReaderDelegate>"
@"MOVStreamReader"
@"AVAssetReader"
@"AVAssetTrack"
@40@0:8@16@24^@32
@32@0:8@16^{?={?=qiIq}{?=qiIq}}24
I24@0:8@16
@32@0:8@"NSURL"16^@24
@40@0:8@"NSURL"16@"<MOVStreamReaderDelegate>"24^@32
@"NSArray"24@0:8@"NSString"16
@"NSArray"32@0:8@"NSString"16^{?={?=qiIq}{?=qiIq}}24
I24@0:8@"NSString"16
B24@0:8^@16
@32@0:8n@16o^@24
^{opaqueCMSampleBuffer=}48@0:8n@16o^@24o^{?=qiIq}32o^@40
^{__CVBuffer=}48@0:8n@16o^@24o^{?=qiIq}32o^@40
@"<MOVStreamReaderVideoStreamOutput>"32@0:8n@"NSString"16o^@24
@"<MOVStreamReaderAudioStreamOutput>"32@0:8n@"NSString"16o^@24
@"<MOVStreamReaderSceneStreamOutput>"32@0:8n@"NSString"16o^@24
@"<MOVStreamReaderMetadataStreamOutput>"32@0:8n@"NSString"16o^@24
^{opaqueCMSampleBuffer=}48@0:8n@"NSString"16o^@24o^{?=qiIq}32o^@40
^{__CVBuffer=}48@0:8n@"NSString"16o^@24o^{?=qiIq}32o^@40
B48@0:8{?=qiIq}16^@40
{CGSize=dd}24@0:8@16
{?=qiIq}24@0:8@16
^{__CVBuffer=}40@0:8@16^{?=qiIq}24^@32
^{opaqueCMSampleBuffer=}40@0:8@16^{?=qiIq}24^@32
@48@0:8@16@24^{?={?=qiIq}{?=qiIq}}32^@40
@40@0:8@16^{?={?=qiIq}{?=qiIq}}24^@32
@"AVURLAsset"
@"NSMutableDictionary"
@"NSMutableArray"
{_NSRange=QQ}64@0:8{?=qiIq}16{?=qiIq}40
{?={?=qiIq}{?=qiIq}}32@0:8Q16Q24
{?=qiIq}24@0:8Q16
@"MOVStreamTimestamps"
@36@0:8^{StreamRecordingData=^{opaqueCMFormatDescription}B@@@@@@Q@@@@@@@{?=qiIq}Q@q}16d24B32
@24@0:8^{StreamRecordingData=^{opaqueCMFormatDescription}B@@@@@@Q@@@@@@@{?=qiIq}Q@q}16
q20@0:8i16
@68@0:8B16d20Q28B36q40d48{?=ii}56B64
@32@0:8^{StreamRecordingData=^{opaqueCMFormatDescription}B@@@@@@Q@@@@@@@{?=qiIq}Q@q}16d24
Q32@0:8^{StreamRecordingData=^{opaqueCMFormatDescription}B@@@@@@Q@@@@@@@{?=qiIq}Q@q}16d24
d24@0:8^{StreamRecordingData=^{opaqueCMFormatDescription}B@@@@@@Q@@@@@@@{?=qiIq}Q@q}16
i20@0:8i16
@28@0:8d16B24
@"MOVStreamEncoderConfig"
B24@0:8^{OpaqueVTCompressionSession=}16
@44@0:8d16@24@32B40
@40@0:8@16@24@32
v44@0:8i16i20i24^{opaqueCMFormatDescription=}28d36
v64@0:8^{__CVBuffer=}16{?=qiIq}24^{__CFDictionary=}48@56
v24@0:8i16I20
v64@0:8^{opaqueCMSampleBuffer=}16{?=qiIq}24@48i56I60
^{HEVCLosslessEncoder=B@iid^{OpaqueVTCompressionSession}{EncoderConfig=iiiidBBBBBi}{?=qiIq}IIIBB}
@"<VideoEncoderInterfaceDelegate>"
@28@0:8@16B24
@"SampleTimeList"
010L
800L
@(#)PROGRAM:MOVStreamIO  PROJECT:MOVStreamIO-1
A610L010L3.315.114ggr4ggb4rbg4brg
610L010L3.315.114ggr4ggb4rbg4brg
 58;>
010L010L010L010L010L010L010Lfvuy610L3.31
?ReU
dE\t/l7
com.apple.videoeng.streamerror
com.apple.videoeng.streamwarning
com.apple.videoeng.miopixelbufferpoolerror
com.apple.videoeng.streamwriterwarning
com.apple.videoeng.streamreaderwarning
com.apple.videoeng.streamreadererror
ErrorInfoStreamId
Unknown
StreamEncoderType
PixelFormat
ColorStreamBitrate
EncodingQuality
VideoTransform
HEVCQPValue
ExpectedFrameRateForStream
RawBayerRearrangeTypeKey
UseSlimXCompression
FrameMetadataFormat
OriginalTimestampWhenWrittenToFile
MarksOutputTrackAsEnabled
VideoTrackTypeInfo
PixelBufferExactBytesPerRow
CustomEncoderConfig
StreamConvertNonPlanarBuffersTo8bitMonochrome
EncodeAttachments
ProResEncodingQuality
com.apple.mio.tracktype.AlphaDataOnly
com.apple.mio.tracktype.NoVideoData
com.apple.mio.tracktype.IRData
com.apple.mio.tracktype.RasterOrientedVideoData
hvc1
hw.pagesize
hw.cachelinesize
Cannot retrieve available video encoder list, error %d
{CGAffineTransform=dddddd}
Embedded configuration must not be nil.
Unsupported bit depth (%zu).
Not supported setting: 8bit 422
+[MOVStreamIOUtility colorRecordingConfigBitDepth:lossless:chromaSampling:error:]
MOVStreamIOUtility.mm
decoding is set up for this sample buffer. Cannot tell whether it's a key frame or not
This sample buffer doesn't have any attachment. Cannot tell whether it's a key frame or not
mdta/com.apple.track_kind
mdta/com.apple.stream_sample_attachments
mdta/com.apple.metadata_stream_item
version
default_options
mdta/com.apple.framework.state.MOVStreamIO
mdta/com.apple.stream_sample_format
mdta/com.apple.stream_encoded_sample_format
mdta/com.apple.stream_related_to_stream
mdta/com.apple.stream_relation_specifier
mdta/com.apple.stream_type_info
mdta/com.apple.stream_sample_exact_bytes_per_row
mdta/com.apple.stream_sample_attachments_serialization_mode
mdta/com.apple.stream_raw_bayer_rearrange_type
metadata
CFBundleShortVersionString
%d.%d.%d%@
%d.%d.%d
%d.%d
Cannot compare with nil object.
Version: %@
Cannot copy version %@
mdta/com.apple.trackStreamType
mdta/com.apple.metadataTrackType
mdta/com.apple.MOVStreamIO.stateMetadataIdentifier
mdta/com.apple.MOVStreamIO.versionKey
mdta/com.apple.MOVStreamIO.defaultOptions
mdta/com.apple.trackStreamPixelFormat
mdta/com.apple.trackStreamEncodedPixelFormat
mdta/com.apple.trackStreamAttachmentsSerializationMode
mdta/com.apple.trackTypeInfo
mdta/com.apple.trackStreamRelatedToStream
mdta/com.apple.trackStreamRelationSpecifier
mdta/com.apple.exactBytesPerRow
mdta/com.apple.RawBayerRearrangeType
mdta/com.apple.rawSampleBufferAttachmentDict
mdta/com.apple.metadataDict
3.15.0
Cannot create pixel buffer pool for adjusting Bytes Per Row. (%@)
Cannot convert pixel buffer. (%@)
Invalid ExactBytesPerRow value type!
codecType
encoderSpecification
sessionProperties
Assert: (%d) %s - f: %s, l: %d
VTCompressionSessionCreate failed
/Library/Caches/com.apple.xbs/Sources/MOVStreamIO_Sim/MOVStreamIO/VTEncoder/MOVStreamEncoderConfig.mm
ProfileLevel
SupportedValueList
Cannot read config from file '%@'.
Cannot write to file %@.
 name=%@
<%@: %p%@ sampleCount=%@ samples=[%@
... and %@ more]>
vector
Finishing Queues
Cannot create pixel buffer pool for Non-Planar stream.
com.apple.movstreamio.framework
DEBUG_LOG
v8@?0
com.apple.movstreamio.defaultlog
MOVStreamIO
mdta/com.apple.rawIMUDict
mdta/com.apple.imuTrackType
AudioFormatObject
AdditionalAudioSettings
readyForMoreMediaData
Target path is an existing directory.
com.apple.streamwriter.writing
com.apple.streamwriter.encoding
init
Unknown stream id.
Stream is an audio stream, use [MOVStreamWriter setWritingBufferCapacity:forAudioStream:]
Stream is a video stream, use [MOVStreamWriter setWritingBufferCapacity:forStream:]
Stream is an audio stream, use [MOVStreamWriter writingBufferCapacityForAudioStream:]
Stream is not an audio stream, use [MOVStreamWriter writingBufferCapacityForStream:]
Stream is an audio stream, use [MOVStreamWriter writingBufferUsageForAudioStream:]
Stream is not an audio stream, use [MOVStreamWriter writingBufferUsageForStream:]
State Change: %@ - (%@) -> %@
status
Caller must provide a delegateCallbackQueue
Cannot find track for stream %@
Cannot add tracks while not idle
Cannot add two metadata tracks with the same name
Unable to find stream with identifier %@
recordingConfiguration cannot be null or empty
Format description cannot be null
Cannot add two tracks with the same stream name
Not matching kMIOPixelBufferExactBytesPerRow value %@.
No video track type info (MIOVideoTrackTypeInfo) specified for stream '%@'.
Encode attachment keys for stream '%@' are defined but empty.
Encode attachment keys for stream '%@' are not Strings.
Encode attachment keys for stream '%@' are not provided as an Array.
Invalid audio format
Incompatible item %@:%@.
Current state does not support prepareToRecord.
prepareToRecord
prepareQueue
executePrepareToRecord
-[MOVStreamWriter executePrepareToRecordWithMovieMetadata:]_block_invoke
MOVStreamWriter.mm
-[MOVStreamWriter addIsReadyObservers]
Cannot append to stream that hasn't been set up.
Cannot append: writer is not recording. Current writer state: %@
[VTEncoder] processing buffer for stream '%@' is full, dropping buffer (Pending:%lld Queue:%ld Fifo:%ld Capacity:%ld).
Mode for pixel buffer attachements for RawBayer pixel buffers is not set to PLIST! Default format is overriden by client (kMIOFrameAttachmentSerializationMode), this will be ignored for RawBayer.
appendPixelBuffer
Exception occurred during encoding %@ for stream '%@'. Dropping frame.
Sample buffer was appended with presentation timestamp (%f) less than (or equal to) previous sample buffer (%f) for stream '%@'. Dropping frame.
Sample buffer creation failed (error: %i) for stream '%@'. Dropping frame. Info: Used FD: %@  Buffer FD: %@
Sample Buffer cannot be nil.
Attachments cannot be nil.
Cannot append to a stream that hasn't been set up.
Pixel format not defined for stream '%@'.
Sample Buffer with invalid PTS for stream '%@'.
Cannot append sample buffer with encoder type not MIOStreamEncoderTypeNone.
[FIFO] FIFO buffer for stream '%s' is full, dropping older buffer.
Sample buffer encoding failed (encoder status: %i flags: %d) for stream '%@'. Dropping frame.
Missing customEncoderConfigDelegate '%@'. Cannot encode!
overrideVideoEncoderSpecificationForstreamId
configureSessionOverride
codecTypeOverrideForstreamId
Cannot append metadata when the track was never added. Call addMetadataTrack: before prepareToRecord.
Invalid time stamp is not supported for metadata for stream '%@'.
No metadata appended because it's empty
No metadata appended because the AVTimedMetadataGroup* is nil
FIFO buffer for metadata stream '%@' is full, dropping older buffer.
Cannot append associated metadata when the track was never added. Call addMetadataTrackAssociatedWith:forIdentifier: before prepareToRecord.
nullptr IMU metadata
asyncWriteAssociatedMetadata
[%s associated with %s] metadata input not ready for more data, dropping samples
Cannot append audioSample <null>.
Cannot append stream type that hasn't been set up.
Could not append audio sample because it is nil
Current writer state does not support finishRecording.
finishRecording
Cannot finishRecording.
finishAndDrainFifoFirst
-[MOVStreamWriter finishAndDrainFifoFirst]
com.apple.movstreamwriter.timeout
cancelRecording
forceFinishRecording
finishAVWriter
-[MOVStreamWriter finishAVWriter]_block_invoke
processCancelRecording
Late frames arrived from encoder. Drain fifos again...
processFinishRecording-checkIfFifoAreEmpty
q24@?0@8@16
processFinishRecording
checkForFinishing
-[MOVStreamWriter checkForFinishing]
writeSampleBuffer
Exception occurred during writing %@ for stream '%@'. Dropping frame.
writeMetadataOfSample
Exception occurred during writing %@ for stream '%@'. Dropping sample.
writeMetadata
-[MOVStreamWriter encoderTypeForStream:]
configuration
Error creating writer output setting for stream '%@' Error: %@.
Unsupported media type (%d) for stream '%@'.
Unable to use output settings (%@) for track '%@'.
Error creating AVAssetWriterInput (%@) for track '%@'.
Unable to get metadata format description for stream: %@
Can't add stream and metadata inputs to the asset writer to stream: %@
Can't add smetadata input to the asset writer to stream: %@
Cannot setup metadata associated with %@: %@ stream doesn't exist
mdta/%@
Unable to get metadata format
basic_string
Recording
%d_%zu
Cannot allocate reference buffer.
Invalid pixel buffer configuration.
875704438_1
1278226736_0
1735549492_0
1983131704_0
2019963440_1
2019963442_0
2016686640_0
875704438_0
825306677_0
1278226742_0
1919379252_0
875836518_1
2019963440_0
2016687156_1
875836518_0
825437747_0
2019963956_1
875836534_1
2016686642_1
1650943796_0
875836534_0
1111970369_0
1932996149_0
2016687156_0
1983066168_0
875704422_1
1278226488_0
2019963442_1
2019963956_0
2016686640_1
1734505012_0
2016686642_0
875704422_0
Cannot create pixel buffer transfer session
Cannot create pixel buffer pool
Cannot create new pixel buffer.
Cannot transfer pixel buffer
Cannot copy pixel buffer
Frame %f (%@)
CVBytesPerRow
%@.%@
%@[%d]
Unsupported data type, cannot serialize object %@.
Unsupported raw data format, cannot deserialize object.
BitsPerComponent
FullRangeVideo
Cannot find track (%d) in '%@'.
No format description for track (%d) in '%@'.
Cannot add output to track (%d) in '%@'.
Cannot read from track (%d) in '%@'.
Cannot get sample buffer from track (%d) in '%@': %@
No pixel buffer in track (%d) in '%@'.
No sample buffer in track (%d) in '%@'.
HEVC_Monochrome12_AutoLevel
HEVC_Monochrome10_AutoLevel
RawBayer
Cannot create pixel buffer rotation session (err: %d)
-[MOVStreamFrameTransform initWithRotation:flip:]
MOVStreamFrameTransform.m
Cannot set rotation property (err: %d).
Cannot set horizontal flip (err: %d).
Cannot set vertical flip (err: %d).
Cannot create pixel buffer pool.
Cannot rotate pixel buffer (err: %d).
Error joining Warhol-Buffer for RawBayer pixel buffer.
Cannot create pixel buffer pool for RawBayer stream.
Init
Finishing AVWriter
Minimum PixelBufferPool attributes not satistfied, missing key: 
Error creating underlying pixel buffer pool: %d
BufferPoolAllocationThreshold
splitBayerIntoWarhol
joinWarholIntoBayer
splitCompandedBayerIntoWarhol
joinCompandedWarholIntoBayer
-[MetalPixelBufferUtility processBayerBuffer:withWarholBuffer:shiftCount:msbReplication:operation:sampleSize:]
MetalPixelBufferUtility.m
(width % vectorsPerLine) == 0
commandBuffer != nil
computeEncoder != nil
Depth
Color
FrontDepth
FrontColor
FrontIR
Cancelled
mdta/custom.
RawBayerFormat
mdta/com.apple.stream_sample_exact_bytes_per_row_multiplanar
%@%@
Invalid value type for PixelBufferExactBytesPerRow.
Preparing Cancelling
Forcing Finish
Frame size too small
/Library/Caches/com.apple.xbs/Sources/MOVStreamIO_Sim/MOVStreamIO/VTEncoder/HEVCLosslessEncoder.mm
Cannot check AllowFrameReordering status of encoding session. Assuming disabled.
VTCompressionSessionEncodeFrame failed
kVTCompressionPropertyKey_Usage failed
HEVC_Main_AutoLevel
HEVC_Main10_AutoLevel
HEVC_Main444_AutoLevel
HEVC_Main44410_AutoLevel
HEVC_MainStill_AutoLevel
VTVideoEncoderSetProperty failed
kVTCompressionPropertyKey_Priority failed
VTVideoEncoderSetProperty kVTCompressionPropertyKey_MaxKeyFrameIntervalDuration failed
VTVideoEncoderSetProperty kVTCompressionPropertyKey_ExpectedFrameRate failed
EnableRCFW
VTVideoEncoderSetProperty my_kVTCompressionPropertyKey_EnableRCFW failed
EnableQPMod
VTVideoEncoderSetProperty my_kVTCompressionPropertyKey_EnableQPMod failed
InitialQPI
VTVideoEncoderSetProperty  my_kVTCompressionPropertyKey_InitialQPI failed
InitialQPP
VTVideoEncoderSetProperty my_kVTCompressionPropertyKey_InitialQPP failed
InitialQPB
VTVideoEncoderSetProperty my_kVTCompressionPropertyKey_InitialQPB failed
LossLess
VTVideoEncoderSetProperty my_kVTCompressionPropertyKey_LossLess failed
VTVideoEncoderSetProperty kVTCompressionPropertyKey_RealTime failed
VTVideoEncoderSetProperty kVTCompressionPropertyKey_MaximizePowerEfficiency failed
DebugMetadataSEI
VTVideoEncoderSetProperty my_kVTCompressionPropertyKey_DebugMetadataSEI2 failed
OutputBitDepth
VTVideoEncoderSetProperty my_kVTCompressionPropertyKey_OutputBitDepth failed
Cancelling
mdta/com.apple.trackStreamEncoding
DeviceMotion
RawGyro
RawAccel
slim
HEVCMonochrome
h264
HEVC
none
Can't add audio track (%@) to the AVAssetReader.
Can't add metadata track (%@) to the AVAssetReader.
Unknown IMU data type, ignoring: '%@'
Can't add output for scene track (%@) to the AVAssetReader.
Invalid ExactBytesPerRow value type for stream '%@': %@.
Decoder required for '%@' is not available.
PortTypeBack
Unknown stream type detected.
Undefined pixel format for stream '%@'. Ignoring stream.
Can't add video track (%@) to the AVAssetReader.
Cannot read sample buffer for '%@': %@
-[MOVStreamReaderStreamOutput nextSampleBufferForStreamAttachementsData:timestamp:error:]
MOVStreamReaderStreamOutput.mm
self.assetReader.error != nil
Metadata PLIST Read error: %@
Wrong attachments serialization mode (fallback to JSON).
Metadata JSON Read error: %@
 Unknown AttachmentSerializationMode = %d for frame metadata!
-[MOVStreamReaderStreamOutput grabNextMetadataItemsOfTrackAssociatedWithStreamWithIdentifier:timeRange:error:]
No AVAssetReaderOutputMetadataAdaptor found for metadata stream: '%@'
-[MOVStreamReaderStreamOutput grabNextTimedMetadataGroupOfStreamError:]
-[MOVStreamReaderStreamOutput grabNextMetadataOfStreamTimeRange:error:]
HEVCMonochrom
MetadataKeyTable
MetadataKeyValue
BackColorWide
BackColorTele
BackIR
BackDepth
Cannot create L008 pixel buffer pool for Non-Planar stream.
3.19.2
MIOBossMode
MIODisableFrameReordering
MIOBitrateMultiplier
MIOBitrateOverride
MIOForceColorLossless
MIOForce10bitMonoByVT
MIOForceLossless8bitMonoByVT
MIOSkipSourceHint
URL must be a file URL type. (%@)
File doesn't exist. (%@)
No MOVStreamReaderDelegate set.
Invalid file path. (%@)
MOVStreamReader asset is nil
Time to reset to is invalid
-video
-%lu
-audio
-scene
-metadata
Start Reading (AVAssetReader) Error: %@  Status: %ld
File doesn't contain stream '%@'.
No or invalid MOVStreamIO version information in MOV!
-[MOVStreamReader movVersionCheck]
MOVStreamReader.mm
versionError == nil
MOV created with a newer MOVStreamIO version '%@' (current '%@')!
v32@?0@"AVMetadataItem"8Q16^B24
Missing stream id.
File doesn't contain data for requested stream '%@'.
Stream '%@' is not a video stream.
Stream '%@' is not an audio stream.
Stream '%@' is not a scene stream.
Stream '%@' is not a metadata stream.
Missing stream id for copy next frame.
Cannot grab metadata. Missing metadata stream id.
Cannot grab metadata. Unknown metadata stream '%@'.
Error joining Warhol-Buffer for Companded-RawBayer pixel buffer.
<%@: %p%@ sampleCount=%@ samples=[%@... and %@ more]>
<%@: %p%@ sampleCount=%@ samples=[%@]>
{?=qiIq}
SlimXFormat
+[MOVStreamOutputSettings outputSettingsForStream:defaultFrameRate:enableAVEHighPerformanceProfile:]
MOVStreamOutputSettings.mm
Invalid encoder type.
AllowFrameReordering
HEVC_Main42210_AutoLevel
+[MOVStreamOutputSettings hevcColorSettingsLossless:quality:bitsPerSecond:bitDepth10:chromaSampling:frameRate:dimensions:enableAVEHighPerformanceProfile:]
HEVC_Main422_AutoLevel
ap4x
ProRes4444 only supports high and medium quality setting.
Quality
Failed
duration = %5.3f msec, min/max/avg/count = %5.3f/%5.3f/%5.3f/%d
com.apple.streamwriter.vtencoding
Encoder not configured yet.
Preparing
Finished
-[MOVStreamTimestamps sampleTimelineForAssetTrack:shouldStartTimestampsAtZero:]
MOVStreamTimestamps.m
CMTimeRangeEqual(sourceRange, timeMapping.source)
CMTimeRangeEqual(targetRange, timeMapping.target)
CMTIME_COMPARE_INLINE(pts, ==, pts0)
Draining FIFO
 ERROR [MIOPixelBufferPool]: %{public}@ 
 ERROR [MOVStreamIO]: %{public}@ 
 WARNING [MOVStreamIO]: %{public}@ 
ExactBytesPerRow count doesn't match pixel buffers plane count!
Invalid ExactBytesPerRow value type!
Cannot convert pixel buffer. (%{public}@)
%{public}@
 ERROR: Cannot read config from nil dictionary
 ERROR: Cannot read config from file '%{public}@'. 
 ERROR: %{public}@. 
MOVStreamWriter init with URL %{public}@
MOVStreamWriter dealloc
Configuration not supported.
Start prepareToRecordWithMovieMetadata
Init av writer...
MOVStreamWriter set movieFragmentInterval to %f
Writer setupAssetWriterStreamInputs
Writer setupMetadataInputs
Writer setupAssociatedMetadataInputs
Writer add MOV metadata
Writer startWriting
Writer register KVO
Writer transition status
 ERROR: 'addIsReadyObservers' called twice 
MOVStreamWriter appendPixelBuffer at '%5.3f' to stream '%{public}@'
MOVStreamWriter appendSampleBuffer at '%5.3f' to stream '%{public}@'
[FIFO] add to fifo '%{public}@' %ld
MOVStreamWriter metadata group at '%5.3f' to stream '%{public}@'
MOVStreamWriter metadata at '%5.3f' to stream '%{public}@'
Info: The metadata append triggered the start for the asset writer. Are you sure this is what you want?
 ERROR: appendTimedMetadataGroup exception: %{public}@ 
Close all VT encoders.
Wait for encoders...
All encoders closed.
Writing pending frame attachements for stream '%{public}@'.
FINISHING!
[FIFO] Precheck All Fifo items written '%{public}@'
 ERROR: [FIFO] CANNOT Write Item of metadata stream '%{public}@' for state %{public}@ 
Start Session by '%{public}@' at %f
 ERROR: [FIFO] CANNOT Write Item of stream '%{public}@' for state %{public}@ 
Will add AVAssetWriterInput for stream '%{public}@' with outputSettings: %{public}@ 
 sourceFormatHint: %{public}@
Setup metadata track with identifier "%{public}@"
Setup metadata track with legacy identifier "%{public}@"
BytesPerPixelLookUp: Register %zu for %@
Cannot allocate reference buffer.
Invalid pixel buffer configuration.
ERROR CREATING PIXELBUFFERREFCOPY %d
Inconsistent height.
Inconsistent bytes per row.
Inconsistent width.
Error creating pixel buffer from pool (%d).
Cannot copyPixelBuffer, not matching plane count
Cannot copyPixelBuffer, not matching bytes per row
Can't serialize object as JSON: %{public}@
Invalid ExactBytesPerRow value type: %{public}@
Unable to serialize MOVStream State metatdata as JSON: %{public}@
 ERROR: Do not call -[%{public}@ init].
Failed to create Metal Device.
Failed to find the default library. error: %{public}@
Failed to find the metal splitBayerIntoWarhol function.
Failed to find the metal joinWarholIntoBayer function.
Failed to find the metal splitCompandedBayerIntoWarhol function.
Failed to find the metal joinCompandedWarholIntoBayer function.
Failed to created pipeline state object, error %{public}@.
Failed to create the command queue.
Bayer Buffer width is not a multiple of 8
processBayerBuffer error recevied: %{public}@
Unable to serialize audio metatdata as PLIST: %{public}@
Error: The metadata dictionary is not valid for XML v1.0 plist Format
Error: Cannot serialize metadata to plist
Unable to serialize depth metatdata as JSON: %{public}@
Can't create metadata format description...
AllowFrameReordering: %d
Missing format discription for VTCompressionSession.
Custom video encoder configuration.
Encoder Config >> kVTCompressionPropertyKey_Usage = %d
Profile passed unrecognized (%d). exit.
Encoder Config >> kVTCompressionPropertyKey_ProfileLevel = %{public}@
Encoder Config >> kVTCompressionPropertyKey_Priority = %d
Encoder Config >> kVTCompressionPropertyKey_AllowFrameReordering = %d
Encoder Config >> kVTCompressionPropertyKey_MaxKeyFrameIntervalDuration = %f
Encoder Config >> kVTCompressionPropertyKey_ExpectedFrameRate = %f
Encoder Config >> my_kVTCompressionPropertyKey_LossLess = %d
Encoder Config >> kVTCompressionPropertyKey_RealTime = %d
Encoder Config >> kVTCompressionPropertyKey_MaximizePowerEfficiency = %d
Encoder Config >> my_kVTCompressionPropertyKey_DebugMetadataSEI2 = %d
Assert: (%d) %s - f: %s, l: %d
Encoder Config >> my_kVTCompressionPropertyKey_OutputBitDepth = %d
Assert: %s - f: %s, l: %d
*-----------------------------------------------------------------------------*
Detected %{public}@ stream
Found empty abandoned associated metadata track (Track id: %d), > ignoring.
Invalid 'kRawSampleBufferAttachmentsIdentifier': %@
Detected %{public}@ IMU data type
Detected scene %{public}@ stream
Got a Depth/IR stream which uses unknown version of SLIM (%d)
[WARNING] MOVStreamIO Debug Mode enabled. This could change the Framework behavior.
[WARNING] Default setting for '%{public}@' was changed from '%{public}@' to '%{public}@'. This can affect your recordings!
 ERROR: Cannot initialize reader: %{public}@ 
MOVStreamReader registerOutput with nil output.
MOVStreamReader registerOutput unknown media type (%ld).
 ERROR: %{public}@ 
MOVStreamReader: Setup video output for '%{public}@'.
MOVStreamReader: Register video output for '%{public}@'.
MOVStreamReader: Register video output for '%{public}@', failed.
MOVStreamReader: Setup audio output for '%{public}@'.
MOVStreamReader: Register audio output for '%{public}@'.
MOVStreamReader: Register audio output for '%{public}@', failed.
MOVStreamReader: Setup scene output for '%{public}@'.
MOVStreamReader: Register scene output for '%{public}@'.
MOVStreamReader: Register scene output for '%{public}@', failed.
MOVStreamReader: Setup metadata output for '%{public}@'.
MOVStreamReader: Register metadata output for '%{public}@'.
MOVStreamReader: Register metadata output for '%{public}@', failed.
MOVStreamIO state metadata is not in PLIST format. Fallback to JSON.
MOVStreamIO state metadata JSON error: %{public}@
 WARNING [MOVStreamReader]: %{public}@ 
 ERROR: Could not create %{public}@ with nil parameter
MOVStreamWriter: Disable 'AllowFrameReordering' related to r50244907.
No sample buffer received. VTCompressionSession failed with status: %d
%{public}@: Encoder closed.
 ERROR: Set '%{public}@' to '%{public}@' in encoder config (Err: %d). 
 ERROR: Could not create %{pubic}@ with nil parameter
MOVStreamIO
MOVStreamIOUtility
Version
NSCopying
DefaultPostProcessor
MOVStreamPostProcessor
NSObject
MOVStreamEncoderConfig
SampleTimeBuffer
MOVStreamWriterStateFinishQueues
MOVStreamWriterState
L008ToNonPlanarPostProcessor
MOVStreamPostProcessorSizeAdjusting
y416ToRawBayerPostProcessor
MIOLog
SampleTimeRangeBuffer
Delegate
SampleBufferAndMetadata
MOVStreamWriter
VideoEncoderInterfaceDelegate
MOVStreamWriterStateContext
MOVStreamWriterDeprecated
MOVStreamWriterDeprecationNominates
MOVStreamWriterStateRecording
PixelBufferUtility
PreProcessorFactory
MOVStreamFrameConverter
MOVStreamFrame
DefaultPreProcessor
MOVStreamPreProcessor
Private
PostProcessorFactory
MOVStreamFrameTransform
SampleTimeRangeList
L016Raw14PreProcessor
RawBayerFromYUVPostProcessor
RawBayerToy416PreProcessor
MOVStreamWriterStateInit
MOVStreamWriterStateFinishAVWriter
MIOPixelBufferPool
MetalPixelBufferUtility
Legacy
MOVStreamWriterStateCancelled
TrackMetadata
MOVStreamWriterStatePrepareCancelling
MOVStreamWriterStateForceFinish
MOVStreamWriterStateCancelling
MOVStreamReaderStreamOutput
MOVStreamReaderStreamOutputPrivate
MOVStreamReaderVideoStreamOutputPrivate
MOVStreamReaderVideoStreamOutput
MOVStreamReaderSampleStreamOutput
MOVStreamReaderBaseStreamOutput
MOVStreamReaderAudioStreamOutput
MOVStreamReaderMetadataStreamOutput
NonPlanarToL008Processor
MOVStreamOptions
MOVStreamReader
MOVStreamReaderDeprecationNominates
MOVStreamReaderDeprecated
MOVStreamReaderEnhancedAccess
CompandedRawBayerPostProcessor
SampleTimeList
MOVStreamOutputSettings
MOVStreamWriterStateFailed
RawBayerTo1stPlaneYUVPreProcessor
CompandedRawBayerPreProcessor
VideoEncoderInterface
EncoderConfigDelegate
L016Raw14PostProcessor
MOVStreamWriterStatePreparing
RawBayerPostProcessor
RawBayerPreProcessor
MOVStreamWriterStateFinished
MOVStreamTimestamps
MOVStreamWriterStateDrainFifo
RawBayerToYUVPreProcessor
T@"AVAssetTrack",W,V_assetTrack
.cxx_destruct
T@"NSArray",R,N
CGAffineTransformValueFromNSValue:
T#,R
_cached_cmtimes
T@"<MOVStreamPostProcessor>",&
_pipeLineStates
T@"<MOVStreamReaderDelegate>",W,V_delegate
_ranges
T@"<MOVStreamWriterState>",&,V_state
allKeys
T@"AVAssetReaderOutputMetadataAdaptor",&,V_attachmentsAdaptor
bitrateOverride
T@"AVAssetTrack",&,N,V_assetTrack
cancelRecording
T@"AVAssetTrack",W,V_track
cmtimes
T@"MOVStreamEncoderConfig",R,V_config
containsObject:
T@"MOVStreamReader",W,V_reader
context
T@"NSArray",&
dealloc
T@"NSArray",R,C,N,V_cached_ranges
enabled
T@"NSData",&,V_futureAttachmentsData
finishRecording
T@"NSDictionary",&,V_encoderSpecification
hevcColorSettingsLossless:quality:bitsPerSecond:bitDepth10:chromaSampling:frameRate:dimensions:enableAVEHighPerformanceProfile:
T@"NSDictionary",&,V_sessionProperties
initWithConfig:
T@"NSDictionary",R,V_settings
isEmpty
T@"NSError",R
isPixelFormatCompandedRawBayer:
T@"NSString",&,V_relatedStreamId
m_asset
T@"NSString",&,V_streamId
m_streamDataMap
T@"NSString",R
movVersionCheck
T@"NSString",R,V_modifier
nextFinishStep:
T@"Version",W,V_version
prepareToRecord
T@,&,VexactBytesPerRow
relatedStreamId
setAssetReader:
TB,N,V_l010OutputFormatRAW14L016
setCustomEncoderConfigDelegate:
TB,N,V_shouldAppendEndOfStreamTimestamp
stepInPresentationOrderByCount:
TB,R
streamWriterEncounteredAnError:
TB,V_customEncoderConfig
trackID
TB,V_isLegacyIMUTrack
valueWithRange:
TB,VlegacyKeysMode
writingBufferCapacityForStream:
.cxx_construct
T@"NSArray",&,VmovMetadataItems
AVEProfileLevel10BitMonochrome
T^{__CVBuffer=},R,V_pixelBuffer
JSONObjectWithData:options:error:
_bugfix
T@"<MOVStreamCustomEncoderConfigDelegate>",W,V_customEncoderConfigDelegate
_config
T@"<MOVStreamPostProcessor>",&,VpostProcessor
_poolAttributes
T@"<MOVStreamWriterDelegate>",W,V_delegate
_reader
T@"AVAssetReader",W,V_assetReader
alwaysCopiesSampleDataForStream
T@"AVAssetReaderTrackOutput",&,V_streamOutput
bundleForClass:
T@"AVAssetTrack",R,W
clampedQuality:
T@"AVTimedMetadataGroup",&,V_metadata
consumeMetadatOfMetadataStream:
T@"MOVStreamOptions",R
containsStream:
T@"MOVStreamTimestamps",&,N,V_timestamps
dataWithLength:
T@"NSArray",R,C,N,V_cached_cmtimes
enableAVEHighPerformanceProfile
T@"NSArray",R,C,N,V_cached_times
encoder:encodedSampleBuffer:metadata:presentationTime:streamId:
T@"NSDictionary",&,N,V_poolAttributes
getMetadataStreamsAssociatedTo:
T@"NSDictionary",&,V_metadataAdaptors
initWithAssetReaderTrackOutput:
T@"NSDictionary",R
inputPixelFormatFromStreamData:
T@"NSError",&
isPixelBufferCompandedRawBayer:
T@"NSObject<OS_os_log>",R
isProxy
T@"NSString",&,V_relationSpecifier
m_encodingQueue
T@"NSString",C,N,V_name
monochrome8bitHEVCEncoderConfig
T@"NSString",R,C
newCommandQueue
T@"SampleTimeList",&,N,V_timeList
pixelBufferPool
T@,&
registerOutput:
T@,R,V_context
release
TB,N,V_enabled
setAttachmentSerializationMode:
TB,N,V_rawBayerMSBReplication
setShouldStartTimestampsAtZero:
TB,N,V_shouldStartTimestampsAtZero
streamWriterDidCancelRecording:
TB,R,V_useCustomEncoderConfig
trackForStream:
TB,V_endOfStreamReached
trackMetadataForMetadataStream:
TB,V_transferSessionUsageDisabled
version
TB,VremovePadding
TI,N
TI,N,VoriginalPixelFormat
TI,R
TI,R,V_bugfix
TI,R,V_lastEncodingInfoFlags
TI,R,V_lastEncodingStatus
TI,R,V_major
TI,R,V_minor
TI,V_codecType
TI,V_determinedPixelFormat
TI,V_originalPixelFormat
TQ,R
TQ,R,N
TQ,V_trackTypeInfo
T^{__CVPixelBufferPool=},N,V_pixelBufferPool
T^{opaqueCMSampleBuffer=},V_sampleBuffer
Td,R
Td,R,V_expectedFrameRate
Td,R,V_timeStamp
Td,V_finishingTimeout
Ti,V_attachmentSerializationMode
Ti,V_baseMediaTimeScale
Tq,R
Tq,V_mediaType
Tq,V_pendigFrames
T{?=qiIq},R
T{?=qiIq},R,V_cmTimeStamp
T{?=qiIq},V_futureAttachementsDuration
T{?=qiIq},V_futureAttachementsPts
T{?=qiIq},V_movieFragmentInterval
T{?=qiIq},V_sessionStartTime
T{CGAffineTransform=dddddd},R
T{CGAffineTransform=dddddd},V_transform
URLAssetWithURL:options:
UTF8String
_assetReader
_assetTrack
_attachmentSerializationMode
_attachmentsAdaptor
_baseMediaTimeScale
_cached_ranges
_cached_times
_cmTimeStamp
_codecType
_context
_converter
_criticalError
_customEncoderConfig
_customEncoderConfigDelegate
_debugMode
_defaultAudioWritingBufferCapacity
_defaultMetadataWritingBufferCapacity
_defaultWritingBufferCapacity
_delegate
_determinedPixelFormat
_enabled
_encoderSpecification
_endOfStreamReached
_expectedFrameRate
_finishingTimeout
_frameDuration
_futureAttachementsDuration
_futureAttachementsPts
_futureAttachmentsData
_isLegacyIMUTrack
_l010OutputFormatRAW14L016
_lastEncodingInfoFlags
_lastEncodingStatus
_major
_mediaType
_metadata
_metadataAdaptors
_metadataStreams
_metalCommandQueue
_metalDevice
_minor
_modifier
_movVersion
_movieFragmentInterval
_name
_orderedAudioStreamIds
_orderedMetadataStreamIds
_orderedSceneStreamIds
_orderedVideoStreamIds
_originalPixelFormat
_pendigFrames
_pixelBuffer
_pixelBufferPool
_pool
_rawBayerMSBReplication
_relatedStreamId
_relationSpecifier
_rotation
_rotationSession
_sampleBuffer
_sampleStreams
_sessionProperties
_sessionStartTime
_settings
_shouldAppendEndOfStreamTimestamp
_shouldStartTimestampsAtZero
_state
_streamId
_streamOutput
_timeList
_timeStamp
_timeoutBlock
_timeoutQueue
_times
_timestamps
_track
_trackTypeInfo
_transferSession
_transferSessionUsageDisabled
_transform
_useCustomEncoderConfig
_version
activateNewState:byEvent:
activateWithContext:
addAudioTrackForStreamWithIdentifier:audioFormat:additionalSettings:
addEncodingQuality:toConfiguration:
addEntriesFromDictionary:
addInput:
addIsReadyObservers
addMetadataTrack:
addMetadataTrack:formatDescription:
addMetadataTrackAssociatedWith:withIdentifier:withFormatDescription:
addObject:
addObjectsFromArray:
addObserver:forKeyPath:options:context:
addOutput:
addTrackAssociationWithTrackOfInput:type:
addTrackForStreamWithIdentifier:formatDescription:encoderConfig:
addTrackForStreamWithIdentifier:formatDescription:recordingConfiguration:
addTrackTypeInfo:toConfiguration:
addTransform:toConfiguration:
adjustedWidthForWidth:
allValues
allVersionedKeysForKey:modifier:
allocWithZone:
appendAudioBuffer:forStream:
appendFormat:
appendMetadata:associatedWith:toStream:
appendMetadata:withTimeStamp:toStream:
appendPixelBuffer:presentationTime:toStreamId:
appendSampleBuffer:
appendSampleBuffer:attachments:streamId:
appendString:
appendTime:
appendTimeMetadataGroup:toStream:
appendTimeRange:
appendTimedMetadataGroup:
appendVideoSampleBuffer:attachmentMetadata:streamId:
appendVideoSampleBuffer:attachments:streamId:
applyBitrateModifiersTo:
applySessionProperties:
arrayWithCapacity:
arrayWithObject:
arrayWithObjects:
arrayWithObjects:count:
asset
assetReader
assetReaderTrackOutputWithTrack:outputSettings:
assetReaderWithAsset:error:
assetTrack
assetWriterInputMetadataAdaptorWithAssetWriterInput:
associatedTracksOfType:
asyncWriteAssociatedMetadata:metadataKey:associatedStreamKey:
attachmentSerializationMode
attachmentSerializationModeForStream:withDefaultMode:
attachmentSerializationModeForStream:withDefaultMode:fromMap:
attachmentsAdaptor
attachmentsDataForStreamPts:duration:
audioNoneEncoderConfig
audioSettings:
autorelease
baseMediaTimeScale
bitrateMultiplier
boolForKey:
boolValue
bugfix
bytes
bytesPerPixelForFormat:
cStringUsingEncoding:
cached_cmtimes
cached_ranges
cached_times
canAddInput:
canAddOutput:
canAppendData:
canApplyOutputSettings:forMediaType:
canConfigure:
canFinishRecording:
canWriteData:
cancelReading
cancelRecording:
cancelTimeoutBlock
cancelWriting
checkBossMode
checkForFinishing
checkHasValue:changedForKey:
checkIfFifoAreEmpty
chromaSamplingEncoding:
class
clearAllFifoQueues
clearCachedProperties
clearOutputs
closeEncoder
closeEncoderInDispatchGroup:
cmTimeStamp
code
codecType
codecTypeOverride
color8bitHEVCWithAlphaEncoderConfig
color8bitHEVCWithAlphaEncoderConfigWithBitrate:
colorH264EncoderConfig
colorH264EncoderConfigWithBitrate:
colorHEVCEncoderConfig
colorHEVCEncoderConfigWithBitrate:
colorHEVCEncoderConfigWithQuality:
colorHEVCLosslessEncoderConfig
colorRecordingConfigBitDepth:bitrate:chromaSampling:error:
colorRecordingConfigBitDepth:chromaSampling:error:
colorRecordingConfigBitDepth:lossless:chromaSampling:error:
colorRecordingConfigBitDepth:quality:chromaSampling:error:
colorWithAlphaLossless8bitHEVCEncoderConfig
commandBuffer
commit
compare:
compareToVersion:
componentsSeparatedByString:
computeCommandEncoder
concatPixelBuffer:withPixelBuffer:targetPixelBuffer:
config
configureSessionOverride:
conformsToProtocol:
consumeSamplesOfVideoAudioStream:
containsAudioStream:
containsMetadataStream:
containsTimeRange:
convertPixelBuffer:
copy
copyAlphaChannelOfBuffer:toMonochromeBuffer:
copyAlphaChannelOfBuffer:touint16Data:
copyData:toNonPlanarPixelBuffer:
copyData:toPlanarPixelBuffer:toPlane:
copyFromPixelBuffer:toPixelBuffer:andShiftBits:
copyMonochromeBuffer:toAlphaChannelOfBuffer:
copyNextFrameForStream:timestamp:error:
copyNextFrameForStreamTimestamp:error:
copyNextSampleBuffer
copyNonPlanarPixelBufferData:
copyPixelBuffer:toPixelBuffer:bytesPerPixel:
copyPixelBufferData:ofPlane:
copyWithZone:
copyuint16Data:toAlphaChannelOfBuffer:
count
countByEnumeratingWithState:objects:count:
create4444AYpCbCr16PixelBufferFillAlphaWithData:width:height:
createFormatDescriptionFromPixelBuffer:
createHEVCCompatiblePixelBuffer:
createL008FormatDescriptionFromCompandedRawBayerFormatDescription:
createL008FormatDescriptionFromNonPlanarFormatDescription:
createL010FormatDescriptionFromL016FormatDescription:
createL010FormatDescriptionFromRawBayerFormatDescription:
createMIOPixelBufferPoolWithWidth:height:pixelFormat:
createMIOPixelBufferPoolWithWidth:height:pixelFormat:exactBytesPerRow:minBufferCount:
createMIOPixelBufferPoolWithWidth:height:pixelFormat:exactBytesPerRows:minBufferCount:
createMIOPixelBufferPoolWithWidth:height:pixelFormat:extendedPixelsPerRow:minBufferCount:
createMIOPixelBufferPoolWithWidth:height:pixelFormat:minBufferCount:
createMetadataFormatDescription:
createNewL008MIOPixelBufferPoolWithReferencePixelBuffer:minBufferCount:
createNewL008PixelBufferPoolWithReferencePixelBuffer:minimumBufferCount:
createNewL010MIOPixelBufferPoolWithReferencePixelBuffer:minBufferCount:
createNewL010PixelBufferPoolWithReferencePixelBuffer:minimumBufferCount:
createPixelBufferAttributesWithWidth:height:extendedPixelsPerRow:pixelFormat:bytesPerRowAlignment:planeAlignment:
createPixelBufferAttributesWithWidth:height:pixelFormat:bytesPerRow:
createPixelBufferAttributesWithWidth:height:pixelFormat:bytesPerRows:
createPixelBufferPoolWithWidth:height:format:bytesPerRow:minBufferCount:
createPixelBufferPoolWithWidth:height:format:bytesPerRows:minBufferCount:
createPixelBufferPoolWithWidth:height:format:extendedPixelsPerRow:minBufferCount:
createRawPixelBufferWithWidth:height:extendedRows:extendedPixelsPerRow:pixelFormat:bytesPerRowAlignment:planeAlignment:bufferCacheMode:
createRawPixelBufferWithWidth:height:pixelFormat:bytesPerRow:
createRelatedToStreamMetadata:
createRelationSpecifierMetadata:
createTrackFormatDescriptionFromStreamData:
createxf20FormatDescriptionFromRawBayerFormatDescription:
criticalError
criticalErrorOccurred:context:
currentOptions
customEncoderConfig
customEncoderConfigDelegate
customEncoderConfigWithEmbeddedConfiguration:
customEncoderSettings:frameRate:enableAVEHighPerformanceProfile:
customMetadataTrackMetadataForStream:fromMap:
customTrackMetadata
customTrackMetadataForStream:fromMap:
dataWithContentsOfFile:
dataWithJSONObject:options:error:
dataWithPropertyList:format:options:error:
debugDescription
debugEnabled
decimalDigitCharacterSet
decodeAttachmentsData:error:
defaultAudioWritingBufferCapacity
defaultFactory
defaultLog
defaultManager
defaultMetadataWritingBufferCapacity
defaultWritingBufferCapacity
delegate
deleteFileOnCancel
deleteMOVFile
description
detectPixelFormatForAsset:videoTrackId:error:
determinedPixelFormat
dictionary
dictionaryRepresentation
dictionaryWithCapacity:
dictionaryWithObjects:forKeys:count:
didChangeValueForKey:
disableFrameReordering
dispatchThreadgroups:threadsPerThreadgroup:
domain
doubleValue
duration
encodeFrame:pst:frameProperties:metadata:
encodedPixelFormatFromStreamData:
encoder:codecTypeOverrideForstreamId:
encoder:configureSessionOverride:streamId:
encoder:encodingFailedForStream:
encoder:overrideVideoEncoderSpecificationForstreamId:
encoderIdsForType:
encoderSpecification
encoderTypeForStream:
endEncoding
endOfStream
endOfStreamReached
endTimeForAssetTrack:
enumerateObjectsUsingBlock:
error
errorByAddingStreamId:
errorWithDomain:code:userInfo:
exactBytesPerRow
exceptionWithName:reason:userInfo:
executePrepareToRecordWithMovieMetadata:
expectedFrameRate
exportAsynchronouslyWithCompletionHandler:
extendedPixelsPerRowOfPixelBuffer:
extendedPixelsRightForPlanarBufferWidth:height:bytesPerRow:format:
fifoBufferCapacity
fifoBufferSizeForStream:
fifoDropsEnabled:
fileExistsAtPath:
fileExistsAtPath:isDirectory:
fileURLWithPath:
fillPlaneOfPixelBuffer:planeIndex:withValue:
findAllAssociatedMetadataTrackInAsset:forTrack:
finishAVWriter
finishAndDrainFifoFirst
finishRecording:
finishWritingWithCompletionHandler:
finishedCancelRecording:
finishingTimeout
firstObject
force10bitMonoByVT
forceColorLossless
forceFinishRecording
forceFinishRecording:
forceLossless8bitMonoByVT
formatDescription
formatDescriptionForPixelBuffer:streamData:
formatDescriptions
formatForPixelBuffer:
frameDuration
frameRangeFrom:to:
frameReorderingEnabled
futureAttachementsDuration
futureAttachementsPts
futureAttachmentsData
generalHEVCColorSettings:frameRate:enableAVEHighPerformanceProfile:
getAllAudioStreams
getAllMetadataStreams
getAllSceneStreams
getAllStreams
getAllocationThreshold
getAssociatedMetadataStreams
getAudioMetadataForBuffer:
getBitsPerSecondForColorStream:frameRate:
getDefaultBitrateForVideoDimension:atExpectedFramerate:forEncoderType:
getExpectedFrameRateForStream:
getFrameRateForStream:
getJsonFriendlyCopy:
getKeyFromMetadataTrack:
getLegacyTrackEncodedPixelFormatMetadataForStream:fromMap:
getLegacyTrackInputPixelFormatMetadataForStream:fromMap:
getLegacyTrackMetadataForAttachmentsSerializationMode:fromMap:
getLegacyTrackMetadataForStream:
getMOVStreamIOMetadataItem
getMaximumBufferAge
getMetadataGroupForBuffer:stream:presentationTime:serializationMode:
getMetadataStreamsAssociatedTo:error:
getMinFrameDurationForStream:
getMinimumBufferCount
getOutputPixelFormatForStream
getOutputPixelFormatForStream:
getOutputSizeForStream:
getPixelBuffer
getPixelFormatForStream:fromMap:
getPixelFormatFromStreamData:
getPlistFriendlyCopyOf:
getPreferredBytesPerRowAlignmentSize
getPreferredPlaneAlignmentSize
getQualitySetting:
getRelatedStreamForStreamId:
getRelationSpecifierForStreamId:
getSizeForStream:
getStreamsRelatedToStream:
getTrackEncodedPixelFormatMetadataForStream:fromMap:
getTrackInputPixelFormatMetadataForStream:fromMap:
getTrackMetadataForAttachmentsSerializationMode:fromMap:
getTrackMetadataForExactBytesPerRow:fromMap:error:
getTrackMetadataForRawBayerRearrangeType:fromMap:
getTrackMetadataForStream:
getTrackMetadataForTrackTypeInfo:fromMap:
getUnknownMetadataStreamsAssociatedTo:
getValue:
getVersionAsString
getVideoTransformForStream:
grabNextAudioSampleForStream:timestamp:error:
grabNextAudioSampleForStreamTimestamp:error:
grabNextMetadataItemsOfTrackAssociatedWith:withIdentifier:timeRange:error:
grabNextMetadataItemsOfTrackAssociatedWithStreamWithIdentifier:timeRange:error:
grabNextMetadataOfStream:timeRange:
grabNextMetadataOfStream:timeRange:error:
grabNextMetadataOfStreamTimeRange:error:
grabNextSampleBufferForStream:timestamp:error:
grabNextSampleBufferForStreamTimestamp:error:
grabNextTimedMetadataGroupOfStream:error:
grabNextTimedMetadataGroupOfStreamError:
guessYCbCrPixelFormatFromFormatDescription:
h264Settings:frameRate:enableAVEHighPerformanceProfile:
hasFinishedReading
hasReachedEndOfMetadataStream:
hasReachedEndOfStream:
hash
hevc10bitMonochromeLosslessSettings:frameRate:enableAVEHighPerformanceProfile:
hevc10bitMonochromeSettings:frameRate:enableAVEHighPerformanceProfile:
hevc8bitMonochromeLosslessSettings:frameRate:enableAVEHighPerformanceProfile:
hevc8bitMonochromeSettings:frameRate:enableAVEHighPerformanceProfile:
hevc8bitWithAlphaLosslessSettings:frameRate:enableAVEHighPerformanceProfile:
hevc8bitWithAlphaSettings:frameRate:enableAVEHighPerformanceProfile:
hevcColorLosslessSettings:frameRate:enableAVEHighPerformanceProfile:
hevcColorSettings:frameRate:enableAVEHighPerformanceProfile:
histogramOf8BitBuffer:
identifier
indexOfTimeRangeAtTime:
informDelegateAboutError:
informDelegateAboutFinishingTimeout
informDelegateAboutIsReady:forStream:
informDelegateAboutMediaWrittenForStream:mediaType:
init
initForStream:configuration:delegate:
initWithAsset:error:
initWithAsset:presetName:
initWithAssetTrack:
initWithAudioTrack:assetReader:associatedMetadataTracks:version:unknownStreamId:reader:delegate:error:
initWithCapacity:
initWithCodecType:encoderSpecification:sessionProperties:
initWithContentsOfFile:delegate:error:
initWithContentsOfFile:error:
initWithContentsOfURL:delegate:error:
initWithData:encoding:
initWithDictionary:
initWithExpectedFrameRate:forStream:delegate:enableAVEHighPerformanceProfile:
initWithFrameRate:
initWithFrameRate:useCustomEncoderConfig:
initWithItems:timeRange:
initWithMediaType:outputSettings:sourceFormatHint:
initWithMetadataTrack:assetReader:version:unknownStreamId:reader:delegate:error:
initWithOriginalPixelFormat:
initWithOriginalPixelFormat:l010OutputFormatRAW14L016:
initWithOriginalPixelFormat:rawBayerMSBReplication:
initWithPixelBuffer:bufferAttributes:poolAttributes:error:
initWithPixelBuffer:timeStamp:context:
initWithRotation:flip:
initWithSceneTrack:assetReader:associatedMetadataTracks:version:unknownStreamId:reader:delegate:error:
initWithSettings:
initWithSuiteName:
initWithTargetWidth:height:format:bytesPerRow:
initWithTargetWidth:height:format:bytesPerRows:
initWithTargetWidth:height:format:extendedPixelsPerRow:
initWithTimeRange:
initWithTimeRanges:
initWithTimes:
initWithTimestamps:
initWithTrack:outputSettings:
initWithURL:andExpectedFrameRate:
initWithURL:delegate:error:
initWithURL:error:
initWithURL:fileType:error:
initWithURL:options:error:
initWithVersionString:error:
initWithVideoTrack:assetReader:associatedMetadataTracks:version:unknownStreamId:reader:delegate:error:
intValue
integerValue
internalErrorWithMessage:code:
internalWarningWithMessage:code:
invertedSet
isAllDigitsInString:
isAudioStream:
isBitDepth10Encoding:
isCustomTrackMetadataCompatibleObject:
isEncoderAvailableForEncoderType:
isEncoderAvailableOfType:withId:
isEncoderAvailableWithEncoderName:
isEqual:
isEqualToString:
isEqualToVersion:
isFileURL
isKeyFrame:error:
isKindOfClass:
isLegacyIMUTrack
isLosslessColorEncoding:
isMemberOfClass:
isOperatingSystemAtLeastVersion:
isPixelBufferRawBayer:
isPixelFormatRawBayer:
isReadyForMoreDataForStreamId:fromMap:
isReadyForMoreMediaData
isTrack:byIdInTracks:
isValidJSONObject:
isValidJSONObject:path:
items
joinCompandedWarholBuffer:intoCompandedBayerBuffer:
joinWarholBuffer:intoBayerBuffer:shiftBitsRightBy:msbReplication:
joinYUVBuffer:intoRawBayerPixelBuffer:shiftBitsLeftBy:msbReplication:
jsonFriendlyCopy:
l010OutputFormatRAW14L016
lastEncodingInfoFlags
lastEncodingStatus
lastObject
legacyKeysMode
length
lengthOfBytesUsingEncoding:
localDefaults
localizedDescription
longValue
m_assetReader
m_assetWriter
m_associatedMetadataDataMap
m_config
m_delegate
m_delegateCallbackQueue
m_enableAVEHighPerformanceProfile
m_encoder
m_encoderInitialized
m_expectedFrameRate
m_firstFrameReceived
m_haveStartedSession
m_lastPtsForStream
m_metadataDataMap
m_observingIsReady
m_orderedMetadataStreamNames
m_orderedStreamNames
m_processingQueue
m_qpValue
m_realtime
m_stream
m_videoTransform
m_writeURL
m_writingQueue
major
makeSampleCursorAtFirstSampleInDecodeOrder
markAsFinished
marksOutputTracksAsEnabledForStream:
marksOutputTracksAsEnabledForStream:fromMap:
matchDeprecatedType:
maxTotalThreadsPerThreadgroup
mediaType
metadata
metadataAdaptors
metadataForMovie
metadataItem
metadataTrackForStream:
minFrameDuration
minimumBytesPerRowForPixelBuffer:
minor
mioPixelBufferPoolErrorWithMessage:code:
modifier
monochrome10BitEncoderConfigUsingAVEWithBitrate:
monochrome10BitEncoderConfigUsingAVEWithQuality:
monochrome10bitHEVCEncoderConfig
monochrome10bitHEVCEncoderConfigWithBitrate:
monochrome10bitHEVCEncoderConfigWithQuality:
monochrome10bitHEVCLosslessEncoderConfig
monochrome8bitHEVCEncoderConfigWithBitrate:
monochrome8bitHEVCEncoderConfigWithQuality:
monochrome8bitHEVCLosslessEncoderConfig
movMetadataItems
movStreamIOErrorWithDomain:message:code:
movStreamIOWarningWithDomain:message:code:
movieFragmentInterval
movstreamIOMetadataForMovie
mutableBytes
mutableCopy
name
naturalSize
newBufferWithBytesNoCopy:length:options:deallocator:
newComputePipelineStateWithFunction:error:
newDefaultLibraryWithBundle:error:
newFunctionWithName:
newPixelBufferRefCopy:
newPixelBufferRefCopy:attachmentKeysToCopy:
newRawBayerBufferFromYUVPixelBuffer:withPixelBufferPool:msbReplication:
newSampleReady:metadata:presentationTime:streamKey:streamId:isAudioSample:
newWarholBufferFromCompandedRawBayerPixelBuffer:withPixelBufferPool:
newWarholBufferFromRawBayerPixelBuffer:
newWarholBufferFromRawBayerPixelBuffer:withPixelBufferPool:
newYUVBufferFromRawBayerPixelBuffer:withPixelBufferPool:
nextAttachmentForStream:error:
nextAttachmentWithError:
nextPixelBufferForStream:attachementsData:timestamp:error:
nextPixelBufferForStreamAttachementsData:timestamp:error:
nextSampleBufferForStream:attachementsData:timestamp:error:
nextSampleBufferForStreamAttachementsData:timestamp:error:
nextTimedMetadataGroup
nominalFrameRate
noneEncoderConfig
numberOfPlanesForPixelFormatType:
numberWithDouble:
numberWithInt:
numberWithInteger:
numberWithUnsignedInt:
numberWithUnsignedLong:
objectAtIndex:
objectAtIndexedSubscript:
objectForInfoDictionaryKey:
objectForKey:
objectForKeyedSubscript:
observeValueForKeyPath:ofObject:change:context:
originalPixelFormat
outputForAudioStream:error:
outputForMetadataStream:error:
outputForSceneStream:error:
outputForVideoStream:error:
outputSettings
outputSettingsForStream:defaultFrameRate:enableAVEHighPerformanceProfile:
overrideVideoEncoderSpecification
path
pendigFrames
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
pixelBuffer
pixelBufferFromPool:
pixelBufferSizeWithPadding:
pixelBufferWithExactBytesPerRow:fromPixelBuffer:error:
pixelBufferWithoutPaddingFromPixelBuffer:error:
pixelFormatForStream
pixelFormatForStream:
pixelFormatForUnknownTrackOfReader:
playbackPixelFormatForTrack:ofStream:delegate:
playbackPixelFormatForTrack:ofStream:streamEncodingType:inputPixelFormat:delegate:
plistDeserializedObject:error:
plistFriendlyCopyOf:
plistSerializedObject:error:
poolAttributes
populateReaderError:message:code:
populateStreamError:message:code:
postProcessor
postProcessorFromReader:originalPixelFormat:encodedFormat:encoderType:streamId:
pre3_15_0_Mapping
preProcessorForFormat:recordingConfiguration:
preferredTransform
prepareFinished:
prepareRecording:
prepareToRecordWithMovieMetadata:
presentationTimeStamp
proRes422EncoderConfig
proRes422EncoderConfigWithQuality:
proRes4444EncoderConfig
proRes4444EncoderConfigWithHighQuality
processBayerBuffer:withWarholBuffer:shiftCount:msbReplication:operation:sampleSize:
processCancelRecording
processFinishRecording
processForceFinishRecording
processFrame:pst:frameProperties:metadata:
processInfo
processedPixelBufferCopyOf:streamData:error:
processedPixelBufferFrom:metadata:error:
processedPixelFormat
propertyList:isValidForFormat:
propertyListWithData:options:format:error:
prores422Settings:frameRate:
prores4444Settings:frameRate:
queueMetadataGroup:stream:
rangeOfCharacterFromSet:
rangeOfString:
rangesOf8BitBuffer:
rawBayerMSBReplication
readFrameFromFile:width:height:pixelFormat:
reader
reader:alwaysCopiesSampleDataForStream:
reader:bytesPerRowForStream:storedValue:
reader:didReceiveWarning:
reader:overrideBytesPerRowForStream:storedValue:customTrackMetadata:originalPixelFormat:encodedPixelFormat:
reader:pixelFormatForStream:suggestedFormat:
readerErrorWithMessage:code:
readerWarningWithMessage:code:
recheckDebugEnabled
registerDefaults:
registerStandardDefaults
relateStream:toStream:relationSpecifier:
relateStream:toStream:relationSpecifier:error:
relationSpecifier
removeAllObjects
removeIsReadyObservers
removeItemAtPath:error:
removeItemAtURL:error:
removeObjectAtIndex:
removeObserver:forKeyPath:
removePadding
removePixelBufferPadding:
removePixelBufferPadding:forStream:
removeTrack:
replaceObjectAtIndex:withObject:
resetReader:
resetReaderTo:error:
resetTimeoutRefTime
respondsToSelector:
resubmitTimeoutBlock
retain
retainCount
sampleBuffer
sampleBufferConfigWithPixelFormat:
sampleTimelineForAssetTrack:
sampleTimelineForAssetTrack:shouldStartTimestampsAtZero:
saveStream:toFile:error:
segments
self
sessionProperties
sessionStartTime
setAlwaysCopiesSampleData:
setAssetTrack:
setAttachmentsAdaptor:
setBaseMediaTimeScale:
setBuffer:offset:atIndex:
setBytes:length:atIndex:
setCodecType:
setComputePipelineState:
setCriticalError:
setCustomEncoderConfig:
setDataType:
setDefaultAudioWritingBufferCapacity:
setDefaultMetadataWritingBufferCapacity:
setDefaultWritingBufferCapacity:
setDelegate:
setDelegate:callbackQueue:
setDeterminedPixelFormat:
setEnabled:
setEncoderSpecification:
setEndOfStreamReached:
setExactBytesPerRow:
setExpectedFrameRate:
setExpectsMediaDataInRealTime:
setExtraAttributes:
setFifoBufferCapacity:
setFinishingTimeout:
setFutureAttachementsDuration:
setFutureAttachementsPts:
setFutureAttachmentsData:
setIdentifier:
setIsLegacyIMUTrack:
setL010OutputFormatRAW14L016:
setLegacyKeysMode:
setMarksOutputTrackAsEnabled:
setMediaTimeScale:
setMediaType:
setMetadata:
setMetadataAdaptors:
setMovMetadataItems:
setMovieFragmentInterval:
setName:
setObject:forKey:
setOriginalPixelFormat:
setOutputFileType:
setOutputURL:
setPendigFrames:
setPixelBufferPool:
setPoolAttributes:
setPostProcessor:
setRawBayerMSBReplication:
setReader:
setRealTimeCapture:
setRelatedStreamId:
setRelationSpecifier:
setRemovePadding:
setSampleBuffer:
setSessionProperties:
setSessionStartTime:
setShouldAppendEndOfStreamTimestamp:
setState:
setStreamId:
setStreamOutput:
setTimeList:
setTimeRange:
setTimestamps:
setTrack:
setTrackMetadata:forMetadataStream:
setTrackMetadata:forMetadataStream:error:
setTrackMetadata:forStream:
setTrackMetadata:forStream:error:
setTrackTypeInfo:
setTransferSessionUsageDisabled:
setTransform:
setValue:
setValue:forKey:
setVersion:
setVideoTransform:
setVideoTransformFromOrientation:
setWritingBufferCapacity:forAudioStream:
setWritingBufferCapacity:forMetadataStream:
setWritingBufferCapacity:forStream:
settings
setupAssetWriterStreamInputsWithError:
setupAssociatedMetadataInputsWithError:
setupEncoderWithWidth:andHeight:imageFormat:formatDescription:andFramerate:
setupMetadataInputsWithError:
sharedBytesPerPixelLookUp
sharedMetalPixelBufferUtility
sharedOptions
shouldAppendEndOfStreamTimestamp
shouldChangeBytesPerRowOfPixelBuffer:
shouldRemovePaddingOfPixelBuffer:metadata:
shouldStartTimestampsAtZero
skipFrameWithStatus:andFlags:
skipSourceHint
slimEncoderConfig
slimSettings:frameRate:
slimXEncoderConfig
sortedArrayUsingComparator:
splitBayerBuffer:intoWarholPixelBuffer:shiftBitsLeftBy:
splitBayerBuffer:intoYUVPixelBuffer:shiftBitsLeftBy:
splitCompandedBayerBuffer:intoCompandedWarholPixelBuffer:
standardDefaultValues
standardUserDefaults
startFinishingTimeoutTimer
startReading
startSessionAtSourceTime:
startWriting
state
status
stopWriterWhenFifosAreEmpty:
streamErrorWithMessage:code:
streamId
streamIdFromTrackStreamTypeIdentifier:
streamOutput
streamWriter:changedStatusTo:
streamWriter:codecTypeOverrideForStream:
streamWriter:configureSessionOverride:forStream:
streamWriter:encodedBuffer:pts:metadata:forStream:
streamWriter:inputForStream:changedIsReadyStatusTo:
streamWriter:mediaWrittenForStream:mediaType:
streamWriter:overrideVideoEncoderSpecificationForStream:
streamWriter:stream:preparedTrackInputs:mediaType:
streamWriter:writingSessionDidStartAtTime:stream:mediaType:
streamWriterDidFailWithError:
streamWriterDidFinishPreparing
streamWriterDidFinishRecording
streamWriterReachedFinishingTimeout:
stringByAppendingFormat:
stringByAppendingString:
stringByReplacingOccurrencesOfString:withString:
stringByTrimmingCharactersInSet:
stringWithFormat:
stringWithUTF8String:
superclass
supportedProfileLevelsForHEVC
timeAtIndex:
timeList
timeMapping
timeRange
timeRangeAtIndex:
timeRangeFrom:to:
timeRangeList
timeStamp
timeWithSeconds:
timeline
times
timestamps
timestampsForMetadataStream:
timestampsForStream:
totalSampleDataLength
track
trackMetadataForAudioStream:
trackMetadataForStream:
trackTypeInfo
trackTypeInfoForStream:
trackWithTrackID:
tracks
tracksWithMediaType:
transferSessionUsageDisabled
transform
transform:
transformAngleFromVideoOrientation:
transformForStream:
unsignedIntValue
unsignedIntegerValue
unsignedLongValue
useCustomEncoderConfig
useQPEncoding:
userInfo
value
value:withObjCType:
valueForKey:
valueWithBytes:objCType:
valueWithCGAffineTransform:
verifyExactBytesPerRow:width:height:pixelFormat:
versionZero
versionedKey:modifier:
verticallySplitPixelBuffer:intoTopPixelBuffer:bottomPixelBuffer:
waitUntilCompleted
willChangeValueForKey:
writeBuffer:ofSize:toFile:
writeBuffer:toFile:
writeMetadata:forStreamId:
writeSampleBuffer:andMetadata:forStreamId:
writeSampleBuffer:pts:metadata:withStatus:andFlags:
writeToFile:atomically:
writeToFile:error:
writeVideoFrameStreamAttachmentsData:toMetadataAdaptor:ofStream:
writerStatus
writerStatusChanged:writerDelegate:delegateCallbackQueue:
writerWarningWithMessage:code:
writingBufferCapacityForAudioStream:
writingBufferCapacityForMetadataStream:
writingBufferUsageForAudioStream:
writingBufferUsageForMetadataStream:
writingBufferUsageForStream:
writingSessionDidStartAtTime:streamId:mediaType:writerDelegate:delegateCallbackQueue:
zone
@24@0:8@16
@32@0:8@16q24
v40@0:8^@16@24q32
@40@0:8@16@24q32
d20@0:8i16
r^{opaqueCMFormatDescription=}24@0:8^{__CVBuffer=}16
Q16@0:8
B20@0:8i16
B24@0:8@16
Q36@0:8{?=ii}16d24i32
@64@0:8{CGAffineTransform=dddddd}16
{CGAffineTransform=dddddd}24@0:8@16
@72@0:8{CGAffineTransform=dddddd}16@64
@32@0:8Q16@24
@32@0:8d16@24
@16@0:8
@24@0:8Q16
@24@0:8d16
@20@0:8I16
@24@0:8q16
@44@0:8Q16B24q28^@36
@48@0:8Q16Q24q32^@40
@48@0:8Q16d24q32^@40
@40@0:8Q16q24^@32
B32@0:8^{opaqueCMSampleBuffer=}16^@24
@32@0:8@16@24
@24@0:8^{_NSZone=}16
@32@0:8@16^@24
q24@0:8@16
I16@0:8
v16@0:8
@"NSString"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
^{__CVBuffer=}40@0:8^{__CVBuffer=}16@24^@32
v20@0:8B16
v24@0:8@16
v20@0:8I16
^{__CVBuffer=}40@0:8^{__CVBuffer=}16@"NSDictionary"24^@32
Q24@0:8^{__CVBuffer=}16
B24@0:8^{__CVBuffer=}16
B32@0:8^{__CVBuffer=}16@24
^{__CVBuffer=}32@0:8^{__CVBuffer=}16^@24
^{__CVBuffer=}40@0:8@16^{__CVBuffer=}24^@32
@"MOVStreamFrameConverter"
B28@0:8I16@20
@36@0:8I16@20@28
B32@0:8@16^@24
@"NSDictionary"
v40@0:8{?=qiIq}16
{vector<CMTime, std::allocator<CMTime>>="__begin_"^{?}"__end_"^{?}"__end_cap_"{__compressed_pair<CMTime *, std::allocator<CMTime>>="__value_"^{?}}}
q16@0:8
B24@0:8@"<MOVStreamWriterStateContext>"16
@"<MOVStreamWriterState>"24@0:8@"<MOVStreamWriterStateContext>"16
@"<MOVStreamWriterState>"32@0:8@"NSError"16@"<MOVStreamWriterStateContext>"24
v24@0:8@"<MOVStreamWriterStateContext>"16
Q24@0:8Q16
@"MIOPixelBufferPool"
v64@0:8{?={?=qiIq}{?=qiIq}}16
{vector<CMTimeRange, std::allocator<CMTimeRange>>="__begin_"^{?}"__end_"^{?}"__end_cap_"{__compressed_pair<CMTimeRange *, std::allocator<CMTimeRange>>="__value_"^{?}}}
v40@0:8q16@24@32
v72@0:8{?=qiIq}16@40q48@56@64
^{opaqueCMSampleBuffer=}16@0:8
v24@0:8^{opaqueCMSampleBuffer=}16
^{opaqueCMSampleBuffer=}
@"AVTimedMetadataGroup"
v72@0:8@16^{opaqueCMSampleBuffer=}24@32{?=qiIq}40@64
v32@0:8@16@24
B40@0:8@16^{OpaqueVTCompressionSession=}24@32
I32@0:8@16@24
v72@0:8@"VideoEncoderInterface"16^{opaqueCMSampleBuffer=}24@"AVTimedMetadataGroup"32{?=qiIq}40@"NSString"64
v32@0:8@"VideoEncoderInterface"16@"NSString"24
@"NSDictionary"32@0:8@"VideoEncoderInterface"16@"NSString"24
B40@0:8@"VideoEncoderInterface"16^{OpaqueVTCompressionSession=}24@"NSString"32
I32@0:8@"VideoEncoderInterface"16@"NSString"24
v24@0:8@"NSArray"16
@"NSArray"16@0:8
@"NSError"16@0:8
v24@0:8@"NSError"16
v40@0:8@16r^{opaqueCMFormatDescription=}24@32
v40@0:8@"NSString"16r^{opaqueCMFormatDescription=}24@"NSDictionary"32
B32@0:8@16@24
B40@0:8@16@24@32
Q24@0:8@16
v24@0:8Q16
B32@0:8@"NSDictionary"16@"NSString"24
B40@0:8@"NSString"16@"NSString"24@"NSString"32
Q24@0:8@"NSString"16
@32@0:8@16d24
{?=qiIq}24@0:8d16
B24@0:8^{StreamRecordingData=^{opaqueCMFormatDescription}B@@@@@@Q@@@@@@@{?=qiIq}Q@q}16
v32@0:8Q16@24
B24@0:8d16
B64@0:8{CGAffineTransform=dddddd}16
B48@0:8@16@24@32^@40
B20@0:8B16
v32@0:8@16r^{opaqueCMFormatDescription=}24
v40@0:8@16@24^{opaqueCMFormatDescription=}32
v40@0:8@16@24@32
B40@0:8@16@24^@32
v48@0:8@16@24@32^v40
i44@0:8{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__long=*Qb63b1}{__short=[23c][0C]b7b1}{__raw=[3Q]})}}}16i40
B40@0:8{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__long=*Qb63b1}{__short=[23c][0C]b7b1}{__raw=[3Q]})}}}16
v56@0:8^{__CVBuffer=}16{?=qiIq}24@48
v40@0:8^{opaqueCMSampleBuffer=}16@24@32
v92@0:8^{opaqueCMSampleBuffer=}16@24{?=qiIq}32{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__long=*Qb63b1}{__short=[23c][0C]b7b1}{__raw=[3Q]})}}}56@80B88
v56@0:8@16{?=qiIq}24@48
v72@0:8@16{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__long=*Qb63b1}{__short=[23c][0C]b7b1}{__raw=[3Q]})}}}24{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__long=*Qb63b1}{__short=[23c][0C]b7b1}{__raw=[3Q]})}}}48
v32@0:8^{opaqueCMSampleBuffer=}16@24
d24@0:8@16
i24@0:8@16
v24@0:8^@16
v40@0:8@16^{opaqueCMFormatDescription=}24@32
v28@0:8B16@20
v32@0:8@16q24
{?=qiIq}16@0:8
d16@0:8
v24@0:8d16
i16@0:8
v20@0:8i16
@"NSObject<OS_dispatch_queue>"
@"NSURL"
@"AVAssetWriter"
{CGAffineTransform="a"d"b"d"c"d"d"d"tx"d"ty"d}
{map<std::string, (anonymous namespace)::StreamRecordingData, std::less<std::string>, std::allocator<std::pair<const std::string, (anonymous namespace)::StreamRecordingData>>>="__tree_"{__tree<std::__value_type<std::string, (anonymous namespace)::StreamRecordingData>, std::__map_value_compare<std::string, std::__value_type<std::string, (anonymous namespace)::StreamRecordingData>, std::less<std::string>, true>, std::allocator<std::__value_type<std::string, (anonymous namespace)::StreamRecordingData>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, (anonymous namespace)::StreamRecordingData>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, (anonymous namespace)::StreamRecordingData>, std::less<std::string>, true>>="__value_"Q}}}
{vector<std::string, std::allocator<std::string>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::string *, std::allocator<std::string>>="__value_"^v}}
{map<std::string, (anonymous namespace)::MetadataRecordingData, std::less<std::string>, std::allocator<std::pair<const std::string, (anonymous namespace)::MetadataRecordingData>>>="__tree_"{__tree<std::__value_type<std::string, (anonymous namespace)::MetadataRecordingData>, std::__map_value_compare<std::string, std::__value_type<std::string, (anonymous namespace)::MetadataRecordingData>, std::less<std::string>, true>, std::allocator<std::__value_type<std::string, (anonymous namespace)::MetadataRecordingData>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, (anonymous namespace)::MetadataRecordingData>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, (anonymous namespace)::MetadataRecordingData>, std::less<std::string>, true>>="__value_"Q}}}
{map<std::string, std::map<std::string, (anonymous namespace)::MetadataRecordingData>, std::less<std::string>, std::allocator<std::pair<const std::string, std::map<std::string, (anonymous namespace)::MetadataRecordingData>>>>="__tree_"{__tree<std::__value_type<std::string, std::map<std::string, (anonymous namespace)::MetadataRecordingData>>, std::__map_value_compare<std::string, std::__value_type<std::string, std::map<std::string, (anonymous namespace)::MetadataRecordingData>>, std::less<std::string>, true>, std::allocator<std::__value_type<std::string, std::map<std::string, (anonymous namespace)::MetadataRecordingData>>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, std::map<std::string, (anonymous namespace)::MetadataRecordingData>>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, std::map<std::string, (anonymous namespace)::MetadataRecordingData>>, std::less<std::string>, true>>="__value_"Q}}}
{map<std::string, CMTime, std::less<std::string>, std::allocator<std::pair<const std::string, CMTime>>>="__tree_"{__tree<std::__value_type<std::string, CMTime>, std::__map_value_compare<std::string, std::__value_type<std::string, CMTime>, std::less<std::string>, true>, std::allocator<std::__value_type<std::string, CMTime>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, CMTime>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, CMTime>, std::less<std::string>, true>>="__value_"Q}}}
@"<MOVStreamWriterState>"
@"NSError"
@"NSArray"
@"<MOVStreamCustomEncoderConfigDelegate>"
@"<MOVStreamWriterDelegate>"
{?="value"q"timescale"i"flags"I"epoch"q}
^{__CVBuffer=}48@0:8I16I20I24I28i32I36I40I44
^{__CVBuffer=}32@0:8I16I20i24I28
^{__CFDictionary=}36@0:8I16I20i24@28
^{__CFDictionary=}32@0:8I16I20i24I28
^{__CFDictionary=}40@0:8I16I20I24i28I32I36
^{__CVBuffer=}24@0:8^{__CVBuffer=}16
^{__CVBuffer=}32@0:8^{__CVBuffer=}16@24
B36@0:8^{__CVBuffer=}16^{__CVBuffer=}24i32
^{__CVPixelBufferPool=}32@0:8^{__CVBuffer=}16Q24
^{__CVBuffer=}32@0:8^{__CVBuffer=}16^{__CVPixelBufferPool=}24
^{__CVBuffer=}36@0:8^{__CVBuffer=}16^{__CVPixelBufferPool=}24B32
B32@0:8^{__CVBuffer=}16i24S28
B20@0:8I16
v40@0:8r*16Q24@32
B40@0:8^{__CVBuffer=}16^{__CVBuffer=}24i32B36
B32@0:8^{__CVBuffer=}16^{__CVBuffer=}24
B40@0:8^{__CVBuffer=}16^{__CVBuffer=}24^{__CVBuffer=}32
^{__CVPixelBufferPool=}52@0:8Q16Q24I32Q36Q44
^{__CVPixelBufferPool=}52@0:8Q16Q24I32@36Q44
^{__CVBuffer=}24@0:8^{__CVPixelBufferPool=}16
B40@0:8^{__CVBuffer=}16^{__CVBuffer=}24Q32
B32@0:8@16^{__CVBuffer=}24
B40@0:8@16^{__CVBuffer=}24Q32
@24@0:8^{__CVBuffer=}16
@32@0:8^{__CVBuffer=}16Q24
^{__CVBuffer=}36@0:8@16I24I28I32
^{__CVBuffer=}40@0:8^{__CFData=}16Q24Q32
B32@0:8^S16^{__CVBuffer=}24
B32@0:8^{__CVBuffer=}16^S24
q44@0:8Q16Q24Q32I40
q20@0:8I16
@32@0:8^{opaqueCMFormatDescription=}16@24
@44@0:8Q16Q24I32Q36
@44@0:8Q16Q24I32@36
^{OpaqueVTPixelTransferSession=}
@40@0:8^{__CVBuffer=}16d24@32
^{__CVBuffer=}16@0:8
^{__CVBuffer=}
^{__CVBuffer=}40@0:8^{__CVBuffer=}16^{StreamRecordingData=^{opaqueCMFormatDescription}B@@@@@@Q@@@@@@@{?=qiIq}Q@q}24^@32
r^{opaqueCMFormatDescription=}24@0:8^{StreamRecordingData=^{opaqueCMFormatDescription}B@@@@@@Q@@@@@@@{?=qiIq}Q@q}16
r^{opaqueCMFormatDescription=}32@0:8^{__CVBuffer=}16^{StreamRecordingData=^{opaqueCMFormatDescription}B@@@@@@Q@@@@@@@{?=qiIq}Q@q}24
I24@0:8^{StreamRecordingData=^{opaqueCMFormatDescription}B@@@@@@Q@@@@@@@{?=qiIq}Q@q}16
^{opaqueCMFormatDescription=}24@0:8^{opaqueCMFormatDescription=}16
Q20@0:8I16
B44@0:8@16Q24Q32I40
I24@0:8^{opaqueCMFormatDescription=}16
I36@0:8@16i24^@28
d24@0:8d16
@48@0:8@16I24I28@32@40
@32@0:8q16q24
^{OpaqueVTPixelRotationSession=}
@24@0:8r^v16
@64@0:8{?={?=qiIq}{?=qiIq}}16
B64@0:8{?={?=qiIq}{?=qiIq}}16
{?={?=qiIq}{?=qiIq}}16@0:8
{?={?=qiIq}{?=qiIq}}24@0:8Q16
q40@0:8{?=qiIq}16
@24@0:8I16B20
@36@0:8Q16Q24I32
@52@0:8Q16Q24I32Q36Q44
@52@0:8Q16Q24I32@36Q44
@48@0:8^{__CVBuffer=}16^{__CFDictionary=}24^{__CFDictionary=}32^@40
^{__CVPixelBufferPool=}16@0:8
v24@0:8^{__CVPixelBufferPool=}16
^{__CVPixelBufferPool=}
B48@0:8^{__CVBuffer=}16^{__CVBuffer=}24i32B36i40i44
@"<MTLDevice>"
@"<MTLCommandQueue>"
[5@"<MTLComputePipelineState>"]
@24@0:8^{opaqueCMSampleBuffer=}16
B32@0:8@16^v24
@60@0:8^{__CVBuffer=}16@24{?=qiIq}32i56
B48@0:8{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__long=*Qb63b1}{__short=[23c][0C]b7b1}{__raw=[3Q]})}}}16^v40
i52@0:8{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__long=*Qb63b1}{__short=[23c][0C]b7b1}{__raw=[3Q]})}}}16i40^v44
@32@0:8@16^v24
@40@0:8@16^v24^@32
r^{opaqueCMFormatDescription=}24@0:8@16
I32@0:8@16^v24
@80@0:8@16@24@32@40@48@56@64^@72
@72@0:8@16@24@32@40@48@56^@64
@80@0:8@"AVAssetTrack"16@"AVAssetReader"24@"NSArray"32@"Version"40@"NSString"48@"MOVStreamReader"56@"<MOVStreamReaderDelegate>"64^@72
@72@0:8@"AVAssetTrack"16@"AVAssetReader"24@"Version"32@"NSString"40@"MOVStreamReader"48@"<MOVStreamReaderDelegate>"56^@64
@24@0:8^@16
@"NSDictionary"24@0:8^@16
@"NSDictionary"16@0:8
@"<MOVStreamPostProcessor>"16@0:8
v24@0:8@"<MOVStreamPostProcessor>"16
@40@0:8n@16o^{?={?=qiIq}{?=qiIq}}24o^@32
@"NSArray"40@0:8n@"NSString"16o^{?={?=qiIq}{?=qiIq}}24o^@32
@"AVAssetTrack"16@0:8
^{opaqueCMSampleBuffer=}32@0:8o^{?=qiIq}16o^@24
^{opaqueCMSampleBuffer=}40@0:8o^@16o^{?=qiIq}24o^@32
^{__CVBuffer=}32@0:8o^{?=qiIq}16o^@24
^{__CVBuffer=}40@0:8o^@16o^{?=qiIq}24o^@32
{CGAffineTransform=dddddd}16@0:8
@32@0:8o^{?={?=qiIq}{?=qiIq}}16o^@24
@24@0:8o^@16
@"NSArray"32@0:8o^{?={?=qiIq}{?=qiIq}}16o^@24
@"AVTimedMetadataGroup"24@0:8o^@16
@32@0:8^{?=qiIq}16^{?=qiIq}24
i52@0:8@16@24@32I40@44
i40@0:8@16@24@32
v64@0:8{CGAffineTransform=dddddd}16
v24@0:8q16
@"<MOVStreamPostProcessor>"
@"AVAssetReaderTrackOutput"
@"AVAssetReaderOutputMetadataAdaptor"
@"NSData"
@"Version"
@"<MOVStreamReaderDelegate>"
@"MOVStreamReader"
@"AVAssetReader"
@"AVAssetTrack"
@40@0:8@16@24^@32
@32@0:8@16^{?={?=qiIq}{?=qiIq}}24
I24@0:8@16
@32@0:8@"NSURL"16^@24
@40@0:8@"NSURL"16@"<MOVStreamReaderDelegate>"24^@32
@"NSArray"24@0:8@"NSString"16
@"NSArray"32@0:8@"NSString"16^{?={?=qiIq}{?=qiIq}}24
I24@0:8@"NSString"16
B24@0:8^@16
@32@0:8n@16o^@24
^{opaqueCMSampleBuffer=}48@0:8n@16o^@24o^{?=qiIq}32o^@40
^{__CVBuffer=}48@0:8n@16o^@24o^{?=qiIq}32o^@40
@"<MOVStreamReaderVideoStreamOutput>"32@0:8n@"NSString"16o^@24
@"<MOVStreamReaderAudioStreamOutput>"32@0:8n@"NSString"16o^@24
@"<MOVStreamReaderSceneStreamOutput>"32@0:8n@"NSString"16o^@24
@"<MOVStreamReaderMetadataStreamOutput>"32@0:8n@"NSString"16o^@24
^{opaqueCMSampleBuffer=}48@0:8n@"NSString"16o^@24o^{?=qiIq}32o^@40
^{__CVBuffer=}48@0:8n@"NSString"16o^@24o^{?=qiIq}32o^@40
B48@0:8{?=qiIq}16^@40
{CGSize=dd}24@0:8@16
{?=qiIq}24@0:8@16
^{__CVBuffer=}40@0:8@16^{?=qiIq}24^@32
^{opaqueCMSampleBuffer=}40@0:8@16^{?=qiIq}24^@32
@48@0:8@16@24^{?={?=qiIq}{?=qiIq}}32^@40
@40@0:8@16^{?={?=qiIq}{?=qiIq}}24^@32
@"AVURLAsset"
@"NSMutableDictionary"
@"NSMutableArray"
{_NSRange=QQ}64@0:8{?=qiIq}16{?=qiIq}40
{?={?=qiIq}{?=qiIq}}32@0:8Q16Q24
{?=qiIq}24@0:8Q16
@"MOVStreamTimestamps"
@36@0:8^{StreamRecordingData=^{opaqueCMFormatDescription}B@@@@@@Q@@@@@@@{?=qiIq}Q@q}16d24B32
@24@0:8^{StreamRecordingData=^{opaqueCMFormatDescription}B@@@@@@Q@@@@@@@{?=qiIq}Q@q}16
q20@0:8i16
@68@0:8B16d20Q28B36q40d48{?=ii}56B64
@32@0:8^{StreamRecordingData=^{opaqueCMFormatDescription}B@@@@@@Q@@@@@@@{?=qiIq}Q@q}16d24
Q32@0:8^{StreamRecordingData=^{opaqueCMFormatDescription}B@@@@@@Q@@@@@@@{?=qiIq}Q@q}16d24
d24@0:8^{StreamRecordingData=^{opaqueCMFormatDescription}B@@@@@@Q@@@@@@@{?=qiIq}Q@q}16
i20@0:8i16
@28@0:8d16B24
@"MOVStreamEncoderConfig"
B24@0:8^{OpaqueVTCompressionSession=}16
@44@0:8d16@24@32B40
@40@0:8@16@24@32
v44@0:8i16i20i24^{opaqueCMFormatDescription=}28d36
v64@0:8^{__CVBuffer=}16{?=qiIq}24^{__CFDictionary=}48@56
v24@0:8i16I20
v64@0:8^{opaqueCMSampleBuffer=}16{?=qiIq}24@48i56I60
^{HEVCLosslessEncoder=B@iid^{OpaqueVTCompressionSession}{EncoderConfig=iiiidBBBBBi}{?=qiIq}IIIBB}
@"<VideoEncoderInterfaceDelegate>"
@28@0:8@16B24
@"SampleTimeList"
010L
800L
