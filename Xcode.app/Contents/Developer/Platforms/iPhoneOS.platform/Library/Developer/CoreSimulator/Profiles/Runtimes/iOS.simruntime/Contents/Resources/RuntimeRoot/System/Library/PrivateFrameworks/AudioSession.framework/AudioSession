CAException
v8@?0
AVAudioSession Notify Thread
AVAudioSessionGenericRunLoopThread.mm
array::at
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
v16@?0@"NSError"8
v32@?0@"NSError"8d16Q24
AVAudioSessionPortImpl.mm
Unknown
<%@: %p, type = %@; name = %@; UID = %@; selectedDataSource = %@>
kMXSession_RouteDetailedDescriptionKey_ID
kMXSession_RouteDetailedDescriptionKey_PortType
kMXAudioRoute_USBInput
kMXAudioRoute_USB
kMXAudioRoute_IDAM
kMXAudioRoute_MicrophoneBluetooth
kMXAudioRoute_HeadsetBT
kMXAudioRoute_HeadphonesBT
kMXAudioRoute_BluetoothLEOutput
kMXAudioRoute_CarAudioInput
kMXAudioRoute_CarAudioOutput
kMXAudioRoute_AirTunes
kMXAudioRoute_AirPlayLowLatency
kMXAudioRoute_Headphone
kMXAudioRoute_TTY
kMXAudioRoute_HDMI
kMXAudioRoute_DisplayPort
kMXAudioRoute_SystemCapture
kMXAudioRoute_Thunderbolt
kMXAudioRoute_ThunderboltInput
kMXAudioRoute_LineIn
kMXAudioRoute_LineOut
kMXAudioRoute_MicrophoneBuiltIn
kMXAudioRoute_MicrophoneWired
kMXAudioRoute_Receiver
kMXAudioRoute_Speaker
kMXAudioRoute_SPDIF
kMXSession_RouteDetailedDescriptionKey_Name
kMXSession_RouteDetailedDescriptionKey_UID
kMXSession_RouteDetailedDescriptionKey_IsHeadphones
kMXSession_RouteDetailedDescriptionKey_VoiceProcessingIsSupported
kMXSession_RouteDetailedDescriptionKey_LiveListenIsSupported
kMXSession_RouteDetailedDescriptionKey_EndpointType
RouteDetailedDescription_ID
ThunderboltInput
ThunderboltOutput
RouteDetailedDescription_IsHeadphones
RouteDetailedDescription_IsVoiceProcessingSupported
RouteDetailedDescription_IsLiveListenSupported
RouteDetailedDescriptionKey_EndpointType
kMXSession_RouteDetailedDescriptionKey_SelectedDataSource
RouteDetailedDescription_SelectedDataSource
kMXSession_RouteDetailedDescriptionKey_ChannelDescriptions
kMXSession_RouteDetailedDescriptionKey_DataSources
RouteDetailedDescription_DataSources
kMXSession_RouteDetailedDescriptionKey_HiddenDataSources
RouteDetailedDescription_HiddenDataSources
NSString *getkAudioSession_AudioRouteKey_Type()
SoftLinking_AudioToolbox_iOS.h
kAudioSession_AudioRouteKey_Type
void *AudioToolboxLibrary()
NSString *getkAudioSessionInputRoute_USBAudio()
kAudioSessionInputRoute_USBAudio
NSString *getkAudioSessionOutputRoute_USBAudio()
kAudioSessionOutputRoute_USBAudio
NSString *getkAudioSessionInputRoute_BluetoothHFP()
kAudioSessionInputRoute_BluetoothHFP
NSString *getkAudioSessionOutputRoute_BluetoothHFP()
kAudioSessionOutputRoute_BluetoothHFP
NSString *getkAudioSessionInputRoute_CarAudio()
kAudioSessionInputRoute_CarAudio
NSString *getkAudioSessionOutputRoute_CarAudio()
kAudioSessionOutputRoute_CarAudio
NSString *getkAudioSessionOutputRoute_AirPlayLowLatency()
kAudioSessionOutputRoute_AirPlayLowLatency
NSString *getkAudioSession_AudioRouteKey_Name()
kAudioSession_AudioRouteKey_Name
NSString *getkAudioSession_AudioRouteKey_UID()
kAudioSession_AudioRouteKey_UID
NSString *getkAudioSession_AudioRouteKey_ChannelDescriptions()
kAudioSession_AudioRouteKey_ChannelDescriptions
com.apple.audio.SimulatorDeviceEventQueue
kMXSessionAudioCategory_AmbientSound
kMXSessionAudioCategory_SoloAmbientSound
AVAudioSessionImpl_Simulator.mm
kMXSessionProperty_UserVolume
kMXSessionProperty_CurrentSpeechDetectionDeviceSampleRate
kMXSessionProperty_CurrentInputSampleRate
kMXSessionProperty_AudioCategory
kAudioSessionPropertyXPC_PreferredHardwareSampleRate
kMXSessionProperty_PreferredAudioHardwareIOBufferFrames
kMXSessionProperty_PreferredAudioHardwareIOBufferDuration
kMXSessionProperty_InterruptionStyle
kMXSessionProperty_RouteSharingPolicy
kMXSessionProperty_AllowedRouteTypes
kMXSessionProperty_WantsToPauseSpokenAudio
kMXSessionProperty_CategoryCustomization_DefaultBuiltInRoute
kMXSessionProperty_CategoryCustomization_EnableBluetoothRecording
kMXSessionProperty_PrefersNoInterruptionWhenSecureMicrophoneIsEngaged
kMXSessionProperty_CurrentOutputSampleRate
kMXSessionProperty_CurrentInputDeviceBufferSize
kMXSessionProperty_CurrentOutputDeviceBufferSize
kMXSessionProperty_AudioMode
kMXSessionAudioMode_Default
kMXSessionProperty_IsActive
kMXSessionProperty_PreferredInputSampleRate
kMXSessionProperty_PreferredOutputSampleRate
kMXSessionProperty_PreferredNumberOfInputChannels
kMXSessionProperty_PreferredNumberOfOutputChannels
kMXSessionProperty_ClientPriority
kMXSessionProperty_PreferredStereoInputOrientation
kMXSessionProperty_CurrentStereoInputOrientation
kMXSessionProperty_AllowSystemSoundsWhileRecording
kMXSessionProperty_PhysicalFormatsSupported
kMXSessionProperty_ConsolidatedSourceFormatInfo
kMXSessionProperty_CurrentAudioHardwareFormat
kMXSessionProperty_ForceSoundCheck
kMXSessionProperty_NowPlayingAppWasStoppedOnMostRecentActivation
kMXSessionProperty_IsLongFormAudio
kMXSessionProperty_DoesntActuallyPlayAudio
kMXSessionProperty_AllowMixableAudioWhileRecording
kMXSessionProperty_IsEligibleForNowPlayingAppConsideration
kMXSessionProperty_IsEligibleForBTSmartRoutingConsideration
temp_kMXSessionProperty_IsEligibleForBTTriangleConsideration
kMXSessionProperty_PrefersToTakeHWControlFlagsFromAnotherSession
kMXSessionProperty_PrefersSuppressingRecordingState
kMXSessionProperty_OptOutOfMutePriority
kMXSessionProperty_IgnoreRingerSwitch
kMXSessionProperty_AudioHardwareControlFlags
kMXSessionProperty_InterruptionFadeDuration
kMXSessionProperty_DuckFadeDuration
kMXSessionProperty_UnduckFadeDuration
kMXSessionProperty_DuckToLevelScalar
kMXSessionProperty_DuckToLevelDB
kMXSessionProperty_IsExpanseMediaSession
kMXSessionProperty_ReporterIDs
kMXSessionProperty_DisallowAudioFormatChanges
kMXSessionProperty_InputGainScalar
kMXSessionProperty_InputGainAvailable
kMXSessionProperty_SomeOtherClientIsPlaying
kMXSessionProperty_SomeOtherNonAmbientAudioCategoryClientIsPlaying
kMXSessionProperty_CurrentInputLatency
kMXSessionProperty_CurrentOutputLatency
kMXSessionProperty_CurrentAudioHardwareInputNumberChannels
kMXSessionProperty_CurrentAudioHardwareOutputNumberChannels
kMXSessionProperty_MaximumNumberOfInputChannels
kMXSessionProperty_MaximumNumberOfOutputChannels
kMXSessionProperty_ProcessAssertionAuditTokens
kMXSessionProperty_RoutingContextUUID
kMXSessionProperty_OverrideRoute
kMXSessionProperty_PreferredInputs
kMXSessionProperty_DeselectedInputs
kMXSessionProperty_PickedRoute
kMXSessionProperty_AudioClockDevice
kMXSessionProperty_SelectableInputs
kMXSessionProperty_ActivationContext
kMXSessionProperty_ExcludedRoutes
kMXSessionProperty_DefaultVPChatMode
kMXSessionProperty_IAmTheAssistant
kMXSessionProperty_PrefersNoInterruptionsByRingtonesAndAlerts
kMXSessionProperty_PrefersNoDucking
kMXSessionProperty_NeedsAudioBudget
kMXSessionProperty_WantsToBeVolumeButtonClient
kMXSessionProperty_PrefersToVibeWhenVibrationsAreDisabled
kMXSessionProperty_PreferredDecoupledInputOutput
kMXSessionProperty_RequiresAggregatedInputOutput
kMXSessionProperty_IsInputOutputDecoupled
kMXSessionProperty_PrefersMultichannelAudio
kMXSessionProperty_MATAtmosIsAvailable
kCMSessionGlobalProperty_CurrentInputSafetyOffset
kCMSessionGlobalProperty_CurrentOutputSafetyOffset
kCMSessionGlobalProperty_ThermalGainAdjustment_Speaker
kCMSessionGlobalProperty_ThermalGainAdjustment_Haptics
temp_kMXSessionProperty_DefaultCalibratedOutputVolume
kMXSessionProperty_BestAvailableContentType
kMXSession_SourceFormatInfoKey_BestAvailableContentType_Stereo
kAudioSessionPropertyXPC_AudioInputAvailable
kAudioSessionPropertyXPC_MuteSessionInputs
kAudioSessionPropertyXPC_RecordingFromRemoteInput
map::at:  key not found
TCCUtils.mm
v24@?0@"NSObject<OS_tcc_authorization_record>"8^{__CFError=}16
com.avaudiosession.tccserver
GenericPipeMetadata_MXPropertyName
GenericPipeMetadata_MXPropertyValue
GenericPipeMetadata_IsNullValue
AVAudioSession_iOS.mm
-[AVAudioSession category]
-[AVAudioSession privateSetCategoryWithOptions:modes:routeSharingPolicy:options:]
[AVAudioSession setActive:activate]
[AVAudioSession setActive:deactivate]
v16@?0Q8
v12@?0C8
VirtualAudio
stereo_capture_interface
TRUE
FALSE
kCMSessionGlobalProperty_DisplayIDsOfActiveSessions
kMXSessionProperty_PowerBudget
kMXSessionProperty_PowerProfile
kMXSessionProperty_SubscribeToNotifications
kAudioSessionPropertyXPC_HostProcessAttribution
kMXSession_SourceFormatInfoKey_BestAvailableContentType_Multichannel
kMXSessionAudioMode_VoiceChat
kMXSessionAudioMode_GameChat
kMXSessionAudioMode_VideoChat
kMXSessionAudioMode_VideoChatForMedia
kCMSessionGlobalNotificationKey_ActiveAudioRouteDidChange_Reason
kCMSessionGlobalNotificationKey_ActiveAudioRouteDidChange_OldDetailedRoute
kCMSessionGlobalNotificationKey_ActiveAudioRouteDidChange_NewDetailedRoute
NSString *getkAudioSession_RouteChangeKey_Reason()
kAudioSession_RouteChangeKey_Reason
NSString *getkAudioSession_AudioRouteChangeKey_PreviousRouteDescription()
kAudioSession_AudioRouteChangeKey_PreviousRouteDescription
NSString *getkAudioSession_AudioRouteChangeKey_CurrentRouteDescription()
kAudioSession_AudioRouteChangeKey_CurrentRouteDescription
outputVolume
inputGain
inputDataSources
outputDataSources
promptStyle
isPiPAvailable
audioFormats
audioFormat
inputNumberOfChannels
outputNumberOfChannels
0x%x
RouteSharingPolicyException
Illegal route sharing policy specified
com.apple.AVAudioSessionActivation
com.apple.AVAudioSessionNotification
AVAudioSessionRouteSharingPolicyDefault
AVAudioSessionRouteSharingPolicyLongFormAudio
AVAudioSessionRouteSharingPolicyIndependent
AVAudioSessionRouteSharingPolicyLongFormVideo
unknown route sharing policy
temp_kMXSessionNotification_MandrakeBudgetDidChange
AVAudioSessionUtilities.h
kCMSessionGlobalProperty_VoicePromptStyle
AVAudioSessionDataSourceImpl.mm
<%@: %p, ID = %@; name = %@>
NSString *getkAudioSession_DataSourceDescriptionKey_ID()
kAudioSession_DataSourceDescriptionKey_ID
NSString *getkAudioSession_DataSourceDescriptionKey_Name()
kAudioSession_DataSourceDescriptionKey_Name
NSString *getkAudioSession_DataSourceDescriptionKey_MicrophoneRegion()
kAudioSession_DataSourceDescriptionKey_MicrophoneRegion
NSString *getkAudioSession_DataSourceDescriptionKey_MicrophoneOrientation()
kAudioSession_DataSourceDescriptionKey_MicrophoneOrientation
NSString *getkAudioSession_DataSourceDescriptionKey_SelectedMicrophonePolarPattern()
kAudioSession_DataSourceDescriptionKey_SelectedMicrophonePolarPattern
NSString *getkAudioSession_DataSourceDescriptionKey_AvailableMicrophonePolarPatterns()
kAudioSession_DataSourceDescriptionKey_AvailableMicrophonePolarPatterns
<AVAudioSessionIOBinding@%p: session %@, streams %@>
AVAudioSession Error
Bad parameter
com.apple.audio.AudioSession
interrupted
invalidated
sc_XPCConnection.mm
assertion failure: mReconnectionStage != reconnectionStages.cend()
assertion failure: mReconnectionStage != getReconnectionStages().cend()
v24@?0@"NSError"8@"NSString"16
com.apple.coreaudio
as_client
AudioSessionSimulatorNoToolbox
AudioSession
SimulatorNoToolboxDependency
sessionType
clientAuditToken
sourceSessionID
clientIdentifier
clientIdentifer
SIMULATOR_AUDIO_SETTINGS_PATH
SimulatorDeviceSettings.cpp
details unavailable
sim_ringer_state
sim_volume
sim_input_device_uid
sim_output_device_uid
Could not construct
Could not convert
Null run loop
Invalid completion handler
SessionConnector.mm
nVh/gwNpy7Jv1NOk00CMrw
<%@: %p, name = %@; label = %u (0x%x); number = %d; port UID = %@>
AVAudioSessionChannelImpl.mm
kMXSession_RouteDetailedDescriptionKey_ChannelDescriptions_Name
kMXSession_RouteDetailedDescriptionKey_ChannelDescriptions_Label
NSString *getkAudioSession_ChannelDescriptionKey_Name()
kAudioSession_ChannelDescriptionKey_Name
NSString *getkAudioSession_ChannelDescriptionKey_Label()
kAudioSession_ChannelDescriptionKey_Label
AudioSessionCreateForID
OSStatus softLink_AudioSessionCreateForID(AudioSessionID)
SoftLinking_AudioToolbox_iOS.mm
AudioSessionDestroySession_Priv
OSStatus softLink_AudioSessionDestroySession_Priv(AudioSessionID)
AudioSessionCopyProperty_Priv
OSStatus softLink_AudioSessionCopyProperty_Priv(AudioSessionID, AudioSessionPropertyID, UInt32 *, void *)
AudioSessionCopyPropertyGenericPipe_Priv
OSStatus softLink_AudioSessionCopyPropertyGenericPipe_Priv(AudioSessionID, AudioSessionPropertyID, CFStringRef, UInt32 *, void *)
AudioSessionSetProperty_Priv
OSStatus softLink_AudioSessionSetProperty_Priv(AudioSessionID, AudioSessionPropertyID, UInt32, const void *)
AudioSessionAddPropertyListener_Priv
OSStatus softLink_AudioSessionAddPropertyListener_Priv(AudioSessionID, AudioSessionPropertyID, AudioSessionPropertyListener, void *)
AudioSessionRemovePropertyListener_Priv
OSStatus softLink_AudioSessionRemovePropertyListener_Priv(AudioSessionID, AudioSessionPropertyID, AudioSessionPropertyListener, void *)
AudioSessionSetActive_Priv
OSStatus softLink_AudioSessionSetActive_Priv(AudioSessionID, Boolean, UInt32)
AudioSessionDeactivateAndSetPriority_Priv
OSStatus softLink_AudioSessionDeactivateAndSetPriority_Priv(AudioSessionID, UInt32)
AudioSessionRequestRecordPermission
void softLink_AudioSessionRequestRecordPermission(void (^__strong)(Boolean))
AudioSessionCreateSessionWithIdentifier_Priv
OSStatus softLink_AudioSessionCreateSessionWithIdentifier_Priv(CFRunLoopRef, CFStringRef, AudioSessionInterruptionListener, void *, AudioSessionType, CFStringRef, AudioSessionID *)
SessionMap.mm
attempting to add a session with an ID that's already in use
unexpected nil value
<%@: %p, 
inputs = %@; 
outputs = %@>
kMXSession_RouteDetailedDescriptionKey_Inputs
kMXSession_RouteDetailedDescriptionKey_Outputs
kMXSession_RouteDetailedDescriptionKey_SiriInputDeviceUUID
RouteDetailedDescription_SiriInputDeviceUUID
kMXSession_RouteDetailedDescriptionKey_SiriInputSource
RouteDetailedDescription_SiriInputSource
kMXSession_RouteDetailedDescriptionKey_SupportsDoAP
RouteDetailedDescription_SupportsDoAP
kMXSession_RouteDetailedDescriptionKey_SupportsSoftwareVolume
RouteDetailedDescription_SupportsSoftwareVolume
RouteDetailedDescription_IsSpatialAudioEnabled
NSString *getkAudioSession_AudioRouteKey_Inputs()
kAudioSession_AudioRouteKey_Inputs
NSString *getkAudioSession_AudioRouteKey_Outputs()
kAudioSession_AudioRouteKey_Outputs
SelectedRouteDescription_RouteID
SelectedRouteDescription_DataSourceID
SelectedRouteDescription_MicrophonePolarPattern
Session initialization error. Recent media server termination?
Operation not permitted while session has running audio I/Os
Resource not available
AVAudioSessionUtilities.mm
kCMSessionVoicePromptStyle_None
kCMSessionVoicePromptStyle_Short
kCMSessionVoicePromptStyle_Normal
Category Value Converter
AVAudioSessionCategoryEARC
Endpoint Value Converter
Unspecified
Headphones
Vehicle
Speakers
Mode Value Converter
Polar Pattern Value Converter
Location Value Converter
Orientation Value Converter
kMXSessionProperty_CurrentAudioHardwareSampleRate
kMXSessionAudioHardwareFormat_LPCM
AVAudioSessionRouteChangeReasonUnknown
AVAudioSessionRouteChangeReasonNewDeviceAvailable
AVAudioSessionRouteChangeReasonOldDeviceUnavailable
AVAudioSessionRouteChangeReasonCategoryChange
AVAudioSessionRouteChangeReasonOverride
AVAudioSessionRouteChangeReasonWakeFromSleep
AVAudioSessionRouteChangeReasonNoSuitableRouteForCategory
AVAudioSessionRouteChangeReasonRouteConfigurationChange
unknown route change reason
kMXSessionAudioCategory_AudioProcessing
kMXSessionAudioCategory_MediaPlayback
kMXSessionAudioCategory_Record
kMXSessionAudioCategory_PlayAndRecord
kMXSessionAudioCategory_Multi
kMXSessionAudioCategory_VoiceOver
kMXSessionAudioCategory_VoiceCommand
kMXSessionAudioCategory_RingtonePreview
kMXSessionAudioCategory_Ringtone
kMXSessionAudioCategory_Voicemail
kMXSessionAudioCategory_PhoneCall
kMXSessionAudioCategory_TTYCall
kMXSessionAudioCategory_Alarm
kMXSessionAudioCategory_MediaPlaybackNoSpeaker
kMXSessionAudioCategory_EmergencyAlert
kMXSessionAudioCategory_EmergencyAlert_Muteable
kMXSessionAudioCategory_FindMyPhone
kMXSessionAudioCategory_WaterEjection
kMXSessionAudioCategory_FindMyAudioDevice
kMXSessionAudioCategory_SystemSoundsAndHaptics
kMXSessionAudioCategory_eARC
kMXSessionAudioMode_VideoRecording
kMXSessionAudioMode_Measurement
kMXSessionAudioMode_MoviePlayback
kMXSessionAudioMode_SpokenAudio
temp_kMXSessionAudioMode_Sleep
temp_kMXSessionAudioMode_SoundRecognition
kMXSessionAudioMode_SpeechRecognition
kMXSessionAudioMode_VoicePrompt
kMXSessionAudioMode_Raw
kMXSessionAudioMode_VoiceMessages
kMXSessionAudioMode_FindMyPhone
kMXSessionAudioMode_HearingAccessibility
kMXSessionAudioMode_LivePhoto
kMXSessionAudioMode_SOSNotification
kMXSessionAudioMode_SpatialRecording
kMXSessionAudioMode_Skeuomorphic
kMXSessionAudioMode_CustomVolume
kMXSessionAudioMode_LowLatency
temp_kMXSessionAudioMode_Beacon
BestAvailableContentType
CurrentlyPlayingFormat
CurrentlyPlayingChannelCount
CurrentlyPlayingContentIsEligibleForSpatialization
CurrentlyPlayingContentIsSpatialized
AVAudioSessionCategoryAmbient
AVAudioSessionCategorySoloAmbient
AVAudioSessionCategoryPlayback
AVAudioSessionCategoryRecord
AVAudioSessionCategoryPlayAndRecord
AVAudioSessionCategoryAudioProcessing
AVAudioSessionCategoryMultiRoute
AVAudioSessionCategoryVoiceOver
AVAudioSessionCategoryVoiceCommand
AVAudioSessionCategoryRingtonePreview
AVAudioSessionCategoryRingtone
AVAudioSessionCategoryVoiceMail
AVAudioSessionCategoryPhoneCall
AVAudioSessionCategoryTTYCall
AVAudioSessionCategoryAlarm
AVAudioSessionCategoryPlaybackNoSpeaker
AVAudioSessionCategoryEmergencyAlert
AVAudioSessionCategoryEmergencyAlert_CanBeMuted
AVAudioSessionCategoryFindMyPhone
AVAudioSessionCategoryWaterEjection
AVAudioSessionCategoryFindMyDevice
AVAudioSessionCategorySystemSoundsAndHaptics
AVAudioSessionModeDefault
AVAudioSessionModeVoiceChat
AVAudioSessionModeGameChat
AVAudioSessionModeVideoRecording
AVAudioSessionModeMeasurement
AVAudioSessionModeMoviePlayback
AVAudioSessionModeSpokenAudio
AVAudioSessionModeVideoChat
AVAudioSessionModeSpeechRecognition
AVAudioSessionModeVoicePrompt
AVAudioSessionModeRaw
AVAudioSessionModeVoiceMessages
AVAudioSessionModeLocatePhone
AVAudioSessionModeHearingAccessibility
AVAudioSessionModeLivePhoto
AVAudioSessionModeSOS
AVAudioSessionModeSpatialRecording
AVAudioSessionModeVideoChatForMedia
AVAudioSessionModeHapticsConstantVolume
AVAudioSessionModeEmergencyAlert
AVAudioSessionModeLowLatency
AVAudioSessionModeSleepTimer
AVAudioSessionModeSoundRecognition
AVAudioSessionModeBeacon
Upper
Lower
Bottom
Front
Back
Left
Right
Omnidirectional
Cardioid
Subcardioid
Stereo
LineIn
MicrophoneBuiltIn
MicrophoneWired
LineOut
BluetoothA2DPOutput
Receiver
Speaker
HDMIOutput
AirPlay
S/PDIF
BluetoothLE
BluetoothHFP
USBAudio
CarAudio
Virtual
FireWire
DisplayPort
Thunderbolt
AVAudioSessionInterruptionNotification
AVAudioSessionRouteChangeNotification
AVAudioSessionMediaServicesWereLostNotification
AVAudioSessionMediaServicesWereResetNotification
AVAudioSessionSilenceSecondaryAudioHintNotification
AVAudioSessionSpatialPlaybackCapabilitiesChangedNotification
AVAudioSessionAvailableSampleRatesChangeNotification
AVAudioSessionBeaconBudgetChangeNotification
AVAudioSessionPickableRouteChangeNotification
AVAudioSessionRoutingContextChangeNotification
AVAudioSessionOtherPrimaryAudioPlayStateChangeNotification
AVAudioSessionInterruptionTypeKey
AVAudioSessionInterruptionOptionKey
AVAudioSessionInterruptorNameKey
AVAudioSessionInterruptionWasSuspendedKey
AVAudioSessionInterruptionReasonKey
AVAudioSessionRouteChangeReasonKey
AVAudioSessionRouteChangePreviousRouteKey
AVAudioSessionSpatializationEnabledKey
AVAudioSessionSilenceSecondaryAudioHintTypeKey
activation trigger
activation device uid
activation accessibility preference
activation call direction
0ESt11logic_error
St12length_error
nwku
@vppaptuo
St12out_of_range
St9exception
St12bad_any_cast
St8bad_cast
NSt3__117bad_function_callE
NSt3__112bad_weak_ptrE
11CAException
BSt13runtime_error
%25s:%-5d Failed to start internal run loop thread
%25s:%-5d Unknown ID for Port
%25s:%-5d Unknown type for Port
%25s:%-5d Unknown name for Port
%25s:%-5d Unknown UID for Port
%25s:%-5d Unknown selected data source for Port %@ (type: %@)
%25s:%-5d Unexpected nil value for port description
%25s:%-5d Failed to set processVolumeScalar on device. Error: %d
%25s:%-5d Set volume on device %u to %.2f
%25s:%-5d Unsupported property: %@
%25s:%-5d tcc_server_message_request_authorization(%s) failed: %@
%25s:%-5d interruption callback
%25s:%-5d Received a pickable routes change notification
%25s:%-5d Received an available sample rates change notification
%25s:%-5d Received an Beacon budget change notification
%25s:%-5d Received a server death notification
%25s:%-5d Received a routing context change notification
 AudioSessionAddPropertyListener failed for kAudioSessionProperty_AudioInputAvailable
 AudioSessionAddPropertyListener failed for kAudioSessionProperty_InterruptionInfo
 AudioSessionAddPropertyListener failed for kAudioSessionProperty_InputGainScalar
 AudioSessionAddPropertyListener failed for kAudioSessionProperty_CurrentHardwareOutputVolume
 AudioSessionAddPropertyListener failed for kAudioSessionProperty_AudioRouteChange
 AudioSessionAddPropertyListener failed for kAudioSessionProperty_AudioSpatializationCapabilityChange
 AudioSessionAddPropertyListener failed for kAudioSessionProperty_PromptStyle
 AudioSessionAddPropertyListener failed for kAudioSessionProperty_CurrentAudioFormats
 AudioSessionAddPropertyListener failed for kAudioSessionProperty_CurrentHardwareInputNumberChannels
 AudioSessionAddPropertyListener failed for kAudioSessionProperty_CurrentHardwareOutputNumberChannels
 AudioSessionAddPropertyListener failed for kAudioSessionProperty_SecondaryAudioShouldBeSilencedHint
 AudioSessionAddPropertyListener failed for kAudioSessionProperty_OtherPrimaryAudioPlayStateChange
 AudioSessionAddPropertyListener failed for kAudioSessionProperty_PickableRoutesChange
 AudioSessionAddPropertyListener failed for kAudioSessionProperty_AvailableSampleRatesChange
 AudioSessionAddPropertyListener failed for kAudioSessionProperty_BeaconBudgetChange
 AudioSessionAddPropertyListener failed for kAudioSessionProperty_PiPAvailable
 AudioSessionAddPropertyListener failed for kAudioSessionProperty_RoutingContextChange
%25s:%-5d Unexpected dictionary key %@. All keys must be NSStrings
%25s:%-5d Initialization failed because there is no run loop thread.
%25s:%-5d Synchronous connection to media server failed. Starting asynchronous connection attempt for session %p.
%25s:%-5d Lookup of session ID: 0x%x failed
%25s:%-5d This method is not supported if the AudioSession/NewXPCServer feature flag is not enabled
%25s:%-5d Cannot create side kick session: Invalid device ID
%25s:%-5d Creating side kick session for end point id: %@
%25s:%-5d Failed to get category, error: %s
%25s:%-5d No valid string for category: %u
%25s:%-5d Error: category option 'defaultToSpeaker' is only applicable with category 'playAndRecord'
%25s:%-5d Error while allocating for propertyData
%25s:%-5d Failed to set category, error: %s
%25s:%-5d Deactivating an audio session that has running I/O. All I/O should be stopped or paused prior to deactivating the audio session.
%25s:%-5d Permission already granted
%25s:%-5d Permission already denied
%25s:%-5d Permission undetermined
 Illegal permission property value returned from AudioSessionGetProperty
%25s:%-5d Got Permission value %d
%25s:%-5d Invalid value for input orientation.
%25s:%-5d ---> %s
%25s:%-5d consolidatedSourceContentInfo is nil
%25s:%-5d Failed to get DisplayIDsOfActiveSessions: %d
%25s:%-5d AudioSessionGetProperty failed with code: %d
%25s:%-5d Failed to get mode: %d
%25s:%-5d No valid string for mode: %u
%25s:%-5d Failed to set mode: %d
%25s:%-5d Setting route sharing policy to %s
%25s:%-5d Get powerBudget failed with code: %d
%25s:%-5d Get powerProfile failed with code: %d
%25s:%-5d Get HostProcessInfo failed with code: %d
%25s:%-5d Get PickedRoute failed with code: %d
%25s:%-5d Get AudioClockDevice failed with code: %d
%25s:%-5d error getting isSessionInputMuted: %d
%25s:%-5d Session 0x%x posting AVAudioSessionInterruptionNotification (Begin Interruption). Was suspended:%d
%25s:%-5d Session 0x%x posting AVAudioSessionInterruptionNotification (End Interruption). Resumable:%d
%25s:%-5d Session 0x%x posting AVAudioSessionMediaServicesWereLostNotification
%25s:%-5d Notifying listeners that available sample rates changed
%25s:%-5d Notifying listeners that available Beacon Budget changed
%25s:%-5d Notifying listeners that pickable routes changed
%25s:%-5d Session 0x%x posting AVAudioSessionSilenceSecondaryAudioHintNotification
%25s:%-5d Notifying listeners that play state for other primary audio sessions changed
%25s:%-5d Notifying listeners that routing context changed
%25s:%-5d Completion handler called for with invalid session ID
%25s:%-5d failed to re-apply mute state, muted: %d, err: %@
%25s:%-5d Session 0x%x posting AVAudioSessionMediaServicesWereResetNotification
%25s:%-5d enableNotifications: inValue = %d
%25s:%-5d prefersMultichannelAudio: inValue = %d
%25s:%-5d getMXSessionProperty: Invalid MXProperty provided
%25s:%-5d GetProperty_GenericPipe failed for %@
%25s:%-5d GetProperty_GenericPipe failed for %@:  Received value for wrong property
%25s:%-5d GetProperty_GenericPipe failed: value for property not received %@
%25s:%-5d setMXSessionProperty: Invalid MXProperty provided
%25s:%-5d Session 0x%x posting AVAudioSessionRouteChangeNotification. Reason: %s
%25s:%-5d Session 0x%x posting AVAudioSessionSpatialPlaybackCapabilitiesChangedNotification.
%25s:%-5d %@ category is not supported in combination with %s
%25s:%-5d %@ mode is not supported in combination with %s
%25s:%-5d 0x%x category option(s) not supported in combination with %s
%25s:%-5d BT activation contexts is missing its Device ID
%25s:%-5d Call activation context is missing the accesibility preference value
%25s:%-5d Call activation context is missing the call direction value
%25s:%-5d Bad cast for property %@
%25s:%-5d AudioSessionGetProperty (%@) failed with error: %s
%25s:%-5d AudioSessionGetProperty (%s) failed with error: %s
%25s:%-5d Unknown ID for DataSource
%25s:%-5d Unknown name for DataSource
%25s:%-5d Unknown owning Port ID for DataSource
%25s:%-5d Unknown selected polar pattern for DataSource.  There are %lu polar patterns
%25s:%-5d nil data source description
%25s:%-5d Invalid XPC connection, session ID = %u, property ID = %@
%25s:%-5d Invalid propertyID:%@. The property identifer must be an NSString.
%25s:%-5d session server connection %s
%25s:%-5d reconnection successful
 CAPThread::SetPriority: failed to set the fixed-priority policy, Error: 0x%X
 CAPThread::SetPriority: failed to set the precedence policy, Error: 0x%X
 CAPThread::SetTimeConstraints: thread_policy_set failed, Error: %d (%s)
 CAPThread::Start: can't start because the thread is already running
 CAPThread::Start: Thread attributes could not be created.
 CAPThread::Start: A thread could not be created in the detached state.
 CAPThread::Start: Could not create a thread.
%25s:%-5d CoreSimulator failed to supply SIMULATOR_AUDIO_SETTINGS_PATH; volume and mute will not work.
%25s:%-5d Failed to open audio settings path fd. Error: (%d) %s
%25s:%-5d Unexpected error %d attempting to lookup device by UID
%25s:%-5d Failed to open audio settings plist!
%25s:%-5d Failed to read audiosettings.plist: %s
%25s:%-5d Failed to get sim_ringer_state from audio settings.
%25s:%-5d Failed to get sim_volume from audio settings.
%25s:%-5d Failed to get sim_input_device_uid from audio settings.
%25s:%-5d Failed to get sim_output_device_uid from audio settings.
%25s:%-5d Received simulator settings update: inputDeviceUID=%s, inputDeviceID=%u, outputDeviceUID=%s, outputDevice=%u, ringerMuted=%s, volume=%.2f
%25s:%-5d Aborting (re)try for expired notifier for session %p.
%25s:%-5d Attempting to contact server for session %p
%25s:%-5d Calling completion handler for session %p
%25s:%-5d Connection succeeded, but registration of server death notification failed.
%25s:%-5d Encountered permanent connection failure for session %p.
%25s:%-5d Retrying connection for session %p. Attempt count: %d
%25s:%-5d Unexpected nil channel description
%25s:%-5d Session with ID 0x%x not found
%25s:%-5d Adding session %p with ID 0x%x
%25s:%-5d Session ID 0x%x is already in use
%25s:%-5d Session not valid! New ID is 0x%x
%25s:%-5d Updating session ID. Old: 0x%x, New: 0x%x
%25s:%-5d Session %p not found. Proceeding to adding entry with new session ID: 0x%x
%25s:%-5d Not expected to see error code %d!
%25s:%-5d -- %s failed to find a match for string "%@"
%25s:%-5d Failed to translate MX category: %@ to AVAS mode
%25s:%-5d Failed to translate AVAS category: %@ to MX mode
%25s:%-5d Failed to translate MX mode: %@ to AVAS mode
%25s:%-5d Failed to translate AVAS mode: %@ to mx mode
%25s:%-5d Failed to translate MX voice prompt style: %@ to AVAS prompt style
softlink:r:path:/System/Library/Frameworks/AudioToolbox.framework/AudioToolbox
softlink:r:path:/System/Library/Frameworks/AudioToolbox.framework/AudioToolbox
softlink:r:path:/System/Library/Frameworks/AudioToolbox.framework/AudioToolbox
softlink:r:path:/System/Library/Frameworks/AudioToolbox.framework/AudioToolbox
softlink:r:path:/System/Library/Frameworks/AudioToolbox.framework/AudioToolbox
softlink:r:path:/System/Library/Frameworks/AudioToolbox.framework/AudioToolbox
AVAudioSessionCallbackDispatcher
SessionManagerXPCServerCallbackProtocol
AVAudioIOController_iOS
AVAudioIOController
NSObject
AVAudioSessionPortDescription
AVAudioSession
AVAudioSessionDataSourceDescription
AVAudioSessionIOBinding
AVAudioSessionSpecification
NSSecureCoding
NSCoding
CommonImplementation
AVAudioSessionChannelDescription
AVAudioSessionRouteDescription
AVAudioSessionPrivate
bytes
length
pingClient:
IOControllerEvent:sessions:isDecoupledInput:
init
opaqueSessionID
getIOControllerPeriod:decoupledInput:reply:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
currentTime
createIOEventBlock:
destroyIOEventBlock:
setDeviceUID:error:
presentationTime
IOPeriod
isRunning
supportsPresentationTime
dynamicLatency
T{AVAudioIOPeriod=ddQf},R,N
running
TB,R,N,GisRunning
TB,R,N
T{AVAudioTimeInterval=ddQ},R,N
initWithSession:xpcConnection:timingStateSlot:isDecoupledInput:
timingStateSlot
setTimingStateSlot:
privateDispatchIOControllerEvent:
.cxx_destruct
.cxx_construct
impl
TI,N
setSession:decoupledInput:hasIOEventListeners:reply:
synchronousRemoteObjectProxyWithErrorHandler:
initWithInt:
count
isEqualToString:
dealloc
isEqualToPort:compareStrict:
portType
portName
channels
isEqualToArray:
dataSources
selectedDataSource
dataSourceName
stringWithFormat:
dataSourceID
errorWithDomain:code:userInfo:
privateGetImplementation
objectForKey:
boolValue
configureChannelsAndDataSources:
compare:
privateCreateArray:portUID:
allowAllBuiltInDataSources
initWithCapacity:
addObjectsFromArray:
privateCreateArray:portID:sessionID:
countByEnumeratingWithState:objects:count:
isEqualToNumber:
objectAtIndex:
initWithRawPortDescriptionXPC:owningSession:
initWithRawPortDescription:owningSession:
insertObject:atIndex:
initWithArray:
initWithString:
privateCreateArray:owningSession:
hasHardwareVoiceCallProcessing
isSpatialAudioEnabled
isLiveListenSupported
isHeadphones
isLowLatencyAirPlay
portSubType
endpointType
preferredDataSource
setPreferredDataSource:error:
privateGetID
setSupportsSpatialAudio:
initWithPortType:owningSession:
_impl
T@"NSString",R,N
TB,R
spatialAudioEnabled
TB,R,GisSpatialAudioEnabled
T@"NSArray",R,N
T@"AVAudioSessionDataSourceDescription",R,N
currentHandler
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
numberWithFloat:
doubleValue
unsignedIntValue
numberWithUnsignedInt:
numberWithDouble:
null
initWithBool:
privateInputIsAvailableChanged:
privateInterruptionWithInfo:
initWithFloat:
privateUpdateInputGain:
privateUpdateOutputVolume:
initWithUnsignedInteger:
privateUpdatePromptStyle:
privateUpdateAudioFormats:
privateHandlePickableRoutesChange
privateHandleAvailableSampleRatesChange
privateHandleBeaconBudgetChange:
privateHandleServerDied
privateUpdateInputChannelCount:
privateUpdateOutputChannelCount:
privateHandleSecondaryAudioHintChange:
privateHandleOtherPrimaryAudioPlayStateChange
privateUpdatePiPAvailabilityChange:
privateHandleRoutingContextChange
dictionaryWithObjects:forKeys:count:
privateSetBatchProperties:areMXProperties:
valueForKey:
sharedInstance
setSessionType:
initWithSpecification:
privateHandleServerConnectionCompletion:
sessionType
clientIdentifier
sourceSessionID
privateCreateSessionInServerUsingXPC
privateCreateSessionInServerUsingAudioToolbox:type:identifier:
privateMarkKVOPropertiesDirty:
allocWithZone:
initWithSessionType:
initWithSessionID:
setClientAuditToken:
setSourceSessionID:
setClientIdentifier:
isPrimary
privateNeedsTranslationForNoSpeakerCategory:
privateGetCachedReporterID
privateAllowsLongFormRoutingToSpeaker
containsObject:
arrayWithObjects:count:
privateSetAllowsLongFormRoutingToSpeaker:
numberWithBool:
setObject:forKey:
addObject:
numberWithUnsignedInteger:
addCategoryOptionsToDictionary:nonXPCArray:category:options:useXPC:
privateSetCategoryWithOptions:modes:routeSharingPolicy:options:
setActive:withOptions:error:
privateSetProperty:value:isMXProperty:
privateRequiresWatchOSRoutePicker
presentRoutePickerAlertIfNecessaryAndActivateAudioSession:options:completionHandler:
setActive:error:
setInterruptionPriority:error:
recordPermission
numberWithInteger:
currentRoute
inputs
outputs
defaultCenter
postNotificationName:object:userInfo:
privateGetNotificationStateForType:create:
floatValue
privateGetDataSources:
privateGetSelectedDataSource:
category
sampleRate
IOBufferFrameSize
array
privateSetRouteSharingPolicy:error:
initWithCategory:owningSession:
copy
initWithObjects:
setPreferredSampleRate:error:
mutableCopy
prefersNoInterruptionsFromSystemAlerts
setPrefersNoInterruptionsFromSystemAlerts:error:
isInputAvailable
inputNumberOfChannels
outputNumberOfChannels
preferredSampleRate
inputIsAvailableChanged:
beginInterruption
initWithObjectsAndKeys:
numberWithUnsignedLong:
privatePostNotificationForType:name:userInfo:
endInterruptionWithFlags:
endInterruption
routeSharingPolicy
muteSessionInput:error:
privateSetPropertyValue:withBool:error:
objectForKeyedSubscript:
retrieveSessionWithID:
primarySession
auxiliarySession
categoryEnablesInput:
privateHandlePing
privateRecreateSessionInServerUsingXPC
initSiblingSession:auditToken:clientIdentifier:
initAuxiliarySession
initWithSiriEndpointIdentifier:
categoryOptions
availableCategories
setCategory:error:
setCategory:withOptions:error:
setCategory:mode:options:error:
setCategory:mode:routeSharingPolicy:options:error:
activateWithOptions:completionHandler:
deactivateAndSetInterruptionPriority:error:
setActive:withFlags:error:
requestRecordPermission:
setPreferredIOBufferDuration:error:
setPreferredIOBufferFrameSize:error:
setPreferredInputNumberOfChannels:error:
setPreferredOutputNumberOfChannels:error:
setInputGain:error:
setInputDataSource:error:
setOutputDataSource:error:
setPreferredInputOrientation:error:
preferredInputOrientation
inputOrientation
outputVolume
promptStyle
setAllowHapticsAndSystemSoundsDuringRecording:error:
allowHapticsAndSystemSoundsDuringRecording
isActive
audioFormats
consolidatedSourceContentInfo
privateRegisterMXNotificationWithServer:
addObserverForType:name:block:
removeObserverForType:observer:name:
audioFormat
isDolbyDigitalEncoderAvailable
isEarpieceActiveNoiseCancelationEnabled
isPiPAvailable
forceSoundCheck
setForceSoundCheck:error:
lastActivationStoppedNowPlayingApp
requiresNoAudioResources
setRequiresNoAudioResources:error:
allowMixableAudioWhileRecording
setAllowMixableAudioWhileRecording:error:
participatesInNowPlayingAppPolicy
setParticipatesInNowPlayingAppPolicy:error:
eligibleForBTSmartRoutingConsideration
setEligibleForBTSmartRoutingConsideration:error:
eligibleForBTTriangleConsideration
setEligibleForBTTriangleConsideration:error:
prefersToAcquireHWControlFromOtherSessions
setPrefersToAcquireHWControlFromOtherSessions:error:
prefersNoMicrophoneUsageIndicator
setPrefersNoMicrophoneUsageIndicator:error:
participatesInMutePriority
setParticipatesInMutePriority:error:
recordingFromRemoteInput
setRecordingFromRemoteInput:error:
setAllowAllBuiltInDataSources:
setBypassRingerSwitchPolicy:error:
setAudioHardwareControlFlags:error:
setInterruptionFadeDuration:error:
setDuckingFadeOutDuration:fadeInDuration:error:
setDuckToLevelDB:error:
setDuckToLevelScalar:error:
isExpanseMediaSession
setIsExpanseMediaSession:error:
isHardwareFormatFixedToMultiChannel
fixHardwareFormatToMultiChannel:error:
inputGain
inputDataSources
inputDataSource
outputDataSources
outputDataSource
isInputGainSettable
isOtherAudioPlaying
secondaryAudioShouldBeSilencedHint
inputLatency
outputLatency
inputSafetyOffset
outputSafetyOffset
activeSessionDisplayIDs
IOBufferDuration
interruptionPriority
preferredIOBufferDuration
preferredIOBufferFrameSize
preferredInputNumberOfChannels
preferredOutputNumberOfChannels
maximumInputNumberOfChannels
maximumOutputNumberOfChannels
availableModes
mode
setMode:error:
auditTokensForProcessAssertion
setAuditTokensForProcessAssertion:error:
powerBudget
powerProfile
setPowerProfile:error:
subscribeToNotifications:error:
routingContextUID
setRoutingContextUID:error:
hostProcessAttribution
setHostProcessAttribution:error:
selectIndependentRoutingContext:
overrideOutputAudioPort:error:
setPreferredInput:error:
preferredInput
pickedRoute
setSupportsMultichannelContent:error:
supportsMultichannelContent
setAudioClockDevice:error:
audioClockDevice
speechDetectionDeviceSampleRate
availableInputs
privateRefreshAvailableInputs
delegate
setDelegate:
setPreferredHardwareSampleRate:error:
setActivationContext:error:
setDisallowedPorts:error:
silenceOutput:error:
isSessionInputMuted
defaultChatMode
setDefaultChatMode:error:
iAmTheAssistant
setIAmTheAssistant:error:
prefersNoInterruptionsByRingtonesAndAlerts
setPrefersNoInterruptionsByRingtonesAndAlerts:error:
prefersNoDucking
setPrefersNoDucking:error:
needsHighPowerBudgeting
setNeedsHighPowerBudgeting:error:
participatesInVolumePolicy
setParticipatesInVolumePolicy:error:
prefersToVibeWhenVibrationsAreDisabled
setPrefersToVibeWhenVibrationsAreDisabled:error:
defaultCalibratedOutputSPL
clearInputPreferences:
inputIsAvailable
currentHardwareSampleRate
currentHardwareInputNumberOfChannels
currentHardwareOutputNumberOfChannels
preferredHardwareSampleRate
preferDecoupledIO:error:
setAggregatedIOPreference:error:
decoupledIO
setPreferredInputSampleRate:error:
preferredInputSampleRate
setPreferredOutputSampleRate:error:
preferredOutputSampleRate
inputSampleRate
outputSampleRate
setSpeakerThermalGain:error:
setHapticThermalGain:error:
speakerThermalGain
hapticThermalGain
enableNotifications:error:
setPrefersMultichannelAudio:error:
prefersMultichannelAudio
privateUpdateDataSources:forInput:
privateUpdateAudioFormat:
isDolbyAtmosAvailable
getMXSessionProperty:error:
setMXSessionProperty:value:error:
IOController
decoupledInputIOController
T@"NSString",R
T@"NSArray",R
T@"AVAudioSessionPortDescription",R
initWithRawDescription:owningSession:
unsignedIntegerValue
firstObject
setWithArray:
exceptionWithName:reason:userInfo:
longLongValue
willChangeValueForKey:
didChangeValueForKey:
isEqualToDataSource:
privateGetOwningPortID
orientation
selectedPolarPattern
dictionaryWithObjectsAndKeys:
arrayWithObject:
isEqualToValue:
configurePolarPatterns:
arrayWithCapacity:
initWithRawSourceDescription:andOwningPortID:andSessionID:
location
preferredPolarPattern
supportedPolarPatterns
setPreferredPolarPattern:error:
privateMatchesRawDescription:
T@"NSNumber",R
setProperties:values:MXProperties:reply:
code
session
streams
initWithSession:
initWithSession:streams:error:
_session
_streams
T@"AVAudioSession",R,N,V_session
T@"NSArray",R,N,V_streams
initWithListenerEndpoint:
initWithMachServiceName:options:
setWithObjects:
getMXPropertyGenericPipe:propertyName:reply:
setClasses:forSelector:argumentIndex:ofReply:
getProperty:propertyName:MXProperty:reply:
setRemoteObjectInterface:
setExportedInterface:
setExportedObject:
setInterruptionHandler:
setInvalidationHandler:
resume
invalidate
pingWithReply:
encodeInteger:forKey:
dataWithBytes:length:
encodeObject:forKey:
encodeInt32:forKey:
decodeIntegerForKey:
decodeObjectOfClass:forKey:
getBytes:length:
decodeInt32ForKey:
decodeObjectForKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
clientAuditToken
_clientAuditToken
TQ,N,VsessionType
T{?=[8I]},N,V_clientAuditToken
TI,N,VsourceSessionID
T@"NSString",C,N,VclientIdentifier
isEqualToChannel:
channelName
owningPortUID
channelNumber
privateCreate:portUID:channelNumber:
channelLabel
TQ,R,N
TI,R,N
isEqualToRoute:
updateOutputPortsWithSpatialAudioStatus:
siriRemoteInputIdentifier
siriInputSource
supportsDoAP
supportsSoftwareVolume
allKeysForObject:
v20@0:8I16
v36@0:8Q16@24B32
v36@0:8Q16@"NSData"24B32
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}16@0:8
q24@0:8@?16
v24@0:8q16
B32@0:8@16^@24
{AudioPresentationTimeStamp=IIQdddd}16@0:8
{AVAudioIOPeriod=ddQf}16@0:8
{AVAudioTimeInterval=ddQ}16@0:8
q24@0:8@?<v@?Q>16
B32@0:8@"NSString"16^@24
@48@0:8@16{shared_ptr<as::client::XPCConnection>=^{XPCConnection}^{__shared_weak_count}}24I40B44
I16@0:8
v24@0:8Q16
v16@0:8
{optional<(anonymous namespace)::IOControllerImpl>=""(?="__null_state_"c"__val_"{IOControllerImpl="mSession"@"AVAudioSession""mIsDecoupledInput"B"mXPCConnection"{weak_ptr<as::client::XPCConnection>="__ptr_"^{XPCConnection}"__cntrl_"^{__shared_weak_count}}"mTimingStateSlot"{atomic<unsigned int>="__a_"{__cxx_atomic_impl<unsigned int, std::__cxx_atomic_base_impl<unsigned int>>="__a_value"AI}}"mDeviceTimeClient"^{DeviceTimeClient}"mListenerMgr"{synchronized<(anonymous namespace)::ListenerMgr, caulk::mach::unfair_lock, caulk::empty_atomic_interface<(anonymous namespace)::ListenerMgr>>="mMutex"{unfair_lock="m_lock"{os_unfair_lock_s="_os_unfair_lock_opaque"I}}"mObject"{ListenerMgr="mOuter"^{IOControllerImpl}"mListeners"{vector<std::pair<long, void (^)(AVAudioIOControllerEvent)>, std::allocator<std::pair<long, void (^)(AVAudioIOControllerEvent)>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::pair<long, void (^)(AVAudioIOControllerEvent)> *, std::allocator<std::pair<long, void (^)(AVAudioIOControllerEvent)>>>="__value_"^v}}}}})"__engaged_"B}
@32@0:8@16@24
B28@0:8@16B24
q16@0:8
^{PortDescriptionImpl=@@@@@BBBBBqQ@@@@}16@0:8
v20@0:8B16
v24@0:8@16
@20@0:8I16
i36@0:8@16@24B32
i28@0:8@16B24
B36@0:8^v16I24@28
@24@0:8@16
@60@0:8I16{?=[8I]}20@52
v52@0:8@16@24@32Q40B48
i48@0:8@16@24Q32Q40
B40@0:8@16Q24^@32
B48@0:8@16@24Q32^@40
B56@0:8@16@24Q32Q40^@48
B28@0:8B16^@20
B36@0:8B16Q20^@28
v32@0:8Q16@?24
B32@0:8q16^@24
B36@0:8B16q20^@28
v24@0:8@?16
B32@0:8d16^@24
B32@0:8Q16^@24
B28@0:8f16^@20
f16@0:8
C24@0:8@16
v40@0:8Q16@24@32
@40@0:8Q16@24@?32
B40@0:8@16@24^@32
^v16@0:8
@20@0:8B16
{shared_ptr<AVAudioSessionNotificationState>=^{AVAudioSessionNotificationState}^{__shared_weak_count}}28@0:8Q16B24
d16@0:8
B24@0:8^@16
v24@0:8{ConnectionResult=iI}16
B32@0:8I16B20^@24
v28@0:8@16B24
@32@0:8@16^@24
@36@0:8@16@24I32
^{DataSourceDescriptionImpl=I@@@@@@@@}16@0:8
@40@0:8@16@24^@32
@"AVAudioSession"
@"NSArray"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
{?=[8I]}16@0:8
v48@0:8{?=[8I]}16
@"NSString"
{?="val"[8I]}
^{ChannelDescriptionImpl=@@II}16@0:8
^{RouteDescriptionImpl=@@@QBB}16@0:8
mcpl
ulbc
kpsc
kcud
ximc
tnis
srwn
cimo
taca
edom
pstr
dafd
dafu
CAException
v8@?0
AVAudioSession Notify Thread
AVAudioSessionGenericRunLoopThread.mm
array::at
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
v16@?0@"NSError"8
v32@?0@"NSError"8d16Q24
AVAudioSessionPortImpl.mm
Unknown
<%@: %p, type = %@; name = %@; UID = %@; selectedDataSource = %@>
kMXSession_RouteDetailedDescriptionKey_ID
kMXSession_RouteDetailedDescriptionKey_PortType
kMXAudioRoute_USBInput
kMXAudioRoute_USB
kMXAudioRoute_IDAM
kMXAudioRoute_MicrophoneBluetooth
kMXAudioRoute_HeadsetBT
kMXAudioRoute_HeadphonesBT
kMXAudioRoute_BluetoothLEOutput
kMXAudioRoute_CarAudioInput
kMXAudioRoute_CarAudioOutput
kMXAudioRoute_AirTunes
kMXAudioRoute_AirPlayLowLatency
kMXAudioRoute_Headphone
kMXAudioRoute_TTY
kMXAudioRoute_HDMI
kMXAudioRoute_DisplayPort
kMXAudioRoute_SystemCapture
kMXAudioRoute_Thunderbolt
kMXAudioRoute_ThunderboltInput
kMXAudioRoute_LineIn
kMXAudioRoute_LineOut
kMXAudioRoute_MicrophoneBuiltIn
kMXAudioRoute_MicrophoneWired
kMXAudioRoute_Receiver
kMXAudioRoute_Speaker
kMXAudioRoute_SPDIF
kMXSession_RouteDetailedDescriptionKey_Name
kMXSession_RouteDetailedDescriptionKey_UID
kMXSession_RouteDetailedDescriptionKey_IsHeadphones
kMXSession_RouteDetailedDescriptionKey_VoiceProcessingIsSupported
kMXSession_RouteDetailedDescriptionKey_LiveListenIsSupported
kMXSession_RouteDetailedDescriptionKey_EndpointType
RouteDetailedDescription_ID
ThunderboltInput
ThunderboltOutput
RouteDetailedDescription_IsHeadphones
RouteDetailedDescription_IsVoiceProcessingSupported
RouteDetailedDescription_IsLiveListenSupported
RouteDetailedDescriptionKey_EndpointType
kMXSession_RouteDetailedDescriptionKey_SelectedDataSource
RouteDetailedDescription_SelectedDataSource
kMXSession_RouteDetailedDescriptionKey_ChannelDescriptions
kMXSession_RouteDetailedDescriptionKey_DataSources
RouteDetailedDescription_DataSources
kMXSession_RouteDetailedDescriptionKey_HiddenDataSources
RouteDetailedDescription_HiddenDataSources
NSString *getkAudioSession_AudioRouteKey_Type()
SoftLinking_AudioToolbox_iOS.h
kAudioSession_AudioRouteKey_Type
void *AudioToolboxLibrary()
NSString *getkAudioSessionInputRoute_USBAudio()
kAudioSessionInputRoute_USBAudio
NSString *getkAudioSessionOutputRoute_USBAudio()
kAudioSessionOutputRoute_USBAudio
NSString *getkAudioSessionInputRoute_BluetoothHFP()
kAudioSessionInputRoute_BluetoothHFP
NSString *getkAudioSessionOutputRoute_BluetoothHFP()
kAudioSessionOutputRoute_BluetoothHFP
NSString *getkAudioSessionInputRoute_CarAudio()
kAudioSessionInputRoute_CarAudio
NSString *getkAudioSessionOutputRoute_CarAudio()
kAudioSessionOutputRoute_CarAudio
NSString *getkAudioSessionOutputRoute_AirPlayLowLatency()
kAudioSessionOutputRoute_AirPlayLowLatency
NSString *getkAudioSession_AudioRouteKey_Name()
kAudioSession_AudioRouteKey_Name
NSString *getkAudioSession_AudioRouteKey_UID()
kAudioSession_AudioRouteKey_UID
NSString *getkAudioSession_AudioRouteKey_ChannelDescriptions()
kAudioSession_AudioRouteKey_ChannelDescriptions
com.apple.audio.SimulatorDeviceEventQueue
kMXSessionAudioCategory_AmbientSound
kMXSessionAudioCategory_SoloAmbientSound
AVAudioSessionImpl_Simulator.mm
kMXSessionProperty_UserVolume
kMXSessionProperty_CurrentSpeechDetectionDeviceSampleRate
kMXSessionProperty_CurrentInputSampleRate
kMXSessionProperty_AudioCategory
kAudioSessionPropertyXPC_PreferredHardwareSampleRate
kMXSessionProperty_PreferredAudioHardwareIOBufferFrames
kMXSessionProperty_PreferredAudioHardwareIOBufferDuration
kMXSessionProperty_InterruptionStyle
kMXSessionProperty_RouteSharingPolicy
kMXSessionProperty_AllowedRouteTypes
kMXSessionProperty_WantsToPauseSpokenAudio
kMXSessionProperty_CategoryCustomization_DefaultBuiltInRoute
kMXSessionProperty_CategoryCustomization_EnableBluetoothRecording
kMXSessionProperty_PrefersNoInterruptionWhenSecureMicrophoneIsEngaged
kMXSessionProperty_CurrentOutputSampleRate
kMXSessionProperty_CurrentInputDeviceBufferSize
kMXSessionProperty_CurrentOutputDeviceBufferSize
kMXSessionProperty_AudioMode
kMXSessionAudioMode_Default
kMXSessionProperty_IsActive
kMXSessionProperty_PreferredInputSampleRate
kMXSessionProperty_PreferredOutputSampleRate
kMXSessionProperty_PreferredNumberOfInputChannels
kMXSessionProperty_PreferredNumberOfOutputChannels
kMXSessionProperty_ClientPriority
kMXSessionProperty_PreferredStereoInputOrientation
kMXSessionProperty_CurrentStereoInputOrientation
kMXSessionProperty_AllowSystemSoundsWhileRecording
kMXSessionProperty_PhysicalFormatsSupported
kMXSessionProperty_ConsolidatedSourceFormatInfo
kMXSessionProperty_CurrentAudioHardwareFormat
kMXSessionProperty_ForceSoundCheck
kMXSessionProperty_NowPlayingAppWasStoppedOnMostRecentActivation
kMXSessionProperty_IsLongFormAudio
kMXSessionProperty_DoesntActuallyPlayAudio
kMXSessionProperty_AllowMixableAudioWhileRecording
kMXSessionProperty_IsEligibleForNowPlayingAppConsideration
kMXSessionProperty_IsEligibleForBTSmartRoutingConsideration
temp_kMXSessionProperty_IsEligibleForBTTriangleConsideration
kMXSessionProperty_PrefersToTakeHWControlFlagsFromAnotherSession
kMXSessionProperty_PrefersSuppressingRecordingState
kMXSessionProperty_OptOutOfMutePriority
kMXSessionProperty_IgnoreRingerSwitch
kMXSessionProperty_AudioHardwareControlFlags
kMXSessionProperty_InterruptionFadeDuration
kMXSessionProperty_DuckFadeDuration
kMXSessionProperty_UnduckFadeDuration
kMXSessionProperty_DuckToLevelScalar
kMXSessionProperty_DuckToLevelDB
kMXSessionProperty_IsExpanseMediaSession
kMXSessionProperty_ReporterIDs
kMXSessionProperty_DisallowAudioFormatChanges
kMXSessionProperty_InputGainScalar
kMXSessionProperty_InputGainAvailable
kMXSessionProperty_SomeOtherClientIsPlaying
kMXSessionProperty_SomeOtherNonAmbientAudioCategoryClientIsPlaying
kMXSessionProperty_CurrentInputLatency
kMXSessionProperty_CurrentOutputLatency
kMXSessionProperty_CurrentAudioHardwareInputNumberChannels
kMXSessionProperty_CurrentAudioHardwareOutputNumberChannels
kMXSessionProperty_MaximumNumberOfInputChannels
kMXSessionProperty_MaximumNumberOfOutputChannels
kMXSessionProperty_ProcessAssertionAuditTokens
kMXSessionProperty_RoutingContextUUID
kMXSessionProperty_OverrideRoute
kMXSessionProperty_PreferredInputs
kMXSessionProperty_DeselectedInputs
kMXSessionProperty_PickedRoute
kMXSessionProperty_AudioClockDevice
kMXSessionProperty_SelectableInputs
kMXSessionProperty_ActivationContext
kMXSessionProperty_ExcludedRoutes
kMXSessionProperty_DefaultVPChatMode
kMXSessionProperty_IAmTheAssistant
kMXSessionProperty_PrefersNoInterruptionsByRingtonesAndAlerts
kMXSessionProperty_PrefersNoDucking
kMXSessionProperty_NeedsAudioBudget
kMXSessionProperty_WantsToBeVolumeButtonClient
kMXSessionProperty_PrefersToVibeWhenVibrationsAreDisabled
kMXSessionProperty_PreferredDecoupledInputOutput
kMXSessionProperty_RequiresAggregatedInputOutput
kMXSessionProperty_IsInputOutputDecoupled
kMXSessionProperty_PrefersMultichannelAudio
kMXSessionProperty_MATAtmosIsAvailable
kCMSessionGlobalProperty_CurrentInputSafetyOffset
kCMSessionGlobalProperty_CurrentOutputSafetyOffset
kCMSessionGlobalProperty_ThermalGainAdjustment_Speaker
kCMSessionGlobalProperty_ThermalGainAdjustment_Haptics
temp_kMXSessionProperty_DefaultCalibratedOutputVolume
kMXSessionProperty_BestAvailableContentType
kMXSession_SourceFormatInfoKey_BestAvailableContentType_Stereo
kAudioSessionPropertyXPC_AudioInputAvailable
kAudioSessionPropertyXPC_MuteSessionInputs
kAudioSessionPropertyXPC_RecordingFromRemoteInput
map::at:  key not found
TCCUtils.mm
v24@?0@"NSObject<OS_tcc_authorization_record>"8^{__CFError=}16
com.avaudiosession.tccserver
GenericPipeMetadata_MXPropertyName
GenericPipeMetadata_MXPropertyValue
GenericPipeMetadata_IsNullValue
AVAudioSession_iOS.mm
-[AVAudioSession category]
-[AVAudioSession privateSetCategoryWithOptions:modes:routeSharingPolicy:options:]
[AVAudioSession setActive:activate]
[AVAudioSession setActive:deactivate]
v16@?0Q8
v12@?0C8
VirtualAudio
stereo_capture_interface
TRUE
FALSE
kCMSessionGlobalProperty_DisplayIDsOfActiveSessions
kMXSessionProperty_PowerBudget
kMXSessionProperty_PowerProfile
kMXSessionProperty_SubscribeToNotifications
kAudioSessionPropertyXPC_HostProcessAttribution
kMXSession_SourceFormatInfoKey_BestAvailableContentType_Multichannel
kMXSessionAudioMode_VoiceChat
kMXSessionAudioMode_GameChat
kMXSessionAudioMode_VideoChat
kMXSessionAudioMode_VideoChatForMedia
kCMSessionGlobalNotificationKey_ActiveAudioRouteDidChange_Reason
kCMSessionGlobalNotificationKey_ActiveAudioRouteDidChange_OldDetailedRoute
kCMSessionGlobalNotificationKey_ActiveAudioRouteDidChange_NewDetailedRoute
NSString *getkAudioSession_RouteChangeKey_Reason()
kAudioSession_RouteChangeKey_Reason
NSString *getkAudioSession_AudioRouteChangeKey_PreviousRouteDescription()
kAudioSession_AudioRouteChangeKey_PreviousRouteDescription
NSString *getkAudioSession_AudioRouteChangeKey_CurrentRouteDescription()
kAudioSession_AudioRouteChangeKey_CurrentRouteDescription
outputVolume
inputGain
inputDataSources
outputDataSources
promptStyle
isPiPAvailable
audioFormats
audioFormat
inputNumberOfChannels
outputNumberOfChannels
0x%x
RouteSharingPolicyException
Illegal route sharing policy specified
com.apple.AVAudioSessionActivation
com.apple.AVAudioSessionNotification
AVAudioSessionRouteSharingPolicyDefault
AVAudioSessionRouteSharingPolicyLongFormAudio
AVAudioSessionRouteSharingPolicyIndependent
AVAudioSessionRouteSharingPolicyLongFormVideo
unknown route sharing policy
temp_kMXSessionNotification_MandrakeBudgetDidChange
AVAudioSessionUtilities.h
kCMSessionGlobalProperty_VoicePromptStyle
AVAudioSessionDataSourceImpl.mm
<%@: %p, ID = %@; name = %@>
NSString *getkAudioSession_DataSourceDescriptionKey_ID()
kAudioSession_DataSourceDescriptionKey_ID
NSString *getkAudioSession_DataSourceDescriptionKey_Name()
kAudioSession_DataSourceDescriptionKey_Name
NSString *getkAudioSession_DataSourceDescriptionKey_MicrophoneRegion()
kAudioSession_DataSourceDescriptionKey_MicrophoneRegion
NSString *getkAudioSession_DataSourceDescriptionKey_MicrophoneOrientation()
kAudioSession_DataSourceDescriptionKey_MicrophoneOrientation
NSString *getkAudioSession_DataSourceDescriptionKey_SelectedMicrophonePolarPattern()
kAudioSession_DataSourceDescriptionKey_SelectedMicrophonePolarPattern
NSString *getkAudioSession_DataSourceDescriptionKey_AvailableMicrophonePolarPatterns()
kAudioSession_DataSourceDescriptionKey_AvailableMicrophonePolarPatterns
<AVAudioSessionIOBinding@%p: session %@, streams %@>
AVAudioSession Error
Bad parameter
com.apple.audio.AudioSession
interrupted
invalidated
sc_XPCConnection.mm
assertion failure: mReconnectionStage != reconnectionStages.cend()
assertion failure: mReconnectionStage != getReconnectionStages().cend()
v24@?0@"NSError"8@"NSString"16
com.apple.coreaudio
as_client
AudioSessionSimulatorNoToolbox
AudioSession
SimulatorNoToolboxDependency
sessionType
clientAuditToken
sourceSessionID
clientIdentifier
clientIdentifer
SIMULATOR_AUDIO_SETTINGS_PATH
SimulatorDeviceSettings.cpp
details unavailable
sim_ringer_state
sim_volume
sim_input_device_uid
sim_output_device_uid
Could not construct
Could not convert
Null run loop
Invalid completion handler
SessionConnector.mm
nVh/gwNpy7Jv1NOk00CMrw
<%@: %p, name = %@; label = %u (0x%x); number = %d; port UID = %@>
AVAudioSessionChannelImpl.mm
kMXSession_RouteDetailedDescriptionKey_ChannelDescriptions_Name
kMXSession_RouteDetailedDescriptionKey_ChannelDescriptions_Label
NSString *getkAudioSession_ChannelDescriptionKey_Name()
kAudioSession_ChannelDescriptionKey_Name
NSString *getkAudioSession_ChannelDescriptionKey_Label()
kAudioSession_ChannelDescriptionKey_Label
AudioSessionCreateForID
OSStatus softLink_AudioSessionCreateForID(AudioSessionID)
SoftLinking_AudioToolbox_iOS.mm
AudioSessionDestroySession_Priv
OSStatus softLink_AudioSessionDestroySession_Priv(AudioSessionID)
AudioSessionCopyProperty_Priv
OSStatus softLink_AudioSessionCopyProperty_Priv(AudioSessionID, AudioSessionPropertyID, UInt32 *, void *)
AudioSessionCopyPropertyGenericPipe_Priv
OSStatus softLink_AudioSessionCopyPropertyGenericPipe_Priv(AudioSessionID, AudioSessionPropertyID, CFStringRef, UInt32 *, void *)
AudioSessionSetProperty_Priv
OSStatus softLink_AudioSessionSetProperty_Priv(AudioSessionID, AudioSessionPropertyID, UInt32, const void *)
AudioSessionAddPropertyListener_Priv
OSStatus softLink_AudioSessionAddPropertyListener_Priv(AudioSessionID, AudioSessionPropertyID, AudioSessionPropertyListener, void *)
AudioSessionRemovePropertyListener_Priv
OSStatus softLink_AudioSessionRemovePropertyListener_Priv(AudioSessionID, AudioSessionPropertyID, AudioSessionPropertyListener, void *)
AudioSessionSetActive_Priv
OSStatus softLink_AudioSessionSetActive_Priv(AudioSessionID, Boolean, UInt32)
AudioSessionDeactivateAndSetPriority_Priv
OSStatus softLink_AudioSessionDeactivateAndSetPriority_Priv(AudioSessionID, UInt32)
AudioSessionRequestRecordPermission
void softLink_AudioSessionRequestRecordPermission(void (^__strong)(Boolean))
AudioSessionCreateSessionWithIdentifier_Priv
OSStatus softLink_AudioSessionCreateSessionWithIdentifier_Priv(CFRunLoopRef, CFStringRef, AudioSessionInterruptionListener, void *, AudioSessionType, CFStringRef, AudioSessionID *)
SessionMap.mm
attempting to add a session with an ID that's already in use
unexpected nil value
<%@: %p, 
inputs = %@; 
outputs = %@>
kMXSession_RouteDetailedDescriptionKey_Inputs
kMXSession_RouteDetailedDescriptionKey_Outputs
kMXSession_RouteDetailedDescriptionKey_SiriInputDeviceUUID
RouteDetailedDescription_SiriInputDeviceUUID
kMXSession_RouteDetailedDescriptionKey_SiriInputSource
RouteDetailedDescription_SiriInputSource
kMXSession_RouteDetailedDescriptionKey_SupportsDoAP
RouteDetailedDescription_SupportsDoAP
kMXSession_RouteDetailedDescriptionKey_SupportsSoftwareVolume
RouteDetailedDescription_SupportsSoftwareVolume
RouteDetailedDescription_IsSpatialAudioEnabled
NSString *getkAudioSession_AudioRouteKey_Inputs()
kAudioSession_AudioRouteKey_Inputs
NSString *getkAudioSession_AudioRouteKey_Outputs()
kAudioSession_AudioRouteKey_Outputs
SelectedRouteDescription_RouteID
SelectedRouteDescription_DataSourceID
SelectedRouteDescription_MicrophonePolarPattern
Session initialization error. Recent media server termination?
Operation not permitted while session has running audio I/Os
Resource not available
AVAudioSessionUtilities.mm
kCMSessionVoicePromptStyle_None
kCMSessionVoicePromptStyle_Short
kCMSessionVoicePromptStyle_Normal
Category Value Converter
AVAudioSessionCategoryEARC
Endpoint Value Converter
Unspecified
Headphones
Vehicle
Speakers
Mode Value Converter
Polar Pattern Value Converter
Location Value Converter
Orientation Value Converter
kMXSessionProperty_CurrentAudioHardwareSampleRate
kMXSessionAudioHardwareFormat_LPCM
AVAudioSessionRouteChangeReasonUnknown
AVAudioSessionRouteChangeReasonNewDeviceAvailable
AVAudioSessionRouteChangeReasonOldDeviceUnavailable
AVAudioSessionRouteChangeReasonCategoryChange
AVAudioSessionRouteChangeReasonOverride
AVAudioSessionRouteChangeReasonWakeFromSleep
AVAudioSessionRouteChangeReasonNoSuitableRouteForCategory
AVAudioSessionRouteChangeReasonRouteConfigurationChange
unknown route change reason
kMXSessionAudioCategory_AudioProcessing
kMXSessionAudioCategory_MediaPlayback
kMXSessionAudioCategory_Record
kMXSessionAudioCategory_PlayAndRecord
kMXSessionAudioCategory_Multi
kMXSessionAudioCategory_VoiceOver
kMXSessionAudioCategory_VoiceCommand
kMXSessionAudioCategory_RingtonePreview
kMXSessionAudioCategory_Ringtone
kMXSessionAudioCategory_Voicemail
kMXSessionAudioCategory_PhoneCall
kMXSessionAudioCategory_TTYCall
kMXSessionAudioCategory_Alarm
kMXSessionAudioCategory_MediaPlaybackNoSpeaker
kMXSessionAudioCategory_EmergencyAlert
kMXSessionAudioCategory_EmergencyAlert_Muteable
kMXSessionAudioCategory_FindMyPhone
kMXSessionAudioCategory_WaterEjection
kMXSessionAudioCategory_FindMyAudioDevice
kMXSessionAudioCategory_SystemSoundsAndHaptics
kMXSessionAudioCategory_eARC
kMXSessionAudioMode_VideoRecording
kMXSessionAudioMode_Measurement
kMXSessionAudioMode_MoviePlayback
kMXSessionAudioMode_SpokenAudio
temp_kMXSessionAudioMode_Sleep
temp_kMXSessionAudioMode_SoundRecognition
kMXSessionAudioMode_SpeechRecognition
kMXSessionAudioMode_VoicePrompt
kMXSessionAudioMode_Raw
kMXSessionAudioMode_VoiceMessages
kMXSessionAudioMode_FindMyPhone
kMXSessionAudioMode_HearingAccessibility
kMXSessionAudioMode_LivePhoto
kMXSessionAudioMode_SOSNotification
kMXSessionAudioMode_SpatialRecording
kMXSessionAudioMode_Skeuomorphic
kMXSessionAudioMode_CustomVolume
kMXSessionAudioMode_LowLatency
temp_kMXSessionAudioMode_Beacon
BestAvailableContentType
CurrentlyPlayingFormat
CurrentlyPlayingChannelCount
CurrentlyPlayingContentIsEligibleForSpatialization
CurrentlyPlayingContentIsSpatialized
AVAudioSessionCategoryAmbient
AVAudioSessionCategorySoloAmbient
AVAudioSessionCategoryPlayback
AVAudioSessionCategoryRecord
AVAudioSessionCategoryPlayAndRecord
AVAudioSessionCategoryAudioProcessing
AVAudioSessionCategoryMultiRoute
AVAudioSessionCategoryVoiceOver
AVAudioSessionCategoryVoiceCommand
AVAudioSessionCategoryRingtonePreview
AVAudioSessionCategoryRingtone
AVAudioSessionCategoryVoiceMail
AVAudioSessionCategoryPhoneCall
AVAudioSessionCategoryTTYCall
AVAudioSessionCategoryAlarm
AVAudioSessionCategoryPlaybackNoSpeaker
AVAudioSessionCategoryEmergencyAlert
AVAudioSessionCategoryEmergencyAlert_CanBeMuted
AVAudioSessionCategoryFindMyPhone
AVAudioSessionCategoryWaterEjection
AVAudioSessionCategoryFindMyDevice
AVAudioSessionCategorySystemSoundsAndHaptics
AVAudioSessionModeDefault
AVAudioSessionModeVoiceChat
AVAudioSessionModeGameChat
AVAudioSessionModeVideoRecording
AVAudioSessionModeMeasurement
AVAudioSessionModeMoviePlayback
AVAudioSessionModeSpokenAudio
AVAudioSessionModeVideoChat
AVAudioSessionModeSpeechRecognition
AVAudioSessionModeVoicePrompt
AVAudioSessionModeRaw
AVAudioSessionModeVoiceMessages
AVAudioSessionModeLocatePhone
AVAudioSessionModeHearingAccessibility
AVAudioSessionModeLivePhoto
AVAudioSessionModeSOS
AVAudioSessionModeSpatialRecording
AVAudioSessionModeVideoChatForMedia
AVAudioSessionModeHapticsConstantVolume
AVAudioSessionModeEmergencyAlert
AVAudioSessionModeLowLatency
AVAudioSessionModeSleepTimer
AVAudioSessionModeSoundRecognition
AVAudioSessionModeBeacon
Upper
Lower
Bottom
Front
Back
Left
Right
Omnidirectional
Cardioid
Subcardioid
Stereo
LineIn
MicrophoneBuiltIn
MicrophoneWired
LineOut
BluetoothA2DPOutput
Receiver
Speaker
HDMIOutput
AirPlay
S/PDIF
BluetoothLE
BluetoothHFP
USBAudio
CarAudio
Virtual
FireWire
DisplayPort
Thunderbolt
AVAudioSessionInterruptionNotification
AVAudioSessionRouteChangeNotification
AVAudioSessionMediaServicesWereLostNotification
AVAudioSessionMediaServicesWereResetNotification
AVAudioSessionSilenceSecondaryAudioHintNotification
AVAudioSessionSpatialPlaybackCapabilitiesChangedNotification
AVAudioSessionAvailableSampleRatesChangeNotification
AVAudioSessionBeaconBudgetChangeNotification
AVAudioSessionPickableRouteChangeNotification
AVAudioSessionRoutingContextChangeNotification
AVAudioSessionOtherPrimaryAudioPlayStateChangeNotification
AVAudioSessionInterruptionTypeKey
AVAudioSessionInterruptionOptionKey
AVAudioSessionInterruptorNameKey
AVAudioSessionInterruptionWasSuspendedKey
AVAudioSessionInterruptionReasonKey
AVAudioSessionRouteChangeReasonKey
AVAudioSessionRouteChangePreviousRouteKey
AVAudioSessionSpatializationEnabledKey
AVAudioSessionSilenceSecondaryAudioHintTypeKey
activation trigger
activation device uid
activation accessibility preference
activation call direction
St11logic_error
St12length_error
nwku
@vppaptuo
St12out_of_range
L=St9exception
St12bad_any_cast
St8bad_cast
NSt3__117bad_function_callE
NSt3__112bad_weak_ptrE
11CAException
ddiubolgSt13runtime_error
%25s:%-5d Failed to start internal run loop thread
%25s:%-5d Unknown ID for Port
%25s:%-5d Unknown type for Port
%25s:%-5d Unknown name for Port
%25s:%-5d Unknown UID for Port
%25s:%-5d Unknown selected data source for Port %@ (type: %@)
%25s:%-5d Unexpected nil value for port description
%25s:%-5d Failed to set processVolumeScalar on device. Error: %d
%25s:%-5d Set volume on device %u to %.2f
%25s:%-5d Unsupported property: %@
%25s:%-5d tcc_server_message_request_authorization(%s) failed: %@
%25s:%-5d interruption callback
%25s:%-5d Received a pickable routes change notification
%25s:%-5d Received an available sample rates change notification
%25s:%-5d Received an Beacon budget change notification
%25s:%-5d Received a server death notification
%25s:%-5d Received a routing context change notification
 AudioSessionAddPropertyListener failed for kAudioSessionProperty_AudioInputAvailable
 AudioSessionAddPropertyListener failed for kAudioSessionProperty_InterruptionInfo
 AudioSessionAddPropertyListener failed for kAudioSessionProperty_InputGainScalar
 AudioSessionAddPropertyListener failed for kAudioSessionProperty_CurrentHardwareOutputVolume
 AudioSessionAddPropertyListener failed for kAudioSessionProperty_AudioRouteChange
 AudioSessionAddPropertyListener failed for kAudioSessionProperty_AudioSpatializationCapabilityChange
 AudioSessionAddPropertyListener failed for kAudioSessionProperty_PromptStyle
 AudioSessionAddPropertyListener failed for kAudioSessionProperty_CurrentAudioFormats
 AudioSessionAddPropertyListener failed for kAudioSessionProperty_CurrentHardwareInputNumberChannels
 AudioSessionAddPropertyListener failed for kAudioSessionProperty_CurrentHardwareOutputNumberChannels
 AudioSessionAddPropertyListener failed for kAudioSessionProperty_SecondaryAudioShouldBeSilencedHint
 AudioSessionAddPropertyListener failed for kAudioSessionProperty_OtherPrimaryAudioPlayStateChange
 AudioSessionAddPropertyListener failed for kAudioSessionProperty_PickableRoutesChange
 AudioSessionAddPropertyListener failed for kAudioSessionProperty_AvailableSampleRatesChange
 AudioSessionAddPropertyListener failed for kAudioSessionProperty_BeaconBudgetChange
 AudioSessionAddPropertyListener failed for kAudioSessionProperty_PiPAvailable
 AudioSessionAddPropertyListener failed for kAudioSessionProperty_RoutingContextChange
%25s:%-5d Unexpected dictionary key %@. All keys must be NSStrings
%25s:%-5d Initialization failed because there is no run loop thread.
%25s:%-5d Synchronous connection to media server failed. Starting asynchronous connection attempt for session %p.
%25s:%-5d Lookup of session ID: 0x%x failed
%25s:%-5d This method is not supported if the AudioSession/NewXPCServer feature flag is not enabled
%25s:%-5d Cannot create side kick session: Invalid device ID
%25s:%-5d Creating side kick session for end point id: %@
%25s:%-5d Failed to get category, error: %s
%25s:%-5d No valid string for category: %u
%25s:%-5d Error: category option 'defaultToSpeaker' is only applicable with category 'playAndRecord'
%25s:%-5d Error while allocating for propertyData
%25s:%-5d Failed to set category, error: %s
%25s:%-5d Deactivating an audio session that has running I/O. All I/O should be stopped or paused prior to deactivating the audio session.
%25s:%-5d Permission already granted
%25s:%-5d Permission already denied
%25s:%-5d Permission undetermined
 Illegal permission property value returned from AudioSessionGetProperty
%25s:%-5d Got Permission value %d
%25s:%-5d Invalid value for input orientation.
%25s:%-5d ---> %s
%25s:%-5d consolidatedSourceContentInfo is nil
%25s:%-5d Failed to get DisplayIDsOfActiveSessions: %d
%25s:%-5d AudioSessionGetProperty failed with code: %d
%25s:%-5d Failed to get mode: %d
%25s:%-5d No valid string for mode: %u
%25s:%-5d Failed to set mode: %d
%25s:%-5d Setting route sharing policy to %s
%25s:%-5d Get powerBudget failed with code: %d
%25s:%-5d Get powerProfile failed with code: %d
%25s:%-5d Get HostProcessInfo failed with code: %d
%25s:%-5d Get PickedRoute failed with code: %d
%25s:%-5d Get AudioClockDevice failed with code: %d
%25s:%-5d error getting isSessionInputMuted: %d
%25s:%-5d Session 0x%x posting AVAudioSessionInterruptionNotification (Begin Interruption). Was suspended:%d
%25s:%-5d Session 0x%x posting AVAudioSessionInterruptionNotification (End Interruption). Resumable:%d
%25s:%-5d Session 0x%x posting AVAudioSessionMediaServicesWereLostNotification
%25s:%-5d Notifying listeners that available sample rates changed
%25s:%-5d Notifying listeners that available Beacon Budget changed
%25s:%-5d Notifying listeners that pickable routes changed
%25s:%-5d Session 0x%x posting AVAudioSessionSilenceSecondaryAudioHintNotification
%25s:%-5d Notifying listeners that play state for other primary audio sessions changed
%25s:%-5d Notifying listeners that routing context changed
%25s:%-5d Completion handler called for with invalid session ID
%25s:%-5d failed to re-apply mute state, muted: %d, err: %@
%25s:%-5d Session 0x%x posting AVAudioSessionMediaServicesWereResetNotification
%25s:%-5d enableNotifications: inValue = %d
%25s:%-5d prefersMultichannelAudio: inValue = %d
%25s:%-5d getMXSessionProperty: Invalid MXProperty provided
%25s:%-5d GetProperty_GenericPipe failed for %@
%25s:%-5d GetProperty_GenericPipe failed for %@:  Received value for wrong property
%25s:%-5d GetProperty_GenericPipe failed: value for property not received %@
%25s:%-5d setMXSessionProperty: Invalid MXProperty provided
%25s:%-5d Session 0x%x posting AVAudioSessionRouteChangeNotification. Reason: %s
%25s:%-5d Session 0x%x posting AVAudioSessionSpatialPlaybackCapabilitiesChangedNotification.
%25s:%-5d %@ category is not supported in combination with %s
%25s:%-5d %@ mode is not supported in combination with %s
%25s:%-5d 0x%x category option(s) not supported in combination with %s
%25s:%-5d BT activation contexts is missing its Device ID
%25s:%-5d Call activation context is missing the accesibility preference value
%25s:%-5d Call activation context is missing the call direction value
%25s:%-5d Bad cast for property %@
%25s:%-5d AudioSessionGetProperty (%@) failed with error: %s
%25s:%-5d AudioSessionGetProperty (%s) failed with error: %s
%25s:%-5d Unknown ID for DataSource
%25s:%-5d Unknown name for DataSource
%25s:%-5d Unknown owning Port ID for DataSource
%25s:%-5d Unknown selected polar pattern for DataSource.  There are %lu polar patterns
%25s:%-5d nil data source description
%25s:%-5d Invalid XPC connection, session ID = %u, property ID = %@
%25s:%-5d Invalid propertyID:%@. The property identifer must be an NSString.
%25s:%-5d session server connection %s
%25s:%-5d reconnection successful
 CAPThread::SetPriority: failed to set the fixed-priority policy, Error: 0x%X
 CAPThread::SetPriority: failed to set the precedence policy, Error: 0x%X
 CAPThread::SetTimeConstraints: thread_policy_set failed, Error: %d (%s)
 CAPThread::Start: can't start because the thread is already running
 CAPThread::Start: Thread attributes could not be created.
 CAPThread::Start: A thread could not be created in the detached state.
 CAPThread::Start: Could not create a thread.
%25s:%-5d CoreSimulator failed to supply SIMULATOR_AUDIO_SETTINGS_PATH; volume and mute will not work.
%25s:%-5d Failed to open audio settings path fd. Error: (%d) %s
%25s:%-5d Unexpected error %d attempting to lookup device by UID
%25s:%-5d Failed to open audio settings plist!
%25s:%-5d Failed to read audiosettings.plist: %s
%25s:%-5d Failed to get sim_ringer_state from audio settings.
%25s:%-5d Failed to get sim_volume from audio settings.
%25s:%-5d Failed to get sim_input_device_uid from audio settings.
%25s:%-5d Failed to get sim_output_device_uid from audio settings.
%25s:%-5d Received simulator settings update: inputDeviceUID=%s, inputDeviceID=%u, outputDeviceUID=%s, outputDevice=%u, ringerMuted=%s, volume=%.2f
%25s:%-5d Aborting (re)try for expired notifier for session %p.
%25s:%-5d Attempting to contact server for session %p
%25s:%-5d Calling completion handler for session %p
%25s:%-5d Connection succeeded, but registration of server death notification failed.
%25s:%-5d Encountered permanent connection failure for session %p.
%25s:%-5d Retrying connection for session %p. Attempt count: %d
%25s:%-5d Unexpected nil channel description
%25s:%-5d Session with ID 0x%x not found
%25s:%-5d Adding session %p with ID 0x%x
%25s:%-5d Session ID 0x%x is already in use
%25s:%-5d Session not valid! New ID is 0x%x
%25s:%-5d Updating session ID. Old: 0x%x, New: 0x%x
%25s:%-5d Session %p not found. Proceeding to adding entry with new session ID: 0x%x
%25s:%-5d Not expected to see error code %d!
%25s:%-5d -- %s failed to find a match for string "%@"
%25s:%-5d Failed to translate MX category: %@ to AVAS mode
%25s:%-5d Failed to translate AVAS category: %@ to MX mode
%25s:%-5d Failed to translate MX mode: %@ to AVAS mode
%25s:%-5d Failed to translate AVAS mode: %@ to mx mode
%25s:%-5d Failed to translate MX voice prompt style: %@ to AVAS prompt style
softlink:r:path:/System/Library/Frameworks/AudioToolbox.framework/AudioToolbox
softlink:r:path:/System/Library/Frameworks/AudioToolbox.framework/AudioToolbox
softlink:r:path:/System/Library/Frameworks/AudioToolbox.framework/AudioToolbox
softlink:r:path:/System/Library/Frameworks/AudioToolbox.framework/AudioToolbox
softlink:r:path:/System/Library/Frameworks/AudioToolbox.framework/AudioToolbox
softlink:r:path:/System/Library/Frameworks/AudioToolbox.framework/AudioToolbox
AVAudioSessionCallbackDispatcher
SessionManagerXPCServerCallbackProtocol
AVAudioIOController_iOS
AVAudioIOController
NSObject
AVAudioSessionPortDescription
AVAudioSession
AVAudioSessionDataSourceDescription
AVAudioSessionIOBinding
AVAudioSessionSpecification
NSSecureCoding
NSCoding
CommonImplementation
AVAudioSessionChannelDescription
AVAudioSessionRouteDescription
AVAudioSessionPrivate
synchronousRemoteObjectProxyWithErrorHandler:
numberWithDouble:
initWithArray:
countByEnumeratingWithState:objects:count:
setSession:decoupledInput:hasIOEventListeners:reply:
setExportedInterface:
decodeObjectOfClass:forKey:
numberWithBool:
addObjectsFromArray:
stringWithUTF8String:
setRemoteObjectInterface:
count
encodeObject:forKey:
decodeObjectForKey:
initWithUnsignedInteger:
resume
addObject:
initWithObjectsAndKeys:
stringWithFormat:
null
setProperties:values:MXProperties:reply:
copy
isEqualToNumber:
encodeInteger:forKey:
objectForKeyedSubscript:
decodeIntegerForKey:
initWithString:
bytes
initWithObjects:
containsObject:
handleFailureInFunction:file:lineNumber:description:
encodeInt32:forKey:
decodeInt32ForKey:
setClasses:forSelector:argumentIndex:ofReply:
initWithMachServiceName:options:
boolValue
objectForKey:
mutableCopy
postNotificationName:object:userInfo:
getIOControllerPeriod:decoupledInput:reply:
doubleValue
objectAtIndex:
dataWithBytes:length:
initWithListenerEndpoint:
longLongValue
getBytes:length:
isEqualToArray:
arrayWithObjects:count:
willChangeValueForKey:
didChangeValueForKey:
numberWithUnsignedLong:
initWithInt:
length
setWithObjects:
floatValue
setObject:forKey:
compare:
dictionaryWithObjectsAndKeys:
arrayWithObject:
numberWithUnsignedInteger:
valueForKey:
setWithArray:
initWithFloat:
pingWithReply:
invalidate
setInvalidationHandler:
code
firstObject
arrayWithCapacity:
dictionaryWithObjects:forKeys:count:
numberWithUnsignedInt:
exceptionWithName:reason:userInfo:
insertObject:atIndex:
array
numberWithInteger:
unsignedIntegerValue
isEqualToValue:
initWithCapacity:
setInterruptionHandler:
errorWithDomain:code:userInfo:
defaultCenter
unsignedIntValue
numberWithFloat:
initWithBool:
currentHandler
isEqualToString:
setExportedObject:
allKeysForObject:
pingClient:
IOControllerEvent:sessions:isDecoupledInput:
init
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
currentTime
createIOEventBlock:
destroyIOEventBlock:
setDeviceUID:error:
presentationTime
IOPeriod
isRunning
supportsPresentationTime
dynamicLatency
T{AVAudioIOPeriod=ddQf},R,N
running
TB,R,N,GisRunning
TB,R,N
T{AVAudioTimeInterval=ddQ},R,N
initWithSession:xpcConnection:timingStateSlot:isDecoupledInput:
timingStateSlot
setTimingStateSlot:
privateDispatchIOControllerEvent:
.cxx_destruct
.cxx_construct
impl
TI,N
dealloc
privateCreateArray:owningSession:
isEqualToPort:compareStrict:
portType
portName
channels
dataSources
hasHardwareVoiceCallProcessing
isSpatialAudioEnabled
isLiveListenSupported
isHeadphones
isLowLatencyAirPlay
portSubType
endpointType
selectedDataSource
preferredDataSource
setPreferredDataSource:error:
privateGetImplementation
privateGetID
initWithRawPortDescriptionXPC:owningSession:
initWithRawPortDescription:owningSession:
setSupportsSpatialAudio:
configureChannelsAndDataSources:
initWithPortType:owningSession:
_impl
T@"NSString",R,N
TB,R
spatialAudioEnabled
TB,R,GisSpatialAudioEnabled
T@"NSArray",R,N
T@"AVAudioSessionDataSourceDescription",R,N
allocWithZone:
inputIsAvailableChanged:
beginInterruption
endInterruptionWithFlags:
endInterruption
sharedInstance
retrieveSessionWithID:
primarySession
auxiliarySession
categoryEnablesInput:
privateSetProperty:value:isMXProperty:
privateSetBatchProperties:areMXProperties:
privateHandlePing
privateAllowsLongFormRoutingToSpeaker
privateSetAllowsLongFormRoutingToSpeaker:
privateRequiresWatchOSRoutePicker
initWithSessionType:
privateCreateSessionInServerUsingAudioToolbox:type:identifier:
privateCreateSessionInServerUsingXPC
privateRecreateSessionInServerUsingXPC
initWithSpecification:
initWithSessionID:
initSiblingSession:auditToken:clientIdentifier:
initAuxiliarySession
initWithSiriEndpointIdentifier:
category
categoryOptions
routeSharingPolicy
availableCategories
addCategoryOptionsToDictionary:nonXPCArray:category:options:useXPC:
privateSetCategoryWithOptions:modes:routeSharingPolicy:options:
setCategory:error:
setCategory:withOptions:error:
setCategory:mode:options:error:
setCategory:mode:routeSharingPolicy:options:error:
setActive:error:
setActive:withOptions:error:
activateWithOptions:completionHandler:
deactivateAndSetInterruptionPriority:error:
setActive:withFlags:error:
recordPermission
requestRecordPermission:
setPreferredSampleRate:error:
setPreferredIOBufferDuration:error:
setPreferredIOBufferFrameSize:error:
setInterruptionPriority:error:
setPreferredInputNumberOfChannels:error:
setPreferredOutputNumberOfChannels:error:
setInputGain:error:
setInputDataSource:error:
setOutputDataSource:error:
setPreferredInputOrientation:error:
preferredInputOrientation
inputOrientation
outputVolume
promptStyle
setAllowHapticsAndSystemSoundsDuringRecording:error:
allowHapticsAndSystemSoundsDuringRecording
isActive
audioFormats
consolidatedSourceContentInfo
privateRegisterMXNotificationWithServer:
privatePostNotificationForType:name:userInfo:
addObserverForType:name:block:
removeObserverForType:observer:name:
audioFormat
isDolbyDigitalEncoderAvailable
isEarpieceActiveNoiseCancelationEnabled
isPiPAvailable
forceSoundCheck
setForceSoundCheck:error:
lastActivationStoppedNowPlayingApp
requiresNoAudioResources
setRequiresNoAudioResources:error:
allowMixableAudioWhileRecording
setAllowMixableAudioWhileRecording:error:
participatesInNowPlayingAppPolicy
setParticipatesInNowPlayingAppPolicy:error:
eligibleForBTSmartRoutingConsideration
setEligibleForBTSmartRoutingConsideration:error:
eligibleForBTTriangleConsideration
setEligibleForBTTriangleConsideration:error:
prefersToAcquireHWControlFromOtherSessions
setPrefersToAcquireHWControlFromOtherSessions:error:
prefersNoMicrophoneUsageIndicator
setPrefersNoMicrophoneUsageIndicator:error:
participatesInMutePriority
setParticipatesInMutePriority:error:
recordingFromRemoteInput
setRecordingFromRemoteInput:error:
allowAllBuiltInDataSources
setAllowAllBuiltInDataSources:
setBypassRingerSwitchPolicy:error:
setAudioHardwareControlFlags:error:
setInterruptionFadeDuration:error:
setDuckingFadeOutDuration:fadeInDuration:error:
setDuckToLevelDB:error:
setDuckToLevelScalar:error:
isExpanseMediaSession
setIsExpanseMediaSession:error:
isHardwareFormatFixedToMultiChannel
fixHardwareFormatToMultiChannel:error:
inputGain
privateGetDataSources:
privateGetNotificationStateForType:create:
privateGetSelectedDataSource:
inputDataSources
inputDataSource
outputDataSources
outputDataSource
isInputGainSettable
isInputAvailable
isOtherAudioPlaying
secondaryAudioShouldBeSilencedHint
sampleRate
inputLatency
outputLatency
inputSafetyOffset
outputSafetyOffset
activeSessionDisplayIDs
IOBufferDuration
IOBufferFrameSize
interruptionPriority
preferredSampleRate
preferredIOBufferDuration
preferredIOBufferFrameSize
preferredInputNumberOfChannels
preferredOutputNumberOfChannels
inputNumberOfChannels
outputNumberOfChannels
maximumInputNumberOfChannels
maximumOutputNumberOfChannels
availableModes
mode
setMode:error:
privateSetRouteSharingPolicy:error:
privateNeedsTranslationForNoSpeakerCategory:
auditTokensForProcessAssertion
setAuditTokensForProcessAssertion:error:
powerBudget
powerProfile
setPowerProfile:error:
subscribeToNotifications:error:
routingContextUID
setRoutingContextUID:error:
hostProcessAttribution
setHostProcessAttribution:error:
selectIndependentRoutingContext:
overrideOutputAudioPort:error:
setPreferredInput:error:
preferredInput
currentRoute
pickedRoute
setSupportsMultichannelContent:error:
supportsMultichannelContent
setAudioClockDevice:error:
audioClockDevice
opaqueSessionID
sessionType
speechDetectionDeviceSampleRate
availableInputs
privateRefreshAvailableInputs
privateGetCachedReporterID
delegate
setDelegate:
setPreferredHardwareSampleRate:error:
setActivationContext:error:
setDisallowedPorts:error:
silenceOutput:error:
isSessionInputMuted
muteSessionInput:error:
defaultChatMode
setDefaultChatMode:error:
iAmTheAssistant
setIAmTheAssistant:error:
prefersNoInterruptionsByRingtonesAndAlerts
setPrefersNoInterruptionsByRingtonesAndAlerts:error:
prefersNoInterruptionsFromSystemAlerts
setPrefersNoInterruptionsFromSystemAlerts:error:
prefersNoDucking
setPrefersNoDucking:error:
needsHighPowerBudgeting
setNeedsHighPowerBudgeting:error:
participatesInVolumePolicy
setParticipatesInVolumePolicy:error:
prefersToVibeWhenVibrationsAreDisabled
setPrefersToVibeWhenVibrationsAreDisabled:error:
defaultCalibratedOutputSPL
clearInputPreferences:
inputIsAvailable
currentHardwareSampleRate
currentHardwareInputNumberOfChannels
currentHardwareOutputNumberOfChannels
preferredHardwareSampleRate
preferDecoupledIO:error:
setAggregatedIOPreference:error:
decoupledIO
setPreferredInputSampleRate:error:
preferredInputSampleRate
setPreferredOutputSampleRate:error:
preferredOutputSampleRate
inputSampleRate
outputSampleRate
setSpeakerThermalGain:error:
setHapticThermalGain:error:
speakerThermalGain
hapticThermalGain
privateInputIsAvailableChanged:
privateInterruptionWithInfo:
privateMarkKVOPropertiesDirty:
privateHandleServerDied
privateHandleAvailableSampleRatesChange
privateHandleBeaconBudgetChange:
privateHandlePickableRoutesChange
privateHandleSecondaryAudioHintChange:
privateHandleOtherPrimaryAudioPlayStateChange
privateUpdatePiPAvailabilityChange:
privateHandleRoutingContextChange
privateHandleServerConnectionCompletion:
enableNotifications:error:
setPrefersMultichannelAudio:error:
prefersMultichannelAudio
privateSetPropertyValue:withBool:error:
privateUpdateOutputVolume:
privateUpdatePromptStyle:
privateUpdateInputGain:
privateUpdateDataSources:forInput:
privateUpdateAudioFormats:
privateUpdateAudioFormat:
privateUpdateInputChannelCount:
privateUpdateOutputChannelCount:
isDolbyAtmosAvailable
getMXSessionProperty:error:
setMXSessionProperty:value:error:
IOController
decoupledInputIOController
T@"NSString",R
T@"NSArray",R
T@"AVAudioSessionPortDescription",R
privateCreateArray:portID:sessionID:
isEqualToDataSource:
dataSourceID
dataSourceName
location
orientation
selectedPolarPattern
preferredPolarPattern
supportedPolarPatterns
setPreferredPolarPattern:error:
privateMatchesRawDescription:
initWithRawSourceDescription:andOwningPortID:andSessionID:
configurePolarPatterns:
privateGetOwningPortID
T@"NSNumber",R
initWithSession:
initWithSession:streams:error:
session
streams
_session
_streams
T@"AVAudioSession",R,N,V_session
T@"NSArray",R,N,V_streams
getMXPropertyGenericPipe:propertyName:reply:
getProperty:propertyName:MXProperty:reply:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
setSessionType:
clientAuditToken
setClientAuditToken:
sourceSessionID
setSourceSessionID:
clientIdentifier
setClientIdentifier:
_clientAuditToken
TQ,N,VsessionType
T{?=[8I]},N,V_clientAuditToken
TI,N,VsourceSessionID
T@"NSString",C,N,VclientIdentifier
isPrimary
privateCreate:portUID:channelNumber:
privateCreateArray:portUID:
isEqualToChannel:
channelName
owningPortUID
channelNumber
channelLabel
TQ,R,N
TI,R,N
isEqualToRoute:
inputs
outputs
initWithCategory:owningSession:
initWithRawDescription:owningSession:
updateOutputPortsWithSpatialAudioStatus:
siriRemoteInputIdentifier
siriInputSource
supportsDoAP
supportsSoftwareVolume
v20@0:8I16
v36@0:8Q16@24B32
v36@0:8Q16@"NSData"24B32
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}16@0:8
q24@0:8@?16
v24@0:8q16
B32@0:8@16^@24
{AudioPresentationTimeStamp=IIQdddd}16@0:8
{AVAudioIOPeriod=ddQf}16@0:8
{AVAudioTimeInterval=ddQ}16@0:8
q24@0:8@?<v@?Q>16
B32@0:8@"NSString"16^@24
@48@0:8@16{shared_ptr<as::client::XPCConnection>=^{XPCConnection}^{__shared_weak_count}}24I40B44
I16@0:8
v24@0:8Q16
v16@0:8
{optional<(anonymous namespace)::IOControllerImpl>=""(?="__null_state_"c"__val_"{IOControllerImpl="mSession"@"AVAudioSession""mIsDecoupledInput"B"mXPCConnection"{weak_ptr<as::client::XPCConnection>="__ptr_"^{XPCConnection}"__cntrl_"^{__shared_weak_count}}"mTimingStateSlot"{atomic<unsigned int>="__a_"{__cxx_atomic_impl<unsigned int, std::__cxx_atomic_base_impl<unsigned int>>="__a_value"AI}}"mDeviceTimeClient"^{DeviceTimeClient}"mListenerMgr"{synchronized<(anonymous namespace)::ListenerMgr, caulk::mach::unfair_lock, caulk::empty_atomic_interface<(anonymous namespace)::ListenerMgr>>="mMutex"{unfair_lock="m_lock"{os_unfair_lock_s="_os_unfair_lock_opaque"I}}"mObject"{ListenerMgr="mOuter"^{IOControllerImpl}"mListeners"{vector<std::pair<long, void (^)(AVAudioIOControllerEvent)>, std::allocator<std::pair<long, void (^)(AVAudioIOControllerEvent)>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::pair<long, void (^)(AVAudioIOControllerEvent)> *, std::allocator<std::pair<long, void (^)(AVAudioIOControllerEvent)>>>="__value_"^v}}}}})"__engaged_"B}
@32@0:8@16@24
B28@0:8@16B24
q16@0:8
^{PortDescriptionImpl=@@@@@BBBBBqQ@@@@}16@0:8
v20@0:8B16
v24@0:8@16
@20@0:8I16
i36@0:8@16@24B32
i28@0:8@16B24
B36@0:8^v16I24@28
@24@0:8@16
@60@0:8I16{?=[8I]}20@52
v52@0:8@16@24@32Q40B48
i48@0:8@16@24Q32Q40
B40@0:8@16Q24^@32
B48@0:8@16@24Q32^@40
B56@0:8@16@24Q32Q40^@48
B28@0:8B16^@20
B36@0:8B16Q20^@28
v32@0:8Q16@?24
B32@0:8q16^@24
B36@0:8B16q20^@28
v24@0:8@?16
B32@0:8d16^@24
B32@0:8Q16^@24
B28@0:8f16^@20
f16@0:8
C24@0:8@16
v40@0:8Q16@24@32
@40@0:8Q16@24@?32
B40@0:8@16@24^@32
^v16@0:8
@20@0:8B16
{shared_ptr<AVAudioSessionNotificationState>=^{AVAudioSessionNotificationState}^{__shared_weak_count}}28@0:8Q16B24
d16@0:8
B24@0:8^@16
v24@0:8{ConnectionResult=iI}16
B32@0:8I16B20^@24
v28@0:8@16B24
@32@0:8@16^@24
@36@0:8@16@24I32
^{DataSourceDescriptionImpl=I@@@@@@@@}16@0:8
@40@0:8@16@24^@32
@"AVAudioSession"
@"NSArray"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
{?=[8I]}16@0:8
v48@0:8{?=[8I]}16
@"NSString"
{?="val"[8I]}
^{ChannelDescriptionImpl=@@II}16@0:8
^{RouteDescriptionImpl=@@@QBB}16@0:8
mcpl
ulbc
kpsc
kcud
ximc
tnis
srwn
cimo
taca
edom
pstr
dafd
dafu
