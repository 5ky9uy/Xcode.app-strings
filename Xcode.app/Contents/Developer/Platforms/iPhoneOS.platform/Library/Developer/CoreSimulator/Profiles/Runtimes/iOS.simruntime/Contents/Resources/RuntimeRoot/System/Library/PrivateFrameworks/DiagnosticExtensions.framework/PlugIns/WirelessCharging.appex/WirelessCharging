protectionSpace
authenticationMethod
isEqualToString:
host
serverTrust
credentialForTrust:
URLWithString:
requestWithURL:
dataUsingEncoding:
base64EncodedStringWithOptions:
stringWithFormat:
setValue:forHTTPHeaderField:
defaultManager
stringByAppendingPathComponent:
fileURLWithPath:
defaultSessionConfiguration
setTimeoutIntervalForRequest:
sessionWithConfiguration:delegate:delegateQueue:
path
fileExistsAtPath:
removeItemAtPath:error:
moveItemAtURL:toURL:error:
downloadTaskWithRequest:completionHandler:
resume
downloadLogFile
attachmentWithPath:
arrayWithObjects:count:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
attachmentList
attachmentsForParameters:
applebirkin.local
https://applebirkin.local/api/charger/radar
birkin:crispybacon
Basic %@
Authorization
/private/var/tmp/
wireless-charging-logs.tar.gz
dataTaskWithRequest error: %@
finished downloading file
v32@?0@"NSURL"8@"NSURLResponse"16@"NSError"24
WirelessChargingExtension
NSURLSessionDelegate
NSObject
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v40@0:8@16@24@?32
v24@0:8@16
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
@24@0:8@16
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.DiagnosticExtensions.extension</key>
<true/>
<key>com.apple.security.exception.files.absolute-path.read-write</key>
<string>/private/var/tmp/</string>
</dict>
</plist>
protectionSpace
authenticationMethod
isEqualToString:
host
serverTrust
credentialForTrust:
URLWithString:
requestWithURL:
dataUsingEncoding:
base64EncodedStringWithOptions:
stringWithFormat:
setValue:forHTTPHeaderField:
defaultManager
stringByAppendingPathComponent:
fileURLWithPath:
defaultSessionConfiguration
setTimeoutIntervalForRequest:
sessionWithConfiguration:delegate:delegateQueue:
path
fileExistsAtPath:
removeItemAtPath:error:
moveItemAtURL:toURL:error:
downloadTaskWithRequest:completionHandler:
resume
downloadLogFile
attachmentWithPath:
arrayWithObjects:count:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
attachmentList
attachmentsForParameters:
applebirkin.local
https://applebirkin.local/api/charger/radar
birkin:crispybacon
Basic %@
Authorization
/private/var/tmp/
wireless-charging-logs.tar.gz
dataTaskWithRequest error: %@
finished downloading file
v32@?0@"NSURL"8@"NSURLResponse"16@"NSError"24
WirelessChargingExtension
NSURLSessionDelegate
NSObject
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v40@0:8@16@24@?32
v24@0:8@16
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
@24@0:8@16
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.DiagnosticExtensions.extension</key>
<true/>
<key>com.apple.security.exception.files.absolute-path.read-write</key>
<string>/private/var/tmp/</string>
</dict>
</plist>
