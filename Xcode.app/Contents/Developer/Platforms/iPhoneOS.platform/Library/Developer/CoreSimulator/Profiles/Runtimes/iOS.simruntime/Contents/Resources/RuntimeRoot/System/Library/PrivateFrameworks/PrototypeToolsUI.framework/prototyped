TB,N,GisEnabled
T#,R
_window
T@"NSString",R,C
applicationWillEnterForeground:
T@"PTDomainServer",R,N,V_domainServer
enabled
T@"UIWindow",&,N
isProxy
TB,N,V_preventLockover
numberWithBool:
_animateUsingDefaultTimingWithOptions:animations:completion:
release
_avServerConnectionDiedNotification:
.cxx_destruct
_client
T@"<PTDRootModuleDelegate>",W,N,V_delegate
addKeyObserver:
T@"PTDPrototypingSettings",R,N,V_prototypingSettings
base64EncodedStringWithOptions:
T@"PTModule",R,N
invokeOutletAtKeyPath:domainID:
TB,N,V_moduleNeedsReload
killSpringBoard
TQ,R
preventLockover
_avQueue
removeObserver:
_broadCastState:withStateInfo:
_currentOrientation
_delayExitAfterShowingUI
_delayExitAfterUITimer
_delayingExitAfterUI
_delegate
_disableRemoteEditingServer
_domainServer
_editingServer
_endDelayingExitAfterShowingUI
_frameForHidingSettingsWindow
_frameForShowingSettingsWindow
_hardwareEventSection
_hasActiveTestRecipe
_hidePrototypingUI
_initWithRootModule:
_interfaceOrientationObserver
_isSecure
_isSystemUIService
_killSection
_listener
_mainQueue
_moduleNeedsReload
_normalizedSafeAreaInsets
_noteActivePrototypingEnabled:
_noteHasActiveTestRecipe:
_notePrototypeSettingsEnabled:
_noteRemotePrototypingEnabled:
_observeDefaults
_postPrototypingIsActiveNotification
_preventLockover
_prototypingSettings
_reloadWithRootModule:
_remoteEditingServerController
_remoteEditingServerControllerRevision
_remotePrototypingServer
_rootModuleController
_sendKillSpringBoard
_setAllWindowsKeepContextInBackground:
_setModuleNeedsReload
_setRotatableViewOrientation:duration:
_setUpOrientationObserver
_settingsController
_shouldDelayExitAfterUI
_showOrHidePrototypingUI
_showPrototypingUI
_showingUI
_subscribeToAVSystemControllerNotifications
_systemUIServiceClientSettings
_systemUIServiceIdentifier
_updateCurrentOrientation:
_updatePreventingLockover
_volumeSection
_volumeSliderRow
abort
actionRevision
actionWithHandler:
activeInterfaceOrientationWithCompletion:
activePrototypingEnabled
activeTestRecipeEatsEvent:
activeTestRecipeIdentifier
addObject:
addObserver:selector:name:object:
allowedRemotePeerDisplayNames
application:configurationForConnectingSceneSession:options:
application:continueUserActivity:restorationHandler:
application:didChangeStatusBarFrame:
application:didChangeStatusBarOrientation:
application:didDecodeRestorableStateWithCoder:
application:didDiscardSceneSessions:
application:didFailToContinueUserActivityWithType:error:
application:didFailToRegisterForRemoteNotificationsWithError:
application:didFinishLaunchingWithOptions:
application:didReceiveLocalNotification:
application:didReceiveRemoteNotification:
application:didReceiveRemoteNotification:fetchCompletionHandler:
application:didRegisterForRemoteNotificationsWithDeviceToken:
application:didRegisterUserNotificationSettings:
application:didUpdateUserActivity:
application:handleActionWithIdentifier:forLocalNotification:completionHandler:
application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:
application:handleEventsForBackgroundURLSession:completionHandler:
application:handleIntent:completionHandler:
application:handleOpenURL:
application:handleWatchKitExtensionRequest:reply:
application:handlerForIntent:
application:openURL:options:
application:openURL:sourceApplication:annotation:
application:performActionForShortcutItem:completionHandler:
application:performFetchWithCompletionHandler:
application:shouldAllowExtensionPointIdentifier:
application:shouldRestoreApplicationState:
application:shouldRestoreSecureApplicationState:
application:shouldSaveApplicationState:
application:shouldSaveSecureApplicationState:
application:supportedInterfaceOrientationsForWindow:
application:userDidAcceptCloudKitShareWithMetadata:
application:viewControllerWithRestorationIdentifierPath:coder:
application:willChangeStatusBarFrame:
application:willChangeStatusBarOrientation:duration:
application:willContinueUserActivityWithType:
application:willEncodeRestorableStateWithCoder:
application:willFinishLaunchingWithOptions:
applicationDidBecomeActive:
applicationDidEnterBackground:
applicationDidFinishLaunching:
applicationDidReceiveMemoryWarning:
applicationProtectedDataDidBecomeAvailable:
applicationProtectedDataWillBecomeUnavailable:
applicationShouldAutomaticallyLocalizeKeyCommands:
applicationShouldRequestHealthAuthorization:
applicationSignificantTimeChange:
applicationWillResignActive:
applicationWillTerminate:
applyArchiveValue:
applyArchiveValue:forRootSettingsKeyPath:domainID:
archivedDataWithRootObject:requiringSecureCoding:error:
array
arrayWithObjects:count:
autorelease
boolValue
bounds
canEditShowsUIForEvent:
class
conformsToProtocol:
currentDevice
debugDescription
defaultCenter
delegate
description
dictionaryWithDictionary:
didConnectToRemotePeer:
didDisconnectFromRemotePeer:
didReceiveState:withInfo:fromPeer:
didStartAcceptingConnections
displayedShowsUIValueForEvent:
domainInfoByID
domainServer
floatValue
getActiveCategoryVolume:andName:
getAllDomainInfoByID
getRootProxyDefinitionForDomainID:
handlePrototypingEvent:
hash
init
initWithBarButtonSystemItem:target:action:
initWithDataSource:
initWithDataSource:delegate:forRemoteEditing:
initWithDomainServer:editingServer:
initWithDomainServer:queue:
initWithFrame:
initWithMachServiceName:
initWithType:revision:
invalidate
invokeOutletAtKeyPath:
isEnabled
isEqual:
isEqualToString:
isHidden
isKindOfClass:
isMemberOfClass:
launchForRemoteEditing
listener:shouldAcceptNewConnection:
localPeerDisplayName
localSettingsOfClass:
mainScreen
module
moduleNeedsReload
moduleWithSettings:
moduleWithTitle:contents:
name
numberWithFloat:
objectForKey:
observeDefault:onQueue:withBlock:
observeShowUISwitchDefaultsOnQueue:withBlock:
observeTestRecipeDefaultsOnQueue:withBlock:
orientation
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
persistChanges
prepareForConnection
prototypeSettingsEnabled
prototypingSettings
reloadRow
remoteObjectProxy
remotePrototypingEnabled
respondsToSelector:
restoreDefaultValuesForDomainID:
resume
retain
retainCount
rootSettingsProxyDefinitionForDomainID:
rowWithTitle:action:
rowWithTitle:actionHandler:
rowWithTitle:valueGetter:valueSetter:
rowWithTitle:valueKeyPath:
safeAreaInsetsPortrait
scale
scheduledTimerWithTimeInterval:repeats:block:
sectionWithRows:
sectionWithRows:title:
self
sendEvent:forTestRecipeID:
sendEventForTestRecipeID:
sendState:withInfo:toPeer:
setActiveCategoryVolumeTo:
setActiveTestRecipeID:
setAttribute:forKey:error:
setAutoresizingMask:
setContentScaleFactor:
setDefaultValues
setDelegate:
setDismissButton:
setEnabled:
setExportedInterface:
setExportedObject:
setExternalCondition:
setFrame:
setHandler:
setHidden:
setInvalidationHandler:
setModuleNeedsReload:
setObject:forKey:
setPreferredLevel:
setPreventLockover:
setRemoteObjectInterface:
setRootViewController:
setShowsUI:forEvent:
setUnregisterBlock:
setWindow:
settings
settings:changedValueForKey:
settingsControllerModule
settingsEditingModule
sharedAVSystemController
sharedInstance
stateForStateType:withCompletionHandler:
stateType
stringWithFormat:
stringWithUTF8String:
submoduleWithModule:
superclass
supportedStateTypes
testRecipeIsActive
testRecipeSelectionModule
unsignedIntegerValue
valueForKey:
view
willConnectToRemotePeer:
window
zone
defaultDisplayEdgeInfo
PTAVSystemControllerQueue
Prototyping
Volume
@8@?0
v16@?0@8
v16@?0@"PTRow"8
v8@?0
B8@?0
v24@?0q8^B16
Show Prototyping UI
Kill SpringBoard
B24@?0@"PTRow"8@"PTUIModuleController"16
Prevent Screen Dim
preventLockover
com.apple.prototyped
PTDApplication
PTDServer
com.apple.internal.prototyped
prototypeSettingsEnabled
activePrototypingEnabled
remotePrototypingEnabled
PTDServer showing UI
PTDServer active test recipe
PTDServer delay exit after showing UI
v12@?0B8
v16@?0@"NSTimer"8
v16@?0@"FBSOrientationUpdate"8
PTDRemotePrototypingServer accepts remote editing
Prototype on %@
PTRemoteEditingClient
selector
Method
responsePayload
POST
domainID
value
keyPath
event
recipeID
RSPeerToPeerServerController
Unable to find class %s
RSStateInfo
uh oh, our workaround for rdar://problem/45299814 has stopped working!
AVSystemController server connection died; resubscribing to necessary notifications
Successfully subscribed to all necessary AVSystemController notifications: %@
Failed to subscribe to AVSystemController notifications due to error: %@
Prototype daemon did finish launching
PTUIServer expects to only talk to a single client, and it already has one. Refusing additional connection.
handle prototyping event: %@
showing prototyping UI
hiding prototyping UI
Remote editing server did start accepting connections.
Remote editing server couldn't start accepting connection.
Remote editing server disabled.
PTDWindow
PTDRootModuleController
ActionConvenience
PTDPrototypingSettings
PTDApplication
PTDServer
PTUIServer
NSObject
NSXPCListenerDelegate
PTSettingsKeyObserver
PTDRootModuleDelegate
UIApplicationDelegate
PTDRemotePrototypingServer
RSPeerToPeerConnectionControllerDataSource
RSPeerToPeerConnectionControllerDelegate
B16@0:8
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{UIEdgeInsets=dddd}16@0:8
@32@0:8@16@24
@16@0:8
v24@0:8@16
v16@0:8
v20@0:8B16
@"PTDomainServer"
@"PTUIEditingServer"
@"NSObject<OS_dispatch_queue>"
@"<PTDRootModuleDelegate>"
@"PTDPrototypingSettings"
@32@0:8@16@?24
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8q16
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v32@0:8@16@24
v32@0:8@"PTSettings"16@"NSString"24
B48@0:8@16@24@32@40
B40@0:8@16@24@32
v40@0:8@16q24d32
v32@0:8@16q24
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v40@0:8@16@24@?32
v32@0:8@16@?24
Q32@0:8@16@24
@40@0:8@16@24@32
B40@0:8@16@24@?32
v40@0:8@16@24@32
v24@0:8@"UIApplication"16
B32@0:8@"UIApplication"16@"NSDictionary"24
B32@0:8@"UIApplication"16@"NSURL"24
B48@0:8@"UIApplication"16@"NSURL"24@"NSString"32@40
B40@0:8@"UIApplication"16@"NSURL"24@"NSDictionary"32
v40@0:8@"UIApplication"16q24d32
v32@0:8@"UIApplication"16q24
v56@0:8@"UIApplication"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@"UIApplication"16@"UIUserNotificationSettings"24
v32@0:8@"UIApplication"16@"NSData"24
v32@0:8@"UIApplication"16@"NSError"24
v32@0:8@"UIApplication"16@"NSDictionary"24
v32@0:8@"UIApplication"16@"UILocalNotification"24
v48@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@"NSDictionary"40@?<v@?>48
v48@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@"NSDictionary"40@?<v@?>48
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?Q>32
v32@0:8@"UIApplication"16@?<v@?Q>24
v40@0:8@"UIApplication"16@"UIApplicationShortcutItem"24@?<v@?B>32
v40@0:8@"UIApplication"16@"NSString"24@?<v@?>32
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?@"NSDictionary">32
@32@0:8@"UIApplication"16@"INIntent"24
v40@0:8@"UIApplication"16@"INIntent"24@?<v@?@"INIntentResponse">32
Q32@0:8@"UIApplication"16@"UIWindow"24
B32@0:8@"UIApplication"16@"NSString"24
@"UIViewController"40@0:8@"UIApplication"16@"NSArray"24@"NSCoder"32
B32@0:8@"UIApplication"16@"NSCoder"24
v32@0:8@"UIApplication"16@"NSCoder"24
B40@0:8@"UIApplication"16@"NSUserActivity"24@?<v@?@"NSArray">32
v40@0:8@"UIApplication"16@"NSString"24@"NSError"32
v32@0:8@"UIApplication"16@"NSUserActivity"24
v32@0:8@"UIApplication"16@"CKShareMetadata"24
@"UISceneConfiguration"40@0:8@"UIApplication"16@"UISceneSession"24@"UISceneConnectionOptions"32
v32@0:8@"UIApplication"16@"NSSet"24
B24@0:8@"UIApplication"16
@"UIWindow"16@0:8
v24@0:8@"UIWindow"16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
@"NSXPCListener"
@"NSXPCConnection"
@"PTDWindow"
@"PTUISettingsController"
@"PTDRootModuleController"
@"PTDRemotePrototypingServer"
@"FBSOrientationObserver"
@"NSTimer"
v32@0:8Q16@?24
@"NSArray"16@0:8
v32@0:8Q16@?<v@?B@>24
v40@0:8@16@"RSStateInfo"24@"NSString"32
v24@0:8@"MCPeerID"16
@24@0:8@16
@"RSPeerToPeerServerController"
softlink:r:path:/System/Library/PrivateFrameworks/RemoteStateDumpKit.framework/RemoteStateDumpKit
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.QuartzCore.secure-mode</key>
<true/>
<key>com.apple.security.iokit-user-client-class</key>
<array>
<string>IOMobileFramebufferUserClient</string>
</array>
<key>com.apple.springboard-ui.client</key>
<true/>
<key>com.apple.springboard.requestScene-daemon</key>
<true/>
</dict>
</plist>
0% com.apple.QuartzCore.secure-mode
0M*com.apple.security.iokit-user-client-class0
IOMobileFramebufferUserClient0$
com.apple.springboard-ui.client
0.)com.apple.springboard.requestScene-daemon
TB,N,GisEnabled
T#,R
_window
T@"NSString",R,C
applicationWillEnterForeground:
T@"PTDomainServer",R,N,V_domainServer
enabled
T@"UIWindow",&,N
isProxy
TB,N,V_preventLockover
numberWithBool:
_animateUsingDefaultTimingWithOptions:animations:completion:
release
_avServerConnectionDiedNotification:
.cxx_destruct
_client
T@"<PTDRootModuleDelegate>",W,N,V_delegate
addKeyObserver:
T@"PTDPrototypingSettings",R,N,V_prototypingSettings
base64EncodedStringWithOptions:
T@"PTModule",R,N
invokeOutletAtKeyPath:domainID:
TB,N,V_moduleNeedsReload
killSpringBoard
TQ,R
preventLockover
_avQueue
removeObserver:
_broadCastState:withStateInfo:
_currentOrientation
_delayExitAfterShowingUI
_delayExitAfterUITimer
_delayingExitAfterUI
_delegate
_disableRemoteEditingServer
_domainServer
_editingServer
_endDelayingExitAfterShowingUI
_frameForHidingSettingsWindow
_frameForShowingSettingsWindow
_hardwareEventSection
_hasActiveTestRecipe
_hidePrototypingUI
_initWithRootModule:
_interfaceOrientationObserver
_isSecure
_isSystemUIService
_killSection
_listener
_mainQueue
_moduleNeedsReload
_normalizedSafeAreaInsets
_noteActivePrototypingEnabled:
_noteHasActiveTestRecipe:
_notePrototypeSettingsEnabled:
_noteRemotePrototypingEnabled:
_observeDefaults
_postPrototypingIsActiveNotification
_preventLockover
_prototypingSettings
_reloadWithRootModule:
_remoteEditingServerController
_remoteEditingServerControllerRevision
_remotePrototypingServer
_rootModuleController
_sendKillSpringBoard
_setAllWindowsKeepContextInBackground:
_setModuleNeedsReload
_setRotatableViewOrientation:duration:
_setUpOrientationObserver
_settingsController
_shouldDelayExitAfterUI
_showOrHidePrototypingUI
_showPrototypingUI
_showingUI
_subscribeToAVSystemControllerNotifications
_systemUIServiceClientSettings
_systemUIServiceIdentifier
_updateCurrentOrientation:
_updatePreventingLockover
_volumeSection
_volumeSliderRow
abort
actionRevision
actionWithHandler:
activeInterfaceOrientationWithCompletion:
activePrototypingEnabled
activeTestRecipeEatsEvent:
activeTestRecipeIdentifier
addObject:
addObserver:selector:name:object:
allowedRemotePeerDisplayNames
application:configurationForConnectingSceneSession:options:
application:continueUserActivity:restorationHandler:
application:didChangeStatusBarFrame:
application:didChangeStatusBarOrientation:
application:didDecodeRestorableStateWithCoder:
application:didDiscardSceneSessions:
application:didFailToContinueUserActivityWithType:error:
application:didFailToRegisterForRemoteNotificationsWithError:
application:didFinishLaunchingWithOptions:
application:didReceiveLocalNotification:
application:didReceiveRemoteNotification:
application:didReceiveRemoteNotification:fetchCompletionHandler:
application:didRegisterForRemoteNotificationsWithDeviceToken:
application:didRegisterUserNotificationSettings:
application:didUpdateUserActivity:
application:handleActionWithIdentifier:forLocalNotification:completionHandler:
application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:
application:handleEventsForBackgroundURLSession:completionHandler:
application:handleIntent:completionHandler:
application:handleOpenURL:
application:handleWatchKitExtensionRequest:reply:
application:handlerForIntent:
application:openURL:options:
application:openURL:sourceApplication:annotation:
application:performActionForShortcutItem:completionHandler:
application:performFetchWithCompletionHandler:
application:shouldAllowExtensionPointIdentifier:
application:shouldRestoreApplicationState:
application:shouldRestoreSecureApplicationState:
application:shouldSaveApplicationState:
application:shouldSaveSecureApplicationState:
application:supportedInterfaceOrientationsForWindow:
application:userDidAcceptCloudKitShareWithMetadata:
application:viewControllerWithRestorationIdentifierPath:coder:
application:willChangeStatusBarFrame:
application:willChangeStatusBarOrientation:duration:
application:willContinueUserActivityWithType:
application:willEncodeRestorableStateWithCoder:
application:willFinishLaunchingWithOptions:
applicationDidBecomeActive:
applicationDidEnterBackground:
applicationDidFinishLaunching:
applicationDidReceiveMemoryWarning:
applicationProtectedDataDidBecomeAvailable:
applicationProtectedDataWillBecomeUnavailable:
applicationShouldAutomaticallyLocalizeKeyCommands:
applicationShouldRequestHealthAuthorization:
applicationSignificantTimeChange:
applicationWillResignActive:
applicationWillTerminate:
applyArchiveValue:
applyArchiveValue:forRootSettingsKeyPath:domainID:
archivedDataWithRootObject:requiringSecureCoding:error:
array
arrayWithObjects:count:
autorelease
boolValue
bounds
canEditShowsUIForEvent:
class
conformsToProtocol:
currentDevice
debugDescription
defaultCenter
delegate
description
dictionaryWithDictionary:
didConnectToRemotePeer:
didDisconnectFromRemotePeer:
didReceiveState:withInfo:fromPeer:
didStartAcceptingConnections
displayedShowsUIValueForEvent:
domainInfoByID
domainServer
floatValue
getActiveCategoryVolume:andName:
getAllDomainInfoByID
getRootProxyDefinitionForDomainID:
handlePrototypingEvent:
hash
init
initWithBarButtonSystemItem:target:action:
initWithDataSource:
initWithDataSource:delegate:forRemoteEditing:
initWithDomainServer:editingServer:
initWithDomainServer:queue:
initWithFrame:
initWithMachServiceName:
initWithType:revision:
invalidate
invokeOutletAtKeyPath:
isEnabled
isEqual:
isEqualToString:
isHidden
isKindOfClass:
isMemberOfClass:
launchForRemoteEditing
listener:shouldAcceptNewConnection:
localPeerDisplayName
localSettingsOfClass:
mainScreen
module
moduleNeedsReload
moduleWithSettings:
moduleWithTitle:contents:
name
numberWithFloat:
objectForKey:
observeDefault:onQueue:withBlock:
observeShowUISwitchDefaultsOnQueue:withBlock:
observeTestRecipeDefaultsOnQueue:withBlock:
orientation
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
persistChanges
prepareForConnection
prototypeSettingsEnabled
prototypingSettings
reloadRow
remoteObjectProxy
remotePrototypingEnabled
respondsToSelector:
restoreDefaultValuesForDomainID:
resume
retain
retainCount
rootSettingsProxyDefinitionForDomainID:
rowWithTitle:action:
rowWithTitle:actionHandler:
rowWithTitle:valueGetter:valueSetter:
rowWithTitle:valueKeyPath:
safeAreaInsetsPortrait
scale
scheduledTimerWithTimeInterval:repeats:block:
sectionWithRows:
sectionWithRows:title:
self
sendEvent:forTestRecipeID:
sendEventForTestRecipeID:
sendState:withInfo:toPeer:
setActiveCategoryVolumeTo:
setActiveTestRecipeID:
setAttribute:forKey:error:
setAutoresizingMask:
setContentScaleFactor:
setDefaultValues
setDelegate:
setDismissButton:
setEnabled:
setExportedInterface:
setExportedObject:
setExternalCondition:
setFrame:
setHandler:
setHidden:
setInvalidationHandler:
setModuleNeedsReload:
setObject:forKey:
setPreferredLevel:
setPreventLockover:
setRemoteObjectInterface:
setRootViewController:
setShowsUI:forEvent:
setUnregisterBlock:
setWindow:
settings
settings:changedValueForKey:
settingsControllerModule
settingsEditingModule
sharedAVSystemController
sharedInstance
stateForStateType:withCompletionHandler:
stateType
stringWithFormat:
stringWithUTF8String:
submoduleWithModule:
superclass
supportedStateTypes
testRecipeIsActive
testRecipeSelectionModule
unsignedIntegerValue
valueForKey:
view
willConnectToRemotePeer:
window
zone
defaultDisplayEdgeInfo
PTAVSystemControllerQueue
Prototyping
Volume
@8@?0
v16@?0@8
v16@?0@"PTRow"8
v8@?0
B8@?0
v24@?0q8^B16
Show Prototyping UI
Kill SpringBoard
B24@?0@"PTRow"8@"PTUIModuleController"16
Prevent Screen Dim
preventLockover
com.apple.prototyped
PTDApplication
PTDServer
com.apple.internal.prototyped
prototypeSettingsEnabled
activePrototypingEnabled
remotePrototypingEnabled
PTDServer showing UI
PTDServer active test recipe
PTDServer delay exit after showing UI
v12@?0B8
v16@?0@"NSTimer"8
v16@?0@"FBSOrientationUpdate"8
PTDRemotePrototypingServer accepts remote editing
Prototype on %@
PTRemoteEditingClient
selector
Method
responsePayload
POST
domainID
value
keyPath
event
recipeID
RSPeerToPeerServerController
Unable to find class %s
RSStateInfo
uh oh, our workaround for rdar://problem/45299814 has stopped working!
AVSystemController server connection died; resubscribing to necessary notifications
Successfully subscribed to all necessary AVSystemController notifications: %@
Failed to subscribe to AVSystemController notifications due to error: %@
Prototype daemon did finish launching
PTUIServer expects to only talk to a single client, and it already has one. Refusing additional connection.
handle prototyping event: %@
showing prototyping UI
hiding prototyping UI
Remote editing server did start accepting connections.
Remote editing server couldn't start accepting connection.
Remote editing server disabled.
PTDWindow
PTDRootModuleController
ActionConvenience
PTDPrototypingSettings
PTDApplication
PTDServer
PTUIServer
NSObject
NSXPCListenerDelegate
PTSettingsKeyObserver
PTDRootModuleDelegate
UIApplicationDelegate
PTDRemotePrototypingServer
RSPeerToPeerConnectionControllerDataSource
RSPeerToPeerConnectionControllerDelegate
B16@0:8
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{UIEdgeInsets=dddd}16@0:8
@32@0:8@16@24
@16@0:8
v24@0:8@16
v16@0:8
v20@0:8B16
@"PTDomainServer"
@"PTUIEditingServer"
@"NSObject<OS_dispatch_queue>"
@"<PTDRootModuleDelegate>"
@"PTDPrototypingSettings"
@32@0:8@16@?24
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8q16
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v32@0:8@16@24
v32@0:8@"PTSettings"16@"NSString"24
B48@0:8@16@24@32@40
B40@0:8@16@24@32
v40@0:8@16q24d32
v32@0:8@16q24
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v40@0:8@16@24@?32
v32@0:8@16@?24
Q32@0:8@16@24
@40@0:8@16@24@32
B40@0:8@16@24@?32
v40@0:8@16@24@32
v24@0:8@"UIApplication"16
B32@0:8@"UIApplication"16@"NSDictionary"24
B32@0:8@"UIApplication"16@"NSURL"24
B48@0:8@"UIApplication"16@"NSURL"24@"NSString"32@40
B40@0:8@"UIApplication"16@"NSURL"24@"NSDictionary"32
v40@0:8@"UIApplication"16q24d32
v32@0:8@"UIApplication"16q24
v56@0:8@"UIApplication"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@"UIApplication"16@"UIUserNotificationSettings"24
v32@0:8@"UIApplication"16@"NSData"24
v32@0:8@"UIApplication"16@"NSError"24
v32@0:8@"UIApplication"16@"NSDictionary"24
v32@0:8@"UIApplication"16@"UILocalNotification"24
v48@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@"NSDictionary"40@?<v@?>48
v48@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@"NSDictionary"40@?<v@?>48
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?Q>32
v32@0:8@"UIApplication"16@?<v@?Q>24
v40@0:8@"UIApplication"16@"UIApplicationShortcutItem"24@?<v@?B>32
v40@0:8@"UIApplication"16@"NSString"24@?<v@?>32
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?@"NSDictionary">32
@32@0:8@"UIApplication"16@"INIntent"24
v40@0:8@"UIApplication"16@"INIntent"24@?<v@?@"INIntentResponse">32
Q32@0:8@"UIApplication"16@"UIWindow"24
B32@0:8@"UIApplication"16@"NSString"24
@"UIViewController"40@0:8@"UIApplication"16@"NSArray"24@"NSCoder"32
B32@0:8@"UIApplication"16@"NSCoder"24
v32@0:8@"UIApplication"16@"NSCoder"24
B40@0:8@"UIApplication"16@"NSUserActivity"24@?<v@?@"NSArray">32
v40@0:8@"UIApplication"16@"NSString"24@"NSError"32
v32@0:8@"UIApplication"16@"NSUserActivity"24
v32@0:8@"UIApplication"16@"CKShareMetadata"24
@"UISceneConfiguration"40@0:8@"UIApplication"16@"UISceneSession"24@"UISceneConnectionOptions"32
v32@0:8@"UIApplication"16@"NSSet"24
B24@0:8@"UIApplication"16
@"UIWindow"16@0:8
v24@0:8@"UIWindow"16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
@"NSXPCListener"
@"NSXPCConnection"
@"PTDWindow"
@"PTUISettingsController"
@"PTDRootModuleController"
@"PTDRemotePrototypingServer"
@"FBSOrientationObserver"
@"NSTimer"
v32@0:8Q16@?24
@"NSArray"16@0:8
v32@0:8Q16@?<v@?B@>24
v40@0:8@16@"RSStateInfo"24@"NSString"32
v24@0:8@"MCPeerID"16
@24@0:8@16
@"RSPeerToPeerServerController"
softlink:r:path:/System/Library/PrivateFrameworks/RemoteStateDumpKit.framework/RemoteStateDumpKit
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.QuartzCore.secure-mode</key>
<true/>
<key>com.apple.security.iokit-user-client-class</key>
<array>
<string>IOMobileFramebufferUserClient</string>
</array>
<key>com.apple.springboard-ui.client</key>
<true/>
<key>com.apple.springboard.requestScene-daemon</key>
<true/>
</dict>
</plist>
0% com.apple.QuartzCore.secure-mode
0M*com.apple.security.iokit-user-client-class0
IOMobileFramebufferUserClient0$
com.apple.springboard-ui.client
0.)com.apple.springboard.requestScene-daemon
