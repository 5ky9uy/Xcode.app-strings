initWithFrame:
mainScreen
scale
setContentScaleFactor:
valueForKey:
safeAreaInsetsPortrait
_isSecure
_normalizedSafeAreaInsets
init
localSettingsOfClass:
defaultCenter
_setModuleNeedsReload
addObserver:selector:name:object:
_avServerConnectionDiedNotification:
_subscribeToAVSystemControllerNotifications
array
_volumeSection
addObject:
_hardwareEventSection
testRecipeSelectionModule
submoduleWithModule:
settingsEditingModule
moduleWithSettings:
_killSection
moduleWithTitle:contents:
_volumeSliderRow
arrayWithObjects:count:
sectionWithRows:
sharedAVSystemController
getActiveCategoryVolume:andName:
numberWithFloat:
floatValue
setActiveCategoryVolumeTo:
rowWithTitle:valueGetter:valueSetter:
reloadRow
removeObserver:
setUnregisterBlock:
setAttribute:forKey:error:
sharedInstance
displayedShowsUIValueForEvent:
numberWithBool:
boolValue
setShowsUI:forEvent:
canEditShowsUIForEvent:
setExternalCondition:
observeShowUISwitchDefaultsOnQueue:withBlock:
invalidate
sectionWithRows:title:
_sendKillSpringBoard
rowWithTitle:actionHandler:
killSpringBoard
initWithDomainServer:editingServer:
module
delegate
setDelegate:
prototypingSettings
moduleNeedsReload
setModuleNeedsReload:
.cxx_destruct
_domainServer
_editingServer
_avQueue
_moduleNeedsReload
_delegate
_prototypingSettings
T@"<PTDRootModuleDelegate>",W,N,V_delegate
T@"PTModule",R,N
T@"PTDPrototypingSettings",R,N,V_prototypingSettings
TB,N,V_moduleNeedsReload
actionWithHandler:
rowWithTitle:action:
setDefaultValues
setPreventLockover:
rowWithTitle:valueKeyPath:
settingsControllerModule
preventLockover
_preventLockover
TB,N,V_preventLockover
settings
setPreferredLevel:
_isSystemUIService
_systemUIServiceClientSettings
_systemUIServiceIdentifier
initWithDomainServer:queue:
_observeDefaults
_setUpOrientationObserver
_setAllWindowsKeepContextInBackground:
initWithMachServiceName:
resume
setRemoteObjectInterface:
setExportedInterface:
setExportedObject:
setInvalidationHandler:
activeTestRecipeEatsEvent:
activeTestRecipeIdentifier
sendEvent:forTestRecipeID:
_showOrHidePrototypingUI
isEqualToString:
_updatePreventingLockover
remoteObjectProxy
prototypeSettingsEnabled
_notePrototypeSettingsEnabled:
activePrototypingEnabled
_noteActivePrototypingEnabled:
testRecipeIsActive
_noteHasActiveTestRecipe:
remotePrototypingEnabled
_noteRemotePrototypingEnabled:
stringWithUTF8String:
observeDefault:onQueue:withBlock:
observeTestRecipeDefaultsOnQueue:withBlock:
_endDelayingExitAfterShowingUI
setEnabled:
_postPrototypingIsActiveNotification
_hidePrototypingUI
_showPrototypingUI
initWithDataSource:delegate:forRemoteEditing:
addKeyObserver:
_initWithRootModule:
initWithBarButtonSystemItem:target:action:
setDismissButton:
view
setAutoresizingMask:
_frameForHidingSettingsWindow
setRootViewController:
setHidden:
_setRotatableViewOrientation:duration:
isHidden
_reloadWithRootModule:
_frameForShowingSettingsWindow
setFrame:
_animateUsingDefaultTimingWithOptions:animations:completion:
persistChanges
_delayExitAfterShowingUI
scheduledTimerWithTimeInterval:repeats:block:
bounds
orientation
_updateCurrentOrientation:
setHandler:
activeInterfaceOrientationWithCompletion:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
handlePrototypingEvent:
launchForRemoteEditing
listener:shouldAcceptNewConnection:
settings:changedValueForKey:
applicationDidFinishLaunching:
application:willFinishLaunchingWithOptions:
application:didFinishLaunchingWithOptions:
applicationDidBecomeActive:
applicationWillResignActive:
application:handleOpenURL:
application:openURL:sourceApplication:annotation:
application:openURL:options:
applicationDidReceiveMemoryWarning:
applicationWillTerminate:
applicationSignificantTimeChange:
application:willChangeStatusBarOrientation:duration:
application:didChangeStatusBarOrientation:
application:willChangeStatusBarFrame:
application:didChangeStatusBarFrame:
application:didRegisterUserNotificationSettings:
application:didRegisterForRemoteNotificationsWithDeviceToken:
application:didFailToRegisterForRemoteNotificationsWithError:
application:didReceiveRemoteNotification:
application:didReceiveLocalNotification:
application:handleActionWithIdentifier:forLocalNotification:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:completionHandler:
application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:
application:didReceiveRemoteNotification:fetchCompletionHandler:
application:performFetchWithCompletionHandler:
application:performActionForShortcutItem:completionHandler:
application:handleEventsForBackgroundURLSession:completionHandler:
application:handleWatchKitExtensionRequest:reply:
applicationShouldRequestHealthAuthorization:
application:handlerForIntent:
application:handleIntent:completionHandler:
applicationDidEnterBackground:
applicationWillEnterForeground:
applicationProtectedDataWillBecomeUnavailable:
applicationProtectedDataDidBecomeAvailable:
application:supportedInterfaceOrientationsForWindow:
application:shouldAllowExtensionPointIdentifier:
application:viewControllerWithRestorationIdentifierPath:coder:
application:shouldSaveSecureApplicationState:
application:shouldRestoreSecureApplicationState:
application:willEncodeRestorableStateWithCoder:
application:didDecodeRestorableStateWithCoder:
application:shouldSaveApplicationState:
application:shouldRestoreApplicationState:
application:willContinueUserActivityWithType:
application:continueUserActivity:restorationHandler:
application:didFailToContinueUserActivityWithType:error:
application:didUpdateUserActivity:
application:userDidAcceptCloudKitShareWithMetadata:
application:configurationForConnectingSceneSession:options:
application:didDiscardSceneSessions:
applicationShouldAutomaticallyLocalizeKeyCommands:
window
setWindow:
T@"UIWindow",&,N
_listener
_mainQueue
_client
_showingUI
_window
_settingsController
_rootModuleController
_remotePrototypingServer
_interfaceOrientationObserver
_currentOrientation
_hasActiveTestRecipe
_shouldDelayExitAfterUI
_delayingExitAfterUI
_delayExitAfterUITimer
initWithDataSource:
prepareForConnection
didStartAcceptingConnections
_disableRemoteEditingServer
abort
currentDevice
name
stringWithFormat:
stateType
actionRevision
objectForKey:
initWithType:revision:
dictionaryWithDictionary:
setObject:forKey:
_broadCastState:withStateInfo:
sendState:withInfo:toPeer:
domainInfoByID
archivedDataWithRootObject:requiringSecureCoding:error:
base64EncodedStringWithOptions:
rootSettingsProxyDefinitionForDomainID:
applyArchiveValue:forRootSettingsKeyPath:domainID:
restoreDefaultValuesForDomainID:
invokeOutletAtKeyPath:domainID:
unsignedIntegerValue
setActiveTestRecipeID:
supportedStateTypes
localPeerDisplayName
allowedRemotePeerDisplayNames
stateForStateType:withCompletionHandler:
didReceiveState:withInfo:fromPeer:
willConnectToRemotePeer:
didConnectToRemotePeer:
didDisconnectFromRemotePeer:
isEnabled
getAllDomainInfoByID
getRootProxyDefinitionForDomainID:
applyArchiveValue:
invokeOutletAtKeyPath:
sendEventForTestRecipeID:
domainServer
_remoteEditingServerController
_remoteEditingServerControllerRevision
T@"PTDomainServer",R,N,V_domainServer
enabled
TB,N,GisEnabled
defaultDisplayEdgeInfo
PTAVSystemControllerQueue
Prototyping
Volume
@8@?0
v16@?0@8
v16@?0@"PTRow"8
v8@?0
B8@?0
v24@?0q8^B16
Show Prototyping UI
Kill SpringBoard
B24@?0@"PTRow"8@"PTUIModuleController"16
Prevent Screen Dim
preventLockover
com.apple.prototyped
PTDApplication
PTDServer
com.apple.internal.prototyped
prototypeSettingsEnabled
activePrototypingEnabled
remotePrototypingEnabled
PTDServer showing UI
PTDServer active test recipe
PTDServer delay exit after showing UI
v12@?0B8
v16@?0@"NSTimer"8
v16@?0@"FBSOrientationUpdate"8
PTDRemotePrototypingServer accepts remote editing
Prototype on %@
PTRemoteEditingClient
selector
Method
responsePayload
POST
domainID
value
keyPath
event
recipeID
RSPeerToPeerServerController
Unable to find class %s
RSStateInfo
uh oh, our workaround for rdar://problem/45299814 has stopped working!
AVSystemController server connection died; resubscribing to necessary notifications
Successfully subscribed to all necessary AVSystemController notifications: %@
Failed to subscribe to AVSystemController notifications due to error: %@
Prototype daemon did finish launching
PTUIServer expects to only talk to a single client, and it already has one. Refusing additional connection.
handle prototyping event: %@
showing prototyping UI
hiding prototyping UI
Remote editing server did start accepting connections.
Remote editing server couldn't start accepting connection.
Remote editing server disabled.
PTDWindow
PTDRootModuleController
ActionConvenience
PTDPrototypingSettings
PTDApplication
PTDServer
PTUIServer
NSObject
NSXPCListenerDelegate
PTSettingsKeyObserver
PTDRootModuleDelegate
UIApplicationDelegate
PTDRemotePrototypingServer
RSPeerToPeerConnectionControllerDataSource
RSPeerToPeerConnectionControllerDelegate
B16@0:8
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{UIEdgeInsets=dddd}16@0:8
@32@0:8@16@24
@16@0:8
v24@0:8@16
v16@0:8
v20@0:8B16
@"PTDomainServer"
@"PTUIEditingServer"
@"NSObject<OS_dispatch_queue>"
@"<PTDRootModuleDelegate>"
@"PTDPrototypingSettings"
@32@0:8@16@?24
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8q16
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v32@0:8@16@24
v32@0:8@"PTSettings"16@"NSString"24
B48@0:8@16@24@32@40
B40@0:8@16@24@32
v40@0:8@16q24d32
v32@0:8@16q24
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v40@0:8@16@24@?32
v32@0:8@16@?24
Q32@0:8@16@24
@40@0:8@16@24@32
B40@0:8@16@24@?32
v40@0:8@16@24@32
v24@0:8@"UIApplication"16
B32@0:8@"UIApplication"16@"NSDictionary"24
B32@0:8@"UIApplication"16@"NSURL"24
B48@0:8@"UIApplication"16@"NSURL"24@"NSString"32@40
B40@0:8@"UIApplication"16@"NSURL"24@"NSDictionary"32
v40@0:8@"UIApplication"16q24d32
v32@0:8@"UIApplication"16q24
v56@0:8@"UIApplication"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@"UIApplication"16@"UIUserNotificationSettings"24
v32@0:8@"UIApplication"16@"NSData"24
v32@0:8@"UIApplication"16@"NSError"24
v32@0:8@"UIApplication"16@"NSDictionary"24
v32@0:8@"UIApplication"16@"UILocalNotification"24
v48@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@"NSDictionary"40@?<v@?>48
v48@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@"NSDictionary"40@?<v@?>48
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?Q>32
v32@0:8@"UIApplication"16@?<v@?Q>24
v40@0:8@"UIApplication"16@"UIApplicationShortcutItem"24@?<v@?B>32
v40@0:8@"UIApplication"16@"NSString"24@?<v@?>32
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?@"NSDictionary">32
@32@0:8@"UIApplication"16@"INIntent"24
v40@0:8@"UIApplication"16@"INIntent"24@?<v@?@"INIntentResponse">32
Q32@0:8@"UIApplication"16@"UIWindow"24
B32@0:8@"UIApplication"16@"NSString"24
@"UIViewController"40@0:8@"UIApplication"16@"NSArray"24@"NSCoder"32
B32@0:8@"UIApplication"16@"NSCoder"24
v32@0:8@"UIApplication"16@"NSCoder"24
B40@0:8@"UIApplication"16@"NSUserActivity"24@?<v@?@"NSArray">32
v40@0:8@"UIApplication"16@"NSString"24@"NSError"32
v32@0:8@"UIApplication"16@"NSUserActivity"24
v32@0:8@"UIApplication"16@"CKShareMetadata"24
@"UISceneConfiguration"40@0:8@"UIApplication"16@"UISceneSession"24@"UISceneConnectionOptions"32
v32@0:8@"UIApplication"16@"NSSet"24
B24@0:8@"UIApplication"16
@"UIWindow"16@0:8
v24@0:8@"UIWindow"16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
@"NSXPCListener"
@"NSXPCConnection"
@"PTDWindow"
@"PTUISettingsController"
@"PTDRootModuleController"
@"PTDRemotePrototypingServer"
@"FBSOrientationObserver"
@"NSTimer"
v32@0:8Q16@?24
@"NSArray"16@0:8
v32@0:8Q16@?<v@?B@>24
v40@0:8@16@"RSStateInfo"24@"NSString"32
v24@0:8@"MCPeerID"16
@24@0:8@16
@"RSPeerToPeerServerController"
softlink:r:path:/System/Library/PrivateFrameworks/RemoteStateDumpKit.framework/RemoteStateDumpKit
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.QuartzCore.secure-mode</key>
<true/>
<key>com.apple.security.iokit-user-client-class</key>
<array>
<string>IOMobileFramebufferUserClient</string>
</array>
<key>com.apple.springboard-ui.client</key>
<true/>
<key>com.apple.springboard.requestScene-daemon</key>
<true/>
</dict>
</plist>
view
valueForKey:
unsignedIntegerValue
testRecipeSelectionModule
testRecipeIsActive
submoduleWithModule:
stringWithUTF8String:
stringWithFormat:
stateType
sharedInstance
sharedAVSystemController
settingsEditingModule
settings
setUnregisterBlock:
setShowsUI:forEvent:
setRootViewController:
setRemoteObjectInterface:
setPreferredLevel:
setObject:forKey:
setInvalidationHandler:
setHidden:
setHandler:
setFrame:
setExternalCondition:
setExportedObject:
setExportedInterface:
setDismissButton:
setContentScaleFactor:
setAutoresizingMask:
setAttribute:forKey:error:
setActiveCategoryVolumeTo:
sendState:withInfo:toPeer:
sendEvent:forTestRecipeID:
sectionWithRows:title:
sectionWithRows:
scheduledTimerWithTimeInterval:repeats:block:
scale
safeAreaInsetsPortrait
rowWithTitle:valueKeyPath:
rowWithTitle:valueGetter:valueSetter:
rowWithTitle:action:
rootSettingsProxyDefinitionForDomainID:
resume
removeObserver:
remotePrototypingEnabled
remoteObjectProxy
prototypeSettingsEnabled
prepareForConnection
persistChanges
orientation
observeTestRecipeDefaultsOnQueue:withBlock:
observeShowUISwitchDefaultsOnQueue:withBlock:
observeDefault:onQueue:withBlock:
objectForKey:
numberWithFloat:
numberWithBool:
name
moduleWithTitle:contents:
moduleWithSettings:
mainScreen
localSettingsOfClass:
isHidden
isEqualToString:
invokeOutletAtKeyPath:domainID:
invalidate
initWithType:revision:
initWithMachServiceName:
initWithDataSource:delegate:forRemoteEditing:
initWithDataSource:
initWithBarButtonSystemItem:target:action:
getActiveCategoryVolume:andName:
floatValue
domainInfoByID
displayedShowsUIValueForEvent:
didStartAcceptingConnections
dictionaryWithDictionary:
defaultCenter
currentDevice
canEditShowsUIForEvent:
bounds
boolValue
base64EncodedStringWithOptions:
arrayWithObjects:count:
array
archivedDataWithRootObject:requiringSecureCoding:error:
applyArchiveValue:forRootSettingsKeyPath:domainID:
addObserver:selector:name:object:
addObject:
addKeyObserver:
activeTestRecipeIdentifier
activeTestRecipeEatsEvent:
activePrototypingEnabled
activeInterfaceOrientationWithCompletion:
actionWithHandler:
actionRevision
abort
_setRotatableViewOrientation:duration:
_setAllWindowsKeepContextInBackground:
_reloadWithRootModule:
_initWithRootModule:
_animateUsingDefaultTimingWithOptions:animations:completion:
initWithFrame:
_isSecure
_normalizedSafeAreaInsets
init
_setModuleNeedsReload
_avServerConnectionDiedNotification:
reloadRow
initWithDomainServer:editingServer:
module
_volumeSection
_volumeSliderRow
_subscribeToAVSystemControllerNotifications
_hardwareEventSection
_killSection
_sendKillSpringBoard
delegate
setDelegate:
prototypingSettings
moduleNeedsReload
setModuleNeedsReload:
.cxx_destruct
_domainServer
_editingServer
_avQueue
_moduleNeedsReload
_delegate
_prototypingSettings
T@"<PTDRootModuleDelegate>",W,N,V_delegate
T@"PTModule",R,N
T@"PTDPrototypingSettings",R,N,V_prototypingSettings
TB,N,V_moduleNeedsReload
rowWithTitle:actionHandler:
setDefaultValues
settingsControllerModule
preventLockover
setPreventLockover:
_preventLockover
TB,N,V_preventLockover
_isSystemUIService
_systemUIServiceClientSettings
_systemUIServiceIdentifier
_hidePrototypingUI
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
handlePrototypingEvent:
launchForRemoteEditing
listener:shouldAcceptNewConnection:
settings:changedValueForKey:
killSpringBoard
applicationDidFinishLaunching:
application:willFinishLaunchingWithOptions:
application:didFinishLaunchingWithOptions:
applicationDidBecomeActive:
applicationWillResignActive:
application:handleOpenURL:
application:openURL:sourceApplication:annotation:
application:openURL:options:
applicationDidReceiveMemoryWarning:
applicationWillTerminate:
applicationSignificantTimeChange:
application:willChangeStatusBarOrientation:duration:
application:didChangeStatusBarOrientation:
application:willChangeStatusBarFrame:
application:didChangeStatusBarFrame:
application:didRegisterUserNotificationSettings:
application:didRegisterForRemoteNotificationsWithDeviceToken:
application:didFailToRegisterForRemoteNotificationsWithError:
application:didReceiveRemoteNotification:
application:didReceiveLocalNotification:
application:handleActionWithIdentifier:forLocalNotification:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:completionHandler:
application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:
application:didReceiveRemoteNotification:fetchCompletionHandler:
application:performFetchWithCompletionHandler:
application:performActionForShortcutItem:completionHandler:
application:handleEventsForBackgroundURLSession:completionHandler:
application:handleWatchKitExtensionRequest:reply:
applicationShouldRequestHealthAuthorization:
application:handlerForIntent:
application:handleIntent:completionHandler:
applicationDidEnterBackground:
applicationWillEnterForeground:
applicationProtectedDataWillBecomeUnavailable:
applicationProtectedDataDidBecomeAvailable:
application:supportedInterfaceOrientationsForWindow:
application:shouldAllowExtensionPointIdentifier:
application:viewControllerWithRestorationIdentifierPath:coder:
application:shouldSaveSecureApplicationState:
application:shouldRestoreSecureApplicationState:
application:willEncodeRestorableStateWithCoder:
application:didDecodeRestorableStateWithCoder:
application:shouldSaveApplicationState:
application:shouldRestoreApplicationState:
application:willContinueUserActivityWithType:
application:continueUserActivity:restorationHandler:
application:didFailToContinueUserActivityWithType:error:
application:didUpdateUserActivity:
application:userDidAcceptCloudKitShareWithMetadata:
application:configurationForConnectingSceneSession:options:
application:didDiscardSceneSessions:
applicationShouldAutomaticallyLocalizeKeyCommands:
window
setWindow:
T@"UIWindow",&,N
_observeDefaults
_postPrototypingIsActiveNotification
_notePrototypeSettingsEnabled:
_noteActivePrototypingEnabled:
_noteRemotePrototypingEnabled:
_noteHasActiveTestRecipe:
_showOrHidePrototypingUI
_showPrototypingUI
_delayExitAfterShowingUI
_endDelayingExitAfterShowingUI
_frameForShowingSettingsWindow
_frameForHidingSettingsWindow
_updatePreventingLockover
_setUpOrientationObserver
_updateCurrentOrientation:
_listener
_mainQueue
_client
_showingUI
_window
_settingsController
_rootModuleController
_remotePrototypingServer
_interfaceOrientationObserver
_currentOrientation
_hasActiveTestRecipe
_shouldDelayExitAfterUI
_delayingExitAfterUI
_delayExitAfterUITimer
supportedStateTypes
localPeerDisplayName
allowedRemotePeerDisplayNames
stateForStateType:withCompletionHandler:
didReceiveState:withInfo:fromPeer:
willConnectToRemotePeer:
didConnectToRemotePeer:
didDisconnectFromRemotePeer:
initWithDomainServer:queue:
isEnabled
setEnabled:
_disableRemoteEditingServer
_broadCastState:withStateInfo:
getAllDomainInfoByID
getRootProxyDefinitionForDomainID:
applyArchiveValue:
restoreDefaultValuesForDomainID:
invokeOutletAtKeyPath:
sendEventForTestRecipeID:
setActiveTestRecipeID:
domainServer
_remoteEditingServerController
_remoteEditingServerControllerRevision
T@"PTDomainServer",R,N,V_domainServer
enabled
TB,N,GisEnabled
defaultDisplayEdgeInfo
PTAVSystemControllerQueue
Prototyping
Volume
@8@?0
v16@?0@8
v16@?0@"PTRow"8
v8@?0
B8@?0
v24@?0q8^B16
Show Prototyping UI
Kill SpringBoard
B24@?0@"PTRow"8@"PTUIModuleController"16
Prevent Screen Dim
preventLockover
com.apple.prototyped
PTDApplication
PTDServer
com.apple.internal.prototyped
prototypeSettingsEnabled
activePrototypingEnabled
remotePrototypingEnabled
PTDServer showing UI
PTDServer active test recipe
PTDServer delay exit after showing UI
v12@?0B8
v16@?0@"NSTimer"8
v16@?0@"FBSOrientationUpdate"8
PTDRemotePrototypingServer accepts remote editing
Prototype on %@
PTRemoteEditingClient
selector
Method
responsePayload
POST
domainID
value
keyPath
event
recipeID
RSPeerToPeerServerController
Unable to find class %s
RSStateInfo
uh oh, our workaround for rdar://problem/45299814 has stopped working!
AVSystemController server connection died; resubscribing to necessary notifications
Successfully subscribed to all necessary AVSystemController notifications: %@
Failed to subscribe to AVSystemController notifications due to error: %@
Prototype daemon did finish launching
PTUIServer expects to only talk to a single client, and it already has one. Refusing additional connection.
handle prototyping event: %@
showing prototyping UI
hiding prototyping UI
Remote editing server did start accepting connections.
Remote editing server couldn't start accepting connection.
Remote editing server disabled.
PTDWindow
PTDRootModuleController
ActionConvenience
PTDPrototypingSettings
PTDApplication
PTDServer
PTUIServer
NSObject
NSXPCListenerDelegate
PTSettingsKeyObserver
PTDRootModuleDelegate
UIApplicationDelegate
PTDRemotePrototypingServer
RSPeerToPeerConnectionControllerDataSource
RSPeerToPeerConnectionControllerDelegate
B16@0:8
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{UIEdgeInsets=dddd}16@0:8
@32@0:8@16@24
@16@0:8
v24@0:8@16
v16@0:8
v20@0:8B16
@"PTDomainServer"
@"PTUIEditingServer"
@"NSObject<OS_dispatch_queue>"
@"<PTDRootModuleDelegate>"
@"PTDPrototypingSettings"
@32@0:8@16@?24
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8q16
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v32@0:8@16@24
v32@0:8@"PTSettings"16@"NSString"24
B48@0:8@16@24@32@40
B40@0:8@16@24@32
v40@0:8@16q24d32
v32@0:8@16q24
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v40@0:8@16@24@?32
v32@0:8@16@?24
Q32@0:8@16@24
@40@0:8@16@24@32
B40@0:8@16@24@?32
v40@0:8@16@24@32
v24@0:8@"UIApplication"16
B32@0:8@"UIApplication"16@"NSDictionary"24
B32@0:8@"UIApplication"16@"NSURL"24
B48@0:8@"UIApplication"16@"NSURL"24@"NSString"32@40
B40@0:8@"UIApplication"16@"NSURL"24@"NSDictionary"32
v40@0:8@"UIApplication"16q24d32
v32@0:8@"UIApplication"16q24
v56@0:8@"UIApplication"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@"UIApplication"16@"UIUserNotificationSettings"24
v32@0:8@"UIApplication"16@"NSData"24
v32@0:8@"UIApplication"16@"NSError"24
v32@0:8@"UIApplication"16@"NSDictionary"24
v32@0:8@"UIApplication"16@"UILocalNotification"24
v48@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@"NSDictionary"40@?<v@?>48
v48@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@"NSDictionary"40@?<v@?>48
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?Q>32
v32@0:8@"UIApplication"16@?<v@?Q>24
v40@0:8@"UIApplication"16@"UIApplicationShortcutItem"24@?<v@?B>32
v40@0:8@"UIApplication"16@"NSString"24@?<v@?>32
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?@"NSDictionary">32
@32@0:8@"UIApplication"16@"INIntent"24
v40@0:8@"UIApplication"16@"INIntent"24@?<v@?@"INIntentResponse">32
Q32@0:8@"UIApplication"16@"UIWindow"24
B32@0:8@"UIApplication"16@"NSString"24
@"UIViewController"40@0:8@"UIApplication"16@"NSArray"24@"NSCoder"32
B32@0:8@"UIApplication"16@"NSCoder"24
v32@0:8@"UIApplication"16@"NSCoder"24
B40@0:8@"UIApplication"16@"NSUserActivity"24@?<v@?@"NSArray">32
v40@0:8@"UIApplication"16@"NSString"24@"NSError"32
v32@0:8@"UIApplication"16@"NSUserActivity"24
v32@0:8@"UIApplication"16@"CKShareMetadata"24
@"UISceneConfiguration"40@0:8@"UIApplication"16@"UISceneSession"24@"UISceneConnectionOptions"32
v32@0:8@"UIApplication"16@"NSSet"24
B24@0:8@"UIApplication"16
@"UIWindow"16@0:8
v24@0:8@"UIWindow"16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
@"NSXPCListener"
@"NSXPCConnection"
@"PTDWindow"
@"PTUISettingsController"
@"PTDRootModuleController"
@"PTDRemotePrototypingServer"
@"FBSOrientationObserver"
@"NSTimer"
v32@0:8Q16@?24
@"NSArray"16@0:8
v32@0:8Q16@?<v@?B@>24
v40@0:8@16@"RSStateInfo"24@"NSString"32
v24@0:8@"MCPeerID"16
@24@0:8@16
@"RSPeerToPeerServerController"
softlink:r:path:/System/Library/PrivateFrameworks/RemoteStateDumpKit.framework/RemoteStateDumpKit
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.QuartzCore.secure-mode</key>
<true/>
<key>com.apple.security.iokit-user-client-class</key>
<array>
<string>IOMobileFramebufferUserClient</string>
</array>
<key>com.apple.springboard-ui.client</key>
<true/>
<key>com.apple.springboard.requestScene-daemon</key>
<true/>
</dict>
</plist>
