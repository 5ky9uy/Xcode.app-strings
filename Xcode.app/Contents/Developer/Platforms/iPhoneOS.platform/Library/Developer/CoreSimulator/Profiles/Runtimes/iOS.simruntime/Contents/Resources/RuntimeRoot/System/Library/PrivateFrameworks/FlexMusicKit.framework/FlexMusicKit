@(#)PROGRAM:FlexMusicKit  PROJECT:FlexMusicKit-18.2
3333332@@(#)PROGRAM:FlexMusicKit_Static  PROJECT:FlexMusicKit-18.2
3333332@
MbP?
B32@?0@"FMSongAsset"8Q16^B24
no rendition! The playback algorithm could not generate a rendition for this duration or there is an issue with the authoring tool
trackA is not present in rendition.
trackB is not present in rendition.
rendition.durationOfMusic (%@) + rendition.durationOfSilence (%@) should equal rendition.duration %@
Found an invalid clip.duration in rendition. The duration must be > 0.
Clip duration must equal the duration of silence if it is the last clip in the track.
Clip url path %@ does not exist.
Current clip's position: %@ should not begin after the position: %@ of its following clip within the track.
Current clip's position + duration %@ should not exceed the position %@ of its following clip within the track.
Keyframe %@ sampleTime must be less than its following keyframe %@
prevented
fadeOut
fadeIn
transitionSegmentName
useNextSegmentForFadeOut
transitionSegmentName: %@ prevented:%@ fadeOut: %ld, fadeIn: %ld useNext:%@
segment: %@, barsUsed: %lu (%lu), duration: %1.2f
kFlexNetworkReachabilityChangedNotification
com.apple.FlexMusic.reachability
v8@?0
metadata.smm
ANALYSIS
ONSET
B32@?0@"NSString"8Q16^B24
_onset
onsets
analysis
t = %d value = %f
priority %@ cellular: %@
User Initiated
Background
FMTracks:
TrackA: %@
TrackB: %@
tracks
duration
SILENCE
Missing peak value for segment item: %@
Missing loudness value for segment item: %@
v32@?0@"FMTimedMetadataItem"8Q16^B24
FMSongLibraryAvailableSongsChanged
FMSongLibrarySongDownloadInProgressChanged
FMSongLibrarySongDownloadInProgressState
FMSongLibraryReconnectedToNetwork
CloudSupportDisabled
NetworkingDisabled
MobileAssets_ClientID
MobileAssets_AssetTypeIdentifier
MobileAssets_ListenToSystemNotifications
FMSongLibraryInitOption_CustomBundledSongsPath
LoadCacheDuringInit
recalled == NO
FlexAudio
songUID
assetID
progress
songUIDs
v24@?0@"NSArray"8@"NSError"16
metadata
Summaries
songName
artistName
uuid
songFile
audioEncoderPresetName
customOptions
summaryMapping
contentVersion
compatibilityVersion
summaryTime
segmentTime
tagIDs
audioFileExtension
trackTime
segments
sampleRate
songBeats
videoScores
greatCues
goodCues
fadeToBlack
beatTimes
barTimes
lkfs
peak
gainFunction
gain
loopTimes
plistRuntimeVersion
loop point @%f
BODY
section
OUTRO
segment
B32@?0@"NSNumber"8Q16^B24
beat
Expected a FlexMLSongRendition but got a %@.
Final keyframe sampleTime: %@ must be less or equal to the rendition's duration: %@
The last clip's end time of %@ should equal the rendition's duration in seconds: %@. Here we are assuming that clips are using a timescale of 'sampleRate'.
Expected that the number of loops detected (%@) * the max duration detected from the idealDurations.lastObject (%@) is <= the rendition.duration (%@)
Expected a gain value of 0.00000000000001 or 1 for the first and last object in the gainFunction but found %f
Expected a gain value of >= 0 but found: %f
The last segmentTime value (%f) in the gain function must match that of the segment duration (%f).
All video cue values should be < the summary.duration (%f).
Fade to black value should be < the summary.duration (%f).
v32@?0@"NSValue"8Q16^B24
time
INTRO
TRANS
CROSSFADE
FMAssetType
SongBundle
Artwork
Metadata
keywords
clientIDs
hiddenIDs
recalled
sbFmt
_ContentVersion
_CompatibilityVersion
FMSongBundleAssetID
FMSongArtworkAssetID
FMSongAssetDownloadProgressChanged
Mood_
Mood_Ethereal
Mood_Sentimental
Mood_Chill
Mood_Gentle
Mood_Happy
Mood_Uplifting
Mood_Party
Mood_Action
Mood_Epic
Mood_Neutral
SongPace_
SongPace_Slow
SongPace_Medium
SongPace_Fast
MoodAlt_
MoodAlt_Sentimental
MoodAlt_Playful
MoodAlt_Action
MoodAlt_Event
MoodAlt_Chill
MoodAlt_Retro
MoodAlt_Pop
Genre_
Genre_Blues
Genre_Classical
Genre_Country
Genre_Dance
Genre_Electronic
Genre_HipHopRap
Genre_Holiday
Genre_Indie
Genre_Jazz
Genre_KidsFamily
Genre_Latin
Genre_Lounge
Genre_Metal
Genre_Pop
Genre_R&B
Genre_Reggae
Genre_Rock
Genre_SingerSongwriter
Genre_SoulFunk
Genre_StageScreen
Genre_World
Genre_Alternative
Genre_Downtempo
Arousal_
Valence_
VisualTempo_
Region_
smsbundle
FMSongAssetsChanged
error
%@ by %@
self ENDSWITH '.jpg'
self CONTAINS %@
v24@?0@"NSString"8^B16
FlexLogForCategory
FlexLogging.m
category < FlexLoggingCategoryCount
FlexMusicKit
FlexMusicSequencer
FlexMusicCloud
com.apple.FlexMusicKit
FMClips:
%d) %@
v24@?0@"NSMutableArray"8@"NSArray"16
name
position
bars
NumberOfBars - name: %@ id %ld position %ld # bars %ld
BarStartPosition - name: %@ id %ld position %ld bar #%ld
Unknown - name: %@ id %ld position %ld number %ld
FMPurgeMobileAssetsFollowingFetch
com.apple.FlexMusic.mobileAssetPurge
com.apple.FlexMusic.triggerDownloadAndPurge
com.apple.flexmusic.MANotificationQueue
.ma.new-asset-installed
.ma.cached-metadata-updated
v12@?0i8
state IN %@
B24@?0@"MAAsset"8^B16
%K <= %d
B24@?0@"MAAsset"8@"NSDictionary"16
An error occurred while downloading the Mobile Assets catalog: %@
v16@?0q8
q24@?0@"MAAsset"8@"MAAsset"16
Download operation was unsuccessful.
No network connection
v16@?0@"MAProgressNotification"8
MobileAsset error %li
Cancel operation was unsuccessful.
MACancelSucceeded
MSCancelXpcError
MACancelConnectionInterupted
MACancelWasNotDownloading
MACancelFailed
MACancelNotEntitled
MACancelNotApplicableForRequireByOs
MACancelNotApplicableForInstalledWithOs
cancel error %li
MADownloadSucceesful
MADownloadXpcError
MADownloadConnectionInterupted
MADownloadFailed
MADownloadStagingFailed
MADownloadMetaDataProcessFailed
MADownloadUnzipFailed
MADownloadMoveFailed
MADownloadInstallFailed
MADownloadDaemonExit
MADownloadAssetAlreadyInstalled
MAInvalidSZExtractor
MADownloadNotEntitled
MADownloadDaemonNotReady
MADownloadNoChange
MADownloadNotApplicableForRequireByOs
MADownloadNoExtractorFailure
MADownloadTransformFailure
MADownloadNoMatchFound
MADownloadNilAssetType
MADownloadNilAssetId
MADownloadStreamingZipNotSupported
MADownloadBadOptions
MADownloadAssetBadMetaData
MADownloadUnableToCreateMessage
MADownloadFailedNoStandardUrl
MADownloadFailedNoFallBackUrl
MADownloadFailedNoPallasUrl
MADownloadLostTask
MADownloadNotApplicableForInstalledWithOs
MADownloadUnknownResult
MADownloadNoValidSession
MADownloadResponseDeferred
MADownloadIncomplete
MACannotGetPathToStagingDir
MADownloadsNotAllowed
download error %li
MAPurgeSucceeded
MSPurgeXpcError
MAPurgeConnectionInterupted
MAPurgeAssetDidntExist
MAPurgeAssetCouldntPurge
MAPurgeFailed
MAPurgeNotEntitled
MAPurgeNotApplicableForRequireByOs
MAPurgeCouldNotCancelAllDownloads
MAPurgeCannotCreateMessage
MAPurgeEncodingFailure
MAPurgeFailedBeforeFirstUnlock
purge error %li
MAQuerySucceesful
MAQueryXpcError
MAXmlNotPresent
MAQueryFailed
MAQueryDaemonExit
MAQueryNotEntitled
MAQueryCannotCreateMessage
MAQueryNilAssetType
MAQueryParamsEncodeFailure
MABeforeFirstUnlock
MACouldNotEncodeQueryResults
MAQueryUnknownResult
query error %li
OUTRO_STINGER
OUTRO_EARLY_FADE
OutroCanBeShortened
DefaultEarlyFadeStartFromStinger
MinLengthForEarlyFade
IgnoreStingerMarkerForShortening
IgnoreEarlyFadeMarker
MaxOutroLengthToReserve
LoopSongForLongDurations
crossFadeSegments
mainSegments
metadataDict
decodedMainSegments
q24@?0@"FlexSegment"8@"FlexSegment"16
B32@?0@"FlexSegmentAssemblyInfo"8Q16^B24
B32@?0@"FlexSegment"8Q16^B24
%@%@
supply an outro for %@
%@ -> %@
drm_
empty playlist!
invalid default duration playlist. there's a bug in the sequencer
excessive silence: %fs - check allowed transitions, priorities and which segments are sliceable.
Intro Segments cannot be marked as sliceable
Outro Segments cannot be marked as sliceable
Transitions cannot be marked as sliceable
intro added when we should have silence
outro added when we should have silence
body added when we should have silence
unexpected first object - should be nil segment
too many playlist items - there's a bug in the playback sequencing algorithm 
outro expected but not found
body added when we should have only outro and silent segments
intro expected but not found
body added when we should have only intro and outro segments
There is a bug in the smart song or playback sequencing algorithm!
Outro segment is not after all Intro & Body segments
Too many intros added
No intro segments
Too many outros added
No outro segments
expected a body segment
v32@?0@"FlexSegmentAssemblyInfo"8Q16^B24
89EE9F2B-CEB7-4B06-8388-D12A7BFF78A8
0B84454E-B24A-44BC-9068-F88B899EDD2F
transition from %@ to %@ should be permitted but is not. successive segments in the clipPlaylist should transition into another.
transition from %@ to %@ should not occur. there is a problem with the playback sequencing algorithm.
there should be no crossfade segments when using real-time crossfades.
transition sequenced from %@ to %@ but not allowed. algorithm bug? 
transition segment specified for %@ to %@ but not found
transition segment specified for %@ to %@ but incorrect segment %@ was found instead. playback sequencing algorithm issue?
incorrect transition segment found after %@. Bug in sequencing algorithm
samplesPerBar is -1, customBarMarkers.count should be > 0 please fix %@
samplesPerBar is -1, customBarMarkers.count should equal segment.bars please fix %@
custom barDuration should be less than sampleCount. please fix %@
samplesPerBar should be less than sampleCount if we have more than one bar. please fix %@
samplesPerBar should equal sampleCount if we only have one bar. please fix %@
samplesPerBar should not be 0. please fix %@
sample rates must be the same for all segments. please fix %@
Expected a %@ class but found a %@
no playlist! The playback algorithm could not generate a playlist for this duration or there is an issue with the authoring tool
expected duration (%.2fs, %lld) does not match duration (%.2fs, %lld) of clipPlaylist! Possibly no valid intro or outro valid for this duration?
could not determine url for segment "%@"
audio file does not exist for segment "%@"
could not read info for audio file: "%@"
audio file sample rate (%ld) does not match sample rate (%ld) of "%@"
%@: kExtAudioFileProperty_FileLengthFrames (%lld) does not match segment.sampleCount (%lld)
Timed out waiting for %@ to load
%@: asset.duration (%lld) does not match segment.sampleCount (%lld)
%@ %@
energy
silence
%@ BarIndex %d
%@ BarIndex %d BeatIndex %d
onset @ %f
loop point @ %f
Keyframes: 
%d) %@
v32@?0@"FMKeyFrame"8Q16^B24
com.apple.Memories
Assets
FMTimedMetadataIdentifierSection
SectionType
BodyNumber
OutroStinger
OutroEarlyFade
FadeToBlack
FMTimedMetadataIdentifierSegment
SegmentType
Priority
BodyLetter
BarsUsed
Energy
PeakValue
Loudness
FMTimedMetadataIdentifierBar
BarIndex
BeatsPerBar
FMTimedMetadataIdentifierBeat
BeatIndex
FMTimedMetadataIdentifierOnset
FMTimedMetadataIdentifierLoopPoints
%@ (%1.2f) - %@
priority
beatsPerBar
sampleCount
sliceable
customBarMarkers
transitions
markers
peakValue
loudness
Tempo:
q24@?0@"FlexMarker"8@"FlexMarker"16
Cannot open audio file: %@
name %@
Body
Trans
v32@?0@"FlexSegment"8Q16^B24
pos: %lld, offset: %lld, duration: %lld, file: %@
ERROR: Could not start notifier for %@
ERROR: Attempting to start notifier when already notifying for %@
ERROR: Could not stop notifier for %@
Posting kFlexReachabilityChangedNotification for %@
server type not supported yet
Song with uid: %@ is already registered
refresh requested. will try again in %1.0f seconds
Timed out waiting for tracks to load for asset: "%@"
0 audio tracks found in asset: "%@"
loading cached songs
cache loaded in %.2f seconds
library initialized in %.2f seconds
loading %lu songs from %@
Attempted to handle success or error from fetchAllSongsWithCompletion: but self is nil.
flex: Requesting ML format rendition for duration %.2f
Found %@ number of loop points in rendition.
Failed to load FlexSong _impl for song: %@
ERROR: _loadFlexSong: Attempting to load already loaded FlexSong for song: %@
invalid duration requested in renditionForDuration for song: %@
flex: requested unknown cache type %@!
flex: error setting up query with addKeyValueArray
flex: requesting MAAssetQuery
flex: %ld assets queried in %.2f seconds
flex: XML not present
flex: MetaDataSync query failed with error code %@
flex: rebuilding %@ cache
flex: missing assets after rebuild! falling back to direct query!
StrongSelf is nil in _newestContentSetFromAssets. Returning...
flex: cached songs processed in %.2f seconds
MA: Purging all Mobile Assets
Completed catalog download with MADownloadResult: %@
flex: existingSongAssetPath is nil!
flex: could not create replacement backend
flex: attempting to load a song that doesn't exist
flex: could not locate smsBundle
FlexMobileAssetManagerV2 is nil from _dispatchNextAsyncAssetDownloadAndPurge:
There are currently %lu assets downloading and %lu assets in the _pendingDownloadsSet.
Beginning download of %@ %@ with options %@
Not downloading %@ due to no existing song
Not downloading %@ due to asset not MobileAsset backed
Not downloading %@ because asset is already local and there is no cloud update available.
Not downloading %@ due to recall
Not downloading %@ because no mobile asset exists.
Not downloading due to nil mobile asset
Not downloading since network is not reachable
Starting download task for UID: %@ assetID: %@
attempted to download but no cloud manager
Ending download task for UID: %@ assetID: %@. MADownloadResult: %@
Cancel request after downloading, purging %@ %@
Asset download failed when attempting to download asset %@ %@ - %lu
Asset download canceled %@ %@
Completed processing of %@ %@
Cancel download failed for mobile asset with songUID: %@ assetID: %@ - no mobile asset associated with song asset
Cancel: Could not remove download options for songUID: %@ assetID: %@ - no associated options for mobile asset %@
Cancel download failed for mobile asset with songUID: %@ assetID: %@ MACancelDownloadResult: %@
Cancel download success for mobile asset with songUID: %@ assetID: %@ 
attempted to purge but no cloud manager
purge failed for %@ %@ error: %@
refreshState failed for %@ %@
attempting to purge on a non MobileAsset backed asset %@ %@
cannot purge due to nil mobileAsset %@ %@
flex: missing metadataDict!
flex: missing decodedMainSegments!
cannot call _actualOutroDurationForAssemblyList without first assembling body segments!
flex: Requesting legacy format rendition for duration %.2f
expected silence or outro at end. Algorithm bug?
%@: kExtAudioFileProperty_FileLengthFrames is 1 sample longer than segment.sampleCount %lld
%@: asset.duration %lld is 1 sample longer than segment.sampleCount %lld
Relinking transitions for segment %@ because it is not Sliceable
Invalid sole marker
FlexSongBackend
FlexSongProtocol
FlexTransition
NSCopying
NSDictionaryCoding
FMFetchOptions
FlexSegmentAssemblyInfo
FlexReachability
FlexCloudManager
FlexSongMetaDataReader_V2
FlexSongMetadataReaderUtils
FMKeyFrame
FMDownloadOptions
FMSongRendition
FMSongLibrary
FlexMLSong
FlexMLSummaryManager
FlexSongAssetProvider_V1
FlexSongAssetProviderProtocol
FlexSongAssetProvider_V2
FMSongAsset
FMSong
FlexCloudFetchOptions
FMTrack
FlexMLSummary
FlexMLSegment
FlexMLGainValue
FlexMLSongRendition
FlexMarker
MAAssetAdditions
FlexMobileAssetV2SongAsset
FlexMobileAssetManagerV2
NSCacheDelegate
NSObject
FlexSongProxy
FlexSong
FMMixParameters
FlexTestingContext
FlexUtilities
FlexCloudSongAsset
FMTimedMetadataItem
FlexSegmentAudioFileInfo
FlexSegment
FMClip
FlexLegacySongRendition
init
countByEnumeratingWithState:objects:count:
setSongUID:
assets
mutableCopy
array
assetID
isEqualToString:
indexOfObjectPassingTest:
addObject:
replaceObjectAtIndex:withObject:
existingAssetWithID:
trackA
trackB
durationOfMusic
durationOfSilence
duration
numberWithLongLong:
stringWithFormat:
clips
_verifyClips:inRendition:failureReason:
mixParameters
volumeKeyFrames
_verifyKeyFrames:failureReason:
defaultManager
count
objectAtIndexedSubscript:
path
fileExistsAtPath:
position
sampleTime
canPlay
isLoaded
updateAssets:
assetWithID:
renditionForDuration:withOptions:testingContext:
naturalDuration
minimumDuration
idealDurations
timedMetadataItemsWithIdentifier:forRendition:
verifyRendition:forDuration:failureReason:
audioEncoderPresetName
songName
artistName
tagIDs
keywords
songFormat
sampleRate
hidden
recalled
metadataVersion
customOptions
T@"NSString",R,N
T@"NSSet",R,N
T@"NSArray",R,N
Tq,R,N
TB,R,N
T@"NSDictionary",R,N
initWithUID:songName:artistName:tagIDs:keywords:hidden:recalled:audioEncoderPresetName:metadataVersion:songFormat:sampleRate:customOptions:
updateSampleRate:
updateSongArtist:title:tags:keywords:hidden:recalled:metadataVersion:
setUid:
setAudioEncoderPresetName:
setSongName:
setArtistName:
setTagIDs:
setKeywords:
setAssets:
setSongFormat:
setSampleRate:
setHidden:
setRecalled:
setMetadataVersion:
setCustomOptions:
.cxx_destruct
_hidden
_recalled
_uid
_audioEncoderPresetName
_songName
_artistName
_tagIDs
_keywords
_assets
_songFormat
_sampleRate
_metadataVersion
_customOptions
T@"NSString",&,N,V_uid
T@"NSString",&,N,V_audioEncoderPresetName
T@"NSString",&,N,V_songName
T@"NSString",&,N,V_artistName
T@"NSSet",&,N,V_tagIDs
T@"NSSet",&,N,V_keywords
T@"NSArray",&,N,V_assets
T@"NSString",&,N,V_songFormat
Tq,N,V_sampleRate
TB,N,V_hidden
TB,N,V_recalled
Tq,N,V_metadataVersion
T@"NSDictionary",&,N,V_customOptions
validFadeLengthForLength:
objectForKey:
boolValue
integerValue
dictionary
prevented
numberWithBool:
setValue:forKey:
fadeOut
numberWithInteger:
fadeIn
transitionSegmentName
useNextSegmentForFadeOut
copyWithZone:
encodeAsDictionary
initWithDictionary:
initWithTransitionSegmentNamed:prevented:fadeOut:fadeIn:useNextSegmentForFadeOut:
description
isDefaultTransition
_prevented
_useNextSegmentForFadeOut
_fadeOut
_fadeIn
_transitionSegmentName
TB,R,N,V_prevented
Tq,R,N,V_fadeOut
Tq,R,N,V_fadeIn
T@"NSString",R,C,N,V_transitionSegmentName
TB,R,N,V_useNextSegmentForFadeOut
predicate
setPredicate:
sortDescriptors
setSortDescriptors:
_predicate
_sortDescriptors
T@"NSPredicate",&,N,V_predicate
T@"NSArray",&,N,V_sortDescriptors
segment
name
barsUsed
bars
allocWithZone:
offset
setSegment:
setBarsUsed:
setUrl:
setOffset:
setDuration:
_segment
_barsUsed
_url
_offset
_duration
T@"FlexSegment",&,N,V_segment
Tq,N,V_barsUsed
T@"NSURL",&,N,V_url
Tq,N,V_offset
Tq,N,V_duration
UTF8String
reachabilityWithAddress:
stopNotifier
dealloc
localWiFiStatusForFlags:
networkStatusForFlags:
reachabilityWithHostName:
reachabilityForInternetConnection
reachabilityForLocalWiFi
startNotifier
connectionRequired
interventionRequired
currentReachabilityStatus
reachabilityQueue
setReachabilityQueue:
_isNotifying
localWiFiRef
reachabilityRef
_reachabilityQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_reachabilityQueue
defaultCenter
postNotificationName:object:
initWithLibrary:options:
cloudManagedSongsByUID
cloudManagedSongs
setObject:forKey:
retryCount
library
_updateFromCloud
setRetryCount:
requestDownloadOfAsset:withOptions:
isCloudBacked
songUID
_purgeAndReturnReplacementFor:
arrayWithObjects:count:
createCloudManager:withLibrary:options:
initWithLibrary:
_registerSongs:
fetchAllSongsWithCompletion:
retryFetchAllSongs
loadAssetWithID:forSongID:
requestDownloadOfAsset:
cancelDownloadOfAsset:
cancelDownloadOfAllAssets
loadCachedSongs
requestPurgeOfAsset:
assetStatus:
_library
_cloudManagedSongs
_cloudManagedSongsByUID
_retryCount
TQ,N,V_retryCount
T@"FMSongLibrary",R,W,V_library
T@"NSMutableArray",R,V_cloudManagedSongs
T@"NSMutableDictionary",R,V_cloudManagedSongsByUID
_pathToMetadata:
fileExistsAtPath:isDirectory:
stringByAppendingPathComponent:
isSongAtPath:
dataWithContentsOfFile:
JSONObjectWithData:options:error:
objectForKeyedSubscript:
fileURLWithPath:
initWithAssetID:assetStatus:localURL:contentVersion:compatibilityVersion:
initWithDictionary:assets:
songAtPath:
contentsOfDirectoryAtPath:error:
stringWithContentsOfFile:encoding:error:
componentsSeparatedByString:
indexesOfObjectsPassingTest:
removeObjectsAtIndexes:
stringByDeletingPathExtension
stringByReplacingOccurrencesOfString:withString:
dictionaryWithDictionary:
addAnalysisMetadataToDictionary:pathToRoot:
value
initWithValue:atTime:
setSampleTime:
setValue:
_value
_sampleTime
Tq,N,V_sampleTime
Tf,N,V_value
_configureDefaults
setAllowsCellular:
setDownloadPriority:
downloadPriority
allowsCellular
_allowsCellular
_downloadPriority
TB,N,V_allowsCellular
TQ,N,V_downloadPriority
stringByAppendingString:
lastObject
appendVolumeKeyframe:
insertVolumeKeyframe:
volumeValueAtTime:
removeRedundantVolumeKeyFrames
composition
song
options
_buildOutroFadeoutMixParams
addMutableTrackWithMediaType:preferredTrackID:
dictionaryWithObjects:forKeys:count:
URLAssetWithURL:options:
loadValuesAsynchronouslyForKeys:completionHandler:
tracksWithMediaType:
objectAtIndex:
insertTimeRange:ofTrack:atTime:error:
audioMixInputParametersWithTrack:
coalesceMixParamsA:withMixParamsB:
setVolumeRampFromStartVolume:toEndVolume:timeRange:
audioMix
setInputParameters:
timedMetadataItemsWithIdentifier:
values
doubleValue
timeRange
enumerateObjectsUsingBlock:
initWithSong:andOptions:
avCompositionWithAudioMix:includeShortenedOutroFadeOut:
_maxPeakAndLoudness:missingPeakValueCount:missingLoudnessCount:
setTrackA:
setTrackB:
setDurationOfSilence:
setDurationOfMusic:
setSong:
_trackA
_trackB
_options
_durationOfSilence
_durationOfMusic
_song
T@"NSObject<FlexSongProtocol>",&,N,V_song
T@"FMTrack",&,N,V_trackA
T@"FMTrack",&,N,V_trackB
Tq,N,V_durationOfSilence
Tq,N,V_durationOfMusic
T@"NSDictionary",R,N,V_options
initWithOptions:
_setupReachability
date
_createCloudManager
_loadBundledSongs
_loadCachedSongs
timeIntervalSinceDate:
removeObserver:
cloudManager
songsByUID
fetchSongsWithOptions:
predicateWithFormat:
andPredicateWithSubpredicates:
songs
filteredArrayUsingPredicate:
addObjectsFromArray:
sortedArrayUsingDescriptors:
removeAllObjects
pathToBundledResourceWithName:
loadSongsAndArtworkInFolderAtPath:
arrayWithArray:
setBundledSongs:
_notifySongsChanged:
loadSongBundleAtPath:
_downloadProgressChanged:
addObserver:selector:name:object:
firstObject
removeObject:
removeObjectForKey:
removeObserver:name:object:
userInfo
fetchSongWithUID:
assetsInFlight
containsObject:
_notifySongDownloadInProgressChanged:
setFlexReachability:
flexReachability
setNetworkStatus:
networkStatusChanged:
networkStatus
contactedCloud
setCloudManager:
dictionaryWithObjectsAndKeys:
postNotificationName:object:userInfo:
dictionaryWithObject:forKey:
setContactedCloud:
requestDownloadOfAllAssetsWithIDs:withOptions:
purgeLocalCache
sharedLibraryWithOptions:
fetchSongsWithOptions_photos_only:
registerSongBundleAtPath:
unregisterSongWithID:
requestDownloadOfAllAssetsWithIDs:
purgeAllLocalCachedAssetsWithIDs:
supportForCloud
networkingIsDisabled
setSongs:
setSongsByUID:
setAssetsInFlight:
bundledSongs
_networkingIsDisabled
_contactedCloud
_songs
_songsByUID
_assetsInFlight
_cloudManager
_flexReachability
_networkStatus
_bundledSongs
T@"NSMutableArray",&,N,V_songs
T@"NSMutableDictionary",&,N,V_songsByUID
T@"NSMutableSet",&,N,V_assetsInFlight
T@"FlexCloudManager",&,N,V_cloudManager
T@"FlexReachability",&,N,V_flexReachability
Tq,N,V_networkStatus
TB,N,V_contactedCloud
T@"NSArray",&,N,V_bundledSongs
TB,R,N,V_networkingIsDisabled
initWithFileAtPath:
pathExtension
dictionaryWithContentsOfFile:
setWithArray:
_setupInitialAssets:
initWithSummaryMapping:bundlePath:metadataPath:targetTimeScale:
_summaryManager
summaryForDuration:
initWithSong:options:andSummary:forDuration:
summary
videoCues
lkfsValue
peakValue
arrayByAddingObjectsFromArray:
compare:
sortedArrayUsingSelector:
orderedSet
loopPoints
initWithIdentifier:name:timeRange:values:
isEqualToNumber:
numberWithDouble:
allBars
indexOfObject:
numberWithFloat:
allBeats
objectsAtIndexes:
adjustDurationTo:
CMTimeValue
numberWithUnsignedInteger:
numberWithInt:
segments
gainFunction
gain
isEqual:
segmentTime
floatValue
allSummaryDurations
localURL
audioFileExtension
loadSongAtPath:
audioFileURL
rootPath
metadataPath
setAudioFileExtension:
cachedNaturalDuration
setCachedNaturalDuration:
_rootPath
_metadataPath
_audioFileExtension
_cachedNaturalDuration
T@"NSString",R,N,V_rootPath
T@"NSString",R,N,V_metadataPath
T@"NSString",&,N,V_audioFileExtension
T{?=qiIq},N,V_cachedNaturalDuration
T@"NSURL",R,N
valueWithCMTime:
allDurations
enumerateObjectsWithOptions:usingBlock:
averageGranularityBetweenSummaries
_summaryForDuration:
targetTimeScale
summaryFromSummaries:targetTimeScale:
allFileNames
initWithDictionary:targetTimeScale:
sortUsingSelector:
trackTime
summaryTime
_targetTimeScale
_allFileNames
_allDurations
T@"NSArray",R,N,V_allFileNames
T@"NSArray",R,N,V_allDurations
Ti,R,N,V_targetTimeScale
rootFolderPath
stringByAppendingPathExtension:
urlToRoot
urlToAudioContainerForSegmentType:
urlToAudioForSegment:
initWithFolderPath:
setRootFolderPath:
_rootFolderPath
T@"NSString",&,N,V_rootFolderPath
_folderNameForSegmentType:
type
initWithFolderPath:audioFileExtension:
assetsAreLocal
contentVersion
compatibilityVersion
requestDownload
requestDownloadWithOptions:
cancelDownload
localURLExists
updateDownloadProgress:
downloadProgress
contentUpdateAvaliable
contentVersionForAssetLocation:
compatibilityVersionForAssetLocation:
assetStatus
_downloadProgress
_assetID
_songUID
_assetStatus
_localURL
_contentVersion
_compatibilityVersion
Tq,R,N,V_contentVersion
Tq,R,N,V_compatibilityVersion
T@"NSString",R,V_assetID
T@"NSString",&,V_songUID
TQ,R,V_assetStatus
T@"NSURL",R,V_localURL
_notifySongAssetsChanged
_loadFlexSong
_impl
_loadIfNeeded
rangeOfString:
decimalDigitCharacterSet
invertedSet
componentsSeparatedByCharactersInSet:
componentsJoinedByString:
loadSongInFolderWithPath:
initWithBackend:
stringByDeletingLastPathComponent
lastPathComponent
versionFromArtworkFilename:
hasPrefix:
availableTagIDs
localizedNameForTagWithID:
hasValidTagIDs:
updateBackend:
updateAsset:downloadProgress:error:
uid_photos_only
cancelDownloadOfAllAssetsWithIDs:
renditionForDuration:withOptions:
backend
_backend
T@"NSObject<FlexSongProtocol>",R,V_backend
localOnly
setLocalOnly:
_localOnly
TB,N,V_localOnly
initWithClips:mixParameters:
setClips:
setMixParameters:
_clips
_mixParameters
T@"NSArray",&,N,V_clips
T@"FMMixParameters",&,N,V_mixParameters
arrayWithCapacity:
initWithGain:segmentTime:
initWithDuration:trackTime:summaryTime:gainFunction:
setVideoCues:
setLkfsValue:
setPeakValue:
setSegments:
_peakValue
_videoCues
_allBeats
_allBars
_loopPoints
_lkfsValue
_segments
T@"NSArray",&,N,V_segments
T@"NSDictionary",&,N,V_videoCues
T{?=qiIq},N,V_duration
Td,N,V_lkfsValue
Tf,N,V_peakValue
T@"NSArray",R,N,V_allBeats
T@"NSArray",R,N,V_allBars
T@"NSArray",R,N,V_loopPoints
_gainFunction
_trackTime
_summaryTime
T{?=qiIq},R,N,V_duration
T{?=qiIq},R,N,V_trackTime
T{?=qiIq},R,N,V_summaryTime
T@"NSArray",R,N,V_gainFunction
_gain
_segmentTime
Tf,R,N,V_gain
T{?=qiIq},R,N,V_segmentTime
_calculateDuration:
_buildTracks
setPosition:
setSummary:
_summary
T@"FlexMLSummary",&,N,V_summary
_decodeTypeAndBarsFromName
longLongValue
markerID
lowercaseString
scannerWithString:
scanUpToCharactersFromSet:intoString:
scanInteger:
number
initWithName:markerID:position:
_name
_markerID
_position
_type
_number
T@"NSString",R,C,N,V_name
Tq,R,N,V_markerID
Tq,R,N,V_position
TQ,R,N,V_type
Tq,R,N,V_number
refreshState
state
isPresent
initWithAssetID:assetStatus:localURL:cloudManager:contentVersion:compatibilityVersion:
assetId
mobileAssetsForAssetPropertyType:songUID:
assetWithNewestContentVersionInAssets:preferInstalled:
attributes
_metadataForAssetWithNewestContentVersion
mobileAsset
_mobileAssetIsPurging:
_mobileAssetIsDownloading:
initWithAssetID:asset:localURL:cloudManager:contentVersion:compatibilityVersion:
mobileAssetID
_mobileAssetID
T@"NSString",R,V_mobileAssetID
mapTableWithKeyOptions:valueOptions:
_registerAndHandleSystemMobileAssetNotifications
setDelegate:
cStringUsingEncoding:
intValue
_requeryForMobileAssetTypes:forUUIDs:
initWithType:
setDoNotBlockBeforeFirstUnlock:
returnTypes:
addKeyValueArray:with:
queryMetaDataSync
setXMLPresent:
results
_mobileAssetQueryResultStringValue:
_cacheForAssetType:
_mobileAssetsForAssetTypes:
arrayByAddingObject:
_rebuildMobileAssetCaches:
anyObject
allObjects
setWithObjects:
objectsPassingTest:
containsString:
setWithObject:
_metadataMappingForUUIDSet:
_updateMetadataOnExistingSong:usingAsset:metadataAsset:
allValues
predicateWithBlock:
filterUsingPredicate:
purgeSync
setWithSet:
mobileAssetsForAssetPropertyType:
_newestContentSetFromAssets:metadataMapping:
filterByClientIDForAssets:forMetadataMapping:
_processResults:metadataMapping:
standardUserDefaults
boolForKey:
_mobileAssetDownloadOptionsForClientOptions:
XMLPresent
setDiscretionary:
_mobileAssetDownloadResultStringValue:
_responseForDownloadResult:
_requeryForMobileAssetTypes:
errorWithDomain:code:userInfo:
startCatalogDownload:options:then:
getLocalUrl
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
initWithUID:songName:artistName:tagIDs:keywords:hidden:recalled:assets:audioEncoderPresetName:metadataVersion:songFormat:
_updateExistingSong:usingAsset:metadataAsset:forceUpdate:
_assetIDForMobileAsset:
_assetURLForMobileAsset:
sortedArrayUsingComparator:
_existingSongForUID:
_updateExistingSong:usingAsset:metadataAsset:
_loadBundledArtworkForSongID:
_runNextAsyncAssetDownloadAndPurge
_runAsyncAssetDownloadForMobileAsset:
_purgeAsset:
_dispatchNextAsyncAssetDownloadAndPurge
setAllowsCellularAccess:
setTimeoutIntervalForResource:
totalExpected
totalWritten
attachProgressCallBack:
startDownload:then:
_mobileAssetCancelDownloadResultStringValue:
cancelDownload:
copy
_loadBundledSongForSongID:
_mobileAssetPurgeResultStringValue:
compatibilityFilterPredicate
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
cache:willEvictObject:
purgeQueue
setPurgeQueue:
triggerDownloadAndPurgeQueue
setTriggerDownloadAndPurgeQueue:
includeArtworkInQueries
setIncludeArtworkInQueries:
_clientID
_mobileAssetTypeIdentifier
_downloadThrottleLock
_mobileAssetCacheLock
_pendingDownloadSet
_processingDownloadSet
_dowloadOptionsMapping
_pendingPurgeSet
_processingPurgeSet
_assetInstalledNotificationToken
_catalogUpdatedNotificationToken
_notificationQueue
_metadata_mobileAssetCache
_songbundle_mobileAssetCache
_artwork_mobileAssetCache
_includeArtworkInQueries
_XMLPresent
_purgeQueue
_triggerDownloadAndPurgeQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_purgeQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_triggerDownloadAndPurgeQueue
TB,N,V_includeArtworkInQueries
TB,N,V_XMLPresent
_cacheSegmentsByType
initCommonWithUID:songName:artistName:tagIDs:keywords:hidden:sampleRate:mainSegments:crossFadeSegments:audioFileExtension:audioEncoderPresetName:metadataVersion:customOptions:
decodeItemsInArray:asClass:
_loadAnalysisData
_decodedMainSegmentsFromCache
encodeItemsInArray:
_destroyCache
assetProvider
_naturalDurationAssemblyList
_sampleDurationOfClipPlaylist:
_populateCache
_cacheObjectForKey:
_metadataDictFromCache
segmentsWithType:inSegments:
_segmentsforType:
nameIndex
_highestIndexForSegmentType:
_segmentsForIndex:andType:
_sortFlexSegmentsShortestToLongest:
sliceable
_shortestSegmentsForType:
sampleCount
_transitionSegmentForSegmentInfo:toSegmentInfo:fromBarIndex:inSegmentList:
transitionToSegmentNamed:fromBarIndex:
_shortestSegmentForType:
_longestSegmentForType:
linkedPerBarTransitionsToSegmentNamed:
canTransitionFromSegment:toSegment:fromBarIndex:checkIfPrevented:
_updateTransitionBodySegmentsForAssemblyList:usingNewSegment:indexOfNewTransitionSegment:
_addOutroSegmentsToAssemblyList:forDuration:allowTrim:testingContext:
_addIntroSegmentsToAssemblyList:forDuration:testingContext:
numberToString:
nameSuffix
allKeys
localizedCaseInsensitiveContainsString:
localizedCaseInsensitiveCompare:
length
substringToIndex:
namePrefix
nameStem
insertObject:atIndex:
_addSegment:withDuration:toAssemblyList:timeRemaining:reusedSegment:indexofNewSegment:
barDurationForBarIndex:
_sequenceBodySegmentList:forIndexes:
_addSegment:withDuration:toAssemblyList:indexOfNewSegment:
_removeSegmentInfo:fromAssemblyList:
addIndex:
_removeUnpermittedTransitionsInAssemblyList:final:testingContext:removedIndexes:conflictList:
removedConflicts
priority
isEqualToArray:
compare:options:
indexSet
firstIndex
indexGreaterThanIndex:
addIndexes:
_removeUnpermittedTransitionsInAssemblyList:final:testingContext:removedIndexes:
maxPassesToFit
setMaxPassesToFit:
_addBodySegmentsForAssemblyList:forDuration:unusedDuration:testingContext:timedOut:
markers
_findMaxLengthInSamplesToReserveForOutroSegment:withOptions:
_findEarlyFadeStartOffsetInSamplesForOutroSegment:withOptions:
_findMinLengthInSamplesForEarlyFadeOutForOutroSegment:withOptions:
_minOutroDuration
_durationInSamplesToReserveForOutroSegment:withOptions:
_maxOutroDuration
_buildIntroAndOutroOnlySegmentAssemblyList:forDuration:testingContext:
outroInfoForClipPlaylist:
setSequencingLongSong:
_clipPlaylistForDuration:withOptions:testingContext:
_fullSongLoopedClipPlaylistForDuration:withOptions:testingContext:
initWithSong:segments:withOptions:
_buildSegmentAssemblyList:forDuration:withOptions:testingContext:
removeObjectAtIndex:
characterAtIndex:
samplesPerBar
customBarMarkers
_samplesForDuration:
_validateAuthoringIssuesInRendition:failureReason:
_validateStructureForRendition:failureReason:
_validateTransitionsInRendition:failureReason:
readInfoFromAudioFileAtPath:
_verifyAssetsForSegment:withFailureReason:
longLabelForSegmentType:
metadataValueForKey:
analysisData
beatsPerBar
removeLastObject
_transitionIsPossibleFromSegment:toSegment:forBodyClipPlaylist:
initWithUID:songName:artistName:tagIDs:keywords:hidden:sampleRate:mainSegments:crossFadeSegments:assets:audioFileExtension:audioEncoderPresetName:metadataVersion:customOptions:
_mainSegmentsFromCache
_loadSegments
_longestSegmentsForType:
_transitionSegmentForSegmentInfo:fromBarIndex:inSegmentList:
_minBodySegmentDuration
_maxIntroDuration
_minIntroDuration
_actualOutroDurationForAssemblyList:currentDuration:
_minimumPermittedIntroAndOutroDuration
_rebuildBodySegmentsInAssemblyList:forDuration:unusedDuration:testingContext:
verifyAssetsWithFailureReason:
mainSegments
crossFadeSegments
introSegments
outroSegments
transSegments
bodySegments
_analysisData
_segmentCache
_assetProvider
_bodySegments
T@"NSString",R,N,V_audioFileExtension
T@"NSObject<FlexSongAssetProviderProtocol>",R,N,V_assetProvider
T@"NSArray",R,N,V_bodySegments
lastVolumeKeyFrame
removeObjectsInArray:
setVolumeKeyFrames:
volumeKeyframesAreValid
_volumeKeyFrames
T@"NSArray",&,N,V_volumeKeyFrames
timedOut
setTimedOut:
usingPreventedIntro
setUsingPreventedIntro:
usingPreventedOutro
setUsingPreventedOutro:
setRemovedConflicts:
maxSilenceDuration
setMaxSilenceDuration:
maxSilenceDurationTime
setMaxSilenceDurationTime:
maxSilenceUnderSetDuration
setMaxSilenceUnderSetDuration:
maxSilenceUnderSetDurationTime
setMaxSilenceUnderSetDurationTime:
maxSilencePercentage
setMaxSilencePercentage:
maxSilencePercentageTime
setMaxSilencePercentageTime:
minOutroDuration
setMinOutroDuration:
minOutroDurationTime
setMinOutroDurationTime:
sequencingLongSong
_timedOut
_usingPreventedIntro
_usingPreventedOutro
_sequencingLongSong
_maxPassesToFit
_removedConflicts
_maxSilenceDuration
_maxSilenceUnderSetDuration
_maxSilencePercentage
_maxSilenceDurationTime
_maxSilenceUnderSetDurationTime
_maxSilencePercentageTime
_minOutroDurationTime
TB,N,V_timedOut
TB,N,V_usingPreventedIntro
TB,N,V_usingPreventedOutro
Tq,N,V_maxPassesToFit
T@"NSCountedSet",&,N,V_removedConflicts
Tq,N,V_maxSilenceDuration
T{?=qiIq},N,V_maxSilenceDurationTime
Tq,N,V_maxSilenceUnderSetDuration
T{?=qiIq},N,V_maxSilenceUnderSetDurationTime
Td,N,V_maxSilencePercentage
T{?=qiIq},N,V_maxSilencePercentageTime
Tq,N,V_minOutroDuration
T{?=qiIq},N,V_minOutroDurationTime
TB,N,V_sequencingLongSong
decodeItemsInDict:asClass:
_decodeItem:asClass:
encodeItemsInDict:
bundleForClass:
pathForResource:ofType:
mainBundle
bundleWithIdentifier:
arrayWithObjects:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
getResourceValue:forKey:error:
songsFoundInDeepScanOfDirectory:
T@"FlexCloudManager",R,W,V_cloudManager
identifier
_identifier
_values
_timeRange
T@"NSString",R,V_identifier
T@"NSString",R,V_name
T{?={?=qiIq}{?=qiIq}},R,V_timeRange
T@"NSDictionary",R,V_values
setSampleCount:
setBpm:
setBars:
setSamplesPerBar:
setCustomBarMarkers:
_sampleCount
_bpm
_bars
_samplesPerBar
_customBarMarkers
Tq,N,V_sampleCount
Tq,N,V_bpm
Tq,N,V_bars
Tq,N,V_samplesPerBar
T@"NSArray",&,N,V_customBarMarkers
_decodeTypeInfoFromSegmentName
relinkAllTransitions
transitions
fileURLWithPath:isDirectory:
scanString:intoString:
scanCharactersFromSet:intoString:
sortUsingComparator:
scanUpToString:intoString:
scanLocation
setScanLocation:
barStartPositionForBarIndex:
barEndPositionForBarIndex:
errors
metadataValues
setObject:atIndexedSubscript:
caseInsensitiveCompare:
setLinkedPerBarTransitions:toSegmentNamed:
samplesForTimeInMsec:atSampleRate:
shortLabelForSegmentType:
segmentsWithType:nameIndex:nameSuffix:inSegments:
segmentWithName:inSegments:
crossfadeLengthInSamplesForFromSeg:toSeg:fadeOutTimeInMsec:fadeInTimeInMsec:validFadeOutSamples:validFadeInSamples:
initAsCrossFade:sampleRate:sampleCount:beatsPerBar:
setName:
addOrReplaceTransition:toSegmentNamed:fromBarIndex:
removeTransitionToSegmentNamed:fromBarIndex:
isPriorityValid
setSliceable:
addMetadataValue:forKey:
setPriority:
setBeatsPerBar:
setTransitions:
setMarkers:
setType:
setErrors:
_sliceable
_priority
_beatsPerBar
_transitions
_markers
_errors
_metadataValues
_namePrefix
_nameStem
_nameIndex
_nameSuffix
T@"NSString",R,C,N,V_namePrefix
T@"NSString",R,C,N,V_nameStem
T@"NSString",R,C,N,V_nameIndex
T@"NSString",R,C,N,V_nameSuffix
T@"NSString",C,N,V_name
Tq,N,V_priority
Tq,N,V_beatsPerBar
TB,N,V_sliceable
T@"NSDictionary",&,N,V_transitions
T@"NSDictionary",&,N,V_markers
TQ,N,V_type
TQ,N,V_errors
T@"NSDictionary",R,N,V_metadataValues
fadeInLength
setFadeInLength:
fadeOutLength
setFadeOutLength:
_fadeInLength
_fadeOutLength
Tq,N,V_position
Tq,N,V_fadeInLength
Tq,N,V_fadeOutLength
_durationOfOutroForPlaylist:onlyUsedDuration:
setDurationOfUsedOutro:
setDurationOfFullOutro:
_buildTracksFromSegments:
durationOfUsedOutro
durationOfFullOutro
_durationOfUsedOutro
_durationOfFullOutro
Tq,N,V_durationOfUsedOutro
Tq,N,V_durationOfFullOutro
B16@0:8
v24@0:8@16
@24@0:8@16
@56@0:8{?=qiIq}16@40@48
{?=qiIq}16@0:8
@16@0:8
@32@0:8@16@24
B56@0:8@16{?=qiIq}24^@48
q16@0:8
v24@0:8@"NSArray"16
@"FMSongAsset"24@0:8@"NSString"16
@"FMSongRendition"56@0:8{?=qiIq}16@"NSDictionary"40@"FlexTestingContext"48
@"NSArray"16@0:8
@"NSArray"32@0:8@"NSString"16@"FMSongRendition"24
B56@0:8@"FMSongRendition"16{?=qiIq}24^@48
@"NSString"16@0:8
@"NSSet"16@0:8
@"NSDictionary"16@0:8
@104@0:8@16@24@32@40@48B56B60@64q72@80q88@96
v24@0:8q16
v64@0:8@16@24@32@40B48B52q56
B40@0:8@16@24^@32
B32@0:8@16^@24
v20@0:8B16
v16@0:8
@"NSString"
@"NSSet"
@"NSArray"
@"NSDictionary"
q24@0:8q16
@24@0:8^{_NSZone=}16
@24@0:8@"NSDictionary"16
@48@0:8@16B24q28q36B44
@"NSPredicate"
@"FlexSegment"
@"NSURL"
@24@0:8r^{sockaddr_in=CCS{in_addr=I}[8c]}16
q20@0:8I16
^{__SCNetworkReachability=}
@"NSObject<OS_dispatch_queue>"
@40@0:8q16@24@32
v24@0:8@?16
v32@0:8@16@24
Q24@0:8@16
Q16@0:8
v24@0:8Q16
@"FMSongLibrary"
@"NSMutableArray"
@"NSMutableDictionary"
B24@0:8@16
@28@0:8f16q20
f16@0:8
v20@0:8f16
@28@0:8^@16B24
d40@0:8^d16^i24^i32
@"FMTrack"
@"NSObject<FlexSongProtocol>"
@"NSMutableSet"
@"FlexCloudManager"
@"FlexReachability"
v40@0:8{?=qiIq}16
{?="value"q"timescale"i"flags"I"epoch"q}
@44@0:8@16@24@32i40
d16@0:8
@40@0:8{?=qiIq}16
i16@0:8
@24@0:8Q16
@"NSURL"16@0:8
@"NSURL"24@0:8Q16
@"NSURL"24@0:8@"FlexSegment"16
v24@0:8@"NSString"16
@56@0:8@16Q24@32q40q48
B24@0:8d16
q24@0:8Q16
q24@0:8@16
v40@0:8@16d24@32
@48@0:8{?=qiIq}16@40
@"FMMixParameters"
@28@0:8@16i24
v24@0:8d16
@96@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64@88
@44@0:8f16{?=qiIq}20
@64@0:8@16@24@32{?=qiIq}40
@"FlexMLSummary"
@40@0:8@16q24q32
@64@0:8@16@24@32@40q48q56
@28@0:8@16B24
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
v32@0:8@"NSCache"16@24
v32@0:8Q16@24
v40@0:8@16@24@32
v44@0:8@16@24@32B40
@24@0:8q16
@"NSObject"
@"NSMutableOrderedSet"
@"NSMapTable"
@"NSCache"
@96@0:8@16@24@32@40@48B56B60@64@72q80@88
q32@0:8@16@24
B40@0:8@16@24@32
@116@0:8@16@24@32@40@48B56q60@68@76@84@92q100@108
@124@0:8@16@24@32@40@48B56q60@68@76@84@92@100q108@116
@32@0:8Q16Q24
Q24@0:8Q16
@40@0:8@16q24@32
@48@0:8@16@24q32@40
q32@0:8@16q24
B48@0:8@16q24@32^q40
B64@0:8@16q24@32q40^@48^q56
B44@0:8@16B24@28@36
B52@0:8@16B24@28@36@44
B56@0:8@16q24^q32@40^B48
B40@0:8@16q24@32
B44@0:8@16q24B32@36
B48@0:8@16q24^q32@40
B48@0:8@16q24@32@40
q40@0:8{?=qiIq}16
B24@0:8^@16
@"NSObject<FlexSongAssetProviderProtocol>"
f24@0:8q16
@"NSCountedSet"
@32@0:8@16#24
@64@0:8@16Q24@32@40q48q56
@88@0:8@16@24{?={?=qiIq}{?=qiIq}}32@80
{?={?=qiIq}{?=qiIq}}16@0:8
{?="start"{?="value"q"timescale"i"flags"I"epoch"q}"duration"{?="value"q"timescale"i"flags"I"epoch"q}}
B44@0:8@16@24q32B40
@32@0:8Q16@24
@48@0:8Q16@24@32@40
q32@0:8q16q24
q64@0:8@16@24q32q40^q48^q56
@48@0:8@16q24q32q40
v28@0:8B16@20
@32@0:8@16q24
v40@0:8@16@24q32
v32@0:8@16q24
q28@0:8@16B24
@40@0:8@16@24@32
@(#)PROGRAM:FlexMusicKit  PROJECT:FlexMusicKit-18.2
3333332@@(#)PROGRAM:FlexMusicKit_Static  PROJECT:FlexMusicKit-18.2
3333332@
MbP?
B32@?0@"FMSongAsset"8Q16^B24
no rendition! The playback algorithm could not generate a rendition for this duration or there is an issue with the authoring tool
trackA is not present in rendition.
trackB is not present in rendition.
rendition.durationOfMusic (%@) + rendition.durationOfSilence (%@) should equal rendition.duration %@
Found an invalid clip.duration in rendition. The duration must be > 0.
Clip duration must equal the duration of silence if it is the last clip in the track.
Clip url path %@ does not exist.
Current clip's position: %@ should not begin after the position: %@ of its following clip within the track.
Current clip's position + duration %@ should not exceed the position %@ of its following clip within the track.
Keyframe %@ sampleTime must be less than its following keyframe %@
prevented
fadeOut
fadeIn
transitionSegmentName
useNextSegmentForFadeOut
transitionSegmentName: %@ prevented:%@ fadeOut: %ld, fadeIn: %ld useNext:%@
segment: %@, barsUsed: %lu (%lu), duration: %1.2f
kFlexNetworkReachabilityChangedNotification
com.apple.FlexMusic.reachability
v8@?0
metadata.smm
ANALYSIS
ONSET
B32@?0@"NSString"8Q16^B24
_onset
onsets
analysis
t = %d value = %f
priority %@ cellular: %@
User Initiated
Background
FMTracks:
TrackA: %@
TrackB: %@
tracks
duration
SILENCE
Missing peak value for segment item: %@
Missing loudness value for segment item: %@
v32@?0@"FMTimedMetadataItem"8Q16^B24
FMSongLibraryAvailableSongsChanged
FMSongLibrarySongDownloadInProgressChanged
FMSongLibrarySongDownloadInProgressState
FMSongLibraryReconnectedToNetwork
CloudSupportDisabled
NetworkingDisabled
MobileAssets_ClientID
MobileAssets_AssetTypeIdentifier
MobileAssets_ListenToSystemNotifications
FMSongLibraryInitOption_CustomBundledSongsPath
LoadCacheDuringInit
recalled == NO
FlexAudio
songUID
assetID
progress
songUIDs
v24@?0@"NSArray"8@"NSError"16
metadata
Summaries
songName
artistName
uuid
songFile
audioEncoderPresetName
customOptions
summaryMapping
contentVersion
compatibilityVersion
summaryTime
segmentTime
tagIDs
audioFileExtension
trackTime
segments
sampleRate
songBeats
videoScores
greatCues
goodCues
fadeToBlack
beatTimes
barTimes
lkfs
peak
gainFunction
gain
loopTimes
plistRuntimeVersion
loop point @%f
BODY
section
OUTRO
segment
B32@?0@"NSNumber"8Q16^B24
beat
Expected a FlexMLSongRendition but got a %@.
Final keyframe sampleTime: %@ must be less or equal to the rendition's duration: %@
The last clip's end time of %@ should equal the rendition's duration in seconds: %@. Here we are assuming that clips are using a timescale of 'sampleRate'.
Expected that the number of loops detected (%@) * the max duration detected from the idealDurations.lastObject (%@) is <= the rendition.duration (%@)
Expected a gain value of 0.00000000000001 or 1 for the first and last object in the gainFunction but found %f
Expected a gain value of >= 0 but found: %f
The last segmentTime value (%f) in the gain function must match that of the segment duration (%f).
All video cue values should be < the summary.duration (%f).
Fade to black value should be < the summary.duration (%f).
v32@?0@"NSValue"8Q16^B24
time
INTRO
TRANS
CROSSFADE
FMAssetType
SongBundle
Artwork
Metadata
keywords
clientIDs
hiddenIDs
recalled
sbFmt
_ContentVersion
_CompatibilityVersion
FMSongBundleAssetID
FMSongArtworkAssetID
FMSongAssetDownloadProgressChanged
Mood_
Mood_Ethereal
Mood_Sentimental
Mood_Chill
Mood_Gentle
Mood_Happy
Mood_Uplifting
Mood_Party
Mood_Action
Mood_Epic
Mood_Neutral
SongPace_
SongPace_Slow
SongPace_Medium
SongPace_Fast
MoodAlt_
MoodAlt_Sentimental
MoodAlt_Playful
MoodAlt_Action
MoodAlt_Event
MoodAlt_Chill
MoodAlt_Retro
MoodAlt_Pop
Genre_
Genre_Blues
Genre_Classical
Genre_Country
Genre_Dance
Genre_Electronic
Genre_HipHopRap
Genre_Holiday
Genre_Indie
Genre_Jazz
Genre_KidsFamily
Genre_Latin
Genre_Lounge
Genre_Metal
Genre_Pop
Genre_R&B
Genre_Reggae
Genre_Rock
Genre_SingerSongwriter
Genre_SoulFunk
Genre_StageScreen
Genre_World
Genre_Alternative
Genre_Downtempo
Arousal_
Valence_
VisualTempo_
Region_
smsbundle
FMSongAssetsChanged
error
%@ by %@
self ENDSWITH '.jpg'
self CONTAINS %@
v24@?0@"NSString"8^B16
FlexLogForCategory
FlexLogging.m
category < FlexLoggingCategoryCount
FlexMusicKit
FlexMusicSequencer
FlexMusicCloud
com.apple.FlexMusicKit
FMClips:
%d) %@
v24@?0@"NSMutableArray"8@"NSArray"16
name
position
bars
NumberOfBars - name: %@ id %ld position %ld # bars %ld
BarStartPosition - name: %@ id %ld position %ld bar #%ld
Unknown - name: %@ id %ld position %ld number %ld
FMPurgeMobileAssetsFollowingFetch
com.apple.FlexMusic.mobileAssetPurge
com.apple.FlexMusic.triggerDownloadAndPurge
com.apple.flexmusic.MANotificationQueue
.ma.new-asset-installed
.ma.cached-metadata-updated
v12@?0i8
state IN %@
B24@?0@"MAAsset"8^B16
%K <= %d
B24@?0@"MAAsset"8@"NSDictionary"16
An error occurred while downloading the Mobile Assets catalog: %@
v16@?0q8
q24@?0@"MAAsset"8@"MAAsset"16
Download operation was unsuccessful.
No network connection
v16@?0@"MAProgressNotification"8
MobileAsset error %li
Cancel operation was unsuccessful.
MACancelSucceeded
MSCancelXpcError
MACancelConnectionInterupted
MACancelWasNotDownloading
MACancelFailed
MACancelNotEntitled
MACancelNotApplicableForRequireByOs
MACancelNotApplicableForInstalledWithOs
cancel error %li
MADownloadSucceesful
MADownloadXpcError
MADownloadConnectionInterupted
MADownloadFailed
MADownloadStagingFailed
MADownloadMetaDataProcessFailed
MADownloadUnzipFailed
MADownloadMoveFailed
MADownloadInstallFailed
MADownloadDaemonExit
MADownloadAssetAlreadyInstalled
MAInvalidSZExtractor
MADownloadNotEntitled
MADownloadDaemonNotReady
MADownloadNoChange
MADownloadNotApplicableForRequireByOs
MADownloadNoExtractorFailure
MADownloadTransformFailure
MADownloadNoMatchFound
MADownloadNilAssetType
MADownloadNilAssetId
MADownloadStreamingZipNotSupported
MADownloadBadOptions
MADownloadAssetBadMetaData
MADownloadUnableToCreateMessage
MADownloadFailedNoStandardUrl
MADownloadFailedNoFallBackUrl
MADownloadFailedNoPallasUrl
MADownloadLostTask
MADownloadNotApplicableForInstalledWithOs
MADownloadUnknownResult
MADownloadNoValidSession
MADownloadResponseDeferred
MADownloadIncomplete
MACannotGetPathToStagingDir
MADownloadsNotAllowed
download error %li
MAPurgeSucceeded
MSPurgeXpcError
MAPurgeConnectionInterupted
MAPurgeAssetDidntExist
MAPurgeAssetCouldntPurge
MAPurgeFailed
MAPurgeNotEntitled
MAPurgeNotApplicableForRequireByOs
MAPurgeCouldNotCancelAllDownloads
MAPurgeCannotCreateMessage
MAPurgeEncodingFailure
MAPurgeFailedBeforeFirstUnlock
purge error %li
MAQuerySucceesful
MAQueryXpcError
MAXmlNotPresent
MAQueryFailed
MAQueryDaemonExit
MAQueryNotEntitled
MAQueryCannotCreateMessage
MAQueryNilAssetType
MAQueryParamsEncodeFailure
MABeforeFirstUnlock
MACouldNotEncodeQueryResults
MAQueryUnknownResult
query error %li
OUTRO_STINGER
OUTRO_EARLY_FADE
OutroCanBeShortened
DefaultEarlyFadeStartFromStinger
MinLengthForEarlyFade
IgnoreStingerMarkerForShortening
IgnoreEarlyFadeMarker
MaxOutroLengthToReserve
LoopSongForLongDurations
crossFadeSegments
mainSegments
metadataDict
decodedMainSegments
q24@?0@"FlexSegment"8@"FlexSegment"16
B32@?0@"FlexSegmentAssemblyInfo"8Q16^B24
B32@?0@"FlexSegment"8Q16^B24
%@%@
supply an outro for %@
%@ -> %@
drm_
empty playlist!
invalid default duration playlist. there's a bug in the sequencer
excessive silence: %fs - check allowed transitions, priorities and which segments are sliceable.
Intro Segments cannot be marked as sliceable
Outro Segments cannot be marked as sliceable
Transitions cannot be marked as sliceable
intro added when we should have silence
outro added when we should have silence
body added when we should have silence
unexpected first object - should be nil segment
too many playlist items - there's a bug in the playback sequencing algorithm 
outro expected but not found
body added when we should have only outro and silent segments
intro expected but not found
body added when we should have only intro and outro segments
There is a bug in the smart song or playback sequencing algorithm!
Outro segment is not after all Intro & Body segments
Too many intros added
No intro segments
Too many outros added
No outro segments
expected a body segment
v32@?0@"FlexSegmentAssemblyInfo"8Q16^B24
89EE9F2B-CEB7-4B06-8388-D12A7BFF78A8
0B84454E-B24A-44BC-9068-F88B899EDD2F
transition from %@ to %@ should be permitted but is not. successive segments in the clipPlaylist should transition into another.
transition from %@ to %@ should not occur. there is a problem with the playback sequencing algorithm.
there should be no crossfade segments when using real-time crossfades.
transition sequenced from %@ to %@ but not allowed. algorithm bug? 
transition segment specified for %@ to %@ but not found
transition segment specified for %@ to %@ but incorrect segment %@ was found instead. playback sequencing algorithm issue?
incorrect transition segment found after %@. Bug in sequencing algorithm
samplesPerBar is -1, customBarMarkers.count should be > 0 please fix %@
samplesPerBar is -1, customBarMarkers.count should equal segment.bars please fix %@
custom barDuration should be less than sampleCount. please fix %@
samplesPerBar should be less than sampleCount if we have more than one bar. please fix %@
samplesPerBar should equal sampleCount if we only have one bar. please fix %@
samplesPerBar should not be 0. please fix %@
sample rates must be the same for all segments. please fix %@
Expected a %@ class but found a %@
no playlist! The playback algorithm could not generate a playlist for this duration or there is an issue with the authoring tool
expected duration (%.2fs, %lld) does not match duration (%.2fs, %lld) of clipPlaylist! Possibly no valid intro or outro valid for this duration?
could not determine url for segment "%@"
audio file does not exist for segment "%@"
could not read info for audio file: "%@"
audio file sample rate (%ld) does not match sample rate (%ld) of "%@"
%@: kExtAudioFileProperty_FileLengthFrames (%lld) does not match segment.sampleCount (%lld)
Timed out waiting for %@ to load
%@: asset.duration (%lld) does not match segment.sampleCount (%lld)
%@ %@
energy
silence
%@ BarIndex %d
%@ BarIndex %d BeatIndex %d
onset @ %f
loop point @ %f
Keyframes: 
%d) %@
v32@?0@"FMKeyFrame"8Q16^B24
com.apple.Memories
Assets
FMTimedMetadataIdentifierSection
SectionType
BodyNumber
OutroStinger
OutroEarlyFade
FadeToBlack
FMTimedMetadataIdentifierSegment
SegmentType
Priority
BodyLetter
BarsUsed
Energy
PeakValue
Loudness
FMTimedMetadataIdentifierBar
BarIndex
BeatsPerBar
FMTimedMetadataIdentifierBeat
BeatIndex
FMTimedMetadataIdentifierOnset
FMTimedMetadataIdentifierLoopPoints
%@ (%1.2f) - %@
priority
beatsPerBar
sampleCount
sliceable
customBarMarkers
transitions
markers
peakValue
loudness
Tempo:
q24@?0@"FlexMarker"8@"FlexMarker"16
Cannot open audio file: %@
name %@
Body
Trans
v32@?0@"FlexSegment"8Q16^B24
pos: %lld, offset: %lld, duration: %lld, file: %@
ERROR: Could not start notifier for %@
ERROR: Attempting to start notifier when already notifying for %@
ERROR: Could not stop notifier for %@
Posting kFlexReachabilityChangedNotification for %@
server type not supported yet
Song with uid: %@ is already registered
refresh requested. will try again in %1.0f seconds
Timed out waiting for tracks to load for asset: "%@"
0 audio tracks found in asset: "%@"
loading cached songs
cache loaded in %.2f seconds
library initialized in %.2f seconds
loading %lu songs from %@
Attempted to handle success or error from fetchAllSongsWithCompletion: but self is nil.
flex: Requesting ML format rendition for duration %.2f
Found %@ number of loop points in rendition.
Failed to load FlexSong _impl for song: %@
ERROR: _loadFlexSong: Attempting to load already loaded FlexSong for song: %@
invalid duration requested in renditionForDuration for song: %@
flex: requested unknown cache type %@!
flex: error setting up query with addKeyValueArray
flex: requesting MAAssetQuery
flex: %ld assets queried in %.2f seconds
flex: XML not present
flex: MetaDataSync query failed with error code %@
flex: rebuilding %@ cache
flex: missing assets after rebuild! falling back to direct query!
StrongSelf is nil in _newestContentSetFromAssets. Returning...
flex: cached songs processed in %.2f seconds
MA: Purging all Mobile Assets
Completed catalog download with MADownloadResult: %@
flex: existingSongAssetPath is nil!
flex: could not create replacement backend
flex: attempting to load a song that doesn't exist
flex: could not locate smsBundle
FlexMobileAssetManagerV2 is nil from _dispatchNextAsyncAssetDownloadAndPurge:
There are currently %lu assets downloading and %lu assets in the _pendingDownloadsSet.
Beginning download of %@ %@ with options %@
Not downloading %@ due to no existing song
Not downloading %@ due to asset not MobileAsset backed
Not downloading %@ because asset is already local and there is no cloud update available.
Not downloading %@ due to recall
Not downloading %@ because no mobile asset exists.
Not downloading due to nil mobile asset
Not downloading since network is not reachable
Starting download task for UID: %@ assetID: %@
attempted to download but no cloud manager
Ending download task for UID: %@ assetID: %@. MADownloadResult: %@
Cancel request after downloading, purging %@ %@
Asset download failed when attempting to download asset %@ %@ - %lu
Asset download canceled %@ %@
Completed processing of %@ %@
Cancel download failed for mobile asset with songUID: %@ assetID: %@ - no mobile asset associated with song asset
Cancel: Could not remove download options for songUID: %@ assetID: %@ - no associated options for mobile asset %@
Cancel download failed for mobile asset with songUID: %@ assetID: %@ MACancelDownloadResult: %@
Cancel download success for mobile asset with songUID: %@ assetID: %@ 
attempted to purge but no cloud manager
purge failed for %@ %@ error: %@
refreshState failed for %@ %@
attempting to purge on a non MobileAsset backed asset %@ %@
cannot purge due to nil mobileAsset %@ %@
flex: missing metadataDict!
flex: missing decodedMainSegments!
cannot call _actualOutroDurationForAssemblyList without first assembling body segments!
flex: Requesting legacy format rendition for duration %.2f
expected silence or outro at end. Algorithm bug?
%@: kExtAudioFileProperty_FileLengthFrames is 1 sample longer than segment.sampleCount %lld
%@: asset.duration %lld is 1 sample longer than segment.sampleCount %lld
Relinking transitions for segment %@ because it is not Sliceable
Invalid sole marker
FlexSongBackend
FlexSongProtocol
FlexTransition
NSCopying
NSDictionaryCoding
FMFetchOptions
FlexSegmentAssemblyInfo
FlexReachability
FlexCloudManager
FlexSongMetaDataReader_V2
FlexSongMetadataReaderUtils
FMKeyFrame
FMDownloadOptions
FMSongRendition
FMSongLibrary
FlexMLSong
FlexMLSummaryManager
FlexSongAssetProvider_V1
FlexSongAssetProviderProtocol
FlexSongAssetProvider_V2
FMSongAsset
FMSong
FlexCloudFetchOptions
FMTrack
FlexMLSummary
FlexMLSegment
FlexMLGainValue
FlexMLSongRendition
FlexMarker
MAAssetAdditions
FlexMobileAssetV2SongAsset
FlexMobileAssetManagerV2
NSCacheDelegate
NSObject
FlexSongProxy
FlexSong
FMMixParameters
FlexTestingContext
FlexUtilities
FlexCloudSongAsset
FMTimedMetadataItem
FlexSegmentAudioFileInfo
FlexSegment
FMClip
FlexLegacySongRendition
valueWithCMTime:
CMTimeValue
URLAssetWithURL:options:
UTF8String
addIndex:
addIndexes:
addKeyValueArray:with:
addMutableTrackWithMediaType:preferredTrackID:
addObject:
addObjectsFromArray:
addObserver:selector:name:object:
allKeys
allObjects
allValues
allocWithZone:
andPredicateWithSubpredicates:
anyObject
array
arrayByAddingObject:
arrayByAddingObjectsFromArray:
arrayWithArray:
arrayWithCapacity:
arrayWithObjects:
arrayWithObjects:count:
assetId
attachProgressCallBack:
attributes
audioMix
audioMixInputParametersWithTrack:
boolForKey:
boolValue
bundleForClass:
bundleWithIdentifier:
cStringUsingEncoding:
cancelDownload:
caseInsensitiveCompare:
characterAtIndex:
compare:options:
componentsJoinedByString:
componentsSeparatedByCharactersInSet:
componentsSeparatedByString:
composition
containsObject:
containsString:
contentsOfDirectoryAtPath:error:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
copy
count
countByEnumeratingWithState:objects:count:
dataWithContentsOfFile:
date
decimalDigitCharacterSet
defaultCenter
defaultManager
dictionary
dictionaryWithContentsOfFile:
dictionaryWithDictionary:
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:count:
dictionaryWithObjectsAndKeys:
doubleValue
enumerateObjectsUsingBlock:
enumerateObjectsWithOptions:usingBlock:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
errorWithDomain:code:userInfo:
fileExistsAtPath:
fileExistsAtPath:isDirectory:
fileURLWithPath:
fileURLWithPath:isDirectory:
filterUsingPredicate:
filteredArrayUsingPredicate:
firstIndex
firstObject
floatValue
getLocalUrl
getResourceValue:forKey:error:
hasPrefix:
indexGreaterThanIndex:
indexOfObject:
indexOfObjectPassingTest:
indexSet
indexesOfObjectsPassingTest:
initWithType:
insertObject:atIndex:
insertTimeRange:ofTrack:atTime:error:
intValue
integerValue
invertedSet
isEqualToArray:
isEqualToNumber:
isEqualToString:
lastObject
lastPathComponent
length
loadValuesAsynchronouslyForKeys:completionHandler:
localizedCaseInsensitiveContainsString:
longLongValue
lowercaseString
mainBundle
mapTableWithKeyOptions:valueOptions:
mutableCopy
numberWithBool:
numberWithDouble:
numberWithFloat:
numberWithInt:
numberWithInteger:
numberWithLongLong:
numberWithUnsignedInteger:
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
objectsAtIndexes:
objectsPassingTest:
orderedSet
path
pathExtension
pathForResource:ofType:
postNotificationName:object:
postNotificationName:object:userInfo:
predicateWithBlock:
predicateWithFormat:
purgeSync
queryMetaDataSync
rangeOfString:
refreshState
removeAllObjects
removeLastObject
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removeObjectsAtIndexes:
removeObjectsInArray:
removeObserver:
removeObserver:name:object:
replaceObjectAtIndex:withObject:
results
returnTypes:
scanCharactersFromSet:intoString:
scanInteger:
scanLocation
scanString:intoString:
scanUpToCharactersFromSet:intoString:
scanUpToString:intoString:
scannerWithString:
setAllowsCellularAccess:
setDelegate:
setDiscretionary:
setDoNotBlockBeforeFirstUnlock:
setInputParameters:
setObject:atIndexedSubscript:
setObject:forKey:
setScanLocation:
setTimeoutIntervalForResource:
setValue:forKey:
setVolumeRampFromStartVolume:toEndVolume:timeRange:
setWithArray:
setWithObject:
setWithObjects:
setWithSet:
sortUsingComparator:
sortUsingSelector:
sortedArrayUsingComparator:
sortedArrayUsingDescriptors:
sortedArrayUsingSelector:
standardUserDefaults
startCatalogDownload:options:then:
startDownload:then:
state
stringByAppendingPathComponent:
stringByAppendingPathExtension:
stringByAppendingString:
stringByDeletingLastPathComponent
stringByDeletingPathExtension
stringByReplacingOccurrencesOfString:withString:
stringWithContentsOfFile:encoding:error:
stringWithFormat:
substringToIndex:
timeIntervalSinceDate:
totalExpected
totalWritten
tracksWithMediaType:
userInfo
JSONObjectWithData:options:error:
init
canPlay
isLoaded
updateAssets:
assetWithID:
existingAssetWithID:
renditionForDuration:withOptions:testingContext:
naturalDuration
minimumDuration
idealDurations
timedMetadataItemsWithIdentifier:forRendition:
verifyRendition:forDuration:failureReason:
audioEncoderPresetName
songName
artistName
tagIDs
keywords
assets
songFormat
sampleRate
hidden
recalled
metadataVersion
customOptions
T@"NSString",R,N
T@"NSSet",R,N
T@"NSArray",R,N
Tq,R,N
TB,R,N
T@"NSDictionary",R,N
initWithUID:songName:artistName:tagIDs:keywords:hidden:recalled:audioEncoderPresetName:metadataVersion:songFormat:sampleRate:customOptions:
updateSampleRate:
updateSongArtist:title:tags:keywords:hidden:recalled:metadataVersion:
_verifyClips:inRendition:failureReason:
_verifyKeyFrames:failureReason:
setUid:
setAudioEncoderPresetName:
setSongName:
setArtistName:
setTagIDs:
setKeywords:
setAssets:
setSongFormat:
setSampleRate:
setHidden:
setRecalled:
setMetadataVersion:
setCustomOptions:
.cxx_destruct
_hidden
_recalled
_uid
_audioEncoderPresetName
_songName
_artistName
_tagIDs
_keywords
_assets
_songFormat
_sampleRate
_metadataVersion
_customOptions
T@"NSString",&,N,V_uid
T@"NSString",&,N,V_audioEncoderPresetName
T@"NSString",&,N,V_songName
T@"NSString",&,N,V_artistName
T@"NSSet",&,N,V_tagIDs
T@"NSSet",&,N,V_keywords
T@"NSArray",&,N,V_assets
T@"NSString",&,N,V_songFormat
Tq,N,V_sampleRate
TB,N,V_hidden
TB,N,V_recalled
Tq,N,V_metadataVersion
T@"NSDictionary",&,N,V_customOptions
validFadeLengthForLength:
copyWithZone:
encodeAsDictionary
initWithDictionary:
initWithTransitionSegmentNamed:prevented:fadeOut:fadeIn:useNextSegmentForFadeOut:
description
isDefaultTransition
prevented
fadeOut
fadeIn
transitionSegmentName
useNextSegmentForFadeOut
_prevented
_useNextSegmentForFadeOut
_fadeOut
_fadeIn
_transitionSegmentName
TB,R,N,V_prevented
Tq,R,N,V_fadeOut
Tq,R,N,V_fadeIn
T@"NSString",R,C,N,V_transitionSegmentName
TB,R,N,V_useNextSegmentForFadeOut
predicate
setPredicate:
sortDescriptors
setSortDescriptors:
_predicate
_sortDescriptors
T@"NSPredicate",&,N,V_predicate
T@"NSArray",&,N,V_sortDescriptors
segment
setSegment:
barsUsed
setBarsUsed:
setUrl:
offset
setOffset:
duration
setDuration:
_segment
_barsUsed
_url
_offset
_duration
T@"FlexSegment",&,N,V_segment
Tq,N,V_barsUsed
T@"NSURL",&,N,V_url
Tq,N,V_offset
Tq,N,V_duration
dealloc
reachabilityWithHostName:
reachabilityWithAddress:
reachabilityForInternetConnection
reachabilityForLocalWiFi
startNotifier
stopNotifier
localWiFiStatusForFlags:
networkStatusForFlags:
connectionRequired
interventionRequired
currentReachabilityStatus
reachabilityQueue
setReachabilityQueue:
_isNotifying
localWiFiRef
reachabilityRef
_reachabilityQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_reachabilityQueue
createCloudManager:withLibrary:options:
initWithLibrary:
_registerSongs:
fetchAllSongsWithCompletion:
retryFetchAllSongs
loadAssetWithID:forSongID:
requestDownloadOfAsset:
requestDownloadOfAsset:withOptions:
cancelDownloadOfAsset:
cancelDownloadOfAllAssets
loadCachedSongs
requestPurgeOfAsset:
_purgeAndReturnReplacementFor:
assetStatus:
library
cloudManagedSongs
cloudManagedSongsByUID
retryCount
setRetryCount:
_library
_cloudManagedSongs
_cloudManagedSongsByUID
_retryCount
TQ,N,V_retryCount
T@"FMSongLibrary",R,W,V_library
T@"NSMutableArray",R,V_cloudManagedSongs
T@"NSMutableDictionary",R,V_cloudManagedSongsByUID
isSongAtPath:
_pathToMetadata:
songAtPath:
addAnalysisMetadataToDictionary:pathToRoot:
initWithValue:atTime:
sampleTime
setSampleTime:
value
setValue:
_value
_sampleTime
Tq,N,V_sampleTime
Tf,N,V_value
_configureDefaults
allowsCellular
setAllowsCellular:
downloadPriority
setDownloadPriority:
_allowsCellular
_downloadPriority
TB,N,V_allowsCellular
TQ,N,V_downloadPriority
coalesceMixParamsA:withMixParamsB:
initWithSong:andOptions:
avCompositionWithAudioMix:includeShortenedOutroFadeOut:
timedMetadataItemsWithIdentifier:
_maxPeakAndLoudness:missingPeakValueCount:missingLoudnessCount:
_buildOutroFadeoutMixParams
trackA
setTrackA:
trackB
setTrackB:
options
durationOfSilence
setDurationOfSilence:
durationOfMusic
setDurationOfMusic:
song
setSong:
_trackA
_trackB
_options
_durationOfSilence
_durationOfMusic
_song
T@"NSObject<FlexSongProtocol>",&,N,V_song
T@"FMTrack",&,N,V_trackA
T@"FMTrack",&,N,V_trackB
Tq,N,V_durationOfSilence
Tq,N,V_durationOfMusic
T@"NSDictionary",R,N,V_options
_downloadProgressChanged:
networkStatusChanged:
sharedLibraryWithOptions:
initWithOptions:
fetchSongWithUID:
fetchSongsWithOptions_photos_only:
fetchSongsWithOptions:
_loadBundledSongs
_loadCachedSongs
registerSongBundleAtPath:
unregisterSongWithID:
_setupReachability
_createCloudManager
_notifySongsChanged:
_notifySongDownloadInProgressChanged:
_updateFromCloud
requestDownloadOfAllAssetsWithIDs:
requestDownloadOfAllAssetsWithIDs:withOptions:
purgeAllLocalCachedAssetsWithIDs:
supportForCloud
networkingIsDisabled
contactedCloud
setContactedCloud:
songs
setSongs:
songsByUID
setSongsByUID:
assetsInFlight
setAssetsInFlight:
cloudManager
setCloudManager:
flexReachability
setFlexReachability:
networkStatus
setNetworkStatus:
bundledSongs
setBundledSongs:
_networkingIsDisabled
_contactedCloud
_songs
_songsByUID
_assetsInFlight
_cloudManager
_flexReachability
_networkStatus
_bundledSongs
T@"NSMutableArray",&,N,V_songs
T@"NSMutableDictionary",&,N,V_songsByUID
T@"NSMutableSet",&,N,V_assetsInFlight
T@"FlexCloudManager",&,N,V_cloudManager
T@"FlexReachability",&,N,V_flexReachability
Tq,N,V_networkStatus
TB,N,V_contactedCloud
T@"NSArray",&,N,V_bundledSongs
TB,R,N,V_networkingIsDisabled
compare:
loadSongAtPath:
initWithFileAtPath:
_setupInitialAssets:
_summaryManager
audioFileURL
rootPath
metadataPath
audioFileExtension
setAudioFileExtension:
cachedNaturalDuration
setCachedNaturalDuration:
_rootPath
_metadataPath
_audioFileExtension
_cachedNaturalDuration
T@"NSString",R,N,V_rootPath
T@"NSString",R,N,V_metadataPath
T@"NSString",&,N,V_audioFileExtension
T{?=qiIq},N,V_cachedNaturalDuration
T@"NSURL",R,N
initWithSummaryMapping:bundlePath:metadataPath:targetTimeScale:
averageGranularityBetweenSummaries
summaryForDuration:
_summaryForDuration:
allSummaryDurations
allFileNames
allDurations
targetTimeScale
_targetTimeScale
_allFileNames
_allDurations
T@"NSArray",R,N,V_allFileNames
T@"NSArray",R,N,V_allDurations
Ti,R,N,V_targetTimeScale
urlToRoot
urlToAudioContainerForSegmentType:
urlToAudioForSegment:
initWithFolderPath:
rootFolderPath
setRootFolderPath:
_rootFolderPath
T@"NSString",&,N,V_rootFolderPath
initWithFolderPath:audioFileExtension:
assetsAreLocal
_folderNameForSegmentType:
initWithAssetID:assetStatus:localURL:contentVersion:compatibilityVersion:
isCloudBacked
requestDownload
requestDownloadWithOptions:
cancelDownload
purgeLocalCache
localURLExists
updateDownloadProgress:
downloadProgress
contentUpdateAvaliable
contentVersionForAssetLocation:
compatibilityVersionForAssetLocation:
assetID
songUID
setSongUID:
assetStatus
localURL
contentVersion
compatibilityVersion
_downloadProgress
_assetID
_songUID
_assetStatus
_localURL
_contentVersion
_compatibilityVersion
Tq,R,N,V_contentVersion
Tq,R,N,V_compatibilityVersion
T@"NSString",R,V_assetID
T@"NSString",&,V_songUID
TQ,R,V_assetStatus
T@"NSURL",R,V_localURL
availableTagIDs
localizedNameForTagWithID:
versionFromArtworkFilename:
loadSongBundleAtPath:
loadSongsAndArtworkInFolderAtPath:
hasValidTagIDs:
initWithBackend:
updateBackend:
_notifySongAssetsChanged
updateAsset:downloadProgress:error:
_impl
_loadIfNeeded
_loadFlexSong
uid_photos_only
cancelDownloadOfAllAssetsWithIDs:
renditionForDuration:withOptions:
backend
_backend
T@"NSObject<FlexSongProtocol>",R,V_backend
localOnly
setLocalOnly:
_localOnly
TB,N,V_localOnly
initWithClips:mixParameters:
clips
setClips:
mixParameters
setMixParameters:
_clips
_mixParameters
T@"NSArray",&,N,V_clips
T@"FMMixParameters",&,N,V_mixParameters
summaryFromSummaries:targetTimeScale:
initWithDictionary:targetTimeScale:
segments
videoCues
setVideoCues:
allBeats
allBars
loopPoints
lkfsValue
setLkfsValue:
peakValue
setPeakValue:
setSegments:
_peakValue
_videoCues
_allBeats
_allBars
_loopPoints
_lkfsValue
_segments
T@"NSArray",&,N,V_segments
T@"NSDictionary",&,N,V_videoCues
T{?=qiIq},N,V_duration
Td,N,V_lkfsValue
Tf,N,V_peakValue
T@"NSArray",R,N,V_allBeats
T@"NSArray",R,N,V_allBars
T@"NSArray",R,N,V_loopPoints
initWithDuration:trackTime:summaryTime:gainFunction:
trackTime
summaryTime
gainFunction
_gainFunction
_trackTime
_summaryTime
T{?=qiIq},R,N,V_duration
T{?=qiIq},R,N,V_trackTime
T{?=qiIq},R,N,V_summaryTime
T@"NSArray",R,N,V_gainFunction
initWithGain:segmentTime:
gain
segmentTime
_gain
_segmentTime
Tf,R,N,V_gain
T{?=qiIq},R,N,V_segmentTime
initWithSong:options:andSummary:forDuration:
_calculateDuration:
_buildTracks
summary
setSummary:
_summary
T@"FlexMLSummary",&,N,V_summary
initWithName:markerID:position:
_decodeTypeAndBarsFromName
name
markerID
position
type
number
_name
_markerID
_position
_type
_number
T@"NSString",R,C,N,V_name
Tq,R,N,V_markerID
Tq,R,N,V_position
TQ,R,N,V_type
Tq,R,N,V_number
isPresent
initWithAssetID:assetStatus:localURL:cloudManager:contentVersion:compatibilityVersion:
initWithAssetID:asset:localURL:cloudManager:contentVersion:compatibilityVersion:
mobileAsset
_metadataForAssetWithNewestContentVersion
mobileAssetID
_mobileAssetID
T@"NSString",R,V_mobileAssetID
assetWithNewestContentVersionInAssets:preferInstalled:
compatibilityFilterPredicate
_assetURLForMobileAsset:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
cache:willEvictObject:
initWithLibrary:options:
_cacheForAssetType:
_registerAndHandleSystemMobileAssetNotifications
_requeryForMobileAssetTypes:
_mobileAssetsForAssetTypes:
_rebuildMobileAssetCaches:
_requeryForMobileAssetTypes:forUUIDs:
mobileAssetsForAssetPropertyType:
mobileAssetsForAssetPropertyType:songUID:
filterByClientIDForAssets:forMetadataMapping:
_loadBundledSongForSongID:
_loadBundledArtworkForSongID:
_newestContentSetFromAssets:metadataMapping:
_metadataMappingForUUIDSet:
_assetIDForMobileAsset:
_updateMetadataOnExistingSong:usingAsset:metadataAsset:
_updateExistingSong:usingAsset:metadataAsset:
_updateExistingSong:usingAsset:metadataAsset:forceUpdate:
_existingSongForUID:
_processResults:metadataMapping:
_dispatchNextAsyncAssetDownloadAndPurge
_runNextAsyncAssetDownloadAndPurge
_mobileAssetIsDownloading:
_mobileAssetIsPurging:
_mobileAssetDownloadOptionsForClientOptions:
_runAsyncAssetDownloadForMobileAsset:
_purgeAsset:
_responseForDownloadResult:
_mobileAssetCancelDownloadResultStringValue:
_mobileAssetDownloadResultStringValue:
_mobileAssetPurgeResultStringValue:
_mobileAssetQueryResultStringValue:
purgeQueue
setPurgeQueue:
triggerDownloadAndPurgeQueue
setTriggerDownloadAndPurgeQueue:
includeArtworkInQueries
setIncludeArtworkInQueries:
XMLPresent
setXMLPresent:
_clientID
_mobileAssetTypeIdentifier
_downloadThrottleLock
_mobileAssetCacheLock
_pendingDownloadSet
_processingDownloadSet
_dowloadOptionsMapping
_pendingPurgeSet
_processingPurgeSet
_assetInstalledNotificationToken
_catalogUpdatedNotificationToken
_notificationQueue
_metadata_mobileAssetCache
_songbundle_mobileAssetCache
_artwork_mobileAssetCache
_includeArtworkInQueries
_XMLPresent
_purgeQueue
_triggerDownloadAndPurgeQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_purgeQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_triggerDownloadAndPurgeQueue
TB,N,V_includeArtworkInQueries
TB,N,V_XMLPresent
initWithUID:songName:artistName:tagIDs:keywords:hidden:recalled:assets:audioEncoderPresetName:metadataVersion:songFormat:
localizedCaseInsensitiveCompare:
numberToString:
_findMaxLengthInSamplesToReserveForOutroSegment:withOptions:
_findMinLengthInSamplesForEarlyFadeOutForOutroSegment:withOptions:
_findEarlyFadeStartOffsetInSamplesForOutroSegment:withOptions:
_durationInSamplesToReserveForOutroSegment:withOptions:
outroInfoForClipPlaylist:
_transitionIsPossibleFromSegment:toSegment:forBodyClipPlaylist:
loadSongInFolderWithPath:
initCommonWithUID:songName:artistName:tagIDs:keywords:hidden:sampleRate:mainSegments:crossFadeSegments:audioFileExtension:audioEncoderPresetName:metadataVersion:customOptions:
initWithUID:songName:artistName:tagIDs:keywords:hidden:sampleRate:mainSegments:crossFadeSegments:assets:audioFileExtension:audioEncoderPresetName:metadataVersion:customOptions:
initWithDictionary:assets:
_loadAnalysisData
analysisData
_cacheSegmentsByType
_populateCache
_cacheObjectForKey:
_metadataDictFromCache
_decodedMainSegmentsFromCache
_mainSegmentsFromCache
_destroyCache
_loadSegments
_segmentsforType:
_segmentsForIndex:andType:
_shortestSegmentsForType:
_shortestSegmentForType:
_longestSegmentsForType:
_longestSegmentForType:
_highestIndexForSegmentType:
_sortFlexSegmentsShortestToLongest:
_transitionSegmentForSegmentInfo:fromBarIndex:inSegmentList:
_transitionSegmentForSegmentInfo:toSegmentInfo:fromBarIndex:inSegmentList:
_sampleDurationOfClipPlaylist:
_minBodySegmentDuration
_maxIntroDuration
_minIntroDuration
_maxOutroDuration
_minOutroDuration
_actualOutroDurationForAssemblyList:currentDuration:
_minimumPermittedIntroAndOutroDuration
_naturalDurationAssemblyList
_sequenceBodySegmentList:forIndexes:
_addSegment:withDuration:toAssemblyList:indexOfNewSegment:
_addSegment:withDuration:toAssemblyList:timeRemaining:reusedSegment:indexofNewSegment:
_removeSegmentInfo:fromAssemblyList:
_updateTransitionBodySegmentsForAssemblyList:usingNewSegment:indexOfNewTransitionSegment:
_removeUnpermittedTransitionsInAssemblyList:final:testingContext:removedIndexes:
_removeUnpermittedTransitionsInAssemblyList:final:testingContext:removedIndexes:conflictList:
_addBodySegmentsForAssemblyList:forDuration:unusedDuration:testingContext:timedOut:
_addIntroSegmentsToAssemblyList:forDuration:testingContext:
_addOutroSegmentsToAssemblyList:forDuration:allowTrim:testingContext:
_rebuildBodySegmentsInAssemblyList:forDuration:unusedDuration:testingContext:
_buildIntroAndOutroOnlySegmentAssemblyList:forDuration:testingContext:
_buildSegmentAssemblyList:forDuration:withOptions:testingContext:
_fullSongLoopedClipPlaylistForDuration:withOptions:testingContext:
_clipPlaylistForDuration:withOptions:testingContext:
_validateStructureForRendition:failureReason:
_validateTransitionsInRendition:failureReason:
_validateAuthoringIssuesInRendition:failureReason:
_samplesForDuration:
_verifyAssetsForSegment:withFailureReason:
verifyAssetsWithFailureReason:
mainSegments
crossFadeSegments
introSegments
outroSegments
transSegments
assetProvider
bodySegments
_analysisData
_segmentCache
_assetProvider
_bodySegments
T@"NSString",R,N,V_audioFileExtension
T@"NSObject<FlexSongAssetProviderProtocol>",R,N,V_assetProvider
T@"NSArray",R,N,V_bodySegments
volumeValueAtTime:
lastVolumeKeyFrame
appendVolumeKeyframe:
insertVolumeKeyframe:
volumeKeyframesAreValid
removeRedundantVolumeKeyFrames
volumeKeyFrames
setVolumeKeyFrames:
_volumeKeyFrames
T@"NSArray",&,N,V_volumeKeyFrames
timedOut
setTimedOut:
usingPreventedIntro
setUsingPreventedIntro:
usingPreventedOutro
setUsingPreventedOutro:
maxPassesToFit
setMaxPassesToFit:
removedConflicts
setRemovedConflicts:
maxSilenceDuration
setMaxSilenceDuration:
maxSilenceDurationTime
setMaxSilenceDurationTime:
maxSilenceUnderSetDuration
setMaxSilenceUnderSetDuration:
maxSilenceUnderSetDurationTime
setMaxSilenceUnderSetDurationTime:
maxSilencePercentage
setMaxSilencePercentage:
maxSilencePercentageTime
setMaxSilencePercentageTime:
minOutroDuration
setMinOutroDuration:
minOutroDurationTime
setMinOutroDurationTime:
sequencingLongSong
setSequencingLongSong:
_timedOut
_usingPreventedIntro
_usingPreventedOutro
_sequencingLongSong
_maxPassesToFit
_removedConflicts
_maxSilenceDuration
_maxSilenceUnderSetDuration
_maxSilencePercentage
_maxSilenceDurationTime
_maxSilenceUnderSetDurationTime
_maxSilencePercentageTime
_minOutroDurationTime
TB,N,V_timedOut
TB,N,V_usingPreventedIntro
TB,N,V_usingPreventedOutro
Tq,N,V_maxPassesToFit
T@"NSCountedSet",&,N,V_removedConflicts
Tq,N,V_maxSilenceDuration
T{?=qiIq},N,V_maxSilenceDurationTime
Tq,N,V_maxSilenceUnderSetDuration
T{?=qiIq},N,V_maxSilenceUnderSetDurationTime
Td,N,V_maxSilencePercentage
T{?=qiIq},N,V_maxSilencePercentageTime
Tq,N,V_minOutroDuration
T{?=qiIq},N,V_minOutroDurationTime
TB,N,V_sequencingLongSong
_decodeItem:asClass:
decodeItemsInArray:asClass:
decodeItemsInDict:asClass:
encodeItemsInArray:
encodeItemsInDict:
pathToBundledResourceWithName:
songsFoundInDeepScanOfDirectory:
T@"FlexCloudManager",R,W,V_cloudManager
initWithIdentifier:name:timeRange:values:
adjustDurationTo:
identifier
timeRange
values
_identifier
_values
_timeRange
T@"NSString",R,V_identifier
T@"NSString",R,V_name
T{?={?=qiIq}{?=qiIq}},R,V_timeRange
T@"NSDictionary",R,V_values
sampleCount
setSampleCount:
setBpm:
bars
setBars:
samplesPerBar
setSamplesPerBar:
customBarMarkers
setCustomBarMarkers:
_sampleCount
_bpm
_bars
_samplesPerBar
_customBarMarkers
Tq,N,V_sampleCount
Tq,N,V_bpm
Tq,N,V_bars
Tq,N,V_samplesPerBar
T@"NSArray",&,N,V_customBarMarkers
readInfoFromAudioFileAtPath:
shortLabelForSegmentType:
longLabelForSegmentType:
canTransitionFromSegment:toSegment:fromBarIndex:checkIfPrevented:
segmentsWithType:inSegments:
segmentsWithType:nameIndex:nameSuffix:inSegments:
segmentWithName:inSegments:
samplesForTimeInMsec:atSampleRate:
crossfadeLengthInSamplesForFromSeg:toSeg:fadeOutTimeInMsec:fadeInTimeInMsec:validFadeOutSamples:validFadeInSamples:
initAsCrossFade:sampleRate:sampleCount:beatsPerBar:
setName:
_decodeTypeInfoFromSegmentName
barStartPositionForBarIndex:
barEndPositionForBarIndex:
barDurationForBarIndex:
linkedPerBarTransitionsToSegmentNamed:
setLinkedPerBarTransitions:toSegmentNamed:
transitionToSegmentNamed:fromBarIndex:
addOrReplaceTransition:toSegmentNamed:fromBarIndex:
removeTransitionToSegmentNamed:fromBarIndex:
isPriorityValid
relinkAllTransitions
setSliceable:
addMetadataValue:forKey:
metadataValueForKey:
priority
setPriority:
beatsPerBar
setBeatsPerBar:
sliceable
transitions
setTransitions:
markers
setMarkers:
setType:
errors
setErrors:
metadataValues
namePrefix
nameStem
nameIndex
nameSuffix
_sliceable
_priority
_beatsPerBar
_transitions
_markers
_errors
_metadataValues
_namePrefix
_nameStem
_nameIndex
_nameSuffix
T@"NSString",R,C,N,V_namePrefix
T@"NSString",R,C,N,V_nameStem
T@"NSString",R,C,N,V_nameIndex
T@"NSString",R,C,N,V_nameSuffix
T@"NSString",C,N,V_name
Tq,N,V_priority
Tq,N,V_beatsPerBar
TB,N,V_sliceable
T@"NSDictionary",&,N,V_transitions
T@"NSDictionary",&,N,V_markers
TQ,N,V_type
TQ,N,V_errors
T@"NSDictionary",R,N,V_metadataValues
setPosition:
fadeInLength
setFadeInLength:
fadeOutLength
setFadeOutLength:
_fadeInLength
_fadeOutLength
Tq,N,V_position
Tq,N,V_fadeInLength
Tq,N,V_fadeOutLength
_durationOfOutroForPlaylist:onlyUsedDuration:
initWithSong:segments:withOptions:
_buildTracksFromSegments:
durationOfUsedOutro
setDurationOfUsedOutro:
durationOfFullOutro
setDurationOfFullOutro:
_durationOfUsedOutro
_durationOfFullOutro
Tq,N,V_durationOfUsedOutro
Tq,N,V_durationOfFullOutro
B16@0:8
v24@0:8@16
@24@0:8@16
@56@0:8{?=qiIq}16@40@48
{?=qiIq}16@0:8
@16@0:8
@32@0:8@16@24
B56@0:8@16{?=qiIq}24^@48
q16@0:8
v24@0:8@"NSArray"16
@"FMSongAsset"24@0:8@"NSString"16
@"FMSongRendition"56@0:8{?=qiIq}16@"NSDictionary"40@"FlexTestingContext"48
@"NSArray"16@0:8
@"NSArray"32@0:8@"NSString"16@"FMSongRendition"24
B56@0:8@"FMSongRendition"16{?=qiIq}24^@48
@"NSString"16@0:8
@"NSSet"16@0:8
@"NSDictionary"16@0:8
@104@0:8@16@24@32@40@48B56B60@64q72@80q88@96
v24@0:8q16
v64@0:8@16@24@32@40B48B52q56
B40@0:8@16@24^@32
B32@0:8@16^@24
v20@0:8B16
v16@0:8
@"NSString"
@"NSSet"
@"NSArray"
@"NSDictionary"
q24@0:8q16
@24@0:8^{_NSZone=}16
@24@0:8@"NSDictionary"16
@48@0:8@16B24q28q36B44
@"NSPredicate"
@"FlexSegment"
@"NSURL"
@24@0:8r^{sockaddr_in=CCS{in_addr=I}[8c]}16
q20@0:8I16
^{__SCNetworkReachability=}
@"NSObject<OS_dispatch_queue>"
@40@0:8q16@24@32
v24@0:8@?16
v32@0:8@16@24
Q24@0:8@16
Q16@0:8
v24@0:8Q16
@"FMSongLibrary"
@"NSMutableArray"
@"NSMutableDictionary"
B24@0:8@16
@28@0:8f16q20
f16@0:8
v20@0:8f16
@28@0:8^@16B24
d40@0:8^d16^i24^i32
@"FMTrack"
@"NSObject<FlexSongProtocol>"
@"NSMutableSet"
@"FlexCloudManager"
@"FlexReachability"
v40@0:8{?=qiIq}16
{?="value"q"timescale"i"flags"I"epoch"q}
@44@0:8@16@24@32i40
d16@0:8
@40@0:8{?=qiIq}16
i16@0:8
@24@0:8Q16
@"NSURL"16@0:8
@"NSURL"24@0:8Q16
@"NSURL"24@0:8@"FlexSegment"16
v24@0:8@"NSString"16
@56@0:8@16Q24@32q40q48
B24@0:8d16
q24@0:8Q16
q24@0:8@16
v40@0:8@16d24@32
@48@0:8{?=qiIq}16@40
@"FMMixParameters"
@28@0:8@16i24
v24@0:8d16
@96@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64@88
@44@0:8f16{?=qiIq}20
@64@0:8@16@24@32{?=qiIq}40
@"FlexMLSummary"
@40@0:8@16q24q32
@64@0:8@16@24@32@40q48q56
@28@0:8@16B24
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
v32@0:8@"NSCache"16@24
v32@0:8Q16@24
v40@0:8@16@24@32
v44@0:8@16@24@32B40
@24@0:8q16
@"NSObject"
@"NSMutableOrderedSet"
@"NSMapTable"
@"NSCache"
@96@0:8@16@24@32@40@48B56B60@64@72q80@88
q32@0:8@16@24
B40@0:8@16@24@32
@116@0:8@16@24@32@40@48B56q60@68@76@84@92q100@108
@124@0:8@16@24@32@40@48B56q60@68@76@84@92@100q108@116
@32@0:8Q16Q24
Q24@0:8Q16
@40@0:8@16q24@32
@48@0:8@16@24q32@40
q32@0:8@16q24
B48@0:8@16q24@32^q40
B64@0:8@16q24@32q40^@48^q56
B44@0:8@16B24@28@36
B52@0:8@16B24@28@36@44
B56@0:8@16q24^q32@40^B48
B40@0:8@16q24@32
B44@0:8@16q24B32@36
B48@0:8@16q24^q32@40
B48@0:8@16q24@32@40
q40@0:8{?=qiIq}16
B24@0:8^@16
@"NSObject<FlexSongAssetProviderProtocol>"
f24@0:8q16
@"NSCountedSet"
@32@0:8@16#24
@64@0:8@16Q24@32@40q48q56
@88@0:8@16@24{?={?=qiIq}{?=qiIq}}32@80
{?={?=qiIq}{?=qiIq}}16@0:8
{?="start"{?="value"q"timescale"i"flags"I"epoch"q}"duration"{?="value"q"timescale"i"flags"I"epoch"q}}
B44@0:8@16@24q32B40
@32@0:8Q16@24
@48@0:8Q16@24@32@40
q32@0:8q16q24
q64@0:8@16@24q32q40^q48^q56
@48@0:8@16q24q32q40
v28@0:8B16@20
@32@0:8@16q24
v40@0:8@16@24q32
v32@0:8@16q24
q28@0:8@16B24
@40@0:8@16@24@32
