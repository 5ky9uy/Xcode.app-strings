v16@?0@"<EMReceivingAccountBuilder>"8
v16@?0@"<EMDeliveryAccountBuilder>"8
com.apple.email
v8@?0
B16@?0@"<EDAccount>"8
@"EMAccount"16@?0@"<EDAccount>"8
Activity observer is already registered
brand_indicators
evidence_url
indicator
indicator_hash
hash_algorithm
verified
DROP TABLE IF EXISTS brand_indicators
ALTER TABLE messages ADD COLUMN display_date INTEGER;CREATE INDEX IF NOT EXISTS messages_mailbox_display_date_index ON messages(mailbox, display_date);UPDATE messages SET display_date = date_received;
brand_indicator
messages
ALTER TABLE messages ADD COLUMN brand_indicator INTEGER;CREATE INDEX IF NOT EXISTS messages_brand_indicator_index ON messages(brand_indicator);
CREATE INDEX IF NOT EXISTS messages_deleted_date_received_index ON messages(deleted, date_received);
ALTER TABLE message_global_data ADD COLUMN follow_up_start_date INTEGER;ALTER TABLE message_global_data ADD COLUMN follow_up_end_date INTEGER;CREATE INDEX IF NOT EXISTS message_global_data_follow_up_start_date_index ON message_global_data(follow_up_start_date);CREATE INDEX IF NOT EXISTS message_global_data_follow_up_end_date_index ON message_global_data(follow_up_end_date);
searchable_message
ALTER TABLE messages ADD COLUMN searchable_message INTEGER REFERENCES searchable_messages(message_id) ON DELETE SET NULL;
Unable to add searchable_message column to messages
UPDATE OR IGNORE messages SET searchable_message = (SELECT searchable_messages.ROWID FROM searchable_messages WHERE searchable_messages.ROWID = messages.ROWID);
Unable to populate searchable_message
CREATE INDEX IF NOT EXISTS messages_searchable_message_deleted_index ON messages(searchable_message, deleted);
Unable to add messages_searchable_message_deleted_index
CREATE INDEX IF NOT EXISTS searchable_messages_transaction_id_message_id_index ON searchable_messages(transaction_id, message_id);
Unable to add searchable_messages_transaction_id_message_id_index
ALTER TABLE threads ADD COLUMN read_later_date INTEGER;
Unable to add read_later_date column to threads
CREATE TABLE IF NOT EXISTS read_later (global_message_id INTEGER PRIMARY KEY, date INTEGER NOT NULL);
Unable to create read_later table
CREATE TABLE IF NOT EXISTS searchable_rebuild (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, message_id INTEGER NOT NULL)
Unable to create searchable_rebuild table
remote_content_links
requests
last_seen_date
last_request_date
CREATE TABLE IF NOT EXISTS rich_links (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, title TEXT COLLATE BINARY, url TEXT COLLATE BINARY NOT NULL, hash TEXT COLLATE BINARY NOT NULL, UNIQUE(hash) ON CONFLICT ABORT);
Creating rich_links table
CREATE TABLE IF NOT EXISTS message_rich_links (global_message_id INTEGER NOT NULL REFERENCES message_global_data(ROWID) ON DELETE CASCADE, rich_link INTEGER NOT NULL REFERENCES rich_links(ROWID) ON DELETE CASCADE, PRIMARY KEY(global_message_id, rich_link)) WITHOUT ROWID;
Creating message_rich_links table
CREATE TABLE IF NOT EXISTS searchable_rich_links (rich_link_id INTEGER PRIMARY KEY, rich_link INTEGER REFERENCES rich_links(ROWID) ON DELETE SET NULL, message_id INTEGER, transaction_id INTEGER NOT NULL);
Creating searchable_rich_links table
CREATE INDEX IF NOT EXISTS searchable_rich_links_message_id_index ON searchable_rich_links(message_id); CREATE INDEX IF NOT EXISTS searchable_rich_links_rich_link_index ON searchable_rich_links(rich_link);
Creating searchable_data_detection_results_message_index
CREATE TABLE IF NOT EXISTS searchable_data_detection_results (ROWID INTEGER PRIMARY KEY, data_detection_result INTEGER, message INTEGER, transaction_id INTEGER NOT NULL);
Creating searchable_data_detection_results table
CREATE INDEX IF NOT EXISTS searchable_data_detection_results_message_index ON searchable_data_detection_results(message); CREATE INDEX searchable_data_detection_results_data_detection_result_index ON searchable_data_detection_results(data_detection_result);
Unable to add searchable_data_detection_results_message_index
senders
contact_identifier
bucket
user_initiated
sender_addresses
sender
address
DROP TABLE IF EXISTS senders;
Dropping senders table
DROP TABLE IF EXISTS sender_addresses;
Dropping sender_addresses table
CREATE TABLE IF NOT EXISTS send_later (global_message_id INTEGER PRIMARY KEY REFERENCES message_global_data(ROWID) ON DELETE CASCADE ON UPDATE CASCADE, date INTEGER NOT NULL);
Unable to create send_later table
mailboxes
conversations
conversation_id
thread_scopes
mailbox
mailbox_type
filter_predicate
needs_update
last_viewed
threads
scope
conversation
newest_read_message
display_message
date
read
flagged
has_red_flag
has_orange_flag
has_yellow_flag
has_green_flag
has_blue_flag
has_purple_flag
has_gray_flag
draft
replied
forwarded
redirected
junk_level_set_by_user
junk_level
has_unflagged
has_attachments
count
thread_mailboxes
thread
thread_senders
priority
thread_recipients
type
v40@?0@"EFSQLTableSchema"8@"NSString"16@"EFSQLTableSchema"24Q32
v32@?0@"EFSQLTableSchema"8@"NSString"16@"EFSQLTableSchema"24
ALTER TABLE messages ADD COLUMN unsubscribe_type INTEGER;
Unable to add unsubscribeFlags column to threads
MSAssetDownloadRetryInterval
%@.%@
v16@?0@"NSObject<OS_xpc_object>"8
Attachments
attachmentID: %@
attachmentHash: %@
nameOnDisk: %@
downloadDate: %@
size: %@
viewCount: %@
lastViewed: %@
viewCountByTapped: %@
attachments
size
hash
file_name_on_file_system
viewed_count
viewed_by_tapped_count
date_last_downloaded
message_attachments
message_attachments.rowid
global_message_id
attachment
name
mime_part_number
remote_url
Unable to insert attachment with hash: %@ into attachments table
B16@?0@"EDPersistenceDatabaseConnection"8
EDAttachmentPersistence.m
We should never have both a mime part number and a maildrop URL for a message.
Unable to insert attachment: %@ for globalMessageID: %lld into message_attachments table
Failed to update row with attachment reference: %@, globalMessageID: %lld, mimePart: %@
v32@?0@"EFSQLRow"8Q16^B24
Determine which attachments are referenced by globalMessageIDs
Removing unexpected messages from attachments table
Found
Did not find
Failed to fetch attachment reference in message_attachments table
AttachmentData
attachmentsForAccountIdentifiers
regularAccountIdentifier
EDAttachmentPersistenceManager.m
Need to have either a fileWrapper or a URL
%lld
We can't possibly have found an attachment entry without a message_attachment
v32@?0@"NSString"8@"NSArray"16^B24
__temp_%@
@16@?0@"<EDPersistedMessage>"8
v32@?0@"NSString"8@"NSMutableArray"16^B24
v32@?0@"NSNumber"8@"NSArray"16^B24
B16@?0@"NSString"8
bimi
authority
pass
fail
temperror
declined
skipped
sha256
EDBIMIManager
EDBIMIManager.downloadScheduler
v32@?0@"NSURLRequest"8@"NSURLSessionDataTask"16^B24
EDBIMIManager.m
%s can only be called from unit tests
-[EDBIMIManager test_tearDown]
com.apple.mail.BIMI.MessageStatus
authservID
hasBIMIResult
bimiResult
vmcResult
hasLocation
hasEvidenceLocation
hasIndicator
hasIndicatorHash
indicatorHashAlgorithm
hasDKIMSignature
@"NSDictionary"8@?0
v36@?0@"NSString"8@"ECHeaderAuthenticationResultStatement"16@"ECBIMIData"24B32
 and indicator
v32@?0@"NSURL"8@"ECBIMIData"16^B24
disabled
enabled
com.apple.mail.BIMI.IndicatorDownload
downloadSucceeded
indicatorIsValid
usedPrivacyProxy
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
v12@?0B8
em_biome_stream
R %@
S %@
com.apple.email.interaction-log.submit-pet
ClientResumeAssertion
com.apple.email.signposts
com.apple.maild.EDClientResumer
v24@?0@"BSProcessHandle"8@"NSError"16
EDClientStateForegroundStateDidChange
EDClientStateForegroundStateVisibleMailboxesDidChange
EDClientStateForegroundStateDidChangeKeyIsForeground
isRunningTests
visibleMailboxObjectIDs
CloudKitControl
com.apple.mail.EDCloudMirroringPersistentStore.schedulers
CloudKitMirroringDataModel
momd
CloudKitMailConversationsFlags/CloudKitMirroringDataModel
com.apple.mail.preferences
v24@?0@"NSPersistentStoreDescription"8@"NSError"16
v16@?0@"NSManagedObjectContext"8
v16@?0@"NSCloudKitMirroringResult"8
com.apple.email.ConversationDailyExporter
ConversationInfo
last-modified
com.apple.mail.EDConversationMultipleRemoteStorage
Multiple Storages: [%@, %@]
conversation_id_message_id
SyncAnchorForLastDailyConversationExport
EDConversationFlagsChanged
EDConversationFlagsChangedConversationIDKey
EDConversationFlagsChangesKey
EDConversationFlagsKey
EDConversationFlagsReason
EDConversationFlagsOldFlags
MessageConversationIsVIP
MessageConversationIsMuted
muted
notify
ConversationFlags: 
<none>
flags
sync_key
message_id
date_sent
com.apple.email.ConversationPersistenceNotification
SELECT conversation_id, sync_key FROM conversations WHERE sync_key NOT NULL
Selecting synced conversations
:conversation_id
:limit
SELECT message_id FROM conversation_id_message_id WHERE conversation_id = :conversation_id ORDER BY date_sent DESC LIMIT :limit
Selecting message IDs for conversation ID
SELECT DISTINCT(conversation_id) FROM conversation_id_message_id WHERE message_id IN (%@)
Selecting conversation ID for message IDs
SELECT flags FROM conversations WHERE conversations.conversation_id = :conversation_id
Selecting flags for conversation ID
INSERT INTO conversations (flags) values (:flags)
:flags
Creating conversation.
SELECT flags FROM conversations WHERE conversation_id = :conversation_id LIMIT 1
Finding old conversation flags
UPDATE conversations SET flags = :flags, sync_key = :sync_key WHERE conversation_id = :conversation_id
:sync_key
Setting conversation flags
SELECT message_id, date_sent from messages where ROWID IN (%@)
Selecting message IDs to update conversation association table.
SELECT conversation_id FROM conversations where conversation_id = %@
Executing querying for conversation id
INSERT OR REPLACE INTO conversation_id_message_id (conversation_id, message_id, date_sent) VALUES (:conversation_id, :message_id, :date_sent)
:message_id
:date_sent
Setting conversation association table entries
DELETE FROM conversations WHERE conversation_id NOT IN (SELECT DISTINCT conversation_id from messages) AND (sync_key IS NULL AND conversation_id NOT IN (SELECT DISTINCT(conversation_id) FROM conversation_id_message_id WHERE date_sent > :older_than));
:older_than
Pruning conversations table
UPDATE conversation SET flags = :flags, sync_key = NULL WHERE conversation_id IN (%@)
SELECT value FROM properties WHERE key = '%@'
value
Selecting previous conversation daily export sync anchor
SELECT max(ROWID) as syncAnchor from messages
syncAnchor
Selecting current conversation sync anchor for daily export
INSERT OR REPLACE INTO properties (key, value) VALUES (:key, :value)
:key
:value
Updating previous conversation sync anchor for daily export
SELECT DISTINCT conversations.conversation_id AS conversation_id FROM conversations LEFT JOIN messages on messages.conversation_id = conversations.conversation_id WHERE messages.ROWID > :start AND messages.ROWID < :end AND conversations.flags != 0;
:start
:end
com.apple.email.ConversationPruning
message-ids
EDConversationRemoteCloudKitStoragePushNotificationName
kCloudStoreHistoryTokenUserDefaultsKey
com.apple.icloud-container.com.apple.mobilemail
%@-Export
%@-Import
conversationUUID == %@
lastModified
conversationUUID
v24@?0@"NSPersistentHistoryTransaction"8^B16
com.apple.mail.threadinfo
com.apple.mail.EDConversationRemoteKVSStorage
succeeded
failed
v32@?0@"NSString"8Q16^B24
v32@?0@"NSString"8@16^B24
NSUbiquitousKeyValueStoreServerChange
NSUbiquitousKeyValueStoreInitialSyncChange
NSUbiquitousKeyValueStoreQuotaViolationChange
unknown change reason (%lu)
-[EDDaemonInterfaceFactory test_tearDown]
-[EDDaemonInterfaceFactory newOutgoingMessageRepository]
EDDaemonInterfaceFactory.m
data_detection_results
category
EDDataDetectionPersistence
EDDataDetectionPersistence.m
HookResponder does not respond to all of the methods required by EDDataDetectionPersistence.
Inserting into the data detection results table
Reading data detection results
ROWID
Getting data detection results from message ID
com.apple.email.daemon.EDDiagnosticInfoGatherer
DiagnosticLogs
v16@?0@"NSError"8
com.apple.mail.SenderDomain
com.apple.mail.EDDifferentialPrivacyReporter
@"NSSet"8@?0
en_US
en_GB
en_CA
en_AU
fr_FR
de_DE
ja_JP
OTHER
v24@?0@"NSString"8@"NSString"16
B16@?0@"<EMExtendedContentItem>"8
v24@?0@"EMContentRepresentation"8@"NSError"16
EDGroupedSenderQueryHandler
com.apple.email.%@.%p
com.apple.mail.EDGroupedSenderQueryHandler.result
EDGroupedSenderQueryHandler.m
-[EDGroupedSenderQueryHandler test_tearDown]
after messages were added
deleted
changed
after messages were deleted
after messages were changed
@"EMObjectID"16@?0@"NSOrderedCollectionChange"8
@"EMObjectID"16@?0@"EMGroupedSender"8
B24@?0@"EMObjectID"8@"EMMessageListItemChange"16
B16@?0@"EMMessage"8
@"NSString"16@?0@"EMMessage"8
mode
order
weights
weightedThreshold
orderedThreshold
ignoreUserAddresses
confusionThreshold
limitToRecentMessages
ordered
weighted
conversationID
recipient
listID
MFUserCreatedMailboxIDs
EDHeuristicsMailboxPredictor.m
Invalid parameter not satisfying: %@
[mergedParams[kConfusionThresholdParameterKey] isKindOfClass:[NSNumber class]] || [mergedParams[kConfusionThresholdParameterKey] isKindOfClass:[NSNull class]]
[mergedParams[kOrderParameterKey] isKindOfClass:[NSArray class]]
[mergedParams[kWeightsParameterKey] isKindOfClass:[NSDictionary class]]
Unknown mode: %@
Unknown field: %@
v32@?0@"NSString"8@"NSNumber"16^B24
sendFromAddressJSONURL
canSendFrom
defaultAddress
email
%@ (%@)
%@:%@
X-MobileMe-AuthToken %@
POST
Authorization
application/json-rpc; charset=UTF-8
X-Apple-I-MD-M
X-Apple-I-MD
%llu
X-Apple-I-MD-RINFO
jsonrpc
update
method
params
AKAnisetteProvisioningController
/System/Library/PrivateFrameworks/AuthKit.framework/AuthKit
### Failed to Soft Linked: /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit
v16@?0@"<EMThreadBuilder>"8
v32@?0@"EMMessage"8Q16^B24
B32@?0@"EMMessage"8Q16^B24
In-memory threads
com.apple.mail.EDInMemoryThreadQueryHandler.contentProtection
com.apple.mail.EDInMemoryThreadQueryHandler.result
EDInMemoryThreadQueryHandler.m
-[EDInMemoryThreadQueryHandler test_tearDown]
EDInMemoryThreadQueryHandler<%p> transaction
Unable to get acknowledgement token for in-memory thread query handler
@"EMThreadObjectID"16@?0@"NSNumber"8
v24@?0@"NSArray"8^B16
v24@?0@"EMMessageListItemChange"8@"EMThreadObjectID"16
@"NSNumber"16@?0@"EMMessage"8
v32@?0@"EMThreadObjectID"8@"EMMessageListItemChange"16^B24
@16@?0@"EDInMemoryThread"8
@"NSNumber"16@?0@"EDInMemoryThread"8
B16@?0@"<ECEmailAddressConvertible>"8
v32@?0@"NSNumber"8@"EDInMemoryThread"16^B24
_oldestThreadsByMailboxObjectIDs should be only initialized once
v32@?0@"EDInMemoryThread"8Q16^B24
v32@?0@"EMMailboxObjectID"8@"EMThread"16^B24
v32@?0@"NSNumber"8Q16^B24
@"EMThreadObjectID"16@?0@"EMThread"8
thread.
@"<EMCollectionItemID>"16@?0@"NSNumber"8
<%@ %p
 eventID=%lld
 version=%ld
 name=%@
 date=%@
 accountID=%@
 mailboxID=%lld
 conversationID=%lld
 messageIDHash=%lld
 messagePersistentID=%lld
 data=%@
duration
scrolled_to_end
model
version
score
features
com.apple.mail.interaction-log.salt
q24@?0@"NSDictionary"8@"NSDictionary"16
<%@ %p: %@>
com.apple.mail
com.apple.mail.EDInteractionLoggerStateTracking
com.apple.email.EDInteractionLoggerProcessing
reply_draft_started
forward_draft_started
message_view_start
message_view_end
message_list_display_started
message_list_type
position
cell_style
message_list_display_ended
none
v32@?0@"NSString"8@"_EDUserActionState"16^B24
message_moved
message_copied
link_clicked
ConversationViewExcludesRelatedMessages
ConversationViewShowsNewestAtTop
LinesOfPreview
NumberOfActiveAccounts
DisableThreading
LeftEdgeSwipeAction
RightEdgeSwipeAction
ColumnLayoutMessageList
NumberOfSnippetLines
@"NSDictionary"16@?0@8
ConversationViewSortDescending
ConversationViewSpansMailboxes
@"NSDictionary"16@?0@"NSNumber"8
AccountOrdering
@"NSDictionary"16@?0@"NSArray"8
v32@?0@8@16^B24
app_launch
app_background
app_resume
marked_mute_thread
message_fetched
read_changed
flag_changed
reply_sent
forward_sent
message_sent
com.apple.mobilemail.ListUnsubscribeScheduler
-[EDListUnsubscribeHandler ignoreWithCommand:completion:]
EDListUnsubscribeHandler.m
-[EDListUnsubscribeHandler unsubscribeMailtoWithCommand:completion:]
Cannot perform HTML unsubscribe. url was nil: %d, postContent was nil: %d
local_message_actions
action_messages
action_labels
action_flags
action
source_mailbox
destination_mailbox
action_type
message
destination_message
label
action_phase
remote_id
do_add
flag_type
flag_value
-[EDLocalActionPersistence init]
EDLocalActionPersistence.m
SELECT ROWID, action_type, user_initiated, mailbox, source_mailbox, destination_mailbox FROM local_message_actions WHERE ((mailbox IN (SELECT ROWID FROM mailboxes WHERE url GLOB '%@*')) AND (ROWID > ?)) ORDER BY ROWID
DELETE FROM local_message_actions WHERE ROWID IN (%@);
deleting actions
SELECT action_phase, remote_id, message, destination_message FROM action_messages WHERE action = ?
v16@?0@"<ECTransferMessageActionItemBuilder>"8
Creating a transfer action when we don't have a transfer action type
v16@?0@"<ECTransferMessageActionBuilder>"8
A transfer all action should always have exactly one remote ID associated with it
v16@?0@"<ECTransferUndownloadedMessageActionBuilder>"8
v16@?0@"<ECFlagChangeMessageActionBuilder>"8
A flag change all action should always have exactly one remote ID associated with it
v16@?0@"<ECFlagChangeUndownloadedMessageActionBuilder>"8
SELECT label, do_add FROM action_labels WHERE action = ?
v16@?0@"<ECLabelChangeMessageActionBuilder>"8
SELECT remote_id, message FROM action_messages WHERE action = ?
SELECT flag_type, flag_value FROM action_flags WHERE action = ?
v16@?0@"<ECMessageFlagChangeBuilder>"8
-[EDLocalActionPersistence messageForDatabaseID:]
INSERT INTO local_message_actions (action_type, mailbox) VALUES (?, ?)
Adding flag change action
INSERT INTO action_flags (action, flag_type, flag_value) VALUES (?, ?, ?)
v28@?0B8q12q20
Adding flag change records
INSERT INTO local_message_actions (action_type, user_initiated, mailbox, source_mailbox, destination_mailbox) VALUES (?, ?, ?, ?, ?)
Adding copy action
copy
append
move
delete
INSERT INTO action_labels (action, label, do_add) VALUES (?, ?, ?)
Adding flag change messages
UPDATE local_message_actions SET mailbox = :mailbox WHERE ROWID = :action
:action
:mailbox
Updating action phase
source mailbox
destination mailbox
-[EDLocalActionPersistence moveSupportedFromMailboxURL:toURL:]
UPDATE action_messages SET action_phase = %ld WHERE action = %llu AND %@
Updating copy item phase
DELETE FROM action_messages WHERE action = %llu AND %@
Deleting copy items
Copy item had neither a source remoteID or a destination message
(remote_id IN (%@) OR destination_message IN (%@)
remote_id IN (%@)
destination_message IN (%@)
DELETE FROM action_messages WHERE action = %lld AND NOT %@
Deleting flag change messages.
DELETE FROM local_message_actions WHERE ROWID = ?
Removing completed action
UserNotificationCenter
RemindMe
Sender
mailbox_actions
account_identifier
mailbox_name
new_mailbox_name
INSERT INTO mailbox_actions (account_identifier, action_type, mailbox_name, new_mailbox_name) VALUES (?, ?, ?, ?)
inserting mailbox action
SELECT ROWID, action_type, mailbox_name, new_mailbox_name FROM mailbox_actions WHERE (account_identifier = ?) ORDER BY ROWID
SELECT ROWID, action_type, mailbox_name, new_mailbox_name FROM mailbox_actions WHERE (account_identifier = ?) ORDER BY ROWID LIMIT 1
DELETE FROM mailbox_actions WHERE ROWID = ?
@"NSString"16@?0@"NSNumber"8
DELETE FROM mailbox_actions WHERE ROWID IN (%@)
-[EDMailboxPersistence test_tearDown]
@"EMMailboxObjectID"16@?0@"EMMailbox"8
/Notes
-[EDMailboxPersistence mailboxDatabaseIDsForMailboxObjectIDs:createIfNecessary:]
EDMailboxPersistence.m
-[EDMailboxPersistence createMailbox:parentMailboxID:]
-[EDMailboxPersistence deleteMailbox:]
-[EDMailboxPersistence moveMailbox:newParentMailboxID:]
-[EDMailboxPersistence renameMailbox:newName:]
com.apple.mail.MailboxPrediction.processing
B16@?0@"EMMailbox"8
v16@?0@"NSArray"8
@16@?0@"NSString"8
B16@?0@"EMMailboxObjectID"8
EDMailboxProvider
com.apple.mail.EDMailboxProviderQueue
-[EDMailboxProvider test_tearDown]
v16@?0@"<EDReceivingAccount>"8
-[EDMailboxProvider _transformMailbox:legacyMailboxToMailboxMap:objectIDToLegacyMailboxMap:]
EDMailboxProvider.m
-[EDMailboxProvider _fetchMailboxesForAccount:]
@16@?0@"<ECMailbox>"8
@16@?0@"EMObjectID"8
com.apple.email.EDMessageRepository.serializationQueue
@16@?0@"EMMailbox"8
EDMailDropMetadataGenerator
v16@?0@8
v16@?0@"EFPromise"8
EDMailDropSupport
FinishedParsingMailDropNodes
replaceNodeWithIdWithHTML(%@);
v24@?0@"NSString"8@"NSError"16
v24@?0@8@"NSError"16
EDMailDropMetadataGenerator.m
webView
B16@?0@"NSDictionary"8
v32@?0@"NSString"8@"NSString"16^B24
com.apple.MobileAsset.MailDynamicData
IgnoreAccountDomains
IgnoredDomains
com.apple.mailsupport.downloadMobileAssetCatalog
gmail.com
googlemail.com
hotmail.co
hotmail.co.uk
hotmail.com
hotmail.eu
hotmail.net
hotmail.org
icloud.com
me.com
outlook.co
outlook.com
outlook.eu
outlook.org
rocketmail.com
ymail.com
v16@?0@"<EDAssetDownloadSchedulerContinuation>"8
apple.com
group.apple.com
v16@?0q8
TelemetryConfig.plist
EDMessageActionHandlerProvidersChanged
v16@?0@"NSMutableArray"8
v32@?0@"<EFCancelable>"8@"NSArray"16@"NSError"24
v32@?0@"MERemoteExtension"8Q16^B24
@16@?0@"MERemoteExtension"8
v16@?0@"MEMessageActionDecision"8
globalMessageID: %lld@
mimePartNumber: %@
name: %@
remoteURL: %@
com.apple.email.EDMessageChangeManager
HookResponder does not respond to all of the methods required by the EDMessageChangeManager.
-[EDMessageChangeManager init]
EDMessageChangeManager.m
-[EDMessageChangeManager test_tearDown]
@"<NSCopying>"16@?0@"<ECMessage>"8
v32@?0@"<EDPersistedMessage>"8@"<ECMessage>"16^B24
B16@?0@"<EDPersistedMessage>"8
B16@?0@"<ECMessage>"8
v32@?0@"NSURL"8@"NSArray"16^B24
@"<NSCopying>"16@?0@"<EDBaseMessage>"8
Mail
BIMI
@"<EDPersistedMessage>"16@?0@"<ECMessage>"8
v32@?0@"NSNumber"8@"EFPair"16^B24
v16@?0@"<ECIMAPServerMessageBuilder>"8
Got foreign key constraint
Calling reflectFlagChanges:forMessages: on IMAP
Reflect all deleted server messages for a data source without server messages
@"<EDPersistedMessage>"16@?0@"NSNumber"8
v24@?0Q8^B16
v32@?0@"NSDictionary"8@"NSMutableArray"16^B24
@"NSNumber"16@?0@"<EDPersistedMessage>"8
v32@?0@"ECMessageFlagChange"8@"NSMutableArray"16^B24
v32@?0@"ECTransferMessageActionItem"8@"NSData"16^B24
v16@?0@"<ECServerMessageBuilder>"8
@"<ECMessage>"16@?0@"ECTransferMessageActionItem"8
B32@?0@"<ECMessage>"8Q16^B24
-[EDMessageChangeManager accountForMailboxURL:]
v32@?0@"ECAngleBracketIDHash"8@"EDReadLaterCloudStorageChangeElement"16^B24
B32@?0@"EFPair"8Q16^B24
EDNotificationWillSyncMailbox
EDNotificationDidSyncMailbox
EDNotificationKeyMailbox
%@-MailboxObserver-%@
%@-MessagesPendingFlagChangesKey-%p
v16@?0@"NSString"8
Messages
Initialization
EDMessageCountQueryHandler.m
-[EDMessageCountQueryHandler test_tearDown]
resetting
starting
v40@?0@"EMObjectID"8q16q24q32
full count
Incrementing local counts
Decrementing local counts
v32@?0@"EMObjectID"8@"_EDMailboxServerCount"16^B24
All updates acknowledged
Finished syncing mailbox %@
Original
Prepare for change
Process change
Changed messages from %lld matches to %lld matches
Persistence did add messages
New match after changing number of attachments
Persistence did delete messages
Deleted %lld messages
Changed message ID to one we've already counted
Remind Me timer fired
Persistence is adding mailbox
server-count set to %lld for %@
Persistence did update server count
most-recent-status-count set to %lld for %@
Persistence did update most recent status count
last-sync and most-recent-status-count to %lld for %@
Persistence did update last sync and most recent status count
Mailbox list changed
GlobalMessageID:%lld - %@, %@
unread
not flagged
EDMessageCountQueryHandler-%d
v16@?0@"NSCountedSet"8
MessageData
NonpurgeableMessageData
senderAddress.emailAddressValue.displayName
senderAddress.emailAddressValue.simpleAddress
toList.emailAddressValue.displayName
toList.emailAddressValue.simpleAddress
ccList.emailAddressValue.displayName
ccList.emailAddressValue.simpleAddress
mailboxObjectIDs.url.absoluteString
subject.subjectString
body
AnyRecipient
From
Subject
Spotlight
%K = %@
@"NSPredicate"16@?0@"ECEmailAddress"8
EDMessageListItemPredicates.m
Expected predicate should be a NSCompoundPredicate
Expected subpredicate should be a NSComparisonPredicate
@"NSPredicate"16@?0@"NSPredicate"8
rowid
objectID should be a constant value right expression
@"EMMessageObjectID"16@?0@8
messageID
subject
summary
date_received
display_date
recipients
message_references
addresses
comment
message_global_data
follow_up_start_date
follow_up_end_date
subjects
summaries
protected_message_data
message_metadata
json_values
timestamp
addresses_address
addresses_comment
com.apple.mail.EDMessagePersistence.message_metadata
simpleAddress
displayName
subjectWithoutPrefix
additionalMapper
emailAddressValue
original_mailbox
content_type
encoding
external_id
unique_id
list_id_hash
subject_prefix
date_last_viewed
unsubscribe_type
senderAddress
mailboxObjectIDs
isNotify
isMute
hasAttachments
column
placeholderColumn
document_id
remote_mailbox
searchable_messages
reference
is_originator
data
@"EMMessageObjectID"16@?0@"NSData"8
@"NSString"24@?0@"NSString"8@"NSString"16
%@, %@
-[EDMessagePersistence countOfMessagesWithGlobalMessageID:matchingQuery:]
EDMessagePersistence.m
-[EDMessagePersistence countOfMessagesMatchingQuery:]
v24@?0@"NSArray"8@"NSError"16
-[EDMessagePersistence iterateMessagesMatchingQuery:batchSize:firstBatchSize:limit:cancelationToken:handler:]
B16@?0@"NSSortDescriptor"8
-[EDMessagePersistence iteratePersistedMessagesMatchingQuery:limit:cancelationToken:handler:]
 (expanded mailbox query)
-[EDMessagePersistence persistedMessageForOutgoingMessage:isDraft:]
v32@?0@"NSNumber"8@"NSNumber"16^B24
v32@?0@"EMMailboxScope"8@"NSArray"16^B24
Fetching messages for messageIDHashes
@"NSArray"16@?0@"EMObjectID"8
@"EMMessageObjectID"16@?0@"EMObjectID"8
@"EMMessageObjectID"16@?0@"NSNumber"8
-[EDMessagePersistence persistedMessagesForDatabaseIDs:requireProtectedData:temporarilyUnavailableDatabaseIDs:]
Selecting message_ids for messages with follow-ups with certain conversation_ids
Fetch persistentMessageIDs for globalMessageIDs
@"EMMessage"16@?0@"EMMessageObjectID"8
Exchange message may have a different message-id
B16@?0@"EMObjectID"8
@"EMMailboxScope"16@?0@"EMMessageObjectID"8
SELECT json_extract(%@ , :path ) FROM %@ WHERE %@ == :message
:path
:message
INSERT INTO message_metadata(message_id, timestamp, json_values) VALUES(:message, :timestamp, json_set(json_object(), :path, :json_string)) ON CONFLICT(message_id) DO UPDATE SET json_values = json_set(json_values, :path, :json_string), timestamp = :timestamp;
:json_string
:timestamp
UPDATE OR IGNORE message_metadata SET json_values = json_remove(json_values, :path), timestamp = :timestamp WHERE message_id == :message;
B8@?0
SELECT COUNT(*) FROM message_metadata;
DELETE FROM message_metadata ORDER BY timestamp LIMIT :limit;
-[EDMessagePersistence cachedDatabaseIDsDictionaryForGlobalMessageIDs:]
Seleting brand indicator
Seleting brand indicators
Inserting brand indicator
Seleting existing brand indicator
Seleting undownloaded brand indicators
Updating brand indicator
Selecting brand indicator to remove
Nulling out brand indicator for messages
Deleting brand indicator
Updating follow up
Resetting display date after updating follow up
read_later
-[EDMessagePersistence globalIDForMessageWithDatabaseID:mailboxScope:]
-[EDMessagePersistence groupedMessagesCountByMailboxMatchingQuery:variable:]
-[EDMessagePersistence requestContentForMessageObjectID:requestID:options:delegate:completionHandler:]
-[EDMessagePersistence requestSummaryForMessageObjectID:]
Combining smartsort with other sortDescriptors is not supported.
Smartsort only supports single mailbox predicate.
Unable to find message for messageID %@
-[EDMessagePersistence collectStatistics]
Q16@?0@"NSString"8
SELECT COUNT(*) FROM messages
SELECT COUNT(*) FROM messages WHERE deleted = '0'
SELECT COUNT(*) FROM searchable_messages
SELECT COUNT(*) FROM messages WHERE messages.searchable_message IS NULL AND deleted = '0'
Failed on predicate %@
com.apple.email.EDMessageQueryHandler.contentProtection
com.apple.email.EDMessageQueryHandler.result
v32@?0@"EMMessageObjectID"8@"NSArray"16^B24
@"EMMessageListItemChange"8@?0
EDMessageQueryHandler.m
_oldestMessageIDsByMailboxObjectIDs should be only initialized once
@"NSPredicate"20@?0@"EMMessage"8B16
@"EMMessage"16@?0@"EMMessage"8
B24@?0@"EMMessage"8@"EMMessage"16
com.apple.email._EDMessageItemIDCollector._scheduler
Timed out
Query helper requested restart
RemoteSearchKey
%@-MessagesPendingConversationIDChangeKey-%p
%@-JournaledMessagesPendingAddKey-%p
%@-MessagesPendingSenderBucketChangesKey-%p
%@-MessagesPendingReadLaterDateChangesKey-%p
%@-MessagesPendingDisplayDateChangesKey-%p
EDMessageQueryHelper.m
Trying to start EDMessageQueryHelper %p that was already started.
Message SQL query
q24@?0@"<EDPersistedMessage>"8@"<EDPersistedMessage>"16
Journal reconciliation happened between isAddingMessages: and didAddMessages: persistence hooks
@"NSString"16@?0@"NSString"8
-[EDMessagePredicateParser parseResultsFromPredicate:]
EDMessageQueryParser.m
displayMessage
Predicate must be a NSCompoundPredicate
rowid IN %@
results expected to have at least one EDMessageQueryParserObject
FALSE
Generated query is nil
(kMDItemContentType = public.email-message && %@)
Searchable Index query expression is not valid
@"NSNumber"16@?0@"NSString"8
B16@?0@"NSPredicate"8
com.apple.email.EDMessageRepository.updateThrottlerResetQueue
com.apple.email.EDMessageRepository.asyncWorkScheduler
com.apple.email.EDMessageRepository.contentProtectionQueue
EDMessageRepository.m
-[EDMessageRepository test_tearDown]
Buckets
starting one off query
starting one off count query
starting query
B16@?0@"EMThreadScope"8
v32@?0@"EFPair"8@"NSMutableSet"16^B24
v32@?0@"EMThreadScope"8@"NSMutableSet"16^B24
@"EDThreadQueryHandler"16@?0@"<EDMessageRepositoryQueryHandler>"8
starting count query
-[EDMessageRepository test_activeQueryCancelationTokens]
v32@?0@"EMThreadScope"8@"NSArray"16^B24
Non-thread query handler assigned to thread query.
v32@?0@"EMObjectID"8@"<EDMessageRepositoryQueryHandler>"16^B24
requesting message list items
Failed to get message list item for objectID: %@
v44@?0@"EMThreadObjectID"8@"EMThread"16B24@"EDThreadQueryHandler"28@"NSError"36
Non-grouped-sender query handler assigned to grouped-sender query.
Failed to find grouped sender in query handler
Failed to find message list item or "missing" reason
    %@
performing change action
@16@?0@"<ECMessage>"8
v32@?0@"NSDate"8@"NSMutableArray"16^B24
@"NSURL"16@?0@"EMMailboxObjectID"8
An undo action was requested for a copy, that's not yet supported
@"<NSCopying>"16@?0@"<EDPersistedMessage>"8
v32@?0@"<EDReceivingAccount>"8@"NSArray"16^B24
v32@?0@"NSURL"8@"NSMutableArray"16^B24
requesting content representation
v16@?0@"EMContentRepresentation"8
resetting precomputed threads
setting cached metadata
getting cached metadata
mailbox prediction
v16@?0@"EMMailbox"8
loading older messages
v16@?0@"EDWebContentParserResults"8
@"NSArray"16@?0@"<EDReconciliationQueryProvider>"8
EDMessageRepositoryQueryHandler.m
-[EDMessageRepositoryQueryHandler test_tearDown]
v16@?0@"NSMapTable"8
EDMessageTransformer.m
message != nil
@"NSDate"24@?0@"NSDate"8@"NSDate"16
@"NSNumber"24@?0@"NSNumber"8@"NSNumber"16
@"EMMessage"16@?0@"<EDPersistedMessage>"8
v16@?0@"<EMMessageBuilder>"8
@16@?0@"<ECGmailLabel>"8
@16@?0@"NSURL"8
com.apple.email.EDOutgoingMessageRepository
com.apple.email.outgoingmessagerepository.deliveryworkblock
-[EDOutgoingMessageRepository scheduleAlarmForSendLaterDate:completion:]
EDOutgoingMessageRepository.m
-[EDOutgoingMessageRepository deliverMessage:usingMailDrop:isCancelable:completion:]
-[EDOutgoingMessageRepository outgoingMessageFromPersistedMessage:]
-[EDOutgoingMessageRepository cancelLastDelayedMessage:]
-[EDOutgoingMessageRepository isProcessingWithCompletion:]
-[EDOutgoingMessageRepository numberOfPendingMessagesWithCompletion:]
-[EDOutgoingMessageRepository outboxContainsMessageFromAccountObjectID:completion:]
-[EDOutgoingMessageRepository processAllQueuedMessages]
-[EDOutgoingMessageRepository resumeDeliveryQueue]
-[EDOutgoingMessageRepository suspendDeliveryQueue]
-[EDOutgoingMessageRepository messagesForDocumentID:mailboxID:]
-[EDOutgoingMessageRepository startObservingPendingMessageChangesWithChangeObserver:observationIdentifier:]
-[EDOutgoingMessageRepository cancelObservation:]
-[EDOutgoingMessageRepository urlForSendLaterFolder]
EDPBGeneratedExtensions.m
INVALID event, we should not have reached this point
%@ %@
sequence_number
event_name
category_marked
category_inferred
INVALID
MESSAGE_FETCHED
MESSAGE_SENT
MESSAGE_LIST_DISPLAY_STARTED
MESSAGE_LIST_DISPLAY_ENDED
MESSAGE_MOVED
MESSAGE_COPIED
LINK_CLICKED
APP_LAUNCH
APP_BACKGROUND
APP_RESUME
FLAG_CHANGED
READ_CHANGED
MESSAGE_VIEW_START
MESSAGE_VIEW_END
REPLY_DRAFT_STARTED
FORWARD_DRAFT_STARTED
REPLY_SENT
FORWARD_SENT
MARKED_MUTE_THREAD
CATEGORY_MARKED
CATEGORY_INFERRED
(unknown: %i)
account_id
mailbox_id
positive
category_type
model_id
model_version
features_important
features_promotion
UNDEFINED_MAILBOX_TYPE
INBOX
ARCHIVE
SENT
TRASH
JUNK
DRAFTS
OUTBOX
UNDEFINED_CATEGORY_TYPE
IMPORTANT
SOCIAL
PROMOTION
LIST
remove_all_user_overrides
user_id
device_id
locale
timezone_offset
user_segment
category_root_installed
from_mailbox_id
from_mailbox_type
to_mailbox_id
to_mailbox_type
deprecated
headers
idx (%lu) is out of range (%lu)
sender_domain
sender_is_vip
sender_contact_id
user_is_sender
subject_words
message_is_reply
message_is_forwarded
user_is_to
user_is_cc
user_is_bcc
list_id
references
to_address
to_domain
to_is_vip
to_contact_id
cc_address
cc_domain
cc_is_vip
cc_contact_id
bcc_address
bcc_domain
bcc_is_vip
bcc_contact_id
unknown_feature_count
cc_contains_contact
cc_is_top_direct_addresses_based_on_respond
cc_is_top_direct_addresses_based_on_scroll
cc_is_top_direct_addresses_based_on_send
cc_is_top_direct_addresses_based_on_view
cc_is_top_indirect_addresses_based_on_respond
cc_is_top_indirect_addresses_based_on_scroll
cc_is_top_indirect_addresses_based_on_send
cc_is_top_indirect_addresses_based_on_view
from_list_id
message_is_forward
num_recipients
sender_is_contact
sender_is_top_direct_addresses_based_on_respond
sender_is_top_direct_addresses_based_on_scroll
sender_is_top_direct_addresses_based_on_send
sender_is_top_direct_addresses_based_on_view
sender_is_top_indirect_addresses_based_on_respond
sender_is_top_indirect_addresses_based_on_scroll
sender_is_top_indirect_addresses_based_on_send
sender_is_top_indirect_addresses_based_on_view
subject_is_top_words_based_on_respond
subject_is_top_words_based_on_scroll
subject_is_top_words_based_on_send
subject_is_top_words_based_on_view
time_received
to_contains_contact
to_is_top_direct_addresses_based_on_respond
to_is_top_direct_addresses_based_on_scroll
to_is_top_direct_addresses_based_on_send
to_is_top_direct_addresses_based_on_view
to_is_top_indirect_addresses_based_on_respond
to_is_top_indirect_addresses_based_on_scroll
to_is_top_indirect_addresses_based_on_send
to_is_top_indirect_addresses_based_on_view
NIGHT
MORNING
AFTERNOON
EVENING
to_count
language
header_key_filtered_count
Couldn't get messages for persisted messages
-[EDPersistence test_tearDown]
-[EDPersistence database]
EDPersistence.m
-[EDPersistence serverMessagePersistenceFactory]
-[EDPersistence conversationPersistence]
-[EDPersistence localActionPersistence]
-[EDPersistence messageChangeManager]
-[EDPersistence dataDetectionPersistence]
-[EDPersistence readLaterPersistence]
-[EDPersistence richLinkPersistence]
-[EDPersistence sendLaterPersistence]
-[EDPersistence searchableIndexManager]
-[EDPersistence threadPersistence]
-[EDPersistence remoteContentManager]
-[EDPersistence remoteContentPersistence]
-[EDPersistence attachmentPersistenceManager]
-[EDPersistence mailboxActionPersistence]
-[EDPersistence persistenceStatistics]
MailClassAVFS
MailClassBVFS
MailClassCVFS
Protected Index
_EDPersistenceActiveDatabaseConnection
_EDPersistenceReadOnlyDatabaseConnection
_EDPersistenceNeedsHighPriority
-[EDPersistenceDatabase init]
EDPersistenceDatabase.m
performReadBlockInDatabase called before database setup is complete
performWriteBlockInDatabase called before database setup is complete
Database write block nested inside a readblock.
Committing transaction in nested block
Couldn't get database connection in performBlock
Committing transaction
We should not be checking out a connection on a nested call
-[EDPersistenceDatabase openConnectionIsWriter:]
-[EDPersistenceDatabase enforceDataProtection]
file
Unsupported file protection
cache
shared
memory
Invalid database type
:memory:
_EDPersistenceDatabaseConnectionInTransaction
_EDPersistenceDatabaseConnectionNestedBlockFailed
_EDPersistenceDatabaseConnectionTransactionGeneration
WriteTransactionGeneration
-[EDPersistenceDatabaseConnection init]
EDPersistenceDatabaseConnection.m
[%@ isWriter: %@, SQL connection: %@]
Error preparing statement for query %@
SELECT statement
v32@?0Q8@"<EFSQLBindable>"16^B24
INSERT statement
v32@?0@"NSString"8@"<EFSQLBindable>"16^B24
UPDATE statement
UPSERT statement
Error while executing %@
Error while executing DELETE statement
We have a database connection without a sql database pointer
EDPersistenceDatabaseConnection open called when already open
Unable to finalize statements
configureSQLConnection called on a closed connection
and64
error creating user function and64
PRAGMA foreign_keys = ON;
error enabling foreign key support
error setting busy timeout
Transaction error set despite not needing/attempting to take a transaction
commit
 (due to nested block failure)
rollback
SELECT value FROM properties WHERE key = :key
-[EDPersistenceDatabaseConnection handleSQLResult:message:]
PRAGMA database_list
Getting attached databases
SELECT 1 FROM %@.sqlite_master WHERE name = ? AND type = 'table'
SELECT 1 FROM sqlite_master WHERE name = ? AND type = 'table'
Checking for existence of table
PRAGMA %@.table_info(%@)
PRAGMA table_info(%@)
Fetching column type
attaching %@
Attaching database when not open
ATTACH DATABASE %@ AS %@
Detaching database when not open
DETACH DATABASE %@
detaching %@
-[EDPersistenceDatabaseConnectionPool init]
EDPersistenceDatabaseConnectionPool.m
maxConcurrentBackgroundReaders > 0
No connection wrapper found
Protected Index Journals
-wal
-shm
%@ number: %lu, referenceCount: %lu
EDPersistenceDatabaseJournal.m
reference count should be non-zero
com.apple.email.persistenceDatabaseJournalManager.checkExistingQueue
com.apple.email.persistenceDatabaseJournalManager.deleteQueue
_currentJournal exists, but has no reference count
@"EDPersistenceDatabaseJournal"8@?0
properties
EDPersistenceDatabaseSchema.m
+[EDPersistenceDatabaseSchema test_resetSchema]
v24@?0@"NSMutableArray"8@"NSMutableArray"16
Unable to resolve association: %@
Unable to resolve foreign key constraint: %@
absoluteString
total_count
unread_count
deleted_count
%@ %@ -> %@
%@(%@)
Unable to initialize Hook Registry. Found no types for selector: %@
EDPersistenceHookRegistry.m
[hookResponder respondsToSelector:requiredMethod]
EDPropertyMapperLookupKeySelectIndex
com.apple.MailPersonaStorage
B24@?0r*8@"NSObject<OS_xpc_object>"16
quota_event
submitted_event
raw_data
group.com.apple.suggestions.mail-intelligence
mailIntelligencePersistentBits
com.apple.email.EDPETInteractionEventLog.workQueue
USER-ID
interaction_log,at=%@,v=%ld.pblog.archived
interaction_log,at=%@,v=%ld.pblog.lzma
EDPETInteractionEventLog.m
directory.isFileURL
interaction_log.pblog
v44@?0i8@"NSData"12r*20Q28^B36
Can't map eventName string to enum: %@
@"NSNumber"8@?0
Fwd: 
dropped_events_count
EDPopulateSendersTableMigrationStep
@"NSArray"16@?0@"NSArray"8
v32@?0@"CNContact"8@"NSArray"16^B24
v32@?0@"ECEmailAddress"8@"NSNumber"16^B24
v32@?0@"ECEmailAddress"8@"NSArray"16^B24
@"NSString"16@?0@"ECEmailAddress"8
@"NSNumber"16@?0@"ECEmailAddress"8
v32@?0@8@"NSArray"16^B24
com.apple.email.EDPrecomputedThreadQueryHandler.changeScheduler
com.apple.email.EDPrecomputedThreadQueryHandler.backgroundWorkScheduler
Precomputed Threads
v16@?0@"EFCancelationToken"8
EDPrecomputedThreadQueryHandler.m
-[EDPrecomputedThreadQueryHandler test_tearDown]
v32@?0@"NSArray"8^Q16^B24
B16@?0@"_EDThreadPositionChangeSet"8
 after %@
@"NSString"8@?0
all updates were acknowledged
v32@?0@"EMThreadObjectID"8@"NSMutableOrderedSet"16^B24
B16@?0@"EMThreadObjectID"8
conversation flags change
messageID change
summary change
@"NSString"16@?0@"EMThreadObjectID"8
@"NSString"16@?0@"NSOrderedSet"8
%@ -> %@
Add:
Move:
Delete:
Adding a thread based on position of a thread that was deleted
Moving a thread that was deleted
Moving a thread based on position of a thread that was deleted
+[EDProtectedDatabasePersistence protectedDatabaseName]
EDProtectedDatabasePersistence.m
+[EDProtectedDatabasePersistence journalDatabaseName]
com.apple.email.protectedDatabasePersistence.reconciliationQueue
Unable to attach protected database
Unable to detach protected database
Initializing journal database
Unable to attach journal database
Unable to detach journal database
PRAGMA %@.journal_mode = WAL;
SELECT name FROM %@.sqlite_sequence
%@.sqlite_sequence
SELECT max(%@) FROM %@
Finding max %@
on-demand reconciliation
reconciliation
Attaching journal for merging
Upgrading journal for merging
Reconciling protected data
@"<EFSQLExpressable>"16@?0@"EFSQLColumnSchema"8
We must have at least one join constraint
Selecting ROWIDs to merge
INSERT OR IGNORE INTO %@ SELECT * FROM %@ WHERE %@
Unable to insert new rows into protected database for table %@
Committing merge batch transaction
Unable to merge journal for table %@
Committing update batch transaction
Unable to delete rows from journal for table %@
 UNION 
SELECT DISTINCT %@ FROM %@
 WHERE 
v24@?0@"EFSQLColumnSchema"8^B16
SELECT %1$@ FROM %2$@ WHERE %1$@ NOT IN (%3$@)
Merge handler already registered for table
-[EDProtectedDatabasePersistence supportsJournaling]
-[EDProtectedDatabasePersistence protectedDataAvailable]
com.apple.emaildaemon.protecteddatabasepersistence.cleanup
EDQueryCreator.m
The query type isn't allowed.
com.apple.mail.remindMe
display-date
message-id
EDReadLaterCloudStorage.m
dictionary
EDReadLaterPersistence.m
Expect a non-nil date
Resetting display date after updating read later
EDRemindMeNotificationControllerNextAlarmDate
Remind Me
com.apple.EmailDaemon.EDRemindMeNotificationController.messageScheduler
EDRemindMeNotificationController.alarm
v28@?0@"EFXPCAlarm"8@"NSDate"16B24
EDRemindMeNotificationController.m
-[EDRemindMeNotificationController test_waitForUpdates]
-[EDRemindMeNotificationController test_tearDown]
v16@?0@"NSHashTable"8
EDRemoteClient.m
-[EDRemoteClient test_tearDown]
RemoteContentURLCache
EDRemoteContentCacheConfiguration
EDRemoteContentManager
com.apple.email.EDRemoteContentManager.backgroundWorkScheduler
v16@?0@?<v@?q>8
 and pruning
com.apple.mail.RemoteContent.SyntheticRequestBatch
batchSize
batchDuration
isUnconditional
didComplete
successfulCount
percentSuccessful
failedCount
percentFailed
canceledCount
percentCanceled
deferredCount
percentDeferred
com.apple.mail.remoteContentManager.singleURLRequest
dataSize
B32@?0@"NSURLSessionDataTask"8@"NSNumber"16^B24
com.apple.email.EDRemoteContentManager.unconditionalRequestScheduler
com.apple.email.EDRemoteContentManager.requestScheduler
wrong mailbox type: %ld
message is too old: %@
B32@?0@"NSURL"8Q16^B24
http
https
B16@?0@"NSURL"8
com.apple.mail.remoteContentManager.parseVerification
hadMismatches
extraCount
missedCount
com.apple.mail.remoteContentManager.addRemoteContentLinks
remoteContentLinks
newRemoteContentLinks
requiredParsing
v16@?0@"BPSCompletion"8
v16@?0@"BMStoreEvent"8
EDRemoteContentManager.m
-[EDRemoteContentManager test_tearDown]
@"NSString"16@?0@"NSURL"8
double EFARC4RandomDoubleInRange(double, double)
EFMathUtilities.h
max must not be less than min
additional_remote_content_links
EDRemoteContentPersistence
com.apple.email.EDRemoteContentPersistence.contentProtectionQueue
com.apple.email.EDRemoteContentPersistence.analyticsScheduler
com.apple.mail.remoteContentPersistence.databaseState
totalCount
requestedCount
percentRequested
unrequestedCount
percentUnrequested
protectedCount
percentProtected
hasProtectedLinks
com.apple.mail.remoteContentPersistence.databasePruning
beforeCount
prunedCount
refilledCount
didRefill
INSERT OR IGNORE INTO %@ SELECT * FROM %@ ORDER BY ROWID ASC LIMIT %lu
Refilling remote_content_links from additional table
Failed to get remote content url info
EDRemoteContentPersistence.m
-[EDRemoteContentPersistence test_tearDown]
CREATE TABLE IF NOT EXISTS messages_new (ROWID INTEGER PRIMARY KEY AUTOINCREMENT,message_id INTEGER NOT NULL DEFAULT 0,remote_id INTEGER,document_id TEXT COLLATE BINARY,sender INTEGER,subject_prefix TEXT COLLATE BINARY,subject INTEGER NOT NULL,summary INTEGER,date_sent INTEGER,date_received INTEGER,mailbox INTEGER NOT NULL,remote_mailbox INTEGER,flags INTEGER NOT NULL DEFAULT 0,read INTEGER NOT NULL DEFAULT 0,flagged INTEGER NOT NULL DEFAULT 0,deleted INTEGER NOT NULL DEFAULT 0,size INTEGER NOT NULL DEFAULT 0,conversation_id INTEGER NOT NULL DEFAULT 0,date_last_viewed INTEGER,original_mailbox INTEGER,visible INTEGER,sender_vip INTEGER,encoding INTEGER,content_type INTEGER,sequence_identifier INTEGER DEFAULT 0,external_id TEXT COLLATE BINARY,unique_id INTEGER,content_index_transaction_id INTEGER,list_id_hash INTEGER,journaled INTEGER,flag_color INTEGER);
ALTER TABLE messages RENAME TO messages_old
messages_message_id_mailbox_index
CREATE INDEX %@ ON messages_new(message_id, mailbox);
messages_document_id_index
CREATE INDEX %@ ON messages_new(document_id);
messages_sender_index
CREATE INDEX %@ ON messages_new(sender);
messages_subject_index
CREATE INDEX %@ ON messages_new(subject);
messages_date_received_index
CREATE INDEX %@ ON messages_new(date_received);
messages_mailbox_date_received_index
CREATE INDEX %@ ON messages_new(mailbox, date_received);
messages_mailbox_conversation_id_date_received_index
CREATE INDEX %@ ON messages_new(mailbox, conversation_id, date_received);
messages_remote_mailbox_remote_id_index
CREATE INDEX %@ ON messages_new(remote_mailbox, remote_id);
messages_read_index
CREATE INDEX %@ ON messages_new(read);
messages_flagged_index
CREATE INDEX %@ ON messages_new(flagged);
messages_deleted_date_received_index
CREATE INDEX %@ ON messages_new(deleted, date_received);
messages_conversation_id_mailbox_read_date_received_index
CREATE INDEX %@ ON messages_new(conversation_id, mailbox, read, date_received);
messages_conversation_id_mailbox_flagged_index
CREATE INDEX %@ ON messages_new(conversation_id, mailbox, flagged);
messages_conversation_id_mailbox_deleted_index
CREATE INDEX %@ ON messages_new(conversation_id, mailbox, deleted);
messages_conversation_id_mailbox_sender_date_received_index
CREATE INDEX %@ ON messages_new(conversation_id, mailbox, sender, date_received);
messages_conversation_id_mailbox_flags_index
CREATE INDEX %@ ON messages_new(conversation_id, mailbox, flags);
messages_content_index_transaction_id_deleted_date_received_rowid_index
CREATE INDEX %@ ON messages_new(content_index_transaction_id, deleted, date_received DESC, ROWID);
messages_mailbox_remote_id_sequence_identifier_index
CREATE INDEX %@ ON messages_new(mailbox, remote_id, sequence_identifier);
messages_mailbox_content_index_transaction_id_flags_date_received_index
CREATE INDEX %@ ON messages_new(mailbox, content_index_transaction_id, flags, date_received ASC);
messages_list_id_hash_index
CREATE INDEX %@ ON messages_new(list_id_hash);
messages_date_last_viewed_index
CREATE INDEX %@ ON messages_new(date_last_viewed);
messages_summary_index
CREATE INDEX %@ ON messages_new(summary);
messages_mailbox_visible_date_received_rowid_index
CREATE INDEX %@ ON messages_new(mailbox, visible, date_received DESC, ROWID DESC);
messages_mailbox_deleted_journaled_sender_vip_flags_conversation_id_date_sent_message_id_date_received_rowid_index
CREATE INDEX %@ ON messages_new(mailbox, deleted, journaled, sender_vip, flags, conversation_id, date_sent, message_id, date_received DESC, ROWID DESC);
messages_mailbox_conversation_id_flag_color_date_received_journaled_index
CREATE INDEX %@ ON messages_new(mailbox, conversation_id, flag_color, date_received, journaled);
messages_journaled_conversation_id_date_received_index
CREATE INDEX %@ ON messages_new(journaled, conversation_id, date_received);
messages_message_id_deleted_journaled_read_mailbox_index
CREATE INDEX %@ ON messages_new(message_id, deleted, journaled, read, mailbox);
messages_sender_vip_deleted_journaled_read_message_id_index
CREATE INDEX %@ ON messages_new(sender_vip, deleted, journaled, read, message_id) WHERE (sender_vip = 1 AND journaled = 0 AND deleted = 0 AND read = 0);
messages_journaled_deleted_date_received_index
CREATE INDEX %@ ON messages_new(journaled, deleted, date_received) WHERE (journaled = 1 AND deleted = 0);
messages_deleted_mailbox_date_received_index
CREATE INDEX %@ ON messages_new(deleted, mailbox, date_received);
DROP INDEX IF EXISTS %@;
sender_vip
visible
journaled
flag_color
sequence_identifier
content_index_transaction_id
INSERT INTO messages_new (%@) SELECT %@ FROM messages_old
messages_old
ALTER TABLE messages_new RENAME TO messages
CREATE TABLE IF NOT EXISTS threads (ROWID INTEGER PRIMARY KEY AUTOINCREMENT,scope INTEGER NOT NULL REFERENCES thread_scopes(ROWID) ON DELETE CASCADE,conversation INTEGER NOT NULL REFERENCES conversations(conversation_id) ON DELETE CASCADE,newest_read_message INTEGER REFERENCES messages(ROWID) ON DELETE SET NULL,display_message INTEGER REFERENCES messages(ROWID) ON DELETE SET NULL,date INTEGER NOT NULL,read INTEGER NOT NULL DEFAULT 0,deleted INTEGER NOT NULL DEFAULT 0,flagged INTEGER NOT NULL DEFAULT 0,has_red_flag INTEGER NOT NULL DEFAULT 0,has_orange_flag INTEGER NOT NULL DEFAULT 0,has_yellow_flag INTEGER NOT NULL DEFAULT 0,has_green_flag INTEGER NOT NULL DEFAULT 0,has_blue_flag INTEGER NOT NULL DEFAULT 0,has_purple_flag INTEGER NOT NULL DEFAULT 0,has_gray_flag INTEGER NOT NULL DEFAULT 0,draft INTEGER NOT NULL DEFAULT 0,replied INTEGER NOT NULL DEFAULT 0,forwarded INTEGER NOT NULL DEFAULT 0,redirected INTEGER NOT NULL DEFAULT 0,junk_level_set_by_user INTEGER NOT NULL DEFAULT 0,junk_level INTEGER NOT NULL DEFAULT 0,has_unflagged INTEGER NOT NULL DEFAULT 0,has_attachments INTEGER NOT NULL DEFAULT 0,count INTEGER NOT NULL,journaled INTEGER NOT NULL DEFAULT 0,UNIQUE(scope, conversation) ON CONFLICT ABORT);
threads_scope_date_conversation_index
CREATE INDEX %@ ON threads(scope, date, conversation);
threads_journaled_scope_date_conversation_index
CREATE INDEX %@ ON threads(journaled, scope, date, conversation);
threads_journaled_date_scope_conversation_index
CREATE INDEX IF NOT EXISTS threads_journaled_date_scope_conversation_index ON threads(journaled, date, scope, conversation) WHERE journaled = 1;
DROP TABLE IF EXISTS %@
DELETE FROM %@
DROP INDEX IF EXISTS thread_categories_type_active_user_override_thread_index;
interaction_log
thread_categories
categorization_sender_rules
categorization_conversation_rules
categorization_group_rules
category_active_types
times_viewed
read_later_date
INSERT INTO message_references (message, reference, is_originator) SELECT message_id, reference, IFNULL(is_originator, 0) FROM threads
DROP TABLE IF EXISTS threads
rich_links
title
message_rich_links
rich_link
EDRichLinkPersistence
Unable to insert rich link into rich_links table: %@
Unable to insert rich link with rowID %@ into message_rich_links table
@"EDRichLinkData"16@?0@"NSNumber"8
RichLinkData
mailbox.outbox
com.apple.email.spotlightVerification
LibraryMessageRichLinkDataBecameAvailableNotification
com.apple.email.searchableIndex.%@.%@
state
indexingQueue
dataSource
addIndexItems
batch
DisableSpotlightVerification
==== Searchable Index State ====
  transaction:                    %lld
  active:                         %@ (rc=%lld)
  persistenceAvailable:           %@
  client state fetched:           %@
  coalesce timer fired:           %@
  scheduled processing:           %@
  needs refresh:                  %@
  scheduled refresh:              %@
  needs verification:             %@
  scheduled verification:         %@
  indexing batch size:            %lu
  data source batch size:         %lu
  maximum batch size:             %lu
  data source indexing permitted: %@
  has available indexing budget:  %@
  budgeted time remaining:        %.4fs
  budgeted item count remaining:  %ld
  pending items:                  %lu (%p)
  pre-processing items:           %lu (%p)
  pending removals:               %lu (%p)
  pending domain removals:        %lu (%p)
Indexed Empty Subjects:
Index verification failed for %@ transactions: %@
v32@?0Q8@"EFFuture"16@"NSSet"24
SpotlightState.json
v16@?0@"EDSearchableIndexClientState"8
 (new)
Invalidated items greater than transaction: %@
v24@?0@"NSData"8@"NSError"16
resumeCount
pending
preprocessingItemCount
persistenceAvailable
suspending
already suspended
still resumed
suspend
resuming
already resumed
still suspended
resume
B16@?0@"EDSearchableIndexPendingItem"8
com.apple.email.searchableIndex.dataSourceWorkBlock
@"EDSearchableIndexItem"16@?0@"NSString"8
completion != nil
com.apple.mail.searchableIndex.dataSourceCancelation
Q16@?0Q8
com.apple.email.searchableIndex.indexingBatch
Start Indexing Batch
preprocessing
v28@?0@"EDSearchableIndexClientState"8@"EDSearchableIndexUpdates"16B24
@"<EFFuture>"16@?0@8
@"<EFFuture>"16@?0@"NSError"8
countOfItemsIndexed
elapsedTime
itemsPerSecond
Finished Indexing Batch
@16@?0@"<EDIndexableItem>"8
[%@]
@"CSSearchableItem"16@?0@"NSNull"8
@"EFFuture"16@?0@"<EDIndexableItem>"8
diagnose:com.apple.mobilemail
@"NSNumber"16@?0@"NSDictionary"8
identifier
Spotlight requested that Mail reindex %@ items: %@
Spotlight requested that Mail reindex all items.
B32@?0@"<EDIndexableItem>"8Q16^B24
q24@?0@8@16
@"NSString"16@?0@"<EDIndexableItem>"8
B32@?0@"EDSearchableIndexPendingItem"8Q16^B24
@16@?0@"CSSearchableItem"8
v16@?0@"<EMSearchableIndexQueryBuilder>"8
SnippetHighlighting
v32@?0@"CSSearchableItem"8Q16^B24
No values found.
@"NSArray"8@?0
-[EDSearchableIndex indexMessages:includeBody:indexingType:]
EDSearchableIndex.m
-[EDSearchableIndex markMessagesAsPrinted:]
MonitoredActivityReasonCompacting
MonitoredActivityReasonMoving
MonitoredActivityReasonArchiving
MonitoredActivityReasonDeleting
MonitoredActivityReasonJunking
-[EDSearchableIndex test_tearDown]
<%@: %p> %@ %@
v32@?0@"<NSCopying>"8@"NSSet"16^B24
B32@?0@"NSSet"8@"NSSet"16@"NSSet"24
EDSearchableIndexAttachmentItem.m
Attempting to set unexpected indexing type on EDSearchableIndexAttachmentItem
IndexingBudgetPeriodInSeconds
IndexingBudgetInSeconds
IndexingBudgetNumberOfItemsToIndexOnResume
Budget Period:%lfs (%.1fh) Time:%fs (min:%.1fm) numberOfItemsToIndexOnResume:%ld
com_apple_mail_transaction
yyyy-MM-dd HH:mm:ssZ
<%@: %p> version=%@ date=%@ transaction=%lld
transaction
build
Encrypted
com_apple_mail_addresses
com_apple_mail_links
com_apple_mail_phone_numbers
com_apple_mail_calendar_events
com_apple_mail_tracking_numbers
com_apple_mail_flight_numbers
Message does not have a valid identifier. Please consider using initWithIdentifier:message:bodyData: if you need something special.
-[EDSearchableIndexItem addAttachmentAttributesToAttributeSet:]
EDSearchableIndexItem.m
-[EDSearchableIndexItem fetchIndexableAttachments]
@"CSPerson"16@?0@"NSString"8
v24@?0@"NSArray"8@"NSArray"16
IndexDecryptedMessages
mailboxtype
<null>
hasCompleteContent
hasHeaders
DetectData
TrackingNumber
FlightInformation
-[EDSearchableIndexItem preprocess]
EDSearchableIndexItem has invalid indexingType = EDIndexableItemIndexingTypeAttachment
EDSearchableIndexItem has invalid indexingType = EDIndexableItemIndexingTypeRichLinks
-[EDSearchableIndexManager test_tearDown]
-[EDSearchableIndexManager index]
EDSearchableIndexManager.m
-[EDSearchableIndexManager persistence]
-[EDSearchableIndexManager scheduler]
Done!
@"NSString"16@?0@"<EDPersistedMessage>"8
EDSearchableIndexPendingItem.m
Additional items added to a pending item must have the same identifier
q24@?0@"<EDIndexableItem>"8@"<EDIndexableItem>"16
B16@?0@"<EDIndexableItem>"8
searchable_rebuild
searchable_message_tombstones
searchable_attachments
searchable_rich_links
searchable_data_detection_results
transaction_id
data_detection_result
com.apple.mail.searchableIndex.lastProcessedAttachmentIDKey
message_body_indexed
reindex_type
attachment_id
rich_link_id
-[EDSearchableIndexPersistence messagesWhere:sortedBy:limit:]
EDSearchableIndexPersistence.m
-[EDSearchableIndexPersistence searchableIndexItemsFromMessages:type:]
-[EDSearchableIndexPersistence attachmentItemMetadataForAttachmentID:messagePersistentID:name:mailboxID:result:]
-[EDSearchableIndexPersistence verificationDataSamplesFromMessageIDTransactionIDDictionary:]
-[EDSearchableIndexPersistence additionalFilterClause]
Failed to query searchable_rebuild table to establish if it still has data
Q8@?0
v32@?0@"EDSearchableIndexRichLinkItem"8Q16^B24
((messages.searchable_message IS NULL OR messages.ROWID IN (SELECT message_id FROM searchable_messages WHERE searchable_messages.transaction_id = %ld)) AND likely(messages.ROWID NOT IN (%@)))
searchable_rebuild.rowid
((messages.ROWID IN (SELECT message_id FROM searchable_messages WHERE (searchable_messages.reindex_type = 1 OR searchable_messages.reindex_type = 2) AND searchable_messages.reindex_type != 0)) AND likely(messages.ROWID NOT IN (%@)))
messages.global_message_id IN (SELECT data_detection_results.global_message_id FROM data_detection_results LEFT OUTER JOIN searchable_data_detection_results ON data_detection_results.ROWID = searchable_data_detection_results.data_detection_result WHERE searchable_data_detection_results.data_detection_result IS NULL) AND likely(messages.ROWID NOT IN (%@))
%@ AND %@
SELECT transaction_id, reindex_type FROM searchable_messages WHERE message_id = %@
Searching for reindex type
UPDATE OR IGNORE searchable_messages SET transaction_id = %lld WHERE message_id IN (%@)
UPDATE OR IGNORE searchable_messages SET reindex_type = %lld WHERE transaction_id != %lld AND message_id IN (%@)
Does not support re-indexing of attachment types. Will need to be implemented if needed.
Does not support re-indexing of rich link types. Will need to be implemented if needed.
Assigning the re-indexing type for a set of identifiers
SELECT attachment_id FROM searchable_attachments WHERE message_id IN (%@)
searching for removed attachment identifiers
Purging %@
Clearing searchable_message column
INSERT OR IGNORE INTO searchable_rebuild (message_id) SELECT rowid FROM messages WHERE searchable_message IS NULL ORDER BY date_received DESC
could not populate searchable_rebuild table
DELETE FROM %@ WHERE transaction_id > %llu
Invalidating %@
UPDATE searchable_message_tombstones SET transaction_id = NULL WHERE transaction_id > %lld
Invalidating searchable_message_tombstones
SELECT rowid FROM %@ WHERE transaction_id IN (%@)
Failed to get messages for transaction ids in %@
DELETE FROM %@ WHERE transaction_id IN (%@)
Failed to delete messages for items in %@
DELETE FROM searchable_attachments WHERE message_id = %@
Removing message identifier from searchable_attachments
SELECT DISTINCT transaction_id FROM searchable_messages
Searching for distinct transaction identifiers
Adding to searchable_messages index
INSERT OR REPLACE INTO searchable_messages (message_id, message, transaction_id, reindex_type, message_body_indexed) VALUES (?, ?, %lld, %ld, ?)
@"NSArray"24@?0@"NSNumber"8@"NSNumber"16
Deleting from searchable_rebuild table
INSERT OR REPLACE INTO searchable_messages (message_id, message, transaction_id, reindex_type, message_body_indexed) VALUES (?, ?, %lld, %ld, COALESCE((SELECT message_body_indexed FROM searchable_messages WHERE message_id = ?), ?))
INSERT OR REPLACE INTO searchable_message_tombstones (type, identifier) VALUES (%lld, ?)
Adding to searchable_message_tombstones index
DELETE FROM searchable_message_tombstones WHERE type = %lld AND identifier IN (%@)
UPDATE searchable_message_tombstones SET transaction_id = %lld WHERE type = %lld AND identifier IN (%@)
Updating or deleting searchable_message_tombstones
DELETE FROM searchable_message_tombstones WHERE transaction_id < %lld
Purging searchable_message_tombstones
SELECT identifier FROM searchable_message_tombstones WHERE transaction_id IS NULL AND type = %lld
searching for tombstone identifiers
DELETE FROM searchable_messages WHERE message_id IN (%@)
Removing items from searchable_messages
DELETE FROM searchable_attachments WHERE attachment_id IN (%@)
Removing items from searchable_attachments
SELECT message_id FROM searchable_messages WHERE message is NULL
searching for removed identifiers
SELECT message_id, transaction_id FROM searchable_messages WHERE reindex_type = 0 AND message IS NOT NULL AND message_id > %lu LIMIT %lu
Searching for random sample of messages to verify for spotlight integrity
SELECT ma.ROWID, m.ROWID, ma.mime_part_number, ma.name, m.mailbox FROM messages AS m LEFT OUTER JOIN message_attachments AS ma ON (ma.global_message_id = m.global_message_id) LEFT OUTER JOIN searchable_attachments AS s ON (ma.ROWID = s.attachment_id) WHERE ma.ROWID > %lld AND s.attachment_id IS NULL AND ma.attachment IS NOT NULL ORDER BY m.ROWID
Searching for attachments to index
SELECT ma.ROWID, m.ROWID, ma.mime_part_number, ma.name, m.mailbox FROM messages AS m LEFT OUTER JOIN message_attachments AS ma ON (ma.global_message_id = m.global_message_id) LEFT OUTER JOIN searchable_attachments AS s ON (ma.ROWID = s.attachment_id) WHERE m.ROWID = %d AND s.attachment_id IS NULL AND ma.attachment IS NOT NULL
Searching for attachment data for message identifier
v20@?0@"EDSearchableIndexAttachmentItemMetadatum"8B16
SELECT attachment FROM %@ WHERE message IN (%@)
get attachment for messageid
DELETE FROM %@ WHERE message IN (%@)
SELECT attachment FROM %@ WHERE attachment IN (%@)
DELETE FROM %@ WHERE ROWID IN (%@)
SELECT attachment_id FROM searchable_attachments WHERE attachment is NULL
SELECT attachment_id FROM searchable_attachments WHERE transaction_id in (%@)
SELECT m.ROWID, mr.rich_link, m.mailbox, r.title, r.url FROM message_rich_links AS mr LEFT OUTER JOIN messages AS m ON (m.global_message_id = mr.global_message_id) LEFT OUTER JOIN rich_links AS r ON (r.ROWID = mr.rich_link) LEFT OUTER JOIN searchable_rich_links AS s ON (m.ROWID = s.message_id) WHERE s.rich_link_id IS NULL ORDER BY m.ROWID
%@_%@
Searching for rich links requiring indexing
v20@?0@"EDSearchableIndexRichLinkItemMetadatum"8B16
SELECT m.global_message_id, mr.rich_link FROM %@ AS mr  LEFT OUTER JOIN messages AS m ON (m.global_message_id = mr.global_message_id) WHERE m.ROWID IN (%@)
Could not find rich links to remove for messageIDs
DELETE FROM %@ WHERE global_message_id IN (%@)
Removing unexpected rich links from message_rich_links table
SELECT rich_link FROM %@ WHERE rich_link IN (%@)
Removing unexpected rich links from rich_links table
v16@?0@"<EDSearchableIndexRichLinkItemMetadatumBuilder>"8
-[EDSearchableIndexPersistence allMailboxIdentifiersForMessage:result:]
INSERT OR REPLACE INTO searchable_attachments (attachment_id, attachment, message_id, transaction_id) VALUES (?, ?, ?, %lld)
Adding to searchable_attachments
INSERT OR REPLACE INTO searchable_rich_links (rich_link, message_id, transaction_id) VALUES (?, ?, %lld)
Adding to searchable_rich_links
Storing searchable data detection results
_kMDItemRichLinkID
kMDItemRichLinkTitle
_kMDItemRichLinkURL
com.apple.email.searchableIndex.scheduler
activityType
deferred
budgeted
maintenance
com.apple.email.searchableIndex.scheduler.budgeted
com.apple.email.searchableIndex.scheduler.maintenance
.indexingStateQueue
EDSearchableIndexScheduler.m
Attempting to find a criteria builder block indexing for an unsupported activity type: %@
Attempting to register unsupported activity type: %@
Enabled indexing.
Stopped indexing.
v32@?0@"NSString"8@"NSObject<OS_xpc_object>"16^B24
Indexing budget exhausted.
budgetedTimeRemaining
budgetedItemCountRemaining
maintenanceIndexingTime
extraIndexingTime
@"NSString"16@?0@"EDSearchableIndexVerificationData"8
%@ = '%@'
<%@: %p> %lu added items, %lu removed items, %lu removed domains
kEDSearchableIndexVerifierErrorDomain
kDefaultsKeyLastVerifiedMessageID
v32@?0@"NSNumber"8@"EDSearchableIndexVerificationData"16^B24
EDSearchableIndexPostFakeCorruptSearchableIndexErrors
FAKED: %@
v32@?0@"NSNumber"8@"NSString"16^B24
row:%@ cid:%@
Searchable Index Verification failed
Searchable Index verification found missing rowids: %@
v24@?0@"NSString"8@"NSArray"16
%@=*
DROP INDEX IF EXISTS searchable_messages_message_id_reindex_type_index;
Unable to drop index searchable_messages_message_id_reindex_type_index index to searchable_messages
Unable to add index searchable_messages_reindex_type_message_id_index to searchable_messages
EDSenderPersistence.m
-[EDSenderPersistence test_tearDown]
maxDate
@"NSString"16@?0@"<ECEmailAddressConvertible>"8
<%@: %p>
v32@?0@"NSNumber"8@"NSMutableArray"16^B24
Sender must have valid database ID
@"NSNumber"16@?0@"<ECEmailAddressConvertible>"8
@16@?0@"NSArray"8
v32@?0@"<ECEmailAddressConvertible>"8@"NSNumber"16^B24
@"<ECEmailAddressConvertible>"16@?0@"NSNumber"8
@"<ECEmailAddressConvertible>"8@?0
Blocking
Unblocking
address_id
q24@?0@"<ECEmailAddressConvertible>"8@"<ECEmailAddressConvertible>"16
v32@?0@"<ECEmailAddressConvertible>"8@"NSArray"16^B24
SELECT count(*) AS associations FROM sender_addresses WHERE sender = :duplicate_sender
:duplicate_sender
associations
sentTo
blocked
EDSenderRepository.persistenceScheduler
send_later
com.apple.email.EDSendLaterPersistence.writeQueue
Unable to insert send_later message with ID: %lld into send_later table
EDSendLaterUpdateController.alarm
EDSendLaterUpdateControllerNextAlarmDate
com.apple.EmailDaemon.SendLaterUpdateController.messageScheduler
v16@?0@"EMMessageDeliveryResult"8
EDServer.m
-[EDServer test_tearDown]
com.apple.private.email
com.apple.mobilemail.mailservices
server_messages
server_labels
server_message
-[EDServerMessagePersistenceFactory init]
EDServerMessagePersistence.m
Couldn't get mailboxID for URL %@
EDServerMessagePersistenceFactory couldn't map mailboxURL
mailboxID != EMDatabaseIDUndefined
-[EDServerMessagePersistence init]
SELECT count() FROM server_messages WHERE (mailbox = %lld)
Executing count query
SELECT count() FROM server_messages WHERE (mailbox = %lld) AND (read = 0)
Executing unread count query
SELECT count() FROM server_messages WHERE (mailbox = %lld) AND (deleted = 0)
SELECT MAX(remote_id) FROM server_messages WHERE (mailbox = %lld)
Executing max uid query
SELECT MIN(remote_id) FROM server_messages WHERE (mailbox = %lld)
Executing min uid query
 LIMIT %llu
@"NSIndexSet"24@?0@"NSIndexSet"8Q16
UPDATE server_messages SET remote_id = (- remote_id) WHERE (mailbox = %lld)
Failed to clear UIDs on server_message in mailbox (%lld).
SELECT message AS message_row_id FROM server_messages WHERE mailbox = %lld AND remote_id < 0
message_row_id
DELETE FROM server_messages WHERE server_messages.mailbox = %lld AND server_messages.remote_id < 0
SELECT server_messages.ROWID, server_messages.message, server_messages.mailbox, server_messages.read, server_messages.deleted, server_messages.replied, server_messages.flagged, server_messages.draft, server_messages.forwarded, server_messages.redirected, server_messages.junk_level_set_by_user, server_messages.junk_level, server_messages.flag_color, server_messages.remote_id, messages.message_id AS message_id_header, messages.ROWID AS message_row_id FROM messages INNER JOIN server_messages ON messages.ROWID = server_messages.message WHERE (server_messages.mailbox = %lld AND messages.message_id IN (%@) AND server_messages.remote_id < 0)
message_id_header
UPDATE server_messages SET remote_id = :uid WHERE ROWID = :rowid
UPDATE messages SET remote_id = :uid WHERE ROWID = :rowid
:rowid
:uid
ROWID, message, mailbox, read, deleted, replied, flagged, draft, forwarded, redirected, junk_level_set_by_user, junk_level, flag_color, remote_id
 DESC
SELECT %@ FROM server_messages WHERE (mailbox = %lld) AND (%@) ORDER BY remote_id%@%@
v16@?0@"<ECMessageFlagsBuilder>"8
SELECT label FROM server_labels WHERE server_message = ?
Fetching server labels
INSERT INTO server_messages (message, mailbox, read, deleted, replied, flagged, draft, forwarded, redirected, junk_level_set_by_user, junk_level, flag_color, remote_id) VALUES (:message, :mailbox, :read, :deleted, :replied, :flagged, :draft, :forwarded, :redirected, :junk_level_set_by_user, :junk_level, :flag_color, :remote_id)
:remote_id
:read
:deleted
:replied
:flagged
:draft
:forwarded
:redirected
:junk_level_set_by_user
:junk_level
:flag_color
Adding server message
UPDATE server_messages SET message = %lld WHERE (mailbox = %lld) AND (remote_id = %@)
updating server message
DELETE FROM server_messages WHERE (mailbox = %lld) AND (remote_id in (%@))
removing server messages
DELETE FROM server_messages WHERE mailbox = %llu
removing all server messages
read = %d
deleted = %d
replied = %d
flagged = %d
draft = %d
forwarded = %d
redirected = %d
junk_level_set_by_user = %d
junk_level = %d
flag_color = %d
UPDATE server_messages SET %@ WHERE (mailbox = %lld) AND (remote_id in (%@))
Setting flags
UPDATE server_messages SET 
read = 1
read = 0
, deleted = 1
, deleted = 0
, replied = 1
, replied = 0
, flagged = 1
, flagged = 0
, draft = 1
, draft = 0
, forwarded = 1
, forwarded = 0
, redirected = 1
, redirected = 0
, junk_level = %d
, flag_color = %d
 WHERE (mailbox = %lld) AND (remote_id = %@)
@"NSString"16@?0@"EFPair"8
(? <= remote_id AND remote_id < ?)
 OR 
SELECT remote_id FROM server_messages WHERE mailbox = ? AND (%@) ORDER BY remote_id
SELECT ROWID FROM server_messages WHERE remote_id = ? AND mailbox = ? LIMIT 1
Getting server message ID
INSERT OR IGNORE INTO server_labels (server_message, label) VALUES (?, ?)
Adding server label
DELETE FROM server_labels WHERE server_message = ? AND label = ?
Removing server label
ef_quotedSQLEscapedString
v32@?0{_NSRange=QQ}8^B24
(remote_id BETWEEN %lu AND %lu)
(remote_id IN (
%llu:%llu
DROP TABLE searchable_attachments
Removing searchable_attachments table
INSERT INTO properties  (key, value) VALUES ("NeedToMigrateAttachments",1)
Setting need to upgrade property
Unable to create %@
Unable to delete table %@
Unable to insert messageID %@ into message_attachments table
Unable to insert attachment hash %@ into attachments table
@"NSString"16@?0@"SGMailIntelligenceSaliency"8
v40@?0@"NSString"8{_NSRange=QQ}16^B32
cloudKey
mergeType
customMergeBlock
EDSyncableSettings
EDSyncableSettings-Defaults
v36@?0@"NSString"8@"NSString"16B24@28
EDSyncableSettings.m
No merge block found for default %@
v36@?0B8@"NSString"12@"NSString"20@28
v32@?0@"NSString"8@"NSDictionary"16^B24
v16@?0@"NSMutableDictionary"8
v20@?0@8B16
v16@?0@"NSDictionary"8
device to cloud
cloud to device
table_metadata
table_name
largest_deleted_rowid
Updating largest_deleted_rowid for %@
Getting largest_deleted_rowid for %@
EDThreadMigrator-%@
v16@?0@"_EDThreadMigrationState"8
Stopping migration
Skipping delete finalization
Skipping finalization
deletion
migration
delete 
@"EDPersistenceForeignKeyPlaceholder"40@?0@"EFSQLTableSchema"8@"NSString"16@"NSString"24Q32
@"EDPersistenceForeignKeyPlaceholder"32@?0@"EFSQLTableSchema"8@"NSString"16@"NSString"24
@"EDPersistenceAssociationPlaceholder"32@?0@"EFSQLTableSchema"8@"NSString"16@"NSString"24
com.apple.EmailDaemon.EDThreadPersistence.consistencyCheckScheduler
com.apple.EmailDaemon.EDThreadPersistence.threadRecomputationScheduler
v32@?0@"NSNumber"8@"EMThreadScope"16^B24
EDThreadPersistence.m
-[EDThreadPersistence test_tearDown]
v24@?0@"EMThreadObjectID"8^B16
no senders
 and no recipients
no recipients
Failed to get thread with objectID: %@
Precomputed thread - no subject
Precomputed thread - no sender
no sender on change
@"EMMailbox"16@?0@"EMMailboxObjectID"8
@"NSNumber"16@?0@"EMThreadObjectID"8
B32@?0@"<NSCopying>"8Q16Q24
Precomputed thread (recoverable) - 
@"EMThreadScope"16@?0@"EMThreadObjectID"8
v16@?0@"_EDThreadPersistence_ThreadMessages"8
FollowUp
v40@?0@"NSNumber"8@"EMThreadScope"16@"EMMailboxScope"24^B32
Mailbox scope should have exactly one type
v32@?0@"EMThreadScope"8@"NSNumber"16^B24
Mailbox scope should have exactly one mailbox
Thread persistence doesn't support exclusion-based mailbox scopes
journaled 
v32@?0q8@"EMThreadObjectID"16@"NSArray"24
B24@?0@"NSPredicate"8@"EMMessage"16
B16@?0@"_EDWrappedMessage"8
Failed to find threads after sender buckets change
dateReceived
@"NSNumber"16@?0@"_EDWrappedMessage"8
-fake-message-id
Mailbox scope for pre-computed threads should never be for exclusion.
@"<EFSQLValueExpressable>"16@?0@"NSPredicate"8
@"_EDWrappedMessage"16@?0@"EMMessage"8
v32@?0@"EMThread"8@"NSArray"16^B24
B24@?0@"EDPersistenceDatabaseConnection"8@"EFSQLSelectStatement"16
No mailbox database ID for migrating thread scope
v32@?0q8@"NSDate"16Q24
Pre-computed thread scope should have exactly one mailbox or mailbox type
thread scope DB ID: %lld
conversation ID: %lld
@"NSString"16@?0@"_EDWrappedMessage"8
wrapped messages: {%@}(count: %u)
INSERT OR IGNORE INTO threads (  scope,   conversation,   newest_read_message,   display_message,   date,   display_date,   read_later_date,   read,   flagged,   has_red_flag,   has_orange_flag,   has_yellow_flag,   has_green_flag,   has_blue_flag,   has_purple_flag,   has_gray_flag,   draft,   replied,   forwarded,   redirected,   junk_level_set_by_user,   junk_level,   has_unflagged,   has_attachments,   count,   journaled ) VALUES (  :scope,   :conversation_id,   :newest_read_message,   :display_message,   :date,   :display_date,   :read_later_date,   :read,   :flagged,   :has_Red_flag,   :has_Orange_flag,   :has_Yellow_flag,   :has_Green_flag,   :has_Blue_flag,   :has_Purple_flag,   :has_Gray_flag,   :draft,   :replied,   :forwarded,   :redirected,   :junk_level_set_by_user,   :junk_level,   :has_unflagged,   :has_attachments,   :count,   :journaled );
INSERT OR REPLACE INTO threads (  scope,   conversation,   newest_read_message,   display_message,   date,   display_date,   read_later_date,   read,   flagged,   has_red_flag,   has_orange_flag,   has_yellow_flag,   has_green_flag,   has_blue_flag,   has_purple_flag,   has_gray_flag,   draft,   replied,   forwarded,   redirected,   junk_level_set_by_user,   junk_level,   has_unflagged,   has_attachments,   count,   journaled ) VALUES (  :scope,   :conversation_id,   :newest_read_message,   :display_message,   :date,   :display_date,   :read_later_date,   :read,   :flagged,   :has_Red_flag,   :has_Orange_flag,   :has_Yellow_flag,   :has_Green_flag,   :has_Blue_flag,   :has_Purple_flag,   :has_Gray_flag,   :draft,   :replied,   :forwarded,   :redirected,   :junk_level_set_by_user,   :junk_level,   :has_unflagged,   :has_attachments,   :count,   :journaled );
:scope
:newest_read_message
:display_message
:date
:display_date
:read_later_date
:has_Red_flag
:has_Orange_flag
:has_Yellow_flag
:has_Green_flag
:has_Blue_flag
:has_Purple_flag
:has_Gray_flag
:has_unflagged
:has_attachments
:count
:journaled
INSERT INTO threads (  scope,   conversation,   date,   display_date,   read_later_date,   count,   journaled,   has_unflagged,   has_attachments,   read,   flagged,   draft,   replied,   forwarded,   redirected,   junk_level_set_by_user,   junk_level,   has_red_flag,   has_orange_flag,   has_yellow_flag,   has_green_flag,   has_blue_flag,   has_purple_flag,   has_gray_flag ) VALUES (  :scope,   :conversation_id,   :date,   :display_date,   :read_later_date,   (SELECT count(DISTINCT ifnull(message_id, ROWID || '-fake-message-id')) FROM temp_thread_scope_message WHERE conversation_id = :conversation_id),   :journaled,   :has_unflagged,   :has_attachments,   :read,   :flagged,   :draft,   :replied,   :forwarded,   :redirected,   :junk_level_set_by_user,   :junk_level,   :has_Red_flag,   :has_Orange_flag,   :has_Yellow_flag,   :has_Green_flag,   :has_Blue_flag,   :has_Purple_flag,   :has_Gray_flag ) ON CONFLICT (scope, conversation) DO UPDATE SET   date = max(date, excluded.date),   display_date = max(display_date, excluded.display_date),   read_later_date = max(read_later_date, excluded.read_later_date),   count = excluded.count,   journaled = journaled OR excluded.journaled,   has_attachments = has_attachments OR excluded.has_attachments,   has_attachments = has_attachments OR excluded.has_attachments,   read = read AND excluded.read,   flagged = flagged OR excluded.flagged,   draft = draft OR excluded.draft,   replied = replied OR excluded.replied,   forwarded = forwarded OR excluded.forwarded,   redirected = redirected OR excluded.redirected,   junk_level_set_by_user = junk_level_set_by_user OR excluded.junk_level_set_by_user,   junk_level = min(junk_level, excluded.junk_level),   has_red_flag = has_red_flag OR excluded.has_red_flag,   has_orange_flag = has_orange_flag OR excluded.has_orange_flag,   has_yellow_flag = has_yellow_flag OR excluded.has_yellow_flag,   has_green_flag = has_green_flag OR excluded.has_green_flag,   has_blue_flag = has_blue_flag OR excluded.has_blue_flag,   has_purple_flag = has_purple_flag OR excluded.has_purple_flag,   has_gray_flag = has_gray_flag OR excluded.has_gray_flag WHERE count != excluded.count;
SELECT ROWID FROM threads WHERE scope = :scope AND conversation = :conversation_id;
v16@?0@"_EDWrappedMessage"8
Unable to find display message
thread DB ID: %lld
%u wrapped messages: {%@}
UPDATE OR IGNORE threads SET  newest_read_message = :newest_read_message WHERE   rowid = :thread AND   :date > (SELECT date_received FROM temp_persisted_messages WHERE temp_persisted_messages.ROWID = threads.newest_read_message);
:thread
SELECT   (SELECT date_received FROM temp_persisted_messages    WHERE temp_persisted_messages.ROWID = threads.newest_read_message),   (SELECT date_received FROM temp_persisted_messages    WHERE temp_persisted_messages.ROWID = threads.display_message) FROM threads WHERE threads.ROWID = :thread;
v32@?0@"_EDWrappedMessage"8Q16^B24
UPDATE OR IGNORE threads SET   display_message = :display_message WHERE ROWID = :thread ;
UPDATE OR IGNORE threads SET   display_message = threads.newest_read_message WHERE threads.ROWID = :thread ;
INSERT OR IGNORE INTO thread_mailboxes (thread, mailbox) VALUES (:thread, :mailbox);
SELECT temp_persisted_messages.sender, temp_persisted_messages.date_received FROM temp_persisted_messages;
INSERT INTO thread_senders (  thread,   address,   date ) VALUES (  :thread,   :address,   :date ) ON CONFLICT (thread, address) DO UPDATE SET   date = max(date, excluded.date) ;
:address
v32@?0@"NSNumber"8@"NSDate"16^B24
SELECT address FROM thread_senders WHERE thread == :thread AND priority == 1;
SELECT sender FROM temp_persisted_messages WHERE ROWID IN (SELECT display_message FROM threads WHERE ROWID == :thread);
UPDATE thread_senders SET priority = 0 WHERE thread == :thread AND priority == 1;
UPDATE thread_senders SET priority = 1 WHERE thread == :thread AND address == :address;
SELECT recipients.address, temp_persisted_messages.date_received FROM recipients JOIN temp_persisted_messages ON recipients.message = temp_persisted_messages.ROWID WHERE recipients.type = :recipients_type;
:recipients_type
INSERT INTO thread_recipients (  thread,  address,  type,  date,  priority) VALUES (  :thread,  :address,  :type,  :date,  0) ON CONFLICT (thread, type, address) DO UPDATE SET   date = max(date, excluded.date) ;
:type
SELECT ROWID FROM temp_thread_scope_message WHERE (conversation_id = :conversation_id)
CREATE TEMP VIEW temp_persisted_messages AS SELECT * FROM messages LIMIT 0;
-[_EDThreadPersistence_PersistedThread _ensureTempMessagesView]_block_invoke
EDThreadPersistence_ThreadMessages.m
CREATE TEMP VIEW temp_persisted_messages AS SELECT * FROM messages WHERE ROWID IN (%@);
CREATE TEMP VIEW
-[_EDThreadPersistence_PersistedThread _ensureTempMessagesView]
success
DROP VIEW IF EXISTS temp_persisted_messages;
-[_EDThreadPersistence_PersistedThread dropTemporaryView]_block_invoke
CREATE TEMP VIEW temp_thread_scope_message AS SELECT * FROM messages WHERE %@;
-[_EDThreadPersistence_ThreadScope _ensureTempScopeView]
DROP VIEW IF EXISTS temp_thread_scope_message;
-[_EDThreadPersistence_ThreadScope dropTemporaryView]
-[_EDThreadPersistence_StatementCache preparedStatementForQueryString:]
statement
-[_EDThreadPersistence_SQLHelper executeUpdateSQL:bindings:errorHandler:]
-[_EDThreadPersistence_SQLHelper executeUpsertSQL:bindings:errorHandler:]
self.connection.lastInsertedDatabaseID == 0
-[_EDThreadPersistence_SQLHelper executeSelectSQL:bindings:errorHandler:rowHandler:]
-[_EDThreadPersistence_SQLHelper executeSQL:indexBindings:errorHandler:]
-[_EDThreadPersistence_SQLHelper executeSQL:errorHandler:]
v12@?0i8
v16@?0@"_EDThreadQueryUnderlyingHandlers"8
EDThreadQueryHandler.m
-[EDThreadQueryHandler test_tearDown]
v16@?0@"<EDMessageRepositoryQueryHandler>"8
com.apple.EmailDaemon.EDThreadScopeManager.evictionScheduler
v32@?0@"EMThreadScope"8@"_EDThreadScopeInfo"16^B24
B32@?0@"EMThreadScope"8@"_EDThreadScopeInfo"16^B24
v36@?0q8@"EMThreadScope"16B24@"NSDate"28
q24@?0@"NSNumber"8@"NSNumber"16
B24@?0@"EMThreadScope"8@"_EDThreadScopeInfo"16
@"NSNumber"16@?0@"_EDThreadScopeInfo"8
%lld%@, last viewed: %@
, needs update
%@-%@
com.apple.mail.NNMKCrashDetectionService.%@
com.apple.mobilemail.UbiquitousConversationManager
B32@?0@"NSString"8@16^B24
v32@?0@8@"NSDictionary"16^B24
com.apple.EmailDaemon.EDUpdateThrotller.resumeClientScheduler
%@ %ld
UserNotificationMailboxCutoffs
com.apple.mail.vipsenders
VIP_
VIPs.plist
Name
EmailAddresses
com.apple.email.edvipmanager
com.apple.email.edvipmanager.notifications
-[EDVIPManager getAllVIPsWithCompletion:]
EDVIPManager.m
v32@?0@"NSString"8@"EMVIP"16^B24
Modification of VIPs only supported when syncing is enabled
B32@?0@"NSString"8@"EMVIP"16^B24
B32@?0@"NSString"8Q16^B24
com.apple.mail.VIP.count
vipCount
notificationsEnabled
com.apple.EDVisibleMessagesReloadRegistry.notify
com.apple.EDVisibleMessagesReloadRegistry.observation
link
calendarEvent
phoneNumber
misc
EDWebContentParser
com.apple.email.EDWebContentParser
EDWebContentParser.m
-[EDWebContentParser test_tearDown]
EmailCore
wkbundle
PlugIns
RichLinks
MetadataMessageHandler
LogHandler
Current thread must be main
FindRichLinkMetadata
x-apple-mail-parser
v16@?0@"EDWebContentParserState"8
text/html
WKWebViewConfiguration
/System/Library/Frameworks/WebKit.framework/WebKit
### Failed to Soft Linked: /System/Library/Frameworks/WebKit.framework/WebKit
_WKProcessPoolConfiguration
WKProcessPool
WKUserContentController
WKWebView
_WKRemoteObjectInterface
LPLinkMetadata
Class getLPLinkMetadataClass(void)_block_invoke
Unable to find class %s
void *LinkPresentationLibrary(void)
com.apple.email.updateWidget
kLastWidgetUpdateDefaultsKey
kNumberOfWidgetUpdatesDefaultsKey
flagChanged
messageAdded
daemonLaunched
CHSTimelineController
/System/Library/PrivateFrameworks/ChronoServices.framework/ChronoServices
### Failed to Soft Linked: /System/Library/PrivateFrameworks/ChronoServices.framework/ChronoServices
com.apple.email.EphemeralSenderList
MUIBucketEphemeralSenderListWriteNotification
MUIBucketEphemeralSenderListWriteLocation
MUIBucketEphemeralSenderList
com.apple.MUIBucketEphemeralSenderList.writeScheduler
com.apple.MUIBucketEphemeralSenderList.contentProtectionQueue
@16@?0@"<ECEmailAddressConvertible>"8
v16@?0@"NSMutableSet"8
v40@?0r^v8{_NSRange=QQ}16^B32
emailAddress
userInitiated
updatedDeviceIdentifier
com.apple.mail.senders
MUIBucketSenderCloudStorage
MUIBucketSenderCloudStorage.m
SendersCloudStorageUpgradeStatusDefault
SendersCloudStorageUpgradeResetCloudSenders
MUIBucketSendersCloudStorageUpgrader
com.apple.email.MUIBucketSendersCloudStorageUpgrader
MUIBucketUnscreenedSendersQueryHandler
@"NSString"16@?0@"EMObjectID"8
important
importantProbability
EDImportantMLModel
mlmodelc
v24@?0@"MLModel"8@"NSError"16
header_key_filtered
promo
promoProbability
EDPromotionMLModel
Registered EMAccountRepositoryObserver<%p> - Current observing accounts: Count: %lu
 %@ 
Returning %lu accounts
Handling accounts added: %@
Handling accounts removed: %@
Handling accounts changed: %@
Inserted attachment: %{public}lld hash: %{public}@ into attachments table
Inserted attachment: %{public}@ for globalMessageID: %lld into message_attachments table
Updated row with attachment reference: %{public}@, globalMessageID: %lld, mimePart: %{public}@
Found attachments %{public}@ for globalMessageIDs %@
Found globalMessageIDs %{public}@ for attachment %{public}@
Removing attachments %@ from the attachments table
Failed to check if message attachment identifier and attachmennt identifier exist for messageID %lld mimePartNumber: %{public}@ with error %{public}@
%{public}@ attachment identifier %lld for messageID %lld mimePartNumber: %{public}@
Failed to check if message attachment identifier and attachmennt identifier exist for messageID %lld remoteURL with error %{public}@
%{public}@ attachment identifier %lld for messageID %lld and remoteURL@
Found attachments metadata %{public}@ for message %lld
Found attachment metadata %{public}@ for hash %{public}@
Failed to fetch attachment metadata for message %lld mime part %{public}@ error %{public}@
Found attachment metadata for message %lld mime part %{public}@ attachmentID %{public}@
Failed to fetch attachment metadata for message %lld remoteURL %@ error %{public}@
Found attachment metadata for message %lld remoteURL %@ attachmentID %{public}@
Failed to fetch attachment metadata for messageAttachmentID %lld error %{public}@
Found attachment metadata for messageAttachmentID %lld attachmentID %{public}@
Created new attachment filename %@
Couldn't read data for attachment URL %@, device may be locked
Created hash %{public}@ for attachment for globalMessageID %lld MIME part %{public}@
Couldn't get file attributes for attachment URL %@
Checking if the attachment hash already exists in the attachments table
No existing attachment found. Adding to the attachments table
Persisting attachment %lld %@ to disk at directory %@
Persisted attachment %lld %@ to disk
Error persisting attachment %@ to disk attachmentID %lld
Found the attachment in the attachments table. Checking if it exists on disk at %@
No existing attachment found on disk. Writing attachment %@ to disk
Persisted attachment %@ to disk with existing metadata
Error persisting attachment %@ to disk with existing metadata %{public}@
Found the attachment on disk. No write needed
Checking if we need to update or insert the attachment metadata in the message_attachments table for attachment: %@
Update the message_attachments table with the updated attachment ID: %@
Create a new entry into the message_attachments table with attachment ID: %@
Checking to see if the attachment metadata already exists in the message_attachments table
attachmentMetadata %{public}@ is missing either a mimePartNumber or a remoteURL. Aborting attachment write
Found both the attachment metadata and the attachment in the message_attachments and attachments table. No insertion needed.
Persisting regular file attachment
Persisting archive attachment
Persisting archive attachment from temp directory %@
Failed to write archive attachment %@ to %@
Trying to insert an attachment entry with no global message ID
Trying to insert an attachment entry with no name
Trying to insert an attachment entry neither a mime part number or remoteURL
Check the message_attachments table if attachment with message ID %lld MIME part %{public}@ exists
Attachment metadata doesn't exist in message_attachments table for messageID: %lld mime part number: %{public}@. Persisting into the message_attachments table
Attachment metadata already exists in message_attachments table for globalMessageID: %lld mime part number: %{public}@
Removing attachments to delete %@ from the attachments table
Removing attachments to delete %@ from the filesystem
Deleting attachment directory: %{public}@
Failed to delete attachment directory: %{public}@
Fetching attachment URL for globalMessageID %lld MIME part number %{public}@ at base path %@
Found attachment URL %{public}@ for globalMessageID %lld MIME part number %{public}@ at base path %@
Could not find attachment URL for globalMessageID %lld MIME part number %{public}@ at base path %@
Fetching attachment URL for globalMessageID %lld remoteURL %@ at base path %@
Found attachment URL %{public}@ for globalMessageID %lld remoteURL %@ at base path %@
Could not find attachment URL for globalMessageID %lld remoteURL %@ at base path %@
Fetching attachment URL for messageAttachmentID %lld at base path %@
Found attachment URL %@ for messageAttachmentID %lld at base path %@
Error figuring out if %{public}@ already exists, %{public}@
Attachment already exists at %{public}@. Overwriting with current attachment %@
No filename set on the file wrapper attachment %{public}@ for write to %{public}@
Failed to create attachment directory at %{public}@, %{public}@
Persisting attachment to filesystem: %{public}@
Error occurred attempting to compress file: %{public}@: %{public}@
Failed to write attachment file wrapper %@ to %{public}@, %{public}@
Duplicate globalMessageIDs found %{public}@ for attachment %{public}@
Found persisted messages %{public}@ for attachment %{public}@
Hook called persistenceWillDeleteMessages to prepare attachment deletion for messages %{public}@
Hook called persistenceIsDeletingMessages to delete attachments for messages %{public}@
Scheduling initial download
Unable to fetch dkim headers from headerData. DKIMVerificationContext %@ error %@
No DKIM header with incoming server matching domain
Blocking BIMI because DKIM domain %@ and mail server domain didn't match %@
Blocking BIMI because bimi-pass domain %@ and mail server domain %@ OR authServId domain of first auth result didn't match %@
Adding BIMI url (%{public}@)%@ for message: %{public}@
May have undownloaded indicators, downloading now
All BIMI messages have embedded indicators
incoming urlString %@ returned highLevelDomain %@
Scheduling indicator download, privacy proxy is %{public}@
Downloading %lu indicators
Persisted indicator data for URL: %{public}@
Removed invalid indicator URL: %{public}@
Scheduling another download batch
Temporarily unable to request indicator data for URL: %{public}@ due to error: %{public}@
Permanently unable to request indicator data for URL: %{public}@ due to error: %{public}@
Requesting indicator data for URL: %{public}@
BIMI indicator does not have expected hash
BIMI indicator hash is using unsupported algorithm
-[EDBiomeInteractionEvent persistEvent:date:message:data:] .. %@
-[EDBiomeInteractionEvent persistEvent:date:conversationID:data:] .. %@
-[EDBiomeInteractionEvent persistEvent:dataFromMessage:] .. %@
-[EDBiomeInteractionEvent persistEvent:dataFromMessage:account:] .. %@
-[EDBiomeInteractionEvent persistEvent:date:message:mailbox:] .. %@
-[EDBiomeInteractionEvent persistEvent:date:message:mailboxType:] .. %@
Cache hit for %@
Cache miss for %@
resumeForUpdates - Not Resuming client because device is either in foreground already or running PPT tests: %{public}@
resumeForUpdates - Not Resuming client because device is locked: %{public}@
resumeForUpdates - Resuming client: %{public}@
Resumed process failed with error %{public}@
Resumed process:%@
Acquired BKSProcessAssertion: %{public}@
Start BKSProcessAssertion for %{public}@
BKSProcessAssertion
Invalidated BKSProcessAssertion: %{public}@
End BKSProcessAssertion for %{public}@
Invalidating EDobserverResumer:%{public}@
Releasing BKSProcessAssertion as device is locking/locked: %{public}@
%{public}@: deallocating client state
%{public}@: Changed testing state. isRunningTests=%{BOOL}d
%{public}@: Setting visible mailboxes to %{public}@
%{public}@: Client Requested Boost
%{public}@: Client Cancelled Boost
%{public}@: Setting demo mode state
Failed to locate momd bundle in application. %@
Failed to load persistent stores. %{public}@
Import request failed to execute: %{public}@
Export request failed to execute: %{public}@
Successfully imported CloudKit content.
Successfully exported CloudKit content.
Request import failed
Request export failed
Failed to import CloudKit content. Rescheduling (%g). %{public}@
Failed to export CloudKit content. Rescheduling (%g). %{public}@
Failed to import CloudKit content: %{public}@
Failed to export CloudKit content: %{public}@
Library purgeable upgrader has been scheduled.
Found pending data replication transaction. Retrying replication from cloudKit to KVS
Finished replicating data from cloudKit to KVS
Replicating %lu changes from %{public}@ to %{public}@
Change %{public}@ replicated from %{public}@ to %{public}@, because %{public}@ entry is more recent.
Ignoring change with Key %{public}@ from %{public}@ to %{public}@, because %{public}@ entry is more recent.
Finished replicating changes from %{public}@ to %{public}@
CloudKitStorage finished initializing. Starting migrating content from KVS to CloudKit
Finished migrating content from KVS to CloudKit
Multiple conversations found for message_ids %@
Attempting to update association table for conversation that does not exist %@
Started pruning conversations
Finished pruning conversations
Initializing Conversation CloudKit Storage
Found pending export transaction. Retrying request export
Found pending import transaction. Retrying request import
First request import arrived. Success: %lu
APS Push received - %{public}@
Failed to save Control - Error: %{public}@
Unable to archive history token - Error: %{public}@
Unable to unarchive history token - Error: %{public}@
Deleting duplicated object. %{public}@, %{public}@
Failed to save _handleDuplicationsForConversationUUIDs - Error: %{public}@
Failed to fetching EDConversationInfo with ID: %{public}@ - Error: %{public}@
Failed to save EDConversationInfo %{public}@ - Error: %{public}@
Failed to delete EDConversationInfo %{public}@ - Error: %{public}@
Failed fetching EDConversationInfo to remove. ObjectId: %{public}@ - Error: %{public}@
Failed to fetching allConversationInfos- Error: %{public}@
Failed to fetching cloudKitControl: %{public}@
CoreData will reset sync couldKit data
CoreData did reset sync couldKit data
Started handling core data changes
Ignoring insert because object does not exist.
EDConversationInfo added. %{public}@
Ignoring update because objecvt does not exist.
EDConversationInfo updated/inserted. %{public}@
EDConversationInfo deleted. %{public}@
Deletion operation does not have ConversationUUID.
Finished handling core data changes
persistentHistoryResult.result is not an array. Ignoring it %{public}@
Unable to fetch change history (%{public}@.)
Failed fetching EDConversationInfo. ObjectId: %{public}@ - Error: %{public}@
Initializing Conversation KVS storage
Synchronizing with KVS store %@: %@
Received external KVS change event: %@, changed keys=%@
iCloud Key Value Store Over-Quota
%@: %@
Over quota: pruning database
Unknown change reason: %@
Error: %@ unable to persist all results into data_detection_results table
Successfully detected and persisted data detection results: %@
Error reading data detection results: %@
Database read data detection results for message %{public}lld: %@
Did not find any data detection results for message %{public}lld
Error getting data detection results from message ID: %@
Registered EMDiagnosticInfoProviding: <%p>
Gathering diagnostics with options: %lx...
Error creating directory at %{public}@, error: %{public}@
Error gathering diagnostics: %{public}@
Notifying observer of %lu changed groups (after messages were added)
Notifying observer of %lu changed groups (after messages were %{public}@)
Notifying observer of %lu deleted groups (%{public}@)
Notifying observer of %lu groups moved after %{public}@ (%{public}@)
Notifying observer of %lu groups inserted after %{public}@ (%{public}@)
Got %u predictions for message persistentID=%@, subject="%@"
Aggregated %u mailboxes.
Best mailbox: %@
Using Ordered Mode.
Raw counts for %@: %@
Found %.0lf hit for **%@** in %@
Ignoring because it is the message's current mailbox.
Ignoring because count (%.0f) is under threshold (%.0f).
Using Summed Weighted Mode:
Raw counts for %@:
Found field=%@ in mailbox=%@: weightedHits=%.1lf
Using Weighted Mode:
Found %.0lf (weighted=%.1lf) hits for **%@** in %@
Ignoring because weighted (%.0f) is under threshold (%.0f).
Winner: %@ (weighted=%.1lf)
Getting grouped messages count for %d / %@.
Not a legal sender address: %@
Found %u user mailboxes.
Ignoring mailboxes: %@
Not a legal recipient address: %@
anisetteDataWithError failure: %@ (%.3f sec)
anisetteDataWithError success: %@ (%.3f sec)
Pushing update for alias data. Count = %d
No Alias Lookup URL
AnisetteData not found for account: %{public}@ error: %{public}@
Unable to push new alias data to server %@. Received response code %lu, with error %{public}@.
JSON:%@
response: %@.
JSON: %@
%p: Ignoring subsequent call to -start.
%p: Starting with query '%@'
%p: Preparing to update, %llu unacknowledged updates, %f since last acknowledgement
%p: Pausing updates, %llu unacknowledged updates, %f since last acknowledgement
%p: Skipping change while paused
%p: Refreshing after unpause
%p: Unpausing without changes
%p: Acknowledged update %{public}@
%p: Sending update %{public}@
%p: Restarting the helper (old = %p).
%p: Created helper %p
%p: Threads Query: %@
%p: Message Query: %@
Content Protection => Locked
Content Protection => Unlocked
%p: Found %u messages.
%p: Finished initial load.
%p: Added %u messages
%p: Flags changed for %u messages
%p: Key paths %{public}@ changed for %u messages
%p: itemID not changed %@
changedMessage %@
oldObjectID %@
%p: Changed objectID from %{public}@ for message in thread: %{public}@
%p: Deleted %u messages
%p: ConversationIDs changed from %lld for %u messages
%p: Moving objectIDs: %{public}@ before: %{public}@
%p: Adding objectIDs: %{public}@ before: %{public}@
%p: Moving objectIDs to end of list: %{public}@
%p: Adding objectIDs to end of list: %{public}@
%p: Changing objectIDs: %{public}@
%p: Deleting objectIDs: %{public}@
%p: Blocked sender: Reporting deletes: %@ for thread: %@
%p: Blocked sender: Reporting change: %@ for thread: %@
%p: Blocked sender: No changes for thread %@
%p: Helper did finish remote search.
%p: Helper needs restart.
%p: Oldest threads initialized for %u mailboxes
Found existing old salt
No old salt found
Error finding existing old salt: %d
Could not generate salt. Device unlocked since boot: %@
Found existing salt
Existing salt has wrong access class. Re-creating salt
No salt found
Error finding existing salt: %d
Will create new salt
Error creating new salt: %d
Will delete salt
Error deleting salt: %d
Will migrate salt
errSecInteractionNotAllowed from keychain. Is the device still locked?
Error performing HTML unsubscribe: %{public}@
Could not find destination message for database ID %lld
Creating flag change action for %lu messages in mailbox %{public}llu
Got foreign key constraint error adding action for mailbox %{public}llu
Creating flag change all action in mailbox %{public}llu
Created %{public}@ action %lld for %lu messages (%lu download, %lu copy, %lu delete) in source mailbox %@, destination %@
Created %{public}@ action %lld for undownloaded message in mailbox %@ (success = %d)
Creating label change action for %lu messages in mailbox %{public}llu
Adding action message for transfer without destination message ID - action ID: %lld, destination message: %{public}@, source message: %{public}@
%{public}@
Persisting results for action %{public}@, completed %lu, failed %lu for phase %lu
Action %{public}@ had %lu failed items
Action %{public}@ finished downloading items
Action %{public}@ finished copying items
Finished action %{public}@
Updating action %{public}@ to %@ (%lu)
Action %llu finished
Predicting move mailbox for messages: %{public}@
Did not find any mailboxes for moving message(s).
Found mailbox for moving message(s).
Found mailbox '%{public}@'.
Found no mailbox for moving message(s).
%u accounts. No prediction for moving message(s).
Found %u mailbox(es) for moving message(s). Filtered from %u.
populated cache: %lu
_needsToInvalidate = YES
_invalidateCache invalidated
Get All Mailboxes
Number of Mailboxes %ld count
Registering For Mailbox Observation With Observer %{public}@
Unregistering For Mailbox Observation With Observer %{public}@
Perform Change Action:%{public}@
Could not load contents of URL %@ for pre-screening; proceeding with node search
HTML file seems to contain Mail Drop tags; proceeding with node search
HTML file does not contain Mail Drop tags; skipping node search
could not load the mail drop support javascript resource: %{public}@
Creating a webview for parsing MailDrop nodes for HTML file %@
MailDrop: Received Script message Finished MailDrop %@
MailDrop: Script message finished with a non-array value
MailDrop: WebView terminated
MailDrop: Failed to load WebView Error %{public}@
MailDrop: Finished loading webview for URL %@
Unable to rewrite HTML with updated maildrop nodes. Error: %{public}@
MailDrop: Received Script message with %@
Catalog MADownLoadResult: %ld
Query MAQueryResult: %ld
No asset found in results
Asset MADownLoadResult: %ld
Updating from asset with contentVersion=%{public}@, compatibilityVersion=%{public}@
No file URL found in asset
Failed to register for app extensions changes error:%@
Error occured requesting action for extension:  %{public}@: Error: %{public}@
Extension not found while attempting to find action: %{public}@
Received decision from action handler: %{public}@: %{public}@
Moving %lu new messages to %@
Copying %lu new messages to %@
Begin transferring NumberOfMessages=%{public,signpost.telemetry:number1}u messages to destinationMailbox=%@ enableTelemetry=YES 
Begin Processing batch of %u messages for sourceMailboxURL %@
Begin database write connection
End database write connection
End Processing batch of %u messages for sourceMailboxURL %@
EDMessageChangeManagerTransferMessages
Deleting all message from %@
Begin transfer all NumberOfMessages=%{public,signpost.telemetry:number1}u messages to destinationMailbox=%@ enableTelemetry=YES 
EDMessageChangeManagerTransferAllMessages
Adding %lu new messages to %@
Deleting %lu messages
Setting flags %{public}@ on all message for mailboxes %@
Begin flag change NumberOfMessages=%{public,signpost.telemetry:number1}u messages to FlagChange=%{public,signpost.telemetry:number2}lu enableTelemetry=YES 
EDMessageChangeManagerChangeFlagAllMessages
Setting flags %{public}@ on %lu messages
EDMessageChangeManagerChangeFlagMessages
Setting follow up dates %{public}@ on %lu messages
Setting read later date %{public}@ on %lu messages changeIsRemote:%{BOOL}d
Skip truncation. truncatedDate:%{public}@ readLaterDate:%{public}@
Adding %lu new messages from server sync to %@
Applying remind me to downloaded message: %lld
Invalid UID (%{public}@) in flag change action.
Message
s UID (%{public}@) is invalid in flag change action.
%d of %d UIDs in flag change action were invalid.
All %d UIDs in flag change action were completed.
%d of %d UIDs in flag change action were completed.
Starting to clear follow-ups from threads of %lu incoming messages.
Finished clearing %lu follow-ups.
Processing remote changes for changed items: %{public}@ deleted items: %{public}@
Applying new read later date due to remote change for messages with global message id: %lld, new read later date: %{public}@, old read later date: %{public}@
Applying new display date due to remote change for messages with global message id: %lld, new display date: %{public}@, old display date: %{public}@
No persisted messages found for remote changes.
<%p: %{public}@> Checking out scheduler %@
<%p: %{public}@> Checking in scheduler %@
<%p: %{public}@> Scheduling count calculation with reason %@
<%p: %{public}@> %{public}@ count handler with query: %@
<%p: %{public}@> Firing count calculation
<%p: %{public}@> recalculating unread counts (generation %lld)
<%p: %{public}@> query took %.04fs localCount:%ld
<%p: %{public}@> Finished count calculation
<%p: %{public}@> %{public}@: Scheduling increment of %lld (window: %llu:%llu)
<%p: %{public}@> increment ignored due to newer resync generation (ours: %llu, window: %llu:%llu)
<%p: %{public}@> increment occured during generation window, scheduling full fetch (ours: %llu, window: %llu:%llu)
<%p: %{public}@> %{public}@: Scheduling decrement of %lld (window: %llu:%llu)
<%p: %{public}@> decrement ignored due to newer resync generation (ours: %llu, window: %llu:%llu)
<%p: %{public}@> decrement occured during generation window, scheduling full fetch (ours: %llu, window: %llu:%llu)
<%p: %{public}@> %{public}@ (%lu mailboxes being synced): %lld = %lld + %lld + (%lld - %lld)
%{private}@
%{public}@
<%p: %{public}@> %{public}@ (%lu unacknowledged updates): %lld = %lld + %lld + (%lld - %lld)
%{private}@
%{public}@
<%p: %{public}@> Acknowledged update %{public}@
<%p: %{public}@> %{public}@: %lld = %lld + %lld + (%lld - %lld), %{public}@
%{private}@
%{public}@
<%p: %{public}@> Total count is negative.
<%p: %{public}@> Started syncing mailbox %{public}@
<%p: %{public}@> %{public}@, refreshing query
<%p: %{public}@> Adding mailbox %{public}@ (window: %llu:%llu)
<%p: %{public}@> add-mailbox notification expired by new generation (ours: %llu, window: %llu:%llu)
<%p: %{public}@> add-mailbox occured during generation window, scheduling full fetch (ours: %llu, window: %llu:%llu)
<%p: %{public}@> server-count set %lld for %{public}@ (window: %llu:%llu)
<%p: %{public}@> server-count notification expired by new generation (ours: %llu, window: %llu:%llu)
<%p: %{public}@> server-count occured during generation window, scheduling full fetch (ours: %llu, window: %llu:%llu)
<%p: %{public}@> most-recent-status-count set %lld for %{public}@ (window: %llu:%llu)
<%p: %{public}@> most-recent-status-count notification expired by new generation (ours: %llu, window: %llu:%llu)
<%p: %{public}@> most-recent-status-count occured during generation window, scheduling full fetch (ours: %llu, window: %llu:%llu)
<%p: %{public}@> last-sync + most-recent-status-count set %lld for %{public}@ (window: %llu:%llu)
<%p: %{public}@> last-sync and most-recent-status-count notification expired by new generation (ours: %llu, window: %llu:%llu)
<%p: %{public}@> last-sync and most-recent-status-count occured during generation window, scheduling full fetch (ours: %llu, window: %llu:%llu)
Created new scheduler %@ "%{public}@"
Using existing scheduler %@ with count %lu
received error while querying for messages: %{public}@
Cannot currently handle a NOT predicate with more than one sub
Got unexpected predicate: %{private}@
Failed to read metadata for key '%{public}@': %{public}@
JSON for cached metadata key '%{public}@' is too big.
Failed to add metadata for key '%{public}@': %{public}@
Failed to remove metadata for key '%{public}@': %{public}@
Fetched cached metadata row count from database: %d
Failed to get number of rows in cached metadata: %{public}@
Pruned %d rows from cached metadata.
Failed to prune %d rows from cached metadata: %{public}@
%{public}@: success:%d globalMessageIDs:%{public}@
Updating display dates for query %{public}@
Updated display dates for query %{public}@ (%lu messages)
Updating display date for messages with database IDs: %{public}@, date: %{public}@
No database IDs found for messages to update display date
Checking for expired follow ups for query: %{public}@
<%@ %p> Begin mapping %lu searchable item identifiers.
Mapped spotlight identifiers %{public}@ to %lu message objectIDs
<%@ %p> End mapping %lu searchable item identifiers.
PersistentIDMapping
Generating smart sort query for mailbox %@
Suggestions returned these message-ids as salient: %@
Invalid cached metadata key '%{public}@'
Trying to access cached metadata for global message ID 0.
Exception occured: %{public}@
Symbols:
%{public}@
%p: Re-starting the helper (old = %p).
%p: Found %lu objectIDs: %{public}@
%{public}@
%p: Found %lu objectIDs starting with: %{public}@
ending with:
%{public}@
%{public}@
%p: Finished initial load
%{public}@
%p: Did add %u messages. %u groups.
%p: Adding objectIDs: %{public}@ before: %{public}@
%{public}@
%p: Changing flags for objectIDs: %{public}@
%{public}@
%p: Changing key paths: %{public}@ for objectIDs: %{public}@
%{public}@
%p: Deleting objectIDs: %{public}@
%{public}@
%p: Changing conversationID for objectIDs: %{public}@
%{public}@
%p: Updating oldest messages for %u mailboxes
%p: Updated oldest message for mailbox ID %@
%p: Oldest messages updated
count=%{signpost.description:attribute}u 
QueryHelper FindMessagesByPreviousID
%p: Previous message is message itself -- message: %{public}@
previous message: %{public}@
exclude predicate: %{public}@
%p: Used head-list-lookup (%u entries) for %.3g%%, faster previous-message-lookup for %.3g%% of %u messages.
%@ Getting initial results for message query %@
%p: Received error %{public}@ while performing initial query: %@
%@ found %lu initial results for message query %@
helper=%p count=%u 
QueryHelperAddingMessages
%p: Adding %u filtered messages: %@
QueryHelperDidAddMessages Callback
QueryHelperDidAddMessages
%p: Did delete all messages in %u mailbox(es). Requesting restart.
%p: Reconciled %u filtered messages: %@
%p: Not deleting objectIDs with still existent duplicates: %{public}@
%{public}@
%p: Deleting %u filtered messages: %@
%p: Updating global message id for message: %{public}@ oldGlobalMessageID %llu newGlobalMessageID %llu
%p: persistenceDidUpdateProperties %@
keyPaths %@
%p: %{public}@ - schedule changes for keyPaths:%{public}@ removed=%lu added=%lu changed=%lu
%p: messages %@, unmatched %@
%p: Filtered ignored messages - before=%lu, after=%lu
%p: No messages to ignore
Performing Query %@
found %ld messages matching query %@
received error while querying for messages: %@, %{public}@
Creating message query: %{public}@, observation identifier: %{public}@
Creating thread query: %{public}@, observation identifier: %{public}@
Stopping query with observation identifier: %{public}@
Newly activated account is not EDReceivingAccount.
Resetting threads scopes for actived account.
Requesting (re-)migration of threads for actived account.
Newly deactivated account is not EDReceivingAccount.
Requesting update of threads for deactived account.
Found %u thread scopes that need re-migration for deactived account.
Thread query handler %p completed migration. Will notify %u other thread query handlers about the state change.
Found %u query handlers that need re-migration for (de-)actived account.
Received by maild
No query handler found for observation identifier: %@. Requesting summary from messagePersistence %p
Incorrect number of message list items (expected %lu, got %lu results + %lu missed). Unaccounted for: %{public}@
Returning results: %{public}@, missed objects: %{public}@
Finished processing %{public, name=results}u %{public, name=missedObjectIDs}u
EDMessageRepositoryMessageListItems
ChangeActionType=%{public,signpost.telemetry:number1}lu, ReturnUndoAction=%{public,signpost.telemetry.number2}u enableTelemetry=YES 
EDMessageRepositoryMessageChangeAction
Could not find a message for persistent ID: %@
Message %@ does not have a base path
Requesting rich link metadata for rich link id: %@ in base path: %@
EDMessageRepositoryContentRepresentationRequest
Requesting content representation for message %{public}@, Options: %{public}@
Content representation finished loading: %{public}@
Finished processing with success
Finished processing with failure %{public, name=errorCode}ld
Content representation failed to load: %{public}@ with error %{public}@
Loading older messages for %lu mailboxes
Remote Content Cache URL: %@
Resetting all update throttlers due to %{public}@
Already resetting all update throttlers, skipping reset due to %{public}@
Adding objectIDs but duplicate found %@
Unable to find mailboxes for legacy message database id: %{public}@
Not accepting %@
Begin Saving Draft %@
End Saving Draft %@
Begin saving outgoing message for outgoing message for %{public}@
Persisted message with %lld was created
EMAIL DELIVERY
%lu of messages are to be returned in completion
End saving outgoing message for message at for %{public}@
Begin editing outgoing message for documentID %@ at for %{public}@
End editing outgoing message for documentID %@ at for %{public}@
Deleting Draft %@
Unable to find persisted message for draft: %@
Deleting draft messages for documentID %@ in mailboxID %@
Deleting %lu messages for documentID %@ in mailboxID %@
Unable to find persisted message for draft documentID %@ in mailboxID %@
Trying to get a database write connection while servicing an XPC request.
Integrity check result: %d
Failed to begin transaction on connection %{public}@: %{public}@
Outer database block failed on connection %{public}@
Nested database block failed on connection %{public}@
Non-transactional database block failed on connection %{public}@
Write Transaction (generation: ignored) on connection %{public}@ started successfully
Write Transaction (generation: %lld) on connection %{public}@ started successfully
Read Transaction (generation: ignored) on connection %{public}@ started successfully
Read Transaction (generation: %lld) on connection %{public}@ started successfully
Rolling back transaction on connection %{public}@ %{public}@
Transaction on connection %{public}@ %{public}@ failed: %{public}@
Transaction on connection %{public}@ %{public}@ succeeded
Unable to increment transaction generation: %{public}@
Attached Protected Index on connection %{public}@
Detached Protected Index on connection %{public}@
Attached journal on connection %{public}@
Detached journal on connection %{public}@
Attaching database '%{public}@' at URL %{public}@
wrong number of arguments (%d) to and64
Checking out %@
Checking in %@
Checking for existing journals
Created journal directory
Unable to create journal directory: %{public}@
Found journal numbers: %{public}@
Unable to iterate journal directory: %{public}@
Returning current journal %@
Unsetting current journal %@ - should delete: %{public}@
Oldest journal %lu does not already exist. Creating...
Getting oldest journal %lu
Merged journal %lu - should delete: %{public}@
Unable to delete journal %lu: %{public}@
Unable to delete wal for journal %lu: %{public}@
Unable to delete shm for journal %lu: %{public}@
Deleted journal %lu
Failed to generate and restore persona context with identifier: %{public}@ error: %{public}@ 
Failed to create saved persona context for identifier: %{public}@ error: %{public}@ 
Failed to create container with identifier %{public}@ due to container manager error: %llu
Mail persona container is not in the group container URLs
No persistentBits found. Searching for legacy version.
No legacy persistentBits found. Generating new.
persistentBits: %@
Could not open '%@': %d: %@
Reached quota, writing truncation marker
Checksum failure at offset %zu, bailing to read
Error initializing compression
_process() failed
_process(.FINALIZE) failed
No interaction events found, returning nil data
_destroy failed
%@ doesn't implement setMessage:data:
%@ doesn't implement setConversationID:data:
%@ doesn't implement setDataFromMessage:
%@ doesn't implement setDataFromMessage:account:
%@ doesn't implement setMessage:mailbox:
%@ doesn't implement setMessage:mailboxType:
Failed to find recipients of sent messages with error: %{public}@
Failed to get addresses for recipients of sent messages: %{public}@
Failed to insert senders with contacts with error: %{public}@
Failed to insert senders without contacts with error: %{public}@
Failed to clear senders table: %{public}@
Failed to clear sender addresses table: %{public}@
%p: Returning batch of %lu results
%{public}@
%p: Canceled initial results
%{public}@
%p: Returning initial load did finish
%{public}@
%p: Adding change to existing change for objectID: %{public}@
%{public}@
%{public}@
%p: Adding change for objectID: %{public}@
%{public}@
%{public}@
%p: Skipping flushing of changes%{public}@ due to %llu unacknowledged updates
%p: Flushing changes%{public}@: %{public}@
%{public}@
%p: Flushing position changes%{public}@: %{public}@
%{public}@
%p: Acknowledged update for %{public}@: %{public}@
%p: Sending update%{public}@ for %{public}@: %{public}@
%p: Adding add for objectID: %{public}@ -> %{public}@
%{public}@
%p: Adding add to new position change for objectID: %{public}@ -> %{public}@
%{public}@
%p: Ignoring change for objectID: %{public}@
%{public}@
%p: Adding move for objectID: %{public}@ -> %{public}@
%{public}@
%p: Adding move to new position change for objectID: %{public}@ -> %{public}@
%{public}@
%p: Ignoring Conversation Notification Level change for objectID: %{public}@
%{public}@
%p: Adding objectID to delete: %{public}@
%{public}@
%p: Ignoring messageID change for objectID: %{public}@
%{public}@
%p: Ignoring summary change for objectID: %{public}@
%{public}@
%p: Oldest thread updated for mailbox: %{public}@
%@: maxRowID: %lld, largestDeletedRowID: %lld
Updating sqlite_sequence %{public}@ = %lld
Setting sqlite_sequence %{public}@ = %lld
Skipping on-demand reconciliation from the main thread
Triggering on-demand reconciliation
Completed on-demand reconciliation with result: %lu
Skipping on-demand reconciliation because we're already reconciling
Triggering reconciliation
Completed reconciliation with result: %lu
Starting reconciliation of protected data
Reconciling journal %lu
Failed to attach journal %lu for reconciliation
Failed to upgrade journal %lu for reconciliation
Temporarily failed to merge data for journal %lu
Skipped merging data due to malformed schema for journal %lu
Permanently failed to merge data for journal %lu
TotalJournaledRows=%{public,signpost.telemetry:number1}lu, NewJournaledRows=%{public,signpost.telemetry:number2}lu enableTelemetry=YES 
EDProtectedDatabasePersistenceReconciliation
Merging table %{public}@ with unique columns: %{public}@
  referencing columns: %{public}@
Merging table %{public}@ without unique columns
Inserting %{public}@
Replacing %{public}@ with %{public}@
Conflict merging table %{public}@.%{public}@ %{public}@ with %{public}@
Merge handler found for table %{public}@
Merge handler for table %{public}@ returned with result %lu
No merge handler found for table %{public}@
Failed to merge table %{public}@ for %{public}@
Deleting from journal: %{public}@
Starting clean up
Deleted %lu rows from %{public}@
Unable to find key for message: %{public}@
Adding entry for message: %{public}@, key: %{public}@, date: %f
Unable to find message ID for message: %{public}@
Unable to find key to update display date for message: %{public}@
Updating display date for message: %{public}@, key: %{public}@, date: %f
No value found for message: %{public}@, key: %{public}@
An existing display date already exists for message: %{public}@, key: %{public}@
Removing entry for message: %{public}@, key: %{public}@
%{pubilc}@ - message:%@ with date:%{public}@ result:%{public}@
%{pubilc}@ - message:%@
%{public}@ nextAlarmDate:%{public}@
%{public}@ udpatedMessages:%lu readLaterDate:%{public}@ startDate:%{public}@ firstMessageReadLaterDate:%{public}@
%{public}@ startDate:%{public}@ endDate:%{public}@
%{public}@ update endDate to %{public}@ so it's after startDate
%{public}@ nextAlarmDate:%{public}@ messages to notify:%lu
Next alarm date from DefaultEDRemindMeNotificationControllerAlarmDateProvider: %{public}@.
Reset remind me later next alarm to %{public}@.
%{public}@ date:%{public}@ message.globalMessageID:%lld
app requested early recovery path
Failed to create URL Cache directory:
%{public}@
-[EDRemoteContentManager _scheduleBackgroundRequests]
Updated scheduling: last day count = %lu, unrequested count = %lu, request interval = %f, batch size = %lu
Skipped unconditional request batch because request batch is already running
Scheduled unconditional request batch for %lu links with interval: %f
Request batch already scheduled
Deferring %lu links
Scheduled request batch for %lu links with interval: %f
Finishing after requesting %lu URLs%{public}@
Starting request batch for URLs: %{public}@
Requested URL with %.2fs timeout: %{public}@
Canceled URL with %.2fs timeout: %{public}@
Failed to request URL with %.2fs timeout: %{public}@ -- due to error: %{public}@
Finished request batch for URLs: %{public}@
Did not finish requesting batch due to deferral, completed: %{public}@
Added URLs: %{public}@
Invalid extra URL: %{public}@ with scheme: %{public}@
Invalid missedLink URL: %{public}@ with scheme: %{public}@
Verification: Extra URLs: %{public}@
Verification: Missed URLs: %{public}@
Verification: URLs match parsed URLs
Parsed and added URLs: %{public}@
Unable to get view durations from Biome
Using default timeout values
Leaving timeout values unchanged
Updating timeout values based on min and max: (%f, %f)
Updating timeout values based on mean and %u standard deviation%{public}@: (%f, %f)
-[EDRemoteContentManager noteViewOfRemoteContentLinks:]
Viewed URLs: %{public}@
Decremented row count past zero to %ld
Decremented protected row count past zero to %ld
Failed to create new messages table: %{public}@
Failed to rename messages_old: %{public}@
Failed to drop index: %{public}@ %{public}@
Failed to create index: %{public}@ %{public}@
Failed to drop copy messages data: %{public}@
Failed to rename new messages: %{public}@
Failed to create new threads table: %{public}@
Failed to drop table %{public}@: %{public}@
Failed to truncate table %{public}@: %{public}@
Failed to drop thread_categories_type_active_user_override_thread_index: %{public}@
Unable to persist rich link with richLinkID: %@ and messageID: %lld to database
Could not find rich link directory, base path is null.
Failed to create Rich Link data directory:
%{public}@
Could not create rich links directory, path is null
Unable to find url for rich link with ID %@
Fetched data: %@ for rich link with richLinkID:%@
Unable to read rich link at URL %@
processing batch of indexable items
Deallocating searchable index
Checking messages.searchable_message for orphaned values
verifying representative sample of items in the datasource are actually indexed
Datasource couldn't verify or Mail didn't fetch any samples
Spotlight found everything from the sample
Spotlight index and Mail database are out of sync, items may be missing or duplicated
Removing corrupt indexes for %lu transactions: %{public}@
Requesting last client state from CSSearchableIndex
CoreSpotlight failed to return our client state (old state: %@)
last client state: %@%@
failed to retrieve last client state: %{public}@
Timed out while fetching client state
-[EDSearchableIndex resume]: %@ (%lld)
Data source updates took too long to return results. Canceling.
Received dataSourceUpdates: %{public}@ throttledDataSourceBatchSize:%lu batchSize:%lu
Data source returned %lu out of %lu requested items to index.
EDSearchableIndexDataSourceUpdates
Changing indexingType for item %@ identifier: %{public}@ from %ld using setNeedsAllAttributesIndexingType
Changing indexingType for item %@ identifier: %{public}@ from %ld using setNeedsAllAttributesIncludingDataDetectionResultsIndexingType
Unexpected changing of indexingType for item %@ identifier: %{public}@ from %ld to %ld
EDSearchableIndexDataSourcePrepare
starting coalescing timer (t=%fs)
stopping coalescing timer
coalescing timer fired
suspending indexing scheduler
resuming indexing scheduler
BatchStartedWithPendingItemCount=%{signpost.description:attribute,public}@
EDSearchableIndexBatchProcessing
BatchAssignedDomnainRemovalCount=%{signpost.description:attribute,public}llu
BatchFinishedWithItemIndexedCount=%{signpost.description:attribute,public}@
scheduling processing of pending items
Clearing %lu items %{public}@ from processingItems
BatchBeginCoreSpotlightBatch
EDSearchableIndexCSProcessing
BatchEndCoreSpotlightBatch
Spotlight failed to index %ld items (transaction=%lld) failed with error: %{public}@
Clearing %lu items from processingItems due to indexing failure
batch of %lu items took %.4gs to index
consuming %lu items out of a potential %lu totalSizeForBatch %lu/%lu new processingItems: %{public}@
Allowing immediate indexing of %lu pending items
EDSearchableIndexCreateSearchableItems
generating searchable items failed: %{public}@
indexing %lu / %lu items, throttled batch size %lu
indexing searchable items failed: %{public}@
removing indexed items for domains {%@}
removing indexed items with identifiers {%@}
Sending spotlight diagnostic request %@
Spotlight diagnostic request failed: %{public}@
spotlight requests to reindex items with identifiers %@
spotlight requests to reindex all items
Deleting %lu items from Spotlight index: %{public}@
Reindexing All Items With Options: %lu
failed to delete all items from domain: %{public}@
Invoking acknowledgement handler
Deleting all items from CSIndex
Invalidating all items greater than: %lld
%p indexItems:%{public}@ fromRefresh:%{BOOL}d i:%{BOOL}d
Index items usage issue - indexing identifiers(s) %{public}@ that were removed
%p dropped item: %{public}@
%p prepared indexItems:%{public}@ fromRefresh:%{BOOL}d i:%{BOOL}d
Requested %lu items to be indexed while inactive
Skipping index of %{public}@ identifier because it is present in _pendingIdentifierRemovals
Requested %lu items to be indexed (new: %lu %{public}@ existing: %{public}@ deferred: %lu preprocess: %lu %{public}@ pending: %lu) fromRefresh: %{BOOL}d
Removing identifiers:%{public}@ fromRefresh:%{BOOL}d
Removing all items for domain: %@
Message IDs - search failed: %{public}@
Mailbox Prediction - Canceling before querying Spotlight
searching spotlight index for %@
Regular query collected snippet hints first value: %@
Mailbox Prediction - Timed out waiting for results from spotlight: %{public}@
Mailbox Prediction - search failed: %{public}@
Mailbox Prediction - Canceling after querying Spotlight
Putting dependent item(s) with identifier %{public}@ %@ into preprocessing list
Finished processing item %{public}@
Skipped processing item - no longer in preprocessingItems %{public}@
Rich link data became available, starting a data source refresh
Reason provider %@ failed to provide dataSourceRefreshReasons
Reason provider %@ failed to provide purgeReasons
Reason provider %@ failed to provide exclusionReasons
Reason provider %@ failed to provide currentReasons
Could not find file type for url %@ error %@
Creating attachment attribute set with displayName %@ contentURL %@ uniqueIdentifier %{public}@ relatedUniqueIdentifier %{public}@
Upgrading item %{public}@ from type:%ld to type:%ld
Skipping body indexing for message %{public}@ due to large message size:%lu
Warning: about to index message with an empty subject. %{public}@
[%{public}@]: Adding data detection results
Removing all items from searchableIndex (waiting: %{BOOL}d needsReindex: %{BOOL}d options: %ld)
All items removed from searchableIndex
Setting needs reindex
Setting object:%@ for key: %@
SearchableIndex is requesting a batch of up to %lu items requiring indexing
Reindex in-progress.  Switching to EDSearchableIndexRebuildTableStateUseRebuildTableQuery state
type=%ld limit=%lu messageCount=%u
EDSearchableIndexPersistenceMessagesToItems
limit=%ld
Generated %lu attachment items from %lu attachment data
Taking too long to find attachmentItems after:%f
EDSearchableIndexPersistenceWhileLoop
Generated %lu rich link items from %lu rich link data
Taking too long to find rich link items after:%f
type=%ld limit=%ld
EDSearchableIndexPersistenceMessagesForIndexing
Reindex complete. Switching to EDSearchableIndexRebuildTableStateUseDefaultQuery state
Reindex requested.  Switching to EDSearchableIndexRebuildTableStateUseRebuildTableQuery state
Clearing existing searchable_attachment entries for message_id %@
SearchableIndex is preparing to index attachments for message with identifier: %{public}@
Setting %lu orphaned searchable_message values to NULL
SpotlightVerificationOrphanedValues=%{public,signpost.telemetry:number1}lu enableTelemetry=YES 
EDSearchableIndexPersistenceOrphanedValues
Inserting attachment items into the searchable_attachments table %@
Inserting rich link items into the searchable_rich_links table %@
Found item count:%lu for attachment indexing
Encountered a reference to a non-existent message in the rich_links table for richLinkID:%{public}@, richLinkPersistentID:%{public}@, messagePersistentID:%{public}@
Encountered a reference to an invalid file in the rich_links table for richLinkID:%{public}@, richLinkPersistentID:%{public}@, messagePersistentID:%{public}@
Error storing searchable data detection results: %@
Data detection result %@ with message %@ was successfully added to the searchable_data_detection_results table
Rich link identifier %@ could not be split up into messageID and rich link ID.
Creating rich link attribute set with rich link ID %@ uniqueIdentifier %{public}@ relatedUniqueIdentifier %{public}@
Initializing scheduler with budgetConfiguration:%{public}@
Configuring %{public}@ actvitity with interval: %lld
Starting scheduling with budgetedItemCountRemaining: %ld
Note: Disabled XPC activity based scheduling.
Note: Automatically enabling maintenance activity indexing.
Failed to transition %{public}@ from state %ld to state %d.
Attempted to begin indexing an activity type (%{public}@) that is already active - marking old ACTIVITY as DONE
XPC Requested deferral of activity %@
Checking for XPC deferral
Failed to transition %{public}@ from state %ld to state %ld.
%{public}@ : %{public}@
verifying searchable index
<%{public}@:%p> did not return a spotlight query. dataSamples.count=%lu transformedDataSamples.count=%lu
Skipping verifyDataSamplesWithCompletionHandler. Protected data unavailable.
No data samples fetched from database. Resetting kDefaultsKeyLastVerifiedMessageID to 0
Verification failed at ratio %f. Performing verification with a larger sample of size %lu
Verification query results empty
Verification failed at ratio: %f. threshold: %f
Failed verification for row:%@ citd:%lld
SpotlightVerificationSamples=%{public,signpost.telemetry:number1}lu SpotlightVerificationResultFailures=%{public,signpost.telemetry:number2}ld SpotlightVerificationFailingRatio=%{public,signpost.description:attribute}f enableTelemetry=YES 
EDSearchableIndexVerifier
Found %lu missing transaction(s)
Failed to query for transaction identifiers
Found all expected transaction identifiers
No transactionIDs were fetched from the database, which implies nothing has been indexed yet. Skipping further verification.
Skipping transaction ID verification. Protected data unavailable
Gathering relevant senders for search
Error occurred when searching for relavant senders: %{public}@
Found %lu relevant senders for search
EmailAddress:%@ bucket is %@
DB result for senders.bucket for EmailAddress:%@ is %@.
Failed to move addresses: %{public}@
Address with ID %llu (sender ID %llu) has no string representation: %{public}@
<nil> address for ID %llu (sender ID %llu)
Unable to find sender for contact identifier: %{public}@
Added new sender (%lld) to bucket %{public}@ with %lu addresses: %{public}@, contact identifier: %{public}@
Failed to add new sender to bucket %{public}@ with %lu addresses: %{public}@, contact identifier: %{public}@, error: %{public}@
Moved sender (%lld) to bucket %{public}@
Failed to move sender (%lld) to bucket %{public}@, error: %{public}@
%{public}@ %lu addresses
Failed to move blocked senders (address ID lookup) to bucket %{public}@: %{public}@, error: %{public}@
Failed to move blocked senders (unblock existing senders) to bucket %{public}@: %{public}@, error: %{public}@
Failed to move blocked senders (block existing senders) to bucket %{public}@: %{public}@, error: %{public}@
Failed to move blocked senders (look up other addresses for existing blocked senders) to bucket %{public}@: %{public}@, error: %{public}@
Failed to move blocked senders (block new senders) to bucket %{public}@: %{public}@, error: %{public}@
Moved blocked senders to bucket %{public}@: %{public}@
Contacts count: %@, addresses count: %lu
Unable to get contact email addresses: %{public}@
Unable to get contacts count: %{public}@
Updating %ld addresses based on sent messages .
Merge Conflict: Handling merge conflict for %{public}@.%{public}@
Merge Conflict:Duplicate Sender: %ld : bucket %ld
Merge Conflict: Existing Sender Sender %ld : Bucket %ld
Merge Conflict: Updating sender bucket to %ld
Merge Conflict: Deleting duplicate sender
Merge Conflict: Successfully resolved conflict
Merge Conflict: Error occured during merge: %{public}@
Merge Conflict: Unsupported merge conflict for %{public}@.%{public}@
Persist send later date (%{public}@) for %lu messages
Failed to update send later for message with id: %lld, error: %{public}@
Successfully updated send later date (%{public}@) for message with id: %lld
Send later alarm time has passed already, but is within the allowed delivery window. Send Later original date : %{public}@
Send later alarm fired. Send Later messages query start date: %{public}@ and end date:%{public}@
Send later alarm fired. Preparing %lu messages
Successfully sent message
Error sending an email from mail: %{public}@, delivery status: %ld
Finished sending send later messages. %lu failed. Next alarm date: %{public}@
Schedule %lu messages for %{public}@
Updated start date: %{public}@
Queried messages count: %lu
Earliest message send later date: %{public}@
Current earliest message send later date:%{public}@ and send later date:%{public}@
After scheduling xpc alarm at: %{public}@
Next alarm date from EDDefaultSendLaterUpdateControllerAlarmDateProvider: %{public}@.
Reset send later next alarm to %{public}@.
After persistence updated. Current next alarm date: %{public}@
Send later alarm needs update for %lu messages. New date:%{public}@
starting listener %@
received a new connection request %@
connection rejected because of missing entitlement
Remote Client Interrupted %@
Remote Client Invalidated %@
Returned more results (%lu) than requested (%lu)
Unable to read server messages with 'cleared' UIDs: %{public}@
Unable to delete server messages with 'cleared' UIDs: %{public}@
Number of deleted rows (%u) does not match server messages previously found (%u).
Unable to look up existing messages based on message-id header: %{public}@
Unable to set UID on server_message: %{public}@
Did not find any rows to update UID on server_message (row id %lld).
Unable to set UID on message: %{public}@
Did not find any rows to update UID on message (row id %lld).
Unable to find label: %lld, %@
%p: fetching %llu UIDs, limit %llu, reverse %{BOOL}d, range count limit %llu, batch limit %llu.
%p: fetching UIDs {%{public}@} with limit %llu
%p: got UIDs {%{public}@}
%p: got more UIDs in batch (%lu) than allowed (%lu)
%p: done.
Error from Suggestions: %{public}@
failed to synchronize store
kvstorage reported quota exceeded
received external KVS change event: %ld, changed keys=%{public}@
unhandled change reason: %ld
stopping re-entrancy for changes to local key %{public}@
syncing setting %{public}@ from %{public}@
Unexpected object set when syncing %{public}@ from %{public}@
Setting %{public}@ was remove remotely
syncing tracking protection setting from %{public}@
skipping syncing tracking protection setting from %{public}@ (not set by user)
skipping syncing tracking protection setting from %{public}@ (unknown value type)
skipping syncing tracking protection setting from cloud to device with no new value
%p[%lu]: Failed to start migration for %lu threads due to wrong state: %lu
%{public}@
%p[%lu]: Starting migration for %lu threads
%{public}@
%p[%lu]: Finished empty migration: %{public}@
%p[%lu]: Canceling migration
%p[%lu]: Resetting migration
%p[%lu]: Migrating batch of %lu threads
%{public}@
%p[%lu]: Finishing migration
%{public}@
%p[%lu]: Skipping migration for thread %{public}@ due to error: %{public}@
%p[%lu]: Failed migration -- unable to add threads
%{public}@
%p[%lu]: Finalized %{public}@ for %lu threads: %{public}@
%p[%lu]: Finished migration after finalizing last %@batch: %{public}@
%p[%lu]: Resuming migration for thread scope %{public}@
%p[%lu]: Added %lu threads to migration for thread scope %{public}@
%p[%lu]: Got more object IDs after migration finished. objects: {%{public}@}; thread scope: {%{public}@}
%p[%lu]: Resetting object IDs %{public}@ after change
%{public}@
%p[%lu]: Resuming migration
%{public}@
%p[%lu]: Got changed object IDs after migration finished: %{public}@
%{public}@
%p[%lu]: Deleting %lu threads from migration 
%{public}@
%p[%lu]: Deleting %{public}@
%{public}@
%p[%lu]: Finishing migration after deleting last batch: %{public}@
%p[%lu]: Got deleted object IDs after migration finished: %{public}@
%{public}@
%p[%lu]: Failed migration -- unable to delete threads
%{public}@
%p[%lu]: %{public}@ for %lu threads due to generation change (to %lu)
%p[%lu]: %{public}@ for %lu threads due to wrong state: %lu
Migration in progress for threadscope: %{public}@
Migration requested for threadscope: %{public}@
Unable to find database ID for thread: %{public}@
Unable to find display message for thread: %{public}@
Unable to find subject from display message %{public}@ for journaled thread %{public}@
Thread has no subject: %{public}@
Thread has no sender: %{public}@
Unable to return thread for objectID %{public}@ due to error: %{public}@
Looking up thread before thread: %{public}@
Unable to form comparison expression to look up position for thread: %{public}@, sort descriptors: %{public}@
Looking up next existing threads before %lu threads: %{public}@
Cannot generate expression for unsupported sort descriptors: %{public}@
No conversation ID for thread: %{public}@
Unable to find thread scope database ID for thread: %{public}@
Scheduling recomputation for %{public}@: %{public}@
Recomputing %lu threads: %{public}@
Successfully recomputed %lu threads: %{public}@
Failed to recompute %lu threads: %{public}@
Found %u mailbox object IDs for actived account.
Thread scope %{public}@ does not have a valid mailbox scope
Persistence is adding %lu messages
Adding %@thread: %{public}@
Changing %@thread (new messages): %{public}@
key paths: %{public}@
Persistence did add %u messages
count=%u 
ThreadPersistenceDidAddMessages
Persistence is setting deleted flag for %lu messages: %{public}@
Persistence is unsetting deleted flag for %lu messages: %{public}@
Persistence is changing flags for %lu messages: %{public}@
Changing thread (flag change): %{public}@
key paths: %{public}@
Persistence did change flags for %lu messages
Persistence is deleting %lu messages
Changing thread (deleted messages): %{public}@
key paths: %{public}@
Persistence did delete %lu messages
No thread database ID: %{public}@
Deleting thread: %{public}@
Persistence did delete all messages in mailbox %{public}@
Persistence is changing conversation ID for %lu messages from %lld
Adding thread (conversation change): %{public}@
Changing thread (conversation change): %{public}@
key paths: %{public}@
Persistence did change global-message-id for message
%{public}@
Changing thread (readLaterDate change): %{public}@
Persistence did update read later date for %u messages
Changing thread (follow up): %{public}@
key paths: %{public}@
Persistence did update follow up for %u messages
Changing thread (displayDate change): %{public}@
Persistence did update display date for %u messages
Changing thread (hasAttachments change): %{public}@
Persistence did update properties for message: %{public}@
Thread with conversationID %lld display message updated
NOT predicate should only have one subpredicate: %@
Attempting to finish migration for a thread scope which doesn't exist: %{public}@
Migration finished for threadscope - %{public}@
Unable to get oldest thread object ID for mailbox: %{public}@
Thread scope is inconsistent - conversation id %lld is empty and has null display message: %{public}@
Thread scope is inconsistent - conversation id %lld has null display message: %{public}@
Thread scope is inconsistent - conversation id %lld is empty: %{public}@
Thread scope is inconsistent - conversation id %lld has unknown consistency issue: %{public}@
Thread scope is inconsistent - expected %lu threads but %lu threads exist: %{public}@
Thread scope is consistent: %{public}@
Adding thread %lld with %u messages. Journaled: %{BOOL}d, replace: %{BOOL}d
Failed to add thread: %{public}@
Updating thread %lld with %u messages. Journaled: %{BOOL}d
Failed to update thread: %{public}@
Failed to get current display message sender.
Failed to get date of newest read / current display messages: %{public}@
Failed to update thread display message: %{public}@
Failed to add thread mailbox: %{public}@
Added %u mailbox(es) for thread DB ID %lld.
Failed to get message senders for thread.
Failed to add sender: %{public}@
Added/changed %u sender(s) for thread DB ID %lld.
Failed to get current display message sender: %{public}@
Failed to get actual display message sender: %{public}@
Failed to clear sender priority: %{public}@
Failed to set the sender priority: %{public}@
Failed to get message receipients for thread: %{public}@
Failed to add recipient: %{public}@
Added/updated %u type %u recipient(s) for thread DB ID %lld.
Failed to get message row IDs for thread: %{public}@
Found no rows for thread DB ID %lld.
Unable to create empty temp_persisted_messages: %{public}@
Found %u rows {%{public}@} for thread DB ID %lld.
Failed to drop temp_persisted_messages temp view: %{public}@
Failed to drop temp_thread_scope_message temp view: %{public}@
%p: thread scope state: use in-memory
%p: thread scope state: use pre-computed
%p: thread scope state: perform migration
%p: Creating implementations for thread query handler; query: {%{public}@}, observation identifier: {%{public}@}
%p: Replacing in-memory query handler %p -> %p
%p Keeping existing in-memory query handler %p
%p: Replacing pre-computed query handler %p -> %p
%p: Keeping existing pre-computed query handler %p
%p: Replacing thread migrator %p -> %p
%p: Creating new thread migrator %p
%p: Removing thread migrator %p
%p: Notifying observer about restart.
%p: Migrator %p will be started by in-memory query handler %p.
%p: Thread migrator %p did complete.
%p: Unknown thread migrator %p did complete.
%p: ID %{public}@ was updated.
%p: Observer callback from unknown (old?) underlying handler.
%p: ID %{public}@ matched added object IDs before.
%p: ID %{public}@ matched added object IDs after.
%p: ID %{public}@ matched moved object IDs before.
%p: ID %{public}@ matched moved object IDs after.
%p: ID %{public}@ matched changes for object IDs.
%p: ID %{public}@ matched deleted object IDs.
%p: ID %{public}@ finished initial load.
%p: Starting migrator %p.
%p: ID %{public}@ finished remote search.
%p: ID %{public}@ replaced existing object ID.
%p: ID %{public}@ will restart.
%p: ID %{public}@ matched oldest items updated for mailboxes.
Thread scope has unsupported filter predicate: %{public}@
Adding pre-computed thread scope: %{public}@ -> %{public}@
Evicting %lu-%lu thread scopes (after adding %luth thread scope) from: %{public}@
Setting needsUpdate=%u for thread scope: %{public}@
Setting lastViewedDate=%{public}@ for thread scope: %{public}@
Resetting all pre-computed thread scopes
Resetting pre-computed thread scope: %{public}@
Resetting pre-computed thread scopes for mailbox scope: %{public}@
Loaded pre-computed thread scopes: %{public}@
Evicting %lu-%lu thread scopes (after initializing %lu thread scopes) from: %{public}@
Eviction score for %llu: %f (%llu count, %f time)
Adding %@ for eviction: below min
Adding %@ for eviction: score below threshold
Attempting to evict thread scopes with database IDs: %{public}@
Evicting thread scope with database ID: %llu -> %{public}@ = %{public}@
Last viewed %f seconds in the future for thread scope %lld: %{public}@
Setting conversation flags %llu for conversations: %@
delete %@ (conversationID: %lld)
modifying %@ (conversationID: %lld): flags = %llu
found %lu message ids for conversation
creating new cloud entry %@: %@
Synchronizing with cloud store %@: %@
Merging server changes: %@
Server change. Clearing conversation flags for conversation: %lld
Server change. Updating conversation flags for conversation: %lld. Old flags %llu new flags %llu
Server change. Setting conversation flags for conversation: %lld
found conversation %lld
could not find a conversation that matched those message ids
Updating message ids for conversation %lld
Synced conversation object is not a dictionary
Finished merging server changes
Pruning database. Purging oldest entries %d
deleting entry with flag value of zero: %@
Conversation Remote Storage %{public}@ did change entries %@
over quota: pruning database
Perform daily export for changed conversations: %@
Removing orphaned entry from unknwown leys set: %@
Not showing notification for message: %{public}@ because it is a server search result.
Not showing notification for message: %{public}@ because it is marked as read.
Not showing notification for message: %{public}@ because it is from a blocked sender.
Not showing notification for message: %{public}@ because it is in a muted conversation.
Not showing notification for message %{public}@ because it is more than a week old
Message %{public}@ has a nil mailbox identifier
registering for VIP kvstore at: %@
number of VIPs in current store: %lu
%@: current store contents: %{public}@
save VIPs with count %lu
save new VIPs with count %lu
remove VIPs with identifiers %@
Failed to write serialized entries: %{public}@
Failed to serialize %lu entries: %{public}@
VIP store after writing to cloud has %lu entries
VIP store contents after writing to cloud: %{private}@
VIP kvstore changed, reason: %{public}@
%lu keys changed
keys changed: %{public}@
Successfully synchronized KV Store
Failed to synchronize KV Store
local store has %lu VIPs before updating from cloud
local VIPs before updating from cloud: %{private}@
local store has %lu VIPs after updating from cloud
local VIPs after updating from cloud: %{private}@
merge VIPs from cloud with count %lu and local with count %lu
merge VIPs from cloud: %@ and local: %@
could not load  FindRichLinkMetadata.js: %{public}@
Scheduling data detection work for message %@
Starting data detection work for message %@
Parsing remote content links timed out
Data detection timed out
Data detection for message %@ timed out
Extracting rich links for message %@ timed out
Parsed NumberOfRemoteLinks=%{public,signpost.telemetry:number1}lu from SizeOfBody=%{public,signpost.telemetry:number2}lu enableTelemetry=YES 
EDWebContentParserLinkParsing
Found NumberOfDataDtectionResults=%{public,signpost.telemetry:number1}lu from SizeOfBody=%{public,signpost.telemetry:number2}lu enableTelemetry=YES 
EDWebContentParserDataDetection
Data detection for message %@ finished.
Found data detection results: %@
Found rich link with title: %@ and url: %@
[WebBundle] %@
Waiting for updates
Schedule activity with %llds delay
Failed to set activity to done
Update timelines failed: %{public}@
Successfully updated widget (%ld)
Persistence did add messages
Persistence did change flags: %{public}@
Persistence did change flag which is not relevant: %{public}@
Generating initial list.
Checking for existing file.
Existing file found.
Could not load from url.
Sender list is empty, will generate a new one.
No existing file will generate a new one
Writing to file.
Wrote wrong number of bytes.
Could not open fd.
Device unlocked. Will try write.
CloudStorage: Moving Sender :%{public}@ to Bucket: %ld User Initiated: %d
CloudStorage: Moving %lu addresses to Bucket: %ld User Initiated: %d
CloudStorage: Moving to bucket %ld is invalid, treating as removal for %lu addresses
CloudStorage: No address string found for %{public}@
CloudStorage: Removing Sender: %{public}@
CloudStorage: Removing %lu addresses
CloudStorage: Removinging all objects!
CloudStorage: Remote change with %lu changed items, %lu deleted items
CloudStorage: Handling merge for changed keys %{public}@
CloudStorage: Merging key %{public}@
CloudStorage: Merge for Key: %{public}@. Taking local change
CloudStorage: Merge for Key: %{public}@. Taking remote change
CloudStorage: Merge: %{public}@, no local object
CloudStorage: Merge: %{public}@, Local is user initialed
CloudStorage: Merge: %{public}@, Remote is user initialed
CloudStorage: Merge: %{public}@, Neither are user initiated, taking the highest priority
CloudStorage: Merge: %{public}@, Both user initialted. Taking based on time: Local Change Time: %{public}@. Remote Change Time: %{public}@
CloudStorage: Merge: %{public}@, Cloud object deleted, removing key
Protected database not available. Listening for availability
Resetting storage. Will remove all user initiated senders and reset cloud storage
Finished upgrade. Marking complete
Protected database became available, will try again
Unable to find object ID to insert before: %{public}@
Unable to find object ID to insert after: %{public}@
Unable to find object ID to replace: %{public}@
Invalid object ID type, expected %{public}@, got %{public}@
Could not load EDImportantMLModel.mlmodelc in the bundle resource
Could not load EDPromotionMLModel.mlmodelc in the bundle resource
MbP?
4@ N
softlink:r:path:/System/Library/Frameworks/LinkPresentation.framework/LinkPresentation
EDAccount
ECMailAccount
NSObject
NSCopying
ECAccountPropertyProviding
EDReceivingAccount
EDDeliveryAccount
EDAccountECAccountTransformer
EDAccountRepository
EFLoggable
EDAccountChangeHookResponder
EDActivityPersistence
EDActivityRegistry
EDActivityHookResponder
EMActivityRegistryInterface
EDAddBrandIndicatorsTableUpgradeStep
EDAddDisplayDateColumnUpgradeStep
EDTableUpgradeStep
EDAddMessagesBrandIndicatorColumnUpgradeStep
EDAddMessagesDeletedDateReceivedIndexUpgradeStep
EDAddMessagesFollowUpColumnUpgradeStep
EDAddMessagesSearchableMessageColumnUpgradeStep
EDAddReadLaterTableUpgradeStep
EDAddRebuildTableUpgradeStep
EDAddRemoteContentLinksTableUpgradeStep
EDAddRichLinkTableUpgradeStep
EDAddSearchableDataDetectionResultsTableUpgradeStep
EDAddSendersTableUpgradeStep
EDAddSendLaterTableUpgradeStep
EDAddThreadTablesUpgradeStep
EDAddUnsubscribeFlagsStep
EDAssetDownloadScheduler
_EDAssetDownloadSchedulerContinuation
EDAssetDownloadSchedulerContinuation
EDAttachmentMetadata
EDAttachmentPersistence
EDAttachmentPersistenceManager
EDBIMIManager
EDBiomeInteractionEventLog
EDInteractionEventLog
EDCachingMailboxPredictor
EDMailboxPredictor
EDCategorySubsystem
EDClientResumer
EDProtectedDataReconciliationHookResponder
EFContentProtectionObserver
EDResumable
EDClientState
EDClientStateReporting
EDCloudKitControl
CoreDataProperties
EDCloudMirroringPersistentStore
EDConversationDailyCloudExportActivityManager
EDConversationDailyiCloudExporter
EDConversationInfo
EDConversationMultipleRemoteStorage
EDConversationRemoteStorageDelegate
EDConversationRemoteStorage
EDConversationPersistence
EDUbiquitousConversationManagerDelegate
EDConversationDailyCloudExporterDelegate
EDPersistenceDatabaseSchemaProvider
EDConversationSubscriptionProvider
EDConversationPruningActivityManager
EDConversationRemoteCloudKitStorage
NSFetchedResultsControllerDelegate
EDConversationRemoteKVSStorage
EDDaemonInterfaceFactory
EDDataDetectionPersistence
EDPersistenceDatabaseProtectedSchemaProvider
EDMessageChangeHookResponder
EDDiagnosticInfoGatherer
EMDiagnosticInfoGathererInterface
_MSTTLReference
EDDifferentialPrivacyReporter
EDMessagePersistence
_EMDistantContentRepresentation
EDFetchController
EDGmailLabelPersistence
EDGroupedSenderQueryHandler
EDMessageQueryHelperDelegate
_EDGroupedSenderList
EDHeuristicsMailboxPredictor
EDiCloudAliasSupport
EDInMemoryThread
EDInMemoryThreadQueryHandler
EMCollectionItemIDStateCapturerDelegate
EDInteractionEvent
EDInteractionEventLogLegacyPersistentBitsProvider
EDInteractionEventLogMultiplexer
EDInteractionEventLogSaltProvider
_EDUserActionState
EDInteractionLogger
EDMessageDeliveryHookResponder
EMInteractionLoggerInterface
EDListUnsubscribeHandler
EDLocalActionPersistence
EDMailboxAction
EDMailboxActionPersistence
EDMailboxPersistence
EDMailboxProviderDelegate
EMMailboxTypeResolver
EDMailboxPredictionController
EDMailboxProvider
EDMailboxRepository
EDMailDropMetadataGenerator
WKNavigationDelegate
EDMailDropWebViewScriptHandler
WKScriptMessageHandler
EDMailDynamicDataAsset
EDMessageActionHandler
MEAppExtensionsObserver
EDMessageActionProvider
EDMessageAttachmentMetadata
EFPubliclyDescribable
_EDMessageChangeManagerFlagChange
EDMessageChangeManager
EDMessageCountQueryHandler
EFListStateCapturerDelegate
EDMailboxChangeHookResponder
EMMailboxChangeObserver
EFCancelable
_EDMailboxServerCount
EDMessageDataLayoutManager
EDMessageListItemPredicates
EFSignpostable
EDMailboxPredictionQueryAdapter
EDMessageObjectIDToDatabaseIDConverter
EDMessagePersistenceStatistics
EDMessageQueryEvaluator
EDMessageQueryHandler
_EDMessageItemIDCollector
EDMessageQueryHelper
EDRemindMeNotificationControllerObserver
EDRemoteSearchDelegate
EDSenderBucketChangeHookResponder
EDMessageQueryHelperMessageSource
EDMessageQueryParserObject
EDMessagePredicateParser
EDMessageComparisonPredicateParser
EDMessageCompoundPredicateParser
EDMessageQueryParser
EDMessageQueryTransformer
EDMessageRepository
EDThreadQueryHandlerDelegate
EMMessageRepositoryInterface
EDReconciliationQueryProvider
_EDPartitionedObjectIDs
EDMessageRepositoryQueryHandler
_EDMessageDuplicateInfo
EDMessageTransformer
EDMigrateBlockedSenderEnabledToBlockedSenderActionEnumUpgradeStep
EDMigrateUserDefaultsUpgradeStep
EDNonAcceptingServer
NSXPCListenerDelegate
EDOutgoingMessageRepository
EMOutgoingMessageRepositoryInterface
EDPBGeneratedExtensions
EDPETMessageFrameTypeIntrospectable
EDPBDataSetters
EDPBBaseMessageFields
EDPBInteractionEvent
EDPBInteractionEventAppBackground
EDPBInteractionEventAppLaunch
EDPBInteractionEventAppResume
EDPBInteractionEventCategoryInferred
EDPBInteractionEventCategoryMarked
EDPBInteractionEventFlagChanged
EDPBInteractionEventForwardDraftStarted
EDPBInteractionEventForwardSent
EDPBInteractionEventHeader
EDPBInteractionEventLinkClicked
EDPBInteractionEventMarkedMuteThread
EDPBInteractionEventMessageCopied
EDPBInteractionEventMessageFetched
EDPBInteractionEventMessageMoved
EDPBInteractionEventMessageSent
EDPBInteractionEventMessageViewEnd
EDPBInteractionEventMessageViewStart
EDPBInteractionEventReadChanged
EDPBInteractionEventReplyDraftStarted
EDPBInteractionEventReplySent
EDPBMessageData
EDPBMessageDataIDOnly
EDPBMessageHeaders
EDPBModelFeaturesImportant
EDPBModelFeaturesPromotion
EDPersistedMessageQueryIterator
EDPersistence
EDPersistenceDatabase
EDPersistenceDatabaseConnectionPoolDelegate
EDPersistenceDatabaseConnectionDelegate
EDPersistenceDatabaseConnection
EDPersistenceDatabaseConnectionPool
_EDPersistenceDatabaseConnectionWrapper
EDPersistenceDatabaseGenerationWindow
EDPersistenceDatabaseJournal
EDPersistenceDatabaseJournalManager
EDPersistenceDatabaseSchema
EDPersistenceForeignKeyPlaceholder
EDPersistenceAssociationPlaceholder
EDCloudStorageChangeHookResponder
EDDatabaseChangeHookResponder
EDMessageReadHookResponder
EDSearchableIndexHookResponder
EDThreadChangeHookResponder
EDBrandIndicatorChangeHookResponder
EDPersistenceHookRegistry
EDPersonaPersistenceLayoutManager
EDPETBatchedWrapper
EDPETInteractionEvent
EDPETInteractionEventLog
EDPBHasher
EDPETQuotaReachedEvent
EDPETSubmittedEvent
EDPopulateSendersTableMigrationStep
EDPrecomputedThreadQueryHandler
_EDThreadPositionChangeSet
EDProtectedDatabasePersistence
EDQueryCreator
EDReadLaterCloudStorageChangeElement
EDReadLaterCloudStorage
EMUbiquitouslyPersistedDictionaryDelegate
EDReadLaterCloudStorageDateProvider
EDReadLaterPersistence
EDReadLaterProvider
DefaultEDRemindMeNotificationControllerAlarmDateProvider
EDRemindMeNotificationControllerAlarmDateProvider
EDRemindMeNotificationController
EDRemindMeNotificationControllerEventDelegate
EDRemoteClient
EMDaemonInterfaceXPC
EDRemoteClientResumer
EDRemoteContentCacheConfiguration
EDRemoteContentManager
EDRemoteContentPersistence
EDRemoveUnusedSchemaTableUpgradeStep
EDRenameThreadsTableUpgradeStep
EDRichLinkData
EDRichLinkPersistence
EDSearchableIndex
CSSearchableIndexDelegate
EDSearchableIndexVerifierDataSource
EDSearchableIndexSchedulable
EMSearchableIndexInterface
_EMSearchableIndexResultKey
_EMSearchableIndexPendingRemovals
EDSearchableIndexAttachmentItem
EDIndexableItem
EDSearchableIndexAttachmentItemMetadatum
EDSearchableIndexAttachmentItemMetadatumBuilder
EDSearchableIndexBudgetConfiguration
EDSearchableIndexClientState
EDSearchableIndexItem
EDIndexableMailbox
EDSearchableIndexManager
EDSearchableIndexPendingItem
EDSearchableIndexPersistenceAttachmentDatum
EDSearchableIndexPersistenceRichLinkDatum
EDSearchableIndexPersistence
EDSearchableIndexDataSource
EDSearchableIndexRichLinkItem
EDSearchableIndexRichLinkItemMetadatum
EDSearchableIndexRichLinkItemMetadatumBuilder
EDSearchableIndexScheduler
EDSearchableIndexSchedulableDelegate
EDSearchableIndexSubjectTester
EDSearchableIndexTesting
EDSearchableIndexUpdates
EDSearchableIndexVerifier
EDSearchableIndexVerificationData
EDSearchableMessagesIndexReindexTypeUpgradeStep
EDSenderPersistence
EDProtectedDatabasePersistenceReconciliationMergeHandler
EDSenderRepository
EDSendLaterPersistence
EDDefaultSendLaterUpdateControllerAlarmDateProvider
EDSendLaterUpdateControllerAlarmDateProvider
EDSendLaterUpdateController
EDServer
EDServerRemoteClientsProvider
EDServerMessagePersistenceFactory
EDServerMessagePersistence
EDExistingMessageWithMessageIDHeader
EDSkyAddMessageAttachmentsAndMigrateAttachmentsTableUpgradeStep
EDSmartSortSuggestionsInterface
EDSubjectTokenizer
EDSyncableSettings
EDTableMetadataPersistence
EDTaskScheduler
EDThreadMigrator
_EDThreadMigrationState
EDThreadPersistence
EDThreadScopeManagerDataSource
_EDThreadPersistence_ThreadMessages
_EDThreadPersistence_PersistedThread
_EDThreadPersistence_ThreadScope
_EDThreadPersistence_StatementCache
_EDThreadPersistence_SQLHelper
_EDWrappedMessage
_EDLazyWrappedMessage
_EDThreadQueryUnderlyingHandlers
EDThreadQueryHandler
EDThreadMigratorDelegate
EMMessageListItemQueryResultsObserver
EDThreadReloadSummaryHelper
EDThreadScopeManager
_EDThreadScopeInfo
EDTransactionService
EDUbiquitousConversationManager
EDUpdateThrottler
EDUserNotificationFilter
EDUserNotificationMailboxCutoffController
EDVIPManager
EMVIPManager
EMVIPReader
EDVIPManagerProxy
EMVIPManagerInterface
EDVisibleMessagesReloadRegistry
ECWebContentObserver
EDWebContentParser
EDWebContentParserState
EDWebContentParserResults
EDWidgetUpdateController
MUIBucketEphemeralSenderList
MUIBucketSenderCloudStorage
EMUbiquitouslyPersistedDictionaryDelegate_Private
MUIBucketSendersCloudStorageUpgrader
MUIBucketUnscreenedSendersQueryHandler
EDAdditions
EDImportantMLModelInput
MLFeatureProvider
EDImportantMLModelOutput
EDImportantMLModel
EDPromotionMLModelInput
EDPromotionMLModelOutput
EDPromotionMLModel
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
copyWithZone:
accountPropertyForKey:
emailAddressStrings
hostname
setHostname:
password
setPassword:
identifier
systemAccount
T@"NSArray",R,C,N
T@"NSString",C,N
T@"NSString",R,C,N
T@"ACAccount",R,N
canAuthenticateWithCurrentCredentials
hasPasswordCredential
savePersistentAccount
altDSID
statisticsKind
primaryiCloudAccount
isActive
displayName
setDisplayName:
username
TB,R,N
transformAccount:
deliveryAccount
setDeliveryAccount:
mailboxForType:
containsMailboxWithURL:
isManaged
sourceIsManaged
emailAddresses
smtpIdentifier
isLocalAccount
shouldArchiveByDefault
rootMailbox
T@"NSArray",R,N
T@"<ECMailbox>",R,N
transformReceivingAccount:
maximumMessageBytes
TQ,R,N
transformDeliveryAccount:
initWithRepresentedObjectID:
setUsername:
setStatisticsKind:
setSourceIsManaged:
setEmailAddresses:
setShouldArchiveByDefault:
setPrimaryiCloudAccount:
setIsLocalAccount:
initWithObjectID:name:hostname:builder:
setMaximumMessageBytes:
transformedValueClass
allowsReverseTransformation
transformedValue:
UTF8String
init
registerAccountChangeHookResponder:
arrayWithObjects:count:
addValidSortDescriptorKeyPaths:forTargetClass:
accountsProvider
mailAccounts
transformAccounts:
addObject:
removeObject:
addCancelationBlock:
allAccounts
count
ef_filter:
transformer
ef_map:
copy
countByEnumeratingWithState:objects:count:
accountsAdded:
accountsRemoved:
accountsChanged:
T@"NSObject<OS_os_log>",R
accountBecameActive:
accountBecameInactive:
initWithAccountsProvider:hookRegistry:
registerObserver:completionHandler:
allAccountsWithCompletionHandler:
setTransformer:
setAccountsProvider:
hookRegistry
setHookRegistry:
.cxx_destruct
_observers
_lock
_transformer
_accountsProvider
_hookRegistry
T@"EDAccountECAccountTransformer",&,N,V_transformer
T@"<EDAccountsProvider>",&,N,V_accountsProvider
T@"EDPersistenceHookRegistry",W,N,V_hookRegistry
allValues
isEqualToActivityWithType:userInfo:
objectID
setObject:forKeyedSubscript:
initWithActivityType:userInfo:
removedActivityWithID:
startedActivity:
objectForKeyedSubscript:
finished
finishWithError:
needsPersistentHistory
activityWithID:finishedWithError:
setUserInfoObject:forKey:
activityWithID:setUserInfoObject:forKey:
setCompletedCount:totalCount:
activityWithID:setCompletedCount:totalCount:
initWithHookResponder:
startActivityOfType:userInfo:
currentActivities
activityHookResponder
setActivityHookResponder:
_currentActivities
_activityHookResponder
T@"<EDActivityHookResponder>",&,N,V_activityHookResponder
registerActivityHookResponder:
containsObject:
em_internalErrorWithReason:
numberWithLongLong:
registerActivityObserver:completion:
initWithHookRegistry:activityPersistence:
activityPersistence
_activityPersistence
T@"EDActivityPersistence",R,N,V_activityPersistence
T@"EDPersistenceHookRegistry",R,N,V_hookRegistry
sqlDB
_brandIndicatorsTableSchema
definitionWithDatabaseName:
textColumnWithName:collation:nullable:
blobColumnWithName:nullable:
integerColumnWithName:nullable:defaultValue:
initWithName:rowIDType:columns:
addUniquenessConstraintForColumns:conflictResolution:
addIndexForColumns:
runWithConnection:databaseName:
runWithConnection:
columnExists:inTable:type:
executeStatementString:errorMessage:
_remoteContentLinksTableSchema
integerColumnWithName:nullable:
sendersTableSchema
senderAddressesTableSchema
columnForName:
setAsForeignKeyForTable:onDelete:onUpdate:
initWithTables:
initWithName:rowIDType:rowIDAlias:columns:
schema
T@"EFSQLSchema",R,N
T@"EFSQLTableSchema",R,N
threadScopesTableSchema
threadsTableSchema
threadMailboxesTableSchema
threadSendersTableSchema
threadRecipientsTableSchema
columnExpression
isNotNull
isNull
initWithExpressions:
addCheckConstraintForExpression:
name
initWithTableName:columnNames:where:unique:
addIndex:
initWithName:columns:primaryKeyColumns:
_schemaWithMessagesTable:mailboxesTable:conversationsTable:
initWithIdentifier:regularInterval:failureInterval:backOffFactor:handler:
stringWithFormat:
standardUserDefaults
_lastFailureIntervalKey
removeObjectForKey:
_regularInterval
_xpcCriteriaForInterval:
_nextFailureInterval
setInteger:forKey:
_identifier
integerForKey:
setScheduler:
setActivity:
_queue
_handler
_failureInterval
_backOffFactor
initWithIdentifier:handler:
_rescheduleAfterSuccessActivity:
_rescheduleAfterFailureActivity:
_stopSchedulingActivity:
activityHandlerBlock
set_identifier:
set_lastFailureIntervalKey:
set_handler:
set_regularInterval:
set_failureInterval:
set_backOffFactor:
set_queue:
T@"NSString",C,N,V_identifier
T@"NSString",C,N,V_lastFailureIntervalKey
T@?,C,N,V_handler
Tq,N,V_regularInterval
Tq,N,V_failureInterval
Tq,N,V_backOffFactor
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
T@?,R,N
scheduler
activity
rescheduleAfterSuccess
rescheduleAfterFailure
stopScheduling
_scheduler
_activity
T@"EDAssetDownloadScheduler",W,N,V_scheduler
T@"NSObject<OS_xpc_object>",&,N,V_activity
initWithAttachmentID:attachmentHash:nameOnDisk:size:downloadDate:viewCount:lastViewed:viewCountByTapped:
attachmentID
attachmentHash
nameOnDisk
downloadDate
size
viewCount
lastViewed
viewCountByTapped
componentsJoinedByString:
initWithAttachmentHash:nameOnDisk:size:downloadDate:
initWithAttachmentID:nameOnDisk:
setAttachmentID:
_attachmentID
_attachmentHash
_nameOnDisk
_size
_downloadDate
_viewCount
_lastViewed
_viewCountByTapped
T@"NSNumber",&,N,V_attachmentID
T@"NSString",R,N,V_attachmentHash
T@"NSString",R,N,V_nameOnDisk
T@"NSNumber",R,N,V_size
T@"NSDate",R,N,V_downloadDate
T@"NSNumber",R,N,V_viewCount
T@"NSDate",R,N,V_lastViewed
T@"NSNumber",R,N,V_viewCountByTapped
attachmentsTableName
attachmentTableSchema
messageAttachmentTableSchema
messageGlobalDataTableName
initWithColumn:tableName:onDelete:onUpdate:
dataWithLength:
bytes
length
mutableBytes
ef_hexString
dataUsingEncoding:
hashForAttachmentData:
date
initWithTable:conflictResolution:
database
executeInsertStatement:error:
handleError:message:
lastInsertedDatabaseID
performWriteBlock:
globalMessageID
isEqualToNumber:
mimePartNumber
remoteURL
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
absoluteString
currentDevice
isInternal
partiallyRedactedStringForString:
fullyRedactedStringForString:
initWithTable:
column:
equalTo:
setWhereClause:
executeUpdateStatement:error:
allColumns
messageAttachmentsTableName
initWithResult:table:
setWhere:
databaseIDValue
executeSelectStatement:withBlock:error:
performReadBlock:
initWithTable:where:
executeDeleteStatement:error:
combined:
numberValue
stringValue
URLWithString:
initWithGlobalMessageID:name:mimePart:attachmentID:remoteURL:
setLimit:
leftOuterJoin:sourceColumn:targetColumn:
globalMessageIDColumnNameInMessageAttachmentTable
attachmentIDColumnNameInMessageAttachmentsTable
attachmentColumnNameHash
tablesAndForeignKeysToResolve:associationsToResolve:
hashForAttachmentName:
initWithDatabase:
insertAttachmentMetadata:
insertMessageAttachmentMetadata:
updateAttachmentIDForMessageAttachment:
attachmentsForGlobalMessageIDs:
globalMessageIDsForAttachment:
removeAttachments:
messageAttachmentExistsForGlobalMessageID:mimePartNumber:hasAttachmentEntry:
messageAttachmentExistsForGlobalMessageID:remoteURL:hasAttachmentEntry:
messageAttachmentMetadataForMessageID:
uniqueAttachmentDataForHash:
attachmentMetadataForMessage:mimePartNumber:
attachmentMetadataForMessage:remoteURL:
attachmentMetadataForMessageAttachmentID:
setDatabase:
_database
T@"EDPersistenceDatabase",&,N,V_database
URLByAppendingPathComponent:isDirectory:
preferredFilename
filename
pathExtension
setPreferredFilename:
setFilename:
attachmentPersistence
_updateFileWrapperNameToStaticFileName:
isDirectory
regularFileContents
initWithContentsOfURL:
fileAttributes
defaultManager
path
attributesOfItemAtPath:error:
_writeAttachment:toDirectory:outError:
URLByAppendingPathComponent:
_moveAttachmentAtURL:toURL:outError:
relativePath
fileExistsAtPath:
_persistAttachmentWithWrapper:orURL:attachmentMetadata:basePath:error:
ef_publicDescription
attachmentURLForGlobalMessageID:mimePartNumber:basePath:
attachmentURLForGlobalMessageID:remoteURL:basePath:
_writeFileWrapper:toURL:outError:
attachmentDirectoryURLWithBasePath:
isRegularFile
_persistAndUpdateAttachmentPersistenceTableFromFileWrapper:orURL:attachmentMetadata:basePath:shouldUpdateAttachmentID:
_tempDirectoryForArchiveAttachmentsWithParentDirectory:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
relativeString
stringByRemovingPercentEncoding
initWithURL:options:error:
removeItemAtURL:error:
isEqualToString:
baseMailDirectory
baseAccountDirectoryForPersonaIdentifier:
enumerateKeysAndObjectsUsingBlock:
URLByDeletingLastPathComponent
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
checkResourceIsReachableAndReturnError:
moveItemAtURL:toURL:error:
domain
code
writeToURL:options:originalContentsURL:error:
messagePersistence
compressDirectory:shouldCancel:error:
compressFile:error:
UUID
account
baseAccount
personaIdentifier
setWithArray:
allObjects
currentThread
threadDictionary
_accountIdentifiersByAttachmentIDs:
persistedMessageIDsForGlobalMessageIDs:
persistedMessagesForDatabaseIDs:requireProtectedData:temporarilyUnavailableDatabaseIDs:
removeDatabaseAttachments:
removeFilesystemAttachmentsByAccountIdentifier:
willDeleteAttachmentsForMessages:
isDeletingMessages:
initWithDatabase:messagePersistence:
persistAttachment:attachmentMetadata:basePath:error:
persistAttachmentWithURL:attachmentMetadata:basePath:error:
persistAttachmentMetadata:
attachmentDirectoryURLForMessageID:basePath:
attachmentURLForMessageAttachmentID:basePath:
persistenceWillDeleteMessages:
persistenceIsDeletingMessages:generationWindow:
setMessagePersistence:
tempDirectoryForArchiveAttachments
setTempDirectoryForArchiveAttachments:
_attachmentPersistence
_messagePersistence
_tempDirectoryForArchiveAttachments
T@"EDAttachmentPersistence",R,N,V_attachmentPersistence
T@"EDMessagePersistence",&,N,V_messagePersistence
T@"NSURL",&,N,V_tempDirectoryForArchiveAttachments
serialDispatchQueueSchedulerWithName:qualityOfService:
cancel
dealloc
downloadScheduler
performSyncBlock:
null
numberWithInt:
result
numberWithUnsignedInteger:
valueForPropertyType:property:
location
evidenceLocation
indicator
indicatorHash
hashAlgorithm
numberWithBool:
dictionaryWithObjects:forKeys:count:
headers
authenticationResultsForHeaders:
encodedHeaders
bimiDataForHeaders:
preferenceEnabled:
verificationContextForMessageData:error:
dkimSignatureHeaders
signingDomainIdentifier
bodyLength
objectAtIndexedSubscript:
authenticationServiceIdentifier
initWithObjects:
addBrandIndicatorWithData:
initWithFirst:second:
firstStatementForMethod:
initWithString:
ef_urlByAddingSchemeIfNeeded
_lp_highLevelDomain
urlSession
undownloadedBrandIndicatorsWithLimit:
requestWithURL:
setBrandIndicator:forURL:
removeBrandIndicatorForURL:
dataTaskWithRequest:isSynthetic:allowProxying:failOpen:completionHandler:
resume
performBlock:
initWithBytes:length:
base64EncodedStringWithOptions:
initWithMessagePersistence:urlSession:
scheduleRecurringActivity
test_tearDown
processBIMIHeadersForMessages:
_activeDataTasksByRequest
_activeDataTasksLock
_urlSession
_downloadScheduler
T@"EDMessagePersistence",R,N,V_messagePersistence
T@"EMRemoteContentURLSession",R,N,V_urlSession
T@"<EFScheduler>",R,N,V_downloadScheduler
initWithStoreBasePath:segmentSize:
initWithPrivateStreamIdentifier:storeConfig:
source
setWithObjects:
payloadFromData:message:
messageIDHeader
ec_messageIDSubstring
initWithEventName:messageId:payload:
donateToBiomeWithEvent:
type
numberWithInteger:
sendEvent:
mutableCopy
persistentID
persistEvent:date:message:data:
persistEvent:date:conversationID:data:
persistEvent:dataFromMessage:
persistEvent:dataFromMessage:account:
persistEvent:date:message:mailbox:
persistEvent:date:message:mailboxType:
_stream
_source
setPredictor:
setCache:
dictionary
setCacheKeysByProperty:
_cacheKeyForMessages:
cache
objectForKey:
predictor
predictMailboxIDsForMessages:limit:diagnostics:
setObject:forKey:
_propertyKeysForMessage:
_trackCacheKey:forPropertyKey:
cacheKeysByProperty
removeAllObjects
ef_mapSelector:
compare:
sortUsingSelector:
array
listIDHash
int64Value
conversationID
ea_uncommentedAddress
from
firstObject
longLongValue
initWithPredictor:
invalidatePredictionsAffectedByMessage:
removeAllPredictions
_predictor
_cache
_cacheKeysByProperty
T@"<EDMailboxPredictor>",&,N,V_predictor
T@"NSCache",&,N,V_cache
T@"NSMutableDictionary",&,N,V_cacheKeysByProperty
initWithUserProfileProvider:
registerMessageChangeHookResponder:
mailDataDirectory
initWithDirectory:userProfileProvider:contactStore:vipManager:
initWithLogs:
mailboxPersistence
initWithMessagePersistence:mailboxPersistence:eventLog:
registerMessageDeliveryHookResponder:
petLog
_schedulePETSubmissionActivityForLog:
batchedEventsForSubmission
sharedInstance
logMessage:
initWithPersistence:userProfileProvider:vipManager:sourceApplicationBundleIdentifier:
interactionLogger
biomeLog
differentialPrivacyReporter
_interactionLogger
_petLog
_biomeLog
_differentialPrivacyReporter
T@"EDPETInteractionEventLog",R,N,V_petLog
T@"EDBiomeInteractionEventLog",R,N,V_biomeLog
T@"EDDifferentialPrivacyReporter",R,N,V_differentialPrivacyReporter
T@"EDInteractionLogger",R,N,V_interactionLogger
signpostLog
dispatchQueueSchedulerWithQueue:
registerProtectedDataReconciliationHookResponder:
isForeground
isRunningTests
optionsWithDictionary:
serviceWithDefaultShellEndpoint
initWithPID:flags:reason:name:
acquire
invalidate
afterDelay:performBlock:
openApplication:withOptions:completion:
resumeForUpdates
unregisterHookResponder:
persistenceWillReplaceDatabaseID:with:forTable:column:
persistenceDidReconcileProtectedData
contentProtectionStateChanged:previousState:
signpostID
initWithClientBundleIdentifier:hookRegistry:clientState:
_bundleID
_assertion
_clientState
initWithObject:
defaultCenter
postNotificationName:object:userInfo:
getObject
replaceObject:
isEqualToArray:
initWithBoost:
discreteProgressWithTotalUnitCount:
drop
setCancellationHandler:
em_userDefaults
enableMailTrackingProtection:
visibleMailboxObjectIDs
TB,R
T@"NSArray",R,C
setIsForeground:
setIsRunningTests:
setVisibleMailboxObjectIDs:
giveBoostWithCompletionBlock:
setStateForDemoMode:
_visibleMailboxObjectIDs
_visibleMailboxesLock
_isForeground
_isRunningTests
fetchRequestWithEntityName:
fetchRequest
ckRecordID
T@"NSString",C,D,N
ckRecordSystemFields
T@"NSData",&,D,N
migratedFromKVSStorage
TB,D,N
_setupCoreDataStack
initWithExecutionQueue:
setObserveForNetworkReachability:
setInitialDelay:
bundleForClass:
URLForResource:withExtension:
lastObject
stringByAppendingPathComponent:
persistentContainerWithPath:managedObjectModel:
persistentStoreDescriptions
setShouldAddStoreAsynchronously:
initWithContainerIdentifier:
setUseZoneWidePCS:
setUseDeviceToDeviceEncryption:
setContainerOptions:
initWithOptions:
setOption:forMirroringKey:
setOption:forKey:
loadPersistentStoresWithCompletionHandler:
newBackgroundContext
managedObjectContext
performBlockAndWait:
_requestWithKind:completionBlock:
_schedulerForKind:
_executeRequestWithKind:completionBlock:
scheduleTask:canceledCallback:
importScheduler
exportScheduler
_wrapCompletion:forRequestKind:
initWithOptions:completionBlock:
executeRequest:error:
success
error
userInfo
rescheduleTask
requestImportWithCompletionBlock:
requestExportWithCompletionBlock:
persistentContainer
setImportScheduler:
setExportScheduler:
_persistentContainer
_importScheduler
_exportScheduler
_managedObjectContext
T@"NSPersistentContainer",R,N,V_persistentContainer
T@"EDTaskScheduler",&,N,V_importScheduler
T@"EDTaskScheduler",&,N,V_exportScheduler
T@"NSManagedObjectContext",R,N,V_managedObjectContext
initWithDelegate:conversationManager:
scheduleWithConversationExportDelegate:conversationManager:
delegate
previousSyncAnchorForDailyExport
currentSyncAnchorForDailyExport
flaggedConversationsChangedBetweenStartAnchor:endAnchor:
conversationManager
performDailyExportForChangedConversations:
setNewPreviousSyncAnchorForDailyExport:
_delegate
_conversationManager
T@"<EDConversationDailyCloudExporterDelegate>",R,N,V_delegate
T@"EDUbiquitousConversationManager",R,N,V_conversationManager
conversationUUID
lastModified
T@"NSDate",C,D,N
messageIds
notifyMe
muted
initWithDelegate:
setKvsStorage:
setCloudKitStorage:
initWithServiceName:
setDataReplicationTransaction:
cloudKitStorage
dictionaryForKey:
dictionaryRepresentation
kvsStorage
removeDictionaryForKey:
setDictionary:forKey:
synchronize
refresh
isInitialized
dataReplicationTransaction
startTransaction
privateQueue
_saveChanges:fromStorage:toStorage:synchronize:
conversationRemoteStorage:didChangeEntries:reason:
endTransaction:
hasPendingTransactions
resetPendingTransactions
_replicateAllContentFromStore:toStore:synchronize:
_handleStorageReady:
allKeys
isMigratedFromKVSStorage
setMigratedFromKVSStorage:
conversationRemoteStorageDidInitialize:
conversationRemoteStorageWillResetData:
conversationRemoteStorageDidResetData:
storageName
setDelegate:
setPrivateQueue:
_privateQueue
_kvsStorage
_cloudKitStorage
_dataReplicationTransaction
T@"<EDConversationRemoteStorageDelegate>",W,N,V_delegate
T@"NSObject<OS_dispatch_queue>",&,N,V_privateQueue
T@"<EDConversationRemoteStorage>",&,N,V_kvsStorage
T@"EDConversationRemoteCloudKitStorage",&,N,V_cloudKitStorage
T@"EDTransactionService",&,N,V_dataReplicationTransaction
appendFormat:
appendString:
conversationsTableSchema
conversationIDMessageIDTableSchema
scheduleWithConversationManager:
performInitialSync
persistenceDidInitializeConversationSubscriptionProvider
preparedStatementForQueryString:
executeUsingBlock:error:
executeWithNamedBindings:usingBlock:error:
unsignedIntegerValue
numberWithUnsignedLongLong:
setPersistenceConversationFlags:forConversationIDs:reason:
syncKeyForUpdatedConversation:flags:
setPersistenceConversationFlags:syncKey:forConversationID:reason:
setFlags:forConversations:
transactionGeneration
insertGeneration:
unsignedLongLongValue
_notifyOfFlagChangeForConversationID:oldFlags:newFlags:reason:generationWindow:
objectValue
updateAssociationTableForMessageID:dateSent:conversationID:
updateAssociationTableForMessageIDs:conversationID:
conversationFlagsForConversationNotificationLevel:
numberWithDouble:
conversationNotificationLevelForConversationFlags:
persistenceDidChangeConversationNotificationLevel:conversationID:generationWindow:
_postChangeNotificationForConversationID:flags:oldFlags:reason:
hasSubscribedConversations
conversationsTableName
syncedConversationIDsBySyncKey
persistenceConversationFlagsForConversationID:
conversationIDForMessageIDs:
messageIDsForConversationID:limit:
remoteMessageIDsAdded:forConversationID:
pruneConversationTables:
clearConversationFlagsAndSyncKeyForConversationIDs:
initWithDatabase:hookRegistry:
initializeConversationManagerAndPerformInitialSync
createConversationWithFlags:
markConversationWithIDs:mute:
markConversationWithIDs:notify:
updateAssociationTableForMessagePersistentIDs:conversationID:
updateConversationNotificationLevel:forConversationIDs:
notificationQueue
setNotificationQueue:
_notificationQueue
T@"EDPersistenceDatabase",R,W,N,V_database
T@"NSObject<OS_dispatch_queue>",&,N,V_notificationQueue
pruneDatabasePurgingOldestEntries:
setExportTransaction:
setImportTransaction:
_handleWillResetSyncDataNotification:
addObserver:selector:name:object:
_handleDidResetSyncDataNotification:
_handlePushNotification:
_initialSetup
mirroringPersistentStore
exportTransaction
_requestExportWithManagedObjectContext:
importTransaction
_requestImportWithManagedObjectContext:
_controlInManagedObjectContext:
setInitialized:
_requestFirstSyncWithManagedObjectContext:
_recoverHistoryToken
historyToken
entityForConversationDictionary:key:managedObjectContext:
_handleDuplicationsForConversationUUIDs:managedObjectContext:
_addOrUpdateConversationInfo:managedObjectContext:
_removeConversationInfoWithId:managedObjectContext:
_conversationInfoWithUUID:managedObjectContext:
dictionaryForConversationInfo:
allConversationInfosInManagedObjectContext:
dictionaryWithCapacity:
_retrieveChangesSinceLastRequestInManagedObjectContext:
notificationFromRemoteNotificationDictionary:
insertNewObjectForEntityForName:inManagedObjectContext:
save:
setConversationUUID:
setNotifyMe:
setMuted:
setMessageIds:
doubleValue
dateWithTimeIntervalSince1970:
setLastModified:
timeIntervalSince1970
ed_archiveTokenWithError:
ed_unarchivedTokenWithData:error:
_conversationInfosWithUUID:managedObjectContext:
subarrayWithRange:
_removeConversationInfoWithObjectId:save:managedObjectContext:
predicateWithFormat:
setPredicate:
initWithKey:ascending:
setSortDescriptors:
executeFetchRequest:error:
deleteObject:
existingObjectWithID:error:
author
componentsSeparatedByString:
transactionAuthor
changes
changeType
changedObjectID
_conversationInfoWithObjectId:managedObjectContext:
tombstone
enumerateChangeHistorySinceToken:managedObjectContext:usingBlock:
setHistoryToken:
persistHistoryToken
_transactionHistorySinceToken:managedObjectContext:error:
token
fetchHistoryAfterToken:
setResultType:
resultType
entity
cloudKitAPSTopics
controller:didChangeContentWithSnapshot:
controller:didChangeContentWithDifference:
controller:didChangeObject:atIndexPath:forChangeType:newIndexPath:
controller:didChangeSection:atIndex:forChangeType:
controllerWillChangeContent:
controllerDidChangeContent:
controller:sectionIndexTitleForSectionName:
_updateConversationInfo:withAnotherConversationInfo:
fetchedResultsController
_initialized
_mirroringPersistentStore
_fetchedResultsController
_historyToken
_exportTransaction
_importTransaction
T@"EDCloudMirroringPersistentStore",R,N,V_mirroringPersistentStore
T@"NSFetchedResultsController",R,N,V_fetchedResultsController
initialized
TB,N,GisInitialized,V_initialized
T@"NSPersistentHistoryToken",&,N,V_historyToken
T@"EDTransactionService",&,N,V_exportTransaction
T@"EDTransactionService",&,N,V_importTransaction
TB,D,N,GisMigratedFromKVSStorage
additionalStoreWithIdentifier:
_storeChangedExternally:
subsetOfMessageIDsToSyncFromMessageIDString:
kvStore
enumerateObjectsUsingBlock:
object
setKvStore:
_kvStore
T@"NSUbiquitousKeyValueStore",&,N,V_kvStore
persistence
initWithMailboxPersistence:
conversationPersistence
threadPersistence
remoteContentPersistence
messageChangeManager
richLinkPersistence
remoteSearchProvider
userProfileProvider
vipManager
newFetchController
remoteContentManager
remoteContentCacheConfiguration
blockedSenderManager
listUnsubscribeHandler
remindMeNotificationController
initWithMessagePersistence:conversationPersistence:threadPersistence:remoteContentPersistence:messageChangeManager:richLinkPersistence:hookRegistry:mailboxPersistence:remoteSearchProvider:userProfileProvider:vipManager:fetchController:observerResumer:remoteContentManager:remoteContentCacheConfiguration:blockedSenderManager:listUnsubscribeHandler:remindMeNotificationController:
doesNotRecognizeSelector:
senderPersistence
initWithSenderPersistence:
searchableIndexManager
enableIndexingAndBeginScheduling:
index
categorySubsystem
initWithVIPManager:
initWithFetchController:remoteClientsProvider:persistence:
currentConnection
initWithPersistence:categorySubsystem:
newAccountRepository
newMailboxRepository
newMessageRepositoryWithResumable:
newOutgoingMessageRepository
newSenderRepository
newSearchableIndex
sharedInteractionLogger
sharedDonationController
newVIPManagerInterface
newActivityRegistry
newDiagnosticInfoGathererWithServerRemoteClientsProvider:
newClientResumerWithClientState:
setCategorySubsystem:
_persistence
_categorySubsystem
T@"EDCategorySubsystem",&,N,V_categorySubsystem
T@"EDPersistence",R,N,V_persistence
_dataDetectionResultsTableSchemaWithName:
_hookResponderRespondsToRequiredMethods:
hookResponder
persistenceWillBeginUpdates
_addDataDetectionResults:withGlobalMessageID:toTable:withConnection:
_getPersistedMessagesFromGlobalMessageID:
persistenceDidAddDataDetectionResults:generationWindow:
persistenceDidFinishUpdates
addValue
partiallyRedactedDictionary:
initWithResultColumn:table:
addResultColumn:
protectedTablesAndForeignKeysToResolve:
persistenceWillAddMessage:fromExistingMessage:
persistenceIsAddingMessages:journaled:generationWindow:
persistenceDidAddMessages:generationWindow:
persistenceDidReconcileJournaledMessages:generationWindow:
persistenceDidUpdateData:message:
persistenceDidUpdateProperties:message:generationWindow:
persistenceDidDeleteMessages:generationWindow:
persistenceIsDeletingAllMessagesInMailboxWithURL:generationWindow:
persistenceDidDeleteAllMessagesInMailboxesWithURLs:generationWindow:
persistenceWillChangeFlags:messages:
persistenceIsChangingFlags:messages:generationWindow:
persistenceDidChangeFlags:messages:generationWindow:
persistenceWillChangeReadLaterDate:messages:
persistenceDidChangeReadLaterDate:messages:changeIsRemote:generationWindow:
persistenceDidUpdateSendLaterDate:messages:generationWindow:
persistenceDidUpdateFollowUpForMessages:generationWindow:
persistenceWillUpdateDisplayDateForMessages:
persistenceIsUpdatingDisplayDateForMessage:fromDate:generation:
persistenceDidUpdateDisplayDateForMessages:changeIsRemote:generation:
persistenceDidChangeVIPStatus:messages:
persistenceDidAddLabels:removeLabels:messages:generationWindow:
persistenceWillChangeConversationID:messages:
persistenceIsChangingConversationID:messages:generationWindow:
persistenceDidChangeGlobalMessageID:orConversationID:message:generationWindow:
persistenceWillTransferMessages:transferType:destinationMailboxURL:userInitiated:
initWithDatabase:messagePersistence:hookResponder:
addDataDetectionResults:globalMessageID:
getDataDetectionResultsForGlobalMessageID:
getDataDetectionResultRowIDsForGlobalMessageID:
_hookResponder
T@"EDPersistenceDatabase",R,N,V_database
T@"<EDMessageChangeHookResponder>",R,W,N,V_hookResponder
gathererQueue
fetchController
diagnosticInformation
fileURLWithPath:isDirectory:
initWithFileURL:readOnly:
remoteClientsProvider
remoteClients
diagnosticInfoGatherer
diagnosticInfoProvider
clientResumer
promise
finishWithResult:error:
provideDiagnosticsAt:options:completion:
future
join:
always:
addFailureBlock:
persistenceStatistics
registerDiagnosticInfoProvider:completionHandler:
gatherDiagnosticsWithOptions:completionHandler:
fetchControllerStatusWithCompletionHandler:
databaseStatisticsWithCompletionHandler:
setDiagnosticInfoProvider:
setRemoteClientsProvider:
setGathererQueue:
setPersistence:
_diagnosticInfoProvider
_remoteClientsProvider
_fetchController
_gathererQueue
T@"<EMDiagnosticInfoProvidingXPC>",&,N,V_diagnosticInfoProvider
T@"<EDServerRemoteClientsProvider>",&,N,V_remoteClientsProvider
T@"EDFetchController",R,N,V_fetchController
T@"<EFScheduler>",&,N,V_gathererQueue
T@"EDPersistence",&,N,V_persistence
lastSet
timeIntervalSinceNow
setLastSet:
setValue:
value
initWithTTL:
getValueWithGenerator:
setTtl:
_value
_ttl
_lastSet
T@,&,N,V_value
Td,N,V_ttl
T@"NSDate",&,N,V_lastSet
mailbox
_shouldRecordMailbox:
recordingQueue
_recordSenders:
reportSenderDomainForMessages:
_userDomains
_profileProvider
accountsEmailAddresses
addressDomainFromAddress:
lowercaseString
_mailDynamicData
shouldIgnoreDomain:
shouldIgnoreUserAccountDomains
_isUserAccountDomain:
recordingHandler
_recordingKey
_localeIdentifier
currentLocale
systemLocale
localeIdentifier
hasPrefix:
set_recordingKey:
set_userDomains:
set_profileProvider:
set_mailDynamicData:
setRecordingHandler:
setRecordingQueue:
_recordingHandler
_recordingQueue
T@?,C,N,V_recordingHandler
T@"NSObject<OS_dispatch_queue>",&,N,V_recordingQueue
T@"NSString",&,N,V_recordingKey
T@"<EMUserProfileProvider>",W,N,V_profileProvider
T@"_MSTTLReference",&,N,V_userDomains
T@"EDMailDynamicDataAsset",&,N,V_mailDynamicData
contentMessage
relatedContentItems
ef_firstObjectPassingTest:
em_itemNotFoundError
requestRepresentationWithOptions:delegate:completionHandler:
requestMoreContentBlock
requestRepresentationForItemWithObjectID:options:delegate:completionHandler:
requestUpdatedRepresentationWithCompletion:
performUnsubscribeAction:completion:
initWithAccountsProvider:
labelURLForDatabaseID:
labelForDatabaseID:
initWithQuery:messagePersistence:hookRegistry:remindMeNotificationController:observer:observationIdentifier:
predicate
threadScopeForPredicate:withMailboxTypeResolver:
sortDescriptors
initWithSortDescriptors:
groupedSenders
simpleAddress
tearDown
start
messageQueryHelper
query
_messageQueryFromGroupedQuery:
keepMessagesInListOnBucketChange
initWithQuery:messagePersistence:hookRegistry:remoteSearchProvider:scheduler:remindMeNotificationController:delegate:shouldReconcileJournal:shouldAddMessagesSynchronously:keepMessagesInListOnBucketChange:
setMessageQueryHelper:
resultsObserverIfUncanceled
observationIdentifier
resultQueue
observerWillRestart:
setDidCancel:
didCancel
resultsObserver
_queryHelperIsCurrent:
observerDidFinishInitialLoad:
_messagesWereAdded:
_messagesWereChanged:forKeyPaths:deleted:
limit
orderedGroupedSendersWithLimit:
addMessages:
initWithSimpleAddress:messages:originatingQuery:
addGroupedSender:
_filterGroupedSenderChanges:withVisibleSenders:
observer:matchedChangesForObjectIDs:
_notifyResultsObserverOfChangesToVisibleGroupedSendersFrom:to:logMessage:
removeMessages:isGroupEmpty:
removeGroupedSender:
changeKeyPaths:forMessages:
differenceFromOrderedSet:withOptions:
ef_removalsExcludingMoves
observer:matchedDeletedObjectIDs:
ef_groupedInsertionsByObjectForTargetOrderedSet:inferMoves:
previousObject
objects
isMove
observer:matchedMovedObjectIDs:after:
observer:matchedAddedObjectIDs:after:extraInfo:
ef_compactMap:
ef_removeObjectsPassingTest:
senderAddress
emailAddressValue
ef_groupBy:
queryOptions
initWithTargetClass:predicate:sortDescriptors:queryOptions:label:
queryHelper:didFindMessages:
queryHelperDidFindAllMessages:
queryHelper:didAddMessages:
queryHelper:messageFlagsDidChangeForMessages:
queryHelper:conversationIDDidChangeForMessages:fromConversationID:
queryHelper:conversationNotificationLevelDidChangeForConversation:conversationID:
queryHelper:objectIDDidChangeForMessage:oldObjectID:oldConversationID:
queryHelper:didUpdateMessages:forKeyPaths:
queryHelper:didDeleteMessages:
queryHelperDidFinishRemoteSearch:
queryHelperNeedsRestart:
initWithQuery:messagePersistence:hookRegistry:remindMeNotificationController:observer:observationIdentifier:keepMessagesInListOnBucketChange:
groupedSenderForObjectID:
filteredMailboxScope
setGroupedSenders:
setKeepMessagesInListOnBucketChange:
_didCancel
_keepMessagesInListOnBucketChange
_filteredMailboxScope
_messageQueryHelper
_groupedSenders
_resultQueue
T@"EDMessageQueryHelper",&,N,V_messageQueryHelper
T@"<EMMessageListItemQueryResultsObserver>",R,N
T@"_EDGroupedSenderList",&,N,V_groupedSenders
T@"<EFScheduler>",R,N,V_scheduler
T@"NSObject<OS_dispatch_queue>",R,N,V_resultQueue
TB,V_didCancel
TB,N,V_keepMessagesInListOnBucketChange
T@"EMThreadScope",R,N,V_filteredMailboxScope
groupedSenderAtIndex:
objectAtIndex:
groupedSenderForSenderAddress:
ef_prefix:
ef_insertObject:usingComparator:
_checkConsistencyAndRebuildIfNecessary
initWithArray:
sortUsingComparator:
_groupsBySender
_orderedGroups
_comparator
setUserProfileProvider:
setLibrary:
setMailboxIDCache:
setParameters:
initWithUserProfileProvider:queryAdapter:
_mergeDefaultParameters:withParameters:
addEntriesFromDictionary:
string
setDebugLog:
_modeParameterIs:
_predictionsForMessage:limit:
subject
measure
setMeasure:
object:withMeasure:
objectEnumerator
max:
reverseSortedObjects:limit:
arrayWithCapacity:
parameters
_summedWeightedPredictionsForMessage:limit:
_orderedModePredictionForMessage:
_weightedModePredictionsForMessage:
_countsForField:message:
_topHitFromMailboxDictionary:message:
_removeSpecialMailboxesInCounts:message:
_conversationIDCountsForMessage:
_senderCountsForMessage:
_recipientCountsForMessage:
_listIDCountsForMessage:
boolValue
library
groupedMessagesCountByMailboxMatchingQuery:variable:
_limitToRecents
_groupedMessagesCountByMailboxMatchingQuery:variable:
ea_isLegalEmailAddress
_allowedRecipientsForMessage:
mailboxIDCache
validMailboxesForPrediction
_userCreatedMailboxIDs
removeObjectsForKeys:
setObject:
_normalizedTermFrequencyTopHitFromDictionary:withThreshold:
_topHitFromMailboxDictionary:
sortedArrayUsingSelector:
_objectWithMeasure:timesHigherThanFollowUpInMeasures:
allEmailAddresses
_isAllowedRecipient:
initWithUserProfileProvider:queryAdapter:parameters:
debugLog
_userProfileProvider
_library
_parameters
_mailboxIDCache
_debugLog
T@"<EMUserProfileProvider>",&,N,V_userProfileProvider
T@"<EDMailboxPredictionQueryAdapter>",&,N,V_library
T@"NSDictionary",&,N,V_parameters
T@"NSCache",&,N,V_mailboxIDCache
T@"NSMutableString",&,N,V_debugLog
parentAccount
appleAccount
propertiesForDataclass:
initWithFormat:
aa_personID
aa_authToken
anisetteDataWithError:
aliasLookupURL
setHTTPMethod:
aliasAuthorizationHeader
setValue:forHTTPHeaderField:
aliasUserAgent
ak_addDeviceUDIDHeader
ak_addClientInfoHeader
machineID
oneTimePassword
routingInfo
_prepareAliasDataForEmailAddresses:defaultEmailAddress:
dataWithJSONObject:options:error:
setHTTPBody:
statusCode
initWithData:encoding:
dictionaryWithObjectsAndKeys:
setValue:forKey:
initWithAppleAccount:
pushUpdateForAliasDataWithEmailAddresses:defaultEmailAddress:
_appleAccount
T@"ACAccount",R,N,V_appleAccount
T@"NSURL",R,N
T@"NSString",R,N
flags
deleted
sortUsingDescriptors:
_isSortedByDate:
_dateSortDescriptors
_recalculateDisplayMessage
initWithConversationID:threadScope:
_createThreadWithObjectID:
displayMessage
newestMessage
originatingQuery
mailboxTypeResolver
setMailboxTypeResolver:
setDate:
displayDate
setDisplayDate:
_combinedReadLater
setReadLater:
setSubject:
summary
setSummary:
_combinedSenderList
setSenderList:
_combinedToList
setToList:
_combinedCCList
setCcList:
_combinedFlags
setFlags:
_combinedHasUnflagged
setHasUnflagged:
_combinedFlagColors
setFlagColors:
_combinedIsVIP
setIsVIP:
_combinedIsBlocked
setIsBlocked:
unsubscribeType
setUnsubscribeType:
_combinedHasAttachments
setHasAttachments:
conversationNotificationLevel
setConversationNotificationLevel:
_combinedSenderBucket
setSenderBucket:
setCount:
_combinedMailboxes
setMailboxes:
itemID
setDisplayMessageItemID:
followUp
setFollowUp:
initWithObjectID:originatingQuery:builder:
initWithMessages:originatingQuery:mailboxTypeResolver:
ascending
_addMessagesToThread:
_calculateAndApplyChange
ef_insertObjectIfAbsent:usingComparator:
changesForKeyPaths:ofItems:
_calculateChangesAfterRemovingMessages:applyingChanges:threadIsEmpty:
thread
displayMessageItemID
collectionItemID
messages
removeMessages:threadIsEmpty:
removeObjectsInArray:
applyToMessageListItem:
changeFrom:to:
setThread:
sortDescriptorForDateAscending:
readLater
ef_isLaterThanDate:
initWithDate:
senderList
addObjectsFromArray:
toList
ccList
combinedFlagsForMessageListItems:
hasUnflagged
initWithIndexesInRange:
flagColors
addIndexes:
containsIndexes:
isVIP
isBlocked
hasAttachments
mailboxes
senderBucket
_dateSortedMessages
read
indexOfObjectPassingTest:
setDisplayMessage:
ef_reverse
changeMessages:forKeyPaths:threadIsEmpty:
updateMessage:fromOldObjectID:
threadScope
_messages
_thread
_threadScope
_originatingQuery
_mailboxTypeResolver
_displayMessage
T@"EMThreadScope",R,N,V_threadScope
T@"EMThread",&,N,V_thread
T@"EFQuery",R,N,V_originatingQuery
T@"<EMMailboxTypeResolver>",R,N,V_mailboxTypeResolver
T@"EMMessage",R,N
T@"EMMessage",&,N,V_displayMessage
_inMemoryThreadSortDescriptorsForThreadSortDescriptors:
initWithName:delayInterval:resumable:
mailboxScopeForPredicate:withMailboxTypeResolver:
initWithTitle:delegate:
_blockedSendersDidChange:
_vipsDidChange:
removeObserver:
transactionWithDescription:
contentProtectionQueue
_createHelperAndReconcileJournal:
isPaused
updateThrottler
unacknowledgedUpdatesCountAndTimeSinceLastAcknowledgement:
setIsPaused:
setHasChangesWhilePaused:
hasChangesWhilePaused
_refreshObserver
updateWithBlock:unacknowledgedUpdatesCount:
label
addInvocationBlock:
observer:wasUpdated:
_distinctObjectIDs:queryHandlerLog:
observer:matchedAddedObjectIDs:before:extraInfo:
ef_enumerateObjectsInBatchesOfSize:block:
_notifyObserverOfOldestThreadsByMailboxObjectIDs
_messageQueryFromThreadsQuery:
setIsInitialized:
_contentProtectionChangedToUnlocked
_contentProtectionChangedToLocked
_restartHelper
_initializeOldestThreadsByMailbox
_messagesByConversationIDForMessages:
_messageListItemChangeAffectsSorting:
_prepareToSendUpdates
_reportChanges:
_mergeInThreads:forMove:
_didSendUpdates
_reportDeletes:
resultsObserverIfNotPaused
observer:replacedExistingObjectID:withNewObjectID:
strongToStrongObjectsMapTable
keyEnumerator
nextObject
_removeThreadsForInMemoryThreads:forMove:
comparator
insertObject:atIndex:
removeObjectAtIndex:
observer:matchedMovedObjectIDs:before:
_didMergeInThreads:
reloadSummaryHelper
mailboxScope
summariesToReloadForChanges:mailboxScope:
requestSummaryForMessageObjectID:
addChange:
_threadsWereDeleted
ef_any:
isVIPAddress:
observerDidFinishRemoteSearch:
_updateOldestThreadsForMailboxes:
dateSortOrder
mailboxObjectIDs
_updateCurrentOldestThreadWithThreadIfApplicable:forMailbox:
enumerateObjectsWithOptions:usingBlock:
ef_mapValues:
observer:matchedOldestItemsUpdatedForMailboxes:
suggestion
initWithTargetClass:predicate:sortDescriptors:suggestion:limit:queryOptions:label:
targetClassOptions
initWithTargetClass:predicate:sortDescriptors:limit:queryOptions:targetClassOptions:label:
stringByAppendingString:
valueForKey:
initWithConversationID:
labelForStateCapture
itemIDsForStateCaptureWithErrorString:
initWithQuery:messagePersistence:hookRegistry:remindMeNotificationController:vipManager:remoteSearchProvider:observer:observationIdentifier:observationResumer:
threadForObjectID:error:
messagesForThread:
messageSortDescriptors
stateCapturer
_conversationIDs
_threadsByConversationID
_changesWhilePaused
_oldestThreadsByMailboxObjectIDs
_processTransaction
_threadsLock
_isInitialized
_isPaused
_hasChangesWhilePaused
_vipManager
_remoteSearchProvider
_messageSortDescriptors
_updateThrottler
_reloadSummaryHelper
_contentProtectionQueue
_mailboxScope
_stateCapturer
T@"EDVIPManager",R,N,V_vipManager
T@"<EDRemoteSearchProvider>",R,N,V_remoteSearchProvider
T@"NSArray",R,C,N,V_messageSortDescriptors
T@?,R,N,V_comparator
T@"EDUpdateThrottler",R,N,V_updateThrottler
T@"EDThreadReloadSummaryHelper",R,N,V_reloadSummaryHelper
T@"NSObject<OS_dispatch_queue>",R,N,V_contentProtectionQueue
TB,N,V_didCancel
TB,N,V_isInitialized
TB,N,V_isPaused
TB,N,V_hasChangesWhilePaused
T@"EMMailboxScope",R,N,V_mailboxScope
T@"EMCollectionItemIDStateCapturer",R,N,V_stateCapturer
eventID
version
accountID
mailboxID
messageIDHash
messagePersistentID
data
setEventID:
setVersion:
setAccountID:
setMailboxID:
setConversationID:
setMessageIDHash:
setMessagePersistentID:
setName:
setData:
_eventID
_version
_date
_accountID
_mailboxID
_conversationID
_messageIDHash
_messagePersistentID
_name
_data
Tq,N,V_eventID
Tq,N,V_version
T@"NSDate",&,N,V_date
T@"NSString",C,N,V_accountID
Tq,N,V_mailboxID
Tq,N,V_conversationID
Tq,N,V_messageIDHash
Tq,N,V_messagePersistentID
T@"NSString",C,N,V_name
T@"NSDictionary",C,N,V_data
_oldSalt
getBytes:range:
numberWithUnsignedInt:
_findExistingSaltError:
second
first
_queryKeychainError:
sortedArrayUsingComparator:
appendBytes:length:
pairWithFirst:second:
errorWithDomain:code:userInfo:
_persistentBits
logs
setLogs:
_logs
T@"NSArray",&,N,V_logs
_findOrCreateSalt
_deleteSalt
_createSalt
saltProviderWithString:
saltProviderFromKeyChain
salt
migrateAccessClass
setSalt:
_salt
T@"NSData",&,N,V_salt
viewingStarted
setViewingStarted:
message
setMessage:
scrolledToEnd
setScrolledToEnd:
mutedThread
setMutedThread:
setKey:
cellStyle
setCellStyle:
messageListType
setMessageListType:
setRow:
_scrolledToEnd
_mutedThread
_viewingStarted
_message
_key
_cellStyle
_messageListType
_row
T@"NSDate",&,N,V_viewingStarted
T@"<ECMessage>",&,N,V_message
TB,N,V_scrolledToEnd
TB,N,V_mutedThread
T@"NSString",C,N,V_key
T@"NSString",C,N,V_cellStyle
T@"NSString",C,N,V_messageListType
Tq,N,V_row
_conversationFlagsChanged:
processingQueue
persistedMessagesForMessageObjectIDs:requireProtectedData:temporarilyUnavailableMessageObjectIDs:
_eventLog
_composeStartedForMessage:eventName:
deliveredMessage:account:
_stateTrackingQueue
_viewedMessages
_stateForMessage:extra:container:
timeIntervalSinceDate:
removeIndexesInRange:
_messageListVisibleRows
_range:minusRange:
set_messageListVisibleRows:
_messageListMessages
containsIndex:
_logMessageListDisplayEndedForState:now:
_logMessageListDisplayStartedMessage:now:type:row:cellStyle:
movedMessages:toMailboxType:
stringByAppendingFormat:
numberWithUnsignedLong:
messageListDisplayEndedForAllMessages
_viewingEndedForAllMessages
integerValue
reason
readChanged
flaggedChanged
flagged
repliedChanged
replied
forwardedChanged
redirectedChanged
forwarded
redirected
legacyMailboxForMailboxURL:
logEvent:date:messageID:data:
logEvent:date:data:
composeReplyStartedForMessage:
composeFowardStartedForMessage:
composedMessageSent:account:
scrolledToEndOfMessage:
viewingStartedForMessage:
viewingEndedForMessage:
messageListDisplayVisibleRowsChanged:
messageListDisplayStartedForMessage:messageListType:row:cellStyle:
messageListDisplayEndedForMessage:cellStyle:
movedMessages:toMailbox:
archivedMessages:
deletedMessages:
copiedMessages:toMailbox:
clickedLinkInMessage:scheme:
applicationLaunched
applicationWillSuspend
applicationWillResume
waitForPendingStateChanges
set_viewedMessages:
set_messageListMessages:
set_stateTrackingQueue:
set_eventLog:
setMailboxPersistence:
setProcessingQueue:
_mailboxPersistence
_processingQueue
T@"NSMutableDictionary",&,N,V_viewedMessages
T@"NSMutableDictionary",&,N,V_messageListMessages
T{_NSRange=QQ},N,V_messageListVisibleRows
T@"NSObject<OS_dispatch_queue>",&,N,V_stateTrackingQueue
T@"EDMailboxPersistence",&,N,V_mailboxPersistence
T@"<EDInteractionEventLog>",&,N,V_eventLog
T@"NSObject<OS_dispatch_queue>",&,N,V_processingQueue
isMailtoOperation
unsubscribeMailtoWithCommand:completion:
unsubscribeHTMLWithCommand:timeout:completion:
postValues
oneClickURL
postContent
detector
acceptCommand:
ignoreWithCommand:completion:
unsubscribeWithCommand:completion:
_detector
_detectorLock
T@"EMListUnsubscribeDetector",R,N
localMessageActionsTableSchema
actionMessagesTableSchema
actionLabelsTableSchema
actionFlagsTableSchema
messagesTableName
mailboxesTableName
ef_SQLEscapedString
_transferActionForRow:connection:failedMessages:
_flagChangeActionForRow:connection:
_flagChangeAllActionForRow:connection:
_transferUndownloadedActionForRow:connection:
_labelChangeActionForRow:connection:
executeWithIndexedBindings:usingBlock:error:
handledFailedCopyForMessages:
messageForDatabaseID:
setSourceMessage:
setSourceRemoteID:
setDestinationMessage:
initWithBuilder:
mailboxURLForDatabaseID:
setMessageActionPersistentID:
setMailboxURL:
setUserInitiated:
setSourceMailboxURL:
setDestinationMailboxURL:
setTransferType:
setItemsToDownload:
setItemsToCopy:
setItemsToDelete:
_findMessagesForAction:remoteIDs:messages:connection:
anyObject
setOldestPersistedRemoteID:
_flagChangeForAction:connection:
setRemoteIDs:
setMessages:
setFlagChange:
gmailLabelPersistence
setLabelsToAdd:
setLabelsToRemove:
changesReadTo:
changesDeletedTo:
changesRepliedTo:
changesFlaggedTo:
changesDraftTo:
changesForwardedTo:
changesRedirectedTo:
changesJunkLevelSetByUserTo:
changesJunkLevelTo:
changesFlagColorTo:
mailboxURL
mailboxDatabaseIDForURL:
flagChange
_addFlagChange:actionID:connection:
_addActionMessageForMessage:destinationMessage:actionID:actionPhase:connection:
executeInsertStatement:rowsChanged:
oldestPersistedRemoteID
deletedChanged
draftChanged
draft
junkLevelSetByUserChanged
junkLevelSetByUser
junkLevelChanged
junkLevel
flagColorChanged
flagColor
sourceMailboxURL
destinationMailboxURL
transferType
userInitiated
itemsToDownload
sourceMessage
destinationMessage
itemsToCopy
itemsToDelete
sourceRemoteID
_addActionMessageForSourceRemoteID:actionID:connection:
labelsToAdd
_setLabelsOnAction:labels:add:connection:
labelsToRemove
callStackSymbols
remoteID
completedItems
failedItems
phaseForResults
messageActionPersistentID
_deleteCopyItems:actionID:connection:
updateWithFailedItems:forPhase:
removeMessageAction:
updateWithCompletedItems:forPhase:
_updateCopyItems:toPhase:actionID:connection:
moveSupportedFromMailboxURL:toURL:
mailboxURLIsInRemoteAccount:
ef_hasScheme:
_whereClauseToFindCopyItems:
ef_quotedSQLEscapedString
updateWithCompletedCopyItems:
ed_uidQueryExpression
initWithDatabase:gmailLabelPersistence:
messageActionsForAccountURL:previousActionID:
persistFlagChangeAction:
persistFlagChangeUndownloadedAction:
persistTransferAction:
persistTransferUndownloadedAction:
persistLabelChangeAction:
updateTransferAction:withResults:
_sourceRemoteIDListForCopyItems:
updateTransferUndownloadedMessageAction:withResults:
updateFlagChangeAction:withRemainingUIDs:
_gmailLabelPersistence
T@"EDGmailLabelPersistence",R,N,V_gmailLabelPersistence
actionID
setActionID:
actionType
setActionType:
mailboxName
setMailboxName:
renamedMailboxName
setRenamedMailboxName:
_actionID
_actionType
_mailboxName
_renamedMailboxName
Tq,N,V_actionID
Tq,N,V_actionType
T@"NSString",C,N,V_mailboxName
T@"NSString",C,N,V_renamedMailboxName
bindingWithString:
saveMailboxActionForAccountID:action:
allMailboxActionForAccountID:
nextMailboxActionForAccountID:
deleteMailboxAction:
deleteMailboxActions:
mailboxProvider
allMailboxes
changeObserversByIdentifier
mailboxListChanged:
fetchMailboxes
initWithURL:
legacyMailboxForObjectID:
allMailboxObjectIDsWithMailboxTypeResolver:forExclusion:
allMailboxObjectIDs
minusSet:
mailboxObjectIDsForMailboxType:
mailboxTypeForMailboxObjectID:
setChangeObserversByIdentifier:
mailboxListInvalidated
T@"NSSet",R,N
initWithMailboxProvider:
allMailboxesWithCompletionHandler:
userCreatedMailboxObjectIDs
fetchMailboxLists
mailboxDatabaseIDsForMailboxObjectIDs:createIfNecessary:
serverCountsForMailboxScope:block:
addChangeObserver:withIdentifier:
removeChangeObserverWithIdentifier:
createMailbox:parentMailboxID:
deleteMailbox:
moveMailbox:newParentMailboxID:
renameMailbox:newName:
setMailboxProvider:
_changeObserversByIdentifierLock
_changeObserversByIdentifier
_mailboxProvider
T@"NSMutableDictionary",&,N,V_changeObserversByIdentifier
T@"EDMailboxProvider",&,N,V_mailboxProvider
_createPredictor
_invalidateCacheForAddedMessage:
persistedMessagesForObjectIDs:requireProtectedData:
_predictMailboxForMovingMessages:cancelationToken:completionHandler:
isCanceled
_processPredictionForMessages:
cachingPredictor
_accountsForMessages:
host
ef_caseInsensitiveIsEqualToString:
queryAdapter
initWithMessagePersistence:mailboxPersistence:hookRegistry:userProfileProvider:
persistenceWillAddNewMessage:fromExistingMessage:
predictMailboxForMovingObjectIDs:completionHandler:
_queryAdapter
_cachingPredictor
T@"<EDMailboxPredictionQueryAdapter>",R,N,V_queryAdapter
T@"NSObject<OS_dispatch_queue>",R,N,V_processingQueue
T@"EDCachingMailboxPredictor",R,N,V_cachingPredictor
T@"EDMailboxPersistence",R,N,V_mailboxPersistence
T@"<EMUserProfileProvider>",R,N,V_userProfileProvider
observerScheduler
_beginDeferringInvalidation
weakToStrongObjectsMapTable
weakToWeakObjectsMapTable
_transformMailbox:legacyMailboxToMailboxMap:objectIDToLegacyMailboxMap:
enumerateAccountsWithBlock:
setLegacyMailboxToMailboxMap:
setObjectIDToLegacyMailboxMap:
setAllMailboxCache:
_endDeferringInvalidation
allMailboxCache
_populateCache
_fetchMailboxesForAccount:
mailboxesFromLegacyMailboxes:
legacyMailboxToMailboxMap
mailboxFromLegacyMailbox:
legacyMailboxesForObjectIDs:
objectIDToLegacyMailboxMap
_invalidateCache
_mailboxInvalidated:
_isDeferringInvalidation
mailboxForObjectID:
_willReloadMailboxList:
_didReloadMailboxList:
_didChangeMailboxList:
_willFetchMailboxList:
_didFetchMailboxList:
invalidateMailboxes
mailboxCacheQueue
setObserverScheduler:
_deferringInvalidationCount
_needsToInvalidate
_legacyMailboxToMailboxMap
_objectIDToLegacyMailboxMap
_allMailboxCache
_mailboxCacheQueue
_observerScheduler
T@"<EDAccountsProvider>",W,N,V_accountsProvider
T@"NSMapTable",&,V_legacyMailboxToMailboxMap
T@"NSMapTable",&,V_objectIDToLegacyMailboxMap
T@"NSArray",&,V_allMailboxCache
T@"NSObject<OS_dispatch_queue>",R,N,V_mailboxCacheQueue
T@"<EFScheduler>",&,N,V_observerScheduler
T@"<EDMailboxProviderDelegate>",W,N,Vdelegate
serializationQueue
_performCreateMailboxChangeAction:
_performDeleteMailboxChangeAction:
_performMoveMailboxChangeAction:
_performRenameMailboxChangeAction:
mailboxObjectID
parentMailboxID
getMailboxesWithCompletion:
startObservingMailboxChangesWithChangeObserver:observationIdentifier:
cancelObservation:
performMailboxChangeAction:completionHandler:
refreshMailboxList
mailboxObjectIDsForMailboxType:completionHandler:
mailboxTypeForMailboxObjectID:completionHandler:
_serializationQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_serializationQueue
tearDownWebView
addSuccessBlock:
mainThreadScheduler
ef_timeoutError
addCancelable:
_findMailDropNodesInFileURL:promise:
withTimeout:do:completion:
setActivePromise:
webView
configuration
userContentController
scriptHandlers
removeScriptMessageHandlerForName:
_close
setWebView:
stringWithContentsOfURL:encoding:error:
containsString:
_shouldSearchForMailDropNodesInFileURL:
finishWithResult:
_setClientNavigationsRunAtForegroundPriority:
pathForResource:ofType:
initWithContentsOfFile:encoding:error:
initWithSource:injectionTime:forMainFrameOnly:
addUserScript:
lastPathComponent
initWithFrame:configuration:
setNavigationDelegate:
_addScriptHandlerForKey:handler:
loadFileURL:allowingReadAccessToURL:
activePromise
writeToURL:atomically:encoding:error:
evaluateJavaScript:completionHandler:
setHandler:
addScriptMessageHandler:name:
webView:decidePolicyForNavigationAction:decisionHandler:
webView:decidePolicyForNavigationAction:preferences:decisionHandler:
webView:decidePolicyForNavigationResponse:decisionHandler:
webView:didStartProvisionalNavigation:
webView:didReceiveServerRedirectForProvisionalNavigation:
webView:didFailProvisionalNavigation:withError:
webView:didCommitNavigation:
webView:didFinishNavigation:
webView:didFailNavigation:withError:
webView:didReceiveAuthenticationChallenge:completionHandler:
webViewWebContentProcessDidTerminate:
webView:authenticationChallenge:shouldAllowDeprecatedTLS:
webView:navigationAction:didBecomeDownload:
webView:navigationResponse:didBecomeDownload:
generateMailDropMetadataForContentURL:completionHandler:
insertMailDropAttachmentViewForContentURL:HTMLByContentID:completionHandler:
setScriptHandlers:
_webView
_scriptHandlers
_activePromise
T@"WKWebView",&,N,V_webView
T@"NSMutableArray",&,N,V_scriptHandlers
T@"EFPromise",&,N,V_activePromise
handler
body
userContentController:didReceiveScriptMessage:
T@"WKWebView",W,N,V_webView
ef_all:
_ignoredDomainsFallback
_updateIgnoredDomains:
_queryForAssetWithCompletion:
_downloadAssetCatalogWithCompletion:
ignoredDomains
setByAddingObjectsFromArray:
setIgnoredDomains:
setTimeoutIntervalForResource:
startCatalogDownload:options:then:
initWithType:
addKeyValuePair:with:
results
state
_updateStateFromAsset:
startDownload:
queryMetaData:
getLocalFileUrl
assetProperty:
setShouldIgnoreUserAccountDomains:
_shouldIgnoreUserAccountDomains
_ignoredDomains
TB,V_shouldIgnoreUserAccountDomains
T@"NSSet",&,V_ignoredDomains
T@"EDAssetDownloadScheduler",&,N,V_scheduler
performWhileLocked:
postNotificationName:object:
registerMailAppExtensionsObserver:capabilities:includeDisabled:completion:
synchronousMessageActionProviderInterface
extensionID
initWithID:name:
actionProviderInterfacesByExtensionID
isCancelled
decideActionForMessage:completionHandler:
resultWithTimeout:error:
requiredHeadersWithCompletion:
extensionsMatched:
extensionsNoLongerMatching:
initWithExtensionsController:
messageActionProviders
actionDecisionForMessage:usingMessageActionProvider:
requiredHeaders
_extensionsController
_remoteExtensions
_extensionsObserverCancelable
T@"NSString",R,N,V_ID
T@"NSString",R,N,V_name
initWithGlobalMessageID:attachmentID:
_globalMessageID
_mimePartNumber
_remoteURL
Tq,R,N,V_globalMessageID
T@"NSString",R,C,N,V_name
T@"NSString",R,C,N,V_mimePartNumber
T@"NSURL",R,N,V_remoteURL
serverChange
setServerChange:
localChange
setLocalChange:
_serverChange
_localChange
T@"<EDPersistedMessage>",&,N,V_message
T@"ECMessageFlagChange",&,N,V_serverChange
T@"ECMessageFlagChange",&,N,V_localChange
registerCloudStorageChangeHookResponder:
markAllWorkQueue
transferMessages:transferType:destinationMailboxURL:userInitiated:
transferMessages:transferType:destinationMailboxURL:userInitiated:oldMessagesByNewMessage:
bucketMessageCount:
setDeleted
messagesToJournalForMessages:inMailbox:
mailboxURL:isInSameAccountAsMailboxURL:
mailboxIsAllMail:
mailboxPartOfAllMail:
persistNewMessages:mailboxURL:oldMessagesByNewMessage:fromSyncing:
haveCompleteMIMEForMessage:
localActionPersistence
applyFlagChange:toMessagesInDatabase:
deletePersistedMessages:
resetStatusCountsForMailboxWithURL:
checkForNewActionsInMailboxID:
willStartPersistenceDidAddMessages:
didFinishPersistenceDidAddMessages:
transferAllMessagesFromMailboxes:exceptMessages:transferType:destinationMailboxURL:userInitiated:
iterateMessagesInMailboxURLs:excludingMessages:batchSize:returnMessagesForFlagChange:handler:
applyFlagChange:toMessages:
persistFollowUp:forMessages:
_applyReadLaterDate:toMessages:changeIsRemote:
_applyReadLaterDate:toMessages:changeIsRemote:hookResponder:
_truncateReadLaterDate:
dateReceived
isEqualToDate:
readLaterPersistence
persistReadLaterForMessage:date:
removeReadLaterForMessage:
ef_dateWithTruncatedSeconds
ef_isLaterThanOrEqualDate:
applyVIPStatus:toMessagesInDatabase:
initWithCapacity:
addLabels:removeLabels:toMessagesInDatabase:
_needToStoreServerMessagesForMailboxURL:
bimiManager
ef_flatten
setBrandIndicatorDatabaseID:location:forMessages:
serverMessagePersistenceFactory
serverMessagePersistenceForMailboxURL:
setImapUID:
setServerFlags:
supportsLabels
labels
setLabels:
initWithIMAPServerMessageBuilder:
addServerMessage:invalidMessage:duplicateRemoteID:
_clearFollowUpsFromThreadsForMessages:
cloudStorageReadLaterDateForMessage:
messageIDHeaderHash
didReflectNewMessages:
messagesForRemoteIDs:mailboxURL:
deleteServerMessagesWithRemoteIDs:
serverMessagesForIMAPUIDs:limit:returnLastEntries:
deleteAllClearedUIDMessages
arrayWithArray:
removeObjectsInRange:
_reflectFlagChanges:messages:remoteIDs:mailboxURL:
applyFlagChange:toMessagesWithRemoteIDs:
enumerateIndexesUsingBlock:
reflectFlagChanges:forMessagesWithRemoteIDs:mailboxURL:
addLabels:removeLabels:toMessagesWithRemoteIDs:
_persistResults:forTransferAction:
_persistResults:forFlagChangeAction:
_persistResults:forLabelChangeAction:
remoteIDs
_resetLocalLabelsToServerLabelsForMessagesWithRemoteIDs:mailboxURL:
serverMessagesForRemoteIDs:
setWithSet:
_persistFlagChangeResults:forFlagChangeAction:
_resetLocalFlagsToServerFlagsForMessagesWithRemoteIDs:mailboxURL:
indexSet
completedUIDs
isEqualToIndexSet:
initWithIndexSet:
removeIndexes:
ef_isEarlierThanDate:
persistedMessageIDsForMessagesWithFollowUpsForConversationIDs:
serverFlags
_handleFailedCopyItems:transferAction:generationWindow:
_handleFailedDownload:generationWindow:
downloadedDataByCopyItems
setData:onMessage:
messageWasAppended:
createdServerMessages
_storeServerMessages:mailboxURL:generationWindow:
_deleteDestinationMessagesFromCompletedItems:notInServerMessages:
setRemoteID:onMessageWithDatabaseID:
displayErrorForTransferAction:withResults:
actionHasChangedAccount:
attachMessage:toServerMessageWithRemoteID:
_handleDuplicateServerMessage:serverMessagePersistence:
setRemoteID:
initWithServerMessageBuilder:
_findDestinationMessagesFromCompletedItems:notInServerMessages:
globalIDForMessageIDHash:
allMailboxesScope
initWithGlobalMessageID:mailboxScope:
readLaterDate
updateDisplayDateForPersistedMessage:displayDate:changeIsRemote:
initWithDatabase:localActionPersistence:messagePersistence:serverMessagePersistenceFactory:readLaterPersistence:bimiManager:hookResponder:hookRegistry:
moveMessages:destinationMailboxURL:userInitiated:
copyMessages:destinationMailboxURL:userInitiated:
deleteAllMessageFromMailboxes:exceptMessages:
addNewMessages:mailboxURL:userInitiated:
deleteMessages:
applyFlagChange:toAllMessagesFromMailboxes:exceptMessages:
applyFollowUp:toMessages:
applyReadLaterDate:toMessages:
applyVIPStatus:forMessages:
addLabels:removeLabels:forMessages:
reflectNewMessages:mailboxURL:
reflectDeletedMessages:
reflectDeletedMessagesWithRemoteIDs:mailboxURL:
reflectAllMessagesDeletedInMailboxURL:
reflectDeletedAllClearedMessagesInMailboxURL:
reflectFlagChanges:forMessages:
reflectSortedFlagChanges:mailboxURL:
reflectAddedLabels:removedLabels:forMessagesWithRemoteIDs:mailboxURL:
persistResults:forAction:
accountForMailboxURL:
remindMeCloudStorageChangedWithAddedOrChangedItems:deletedItems:
setMarkAllWorkQueue:
_localActionPersistence
_readLaterPersistence
_serverMessagePersistenceFactory
_bimiManager
_markAllWorkQueue
T@"EDLocalActionPersistence",R,N,V_localActionPersistence
T@"EDReadLaterPersistence",R,N,V_readLaterPersistence
T@"EDServerMessagePersistenceFactory",R,N,V_serverMessagePersistenceFactory
T@"EDBIMIManager",R,N,V_bimiManager
T@"NSObject<OS_dispatch_queue>",&,N,V_markAllWorkQueue
indexSetWithIndex:
initWithQuery:serverCountMailboxScope:messagePersistence:hookRegistry:observer:refireDebounceInterval:
assertableSchedulerWithScheduler:
predicateFromPredicate:ignoringKeyPaths:
initWithName:delayInterval:scalingFactor:
initWithQuery:messagePersistence:
initWithTimeInterval:scheduler:startAfter:block:
registerMailboxChangeHookResponder:
tokenWithCancelationBlock:
initWithTitle:itemName:headLimit:tailLimit:delegate:
willSyncMailbox:
didSyncMailbox:
stopAndWait
debounceResult:
queryWithExpandedMailboxesFromQuery:
countOfMessagesMatchingQuery:
performDatabaseReadBlock:
removeAllIndexes
earliestGeneration
latestGeneration
countDidChange:acknowledgementToken:
scopeContainsMailboxObjectID:mailboxTypeResolver:
transformMessages:
removeIndex:
filterMessages:unmatchedMessages:
evaluateWithObject:
countOfMessagesWithGlobalMessageID:matchingQuery:
predicate:appliesToFlagChange:
numberOfAttachments
transformAndFilterMessages:
transformAndFilterMessages:includeDeleted:
predicateFormat
predicateForIsVIP:
ef_containsKeyPath:
messagesMatchingQuery:limit:
itemsForStateCaptureWithErrorString:
descriptionForItem:
persistenceIsAddingMailboxWithDatabaseID:objectID:generationWindow:
persistenceDidUpdateServerCount:forMailboxWithObjectID:generationWindow:
persistenceDidUpdateMostRecentStatusCount:forMailboxWithObjectID:generationWindow:
persistenceDidUpdateLastSyncAndMostRecentStatusCount:forMailboxWithObjectID:generationWindow:
initWithQuery:serverCountMailboxScope:messagePersistence:hookRegistry:observer:
_serverCounts
_mailboxesBeingSynced
_resyncDatabaseGeneration
_mailboxObserverID
_expandedQuery
_seenMessageIDs
_newMessageIDs
_recalculationPending
_atomicQueryDescription
_atomicMailboxScopeDescription
_seenMessageIDsLock
_expandedQueryLock
_query
_predicateIgnoringFlags
_serverCountMailboxScope
_queryEvaluator
_resultsObserver
_cancelationToken
_refireDebouncer
_pendingFlagChangesKey
_localCount
_serverCount
_mostRecentStatusCount
_lastSyncStatusCount
countForObject:
rootMessageDataDirectoryForBasePath:purgeable:
messageDataDirectoryURLForGlobalMessageID:basePath:purgeable:
orPredicateWithSubpredicates:
predicateWithValue:
_predicateForRecipientMessagesAddressesKey:addresses:
expressionForKeyPath:
rightExpression
predicateOperatorType
options
predicateWithLeftExpression:rightExpression:modifier:type:options:
filteredArrayUsingPredicate:
predicateForMessagesInMailboxes:
subpredicates
_predicateForAnyMailboxWithPredicate:
compoundPredicateType
initWithType:subpredicates:
_objectIDsFromRightExpression:
databaseIDsDictionaryForMessageObjectIDs:
expressionForConstantValue:
expressionType
constantValue
objectIDFromSerializedRepresentation:
leftExpression
predicateForAnyRecipientPredicate:
predicateForSenderPredicate:
predicateForSubjectPredicate:
predicateForBody:
predicateForMessagesFromVIPs:
predicateForMessagesToAddresses:
predicateForMessagesThatCCAddresses:
predicateForMailboxTypePredicate:mailboxes:
predicateForMessagesWithObjectIDsPredicate:objectIDConverter:
predicateForMessageIDHeaderHashPredicate:
predicateForSpotlightPredicate:
initWithMailboxProvider:userProfileProvider:blockedSenderManager:vipReader:
tableForName:
initWithColumn:
initPlaceholderMapperWithChildren:
rowIDColumn
initWithChildren:sourceColumn:
bitExpressionForConversationFlag:
initWithColumn:bitExpression:
bitExpressionForAttachments
initWithChildren:table:additionalColumns:
matchesMask:
leftShift:by:
and:with:
rightShift:by:
initWithLeft:firstValue:secondValue:between:
_messageReferencesTableSchema
_cachedMetadataTableSchema
initWithColumn:tableName:
initWithTableName:columnNames:
_addressesTableSchema
_subjectsTableSchema
_summariesTableSchema
_protectedMessageDataTableSchema
addResultColumn:alias:
reconcileJournalWithCompletionBlock:
performDatabaseWorkInBlockWithHighPriority:
ef_reduce:
messagesMatchingQuery:limit:cancelationToken:
iterateMessagesMatchingQuery:batchSize:firstBatchSize:limit:cancelationToken:handler:
iteratePersistedMessagesMatchingQuery:limit:cancelationToken:handler:
andPredicateWithSubpredicates:
notPredicateWithSubpredicate:
keyPath
targetClass
_groupMessageObjectIDsByMailboxScope:
_databaseIDsDictionaryForGlobalMessageIDs:mailboxScope:
cachedDatabaseIDsDictionaryForGlobalMessageIDs:
initWithName:
notIn:
enabledAccountMailboxesExpression
_threadQueryForThreadObjectID:
persistedMessagesMatchingQuery:limit:
ef_flatMap:
setWithCapacity:
predicateForMessagesWithThreadScope:
predicateForMessagesInConversation:
initWithTargetClass:predicate:sortDescriptors:
join:sourceColumn:targetColumn:
table:column:
messageTransformer
transformPersistedMessages:mailboxScope:
messagesForPersistedMessages:mailboxScope:
ef_notEmpty
initWithDomain:code:userInfo:
noMailboxesScope
_cachedMetadataJSONForKey:globalMessageID:
columnExistsAtIndex:
_setCachedMetadataJSON:forKey:globalMessageID:
_checkCachedMetadataRowLimitWithConnection:
cachedMetadataIsolation
cachedMetadataUpdatesSinceLastCheck
setCachedMetadataUpdatesSinceLastCheck:
cachedMetadataEstimatedRowCount
intValue
setCachedMetadataEstimatedRowCount:
dataValue
clearLastInsertedDatabaseID
initWithIndicator:location:evidenceLocation:indicatorHash:hashAlgorithm:
persistenceDidAddBrandIndicator:forLocation:
persistedMessageID
brandIndicatorForDatabaseID:
setBrandIndicatorLocation:andData:
startDate
endDate
_checkForFollowUpExpirationWithQuery:
greaterThan:
spotlightPredicateForPredicate:
updateBeforeDisplayForPersistedMessages:
ec_integerDate
ef_isEarlierThanOrEqualDate:
containsDate:
lessThan:
predicateForMessagesWithActiveFollowUp
predicateFromPredicate:ignoringPredicates:
_databaseIDFromSelect:connection:
em_messageIDHeader
globalIDForMessageIDHeader:
em_internalMessageID
databaseID
globalIDForMessageWithDatabaseID:mailboxScope:
mailboxScopeForMailboxObjectIDs:forExclusion:
initWithAngleBracketID:
mailboxURLsForPredicate:
topSalienciesForMailboxID:limit:error:
messagesForMessageObjectIDs:missedMessageObjectIDs:
setStart:
compiled
setIndexableMessages:
setMessagesIndexed:
setMessagesToIndex:
setDuration:
messagesDateReceivedColumnName
messagesDisplayDateColumnName
addressesTableName
objectPropertyMapperForSchema:protectedSchema:
partialMessagesTableSchemaAndForeignKeysToResolve:associationsToResolve:
recipientsTableSchemaAndForeignKeysToResolve:associationsToResolve:
messageGlobalDataTableSchema
selectAddressesStatementWithResultColumns:
addJoinsForAddressToSelectComponent:withSourceAddressColumn:
databaseIDForEmailAddress:connection:
allDatabaseIDsForSimpleAddresses:connection:
initWithMailboxPersistence:database:hookRegistry:userProfileProvider:blockedSenderManager:vipReader:
messageObjectIDCriterionExpressionForPredicateValue:
messagesMatchingQuery:
persistedMessageForOutgoingMessage:isDraft:
cachedMetadataJSONForKey:messageID:
setCachedMetadataJSON:forKey:messageID:
brandIndicatorForURL:
brandIndicatorsForURLs:
updateBeforeDisplayForMessagesMatchingQuery:
messageObjectIDForURL:
messageObjectIDsForSearchableItemIdentifiers:
requestContentForMessageObjectID:requestID:options:delegate:completionHandler:
iterateMessagesMatchingSmartSortQuery:limit:handler:
collectStatistics
collectStatisticsWithStatistics:
setMessageTransformer:
_cachedMetadataUpdatesSinceLastCheck
_persistenceStatistics
_cachedMetadataIsolation
_cachedMetadataEstimatedRowCount
_messageTransformer
T@"NSObject<OS_dispatch_queue>",R,N,V_cachedMetadataIsolation
T@"NSNumber",&,N,V_cachedMetadataEstimatedRowCount
Ti,N,V_cachedMetadataUpdatesSinceLastCheck
T@"EDMessageTransformer",&,N,V_messageTransformer
T@"EDMailboxPersistence",R,W,N,V_mailboxPersistence
T@"EDMessagePersistenceStatistics",R,N,V_persistenceStatistics
duration
messageData
setMessageData:
messagesDeleted
setMessagesDeleted:
messageDataDeleted
setMessageDataDeleted:
indexableMessages
messagesIndexed
messagesToIndex
indexableAttachments
setIndexableAttachments:
attachmentsIndexed
setAttachmentsIndexed:
attachmentsToIndex
setAttachmentsToIndex:
_start
_duration
_messageData
_messagesDeleted
_messageDataDeleted
_indexableMessages
_messagesIndexed
_messagesToIndex
_indexableAttachments
_attachmentsIndexed
_attachmentsToIndex
Td,N,V_start
Td,N,V_duration
TQ,N,V_messages
TQ,N,V_messageData
TQ,N,V_messagesDeleted
TQ,N,V_messageDataDeleted
TQ,N,V_indexableMessages
TQ,N,V_messagesIndexed
TQ,N,V_messagesToIndex
TQ,N,V_indexableAttachments
TQ,N,V_attachmentsIndexed
TQ,N,V_attachmentsToIndex
timeIntervalSinceReferenceDate
transformMessages:includeDeleted:
messageQuery
spotlightPredicateCache
ef_partition:
sortedArrayUsingDescriptors:
callStackReturnAddresses
setSpotlightPredicateCache:
_messageQuery
_spotlightPredicateCache
T@"EFQuery",R,N,V_messageQuery
T@"NSCache",&,N,V_spotlightPredicateCache
currentQueryHelper
setCurrentQueryHelper:
_objectIDsAndUnreadObjectIDsFromMessages:unreadObjectIDs:
ef_suffix:
_initializeOldestMessagesByMailbox
findMessagesByPreviousObjectIDForAddedMessages:helper:
_oldestMessagesNeedUpdate
keyPathsAffectSorting:
messagesWithAdditionalPredicates:limit:
_createChangesForMessagesWithConversationID:block:
_updateOldestMessagesForMailboxes:cancelationToken:
_oldestItemQueryForMailbox:
_oldestMessagesByMailboxObjectIDsWasUpdated
predicateForMessagesInMailboxWithObjectID:
oldestMessageIDsByMailboxObjectIDs
findMessagesByPreviousObjectIDForAddedMessages:messageSource:
sortedArrayWithOptions:usingComparator:
indexSetWithIndexesInRange:
indexOfObjectAtIndexes:options:passingTest:
predicateForExcludingMessagesWithObjectIDs:
ef_insertObject:usingSortDescriptors:
collectItemIDsWithQuery:messagePersistence:hookRegistry:remindMeNotificationController:remoteSearchProvider:errorString:
initWithQuery:messagePersistence:hookRegistry:remindMeNotificationController:remoteSearchProvider:observer:observationIdentifier:
_updateOldestMessagesCancelationToken
_currentQueryHelper
_oldestMessageIDsByMailboxObjectIDs
T@"EDMessageQueryHelper",&,N,V_currentQueryHelper
T@"NSMutableDictionary",R,C,N,V_oldestMessageIDsByMailboxObjectIDs
initWithCondition:
lockWhenCondition:
unlockWithCondition:
dateWithTimeIntervalSinceNow:
lockWhenCondition:beforeDate:
lock
ef_compactMapSelector:
condition
_messageItemIDs
_collectionLock
_errorString
addObserver:
cancelationToken
_updateDisplayDateForMessagesIfNeeded
registerSenderBucketChangeHookResponder:
_getInitialResults
performVoucherPreservingBlock:
updateDisplayDate
shouldReconcileJournal
fetchRemoteMessagesWithQuery:delegate:
predicateForMessagesWithObjectIDs:
pendingJournaledMessageAddsKey
verifyResults:query:
queryEvaluator
_transformAndFilterMessages:includeDeleted:removeIgnoredMessages:
addMessagesSynchronously
_foundMessages:
pendingFlagChangesKey
_persistenceDidDeleteMessages:includeMessagesWithDeletedFlag:
_calculateAndReportChangesForPersistedMessages:withPendingChangesKey:changeBlock:
pendingReadLaterDateChangesKey
_reportChangesForPersistedMessages:withPendingChangesKey:keyPaths:
pendingConversationIDChangesKey
initWithObjectsAndKeys:
ef_removeObjectsInArray:
pendingDisplayDateChangesKey
_prepareForSenderBucketChangeForThreadsWithSenderAddresses:
addresses
_persistedMessagesFromSendersWithAddresses:
pendingSenderBucketChangesKey
_reportSenderBucketChangeForThreadsWithSenderAddresses:
_reportChangesForCurrentlyMatchingMessages:previouslyMatchingMessages:keyPaths:
intersectSet:
predicateForMessagesWithSenders:
ignoreMessagesPredicate
unionSet:
removeObjectsAtIndexes:
controller:messageTimerFired:
remoteSearchDidFindMessages:
remoteSearchDidFinish
persistenceWillChangeSenderBucketForAddresses:toBucket:
persistenceWillChangeSenderBucketForSender:toBucket:
persistenceDidChangeSenderBucketForSender:toBucket:generation:
persistenceWillAddAddresses:toSender:
persistenceDidAddAddresses:toSender:generation:
persistenceWillRemoveAddresses:fromSender:
persistenceDidRemoveAddresses:fromSender:generation:
T@"EFQuery",R,N
setQueryEvaluator:
setCancelationToken:
setShouldReconcileJournal:
setIgnoreMessagesPredicate:
setAddMessagesSynchronously:
_didStart
_noLongerMatchingMessages
_ignoredMessages
_noLongerMatchingMessagesLock
_ignoredMessagesLock
_shouldReconcileJournal
_addMessagesSynchronously
_remindMeNotificationController
_ignoreMessagesPredicate
_pendingConversationIDChangesKey
_pendingJournaledMessageAddsKey
_pendingSenderBucketChangesKey
_pendingReadLaterDateChangesKey
_pendingDisplayDateChangesKey
T@"EDRemindMeNotificationController",R,N,V_remindMeNotificationController
T@"<EDMessageQueryHelperDelegate>",R,W,N,V_delegate
T@"EDMessageQueryEvaluator",&,N,V_queryEvaluator
T@"EFCancelationToken",&,N,V_cancelationToken
TB,N,V_shouldReconcileJournal
T@"NSPredicate",&,N,V_ignoreMessagesPredicate
TB,N,V_addMessagesSynchronously
T@"NSString",R,V_pendingFlagChangesKey
T@"NSString",R,V_pendingConversationIDChangesKey
T@"NSString",R,V_pendingJournaledMessageAddsKey
T@"NSString",R,V_pendingSenderBucketChangesKey
T@"NSString",R,V_pendingReadLaterDateChangesKey
T@"NSString",R,V_pendingDisplayDateChangesKey
T@"EFQuery",R,N,V_query
initWithQueryType:predicate:
queryType
_queryType
_predicate
TQ,R,N,V_queryType
T@"NSPredicate",R,N,V_predicate
initWithQueryParser:
parserForPredicate:queryParser:
parseResultsFromPredicate:
queryParser
_queryParser
T@"EDMessageQueryParser",R,N,V_queryParser
searchableIndexMapper
isSearchableIndexQueryableKeypath:searchableIndexPropertyMapper:
children
resultQueryType:
parseMixedSubpredicateResults:predicate:
searchableIndex
performSearchableIndexQueryPredicate:propertyMapper:searchableIndex:
initWithAccountsProvider:mailboxPersistence:messagePersistence:vipManager:
propertyMapper
transformPredicate:
sqlQueryForQuery:predicate:
em_searchableIndexQueryGenerator
preferredLanguages
mainBundle
preferredLocalizations
queryExpressionFromPredicate:propertyMapper:languages:
queryString
expressionWithQueryString:
isValid
messageIDsMatchingQuery:
sqlPropertyMapper
sqlQueryForReturnObjectKeypaths:query:propertyMapper:
initWithSchema:protectedSchema:searchableIndex:accountsProvider:vipManager:messagePersistence:mailboxPersistence:
sqlQueryForQuery:
_searchableIndex
_sqlPropertyMapper
_searchableIndexMapper
T@"EDMessageQueryTransformer",R,N,V_transformer
T@"EDSearchableIndex",R,N,V_searchableIndex
T@"EFSQLObjectPropertyMapper",R,N,V_sqlPropertyMapper
T@"EFSearchableIndexObjectPropertyMapper",R,N,V_searchableIndexMapper
ef_matchesEverything
ef_matchesNothing
transformCompoundPredicate:
transformComparisonPredicate:
transformSubpredicates:
simplifyCompoundPredicate:
simplifySingleSubpredicate:
predicateForToMeMessages
receivingAddresses
predicateForCCMeMessages
allVIPs
simplifyNotPredicate:
simplifyAndPredicate:
simplifyOrPredicate:
T@"<EDAccountsProvider>",R,N,V_accountsProvider
T@"<EMVIPManager>",R,N,V_vipManager
cancelAllHandlers
queryHandlers
_resetUpdateThrottlersWithLogMessage:
performQueryOnSerializationQueue
tryLockWhenCondition:
unlock
_performQuery:withObserver:observationIdentifier:completionHandler:
initWithLabel:
observerResumer
initWithQuery:messagePersistence:threadPersistence:hookRegistry:vipManager:remoteSearchProvider:remindMeNotificationController:observer:observationIdentifier:delegate:observationResumer:
filteredMailboxScopedQueryHandlers
setWithObject:
threadQueryHandlers
resetThreadScopedForActivatedAccount:
threadScopeMatcherForActivatedAccount:
_triggerMigrationWithThreadScopesMatcher:
resetThreadScopesForDeactivatedAccount:
_triggerMigrationForThreadScopes:
checkIfPrecomputedStateIsAvailable
setNeedsUpdateForThreadScope:
triggerMigration
makeObjectsPerformSelector:
initWithMessageObjectIDs:threadObjectIDsByScope:groupedSenderObjectIDsByScope:
threadForObjectID:isPersisted:error:
_enumerateObjectIDsAndQueryHandlersForObjectIDsByScope:withTargetClass:usingBlock:
_partitionObjectIDs:
threadObjectIDsByScope
_enumerateThreadObjectIDsByScope:usingBlock:
groupedSenderObjectIDsByScope
messageObjectIDs
displayMessageObjectID
signpostType
_performMessageFlagChangeAllAction:
_performMessageFlagChangeAction:returnUndoAction:
_performMessageReadLaterAction:returnUndoAction:
_performMessageFollowUpAction:returnUndoAction:
_performSenderBlockingAction:returnUndoAction:
_performUnsubscribeAction:
_performMessageTransferAllAction:
_performMessageTransferAllActionToSpecialMailbox:
_performMessageTransferAction:returnUndoAction:
_performMessageTransferActionToSpecialMailbox:returnUndoAction:
_performMessageDeleteAction:
_performMessageDeleteAllAction:
_performMessageConversationFlagChangeAction:returnUndoAction:
_performUndoAction:
initWithIndividualActions:
_persistedMessagesForMessageChangeAction:
_changeFlagsForPersistedMessages:flagChange:returnUndoAction:
_performMessageFollowUpDate:persistedMessages:returnUndoAction:
setMessageDatabaseIDs:
_performMessageReadLaterDate:persistedMessages:returnUndoAction:
setReadLaterDate:
blockSender
_performBlockSender:persistedMessages:returnUndoAction:
senders
isEmailAddressBlocked:
blockEmailAddresses:
unblockEmailAddresses:
setBlockSender:
arrayWithObject:
commandForMessage:
copyMessages
_undoActionsForMovedMessages:
specialDestinationMailboxType
accountForSender
reverseObjectEnumerator
individualActions
messageDatabaseIDs
_performConversationIDs:conversationNotificationLevel:returnUndoAction:
conversationIDs
objectIDs
_persistedMessagesForObjectIDs:
_persistedObjectIDsForObjectIDs:
inMemoryMessageObjectIDsForThread:
basePath
richLinkMetadataDataForPersistentID:basePath:
completionHandlerAdapter
addChild:withPendingUnitCount:
resetThreadScopesForMailboxScope:
mailboxPredictionController
mailboxWasPredicted:
performFetchOfType:mailboxObjectIds:
initWithOptions:cancelationToken:
cacheURL
diskCapacity
noteViewOfRemoteContentLinks:
getRemoteContentURLInfoOrderedBy:inReverseOrder:limit:error:
optionsWithRequestedRepresentationType:networkUsage:
contentURL
remoteContentParser
remoteContentLinks
parseHTMLData:withOptions:characterEncodingName:forMessage:completionHandler:
asyncWorkScheduler
updateThrottlerResetBlock
resetAllInstances
setUpdateThrottlerResetBlock:
updateThrottlerResetScheduler
threadQueryHandlerStateDidChange:
isDataAccessible:
performQuery:limit:completionHandler:
performCountQuery:completionHandler:
performQuery:withObserver:observationIdentifier:completionHandler:
startCountingQuery:includingServerCountsForMailboxScope:withObserver:completionHandler:
messageListItemsForObjectIDs:requestID:observationIdentifier:loadSummaryForAdditionalObjectIDs:completionHandler:
performMessageChangeAction:requestID:returnUndoAction:completionHandler:
requestRepresentationForMessageWithID:requestID:options:delegate:completionHandler:
requestRichLinkMetadataForRichLinkID:messageID:completionHandler:
resetPrecomputedThreadScopesForMailboxScope:
getCachedMetadataJSONForKey:messageID:completionHandler:
predictMailboxForMovingMessages:withObserver:completionHandler:
loadOlderMessagesForMailboxes:
messageObjectIDForURL:completionHandler:
messageObjectIDsForSearchableItemIdentifiers:completionHandler:
getURLCacheInformationWithCompletion:
getRemoteContentURLInfoOrderedBy:inReverseOrder:limit:completionHandler:
parseRemoteContentURLsFromMessageWithObjectID:requestID:completionHandler:
brandIndicatorForLocation:completionHandler:
messageReconciliationQueries
threadReconciliationQueries
test_activeQueryCancelationTokens
setQueryHandlers:
setThreadQueryHandlers:
handlerTokens
setHandlerTokens:
setThreadPersistence:
setRichLinkPersistence:
setMessageChangeManager:
setFilteredMailboxScopedQueryHandlers:
_mailboxPredictionController
_mailboxPredictionControllerLock
_handlersLock
_remoteContentParser
_remoteContentParserLock
_queryHandlers
_threadQueryHandlers
_handlerTokens
_conversationPersistence
_threadPersistence
_remoteContentPersistence
_richLinkPersistence
_messageChangeManager
_performQueryOnSerializationQueue
_asyncWorkScheduler
_observerResumer
_remoteContentManager
_remoteContentCacheConfiguration
_updateThrottlerResetScheduler
_updateThrottlerResetBlock
_blockedSenderManager
_listUnsubscribeHandler
_filteredMailboxScopedQueryHandlers
T@"NSMutableDictionary",&,N,V_queryHandlers
T@"NSMutableDictionary",&,N,V_threadQueryHandlers
T@"NSMutableSet",&,N,V_handlerTokens
T@"EDPersistenceHookRegistry",&,N,V_hookRegistry
T@"EDConversationPersistence",R,N,V_conversationPersistence
T@"EDThreadPersistence",&,N,V_threadPersistence
T@"EDRemoteContentPersistence",R,N,V_remoteContentPersistence
T@"EDRichLinkPersistence",&,N,V_richLinkPersistence
T@"EDMessageChangeManager",&,N,V_messageChangeManager
T@"NSConditionLock",R,N,V_performQueryOnSerializationQueue
T@"<EFScheduler>",R,N,V_asyncWorkScheduler
T@"<EDResumable>",R,N,V_observerResumer
T@"EDRemoteContentManager",R,N,V_remoteContentManager
T@"EDRemoteContentCacheConfiguration",R,N,V_remoteContentCacheConfiguration
T@"<EFScheduler>",R,N,V_updateThrottlerResetScheduler
T@?,W,N,V_updateThrottlerResetBlock
T@"EDWebContentParser",R,N
T@"EMBlockedSenderManager",R,N,V_blockedSenderManager
T@"EDListUnsubscribeHandler",R,N,V_listUnsubscribeHandler
T@"NSMutableDictionary",&,N,V_filteredMailboxScopedQueryHandlers
T@"NSSet",R,C,N
_messageObjectIDs
_threadObjectIDsByScope
_groupedSenderObjectIDsByScope
T@"NSArray",R,C,N,V_messageObjectIDs
T@"NSDictionary",R,C,N,V_threadObjectIDsByScope
T@"NSDictionary",R,C,N,V_groupedSenderObjectIDsByScope
strongToWeakObjectsMapTable
dateSortOrderFromSortDescriptors:
orderedSetWithArray:
differenceFromArray:
T@"EFQuery",R,C,N
summaryLoadersMapTable
setSummaryLoadersMapTable:
_mailboxes
_observationIdentifier
_dateSortOrder
_summaryLoadersMapTable
T@"EFLocked",&,N,V_summaryLoadersMapTable
T@"EFQuery",R,C,N,V_query
T@"<EMMessageListItemQueryResultsObserver>",R,N,V_resultsObserver
T@"EMObjectID",R,N,V_observationIdentifier
T@"NSSet",R,C,N,V_mailboxes
Tq,R,N,V_dateSortOrder
mailboxesForPersistedMessage:mailboxProvider:
dates
senderBuckets
combinedFlagsForMessageListItemFlags:forDisplay:
laterDate:
addMessage:
combinedMailboxes
combinedMessageFlags
combinedDate
combinedSenderBucket
setDates:
setSenderBuckets:
_flags
_dates
_senderBuckets
T@"NSMutableSet",&,N,V_mailboxes
T@"NSMutableArray",&,N,V_flags
T@"NSMutableArray",&,N,V_dates
T@"NSMutableArray",&,N,V_senderBuckets
_transformBaseMessage:mailboxScope:duplicateInfo:loaderBlock:
scopeContainsMailbox:
conversationFlags
sendLaterDate
setSendLaterDate:
brandIndicatorLocation
setBrandIndicatorLocation:
set_internalID:
documentID
setDocumentID:
isMyEmailAddressContainedInAddressList:
setIsToMe:
setIsCCMe:
vipReader
setLoaderBlock:
bccIfAvailable
setBccList:
initWithObjectID:builder:
transformBaseMessage:mailboxScope:loaderBlock:
_vipReader
T@"EDMailboxProvider",R,N,V_mailboxProvider
T@"<EMVIPReader>",R,N,V_vipReader
propertiesToMigrate
em_migrateDefault:
initWithMachServiceName:
listener:shouldAcceptNewConnection:
initWithMachServiceNames:
listeners
setListeners:
_listeners
T@"NSMutableArray",&,N,V_listeners
firstHeaderForKey:
messagesForDocumentID:mailboxID:
urlForSendLaterFolder
sendLaterPersistence
persistSendLaterForMessages:date:
saveDraftMessage:mailboxID:previousDraftObjectID:completion:
saveSendLaterMessage:sendLaterDate:completion:
updateSendLaterDate:message:completion:
scheduleAlarmForSendLaterDate:completion:
deleteDraftsInMailboxID:documentID:previousDraftObjectID:
deliverMessage:usingMailDrop:isCancelable:completion:
cancelLastDelayedMessage:
outboxContainsMessageFromAccountObjectID:completion:
suspendDeliveryQueue
resumeDeliveryQueue
processAllQueuedMessages
isProcessingWithCompletion:
numberOfPendingMessagesWithCompletion:
startObservingPendingMessageChangesWithChangeObserver:observationIdentifier:
initWithMessagePersistence:messageChangeManager:sendLaterPersistence:
outgoingMessageFromPersistedMessage:
setSendLaterPersistence:
_workQueue
_sendLaterPersistence
T@"EDSendLaterPersistence",&,N,V_sendLaterPersistence
T@"EDMessageChangeManager",R,N,V_messageChangeManager
messageFrameType
withHasher:setDataFromMessage:account:
hashedAccountID:
setAccountId:
hashedMessageHeadersForMessage:
setHeaders:
withHasher:setDataFromMessage:
withHasher:setMessage:data:
withHasher:setMessage:mailbox:
withHasher:setMessage:mailboxType:
withHasher:setConversationID:data:
accountId
mailboxId
setMailboxId:
mailboxType
setMailboxType:
conversationId
setConversationId:
messageId
setMessageId:
Tq,N
Ti,N
eventName
messageSent
messageMoved
messageCopied
linkClicked
appLaunch
appBackground
appResume
flagChanged
messageViewStart
messageViewEnd
replyDraftStarted
forwardDraftStarted
replySent
forwardSent
markedMuteThread
categoryMarked
categoryInferred
ed_oneOfConcreteEvent
selector
invokeWithTarget:
forwardInvocation:
hashedConversationID:
hashedString:
hashedMailboxID:
setFromMailboxId:
setFromMailboxType:
setToMailboxId:
setToMailboxType:
setMessageFetched:
setMessageSent:
setMessageMoved:
setMessageCopied:
setLinkClicked:
setAppLaunch:
setAppBackground:
setAppResume:
setFlagChanged:
setReadChanged:
setMessageViewStart:
setMessageViewEnd:
setReplyDraftStarted:
setForwardDraftStarted:
setReplySent:
setForwardSent:
setMarkedMuteThread:
setCategoryMarked:
setCategoryInferred:
allocWithZone:
mergeFrom:
setSequenceNumber:
setHasSequenceNumber:
hasSequenceNumber
setTimestamp:
setHasTimestamp:
hasTimestamp
setEventName:
setHasEventName:
hasEventName
eventNameAsString:
StringAsEventName:
hasMessageFetched
hasMessageSent
hasMessageMoved
hasMessageCopied
hasLinkClicked
hasAppLaunch
hasAppBackground
hasAppResume
hasFlagChanged
hasReadChanged
hasMessageViewStart
hasMessageViewEnd
hasReplyDraftStarted
hasForwardDraftStarted
hasReplySent
hasForwardSent
hasMarkedMuteThread
hasCategoryMarked
hasCategoryInferred
readFrom:
writeTo:
copyTo:
sequenceNumber
timestamp
messageFetched
_timestamp
_appBackground
_appLaunch
_appResume
_categoryInferred
_categoryMarked
_eventName
_flagChanged
_forwardDraftStarted
_forwardSent
_linkClicked
_markedMuteThread
_messageCopied
_messageFetched
_messageMoved
_messageSent
_messageViewEnd
_messageViewStart
_readChanged
_replyDraftStarted
_replySent
_sequenceNumber
_has
TB,N
TI,N,V_sequenceNumber
TQ,N,V_timestamp
Ti,N,V_eventName
T@"EDPBInteractionEventMessageFetched",&,N,V_messageFetched
T@"EDPBInteractionEventMessageSent",&,N,V_messageSent
T@"EDPBInteractionEventMessageMoved",&,N,V_messageMoved
T@"EDPBInteractionEventMessageCopied",&,N,V_messageCopied
T@"EDPBInteractionEventLinkClicked",&,N,V_linkClicked
T@"EDPBInteractionEventAppLaunch",&,N,V_appLaunch
T@"EDPBInteractionEventAppBackground",&,N,V_appBackground
T@"EDPBInteractionEventAppResume",&,N,V_appResume
T@"EDPBInteractionEventFlagChanged",&,N,V_flagChanged
T@"EDPBInteractionEventReadChanged",&,N,V_readChanged
T@"EDPBInteractionEventMessageViewStart",&,N,V_messageViewStart
T@"EDPBInteractionEventMessageViewEnd",&,N,V_messageViewEnd
T@"EDPBInteractionEventReplyDraftStarted",&,N,V_replyDraftStarted
T@"EDPBInteractionEventForwardDraftStarted",&,N,V_forwardDraftStarted
T@"EDPBInteractionEventReplySent",&,N,V_replySent
T@"EDPBInteractionEventForwardSent",&,N,V_forwardSent
T@"EDPBInteractionEventMarkedMuteThread",&,N,V_markedMuteThread
T@"EDPBInteractionEventCategoryMarked",&,N,V_categoryMarked
T@"EDPBInteractionEventCategoryInferred",&,N,V_categoryInferred
setFeaturesImportant:
setFeaturesPromotion:
setHasAccountId:
hasAccountId
setHasMailboxId:
hasMailboxId
setHasMailboxType:
hasMailboxType
mailboxTypeAsString:
StringAsMailboxType:
setHasConversationId:
hasConversationId
setHasMessageId:
hasMessageId
setScore:
setHasScore:
hasScore
setPositive:
setHasPositive:
hasPositive
categoryType
setCategoryType:
setHasCategoryType:
hasCategoryType
categoryTypeAsString:
StringAsCategoryType:
setModelId:
setHasModelId:
hasModelId
setModelVersion:
setHasModelVersion:
hasModelVersion
hasFeaturesImportant
hasFeaturesPromotion
score
positive
modelId
modelVersion
featuresImportant
featuresPromotion
_accountId
_conversationId
_mailboxId
_messageId
_score
_categoryType
_featuresImportant
_featuresPromotion
_mailboxType
_modelId
_modelVersion
_positive
Tq,N,V_accountId
Tq,N,V_mailboxId
Ti,N,V_mailboxType
Tq,N,V_conversationId
Tq,N,V_messageId
Td,N,V_score
TB,N,V_positive
Ti,N,V_categoryType
TI,N,V_modelId
TI,N,V_modelVersion
T@"EDPBModelFeaturesImportant",&,N,V_featuresImportant
T@"EDPBModelFeaturesPromotion",&,N,V_featuresPromotion
setRemoveAllUserOverrides:
setHasRemoveAllUserOverrides:
hasRemoveAllUserOverrides
removeAllUserOverrides
_removeAllUserOverrides
TB,N,V_removeAllUserOverrides
setHasValue:
hasValue
TB,N,V_value
setLocale:
setHasVersion:
hasVersion
setUserId:
setHasUserId:
hasUserId
setDeviceId:
setHasDeviceId:
hasDeviceId
hasLocale
setTimezoneOffset:
setHasTimezoneOffset:
hasTimezoneOffset
setUserSegment:
setHasUserSegment:
hasUserSegment
setCategoryRootInstalled:
setHasCategoryRootInstalled:
hasCategoryRootInstalled
userId
deviceId
locale
timezoneOffset
userSegment
categoryRootInstalled
_deviceId
_userId
_locale
_timezoneOffset
_userSegment
_categoryRootInstalled
TI,N,V_version
Tq,N,V_userId
Tq,N,V_deviceId
T@"NSString",&,N,V_locale
Ti,N,V_timezoneOffset
TI,N,V_userSegment
TB,N,V_categoryRootInstalled
setHasFromMailboxId:
hasFromMailboxId
fromMailboxType
setHasFromMailboxType:
hasFromMailboxType
fromMailboxTypeAsString:
StringAsFromMailboxType:
setHasToMailboxId:
hasToMailboxId
toMailboxType
setHasToMailboxType:
hasToMailboxType
toMailboxTypeAsString:
StringAsToMailboxType:
fromMailboxId
toMailboxId
_fromMailboxId
_toMailboxId
_fromMailboxType
_toMailboxType
Tq,N,V_fromMailboxId
Ti,N,V_fromMailboxType
Tq,N,V_toMailboxId
Ti,N,V_toMailboxType
hasHeaders
_headers
T@"EDPBMessageHeaders",&,N,V_headers
setHasDuration:
hasDuration
setHasScrolledToEnd:
hasScrolledToEnd
exceptionWithName:reason:userInfo:
raise
subjectWordsCount
clearSubjectWords
subjectWordsAtIndex:
addSubjectWords:
referencesCount
clearReferences
referencesAtIndex:
addReferences:
toAddressCount
clearToAddress
toAddressAtIndex:
addToAddress:
toDomainsCount
clearToDomains
toDomainAtIndex:
addToDomain:
toIsVipsCount
clearToIsVips
toIsVipAtIndex:
addToIsVip:
toContactIdsCount
clearToContactIds
toContactIdAtIndex:
addToContactId:
ccAddressCount
clearCcAddress
ccAddressAtIndex:
addCcAddress:
ccDomainsCount
clearCcDomains
ccDomainAtIndex:
addCcDomain:
ccIsVipsCount
clearCcIsVips
ccIsVipAtIndex:
addCcIsVip:
ccContactIdsCount
clearCcContactIds
ccContactIdAtIndex:
addCcContactId:
bccAddressCount
clearBccAddress
bccAddressAtIndex:
addBccAddress:
bccDomainsCount
clearBccDomains
bccDomainAtIndex:
addBccDomain:
bccIsVipsCount
clearBccIsVips
bccIsVipAtIndex:
addBccIsVip:
bccContactIdsCount
clearBccContactIds
bccContactIdAtIndex:
addBccContactId:
setSender:
setHasSender:
hasSender
setSenderDomain:
setHasSenderDomain:
hasSenderDomain
setSenderIsVip:
setHasSenderIsVip:
hasSenderIsVip
setSenderContactId:
setHasSenderContactId:
hasSenderContactId
setUserIsSender:
setHasUserIsSender:
hasUserIsSender
subjectWords
setSubjectWords:count:
setMessageIsReply:
setHasMessageIsReply:
hasMessageIsReply
setMessageIsForwarded:
setHasMessageIsForwarded:
hasMessageIsForwarded
setUserIsTo:
setHasUserIsTo:
hasUserIsTo
setUserIsCc:
setHasUserIsCc:
hasUserIsCc
setUserIsBcc:
setHasUserIsBcc:
hasUserIsBcc
setDateReceived:
setHasDateReceived:
hasDateReceived
setListId:
setHasListId:
hasListId
references
setReferences:count:
toAddress
setToAddress:count:
toDomains
setToDomains:count:
toIsVips
setToIsVips:count:
toContactIds
setToContactIds:count:
ccAddress
setCcAddress:count:
ccDomains
setCcDomains:count:
ccIsVips
setCcIsVips:count:
ccContactIds
setCcContactIds:count:
bccAddress
setBccAddress:count:
bccDomains
setBccDomains:count:
bccIsVips
setBccIsVips:count:
bccContactIds
setBccContactIds:count:
sender
senderDomain
senderIsVip
senderContactId
userIsSender
messageIsReply
messageIsForwarded
userIsTo
userIsCc
userIsBcc
listId
_bccAddress
_bccContactIds
_bccDomains
_bccIsVips
_ccAddress
_ccContactIds
_ccDomains
_ccIsVips
_references
_subjectWords
_toAddress
_toContactIds
_toDomains
_toIsVips
_dateReceived
_listId
_sender
_senderContactId
_senderDomain
_messageIsForwarded
_messageIsReply
_senderIsVip
_userIsBcc
_userIsCc
_userIsSender
_userIsTo
Tq,N,V_sender
Tq,N,V_senderDomain
TB,N,V_senderIsVip
Tq,N,V_senderContactId
TB,N,V_userIsSender
T^q,R,N
TB,N,V_messageIsReply
TB,N,V_messageIsForwarded
TB,N,V_userIsTo
TB,N,V_userIsCc
TB,N,V_userIsBcc
TQ,N,V_dateReceived
Tq,N,V_listId
T^B,R,N
setUnknownFeatureCount:
setHasUnknownFeatureCount:
hasUnknownFeatureCount
setCcContainsContact:
setHasCcContainsContact:
hasCcContainsContact
setCcIsTopDirectAddressesBasedOnRespond:
setHasCcIsTopDirectAddressesBasedOnRespond:
hasCcIsTopDirectAddressesBasedOnRespond
setCcIsTopDirectAddressesBasedOnScroll:
setHasCcIsTopDirectAddressesBasedOnScroll:
hasCcIsTopDirectAddressesBasedOnScroll
setCcIsTopDirectAddressesBasedOnSend:
setHasCcIsTopDirectAddressesBasedOnSend:
hasCcIsTopDirectAddressesBasedOnSend
setCcIsTopDirectAddressesBasedOnView:
setHasCcIsTopDirectAddressesBasedOnView:
hasCcIsTopDirectAddressesBasedOnView
setCcIsTopIndirectAddressesBasedOnRespond:
setHasCcIsTopIndirectAddressesBasedOnRespond:
hasCcIsTopIndirectAddressesBasedOnRespond
setCcIsTopIndirectAddressesBasedOnScroll:
setHasCcIsTopIndirectAddressesBasedOnScroll:
hasCcIsTopIndirectAddressesBasedOnScroll
setCcIsTopIndirectAddressesBasedOnSend:
setHasCcIsTopIndirectAddressesBasedOnSend:
hasCcIsTopIndirectAddressesBasedOnSend
setCcIsTopIndirectAddressesBasedOnView:
setHasCcIsTopIndirectAddressesBasedOnView:
hasCcIsTopIndirectAddressesBasedOnView
setCcIsVip:
setHasCcIsVip:
hasCcIsVip
setFromListId:
setHasFromListId:
hasFromListId
setMessageIsForward:
setHasMessageIsForward:
hasMessageIsForward
setNumRecipients:
setHasNumRecipients:
hasNumRecipients
setSenderIsContact:
setHasSenderIsContact:
hasSenderIsContact
setSenderIsTopDirectAddressesBasedOnRespond:
setHasSenderIsTopDirectAddressesBasedOnRespond:
hasSenderIsTopDirectAddressesBasedOnRespond
setSenderIsTopDirectAddressesBasedOnScroll:
setHasSenderIsTopDirectAddressesBasedOnScroll:
hasSenderIsTopDirectAddressesBasedOnScroll
setSenderIsTopDirectAddressesBasedOnSend:
setHasSenderIsTopDirectAddressesBasedOnSend:
hasSenderIsTopDirectAddressesBasedOnSend
setSenderIsTopDirectAddressesBasedOnView:
setHasSenderIsTopDirectAddressesBasedOnView:
hasSenderIsTopDirectAddressesBasedOnView
setSenderIsTopIndirectAddressesBasedOnRespond:
setHasSenderIsTopIndirectAddressesBasedOnRespond:
hasSenderIsTopIndirectAddressesBasedOnRespond
setSenderIsTopIndirectAddressesBasedOnScroll:
setHasSenderIsTopIndirectAddressesBasedOnScroll:
hasSenderIsTopIndirectAddressesBasedOnScroll
setSenderIsTopIndirectAddressesBasedOnSend:
setHasSenderIsTopIndirectAddressesBasedOnSend:
hasSenderIsTopIndirectAddressesBasedOnSend
setSenderIsTopIndirectAddressesBasedOnView:
setHasSenderIsTopIndirectAddressesBasedOnView:
hasSenderIsTopIndirectAddressesBasedOnView
setSubjectIsTopWordsBasedOnRespond:
setHasSubjectIsTopWordsBasedOnRespond:
hasSubjectIsTopWordsBasedOnRespond
setSubjectIsTopWordsBasedOnScroll:
setHasSubjectIsTopWordsBasedOnScroll:
hasSubjectIsTopWordsBasedOnScroll
setSubjectIsTopWordsBasedOnSend:
setHasSubjectIsTopWordsBasedOnSend:
hasSubjectIsTopWordsBasedOnSend
setSubjectIsTopWordsBasedOnView:
setHasSubjectIsTopWordsBasedOnView:
hasSubjectIsTopWordsBasedOnView
timeReceived
setTimeReceived:
setHasTimeReceived:
hasTimeReceived
timeReceivedAsString:
StringAsTimeReceived:
setToContainsContact:
setHasToContainsContact:
hasToContainsContact
setToIsTopDirectAddressesBasedOnRespond:
setHasToIsTopDirectAddressesBasedOnRespond:
hasToIsTopDirectAddressesBasedOnRespond
setToIsTopDirectAddressesBasedOnScroll:
setHasToIsTopDirectAddressesBasedOnScroll:
hasToIsTopDirectAddressesBasedOnScroll
setToIsTopDirectAddressesBasedOnSend:
setHasToIsTopDirectAddressesBasedOnSend:
hasToIsTopDirectAddressesBasedOnSend
setToIsTopDirectAddressesBasedOnView:
setHasToIsTopDirectAddressesBasedOnView:
hasToIsTopDirectAddressesBasedOnView
setToIsTopIndirectAddressesBasedOnRespond:
setHasToIsTopIndirectAddressesBasedOnRespond:
hasToIsTopIndirectAddressesBasedOnRespond
setToIsTopIndirectAddressesBasedOnScroll:
setHasToIsTopIndirectAddressesBasedOnScroll:
hasToIsTopIndirectAddressesBasedOnScroll
setToIsTopIndirectAddressesBasedOnSend:
setHasToIsTopIndirectAddressesBasedOnSend:
hasToIsTopIndirectAddressesBasedOnSend
setToIsTopIndirectAddressesBasedOnView:
setHasToIsTopIndirectAddressesBasedOnView:
hasToIsTopIndirectAddressesBasedOnView
setToIsVip:
setHasToIsVip:
hasToIsVip
unknownFeatureCount
ccContainsContact
ccIsTopDirectAddressesBasedOnRespond
ccIsTopDirectAddressesBasedOnScroll
ccIsTopDirectAddressesBasedOnSend
ccIsTopDirectAddressesBasedOnView
ccIsTopIndirectAddressesBasedOnRespond
ccIsTopIndirectAddressesBasedOnScroll
ccIsTopIndirectAddressesBasedOnSend
ccIsTopIndirectAddressesBasedOnView
ccIsVip
fromListId
messageIsForward
numRecipients
senderIsContact
senderIsTopDirectAddressesBasedOnRespond
senderIsTopDirectAddressesBasedOnScroll
senderIsTopDirectAddressesBasedOnSend
senderIsTopDirectAddressesBasedOnView
senderIsTopIndirectAddressesBasedOnRespond
senderIsTopIndirectAddressesBasedOnScroll
senderIsTopIndirectAddressesBasedOnSend
senderIsTopIndirectAddressesBasedOnView
subjectIsTopWordsBasedOnRespond
subjectIsTopWordsBasedOnScroll
subjectIsTopWordsBasedOnSend
subjectIsTopWordsBasedOnView
toContainsContact
toIsTopDirectAddressesBasedOnRespond
toIsTopDirectAddressesBasedOnScroll
toIsTopDirectAddressesBasedOnSend
toIsTopDirectAddressesBasedOnView
toIsTopIndirectAddressesBasedOnRespond
toIsTopIndirectAddressesBasedOnScroll
toIsTopIndirectAddressesBasedOnSend
toIsTopIndirectAddressesBasedOnView
toIsVip
_numRecipients
_timeReceived
_unknownFeatureCount
_ccContainsContact
_ccIsTopDirectAddressesBasedOnRespond
_ccIsTopDirectAddressesBasedOnScroll
_ccIsTopDirectAddressesBasedOnSend
_ccIsTopDirectAddressesBasedOnView
_ccIsTopIndirectAddressesBasedOnRespond
_ccIsTopIndirectAddressesBasedOnScroll
_ccIsTopIndirectAddressesBasedOnSend
_ccIsTopIndirectAddressesBasedOnView
_ccIsVip
_fromListId
_messageIsForward
_senderIsContact
_senderIsTopDirectAddressesBasedOnRespond
_senderIsTopDirectAddressesBasedOnScroll
_senderIsTopDirectAddressesBasedOnSend
_senderIsTopDirectAddressesBasedOnView
_senderIsTopIndirectAddressesBasedOnRespond
_senderIsTopIndirectAddressesBasedOnScroll
_senderIsTopIndirectAddressesBasedOnSend
_senderIsTopIndirectAddressesBasedOnView
_subjectIsTopWordsBasedOnRespond
_subjectIsTopWordsBasedOnScroll
_subjectIsTopWordsBasedOnSend
_subjectIsTopWordsBasedOnView
_toContainsContact
_toIsTopDirectAddressesBasedOnRespond
_toIsTopDirectAddressesBasedOnScroll
_toIsTopDirectAddressesBasedOnSend
_toIsTopDirectAddressesBasedOnView
_toIsTopIndirectAddressesBasedOnRespond
_toIsTopIndirectAddressesBasedOnScroll
_toIsTopIndirectAddressesBasedOnSend
_toIsTopIndirectAddressesBasedOnView
_toIsVip
TI,N,V_unknownFeatureCount
TB,N,V_ccContainsContact
TB,N,V_ccIsTopDirectAddressesBasedOnRespond
TB,N,V_ccIsTopDirectAddressesBasedOnScroll
TB,N,V_ccIsTopDirectAddressesBasedOnSend
TB,N,V_ccIsTopDirectAddressesBasedOnView
TB,N,V_ccIsTopIndirectAddressesBasedOnRespond
TB,N,V_ccIsTopIndirectAddressesBasedOnScroll
TB,N,V_ccIsTopIndirectAddressesBasedOnSend
TB,N,V_ccIsTopIndirectAddressesBasedOnView
TB,N,V_ccIsVip
TB,N,V_fromListId
TB,N,V_messageIsForward
TI,N,V_numRecipients
TB,N,V_senderIsContact
TB,N,V_senderIsTopDirectAddressesBasedOnRespond
TB,N,V_senderIsTopDirectAddressesBasedOnScroll
TB,N,V_senderIsTopDirectAddressesBasedOnSend
TB,N,V_senderIsTopDirectAddressesBasedOnView
TB,N,V_senderIsTopIndirectAddressesBasedOnRespond
TB,N,V_senderIsTopIndirectAddressesBasedOnScroll
TB,N,V_senderIsTopIndirectAddressesBasedOnSend
TB,N,V_senderIsTopIndirectAddressesBasedOnView
TB,N,V_subjectIsTopWordsBasedOnRespond
TB,N,V_subjectIsTopWordsBasedOnScroll
TB,N,V_subjectIsTopWordsBasedOnSend
TB,N,V_subjectIsTopWordsBasedOnView
Ti,N,V_timeReceived
TB,N,V_toContainsContact
TB,N,V_toIsTopDirectAddressesBasedOnRespond
TB,N,V_toIsTopDirectAddressesBasedOnScroll
TB,N,V_toIsTopDirectAddressesBasedOnSend
TB,N,V_toIsTopDirectAddressesBasedOnView
TB,N,V_toIsTopIndirectAddressesBasedOnRespond
TB,N,V_toIsTopIndirectAddressesBasedOnScroll
TB,N,V_toIsTopIndirectAddressesBasedOnSend
TB,N,V_toIsTopIndirectAddressesBasedOnView
TB,N,V_toIsVip
setLanguage:
setToCount:
setHasToCount:
hasToCount
hasLanguage
setHeaderKeyFilteredCount:
setHasHeaderKeyFilteredCount:
hasHeaderKeyFilteredCount
toCount
language
headerKeyFilteredCount
_headerKeyFilteredCount
_language
_toCount
TI,N,V_toCount
T@"NSString",&,N,V_language
TI,N,V_headerKeyFilteredCount
_processPersistedMessages:forceFlush:
bufferedQueueWithCapacity:batchHandler:
drain
enqueue:
initWithMessagePersistence:query:batchSize:firstBatchSize:limit:handler:
flush
addPersistedMessage:
addPersistedMessages:
shouldCancel
_persistedMessageQueue
_remaining
_seenGlobalMessages
_batchedMessages
_batchSize
initGlobalInstance
remoteContentURLSession
invalidateAndCancel:
dataDetectionPersistence
attachmentPersistenceManager
mailboxActionPersistence
persistenceStateWithStatistics:
setVipManager:
setListUnsubscribeHandler:
remoteContentURLCache
setRemoteContentURLCache:
setRemoteContentURLSession:
contentRuleListManager
alarmScheduler
_senderPersistence
_remoteContentURLCache
_remoteContentURLSession
_contentRuleListManager
_alarmScheduler
T@"EDVIPManager",&,V_vipManager
T@"EDListUnsubscribeHandler",&,N,V_listUnsubscribeHandler
T@"EDPersistenceDatabase",R
T@"EDConversationPersistence",R
T@"EDLocalActionPersistence",R
T@"EDServerMessagePersistenceFactory",R
T@"EDGmailLabelPersistence",R,V_gmailLabelPersistence
T@"EDThreadPersistence",R
T@"EDSenderPersistence",R,V_senderPersistence
T@"EDMailboxActionPersistence",R,N
T@"EDMessagePersistence",R,V_messagePersistence
T@"EDMessageChangeManager",R
T@"EDPersistenceHookRegistry",R,V_hookRegistry
T@"EDSearchableIndexManager",R
T@"EDActivityPersistence",R,V_activityPersistence
T@"EDRemoteContentManager",R
T@"EDRemoteContentPersistence",R
T@"EDAttachmentPersistenceManager",R
T@"EMRemoteContentURLCache",&,N,V_remoteContentURLCache
T@"EMRemoteContentURLSession",&,N,V_remoteContentURLSession
T@"MEContentRuleListManager",R,N,V_contentRuleListManager
T@"EDReadLaterPersistence",R
T@"EDSendLaterPersistence",R
T@"EDDataDetectionPersistence",R
T@"EDRichLinkPersistence",R
T@"EFXPCAlarmScheduler",R,N,V_alarmScheduler
initWithDelegate:maxConcurrentBackgroundReaders:
enforceDataProtection
writersWaiting
setupIsComplete
isNestedDatabaseCall
performWithOptions:block:
performWithOptions:transactionError:block:
checkOutConnectionIsWriter:
protectedDatabasePersistence
protectedSchema
attachProtectedOrJournalDatabaseToConnectionIfNecessary:withSchema:
protectedDatabaseAttached
protectedDataAvailable
handleExceptionCreatingConnection:
checkInConnection:
serviceName
isMainThread
writerConnection
setIsWriter:
readerConnection
backgroundReaderConnection
detachProtectedOrJournalDatabaseFromConnectionIfNecessary:
sqlConnection
finalizeStatementsWithError:
fileSystemRepresentation
reconcileJournalsWithSchema:completionBlock:
setScheme:
setPath:
queryItemWithName:value:
setQueryItems:
fileProtectionForDatabaseType:
urlForDatabasePath:type:fileProtection:
openConnectionIsWriter:
urlForDatabasePath:type:
initWithBasePath:databaseName:maxConcurrentReaders:schema:protectedSchema:propertyMapper:protectedDatabasePersistence:
writersAreWaiting
performDatabaseSetupUsingTransaction:block:
closeAllConnections
databaseIsCorrupt
databaseName
fullPath
setSetupIsComplete:
_setupIsComplete
_schema
_protectedSchema
_propertyMapper
_connectionPool
_protectedDatabasePersistence
_basePath
_databaseName
_fullPath
T@"EDProtectedDatabasePersistence",R,N,V_protectedDatabasePersistence
T@"NSString",R,N,V_basePath
T@"NSString",R,N,V_databaseName
T@"NSString",R,N,V_fullPath
TB,V_setupIsComplete
T@"EFSQLSchema",R,N,V_schema
T@"EFSQLSchema",R,N,V_protectedSchema
T@"EFSQLPropertyMapper",R,N,V_propertyMapper
initWithBasePath:databaseName:isWriter:delegate:
initWithSQLDB:
close
isWriter
handleSQLResult:message:
isEmpty
ef_SQLBinding
bindToStatement:usingIndex:
enumerateBindingIndicesAndValuesUsingBlock:
bindToStatement:usingName:
enumerateBindingNamesAndValuesUsingBlock:
executeUpsertStatement:error:
executeStatementString:error:
isOpen
openWithError:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
configureSQLConnection
detachProtectedDatabase
journalDatabaseAttached
detachJournalDatabase
transactionTypeForWriting
beginTransaction:error:
commitTransactionWithError:
rollbackTransactionWithError:
tableExists:inDatabase:
columnExists:inTable:database:type:
columnTypeForString:
protectedDatabasePath
attachProtectedDatabaseWithName:url:error:
attachProtectedDatabaseWithName:error:
checkOut
attachJournalDatabase:withName:error:
checkIn
_attachDatabaseWithName:url:error:
_detachDatabaseWithName:
initForInMemoryDatabaseIsWriter:delegate:
initWithSQLDB:isWriter:delegate:
executeUpdateStatement:rowsChanged:
executeUpsertStatement:rowsChanged:
executeDeleteStatement:rowsChanged:
open
checkForConnectionErrorWithMessage:
databaseIsAttached:
tableExists:
attachProtectedDatabaseWithName:
attachJournalDatabase:withName:
_isWriter
_protectedDatabaseName
_journalDatabaseName
_journal
_sqlConnection
T@"EFSQLConnection",R,N,V_sqlConnection
T^{sqlite3=},R,N
Tq,R,N
initWithCount:
setCacheSize:
connection
_connectionWithType:
_lockForConnectionType:resource:
initWithConnection:generation:
setType:
setResource:
_unlockForConnectionType:resource:
acquireResource
resource
generation
releaseResource:
cacheSize
maxConcurrentReaders
backgroundReadersWaiting
maxConcurrentBackgroundReaders
_cacheLock
_cacheSize
_cacheGeneration
_checkoutLock
_checkoutMap
_writerLock
_writerConnection
_writersWaiting
_maxConcurrentBackgroundReaders
_backgroundReadersWaiting
_backgroundReaderResources
T@"<EDPersistenceDatabaseConnectionPoolDelegate>",W,N,V_delegate
TQ,N
TQ,R,N,V_maxConcurrentBackgroundReaders
_resource
_connection
_generation
_type
T@"EFResource",&,N,V_resource
T@"EDPersistenceDatabaseConnection",R,N,V_connection
TQ,R,N,V_generation
TQ,N,V_type
_earliestGeneration
_latestGeneration
Tq,R,N,V_earliestGeneration
Tq,R,N,V_latestGeneration
number
referenceCount
journalManager
journalDirectoryPath
_journalNoLongerReferenced:
initWithJournalManager:number:
_referenceCountLock
_referenceCount
_number
_journalManager
T@"EDPersistenceDatabaseJournalManager",R,N,V_journalManager
TQ,R,N,V_number
fileURLWithPath:
hasSuffix:
lastIndex
_getJournalWithBlock:
_deleteJournalNumber:
firstIndex
removeItemAtPath:error:
deleteQueue
checkExistingQueue
initWithBasePath:
currentJournalCreateIfNeeded:
oldestJournal
mergedJournal:
waitForDeletes
_journalLock
_currentJournal
_shouldDeleteCurrentJournal
_journalNumbers
_pendingDeleteJournalNumbers
_journalsByIndexes
_journalDirectoryPath
_checkExistingQueue
_deleteQueue
T@"NSString",R,C,N,V_journalDirectoryPath
T@"NSObject<OS_dispatch_queue>",R,&,N,V_checkExistingQueue
T@"NSObject<OS_dispatch_queue>",R,&,N,V_deleteQueue
T@"EDPersistenceDatabaseJournal",R,N
_initializeSchemas
_schemaProviders
_schemaWithPopulationBlock:
_protectedSchemaProviders
resolveWithSchema:
resolveToStringForTableNames:
additionalSchemaProviders
dictionaryWithDictionary:
setChildren:
table
additionalColumns
propertiesTableName
test_resetSchema
propertiesTableSchema
partialMailboxesTableSchema
T@"EFSQLPropertyMapper",R,N
column
fullNameWithDatabaseName:
tableName
deleteAction
updateAction
setAsForeignKeyForString:onDelete:onUpdate:
_column
_tableName
_deleteAction
_updateAction
T@"EFSQLColumnSchema",R,N,V_column
T@"NSString",R,C,N,V_tableName
TQ,R,N,V_deleteAction
TQ,R,N,V_updateAction
associateWithTable:
persistenceIsInitializingDatabaseWithConnection:
persistenceDidInvalidate
persistenceWillReadMessage:fromRow:
searchableIndexDidAssignTransaction:toUpdates:withMissingIdentifiers:generationWindow:
searchableIndexDidAssignIndexingType:forIdentifiers:generationWindow:
persistenceIsAddingThreadWithObjectID:journaled:generationWindow:
persistenceIsMarkingThreadAsJournaledWithObjectID:generationWindow:
persistenceIsReconcilingJournaledThreadsWithObjectIDs:generationWindow:
persistenceIsChangingThreadWithObjectID:changedKeyPaths:generationWindow:
persistenceIsDeletingThreadWithObjectID:generationWindow:
persistenceDidFinishThreadUpdates
persistenceDidResetThreadScope:
_initializeMethodSignatures
_proxiedProtocols
_registerSelector:
signatureWithObjCTypes:
numberOfArguments
_classForObjectAtArgumentIndex:
_protocolsForObjectAtArgumentIndex:
getArgumentTypeAtIndex:
weakObjectsHashTable
_registerHookResponder:withMethodDescription:
methodSignatureForSelector:
setRepresentation
_copyRespondersForSelector:
_messageRespondersWithInvocation:
_registerHookResponder:protocol:
unregisterAllHookResponders
_forwardStackInvocation:
registerDatabaseChangeHookResponder:
registerThreadChangeHookResponder:
registerSearchableIndexHookResponder:
registerMessageReadHookResponder:
registerBrandIndicatorChangeHookResponder:
_hookRespondersBySelector
_methodSignaturesBySelector
baseAccountDirectoryPathForPersonaIdentifier:
sharedManager
currentPersona
copyCurrentPersonaContextWithError:
generateAndRestorePersonaContextWithIdentityString:
iOS_baseAccountDirectoryPathForPersonaIdentifier:
restorePersonaWithSavedPersonaContext:
containerURLForSecurityApplicationGroupIdentifier:
stringWithUTF8String:
URLWithString:relativeToURL:
macOS_baseAccountDirectoryPathForPersonaIdentifier:
setQuotaEvent:
setSubmittedEvent:
setRawData:
hasQuotaEvent
hasSubmittedEvent
hasRawData
quotaEvent
submittedEvent
rawData
_quotaEvent
_rawData
_submittedEvent
T@"EDPETQuotaReachedEvent",&,N,V_quotaEvent
T@"EDPETSubmittedEvent",&,N,V_submittedEvent
T@"NSData",&,N,V_rawData
_openCurrentLogfile
UUIDString
initWithSuiteName:
contactStore
_crossPlatformUnifiedMeContactWithKeysToFetch:error:
logFileHandle
closeFile
boolForKey:
setFormatOptions:
localTimeZone
setTimeZone:
stringFromDate:
directory
currentLogFile
writeToURL:atomically:
_resetIdentifiers
_buildLogFileURLInDir:
setCurrentLogFile:
_openFileForAppending:
initWithFileDescriptor:closeOnDealloc:
setLogFileHandle:
seekToEndOfFile
offsetInFile
_writeHeader
currentLogMessageIDs
seekToFileOffset:
readDataToEndOfFileAndReturnError:
_scanForMessageIDs:logVersion:
_isLogQuotaReached
isFileURL
appendData:
initWithData:
enumerateFramesInData:block:
_framedMessage:
writeData:
synchronizeFile
_writeQuotaReachedEvent
_writeMessageDataIfNecessary:account:
_messageDataEventForMessage:account:
userID
deviceID
_currentLocaleIdentifier
persistentBits
unsignedIntValue
_truncatedUNIXTimestampFromDate:
subdataWithRange:
initWithLineThroughPoints:
evaluateReverse:
readDataToEndOfFile
_estimateStopCount:
setDroppedEventsCount:
initWithBytesNoCopy:length:freeWhenDone:
workQueue
_compressFramedMessagesIntoBatch:
_rotateLogWithCompressedData:
uppercaseString
secondsFromGMT
truncatedSHA256:
_truncatedSHA256:
contactIDCache
em_fetchContactForEmailAddress:keysToFetch:createIfNeeded:
meContactIdentifier
objectForKey:generator:
subjectWithoutPrefix
tokenizeString:
profileProvider
hashedContactIDForAddress:
hashedSubject:
prefix
hasReplyPrefix
intersectsSet:
_eventNameFromString:
_eventForName:date:
_writeMessageDataIfNecessary:
_writeEvent:
waitForPendingWrites
setMeContactIdentifier:
rotatingSalt
setRotatingSalt:
shouldLog
setShouldLog:
setCurrentLogMessageIDs:
_stringHasher
_userID
_deviceID
_shouldLog
_currentLogFile
_contactStore
_contactIDCache
_meContactIdentifier
_rotatingSalt
_directory
_logFileHandle
_currentLogMessageIDs
T@"<EMUserProfileProvider>",R,N,V_profileProvider
T@"CNContactStore",R,N,V_contactStore
T@"EFLazyCache",R,N,V_contactIDCache
T@"NSString",&,N,V_meContactIdentifier
T@"NSData",&,N,V_rotatingSalt
T@"NSObject<OS_dispatch_queue>",R,N,V_workQueue
TAI,N,V_sequenceNumber
T@"NSURL",R,N,V_directory
T@"NSURL",&,N,V_currentLogFile
T@"NSFileHandle",&,N,V_logFileHandle
TAB,N,V_shouldLog
T@"EFMutableInt64Set",&,N,V_currentLogMessageIDs
setHasDroppedEventsCount:
hasDroppedEventsCount
droppedEventsCount
_droppedEventsCount
TQ,N,V_droppedEventsCount
_clearSendersAddressesTableWithConnection:
_clearSendersTableWithConnection:
_allSenderAddressIDsWithConnection:sentMailboxURLStrings:
_addressesForSenderIDs:withConnection:
_senderIDsGroupedByContactsForSenderAddressesToIDs:withContactStore:unmatchedEmailAddresses:otherEmailAddressesByContact:
_senderIDsGroupedByContactsForEmailAddressesByContact:withConnection:
_combineDictionary:withDictionary:
_insertSendersGroupedByContact:withConnection:
_senderIDsGroupedBySimpleAddressForEmailAddresses:senderIDsByEmailAddress:
_insertGroupedSendersWithoutContact:withConnection:
_insertSenderWithAddresses:contact:connection:error:
ef_addObjectIfAbsent:
em_bestMatchForName:fromContacts:keysToCheck:
runWithConnection:sentMailboxURLs:contactStore:
changeScheduler
verifyConsistencyOfThreadScope:
backgroundWorkScheduler
updateLastViewedDateForThreadScope:
_onScheduler:performCancelableBlock:
performCancelableBlock:
unreportedJournaledObjectIDs
threadObjectIDsForThreadScope:sortDescriptors:initialBatchSize:journaledObjectIDs:batchBlock:
_oldestThreadsNeedUpdate
threadForObjectID:originatingQuery:error:
pendingChanges
pendingPositionChanges
isAddingObjectID:
isDeletingObjectID:
_flushUpdatesWithReason:
objectIDsToAddByBeforeObjectID
objectIDsToMoveByBeforeObjectID
objectIDsToDelete
_persistenceIsAddingThreadWithObjectID:
nextExistingThreadObjectIDForThreadObjectID:forSortDescriptors:excluding:
addObjectIDToAdd:before:
reportedJournaledObjectIDs
threadObjectIDsByNextExistingForThreadObjectIDs:forSortDescriptors:excluding:
changeForThreadWithObjectID:changedKeyPaths:
_addChangeToPendingChanges:forThreadObjectID:
_persistenceIsChangingThreadWithObjectID:changedKeyPaths:
_isAddingOrDeletingObjectID:
addObjectIDToMove:before:
addObjectIDToDelete:
_messageForPersistedMessage:
filterPredicate
updateOldestThreadsCancelationToken
oldestThreadObjectIDForMailbox:threadScope:
oldestThreadObjectIDsByMailbox
setUpdateOldestThreadsCancelationToken:
initWithQuery:threadScope:messagePersistence:threadPersistence:hookRegistry:remindMeNotificationController:observer:observationIdentifier:observationResumer:
setPendingChanges:
setPendingPositionChanges:
setUnreportedJournaledObjectIDs:
setReportedJournaledObjectIDs:
setOldestThreadObjectIDsByMailbox:
_changeScheduler
_backgroundWorkScheduler
_pendingChanges
_pendingPositionChanges
_unreportedJournaledObjectIDs
_reportedJournaledObjectIDs
_oldestThreadObjectIDsByMailbox
_updateOldestThreadsCancelationToken
T@"<EFScheduler>",R,N,V_changeScheduler
T@"<EFScheduler>",R,N,V_backgroundWorkScheduler
T@"NSMutableDictionary",&,N,V_pendingChanges
T@"NSMutableArray",&,N,V_pendingPositionChanges
T@"NSMutableSet",&,N,V_unreportedJournaledObjectIDs
T@"NSMutableDictionary",&,N,V_reportedJournaledObjectIDs
T@"NSMutableDictionary",&,N,V_oldestThreadObjectIDsByMailbox
T@"<EFCancelable>",&,N,V_updateOldestThreadsCancelationToken
T@"EDThreadPersistence",R,N,V_threadPersistence
_isMovingObjectID:
ef_insertObjects:before:
setObjectIDsToAddByBeforeObjectID:
setObjectIDsToMoveByBeforeObjectID:
setObjectIDsToDelete:
_objectIDsToAddByBeforeObjectID
_objectIDsToMoveByBeforeObjectID
_objectIDsToDelete
T@"NSMutableDictionary",&,N,V_objectIDsToAddByBeforeObjectID
T@"NSMutableDictionary",&,N,V_objectIDsToMoveByBeforeObjectID
T@"NSMutableSet",&,N,V_objectIDsToDelete
initWithJournalManager:hookRegistry:
supportsJournaling
_performOnDemandReconciliationForConnection:withSchema:
_ensureProtectedDatabaseOrJournalIsAttachedToConnection:withSchema:
_ensureJournalIsAttachedToConnection:withSchema:
_attachProtectedDatabaseToConnection:withSchema:error:
_isRecoverableError:
_attachJournalDatabaseToConnection:withSchema:
_detachProtectedDatabaseFromConnection:
_detachJournalDatabaseFromConnection:
protectedDatabaseName
_initializeDatabase:withConnection:schema:error:
_updateSqliteSequenceForDatabase:schema:withConnection:error:
journalDatabaseName
tables
_allReferencingColumnsForTable:
_maxRowIDForColumn:withConnection:
largestDeletedRowIDForTableName:withConnection:
isReconciling
setIsReconciling:
_reconcileJournalsWithSchema:connection:
_runReconciliationWithSchema:connection:
finishJournalReconciliation:
_resultForConnection:success:error:errorMessage:
_upgradeJournalWithConnection:schema:error:
_mergeSchema:connection:journaledRows:newRows:
_isJournalMalformedForSchema:connection:
_mergeTable:connection:journaledRows:newRows:
uniqueColumns
leftOuterJoin:on:
addResult:alias:
ef_SQLExpression
_executeStatementString:onConnection:errorMessage:
_deleteRowIDs:fromJournal:withConnection:
reconciliationMergeHandlers
handleReconciliationMergeErrorForTable:columnName:statement:journalRowID:protectedRowID:connection:rowsUpdated:error:
addAdditionalCriteriaToCleanupActivity:
_databaseIDsToDeleteForTable:
_deleteDatabaseIDs:fromTable:
nullable
columnExpressionWithFullName
ef_renderSQLExpressionInto:
_removeExistingDatabaseIDs:withColumn:connection:
columns
foreignKeyReferences
associatedColumns
initWithBasePath:hookRegistry:
_executeUpdateStatement:onConnection:errorMessage:
registerMergeHandler:forTable:
reconciliationQueue
_initializationLock
_reconciliationLock
_isReconciling
_reconciliationQueue
_reconciliationMergeHandlers
T@"NSObject<OS_dispatch_queue>",R,&,N,V_reconciliationQueue
TB,N,V_isReconciling
T@"EFLocked",R,N,V_reconciliationMergeHandlers
predicateForSendLaterMessagesWithStartDate:endDate:
predicateForExcludingMessagesInMailboxesWithTypes:
predicateForReadLaterMessagesWithStartDate:endDate:
predicateForMessagesInMailboxWithType:
sortDescriptorWithKey:ascending:
initWithQueryType:
queryWithStartDate:endDate:
T@"NSString",R,N,V_queryType
initWithMessageID:readLaterDate:displayDate:
messageID
_messageID
_readLaterDate
_displayDate
T@"ECAngleBracketIDHash",R,N,V_messageID
T@"NSDate",R,N,V_readLaterDate
T@"NSDate",R,N,V_displayDate
initWithIdentifier:encrypted:delegate:
initWithMutableDictionary:hookRegistry:
_keyFormessage:
initWithDictionary:
addEntryForMessage:date:
removeEntryForMessage:
updateDisplayDateForMessage:displayDate:
_messageHashForKey:
setNumberStyle:
numberFromString:
initWithHash:
persistedDictionaryDidChangeRemotelyWithChangedItems:deletedItems:
initWithHookRegistry:
_persistentDictionary
_persistReadLater:date:
_removeReadLater:
initWithTable:conflictTarget:
_resetDisplayDateForMessage:connection:
cloudStorage
hasReadLaterMessages
setCloudStorage:
_cloudStorage
T@"EDReadLaterCloudStorage",&,N,V_cloudStorage
nextDate
setNextDate:
T@"NSDate",C,N
initWithHookRegistry:messagePersistence:alarmDateProvider:eventDelegate:alarmScheduler:
initWithScheduler:eventName:eventHandlerQueue:
_alarmFired
beginReceivingEventsWithHandler:
currentRunLoop
runUntilDate:
sleepUntilDate:
_updateAlarm
_updateAlarmUpdatedMessages:readLaterDate:
eventDelegate
controller:scheduleAlarmForMessage:date:
dateByAddingTimeInterval:
_fetchMessagesToNotifyWithStartDate:endDate:
_notify:
observers
xpcAlarm
setNextFireDate:isUserVisible:
localizedRemindMeNotificationTitle
initWithHookRegistry:messagePersistence:alarmScheduler:
test_waitForUpdates
performDelayedTasks
resetRemindMeAlarmIfNeeded
_alarmQueue
_alarmDateProvider
_readLaterQueryCreator
_eventDelegate
_xpcAlarm
T@"NSHashTable",R,N
T@"<EDRemindMeNotificationControllerEventDelegate>",R,W,N,V_eventDelegate
T@"EFXPCAlarm",R,N,V_xpcAlarm
remoteObjectInterface
daemonInterfaceFactory
initWithRemoteClient:
outgoingMessageRepository
accountRepository
clientState
mailboxRepository
vipManagerInterface
activityRegistry
serverRemoteClientsProvider
senderRepository
messageRepository
exportedInterface
getMessageRepositoryInterface:
getOutgoingMessageRepositoryInterface:
getAccountRepositoryInterface:
getSenderRepositoryInterface:
getFetchControllerInterface:
getMailboxRepositoryInterface:
getClientStateInterface:
getSearchableIndexInterface:
getInteractionLoggerInterface:
getVIPManagerInterface:
getActivityRegistryInterface:
getDiagnosticInfoGathererInterface:
launchForEarlyRecovery:
setAllowsBackgroundResume:
T@"NSXPCInterface",R
initWithConnection:daemonInterfaceFactory:serverRemoteClientsProvider:
clientConnection
_accountRepository
_mailboxRepository
_outgoingMessageRepository
_senderRepository
_vipManagerInterface
_activityRegistry
_clientConnection
_daemonInterfaceFactory
_serverRemoteClientsProvider
_messageRepository
_clientResumer
_diagnosticInfoGatherer
T@"NSXPCConnection",R,N,V_clientConnection
T@"EDDaemonInterfaceFactory",R,N,V_daemonInterfaceFactory
T@"<EDServerRemoteClientsProvider>",R,W,N,V_serverRemoteClientsProvider
T@"EDAccountRepository",R,N,V_accountRepository
T@"EDClientState",R,N,V_clientState
T@"EDMailboxRepository",R,N,V_mailboxRepository
T@"EDMessageRepository",R,N,V_messageRepository
T@"EDOutgoingMessageRepository",R,N,V_outgoingMessageRepository
T@"EDSenderRepository",R,N,V_senderRepository
T@"EDActivityRegistry",R,N,V_activityRegistry
T@"<EMVIPManagerInterface>",R,N,V_vipManagerInterface
T@"EDClientResumer",R,N,V_clientResumer
T@"EDDiagnosticInfoGatherer",R,N,V_diagnosticInfoGatherer
remoteClient
setRemoteClient:
_remoteClient
T@"EDRemoteClient",W,V_remoteClient
_cacheURLWithBaseURL:
initWithBaseURL:diskCapacity:
_cacheURL
_diskCapacity
T@"NSURL",R,N,V_cacheURL
TQ,R,N,V_diskCapacity
_scheduleBackgroundRequests
schedulingLastUpdate
ef_isMoreThanTimeIntervalAgo:
requestInterval
batchSize
_updateScheduling
_scheduleRequestForLinks:unconditionally:withDelay:completionHandler:
countOfLinksLastSeenSince:
countOfUnrequestedLinks
setRequestInterval:
setBatchSize:
setSchedulingLastUpdate:
unconditionalRequestScheduler
tryLock
_requestRemoteLinksInBackground:unconditionally:hasMoreLinks:deferBlock:
_requestSchedulerWithInterval:
lockBeforeDate:
shouldDefer
scheduleWithBlock:
testDelegate
remoteContentManagerWillStartRequests:
_performRequests:unconditionally:withDeferBlock:completedCount:
requestedSinceLastPrune
setRequestedSinceLastPrune:
remoteContentManager:didDeferAfterRequesting:
pruneFrequency
pruneAllRemoteContentLinksWithMinimumCount:
remoteContentManager:didFinishAfterRequesting:
remoteContentLinksBelowCount:limit:
_issueAndWaitForBatch:deferBlock:successful:failed:canceled:deferred:
updateRequestCountForRemoteContentLinks:updateLastSeen:
_getTimeout
keysOfEntriesPassingTest:
abortTask:
serialDispatchQueueSchedulerWithName:
requestSchedulerBlock
initWithIdentifier:
setQualityOfService:
setRepeats:
setInterval:
_setAdditionalXPCActivityProperties:
shouldAddRemoteContentLinksForMessageWithDateReceived:
_addRemoteContentLinks:andVerify:WithParsedLinks:defaultCharsetName:
_willUpgradeToHTTPS:
indexesOfObjectsPassingTest:
ef_urlByReplacingSchemeWithScheme:
setObject:atIndexedSubscript:
addRemoteContentLinks:requiredParsing:
isEqualToSet:
ef_setByRemovingObjectsFromSet:
scheme
ef_hasHost:
ef_caseNormalizedURL
addRemoteContentLinks:newLinks:
timeoutLastUpdate
_updateTimeoutSettingDefaultIfNeeded:
minimumTimeout
maximumTimeout
setTimeoutLastUpdate:
_viewDurationsFromBiome
setMinimumTimeout:
setMaximumTimeout:
ef_min
ef_max
ef_mean
ef_standardDeviation
newPrivateStreamDefaultConfigurationWithStoreBasePath:
publisherFromStartTime:
eventBody
payload
sinkWithCompletion:receiveInput:
processInfo
isLowPowerModeEnabled
external
isConstrained
initWithRemoteContentPersistence:contentRuleListManager:urlSession:
shouldAddRemoteContentLinksForMessage:logMessage:
shouldVerifyRemoteLinks
addRemoteContentLinks:
addRemoteContentLinks:andVerifyWithParsedLinks:defaultCharsetName:
requestLock
setTestDelegate:
setRequestSchedulerBlock:
setPruneFrequency:
_requestScheduler
_unconditionalRequestScheduler
_remainingCountToSchedule
_requestSchedulerLock
_timeoutLock
_schedulingLock
_token
_remoteLinkVerificationTimes
_requestLock
_requestedSinceLastPrune
_minimumTimeout
_maximumTimeout
_timeoutLastUpdate
_requestInterval
_schedulingLastUpdate
_testDelegate
_requestSchedulerBlock
_pruneFrequency
T@"<EFScheduler>",R,N
T@"NSLock",R,N,V_requestLock
TQ,N,V_requestedSinceLastPrune
Td,N,V_minimumTimeout
Td,N,V_maximumTimeout
T@"NSDate",&,N,V_timeoutLastUpdate
Td,N,V_requestInterval
TQ,N,V_batchSize
T@"NSDate",&,N,V_schedulingLastUpdate
T@"<EDRemoteContentManagerTestDelegate>",W,N,V_testDelegate
T@?,C,N,V_requestSchedulerBlock
TQ,N,V_pruneFrequency
handleFailureInFunction:file:lineNumber:description:
_remoteContentLinksTableSchemaWithName:
count:
groupByColumn:
_initializeCurrentRowCount
_initializeProtectedRowCount
_rowCountForTable:
useAdditionalTable
_currentRowCount
maximumRemoteContentLinks
_addRemoteContentLinks:withDate:toTable:withConnection:newLinks:
_incrementCurrentRowCountBy:
_incrementProtectedRowCountBy:
arrayByAddingObjectsFromArray:
plus:
_protectedRowCount
pruneThreshold
greaterThanEqualTo:
orderBy:ascending:
_decrementCurrentRowCountBy:
_refillFromAdditionalTable
_decrementProtectedRowCountBy:
_getRemoteContentURLInfoForTable:orderedBy:inReverseOrder:limit:connection:error:
orderByColumn:ascending:
dateValue
initWithURL:requestCount:lastSeen:lastRequested:
initWithDatabase:useAdditionalTable:
analyticsScheduler
setMaximumRemoteContentLinks:
setPruneThreshold:
_useAdditionalTable
_analyticsScheduler
_maximumRemoteContentLinks
_pruneThreshold
TB,R,N,V_useAdditionalTable
T@"NSBackgroundActivityScheduler",R,N,V_analyticsScheduler
TQ,N,V_maximumRemoteContentLinks
TQ,N,V_pruneThreshold
_dropTable:connection:
_dropThreadCategoriesIndex:
_createTempMessagesTable:
_recreateMessagesIndices:
_copyMessagesData:
_swapMessagesTables:
_truncateTable:connection:
_recreateThreadsTable:
_recreateThreadsIndices:
initWithPersistentID:title:url:data:
initWithTitle:url:data:
title
_persistentID
_title
_url
T@"NSNumber",R,N,V_persistentID
T@"NSString",R,N,V_title
T@"NSURL",R,N,V_url
T@"NSData",R,N,V_data
richLinksTableSchema
messagesRichLinksTableSchema
saveRichLinkData:url:title:globalMessageID:basePath:
_hashForRichLinkData:
_richLinkFileURLWithID:basePath:
dataWithContentsOfURL:
richLinkDataForPersistentID:basePath:
_richLinkDirectoryURLWithBasePath:
richLinkFileURLWithID:basePath:
isReadableFileAtPath:
richLinksTableName
messageRichLinksTableName
saveRichLinkData:globalMessageID:basePath:
datasForPersistentIDs:basePath:
richLinkPersistentIDsForGlobalMessageID:
verifyFileExistsForRichLinkID:basePath:
suspendableSchedulerWithScheduler:
initWithScheduler:
activeProcessorCount
operationQueueSchedulerWithMaxConcurrentOperationCount:
_suspendIndexingScheduler
purgeReasons
exclusionReasons
initWithPurgeReasons:exclusionReasons:
powerObservable
_powerStateChanged
observerWithResultBlock:
subscribe:
richLinkBecameAvailable:
setIndexDelegate:
_registerDistantFutureSpotlightVerification
isAppleSilicon
searchableIndexBundleID
initWithName:protectionClass:bundleIdentifier:
initWithName:protectionClass:
schedulableDelegate
hasAvailableIndexingBudgetForSearchableIndexSchedulable:
budgetedTimeRemainingForSearchableIndexSchedulable:
budgetedItemCountRemainingForSearchableIndexSchedulable:
isPluggedIn
_queueRefresh
_queueTransitionActive:fromRefresh:
assertIsExecuting:
_scheduleSpotlightVerificationOnIndexingQueueWithCompletion:
_clearOrphanedSearchableMessagesFromDatabase
dataSource
clearOrphanedSearchableMessagesFromDatabase
_dataSourceScheduleWork:
_promptToFileRadarAboutReindexing:
_handleFailingTransactionIDs:
_scheduleSpotlightVerification
_processSpotlightVerificationWithCompletion:
_transitionWithBudgetTimeUsed:
enableSpotlightVerification
_verifySpotlightIndex
_invalidateItemsInTransactions:
setForeground:
_localClientStateURL
dataWithContentsOfURL:options:error:
clientStateFromData:
archiveRepresentation
writeToURL:options:error:
initWithCoalescingAction:
coalesceValue:
_localClientState
_saveLocalClientState:
transaction
_dataSourceInvalidateItemsGreaterThanTransaction:completion:
searchIndex
fetchLastClientStateWithCompletionHandler:
_countOfItemsInPendingQueues
_eventDataForTransitionState:
searchableIndexSchedulable:didGenerateImportantPowerEventWithIdentifier:eventData:
indexingDidSuspendForSearchableIndexSchedulable:
_suspend
indexingDidResumeForSearchableIndexSchedulable:
_resume
attachmentPersistentIDFromItemIdentifier:
ef_countObjectsPassingTest:
delayDataSourceAssignmentFuture
searchableIndex:assignTransaction:updates:
setItemsRequiringIndexing:
_dataSourceAssignTransaction:updates:completion:
searchableIndex:invalidateItemsGreaterThanTransaction:
isPerformingBlockAffectingDataSourceAndIndex
dataSourceUpdateTimeLimit
didCancelDataSourceUpdateRequestForSearchableIndexSchedulable:
updatesForSearchableIndex:excludingIdentifiers:count:cancelationToken:
removedIdentifiers
dataSourceRefreshReasons
removeItemsWithIdentifiers:reasons:fromRefresh:
itemsRequiringIndexing
_indexItems:fromRefresh:immediately:
removedDomainIdentifiers
removeItemsForDomainIdentifier:
_resumeIndexingScheduler
isDataSourceIndexingPermitted
didFinishIndexingBacklogForSearchableIndexSchedulable:
_throttleRequestedSize:targetTime:action:
_queueConsumeBudgetElapsedPeriod:
initWithDataSource:
verifyDataSamplesWithCompletionHandler:scheduler:
indexingType
isIncrementalIndexingType:
indexingTypeForSearchableIndex:item:
_pendingIdentifiers
setNeedsAllAttributesIndexingType
setNeedsAllAttributesIncludingDataDetectionResultsIndexingType
setIndexingType:
searchableIndex:assignIndexingType:forIdentifiers:
verificationDataSamplesForSearchableIndex:count:lastVerifiedMessageID:
distinctTransactionIDsForSearchableIndex:
_coalescingTimerFired
searchableIndexSchedulable:didIndexForTime:
searchableIndexSchedulable:didIndexItemCount:
_fetchLastClientState
_stopCoalescingTimer
_scheduleProcessPendingItemsFromRefresh:
_startCoalescingTimer
_queueContentsAllowsRefresh
_scheduleDataSourceRefresh
suspend
searchableIndexSchedulable:didGeneratePowerEventWithIdentifier:eventData:
_logSignpostForIndexingBatchStartWithPendingItemsCount:
_consumeBatchOfSize:
_getDomainRemovals:identifierRemovals:
_nextTransaction
setTransaction:
_identifiersStringForItems:maxLength:
globalAsyncSchedulerWithQualityOfService:
_processDomainRemovals:
updates
setRemovedDomainIdentifiers:
_logSignpostForIndexingBatchAssignedDomainRemovalCount:
beginIndexBatch
_processIndexingBatch:clientState:itemsNotIndexed:
_processIdentifierRemovals:
errorOnlyCompletionHandlerAdapter
endIndexBatchWithClientState:completionHandler:
onScheduler:then:
arrayByExcludingObjectsInArray:
identifiers
setRemovedIdentifiers:
_logSignpostForIndexingBatchAssignedUpdatesWithItemsIndexedCount:
nullFuture
_noteNeedsLastClientStateFetch
futureWithError:
onScheduler:recover:
result:
canIndexAttachments
_logSignpostForIndexingBatchCompletedWithItemsIndexedCount:
_processRefreshRequestWithCompletion:
beginUpdatesAffectingDataSourceAndIndex
endUpdatesAffectingDataSourceAndIndex
estimatedSizeInBytes
items
_identifiersForItems:
substringToIndex:
fetchIndexableAttachments
skipIndexExclusionCheck
shouldExcludeFromIndex
searchableItem
attributeSet
addTransactionValueToAttributeSet:
alwaysMarkAsIndexed
onScheduler:map:
indexSearchableItems:completionHandler:
searchableIndex:foundAttachmentPaths:forMessagePersistentID:
attachmentPaths
uniqueIdentifier
deleteSearchableItemsWithDomainIdentifiers:completionHandler:
deleteSearchableItemsWithIdentifiers:completionHandler:
purgedIdentifiers
changeStateOfSearchableItemsWithUIDs:toState:
_dataSourceRequestNeededUpdatesExcludingIdentifiers:completion:
_dataSourceVerifyRepresentativeSampleWithCompletion:
defaultSearchableIndex
_issueCommand:completionHandler:
_dataSourceAssignTransaction:forIdentifiers:completion:
reindexAllItemsWithOptions:acknowledgementHandler:
searchableIndex:invalidateItemsInTransactions:
searchableIndex:reindexSearchableItemsWithIdentifiers:acknowledgementHandler:
searchableIndex:reindexAllSearchableItemsWithAcknowledgementHandler:
removeAllIdentifiers
deleteAllSearchableItemsWithCompletionHandler:
indexItems:immediately:
indexItems:fromRefresh:immediately:
objectsAtIndexes:
initWithItem:
_doIndexItems:fromRefresh:immediately:
_dataSourcePrepareToIndexItems:fromRefresh:withCompletion:
_preprocessItemIfNecessary:fromRefresh:
referenceItem
indexOfObject:
ef_indexWhereObjectWouldBeInserted:usingComparator:
addPendingItem:
removeLastObject
_queueConsumeBudgetItemCount:
currentReasons
addIdentifiers:withReasons:
searchableIndex:willRemoveIdentifiers:type:
childIdentifiersToRemoveFromSearchableIndex:whenRemovingParentIdentifiers:
domainIdentifier
removeAllItemsWithAcknowledgementHandler:
setBundleID:
setCompletionBlock:
setResultsBlock:
setFailureBlock:
queryWithExpression:builder:
progress
addSearchQueryCancelable:
removeSearchQueryCancelable:
isFullTextSearchableCriterion
setCriterion:
shouldCancelSearchQuery
spotlightQueryExpression
setFetchAttributes:
attribute
snippetHintZoneFromString:
tokens
initWithSearchableItemIdentifier:snippetHints:
relatedUniqueIdentifier
matchingHints
resultBeforeDate:error:
ef_isTimeoutError
requiresPreprocessing
preprocess
removeItemsWithIdentifiers:
searchableIndex:prepareToIndexAttachmentsForMessageWithIdentifier:
searchableIndex:attachmentItemsForMessageWithIdentifier:
indexItems:
searchableIndex:richLinkItemsForMessageWithIdentifier:
indexAttachmentsForMessageWithIdentifier:immediately:
reasonProvider
isValidTransaction:
userHandle
searchableIndexDidThrottle:
searchableIndexDidFinishThrottle:
dataForSearchableIndex:itemIdentifier:typeIdentifier:error:
fileURLForSearchableIndex:itemIdentifier:typeIdentifier:inPlace:error:
bundleIDForSearchableIndexVerifier:
dataSamplesForSearchableIndexVerifier:searchableIndex:count:lastVerifiedMessageID:
searchableIndexForSearchableIndexVerifier:
knownTransactionIDsForSearchableIndexVerifier:
setDataSourceIndexingPermitted:
indexName
pendingIndexItemsCount
dataSourceIndexingPermitted
TB,N,GisDataSourceIndexingPermitted
pluggedIn
TB,R,N,GisPluggedIn
reindexSearchableItemsWithIdentifiers:acknowledgementHandler:
reindexAllSearchableItemsWithAcknowledgementHandler:
initWithName:dataSource:reasonProvider:
copyDiagnosticInformation
_transaction
setPersistenceAvailable:
isPersistenceAvailable
resumeCount
performBlockAffectingDataSourceAndIndex:
issueDiagnosticsRequestForMessageRowId:
indexedEmptySubjectIdentifers
removeAllItems
searchableItemSnippetDataMatchingCriterion:
removeMessages:
indexRichLinksForMessageWithIdentifier:immediately:
indexMessages:includeBody:indexingType:
markMessagesAsPrinted:
logPowerEventWithIdentifier:eventData:
attachmentBecameAvailable:
setDataSource:
setReasonProvider:
setSchedulableDelegate:
setSearchIndex:
setSkipIndexExclusionCheck:
clientStateFetched
setClientStateFetched:
setEnableSpotlightVerification:
setSearchableIndexBundleID:
coalescingDelaySeconds
setCoalescingDelaySeconds:
setDataSourceUpdateTimeLimit:
setDelayDataSourceAssignmentFuture:
_indexName
_stateTransitionScheduler
_coalescingTimer
_resumeCount
_throttledIndexingBatchSize
_throttledDataSourceBatchSize
_currentMaximumBatchSize
_batchIndexingActivity
_removedIdentifiers
_preparingItems
_pendingItems
_preprocessingItems
_processingItems
_pendingDomainRemovals
_pendingIdentifierRemovals
_indexingScheduler
_dataSourceScheduler
_addIndexItemsScheduler
_preprocessingScheduler
_mainThreadAccessibleIvarLock
_indexingBatchScheduler
_searchResultsCache
_isActive
_needsRefresh
_needsVerification
_coalesceTimerFired
_scheduledProcessing
_scheduledRefresh
_scheduledVerification
_indexImmediately
_countOfBlocksAffectingDataSourceAndIndex
_lastReindexRadarPrompt
_dataSourceIndexingPermitted
_persistenceAvailable
_skipIndexExclusionCheck
_clientStateFetched
_enableSpotlightVerification
_dataSource
_reasonProvider
_schedulableDelegate
_searchIndex
_searchableIndexBundleID
_coalescingDelaySeconds
_dataSourceUpdateTimeLimit
_delayDataSourceAssignmentFuture
Tq,R,G_transaction
T@"CSSearchableIndex",&,N,V_searchIndex
TB,N,V_skipIndexExclusionCheck
TB,N,V_clientStateFetched
TB,N,V_enableSpotlightVerification
T@"NSString",C,N,V_searchableIndexBundleID
Td,N,V_coalescingDelaySeconds
Td,N,V_dataSourceUpdateTimeLimit
Tq,R
active
TB,R,GisActive
T@"EFFuture",&,N,V_delayDataSourceAssignmentFuture
T@"<EDSearchableIndexDataSource>",W,N,V_dataSource
T@"<EDSearchableIndexReasonProvider>",W,N,V_reasonProvider
T@"<EDSearchableIndexSchedulableDelegate>",W,N,V_schedulableDelegate
performingBlockAffectingDataSourceAndIndex
TB,R,GisPerformingBlockAffectingDataSourceAndIndex
persistenceAvailable
TB,GisPersistenceAvailable,V_persistenceAvailable
T@"EFObservable",R,N
TB,N,GisDataSourceIndexingPermitted,V_dataSourceIndexingPermitted
criterion
mailboxIDs
setMailboxIDs:
_criterion
_mailboxIDs
T@"<EDSearchableCriterion>",&,N,V_criterion
T@"NSIndexSet",C,N,V_mailboxIDs
_identifiersPassingReasonsTest:
deletedIdentifiers
removeIdentifier:
setPurgeReasons:
setExclusionReasons:
_reasonsByIdentifier
_purgeReasons
_exclusionReasons
T@"NSSet",C,N,V_purgeReasons
T@"NSSet",C,N,V_exclusionReasons
identifierForAttachmentPersistentID:
setRequiresPreprocessing:
metadatum
attachmentFileURL
getResourceValue:forKey:error:
initWithItemContentType:
setRequiresImport:
setContentURL:
setRelatedUniqueIdentifier:
accountIdentifier
setAccountIdentifier:
mailboxIdentifiers
setMailboxIdentifiers:
peopleFromCommentedAddresses:
setAuthors:
emailAddressWithString:
recipientAddresses
emailAddressesFromStrings:invalidAddresses:
dateSent
markAsSent:sender:senderHandle:recipients:recipientHandles:transport:
markAsReceived:sender:senderHandle:recipients:recipientHandles:transport:
markAsDownloaded:userHandle:
initWithUniqueIdentifier:domainIdentifier:attributeSet:
distantFuture
setExpirationDate:
ef_notSupportedError
fileSize
itemInstantiationTime
underlyingData
setUnderlyingData:
hasCompleteData
T@"NSDate",R,N
T@"NSData",&,N
initWithAttachmentPersistentID:messagePersistentID:metadatum:
attributeSetForFilePromise
attachmentPersistentID
setAttachmentPersistentID:
setMetadatum:
setAttributeSetForFilePromise:
searchableItemProcessingDelay
setSearchableItemProcessingDelay:
_searchableItem
_requiresPreprocessing
_underlyingData
_indexingType
_itemInstantiationTime
_attachmentPersistentID
_metadatum
_attributeSetForFilePromise
_searchableItemProcessingDelay
T@"EFPromise",&,N,V_attributeSetForFilePromise
T@"NSString",C,N,V_attachmentPersistentID
T@"NSString",C,N,V_messagePersistentID
T@"EDSearchableIndexAttachmentItemMetadatum",&,N,V_metadatum
TB,N,V_requiresPreprocessing
Td,N,V_searchableItemProcessingDelay
T@"NSString",R,C,N,V_identifier
Tq,N,V_indexingType
TQ,R,N,V_itemInstantiationTime
T@"NSData",&,N,V_underlyingData
setDomainIdentifier:
setSenderAddress:
setRecipientAddresses:
setDateSent:
T@"NSArray",C,N
T@"NSDate",&,N
initWithAttachmentFileURL:builder:
canReadAttachmentFile
_attachmentFileURL
_domainIdentifier
_accountIdentifier
_mailboxIdentifiers
_senderAddress
_recipientAddresses
_dateSent
T@"NSString",C,N,V_domainIdentifier
T@"NSString",C,N,V_accountIdentifier
T@"NSArray",C,N,V_mailboxIdentifiers
T@"NSString",C,N,V_senderAddress
T@"NSArray",C,N,V_recipientAddresses
T@"NSDate",&,N,V_dateReceived
T@"NSDate",&,N,V_dateSent
T@"NSURL",R,N,V_attachmentFileURL
initWithTime:periodDuration:numberOfItemsToIndexOnResume:enableActivityBasedScheduling:autoStartMaintenanceIndexing:allowBacklogIndexingOnPower:
initWithTime:periodDuration:numberOfItemsToIndexOnResume:
registerDefaults:
doubleForKey:
periodDuration
time
numberOfItemsToIndexOnResume
defaultConfiguration
nonSchedulingBudgetConfiguration
enableActivityBasedScheduling
setEnableActivityBasedScheduling:
autoStartMaintenanceIndexing
setAutoStartMaintenanceIndexing:
allowBacklogIndexingOnPower
setAllowBacklogIndexingOnPower:
_enableActivityBasedScheduling
_autoStartMaintenanceIndexing
_allowBacklogIndexingOnPower
_time
_periodDuration
_numberOfItemsToIndexOnResume
TB,N,V_enableActivityBasedScheduling
TB,N,V_autoStartMaintenanceIndexing
TB,N,V_allowBacklogIndexingOnPower
Td,R,N,V_time
Td,R,N,V_periodDuration
Tq,R,N,V_numberOfItemsToIndexOnResume
initWithKeyName:searchable:searchableByDefault:unique:multiValued:
JSONObjectWithData:options:error:
ef_posixLocale
setDateFormat:
setSystemBuildVersion:
setTransactionDate:
transactionValue
transactionAttributeKey
setValue:forCustomKey:
transactionDate
systemBuildVersion
_transactionValue
_transactionDate
_systemBuildVersion
Tq,N,V_transaction
T@"NSNumber",R,N
T@"NSDate",&,N,V_transactionDate
T@"NSString",C,N,V_systemBuildVersion
initWithMessage:bodyData:fetchBody:
initWithIdentifier:message:bodyData:fetchBody:
indexingPriorityByIndexingType:
accountIdentifierForMessage:
domainIdentifierForAccountID:mailboxPersistentID:
URLString
csIdentifierForMailbox:
domainIdentifierForMessage:
bodyData
setBodyData:
initWithDisplayName:handles:handleIdentifier:
setMailRead:
setMailFlagged:
setMailRepliedTo:
setMailFlagColor:
setMailConversationID:
setMailGMailLabels:
mailboxIdentifiersForMessage:result:
setMailMessageID:
setContentCreationDate:
setMailDateReceived:
setPrimaryRecipients:
setAdditionalRecipients:
setHiddenAdditionalRecipients:
headersDictionary
setEmailHeaders:
isPartOfExistingThread
setExistingThread:
setPartiallyDownloaded:
setDataOwnerType:
setAccountHandles:
csAccountTypeString
setAccountType:
isEncrypted
includeEncryptedBody
bestAlternativePart:
setHasCompleteData:
setHTMLContentData:
setSecurityMethod:
addStaticAttributesToAttributeSet:
dataDetectionAttributes
linksAttributeKey
addressesAttributeKey
calendarEventsAttributeKey
phoneNumbersAttributeKey
trackingNumbersAttributeKey
flightNumbersAttributeKey
externalDataTypeIdentifiers
setProviderDataTypeIdentifiers:
addDataDetectionAttributesToAttributeSet:
_addStaticAttributesToAttributeSet:
addAttachmentAttributesToAttributeSet:
addUpdatableAttributesToAttributeSet:
addFlagsAttributesToAttributeSet:
setIsUpdate:
itemWithMessage:bodyData:fetchBody:
itemWithIdentifier:message:bodyData:fetchBody:
setIsEncrypted:
setIncludeEncryptedBody:
fetchBody
_isEncrypted
_includeEncryptedBody
_fetchBody
_hasCompleteData
_bodyData
T@"<EDBaseMessage>",R,N,V_message
T@"NSData",&,N,V_bodyData
TB,N,V_isEncrypted
TB,N,V_includeEncryptedBody
TB,R,N,V_fetchBody
TB,N,V_hasCompleteData
characterAtIndex:
compare:options:range:
setNeedsToScheduleRecurringActivity:
enableIndexingAndBeginScheduling:budgetConfiguration:
setScheduling:
needsReindex
_removeAllItemsFromIndexAndWait:options:
setNeedsReindex:
needsToScheduleRecurringActivity
_removeItemsForPersistedMessages:
initWithDatabase:messagePersistence:richLinkPersistence:hookResponder:
removeAllItemsFromIndexAndWait:skipInvalidation:
setNeedsReindex
_needsReindex
_needsToScheduleRecurringActivity
TB,N,V_needsReindex
TB,N,V_needsToScheduleRecurringActivity
T@"EDSearchableIndexPersistence",R,N
T@"EDSearchableIndexScheduler",R,N
T@"EDSearchableIndex",R,N
ef_insertObject:usingComparator:allowDuplicates:
addItem:
setItems:
_items
_referenceItem
T@"NSMutableArray",&,N,V_items
T@"<EDIndexableItem>",R,N,V_referenceItem
T@"NSString",C,N,V_attachmentID
richLinkItemIdentifier
setRichLinkItemIdentifier:
richLinkID
setRichLinkID:
setTitle:
setUrl:
_richLinkItemIdentifier
_richLinkID
T@"NSString",C,N,V_richLinkItemIdentifier
T@"NSString",C,N,V_richLinkID
T@"NSString",C,N,V_title
T@"NSString",C,N,V_url
searchableMessagesTableSchema
searchableAttachmentsTableSchema
searchableRichLinksTableSchema
searchableDataDetectionResultsTableSchema
searchableRebuildTableSchema
searchableMessageTombstonesTableSchema
searchableMessagesTableName
notEqualTo:
_attachmentDataForMessageWithIdentifier:connection:
_attachmentItemsFromAttachmentData:limit:cancelationToken:
rebuildIndexState
setRebuildIndexState:
richLinkItemIdentifierFromSearchableItemIdentifier:
messageIDandRichLinkIDFromRichLinkIdentifier:
_searchableIndexMessageIndexingTypes
_messagesRequiringIndexingForType:excludingIdentifiers:limit:
searchableIndexItemsFromMessages:type:
_identifiersForRemovedItemsUsingConnection:
_identifiersForTombstonesOfType:connection:
_attachmentDataForItemsRequiringIndexingExcludingIdentifiers:limit:cancelationToken:connection:
_richLinkDataForItemsRequiringIndexingExcludingIdentifiers:limit:cancelationToken:connection:
_richLinkItemsFromRichLinkData:limit:cancelationToken:
additionalFilterClause
messagesWhere:sortedBy:limit:
_canPerformIncrementalIndexForIdentifier:indexingType:
_addTombstonesForIdentifiers:type:connection:
hasUpdates
_assignIndexedItems:transaction:connection:
_assignTombstonesForIdentifiers:type:transaction:connection:
_purgeSpotlightTombstonesBeforeTransaction:connection:
_removeIndexedIdentifiers:connection:
setLastProcessedAttachmentID:
_identifiersForAttachmentsInTransactions:usingConnection:
_messageIDTransactionIDDictionaryToVerifyUsingConnection:count:lastVerifiedMessageID:
verificationDataSamplesFromMessageIDTransactionIDDictionary:
clearBindingsWithError:
resetWithError:
_assignIndexedItems:connection:query:indexedBindingsGenerator:
_assignIndexedAttachmentItems:transaction:connection:
_assignIndexedRichLinkItems:transaction:connection:
_assignIndexedDataDetectionItems:transaction:connection:
_identifiersForDeletedMessagesUsingConnection:
_identifiersForDeletedAttachmentsUsingConnection:
lastProcessedAttachmentID
attachmentItemMetadataForAttachmentID:attachmentPersistentID:messagePersistentID:name:mailboxID:result:
_identifiersForAttachmentsWithQuery:usingConnection:
initWithRichLinkItemIdentifier:messagePersistentID:metadatum:
searchableRichLinkItemMetadataForRichLinkID:richLinkItemIdentifier:messagePersistentID:mailboxID:title:url:result:
allMailboxIdentifiersForMessage:result:
_addSearchableDataDetectionResults:withMessage:transaction:
attachmentItemMetadataForAttachmentID:messagePersistentID:name:mailboxID:result:
_lastProcessedAttachmentIDLock
_dataDetectionPersistence
_lastProcessedAttachmentID
_rebuildIndexState
T@"<EDSearchableIndexHookResponder>",R,W,N,V_hookResponder
T@"EDRichLinkPersistence",R,N,V_richLinkPersistence
Tq,V_lastProcessedAttachmentID
TQ,V_rebuildIndexState
completeSearchableIndexRichLinkItemIdentifierFromID:
setAttribute:forKey:
richLinkPersistentID
setRichLinkPersistentID:
_richLinkPersistentID
T@"NSString",C,N,V_richLinkPersistentID
T@"EDSearchableIndexRichLinkItemMetadatum",&,N,V_metadatum
T@"NSString",R,C,N,V_richLinkItemIdentifier
deferrableActivityTypes
budgetTimeUserDefaultsKeyForIndexName:
_budgetTimeFromUserDefaults
_stopAllIndexing
_startScheduling
_stopScheduling
budgetConfiguration
setBudgetedItemCountRemaining:
beginIndexingForActivityType:activity:
activityTypes
_xpcCriteriaBuilderBlockForActivityType:
_registerActivityForType:builder:runner:
indexingStateQueue
activities
indexingEnabledForActivityTypes
_setBudgetedTimeRemaining:
_enableIndexingForActivityType:
_logIndexingPowerEventWithIdentifier:additionalEventData:usePersistentLog:
_beginIndexingForActivityType:activity:
isDeferrableActivityType:
_disableIndexingForActivityType:defer:
_stopIndexingForActivityType:shouldDeferIfPossible:
_isIndexingEnabledForActivityType:
_isIndexingEnabledByActivities
scheduledDeferralCheck
setScheduledDeferralCheck:
_deferActivitiesIfNecessary
_periodicallyCheckForDeferralIfNecessary
_setDataSourceIndexingPermitted:
schedulable
budgetTimeUserDefaultsKey
setDouble:forKey:
budgetedTimeRemaining
budgetedItemCountRemaining
initWithSchedulable:budgetConfiguration:
_xpcActivityIdentifierForActivityType:
deferIndexingForActivityType:
isIndexingEnabledForActivityType:
setNoActivityIndexingTime:
noActivityIndexingTime
setMaintenanceIndexingTime:
maintenanceIndexingTime
setBudgetedTimeRemaining:
isScheduling
setBudgetTimeUserDefaultsKey:
setIndexingStateQueue:
setActivities:
setIndexingEnabledForActivityTypes:
_scheduling
_scheduledDeferralCheck
_budgetedTimeRemaining
_budgetedItemCountRemaining
_noActivityIndexingTime
_maintenanceIndexingTime
_schedulable
_budgetConfiguration
_budgetTimeUserDefaultsKey
_indexingStateQueue
_activities
_indexingEnabledForActivityTypes
TB,N,V_scheduledDeferralCheck
T@"NSString",C,N,V_budgetTimeUserDefaultsKey
T@"NSObject<OS_dispatch_queue>",&,N,V_indexingStateQueue
T@"NSMutableDictionary",&,N,V_activities
T@"NSMutableSet",&,N,V_indexingEnabledForActivityTypes
TB,GisDataSourceIndexingPermitted,V_dataSourceIndexingPermitted
Tq,V_budgetedItemCountRemaining
Td,V_budgetedTimeRemaining
Td,V_noActivityIndexingTime
Td,V_maintenanceIndexingTime
scheduling
TB,N,GisScheduling,V_scheduling
T@"<EDSearchableIndexSchedulable>",R,W,N,V_schedulable
T@"EDSearchableIndexBudgetConfiguration",R,N,V_budgetConfiguration
em_stringForQuotingWithCharacter:
queryStringByJoiningQueries:withOperand:
transformDataForVerification:
expressionFromDataSamples:
verifySearchableItem:againstExpectedData:
fetchAttributes
_itemsRequiringIndexing
_removedDomainIdentifiers
T@"NSArray",C,N,V_itemsRequiringIndexing
T@"NSArray",C,N,V_removedIdentifiers
T@"NSArray",C,N,V_removedDomainIdentifiers
_failingSamples:tester:
_addFailingSamples:toResultDictionary:
_findMissingTransactionIDs:dataSource:
_verifyDataSamples:
_verifySamples:
transactionID
_missingTransactionIDsFromTransactionIDs:
ef_temporarilyUnavailableError
setAttribute:
setFoundAttributeResultsBlock:
setChangedAttributeResultsBlock:
indexVerificationActivity
setIndexVerificationActivity:
_indexVerificationActivity
T@"NSObject<OS_os_activity>",&,N,V_indexVerificationActivity
T@"<EDSearchableIndexVerifierDataSource>",W,N,V_dataSource
toEmailAddresses
setToEmailAddresses:
setDeleted:
setTransactionID:
indexedAsEmptySubject
setIndexedAsEmptySubject:
setUserInfo:
_subject
_toEmailAddresses
_deleted
_transactionID
_indexedAsEmptySubject
_userInfo
T@"NSString",C,N,V_subject
T@"NSArray",C,N,V_toEmailAddresses
T@"NSString",C,N,V_deleted
T@"NSNumber",&,N,V_transactionID
T@"NSNumber",&,N,V_flags
T@"NSNumber",&,N,V_indexedAsEmptySubject
T@"NSDictionary",C,N,V_userInfo
ifNull:second:
initWithCountLimit:
blockedSenderEmailAddresses
_reloadBlockedSendersWithAddresses:
addResultColumn:fromTable:
groupByColumn:fromTable:
emailAddressToBucketCache
databaseIDToEmailAddressCache
_bucketForSenderAddress:
_moveSenderWithEmailAddresses:toBucket:sync:userInitiated:
_simpleAddressesForAddresses:
_moveSenderWithSimpleEmailAddresses:toBucket:sync:userInitiated:transactionGeneration:
_invalidateCaches
_setIsBlocked:forAddresses:
_emailAddressForDatabaseID:connection:
_addAddressesWithDatabaseIDs:toSenderWithDatabaseID:connection:error:
_bucketForSenderWithDatabaseID:connection:
_contactIdentifierForSenderWithDatabaseID:connection:
initWithDatabaseID:addresses:contactIdentifier:bucket:
_moveSenderWithDatabaseID:toBucket:connection:
setBucket:
_addNewSendersForEmailAddresses:toBucket:connection:newSenders:
bucket
_addressIDsForAddresses:connection:
addAddress:
removeAddress:
contactIdentifier
_addNewSenderWithAddressIDs:contactIdentifier:toBucket:connection:senderDatabaseID:
setDatabaseID:
_addressesGroupedByContactForAddresses:unmatchedAddresses:otherAddressesByContact:
_addressIDsGroupedByContactsForAddressesByContact:withConnection:addressesByID:
_addressesGroupedBySimpleAddressForAddresses:
blockEmailAddress:
unblockEmailAddress:
ef_addOptionalObject:
unifiedContactCountWithError:
allContactEmailAddressesWithError:
_moveAddressesFromSentMessagesToPrimaryForMessages:
bucketForSenderAddress:
moveSenderWithEmailAddresses:toBucket:
addJoinsForSenderBucketToSelectStatement:withSourceAddressColumn:
initWithDatabase:blockedSenderManager:hookRegistry:contactStore:
relevantSendersForSearch
_invalidateCachesForAddresses:
addAddresses:toSender:
removeAddresses:fromSender:
_addNewSender:toBucket:connection:
setContactStore:
_syncStartedLock
_contactStoreLock
_emailAddressToBucketCache
_databaseIDToEmailAddressCache
T@"CNContactStore",&,N,V_contactStore
T@"EFLazyCache",R,N,V_emailAddressToBucketCache
T@"EFLazyCache",R,N,V_databaseIDToEmailAddressCache
persistenceScheduler
simpleAddressesForRelevantSendersForSearchWithCompletionHandler:
_persistenceScheduler
T@"EDSenderPersistence",R,N,V_senderPersistence
T@"<EFScheduler>",R,N,V_persistenceScheduler
initWithDatabase:hookResponder:
writeQueue
setWriteQueue:
_writeQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_writeQueue
alarmDateProvider
currentCalendar
ef_dateHoursAgo:
nextAlarmDate
dateByAddingUnit:value:toDate:options:
sendLaterQueryCreator
outgoingRepository
status
setNextAlarmDate:
_updateAlarmUpdatedMessages:sendLaterDate:
initWithHookRegistry:messagePersistence:outgoingRepository:alarmScheduler:
resetSendLaterAlarmIfNeeded
setSendLaterQueryCreator:
setXpcAlarm:
_outgoingRepository
_sendLaterQueryCreator
T@"EDOutgoingMessageRepository",R,N,V_outgoingRepository
T@"<EDMessageChangeHookResponder>",R,N,V_hookResponder
T@"EDQueryCreator",&,N,V_sendLaterQueryCreator
T@"<EDSendLaterUpdateControllerAlarmDateProvider>",R,N,V_alarmDateProvider
T@"EFXPCAlarm",&,N,V_xpcAlarm
initWithDaemonInterfaceFactory:listener:
connectedClients
valueForEntitlement:
setExportedInterface:
setExportedObject:
removeRemoteClient:
setInterruptionHandler:
setInvalidationHandler:
addRemoteClient:
endpoint
initWithDaemonInterfaceFactory:
serverXPCEndpoint
listener
setListener:
setDaemonInterfaceFactory:
_listener
_connectedClients
T@"NSXPCListener",&,N,V_listener
T@"EFLocked",R,N,V_connectedClients
T@"EDDaemonInterfaceFactory",&,N,V_daemonInterfaceFactory
T@"NSXPCListenerEndpoint",R,N
mailboxIDForMailboxURL:useNumericSearch:supportsLabels:
initWithDatabase:gmailLabelPersistence:mailboxID:useNumericSearch:supportsLabels:
serverMessagesTableSchema
serverLabelsTableSchema
_remoteIDStringForRemoteIDArray:
_serverMessagesWithWhereClause:limitClause:returnLastEntries:
imapUID
ed_enumerateUIDsWithLimit:reverseEnumeration:usingBlock:
executeWithNamedBindings:rowsChanged:error:
_serverMessageForRow:connection:
initWithMessageIDHash:serverMessage:messagePersistentID:
serverMessage
setRead:
setReplied:
setFlagged:
setDraft:
setForwarded:
setRedirected:
setJunkLevelSetByUser:
setJunkLevel:
setFlagColor:
ec_redactedStringForMailboxURL:
setPersistentID:
remoteIDObject
_addLabels:removeLabels:forUID:connection:
useNumericSearch
hasChanges
stringWithCapacity:
rangeValue
ef_isUnsignedIntegerString
messageCount
unreadMessageCount
undeletedMessageCount
maximumIMAPUID
minimumIMAPUID
clearRemoteIDsForAllMessages
serverMessagesForMessageIDHeaders:
assignUIDsToServerMessages:
deleteAllServerMessagesInMailbox
applySortedFlags:
enumerateUIDsInRanges:withBlock:
_supportsLabels
_useNumericSearch
Tq,R,N,V_mailboxID
TB,R,N,V_useNumericSearch
TI,R,N
TB,R,N,V_supportsLabels
ed_enumerateUIDsWithLimit:reverseEnumeration:queryRangeCountLimit:batchLimit:usingBlock:
ed_nextRangesWithRangeCountLimit:reverseEnumeration:
ed_logDescription
addIndexesInRange:
enumerateRangesWithOptions:usingBlock:
enumerateRangesUsingBlock:
_serverMessage
T@"ECAngleBracketIDHash",R,N,V_messageIDHash
T@"ECServerMessage",R,N,V_serverMessage
Tq,R,N,V_messagePersistentID
deleteAttachmentsTableWithConnection:
deleteMessageAttachmentsTableWithConnection:
createMessageAttachmentsTableWithConnection:
createNewAttachmentTableWithConnection:
createNewSearchableAttachmentsTable:
runWithConnection:dataProvider:
insertIntoMessageAttachmentTableGlobalMessageID:attachmentMetadata:attachmentID:connection:
insertAttachmentIntoAttachmentTableWithAttachmentMetadata:connection:
serviceForMail
topSalienciesForMailboxId:limit:error:
substringWithRange:
enumerateTagsForString:range:unit:scheme:options:orthography:usingBlock:
_initWithStoreIdentifier:usingEndToEndEncryption:
initWithDefaults:store:
_registerDefaultsObservers
observeChangesForKey:cloudKey:conflictResolver:
tokenWithLabel:cancelationBlock:
ef_observeKeyPath:options:usingBlock:
proxyChangeHandler
beginSyncing
setProxyChangeHandler:
_cancelable
_defaults
_store
_changeActionsByKey
_proxyChangeHandler
T@?,C,N,V_proxyChangeHandler
excludedColumnExpressionForColumnName:
updateLargestDeletedRowID:forTableName:withConnection:
_stopObservingNetworkReachability
executionQueue
setBackOffInterval:
_cancelTimer
setPendingWaitingForNetwork:
setWork:
canceledCallback
setCanceledCallback:
_doScheduleTask:canceledCallback:
task
initialDelay
timerSource
_incrementBackoffInterval
backOffInterval
setTimerSource:
setTask:
observeForNetworkReachability
isReachable
work
_startObservingNetworkReachability
sharedNetworkObserver
_reportReachabilityChange:
addNetworkReachableObserver:selector:
isNetworkReachable
setIsReachable:
pendingWaitingForNetwork
maxBackOffInterval
setMaxBackOffInterval:
backoffMultiplier
setBackoffMultiplier:
setExecutionQueue:
_observeForNetworkReachability
_isReachable
_pendingWaitingForNetwork
_initialDelay
_maxBackOffInterval
_backoffMultiplier
_timerSource
_executionQueue
_backOffInterval
_task
_canceledCallback
_work
T@"NSObject<OS_dispatch_source>",&,N,V_timerSource
T@"NSObject<OS_dispatch_queue>",&,N,V_executionQueue
Td,N,V_backOffInterval
TB,N,V_isReachable
TB,N,V_pendingWaitingForNetwork
T@?,C,N,V_task
T@?,C,N,V_canceledCallback
T@?,C,N,V_work
Td,N,V_initialDelay
Td,N,V_maxBackOffInterval
Td,N,V_backoffMultiplier
TB,N,V_observeForNetworkReachability
unmigratedCount
setState:
isFullyMigrated
workScheduler
beginMigratingThreadScope:
_finishMigrating
_migrateNextBatchWithGeneration:
reset
fail
verifyIsMigratingGeneration:andIsInState:logIdentifier:logAction:logCount:
nextBatch
queryHandler
addThreads:
_scheduleFinalizationForBatchedObjectIDs:withGeneration:forDelete:
_failMigration
threadFinalizationInterval
verifyIsMigratingGeneration:andIsInState:orState:logIdentifier:logAction:logCount:
removeDeletedObjectIDs:
removeMigratedObjectIDs:
endMigratingThreadScope:
threadMigratorDidComplete:
addObjectIDs:
isRecentlyMigrated:
removeObjectIDs:
addDeletedObjectIDs:
deleteThreadsWithObjectIDs:
initWithThreadScope:threadPersistence:queryHandler:delegate:
addObjectIDsToMigrate:
changeObjectIDsToMigrate:
deleteObjectIDsToMigrate:
setThreadFinalizationInterval:
_state
_workScheduler
_queryHandler
_threadFinalizationInterval
T@"EFLocked",R,N,V_state
T@"<EFScheduler>",R,N,V_workScheduler
T@"EDInMemoryThreadQueryHandler",R,N,V_queryHandler
T@"<EDThreadMigratorDelegate>",R,W,N,V_delegate
Td,N,V_threadFinalizationInterval
_removeAllObjectIDs
_verifyIsMigratingGeneration:stateVerifier:logIdentifier:logAction:logCount:
_objectIDsToMigrate
_recentlyMigratedObjectIDs
_recentlyDeletedObjectIDs
TQ,N,V_state
initWithName:columns:primaryKeyColumns:conflictResolution:
_recomputeThreads
threadScopeManager
threadScopesByDatabaseID
consistencyCheckScheduler
_isThreadScopePrecomputed:shouldMigrate:
isThreadScopePrecomputed:shouldMigrate:
databaseIDForThreadScope:
setLastViewedDate:forThreadScope:
mailboxTypes
removeThreadScopesForMailboxScope:
removeAllThreadScopes
_enumerateThreadObjectIDsForThreadScope:filterClause:sortDescriptors:batchBlock:
_addOrderByToThreadSelect:forSortDescriptors:
_databaseIDForThreadObjectID:
_mailboxesForThreadDatabaseID:
_sendersForThreadDatabaseID:senderBucket:
_sendersFromMessagesForThreadObjectID:
_recipientsOfType:forThreadDatabaseID:
_recipientsOfType:fromMessagesForThreadObjectID:
_scheduleRecomputationForThread:reason:
initWithGlobalMessageID:
_nonJournaledSubjectForThreadWithObjectID:connection:
initWithPrefix:subjectWithoutPrefix:
_flagColorsFromRow:
areAnyEmailAddressesBlocked:
initWithStartDate:endDate:
_messageThreadExpressionForThreadObjectID:
_addressesFromSelectStatement:additionalRowHandling:
_senderAddressesExpressionForMessages:
_addressesFromMessageAddressesStatement:
_recipientAddressesExpressionForRecipientType:messages:
orderByColumn:fromTable:ascending:
setDistinct:
_threadExpressionForThreadScopeDatabaseID:conversation:
_comparisonExpressionForSortDescriptors:conversationID:threadExpression:threadScopeDatabaseID:connection:
insertObjects:atIndexes:
_columnForSortDescriptor:
initWithLeft:operator:right:
_threadDatabaseIDExpressionForThreadScopeDatabaseID:conversation:
threadRecomputationDebouncer
_messageThreadExpressionForThreadScope:objectIDs:
_persistedMessagesForMailboxScope:messageExpression:
addThreadReplacingExisting:journaled:
_iterateWrappedMessagesByConversationForPersistedMessages:messageFilter:writeBlock:
_addThreadScopeToDatabaseWithMailboxType:filterPredicate:needsUpdate:lastViewedDate:connection:
mailboxScopeForMailboxTypes:forExclusion:
initWithMailboxScope:filterPredicate:
addThreadScope:withDatabaseID:needsUpdate:lastViewedDate:
setNeedsUpdate:forThreadScope:
_threadScopedToResetForActivatedAccount:
_resetThreadScope:withDatabaseID:
_enumerateThreadScopesUsingBlock:
_addedMailboxObjectIDsForActivatedAccount:
_getIndividualMailboxScopes:unifiedMailboxThreadScopes:forAccount:
isEphemeral
_addThreadScopeToDatabase:withMailboxDatabaseID:filterPredicate:needsUpdate:lastViewedDate:updateThreadScopeManager:connection:
_addPersistedMessages:journaled:generationWindow:
_filteredPersistedMessagesForPersistedMessages:
_writeThreadedMessages:withChangedKeyPaths:journaled:generationWindow:
threadObjectID
updateThreadTableWithJournaled:
ef_addAbsentObjectsFromArrayAccordingToEquals:
_persistenceIsDeletingMessages:generationWindow:
_persistenceIsChangingFlags:messages:generationWindow:
_persistenceIsChangingFlags:wrappedMessages:threadObjectID:threadScopeDatabaseID:
_iterateWrappedMessagesByConversationForPersistedMessages:block:
_updateNewestReadMessageWithWrappedMessage:threadExpression:
_recalculateDisplayMessageForThreadObjectID:threadScopeDatabaseID:
_recalculateNewestReadMessageForThreadObjectID:threadScopeDatabaseID:
_deleteWrappedMessages:fromThreadWithObjectID:threadScopeDatabaseID:generationWindow:
_updateThreadForDeleteWithObjectID:threadScopeDatabaseID:generationWindow:
_deleteMailboxesFromWrappedMessages:fromThreadWithDatabaseID:messageThreadExpression:
_updateBasicPropertiesAfterDeleteForThreadObjectID:threadScopeDatabaseID:
_deleteSendersFromThreadWithDatabaseID:messageThreadExpression:
_deleteRecipientsOfType:fromThreadWithDatabaseID:messageThreadExpression:
_upsertForThreadsWithThreadScopeDatabaseID:conversation:
min:
_countMessagesForExpression:
_addKeyPathsForBasicPropertiesChangeToKeyPaths:
_mailboxDatabaseIDsForWrappedMessages:
removeThreadScope:
wrappedMessages
threadScopeDatabaseID
_threadForWrappedMessages:objectID:
_messagesAreJournaledForThreadWithObjectID:
precomputedMailboxScopeForThreadScope:hasFollowUpPredicate:
_reportSenderBucketChangeForThreadsWithSenderAddresses:generation:
isServerSearchResult
initWithConnection:
_wrappedMessagesByThreadScopeForPersistedMessages:messageFilter:
_expressionForThreadScope:
initWithCache:messagePersistence:threadScopeDatabaseID:threadScopeExpression:
createMessagesWithThreadObjectID:wrappedMessages:
_persistedMessagesByPossibleThreadScopeForPersistedMessages:
_wrappedMessageForPersistedMessages:threadScope:messageFilter:
threadScopes
initWithMessage:databaseID:
_threadQueryForThreadScope:
ef_SQLIsolatedExpression
isNot:
_addKeyPathsForDisplayMessageChangeToKeyPaths:
setPriorityForDisplayMessageSenderForThreadObjectID:
insertValue
concatenate:
countDistinct:
_messageThreadExpressionForThreadScope:conversationExpression:
_messageMailboxesExpressionForMailboxScope:
_messageFilterExpressionForFilterPredicate:
likely:
_messageMailboxesExpressionForMailboxObjectIDs:
isPredicateForMessagesInMailboxObjectID:mailboxObjectID:
isPredicateForMessagesInMailboxWithType:mailboxType:
_messageMailboxesExpressionForMailboxType:
isPredicateForMessagesWithActiveFollowUp:accountObjectID:
_messageActiveFollowUpExpressionForAccountWithObjectID:
initWithExpression:
_addThreadScopeToDatabase:needsUpdate:lastViewedDate:updateThreadScopeManager:
initWithMessage:messagePersistence:
_statementForOldestThreadInMailbox:threadScope:createMailboxDatabaseIDIfNecessary:
_mailboxScopeForThreadScope:andFilterPredicate:
threadScopeManager:gatherStatisticsForThreadScopesWithDatabaseIDs:block:
threadScopeFromPrecomputedMailboxScope:hasFollowUpPredicate:mailboxProvider:
threadScopeManager:mailboxScopeExists:
threadScopeManager:isValidMailboxObjectID:
threadScopeManager:populateThreadScopesWithBlock:
threadScopeManager:evictThreadScopesWithDatabaseIDs:completionBlock:
initWithMessagePersistence:database:hookRegistry:vipManager:blockedSenderManager:
persistenceStateForThreadScope:
_inactiveMailboxDatabaseIDsForMailboxScope:forThreadScopeDatabaseID:
persistenceDidChangeSenderBucketForSender:generation:
addThreadScopeToDatabase:needsUpdate:lastViewedDate:
statisticsForThreadScopesWithDatabaseIDs:
threadRecomputationScheduler
setThreadRecomputationScheduler:
setThreadRecomputationDebouncer:
_threadObjectIDsToRecompute
_threadRecomputationLock
_migratingThreadScopes
_migratingThreadScopesLock
_threadScopeManager
_consistencyCheckScheduler
_threadRecomputationScheduler
_threadRecomputationDebouncer
T@"EDThreadScopeManager",R,N,V_threadScopeManager
T@"<EFScheduler>",R,N,V_consistencyCheckScheduler
T@"<EFScheduler>",&,N,V_threadRecomputationScheduler
T@"EFDebouncer",&,N,V_threadRecomputationDebouncer
_threadQuery
sqlHelper
_displayWrappedMessageWithNewestReadWrappedMessage:
executeUpdateSQL:bindings:errorHandler:
initWithMessages:threadDatabaseID:
addMailboxes
addSenders
addRecipientsForType:
executeUpsertSQL:bindings:errorHandler:
executeSelectSQL:bindings:errorHandler:rowHandler:
updateNewestReadAndDisplayMessage
_iterateNewestUnreadWrappedMessagesInWrappedMessages:iteratorBlock:
initWithSQLHelper:messagePersistence:threadScopeDatabaseID:threadObjectID:wrappedMessages:
_newestUnreadWrappedMessagesWithNewestReadWrappedMessage:
_threadScopeDatabaseID
_threadObjectID
_wrappedMessages
_sqlHelper
T@"_EDThreadPersistence_SQLHelper",R,N,V_sqlHelper
Tq,R,N,V_threadScopeDatabaseID
T@"EMThreadObjectID",R,N,V_threadObjectID
T@"NSArray",R,N,V_wrappedMessages
T@"EMThread",R,N
threadDatabaseID
updateNewestReadMessage:
updateDisplayMessageWithUnreadWrappedMessages:
addKeyPathsForDisplayMessageChangeToKeyPaths:
setPriorityForDisplayMessageSender
_ensureTempMessagesView
_mailboxDatabaseIDsForWrappedMessages
senderDatabaseIDsAndDates
addSenders:
recipientDatabaseIDsAndDatesForRecipientType:
addRecipients:ofType:
dropTemporaryView
executeSQL:errorHandler:
_didCreateTempMessagesView
_threadDatabaseID
T@"_EDThreadPersistence_ThreadMessages",R,N,V_messages
Tq,R,N,V_threadDatabaseID
T@"EDMessagePersistence",R,N
T@"EMThreadObjectID",R,N
initWithCache:
_ensureTempScopeView
threadScopeExpression
_didCreateTempScopeView
_threadScopeExpression
T@"<EFSQLExpressable>",R,N,V_threadScopeExpression
preparedStatements
_preparedStatements
T@"NSMutableDictionary",R,N,V_preparedStatements
executeSQL:indexBindings:errorHandler:
T@"_EDThreadPersistence_StatementCache",R,N,V_cache
_databaseID
T@"EMMessage",R,N,V_message
Tq,R,N,V_databaseID
sharedKeySetForKeys:
dictionaryWithSharedKeySet:
inMemoryObservationID
precomputedObservationID
_isCurrentObservationToken:
setInMemoryObservationID:
setPrecomputedObservationID:
inMemoryQueryHandler
setInMemoryQueryHandler:
precomputedQueryHandler
setPrecomputedQueryHandler:
threadMigrator
setThreadMigrator:
_inMemoryObservationID
_precomputedObservationID
_inMemoryQueryHandler
_precomputedQueryHandler
_threadMigrator
T@"EMObjectID",&,N,V_inMemoryObservationID
T@"EMObjectID",&,N,V_precomputedObservationID
T@"EDInMemoryThreadQueryHandler",&,N,V_inMemoryQueryHandler
T@"EDPrecomputedThreadQueryHandler",&,N,V_precomputedQueryHandler
T@"EDThreadMigrator",&,N,V_threadMigrator
underlyingHandler
initAsEphemeralID:
_createUnderlyingHandlerIfNeededAndStart
_tearDownWithQueryHandlerBlock:
isStarted
snippetHints
searchableItemIdentifier
_addSnippetHintsToExtraInfo:
_isRunning
_underlyingHandler
T@"EFLocked",R,N,V_underlyingHandler
T@"<EDThreadQueryHandlerDelegate>",R,W,N,V_delegate
initWithCollectionItemID:mailboxScope:
_initializeThreadScopesIfNeeded
_threadScopeInfoForThreadScope:
needsUpdate
_precomputedMailboxScopeForFilterPredicate:hasFollowUpPredicate:
excludeTypes
excludeMailboxes
_shouldPrecomputeMailboxType:
_shouldPrecomputeMailboxWithObjectID:
mailboxScopeForMailboxType:forExclusion:
predicateForMessagesWithActiveFollowUpInAccountsOfMailboxes:mailboxTypeResolver:
predicateForMessagesWithActiveFollowUpInSent
mailboxTypesToPrecompute
initWithDatabaseID:needsUpdate:lastViewedDate:
_threadScopesWithLastViewedOlderThanLimit
_numberOfThreadScopesToEvictFrom:upTo:
_evictAtLeast:upTo:fromThreadScopesWithDatabaseIDs:
setNeedsUpdate:
setLastViewedDate:
evictionScheduler
_evictionScoreForCount:timeInterval:
lastViewedDate
_threadScopes
_threadScopesLock
_evictionScheduler
T@"<EDThreadScopeManagerDataSource>",R,W,N,V_dataSource
T@"<EFScheduler>",R,N,V_evictionScheduler
_needsUpdate
_lastViewedDate
TB,N,V_needsUpdate
T@"NSDate",&,N,V_lastViewedDate
setArray:
serialQueue
setServiceName:
setSerialQueue:
_serviceName
_serialQueue
T@"NSString",&,N,V_serviceName
T@"NSObject<OS_dispatch_queue>",&,N,V_serialQueue
setConversationIDsBySyncKey:
conversationIDsBySyncKey
_syncKeyForConversationID:
ef_UUID
_setCloudStorageValue:forKey:
_synchronize
unmatchedKeys
_mergeServerChanges:
queue
setQueue:
setUnmatchedKeys:
_conversationIDsBySyncKey
_unmatchedKeys
T@"<EDUbiquitousConversationManagerDelegate>",W,N,V_delegate
T@"<EDConversationRemoteStorage>",&,N,V_cloudStorage
T@"NSMutableDictionary",&,N,V_conversationIDsBySyncKey
T@"NSMutableSet",&,N,V_unmatchedKeys
TB,N,V_initialized
instances
_reset
initWithDelayInterval:scalingFactor:
_registerInstance:
delayInterval
scalingFactor
lastUpdateDate
ef_timeIntervalSinceDate:
updateCounter
setUpdateCounter:
setLastUpdateDate:
setHasChangesSinceLastUpdate:
resumeClientDebouncer
setLastAcknowledgementDate:
hasChangesSinceLastUpdate
lastAcknowledgementDate
invoke
T@"EFLocked",R,N
resumable
setResumable:
setResumeClientDebouncer:
resumeClientScheduler
setResumeClientScheduler:
_updatesLock
_unacknowledgedUpdates
_hasChangesSinceLastUpdate
_delayInterval
_scalingFactor
_lastUpdateDate
_lastAcknowledgementDate
_updateCounter
_resumable
_resumeClientDebouncer
_resumeClientScheduler
Td,R,N,V_delayInterval
Tq,R,N,V_scalingFactor
TB,N,V_hasChangesSinceLastUpdate
T@"NSDate",&,N,V_lastUpdateDate
T@"NSDate",&,N,V_lastAcknowledgementDate
Tq,N,V_updateCounter
T@"<EDResumable>",&,N,V_resumable
T@"EFDebouncer",&,N,V_resumeClientDebouncer
T@"<EFScheduler>",&,N,V_resumeClientScheduler
_messageNeedsNotification:
blockedSenderReader
initWithBlockedSenderReader:vipReader:
messagesNeedingNotification:
_blockedSenderReader
T@"<EMBlockedSenderReader>",R,N,V_blockedSenderReader
_initializeIfNeeded
mailboxCutoffs
_shouldUpdateCutoffForMessage:
_updateCutoffForMailbox:date:
_writeToDefaults
_readFromDefaults
setMailboxCutoffs:
cutoffDateForMailbox:
isMessageAboveMailboxCutoff:
updateCutoffForMailboxesWithMessages:
clearCutoffForMailbox:
_mailboxCutoffs
T@"NSMutableDictionary",&,N,V_mailboxCutoffs
initWithDirectoryURL:keyValueStore:accountsProvider:contactStore:delegate:
hasActiveAccounts
_initializeKVSStore
_accountsChanged:
_loadVIPs
_synchronizeKVStore
_updateLocalWithCloud:refresh:
gatherStatisticsWithVIPCount:
_keyValueStoreChanged:
operationQueue
_allVIPEmailAddresses
allVIPEmailAddresses
keyValueStore
isSubsetOfSet:
initWithIdentifier:name:emailAddresses:
_contactForName:emailAddresses:
_isVIPForContact:orAddresses:
stringFromContact:style:
_saveVIPs
_removeVIPsWithIdentifiers:
_vipsDictionary
plistURL
propertyListWithData:options:format:error:
_saveVIPsLocally
_updateCloudWithLocal
_serializedData
dataWithPropertyList:format:options:error:
_cloudKeyForIdentifier:
_validatedCloudVIPFromStore:withCloudKey:
_mergeVIPs
stringByReplacingOccurrencesOfString:withString:options:range:
componentsFromString:
givenName
familyName
removeObserver:name:object:
predicateForContactsMatchingEmailAddress:
_contactDescriptors
unifiedContactsMatchingPredicate:keysToFetch:error:
predicateForContactsMatchingName:
_contactFromContacts:matchingMostAddresses:
descriptorForRequiredKeysForStyle:
globalAsyncScheduler
vipManager:hasVIPNotificationsEnabledWithCompletion:
hasVIPs
getAllVIPsWithCompletion:
vipWithIdentifier:
saveVIPs:
removeVIPsWithIdentifiers:
removeVIPsWithEmailAddresses:
T@"EAEmailAddressSet",R,C,N
initWithDirectoryURL:accountsProvider:delegate:
allVIPWaitForResult
setKeyValueStore:
_vipsByIdentifier
_cachedEmailAddresses
_initializeLock
_keyValueStore
_operationQueue
_plistURL
T@"NSUbiquitousKeyValueStore",&,N,V_keyValueStore
T@"NSObject<OS_dispatch_queue>",R,N,V_operationQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_notificationQueue
T@"NSURL",R,N,V_plistURL
T@"<EDVIPManagerDelegate>",W,N,V_delegate
observer:gotVIPs:
observer:updatedVIPs:removedVIPs:
registerObserver:observationIdentifier:
_observersLock
_observersByIdentifier
T@"NSSet",R,C,N,VallVIPWaitForResult
_scheduleVisibleMessageReload
_reloadVisibleMessages
reload
_observationScheduler
_reloadDebouncer
_notifyToken
setOptions:
initWithParser:
_setContentRuleLists:
_remoteObjectRegistry
unregisterExportedObject:interface:
defaultWebpagePreferences
setAllowsContentJavaScript:
setDataDetectorTypes:
bundle
URLForResource:withExtension:subdirectory:
setInjectedBundleURL:
_initWithConfiguration:
setProcessPool:
setUserContentController:
_richLinkMetadataScript
webViewConfiguration
_addRemoteContentWebViewObserver
_parseHTMLData:withOptions:characterEncodingName:messageID:
_enableDataDetection
dataDetectionPromise
setDataDetectionPromise:
remoteContentPromise
setRemoteContentPromise:
richLinkPromise
setRichLinkPromise:
setBaseURL:
baseURL
loadData:MIMEType:characterEncodingName:baseURL:
setRemoteContentLinks:
setDataDetectionResults:
setRichLinkResults:
dataDetectionResults
baseURL:didRequestRemoteContentURLs:
requestDataDetectionResultsWithBaseURL:
receiveDataDetectionResults:
logWebBundleMessage:
remoteObjectInterfaceWithProtocol:
setClasses:forSelector:argumentIndex:ofReply:
registerExportedObject:interface:
isDataDetectionEnabled
setIsDataDetectionEnabled:
_dataDetectionResults
_extractDataDetectorResultsMetadata:
category
_getDataDetectionCategoryString:
removeAllContentRuleLists
addContentRuleList:
_setRemoteContentRuleLists:
initWithBase64EncodedString:options:
metadataWithDataRepresentation:
originalURL
_retrieveRichLinkMetadata:
_disableDataDetection
contentRuleListMangager:didAddRuleList:
contentRuleListMangager:didUpdateContentRuleList:oldContentRuleList:
contentRuleListMangager:didRemoveRuleList:
_webContentObserverInterface
_webContentObserver
_currentContentRuleLists
_contentRuleListsObservationToken
_isDataDetectionEnabled
_options
T@"WKWebView",R,N,V_webView
TQ,N,V_options
TB,N,V_isDataDetectionEnabled
parser
setParser:
_parser
T@"EDWebContentParser",W,N,V_parser
_baseURL
_dataDetectionPromise
_remoteContentPromise
_richLinkPromise
T@"NSURL",&,N,V_baseURL
T@"EFPromise",&,N,V_dataDetectionPromise
T@"EFPromise",&,N,V_remoteContentPromise
T@"EFPromise",&,N,V_richLinkPromise
richLinkResults
_remoteContentLinks
_richLinkResults
T@"NSDictionary",C,N,V_dataDetectionResults
T@"NSArray",C,N,V_remoteContentLinks
T@"NSArray",C,N,V_richLinkResults
initWithExtensionBundleIdentifier:kind:
_restoreFromUserDefaults
_runActivity
_activityDelay
_refreshTimelinesWithReason:
lastUpdate
timelineControllers
reloadTimelineWithReason:
_updateLastUpdateInformation
numberOfUpdates
isDateInToday:
setNumberOfUpdates:
setLastUpdate:
_writeUserDefaults
_scheduleActivityWithReason:
distantPast
initWithWidgetBundleIdentifier:widgetKindIdentifiers:hookRegistry:
setTimelineControllers:
_timelineControllers
_lastUpdate
_numberOfUpdates
T@"NSArray",&,N,V_timelineControllers
T@"NSDate",&,N,V_lastUpdate
Tq,N,V_numberOfUpdates
_loadFromURL:
_stringAddressesFromPopulationBlock:
_scheduleWrite
arrayWithContentsOfURL:
_simpleAddressForString:
addAddressesToList:
removeAddressesFromList:
writeScheduler
enumerateByteRangesUsingBlock:
initWithName:object:userInfo:
postNotification:
initWithDirectory:populationBlock:
isAddressInList:
addSenderToList:
removeSenderFromList:
isWaitingOnUnlock
_isWaitingOnUnlock
_addresses
_writeScheduler
T@"EFLocked",R,N,V_addresses
T@"<EFScheduler>",R,N,V_writeScheduler
TB,R,N,V_isWaitingOnUnlock
initWithMutableDictionary:delegate:
moveSenderWithEmailAddresses:toBucket:userInitiated:
_removeSenderWithEmailAddresses:
_addressToUseFromAddress:
ef_sha256String
handleExternalChangesWithAddedOrChangedItems:deletedItems:
initWithChangedItems:deletedItems:requiresSynchronizing:
_mergeChangesForRemotelyChangedKeys:localStore:cloudStore:
moveSender:toBucket:userInitiated:
removeSender:
T@"<MUIBucketSenderCloudStorageDelegate>",R,W,N,V_delegate
_hasBeenUpgraded
_verifyDatabaseAccessAndPerformUpgrade
observingContentProtection
setObservingContentProtection:
_canAccessDatabase
_upgrade
_resetDatabaseAndCloud
autoGenderatedSenderAddresses
_markUpgradeComplete
sentMailboxURLs
resetInitialSenderStateWithSentMailboxURLs:contactStore:
setBool:forKey:
performUpgradeIfNecessary
initWithDelegate:senderCloudStorage:sentMailboxURLs:contactStore:
_observingContentProtection
_sentMailboxURLs
T@"<MUIBucketSendersCloudStorageUpgraderDelegate>",R,W,N,V_delegate
T@"MUIBucketSenderCloudStorage",R,N,V_cloudStorage
T@"NSArray",R,N,V_sentMailboxURLs
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
T@"<EFAssertableScheduler>",R,N,V_scheduler
TB,N,V_observingContentProtection
groupedSenderQueryHandler
_addNewObjectIDs:before:
_notifyObserverOfLatestGroupedSenders
_addNewObjectIDs:after:
replaceObjectAtIndex:withObject:
setDidFinishInitialLoad:
didFinishInitialLoad
observer
unscreenedSenderDisplayNamesDidChange:
initWithQuery:messagePersistence:hookRegistry:remindMeNotificationController:observer:
setObjectID:
setGroupedSenderQueryHandler:
setObserver:
_groupedSenderObjectIDs
_didFinishInitialLoad
_objectID
_groupedSenderQueryHandler
_observer
T@"EMObjectID",&,N,V_objectID
T@"EDGroupedSenderQueryHandler",&,N,V_groupedSenderQueryHandler
T@"<EMMessageRepositoryUnscreenedSendersQueryObserver_xpc>",&,N,V_observer
T@"<EFScheduler>",&,N,V_scheduler
TB,N,V_didFinishInitialLoad
unarchivedObjectOfClass:fromData:error:
archivedDataWithRootObject:requiringSecureCoding:error:
cc_contains_contact
featureValueWithDouble:
cc_is_top_direct_addresses_based_on_respond
cc_is_top_direct_addresses_based_on_scroll
cc_is_top_direct_addresses_based_on_send
cc_is_top_direct_addresses_based_on_view
cc_is_top_indirect_addresses_based_on_respond
cc_is_top_indirect_addresses_based_on_scroll
cc_is_top_indirect_addresses_based_on_send
cc_is_top_indirect_addresses_based_on_view
cc_is_vip
from_list_id
message_is_forward
message_is_reply
num_recipients
sender_is_contact
sender_is_top_direct_addresses_based_on_respond
sender_is_top_direct_addresses_based_on_scroll
sender_is_top_direct_addresses_based_on_send
sender_is_top_direct_addresses_based_on_view
sender_is_top_indirect_addresses_based_on_respond
sender_is_top_indirect_addresses_based_on_scroll
sender_is_top_indirect_addresses_based_on_send
sender_is_top_indirect_addresses_based_on_view
sender_is_vip
subject_is_top_words_based_on_respond
subject_is_top_words_based_on_scroll
subject_is_top_words_based_on_send
subject_is_top_words_based_on_view
time_received
featureValueWithString:
to_contains_contact
to_is_top_direct_addresses_based_on_respond
to_is_top_direct_addresses_based_on_scroll
to_is_top_direct_addresses_based_on_send
to_is_top_direct_addresses_based_on_view
to_is_top_indirect_addresses_based_on_respond
to_is_top_indirect_addresses_based_on_scroll
to_is_top_indirect_addresses_based_on_send
to_is_top_indirect_addresses_based_on_view
to_is_vip
user_is_bcc
user_is_cc
user_is_sender
user_is_to
featureValueForName:
featureNames
initWithCc_contains_contact:cc_is_top_direct_addresses_based_on_respond:cc_is_top_direct_addresses_based_on_scroll:cc_is_top_direct_addresses_based_on_send:cc_is_top_direct_addresses_based_on_view:cc_is_top_indirect_addresses_based_on_respond:cc_is_top_indirect_addresses_based_on_scroll:cc_is_top_indirect_addresses_based_on_send:cc_is_top_indirect_addresses_based_on_view:cc_is_vip:from_list_id:message_is_forward:message_is_reply:num_recipients:sender_is_contact:sender_is_top_direct_addresses_based_on_respond:sender_is_top_direct_addresses_based_on_scroll:sender_is_top_direct_addresses_based_on_send:sender_is_top_direct_addresses_based_on_view:sender_is_top_indirect_addresses_based_on_respond:sender_is_top_indirect_addresses_based_on_scroll:sender_is_top_indirect_addresses_based_on_send:sender_is_top_indirect_addresses_based_on_view:sender_is_vip:subject_is_top_words_based_on_respond:subject_is_top_words_based_on_scroll:subject_is_top_words_based_on_send:subject_is_top_words_based_on_view:time_received:to_contains_contact:to_is_top_direct_addresses_based_on_respond:to_is_top_direct_addresses_based_on_scroll:to_is_top_direct_addresses_based_on_send:to_is_top_direct_addresses_based_on_view:to_is_top_indirect_addresses_based_on_respond:to_is_top_indirect_addresses_based_on_scroll:to_is_top_indirect_addresses_based_on_send:to_is_top_indirect_addresses_based_on_view:to_is_vip:user_is_bcc:user_is_cc:user_is_sender:user_is_to:
setCc_contains_contact:
setCc_is_top_direct_addresses_based_on_respond:
setCc_is_top_direct_addresses_based_on_scroll:
setCc_is_top_direct_addresses_based_on_send:
setCc_is_top_direct_addresses_based_on_view:
setCc_is_top_indirect_addresses_based_on_respond:
setCc_is_top_indirect_addresses_based_on_scroll:
setCc_is_top_indirect_addresses_based_on_send:
setCc_is_top_indirect_addresses_based_on_view:
setCc_is_vip:
setFrom_list_id:
setMessage_is_forward:
setMessage_is_reply:
setNum_recipients:
setSender_is_contact:
setSender_is_top_direct_addresses_based_on_respond:
setSender_is_top_direct_addresses_based_on_scroll:
setSender_is_top_direct_addresses_based_on_send:
setSender_is_top_direct_addresses_based_on_view:
setSender_is_top_indirect_addresses_based_on_respond:
setSender_is_top_indirect_addresses_based_on_scroll:
setSender_is_top_indirect_addresses_based_on_send:
setSender_is_top_indirect_addresses_based_on_view:
setSender_is_vip:
setSubject_is_top_words_based_on_respond:
setSubject_is_top_words_based_on_scroll:
setSubject_is_top_words_based_on_send:
setSubject_is_top_words_based_on_view:
setTime_received:
setTo_contains_contact:
setTo_is_top_direct_addresses_based_on_respond:
setTo_is_top_direct_addresses_based_on_scroll:
setTo_is_top_direct_addresses_based_on_send:
setTo_is_top_direct_addresses_based_on_view:
setTo_is_top_indirect_addresses_based_on_respond:
setTo_is_top_indirect_addresses_based_on_scroll:
setTo_is_top_indirect_addresses_based_on_send:
setTo_is_top_indirect_addresses_based_on_view:
setTo_is_vip:
setUser_is_bcc:
setUser_is_cc:
setUser_is_sender:
setUser_is_to:
_cc_contains_contact
_cc_is_top_direct_addresses_based_on_respond
_cc_is_top_direct_addresses_based_on_scroll
_cc_is_top_direct_addresses_based_on_send
_cc_is_top_direct_addresses_based_on_view
_cc_is_top_indirect_addresses_based_on_respond
_cc_is_top_indirect_addresses_based_on_scroll
_cc_is_top_indirect_addresses_based_on_send
_cc_is_top_indirect_addresses_based_on_view
_cc_is_vip
_from_list_id
_message_is_forward
_message_is_reply
_num_recipients
_sender_is_contact
_sender_is_top_direct_addresses_based_on_respond
_sender_is_top_direct_addresses_based_on_scroll
_sender_is_top_direct_addresses_based_on_send
_sender_is_top_direct_addresses_based_on_view
_sender_is_top_indirect_addresses_based_on_respond
_sender_is_top_indirect_addresses_based_on_scroll
_sender_is_top_indirect_addresses_based_on_send
_sender_is_top_indirect_addresses_based_on_view
_sender_is_vip
_subject_is_top_words_based_on_respond
_subject_is_top_words_based_on_scroll
_subject_is_top_words_based_on_send
_subject_is_top_words_based_on_view
_time_received
_to_contains_contact
_to_is_top_direct_addresses_based_on_respond
_to_is_top_direct_addresses_based_on_scroll
_to_is_top_direct_addresses_based_on_send
_to_is_top_direct_addresses_based_on_view
_to_is_top_indirect_addresses_based_on_respond
_to_is_top_indirect_addresses_based_on_scroll
_to_is_top_indirect_addresses_based_on_send
_to_is_top_indirect_addresses_based_on_view
_to_is_vip
_user_is_bcc
_user_is_cc
_user_is_sender
_user_is_to
Td,N,V_cc_contains_contact
Td,N,V_cc_is_top_direct_addresses_based_on_respond
Td,N,V_cc_is_top_direct_addresses_based_on_scroll
Td,N,V_cc_is_top_direct_addresses_based_on_send
Td,N,V_cc_is_top_direct_addresses_based_on_view
Td,N,V_cc_is_top_indirect_addresses_based_on_respond
Td,N,V_cc_is_top_indirect_addresses_based_on_scroll
Td,N,V_cc_is_top_indirect_addresses_based_on_send
Td,N,V_cc_is_top_indirect_addresses_based_on_view
Td,N,V_cc_is_vip
Td,N,V_from_list_id
Td,N,V_message_is_forward
Td,N,V_message_is_reply
Td,N,V_num_recipients
Td,N,V_sender_is_contact
Td,N,V_sender_is_top_direct_addresses_based_on_respond
Td,N,V_sender_is_top_direct_addresses_based_on_scroll
Td,N,V_sender_is_top_direct_addresses_based_on_send
Td,N,V_sender_is_top_direct_addresses_based_on_view
Td,N,V_sender_is_top_indirect_addresses_based_on_respond
Td,N,V_sender_is_top_indirect_addresses_based_on_scroll
Td,N,V_sender_is_top_indirect_addresses_based_on_send
Td,N,V_sender_is_top_indirect_addresses_based_on_view
Td,N,V_sender_is_vip
Td,N,V_subject_is_top_words_based_on_respond
Td,N,V_subject_is_top_words_based_on_scroll
Td,N,V_subject_is_top_words_based_on_send
Td,N,V_subject_is_top_words_based_on_view
T@"NSString",&,N,V_time_received
Td,N,V_to_contains_contact
Td,N,V_to_is_top_direct_addresses_based_on_respond
Td,N,V_to_is_top_direct_addresses_based_on_scroll
Td,N,V_to_is_top_direct_addresses_based_on_send
Td,N,V_to_is_top_direct_addresses_based_on_view
Td,N,V_to_is_top_indirect_addresses_based_on_respond
Td,N,V_to_is_top_indirect_addresses_based_on_scroll
Td,N,V_to_is_top_indirect_addresses_based_on_send
Td,N,V_to_is_top_indirect_addresses_based_on_view
Td,N,V_to_is_vip
Td,N,V_user_is_bcc
Td,N,V_user_is_cc
Td,N,V_user_is_sender
Td,N,V_user_is_to
important
featureValueWithInt64:
importantProbability
featureValueWithDictionary:error:
initWithImportant:importantProbability:
setImportant:
setImportantProbability:
_important
_importantProbability
Tq,N,V_important
T@"NSDictionary",&,N,V_importantProbability
URLOfModelInThisBundle
initWithContentsOfURL:error:
initWithContentsOfURL:configuration:error:
modelWithContentsOfURL:error:
initWithMLModel:
modelWithContentsOfURL:configuration:error:
loadContentsOfURL:configuration:completionHandler:
predictionFromFeatures:options:error:
model
dictionaryValue
predictionFromFeatures:error:
initWithFeatureProviderArray:
predictionsFromBatch:options:error:
featuresAtIndex:
loadWithConfiguration:completionHandler:
initWithConfiguration:error:
predictionFromCc_contains_contact:cc_is_top_direct_addresses_based_on_respond:cc_is_top_direct_addresses_based_on_scroll:cc_is_top_direct_addresses_based_on_send:cc_is_top_direct_addresses_based_on_view:cc_is_top_indirect_addresses_based_on_respond:cc_is_top_indirect_addresses_based_on_scroll:cc_is_top_indirect_addresses_based_on_send:cc_is_top_indirect_addresses_based_on_view:cc_is_vip:from_list_id:message_is_forward:message_is_reply:num_recipients:sender_is_contact:sender_is_top_direct_addresses_based_on_respond:sender_is_top_direct_addresses_based_on_scroll:sender_is_top_direct_addresses_based_on_send:sender_is_top_direct_addresses_based_on_view:sender_is_top_indirect_addresses_based_on_respond:sender_is_top_indirect_addresses_based_on_scroll:sender_is_top_indirect_addresses_based_on_send:sender_is_top_indirect_addresses_based_on_view:sender_is_vip:subject_is_top_words_based_on_respond:subject_is_top_words_based_on_scroll:subject_is_top_words_based_on_send:subject_is_top_words_based_on_view:time_received:to_contains_contact:to_is_top_direct_addresses_based_on_respond:to_is_top_direct_addresses_based_on_scroll:to_is_top_direct_addresses_based_on_send:to_is_top_direct_addresses_based_on_view:to_is_top_indirect_addresses_based_on_respond:to_is_top_indirect_addresses_based_on_scroll:to_is_top_indirect_addresses_based_on_send:to_is_top_indirect_addresses_based_on_view:to_is_vip:user_is_bcc:user_is_cc:user_is_sender:user_is_to:error:
predictionsFromInputs:options:error:
_model
T@"MLModel",R,N,V_model
header_key_filtered
to_count
initWithHeader_key_filtered:to_count:
setHeader_key_filtered:
setTo_count:
_header_key_filtered
_to_count
T@"NSDictionary",&,N,V_header_key_filtered
Td,N,V_to_count
promo
promoProbability
initWithPromo:promoProbability:
setPromo:
setPromoProbability:
_promo
_promoProbability
Tq,N,V_promo
T@"NSDictionary",&,N,V_promoProbability
predictionFromHeader_key_filtered:to_count:error:
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8^{_NSZone=}16
@24@0:8@16
@24@0:8@"NSString"16
v24@0:8@16
@"NSArray"16@0:8
v24@0:8@"NSString"16
@"ACAccount"16@0:8
v16@0:8
@24@0:8q16
@"<EDDeliveryAccount>"16@0:8
v24@0:8@"<EDDeliveryAccount>"16
@"<ECMailbox>"24@0:8q16
B24@0:8@"NSURL"16
@"<ECMailbox>"16@0:8
@"NSObject<OS_os_log>"16@0:8
v24@0:8@"NSArray"16
v24@0:8@"<EDAccount>"16
@32@0:8@16@24
v32@0:8@16@?24
v24@0:8@?16
@"NSMutableSet"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"EDAccountECAccountTransformer"
@"<EDAccountsProvider>"
@"EDPersistenceHookRegistry"
@32@0:8q16@24
v32@0:8@16@24
v40@0:8@16@24@32
v40@0:8@16q24q32
@"NSMutableDictionary"
@"<EDActivityHookResponder>"
v24@0:8@"EMActivity"16
v40@0:8@"EMActivityObjectID"16@24@"NSString"32
v40@0:8@"EMActivityObjectID"16q24q32
v32@0:8@"EMActivityObjectID"16@"NSError"24
v24@0:8@"EMActivityObjectID"16
v32@0:8@"<EMActivityObserver_xpc>"16@?<v@?@"<EFCancelable>"@"NSArray"@"NSError">24
@"EDActivityPersistence"
i32@0:8@16@24
i24@0:8@16
i24@0:8@"EDPersistenceDatabaseConnection"16
@40@0:8@16@24@32
@32@0:8@16@?24
@56@0:8@16q24q32q40@?48
@?16@0:8
q16@0:8
v24@0:8q16
@"NSString"
@"NSObject<OS_dispatch_queue>"
@"EDAssetDownloadScheduler"
@"NSObject<OS_xpc_object>"
@80@0:8@16@24@32@40@48@56@64@72
@48@0:8@16@24@32@40
@"NSNumber"
@"NSDate"
@32@0:8^@16^@24
q24@0:8@16
B40@0:8q16@24^B32
@"EDPersistenceDatabase"
B52@0:8@16@24@32@40B48
B48@0:8@16@24@32^@40
B56@0:8@16@24@32@40^@48
@40@0:8q16@24@32
B40@0:8@16@24^@32
@"EDAttachmentPersistence"
@"EDMessagePersistence"
@"NSURL"
@"EMRemoteContentURLSession"
@"<EFScheduler>"
v48@0:8@16@24@32@40
v48@0:8@16@24q32@40
v48@0:8@16@24@32q40
v48@0:8@"NSString"16@"NSDate"24@"<ECMessage>"32@"NSDictionary"40
v48@0:8@"NSString"16@"NSDate"24q32@"NSDictionary"40
v32@0:8@"NSString"16@"<ECMessage>"24
v40@0:8@"NSString"16@"<ECMessage>"24@"<ECMailAccount>"32
v48@0:8@"NSString"16@"NSDate"24@"<ECMessage>"32@"<ECMailbox>"40
v48@0:8@"NSString"16@"NSDate"24@"<ECMessage>"32q40
@"BMStoreStream"
@"BMSource"
@40@0:8@16Q24^@32
@"NSArray"40@0:8@"NSArray"16Q24^@32
@"<EDMailboxPredictor>"
@"NSCache"
@"EDInteractionLogger"
@"EDPETInteractionEventLog"
@"EDBiomeInteractionEventLog"
@"EDDifferentialPrivacyReporter"
v48@0:8q16q24@32@40
v48@0:8q16q24@"NSString"32@"NSString"40
v32@0:8q16q24
@"BKSProcessAssertion"
@"<EDClientStateReporting>"
v20@0:8B16
@24@0:8@?16
@"EFLocked"
v28@0:8i16@?20
@20@0:8i16
@?28@0:8@?16i24
@"NSPersistentContainer"
@"EDTaskScheduler"
@"NSManagedObjectContext"
@"<EDConversationDailyCloudExporterDelegate>"
@"EDUbiquitousConversationManager"
v40@0:8@16@24q32
v40@0:8@"<EDConversationRemoteStorage>"16@"NSDictionary"24q32
v24@0:8@"<EDConversationRemoteStorage>"16
v32@0:8@"NSMutableDictionary"16@"NSString"24
@"NSDictionary"24@0:8@"NSString"16
@"NSDictionary"16@0:8
v44@0:8@16@24@32B40
v36@0:8@16@24B32
@"<EDConversationRemoteStorageDelegate>"
@"<EDConversationRemoteStorage>"
@"EDConversationRemoteCloudKitStorage"
@"EDTransactionService"
q24@0:8Q16
Q24@0:8q16
v48@0:8Q16@24q32q40
@32@0:8q16Q24
v32@0:8@16q24
v24@0:8d16
v48@0:8Q16@"NSString"24q32q40
q24@0:8@"NSArray"16
@"NSArray"32@0:8q16Q24
v32@0:8@"NSArray"16q24
@32@0:8q16q24
@"NSArray"32@0:8q16q24
@"NSArray"32@0:8^@16^@24
v28@0:8@16B24
v40@0:8Q16@24q32
v32@0:8q16@24
v56@0:8q16Q24Q32q40@48
v48@0:8q16Q24Q32q40
v56@0:8@16@24@32Q40@48
v48@0:8@16@24Q32Q40
v32@0:8@"NSFetchedResultsController"16@"NSDiffableDataSourceSnapshot"24
v32@0:8@"NSFetchedResultsController"16@"NSOrderedCollectionDifference"24
v56@0:8@"NSFetchedResultsController"16@24@"NSIndexPath"32Q40@"NSIndexPath"48
v48@0:8@"NSFetchedResultsController"16@"<NSFetchedResultsSectionInfo>"24Q32Q40
v24@0:8@"NSFetchedResultsController"16
@"NSString"32@0:8@"NSFetchedResultsController"16@"NSString"24
v36@0:8@16B24@28
@40@0:8@16@24@?32
@40@0:8@16@24^@32
@"EDCloudMirroringPersistentStore"
@"NSFetchedResultsController"
@"NSPersistentHistoryToken"
@"NSUbiquitousKeyValueStore"
@"EDPersistence"
@"EDCategorySubsystem"
@24@0:8^@16
@"NSArray"24@0:8^@16
v44@0:8@16@24B32@36
v36@0:8@16B24q28
v28@0:8B16@20
v40@0:8q16q24@32
v40@0:8q16@24@32
v44@0:8@16q24@32B40
v28@0:8@"<ECMessage>"16B24
v36@0:8@"NSArray"16B24@"EDPersistenceDatabaseGenerationWindow"28
v32@0:8@"NSArray"16@"EDPersistenceDatabaseGenerationWindow"24
v32@0:8@"NSData"16@"<EDPersistedMessage>"24
v40@0:8@"NSArray"16@"<EDPersistedMessage>"24@"EDPersistenceDatabaseGenerationWindow"32
v32@0:8@"NSURL"16@"EDPersistenceDatabaseGenerationWindow"24
v32@0:8@"ECMessageFlagChange"16@"NSArray"24
v40@0:8@"ECMessageFlagChange"16@"NSArray"24@"EDPersistenceDatabaseGenerationWindow"32
v32@0:8@"NSDate"16@"NSArray"24
v44@0:8@"NSDate"16@"NSArray"24B32@"EDPersistenceDatabaseGenerationWindow"36
v40@0:8@"NSDate"16@"NSArray"24@"EDPersistenceDatabaseGenerationWindow"32
v40@0:8@"<EDPersistedMessage>"16@"NSDate"24q32
v36@0:8@"NSArray"16B24q28
v28@0:8B16@"NSArray"20
v40@0:8q16q24@"EDPersistenceDatabaseGenerationWindow"32
v48@0:8@"NSSet"16@"NSSet"24@"NSArray"32@"EDPersistenceDatabaseGenerationWindow"40
v32@0:8q16@"NSArray"24
v40@0:8q16@"NSArray"24@"EDPersistenceDatabaseGenerationWindow"32
v48@0:8q16q24@"<EDPersistedMessage>"32@"EDPersistenceDatabaseGenerationWindow"40
v44@0:8@"NSArray"16q24@"NSURL"32B40
B32@0:8@16q24
B48@0:8@16q24@32@40
@"<EDMessageChangeHookResponder>"
v32@0:8Q16@?24
v32@0:8@"<EMDiagnosticInfoProvidingXPC>"16@?<v@?@"<EFCancelable>">24
v32@0:8Q16@?<v@?@"EFSandboxedURLWrapper">24
v24@0:8@?<v@?@"NSString">16
v24@0:8@?<v@?@"NSDictionary">16
@"<EMDiagnosticInfoProvidingXPC>"
@"<EDServerRemoteClientsProvider>"
@"EDFetchController"
@24@0:8d16
d16@0:8
@"_MSTTLReference"
@"<EMUserProfileProvider>"
@"EDMailDynamicDataAsset"
@48@0:8@16@24@32@?40
@32@0:8Q16@?24
@"NSProgress"48@0:8@"EMObjectID"16@"EMContentRequestOptions"24@"<EMContentItemRequestDelegate>"32@?<v@?@"<_EMDistantContentRepresentation>"@"EMContentRepresentation"@"NSError">40
@"NSProgress"24@0:8@?<v@?@"EMContentRepresentation"@"NSError">16
@"NSProgress"32@0:8Q16@?<v@?@"NSError">24
v32@0:8@"EDMessageQueryHelper"16@"NSArray"24
v24@0:8@"EDMessageQueryHelper"16
v40@0:8@"EDMessageQueryHelper"16@"NSArray"24q32
v40@0:8@"EDMessageQueryHelper"16q24q32
v48@0:8@"EDMessageQueryHelper"16@"EMMessage"24@"EMMessageObjectID"32q40
v40@0:8@"EDMessageQueryHelper"16@"NSArray"24@"NSArray"32
@68@0:8@16@24@32@40@48@56B64
@"EMThreadScope"
@"EDMessageQueryHelper"
@"_EDGroupedSenderList"
@24@0:8Q16
@"NSMutableOrderedSet"
@32@0:8@16Q24
@32@0:8Q16@24
@32@0:8d16@24
@32@0:8@16d24
@"<EDMailboxPredictionQueryAdapter>"
@"NSDictionary"
@"NSMutableString"
@"ACAccount"
@40@0:8@16@24^B32
@32@0:8@16^B24
@"NSMutableArray"
@"EMThread"
@"EFQuery"
@"<EMMailboxTypeResolver>"
@"EMMessage"
@88@0:8@16@24@32@40@48@56@64@72@80
@32@0:8@16^@24
B28@0:8@16B24
B32@0:8@16@24
@"EFProcessTransaction"
@"EDVIPManager"
@"<EDRemoteSearchProvider>"
@"NSArray"
@"EDUpdateThrottler"
@"EDThreadReloadSummaryHelper"
@"EMMailboxScope"
@"EMCollectionItemIDStateCapturer"
@24@0:8o^@16
@"NSData"
@"<ECMessage>"
v32@0:8@"<ECMessage>"16@"<ECMailAccount>"24
v48@0:8@"NSString"16@"NSDate"24@"EMMessageObjectID"32@"NSDictionary"40
v40@0:8@"NSString"16@"NSDate"24@"NSDictionary"32
v56@0:8@16@24@32q40@48
@48@0:8{_NSRange=QQ}16{_NSRange=QQ}32
v32@0:8{_NSRange=QQ}16
{_NSRange=QQ}16@0:8
@"<EDInteractionEventLog>"
@"EDMailboxPersistence"
{_NSRange="location"Q"length"Q}
v40@0:8@16d24@?32
@"EMListUnsubscribeDetector"
@32@0:8@16q24
v48@0:8q16@24@32@40
B40@0:8@16q24@32
B44@0:8q16@24B32@36
B56@0:8@16@24q32q40@48
v48@0:8@16q24q32@40
v40@0:8@16q24@32
@"EDGmailLabelPersistence"
@"NSSet"24@0:8q16
q24@0:8@"EMMailboxObjectID"16
@"NSSet"16@0:8
@28@0:8@16B24
@"EDMailboxProvider"
v40@0:8@16@24@?32
@"EDCachingMailboxPredictor"
@"<EDMailboxProviderDelegate>"
@"NSMapTable"
v32@0:8q16@?24
v48@0:8@16@24@32@?40
v40@0:8@"WKWebView"16@"WKNavigationAction"24@?<v@?q>32
v48@0:8@"WKWebView"16@"WKNavigationAction"24@"WKWebpagePreferences"32@?<v@?q@"WKWebpagePreferences">40
v40@0:8@"WKWebView"16@"WKNavigationResponse"24@?<v@?q>32
v32@0:8@"WKWebView"16@"WKNavigation"24
v40@0:8@"WKWebView"16@"WKNavigation"24@"NSError"32
v40@0:8@"WKWebView"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"WKWebView"16
v40@0:8@"WKWebView"16@"NSURLAuthenticationChallenge"24@?<v@?B>32
v40@0:8@"WKWebView"16@"WKNavigationAction"24@"WKDownload"32
v40@0:8@"WKWebView"16@"WKNavigationResponse"24@"WKDownload"32
@40@0:8d16@?24@?32
@"WKWebView"
@"EFPromise"
v32@0:8@"WKUserContentController"16@"WKScriptMessage"24
@"NSSet"
@"MEAppExtensionsController"
@"EFCancelationToken"
@56@0:8q16@24@32@40@48
@"<EDPersistedMessage>"
@"ECMessageFlagChange"
@36@0:8@16@24B32
@44@0:8@16q24@32B40
v52@0:8@16q24@32B40@44
v52@0:8@16@24q32@40B48
@44@0:8@16@24B32@36
@"EDLocalActionPersistence"
@"EDReadLaterPersistence"
@"EDServerMessagePersistenceFactory"
@"EDBIMIManager"
@"NSString"24@0:8@16
v40@0:8q16@"EMMailboxObjectID"24@"EDPersistenceDatabaseGenerationWindow"32
@56@0:8@16@24@32@40@48
@64@0:8@16@24@32@40@48d56
@"EMObjectID"
@"EFMutableInt64Set"
{EFAtomicObject="cfObject"Aq}
@"EFStoppableScheduler<EFAssertableScheduler>"
@"NSPredicate"
@"EDMessageQueryEvaluator"
@"<EMMessageRepositoryCountQueryObserver_xpc>"
@"EFListStateCapturer"
@"EFDebouncer"
@36@0:8q16@24B32
q32@0:8@16@24
@"NSDictionary"32@0:8Q16@24
@"NSDictionary"24@0:8@"NSArray"16
@64@0:8@16@24@32@40@48@56
q32@0:8q16@24
@40@0:8@16q24@32
v64@0:8@16q24q32q40@48@?56
v48@0:8@16q24@32@?40
@36@0:8@16B24^@28
B32@0:8@16^@24
B40@0:8@16@?24^@32
q32@0:8q16^@24
@56@0:8@16Q24@32@40@?48
v40@0:8@16q24@?32
i16@0:8
v20@0:8i16
@"EDMessagePersistenceStatistics"
@"EDMessageTransformer"
v24@0:8Q16
@72@0:8@16@24@32@40@48@56@64
@32@0:8q16@?24
@64@0:8@16@24@32@40@48^@56
@"NSConditionLock"
v32@0:8@"EDRemindMeNotificationController"16@"<EDPersistedMessage>"24
v32@0:8@"EMSender"16q24
v40@0:8@"EMSender"16q24q32
v32@0:8@"NSArray"16@"EMSender"24
v40@0:8@"NSArray"16@"EMSender"24q32
@"NSArray"32@0:8@"NSArray"16q24
@"EFQuery"16@0:8
@84@0:8@16@24@32@40@48@56@64B72B76B80
@32@0:8@16B24B28
{atomic_flag="_Value"AB}
@"EDRemindMeNotificationController"
@"<EDMessageQueryHelperDelegate>"
@"EDMessageQueryParser"
Q24@0:8@16
@"EDSearchableIndex"
@"EFSQLObjectPropertyMapper"
@"EFSearchableIndexObjectPropertyMapper"
@"EDMessageQueryTransformer"
@"<EMVIPManager>"
v24@0:8@"EDThreadQueryHandler"16
v56@0:8@16Q24@32@40@?48
v44@0:8@16Q24B32@?36
v44@0:8q16B24q28@?36
v40@0:8@16Q24@?32
v24@0:8@?<v@?B>16
v40@0:8@"EFQuery"16q24@?<v@?@"NSArray"@"NSError">32
v32@0:8@"EFQuery"16@?<v@?@"NSNumber"@"NSError">24
v48@0:8@"EFQuery"16@"<EMMessageListItemQueryResultsObserver>"24@"EMObjectID"32@?<v@?@"<EFCancelable>">40
v48@0:8@"EFQuery"16@"EMMailboxScope"24@"<EMMessageRepositoryCountQueryObserver_xpc>"32@?<v@?@"<EFCancelable>">40
v56@0:8@"NSArray"16Q24@"EMObjectID"32@"NSArray"40@?<v@?@"NSArray"@"NSDictionary">48
v44@0:8@"EMMessageChangeAction"16Q24B32@?<v@?@"EMUndoMessageAction">36
@"NSProgress"56@0:8@"EMMessageObjectID"16Q24@"EMContentRequestOptions"32@"<EMContentItemRequestDelegate>"40@?<v@?@"<_EMDistantContentRepresentation>"@"EMContentRepresentation"@"NSError">48
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSData">32
v24@0:8@"EMMailboxScope"16
v40@0:8@"NSString"16@"NSString"24@"EMMessageObjectID"32
v40@0:8@"NSString"16@"EMMessageObjectID"24@?<v@?@"NSString">32
v40@0:8@"NSArray"16@"<EMMessageRepositoryMailboxPredictionObserver_xpc>"24@?<v@?@"<EFCancelable>">32
v32@0:8@"NSURL"16@?<v@?@"EMMessageObjectID"@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSArray"@"NSDictionary"@"NSError">24
v24@0:8@?<v@?@"EFSandboxedURLWrapper"Q>16
v44@0:8q16B24q28@?<v@?@"NSArray"@"NSArray"@"NSError">36
v40@0:8@"EMMessageObjectID"16Q24@?<v@?@"NSArray"@"NSError">32
v32@0:8@"NSURL"16@?<v@?@"NSData">24
@160@0:8@16@24@32@40@48@56@64@72@80@88@96@104@112@120@128@136@144@152
v40@0:8@16#24@?32
@32@0:8B16@20B28
@36@0:8@16q24B32
@"EDMailboxPredictionController"
@"EDWebContentParser"
@"EDConversationPersistence"
@"EDThreadPersistence"
@"EDRemoteContentPersistence"
@"EDRichLinkPersistence"
@"EDMessageChangeManager"
@"<EDResumable>"
@"EDRemoteContentManager"
@"EDRemoteContentCacheConfiguration"
@"EMBlockedSenderManager"
@"EDListUnsubscribeHandler"
v24@0:8@"EMMessageObjectID"16
@"<EMMessageListItemQueryResultsObserver>"
@"<EMVIPReader>"
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v40@0:8@16B24B28@?32
v48@0:8@"EMOutgoingMessage"16@"EMMailboxObjectID"24@"EMMessageObjectID"32@?<v@?@"EMMessage">40
v40@0:8@"EMOutgoingMessage"16@"NSDate"24@?<v@?@"EMMessage">32
v40@0:8@"NSDate"16@"EMMessage"24@?<v@?@"EMMessage">32
v32@0:8@"NSDate"16@?<v@?@"NSError">24
v40@0:8@"EMMailboxObjectID"16@"NSString"24@"EMMessageObjectID"32
v40@0:8@"EMOutgoingMessage"16B24B28@?<v@?@"EMMessageDeliveryResult">32
v32@0:8@"EMObjectID"16@?<v@?B>24
v24@0:8@?<v@?Q>16
v32@0:8@"<EMOutgoingMessageRepositoryInterfaceObserver>"16@"EMObjectID"24
v24@0:8@"EMObjectID"16
@"EDSendLaterPersistence"
v40@0:8@"<EDPBHasher>"16@"<ECMessage>"24@"<ECMailAccount>"32
v32@0:8@"<EDPBHasher>"16@"<ECMessage>"24
v40@0:8@"<EDPBHasher>"16@"<ECMessage>"24@"NSDictionary"32
v40@0:8@"<EDPBHasher>"16@"<ECMessage>"24@"<ECMailbox>"32
v40@0:8@"<EDPBHasher>"16@"<ECMessage>"24q32
v40@0:8@"<EDPBHasher>"16q24@"NSDictionary"32
v20@0:8I16
I16@0:8
@"EDPBInteractionEventAppBackground"
@"EDPBInteractionEventAppLaunch"
@"EDPBInteractionEventAppResume"
@"EDPBInteractionEventCategoryInferred"
@"EDPBInteractionEventCategoryMarked"
@"EDPBInteractionEventFlagChanged"
@"EDPBInteractionEventForwardDraftStarted"
@"EDPBInteractionEventForwardSent"
@"EDPBInteractionEventLinkClicked"
@"EDPBInteractionEventMarkedMuteThread"
@"EDPBInteractionEventMessageCopied"
@"EDPBInteractionEventMessageFetched"
@"EDPBInteractionEventMessageMoved"
@"EDPBInteractionEventMessageSent"
@"EDPBInteractionEventMessageViewEnd"
@"EDPBInteractionEventMessageViewStart"
@"EDPBInteractionEventReadChanged"
@"EDPBInteractionEventReplyDraftStarted"
@"EDPBInteractionEventReplySent"
{?="timestamp"b1"eventName"b1"sequenceNumber"b1}
@"EDPBModelFeaturesImportant"
@"EDPBModelFeaturesPromotion"
{?="accountId"b1"conversationId"b1"mailboxId"b1"messageId"b1"score"b1"categoryType"b1"mailboxType"b1"modelId"b1"modelVersion"b1"positive"b1}
{?="accountId"b1"conversationId"b1"mailboxId"b1"messageId"b1"categoryType"b1"mailboxType"b1"positive"b1"removeAllUserOverrides"b1}
{?="accountId"b1"conversationId"b1"mailboxId"b1"messageId"b1"mailboxType"b1"value"b1}
{?="accountId"b1"conversationId"b1"mailboxId"b1"messageId"b1"mailboxType"b1}
{?="deviceId"b1"userId"b1"timezoneOffset"b1"userSegment"b1"version"b1"categoryRootInstalled"b1}
{?="conversationId"b1"value"b1}
{?="accountId"b1"conversationId"b1"fromMailboxId"b1"messageId"b1"toMailboxId"b1"fromMailboxType"b1"toMailboxType"b1}
@"EDPBMessageHeaders"
{?="accountId"b1"conversationId"b1"duration"b1"mailboxId"b1"messageId"b1"mailboxType"b1"scrolledToEnd"b1}
{?="messageId"b1}
^q16@0:8
v32@0:8^q16Q24
^B16@0:8
B24@0:8Q16
v32@0:8^B16Q24
{?="list"^q"count"Q"size"Q}
{?="list"^B"count"Q"size"Q}
{?="dateReceived"b1"listId"b1"sender"b1"senderContactId"b1"senderDomain"b1"messageIsForwarded"b1"messageIsReply"b1"senderIsVip"b1"userIsBcc"b1"userIsCc"b1"userIsSender"b1"userIsTo"b1}
{?="numRecipients"b1"timeReceived"b1"unknownFeatureCount"b1"ccContainsContact"b1"ccIsTopDirectAddressesBasedOnRespond"b1"ccIsTopDirectAddressesBasedOnScroll"b1"ccIsTopDirectAddressesBasedOnSend"b1"ccIsTopDirectAddressesBasedOnView"b1"ccIsTopIndirectAddressesBasedOnRespond"b1"ccIsTopIndirectAddressesBasedOnScroll"b1"ccIsTopIndirectAddressesBasedOnSend"b1"ccIsTopIndirectAddressesBasedOnView"b1"ccIsVip"b1"fromListId"b1"messageIsForward"b1"messageIsReply"b1"senderIsContact"b1"senderIsTopDirectAddressesBasedOnRespond"b1"senderIsTopDirectAddressesBasedOnScroll"b1"senderIsTopDirectAddressesBasedOnSend"b1"senderIsTopDirectAddressesBasedOnView"b1"senderIsTopIndirectAddressesBasedOnRespond"b1"senderIsTopIndirectAddressesBasedOnScroll"b1"senderIsTopIndirectAddressesBasedOnSend"b1"senderIsTopIndirectAddressesBasedOnView"b1"senderIsVip"b1"subjectIsTopWordsBasedOnRespond"b1"subjectIsTopWordsBasedOnScroll"b1"subjectIsTopWordsBasedOnSend"b1"subjectIsTopWordsBasedOnView"b1"toContainsContact"b1"toIsTopDirectAddressesBasedOnRespond"b1"toIsTopDirectAddressesBasedOnScroll"b1"toIsTopDirectAddressesBasedOnSend"b1"toIsTopDirectAddressesBasedOnView"b1"toIsTopIndirectAddressesBasedOnRespond"b1"toIsTopIndirectAddressesBasedOnScroll"b1"toIsTopIndirectAddressesBasedOnSend"b1"toIsTopIndirectAddressesBasedOnView"b1"toIsVip"b1"userIsBcc"b1"userIsCc"b1"userIsSender"b1"userIsTo"b1}
{?="headerKeyFilteredCount"b1"toCount"b1"unknownFeatureCount"b1}
@64@0:8@16@24q32q40q48@?56
@"EFQueue"
@"EDSenderPersistence"
@"EMRemoteContentURLCache"
@"MEContentRuleListManager"
@"EFXPCAlarmScheduler"
@20@0:8B16
@"EDPersistenceDatabaseConnection"20@0:8B16
@"NSURL"32@0:8@"NSString"16q24
@72@0:8@16@24Q32@40@48@56@64
B24@0:8@?16
B28@0:8B16@?20
B32@0:8Q16@?24
@"EFSQLSchema"
@"EFSQLPropertyMapper"
@"EDPersistenceDatabaseConnectionPool"
@"EDProtectedDatabasePersistence"
@28@0:8B16@20
@36@0:8^{sqlite3=}16B24@28
B32@0:8@16^Q24
^{sqlite3=}16@0:8
B40@0:8Q16^@24@?32
v28@0:8i16@20
B40@0:8@16@24^Q32
B48@0:8@16@24@32^Q40
@"<EDPersistenceDatabaseConnectionDelegate>"
@"EDPersistenceDatabaseJournal"
@"EFSQLConnection"
B32@0:8Q16^@24
v32@0:8Q16@24
@"NSLock"
@"_EDPersistenceDatabaseConnectionWrapper"
@"EFResourcePool"
@"<EDPersistenceDatabaseConnectionPoolDelegate>"
@"EFResource"
@"EDPersistenceDatabaseConnection"
@"EDPersistenceDatabaseJournalManager"
@"NSMutableIndexSet"
@48@0:8@16@24Q32Q40
@"EFSQLColumnSchema"
v32@0:8@"NSDictionary"16@"NSArray"24
v24@0:8@"EDPersistenceDatabaseConnection"16
v32@0:8@"<EDPersistedMessage>"16@"EFSQLRow"24
v48@0:8q16@"EDSearchableIndexUpdates"24@"NSArray"32@"EDPersistenceDatabaseGenerationWindow"40
v36@0:8@"EMThreadObjectID"16B24@"EDPersistenceDatabaseGenerationWindow"28
v32@0:8@"EMThreadObjectID"16@"EDPersistenceDatabaseGenerationWindow"24
v40@0:8@"EMThreadObjectID"16@"NSArray"24@"EDPersistenceDatabaseGenerationWindow"32
v24@0:8@"EMThreadScope"16
v32@0:8@"NSData"16@"NSURL"24
v32@0:8{objc_method_description=:*}16
v40@0:8@16{objc_method_description=:*}24
^{__CFDictionary=}
@"EDPETQuotaReachedEvent"
@"EDPETSubmittedEvent"
{?=^qQQ}24@0:8@16
q24@0:8q16
q24@0:8@"NSString"16
{?=^qQQ}24@0:8@"ECSubject"16
q24@0:8@"<ECMailAccount>"16
q24@0:8@"<ECMailbox>"16
@"EDPBMessageHeaders"24@0:8@"<ECMessage>"16
@32@0:8@16o^q24
@28@0:8i16@20
@"SGMailIntelligenceStringHasher"
@"CNContactStore"
@"EFLazyCache"
@"NSFileHandle"
{?="droppedEventsCount"b1"timestamp"b1"sequenceNumber"b1"timezoneOffset"b1}
{?="timestamp"b1"timezoneOffset"b1}
B40@0:8@16@24@32
@48@0:8@16@24^@32^@40
@"<EFCancelable>"
Q44@0:8@16B24@28@36
Q32@0:8@16@24
Q48@0:8@16@24^Q32^Q40
Q40@0:8@16@24@32
@"ECAngleBracketIDHash"
@"NSDate"24@0:8@"<EDPersistedMessage>"16
@"<EMMutableDictionaryProtocol>"
@"EDReadLaterCloudStorage"
@"NSDate"16@0:8
v24@0:8@"NSDate"16
v40@0:8@"EDRemindMeNotificationController"16@"<EDPersistedMessage>"24@"NSDate"32
@"<EDRemindMeNotificationControllerAlarmDateProvider>"
@"EDQueryCreator"
@"<EDRemindMeNotificationControllerEventDelegate>"
@"EFXPCAlarm"
v24@0:8@?<v@?@"<EMMessageRepositoryInterface>">16
v24@0:8@?<v@?@"<EMOutgoingMessageRepositoryInterface>">16
v24@0:8@?<v@?@"<EMAccountRepositoryInterface>">16
v24@0:8@?<v@?@"<EMSenderRepositoryInterface>">16
v24@0:8@?<v@?@"<EMFetchControllerInterface>">16
v24@0:8@?<v@?@"<EMMailboxRepositoryInterface>">16
v24@0:8@?<v@?@"<EMClientStateInterface>">16
v24@0:8@?<v@?@"<EMSearchableIndexInterface>">16
v24@0:8@?<v@?@"<EMInteractionLoggerInterface>">16
v24@0:8@?<v@?@"<EMVIPManagerInterface>">16
v24@0:8@?<v@?@"<EMActivityRegistryInterface>">16
v24@0:8@?<v@?@"<EMDiagnosticInfoGathererInterface>">16
v24@0:8@?<v@?>16
@"EDAccountRepository"
@"EDMailboxRepository"
@"EDOutgoingMessageRepository"
@"EDSenderRepository"
@"<EMVIPManagerInterface>"
@"EDActivityRegistry"
@"NSXPCConnection"
@"EDDaemonInterfaceFactory"
@"EDClientState"
@"EDMessageRepository"
@"EDClientResumer"
@"EDDiagnosticInfoGatherer"
@"EDRemoteClient"
v44@0:8Q16B24d28@?36
Q44@0:8Q16B24^B28@?36
Q44@0:8Q16B24@?28^Q36
@64@0:8@16@?24^Q32^Q40^Q48^Q56
v44@0:8@16B24@28@36
@"NSBackgroundActivityScheduler"
@"<EDRemoteContentManagerTestDelegate>"
@32@0:8Q16Q24
@44@0:8q16B24q28^@36
@60@0:8@16q24B32q36@44^@52
@56@0:8@16@24@32q40@48
B24@0:8q16
@48@0:8@16@24@32o^@40
@52@0:8@16@24@32B40o^@44
v32@0:8@"CSSearchableIndex"16@?<v@?>24
v40@0:8@"CSSearchableIndex"16@"NSArray"24@?<v@?>32
v24@0:8@"CSSearchableIndex"16
@"NSData"48@0:8@"CSSearchableIndex"16@"NSString"24@"NSString"32o^@40
@"NSURL"52@0:8@"CSSearchableIndex"16@"NSString"24@"NSString"32B40o^@44
@48@0:8@16@24Q32q40
@"NSString"24@0:8@"EDSearchableIndexVerifier"16
@"NSDictionary"48@0:8@"EDSearchableIndexVerifier"16@"EDSearchableIndex"24Q32q40
@"EDSearchableIndex"24@0:8@"EDSearchableIndexVerifier"16
@"NSSet"24@0:8@"EDSearchableIndexVerifier"16
v32@0:8@"NSArray"16@?<v@?>24
d40@0:8^Q16d24@?32
v40@0:8q16@24@?32
v36@0:8@16B24@?28
v24@0:8B16B20
v32@0:8^@16^@24
v32@0:8@16B24B28
@"NSObject<OS_os_activity>"
@"_EMSearchableIndexPendingRemovals"
@"EFStoppableScheduler<EFSuspendableScheduler><EFAssertableScheduler>"
@"EFStoppableScheduler"
@"<EDSearchableIndexDataSource>"
@"<EDSearchableIndexReasonProvider>"
@"<EDSearchableIndexSchedulableDelegate>"
@"CSSearchableIndex"
@"EFFuture"
@"<EDSearchableCriterion>"
@"NSIndexSet"
@"CSSearchableItem"16@0:8
@"EFFuture"16@0:8
q24@0:8@"<EDIndexableItem>"16
@"NSData"16@0:8
v24@0:8@"NSData"16
@"CSSearchableItem"
@"EDSearchableIndexAttachmentItemMetadatum"
@52@0:8d16d24q32B40B44B48
@40@0:8d16d24q32
@44@0:8@16@24@32B40
@"<EDBaseMessage>"
v28@0:8B16Q20
@"<EDIndexableItem>"
@48@0:8@16@24Q32@40
@40@0:8@16Q24q32
@"EDSearchableIndexUpdates"48@0:8@"EDSearchableIndex"16@"NSArray"24Q32@"EFCancelationToken"40
q32@0:8@"EDSearchableIndex"16@"<EDIndexableItem>"24
v40@0:8@"EDSearchableIndex"16q24@"NSArray"32
v40@0:8@"EDSearchableIndex"16@"NSArray"24q32
@"NSArray"32@0:8@"EDSearchableIndex"16@"NSArray"24
@"NSArray"40@0:8@"EDSearchableIndex"16q24@"EDSearchableIndexUpdates"32
v32@0:8@"EDSearchableIndex"16q24
@"NSDictionary"40@0:8@"EDSearchableIndex"16Q24q32
@"NSSet"24@0:8@"EDSearchableIndex"16
v40@0:8@"EDSearchableIndex"16@"NSArray"24@"NSString"32
v32@0:8@"EDSearchableIndex"16@"NSString"24
@"NSArray"32@0:8@"EDSearchableIndex"16@"NSString"24
v28@0:8@"NSString"16B24
@40@0:8@16@24q32
v56@0:8@16@24@32q40@?48
v64@0:8@16@24@32@40q48@?56
@40@0:8q16@24q32
@48@0:8@16Q24@32@40
@40@0:8@16Q24@32
v72@0:8@16@24@32q40@48@56@?64
@"EDDataDetectionPersistence"
@"<EDSearchableIndexHookResponder>"
@"EDSearchableIndexRichLinkItemMetadatum"
v32@0:8@16d24
d24@0:8@16
v32@0:8@"<EDSearchableIndexSchedulable>"16d24
v32@0:8@"<EDSearchableIndexSchedulable>"16q24
v24@0:8@"<EDSearchableIndexSchedulable>"16
v40@0:8@"<EDSearchableIndexSchedulable>"16@"NSString"24@"NSDictionary"32
d24@0:8@"<EDSearchableIndexSchedulable>"16
q24@0:8@"<EDSearchableIndexSchedulable>"16
B24@0:8@"<EDSearchableIndexSchedulable>"16
@?24@0:8@16
v40@0:8@16@?24@?32
@"<EDSearchableIndexSchedulable>"
@"EDSearchableIndexBudgetConfiguration"
@"EDSearchableIndexVerificationData"24@0:8@"EDSearchableIndexVerificationData"16
@"EMSearchableIndexQueryExpression"24@0:8@"NSDictionary"16
B32@0:8@"CSSearchableItem"16@"EDSearchableIndexVerificationData"24
v32@0:8@?16@24
@"<EDSearchableIndexVerifierDataSource>"
Q80@0:8@16@24@32@40@48@56^Q64^@72
Q80@0:8@"NSString"16@"NSString"24@"EFSQLUpdateStatement"32@"NSNumber"40@"NSNumber"48@"EDPersistenceDatabaseConnection"56^Q64^@72
v40@0:8@16q24B32B36
@48@0:8@16q24B32B36^q40
B56@0:8@16@24q32@40^q48
B40@0:8q16q24@32
B48@0:8@16q24@32^@40
@40@0:8@16^@24^@32
@"<EDSendLaterUpdateControllerAlarmDateProvider>"
@"NSXPCListener"
@48@0:8@16@24q32B40B44
@36@0:8@16Q24B32
B40@0:8@16^B24^B32
B32@0:8q16@24
B44@0:8@16@24I32@36
v36@0:8Q16B24@?28
v52@0:8Q16B24Q28Q36@?44
@28@0:8Q16B24
@"ECServerMessage"
B48@0:8@16@24q32@40
@40@0:8@16q24^@32
@"<EFAssertableScheduler>"
@"NSUserDefaults"
B40@0:8q16@24@32
v32@0:8@?16@?24
@"NSObject<OS_dispatch_source>"
v36@0:8@16Q24B32
@"EDInMemoryThreadQueryHandler"
@"<EDThreadMigratorDelegate>"
B56@0:8Q16Q24@32@40Q48
B64@0:8Q16Q24Q32@40@48Q56
B56@0:8Q16@?24@32@40Q48
@"NSCountedSet"
B40@0:8@16@24@?32
B32@0:8@"EDThreadScopeManager"16@"EMMailboxScope"24
B32@0:8@"EDThreadScopeManager"16@"EMMailboxObjectID"24
v32@0:8@"EDThreadScopeManager"16@?<v@?q@"EMThreadScope"B@"NSDate">24
v40@0:8@"EDThreadScopeManager"16@"NSDictionary"24@?<v@?q@"NSDate"Q>32
B40@0:8@"EDThreadScopeManager"16@"NSArray"24@?<v@?B>32
B32@0:8@16^B24
v56@0:8@16@24Q32@40@?48
B48@0:8@16@24@32@?40
@32@0:8@16^q24
@56@0:8@16q24@32q40@48
v40@0:8^@16^@24@32
@48@0:8@16@24@32q40
@48@0:8@16@24q32@40
B40@0:8Q16@24@32
B40@0:8@16B24@28B36
B52@0:8@16q24B32@36@44
B64@0:8@16q24q32B40@44B52@56
B36@0:8@16B24@28
@"EDThreadScopeManager"
@56@0:8@16@24q32@40@48
B24@0:8B16B20
@"EMThreadObjectID"
@"_EDThreadPersistence_SQLHelper"
B32@0:8@16Q24
@"_EDThreadPersistence_ThreadMessages"
@"<EFSQLExpressable>"
i40@0:8@16@?24@?32
q40@0:8@16@?24@?32
B48@0:8@16@?24@?32@?40
B32@0:8@16@?24
@"_EDThreadPersistence_StatementCache"
@"EDPrecomputedThreadQueryHandler"
@"EDThreadMigrator"
v24@0:8@"EDThreadMigrator"16
v32@0:8@"EMObjectID"16@"<EFInvocable>"24
v48@0:8@"EMObjectID"16@"NSArray"24@"EMObjectID"32@"NSDictionary"40
v40@0:8@"EMObjectID"16@"NSArray"24@"EMObjectID"32
v32@0:8@"EMObjectID"16@"NSDictionary"24
v32@0:8@"EMObjectID"16@"NSArray"24
v40@0:8@"EMObjectID"16@"EMObjectID"24@"EMMessageObjectID"32
@104@0:8@16@24@32@40@48@56@64@72@80@88@96
@40@0:8@16^B24^@32
@"<EDThreadQueryHandlerDelegate>"
@36@0:8@16B24@28
v44@0:8@16q24B32@36
v40@0:8Q16Q24@32
d32@0:8Q16d24
Q32@0:8@16^Q24
@"<EDThreadScopeManagerDataSource>"
@36@0:8q16B24@28
@"<EDUbiquitousConversationManagerDelegate>"
@40@0:8@16d24@32
@40@0:8@16d24q32
@32@0:8d16q24
@32@0:8@?16^Q24
Q24@0:8^d16
@"<EMBlockedSenderReader>"
B24@0:8@"NSString"16
v24@0:8@?<v@?@"NSSet"@"NSError">16
@"EMVIP"24@0:8@"NSString"16
v24@0:8@"NSSet"16
v24@0:8@"EAEmailAddressSet"16
@"EAEmailAddressSet"16@0:8
@"EAEmailAddressSet"
@"<EDVIPManagerDelegate>"
v32@0:8@"<EMVIPManagerObserver>"16@"EMObjectID"24
@"NSHashTable"
v32@0:8@"NSURL"16@"NSArray"24
v24@0:8@"NSURL"16
@"_WKRemoteObjectInterface"
@"ECWebContentObserver"
@"EMUbiquitouslyPersistedDictionaryMergeResult"40@0:8@"NSArray"16@"NSMutableDictionary"24@"NSUbiquitousKeyValueStore"32
v36@0:8@16q24B32
@"<MUIBucketSenderCloudStorageDelegate>"
@"<MUIBucketSendersCloudStorageUpgraderDelegate>"
@"MUIBucketSenderCloudStorage"
@"EDGroupedSenderQueryHandler"
@"<EMMessageRepositoryUnscreenedSendersQueryObserver_xpc>"
@"MLFeatureValue"24@0:8@"NSString"16
@360@0:8d16d24d32d40d48d56d64d72d80d88d96d104d112d120d128d136d144d152d160d168d176d184d192d200d208d216d224d232@240d248d256d264d272d280d288d296d304d312d320d328d336d344d352
@368@0:8d16d24d32d40d48d56d64d72d80d88d96d104d112d120d128d136d144d152d160d168d176d184d192d200d208d216d224d232@240d248d256d264d272d280d288d296d304d312d320d328d336d344d352^@360
@"MLModel"
@40@0:8@16d24^@32
,d
-<KZix
-159
A $(EIMQU
'Fen
 (08@HPX`hpx
MbP?
v16@?0@"<EMReceivingAccountBuilder>"8
v16@?0@"<EMDeliveryAccountBuilder>"8
com.apple.email
v8@?0
B16@?0@"<EDAccount>"8
@"EMAccount"16@?0@"<EDAccount>"8
Activity observer is already registered
brand_indicators
evidence_url
indicator
indicator_hash
hash_algorithm
verified
DROP TABLE IF EXISTS brand_indicators
ALTER TABLE messages ADD COLUMN display_date INTEGER;CREATE INDEX IF NOT EXISTS messages_mailbox_display_date_index ON messages(mailbox, display_date);UPDATE messages SET display_date = date_received;
brand_indicator
messages
ALTER TABLE messages ADD COLUMN brand_indicator INTEGER;CREATE INDEX IF NOT EXISTS messages_brand_indicator_index ON messages(brand_indicator);
CREATE INDEX IF NOT EXISTS messages_deleted_date_received_index ON messages(deleted, date_received);
ALTER TABLE message_global_data ADD COLUMN follow_up_start_date INTEGER;ALTER TABLE message_global_data ADD COLUMN follow_up_end_date INTEGER;CREATE INDEX IF NOT EXISTS message_global_data_follow_up_start_date_index ON message_global_data(follow_up_start_date);CREATE INDEX IF NOT EXISTS message_global_data_follow_up_end_date_index ON message_global_data(follow_up_end_date);
searchable_message
ALTER TABLE messages ADD COLUMN searchable_message INTEGER REFERENCES searchable_messages(message_id) ON DELETE SET NULL;
Unable to add searchable_message column to messages
UPDATE OR IGNORE messages SET searchable_message = (SELECT searchable_messages.ROWID FROM searchable_messages WHERE searchable_messages.ROWID = messages.ROWID);
Unable to populate searchable_message
CREATE INDEX IF NOT EXISTS messages_searchable_message_deleted_index ON messages(searchable_message, deleted);
Unable to add messages_searchable_message_deleted_index
CREATE INDEX IF NOT EXISTS searchable_messages_transaction_id_message_id_index ON searchable_messages(transaction_id, message_id);
Unable to add searchable_messages_transaction_id_message_id_index
ALTER TABLE threads ADD COLUMN read_later_date INTEGER;
Unable to add read_later_date column to threads
CREATE TABLE IF NOT EXISTS read_later (global_message_id INTEGER PRIMARY KEY, date INTEGER NOT NULL);
Unable to create read_later table
CREATE TABLE IF NOT EXISTS searchable_rebuild (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, message_id INTEGER NOT NULL)
Unable to create searchable_rebuild table
remote_content_links
requests
last_seen_date
last_request_date
CREATE TABLE IF NOT EXISTS rich_links (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, title TEXT COLLATE BINARY, url TEXT COLLATE BINARY NOT NULL, hash TEXT COLLATE BINARY NOT NULL, UNIQUE(hash) ON CONFLICT ABORT);
Creating rich_links table
CREATE TABLE IF NOT EXISTS message_rich_links (global_message_id INTEGER NOT NULL REFERENCES message_global_data(ROWID) ON DELETE CASCADE, rich_link INTEGER NOT NULL REFERENCES rich_links(ROWID) ON DELETE CASCADE, PRIMARY KEY(global_message_id, rich_link)) WITHOUT ROWID;
Creating message_rich_links table
CREATE TABLE IF NOT EXISTS searchable_rich_links (rich_link_id INTEGER PRIMARY KEY, rich_link INTEGER REFERENCES rich_links(ROWID) ON DELETE SET NULL, message_id INTEGER, transaction_id INTEGER NOT NULL);
Creating searchable_rich_links table
CREATE INDEX IF NOT EXISTS searchable_rich_links_message_id_index ON searchable_rich_links(message_id); CREATE INDEX IF NOT EXISTS searchable_rich_links_rich_link_index ON searchable_rich_links(rich_link);
Creating searchable_data_detection_results_message_index
CREATE TABLE IF NOT EXISTS searchable_data_detection_results (ROWID INTEGER PRIMARY KEY, data_detection_result INTEGER, message INTEGER, transaction_id INTEGER NOT NULL);
Creating searchable_data_detection_results table
CREATE INDEX IF NOT EXISTS searchable_data_detection_results_message_index ON searchable_data_detection_results(message); CREATE INDEX searchable_data_detection_results_data_detection_result_index ON searchable_data_detection_results(data_detection_result);
Unable to add searchable_data_detection_results_message_index
senders
contact_identifier
bucket
user_initiated
sender_addresses
sender
address
DROP TABLE IF EXISTS senders;
Dropping senders table
DROP TABLE IF EXISTS sender_addresses;
Dropping sender_addresses table
CREATE TABLE IF NOT EXISTS send_later (global_message_id INTEGER PRIMARY KEY REFERENCES message_global_data(ROWID) ON DELETE CASCADE ON UPDATE CASCADE, date INTEGER NOT NULL);
Unable to create send_later table
mailboxes
conversations
conversation_id
thread_scopes
mailbox
mailbox_type
filter_predicate
needs_update
last_viewed
threads
scope
conversation
newest_read_message
display_message
date
read
flagged
has_red_flag
has_orange_flag
has_yellow_flag
has_green_flag
has_blue_flag
has_purple_flag
has_gray_flag
draft
replied
forwarded
redirected
junk_level_set_by_user
junk_level
has_unflagged
has_attachments
count
thread_mailboxes
thread
thread_senders
priority
thread_recipients
type
v40@?0@"EFSQLTableSchema"8@"NSString"16@"EFSQLTableSchema"24Q32
v32@?0@"EFSQLTableSchema"8@"NSString"16@"EFSQLTableSchema"24
ALTER TABLE messages ADD COLUMN unsubscribe_type INTEGER;
Unable to add unsubscribeFlags column to threads
MSAssetDownloadRetryInterval
%@.%@
v16@?0@"NSObject<OS_xpc_object>"8
Attachments
attachmentID: %@
attachmentHash: %@
nameOnDisk: %@
downloadDate: %@
size: %@
viewCount: %@
lastViewed: %@
viewCountByTapped: %@
attachments
size
hash
file_name_on_file_system
viewed_count
viewed_by_tapped_count
date_last_downloaded
message_attachments
message_attachments.rowid
global_message_id
attachment
name
mime_part_number
remote_url
Unable to insert attachment with hash: %@ into attachments table
B16@?0@"EDPersistenceDatabaseConnection"8
EDAttachmentPersistence.m
We should never have both a mime part number and a maildrop URL for a message.
Unable to insert attachment: %@ for globalMessageID: %lld into message_attachments table
Failed to update row with attachment reference: %@, globalMessageID: %lld, mimePart: %@
v32@?0@"EFSQLRow"8Q16^B24
Determine which attachments are referenced by globalMessageIDs
Removing unexpected messages from attachments table
Found
Did not find
Failed to fetch attachment reference in message_attachments table
AttachmentData
attachmentsForAccountIdentifiers
regularAccountIdentifier
EDAttachmentPersistenceManager.m
Need to have either a fileWrapper or a URL
%lld
We can't possibly have found an attachment entry without a message_attachment
v32@?0@"NSString"8@"NSArray"16^B24
__temp_%@
@16@?0@"<EDPersistedMessage>"8
v32@?0@"NSString"8@"NSMutableArray"16^B24
v32@?0@"NSNumber"8@"NSArray"16^B24
B16@?0@"NSString"8
bimi
authority
pass
fail
temperror
declined
skipped
sha256
EDBIMIManager
EDBIMIManager.downloadScheduler
v32@?0@"NSURLRequest"8@"NSURLSessionDataTask"16^B24
EDBIMIManager.m
%s can only be called from unit tests
-[EDBIMIManager test_tearDown]
com.apple.mail.BIMI.MessageStatus
authservID
hasBIMIResult
bimiResult
vmcResult
hasLocation
hasEvidenceLocation
hasIndicator
hasIndicatorHash
indicatorHashAlgorithm
hasDKIMSignature
@"NSDictionary"8@?0
v36@?0@"NSString"8@"ECHeaderAuthenticationResultStatement"16@"ECBIMIData"24B32
 and indicator
v32@?0@"NSURL"8@"ECBIMIData"16^B24
disabled
enabled
com.apple.mail.BIMI.IndicatorDownload
downloadSucceeded
indicatorIsValid
usedPrivacyProxy
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
v12@?0B8
em_biome_stream
R %@
S %@
com.apple.email.interaction-log.submit-pet
ClientResumeAssertion
com.apple.email.signposts
com.apple.maild.EDClientResumer
v24@?0@"BSProcessHandle"8@"NSError"16
EDClientStateForegroundStateDidChange
EDClientStateForegroundStateVisibleMailboxesDidChange
EDClientStateForegroundStateDidChangeKeyIsForeground
isRunningTests
visibleMailboxObjectIDs
CloudKitControl
com.apple.mail.EDCloudMirroringPersistentStore.schedulers
CloudKitMirroringDataModel
momd
CloudKitMailConversationsFlags/CloudKitMirroringDataModel
com.apple.mail.preferences
v24@?0@"NSPersistentStoreDescription"8@"NSError"16
v16@?0@"NSManagedObjectContext"8
v16@?0@"NSCloudKitMirroringResult"8
com.apple.email.ConversationDailyExporter
ConversationInfo
last-modified
com.apple.mail.EDConversationMultipleRemoteStorage
Multiple Storages: [%@, %@]
conversation_id_message_id
SyncAnchorForLastDailyConversationExport
EDConversationFlagsChanged
EDConversationFlagsChangedConversationIDKey
EDConversationFlagsChangesKey
EDConversationFlagsKey
EDConversationFlagsReason
EDConversationFlagsOldFlags
MessageConversationIsVIP
MessageConversationIsMuted
muted
notify
ConversationFlags: 
<none>
flags
sync_key
message_id
date_sent
com.apple.email.ConversationPersistenceNotification
SELECT conversation_id, sync_key FROM conversations WHERE sync_key NOT NULL
Selecting synced conversations
:conversation_id
:limit
SELECT message_id FROM conversation_id_message_id WHERE conversation_id = :conversation_id ORDER BY date_sent DESC LIMIT :limit
Selecting message IDs for conversation ID
SELECT DISTINCT(conversation_id) FROM conversation_id_message_id WHERE message_id IN (%@)
Selecting conversation ID for message IDs
SELECT flags FROM conversations WHERE conversations.conversation_id = :conversation_id
Selecting flags for conversation ID
INSERT INTO conversations (flags) values (:flags)
:flags
Creating conversation.
SELECT flags FROM conversations WHERE conversation_id = :conversation_id LIMIT 1
Finding old conversation flags
UPDATE conversations SET flags = :flags, sync_key = :sync_key WHERE conversation_id = :conversation_id
:sync_key
Setting conversation flags
SELECT message_id, date_sent from messages where ROWID IN (%@)
Selecting message IDs to update conversation association table.
SELECT conversation_id FROM conversations where conversation_id = %@
Executing querying for conversation id
INSERT OR REPLACE INTO conversation_id_message_id (conversation_id, message_id, date_sent) VALUES (:conversation_id, :message_id, :date_sent)
:message_id
:date_sent
Setting conversation association table entries
DELETE FROM conversations WHERE conversation_id NOT IN (SELECT DISTINCT conversation_id from messages) AND (sync_key IS NULL AND conversation_id NOT IN (SELECT DISTINCT(conversation_id) FROM conversation_id_message_id WHERE date_sent > :older_than));
:older_than
Pruning conversations table
UPDATE conversation SET flags = :flags, sync_key = NULL WHERE conversation_id IN (%@)
SELECT value FROM properties WHERE key = '%@'
value
Selecting previous conversation daily export sync anchor
SELECT max(ROWID) as syncAnchor from messages
syncAnchor
Selecting current conversation sync anchor for daily export
INSERT OR REPLACE INTO properties (key, value) VALUES (:key, :value)
:key
:value
Updating previous conversation sync anchor for daily export
SELECT DISTINCT conversations.conversation_id AS conversation_id FROM conversations LEFT JOIN messages on messages.conversation_id = conversations.conversation_id WHERE messages.ROWID > :start AND messages.ROWID < :end AND conversations.flags != 0;
:start
:end
com.apple.email.ConversationPruning
message-ids
EDConversationRemoteCloudKitStoragePushNotificationName
kCloudStoreHistoryTokenUserDefaultsKey
com.apple.icloud-container.com.apple.mobilemail
%@-Export
%@-Import
conversationUUID == %@
lastModified
conversationUUID
v24@?0@"NSPersistentHistoryTransaction"8^B16
com.apple.mail.threadinfo
com.apple.mail.EDConversationRemoteKVSStorage
succeeded
failed
v32@?0@"NSString"8Q16^B24
v32@?0@"NSString"8@16^B24
NSUbiquitousKeyValueStoreServerChange
NSUbiquitousKeyValueStoreInitialSyncChange
NSUbiquitousKeyValueStoreQuotaViolationChange
unknown change reason (%lu)
-[EDDaemonInterfaceFactory test_tearDown]
-[EDDaemonInterfaceFactory newOutgoingMessageRepository]
EDDaemonInterfaceFactory.m
data_detection_results
category
EDDataDetectionPersistence
EDDataDetectionPersistence.m
HookResponder does not respond to all of the methods required by EDDataDetectionPersistence.
Inserting into the data detection results table
Reading data detection results
ROWID
Getting data detection results from message ID
com.apple.email.daemon.EDDiagnosticInfoGatherer
DiagnosticLogs
v16@?0@"NSError"8
com.apple.mail.SenderDomain
com.apple.mail.EDDifferentialPrivacyReporter
@"NSSet"8@?0
en_US
en_GB
en_CA
en_AU
fr_FR
de_DE
ja_JP
OTHER
v24@?0@"NSString"8@"NSString"16
B16@?0@"<EMExtendedContentItem>"8
v24@?0@"EMContentRepresentation"8@"NSError"16
EDGroupedSenderQueryHandler
com.apple.email.%@.%p
com.apple.mail.EDGroupedSenderQueryHandler.result
EDGroupedSenderQueryHandler.m
-[EDGroupedSenderQueryHandler test_tearDown]
after messages were added
deleted
changed
after messages were deleted
after messages were changed
@"EMObjectID"16@?0@"NSOrderedCollectionChange"8
@"EMObjectID"16@?0@"EMGroupedSender"8
B24@?0@"EMObjectID"8@"EMMessageListItemChange"16
B16@?0@"EMMessage"8
@"NSString"16@?0@"EMMessage"8
mode
order
weights
weightedThreshold
orderedThreshold
ignoreUserAddresses
confusionThreshold
limitToRecentMessages
ordered
weighted
conversationID
recipient
listID
MFUserCreatedMailboxIDs
EDHeuristicsMailboxPredictor.m
Invalid parameter not satisfying: %@
[mergedParams[kConfusionThresholdParameterKey] isKindOfClass:[NSNumber class]] || [mergedParams[kConfusionThresholdParameterKey] isKindOfClass:[NSNull class]]
[mergedParams[kOrderParameterKey] isKindOfClass:[NSArray class]]
[mergedParams[kWeightsParameterKey] isKindOfClass:[NSDictionary class]]
Unknown mode: %@
Unknown field: %@
v32@?0@"NSString"8@"NSNumber"16^B24
sendFromAddressJSONURL
canSendFrom
defaultAddress
email
%@ (%@)
%@:%@
X-MobileMe-AuthToken %@
POST
Authorization
application/json-rpc; charset=UTF-8
X-Apple-I-MD-M
X-Apple-I-MD
%llu
X-Apple-I-MD-RINFO
jsonrpc
update
method
params
AKAnisetteProvisioningController
/System/Library/PrivateFrameworks/AuthKit.framework/AuthKit
### Failed to Soft Linked: /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit
v16@?0@"<EMThreadBuilder>"8
v32@?0@"EMMessage"8Q16^B24
B32@?0@"EMMessage"8Q16^B24
In-memory threads
com.apple.mail.EDInMemoryThreadQueryHandler.contentProtection
com.apple.mail.EDInMemoryThreadQueryHandler.result
EDInMemoryThreadQueryHandler.m
-[EDInMemoryThreadQueryHandler test_tearDown]
EDInMemoryThreadQueryHandler<%p> transaction
Unable to get acknowledgement token for in-memory thread query handler
@"EMThreadObjectID"16@?0@"NSNumber"8
v24@?0@"NSArray"8^B16
v24@?0@"EMMessageListItemChange"8@"EMThreadObjectID"16
@"NSNumber"16@?0@"EMMessage"8
v32@?0@"EMThreadObjectID"8@"EMMessageListItemChange"16^B24
@16@?0@"EDInMemoryThread"8
@"NSNumber"16@?0@"EDInMemoryThread"8
B16@?0@"<ECEmailAddressConvertible>"8
v32@?0@"NSNumber"8@"EDInMemoryThread"16^B24
_oldestThreadsByMailboxObjectIDs should be only initialized once
v32@?0@"EDInMemoryThread"8Q16^B24
v32@?0@"EMMailboxObjectID"8@"EMThread"16^B24
v32@?0@"NSNumber"8Q16^B24
@"EMThreadObjectID"16@?0@"EMThread"8
thread.
@"<EMCollectionItemID>"16@?0@"NSNumber"8
<%@ %p
 eventID=%lld
 version=%ld
 name=%@
 date=%@
 accountID=%@
 mailboxID=%lld
 conversationID=%lld
 messageIDHash=%lld
 messagePersistentID=%lld
 data=%@
duration
scrolled_to_end
model
version
score
features
com.apple.mail.interaction-log.salt
q24@?0@"NSDictionary"8@"NSDictionary"16
<%@ %p: %@>
com.apple.mail
com.apple.mail.EDInteractionLoggerStateTracking
com.apple.email.EDInteractionLoggerProcessing
reply_draft_started
forward_draft_started
message_view_start
message_view_end
message_list_display_started
message_list_type
position
cell_style
message_list_display_ended
none
v32@?0@"NSString"8@"_EDUserActionState"16^B24
message_moved
message_copied
link_clicked
ConversationViewExcludesRelatedMessages
ConversationViewShowsNewestAtTop
LinesOfPreview
NumberOfActiveAccounts
DisableThreading
LeftEdgeSwipeAction
RightEdgeSwipeAction
ColumnLayoutMessageList
NumberOfSnippetLines
@"NSDictionary"16@?0@8
ConversationViewSortDescending
ConversationViewSpansMailboxes
@"NSDictionary"16@?0@"NSNumber"8
AccountOrdering
@"NSDictionary"16@?0@"NSArray"8
v32@?0@8@16^B24
app_launch
app_background
app_resume
marked_mute_thread
message_fetched
read_changed
flag_changed
reply_sent
forward_sent
message_sent
com.apple.mobilemail.ListUnsubscribeScheduler
-[EDListUnsubscribeHandler ignoreWithCommand:completion:]
EDListUnsubscribeHandler.m
-[EDListUnsubscribeHandler unsubscribeMailtoWithCommand:completion:]
Cannot perform HTML unsubscribe. url was nil: %d, postContent was nil: %d
local_message_actions
action_messages
action_labels
action_flags
action
source_mailbox
destination_mailbox
action_type
message
destination_message
label
action_phase
remote_id
do_add
flag_type
flag_value
-[EDLocalActionPersistence init]
EDLocalActionPersistence.m
SELECT ROWID, action_type, user_initiated, mailbox, source_mailbox, destination_mailbox FROM local_message_actions WHERE ((mailbox IN (SELECT ROWID FROM mailboxes WHERE url GLOB '%@*')) AND (ROWID > ?)) ORDER BY ROWID
DELETE FROM local_message_actions WHERE ROWID IN (%@);
deleting actions
SELECT action_phase, remote_id, message, destination_message FROM action_messages WHERE action = ?
v16@?0@"<ECTransferMessageActionItemBuilder>"8
Creating a transfer action when we don't have a transfer action type
v16@?0@"<ECTransferMessageActionBuilder>"8
A transfer all action should always have exactly one remote ID associated with it
v16@?0@"<ECTransferUndownloadedMessageActionBuilder>"8
v16@?0@"<ECFlagChangeMessageActionBuilder>"8
A flag change all action should always have exactly one remote ID associated with it
v16@?0@"<ECFlagChangeUndownloadedMessageActionBuilder>"8
SELECT label, do_add FROM action_labels WHERE action = ?
v16@?0@"<ECLabelChangeMessageActionBuilder>"8
SELECT remote_id, message FROM action_messages WHERE action = ?
SELECT flag_type, flag_value FROM action_flags WHERE action = ?
v16@?0@"<ECMessageFlagChangeBuilder>"8
-[EDLocalActionPersistence messageForDatabaseID:]
INSERT INTO local_message_actions (action_type, mailbox) VALUES (?, ?)
Adding flag change action
INSERT INTO action_flags (action, flag_type, flag_value) VALUES (?, ?, ?)
v28@?0B8q12q20
Adding flag change records
INSERT INTO local_message_actions (action_type, user_initiated, mailbox, source_mailbox, destination_mailbox) VALUES (?, ?, ?, ?, ?)
Adding copy action
copy
append
move
delete
INSERT INTO action_labels (action, label, do_add) VALUES (?, ?, ?)
Adding flag change messages
UPDATE local_message_actions SET mailbox = :mailbox WHERE ROWID = :action
:action
:mailbox
Updating action phase
source mailbox
destination mailbox
-[EDLocalActionPersistence moveSupportedFromMailboxURL:toURL:]
UPDATE action_messages SET action_phase = %ld WHERE action = %llu AND %@
Updating copy item phase
DELETE FROM action_messages WHERE action = %llu AND %@
Deleting copy items
Copy item had neither a source remoteID or a destination message
(remote_id IN (%@) OR destination_message IN (%@)
remote_id IN (%@)
destination_message IN (%@)
DELETE FROM action_messages WHERE action = %lld AND NOT %@
Deleting flag change messages.
DELETE FROM local_message_actions WHERE ROWID = ?
Removing completed action
UserNotificationCenter
RemindMe
Sender
mailbox_actions
account_identifier
mailbox_name
new_mailbox_name
INSERT INTO mailbox_actions (account_identifier, action_type, mailbox_name, new_mailbox_name) VALUES (?, ?, ?, ?)
inserting mailbox action
SELECT ROWID, action_type, mailbox_name, new_mailbox_name FROM mailbox_actions WHERE (account_identifier = ?) ORDER BY ROWID
SELECT ROWID, action_type, mailbox_name, new_mailbox_name FROM mailbox_actions WHERE (account_identifier = ?) ORDER BY ROWID LIMIT 1
DELETE FROM mailbox_actions WHERE ROWID = ?
@"NSString"16@?0@"NSNumber"8
DELETE FROM mailbox_actions WHERE ROWID IN (%@)
-[EDMailboxPersistence test_tearDown]
@"EMMailboxObjectID"16@?0@"EMMailbox"8
/Notes
-[EDMailboxPersistence mailboxDatabaseIDsForMailboxObjectIDs:createIfNecessary:]
EDMailboxPersistence.m
-[EDMailboxPersistence createMailbox:parentMailboxID:]
-[EDMailboxPersistence deleteMailbox:]
-[EDMailboxPersistence moveMailbox:newParentMailboxID:]
-[EDMailboxPersistence renameMailbox:newName:]
com.apple.mail.MailboxPrediction.processing
B16@?0@"EMMailbox"8
v16@?0@"NSArray"8
@16@?0@"NSString"8
B16@?0@"EMMailboxObjectID"8
EDMailboxProvider
com.apple.mail.EDMailboxProviderQueue
-[EDMailboxProvider test_tearDown]
v16@?0@"<EDReceivingAccount>"8
-[EDMailboxProvider _transformMailbox:legacyMailboxToMailboxMap:objectIDToLegacyMailboxMap:]
EDMailboxProvider.m
-[EDMailboxProvider _fetchMailboxesForAccount:]
@16@?0@"<ECMailbox>"8
@16@?0@"EMObjectID"8
com.apple.email.EDMessageRepository.serializationQueue
@16@?0@"EMMailbox"8
EDMailDropMetadataGenerator
v16@?0@8
v16@?0@"EFPromise"8
EDMailDropSupport
FinishedParsingMailDropNodes
replaceNodeWithIdWithHTML(%@);
v24@?0@"NSString"8@"NSError"16
v24@?0@8@"NSError"16
EDMailDropMetadataGenerator.m
webView
B16@?0@"NSDictionary"8
v32@?0@"NSString"8@"NSString"16^B24
com.apple.MobileAsset.MailDynamicData
IgnoreAccountDomains
IgnoredDomains
com.apple.mailsupport.downloadMobileAssetCatalog
gmail.com
googlemail.com
hotmail.co
hotmail.co.uk
hotmail.com
hotmail.eu
hotmail.net
hotmail.org
icloud.com
me.com
outlook.co
outlook.com
outlook.eu
outlook.org
rocketmail.com
ymail.com
v16@?0@"<EDAssetDownloadSchedulerContinuation>"8
apple.com
group.apple.com
v16@?0q8
TelemetryConfig.plist
EDMessageActionHandlerProvidersChanged
v16@?0@"NSMutableArray"8
v32@?0@"<EFCancelable>"8@"NSArray"16@"NSError"24
v32@?0@"MERemoteExtension"8Q16^B24
@16@?0@"MERemoteExtension"8
v16@?0@"MEMessageActionDecision"8
globalMessageID: %lld@
mimePartNumber: %@
name: %@
remoteURL: %@
com.apple.email.EDMessageChangeManager
HookResponder does not respond to all of the methods required by the EDMessageChangeManager.
-[EDMessageChangeManager init]
EDMessageChangeManager.m
-[EDMessageChangeManager test_tearDown]
@"<NSCopying>"16@?0@"<ECMessage>"8
v32@?0@"<EDPersistedMessage>"8@"<ECMessage>"16^B24
B16@?0@"<EDPersistedMessage>"8
B16@?0@"<ECMessage>"8
v32@?0@"NSURL"8@"NSArray"16^B24
@"<NSCopying>"16@?0@"<EDBaseMessage>"8
Mail
BIMI
@"<EDPersistedMessage>"16@?0@"<ECMessage>"8
v32@?0@"NSNumber"8@"EFPair"16^B24
v16@?0@"<ECIMAPServerMessageBuilder>"8
Got foreign key constraint
Calling reflectFlagChanges:forMessages: on IMAP
Reflect all deleted server messages for a data source without server messages
@"<EDPersistedMessage>"16@?0@"NSNumber"8
v24@?0Q8^B16
v32@?0@"NSDictionary"8@"NSMutableArray"16^B24
@"NSNumber"16@?0@"<EDPersistedMessage>"8
v32@?0@"ECMessageFlagChange"8@"NSMutableArray"16^B24
v32@?0@"ECTransferMessageActionItem"8@"NSData"16^B24
v16@?0@"<ECServerMessageBuilder>"8
@"<ECMessage>"16@?0@"ECTransferMessageActionItem"8
B32@?0@"<ECMessage>"8Q16^B24
-[EDMessageChangeManager accountForMailboxURL:]
v32@?0@"ECAngleBracketIDHash"8@"EDReadLaterCloudStorageChangeElement"16^B24
B32@?0@"EFPair"8Q16^B24
EDNotificationWillSyncMailbox
EDNotificationDidSyncMailbox
EDNotificationKeyMailbox
%@-MailboxObserver-%@
%@-MessagesPendingFlagChangesKey-%p
v16@?0@"NSString"8
Messages
Initialization
EDMessageCountQueryHandler.m
-[EDMessageCountQueryHandler test_tearDown]
resetting
starting
v40@?0@"EMObjectID"8q16q24q32
full count
Incrementing local counts
Decrementing local counts
v32@?0@"EMObjectID"8@"_EDMailboxServerCount"16^B24
All updates acknowledged
Finished syncing mailbox %@
Original
Prepare for change
Process change
Changed messages from %lld matches to %lld matches
Persistence did add messages
New match after changing number of attachments
Persistence did delete messages
Deleted %lld messages
Changed message ID to one we've already counted
Remind Me timer fired
Persistence is adding mailbox
server-count set to %lld for %@
Persistence did update server count
most-recent-status-count set to %lld for %@
Persistence did update most recent status count
last-sync and most-recent-status-count to %lld for %@
Persistence did update last sync and most recent status count
Mailbox list changed
GlobalMessageID:%lld - %@, %@
unread
not flagged
EDMessageCountQueryHandler-%d
v16@?0@"NSCountedSet"8
MessageData
NonpurgeableMessageData
senderAddress.emailAddressValue.displayName
senderAddress.emailAddressValue.simpleAddress
toList.emailAddressValue.displayName
toList.emailAddressValue.simpleAddress
ccList.emailAddressValue.displayName
ccList.emailAddressValue.simpleAddress
mailboxObjectIDs.url.absoluteString
subject.subjectString
body
AnyRecipient
From
Subject
Spotlight
%K = %@
@"NSPredicate"16@?0@"ECEmailAddress"8
EDMessageListItemPredicates.m
Expected predicate should be a NSCompoundPredicate
Expected subpredicate should be a NSComparisonPredicate
@"NSPredicate"16@?0@"NSPredicate"8
rowid
objectID should be a constant value right expression
@"EMMessageObjectID"16@?0@8
messageID
subject
summary
date_received
display_date
recipients
message_references
addresses
comment
message_global_data
follow_up_start_date
follow_up_end_date
subjects
summaries
protected_message_data
message_metadata
json_values
timestamp
addresses_address
addresses_comment
com.apple.mail.EDMessagePersistence.message_metadata
simpleAddress
displayName
subjectWithoutPrefix
additionalMapper
emailAddressValue
original_mailbox
content_type
encoding
external_id
unique_id
list_id_hash
subject_prefix
date_last_viewed
unsubscribe_type
senderAddress
mailboxObjectIDs
isNotify
isMute
hasAttachments
column
placeholderColumn
document_id
remote_mailbox
searchable_messages
reference
is_originator
data
@"EMMessageObjectID"16@?0@"NSData"8
@"NSString"24@?0@"NSString"8@"NSString"16
%@, %@
-[EDMessagePersistence countOfMessagesWithGlobalMessageID:matchingQuery:]
EDMessagePersistence.m
-[EDMessagePersistence countOfMessagesMatchingQuery:]
v24@?0@"NSArray"8@"NSError"16
-[EDMessagePersistence iterateMessagesMatchingQuery:batchSize:firstBatchSize:limit:cancelationToken:handler:]
B16@?0@"NSSortDescriptor"8
-[EDMessagePersistence iteratePersistedMessagesMatchingQuery:limit:cancelationToken:handler:]
 (expanded mailbox query)
-[EDMessagePersistence persistedMessageForOutgoingMessage:isDraft:]
v32@?0@"NSNumber"8@"NSNumber"16^B24
v32@?0@"EMMailboxScope"8@"NSArray"16^B24
Fetching messages for messageIDHashes
@"NSArray"16@?0@"EMObjectID"8
@"EMMessageObjectID"16@?0@"EMObjectID"8
@"EMMessageObjectID"16@?0@"NSNumber"8
-[EDMessagePersistence persistedMessagesForDatabaseIDs:requireProtectedData:temporarilyUnavailableDatabaseIDs:]
Selecting message_ids for messages with follow-ups with certain conversation_ids
Fetch persistentMessageIDs for globalMessageIDs
@"EMMessage"16@?0@"EMMessageObjectID"8
Exchange message may have a different message-id
B16@?0@"EMObjectID"8
@"EMMailboxScope"16@?0@"EMMessageObjectID"8
SELECT json_extract(%@ , :path ) FROM %@ WHERE %@ == :message
:path
:message
INSERT INTO message_metadata(message_id, timestamp, json_values) VALUES(:message, :timestamp, json_set(json_object(), :path, :json_string)) ON CONFLICT(message_id) DO UPDATE SET json_values = json_set(json_values, :path, :json_string), timestamp = :timestamp;
:json_string
:timestamp
UPDATE OR IGNORE message_metadata SET json_values = json_remove(json_values, :path), timestamp = :timestamp WHERE message_id == :message;
B8@?0
SELECT COUNT(*) FROM message_metadata;
DELETE FROM message_metadata ORDER BY timestamp LIMIT :limit;
-[EDMessagePersistence cachedDatabaseIDsDictionaryForGlobalMessageIDs:]
Seleting brand indicator
Seleting brand indicators
Inserting brand indicator
Seleting existing brand indicator
Seleting undownloaded brand indicators
Updating brand indicator
Selecting brand indicator to remove
Nulling out brand indicator for messages
Deleting brand indicator
Updating follow up
Resetting display date after updating follow up
read_later
-[EDMessagePersistence globalIDForMessageWithDatabaseID:mailboxScope:]
-[EDMessagePersistence groupedMessagesCountByMailboxMatchingQuery:variable:]
-[EDMessagePersistence requestContentForMessageObjectID:requestID:options:delegate:completionHandler:]
-[EDMessagePersistence requestSummaryForMessageObjectID:]
Combining smartsort with other sortDescriptors is not supported.
Smartsort only supports single mailbox predicate.
Unable to find message for messageID %@
-[EDMessagePersistence collectStatistics]
Q16@?0@"NSString"8
SELECT COUNT(*) FROM messages
SELECT COUNT(*) FROM messages WHERE deleted = '0'
SELECT COUNT(*) FROM searchable_messages
SELECT COUNT(*) FROM messages WHERE messages.searchable_message IS NULL AND deleted = '0'
Failed on predicate %@
com.apple.email.EDMessageQueryHandler.contentProtection
com.apple.email.EDMessageQueryHandler.result
v32@?0@"EMMessageObjectID"8@"NSArray"16^B24
@"EMMessageListItemChange"8@?0
EDMessageQueryHandler.m
_oldestMessageIDsByMailboxObjectIDs should be only initialized once
@"NSPredicate"20@?0@"EMMessage"8B16
@"EMMessage"16@?0@"EMMessage"8
B24@?0@"EMMessage"8@"EMMessage"16
com.apple.email._EDMessageItemIDCollector._scheduler
Timed out
Query helper requested restart
RemoteSearchKey
%@-MessagesPendingConversationIDChangeKey-%p
%@-JournaledMessagesPendingAddKey-%p
%@-MessagesPendingSenderBucketChangesKey-%p
%@-MessagesPendingReadLaterDateChangesKey-%p
%@-MessagesPendingDisplayDateChangesKey-%p
EDMessageQueryHelper.m
Trying to start EDMessageQueryHelper %p that was already started.
Message SQL query
q24@?0@"<EDPersistedMessage>"8@"<EDPersistedMessage>"16
Journal reconciliation happened between isAddingMessages: and didAddMessages: persistence hooks
@"NSString"16@?0@"NSString"8
-[EDMessagePredicateParser parseResultsFromPredicate:]
EDMessageQueryParser.m
displayMessage
Predicate must be a NSCompoundPredicate
rowid IN %@
results expected to have at least one EDMessageQueryParserObject
FALSE
Generated query is nil
(kMDItemContentType = public.email-message && %@)
Searchable Index query expression is not valid
@"NSNumber"16@?0@"NSString"8
B16@?0@"NSPredicate"8
com.apple.email.EDMessageRepository.updateThrottlerResetQueue
com.apple.email.EDMessageRepository.asyncWorkScheduler
com.apple.email.EDMessageRepository.contentProtectionQueue
EDMessageRepository.m
-[EDMessageRepository test_tearDown]
Buckets
starting one off query
starting one off count query
starting query
B16@?0@"EMThreadScope"8
v32@?0@"EFPair"8@"NSMutableSet"16^B24
v32@?0@"EMThreadScope"8@"NSMutableSet"16^B24
@"EDThreadQueryHandler"16@?0@"<EDMessageRepositoryQueryHandler>"8
starting count query
-[EDMessageRepository test_activeQueryCancelationTokens]
v32@?0@"EMThreadScope"8@"NSArray"16^B24
Non-thread query handler assigned to thread query.
v32@?0@"EMObjectID"8@"<EDMessageRepositoryQueryHandler>"16^B24
requesting message list items
Failed to get message list item for objectID: %@
v44@?0@"EMThreadObjectID"8@"EMThread"16B24@"EDThreadQueryHandler"28@"NSError"36
Non-grouped-sender query handler assigned to grouped-sender query.
Failed to find grouped sender in query handler
Failed to find message list item or "missing" reason
    %@
performing change action
@16@?0@"<ECMessage>"8
v32@?0@"NSDate"8@"NSMutableArray"16^B24
@"NSURL"16@?0@"EMMailboxObjectID"8
An undo action was requested for a copy, that's not yet supported
@"<NSCopying>"16@?0@"<EDPersistedMessage>"8
v32@?0@"<EDReceivingAccount>"8@"NSArray"16^B24
v32@?0@"NSURL"8@"NSMutableArray"16^B24
requesting content representation
v16@?0@"EMContentRepresentation"8
resetting precomputed threads
setting cached metadata
getting cached metadata
mailbox prediction
v16@?0@"EMMailbox"8
loading older messages
v16@?0@"EDWebContentParserResults"8
@"NSArray"16@?0@"<EDReconciliationQueryProvider>"8
EDMessageRepositoryQueryHandler.m
-[EDMessageRepositoryQueryHandler test_tearDown]
v16@?0@"NSMapTable"8
EDMessageTransformer.m
message != nil
@"NSDate"24@?0@"NSDate"8@"NSDate"16
@"NSNumber"24@?0@"NSNumber"8@"NSNumber"16
@"EMMessage"16@?0@"<EDPersistedMessage>"8
v16@?0@"<EMMessageBuilder>"8
@16@?0@"<ECGmailLabel>"8
@16@?0@"NSURL"8
com.apple.email.EDOutgoingMessageRepository
com.apple.email.outgoingmessagerepository.deliveryworkblock
-[EDOutgoingMessageRepository scheduleAlarmForSendLaterDate:completion:]
EDOutgoingMessageRepository.m
-[EDOutgoingMessageRepository deliverMessage:usingMailDrop:isCancelable:completion:]
-[EDOutgoingMessageRepository outgoingMessageFromPersistedMessage:]
-[EDOutgoingMessageRepository cancelLastDelayedMessage:]
-[EDOutgoingMessageRepository isProcessingWithCompletion:]
-[EDOutgoingMessageRepository numberOfPendingMessagesWithCompletion:]
-[EDOutgoingMessageRepository outboxContainsMessageFromAccountObjectID:completion:]
-[EDOutgoingMessageRepository processAllQueuedMessages]
-[EDOutgoingMessageRepository resumeDeliveryQueue]
-[EDOutgoingMessageRepository suspendDeliveryQueue]
-[EDOutgoingMessageRepository messagesForDocumentID:mailboxID:]
-[EDOutgoingMessageRepository startObservingPendingMessageChangesWithChangeObserver:observationIdentifier:]
-[EDOutgoingMessageRepository cancelObservation:]
-[EDOutgoingMessageRepository urlForSendLaterFolder]
EDPBGeneratedExtensions.m
INVALID event, we should not have reached this point
%@ %@
sequence_number
event_name
category_marked
category_inferred
INVALID
MESSAGE_FETCHED
MESSAGE_SENT
MESSAGE_LIST_DISPLAY_STARTED
MESSAGE_LIST_DISPLAY_ENDED
MESSAGE_MOVED
MESSAGE_COPIED
LINK_CLICKED
APP_LAUNCH
APP_BACKGROUND
APP_RESUME
FLAG_CHANGED
READ_CHANGED
MESSAGE_VIEW_START
MESSAGE_VIEW_END
REPLY_DRAFT_STARTED
FORWARD_DRAFT_STARTED
REPLY_SENT
FORWARD_SENT
MARKED_MUTE_THREAD
CATEGORY_MARKED
CATEGORY_INFERRED
(unknown: %i)
account_id
mailbox_id
positive
category_type
model_id
model_version
features_important
features_promotion
UNDEFINED_MAILBOX_TYPE
INBOX
ARCHIVE
SENT
TRASH
JUNK
DRAFTS
OUTBOX
UNDEFINED_CATEGORY_TYPE
IMPORTANT
SOCIAL
PROMOTION
LIST
remove_all_user_overrides
user_id
device_id
locale
timezone_offset
user_segment
category_root_installed
from_mailbox_id
from_mailbox_type
to_mailbox_id
to_mailbox_type
deprecated
headers
idx (%lu) is out of range (%lu)
sender_domain
sender_is_vip
sender_contact_id
user_is_sender
subject_words
message_is_reply
message_is_forwarded
user_is_to
user_is_cc
user_is_bcc
list_id
references
to_address
to_domain
to_is_vip
to_contact_id
cc_address
cc_domain
cc_is_vip
cc_contact_id
bcc_address
bcc_domain
bcc_is_vip
bcc_contact_id
unknown_feature_count
cc_contains_contact
cc_is_top_direct_addresses_based_on_respond
cc_is_top_direct_addresses_based_on_scroll
cc_is_top_direct_addresses_based_on_send
cc_is_top_direct_addresses_based_on_view
cc_is_top_indirect_addresses_based_on_respond
cc_is_top_indirect_addresses_based_on_scroll
cc_is_top_indirect_addresses_based_on_send
cc_is_top_indirect_addresses_based_on_view
from_list_id
message_is_forward
num_recipients
sender_is_contact
sender_is_top_direct_addresses_based_on_respond
sender_is_top_direct_addresses_based_on_scroll
sender_is_top_direct_addresses_based_on_send
sender_is_top_direct_addresses_based_on_view
sender_is_top_indirect_addresses_based_on_respond
sender_is_top_indirect_addresses_based_on_scroll
sender_is_top_indirect_addresses_based_on_send
sender_is_top_indirect_addresses_based_on_view
subject_is_top_words_based_on_respond
subject_is_top_words_based_on_scroll
subject_is_top_words_based_on_send
subject_is_top_words_based_on_view
time_received
to_contains_contact
to_is_top_direct_addresses_based_on_respond
to_is_top_direct_addresses_based_on_scroll
to_is_top_direct_addresses_based_on_send
to_is_top_direct_addresses_based_on_view
to_is_top_indirect_addresses_based_on_respond
to_is_top_indirect_addresses_based_on_scroll
to_is_top_indirect_addresses_based_on_send
to_is_top_indirect_addresses_based_on_view
NIGHT
MORNING
AFTERNOON
EVENING
to_count
language
header_key_filtered_count
Couldn't get messages for persisted messages
-[EDPersistence test_tearDown]
-[EDPersistence database]
EDPersistence.m
-[EDPersistence serverMessagePersistenceFactory]
-[EDPersistence conversationPersistence]
-[EDPersistence localActionPersistence]
-[EDPersistence messageChangeManager]
-[EDPersistence dataDetectionPersistence]
-[EDPersistence readLaterPersistence]
-[EDPersistence richLinkPersistence]
-[EDPersistence sendLaterPersistence]
-[EDPersistence searchableIndexManager]
-[EDPersistence threadPersistence]
-[EDPersistence remoteContentManager]
-[EDPersistence remoteContentPersistence]
-[EDPersistence attachmentPersistenceManager]
-[EDPersistence mailboxActionPersistence]
-[EDPersistence persistenceStatistics]
MailClassAVFS
MailClassBVFS
MailClassCVFS
Protected Index
_EDPersistenceActiveDatabaseConnection
_EDPersistenceReadOnlyDatabaseConnection
_EDPersistenceNeedsHighPriority
-[EDPersistenceDatabase init]
EDPersistenceDatabase.m
performReadBlockInDatabase called before database setup is complete
performWriteBlockInDatabase called before database setup is complete
Database write block nested inside a readblock.
Committing transaction in nested block
Couldn't get database connection in performBlock
Committing transaction
We should not be checking out a connection on a nested call
-[EDPersistenceDatabase openConnectionIsWriter:]
-[EDPersistenceDatabase enforceDataProtection]
file
Unsupported file protection
cache
shared
memory
Invalid database type
:memory:
_EDPersistenceDatabaseConnectionInTransaction
_EDPersistenceDatabaseConnectionNestedBlockFailed
_EDPersistenceDatabaseConnectionTransactionGeneration
WriteTransactionGeneration
-[EDPersistenceDatabaseConnection init]
EDPersistenceDatabaseConnection.m
[%@ isWriter: %@, SQL connection: %@]
Error preparing statement for query %@
SELECT statement
v32@?0Q8@"<EFSQLBindable>"16^B24
INSERT statement
v32@?0@"NSString"8@"<EFSQLBindable>"16^B24
UPDATE statement
UPSERT statement
Error while executing %@
Error while executing DELETE statement
We have a database connection without a sql database pointer
EDPersistenceDatabaseConnection open called when already open
Unable to finalize statements
configureSQLConnection called on a closed connection
and64
error creating user function and64
PRAGMA foreign_keys = ON;
error enabling foreign key support
error setting busy timeout
Transaction error set despite not needing/attempting to take a transaction
commit
 (due to nested block failure)
rollback
SELECT value FROM properties WHERE key = :key
-[EDPersistenceDatabaseConnection handleSQLResult:message:]
PRAGMA database_list
Getting attached databases
SELECT 1 FROM %@.sqlite_master WHERE name = ? AND type = 'table'
SELECT 1 FROM sqlite_master WHERE name = ? AND type = 'table'
Checking for existence of table
PRAGMA %@.table_info(%@)
PRAGMA table_info(%@)
Fetching column type
attaching %@
Attaching database when not open
ATTACH DATABASE %@ AS %@
Detaching database when not open
DETACH DATABASE %@
detaching %@
-[EDPersistenceDatabaseConnectionPool init]
EDPersistenceDatabaseConnectionPool.m
maxConcurrentBackgroundReaders > 0
No connection wrapper found
Protected Index Journals
-wal
-shm
%@ number: %lu, referenceCount: %lu
EDPersistenceDatabaseJournal.m
reference count should be non-zero
com.apple.email.persistenceDatabaseJournalManager.checkExistingQueue
com.apple.email.persistenceDatabaseJournalManager.deleteQueue
_currentJournal exists, but has no reference count
@"EDPersistenceDatabaseJournal"8@?0
properties
EDPersistenceDatabaseSchema.m
+[EDPersistenceDatabaseSchema test_resetSchema]
v24@?0@"NSMutableArray"8@"NSMutableArray"16
Unable to resolve association: %@
Unable to resolve foreign key constraint: %@
absoluteString
total_count
unread_count
deleted_count
%@ %@ -> %@
%@(%@)
Unable to initialize Hook Registry. Found no types for selector: %@
EDPersistenceHookRegistry.m
[hookResponder respondsToSelector:requiredMethod]
EDPropertyMapperLookupKeySelectIndex
com.apple.MailPersonaStorage
B24@?0r*8@"NSObject<OS_xpc_object>"16
quota_event
submitted_event
raw_data
group.com.apple.suggestions.mail-intelligence
mailIntelligencePersistentBits
com.apple.email.EDPETInteractionEventLog.workQueue
USER-ID
interaction_log,at=%@,v=%ld.pblog.archived
interaction_log,at=%@,v=%ld.pblog.lzma
EDPETInteractionEventLog.m
directory.isFileURL
interaction_log.pblog
v44@?0i8@"NSData"12r*20Q28^B36
Can't map eventName string to enum: %@
@"NSNumber"8@?0
Fwd: 
dropped_events_count
EDPopulateSendersTableMigrationStep
@"NSArray"16@?0@"NSArray"8
v32@?0@"CNContact"8@"NSArray"16^B24
v32@?0@"ECEmailAddress"8@"NSNumber"16^B24
v32@?0@"ECEmailAddress"8@"NSArray"16^B24
@"NSString"16@?0@"ECEmailAddress"8
@"NSNumber"16@?0@"ECEmailAddress"8
v32@?0@8@"NSArray"16^B24
com.apple.email.EDPrecomputedThreadQueryHandler.changeScheduler
com.apple.email.EDPrecomputedThreadQueryHandler.backgroundWorkScheduler
Precomputed Threads
v16@?0@"EFCancelationToken"8
EDPrecomputedThreadQueryHandler.m
-[EDPrecomputedThreadQueryHandler test_tearDown]
v32@?0@"NSArray"8^Q16^B24
B16@?0@"_EDThreadPositionChangeSet"8
 after %@
@"NSString"8@?0
all updates were acknowledged
v32@?0@"EMThreadObjectID"8@"NSMutableOrderedSet"16^B24
B16@?0@"EMThreadObjectID"8
conversation flags change
messageID change
summary change
@"NSString"16@?0@"EMThreadObjectID"8
@"NSString"16@?0@"NSOrderedSet"8
%@ -> %@
Add:
Move:
Delete:
Adding a thread based on position of a thread that was deleted
Moving a thread that was deleted
Moving a thread based on position of a thread that was deleted
+[EDProtectedDatabasePersistence protectedDatabaseName]
EDProtectedDatabasePersistence.m
+[EDProtectedDatabasePersistence journalDatabaseName]
com.apple.email.protectedDatabasePersistence.reconciliationQueue
Unable to attach protected database
Unable to detach protected database
Initializing journal database
Unable to attach journal database
Unable to detach journal database
PRAGMA %@.journal_mode = WAL;
SELECT name FROM %@.sqlite_sequence
%@.sqlite_sequence
SELECT max(%@) FROM %@
Finding max %@
on-demand reconciliation
reconciliation
Attaching journal for merging
Upgrading journal for merging
Reconciling protected data
@"<EFSQLExpressable>"16@?0@"EFSQLColumnSchema"8
We must have at least one join constraint
Selecting ROWIDs to merge
INSERT OR IGNORE INTO %@ SELECT * FROM %@ WHERE %@
Unable to insert new rows into protected database for table %@
Committing merge batch transaction
Unable to merge journal for table %@
Committing update batch transaction
Unable to delete rows from journal for table %@
 UNION 
SELECT DISTINCT %@ FROM %@
 WHERE 
v24@?0@"EFSQLColumnSchema"8^B16
SELECT %1$@ FROM %2$@ WHERE %1$@ NOT IN (%3$@)
Merge handler already registered for table
-[EDProtectedDatabasePersistence supportsJournaling]
-[EDProtectedDatabasePersistence protectedDataAvailable]
com.apple.emaildaemon.protecteddatabasepersistence.cleanup
EDQueryCreator.m
The query type isn't allowed.
com.apple.mail.remindMe
display-date
message-id
EDReadLaterCloudStorage.m
dictionary
EDReadLaterPersistence.m
Expect a non-nil date
Resetting display date after updating read later
EDRemindMeNotificationControllerNextAlarmDate
Remind Me
com.apple.EmailDaemon.EDRemindMeNotificationController.messageScheduler
EDRemindMeNotificationController.alarm
v28@?0@"EFXPCAlarm"8@"NSDate"16B24
EDRemindMeNotificationController.m
-[EDRemindMeNotificationController test_waitForUpdates]
-[EDRemindMeNotificationController test_tearDown]
v16@?0@"NSHashTable"8
EDRemoteClient.m
-[EDRemoteClient test_tearDown]
RemoteContentURLCache
EDRemoteContentCacheConfiguration
EDRemoteContentManager
com.apple.email.EDRemoteContentManager.backgroundWorkScheduler
v16@?0@?<v@?q>8
 and pruning
com.apple.mail.RemoteContent.SyntheticRequestBatch
batchSize
batchDuration
isUnconditional
didComplete
successfulCount
percentSuccessful
failedCount
percentFailed
canceledCount
percentCanceled
deferredCount
percentDeferred
com.apple.mail.remoteContentManager.singleURLRequest
dataSize
B32@?0@"NSURLSessionDataTask"8@"NSNumber"16^B24
com.apple.email.EDRemoteContentManager.unconditionalRequestScheduler
com.apple.email.EDRemoteContentManager.requestScheduler
wrong mailbox type: %ld
message is too old: %@
B32@?0@"NSURL"8Q16^B24
http
https
B16@?0@"NSURL"8
com.apple.mail.remoteContentManager.parseVerification
hadMismatches
extraCount
missedCount
com.apple.mail.remoteContentManager.addRemoteContentLinks
remoteContentLinks
newRemoteContentLinks
requiredParsing
v16@?0@"BPSCompletion"8
v16@?0@"BMStoreEvent"8
EDRemoteContentManager.m
-[EDRemoteContentManager test_tearDown]
@"NSString"16@?0@"NSURL"8
double EFARC4RandomDoubleInRange(double, double)
EFMathUtilities.h
max must not be less than min
additional_remote_content_links
EDRemoteContentPersistence
com.apple.email.EDRemoteContentPersistence.contentProtectionQueue
com.apple.email.EDRemoteContentPersistence.analyticsScheduler
com.apple.mail.remoteContentPersistence.databaseState
totalCount
requestedCount
percentRequested
unrequestedCount
percentUnrequested
protectedCount
percentProtected
hasProtectedLinks
com.apple.mail.remoteContentPersistence.databasePruning
beforeCount
prunedCount
refilledCount
didRefill
INSERT OR IGNORE INTO %@ SELECT * FROM %@ ORDER BY ROWID ASC LIMIT %lu
Refilling remote_content_links from additional table
Failed to get remote content url info
EDRemoteContentPersistence.m
-[EDRemoteContentPersistence test_tearDown]
CREATE TABLE IF NOT EXISTS messages_new (ROWID INTEGER PRIMARY KEY AUTOINCREMENT,message_id INTEGER NOT NULL DEFAULT 0,remote_id INTEGER,document_id TEXT COLLATE BINARY,sender INTEGER,subject_prefix TEXT COLLATE BINARY,subject INTEGER NOT NULL,summary INTEGER,date_sent INTEGER,date_received INTEGER,mailbox INTEGER NOT NULL,remote_mailbox INTEGER,flags INTEGER NOT NULL DEFAULT 0,read INTEGER NOT NULL DEFAULT 0,flagged INTEGER NOT NULL DEFAULT 0,deleted INTEGER NOT NULL DEFAULT 0,size INTEGER NOT NULL DEFAULT 0,conversation_id INTEGER NOT NULL DEFAULT 0,date_last_viewed INTEGER,original_mailbox INTEGER,visible INTEGER,sender_vip INTEGER,encoding INTEGER,content_type INTEGER,sequence_identifier INTEGER DEFAULT 0,external_id TEXT COLLATE BINARY,unique_id INTEGER,content_index_transaction_id INTEGER,list_id_hash INTEGER,journaled INTEGER,flag_color INTEGER);
ALTER TABLE messages RENAME TO messages_old
messages_message_id_mailbox_index
CREATE INDEX %@ ON messages_new(message_id, mailbox);
messages_document_id_index
CREATE INDEX %@ ON messages_new(document_id);
messages_sender_index
CREATE INDEX %@ ON messages_new(sender);
messages_subject_index
CREATE INDEX %@ ON messages_new(subject);
messages_date_received_index
CREATE INDEX %@ ON messages_new(date_received);
messages_mailbox_date_received_index
CREATE INDEX %@ ON messages_new(mailbox, date_received);
messages_mailbox_conversation_id_date_received_index
CREATE INDEX %@ ON messages_new(mailbox, conversation_id, date_received);
messages_remote_mailbox_remote_id_index
CREATE INDEX %@ ON messages_new(remote_mailbox, remote_id);
messages_read_index
CREATE INDEX %@ ON messages_new(read);
messages_flagged_index
CREATE INDEX %@ ON messages_new(flagged);
messages_deleted_date_received_index
CREATE INDEX %@ ON messages_new(deleted, date_received);
messages_conversation_id_mailbox_read_date_received_index
CREATE INDEX %@ ON messages_new(conversation_id, mailbox, read, date_received);
messages_conversation_id_mailbox_flagged_index
CREATE INDEX %@ ON messages_new(conversation_id, mailbox, flagged);
messages_conversation_id_mailbox_deleted_index
CREATE INDEX %@ ON messages_new(conversation_id, mailbox, deleted);
messages_conversation_id_mailbox_sender_date_received_index
CREATE INDEX %@ ON messages_new(conversation_id, mailbox, sender, date_received);
messages_conversation_id_mailbox_flags_index
CREATE INDEX %@ ON messages_new(conversation_id, mailbox, flags);
messages_content_index_transaction_id_deleted_date_received_rowid_index
CREATE INDEX %@ ON messages_new(content_index_transaction_id, deleted, date_received DESC, ROWID);
messages_mailbox_remote_id_sequence_identifier_index
CREATE INDEX %@ ON messages_new(mailbox, remote_id, sequence_identifier);
messages_mailbox_content_index_transaction_id_flags_date_received_index
CREATE INDEX %@ ON messages_new(mailbox, content_index_transaction_id, flags, date_received ASC);
messages_list_id_hash_index
CREATE INDEX %@ ON messages_new(list_id_hash);
messages_date_last_viewed_index
CREATE INDEX %@ ON messages_new(date_last_viewed);
messages_summary_index
CREATE INDEX %@ ON messages_new(summary);
messages_mailbox_visible_date_received_rowid_index
CREATE INDEX %@ ON messages_new(mailbox, visible, date_received DESC, ROWID DESC);
messages_mailbox_deleted_journaled_sender_vip_flags_conversation_id_date_sent_message_id_date_received_rowid_index
CREATE INDEX %@ ON messages_new(mailbox, deleted, journaled, sender_vip, flags, conversation_id, date_sent, message_id, date_received DESC, ROWID DESC);
messages_mailbox_conversation_id_flag_color_date_received_journaled_index
CREATE INDEX %@ ON messages_new(mailbox, conversation_id, flag_color, date_received, journaled);
messages_journaled_conversation_id_date_received_index
CREATE INDEX %@ ON messages_new(journaled, conversation_id, date_received);
messages_message_id_deleted_journaled_read_mailbox_index
CREATE INDEX %@ ON messages_new(message_id, deleted, journaled, read, mailbox);
messages_sender_vip_deleted_journaled_read_message_id_index
CREATE INDEX %@ ON messages_new(sender_vip, deleted, journaled, read, message_id) WHERE (sender_vip = 1 AND journaled = 0 AND deleted = 0 AND read = 0);
messages_journaled_deleted_date_received_index
CREATE INDEX %@ ON messages_new(journaled, deleted, date_received) WHERE (journaled = 1 AND deleted = 0);
messages_deleted_mailbox_date_received_index
CREATE INDEX %@ ON messages_new(deleted, mailbox, date_received);
DROP INDEX IF EXISTS %@;
sender_vip
visible
journaled
flag_color
sequence_identifier
content_index_transaction_id
INSERT INTO messages_new (%@) SELECT %@ FROM messages_old
messages_old
ALTER TABLE messages_new RENAME TO messages
CREATE TABLE IF NOT EXISTS threads (ROWID INTEGER PRIMARY KEY AUTOINCREMENT,scope INTEGER NOT NULL REFERENCES thread_scopes(ROWID) ON DELETE CASCADE,conversation INTEGER NOT NULL REFERENCES conversations(conversation_id) ON DELETE CASCADE,newest_read_message INTEGER REFERENCES messages(ROWID) ON DELETE SET NULL,display_message INTEGER REFERENCES messages(ROWID) ON DELETE SET NULL,date INTEGER NOT NULL,read INTEGER NOT NULL DEFAULT 0,deleted INTEGER NOT NULL DEFAULT 0,flagged INTEGER NOT NULL DEFAULT 0,has_red_flag INTEGER NOT NULL DEFAULT 0,has_orange_flag INTEGER NOT NULL DEFAULT 0,has_yellow_flag INTEGER NOT NULL DEFAULT 0,has_green_flag INTEGER NOT NULL DEFAULT 0,has_blue_flag INTEGER NOT NULL DEFAULT 0,has_purple_flag INTEGER NOT NULL DEFAULT 0,has_gray_flag INTEGER NOT NULL DEFAULT 0,draft INTEGER NOT NULL DEFAULT 0,replied INTEGER NOT NULL DEFAULT 0,forwarded INTEGER NOT NULL DEFAULT 0,redirected INTEGER NOT NULL DEFAULT 0,junk_level_set_by_user INTEGER NOT NULL DEFAULT 0,junk_level INTEGER NOT NULL DEFAULT 0,has_unflagged INTEGER NOT NULL DEFAULT 0,has_attachments INTEGER NOT NULL DEFAULT 0,count INTEGER NOT NULL,journaled INTEGER NOT NULL DEFAULT 0,UNIQUE(scope, conversation) ON CONFLICT ABORT);
threads_scope_date_conversation_index
CREATE INDEX %@ ON threads(scope, date, conversation);
threads_journaled_scope_date_conversation_index
CREATE INDEX %@ ON threads(journaled, scope, date, conversation);
threads_journaled_date_scope_conversation_index
CREATE INDEX IF NOT EXISTS threads_journaled_date_scope_conversation_index ON threads(journaled, date, scope, conversation) WHERE journaled = 1;
DROP TABLE IF EXISTS %@
DELETE FROM %@
DROP INDEX IF EXISTS thread_categories_type_active_user_override_thread_index;
interaction_log
thread_categories
categorization_sender_rules
categorization_conversation_rules
categorization_group_rules
category_active_types
times_viewed
read_later_date
INSERT INTO message_references (message, reference, is_originator) SELECT message_id, reference, IFNULL(is_originator, 0) FROM threads
DROP TABLE IF EXISTS threads
rich_links
title
message_rich_links
rich_link
EDRichLinkPersistence
Unable to insert rich link into rich_links table: %@
Unable to insert rich link with rowID %@ into message_rich_links table
@"EDRichLinkData"16@?0@"NSNumber"8
RichLinkData
mailbox.outbox
com.apple.email.spotlightVerification
LibraryMessageRichLinkDataBecameAvailableNotification
com.apple.email.searchableIndex.%@.%@
state
indexingQueue
dataSource
addIndexItems
batch
DisableSpotlightVerification
==== Searchable Index State ====
  transaction:                    %lld
  active:                         %@ (rc=%lld)
  persistenceAvailable:           %@
  client state fetched:           %@
  coalesce timer fired:           %@
  scheduled processing:           %@
  needs refresh:                  %@
  scheduled refresh:              %@
  needs verification:             %@
  scheduled verification:         %@
  indexing batch size:            %lu
  data source batch size:         %lu
  maximum batch size:             %lu
  data source indexing permitted: %@
  has available indexing budget:  %@
  budgeted time remaining:        %.4fs
  budgeted item count remaining:  %ld
  pending items:                  %lu (%p)
  pre-processing items:           %lu (%p)
  pending removals:               %lu (%p)
  pending domain removals:        %lu (%p)
Indexed Empty Subjects:
Index verification failed for %@ transactions: %@
v32@?0Q8@"EFFuture"16@"NSSet"24
SpotlightState.json
v16@?0@"EDSearchableIndexClientState"8
 (new)
Invalidated items greater than transaction: %@
v24@?0@"NSData"8@"NSError"16
resumeCount
pending
preprocessingItemCount
persistenceAvailable
suspending
already suspended
still resumed
suspend
resuming
already resumed
still suspended
resume
B16@?0@"EDSearchableIndexPendingItem"8
com.apple.email.searchableIndex.dataSourceWorkBlock
@"EDSearchableIndexItem"16@?0@"NSString"8
completion != nil
com.apple.mail.searchableIndex.dataSourceCancelation
Q16@?0Q8
com.apple.email.searchableIndex.indexingBatch
Start Indexing Batch
preprocessing
v28@?0@"EDSearchableIndexClientState"8@"EDSearchableIndexUpdates"16B24
@"<EFFuture>"16@?0@8
@"<EFFuture>"16@?0@"NSError"8
countOfItemsIndexed
elapsedTime
itemsPerSecond
Finished Indexing Batch
@16@?0@"<EDIndexableItem>"8
[%@]
@"CSSearchableItem"16@?0@"NSNull"8
@"EFFuture"16@?0@"<EDIndexableItem>"8
diagnose:com.apple.mobilemail
@"NSNumber"16@?0@"NSDictionary"8
identifier
Spotlight requested that Mail reindex %@ items: %@
Spotlight requested that Mail reindex all items.
B32@?0@"<EDIndexableItem>"8Q16^B24
q24@?0@8@16
@"NSString"16@?0@"<EDIndexableItem>"8
B32@?0@"EDSearchableIndexPendingItem"8Q16^B24
@16@?0@"CSSearchableItem"8
v16@?0@"<EMSearchableIndexQueryBuilder>"8
SnippetHighlighting
v32@?0@"CSSearchableItem"8Q16^B24
No values found.
@"NSArray"8@?0
-[EDSearchableIndex indexMessages:includeBody:indexingType:]
EDSearchableIndex.m
-[EDSearchableIndex markMessagesAsPrinted:]
MonitoredActivityReasonCompacting
MonitoredActivityReasonMoving
MonitoredActivityReasonArchiving
MonitoredActivityReasonDeleting
MonitoredActivityReasonJunking
-[EDSearchableIndex test_tearDown]
<%@: %p> %@ %@
v32@?0@"<NSCopying>"8@"NSSet"16^B24
B32@?0@"NSSet"8@"NSSet"16@"NSSet"24
EDSearchableIndexAttachmentItem.m
Attempting to set unexpected indexing type on EDSearchableIndexAttachmentItem
IndexingBudgetPeriodInSeconds
IndexingBudgetInSeconds
IndexingBudgetNumberOfItemsToIndexOnResume
Budget Period:%lfs (%.1fh) Time:%fs (min:%.1fm) numberOfItemsToIndexOnResume:%ld
com_apple_mail_transaction
yyyy-MM-dd HH:mm:ssZ
<%@: %p> version=%@ date=%@ transaction=%lld
transaction
build
Encrypted
com_apple_mail_addresses
com_apple_mail_links
com_apple_mail_phone_numbers
com_apple_mail_calendar_events
com_apple_mail_tracking_numbers
com_apple_mail_flight_numbers
Message does not have a valid identifier. Please consider using initWithIdentifier:message:bodyData: if you need something special.
-[EDSearchableIndexItem addAttachmentAttributesToAttributeSet:]
EDSearchableIndexItem.m
-[EDSearchableIndexItem fetchIndexableAttachments]
@"CSPerson"16@?0@"NSString"8
v24@?0@"NSArray"8@"NSArray"16
IndexDecryptedMessages
mailboxtype
<null>
hasCompleteContent
hasHeaders
DetectData
TrackingNumber
FlightInformation
-[EDSearchableIndexItem preprocess]
EDSearchableIndexItem has invalid indexingType = EDIndexableItemIndexingTypeAttachment
EDSearchableIndexItem has invalid indexingType = EDIndexableItemIndexingTypeRichLinks
-[EDSearchableIndexManager test_tearDown]
-[EDSearchableIndexManager index]
EDSearchableIndexManager.m
-[EDSearchableIndexManager persistence]
-[EDSearchableIndexManager scheduler]
Done!
@"NSString"16@?0@"<EDPersistedMessage>"8
EDSearchableIndexPendingItem.m
Additional items added to a pending item must have the same identifier
q24@?0@"<EDIndexableItem>"8@"<EDIndexableItem>"16
B16@?0@"<EDIndexableItem>"8
searchable_rebuild
searchable_message_tombstones
searchable_attachments
searchable_rich_links
searchable_data_detection_results
transaction_id
data_detection_result
com.apple.mail.searchableIndex.lastProcessedAttachmentIDKey
message_body_indexed
reindex_type
attachment_id
rich_link_id
-[EDSearchableIndexPersistence messagesWhere:sortedBy:limit:]
EDSearchableIndexPersistence.m
-[EDSearchableIndexPersistence searchableIndexItemsFromMessages:type:]
-[EDSearchableIndexPersistence attachmentItemMetadataForAttachmentID:messagePersistentID:name:mailboxID:result:]
-[EDSearchableIndexPersistence verificationDataSamplesFromMessageIDTransactionIDDictionary:]
-[EDSearchableIndexPersistence additionalFilterClause]
Failed to query searchable_rebuild table to establish if it still has data
Q8@?0
v32@?0@"EDSearchableIndexRichLinkItem"8Q16^B24
((messages.searchable_message IS NULL OR messages.ROWID IN (SELECT message_id FROM searchable_messages WHERE searchable_messages.transaction_id = %ld)) AND likely(messages.ROWID NOT IN (%@)))
searchable_rebuild.rowid
((messages.ROWID IN (SELECT message_id FROM searchable_messages WHERE (searchable_messages.reindex_type = 1 OR searchable_messages.reindex_type = 2) AND searchable_messages.reindex_type != 0)) AND likely(messages.ROWID NOT IN (%@)))
messages.global_message_id IN (SELECT data_detection_results.global_message_id FROM data_detection_results LEFT OUTER JOIN searchable_data_detection_results ON data_detection_results.ROWID = searchable_data_detection_results.data_detection_result WHERE searchable_data_detection_results.data_detection_result IS NULL) AND likely(messages.ROWID NOT IN (%@))
%@ AND %@
SELECT transaction_id, reindex_type FROM searchable_messages WHERE message_id = %@
Searching for reindex type
UPDATE OR IGNORE searchable_messages SET transaction_id = %lld WHERE message_id IN (%@)
UPDATE OR IGNORE searchable_messages SET reindex_type = %lld WHERE transaction_id != %lld AND message_id IN (%@)
Does not support re-indexing of attachment types. Will need to be implemented if needed.
Does not support re-indexing of rich link types. Will need to be implemented if needed.
Assigning the re-indexing type for a set of identifiers
SELECT attachment_id FROM searchable_attachments WHERE message_id IN (%@)
searching for removed attachment identifiers
Purging %@
Clearing searchable_message column
INSERT OR IGNORE INTO searchable_rebuild (message_id) SELECT rowid FROM messages WHERE searchable_message IS NULL ORDER BY date_received DESC
could not populate searchable_rebuild table
DELETE FROM %@ WHERE transaction_id > %llu
Invalidating %@
UPDATE searchable_message_tombstones SET transaction_id = NULL WHERE transaction_id > %lld
Invalidating searchable_message_tombstones
SELECT rowid FROM %@ WHERE transaction_id IN (%@)
Failed to get messages for transaction ids in %@
DELETE FROM %@ WHERE transaction_id IN (%@)
Failed to delete messages for items in %@
DELETE FROM searchable_attachments WHERE message_id = %@
Removing message identifier from searchable_attachments
SELECT DISTINCT transaction_id FROM searchable_messages
Searching for distinct transaction identifiers
Adding to searchable_messages index
INSERT OR REPLACE INTO searchable_messages (message_id, message, transaction_id, reindex_type, message_body_indexed) VALUES (?, ?, %lld, %ld, ?)
@"NSArray"24@?0@"NSNumber"8@"NSNumber"16
Deleting from searchable_rebuild table
INSERT OR REPLACE INTO searchable_messages (message_id, message, transaction_id, reindex_type, message_body_indexed) VALUES (?, ?, %lld, %ld, COALESCE((SELECT message_body_indexed FROM searchable_messages WHERE message_id = ?), ?))
INSERT OR REPLACE INTO searchable_message_tombstones (type, identifier) VALUES (%lld, ?)
Adding to searchable_message_tombstones index
DELETE FROM searchable_message_tombstones WHERE type = %lld AND identifier IN (%@)
UPDATE searchable_message_tombstones SET transaction_id = %lld WHERE type = %lld AND identifier IN (%@)
Updating or deleting searchable_message_tombstones
DELETE FROM searchable_message_tombstones WHERE transaction_id < %lld
Purging searchable_message_tombstones
SELECT identifier FROM searchable_message_tombstones WHERE transaction_id IS NULL AND type = %lld
searching for tombstone identifiers
DELETE FROM searchable_messages WHERE message_id IN (%@)
Removing items from searchable_messages
DELETE FROM searchable_attachments WHERE attachment_id IN (%@)
Removing items from searchable_attachments
SELECT message_id FROM searchable_messages WHERE message is NULL
searching for removed identifiers
SELECT message_id, transaction_id FROM searchable_messages WHERE reindex_type = 0 AND message IS NOT NULL AND message_id > %lu LIMIT %lu
Searching for random sample of messages to verify for spotlight integrity
SELECT ma.ROWID, m.ROWID, ma.mime_part_number, ma.name, m.mailbox FROM messages AS m LEFT OUTER JOIN message_attachments AS ma ON (ma.global_message_id = m.global_message_id) LEFT OUTER JOIN searchable_attachments AS s ON (ma.ROWID = s.attachment_id) WHERE ma.ROWID > %lld AND s.attachment_id IS NULL AND ma.attachment IS NOT NULL ORDER BY m.ROWID
Searching for attachments to index
SELECT ma.ROWID, m.ROWID, ma.mime_part_number, ma.name, m.mailbox FROM messages AS m LEFT OUTER JOIN message_attachments AS ma ON (ma.global_message_id = m.global_message_id) LEFT OUTER JOIN searchable_attachments AS s ON (ma.ROWID = s.attachment_id) WHERE m.ROWID = %d AND s.attachment_id IS NULL AND ma.attachment IS NOT NULL
Searching for attachment data for message identifier
v20@?0@"EDSearchableIndexAttachmentItemMetadatum"8B16
SELECT attachment FROM %@ WHERE message IN (%@)
get attachment for messageid
DELETE FROM %@ WHERE message IN (%@)
SELECT attachment FROM %@ WHERE attachment IN (%@)
DELETE FROM %@ WHERE ROWID IN (%@)
SELECT attachment_id FROM searchable_attachments WHERE attachment is NULL
SELECT attachment_id FROM searchable_attachments WHERE transaction_id in (%@)
SELECT m.ROWID, mr.rich_link, m.mailbox, r.title, r.url FROM message_rich_links AS mr LEFT OUTER JOIN messages AS m ON (m.global_message_id = mr.global_message_id) LEFT OUTER JOIN rich_links AS r ON (r.ROWID = mr.rich_link) LEFT OUTER JOIN searchable_rich_links AS s ON (m.ROWID = s.message_id) WHERE s.rich_link_id IS NULL ORDER BY m.ROWID
%@_%@
Searching for rich links requiring indexing
v20@?0@"EDSearchableIndexRichLinkItemMetadatum"8B16
SELECT m.global_message_id, mr.rich_link FROM %@ AS mr  LEFT OUTER JOIN messages AS m ON (m.global_message_id = mr.global_message_id) WHERE m.ROWID IN (%@)
Could not find rich links to remove for messageIDs
DELETE FROM %@ WHERE global_message_id IN (%@)
Removing unexpected rich links from message_rich_links table
SELECT rich_link FROM %@ WHERE rich_link IN (%@)
Removing unexpected rich links from rich_links table
v16@?0@"<EDSearchableIndexRichLinkItemMetadatumBuilder>"8
-[EDSearchableIndexPersistence allMailboxIdentifiersForMessage:result:]
INSERT OR REPLACE INTO searchable_attachments (attachment_id, attachment, message_id, transaction_id) VALUES (?, ?, ?, %lld)
Adding to searchable_attachments
INSERT OR REPLACE INTO searchable_rich_links (rich_link, message_id, transaction_id) VALUES (?, ?, %lld)
Adding to searchable_rich_links
Storing searchable data detection results
_kMDItemRichLinkID
kMDItemRichLinkTitle
_kMDItemRichLinkURL
com.apple.email.searchableIndex.scheduler
activityType
deferred
budgeted
maintenance
com.apple.email.searchableIndex.scheduler.budgeted
com.apple.email.searchableIndex.scheduler.maintenance
.indexingStateQueue
EDSearchableIndexScheduler.m
Attempting to find a criteria builder block indexing for an unsupported activity type: %@
Attempting to register unsupported activity type: %@
Enabled indexing.
Stopped indexing.
v32@?0@"NSString"8@"NSObject<OS_xpc_object>"16^B24
Indexing budget exhausted.
budgetedTimeRemaining
budgetedItemCountRemaining
maintenanceIndexingTime
extraIndexingTime
@"NSString"16@?0@"EDSearchableIndexVerificationData"8
%@ = '%@'
<%@: %p> %lu added items, %lu removed items, %lu removed domains
kEDSearchableIndexVerifierErrorDomain
kDefaultsKeyLastVerifiedMessageID
v32@?0@"NSNumber"8@"EDSearchableIndexVerificationData"16^B24
EDSearchableIndexPostFakeCorruptSearchableIndexErrors
FAKED: %@
v32@?0@"NSNumber"8@"NSString"16^B24
row:%@ cid:%@
Searchable Index Verification failed
Searchable Index verification found missing rowids: %@
v24@?0@"NSString"8@"NSArray"16
%@=*
DROP INDEX IF EXISTS searchable_messages_message_id_reindex_type_index;
Unable to drop index searchable_messages_message_id_reindex_type_index index to searchable_messages
Unable to add index searchable_messages_reindex_type_message_id_index to searchable_messages
EDSenderPersistence.m
-[EDSenderPersistence test_tearDown]
maxDate
@"NSString"16@?0@"<ECEmailAddressConvertible>"8
<%@: %p>
v32@?0@"NSNumber"8@"NSMutableArray"16^B24
Sender must have valid database ID
@"NSNumber"16@?0@"<ECEmailAddressConvertible>"8
@16@?0@"NSArray"8
v32@?0@"<ECEmailAddressConvertible>"8@"NSNumber"16^B24
@"<ECEmailAddressConvertible>"16@?0@"NSNumber"8
@"<ECEmailAddressConvertible>"8@?0
Blocking
Unblocking
address_id
q24@?0@"<ECEmailAddressConvertible>"8@"<ECEmailAddressConvertible>"16
v32@?0@"<ECEmailAddressConvertible>"8@"NSArray"16^B24
SELECT count(*) AS associations FROM sender_addresses WHERE sender = :duplicate_sender
:duplicate_sender
associations
sentTo
blocked
EDSenderRepository.persistenceScheduler
send_later
com.apple.email.EDSendLaterPersistence.writeQueue
Unable to insert send_later message with ID: %lld into send_later table
EDSendLaterUpdateController.alarm
EDSendLaterUpdateControllerNextAlarmDate
com.apple.EmailDaemon.SendLaterUpdateController.messageScheduler
v16@?0@"EMMessageDeliveryResult"8
EDServer.m
-[EDServer test_tearDown]
com.apple.private.email
com.apple.mobilemail.mailservices
server_messages
server_labels
server_message
-[EDServerMessagePersistenceFactory init]
EDServerMessagePersistence.m
Couldn't get mailboxID for URL %@
EDServerMessagePersistenceFactory couldn't map mailboxURL
mailboxID != EMDatabaseIDUndefined
-[EDServerMessagePersistence init]
SELECT count() FROM server_messages WHERE (mailbox = %lld)
Executing count query
SELECT count() FROM server_messages WHERE (mailbox = %lld) AND (read = 0)
Executing unread count query
SELECT count() FROM server_messages WHERE (mailbox = %lld) AND (deleted = 0)
SELECT MAX(remote_id) FROM server_messages WHERE (mailbox = %lld)
Executing max uid query
SELECT MIN(remote_id) FROM server_messages WHERE (mailbox = %lld)
Executing min uid query
 LIMIT %llu
@"NSIndexSet"24@?0@"NSIndexSet"8Q16
UPDATE server_messages SET remote_id = (- remote_id) WHERE (mailbox = %lld)
Failed to clear UIDs on server_message in mailbox (%lld).
SELECT message AS message_row_id FROM server_messages WHERE mailbox = %lld AND remote_id < 0
message_row_id
DELETE FROM server_messages WHERE server_messages.mailbox = %lld AND server_messages.remote_id < 0
SELECT server_messages.ROWID, server_messages.message, server_messages.mailbox, server_messages.read, server_messages.deleted, server_messages.replied, server_messages.flagged, server_messages.draft, server_messages.forwarded, server_messages.redirected, server_messages.junk_level_set_by_user, server_messages.junk_level, server_messages.flag_color, server_messages.remote_id, messages.message_id AS message_id_header, messages.ROWID AS message_row_id FROM messages INNER JOIN server_messages ON messages.ROWID = server_messages.message WHERE (server_messages.mailbox = %lld AND messages.message_id IN (%@) AND server_messages.remote_id < 0)
message_id_header
UPDATE server_messages SET remote_id = :uid WHERE ROWID = :rowid
UPDATE messages SET remote_id = :uid WHERE ROWID = :rowid
:rowid
:uid
ROWID, message, mailbox, read, deleted, replied, flagged, draft, forwarded, redirected, junk_level_set_by_user, junk_level, flag_color, remote_id
 DESC
SELECT %@ FROM server_messages WHERE (mailbox = %lld) AND (%@) ORDER BY remote_id%@%@
v16@?0@"<ECMessageFlagsBuilder>"8
SELECT label FROM server_labels WHERE server_message = ?
Fetching server labels
INSERT INTO server_messages (message, mailbox, read, deleted, replied, flagged, draft, forwarded, redirected, junk_level_set_by_user, junk_level, flag_color, remote_id) VALUES (:message, :mailbox, :read, :deleted, :replied, :flagged, :draft, :forwarded, :redirected, :junk_level_set_by_user, :junk_level, :flag_color, :remote_id)
:remote_id
:read
:deleted
:replied
:flagged
:draft
:forwarded
:redirected
:junk_level_set_by_user
:junk_level
:flag_color
Adding server message
UPDATE server_messages SET message = %lld WHERE (mailbox = %lld) AND (remote_id = %@)
updating server message
DELETE FROM server_messages WHERE (mailbox = %lld) AND (remote_id in (%@))
removing server messages
DELETE FROM server_messages WHERE mailbox = %llu
removing all server messages
read = %d
deleted = %d
replied = %d
flagged = %d
draft = %d
forwarded = %d
redirected = %d
junk_level_set_by_user = %d
junk_level = %d
flag_color = %d
UPDATE server_messages SET %@ WHERE (mailbox = %lld) AND (remote_id in (%@))
Setting flags
UPDATE server_messages SET 
read = 1
read = 0
, deleted = 1
, deleted = 0
, replied = 1
, replied = 0
, flagged = 1
, flagged = 0
, draft = 1
, draft = 0
, forwarded = 1
, forwarded = 0
, redirected = 1
, redirected = 0
, junk_level = %d
, flag_color = %d
 WHERE (mailbox = %lld) AND (remote_id = %@)
@"NSString"16@?0@"EFPair"8
(? <= remote_id AND remote_id < ?)
 OR 
SELECT remote_id FROM server_messages WHERE mailbox = ? AND (%@) ORDER BY remote_id
SELECT ROWID FROM server_messages WHERE remote_id = ? AND mailbox = ? LIMIT 1
Getting server message ID
INSERT OR IGNORE INTO server_labels (server_message, label) VALUES (?, ?)
Adding server label
DELETE FROM server_labels WHERE server_message = ? AND label = ?
Removing server label
ef_quotedSQLEscapedString
v32@?0{_NSRange=QQ}8^B24
(remote_id BETWEEN %lu AND %lu)
(remote_id IN (
%llu:%llu
DROP TABLE searchable_attachments
Removing searchable_attachments table
INSERT INTO properties  (key, value) VALUES ("NeedToMigrateAttachments",1)
Setting need to upgrade property
Unable to create %@
Unable to delete table %@
Unable to insert messageID %@ into message_attachments table
Unable to insert attachment hash %@ into attachments table
@"NSString"16@?0@"SGMailIntelligenceSaliency"8
v40@?0@"NSString"8{_NSRange=QQ}16^B32
cloudKey
mergeType
customMergeBlock
EDSyncableSettings
EDSyncableSettings-Defaults
v36@?0@"NSString"8@"NSString"16B24@28
EDSyncableSettings.m
No merge block found for default %@
v36@?0B8@"NSString"12@"NSString"20@28
v32@?0@"NSString"8@"NSDictionary"16^B24
v16@?0@"NSMutableDictionary"8
v20@?0@8B16
v16@?0@"NSDictionary"8
device to cloud
cloud to device
table_metadata
table_name
largest_deleted_rowid
Updating largest_deleted_rowid for %@
Getting largest_deleted_rowid for %@
EDThreadMigrator-%@
v16@?0@"_EDThreadMigrationState"8
Stopping migration
Skipping delete finalization
Skipping finalization
deletion
migration
delete 
@"EDPersistenceForeignKeyPlaceholder"40@?0@"EFSQLTableSchema"8@"NSString"16@"NSString"24Q32
@"EDPersistenceForeignKeyPlaceholder"32@?0@"EFSQLTableSchema"8@"NSString"16@"NSString"24
@"EDPersistenceAssociationPlaceholder"32@?0@"EFSQLTableSchema"8@"NSString"16@"NSString"24
com.apple.EmailDaemon.EDThreadPersistence.consistencyCheckScheduler
com.apple.EmailDaemon.EDThreadPersistence.threadRecomputationScheduler
v32@?0@"NSNumber"8@"EMThreadScope"16^B24
EDThreadPersistence.m
-[EDThreadPersistence test_tearDown]
v24@?0@"EMThreadObjectID"8^B16
no senders
 and no recipients
no recipients
Failed to get thread with objectID: %@
Precomputed thread - no subject
Precomputed thread - no sender
no sender on change
@"EMMailbox"16@?0@"EMMailboxObjectID"8
@"NSNumber"16@?0@"EMThreadObjectID"8
B32@?0@"<NSCopying>"8Q16Q24
Precomputed thread (recoverable) - 
@"EMThreadScope"16@?0@"EMThreadObjectID"8
v16@?0@"_EDThreadPersistence_ThreadMessages"8
FollowUp
v40@?0@"NSNumber"8@"EMThreadScope"16@"EMMailboxScope"24^B32
Mailbox scope should have exactly one type
v32@?0@"EMThreadScope"8@"NSNumber"16^B24
Mailbox scope should have exactly one mailbox
Thread persistence doesn't support exclusion-based mailbox scopes
journaled 
v32@?0q8@"EMThreadObjectID"16@"NSArray"24
B24@?0@"NSPredicate"8@"EMMessage"16
B16@?0@"_EDWrappedMessage"8
Failed to find threads after sender buckets change
dateReceived
@"NSNumber"16@?0@"_EDWrappedMessage"8
-fake-message-id
Mailbox scope for pre-computed threads should never be for exclusion.
@"<EFSQLValueExpressable>"16@?0@"NSPredicate"8
@"_EDWrappedMessage"16@?0@"EMMessage"8
v32@?0@"EMThread"8@"NSArray"16^B24
B24@?0@"EDPersistenceDatabaseConnection"8@"EFSQLSelectStatement"16
No mailbox database ID for migrating thread scope
v32@?0q8@"NSDate"16Q24
Pre-computed thread scope should have exactly one mailbox or mailbox type
thread scope DB ID: %lld
conversation ID: %lld
@"NSString"16@?0@"_EDWrappedMessage"8
wrapped messages: {%@}(count: %u)
INSERT OR IGNORE INTO threads (  scope,   conversation,   newest_read_message,   display_message,   date,   display_date,   read_later_date,   read,   flagged,   has_red_flag,   has_orange_flag,   has_yellow_flag,   has_green_flag,   has_blue_flag,   has_purple_flag,   has_gray_flag,   draft,   replied,   forwarded,   redirected,   junk_level_set_by_user,   junk_level,   has_unflagged,   has_attachments,   count,   journaled ) VALUES (  :scope,   :conversation_id,   :newest_read_message,   :display_message,   :date,   :display_date,   :read_later_date,   :read,   :flagged,   :has_Red_flag,   :has_Orange_flag,   :has_Yellow_flag,   :has_Green_flag,   :has_Blue_flag,   :has_Purple_flag,   :has_Gray_flag,   :draft,   :replied,   :forwarded,   :redirected,   :junk_level_set_by_user,   :junk_level,   :has_unflagged,   :has_attachments,   :count,   :journaled );
INSERT OR REPLACE INTO threads (  scope,   conversation,   newest_read_message,   display_message,   date,   display_date,   read_later_date,   read,   flagged,   has_red_flag,   has_orange_flag,   has_yellow_flag,   has_green_flag,   has_blue_flag,   has_purple_flag,   has_gray_flag,   draft,   replied,   forwarded,   redirected,   junk_level_set_by_user,   junk_level,   has_unflagged,   has_attachments,   count,   journaled ) VALUES (  :scope,   :conversation_id,   :newest_read_message,   :display_message,   :date,   :display_date,   :read_later_date,   :read,   :flagged,   :has_Red_flag,   :has_Orange_flag,   :has_Yellow_flag,   :has_Green_flag,   :has_Blue_flag,   :has_Purple_flag,   :has_Gray_flag,   :draft,   :replied,   :forwarded,   :redirected,   :junk_level_set_by_user,   :junk_level,   :has_unflagged,   :has_attachments,   :count,   :journaled );
:scope
:newest_read_message
:display_message
:date
:display_date
:read_later_date
:has_Red_flag
:has_Orange_flag
:has_Yellow_flag
:has_Green_flag
:has_Blue_flag
:has_Purple_flag
:has_Gray_flag
:has_unflagged
:has_attachments
:count
:journaled
INSERT INTO threads (  scope,   conversation,   date,   display_date,   read_later_date,   count,   journaled,   has_unflagged,   has_attachments,   read,   flagged,   draft,   replied,   forwarded,   redirected,   junk_level_set_by_user,   junk_level,   has_red_flag,   has_orange_flag,   has_yellow_flag,   has_green_flag,   has_blue_flag,   has_purple_flag,   has_gray_flag ) VALUES (  :scope,   :conversation_id,   :date,   :display_date,   :read_later_date,   (SELECT count(DISTINCT ifnull(message_id, ROWID || '-fake-message-id')) FROM temp_thread_scope_message WHERE conversation_id = :conversation_id),   :journaled,   :has_unflagged,   :has_attachments,   :read,   :flagged,   :draft,   :replied,   :forwarded,   :redirected,   :junk_level_set_by_user,   :junk_level,   :has_Red_flag,   :has_Orange_flag,   :has_Yellow_flag,   :has_Green_flag,   :has_Blue_flag,   :has_Purple_flag,   :has_Gray_flag ) ON CONFLICT (scope, conversation) DO UPDATE SET   date = max(date, excluded.date),   display_date = max(display_date, excluded.display_date),   read_later_date = max(read_later_date, excluded.read_later_date),   count = excluded.count,   journaled = journaled OR excluded.journaled,   has_attachments = has_attachments OR excluded.has_attachments,   has_attachments = has_attachments OR excluded.has_attachments,   read = read AND excluded.read,   flagged = flagged OR excluded.flagged,   draft = draft OR excluded.draft,   replied = replied OR excluded.replied,   forwarded = forwarded OR excluded.forwarded,   redirected = redirected OR excluded.redirected,   junk_level_set_by_user = junk_level_set_by_user OR excluded.junk_level_set_by_user,   junk_level = min(junk_level, excluded.junk_level),   has_red_flag = has_red_flag OR excluded.has_red_flag,   has_orange_flag = has_orange_flag OR excluded.has_orange_flag,   has_yellow_flag = has_yellow_flag OR excluded.has_yellow_flag,   has_green_flag = has_green_flag OR excluded.has_green_flag,   has_blue_flag = has_blue_flag OR excluded.has_blue_flag,   has_purple_flag = has_purple_flag OR excluded.has_purple_flag,   has_gray_flag = has_gray_flag OR excluded.has_gray_flag WHERE count != excluded.count;
SELECT ROWID FROM threads WHERE scope = :scope AND conversation = :conversation_id;
v16@?0@"_EDWrappedMessage"8
Unable to find display message
thread DB ID: %lld
%u wrapped messages: {%@}
UPDATE OR IGNORE threads SET  newest_read_message = :newest_read_message WHERE   rowid = :thread AND   :date > (SELECT date_received FROM temp_persisted_messages WHERE temp_persisted_messages.ROWID = threads.newest_read_message);
:thread
SELECT   (SELECT date_received FROM temp_persisted_messages    WHERE temp_persisted_messages.ROWID = threads.newest_read_message),   (SELECT date_received FROM temp_persisted_messages    WHERE temp_persisted_messages.ROWID = threads.display_message) FROM threads WHERE threads.ROWID = :thread;
v32@?0@"_EDWrappedMessage"8Q16^B24
UPDATE OR IGNORE threads SET   display_message = :display_message WHERE ROWID = :thread ;
UPDATE OR IGNORE threads SET   display_message = threads.newest_read_message WHERE threads.ROWID = :thread ;
INSERT OR IGNORE INTO thread_mailboxes (thread, mailbox) VALUES (:thread, :mailbox);
SELECT temp_persisted_messages.sender, temp_persisted_messages.date_received FROM temp_persisted_messages;
INSERT INTO thread_senders (  thread,   address,   date ) VALUES (  :thread,   :address,   :date ) ON CONFLICT (thread, address) DO UPDATE SET   date = max(date, excluded.date) ;
:address
v32@?0@"NSNumber"8@"NSDate"16^B24
SELECT address FROM thread_senders WHERE thread == :thread AND priority == 1;
SELECT sender FROM temp_persisted_messages WHERE ROWID IN (SELECT display_message FROM threads WHERE ROWID == :thread);
UPDATE thread_senders SET priority = 0 WHERE thread == :thread AND priority == 1;
UPDATE thread_senders SET priority = 1 WHERE thread == :thread AND address == :address;
SELECT recipients.address, temp_persisted_messages.date_received FROM recipients JOIN temp_persisted_messages ON recipients.message = temp_persisted_messages.ROWID WHERE recipients.type = :recipients_type;
:recipients_type
INSERT INTO thread_recipients (  thread,  address,  type,  date,  priority) VALUES (  :thread,  :address,  :type,  :date,  0) ON CONFLICT (thread, type, address) DO UPDATE SET   date = max(date, excluded.date) ;
:type
SELECT ROWID FROM temp_thread_scope_message WHERE (conversation_id = :conversation_id)
CREATE TEMP VIEW temp_persisted_messages AS SELECT * FROM messages LIMIT 0;
-[_EDThreadPersistence_PersistedThread _ensureTempMessagesView]_block_invoke
EDThreadPersistence_ThreadMessages.m
CREATE TEMP VIEW temp_persisted_messages AS SELECT * FROM messages WHERE ROWID IN (%@);
CREATE TEMP VIEW
-[_EDThreadPersistence_PersistedThread _ensureTempMessagesView]
success
DROP VIEW IF EXISTS temp_persisted_messages;
-[_EDThreadPersistence_PersistedThread dropTemporaryView]_block_invoke
CREATE TEMP VIEW temp_thread_scope_message AS SELECT * FROM messages WHERE %@;
-[_EDThreadPersistence_ThreadScope _ensureTempScopeView]
DROP VIEW IF EXISTS temp_thread_scope_message;
-[_EDThreadPersistence_ThreadScope dropTemporaryView]
-[_EDThreadPersistence_StatementCache preparedStatementForQueryString:]
statement
-[_EDThreadPersistence_SQLHelper executeUpdateSQL:bindings:errorHandler:]
-[_EDThreadPersistence_SQLHelper executeUpsertSQL:bindings:errorHandler:]
self.connection.lastInsertedDatabaseID == 0
-[_EDThreadPersistence_SQLHelper executeSelectSQL:bindings:errorHandler:rowHandler:]
-[_EDThreadPersistence_SQLHelper executeSQL:indexBindings:errorHandler:]
-[_EDThreadPersistence_SQLHelper executeSQL:errorHandler:]
v12@?0i8
v16@?0@"_EDThreadQueryUnderlyingHandlers"8
EDThreadQueryHandler.m
-[EDThreadQueryHandler test_tearDown]
v16@?0@"<EDMessageRepositoryQueryHandler>"8
com.apple.EmailDaemon.EDThreadScopeManager.evictionScheduler
v32@?0@"EMThreadScope"8@"_EDThreadScopeInfo"16^B24
B32@?0@"EMThreadScope"8@"_EDThreadScopeInfo"16^B24
v36@?0q8@"EMThreadScope"16B24@"NSDate"28
q24@?0@"NSNumber"8@"NSNumber"16
B24@?0@"EMThreadScope"8@"_EDThreadScopeInfo"16
@"NSNumber"16@?0@"_EDThreadScopeInfo"8
%lld%@, last viewed: %@
, needs update
%@-%@
com.apple.mail.NNMKCrashDetectionService.%@
com.apple.mobilemail.UbiquitousConversationManager
B32@?0@"NSString"8@16^B24
v32@?0@8@"NSDictionary"16^B24
com.apple.EmailDaemon.EDUpdateThrotller.resumeClientScheduler
%@ %ld
UserNotificationMailboxCutoffs
com.apple.mail.vipsenders
VIP_
VIPs.plist
Name
EmailAddresses
com.apple.email.edvipmanager
com.apple.email.edvipmanager.notifications
-[EDVIPManager getAllVIPsWithCompletion:]
EDVIPManager.m
v32@?0@"NSString"8@"EMVIP"16^B24
Modification of VIPs only supported when syncing is enabled
B32@?0@"NSString"8@"EMVIP"16^B24
B32@?0@"NSString"8Q16^B24
com.apple.mail.VIP.count
vipCount
notificationsEnabled
com.apple.EDVisibleMessagesReloadRegistry.notify
com.apple.EDVisibleMessagesReloadRegistry.observation
link
calendarEvent
phoneNumber
misc
EDWebContentParser
com.apple.email.EDWebContentParser
EDWebContentParser.m
-[EDWebContentParser test_tearDown]
EmailCore
wkbundle
PlugIns
RichLinks
MetadataMessageHandler
LogHandler
Current thread must be main
FindRichLinkMetadata
x-apple-mail-parser
v16@?0@"EDWebContentParserState"8
text/html
WKWebViewConfiguration
/System/Library/Frameworks/WebKit.framework/WebKit
### Failed to Soft Linked: /System/Library/Frameworks/WebKit.framework/WebKit
_WKProcessPoolConfiguration
WKProcessPool
WKUserContentController
WKWebView
_WKRemoteObjectInterface
LPLinkMetadata
Class getLPLinkMetadataClass(void)_block_invoke
Unable to find class %s
void *LinkPresentationLibrary(void)
com.apple.email.updateWidget
kLastWidgetUpdateDefaultsKey
kNumberOfWidgetUpdatesDefaultsKey
flagChanged
messageAdded
daemonLaunched
CHSTimelineController
/System/Library/PrivateFrameworks/ChronoServices.framework/ChronoServices
### Failed to Soft Linked: /System/Library/PrivateFrameworks/ChronoServices.framework/ChronoServices
com.apple.email.EphemeralSenderList
MUIBucketEphemeralSenderListWriteNotification
MUIBucketEphemeralSenderListWriteLocation
MUIBucketEphemeralSenderList
com.apple.MUIBucketEphemeralSenderList.writeScheduler
com.apple.MUIBucketEphemeralSenderList.contentProtectionQueue
@16@?0@"<ECEmailAddressConvertible>"8
v16@?0@"NSMutableSet"8
v40@?0r^v8{_NSRange=QQ}16^B32
emailAddress
userInitiated
updatedDeviceIdentifier
com.apple.mail.senders
MUIBucketSenderCloudStorage
MUIBucketSenderCloudStorage.m
SendersCloudStorageUpgradeStatusDefault
SendersCloudStorageUpgradeResetCloudSenders
MUIBucketSendersCloudStorageUpgrader
com.apple.email.MUIBucketSendersCloudStorageUpgrader
MUIBucketUnscreenedSendersQueryHandler
@"NSString"16@?0@"EMObjectID"8
important
importantProbability
EDImportantMLModel
mlmodelc
v24@?0@"MLModel"8@"NSError"16
header_key_filtered
promo
promoProbability
EDPromotionMLModel
Registered EMAccountRepositoryObserver<%p> - Current observing accounts: Count: %lu
 %@ 
Returning %lu accounts
Handling accounts added: %@
Handling accounts removed: %@
Handling accounts changed: %@
Inserted attachment: %{public}lld hash: %{public}@ into attachments table
Inserted attachment: %{public}@ for globalMessageID: %lld into message_attachments table
Updated row with attachment reference: %{public}@, globalMessageID: %lld, mimePart: %{public}@
Found attachments %{public}@ for globalMessageIDs %@
Found globalMessageIDs %{public}@ for attachment %{public}@
Removing attachments %@ from the attachments table
Failed to check if message attachment identifier and attachmennt identifier exist for messageID %lld mimePartNumber: %{public}@ with error %{public}@
%{public}@ attachment identifier %lld for messageID %lld mimePartNumber: %{public}@
Failed to check if message attachment identifier and attachmennt identifier exist for messageID %lld remoteURL with error %{public}@
%{public}@ attachment identifier %lld for messageID %lld and remoteURL@
Found attachments metadata %{public}@ for message %lld
Found attachment metadata %{public}@ for hash %{public}@
Failed to fetch attachment metadata for message %lld mime part %{public}@ error %{public}@
Found attachment metadata for message %lld mime part %{public}@ attachmentID %{public}@
Failed to fetch attachment metadata for message %lld remoteURL %@ error %{public}@
Found attachment metadata for message %lld remoteURL %@ attachmentID %{public}@
Failed to fetch attachment metadata for messageAttachmentID %lld error %{public}@
Found attachment metadata for messageAttachmentID %lld attachmentID %{public}@
Created new attachment filename %@
Couldn't read data for attachment URL %@, device may be locked
Created hash %{public}@ for attachment for globalMessageID %lld MIME part %{public}@
Couldn't get file attributes for attachment URL %@
Checking if the attachment hash already exists in the attachments table
No existing attachment found. Adding to the attachments table
Persisting attachment %lld %@ to disk at directory %@
Persisted attachment %lld %@ to disk
Error persisting attachment %@ to disk attachmentID %lld
Found the attachment in the attachments table. Checking if it exists on disk at %@
No existing attachment found on disk. Writing attachment %@ to disk
Persisted attachment %@ to disk with existing metadata
Error persisting attachment %@ to disk with existing metadata %{public}@
Found the attachment on disk. No write needed
Checking if we need to update or insert the attachment metadata in the message_attachments table for attachment: %@
Update the message_attachments table with the updated attachment ID: %@
Create a new entry into the message_attachments table with attachment ID: %@
Checking to see if the attachment metadata already exists in the message_attachments table
attachmentMetadata %{public}@ is missing either a mimePartNumber or a remoteURL. Aborting attachment write
Found both the attachment metadata and the attachment in the message_attachments and attachments table. No insertion needed.
Persisting regular file attachment
Persisting archive attachment
Persisting archive attachment from temp directory %@
Failed to write archive attachment %@ to %@
Trying to insert an attachment entry with no global message ID
Trying to insert an attachment entry with no name
Trying to insert an attachment entry neither a mime part number or remoteURL
Check the message_attachments table if attachment with message ID %lld MIME part %{public}@ exists
Attachment metadata doesn't exist in message_attachments table for messageID: %lld mime part number: %{public}@. Persisting into the message_attachments table
Attachment metadata already exists in message_attachments table for globalMessageID: %lld mime part number: %{public}@
Removing attachments to delete %@ from the attachments table
Removing attachments to delete %@ from the filesystem
Deleting attachment directory: %{public}@
Failed to delete attachment directory: %{public}@
Fetching attachment URL for globalMessageID %lld MIME part number %{public}@ at base path %@
Found attachment URL %{public}@ for globalMessageID %lld MIME part number %{public}@ at base path %@
Could not find attachment URL for globalMessageID %lld MIME part number %{public}@ at base path %@
Fetching attachment URL for globalMessageID %lld remoteURL %@ at base path %@
Found attachment URL %{public}@ for globalMessageID %lld remoteURL %@ at base path %@
Could not find attachment URL for globalMessageID %lld remoteURL %@ at base path %@
Fetching attachment URL for messageAttachmentID %lld at base path %@
Found attachment URL %@ for messageAttachmentID %lld at base path %@
Error figuring out if %{public}@ already exists, %{public}@
Attachment already exists at %{public}@. Overwriting with current attachment %@
No filename set on the file wrapper attachment %{public}@ for write to %{public}@
Failed to create attachment directory at %{public}@, %{public}@
Persisting attachment to filesystem: %{public}@
Error occurred attempting to compress file: %{public}@: %{public}@
Failed to write attachment file wrapper %@ to %{public}@, %{public}@
Duplicate globalMessageIDs found %{public}@ for attachment %{public}@
Found persisted messages %{public}@ for attachment %{public}@
Hook called persistenceWillDeleteMessages to prepare attachment deletion for messages %{public}@
Hook called persistenceIsDeletingMessages to delete attachments for messages %{public}@
Scheduling initial download
Unable to fetch dkim headers from headerData. DKIMVerificationContext %@ error %@
No DKIM header with incoming server matching domain
Blocking BIMI because DKIM domain %@ and mail server domain didn't match %@
Blocking BIMI because bimi-pass domain %@ and mail server domain %@ OR authServId domain of first auth result didn't match %@
Adding BIMI url (%{public}@)%@ for message: %{public}@
May have undownloaded indicators, downloading now
All BIMI messages have embedded indicators
incoming urlString %@ returned highLevelDomain %@
Scheduling indicator download, privacy proxy is %{public}@
Downloading %lu indicators
Persisted indicator data for URL: %{public}@
Removed invalid indicator URL: %{public}@
Scheduling another download batch
Temporarily unable to request indicator data for URL: %{public}@ due to error: %{public}@
Permanently unable to request indicator data for URL: %{public}@ due to error: %{public}@
Requesting indicator data for URL: %{public}@
BIMI indicator does not have expected hash
BIMI indicator hash is using unsupported algorithm
-[EDBiomeInteractionEvent persistEvent:date:message:data:] .. %@
-[EDBiomeInteractionEvent persistEvent:date:conversationID:data:] .. %@
-[EDBiomeInteractionEvent persistEvent:dataFromMessage:] .. %@
-[EDBiomeInteractionEvent persistEvent:dataFromMessage:account:] .. %@
-[EDBiomeInteractionEvent persistEvent:date:message:mailbox:] .. %@
-[EDBiomeInteractionEvent persistEvent:date:message:mailboxType:] .. %@
Cache hit for %@
Cache miss for %@
resumeForUpdates - Not Resuming client because device is either in foreground already or running PPT tests: %{public}@
resumeForUpdates - Not Resuming client because device is locked: %{public}@
resumeForUpdates - Resuming client: %{public}@
Resumed process failed with error %{public}@
Resumed process:%@
Acquired BKSProcessAssertion: %{public}@
Start BKSProcessAssertion for %{public}@
BKSProcessAssertion
Invalidated BKSProcessAssertion: %{public}@
End BKSProcessAssertion for %{public}@
Invalidating EDobserverResumer:%{public}@
Releasing BKSProcessAssertion as device is locking/locked: %{public}@
%{public}@: deallocating client state
%{public}@: Changed testing state. isRunningTests=%{BOOL}d
%{public}@: Setting visible mailboxes to %{public}@
%{public}@: Client Requested Boost
%{public}@: Client Cancelled Boost
%{public}@: Setting demo mode state
Failed to locate momd bundle in application. %@
Failed to load persistent stores. %{public}@
Import request failed to execute: %{public}@
Export request failed to execute: %{public}@
Successfully imported CloudKit content.
Successfully exported CloudKit content.
Request import failed
Request export failed
Failed to import CloudKit content. Rescheduling (%g). %{public}@
Failed to export CloudKit content. Rescheduling (%g). %{public}@
Failed to import CloudKit content: %{public}@
Failed to export CloudKit content: %{public}@
Library purgeable upgrader has been scheduled.
Found pending data replication transaction. Retrying replication from cloudKit to KVS
Finished replicating data from cloudKit to KVS
Replicating %lu changes from %{public}@ to %{public}@
Change %{public}@ replicated from %{public}@ to %{public}@, because %{public}@ entry is more recent.
Ignoring change with Key %{public}@ from %{public}@ to %{public}@, because %{public}@ entry is more recent.
Finished replicating changes from %{public}@ to %{public}@
CloudKitStorage finished initializing. Starting migrating content from KVS to CloudKit
Finished migrating content from KVS to CloudKit
Multiple conversations found for message_ids %@
Attempting to update association table for conversation that does not exist %@
Started pruning conversations
Finished pruning conversations
Initializing Conversation CloudKit Storage
Found pending export transaction. Retrying request export
Found pending import transaction. Retrying request import
First request import arrived. Success: %lu
APS Push received - %{public}@
Failed to save Control - Error: %{public}@
Unable to archive history token - Error: %{public}@
Unable to unarchive history token - Error: %{public}@
Deleting duplicated object. %{public}@, %{public}@
Failed to save _handleDuplicationsForConversationUUIDs - Error: %{public}@
Failed to fetching EDConversationInfo with ID: %{public}@ - Error: %{public}@
Failed to save EDConversationInfo %{public}@ - Error: %{public}@
Failed to delete EDConversationInfo %{public}@ - Error: %{public}@
Failed fetching EDConversationInfo to remove. ObjectId: %{public}@ - Error: %{public}@
Failed to fetching allConversationInfos- Error: %{public}@
Failed to fetching cloudKitControl: %{public}@
CoreData will reset sync couldKit data
CoreData did reset sync couldKit data
Started handling core data changes
Ignoring insert because object does not exist.
EDConversationInfo added. %{public}@
Ignoring update because objecvt does not exist.
EDConversationInfo updated/inserted. %{public}@
EDConversationInfo deleted. %{public}@
Deletion operation does not have ConversationUUID.
Finished handling core data changes
persistentHistoryResult.result is not an array. Ignoring it %{public}@
Unable to fetch change history (%{public}@.)
Failed fetching EDConversationInfo. ObjectId: %{public}@ - Error: %{public}@
Initializing Conversation KVS storage
Synchronizing with KVS store %@: %@
Received external KVS change event: %@, changed keys=%@
iCloud Key Value Store Over-Quota
%@: %@
Over quota: pruning database
Unknown change reason: %@
Error: %@ unable to persist all results into data_detection_results table
Successfully detected and persisted data detection results: %@
Error reading data detection results: %@
Database read data detection results for message %{public}lld: %@
Did not find any data detection results for message %{public}lld
Error getting data detection results from message ID: %@
Registered EMDiagnosticInfoProviding: <%p>
Gathering diagnostics with options: %lx...
Error creating directory at %{public}@, error: %{public}@
Error gathering diagnostics: %{public}@
Notifying observer of %lu changed groups (after messages were added)
Notifying observer of %lu changed groups (after messages were %{public}@)
Notifying observer of %lu deleted groups (%{public}@)
Notifying observer of %lu groups moved after %{public}@ (%{public}@)
Notifying observer of %lu groups inserted after %{public}@ (%{public}@)
Got %u predictions for message persistentID=%@, subject="%@"
Aggregated %u mailboxes.
Best mailbox: %@
Using Ordered Mode.
Raw counts for %@: %@
Found %.0lf hit for **%@** in %@
Ignoring because it is the message's current mailbox.
Ignoring because count (%.0f) is under threshold (%.0f).
Using Summed Weighted Mode:
Raw counts for %@:
Found field=%@ in mailbox=%@: weightedHits=%.1lf
Using Weighted Mode:
Found %.0lf (weighted=%.1lf) hits for **%@** in %@
Ignoring because weighted (%.0f) is under threshold (%.0f).
Winner: %@ (weighted=%.1lf)
Getting grouped messages count for %d / %@.
Not a legal sender address: %@
Found %u user mailboxes.
Ignoring mailboxes: %@
Not a legal recipient address: %@
anisetteDataWithError failure: %@ (%.3f sec)
anisetteDataWithError success: %@ (%.3f sec)
Pushing update for alias data. Count = %d
No Alias Lookup URL
AnisetteData not found for account: %{public}@ error: %{public}@
Unable to push new alias data to server %@. Received response code %lu, with error %{public}@.
JSON:%@
response: %@.
JSON: %@
%p: Ignoring subsequent call to -start.
%p: Starting with query '%@'
%p: Preparing to update, %llu unacknowledged updates, %f since last acknowledgement
%p: Pausing updates, %llu unacknowledged updates, %f since last acknowledgement
%p: Skipping change while paused
%p: Refreshing after unpause
%p: Unpausing without changes
%p: Acknowledged update %{public}@
%p: Sending update %{public}@
%p: Restarting the helper (old = %p).
%p: Created helper %p
%p: Threads Query: %@
%p: Message Query: %@
Content Protection => Locked
Content Protection => Unlocked
%p: Found %u messages.
%p: Finished initial load.
%p: Added %u messages
%p: Flags changed for %u messages
%p: Key paths %{public}@ changed for %u messages
%p: itemID not changed %@
changedMessage %@
oldObjectID %@
%p: Changed objectID from %{public}@ for message in thread: %{public}@
%p: Deleted %u messages
%p: ConversationIDs changed from %lld for %u messages
%p: Moving objectIDs: %{public}@ before: %{public}@
%p: Adding objectIDs: %{public}@ before: %{public}@
%p: Moving objectIDs to end of list: %{public}@
%p: Adding objectIDs to end of list: %{public}@
%p: Changing objectIDs: %{public}@
%p: Deleting objectIDs: %{public}@
%p: Blocked sender: Reporting deletes: %@ for thread: %@
%p: Blocked sender: Reporting change: %@ for thread: %@
%p: Blocked sender: No changes for thread %@
%p: Helper did finish remote search.
%p: Helper needs restart.
%p: Oldest threads initialized for %u mailboxes
Found existing old salt
No old salt found
Error finding existing old salt: %d
Could not generate salt. Device unlocked since boot: %@
Found existing salt
Existing salt has wrong access class. Re-creating salt
No salt found
Error finding existing salt: %d
Will create new salt
Error creating new salt: %d
Will delete salt
Error deleting salt: %d
Will migrate salt
errSecInteractionNotAllowed from keychain. Is the device still locked?
Error performing HTML unsubscribe: %{public}@
Could not find destination message for database ID %lld
Creating flag change action for %lu messages in mailbox %{public}llu
Got foreign key constraint error adding action for mailbox %{public}llu
Creating flag change all action in mailbox %{public}llu
Created %{public}@ action %lld for %lu messages (%lu download, %lu copy, %lu delete) in source mailbox %@, destination %@
Created %{public}@ action %lld for undownloaded message in mailbox %@ (success = %d)
Creating label change action for %lu messages in mailbox %{public}llu
Adding action message for transfer without destination message ID - action ID: %lld, destination message: %{public}@, source message: %{public}@
%{public}@
Persisting results for action %{public}@, completed %lu, failed %lu for phase %lu
Action %{public}@ had %lu failed items
Action %{public}@ finished downloading items
Action %{public}@ finished copying items
Finished action %{public}@
Updating action %{public}@ to %@ (%lu)
Action %llu finished
Predicting move mailbox for messages: %{public}@
Did not find any mailboxes for moving message(s).
Found mailbox for moving message(s).
Found mailbox '%{public}@'.
Found no mailbox for moving message(s).
%u accounts. No prediction for moving message(s).
Found %u mailbox(es) for moving message(s). Filtered from %u.
populated cache: %lu
_needsToInvalidate = YES
_invalidateCache invalidated
Get All Mailboxes
Number of Mailboxes %ld count
Registering For Mailbox Observation With Observer %{public}@
Unregistering For Mailbox Observation With Observer %{public}@
Perform Change Action:%{public}@
Could not load contents of URL %@ for pre-screening; proceeding with node search
HTML file seems to contain Mail Drop tags; proceeding with node search
HTML file does not contain Mail Drop tags; skipping node search
could not load the mail drop support javascript resource: %{public}@
Creating a webview for parsing MailDrop nodes for HTML file %@
MailDrop: Received Script message Finished MailDrop %@
MailDrop: Script message finished with a non-array value
MailDrop: WebView terminated
MailDrop: Failed to load WebView Error %{public}@
MailDrop: Finished loading webview for URL %@
Unable to rewrite HTML with updated maildrop nodes. Error: %{public}@
MailDrop: Received Script message with %@
Catalog MADownLoadResult: %ld
Query MAQueryResult: %ld
No asset found in results
Asset MADownLoadResult: %ld
Updating from asset with contentVersion=%{public}@, compatibilityVersion=%{public}@
No file URL found in asset
Failed to register for app extensions changes error:%@
Error occured requesting action for extension:  %{public}@: Error: %{public}@
Extension not found while attempting to find action: %{public}@
Received decision from action handler: %{public}@: %{public}@
Moving %lu new messages to %@
Copying %lu new messages to %@
Begin transferring NumberOfMessages=%{public,signpost.telemetry:number1}u messages to destinationMailbox=%@ enableTelemetry=YES 
Begin Processing batch of %u messages for sourceMailboxURL %@
Begin database write connection
End database write connection
End Processing batch of %u messages for sourceMailboxURL %@
EDMessageChangeManagerTransferMessages
Deleting all message from %@
Begin transfer all NumberOfMessages=%{public,signpost.telemetry:number1}u messages to destinationMailbox=%@ enableTelemetry=YES 
EDMessageChangeManagerTransferAllMessages
Adding %lu new messages to %@
Deleting %lu messages
Setting flags %{public}@ on all message for mailboxes %@
Begin flag change NumberOfMessages=%{public,signpost.telemetry:number1}u messages to FlagChange=%{public,signpost.telemetry:number2}lu enableTelemetry=YES 
EDMessageChangeManagerChangeFlagAllMessages
Setting flags %{public}@ on %lu messages
EDMessageChangeManagerChangeFlagMessages
Setting follow up dates %{public}@ on %lu messages
Setting read later date %{public}@ on %lu messages changeIsRemote:%{BOOL}d
Skip truncation. truncatedDate:%{public}@ readLaterDate:%{public}@
Adding %lu new messages from server sync to %@
Applying remind me to downloaded message: %lld
Invalid UID (%{public}@) in flag change action.
Message
s UID (%{public}@) is invalid in flag change action.
%d of %d UIDs in flag change action were invalid.
All %d UIDs in flag change action were completed.
%d of %d UIDs in flag change action were completed.
Starting to clear follow-ups from threads of %lu incoming messages.
Finished clearing %lu follow-ups.
Processing remote changes for changed items: %{public}@ deleted items: %{public}@
Applying new read later date due to remote change for messages with global message id: %lld, new read later date: %{public}@, old read later date: %{public}@
Applying new display date due to remote change for messages with global message id: %lld, new display date: %{public}@, old display date: %{public}@
No persisted messages found for remote changes.
<%p: %{public}@> Checking out scheduler %@
<%p: %{public}@> Checking in scheduler %@
<%p: %{public}@> Scheduling count calculation with reason %@
<%p: %{public}@> %{public}@ count handler with query: %@
<%p: %{public}@> Firing count calculation
<%p: %{public}@> recalculating unread counts (generation %lld)
<%p: %{public}@> query took %.04fs localCount:%ld
<%p: %{public}@> Finished count calculation
<%p: %{public}@> %{public}@: Scheduling increment of %lld (window: %llu:%llu)
<%p: %{public}@> increment ignored due to newer resync generation (ours: %llu, window: %llu:%llu)
<%p: %{public}@> increment occured during generation window, scheduling full fetch (ours: %llu, window: %llu:%llu)
<%p: %{public}@> %{public}@: Scheduling decrement of %lld (window: %llu:%llu)
<%p: %{public}@> decrement ignored due to newer resync generation (ours: %llu, window: %llu:%llu)
<%p: %{public}@> decrement occured during generation window, scheduling full fetch (ours: %llu, window: %llu:%llu)
<%p: %{public}@> %{public}@ (%lu mailboxes being synced): %lld = %lld + %lld + (%lld - %lld)
%{private}@
%{public}@
<%p: %{public}@> %{public}@ (%lu unacknowledged updates): %lld = %lld + %lld + (%lld - %lld)
%{private}@
%{public}@
<%p: %{public}@> Acknowledged update %{public}@
<%p: %{public}@> %{public}@: %lld = %lld + %lld + (%lld - %lld), %{public}@
%{private}@
%{public}@
<%p: %{public}@> Total count is negative.
<%p: %{public}@> Started syncing mailbox %{public}@
<%p: %{public}@> %{public}@, refreshing query
<%p: %{public}@> Adding mailbox %{public}@ (window: %llu:%llu)
<%p: %{public}@> add-mailbox notification expired by new generation (ours: %llu, window: %llu:%llu)
<%p: %{public}@> add-mailbox occured during generation window, scheduling full fetch (ours: %llu, window: %llu:%llu)
<%p: %{public}@> server-count set %lld for %{public}@ (window: %llu:%llu)
<%p: %{public}@> server-count notification expired by new generation (ours: %llu, window: %llu:%llu)
<%p: %{public}@> server-count occured during generation window, scheduling full fetch (ours: %llu, window: %llu:%llu)
<%p: %{public}@> most-recent-status-count set %lld for %{public}@ (window: %llu:%llu)
<%p: %{public}@> most-recent-status-count notification expired by new generation (ours: %llu, window: %llu:%llu)
<%p: %{public}@> most-recent-status-count occured during generation window, scheduling full fetch (ours: %llu, window: %llu:%llu)
<%p: %{public}@> last-sync + most-recent-status-count set %lld for %{public}@ (window: %llu:%llu)
<%p: %{public}@> last-sync and most-recent-status-count notification expired by new generation (ours: %llu, window: %llu:%llu)
<%p: %{public}@> last-sync and most-recent-status-count occured during generation window, scheduling full fetch (ours: %llu, window: %llu:%llu)
Created new scheduler %@ "%{public}@"
Using existing scheduler %@ with count %lu
received error while querying for messages: %{public}@
Cannot currently handle a NOT predicate with more than one sub
Got unexpected predicate: %{private}@
Failed to read metadata for key '%{public}@': %{public}@
JSON for cached metadata key '%{public}@' is too big.
Failed to add metadata for key '%{public}@': %{public}@
Failed to remove metadata for key '%{public}@': %{public}@
Fetched cached metadata row count from database: %d
Failed to get number of rows in cached metadata: %{public}@
Pruned %d rows from cached metadata.
Failed to prune %d rows from cached metadata: %{public}@
%{public}@: success:%d globalMessageIDs:%{public}@
Updating display dates for query %{public}@
Updated display dates for query %{public}@ (%lu messages)
Updating display date for messages with database IDs: %{public}@, date: %{public}@
No database IDs found for messages to update display date
Checking for expired follow ups for query: %{public}@
<%@ %p> Begin mapping %lu searchable item identifiers.
Mapped spotlight identifiers %{public}@ to %lu message objectIDs
<%@ %p> End mapping %lu searchable item identifiers.
PersistentIDMapping
Generating smart sort query for mailbox %@
Suggestions returned these message-ids as salient: %@
Invalid cached metadata key '%{public}@'
Trying to access cached metadata for global message ID 0.
Exception occured: %{public}@
Symbols:
%{public}@
%p: Re-starting the helper (old = %p).
%p: Found %lu objectIDs: %{public}@
%{public}@
%p: Found %lu objectIDs starting with: %{public}@
ending with:
%{public}@
%{public}@
%p: Finished initial load
%{public}@
%p: Did add %u messages. %u groups.
%p: Adding objectIDs: %{public}@ before: %{public}@
%{public}@
%p: Changing flags for objectIDs: %{public}@
%{public}@
%p: Changing key paths: %{public}@ for objectIDs: %{public}@
%{public}@
%p: Deleting objectIDs: %{public}@
%{public}@
%p: Changing conversationID for objectIDs: %{public}@
%{public}@
%p: Updating oldest messages for %u mailboxes
%p: Updated oldest message for mailbox ID %@
%p: Oldest messages updated
count=%{signpost.description:attribute}u 
QueryHelper FindMessagesByPreviousID
%p: Previous message is message itself -- message: %{public}@
previous message: %{public}@
exclude predicate: %{public}@
%p: Used head-list-lookup (%u entries) for %.3g%%, faster previous-message-lookup for %.3g%% of %u messages.
%@ Getting initial results for message query %@
%p: Received error %{public}@ while performing initial query: %@
%@ found %lu initial results for message query %@
helper=%p count=%u 
QueryHelperAddingMessages
%p: Adding %u filtered messages: %@
QueryHelperDidAddMessages Callback
QueryHelperDidAddMessages
%p: Did delete all messages in %u mailbox(es). Requesting restart.
%p: Reconciled %u filtered messages: %@
%p: Not deleting objectIDs with still existent duplicates: %{public}@
%{public}@
%p: Deleting %u filtered messages: %@
%p: Updating global message id for message: %{public}@ oldGlobalMessageID %llu newGlobalMessageID %llu
%p: persistenceDidUpdateProperties %@
keyPaths %@
%p: %{public}@ - schedule changes for keyPaths:%{public}@ removed=%lu added=%lu changed=%lu
%p: messages %@, unmatched %@
%p: Filtered ignored messages - before=%lu, after=%lu
%p: No messages to ignore
Performing Query %@
found %ld messages matching query %@
received error while querying for messages: %@, %{public}@
Creating message query: %{public}@, observation identifier: %{public}@
Creating thread query: %{public}@, observation identifier: %{public}@
Stopping query with observation identifier: %{public}@
Newly activated account is not EDReceivingAccount.
Resetting threads scopes for actived account.
Requesting (re-)migration of threads for actived account.
Newly deactivated account is not EDReceivingAccount.
Requesting update of threads for deactived account.
Found %u thread scopes that need re-migration for deactived account.
Thread query handler %p completed migration. Will notify %u other thread query handlers about the state change.
Found %u query handlers that need re-migration for (de-)actived account.
Received by maild
No query handler found for observation identifier: %@. Requesting summary from messagePersistence %p
Incorrect number of message list items (expected %lu, got %lu results + %lu missed). Unaccounted for: %{public}@
Returning results: %{public}@, missed objects: %{public}@
Finished processing %{public, name=results}u %{public, name=missedObjectIDs}u
EDMessageRepositoryMessageListItems
ChangeActionType=%{public,signpost.telemetry:number1}lu, ReturnUndoAction=%{public,signpost.telemetry.number2}u enableTelemetry=YES 
EDMessageRepositoryMessageChangeAction
Could not find a message for persistent ID: %@
Message %@ does not have a base path
Requesting rich link metadata for rich link id: %@ in base path: %@
EDMessageRepositoryContentRepresentationRequest
Requesting content representation for message %{public}@, Options: %{public}@
Content representation finished loading: %{public}@
Finished processing with success
Finished processing with failure %{public, name=errorCode}ld
Content representation failed to load: %{public}@ with error %{public}@
Loading older messages for %lu mailboxes
Remote Content Cache URL: %@
Resetting all update throttlers due to %{public}@
Already resetting all update throttlers, skipping reset due to %{public}@
Adding objectIDs but duplicate found %@
Unable to find mailboxes for legacy message database id: %{public}@
Not accepting %@
Begin Saving Draft %@
End Saving Draft %@
EMAIL DELIVERY
Begin saving outgoing message for outgoing message for %{public}@
Persisted message with %lld was created
%lu of messages are to be returned in completion
End saving outgoing message for message at for %{public}@
Begin editing outgoing message for documentID %@ at for %{public}@
End editing outgoing message for documentID %@ at for %{public}@
Deleting Draft %@
Unable to find persisted message for draft: %@
Deleting draft messages for documentID %@ in mailboxID %@
Deleting %lu messages for documentID %@ in mailboxID %@
Unable to find persisted message for draft documentID %@ in mailboxID %@
Trying to get a database write connection while servicing an XPC request.
Integrity check result: %d
Failed to begin transaction on connection %{public}@: %{public}@
Outer database block failed on connection %{public}@
Nested database block failed on connection %{public}@
Non-transactional database block failed on connection %{public}@
Write Transaction (generation: ignored) on connection %{public}@ started successfully
Write Transaction (generation: %lld) on connection %{public}@ started successfully
Read Transaction (generation: ignored) on connection %{public}@ started successfully
Read Transaction (generation: %lld) on connection %{public}@ started successfully
Rolling back transaction on connection %{public}@ %{public}@
Transaction on connection %{public}@ %{public}@ failed: %{public}@
Transaction on connection %{public}@ %{public}@ succeeded
Unable to increment transaction generation: %{public}@
Attached Protected Index on connection %{public}@
Detached Protected Index on connection %{public}@
Attached journal on connection %{public}@
Detached journal on connection %{public}@
Attaching database '%{public}@' at URL %{public}@
wrong number of arguments (%d) to and64
Checking out %@
Checking in %@
Checking for existing journals
Created journal directory
Unable to create journal directory: %{public}@
Found journal numbers: %{public}@
Unable to iterate journal directory: %{public}@
Returning current journal %@
Unsetting current journal %@ - should delete: %{public}@
Oldest journal %lu does not already exist. Creating...
Getting oldest journal %lu
Merged journal %lu - should delete: %{public}@
Unable to delete journal %lu: %{public}@
Unable to delete wal for journal %lu: %{public}@
Unable to delete shm for journal %lu: %{public}@
Deleted journal %lu
Failed to generate and restore persona context with identifier: %{public}@ error: %{public}@ 
Failed to create saved persona context for identifier: %{public}@ error: %{public}@ 
Failed to create container with identifier %{public}@ due to container manager error: %llu
Mail persona container is not in the group container URLs
No persistentBits found. Searching for legacy version.
No legacy persistentBits found. Generating new.
persistentBits: %@
Could not open '%@': %d: %@
Reached quota, writing truncation marker
Checksum failure at offset %zu, bailing to read
Error initializing compression
_process() failed
_process(.FINALIZE) failed
No interaction events found, returning nil data
_destroy failed
%@ doesn't implement setMessage:data:
%@ doesn't implement setConversationID:data:
%@ doesn't implement setDataFromMessage:
%@ doesn't implement setDataFromMessage:account:
%@ doesn't implement setMessage:mailbox:
%@ doesn't implement setMessage:mailboxType:
Failed to find recipients of sent messages with error: %{public}@
Failed to get addresses for recipients of sent messages: %{public}@
Failed to insert senders with contacts with error: %{public}@
Failed to insert senders without contacts with error: %{public}@
Failed to clear senders table: %{public}@
Failed to clear sender addresses table: %{public}@
%p: Returning batch of %lu results
%{public}@
%p: Canceled initial results
%{public}@
%p: Returning initial load did finish
%{public}@
%p: Adding change to existing change for objectID: %{public}@
%{public}@
%{public}@
%p: Adding change for objectID: %{public}@
%{public}@
%{public}@
%p: Skipping flushing of changes%{public}@ due to %llu unacknowledged updates
%p: Flushing changes%{public}@: %{public}@
%{public}@
%p: Flushing position changes%{public}@: %{public}@
%{public}@
%p: Acknowledged update for %{public}@: %{public}@
%p: Sending update%{public}@ for %{public}@: %{public}@
%p: Adding add for objectID: %{public}@ -> %{public}@
%{public}@
%p: Adding add to new position change for objectID: %{public}@ -> %{public}@
%{public}@
%p: Ignoring change for objectID: %{public}@
%{public}@
%p: Adding move for objectID: %{public}@ -> %{public}@
%{public}@
%p: Adding move to new position change for objectID: %{public}@ -> %{public}@
%{public}@
%p: Ignoring Conversation Notification Level change for objectID: %{public}@
%{public}@
%p: Adding objectID to delete: %{public}@
%{public}@
%p: Ignoring messageID change for objectID: %{public}@
%{public}@
%p: Ignoring summary change for objectID: %{public}@
%{public}@
%p: Oldest thread updated for mailbox: %{public}@
%@: maxRowID: %lld, largestDeletedRowID: %lld
Updating sqlite_sequence %{public}@ = %lld
Setting sqlite_sequence %{public}@ = %lld
Skipping on-demand reconciliation from the main thread
Triggering on-demand reconciliation
Completed on-demand reconciliation with result: %lu
Skipping on-demand reconciliation because we're already reconciling
Triggering reconciliation
Completed reconciliation with result: %lu
Starting reconciliation of protected data
Reconciling journal %lu
Failed to attach journal %lu for reconciliation
Failed to upgrade journal %lu for reconciliation
Temporarily failed to merge data for journal %lu
Skipped merging data due to malformed schema for journal %lu
Permanently failed to merge data for journal %lu
TotalJournaledRows=%{public,signpost.telemetry:number1}lu, NewJournaledRows=%{public,signpost.telemetry:number2}lu enableTelemetry=YES 
EDProtectedDatabasePersistenceReconciliation
Merging table %{public}@ with unique columns: %{public}@
  referencing columns: %{public}@
Merging table %{public}@ without unique columns
Inserting %{public}@
Replacing %{public}@ with %{public}@
Conflict merging table %{public}@.%{public}@ %{public}@ with %{public}@
Merge handler found for table %{public}@
Merge handler for table %{public}@ returned with result %lu
No merge handler found for table %{public}@
Failed to merge table %{public}@ for %{public}@
Deleting from journal: %{public}@
Starting clean up
Deleted %lu rows from %{public}@
Unable to find key for message: %{public}@
Adding entry for message: %{public}@, key: %{public}@, date: %f
Unable to find message ID for message: %{public}@
Unable to find key to update display date for message: %{public}@
Updating display date for message: %{public}@, key: %{public}@, date: %f
No value found for message: %{public}@, key: %{public}@
An existing display date already exists for message: %{public}@, key: %{public}@
Removing entry for message: %{public}@, key: %{public}@
%{pubilc}@ - message:%@ with date:%{public}@ result:%{public}@
%{pubilc}@ - message:%@
%{public}@ nextAlarmDate:%{public}@
%{public}@ udpatedMessages:%lu readLaterDate:%{public}@ startDate:%{public}@ firstMessageReadLaterDate:%{public}@
%{public}@ startDate:%{public}@ endDate:%{public}@
%{public}@ update endDate to %{public}@ so it's after startDate
%{public}@ nextAlarmDate:%{public}@ messages to notify:%lu
Next alarm date from DefaultEDRemindMeNotificationControllerAlarmDateProvider: %{public}@.
Reset remind me later next alarm to %{public}@.
%{public}@ date:%{public}@ message.globalMessageID:%lld
app requested early recovery path
Failed to create URL Cache directory:
%{public}@
-[EDRemoteContentManager _scheduleBackgroundRequests]
Updated scheduling: last day count = %lu, unrequested count = %lu, request interval = %f, batch size = %lu
Skipped unconditional request batch because request batch is already running
Scheduled unconditional request batch for %lu links with interval: %f
Request batch already scheduled
Deferring %lu links
Scheduled request batch for %lu links with interval: %f
Finishing after requesting %lu URLs%{public}@
Starting request batch for URLs: %{public}@
Requested URL with %.2fs timeout: %{public}@
Canceled URL with %.2fs timeout: %{public}@
Failed to request URL with %.2fs timeout: %{public}@ -- due to error: %{public}@
Finished request batch for URLs: %{public}@
Did not finish requesting batch due to deferral, completed: %{public}@
Added URLs: %{public}@
Invalid extra URL: %{public}@ with scheme: %{public}@
Invalid missedLink URL: %{public}@ with scheme: %{public}@
Verification: Extra URLs: %{public}@
Verification: Missed URLs: %{public}@
Verification: URLs match parsed URLs
Parsed and added URLs: %{public}@
Unable to get view durations from Biome
Using default timeout values
Leaving timeout values unchanged
Updating timeout values based on min and max: (%f, %f)
Updating timeout values based on mean and %u standard deviation%{public}@: (%f, %f)
-[EDRemoteContentManager noteViewOfRemoteContentLinks:]
Viewed URLs: %{public}@
Decremented row count past zero to %ld
Decremented protected row count past zero to %ld
Failed to create new messages table: %{public}@
Failed to rename messages_old: %{public}@
Failed to drop index: %{public}@ %{public}@
Failed to create index: %{public}@ %{public}@
Failed to drop copy messages data: %{public}@
Failed to rename new messages: %{public}@
Failed to create new threads table: %{public}@
Failed to drop table %{public}@: %{public}@
Failed to truncate table %{public}@: %{public}@
Failed to drop thread_categories_type_active_user_override_thread_index: %{public}@
Unable to persist rich link with richLinkID: %@ and messageID: %lld to database
Could not find rich link directory, base path is null.
Failed to create Rich Link data directory:
%{public}@
Could not create rich links directory, path is null
Unable to find url for rich link with ID %@
Fetched data: %@ for rich link with richLinkID:%@
Unable to read rich link at URL %@
processing batch of indexable items
Deallocating searchable index
Checking messages.searchable_message for orphaned values
verifying representative sample of items in the datasource are actually indexed
Datasource couldn't verify or Mail didn't fetch any samples
Spotlight found everything from the sample
Spotlight index and Mail database are out of sync, items may be missing or duplicated
Removing corrupt indexes for %lu transactions: %{public}@
Requesting last client state from CSSearchableIndex
CoreSpotlight failed to return our client state (old state: %@)
last client state: %@%@
failed to retrieve last client state: %{public}@
Timed out while fetching client state
-[EDSearchableIndex resume]: %@ (%lld)
Data source updates took too long to return results. Canceling.
Received dataSourceUpdates: %{public}@ throttledDataSourceBatchSize:%lu batchSize:%lu
Data source returned %lu out of %lu requested items to index.
EDSearchableIndexDataSourceUpdates
Changing indexingType for item %@ identifier: %{public}@ from %ld using setNeedsAllAttributesIndexingType
Changing indexingType for item %@ identifier: %{public}@ from %ld using setNeedsAllAttributesIncludingDataDetectionResultsIndexingType
Unexpected changing of indexingType for item %@ identifier: %{public}@ from %ld to %ld
EDSearchableIndexDataSourcePrepare
starting coalescing timer (t=%fs)
stopping coalescing timer
coalescing timer fired
suspending indexing scheduler
resuming indexing scheduler
BatchStartedWithPendingItemCount=%{signpost.description:attribute,public}@
EDSearchableIndexBatchProcessing
BatchAssignedDomnainRemovalCount=%{signpost.description:attribute,public}llu
BatchFinishedWithItemIndexedCount=%{signpost.description:attribute,public}@
scheduling processing of pending items
Clearing %lu items %{public}@ from processingItems
BatchBeginCoreSpotlightBatch
EDSearchableIndexCSProcessing
BatchEndCoreSpotlightBatch
Spotlight failed to index %ld items (transaction=%lld) failed with error: %{public}@
Clearing %lu items from processingItems due to indexing failure
batch of %lu items took %.4gs to index
consuming %lu items out of a potential %lu totalSizeForBatch %lu/%lu new processingItems: %{public}@
Allowing immediate indexing of %lu pending items
EDSearchableIndexCreateSearchableItems
generating searchable items failed: %{public}@
indexing %lu / %lu items, throttled batch size %lu
indexing searchable items failed: %{public}@
removing indexed items for domains {%@}
removing indexed items with identifiers {%@}
Sending spotlight diagnostic request %@
Spotlight diagnostic request failed: %{public}@
spotlight requests to reindex items with identifiers %@
spotlight requests to reindex all items
Deleting %lu items from Spotlight index: %{public}@
Reindexing All Items With Options: %lu
failed to delete all items from domain: %{public}@
Invoking acknowledgement handler
Deleting all items from CSIndex
Invalidating all items greater than: %lld
%p indexItems:%{public}@ fromRefresh:%{BOOL}d i:%{BOOL}d
Index items usage issue - indexing identifiers(s) %{public}@ that were removed
%p dropped item: %{public}@
%p prepared indexItems:%{public}@ fromRefresh:%{BOOL}d i:%{BOOL}d
Requested %lu items to be indexed while inactive
Skipping index of %{public}@ identifier because it is present in _pendingIdentifierRemovals
Requested %lu items to be indexed (new: %lu %{public}@ existing: %{public}@ deferred: %lu preprocess: %lu %{public}@ pending: %lu) fromRefresh: %{BOOL}d
Removing identifiers:%{public}@ fromRefresh:%{BOOL}d
Removing all items for domain: %@
Message IDs - search failed: %{public}@
Mailbox Prediction - Canceling before querying Spotlight
searching spotlight index for %@
Regular query collected snippet hints first value: %@
Mailbox Prediction - Timed out waiting for results from spotlight: %{public}@
Mailbox Prediction - search failed: %{public}@
Mailbox Prediction - Canceling after querying Spotlight
Putting dependent item(s) with identifier %{public}@ %@ into preprocessing list
Finished processing item %{public}@
Skipped processing item - no longer in preprocessingItems %{public}@
Rich link data became available, starting a data source refresh
Reason provider %@ failed to provide dataSourceRefreshReasons
Reason provider %@ failed to provide purgeReasons
Reason provider %@ failed to provide exclusionReasons
Reason provider %@ failed to provide currentReasons
Could not find file type for url %@ error %@
Creating attachment attribute set with displayName %@ contentURL %@ uniqueIdentifier %{public}@ relatedUniqueIdentifier %{public}@
Upgrading item %{public}@ from type:%ld to type:%ld
Skipping body indexing for message %{public}@ due to large message size:%lu
Warning: about to index message with an empty subject. %{public}@
[%{public}@]: Adding data detection results
Removing all items from searchableIndex (waiting: %{BOOL}d needsReindex: %{BOOL}d options: %ld)
All items removed from searchableIndex
Setting needs reindex
Setting object:%@ for key: %@
SearchableIndex is requesting a batch of up to %lu items requiring indexing
Reindex in-progress.  Switching to EDSearchableIndexRebuildTableStateUseRebuildTableQuery state
type=%ld limit=%lu messageCount=%u
EDSearchableIndexPersistenceMessagesToItems
limit=%ld
Generated %lu attachment items from %lu attachment data
Taking too long to find attachmentItems after:%f
EDSearchableIndexPersistenceWhileLoop
Generated %lu rich link items from %lu rich link data
Taking too long to find rich link items after:%f
type=%ld limit=%ld
EDSearchableIndexPersistenceMessagesForIndexing
Reindex complete. Switching to EDSearchableIndexRebuildTableStateUseDefaultQuery state
Reindex requested.  Switching to EDSearchableIndexRebuildTableStateUseRebuildTableQuery state
Clearing existing searchable_attachment entries for message_id %@
SearchableIndex is preparing to index attachments for message with identifier: %{public}@
Setting %lu orphaned searchable_message values to NULL
SpotlightVerificationOrphanedValues=%{public,signpost.telemetry:number1}lu enableTelemetry=YES 
EDSearchableIndexPersistenceOrphanedValues
Inserting attachment items into the searchable_attachments table %@
Inserting rich link items into the searchable_rich_links table %@
Found item count:%lu for attachment indexing
Encountered a reference to a non-existent message in the rich_links table for richLinkID:%{public}@, richLinkPersistentID:%{public}@, messagePersistentID:%{public}@
Encountered a reference to an invalid file in the rich_links table for richLinkID:%{public}@, richLinkPersistentID:%{public}@, messagePersistentID:%{public}@
Error storing searchable data detection results: %@
Data detection result %@ with message %@ was successfully added to the searchable_data_detection_results table
Rich link identifier %@ could not be split up into messageID and rich link ID.
Creating rich link attribute set with rich link ID %@ uniqueIdentifier %{public}@ relatedUniqueIdentifier %{public}@
Initializing scheduler with budgetConfiguration:%{public}@
Configuring %{public}@ actvitity with interval: %lld
Starting scheduling with budgetedItemCountRemaining: %ld
Note: Disabled XPC activity based scheduling.
Note: Automatically enabling maintenance activity indexing.
Failed to transition %{public}@ from state %ld to state %d.
Attempted to begin indexing an activity type (%{public}@) that is already active - marking old ACTIVITY as DONE
XPC Requested deferral of activity %@
Checking for XPC deferral
Failed to transition %{public}@ from state %ld to state %ld.
%{public}@ : %{public}@
verifying searchable index
<%{public}@:%p> did not return a spotlight query. dataSamples.count=%lu transformedDataSamples.count=%lu
Skipping verifyDataSamplesWithCompletionHandler. Protected data unavailable.
No data samples fetched from database. Resetting kDefaultsKeyLastVerifiedMessageID to 0
Verification failed at ratio %f. Performing verification with a larger sample of size %lu
Verification query results empty
Verification failed at ratio: %f. threshold: %f
Failed verification for row:%@ citd:%lld
SpotlightVerificationSamples=%{public,signpost.telemetry:number1}lu SpotlightVerificationResultFailures=%{public,signpost.telemetry:number2}ld SpotlightVerificationFailingRatio=%{public,signpost.description:attribute}f enableTelemetry=YES 
EDSearchableIndexVerifier
Found %lu missing transaction(s)
Failed to query for transaction identifiers
Found all expected transaction identifiers
No transactionIDs were fetched from the database, which implies nothing has been indexed yet. Skipping further verification.
Skipping transaction ID verification. Protected data unavailable
Gathering relevant senders for search
Error occurred when searching for relavant senders: %{public}@
Found %lu relevant senders for search
EmailAddress:%@ bucket is %@
DB result for senders.bucket for EmailAddress:%@ is %@.
Failed to move addresses: %{public}@
Address with ID %llu (sender ID %llu) has no string representation: %{public}@
<nil> address for ID %llu (sender ID %llu)
Unable to find sender for contact identifier: %{public}@
Added new sender (%lld) to bucket %{public}@ with %lu addresses: %{public}@, contact identifier: %{public}@
Failed to add new sender to bucket %{public}@ with %lu addresses: %{public}@, contact identifier: %{public}@, error: %{public}@
Moved sender (%lld) to bucket %{public}@
Failed to move sender (%lld) to bucket %{public}@, error: %{public}@
%{public}@ %lu addresses
Failed to move blocked senders (address ID lookup) to bucket %{public}@: %{public}@, error: %{public}@
Failed to move blocked senders (unblock existing senders) to bucket %{public}@: %{public}@, error: %{public}@
Failed to move blocked senders (block existing senders) to bucket %{public}@: %{public}@, error: %{public}@
Failed to move blocked senders (look up other addresses for existing blocked senders) to bucket %{public}@: %{public}@, error: %{public}@
Failed to move blocked senders (block new senders) to bucket %{public}@: %{public}@, error: %{public}@
Moved blocked senders to bucket %{public}@: %{public}@
Contacts count: %@, addresses count: %lu
Unable to get contact email addresses: %{public}@
Unable to get contacts count: %{public}@
Updating %ld addresses based on sent messages .
Merge Conflict: Handling merge conflict for %{public}@.%{public}@
Merge Conflict:Duplicate Sender: %ld : bucket %ld
Merge Conflict: Existing Sender Sender %ld : Bucket %ld
Merge Conflict: Updating sender bucket to %ld
Merge Conflict: Deleting duplicate sender
Merge Conflict: Successfully resolved conflict
Merge Conflict: Error occured during merge: %{public}@
Merge Conflict: Unsupported merge conflict for %{public}@.%{public}@
Persist send later date (%{public}@) for %lu messages
Failed to update send later for message with id: %lld, error: %{public}@
Successfully updated send later date (%{public}@) for message with id: %lld
Send later alarm time has passed already, but is within the allowed delivery window. Send Later original date : %{public}@
Send later alarm fired. Send Later messages query start date: %{public}@ and end date:%{public}@
Send later alarm fired. Preparing %lu messages
Successfully sent message
Error sending an email from mail: %{public}@, delivery status: %ld
Finished sending send later messages. %lu failed. Next alarm date: %{public}@
Schedule %lu messages for %{public}@
Updated start date: %{public}@
Queried messages count: %lu
Earliest message send later date: %{public}@
Current earliest message send later date:%{public}@ and send later date:%{public}@
After scheduling xpc alarm at: %{public}@
Next alarm date from EDDefaultSendLaterUpdateControllerAlarmDateProvider: %{public}@.
Reset send later next alarm to %{public}@.
After persistence updated. Current next alarm date: %{public}@
Send later alarm needs update for %lu messages. New date:%{public}@
starting listener %@
received a new connection request %@
connection rejected because of missing entitlement
Remote Client Interrupted %@
Remote Client Invalidated %@
Returned more results (%lu) than requested (%lu)
Unable to read server messages with 'cleared' UIDs: %{public}@
Unable to delete server messages with 'cleared' UIDs: %{public}@
Number of deleted rows (%u) does not match server messages previously found (%u).
Unable to look up existing messages based on message-id header: %{public}@
Unable to set UID on server_message: %{public}@
Did not find any rows to update UID on server_message (row id %lld).
Unable to set UID on message: %{public}@
Did not find any rows to update UID on message (row id %lld).
Unable to find label: %lld, %@
%p: fetching %llu UIDs, limit %llu, reverse %{BOOL}d, range count limit %llu, batch limit %llu.
%p: fetching UIDs {%{public}@} with limit %llu
%p: got UIDs {%{public}@}
%p: got more UIDs in batch (%lu) than allowed (%lu)
%p: done.
Error from Suggestions: %{public}@
failed to synchronize store
kvstorage reported quota exceeded
received external KVS change event: %ld, changed keys=%{public}@
unhandled change reason: %ld
stopping re-entrancy for changes to local key %{public}@
syncing setting %{public}@ from %{public}@
Unexpected object set when syncing %{public}@ from %{public}@
Setting %{public}@ was remove remotely
syncing tracking protection setting from %{public}@
skipping syncing tracking protection setting from %{public}@ (not set by user)
skipping syncing tracking protection setting from %{public}@ (unknown value type)
skipping syncing tracking protection setting from cloud to device with no new value
%p[%lu]: Failed to start migration for %lu threads due to wrong state: %lu
%{public}@
%p[%lu]: Starting migration for %lu threads
%{public}@
%p[%lu]: Finished empty migration: %{public}@
%p[%lu]: Canceling migration
%p[%lu]: Resetting migration
%p[%lu]: Migrating batch of %lu threads
%{public}@
%p[%lu]: Finishing migration
%{public}@
%p[%lu]: Skipping migration for thread %{public}@ due to error: %{public}@
%p[%lu]: Failed migration -- unable to add threads
%{public}@
%p[%lu]: Finalized %{public}@ for %lu threads: %{public}@
%p[%lu]: Finished migration after finalizing last %@batch: %{public}@
%p[%lu]: Resuming migration for thread scope %{public}@
%p[%lu]: Added %lu threads to migration for thread scope %{public}@
%p[%lu]: Got more object IDs after migration finished. objects: {%{public}@}; thread scope: {%{public}@}
%p[%lu]: Resetting object IDs %{public}@ after change
%{public}@
%p[%lu]: Resuming migration
%{public}@
%p[%lu]: Got changed object IDs after migration finished: %{public}@
%{public}@
%p[%lu]: Deleting %lu threads from migration 
%{public}@
%p[%lu]: Deleting %{public}@
%{public}@
%p[%lu]: Finishing migration after deleting last batch: %{public}@
%p[%lu]: Got deleted object IDs after migration finished: %{public}@
%{public}@
%p[%lu]: Failed migration -- unable to delete threads
%{public}@
%p[%lu]: %{public}@ for %lu threads due to generation change (to %lu)
%p[%lu]: %{public}@ for %lu threads due to wrong state: %lu
Migration in progress for threadscope: %{public}@
Migration requested for threadscope: %{public}@
Unable to find database ID for thread: %{public}@
Unable to find display message for thread: %{public}@
Unable to find subject from display message %{public}@ for journaled thread %{public}@
Thread has no subject: %{public}@
Thread has no sender: %{public}@
Unable to return thread for objectID %{public}@ due to error: %{public}@
Looking up thread before thread: %{public}@
Unable to form comparison expression to look up position for thread: %{public}@, sort descriptors: %{public}@
Looking up next existing threads before %lu threads: %{public}@
Cannot generate expression for unsupported sort descriptors: %{public}@
No conversation ID for thread: %{public}@
Unable to find thread scope database ID for thread: %{public}@
Scheduling recomputation for %{public}@: %{public}@
Recomputing %lu threads: %{public}@
Successfully recomputed %lu threads: %{public}@
Failed to recompute %lu threads: %{public}@
Found %u mailbox object IDs for actived account.
Thread scope %{public}@ does not have a valid mailbox scope
Persistence is adding %lu messages
Adding %@thread: %{public}@
Changing %@thread (new messages): %{public}@
key paths: %{public}@
Persistence did add %u messages
count=%u 
ThreadPersistenceDidAddMessages
Persistence is setting deleted flag for %lu messages: %{public}@
Persistence is unsetting deleted flag for %lu messages: %{public}@
Persistence is changing flags for %lu messages: %{public}@
Changing thread (flag change): %{public}@
key paths: %{public}@
Persistence did change flags for %lu messages
Persistence is deleting %lu messages
Changing thread (deleted messages): %{public}@
key paths: %{public}@
Persistence did delete %lu messages
No thread database ID: %{public}@
Deleting thread: %{public}@
Persistence did delete all messages in mailbox %{public}@
Persistence is changing conversation ID for %lu messages from %lld
Adding thread (conversation change): %{public}@
Changing thread (conversation change): %{public}@
key paths: %{public}@
Persistence did change global-message-id for message
%{public}@
Changing thread (readLaterDate change): %{public}@
Persistence did update read later date for %u messages
Changing thread (follow up): %{public}@
key paths: %{public}@
Persistence did update follow up for %u messages
Changing thread (displayDate change): %{public}@
Persistence did update display date for %u messages
Changing thread (hasAttachments change): %{public}@
Persistence did update properties for message: %{public}@
Thread with conversationID %lld display message updated
NOT predicate should only have one subpredicate: %@
Attempting to finish migration for a thread scope which doesn't exist: %{public}@
Migration finished for threadscope - %{public}@
Unable to get oldest thread object ID for mailbox: %{public}@
Thread scope is inconsistent - conversation id %lld is empty and has null display message: %{public}@
Thread scope is inconsistent - conversation id %lld has null display message: %{public}@
Thread scope is inconsistent - conversation id %lld is empty: %{public}@
Thread scope is inconsistent - conversation id %lld has unknown consistency issue: %{public}@
Thread scope is inconsistent - expected %lu threads but %lu threads exist: %{public}@
Thread scope is consistent: %{public}@
Adding thread %lld with %u messages. Journaled: %{BOOL}d, replace: %{BOOL}d
Failed to add thread: %{public}@
Updating thread %lld with %u messages. Journaled: %{BOOL}d
Failed to update thread: %{public}@
Failed to get current display message sender.
Failed to get date of newest read / current display messages: %{public}@
Failed to update thread display message: %{public}@
Failed to add thread mailbox: %{public}@
Added %u mailbox(es) for thread DB ID %lld.
Failed to get message senders for thread.
Failed to add sender: %{public}@
Added/changed %u sender(s) for thread DB ID %lld.
Failed to get current display message sender: %{public}@
Failed to get actual display message sender: %{public}@
Failed to clear sender priority: %{public}@
Failed to set the sender priority: %{public}@
Failed to get message receipients for thread: %{public}@
Failed to add recipient: %{public}@
Added/updated %u type %u recipient(s) for thread DB ID %lld.
Failed to get message row IDs for thread: %{public}@
Found no rows for thread DB ID %lld.
Unable to create empty temp_persisted_messages: %{public}@
Found %u rows {%{public}@} for thread DB ID %lld.
Failed to drop temp_persisted_messages temp view: %{public}@
Failed to drop temp_thread_scope_message temp view: %{public}@
%p: thread scope state: use in-memory
%p: thread scope state: use pre-computed
%p: thread scope state: perform migration
%p: Creating implementations for thread query handler; query: {%{public}@}, observation identifier: {%{public}@}
%p: Replacing in-memory query handler %p -> %p
%p Keeping existing in-memory query handler %p
%p: Replacing pre-computed query handler %p -> %p
%p: Keeping existing pre-computed query handler %p
%p: Replacing thread migrator %p -> %p
%p: Creating new thread migrator %p
%p: Removing thread migrator %p
%p: Notifying observer about restart.
%p: Migrator %p will be started by in-memory query handler %p.
%p: Thread migrator %p did complete.
%p: Unknown thread migrator %p did complete.
%p: ID %{public}@ was updated.
%p: Observer callback from unknown (old?) underlying handler.
%p: ID %{public}@ matched added object IDs before.
%p: ID %{public}@ matched added object IDs after.
%p: ID %{public}@ matched moved object IDs before.
%p: ID %{public}@ matched moved object IDs after.
%p: ID %{public}@ matched changes for object IDs.
%p: ID %{public}@ matched deleted object IDs.
%p: ID %{public}@ finished initial load.
%p: Starting migrator %p.
%p: ID %{public}@ finished remote search.
%p: ID %{public}@ replaced existing object ID.
%p: ID %{public}@ will restart.
%p: ID %{public}@ matched oldest items updated for mailboxes.
Thread scope has unsupported filter predicate: %{public}@
Adding pre-computed thread scope: %{public}@ -> %{public}@
Evicting %lu-%lu thread scopes (after adding %luth thread scope) from: %{public}@
Setting needsUpdate=%u for thread scope: %{public}@
Setting lastViewedDate=%{public}@ for thread scope: %{public}@
Resetting all pre-computed thread scopes
Resetting pre-computed thread scope: %{public}@
Resetting pre-computed thread scopes for mailbox scope: %{public}@
Loaded pre-computed thread scopes: %{public}@
Evicting %lu-%lu thread scopes (after initializing %lu thread scopes) from: %{public}@
Eviction score for %llu: %f (%llu count, %f time)
Adding %@ for eviction: below min
Adding %@ for eviction: score below threshold
Attempting to evict thread scopes with database IDs: %{public}@
Evicting thread scope with database ID: %llu -> %{public}@ = %{public}@
Last viewed %f seconds in the future for thread scope %lld: %{public}@
Setting conversation flags %llu for conversations: %@
delete %@ (conversationID: %lld)
modifying %@ (conversationID: %lld): flags = %llu
found %lu message ids for conversation
creating new cloud entry %@: %@
Synchronizing with cloud store %@: %@
Merging server changes: %@
Server change. Clearing conversation flags for conversation: %lld
Server change. Updating conversation flags for conversation: %lld. Old flags %llu new flags %llu
Server change. Setting conversation flags for conversation: %lld
found conversation %lld
could not find a conversation that matched those message ids
Updating message ids for conversation %lld
Synced conversation object is not a dictionary
Finished merging server changes
Pruning database. Purging oldest entries %d
deleting entry with flag value of zero: %@
Conversation Remote Storage %{public}@ did change entries %@
over quota: pruning database
Perform daily export for changed conversations: %@
Removing orphaned entry from unknwown leys set: %@
Not showing notification for message: %{public}@ because it is a server search result.
Not showing notification for message: %{public}@ because it is marked as read.
Not showing notification for message: %{public}@ because it is from a blocked sender.
Not showing notification for message: %{public}@ because it is in a muted conversation.
Not showing notification for message %{public}@ because it is more than a week old
Message %{public}@ has a nil mailbox identifier
registering for VIP kvstore at: %@
number of VIPs in current store: %lu
%@: current store contents: %{public}@
save VIPs with count %lu
save new VIPs with count %lu
remove VIPs with identifiers %@
Failed to write serialized entries: %{public}@
Failed to serialize %lu entries: %{public}@
VIP store after writing to cloud has %lu entries
VIP store contents after writing to cloud: %{private}@
VIP kvstore changed, reason: %{public}@
%lu keys changed
keys changed: %{public}@
Successfully synchronized KV Store
Failed to synchronize KV Store
local store has %lu VIPs before updating from cloud
local VIPs before updating from cloud: %{private}@
local store has %lu VIPs after updating from cloud
local VIPs after updating from cloud: %{private}@
merge VIPs from cloud with count %lu and local with count %lu
merge VIPs from cloud: %@ and local: %@
could not load  FindRichLinkMetadata.js: %{public}@
Scheduling data detection work for message %@
Starting data detection work for message %@
Parsing remote content links timed out
Data detection timed out
Data detection for message %@ timed out
Extracting rich links for message %@ timed out
Parsed NumberOfRemoteLinks=%{public,signpost.telemetry:number1}lu from SizeOfBody=%{public,signpost.telemetry:number2}lu enableTelemetry=YES 
EDWebContentParserLinkParsing
Found NumberOfDataDtectionResults=%{public,signpost.telemetry:number1}lu from SizeOfBody=%{public,signpost.telemetry:number2}lu enableTelemetry=YES 
EDWebContentParserDataDetection
Data detection for message %@ finished.
Found data detection results: %@
Found rich link with title: %@ and url: %@
[WebBundle] %@
Waiting for updates
Schedule activity with %llds delay
Failed to set activity to done
Update timelines failed: %{public}@
Successfully updated widget (%ld)
Persistence did add messages
Persistence did change flags: %{public}@
Persistence did change flag which is not relevant: %{public}@
Generating initial list.
Checking for existing file.
Existing file found.
Could not load from url.
Sender list is empty, will generate a new one.
No existing file will generate a new one
Writing to file.
Wrote wrong number of bytes.
Could not open fd.
Device unlocked. Will try write.
CloudStorage: Moving Sender :%{public}@ to Bucket: %ld User Initiated: %d
CloudStorage: Moving %lu addresses to Bucket: %ld User Initiated: %d
CloudStorage: Moving to bucket %ld is invalid, treating as removal for %lu addresses
CloudStorage: No address string found for %{public}@
CloudStorage: Removing Sender: %{public}@
CloudStorage: Removing %lu addresses
CloudStorage: Removinging all objects!
CloudStorage: Remote change with %lu changed items, %lu deleted items
CloudStorage: Handling merge for changed keys %{public}@
CloudStorage: Merging key %{public}@
CloudStorage: Merge for Key: %{public}@. Taking local change
CloudStorage: Merge for Key: %{public}@. Taking remote change
CloudStorage: Merge: %{public}@, no local object
CloudStorage: Merge: %{public}@, Local is user initialed
CloudStorage: Merge: %{public}@, Remote is user initialed
CloudStorage: Merge: %{public}@, Neither are user initiated, taking the highest priority
CloudStorage: Merge: %{public}@, Both user initialted. Taking based on time: Local Change Time: %{public}@. Remote Change Time: %{public}@
CloudStorage: Merge: %{public}@, Cloud object deleted, removing key
Protected database not available. Listening for availability
Resetting storage. Will remove all user initiated senders and reset cloud storage
Finished upgrade. Marking complete
Protected database became available, will try again
Unable to find object ID to insert before: %{public}@
Unable to find object ID to insert after: %{public}@
Unable to find object ID to replace: %{public}@
Invalid object ID type, expected %{public}@, got %{public}@
Could not load EDImportantMLModel.mlmodelc in the bundle resource
Could not load EDPromotionMLModel.mlmodelc in the bundle resource
softlink:r:path:/System/Library/Frameworks/LinkPresentation.framework/LinkPresentation
EDAccount
ECMailAccount
NSObject
NSCopying
ECAccountPropertyProviding
EDReceivingAccount
EDDeliveryAccount
EDAccountECAccountTransformer
EDAccountRepository
EFLoggable
EDAccountChangeHookResponder
EDActivityPersistence
EDActivityRegistry
EDActivityHookResponder
EMActivityRegistryInterface
EDAddBrandIndicatorsTableUpgradeStep
EDAddDisplayDateColumnUpgradeStep
EDTableUpgradeStep
EDAddMessagesBrandIndicatorColumnUpgradeStep
EDAddMessagesDeletedDateReceivedIndexUpgradeStep
EDAddMessagesFollowUpColumnUpgradeStep
EDAddMessagesSearchableMessageColumnUpgradeStep
EDAddReadLaterTableUpgradeStep
EDAddRebuildTableUpgradeStep
EDAddRemoteContentLinksTableUpgradeStep
EDAddRichLinkTableUpgradeStep
EDAddSearchableDataDetectionResultsTableUpgradeStep
EDAddSendersTableUpgradeStep
EDAddSendLaterTableUpgradeStep
EDAddThreadTablesUpgradeStep
EDAddUnsubscribeFlagsStep
EDAssetDownloadScheduler
_EDAssetDownloadSchedulerContinuation
EDAssetDownloadSchedulerContinuation
EDAttachmentMetadata
EDAttachmentPersistence
EDAttachmentPersistenceManager
EDBIMIManager
EDBiomeInteractionEventLog
EDInteractionEventLog
EDCachingMailboxPredictor
EDMailboxPredictor
EDCategorySubsystem
EDClientResumer
EDProtectedDataReconciliationHookResponder
EFContentProtectionObserver
EDResumable
EDClientState
EDClientStateReporting
EDCloudKitControl
CoreDataProperties
EDCloudMirroringPersistentStore
EDConversationDailyCloudExportActivityManager
EDConversationDailyiCloudExporter
EDConversationInfo
EDConversationMultipleRemoteStorage
EDConversationRemoteStorageDelegate
EDConversationRemoteStorage
EDConversationPersistence
EDUbiquitousConversationManagerDelegate
EDConversationDailyCloudExporterDelegate
EDPersistenceDatabaseSchemaProvider
EDConversationSubscriptionProvider
EDConversationPruningActivityManager
EDConversationRemoteCloudKitStorage
NSFetchedResultsControllerDelegate
EDConversationRemoteKVSStorage
EDDaemonInterfaceFactory
EDDataDetectionPersistence
EDPersistenceDatabaseProtectedSchemaProvider
EDMessageChangeHookResponder
EDDiagnosticInfoGatherer
EMDiagnosticInfoGathererInterface
_MSTTLReference
EDDifferentialPrivacyReporter
EDMessagePersistence
_EMDistantContentRepresentation
EDFetchController
EDGmailLabelPersistence
EDGroupedSenderQueryHandler
EDMessageQueryHelperDelegate
_EDGroupedSenderList
EDHeuristicsMailboxPredictor
EDiCloudAliasSupport
EDInMemoryThread
EDInMemoryThreadQueryHandler
EMCollectionItemIDStateCapturerDelegate
EDInteractionEvent
EDInteractionEventLogLegacyPersistentBitsProvider
EDInteractionEventLogMultiplexer
EDInteractionEventLogSaltProvider
_EDUserActionState
EDInteractionLogger
EDMessageDeliveryHookResponder
EMInteractionLoggerInterface
EDListUnsubscribeHandler
EDLocalActionPersistence
EDMailboxAction
EDMailboxActionPersistence
EDMailboxPersistence
EDMailboxProviderDelegate
EMMailboxTypeResolver
EDMailboxPredictionController
EDMailboxProvider
EDMailboxRepository
EDMailDropMetadataGenerator
WKNavigationDelegate
EDMailDropWebViewScriptHandler
WKScriptMessageHandler
EDMailDynamicDataAsset
EDMessageActionHandler
MEAppExtensionsObserver
EDMessageActionProvider
EDMessageAttachmentMetadata
EFPubliclyDescribable
_EDMessageChangeManagerFlagChange
EDMessageChangeManager
EDMessageCountQueryHandler
EFListStateCapturerDelegate
EDMailboxChangeHookResponder
EMMailboxChangeObserver
EFCancelable
_EDMailboxServerCount
EDMessageDataLayoutManager
EDMessageListItemPredicates
EFSignpostable
EDMailboxPredictionQueryAdapter
EDMessageObjectIDToDatabaseIDConverter
EDMessagePersistenceStatistics
EDMessageQueryEvaluator
EDMessageQueryHandler
_EDMessageItemIDCollector
EDMessageQueryHelper
EDRemindMeNotificationControllerObserver
EDRemoteSearchDelegate
EDSenderBucketChangeHookResponder
EDMessageQueryHelperMessageSource
EDMessageQueryParserObject
EDMessagePredicateParser
EDMessageComparisonPredicateParser
EDMessageCompoundPredicateParser
EDMessageQueryParser
EDMessageQueryTransformer
EDMessageRepository
EDThreadQueryHandlerDelegate
EMMessageRepositoryInterface
EDReconciliationQueryProvider
_EDPartitionedObjectIDs
EDMessageRepositoryQueryHandler
_EDMessageDuplicateInfo
EDMessageTransformer
EDMigrateBlockedSenderEnabledToBlockedSenderActionEnumUpgradeStep
EDMigrateUserDefaultsUpgradeStep
EDNonAcceptingServer
NSXPCListenerDelegate
EDOutgoingMessageRepository
EMOutgoingMessageRepositoryInterface
EDPBGeneratedExtensions
EDPETMessageFrameTypeIntrospectable
EDPBDataSetters
EDPBBaseMessageFields
EDPBInteractionEvent
EDPBInteractionEventAppBackground
EDPBInteractionEventAppLaunch
EDPBInteractionEventAppResume
EDPBInteractionEventCategoryInferred
EDPBInteractionEventCategoryMarked
EDPBInteractionEventFlagChanged
EDPBInteractionEventForwardDraftStarted
EDPBInteractionEventForwardSent
EDPBInteractionEventHeader
EDPBInteractionEventLinkClicked
EDPBInteractionEventMarkedMuteThread
EDPBInteractionEventMessageCopied
EDPBInteractionEventMessageFetched
EDPBInteractionEventMessageMoved
EDPBInteractionEventMessageSent
EDPBInteractionEventMessageViewEnd
EDPBInteractionEventMessageViewStart
EDPBInteractionEventReadChanged
EDPBInteractionEventReplyDraftStarted
EDPBInteractionEventReplySent
EDPBMessageData
EDPBMessageDataIDOnly
EDPBMessageHeaders
EDPBModelFeaturesImportant
EDPBModelFeaturesPromotion
EDPersistedMessageQueryIterator
EDPersistence
EDPersistenceDatabase
EDPersistenceDatabaseConnectionPoolDelegate
EDPersistenceDatabaseConnectionDelegate
EDPersistenceDatabaseConnection
EDPersistenceDatabaseConnectionPool
_EDPersistenceDatabaseConnectionWrapper
EDPersistenceDatabaseGenerationWindow
EDPersistenceDatabaseJournal
EDPersistenceDatabaseJournalManager
EDPersistenceDatabaseSchema
EDPersistenceForeignKeyPlaceholder
EDPersistenceAssociationPlaceholder
EDCloudStorageChangeHookResponder
EDDatabaseChangeHookResponder
EDMessageReadHookResponder
EDSearchableIndexHookResponder
EDThreadChangeHookResponder
EDBrandIndicatorChangeHookResponder
EDPersistenceHookRegistry
EDPersonaPersistenceLayoutManager
EDPETBatchedWrapper
EDPETInteractionEvent
EDPETInteractionEventLog
EDPBHasher
EDPETQuotaReachedEvent
EDPETSubmittedEvent
EDPopulateSendersTableMigrationStep
EDPrecomputedThreadQueryHandler
_EDThreadPositionChangeSet
EDProtectedDatabasePersistence
EDQueryCreator
EDReadLaterCloudStorageChangeElement
EDReadLaterCloudStorage
EMUbiquitouslyPersistedDictionaryDelegate
EDReadLaterCloudStorageDateProvider
EDReadLaterPersistence
EDReadLaterProvider
DefaultEDRemindMeNotificationControllerAlarmDateProvider
EDRemindMeNotificationControllerAlarmDateProvider
EDRemindMeNotificationController
EDRemindMeNotificationControllerEventDelegate
EDRemoteClient
EMDaemonInterfaceXPC
EDRemoteClientResumer
EDRemoteContentCacheConfiguration
EDRemoteContentManager
EDRemoteContentPersistence
EDRemoveUnusedSchemaTableUpgradeStep
EDRenameThreadsTableUpgradeStep
EDRichLinkData
EDRichLinkPersistence
EDSearchableIndex
CSSearchableIndexDelegate
EDSearchableIndexVerifierDataSource
EDSearchableIndexSchedulable
EMSearchableIndexInterface
_EMSearchableIndexResultKey
_EMSearchableIndexPendingRemovals
EDSearchableIndexAttachmentItem
EDIndexableItem
EDSearchableIndexAttachmentItemMetadatum
EDSearchableIndexAttachmentItemMetadatumBuilder
EDSearchableIndexBudgetConfiguration
EDSearchableIndexClientState
EDSearchableIndexItem
EDIndexableMailbox
EDSearchableIndexManager
EDSearchableIndexPendingItem
EDSearchableIndexPersistenceAttachmentDatum
EDSearchableIndexPersistenceRichLinkDatum
EDSearchableIndexPersistence
EDSearchableIndexDataSource
EDSearchableIndexRichLinkItem
EDSearchableIndexRichLinkItemMetadatum
EDSearchableIndexRichLinkItemMetadatumBuilder
EDSearchableIndexScheduler
EDSearchableIndexSchedulableDelegate
EDSearchableIndexSubjectTester
EDSearchableIndexTesting
EDSearchableIndexUpdates
EDSearchableIndexVerifier
EDSearchableIndexVerificationData
EDSearchableMessagesIndexReindexTypeUpgradeStep
EDSenderPersistence
EDProtectedDatabasePersistenceReconciliationMergeHandler
EDSenderRepository
EDSendLaterPersistence
EDDefaultSendLaterUpdateControllerAlarmDateProvider
EDSendLaterUpdateControllerAlarmDateProvider
EDSendLaterUpdateController
EDServer
EDServerRemoteClientsProvider
EDServerMessagePersistenceFactory
EDServerMessagePersistence
EDExistingMessageWithMessageIDHeader
EDSkyAddMessageAttachmentsAndMigrateAttachmentsTableUpgradeStep
EDSmartSortSuggestionsInterface
EDSubjectTokenizer
EDSyncableSettings
EDTableMetadataPersistence
EDTaskScheduler
EDThreadMigrator
_EDThreadMigrationState
EDThreadPersistence
EDThreadScopeManagerDataSource
_EDThreadPersistence_ThreadMessages
_EDThreadPersistence_PersistedThread
_EDThreadPersistence_ThreadScope
_EDThreadPersistence_StatementCache
_EDThreadPersistence_SQLHelper
_EDWrappedMessage
_EDLazyWrappedMessage
_EDThreadQueryUnderlyingHandlers
EDThreadQueryHandler
EDThreadMigratorDelegate
EMMessageListItemQueryResultsObserver
EDThreadReloadSummaryHelper
EDThreadScopeManager
_EDThreadScopeInfo
EDTransactionService
EDUbiquitousConversationManager
EDUpdateThrottler
EDUserNotificationFilter
EDUserNotificationMailboxCutoffController
EDVIPManager
EMVIPManager
EMVIPReader
EDVIPManagerProxy
EMVIPManagerInterface
EDVisibleMessagesReloadRegistry
ECWebContentObserver
EDWebContentParser
EDWebContentParserState
EDWebContentParserResults
EDWidgetUpdateController
MUIBucketEphemeralSenderList
MUIBucketSenderCloudStorage
EMUbiquitouslyPersistedDictionaryDelegate_Private
MUIBucketSendersCloudStorageUpgrader
MUIBucketUnscreenedSendersQueryHandler
EDAdditions
EDImportantMLModelInput
MLFeatureProvider
EDImportantMLModelOutput
EDImportantMLModel
EDPromotionMLModelInput
EDPromotionMLModelOutput
EDPromotionMLModel
indicator
anyObject
ef_compactMapSelector:
specialDestinationMailboxType
preferredLanguages
setFormatOptions:
fetchLastClientStateWithCompletionHandler:
currentDevice
indicatorHash
setReadLater:
messageWasAppended:
ef_containsKeyPath:
preferredLocalizations
currentHandler
setReadLaterDate:
individualActions
spotlightPredicateForPredicate:
ef_countObjectsPassingTest:
prefix
keysOfEntriesPassingTest:
removeLastObject
initWithRepresentedObjectID:
senderList
spotlightQueryExpression
ef_dateHoursAgo:
fetchRemoteMessagesWithQuery:delegate:
currentLocale
setForwarded:
initAsEphemeralID:
initWithResult:table:
partiallyRedactedDictionary:
appendBytes:length:
ef_dateWithTruncatedSeconds
setFoundAttributeResultsBlock:
removeMessages:isGroupEmpty:
initGlobalInstance
setRedirected:
partiallyRedactedStringForString:
initWithResultColumn:table:
ef_enumerateObjectsInBatchesOfSize:block:
appendData:
fetchRequestWithEntityName:
changeFrom:to:
initPlaceholderMapperWithChildren:
ef_filter:
appendFormat:
fileAttributes
changeKeyPaths:forMessages:
previousObject
label
currentPersona
setRelatedUniqueIdentifier:
pathExtension
appendString:
ef_firstObjectPassingTest:
initWithSQLDB:
fileExistsAtPath:
removeObject:
URLWithString:
aa_authToken
setHTMLContentData:
pathForResource:ofType:
ef_flatMap:
setHTTPBody:
initWithActivityType:userInfo:
aa_personID
removeObjectAtIndex:
ef_flatten
sqlQueryForReturnObjectKeypaths:query:propertyMapper:
payload
initWithScheduler:
setHTTPMethod:
labels
removeObjectForKey:
setRemoteID:
fileSize
initWithAngleBracketID:
currentRunLoop
standardUserDefaults
ef_groupBy:
abortTask:
initWithScheduler:eventName:eventHandlerQueue:
labelsToAdd
fileSystemRepresentation
initWithArray:
messagesForRemoteIDs:mailboxURL:
setRemoteID:onMessageWithDatabaseID:
ef_groupedInsertionsByObjectForTargetOrderedSet:inferMoves:
applyFlagChange:toMessagesInDatabase:
initWithSearchableItemIdentifier:snippetHints:
setHasAttachments:
labelsToRemove
fileURLWithPath:
processInfo
currentThread
acceptCommand:
changeStateOfSearchableItemsWithUIDs:toState:
setRemoteIDs:
removeObjectsAtIndexes:
startCatalogDownload:options:then:
ef_hasHost:
changeType
fileURLWithPath:isDirectory:
account
removeObjectsForKeys:
ef_hasScheme:
initWithServerMessageBuilder:
startDate
filename
changedObjectID
removeObjectsInArray:
ef_hexString
startDownload:
changes
lastIndex
progress
removeObjectsInRange:
accountForSender
dataDetectionAttributes
initWithSimpleAddress:messages:originatingQuery:
applyToMessageListItem:
ef_indexWhereObjectWouldBeInserted:usingComparator:
promise
setHasUnflagged:
changesDeletedTo:
filterPredicate
setRepeats:
ef_insertObject:usingComparator:
initWithBase64EncodedString:options:
applyVIPStatus:toMessagesInDatabase:
senders
changesDraftTo:
filteredArrayUsingPredicate:
truncatedSHA256:
setReplied:
removeObserver:name:object:
initWithSource:injectionTime:forMainFrameOnly:
lastObject
changesFlagColorTo:
ef_insertObject:usingComparator:allowDuplicates:
tryLock
setHiddenAdditionalRecipients:
ef_insertObject:usingSortDescriptors:
initWithStartDate:endDate:
propertiesForDataclass:
changesFlaggedTo:
archivedDataWithRootObject:requiringSecureCoding:error:
lastPathComponent
tryLockWhenCondition:
initWithBoost:
initWithStoreBasePath:segmentSize:
ef_insertObjectIfAbsent:usingComparator:
serialDispatchQueueSchedulerWithName:
status
areAnyEmailAddressesBlocked:
changesForKeyPaths:ofItems:
finalizeStatementsWithError:
removeScriptMessageHandlerForName:
setRepresentation
array
serialDispatchQueueSchedulerWithName:qualityOfService:
initWithString:
metadataWithDataRepresentation:
statusCode
ef_insertObjects:before:
changesForwardedTo:
setImapUID:
initWithBytes:length:
ef_isEarlierThanDate:
stopAndWait
initWithSuiteName:
arrayByAddingObjectsFromArray:
changesJunkLevelSetByUserTo:
accountsEmailAddresses
propertyListWithData:options:format:error:
initWithBytesNoCopy:length:freeWhenDone:
string
ef_isEarlierThanOrEqualDate:
changesJunkLevelTo:
arrayByExcludingObjectsInArray:
URLByDeletingLastPathComponent
dataTaskWithRequest:isSynthetic:allowProxying:failOpen:completionHandler:
setRequiresImport:
unarchivedObjectOfClass:fromData:error:
initWithTable:
ef_isLaterThanDate:
stringByAppendingFormat:
arrayWithArray:
finishWithError:
changesReadTo:
performCancelableBlock:
dataUsingEncoding:
unblockEmailAddress:
min:
initWithTable:conflictResolution:
stringByAppendingPathComponent:
arrayWithCapacity:
ef_isLaterThanOrEqualDate:
changesRedirectedTo:
finishWithResult:
unblockEmailAddresses:
serverFlags
setIndexDelegate:
acquire
initWithCapacity:
dataValue
JSONObjectWithData:options:error:
stringByAppendingString:
initWithTable:conflictTarget:
ef_isMoreThanTimeIntervalAgo:
finishWithResult:error:
changesRepliedTo:
arrayWithContentsOfURL:
laterDate:
setResultType:
minusSet:
acquireResource
dataWithContentsOfURL:
initWithTable:where:
stringByRemovingPercentEncoding
arrayWithObject:
ef_isTimeoutError
finished
characterAtIndex:
dataWithContentsOfURL:options:error:
setResultsBlock:
arrayWithObjects:count:
initWithTableName:columnNames:
initWithChangedItems:deletedItems:requiresSynchronizing:
performFetchOfType:mailboxObjectIds:
ef_isUnsignedIntegerString
first
leftExpression
stringByReplacingOccurrencesOfString:withString:options:range:
dataWithJSONObject:options:error:
actionHasChangedAccount:
initWithChildren:sourceColumn:
ef_map:
initWithTableName:columnNames:where:unique:
ascending
checkForNewActionsInMailboxID:
stringFromContact:style:
firstHeaderForKey:
dataWithLength:
leftOuterJoin:on:
initWithChildren:table:additionalColumns:
unifiedContactCountWithError:
initWithTables:
ef_mapSelector:
modelWithContentsOfURL:configuration:error:
stringFromDate:
leftOuterJoin:sourceColumn:targetColumn:
assertIsExecuting:
firstIndex
dataWithPropertyList:format:options:error:
unifiedContactsMatchingPredicate:keysToFetch:error:
ef_mapValues:
modelWithContentsOfURL:error:
assertableSchedulerWithScheduler:
initWithTargetClass:predicate:sortDescriptors:
firstObject
provideDiagnosticsAt:options:completion:
leftShift:by:
unionSet:
moveItemAtURL:toURL:error:
replaceObject:
setInjectedBundleURL:
initWithCoalescingAction:
initWithTargetClass:predicate:sortDescriptors:limit:queryOptions:targetClassOptions:label:
assetProperty:
ef_matchesEverything
firstStatementForMethod:
setInteger:forKey:
stringWithCapacity:
initWithCollectionItemID:mailboxScope:
performSyncBlock:
initWithTargetClass:predicate:sortDescriptors:queryOptions:label:
stringWithContentsOfURL:encoding:error:
replaceObjectAtIndex:withObject:
ef_matchesNothing
associateWithTable:
flagChange
uniqueColumns
replied
initWithColumn:
activeProcessorCount
setInterruptionHandler:
stringWithFormat:
initWithTargetClass:predicate:sortDescriptors:suggestion:limit:queryOptions:label:
associatedColumns
ef_max
serviceForMail
setInterval:
repliedChanged
uniqueIdentifier
initWithColumn:bitExpression:
performVoucherPreservingBlock:
stringWithUTF8String:
ef_mean
checkResourceIsReachableAndReturnError:
flagColor
unlock
setInvalidationHandler:
serviceWithDefaultShellEndpoint
URLForResource:withExtension:
strongToStrongObjectsMapTable
performWhileLocked:
length
setIsBlocked:
flagColorChanged
ef_min
unlockWithCondition:
databaseIDValue
ef_notEmpty
strongToWeakObjectsMapTable
flagColors
lessThan:
children
setIsCCMe:
mutableBytes
initWithCondition:
setScheme:
subarrayWithRange:
initWithTimeInterval:scheduler:startAfter:block:
ef_notSupportedError
flagged
setAccountHandles:
publisherFromStartTime:
mutableCopy
initWithTitle:delegate:
subdataWithRange:
flaggedChanged
ef_observeKeyPath:options:usingBlock:
likely:
dateByAddingTimeInterval:
unregisterExportedObject:interface:
setSecurityMethod:
initWithTitle:itemName:headLimit:tailLimit:delegate:
ef_partition:
setIsLocalAccount:
limit
setSendLaterDate:
dateByAddingUnit:value:toDate:options:
subjectWithoutPrefix
ef_posixLocale
setAccountType:
initWithContainerIdentifier:
initWithType:
ef_prefix:
clearBindingsWithError:
initWithContentsOfFile:encoding:error:
needsPersistentHistory
unscreenedSenderDisplayNamesDidChange:
initWithType:subpredicates:
listIDHash
unsignedIntValue
initWithContentsOfURL:
setSenderBucket:
initWithURL:
unsignedIntegerValue
followUp
queryExpressionFromPredicate:propertyMapper:languages:
setIsToMe:
requestMoreContentBlock
dateSortOrderFromSortDescriptors:
initWithURL:options:error:
ef_reduce:
unsignedLongLongValue
foreignKeyReferences
setIsUpdate:
requestRepresentationWithOptions:delegate:completionHandler:
dateValue
addAddress:
ef_removalsExcludingMoves
initWithURL:requestCount:lastSeen:lastRequested:
setAdditionalRecipients:
setIsVIP:
dateWithTimeIntervalSince1970:
initWithConversationID:
loadData:MIMEType:characterEncodingName:baseURL:
ef_removeObjectsInArray:
initWithUniqueIdentifier:domainIdentifier:attributeSet:
loadFileURL:allowingReadAccessToURL:
initWithConversationID:threadScope:
setSenderList:
dateWithTimeIntervalSinceNow:
ef_removeObjectsPassingTest:
subpredicates
loadPersistentStoresWithCompletionHandler:
unsubscribeType
setAllowsContentJavaScript:
forwarded
requestWithURL:
newBackgroundContext
initWithCount:
ef_renderSQLExpressionInto:
forwardedChanged
setItemsToCopy:
subscribe:
setServerFlags:
debounceResult:
initWithCountLimit:
ef_reverse
from
setItemsToDelete:
attachmentPaths
setShouldAddStoreAsynchronously:
requiredHeadersWithCompletion:
ef_setByRemovingObjectsFromSet:
setItemsToDownload:
substringToIndex:
localTimeZone
setShouldArchiveByDefault:
decideActionForMessage:completionHandler:
initWithData:
persistNewMessages:mailboxURL:oldMessagesByNewMessage:fromSyncing:
substringWithRange:
setArray:
localeIdentifier
ef_sha256String
fullNameWithDatabaseName:
defaultCenter
initWithData:encoding:
_setAdditionalXPCActivityProperties:
setJunkLevel:
success
setAsForeignKeyForString:onDelete:onUpdate:
ef_standardDeviation
location
fullyRedactedStringForString:
setSortDescriptors:
addCancelable:
setJunkLevelSetByUser:
setAsForeignKeyForTable:onDelete:onUpdate:
suggestion
ef_suffix:
future
lock
setSourceIsManaged:
addCancelationBlock:
defaultManager
_setClientNavigationsRunAtForegroundPriority:
ef_temporarilyUnavailableError
setSourceMailboxURL:
newPrivateStreamDefaultConfigurationWithStoreBasePath:
lockBeforeDate:
defaultSearchableIndex
futureWithError:
summary
setLabels:
lockWhenCondition:
ef_timeIntervalSinceDate:
_classForObjectAtArgumentIndex:
setSourceMessage:
insertNewObjectForEntityForName:inManagedObjectContext:
ef_timeoutError
defaultWebpagePreferences
setAttribute:
setLabelsToAdd:
lockWhenCondition:beforeDate:
setSourceRemoteID:
initWithDatabaseID:addresses:contactIdentifier:bucket:
ef_urlByAddingSchemeIfNeeded
insertObject:atIndex:
resetInitialSenderStateWithSentMailboxURLs:contactStore:
persistedMessageID
setLabelsToRemove:
setAttribute:forKey:
queryItemWithName:value:
generateAndRestorePersonaContextWithIdentityString:
definitionWithDatabaseName:
ef_urlByReplacingSchemeWithScheme:
attribute
setAuthors:
queryMetaData:
insertObjects:atIndexes:
URLByAppendingPathComponent:
initWithDate:
addChange:
resetStatusCountsForMailboxWithURL:
em_bestMatchForName:fromContacts:keysToCheck:
suspendableSchedulerWithScheduler:
attributeSet
_initWithConfiguration:
logMessage:
queryOptions
insertValue
getArgumentTypeAtIndex:
closeFile
setStatisticsKind:
_initWithStoreIdentifier:usingEndToEndEncryption:
attributesOfItemAtPath:error:
em_fetchContactForEmailAddress:keysToFetch:createIfNeeded:
setLastModified:
getBytes:range:
_close
addCheckConstraintForExpression:
em_internalErrorWithReason:
authenticationResultsForHeaders:
int64Value
queryString
addChild:withPendingUnitCount:
authenticationServiceIdentifier
intValue
em_internalMessageID
getLocalFileUrl
queryStringByJoiningQueries:withOperand:
resetWithError:
em_itemNotFoundError
integerColumnWithName:nullable:
author
addContentRuleList:
synchronizeFile
getObject
coalesceValue:
setSummary:
nextObject
integerColumnWithName:nullable:defaultValue:
synchronousMessageActionProviderInterface
em_messageIDHeader
code
machineID
autoGenderatedSenderAddresses
noMailboxesScope
deleteAllSearchableItemsWithCompletionHandler:
integerForKey:
systemLocale
em_migrateDefault:
mailAccounts
queryWithExpression:builder:
getResourceValue:forKey:error:
addEntriesFromDictionary:
notEqualTo:
em_searchableIndexQueryGenerator
setBccList:
table
mailDataDirectory
notIn:
restorePersonaWithSavedPersonaContext:
table:column:
setBlockSender:
mailbox
em_stringForQuotingWithCharacter:
raise
result
addFailureBlock:
givenName
notPredicateWithSubpredicate:
initWithDisplayName:handles:handleIdentifier:
em_userDefaults
intersectSet:
column:
rangeValue
initWithDomain:code:userInfo:
setTimeZone:
globalAsyncScheduler
result:
base64EncodedStringWithOptions:
tableForName:
intersectsSet:
setLimit:
setBool:forKey:
mailboxDatabaseIDForURL:
initWithEventName:messageId:payload:
notificationFromRemoteNotificationDictionary:
deleteObject:
setTimeoutIntervalForResource:
globalAsyncSchedulerWithQualityOfService:
baseAccount
resultBeforeDate:error:
read
emailAddressValue
invalidateAndCancel:
tables
columnExistsAtIndex:
addIndex:
deletePersistedMessages:
initWithExpression:
setBrandIndicatorLocation:
columnExpression
emailAddressWithString:
addIndexForColumns:
initWithExpressions:
resultType
setLoaderBlock:
readDataToEndOfFile
baseMailDirectory
targetClass
setBrandIndicatorLocation:andData:
invoke
null
addIndexes:
resultWithTimeout:error:
readDataToEndOfFileAndReturnError:
columnExpressionWithFullName
deleteSearchableItemsWithDomainIdentifiers:completionHandler:
targetClassOptions
initWithExtensionBundleIdentifier:kind:
invokeWithTarget:
emailAddressesFromStrings:invalidAddresses:
columnForName:
setBucket:
readLater
results
nullFuture
deleteSearchableItemsWithIdentifiers:completionHandler:
addIndexesInRange:
initWithFeatureProviderArray:
updateWithCompletedCopyItems:
columnTypeForString:
addInvocationBlock:
setMailConversationID:
nullable
setBundleID:
updateWithCompletedItems:forPhase:
greaterThan:
columns
initWithFileDescriptor:closeOnDealloc:
setMailDateReceived:
mailboxIDForMailboxURL:useNumericSearch:supportsLabels:
setByAddingObjectsFromArray:
combined:
updateWithFailedItems:forPhase:
greaterThanEqualTo:
setMailFlagColor:
initWithFileURL:readOnly:
enableMailTrackingProtection:
reason
isAppleSilicon
groupByColumn:
initWithFirst:second:
deletedChanged
setMailFlagged:
numberFromString:
isBlocked
combinedFlagsForMessageListItemFlags:forDisplay:
setMailGMailLabels:
initWithFormat:
numberOfArguments
groupByColumn:fromTable:
textColumnWithName:collation:nullable:
isCanceled
combinedFlagsForMessageListItems:
mailboxIsAllMail:
uppercaseString
setToList:
setMailMessageID:
initWithFrame:configuration:
addKeyValuePair:with:
numberOfAttachments
encodedHeaders
isCancelled
addLabels:removeLabels:toMessagesInDatabase:
setMailRead:
reverseObjectEnumerator
endDate
initWithGlobalMessageID:
isConstrained
receivingAddresses
setMailRepliedTo:
reverseSortedObjects:limit:
initWithGlobalMessageID:mailboxScope:
threadDictionary
endIndexBatchWithClientState:completionHandler:
numberValue
descriptorForRequiredKeysForStyle:
mailboxObjectID
commandForMessage:
initWithHash:
destinationMailboxURL
numberWithBool:
setCancellationHandler:
isDateInToday:
mailboxObjectIDs
commitTransactionWithError:
numberWithDouble:
destinationMessage
numberWithInt:
setTransferType:
endpoint
mailboxPartOfAllMail:
numberWithInteger:
addNetworkReachableObserver:selector:
userContentController
numberWithLongLong:
setUnsubscribeType:
compare:options:range:
isDirectory
enqueue:
beginIndexBatch
compiled
addObject:
numberWithUnsignedInt:
handleExternalChangesWithAddedOrChangedItems:deletedItems:
entity
isEmailAddressBlocked:
setMailboxTypeResolver:
redirected
handleFailureInFunction:file:lineNumber:description:
numberWithUnsignedInteger:
handleFailureInMethod:object:file:lineNumber:description:
redirectedChanged
setMailboxURL:
completedItems
numberWithUnsignedLong:
initWithIMAPServerMessageBuilder:
beginReceivingEventsWithHandler:
completedUIDs
numberWithUnsignedLongLong:
setCcList:
enumerateBindingIndicesAndValuesUsingBlock:
beginTransaction:error:
_protocolsForObjectAtArgumentIndex:
isEphemeral
userInitiated
mailboxScopeForMailboxObjectIDs:forExclusion:
completionHandlerAdapter
setUseDeviceToDeviceEncryption:
object
diagnosticInformation
rightExpression
_issueCommand:completionHandler:
initWithIdentifier:encrypted:delegate:
enumerateBindingNamesAndValuesUsingBlock:
setMaximumMessageBytes:
handledFailedCopyForMessages:
URLString
dictionary
setUseZoneWidePCS:
object:withMeasure:
mailboxScopeForMailboxType:forExclusion:
rightShift:by:
componentsFromString:
isEqualToActivityWithType:userInfo:
bestAlternativePart:
componentsJoinedByString:
enumerateByteRangesUsingBlock:
mailboxScopeForMailboxTypes:forExclusion:
objectAtIndex:
addObjectsFromArray:
rollbackTransactionWithError:
bimiDataForHeaders:
isEqualToArray:
setUserContentController:
setChangedAttributeResultsBlock:
componentsSeparatedByString:
setMeasure:
mailboxScopeForPredicate:withMailboxTypeResolver:
hasActiveAccounts
isEqualToDate:
initWithIdentifier:name:emailAddresses:
setChildren:
hasAttachments
compoundPredicateType
addObserver:selector:name:object:
objectEnumerator
enumerateIndexesUsingBlock:
isEqualToIndexSet:
bindToStatement:usingIndex:
setClasses:forSelector:argumentIndex:ofReply:
setMessageActionPersistentID:
setUserInfoObject:forKey:
objectForKey:
routingInfo
isEqualToNumber:
enumerateKeysAndObjectsUsingBlock:
dictionaryValue
bindToStatement:usingName:
hasChanges
dictionaryWithCapacity:
mailboxTypes
setUserInitiated:
initWithIndexSet:
objectForKey:generator:
setCompletedCount:totalCount:
enumerateObjectsUsingBlock:
bindingWithString:
isEqualToSet:
setMessageDatabaseIDs:
concatenate:
initWithIndexesInRange:
rowIDColumn
dictionaryWithDictionary:
isEqualToString:
enumerateObjectsWithOptions:usingBlock:
setCompletionBlock:
mailboxURL
condition
dictionaryWithObjects:forKeys:count:
initWithIndicator:location:evidenceLocation:indicatorHash:hashAlgorithm:
setContainerOptions:
isFileURL
enumerateRangesUsingBlock:
configuration
valueForEntitlement:
dictionaryWithObjectsAndKeys:
objectIDFromSerializedRepresentation:
initWithIndividualActions:
runUntilDate:
blobColumnWithName:nullable:
setContentCreationDate:
enumerateRangesWithOptions:usingBlock:
setMessageIds:
valueForKey:
mailboxURLForDatabaseID:
registerDefaults:
dictionaryWithSharedKeySet:
threadScopeForPredicate:withMailboxTypeResolver:
isFullTextSearchableCriterion
setContentURL:
blockEmailAddress:
valueForPropertyType:property:
hasPrefix:
enumerateTagsForString:range:unit:scheme:options:orthography:usingBlock:
save:
objectIDs
registerExportedObject:interface:
initWithItemContentType:
equalTo:
blockEmailAddresses:
verificationContextForMessageData:error:
registerMailAppExtensionsObserver:capabilities:includeDisabled:completion:
mailboxURLsForPredicate:
_crossPlatformUnifiedMeContactWithKeysToFetch:error:
addResult:alias:
error
persistentContainerWithPath:managedObjectModel:
blockSender
mailboxWasPredicted:
setUsername:
addResultColumn:
hasReplyPrefix
errorOnlyCompletionHandlerAdapter
blockedSenderEmailAddresses
initWithKey:ascending:
addResultColumn:alias:
isInternal
persistentStoreDescriptions
setConversationNotificationLevel:
errorWithDomain:code:userInfo:
constantValue
hasSuffix:
initWithKeyName:searchable:searchableByDefault:unique:multiValued:
setValue:forCustomKey:
personaIdentifier
setConversationUUID:
addResultColumn:fromTable:
hasUnflagged
objectValue
setValue:forHTTPHeaderField:
addScriptMessageHandler:name:
initWithLabel:
setCount:
evaluateJavaScript:completionHandler:
body
isLowPowerModeEnabled
objects
setValue:forKey:
initWithLeft:firstValue:secondValue:between:
differenceFromArray:
contactIdentifier
isMailtoOperation
phaseForResults
evaluateReverse:
mainBundle
differenceFromOrderedSet:withOptions:
objectsAtIndexes:
initWithLeft:operator:right:
bodyLength
evaluateWithObject:
isMainThread
hashAlgorithm
mainThreadScheduler
containerURLForSecurityApplicationGroupIdentifier:
initWithLineThroughPoints:
scheduleWithBlock:
boolForKey:
eventBody
regularFileContents
containsDate:
verifyResults:query:
makeObjectsPerformSelector:
discreteProgressWithTotalUnitCount:
setData:onMessage:
containsIndex:
setWhere:
plus:
relatedContentItems
containsIndexes:
dispatchQueueSchedulerWithQueue:
setWhereClause:
initWithMachServiceName:
isMove
postContent
relatedUniqueIdentifier
setWithArray:
_lp_highLevelDomain
markAsDownloaded:userHandle:
addSuccessBlock:
isMyEmailAddressContainedInAddressList:
brandIndicatorLocation
observer:gotVIPs:
setDataDetectorTypes:
containsObject:
relativePath
postNotification:
displayErrorForTransferAction:withResults:
markAsReceived:sender:senderHandle:recipients:recipientHandles:transport:
setWithCapacity:
evidenceLocation
timeIntervalSince1970
postNotificationName:object:
setDataOwnerType:
relativeString
setMuted:
bucket
containsString:
setWithObject:
markAsSent:sender:senderHandle:recipients:recipientHandles:transport:
postNotificationName:object:userInfo:
timeIntervalSinceDate:
exceptionWithName:reason:userInfo:
contentMessage
isNetworkReachable
setWithObjects:
displayMessageItemID
releaseResource:
scheme
initWithMailboxScope:filterPredicate:
timeIntervalSinceNow
postValues
bucketMessageCount:
isNot:
setNavigationDelegate:
matchesMask:
excludeMailboxes
setWithSet:
displayMessageObjectID
scopeContainsMailbox:
vipManager:hasVIPNotificationsEnabledWithCompletion:
isNotNull
timeIntervalSinceReferenceDate
haveCompleteMIMEForMessage:
contentURL
excludeTypes
scopeContainsMailboxObjectID:mailboxTypeResolver:
matchingHints
reload
isNull
setDatabaseID:
excludedColumnExpressionForColumnName:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
max:
set_internalID:
distantFuture
isOpen
weakObjectsHashTable
reloadTimelineWithReason:
distantPast
setDateFormat:
isPartOfExistingThread
weakToStrongObjectsMapTable
headersDictionary
weakToWeakObjectsMapTable
conversationFlags
addUniquenessConstraintForColumns:conflictResolution:
dkimSignatureHeaders
executeFetchRequest:error:
predicate:appliesToFlagChange:
observer:updatedVIPs:removedVIPs:
documentID
addUserScript:
doesNotRecognizeSelector:
sharedKeySetForKeys:
bufferedQueueWithCapacity:batchHandler:
isPredicateForMessagesInMailboxObjectID:mailboxObjectID:
measure
host
addValidSortDescriptorKeyPaths:forTargetClass:
domain
sharedManager
executeRequest:error:
setDeleted
predicateForCCMeMessages
isPredicateForMessagesInMailboxWithType:mailboxType:
bundle
addValue
bundleForClass:
sharedNetworkObserver
isPredicateForMessagesWithActiveFollowUp:accountObjectID:
conversationIDs
predicateForContactsMatchingEmailAddress:
additionalColumns
predicateForContactsMatchingName:
setNextFireDate:isUserVisible:
bytes
setDestinationMailboxURL:
predicateForExcludingMessagesInMailboxesWithTypes:
setNotifyMe:
isReadableFileAtPath:
messageActionPersistentID
observerWithResultBlock:
setDestinationMessage:
predicateForExcludingMessagesWithObjectIDs:
executeStatementString:error:
conversationNotificationLevel
remoteContentManager:didDeferAfterRequesting:
additionalStoreWithIdentifier:
initWithName:
shouldDefer
doubleForKey:
predicateForIsVIP:
setNumberStyle:
remoteContentManager:didFinishAfterRequesting:
initWithName:columns:primaryKeyColumns:
addressDomainFromAddress:
ifNull:second:
isRegularFile
setObject:
remoteContentManagerWillStartRequests:
offsetInFile
initWithName:columns:primaryKeyColumns:conflictResolution:
setObject:atIndexedSubscript:
predicateForMessagesInConversation:
setObject:forKey:
imapUID
downloadedDataByCopyItems
setDisplayDate:
toList
predicateForMessagesInMailboxWithObjectID:
URLWithString:relativeToURL:
isServerSearchResult
setObject:forKeyedSubscript:
_remoteObjectRegistry
afterDelay:performBlock:
oldestPersistedRemoteID
draft
signatureWithObjCTypes:
URLByAppendingPathComponent:isDirectory:
initWithName:object:userInfo:
predicateForMessagesInMailboxWithType:
signingDomainIdentifier
ak_addClientInfoHeader
draftChanged
initWithName:protectionClass:
setDisplayMessageItemID:
predicateForMessagesInMailboxes:
URLForResource:withExtension:subdirectory:
isSubsetOfSet:
remoteID
ak_addDeviceUDIDHeader
drain
initWithName:protectionClass:bundleIdentifier:
executeUsingBlock:error:
writeData:
remoteIDObject
initWithName:rowIDType:columns:
drop
onScheduler:map:
isVIP
executeWithIndexedBindings:usingBlock:error:
setDistinct:
setOldestPersistedRemoteID:
remoteIDs
initWithName:rowIDType:rowIDAlias:columns:
signpostType
messageDatabaseIDs
onScheduler:recover:
predicateForMessagesWithActiveFollowUp
callStackReturnAddresses
setDocumentID:
executeWithNamedBindings:rowsChanged:error:
copy
setOption:forKey:
writeToURL:atomically:
initWithObject:
ea_isLegalEmailAddress
onScheduler:then:
executeWithNamedBindings:usingBlock:error:
callStackSymbols
predicateForMessagesWithActiveFollowUpInAccountsOfMailboxes:mailboxTypeResolver:
setOption:forMirroringKey:
writeToURL:atomically:encoding:error:
copyCurrentPersonaContextWithError:
remoteObjectInterface
oneClickURL
initWithObjectID:builder:
setDouble:forKey:
predicateForMessagesWithActiveFollowUpInSent
copyMessages
UUIDString
writeToURL:options:error:
initWithObjectID:name:hostname:builder:
oneTimePassword
remoteObjectInterfaceWithProtocol:
existingObjectWithID:error:
predicateForMessagesWithObjectIDs:
setDraft:
writeToURL:options:originalContentsURL:error:
allColumns
openApplication:withOptions:completion:
initWithObjectID:originatingQuery:builder:
ec_integerDate
messageIDHeader
ec_messageIDSubstring
initWithObjects:
setPartiallyDownloaded:
allContactEmailAddressesWithError:
predicateForMessagesWithSenders:
messageIDHeaderHash
setPath:
count:
initWithObjectsAndKeys:
openWithError:
removeAddress:
ec_redactedStringForMailboxURL:
setEmailAddresses:
predicateForMessagesWithThreadScope:
countByEnumeratingWithState:objects:count:
initWithOptions:
sinkWithCompletion:receiveInput:
token
expressionForConstantValue:
predicateForReadLaterMessagesWithStartDate:endDate:
setEmailHeaders:
countDidChange:acknowledgementToken:
category
allEmailAddresses
removeAllContentRuleLists
operationQueueSchedulerWithMaxConcurrentOperationCount:
itemsToCopy
tokenWithCancelationBlock:
expressionForKeyPath:
predicateForSendLaterMessagesWithStartDate:endDate:
initWithOptions:completionBlock:
allKeys
countDistinct:
itemsToDelete
searchableItemIdentifier
setExistingThread:
removeAllIndexes
countForObject:
tokenWithLabel:cancelationBlock:
optionsWithDictionary:
initWithPID:flags:reason:name:
sleepUntilDate:
itemsToDownload
expressionType
setExpirationDate:
setPersistentID:
optionsWithRequestedRepresentationType:networkUsage:
snippetHintZoneFromString:
iterateMessagesInMailboxURLs:excludingMessages:batchSize:returnMessagesForFlagChange:handler:
expressionWithQueryString:
tokens
indexOfObject:
orPredicateWithSubpredicates:
tombstone
extensionID
snippetHints
predicateForToMeMessages
indexOfObjectAtIndexes:options:passingTest:
setExportedInterface:
sortDescriptorForDateAscending:
allMailboxObjectIDsWithMailboxTypeResolver:forExclusion:
orderBy:ascending:
predicateFormat
external
setPredicate:
indexOfObjectPassingTest:
setExportedObject:
sortDescriptorWithKey:ascending:
orderByColumn:ascending:
join:
predicateFromPredicate:ignoringKeyPaths:
initWithPrefix:subjectWithoutPrefix:
setFailureBlock:
externalDataTypeIdentifiers
topSalienciesForMailboxId:limit:error:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
initWithPrivateStreamIdentifier:storeConfig:
sortDescriptors
allMailboxesScope
indexSearchableItems:completionHandler:
ef_SQLBinding
join:sourceColumn:targetColumn:
predicateFromPredicate:ignoringPredicates:
orderByColumn:fromTable:ascending:
setPreferredFilename:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
indexSet
UTF8String
sortUsingComparator:
ef_SQLEscapedString
failedItems
predicateOperatorType
indexSetWithIndex:
setPrimaryRecipients:
allObjects
sortUsingDescriptors:
orderedSetWithArray:
secondsFromGMT
ef_SQLExpression
predicateWithFormat:
setFetchAttributes:
setPrimaryiCloudAccount:
indexSetWithIndexesInRange:
familyName
sortUsingSelector:
seekToEndOfFile
ef_SQLIsolatedExpression
setFilename:
transactionAuthor
predicateWithLeftExpression:rightExpression:modifier:type:options:
originalURL
sortedArrayUsingComparator:
seekToFileOffset:
ef_UUID
setFlagChange:
predicateWithValue:
indexesOfObjectsPassingTest:
_willUpgradeToHTTPS:
featureValueWithDictionary:error:
allValues
sortedArrayUsingDescriptors:
ccList
junkLevel
ef_addAbsentObjectsFromArrayAccordingToEquals:
featureValueWithDouble:
sortedArrayUsingSelector:
selector
allocWithZone:
setProcessPool:
ef_addObjectIfAbsent:
junkLevelChanged
setFlagColor:
createdServerMessages
featureValueWithInt64:
setProviderDataTypeIdentifiers:
sendEvent:
sortedArrayWithOptions:usingComparator:
ef_addOptionalObject:
setFlagColors:
junkLevelSetByUser
featureValueWithString:
removeIndex:
setQualityOfService:
source
always:
pairWithFirst:second:
ef_all:
sendLaterDate
UUID
transactionWithDescription:
junkLevelSetByUserChanged
setFlagged:
removeIndexes:
setQueryItems:
csAccountTypeString
featuresAtIndex:
ef_any:
removeIndexesInRange:
predictionsFromBatch:options:error:
parentAccount
sourceMailboxURL
ef_caseInsensitiveIsEqualToString:
and:with:
removeItemAtPath:error:
sourceMessage
parentMailboxID
andPredicateWithSubpredicates:
ef_caseNormalizedURL
preferenceEnabled:
fetchHistoryAfterToken:
setFollowUp:
keyEnumerator
removeItemAtURL:error:
currentCalendar
setRead:
sourceRemoteID
ef_compactMap:
keyPath
preferredFilename
transferType
currentConnection
senderBucket
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
copyWithZone:
accountPropertyForKey:
emailAddressStrings
hostname
setHostname:
password
setPassword:
identifier
systemAccount
T@"NSArray",R,C,N
T@"NSString",C,N
T@"NSString",R,C,N
T@"ACAccount",R,N
canAuthenticateWithCurrentCredentials
hasPasswordCredential
savePersistentAccount
altDSID
statisticsKind
primaryiCloudAccount
isActive
displayName
setDisplayName:
username
TB,R,N
deliveryAccount
setDeliveryAccount:
mailboxForType:
containsMailboxWithURL:
isManaged
sourceIsManaged
emailAddresses
smtpIdentifier
isLocalAccount
shouldArchiveByDefault
rootMailbox
T@"NSArray",R,N
T@"<ECMailbox>",R,N
maximumMessageBytes
TQ,R,N
transformedValueClass
allowsReverseTransformation
transformedValue:
transformAccount:
transformReceivingAccount:
transformDeliveryAccount:
init
T@"NSObject<OS_os_log>",R
accountsAdded:
accountsRemoved:
accountsChanged:
accountBecameActive:
accountBecameInactive:
initWithAccountsProvider:hookRegistry:
allAccounts
registerObserver:completionHandler:
allAccountsWithCompletionHandler:
transformAccounts:
transformer
setTransformer:
accountsProvider
setAccountsProvider:
hookRegistry
setHookRegistry:
.cxx_destruct
_observers
_lock
_transformer
_accountsProvider
_hookRegistry
T@"EDAccountECAccountTransformer",&,N,V_transformer
T@"<EDAccountsProvider>",&,N,V_accountsProvider
T@"EDPersistenceHookRegistry",W,N,V_hookRegistry
initWithHookResponder:
startActivityOfType:userInfo:
currentActivities
activityWithID:finishedWithError:
activityWithID:setUserInfoObject:forKey:
activityWithID:setCompletedCount:totalCount:
activityHookResponder
setActivityHookResponder:
_currentActivities
_activityHookResponder
T@"<EDActivityHookResponder>",&,N,V_activityHookResponder
startedActivity:
removedActivityWithID:
registerActivityObserver:completion:
initWithHookRegistry:activityPersistence:
activityPersistence
_activityPersistence
T@"EDActivityPersistence",R,N,V_activityPersistence
T@"EDPersistenceHookRegistry",R,N,V_hookRegistry
runWithConnection:databaseName:
_brandIndicatorsTableSchema
runWithConnection:
_remoteContentLinksTableSchema
schema
sendersTableSchema
senderAddressesTableSchema
T@"EFSQLSchema",R,N
T@"EFSQLTableSchema",R,N
_schemaWithMessagesTable:mailboxesTable:conversationsTable:
threadScopesTableSchema
threadsTableSchema
threadMailboxesTableSchema
threadSendersTableSchema
threadRecipientsTableSchema
initWithIdentifier:handler:
initWithIdentifier:regularInterval:failureInterval:backOffFactor:handler:
_rescheduleAfterSuccessActivity:
_rescheduleAfterFailureActivity:
_stopSchedulingActivity:
_xpcCriteriaForInterval:
activityHandlerBlock
_nextFailureInterval
_identifier
set_identifier:
_lastFailureIntervalKey
set_lastFailureIntervalKey:
_handler
set_handler:
_regularInterval
set_regularInterval:
_failureInterval
set_failureInterval:
_backOffFactor
set_backOffFactor:
_queue
set_queue:
T@"NSString",C,N,V_identifier
T@"NSString",C,N,V_lastFailureIntervalKey
T@?,C,N,V_handler
Tq,N,V_regularInterval
Tq,N,V_failureInterval
Tq,N,V_backOffFactor
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
T@?,R,N
rescheduleAfterSuccess
rescheduleAfterFailure
stopScheduling
scheduler
setScheduler:
activity
setActivity:
_scheduler
_activity
T@"EDAssetDownloadScheduler",W,N,V_scheduler
T@"NSObject<OS_xpc_object>",&,N,V_activity
initWithAttachmentID:attachmentHash:nameOnDisk:size:downloadDate:viewCount:lastViewed:viewCountByTapped:
initWithAttachmentHash:nameOnDisk:size:downloadDate:
initWithAttachmentID:nameOnDisk:
attachmentID
setAttachmentID:
attachmentHash
nameOnDisk
size
downloadDate
viewCount
lastViewed
viewCountByTapped
_attachmentID
_attachmentHash
_nameOnDisk
_size
_downloadDate
_viewCount
_lastViewed
_viewCountByTapped
T@"NSNumber",&,N,V_attachmentID
T@"NSString",R,N,V_attachmentHash
T@"NSString",R,N,V_nameOnDisk
T@"NSNumber",R,N,V_size
T@"NSDate",R,N,V_downloadDate
T@"NSNumber",R,N,V_viewCount
T@"NSDate",R,N,V_lastViewed
T@"NSNumber",R,N,V_viewCountByTapped
attachmentsTableName
messageAttachmentsTableName
globalMessageIDColumnNameInMessageAttachmentTable
attachmentIDColumnNameInMessageAttachmentsTable
attachmentColumnNameHash
attachmentTableSchema
messageAttachmentTableSchema
tablesAndForeignKeysToResolve:associationsToResolve:
hashForAttachmentData:
hashForAttachmentName:
initWithDatabase:
insertAttachmentMetadata:
insertMessageAttachmentMetadata:
updateAttachmentIDForMessageAttachment:
attachmentsForGlobalMessageIDs:
globalMessageIDsForAttachment:
removeAttachments:
messageAttachmentExistsForGlobalMessageID:mimePartNumber:hasAttachmentEntry:
messageAttachmentExistsForGlobalMessageID:remoteURL:hasAttachmentEntry:
messageAttachmentMetadataForMessageID:
uniqueAttachmentDataForHash:
attachmentMetadataForMessage:mimePartNumber:
attachmentMetadataForMessage:remoteURL:
attachmentMetadataForMessageAttachmentID:
database
setDatabase:
_database
T@"EDPersistenceDatabase",&,N,V_database
attachmentDirectoryURLWithBasePath:
initWithDatabase:messagePersistence:
_updateFileWrapperNameToStaticFileName:
_persistAndUpdateAttachmentPersistenceTableFromFileWrapper:orURL:attachmentMetadata:basePath:shouldUpdateAttachmentID:
persistAttachment:attachmentMetadata:basePath:error:
persistAttachmentWithURL:attachmentMetadata:basePath:error:
_persistAttachmentWithWrapper:orURL:attachmentMetadata:basePath:error:
persistAttachmentMetadata:
removeDatabaseAttachments:
removeFilesystemAttachmentsByAccountIdentifier:
attachmentURLForGlobalMessageID:mimePartNumber:basePath:
attachmentURLForGlobalMessageID:remoteURL:basePath:
attachmentDirectoryURLForMessageID:basePath:
_moveAttachmentAtURL:toURL:outError:
attachmentURLForMessageAttachmentID:basePath:
_writeAttachment:toDirectory:outError:
_writeFileWrapper:toURL:outError:
_tempDirectoryForArchiveAttachmentsWithParentDirectory:
willDeleteAttachmentsForMessages:
_accountIdentifiersByAttachmentIDs:
isDeletingMessages:
persistenceWillDeleteMessages:
persistenceIsDeletingMessages:generationWindow:
attachmentPersistence
messagePersistence
setMessagePersistence:
tempDirectoryForArchiveAttachments
setTempDirectoryForArchiveAttachments:
_attachmentPersistence
_messagePersistence
_tempDirectoryForArchiveAttachments
T@"EDAttachmentPersistence",R,N,V_attachmentPersistence
T@"EDMessagePersistence",&,N,V_messagePersistence
T@"NSURL",&,N,V_tempDirectoryForArchiveAttachments
dealloc
initWithMessagePersistence:urlSession:
scheduleRecurringActivity
test_tearDown
processBIMIHeadersForMessages:
urlSession
downloadScheduler
_activeDataTasksByRequest
_activeDataTasksLock
_urlSession
_downloadScheduler
T@"EDMessagePersistence",R,N,V_messagePersistence
T@"EMRemoteContentURLSession",R,N,V_urlSession
T@"<EFScheduler>",R,N,V_downloadScheduler
globalMessageID
payloadFromData:message:
persistEvent:date:message:data:
persistEvent:date:conversationID:data:
persistEvent:dataFromMessage:
persistEvent:dataFromMessage:account:
persistEvent:date:message:mailbox:
persistEvent:date:message:mailboxType:
donateToBiomeWithEvent:
_stream
_source
persistentID
compare:
ea_uncommentedAddress
predictMailboxIDsForMessages:limit:diagnostics:
initWithPredictor:
invalidatePredictionsAffectedByMessage:
removeAllPredictions
_cacheKeyForMessages:
_trackCacheKey:forPropertyKey:
_propertyKeysForMessage:
predictor
setPredictor:
cache
setCache:
cacheKeysByProperty
setCacheKeysByProperty:
_predictor
_cache
_cacheKeysByProperty
T@"<EDMailboxPredictor>",&,N,V_predictor
T@"NSCache",&,N,V_cache
T@"NSMutableDictionary",&,N,V_cacheKeysByProperty
initWithPersistence:userProfileProvider:vipManager:sourceApplicationBundleIdentifier:
_schedulePETSubmissionActivityForLog:
interactionLogger
petLog
biomeLog
differentialPrivacyReporter
_interactionLogger
_petLog
_biomeLog
_differentialPrivacyReporter
T@"EDPETInteractionEventLog",R,N,V_petLog
T@"EDBiomeInteractionEventLog",R,N,V_biomeLog
T@"EDDifferentialPrivacyReporter",R,N,V_differentialPrivacyReporter
T@"EDInteractionLogger",R,N,V_interactionLogger
signpostLog
persistenceWillReplaceDatabaseID:with:forTable:column:
persistenceDidReconcileProtectedData
contentProtectionStateChanged:previousState:
resumeForUpdates
signpostID
initWithClientBundleIdentifier:hookRegistry:clientState:
invalidate
_bundleID
_assertion
_clientState
ef_publicDescription
sharedInstance
isForeground
isRunningTests
visibleMailboxObjectIDs
TB,R
T@"NSArray",R,C
setIsForeground:
setIsRunningTests:
setVisibleMailboxObjectIDs:
giveBoostWithCompletionBlock:
setStateForDemoMode:
_visibleMailboxObjectIDs
_visibleMailboxesLock
_isForeground
_isRunningTests
fetchRequest
ckRecordID
T@"NSString",C,D,N
ckRecordSystemFields
T@"NSData",&,D,N
migratedFromKVSStorage
TB,D,N
_setupCoreDataStack
performBlock:
performBlockAndWait:
requestImportWithCompletionBlock:
requestExportWithCompletionBlock:
_requestWithKind:completionBlock:
_schedulerForKind:
_executeRequestWithKind:completionBlock:
_wrapCompletion:forRequestKind:
persistentContainer
importScheduler
setImportScheduler:
exportScheduler
setExportScheduler:
managedObjectContext
_persistentContainer
_importScheduler
_exportScheduler
_managedObjectContext
T@"NSPersistentContainer",R,N,V_persistentContainer
T@"EDTaskScheduler",&,N,V_importScheduler
T@"EDTaskScheduler",&,N,V_exportScheduler
T@"NSManagedObjectContext",R,N,V_managedObjectContext
scheduleWithConversationExportDelegate:conversationManager:
initWithDelegate:conversationManager:
delegate
conversationManager
_delegate
_conversationManager
T@"<EDConversationDailyCloudExporterDelegate>",R,N,V_delegate
T@"EDUbiquitousConversationManager",R,N,V_conversationManager
conversationUUID
lastModified
T@"NSDate",C,D,N
messageIds
notifyMe
muted
conversationRemoteStorageDidInitialize:
conversationRemoteStorage:didChangeEntries:reason:
conversationRemoteStorageWillResetData:
conversationRemoteStorageDidResetData:
isInitialized
setDictionary:forKey:
removeDictionaryForKey:
dictionaryForKey:
dictionaryRepresentation
refresh
synchronize
storageName
initWithDelegate:
kvsStorage
_saveChanges:fromStorage:toStorage:synchronize:
_handleStorageReady:
_replicateAllContentFromStore:toStore:synchronize:
setDelegate:
privateQueue
setPrivateQueue:
setKvsStorage:
cloudKitStorage
setCloudKitStorage:
dataReplicationTransaction
setDataReplicationTransaction:
_privateQueue
_kvsStorage
_cloudKitStorage
_dataReplicationTransaction
T@"<EDConversationRemoteStorageDelegate>",W,N,V_delegate
T@"NSObject<OS_dispatch_queue>",&,N,V_privateQueue
T@"<EDConversationRemoteStorage>",&,N,V_kvsStorage
T@"EDConversationRemoteCloudKitStorage",&,N,V_cloudKitStorage
T@"EDTransactionService",&,N,V_dataReplicationTransaction
conversationsTableName
conversationsTableSchema
conversationIDMessageIDTableSchema
conversationNotificationLevelForConversationFlags:
conversationFlagsForConversationNotificationLevel:
syncedConversationIDsBySyncKey
setPersistenceConversationFlags:syncKey:forConversationID:reason:
persistenceConversationFlagsForConversationID:
conversationIDForMessageIDs:
messageIDsForConversationID:limit:
remoteMessageIDsAdded:forConversationID:
pruneConversationTables:
clearConversationFlagsAndSyncKeyForConversationIDs:
previousSyncAnchorForDailyExport
currentSyncAnchorForDailyExport
setNewPreviousSyncAnchorForDailyExport:
flaggedConversationsChangedBetweenStartAnchor:endAnchor:
hasSubscribedConversations
initWithDatabase:hookRegistry:
initializeConversationManagerAndPerformInitialSync
createConversationWithFlags:
markConversationWithIDs:mute:
markConversationWithIDs:notify:
setPersistenceConversationFlags:forConversationIDs:reason:
updateAssociationTableForMessagePersistentIDs:conversationID:
updateAssociationTableForMessageIDs:conversationID:
updateAssociationTableForMessageID:dateSent:conversationID:
updateConversationNotificationLevel:forConversationIDs:
_notifyOfFlagChangeForConversationID:oldFlags:newFlags:reason:generationWindow:
_postChangeNotificationForConversationID:flags:oldFlags:reason:
notificationQueue
setNotificationQueue:
_notificationQueue
T@"EDPersistenceDatabase",R,W,N,V_database
T@"NSObject<OS_dispatch_queue>",&,N,V_notificationQueue
scheduleWithConversationManager:
_handleWillResetSyncDataNotification:
_handleDidResetSyncDataNotification:
_handlePushNotification:
cloudKitAPSTopics
controller:didChangeContentWithSnapshot:
controller:didChangeContentWithDifference:
controller:didChangeObject:atIndexPath:forChangeType:newIndexPath:
controller:didChangeSection:atIndex:forChangeType:
controllerWillChangeContent:
controllerDidChangeContent:
controller:sectionIndexTitleForSectionName:
_initialSetup
_requestExportWithManagedObjectContext:
_requestImportWithManagedObjectContext:
_requestFirstSyncWithManagedObjectContext:
isMigratedFromKVSStorage
setMigratedFromKVSStorage:
entityForConversationDictionary:key:managedObjectContext:
dictionaryForConversationInfo:
persistHistoryToken
_recoverHistoryToken
_handleDuplicationsForConversationUUIDs:managedObjectContext:
_conversationInfoWithUUID:managedObjectContext:
_conversationInfosWithUUID:managedObjectContext:
_addOrUpdateConversationInfo:managedObjectContext:
_updateConversationInfo:withAnotherConversationInfo:
_removeConversationInfoWithId:managedObjectContext:
_removeConversationInfoWithObjectId:save:managedObjectContext:
allConversationInfosInManagedObjectContext:
_controlInManagedObjectContext:
_retrieveChangesSinceLastRequestInManagedObjectContext:
enumerateChangeHistorySinceToken:managedObjectContext:usingBlock:
_transactionHistorySinceToken:managedObjectContext:error:
_conversationInfoWithObjectId:managedObjectContext:
mirroringPersistentStore
fetchedResultsController
setInitialized:
historyToken
setHistoryToken:
exportTransaction
setExportTransaction:
importTransaction
setImportTransaction:
_initialized
_mirroringPersistentStore
_fetchedResultsController
_historyToken
_exportTransaction
_importTransaction
T@"EDCloudMirroringPersistentStore",R,N,V_mirroringPersistentStore
T@"NSFetchedResultsController",R,N,V_fetchedResultsController
initialized
TB,N,GisInitialized,V_initialized
T@"NSPersistentHistoryToken",&,N,V_historyToken
T@"EDTransactionService",&,N,V_exportTransaction
T@"EDTransactionService",&,N,V_importTransaction
TB,D,N,GisMigratedFromKVSStorage
_storeChangedExternally:
subsetOfMessageIDsToSyncFromMessageIDString:
kvStore
setKvStore:
_kvStore
T@"NSUbiquitousKeyValueStore",&,N,V_kvStore
initWithPersistence:categorySubsystem:
newAccountRepository
newMailboxRepository
newMessageRepositoryWithResumable:
newFetchController
newOutgoingMessageRepository
newSenderRepository
newSearchableIndex
sharedInteractionLogger
sharedDonationController
newVIPManagerInterface
newActivityRegistry
newDiagnosticInfoGathererWithServerRemoteClientsProvider:
newClientResumerWithClientState:
persistence
categorySubsystem
setCategorySubsystem:
_persistence
_categorySubsystem
T@"EDCategorySubsystem",&,N,V_categorySubsystem
T@"EDPersistence",R,N,V_persistence
persistenceDidAddDataDetectionResults:generationWindow:
protectedTablesAndForeignKeysToResolve:
_dataDetectionResultsTableSchemaWithName:
persistenceWillBeginUpdates
persistenceDidFinishUpdates
persistenceWillAddMessage:fromExistingMessage:
persistenceIsAddingMessages:journaled:generationWindow:
persistenceDidAddMessages:generationWindow:
persistenceDidReconcileJournaledMessages:generationWindow:
persistenceDidUpdateData:message:
persistenceDidUpdateProperties:message:generationWindow:
persistenceDidDeleteMessages:generationWindow:
persistenceIsDeletingAllMessagesInMailboxWithURL:generationWindow:
persistenceDidDeleteAllMessagesInMailboxesWithURLs:generationWindow:
persistenceWillChangeFlags:messages:
persistenceIsChangingFlags:messages:generationWindow:
persistenceDidChangeFlags:messages:generationWindow:
persistenceWillChangeReadLaterDate:messages:
persistenceDidChangeReadLaterDate:messages:changeIsRemote:generationWindow:
persistenceDidUpdateSendLaterDate:messages:generationWindow:
persistenceDidUpdateFollowUpForMessages:generationWindow:
persistenceWillUpdateDisplayDateForMessages:
persistenceIsUpdatingDisplayDateForMessage:fromDate:generation:
persistenceDidUpdateDisplayDateForMessages:changeIsRemote:generation:
persistenceDidChangeVIPStatus:messages:
persistenceDidChangeConversationNotificationLevel:conversationID:generationWindow:
persistenceDidAddLabels:removeLabels:messages:generationWindow:
persistenceWillChangeConversationID:messages:
persistenceIsChangingConversationID:messages:generationWindow:
persistenceDidChangeGlobalMessageID:orConversationID:message:generationWindow:
persistenceWillTransferMessages:transferType:destinationMailboxURL:userInitiated:
initWithDatabase:messagePersistence:hookResponder:
addDataDetectionResults:globalMessageID:
_addDataDetectionResults:withGlobalMessageID:toTable:withConnection:
getDataDetectionResultsForGlobalMessageID:
getDataDetectionResultRowIDsForGlobalMessageID:
_getPersistedMessagesFromGlobalMessageID:
_hookResponderRespondsToRequiredMethods:
hookResponder
_hookResponder
T@"EDPersistenceDatabase",R,N,V_database
T@"<EDMessageChangeHookResponder>",R,W,N,V_hookResponder
registerDiagnosticInfoProvider:completionHandler:
gatherDiagnosticsWithOptions:completionHandler:
fetchControllerStatusWithCompletionHandler:
databaseStatisticsWithCompletionHandler:
initWithFetchController:remoteClientsProvider:persistence:
diagnosticInfoProvider
setDiagnosticInfoProvider:
remoteClientsProvider
setRemoteClientsProvider:
fetchController
gathererQueue
setGathererQueue:
setPersistence:
_diagnosticInfoProvider
_remoteClientsProvider
_fetchController
_gathererQueue
T@"<EMDiagnosticInfoProvidingXPC>",&,N,V_diagnosticInfoProvider
T@"<EDServerRemoteClientsProvider>",&,N,V_remoteClientsProvider
T@"EDFetchController",R,N,V_fetchController
T@"<EFScheduler>",&,N,V_gathererQueue
T@"EDPersistence",&,N,V_persistence
initWithTTL:
getValueWithGenerator:
value
setValue:
setTtl:
lastSet
setLastSet:
_value
_ttl
_lastSet
T@,&,N,V_value
Td,N,V_ttl
T@"NSDate",&,N,V_lastSet
initWithUserProfileProvider:
reportSenderDomainForMessages:
_shouldRecordMailbox:
_isUserAccountDomain:
_recordSenders:
_recordingKey
_localeIdentifier
set_recordingKey:
_userDomains
set_userDomains:
_profileProvider
set_profileProvider:
_mailDynamicData
set_mailDynamicData:
recordingHandler
setRecordingHandler:
recordingQueue
setRecordingQueue:
_recordingHandler
_recordingQueue
T@?,C,N,V_recordingHandler
T@"NSObject<OS_dispatch_queue>",&,N,V_recordingQueue
T@"NSString",&,N,V_recordingKey
T@"<EMUserProfileProvider>",W,N,V_profileProvider
T@"_MSTTLReference",&,N,V_userDomains
T@"EDMailDynamicDataAsset",&,N,V_mailDynamicData
requestRepresentationForItemWithObjectID:options:delegate:completionHandler:
requestUpdatedRepresentationWithCompletion:
performUnsubscribeAction:completion:
initWithAccountsProvider:
labelURLForDatabaseID:
labelForDatabaseID:
initWithQuery:messagePersistence:hookRegistry:remindMeNotificationController:observer:observationIdentifier:
tearDown
start
cancel
objectID
queryHelper:didFindMessages:
queryHelperDidFindAllMessages:
queryHelper:didAddMessages:
queryHelper:messageFlagsDidChangeForMessages:
queryHelper:conversationIDDidChangeForMessages:fromConversationID:
queryHelper:conversationNotificationLevelDidChangeForConversation:conversationID:
queryHelper:objectIDDidChangeForMessage:oldObjectID:oldConversationID:
queryHelper:didUpdateMessages:forKeyPaths:
queryHelper:didDeleteMessages:
queryHelperDidFinishRemoteSearch:
queryHelperNeedsRestart:
initWithQuery:messagePersistence:hookRegistry:remindMeNotificationController:observer:observationIdentifier:keepMessagesInListOnBucketChange:
groupedSenderForObjectID:
resultsObserverIfUncanceled
_messagesWereAdded:
_messagesWereChanged:forKeyPaths:deleted:
_notifyResultsObserverOfChangesToVisibleGroupedSendersFrom:to:logMessage:
_filterGroupedSenderChanges:withVisibleSenders:
_messageQueryFromGroupedQuery:
_queryHelperIsCurrent:
filteredMailboxScope
messageQueryHelper
setMessageQueryHelper:
groupedSenders
setGroupedSenders:
resultQueue
didCancel
setDidCancel:
keepMessagesInListOnBucketChange
setKeepMessagesInListOnBucketChange:
_didCancel
_keepMessagesInListOnBucketChange
_filteredMailboxScope
_messageQueryHelper
_groupedSenders
_resultQueue
T@"EDMessageQueryHelper",&,N,V_messageQueryHelper
T@"<EMMessageListItemQueryResultsObserver>",R,N
T@"_EDGroupedSenderList",&,N,V_groupedSenders
T@"<EFScheduler>",R,N,V_scheduler
T@"NSObject<OS_dispatch_queue>",R,N,V_resultQueue
TB,V_didCancel
TB,N,V_keepMessagesInListOnBucketChange
T@"EMThreadScope",R,N,V_filteredMailboxScope
initWithSortDescriptors:
count
objectAtIndexedSubscript:
groupedSenderAtIndex:
objectForKeyedSubscript:
groupedSenderForSenderAddress:
orderedGroupedSendersWithLimit:
addGroupedSender:
removeGroupedSender:
_checkConsistencyAndRebuildIfNecessary
_groupsBySender
_orderedGroups
_comparator
initWithUserProfileProvider:queryAdapter:
initWithUserProfileProvider:queryAdapter:parameters:
_mergeDefaultParameters:withParameters:
_modeParameterIs:
_predictionsForMessage:limit:
_orderedModePredictionForMessage:
_summedWeightedPredictionsForMessage:limit:
_weightedModePredictionsForMessage:
_countsForField:message:
_limitToRecents
_groupedMessagesCountByMailboxMatchingQuery:variable:
_conversationIDCountsForMessage:
_senderCountsForMessage:
_listIDCountsForMessage:
_recipientCountsForMessage:
_userCreatedMailboxIDs
_removeSpecialMailboxesInCounts:message:
_topHitFromMailboxDictionary:
_topHitFromMailboxDictionary:message:
_objectWithMeasure:timesHigherThanFollowUpInMeasures:
_normalizedTermFrequencyTopHitFromDictionary:withThreshold:
_isAllowedRecipient:
_allowedRecipientsForMessage:
userProfileProvider
setUserProfileProvider:
library
setLibrary:
parameters
setParameters:
mailboxIDCache
setMailboxIDCache:
debugLog
setDebugLog:
_userProfileProvider
_library
_parameters
_mailboxIDCache
_debugLog
T@"<EMUserProfileProvider>",&,N,V_userProfileProvider
T@"<EDMailboxPredictionQueryAdapter>",&,N,V_library
T@"NSDictionary",&,N,V_parameters
T@"NSCache",&,N,V_mailboxIDCache
T@"NSMutableString",&,N,V_debugLog
initWithAppleAccount:
aliasLookupURL
aliasUserAgent
aliasAuthorizationHeader
anisetteDataWithError:
pushUpdateForAliasDataWithEmailAddresses:defaultEmailAddress:
_prepareAliasDataForEmailAddresses:defaultEmailAddress:
appleAccount
_appleAccount
T@"ACAccount",R,N,V_appleAccount
T@"NSURL",R,N
T@"NSString",R,N
_dateSortDescriptors
initWithMessages:originatingQuery:mailboxTypeResolver:
_createThreadWithObjectID:
messages
newestMessage
addMessages:
_addMessagesToThread:
changeMessages:forKeyPaths:threadIsEmpty:
removeMessages:threadIsEmpty:
updateMessage:fromOldObjectID:
_calculateChangesAfterRemovingMessages:applyingChanges:threadIsEmpty:
_calculateAndApplyChange
_isSortedByDate:
_combinedReadLater
_combinedSenderList
_combinedToList
_combinedCCList
_combinedFlags
_combinedHasUnflagged
_combinedFlagColors
_combinedIsVIP
_combinedIsBlocked
_combinedHasAttachments
_combinedMailboxes
_combinedSenderBucket
_recalculateDisplayMessage
_dateSortedMessages
thread
setThread:
threadScope
originatingQuery
mailboxTypeResolver
displayMessage
setDisplayMessage:
_messages
_thread
_threadScope
_originatingQuery
_mailboxTypeResolver
_displayMessage
T@"EMThreadScope",R,N,V_threadScope
T@"EMThread",&,N,V_thread
T@"EFQuery",R,N,V_originatingQuery
T@"<EMMailboxTypeResolver>",R,N,V_mailboxTypeResolver
T@"EMMessage",R,N
T@"EMMessage",&,N,V_displayMessage
_blockedSendersDidChange:
_vipsDidChange:
labelForStateCapture
itemIDsForStateCaptureWithErrorString:
initWithQuery:messagePersistence:hookRegistry:remindMeNotificationController:vipManager:remoteSearchProvider:observer:observationIdentifier:observationResumer:
resultsObserverIfNotPaused
_prepareToSendUpdates
_didSendUpdates
_refreshObserver
_restartHelper
_createHelperAndReconcileJournal:
_contentProtectionChangedToLocked
_contentProtectionChangedToUnlocked
threadForObjectID:error:
messagesForThread:
_messagesByConversationIDForMessages:
_mergeInThreads:forMove:
_reportChanges:
_reportDeletes:
_removeThreadsForInMemoryThreads:forMove:
_initializeOldestThreadsByMailbox
_updateCurrentOldestThreadWithThreadIfApplicable:forMailbox:
_didMergeInThreads:
_threadsWereDeleted
_updateOldestThreadsForMailboxes:
_notifyObserverOfOldestThreadsByMailboxObjectIDs
_messageQueryFromThreadsQuery:
_inMemoryThreadSortDescriptorsForThreadSortDescriptors:
_messageListItemChangeAffectsSorting:
vipManager
remoteSearchProvider
messageSortDescriptors
comparator
updateThrottler
reloadSummaryHelper
contentProtectionQueue
setIsInitialized:
isPaused
setIsPaused:
hasChangesWhilePaused
setHasChangesWhilePaused:
mailboxScope
stateCapturer
_conversationIDs
_threadsByConversationID
_changesWhilePaused
_oldestThreadsByMailboxObjectIDs
_processTransaction
_threadsLock
_isInitialized
_isPaused
_hasChangesWhilePaused
_vipManager
_remoteSearchProvider
_messageSortDescriptors
_updateThrottler
_reloadSummaryHelper
_contentProtectionQueue
_mailboxScope
_stateCapturer
T@"EDVIPManager",R,N,V_vipManager
T@"<EDRemoteSearchProvider>",R,N,V_remoteSearchProvider
T@"NSArray",R,C,N,V_messageSortDescriptors
T@?,R,N,V_comparator
T@"EDUpdateThrottler",R,N,V_updateThrottler
T@"EDThreadReloadSummaryHelper",R,N,V_reloadSummaryHelper
T@"NSObject<OS_dispatch_queue>",R,N,V_contentProtectionQueue
TB,N,V_didCancel
TB,N,V_isInitialized
TB,N,V_isPaused
TB,N,V_hasChangesWhilePaused
T@"EMMailboxScope",R,N,V_mailboxScope
T@"EMCollectionItemIDStateCapturer",R,N,V_stateCapturer
eventID
setEventID:
version
setVersion:
date
setDate:
accountID
setAccountID:
mailboxID
setMailboxID:
conversationID
setConversationID:
messageIDHash
setMessageIDHash:
messagePersistentID
setMessagePersistentID:
name
setName:
data
setData:
_eventID
_version
_date
_accountID
_mailboxID
_conversationID
_messageIDHash
_messagePersistentID
_name
_data
Tq,N,V_eventID
Tq,N,V_version
T@"NSDate",&,N,V_date
T@"NSString",C,N,V_accountID
Tq,N,V_mailboxID
Tq,N,V_conversationID
Tq,N,V_messageIDHash
Tq,N,V_messagePersistentID
T@"NSString",C,N,V_name
T@"NSDictionary",C,N,V_data
_persistentBits
_oldSalt
_findExistingSaltError:
_queryKeychainError:
initWithLogs:
logs
setLogs:
_logs
T@"NSArray",&,N,V_logs
saltProviderWithString:
saltProviderFromKeyChain
salt
_findOrCreateSalt
_createSalt
_deleteSalt
migrateAccessClass
setSalt:
_salt
T@"NSData",&,N,V_salt
viewingStarted
setViewingStarted:
message
setMessage:
scrolledToEnd
setScrolledToEnd:
mutedThread
setMutedThread:
setKey:
cellStyle
setCellStyle:
messageListType
setMessageListType:
setRow:
_scrolledToEnd
_mutedThread
_viewingStarted
_message
_key
_cellStyle
_messageListType
_row
T@"NSDate",&,N,V_viewingStarted
T@"<ECMessage>",&,N,V_message
TB,N,V_scrolledToEnd
TB,N,V_mutedThread
T@"NSString",C,N,V_key
T@"NSString",C,N,V_cellStyle
T@"NSString",C,N,V_messageListType
Tq,N,V_row
_conversationFlagsChanged:
deliveredMessage:account:
logEvent:date:messageID:data:
logEvent:date:data:
initWithMessagePersistence:mailboxPersistence:eventLog:
composeReplyStartedForMessage:
composeFowardStartedForMessage:
composedMessageSent:account:
_composeStartedForMessage:eventName:
scrolledToEndOfMessage:
viewingStartedForMessage:
viewingEndedForMessage:
_logMessageListDisplayStartedMessage:now:type:row:cellStyle:
_logMessageListDisplayEndedForState:now:
_range:minusRange:
messageListDisplayVisibleRowsChanged:
messageListDisplayStartedForMessage:messageListType:row:cellStyle:
messageListDisplayEndedForMessage:cellStyle:
messageListDisplayEndedForAllMessages
movedMessages:toMailbox:
movedMessages:toMailboxType:
archivedMessages:
deletedMessages:
copiedMessages:toMailbox:
clickedLinkInMessage:scheme:
_stateForMessage:extra:container:
applicationLaunched
applicationWillSuspend
applicationWillResume
_viewingEndedForAllMessages
waitForPendingStateChanges
_viewedMessages
set_viewedMessages:
_messageListMessages
set_messageListMessages:
_messageListVisibleRows
set_messageListVisibleRows:
_stateTrackingQueue
set_stateTrackingQueue:
_eventLog
set_eventLog:
mailboxPersistence
setMailboxPersistence:
processingQueue
setProcessingQueue:
_mailboxPersistence
_processingQueue
T@"NSMutableDictionary",&,N,V_viewedMessages
T@"NSMutableDictionary",&,N,V_messageListMessages
T{_NSRange=QQ},N,V_messageListVisibleRows
T@"NSObject<OS_dispatch_queue>",&,N,V_stateTrackingQueue
T@"EDMailboxPersistence",&,N,V_mailboxPersistence
T@"<EDInteractionEventLog>",&,N,V_eventLog
T@"NSObject<OS_dispatch_queue>",&,N,V_processingQueue
detector
ignoreWithCommand:completion:
unsubscribeWithCommand:completion:
unsubscribeMailtoWithCommand:completion:
unsubscribeHTMLWithCommand:timeout:completion:
_detector
_detectorLock
T@"EMListUnsubscribeDetector",R,N
localMessageActionsTableSchema
actionMessagesTableSchema
actionLabelsTableSchema
actionFlagsTableSchema
initWithDatabase:gmailLabelPersistence:
messageActionsForAccountURL:previousActionID:
_transferActionForRow:connection:failedMessages:
_transferUndownloadedActionForRow:connection:
_flagChangeActionForRow:connection:
_flagChangeAllActionForRow:connection:
_labelChangeActionForRow:connection:
_findMessagesForAction:remoteIDs:messages:connection:
_flagChangeForAction:connection:
messageForDatabaseID:
persistFlagChangeAction:
persistFlagChangeUndownloadedAction:
_addFlagChange:actionID:connection:
persistTransferAction:
persistTransferUndownloadedAction:
persistLabelChangeAction:
_setLabelsOnAction:labels:add:connection:
_addActionMessageForMessage:destinationMessage:actionID:actionPhase:connection:
_addActionMessageForSourceRemoteID:actionID:connection:
updateTransferAction:withResults:
moveSupportedFromMailboxURL:toURL:
mailboxURLIsInRemoteAccount:
_updateCopyItems:toPhase:actionID:connection:
_deleteCopyItems:actionID:connection:
_whereClauseToFindCopyItems:
_sourceRemoteIDListForCopyItems:
updateTransferUndownloadedMessageAction:withResults:
updateFlagChangeAction:withRemainingUIDs:
removeMessageAction:
gmailLabelPersistence
_gmailLabelPersistence
T@"EDGmailLabelPersistence",R,N,V_gmailLabelPersistence
actionID
setActionID:
actionType
setActionType:
mailboxName
setMailboxName:
renamedMailboxName
setRenamedMailboxName:
_actionID
_actionType
_mailboxName
_renamedMailboxName
Tq,N,V_actionID
Tq,N,V_actionType
T@"NSString",C,N,V_mailboxName
T@"NSString",C,N,V_renamedMailboxName
saveMailboxActionForAccountID:action:
allMailboxActionForAccountID:
nextMailboxActionForAccountID:
deleteMailboxAction:
deleteMailboxActions:
mailboxListInvalidated
mailboxObjectIDsForMailboxType:
mailboxTypeForMailboxObjectID:
allMailboxObjectIDs
T@"NSSet",R,N
initWithMailboxProvider:
allMailboxes
allMailboxesWithCompletionHandler:
userCreatedMailboxObjectIDs
fetchMailboxLists
legacyMailboxForMailboxURL:
legacyMailboxForObjectID:
mailboxDatabaseIDsForMailboxObjectIDs:createIfNecessary:
serverCountsForMailboxScope:block:
addChangeObserver:withIdentifier:
removeChangeObserverWithIdentifier:
createMailbox:parentMailboxID:
deleteMailbox:
moveMailbox:newParentMailboxID:
renameMailbox:newName:
changeObserversByIdentifier
setChangeObserversByIdentifier:
mailboxProvider
setMailboxProvider:
_changeObserversByIdentifierLock
_changeObserversByIdentifier
_mailboxProvider
T@"NSMutableDictionary",&,N,V_changeObserversByIdentifier
T@"EDMailboxProvider",&,N,V_mailboxProvider
initWithMessagePersistence:mailboxPersistence:hookRegistry:userProfileProvider:
persistenceWillAddNewMessage:fromExistingMessage:
predictMailboxForMovingObjectIDs:completionHandler:
_predictMailboxForMovingMessages:cancelationToken:completionHandler:
_processPredictionForMessages:
_accountsForMessages:
_invalidateCacheForAddedMessage:
_createPredictor
queryAdapter
cachingPredictor
_queryAdapter
_cachingPredictor
T@"<EDMailboxPredictionQueryAdapter>",R,N,V_queryAdapter
T@"NSObject<OS_dispatch_queue>",R,N,V_processingQueue
T@"EDCachingMailboxPredictor",R,N,V_cachingPredictor
T@"EDMailboxPersistence",R,N,V_mailboxPersistence
T@"<EMUserProfileProvider>",R,N,V_userProfileProvider
enumerateAccountsWithBlock:
_populateCache
_transformMailbox:legacyMailboxToMailboxMap:objectIDToLegacyMailboxMap:
fetchMailboxes
_fetchMailboxesForAccount:
mailboxFromLegacyMailbox:
mailboxesFromLegacyMailboxes:
mailboxForObjectID:
legacyMailboxesForObjectIDs:
_beginDeferringInvalidation
_endDeferringInvalidation
_isDeferringInvalidation
_willReloadMailboxList:
_didReloadMailboxList:
_didChangeMailboxList:
_willFetchMailboxList:
_didFetchMailboxList:
_mailboxInvalidated:
_invalidateCache
invalidateMailboxes
legacyMailboxToMailboxMap
setLegacyMailboxToMailboxMap:
objectIDToLegacyMailboxMap
setObjectIDToLegacyMailboxMap:
allMailboxCache
setAllMailboxCache:
mailboxCacheQueue
observerScheduler
setObserverScheduler:
_deferringInvalidationCount
_needsToInvalidate
_legacyMailboxToMailboxMap
_objectIDToLegacyMailboxMap
_allMailboxCache
_mailboxCacheQueue
_observerScheduler
T@"<EDAccountsProvider>",W,N,V_accountsProvider
T@"NSMapTable",&,V_legacyMailboxToMailboxMap
T@"NSMapTable",&,V_objectIDToLegacyMailboxMap
T@"NSArray",&,V_allMailboxCache
T@"NSObject<OS_dispatch_queue>",R,N,V_mailboxCacheQueue
T@"<EFScheduler>",&,N,V_observerScheduler
T@"<EDMailboxProviderDelegate>",W,N,Vdelegate
initWithMailboxPersistence:
getMailboxesWithCompletion:
startObservingMailboxChangesWithChangeObserver:observationIdentifier:
cancelObservation:
performMailboxChangeAction:completionHandler:
refreshMailboxList
mailboxObjectIDsForMailboxType:completionHandler:
mailboxTypeForMailboxObjectID:completionHandler:
_performCreateMailboxChangeAction:
_performDeleteMailboxChangeAction:
_performMoveMailboxChangeAction:
_performRenameMailboxChangeAction:
serializationQueue
_serializationQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_serializationQueue
webView:decidePolicyForNavigationAction:decisionHandler:
webView:decidePolicyForNavigationAction:preferences:decisionHandler:
webView:decidePolicyForNavigationResponse:decisionHandler:
webView:didStartProvisionalNavigation:
webView:didReceiveServerRedirectForProvisionalNavigation:
webView:didFailProvisionalNavigation:withError:
webView:didCommitNavigation:
webView:didFinishNavigation:
webView:didFailNavigation:withError:
webView:didReceiveAuthenticationChallenge:completionHandler:
webViewWebContentProcessDidTerminate:
webView:authenticationChallenge:shouldAllowDeprecatedTLS:
webView:navigationAction:didBecomeDownload:
webView:navigationResponse:didBecomeDownload:
withTimeout:do:completion:
generateMailDropMetadataForContentURL:completionHandler:
tearDownWebView
_shouldSearchForMailDropNodesInFileURL:
_findMailDropNodesInFileURL:promise:
insertMailDropAttachmentViewForContentURL:HTMLByContentID:completionHandler:
_addScriptHandlerForKey:handler:
webView
setWebView:
scriptHandlers
setScriptHandlers:
activePromise
setActivePromise:
_webView
_scriptHandlers
_activePromise
T@"WKWebView",&,N,V_webView
T@"NSMutableArray",&,N,V_scriptHandlers
T@"EFPromise",&,N,V_activePromise
userContentController:didReceiveScriptMessage:
handler
setHandler:
T@"WKWebView",W,N,V_webView
_ignoredDomainsFallback
shouldIgnoreDomain:
_updateIgnoredDomains:
_downloadAssetCatalogWithCompletion:
_queryForAssetWithCompletion:
_updateStateFromAsset:
shouldIgnoreUserAccountDomains
setShouldIgnoreUserAccountDomains:
ignoredDomains
setIgnoredDomains:
_shouldIgnoreUserAccountDomains
_ignoredDomains
TB,V_shouldIgnoreUserAccountDomains
T@"NSSet",&,V_ignoredDomains
T@"EDAssetDownloadScheduler",&,N,V_scheduler
extensionsMatched:
extensionsNoLongerMatching:
initWithExtensionsController:
actionProviderInterfacesByExtensionID
messageActionProviders
actionDecisionForMessage:usingMessageActionProvider:
requiredHeaders
_extensionsController
_remoteExtensions
_extensionsObserverCancelable
initWithID:name:
T@"NSString",R,N,V_ID
T@"NSString",R,N,V_name
initWithGlobalMessageID:name:mimePart:attachmentID:remoteURL:
initWithGlobalMessageID:attachmentID:
mimePartNumber
remoteURL
_globalMessageID
_mimePartNumber
_remoteURL
Tq,R,N,V_globalMessageID
T@"NSString",R,C,N,V_name
T@"NSString",R,C,N,V_mimePartNumber
T@"NSURL",R,N,V_remoteURL
serverChange
setServerChange:
localChange
setLocalChange:
_serverChange
_localChange
T@"<EDPersistedMessage>",&,N,V_message
T@"ECMessageFlagChange",&,N,V_serverChange
T@"ECMessageFlagChange",&,N,V_localChange
second
initWithDatabase:localActionPersistence:messagePersistence:serverMessagePersistenceFactory:readLaterPersistence:bimiManager:hookResponder:hookRegistry:
moveMessages:destinationMailboxURL:userInitiated:
copyMessages:destinationMailboxURL:userInitiated:
transferMessages:transferType:destinationMailboxURL:userInitiated:
transferMessages:transferType:destinationMailboxURL:userInitiated:oldMessagesByNewMessage:
willStartPersistenceDidAddMessages:
didFinishPersistenceDidAddMessages:
deleteAllMessageFromMailboxes:exceptMessages:
transferAllMessagesFromMailboxes:exceptMessages:transferType:destinationMailboxURL:userInitiated:
addNewMessages:mailboxURL:userInitiated:
deleteMessages:
applyFlagChange:toAllMessagesFromMailboxes:exceptMessages:
applyFlagChange:toMessages:
applyFollowUp:toMessages:
applyReadLaterDate:toMessages:
_applyReadLaterDate:toMessages:changeIsRemote:
_applyReadLaterDate:toMessages:changeIsRemote:hookResponder:
_truncateReadLaterDate:
applyVIPStatus:forMessages:
addLabels:removeLabels:forMessages:
messagesToJournalForMessages:inMailbox:
reflectNewMessages:mailboxURL:
didReflectNewMessages:
reflectDeletedMessages:
reflectDeletedMessagesWithRemoteIDs:mailboxURL:
reflectAllMessagesDeletedInMailboxURL:
reflectDeletedAllClearedMessagesInMailboxURL:
reflectFlagChanges:forMessages:
reflectFlagChanges:forMessagesWithRemoteIDs:mailboxURL:
_reflectFlagChanges:messages:remoteIDs:mailboxURL:
reflectSortedFlagChanges:mailboxURL:
reflectAddedLabels:removedLabels:forMessagesWithRemoteIDs:mailboxURL:
persistResults:forAction:
_persistResults:forLabelChangeAction:
_resetLocalLabelsToServerLabelsForMessagesWithRemoteIDs:mailboxURL:
_persistResults:forFlagChangeAction:
_persistFlagChangeResults:forFlagChangeAction:
_clearFollowUpsFromThreadsForMessages:
_resetLocalFlagsToServerFlagsForMessagesWithRemoteIDs:mailboxURL:
_persistResults:forTransferAction:
_handleFailedDownload:generationWindow:
_handleFailedCopyItems:transferAction:generationWindow:
_storeServerMessages:mailboxURL:generationWindow:
_deleteDestinationMessagesFromCompletedItems:notInServerMessages:
_findDestinationMessagesFromCompletedItems:notInServerMessages:
_handleDuplicateServerMessage:serverMessagePersistence:
_needToStoreServerMessagesForMailboxURL:
mailboxURL:isInSameAccountAsMailboxURL:
accountForMailboxURL:
remindMeCloudStorageChangedWithAddedOrChangedItems:deletedItems:
localActionPersistence
readLaterPersistence
serverMessagePersistenceFactory
bimiManager
markAllWorkQueue
setMarkAllWorkQueue:
_localActionPersistence
_readLaterPersistence
_serverMessagePersistenceFactory
_bimiManager
_markAllWorkQueue
T@"EDLocalActionPersistence",R,N,V_localActionPersistence
T@"EDReadLaterPersistence",R,N,V_readLaterPersistence
T@"EDServerMessagePersistenceFactory",R,N,V_serverMessagePersistenceFactory
T@"EDBIMIManager",R,N,V_bimiManager
T@"NSObject<OS_dispatch_queue>",&,N,V_markAllWorkQueue
willSyncMailbox:
didSyncMailbox:
itemsForStateCaptureWithErrorString:
descriptionForItem:
persistenceIsAddingMailboxWithDatabaseID:objectID:generationWindow:
persistenceDidUpdateServerCount:forMailboxWithObjectID:generationWindow:
persistenceDidUpdateMostRecentStatusCount:forMailboxWithObjectID:generationWindow:
persistenceDidUpdateLastSyncAndMostRecentStatusCount:forMailboxWithObjectID:generationWindow:
mailboxListChanged:
initWithQuery:serverCountMailboxScope:messagePersistence:hookRegistry:observer:
initWithQuery:serverCountMailboxScope:messagePersistence:hookRegistry:observer:refireDebounceInterval:
_serverCounts
_mailboxesBeingSynced
_resyncDatabaseGeneration
_mailboxObserverID
_expandedQuery
_seenMessageIDs
_newMessageIDs
_recalculationPending
_atomicQueryDescription
_atomicMailboxScopeDescription
_seenMessageIDsLock
_expandedQueryLock
_query
_predicateIgnoringFlags
_serverCountMailboxScope
_queryEvaluator
_resultsObserver
_cancelationToken
_refireDebouncer
_pendingFlagChangesKey
_localCount
_serverCount
_mostRecentStatusCount
_lastSyncStatusCount
messageDataDirectoryURLForGlobalMessageID:basePath:purgeable:
rootMessageDataDirectoryForBasePath:purgeable:
predicateForMessagesFromVIPs:
predicateForMessagesToAddresses:
predicateForMessagesThatCCAddresses:
_predicateForRecipientMessagesAddressesKey:addresses:
predicateForMailboxTypePredicate:mailboxes:
predicateForMessagesWithObjectIDsPredicate:objectIDConverter:
_objectIDsFromRightExpression:
_predicateForAnyMailboxWithPredicate:
predicateForMessageIDHeaderHashPredicate:
predicateForAnyRecipientPredicate:
predicateForSenderPredicate:
predicateForSubjectPredicate:
predicateForBody:
predicateForSpotlightPredicate:
stringValue
absoluteString
messagesTableName
messagesDateReceivedColumnName
messagesDisplayDateColumnName
addressesTableName
messageGlobalDataTableName
objectPropertyMapperForSchema:protectedSchema:
bitExpressionForConversationFlag:
bitExpressionForAttachments
partialMessagesTableSchemaAndForeignKeysToResolve:associationsToResolve:
recipientsTableSchemaAndForeignKeysToResolve:associationsToResolve:
_messageReferencesTableSchema
_cachedMetadataTableSchema
messageGlobalDataTableSchema
_addressesTableSchema
_subjectsTableSchema
_summariesTableSchema
_protectedMessageDataTableSchema
selectAddressesStatementWithResultColumns:
addJoinsForAddressToSelectComponent:withSourceAddressColumn:
databaseIDForEmailAddress:connection:
allDatabaseIDsForSimpleAddresses:connection:
_databaseIDFromSelect:connection:
groupedMessagesCountByMailboxMatchingQuery:variable:
validMailboxesForPrediction
databaseIDsDictionaryForMessageObjectIDs:
initWithMailboxPersistence:database:hookRegistry:userProfileProvider:blockedSenderManager:vipReader:
reconcileJournalWithCompletionBlock:
performDatabaseWorkInBlockWithHighPriority:
performDatabaseReadBlock:
messageObjectIDCriterionExpressionForPredicateValue:
countOfMessagesWithGlobalMessageID:matchingQuery:
countOfMessagesMatchingQuery:
messagesMatchingQuery:
messagesMatchingQuery:limit:
messagesMatchingQuery:limit:cancelationToken:
iterateMessagesMatchingQuery:batchSize:firstBatchSize:limit:cancelationToken:handler:
persistedMessagesMatchingQuery:limit:
iteratePersistedMessagesMatchingQuery:limit:cancelationToken:handler:
queryWithExpandedMailboxesFromQuery:
persistedMessageForOutgoingMessage:isDraft:
_databaseIDsDictionaryForGlobalMessageIDs:mailboxScope:
enabledAccountMailboxesExpression
persistedMessagesForObjectIDs:requireProtectedData:
_threadQueryForThreadObjectID:
persistedMessagesForMessageObjectIDs:requireProtectedData:temporarilyUnavailableMessageObjectIDs:
persistedMessagesForDatabaseIDs:requireProtectedData:temporarilyUnavailableDatabaseIDs:
persistedMessageIDsForMessagesWithFollowUpsForConversationIDs:
persistedMessageIDsForGlobalMessageIDs:
messagesForPersistedMessages:mailboxScope:
messagesForMessageObjectIDs:missedMessageObjectIDs:
_groupMessageObjectIDsByMailboxScope:
cachedMetadataJSONForKey:messageID:
_cachedMetadataJSONForKey:globalMessageID:
setCachedMetadataJSON:forKey:messageID:
_setCachedMetadataJSON:forKey:globalMessageID:
_checkCachedMetadataRowLimitWithConnection:
cachedDatabaseIDsDictionaryForGlobalMessageIDs:
compressFile:error:
compressDirectory:shouldCancel:error:
brandIndicatorForDatabaseID:
brandIndicatorForURL:
brandIndicatorsForURLs:
addBrandIndicatorWithData:
undownloadedBrandIndicatorsWithLimit:
setBrandIndicator:forURL:
removeBrandIndicatorForURL:
setBrandIndicatorDatabaseID:location:forMessages:
persistFollowUp:forMessages:
updateBeforeDisplayForMessagesMatchingQuery:
updateBeforeDisplayForPersistedMessages:
updateDisplayDateForPersistedMessage:displayDate:changeIsRemote:
_checkForFollowUpExpirationWithQuery:
messageObjectIDForURL:
messageObjectIDsForSearchableItemIdentifiers:
globalIDForMessageIDHash:
globalIDForMessageIDHeader:
globalIDForMessageWithDatabaseID:mailboxScope:
requestContentForMessageObjectID:requestID:options:delegate:completionHandler:
requestSummaryForMessageObjectID:
iterateMessagesMatchingSmartSortQuery:limit:handler:
collectStatistics
collectStatisticsWithStatistics:
persistenceStatistics
cachedMetadataIsolation
cachedMetadataEstimatedRowCount
setCachedMetadataEstimatedRowCount:
cachedMetadataUpdatesSinceLastCheck
setCachedMetadataUpdatesSinceLastCheck:
messageTransformer
setMessageTransformer:
_cachedMetadataUpdatesSinceLastCheck
_persistenceStatistics
_cachedMetadataIsolation
_cachedMetadataEstimatedRowCount
_messageTransformer
T@"NSObject<OS_dispatch_queue>",R,N,V_cachedMetadataIsolation
T@"NSNumber",&,N,V_cachedMetadataEstimatedRowCount
Ti,N,V_cachedMetadataUpdatesSinceLastCheck
T@"EDMessageTransformer",&,N,V_messageTransformer
T@"EDMailboxPersistence",R,W,N,V_mailboxPersistence
T@"EDMessagePersistenceStatistics",R,N,V_persistenceStatistics
setStart:
duration
setDuration:
setMessages:
messageData
setMessageData:
messagesDeleted
setMessagesDeleted:
messageDataDeleted
setMessageDataDeleted:
indexableMessages
setIndexableMessages:
messagesIndexed
setMessagesIndexed:
messagesToIndex
setMessagesToIndex:
indexableAttachments
setIndexableAttachments:
attachmentsIndexed
setAttachmentsIndexed:
attachmentsToIndex
setAttachmentsToIndex:
_start
_duration
_messageData
_messagesDeleted
_messageDataDeleted
_indexableMessages
_messagesIndexed
_messagesToIndex
_indexableAttachments
_attachmentsIndexed
_attachmentsToIndex
Td,N,V_start
Td,N,V_duration
TQ,N,V_messages
TQ,N,V_messageData
TQ,N,V_messagesDeleted
TQ,N,V_messageDataDeleted
TQ,N,V_indexableMessages
TQ,N,V_messagesIndexed
TQ,N,V_messagesToIndex
TQ,N,V_indexableAttachments
TQ,N,V_attachmentsIndexed
TQ,N,V_attachmentsToIndex
initWithQuery:messagePersistence:
transformAndFilterMessages:
transformAndFilterMessages:includeDeleted:
transformMessages:
transformMessages:includeDeleted:
filterMessages:unmatchedMessages:
messageQuery
spotlightPredicateCache
setSpotlightPredicateCache:
_messageQuery
_spotlightPredicateCache
T@"EFQuery",R,N,V_messageQuery
T@"NSCache",&,N,V_spotlightPredicateCache
findMessagesByPreviousObjectIDForAddedMessages:messageSource:
initWithQuery:messagePersistence:hookRegistry:remindMeNotificationController:remoteSearchProvider:observer:observationIdentifier:
_objectIDsAndUnreadObjectIDsFromMessages:unreadObjectIDs:
_createChangesForMessagesWithConversationID:block:
_initializeOldestMessagesByMailbox
_oldestMessagesNeedUpdate
_updateOldestMessagesForMailboxes:cancelationToken:
_oldestItemQueryForMailbox:
_oldestMessagesByMailboxObjectIDsWasUpdated
findMessagesByPreviousObjectIDForAddedMessages:helper:
currentQueryHelper
setCurrentQueryHelper:
oldestMessageIDsByMailboxObjectIDs
_updateOldestMessagesCancelationToken
_currentQueryHelper
_oldestMessageIDsByMailboxObjectIDs
T@"EDMessageQueryHelper",&,N,V_currentQueryHelper
T@"NSMutableDictionary",R,C,N,V_oldestMessageIDsByMailboxObjectIDs
itemID
collectItemIDsWithQuery:messagePersistence:hookRegistry:remindMeNotificationController:remoteSearchProvider:errorString:
_messageItemIDs
_collectionLock
_errorString
controller:messageTimerFired:
remoteSearchDidFindMessages:
remoteSearchDidFinish
persistenceWillChangeSenderBucketForAddresses:toBucket:
persistenceWillChangeSenderBucketForSender:toBucket:
persistenceDidChangeSenderBucketForSender:toBucket:generation:
persistenceWillAddAddresses:toSender:
persistenceDidAddAddresses:toSender:generation:
persistenceWillRemoveAddresses:fromSender:
persistenceDidRemoveAddresses:fromSender:generation:
messagesWithAdditionalPredicates:limit:
query
T@"EFQuery",R,N
initWithQuery:messagePersistence:hookRegistry:remoteSearchProvider:scheduler:remindMeNotificationController:delegate:shouldReconcileJournal:shouldAddMessagesSynchronously:keepMessagesInListOnBucketChange:
updateDisplayDate
_updateDisplayDateForMessagesIfNeeded
_getInitialResults
_foundMessages:
_persistenceDidDeleteMessages:includeMessagesWithDeletedFlag:
_prepareForSenderBucketChangeForThreadsWithSenderAddresses:
_reportSenderBucketChangeForThreadsWithSenderAddresses:
_reportChangesForPersistedMessages:withPendingChangesKey:keyPaths:
_reportChangesForCurrentlyMatchingMessages:previouslyMatchingMessages:keyPaths:
_persistedMessagesFromSendersWithAddresses:
_calculateAndReportChangesForPersistedMessages:withPendingChangesKey:changeBlock:
_transformAndFilterMessages:includeDeleted:removeIgnoredMessages:
remindMeNotificationController
queryEvaluator
setQueryEvaluator:
cancelationToken
setCancelationToken:
shouldReconcileJournal
setShouldReconcileJournal:
ignoreMessagesPredicate
setIgnoreMessagesPredicate:
addMessagesSynchronously
setAddMessagesSynchronously:
pendingFlagChangesKey
pendingConversationIDChangesKey
pendingJournaledMessageAddsKey
pendingSenderBucketChangesKey
pendingReadLaterDateChangesKey
pendingDisplayDateChangesKey
_didStart
_noLongerMatchingMessages
_ignoredMessages
_noLongerMatchingMessagesLock
_ignoredMessagesLock
_shouldReconcileJournal
_addMessagesSynchronously
_remindMeNotificationController
_ignoreMessagesPredicate
_pendingConversationIDChangesKey
_pendingJournaledMessageAddsKey
_pendingSenderBucketChangesKey
_pendingReadLaterDateChangesKey
_pendingDisplayDateChangesKey
T@"EDRemindMeNotificationController",R,N,V_remindMeNotificationController
T@"<EDMessageQueryHelperDelegate>",R,W,N,V_delegate
T@"EDMessageQueryEvaluator",&,N,V_queryEvaluator
T@"EFCancelationToken",&,N,V_cancelationToken
TB,N,V_shouldReconcileJournal
T@"NSPredicate",&,N,V_ignoreMessagesPredicate
TB,N,V_addMessagesSynchronously
T@"NSString",R,V_pendingFlagChangesKey
T@"NSString",R,V_pendingConversationIDChangesKey
T@"NSString",R,V_pendingJournaledMessageAddsKey
T@"NSString",R,V_pendingSenderBucketChangesKey
T@"NSString",R,V_pendingReadLaterDateChangesKey
T@"NSString",R,V_pendingDisplayDateChangesKey
T@"EFQuery",R,N,V_query
initWithQueryType:predicate:
queryType
predicate
_queryType
_predicate
TQ,R,N,V_queryType
T@"NSPredicate",R,N,V_predicate
parserForPredicate:queryParser:
initWithQueryParser:
parseResultsFromPredicate:
queryParser
_queryParser
T@"EDMessageQueryParser",R,N,V_queryParser
isSearchableIndexQueryableKeypath:searchableIndexPropertyMapper:
parseMixedSubpredicateResults:predicate:
resultQueryType:
performSearchableIndexQueryPredicate:propertyMapper:searchableIndex:
initWithSchema:protectedSchema:searchableIndex:accountsProvider:vipManager:messagePersistence:mailboxPersistence:
sqlQueryForQuery:
sqlQueryForQuery:predicate:
searchableIndex
sqlPropertyMapper
searchableIndexMapper
_searchableIndex
_sqlPropertyMapper
_searchableIndexMapper
T@"EDMessageQueryTransformer",R,N,V_transformer
T@"EDSearchableIndex",R,N,V_searchableIndex
T@"EFSQLObjectPropertyMapper",R,N,V_sqlPropertyMapper
T@"EFSearchableIndexObjectPropertyMapper",R,N,V_searchableIndexMapper
initWithAccountsProvider:mailboxPersistence:messagePersistence:vipManager:
transformPredicate:
transformCompoundPredicate:
transformSubpredicates:
transformComparisonPredicate:
simplifyCompoundPredicate:
simplifyAndPredicate:
simplifyOrPredicate:
simplifyNotPredicate:
simplifySingleSubpredicate:
T@"<EDAccountsProvider>",R,N,V_accountsProvider
T@"<EMVIPManager>",R,N,V_vipManager
threadQueryHandlerStateDidChange:
isDataAccessible:
performQuery:limit:completionHandler:
performCountQuery:completionHandler:
performQuery:withObserver:observationIdentifier:completionHandler:
startCountingQuery:includingServerCountsForMailboxScope:withObserver:completionHandler:
messageListItemsForObjectIDs:requestID:observationIdentifier:loadSummaryForAdditionalObjectIDs:completionHandler:
performMessageChangeAction:requestID:returnUndoAction:completionHandler:
requestRepresentationForMessageWithID:requestID:options:delegate:completionHandler:
requestRichLinkMetadataForRichLinkID:messageID:completionHandler:
resetPrecomputedThreadScopesForMailboxScope:
getCachedMetadataJSONForKey:messageID:completionHandler:
predictMailboxForMovingMessages:withObserver:completionHandler:
loadOlderMessagesForMailboxes:
messageObjectIDForURL:completionHandler:
messageObjectIDsForSearchableItemIdentifiers:completionHandler:
getURLCacheInformationWithCompletion:
noteViewOfRemoteContentLinks:
getRemoteContentURLInfoOrderedBy:inReverseOrder:limit:completionHandler:
parseRemoteContentURLsFromMessageWithObjectID:requestID:completionHandler:
brandIndicatorForLocation:completionHandler:
messageReconciliationQueries
threadReconciliationQueries
initWithMessagePersistence:conversationPersistence:threadPersistence:remoteContentPersistence:messageChangeManager:richLinkPersistence:hookRegistry:mailboxPersistence:remoteSearchProvider:userProfileProvider:vipManager:fetchController:observerResumer:remoteContentManager:remoteContentCacheConfiguration:blockedSenderManager:listUnsubscribeHandler:remindMeNotificationController:
_performQuery:withObserver:observationIdentifier:completionHandler:
_triggerMigrationForThreadScopes:
_triggerMigrationWithThreadScopesMatcher:
test_activeQueryCancelationTokens
cancelAllHandlers
_partitionObjectIDs:
_enumerateObjectIDsAndQueryHandlersForObjectIDsByScope:withTargetClass:usingBlock:
_enumerateThreadObjectIDsByScope:usingBlock:
_performMessageFlagChangeAction:returnUndoAction:
_performMessageFollowUpAction:returnUndoAction:
_performMessageFollowUpDate:persistedMessages:returnUndoAction:
_performMessageReadLaterAction:returnUndoAction:
_performMessageReadLaterDate:persistedMessages:returnUndoAction:
_performSenderBlockingAction:returnUndoAction:
_performBlockSender:persistedMessages:returnUndoAction:
_performUnsubscribeAction:
_performMessageFlagChangeAllAction:
_performMessageDeleteAllAction:
_performMessageDeleteAction:
_changeFlagsForPersistedMessages:flagChange:returnUndoAction:
_performMessageTransferAction:returnUndoAction:
_performMessageTransferAllAction:
_performMessageTransferActionToSpecialMailbox:returnUndoAction:
_performMessageTransferAllActionToSpecialMailbox:
_undoActionsForMovedMessages:
_performUndoAction:
_performMessageConversationFlagChangeAction:returnUndoAction:
_performConversationIDs:conversationNotificationLevel:returnUndoAction:
_persistedMessagesForMessageChangeAction:
_persistedMessagesForObjectIDs:
_persistedObjectIDsForObjectIDs:
mailboxPredictionController
remoteContentParser
_resetUpdateThrottlersWithLogMessage:
queryHandlers
setQueryHandlers:
threadQueryHandlers
setThreadQueryHandlers:
handlerTokens
setHandlerTokens:
conversationPersistence
threadPersistence
setThreadPersistence:
remoteContentPersistence
richLinkPersistence
setRichLinkPersistence:
messageChangeManager
setMessageChangeManager:
performQueryOnSerializationQueue
asyncWorkScheduler
observerResumer
remoteContentManager
remoteContentCacheConfiguration
updateThrottlerResetScheduler
updateThrottlerResetBlock
setUpdateThrottlerResetBlock:
blockedSenderManager
listUnsubscribeHandler
filteredMailboxScopedQueryHandlers
setFilteredMailboxScopedQueryHandlers:
_mailboxPredictionController
_mailboxPredictionControllerLock
_handlersLock
_remoteContentParser
_remoteContentParserLock
_queryHandlers
_threadQueryHandlers
_handlerTokens
_conversationPersistence
_threadPersistence
_remoteContentPersistence
_richLinkPersistence
_messageChangeManager
_performQueryOnSerializationQueue
_asyncWorkScheduler
_observerResumer
_remoteContentManager
_remoteContentCacheConfiguration
_updateThrottlerResetScheduler
_updateThrottlerResetBlock
_blockedSenderManager
_listUnsubscribeHandler
_filteredMailboxScopedQueryHandlers
T@"NSMutableDictionary",&,N,V_queryHandlers
T@"NSMutableDictionary",&,N,V_threadQueryHandlers
T@"NSMutableSet",&,N,V_handlerTokens
T@"EDPersistenceHookRegistry",&,N,V_hookRegistry
T@"EDConversationPersistence",R,N,V_conversationPersistence
T@"EDThreadPersistence",&,N,V_threadPersistence
T@"EDRemoteContentPersistence",R,N,V_remoteContentPersistence
T@"EDRichLinkPersistence",&,N,V_richLinkPersistence
T@"EDMessageChangeManager",&,N,V_messageChangeManager
T@"NSConditionLock",R,N,V_performQueryOnSerializationQueue
T@"<EFScheduler>",R,N,V_asyncWorkScheduler
T@"<EDResumable>",R,N,V_observerResumer
T@"EDRemoteContentManager",R,N,V_remoteContentManager
T@"EDRemoteContentCacheConfiguration",R,N,V_remoteContentCacheConfiguration
T@"<EFScheduler>",R,N,V_updateThrottlerResetScheduler
T@?,W,N,V_updateThrottlerResetBlock
T@"EDWebContentParser",R,N
T@"EMBlockedSenderManager",R,N,V_blockedSenderManager
T@"EDListUnsubscribeHandler",R,N,V_listUnsubscribeHandler
T@"NSMutableDictionary",&,N,V_filteredMailboxScopedQueryHandlers
T@"NSSet",R,C,N
initWithMessageObjectIDs:threadObjectIDsByScope:groupedSenderObjectIDsByScope:
messageObjectIDs
threadObjectIDsByScope
groupedSenderObjectIDsByScope
_messageObjectIDs
_threadObjectIDsByScope
_groupedSenderObjectIDsByScope
T@"NSArray",R,C,N,V_messageObjectIDs
T@"NSDictionary",R,C,N,V_threadObjectIDsByScope
T@"NSDictionary",R,C,N,V_groupedSenderObjectIDsByScope
T@"EFQuery",R,C,N
mailboxes
keyPathsAffectSorting:
_distinctObjectIDs:queryHandlerLog:
resultsObserver
observationIdentifier
dateSortOrder
summaryLoadersMapTable
setSummaryLoadersMapTable:
_mailboxes
_observationIdentifier
_dateSortOrder
_summaryLoadersMapTable
T@"EFLocked",&,N,V_summaryLoadersMapTable
T@"EFQuery",R,C,N,V_query
T@"<EMMessageListItemQueryResultsObserver>",R,N,V_resultsObserver
T@"EMObjectID",R,N,V_observationIdentifier
T@"NSSet",R,C,N,V_mailboxes
Tq,R,N,V_dateSortOrder
flags
dates
senderBuckets
addMessage:
combinedMailboxes
combinedMessageFlags
combinedDate
combinedSenderBucket
setMailboxes:
setFlags:
setDates:
setSenderBuckets:
_flags
_dates
_senderBuckets
T@"NSMutableSet",&,N,V_mailboxes
T@"NSMutableArray",&,N,V_flags
T@"NSMutableArray",&,N,V_dates
T@"NSMutableArray",&,N,V_senderBuckets
bccIfAvailable
mailboxesForPersistedMessage:mailboxProvider:
initWithMailboxProvider:userProfileProvider:blockedSenderManager:vipReader:
transformBaseMessage:mailboxScope:loaderBlock:
transformPersistedMessages:mailboxScope:
_transformBaseMessage:mailboxScope:duplicateInfo:loaderBlock:
vipReader
_vipReader
T@"EDMailboxProvider",R,N,V_mailboxProvider
T@"<EMVIPReader>",R,N,V_vipReader
propertiesToMigrate
listener:shouldAcceptNewConnection:
initWithMachServiceNames:
listeners
setListeners:
_listeners
T@"NSMutableArray",&,N,V_listeners
saveDraftMessage:mailboxID:previousDraftObjectID:completion:
saveSendLaterMessage:sendLaterDate:completion:
updateSendLaterDate:message:completion:
scheduleAlarmForSendLaterDate:completion:
deleteDraftsInMailboxID:documentID:previousDraftObjectID:
deliverMessage:usingMailDrop:isCancelable:completion:
cancelLastDelayedMessage:
outboxContainsMessageFromAccountObjectID:completion:
suspendDeliveryQueue
resumeDeliveryQueue
processAllQueuedMessages
isProcessingWithCompletion:
numberOfPendingMessagesWithCompletion:
startObservingPendingMessageChangesWithChangeObserver:observationIdentifier:
initWithMessagePersistence:messageChangeManager:sendLaterPersistence:
outgoingMessageFromPersistedMessage:
messagesForDocumentID:mailboxID:
urlForSendLaterFolder
sendLaterPersistence
setSendLaterPersistence:
_workQueue
_sendLaterPersistence
T@"EDSendLaterPersistence",&,N,V_sendLaterPersistence
T@"EDMessageChangeManager",R,N,V_messageChangeManager
messageFrameType
withHasher:setDataFromMessage:
withHasher:setDataFromMessage:account:
withHasher:setMessage:data:
withHasher:setMessage:mailbox:
withHasher:setMessage:mailboxType:
withHasher:setConversationID:data:
accountId
setAccountId:
mailboxId
setMailboxId:
mailboxType
setMailboxType:
conversationId
setConversationId:
messageId
setMessageId:
Tq,N
Ti,N
forwardInvocation:
ed_oneOfConcreteEvent
setSequenceNumber:
setHasSequenceNumber:
hasSequenceNumber
setTimestamp:
setHasTimestamp:
hasTimestamp
eventName
setEventName:
setHasEventName:
hasEventName
eventNameAsString:
StringAsEventName:
hasMessageFetched
hasMessageSent
hasMessageMoved
hasMessageCopied
hasLinkClicked
hasAppLaunch
hasAppBackground
hasAppResume
hasFlagChanged
hasReadChanged
hasMessageViewStart
hasMessageViewEnd
hasReplyDraftStarted
hasForwardDraftStarted
hasReplySent
hasForwardSent
hasMarkedMuteThread
hasCategoryMarked
hasCategoryInferred
readFrom:
writeTo:
copyTo:
mergeFrom:
sequenceNumber
timestamp
messageFetched
setMessageFetched:
messageSent
setMessageSent:
messageMoved
setMessageMoved:
messageCopied
setMessageCopied:
linkClicked
setLinkClicked:
appLaunch
setAppLaunch:
appBackground
setAppBackground:
appResume
setAppResume:
flagChanged
setFlagChanged:
readChanged
setReadChanged:
messageViewStart
setMessageViewStart:
messageViewEnd
setMessageViewEnd:
replyDraftStarted
setReplyDraftStarted:
forwardDraftStarted
setForwardDraftStarted:
replySent
setReplySent:
forwardSent
setForwardSent:
markedMuteThread
setMarkedMuteThread:
categoryMarked
setCategoryMarked:
categoryInferred
setCategoryInferred:
_timestamp
_appBackground
_appLaunch
_appResume
_categoryInferred
_categoryMarked
_eventName
_flagChanged
_forwardDraftStarted
_forwardSent
_linkClicked
_markedMuteThread
_messageCopied
_messageFetched
_messageMoved
_messageSent
_messageViewEnd
_messageViewStart
_readChanged
_replyDraftStarted
_replySent
_sequenceNumber
_has
TB,N
TI,N,V_sequenceNumber
TQ,N,V_timestamp
Ti,N,V_eventName
T@"EDPBInteractionEventMessageFetched",&,N,V_messageFetched
T@"EDPBInteractionEventMessageSent",&,N,V_messageSent
T@"EDPBInteractionEventMessageMoved",&,N,V_messageMoved
T@"EDPBInteractionEventMessageCopied",&,N,V_messageCopied
T@"EDPBInteractionEventLinkClicked",&,N,V_linkClicked
T@"EDPBInteractionEventAppLaunch",&,N,V_appLaunch
T@"EDPBInteractionEventAppBackground",&,N,V_appBackground
T@"EDPBInteractionEventAppResume",&,N,V_appResume
T@"EDPBInteractionEventFlagChanged",&,N,V_flagChanged
T@"EDPBInteractionEventReadChanged",&,N,V_readChanged
T@"EDPBInteractionEventMessageViewStart",&,N,V_messageViewStart
T@"EDPBInteractionEventMessageViewEnd",&,N,V_messageViewEnd
T@"EDPBInteractionEventReplyDraftStarted",&,N,V_replyDraftStarted
T@"EDPBInteractionEventForwardDraftStarted",&,N,V_forwardDraftStarted
T@"EDPBInteractionEventReplySent",&,N,V_replySent
T@"EDPBInteractionEventForwardSent",&,N,V_forwardSent
T@"EDPBInteractionEventMarkedMuteThread",&,N,V_markedMuteThread
T@"EDPBInteractionEventCategoryMarked",&,N,V_categoryMarked
T@"EDPBInteractionEventCategoryInferred",&,N,V_categoryInferred
setHasAccountId:
hasAccountId
setHasMailboxId:
hasMailboxId
setHasMailboxType:
hasMailboxType
mailboxTypeAsString:
StringAsMailboxType:
setHasConversationId:
hasConversationId
setHasMessageId:
hasMessageId
setScore:
setHasScore:
hasScore
setPositive:
setHasPositive:
hasPositive
categoryType
setCategoryType:
setHasCategoryType:
hasCategoryType
categoryTypeAsString:
StringAsCategoryType:
setModelId:
setHasModelId:
hasModelId
setModelVersion:
setHasModelVersion:
hasModelVersion
hasFeaturesImportant
hasFeaturesPromotion
score
positive
modelId
modelVersion
featuresImportant
setFeaturesImportant:
featuresPromotion
setFeaturesPromotion:
_accountId
_conversationId
_mailboxId
_messageId
_score
_categoryType
_featuresImportant
_featuresPromotion
_mailboxType
_modelId
_modelVersion
_positive
Tq,N,V_accountId
Tq,N,V_mailboxId
Ti,N,V_mailboxType
Tq,N,V_conversationId
Tq,N,V_messageId
Td,N,V_score
TB,N,V_positive
Ti,N,V_categoryType
TI,N,V_modelId
TI,N,V_modelVersion
T@"EDPBModelFeaturesImportant",&,N,V_featuresImportant
T@"EDPBModelFeaturesPromotion",&,N,V_featuresPromotion
setRemoveAllUserOverrides:
setHasRemoveAllUserOverrides:
hasRemoveAllUserOverrides
removeAllUserOverrides
_removeAllUserOverrides
TB,N,V_removeAllUserOverrides
setHasValue:
hasValue
TB,N,V_value
setHasVersion:
hasVersion
setUserId:
setHasUserId:
hasUserId
setDeviceId:
setHasDeviceId:
hasDeviceId
hasLocale
setTimezoneOffset:
setHasTimezoneOffset:
hasTimezoneOffset
setUserSegment:
setHasUserSegment:
hasUserSegment
setCategoryRootInstalled:
setHasCategoryRootInstalled:
hasCategoryRootInstalled
userId
deviceId
locale
setLocale:
timezoneOffset
userSegment
categoryRootInstalled
_deviceId
_userId
_locale
_timezoneOffset
_userSegment
_categoryRootInstalled
TI,N,V_version
Tq,N,V_userId
Tq,N,V_deviceId
T@"NSString",&,N,V_locale
Ti,N,V_timezoneOffset
TI,N,V_userSegment
TB,N,V_categoryRootInstalled
setFromMailboxId:
setHasFromMailboxId:
hasFromMailboxId
fromMailboxType
setFromMailboxType:
setHasFromMailboxType:
hasFromMailboxType
fromMailboxTypeAsString:
StringAsFromMailboxType:
setToMailboxId:
setHasToMailboxId:
hasToMailboxId
toMailboxType
setToMailboxType:
setHasToMailboxType:
hasToMailboxType
toMailboxTypeAsString:
StringAsToMailboxType:
fromMailboxId
toMailboxId
_fromMailboxId
_toMailboxId
_fromMailboxType
_toMailboxType
Tq,N,V_fromMailboxId
Ti,N,V_fromMailboxType
Tq,N,V_toMailboxId
Ti,N,V_toMailboxType
options
hasHeaders
headers
setHeaders:
_headers
T@"EDPBMessageHeaders",&,N,V_headers
setHasDuration:
hasDuration
setHasScrolledToEnd:
hasScrolledToEnd
setSender:
setHasSender:
hasSender
setSenderDomain:
setHasSenderDomain:
hasSenderDomain
setSenderIsVip:
setHasSenderIsVip:
hasSenderIsVip
setSenderContactId:
setHasSenderContactId:
hasSenderContactId
setUserIsSender:
setHasUserIsSender:
hasUserIsSender
subjectWordsCount
subjectWords
clearSubjectWords
addSubjectWords:
subjectWordsAtIndex:
setSubjectWords:count:
setMessageIsReply:
setHasMessageIsReply:
hasMessageIsReply
setMessageIsForwarded:
setHasMessageIsForwarded:
hasMessageIsForwarded
setUserIsTo:
setHasUserIsTo:
hasUserIsTo
setUserIsCc:
setHasUserIsCc:
hasUserIsCc
setUserIsBcc:
setHasUserIsBcc:
hasUserIsBcc
setDateReceived:
setHasDateReceived:
hasDateReceived
setListId:
setHasListId:
hasListId
referencesCount
references
clearReferences
addReferences:
referencesAtIndex:
setReferences:count:
toAddressCount
toAddress
clearToAddress
addToAddress:
toAddressAtIndex:
setToAddress:count:
toDomainsCount
toDomains
clearToDomains
addToDomain:
toDomainAtIndex:
setToDomains:count:
toIsVipsCount
toIsVips
clearToIsVips
addToIsVip:
toIsVipAtIndex:
setToIsVips:count:
toContactIdsCount
toContactIds
clearToContactIds
addToContactId:
toContactIdAtIndex:
setToContactIds:count:
ccAddressCount
ccAddress
clearCcAddress
addCcAddress:
ccAddressAtIndex:
setCcAddress:count:
ccDomainsCount
ccDomains
clearCcDomains
addCcDomain:
ccDomainAtIndex:
setCcDomains:count:
ccIsVipsCount
ccIsVips
clearCcIsVips
addCcIsVip:
ccIsVipAtIndex:
setCcIsVips:count:
ccContactIdsCount
ccContactIds
clearCcContactIds
addCcContactId:
ccContactIdAtIndex:
setCcContactIds:count:
bccAddressCount
bccAddress
clearBccAddress
addBccAddress:
bccAddressAtIndex:
setBccAddress:count:
bccDomainsCount
bccDomains
clearBccDomains
addBccDomain:
bccDomainAtIndex:
setBccDomains:count:
bccIsVipsCount
bccIsVips
clearBccIsVips
addBccIsVip:
bccIsVipAtIndex:
setBccIsVips:count:
bccContactIdsCount
bccContactIds
clearBccContactIds
addBccContactId:
bccContactIdAtIndex:
setBccContactIds:count:
sender
senderDomain
senderIsVip
senderContactId
userIsSender
messageIsReply
messageIsForwarded
userIsTo
userIsCc
userIsBcc
dateReceived
listId
_bccAddress
_bccContactIds
_bccDomains
_bccIsVips
_ccAddress
_ccContactIds
_ccDomains
_ccIsVips
_references
_subjectWords
_toAddress
_toContactIds
_toDomains
_toIsVips
_dateReceived
_listId
_sender
_senderContactId
_senderDomain
_messageIsForwarded
_messageIsReply
_senderIsVip
_userIsBcc
_userIsCc
_userIsSender
_userIsTo
Tq,N,V_sender
Tq,N,V_senderDomain
TB,N,V_senderIsVip
Tq,N,V_senderContactId
TB,N,V_userIsSender
T^q,R,N
TB,N,V_messageIsReply
TB,N,V_messageIsForwarded
TB,N,V_userIsTo
TB,N,V_userIsCc
TB,N,V_userIsBcc
TQ,N,V_dateReceived
Tq,N,V_listId
T^B,R,N
setUnknownFeatureCount:
setHasUnknownFeatureCount:
hasUnknownFeatureCount
setCcContainsContact:
setHasCcContainsContact:
hasCcContainsContact
setCcIsTopDirectAddressesBasedOnRespond:
setHasCcIsTopDirectAddressesBasedOnRespond:
hasCcIsTopDirectAddressesBasedOnRespond
setCcIsTopDirectAddressesBasedOnScroll:
setHasCcIsTopDirectAddressesBasedOnScroll:
hasCcIsTopDirectAddressesBasedOnScroll
setCcIsTopDirectAddressesBasedOnSend:
setHasCcIsTopDirectAddressesBasedOnSend:
hasCcIsTopDirectAddressesBasedOnSend
setCcIsTopDirectAddressesBasedOnView:
setHasCcIsTopDirectAddressesBasedOnView:
hasCcIsTopDirectAddressesBasedOnView
setCcIsTopIndirectAddressesBasedOnRespond:
setHasCcIsTopIndirectAddressesBasedOnRespond:
hasCcIsTopIndirectAddressesBasedOnRespond
setCcIsTopIndirectAddressesBasedOnScroll:
setHasCcIsTopIndirectAddressesBasedOnScroll:
hasCcIsTopIndirectAddressesBasedOnScroll
setCcIsTopIndirectAddressesBasedOnSend:
setHasCcIsTopIndirectAddressesBasedOnSend:
hasCcIsTopIndirectAddressesBasedOnSend
setCcIsTopIndirectAddressesBasedOnView:
setHasCcIsTopIndirectAddressesBasedOnView:
hasCcIsTopIndirectAddressesBasedOnView
setCcIsVip:
setHasCcIsVip:
hasCcIsVip
setFromListId:
setHasFromListId:
hasFromListId
setMessageIsForward:
setHasMessageIsForward:
hasMessageIsForward
setNumRecipients:
setHasNumRecipients:
hasNumRecipients
setSenderIsContact:
setHasSenderIsContact:
hasSenderIsContact
setSenderIsTopDirectAddressesBasedOnRespond:
setHasSenderIsTopDirectAddressesBasedOnRespond:
hasSenderIsTopDirectAddressesBasedOnRespond
setSenderIsTopDirectAddressesBasedOnScroll:
setHasSenderIsTopDirectAddressesBasedOnScroll:
hasSenderIsTopDirectAddressesBasedOnScroll
setSenderIsTopDirectAddressesBasedOnSend:
setHasSenderIsTopDirectAddressesBasedOnSend:
hasSenderIsTopDirectAddressesBasedOnSend
setSenderIsTopDirectAddressesBasedOnView:
setHasSenderIsTopDirectAddressesBasedOnView:
hasSenderIsTopDirectAddressesBasedOnView
setSenderIsTopIndirectAddressesBasedOnRespond:
setHasSenderIsTopIndirectAddressesBasedOnRespond:
hasSenderIsTopIndirectAddressesBasedOnRespond
setSenderIsTopIndirectAddressesBasedOnScroll:
setHasSenderIsTopIndirectAddressesBasedOnScroll:
hasSenderIsTopIndirectAddressesBasedOnScroll
setSenderIsTopIndirectAddressesBasedOnSend:
setHasSenderIsTopIndirectAddressesBasedOnSend:
hasSenderIsTopIndirectAddressesBasedOnSend
setSenderIsTopIndirectAddressesBasedOnView:
setHasSenderIsTopIndirectAddressesBasedOnView:
hasSenderIsTopIndirectAddressesBasedOnView
setSubjectIsTopWordsBasedOnRespond:
setHasSubjectIsTopWordsBasedOnRespond:
hasSubjectIsTopWordsBasedOnRespond
setSubjectIsTopWordsBasedOnScroll:
setHasSubjectIsTopWordsBasedOnScroll:
hasSubjectIsTopWordsBasedOnScroll
setSubjectIsTopWordsBasedOnSend:
setHasSubjectIsTopWordsBasedOnSend:
hasSubjectIsTopWordsBasedOnSend
setSubjectIsTopWordsBasedOnView:
setHasSubjectIsTopWordsBasedOnView:
hasSubjectIsTopWordsBasedOnView
timeReceived
setTimeReceived:
setHasTimeReceived:
hasTimeReceived
timeReceivedAsString:
StringAsTimeReceived:
setToContainsContact:
setHasToContainsContact:
hasToContainsContact
setToIsTopDirectAddressesBasedOnRespond:
setHasToIsTopDirectAddressesBasedOnRespond:
hasToIsTopDirectAddressesBasedOnRespond
setToIsTopDirectAddressesBasedOnScroll:
setHasToIsTopDirectAddressesBasedOnScroll:
hasToIsTopDirectAddressesBasedOnScroll
setToIsTopDirectAddressesBasedOnSend:
setHasToIsTopDirectAddressesBasedOnSend:
hasToIsTopDirectAddressesBasedOnSend
setToIsTopDirectAddressesBasedOnView:
setHasToIsTopDirectAddressesBasedOnView:
hasToIsTopDirectAddressesBasedOnView
setToIsTopIndirectAddressesBasedOnRespond:
setHasToIsTopIndirectAddressesBasedOnRespond:
hasToIsTopIndirectAddressesBasedOnRespond
setToIsTopIndirectAddressesBasedOnScroll:
setHasToIsTopIndirectAddressesBasedOnScroll:
hasToIsTopIndirectAddressesBasedOnScroll
setToIsTopIndirectAddressesBasedOnSend:
setHasToIsTopIndirectAddressesBasedOnSend:
hasToIsTopIndirectAddressesBasedOnSend
setToIsTopIndirectAddressesBasedOnView:
setHasToIsTopIndirectAddressesBasedOnView:
hasToIsTopIndirectAddressesBasedOnView
setToIsVip:
setHasToIsVip:
hasToIsVip
unknownFeatureCount
ccContainsContact
ccIsTopDirectAddressesBasedOnRespond
ccIsTopDirectAddressesBasedOnScroll
ccIsTopDirectAddressesBasedOnSend
ccIsTopDirectAddressesBasedOnView
ccIsTopIndirectAddressesBasedOnRespond
ccIsTopIndirectAddressesBasedOnScroll
ccIsTopIndirectAddressesBasedOnSend
ccIsTopIndirectAddressesBasedOnView
ccIsVip
fromListId
messageIsForward
numRecipients
senderIsContact
senderIsTopDirectAddressesBasedOnRespond
senderIsTopDirectAddressesBasedOnScroll
senderIsTopDirectAddressesBasedOnSend
senderIsTopDirectAddressesBasedOnView
senderIsTopIndirectAddressesBasedOnRespond
senderIsTopIndirectAddressesBasedOnScroll
senderIsTopIndirectAddressesBasedOnSend
senderIsTopIndirectAddressesBasedOnView
subjectIsTopWordsBasedOnRespond
subjectIsTopWordsBasedOnScroll
subjectIsTopWordsBasedOnSend
subjectIsTopWordsBasedOnView
toContainsContact
toIsTopDirectAddressesBasedOnRespond
toIsTopDirectAddressesBasedOnScroll
toIsTopDirectAddressesBasedOnSend
toIsTopDirectAddressesBasedOnView
toIsTopIndirectAddressesBasedOnRespond
toIsTopIndirectAddressesBasedOnScroll
toIsTopIndirectAddressesBasedOnSend
toIsTopIndirectAddressesBasedOnView
toIsVip
_numRecipients
_timeReceived
_unknownFeatureCount
_ccContainsContact
_ccIsTopDirectAddressesBasedOnRespond
_ccIsTopDirectAddressesBasedOnScroll
_ccIsTopDirectAddressesBasedOnSend
_ccIsTopDirectAddressesBasedOnView
_ccIsTopIndirectAddressesBasedOnRespond
_ccIsTopIndirectAddressesBasedOnScroll
_ccIsTopIndirectAddressesBasedOnSend
_ccIsTopIndirectAddressesBasedOnView
_ccIsVip
_fromListId
_messageIsForward
_senderIsContact
_senderIsTopDirectAddressesBasedOnRespond
_senderIsTopDirectAddressesBasedOnScroll
_senderIsTopDirectAddressesBasedOnSend
_senderIsTopDirectAddressesBasedOnView
_senderIsTopIndirectAddressesBasedOnRespond
_senderIsTopIndirectAddressesBasedOnScroll
_senderIsTopIndirectAddressesBasedOnSend
_senderIsTopIndirectAddressesBasedOnView
_subjectIsTopWordsBasedOnRespond
_subjectIsTopWordsBasedOnScroll
_subjectIsTopWordsBasedOnSend
_subjectIsTopWordsBasedOnView
_toContainsContact
_toIsTopDirectAddressesBasedOnRespond
_toIsTopDirectAddressesBasedOnScroll
_toIsTopDirectAddressesBasedOnSend
_toIsTopDirectAddressesBasedOnView
_toIsTopIndirectAddressesBasedOnRespond
_toIsTopIndirectAddressesBasedOnScroll
_toIsTopIndirectAddressesBasedOnSend
_toIsTopIndirectAddressesBasedOnView
_toIsVip
TI,N,V_unknownFeatureCount
TB,N,V_ccContainsContact
TB,N,V_ccIsTopDirectAddressesBasedOnRespond
TB,N,V_ccIsTopDirectAddressesBasedOnScroll
TB,N,V_ccIsTopDirectAddressesBasedOnSend
TB,N,V_ccIsTopDirectAddressesBasedOnView
TB,N,V_ccIsTopIndirectAddressesBasedOnRespond
TB,N,V_ccIsTopIndirectAddressesBasedOnScroll
TB,N,V_ccIsTopIndirectAddressesBasedOnSend
TB,N,V_ccIsTopIndirectAddressesBasedOnView
TB,N,V_ccIsVip
TB,N,V_fromListId
TB,N,V_messageIsForward
TI,N,V_numRecipients
TB,N,V_senderIsContact
TB,N,V_senderIsTopDirectAddressesBasedOnRespond
TB,N,V_senderIsTopDirectAddressesBasedOnScroll
TB,N,V_senderIsTopDirectAddressesBasedOnSend
TB,N,V_senderIsTopDirectAddressesBasedOnView
TB,N,V_senderIsTopIndirectAddressesBasedOnRespond
TB,N,V_senderIsTopIndirectAddressesBasedOnScroll
TB,N,V_senderIsTopIndirectAddressesBasedOnSend
TB,N,V_senderIsTopIndirectAddressesBasedOnView
TB,N,V_subjectIsTopWordsBasedOnRespond
TB,N,V_subjectIsTopWordsBasedOnScroll
TB,N,V_subjectIsTopWordsBasedOnSend
TB,N,V_subjectIsTopWordsBasedOnView
Ti,N,V_timeReceived
TB,N,V_toContainsContact
TB,N,V_toIsTopDirectAddressesBasedOnRespond
TB,N,V_toIsTopDirectAddressesBasedOnScroll
TB,N,V_toIsTopDirectAddressesBasedOnSend
TB,N,V_toIsTopDirectAddressesBasedOnView
TB,N,V_toIsTopIndirectAddressesBasedOnRespond
TB,N,V_toIsTopIndirectAddressesBasedOnScroll
TB,N,V_toIsTopIndirectAddressesBasedOnSend
TB,N,V_toIsTopIndirectAddressesBasedOnView
TB,N,V_toIsVip
setToCount:
setHasToCount:
hasToCount
hasLanguage
setHeaderKeyFilteredCount:
setHasHeaderKeyFilteredCount:
hasHeaderKeyFilteredCount
toCount
language
setLanguage:
headerKeyFilteredCount
_headerKeyFilteredCount
_language
_toCount
TI,N,V_toCount
T@"NSString",&,N,V_language
TI,N,V_headerKeyFilteredCount
initWithMessagePersistence:query:batchSize:firstBatchSize:limit:handler:
_processPersistedMessages:forceFlush:
flush
addPersistedMessage:
addPersistedMessages:
shouldCancel
_persistedMessageQueue
_remaining
_seenGlobalMessages
_batchedMessages
_batchSize
dataDetectionPersistence
searchableIndexManager
attachmentPersistenceManager
mailboxActionPersistence
persistenceStateWithStatistics:
senderPersistence
setVipManager:
setListUnsubscribeHandler:
remoteContentURLCache
setRemoteContentURLCache:
remoteContentURLSession
setRemoteContentURLSession:
contentRuleListManager
alarmScheduler
_senderPersistence
_remoteContentURLCache
_remoteContentURLSession
_contentRuleListManager
_alarmScheduler
T@"EDVIPManager",&,V_vipManager
T@"EDListUnsubscribeHandler",&,N,V_listUnsubscribeHandler
T@"EDPersistenceDatabase",R
T@"EDConversationPersistence",R
T@"EDLocalActionPersistence",R
T@"EDServerMessagePersistenceFactory",R
T@"EDGmailLabelPersistence",R,V_gmailLabelPersistence
T@"EDThreadPersistence",R
T@"EDSenderPersistence",R,V_senderPersistence
T@"EDMailboxActionPersistence",R,N
T@"EDMessagePersistence",R,V_messagePersistence
T@"EDMessageChangeManager",R
T@"EDPersistenceHookRegistry",R,V_hookRegistry
T@"EDSearchableIndexManager",R
T@"EDActivityPersistence",R,V_activityPersistence
T@"EDRemoteContentManager",R
T@"EDRemoteContentPersistence",R
T@"EDAttachmentPersistenceManager",R
T@"EMRemoteContentURLCache",&,N,V_remoteContentURLCache
T@"EMRemoteContentURLSession",&,N,V_remoteContentURLSession
T@"MEContentRuleListManager",R,N,V_contentRuleListManager
T@"EDReadLaterPersistence",R
T@"EDSendLaterPersistence",R
T@"EDDataDetectionPersistence",R
T@"EDRichLinkPersistence",R
T@"EFXPCAlarmScheduler",R,N,V_alarmScheduler
openConnectionIsWriter:
urlForDatabasePath:type:
initWithBasePath:databaseName:maxConcurrentReaders:schema:protectedSchema:propertyMapper:protectedDatabasePersistence:
writersAreWaiting
performReadBlock:
performWriteBlock:
performDatabaseSetupUsingTransaction:block:
performWithOptions:block:
closeAllConnections
isNestedDatabaseCall
checkOutConnectionIsWriter:
checkInConnection:
databaseIsCorrupt
enforceDataProtection
fileProtectionForDatabaseType:
urlForDatabasePath:type:fileProtection:
handleExceptionCreatingConnection:
protectedSchema
propertyMapper
protectedDatabasePersistence
basePath
databaseName
fullPath
setupIsComplete
setSetupIsComplete:
_setupIsComplete
_schema
_protectedSchema
_propertyMapper
_connectionPool
_protectedDatabasePersistence
_basePath
_databaseName
_fullPath
T@"EDProtectedDatabasePersistence",R,N,V_protectedDatabasePersistence
T@"NSString",R,N,V_basePath
T@"NSString",R,N,V_databaseName
T@"NSString",R,N,V_fullPath
TB,V_setupIsComplete
T@"EFSQLSchema",R,N,V_schema
T@"EFSQLSchema",R,N,V_protectedSchema
T@"EFSQLPropertyMapper",R,N,V_propertyMapper
_attachDatabaseWithName:url:error:
_detachDatabaseWithName:
initWithBasePath:databaseName:isWriter:delegate:
initForInMemoryDatabaseIsWriter:delegate:
initWithSQLDB:isWriter:delegate:
preparedStatementForQueryString:
executeSelectStatement:withBlock:error:
executeInsertStatement:error:
executeInsertStatement:rowsChanged:
executeUpdateStatement:error:
executeUpdateStatement:rowsChanged:
executeUpsertStatement:error:
executeUpsertStatement:rowsChanged:
executeDeleteStatement:error:
executeDeleteStatement:rowsChanged:
executeStatementString:errorMessage:
lastInsertedDatabaseID
clearLastInsertedDatabaseID
sqlDB
open
close
isValid
setIsWriter:
isWriter
configureSQLConnection
performWithOptions:transactionError:block:
transactionGeneration
transactionTypeForWriting
checkForConnectionErrorWithMessage:
handleError:message:
handleSQLResult:message:
protectedDatabasePath
databaseIsAttached:
tableExists:
tableExists:inDatabase:
columnExists:inTable:type:
columnExists:inTable:database:type:
protectedDatabaseAttached
journalDatabaseAttached
attachProtectedDatabaseWithName:url:error:
attachProtectedDatabaseWithName:error:
attachProtectedDatabaseWithName:
detachProtectedDatabase
attachJournalDatabase:withName:error:
attachJournalDatabase:withName:
detachJournalDatabase
sqlConnection
_isWriter
_protectedDatabaseName
_journalDatabaseName
_journal
_sqlConnection
T@"EFSQLConnection",R,N,V_sqlConnection
T^{sqlite3=},R,N
Tq,R,N
initWithDelegate:maxConcurrentBackgroundReaders:
backgroundReaderConnection
readerConnection
writerConnection
_connectionWithType:
_lockForConnectionType:resource:
_unlockForConnectionType:resource:
setCacheSize:
cacheSize
maxConcurrentReaders
backgroundReadersWaiting
writersWaiting
maxConcurrentBackgroundReaders
_cacheLock
_cacheSize
_cacheGeneration
_checkoutLock
_checkoutMap
_writerLock
_writerConnection
_writersWaiting
_maxConcurrentBackgroundReaders
_backgroundReadersWaiting
_backgroundReaderResources
T@"<EDPersistenceDatabaseConnectionPoolDelegate>",W,N,V_delegate
TQ,N
TQ,R,N,V_maxConcurrentBackgroundReaders
initWithConnection:generation:
resource
setResource:
connection
generation
type
setType:
_resource
_connection
_generation
_type
T@"EFResource",&,N,V_resource
T@"EDPersistenceDatabaseConnection",R,N,V_connection
TQ,R,N,V_generation
TQ,N,V_type
insertGeneration:
earliestGeneration
latestGeneration
_earliestGeneration
_latestGeneration
Tq,R,N,V_earliestGeneration
Tq,R,N,V_latestGeneration
initWithJournalManager:number:
path
checkOut
checkIn
referenceCount
number
journalManager
_referenceCountLock
_referenceCount
_number
_journalManager
T@"EDPersistenceDatabaseJournalManager",R,N,V_journalManager
TQ,R,N,V_number
initWithBasePath:
currentJournalCreateIfNeeded:
_journalNoLongerReferenced:
oldestJournal
mergedJournal:
_deleteJournalNumber:
_getJournalWithBlock:
waitForDeletes
journalDirectoryPath
checkExistingQueue
deleteQueue
_journalLock
_currentJournal
_shouldDeleteCurrentJournal
_journalNumbers
_pendingDeleteJournalNumbers
_journalsByIndexes
_journalDirectoryPath
_checkExistingQueue
_deleteQueue
T@"NSString",R,C,N,V_journalDirectoryPath
T@"NSObject<OS_dispatch_queue>",R,&,N,V_checkExistingQueue
T@"NSObject<OS_dispatch_queue>",R,&,N,V_deleteQueue
T@"EDPersistenceDatabaseJournal",R,N
test_resetSchema
_initializeSchemas
_schemaWithPopulationBlock:
_schemaProviders
_protectedSchemaProviders
propertiesTableName
mailboxesTableName
propertiesTableSchema
partialMailboxesTableSchema
additionalSchemaProviders
T@"EFSQLPropertyMapper",R,N
initWithColumn:tableName:onDelete:onUpdate:
resolveWithSchema:
resolveToStringForTableNames:
column
tableName
deleteAction
updateAction
_column
_tableName
_deleteAction
_updateAction
T@"EFSQLColumnSchema",R,N,V_column
T@"NSString",R,C,N,V_tableName
TQ,R,N,V_deleteAction
TQ,R,N,V_updateAction
initWithColumn:tableName:
persistenceIsInitializingDatabaseWithConnection:
persistenceDidInvalidate
persistenceDidInitializeConversationSubscriptionProvider
persistenceWillReadMessage:fromRow:
searchableIndexDidAssignTransaction:toUpdates:withMissingIdentifiers:generationWindow:
searchableIndexDidAssignIndexingType:forIdentifiers:generationWindow:
persistenceIsAddingThreadWithObjectID:journaled:generationWindow:
persistenceIsMarkingThreadAsJournaledWithObjectID:generationWindow:
persistenceIsReconcilingJournaledThreadsWithObjectIDs:generationWindow:
persistenceIsChangingThreadWithObjectID:changedKeyPaths:generationWindow:
persistenceIsDeletingThreadWithObjectID:generationWindow:
persistenceDidFinishThreadUpdates
persistenceDidResetThreadScope:
persistenceDidAddBrandIndicator:forLocation:
methodSignatureForSelector:
_proxiedProtocols
_initializeMethodSignatures
_registerSelector:
_registerHookResponder:withMethodDescription:
_registerHookResponder:protocol:
unregisterHookResponder:
unregisterAllHookResponders
_copyRespondersForSelector:
_messageRespondersWithInvocation:
_forwardStackInvocation:
registerDatabaseChangeHookResponder:
registerMailboxChangeHookResponder:
registerMessageChangeHookResponder:
registerThreadChangeHookResponder:
registerAccountChangeHookResponder:
registerSearchableIndexHookResponder:
registerMessageReadHookResponder:
registerMessageDeliveryHookResponder:
registerCloudStorageChangeHookResponder:
registerActivityHookResponder:
registerProtectedDataReconciliationHookResponder:
registerBrandIndicatorChangeHookResponder:
registerSenderBucketChangeHookResponder:
_hookRespondersBySelector
_methodSignaturesBySelector
baseAccountDirectoryForPersonaIdentifier:
baseAccountDirectoryPathForPersonaIdentifier:
macOS_baseAccountDirectoryPathForPersonaIdentifier:
iOS_baseAccountDirectoryPathForPersonaIdentifier:
hasQuotaEvent
hasSubmittedEvent
hasRawData
quotaEvent
setQuotaEvent:
submittedEvent
setSubmittedEvent:
rawData
setRawData:
_quotaEvent
_rawData
_submittedEvent
T@"EDPETQuotaReachedEvent",&,N,V_quotaEvent
T@"EDPETSubmittedEvent",&,N,V_submittedEvent
T@"NSData",&,N,V_rawData
lowercaseString
enumerateFramesInData:block:
hashedString:
hashedContactIDForAddress:
hashedSubject:
hashedAccountID:
hashedMailboxID:
hashedConversationID:
hashedMessageHeadersForMessage:
initWithDirectory:userProfileProvider:contactStore:vipManager:
userID
deviceID
persistentBits
_resetIdentifiers
meContactIdentifier
_rotateLogWithCompressedData:
_openCurrentLogfile
_buildLogFileURLInDir:
_openFileForAppending:
_framedMessage:
_scanForMessageIDs:logVersion:
_writeEvent:
_writeMessageDataIfNecessary:
_writeMessageDataIfNecessary:account:
_writeHeader
_writeQuotaReachedEvent
_estimateStopCount:
_compressFramedMessagesIntoBatch:
batchedEventsForSubmission
_isLogQuotaReached
waitForPendingWrites
_eventNameFromString:
_truncatedUNIXTimestampFromDate:
_eventForName:date:
_truncatedSHA256:
_currentLocaleIdentifier
_messageDataEventForMessage:account:
currentLogFile
setCurrentLogFile:
profileProvider
contactStore
contactIDCache
setMeContactIdentifier:
rotatingSalt
setRotatingSalt:
workQueue
directory
logFileHandle
setLogFileHandle:
shouldLog
setShouldLog:
currentLogMessageIDs
setCurrentLogMessageIDs:
_stringHasher
_userID
_deviceID
_shouldLog
_currentLogFile
_contactStore
_contactIDCache
_meContactIdentifier
_rotatingSalt
_directory
_logFileHandle
_currentLogMessageIDs
T@"<EMUserProfileProvider>",R,N,V_profileProvider
T@"CNContactStore",R,N,V_contactStore
T@"EFLazyCache",R,N,V_contactIDCache
T@"NSString",&,N,V_meContactIdentifier
T@"NSData",&,N,V_rotatingSalt
T@"NSObject<OS_dispatch_queue>",R,N,V_workQueue
TAI,N,V_sequenceNumber
T@"NSURL",R,N,V_directory
T@"NSURL",&,N,V_currentLogFile
T@"NSFileHandle",&,N,V_logFileHandle
TAB,N,V_shouldLog
T@"EFMutableInt64Set",&,N,V_currentLogMessageIDs
setDroppedEventsCount:
setHasDroppedEventsCount:
hasDroppedEventsCount
droppedEventsCount
_droppedEventsCount
TQ,N,V_droppedEventsCount
simpleAddress
runWithConnection:sentMailboxURLs:contactStore:
_allSenderAddressIDsWithConnection:sentMailboxURLStrings:
_addressesForSenderIDs:withConnection:
_senderIDsGroupedByContactsForEmailAddressesByContact:withConnection:
_insertSendersGroupedByContact:withConnection:
_insertGroupedSendersWithoutContact:withConnection:
_clearSendersTableWithConnection:
_clearSendersAddressesTableWithConnection:
_insertSenderWithAddresses:contact:connection:error:
_senderIDsGroupedByContactsForSenderAddressesToIDs:withContactStore:unmatchedEmailAddresses:otherEmailAddressesByContact:
_senderIDsGroupedBySimpleAddressForEmailAddresses:senderIDsByEmailAddress:
_combineDictionary:withDictionary:
collectionItemID
initWithQuery:threadScope:messagePersistence:threadPersistence:hookRegistry:remindMeNotificationController:observer:observationIdentifier:observationResumer:
_onScheduler:performCancelableBlock:
_addChangeToPendingChanges:forThreadObjectID:
_isAddingOrDeletingObjectID:
_flushUpdatesWithReason:
_persistenceIsAddingThreadWithObjectID:
_persistenceIsChangingThreadWithObjectID:changedKeyPaths:
_messageForPersistedMessage:
_oldestThreadsNeedUpdate
changeScheduler
backgroundWorkScheduler
pendingChanges
setPendingChanges:
pendingPositionChanges
setPendingPositionChanges:
unreportedJournaledObjectIDs
setUnreportedJournaledObjectIDs:
reportedJournaledObjectIDs
setReportedJournaledObjectIDs:
oldestThreadObjectIDsByMailbox
setOldestThreadObjectIDsByMailbox:
updateOldestThreadsCancelationToken
setUpdateOldestThreadsCancelationToken:
_changeScheduler
_backgroundWorkScheduler
_pendingChanges
_pendingPositionChanges
_unreportedJournaledObjectIDs
_reportedJournaledObjectIDs
_oldestThreadObjectIDsByMailbox
_updateOldestThreadsCancelationToken
T@"<EFScheduler>",R,N,V_changeScheduler
T@"<EFScheduler>",R,N,V_backgroundWorkScheduler
T@"NSMutableDictionary",&,N,V_pendingChanges
T@"NSMutableArray",&,N,V_pendingPositionChanges
T@"NSMutableSet",&,N,V_unreportedJournaledObjectIDs
T@"NSMutableDictionary",&,N,V_reportedJournaledObjectIDs
T@"NSMutableDictionary",&,N,V_oldestThreadObjectIDsByMailbox
T@"<EFCancelable>",&,N,V_updateOldestThreadsCancelationToken
T@"EDThreadPersistence",R,N,V_threadPersistence
addObjectIDToAdd:before:
addObjectIDToMove:before:
addObjectIDToDelete:
isAddingObjectID:
_isMovingObjectID:
isDeletingObjectID:
objectIDsToAddByBeforeObjectID
setObjectIDsToAddByBeforeObjectID:
objectIDsToMoveByBeforeObjectID
setObjectIDsToMoveByBeforeObjectID:
objectIDsToDelete
setObjectIDsToDelete:
_objectIDsToAddByBeforeObjectID
_objectIDsToMoveByBeforeObjectID
_objectIDsToDelete
T@"NSMutableDictionary",&,N,V_objectIDsToAddByBeforeObjectID
T@"NSMutableDictionary",&,N,V_objectIDsToMoveByBeforeObjectID
T@"NSMutableSet",&,N,V_objectIDsToDelete
protectedDatabaseName
journalDatabaseName
_isRecoverableError:
_resultForConnection:success:error:errorMessage:
initWithBasePath:hookRegistry:
initWithJournalManager:hookRegistry:
attachProtectedOrJournalDatabaseToConnectionIfNecessary:withSchema:
detachProtectedOrJournalDatabaseFromConnectionIfNecessary:
_ensureJournalIsAttachedToConnection:withSchema:
_ensureProtectedDatabaseOrJournalIsAttachedToConnection:withSchema:
_attachProtectedDatabaseToConnection:withSchema:error:
_detachProtectedDatabaseFromConnection:
_attachJournalDatabaseToConnection:withSchema:
_detachJournalDatabaseFromConnection:
_initializeDatabase:withConnection:schema:error:
_upgradeJournalWithConnection:schema:error:
_updateSqliteSequenceForDatabase:schema:withConnection:error:
_maxRowIDForColumn:withConnection:
_performOnDemandReconciliationForConnection:withSchema:
reconcileJournalsWithSchema:completionBlock:
_reconcileJournalsWithSchema:connection:
_runReconciliationWithSchema:connection:
_mergeSchema:connection:journaledRows:newRows:
_mergeTable:connection:journaledRows:newRows:
_deleteRowIDs:fromJournal:withConnection:
_databaseIDsToDeleteForTable:
_deleteDatabaseIDs:fromTable:
_removeExistingDatabaseIDs:withColumn:connection:
_isJournalMalformedForSchema:connection:
_executeUpdateStatement:onConnection:errorMessage:
_executeStatementString:onConnection:errorMessage:
_allReferencingColumnsForTable:
registerMergeHandler:forTable:
supportsJournaling
protectedDataAvailable
finishJournalReconciliation:
addAdditionalCriteriaToCleanupActivity:
reconciliationQueue
isReconciling
setIsReconciling:
reconciliationMergeHandlers
_initializationLock
_reconciliationLock
_isReconciling
_reconciliationQueue
_reconciliationMergeHandlers
T@"NSObject<OS_dispatch_queue>",R,&,N,V_reconciliationQueue
TB,N,V_isReconciling
T@"EFLocked",R,N,V_reconciliationMergeHandlers
initWithQueryType:
queryWithStartDate:endDate:
T@"NSString",R,N,V_queryType
initWithMessageID:readLaterDate:displayDate:
messageID
readLaterDate
displayDate
_messageID
_readLaterDate
_displayDate
T@"ECAngleBracketIDHash",R,N,V_messageID
T@"NSDate",R,N,V_readLaterDate
T@"NSDate",R,N,V_displayDate
persistedDictionaryDidChangeRemotelyWithChangedItems:deletedItems:
cloudStorageReadLaterDateForMessage:
initWithMutableDictionary:hookRegistry:
initWithHookRegistry:
addEntryForMessage:date:
updateDisplayDateForMessage:displayDate:
removeEntryForMessage:
_keyFormessage:
_messageHashForKey:
_persistentDictionary
hasReadLaterMessages
persistReadLaterForMessage:date:
removeReadLaterForMessage:
_persistReadLater:date:
_removeReadLater:
_resetDisplayDateForMessage:connection:
cloudStorage
setCloudStorage:
_cloudStorage
T@"EDReadLaterCloudStorage",&,N,V_cloudStorage
nextDate
setNextDate:
T@"NSDate",C,N
localizedRemindMeNotificationTitle
controller:scheduleAlarmForMessage:date:
initWithHookRegistry:messagePersistence:alarmScheduler:
initWithHookRegistry:messagePersistence:alarmDateProvider:eventDelegate:alarmScheduler:
test_waitForUpdates
observers
addObserver:
removeObserver:
performDelayedTasks
_updateAlarm
_updateAlarmUpdatedMessages:readLaterDate:
_fetchMessagesToNotifyWithStartDate:endDate:
_alarmFired
_notify:
resetRemindMeAlarmIfNeeded
eventDelegate
xpcAlarm
_alarmQueue
_alarmDateProvider
_readLaterQueryCreator
_eventDelegate
_xpcAlarm
T@"NSHashTable",R,N
T@"<EDRemindMeNotificationControllerEventDelegate>",R,W,N,V_eventDelegate
T@"EFXPCAlarm",R,N,V_xpcAlarm
exportedInterface
getMessageRepositoryInterface:
getOutgoingMessageRepositoryInterface:
getAccountRepositoryInterface:
getSenderRepositoryInterface:
getFetchControllerInterface:
getMailboxRepositoryInterface:
getClientStateInterface:
getSearchableIndexInterface:
getInteractionLoggerInterface:
getVIPManagerInterface:
getActivityRegistryInterface:
getDiagnosticInfoGathererInterface:
launchForEarlyRecovery:
setAllowsBackgroundResume:
T@"NSXPCInterface",R
initWithConnection:daemonInterfaceFactory:serverRemoteClientsProvider:
accountRepository
mailboxRepository
outgoingMessageRepository
senderRepository
vipManagerInterface
activityRegistry
clientConnection
daemonInterfaceFactory
serverRemoteClientsProvider
clientState
messageRepository
clientResumer
diagnosticInfoGatherer
_accountRepository
_mailboxRepository
_outgoingMessageRepository
_senderRepository
_vipManagerInterface
_activityRegistry
_clientConnection
_daemonInterfaceFactory
_serverRemoteClientsProvider
_messageRepository
_clientResumer
_diagnosticInfoGatherer
T@"NSXPCConnection",R,N,V_clientConnection
T@"EDDaemonInterfaceFactory",R,N,V_daemonInterfaceFactory
T@"<EDServerRemoteClientsProvider>",R,W,N,V_serverRemoteClientsProvider
T@"EDAccountRepository",R,N,V_accountRepository
T@"EDClientState",R,N,V_clientState
T@"EDMailboxRepository",R,N,V_mailboxRepository
T@"EDMessageRepository",R,N,V_messageRepository
T@"EDOutgoingMessageRepository",R,N,V_outgoingMessageRepository
T@"EDSenderRepository",R,N,V_senderRepository
T@"EDActivityRegistry",R,N,V_activityRegistry
T@"<EMVIPManagerInterface>",R,N,V_vipManagerInterface
T@"EDClientResumer",R,N,V_clientResumer
T@"EDDiagnosticInfoGatherer",R,N,V_diagnosticInfoGatherer
initWithRemoteClient:
remoteClient
setRemoteClient:
_remoteClient
T@"EDRemoteClient",W,V_remoteClient
initWithBaseURL:diskCapacity:
_cacheURLWithBaseURL:
cacheURL
diskCapacity
_cacheURL
_diskCapacity
T@"NSURL",R,N,V_cacheURL
TQ,R,N,V_diskCapacity
initWithRemoteContentPersistence:contentRuleListManager:urlSession:
_scheduleBackgroundRequests
_updateScheduling
_scheduleRequestForLinks:unconditionally:withDelay:completionHandler:
_requestRemoteLinksInBackground:unconditionally:hasMoreLinks:deferBlock:
_performRequests:unconditionally:withDeferBlock:completedCount:
_issueAndWaitForBatch:deferBlock:successful:failed:canceled:deferred:
unconditionalRequestScheduler
_requestSchedulerWithInterval:
shouldAddRemoteContentLinksForMessage:logMessage:
shouldAddRemoteContentLinksForMessageWithDateReceived:
shouldVerifyRemoteLinks
addRemoteContentLinks:
addRemoteContentLinks:andVerifyWithParsedLinks:defaultCharsetName:
_addRemoteContentLinks:andVerify:WithParsedLinks:defaultCharsetName:
addRemoteContentLinks:requiredParsing:
_getTimeout
_updateTimeoutSettingDefaultIfNeeded:
_viewDurationsFromBiome
requestLock
requestedSinceLastPrune
setRequestedSinceLastPrune:
minimumTimeout
setMinimumTimeout:
maximumTimeout
setMaximumTimeout:
timeoutLastUpdate
setTimeoutLastUpdate:
requestInterval
setRequestInterval:
batchSize
setBatchSize:
schedulingLastUpdate
setSchedulingLastUpdate:
testDelegate
setTestDelegate:
requestSchedulerBlock
setRequestSchedulerBlock:
pruneFrequency
setPruneFrequency:
_requestScheduler
_unconditionalRequestScheduler
_remainingCountToSchedule
_requestSchedulerLock
_timeoutLock
_schedulingLock
_token
_remoteLinkVerificationTimes
_requestLock
_requestedSinceLastPrune
_minimumTimeout
_maximumTimeout
_timeoutLastUpdate
_requestInterval
_schedulingLastUpdate
_testDelegate
_requestSchedulerBlock
_pruneFrequency
T@"<EFScheduler>",R,N
T@"NSLock",R,N,V_requestLock
TQ,N,V_requestedSinceLastPrune
Td,N,V_minimumTimeout
Td,N,V_maximumTimeout
T@"NSDate",&,N,V_timeoutLastUpdate
Td,N,V_requestInterval
TQ,N,V_batchSize
T@"NSDate",&,N,V_schedulingLastUpdate
T@"<EDRemoteContentManagerTestDelegate>",W,N,V_testDelegate
T@?,C,N,V_requestSchedulerBlock
TQ,N,V_pruneFrequency
_remoteContentLinksTableSchemaWithName:
initWithDatabase:useAdditionalTable:
_currentRowCount
_protectedRowCount
_incrementCurrentRowCountBy:
_decrementCurrentRowCountBy:
_incrementProtectedRowCountBy:
_decrementProtectedRowCountBy:
_initializeCurrentRowCount
_initializeProtectedRowCount
_rowCountForTable:
addRemoteContentLinks:newLinks:
_addRemoteContentLinks:withDate:toTable:withConnection:newLinks:
updateRequestCountForRemoteContentLinks:updateLastSeen:
remoteContentLinksBelowCount:limit:
countOfLinksLastSeenSince:
countOfUnrequestedLinks
pruneAllRemoteContentLinksWithMinimumCount:
_refillFromAdditionalTable
getRemoteContentURLInfoOrderedBy:inReverseOrder:limit:error:
_getRemoteContentURLInfoForTable:orderedBy:inReverseOrder:limit:connection:error:
useAdditionalTable
analyticsScheduler
maximumRemoteContentLinks
setMaximumRemoteContentLinks:
pruneThreshold
setPruneThreshold:
_useAdditionalTable
_analyticsScheduler
_maximumRemoteContentLinks
_pruneThreshold
TB,R,N,V_useAdditionalTable
T@"NSBackgroundActivityScheduler",R,N,V_analyticsScheduler
TQ,N,V_maximumRemoteContentLinks
TQ,N,V_pruneThreshold
_createTempMessagesTable:
_recreateMessagesIndices:
_copyMessagesData:
_swapMessagesTables:
_recreateThreadsTable:
_recreateThreadsIndices:
_dropTable:connection:
_truncateTable:connection:
_dropThreadCategoriesIndex:
initWithPersistentID:title:url:data:
initWithTitle:url:data:
title
_persistentID
_title
_url
T@"NSNumber",R,N,V_persistentID
T@"NSString",R,N,V_title
T@"NSURL",R,N,V_url
T@"NSData",R,N,V_data
richLinksTableSchema
messagesRichLinksTableSchema
richLinksTableName
messageRichLinksTableName
saveRichLinkData:globalMessageID:basePath:
saveRichLinkData:url:title:globalMessageID:basePath:
richLinkDataForPersistentID:basePath:
datasForPersistentIDs:basePath:
richLinkPersistentIDsForGlobalMessageID:
_hashForRichLinkData:
_richLinkDirectoryURLWithBasePath:
_richLinkFileURLWithID:basePath:
richLinkFileURLWithID:basePath:
richLinkMetadataDataForPersistentID:basePath:
verifyFileExistsForRichLinkID:basePath:
richLinkBecameAvailable:
didCancelDataSourceUpdateRequestForSearchableIndexSchedulable:
searchableIndex:foundAttachmentPaths:forMessagePersistentID:
searchableIndex:prepareToIndexAttachmentsForMessageWithIdentifier:
isValidTransaction:
isIncrementalIndexingType:
userHandle
_localClientStateURL
_localClientState
_saveLocalClientState:
searchableIndex:reindexAllSearchableItemsWithAcknowledgementHandler:
searchableIndex:reindexSearchableItemsWithIdentifiers:acknowledgementHandler:
searchableIndexDidThrottle:
searchableIndexDidFinishThrottle:
dataForSearchableIndex:itemIdentifier:typeIdentifier:error:
fileURLForSearchableIndex:itemIdentifier:typeIdentifier:inPlace:error:
bundleIDForSearchableIndexVerifier:
dataSamplesForSearchableIndexVerifier:searchableIndex:count:lastVerifiedMessageID:
searchableIndexForSearchableIndexVerifier:
knownTransactionIDsForSearchableIndexVerifier:
isDataSourceIndexingPermitted
setDataSourceIndexingPermitted:
isPluggedIn
indexName
pendingIndexItemsCount
dataSourceIndexingPermitted
TB,N,GisDataSourceIndexingPermitted
pluggedIn
TB,R,N,GisPluggedIn
reindexSearchableItemsWithIdentifiers:acknowledgementHandler:
reindexAllSearchableItemsWithAcknowledgementHandler:
initWithName:dataSource:reasonProvider:
searchIndex
copyDiagnosticInformation
_powerStateChanged
_promptToFileRadarAboutReindexing:
_scheduleSpotlightVerification
_clearOrphanedSearchableMessagesFromDatabase
_scheduleSpotlightVerificationOnIndexingQueueWithCompletion:
_registerDistantFutureSpotlightVerification
_verifySpotlightIndex
_handleFailingTransactionIDs:
_throttleRequestedSize:targetTime:action:
setForeground:
_fetchLastClientState
_noteNeedsLastClientStateFetch
_transaction
_nextTransaction
_eventDataForTransitionState:
_suspend
suspend
_resume
resume
setPersistenceAvailable:
isPersistenceAvailable
resumeCount
_queueContentsAllowsRefresh
_dataSourceScheduleWork:
_dataSourceAssignTransaction:updates:completion:
_dataSourceAssignTransaction:forIdentifiers:completion:
_dataSourceInvalidateItemsGreaterThanTransaction:completion:
_dataSourceRequestNeededUpdatesExcludingIdentifiers:completion:
_dataSourceVerifyRepresentativeSampleWithCompletion:
_dataSourcePrepareToIndexItems:fromRefresh:withCompletion:
_startCoalescingTimer
_stopCoalescingTimer
_coalescingTimerFired
_transitionWithBudgetTimeUsed:
_queueConsumeBudgetElapsedPeriod:
_queueConsumeBudgetItemCount:
_queueRefresh
_countOfItemsInPendingQueues
_queueTransitionActive:fromRefresh:
_suspendIndexingScheduler
_resumeIndexingScheduler
_logSignpostForIndexingBatchStartWithPendingItemsCount:
_logSignpostForIndexingBatchAssignedDomainRemovalCount:
_logSignpostForIndexingBatchAssignedUpdatesWithItemsIndexedCount:
_logSignpostForIndexingBatchCompletedWithItemsIndexedCount:
_scheduleProcessPendingItemsFromRefresh:
_scheduleDataSourceRefresh
beginUpdatesAffectingDataSourceAndIndex
endUpdatesAffectingDataSourceAndIndex
performBlockAffectingDataSourceAndIndex:
isPerformingBlockAffectingDataSourceAndIndex
_consumeBatchOfSize:
_identifiersForItems:
_identifiersStringForItems:maxLength:
_getDomainRemovals:identifierRemovals:
_processIndexingBatch:clientState:itemsNotIndexed:
_processDomainRemovals:
_processIdentifierRemovals:
_pendingIdentifiers
_processRefreshRequestWithCompletion:
_processSpotlightVerificationWithCompletion:
issueDiagnosticsRequestForMessageRowId:
indexedEmptySubjectIdentifers
_invalidateItemsInTransactions:
reindexAllItemsWithOptions:acknowledgementHandler:
indexItems:
indexItems:immediately:
indexItems:fromRefresh:immediately:
_indexItems:fromRefresh:immediately:
_doIndexItems:fromRefresh:immediately:
removeItemsWithIdentifiers:
removeItemsWithIdentifiers:reasons:fromRefresh:
removeItemsForDomainIdentifier:
removeAllItems
removeAllItemsWithAcknowledgementHandler:
messageIDsMatchingQuery:
searchableItemSnippetDataMatchingCriterion:
_preprocessItemIfNecessary:fromRefresh:
removeMessages:
indexAttachmentsForMessageWithIdentifier:immediately:
indexRichLinksForMessageWithIdentifier:immediately:
indexMessages:includeBody:indexingType:
markMessagesAsPrinted:
logPowerEventWithIdentifier:eventData:
powerObservable
shouldCancelSearchQuery
addSearchQueryCancelable:
removeSearchQueryCancelable:
attachmentBecameAvailable:
canIndexAttachments
dataSourceRefreshReasons
purgeReasons
exclusionReasons
currentReasons
dataSource
setDataSource:
reasonProvider
setReasonProvider:
schedulableDelegate
setSchedulableDelegate:
setSearchIndex:
skipIndexExclusionCheck
setSkipIndexExclusionCheck:
clientStateFetched
setClientStateFetched:
enableSpotlightVerification
setEnableSpotlightVerification:
searchableIndexBundleID
setSearchableIndexBundleID:
coalescingDelaySeconds
setCoalescingDelaySeconds:
dataSourceUpdateTimeLimit
setDataSourceUpdateTimeLimit:
delayDataSourceAssignmentFuture
setDelayDataSourceAssignmentFuture:
_indexName
_stateTransitionScheduler
_coalescingTimer
_resumeCount
_throttledIndexingBatchSize
_throttledDataSourceBatchSize
_currentMaximumBatchSize
_batchIndexingActivity
_removedIdentifiers
_preparingItems
_pendingItems
_preprocessingItems
_processingItems
_pendingDomainRemovals
_pendingIdentifierRemovals
_indexingScheduler
_dataSourceScheduler
_addIndexItemsScheduler
_preprocessingScheduler
_mainThreadAccessibleIvarLock
_indexingBatchScheduler
_searchResultsCache
_isActive
_needsRefresh
_needsVerification
_coalesceTimerFired
_scheduledProcessing
_scheduledRefresh
_scheduledVerification
_indexImmediately
_countOfBlocksAffectingDataSourceAndIndex
_lastReindexRadarPrompt
_dataSourceIndexingPermitted
_persistenceAvailable
_skipIndexExclusionCheck
_clientStateFetched
_enableSpotlightVerification
_dataSource
_reasonProvider
_schedulableDelegate
_searchIndex
_searchableIndexBundleID
_coalescingDelaySeconds
_dataSourceUpdateTimeLimit
_delayDataSourceAssignmentFuture
transaction
Tq,R,G_transaction
T@"CSSearchableIndex",&,N,V_searchIndex
TB,N,V_skipIndexExclusionCheck
TB,N,V_clientStateFetched
TB,N,V_enableSpotlightVerification
T@"NSString",C,N,V_searchableIndexBundleID
Td,N,V_coalescingDelaySeconds
Td,N,V_dataSourceUpdateTimeLimit
Tq,R
active
TB,R,GisActive
T@"EFFuture",&,N,V_delayDataSourceAssignmentFuture
T@"<EDSearchableIndexDataSource>",W,N,V_dataSource
T@"<EDSearchableIndexReasonProvider>",W,N,V_reasonProvider
T@"<EDSearchableIndexSchedulableDelegate>",W,N,V_schedulableDelegate
performingBlockAffectingDataSourceAndIndex
TB,R,GisPerformingBlockAffectingDataSourceAndIndex
persistenceAvailable
TB,GisPersistenceAvailable,V_persistenceAvailable
T@"EFObservable",R,N
TB,N,GisDataSourceIndexingPermitted,V_dataSourceIndexingPermitted
criterion
setCriterion:
mailboxIDs
setMailboxIDs:
_criterion
_mailboxIDs
T@"<EDSearchableCriterion>",&,N,V_criterion
T@"NSIndexSet",C,N,V_mailboxIDs
initWithPurgeReasons:exclusionReasons:
identifiers
_identifiersPassingReasonsTest:
purgedIdentifiers
deletedIdentifiers
addIdentifiers:withReasons:
removeIdentifier:
removeAllIdentifiers
setPurgeReasons:
setExclusionReasons:
_reasonsByIdentifier
_purgeReasons
_exclusionReasons
T@"NSSet",C,N,V_purgeReasons
T@"NSSet",C,N,V_exclusionReasons
identifierForAttachmentPersistentID:
attachmentPersistentIDFromItemIdentifier:
searchableItem
preprocess
fetchIndexableAttachments
setNeedsAllAttributesIndexingType
setNeedsAllAttributesIncludingDataDetectionResultsIndexingType
domainIdentifier
indexingType
setIndexingType:
itemInstantiationTime
estimatedSizeInBytes
underlyingData
setUnderlyingData:
hasCompleteData
alwaysMarkAsIndexed
shouldExcludeFromIndex
requiresPreprocessing
T@"NSDate",R,N
T@"NSData",&,N
initWithAttachmentPersistentID:messagePersistentID:metadatum:
attributeSetForFilePromise
attachmentPersistentID
setAttachmentPersistentID:
metadatum
setMetadatum:
setAttributeSetForFilePromise:
setRequiresPreprocessing:
searchableItemProcessingDelay
setSearchableItemProcessingDelay:
_searchableItem
_requiresPreprocessing
_underlyingData
_indexingType
_itemInstantiationTime
_attachmentPersistentID
_metadatum
_attributeSetForFilePromise
_searchableItemProcessingDelay
T@"EFPromise",&,N,V_attributeSetForFilePromise
T@"NSString",C,N,V_attachmentPersistentID
T@"NSString",C,N,V_messagePersistentID
T@"EDSearchableIndexAttachmentItemMetadatum",&,N,V_metadatum
TB,N,V_requiresPreprocessing
Td,N,V_searchableItemProcessingDelay
T@"NSString",R,C,N,V_identifier
Tq,N,V_indexingType
TQ,R,N,V_itemInstantiationTime
T@"NSData",&,N,V_underlyingData
setDomainIdentifier:
accountIdentifier
setAccountIdentifier:
mailboxIdentifiers
setMailboxIdentifiers:
senderAddress
setSenderAddress:
recipientAddresses
setRecipientAddresses:
dateSent
setDateSent:
T@"NSArray",C,N
T@"NSDate",&,N
initWithAttachmentFileURL:builder:
canReadAttachmentFile
attachmentFileURL
_attachmentFileURL
_domainIdentifier
_accountIdentifier
_mailboxIdentifiers
_senderAddress
_recipientAddresses
_dateSent
T@"NSString",C,N,V_domainIdentifier
T@"NSString",C,N,V_accountIdentifier
T@"NSArray",C,N,V_mailboxIdentifiers
T@"NSString",C,N,V_senderAddress
T@"NSArray",C,N,V_recipientAddresses
T@"NSDate",&,N,V_dateReceived
T@"NSDate",&,N,V_dateSent
T@"NSURL",R,N,V_attachmentFileURL
defaultConfiguration
nonSchedulingBudgetConfiguration
initWithTime:periodDuration:numberOfItemsToIndexOnResume:enableActivityBasedScheduling:autoStartMaintenanceIndexing:allowBacklogIndexingOnPower:
initWithTime:periodDuration:numberOfItemsToIndexOnResume:
time
periodDuration
numberOfItemsToIndexOnResume
enableActivityBasedScheduling
setEnableActivityBasedScheduling:
autoStartMaintenanceIndexing
setAutoStartMaintenanceIndexing:
allowBacklogIndexingOnPower
setAllowBacklogIndexingOnPower:
_enableActivityBasedScheduling
_autoStartMaintenanceIndexing
_allowBacklogIndexingOnPower
_time
_periodDuration
_numberOfItemsToIndexOnResume
TB,N,V_enableActivityBasedScheduling
TB,N,V_autoStartMaintenanceIndexing
TB,N,V_allowBacklogIndexingOnPower
Td,R,N,V_time
Td,R,N,V_periodDuration
Tq,R,N,V_numberOfItemsToIndexOnResume
longLongValue
doubleValue
transactionAttributeKey
clientStateFromData:
initWithDictionary:
archiveRepresentation
setTransaction:
transactionValue
addTransactionValueToAttributeSet:
transactionDate
setTransactionDate:
systemBuildVersion
setSystemBuildVersion:
_transactionValue
_transactionDate
_systemBuildVersion
Tq,N,V_transaction
T@"NSNumber",R,N
T@"NSDate",&,N,V_transactionDate
T@"NSString",C,N,V_systemBuildVersion
itemWithMessage:bodyData:fetchBody:
itemWithIdentifier:message:bodyData:fetchBody:
indexingPriorityByIndexingType:
domainIdentifierForAccountID:mailboxPersistentID:
domainIdentifierForMessage:
accountIdentifierForMessage:
mailboxIdentifiersForMessage:result:
peopleFromCommentedAddresses:
initWithIdentifier:message:bodyData:fetchBody:
initWithMessage:bodyData:fetchBody:
initWithIdentifier:
linksAttributeKey
phoneNumbersAttributeKey
addressesAttributeKey
calendarEventsAttributeKey
trackingNumbersAttributeKey
flightNumbersAttributeKey
addAttachmentAttributesToAttributeSet:
addFlagsAttributesToAttributeSet:
addUpdatableAttributesToAttributeSet:
addStaticAttributesToAttributeSet:
_addStaticAttributesToAttributeSet:
addDataDetectionAttributesToAttributeSet:
bodyData
setBodyData:
isEncrypted
setIsEncrypted:
includeEncryptedBody
setIncludeEncryptedBody:
fetchBody
setHasCompleteData:
_isEncrypted
_includeEncryptedBody
_fetchBody
_hasCompleteData
_bodyData
T@"<EDBaseMessage>",R,N,V_message
T@"NSData",&,N,V_bodyData
TB,N,V_isEncrypted
TB,N,V_includeEncryptedBody
TB,R,N,V_fetchBody
TB,N,V_hasCompleteData
csIdentifierForMailbox:
initWithDatabase:messagePersistence:richLinkPersistence:hookResponder:
index
enableIndexingAndBeginScheduling:
enableIndexingAndBeginScheduling:budgetConfiguration:
_removeAllItemsFromIndexAndWait:options:
removeAllItemsFromIndexAndWait:skipInvalidation:
setNeedsReindex
_removeItemsForPersistedMessages:
needsReindex
setNeedsReindex:
needsToScheduleRecurringActivity
setNeedsToScheduleRecurringActivity:
_needsReindex
_needsToScheduleRecurringActivity
TB,N,V_needsReindex
TB,N,V_needsToScheduleRecurringActivity
T@"EDSearchableIndexPersistence",R,N
T@"EDSearchableIndexScheduler",R,N
T@"EDSearchableIndex",R,N
initWithItem:
addItem:
addPendingItem:
items
setItems:
referenceItem
_items
_referenceItem
T@"NSMutableArray",&,N,V_items
T@"<EDIndexableItem>",R,N,V_referenceItem
T@"NSString",C,N,V_attachmentID
richLinkItemIdentifier
setRichLinkItemIdentifier:
richLinkID
setRichLinkID:
setTitle:
setUrl:
_richLinkItemIdentifier
_richLinkID
T@"NSString",C,N,V_richLinkItemIdentifier
T@"NSString",C,N,V_richLinkID
T@"NSString",C,N,V_title
T@"NSString",C,N,V_url
ef_quotedSQLEscapedString
searchableMessagesTableName
searchableRebuildTableSchema
searchableMessagesTableSchema
searchableMessageTombstonesTableSchema
searchableAttachmentsTableSchema
searchableRichLinksTableSchema
searchableDataDetectionResultsTableSchema
updatesForSearchableIndex:excludingIdentifiers:count:cancelationToken:
indexingTypeForSearchableIndex:item:
searchableIndex:assignIndexingType:forIdentifiers:
searchableIndex:willRemoveIdentifiers:type:
childIdentifiersToRemoveFromSearchableIndex:whenRemovingParentIdentifiers:
searchableIndex:assignTransaction:updates:
searchableIndex:invalidateItemsGreaterThanTransaction:
searchableIndex:invalidateItemsInTransactions:
verificationDataSamplesForSearchableIndex:count:lastVerifiedMessageID:
distinctTransactionIDsForSearchableIndex:
clearOrphanedSearchableMessagesFromDatabase
searchableIndex:attachmentItemsForMessageWithIdentifier:
searchableIndex:richLinkItemsForMessageWithIdentifier:
lastProcessedAttachmentID
setLastProcessedAttachmentID:
messagesWhere:sortedBy:limit:
searchableIndexItemsFromMessages:type:
attachmentItemMetadataForAttachmentID:messagePersistentID:name:mailboxID:result:
attachmentItemMetadataForAttachmentID:attachmentPersistentID:messagePersistentID:name:mailboxID:result:
verificationDataSamplesFromMessageIDTransactionIDDictionary:
additionalFilterClause
_messagesRequiringIndexingForType:excludingIdentifiers:limit:
_canPerformIncrementalIndexForIdentifier:indexingType:
_searchableIndexMessageIndexingTypes
_assignIndexedItems:connection:query:indexedBindingsGenerator:
_assignIndexedItems:transaction:connection:
_addTombstonesForIdentifiers:type:connection:
_assignTombstonesForIdentifiers:type:transaction:connection:
_purgeSpotlightTombstonesBeforeTransaction:connection:
_identifiersForTombstonesOfType:connection:
_removeIndexedIdentifiers:connection:
_identifiersForRemovedItemsUsingConnection:
_identifiersForDeletedMessagesUsingConnection:
_messageIDTransactionIDDictionaryToVerifyUsingConnection:count:lastVerifiedMessageID:
_attachmentDataForItemsRequiringIndexingExcludingIdentifiers:limit:cancelationToken:connection:
_attachmentDataForMessageWithIdentifier:connection:
_attachmentItemsFromAttachmentData:limit:cancelationToken:
_identifiersForDeletedAttachmentsUsingConnection:
_identifiersForAttachmentsInTransactions:usingConnection:
_identifiersForAttachmentsWithQuery:usingConnection:
_richLinkDataForItemsRequiringIndexingExcludingIdentifiers:limit:cancelationToken:connection:
_richLinkItemsFromRichLinkData:limit:cancelationToken:
searchableRichLinkItemMetadataForRichLinkID:richLinkItemIdentifier:messagePersistentID:mailboxID:title:url:result:
allMailboxIdentifiersForMessage:result:
_assignIndexedAttachmentItems:transaction:connection:
_assignIndexedRichLinkItems:transaction:connection:
_assignIndexedDataDetectionItems:transaction:connection:
_addSearchableDataDetectionResults:withMessage:transaction:
rebuildIndexState
setRebuildIndexState:
_lastProcessedAttachmentIDLock
_dataDetectionPersistence
_lastProcessedAttachmentID
_rebuildIndexState
T@"<EDSearchableIndexHookResponder>",R,W,N,V_hookResponder
T@"EDRichLinkPersistence",R,N,V_richLinkPersistence
Tq,V_lastProcessedAttachmentID
TQ,V_rebuildIndexState
messageIDandRichLinkIDFromRichLinkIdentifier:
richLinkItemIdentifierFromSearchableItemIdentifier:
completeSearchableIndexRichLinkItemIdentifierFromID:
initWithRichLinkItemIdentifier:messagePersistentID:metadatum:
richLinkPersistentID
setRichLinkPersistentID:
_richLinkPersistentID
T@"NSString",C,N,V_richLinkPersistentID
T@"EDSearchableIndexRichLinkItemMetadatum",&,N,V_metadatum
T@"NSString",R,C,N,V_richLinkItemIdentifier
initWithBuilder:
activityTypes
deferrableActivityTypes
isDeferrableActivityType:
budgetTimeUserDefaultsKeyForIndexName:
searchableIndexSchedulable:didIndexForTime:
searchableIndexSchedulable:didIndexItemCount:
indexingDidResumeForSearchableIndexSchedulable:
indexingDidSuspendForSearchableIndexSchedulable:
didFinishIndexingBacklogForSearchableIndexSchedulable:
searchableIndexSchedulable:didGeneratePowerEventWithIdentifier:eventData:
searchableIndexSchedulable:didGenerateImportantPowerEventWithIdentifier:eventData:
budgetedTimeRemainingForSearchableIndexSchedulable:
budgetedItemCountRemainingForSearchableIndexSchedulable:
hasAvailableIndexingBudgetForSearchableIndexSchedulable:
initWithSchedulable:budgetConfiguration:
setScheduling:
_xpcActivityIdentifierForActivityType:
_xpcCriteriaBuilderBlockForActivityType:
_startScheduling
_registerActivityForType:builder:runner:
_stopScheduling
_beginIndexingForActivityType:activity:
beginIndexingForActivityType:activity:
_stopIndexingForActivityType:shouldDeferIfPossible:
deferIndexingForActivityType:
_deferActivitiesIfNecessary
_stopAllIndexing
_periodicallyCheckForDeferralIfNecessary
_enableIndexingForActivityType:
_disableIndexingForActivityType:defer:
_isIndexingEnabledByActivities
_isIndexingEnabledForActivityType:
isIndexingEnabledForActivityType:
setBudgetedItemCountRemaining:
budgetedItemCountRemaining
_setDataSourceIndexingPermitted:
setNoActivityIndexingTime:
noActivityIndexingTime
setMaintenanceIndexingTime:
maintenanceIndexingTime
_setBudgetedTimeRemaining:
setBudgetedTimeRemaining:
budgetedTimeRemaining
_budgetTimeFromUserDefaults
_logIndexingPowerEventWithIdentifier:additionalEventData:usePersistentLog:
isScheduling
schedulable
budgetConfiguration
scheduledDeferralCheck
setScheduledDeferralCheck:
budgetTimeUserDefaultsKey
setBudgetTimeUserDefaultsKey:
indexingStateQueue
setIndexingStateQueue:
activities
setActivities:
indexingEnabledForActivityTypes
setIndexingEnabledForActivityTypes:
_scheduling
_scheduledDeferralCheck
_budgetedTimeRemaining
_budgetedItemCountRemaining
_noActivityIndexingTime
_maintenanceIndexingTime
_schedulable
_budgetConfiguration
_budgetTimeUserDefaultsKey
_indexingStateQueue
_activities
_indexingEnabledForActivityTypes
TB,N,V_scheduledDeferralCheck
T@"NSString",C,N,V_budgetTimeUserDefaultsKey
T@"NSObject<OS_dispatch_queue>",&,N,V_indexingStateQueue
T@"NSMutableDictionary",&,N,V_activities
T@"NSMutableSet",&,N,V_indexingEnabledForActivityTypes
TB,GisDataSourceIndexingPermitted,V_dataSourceIndexingPermitted
Tq,V_budgetedItemCountRemaining
Td,V_budgetedTimeRemaining
Td,V_noActivityIndexingTime
Td,V_maintenanceIndexingTime
scheduling
TB,N,GisScheduling,V_scheduling
T@"<EDSearchableIndexSchedulable>",R,W,N,V_schedulable
T@"EDSearchableIndexBudgetConfiguration",R,N,V_budgetConfiguration
transformDataForVerification:
expressionFromDataSamples:
verifySearchableItem:againstExpectedData:
fetchAttributes
updates
hasUpdates
itemsRequiringIndexing
setItemsRequiringIndexing:
removedIdentifiers
setRemovedIdentifiers:
removedDomainIdentifiers
setRemovedDomainIdentifiers:
_itemsRequiringIndexing
_removedDomainIdentifiers
T@"NSArray",C,N,V_itemsRequiringIndexing
T@"NSArray",C,N,V_removedIdentifiers
T@"NSArray",C,N,V_removedDomainIdentifiers
initWithDataSource:
_failingSamples:tester:
_addFailingSamples:toResultDictionary:
_verifySamples:
verifyDataSamplesWithCompletionHandler:scheduler:
_verifyDataSamples:
_findMissingTransactionIDs:dataSource:
_missingTransactionIDsFromTransactionIDs:
indexVerificationActivity
setIndexVerificationActivity:
_indexVerificationActivity
T@"NSObject<OS_os_activity>",&,N,V_indexVerificationActivity
T@"<EDSearchableIndexVerifierDataSource>",W,N,V_dataSource
subject
setSubject:
toEmailAddresses
setToEmailAddresses:
deleted
setDeleted:
transactionID
setTransactionID:
indexedAsEmptySubject
setIndexedAsEmptySubject:
userInfo
setUserInfo:
_subject
_toEmailAddresses
_deleted
_transactionID
_indexedAsEmptySubject
_userInfo
T@"NSString",C,N,V_subject
T@"NSArray",C,N,V_toEmailAddresses
T@"NSString",C,N,V_deleted
T@"NSNumber",&,N,V_transactionID
T@"NSNumber",&,N,V_flags
T@"NSNumber",&,N,V_indexedAsEmptySubject
T@"NSDictionary",C,N,V_userInfo
addJoinsForSenderBucketToSelectStatement:withSourceAddressColumn:
handleReconciliationMergeErrorForTable:columnName:statement:journalRowID:protectedRowID:connection:rowsUpdated:error:
initWithDatabase:blockedSenderManager:hookRegistry:contactStore:
relevantSendersForSearch
_invalidateCachesForAddresses:
_invalidateCaches
bucketForSenderAddress:
_bucketForSenderAddress:
moveSenderWithEmailAddresses:toBucket:
_moveSenderWithEmailAddresses:toBucket:sync:userInitiated:
_moveSenderWithSimpleEmailAddresses:toBucket:sync:userInitiated:transactionGeneration:
addAddresses:toSender:
removeAddresses:fromSender:
_addNewSender:toBucket:connection:
_addressIDsForAddresses:connection:
_addNewSenderWithAddressIDs:contactIdentifier:toBucket:connection:senderDatabaseID:
_addAddressesWithDatabaseIDs:toSenderWithDatabaseID:connection:error:
_moveSenderWithDatabaseID:toBucket:connection:
_addNewSendersForEmailAddresses:toBucket:connection:newSenders:
_contactIdentifierForSenderWithDatabaseID:connection:
_bucketForSenderWithDatabaseID:connection:
_emailAddressForDatabaseID:connection:
_setIsBlocked:forAddresses:
_reloadBlockedSendersWithAddresses:
_simpleAddressesForAddresses:
_addressesGroupedBySimpleAddressForAddresses:
_addressesGroupedByContactForAddresses:unmatchedAddresses:otherAddressesByContact:
_addressIDsGroupedByContactsForAddressesByContact:withConnection:addressesByID:
_moveAddressesFromSentMessagesToPrimaryForMessages:
setContactStore:
emailAddressToBucketCache
databaseIDToEmailAddressCache
_syncStartedLock
_contactStoreLock
_emailAddressToBucketCache
_databaseIDToEmailAddressCache
T@"CNContactStore",&,N,V_contactStore
T@"EFLazyCache",R,N,V_emailAddressToBucketCache
T@"EFLazyCache",R,N,V_databaseIDToEmailAddressCache
initWithSenderPersistence:
simpleAddressesForRelevantSendersForSearchWithCompletionHandler:
persistenceScheduler
_persistenceScheduler
T@"EDSenderPersistence",R,N,V_senderPersistence
T@"<EFScheduler>",R,N,V_persistenceScheduler
initWithDatabase:hookResponder:
persistSendLaterForMessages:date:
writeQueue
setWriteQueue:
_writeQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_writeQueue
initWithHookRegistry:messagePersistence:outgoingRepository:alarmScheduler:
nextAlarmDate
setNextAlarmDate:
_updateAlarmUpdatedMessages:sendLaterDate:
resetSendLaterAlarmIfNeeded
outgoingRepository
sendLaterQueryCreator
setSendLaterQueryCreator:
alarmDateProvider
setXpcAlarm:
_outgoingRepository
_sendLaterQueryCreator
T@"EDOutgoingMessageRepository",R,N,V_outgoingRepository
T@"<EDMessageChangeHookResponder>",R,N,V_hookResponder
T@"EDQueryCreator",&,N,V_sendLaterQueryCreator
T@"<EDSendLaterUpdateControllerAlarmDateProvider>",R,N,V_alarmDateProvider
T@"EFXPCAlarm",&,N,V_xpcAlarm
boolValue
remoteClients
initWithDaemonInterfaceFactory:
initWithDaemonInterfaceFactory:listener:
addRemoteClient:
removeRemoteClient:
serverXPCEndpoint
listener
setListener:
connectedClients
setDaemonInterfaceFactory:
_listener
_connectedClients
T@"NSXPCListener",&,N,V_listener
T@"EFLocked",R,N,V_connectedClients
T@"EDDaemonInterfaceFactory",&,N,V_daemonInterfaceFactory
T@"NSXPCListenerEndpoint",R,N
serverMessagePersistenceForMailboxURL:
serverMessagesTableSchema
serverLabelsTableSchema
initWithDatabase:gmailLabelPersistence:mailboxID:useNumericSearch:supportsLabels:
messageCount
unreadMessageCount
undeletedMessageCount
maximumIMAPUID
minimumIMAPUID
serverMessagesForRemoteIDs:
serverMessagesForIMAPUIDs:limit:returnLastEntries:
clearRemoteIDsForAllMessages
deleteAllClearedUIDMessages
serverMessagesForMessageIDHeaders:
assignUIDsToServerMessages:
_serverMessagesWithWhereClause:limitClause:returnLastEntries:
_serverMessageForRow:connection:
addServerMessage:invalidMessage:duplicateRemoteID:
attachMessage:toServerMessageWithRemoteID:
deleteServerMessagesWithRemoteIDs:
deleteAllServerMessagesInMailbox
applyFlagChange:toMessagesWithRemoteIDs:
applySortedFlags:
enumerateUIDsInRanges:withBlock:
addLabels:removeLabels:toMessagesWithRemoteIDs:
_addLabels:removeLabels:forUID:connection:
_remoteIDStringForRemoteIDArray:
supportsLabels
useNumericSearch
_supportsLabels
_useNumericSearch
Tq,R,N,V_mailboxID
TB,R,N,V_useNumericSearch
TI,R,N
TB,R,N,V_supportsLabels
ed_enumerateUIDsWithLimit:reverseEnumeration:usingBlock:
ed_enumerateUIDsWithLimit:reverseEnumeration:queryRangeCountLimit:batchLimit:usingBlock:
ed_nextRangesWithRangeCountLimit:reverseEnumeration:
ed_uidQueryExpression
ed_logDescription
initWithMessageIDHash:serverMessage:messagePersistentID:
serverMessage
_serverMessage
T@"ECAngleBracketIDHash",R,N,V_messageIDHash
T@"ECServerMessage",R,N,V_serverMessage
Tq,R,N,V_messagePersistentID
runWithConnection:dataProvider:
createNewAttachmentTableWithConnection:
deleteAttachmentsTableWithConnection:
deleteMessageAttachmentsTableWithConnection:
createMessageAttachmentsTableWithConnection:
createNewSearchableAttachmentsTable:
insertIntoMessageAttachmentTableGlobalMessageID:attachmentMetadata:attachmentID:connection:
insertAttachmentIntoAttachmentTableWithAttachmentMetadata:connection:
topSalienciesForMailboxID:limit:error:
tokenizeString:
_registerDefaultsObservers
integerValue
initWithDefaults:store:
beginSyncing
observeChangesForKey:cloudKey:conflictResolver:
proxyChangeHandler
setProxyChangeHandler:
_cancelable
_defaults
_store
_changeActionsByKey
_proxyChangeHandler
T@?,C,N,V_proxyChangeHandler
updateLargestDeletedRowID:forTableName:withConnection:
largestDeletedRowIDForTableName:withConnection:
_reportReachabilityChange:
initWithExecutionQueue:
scheduleTask:canceledCallback:
rescheduleTask
_doScheduleTask:canceledCallback:
setObserveForNetworkReachability:
_startObservingNetworkReachability
_stopObservingNetworkReachability
_incrementBackoffInterval
_cancelTimer
initialDelay
setInitialDelay:
maxBackOffInterval
setMaxBackOffInterval:
backoffMultiplier
setBackoffMultiplier:
observeForNetworkReachability
timerSource
setTimerSource:
executionQueue
setExecutionQueue:
backOffInterval
setBackOffInterval:
isReachable
setIsReachable:
pendingWaitingForNetwork
setPendingWaitingForNetwork:
task
setTask:
canceledCallback
setCanceledCallback:
work
setWork:
_observeForNetworkReachability
_isReachable
_pendingWaitingForNetwork
_initialDelay
_maxBackOffInterval
_backoffMultiplier
_timerSource
_executionQueue
_backOffInterval
_task
_canceledCallback
_work
T@"NSObject<OS_dispatch_source>",&,N,V_timerSource
T@"NSObject<OS_dispatch_queue>",&,N,V_executionQueue
Td,N,V_backOffInterval
TB,N,V_isReachable
TB,N,V_pendingWaitingForNetwork
T@?,C,N,V_task
T@?,C,N,V_canceledCallback
T@?,C,N,V_work
Td,N,V_initialDelay
Td,N,V_maxBackOffInterval
Td,N,V_backoffMultiplier
TB,N,V_observeForNetworkReachability
initWithThreadScope:threadPersistence:queryHandler:delegate:
reset
_failMigration
_migrateNextBatchWithGeneration:
_scheduleFinalizationForBatchedObjectIDs:withGeneration:forDelete:
_finishMigrating
addObjectIDsToMigrate:
changeObjectIDsToMigrate:
deleteObjectIDsToMigrate:
state
workScheduler
queryHandler
threadFinalizationInterval
setThreadFinalizationInterval:
_state
_workScheduler
_queryHandler
_threadFinalizationInterval
T@"EFLocked",R,N,V_state
T@"<EFScheduler>",R,N,V_workScheduler
T@"EDInMemoryThreadQueryHandler",R,N,V_queryHandler
T@"<EDThreadMigratorDelegate>",R,W,N,V_delegate
Td,N,V_threadFinalizationInterval
unmigratedCount
isEmpty
isFullyMigrated
fail
_removeAllObjectIDs
isRecentlyMigrated:
nextBatch
addObjectIDs:
removeObjectIDs:
removeMigratedObjectIDs:
addDeletedObjectIDs:
removeDeletedObjectIDs:
verifyIsMigratingGeneration:andIsInState:logIdentifier:logAction:logCount:
verifyIsMigratingGeneration:andIsInState:orState:logIdentifier:logAction:logCount:
_verifyIsMigratingGeneration:stateVerifier:logIdentifier:logAction:logCount:
setState:
_objectIDsToMigrate
_recentlyMigratedObjectIDs
_recentlyDeletedObjectIDs
TQ,N,V_state
threadScopeManager:mailboxScopeExists:
threadScopeManager:isValidMailboxObjectID:
threadScopeManager:populateThreadScopesWithBlock:
threadScopeManager:gatherStatisticsForThreadScopesWithDatabaseIDs:block:
threadScopeManager:evictThreadScopesWithDatabaseIDs:completionBlock:
initWithMessagePersistence:database:hookRegistry:vipManager:blockedSenderManager:
_enumerateThreadScopesUsingBlock:
persistenceStateForThreadScope:
_isThreadScopePrecomputed:shouldMigrate:
updateLastViewedDateForThreadScope:
resetThreadScopesForMailboxScope:
threadScopesByDatabaseID
threadObjectIDsForThreadScope:sortDescriptors:initialBatchSize:journaledObjectIDs:batchBlock:
_enumerateThreadObjectIDsForThreadScope:filterClause:sortDescriptors:batchBlock:
threadForObjectID:originatingQuery:error:
_nonJournaledSubjectForThreadWithObjectID:connection:
changeForThreadWithObjectID:changedKeyPaths:
_flagColorsFromRow:
_mailboxesForThreadDatabaseID:
_sendersForThreadDatabaseID:senderBucket:
_sendersFromMessagesForThreadObjectID:
_recipientsOfType:forThreadDatabaseID:
_recipientsOfType:fromMessagesForThreadObjectID:
_addressesFromMessageAddressesStatement:
_addressesFromSelectStatement:additionalRowHandling:
nextExistingThreadObjectIDForThreadObjectID:forSortDescriptors:excluding:
threadObjectIDsByNextExistingForThreadObjectIDs:forSortDescriptors:excluding:
_addOrderByToThreadSelect:forSortDescriptors:
_comparisonExpressionForSortDescriptors:conversationID:threadExpression:threadScopeDatabaseID:connection:
_columnForSortDescriptor:
_databaseIDForThreadObjectID:
_scheduleRecomputationForThread:reason:
_recomputeThreads
_persistedMessagesForMailboxScope:messageExpression:
setNeedsUpdateForThreadScope:
resetThreadScopedForActivatedAccount:
_threadScopedToResetForActivatedAccount:
threadScopeMatcherForActivatedAccount:
_addedMailboxObjectIDsForActivatedAccount:
resetThreadScopesForDeactivatedAccount:
_getIndividualMailboxScopes:unifiedMailboxThreadScopes:forAccount:
_inactiveMailboxDatabaseIDsForMailboxScope:forThreadScopeDatabaseID:
_addPersistedMessages:journaled:generationWindow:
_writeThreadedMessages:withChangedKeyPaths:journaled:generationWindow:
_persistenceIsChangingFlags:messages:generationWindow:
_persistenceIsChangingFlags:wrappedMessages:threadObjectID:threadScopeDatabaseID:
_persistenceIsDeletingMessages:generationWindow:
_deleteWrappedMessages:fromThreadWithObjectID:threadScopeDatabaseID:generationWindow:
_updateThreadForDeleteWithObjectID:threadScopeDatabaseID:generationWindow:
_updateBasicPropertiesAfterDeleteForThreadObjectID:threadScopeDatabaseID:
_deleteMailboxesFromWrappedMessages:fromThreadWithDatabaseID:messageThreadExpression:
_deleteSendersFromThreadWithDatabaseID:messageThreadExpression:
_deleteRecipientsOfType:fromThreadWithDatabaseID:messageThreadExpression:
_resetThreadScope:withDatabaseID:
_messagesAreJournaledForThreadWithObjectID:
persistenceDidChangeSenderBucketForSender:generation:
_reportSenderBucketChangeForThreadsWithSenderAddresses:generation:
_filteredPersistedMessagesForPersistedMessages:
_iterateWrappedMessagesByConversationForPersistedMessages:messageFilter:writeBlock:
_iterateWrappedMessagesByConversationForPersistedMessages:block:
_wrappedMessagesByThreadScopeForPersistedMessages:messageFilter:
_persistedMessagesByPossibleThreadScopeForPersistedMessages:
_wrappedMessageForPersistedMessages:threadScope:messageFilter:
_threadForWrappedMessages:objectID:
_mailboxDatabaseIDsForWrappedMessages:
_addKeyPathsForBasicPropertiesChangeToKeyPaths:
_addKeyPathsForDisplayMessageChangeToKeyPaths:
_updateNewestReadMessageWithWrappedMessage:threadExpression:
_recalculateNewestReadMessageForThreadObjectID:threadScopeDatabaseID:
_recalculateDisplayMessageForThreadObjectID:threadScopeDatabaseID:
setPriorityForDisplayMessageSenderForThreadObjectID:
_threadDatabaseIDExpressionForThreadScopeDatabaseID:conversation:
_threadExpressionForThreadScopeDatabaseID:conversation:
_upsertForThreadsWithThreadScopeDatabaseID:conversation:
_countMessagesForExpression:
_messageThreadExpressionForThreadObjectID:
_messageThreadExpressionForThreadScope:objectIDs:
_messageThreadExpressionForThreadScope:conversationExpression:
_expressionForThreadScope:
_messageMailboxesExpressionForMailboxScope:
_messageMailboxesExpressionForMailboxType:
_messageMailboxesExpressionForMailboxObjectIDs:
_messageActiveFollowUpExpressionForAccountWithObjectID:
_senderAddressesExpressionForMessages:
_recipientAddressesExpressionForRecipientType:messages:
_messageFilterExpressionForFilterPredicate:
_threadQueryForThreadScope:
beginMigratingThreadScope:
endMigratingThreadScope:
addThreads:
deleteThreadsWithObjectIDs:
oldestThreadObjectIDForMailbox:threadScope:
_statementForOldestThreadInMailbox:threadScope:createMailboxDatabaseIDIfNecessary:
verifyConsistencyOfThreadScope:
_addThreadScopeToDatabase:needsUpdate:lastViewedDate:updateThreadScopeManager:
_mailboxScopeForThreadScope:andFilterPredicate:
_addThreadScopeToDatabaseWithMailboxType:filterPredicate:needsUpdate:lastViewedDate:connection:
_addThreadScopeToDatabase:withMailboxDatabaseID:filterPredicate:needsUpdate:lastViewedDate:updateThreadScopeManager:connection:
addThreadScopeToDatabase:needsUpdate:lastViewedDate:
statisticsForThreadScopesWithDatabaseIDs:
threadScopeManager
consistencyCheckScheduler
threadRecomputationScheduler
setThreadRecomputationScheduler:
threadRecomputationDebouncer
setThreadRecomputationDebouncer:
_threadObjectIDsToRecompute
_threadRecomputationLock
_migratingThreadScopes
_migratingThreadScopesLock
_threadScopeManager
_consistencyCheckScheduler
_threadRecomputationScheduler
_threadRecomputationDebouncer
T@"EDThreadScopeManager",R,N,V_threadScopeManager
T@"<EFScheduler>",R,N,V_consistencyCheckScheduler
T@"<EFScheduler>",&,N,V_threadRecomputationScheduler
T@"EFDebouncer",&,N,V_threadRecomputationDebouncer
initWithSQLHelper:messagePersistence:threadScopeDatabaseID:threadObjectID:wrappedMessages:
_threadQuery
addThreadReplacingExisting:journaled:
updateThreadTableWithJournaled:
_newestUnreadWrappedMessagesWithNewestReadWrappedMessage:
_displayWrappedMessageWithNewestReadWrappedMessage:
_iterateNewestUnreadWrappedMessagesInWrappedMessages:iteratorBlock:
threadScopeDatabaseID
threadObjectID
wrappedMessages
sqlHelper
_threadScopeDatabaseID
_threadObjectID
_wrappedMessages
_sqlHelper
T@"_EDThreadPersistence_SQLHelper",R,N,V_sqlHelper
Tq,R,N,V_threadScopeDatabaseID
T@"EMThreadObjectID",R,N,V_threadObjectID
T@"NSArray",R,N,V_wrappedMessages
T@"EMThread",R,N
initWithMessages:threadDatabaseID:
updateNewestReadAndDisplayMessage
updateNewestReadMessage:
updateDisplayMessageWithUnreadWrappedMessages:
addKeyPathsForDisplayMessageChangeToKeyPaths:
addMailboxes
_mailboxDatabaseIDsForWrappedMessages
addSenders
senderDatabaseIDsAndDates
addSenders:
setPriorityForDisplayMessageSender
addRecipientsForType:
recipientDatabaseIDsAndDatesForRecipientType:
addRecipients:ofType:
_ensureTempMessagesView
dropTemporaryView
threadDatabaseID
_didCreateTempMessagesView
_threadDatabaseID
T@"_EDThreadPersistence_ThreadMessages",R,N,V_messages
Tq,R,N,V_threadDatabaseID
T@"EDMessagePersistence",R,N
T@"EMThreadObjectID",R,N
initWithCache:messagePersistence:threadScopeDatabaseID:threadScopeExpression:
createMessagesWithThreadObjectID:wrappedMessages:
_ensureTempScopeView
threadScopeExpression
_didCreateTempScopeView
_threadScopeExpression
T@"<EFSQLExpressable>",R,N,V_threadScopeExpression
initWithConnection:
preparedStatements
_preparedStatements
T@"NSMutableDictionary",R,N,V_preparedStatements
initWithCache:
executeUpdateSQL:bindings:errorHandler:
executeUpsertSQL:bindings:errorHandler:
executeSelectSQL:bindings:errorHandler:rowHandler:
executeSQL:indexBindings:errorHandler:
executeSQL:errorHandler:
T@"_EDThreadPersistence_StatementCache",R,N,V_cache
initWithMessage:databaseID:
databaseID
_databaseID
T@"EMMessage",R,N,V_message
Tq,R,N,V_databaseID
initWithMessage:messagePersistence:
_isCurrentObservationToken:
inMemoryObservationID
setInMemoryObservationID:
precomputedObservationID
setPrecomputedObservationID:
inMemoryQueryHandler
setInMemoryQueryHandler:
precomputedQueryHandler
setPrecomputedQueryHandler:
threadMigrator
setThreadMigrator:
_inMemoryObservationID
_precomputedObservationID
_inMemoryQueryHandler
_precomputedQueryHandler
_threadMigrator
T@"EMObjectID",&,N,V_inMemoryObservationID
T@"EMObjectID",&,N,V_precomputedObservationID
T@"EDInMemoryThreadQueryHandler",&,N,V_inMemoryQueryHandler
T@"EDPrecomputedThreadQueryHandler",&,N,V_precomputedQueryHandler
T@"EDThreadMigrator",&,N,V_threadMigrator
threadMigratorDidComplete:
observer:wasUpdated:
observer:matchedAddedObjectIDs:before:extraInfo:
observer:matchedAddedObjectIDs:after:extraInfo:
observer:matchedMovedObjectIDs:before:
observer:matchedMovedObjectIDs:after:
observer:matchedChangesForObjectIDs:
observer:matchedDeletedObjectIDs:
observer:replacedExistingObjectID:withNewObjectID:
observer:matchedOldestItemsUpdatedForMailboxes:
observerDidFinishInitialLoad:
observerWillRestart:
observerDidFinishRemoteSearch:
initWithQuery:messagePersistence:threadPersistence:hookRegistry:vipManager:remoteSearchProvider:remindMeNotificationController:observer:observationIdentifier:delegate:observationResumer:
_createUnderlyingHandlerIfNeededAndStart
_tearDownWithQueryHandlerBlock:
threadForObjectID:isPersisted:error:
inMemoryMessageObjectIDsForThread:
triggerMigration
checkIfPrecomputedStateIsAvailable
isStarted
_addSnippetHintsToExtraInfo:
underlyingHandler
_isRunning
_underlyingHandler
T@"EFLocked",R,N,V_underlyingHandler
T@"<EDThreadQueryHandlerDelegate>",R,W,N,V_delegate
summariesToReloadForChanges:mailboxScope:
mailboxTypesToPrecompute
isThreadScopePrecomputed:shouldMigrate:
_threadScopeInfoForThreadScope:
precomputedMailboxScopeForThreadScope:hasFollowUpPredicate:
_precomputedMailboxScopeForFilterPredicate:hasFollowUpPredicate:
threadScopeFromPrecomputedMailboxScope:hasFollowUpPredicate:mailboxProvider:
_shouldPrecomputeMailboxWithObjectID:
_shouldPrecomputeMailboxType:
threadScopes
databaseIDForThreadScope:
addThreadScope:withDatabaseID:needsUpdate:lastViewedDate:
setNeedsUpdate:forThreadScope:
setLastViewedDate:forThreadScope:
removeAllThreadScopes
removeThreadScope:
removeThreadScopesForMailboxScope:
_initializeThreadScopesIfNeeded
_evictAtLeast:upTo:fromThreadScopesWithDatabaseIDs:
_evictionScoreForCount:timeInterval:
_threadScopesWithLastViewedOlderThanLimit
_numberOfThreadScopesToEvictFrom:upTo:
evictionScheduler
_threadScopes
_threadScopesLock
_evictionScheduler
T@"<EDThreadScopeManagerDataSource>",R,W,N,V_dataSource
T@"<EFScheduler>",R,N,V_evictionScheduler
initWithDatabaseID:needsUpdate:lastViewedDate:
needsUpdate
setNeedsUpdate:
lastViewedDate
setLastViewedDate:
_needsUpdate
_lastViewedDate
TB,N,V_needsUpdate
T@"NSDate",&,N,V_lastViewedDate
initWithServiceName:
startTransaction
endTransaction:
hasPendingTransactions
resetPendingTransactions
serviceName
setServiceName:
serialQueue
setSerialQueue:
_serviceName
_serialQueue
T@"NSString",&,N,V_serviceName
T@"NSObject<OS_dispatch_queue>",&,N,V_serialQueue
performInitialSync
syncKeyForUpdatedConversation:flags:
setFlags:forConversations:
_setCloudStorageValue:forKey:
_syncKeyForConversationID:
_synchronize
_mergeServerChanges:
pruneDatabasePurgingOldestEntries:
performDailyExportForChangedConversations:
queue
setQueue:
conversationIDsBySyncKey
setConversationIDsBySyncKey:
unmatchedKeys
setUnmatchedKeys:
_conversationIDsBySyncKey
_unmatchedKeys
T@"<EDUbiquitousConversationManagerDelegate>",W,N,V_delegate
T@"<EDConversationRemoteStorage>",&,N,V_cloudStorage
T@"NSMutableDictionary",&,N,V_conversationIDsBySyncKey
T@"NSMutableSet",&,N,V_unmatchedKeys
TB,N,V_initialized
instances
_registerInstance:
resetAllInstances
T@"EFLocked",R,N
initWithName:delayInterval:resumable:
initWithName:delayInterval:scalingFactor:
initWithDelayInterval:scalingFactor:
updateWithBlock:unacknowledgedUpdatesCount:
unacknowledgedUpdatesCountAndTimeSinceLastAcknowledgement:
_reset
delayInterval
scalingFactor
hasChangesSinceLastUpdate
setHasChangesSinceLastUpdate:
lastUpdateDate
setLastUpdateDate:
lastAcknowledgementDate
setLastAcknowledgementDate:
updateCounter
setUpdateCounter:
resumable
setResumable:
resumeClientDebouncer
setResumeClientDebouncer:
resumeClientScheduler
setResumeClientScheduler:
_updatesLock
_unacknowledgedUpdates
_hasChangesSinceLastUpdate
_delayInterval
_scalingFactor
_lastUpdateDate
_lastAcknowledgementDate
_updateCounter
_resumable
_resumeClientDebouncer
_resumeClientScheduler
Td,R,N,V_delayInterval
Tq,R,N,V_scalingFactor
TB,N,V_hasChangesSinceLastUpdate
T@"NSDate",&,N,V_lastUpdateDate
T@"NSDate",&,N,V_lastAcknowledgementDate
Tq,N,V_updateCounter
T@"<EDResumable>",&,N,V_resumable
T@"EFDebouncer",&,N,V_resumeClientDebouncer
T@"<EFScheduler>",&,N,V_resumeClientScheduler
initWithBlockedSenderReader:vipReader:
messagesNeedingNotification:
_messageNeedsNotification:
blockedSenderReader
_blockedSenderReader
T@"<EMBlockedSenderReader>",R,N,V_blockedSenderReader
cutoffDateForMailbox:
isMessageAboveMailboxCutoff:
updateCutoffForMailboxesWithMessages:
clearCutoffForMailbox:
_shouldUpdateCutoffForMessage:
_updateCutoffForMailbox:date:
_initializeIfNeeded
_readFromDefaults
_writeToDefaults
mailboxCutoffs
setMailboxCutoffs:
_mailboxCutoffs
T@"NSMutableDictionary",&,N,V_mailboxCutoffs
_accountsChanged:
_keyValueStoreChanged:
_contactDescriptors
isVIPAddress:
hasVIPs
getAllVIPsWithCompletion:
vipWithIdentifier:
saveVIPs:
removeVIPsWithIdentifiers:
removeVIPsWithEmailAddresses:
allVIPs
allVIPEmailAddresses
T@"EAEmailAddressSet",R,C,N
initWithDirectoryURL:accountsProvider:delegate:
initWithDirectoryURL:keyValueStore:accountsProvider:contactStore:delegate:
_initializeKVSStore
_allVIPEmailAddresses
allVIPWaitForResult
_isVIPForContact:orAddresses:
_removeVIPsWithIdentifiers:
_loadVIPs
_vipsDictionary
_saveVIPs
_saveVIPsLocally
_serializedData
_updateCloudWithLocal
_synchronizeKVStore
_updateLocalWithCloud:refresh:
_mergeVIPs
_cloudKeyForIdentifier:
_validatedCloudVIPFromStore:withCloudKey:
_contactForName:emailAddresses:
_contactFromContacts:matchingMostAddresses:
gatherStatisticsWithVIPCount:
keyValueStore
setKeyValueStore:
operationQueue
plistURL
_vipsByIdentifier
_cachedEmailAddresses
_initializeLock
_keyValueStore
_operationQueue
_plistURL
T@"NSUbiquitousKeyValueStore",&,N,V_keyValueStore
T@"NSObject<OS_dispatch_queue>",R,N,V_operationQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_notificationQueue
T@"NSURL",R,N,V_plistURL
T@"<EDVIPManagerDelegate>",W,N,V_delegate
registerObserver:observationIdentifier:
initWithVIPManager:
_observersLock
_observersByIdentifier
T@"NSSet",R,C,N,VallVIPWaitForResult
_scheduleVisibleMessageReload
_reloadVisibleMessages
_observationScheduler
_reloadDebouncer
_notifyToken
baseURL:didRequestRemoteContentURLs:
requestDataDetectionResultsWithBaseURL:
receiveDataDetectionResults:
logWebBundleMessage:
initWithOptions:cancelationToken:
webViewConfiguration
_richLinkMetadataScript
parseHTMLData:withOptions:characterEncodingName:forMessage:completionHandler:
_parseHTMLData:withOptions:characterEncodingName:messageID:
_addRemoteContentWebViewObserver
_enableDataDetection
_disableDataDetection
_extractDataDetectorResultsMetadata:
_getDataDetectionCategoryString:
_setContentRuleLists:
_setRemoteContentRuleLists:
contentRuleListMangager:didAddRuleList:
contentRuleListMangager:didUpdateContentRuleList:oldContentRuleList:
contentRuleListMangager:didRemoveRuleList:
_retrieveRichLinkMetadata:
setOptions:
isDataDetectionEnabled
setIsDataDetectionEnabled:
_webContentObserverInterface
_webContentObserver
_currentContentRuleLists
_contentRuleListsObservationToken
_isDataDetectionEnabled
_options
T@"WKWebView",R,N,V_webView
TQ,N,V_options
TB,N,V_isDataDetectionEnabled
initWithParser:
parser
setParser:
_parser
T@"EDWebContentParser",W,N,V_parser
baseURL
setBaseURL:
dataDetectionPromise
setDataDetectionPromise:
remoteContentPromise
setRemoteContentPromise:
richLinkPromise
setRichLinkPromise:
_baseURL
_dataDetectionPromise
_remoteContentPromise
_richLinkPromise
T@"NSURL",&,N,V_baseURL
T@"EFPromise",&,N,V_dataDetectionPromise
T@"EFPromise",&,N,V_remoteContentPromise
T@"EFPromise",&,N,V_richLinkPromise
remoteContentLinks
setRemoteContentLinks:
dataDetectionResults
setDataDetectionResults:
richLinkResults
setRichLinkResults:
_remoteContentLinks
_dataDetectionResults
_richLinkResults
T@"NSDictionary",C,N,V_dataDetectionResults
T@"NSArray",C,N,V_remoteContentLinks
T@"NSArray",C,N,V_richLinkResults
initWithWidgetBundleIdentifier:widgetKindIdentifiers:hookRegistry:
_scheduleActivityWithReason:
_runActivity
_activityDelay
_refreshTimelinesWithReason:
_updateLastUpdateInformation
_restoreFromUserDefaults
_writeUserDefaults
timelineControllers
setTimelineControllers:
lastUpdate
setLastUpdate:
numberOfUpdates
setNumberOfUpdates:
_timelineControllers
_lastUpdate
_numberOfUpdates
T@"NSArray",&,N,V_timelineControllers
T@"NSDate",&,N,V_lastUpdate
Tq,N,V_numberOfUpdates
initWithDirectory:populationBlock:
_loadFromURL:
_stringAddressesFromPopulationBlock:
_simpleAddressForString:
isAddressInList:
addSenderToList:
addAddressesToList:
removeSenderFromList:
removeAddressesFromList:
_scheduleWrite
addresses
writeScheduler
isWaitingOnUnlock
_isWaitingOnUnlock
_addresses
_writeScheduler
T@"EFLocked",R,N,V_addresses
T@"<EFScheduler>",R,N,V_writeScheduler
TB,R,N,V_isWaitingOnUnlock
_mergeChangesForRemotelyChangedKeys:localStore:cloudStore:
initWithMutableDictionary:delegate:
moveSender:toBucket:userInitiated:
moveSenderWithEmailAddresses:toBucket:userInitiated:
removeSender:
_removeSenderWithEmailAddresses:
removeAllObjects
_addressToUseFromAddress:
T@"<MUIBucketSenderCloudStorageDelegate>",R,W,N,V_delegate
initWithDelegate:senderCloudStorage:sentMailboxURLs:contactStore:
performUpgradeIfNecessary
_verifyDatabaseAccessAndPerformUpgrade
_upgrade
_resetDatabaseAndCloud
_hasBeenUpgraded
_markUpgradeComplete
_canAccessDatabase
sentMailboxURLs
observingContentProtection
setObservingContentProtection:
_observingContentProtection
_sentMailboxURLs
T@"<MUIBucketSendersCloudStorageUpgraderDelegate>",R,W,N,V_delegate
T@"MUIBucketSenderCloudStorage",R,N,V_cloudStorage
T@"NSArray",R,N,V_sentMailboxURLs
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
T@"<EFAssertableScheduler>",R,N,V_scheduler
TB,N,V_observingContentProtection
initWithQuery:messagePersistence:hookRegistry:remindMeNotificationController:observer:
_addNewObjectIDs:before:
_addNewObjectIDs:after:
_notifyObserverOfLatestGroupedSenders
setObjectID:
groupedSenderQueryHandler
setGroupedSenderQueryHandler:
observer
setObserver:
didFinishInitialLoad
setDidFinishInitialLoad:
_groupedSenderObjectIDs
_didFinishInitialLoad
_objectID
_groupedSenderQueryHandler
_observer
T@"EMObjectID",&,N,V_objectID
T@"EDGroupedSenderQueryHandler",&,N,V_groupedSenderQueryHandler
T@"<EMMessageRepositoryUnscreenedSendersQueryObserver_xpc>",&,N,V_observer
T@"<EFScheduler>",&,N,V_scheduler
TB,N,V_didFinishInitialLoad
ed_archiveTokenWithError:
ed_unarchivedTokenWithData:error:
featureValueForName:
featureNames
initWithCc_contains_contact:cc_is_top_direct_addresses_based_on_respond:cc_is_top_direct_addresses_based_on_scroll:cc_is_top_direct_addresses_based_on_send:cc_is_top_direct_addresses_based_on_view:cc_is_top_indirect_addresses_based_on_respond:cc_is_top_indirect_addresses_based_on_scroll:cc_is_top_indirect_addresses_based_on_send:cc_is_top_indirect_addresses_based_on_view:cc_is_vip:from_list_id:message_is_forward:message_is_reply:num_recipients:sender_is_contact:sender_is_top_direct_addresses_based_on_respond:sender_is_top_direct_addresses_based_on_scroll:sender_is_top_direct_addresses_based_on_send:sender_is_top_direct_addresses_based_on_view:sender_is_top_indirect_addresses_based_on_respond:sender_is_top_indirect_addresses_based_on_scroll:sender_is_top_indirect_addresses_based_on_send:sender_is_top_indirect_addresses_based_on_view:sender_is_vip:subject_is_top_words_based_on_respond:subject_is_top_words_based_on_scroll:subject_is_top_words_based_on_send:subject_is_top_words_based_on_view:time_received:to_contains_contact:to_is_top_direct_addresses_based_on_respond:to_is_top_direct_addresses_based_on_scroll:to_is_top_direct_addresses_based_on_send:to_is_top_direct_addresses_based_on_view:to_is_top_indirect_addresses_based_on_respond:to_is_top_indirect_addresses_based_on_scroll:to_is_top_indirect_addresses_based_on_send:to_is_top_indirect_addresses_based_on_view:to_is_vip:user_is_bcc:user_is_cc:user_is_sender:user_is_to:
cc_contains_contact
setCc_contains_contact:
cc_is_top_direct_addresses_based_on_respond
setCc_is_top_direct_addresses_based_on_respond:
cc_is_top_direct_addresses_based_on_scroll
setCc_is_top_direct_addresses_based_on_scroll:
cc_is_top_direct_addresses_based_on_send
setCc_is_top_direct_addresses_based_on_send:
cc_is_top_direct_addresses_based_on_view
setCc_is_top_direct_addresses_based_on_view:
cc_is_top_indirect_addresses_based_on_respond
setCc_is_top_indirect_addresses_based_on_respond:
cc_is_top_indirect_addresses_based_on_scroll
setCc_is_top_indirect_addresses_based_on_scroll:
cc_is_top_indirect_addresses_based_on_send
setCc_is_top_indirect_addresses_based_on_send:
cc_is_top_indirect_addresses_based_on_view
setCc_is_top_indirect_addresses_based_on_view:
cc_is_vip
setCc_is_vip:
from_list_id
setFrom_list_id:
message_is_forward
setMessage_is_forward:
message_is_reply
setMessage_is_reply:
num_recipients
setNum_recipients:
sender_is_contact
setSender_is_contact:
sender_is_top_direct_addresses_based_on_respond
setSender_is_top_direct_addresses_based_on_respond:
sender_is_top_direct_addresses_based_on_scroll
setSender_is_top_direct_addresses_based_on_scroll:
sender_is_top_direct_addresses_based_on_send
setSender_is_top_direct_addresses_based_on_send:
sender_is_top_direct_addresses_based_on_view
setSender_is_top_direct_addresses_based_on_view:
sender_is_top_indirect_addresses_based_on_respond
setSender_is_top_indirect_addresses_based_on_respond:
sender_is_top_indirect_addresses_based_on_scroll
setSender_is_top_indirect_addresses_based_on_scroll:
sender_is_top_indirect_addresses_based_on_send
setSender_is_top_indirect_addresses_based_on_send:
sender_is_top_indirect_addresses_based_on_view
setSender_is_top_indirect_addresses_based_on_view:
sender_is_vip
setSender_is_vip:
subject_is_top_words_based_on_respond
setSubject_is_top_words_based_on_respond:
subject_is_top_words_based_on_scroll
setSubject_is_top_words_based_on_scroll:
subject_is_top_words_based_on_send
setSubject_is_top_words_based_on_send:
subject_is_top_words_based_on_view
setSubject_is_top_words_based_on_view:
time_received
setTime_received:
to_contains_contact
setTo_contains_contact:
to_is_top_direct_addresses_based_on_respond
setTo_is_top_direct_addresses_based_on_respond:
to_is_top_direct_addresses_based_on_scroll
setTo_is_top_direct_addresses_based_on_scroll:
to_is_top_direct_addresses_based_on_send
setTo_is_top_direct_addresses_based_on_send:
to_is_top_direct_addresses_based_on_view
setTo_is_top_direct_addresses_based_on_view:
to_is_top_indirect_addresses_based_on_respond
setTo_is_top_indirect_addresses_based_on_respond:
to_is_top_indirect_addresses_based_on_scroll
setTo_is_top_indirect_addresses_based_on_scroll:
to_is_top_indirect_addresses_based_on_send
setTo_is_top_indirect_addresses_based_on_send:
to_is_top_indirect_addresses_based_on_view
setTo_is_top_indirect_addresses_based_on_view:
to_is_vip
setTo_is_vip:
user_is_bcc
setUser_is_bcc:
user_is_cc
setUser_is_cc:
user_is_sender
setUser_is_sender:
user_is_to
setUser_is_to:
_cc_contains_contact
_cc_is_top_direct_addresses_based_on_respond
_cc_is_top_direct_addresses_based_on_scroll
_cc_is_top_direct_addresses_based_on_send
_cc_is_top_direct_addresses_based_on_view
_cc_is_top_indirect_addresses_based_on_respond
_cc_is_top_indirect_addresses_based_on_scroll
_cc_is_top_indirect_addresses_based_on_send
_cc_is_top_indirect_addresses_based_on_view
_cc_is_vip
_from_list_id
_message_is_forward
_message_is_reply
_num_recipients
_sender_is_contact
_sender_is_top_direct_addresses_based_on_respond
_sender_is_top_direct_addresses_based_on_scroll
_sender_is_top_direct_addresses_based_on_send
_sender_is_top_direct_addresses_based_on_view
_sender_is_top_indirect_addresses_based_on_respond
_sender_is_top_indirect_addresses_based_on_scroll
_sender_is_top_indirect_addresses_based_on_send
_sender_is_top_indirect_addresses_based_on_view
_sender_is_vip
_subject_is_top_words_based_on_respond
_subject_is_top_words_based_on_scroll
_subject_is_top_words_based_on_send
_subject_is_top_words_based_on_view
_time_received
_to_contains_contact
_to_is_top_direct_addresses_based_on_respond
_to_is_top_direct_addresses_based_on_scroll
_to_is_top_direct_addresses_based_on_send
_to_is_top_direct_addresses_based_on_view
_to_is_top_indirect_addresses_based_on_respond
_to_is_top_indirect_addresses_based_on_scroll
_to_is_top_indirect_addresses_based_on_send
_to_is_top_indirect_addresses_based_on_view
_to_is_vip
_user_is_bcc
_user_is_cc
_user_is_sender
_user_is_to
Td,N,V_cc_contains_contact
Td,N,V_cc_is_top_direct_addresses_based_on_respond
Td,N,V_cc_is_top_direct_addresses_based_on_scroll
Td,N,V_cc_is_top_direct_addresses_based_on_send
Td,N,V_cc_is_top_direct_addresses_based_on_view
Td,N,V_cc_is_top_indirect_addresses_based_on_respond
Td,N,V_cc_is_top_indirect_addresses_based_on_scroll
Td,N,V_cc_is_top_indirect_addresses_based_on_send
Td,N,V_cc_is_top_indirect_addresses_based_on_view
Td,N,V_cc_is_vip
Td,N,V_from_list_id
Td,N,V_message_is_forward
Td,N,V_message_is_reply
Td,N,V_num_recipients
Td,N,V_sender_is_contact
Td,N,V_sender_is_top_direct_addresses_based_on_respond
Td,N,V_sender_is_top_direct_addresses_based_on_scroll
Td,N,V_sender_is_top_direct_addresses_based_on_send
Td,N,V_sender_is_top_direct_addresses_based_on_view
Td,N,V_sender_is_top_indirect_addresses_based_on_respond
Td,N,V_sender_is_top_indirect_addresses_based_on_scroll
Td,N,V_sender_is_top_indirect_addresses_based_on_send
Td,N,V_sender_is_top_indirect_addresses_based_on_view
Td,N,V_sender_is_vip
Td,N,V_subject_is_top_words_based_on_respond
Td,N,V_subject_is_top_words_based_on_scroll
Td,N,V_subject_is_top_words_based_on_send
Td,N,V_subject_is_top_words_based_on_view
T@"NSString",&,N,V_time_received
Td,N,V_to_contains_contact
Td,N,V_to_is_top_direct_addresses_based_on_respond
Td,N,V_to_is_top_direct_addresses_based_on_scroll
Td,N,V_to_is_top_direct_addresses_based_on_send
Td,N,V_to_is_top_direct_addresses_based_on_view
Td,N,V_to_is_top_indirect_addresses_based_on_respond
Td,N,V_to_is_top_indirect_addresses_based_on_scroll
Td,N,V_to_is_top_indirect_addresses_based_on_send
Td,N,V_to_is_top_indirect_addresses_based_on_view
Td,N,V_to_is_vip
Td,N,V_user_is_bcc
Td,N,V_user_is_cc
Td,N,V_user_is_sender
Td,N,V_user_is_to
initWithImportant:importantProbability:
important
setImportant:
importantProbability
setImportantProbability:
_important
_importantProbability
Tq,N,V_important
T@"NSDictionary",&,N,V_importantProbability
URLOfModelInThisBundle
loadWithConfiguration:completionHandler:
loadContentsOfURL:configuration:completionHandler:
initWithMLModel:
initWithConfiguration:error:
initWithContentsOfURL:error:
initWithContentsOfURL:configuration:error:
predictionFromFeatures:error:
predictionFromFeatures:options:error:
predictionFromCc_contains_contact:cc_is_top_direct_addresses_based_on_respond:cc_is_top_direct_addresses_based_on_scroll:cc_is_top_direct_addresses_based_on_send:cc_is_top_direct_addresses_based_on_view:cc_is_top_indirect_addresses_based_on_respond:cc_is_top_indirect_addresses_based_on_scroll:cc_is_top_indirect_addresses_based_on_send:cc_is_top_indirect_addresses_based_on_view:cc_is_vip:from_list_id:message_is_forward:message_is_reply:num_recipients:sender_is_contact:sender_is_top_direct_addresses_based_on_respond:sender_is_top_direct_addresses_based_on_scroll:sender_is_top_direct_addresses_based_on_send:sender_is_top_direct_addresses_based_on_view:sender_is_top_indirect_addresses_based_on_respond:sender_is_top_indirect_addresses_based_on_scroll:sender_is_top_indirect_addresses_based_on_send:sender_is_top_indirect_addresses_based_on_view:sender_is_vip:subject_is_top_words_based_on_respond:subject_is_top_words_based_on_scroll:subject_is_top_words_based_on_send:subject_is_top_words_based_on_view:time_received:to_contains_contact:to_is_top_direct_addresses_based_on_respond:to_is_top_direct_addresses_based_on_scroll:to_is_top_direct_addresses_based_on_send:to_is_top_direct_addresses_based_on_view:to_is_top_indirect_addresses_based_on_respond:to_is_top_indirect_addresses_based_on_scroll:to_is_top_indirect_addresses_based_on_send:to_is_top_indirect_addresses_based_on_view:to_is_vip:user_is_bcc:user_is_cc:user_is_sender:user_is_to:error:
predictionsFromInputs:options:error:
model
_model
T@"MLModel",R,N,V_model
initWithHeader_key_filtered:to_count:
header_key_filtered
setHeader_key_filtered:
to_count
setTo_count:
_header_key_filtered
_to_count
T@"NSDictionary",&,N,V_header_key_filtered
Td,N,V_to_count
initWithPromo:promoProbability:
promo
setPromo:
promoProbability
setPromoProbability:
_promo
_promoProbability
Tq,N,V_promo
T@"NSDictionary",&,N,V_promoProbability
predictionFromHeader_key_filtered:to_count:error:
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8^{_NSZone=}16
@24@0:8@16
@24@0:8@"NSString"16
v24@0:8@16
@"NSArray"16@0:8
v24@0:8@"NSString"16
@"ACAccount"16@0:8
v16@0:8
@24@0:8q16
@"<EDDeliveryAccount>"16@0:8
v24@0:8@"<EDDeliveryAccount>"16
@"<ECMailbox>"24@0:8q16
B24@0:8@"NSURL"16
@"<ECMailbox>"16@0:8
@"NSObject<OS_os_log>"16@0:8
v24@0:8@"NSArray"16
v24@0:8@"<EDAccount>"16
@32@0:8@16@24
v32@0:8@16@?24
v24@0:8@?16
@"NSMutableSet"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"EDAccountECAccountTransformer"
@"<EDAccountsProvider>"
@"EDPersistenceHookRegistry"
@32@0:8q16@24
v32@0:8@16@24
v40@0:8@16@24@32
v40@0:8@16q24q32
@"NSMutableDictionary"
@"<EDActivityHookResponder>"
v24@0:8@"EMActivity"16
v40@0:8@"EMActivityObjectID"16@24@"NSString"32
v40@0:8@"EMActivityObjectID"16q24q32
v32@0:8@"EMActivityObjectID"16@"NSError"24
v24@0:8@"EMActivityObjectID"16
v32@0:8@"<EMActivityObserver_xpc>"16@?<v@?@"<EFCancelable>"@"NSArray"@"NSError">24
@"EDActivityPersistence"
i32@0:8@16@24
i24@0:8@16
i24@0:8@"EDPersistenceDatabaseConnection"16
@40@0:8@16@24@32
@32@0:8@16@?24
@56@0:8@16q24q32q40@?48
@?16@0:8
q16@0:8
v24@0:8q16
@"NSString"
@"NSObject<OS_dispatch_queue>"
@"EDAssetDownloadScheduler"
@"NSObject<OS_xpc_object>"
@80@0:8@16@24@32@40@48@56@64@72
@48@0:8@16@24@32@40
@"NSNumber"
@"NSDate"
@32@0:8^@16^@24
q24@0:8@16
B40@0:8q16@24^B32
@"EDPersistenceDatabase"
B52@0:8@16@24@32@40B48
B48@0:8@16@24@32^@40
B56@0:8@16@24@32@40^@48
@40@0:8q16@24@32
B40@0:8@16@24^@32
@"EDAttachmentPersistence"
@"EDMessagePersistence"
@"NSURL"
@"EMRemoteContentURLSession"
@"<EFScheduler>"
v48@0:8@16@24@32@40
v48@0:8@16@24q32@40
v48@0:8@16@24@32q40
v48@0:8@"NSString"16@"NSDate"24@"<ECMessage>"32@"NSDictionary"40
v48@0:8@"NSString"16@"NSDate"24q32@"NSDictionary"40
v32@0:8@"NSString"16@"<ECMessage>"24
v40@0:8@"NSString"16@"<ECMessage>"24@"<ECMailAccount>"32
v48@0:8@"NSString"16@"NSDate"24@"<ECMessage>"32@"<ECMailbox>"40
v48@0:8@"NSString"16@"NSDate"24@"<ECMessage>"32q40
@"BMStoreStream"
@"BMSource"
@40@0:8@16Q24^@32
@"NSArray"40@0:8@"NSArray"16Q24^@32
@"<EDMailboxPredictor>"
@"NSCache"
@"EDInteractionLogger"
@"EDPETInteractionEventLog"
@"EDBiomeInteractionEventLog"
@"EDDifferentialPrivacyReporter"
v48@0:8q16q24@32@40
v48@0:8q16q24@"NSString"32@"NSString"40
v32@0:8q16q24
@"BKSProcessAssertion"
@"<EDClientStateReporting>"
v20@0:8B16
@24@0:8@?16
@"EFLocked"
v28@0:8i16@?20
@20@0:8i16
@?28@0:8@?16i24
@"NSPersistentContainer"
@"EDTaskScheduler"
@"NSManagedObjectContext"
@"<EDConversationDailyCloudExporterDelegate>"
@"EDUbiquitousConversationManager"
v40@0:8@16@24q32
v40@0:8@"<EDConversationRemoteStorage>"16@"NSDictionary"24q32
v24@0:8@"<EDConversationRemoteStorage>"16
v32@0:8@"NSMutableDictionary"16@"NSString"24
@"NSDictionary"24@0:8@"NSString"16
@"NSDictionary"16@0:8
v44@0:8@16@24@32B40
v36@0:8@16@24B32
@"<EDConversationRemoteStorageDelegate>"
@"<EDConversationRemoteStorage>"
@"EDConversationRemoteCloudKitStorage"
@"EDTransactionService"
q24@0:8Q16
Q24@0:8q16
v48@0:8Q16@24q32q40
@32@0:8q16Q24
v32@0:8@16q24
v24@0:8d16
v48@0:8Q16@"NSString"24q32q40
q24@0:8@"NSArray"16
@"NSArray"32@0:8q16Q24
v32@0:8@"NSArray"16q24
@32@0:8q16q24
@"NSArray"32@0:8q16q24
@"NSArray"32@0:8^@16^@24
v28@0:8@16B24
v40@0:8Q16@24q32
v32@0:8q16@24
v56@0:8q16Q24Q32q40@48
v48@0:8q16Q24Q32q40
v56@0:8@16@24@32Q40@48
v48@0:8@16@24Q32Q40
v32@0:8@"NSFetchedResultsController"16@"NSDiffableDataSourceSnapshot"24
v32@0:8@"NSFetchedResultsController"16@"NSOrderedCollectionDifference"24
v56@0:8@"NSFetchedResultsController"16@24@"NSIndexPath"32Q40@"NSIndexPath"48
v48@0:8@"NSFetchedResultsController"16@"<NSFetchedResultsSectionInfo>"24Q32Q40
v24@0:8@"NSFetchedResultsController"16
@"NSString"32@0:8@"NSFetchedResultsController"16@"NSString"24
v36@0:8@16B24@28
@40@0:8@16@24@?32
@40@0:8@16@24^@32
@"EDCloudMirroringPersistentStore"
@"NSFetchedResultsController"
@"NSPersistentHistoryToken"
@"NSUbiquitousKeyValueStore"
@"EDPersistence"
@"EDCategorySubsystem"
@24@0:8^@16
@"NSArray"24@0:8^@16
v44@0:8@16@24B32@36
v36@0:8@16B24q28
v28@0:8B16@20
v40@0:8q16q24@32
v40@0:8q16@24@32
v44@0:8@16q24@32B40
v28@0:8@"<ECMessage>"16B24
v36@0:8@"NSArray"16B24@"EDPersistenceDatabaseGenerationWindow"28
v32@0:8@"NSArray"16@"EDPersistenceDatabaseGenerationWindow"24
v32@0:8@"NSData"16@"<EDPersistedMessage>"24
v40@0:8@"NSArray"16@"<EDPersistedMessage>"24@"EDPersistenceDatabaseGenerationWindow"32
v32@0:8@"NSURL"16@"EDPersistenceDatabaseGenerationWindow"24
v32@0:8@"ECMessageFlagChange"16@"NSArray"24
v40@0:8@"ECMessageFlagChange"16@"NSArray"24@"EDPersistenceDatabaseGenerationWindow"32
v32@0:8@"NSDate"16@"NSArray"24
v44@0:8@"NSDate"16@"NSArray"24B32@"EDPersistenceDatabaseGenerationWindow"36
v40@0:8@"NSDate"16@"NSArray"24@"EDPersistenceDatabaseGenerationWindow"32
v40@0:8@"<EDPersistedMessage>"16@"NSDate"24q32
v36@0:8@"NSArray"16B24q28
v28@0:8B16@"NSArray"20
v40@0:8q16q24@"EDPersistenceDatabaseGenerationWindow"32
v48@0:8@"NSSet"16@"NSSet"24@"NSArray"32@"EDPersistenceDatabaseGenerationWindow"40
v32@0:8q16@"NSArray"24
v40@0:8q16@"NSArray"24@"EDPersistenceDatabaseGenerationWindow"32
v48@0:8q16q24@"<EDPersistedMessage>"32@"EDPersistenceDatabaseGenerationWindow"40
v44@0:8@"NSArray"16q24@"NSURL"32B40
B32@0:8@16q24
B48@0:8@16q24@32@40
@"<EDMessageChangeHookResponder>"
v32@0:8Q16@?24
v32@0:8@"<EMDiagnosticInfoProvidingXPC>"16@?<v@?@"<EFCancelable>">24
v32@0:8Q16@?<v@?@"EFSandboxedURLWrapper">24
v24@0:8@?<v@?@"NSString">16
v24@0:8@?<v@?@"NSDictionary">16
@"<EMDiagnosticInfoProvidingXPC>"
@"<EDServerRemoteClientsProvider>"
@"EDFetchController"
@24@0:8d16
d16@0:8
@"_MSTTLReference"
@"<EMUserProfileProvider>"
@"EDMailDynamicDataAsset"
@48@0:8@16@24@32@?40
@32@0:8Q16@?24
@"NSProgress"48@0:8@"EMObjectID"16@"EMContentRequestOptions"24@"<EMContentItemRequestDelegate>"32@?<v@?@"<_EMDistantContentRepresentation>"@"EMContentRepresentation"@"NSError">40
@"NSProgress"24@0:8@?<v@?@"EMContentRepresentation"@"NSError">16
@"NSProgress"32@0:8Q16@?<v@?@"NSError">24
v32@0:8@"EDMessageQueryHelper"16@"NSArray"24
v24@0:8@"EDMessageQueryHelper"16
v40@0:8@"EDMessageQueryHelper"16@"NSArray"24q32
v40@0:8@"EDMessageQueryHelper"16q24q32
v48@0:8@"EDMessageQueryHelper"16@"EMMessage"24@"EMMessageObjectID"32q40
v40@0:8@"EDMessageQueryHelper"16@"NSArray"24@"NSArray"32
@68@0:8@16@24@32@40@48@56B64
@"EMThreadScope"
@"EDMessageQueryHelper"
@"_EDGroupedSenderList"
@24@0:8Q16
@"NSMutableOrderedSet"
@32@0:8@16Q24
@32@0:8Q16@24
@32@0:8d16@24
@32@0:8@16d24
@"<EDMailboxPredictionQueryAdapter>"
@"NSDictionary"
@"NSMutableString"
@"ACAccount"
@40@0:8@16@24^B32
@32@0:8@16^B24
@"NSMutableArray"
@"EMThread"
@"EFQuery"
@"<EMMailboxTypeResolver>"
@"EMMessage"
@88@0:8@16@24@32@40@48@56@64@72@80
@32@0:8@16^@24
B28@0:8@16B24
B32@0:8@16@24
@"EFProcessTransaction"
@"EDVIPManager"
@"<EDRemoteSearchProvider>"
@"NSArray"
@"EDUpdateThrottler"
@"EDThreadReloadSummaryHelper"
@"EMMailboxScope"
@"EMCollectionItemIDStateCapturer"
@24@0:8o^@16
@"NSData"
@"<ECMessage>"
v32@0:8@"<ECMessage>"16@"<ECMailAccount>"24
v48@0:8@"NSString"16@"NSDate"24@"EMMessageObjectID"32@"NSDictionary"40
v40@0:8@"NSString"16@"NSDate"24@"NSDictionary"32
v56@0:8@16@24@32q40@48
@48@0:8{_NSRange=QQ}16{_NSRange=QQ}32
v32@0:8{_NSRange=QQ}16
{_NSRange=QQ}16@0:8
@"<EDInteractionEventLog>"
@"EDMailboxPersistence"
{_NSRange="location"Q"length"Q}
v40@0:8@16d24@?32
@"EMListUnsubscribeDetector"
@32@0:8@16q24
v48@0:8q16@24@32@40
B40@0:8@16q24@32
B44@0:8q16@24B32@36
B56@0:8@16@24q32q40@48
v48@0:8@16q24q32@40
v40@0:8@16q24@32
@"EDGmailLabelPersistence"
@"NSSet"24@0:8q16
q24@0:8@"EMMailboxObjectID"16
@"NSSet"16@0:8
@28@0:8@16B24
@"EDMailboxProvider"
v40@0:8@16@24@?32
@"EDCachingMailboxPredictor"
@"<EDMailboxProviderDelegate>"
@"NSMapTable"
v32@0:8q16@?24
v48@0:8@16@24@32@?40
v40@0:8@"WKWebView"16@"WKNavigationAction"24@?<v@?q>32
v48@0:8@"WKWebView"16@"WKNavigationAction"24@"WKWebpagePreferences"32@?<v@?q@"WKWebpagePreferences">40
v40@0:8@"WKWebView"16@"WKNavigationResponse"24@?<v@?q>32
v32@0:8@"WKWebView"16@"WKNavigation"24
v40@0:8@"WKWebView"16@"WKNavigation"24@"NSError"32
v40@0:8@"WKWebView"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"WKWebView"16
v40@0:8@"WKWebView"16@"NSURLAuthenticationChallenge"24@?<v@?B>32
v40@0:8@"WKWebView"16@"WKNavigationAction"24@"WKDownload"32
v40@0:8@"WKWebView"16@"WKNavigationResponse"24@"WKDownload"32
@40@0:8d16@?24@?32
@"WKWebView"
@"EFPromise"
v32@0:8@"WKUserContentController"16@"WKScriptMessage"24
@"NSSet"
@"MEAppExtensionsController"
@"EFCancelationToken"
@56@0:8q16@24@32@40@48
@"<EDPersistedMessage>"
@"ECMessageFlagChange"
@36@0:8@16@24B32
@44@0:8@16q24@32B40
v52@0:8@16q24@32B40@44
v52@0:8@16@24q32@40B48
@44@0:8@16@24B32@36
@"EDLocalActionPersistence"
@"EDReadLaterPersistence"
@"EDServerMessagePersistenceFactory"
@"EDBIMIManager"
@"NSString"24@0:8@16
v40@0:8q16@"EMMailboxObjectID"24@"EDPersistenceDatabaseGenerationWindow"32
@56@0:8@16@24@32@40@48
@64@0:8@16@24@32@40@48d56
@"EMObjectID"
@"EFMutableInt64Set"
{EFAtomicObject="cfObject"Aq}
@"EFStoppableScheduler<EFAssertableScheduler>"
@"NSPredicate"
@"EDMessageQueryEvaluator"
@"<EMMessageRepositoryCountQueryObserver_xpc>"
@"EFListStateCapturer"
@"EFDebouncer"
@36@0:8q16@24B32
q32@0:8@16@24
@"NSDictionary"32@0:8Q16@24
@"NSDictionary"24@0:8@"NSArray"16
@64@0:8@16@24@32@40@48@56
q32@0:8q16@24
@40@0:8@16q24@32
v64@0:8@16q24q32q40@48@?56
v48@0:8@16q24@32@?40
@36@0:8@16B24^@28
B32@0:8@16^@24
B40@0:8@16@?24^@32
q32@0:8q16^@24
@56@0:8@16Q24@32@40@?48
v40@0:8@16q24@?32
i16@0:8
v20@0:8i16
@"EDMessagePersistenceStatistics"
@"EDMessageTransformer"
v24@0:8Q16
@72@0:8@16@24@32@40@48@56@64
@32@0:8q16@?24
@64@0:8@16@24@32@40@48^@56
@"NSConditionLock"
v32@0:8@"EDRemindMeNotificationController"16@"<EDPersistedMessage>"24
v32@0:8@"EMSender"16q24
v40@0:8@"EMSender"16q24q32
v32@0:8@"NSArray"16@"EMSender"24
v40@0:8@"NSArray"16@"EMSender"24q32
@"NSArray"32@0:8@"NSArray"16q24
@"EFQuery"16@0:8
@84@0:8@16@24@32@40@48@56@64B72B76B80
@32@0:8@16B24B28
{atomic_flag="_Value"AB}
@"EDRemindMeNotificationController"
@"<EDMessageQueryHelperDelegate>"
@"EDMessageQueryParser"
Q24@0:8@16
@"EDSearchableIndex"
@"EFSQLObjectPropertyMapper"
@"EFSearchableIndexObjectPropertyMapper"
@"EDMessageQueryTransformer"
@"<EMVIPManager>"
v24@0:8@"EDThreadQueryHandler"16
v56@0:8@16Q24@32@40@?48
v44@0:8@16Q24B32@?36
v44@0:8q16B24q28@?36
v40@0:8@16Q24@?32
v24@0:8@?<v@?B>16
v40@0:8@"EFQuery"16q24@?<v@?@"NSArray"@"NSError">32
v32@0:8@"EFQuery"16@?<v@?@"NSNumber"@"NSError">24
v48@0:8@"EFQuery"16@"<EMMessageListItemQueryResultsObserver>"24@"EMObjectID"32@?<v@?@"<EFCancelable>">40
v48@0:8@"EFQuery"16@"EMMailboxScope"24@"<EMMessageRepositoryCountQueryObserver_xpc>"32@?<v@?@"<EFCancelable>">40
v56@0:8@"NSArray"16Q24@"EMObjectID"32@"NSArray"40@?<v@?@"NSArray"@"NSDictionary">48
v44@0:8@"EMMessageChangeAction"16Q24B32@?<v@?@"EMUndoMessageAction">36
@"NSProgress"56@0:8@"EMMessageObjectID"16Q24@"EMContentRequestOptions"32@"<EMContentItemRequestDelegate>"40@?<v@?@"<_EMDistantContentRepresentation>"@"EMContentRepresentation"@"NSError">48
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSData">32
v24@0:8@"EMMailboxScope"16
v40@0:8@"NSString"16@"NSString"24@"EMMessageObjectID"32
v40@0:8@"NSString"16@"EMMessageObjectID"24@?<v@?@"NSString">32
v40@0:8@"NSArray"16@"<EMMessageRepositoryMailboxPredictionObserver_xpc>"24@?<v@?@"<EFCancelable>">32
v32@0:8@"NSURL"16@?<v@?@"EMMessageObjectID"@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSArray"@"NSDictionary"@"NSError">24
v24@0:8@?<v@?@"EFSandboxedURLWrapper"Q>16
v44@0:8q16B24q28@?<v@?@"NSArray"@"NSArray"@"NSError">36
v40@0:8@"EMMessageObjectID"16Q24@?<v@?@"NSArray"@"NSError">32
v32@0:8@"NSURL"16@?<v@?@"NSData">24
@160@0:8@16@24@32@40@48@56@64@72@80@88@96@104@112@120@128@136@144@152
v40@0:8@16#24@?32
@32@0:8B16@20B28
@36@0:8@16q24B32
@"EDMailboxPredictionController"
@"EDWebContentParser"
@"EDConversationPersistence"
@"EDThreadPersistence"
@"EDRemoteContentPersistence"
@"EDRichLinkPersistence"
@"EDMessageChangeManager"
@"<EDResumable>"
@"EDRemoteContentManager"
@"EDRemoteContentCacheConfiguration"
@"EMBlockedSenderManager"
@"EDListUnsubscribeHandler"
v24@0:8@"EMMessageObjectID"16
@"<EMMessageListItemQueryResultsObserver>"
@"<EMVIPReader>"
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v40@0:8@16B24B28@?32
v48@0:8@"EMOutgoingMessage"16@"EMMailboxObjectID"24@"EMMessageObjectID"32@?<v@?@"EMMessage">40
v40@0:8@"EMOutgoingMessage"16@"NSDate"24@?<v@?@"EMMessage">32
v40@0:8@"NSDate"16@"EMMessage"24@?<v@?@"EMMessage">32
v32@0:8@"NSDate"16@?<v@?@"NSError">24
v40@0:8@"EMMailboxObjectID"16@"NSString"24@"EMMessageObjectID"32
v40@0:8@"EMOutgoingMessage"16B24B28@?<v@?@"EMMessageDeliveryResult">32
v32@0:8@"EMObjectID"16@?<v@?B>24
v24@0:8@?<v@?Q>16
v32@0:8@"<EMOutgoingMessageRepositoryInterfaceObserver>"16@"EMObjectID"24
v24@0:8@"EMObjectID"16
@"EDSendLaterPersistence"
v40@0:8@"<EDPBHasher>"16@"<ECMessage>"24@"<ECMailAccount>"32
v32@0:8@"<EDPBHasher>"16@"<ECMessage>"24
v40@0:8@"<EDPBHasher>"16@"<ECMessage>"24@"NSDictionary"32
v40@0:8@"<EDPBHasher>"16@"<ECMessage>"24@"<ECMailbox>"32
v40@0:8@"<EDPBHasher>"16@"<ECMessage>"24q32
v40@0:8@"<EDPBHasher>"16q24@"NSDictionary"32
v20@0:8I16
I16@0:8
@"EDPBInteractionEventAppBackground"
@"EDPBInteractionEventAppLaunch"
@"EDPBInteractionEventAppResume"
@"EDPBInteractionEventCategoryInferred"
@"EDPBInteractionEventCategoryMarked"
@"EDPBInteractionEventFlagChanged"
@"EDPBInteractionEventForwardDraftStarted"
@"EDPBInteractionEventForwardSent"
@"EDPBInteractionEventLinkClicked"
@"EDPBInteractionEventMarkedMuteThread"
@"EDPBInteractionEventMessageCopied"
@"EDPBInteractionEventMessageFetched"
@"EDPBInteractionEventMessageMoved"
@"EDPBInteractionEventMessageSent"
@"EDPBInteractionEventMessageViewEnd"
@"EDPBInteractionEventMessageViewStart"
@"EDPBInteractionEventReadChanged"
@"EDPBInteractionEventReplyDraftStarted"
@"EDPBInteractionEventReplySent"
{?="timestamp"b1"eventName"b1"sequenceNumber"b1}
@"EDPBModelFeaturesImportant"
@"EDPBModelFeaturesPromotion"
{?="accountId"b1"conversationId"b1"mailboxId"b1"messageId"b1"score"b1"categoryType"b1"mailboxType"b1"modelId"b1"modelVersion"b1"positive"b1}
{?="accountId"b1"conversationId"b1"mailboxId"b1"messageId"b1"categoryType"b1"mailboxType"b1"positive"b1"removeAllUserOverrides"b1}
{?="accountId"b1"conversationId"b1"mailboxId"b1"messageId"b1"mailboxType"b1"value"b1}
{?="accountId"b1"conversationId"b1"mailboxId"b1"messageId"b1"mailboxType"b1}
{?="deviceId"b1"userId"b1"timezoneOffset"b1"userSegment"b1"version"b1"categoryRootInstalled"b1}
{?="conversationId"b1"value"b1}
{?="accountId"b1"conversationId"b1"fromMailboxId"b1"messageId"b1"toMailboxId"b1"fromMailboxType"b1"toMailboxType"b1}
@"EDPBMessageHeaders"
{?="accountId"b1"conversationId"b1"duration"b1"mailboxId"b1"messageId"b1"mailboxType"b1"scrolledToEnd"b1}
{?="messageId"b1}
^q16@0:8
v32@0:8^q16Q24
^B16@0:8
B24@0:8Q16
v32@0:8^B16Q24
{?="list"^q"count"Q"size"Q}
{?="list"^B"count"Q"size"Q}
{?="dateReceived"b1"listId"b1"sender"b1"senderContactId"b1"senderDomain"b1"messageIsForwarded"b1"messageIsReply"b1"senderIsVip"b1"userIsBcc"b1"userIsCc"b1"userIsSender"b1"userIsTo"b1}
{?="numRecipients"b1"timeReceived"b1"unknownFeatureCount"b1"ccContainsContact"b1"ccIsTopDirectAddressesBasedOnRespond"b1"ccIsTopDirectAddressesBasedOnScroll"b1"ccIsTopDirectAddressesBasedOnSend"b1"ccIsTopDirectAddressesBasedOnView"b1"ccIsTopIndirectAddressesBasedOnRespond"b1"ccIsTopIndirectAddressesBasedOnScroll"b1"ccIsTopIndirectAddressesBasedOnSend"b1"ccIsTopIndirectAddressesBasedOnView"b1"ccIsVip"b1"fromListId"b1"messageIsForward"b1"messageIsReply"b1"senderIsContact"b1"senderIsTopDirectAddressesBasedOnRespond"b1"senderIsTopDirectAddressesBasedOnScroll"b1"senderIsTopDirectAddressesBasedOnSend"b1"senderIsTopDirectAddressesBasedOnView"b1"senderIsTopIndirectAddressesBasedOnRespond"b1"senderIsTopIndirectAddressesBasedOnScroll"b1"senderIsTopIndirectAddressesBasedOnSend"b1"senderIsTopIndirectAddressesBasedOnView"b1"senderIsVip"b1"subjectIsTopWordsBasedOnRespond"b1"subjectIsTopWordsBasedOnScroll"b1"subjectIsTopWordsBasedOnSend"b1"subjectIsTopWordsBasedOnView"b1"toContainsContact"b1"toIsTopDirectAddressesBasedOnRespond"b1"toIsTopDirectAddressesBasedOnScroll"b1"toIsTopDirectAddressesBasedOnSend"b1"toIsTopDirectAddressesBasedOnView"b1"toIsTopIndirectAddressesBasedOnRespond"b1"toIsTopIndirectAddressesBasedOnScroll"b1"toIsTopIndirectAddressesBasedOnSend"b1"toIsTopIndirectAddressesBasedOnView"b1"toIsVip"b1"userIsBcc"b1"userIsCc"b1"userIsSender"b1"userIsTo"b1}
{?="headerKeyFilteredCount"b1"toCount"b1"unknownFeatureCount"b1}
@64@0:8@16@24q32q40q48@?56
@"EFQueue"
@"EDSenderPersistence"
@"EMRemoteContentURLCache"
@"MEContentRuleListManager"
@"EFXPCAlarmScheduler"
@20@0:8B16
@"EDPersistenceDatabaseConnection"20@0:8B16
@"NSURL"32@0:8@"NSString"16q24
@72@0:8@16@24Q32@40@48@56@64
B24@0:8@?16
B28@0:8B16@?20
B32@0:8Q16@?24
@"EFSQLSchema"
@"EFSQLPropertyMapper"
@"EDPersistenceDatabaseConnectionPool"
@"EDProtectedDatabasePersistence"
@28@0:8B16@20
@36@0:8^{sqlite3=}16B24@28
B32@0:8@16^Q24
^{sqlite3=}16@0:8
B40@0:8Q16^@24@?32
v28@0:8i16@20
B40@0:8@16@24^Q32
B48@0:8@16@24@32^Q40
@"<EDPersistenceDatabaseConnectionDelegate>"
@"EDPersistenceDatabaseJournal"
@"EFSQLConnection"
B32@0:8Q16^@24
v32@0:8Q16@24
@"NSLock"
@"_EDPersistenceDatabaseConnectionWrapper"
@"EFResourcePool"
@"<EDPersistenceDatabaseConnectionPoolDelegate>"
@"EFResource"
@"EDPersistenceDatabaseConnection"
@"EDPersistenceDatabaseJournalManager"
@"NSMutableIndexSet"
@48@0:8@16@24Q32Q40
@"EFSQLColumnSchema"
v32@0:8@"NSDictionary"16@"NSArray"24
v24@0:8@"EDPersistenceDatabaseConnection"16
v32@0:8@"<EDPersistedMessage>"16@"EFSQLRow"24
v48@0:8q16@"EDSearchableIndexUpdates"24@"NSArray"32@"EDPersistenceDatabaseGenerationWindow"40
v36@0:8@"EMThreadObjectID"16B24@"EDPersistenceDatabaseGenerationWindow"28
v32@0:8@"EMThreadObjectID"16@"EDPersistenceDatabaseGenerationWindow"24
v40@0:8@"EMThreadObjectID"16@"NSArray"24@"EDPersistenceDatabaseGenerationWindow"32
v24@0:8@"EMThreadScope"16
v32@0:8@"NSData"16@"NSURL"24
v32@0:8{objc_method_description=:*}16
v40@0:8@16{objc_method_description=:*}24
^{__CFDictionary=}
@"EDPETQuotaReachedEvent"
@"EDPETSubmittedEvent"
{?=^qQQ}24@0:8@16
q24@0:8q16
q24@0:8@"NSString"16
{?=^qQQ}24@0:8@"ECSubject"16
q24@0:8@"<ECMailAccount>"16
q24@0:8@"<ECMailbox>"16
@"EDPBMessageHeaders"24@0:8@"<ECMessage>"16
@32@0:8@16o^q24
@28@0:8i16@20
@"SGMailIntelligenceStringHasher"
@"CNContactStore"
@"EFLazyCache"
@"NSFileHandle"
{?="droppedEventsCount"b1"timestamp"b1"sequenceNumber"b1"timezoneOffset"b1}
{?="timestamp"b1"timezoneOffset"b1}
B40@0:8@16@24@32
@48@0:8@16@24^@32^@40
@"<EFCancelable>"
Q44@0:8@16B24@28@36
Q32@0:8@16@24
Q48@0:8@16@24^Q32^Q40
Q40@0:8@16@24@32
@"ECAngleBracketIDHash"
@"NSDate"24@0:8@"<EDPersistedMessage>"16
@"<EMMutableDictionaryProtocol>"
@"EDReadLaterCloudStorage"
@"NSDate"16@0:8
v24@0:8@"NSDate"16
v40@0:8@"EDRemindMeNotificationController"16@"<EDPersistedMessage>"24@"NSDate"32
@"<EDRemindMeNotificationControllerAlarmDateProvider>"
@"EDQueryCreator"
@"<EDRemindMeNotificationControllerEventDelegate>"
@"EFXPCAlarm"
v24@0:8@?<v@?@"<EMMessageRepositoryInterface>">16
v24@0:8@?<v@?@"<EMOutgoingMessageRepositoryInterface>">16
v24@0:8@?<v@?@"<EMAccountRepositoryInterface>">16
v24@0:8@?<v@?@"<EMSenderRepositoryInterface>">16
v24@0:8@?<v@?@"<EMFetchControllerInterface>">16
v24@0:8@?<v@?@"<EMMailboxRepositoryInterface>">16
v24@0:8@?<v@?@"<EMClientStateInterface>">16
v24@0:8@?<v@?@"<EMSearchableIndexInterface>">16
v24@0:8@?<v@?@"<EMInteractionLoggerInterface>">16
v24@0:8@?<v@?@"<EMVIPManagerInterface>">16
v24@0:8@?<v@?@"<EMActivityRegistryInterface>">16
v24@0:8@?<v@?@"<EMDiagnosticInfoGathererInterface>">16
v24@0:8@?<v@?>16
@"EDAccountRepository"
@"EDMailboxRepository"
@"EDOutgoingMessageRepository"
@"EDSenderRepository"
@"<EMVIPManagerInterface>"
@"EDActivityRegistry"
@"NSXPCConnection"
@"EDDaemonInterfaceFactory"
@"EDClientState"
@"EDMessageRepository"
@"EDClientResumer"
@"EDDiagnosticInfoGatherer"
@"EDRemoteClient"
v44@0:8Q16B24d28@?36
Q44@0:8Q16B24^B28@?36
Q44@0:8Q16B24@?28^Q36
@64@0:8@16@?24^Q32^Q40^Q48^Q56
v44@0:8@16B24@28@36
@"NSBackgroundActivityScheduler"
@"<EDRemoteContentManagerTestDelegate>"
@32@0:8Q16Q24
@44@0:8q16B24q28^@36
@60@0:8@16q24B32q36@44^@52
@56@0:8@16@24@32q40@48
B24@0:8q16
@48@0:8@16@24@32o^@40
@52@0:8@16@24@32B40o^@44
v32@0:8@"CSSearchableIndex"16@?<v@?>24
v40@0:8@"CSSearchableIndex"16@"NSArray"24@?<v@?>32
v24@0:8@"CSSearchableIndex"16
@"NSData"48@0:8@"CSSearchableIndex"16@"NSString"24@"NSString"32o^@40
@"NSURL"52@0:8@"CSSearchableIndex"16@"NSString"24@"NSString"32B40o^@44
@48@0:8@16@24Q32q40
@"NSString"24@0:8@"EDSearchableIndexVerifier"16
@"NSDictionary"48@0:8@"EDSearchableIndexVerifier"16@"EDSearchableIndex"24Q32q40
@"EDSearchableIndex"24@0:8@"EDSearchableIndexVerifier"16
@"NSSet"24@0:8@"EDSearchableIndexVerifier"16
v32@0:8@"NSArray"16@?<v@?>24
d40@0:8^Q16d24@?32
v40@0:8q16@24@?32
v36@0:8@16B24@?28
v24@0:8B16B20
v32@0:8^@16^@24
v32@0:8@16B24B28
@"NSObject<OS_os_activity>"
@"_EMSearchableIndexPendingRemovals"
@"EFStoppableScheduler<EFSuspendableScheduler><EFAssertableScheduler>"
@"EFStoppableScheduler"
@"<EDSearchableIndexDataSource>"
@"<EDSearchableIndexReasonProvider>"
@"<EDSearchableIndexSchedulableDelegate>"
@"CSSearchableIndex"
@"EFFuture"
@"<EDSearchableCriterion>"
@"NSIndexSet"
@"CSSearchableItem"16@0:8
@"EFFuture"16@0:8
q24@0:8@"<EDIndexableItem>"16
@"NSData"16@0:8
v24@0:8@"NSData"16
@"CSSearchableItem"
@"EDSearchableIndexAttachmentItemMetadatum"
@52@0:8d16d24q32B40B44B48
@40@0:8d16d24q32
@44@0:8@16@24@32B40
@"<EDBaseMessage>"
v28@0:8B16Q20
@"<EDIndexableItem>"
@48@0:8@16@24Q32@40
@40@0:8@16Q24q32
@"EDSearchableIndexUpdates"48@0:8@"EDSearchableIndex"16@"NSArray"24Q32@"EFCancelationToken"40
q32@0:8@"EDSearchableIndex"16@"<EDIndexableItem>"24
v40@0:8@"EDSearchableIndex"16q24@"NSArray"32
v40@0:8@"EDSearchableIndex"16@"NSArray"24q32
@"NSArray"32@0:8@"EDSearchableIndex"16@"NSArray"24
@"NSArray"40@0:8@"EDSearchableIndex"16q24@"EDSearchableIndexUpdates"32
v32@0:8@"EDSearchableIndex"16q24
@"NSDictionary"40@0:8@"EDSearchableIndex"16Q24q32
@"NSSet"24@0:8@"EDSearchableIndex"16
v40@0:8@"EDSearchableIndex"16@"NSArray"24@"NSString"32
v32@0:8@"EDSearchableIndex"16@"NSString"24
@"NSArray"32@0:8@"EDSearchableIndex"16@"NSString"24
v28@0:8@"NSString"16B24
@40@0:8@16@24q32
v56@0:8@16@24@32q40@?48
v64@0:8@16@24@32@40q48@?56
@40@0:8q16@24q32
@48@0:8@16Q24@32@40
@40@0:8@16Q24@32
v72@0:8@16@24@32q40@48@56@?64
@"EDDataDetectionPersistence"
@"<EDSearchableIndexHookResponder>"
@"EDSearchableIndexRichLinkItemMetadatum"
v32@0:8@16d24
d24@0:8@16
v32@0:8@"<EDSearchableIndexSchedulable>"16d24
v32@0:8@"<EDSearchableIndexSchedulable>"16q24
v24@0:8@"<EDSearchableIndexSchedulable>"16
v40@0:8@"<EDSearchableIndexSchedulable>"16@"NSString"24@"NSDictionary"32
d24@0:8@"<EDSearchableIndexSchedulable>"16
q24@0:8@"<EDSearchableIndexSchedulable>"16
B24@0:8@"<EDSearchableIndexSchedulable>"16
@?24@0:8@16
v40@0:8@16@?24@?32
@"<EDSearchableIndexSchedulable>"
@"EDSearchableIndexBudgetConfiguration"
@"EDSearchableIndexVerificationData"24@0:8@"EDSearchableIndexVerificationData"16
@"EMSearchableIndexQueryExpression"24@0:8@"NSDictionary"16
B32@0:8@"CSSearchableItem"16@"EDSearchableIndexVerificationData"24
v32@0:8@?16@24
@"<EDSearchableIndexVerifierDataSource>"
Q80@0:8@16@24@32@40@48@56^Q64^@72
Q80@0:8@"NSString"16@"NSString"24@"EFSQLUpdateStatement"32@"NSNumber"40@"NSNumber"48@"EDPersistenceDatabaseConnection"56^Q64^@72
v40@0:8@16q24B32B36
@48@0:8@16q24B32B36^q40
B56@0:8@16@24q32@40^q48
B40@0:8q16q24@32
B48@0:8@16q24@32^@40
@40@0:8@16^@24^@32
@"<EDSendLaterUpdateControllerAlarmDateProvider>"
@"NSXPCListener"
@48@0:8@16@24q32B40B44
@36@0:8@16Q24B32
B40@0:8@16^B24^B32
B32@0:8q16@24
B44@0:8@16@24I32@36
v36@0:8Q16B24@?28
v52@0:8Q16B24Q28Q36@?44
@28@0:8Q16B24
@"ECServerMessage"
B48@0:8@16@24q32@40
@40@0:8@16q24^@32
@"<EFAssertableScheduler>"
@"NSUserDefaults"
B40@0:8q16@24@32
v32@0:8@?16@?24
@"NSObject<OS_dispatch_source>"
v36@0:8@16Q24B32
@"EDInMemoryThreadQueryHandler"
@"<EDThreadMigratorDelegate>"
B56@0:8Q16Q24@32@40Q48
B64@0:8Q16Q24Q32@40@48Q56
B56@0:8Q16@?24@32@40Q48
@"NSCountedSet"
B40@0:8@16@24@?32
B32@0:8@"EDThreadScopeManager"16@"EMMailboxScope"24
B32@0:8@"EDThreadScopeManager"16@"EMMailboxObjectID"24
v32@0:8@"EDThreadScopeManager"16@?<v@?q@"EMThreadScope"B@"NSDate">24
v40@0:8@"EDThreadScopeManager"16@"NSDictionary"24@?<v@?q@"NSDate"Q>32
B40@0:8@"EDThreadScopeManager"16@"NSArray"24@?<v@?B>32
B32@0:8@16^B24
v56@0:8@16@24Q32@40@?48
B48@0:8@16@24@32@?40
@32@0:8@16^q24
@56@0:8@16q24@32q40@48
v40@0:8^@16^@24@32
@48@0:8@16@24@32q40
@48@0:8@16@24q32@40
B40@0:8Q16@24@32
B40@0:8@16B24@28B36
B52@0:8@16q24B32@36@44
B64@0:8@16q24q32B40@44B52@56
B36@0:8@16B24@28
@"EDThreadScopeManager"
@56@0:8@16@24q32@40@48
B24@0:8B16B20
@"EMThreadObjectID"
@"_EDThreadPersistence_SQLHelper"
B32@0:8@16Q24
@"_EDThreadPersistence_ThreadMessages"
@"<EFSQLExpressable>"
i40@0:8@16@?24@?32
q40@0:8@16@?24@?32
B48@0:8@16@?24@?32@?40
B32@0:8@16@?24
@"_EDThreadPersistence_StatementCache"
@"EDPrecomputedThreadQueryHandler"
@"EDThreadMigrator"
v24@0:8@"EDThreadMigrator"16
v32@0:8@"EMObjectID"16@"<EFInvocable>"24
v48@0:8@"EMObjectID"16@"NSArray"24@"EMObjectID"32@"NSDictionary"40
v40@0:8@"EMObjectID"16@"NSArray"24@"EMObjectID"32
v32@0:8@"EMObjectID"16@"NSDictionary"24
v32@0:8@"EMObjectID"16@"NSArray"24
v40@0:8@"EMObjectID"16@"EMObjectID"24@"EMMessageObjectID"32
@104@0:8@16@24@32@40@48@56@64@72@80@88@96
@40@0:8@16^B24^@32
@"<EDThreadQueryHandlerDelegate>"
@36@0:8@16B24@28
v44@0:8@16q24B32@36
v40@0:8Q16Q24@32
d32@0:8Q16d24
Q32@0:8@16^Q24
@"<EDThreadScopeManagerDataSource>"
@36@0:8q16B24@28
@"<EDUbiquitousConversationManagerDelegate>"
@40@0:8@16d24@32
@40@0:8@16d24q32
@32@0:8d16q24
@32@0:8@?16^Q24
Q24@0:8^d16
@"<EMBlockedSenderReader>"
B24@0:8@"NSString"16
v24@0:8@?<v@?@"NSSet"@"NSError">16
@"EMVIP"24@0:8@"NSString"16
v24@0:8@"NSSet"16
v24@0:8@"EAEmailAddressSet"16
@"EAEmailAddressSet"16@0:8
@"EAEmailAddressSet"
@"<EDVIPManagerDelegate>"
v32@0:8@"<EMVIPManagerObserver>"16@"EMObjectID"24
@"NSHashTable"
v32@0:8@"NSURL"16@"NSArray"24
v24@0:8@"NSURL"16
@"_WKRemoteObjectInterface"
@"ECWebContentObserver"
@"EMUbiquitouslyPersistedDictionaryMergeResult"40@0:8@"NSArray"16@"NSMutableDictionary"24@"NSUbiquitousKeyValueStore"32
v36@0:8@16q24B32
@"<MUIBucketSenderCloudStorageDelegate>"
@"<MUIBucketSendersCloudStorageUpgraderDelegate>"
@"MUIBucketSenderCloudStorage"
@"EDGroupedSenderQueryHandler"
@"<EMMessageRepositoryUnscreenedSendersQueryObserver_xpc>"
@"MLFeatureValue"24@0:8@"NSString"16
@360@0:8d16d24d32d40d48d56d64d72d80d88d96d104d112d120d128d136d144d152d160d168d176d184d192d200d208d216d224d232@240d248d256d264d272d280d288d296d304d312d320d328d336d344d352
@368@0:8d16d24d32d40d48d56d64d72d80d88d96d104d112d120d128d136d144d152d160d168d176d184d192d200d208d216d224d232@240d248d256d264d272d280d288d296d304d312d320d328d336d344d352^@360
@"MLModel"
@40@0:8@16d24^@32
