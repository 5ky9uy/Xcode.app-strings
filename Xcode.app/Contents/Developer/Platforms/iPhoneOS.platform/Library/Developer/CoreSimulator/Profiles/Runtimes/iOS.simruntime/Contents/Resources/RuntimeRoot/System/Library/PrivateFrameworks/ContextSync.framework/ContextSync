@(#)PROGRAM:ContextSync  PROJECT:BiomeSync-1
com.apple.contextsync
com.apple.biome.ContextSync
v16@?0@"NSError"8
v20@?0B8@"NSError"12
v12@?0B8
com.apple.contextsync.subscriptions
lastBootUUID
remoteDSLIdentifiers
localDSLIdentifiers
lockedUpdates
streamIdentifier
event
dataVersion
identifier
com.apple.private.alloy.contextsync
rebootNotificationDelivered
waking
v8@?0
com.apple.contextsync.main
com.apple.contextsync.queue
com.apple.contextsync.idsQueue
com.apple.contextSync.receiverQueue
uniqueIDOverride
v16@?0@"BPSCompletion"8
v16@?0@"BMStoreEvent"8
%@:%@
nonwaking
Desktop
iPhone
iPod
iPad
AppleTV
Watch
Audio
Browser
Unknown
com.apple.ContextSync.contextMetrics
context
subscriberDeviceType
duration
@"NSDictionary"8@?0
com.apple.ContextSync.messageMetrics
latencySeconds
messageType
None
contextIdentifier
messageVersion
Unknown Error
BiomeLibrary
BMContextSyncLOIIdentifier
BMContextSyncLOI
Unable to find class %s
dsls
subscription
dslIdentifiers
type
version
wake
ContextSyncErrorDomain
lastChangeDate
subscriptions
main
Unsupported Stream
Class C Locked
Registration Didn't Change
Lacks Proper Entitlements
No Registration Identifier
kern.bootsessionuuid
Received DSL with shouldWake %@ for devices %@
Context Sync registration error: No Identifier!
%@ Error: %@
Error: %@
Error registering %@
Client unregistered DSL for devices types %@
Error unregistering %@
failed to get stream with identifier %@
Failed to deserialize event
Posted %@
Local device %@
Load Context Sync Subscriptions
Failed to log identifier %@ on device %@: No DSL found
Device has class C unlocked
Rebooted %@, unlocked %@, delivered notifications %@, reloaded subscriptions %@, remote dsl identifiers %@, local dsl identifiers %@
Recreating sink for %@
Class C Unlocked: Notifying stored context changes %@
Class C Unlocked: Sending empty subscription for local device %@
Did not successfully set up sink with identifier: %@
New event: %@
Class C Locked: Stored updates are now %@
New event but not semantic location! %@
Subscribed to Biome with %@, Updated dsl/scheduler to %@, stream identifiers are %@, publishers are %@
Unsubscribing identifier %@ from Biome, stream identifiers were %@
Could not find a dsl for identifier %@
Removed subscriptions for remote %@: %@
Incoming subscription is dropped. This message verson is not supported %@
Error getting DSL for identifier %@
Identifier %@ does not have a wake. Message received %@
Updated subscription from remote %@: %@
Could not find: %@
Updated subscription for local: %@
Couldn't find wake object
Incoming event is dropped. This message verson is not supported %@
Saving object %@ for device %@
Cannot find %@ in device set %@
No destinations for devices %@, with current devices as %@
Failed to send %@: No queue identifier %@ / options
Failed to send: %@ because %@
Sent %@ %@ to devices %@
Registering DSL %@ should wake %@, for devices types %@, which includes %@
Unregistering DSL %@ for device types %@, which includes %@
Unregistering DSL %@ for devices %@
Can't log metrics for device %@: No longer exists
Negative duration: WakeState %@ and subscriptions %@
Logged stream end: %@
Logged new message: %@
Received new message but dropping because could not find device %@
Received new subscription from %@: %@ sent at %@
Received new context: %@
Disconnected subscriber %@
Warning - Client may lost context due to disconnected subscribed device %@
Potential device change: Current device set is %@
Remove DSL %@ for subscribed %@ and subscribing %@: DidChange = %@, Subscription is now %@
Remove all subscriptions on subscribed %@ for subscribing %@: DidChange = %@, Subscription is now %@
Remove all subscriptions for %@: DidChange = %@, Subscription is now %@
Remove all subscriptions for %@: DidChange = %@
Evaluating if DSLs %@ is waking: %@
Did not find DSL %@ waking
Evaluating waking DSLs on subscribed %@ to exist: %@
Load from default error! Defaults: %@, Identifier: %@
Loaded from default %@
Process does not have entitlements for %@
Failed to convert DSL to data because %@
Failed to unarchive DSL %@
softlink:r:path:/System/Library/PrivateFrameworks/BiomeLibrary.framework/BiomeLibrary
ContextSyncManaging
NSObject
ContextSyncClient
ContextSyncClientProtocol
_DASBiomeStream
ContextSyncService
NSXPCListenerDelegate
IDSServiceDelegate
_ContextSyncLogger
_ContextSyncWakeState
_ContextSyncWakeSubscription
_ContextSyncOtherDeviceSubscriptions
_ContextSyncSubscriptions
_ContextSyncDeviceUtilities
SerializeBMDSL
DeserializeBMDSL
init
UTF8String
initWithMachServiceName:options:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
registerForUpdates:withIdentifier:shouldWake:forDeviceTypes:withErrorHandler:
registerForUpdates:withIdentifier:shouldWake:forDeviceTypes:withHandler:
unregisterForUpdates:withIdentifier:forDeviceTypes:withErrorHandler:
unregisterForUpdates:withIdentifier:forDeviceTypes:withHandler:
interfaceWithProtocol:
setRemoteObjectInterface:
resume
numberWithBool:
numberWithInteger:
isSupportEnabledForBMDSL:withError:
updateDescriptionForError:withErrorCode:
synchronousRemoteObjectProxyWithErrorHandler:
localizedDescription
registerForUpdates:withIdentifier:shouldWake:forDeviceTypes:withError:
registerForUpdates:withIdentifier:shouldWake:forDeviceTypes:
unregisterForUpdates:withIdentifier:forDeviceTypes:withError:
unregisterForUpdates:withIdentifier:forDeviceTypes:
initWithClientName:
clientName
setClientName:
connection
setConnection:
setLog:
.cxx_destruct
_clientName
_connection
_log
T@"NSString",&,N,V_clientName
T@"NSXPCConnection",&,N,V_connection
T@"NSObject<OS_os_log>",&,N,V_log
streamWithIdentifier:error:
defaultCategory
source
sharedEventQueue
objectForKeyedSubscript:
isEqualToString:
unsignedIntValue
eventWithData:dataVersion:
sourceForStreamWithIdentifier:
sendEvent:
postEvent:
initWithMachServiceName:
setDelegate:
initWithSuiteName:
initWithService:
addDelegate:queue:
loadSubscriptions
queue
stringForKey:
currentBootSessionUUID
subscriptionDefaults
objectForKey:
isUnlocked
isClassCLocked
loadFromDefaults:
setSubscriptions:
mutableCopy
dictionary
setRemoteDSLIdentifiers:
initializeSinksForRemoteDSLIdentifiers:
subscriptions
deviceUUID
subscriptionsOnDevice:
subscribedDevices
countByEnumeratingWithState:objects:count:
identifiers
bmdsl_deserialize
logMetricsForIdentifier:withLocalDSL:forDevice:uponReboot:
setLocalDSLIdentifiers:
removeObjectForKey:
removeAllIdentifiersOnSubscribingDevice:
saveToDefaults:
localDSLIdentifiers
messageSubscriptionsForDevice:withLocalIdentifiers:
devicesWithDeviceType:
sendIDSMessageAsWaking:toDevices:withContent:
setRebootNotificationDelivered:
rebootNotificationDelivered
setBool:forKey:
boolForKey:
updateSubscriptionsAfterUnlock
runBlockWhenDeviceIsClassCUnlocked:
dictionaryRepresentation
remoteDSLIdentifiers
setObject:forKey:
registerSinkWithIdentifier:withDSL:
count
contextChanged:forSubscriptionWithIdentifier:
setLockedUpdates:
devices
valueForKeyPath:
array
deviceType
uniqueIDOverride
addObject:
isLocallyPaired
isStarting
userSpecificPlaceType
placeType
initWithID:deviceUUID:starting:userSpecificPlaceType:placeType:
initWithIdentifier:targetQueue:
subscribeOn:
state
eventBody
contextSyncLOIFromSemanticLocationEvent:
serialize
numberWithDouble:
dataVersion
numberWithUnsignedInt:
dictionaryWithObjects:forKeys:count:
lockedUpdates
sinkWithCompletion:receiveInput:
bmdsl_serialize
setObject:forKeyedSubscript:
rootStreamIdentifiers
streamPublishers
identifiersForSubscribingDevice:onSubscribedDevice:
cancel
removeAllIdentifiersOnSubscribedDevice:subscribingDevice:
existsWakingIdentifiersOnSubscribedDevice:forSubscribing:
arrayWithObjects:count:
allKeys
removeSubscriptionsForRemoteDevice:
sendLocalSubscriptionToDevice:
boolValue
addWake:forIdentifier:subscribedDevice:subscribingDevice:
bmdslFromMessage:forIdentifier:
subscribeToBiomeWithRemoteDSL:forRemoteIdentifier:
sortedDevicesByWakeForIdentifier:subscribedToDevice:
idsDeviceForDeviceUUID:
wakeStateForIdentifier:onSubscribingDevice:onSubscribedDevice:
wakeState
contextSyncManager
removeIdentifier:subscribedDevice:subscribingDevice:
stringWithFormat:
dictionaryWithObjects:forKeys:
sendMessage:toDestinations:priority:options:identifier:error:
registerRemoteDSLSubscription:withRemoteIdentifier:asWakingCall:forDevices:
unregisterRemoteDSLSubscription:withRemoteIdentifier:forDevices:
identifier
stringForIDSDeviceType:
lastChangedDate
timeIntervalSinceDate:
serverReceivedTime
timeIntervalSinceNow
deviceForFromID:
logMetricsForMessage:andContext:fromDevice:
saveRemoteSubscription:forDevice:
saveObject:forDevice:
setWithArray:
devicesSubscribedToDevice:
containsObject:
setExportedInterface:
setExportedObject:
setValue:forKey:
errorWithDomain:code:userInfo:
registerForUpdates:withIdentifier:shouldWake:forDevices:withError:
unregisterForUpdates:withIdentifier:forDevices:withError:
listener:shouldAcceptNewConnection:
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:linkedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantUpdate:context:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
connection:devicesChanged:
registerForUpdates:withIdentifier:shouldWake:forDevices:withErrorHandler:
unregisterForUpdates:withIdentifier:forDevices:withErrorHandler:
service
setService:
listener
setListener:
setSubscriptionDefaults:
setDeviceUUID:
setQueue:
idsQueue
setIdsQueue:
biomeQueue
setBiomeQueue:
_rebootNotificationDelivered
_service
_listener
_subscriptions
_subscriptionDefaults
_deviceUUID
_queue
_idsQueue
_biomeQueue
_remoteDSLIdentifiers
_localDSLIdentifiers
_lockedUpdates
T@"IDSService",&,N,V_service
T@"NSXPCListener",&,N,V_listener
T@"_ContextSyncSubscriptions",&,N,V_subscriptions
T@"NSUserDefaults",&,N,V_subscriptionDefaults
T@"NSString",&,N,V_deviceUUID
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
T@"NSObject<OS_dispatch_queue>",&,N,V_idsQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_biomeQueue
T@"NSMutableDictionary",&,N,V_remoteDSLIdentifiers
T@"NSMutableDictionary",&,N,V_localDSLIdentifiers
TB,N,V_rebootNotificationDelivered
T@"NSMutableDictionary",&,N,V_lockedUpdates
initialize
setWakeState:
setLastChangedDate:
wakeState:
_wakeState
_lastChangedDate
T@"NSNumber",&,N,V_wakeState
T@"NSDate",&,N,V_lastChangedDate
setDSLtoWakeSubscription:
DSLtoWakeSubscription
existsIdentifier:
wakeSubscription
wakeSubscription:forIdentifier:
wakeStateWithIdentifier:
addIdentifier:withWake:
isIdentifierWaking:
hasWakingIdentifier
lastChangeDateForIdentifier:
removeIdentifier:
_DSLtoWakeSubscription
T@"NSMutableDictionary",&,N,V_DSLtoWakeSubscription
setDeviceToDSLSubscriptions:
deviceToDSLSubscriptions
deviceToDSLSubscription
subscriptionWithDevice:forWakeSubscription:
addWake:forIdentifier:forDevice:
removeIdentifier:forDevice:
removeAllDSLsForDevice:
wakeStateForIdentifier:forDevice:
isIdentifierWaking:forDevice:
hasWakingIdentifierForDevice:
lastChangeDateForIdentifier:forDevice:
_deviceToDSLSubscriptions
T@"NSMutableDictionary",&,N,V_deviceToDSLSubscriptions
setDeviceToDevicesSubscriptions:
setDictionaryRepresentation:
deviceToDevicesSubscriptions
convertToDictionary
deviceSubscribing:withSubscriptons:
devicesSubscribing
isIdentifierWaking:subscribedDevice:subscribingDevice:
lastChangeDateForIdentifier:onSubscribingDevice:onSubscribedDevice:
messageSubscriptionsForDevice:withNewDSL:withLocalIdentifiers:
_deviceToDevicesSubscriptions
_dictionaryRepresentation
T@"NSMutableDictionary",&,N,V_deviceToDevicesSubscriptions
T@"NSMutableDictionary",&,N,V_dictionaryRepresentation
current
policyForProcess:
allowsAccessToContextSyncStreams:
stringWithUTF8String:
archivedDataWithRootObject:requiringSecureCoding:error:
allowed
unarchivedObjectOfClasses:fromData:error:
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v52@0:8@16@24B32q36@?44
v48@0:8@16@24q32@?40
v52@0:8@"BMDSL"16@"NSString"24B32q36@?<v@?B@"NSError">44
v52@0:8@"BMDSL"16@"NSString"24B32q36@?<v@?B>44
v48@0:8@"BMDSL"16@"NSString"24q32@?<v@?B@"NSError">40
v48@0:8@"BMDSL"16@"NSString"24q32@?<v@?B>40
B52@0:8@16@24B32q36^@44
B44@0:8@16@24B32q36
B48@0:8@16@24q32^@40
B40@0:8@16@24q32
B52@0:8@"BMDSL"16@"NSString"24B32q36^@44
B44@0:8@"BMDSL"16@"NSString"24B32q36
B48@0:8@"BMDSL"16@"NSString"24q32^@40
B40@0:8@"BMDSL"16@"NSString"24q32
@24@0:8@16
v24@0:8@16
v16@0:8
@"NSString"
@"NSXPCConnection"
@"NSObject<OS_os_log>"
@24@0:8q16
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v64@0:8@16@24@32@40@48@56
v40@0:8@16@24@32
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v32@0:8@16@24
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v40@0:8@16@24@?32
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32@"IDSMessageContext"40
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
@32@0:8@16@24
B44@0:8@16@24B32@36
B40@0:8@16@24@32
v36@0:8B16@20@28
B52@0:8@16@24B32@36^@44
B48@0:8@16@24@32^@40
v44@0:8@16@24@32B40
v52@0:8@16@24B32@36@?44
v48@0:8@16@24@32@?40
v20@0:8B16
@"IDSService"
@"NSXPCListener"
@"_ContextSyncSubscriptions"
@"NSUserDefaults"
@"NSObject<OS_dispatch_queue>"
@"NSMutableDictionary"
@20@0:8B16
@"NSNumber"
@"NSDate"
@28@0:8B16@20
B28@0:8@16B24
B36@0:8B16@20@28
B44@0:8B16@20@28@36
@40@0:8@16@24@32
v32@0:8^@16q24
B32@0:8@16^@24
@(#)PROGRAM:ContextSync  PROJECT:BiomeSync-1
com.apple.contextsync
com.apple.biome.ContextSync
v16@?0@"NSError"8
v20@?0B8@"NSError"12
v12@?0B8
com.apple.contextsync.subscriptions
lastBootUUID
remoteDSLIdentifiers
localDSLIdentifiers
lockedUpdates
streamIdentifier
event
dataVersion
identifier
com.apple.private.alloy.contextsync
rebootNotificationDelivered
waking
v8@?0
com.apple.contextsync.main
com.apple.contextsync.queue
com.apple.contextsync.idsQueue
com.apple.contextSync.receiverQueue
uniqueIDOverride
v16@?0@"BPSCompletion"8
v16@?0@"BMStoreEvent"8
%@:%@
nonwaking
Desktop
iPhone
iPod
iPad
AppleTV
Watch
Audio
Browser
Unknown
com.apple.ContextSync.contextMetrics
context
subscriberDeviceType
duration
@"NSDictionary"8@?0
com.apple.ContextSync.messageMetrics
latencySeconds
messageType
None
contextIdentifier
messageVersion
Unknown Error
BiomeLibrary
BMContextSyncLOIIdentifier
BMContextSyncLOI
Unable to find class %s
dsls
subscription
dslIdentifiers
type
version
wake
ContextSyncErrorDomain
lastChangeDate
subscriptions
main
Unsupported Stream
Class C Locked
Registration Didn't Change
Lacks Proper Entitlements
No Registration Identifier
kern.bootsessionuuid
Received DSL with shouldWake %@ for devices %@
Context Sync registration error: No Identifier!
%@ Error: %@
Error: %@
Error registering %@
Client unregistered DSL for devices types %@
Error unregistering %@
failed to get stream with identifier %@
Failed to deserialize event
Posted %@
Local device %@
Load Context Sync Subscriptions
Failed to log identifier %@ on device %@: No DSL found
Device has class C unlocked
Rebooted %@, unlocked %@, delivered notifications %@, reloaded subscriptions %@, remote dsl identifiers %@, local dsl identifiers %@
Recreating sink for %@
Class C Unlocked: Notifying stored context changes %@
Class C Unlocked: Sending empty subscription for local device %@
Did not successfully set up sink with identifier: %@
New event: %@
Class C Locked: Stored updates are now %@
New event but not semantic location! %@
Subscribed to Biome with %@, Updated dsl/scheduler to %@, stream identifiers are %@, publishers are %@
Unsubscribing identifier %@ from Biome, stream identifiers were %@
Could not find a dsl for identifier %@
Removed subscriptions for remote %@: %@
Incoming subscription is dropped. This message verson is not supported %@
Error getting DSL for identifier %@
Identifier %@ does not have a wake. Message received %@
Updated subscription from remote %@: %@
Could not find: %@
Updated subscription for local: %@
Couldn't find wake object
Incoming event is dropped. This message verson is not supported %@
Saving object %@ for device %@
Cannot find %@ in device set %@
No destinations for devices %@, with current devices as %@
Failed to send %@: No queue identifier %@ / options
Failed to send: %@ because %@
Sent %@ %@ to devices %@
Registering DSL %@ should wake %@, for devices types %@, which includes %@
Unregistering DSL %@ for device types %@, which includes %@
Unregistering DSL %@ for devices %@
Can't log metrics for device %@: No longer exists
Negative duration: WakeState %@ and subscriptions %@
Logged stream end: %@
Logged new message: %@
Received new message but dropping because could not find device %@
Received new subscription from %@: %@ sent at %@
Received new context: %@
Disconnected subscriber %@
Warning - Client may lost context due to disconnected subscribed device %@
Potential device change: Current device set is %@
Remove DSL %@ for subscribed %@ and subscribing %@: DidChange = %@, Subscription is now %@
Remove all subscriptions on subscribed %@ for subscribing %@: DidChange = %@, Subscription is now %@
Remove all subscriptions for %@: DidChange = %@, Subscription is now %@
Remove all subscriptions for %@: DidChange = %@
Evaluating if DSLs %@ is waking: %@
Did not find DSL %@ waking
Evaluating waking DSLs on subscribed %@ to exist: %@
Load from default error! Defaults: %@, Identifier: %@
Loaded from default %@
Process does not have entitlements for %@
Failed to convert DSL to data because %@
Failed to unarchive DSL %@
softlink:r:path:/System/Library/PrivateFrameworks/BiomeLibrary.framework/BiomeLibrary
ContextSyncManaging
NSObject
ContextSyncClient
ContextSyncClientProtocol
_DASBiomeStream
ContextSyncService
NSXPCListenerDelegate
IDSServiceDelegate
_ContextSyncLogger
_ContextSyncWakeState
_ContextSyncWakeSubscription
_ContextSyncOtherDeviceSubscriptions
_ContextSyncSubscriptions
_ContextSyncDeviceUtilities
SerializeBMDSL
DeserializeBMDSL
valueForKeyPath:
userSpecificPlaceType
unsignedIntValue
uniqueIDOverride
unarchivedObjectOfClasses:fromData:error:
timeIntervalSinceNow
timeIntervalSinceDate:
synchronousRemoteObjectProxyWithErrorHandler:
subscribeOn:
stringWithUTF8String:
stringWithFormat:
stringForKey:
streamWithIdentifier:error:
streamPublishers
state
source
sinkWithCompletion:receiveInput:
setWithArray:
setValue:forKey:
setRemoteObjectInterface:
setObject:forKeyedSubscript:
setObject:forKey:
setExportedObject:
setExportedInterface:
setDelegate:
setBool:forKey:
serverReceivedTime
serialize
sendMessage:toDestinations:priority:options:identifier:error:
sendEvent:
runBlockWhenDeviceIsClassCUnlocked:
rootStreamIdentifiers
resume
removeObjectForKey:
policyForProcess:
placeType
objectForKeyedSubscript:
objectForKey:
numberWithUnsignedInt:
numberWithInteger:
numberWithDouble:
numberWithBool:
mutableCopy
localizedDescription
isUnlocked
isStarting
isLocallyPaired
isEqualToString:
isClassCLocked
interfaceWithProtocol:
initWithSuiteName:
initWithService:
initWithMachServiceName:options:
initWithMachServiceName:
initWithIdentifier:targetQueue:
initWithID:deviceUUID:starting:userSpecificPlaceType:placeType:
identifier
eventWithData:dataVersion:
eventBody
errorWithDomain:code:userInfo:
dictionaryWithObjects:forKeys:count:
dictionaryWithObjects:forKeys:
dictionary
devices
deviceType
deviceForFromID:
dataVersion
current
countByEnumeratingWithState:objects:count:
count
containsObject:
cancel
boolValue
boolForKey:
arrayWithObjects:count:
array
archivedDataWithRootObject:requiringSecureCoding:error:
allowsAccessToContextSyncStreams:
allowed
allKeys
addObject:
UTF8String
addDelegate:queue:
init
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
registerForUpdates:withIdentifier:shouldWake:forDeviceTypes:withErrorHandler:
registerForUpdates:withIdentifier:shouldWake:forDeviceTypes:withHandler:
unregisterForUpdates:withIdentifier:forDeviceTypes:withErrorHandler:
unregisterForUpdates:withIdentifier:forDeviceTypes:withHandler:
registerForUpdates:withIdentifier:shouldWake:forDeviceTypes:withError:
registerForUpdates:withIdentifier:shouldWake:forDeviceTypes:
unregisterForUpdates:withIdentifier:forDeviceTypes:withError:
unregisterForUpdates:withIdentifier:forDeviceTypes:
initWithClientName:
clientName
setClientName:
connection
setConnection:
setLog:
.cxx_destruct
_clientName
_connection
_log
T@"NSString",&,N,V_clientName
T@"NSXPCConnection",&,N,V_connection
T@"NSObject<OS_os_log>",&,N,V_log
sharedEventQueue
sourceForStreamWithIdentifier:
postEvent:
contextSyncManager
stringForIDSDeviceType:
listener:shouldAcceptNewConnection:
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:linkedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantUpdate:context:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
loadSubscriptions
initializeSinksForRemoteDSLIdentifiers:
updateSubscriptionsAfterUnlock
devicesWithDeviceType:
contextSyncLOIFromSemanticLocationEvent:
registerSinkWithIdentifier:withDSL:
subscribeToBiomeWithRemoteDSL:forRemoteIdentifier:
removeSubscriptionsForRemoteDevice:
sendLocalSubscriptionToDevice:
bmdslFromMessage:forIdentifier:
saveRemoteSubscription:forDevice:
contextChanged:forSubscriptionWithIdentifier:
registerRemoteDSLSubscription:withRemoteIdentifier:asWakingCall:forDevices:
unregisterRemoteDSLSubscription:withRemoteIdentifier:forDevices:
saveObject:forDevice:
sendIDSMessageAsWaking:toDevices:withContent:
registerForUpdates:withIdentifier:shouldWake:forDevices:withError:
unregisterForUpdates:withIdentifier:forDevices:withError:
idsDeviceForDeviceUUID:
logMetricsForIdentifier:withLocalDSL:forDevice:uponReboot:
logMetricsForMessage:andContext:fromDevice:
connection:devicesChanged:
registerForUpdates:withIdentifier:shouldWake:forDevices:withErrorHandler:
unregisterForUpdates:withIdentifier:forDevices:withErrorHandler:
service
setService:
listener
setListener:
subscriptions
setSubscriptions:
subscriptionDefaults
setSubscriptionDefaults:
deviceUUID
setDeviceUUID:
queue
setQueue:
idsQueue
setIdsQueue:
biomeQueue
setBiomeQueue:
remoteDSLIdentifiers
setRemoteDSLIdentifiers:
localDSLIdentifiers
setLocalDSLIdentifiers:
rebootNotificationDelivered
setRebootNotificationDelivered:
lockedUpdates
setLockedUpdates:
_rebootNotificationDelivered
_service
_listener
_subscriptions
_subscriptionDefaults
_deviceUUID
_queue
_idsQueue
_biomeQueue
_remoteDSLIdentifiers
_localDSLIdentifiers
_lockedUpdates
T@"IDSService",&,N,V_service
T@"NSXPCListener",&,N,V_listener
T@"_ContextSyncSubscriptions",&,N,V_subscriptions
T@"NSUserDefaults",&,N,V_subscriptionDefaults
T@"NSString",&,N,V_deviceUUID
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
T@"NSObject<OS_dispatch_queue>",&,N,V_idsQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_biomeQueue
T@"NSMutableDictionary",&,N,V_remoteDSLIdentifiers
T@"NSMutableDictionary",&,N,V_localDSLIdentifiers
TB,N,V_rebootNotificationDelivered
T@"NSMutableDictionary",&,N,V_lockedUpdates
initialize
defaultCategory
wakeState:
wakeState
setWakeState:
lastChangedDate
setLastChangedDate:
_wakeState
_lastChangedDate
T@"NSNumber",&,N,V_wakeState
T@"NSDate",&,N,V_lastChangedDate
wakeSubscription
wakeSubscription:forIdentifier:
identifiers
wakeStateWithIdentifier:
addIdentifier:withWake:
isIdentifierWaking:
existsIdentifier:
hasWakingIdentifier
lastChangeDateForIdentifier:
removeIdentifier:
DSLtoWakeSubscription
setDSLtoWakeSubscription:
_DSLtoWakeSubscription
T@"NSMutableDictionary",&,N,V_DSLtoWakeSubscription
deviceToDSLSubscription
subscriptionWithDevice:forWakeSubscription:
subscribedDevices
subscriptionsOnDevice:
addWake:forIdentifier:forDevice:
removeIdentifier:forDevice:
removeAllDSLsForDevice:
wakeStateForIdentifier:forDevice:
isIdentifierWaking:forDevice:
hasWakingIdentifierForDevice:
lastChangeDateForIdentifier:forDevice:
deviceToDSLSubscriptions
setDeviceToDSLSubscriptions:
_deviceToDSLSubscriptions
T@"NSMutableDictionary",&,N,V_deviceToDSLSubscriptions
deviceToDevicesSubscriptions
deviceSubscribing:withSubscriptons:
loadFromDefaults:
dictionaryRepresentation
devicesSubscribing
devicesSubscribedToDevice:
addWake:forIdentifier:subscribedDevice:subscribingDevice:
removeIdentifier:subscribedDevice:subscribingDevice:
removeAllIdentifiersOnSubscribedDevice:subscribingDevice:
removeAllIdentifiersOnSubscribingDevice:
sortedDevicesByWakeForIdentifier:subscribedToDevice:
wakeStateForIdentifier:onSubscribingDevice:onSubscribedDevice:
isIdentifierWaking:subscribedDevice:subscribingDevice:
existsWakingIdentifiersOnSubscribedDevice:forSubscribing:
lastChangeDateForIdentifier:onSubscribingDevice:onSubscribedDevice:
convertToDictionary
saveToDefaults:
identifiersForSubscribingDevice:onSubscribedDevice:
messageSubscriptionsForDevice:withNewDSL:withLocalIdentifiers:
messageSubscriptionsForDevice:withLocalIdentifiers:
setDeviceToDevicesSubscriptions:
setDictionaryRepresentation:
_deviceToDevicesSubscriptions
_dictionaryRepresentation
T@"NSMutableDictionary",&,N,V_deviceToDevicesSubscriptions
T@"NSMutableDictionary",&,N,V_dictionaryRepresentation
updateDescriptionForError:withErrorCode:
isSupportEnabledForBMDSL:withError:
currentBootSessionUUID
bmdsl_serialize
bmdsl_deserialize
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v52@0:8@16@24B32q36@?44
v48@0:8@16@24q32@?40
v52@0:8@"BMDSL"16@"NSString"24B32q36@?<v@?B@"NSError">44
v52@0:8@"BMDSL"16@"NSString"24B32q36@?<v@?B>44
v48@0:8@"BMDSL"16@"NSString"24q32@?<v@?B@"NSError">40
v48@0:8@"BMDSL"16@"NSString"24q32@?<v@?B>40
B52@0:8@16@24B32q36^@44
B44@0:8@16@24B32q36
B48@0:8@16@24q32^@40
B40@0:8@16@24q32
B52@0:8@"BMDSL"16@"NSString"24B32q36^@44
B44@0:8@"BMDSL"16@"NSString"24B32q36
B48@0:8@"BMDSL"16@"NSString"24q32^@40
B40@0:8@"BMDSL"16@"NSString"24q32
@24@0:8@16
v24@0:8@16
v16@0:8
@"NSString"
@"NSXPCConnection"
@"NSObject<OS_os_log>"
@24@0:8q16
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v64@0:8@16@24@32@40@48@56
v40@0:8@16@24@32
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v32@0:8@16@24
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v40@0:8@16@24@?32
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32@"IDSMessageContext"40
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
@32@0:8@16@24
B44@0:8@16@24B32@36
B40@0:8@16@24@32
v36@0:8B16@20@28
B52@0:8@16@24B32@36^@44
B48@0:8@16@24@32^@40
v44@0:8@16@24@32B40
v52@0:8@16@24B32@36@?44
v48@0:8@16@24@32@?40
v20@0:8B16
@"IDSService"
@"NSXPCListener"
@"_ContextSyncSubscriptions"
@"NSUserDefaults"
@"NSObject<OS_dispatch_queue>"
@"NSMutableDictionary"
@20@0:8B16
@"NSNumber"
@"NSDate"
@28@0:8B16@20
B28@0:8@16B24
B36@0:8B16@20@28
B44@0:8B16@20@28@36
@40@0:8@16@24@32
v32@0:8^@16q24
B32@0:8@16^@24
