NEKDatabaseChangedExternallyNotification
NEKChangeLogWasPurged
NEKDefaultCalendarChanged
<NEKICSWrapperMetadata (%p): 
  entityType: %d
  identifier: %@
  externalID: %@
  selfAttendeeEmail: %@
  selfAttendeeUUID: %@
  selfOrganizerEmail: %@
  selfOrganizerUUID: %@
  attendeeStatus: %d
  invitationStatus: %d
  properInvitationStatus: %d
  hasProperInvitationStatus: %d
  locationPredictionState: %d
  dateChanged: %d
  timeChanged: %d
  titleChanged: %d
  locationChanged: %d
  attendeeComment: %d
  attendeeStatusFlag: %d
  startDate: %@
entityType
TQ,N,V_entityType
selfAttendeeEmail
T@"NSString",&,N,V_selfAttendeeEmail
selfAttendeeUUID
T@"NSString",&,N,V_selfAttendeeUUID
selfOrganizerEmail
T@"NSString",&,N,V_selfOrganizerEmail
selfOrganizerUUID
T@"NSString",&,N,V_selfOrganizerUUID
attendeeStatus
Tq,N,V_attendeeStatus
invitationStatus
TQ,N,V_invitationStatus
properInvitationStatus
TQ,N,V_properInvitationStatus
hasProperInvitationStatus
TB,N,V_hasProperInvitationStatus
identifier
T@"NSString",C,N,V_identifier
dateChanged
TB,N,V_dateChanged
timeChanged
TB,N,V_timeChanged
titleChanged
TB,N,V_titleChanged
locationChanged
TB,N,V_locationChanged
attendeeComment
TB,N,V_attendeeComment
attendeeStatusFlag
TB,N,V_attendeeStatusFlag
startDate
T@"NSDate",&,N,V_startDate
externalID
T@"NSString",C,N,V_externalID
locationPredictionState
Tq,N,V_locationPredictionState
<%@ %p; identifier=%@; calendarIdentifier=%@; oldCalendarIdentifier=%@; title='%@'>
<%@ %p; identifier=%@; calendarIdentifier=%@; oldCalendarIdentifier=%@>
<%@ %p, calendarIdentifier = %@; oldCalendarIdentifier = %@; count = %@>
hash
superclass
description
T@"NSString",R,C
objectIdentifier
T@"NSString",R,N
sequencer
changeType
Tq,R,N
properties
T@"NSMutableDictionary",&,N,V_properties
calendarItemCount
Tq,N,V_calendarItemCount
syncId
T@"NSString",C,N,V_syncId
ICSData
T@"NSData",&,N
calendarIdentifier
T@"NEKCalendarID",&,N,V_calendarIdentifier
oldCalendarIdentifier
T@"NSString",&,N,V_oldCalendarIdentifier
oldIdentifier
T@"NSString",&,N,V_oldIdentifier
nuevoIdentifier
T@"NSString",&,N,V_nuevoIdentifier
title
T@"NSString",R,N,V_title
taskCompleted
TB,N,GisTaskCompleted,V_taskCompleted
taskCompletionDate
Td,N,V_taskCompletionDate
displayOrder
Tq,N,V_displayOrder
isReminderWithLocation
TB,N,V_isReminderWithLocation
startDateMap
T@"NSDictionary",&,N,V_startDateMap
%@.mean
%@.variance
%@.failureTimeout
name
T@"NSString",&,N,V_name
environment
T@"NEKEnvironment",W,N,V_environment
firstTimeEver
TB,N,V_firstTimeEver
variance
Td,N,V_variance
failTimeout
Td,N,V_failTimeout
mean
Td,N,V_mean
stddev
Td,N
alpha
Td,N,V_alpha
failureScaling
Td,N,V_failureScaling
sigmaSpan
Td,N,V_sigmaSpan
minTimeout
Td,N,V_minTimeout
maxTimeout
Td,N,V_maxTimeout
GARBAGE:%@
v16@?0@"NSError"8
dbFileManager
T@"NEKDatabaseFileManager",R,N
tinyStore
T@"NEKTinyStore",R,N
recordMap
T@"NEKRecordMap",R,N
seenMap
T@"NEKSeenMap",R,N
syncCoordinator
T@"NEKSyncCoordinator",R,N
syncController
T@"NEKSyncController",&,N
daemon
T@"NEKDaemon",&,N,V_daemon
isReminderKitEnabled
TB,R,N
<%@ %p, source = %@, calendarIdentifier = %@>
T@"NSString",&,N,V_calendarIdentifier
storeIdentifier
T@"NEKSourceID",R,N,V_storeIdentifier
attributes
T@"NEKCalendarAttributes",R,N,V_attributes
isDefaultTaskCalendar
TB,N,V_isDefaultTaskCalendar
isDefaultEventCalendar
TB,N,V_isDefaultEventCalendar
watch.eventsync
com.apple.eventkitsync
%@ %@
persistentID
isLocalStore
hasPersistentID
T@"NSString",&,N,V_persistentID
hasIsLocalStore
TB,N
TB,N,V_isLocalStore
+[NEKSourceID(Reminder) accountForStore:identifier:]
com.apple.ndt.stmt.begin
com.apple.ndt.stmt.commit
com.apple.ndt.stmt.rollback
/tmp/pleasePassAPath
NDTSQFile.%@
%04d%02d%02d-%02d%02d%02d
:memory:
mobile
NDTSQOpenDatabase
Cannot open database for writing
pragma journal_mode=wal
_SQ_Versions
SQLExecuteError
Error in executing SQL
i8@?0
NDTSQExecuteSql
Error parsing or executing SQL in executeSql:
NDTSQParse
Error parsing SQL in parseSql:andExecute:
Error executing SQL in parseSql:andExecute:
BEGIN
COMMIT
ROLLBACK
Error parsing SQL in parseMultipleSql:andExecute:
Error executing SQL in parseMultipleSql:andExecute:
T^{sqlite3=},N,V_db
pathTemplate
T@"NSString",&,N,V_pathTemplate
path
delegate
T@"<NDTSQFileDelegate>",W,N,V_delegate
NDTTimedCache
timer
T@"NSObject<OS_dispatch_source>",&,N,V_timer
queue
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
expiration
Td,N,V_expiration
action
T@?,C,N,V_action
usedRecently
TB,N,V_usedRecently
sourceIdentifier
hasSourceIdentifier
T@"NEKPBSourceID",&,N,V_sourceIdentifier
hasCalendarIdentifier
hasAttributes
T@"NEKPBCalendarAttributes",&,N,V_attributes
hasIsDefaultTaskCalendar
hasIsDefaultEventCalendar
hasOldCalendarIdentifier
changeObserver
T@"<NEKChangeObserver>",&,N,V_changeObserver
UUID
isReadonly
isHidden
isImmutable
isInbox
isNotificationsCollection
isSharingInvitation
isSubscribed
isHolidayCalendar
isFamilyCalendar
isIgnoringEventAlerts
isIgnoringSharedCalendarNotifications
isSchedulingProhibited
isDefaultCalendarForStore
type
digest
symbolicColorName
colorString
sharingStatus
sharedOwnerName
sharedOwnerAddress
sharingInvitationResponse
publishedURLString
canBePublished
canBeShared
isPublished
externalIdentificationTag
syncToken
externalModificationTag
externalRepresentation
supportedEntityTypes
hasBeenAlerted
notes
subCalAccountID
pushKey
selfIdentityDisplayName
selfIdentityEmail
selfIdentityAddressString
selfIdentityFirstName
selfIdentityLastName
ownerIdentityDisplayName
ownerIdentityEmail
ownerIdentityAddressString
ownerIdentityFirstName
ownerIdentityLastName
hasUUID
uUID
T@"NSString",&,N,V_uUID
hasTitle
T@"NSString",&,N,V_title
hasIsReadonly
TB,N,V_isReadonly
hasIsHidden
TB,N,V_isHidden
hasIsImmutable
TB,N,V_isImmutable
hasIsInbox
TB,N,V_isInbox
hasIsNotificationsCollection
TB,N,V_isNotificationsCollection
hasIsSharingInvitation
TB,N,V_isSharingInvitation
hasIsSubscribed
TB,N,V_isSubscribed
hasIsHolidayCalendar
TB,N,V_isHolidayCalendar
hasIsFamilyCalendar
TB,N,V_isFamilyCalendar
hasIsIgnoringEventAlerts
TB,N,V_isIgnoringEventAlerts
hasIsIgnoringSharedCalendarNotifications
TB,N,V_isIgnoringSharedCalendarNotifications
hasIsSchedulingProhibited
TB,N,V_isSchedulingProhibited
hasIsDefaultCalendarForStore
TB,N,V_isDefaultCalendarForStore
hasType
T@"NSString",&,N,V_type
hasDigest
T@"NSData",&,N,V_digest
hasSymbolicColorName
T@"NSString",&,N,V_symbolicColorName
hasColorString
T@"NSString",&,N,V_colorString
hasDisplayOrder
Ti,N,V_displayOrder
hasSharingStatus
TQ,N,V_sharingStatus
hasSharedOwnerName
T@"NSString",&,N,V_sharedOwnerName
hasSharedOwnerAddress
T@"NSString",&,N,V_sharedOwnerAddress
hasSharingInvitationResponse
TQ,N,V_sharingInvitationResponse
hasPublishedURLString
T@"NSString",&,N,V_publishedURLString
hasCanBePublished
TB,N,V_canBePublished
hasCanBeShared
TB,N,V_canBeShared
hasIsPublished
TB,N,V_isPublished
hasExternalID
T@"NSString",&,N,V_externalID
hasExternalIdentificationTag
T@"NSString",&,N,V_externalIdentificationTag
hasSyncToken
T@"NSString",&,N,V_syncToken
hasExternalModificationTag
T@"NSString",&,N,V_externalModificationTag
hasExternalRepresentation
T@"NSData",&,N,V_externalRepresentation
hasSupportedEntityTypes
TQ,N,V_supportedEntityTypes
hasInvitationStatus
hasHasBeenAlerted
TB,N,V_hasBeenAlerted
hasNotes
T@"NSString",&,N,V_notes
hasSubCalAccountID
T@"NSString",&,N,V_subCalAccountID
hasPushKey
T@"NSString",&,N,V_pushKey
hasSelfIdentityDisplayName
T@"NSString",&,N,V_selfIdentityDisplayName
hasSelfIdentityEmail
T@"NSString",&,N,V_selfIdentityEmail
hasSelfIdentityAddressString
T@"NSString",&,N,V_selfIdentityAddressString
hasSelfIdentityFirstName
T@"NSString",&,N,V_selfIdentityFirstName
hasSelfIdentityLastName
T@"NSString",&,N,V_selfIdentityLastName
hasOwnerIdentityDisplayName
T@"NSString",&,N,V_ownerIdentityDisplayName
hasOwnerIdentityEmail
T@"NSString",&,N,V_ownerIdentityEmail
hasOwnerIdentityAddressString
T@"NSString",&,N,V_ownerIdentityAddressString
hasOwnerIdentityFirstName
T@"NSString",&,N,V_ownerIdentityFirstName
hasOwnerIdentityLastName
T@"NSString",&,N,V_ownerIdentityLastName
TinyStore
tinyStore.sqlitedb
tinyStore.plist
com.apple.eventkitsync.changeobserver.sequencenumber
FaultCount
RetryMustBeReset
heardFromPhone
MigrationSyncCount
eventCalendarId
taskCalendarId
windowEnd
windowStart
deltaSync.failureTimeout
deltaSync.mean
deltaSync.variance
resetSync.failureTimeout
resetSync.mean
resetSync.variance
nightlySync.failureTimeout
nightlySync.mean
nightlySync.variance
msgType
data
T@"NSData",&,N,V_data
T@"NSString",&,N,V_path
T@"NSString",&,N,V_msgType
responseIdentifier
T@"NSString",&,N,V_responseIdentifier
NDTMessaging
-[NDTMessaging sendMessage:responseHandler:completion:]
v8@?0
-[NDTMessaging reply:to:completion:]
-[NDTMessaging service:account:incomingData:fromID:context:]
-[NDTMessaging service:account:incomingResourceAtURL:metadata:fromID:context:]
TQ,R
T#,R
debugDescription
idsOptions
T@"NSDictionary",&,N,V_idsOptions
/tmp/verifier_data.XXXXXX
%s/%@
com.apple.watch.eventkitsync.validation
cvEnabledPrivate
com.apple.Bridge.CalendarSyncDebug
cvAlertEnabled
yyyyMMdd/HHmm
<%@:%p start:%@ end:%@ masterCount:%d occurrenceCount:%d>
Calendar validation failure. Please file a radar against "Pepper EventKitSync"
Sync validation failure
start
T@"NSDate",&,N,V_start
T@"NSDate",&,N,V_end
masterCount
Tq,N,V_masterCount
occurrenceCount
Tq,N,V_occurrenceCount
showAlert
TB,N,V_showAlert
select value from %@ where key = ?
insert or replace into %@ (key, value) values (?, ?)
create table if not exists %@ (key text unique, value text)
NDTSQKeyValueStore:%@
i16@?0@"NDTSQStatement"8
rowID
Tq,N,V_rowID
Tq,N,V_entityType
entityRowID
Tq,N,V_entityRowID
T@"NSString",C,N,V_UUID
SELECT rowId, entityType, entityRowID, UUID FROM record WHERE entityType = ? AND entityRowID = ?;
UPDATE record SET UUID=?, timestamp=? where rowId=?;
INSERT INTO record(entityType, entityRowID, UUID, timestamp) VALUES(?, ?, ?, ?);
DELETE FROM record WHERE entityType = ? AND entityRowID = ?
PRAGMA user_version
PRAGMA user_version = 1
CREATE TABLE IF NOT EXISTS record(rowid INTEGER PRIMARY KEY ASC, entityType INT, entityRowID INT, UUID TEXT, timestamp INT)
CREATE UNIQUE INDEX IF NOT EXISTS entityIndex ON record (entityType, entityRowID)
ALTER TABLE record ADD COLUMN timestamp INT DEFAULT NULL;
CREATE VIEW IF NOT EXISTS record_utc AS SELECT datetime(timestamp, 'unixepoch') stamp, entityType,  entityRowID, uuid FROM record ORDER BY timestamp, entityType, uuid
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/EventKitSync-329/NEKSyncBundle/Models/_NEKRecordMapImpl.m
-[_NEKRecordMapSqliteImpl _beginTransaction]
-[_NEKRecordMapSqliteImpl commit:]
EventKitSync
-[_NEKRecordMapSqliteImpl reset]
-[_NEKRecordMapSqliteImpl removeAllRecords]
DELETE FROM record
SELECT COUNT(*) FROM record
00000000/0000
/System/Library/LaunchDaemons/com.apple.SpringBoard.plist
stores
T@"NSArray",&,N,V_stores
calendars
T@"NSArray",&,N,V_calendars
tasks
T@"NSArray",&,N,V_tasks
events
T@"NSArray",&,N,V_events
com.apple.eventkitsync.nekeventstore
com.apple.eventkitsync.dbidleblocks
com.apple.eventkitsync.pipe
SaveDB
-[NEKEventStore removeAllRecordsInCalendar:]
-[NEKEventStore getDefaultTaskCalendar:defaultEventCalendar:store:]
updateSource:
EKFrozenReminderSource
updateCalendar:
updateICS:
deleteItemWithIdentifier:
-[NEKEventStore deleteItem:store:]
-[NEKEventStore handleNewEntity:withWrapper:session:]
-[NEKEventStore handleUpdatedItemFromGizmo:type:withWrapper:identifier:]
/RID=
%@%@%llu
-[NEKEventStore handleCalendarEventWithUniqueIdentifierFromGizmo:calendar:wrapper:detachedEventMap:]
-[NEKEventStore handleCalendarTaskWithUniqueIdentifierFromGizmo:calendar:wrapper:]
-[NEKEventStore performUpdateWithICSWrappers:store:session:]_block_invoke
v16@?0@"NSString"8
-[NEKEventStore performUpdateWithICSWrappers:store:session:]
-[NEKEventStore _deleteCalendarItemsInICSWrapperFromOldCalendar:store:]_block_invoke
-[NEKEventStore _deleteCalendarItemsMovedToCalendar:inICSWrapper:]_block_invoke
v28@?0@"EKObjectID"8i16^B20
-[NEKEventStore ICSWrappersForChangeSet:pipe:]_block_invoke
%@%@%@
-[NEKEventStore _createCalendarForWrapper:store:]
com.apple.eventkitsync.recievedpairedsyncstart
com.apple.eventkitsync.recievedreunionsyncstart
com.apple.pairedsync.eventkitsync
internal_ignorePairedSync
com.apple.EventKitSync
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/EventKitSync-329/NEKSyncBundle/Models/NEKSyncCoordinator.m
-[NEKSyncCoordinator syncCoordinator:beginSyncSession:]
-[NEKSyncCoordinator syncCoordinator:didInvalidateSyncSession:]
None
LimitPush
T@"PSYSyncCoordinator",&,N,V_syncCoordinator
hasDeferredChanges
TB,N,V_hasDeferredChanges
session
T@"PSYServiceSyncSession",&,N,V_session
endDate
hasStartDate
Td,N,V_startDate
hasEndDate
Td,N,V_endDate
hasMasterCount
TQ,N,V_masterCount
hasOccurrenceCount
TQ,N,V_occurrenceCount
hasShowAlert
com.apple.NanoCalendar.PrefSync.PrefMigrationSeed
com.apple.mobilecal
InviteeDeclineAlerts-rebroadcast
ShowDeclinedEvents-rebroadcast
enableTravelAdvisoriesForAutomaticBehavior
com.apple.calendar.database.preference.notification.enableTravelAdvisoriesForAutomaticBehavior
com.apple.NanoCalendar
preferences_observer
LastDeselectedCalendarSyncHashes
LastDeselectedCalendarSyncIdentifiers
ViewedTimeZoneAutomatic
ViewedTimeZone
ViewedTimeZoneChosen
TimeZoneCityArray
kCalTimeZonePrefChangedDistributedNotification
overlayCalendarID
CalEventDeclineEventPrefChangedRebroadcast
CalEventShowInviteeDeclinesPrefChangedRebroadcast
CalEventDeclineEventPrefChanged
CalEventShowInviteeDeclinesPrefChanged
v32@?0@"NSString"8@"NSSet"16^B24
backchannel
com.apple.private.alloy.eventkitmutation
setRemCom
v16@?0@"NDTMessage"8
setParStt
setAlmSno
deleEvent
internal_disablePhoneMutator
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/EventKitSync-329/NEKSyncBundle/Models/NEKRPCEndpoint.m
-[NEKRPCEndpoint _recvSetEventKitReminderCompletedEndpoint:]
-[NEKRPCEndpoint _recvSetReminderKitReminderCompletedEndpoint:]
-[NEKRPCEndpoint _recvDeleteEventEndpoint:]
v24@?0@"EKEvent"8^B16
v16@?0@"NSArray"8
<%@ %p; type=%@; identifier=%@; calendarIdentifier=%@>
Calendar
Event
Reminder
Source
phone
com.apple.eventkitsyncd.daemon
com.apple.eventkitsyncd.notifications
com.apple.notifyd.matching
HandleNotifications
_CalDatabaseChangedNotification
com.apple.reminderkit.storeChanged
EventKitSyncTesting
com.apple.eventkitsync.force
com.apple.datamigrator.migrationDidFinish
SignificantTimeChangeNotification
CalDatabaseIdleChangeTrackingClientWasPurgedNotification
CalDefaultCalendarChangedNotification
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.nanodaemontoolkit
[VOID]
(nil)
>%08x<
com.apple.logging.obfuscation
obfuscate
B24@?0@"NSString"8@"NSString"16
B24@?0@"NSNumber"8@"NSNumber"16
@"NSString"12@?0B8
isFacebook
v32@?0@"EKObjectID"8Q16^B24
@?<v@?@"EKObjectID"Q^B>16@?0@?<v@?@"NSString"@"EKSource"Q^B>8
v32@?0@"REMObjectID"8Q16^B24
@?<v@?@"REMObjectID"Q^B>16@?0@?<v@?@"NSString"@"EKSource"Q^B>8
v40@?0@"NSString"8@"EKSource"16Q24^B32
insertedOrUpdatedSources
T@"NSSet",R,N,V_insertedOrUpdatedSources
deletedSourcesIDs
T@"NSSet",R,N,V_deletedSourcesIDs
testWindowStart
testWindowEnd
16A0
spanStart
Td,N,V_spanStart
spanEnd
Td,N,V_spanEnd
taskCutoff
Td,N,V_taskCutoff
timeZone
T@"NSTimeZone",N,V_timeZone
T@"NSDate",&,N,V_endDate
taskCutoffDate
T@"NSDate",&,N,V_taskCutoffDate
syncWindow
RecordMap.db
com.apple.eventkitsync.recordmap
isComplete
calendarName
reminderTitle
externalIdentifier
hasIsComplete
TB,N,V_isComplete
hasCalendarName
T@"NSString",&,N,V_calendarName
hasReminderTitle
T@"NSString",&,N,V_reminderTitle
hasExternalIdentifier
T@"NSString",&,N,V_externalIdentifier
>>LOCAL<<
Default local calendar
UUID: %@
<%@ %p; %@>
T@"NSString",R,N,V_identifier
isDefaultLocalCalendar
TB,R,N,V_isDefaultLocalCalendar
defaultAlarmOffset
isEnabled
usesSelfAttendee
constraintsDescriptionPath
creatorBundleID
creatorCodeSigningIdentity
accountPersistentID
supportsSharedCalendars
allowsTasks
allowsEvents
allowsCalendarAddDeleteModify
onlyCreatorCanModify
snoozeAlarmRequiresDetach
supportsAlarmAcknowledgedDate
hasName
hasDefaultAlarmOffset
TI,N,V_defaultAlarmOffset
TI,N,V_type
hasIsEnabled
TB,N,V_isEnabled
hasIsFacebook
TB,N,V_isFacebook
hasUsesSelfAttendee
TB,N,V_usesSelfAttendee
hasConstraintsDescriptionPath
T@"NSString",&,N,V_constraintsDescriptionPath
hasCreatorBundleID
T@"NSString",&,N,V_creatorBundleID
hasCreatorCodeSigningIdentity
T@"NSString",&,N,V_creatorCodeSigningIdentity
hasAccountPersistentID
T@"NSString",&,N,V_accountPersistentID
hasSupportsSharedCalendars
TB,N,V_supportsSharedCalendars
hasAllowsTasks
TB,N,V_allowsTasks
hasAllowsEvents
TB,N,V_allowsEvents
hasAllowsCalendarAddDeleteModify
TB,N,V_allowsCalendarAddDeleteModify
hasOnlyCreatorCanModify
TB,N,V_onlyCreatorCanModify
hasSnoozeAlarmRequiresDetach
TB,N,V_snoozeAlarmRequiresDetach
hasSupportsAlarmAcknowledgedDate
TB,N,V_supportsAlarmAcknowledgedDate
com.apple.eventkitsync.progressliar
-[NEKProgressLiar _doneForRealNotifyingPairedSync:]
com.apple.eventkitsync.statusreporter
listener
T@"NSXPCListener",&,N,V_listener
%@;%@;%f
v24@?0@"NSString"8@"NSUUID"16
-[NEKSourceAttributes(Reminder) initWithReminderAccountObjectIDString:]
+[NEKSourceAttributes(Reminder) createAccountWithSaveRequest:withAttributes:]
@"REMAccountChangeItem"8@?0
SQLBindError
Index out of bounds
SQLFetchError
Column out of bounds
parsed
T^{sqlite3_stmt=},N,V_parsed
rawDb
T^{sqlite3=},N,V_rawDb
changeObserver.keyqueue
com.apple.eventkitsync.changeobserver.%@
T@"<NEKChangeObserverDelegate>",W,N
clientName
T@"<NEKChangeObserverDelegate>",W,N,V_delegate
v20@?0@"NSArray"8i16
B16@?0@"EKObjectID"8
SeenMap.db
com.apple.eventkitsync.seenmap
drop table if exists seen
create table if not exists seendata (uuid TEXT, start_date REAL, end_date REAL, location TEXT, primary key (uuid))
B24@?0^^{sqlite3_stmt}8*16
insert or replace into seendata values ( ?, ?, ?, ?);
select start_date, end_date, location from seendata where uuid = ?;
delete from seendata where uuid = ?;
delete from seendata where end_date < ?;
-[NEKSeenMap didShowInvite:withUUID:]
-[NEKSeenMap deleteInviteByUUID:]
-[NEKSeenMap sweep]
dbFilename
T@"NSString",&,N,V_dbFilename
com.apple.ndt.fifo.common%@
com.apple.ndt.fifo.push%@
com.apple.ndt.fifo.pop%@
B16@?0@8
fifo
T@"NSMutableArray",&,N,V_fifo
length
Tq,N,V_length
pushQ
T@"NSObject<OS_dispatch_queue>",&,N,V_pushQ
popQ
T@"NSObject<OS_dispatch_queue>",&,N,V_popQ
commonQ
T@"NSObject<OS_dispatch_queue>",&,N,V_commonQ
pushQsuspended
TB,N,V_pushQsuspended
popQsuspended
TB,N,V_popQsuspended
finished
TB,N,V_finished
error
T@"NSError",&,N,V_error
NEKSyncController
resetSync
deltaSync
nightlySync
minSessionTimeout
maxSessionTimeout
com.apple.private.alloy.eventkitsync
internal_enableWatchDeletes
maxDeltaRetries
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/EventKitSync-329/NEKSyncBundle/Models/NEKSyncController.m
-[NEKSyncController service:willPreferSession:overSession:]
RetryDueDate
-[NEKSyncController service:startSession:error:]
sending
receiving
delta
Session already in progress.
ResetSyncPipe
NightlySyncPipe
DeltaSyncPipe
internal_enableLongTimeouts
-[NEKSyncController _restartServiceOnVersionUpgrade:]
com.apple.watch.eventkitsync.failuretesting
internal_probabilityOfSyncFailure
internal_retryInterval
com.apple.eventkitsync.retrysync
com.apple.eventkitsync.sessionEnded
-[NEKSyncController service:sessionEnded:error:]
v16@?0@?<v@?>8
 (FAKE)
nightly
reset
T@"<NEKSyncControllerDelegate>",W,N,V_delegate
isCurrentlySyncing
TB,R,N,V_isCurrentlySyncing
eventStore
T@"NEKStore",R,N,V_eventStore
reminderStore
T@"NEKStore",R,N,V_reminderStore
sessionTimeout
sessionPerf
packetNumber
storeWrapper
calendarWrapper
ICSWrapper
deletionWrapper
validationWrapper
setReminderComplete
setParticipantStatus
setAlarmSnooze
deleteEvent
hasPacketNumber
TI,N,V_packetNumber
hasStoreWrapper
T@"NEKPBSourceWrapper",&,N,V_storeWrapper
hasCalendarWrapper
T@"NEKPBCalendarWrapper",&,N,V_calendarWrapper
hasICSWrapper
iCSWrapper
T@"NEKPBICSWrapper",&,N,V_iCSWrapper
hasDeletionWrapper
T@"NEKPBDeletionWrapper",&,N,V_deletionWrapper
hasValidationWrapper
T@"NEKPBValidationWrapper",&,N,V_validationWrapper
hasSetReminderComplete
T@"NEKPBSetReminderComplete",&,N,V_setReminderComplete
hasSetParticipantStatus
T@"NEKPBSetParticipantStatus",&,N,V_setParticipantStatus
hasSetAlarmSnooze
T@"NEKPBSetAlarmSnooze",&,N,V_setAlarmSnooze
hasDeleteEvent
T@"NEKPBDeleteEvent",&,N,V_deleteEvent
<%@ %p; persistentID=%@; type=%@>
T@"NEKSourceAttributes",R,N,V_attributes
Local
Exchange
CalDAV
MobileMe
Subscribed
Birthdays
Unknown
v32@?0@"NSString"8@"NEKPBICSWrapperMetadata"16^B24
v32@?0@"NSString"8Q16^B24
<%@ %p; empty changeset>
<%@ %p; %d inserts; %d updates; %d deletes>
inserts
T@"NSArray",C,N,V_inserts
updates
T@"NSArray",C,N,V_updates
deletes
T@"NSArray",C,N,V_deletes
deletionMap
T@"NSDictionary",&,N,V_deletionMap
moveMap
T@"NSDictionary",&,N,V_moveMap
changeNumber
Tq,N,V_changeNumber
completion
T@?,C,N,V_completion
truncated
TB,N,V_truncated
isEmpty
T@"NSString",C,N,V_title
isHolidyCalendar
TB,N,V_isHolidyCalendar
T@"NSData",C,N,V_digest
T@"NSString",C,N,V_symbolicColorName
T@"NSString",C,N,V_colorString
T@"NSString",C,N,V_sharedOwnerName
T@"NSString",C,N,V_sharedOwnerAddress
publishedURL
T@"NSURL",C,N,V_publishedURL
T@"NSString",C,N,V_externalIdentificationTag
T@"NSString",C,N,V_syncToken
T@"NSString",C,N,V_externalModificationTag
T@"NSData",C,N,V_externalRepresentation
Ti,N,V_supportedEntityTypes
T@"NSString",C,N,V_notes
T@"NSString",C,N,V_subCalAccountID
T@"NSString",C,N,V_pushKey
T@"NSString",C,N,V_selfIdentityDisplayName
T@"NSString",C,N,V_selfIdentityEmail
selfIdentityAddress
T@"NSURL",C,N,V_selfIdentityAddress
T@"NSString",C,N,V_selfIdentityFirstName
T@"NSString",C,N,V_selfIdentityLastName
T@"NSString",C,N,V_ownerIdentityDisplayName
T@"NSString",C,N,V_ownerIdentityEmail
ownerIdentityAddress
T@"NSURL",C,N,V_ownerIdentityAddress
T@"NSString",C,N,V_ownerIdentityFirstName
T@"NSString",C,N,V_ownerIdentityLastName
Local store
persistentID: %@
hasIdentifier
T@"NSString",&,N,V_identifier
hasIsDefaultLocalCalendar
TB,N,V_isDefaultLocalCalendar
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/EventKitSync-329/NEKSyncBundle/Models/NEKResultsFetcher.m
-[NEKResultsFetcher fetchEverythingIntoPipe:]
B16@?0@"EKCalendarItem"8
B16@?0@"REMReminder"8
-[NEKResultsFetcher fetchEverythingIntoPipe:]_block_invoke
-[NEKResultsFetcher fetchNightlyIntoPipe:]
-[NEKResultsFetcher fetchNightlyIntoPipe:]_block_invoke
-[NEKResultsFetcher fetchChangesIntoPipe:]
backgroundThread
T@"NSThread",&,N,V_backgroundThread
eventChangeObserver
T@"NEKEventChangeObserver",&,N,V_eventChangeObserver
reminderChangeObserver
T@"NEKReminderChangeObserver",&,N,V_reminderChangeObserver
nekEventStore
T@"NEKEventStore",&,N,V_nekEventStore
nekReminderStore
T@"NEKReminderStore",&,N,V_nekReminderStore
+[NEKCalendarID(Reminder) listInStore:withNEKCalendarID:]
invitationChangedPropertyFlagDate
invitationChangedPropertyFlagTime
invitationChangedPropertyFlagTitle
invitationChangedPropertyFlagLocation
invitationChangedPropertyFlagAttendeeComment
invitationChangedPropertyFlagAttendeeStatus
hasSelfAttendeeEmail
hasEntityType
hasInvitationChangedPropertyFlagDate
TB,N,V_invitationChangedPropertyFlagDate
hasInvitationChangedPropertyFlagTime
TB,N,V_invitationChangedPropertyFlagTime
hasInvitationChangedPropertyFlagTitle
TB,N,V_invitationChangedPropertyFlagTitle
hasInvitationChangedPropertyFlagLocation
TB,N,V_invitationChangedPropertyFlagLocation
hasInvitationChangedPropertyFlagAttendeeComment
TB,N,V_invitationChangedPropertyFlagAttendeeComment
hasInvitationChangedPropertyFlagAttendeeStatus
TB,N,V_invitationChangedPropertyFlagAttendeeStatus
hasSelfAttendeeUUID
hasSelfOrganizerEmail
hasSelfOrganizerUUID
hasAttendeeStatus
TQ,N,V_attendeeStatus
hasLocationPredictionState
TQ,N,V_locationPredictionState
+[NEKCalendarAttributes(Reminder) createListInAccount:withSaveRequest:withAttributes:]
@"REMListChangeItem"8@?0
B24@?0@"NSObject"8@"NSObject"16
encoding
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/EventKitSync-329/NEKSyncBundle/Models/NEKSyncSession.m
-[NEKSyncSession init]
internal_disableSync
changeSupplier
T@"NEKResultsPipe",&,N,V_changeSupplier
progressLiar
T@"NEKProgressLiar",&,N,V_progressLiar
changeCount
Tq,N,V_changeCount
Td,N,V_start
syncKind
T@"NSString",&,N,V_syncKind
T@"NEKEnvironment",&,N,V_environment
statsTracker
T@"NEKStatTracker",&,N,V_statsTracker
perfomanceTracker
T@"NDTPerf",&,N,V_perfomanceTracker
validationObject
T@"NEKValidationWrapper",&,N,V_validationObject
<%@:%p cpu=%lld, wall=%lld, dmem=%lld>
wallTime
Tq,N,V_wallTime
cpuTime
Tq,N,V_cpuTime
dirtyMemory
Tq,N,V_dirtyMemory
snoozeAmount
alarmIdentifier
itemIdentifier
hasSnoozeAmount
Td,N,V_snoozeAmount
hasAlarmIdentifier
T@"NSString",&,N,V_alarmIdentifier
hasItemIdentifier
T@"NSString",&,N,V_itemIdentifier
hasStoreIdentifier
T@"NSString",&,N,V_storeIdentifier
com.apple.eventkitsync.nekreminderstore
removeAllItems
B24@?0@"REMAccount"8@"NSDictionary"16
B24@?0@"REMList"8@"NSDictionary"16
updateAccount:
-[NEKReminderStore updateSource:store:]_block_invoke
-[NEKReminderStore updateCalendar:store:]_block_invoke
deleteItem:
-[NEKReminderStore handleReminderWithUniqueIdentifierFromGizmo:saveRequest:list:wrapper:]
-[NEKReminderStore performUpdateWithICSWrappers:store:session:]
v32@?0@"NSData"8Q16^B24
v28@?0@"REMObjectID"8i16^B20
-[NEKReminderStore _deleteAccountWithIdentifier:store:]
-[NEKReminderStore _deleteListWithIdentifier:store:]
saveRequests
T@"NSMapTable",&,N,V_saveRequests
-[NEKEventChangeObserver databaseDidChange]
-[NEKEventChangeObserver allSourcesInto:]
-[NEKEventChangeObserver allCalendarsInto:]
-[NEKEventChangeObserver allRemindersInto:filter:window:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/EventKitSync-329/NEKSyncBundle/Models/NEKEventChangeObserver.m
-[NEKEventChangeObserver fetchEventChangeSet]
-[NEKEventChangeObserver _fetchChangesInto:from:inside:]_block_invoke
Inserts: 
Updates: 
Deletes: 
v44@?0B8q12@"NSArray"20@"NSArray"28@"NSArray"36
-[NEKEventChangeObserver previousDefaultTaskCalendar]
-[NEKEventChangeObserver setPreviousDefaultTaskCalendar:]
weakEventDatabaseController
T@"NEKEventStore",W,N,V_weakEventDatabaseController
metadataKeys
metadataValues
syncID
hasICSData
iCSData
T@"NSData",&,N,V_iCSData
T@"NEKPBCalendarIdentifier",&,N,V_calendarIdentifier
hasCalendarItemCount
TI,N,V_calendarItemCount
T@"NSMutableArray",&,N,V_metadataKeys
T@"NSMutableArray",&,N,V_metadataValues
hasSyncID
T@"NSString",&,N,V_syncID
hasTaskCompletionDate
hasOldIdentifier
hasNuevoIdentifier
TQ,N,V_displayOrder
<NEKSourceAttributes (%p)
  name: %@
  defaultAlarmOffset: %@
  type: %d
  isEnabled: %d
  isFacebook: %d
  usesSelfAttendee: %d
  constraintsDescriptionPath: %@
  externalModificationTag: %@
  creatorBundleID: %@
  creatorCodeSigningIdentity: %@
  accountPersistentID: %@
  supportsSharedCalendars: %d
  allowsTasks: %d
  allowsEvents: %d
  allowsCalendarAddModifyDelete: %d
  onlyCreatorCanModify: %d
  snoozeAlarmRequiresDetach: %d
  supportsAlarmAcknowledgedDate: %d
  isLocalStore: %d
T@"NSString",C,N,V_name
T@"NSNumber",&,N,V_defaultAlarmOffset
Tq,N,V_type
T@"NSString",C,N,V_constraintsDescriptionPath
T@"NSString",C,N,V_creatorBundleID
T@"NSString",C,N,V_creatorCodeSigningIdentity
T@"NSString",C,N,V_accountPersistentID
SQLErrString
SQLErrMessage
SQLErrCode
T@"NDTSQFile",&,N,V_db
T@?,R,N
isEffectivelyEmpty
isTruncated
com.apple.eventkitsyncd
reminderListId
-[NEKReminderChangeObserver storeDidChange]
v24@?0@"REMReminder"8^B16
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/EventKitSync-329/NEKSyncBundle/Models/NEKReminderChangeObserver.m
-[NEKReminderChangeObserver fetchReminderChangeSet]
markedForDeletion
v60@?0B8@"NEKReminderChangeTrackingStateMap"12@"NSArray"20@"NSArray"28@"NSArray"36@"NSDictionary"44@"NSDictionary"52
com.apple.eventkitsync.changeobserver.reminderkit.sequencenumber
-[NEKReminderChangeObserver previousDefaultReminderListID]
weakReminderDatabaseController
T@"NEKReminderStore",W,N,V_weakReminderDatabaseController
<%@: %p: %@, %@>
changeTracking
T@"REMChangeTracking",&,N,V_changeTracking
lastChangeToken
T@"REMChangeToken",&,N,V_lastChangeToken
B24@?0@"REMAccount"8@16
B16@?0@"NSArray"8
@"NEKReminderChangeTrackingState"16@?0@"REMAccount"8
list
v32@?0@"REMObjectID"8@"NEKReminderChangeTrackingState"16^B24
<%@: loaded:%@ - active:%@>
REMNSPersistentHistoryToken
_REMChangeUniversalToken
loadedChangeTokenMap
supportsSecureCoding
TB,R
hasChangeTrackingTokens
deletedAccountIDsFromLoadedMap
T@"NSSet",R,V_deletedAccountIDsFromLoadedMap
eventIdentifier
eventTitle
eventStart
calendarTitle
span
hasEventIdentifier
T@"NSString",&,N,V_eventIdentifier
hasEventTitle
T@"NSString",&,N,V_eventTitle
hasEventStart
Td,N,V_eventStart
hasCalendarTitle
T@"NSString",&,N,V_calendarTitle
hasSpan
TI,N,V_span
xpc_activity
runTransaction
T@"NSObject<OS_os_transaction>",&,N,V_runTransaction
activityCondition
T@"NSCondition",&,N,V_activityCondition
activity
T@"NSObject<OS_xpc_object>",&,N,V_activity
estimatedFireDate
T@"NSDate",&,N,V_estimatedFireDate
T@"NSObject<OS_os_log>",&,N,V_log
lastFired
T@"NSDate",&,N,V_lastFired
T@"<NDTActiviityDelegate>",W,N,V_delegate
inActivity
CHECK_IN
WAIT
DEFER
CONTINUE
DONE
OUT_OF_BOUNDS
hasSyncId
T@"NSString",&,N,V_syncId
status
hasStatus
TI,N,V_status
T@"NEKPBSourceAttributes",&,N,V_attributes
333333
stringWithFormat:
appendFormat:
appendString:
copy
description
.cxx_destruct
entityType
setEntityType:
selfAttendeeEmail
setSelfAttendeeEmail:
selfAttendeeUUID
setSelfAttendeeUUID:
selfOrganizerEmail
setSelfOrganizerEmail:
selfOrganizerUUID
setSelfOrganizerUUID:
attendeeStatus
setAttendeeStatus:
invitationStatus
setInvitationStatus:
properInvitationStatus
setProperInvitationStatus:
hasProperInvitationStatus
setHasProperInvitationStatus:
identifier
setIdentifier:
dateChanged
setDateChanged:
timeChanged
setTimeChanged:
titleChanged
setTitleChanged:
locationChanged
setLocationChanged:
attendeeComment
setAttendeeComment:
attendeeStatusFlag
setAttendeeStatusFlag:
startDate
setStartDate:
externalID
setExternalID:
locationPredictionState
setLocationPredictionState:
_hasProperInvitationStatus
_dateChanged
_timeChanged
_titleChanged
_locationChanged
_attendeeComment
_attendeeStatusFlag
_entityType
_selfAttendeeEmail
_selfAttendeeUUID
_selfOrganizerEmail
_selfOrganizerUUID
_attendeeStatus
_invitationStatus
_properInvitationStatus
_identifier
_startDate
_externalID
_locationPredictionState
properties
allValues
init
UUID
UUIDString
NEKFluff
length
NEKSqueeze
eks_garbageUUID
objectForKey:
setObject:forKey:
objectForKeyedSubscript:
count
initWithCapacity:
countByEnumeratingWithState:objects:count:
settablePropertiesForCalendarItemIdentifier:
propertiesForCalendarItemIdentifier:
numberWithUnsignedInteger:
numberWithInteger:
keyEnumerator
title
oldCalendarIdentifier
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
objectIdentifier
sequencer
changeType
ICSWrapperMetadata
ICSData
setICSData:
hasPropertiesForIdentifier:
setMetadata:forCalendarItemIdentifier:
startDateMap
setDateChanged:forIdentifier:
dateChangedForIdentifier:
setTimeChanged:forIdentifier:
timeChangedForIdentifier:
setTitleChanged:forIdentifier:
titleChangedForIdentifier:
setLocationChanged:forIdentifier:
locationChangedForIdentifier:
setAttendeeComment:forIdentifier:
attendeeCommentForIdentifier:
setSelfAttendeeEmail:forIdentifier:
selfAttendeeEmailForIdentifier:
setSelfAttendeeUUID:forIdentifier:
selfAttendeeUUIDForIdentifier:
setSelfOrganizerEmail:forIdentifier:
selfOrganizerEmailForIdentifier:
setSelfOrganizerUUID:forIdentifier:
selfOrganizerUUIDForIdentifier:
setInvitationStatus:forIdentifier:
invitationStatusForIdentifier:
setProperInvitationStatus:forIdentifier:
properInvitationStatusForIdentifier:
setLocationPredictionState:forIdentifier:
locationPredictionStateForIdentifier:
setAttendeeStatus:forIdentifier:
attendeeStatusForIdentifier:
setAttendeeStatusFlag:forIdentifier:
attendeeStatusFlagForIdentifier:
setExternalID:forIdentifier:
externalIDForIdentifier:
setStartDate:forIdentifier:
startDateForIdentifier:
enumerateCalendarItemIdentifiersUsingBlock:
entityTypeForCalendarItemWithIdentifier:
objectTypeForCalendarItemWithIdentifier:
calendarIdentifier
setCalendarIdentifier:
setOldCalendarIdentifier:
oldIdentifier
setOldIdentifier:
nuevoIdentifier
setNuevoIdentifier:
calendarItemCount
setCalendarItemCount:
isTaskCompleted
setTaskCompleted:
taskCompletionDate
setTaskCompletionDate:
displayOrder
setDisplayOrder:
isReminderWithLocation
setIsReminderWithLocation:
setStartDateMap:
setProperties:
syncId
setSyncId:
_zICSData
_rICSData
_title
_taskCompleted
_isReminderWithLocation
_calendarIdentifier
_oldCalendarIdentifier
_oldIdentifier
_nuevoIdentifier
_calendarItemCount
_taskCompletionDate
_displayOrder
_startDateMap
_properties
_syncId
initWithExpiration:
setCountLimit:
setName:
setEnvironment:
setMean:
setStddev:
setAlpha:
setFailureScaling:
setSigmaSpan:
setFailTimeout:
setMinTimeout:
setMaxTimeout:
name
environment
tinyStore
getDoubleValueForKey:default:
setFirstTimeEver:
setVariance:
mean
setDoubleValue:forKey:
variance
failTimeout
firstTimeEver
alpha
failureScaling
_clip:
nextTimeout
minTimeout
sigmaSpan
stddev
maxTimeout
initWithEnvironment:name:defaultMean:defaultStddev:
load
save
updateSuccess:
updateFailure
_firstTimeEver
_mean
_alpha
_failureScaling
_sigmaSpan
_minTimeout
_maxTimeout
_name
_environment
_variance
_failTimeout
daCalendarItemUniqueIdentifier
setMode:
fetchAccountsWithError:
type
eks_localAccount
fetchListsWithError:
firstObject
daemonController
syncDebugPerformerWithErrorHandler:
purgeDeletedObjectsWithCompletionHandler:
eks_defaultLocalList
purgeLazyDeletedObjects
eks_storeForSyncing
dbFileManager
initWithDatabaseManager:
initWithEnvironment:
recordMap
lock
wait
unlock
broadcast
isEventKitSyncEnabledForReminderKit
seenMap
syncCoordinator
syncController
setSyncController:
isReminderKitEnabled
daemon
setDaemon:
_lock
_controllerCondition
_syncController
_dbFileManager
_tinyStore
_recordMap
_seenMap
_syncCoordinator
_daemon
initWithSourceIdentifier:attributes:calendarIdentifier:
storeIdentifier
attributes
isDefaultTaskCalendar
setIsDefaultTaskCalendar:
isDefaultEventCalendar
setIsDefaultEventCalendar:
_isDefaultTaskCalendar
_isDefaultEventCalendar
_storeIdentifier
_attributes
alarms
trigger
structuredLocation
list
initWithList:
store
arrayWithObjects:count:
setPropertiesForWrapper:withReminders:oldListIdentifier:sendAllProperties:store:list:
icsTodoFromReminder:exportingOption:
initWithData:encoding:
string
icsDisplayOrder
externalIdentifier
objectID
uuid
isCompleted
completionDate
timeIntervalSinceReferenceDate
eks_debugDesc
setAllPropertiesForReminder:identifier:wrapper:store:list:oldListIdentifier:
setMinimalPropertiesForReminder:identifier:wrapper:
wrapperForReminder:oldListIdentifier:store:
x_calendarserver_access
setX_calendarserver_access:
setComponents:options:
initWithCalendar:
ICSDataWithOptions:
dictionaryRepresentation
dictionary
numberWithBool:
setPersistentID:
allocWithZone:
copyWithZone:
hasPersistentID
setIsLocalStore:
setHasIsLocalStore:
hasIsLocalStore
readFrom:
writeTo:
copyTo:
mergeFrom:
persistentID
isLocalStore
_persistentID
_isLocalStore
_has
initWithSource:
initWithAttributes:
initWithPersistentID:isLocalStore:
initWithUUIDString:
objectIDWithUUID:
fetchAccountWithObjectID:error:
initWithAccount:
accountForStore:identifier:
initWithPath:
path
UTF8String
_bootstrap
date
initWithCalendarIdentifier:
components:fromDate:
year
month
hour
minute
second
stringByReplacingOccurrencesOfString:withString:
_recreatePath
_createParentDirectory
_openDatabase
_prepDatabase
delegate
newFileName:
_newPath
defaultManager
stringByDeletingLastPathComponent
numberWithInt:
dictionaryWithObjects:forKeys:count:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
domain
isEqualToString:
code
_makeErrorDictionary
exceptionWithName:reason:userInfo:
_executeSql:
initWithName:
_addSchema:
setDb:
createTables
instanceName
currentVersion
_instanceVersion:
migrateFrom:
_setInstance:version:
stringWithUTF8String:
_parseSql:andRun:
initWithQueue:
setParsed:
setRawDb:
resetBindCursor
_loadCache:sqlErr:
parsed
_parseMultipleSql:andRun:
setObject:forKeyedSubscript:
allKeys
getIntegerForKey:default:
setInteger:forKey:
cache:willEvictObject:
initWithURL:
addSchema:
executeSql:
parseSql:andRun:
parseMultipleSql:andRun:
setPath:
setDelegate:
pathTemplate
setPathTemplate:
_statementCache
_instanceVersions
_alreadyOnQueue
_path
_delegate
_pathTemplate
usedRecently
setUsedRecently:
timer
setTimer:
callRemoveAllObjects
queue
_tickleTimer
removeAllObjects
expiration
action
setQueue:
setExpiration:
setAction:
_usedRecently
_timer
_queue
_expiration
_action
setSourceIdentifier:
setAttributes:
hasSourceIdentifier
hasCalendarIdentifier
hasAttributes
setHasIsDefaultTaskCalendar:
hasIsDefaultTaskCalendar
setHasIsDefaultEventCalendar:
hasIsDefaultEventCalendar
hasOldCalendarIdentifier
sourceIdentifier
_sourceIdentifier
storeForEventWithEnvironment:
storeForReminderWithEnvironment:
freshEventStore
saveEventStore:
removeAllItems
updateSource:store:
updateCalendar:store:
updateICS:store:session:
deleteItem:store:
changeObserver
setChangeObserver:
_changeObserver
predicateWithBlock:
source
sourceType
isDelegate
calendar
account
targetableDevice
systemBuildVersion
compare:options:range:
eventStore
defaultLocalCalendar
numberWithUnsignedLongLong:
setUUID:
setTitle:
setType:
setDigest:
setSymbolicColorName:
setColorString:
setSharedOwnerName:
setSharedOwnerAddress:
setPublishedURLString:
setExternalIdentificationTag:
setSyncToken:
setExternalModificationTag:
setExternalRepresentation:
setNotes:
setSubCalAccountID:
setPushKey:
setSelfIdentityDisplayName:
setSelfIdentityEmail:
setSelfIdentityAddressString:
setSelfIdentityFirstName:
setSelfIdentityLastName:
setOwnerIdentityDisplayName:
setOwnerIdentityEmail:
setOwnerIdentityAddressString:
setOwnerIdentityFirstName:
setOwnerIdentityLastName:
hasUUID
hasTitle
setIsReadonly:
setHasIsReadonly:
hasIsReadonly
setIsHidden:
setHasIsHidden:
hasIsHidden
setIsImmutable:
setHasIsImmutable:
hasIsImmutable
setIsInbox:
setHasIsInbox:
hasIsInbox
setIsNotificationsCollection:
setHasIsNotificationsCollection:
hasIsNotificationsCollection
setIsSharingInvitation:
setHasIsSharingInvitation:
hasIsSharingInvitation
setIsSubscribed:
setHasIsSubscribed:
hasIsSubscribed
setIsHolidayCalendar:
setHasIsHolidayCalendar:
hasIsHolidayCalendar
setIsFamilyCalendar:
setHasIsFamilyCalendar:
hasIsFamilyCalendar
setIsIgnoringEventAlerts:
setHasIsIgnoringEventAlerts:
hasIsIgnoringEventAlerts
setIsIgnoringSharedCalendarNotifications:
setHasIsIgnoringSharedCalendarNotifications:
hasIsIgnoringSharedCalendarNotifications
setIsSchedulingProhibited:
setHasIsSchedulingProhibited:
hasIsSchedulingProhibited
setIsDefaultCalendarForStore:
setHasIsDefaultCalendarForStore:
hasIsDefaultCalendarForStore
hasType
hasDigest
hasSymbolicColorName
hasColorString
setHasDisplayOrder:
hasDisplayOrder
setSharingStatus:
setHasSharingStatus:
hasSharingStatus
hasSharedOwnerName
hasSharedOwnerAddress
setSharingInvitationResponse:
setHasSharingInvitationResponse:
hasSharingInvitationResponse
hasPublishedURLString
setCanBePublished:
setHasCanBePublished:
hasCanBePublished
setCanBeShared:
setHasCanBeShared:
hasCanBeShared
setIsPublished:
setHasIsPublished:
hasIsPublished
hasExternalID
hasExternalIdentificationTag
hasSyncToken
hasExternalModificationTag
hasExternalRepresentation
setSupportedEntityTypes:
setHasSupportedEntityTypes:
hasSupportedEntityTypes
setHasInvitationStatus:
hasInvitationStatus
setHasBeenAlerted:
setHasHasBeenAlerted:
hasHasBeenAlerted
hasNotes
hasSubCalAccountID
hasPushKey
hasSelfIdentityDisplayName
hasSelfIdentityEmail
hasSelfIdentityAddressString
hasSelfIdentityFirstName
hasSelfIdentityLastName
hasOwnerIdentityDisplayName
hasOwnerIdentityEmail
hasOwnerIdentityAddressString
hasOwnerIdentityFirstName
hasOwnerIdentityLastName
uUID
isReadonly
isHidden
isImmutable
isInbox
isNotificationsCollection
isSharingInvitation
isSubscribed
isHolidayCalendar
isFamilyCalendar
isIgnoringEventAlerts
isIgnoringSharedCalendarNotifications
isSchedulingProhibited
isDefaultCalendarForStore
digest
symbolicColorName
colorString
sharingStatus
sharedOwnerName
sharedOwnerAddress
sharingInvitationResponse
publishedURLString
canBePublished
canBeShared
isPublished
externalIdentificationTag
syncToken
externalModificationTag
externalRepresentation
supportedEntityTypes
hasBeenAlerted
notes
subCalAccountID
pushKey
selfIdentityDisplayName
selfIdentityEmail
selfIdentityAddressString
selfIdentityFirstName
selfIdentityLastName
ownerIdentityDisplayName
ownerIdentityEmail
ownerIdentityAddressString
ownerIdentityFirstName
ownerIdentityLastName
_sharingInvitationResponse
_sharingStatus
_supportedEntityTypes
_colorString
_digest
_externalIdentificationTag
_externalModificationTag
_externalRepresentation
_notes
_ownerIdentityAddressString
_ownerIdentityDisplayName
_ownerIdentityEmail
_ownerIdentityFirstName
_ownerIdentityLastName
_publishedURLString
_pushKey
_selfIdentityAddressString
_selfIdentityDisplayName
_selfIdentityEmail
_selfIdentityFirstName
_selfIdentityLastName
_sharedOwnerAddress
_sharedOwnerName
_subCalAccountID
_symbolicColorName
_syncToken
_type
_uUID
_canBePublished
_canBeShared
_hasBeenAlerted
_isDefaultCalendarForStore
_isFamilyCalendar
_isHidden
_isHolidayCalendar
_isIgnoringEventAlerts
_isIgnoringSharedCalendarNotifications
_isImmutable
_isInbox
_isNotificationsCollection
_isPublished
_isReadonly
_isSchedulingProhibited
_isSharingInvitation
_isSubscribed
syncStateDBPathFor:
_convertIfNeeded:
fileExistsAtPath:
_loadPlistFrom:
_migrateIntegerFrom:key:
_migrateStringFrom:key:
_migrateDoubleFrom:key:
removeItemAtPath:error:
integerValue
setIntegerValue:forKey:
setStringValue:forKey:
doubleValue
setString:forKey:
getStringForKey:default:
setDouble:forKey:
getDoubleForKey:default:
dataWithContentsOfFile:
propertyListWithData:options:format:error:
getStringValueForKey:default:
getIntegerValueForKey:default:
_store
_file
initWithFile:
initWithData:
data
setData:
msgType
setMsgType:
responseIdentifier
setResponseIdentifier:
_data
_msgType
_responseIdentifier
initWithIDSServiceName:logging:
numberWithDouble:
initWithService:
addDelegate:queue:
dataUsingEncoding:
appendBytes:length:
appendData:
getBytes:range:
subdataWithRange:
idsOptions
mutableCopy
_makeWireMessageType:content:
setWithObject:
sendData:toDestinations:priority:options:identifier:error:
fileURLWithPath:
sendResourceAtURL:metadata:toDestinations:priority:options:identifier:error:
_rawSendData:type:responseIdentifier:error:
_rawSendFile:type:responseIdentifier:error:
removeObjectForKey:
_makeMessageFromWireData:
incomingResponseIdentifier
outgoingResponseIdentifier
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:linkedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
initWithIDSServiceName:
registerMessageType:handler:
resume
setPriority:
setCloudFallback:
sendMessage:responseHandler:completion:
reply:to:completion:
setIdsOptions:
_outstanding
_handlers
_service
_priority
_logFacility
_suspended
_cloudFallback
_idsOptions
lastPathComponent
fileSystemRepresentation
setStart:
start
dateByAddingTimeInterval:
setEnd:
_countEvents
dateWithTimeIntervalSinceReferenceDate:
endDate
masterCount
setMasterCount:
occurrenceCount
setOccurrenceCount:
showAlert
setShowAlert:
substringToIndex:
compare:options:
sources
allCalendars
predicateForMasterEventsWithOccurrencesWithStartDate:endDate:inCalendar:
eventObjectIDsMatchingPredicate:
predicateForEventsWithStartDate:endDate:calendars:
setDateFormat:
systemTimeZone
setTimeZone:
stringFromDate:
validationWrapperForSameSpan:
validationWrapperForRightNow
validationWrapperForPb:
validationEnabled
validate
_showAlert
_start
_end
_masterCount
_occurrenceCount
bindString:
step
fetchInteger
bindInteger:
fetchDouble
bindDouble:
fetchString
fetchBlob
bindBlob:
getDataForKey:default:
setData:forKey:
_insert
_select
_baseName
identifierForRecordID:
setIdentifier:forRecordID:
deleteIdentifierForRecordID:
commit:
reset
removeAllRecords
rowID
setRowID:
entityRowID
setEntityRowID:
_rowID
_entityRowID
_UUID
insertTableIfNeeded
prepareStatements
_beginTransaction
dealloc
_schemaVersion
_setSchemaVersion
recordForRecordID:
stringWithCString:encoding:
errorWithDomain:code:userInfo:
_selectRecord
_updateRecord
_insertRecord
_deleteRecord
identifierInRowMappingForRecordIDRef:
calendarIdentifierInRowMappingForRecordIDRef:
alloc
initWithIdentifier:calendarIdentifier:type:
stringRepresentation
deletionWrapperForRecordID:eventStore:
deletionWrapperForSourceID:
stores
setStores:
calendars
setCalendars:
tasks
setTasks:
events
setEvents:
_stores
_calendars
_tasks
_events
changeObserverForEventWithQueue:databaseController:environment:
clientName
initWithCustomClientId:
initWithEKOptions:path:changeTrackingClientId:enablePropertyModificationLogging:allowDelegateSources:
nowMinusPrevious:
dirtyMemory
wallTime
_commitPendingRecordMapChanges
removeDeletableCalendars:
removeDeletableSources:
_deletableSources
deleteStore:
_deletableCalendars
deleteCalendar:
removeAllRecordsInCalendar:
predicateForCalendarItemsOfType:inCalendar:
publicObjectWithObjectID:
removeEvent:span:error:
reminderObjectIDsMatchingPredicate:
removeReminder:commit:error:
defaultCalendarForNewReminders
defaultCalendarForNewEvents
uniqueId
isPhantom
isDetached
originalItem
containsObject:
addObject:
_shouldSendEvent:
_shouldSendReminder:
localSource
accountPersistentID
sourceWithIdentifier:
backingObject
_updateSource:withSourceWrapper:store:
saveSource:commit:error:
_createSourceForWrapper:store:
calendarWithIdentifier:
_updateCalendar:withCalendarWrapper:
saveCalendar:commit:error:
_createCalendarForWrapper:store:
_checkAndSetDefaultCalendar:calendarWrapper:store:
performUpdateWithICSWrappers:store:session:
_deleteSourceWithIdentifier:store:
_deleteCalendarWithIdentifier:store:
_deleteEventWithIdentifier:calendarIdentifier:store:
_deleteReminderWithIdentifier:calendarIdentifier:store:
applySidePropertiesToEntity:withWrapper:session:
isTemporary
_didCreateEntity:
updateRowMappingForEntity:
selfAttendee
participantStatus
setParticipationStatus:
isMaster
saveEvent:span:commit:error:
setCompletionDate:
participationStatus
dictionaryWithCapacity:
calendarItemsWithExternalIdentifier:
calendarItemExternalIdentifier
updateEvent:identifier:eventStore:occurrenceDate:participationStatus:masterIdentifier:isMaster:
detachedItems
originalStartDate
longLongValue
persistentObject
initWithPersistentObject:occurrenceDate:
eventForUID:occurrenceDate:
intValue
eventWithUniqueId:
componentsSeparatedByString:
objectAtIndexedSubscript:
eventsWithExternalIdentifier:inCalendars:
handleUpdatedItemFromGizmo:type:withWrapper:identifier:
detacheesForIdentifierCreatingIfNeeded:detachedEventMap:
hasRecurrenceRules
remindersWithExternalIdentifier:inCalendars:
calendarInStore:withNEKCalendarID:
handleCalendarTaskWithUniqueIdentifierFromGizmo:calendar:wrapper:
handleCalendarEventWithUniqueIdentifierFromGizmo:calendar:wrapper:detachedEventMap:
calendarItemsWithExternalIdentifier:inCalendars:
updateMasterEvent:masterIdentifier:calendarIdentifier:masterParticipationStatus:detachedEvents:
allObjects
_deleteCalendarItemsInICSWrapperFromOldCalendar:store:
_deleteCalendarItemsMovedToCalendar:inICSWrapper:
importICSData:intoCalendars:options:
objectAtIndex:
handleNewEntity:withWrapper:session:
_removeIdentifierForDeletedEntity:
calendarItemsWithUniqueIdentifier:inCalendar:
_deleteDetachedCalendarItemsFromOldCalendar:deletedEvents:
setUniqueId:
updateSelfAttendeeForCalendarItem:identifier:withWrapper:
unsignedIntegerValue
updateInvitationStatusForCalendarItem:identifier:withWrapper:session:
saveEvent:span:error:
saveReminder:error:
attendees
emailAddress
absoluteString
setSelfAttendee:
organizer
setCurrentUser:
setOrganizer:
isResetSync
eks_cacheKey
owner
updates
setUpdates:
enumerateForChangeType:forEntitiesOfClass:withBlock:
insertedOrUpdatedSources
wrapperForSource:
allowsEvents
allowsTasks
push:
getDefaultTaskCalendar:defaultEventCalendar:store:
wrapperForCalEntity:
_compoundIdentifierForEntity:
wrapperForCalendar:useAttributes:
startMappingEntities
initForFullSync:tinyStore:
eventInFuture:inStore:
eventInWindow:inStore:
shouldSendEntity:
wrapperForCalendarItem:needsInvite:eventStore:
hasRowMappingForEntity:
endMappingEntities
deletes
deletedSourcesIDs
wrapperForCalendar:
wrapperForCalendarItem:
initWithCalendarRef:useAttributes:
_identifierInRowMapping:
isIdentifierPresent:forRecordID:
sweep
removeSource:commit:error:
removeCalendar:commit:error:
_deleteAndLogEvent:identifier:store:
configureSource:inStore:withAttributes:
sourceWithEventStore:
didCalendarChange:
configureCalendar:inDatabase:withAttributes:
calendarForEntityTypes:eventStore:
calendarForEntityType:eventStore:
eventSourceForDatabase:identifier:
setSource:
setImmutable:
_sendChangesIfAvailable
purgeRecordMap
deleteItemWithIdentifier:store:
addAttendeeEvents:
storeWrappersForSourceAggregator:pipe:
calendarWrappersForChangeSet:pipe:
ICSWrappersForChangeSet:pipe:
deletionWrappersForChangeSet:skipSourceDeletions:pipe:
deletionWrappersForSourceAggregator:pipe:
identifierInRowMappingForEventOrTask:
calendarIdentifierInRowMappingForEventOrTask:
removeIdentifiersForDeletedRecordIDs:
commitRecordMap
sweepSeenMap
deleteEvent:
deleteTask:
_ICSLogTestForWrapper:
_flushQueue
_createdEntities
_createdEntitiesLock
_idleBlockQueue
_pipeQueue
_syncedEntityUniqueIdentifiers
_alertSupressionCache
setPropertiesForWrapper:withCalendarItems:needsInvite:sendAllProperties:eventStore:calendar:originalEvent:
uniqueIdentifier
ICSDataForCalendarItems:preventLineFolding:
isCurrentUser
setAllPropertiesForItem:identifier:wrapper:needsInvite:eventStore:calendar:
setMinimalPropertiesForItem:identifier:wrapper:
syncCoordinatorWithServiceName:
syncRestriction
setHasDeferredChanges:
setSession:
session
syncSessionType
defaultCenter
receivedStartSyncNotificationString
postNotificationName:object:
receivedReunionSyncNotificationString
syncCoordinator:beginSyncSession:
syncCoordinator:didInvalidateSyncSession:
syncCoordinatorDidChangeSyncRestriction:
supportsMigrationSync
syncCoordinatorDidReceiveStartSyncCommand:
okToPerformDeltaSync
setSyncCoordinator:
hasDeferredChanges
_shadowLock
_syncRestrictionShadow
_hasDeferredChanges
_session
setHasStartDate:
hasStartDate
setEndDate:
setHasEndDate:
hasEndDate
setHasMasterCount:
hasMasterCount
setHasOccurrenceCount:
hasOccurrenceCount
setHasShowAlert:
hasShowAlert
_endDate
initWithDomain:
setWithObjects:
shared
migratePrefsIfNecessary
integerForKey:
synchronizeUserDefaultsDomain:keys:
synchronize
alertInviteeDeclines
_broadcastBool:forKey:
showDeclinedEvents
rebroadcastShowDeclinedChangeNotification
rebroadcastAlertInviteeDeclinesChangeNotification
setBool:forKey:
synchronizeNanoDomain:keys:
boolForKey:keyExistsAndHasValidFormat:
setAlertInviteeDeclines:
setShowDeclinedEvents:
applyRebroadcastShowDeclinedEvents
applyRebroadcastAlertInviteeDeclines
enumerateKeysAndObjectsUsingBlock:
rebroadcastAllObservedNotifications
handleDarwinNotificationOfName:
_prefObserverLog
_npsManager
_domainAccessor
_keysToDirectMirrorCompanionToGizmo
_ekPrefs
writeStackshot:
writeCrashReport:
facilityWithSubsystem:category:
_recvSetReminderKitReminderCompletedEndpoint:
_recvSetEventKitReminderCompletedEndpoint:
_recvSetParticipantStatusEndpoint:
_recvSetReminderKitAlarmSnoozeEndpoint:
_recvSetEventKitAlarmSnoozeEndpoint:
_recvDeleteEventEndpoint:
_disableMutation
hasSetParticipantStatus
setParticipantStatus
eventStoreIdentifier
itemIdentifier
eventWithIdentifier:
status
span
hasSetReminderComplete
setReminderComplete
calendarName
reminderTitle
isComplete
setCompleted:
fetchReminderWithExternalIdentifier:inList:error:
initWithStore:
updateReminder:
saveSynchronouslyWithError:
hasDeleteEvent
deleteEvent
eventStart
dateWithTimeIntervalSince1970:
eventTitle
timeIntervalSince1970
enumerateEventsMatchingPredicate:usingBlock:
calendarTitle
eventIdentifier
snoozeAlarm:withTimeIntervalFromNow:
hasSetAlarmSnooze
setAlarmSnooze
hasCalendarName
hasReminderTitle
snoozeAmount
alarmIdentifier
_calendarItem:snoozeAlarmID:withTimeIntervalFromNow:
hasItemIdentifier
hasStoreIdentifier
snoozeFromNowForTimeInterval:
initWithReminderKitEnabled:
sendSetParticipantStatus:span:storeId:eventId:
sendDeleteEventId:title:start:inCalendarId:title:inSource:span:
sendSetCompleted:calendarName:title:externalIdentifier:
sendSetReminderAlarmSnooze:calendarName:title:externalIdentifier:alarmIdentifier:
sendSetEventAlarmSnooze:calendarName:storeId:eventId:alarmIdentifier:
_messaging
_messageLogging
calendarsForEntityType:
predicateForRemindersInCalendars:
fetchRemindersMatchingPredicate:completion:
startDateComponents
setStartDateComponents:
_enableDisableLogging
userInfo
pairingID
_blockUntilUnlock
_registerForNotifications
mainRunLoop
didReceiveStartSyncCommand:
addObserver:selector:name:object:
didReceiveReunionSyncCommand:
_databaseChangedExternally
_triggerFullSync
clearRetryState
_triggerMigrationSync
shouldSyncBasedOnTime:
_triggerNightlySync
setNeedsFullSync
setNeedsReunionSync
setNeedsNightlySync
setNeedsMigrationSync
_notificationQueue
_daemonQueue
_preferencesObserver
_logDbFile
os_log_facility
setObfuscate:
obfuscate
isInternalDevice
entityName
cdEntityName
fetchReminderIncludingMarkedForDeleteWithObjectID:error:
deletionWrapperForObjectID:deletedReminderAndListMapping:
initWithReminderAccountObjectIDString:
fetchAccountWithExternalIdentifier:error:
defaultAlarmOffset
setDefaultAlarmOffset:
isEnabled
setIsEnabled:
isFacebookSource
setIsFacebook:
usesSelfAttendee
setUsesSelfAttendee:
constraintsDescriptionPath
setConstraintsDescriptionPath:
creatorBundleID
setCreatorBundleID:
creatorCodeSigningIdentity
setCreatorCodeSigningIdentity:
setAccountPersistentID:
supportsSharedCalendars
setSupportsSharedCalendars:
setAllowsTasks:
setAllowsEvents:
allowsCalendarAddDeleteModify
setAllowsCalendarAddDeleteModify:
onlyCreatorCanModify
setOnlyCreatorCanModify:
snoozeAlarmRequiresDetach
setSnoozeAlarmRequiresDetach:
supportsAlarmAcknowledgedDate
setSupportsAlarmAcknowledgedDate:
deleteWhatever:calendarsInSource:inStore:
setSourceType:
setEnabled:
isFacebook
deleteSourcesTaskCalendars:inStore:
deleteSourcesEventCalendars:inStore:
sourceWithExternalID:
inserts
enumerateObjectsUsingBlock:
initWithNEKEventStore:eventChanges:reminderChanges:
_insertedOrUpdatedSources
_deletedSourcesIDs
compare:
isBefore:
isAfter:
_setWindowToNow
_loadLastSyncWindow
_getTestWindowStart
_getTestWindowEnd
_computeDerived
_getWindowStart
_getWindowEnd
initWithTimeIntervalSinceReferenceDate:
_spanNowTime
setTaskCutoffDate:
defaultTimeZone
_eventInWindow:inStore:
timeZone
occurrencesExistInRangeForEvent:startDate:endDate:mustStartInInterval:timezone:
taskCutoffDate
distantFuture
taskCutoff
reminderInWindow:
reminderInFuture:
spanStart
setSpanStart:
spanEnd
setSpanEnd:
setTaskCutoff:
_fwdDaysToSync
_revDaysToSync
_dontSyncDays
_spanStart
_spanEnd
_taskCutoff
_timeZone
_taskCutoffDate
impl
setCalendarName:
setReminderTitle:
setExternalIdentifier:
setIsComplete:
setHasIsComplete:
hasIsComplete
hasExternalIdentifier
_calendarName
_externalIdentifier
_reminderTitle
_isComplete
isDefaultLocalCalendar
initWithIdentifier:isDefaultLocalCalendar:
_isDefaultLocalCalendar
numberWithUnsignedInt:
hasName
setHasDefaultAlarmOffset:
hasDefaultAlarmOffset
setHasType:
setHasIsEnabled:
hasIsEnabled
setHasIsFacebook:
hasIsFacebook
setHasUsesSelfAttendee:
hasUsesSelfAttendee
hasConstraintsDescriptionPath
hasCreatorBundleID
hasCreatorCodeSigningIdentity
hasAccountPersistentID
setHasSupportsSharedCalendars:
hasSupportsSharedCalendars
setHasAllowsTasks:
hasAllowsTasks
setHasAllowsEvents:
hasAllowsEvents
setHasAllowsCalendarAddDeleteModify:
hasAllowsCalendarAddDeleteModify
setHasOnlyCreatorCanModify:
hasOnlyCreatorCanModify
setHasSnoozeAlarmRequiresDetach:
hasSnoozeAlarmRequiresDetach
setHasSupportsAlarmAcknowledgedDate:
hasSupportsAlarmAcknowledgedDate
_accountPersistentID
_constraintsDescriptionPath
_creatorBundleID
_creatorCodeSigningIdentity
_defaultAlarmOffset
_allowsCalendarAddDeleteModify
_allowsEvents
_allowsTasks
_isEnabled
_isFacebook
_onlyCreatorCanModify
_snoozeAlarmRequiresDetach
_supportsAlarmAcknowledgedDate
_supportsSharedCalendars
_usesSelfAttendee
_doneForRealNotifyingPairedSync:
reportProgress:
syncDidComplete
initWithSpan:session:
pause
doneForRealNotifyingPairedSync:
_timeToLie
_isPaused
_calledDidComplete
_span
_endTime
_previousFraction
isSyncingReply:
initWithMachServiceName:
interfaceWithProtocol:
setExportedInterface:
setExportedObject:
listener:shouldAcceptNewConnection:
listener
setListener:
_listener
dueDateComponents
stringByAppendingPathComponent:
sharedInstance
waitForPairingStorePathPairingID:
pairingStorePath
_addAccountWithType:name:accountObjectID:
configureAccountChangeItemProvider:withAttributes:
updateAccount:
removeFromStore
createAccountWithSaveRequest:withAttributes:
configureAccount:withSaveRequest:withAttributes:
bytes
resetFetchCursor
dataWithBytes:length:
bindUint64:
fetchUint64
rawDb
bindPosition
fetchPosition
columnCount
bindCount
_parsed
_rawDb
initWithQueue:environment:
setWeakEventDatabaseController:
setWeakReminderDatabaseController:
changeObserverForReminderWithQueue:databaseController:environment:
_keyQueue
_clientName
resetLocalCalendarCache
initWithList:useAttributes:
_enumerateForChangeType:forEntitiesOfClass:withBlock:
_createDb
_prepareStatements
dbFilename
location
localizedStandardCompare:
shouldShowInvite:withUUID:
didShowInvite:withUUID:
deleteInviteByUUID:
setDbFilename:
_dbQueue
_dbConn
_update
_fetch
_delete
_sweep
_dbFilename
initWithFIFOLength:name:
pushQ
finished
fifo
setPushQsuspended:
setPopQsuspended:
popQ
commonQ
setFinished:
popQsuspended
removeObjectAtIndex:
conditionalPop:
pushQsuspended
finish
terminate
error
setError:
setFifo:
setLength:
setPushQ:
setPopQ:
setCommonQ:
_finished
_pushQsuspended
_popQsuspended
_error
_fifo
_length
_pushQ
_popQ
_commonQ
_setClipping:
initWithDelegate:
initWithService:priority:asMasterStore:options:
setOptions:
_canUseDataTransfer
setEngineType:
setSendingBufferCap:
setDelegate:queue:
resume:
setNeedsResetSync
maxDeltaRetries
setHasChangesAvailable
currentSession
activityComplete
array
reminderStore
_deleteSYObject:eventStore:reminderStore:
isSending
_retrySession:
progressLiar
valueForKey:
setPerfomanceTracker:
bumpFaultsAndScheduleRetry
_restartServiceOnVersionUpgrade:
setEventChangeObserver:
setReminderChangeObserver:
setNekEventStore:
setNekReminderStore:
fetchEverythingIntoPipe:
setChangeSupplier:
setStatsTracker:
fetchNightlyIntoPipe:
_clearToDeltaSync
fetchChangesIntoPipe:
isTruncated
isEffectivelyEmpty
completion
scheduleRetry
changeSupplier
sealCompletions
setChangeCount:
changeCount
statsTracker
setFullSessionTimeout:
setProgressLiar:
fullSessionTimeout
setPerMessageTimeout:
setSessionMetadata:
setSerializer:
setCanRestart:
setCanRollback:
targetIsConnected
_nextDelay:
fireIn:
fireOnConnection
_retrySync
perfomanceTracker
cpuTimeMs
_shouldFakeFailure
changeObserverDidObserveChanges:
changeObserverDidObserveTruncation:
service:startSession:error:
service:sessionEnded:error:
service:incomingData:completion:
service:incomingStream:metadata:completion:
service:encounteredError:context:
service:willPreferSession:overSession:
service:willSwitchFromPairingID:toPairingID:
service:didSwitchFromPairingID:toPairingID:
service:targetDeviceProximityChanged:
service:targetDeviceConnectionChanged:
serviceDidPairDevice:
serviceDidUnpairDevice:
activityRun:
activityIdentifier:
activitySubsystem:
activity:customizeCriteria:
createOrUpdateSYObject:eventStore:reminderStore:session:
deleteSYObject:eventStore:reminderStore:
isCurrentlySyncing
_syServiceLock
_syncService
_remoteBuildVersion
_eventStore
_reminderStore
_syncSession
_activity
_completion
_isNightlySync
_resetTimeoutTracker
_deltaTimeoutTracker
_nightlyTimeoutTracker
_rpcEndpoint
_preemptedSessionProgressLiar
_statusReporter
_isCurrentlySyncing
setStoreWrapper:
setCalendarWrapper:
setICSWrapper:
setDeletionWrapper:
setValidationWrapper:
setSetReminderComplete:
setSetParticipantStatus:
setSetAlarmSnooze:
setDeleteEvent:
setPacketNumber:
setHasPacketNumber:
hasPacketNumber
hasStoreWrapper
hasCalendarWrapper
hasICSWrapper
hasDeletionWrapper
hasValidationWrapper
packetNumber
storeWrapper
calendarWrapper
iCSWrapper
deletionWrapper
validationWrapper
_calendarWrapper
_deleteEvent
_deletionWrapper
_iCSWrapper
_packetNumber
_setAlarmSnooze
_setParticipantStatus
_setReminderComplete
_storeWrapper
_validationWrapper
setSyncID:
addMetadataKeys:
addMetadataValues:
syncID
hasTaskCompletionDate
hasICSData
iCSData
hasOldIdentifier
metadataKeys
metadataValues
isHolidyCalendar
publishedURL
selfIdentityAddress
ownerIdentityAddress
setIsHolidyCalendar:
URLWithString:
setPublishedURL:
setSelfIdentityAddress:
setOwnerIdentityAddress:
setIsDefaultLocalCalendar:
setInvitationChangedPropertyFlagDate:
setInvitationChangedPropertyFlagTime:
setInvitationChangedPropertyFlagTitle:
setInvitationChangedPropertyFlagLocation:
setInvitationChangedPropertyFlagAttendeeComment:
setInvitationChangedPropertyFlagAttendeeStatus:
invitationChangedPropertyFlagDate
hasInvitationChangedPropertyFlagDate
invitationChangedPropertyFlagTime
hasInvitationChangedPropertyFlagTime
invitationChangedPropertyFlagTitle
hasInvitationChangedPropertyFlagTitle
invitationChangedPropertyFlagLocation
hasInvitationChangedPropertyFlagLocation
invitationChangedPropertyFlagAttendeeComment
hasInvitationChangedPropertyFlagAttendeeComment
invitationChangedPropertyFlagAttendeeStatus
hasInvitationChangedPropertyFlagAttendeeStatus
isEmpty
changeSetForEvent
changeSetForReminder
setInserts:
setDeletes:
deletionMap
setDeletionMap:
moveMap
setMoveMap:
changeNumber
setChangeNumber:
setCompletion:
truncated
setTruncated:
_truncated
_inserts
_updates
_deletes
_deletionMap
_moveMap
_changeNumber
_isHolidyCalendar
_publishedURL
_selfIdentityAddress
_ownerIdentityAddress
hasIdentifier
setHasIsDefaultLocalCalendar:
hasIsDefaultLocalCalendar
nekEventStore
eventChangeObserver
eventDatabaseController
freshStoreAndChangeNumber:
moveChangeNumber:store:
addCompletion:
reminderChangeObserver
changeStateMap
saveChangeTrackingStateMap:
allSourcesInto:
allCalendarsInto:
allListsInto:
allEventsInto:filter:window:
allRemindersInto:filter:window:
initWithBlock:
setBackgroundThread:
backgroundThread
fetchEventChangeSet
fetchReminderChangeSet
markAsNotEffectivelyEmpty
markAsTruncated
nekReminderStore
listWrappersForChangeSet:pipe:
remindersWrappersForChangeSet:skipAccountDeletions:pipe:
_eventChangeObserver
_reminderChangeObserver
_nekEventStore
_nekReminderStore
_backgroundThread
fetchListWithObjectID:error:
listInStore:withNEKCalendarID:
hasSelfAttendeeEmail
setHasEntityType:
hasEntityType
setHasInvitationChangedPropertyFlagDate:
setHasInvitationChangedPropertyFlagTime:
setHasInvitationChangedPropertyFlagTitle:
setHasInvitationChangedPropertyFlagLocation:
setHasInvitationChangedPropertyFlagAttendeeComment:
setHasInvitationChangedPropertyFlagAttendeeStatus:
hasSelfAttendeeUUID
hasSelfOrganizerEmail
hasSelfOrganizerUUID
setHasAttendeeStatus:
hasAttendeeStatus
setHasLocationPredictionState:
hasLocationPredictionState
_invitationChangedPropertyFlagAttendeeComment
_invitationChangedPropertyFlagAttendeeStatus
_invitationChangedPropertyFlagDate
_invitationChangedPropertyFlagLocation
_invitationChangedPropertyFlagTime
_invitationChangedPropertyFlagTitle
ekColor
daSymbolicColorName
daHexString
daExternalIdentificationTag
daSyncToken
daPushKey
addListWithName:toAccountChangeItem:listObjectID:
configureListChangeItemProvider:withAttributes:
updateList:
initWithDASymbolicColorName:daHexString:
setColor:
setDaExternalIdentificationTag:
setDaSyncToken:
setDaPushKey:
createListInAccount:withSaveRequest:withAttributes:
configureList:withSaveRequest:withAttributes:
isDegenerate:
setValidationObject:
syncSession:enqueueChanges:error:
syncSession:applyChanges:completion:
syncSession:didEndWithError:
syncSession:resetDataStoreWithError:
resetDataStoreForSyncSession:completion:
syncSession:rollbackChangesWithError:
syncSession:restartChanges:
syncSession:successfullySynced:
syncKind
setSyncKind:
validationObject
_isFirst
_changeQueue
_ct_logger
_preSyncCensus
_changeSupplier
_progressLiar
_changeCount
_syncKind
_statsTracker
_perfomanceTracker
_validationObject
cpuTime
setDirtyMemory:
setCpuTime:
setWallTime:
_wallTime
_cpuTime
_dirtyMemory
allowsContentModifications
isSubscribedHolidayCalendar
allowsScheduling
isDefaultSchedulingCalendar
publishURL
externalIDTag
allowEvents
allowReminders
subcalAccountID
unlocalizedTitle
setAllowsContentModifications:
setHidden:
setInbox:
setNotificationsCollection:
setSharingInvitation:
setSubscribed:
setSubscribedHolidayCalendar:
setFamilyCalendar:
setAllowsScheduling:
setIsDefaultSchedulingCalendar:
setPublishURL:
setExternalIDTag:
setSubcalAccountID:
setAlarmIdentifier:
setItemIdentifier:
setStoreIdentifier:
setSnoozeAmount:
setHasSnoozeAmount:
hasSnoozeAmount
hasAlarmIdentifier
_snoozeAmount
_alarmIdentifier
_itemIdentifier
degenerateChange
dataFromChange:
changeFromData:ofType:
dataWithSYObject:
SYObjectWithData:
encodeSYChangeForBackwardCompatibility:protocolVersion:
decodeChangeData:fromProtocolVersion:ofType:
mapTableWithKeyOptions:valueOptions:
saveRequests
_saveEventStore:
setAuthor:
removeDeletableLists:
removeDeletableAccounts:
_deletableAccountsForStore:
deleteAccount:
filteredArrayUsingPredicate:
_deletableListsForStore:
deleteList:
removeAllRemindersInList:
saveRequestForStore:
fetchRemindersWithError:
removeFromList
addObjectsFromArray:
fetchDefaultListWithError:
_updateAccount:withSourceWrapper:store:
_createAccountForWrapper:store:
_updateList:withCalendarWrapper:
_createListForWrapper:store:
_checkAndSetDefaultList:calendarWrapper:store:
_deleteAccountWithIdentifier:store:
_deleteListWithIdentifier:store:
_deleteReminderWithIdentifier:store:
applySidePropertiesToReminderChangeItem:withWrapper:session:
fetchReminderWithDACalendarItemUniqueIdentifier:inList:error:
handleUpdatedReminderFromGizmo:withSaveRequest:withWrapper:
handleReminderWithUniqueIdentifierFromGizmo:saveRequest:list:wrapper:
_ensureReminderInList:saveRequest:inICSWrapper:
importRemindersFromICSData:insertIntoListChangeItem:error:
updateReminderChangeItem:fromICSData:isNew:withOptions:error:
handleNewReminderChangeItem:withWrapper:session:
addReminderChangeItem:
getDefaultListForStore:
wrapperForList:
wrapperForList:useAttributes:
deletionWrappersForChangeSet:deletedReminderAndListMapping:skipAccountDeletions:pipe:
ICSWrappersForChangeSet:movedReminderAndListMapping:pipe:
fetchReminderWithObjectID:error:
shouldSendReminder:
wrapperForReminder:oldListIdentifier:
removeFromParent
deleteReminder:
setSaveRequests:
_saveRequests
beginObservingChanges
registerForDetailedChangeTracking:
stopObservingChanges
weakEventDatabaseController
databaseDidChange
lastSequenceNumber
_changeTrackingWasPurged:
_defaultCalendarChanged:
removeObserver:name:object:
notifyForDatabaseUpdatesIfNeeded
notifyForDatabaseUpdates
allowedEntityTypes
initWithCalendarRef:
predicateForMasterEventsInCalendars:
_fetchChangesInto:from:inside:
previousDefaultTaskCalendar
previousDefaultEventCalendar
markChangedObjectIDsConsumedUpToToken:
setLastSequenceNumber:
setPreviousDefaultTaskCalendar:
setPreviousDefaultEventCalendar:
fetchChangedObjectIDsSinceToken:resultHandler:
_sequenceKey
_taskCalendarKey
_eventCalendarKey
_databaseHasPendingChanges
_sawSeqnoFailure
_lastSequenceNumber
_weakEventDatabaseController
metadataKeysCount
clearMetadataKeys
metadataKeysAtIndex:
metadataValuesCount
clearMetadataValues
metadataValuesAtIndex:
metadataKeysType
metadataValuesType
setHasCalendarItemCount:
hasCalendarItemCount
hasSyncID
setHasTaskCompletionDate:
hasNuevoIdentifier
setMetadataKeys:
setMetadataValues:
_iCSData
_metadataKeys
_metadataValues
_syncID
_completions
_isTruncated
_isEffectivelyEmpty
weakReminderDatabaseController
storeDidChange
isWaitingOnSync
reminderDatabaseController
enumerateAllRemindersWithBlock:
loadChangeTrackingStateMapWithStore:
deletedAccountIDsFromLoadedMap
hasChangeTrackingTokens
_fetchChangesInto:from:inside:outDeletedReminderAndListMapping:outMovedReminderAndListMapping:
arrayWithCapacity:
changedObjectID
updatedProperties
previousDefaultReminderListID
setPreviousDefaultReminderListID:
fetchChangedObjectIDs:
initWithBase64EncodedString:options:
initWithData:store:clientName:
persistToData:
base64EncodedStringWithOptions:
_reminderListKey
beginTrackingFromNowForStore:clientName:
_changeTrackingStateMap
_weakReminderDatabaseController
setChangeTracking:
setLastChangeToken:
changeTracking
lastChangeToken
initWithChangeTracking:lastChangeToken:
_changeTracking
_lastChangeToken
unarchivedObjectOfClass:fromData:error:
_beginTrackingFromLoadedStateForStore:clientName:
archivedDataWithRootObject:requiringSecureCoding:error:
provideChangeTrackingForAccountID:clientName:
universalToken
_beginTrackingForStore:clientName:verifyAccountsBlock:changeTrackingStateFromAccountBlock:
currentChangeTokenWithError:
setWithCapacity:
filterAccountToSync:
fetchHistoryAfterToken:error:
fetchAuxiliaryChangeInfosOfType:withChangeObject:error:
auxiliaryChangeInfos
reminderIdentifier
oldListIdentifier
applyFilterByTransactionAuthors:isExclusion:
lastChangeTokenForAccountID:
setChangeToken:forAccountID:
decodeObjectOfClasses:forKey:
encodeObject:forKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
beginTrackingFromEpochForStore:clientName:
_loadedChangeTokenMap
_deletedAccountIDsFromLoadedMap
setEventIdentifier:
setEventTitle:
setCalendarTitle:
hasEventIdentifier
hasEventTitle
setEventStart:
setHasEventStart:
hasEventStart
hasCalendarTitle
setSpan:
setHasSpan:
hasSpan
_eventStart
_calendarTitle
_eventIdentifier
_eventTitle
setActivityCondition:
setLog:
_checkIn
activityCondition
_setActivity:
setRunTransaction:
setEstimatedFireDate:
_setState:
setLastFired:
dateWithTimeIntervalSinceNow:
estimatedFireDate
_baseCriteria
activity
fireNever
runTransaction
inActivity
shouldDefer
lastFired
setActivity:
_lastFired
_runTransaction
_activityCondition
_estimatedFireDate
_log
hasSyncId
setStatus:
setHasStatus:
hasStatus
_status
NEKICSWrapperMetadata
NEKICSWrapper
SYChange
NSObject
NEKStatTracker
EventKitSync
EventKitAdditions
NEKEnvironment
NEKCalendarWrapper
Reminder
NEKPBSourceID
NSCopying
Event
NDTSQException
NDTSQFile
NSCacheDelegate
NDTTimedCache
NEKPBCalendarWrapper
NEKStore
NEKPBCalendarAttributes
NEKTinyStore
NDTMessage
NDTMessaging
IDSServiceDelegate
NEKValidationWrapper
NDTSQKeyValueStore
_NEKRecordMapImpl
_NEKRecordMapSqliteRecord
_NEKRecordMapSqliteImpl
_NEKSyncSet
NEKEventStore
NEKSyncCoordinator
PSYSyncCoordinatorDelegate
NEKPBValidationWrapper
NEKPreferencesObserver
NDTCrashSynthesizer
NEKRPCEndpoint
NEKDeletionWrapper
NEKDaemon
NDTLogFacility
NDTLog
NEKSourceChangeAggregator
KeepItSimple
NEKSyncWindow
NEKRecordMap
NEKPBSetReminderComplete
NEKCalendarID
NEKPBSourceAttributes
NEKProgressLiar
NEKStatusReporterEndpoint
NEKStatusReporterProtocol
NEKStatusReporter
NSXPCListenerDelegate
NEKDatabaseFileManager
NDTSQStatement
NEKChangeObserver
NEKReminderChangeSet
NEKEventChangeSet
NEKSeenMap
NDTResultsFIFO
NEKSyncController
NEKChangeObserverDelegate
SYServiceDelegate
NDTActiviityDelegate
NEKPBProtoBuffMessage
NEKSourceWrapper
NEKChangeSet
NEKCalendarAttributes
NEKSourceID
NEKPBCalendarIdentifier
NEKResultsFetcher
NEKPBICSWrapperMetadata
NEKSyncSession
SYSessionDelegate
NDTPerf
NEKPBSetAlarmSnooze
NEKProtobufSerializer
SYChangeSerializer
NEKReminderStore
NEKEventChangeObserver
NEKPBICSWrapper
NEKSourceAttributes
NDTSQSchema
NEKResultsPipe
NEKReminderChangeObserver
NEKReminderChangeTrackingState
NEKReminderChangeTrackingStateMap
NSSecureCoding
NSCoding
NEKPBDeleteEvent
NDTActivity
NEKPBDeletionWrapper
NEKPBSetParticipantStatus
NEKPBSourceWrapper
@16@0:8
v16@0:8
Q16@0:8
v24@0:8Q16
v24@0:8@16
q16@0:8
v24@0:8q16
B16@0:8
v20@0:8B16
@"NSString"
@"NSDate"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8@16
v32@0:8@16@24
v28@0:8B16@20
v32@0:8Q16@24
v32@0:8q16@24
q24@0:8@16
v24@0:8@?16
Q24@0:8@16
d16@0:8
v24@0:8d16
@"NSData"
@"NEKCalendarID"
@"NSDictionary"
@"NSMutableDictionary"
@48@0:8@16@24d32d40
d24@0:8d16
@"NEKEnvironment"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSCondition"
@"NEKSyncController"
@"NEKDatabaseFileManager"
@"NEKTinyStore"
@"NEKRecordMap"
@"NEKSeenMap"
@"NEKSyncCoordinator"
@"NEKDaemon"
@40@0:8@16@24@32
@"NEKSourceID"
@"NEKCalendarAttributes"
v64@0:8@16@24@32@40@48@56
v40@0:8@16@24@32
v60@0:8@16@24@32B40@44@52
@24@0:8^{_NSZone=}16
{?="isLocalStore"b1}
@32@0:8@16@24
v32@0:8@"NSCache"16@24
v32@0:8@16@?24
@32@0:8@16^i24
v32@0:8@16q24
^{sqlite3=}16@0:8
v24@0:8^{sqlite3=}16
@"NSObject<OS_dispatch_queue>"
@"NSCache"
@"NDTSQKeyValueStore"
^{sqlite3=}
@"<NDTSQFileDelegate>"
@24@0:8d16
@?16@0:8
@"NSObject<OS_dispatch_source>"
@"NEKPBCalendarAttributes"
@"NEKPBSourceID"
{?="isDefaultEventCalendar"b1"isDefaultTaskCalendar"b1}
@"<NEKChangeObserver>"
v20@0:8i16
i16@0:8
{?="invitationStatus"b1"sharingInvitationResponse"b1"sharingStatus"b1"supportedEntityTypes"b1"displayOrder"b1"canBePublished"b1"canBeShared"b1"hasBeenAlerted"b1"isDefaultCalendarForStore"b1"isFamilyCalendar"b1"isHidden"b1"isHolidayCalendar"b1"isIgnoringEventAlerts"b1"isIgnoringSharedCalendarNotifications"b1"isImmutable"b1"isInbox"b1"isNotificationsCollection"b1"isPublished"b1"isReadonly"b1"isSchedulingProhibited"b1"isSharingInvitation"b1"isSubscribed"b1}
q32@0:8@16q24
v32@0:8d16@24
d32@0:8@16d24
@"NDTSQFile"
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v40@0:8@16@24@?32
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v20@0:8I16
@48@0:8@16@24@32^@40
v40@0:8@16@?24@?32
@"IDSService"
@"NDTLogFacility"
B24@0:8^@16
^{sqlite3_stmt=}
@"NSArray"
v40@0:8^@16^@24@32
v48@0:8@16q24@32@40
B68@0:8@16@24@32@40q48@56B64
B56@0:8@16@24@32q40@48
v36@0:8@16B24@28
@28@0:8@16B24
B40@0:8@16@24@32
B32@0:8@16@24
@"NSMutableArray"
v68@0:8@16@24@32B40@44@52@60
v32@0:8@"PSYSyncCoordinator"16@"PSYServiceSyncSession"24
v24@0:8@"PSYSyncCoordinator"16
@"PSYServiceSyncSession"
@"PSYSyncCoordinator"
{?="endDate"b1"masterCount"b1"occurrenceCount"b1"startDate"b1"showAlert"b1}
@"NSObject<OS_os_log>"
@"NPSManager"
@"NPSDomainAccessor"
@"EKPreferences"
@20@0:8B16
v48@0:8q16q24@32@40
v72@0:8@16@24d32@40@48@56q64
v44@0:8B16@20@28@36
v56@0:8d16@24@32@40@48
B40@0:8@16@24d32
@"NDTMessaging"
@36@0:8@16@24i32
@"NEKPreferencesObserver"
v40@0:8Q16@24@32
@"NSSet"
@28@0:8B16@20
B24@0:8d16
@"NSTimeZone"
@"_NEKRecordMapImpl"
{?="isComplete"b1}
I16@0:8
{?="defaultAlarmOffset"b1"type"b1"allowsCalendarAddDeleteModify"b1"allowsEvents"b1"allowsTasks"b1"isEnabled"b1"isFacebook"b1"isLocalStore"b1"onlyCreatorCanModify"b1"snoozeAlarmRequiresDetach"b1"supportsAlarmAcknowledgedDate"b1"supportsSharedCalendars"b1"usesSelfAttendee"b1}
@32@0:8d16@24
v24@0:8@?<v@?B>16
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"NSXPCListener"
B32@0:8@?16@24
i24@0:8q16
i24@0:8Q16
i24@0:8@16
i24@0:8d16
v24@0:8^{sqlite3_stmt=}16
^{sqlite3_stmt=}16@0:8
@"NEKEnvironment"16@0:8
@"<NEKChangeObserverDelegate>"16@0:8
v24@0:8@"<NEKChangeObserverDelegate>"16
@"<NEKChangeObserverDelegate>"
v36@0:8i16#20@?28
@32@0:8q16@24
@"NSError"
v24@0:8@"<NEKChangeObserver>"16
B40@0:8@16@24^@32
v48@0:8@16@24@32@?40
v28@0:8@16B24
B40@0:8@"SYService"16@"SYSession"24^@32
v40@0:8@"SYService"16@"SYSession"24@"NSError"32
v40@0:8@"SYService"16@"NSData"24@?<v@?B@"NSError">32
v48@0:8@"SYService"16@"NSInputStream"24@"NSDictionary"32@?<v@?B@"NSError">40
v40@0:8@"SYService"16@"NSError"24@"NSDictionary"32
@"SYSession"40@0:8@"SYService"16@"SYSession"24@"SYSession"32
v40@0:8@"SYService"16@"NSUUID"24@"NSUUID"32
v28@0:8@"SYService"16B24
v24@0:8@"SYService"16
*24@0:8@16
v24@0:8@"NDTActivity"16
*24@0:8@"NDTActivity"16
v32@0:8@"NDTActivity"16@"NSObject<OS_xpc_object>"24
B24@0:8@?16
d24@0:8q16
@"SYService"
@"NEKStore"
@"NEKSyncSession"
@"NDTActivity"
@"NEKStatTracker"
@"NEKRPCEndpoint"
@"NEKProgressLiar"
@"NEKStatusReporter"
@"<NEKSyncControllerDelegate>"
@"NEKPBCalendarWrapper"
@"NEKPBDeleteEvent"
@"NEKPBDeletionWrapper"
@"NEKPBICSWrapper"
@"NEKPBSetAlarmSnooze"
@"NEKPBSetParticipantStatus"
@"NEKPBSetReminderComplete"
@"NEKPBSourceWrapper"
@"NEKPBValidationWrapper"
{?="packetNumber"b1}
@"NEKSourceAttributes"
@"NSURL"
{?="isDefaultLocalCalendar"b1}
@"NEKEventChangeObserver"
@"NEKReminderChangeObserver"
@"NEKEventStore"
@"NEKReminderStore"
@"NSThread"
{?="attendeeStatus"b1"entityType"b1"invitationStatus"b1"locationPredictionState"b1"properInvitationStatus"b1"startDate"b1"invitationChangedPropertyFlagAttendeeComment"b1"invitationChangedPropertyFlagAttendeeStatus"b1"invitationChangedPropertyFlagDate"b1"invitationChangedPropertyFlagLocation"b1"invitationChangedPropertyFlagTime"b1"invitationChangedPropertyFlagTitle"b1}
q40@0:8@16@?24^@32
B32@0:8@16^@24
q40@0:8@"SYSession"16@?<B@?@"<SYChange>">24^@32
v40@0:8@"SYSession"16@"NSArray"24@?<v@?B@"NSError">32
v32@0:8@"SYSession"16@"NSError"24
B32@0:8@"SYSession"16^@24
v32@0:8@"SYSession"16@?<v@?B@"NSError">24
v32@0:8@"SYSession"16@"NSSet"24
^{ct_green_tea_logger_s=}
@"NEKValidationWrapper"
@"NEKResultsPipe"
@"NDTPerf"
{?="snoozeAmount"b1}
@32@0:8@16q24
@40@0:8@16q24q32
@"NSData"24@0:8@"<SYChange>"16
@"<SYChange>"32@0:8@"NSData"16q24
@"NSData"24@0:8@"<SYObject>"16
@"<SYObject>"24@0:8@"NSData"16
@"NSData"32@0:8@"<SYChange>"16q24
@"<SYChange>"40@0:8@"NSData"16q24q32
v44@0:8@16@24B32@36
@"NSMapTable"
@24@0:8^q16
B40@0:8@16@?24@32
B36@0:8@16i24@28
@24@0:8Q16
@"NEKPBCalendarIdentifier"
{?="displayOrder"b1"taskCompletionDate"b1"calendarItemCount"b1}
@"NSNumber"
B56@0:8@16@24@32^@40^@48
@"NEKReminderChangeTrackingStateMap"
@"REMChangeTracking"
@"REMChangeToken"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^@16
v48@0:8@16@24@?32@?40
{?="eventStart"b1"span"b1}
@"<NDTActiviityDelegate>"
@"NSObject<OS_os_transaction>"
@"NSObject<OS_xpc_object>"
{?="type"b1}
{?="span"b1"status"b1}
@"NEKPBSourceAttributes"
Setting ICS, len:%d
Error fetching accounts: %{public}@
Local account does not exist: %{public}@
Error fetching lists: %{public}@
Error getting debug performer for purging lazy deleted objects: %@
Error purging lazy deleted objects: %@
Read in location for a reminder
Adding ICS to wrapper to send: %{public}@
Setting task with identifier %{public}@ as completed, completion date is %{public}@
Setting all properties on %@, identifier: %{public}@
Setting minimal properties on %@, identifier: %{public}@
Can't create canonical unique identifier for reminder %{public}@. Identifier returned by REMReminder is %{public}@
Unable to create UUID for %s %{public}@
Error fetching account. Account's persistent ID: [%{public}@]
Converting old plist state
Done converting old plist state
dataWithContentsOfFile gave us nothing
propertyListWithData gave us nothing. Error: %{public}@
_rawSendData assigned IDS identifier: %@
_rawSendData has an error: %{public}@
_rawSendFile assigned IDS identifier: %@
_rawSendFile has an error: %{public}@
No identifier returned. Error: %{public}@
Incoming reply message but no handler registered.
Can't find a handler for this message
didSend:%c IDS id: %{public}@, error: %{public}@
Validation failure. Local: %@ Remote: %@
Validation faulting on second failure: Local: %@ Remote: %@
Validation succeeded, %@.
Sqlite create failed, path: %{public}@, error: (%d)
SQL not understood: %s
Cannot compile pragma fetch statement
setIdentifier: passed invalid parameters.
setIdentifier_update:%{public}@ forRecordID: %{public}@
setIdentifier_insert:%{public}@ forRecordID: %{public}@
setIdentifier: Error inserting/updating data into record map: %d
deleteIdentifierForRecordID:%{public}@
deleteIdentifierForRecordID: Error deleting record: %d
%{public}s:%d %s --mark--
NEKRecordMap removeAllRecords
Called with nil recordID or nil event store
Event deletion wrapper: %{public}@ -> %{public}@
Memory delta from save: %lld #perf
Database save time: %fs #perf
Error saving EventKit database: %{public}@
Database changes saved successfully
Error deleting future events in calendar purge: %{public}@
Error deleting single event in calendar purge: %{public}@
Error deleting reminder in calendar purge: %{public}@
%{public}s: Ignoring EventKit code path
%{public}s: Ignoring EventKit code path for getting default task calendar
_shouldSendEvent: Got a nil identifier for event: %p
Entity with summary %{public}@ identifier %{public}@ is a phantom master.  Ignoring.
_shouldSendEvent: Entity with summary %{public}@ identifier %{public}@ is detached, master identifier is %{public}@
_shouldSendEvent: Entity with summary %{public}@ identifier %{public}@ is detached, but can't get master, so using the actual detached event
No calendar for event with summary %{public}@ identifier %{public}@, event won't be tracked for sending duplicates, but we'll soldier on and likely fail somewhere later down the line.
Calendar identifier is nil for event %{public}@ identifier %{public}@. This is probably very bad.
Entity with summary %{public}@ and identifier %{public}@ already in set for calendar with identifier %{public}@, not sending again
Entity with summary %{public}@ and identifier %{public}@ not in set for calendar with identifier %{public}@, adding
Identifier is nil after much fiddling. Perhaps the master identifier is to blame?
Selecting reminder %{public}@
Create or update source: %{public}@
Saving after updating a source (%{public}@) failed: %{public}@
Updated source (%{public}@) saved successfully.
Saving after creating a source (%{public}@) failed: %{public}@
New source (%{public}@) saved successfully.
Received source wrapper that I'm not sure how to process: %{public}@
Error saving new/updated source (%{public}@): %{public}@
Update calendar: %{public}@
Error saving updated calendar (%{public}@): %{public}@
Create calendar: %{public}@
Error saving new calendar (%{public}@): %{public}@
%{public}s: Ignoring EventKit code path for reminder with identifier: [%{public}@]
%{public}s: Ignoring sidecar data for phantom master with identifier: [%{public}@]
Handling updated event from gizmo with summary %{public}@ and identifier %{public}@
Set self attendee status to 0x%08x for event with identifier %{public}@
Set invitation status to none for event with identifier %{public}@
Error saving database while setting event invitation status: %{public}@
No need to set attendee status, synced value is the same as existing value: 0x%08x for event with identifier %{public}@
Handling updated task from gizmo with summary "%{public}@" and identifier %{public}@
Task with identifier %{public}@ is completed, completion date is %{public}@
Saved event with identifier %{public}@, externalID is %{public}@
Failed to save event with identifier %{public}@. Error =  %{public}@
Participant status did not change. No need to save event with identifier %{public}@, externalID is %{public}@
Handling updated master event from gizmo with participationStatus %d, summary "%{public}@", and identifier %{public}@
Can't get row id for master with identifier %{public}@ to set attendee status for recurring series
Checking for calendar match for event %{public}@ with identifier %{public}@
Checking for match on calendar, we want %{public}@, calendarIdentifier is %{public}@
Handling master event from gizmo with participation status %d, summary %{public}@, and identifier %{public}@
Couldn't get master event for recurring event sequence with identifier %{public}@, but we'll check for detached events in case those are still around
Using existing detached event
Grabbing recurrence to use for detached event
Handling updated detached event from gizmo with participation status %d, summary %{public}@, and identifier %{public}@.
Failed to get/create event with identifier %{public}@ to set attendee status %d, skipping event
Failed to commit after saving recurring event series with master identifier %{public}@. Error =  %{public}@
Found event with identifer %{public}@ but in the wrong calendar.
%{public}s: No calendar item with identifier %{public}@ in calendar with identifier %{public}@
performUpdateWithICSWrappers received %d items
Received ICS wrapper: %{public}@
recv: %{public}@
Calendar %{public}@ does not exist, aborting
Processing update from the watch, main identifier is %{public}@
Cannot find object of type %d to update.
No calendar item found for main event in recurring series with identifier %{public}@ in calendar with identifier %{public}@
Processing add/update from companion, or a new record from the watch
Error deleting event for identifier remap: %{public}@
Item ID remapping complete: %{public}@ => %{public}@
Got an update/add for calendar item, old calendar id = %{public}@, current calendar id = %{public}@
Calendars don't match, so deleting from old calendar: old calendar id = %{public}@, current calendar id = %{public}@
Calendars match, so event didn't move: old calendar id = %{public}@, current calendar id = %{public}@
Got an update/add for event "%{public}@", no old calendar id was sent, so this is from an old record map and falling back to old code to check and delete from any old calendar. The current calendar id = %{public}@
ICS Import: %fs #perf
We have a recurring event %{public}@ and identifier %{public}@, checking to see if any detached events need attention
performUpdateWithICSWrappers: handling detached event %{public}@ identifier %{public}@
We have a recurring event with summary "%{public}@" and identifier %{public}@, deleting all detached events too, since they have also moved calendars
Deleting detached event from old calendar since it has moved. Event summary "%{public}@", identifier %{public}@
No calendar for calendar identifier %{public}@
Skipping deletion for event with identifier %{public}@ in calendar with identifier %{public}@, we already detected and deleted it as part of a recurring master's detached events
Found no matches for potential deletion of calendar item %{public}@
Found multiple matches for potential deletion of calendar item %{public}@
Error deleting item: %{public}@
Changing event id from %{public}@ to %{public}@
setting externalID %{public}@ for event with identifier %{public}@
No externalID in metadata for event with identifier %{public}@
Changed date changed flag to %d for event %{public}@
Changed time changed flag to %d for event %{public}@
Changed title changed flag to %d for event %{public}@
Changed location changed flag to %d for event %{public}@
Changed attendee comment changed flag to %d for event %{public}@
Changed attendee status changed flag to %d for event %{public}@
Setting location prediction state to %d for event %{public}@
Error saving event in applySidePropertiesToEntity: %{public}@
Self attendee email is %{public}@, and uuid is %{public}@ for event with identifier %{public}@
Found self attendee for event with identifier %{public}@, email = %{public}@, address = %{public}@
No self attendee email in wrapper for event with identifier %{public}@
Determined user is organizer for event with identifier %{public}@, email = %{public}@, address = %{public}@
updateSelfAttendeeForCalendarItem saving, attendees: %d, span: %d
updateSelfAttendeeForCalendarItem save error: %{public}@
Deleteing suppression cache entry for %@
Suppressing alert due to cache hit on %@
Setting invitation status %{public}@ for event with identifier %{public}@
No invitation status in wrapper for event with identifier %{public}@
Surreptitiously adding event to changeset: %{public}@ due to attendee change
Can't create wrapper for source %@
Sending source wrapper accountPersistentID=%{public}@ isLocalStore=%d events=%d tasks=%d
Skipping hidden calendar: %{public}@
CalendarID remap detected: %{public}@ => %{public}@
Could not create calendar wrapper for entity: %{public}@
Default reminder and event calendar are the same.
Marking default task calendar in wrapper to calendar with name %{public}@, identifier %{public}@
Marking default event calendar in wrapper to calendar with name %{public}@, identifier %{public}@
publicObjectWithObjectID returned nil, objectID: %{public}@
Event %{public}@ returned a unique id of nil.
%{public}s: Ignoring EventKit code path for reminder
CalendarItem remap detected: %{public}@ => %{public}@
Decided not to send event %@
Decided not to send reminder %@
Decided not to send %{public}@
Deletion wrapper: %@
Could not create deletion wrapper for recordID: %{public}@
Deletion wrapper for source: %@
Attempt to create wrapper for unknown type: %{public}@
updateRowMappingForEntity: Entity %{public}@ and identifier %{public}@ is detached, master identifier is %{public}@
updateRowMappingForEntity: Entity %{public}@ and identifier %{public}@ is detached, but has no master. Skipping adding to table
Error committing record map: %{public}@
Error deleting source with identifier %{public}@
Deleted source with identifier %{public}@
Cannot delete source; no source exists for %{public}@
Error deleting calendar with identifier %{public}@
Deleted calendar with identifier %{public}@
Cannot delete; no calendar exists for %{public}@
Deleting event with identifier %{public}@, recordID %{public}@
Error deleting event %{public}@
Deleting event with identifier %{public}@, from calendar with identifier %{public}@
Deleting event with identifier %{public}@, from any calendar, old mapping didn't send calendar to delete from so falling back to old code
Deleting event %{public}@ failed as we were not handed an event by the store.
No event exists for %{public}@
Failure to delete reminder: %{public}@
No reminder exists for %{public}@
Updating calendar with title %{public}@, identifier %{public}@
%{public}s: Ignoring EventKit code path: mixed entity calendar is not supported
%{public}s: Ignoring EventKit code path: creating reminders calendar is not supported
Source not found with sourceID: %@
Created calendar with title %{public}@, identifier %{public}@
Asked to set a nonexistent calendar as the default. Ignoring. Calendar identifier = %{public}@, store identifier = %{public}@
Failure deleting source "%{public}@", %{public}@
Error deleting calendar "%{public}@": %{public}@
Error removing event: %{public}@
Error deleting reminder: %{public}@
wrapperForCalendarItem: Entity with identifier %{public}@ is detached, master identifier is %@
Entity with identifier %{public}@ is detached, but can't get master
Entity with identifier %{public}@ is master for a recurring series
Handling detached events for %{public}@, count=%d
self attendee status is 0x%08x for event with identifier %{public}@
Setting all properties on %@, identifier: %{public}@, attendees: %d
Setting minimal properties on %@, identifier: %{public}@, attendees: %d
Can't create canonical unique identifier for event %{public}@. Identifier returned by CalCalendarItemCopyUniqueIdentifier is %{public}@
NEKSyncCoordinator initialized %@
Restriction is now %{public}s
Migrated prefs; version %zd -> %zd
Rebroadcast pref for key %{public}@
Applied rebroadcast pref for key %{public}@
Synced prefs for keys %{public}@
Incoming message missing required body.
Local store ID %@, remote store ID %@
itemIdentifier: %@, event: <%p>
Failure to save event: %{public}@
_recvSetParticipantStatusEndpoint ignored
Cannot finder reminder '%{public}@:%{public}@'
Failure to save reminder: %{public}@
Reminder saved successfully.
_recvSetEventKitReminderCompletedEndpoint ignored
_recvSetReminderKitReminderCompletedEndpoint ignored
Failure to delete event %@: %{public}@
I have %d candidate events so I'm not sure what to delete.
_recvDeleteEventEndpoint ignored
Snooze Reminder: time:%.1f calendar: '%{public}@' reminder: '%{public}@' externalId: %@
No reminder alarm found
Snooze Event: time:%.1f calendar: '%{public}@' itemIdentifier: %@ event: <%p> local store ID: %@, remote store ID: %@
Event saved successfully.
No event alarm found
_recvSetEventKitAlarmSnoozeEndpoint ignored
_recvSetReminderKitAlarmSnoozeEndpoint ignored
Found reminder %{public}@:%{public}@
Cannot find reminder %{public}@:%{public}@
Failure to initialize SQL log: %@, userInfo: %@
== Started EventKitSync_Sim-329
Pairing ID: %{public}@
Pre prefs observer init
Post prefs observer init
Beginning XPC transaction for com.apple.notifyd.matching notification named %{public}@
Launched from IDS
Triggering full sync for testing notification %{public}@
Thinking about a migration sync.
SignificantTimeChange incremental sync
SignificantTimeChange ignored
Calling pref observer for notification: %{public}@
Ending XPC transaction for com.apple.notifyd.matching notification named %{public}@
Registered for notifications.
Received full sync command from NEKSyncCoordinator.
Prefs synced. Starting sync controller.
Received reunion sync command.
Cannot determine calendar identifier for reminder %{public}@. Deletion wrapper will be sent but the remote device may not be able to delete the reminder
Sending reminder-only EKSource %{public}@ with REMAccount
Performing a priori deletion of calendar %{public}@
Deletion of calendar %{public}@ didn't go so well: %{public}@
Error committing store after preemptive deletion of calendars: %{public}@
Successful save after deleting very suspicious calendars.
Starting configuration of source with persistent ID: [%{public}@].
Source's 'name' has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'defaultAlarmOffset' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'type' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'enabled' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's '%@' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'usesSelfAttendee' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'constraintsDescriptionPath' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'externalID' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'externalModificationTag' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'creatorBundleID' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'creatorCodeSigningIdentity' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'accountPersistentID' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'supportsSharedCalendars' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'allowsTasks' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Skipping deletion of task calendar as we are on the phone.
Source's 'allowsEvents' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Skipping deletion of event calendar as we are on the phone.
Source's 'allowsCalendarAddDeleteModify' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'onlyCreatorCanModify' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'snoozeAlarmRequiresDetach' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'supportsAlarmAcknowledgedDate' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Completed configuration of source with persistent ID: [%{public}@].
Sorry. Unable to determine identifier or resolve EKSource object for EKObjectID %{public}@
Source with ID %{public}@ does not exist. This is unexpected for update/insert. Skipping.
Source with ID %{public}@ (%@) updated. Going to send wrapper for this source.
EKSource %{public}@ (%@) is still available due to one of the event/reminder dataclass still enabled. Treating this as an update to send wrapper for dataclass updates.
Deleted source/account %{public}@ is not available anymore. Going to send delete wrapper for this source
Window: start: %{public}@ end: %{public}@, isFullSync: %d
Asked for incremental sync window when there was no/incomplete previous sync window data
Rejected event: %{public}@ %{public}@
Rejected reminder: %{public}@ %{public}@
Accepting unknown entity: %{public}@
event not in future: %{public}@ "%@"
reminder not in future: %{public}@
Lying about progress: %0.2f%%
doneForRealNotifyingPairedSync: %d
Returning suggested db path: %@
Error fetching account. Source's persistent ID: [%{public}@]
Account with ID [%{public}@] already exists. Skip creating a new account.
Error creating account. Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'defaultAlarmOffset' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'type' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'enabled' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's '%@' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'usesSelfAttendee' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'constraintsDescriptionPath' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'creatorBundleID' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'creatorCodeSigningIdentity' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'accountPersistentID' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'supportsSharedCalendars' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'allowsTasks' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'allowsEvents' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'allowsCalendarAddDeleteModify' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'onlyCreatorCanModify' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'snoozeAlarmRequiresDetach' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'supportsAlarmAcknowledgedDate' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Unknown account type %ld
Terminating enumeration early
Sqlite create failed, path: %s, error: (%d)
Sqlite statement prepare failed for "%{public}s"
NEKSqueeze failed to initialize
NEKSqueeze failed to compress
Compressed ICS %d->%d %.01f%%
NEKFluff failed to initialize
NEKFluff failed to uncompress
ReminderKit enabled.
ReminderKit disabled.
Remote system build version: %{public}@
Shutting down existing SYService: %p
Selecting file transfer engine
Selecting data messaging engine
Failed to resume SYService: %{public}@
Started new SYService: %p
Enqueueing a full sync
Enqueueing a delta reunion sync
Reunion sync with faults- Forcing full sync
Poking CS for nightly sync
Nightly sync requested but we have faults. Ignoring request.
Remove all items
Looks like I could use a reset but it turns out we're already standing right in the middle of one, so let's just move on.
Retrying a failed sync (%d) (reset)
Retrying a failed sync (%d) (delta)
_retrySync called but we have no faults. We're perfect!
%{public}@
Assuming mixed entity NEKICSWrapper comes from EventKit
object is not of recognized class: %{public}@
Got a deletion wrapper from SYStore: %{public}@
passed weird class: %{public}@
Watch originated deletes are disabled, ignoring deleteSYObject.
%{public}s %{public}@ #%{public}@ #%{public}@
Looks like system build version changed. Rejecting session.
Delta sync fired but it really wants to be a reset sync.
Change set was empty, not starting a sync session.
Retry is overdue and we need a reset. Forcing things along.
We were denied delta sync effort but there is no backup due date. Scheduling retry based on current faultCount/connectedState
Sync request ignored: isReset: %d isNightly: %d clearToDelta: %d
Second check of change set was empty, not starting a sync session.
Before timeout stats: x=%.02f sigma=%f
Comically long session timeouts enabled!
Session timeout: %.02f
No session created so declaring completion to PSYSync
_restartServiceOnVersionUpgrade: Old RSBV: %{public}@, new RSBV: %{public}@
_restartServiceOnVersionUpgrade: restarting syService
Session is nil
service.currentSession is nil, clearing user session.
Current session [%{public}@] != ending session [%{public}@]. Error: %{public}@ Dropping notificaiton on floor.
Send complete with error: %{public}@
SendingSession: %{public}@ error: %{public}@ cpuTime: %.02fms
There was a sync error%{public}@.
Failed session was a %{public}s so setting up retry to be a reset.
Terminating results pipe.
UserCancelled error, retry should already be scheduled.
LostCollisionTest error, retry should already be scheduled.
Post failure update sync timings: x=%.02f sigma=%f
Looks like I didn't schedule  retry. That's bad.
Following nightly sync with request for delta
Post success update sync timings: elapsed=%.02f x=%.02f sigma=%f
ReceivingSession: %{public}@ error: %{public}@ cpuTime: %.02fms
Recv complete with error: %{public}@
Resuming SYService on device-paired returned (possibly benign) error: %{public}@
Poking CS for delta sync
Change log truncation is making us request a reset
For %{public}@ we are sending attendee stats (ek %d, wire %d)
For %{public}@ setting attendee status to (wire %d, ek %d)
%{public}s: All things pushed successfully
%{public}s: All nightly things pushed successfully
Default local list does not exist
Cannot find list for identifier %{public}@
Starting configuration of list with UUID: [%{public}@].
UNSUPPORTED: List's 'UUID' has changed from [%@] to [%@].  List's UUID: [%{public}@]
List's 'title' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isReadOnly' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isHidden' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isImmutable' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isInbox' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isNotificationsCollection' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isSharingInvitation' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isSubscribed' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isHolidayCalendar' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isFamilyCalendar' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isIgnoringEventAlerts' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isIgnoringSharedCalendarNotifications' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isSchedulingProhibited' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isDefaultCalendarForStore' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'digest' has changed from [%@] to [%@].  List's UUID: [%{public}@]
List's 'symbolicColorName/colorString' has changed from [%@/%@] to [%@/%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'displayOrder' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'sharingStatus' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'sharedOwnerName' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'sharedOwnerAddress' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'sharingInvitationResponse' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'publishedURL' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'canBePublished' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'canBeShared' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isPublished' has changed from [%@] to [%@].  List's UUID: [%{public}@]
List's 'externalID' has changed from [%@] to [%@].  List's UUID: [%{public}@]
List's 'externalIdentificationTag' has changed from [%@] to [%@].  List's UUID: [%{public}@]
List's 'daSyncToken' has changed from [%@] to [%@].  List's UUID: [%{public}@]
List's 'externalModificationTag' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'externalRepresentation' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'invitationStatus' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'notes' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'subCalAccountID' has changed from [%@] to [%@].  List's UUID: [%{public}@]
List's 'pushKey' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'selfIdentityDisplayName' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'selfIdentityEmail' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'selfIdentityAddress' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'selfIdentityFirstName' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'selfIdentityLastName' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'ownerIdentityDisplayName' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'ownerIdentityEmail' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'ownerIdentityAddress' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'ownerIdentityFirstName' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'ownerIdentityLastName' has changed from [%@] to [%@].  List's UUID: [%{public}@]
Completed configuration of list with UUID: [%{public}@].
Enqueued last change, pipe error: %{public}@
Enqueing validation message.
Not enqueuing validation message as the population shifted during sync.
Sending events
Applying changes
Sync disabled. Dropping changes on floor.
Chunk perf data: %{public}@ #perf
Deserialization failed.
Memory consumed by change: %lld #perf
Dirty memory limit hit, saving.
Calling sync session completion.
Sync disabled. Ignoring reset request.
didCalendarChange: title:%{public}@ identifier:%{public}@
didCalendarChange: local->syncToken:%{public}@ externalModificationTag:%{public}@ externalIdentificationTag:%{public}@
didCalendarChange: incmg->syncToken:%{public}@ externalModificationTag:%{public}@ externalIdentificationTag:%{public}@
No changes for calendar with title %{public}@, identifier %{public}@
_calendarPropertyIsEqualToAttributeProperty: Calendar and attributes property %{public}@ are different: (calendar) %{public}@ != (attributes) %{public}@
dataWithSYChange: serializing object of class: %{public}@ S_PKT_NUM:%04x_%04x
Sending reminder with location
SYChangeWithData - unrecognized type: %{public}@
SYChangeWithData: returning object of type: %{public}@ R_PKT_NUM:%04x_%04x
Transport number gap detected. Might be a problem, might not.
Could not create wrapper object
Error saving ReminderKit database: %{public}@
Can't create save request for nil store. Using a fresh REMStore to avoid crashing, but this won't be correct.
Create or update account: %{public}@
Saving after updating an account (%{public}@) failed: %{public}@
Updated account (%{public}@) saved successfully.
Saving after creating an account (%{public}@) failed: %{public}@
New account (%{public}@) saved successfully.
Error saving new/updated account (%{public}@): %{public}@
Update list: %{public}@
Error saving updated list (%{public}@): %{public}@
Create list: %{public}@
Error saving new list (%{public}@): %{public}@
Unknown deletion wrapper: %{public}@
Handling updated reminder from gizmo with summary "%{public}@" and identifier %{public}@
Reminder with identifier %{public}@ is completed, completion date is %{public}@
List %{public}@ does not exist, aborting
Got an update/add for reminder, old list id = %{public}@, current list id = %{public}@
Lists don't match, so deleting from old list: old list id = %{public}@, current list id = %{public}@
Lists match, so reminder didn't move: old list id = %{public}@, current list id = %{public}@
Got an update/add for reminder "%{public}@", no old list id was sent, so this is from an old record map and falling back to old code to check and delete from any old list. The current list id = %{public}@
Reminder for identifier %{public}@ not found (%@)
No ReminderChangeItem was created. ICS importing failed?
Input to _ensureReminderInList is nil (%@, %@, %@). Skipping.
Unexpected wrapper type %lu for identitifer %{public}@
Found no matches for potential deletion of moved reminder %{public}@ with error %@
Marking default list in wrapper to list with name %{public}@, identifier %{public}@
fetchReminderWithObjectID returned nil, objectID: %{public}@
Deleting account with identifier %{public}@
Cannot delete; no account exists for identifier %{public}@
Cannot delete; no list exists for identifier %{public}@
Cannot delete; no reminder exists for identifier %{public}@
Updating list with title %{public}@, identifier %{public}@
Created list with title %{public}@, identifier %{public}@
Asked to set a nonexistent list as the default. Ignoring. List identifier = %{public}@, account identifier = %{public}@
Error deleting list "%{public}@": %{public}@
Error removing reminder: %{public}@
Default Calendar Changed
Purge didn't seem to affect us.
Looks like we were purged. Full sync coming up.
Registered for change tracking, seqNo: %d
Ignoring delta sync request as sync coordinator says it is not time.
Sync attempt ignored as there are no pending changes.
%{public}s: Ignoring EventKit code path for sync'ing local reminders-only source %{public}@
Sending mixed entity source %{public}@ from EventKit
%{public}s: Ignoring EventKit code path for sync'ing calendar %{public}@
Sending mixed entity calendar %@ from EventKit
publicObjectWithObjectID returned nil. ObjectID: %{public}@
Reading events
%{public}s: Ignoring EventKit code path for sync'ing reminders
Pulled -1 from lastSequenceNumber.
%{public}s: Saw sequence number failure already. Still waiting for corrective sync to complete.
Timed out trying to fetch changes from database.
Previous sequence number: %d, current sequence number: %d
Change log numbers went backward, forcing full sync (phone only)
Change log truncated
fetchChangesInto: Fetching default calendars
fetchChangesInto: Changed default task calendar
fetchChangesInto: Unchanged default task calendar
fetchChangesInto: Changed default event calendar
fetchChangesInto: Unchanged default events calendar
fetchChangesInto: Done fetching default calendars
Updates is NULL. This shouldn't happen.
EventKit: Change set is empty.
fetchChanges: Timeout out waiting for database to respond.
It's kinda weird but I'm rolling the changelog sequence number back.
Moved stored change number from %d to %d
Setting anchor sequence number: %d
%{public}s: Ignoring EventKit code path for getting previous default task calendar
%{public}s: Ignoring EventKit code path for setting previous default task calendar
%{public}s%{public}@, %{public}@, %{public}@, %{public}@
%{public}s%{public}@
%{public}s%{public}@, %{public}@
%{public}s%{public}@, %{public}@, %{public}@
--empty--
Sync attempt deferred as dataaccess is busy.
Error fetching reminder accounts for lists: %{public}@
Pulled nil from changeTrackingStateMap.
Synthesizing delete for REMAccount %{public}@
Previous sequence number: %@, current sequence number: %@
Found marked as delete reminder %{public}@
Found marked as delete list %{public}@
Unhandled object with markedForDeletion update %{public}@
fetchChangesInto: Fetching default list
fetchChangesInto: Changed default list
fetchChangesInto: Unchanged default list
fetchChangesInto: Done fetching default list
ReminderKit: Change set is empty.
Loaded change tracking state map %@
Saved change tracking state map %@
No previous NEKReminderChangeTrackingStateMap found
Error deserializing NEKReminderChangeTrackingStateMap archive. (%@)
Decoded NEKReminderChangeTrackingStateMap. %@
Encoded NEKReminderChangeTrackingStateMap: %@ (encoded=%@)
Tracking more than one store is not supported. Behavior is undefined.
Error fetching accounts %@
Error fetching changes for account %{public}@ with state %{public}@, assuming changes are truncated: %@
Fetched auxiliary delete change info %@ for object ID %{public}@
Old list ID %{public}@ for deleted reminder %{public}@
Fetched auxiliary move change info %@ for object ID %{public}@
Old list ID %{public}@ for moved reminder %{public}@
Error fetching auxiliary change info %@
SignalHandler, SIGTERM
SignalHandler, SIGQUIT
Manually triggered state dump
Checkin activity state: %s
Checkin criteria: %p
Running
Received an odd state in checkin: %d.
fireIn: %d
fireIn disregarded for previous scheduled timer
fireOnConnection
fireNever
Set activity state to %s
activityComplete
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.nano.nanoregistry</key>
<true/>
<key>com.apple.private.calendar.changeIdTrackingOverride</key>
<true/>
<key>com.apple.private.calendar.syncclient</key>
<true/>
<key>com.apple.private.calendar.watchos-mutable-database</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.eventkitmutation</string>
<string>com.apple.private.alloy.eventkitsync</string>
</array>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceCalendar</string>
<string>kTCCServiceReminders</string>
</array>
</dict>
</plist>
