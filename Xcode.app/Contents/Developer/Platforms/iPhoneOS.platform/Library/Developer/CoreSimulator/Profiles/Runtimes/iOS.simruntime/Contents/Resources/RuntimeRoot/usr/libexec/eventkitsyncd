333333
removeAllObjects
addObject:
count
objectAtIndex:
description
dictionaryRepresentation
stringWithFormat:
dictionary
numberWithDouble:
setObject:forKey:
initWithCapacity:
countByEnumeratingWithState:objects:count:
addItems:
itemsCount
clearItems
itemsAtIndex:
allocWithZone:
init
copyWithZone:
isMemberOfClass:
isEqual:
hash
itemsType
setStart:
setHasStart:
hasStart
setEnd:
setHasEnd:
hasEnd
readFrom:
writeTo:
copyTo:
mergeFrom:
start
items
setItems:
.cxx_destruct
_end
_start
_items
_has
TB,N
Td,N,V_start
Td,N,V_end
T@"NSMutableArray",&,N,V_items
appendFormat:
appendString:
copy
entityType
setEntityType:
selfAttendeeEmail
setSelfAttendeeEmail:
selfAttendeeUUID
setSelfAttendeeUUID:
selfOrganizerEmail
setSelfOrganizerEmail:
selfOrganizerUUID
setSelfOrganizerUUID:
attendeeStatus
setAttendeeStatus:
invitationStatus
setInvitationStatus:
properInvitationStatus
setProperInvitationStatus:
hasProperInvitationStatus
setHasProperInvitationStatus:
identifier
setIdentifier:
dateChanged
setDateChanged:
timeChanged
setTimeChanged:
titleChanged
setTitleChanged:
locationChanged
setLocationChanged:
attendeeComment
setAttendeeComment:
attendeeStatusFlag
setAttendeeStatusFlag:
startDate
setStartDate:
externalID
setExternalID:
locationPredictionState
setLocationPredictionState:
_hasProperInvitationStatus
_dateChanged
_timeChanged
_titleChanged
_locationChanged
_attendeeComment
_attendeeStatusFlag
_entityType
_selfAttendeeEmail
_selfAttendeeUUID
_selfOrganizerEmail
_selfOrganizerUUID
_attendeeStatus
_invitationStatus
_properInvitationStatus
_identifier
_startDate
_externalID
_locationPredictionState
TQ,N,V_entityType
T@"NSString",&,N,V_selfAttendeeEmail
T@"NSString",&,N,V_selfAttendeeUUID
T@"NSString",&,N,V_selfOrganizerEmail
T@"NSString",&,N,V_selfOrganizerUUID
Tq,N,V_attendeeStatus
TQ,N,V_invitationStatus
TQ,N,V_properInvitationStatus
TB,N,V_hasProperInvitationStatus
T@"NSString",C,N,V_identifier
TB,N,V_dateChanged
TB,N,V_timeChanged
TB,N,V_titleChanged
TB,N,V_locationChanged
TB,N,V_attendeeComment
TB,N,V_attendeeStatusFlag
T@"NSDate",&,N,V_startDate
T@"NSString",C,N,V_externalID
Tq,N,V_locationPredictionState
properties
allValues
UUID
UUIDString
NEKFluff
length
NEKSqueeze
eks_garbageUUID
objectForKey:
objectForKeyedSubscript:
settablePropertiesForCalendarItemIdentifier:
propertiesForCalendarItemIdentifier:
numberWithUnsignedInteger:
numberWithInteger:
keyEnumerator
title
oldCalendarIdentifier
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
objectIdentifier
sequencer
changeType
T@"NSString",R,N
Tq,R,N
ICSWrapperMetadata
ICSData
setICSData:
hasPropertiesForIdentifier:
setMetadata:forCalendarItemIdentifier:
startDateMap
setDateChanged:forIdentifier:
dateChangedForIdentifier:
setTimeChanged:forIdentifier:
timeChangedForIdentifier:
setTitleChanged:forIdentifier:
titleChangedForIdentifier:
setLocationChanged:forIdentifier:
locationChangedForIdentifier:
setAttendeeComment:forIdentifier:
attendeeCommentForIdentifier:
setSelfAttendeeEmail:forIdentifier:
selfAttendeeEmailForIdentifier:
setSelfAttendeeUUID:forIdentifier:
selfAttendeeUUIDForIdentifier:
setSelfOrganizerEmail:forIdentifier:
selfOrganizerEmailForIdentifier:
setSelfOrganizerUUID:forIdentifier:
selfOrganizerUUIDForIdentifier:
setInvitationStatus:forIdentifier:
invitationStatusForIdentifier:
setProperInvitationStatus:forIdentifier:
properInvitationStatusForIdentifier:
setLocationPredictionState:forIdentifier:
locationPredictionStateForIdentifier:
setAttendeeStatus:forIdentifier:
attendeeStatusForIdentifier:
setAttendeeStatusFlag:forIdentifier:
attendeeStatusFlagForIdentifier:
setExternalID:forIdentifier:
externalIDForIdentifier:
setStartDate:forIdentifier:
startDateForIdentifier:
enumerateCalendarItemIdentifiersUsingBlock:
entityTypeForCalendarItemWithIdentifier:
objectTypeForCalendarItemWithIdentifier:
lzfseICSData
setLzfseICSData:
calendarIdentifier
setCalendarIdentifier:
setOldCalendarIdentifier:
oldIdentifier
setOldIdentifier:
nuevoIdentifier
setNuevoIdentifier:
calendarItemCount
setCalendarItemCount:
isTaskCompleted
setTaskCompleted:
taskCompletionDate
setTaskCompletionDate:
displayOrder
setDisplayOrder:
isReminderWithLocation
setIsReminderWithLocation:
setStartDateMap:
setProperties:
syncId
setSyncId:
_zICSData
_rICSData
_title
_taskCompleted
_isReminderWithLocation
_lzfseICSData
_calendarIdentifier
_oldCalendarIdentifier
_oldIdentifier
_nuevoIdentifier
_calendarItemCount
_taskCompletionDate
_displayOrder
_startDateMap
_properties
_syncId
T@"NSMutableDictionary",&,N,V_properties
Tq,N,V_calendarItemCount
T@"NSString",C,N,V_syncId
T@"NSData",&,N
T@"NSData",&,N,V_lzfseICSData
T@"NEKCalendarID",&,N,V_calendarIdentifier
T@"NSString",&,N,V_oldCalendarIdentifier
T@"NSString",&,N,V_oldIdentifier
T@"NSString",&,N,V_nuevoIdentifier
T@"NSString",R,N,V_title
taskCompleted
TB,N,GisTaskCompleted,V_taskCompleted
Td,N,V_taskCompletionDate
Tq,N,V_displayOrder
TB,N,V_isReminderWithLocation
T@"NSDictionary",&,N,V_startDateMap
cachedCopy:
setName:
setEnvironment:
setMean:
setStddev:
setAlpha:
setFailureScaling:
setSigmaSpan:
setFailTimeout:
setMinTimeout:
setMaxTimeout:
name
environment
tinyStore
getDoubleValueForKey:default:
setFirstTimeEver:
setVariance:
mean
setDoubleValue:forKey:
variance
failTimeout
firstTimeEver
alpha
failureScaling
_clip:
nextTimeout
minTimeout
sigmaSpan
stddev
maxTimeout
initWithEnvironment:name:defaultMean:defaultStddev:
load
save
updateSuccess:
updateFailure
_firstTimeEver
_mean
_alpha
_failureScaling
_sigmaSpan
_minTimeout
_maxTimeout
_name
_environment
_variance
_failTimeout
T@"NSString",&,N,V_name
T@"NEKEnvironment",W,N,V_environment
TB,N,V_firstTimeEver
Td,N,V_variance
Td,N,V_failTimeout
Td,N,V_mean
Td,N
Td,N,V_alpha
Td,N,V_failureScaling
Td,N,V_sigmaSpan
Td,N,V_minTimeout
Td,N,V_maxTimeout
daCalendarItemUniqueIdentifier
setMode:
localAccountID
fetchAccountWithObjectID:error:
eks_localAccount
fetchListsWithError:
firstObject
eks_defaultLocalList
eks_storeForSyncing
dbFileManager
initWithDatabaseManager:
initWithEnvironment:
recordMap
lock
wait
broadcast
unlock
pairingID
initWithFileManager:
isEventKitSyncEnabledForReminderKit
instance
seenMap
syncCoordinator
syncController
clientName
setSyncController:
analytics
isReminderKitEnabled
daemon
setDaemon:
setAnalytics:
_lock
_controllerCondition
_syncController
_dbFileManager
_tinyStore
_recordMap
_seenMap
_syncCoordinator
_analytics
_clientName
_daemon
T@"NEKDatabaseFileManager",R,N
T@"NEKTinyStore",R,N
T@"NEKRecordMap",R,N
T@"NEKSeenMap",R,N
T@"NEKSyncCoordinator",R,N
T@"NEKSyncController",&,N
T@"NEKDaemon",&,N,V_daemon
T@"NEKSessionAnalytics",&,N,V_analytics
TB,R,N
initWithSourceIdentifier:attributes:calendarIdentifier:
storeIdentifier
attributes
isDefaultTaskCalendar
setIsDefaultTaskCalendar:
isDefaultEventCalendar
setIsDefaultEventCalendar:
_isDefaultTaskCalendar
_isDefaultEventCalendar
_storeIdentifier
_attributes
T@"NSString",&,N,V_calendarIdentifier
T@"NEKSourceID",R,N,V_storeIdentifier
T@"NEKCalendarAttributes",R,N,V_attributes
TB,N,V_isDefaultTaskCalendar
TB,N,V_isDefaultEventCalendar
alarms
trigger
structuredLocation
list
initWithList:
store
arrayWithObjects:count:
setPropertiesForWrapper:withReminders:oldListIdentifier:sendAllProperties:store:list:
icsTodoFromReminder:exportingOption:
initWithData:encoding:
string
icsDisplayOrder
externalIdentifier
objectID
uuid
isCompleted
completionDate
timeIntervalSinceReferenceDate
remObjectID
eks_debugDesc
setAllPropertiesForReminder:identifier:wrapper:store:list:oldListIdentifier:
setMinimalPropertiesForReminder:identifier:wrapper:
wrapperForReminder:oldListIdentifier:store:
x_calendarserver_access
setX_calendarserver_access:
setComponents:options:
initWithCalendar:
ICSDataWithOptions:
numberWithBool:
setPersistentID:
hasPersistentID
setIsLocalStore:
setHasIsLocalStore:
hasIsLocalStore
persistentID
isLocalStore
_persistentID
_isLocalStore
T@"NSString",&,N,V_persistentID
TB,N,V_isLocalStore
initWithSource:
initWithAttributes:
initWithPersistentID:isLocalStore:
initWithUUIDString:
objectIDWithUUID:
initWithAccount:
accountForStore:identifier:
path
initWithPath:
initWithPath:queue:
initWithPath:queue:readOnly:
initWithOptions:capacity:
UTF8String
_bootstrap
date
initWithCalendarIdentifier:
components:fromDate:
year
month
hour
minute
second
stringByReplacingOccurrencesOfString:withString:
_recreatePath
_createParentDirectory
_openDatabase
_prepDatabase
_watchWalFile
delegate
newFileName:
_newPath
defaultManager
stringByDeletingLastPathComponent
dictionaryWithObjects:forKeys:count:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
domain
isEqualToString:
code
readOnly
_makeSqlErrorReasonString:
exceptionWithName:reason:userInfo:
_executeSql:
initWithName:
addSchema:
_databaseChangedExternally
databaseChangedExternally
setDb:
createTables
instanceName
currentVersion
_instanceVersion:
migrateFrom:
_setInstance:version:
member:
_addSchema:
_parseSql:andRun:
initWithQueue:text:
indexOfObject:
lastObject
removeObject:
setParsed:
setRawDb:
removeObjectAtIndex:
insertObject:atIndex:
resetBindCursor
_loadCache:sqlErr:
parsed
getIntegerForKey:default:
setInteger:forKey:
cache:willEvictObject:
begin
commit
rollback
executeSql:
parseSql:andRun:
initWithURL:
changes
setPath:
setReadOnly:
setDelegate:
pathTemplate
setPathTemplate:
_statementCache
_instanceVersions
_readFd
_readSource
_memberSchemasLock
_memberSchemas
_readOnly
_path
_delegate
_pathTemplate
T^{sqlite3=},N,V_db
T@"NSString",&,N,V_pathTemplate
T@"NSString",&,N,V_path
TB,N,V_readOnly
T@"<NDTSQFileDelegate>",W,N,V_delegate
setSourceIdentifier:
setAttributes:
hasSourceIdentifier
hasCalendarIdentifier
hasAttributes
setHasIsDefaultTaskCalendar:
hasIsDefaultTaskCalendar
setHasIsDefaultEventCalendar:
hasIsDefaultEventCalendar
hasOldCalendarIdentifier
sourceIdentifier
_sourceIdentifier
T@"NEKPBSourceID",&,N,V_sourceIdentifier
T@"NEKPBCalendarAttributes",&,N,V_attributes
calendar
eks_compoundIdentifier
storeForEventWithEnvironment:
storeForReminderWithEnvironment:
freshEventStoreFor:
saveEventStore:
removeAllItems
updateSource:store:
updateCalendar:store:
updateICS:store:session:
deleteItem:store:
deleteObjectByID:store:
changeObserver
setChangeObserver:
_changeObserver
T@"<NEKChangeObserver>",&,N,V_changeObserver
predicateWithBlock:
source
sourceType
isDelegate
targetableDevice
systemBuildVersion
compare:options:range:
type
account
isGroup
daIsEventOnlyContainer
daIsNotificationsCollection
eventStore
defaultLocalCalendar
numberWithInt:
numberWithUnsignedLongLong:
setUUID:
setTitle:
setType:
setDigest:
setSymbolicColorName:
setColorString:
setSharedOwnerName:
setSharedOwnerAddress:
setPublishedURLString:
setExternalIdentificationTag:
setSyncToken:
setExternalModificationTag:
setExternalRepresentation:
setNotes:
setSubCalAccountID:
setPushKey:
setSelfIdentityDisplayName:
setSelfIdentityEmail:
setSelfIdentityAddressString:
setSelfIdentityFirstName:
setSelfIdentityLastName:
setOwnerIdentityDisplayName:
setOwnerIdentityEmail:
setOwnerIdentityAddressString:
setOwnerIdentityFirstName:
setOwnerIdentityLastName:
hasUUID
hasTitle
setIsReadonly:
setHasIsReadonly:
hasIsReadonly
setIsHidden:
setHasIsHidden:
hasIsHidden
setIsImmutable:
setHasIsImmutable:
hasIsImmutable
setIsInbox:
setHasIsInbox:
hasIsInbox
setIsNotificationsCollection:
setHasIsNotificationsCollection:
hasIsNotificationsCollection
setIsSharingInvitation:
setHasIsSharingInvitation:
hasIsSharingInvitation
setIsSubscribed:
setHasIsSubscribed:
hasIsSubscribed
setIsHolidayCalendar:
setHasIsHolidayCalendar:
hasIsHolidayCalendar
setIsFamilyCalendar:
setHasIsFamilyCalendar:
hasIsFamilyCalendar
setIsIgnoringEventAlerts:
setHasIsIgnoringEventAlerts:
hasIsIgnoringEventAlerts
setIsIgnoringSharedCalendarNotifications:
setHasIsIgnoringSharedCalendarNotifications:
hasIsIgnoringSharedCalendarNotifications
setIsSchedulingProhibited:
setHasIsSchedulingProhibited:
hasIsSchedulingProhibited
setIsDefaultCalendarForStore:
setHasIsDefaultCalendarForStore:
hasIsDefaultCalendarForStore
hasType
hasDigest
hasSymbolicColorName
hasColorString
setHasDisplayOrder:
hasDisplayOrder
setSharingStatus:
setHasSharingStatus:
hasSharingStatus
hasSharedOwnerName
hasSharedOwnerAddress
setSharingInvitationResponse:
setHasSharingInvitationResponse:
hasSharingInvitationResponse
hasPublishedURLString
setCanBePublished:
setHasCanBePublished:
hasCanBePublished
setCanBeShared:
setHasCanBeShared:
hasCanBeShared
setIsPublished:
setHasIsPublished:
hasIsPublished
hasExternalID
hasExternalIdentificationTag
hasSyncToken
hasExternalModificationTag
hasExternalRepresentation
setSupportedEntityTypes:
setHasSupportedEntityTypes:
hasSupportedEntityTypes
setHasInvitationStatus:
hasInvitationStatus
setHasBeenAlerted:
setHasHasBeenAlerted:
hasHasBeenAlerted
hasNotes
hasSubCalAccountID
hasPushKey
hasSelfIdentityDisplayName
hasSelfIdentityEmail
hasSelfIdentityAddressString
hasSelfIdentityFirstName
hasSelfIdentityLastName
hasOwnerIdentityDisplayName
hasOwnerIdentityEmail
hasOwnerIdentityAddressString
hasOwnerIdentityFirstName
hasOwnerIdentityLastName
uUID
isReadonly
isHidden
isImmutable
isInbox
isNotificationsCollection
isSharingInvitation
isSubscribed
isHolidayCalendar
isFamilyCalendar
isIgnoringEventAlerts
isIgnoringSharedCalendarNotifications
isSchedulingProhibited
isDefaultCalendarForStore
digest
symbolicColorName
colorString
sharingStatus
sharedOwnerName
sharedOwnerAddress
sharingInvitationResponse
publishedURLString
canBePublished
canBeShared
isPublished
externalIdentificationTag
syncToken
externalModificationTag
externalRepresentation
supportedEntityTypes
hasBeenAlerted
notes
subCalAccountID
pushKey
selfIdentityDisplayName
selfIdentityEmail
selfIdentityAddressString
selfIdentityFirstName
selfIdentityLastName
ownerIdentityDisplayName
ownerIdentityEmail
ownerIdentityAddressString
ownerIdentityFirstName
ownerIdentityLastName
_sharingInvitationResponse
_sharingStatus
_supportedEntityTypes
_colorString
_digest
_externalIdentificationTag
_externalModificationTag
_externalRepresentation
_notes
_ownerIdentityAddressString
_ownerIdentityDisplayName
_ownerIdentityEmail
_ownerIdentityFirstName
_ownerIdentityLastName
_publishedURLString
_pushKey
_selfIdentityAddressString
_selfIdentityDisplayName
_selfIdentityEmail
_selfIdentityFirstName
_selfIdentityLastName
_sharedOwnerAddress
_sharedOwnerName
_subCalAccountID
_symbolicColorName
_syncToken
_type
_uUID
_canBePublished
_canBeShared
_hasBeenAlerted
_isDefaultCalendarForStore
_isFamilyCalendar
_isHidden
_isHolidayCalendar
_isIgnoringEventAlerts
_isIgnoringSharedCalendarNotifications
_isImmutable
_isInbox
_isNotificationsCollection
_isPublished
_isReadonly
_isSchedulingProhibited
_isSharingInvitation
_isSubscribed
T@"NSString",&,N,V_uUID
T@"NSString",&,N,V_title
TB,N,V_isReadonly
TB,N,V_isHidden
TB,N,V_isImmutable
TB,N,V_isInbox
TB,N,V_isNotificationsCollection
TB,N,V_isSharingInvitation
TB,N,V_isSubscribed
TB,N,V_isHolidayCalendar
TB,N,V_isFamilyCalendar
TB,N,V_isIgnoringEventAlerts
TB,N,V_isIgnoringSharedCalendarNotifications
TB,N,V_isSchedulingProhibited
TB,N,V_isDefaultCalendarForStore
T@"NSString",&,N,V_type
T@"NSData",&,N,V_digest
T@"NSString",&,N,V_symbolicColorName
T@"NSString",&,N,V_colorString
Ti,N,V_displayOrder
TQ,N,V_sharingStatus
T@"NSString",&,N,V_sharedOwnerName
T@"NSString",&,N,V_sharedOwnerAddress
TQ,N,V_sharingInvitationResponse
T@"NSString",&,N,V_publishedURLString
TB,N,V_canBePublished
TB,N,V_canBeShared
TB,N,V_isPublished
T@"NSString",&,N,V_externalID
T@"NSString",&,N,V_externalIdentificationTag
T@"NSString",&,N,V_syncToken
T@"NSString",&,N,V_externalModificationTag
T@"NSData",&,N,V_externalRepresentation
TQ,N,V_supportedEntityTypes
TB,N,V_hasBeenAlerted
T@"NSString",&,N,V_notes
T@"NSString",&,N,V_subCalAccountID
T@"NSString",&,N,V_pushKey
T@"NSString",&,N,V_selfIdentityDisplayName
T@"NSString",&,N,V_selfIdentityEmail
T@"NSString",&,N,V_selfIdentityAddressString
T@"NSString",&,N,V_selfIdentityFirstName
T@"NSString",&,N,V_selfIdentityLastName
T@"NSString",&,N,V_ownerIdentityDisplayName
T@"NSString",&,N,V_ownerIdentityEmail
T@"NSString",&,N,V_ownerIdentityAddressString
T@"NSString",&,N,V_ownerIdentityFirstName
T@"NSString",&,N,V_ownerIdentityLastName
syncStateDBPathFor:
_convertIfNeeded:
fileExistsAtPath:
_loadPlistFrom:
_migrateIntegerFrom:key:
_migrateStringFrom:key:
_migrateDoubleFrom:key:
removeItemAtPath:error:
integerValue
setIntegerValue:forKey:
setStringValue:forKey:
doubleValue
setString:forKey:
getStringForKey:default:
compareAndSwapIntegerValue:expectedExistingValue:forKey:
setDouble:forKey:
getDoubleForKey:default:
deleteValueForKey:
dataWithContentsOfFile:
propertyListWithData:options:format:error:
getStringValueForKey:default:
getIntegerValueForKey:default:
_queue
_store
_file
initWithFile:
initWithData:
data
setData:
msgType
setMsgType:
responseIdentifier
setResponseIdentifier:
_data
_msgType
_responseIdentifier
T@"NSData",&,N,V_data
T@"NSString",&,N,V_msgType
T@"NSString",&,N,V_responseIdentifier
initWithIDSServiceName:logging:
initWithService:
addDelegate:queue:
setObject:forKeyedSubscript:
dataUsingEncoding:
appendBytes:length:
appendData:
getBytes:range:
subdataWithRange:
idsOptions
mutableCopy
_makeWireMessageType:content:
setWithObject:
sendData:toDestinations:priority:options:identifier:error:
fileURLWithPath:
sendResourceAtURL:metadata:toDestinations:priority:options:identifier:error:
_rawSendData:type:responseIdentifier:error:
_rawSendFile:type:responseIdentifier:error:
removeObjectForKey:
_makeMessageFromWireData:
incomingResponseIdentifier
outgoingResponseIdentifier
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:linkedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantUpdate:context:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
initWithIDSServiceName:
registerMessageType:handler:
resume
setPriority:
setCloudFallback:
sendMessage:responseHandler:completion:
reply:to:completion:
setIdsOptions:
_outstanding
_handlers
_service
_priority
_logFacility
_suspended
_cloudFallback
_idsOptions
T@"NSDictionary",&,N,V_idsOptions
lastPathComponent
fileSystemRepresentation
dateByAddingTimeInterval:
_countEvents
dateWithTimeIntervalSinceReferenceDate:
endDate
masterCount
setMasterCount:
occurrenceCount
setOccurrenceCount:
showAlert
setShowAlert:
eks_eventOnlyStoreFor:
sources
allCalendars
predicateForMasterEventsWithOccurrencesWithStartDate:endDate:inCalendar:
eventObjectIDsMatchingPredicate:
predicateForEventsWithStartDate:endDate:calendars:
setDateFormat:
systemTimeZone
setTimeZone:
stringFromDate:
validationWrapperForSameSpan:
validationWrapperForRightNow
validationWrapperForPb:
validationEnabled
validate
_showAlert
_masterCount
_occurrenceCount
T@"NSDate",&,N,V_start
T@"NSDate",&,N,V_end
Tq,N,V_masterCount
Tq,N,V_occurrenceCount
TB,N,V_showAlert
bindString:
step
fetchInteger
bindInteger:
fetchDouble
bindDouble:
fetchString
fetchBlob
bindBlob:
getDataForKey:default:
setData:forKey:
_insert
_exchange
_select
_delete
_baseName
setExternalId:
hasName
hasExternalId
externalId
_externalId
T@"NSString",&,N,V_externalId
setCountLimit:
identifierInRowMappingForRecordIDRef:
calendarIdentifierInRowMappingForRecordIDRef:
initWithIdentifier:calendarIdentifier:type:
stringRepresentation
deletionWrapperForRecordID:eventStore:
deletionWrapperForSourceID:
_treeReportFor:
dataWithJSONObject:options:error:
writeToFile:options:error:
duplicateCheck
_duplicatesTreeFrom:
occurrenceCache
_driftMetricFor:
calendars
runFrom:to:
forEachUnique:
makeReportWithModel:
stores
setStores:
setCalendars:
tasks
setTasks:
events
setEvents:
_stores
_calendars
_tasks
_events
T@"NSArray",&,N,V_stores
T@"NSArray",&,N,V_calendars
T@"NSArray",&,N,V_tasks
T@"NSArray",&,N,V_events
changeObserverForEventWithQueue:databaseController:environment:
initWithCustomClientId:
eks_eventOnlyStoreIgnoringExternalChangesFor:withClientId:
commit:
nowMinusPrevious:
dirtyMemory
wallTime
_commitPendingRecordMapChanges
removeAllRecords
defaultCalendarForNewReminders
defaultCalendarForNewEvents
uniqueId
isPhantom
isDetached
originalItem
containsObject:
_shouldSendEvent:
_shouldSendReminder:
localSource
isBirthdayStore
localBirthdayCalendarSource
accountPersistentID
eventSources
allowsEvents
allowsTasks
_updateSource:withSourceWrapper:store:
saveSource:commit:error:
_createSourceForWrapper:store:
isTemporary
setIdentifier:masterRowID:summary:location:startTime:forRecordID:
calendarWithIdentifier:
_updateCalendar:withCalendarWrapper:
saveCalendar:commit:error:
_checkAndSetDefaultCalendar:calendarWrapper:store:
performUpdateWithICSWrappers:store:session:
_deleteSourceWithIdentifier:store:
_deleteCalendarWithIdentifier:store:
_deleteEventWithIdentifier:calendarIdentifier:store:
_deleteReminderWithIdentifier:calendarIdentifier:store:
applySidePropertiesToEntity:withWrapper:session:
_didCreateEntity:
updateRowMappingForEntity:
selfAttendee
participantStatus
setParticipationStatus:
isMasterOrDetachedOccurrence
saveEvent:span:commit:error:
setCompletionDate:
participationStatus
rowID
dictionaryWithCapacity:
calendarItemsWithExternalIdentifier:
calendarItemExternalIdentifier
updateEvent:identifier:eventStore:occurrenceDate:participationStatus:masterIdentifier:isMaster:
detachedItems
originalStartDate
longLongValue
persistentObject
initWithPersistentObject:occurrenceDate:
eventForUID:occurrenceDate:
intValue
eventWithUniqueId:
componentsSeparatedByString:
objectAtIndexedSubscript:
eventsWithExternalIdentifier:inCalendars:
handleUpdatedItemFromGizmo:type:withWrapper:identifier:
detacheesForIdentifierCreatingIfNeeded:detachedEventMap:
hasRecurrenceRules
remindersWithExternalIdentifier:inCalendars:
base64EncodedStringWithOptions:
calendarInStore:withNEKCalendarID:
handleCalendarTaskWithUniqueIdentifierFromGizmo:calendar:wrapper:
handleCalendarEventWithUniqueIdentifierFromGizmo:calendar:wrapper:detachedEventMap:
calendarItemsWithExternalIdentifier:inCalendars:
updateMasterEvent:masterIdentifier:calendarIdentifier:masterParticipationStatus:detachedEvents:
allObjects
removeEvent:span:error:
_deleteCalendarItemsInICSWrapperFromOldCalendar:store:
_deleteCalendarItemsMovedToCalendar:inICSWrapper:
handleNewEntity:withWrapper:session:
_filterOutInvalidICSWrappers:store:calendars:
_processUpdateFromWatch:calendar:store:
_processUpdateWithICS:store:calendar:resultWrappers:resultCalendars:
importICSData:intoCalendars:options:
_processArrayOfArrayOfICSWrappers:batchWrappers:session:
_removeIdentifierForDeletedEntity:
calendarItemsWithUniqueIdentifier:inCalendar:
_deleteDetachedCalendarItemsFromOldCalendar:deletedEvents:
removeReminder:commit:error:
setUniqueId:
updateSelfAttendeeForCalendarItem:identifier:withWrapper:
unsignedIntegerValue
updateInvitationStatusForCalendarItem:identifier:withWrapper:session:
saveEvent:span:error:
saveReminder:error:
attendees
emailAddress
absoluteString
setSelfAttendee:
organizer
setCurrentUser:
setOrganizer:
isResetSync
eks_cacheKey
initWithEventStore:cause:
fetch:
owner
updates
setUpdates:
enumerateForChangeType:forEntitiesOfClass:withBlock:
insertedOrUpdatedSources
wrapperForSource:
push:
getDefaultTaskCalendar:defaultEventCalendar:store:
publicObjectWithObjectID:
wrapperForCalEntity:
identifierForRecordID:
wrapperForCalendar:useAttributes:
startMappingEntities
initForFullSync:tinyStore:
eventInFuture:inStore:
eventInWindow:inStore:
shouldSendEntity:
wrapperForCalendarItem:needsInvite:eventStore:
hasRowMappingForEntity:
endMappingEntities
deletes
deletedSourcesIDs
wrapperForCalendar:
wrapperForCalendarItem:
initWithCalendarRef:useAttributes:
_identifierInRowMapping:
location
isIdentifierPresent:forRecordID:
deleteIdentifierForRecordID:
sweep
sourceWithIdentifier:
removeSource:commit:error:
removeCalendar:commit:error:
_deleteAndLogEvent:identifier:store:
configureSource:inStore:withAttributes:
sourceWithEventStore:
didCalendarChange:
configureCalendar:inDatabase:withAttributes:
isEqualToNEKSourceID:
calendarForEntityTypes:eventStore:
calendarForEntityType:eventStore:
eventSourceForDatabase:identifier:
setSource:
_sendChangesIfAvailable
purgeRecordMap
deleteItemWithIdentifier:store:
addAttendeeEvents:
storeWrappersForSourceAggregator:pipe:
calendarWrappersForChangeSet:pipe:
ICSWrappersForChangeSet:pipe:
deletionWrappersForChangeSet:skipSourceDeletions:pipe:
deletionWrappersForSourceAggregator:pipe:
identifierInRowMappingForEventOrTask:
calendarIdentifierInRowMappingForEventOrTask:
removeIdentifiersForDeletedRecordIDs:
sweepSeenMap
_createCalendarForWrapper:store:
_ICSLogTestForWrapper:
_flushQueue
_createdEntities
_createdEntitiesLock
_idleBlockQueue
_pipeQueue
_syncedEntityUniqueIdentifiers
_alertSupressionCache
setPropertiesForWrapper:withCalendarItems:needsInvite:sendAllProperties:eventStore:calendar:originalEvent:
uniqueIdentifier
canUseLzfse
ICSDataForCalendarItems:options:
isCurrentUser
setAllPropertiesForItem:identifier:wrapper:needsInvite:eventStore:calendar:
setMinimalPropertiesForItem:identifier:wrapper:
dict
isEqualToNumber:
numberWithLong:
setDict:
_dict
T@"NSMutableDictionary",&,N,V_dict
syncCoordinatorWithServiceName:
syncRestriction
setSession:
session
syncSessionType
defaultCenter
receivedStartSyncNotificationString
postNotificationName:object:
receivedReunionSyncNotificationString
syncCoordinator:beginSyncSession:
syncCoordinator:didInvalidateSyncSession:
syncCoordinatorDidChangeSyncRestriction:
supportsMigrationSync
syncCoordinatorDidReceiveStartSyncCommand:
okToPerformDeltaSync
setSyncCoordinator:
_shadowLock
_syncRestrictionShadow
_session
T@"PSYSyncCoordinator",&,N,V_syncCoordinator
T@"PSYServiceSyncSession",&,N,V_session
setHasStartDate:
hasStartDate
setEndDate:
setHasEndDate:
hasEndDate
setHasMasterCount:
hasMasterCount
setHasOccurrenceCount:
hasOccurrenceCount
setHasShowAlert:
hasShowAlert
_endDate
Td,N,V_startDate
Td,N,V_endDate
TQ,N,V_masterCount
TQ,N,V_occurrenceCount
initWithDomain:
setWithObjects:
shared
migratePrefsIfNecessary
integerForKey:
synchronizeUserDefaultsDomain:keys:
synchronize
alertInviteeDeclines
_broadcastBool:forKey:
showDeclinedEvents
rebroadcastShowDeclinedChangeNotification
rebroadcastAlertInviteeDeclinesChangeNotification
setBool:forKey:
synchronizeNanoDomain:keys:
boolForKey:keyExistsAndHasValidFormat:
applyRebroadcastShowDeclinedEvents
applyRebroadcastAlertInviteeDeclines
enumerateKeysAndObjectsUsingBlock:
rebroadcastAllObservedNotifications
handleDarwinNotificationOfName:
_prefObserverLog
_npsManager
_domainAccessor
_keysToDirectMirrorCompanionToGizmo
_ekPrefs
component:fromDate:
_currentHour
fetchHourlyTallies:hour:
_writeTally:
countSessionType:
clearHour:
writeStackshot:
writeCrashReport:
facilityWithSubsystem:category:
_recvSetReminderKitReminderCompletedEndpoint:
_recvSetEventKitReminderCompletedEndpoint:
_recvSetParticipantStatusEndpoint:
_recvSetReminderKitAlarmSnoozeEndpoint:
_recvSetEventKitAlarmSnoozeEndpoint:
_recvDeleteEventEndpoint:
_disableMutation
hasSetParticipantStatus
setParticipantStatus
eventStoreIdentifier
itemIdentifier
eventWithIdentifier:
status
span
hasSetReminderComplete
setReminderComplete
calendarName
reminderTitle
isComplete
setCompleted:
fetchReminderWithExternalIdentifier:inList:error:
initWithStore:
setAuthor:
updateReminder:
saveSynchronouslyWithError:
hasDeleteEvent
deleteEvent
eventStart
dateWithTimeIntervalSince1970:
eventTitle
timeIntervalSince1970
enumerateEventsMatchingPredicate:usingBlock:
calendarTitle
eventIdentifier
snoozeAlarm:withTimeIntervalFromNow:
hasSetAlarmSnooze
setAlarmSnooze
hasCalendarName
hasReminderTitle
snoozeAmount
alarmIdentifier
_calendarItem:snoozeAlarmID:withTimeIntervalFromNow:
hasItemIdentifier
hasStoreIdentifier
snoozeFromNowForTimeInterval:
initWithReminderKitEnabled:clientName:
sendSetParticipantStatus:span:storeId:eventId:
sendDeleteEventId:title:start:inCalendarId:title:inSource:span:
sendSetCompleted:calendarName:title:externalIdentifier:
sendSetReminderAlarmSnooze:calendarName:title:externalIdentifier:alarmIdentifier:
sendSetEventAlarmSnooze:calendarName:storeId:eventId:alarmIdentifier:
_messaging
_messageLogging
calendarsForEntityType:
predicateForRemindersInCalendars:
fetchRemindersMatchingPredicate:completion:
startDateComponents
setStartDateComponents:
initWithDelegate:
service
completeAndFireNever
activityRun:
activityIdentifier:
activitySubsystem:
activity:customizeCriteria:
activityDefer:
_sendMessage:
_runDuplicateChecker
_runOccurrenceCacheDumper
activity
setActivity:
setService:
_activity
T@"NDTActivity",&,N,V_activity
T@"IDSService",&,N,V_service
_enableDisableLogging
userInfo
_blockUntilUnlock
_registerForNotifications
didReceiveStartSyncCommand:
addObserver:selector:name:object:
didReceiveReunionSyncCommand:
stringWithUTF8String:
_triggerFullSync
clearRetryState
clearRemoteBuildVersion
_triggerMigrationSync
shouldSyncBasedOnTime:
_triggerNightlySync
flush
setNeedsFullSync
setNeedsReunionSync
setNeedsNightlySync
setNeedsMigrationSync
_notificationQueue
_daemonQueue
_preferencesObserver
_preferencesQueue
_logDbFile
os_log_facility
setObfuscate:
obfuscate
isInternalDevice
entityName
cdEntityName
fetchReminderIncludingConcealedWithObjectID:error:
deletionWrapperForObjectID:deletedReminderAndListMapping:
inactive
defaultAlarmOffset
setDefaultAlarmOffset:
isEnabled
setIsEnabled:
isFacebookSource
setIsFacebook:
usesSelfAttendee
setUsesSelfAttendee:
constraintsDescriptionPath
setConstraintsDescriptionPath:
creatorBundleID
setCreatorBundleID:
creatorCodeSigningIdentity
setCreatorCodeSigningIdentity:
setAccountPersistentID:
supportsSharedCalendars
setSupportsSharedCalendars:
setAllowsTasks:
setAllowsEvents:
allowsCalendarAddDeleteModify
setAllowsCalendarAddDeleteModify:
onlyCreatorCanModify
setOnlyCreatorCanModify:
snoozeAlarmRequiresDetach
setSnoozeAlarmRequiresDetach:
supportsAlarmAcknowledgedDate
setSupportsAlarmAcknowledgedDate:
setIsBirthdayStore:
setImmutable:
deleteWhatever:calendarsInSource:inStore:
setSourceType:
setEnabled:
isFacebook
deleteSourcesTaskCalendars:inStore:
deleteSourcesEventCalendars:inStore:
ekEventStore
sourceWithExternalID:
inserts
enumerateObjectsUsingBlock:
initWithNEKEventStore:eventChanges:reminderChanges:
_insertedOrUpdatedSources
_deletedSourcesIDs
_ekEventStore
T@"EKEventStore",R,N,V_ekEventStore
T@"NSSet",R,N,V_insertedOrUpdatedSources
T@"NSSet",R,N,V_deletedSourcesIDs
compare:
isBefore:
isAfter:
compare:options:
_setWindowToNow
_loadLastSyncWindow
_getTestWindowStart
_getTestWindowEnd
_computeDerived
_getWindowStart
_getWindowEnd
initWithTimeIntervalSinceReferenceDate:
_spanNowTime
setTaskCutoffDate:
defaultTimeZone
_eventInWindow:inStore:
timeZone
occurrencesExistInRangeForEvent:startDate:endDate:mustStartInInterval:timezone:
taskCutoffDate
distantFuture
taskCutoff
reminderInWindow:
reminderInFuture:
spanStart
setSpanStart:
spanEnd
setSpanEnd:
setTaskCutoff:
_fwdDaysToSync
_revDaysToSync
_dontSyncDays
_spanStart
_spanEnd
_taskCutoff
_timeZone
_taskCutoffDate
Td,N,V_spanStart
Td,N,V_spanEnd
Td,N,V_taskCutoff
T@"NSTimeZone",&,N,V_timeZone
T@"NSDate",&,N,V_endDate
T@"NSDate",&,N,V_taskCutoffDate
_schemaVersion
_setSchemaVersion:
databaseID
recordChanged:
dumpToLog
_os_lock
_log
bytes
dataWithBytes:length:
setCalendarName:
setReminderTitle:
setExternalIdentifier:
setIsComplete:
setHasIsComplete:
hasIsComplete
hasExternalIdentifier
_calendarName
_externalIdentifier
_reminderTitle
_isComplete
TB,N,V_isComplete
T@"NSString",&,N,V_calendarName
T@"NSString",&,N,V_reminderTitle
T@"NSString",&,N,V_externalIdentifier
initUniquelyWithKey:localFlag:
isDefaultLocalCalendar
initWithIdentifier:isDefaultLocalCalendar:
_isDefaultLocalCalendar
T@"NSString",R,N,V_identifier
TB,R,N,V_isDefaultLocalCalendar
numberWithUnsignedInt:
setHasDefaultAlarmOffset:
hasDefaultAlarmOffset
setHasType:
setHasIsEnabled:
hasIsEnabled
setHasIsFacebook:
hasIsFacebook
setHasUsesSelfAttendee:
hasUsesSelfAttendee
hasConstraintsDescriptionPath
hasCreatorBundleID
hasCreatorCodeSigningIdentity
hasAccountPersistentID
setHasSupportsSharedCalendars:
hasSupportsSharedCalendars
setHasAllowsTasks:
hasAllowsTasks
setHasAllowsEvents:
hasAllowsEvents
setHasAllowsCalendarAddDeleteModify:
hasAllowsCalendarAddDeleteModify
setHasOnlyCreatorCanModify:
hasOnlyCreatorCanModify
setHasSnoozeAlarmRequiresDetach:
hasSnoozeAlarmRequiresDetach
setHasSupportsAlarmAcknowledgedDate:
hasSupportsAlarmAcknowledgedDate
setHasIsBirthdayStore:
hasIsBirthdayStore
_accountPersistentID
_constraintsDescriptionPath
_creatorBundleID
_creatorCodeSigningIdentity
_defaultAlarmOffset
_allowsCalendarAddDeleteModify
_allowsEvents
_allowsTasks
_isBirthdayStore
_isEnabled
_isFacebook
_onlyCreatorCanModify
_snoozeAlarmRequiresDetach
_supportsAlarmAcknowledgedDate
_supportsSharedCalendars
_usesSelfAttendee
TI,N,V_defaultAlarmOffset
TI,N,V_type
TB,N,V_isEnabled
TB,N,V_isFacebook
TB,N,V_usesSelfAttendee
T@"NSString",&,N,V_constraintsDescriptionPath
T@"NSString",&,N,V_creatorBundleID
T@"NSString",&,N,V_creatorCodeSigningIdentity
T@"NSString",&,N,V_accountPersistentID
TB,N,V_supportsSharedCalendars
TB,N,V_allowsTasks
TB,N,V_allowsEvents
TB,N,V_allowsCalendarAddDeleteModify
TB,N,V_onlyCreatorCanModify
TB,N,V_snoozeAlarmRequiresDetach
TB,N,V_supportsAlarmAcknowledgedDate
TB,N,V_isBirthdayStore
_doneForRealNotifyingPairedSync:
reportProgress:
syncDidComplete
initWithSpan:session:
pause
doneForRealNotifyingPairedSync:
_timeToLie
_isPaused
_calledDidComplete
_span
_endTime
_previousFraction
initWithMachServiceName:
_setQueue:
tc_status:
tc_setNominal
tc_setAutomaticSync:
tc_advanceChangeNumber
tc_setObjectDelay:
tc_requestDelta
tc_requestReset
tc_setMinimumSessionTimeout:
tc_setMaximumSessionTimeout:
tc_setFailureProbablity:
tc_setFixedRetryInternal:
interfaceWithProtocol:
setExportedInterface:
setExportedObject:
listener:shouldAcceptNewConnection:
listener
setListener:
_listener
T@"NSXPCListener",&,N,V_listener
dueDateComponents
setUuid:
setCalendar:
setDate:
runForNow
stringByAppendingPathComponent:
sharedInstance
waitForPairingStorePathPairingID:
pairingStorePath
daConstraintsDescriptionPath
daSupportsSharedCalendars
_addAccountWithType:name:accountObjectID:
configureAccount:accountChangeItemProvider:withAttributes:
updateAccount:
setInactive:
removeFromStore
createAccountWithSaveRequest:withAttributes:
configureAccount:withSaveRequest:withAttributes:
hasSuffix:
hasPrefix:
setValue:forKey:
recordSessionType:
setStore:
storeFile
setStoreFile:
_storeFile
T@"NEKSessionAnalyticsStore",&,N,V_store
T@"NDTSQFile",&,N,V_storeFile
dealloc
resetFetchCursor
text
bindUint64:
fetchUint64
rawDb
bindPosition
fetchPosition
columnCount
bindCount
_parsed
_rawDb
_text
T^{sqlite3_stmt=},N,V_parsed
T^{sqlite3=},N,V_rawDb
T@"NSString",R,N,V_text
initWithQueue:environment:
setWeakEventDatabaseController:
setWeakReminderDatabaseController:
changeObserverForReminderWithQueue:databaseController:environment:
T@"<NEKChangeObserverDelegate>",W,N
_keyQueue
T@"<NEKChangeObserverDelegate>",W,N,V_delegate
_changed:
setCache:
removeObserver:
_query:
cache
getActivePairedDevice
supportsCapability:
boolValue
canUseDataTransfer
_cache
T@"NSMutableDictionary",&,N,V_cache
addSources:
addCalendars:
sourcesCount
clearSources
sourcesAtIndex:
calendarsCount
clearCalendars
calendarsAtIndex:
sourcesType
calendarsType
setSources:
_sources
T@"NSMutableArray",&,N,V_sources
T@"NSMutableArray",&,N,V_calendars
resetLocalCalendarCache
initWithList:useAttributes:
_enumerateForChangeType:forEntitiesOfClass:withBlock:
isDeferrable
_createDb
_prepareStatements
dbFilename
localizedStandardCompare:
shouldShowInvite:withUUID:
didShowInvite:withUUID:
deleteInviteByUUID:
setDbFilename:
_dbQueue
_dbConn
_update
_fetch
_sweep
_dbFilename
T@"NSString",&,N,V_dbFilename
initWithFIFOLength:name:
condition
fifo
terminated
finished
setFifo:
setFinished:
conditionalPop:
setTerminated:
finish
terminate
terminateIfNotFinished
error
setError:
setLength:
setCondition:
_finished
_terminated
_error
_length
_condition
_fifo
Tq,N,V_length
T@"NSCondition",&,N,V_condition
T@"NSMutableArray",&,N,V_fifo
TB,N,V_terminated
TB,N,V_finished
T@"NSString",R,N,V_name
T@"NSError",&,N,V_error
_setClipping:
getMinimumSessionTimeout
getMaximumSessionTimeout
initWithService:priority:qos:asMasterStore:options:
setOptions:
setEngineType:
setSendingBufferCap:
setDelegate:queue:
resume:
setNeedsResetSync
_faultCount
maxDeltaRetries
setHasChangesAvailable
currentSession
storeUpdateTimeNs
setStoreUpdateTimeNs:
calendarUpdateTimeNs
setCalendarUpdateTimeNs:
eventUpdateTimeNs
setEventUpdateTimeNs:
array
reminderUpdateTimeNs
setReminderUpdateTimeNs:
reminderStore
_deleteSYObject:eventStore:reminderStore:
isSending
_retrySession:
progressLiar
getFailureProbablity
getFixedRetryInternal
valueForKey:
setPerfomanceTracker:
setObjectDelayUs:
_startSendSession:results:
_startRecvSession:results:
setSerializer:
setCanRestart:
setCanRollback:
setEventChangeObserver:
setReminderChangeObserver:
setNekEventStore:
setNekReminderStore:
fetchEverythingIntoPipe:
setChangeSupplier:
setStatsTracker:
fetchNightlyIntoPipe:
_clearToDeltaSync
fetchChangesIntoPipe:deferrable:
isTruncated
isEffectivelyEmpty
completion
scheduleDeferredRetry
setFetcher:
scheduleRetry
changeSupplier
sealCompletions
_fullSessionTimeout
setFullSessionTimeout:
fullSessionTimeout
setProgressLiar:
setMaxConcurrentMessages:
setPerMessageTimeout:
perMessageTimeout
setSessionMetadata:
statsTracker
targetIsConnected
_nextDelay:
completeAndFireIn:
completeAndFireOnConnection
bumpFaultsAndScheduleRetry
_retrySync
cancel
_setFaultCount:
_sendSessionEnded:error:
_recvSessionEnded:error:
perfomanceTracker
cpuTimeMs
_shouldFakeFailure
fetcher
join
restartTrackingChanges
changeObserverDidObserveChanges:
changeObserverDidObserveTruncation:
service:startSession:error:
service:sessionEnded:error:
service:incomingData:completion:
service:incomingStream:metadata:completion:
service:encounteredError:context:
service:willPreferSession:overSession:
service:willSwitchFromPairingID:toPairingID:
service:didSwitchFromPairingID:toPairingID:
service:targetDeviceProximityChanged:
service:targetDeviceConnectionChanged:
serviceDidPairDevice:
serviceDidUnpairDevice:
_canUseDataTransfer
createOrUpdateSYObject:eventStore:reminderStore:session:
deleteSYObject:eventStore:reminderStore:
_deleteWronglyImmutableCalendars
prepDatabasesForResetSync
isCurrentlySyncing
isPerformingBackupResetSync
setIsPerformingBackupResetSync:
_syServiceLock
_syncService
_wasUsingDataTransfer
_sessionIdleQueue
_eventStore
_reminderStore
_syncSession
_analyticsDriver
_completion
_isNightlySync
_resetTimeoutTracker
_deltaTimeoutTracker
_nightlyTimeoutTracker
_rpcEndpoint
_preemptedSessionProgressLiar
_testingControl
_sessionDepth
_isCurrentlySyncing
_isPerformingBackupResetSync
TB,N,V_isPerformingBackupResetSync
T@"<NEKSyncControllerDelegate>",W,N,V_delegate
TB,R,N,V_isCurrentlySyncing
T@"NEKStore",R,N,V_eventStore
T@"NEKStore",R,N,V_reminderStore
setStoreWrapper:
setCalendarWrapper:
setICSWrapper:
setDeletionWrapper:
setValidationWrapper:
setSetReminderComplete:
setSetParticipantStatus:
setSetAlarmSnooze:
setDeleteEvent:
setPacketNumber:
setHasPacketNumber:
hasPacketNumber
hasStoreWrapper
hasCalendarWrapper
hasICSWrapper
hasDeletionWrapper
hasValidationWrapper
packetNumber
storeWrapper
calendarWrapper
iCSWrapper
deletionWrapper
validationWrapper
_calendarWrapper
_deleteEvent
_deletionWrapper
_iCSWrapper
_packetNumber
_setAlarmSnooze
_setParticipantStatus
_setReminderComplete
_storeWrapper
_validationWrapper
TI,N,V_packetNumber
T@"NEKPBSourceWrapper",&,N,V_storeWrapper
T@"NEKPBCalendarWrapper",&,N,V_calendarWrapper
T@"NEKPBICSWrapper",&,N,V_iCSWrapper
T@"NEKPBDeletionWrapper",&,N,V_deletionWrapper
T@"NEKPBValidationWrapper",&,N,V_validationWrapper
T@"NEKPBSetReminderComplete",&,N,V_setReminderComplete
T@"NEKPBSetParticipantStatus",&,N,V_setParticipantStatus
T@"NEKPBSetAlarmSnooze",&,N,V_setAlarmSnooze
T@"NEKPBDeleteEvent",&,N,V_deleteEvent
T@"NEKSourceAttributes",R,N,V_attributes
setSyncID:
addMetadataKeys:
addMetadataValues:
syncID
hasTaskCompletionDate
hasICSData
hasLzfseICSData
iCSData
hasOldIdentifier
metadataKeys
metadataValues
isHolidyCalendar
publishedURL
selfIdentityAddress
ownerIdentityAddress
setIsHolidyCalendar:
URLWithString:
setPublishedURL:
setSelfIdentityAddress:
setOwnerIdentityAddress:
setIsDefaultLocalCalendar:
setInvitationChangedPropertyFlagDate:
setInvitationChangedPropertyFlagTime:
setInvitationChangedPropertyFlagTitle:
setInvitationChangedPropertyFlagLocation:
setInvitationChangedPropertyFlagAttendeeComment:
setInvitationChangedPropertyFlagAttendeeStatus:
invitationChangedPropertyFlagDate
hasInvitationChangedPropertyFlagDate
invitationChangedPropertyFlagTime
hasInvitationChangedPropertyFlagTime
invitationChangedPropertyFlagTitle
hasInvitationChangedPropertyFlagTitle
invitationChangedPropertyFlagLocation
hasInvitationChangedPropertyFlagLocation
invitationChangedPropertyFlagAttendeeComment
hasInvitationChangedPropertyFlagAttendeeComment
invitationChangedPropertyFlagAttendeeStatus
hasInvitationChangedPropertyFlagAttendeeStatus
isEmpty
changeSetForEvent
changeSetForReminder
setInserts:
setDeletes:
deletionMap
setDeletionMap:
moveMap
setMoveMap:
changeNumber
setChangeNumber:
setCompletion:
truncated
setTruncated:
_truncated
_inserts
_updates
_deletes
_deletionMap
_moveMap
_changeNumber
T@"NSArray",C,N,V_inserts
T@"NSArray",C,N,V_updates
T@"NSArray",C,N,V_deletes
T@"NSDictionary",&,N,V_deletionMap
T@"NSDictionary",&,N,V_moveMap
Tq,N,V_changeNumber
T@?,C,N,V_completion
TB,N,V_truncated
_isHolidyCalendar
_UUID
_publishedURL
_selfIdentityAddress
_ownerIdentityAddress
T@"NSString",C,N,V_UUID
T@"NSString",C,N,V_title
TB,N,V_isHolidyCalendar
T@"NSData",C,N,V_digest
T@"NSString",C,N,V_symbolicColorName
T@"NSString",C,N,V_colorString
T@"NSString",C,N,V_sharedOwnerName
T@"NSString",C,N,V_sharedOwnerAddress
T@"NSURL",C,N,V_publishedURL
T@"NSString",C,N,V_externalIdentificationTag
T@"NSString",C,N,V_syncToken
T@"NSString",C,N,V_externalModificationTag
T@"NSData",C,N,V_externalRepresentation
Ti,N,V_supportedEntityTypes
T@"NSString",C,N,V_notes
T@"NSString",C,N,V_subCalAccountID
T@"NSString",C,N,V_pushKey
T@"NSString",C,N,V_selfIdentityDisplayName
T@"NSString",C,N,V_selfIdentityEmail
T@"NSURL",C,N,V_selfIdentityAddress
T@"NSString",C,N,V_selfIdentityFirstName
T@"NSString",C,N,V_selfIdentityLastName
T@"NSString",C,N,V_ownerIdentityDisplayName
T@"NSString",C,N,V_ownerIdentityEmail
T@"NSURL",C,N,V_ownerIdentityAddress
T@"NSString",C,N,V_ownerIdentityFirstName
T@"NSString",C,N,V_ownerIdentityLastName
hasIdentifier
setHasIsDefaultLocalCalendar:
hasIsDefaultLocalCalendar
T@"NSString",&,N,V_identifier
TB,N,V_isDefaultLocalCalendar
nekEventStore
nekReminderStore
shouldSendReminder:
eventChangeObserver
eventDatabaseController
addCompletion:
reminderChangeObserver
changeStateMap
saveChangeTrackingStateMap:
allSourcesInto:
allCloudKitAccountsInto:
allCalendarsInto:
allListsInto:
allEventsInto:filter:window:
allRemindersInto:filter:window:
terminateSemaphore
initWithBlock:
setBackgroundThread:
backgroundThread
fetchEventChangeSet
fetchReminderChangeSet
markAsNotEffectivelyEmpty
markAsTruncated
markAsDeferrable
storeWrapperForCloudKitAccount:pipe:
listWrappersForChangeSet:pipe:
remindersWrappersForChangeSet:skipAccountDeletions:pipe:
setTerminateSemaphore:
_eventChangeObserver
_reminderChangeObserver
_nekEventStore
_nekReminderStore
_backgroundThread
_terminateSemaphore
T@"NSThread",&,N,V_backgroundThread
T@"NSObject<OS_dispatch_semaphore>",&,N,V_terminateSemaphore
T@"NEKEventChangeObserver",&,N,V_eventChangeObserver
T@"NEKReminderChangeObserver",&,N,V_reminderChangeObserver
T@"NEKEventStore",&,N,V_nekEventStore
T@"NEKReminderStore",&,N,V_nekReminderStore
fetchListWithObjectID:error:
listInStore:withNEKCalendarID:
hasSelfAttendeeEmail
setHasEntityType:
hasEntityType
setHasInvitationChangedPropertyFlagDate:
setHasInvitationChangedPropertyFlagTime:
setHasInvitationChangedPropertyFlagTitle:
setHasInvitationChangedPropertyFlagLocation:
setHasInvitationChangedPropertyFlagAttendeeComment:
setHasInvitationChangedPropertyFlagAttendeeStatus:
hasSelfAttendeeUUID
hasSelfOrganizerEmail
hasSelfOrganizerUUID
setHasAttendeeStatus:
hasAttendeeStatus
setHasLocationPredictionState:
hasLocationPredictionState
_invitationChangedPropertyFlagAttendeeComment
_invitationChangedPropertyFlagAttendeeStatus
_invitationChangedPropertyFlagDate
_invitationChangedPropertyFlagLocation
_invitationChangedPropertyFlagTime
_invitationChangedPropertyFlagTitle
TB,N,V_invitationChangedPropertyFlagDate
TB,N,V_invitationChangedPropertyFlagTime
TB,N,V_invitationChangedPropertyFlagTitle
TB,N,V_invitationChangedPropertyFlagLocation
TB,N,V_invitationChangedPropertyFlagAttendeeComment
TB,N,V_invitationChangedPropertyFlagAttendeeStatus
TQ,N,V_attendeeStatus
TQ,N,V_locationPredictionState
daIsReadOnly
daIsImmutable
ekColor
daSymbolicColorName
daHexString
daDisplayOrder
daExternalIdentificationTag
daSyncToken
daPushKey
addListWithName:toAccountChangeItem:listObjectID:
configureList:listChangeItemProvider:withAttributes:
updateList:
initWithDASymbolicColorName:daHexString:
setColor:
setDaDisplayOrder:
createListInAccount:withSaveRequest:withAttributes:
configureList:withSaveRequest:withAttributes:
accesses
setAccesses:
capacity
hits
setHits:
hitRatio
purge
setCapacity:
_capacity
_hits
_accesses
T@"NSMutableOrderedSet",&,N,V_cache
Tq,N,V_capacity
Tq,N,V_hits
Tq,N,V_accesses
objectDelayUs
oops
someStore
isDegenerate:
setValidationObject:
syncSession:enqueueChanges:error:
syncSession:applyChanges:completion:
syncSession:didEndWithError:
syncSession:resetDataStoreWithError:
resetDataStoreForSyncSession:completion:
syncSession:rollbackChangesWithError:
syncSession:restartChanges:
syncSession:successfullySynced:
syncKind
setSyncKind:
validationObject
_isFirst
_changeQueue
_ct_logger
_preSyncCensus
_changeSupplier
_fetcher
_progressLiar
_syncKind
_statsTracker
_perfomanceTracker
_validationObject
_objectDelayUs
_storeUpdateTimeNs
_calendarUpdateTimeNs
_eventUpdateTimeNs
_reminderUpdateTimeNs
T@"NEKResultsPipe",&,N,V_changeSupplier
T@"NEKResultsFetcher",&,N,V_fetcher
T@"NEKProgressLiar",&,N,V_progressLiar
T@"NSString",&,N,V_syncKind
T@"NEKEnvironment",&,N,V_environment
T@"NEKStatTracker",&,N,V_statsTracker
T@"NDTPerf",&,N,V_perfomanceTracker
T@"NEKValidationWrapper",&,N,V_validationObject
Tq,N,V_objectDelayUs
TQ,N,V_storeUpdateTimeNs
TQ,N,V_calendarUpdateTimeNs
TQ,N,V_eventUpdateTimeNs
TQ,N,V_reminderUpdateTimeNs
cpuTime
setDirtyMemory:
setCpuTime:
setWallTime:
_wallTime
_cpuTime
_dirtyMemory
Tq,N,V_wallTime
Tq,N,V_cpuTime
Tq,N,V_dirtyMemory
isImmutableRaw
isSubscribedHolidayCalendar
allowsScheduling
isDefaultSchedulingCalendar
publishURL
externalIDTag
allowEvents
allowReminders
subcalAccountID
unlocalizedTitle
setHidden:
setInbox:
setNotificationsCollection:
setSharingInvitation:
setSubscribed:
setSubscribedHolidayCalendar:
setFamilyCalendar:
setAllowsScheduling:
setIsDefaultSchedulingCalendar:
setPublishURL:
setExternalIDTag:
setSubcalAccountID:
setAlarmIdentifier:
setItemIdentifier:
setStoreIdentifier:
setSnoozeAmount:
setHasSnoozeAmount:
hasSnoozeAmount
hasAlarmIdentifier
_snoozeAmount
_alarmIdentifier
_itemIdentifier
Td,N,V_snoozeAmount
T@"NSString",&,N,V_alarmIdentifier
T@"NSString",&,N,V_itemIdentifier
T@"NSString",&,N,V_storeIdentifier
degenerateChange
dataFromChange:
changeFromData:ofType:
dataWithSYObject:
SYObjectWithData:
encodeSYChangeForBackwardCompatibility:protocolVersion:
decodeChangeData:fromProtocolVersion:ofType:
mapTableWithKeyOptions:valueOptions:
saveRequests
_saveEventStore:
saveRequestsNeedPurgeDeletedObjectsAfterSave
setSaveRequestsNeedPurgeDeletedObjectsAfterSave:
saveRequestForStore:needsPurgeDeletedObjectsAfterSave:
removeDeletableLists:
removeDeletableAccounts:
_deletableAccountsForStore:
deleteAccount:
fetchAccountsWithError:
filteredArrayUsingPredicate:
_deletableListsForStore:
deleteList:
removeAllRemindersInList:
saveRequestForStore:
fetchRemindersWithError:
removeFromList
addObjectsFromArray:
fetchDefaultListWithError:
_updateAccount:withSourceWrapper:store:
_updateList:withCalendarWrapper:
_createListForWrapper:store:
_checkAndSetDefaultList:calendarWrapper:store:
_deleteAccountWithIdentifier:store:
_deleteListWithIdentifier:store:
_deleteReminderWithIdentifier:store:
applySidePropertiesToReminderChangeItem:withWrapper:session:
fetchReminderWithDACalendarItemUniqueIdentifier:inList:error:
handleUpdatedReminderFromGizmo:withSaveRequest:withWrapper:
orderedSet
reverseObjectEnumerator
allKeys
fetchRemindersWithDACalendarItemUniqueIdentifiers:inList:error:
deduplicateICSWrappers:
listCacheForStore:wrappers:
reminderCacheForStore:wrappers:
handleReminderWithUniqueIdentifierFromGizmo:saveRequest:list:wrapper:
_ensureReminderInList:saveRequest:inICSWrapper:
importRemindersFromICSData:insertIntoListChangeItem:error:
updateReminderChangeItem:fromICSData:isNew:withOptions:error:
handleNewReminderChangeItem:withWrapper:session:
addReminderChangeItem:
arrayWithCapacity:
fetchAccountsWithObjectIDs:error:
batchedEnumerateForChangeSet:changeType:forEntitiesOfClass:withFetchBlock:withBlock:
fetchListsWithObjectIDs:error:
fetchRemindersWithObjectIDs:error:
batchedEnumerateAccountsForStore:changeSet:changeType:withBlock:
getDefaultListForStore:
wrapperForList:
batchedEnumerateListsForStore:changeSet:changeType:withBlock:
wrapperForList:useAttributes:
deletionWrappersForChangeSet:deletedReminderAndListMapping:skipAccountDeletions:pipe:
ICSWrappersForChangeSet:movedReminderAndListMapping:pipe:
wrapperForReminder:oldListIdentifier:
batchedEnumerateRemindersForStore:changeSet:changeType:withBlock:
removeFromParent
_createAccountForWrapper:store:
deleteReminder:
setSaveRequests:
_saveRequestsNeedPurgeDeletedObjectsAfterSave
_saveRequests
T@"NSMapTable",&,N,V_saveRequests
TB,N,V_saveRequestsNeedPurgeDeletedObjectsAfterSave
beginObservingChanges
stopObservingChanges
weakEventDatabaseController
databaseDidChange
_defaultCalendarChanged:
blindChangeNumberAdvance:
removeObserver:name:object:
notifyForDatabaseUpdatesIfNeeded
notifyForDatabaseUpdates
eks_eventStoreFor:
eks_sourcesAlwaysIncludingLocal
allowedEntityTypes
initWithCalendarRef:
predicateForMasterEventsInCalendars:
_masterEventsToSync
reminderObjectIDsMatchingPredicate:
lastSequenceNumber
_fetchChangesInto:from:inside:
previousDefaultTaskCalendar
previousDefaultEventCalendar
markChangedObjectIDsConsumedUpToToken:
setLastSequenceNumber:
setPreviousDefaultTaskCalendar:
setPreviousDefaultEventCalendar:
changedObjectIDsSinceToken:resultHandler:
unregisterForDetailedChangeTracking:
registerForDetailedChangeTracking:
_sequenceKey
_taskCalendarKey
_eventCalendarKey
_sawSeqnoFailure
_lastSequenceNumber
_weakEventDatabaseController
T@"NEKEventStore",W,N,V_weakEventDatabaseController
metadataKeysCount
clearMetadataKeys
metadataKeysAtIndex:
metadataValuesCount
clearMetadataValues
metadataValuesAtIndex:
metadataKeysType
metadataValuesType
setHasCalendarItemCount:
hasCalendarItemCount
hasSyncID
setHasTaskCompletionDate:
hasNuevoIdentifier
setMetadataKeys:
setMetadataValues:
_iCSData
_metadataKeys
_metadataValues
_syncID
T@"NSData",&,N,V_iCSData
T@"NEKPBCalendarIdentifier",&,N,V_calendarIdentifier
TI,N,V_calendarItemCount
T@"NSMutableArray",&,N,V_metadataKeys
T@"NSMutableArray",&,N,V_metadataValues
T@"NSString",&,N,V_syncID
TQ,N,V_displayOrder
setDuplicateCheck:
setOccurrenceCache:
hasDuplicateCheck
hasOccurrenceCache
_duplicateCheck
_occurrenceCache
T@"NEKPBDuplicateCheck",&,N,V_duplicateCheck
T@"NEKPBOccurrenceCache",&,N,V_occurrenceCache
T@"NSString",C,N,V_name
T@"NSNumber",&,N,V_defaultAlarmOffset
Tq,N,V_type
T@"NSString",C,N,V_constraintsDescriptionPath
T@"NSString",C,N,V_creatorBundleID
T@"NSString",C,N,V_creatorCodeSigningIdentity
T@"NSString",C,N,V_accountPersistentID
lastInsertedRowId
T@"NDTSQFile",&,N,V_db
setSummary:
hasUuid
hasSummary
hasCalendar
setHasDate:
hasDate
summary
_date
_calendar
_summary
_uuid
T@"NSString",&,N,V_uuid
T@"NSString",&,N,V_summary
T@"NSString",&,N,V_calendar
Td,N,V_date
_completions
_isTruncated
_isEffectivelyEmpty
_isDeferrable
T@?,R,N
TB,R,N,V_isDeferrable
weakReminderDatabaseController
storeDidChange
storeDidChangeNotificationName
reminderDatabaseController
enumerateAllRemindersWithBlock:
loadChangeTrackingStateMapWithStore:
deletedAccountIDsFromLoadedMap
hasChangeTrackingTokens
_fetchChangesInto:from:inside:outDeletedReminderAndListMapping:outMovedReminderAndListMapping:
orderedSetWithCapacity:
changedObjectID
updatedProperties
previousDefaultReminderListID
setPreviousDefaultReminderListID:
fetchChangedObjectIDs:
initWithBase64EncodedString:options:
initWithData:store:clientName:
persistToData:
_reminderListKey
beginTrackingFromNowForStore:clientName:
_changeTrackingStateMap
_weakReminderDatabaseController
T@"NEKReminderStore",W,N,V_weakReminderDatabaseController
setChangeTracking:
setLastChangeToken:
changeTracking
lastChangeToken
initWithChangeTracking:lastChangeToken:
_changeTracking
_lastChangeToken
T@"REMChangeTracking",&,N,V_changeTracking
T@"REMChangeToken",&,N,V_lastChangeToken
unarchivedObjectOfClass:fromData:error:
_beginTrackingFromLoadedStateForStore:clientName:
internalTransactionAuthorKeysToExclude
archivedDataWithRootObject:requiringSecureCoding:error:
transactionAuthorsToExclude
provideChangeTrackingForAccountID:clientName:transactionAuthorKeysToExclude:
universalToken
_beginTrackingForStore:clientName:verifyAccountsBlock:changeTrackingStateFromAccountBlock:
currentChangeTokenWithError:
setWithCapacity:
fetchAccountsIncludingInactive:error:
filterAccountToSync:
fetchHistoryAfterToken:error:
transaction
accountID
fetchAuxiliaryChangeInfosOfType:withChangeObject:error:
auxiliaryChangeInfos
reminderIdentifier
oldListIdentifier
lastChangeTokenForAccountID:
setChangeToken:forAccountID:
decodeObjectOfClasses:forKey:
encodeObject:forKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
beginTrackingFromEpochForStore:clientName:
_loadedChangeTokenMap
_deletedAccountIDsFromLoadedMap
T@"NSSet",R,V_deletedAccountIDsFromLoadedMap
setEventIdentifier:
setEventTitle:
setCalendarTitle:
hasEventIdentifier
hasEventTitle
setEventStart:
setHasEventStart:
hasEventStart
hasCalendarTitle
setSpan:
setHasSpan:
hasSpan
_eventStart
_calendarTitle
_eventIdentifier
_eventTitle
T@"NSString",&,N,V_eventIdentifier
T@"NSString",&,N,V_eventTitle
Td,N,V_eventStart
T@"NSString",&,N,V_calendarTitle
TI,N,V_span
setRecordMap:
_deletableSources
_deleteStoreById:
_deleteCalendarById:
predicateForMasterEventsInCalendar:
_deleteEventById:
initWithStore:recordMap:
finalizeDatabasesAfterResetSync
T@"NEKRecordMap",&,N,V_recordMap
T@"EKEventStore",&,N,V_store
initWithEKOptions:path:changeTrackingClientId:enablePropertyModificationLogging:allowDelegateSources:
initWithEKOptions:
arrayByAddingObject:
eks_storeCount
_bump
_counter
_cause
_lastStore
initWithKeyOptions:valueOptions:capacity:
setActivityCondition:
setLog:
setCriteriaDelay:
setCriteriaOnConnection:
setActivityIdentifier:
_checkIn
activityIdentifier
activityCondition
_setActivity:
_currentCriteria
setWaitingForCheckin:
estimatedFireDate
timeIntervalSinceDate:
setEstimatedFireDate:
_setState:
setLastFired:
_startDeferralPolling
criteriaDelay
criteriaOnConnection
dateWithTimeIntervalSinceNow:
_activityComplete
timeIntervalSinceNow
_stopDeferralPolling
lastFired
waitingForCheckin
deferPollingSource
setDeferPollingSource:
_criteriaOnConnection
_lastFired
_waitingForCheckin
_activityCondition
_estimatedFireDate
_activityIdentifier
_criteriaDelay
_deferPollingSource
T@"NSObject<OS_os_transaction>",&,N,V_waitingForCheckin
T@"NSCondition",&,N,V_activityCondition
T@"NSObject<OS_xpc_object>",&,N,V_activity
T@"NSDate",&,N,V_estimatedFireDate
T@"NSObject<OS_os_log>",&,N,V_log
Tr*,N,V_activityIdentifier
T@"NSDate",&,N,V_lastFired
Tq,N,V_criteriaDelay
TB,N,V_criteriaOnConnection
T@"NSObject<OS_dispatch_source>",&,N,V_deferPollingSource
T@"<NDTActivityDelegate>",W,N,V_delegate
hasSyncId
T@"NSString",&,N,V_syncId
setStatus:
setHasStatus:
hasStatus
_status
TI,N,V_status
T@"NEKPBSourceAttributes",&,N,V_attributes
%@ %@
start
items
NEKDatabaseChangedExternallyNotification
NEKDefaultCalendarChanged
NEKBlindChangeNumberAdvance
<NEKICSWrapperMetadata (%p): 
  entityType: %d
  identifier: %@
  externalID: %@
  selfAttendeeEmail: %@
  selfAttendeeUUID: %@
  selfOrganizerEmail: %@
  selfOrganizerUUID: %@
  attendeeStatus: %d
  invitationStatus: %d
  properInvitationStatus: %d
  hasProperInvitationStatus: %d
  locationPredictionState: %d
  dateChanged: %d
  timeChanged: %d
  titleChanged: %d
  locationChanged: %d
  attendeeComment: %d
  attendeeStatusFlag: %d
  startDate: %@
<%@ %p; identifier=%@; calendarIdentifier=%@; oldCalendarIdentifier=%@; title='%@'>
<%@ %p; identifier=%@; calendarIdentifier=%@; oldCalendarIdentifier=%@>
<%@ %p, calendarIdentifier = %@; oldCalendarIdentifier = %@; count = %@>
%@.mean
%@.variance
%@.failureTimeout
NDTSetDefaultPriority
NDTQueueFactory.m
qos != QOS_CLASS_UNSPECIFIED
NDTSetElevatedPriority
GARBAGE:%@
com.apple.eventkitsync.changeobserver.%@
<%@ %p, source = %@, calendarIdentifier = %@>
watch.eventsync
com.apple.eventkitsync
persistentID
isLocalStore
+[NEKSourceID(Reminder) accountForStore:identifier:]
NDTSQFile.%@.%p
%04d%02d%02d-%02d%02d%02d
:memory:
mobile
_openDatabase(1)
NDTSQError
pragma journal_mode=wal
_SQ_Versions
%@-wal
%@: %s
_executeSql(1)
_parseSql:(1)
_parseSql:(2)
BEGIN
begin(1)
COMMIT
commit(1)
ROLLBACK
rollback(1)
sourceIdentifier
calendarIdentifier
attributes
isDefaultTaskCalendar
isDefaultEventCalendar
oldCalendarIdentifier
%@%@%@
UUID
title
isReadonly
isHidden
isImmutable
isInbox
isNotificationsCollection
isSharingInvitation
isSubscribed
isHolidayCalendar
isFamilyCalendar
isIgnoringEventAlerts
isIgnoringSharedCalendarNotifications
isSchedulingProhibited
isDefaultCalendarForStore
type
digest
symbolicColorName
colorString
displayOrder
sharingStatus
sharedOwnerName
sharedOwnerAddress
sharingInvitationResponse
publishedURLString
canBePublished
canBeShared
isPublished
externalID
externalIdentificationTag
syncToken
externalModificationTag
externalRepresentation
supportedEntityTypes
invitationStatus
hasBeenAlerted
notes
subCalAccountID
pushKey
selfIdentityDisplayName
selfIdentityEmail
selfIdentityAddressString
selfIdentityFirstName
selfIdentityLastName
ownerIdentityDisplayName
ownerIdentityEmail
ownerIdentityAddressString
ownerIdentityFirstName
ownerIdentityLastName
TinyStore
tinyStore.sqlitedb
tinyStore
tinyStore.plist
com.apple.eventkitsync.changeobserver.sequencenumber
FaultCount
RetryMustBeReset
heardFromPhone
MigrationSyncCount
eventCalendarId
taskCalendarId
windowEnd
windowStart
deltaSync.failureTimeout
deltaSync.mean
deltaSync.variance
resetSync.failureTimeout
resetSync.mean
resetSync.variance
nightlySync.failureTimeout
nightlySync.mean
nightlySync.variance
msgType
NDTMessaging
-[NDTMessaging sendMessage:responseHandler:completion:]
v8@?0
-[NDTMessaging reply:to:completion:]
-[NDTMessaging service:account:incomingData:fromID:context:]
-[NDTMessaging service:account:incomingResourceAtURL:metadata:fromID:context:]
/tmp/verifier_data.XXXXXX
%s/%@
ValidationWrapper
cvAlertEnabled
com.apple.Bridge.CalendarSyncDebug
yyyyMMdd/HHmm
<%@:%p start:%@ end:%@ masterCount:%d occurrenceCount:%d>
Calendar validation failure. Please file a radar against "EventKitSync | watchOS"
Sync validation failure
select value from %@ where key = ?
update %@ set value = ? where value = ? and key = ?
insert or replace into %@ (key, value) values (?, ?)
delete from %@ where key = ?
create table if not exists %@ (key text unique, value text)
NDTSQKeyValueStore:%@
i16@?0@"NDTSQStatement"8
name
externalId
00000000/0000
/System/Library/LaunchDaemons/com.apple.SpringBoard.plist
syncReport.json
datestamp
duplicates
drift
sources
calendars
v24@?0@"NEKPBItemOccurrence"8q16
com.apple.eventkitsync.nekeventstore
com.apple.eventkitsync.dbidleblocks
com.apple.eventkitsync.pipe
SaveDB
-[NEKEventStore getDefaultTaskCalendar:defaultEventCalendar:store:]
updateICS:
deleteItemWithIdentifier:
-[NEKEventStore deleteItem:store:]
-[NEKEventStore handleNewEntity:withWrapper:session:]
-[NEKEventStore handleUpdatedItemFromGizmo:type:withWrapper:identifier:]
/RID=
updateMasterEvent:blah...
%@%@%llu
-[NEKEventStore handleCalendarEventWithUniqueIdentifierFromGizmo:calendar:wrapper:detachedEventMap:]
-[NEKEventStore handleCalendarTaskWithUniqueIdentifierFromGizmo:calendar:wrapper:]
com.apple.eventkitsync.lzfse.receive.logging
-[NEKEventStore _processUpdateFromWatch:calendar:store:]_block_invoke
v16@?0@"NSString"8
-[NEKEventStore _deleteCalendarItemsInICSWrapperFromOldCalendar:store:]_block_invoke
-[NEKEventStore _deleteCalendarItemsMovedToCalendar:inICSWrapper:]_block_invoke
v28@?0@"EKObjectID"8i16^B20
ICSWrappers:Inserts
ICSWrappers:Updates
-[NEKEventStore ICSWrappersForChangeSet:pipe:]_block_invoke
-[NEKEventStore _createCalendarForWrapper:store:]
com.apple.eventkitsync.lzfse.send.logging
com.apple.eventkitsync.recievedpairedsyncstart
com.apple.eventkitsync.recievedreunionsyncstart
com.apple.pairedsync.eventkitsync
internal_ignorePairedSync
com.apple.EventKitSync
/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/NEKSyncBundle/Models/NEKSyncCoordinator.m
-[NEKSyncCoordinator syncCoordinator:beginSyncSession:]
-[NEKSyncCoordinator syncCoordinator:didInvalidateSyncSession:]
None
LimitPush
startDate
endDate
masterCount
occurrenceCount
showAlert
com.apple.NanoCalendar.PrefSync.PrefMigrationSeed
com.apple.mobilecal
InviteeDeclineAlerts-rebroadcast
ShowDeclinedEvents-rebroadcast
enableTravelAdvisoriesForAutomaticBehavior
com.apple.calendar.database.preference.notification.enableTravelAdvisoriesForAutomaticBehavior
com.apple.NanoCalendar
preferences_observer
LastDeselectedCalendarSyncHashes
LastDeselectedCalendarSyncIdentifiers
TimeZoneCityArray
kCalTimeZonePrefChangedDistributedNotification
overlayCalendarID
DefaultTimedAlarmOffset
DefaultAllDayAlarmOffset
com.apple.calendar.defaultAlarmChangedNotification
ShowWeekNumbers
com.apple.mobilecal.preference.notification.showweeknumbers
CalEventDeclineEventPrefChangedRebroadcast
CalEventShowInviteeDeclinesPrefChangedRebroadcast
CalEventDeclineEventPrefChanged
CalEventShowInviteeDeclinesPrefChanged
v32@?0@"NSString"8@"NSSet"16^B24
CREATE TABLE IF NOT EXISTS analytics (hour INT PRIMARY KEY, deltas INT, resets INT, failures INT)
analytics
INSERT OR REPLACE INTO analytics (deltas, resets, failures, hour) values (?,?,?,?)
SELECT deltas, resets, failures FROM analytics WHERE hour = ?
DELETE FROM analytics WHERE hour = ?
backchannel
com.apple.private.alloy.eventkitmutation
setRemCom
v16@?0@"NDTMessage"8
setParStt
setAlmSno
deleEvent
internal_disablePhoneMutator
/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/NEKSyncBundle/Models/NEKRPCEndpoint.m
-[NEKRPCEndpoint _recvSetEventKitReminderCompletedEndpoint:]
-[NEKRPCEndpoint _recvSetReminderKitReminderCompletedEndpoint:]
-[NEKRPCEndpoint _recvDeleteEventEndpoint:]
v24@?0@"EKEvent"8^B16
v16@?0@"NSArray"8
com.apple.private.alloy.internal.watch.calendar.analytics
com.apple.internal.watch.calendar.analytics
com.apple.internal.eventkitsync.checker
<%@ %p; type=%@; identifier=%@; calendarIdentifier=%@>
Calendar
Event
Reminder
Source
phone
PreferencesObserver
com.apple.eventkitsyncd.daemon
com.apple.eventkitsyncd.notifications
com.apple.notifyd.matching
HandleNotifications
_CalDatabaseChangedNotification
com.apple.reminderkit.storeChanged
EventKitSyncTesting
com.apple.eventkitsync.force
com.apple.eventkitsync.zapversion
com.apple.datamigrator.migrationDidFinish
SignificantTimeChangeNotification
CalDefaultCalendarChangedNotification
com.apple.eventkitsync.analytics.flush
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.eventkitsync.analytics.daily
-[NEKDaemon _registerForNotifications]
com.apple.nanodaemontoolkit
[VOID]
(nil)
>%08x<
com.apple.logging.obfuscation
obfuscate
F519C070-44C7-467D-B560-7FEABDF9D3AC
-[NEKSourceAttributes(Event) initWithSource:]
CloudKit
non-CloudKit
B24@?0@"NSString"8@"NSString"16
B24@?0@"NSNumber"8@"NSNumber"16
isFacebook
v32@?0@"EKObjectID"8Q16^B24
@?<v@?@"EKObjectID"Q^B>16@?0@?<v@?@"NSString"@"EKSource"Q^B>8
v32@?0@"REMObjectID"8Q16^B24
@?<v@?@"REMObjectID"Q^B>16@?0@?<v@?@"NSString"@"EKSource"Q^B>8
v40@?0@"NSString"8@"EKSource"16Q24^B32
testWindowStart
testWindowEnd
16A0
syncWindow
recordMap
RecordMap.db
CREATE TABLE IF NOT EXISTS record(rowid INTEGER PRIMARY KEY ASC, entityType INT, entityRowID INT, UUID TEXT)
CREATE UNIQUE INDEX IF NOT EXISTS entityIndex ON record (entityType, entityRowID)
CREATE VIEW IF NOT EXISTS record_utc AS SELECT rowid, datetime(timestamp, 'unixepoch') stamp, entityType, entityRowID, masterRowID, uuid FROM record ORDER BY timestamp, entityType, uuid
ALTER TABLE record ADD COLUMN timestamp INT DEFAULT NULL
ALTER TABLE record ADD COLUMN masterRowID INT DEFAULT -1 NOT NULL
ALTER TABLE record ADD COLUMN mark INT DEFAULT 1 NOT NULL
ALTER TABLE record ADD COLUMN summary_hash TEXT DEFAULT NULL
ALTER TABLE record ADD COLUMN location_hash TEXT DEFAULT NULL
ALTER TABLE record ADD COLUMN start_time REAL DEFAULT NULL
ALTER TABLE record ADD COLUMN entityDatabaseID INT DEFAULT 0 NOT NULL
DROP INDEX entityIndex
CREATE UNIQUE INDEX entityIndex ON record (entityType, entityRowID, entityDatabaseID)
DROP VIEW record_utc
CREATE VIEW record_utc AS SELECT rowid, datetime(timestamp, 'unixepoch') stamp, entityType, entityRowID, entityDatabaseID, masterRowID, uuid FROM record ORDER BY timestamp, entityType, uuid
PRAGMA user_version
PRAGMA user_version = %d
SELECT UUID FROM record WHERE entityType = ? AND entityRowID = ? AND entityDatabaseID = ?
INSERT OR REPLACE INTO record(entityType, entityRowID, entityDatabaseID, UUID, timestamp, masterRowID, summary_hash, location_hash, start_time, mark) VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, 1)
SELECT summary_hash, location_hash, start_time FROM record WHERE entityType = ? AND entityRowID = ? AND entityDatabaseID = ?
DELETE FROM record WHERE entityType = ? and entityRowID = ? and entityDatabaseID = ?
DELETE FROM record
SELECT entityType, entityRowID, entityDatabaseID, UUID, mark FROM record ORDER BY mark, entityType, entityRowID, UUID
SELECT count() FROM record
isComplete
calendarName
reminderTitle
externalIdentifier
>>LOCAL<<
Default local calendar
UUID: %@
<%@ %p; %@>
defaultAlarmOffset
isEnabled
usesSelfAttendee
constraintsDescriptionPath
creatorBundleID
creatorCodeSigningIdentity
accountPersistentID
supportsSharedCalendars
allowsTasks
allowsEvents
allowsCalendarAddDeleteModify
onlyCreatorCanModify
snoozeAlarmRequiresDetach
supportsAlarmAcknowledgedDate
isBirthdayStore
com.apple.eventkitsync.progressliar
-[NEKProgressLiar _doneForRealNotifyingPairedSync:]
com.apple.internal.eventkitsync.testcontrol
com.apple.NEKTestControl.xpc
%@;%@;%f
/var/mobile/Library/Calendar/Calendar.sqlitedb
select I.unique_identifier, C.external_id calendar, O.occurrence_date occurrence_date from occurrencecache O left join calendar C on C.rowid = O.calendar_id left join calendaritem I on I.rowid = O.event_id where I.entity_type = 2 and O.occurrence_date >= ?  and O.occurrence_date <= ? and C.flags & 786432 == 0 order by occurrence_date, I.unique_identifier
EventKitSync
v24@?0@"NSString"8@"NSUUID"16
/System/Library/PrivateFrameworks/CDDataAccess.framework
/System/Library/PrivateFrameworks/ExchangeSync.framework
/System/Library/PrivateFrameworks/DataAccess.framework
+[NEKSourceAttributes(Reminder) createAccountWithSaveRequest:withAttributes:]
@"REMAccountChangeItem"8@?0
.plist
Analytics.sqlite
hour
deltas
resets
failures
com.apple.eventkitsync.sessions
bindInteger: index out of bounds
bindUint64: index out of bounds
bindString: index out of bounds
bindDouble: index out of bounds
bindBlob: index out of bounds
fetchInteger: column out of bounds
fetchUint64: column out of bounds
fetchString: column out of bounds
fetchDouble: column out of bounds
fetchBlob: column out of bounds
NDTQSStatement:%p:"%@",parsed=%p
changeObserver.keyqueue
E8CD02C1-B7C0-4E12-8A44-AB54B5F52E5F
E58F9466-0386-4DE7-B6CE-537A8B54C9B7
v20@?0@"NSArray"8i16
B16@?0@"EKObjectID"8
SeenMap.db
com.apple.eventkitsync.seenmap
drop table if exists seen
create table if not exists seendata (uuid TEXT, start_date REAL, end_date REAL, location TEXT, primary key (uuid))
B24@?0^^{sqlite3_stmt}8*16
insert or replace into seendata values ( ?, ?, ?, ?);
select start_date, end_date, location from seendata where uuid = ?;
delete from seendata where uuid = ?;
delete from seendata where end_date < ?;
-[NEKSeenMap didShowInvite:withUUID:]
-[NEKSeenMap deleteInviteByUUID:]
-[NEKSeenMap sweep]
B16@?0@8
<NDTResultsFIFO:%p cap:%d/%d term:%d fin:%d>
NEK.sessionIdle
resetSync
deltaSync
nightlySync
NEK.SYService
com.apple.private.alloy.eventkitsync
internal_forceFileTransfer
deferUntil
maxDeltaRetries
/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/NEKSyncBundle/Models/NEKSyncController.m
-[NEKSyncController service:willPreferSession:overSession:]
tc_automaticSync
lastSuccessfulStamp
tc_objectDelay
Object delay: %.3f
Fault count: %d
Currently syncing: %s
Automatic sync: %s
Enabled
Disabled
Last successful sync sent: 
Minimum session timeout: %.3f
Maximum session timeout: %.3f
Probability of failure: %.3f
Fixed retry interval: %.3f
minSessionTimeout
maxSessionTimeout
internal_probabilityOfSyncFailure
internal_retryInterval
-[NEKSyncController service:startSession:error:]
identifier
sending
receiving
delta
RetryDueDate
ResetSyncPipe
NightlySyncPipe
DeltaSyncPipe
internal_enableLongTimeouts
internal_enableShortTimeouts
com.apple.watch.eventkitsync.failuretesting
com.apple.eventkitsync.retrysync
com.apple.eventkitsync.sessionEnded
-[NEKSyncController service:sessionEnded:error:]
v16@?0@?<v@?>8
 (FAKE)
nightly
reset
internal_dumpRecordMap
com.apple.watch.eventkitsync.recordmapdump
EventKit
data_separation
sessionTimeout
sessionPerf
packetNumber
storeWrapper
calendarWrapper
ICSWrapper
deletionWrapper
validationWrapper
setReminderComplete
setParticipantStatus
setAlarmSnooze
deleteEvent
<%@ %p; persistentID=%@; type=%@>
Local
Exchange
CalDAV
MobileMe
Subscribed
Birthdays
Unknown
v32@?0@"NSString"8@"NEKPBICSWrapperMetadata"16^B24
v32@?0@"NSString"8Q16^B24
<%@ %p; empty changeset>
<%@ %p; %d inserts; %d updates; %d deletes>
Local store
persistentID: %@
isDefaultLocalCalendar
/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/NEKSyncBundle/Models/NEKResultsFetcher.m
-[NEKResultsFetcher fetchEverythingIntoPipe:]
B16@?0@"EKCalendarItem"8
B16@?0@"REMReminder"8
-[NEKResultsFetcher fetchEverythingIntoPipe:]_block_invoke
-[NEKResultsFetcher fetchNightlyIntoPipe:]
-[NEKResultsFetcher fetchNightlyIntoPipe:]_block_invoke
-[NEKResultsFetcher fetchChangesIntoPipe:deferrable:]
+[NEKCalendarID(Reminder) listInStore:withNEKCalendarID:]
selfAttendeeEmail
entityType
invitationChangedPropertyFlagDate
invitationChangedPropertyFlagTime
invitationChangedPropertyFlagTitle
invitationChangedPropertyFlagLocation
invitationChangedPropertyFlagAttendeeComment
invitationChangedPropertyFlagAttendeeStatus
selfAttendeeUUID
selfOrganizerEmail
selfOrganizerUUID
attendeeStatus
locationPredictionState
properInvitationStatus
+[NEKCalendarAttributes(Reminder) createListInAccount:withSaveRequest:withAttributes:]
@"REMListChangeItem"8@?0
B24@?0@"NSObject"8@"NSObject"16
<%@:%p capacity:%d, hitRatio:%f>
encoding
/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/NEKSyncBundle/Models/NEKSyncSession.m
-[NEKSyncSession init]
internal_disableSync
syncSession:applyChanges:(events)
syncSession:applyChanges:(reminders)
<%@:%p cpu=%lld, wall=%lld, dmem=%lld>
publishedURL
selfIdentityAddress
ownerIdentityAddress
snoozeAmount
alarmIdentifier
itemIdentifier
storeIdentifier
com.apple.eventkitsync.nekreminderstore
com.apple.eventkitsync.reminders.pipe
saveRequestForStore(Reminders)
removeAllItems
removeAllItems(reminders)
B24@?0@"REMAccount"8@"NSDictionary"16
B24@?0@"REMList"8@"NSDictionary"16
updateAccount:
-[NEKReminderStore updateSource:store:]_block_invoke
updateCalendar:
-[NEKReminderStore updateCalendar:store:]_block_invoke
-[NEKReminderStore handleReminderWithUniqueIdentifierFromGizmo:saveRequest:list:wrapper:]
-[NEKReminderStore performUpdateWithICSWrappers:store:session:]
v32@?0@"NSData"8Q16^B24
v16@?0^B8
v28@?0@"REMObjectID"8i16^B20
@"NSDictionary"16@?0@"NSArray"8
storeWrapperForCloudKitAccount
v36@?0@"REMObjectID"8@"REMAccount"16i24^B28
listWrappersForChangeSet
v36@?0@"REMObjectID"8@"REMList"16i24^B28
ICSWrappersForChangeSet(Reminders)
v36@?0@"REMObjectID"8@"REMReminder"16i24^B28
-[NEKReminderStore _deleteAccountWithIdentifier:store:]
-[NEKReminderStore _deleteListWithIdentifier:store:]
-[NEKEventChangeObserver databaseDidChange]
-[NEKEventChangeObserver allSourcesInto:]
-[NEKEventChangeObserver allCalendarsInto:]
-[NEKEventChangeObserver allEventsInto:filter:window:]
-[NEKEventChangeObserver allRemindersInto:filter:window:]
allRemindersInto:filter:window:
/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/NEKSyncBundle/Models/NEKEventChangeObserver.m
-[NEKEventChangeObserver fetchEventChangeSet]
Fetching changes took a long time
Inserts:
Updates:
Deletes:
-[NEKEventChangeObserver _fetchChangesInto:from:inside:]_block_invoke
v44@?0B8q12@"NSArray"20@"NSArray"28@"NSArray"36
-[NEKEventChangeObserver previousDefaultTaskCalendar]
-[NEKEventChangeObserver setPreviousDefaultTaskCalendar:]
v16@?0@"EKObjectID"8
ICSData
calendarItemCount
metadataKeys
metadataValues
syncID
taskCompletionDate
oldIdentifier
nuevoIdentifier
lzfseICSData
duplicateCheck
occurrenceCache
<NEKSourceAttributes (%p)
  name: %@
  defaultAlarmOffset: %@
  type: %d
  isEnabled: %d
  isFacebook: %d
  usesSelfAttendee: %d
  constraintsDescriptionPath: %@
  externalModificationTag: %@
  creatorBundleID: %@
  creatorCodeSigningIdentity: %@
  accountPersistentID: %@
  supportsSharedCalendars: %d
  allowsTasks: %d
  allowsEvents: %d
  allowsCalendarAddModifyDelete: %d
  onlyCreatorCanModify: %d
  snoozeAlarmRequiresDetach: %d
  supportsAlarmAcknowledgedDate: %d
  isLocalStore: %d
  isBirthdayStore: %d
uuid
summary
calendar
date
reminderListId
-[NEKReminderChangeObserver storeDidChange]
-[NEKReminderChangeObserver allCloudKitAccountsInto:]
-[NEKReminderChangeObserver allListsInto:]
-[NEKReminderChangeObserver allRemindersInto:filter:window:]
v24@?0@"REMReminder"8^B16
/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/NEKSyncBundle/Models/NEKReminderChangeObserver.m
-[NEKReminderChangeObserver fetchReminderChangeSet]
markedForDeletion
_fetchChangesInto(Reminders)
ReminderKit: Inserts: 
ReminderKit: Updates: 
ReminderKit: Deletes: 
v60@?0B8@"NEKReminderChangeTrackingStateMap"12@"NSArray"20@"NSArray"28@"NSArray"36@"NSDictionary"44@"NSDictionary"52
com.apple.eventkitsync.changeobserver.reminderkit.sequencenumber
-[NEKReminderChangeObserver previousDefaultReminderListID]
<%@: %p: %@, %@>
B24@?0@"REMAccount"8@16
B16@?0@"NSArray"8
@"NEKReminderChangeTrackingState"16@?0@"REMAccount"8
B24@?0@"REMChangeObject"8@"NSDictionary"16
list
v32@?0@"REMObjectID"8@"NEKReminderChangeTrackingState"16^B24
<%@: loaded:%@ - active:%@>
REMNSPersistentHistoryToken
_REMChangeUniversalToken
loadedChangeTokenMap
eventIdentifier
eventTitle
eventStart
calendarTitle
span
-[NEKEventPurger finalizeDatabasesAfterResetSync]
%@<%p>
xpc_activity
WaitingForActivityCheckinFromFireIn
WaitingForActivityCheckinFromFireOnConnection
CHECK_IN
WAIT
DEFER
CONTINUE
DONE
OUT_OF_BOUNDS
syncId
status
NEKPBOccurrenceCache
NSCopying
NEKICSWrapperMetadata
NEKICSWrapper
SYChange
NSObject
NEKStatTracker
EventKitSync
EventKitAdditions
NEKEnvironment
NEKCalendarWrapper
Reminder
NEKPBSourceID
Event
NDTSQException
NDTSQFile
NSCacheDelegate
NDTSQActor
NEKPBCalendarWrapper
EKObject_EventKitSync
NEKStore
Reminders
NEKPBCalendarAttributes
NEKTinyStore
NDTMessage
NDTMessaging
IDSServiceDelegate
NEKValidationWrapper
NDTSQKeyValueStore
NEKPBDuplicateSource
NEKAnalyticsReporter
_NEKSyncSet
NEKEventStore
NEKSack
NEKSyncCoordinator
PSYSyncCoordinatorDelegate
NEKPBValidationWrapper
NEKPreferencesObserver
NEKSessionAnalyticsStore
NDTCrashSynthesizer
NEKRPCEndpoint
NEKAnalyticsDriver
NDTActivityDelegate
NEKDeletionWrapper
NEKDaemon
NDTLogFacility
NDTLog
NEKSourceChangeAggregator
KeepItSimple
NEKSyncWindow
NEKRecordMap
NEKPBSetReminderComplete
NEKCalendarID
NEKPBSourceAttributes
NEKProgressLiar
NEKTestControlProtocol
NEKTestControl
NSXPCListenerDelegate
NEKOccurrenceCacheDumper
NEKDatabaseFileManager
NEKSessionAnalytics
NDTSQStatement
NEKChangeObserver
NEKCapabilities
NEKPBDuplicateCheck
NEKReminderChangeSet
NEKEventChangeSet
NEKSeenMap
NDTResultsFIFO
NEKSyncController
NEKChangeObserverDelegate
SYServiceDelegate
NEKPBProtoBuffMessage
NEKSourceWrapper
NEKChangeSet
NEKCalendarAttributes
NEKSourceID
NEKPBCalendarIdentifier
NEKResultsFetcher
NEKPBICSWrapperMetadata
NDTObjectCache
NEKPBDuplicateCalendar
NEKSyncSession
SYSessionDelegate
NDTPerf
NEKPBSetAlarmSnooze
NEKProtobufSerializer
SYChangeSerializer
NEKReminderStore
NEKEventChangeObserver
NEKPBICSWrapper
NEKPBDailyAnalytics
NEKSourceAttributes
NDTSQSchema
NEKPBItemOccurrence
NEKResultsPipe
NEKReminderChangeObserver
NEKReminderChangeTrackingState
NEKReminderChangeTrackingStateMap
NSSecureCoding
NSCoding
NEKPBDeleteEvent
NEKEventPurger
NEKStoreRoller
NDTActivity
NEKPBDeletionWrapper
NEKPBSetParticipantStatus
NEKPBSourceWrapper
#16@0:8
@24@0:8^{_NSZone=}16
v24@0:8d16
v20@0:8B16
B16@0:8
v16@0:8
v24@0:8@16
Q16@0:8
@24@0:8Q16
@16@0:8
B24@0:8@16
d16@0:8
@"NSMutableArray"
{?="end"b1"start"b1}
v24@0:8Q16
q16@0:8
v24@0:8q16
@"NSString"
@"NSDate"
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8@16
v32@0:8@16@24
v28@0:8B16@20
v32@0:8Q16@24
v32@0:8q16@24
q24@0:8@16
v24@0:8@?16
Q24@0:8@16
@"NSData"
@"NEKCalendarID"
@"NSDictionary"
@"NSMutableDictionary"
@48@0:8@16@24d32d40
d24@0:8d16
@"NEKEnvironment"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSCondition"
@"NEKSyncController"
@"NEKDatabaseFileManager"
@"NEKTinyStore"
@"NEKRecordMap"
@"NEKSeenMap"
@"NEKSyncCoordinator"
@"NEKSessionAnalytics"
@"NEKDaemon"
@40@0:8@16@24@32
@"NEKSourceID"
@"NEKCalendarAttributes"
v64@0:8@16@24@32@40@48@56
v40@0:8@16@24@32
v60@0:8@16@24@32B40@44@52
{?="isLocalStore"b1}
@32@0:8@16@24
v32@0:8@"NSCache"16@24
v32@0:8@16@?24
v24@0:8@"NSString"16
v32@0:8@"NSString"16@?<i@?@"NDTSQStatement">24
@36@0:8@16@24B32
@32@0:8@16^i24
v32@0:8@16q24
^{sqlite3=}16@0:8
v24@0:8^{sqlite3=}16
@"NSObject<OS_dispatch_queue>"
@"NSMutableOrderedSet"
@"NDTSQKeyValueStore"
@"NSObject<OS_dispatch_source>"
@"NSHashTable"
^{sqlite3=}
@"<NDTSQFileDelegate>"
@"NEKPBCalendarAttributes"
@"NEKPBSourceID"
{?="isDefaultEventCalendar"b1"isDefaultTaskCalendar"b1}
@"<NEKChangeObserver>"
v20@0:8i16
i16@0:8
{?="invitationStatus"b1"sharingInvitationResponse"b1"sharingStatus"b1"supportedEntityTypes"b1"displayOrder"b1"canBePublished"b1"canBeShared"b1"hasBeenAlerted"b1"isDefaultCalendarForStore"b1"isFamilyCalendar"b1"isHidden"b1"isHolidayCalendar"b1"isIgnoringEventAlerts"b1"isIgnoringSharedCalendarNotifications"b1"isImmutable"b1"isInbox"b1"isNotificationsCollection"b1"isPublished"b1"isReadonly"b1"isSchedulingProhibited"b1"isSharingInvitation"b1"isSubscribed"b1}
q32@0:8@16q24
B40@0:8q16q24@32
v32@0:8d16@24
d32@0:8@16d24
@"NDTSQFile"
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v40@0:8@16@24@?32
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32@"IDSMessageContext"40
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v20@0:8I16
@48@0:8@16@24@32^@40
v40@0:8@16@?24@?32
@"IDSService"
@"NDTLogFacility"
@"NSArray"
v40@0:8^@16^@24@32
v48@0:8@16q24@32@40
B68@0:8@16@24@32@40q48@56B64
B56@0:8@16@24@32q40@48
@40@0:8@16@24^@32
v36@0:8@16B24@28
@28@0:8@16B24
B40@0:8@16@24@32
B32@0:8@16@24
v68@0:8@16@24@32B40@44@52@60
v32@0:8@"PSYSyncCoordinator"16@"PSYServiceSyncSession"24
v24@0:8@"PSYSyncCoordinator"16
@"PSYServiceSyncSession"
@"PSYSyncCoordinator"
{?="endDate"b1"masterCount"b1"occurrenceCount"b1"startDate"b1"showAlert"b1}
@"NSObject<OS_os_log>"
@"NPSManager"
@"NPSDomainAccessor"
@"EKPreferences"
v24@0:8^{NEKAnalyticsTally=iiii}16
v28@0:8^{NEKAnalyticsTally=iiii}16i24
@28@0:8B16@20
v48@0:8q16q24@32@40
v72@0:8@16@24d32@40@48@56q64
v44@0:8B16@20@28@36
v56@0:8d16@24@32@40@48
B40@0:8@16@24d32
@"NDTMessaging"
*24@0:8@16
v24@0:8@"NDTActivity"16
*24@0:8@"NDTActivity"16
v32@0:8@"NDTActivity"16@"NSObject<OS_xpc_object>"24
@"NDTActivity"
@36@0:8@16@24i32
@"NEKPreferencesObserver"
v40@0:8Q16@24@32
@"NSSet"
@"EKEventStore"
B24@0:8d16
@"NSTimeZone"
v64@0:8@16q24@32@40d48@56
{?="isComplete"b1}
I16@0:8
{?="defaultAlarmOffset"b1"type"b1"allowsCalendarAddDeleteModify"b1"allowsEvents"b1"allowsTasks"b1"isBirthdayStore"b1"isEnabled"b1"isFacebook"b1"isLocalStore"b1"onlyCreatorCanModify"b1"snoozeAlarmRequiresDetach"b1"supportsAlarmAcknowledgedDate"b1"supportsSharedCalendars"b1"usesSelfAttendee"b1}
@32@0:8d16@24
v24@0:8@?<v@?@"NSString">16
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"NSXPCListener"
B40@0:8@16@?24@32
@"NEKSessionAnalyticsStore"
i24@0:8q16
i24@0:8Q16
i24@0:8@16
i24@0:8d16
v24@0:8^{sqlite3_stmt=}16
^{sqlite3_stmt=}16@0:8
^{sqlite3_stmt=}
@"NEKEnvironment"16@0:8
@"<NEKChangeObserverDelegate>"16@0:8
v24@0:8@"<NEKChangeObserverDelegate>"16
@"<NEKChangeObserverDelegate>"
v36@0:8i16#20@?28
@32@0:8q16@24
@"NSError"
v24@0:8@"<NEKChangeObserver>"16
B40@0:8@16@24^@32
v48@0:8@16@24@32@?40
v28@0:8@16B24
B40@0:8@"SYService"16@"SYSession"24^@32
v40@0:8@"SYService"16@"SYSession"24@"NSError"32
v40@0:8@"SYService"16@"NSData"24@?<v@?B@"NSError">32
v48@0:8@"SYService"16@"NSInputStream"24@"NSDictionary"32@?<v@?B@"NSError">40
v40@0:8@"SYService"16@"NSError"24@"NSDictionary"32
@"SYSession"40@0:8@"SYService"16@"SYSession"24@"SYSession"32
v40@0:8@"SYService"16@"NSUUID"24@"NSUUID"32
v28@0:8@"SYService"16B24
v24@0:8@"SYService"16
v32@0:8@16^{StartSessionResults=BB@}24
d24@0:8q16
@"SYService"
@"NEKStore"
@"NEKSyncSession"
@"NEKAnalyticsDriver"
@"NEKStatTracker"
@"NEKRPCEndpoint"
@"NEKProgressLiar"
@"NEKTestControl"
@"<NEKSyncControllerDelegate>"
@"NEKPBCalendarWrapper"
@"NEKPBDeleteEvent"
@"NEKPBDeletionWrapper"
@"NEKPBICSWrapper"
@"NEKPBSetAlarmSnooze"
@"NEKPBSetParticipantStatus"
@"NEKPBSetReminderComplete"
@"NEKPBSourceWrapper"
@"NEKPBValidationWrapper"
{?="packetNumber"b1}
@"NEKSourceAttributes"
@?16@0:8
@"NSURL"
{?="isDefaultLocalCalendar"b1}
@"NEKEventChangeObserver"
@"NEKReminderChangeObserver"
@"NEKEventStore"
@"NEKReminderStore"
@"NSThread"
@"NSObject<OS_dispatch_semaphore>"
{?="attendeeStatus"b1"entityType"b1"invitationStatus"b1"locationPredictionState"b1"properInvitationStatus"b1"startDate"b1"invitationChangedPropertyFlagAttendeeComment"b1"invitationChangedPropertyFlagAttendeeStatus"b1"invitationChangedPropertyFlagDate"b1"invitationChangedPropertyFlagLocation"b1"invitationChangedPropertyFlagTime"b1"invitationChangedPropertyFlagTitle"b1}
@24@0:8q16
I40@0:8@16@?24^@32
B32@0:8@16^@24
I40@0:8@"SYSession"16@?<B@?@"<SYChange>">24^@32
v40@0:8@"SYSession"16@"NSArray"24@?<v@?B@"NSError">32
v32@0:8@"SYSession"16@"NSError"24
B32@0:8@"SYSession"16^@24
v32@0:8@"SYSession"16@?<v@?B@"NSError">24
v32@0:8@"SYSession"16@"NSSet"24
^{ct_green_tea_logger_s=}
@"NEKValidationWrapper"
@"NEKResultsPipe"
@"NEKResultsFetcher"
@"NDTPerf"
{?="snoozeAmount"b1}
@32@0:8@16q24
@40@0:8@16q24q32
@"NSData"24@0:8@"<SYChange>"16
@"<SYChange>"32@0:8@"NSData"16q24
@"NSData"24@0:8@"<SYObject>"16
@"<SYObject>"24@0:8@"NSData"16
@"NSData"32@0:8@"<SYChange>"16q24
@"<SYChange>"40@0:8@"NSData"16q24q32
v52@0:8@16i24#28@?36@?44
v44@0:8@16@24i32@?36
v44@0:8@16@24B32@36
@"NSMapTable"
v36@0:8@16i24@28
@"NEKPBCalendarIdentifier"
{?="displayOrder"b1"taskCompletionDate"b1"calendarItemCount"b1}
@"NEKPBDuplicateCheck"
@"NEKPBOccurrenceCache"
@"NSNumber"
{?="date"b1}
B56@0:8@16@24@32^@40^@48
@"NEKReminderChangeTrackingStateMap"
@"REMChangeTracking"
@"REMChangeToken"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^@16
v48@0:8@16@24@?32@?40
{?="eventStart"b1"span"b1}
r*16@0:8
v24@0:8r*16
@"<NDTActivityDelegate>"
@"NSObject<OS_os_transaction>"
@"NSObject<OS_xpc_object>"
{?="type"b1}
{?="span"b1"status"b1}
@"NEKPBSourceAttributes"
Setting ICS, len:%d
Error fetching local account: %{public}@
Error fetching lists in local account: %{public}@
Read in location for a reminder
Adding ICS to wrapper to send: %{public}@
Setting task with identifier %{public}@ as completed, completion date is %{public}@
Reminder %{public}@ does not have daCalendarItemUniqueIdentifier. Falling back to use REMObjectID.
Setting all properties on %@, identifier: %{public}@
Setting minimal properties on %@, identifier: %{public}@
Can't create canonical unique identifier for reminder %{public}@. Identifier returned by REMReminder is %{public}@
Unable to create UUID for %s %{public}@
Error fetching account. Account's persistent ID: [%{public}@]
Converting old plist state
Done converting old plist state
dataWithContentsOfFile gave us nothing
propertyListWithData gave us nothing. Error: %{public}@
_rawSendData assigned IDS identifier: %@
_rawSendData has an error: %{public}@
_rawSendFile assigned IDS identifier: %@
_rawSendFile has an error: %{public}@
No identifier returned. Error: %{public}@
Incoming reply message but no handler registered.
Can't find a handler for this message
didSend:%c IDS id: %{public}@, error: %{public}@
Validation failure. Local: %@ Remote: %@
Validation faulting on second failure: Local: %@ Remote: %@
Validation succeeded, %@.
Called with nil recordID or nil event store
Event deletion wrapper: %{public}@ -> %{public}@
Analytics detected excess calendar item on watch, identifier: %{public}@, timestamp: %9.0f
Analytics detected missing calendar item on watch, identifier: %{public}@, timestamp: %9.0f
Memory delta from save: %lld #perf
Event database save time: %fs #perf
Error saving EventKit database: %{public}@
Database changes saved successfully
%{public}s: Ignoring EventKit code path for getting default task calendar
_shouldSendEvent: Got a nil identifier for event: %p
Entity with summary %{public}@ identifier %{public}@ is a phantom master.  Ignoring.
_shouldSendEvent: Entity with summary %{public}@ identifier %{public}@ is detached, master identifier is %{public}@
_shouldSendEvent: Entity with summary %{public}@ identifier %{public}@ is detached, but can't get master, so using the actual detached event
No calendar for event with summary %{public}@ identifier %{public}@, event won't be tracked for sending duplicates, but we'll soldier on and likely fail somewhere later down the line.
Calendar identifier is nil for event %{public}@ identifier %{public}@. This is probably very bad.
Entity with summary %{public}@ and identifier %{public}@ already in set for calendar with identifier %{public}@, not sending again
Entity with summary %{public}@ and identifier %{public}@ not in set for calendar with identifier %{public}@, adding
Identifier is nil after much fiddling. Perhaps the master identifier is to blame?
Selecting reminder %{public}@
Fetched source via ID %{public}@ and got source:%p
NOT zapping source though I really feel like I should.
Create or update source: %{public}@, source:%p
Saving after updating a source (%{public}@) failed: %{public}@
Updated source (%{public}@) saved successfully.
No need to create source since the source [%{public}@] doesn't exist in database and the source wrapper has allowsEvents=NO
Creating non-local source
Saving after creating a source (%{public}@) failed: %{public}@
New source (%{public}@) saved successfully.
Received source wrapper that I'm not sure how to process: %{public}@
Error saving new/updated source (%{public}@): %{public}@
Update calendar: %{public}@
Error saving updated calendar (%{public}@): %{public}@
Create calendar: %{public}@
I'm refusing to create this calendar because I am a phone.
Sent calendarWrapper with no attributes, updating defaults.
%{public}s: Ignoring EventKit code path for reminder with identifier: [%{public}@]
%{public}s: Ignoring sidecar data for phantom master with identifier: [%{public}@]
Handling updated event from gizmo with summary %{public}@ and identifier %{public}@
Set self attendee status to 0x%08x for event with identifier %{public}@
Set invitation status to none for event with identifier %{public}@
Error saving database while setting event invitation status: %{public}@
No need to set attendee status, synced value is the same as existing value: 0x%08x for event with identifier %{public}@
Handling updated task from gizmo with summary "%{public}@" and identifier %{public}@
Task with identifier %{public}@ is completed, completion date is %{public}@
Saved event with identifier %{public}@, externalID is %{public}@
Failed to save event with identifier %{public}@. Error =  %{public}@
Participant status did not change. No need to save event with identifier %{public}@, externalID is %{public}@
Handling updated master event from gizmo with participationStatus %d, summary "%{public}@", and identifier %{public}@
Can't get row id for master with identifier %{public}@ to set attendee status for recurring series
Checking for calendar match for event %{public}@ with identifier %{public}@
Checking for match on calendar, we want %{public}@, calendarIdentifier is %{public}@
Handling master event from gizmo with participation status %d, summary %{public}@, and identifier %{public}@
Couldn't get master event for recurring event sequence with identifier %{public}@, but we'll check for detached events in case those are still around
Using existing detached event
Grabbing recurrence to use for detached event
Handling updated detached event from gizmo with participation status %d, summary %{public}@, and identifier %{public}@.
Failed to get/create event with identifier %{public}@ to set attendee status %d, skipping event
Failed to commit after saving recurring event series with master identifier %{public}@. Error =  %{public}@
Found event with identifer %{public}@ but in the wrong calendar.
%{public}s: No calendar item with identifier %{public}@ in calendar with identifier %{public}@
Received ICS wrapper: %{public}@
recv: %{public}@
recv LZFSE: <<!%@!>>
performUpdateWithICSWrappers: Calendar %{public}@ does not exist!
Processing update from the watch, main identifier is %{public}@
Cannot find object of type %d to update.
No calendar item found for main event in recurring series with identifier %{public}@ in calendar with identifier %{public}@
Processing add/update from companion, or a new record from the watch, id = %{public}@
Error deleting event for identifier remap: %{public}@
Item ID remapping complete: %{public}@ => %{public}@
Calendars don't match, so deleting from old calendar: old calendar id = %{public}@, current calendar id = %{public}@
Calendars match, so event didn't move: calendar id = %{public}@
Got an update/add for event "%{public}@", no old calendar id was sent, so this is from an old record map and falling back to old code to check and delete from any old calendar. The current calendar id = %{public}@
We have a recurring event %{public}@ and identifier %{public}@, checking to see if any detached events need attention
performUpdateWithICSWrappers: handling detached event %{public}@ identifier %{public}@
performUpdateWithICSWrappers received %d items
Critical error, received compressed and uncompressed data.
ICS Import: %fs #perf
We have a recurring event with summary "%{public}@" and identifier %{public}@, deleting all detached events too, since they have also moved calendars
Deleting detached event from old calendar since it has moved. Event summary "%{public}@", identifier %{public}@
No calendar for calendar identifier %{public}@
Skipping deletion for event with identifier %{public}@ in calendar with identifier %{public}@, we already detected and deleted it as part of a recurring master's detached events
Found no matches for potential deletion of calendar item %{public}@
Found multiple matches for potential deletion of calendar item %{public}@
Error deleting item: %{public}@
Changing event id from %{public}@ to %{public}@
setting externalID %{public}@ for event with identifier %{public}@
No externalID in metadata for event with identifier %{public}@
Changed date changed flag to %d for event %{public}@
Changed time changed flag to %d for event %{public}@
Changed title changed flag to %d for event %{public}@
Changed location changed flag to %d for event %{public}@
Changed attendee comment changed flag to %d for event %{public}@
Changed attendee status changed flag to %d for event %{public}@
Setting location prediction state to %d for event %{public}@
Error saving event in applySidePropertiesToEntity: %{public}@
Self attendee email is %{public}@, and uuid is %{public}@ for event with identifier %{public}@
Found self attendee for event with identifier %{public}@, email = %{public}@, address = %{public}@
No self attendee email in wrapper for event with identifier %{public}@
Determined user is organizer for event with identifier %{public}@, email = %{public}@, address = %{public}@
updateSelfAttendeeForCalendarItem saving, attendees: %d, span: %d
updateSelfAttendeeForCalendarItem save error: %{public}@
Deleteing suppression cache entry for %@
Suppressing alert due to cache hit on %@
Setting invitation status %{public}@ for event with identifier %{public}@
No invitation status in wrapper for event with identifier %{public}@
Surreptitiously adding event to changeset: %{public}@ due to attendee change
Can't create wrapper for source %@
Sending source wrapper accountPersistentID=%{public}@ isLocalStore=%d events=%d tasks=%d
Skipping hidden calendar: %{public}@
CalendarID remap detected: %{public}@ => %{public}@
Could not create calendar wrapper for entity: %{public}@
Default reminder and event calendar are the same.
Marking default task calendar in wrapper to calendar with name %{public}@, identifier %{public}@
Marking default event calendar in wrapper to calendar with name %{public}@, identifier %{public}@
publicObjectWithObjectID returned nil, objectID: %{public}@
Event %{public}@ returned a unique id of nil.
%{public}s: Ignoring EventKit code path for reminder
CalendarItem remap detected: %{public}@ => %{public}@
Decided not to send event %@
Decided not to send reminder %@
Decided not to send %{public}@
Deletion wrapper: %@
Could not create deletion wrapper for recordID: %{public}@
Deletion wrapper for source: %@
Attempt to create wrapper for unknown type: %{public}@
Error deleting source with identifier %{public}@
Deleted source with identifier %{public}@
Cannot delete source; no source exists for %{public}@
Error deleting calendar with identifier %{public}@, error: %{public}@
Deleted calendar with identifier %{public}@
Cannot delete; no calendar exists for %{public}@
Deleting event (span future) with identifier %{public}@, recordID %{public}@
Deleting event (span single) with identifier %{public}@, recordID %{public}@
Error deleting event %{public}@
Deleting event with identifier %{public}@, from calendar with identifier %{public}@
Deleting event with identifier %{public}@, from any calendar, old mapping didn't send calendar to delete from so falling back to old code
Deleting event %{public}@ failed as we were not handed an event by the store.
No event exists for %{public}@
Failure to delete reminder: %{public}@
No reminder exists for %{public}@
Updating calendar with title %{public}@, identifier %{public}@
%{public}s: Ignoring EventKit code path: mixed entity calendar is not supported
%{public}s: Ignoring EventKit code path: creating reminders calendar is not supported
Source not found with sourceID: %@
Created calendar with title %{public}@, identifier %{public}@
Asked to set a nonexistent calendar as the default. Ignoring. Calendar identifier = %{public}@, store identifier = %{public}@
wrapperForCalendarItem: Entity with identifier %{public}@ is detached, master identifier is %@
Entity with identifier %{public}@ is detached, but can't get master
Entity with identifier %{public}@ is master for a recurring series
Handling detached events for %{public}@, count=%d
LZFSE ICS: <<!%@!>>
self attendee status is 0x%08x for event with identifier %{public}@
Setting all properties on %@, identifier: %{public}@, attendees: %d
Setting minimal properties on %@, identifier: %{public}@, attendees: %d
Can't create canonical unique identifier for event %{public}@. Identifier returned by CalCalendarItemCopyUniqueIdentifier is %{public}@
NEKSyncCoordinator initialized %@
%{public}s:%d %s --mark--
Restriction is now %{public}s
Migrated prefs; version %zd -> %zd
Rebroadcast pref for key %{public}@
Synced prefs for keys %{public}@
Received weird session type: %d
Incoming message missing required body.
Local store ID %@, remote store ID %@
itemIdentifier: %@, event: <%p>
Failure to save event: %{public}@
_recvSetParticipantStatusEndpoint ignored
Cannot finder reminder '%{public}@:%{public}@'
Failure to save reminder: %{public}@
Reminder saved successfully.
_recvSetEventKitReminderCompletedEndpoint ignored
_recvSetReminderKitReminderCompletedEndpoint ignored
Failure to delete event %@: %{public}@
I have %d candidate events so I'm not sure what to delete.
_recvDeleteEventEndpoint ignored
Snooze Reminder: time:%.1f calendar: '%{public}@' reminder: '%{public}@' externalId: %@
No reminder alarm found
Snooze Event: time:%.1f calendar: '%{public}@' itemIdentifier: %@ event: <%p> local store ID: %@, remote store ID: %@
Event saved successfully.
No event alarm found
_recvSetEventKitAlarmSnoozeEndpoint ignored
_recvSetReminderKitAlarmSnoozeEndpoint ignored
Found reminder %{public}@:%{public}@
Cannot find reminder %{public}@:%{public}@
Sending analytics blob (%d bytes), IDS identifier %{public}@, result: %d
Failure to deserialize analytics data from watch
Failure to initialize SQL log: %@, userInfo: %@
== Started EventKitSync_Sim-394
Pairing ID: %{public}@
Pre prefs observer init
Post prefs observer init
_blockUntilUnlock returned
Beginning XPC transaction for com.apple.notifyd.matching notification named %{public}@
Launched from IDS
Triggering full sync for testing notification %{public}@
Thinking about a migration sync.
SignificantTimeChange incremental sync
SignificantTimeChange ignored
Calling pref observer for notification: %{public}@
Ending XPC transaction for com.apple.notifyd.matching notification named %{public}@
Analytics activity
Failed to set done state
%s: Registered for XPC activity.
Registered for notifications.
Received full sync command from NEKSyncCoordinator.
Prefs synced.
Starting sync controller.
Received reunion sync command.
Creating sync controller
Assigning sync controller
Starting sync controller
Cannot determine calendar identifier for reminder %{public}@. Deletion wrapper will be sent but the remote device may not be able to delete the reminder
Failed to fetch account with identifier %{public}@
Attempting to send source wrapper for CloudKit reminders account %{public}@ with allowsEvents=YES but the other side does not support CloudKit. This is not expected but is handled by sending a source wrapper with allowsEvents=YES and allowsTasks=NO.
Attempting to send source wrapper for CloudKit reminders account %{public}@ with allowsEvents=NO but the other side does not support CloudKit. Dropping this source wrapper and it will not be sent.
Sending %{public}@ reminder-only EKSource %{public}@ with REMAccount %{public}@
Performing a priori deletion of calendar %{public}@
Deletion of calendar %{public}@ didn't go so well: %{public}@
Error committing store after preemptive deletion of calendars: %{public}@
Successful save after deleting very suspicious calendars.
Starting configuration of source with persistent ID: [%{public}@].
Source's 'name' has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'defaultAlarmOffset' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'type' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'enabled' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's '%@' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'usesSelfAttendee' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'constraintsDescriptionPath' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'externalID' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'creatorBundleID' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'creatorCodeSigningIdentity' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'accountPersistentID' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'supportsSharedCalendars' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'allowsTasks' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Skipping deletion of task calendar as we are on the phone.
Source's 'allowsEvents' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Skipping deletion of event calendar as we are on the phone.
Source's 'allowsCalendarAddDeleteModify' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'onlyCreatorCanModify' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'snoozeAlarmRequiresDetach' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'supportsAlarmAcknowledgedDate' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Completed configuration of source with persistent ID: [%{public}@].
Sorry. Unable to determine identifier or resolve EKSource object for EKObjectID %{public}@
Source with ID %{public}@ does not exist. This is unexpected for update/insert. Skipping.
Source with ID %{public}@ (%@) updated. Going to send wrapper for this source.
EKSource %{public}@ (%@) is still available due to one of the event/reminder dataclass still enabled. Treating this as an update to send wrapper for dataclass updates.
Deleted source/account %{public}@ is not available anymore. Going to send delete wrapper for this source
Window: start: %{public}@ end: %{public}@, isFullSync: %d
Asked for incremental sync window when there was no/incomplete previous sync window data
Rejected event: %{public}@ %{public}@
Rejected reminder: %{public}@ %{public}@
Accepting unknown entity: %{public}@
event not in future: %{public}@ "%@"
reminder not in future: %{public}@
Migrating recordMap to version 1.
Migrating recordMap to version 2.
Migrating recordMap to version 3.
read id:%{public}@ %d/%d/%d
Attempt to save a nil identifier: %d/%d
set id:%{public}@ %d/%d/%d
Deleting everything from record map
eT:%d eR:%d eD:%d id:%{public}@ m:%d
Lying about progress: %0.2f%%
doneForRealNotifyingPairedSync: %d
Returning suggested db path: %@
Creating REMAccount with id:%{public}@ type:%@ name:%@
Error creating account. Source's persistent ID: [%{public}@]
UNSUPPORTED: Local source's 'name' has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'defaultAlarmOffset' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'type' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'enabled' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's '%@' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'usesSelfAttendee' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'externalID' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'externalModificationTag' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'creatorBundleID' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'creatorCodeSigningIdentity' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'accountPersistentID' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'supportsSharedCalendars' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'allowsTasks' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Updating local account .inactive to %{public}@.
Deleting account with identifier %{public}@.
UNSUPPORTED: Source's 'allowsEvents' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'allowsCalendarAddDeleteModify' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'onlyCreatorCanModify' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'snoozeAlarmRequiresDetach' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'supportsAlarmAcknowledgedDate' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Unknown account type %ld
Unexpected constraint plist path from ReminderKit account: %@
Flushing to CoreAnalytics
Daily tally: D: %d R: %d F: %d
Terminating enumeration early
Sqlite create failed, path: %s, error: (%d)
Sqlite statement prepare failed for "%{public}s"
NEKSqueeze failed to initialize
NEKSqueeze failed to compress
Compressed ICS %d->%d %.01f%%
NEKFluff failed to initialize
NEKFluff failed to uncompress
ReminderKit enabled.
ReminderKit disabled.
Remote system build version: %{public}@
New NEK.SYService queue: %p
Shutting down existing SYService: %p
Selecting file transfer engine
Selecting data messaging engine
Failed to resume SYService: %{public}@
Started new SYService: %p
Enqueueing a full sync
Enqueueing a delta reunion sync
Reunion sync with faults- Forcing full sync
Poking CS for nightly sync
Nightly sync requested but we have faults. Ignoring request.
Requested migration sync
Migration number is fine, no migration sync needed.
Migration check dropped.
Looks like I could use a reset but it turns out we're already standing right in the middle of one, so let's just move on.
Retrying a failed sync (%d) (reset)
Retrying a failed sync (%d) (delta)
Retrying a deferral.
_retrySync called but we have no faults. We're perfect!
%{public}@
Handling task list.
Handling calendar.
Calendar/list "%{public}@"/%{public}@ has entitySupportType %d
Recevied calendar wrapper without attributes and without default selection: "%{public}@"/%{public}@
Attempting to set a default calendar or list
Assuming mixed entity NEKICSWrapper comes from EventKit
object is not of recognized class: %{public}@
Got a deletion wrapper from SYStore: %{public}@
passed weird class: %{public}@
Decided to prefer reset session over delta.
Winning session: %{public}@, losing session: %{public}@
%{public}s %{public}@ #%{public}@ #%{public}@
Session start call not balanced. This is a fatal condition.
Locking session idle queue.
StartSession result: %d
No session created so declaring completion to PSYSync
Deferrability: %d
Delta sync fired but it really wants to be a reset sync.
Change set was empty, not starting a sync session.
Change set is deferrable, not starting session.
Retry is overdue and we need a reset. Forcing things along.
We were denied delta sync effort but there is no backup due date. Scheduling retry based on current faultCount/connectedState
Sync request ignored: isReset: %d isNightly: %d clearToDelta: %d
Session timeout: %.02f
perMessageTimeout: %d
Before timeout stats: x=%.02f sigma=%f
Comically long session timeouts enabled!
Comically short session timeouts enabled!
XPC activity deferral requested.
Remote engine requirement zapped.
This pipe better be dead: %{public}@
Session is nil during sessionEnded.
service.currentSession is nil, clearing user session.
Current session [%{public}@] != ending session [%{public}@]. Error: %{public}@ Dropping notificaiton on floor.
Resuming session idle queue
Fatal: sessionEnd call not balanced.
Send complete with error: %{public}@
SendingSession: %{public}@ error: %{public}@ cpuTime: %.02fms
There was a sync error%{public}@.
Failed session was a %{public}s so setting up retry to be a reset.
SYErrorCanceled (deferral/collision)
LostCollisionTest error, retry should already be scheduled.
Post failure update sync timings: x=%.02f sigma=%f
Looks like I didn't schedule  retry. That's bad.
Following nightly sync with request for delta
Post success update sync timings: elapsed=%.02f x=%.02f sigma=%f
Before join.
After join.
ReceivingSession: %{public}@ error: %{public}@ cpuTime: %.02fms
Session walltime breakdown (ms): %llu store, %llu calendar, %llu events, %llu reminders.
Recv complete with error: %{public}@
Remove all items
Poking CS for delta sync
Delta sync request suppressed
Change log truncation is making us request a reset
Reset sync request suppressed
For %{public}@ we are sending attendee stats (ek %d, wire %d)
For %{public}@ setting attendee status to (wire %d, ek %d)
fetchEverythingIntoPipe:PipeBefore: %{public}@
%{public}s: All things pushed successfully
fetchEverythingIntoPipe:PipeAfter: %{public}@
fetchNightlyIntoPipe:PipeBefore: %{public}@
%{public}s: All nightly things pushed successfully
fetchNightlyIntoPipe:PipeAfter: %{public}@
Finishing pipe (empty changesets): %p
Finishing pipe. Changeset is deferrable.
fetchChangesIntoPipe:PipeBefore: %{public}@
fetchChangesIntoPipe:PipeAfter: %{public}@
Default local list does not exist
Cannot find list for identifier %{public}@
Starting configuration of list with UUID: [%{public}@].
UNSUPPORTED: List's 'UUID' has changed from [%@] to [%@].  List's UUID: [%{public}@]
List's 'title' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isReadOnly' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isHidden' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isImmutable' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isInbox' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isNotificationsCollection' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isSharingInvitation' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isSubscribed' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isHolidayCalendar' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isFamilyCalendar' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isIgnoringEventAlerts' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isIgnoringSharedCalendarNotifications' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isSchedulingProhibited' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isDefaultCalendarForStore' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'digest' has changed from [%@] to [%@].  List's UUID: [%{public}@]
List's 'symbolicColorName/colorString' has changed from [%@/%@] to [%@/%@].  List's UUID: [%{public}@]
List's 'displayOrder' has changed from %ld to %d.  List's UUID: [%{public}@]
UNSUPPORTED: List's 'sharingStatus' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'sharedOwnerName' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'sharedOwnerAddress' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'sharingInvitationResponse' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'publishedURL' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'canBePublished' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'canBeShared' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isPublished' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'externalID' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'externalIdentificationTag' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'daSyncToken' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'externalModificationTag' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'externalRepresentation' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'invitationStatus' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'notes' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'subCalAccountID' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'pushKey' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'selfIdentityDisplayName' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'selfIdentityEmail' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'selfIdentityAddress' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'selfIdentityFirstName' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'selfIdentityLastName' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'ownerIdentityDisplayName' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'ownerIdentityEmail' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'ownerIdentityAddress' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'ownerIdentityFirstName' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'ownerIdentityLastName' has changed from [%@] to [%@].  List's UUID: [%{public}@]
Completed configuration of list with UUID: [%{public}@].
Change exceeded batch size. Will catch next batch.
Enqueued last change, pipe error: %{public}@
Enqueing validation message.
Not enqueuing validation message as the population shifted during sync.
Sending events
Applying changes
Sync disabled. Dropping changes on floor.
Deserialization failed.
Hit ICS batch import capacity.
Picking up final ICS batch import, %d items.
Calling sync session completion.
Sync disabled. Ignoring reset request.
Calendar "%@"/%{public}@ supports no entity types.
didCalendarChange: title:%{public}@ identifier:%{public}@
didCalendarChange: local->syncToken:%{public}@ externalModificationTag:%{public}@ externalIdentificationTag:%{public}@
didCalendarChange: incmg->syncToken:%{public}@ externalModificationTag:%{public}@ externalIdentificationTag:%{public}@
No changes for calendar with title %{public}@, identifier %{public}@
_calendarPropertyIsEqualToAttributeProperty: Calendar and attributes property %{public}@ are different: (calendar) %{public}@ != (attributes) %{public}@
dataWithSYChange: serializing object of class: %{public}@ S_PKT_NUM:%04x_%04x
Sending reminder with location
SYChangeWithData - unrecognized type: %{public}@
SYChangeWithData: returning object of type: %{public}@ R_PKT_NUM:%04x_%04x
Transport number gap detected. Might be a problem, might not.
Could not create wrapper object
Error saving save request %@: %{public}@
Purge deleted object is not supported on this platform. Ignoring.
Reminders database save time: %fs #perf
Can't create save request for nil store. Using a fresh REMStore to avoid crashing, but this won't be correct.
Save request created with needsPurgeDeletedObjectsAfterSave=YES. The next save will be slow.
Received reset sync. Resetting change tracking state map to %{public}@
Error fetching accounts: %{public}@
Skip deleting list in CloudKit account with ID %{public}@
Error fetching lists: %{public}@
Selecting reminder (id=%{public}@, calendarUniqueId=%{public}@)
Error fetching account with ID: [%{public}@]
Reminders: Create or update account: %{public}@
Reminders: Account (%{public}@) saved successfully.
Reminders: Saving after updating an account (%{public}@) failed
Reminders: No need to create account since the account [%{public}@] doesn't exist in database and the source wrapper has allowsTasks=NO
Received source wrapper without corresponding REMAccount: %{public}@
Error fetching list with ID: [%{public}@]
Update list: %{public}@
List (%{public}@) saved successfully.
Error saving updated list (%{public}@)
Create list: %{public}@
New list (%{public}@) saved successfully.
Error saving new list (%{public}@)
Unknown deletion wrapper: %{public}@
Handling updated reminder from gizmo with summary "%{public}@" and identifier %{public}@
Reminder with identifier %{public}@ is completed, completion date is %{public}@
Received ICS wrappers with the same identifier %{public}@ in the same batch. Deduplicating. 
Going to build list cache for IDs %{public}@
Built list cache for wrappers %{public}@
Received ICS wrappers with the same identifier %{public}@ in the same batch
Going to build reminder cache for IDs %{public}@
Failed to batch fetch reminders with calendar item unique ID %{public}@. error=%@
Built reminder cache for wrappers %{public}@
List %{public}@ does not exist. Skip processing this wrapper.
Processing add/update from companion, or a new record from the watch
Got an update/add for reminder, old list id = %{public}@, current list id = %{public}@
Lists don't match, so deleting from old list: old list id = %{public}@, current list id = %{public}@
Lists match, so reminder didn't move: old list id = %{public}@, current list id = %{public}@
Got an update/add for reminder "%{public}@", no old list id was sent, so this is from an old record map and falling back to old code to check and delete from any old list. The current list id = %{public}@
Reminder for identifier %{public}@ not found (%@)
No ReminderChangeItem was created. ICS importing failed?
Input to _ensureReminderInList is nil (%@, %@, %@). Skipping.
Unexpected wrapper type %lu for identitifer %{public}@
Found no matches for potential deletion of moved reminder %{public}@ with error %@
Failed to batch fetch account %{public}@ %@
Fetched account batch: %{public}@ %{public}@
Failed to batch fetch list %{public}@ %@
Fetched list batch: %{public}@ %{public}@
Failed to batch fetch reminder %{public}@ %@
Fetched reminder batch: %{public}@ %{public}@
Skipping storeWrapperForCloudKitAccount as changeSet is empty
Failed to create source wrapper for CloudKit account %{public}@
Sending source wrapper for CloudKit account %{public}@
Skipping listWrappersForChangeSet as changeSet is empty
Failed to fetch list %{public}@. Unable to create wrapper.
Marking default list in wrapper to list with name %{public}@, identifier %{public}@
Skipping remindersWrappersForChangeSet as changeSet is empty
Failed to fetch reminder %{public}@. Unable to create wrapper.
Deleting account with identifier %{public}@
Cannot delete; no account exists for identifier %{public}@
Cannot delete; account with identifier %{public}@ is a local account
Cannot delete; account with identifier %{public}@ is a local internal account (this is unexpected)
Cannot delete; no list exists for identifier %{public}@
Cannot delete; no reminder exists for identifier %{public}@
Updating list with title %{public}@, identifier %{public}@
Failed to fetch an account for reminders. This is very bad.
Created list with title %{public}@, identifier %{public}@
Asked to set a nonexistent list as the default. Ignoring. List identifier = %{public}@, account identifier = %{public}@
Error removing reminder: %{public}@
Default Calendar Changed
Ignoring delta sync request as sync coordinator says it is not time.
%{public}s: Ignoring EventKit code path for sync'ing local reminders-only source %{public}@
Sending mixed entity source %{public}@ from EventKit
shouldSyncSource: %d for %{public}@
Failed to create source wrapper for %{public}@
%{public}s: Ignoring EventKit code path for sync'ing calendar %{public}@
Sending mixed entity calendar %@ from EventKit
Pipe finished, exiting allEventsInto loop.
publicObjectWithObjectID returned nil. ObjectID: %{public}@
Reading events
allEventsInto:filter:window: pushed %d items.
%{public}s: Ignoring EventKit code path for sync'ing reminders
Pulled -1 from lastSequenceNumber.
%{public}s: Saw sequence number failure already. Still waiting for corrective sync to complete.
Previous sequence number: %d, current sequence number: %d, delta: %d
Change log numbers went backward, forcing full sync (phone only)
Fetch duration: %.2f
Aggregate changelog: %{public}@
Change log truncated
fetchChangesInto: Fetching default calendars
fetchChangesInto: Changed default task calendar
fetchChangesInto: Unchanged default task calendar
fetchChangesInto: Changed default event calendar
fetchChangesInto: Unchanged default events calendar
fetchChangesInto: Done fetching default calendars
Updates is NULL. This shouldn't happen.
EventKit: Change set is empty.
Registering for persistent change tracking: %ld
Setting anchor sequence number: %d
%{public}s: Ignoring EventKit code path for getting previous default task calendar
%{public}s: Ignoring EventKit code path for setting previous default task calendar
Error fetching reminder accounts for lists: %{public}@
Pulled nil from changeTrackingStateMap.
Timed out trying to fetch changes from database.
Synthesizing delete for REMAccount %{public}@
Previous sequence number: %@
Current sequence number: %@
Found marked as delete reminder %{public}@
Found marked as delete list %{public}@
Unhandled object with markedForDeletion update %{public}@
fetchChangesInto: Fetching default list
fetchChangesInto: Changed default list
fetchChangesInto: Unchanged default list
fetchChangesInto: Done fetching default list
ReminderKit: Change set is empty.
Reminder fetchChanges: Timeout out waiting for database to respond.
Loaded change tracking state map %@
Saved change tracking state map %@
No previous NEKReminderChangeTrackingStateMap found
Error deserializing NEKReminderChangeTrackingStateMap archive. (%@)
Decoded NEKReminderChangeTrackingStateMap. %@
Encoded NEKReminderChangeTrackingStateMap: %@ (encoded=%@)
Tracking more than one store is not supported. Behavior is undefined.
Error fetching accounts %@
Error fetching changes for account %{public}@ with state %{public}@, assuming changes are truncated: %@
Filtered change set summary for account %{public}@ since token %{public}@: before: i=%{public}@ u=%{public}@ d=%{public}@; after: i=%{public}@ u=%{public}@ d=%{public}@
Fetched auxiliary delete change info %@ for object ID %{public}@
Old list ID %{public}@ for deleted reminder %{public}@
Fetched auxiliary move change info %@ for object ID %{public}@
Old list ID %{public}@ for moved reminder %{public}@
Error fetching auxiliary change info %@
Forward to latest change token for account %{public}@ (lastChangeToken=%{public}@, latestChangeToken=%{public}@).
Resetting to current change token for account %{public}@ because change history is truncated (lastChangeToken=%{public}@, latestChangeToken=%{public}@).
%{public}s%{public}@, %{public}@, %{public}@, %{public}@
%{public}s%{public}@
%{public}s%{public}@, %{public}@
%{public}s%{public}@, %{public}@, %{public}@
--empty--
%{public}s
PURGE: Error saving database after purging unwanted elements.
PURGE: Failure deleting stale source %{public}@ "%{public}@", %{public}@
PURGE: Successfully deleted stale source %{public}@
PURGE: Failure to fetch stale source, rowid: %d
PURGE: Failure deleting stale calendar %{public}@ "%{public}@", %{public}@
PURGE: Successfully deleted stale calendar %{public}@
PURGE: Failure to fetch stale calendar, rowid: %d
PURGE: Failure deleting stale event %{public}@ "%{public}@", %{public}@
PURGE: Successfully deleted stale event %{public}@
PURGE: Failure to fetch stale event, rowid: %d
EKa: Live EKEventStore: %{public}@
EKa: Total stores: %d
SIGTERM, Bye bye.
SIGQUIT, Bye bye.
Manually triggered state dump
Checkin activity state for %s: %s
Running %s (late by: %.02f)
Received an odd state in checkin for %s: %d.
%s: completeAndFireIn: %d
%s: fireIn: %d
fireIn request for %s disregarded for previous scheduled timer (%0.2f to go)
%s: completeAndFireOnConnection
%s: completeAndFireNever
%s: Set activity state to %s
%s: Failed to set activity state to %s
%s: _activityComplete
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.nano.nanoregistry</key>
<true/>
<key>com.apple.private.calendar.allow-birthday-modification</key>
<true/>
<key>com.apple.private.calendar.changeIdTrackingOverride</key>
<true/>
<key>com.apple.private.calendar.custom-database-path</key>
<true/>
<key>com.apple.private.calendar.syncclient</key>
<true/>
<key>com.apple.private.calendar.watchos-mutable-database</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.eventkitmutation</string>
<string>com.apple.private.alloy.eventkitsync</string>
<string>com.apple.private.alloy.internal.watch.calendar.analytics</string>
</array>
<key>com.apple.private.security.storage.Calendar</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceCalendar</string>
<string>kTCCServiceReminders</string>
</array>
</dict>
</plist>
%@ %@
start
items
NEKDatabaseChangedExternallyNotification
NEKDefaultCalendarChanged
NEKBlindChangeNumberAdvance
<NEKICSWrapperMetadata (%p): 
  entityType: %d
  identifier: %@
  externalID: %@
  selfAttendeeEmail: %@
  selfAttendeeUUID: %@
  selfOrganizerEmail: %@
  selfOrganizerUUID: %@
  attendeeStatus: %d
  invitationStatus: %d
  properInvitationStatus: %d
  hasProperInvitationStatus: %d
  locationPredictionState: %d
  dateChanged: %d
  timeChanged: %d
  titleChanged: %d
  locationChanged: %d
  attendeeComment: %d
  attendeeStatusFlag: %d
  startDate: %@
<%@ %p; identifier=%@; calendarIdentifier=%@; oldCalendarIdentifier=%@; title='%@'>
<%@ %p; identifier=%@; calendarIdentifier=%@; oldCalendarIdentifier=%@>
<%@ %p, calendarIdentifier = %@; oldCalendarIdentifier = %@; count = %@>
v8@?0
%@.mean
%@.variance
%@.failureTimeout
NDTSetDefaultPriority
NDTQueueFactory.m
qos != QOS_CLASS_UNSPECIFIED
NDTSetElevatedPriority
GARBAGE:%@
com.apple.eventkitsync.changeobserver.%@
<%@ %p, source = %@, calendarIdentifier = %@>
watch.eventsync
com.apple.eventkitsync
persistentID
isLocalStore
+[NEKSourceID(Reminder) accountForStore:identifier:]
NDTSQFile.%@.%p
%04d%02d%02d-%02d%02d%02d
:memory:
mobile
_openDatabase(1)
NDTSQError
pragma journal_mode=wal
_SQ_Versions
%@-wal
%@: %s
_executeSql(1)
_parseSql:(1)
_parseSql:(2)
BEGIN
begin(1)
COMMIT
commit(1)
ROLLBACK
rollback(1)
sourceIdentifier
calendarIdentifier
attributes
isDefaultTaskCalendar
isDefaultEventCalendar
oldCalendarIdentifier
%@%@%@
UUID
title
isReadonly
isHidden
isImmutable
isInbox
isNotificationsCollection
isSharingInvitation
isSubscribed
isHolidayCalendar
isFamilyCalendar
isIgnoringEventAlerts
isIgnoringSharedCalendarNotifications
isSchedulingProhibited
isDefaultCalendarForStore
type
digest
symbolicColorName
colorString
displayOrder
sharingStatus
sharedOwnerName
sharedOwnerAddress
sharingInvitationResponse
publishedURLString
canBePublished
canBeShared
isPublished
externalID
externalIdentificationTag
syncToken
externalModificationTag
externalRepresentation
supportedEntityTypes
invitationStatus
hasBeenAlerted
notes
subCalAccountID
pushKey
selfIdentityDisplayName
selfIdentityEmail
selfIdentityAddressString
selfIdentityFirstName
selfIdentityLastName
ownerIdentityDisplayName
ownerIdentityEmail
ownerIdentityAddressString
ownerIdentityFirstName
ownerIdentityLastName
TinyStore
tinyStore.sqlitedb
tinyStore
tinyStore.plist
com.apple.eventkitsync.changeobserver.sequencenumber
FaultCount
RetryMustBeReset
heardFromPhone
MigrationSyncCount
eventCalendarId
taskCalendarId
windowEnd
windowStart
deltaSync.failureTimeout
deltaSync.mean
deltaSync.variance
resetSync.failureTimeout
resetSync.mean
resetSync.variance
nightlySync.failureTimeout
nightlySync.mean
nightlySync.variance
msgType
NDTMessaging
-[NDTMessaging sendMessage:responseHandler:completion:]
-[NDTMessaging reply:to:completion:]
-[NDTMessaging service:account:incomingData:fromID:context:]
-[NDTMessaging service:account:incomingResourceAtURL:metadata:fromID:context:]
/tmp/verifier_data.XXXXXX
%s/%@
ValidationWrapper
cvAlertEnabled
com.apple.Bridge.CalendarSyncDebug
yyyyMMdd/HHmm
<%@:%p start:%@ end:%@ masterCount:%d occurrenceCount:%d>
Calendar validation failure. Please file a radar against "EventKitSync | watchOS"
Sync validation failure
select value from %@ where key = ?
update %@ set value = ? where value = ? and key = ?
insert or replace into %@ (key, value) values (?, ?)
delete from %@ where key = ?
create table if not exists %@ (key text unique, value text)
NDTSQKeyValueStore:%@
i16@?0@"NDTSQStatement"8
name
externalId
00000000/0000
/System/Library/LaunchDaemons/com.apple.SpringBoard.plist
syncReport.json
datestamp
duplicates
drift
sources
calendars
v24@?0@"NEKPBItemOccurrence"8q16
com.apple.eventkitsync.nekeventstore
com.apple.eventkitsync.dbidleblocks
com.apple.eventkitsync.pipe
SaveDB
-[NEKEventStore getDefaultTaskCalendar:defaultEventCalendar:store:]
updateICS:
deleteItemWithIdentifier:
-[NEKEventStore deleteItem:store:]
-[NEKEventStore handleNewEntity:withWrapper:session:]
-[NEKEventStore handleUpdatedItemFromGizmo:type:withWrapper:identifier:]
/RID=
updateMasterEvent:blah...
%@%@%llu
-[NEKEventStore handleCalendarEventWithUniqueIdentifierFromGizmo:calendar:wrapper:detachedEventMap:]
-[NEKEventStore handleCalendarTaskWithUniqueIdentifierFromGizmo:calendar:wrapper:]
com.apple.eventkitsync.lzfse.receive.logging
-[NEKEventStore _processUpdateFromWatch:calendar:store:]_block_invoke
v16@?0@"NSString"8
-[NEKEventStore _deleteCalendarItemsInICSWrapperFromOldCalendar:store:]_block_invoke
-[NEKEventStore _deleteCalendarItemsMovedToCalendar:inICSWrapper:]_block_invoke
v28@?0@"EKObjectID"8i16^B20
ICSWrappers:Inserts
ICSWrappers:Updates
-[NEKEventStore ICSWrappersForChangeSet:pipe:]_block_invoke
-[NEKEventStore _createCalendarForWrapper:store:]
com.apple.eventkitsync.lzfse.send.logging
com.apple.eventkitsync.recievedpairedsyncstart
com.apple.eventkitsync.recievedreunionsyncstart
com.apple.pairedsync.eventkitsync
internal_ignorePairedSync
com.apple.EventKitSync
/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/NEKSyncBundle/Models/NEKSyncCoordinator.m
-[NEKSyncCoordinator syncCoordinator:beginSyncSession:]
-[NEKSyncCoordinator syncCoordinator:didInvalidateSyncSession:]
None
LimitPush
startDate
endDate
masterCount
occurrenceCount
showAlert
com.apple.NanoCalendar.PrefSync.PrefMigrationSeed
com.apple.mobilecal
InviteeDeclineAlerts-rebroadcast
ShowDeclinedEvents-rebroadcast
enableTravelAdvisoriesForAutomaticBehavior
com.apple.calendar.database.preference.notification.enableTravelAdvisoriesForAutomaticBehavior
com.apple.NanoCalendar
preferences_observer
LastDeselectedCalendarSyncHashes
LastDeselectedCalendarSyncIdentifiers
TimeZoneCityArray
kCalTimeZonePrefChangedDistributedNotification
overlayCalendarID
DefaultTimedAlarmOffset
DefaultAllDayAlarmOffset
com.apple.calendar.defaultAlarmChangedNotification
ShowWeekNumbers
com.apple.mobilecal.preference.notification.showweeknumbers
CalEventDeclineEventPrefChangedRebroadcast
CalEventShowInviteeDeclinesPrefChangedRebroadcast
CalEventDeclineEventPrefChanged
CalEventShowInviteeDeclinesPrefChanged
v32@?0@"NSString"8@"NSSet"16^B24
CREATE TABLE IF NOT EXISTS analytics (hour INT PRIMARY KEY, deltas INT, resets INT, failures INT)
analytics
INSERT OR REPLACE INTO analytics (deltas, resets, failures, hour) values (?,?,?,?)
SELECT deltas, resets, failures FROM analytics WHERE hour = ?
DELETE FROM analytics WHERE hour = ?
backchannel
com.apple.private.alloy.eventkitmutation
setRemCom
v16@?0@"NDTMessage"8
setParStt
setAlmSno
deleEvent
internal_disablePhoneMutator
/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/NEKSyncBundle/Models/NEKRPCEndpoint.m
-[NEKRPCEndpoint _recvSetEventKitReminderCompletedEndpoint:]
-[NEKRPCEndpoint _recvSetReminderKitReminderCompletedEndpoint:]
-[NEKRPCEndpoint _recvDeleteEventEndpoint:]
v24@?0@"EKEvent"8^B16
v16@?0@"NSArray"8
com.apple.private.alloy.internal.watch.calendar.analytics
com.apple.internal.watch.calendar.analytics
com.apple.internal.eventkitsync.checker
<%@ %p; type=%@; identifier=%@; calendarIdentifier=%@>
Calendar
Event
Reminder
Source
phone
PreferencesObserver
com.apple.eventkitsyncd.daemon
com.apple.eventkitsyncd.notifications
com.apple.notifyd.matching
HandleNotifications
_CalDatabaseChangedNotification
com.apple.reminderkit.storeChanged
EventKitSyncTesting
com.apple.eventkitsync.force
com.apple.eventkitsync.zapversion
com.apple.datamigrator.migrationDidFinish
SignificantTimeChangeNotification
CalDefaultCalendarChangedNotification
com.apple.eventkitsync.analytics.flush
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.eventkitsync.analytics.daily
-[NEKDaemon _registerForNotifications]
com.apple.nanodaemontoolkit
[VOID]
(nil)
>%08x<
com.apple.logging.obfuscation
obfuscate
F519C070-44C7-467D-B560-7FEABDF9D3AC
-[NEKSourceAttributes(Event) initWithSource:]
CloudKit
non-CloudKit
B24@?0@"NSString"8@"NSString"16
B24@?0@"NSNumber"8@"NSNumber"16
isFacebook
v32@?0@"EKObjectID"8Q16^B24
@?<v@?@"EKObjectID"Q^B>16@?0@?<v@?@"NSString"@"EKSource"Q^B>8
v32@?0@"REMObjectID"8Q16^B24
@?<v@?@"REMObjectID"Q^B>16@?0@?<v@?@"NSString"@"EKSource"Q^B>8
v40@?0@"NSString"8@"EKSource"16Q24^B32
testWindowStart
testWindowEnd
16A0
syncWindow
recordMap
RecordMap.db
CREATE TABLE IF NOT EXISTS record(rowid INTEGER PRIMARY KEY ASC, entityType INT, entityRowID INT, UUID TEXT)
CREATE UNIQUE INDEX IF NOT EXISTS entityIndex ON record (entityType, entityRowID)
CREATE VIEW IF NOT EXISTS record_utc AS SELECT rowid, datetime(timestamp, 'unixepoch') stamp, entityType, entityRowID, masterRowID, uuid FROM record ORDER BY timestamp, entityType, uuid
ALTER TABLE record ADD COLUMN timestamp INT DEFAULT NULL
ALTER TABLE record ADD COLUMN masterRowID INT DEFAULT -1 NOT NULL
ALTER TABLE record ADD COLUMN mark INT DEFAULT 1 NOT NULL
ALTER TABLE record ADD COLUMN summary_hash TEXT DEFAULT NULL
ALTER TABLE record ADD COLUMN location_hash TEXT DEFAULT NULL
ALTER TABLE record ADD COLUMN start_time REAL DEFAULT NULL
ALTER TABLE record ADD COLUMN entityDatabaseID INT DEFAULT 0 NOT NULL
DROP INDEX entityIndex
CREATE UNIQUE INDEX entityIndex ON record (entityType, entityRowID, entityDatabaseID)
DROP VIEW record_utc
CREATE VIEW record_utc AS SELECT rowid, datetime(timestamp, 'unixepoch') stamp, entityType, entityRowID, entityDatabaseID, masterRowID, uuid FROM record ORDER BY timestamp, entityType, uuid
PRAGMA user_version
PRAGMA user_version = %d
SELECT UUID FROM record WHERE entityType = ? AND entityRowID = ? AND entityDatabaseID = ?
INSERT OR REPLACE INTO record(entityType, entityRowID, entityDatabaseID, UUID, timestamp, masterRowID, summary_hash, location_hash, start_time, mark) VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, 1)
SELECT summary_hash, location_hash, start_time FROM record WHERE entityType = ? AND entityRowID = ? AND entityDatabaseID = ?
DELETE FROM record WHERE entityType = ? and entityRowID = ? and entityDatabaseID = ?
DELETE FROM record
SELECT entityType, entityRowID, entityDatabaseID, UUID, mark FROM record ORDER BY mark, entityType, entityRowID, UUID
SELECT count() FROM record
isComplete
calendarName
reminderTitle
externalIdentifier
>>LOCAL<<
Default local calendar
UUID: %@
<%@ %p; %@>
defaultAlarmOffset
isEnabled
usesSelfAttendee
constraintsDescriptionPath
creatorBundleID
creatorCodeSigningIdentity
accountPersistentID
supportsSharedCalendars
allowsTasks
allowsEvents
allowsCalendarAddDeleteModify
onlyCreatorCanModify
snoozeAlarmRequiresDetach
supportsAlarmAcknowledgedDate
isBirthdayStore
com.apple.eventkitsync.progressliar
-[NEKProgressLiar _doneForRealNotifyingPairedSync:]
com.apple.internal.eventkitsync.testcontrol
com.apple.NEKTestControl.xpc
%@;%@;%f
/var/mobile/Library/Calendar/Calendar.sqlitedb
select I.unique_identifier, C.external_id calendar, O.occurrence_date occurrence_date from occurrencecache O left join calendar C on C.rowid = O.calendar_id left join calendaritem I on I.rowid = O.event_id where I.entity_type = 2 and O.occurrence_date >= ?  and O.occurrence_date <= ? and C.flags & 786432 == 0 order by occurrence_date, I.unique_identifier
EventKitSync
v24@?0@"NSString"8@"NSUUID"16
/System/Library/PrivateFrameworks/CDDataAccess.framework
/System/Library/PrivateFrameworks/ExchangeSync.framework
/System/Library/PrivateFrameworks/DataAccess.framework
+[NEKSourceAttributes(Reminder) createAccountWithSaveRequest:withAttributes:]
@"REMAccountChangeItem"8@?0
.plist
Analytics.sqlite
hour
deltas
resets
failures
com.apple.eventkitsync.sessions
bindInteger: index out of bounds
bindUint64: index out of bounds
bindString: index out of bounds
bindDouble: index out of bounds
bindBlob: index out of bounds
fetchInteger: column out of bounds
fetchUint64: column out of bounds
fetchString: column out of bounds
fetchDouble: column out of bounds
fetchBlob: column out of bounds
NDTQSStatement:%p:"%@",parsed=%p
changeObserver.keyqueue
E8CD02C1-B7C0-4E12-8A44-AB54B5F52E5F
E58F9466-0386-4DE7-B6CE-537A8B54C9B7
v20@?0@"NSArray"8i16
B16@?0@"EKObjectID"8
SeenMap.db
com.apple.eventkitsync.seenmap
drop table if exists seen
create table if not exists seendata (uuid TEXT, start_date REAL, end_date REAL, location TEXT, primary key (uuid))
B24@?0^^{sqlite3_stmt}8*16
insert or replace into seendata values ( ?, ?, ?, ?);
select start_date, end_date, location from seendata where uuid = ?;
delete from seendata where uuid = ?;
delete from seendata where end_date < ?;
-[NEKSeenMap didShowInvite:withUUID:]
-[NEKSeenMap deleteInviteByUUID:]
-[NEKSeenMap sweep]
B16@?0@8
<NDTResultsFIFO:%p cap:%d/%d term:%d fin:%d>
NEK.sessionIdle
resetSync
deltaSync
nightlySync
NEK.SYService
com.apple.private.alloy.eventkitsync
internal_forceFileTransfer
deferUntil
maxDeltaRetries
/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/NEKSyncBundle/Models/NEKSyncController.m
-[NEKSyncController service:willPreferSession:overSession:]
tc_automaticSync
lastSuccessfulStamp
tc_objectDelay
Object delay: %.3f
Fault count: %d
Currently syncing: %s
Automatic sync: %s
Enabled
Disabled
Last successful sync sent: 
Minimum session timeout: %.3f
Maximum session timeout: %.3f
Probability of failure: %.3f
Fixed retry interval: %.3f
minSessionTimeout
maxSessionTimeout
internal_probabilityOfSyncFailure
internal_retryInterval
-[NEKSyncController service:startSession:error:]
identifier
sending
receiving
delta
RetryDueDate
ResetSyncPipe
NightlySyncPipe
DeltaSyncPipe
internal_enableLongTimeouts
internal_enableShortTimeouts
com.apple.watch.eventkitsync.failuretesting
com.apple.eventkitsync.retrysync
com.apple.eventkitsync.sessionEnded
-[NEKSyncController service:sessionEnded:error:]
v16@?0@?<v@?>8
 (FAKE)
nightly
reset
internal_dumpRecordMap
com.apple.watch.eventkitsync.recordmapdump
EventKit
data_separation
sessionTimeout
sessionPerf
packetNumber
storeWrapper
calendarWrapper
ICSWrapper
deletionWrapper
validationWrapper
setReminderComplete
setParticipantStatus
setAlarmSnooze
deleteEvent
<%@ %p; persistentID=%@; type=%@>
Local
Exchange
CalDAV
MobileMe
Subscribed
Birthdays
Unknown
v32@?0@"NSString"8@"NEKPBICSWrapperMetadata"16^B24
v32@?0@"NSString"8Q16^B24
<%@ %p; empty changeset>
<%@ %p; %d inserts; %d updates; %d deletes>
Local store
persistentID: %@
isDefaultLocalCalendar
/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/NEKSyncBundle/Models/NEKResultsFetcher.m
-[NEKResultsFetcher fetchEverythingIntoPipe:]
B16@?0@"EKCalendarItem"8
B16@?0@"REMReminder"8
-[NEKResultsFetcher fetchEverythingIntoPipe:]_block_invoke
-[NEKResultsFetcher fetchNightlyIntoPipe:]
-[NEKResultsFetcher fetchNightlyIntoPipe:]_block_invoke
-[NEKResultsFetcher fetchChangesIntoPipe:deferrable:]
+[NEKCalendarID(Reminder) listInStore:withNEKCalendarID:]
selfAttendeeEmail
entityType
invitationChangedPropertyFlagDate
invitationChangedPropertyFlagTime
invitationChangedPropertyFlagTitle
invitationChangedPropertyFlagLocation
invitationChangedPropertyFlagAttendeeComment
invitationChangedPropertyFlagAttendeeStatus
selfAttendeeUUID
selfOrganizerEmail
selfOrganizerUUID
attendeeStatus
locationPredictionState
properInvitationStatus
+[NEKCalendarAttributes(Reminder) createListInAccount:withSaveRequest:withAttributes:]
@"REMListChangeItem"8@?0
B24@?0@"NSObject"8@"NSObject"16
<%@:%p capacity:%d, hitRatio:%f>
encoding
/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/NEKSyncBundle/Models/NEKSyncSession.m
-[NEKSyncSession init]
internal_disableSync
syncSession:applyChanges:(events)
syncSession:applyChanges:(reminders)
<%@:%p cpu=%lld, wall=%lld, dmem=%lld>
publishedURL
selfIdentityAddress
ownerIdentityAddress
snoozeAmount
alarmIdentifier
itemIdentifier
storeIdentifier
com.apple.eventkitsync.nekreminderstore
com.apple.eventkitsync.reminders.pipe
saveRequestForStore(Reminders)
removeAllItems
removeAllItems(reminders)
B24@?0@"REMAccount"8@"NSDictionary"16
B24@?0@"REMList"8@"NSDictionary"16
updateAccount:
-[NEKReminderStore updateSource:store:]_block_invoke
updateCalendar:
-[NEKReminderStore updateCalendar:store:]_block_invoke
-[NEKReminderStore handleReminderWithUniqueIdentifierFromGizmo:saveRequest:list:wrapper:]
-[NEKReminderStore performUpdateWithICSWrappers:store:session:]
v32@?0@"NSData"8Q16^B24
v16@?0^B8
v28@?0@"REMObjectID"8i16^B20
@"NSDictionary"16@?0@"NSArray"8
storeWrapperForCloudKitAccount
v36@?0@"REMObjectID"8@"REMAccount"16i24^B28
listWrappersForChangeSet
v36@?0@"REMObjectID"8@"REMList"16i24^B28
ICSWrappersForChangeSet(Reminders)
v36@?0@"REMObjectID"8@"REMReminder"16i24^B28
-[NEKReminderStore _deleteAccountWithIdentifier:store:]
-[NEKReminderStore _deleteListWithIdentifier:store:]
-[NEKEventChangeObserver databaseDidChange]
-[NEKEventChangeObserver allSourcesInto:]
-[NEKEventChangeObserver allCalendarsInto:]
-[NEKEventChangeObserver allEventsInto:filter:window:]
-[NEKEventChangeObserver allRemindersInto:filter:window:]
allRemindersInto:filter:window:
/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/NEKSyncBundle/Models/NEKEventChangeObserver.m
-[NEKEventChangeObserver fetchEventChangeSet]
Fetching changes took a long time
Inserts:
Updates:
Deletes:
-[NEKEventChangeObserver _fetchChangesInto:from:inside:]_block_invoke
v44@?0B8q12@"NSArray"20@"NSArray"28@"NSArray"36
-[NEKEventChangeObserver previousDefaultTaskCalendar]
-[NEKEventChangeObserver setPreviousDefaultTaskCalendar:]
v16@?0@"EKObjectID"8
ICSData
calendarItemCount
metadataKeys
metadataValues
syncID
taskCompletionDate
oldIdentifier
nuevoIdentifier
lzfseICSData
duplicateCheck
occurrenceCache
<NEKSourceAttributes (%p)
  name: %@
  defaultAlarmOffset: %@
  type: %d
  isEnabled: %d
  isFacebook: %d
  usesSelfAttendee: %d
  constraintsDescriptionPath: %@
  externalModificationTag: %@
  creatorBundleID: %@
  creatorCodeSigningIdentity: %@
  accountPersistentID: %@
  supportsSharedCalendars: %d
  allowsTasks: %d
  allowsEvents: %d
  allowsCalendarAddModifyDelete: %d
  onlyCreatorCanModify: %d
  snoozeAlarmRequiresDetach: %d
  supportsAlarmAcknowledgedDate: %d
  isLocalStore: %d
  isBirthdayStore: %d
uuid
summary
calendar
date
reminderListId
-[NEKReminderChangeObserver storeDidChange]
-[NEKReminderChangeObserver allCloudKitAccountsInto:]
-[NEKReminderChangeObserver allListsInto:]
-[NEKReminderChangeObserver allRemindersInto:filter:window:]
v24@?0@"REMReminder"8^B16
/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/NEKSyncBundle/Models/NEKReminderChangeObserver.m
-[NEKReminderChangeObserver fetchReminderChangeSet]
markedForDeletion
_fetchChangesInto(Reminders)
ReminderKit: Inserts: 
ReminderKit: Updates: 
ReminderKit: Deletes: 
v60@?0B8@"NEKReminderChangeTrackingStateMap"12@"NSArray"20@"NSArray"28@"NSArray"36@"NSDictionary"44@"NSDictionary"52
com.apple.eventkitsync.changeobserver.reminderkit.sequencenumber
-[NEKReminderChangeObserver previousDefaultReminderListID]
<%@: %p: %@, %@>
B24@?0@"REMAccount"8@16
B16@?0@"NSArray"8
@"NEKReminderChangeTrackingState"16@?0@"REMAccount"8
B24@?0@"REMChangeObject"8@"NSDictionary"16
list
v32@?0@"REMObjectID"8@"NEKReminderChangeTrackingState"16^B24
<%@: loaded:%@ - active:%@>
REMNSPersistentHistoryToken
_REMChangeUniversalToken
loadedChangeTokenMap
eventIdentifier
eventTitle
eventStart
calendarTitle
span
-[NEKEventPurger finalizeDatabasesAfterResetSync]
%@<%p>
xpc_activity
WaitingForActivityCheckinFromFireIn
WaitingForActivityCheckinFromFireOnConnection
CHECK_IN
WAIT
DEFER
CONTINUE
DONE
OUT_OF_BOUNDS
syncId
status
mapTableWithKeyOptions:valueOptions:
objectAtIndex:
saveEvent:span:commit:error:
changedObjectID
icsDisplayOrder
universalToken
isResetSync
setValue:forKey:
reminderIdentifier
fetchListWithObjectID:error:
objectAtIndexedSubscript:
changedObjectIDsSinceToken:resultHandler:
unlocalizedTitle
saveEvent:span:error:
icsTodoFromReminder:exportingOption:
fetchListsWithError:
initWithKeyOptions:valueOptions:capacity:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
appendBytes:length:
persistentObject
reminderObjectIDsMatchingPredicate:
synchronize
calendarForEntityType:eventStore:
setStartDateComponents:
isSending
objectForKey:
isCompleted
fetchListsWithObjectIDs:error:
markChangedObjectIDsConsumedUpToToken:
setAllowsScheduling:
saveReminder:error:
appendData:
eventObjectIDsMatchingPredicate:
unregisterForDetailedChangeTracking:
postNotificationName:object:
synchronizeNanoDomain:keys:
distantFuture
unsignedIntegerValue
setCurrentUser:
calendarForEntityTypes:eventStore:
initWithMachServiceName:
objectForKeyedSubscript:
domain
writeToFile:options:error:
appendFormat:
predicateForEventsWithStartDate:endDate:calendars:
isCurrentUser
setNotificationsCollection:
updateAccount:
decodeObjectOfClasses:forKey:
x_calendarserver_access
objectID
synchronizeUserDefaultsDomain:keys:
appendString:
setDaDisplayOrder:
systemBuildVersion
eventSources
remindersWithExternalIdentifier:inCalendars:
fetchReminderIncludingConcealedWithObjectID:error:
objectIDWithUUID:
year
isSubscribedHolidayCalendar
doubleValue
systemTimeZone
importICSData:intoCalendars:options:
predicateForMasterEventsInCalendar:
setFamilyCalendar:
initWithOptions:capacity:
setObject:forKey:
defaultCalendarForNewEvents
predicateForMasterEventsWithOccurrencesWithStartDate:endDate:inCalendar:
dueDateComponents
isTemporary
predicateForMasterEventsInCalendars:
fetchReminderWithDACalendarItemUniqueIdentifier:inList:error:
member:
setObject:forKeyedSubscript:
setWithCapacity:
setWithObject:
defaultCalendarForNewReminders
saveSource:commit:error:
targetIsConnected
fetchReminderWithExternalIdentifier:inList:error:
targetableDevice
eventStoreIdentifier
importRemindersFromICSData:insertIntoListChangeItem:error:
predicateForRemindersInCalendars:
removeAllObjects
isDefaultSchedulingCalendar
inactive
defaultCenter
setWithObjects:
setSelfAttendee:
fetchRemindersMatchingPredicate:completion:
saveSynchronouslyWithError:
storeDidChangeNotificationName
incomingResponseIdentifier
setDateFormat:
setX_calendarserver_access:
defaultLocalCalendar
calendarItemExternalIdentifier
predicateWithBlock:
indexOfObject:
fetchRemindersWithDACalendarItemUniqueIdentifiers:inList:error:
defaultManager
calendarItemsWithExternalIdentifier:
code
addDelegate:queue:
ekColor
updateList:
archivedDataWithRootObject:requiringSecureCoding:error:
occurrencesExistInRangeForEvent:startDate:endDate:mustStartInInterval:timezone:
currentChangeTokenWithError:
fetchRemindersWithError:
eventWithIdentifier:
initWithPersistentObject:occurrenceDate:
setFullSessionTimeout:
calendarItemsWithExternalIdentifier:inCalendars:
removeCalendar:commit:error:
currentSession
isDegenerate:
shared
isDelegate
array
defaultTimeZone
eventWithUniqueId:
fetchRemindersWithObjectIDs:error:
calendarItemsWithUniqueIdentifier:inCalendar:
setAuthor:
updateReminder:
second
isDetached
setSubcalAccountID:
sharedInstance
daCalendarItemUniqueIdentifier
eventsWithExternalIdentifier:inCalendars:
arrayByAddingObject:
degenerateChange
setHasChangesAvailable
_setQueue:
addListWithName:toAccountChangeItem:listObjectID:
setDelegate:queue:
setSubscribed:
commit:
arrayWithCapacity:
keyEnumerator
arrayWithObjects:count:
exceptionWithName:reason:userInfo:
updateReminderChangeItem:fromICSData:isNew:withOptions:error:
setBool:forKey:
removeEvent:span:error:
daConstraintsDescriptionPath
selfAttendee
compare:
setOptions:
setSubscribedHolidayCalendar:
fileExistsAtPath:
initWithService:
setHidden:
setOrganizer:
string
daDisplayOrder
oldListIdentifier
removeFromList
compare:options:
fileSystemRepresentation
calendarWithIdentifier:
daExternalIdentificationTag
initWithService:priority:qos:asMasterStore:options:
compare:options:range:
initWithBase64EncodedString:options:
stringByAppendingPathComponent:
lastObject
lastChangeTokenForAccountID:
removeFromParent
fileURLWithPath:
addObjectsFromArray:
removeFromStore
stringByDeletingLastPathComponent
_deletableSources
initWithBlock:
addObserver:selector:name:object:
daHexString
daIsEventOnlyContainer
lastPathComponent
minute
orderedSet
stringByReplacingOccurrencesOfString:withString:
externalIDTag
isEqualToNumber:
initWithCalendarIdentifier:
propertyListWithData:options:format:error:
updatedProperties
month
removeItemAtPath:error:
addReminderChangeItem:
stringFromDate:
daIsImmutable
orderedSetWithCapacity:
daIsNotificationsCollection
organizer
ICSDataForCalendarItems:options:
initWithStore:
userInfo
filteredArrayUsingPredicate:
stringRepresentation
originalItem
provideChangeTrackingForAccountID:clientName:transactionAuthorKeysToExclude:
setImmutable:
list
attendees
publicObjectWithObjectID:
ICSDataWithOptions:
removeObjectAtIndex:
stringWithFormat:
originalStartDate
initWithTimeIntervalSinceReferenceDate:
isFacebookSource
daIsReadOnly
setInactive:
firstObject
initWithUUIDString:
mutableCopy
alarms
completionDate
outgoingResponseIdentifier
daPushKey
removeObjectForKey:
emailAddress
calendarsForEntityType:
publishURL
stringWithUTF8String:
daSupportsSharedCalendars
insertObject:atIndex:
snoozeAlarm:withTimeIntervalFromNow:
structuredLocation
isGroup
removeObserver:
owner
setInbox:
component:fromDate:
initWithCustomClientId:
setSendingBufferCap:
auxiliaryChangeInfos
timeIntervalSince1970
components:fromDate:
setEnabled:
allCalendars
encodeObject:forKey:
daSymbolicColorName
hasPrefix:
setSerializer:
base64EncodedStringWithOptions:
setCanRestart:
setParticipationStatus:
removeObserver:name:object:
removeReminder:commit:error:
daSyncToken
initWithDASymbolicColorName:daHexString:
componentsSeparatedByString:
timeIntervalSinceDate:
setCanRollback:
subdataWithRange:
removeSource:commit:error:
subcalAccountID
setSessionMetadata:
localAccountID
timeIntervalSinceReferenceDate
initWithData:encoding:
snoozeFromNowForTimeInterval:
timeIntervalSinceNow
setMaxConcurrentMessages:
reportProgress:
setEngineType:
hasRecurrenceRules
setPerMessageTimeout:
fullSessionTimeout
entityName
fetchAccountWithObjectID:error:
cancel
dataUsingEncoding:
URLWithString:
UTF8String
localBirthdayCalendarSource
source
intValue
getActivePairedDevice
localSource
valueForKey:
getBytes:range:
dataWithBytes:length:
sendData:toDestinations:priority:options:identifier:error:
supportsCapability:
allKeys
integerForKey:
dataWithContentsOfFile:
fetchAccountsIncludingInactive:error:
wait
UUIDString
sourceType
integerValue
localizedStandardCompare:
sendResourceAtURL:metadata:toDestinations:priority:options:identifier:error:
allObjects
fetchAccountsWithError:
dataWithJSONObject:options:error:
location
initWithDomain:
sourceWithEventStore:
fetchAccountsWithObjectIDs:error:
interfaceWithProtocol:
enumerateAllRemindersWithBlock:
waitForPairingStorePathPairingID:
sourceWithExternalID:
_addAccountWithType:name:accountObjectID:
isImmutableRaw
fetchAuxiliaryChangeInfosOfType:withChangeObject:error:
enumerateEventsMatchingPredicate:usingBlock:
initWithEKOptions:
numberWithBool:
setColor:
setSharingInvitation:
sourceWithIdentifier:
allValues
internalTransactionAuthorKeysToExclude
transaction
setMode:
initWithEKOptions:path:changeTrackingClientId:enablePropertyModificationLogging:allowDelegateSources:
numberWithDouble:
detachedItems
databaseID
resume:
allocWithZone:
isMasterOrDetachedOccurrence
participantStatus
enumerateKeysAndObjectsUsingBlock:
trigger
numberWithInt:
hasSuffix:
setCompleted:
containsObject:
participationStatus
enumerateObjectsUsingBlock:
dateByAddingTimeInterval:
reverseObjectEnumerator
numberWithInteger:
absoluteString
copy
fetchDefaultListWithError:
allowEvents
setExportedInterface:
registerForDetailedChangeTracking:
setCompletionDate:
syncCoordinatorWithServiceName:
setUniqueId:
dictionary
boolForKey:keyExistsAndHasValidFormat:
rowID
allowReminders
numberWithLong:
isPhantom
syncDidComplete
setExportedObject:
setComponents:options:
remObjectID
longLongValue
account
allowedEntityTypes
setSource:
boolValue
perMessageTimeout
numberWithUnsignedInt:
broadcast
dateWithTimeIntervalSince1970:
setIsDefaultSchedulingCalendar:
numberWithUnsignedInteger:
dictionaryWithCapacity:
countByEnumeratingWithState:objects:count:
hour
setPublishURL:
setCountLimit:
uniqueId
unarchivedObjectOfClass:fromData:error:
dictionaryWithObjects:forKeys:count:
numberWithUnsignedLongLong:
saveCalendar:commit:error:
syncRestriction
startDateComponents
fetchHistoryAfterToken:error:
setSourceType:
dateWithTimeIntervalSinceReferenceDate:
dateWithTimeIntervalSinceNow:
uniqueIdentifier
setExternalIDTag:
bytes
setNeedsResetSync
allowsScheduling
accountID
eventForUID:occurrenceDate:
syncSessionType
description
itemsType
copyWithZone:
setStart:
setHasStart:
hasStart
setEnd:
setHasEnd:
hasEnd
clearItems
addItems:
itemsCount
itemsAtIndex:
dictionaryRepresentation
readFrom:
writeTo:
copyTo:
isEqual:
hash
mergeFrom:
start
items
setItems:
.cxx_destruct
_end
_start
_items
_has
TB,N
Td,N,V_start
Td,N,V_end
T@"NSMutableArray",&,N,V_items
entityType
setEntityType:
selfAttendeeEmail
setSelfAttendeeEmail:
selfAttendeeUUID
setSelfAttendeeUUID:
selfOrganizerEmail
setSelfOrganizerEmail:
selfOrganizerUUID
setSelfOrganizerUUID:
attendeeStatus
setAttendeeStatus:
invitationStatus
setInvitationStatus:
properInvitationStatus
setProperInvitationStatus:
hasProperInvitationStatus
setHasProperInvitationStatus:
identifier
setIdentifier:
dateChanged
setDateChanged:
timeChanged
setTimeChanged:
titleChanged
setTitleChanged:
locationChanged
setLocationChanged:
attendeeComment
setAttendeeComment:
attendeeStatusFlag
setAttendeeStatusFlag:
startDate
setStartDate:
externalID
setExternalID:
locationPredictionState
setLocationPredictionState:
_hasProperInvitationStatus
_dateChanged
_timeChanged
_titleChanged
_locationChanged
_attendeeComment
_attendeeStatusFlag
_entityType
_selfAttendeeEmail
_selfAttendeeUUID
_selfOrganizerEmail
_selfOrganizerUUID
_attendeeStatus
_invitationStatus
_properInvitationStatus
_identifier
_startDate
_externalID
_locationPredictionState
TQ,N,V_entityType
T@"NSString",&,N,V_selfAttendeeEmail
T@"NSString",&,N,V_selfAttendeeUUID
T@"NSString",&,N,V_selfOrganizerEmail
T@"NSString",&,N,V_selfOrganizerUUID
Tq,N,V_attendeeStatus
TQ,N,V_invitationStatus
TQ,N,V_properInvitationStatus
TB,N,V_hasProperInvitationStatus
T@"NSString",C,N,V_identifier
TB,N,V_dateChanged
TB,N,V_timeChanged
TB,N,V_titleChanged
TB,N,V_locationChanged
TB,N,V_attendeeComment
TB,N,V_attendeeStatusFlag
T@"NSDate",&,N,V_startDate
T@"NSString",C,N,V_externalID
Tq,N,V_locationPredictionState
init
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
objectIdentifier
sequencer
changeType
T@"NSString",R,N
Tq,R,N
ICSWrapperMetadata
ICSData
setICSData:
propertiesForCalendarItemIdentifier:
settablePropertiesForCalendarItemIdentifier:
hasPropertiesForIdentifier:
setMetadata:forCalendarItemIdentifier:
startDateMap
setDateChanged:forIdentifier:
dateChangedForIdentifier:
setTimeChanged:forIdentifier:
timeChangedForIdentifier:
setTitleChanged:forIdentifier:
titleChangedForIdentifier:
setLocationChanged:forIdentifier:
locationChangedForIdentifier:
setAttendeeComment:forIdentifier:
attendeeCommentForIdentifier:
setSelfAttendeeEmail:forIdentifier:
selfAttendeeEmailForIdentifier:
setSelfAttendeeUUID:forIdentifier:
selfAttendeeUUIDForIdentifier:
setSelfOrganizerEmail:forIdentifier:
selfOrganizerEmailForIdentifier:
setSelfOrganizerUUID:forIdentifier:
selfOrganizerUUIDForIdentifier:
setInvitationStatus:forIdentifier:
invitationStatusForIdentifier:
setProperInvitationStatus:forIdentifier:
properInvitationStatusForIdentifier:
setLocationPredictionState:forIdentifier:
locationPredictionStateForIdentifier:
setAttendeeStatus:forIdentifier:
attendeeStatusForIdentifier:
setAttendeeStatusFlag:forIdentifier:
attendeeStatusFlagForIdentifier:
setExternalID:forIdentifier:
externalIDForIdentifier:
setStartDate:forIdentifier:
startDateForIdentifier:
enumerateCalendarItemIdentifiersUsingBlock:
entityTypeForCalendarItemWithIdentifier:
objectTypeForCalendarItemWithIdentifier:
lzfseICSData
setLzfseICSData:
calendarIdentifier
setCalendarIdentifier:
oldCalendarIdentifier
setOldCalendarIdentifier:
oldIdentifier
setOldIdentifier:
nuevoIdentifier
setNuevoIdentifier:
calendarItemCount
setCalendarItemCount:
title
isTaskCompleted
setTaskCompleted:
taskCompletionDate
setTaskCompletionDate:
displayOrder
setDisplayOrder:
isReminderWithLocation
setIsReminderWithLocation:
setStartDateMap:
properties
setProperties:
syncId
setSyncId:
_zICSData
_rICSData
_title
_taskCompleted
_isReminderWithLocation
_lzfseICSData
_calendarIdentifier
_oldCalendarIdentifier
_oldIdentifier
_nuevoIdentifier
_calendarItemCount
_taskCompletionDate
_displayOrder
_startDateMap
_properties
_syncId
T@"NSMutableDictionary",&,N,V_properties
Tq,N,V_calendarItemCount
T@"NSString",C,N,V_syncId
T@"NSData",&,N
T@"NSData",&,N,V_lzfseICSData
T@"NEKCalendarID",&,N,V_calendarIdentifier
T@"NSString",&,N,V_oldCalendarIdentifier
T@"NSString",&,N,V_oldIdentifier
T@"NSString",&,N,V_nuevoIdentifier
T@"NSString",R,N,V_title
taskCompleted
TB,N,GisTaskCompleted,V_taskCompleted
Td,N,V_taskCompletionDate
Tq,N,V_displayOrder
TB,N,V_isReminderWithLocation
T@"NSDictionary",&,N,V_startDateMap
initWithEnvironment:name:defaultMean:defaultStddev:
environment
load
save
updateSuccess:
updateFailure
nextTimeout
stddev
setStddev:
_clip:
mean
setMean:
alpha
setAlpha:
failureScaling
setFailureScaling:
sigmaSpan
setSigmaSpan:
minTimeout
setMinTimeout:
maxTimeout
setMaxTimeout:
name
setName:
setEnvironment:
firstTimeEver
setFirstTimeEver:
variance
setVariance:
failTimeout
setFailTimeout:
_firstTimeEver
_mean
_alpha
_failureScaling
_sigmaSpan
_minTimeout
_maxTimeout
_name
_environment
_variance
_failTimeout
T@"NSString",&,N,V_name
T@"NEKEnvironment",W,N,V_environment
TB,N,V_firstTimeEver
Td,N,V_variance
Td,N,V_failTimeout
Td,N,V_mean
Td,N
Td,N,V_alpha
Td,N,V_failureScaling
Td,N,V_sigmaSpan
Td,N,V_minTimeout
Td,N,V_maxTimeout
eks_garbageUUID
eks_localAccount
eks_defaultLocalList
eks_storeForSyncing
isEventKitSyncEnabledForReminderKit
instance
dbFileManager
tinyStore
recordMap
seenMap
syncCoordinator
syncController
clientName
setSyncController:
analytics
isReminderKitEnabled
daemon
setDaemon:
setAnalytics:
_lock
_controllerCondition
_syncController
_dbFileManager
_tinyStore
_recordMap
_seenMap
_syncCoordinator
_analytics
_clientName
_daemon
T@"NEKDatabaseFileManager",R,N
T@"NEKTinyStore",R,N
T@"NEKRecordMap",R,N
T@"NEKSeenMap",R,N
T@"NEKSyncCoordinator",R,N
T@"NEKSyncController",&,N
T@"NEKDaemon",&,N,V_daemon
T@"NEKSessionAnalytics",&,N,V_analytics
TB,R,N
initWithSourceIdentifier:attributes:calendarIdentifier:
storeIdentifier
attributes
isDefaultTaskCalendar
setIsDefaultTaskCalendar:
isDefaultEventCalendar
setIsDefaultEventCalendar:
_isDefaultTaskCalendar
_isDefaultEventCalendar
_storeIdentifier
_attributes
T@"NSString",&,N,V_calendarIdentifier
T@"NEKSourceID",R,N,V_storeIdentifier
T@"NEKCalendarAttributes",R,N,V_attributes
TB,N,V_isDefaultTaskCalendar
TB,N,V_isDefaultEventCalendar
wrapperForReminder:oldListIdentifier:store:
setAllPropertiesForReminder:identifier:wrapper:store:list:oldListIdentifier:
setMinimalPropertiesForReminder:identifier:wrapper:
setPropertiesForWrapper:withReminders:oldListIdentifier:sendAllProperties:store:list:
hasPersistentID
setIsLocalStore:
setHasIsLocalStore:
hasIsLocalStore
persistentID
setPersistentID:
isLocalStore
_persistentID
_isLocalStore
T@"NSString",&,N,V_persistentID
TB,N,V_isLocalStore
initWithSource:
initWithAccount:
accountForStore:identifier:
newFileName:
cache:willEvictObject:
begin
commit
rollback
executeSql:
parseSql:andRun:
initWithURL:
initWithPath:
initWithPath:queue:
initWithPath:queue:readOnly:
_newPath
_bootstrap
_recreatePath
_createParentDirectory
_openDatabase
_prepDatabase
_watchWalFile
_databaseChangedExternally
_addSchema:
addSchema:
_makeSqlErrorReasonString:
_executeSql:
_loadCache:sqlErr:
_parseSql:andRun:
_instanceVersion:
_setInstance:version:
changes
setDb:
path
setPath:
readOnly
setReadOnly:
delegate
setDelegate:
pathTemplate
setPathTemplate:
_statementCache
_instanceVersions
_readFd
_readSource
_memberSchemasLock
_memberSchemas
_readOnly
_path
_delegate
_pathTemplate
T^{sqlite3=},N,V_db
T@"NSString",&,N,V_pathTemplate
T@"NSString",&,N,V_path
TB,N,V_readOnly
T@"<NDTSQFileDelegate>",W,N,V_delegate
hasSourceIdentifier
hasCalendarIdentifier
hasAttributes
setHasIsDefaultTaskCalendar:
hasIsDefaultTaskCalendar
setHasIsDefaultEventCalendar:
hasIsDefaultEventCalendar
hasOldCalendarIdentifier
sourceIdentifier
setSourceIdentifier:
setAttributes:
_sourceIdentifier
T@"NEKPBSourceID",&,N,V_sourceIdentifier
T@"NEKPBCalendarAttributes",&,N,V_attributes
eks_compoundIdentifier
storeForEventWithEnvironment:
storeForReminderWithEnvironment:
initWithEnvironment:
freshEventStoreFor:
saveEventStore:
removeAllItems
updateSource:store:
updateCalendar:store:
updateICS:store:session:
deleteItem:store:
deleteObjectByID:store:
changeObserver
setChangeObserver:
_changeObserver
T@"<NEKChangeObserver>",&,N,V_changeObserver
hasUUID
hasTitle
setIsReadonly:
setHasIsReadonly:
hasIsReadonly
setIsHidden:
setHasIsHidden:
hasIsHidden
setIsImmutable:
setHasIsImmutable:
hasIsImmutable
setIsInbox:
setHasIsInbox:
hasIsInbox
setIsNotificationsCollection:
setHasIsNotificationsCollection:
hasIsNotificationsCollection
setIsSharingInvitation:
setHasIsSharingInvitation:
hasIsSharingInvitation
setIsSubscribed:
setHasIsSubscribed:
hasIsSubscribed
setIsHolidayCalendar:
setHasIsHolidayCalendar:
hasIsHolidayCalendar
setIsFamilyCalendar:
setHasIsFamilyCalendar:
hasIsFamilyCalendar
setIsIgnoringEventAlerts:
setHasIsIgnoringEventAlerts:
hasIsIgnoringEventAlerts
setIsIgnoringSharedCalendarNotifications:
setHasIsIgnoringSharedCalendarNotifications:
hasIsIgnoringSharedCalendarNotifications
setIsSchedulingProhibited:
setHasIsSchedulingProhibited:
hasIsSchedulingProhibited
setIsDefaultCalendarForStore:
setHasIsDefaultCalendarForStore:
hasIsDefaultCalendarForStore
hasType
hasDigest
hasSymbolicColorName
hasColorString
setHasDisplayOrder:
hasDisplayOrder
setSharingStatus:
setHasSharingStatus:
hasSharingStatus
hasSharedOwnerName
hasSharedOwnerAddress
setSharingInvitationResponse:
setHasSharingInvitationResponse:
hasSharingInvitationResponse
hasPublishedURLString
setCanBePublished:
setHasCanBePublished:
hasCanBePublished
setCanBeShared:
setHasCanBeShared:
hasCanBeShared
setIsPublished:
setHasIsPublished:
hasIsPublished
hasExternalID
hasExternalIdentificationTag
hasSyncToken
hasExternalModificationTag
hasExternalRepresentation
setSupportedEntityTypes:
setHasSupportedEntityTypes:
hasSupportedEntityTypes
setHasInvitationStatus:
hasInvitationStatus
setHasBeenAlerted:
setHasHasBeenAlerted:
hasHasBeenAlerted
hasNotes
hasSubCalAccountID
hasPushKey
hasSelfIdentityDisplayName
hasSelfIdentityEmail
hasSelfIdentityAddressString
hasSelfIdentityFirstName
hasSelfIdentityLastName
hasOwnerIdentityDisplayName
hasOwnerIdentityEmail
hasOwnerIdentityAddressString
hasOwnerIdentityFirstName
hasOwnerIdentityLastName
uUID
setUUID:
setTitle:
isReadonly
isHidden
isImmutable
isInbox
isNotificationsCollection
isSharingInvitation
isSubscribed
isHolidayCalendar
isFamilyCalendar
isIgnoringEventAlerts
isIgnoringSharedCalendarNotifications
isSchedulingProhibited
isDefaultCalendarForStore
type
setType:
digest
setDigest:
symbolicColorName
setSymbolicColorName:
colorString
setColorString:
sharingStatus
sharedOwnerName
setSharedOwnerName:
sharedOwnerAddress
setSharedOwnerAddress:
sharingInvitationResponse
publishedURLString
setPublishedURLString:
canBePublished
canBeShared
isPublished
externalIdentificationTag
setExternalIdentificationTag:
syncToken
setSyncToken:
externalModificationTag
setExternalModificationTag:
externalRepresentation
setExternalRepresentation:
supportedEntityTypes
hasBeenAlerted
notes
setNotes:
subCalAccountID
setSubCalAccountID:
pushKey
setPushKey:
selfIdentityDisplayName
setSelfIdentityDisplayName:
selfIdentityEmail
setSelfIdentityEmail:
selfIdentityAddressString
setSelfIdentityAddressString:
selfIdentityFirstName
setSelfIdentityFirstName:
selfIdentityLastName
setSelfIdentityLastName:
ownerIdentityDisplayName
setOwnerIdentityDisplayName:
ownerIdentityEmail
setOwnerIdentityEmail:
ownerIdentityAddressString
setOwnerIdentityAddressString:
ownerIdentityFirstName
setOwnerIdentityFirstName:
ownerIdentityLastName
setOwnerIdentityLastName:
_sharingInvitationResponse
_sharingStatus
_supportedEntityTypes
_colorString
_digest
_externalIdentificationTag
_externalModificationTag
_externalRepresentation
_notes
_ownerIdentityAddressString
_ownerIdentityDisplayName
_ownerIdentityEmail
_ownerIdentityFirstName
_ownerIdentityLastName
_publishedURLString
_pushKey
_selfIdentityAddressString
_selfIdentityDisplayName
_selfIdentityEmail
_selfIdentityFirstName
_selfIdentityLastName
_sharedOwnerAddress
_sharedOwnerName
_subCalAccountID
_symbolicColorName
_syncToken
_type
_uUID
_canBePublished
_canBeShared
_hasBeenAlerted
_isDefaultCalendarForStore
_isFamilyCalendar
_isHidden
_isHolidayCalendar
_isIgnoringEventAlerts
_isIgnoringSharedCalendarNotifications
_isImmutable
_isInbox
_isNotificationsCollection
_isPublished
_isReadonly
_isSchedulingProhibited
_isSharingInvitation
_isSubscribed
T@"NSString",&,N,V_uUID
T@"NSString",&,N,V_title
TB,N,V_isReadonly
TB,N,V_isHidden
TB,N,V_isImmutable
TB,N,V_isInbox
TB,N,V_isNotificationsCollection
TB,N,V_isSharingInvitation
TB,N,V_isSubscribed
TB,N,V_isHolidayCalendar
TB,N,V_isFamilyCalendar
TB,N,V_isIgnoringEventAlerts
TB,N,V_isIgnoringSharedCalendarNotifications
TB,N,V_isSchedulingProhibited
TB,N,V_isDefaultCalendarForStore
T@"NSString",&,N,V_type
T@"NSData",&,N,V_digest
T@"NSString",&,N,V_symbolicColorName
T@"NSString",&,N,V_colorString
Ti,N,V_displayOrder
TQ,N,V_sharingStatus
T@"NSString",&,N,V_sharedOwnerName
T@"NSString",&,N,V_sharedOwnerAddress
TQ,N,V_sharingInvitationResponse
T@"NSString",&,N,V_publishedURLString
TB,N,V_canBePublished
TB,N,V_canBeShared
TB,N,V_isPublished
T@"NSString",&,N,V_externalID
T@"NSString",&,N,V_externalIdentificationTag
T@"NSString",&,N,V_syncToken
T@"NSString",&,N,V_externalModificationTag
T@"NSData",&,N,V_externalRepresentation
TQ,N,V_supportedEntityTypes
TB,N,V_hasBeenAlerted
T@"NSString",&,N,V_notes
T@"NSString",&,N,V_subCalAccountID
T@"NSString",&,N,V_pushKey
T@"NSString",&,N,V_selfIdentityDisplayName
T@"NSString",&,N,V_selfIdentityEmail
T@"NSString",&,N,V_selfIdentityAddressString
T@"NSString",&,N,V_selfIdentityFirstName
T@"NSString",&,N,V_selfIdentityLastName
T@"NSString",&,N,V_ownerIdentityDisplayName
T@"NSString",&,N,V_ownerIdentityEmail
T@"NSString",&,N,V_ownerIdentityAddressString
T@"NSString",&,N,V_ownerIdentityFirstName
T@"NSString",&,N,V_ownerIdentityLastName
initWithDatabaseManager:
_convertIfNeeded:
_migrateIntegerFrom:key:
_migrateStringFrom:key:
_migrateDoubleFrom:key:
setStringValue:forKey:
getStringValueForKey:default:
setIntegerValue:forKey:
getIntegerValueForKey:default:
compareAndSwapIntegerValue:expectedExistingValue:forKey:
setDoubleValue:forKey:
getDoubleValueForKey:default:
deleteValueForKey:
_loadPlistFrom:
_queue
_store
_file
initWithFile:
initWithData:
data
setData:
msgType
setMsgType:
responseIdentifier
setResponseIdentifier:
_data
_msgType
_responseIdentifier
T@"NSData",&,N,V_data
T@"NSString",&,N,V_msgType
T@"NSString",&,N,V_responseIdentifier
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:linkedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantUpdate:context:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
initWithIDSServiceName:
initWithIDSServiceName:logging:
registerMessageType:handler:
resume
setPriority:
setCloudFallback:
_makeWireMessageType:content:
_makeMessageFromWireData:
_rawSendData:type:responseIdentifier:error:
_rawSendFile:type:responseIdentifier:error:
sendMessage:responseHandler:completion:
reply:to:completion:
idsOptions
setIdsOptions:
_outstanding
_handlers
_service
_priority
_logFacility
_suspended
_cloudFallback
_idsOptions
T@"NSDictionary",&,N,V_idsOptions
validationWrapperForRightNow
validationWrapperForSameSpan:
validationWrapperForPb:
validationEnabled
_countEvents
validate
masterCount
setMasterCount:
occurrenceCount
setOccurrenceCount:
showAlert
setShowAlert:
_showAlert
_masterCount
_occurrenceCount
T@"NSDate",&,N,V_start
T@"NSDate",&,N,V_end
Tq,N,V_masterCount
Tq,N,V_occurrenceCount
TB,N,V_showAlert
initWithName:
createTables
currentVersion
migrateFrom:
instanceName
getIntegerForKey:default:
setInteger:forKey:
getDoubleForKey:default:
setDouble:forKey:
getStringForKey:default:
setString:forKey:
getDataForKey:default:
setData:forKey:
_insert
_exchange
_select
_delete
_baseName
hasName
hasExternalId
externalId
setExternalId:
_externalId
T@"NSString",&,N,V_externalId
deletionWrapperForRecordID:eventStore:
deletionWrapperForSourceID:
makeReportWithModel:
_treeReportFor:
_duplicatesTreeFrom:
_driftMetricFor:
stores
setStores:
calendars
setCalendars:
tasks
setTasks:
events
setEvents:
_stores
_calendars
_tasks
_events
T@"NSArray",&,N,V_stores
T@"NSArray",&,N,V_calendars
T@"NSArray",&,N,V_tasks
T@"NSArray",&,N,V_events
isEqualToString:
purgeRecordMap
getDefaultTaskCalendar:defaultEventCalendar:store:
_shouldSendEvent:
_shouldSendReminder:
shouldSendEntity:
startMappingEntities
endMappingEntities
deleteItemWithIdentifier:store:
handleNewEntity:withWrapper:session:
handleUpdatedItemFromGizmo:type:withWrapper:identifier:
updateEvent:identifier:eventStore:occurrenceDate:participationStatus:masterIdentifier:isMaster:
updateMasterEvent:masterIdentifier:calendarIdentifier:masterParticipationStatus:detachedEvents:
detacheesForIdentifierCreatingIfNeeded:detachedEventMap:
handleCalendarEventWithUniqueIdentifierFromGizmo:calendar:wrapper:detachedEventMap:
handleCalendarTaskWithUniqueIdentifierFromGizmo:calendar:wrapper:
_filterOutInvalidICSWrappers:store:calendars:
_processUpdateFromWatch:calendar:store:
_processUpdateWithICS:store:calendar:resultWrappers:resultCalendars:
_processArrayOfArrayOfICSWrappers:batchWrappers:session:
performUpdateWithICSWrappers:store:session:
_deleteDetachedCalendarItemsFromOldCalendar:deletedEvents:
_deleteCalendarItemsInICSWrapperFromOldCalendar:store:
_deleteCalendarItemsMovedToCalendar:inICSWrapper:
applySidePropertiesToEntity:withWrapper:session:
updateSelfAttendeeForCalendarItem:identifier:withWrapper:
updateInvitationStatusForCalendarItem:identifier:withWrapper:session:
addAttendeeEvents:
storeWrappersForSourceAggregator:pipe:
calendarWrappersForChangeSet:pipe:
ICSWrappersForChangeSet:pipe:
deletionWrappersForChangeSet:skipSourceDeletions:pipe:
deletionWrappersForSourceAggregator:pipe:
wrapperForCalEntity:
wrapperForSource:
wrapperForCalendar:useAttributes:
wrapperForCalendar:
wrapperForCalendarItem:
_identifierInRowMapping:
identifierInRowMappingForEventOrTask:
calendarIdentifierInRowMappingForEventOrTask:
identifierInRowMappingForRecordIDRef:
calendarIdentifierInRowMappingForRecordIDRef:
updateRowMappingForEntity:
hasRowMappingForEntity:
_removeIdentifierForDeletedEntity:
removeIdentifiersForDeletedRecordIDs:
_commitPendingRecordMapChanges
sweepSeenMap
_didCreateEntity:
_deleteSourceWithIdentifier:store:
_deleteCalendarWithIdentifier:store:
_deleteAndLogEvent:identifier:store:
_deleteEventWithIdentifier:calendarIdentifier:store:
_deleteReminderWithIdentifier:calendarIdentifier:store:
_updateSource:withSourceWrapper:store:
_createSourceForWrapper:store:
_checkAndSetDefaultCalendar:calendarWrapper:store:
_updateCalendar:withCalendarWrapper:
_createCalendarForWrapper:store:
_ICSLogTestForWrapper:
_sendChangesIfAvailable
_flushQueue
_createdEntities
_createdEntitiesLock
_idleBlockQueue
_pipeQueue
_syncedEntityUniqueIdentifiers
_alertSupressionCache
wrapperForCalendarItem:needsInvite:eventStore:
setAllPropertiesForItem:identifier:wrapper:needsInvite:eventStore:calendar:
setMinimalPropertiesForItem:identifier:wrapper:
setPropertiesForWrapper:withCalendarItems:needsInvite:sendAllProperties:eventStore:calendar:originalEvent:
eventSourceForDatabase:identifier:
addObject:
removeObject:
forEachUnique:
dict
setDict:
_dict
T@"NSMutableDictionary",&,N,V_dict
receivedStartSyncNotificationString
receivedReunionSyncNotificationString
syncCoordinator:beginSyncSession:
syncCoordinator:didInvalidateSyncSession:
syncCoordinatorDidChangeSyncRestriction:
supportsMigrationSync
syncCoordinatorDidReceiveStartSyncCommand:
okToPerformDeltaSync
session
setSession:
setSyncCoordinator:
_shadowLock
_syncRestrictionShadow
_session
T@"PSYSyncCoordinator",&,N,V_syncCoordinator
T@"PSYServiceSyncSession",&,N,V_session
setHasStartDate:
hasStartDate
setEndDate:
setHasEndDate:
hasEndDate
setHasMasterCount:
hasMasterCount
setHasOccurrenceCount:
hasOccurrenceCount
setHasShowAlert:
hasShowAlert
endDate
_endDate
Td,N,V_startDate
Td,N,V_endDate
TQ,N,V_masterCount
TQ,N,V_occurrenceCount
migratePrefsIfNecessary
rebroadcastAlertInviteeDeclinesChangeNotification
rebroadcastShowDeclinedChangeNotification
rebroadcastAllObservedNotifications
_broadcastBool:forKey:
alertInviteeDeclines
showDeclinedEvents
applyRebroadcastAlertInviteeDeclines
applyRebroadcastShowDeclinedEvents
handleDarwinNotificationOfName:
_prefObserverLog
_npsManager
_domainAccessor
_keysToDirectMirrorCompanionToGizmo
_ekPrefs
_currentHour
_writeTally:
countSessionType:
fetchHourlyTallies:hour:
clearHour:
writeStackshot:
writeCrashReport:
initWithReminderKitEnabled:clientName:
_disableMutation
sendSetParticipantStatus:span:storeId:eventId:
sendDeleteEventId:title:start:inCalendarId:title:inSource:span:
sendSetCompleted:calendarName:title:externalIdentifier:
sendSetReminderAlarmSnooze:calendarName:title:externalIdentifier:alarmIdentifier:
sendSetEventAlarmSnooze:calendarName:storeId:eventId:alarmIdentifier:
_recvSetParticipantStatusEndpoint:
_recvSetEventKitReminderCompletedEndpoint:
_recvSetReminderKitReminderCompletedEndpoint:
_recvDeleteEventEndpoint:
_calendarItem:snoozeAlarmID:withTimeIntervalFromNow:
_recvSetEventKitAlarmSnoozeEndpoint:
_recvSetReminderKitAlarmSnoozeEndpoint:
_messaging
_messageLogging
activityRun:
activityIdentifier:
activitySubsystem:
activity:customizeCriteria:
activityDefer:
_sendMessage:
_runDuplicateChecker
_runOccurrenceCacheDumper
activity
setActivity:
service
setService:
_activity
T@"NDTActivity",&,N,V_activity
T@"IDSService",&,N,V_service
initWithIdentifier:calendarIdentifier:type:
didReceiveStartSyncCommand:
didReceiveReunionSyncCommand:
_registerForNotifications
_triggerFullSync
_triggerNightlySync
_triggerMigrationSync
_blockUntilUnlock
_enableDisableLogging
_notificationQueue
_daemonQueue
_preferencesObserver
_preferencesQueue
_logDbFile
os_log_facility
setObfuscate:
obfuscate
isInternalDevice
facilityWithSubsystem:category:
deletionWrapperForObjectID:deletedReminderAndListMapping:
deleteWhatever:calendarsInSource:inStore:
deleteSourcesTaskCalendars:inStore:
deleteSourcesEventCalendars:inStore:
configureSource:inStore:withAttributes:
initWithNEKEventStore:eventChanges:reminderChanges:
insertedOrUpdatedSources
deletedSourcesIDs
ekEventStore
_insertedOrUpdatedSources
_deletedSourcesIDs
_ekEventStore
T@"EKEventStore",R,N,V_ekEventStore
T@"NSSet",R,N,V_insertedOrUpdatedSources
T@"NSSet",R,N,V_deletedSourcesIDs
isBefore:
isAfter:
initForFullSync:tinyStore:
_getTestWindowStart
_getTestWindowEnd
_getWindowStart
_getWindowEnd
_spanNowTime
_setWindowToNow
_loadLastSyncWindow
_computeDerived
eventInWindow:inStore:
_eventInWindow:inStore:
eventInFuture:inStore:
reminderInWindow:
reminderInFuture:
shouldSyncBasedOnTime:
spanStart
setSpanStart:
spanEnd
setSpanEnd:
taskCutoff
setTaskCutoff:
timeZone
setTimeZone:
taskCutoffDate
setTaskCutoffDate:
_fwdDaysToSync
_revDaysToSync
_dontSyncDays
_spanStart
_spanEnd
_taskCutoff
_timeZone
_taskCutoffDate
Td,N,V_spanStart
Td,N,V_spanEnd
Td,N,V_taskCutoff
T@"NSTimeZone",&,N,V_timeZone
T@"NSDate",&,N,V_endDate
T@"NSDate",&,N,V_taskCutoffDate
_schemaVersion
_setSchemaVersion:
lock
unlock
identifierForRecordID:
setIdentifier:masterRowID:summary:location:startTime:forRecordID:
isIdentifierPresent:forRecordID:
recordChanged:
deleteIdentifierForRecordID:
removeAllRecords
dumpToLog
count
_os_lock
_log
setIsComplete:
setHasIsComplete:
hasIsComplete
hasCalendarName
hasReminderTitle
hasExternalIdentifier
isComplete
calendarName
setCalendarName:
reminderTitle
setReminderTitle:
externalIdentifier
setExternalIdentifier:
_calendarName
_externalIdentifier
_reminderTitle
_isComplete
TB,N,V_isComplete
T@"NSString",&,N,V_calendarName
T@"NSString",&,N,V_reminderTitle
T@"NSString",&,N,V_externalIdentifier
initUniquelyWithKey:localFlag:
initWithIdentifier:isDefaultLocalCalendar:
isDefaultLocalCalendar
_isDefaultLocalCalendar
T@"NSString",R,N,V_identifier
TB,R,N,V_isDefaultLocalCalendar
setDefaultAlarmOffset:
setHasDefaultAlarmOffset:
hasDefaultAlarmOffset
setHasType:
setIsEnabled:
setHasIsEnabled:
hasIsEnabled
setIsFacebook:
setHasIsFacebook:
hasIsFacebook
setUsesSelfAttendee:
setHasUsesSelfAttendee:
hasUsesSelfAttendee
hasConstraintsDescriptionPath
hasCreatorBundleID
hasCreatorCodeSigningIdentity
hasAccountPersistentID
setSupportsSharedCalendars:
setHasSupportsSharedCalendars:
hasSupportsSharedCalendars
setAllowsTasks:
setHasAllowsTasks:
hasAllowsTasks
setAllowsEvents:
setHasAllowsEvents:
hasAllowsEvents
setAllowsCalendarAddDeleteModify:
setHasAllowsCalendarAddDeleteModify:
hasAllowsCalendarAddDeleteModify
setOnlyCreatorCanModify:
setHasOnlyCreatorCanModify:
hasOnlyCreatorCanModify
setSnoozeAlarmRequiresDetach:
setHasSnoozeAlarmRequiresDetach:
hasSnoozeAlarmRequiresDetach
setSupportsAlarmAcknowledgedDate:
setHasSupportsAlarmAcknowledgedDate:
hasSupportsAlarmAcknowledgedDate
setIsBirthdayStore:
setHasIsBirthdayStore:
hasIsBirthdayStore
defaultAlarmOffset
isEnabled
isFacebook
usesSelfAttendee
constraintsDescriptionPath
setConstraintsDescriptionPath:
creatorBundleID
setCreatorBundleID:
creatorCodeSigningIdentity
setCreatorCodeSigningIdentity:
accountPersistentID
setAccountPersistentID:
supportsSharedCalendars
allowsTasks
allowsEvents
allowsCalendarAddDeleteModify
onlyCreatorCanModify
snoozeAlarmRequiresDetach
supportsAlarmAcknowledgedDate
isBirthdayStore
_accountPersistentID
_constraintsDescriptionPath
_creatorBundleID
_creatorCodeSigningIdentity
_defaultAlarmOffset
_allowsCalendarAddDeleteModify
_allowsEvents
_allowsTasks
_isBirthdayStore
_isEnabled
_isFacebook
_onlyCreatorCanModify
_snoozeAlarmRequiresDetach
_supportsAlarmAcknowledgedDate
_supportsSharedCalendars
_usesSelfAttendee
TI,N,V_defaultAlarmOffset
TI,N,V_type
TB,N,V_isEnabled
TB,N,V_isFacebook
TB,N,V_usesSelfAttendee
T@"NSString",&,N,V_constraintsDescriptionPath
T@"NSString",&,N,V_creatorBundleID
T@"NSString",&,N,V_creatorCodeSigningIdentity
T@"NSString",&,N,V_accountPersistentID
TB,N,V_supportsSharedCalendars
TB,N,V_allowsTasks
TB,N,V_allowsEvents
TB,N,V_allowsCalendarAddDeleteModify
TB,N,V_onlyCreatorCanModify
TB,N,V_snoozeAlarmRequiresDetach
TB,N,V_supportsAlarmAcknowledgedDate
TB,N,V_isBirthdayStore
initWithSpan:session:
pause
doneForRealNotifyingPairedSync:
_doneForRealNotifyingPairedSync:
_timeToLie
_isPaused
_calledDidComplete
_span
_endTime
_previousFraction
tc_status:
tc_setNominal
tc_setAutomaticSync:
tc_advanceChangeNumber
tc_setObjectDelay:
tc_requestDelta
tc_requestReset
tc_setMinimumSessionTimeout:
tc_setMaximumSessionTimeout:
tc_setFailureProbablity:
tc_setFixedRetryInternal:
listener:shouldAcceptNewConnection:
listener
setListener:
_listener
T@"NSXPCListener",&,N,V_listener
eks_debugDesc
eks_cacheKey
runFrom:to:
runForNow
syncStateDBPathFor:
pairingID
pairingStorePath
createAccountWithSaveRequest:withAttributes:
configureAccount:withSaveRequest:withAttributes:
configureAccount:accountChangeItemProvider:withAttributes:
initWithFileManager:
flush
recordSessionType:
store
setStore:
storeFile
setStoreFile:
_storeFile
T@"NEKSessionAnalyticsStore",&,N,V_store
T@"NDTSQFile",&,N,V_storeFile
dealloc
initWithQueue:text:
bindInteger:
bindUint64:
bindString:
bindDouble:
bindBlob:
step
fetchInteger
fetchUint64
fetchString
fetchDouble
fetchBlob
resetBindCursor
resetFetchCursor
setParsed:
parsed
rawDb
setRawDb:
text
bindPosition
fetchPosition
columnCount
bindCount
_parsed
_rawDb
_text
T^{sqlite3_stmt=},N,V_parsed
T^{sqlite3=},N,V_rawDb
T@"NSString",R,N,V_text
changeObserverForEventWithQueue:databaseController:environment:
changeObserverForReminderWithQueue:databaseController:environment:
T@"<NEKChangeObserverDelegate>",W,N
_keyQueue
T@"<NEKChangeObserverDelegate>",W,N,V_delegate
_changed:
canUseLzfse
canUseDataTransfer
_query:
cache
setCache:
_cache
T@"NSMutableDictionary",&,N,V_cache
sourcesType
calendarsType
clearSources
addSources:
sourcesCount
sourcesAtIndex:
clearCalendars
addCalendars:
calendarsCount
calendarsAtIndex:
sources
setSources:
_sources
T@"NSMutableArray",&,N,V_sources
T@"NSMutableArray",&,N,V_calendars
initWithCalendar:
calendarInStore:withNEKCalendarID:
resetLocalCalendarCache
initWithList:useAttributes:
initWithList:
cdEntityName
enumerateForChangeType:forEntitiesOfClass:withBlock:
_enumerateForChangeType:forEntitiesOfClass:withBlock:
isDeferrable
_createDb
_prepareStatements
shouldShowInvite:withUUID:
didShowInvite:withUUID:
deleteInviteByUUID:
sweep
dbFilename
setDbFilename:
_dbQueue
_dbConn
_update
_fetch
_sweep
_dbFilename
T@"NSString",&,N,V_dbFilename
NEKSqueeze
NEKFluff
initWithFIFOLength:name:
push:
finish
conditionalPop:
terminate
terminateIfNotFinished
finished
setFinished:
error
setError:
length
setLength:
condition
setCondition:
fifo
setFifo:
terminated
setTerminated:
_finished
_terminated
_error
_length
_condition
_fifo
Tq,N,V_length
T@"NSCondition",&,N,V_condition
T@"NSMutableArray",&,N,V_fifo
TB,N,V_terminated
TB,N,V_finished
T@"NSString",R,N,V_name
T@"NSError",&,N,V_error
changeObserverDidObserveChanges:
changeObserverDidObserveTruncation:
service:startSession:error:
service:sessionEnded:error:
service:incomingData:completion:
service:incomingStream:metadata:completion:
service:encounteredError:context:
service:willPreferSession:overSession:
service:willSwitchFromPairingID:toPairingID:
service:didSwitchFromPairingID:toPairingID:
service:targetDeviceProximityChanged:
service:targetDeviceConnectionChanged:
serviceDidPairDevice:
serviceDidUnpairDevice:
_setClipping:
_canUseDataTransfer
setNeedsFullSync
setNeedsReunionSync
setNeedsNightlySync
setNeedsMigrationSync
_retrySync
createOrUpdateSYObject:eventStore:reminderStore:session:
_deleteSYObject:eventStore:reminderStore:
deleteSYObject:eventStore:reminderStore:
maxDeltaRetries
_faultCount
_setFaultCount:
_deleteWronglyImmutableCalendars
_retrySession:
_clearToDeltaSync
getMinimumSessionTimeout
getMaximumSessionTimeout
getFailureProbablity
getFixedRetryInternal
_startSendSession:results:
_startRecvSession:results:
_fullSessionTimeout
_shouldFakeFailure
_nextDelay:
scheduleRetry
scheduleDeferredRetry
clearRemoteBuildVersion
clearRetryState
bumpFaultsAndScheduleRetry
_sendSessionEnded:error:
_recvSessionEnded:error:
prepDatabasesForResetSync
isCurrentlySyncing
eventStore
reminderStore
isPerformingBackupResetSync
setIsPerformingBackupResetSync:
_syServiceLock
_syncService
_wasUsingDataTransfer
_sessionIdleQueue
_eventStore
_reminderStore
_syncSession
_analyticsDriver
_completion
_isNightlySync
_resetTimeoutTracker
_deltaTimeoutTracker
_nightlyTimeoutTracker
_rpcEndpoint
_preemptedSessionProgressLiar
_testingControl
_sessionDepth
_isCurrentlySyncing
_isPerformingBackupResetSync
TB,N,V_isPerformingBackupResetSync
T@"<NEKSyncControllerDelegate>",W,N,V_delegate
TB,R,N,V_isCurrentlySyncing
T@"NEKStore",R,N,V_eventStore
T@"NEKStore",R,N,V_reminderStore
setPacketNumber:
setHasPacketNumber:
hasPacketNumber
hasStoreWrapper
hasCalendarWrapper
hasICSWrapper
hasDeletionWrapper
hasValidationWrapper
hasSetReminderComplete
hasSetParticipantStatus
hasSetAlarmSnooze
hasDeleteEvent
packetNumber
storeWrapper
setStoreWrapper:
calendarWrapper
setCalendarWrapper:
iCSWrapper
setICSWrapper:
deletionWrapper
setDeletionWrapper:
validationWrapper
setValidationWrapper:
setReminderComplete
setSetReminderComplete:
setParticipantStatus
setSetParticipantStatus:
setAlarmSnooze
setSetAlarmSnooze:
deleteEvent
setDeleteEvent:
_calendarWrapper
_deleteEvent
_deletionWrapper
_iCSWrapper
_packetNumber
_setAlarmSnooze
_setParticipantStatus
_setReminderComplete
_storeWrapper
_validationWrapper
TI,N,V_packetNumber
T@"NEKPBSourceWrapper",&,N,V_storeWrapper
T@"NEKPBCalendarWrapper",&,N,V_calendarWrapper
T@"NEKPBICSWrapper",&,N,V_iCSWrapper
T@"NEKPBDeletionWrapper",&,N,V_deletionWrapper
T@"NEKPBValidationWrapper",&,N,V_validationWrapper
T@"NEKPBSetReminderComplete",&,N,V_setReminderComplete
T@"NEKPBSetParticipantStatus",&,N,V_setParticipantStatus
T@"NEKPBSetAlarmSnooze",&,N,V_setAlarmSnooze
T@"NEKPBDeleteEvent",&,N,V_deleteEvent
initWithAttributes:
T@"NEKSourceAttributes",R,N,V_attributes
changeSetForEvent
changeSetForReminder
isEmpty
inserts
setInserts:
updates
setUpdates:
deletes
setDeletes:
deletionMap
setDeletionMap:
moveMap
setMoveMap:
changeNumber
setChangeNumber:
completion
setCompletion:
truncated
setTruncated:
_truncated
_inserts
_updates
_deletes
_deletionMap
_moveMap
_changeNumber
T@"NSArray",C,N,V_inserts
T@"NSArray",C,N,V_updates
T@"NSArray",C,N,V_deletes
T@"NSDictionary",&,N,V_deletionMap
T@"NSDictionary",&,N,V_moveMap
Tq,N,V_changeNumber
T@?,C,N,V_completion
TB,N,V_truncated
UUID
isHolidyCalendar
setIsHolidyCalendar:
publishedURL
setPublishedURL:
selfIdentityAddress
setSelfIdentityAddress:
ownerIdentityAddress
setOwnerIdentityAddress:
_isHolidyCalendar
_UUID
_publishedURL
_selfIdentityAddress
_ownerIdentityAddress
T@"NSString",C,N,V_UUID
T@"NSString",C,N,V_title
TB,N,V_isHolidyCalendar
T@"NSData",C,N,V_digest
T@"NSString",C,N,V_symbolicColorName
T@"NSString",C,N,V_colorString
T@"NSString",C,N,V_sharedOwnerName
T@"NSString",C,N,V_sharedOwnerAddress
T@"NSURL",C,N,V_publishedURL
T@"NSString",C,N,V_externalIdentificationTag
T@"NSString",C,N,V_syncToken
T@"NSString",C,N,V_externalModificationTag
T@"NSData",C,N,V_externalRepresentation
Ti,N,V_supportedEntityTypes
T@"NSString",C,N,V_notes
T@"NSString",C,N,V_subCalAccountID
T@"NSString",C,N,V_pushKey
T@"NSString",C,N,V_selfIdentityDisplayName
T@"NSString",C,N,V_selfIdentityEmail
T@"NSURL",C,N,V_selfIdentityAddress
T@"NSString",C,N,V_selfIdentityFirstName
T@"NSString",C,N,V_selfIdentityLastName
T@"NSString",C,N,V_ownerIdentityDisplayName
T@"NSString",C,N,V_ownerIdentityEmail
T@"NSURL",C,N,V_ownerIdentityAddress
T@"NSString",C,N,V_ownerIdentityFirstName
T@"NSString",C,N,V_ownerIdentityLastName
initWithPersistentID:isLocalStore:
isEqualToNEKSourceID:
hasIdentifier
setIsDefaultLocalCalendar:
setHasIsDefaultLocalCalendar:
hasIsDefaultLocalCalendar
T@"NSString",&,N,V_identifier
TB,N,V_isDefaultLocalCalendar
fetchEverythingIntoPipe:
fetchNightlyIntoPipe:
fetchChangesIntoPipe:deferrable:
join
eventChangeObserver
setEventChangeObserver:
reminderChangeObserver
setReminderChangeObserver:
nekEventStore
setNekEventStore:
nekReminderStore
setNekReminderStore:
backgroundThread
setBackgroundThread:
terminateSemaphore
setTerminateSemaphore:
_eventChangeObserver
_reminderChangeObserver
_nekEventStore
_nekReminderStore
_backgroundThread
_terminateSemaphore
T@"NSThread",&,N,V_backgroundThread
T@"NSObject<OS_dispatch_semaphore>",&,N,V_terminateSemaphore
T@"NEKEventChangeObserver",&,N,V_eventChangeObserver
T@"NEKReminderChangeObserver",&,N,V_reminderChangeObserver
T@"NEKEventStore",&,N,V_nekEventStore
T@"NEKReminderStore",&,N,V_nekReminderStore
listInStore:withNEKCalendarID:
hasSelfAttendeeEmail
setHasEntityType:
hasEntityType
setInvitationChangedPropertyFlagDate:
setHasInvitationChangedPropertyFlagDate:
hasInvitationChangedPropertyFlagDate
setInvitationChangedPropertyFlagTime:
setHasInvitationChangedPropertyFlagTime:
hasInvitationChangedPropertyFlagTime
setInvitationChangedPropertyFlagTitle:
setHasInvitationChangedPropertyFlagTitle:
hasInvitationChangedPropertyFlagTitle
setInvitationChangedPropertyFlagLocation:
setHasInvitationChangedPropertyFlagLocation:
hasInvitationChangedPropertyFlagLocation
setInvitationChangedPropertyFlagAttendeeComment:
setHasInvitationChangedPropertyFlagAttendeeComment:
hasInvitationChangedPropertyFlagAttendeeComment
setInvitationChangedPropertyFlagAttendeeStatus:
setHasInvitationChangedPropertyFlagAttendeeStatus:
hasInvitationChangedPropertyFlagAttendeeStatus
hasSelfAttendeeUUID
hasSelfOrganizerEmail
hasSelfOrganizerUUID
setHasAttendeeStatus:
hasAttendeeStatus
setHasLocationPredictionState:
hasLocationPredictionState
invitationChangedPropertyFlagDate
invitationChangedPropertyFlagTime
invitationChangedPropertyFlagTitle
invitationChangedPropertyFlagLocation
invitationChangedPropertyFlagAttendeeComment
invitationChangedPropertyFlagAttendeeStatus
_invitationChangedPropertyFlagAttendeeComment
_invitationChangedPropertyFlagAttendeeStatus
_invitationChangedPropertyFlagDate
_invitationChangedPropertyFlagLocation
_invitationChangedPropertyFlagTime
_invitationChangedPropertyFlagTitle
TB,N,V_invitationChangedPropertyFlagDate
TB,N,V_invitationChangedPropertyFlagTime
TB,N,V_invitationChangedPropertyFlagTitle
TB,N,V_invitationChangedPropertyFlagLocation
TB,N,V_invitationChangedPropertyFlagAttendeeComment
TB,N,V_invitationChangedPropertyFlagAttendeeStatus
TQ,N,V_attendeeStatus
TQ,N,V_locationPredictionState
createListInAccount:withSaveRequest:withAttributes:
configureList:withSaveRequest:withAttributes:
configureList:listChangeItemProvider:withAttributes:
initWithCapacity:
cachedCopy:
purge
hitRatio
capacity
setCapacity:
hits
setHits:
accesses
setAccesses:
_capacity
_hits
_accesses
T@"NSMutableOrderedSet",&,N,V_cache
Tq,N,V_capacity
Tq,N,V_hits
Tq,N,V_accesses
syncSession:enqueueChanges:error:
syncSession:applyChanges:completion:
syncSession:didEndWithError:
syncSession:resetDataStoreWithError:
resetDataStoreForSyncSession:completion:
syncSession:rollbackChangesWithError:
syncSession:restartChanges:
syncSession:successfullySynced:
changeSupplier
setChangeSupplier:
fetcher
setFetcher:
progressLiar
setProgressLiar:
syncKind
setSyncKind:
statsTracker
setStatsTracker:
perfomanceTracker
setPerfomanceTracker:
validationObject
setValidationObject:
objectDelayUs
setObjectDelayUs:
storeUpdateTimeNs
setStoreUpdateTimeNs:
calendarUpdateTimeNs
setCalendarUpdateTimeNs:
eventUpdateTimeNs
setEventUpdateTimeNs:
reminderUpdateTimeNs
setReminderUpdateTimeNs:
_isFirst
_changeQueue
_ct_logger
_preSyncCensus
_changeSupplier
_fetcher
_progressLiar
_syncKind
_statsTracker
_perfomanceTracker
_validationObject
_objectDelayUs
_storeUpdateTimeNs
_calendarUpdateTimeNs
_eventUpdateTimeNs
_reminderUpdateTimeNs
T@"NEKResultsPipe",&,N,V_changeSupplier
T@"NEKResultsFetcher",&,N,V_fetcher
T@"NEKProgressLiar",&,N,V_progressLiar
T@"NSString",&,N,V_syncKind
T@"NEKEnvironment",&,N,V_environment
T@"NEKStatTracker",&,N,V_statsTracker
T@"NDTPerf",&,N,V_perfomanceTracker
T@"NEKValidationWrapper",&,N,V_validationObject
Tq,N,V_objectDelayUs
TQ,N,V_storeUpdateTimeNs
TQ,N,V_calendarUpdateTimeNs
TQ,N,V_eventUpdateTimeNs
TQ,N,V_reminderUpdateTimeNs
nowMinusPrevious:
wallTime
dirtyMemory
cpuTime
cpuTimeMs
setWallTime:
setCpuTime:
setDirtyMemory:
_wallTime
_cpuTime
_dirtyMemory
Tq,N,V_wallTime
Tq,N,V_cpuTime
Tq,N,V_dirtyMemory
didCalendarChange:
configureCalendar:inDatabase:withAttributes:
setSnoozeAmount:
setHasSnoozeAmount:
hasSnoozeAmount
hasAlarmIdentifier
hasItemIdentifier
hasStoreIdentifier
snoozeAmount
alarmIdentifier
setAlarmIdentifier:
itemIdentifier
setItemIdentifier:
setStoreIdentifier:
_snoozeAmount
_alarmIdentifier
_itemIdentifier
Td,N,V_snoozeAmount
T@"NSString",&,N,V_alarmIdentifier
T@"NSString",&,N,V_itemIdentifier
T@"NSString",&,N,V_storeIdentifier
oops
dataFromChange:
changeFromData:ofType:
dataWithSYObject:
SYObjectWithData:
encodeSYChangeForBackwardCompatibility:protocolVersion:
decodeChangeData:fromProtocolVersion:ofType:
_saveEventStore:
saveRequestForStore:
saveRequestForStore:needsPurgeDeletedObjectsAfterSave:
removeDeletableAccounts:
_deletableAccountsForStore:
removeDeletableLists:
removeAllRemindersInList:
_deletableListsForStore:
getDefaultListForStore:
shouldSendReminder:
handleNewReminderChangeItem:withWrapper:session:
handleUpdatedReminderFromGizmo:withSaveRequest:withWrapper:
handleReminderWithUniqueIdentifierFromGizmo:saveRequest:list:wrapper:
deduplicateICSWrappers:
listCacheForStore:wrappers:
reminderCacheForStore:wrappers:
_ensureReminderInList:saveRequest:inICSWrapper:
applySidePropertiesToReminderChangeItem:withWrapper:session:
batchedEnumerateForChangeSet:changeType:forEntitiesOfClass:withFetchBlock:withBlock:
batchedEnumerateAccountsForStore:changeSet:changeType:withBlock:
batchedEnumerateListsForStore:changeSet:changeType:withBlock:
batchedEnumerateRemindersForStore:changeSet:changeType:withBlock:
storeWrapperForCloudKitAccount:pipe:
listWrappersForChangeSet:pipe:
remindersWrappersForChangeSet:skipAccountDeletions:pipe:
ICSWrappersForChangeSet:movedReminderAndListMapping:pipe:
deletionWrappersForChangeSet:deletedReminderAndListMapping:skipAccountDeletions:pipe:
wrapperForList:useAttributes:
wrapperForList:
wrapperForReminder:oldListIdentifier:
_deleteAccountWithIdentifier:store:
_deleteListWithIdentifier:store:
_deleteReminderWithIdentifier:store:
_updateAccount:withSourceWrapper:store:
_createAccountForWrapper:store:
_checkAndSetDefaultList:calendarWrapper:store:
_updateList:withCalendarWrapper:
_createListForWrapper:store:
deleteAccount:
deleteList:
deleteReminder:
saveRequests
setSaveRequests:
saveRequestsNeedPurgeDeletedObjectsAfterSave
setSaveRequestsNeedPurgeDeletedObjectsAfterSave:
_saveRequestsNeedPurgeDeletedObjectsAfterSave
_saveRequests
T@"NSMapTable",&,N,V_saveRequests
TB,N,V_saveRequestsNeedPurgeDeletedObjectsAfterSave
databaseDidChange
_defaultCalendarChanged:
blindChangeNumberAdvance:
initWithQueue:environment:
eventDatabaseController
_taskCalendarKey
_eventCalendarKey
beginObservingChanges
stopObservingChanges
notifyForDatabaseUpdatesIfNeeded
notifyForDatabaseUpdates
allSourcesInto:
allCalendarsInto:
_masterEventsToSync
allEventsInto:filter:window:
allRemindersInto:filter:window:
fetchEventChangeSet
_fetchChangesInto:from:inside:
restartTrackingChanges
_sequenceKey
lastSequenceNumber
setLastSequenceNumber:
previousDefaultTaskCalendar
previousDefaultEventCalendar
setPreviousDefaultTaskCalendar:
setPreviousDefaultEventCalendar:
weakEventDatabaseController
setWeakEventDatabaseController:
_sawSeqnoFailure
_lastSequenceNumber
_weakEventDatabaseController
T@"NEKEventStore",W,N,V_weakEventDatabaseController
metadataKeysType
metadataValuesType
hasICSData
setHasCalendarItemCount:
hasCalendarItemCount
clearMetadataKeys
addMetadataKeys:
metadataKeysCount
metadataKeysAtIndex:
clearMetadataValues
addMetadataValues:
metadataValuesCount
metadataValuesAtIndex:
hasSyncID
setHasTaskCompletionDate:
hasTaskCompletionDate
hasOldIdentifier
hasNuevoIdentifier
hasLzfseICSData
iCSData
metadataKeys
setMetadataKeys:
metadataValues
setMetadataValues:
syncID
setSyncID:
_iCSData
_metadataKeys
_metadataValues
_syncID
T@"NSData",&,N,V_iCSData
T@"NEKPBCalendarIdentifier",&,N,V_calendarIdentifier
TI,N,V_calendarItemCount
T@"NSMutableArray",&,N,V_metadataKeys
T@"NSMutableArray",&,N,V_metadataValues
T@"NSString",&,N,V_syncID
TQ,N,V_displayOrder
hasDuplicateCheck
hasOccurrenceCache
duplicateCheck
setDuplicateCheck:
occurrenceCache
setOccurrenceCache:
_duplicateCheck
_occurrenceCache
T@"NEKPBDuplicateCheck",&,N,V_duplicateCheck
T@"NEKPBOccurrenceCache",&,N,V_occurrenceCache
T@"NSString",C,N,V_name
T@"NSNumber",&,N,V_defaultAlarmOffset
Tq,N,V_type
T@"NSString",C,N,V_constraintsDescriptionPath
T@"NSString",C,N,V_creatorBundleID
T@"NSString",C,N,V_creatorCodeSigningIdentity
T@"NSString",C,N,V_accountPersistentID
databaseChangedExternally
lastInsertedRowId
T@"NDTSQFile",&,N,V_db
hasUuid
hasSummary
hasCalendar
setDate:
setHasDate:
hasDate
uuid
setUuid:
summary
setSummary:
calendar
setCalendar:
date
_date
_calendar
_summary
_uuid
T@"NSString",&,N,V_uuid
T@"NSString",&,N,V_summary
T@"NSString",&,N,V_calendar
Td,N,V_date
sealCompletions
addCompletion:
isEffectivelyEmpty
markAsNotEffectivelyEmpty
isTruncated
markAsTruncated
markAsDeferrable
_completions
_isTruncated
_isEffectivelyEmpty
_isDeferrable
T@?,R,N
TB,R,N,V_isDeferrable
storeDidChange
_reminderListKey
reminderDatabaseController
allCloudKitAccountsInto:
allListsInto:
fetchReminderChangeSet
_fetchChangesInto:from:inside:outDeletedReminderAndListMapping:outMovedReminderAndListMapping:
loadChangeTrackingStateMapWithStore:
saveChangeTrackingStateMap:
previousDefaultReminderListID
setPreviousDefaultReminderListID:
changeStateMap
weakReminderDatabaseController
setWeakReminderDatabaseController:
_changeTrackingStateMap
_weakReminderDatabaseController
T@"NEKReminderStore",W,N,V_weakReminderDatabaseController
initWithChangeTracking:lastChangeToken:
changeTracking
setChangeTracking:
lastChangeToken
setLastChangeToken:
_changeTracking
_lastChangeToken
T@"REMChangeTracking",&,N,V_changeTracking
T@"REMChangeToken",&,N,V_lastChangeToken
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
initWithData:store:clientName:
transactionAuthorsToExclude
persistToData:
filterAccountToSync:
hasChangeTrackingTokens
beginTrackingFromEpochForStore:clientName:
beginTrackingFromNowForStore:clientName:
_beginTrackingFromLoadedStateForStore:clientName:
_beginTrackingForStore:clientName:verifyAccountsBlock:changeTrackingStateFromAccountBlock:
setChangeToken:forAccountID:
fetchChangedObjectIDs:
deletedAccountIDsFromLoadedMap
_loadedChangeTokenMap
_deletedAccountIDsFromLoadedMap
T@"NSSet",R,V_deletedAccountIDsFromLoadedMap
hasEventIdentifier
hasEventTitle
setEventStart:
setHasEventStart:
hasEventStart
hasCalendarTitle
setSpan:
setHasSpan:
hasSpan
eventIdentifier
setEventIdentifier:
eventTitle
setEventTitle:
eventStart
calendarTitle
setCalendarTitle:
span
_eventStart
_calendarTitle
_eventIdentifier
_eventTitle
T@"NSString",&,N,V_eventIdentifier
T@"NSString",&,N,V_eventTitle
Td,N,V_eventStart
T@"NSString",&,N,V_calendarTitle
TI,N,V_span
initWithStore:recordMap:
finalizeDatabasesAfterResetSync
_deleteStoreById:
_deleteCalendarById:
_deleteEventById:
setRecordMap:
T@"NEKRecordMap",&,N,V_recordMap
T@"EKEventStore",&,N,V_store
eks_sourcesAlwaysIncludingLocal
eks_eventOnlyStoreIgnoringExternalChangesFor:withClientId:
eks_eventOnlyStoreFor:
eks_eventStoreFor:
eks_storeCount
initWithEventStore:cause:
_bump
fetch:
someStore
_counter
_cause
_lastStore
initWithDelegate:
_setActivity:
_checkIn
_currentCriteria
completeAndFireIn:
completeAndFireOnConnection
completeAndFireNever
_setState:
_activityComplete
_startDeferralPolling
_stopDeferralPolling
lastFired
setLastFired:
waitingForCheckin
setWaitingForCheckin:
activityCondition
setActivityCondition:
estimatedFireDate
setEstimatedFireDate:
setLog:
activityIdentifier
setActivityIdentifier:
criteriaDelay
setCriteriaDelay:
criteriaOnConnection
setCriteriaOnConnection:
deferPollingSource
setDeferPollingSource:
_criteriaOnConnection
_lastFired
_waitingForCheckin
_activityCondition
_estimatedFireDate
_activityIdentifier
_criteriaDelay
_deferPollingSource
T@"NSObject<OS_os_transaction>",&,N,V_waitingForCheckin
T@"NSCondition",&,N,V_activityCondition
T@"NSObject<OS_xpc_object>",&,N,V_activity
T@"NSDate",&,N,V_estimatedFireDate
T@"NSObject<OS_os_log>",&,N,V_log
Tr*,N,V_activityIdentifier
T@"NSDate",&,N,V_lastFired
Tq,N,V_criteriaDelay
TB,N,V_criteriaOnConnection
T@"NSObject<OS_dispatch_source>",&,N,V_deferPollingSource
T@"<NDTActivityDelegate>",W,N,V_delegate
hasSyncId
T@"NSString",&,N,V_syncId
initWithCalendarRef:useAttributes:
initWithCalendarRef:
setStatus:
setHasStatus:
hasStatus
status
_status
TI,N,V_status
T@"NEKPBSourceAttributes",&,N,V_attributes
NEKPBOccurrenceCache
NSCopying
NEKICSWrapperMetadata
NEKICSWrapper
SYChange
NSObject
NEKStatTracker
EventKitSync
EventKitAdditions
NEKEnvironment
NEKCalendarWrapper
Reminder
NEKPBSourceID
Event
NDTSQException
NDTSQFile
NSCacheDelegate
NDTSQActor
NEKPBCalendarWrapper
EKObject_EventKitSync
NEKStore
Reminders
NEKPBCalendarAttributes
NEKTinyStore
NDTMessage
NDTMessaging
IDSServiceDelegate
NEKValidationWrapper
NDTSQKeyValueStore
NEKPBDuplicateSource
NEKAnalyticsReporter
_NEKSyncSet
NEKEventStore
NEKSack
NEKSyncCoordinator
PSYSyncCoordinatorDelegate
NEKPBValidationWrapper
NEKPreferencesObserver
NEKSessionAnalyticsStore
NDTCrashSynthesizer
NEKRPCEndpoint
NEKAnalyticsDriver
NDTActivityDelegate
NEKDeletionWrapper
NEKDaemon
NDTLogFacility
NDTLog
NEKSourceChangeAggregator
KeepItSimple
NEKSyncWindow
NEKRecordMap
NEKPBSetReminderComplete
NEKCalendarID
NEKPBSourceAttributes
NEKProgressLiar
NEKTestControlProtocol
NEKTestControl
NSXPCListenerDelegate
NEKOccurrenceCacheDumper
NEKDatabaseFileManager
NEKSessionAnalytics
NDTSQStatement
NEKChangeObserver
NEKCapabilities
NEKPBDuplicateCheck
NEKReminderChangeSet
NEKEventChangeSet
NEKSeenMap
NDTResultsFIFO
NEKSyncController
NEKChangeObserverDelegate
SYServiceDelegate
NEKPBProtoBuffMessage
NEKSourceWrapper
NEKChangeSet
NEKCalendarAttributes
NEKSourceID
NEKPBCalendarIdentifier
NEKResultsFetcher
NEKPBICSWrapperMetadata
NDTObjectCache
NEKPBDuplicateCalendar
NEKSyncSession
SYSessionDelegate
NDTPerf
NEKPBSetAlarmSnooze
NEKProtobufSerializer
SYChangeSerializer
NEKReminderStore
NEKEventChangeObserver
NEKPBICSWrapper
NEKPBDailyAnalytics
NEKSourceAttributes
NDTSQSchema
NEKPBItemOccurrence
NEKResultsPipe
NEKReminderChangeObserver
NEKReminderChangeTrackingState
NEKReminderChangeTrackingStateMap
NSSecureCoding
NSCoding
NEKPBDeleteEvent
NEKEventPurger
NEKStoreRoller
NDTActivity
NEKPBDeletionWrapper
NEKPBSetParticipantStatus
NEKPBSourceWrapper
#16@0:8
@24@0:8^{_NSZone=}16
v24@0:8d16
v20@0:8B16
B16@0:8
v16@0:8
v24@0:8@16
Q16@0:8
@24@0:8Q16
@16@0:8
B24@0:8@16
d16@0:8
@"NSMutableArray"
{?="end"b1"start"b1}
v24@0:8Q16
q16@0:8
v24@0:8q16
@"NSString"
@"NSDate"
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8@16
v32@0:8@16@24
v28@0:8B16@20
v32@0:8Q16@24
v32@0:8q16@24
q24@0:8@16
v24@0:8@?16
Q24@0:8@16
@"NSData"
@"NEKCalendarID"
@"NSDictionary"
@"NSMutableDictionary"
@48@0:8@16@24d32d40
d24@0:8d16
@"NEKEnvironment"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSCondition"
@"NEKSyncController"
@"NEKDatabaseFileManager"
@"NEKTinyStore"
@"NEKRecordMap"
@"NEKSeenMap"
@"NEKSyncCoordinator"
@"NEKSessionAnalytics"
@"NEKDaemon"
@40@0:8@16@24@32
@"NEKSourceID"
@"NEKCalendarAttributes"
v64@0:8@16@24@32@40@48@56
v40@0:8@16@24@32
v60@0:8@16@24@32B40@44@52
{?="isLocalStore"b1}
@32@0:8@16@24
v32@0:8@"NSCache"16@24
v32@0:8@16@?24
v24@0:8@"NSString"16
v32@0:8@"NSString"16@?<i@?@"NDTSQStatement">24
@36@0:8@16@24B32
@32@0:8@16^i24
v32@0:8@16q24
^{sqlite3=}16@0:8
v24@0:8^{sqlite3=}16
@"NSObject<OS_dispatch_queue>"
@"NSMutableOrderedSet"
@"NDTSQKeyValueStore"
@"NSObject<OS_dispatch_source>"
@"NSHashTable"
^{sqlite3=}
@"<NDTSQFileDelegate>"
@"NEKPBCalendarAttributes"
@"NEKPBSourceID"
{?="isDefaultEventCalendar"b1"isDefaultTaskCalendar"b1}
@"<NEKChangeObserver>"
v20@0:8i16
i16@0:8
{?="invitationStatus"b1"sharingInvitationResponse"b1"sharingStatus"b1"supportedEntityTypes"b1"displayOrder"b1"canBePublished"b1"canBeShared"b1"hasBeenAlerted"b1"isDefaultCalendarForStore"b1"isFamilyCalendar"b1"isHidden"b1"isHolidayCalendar"b1"isIgnoringEventAlerts"b1"isIgnoringSharedCalendarNotifications"b1"isImmutable"b1"isInbox"b1"isNotificationsCollection"b1"isPublished"b1"isReadonly"b1"isSchedulingProhibited"b1"isSharingInvitation"b1"isSubscribed"b1}
q32@0:8@16q24
B40@0:8q16q24@32
v32@0:8d16@24
d32@0:8@16d24
@"NDTSQFile"
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v40@0:8@16@24@?32
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32@"IDSMessageContext"40
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v20@0:8I16
@48@0:8@16@24@32^@40
v40@0:8@16@?24@?32
@"IDSService"
@"NDTLogFacility"
@"NSArray"
v40@0:8^@16^@24@32
v48@0:8@16q24@32@40
B68@0:8@16@24@32@40q48@56B64
B56@0:8@16@24@32q40@48
@40@0:8@16@24^@32
v36@0:8@16B24@28
@28@0:8@16B24
B40@0:8@16@24@32
B32@0:8@16@24
v68@0:8@16@24@32B40@44@52@60
v32@0:8@"PSYSyncCoordinator"16@"PSYServiceSyncSession"24
v24@0:8@"PSYSyncCoordinator"16
@"PSYServiceSyncSession"
@"PSYSyncCoordinator"
{?="endDate"b1"masterCount"b1"occurrenceCount"b1"startDate"b1"showAlert"b1}
@"NSObject<OS_os_log>"
@"NPSManager"
@"NPSDomainAccessor"
@"EKPreferences"
v24@0:8^{NEKAnalyticsTally=iiii}16
v28@0:8^{NEKAnalyticsTally=iiii}16i24
@28@0:8B16@20
v48@0:8q16q24@32@40
v72@0:8@16@24d32@40@48@56q64
v44@0:8B16@20@28@36
v56@0:8d16@24@32@40@48
B40@0:8@16@24d32
@"NDTMessaging"
*24@0:8@16
v24@0:8@"NDTActivity"16
*24@0:8@"NDTActivity"16
v32@0:8@"NDTActivity"16@"NSObject<OS_xpc_object>"24
@"NDTActivity"
@36@0:8@16@24i32
@"NEKPreferencesObserver"
v40@0:8Q16@24@32
@"NSSet"
@"EKEventStore"
B24@0:8d16
@"NSTimeZone"
v64@0:8@16q24@32@40d48@56
{?="isComplete"b1}
I16@0:8
{?="defaultAlarmOffset"b1"type"b1"allowsCalendarAddDeleteModify"b1"allowsEvents"b1"allowsTasks"b1"isBirthdayStore"b1"isEnabled"b1"isFacebook"b1"isLocalStore"b1"onlyCreatorCanModify"b1"snoozeAlarmRequiresDetach"b1"supportsAlarmAcknowledgedDate"b1"supportsSharedCalendars"b1"usesSelfAttendee"b1}
@32@0:8d16@24
v24@0:8@?<v@?@"NSString">16
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"NSXPCListener"
B40@0:8@16@?24@32
@"NEKSessionAnalyticsStore"
i24@0:8q16
i24@0:8Q16
i24@0:8@16
i24@0:8d16
v24@0:8^{sqlite3_stmt=}16
^{sqlite3_stmt=}16@0:8
^{sqlite3_stmt=}
@"NEKEnvironment"16@0:8
@"<NEKChangeObserverDelegate>"16@0:8
v24@0:8@"<NEKChangeObserverDelegate>"16
@"<NEKChangeObserverDelegate>"
v36@0:8i16#20@?28
@32@0:8q16@24
@"NSError"
v24@0:8@"<NEKChangeObserver>"16
B40@0:8@16@24^@32
v48@0:8@16@24@32@?40
v28@0:8@16B24
B40@0:8@"SYService"16@"SYSession"24^@32
v40@0:8@"SYService"16@"SYSession"24@"NSError"32
v40@0:8@"SYService"16@"NSData"24@?<v@?B@"NSError">32
v48@0:8@"SYService"16@"NSInputStream"24@"NSDictionary"32@?<v@?B@"NSError">40
v40@0:8@"SYService"16@"NSError"24@"NSDictionary"32
@"SYSession"40@0:8@"SYService"16@"SYSession"24@"SYSession"32
v40@0:8@"SYService"16@"NSUUID"24@"NSUUID"32
v28@0:8@"SYService"16B24
v24@0:8@"SYService"16
v32@0:8@16^{StartSessionResults=BB@}24
d24@0:8q16
@"SYService"
@"NEKStore"
@"NEKSyncSession"
@"NEKAnalyticsDriver"
@"NEKStatTracker"
@"NEKRPCEndpoint"
@"NEKProgressLiar"
@"NEKTestControl"
@"<NEKSyncControllerDelegate>"
@"NEKPBCalendarWrapper"
@"NEKPBDeleteEvent"
@"NEKPBDeletionWrapper"
@"NEKPBICSWrapper"
@"NEKPBSetAlarmSnooze"
@"NEKPBSetParticipantStatus"
@"NEKPBSetReminderComplete"
@"NEKPBSourceWrapper"
@"NEKPBValidationWrapper"
{?="packetNumber"b1}
@"NEKSourceAttributes"
@?16@0:8
@"NSURL"
{?="isDefaultLocalCalendar"b1}
@"NEKEventChangeObserver"
@"NEKReminderChangeObserver"
@"NEKEventStore"
@"NEKReminderStore"
@"NSThread"
@"NSObject<OS_dispatch_semaphore>"
{?="attendeeStatus"b1"entityType"b1"invitationStatus"b1"locationPredictionState"b1"properInvitationStatus"b1"startDate"b1"invitationChangedPropertyFlagAttendeeComment"b1"invitationChangedPropertyFlagAttendeeStatus"b1"invitationChangedPropertyFlagDate"b1"invitationChangedPropertyFlagLocation"b1"invitationChangedPropertyFlagTime"b1"invitationChangedPropertyFlagTitle"b1}
@24@0:8q16
I40@0:8@16@?24^@32
B32@0:8@16^@24
I40@0:8@"SYSession"16@?<B@?@"<SYChange>">24^@32
v40@0:8@"SYSession"16@"NSArray"24@?<v@?B@"NSError">32
v32@0:8@"SYSession"16@"NSError"24
B32@0:8@"SYSession"16^@24
v32@0:8@"SYSession"16@?<v@?B@"NSError">24
v32@0:8@"SYSession"16@"NSSet"24
^{ct_green_tea_logger_s=}
@"NEKValidationWrapper"
@"NEKResultsPipe"
@"NEKResultsFetcher"
@"NDTPerf"
{?="snoozeAmount"b1}
@32@0:8@16q24
@40@0:8@16q24q32
@"NSData"24@0:8@"<SYChange>"16
@"<SYChange>"32@0:8@"NSData"16q24
@"NSData"24@0:8@"<SYObject>"16
@"<SYObject>"24@0:8@"NSData"16
@"NSData"32@0:8@"<SYChange>"16q24
@"<SYChange>"40@0:8@"NSData"16q24q32
v52@0:8@16i24#28@?36@?44
v44@0:8@16@24i32@?36
v44@0:8@16@24B32@36
@"NSMapTable"
v36@0:8@16i24@28
@"NEKPBCalendarIdentifier"
{?="displayOrder"b1"taskCompletionDate"b1"calendarItemCount"b1}
@"NEKPBDuplicateCheck"
@"NEKPBOccurrenceCache"
@"NSNumber"
{?="date"b1}
B56@0:8@16@24@32^@40^@48
@"NEKReminderChangeTrackingStateMap"
@"REMChangeTracking"
@"REMChangeToken"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^@16
v48@0:8@16@24@?32@?40
{?="eventStart"b1"span"b1}
r*16@0:8
v24@0:8r*16
@"<NDTActivityDelegate>"
@"NSObject<OS_os_transaction>"
@"NSObject<OS_xpc_object>"
{?="type"b1}
{?="span"b1"status"b1}
@"NEKPBSourceAttributes"
Setting ICS, len:%d
Error fetching local account: %{public}@
Error fetching lists in local account: %{public}@
Read in location for a reminder
Adding ICS to wrapper to send: %{public}@
Setting task with identifier %{public}@ as completed, completion date is %{public}@
Reminder %{public}@ does not have daCalendarItemUniqueIdentifier. Falling back to use REMObjectID.
Setting all properties on %@, identifier: %{public}@
Setting minimal properties on %@, identifier: %{public}@
Can't create canonical unique identifier for reminder %{public}@. Identifier returned by REMReminder is %{public}@
Unable to create UUID for %s %{public}@
Error fetching account. Account's persistent ID: [%{public}@]
Converting old plist state
Done converting old plist state
dataWithContentsOfFile gave us nothing
propertyListWithData gave us nothing. Error: %{public}@
_rawSendData assigned IDS identifier: %@
_rawSendData has an error: %{public}@
_rawSendFile assigned IDS identifier: %@
_rawSendFile has an error: %{public}@
No identifier returned. Error: %{public}@
Incoming reply message but no handler registered.
Can't find a handler for this message
didSend:%c IDS id: %{public}@, error: %{public}@
Validation failure. Local: %@ Remote: %@
Validation faulting on second failure: Local: %@ Remote: %@
Validation succeeded, %@.
Called with nil recordID or nil event store
Event deletion wrapper: %{public}@ -> %{public}@
Analytics detected excess calendar item on watch, identifier: %{public}@, timestamp: %9.0f
Analytics detected missing calendar item on watch, identifier: %{public}@, timestamp: %9.0f
Memory delta from save: %lld #perf
Event database save time: %fs #perf
Error saving EventKit database: %{public}@
Database changes saved successfully
%{public}s: Ignoring EventKit code path for getting default task calendar
_shouldSendEvent: Got a nil identifier for event: %p
Entity with summary %{public}@ identifier %{public}@ is a phantom master.  Ignoring.
_shouldSendEvent: Entity with summary %{public}@ identifier %{public}@ is detached, master identifier is %{public}@
_shouldSendEvent: Entity with summary %{public}@ identifier %{public}@ is detached, but can't get master, so using the actual detached event
No calendar for event with summary %{public}@ identifier %{public}@, event won't be tracked for sending duplicates, but we'll soldier on and likely fail somewhere later down the line.
Calendar identifier is nil for event %{public}@ identifier %{public}@. This is probably very bad.
Entity with summary %{public}@ and identifier %{public}@ already in set for calendar with identifier %{public}@, not sending again
Entity with summary %{public}@ and identifier %{public}@ not in set for calendar with identifier %{public}@, adding
Identifier is nil after much fiddling. Perhaps the master identifier is to blame?
Selecting reminder %{public}@
Fetched source via ID %{public}@ and got source:%p
NOT zapping source though I really feel like I should.
Create or update source: %{public}@, source:%p
Saving after updating a source (%{public}@) failed: %{public}@
Updated source (%{public}@) saved successfully.
No need to create source since the source [%{public}@] doesn't exist in database and the source wrapper has allowsEvents=NO
Creating non-local source
Saving after creating a source (%{public}@) failed: %{public}@
New source (%{public}@) saved successfully.
Received source wrapper that I'm not sure how to process: %{public}@
Error saving new/updated source (%{public}@): %{public}@
Update calendar: %{public}@
Error saving updated calendar (%{public}@): %{public}@
Create calendar: %{public}@
I'm refusing to create this calendar because I am a phone.
Sent calendarWrapper with no attributes, updating defaults.
%{public}s: Ignoring EventKit code path for reminder with identifier: [%{public}@]
%{public}s: Ignoring sidecar data for phantom master with identifier: [%{public}@]
Handling updated event from gizmo with summary %{public}@ and identifier %{public}@
Set self attendee status to 0x%08x for event with identifier %{public}@
Set invitation status to none for event with identifier %{public}@
Error saving database while setting event invitation status: %{public}@
No need to set attendee status, synced value is the same as existing value: 0x%08x for event with identifier %{public}@
Handling updated task from gizmo with summary "%{public}@" and identifier %{public}@
Task with identifier %{public}@ is completed, completion date is %{public}@
Saved event with identifier %{public}@, externalID is %{public}@
Failed to save event with identifier %{public}@. Error =  %{public}@
Participant status did not change. No need to save event with identifier %{public}@, externalID is %{public}@
Handling updated master event from gizmo with participationStatus %d, summary "%{public}@", and identifier %{public}@
Can't get row id for master with identifier %{public}@ to set attendee status for recurring series
Checking for calendar match for event %{public}@ with identifier %{public}@
Checking for match on calendar, we want %{public}@, calendarIdentifier is %{public}@
Handling master event from gizmo with participation status %d, summary %{public}@, and identifier %{public}@
Couldn't get master event for recurring event sequence with identifier %{public}@, but we'll check for detached events in case those are still around
Using existing detached event
Grabbing recurrence to use for detached event
Handling updated detached event from gizmo with participation status %d, summary %{public}@, and identifier %{public}@.
Failed to get/create event with identifier %{public}@ to set attendee status %d, skipping event
Failed to commit after saving recurring event series with master identifier %{public}@. Error =  %{public}@
Found event with identifer %{public}@ but in the wrong calendar.
%{public}s: No calendar item with identifier %{public}@ in calendar with identifier %{public}@
Received ICS wrapper: %{public}@
recv: %{public}@
recv LZFSE: <<!%@!>>
performUpdateWithICSWrappers: Calendar %{public}@ does not exist!
Processing update from the watch, main identifier is %{public}@
Cannot find object of type %d to update.
No calendar item found for main event in recurring series with identifier %{public}@ in calendar with identifier %{public}@
Processing add/update from companion, or a new record from the watch, id = %{public}@
Error deleting event for identifier remap: %{public}@
Item ID remapping complete: %{public}@ => %{public}@
Calendars don't match, so deleting from old calendar: old calendar id = %{public}@, current calendar id = %{public}@
Calendars match, so event didn't move: calendar id = %{public}@
Got an update/add for event "%{public}@", no old calendar id was sent, so this is from an old record map and falling back to old code to check and delete from any old calendar. The current calendar id = %{public}@
We have a recurring event %{public}@ and identifier %{public}@, checking to see if any detached events need attention
performUpdateWithICSWrappers: handling detached event %{public}@ identifier %{public}@
performUpdateWithICSWrappers received %d items
Critical error, received compressed and uncompressed data.
ICS Import: %fs #perf
We have a recurring event with summary "%{public}@" and identifier %{public}@, deleting all detached events too, since they have also moved calendars
Deleting detached event from old calendar since it has moved. Event summary "%{public}@", identifier %{public}@
No calendar for calendar identifier %{public}@
Skipping deletion for event with identifier %{public}@ in calendar with identifier %{public}@, we already detected and deleted it as part of a recurring master's detached events
Found no matches for potential deletion of calendar item %{public}@
Found multiple matches for potential deletion of calendar item %{public}@
Error deleting item: %{public}@
Changing event id from %{public}@ to %{public}@
setting externalID %{public}@ for event with identifier %{public}@
No externalID in metadata for event with identifier %{public}@
Changed date changed flag to %d for event %{public}@
Changed time changed flag to %d for event %{public}@
Changed title changed flag to %d for event %{public}@
Changed location changed flag to %d for event %{public}@
Changed attendee comment changed flag to %d for event %{public}@
Changed attendee status changed flag to %d for event %{public}@
Setting location prediction state to %d for event %{public}@
Error saving event in applySidePropertiesToEntity: %{public}@
Self attendee email is %{public}@, and uuid is %{public}@ for event with identifier %{public}@
Found self attendee for event with identifier %{public}@, email = %{public}@, address = %{public}@
No self attendee email in wrapper for event with identifier %{public}@
Determined user is organizer for event with identifier %{public}@, email = %{public}@, address = %{public}@
updateSelfAttendeeForCalendarItem saving, attendees: %d, span: %d
updateSelfAttendeeForCalendarItem save error: %{public}@
Deleteing suppression cache entry for %@
Suppressing alert due to cache hit on %@
Setting invitation status %{public}@ for event with identifier %{public}@
No invitation status in wrapper for event with identifier %{public}@
Surreptitiously adding event to changeset: %{public}@ due to attendee change
Can't create wrapper for source %@
Sending source wrapper accountPersistentID=%{public}@ isLocalStore=%d events=%d tasks=%d
Skipping hidden calendar: %{public}@
CalendarID remap detected: %{public}@ => %{public}@
Could not create calendar wrapper for entity: %{public}@
Default reminder and event calendar are the same.
Marking default task calendar in wrapper to calendar with name %{public}@, identifier %{public}@
Marking default event calendar in wrapper to calendar with name %{public}@, identifier %{public}@
publicObjectWithObjectID returned nil, objectID: %{public}@
Event %{public}@ returned a unique id of nil.
%{public}s: Ignoring EventKit code path for reminder
CalendarItem remap detected: %{public}@ => %{public}@
Decided not to send event %@
Decided not to send reminder %@
Decided not to send %{public}@
Deletion wrapper: %@
Could not create deletion wrapper for recordID: %{public}@
Deletion wrapper for source: %@
Attempt to create wrapper for unknown type: %{public}@
Error deleting source with identifier %{public}@
Deleted source with identifier %{public}@
Cannot delete source; no source exists for %{public}@
Error deleting calendar with identifier %{public}@, error: %{public}@
Deleted calendar with identifier %{public}@
Cannot delete; no calendar exists for %{public}@
Deleting event (span future) with identifier %{public}@, recordID %{public}@
Deleting event (span single) with identifier %{public}@, recordID %{public}@
Error deleting event %{public}@
Deleting event with identifier %{public}@, from calendar with identifier %{public}@
Deleting event with identifier %{public}@, from any calendar, old mapping didn't send calendar to delete from so falling back to old code
Deleting event %{public}@ failed as we were not handed an event by the store.
No event exists for %{public}@
Failure to delete reminder: %{public}@
No reminder exists for %{public}@
Updating calendar with title %{public}@, identifier %{public}@
%{public}s: Ignoring EventKit code path: mixed entity calendar is not supported
%{public}s: Ignoring EventKit code path: creating reminders calendar is not supported
Source not found with sourceID: %@
Created calendar with title %{public}@, identifier %{public}@
Asked to set a nonexistent calendar as the default. Ignoring. Calendar identifier = %{public}@, store identifier = %{public}@
wrapperForCalendarItem: Entity with identifier %{public}@ is detached, master identifier is %@
Entity with identifier %{public}@ is detached, but can't get master
Entity with identifier %{public}@ is master for a recurring series
Handling detached events for %{public}@, count=%d
LZFSE ICS: <<!%@!>>
self attendee status is 0x%08x for event with identifier %{public}@
Setting all properties on %@, identifier: %{public}@, attendees: %d
Setting minimal properties on %@, identifier: %{public}@, attendees: %d
Can't create canonical unique identifier for event %{public}@. Identifier returned by CalCalendarItemCopyUniqueIdentifier is %{public}@
NEKSyncCoordinator initialized %@
%{public}s:%d %s --mark--
Restriction is now %{public}s
Migrated prefs; version %zd -> %zd
Rebroadcast pref for key %{public}@
Synced prefs for keys %{public}@
Received weird session type: %d
Incoming message missing required body.
Local store ID %@, remote store ID %@
itemIdentifier: %@, event: <%p>
Failure to save event: %{public}@
_recvSetParticipantStatusEndpoint ignored
Cannot finder reminder '%{public}@:%{public}@'
Failure to save reminder: %{public}@
Reminder saved successfully.
_recvSetEventKitReminderCompletedEndpoint ignored
_recvSetReminderKitReminderCompletedEndpoint ignored
Failure to delete event %@: %{public}@
I have %d candidate events so I'm not sure what to delete.
_recvDeleteEventEndpoint ignored
Snooze Reminder: time:%.1f calendar: '%{public}@' reminder: '%{public}@' externalId: %@
No reminder alarm found
Snooze Event: time:%.1f calendar: '%{public}@' itemIdentifier: %@ event: <%p> local store ID: %@, remote store ID: %@
Event saved successfully.
No event alarm found
_recvSetEventKitAlarmSnoozeEndpoint ignored
_recvSetReminderKitAlarmSnoozeEndpoint ignored
Found reminder %{public}@:%{public}@
Cannot find reminder %{public}@:%{public}@
Sending analytics blob (%d bytes), IDS identifier %{public}@, result: %d
Failure to deserialize analytics data from watch
Failure to initialize SQL log: %@, userInfo: %@
== Started EventKitSync_Sim-394
Pairing ID: %{public}@
Pre prefs observer init
Post prefs observer init
_blockUntilUnlock returned
Beginning XPC transaction for com.apple.notifyd.matching notification named %{public}@
Launched from IDS
Triggering full sync for testing notification %{public}@
Thinking about a migration sync.
SignificantTimeChange incremental sync
SignificantTimeChange ignored
Calling pref observer for notification: %{public}@
Ending XPC transaction for com.apple.notifyd.matching notification named %{public}@
Analytics activity
Failed to set done state
%s: Registered for XPC activity.
Registered for notifications.
Received full sync command from NEKSyncCoordinator.
Prefs synced.
Starting sync controller.
Received reunion sync command.
Creating sync controller
Assigning sync controller
Starting sync controller
Cannot determine calendar identifier for reminder %{public}@. Deletion wrapper will be sent but the remote device may not be able to delete the reminder
Failed to fetch account with identifier %{public}@
Attempting to send source wrapper for CloudKit reminders account %{public}@ with allowsEvents=YES but the other side does not support CloudKit. This is not expected but is handled by sending a source wrapper with allowsEvents=YES and allowsTasks=NO.
Attempting to send source wrapper for CloudKit reminders account %{public}@ with allowsEvents=NO but the other side does not support CloudKit. Dropping this source wrapper and it will not be sent.
Sending %{public}@ reminder-only EKSource %{public}@ with REMAccount %{public}@
Performing a priori deletion of calendar %{public}@
Deletion of calendar %{public}@ didn't go so well: %{public}@
Error committing store after preemptive deletion of calendars: %{public}@
Successful save after deleting very suspicious calendars.
Starting configuration of source with persistent ID: [%{public}@].
Source's 'name' has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'defaultAlarmOffset' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'type' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'enabled' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's '%@' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'usesSelfAttendee' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'constraintsDescriptionPath' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'externalID' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'creatorBundleID' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'creatorCodeSigningIdentity' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'accountPersistentID' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'supportsSharedCalendars' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'allowsTasks' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Skipping deletion of task calendar as we are on the phone.
Source's 'allowsEvents' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Skipping deletion of event calendar as we are on the phone.
Source's 'allowsCalendarAddDeleteModify' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'onlyCreatorCanModify' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'snoozeAlarmRequiresDetach' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'supportsAlarmAcknowledgedDate' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Completed configuration of source with persistent ID: [%{public}@].
Sorry. Unable to determine identifier or resolve EKSource object for EKObjectID %{public}@
Source with ID %{public}@ does not exist. This is unexpected for update/insert. Skipping.
Source with ID %{public}@ (%@) updated. Going to send wrapper for this source.
EKSource %{public}@ (%@) is still available due to one of the event/reminder dataclass still enabled. Treating this as an update to send wrapper for dataclass updates.
Deleted source/account %{public}@ is not available anymore. Going to send delete wrapper for this source
Window: start: %{public}@ end: %{public}@, isFullSync: %d
Asked for incremental sync window when there was no/incomplete previous sync window data
Rejected event: %{public}@ %{public}@
Rejected reminder: %{public}@ %{public}@
Accepting unknown entity: %{public}@
event not in future: %{public}@ "%@"
reminder not in future: %{public}@
Migrating recordMap to version 1.
Migrating recordMap to version 2.
Migrating recordMap to version 3.
read id:%{public}@ %d/%d/%d
Attempt to save a nil identifier: %d/%d
set id:%{public}@ %d/%d/%d
Deleting everything from record map
eT:%d eR:%d eD:%d id:%{public}@ m:%d
Lying about progress: %0.2f%%
doneForRealNotifyingPairedSync: %d
Returning suggested db path: %@
Creating REMAccount with id:%{public}@ type:%@ name:%@
Error creating account. Source's persistent ID: [%{public}@]
UNSUPPORTED: Local source's 'name' has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'defaultAlarmOffset' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'type' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'enabled' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's '%@' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'usesSelfAttendee' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'externalID' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'externalModificationTag' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'creatorBundleID' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'creatorCodeSigningIdentity' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'accountPersistentID' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'supportsSharedCalendars' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'allowsTasks' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Updating local account .inactive to %{public}@.
Deleting account with identifier %{public}@.
UNSUPPORTED: Source's 'allowsEvents' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'allowsCalendarAddDeleteModify' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'onlyCreatorCanModify' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'snoozeAlarmRequiresDetach' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'supportsAlarmAcknowledgedDate' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Unknown account type %ld
Unexpected constraint plist path from ReminderKit account: %@
Flushing to CoreAnalytics
Daily tally: D: %d R: %d F: %d
Terminating enumeration early
Sqlite create failed, path: %s, error: (%d)
Sqlite statement prepare failed for "%{public}s"
NEKSqueeze failed to initialize
NEKSqueeze failed to compress
Compressed ICS %d->%d %.01f%%
NEKFluff failed to initialize
NEKFluff failed to uncompress
ReminderKit enabled.
ReminderKit disabled.
Remote system build version: %{public}@
New NEK.SYService queue: %p
Shutting down existing SYService: %p
Selecting file transfer engine
Selecting data messaging engine
Failed to resume SYService: %{public}@
Started new SYService: %p
Enqueueing a full sync
Enqueueing a delta reunion sync
Reunion sync with faults- Forcing full sync
Poking CS for nightly sync
Nightly sync requested but we have faults. Ignoring request.
Requested migration sync
Migration number is fine, no migration sync needed.
Migration check dropped.
Looks like I could use a reset but it turns out we're already standing right in the middle of one, so let's just move on.
Retrying a failed sync (%d) (reset)
Retrying a failed sync (%d) (delta)
Retrying a deferral.
_retrySync called but we have no faults. We're perfect!
%{public}@
Handling task list.
Handling calendar.
Calendar/list "%{public}@"/%{public}@ has entitySupportType %d
Recevied calendar wrapper without attributes and without default selection: "%{public}@"/%{public}@
Attempting to set a default calendar or list
Assuming mixed entity NEKICSWrapper comes from EventKit
object is not of recognized class: %{public}@
Got a deletion wrapper from SYStore: %{public}@
passed weird class: %{public}@
Decided to prefer reset session over delta.
Winning session: %{public}@, losing session: %{public}@
%{public}s %{public}@ #%{public}@ #%{public}@
Session start call not balanced. This is a fatal condition.
Locking session idle queue.
StartSession result: %d
No session created so declaring completion to PSYSync
Deferrability: %d
Delta sync fired but it really wants to be a reset sync.
Change set was empty, not starting a sync session.
Change set is deferrable, not starting session.
Retry is overdue and we need a reset. Forcing things along.
We were denied delta sync effort but there is no backup due date. Scheduling retry based on current faultCount/connectedState
Sync request ignored: isReset: %d isNightly: %d clearToDelta: %d
Session timeout: %.02f
perMessageTimeout: %d
Before timeout stats: x=%.02f sigma=%f
Comically long session timeouts enabled!
Comically short session timeouts enabled!
XPC activity deferral requested.
Remote engine requirement zapped.
This pipe better be dead: %{public}@
Session is nil during sessionEnded.
service.currentSession is nil, clearing user session.
Current session [%{public}@] != ending session [%{public}@]. Error: %{public}@ Dropping notificaiton on floor.
Resuming session idle queue
Fatal: sessionEnd call not balanced.
Send complete with error: %{public}@
SendingSession: %{public}@ error: %{public}@ cpuTime: %.02fms
There was a sync error%{public}@.
Failed session was a %{public}s so setting up retry to be a reset.
SYErrorCanceled (deferral/collision)
LostCollisionTest error, retry should already be scheduled.
Post failure update sync timings: x=%.02f sigma=%f
Looks like I didn't schedule  retry. That's bad.
Following nightly sync with request for delta
Post success update sync timings: elapsed=%.02f x=%.02f sigma=%f
Before join.
After join.
ReceivingSession: %{public}@ error: %{public}@ cpuTime: %.02fms
Session walltime breakdown (ms): %llu store, %llu calendar, %llu events, %llu reminders.
Recv complete with error: %{public}@
Remove all items
Poking CS for delta sync
Delta sync request suppressed
Change log truncation is making us request a reset
Reset sync request suppressed
For %{public}@ we are sending attendee stats (ek %d, wire %d)
For %{public}@ setting attendee status to (wire %d, ek %d)
fetchEverythingIntoPipe:PipeBefore: %{public}@
%{public}s: All things pushed successfully
fetchEverythingIntoPipe:PipeAfter: %{public}@
fetchNightlyIntoPipe:PipeBefore: %{public}@
%{public}s: All nightly things pushed successfully
fetchNightlyIntoPipe:PipeAfter: %{public}@
Finishing pipe (empty changesets): %p
Finishing pipe. Changeset is deferrable.
fetchChangesIntoPipe:PipeBefore: %{public}@
fetchChangesIntoPipe:PipeAfter: %{public}@
Default local list does not exist
Cannot find list for identifier %{public}@
Starting configuration of list with UUID: [%{public}@].
UNSUPPORTED: List's 'UUID' has changed from [%@] to [%@].  List's UUID: [%{public}@]
List's 'title' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isReadOnly' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isHidden' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isImmutable' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isInbox' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isNotificationsCollection' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isSharingInvitation' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isSubscribed' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isHolidayCalendar' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isFamilyCalendar' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isIgnoringEventAlerts' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isIgnoringSharedCalendarNotifications' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isSchedulingProhibited' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isDefaultCalendarForStore' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'digest' has changed from [%@] to [%@].  List's UUID: [%{public}@]
List's 'symbolicColorName/colorString' has changed from [%@/%@] to [%@/%@].  List's UUID: [%{public}@]
List's 'displayOrder' has changed from %ld to %d.  List's UUID: [%{public}@]
UNSUPPORTED: List's 'sharingStatus' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'sharedOwnerName' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'sharedOwnerAddress' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'sharingInvitationResponse' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'publishedURL' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'canBePublished' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'canBeShared' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isPublished' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'externalID' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'externalIdentificationTag' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'daSyncToken' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'externalModificationTag' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'externalRepresentation' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'invitationStatus' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'notes' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'subCalAccountID' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'pushKey' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'selfIdentityDisplayName' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'selfIdentityEmail' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'selfIdentityAddress' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'selfIdentityFirstName' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'selfIdentityLastName' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'ownerIdentityDisplayName' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'ownerIdentityEmail' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'ownerIdentityAddress' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'ownerIdentityFirstName' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'ownerIdentityLastName' has changed from [%@] to [%@].  List's UUID: [%{public}@]
Completed configuration of list with UUID: [%{public}@].
Change exceeded batch size. Will catch next batch.
Enqueued last change, pipe error: %{public}@
Enqueing validation message.
Not enqueuing validation message as the population shifted during sync.
Sending events
Applying changes
Sync disabled. Dropping changes on floor.
Deserialization failed.
Hit ICS batch import capacity.
Picking up final ICS batch import, %d items.
Calling sync session completion.
Sync disabled. Ignoring reset request.
Calendar "%@"/%{public}@ supports no entity types.
didCalendarChange: title:%{public}@ identifier:%{public}@
didCalendarChange: local->syncToken:%{public}@ externalModificationTag:%{public}@ externalIdentificationTag:%{public}@
didCalendarChange: incmg->syncToken:%{public}@ externalModificationTag:%{public}@ externalIdentificationTag:%{public}@
No changes for calendar with title %{public}@, identifier %{public}@
_calendarPropertyIsEqualToAttributeProperty: Calendar and attributes property %{public}@ are different: (calendar) %{public}@ != (attributes) %{public}@
dataWithSYChange: serializing object of class: %{public}@ S_PKT_NUM:%04x_%04x
Sending reminder with location
SYChangeWithData - unrecognized type: %{public}@
SYChangeWithData: returning object of type: %{public}@ R_PKT_NUM:%04x_%04x
Transport number gap detected. Might be a problem, might not.
Could not create wrapper object
Error saving save request %@: %{public}@
Purge deleted object is not supported on this platform. Ignoring.
Reminders database save time: %fs #perf
Can't create save request for nil store. Using a fresh REMStore to avoid crashing, but this won't be correct.
Save request created with needsPurgeDeletedObjectsAfterSave=YES. The next save will be slow.
Received reset sync. Resetting change tracking state map to %{public}@
Error fetching accounts: %{public}@
Skip deleting list in CloudKit account with ID %{public}@
Error fetching lists: %{public}@
Selecting reminder (id=%{public}@, calendarUniqueId=%{public}@)
Error fetching account with ID: [%{public}@]
Reminders: Create or update account: %{public}@
Reminders: Account (%{public}@) saved successfully.
Reminders: Saving after updating an account (%{public}@) failed
Reminders: No need to create account since the account [%{public}@] doesn't exist in database and the source wrapper has allowsTasks=NO
Received source wrapper without corresponding REMAccount: %{public}@
Error fetching list with ID: [%{public}@]
Update list: %{public}@
List (%{public}@) saved successfully.
Error saving updated list (%{public}@)
Create list: %{public}@
New list (%{public}@) saved successfully.
Error saving new list (%{public}@)
Unknown deletion wrapper: %{public}@
Handling updated reminder from gizmo with summary "%{public}@" and identifier %{public}@
Reminder with identifier %{public}@ is completed, completion date is %{public}@
Received ICS wrappers with the same identifier %{public}@ in the same batch. Deduplicating. 
Going to build list cache for IDs %{public}@
Built list cache for wrappers %{public}@
Received ICS wrappers with the same identifier %{public}@ in the same batch
Going to build reminder cache for IDs %{public}@
Failed to batch fetch reminders with calendar item unique ID %{public}@. error=%@
Built reminder cache for wrappers %{public}@
List %{public}@ does not exist. Skip processing this wrapper.
Processing add/update from companion, or a new record from the watch
Got an update/add for reminder, old list id = %{public}@, current list id = %{public}@
Lists don't match, so deleting from old list: old list id = %{public}@, current list id = %{public}@
Lists match, so reminder didn't move: old list id = %{public}@, current list id = %{public}@
Got an update/add for reminder "%{public}@", no old list id was sent, so this is from an old record map and falling back to old code to check and delete from any old list. The current list id = %{public}@
Reminder for identifier %{public}@ not found (%@)
No ReminderChangeItem was created. ICS importing failed?
Input to _ensureReminderInList is nil (%@, %@, %@). Skipping.
Unexpected wrapper type %lu for identitifer %{public}@
Found no matches for potential deletion of moved reminder %{public}@ with error %@
Failed to batch fetch account %{public}@ %@
Fetched account batch: %{public}@ %{public}@
Failed to batch fetch list %{public}@ %@
Fetched list batch: %{public}@ %{public}@
Failed to batch fetch reminder %{public}@ %@
Fetched reminder batch: %{public}@ %{public}@
Skipping storeWrapperForCloudKitAccount as changeSet is empty
Failed to create source wrapper for CloudKit account %{public}@
Sending source wrapper for CloudKit account %{public}@
Skipping listWrappersForChangeSet as changeSet is empty
Failed to fetch list %{public}@. Unable to create wrapper.
Marking default list in wrapper to list with name %{public}@, identifier %{public}@
Skipping remindersWrappersForChangeSet as changeSet is empty
Failed to fetch reminder %{public}@. Unable to create wrapper.
Deleting account with identifier %{public}@
Cannot delete; no account exists for identifier %{public}@
Cannot delete; account with identifier %{public}@ is a local account
Cannot delete; account with identifier %{public}@ is a local internal account (this is unexpected)
Cannot delete; no list exists for identifier %{public}@
Cannot delete; no reminder exists for identifier %{public}@
Updating list with title %{public}@, identifier %{public}@
Failed to fetch an account for reminders. This is very bad.
Created list with title %{public}@, identifier %{public}@
Asked to set a nonexistent list as the default. Ignoring. List identifier = %{public}@, account identifier = %{public}@
Error removing reminder: %{public}@
Default Calendar Changed
Ignoring delta sync request as sync coordinator says it is not time.
%{public}s
%{public}s: Ignoring EventKit code path for sync'ing local reminders-only source %{public}@
Sending mixed entity source %{public}@ from EventKit
shouldSyncSource: %d for %{public}@
Failed to create source wrapper for %{public}@
%{public}s: Ignoring EventKit code path for sync'ing calendar %{public}@
Sending mixed entity calendar %@ from EventKit
Pipe finished, exiting allEventsInto loop.
publicObjectWithObjectID returned nil. ObjectID: %{public}@
Reading events
allEventsInto:filter:window: pushed %d items.
%{public}s: Ignoring EventKit code path for sync'ing reminders
Pulled -1 from lastSequenceNumber.
%{public}s: Saw sequence number failure already. Still waiting for corrective sync to complete.
Previous sequence number: %d, current sequence number: %d, delta: %d
Change log numbers went backward, forcing full sync (phone only)
Fetch duration: %.2f
Aggregate changelog: %{public}@
Change log truncated
fetchChangesInto: Fetching default calendars
fetchChangesInto: Changed default task calendar
fetchChangesInto: Unchanged default task calendar
fetchChangesInto: Changed default event calendar
fetchChangesInto: Unchanged default events calendar
fetchChangesInto: Done fetching default calendars
Updates is NULL. This shouldn't happen.
EventKit: Change set is empty.
Registering for persistent change tracking: %ld
Setting anchor sequence number: %d
%{public}s: Ignoring EventKit code path for getting previous default task calendar
%{public}s: Ignoring EventKit code path for setting previous default task calendar
Error fetching reminder accounts for lists: %{public}@
Pulled nil from changeTrackingStateMap.
Timed out trying to fetch changes from database.
Synthesizing delete for REMAccount %{public}@
Previous sequence number: %@
Current sequence number: %@
Found marked as delete reminder %{public}@
Found marked as delete list %{public}@
Unhandled object with markedForDeletion update %{public}@
fetchChangesInto: Fetching default list
fetchChangesInto: Changed default list
fetchChangesInto: Unchanged default list
fetchChangesInto: Done fetching default list
ReminderKit: Change set is empty.
Reminder fetchChanges: Timeout out waiting for database to respond.
Loaded change tracking state map %@
Saved change tracking state map %@
No previous NEKReminderChangeTrackingStateMap found
Error deserializing NEKReminderChangeTrackingStateMap archive. (%@)
Decoded NEKReminderChangeTrackingStateMap. %@
Encoded NEKReminderChangeTrackingStateMap: %@ (encoded=%@)
Tracking more than one store is not supported. Behavior is undefined.
Error fetching accounts %@
Error fetching changes for account %{public}@ with state %{public}@, assuming changes are truncated: %@
Filtered change set summary for account %{public}@ since token %{public}@: before: i=%{public}@ u=%{public}@ d=%{public}@; after: i=%{public}@ u=%{public}@ d=%{public}@
Fetched auxiliary delete change info %@ for object ID %{public}@
Old list ID %{public}@ for deleted reminder %{public}@
Fetched auxiliary move change info %@ for object ID %{public}@
Old list ID %{public}@ for moved reminder %{public}@
Error fetching auxiliary change info %@
Forward to latest change token for account %{public}@ (lastChangeToken=%{public}@, latestChangeToken=%{public}@).
Resetting to current change token for account %{public}@ because change history is truncated (lastChangeToken=%{public}@, latestChangeToken=%{public}@).
%{public}s%{public}@, %{public}@, %{public}@, %{public}@
%{public}s%{public}@
%{public}s%{public}@, %{public}@
%{public}s%{public}@, %{public}@, %{public}@
--empty--
PURGE: Error saving database after purging unwanted elements.
PURGE: Failure deleting stale source %{public}@ "%{public}@", %{public}@
PURGE: Successfully deleted stale source %{public}@
PURGE: Failure to fetch stale source, rowid: %d
PURGE: Failure deleting stale calendar %{public}@ "%{public}@", %{public}@
PURGE: Successfully deleted stale calendar %{public}@
PURGE: Failure to fetch stale calendar, rowid: %d
PURGE: Failure deleting stale event %{public}@ "%{public}@", %{public}@
PURGE: Successfully deleted stale event %{public}@
PURGE: Failure to fetch stale event, rowid: %d
EKa: Live EKEventStore: %{public}@
EKa: Total stores: %d
SIGTERM, Bye bye.
SIGQUIT, Bye bye.
Manually triggered state dump
Checkin activity state for %s: %s
Running %s (late by: %.02f)
Received an odd state in checkin for %s: %d.
%s: completeAndFireIn: %d
%s: fireIn: %d
fireIn request for %s disregarded for previous scheduled timer (%0.2f to go)
%s: completeAndFireOnConnection
%s: completeAndFireNever
%s: Set activity state to %s
%s: Failed to set activity state to %s
%s: _activityComplete
@333333
!8Wv
*=Pccccgz
cccccc
 &27
!@I^dj{
%+1@
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.nano.nanoregistry</key>
<true/>
<key>com.apple.private.calendar.allow-birthday-modification</key>
<true/>
<key>com.apple.private.calendar.changeIdTrackingOverride</key>
<true/>
<key>com.apple.private.calendar.custom-database-path</key>
<true/>
<key>com.apple.private.calendar.syncclient</key>
<true/>
<key>com.apple.private.calendar.watchos-mutable-database</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.eventkitmutation</string>
<string>com.apple.private.alloy.eventkitsync</string>
<string>com.apple.private.alloy.internal.watch.calendar.analytics</string>
</array>
<key>com.apple.private.security.storage.Calendar</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceCalendar</string>
<string>kTCCServiceReminders</string>
</array>
</dict>
</plist>
