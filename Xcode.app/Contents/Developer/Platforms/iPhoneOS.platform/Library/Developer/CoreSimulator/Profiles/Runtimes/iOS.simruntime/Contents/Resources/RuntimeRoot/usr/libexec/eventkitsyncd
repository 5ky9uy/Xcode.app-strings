333333
ICSData
ICSDataForCalendarItems:options:
T@"NSDate",&,N,V_taskCutoffDate
ICSWrapperMetadata
T@"NSString",&,N,V_pathTemplate
ICSWrappersForChangeSet:pipe:
T@?,R,N
NEKSqueeze
TB,N,V_isHidden
T#,R
TB,R,N,V_isDefaultLocalCalendar
T@"<NDTSQFileDelegate>",W,N,V_delegate
Tq,N,V_accesses
T@"<NEKChangeObserverDelegate>",W,N
Tq,N,V_wallTime
T@"<NEKSyncControllerDelegate>",W,N,V_delegate
_attendeeStatus
T@"EKEventStore",R,N,V_ekEventStore
_changeObserver
T@"NDTActivity",&,N,V_activity
_changeTracking
T@"NDTSQFile",&,N,V_db
_createAccountForWrapper:store:
T@"NEKCalendarAttributes",R,N,V_attributes
T@"NEKDaemon",&,N,V_daemon
_delete
T@"NEKEnvironment",&,N,V_environment
_digest
T@"NEKEventChangeObserver",&,N,V_eventChangeObserver
_duplicateCheck
T@"NEKEventStore",W,N,V_weakEventDatabaseController
_failureScaling
T@"NEKPBCalendarIdentifier",&,N,V_calendarIdentifier
_hasBeenAlerted
T@"NEKPBDeleteEvent",&,N,V_deleteEvent
_insert
T@"NEKPBDuplicateCheck",&,N,V_duplicateCheck
_length
T@"NEKPBOccurrenceCache",&,N,V_occurrenceCache
_messageLogging
T@"NEKPBSetParticipantStatus",&,N,V_setParticipantStatus
_parsed
T@"NEKPBSourceAttributes",&,N,V_attributes
_readFd
T@"NEKPBSourceWrapper",&,N,V_storeWrapper
_setAlarmSnooze
T@"NEKProgressLiar",&,N,V_progressLiar
_setWindowToNow
T@"NEKRecordMap",R,N
_status
T@"NEKReminderStore",&,N,V_nekReminderStore
_syncController
T@"NEKResultsFetcher",&,N,V_fetcher
_syncId
T@"NEKSeenMap",R,N
_testingControl
T@"NEKSessionAnalyticsStore",&,N,V_store
_update
T@"NEKSourceID",R,N,V_storeIdentifier
account
T@"NEKStore",R,N,V_eventStore
allKeys
T@"NEKSyncController",&,N
allSourcesInto:
T@"NEKTinyStore",R,N
base64EncodedStringWithOptions:
T@"NSArray",&,N,V_calendars
changeObserverForEventWithQueue:databaseController:environment:
T@"NSArray",&,N,V_stores
changes
T@"NSArray",C,N,V_deletes
commit:
T@"NSArray",C,N,V_updates
containsObject:
T@"NSData",&,N
cpuTime
T@"NSData",&,N,V_digest
dataFromChange:
T@"NSData",&,N,V_iCSData
dealloc
T@"NSData",C,N,V_digest
deleteItemWithIdentifier:store:
T@"NSDate",&,N,V_end
deletes
T@"NSDate",&,N,V_estimatedFireDate
doneForRealNotifyingPairedSync:
T@"NSDate",&,N,V_start
eks_garbageUUID
T@"NSDictionary",&,N,V_deletionMap
T@"NSDictionary",&,N,V_moveMap
enumerateAllRemindersWithBlock:
T@"NSError",&,N,V_error
facilityWithSubsystem:category:
T@"NSMutableArray",&,N,V_calendars
fetchRemindersWithDACalendarItemUniqueIdentifiers:inList:error:
T@"NSMutableArray",&,N,V_items
finalizeDatabasesAfterResetSync
T@"NSMutableArray",&,N,V_metadataValues
handleDarwinNotificationOfName:
T@"NSMutableDictionary",&,N,V_cache
hasCalendarName
T@"NSMutableDictionary",&,N,V_properties
hasDisplayOrder
T@"NSNumber",&,N,V_defaultAlarmOffset
hasIsSubscribed
T@"NSObject<OS_dispatch_source>",&,N,V_deferPollingSource
hasName
T@"NSObject<OS_os_transaction>",&,N,V_waitingForCheckin
hasPersistentID
T@"NSSet",R,N,V_deletedSourcesIDs
hasSpan
T@"NSSet",R,V_deletedAccountIDsFromLoadedMap
hasType
T@"NSString",&,N,V_alarmIdentifier
hasUuid
T@"NSString",&,N,V_calendarIdentifier
icsDisplayOrder
T@"NSString",&,N,V_colorString
initWithIDSServiceName:logging:
T@"NSString",&,N,V_creatorBundleID
inserts
T@"NSString",&,N,V_dbFilename
isEmpty
T@"NSString",&,N,V_eventTitle
isInbox
T@"NSString",&,N,V_externalId
isTaskCompleted
T@"NSString",&,N,V_externalIdentifier
locationChanged
T@"NSString",&,N,V_identifier
markAsTruncated
T@"NSString",&,N,V_msgType
member:
T@"NSString",&,N,V_notes
msgType
T@"NSString",&,N,V_oldCalendarIdentifier
numberWithBool:
T@"NSString",&,N,V_ownerIdentityAddressString
occurrenceCache
T@"NSString",&,N,V_ownerIdentityEmail
os_log_facility
T@"NSString",&,N,V_ownerIdentityLastName
pushKey
T@"NSString",&,N,V_publishedURLString
reminderCacheForStore:wrappers:
T@"NSString",&,N,V_reminderTitle
removeObserver:
T@"NSString",&,N,V_selfAttendeeEmail
resetBindCursor
T@"NSString",&,N,V_selfIdentityAddressString
saveEventStore:
T@"NSString",&,N,V_selfIdentityEmail
seenMap
T@"NSString",&,N,V_selfIdentityLastName
selfOrganizerUUIDForIdentifier:
T@"NSString",&,N,V_selfOrganizerUUID
service
T@"NSString",&,N,V_sharedOwnerName
session
T@"NSString",&,N,V_subCalAccountID
setAllowsTasks:
T@"NSString",&,N,V_symbolicColorName
setCanBeShared:
T@"NSString",&,N,V_syncId
setColorString:
T@"NSString",&,N,V_syncToken
setData:forKey:
T@"NSString",&,N,V_type
setDeleteEvent:
T@"NSString",&,N,V_uuid
setDirtyMemory:
T@"NSString",C,N,V_accountPersistentID
setEnvironment:
T@"NSString",C,N,V_constraintsDescriptionPath
setHasIsHidden:
T@"NSString",C,N,V_creatorCodeSigningIdentity
setIsImmutable:
T@"NSString",C,N,V_externalIdentificationTag
setIsPublished:
T@"NSString",C,N,V_identifier
setMasterCount:
T@"NSString",C,N,V_notes
setTimeChanged:
T@"NSString",C,N,V_ownerIdentityEmail
setWithObjects:
T@"NSString",C,N,V_ownerIdentityLastName
sources
T@"NSString",C,N,V_selfIdentityDisplayName
spanEnd
T@"NSString",C,N,V_selfIdentityFirstName
stringByAppendingPathComponent:
T@"NSString",C,N,V_sharedOwnerAddress
subCalAccountID
T@"NSString",C,N,V_subCalAccountID
summary
T@"NSString",C,N,V_syncId
syncCoordinatorWithServiceName:
T@"NSString",C,N,V_title
syncRestriction
T@"NSString",R,N
syncSessionType
T@"NSString",R,N,V_name
tc_requestReset
T@"NSString",R,N,V_title
updateReminder:
T@"NSTimeZone",&,N,V_timeZone
wrapperForList:
T@"NSURL",C,N,V_publishedURL
.cxx_destruct
T@"NSCondition",&,N,V_condition
ICSDataWithOptions:
T@"NSString",&,N,V_calendarName
ICSWrappersForChangeSet:movedReminderAndListMapping:pipe:
T@"NSString",&,N,V_persistentID
NEKFluff
TB,N,V_finished
SYObjectWithData:
TB,N,V_readOnly
T@"<NDTActivityDelegate>",W,N,V_delegate
Td,N,V_variance
T@"<NEKChangeObserver>",&,N,V_changeObserver
Tq,N,V_capacity
T@"<NEKChangeObserverDelegate>",W,N,V_delegate
T@"EKEventStore",&,N,V_store
_canBePublished
T@"IDSService",&,N,V_service
_changeSupplier
T@"NDTPerf",&,N,V_perfomanceTracker
_computeDerived
T@"NDTSQFile",&,N,V_storeFile
_daemon
T@"NEKCalendarID",&,N,V_calendarIdentifier
_dbConn
T@"NEKDatabaseFileManager",R,N
_deletedAccountIDsFromLoadedMap
T@"NEKEnvironment",W,N,V_environment
_domainAccessor
T@"NEKEventStore",&,N,V_nekEventStore
_events
T@"NEKPBCalendarAttributes",&,N,V_attributes
_getWindowStart
T@"NEKPBCalendarWrapper",&,N,V_calendarWrapper
_idleBlockQueue
T@"NEKPBDeletionWrapper",&,N,V_deletionWrapper
_itemIdentifier
T@"NEKPBICSWrapper",&,N,V_iCSWrapper
_loadPlistFrom:
T@"NEKPBSetAlarmSnooze",&,N,V_setAlarmSnooze
_metadataValues
T@"NEKPBSetReminderComplete",&,N,V_setReminderComplete
_query:
T@"NEKPBSourceID",&,N,V_sourceIdentifier
_select
T@"NEKPBValidationWrapper",&,N,V_validationWrapper
_setFaultCount:
T@"NEKRecordMap",&,N,V_recordMap
_statementCache
T@"NEKReminderChangeObserver",&,N,V_reminderChangeObserver
_stores
T@"NEKReminderStore",W,N,V_weakReminderDatabaseController
_syncID
T@"NEKResultsPipe",&,N,V_changeSupplier
_taskCutoffDate
T@"NEKSessionAnalytics",&,N,V_analytics
_treeReportFor:
T@"NEKSourceAttributes",R,N,V_attributes
_weakReminderDatabaseController
T@"NEKStatTracker",&,N,V_statsTracker
alarmIdentifier
T@"NEKStore",R,N,V_reminderStore
allRemindersInto:filter:window:
T@"NEKSyncCoordinator",R,N
attendeeComment
T@"NEKValidationWrapper",&,N,V_validationObject
calendarWrapper
T@"NSArray",&,N,V_events
changedObjectID
T@"NSArray",&,N,V_tasks
clearRetryState
T@"NSArray",C,N,V_inserts
conditionalPop:
T@"NSCondition",&,N,V_activityCondition
copyTo:
T@"NSData",&,N,V_data
creatorBundleID
T@"NSData",&,N,V_externalRepresentation
T@"NSData",&,N,V_lzfseICSData
defaultTimeZone
T@"NSData",C,N,V_externalRepresentation
deleteReminder:
T@"NSDate",&,N,V_endDate
deletionWrapper
T@"NSDate",&,N,V_lastFired
ekColor
T@"NSDate",&,N,V_startDate
eks_sourcesAlwaysIncludingLocal
T@"NSDictionary",&,N,V_idsOptions
endDate
T@"NSDictionary",&,N,V_startDateMap
eventIdentifier
T@"NSMapTable",&,N,V_saveRequests
fetchAccountWithObjectID:error:
T@"NSMutableArray",&,N,V_fifo
fetcher
T@"NSMutableArray",&,N,V_metadataKeys
getBytes:range:
T@"NSMutableArray",&,N,V_sources
hasAllowsEvents
T@"NSMutableDictionary",&,N,V_dict
hasDate
T@"NSMutableOrderedSet",&,N,V_cache
hasIsLocalStore
T@"NSObject<OS_dispatch_semaphore>",&,N,V_terminateSemaphore
hasLzfseICSData
T@"NSObject<OS_os_log>",&,N,V_log
hasPacketNumber
T@"NSObject<OS_xpc_object>",&,N,V_activity
hasSnoozeAmount
T@"NSSet",R,N,V_insertedOrUpdatedSources
hasStoreWrapper
T@"NSString",&,N,V_accountPersistentID
hasUUID
T@"NSString",&,N,V_calendar
iCSData
T@"NSString",&,N,V_calendarTitle
initWithDomain:
T@"NSString",&,N,V_constraintsDescriptionPath
initWithSource:
T@"NSString",&,N,V_creatorCodeSigningIdentity
isBirthdayStore
T@"NSString",&,N,V_eventIdentifier
isGroup
T@"NSString",&,N,V_externalID
isProxy
T@"NSString",&,N,V_externalIdentificationTag
lastChangeToken
T@"NSString",&,N,V_externalModificationTag
T@"NSString",&,N,V_itemIdentifier
maxDeltaRetries
T@"NSString",&,N,V_name
moveMap
T@"NSString",&,N,V_nuevoIdentifier
nuevoIdentifier
T@"NSString",&,N,V_oldIdentifier
numberWithLong:
T@"NSString",&,N,V_ownerIdentityDisplayName
occurrenceCount
T@"NSString",&,N,V_ownerIdentityFirstName
T@"NSString",&,N,V_path
release
T@"NSString",&,N,V_pushKey
removeFromStore
T@"NSString",&,N,V_responseIdentifier
reportProgress:
T@"NSString",&,N,V_selfAttendeeUUID
resume:
T@"NSString",&,N,V_selfIdentityDisplayName
sealCompletions
T@"NSString",&,N,V_selfIdentityFirstName
selfAttendeeEmailForIdentifier:
T@"NSString",&,N,V_selfOrganizerEmail
sendDeleteEventId:title:start:inCalendarId:title:inSource:span:
T@"NSString",&,N,V_sharedOwnerAddress
serviceSpaceDidBecomeAvailable:
T@"NSString",&,N,V_storeIdentifier
T@"NSString",&,N,V_summary
setBool:forKey:
T@"NSString",&,N,V_syncID
setCanRollback:
T@"NSString",&,N,V_syncKind
setCurrentUser:
T@"NSString",&,N,V_title
setDateChanged:
T@"NSString",&,N,V_uUID
setDeletionMap:
T@"NSString",C,N,V_UUID
setEnd:
T@"NSString",C,N,V_colorString
setFailTimeout:
T@"NSString",C,N,V_creatorBundleID
setIsDefaultSchedulingCalendar:
T@"NSString",C,N,V_externalID
setIsPerformingBackupResetSync:
T@"NSString",C,N,V_externalModificationTag
setLog:
T@"NSString",C,N,V_name
setPreviousDefaultTaskCalendar:
T@"NSString",C,N,V_ownerIdentityDisplayName
setWeakEventDatabaseController:
T@"NSString",C,N,V_ownerIdentityFirstName
sharedOwnerName
T@"NSString",C,N,V_pushKey
sourcesAtIndex:
T@"NSString",C,N,V_selfIdentityEmail
storeIdentifier
T@"NSString",C,N,V_selfIdentityLastName
stringFromDate:
T@"NSString",C,N,V_sharedOwnerName
subcalAccountID
T@"NSString",C,N,V_symbolicColorName
syncCoordinator
T@"NSString",C,N,V_syncToken
syncDidComplete
T@"NSString",R,C
syncSession:successfullySynced:
T@"NSString",R,N,V_identifier
tc_requestDelta
T@"NSString",R,N,V_text
trigger
T@"NSThread",&,N,V_backgroundThread
updates
T@"NSURL",C,N,V_ownerIdentityAddress
writeStackshot:
T@"NSURL",C,N,V_selfIdentityAddress
T@"NSXPCListener",&,N,V_listener
T@"PSYServiceSyncSession",&,N,V_session
T@"PSYSyncCoordinator",&,N,V_syncCoordinator
T@"REMChangeToken",&,N,V_lastChangeToken
T@"REMChangeTracking",&,N,V_changeTracking
T@?,C,N,V_completion
TB,N
TB,N,GisTaskCompleted,V_taskCompleted
TB,N,V_allowsCalendarAddDeleteModify
TB,N,V_allowsEvents
TB,N,V_allowsTasks
TB,N,V_attendeeComment
TB,N,V_attendeeStatusFlag
TB,N,V_canBePublished
TB,N,V_canBeShared
TB,N,V_criteriaOnConnection
TB,N,V_dateChanged
TB,N,V_firstTimeEver
TB,N,V_hasBeenAlerted
TB,N,V_hasProperInvitationStatus
TB,N,V_invitationChangedPropertyFlagAttendeeComment
TB,N,V_invitationChangedPropertyFlagAttendeeStatus
TB,N,V_invitationChangedPropertyFlagDate
TB,N,V_invitationChangedPropertyFlagLocation
TB,N,V_invitationChangedPropertyFlagTime
TB,N,V_invitationChangedPropertyFlagTitle
TB,N,V_isBirthdayStore
TB,N,V_isComplete
TB,N,V_isDefaultCalendarForStore
TB,N,V_isDefaultEventCalendar
TB,N,V_isDefaultLocalCalendar
TB,N,V_isDefaultTaskCalendar
TB,N,V_isEnabled
TB,N,V_isFacebook
TB,N,V_isFamilyCalendar
TB,N,V_isHolidayCalendar
TB,N,V_isHolidyCalendar
TB,N,V_isIgnoringEventAlerts
TB,N,V_isIgnoringSharedCalendarNotifications
TB,N,V_isImmutable
TB,N,V_isInbox
TB,N,V_isLocalStore
TB,N,V_isNotificationsCollection
TB,N,V_isPerformingBackupResetSync
TB,N,V_isPublished
TB,N,V_isReadonly
TB,N,V_isReminderWithLocation
TB,N,V_isSchedulingProhibited
TB,N,V_isSharingInvitation
TB,N,V_isSubscribed
TB,N,V_locationChanged
TB,N,V_onlyCreatorCanModify
TB,N,V_saveRequestsNeedPurgeDeletedObjectsAfterSave
TB,N,V_showAlert
TB,N,V_snoozeAlarmRequiresDetach
TB,N,V_supportsAlarmAcknowledgedDate
TB,N,V_supportsSharedCalendars
TB,N,V_terminated
TB,N,V_timeChanged
TB,N,V_titleChanged
TB,N,V_truncated
TB,N,V_usesSelfAttendee
TB,R
TB,R,N
TB,R,N,V_isCurrentlySyncing
TB,R,N,V_isDeferrable
TI,N,V_calendarItemCount
TI,N,V_defaultAlarmOffset
TI,N,V_packetNumber
TI,N,V_span
TI,N,V_status
TI,N,V_type
TQ,N,V_attendeeStatus
TQ,N,V_calendarUpdateTimeNs
TQ,N,V_displayOrder
TQ,N,V_entityType
TQ,N,V_eventUpdateTimeNs
TQ,N,V_invitationStatus
TQ,N,V_locationPredictionState
TQ,N,V_masterCount
TQ,N,V_occurrenceCount
TQ,N,V_properInvitationStatus
TQ,N,V_reminderUpdateTimeNs
TQ,N,V_sharingInvitationResponse
TQ,N,V_sharingStatus
TQ,N,V_storeUpdateTimeNs
TQ,N,V_supportedEntityTypes
TQ,R
T^{sqlite3=},N,V_db
T^{sqlite3=},N,V_rawDb
T^{sqlite3_stmt=},N,V_parsed
Td,N
Td,N,V_alpha
Td,N,V_date
Td,N,V_end
Td,N,V_endDate
Td,N,V_eventStart
Td,N,V_failTimeout
Td,N,V_failureScaling
Td,N,V_maxTimeout
Td,N,V_mean
Td,N,V_minTimeout
Td,N,V_sigmaSpan
Td,N,V_snoozeAmount
Td,N,V_spanEnd
Td,N,V_spanStart
Td,N,V_start
Td,N,V_startDate
Td,N,V_taskCompletionDate
Td,N,V_taskCutoff
Ti,N,V_displayOrder
Ti,N,V_supportedEntityTypes
Tq,N,V_attendeeStatus
Tq,N,V_calendarItemCount
Tq,N,V_changeNumber
Tq,N,V_cpuTime
Tq,N,V_criteriaDelay
Tq,N,V_dirtyMemory
Tq,N,V_displayOrder
Tq,N,V_hits
Tq,N,V_length
Tq,N,V_locationPredictionState
Tq,N,V_masterCount
Tq,N,V_objectDelayUs
Tq,N,V_occurrenceCount
Tq,N,V_type
Tq,R,N
Tr*,N,V_activityIdentifier
URLWithString:
UTF8String
UUID
UUIDString
_ICSLogTestForWrapper:
_UUID
_accesses
_accountPersistentID
_activity
_activityComplete
_activityCondition
_activityIdentifier
_addAccountWithType:name:accountObjectID:
_addSchema:
_alarmIdentifier
_alertSupressionCache
_allowsCalendarAddDeleteModify
_allowsEvents
_allowsTasks
_alpha
_analytics
_analyticsDriver
_attendeeComment
_attendeeStatusFlag
_attributes
_backgroundThread
_baseName
_beginTrackingForStore:clientName:verifyAccountsBlock:changeTrackingStateFromAccountBlock:
_beginTrackingFromLoadedStateForStore:clientName:
_blockUntilUnlock
_bootstrap
_broadcastBool:forKey:
_bump
_cache
_calendar
_calendarIdentifier
_calendarItem:snoozeAlarmID:withTimeIntervalFromNow:
_calendarItemCount
_calendarName
_calendarTitle
_calendarUpdateTimeNs
_calendarWrapper
_calendars
_calledDidComplete
_canBeShared
_canUseDataTransfer
_capacity
_cause
_changeNumber
_changeQueue
_changeTrackingStateMap
_changed:
_checkAndSetDefaultCalendar:calendarWrapper:store:
_checkAndSetDefaultList:calendarWrapper:store:
_checkIn
_clearToDeltaSync
_clientName
_clip:
_cloudFallback
_colorString
_commitPendingRecordMapChanges
_completion
_completions
_condition
_constraintsDescriptionPath
_controllerCondition
_convertIfNeeded:
_countEvents
_counter
_cpuTime
_createCalendarForWrapper:store:
_createDb
_createListForWrapper:store:
_createParentDirectory
_createSourceForWrapper:store:
_createdEntities
_createdEntitiesLock
_creatorBundleID
_creatorCodeSigningIdentity
_criteriaDelay
_criteriaOnConnection
_ct_logger
_currentCriteria
_currentHour
_daemonQueue
_data
_databaseChangedExternally
_date
_dateChanged
_dbFileManager
_dbFilename
_dbQueue
_defaultAlarmOffset
_defaultCalendarChanged:
_deferPollingSource
_delegate
_deletableAccountsForStore:
_deletableListsForStore:
_deletableSources
_deleteAccountWithIdentifier:store:
_deleteAndLogEvent:identifier:store:
_deleteCalendarById:
_deleteCalendarItemsInICSWrapperFromOldCalendar:store:
_deleteCalendarItemsMovedToCalendar:inICSWrapper:
_deleteCalendarWithIdentifier:store:
_deleteDetachedCalendarItemsFromOldCalendar:deletedEvents:
_deleteEvent
_deleteEventById:
_deleteEventWithIdentifier:calendarIdentifier:store:
_deleteListWithIdentifier:store:
_deleteReminderWithIdentifier:calendarIdentifier:store:
_deleteReminderWithIdentifier:store:
_deleteSYObject:eventStore:reminderStore:
_deleteSourceWithIdentifier:store:
_deleteStoreById:
_deleteWronglyImmutableCalendars
_deletedSourcesIDs
_deletes
_deletionMap
_deletionWrapper
_deltaTimeoutTracker
_dict
_didCreateEntity:
_dirtyMemory
_disableMutation
_displayOrder
_doneForRealNotifyingPairedSync:
_dontSyncDays
_driftMetricFor:
_duplicatesTreeFrom:
_ekEventStore
_ekPrefs
_enableDisableLogging
_end
_endDate
_endTime
_ensureReminderInList:saveRequest:inICSWrapper:
_entityType
_enumerateForChangeType:forEntitiesOfClass:withBlock:
_environment
_error
_estimatedFireDate
_eventCalendarKey
_eventChangeObserver
_eventIdentifier
_eventInWindow:inStore:
_eventStart
_eventStore
_eventTitle
_eventUpdateTimeNs
_exchange
_executeSql:
_externalID
_externalId
_externalIdentificationTag
_externalIdentifier
_externalModificationTag
_externalRepresentation
_failTimeout
_faultCount
_fetch
_fetchChangesInto:from:inside:
_fetchChangesInto:from:inside:outDeletedReminderAndListMapping:outMovedReminderAndListMapping:
_fetcher
_fifo
_file
_filterOutInvalidICSWrappers:store:calendars:
_finished
_firstTimeEver
_flushQueue
_fullSessionTimeout
_fwdDaysToSync
_getTestWindowEnd
_getTestWindowStart
_getWindowEnd
_handlers
_has
_hasProperInvitationStatus
_hits
_iCSData
_iCSWrapper
_identifier
_identifierInRowMapping:
_idsOptions
_insertedOrUpdatedSources
_inserts
_instanceVersion:
_instanceVersions
_invitationChangedPropertyFlagAttendeeComment
_invitationChangedPropertyFlagAttendeeStatus
_invitationChangedPropertyFlagDate
_invitationChangedPropertyFlagLocation
_invitationChangedPropertyFlagTime
_invitationChangedPropertyFlagTitle
_invitationStatus
_isBirthdayStore
_isComplete
_isCurrentlySyncing
_isDefaultCalendarForStore
_isDefaultEventCalendar
_isDefaultLocalCalendar
_isDefaultTaskCalendar
_isDeferrable
_isEffectivelyEmpty
_isEnabled
_isFacebook
_isFamilyCalendar
_isFirst
_isHidden
_isHolidayCalendar
_isHolidyCalendar
_isIgnoringEventAlerts
_isIgnoringSharedCalendarNotifications
_isImmutable
_isInbox
_isLocalStore
_isNightlySync
_isNotificationsCollection
_isPaused
_isPerformingBackupResetSync
_isPublished
_isReadonly
_isReminderWithLocation
_isSchedulingProhibited
_isSharingInvitation
_isSubscribed
_isTruncated
_items
_keyQueue
_keysToDirectMirrorCompanionToGizmo
_lastChangeToken
_lastFired
_lastSequenceNumber
_lastStore
_listener
_loadCache:sqlErr:
_loadLastSyncWindow
_loadedChangeTokenMap
_locationChanged
_locationPredictionState
_lock
_log
_logDbFile
_logFacility
_lzfseICSData
_makeMessageFromWireData:
_makeSqlErrorReasonString:
_makeWireMessageType:content:
_masterCount
_masterEventsToSync
_maxTimeout
_mean
_memberSchemas
_memberSchemasLock
_messaging
_metadataKeys
_migrateDoubleFrom:key:
_migrateIntegerFrom:key:
_migrateStringFrom:key:
_minTimeout
_moveMap
_msgType
_name
_nekEventStore
_nekReminderStore
_newPath
_nextDelay:
_nightlyTimeoutTracker
_notes
_notificationQueue
_npsManager
_nuevoIdentifier
_objectDelayUs
_occurrenceCache
_occurrenceCount
_oldCalendarIdentifier
_oldIdentifier
_onlyCreatorCanModify
_openDatabase
_os_lock
_outstanding
_ownerIdentityAddress
_ownerIdentityAddressString
_ownerIdentityDisplayName
_ownerIdentityEmail
_ownerIdentityFirstName
_ownerIdentityLastName
_packetNumber
_parseSql:andRun:
_path
_pathTemplate
_perfomanceTracker
_persistentID
_pipeQueue
_preSyncCensus
_preemptedSessionProgressLiar
_prefObserverLog
_preferencesObserver
_preferencesQueue
_prepDatabase
_prepareStatements
_previousFraction
_priority
_processArrayOfArrayOfICSWrappers:batchWrappers:session:
_processUpdateFromWatch:calendar:store:
_processUpdateWithICS:store:calendar:resultWrappers:resultCalendars:
_progressLiar
_properInvitationStatus
_properties
_publishedURL
_publishedURLString
_pushKey
_queue
_rICSData
_rawDb
_rawSendData:type:responseIdentifier:error:
_rawSendFile:type:responseIdentifier:error:
_readOnly
_readSource
_recordMap
_recreatePath
_recvDeleteEventEndpoint:
_recvSessionEnded:error:
_recvSetEventKitAlarmSnoozeEndpoint:
_recvSetEventKitReminderCompletedEndpoint:
_recvSetParticipantStatusEndpoint:
_recvSetReminderKitAlarmSnoozeEndpoint:
_recvSetReminderKitReminderCompletedEndpoint:
_registerForNotifications
_reminderChangeObserver
_reminderListKey
_reminderStore
_reminderTitle
_reminderUpdateTimeNs
_removeIdentifierForDeletedEntity:
_resetTimeoutTracker
_responseIdentifier
_retrySession:
_retrySync
_revDaysToSync
_rpcEndpoint
_runDuplicateChecker
_runOccurrenceCacheDumper
_saveEventStore:
_saveRequests
_saveRequestsNeedPurgeDeletedObjectsAfterSave
_sawSeqnoFailure
_schemaVersion
_seenMap
_selfAttendeeEmail
_selfAttendeeUUID
_selfIdentityAddress
_selfIdentityAddressString
_selfIdentityDisplayName
_selfIdentityEmail
_selfIdentityFirstName
_selfIdentityLastName
_selfOrganizerEmail
_selfOrganizerUUID
_sendChangesIfAvailable
_sendMessage:
_sendSessionEnded:error:
_sequenceKey
_service
_session
_sessionDepth
_sessionIdleQueue
_setActivity:
_setClipping:
_setInstance:version:
_setParticipantStatus
_setQueue:
_setReminderComplete
_setSchemaVersion:
_setState:
_shadowLock
_sharedOwnerAddress
_sharedOwnerName
_sharingInvitationResponse
_sharingStatus
_shouldFakeFailure
_shouldSendEvent:
_shouldSendReminder:
_showAlert
_sigmaSpan
_snoozeAlarmRequiresDetach
_snoozeAmount
_sourceIdentifier
_sources
_span
_spanEnd
_spanNowTime
_spanStart
_start
_startDate
_startDateMap
_startDeferralPolling
_startRecvSession:results:
_startSendSession:results:
_statsTracker
_stopDeferralPolling
_store
_storeFile
_storeIdentifier
_storeUpdateTimeNs
_storeWrapper
_subCalAccountID
_summary
_supportedEntityTypes
_supportsAlarmAcknowledgedDate
_supportsSharedCalendars
_suspended
_sweep
_syServiceLock
_symbolicColorName
_syncCoordinator
_syncKind
_syncRestrictionShadow
_syncService
_syncSession
_syncToken
_syncedEntityUniqueIdentifiers
_taskCalendarKey
_taskCompleted
_taskCompletionDate
_taskCutoff
_tasks
_terminateSemaphore
_terminated
_text
_timeChanged
_timeToLie
_timeZone
_tinyStore
_title
_titleChanged
_triggerFullSync
_triggerMigrationSync
_triggerNightlySync
_truncated
_type
_uUID
_updateAccount:withSourceWrapper:store:
_updateCalendar:withCalendarWrapper:
_updateList:withCalendarWrapper:
_updateSource:withSourceWrapper:store:
_updates
_usesSelfAttendee
_uuid
_validationObject
_validationWrapper
_variance
_waitingForCheckin
_wallTime
_wasUsingDataTransfer
_watchWalFile
_weakEventDatabaseController
_writeTally:
_zICSData
absoluteString
accesses
accountForStore:identifier:
accountID
accountPersistentID
activity
activity:customizeCriteria:
activityCondition
activityDefer:
activityIdentifier
activityIdentifier:
activityRun:
activitySubsystem:
addAttendeeEvents:
addCalendars:
addCompletion:
addDelegate:queue:
addItems:
addListWithName:toAccountChangeItem:listObjectID:
addMetadataKeys:
addMetadataValues:
addObject:
addObjectsFromArray:
addObserver:selector:name:object:
addReminderChangeItem:
addSchema:
addSources:
alarms
alertInviteeDeclines
allCalendars
allCalendarsInto:
allCloudKitAccountsInto:
allEventsInto:filter:window:
allListsInto:
allObjects
allValues
allocWithZone:
allowEvents
allowReminders
allowedEntityTypes
allowsCalendarAddDeleteModify
allowsEvents
allowsScheduling
allowsTasks
alpha
analytics
appendBytes:length:
appendData:
appendFormat:
appendString:
applyRebroadcastAlertInviteeDeclines
applyRebroadcastShowDeclinedEvents
applySidePropertiesToEntity:withWrapper:session:
applySidePropertiesToReminderChangeItem:withWrapper:session:
archivedDataWithRootObject:requiringSecureCoding:error:
array
arrayByAddingObject:
arrayWithCapacity:
arrayWithObjects:count:
attendeeCommentForIdentifier:
attendeeStatus
attendeeStatusFlag
attendeeStatusFlagForIdentifier:
attendeeStatusForIdentifier:
attendees
attributes
autorelease
auxiliaryChangeInfos
backgroundThread
batchedEnumerateAccountsForStore:changeSet:changeType:withBlock:
batchedEnumerateForChangeSet:changeType:forEntitiesOfClass:withFetchBlock:withBlock:
batchedEnumerateListsForStore:changeSet:changeType:withBlock:
batchedEnumerateRemindersForStore:changeSet:changeType:withBlock:
begin
beginObservingChanges
beginTrackingFromEpochForStore:clientName:
beginTrackingFromNowForStore:clientName:
bindBlob:
bindCount
bindDouble:
bindInteger:
bindPosition
bindString:
bindUint64:
blindChangeNumberAdvance:
boolForKey:keyExistsAndHasValidFormat:
boolValue
broadcast
bumpFaultsAndScheduleRetry
bytes
cache
cache:willEvictObject:
cachedCopy:
calendar
calendarForEntityType:eventStore:
calendarForEntityTypes:eventStore:
calendarIdentifier
calendarIdentifierInRowMappingForEventOrTask:
calendarIdentifierInRowMappingForRecordIDRef:
calendarInStore:withNEKCalendarID:
calendarItemCount
calendarItemExternalIdentifier
calendarItemsWithExternalIdentifier:
calendarItemsWithExternalIdentifier:inCalendars:
calendarItemsWithUniqueIdentifier:inCalendar:
calendarName
calendarTitle
calendarUpdateTimeNs
calendarWithIdentifier:
calendarWrappersForChangeSet:pipe:
calendars
calendarsAtIndex:
calendarsCount
calendarsForEntityType:
calendarsType
canBePublished
canBeShared
canUseDataTransfer
canUseLzfse
cancel
capacity
cdEntityName
changeFromData:ofType:
changeNumber
changeObserver
changeObserverDidObserveChanges:
changeObserverDidObserveTruncation:
changeObserverForReminderWithQueue:databaseController:environment:
changeSetForEvent
changeSetForReminder
changeStateMap
changeSupplier
changeTracking
changeType
changedObjectIDsSinceToken:resultHandler:
class
clearCalendars
clearHour:
clearItems
clearMetadataKeys
clearMetadataValues
clearRemoteBuildVersion
clearSources
clientName
code
colorString
columnCount
commit
compare:
compare:options:
compare:options:range:
compareAndSwapIntegerValue:expectedExistingValue:forKey:
completeAndFireIn:
completeAndFireNever
completeAndFireOnConnection
completion
completionDate
component:fromDate:
components:fromDate:
componentsSeparatedByString:
condition
configureAccount:accountChangeItemProvider:withAttributes:
configureAccount:withSaveRequest:withAttributes:
configureCalendar:inDatabase:withAttributes:
configureList:listChangeItemProvider:withAttributes:
configureList:withSaveRequest:withAttributes:
configureSource:inStore:withAttributes:
conformsToProtocol:
constraintsDescriptionPath
copy
copyWithZone:
count
countByEnumeratingWithState:objects:count:
countSessionType:
cpuTimeMs
createAccountWithSaveRequest:withAttributes:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
createListInAccount:withSaveRequest:withAttributes:
createOrUpdateSYObject:eventStore:reminderStore:session:
createTables
creatorCodeSigningIdentity
criteriaDelay
criteriaOnConnection
currentChangeTokenWithError:
currentSession
currentVersion
daCalendarItemUniqueIdentifier
daConstraintsDescriptionPath
daDisplayOrder
daExternalIdentificationTag
daHexString
daIsEventOnlyContainer
daIsImmutable
daIsNotificationsCollection
daIsReadOnly
daPushKey
daSupportsSharedCalendars
daSymbolicColorName
daSyncToken
daemon
data
dataUsingEncoding:
dataWithBytes:length:
dataWithContentsOfFile:
dataWithJSONObject:options:error:
dataWithSYObject:
databaseChangedExternally
databaseDidChange
databaseID
date
dateByAddingTimeInterval:
dateChanged
dateChangedForIdentifier:
dateWithTimeIntervalSince1970:
dateWithTimeIntervalSinceNow:
dateWithTimeIntervalSinceReferenceDate:
dbFileManager
dbFilename
debugDescription
decodeChangeData:fromProtocolVersion:ofType:
decodeObjectOfClasses:forKey:
deduplicateICSWrappers:
defaultAlarmOffset
defaultCalendarForNewEvents
defaultCalendarForNewReminders
defaultCenter
defaultLocalCalendar
defaultManager
deferPollingSource
degenerateChange
delegate
deleteAccount:
deleteEvent
deleteIdentifierForRecordID:
deleteInviteByUUID:
deleteItem:store:
deleteList:
deleteObjectByID:store:
deleteSYObject:eventStore:reminderStore:
deleteSourcesEventCalendars:inStore:
deleteSourcesTaskCalendars:inStore:
deleteValueForKey:
deleteWhatever:calendarsInSource:inStore:
deletedAccountIDsFromLoadedMap
deletedSourcesIDs
deletionMap
deletionWrapperForObjectID:deletedReminderAndListMapping:
deletionWrapperForRecordID:eventStore:
deletionWrapperForSourceID:
deletionWrappersForChangeSet:deletedReminderAndListMapping:skipAccountDeletions:pipe:
deletionWrappersForChangeSet:skipSourceDeletions:pipe:
deletionWrappersForSourceAggregator:pipe:
description
detachedItems
detacheesForIdentifierCreatingIfNeeded:detachedEventMap:
dict
dictionary
dictionaryRepresentation
dictionaryWithCapacity:
dictionaryWithObjects:forKeys:count:
didCalendarChange:
didReceiveReunionSyncCommand:
didReceiveStartSyncCommand:
didShowInvite:withUUID:
digest
dirtyMemory
displayOrder
distantFuture
domain
doubleValue
dueDateComponents
dumpToLog
duplicateCheck
ekEventStore
eks_cacheKey
eks_compoundIdentifier
eks_debugDesc
eks_defaultLocalList
eks_eventOnlyStoreFor:
eks_eventOnlyStoreIgnoringExternalChangesFor:withClientId:
eks_eventStoreFor:
eks_localAccount
eks_storeCount
eks_storeForSyncing
emailAddress
encodeObject:forKey:
encodeSYChangeForBackwardCompatibility:protocolVersion:
encodeWithCoder:
endMappingEntities
entityName
entityType
entityTypeForCalendarItemWithIdentifier:
enumerateCalendarItemIdentifiersUsingBlock:
enumerateEventsMatchingPredicate:usingBlock:
enumerateForChangeType:forEntitiesOfClass:withBlock:
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
environment
error
estimatedFireDate
eventChangeObserver
eventDatabaseController
eventForUID:occurrenceDate:
eventInFuture:inStore:
eventInWindow:inStore:
eventObjectIDsMatchingPredicate:
eventSourceForDatabase:identifier:
eventSources
eventStart
eventStore
eventStoreIdentifier
eventTitle
eventUpdateTimeNs
eventWithIdentifier:
eventWithUniqueId:
events
eventsWithExternalIdentifier:inCalendars:
exceptionWithName:reason:userInfo:
executeSql:
externalID
externalIDForIdentifier:
externalIDTag
externalId
externalIdentificationTag
externalIdentifier
externalModificationTag
externalRepresentation
failTimeout
failureScaling
fetch:
fetchAccountsIncludingInactive:error:
fetchAccountsWithError:
fetchAccountsWithObjectIDs:error:
fetchAuxiliaryChangeInfosOfType:withChangeObject:error:
fetchBlob
fetchChangedObjectIDs:
fetchChangesIntoPipe:deferrable:
fetchDefaultListWithError:
fetchDouble
fetchEventChangeSet
fetchEverythingIntoPipe:
fetchHistoryAfterToken:error:
fetchHourlyTallies:hour:
fetchInteger
fetchListWithObjectID:error:
fetchListsWithError:
fetchListsWithObjectIDs:error:
fetchNightlyIntoPipe:
fetchPosition
fetchReminderChangeSet
fetchReminderIncludingConcealedWithObjectID:error:
fetchReminderWithDACalendarItemUniqueIdentifier:inList:error:
fetchReminderWithExternalIdentifier:inList:error:
fetchRemindersMatchingPredicate:completion:
fetchRemindersWithError:
fetchRemindersWithObjectIDs:error:
fetchString
fetchUint64
fifo
fileExistsAtPath:
fileSystemRepresentation
fileURLWithPath:
filterAccountToSync:
filteredArrayUsingPredicate:
finish
finished
firstObject
firstTimeEver
flush
forEachUnique:
freshEventStoreFor:
fullSessionTimeout
getActivePairedDevice
getDataForKey:default:
getDefaultListForStore:
getDefaultTaskCalendar:defaultEventCalendar:store:
getDoubleForKey:default:
getDoubleValueForKey:default:
getFailureProbablity
getFixedRetryInternal
getIntegerForKey:default:
getIntegerValueForKey:default:
getMaximumSessionTimeout
getMinimumSessionTimeout
getStringForKey:default:
getStringValueForKey:default:
handleCalendarEventWithUniqueIdentifierFromGizmo:calendar:wrapper:detachedEventMap:
handleCalendarTaskWithUniqueIdentifierFromGizmo:calendar:wrapper:
handleNewEntity:withWrapper:session:
handleNewReminderChangeItem:withWrapper:session:
handleReminderWithUniqueIdentifierFromGizmo:saveRequest:list:wrapper:
handleUpdatedItemFromGizmo:type:withWrapper:identifier:
handleUpdatedReminderFromGizmo:withSaveRequest:withWrapper:
hasAccountPersistentID
hasAlarmIdentifier
hasAllowsCalendarAddDeleteModify
hasAllowsTasks
hasAttendeeStatus
hasAttributes
hasBeenAlerted
hasCalendar
hasCalendarIdentifier
hasCalendarItemCount
hasCalendarTitle
hasCalendarWrapper
hasCanBePublished
hasCanBeShared
hasChangeTrackingTokens
hasColorString
hasConstraintsDescriptionPath
hasCreatorBundleID
hasCreatorCodeSigningIdentity
hasDefaultAlarmOffset
hasDeleteEvent
hasDeletionWrapper
hasDigest
hasDuplicateCheck
hasEnd
hasEndDate
hasEntityType
hasEventIdentifier
hasEventStart
hasEventTitle
hasExternalID
hasExternalId
hasExternalIdentificationTag
hasExternalIdentifier
hasExternalModificationTag
hasExternalRepresentation
hasHasBeenAlerted
hasICSData
hasICSWrapper
hasIdentifier
hasInvitationChangedPropertyFlagAttendeeComment
hasInvitationChangedPropertyFlagAttendeeStatus
hasInvitationChangedPropertyFlagDate
hasInvitationChangedPropertyFlagLocation
hasInvitationChangedPropertyFlagTime
hasInvitationChangedPropertyFlagTitle
hasInvitationStatus
hasIsBirthdayStore
hasIsComplete
hasIsDefaultCalendarForStore
hasIsDefaultEventCalendar
hasIsDefaultLocalCalendar
hasIsDefaultTaskCalendar
hasIsEnabled
hasIsFacebook
hasIsFamilyCalendar
hasIsHidden
hasIsHolidayCalendar
hasIsIgnoringEventAlerts
hasIsIgnoringSharedCalendarNotifications
hasIsImmutable
hasIsInbox
hasIsNotificationsCollection
hasIsPublished
hasIsReadonly
hasIsSchedulingProhibited
hasIsSharingInvitation
hasItemIdentifier
hasLocationPredictionState
hasMasterCount
hasNotes
hasNuevoIdentifier
hasOccurrenceCache
hasOccurrenceCount
hasOldCalendarIdentifier
hasOldIdentifier
hasOnlyCreatorCanModify
hasOwnerIdentityAddressString
hasOwnerIdentityDisplayName
hasOwnerIdentityEmail
hasOwnerIdentityFirstName
hasOwnerIdentityLastName
hasPrefix:
hasProperInvitationStatus
hasPropertiesForIdentifier:
hasPublishedURLString
hasPushKey
hasRecurrenceRules
hasReminderTitle
hasRowMappingForEntity:
hasSelfAttendeeEmail
hasSelfAttendeeUUID
hasSelfIdentityAddressString
hasSelfIdentityDisplayName
hasSelfIdentityEmail
hasSelfIdentityFirstName
hasSelfIdentityLastName
hasSelfOrganizerEmail
hasSelfOrganizerUUID
hasSetAlarmSnooze
hasSetParticipantStatus
hasSetReminderComplete
hasSharedOwnerAddress
hasSharedOwnerName
hasSharingInvitationResponse
hasSharingStatus
hasShowAlert
hasSnoozeAlarmRequiresDetach
hasSourceIdentifier
hasStart
hasStartDate
hasStatus
hasStoreIdentifier
hasSubCalAccountID
hasSuffix:
hasSummary
hasSupportedEntityTypes
hasSupportsAlarmAcknowledgedDate
hasSupportsSharedCalendars
hasSymbolicColorName
hasSyncID
hasSyncId
hasSyncToken
hasTaskCompletionDate
hasTitle
hasUsesSelfAttendee
hasValidationWrapper
hash
hitRatio
hits
hour
iCSWrapper
icsTodoFromReminder:exportingOption:
identifier
identifierForRecordID:
identifierInRowMappingForEventOrTask:
identifierInRowMappingForRecordIDRef:
idsOptions
importICSData:intoCalendars:options:
importRemindersFromICSData:insertIntoListChangeItem:error:
inactive
incomingResponseIdentifier
indexOfObject:
init
initForFullSync:tinyStore:
initUniquelyWithKey:localFlag:
initWithAccount:
initWithAttributes:
initWithBase64EncodedString:options:
initWithBlock:
initWithCalendar:
initWithCalendarIdentifier:
initWithCalendarRef:
initWithCalendarRef:useAttributes:
initWithCapacity:
initWithChangeTracking:lastChangeToken:
initWithCoder:
initWithCustomClientId:
initWithDASymbolicColorName:daHexString:
initWithData:
initWithData:encoding:
initWithData:store:clientName:
initWithDatabaseManager:
initWithDelegate:
initWithEKOptions:
initWithEKOptions:path:changeTrackingClientId:enablePropertyModificationLogging:allowDelegateSources:
initWithEnvironment:
initWithEnvironment:name:defaultMean:defaultStddev:
initWithEventStore:cause:
initWithFIFOLength:name:
initWithFile:
initWithFileManager:
initWithIDSServiceName:
initWithIdentifier:calendarIdentifier:type:
initWithIdentifier:isDefaultLocalCalendar:
initWithKeyOptions:valueOptions:capacity:
initWithList:
initWithList:useAttributes:
initWithMachServiceName:
initWithNEKEventStore:eventChanges:reminderChanges:
initWithName:
initWithOptions:capacity:
initWithPath:
initWithPath:queue:
initWithPath:queue:readOnly:
initWithPersistentID:isLocalStore:
initWithPersistentObject:occurrenceDate:
initWithQueue:environment:
initWithQueue:text:
initWithReminderKitEnabled:clientName:
initWithService:
initWithService:priority:qos:asMasterStore:options:
initWithSourceIdentifier:attributes:calendarIdentifier:
initWithSpan:session:
initWithStore:
initWithStore:recordMap:
initWithTimeIntervalSinceReferenceDate:
initWithURL:
initWithUUIDString:
insertObject:atIndex:
insertedOrUpdatedSources
instance
instanceName
intValue
integerForKey:
integerValue
interfaceWithProtocol:
internalTransactionAuthorKeysToExclude
invitationChangedPropertyFlagAttendeeComment
invitationChangedPropertyFlagAttendeeStatus
invitationChangedPropertyFlagDate
invitationChangedPropertyFlagLocation
invitationChangedPropertyFlagTime
invitationChangedPropertyFlagTitle
invitationStatus
invitationStatusForIdentifier:
isAfter:
isBefore:
isComplete
isCompleted
isCurrentUser
isCurrentlySyncing
isDefaultCalendarForStore
isDefaultEventCalendar
isDefaultLocalCalendar
isDefaultSchedulingCalendar
isDefaultTaskCalendar
isDeferrable
isDegenerate:
isDelegate
isDetached
isEffectivelyEmpty
isEnabled
isEqual:
isEqualToNEKSourceID:
isEqualToNumber:
isEqualToString:
isEventKitSyncEnabledForReminderKit
isFacebook
isFacebookSource
isFamilyCalendar
isHidden
isHolidayCalendar
isHolidyCalendar
isIdentifierPresent:forRecordID:
isIgnoringEventAlerts
isIgnoringSharedCalendarNotifications
isImmutable
isImmutableRaw
isInternalDevice
isKindOfClass:
isLocalStore
isMasterOrDetachedOccurrence
isMemberOfClass:
isNotificationsCollection
isPerformingBackupResetSync
isPhantom
isPublished
isReadonly
isReminderKitEnabled
isReminderWithLocation
isResetSync
isSchedulingProhibited
isSending
isSharingInvitation
isSubscribed
isSubscribedHolidayCalendar
isTemporary
isTruncated
itemIdentifier
items
itemsAtIndex:
itemsCount
itemsType
join
keyEnumerator
lastChangeTokenForAccountID:
lastFired
lastInsertedRowId
lastObject
lastPathComponent
lastSequenceNumber
length
list
listCacheForStore:wrappers:
listInStore:withNEKCalendarID:
listWrappersForChangeSet:pipe:
listener
listener:shouldAcceptNewConnection:
load
loadChangeTrackingStateMapWithStore:
localAccountID
localBirthdayCalendarSource
localSource
localizedStandardCompare:
location
locationChangedForIdentifier:
locationPredictionState
locationPredictionStateForIdentifier:
lock
longLongValue
lzfseICSData
makeReportWithModel:
mapTableWithKeyOptions:valueOptions:
markAsDeferrable
markAsNotEffectivelyEmpty
markChangedObjectIDsConsumedUpToToken:
masterCount
maxTimeout
mean
mergeFrom:
metadataKeys
metadataKeysAtIndex:
metadataKeysCount
metadataKeysType
metadataValues
metadataValuesAtIndex:
metadataValuesCount
metadataValuesType
migrateFrom:
migratePrefsIfNecessary
minTimeout
minute
month
mutableCopy
name
nekEventStore
nekReminderStore
newFileName:
nextTimeout
notes
notifyForDatabaseUpdates
notifyForDatabaseUpdatesIfNeeded
nowMinusPrevious:
numberWithDouble:
numberWithInt:
numberWithInteger:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLongLong:
obfuscate
objectAtIndex:
objectAtIndexedSubscript:
objectDelayUs
objectForKey:
objectForKeyedSubscript:
objectID
objectIDWithUUID:
objectIdentifier
objectTypeForCalendarItemWithIdentifier:
occurrencesExistInRangeForEvent:startDate:endDate:mustStartInInterval:timezone:
okToPerformDeltaSync
oldCalendarIdentifier
oldIdentifier
oldListIdentifier
onlyCreatorCanModify
oops
orderedSet
orderedSetWithCapacity:
organizer
originalItem
originalStartDate
outgoingResponseIdentifier
owner
ownerIdentityAddress
ownerIdentityAddressString
ownerIdentityDisplayName
ownerIdentityEmail
ownerIdentityFirstName
ownerIdentityLastName
packetNumber
pairingID
pairingStorePath
parseSql:andRun:
parsed
participantStatus
participationStatus
path
pathTemplate
pause
perMessageTimeout
perfomanceTracker
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performUpdateWithICSWrappers:store:session:
persistToData:
persistentID
persistentObject
postNotificationName:object:
predicateForEventsWithStartDate:endDate:calendars:
predicateForMasterEventsInCalendar:
predicateForMasterEventsInCalendars:
predicateForMasterEventsWithOccurrencesWithStartDate:endDate:inCalendar:
predicateForRemindersInCalendars:
predicateWithBlock:
prepDatabasesForResetSync
previousDefaultEventCalendar
previousDefaultReminderListID
previousDefaultTaskCalendar
progressLiar
properInvitationStatus
properInvitationStatusForIdentifier:
properties
propertiesForCalendarItemIdentifier:
propertyListWithData:options:format:error:
provideChangeTrackingForAccountID:clientName:transactionAuthorKeysToExclude:
publicObjectWithObjectID:
publishURL
publishedURL
publishedURLString
purge
purgeRecordMap
push:
rawDb
readFrom:
readOnly
rebroadcastAlertInviteeDeclinesChangeNotification
rebroadcastAllObservedNotifications
rebroadcastShowDeclinedChangeNotification
receivedReunionSyncNotificationString
receivedStartSyncNotificationString
recordChanged:
recordMap
recordSessionType:
registerForDetailedChangeTracking:
registerMessageType:handler:
remObjectID
reminderChangeObserver
reminderDatabaseController
reminderIdentifier
reminderInFuture:
reminderInWindow:
reminderObjectIDsMatchingPredicate:
reminderStore
reminderTitle
reminderUpdateTimeNs
remindersWithExternalIdentifier:inCalendars:
remindersWrappersForChangeSet:skipAccountDeletions:pipe:
removeAllItems
removeAllObjects
removeAllRecords
removeAllRemindersInList:
removeCalendar:commit:error:
removeDeletableAccounts:
removeDeletableLists:
removeEvent:span:error:
removeFromList
removeFromParent
removeIdentifiersForDeletedRecordIDs:
removeItemAtPath:error:
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removeObserver:name:object:
removeReminder:commit:error:
removeSource:commit:error:
reply:to:completion:
resetDataStoreForSyncSession:completion:
resetFetchCursor
resetLocalCalendarCache
respondsToSelector:
responseIdentifier
restartTrackingChanges
resume
retain
retainCount
reverseObjectEnumerator
rollback
rowID
runForNow
runFrom:to:
save
saveCalendar:commit:error:
saveChangeTrackingStateMap:
saveEvent:span:commit:error:
saveEvent:span:error:
saveReminder:error:
saveRequestForStore:
saveRequestForStore:needsPurgeDeletedObjectsAfterSave:
saveRequests
saveRequestsNeedPurgeDeletedObjectsAfterSave
saveSource:commit:error:
saveSynchronouslyWithError:
scheduleDeferredRetry
scheduleRetry
second
self
selfAttendee
selfAttendeeEmail
selfAttendeeUUID
selfAttendeeUUIDForIdentifier:
selfIdentityAddress
selfIdentityAddressString
selfIdentityDisplayName
selfIdentityEmail
selfIdentityFirstName
selfIdentityLastName
selfOrganizerEmail
selfOrganizerEmailForIdentifier:
selfOrganizerUUID
sendData:toDestinations:priority:options:identifier:error:
sendMessage:responseHandler:completion:
sendResourceAtURL:metadata:toDestinations:priority:options:identifier:error:
sendSetCompleted:calendarName:title:externalIdentifier:
sendSetEventAlarmSnooze:calendarName:storeId:eventId:alarmIdentifier:
sendSetParticipantStatus:span:storeId:eventId:
sendSetReminderAlarmSnooze:calendarName:title:externalIdentifier:alarmIdentifier:
sequencer
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:sentBytes:totalBytes:
service:account:incomingData:fromID:context:
service:account:incomingMessage:fromID:context:
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:receivedGroupSessionParticipantDataUpdate:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantUpdate:context:
service:activeAccountsChanged:
service:connectedDevicesChanged:
service:devicesChanged:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:didSwitchActivePairedDevice:acknowledgementBlock:
service:didSwitchFromPairingID:toPairingID:
service:encounteredError:context:
service:incomingData:completion:
service:incomingStream:metadata:completion:
service:linkedDevicesChanged:
service:nearbyDevicesChanged:
service:sessionEnded:error:
service:startSession:error:
service:targetDeviceConnectionChanged:
service:targetDeviceProximityChanged:
service:willPreferSession:overSession:
service:willSwitchFromPairingID:toPairingID:
serviceAllowedTrafficClassifiersDidReset:
serviceDidPairDevice:
serviceDidUnpairDevice:
setAccesses:
setAccountPersistentID:
setActivity:
setActivityCondition:
setActivityIdentifier:
setAlarmIdentifier:
setAlarmSnooze
setAllPropertiesForItem:identifier:wrapper:needsInvite:eventStore:calendar:
setAllPropertiesForReminder:identifier:wrapper:store:list:oldListIdentifier:
setAllowsCalendarAddDeleteModify:
setAllowsEvents:
setAllowsScheduling:
setAlpha:
setAnalytics:
setAttendeeComment:
setAttendeeComment:forIdentifier:
setAttendeeStatus:
setAttendeeStatus:forIdentifier:
setAttendeeStatusFlag:
setAttendeeStatusFlag:forIdentifier:
setAttributes:
setAuthor:
setBackgroundThread:
setCache:
setCalendar:
setCalendarIdentifier:
setCalendarItemCount:
setCalendarName:
setCalendarTitle:
setCalendarUpdateTimeNs:
setCalendarWrapper:
setCalendars:
setCanBePublished:
setCanRestart:
setCapacity:
setChangeNumber:
setChangeObserver:
setChangeSupplier:
setChangeToken:forAccountID:
setChangeTracking:
setCloudFallback:
setColor:
setCompleted:
setCompletion:
setCompletionDate:
setComponents:options:
setCondition:
setConstraintsDescriptionPath:
setCountLimit:
setCpuTime:
setCreatorBundleID:
setCreatorCodeSigningIdentity:
setCriteriaDelay:
setCriteriaOnConnection:
setDaDisplayOrder:
setDaemon:
setData:
setDate:
setDateChanged:forIdentifier:
setDateFormat:
setDb:
setDbFilename:
setDefaultAlarmOffset:
setDeferPollingSource:
setDelegate:
setDelegate:queue:
setDeletes:
setDeletionWrapper:
setDict:
setDigest:
setDisplayOrder:
setDouble:forKey:
setDoubleValue:forKey:
setDuplicateCheck:
setEnabled:
setEndDate:
setEngineType:
setEntityType:
setError:
setEstimatedFireDate:
setEventChangeObserver:
setEventIdentifier:
setEventStart:
setEventTitle:
setEventUpdateTimeNs:
setEvents:
setExportedInterface:
setExportedObject:
setExternalID:
setExternalID:forIdentifier:
setExternalIDTag:
setExternalId:
setExternalIdentificationTag:
setExternalIdentifier:
setExternalModificationTag:
setExternalRepresentation:
setFailureScaling:
setFamilyCalendar:
setFetcher:
setFifo:
setFinished:
setFirstTimeEver:
setFullSessionTimeout:
setHasAllowsCalendarAddDeleteModify:
setHasAllowsEvents:
setHasAllowsTasks:
setHasAttendeeStatus:
setHasBeenAlerted:
setHasCalendarItemCount:
setHasCanBePublished:
setHasCanBeShared:
setHasChangesAvailable
setHasDate:
setHasDefaultAlarmOffset:
setHasDisplayOrder:
setHasEnd:
setHasEndDate:
setHasEntityType:
setHasEventStart:
setHasHasBeenAlerted:
setHasInvitationChangedPropertyFlagAttendeeComment:
setHasInvitationChangedPropertyFlagAttendeeStatus:
setHasInvitationChangedPropertyFlagDate:
setHasInvitationChangedPropertyFlagLocation:
setHasInvitationChangedPropertyFlagTime:
setHasInvitationChangedPropertyFlagTitle:
setHasInvitationStatus:
setHasIsBirthdayStore:
setHasIsComplete:
setHasIsDefaultCalendarForStore:
setHasIsDefaultEventCalendar:
setHasIsDefaultLocalCalendar:
setHasIsDefaultTaskCalendar:
setHasIsEnabled:
setHasIsFacebook:
setHasIsFamilyCalendar:
setHasIsHolidayCalendar:
setHasIsIgnoringEventAlerts:
setHasIsIgnoringSharedCalendarNotifications:
setHasIsImmutable:
setHasIsInbox:
setHasIsLocalStore:
setHasIsNotificationsCollection:
setHasIsPublished:
setHasIsReadonly:
setHasIsSchedulingProhibited:
setHasIsSharingInvitation:
setHasIsSubscribed:
setHasLocationPredictionState:
setHasMasterCount:
setHasOccurrenceCount:
setHasOnlyCreatorCanModify:
setHasPacketNumber:
setHasProperInvitationStatus:
setHasSharingInvitationResponse:
setHasSharingStatus:
setHasShowAlert:
setHasSnoozeAlarmRequiresDetach:
setHasSnoozeAmount:
setHasSpan:
setHasStart:
setHasStartDate:
setHasStatus:
setHasSupportedEntityTypes:
setHasSupportsAlarmAcknowledgedDate:
setHasSupportsSharedCalendars:
setHasTaskCompletionDate:
setHasType:
setHasUsesSelfAttendee:
setHidden:
setHits:
setICSData:
setICSWrapper:
setIdentifier:
setIdentifier:masterRowID:summary:location:startTime:forRecordID:
setIdsOptions:
setImmutable:
setInactive:
setInbox:
setInserts:
setInteger:forKey:
setIntegerValue:forKey:
setInvitationChangedPropertyFlagAttendeeComment:
setInvitationChangedPropertyFlagAttendeeStatus:
setInvitationChangedPropertyFlagDate:
setInvitationChangedPropertyFlagLocation:
setInvitationChangedPropertyFlagTime:
setInvitationChangedPropertyFlagTitle:
setInvitationStatus:
setInvitationStatus:forIdentifier:
setIsBirthdayStore:
setIsComplete:
setIsDefaultCalendarForStore:
setIsDefaultEventCalendar:
setIsDefaultLocalCalendar:
setIsDefaultTaskCalendar:
setIsEnabled:
setIsFacebook:
setIsFamilyCalendar:
setIsHidden:
setIsHolidayCalendar:
setIsHolidyCalendar:
setIsIgnoringEventAlerts:
setIsIgnoringSharedCalendarNotifications:
setIsInbox:
setIsLocalStore:
setIsNotificationsCollection:
setIsReadonly:
setIsReminderWithLocation:
setIsSchedulingProhibited:
setIsSharingInvitation:
setIsSubscribed:
setItemIdentifier:
setItems:
setLastChangeToken:
setLastFired:
setLastSequenceNumber:
setLength:
setListener:
setLocationChanged:
setLocationChanged:forIdentifier:
setLocationPredictionState:
setLocationPredictionState:forIdentifier:
setLzfseICSData:
setMaxConcurrentMessages:
setMaxTimeout:
setMean:
setMetadata:forCalendarItemIdentifier:
setMetadataKeys:
setMetadataValues:
setMinTimeout:
setMinimalPropertiesForItem:identifier:wrapper:
setMinimalPropertiesForReminder:identifier:wrapper:
setMode:
setMoveMap:
setMsgType:
setName:
setNeedsFullSync
setNeedsMigrationSync
setNeedsNightlySync
setNeedsResetSync
setNeedsReunionSync
setNekEventStore:
setNekReminderStore:
setNotes:
setNotificationsCollection:
setNuevoIdentifier:
setObfuscate:
setObject:forKey:
setObject:forKeyedSubscript:
setObjectDelayUs:
setOccurrenceCache:
setOccurrenceCount:
setOldCalendarIdentifier:
setOldIdentifier:
setOnlyCreatorCanModify:
setOptions:
setOrganizer:
setOwnerIdentityAddress:
setOwnerIdentityAddressString:
setOwnerIdentityDisplayName:
setOwnerIdentityEmail:
setOwnerIdentityFirstName:
setOwnerIdentityLastName:
setPacketNumber:
setParsed:
setParticipantStatus
setParticipationStatus:
setPath:
setPathTemplate:
setPerMessageTimeout:
setPerfomanceTracker:
setPersistentID:
setPreviousDefaultEventCalendar:
setPreviousDefaultReminderListID:
setPriority:
setProgressLiar:
setProperInvitationStatus:
setProperInvitationStatus:forIdentifier:
setProperties:
setPropertiesForWrapper:withCalendarItems:needsInvite:sendAllProperties:eventStore:calendar:originalEvent:
setPropertiesForWrapper:withReminders:oldListIdentifier:sendAllProperties:store:list:
setPublishURL:
setPublishedURL:
setPublishedURLString:
setPushKey:
setRawDb:
setReadOnly:
setRecordMap:
setReminderChangeObserver:
setReminderComplete
setReminderTitle:
setReminderUpdateTimeNs:
setResponseIdentifier:
setSaveRequests:
setSaveRequestsNeedPurgeDeletedObjectsAfterSave:
setSelfAttendee:
setSelfAttendeeEmail:
setSelfAttendeeEmail:forIdentifier:
setSelfAttendeeUUID:
setSelfAttendeeUUID:forIdentifier:
setSelfIdentityAddress:
setSelfIdentityAddressString:
setSelfIdentityDisplayName:
setSelfIdentityEmail:
setSelfIdentityFirstName:
setSelfIdentityLastName:
setSelfOrganizerEmail:
setSelfOrganizerEmail:forIdentifier:
setSelfOrganizerUUID:
setSelfOrganizerUUID:forIdentifier:
setSendingBufferCap:
setSerializer:
setService:
setSession:
setSessionMetadata:
setSetAlarmSnooze:
setSetParticipantStatus:
setSetReminderComplete:
setSharedOwnerAddress:
setSharedOwnerName:
setSharingInvitation:
setSharingInvitationResponse:
setSharingStatus:
setShowAlert:
setSigmaSpan:
setSnoozeAlarmRequiresDetach:
setSnoozeAmount:
setSource:
setSourceIdentifier:
setSourceType:
setSources:
setSpan:
setSpanEnd:
setSpanStart:
setStart:
setStartDate:
setStartDate:forIdentifier:
setStartDateComponents:
setStartDateMap:
setStatsTracker:
setStatus:
setStddev:
setStore:
setStoreFile:
setStoreIdentifier:
setStoreUpdateTimeNs:
setStoreWrapper:
setStores:
setString:forKey:
setStringValue:forKey:
setSubCalAccountID:
setSubcalAccountID:
setSubscribed:
setSubscribedHolidayCalendar:
setSummary:
setSupportedEntityTypes:
setSupportsAlarmAcknowledgedDate:
setSupportsSharedCalendars:
setSymbolicColorName:
setSyncController:
setSyncCoordinator:
setSyncID:
setSyncId:
setSyncKind:
setSyncToken:
setTaskCompleted:
setTaskCompletionDate:
setTaskCutoff:
setTaskCutoffDate:
setTasks:
setTerminateSemaphore:
setTerminated:
setTimeChanged:forIdentifier:
setTimeZone:
setTitle:
setTitleChanged:
setTitleChanged:forIdentifier:
setTruncated:
setType:
setUUID:
setUniqueId:
setUpdates:
setUsesSelfAttendee:
setUuid:
setValidationObject:
setValidationWrapper:
setValue:forKey:
setVariance:
setWaitingForCheckin:
setWallTime:
setWeakReminderDatabaseController:
setWithCapacity:
setWithObject:
setX_calendarserver_access:
settablePropertiesForCalendarItemIdentifier:
shared
sharedInstance
sharedOwnerAddress
sharingInvitationResponse
sharingStatus
shouldSendEntity:
shouldSendReminder:
shouldShowInvite:withUUID:
shouldSyncBasedOnTime:
showAlert
showDeclinedEvents
sigmaSpan
snoozeAlarm:withTimeIntervalFromNow:
snoozeAlarmRequiresDetach
snoozeAmount
snoozeFromNowForTimeInterval:
someStore
source
sourceIdentifier
sourceType
sourceWithEventStore:
sourceWithExternalID:
sourceWithIdentifier:
sourcesCount
sourcesType
span
spanStart
start
startDate
startDateComponents
startDateForIdentifier:
startDateMap
startMappingEntities
statsTracker
status
stddev
step
stopObservingChanges
store
storeDidChange
storeDidChangeNotificationName
storeFile
storeForEventWithEnvironment:
storeForReminderWithEnvironment:
storeUpdateTimeNs
storeWrapper
storeWrapperForCloudKitAccount:pipe:
storeWrappersForSourceAggregator:pipe:
stores
string
stringByDeletingLastPathComponent
stringByReplacingOccurrencesOfString:withString:
stringRepresentation
stringWithFormat:
stringWithUTF8String:
structuredLocation
subdataWithRange:
superclass
supportedEntityTypes
supportsAlarmAcknowledgedDate
supportsCapability:
supportsMigrationSync
supportsSecureCoding
supportsSharedCalendars
sweep
sweepSeenMap
symbolicColorName
syncController
syncCoordinator:beginSyncSession:
syncCoordinator:didInvalidateSyncSession:
syncCoordinatorDidChangeSyncRestriction:
syncCoordinatorDidReceiveStartSyncCommand:
syncID
syncId
syncKind
syncSession:applyChanges:completion:
syncSession:didEndWithError:
syncSession:enqueueChanges:error:
syncSession:resetDataStoreWithError:
syncSession:restartChanges:
syncSession:rollbackChangesWithError:
syncStateDBPathFor:
syncToken
synchronize
synchronizeNanoDomain:keys:
synchronizeUserDefaultsDomain:keys:
systemBuildVersion
systemTimeZone
targetIsConnected
targetableDevice
taskCompleted
taskCompletionDate
taskCutoff
taskCutoffDate
tasks
tc_advanceChangeNumber
tc_setAutomaticSync:
tc_setFailureProbablity:
tc_setFixedRetryInternal:
tc_setMaximumSessionTimeout:
tc_setMinimumSessionTimeout:
tc_setNominal
tc_setObjectDelay:
tc_status:
terminate
terminateIfNotFinished
terminateSemaphore
terminated
text
timeChanged
timeChangedForIdentifier:
timeIntervalSince1970
timeIntervalSinceDate:
timeIntervalSinceNow
timeIntervalSinceReferenceDate
timeZone
tinyStore
title
titleChanged
titleChangedForIdentifier:
transaction
transactionAuthorsToExclude
truncated
type
uUID
unarchivedObjectOfClass:fromData:error:
uniqueId
uniqueIdentifier
universalToken
unlocalizedTitle
unlock
unregisterForDetailedChangeTracking:
unsignedIntegerValue
updateAccount:
updateCalendar:store:
updateEvent:identifier:eventStore:occurrenceDate:participationStatus:masterIdentifier:isMaster:
updateFailure
updateICS:store:session:
updateInvitationStatusForCalendarItem:identifier:withWrapper:session:
updateList:
updateMasterEvent:masterIdentifier:calendarIdentifier:masterParticipationStatus:detachedEvents:
updateReminderChangeItem:fromICSData:isNew:withOptions:error:
updateRowMappingForEntity:
updateSelfAttendeeForCalendarItem:identifier:withWrapper:
updateSource:store:
updateSuccess:
updatedProperties
userInfo
usesSelfAttendee
uuid
validate
validationEnabled
validationObject
validationWrapper
validationWrapperForPb:
validationWrapperForRightNow
validationWrapperForSameSpan:
valueForKey:
variance
wait
waitForPairingStorePathPairingID:
waitingForCheckin
wallTime
weakEventDatabaseController
weakReminderDatabaseController
wrapperForCalEntity:
wrapperForCalendar:
wrapperForCalendar:useAttributes:
wrapperForCalendarItem:
wrapperForCalendarItem:needsInvite:eventStore:
wrapperForList:useAttributes:
wrapperForReminder:oldListIdentifier:
wrapperForReminder:oldListIdentifier:store:
wrapperForSource:
writeCrashReport:
writeTo:
writeToFile:options:error:
x_calendarserver_access
year
zone
%@ %@
start
items
NEKDatabaseChangedExternallyNotification
NEKDefaultCalendarChanged
NEKBlindChangeNumberAdvance
<NEKICSWrapperMetadata (%p): 
  entityType: %d
  identifier: %@
  externalID: %@
  selfAttendeeEmail: %@
  selfAttendeeUUID: %@
  selfOrganizerEmail: %@
  selfOrganizerUUID: %@
  attendeeStatus: %d
  invitationStatus: %d
  properInvitationStatus: %d
  hasProperInvitationStatus: %d
  locationPredictionState: %d
  dateChanged: %d
  timeChanged: %d
  titleChanged: %d
  locationChanged: %d
  attendeeComment: %d
  attendeeStatusFlag: %d
  startDate: %@
<%@ %p; identifier=%@; calendarIdentifier=%@; oldCalendarIdentifier=%@; title='%@'>
<%@ %p; identifier=%@; calendarIdentifier=%@; oldCalendarIdentifier=%@>
<%@ %p, calendarIdentifier = %@; oldCalendarIdentifier = %@; count = %@>
%@.mean
%@.variance
%@.failureTimeout
NDTSetDefaultPriority
NDTQueueFactory.m
qos != QOS_CLASS_UNSPECIFIED
NDTSetElevatedPriority
GARBAGE:%@
com.apple.eventkitsync.changeobserver.%@
<%@ %p, source = %@, calendarIdentifier = %@>
watch.eventsync
com.apple.eventkitsync
persistentID
isLocalStore
+[NEKSourceID(Reminder) accountForStore:identifier:]
NDTSQFile.%@.%p
%04d%02d%02d-%02d%02d%02d
:memory:
mobile
_openDatabase(1)
NDTSQError
pragma journal_mode=wal
_SQ_Versions
%@-wal
%@: %s
_executeSql(1)
_parseSql:(1)
_parseSql:(2)
BEGIN
begin(1)
COMMIT
commit(1)
ROLLBACK
rollback(1)
sourceIdentifier
calendarIdentifier
attributes
isDefaultTaskCalendar
isDefaultEventCalendar
oldCalendarIdentifier
%@%@%@
UUID
title
isReadonly
isHidden
isImmutable
isInbox
isNotificationsCollection
isSharingInvitation
isSubscribed
isHolidayCalendar
isFamilyCalendar
isIgnoringEventAlerts
isIgnoringSharedCalendarNotifications
isSchedulingProhibited
isDefaultCalendarForStore
type
digest
symbolicColorName
colorString
displayOrder
sharingStatus
sharedOwnerName
sharedOwnerAddress
sharingInvitationResponse
publishedURLString
canBePublished
canBeShared
isPublished
externalID
externalIdentificationTag
syncToken
externalModificationTag
externalRepresentation
supportedEntityTypes
invitationStatus
hasBeenAlerted
notes
subCalAccountID
pushKey
selfIdentityDisplayName
selfIdentityEmail
selfIdentityAddressString
selfIdentityFirstName
selfIdentityLastName
ownerIdentityDisplayName
ownerIdentityEmail
ownerIdentityAddressString
ownerIdentityFirstName
ownerIdentityLastName
TinyStore
tinyStore.sqlitedb
tinyStore
tinyStore.plist
com.apple.eventkitsync.changeobserver.sequencenumber
FaultCount
RetryMustBeReset
heardFromPhone
MigrationSyncCount
eventCalendarId
taskCalendarId
windowEnd
windowStart
deltaSync.failureTimeout
deltaSync.mean
deltaSync.variance
resetSync.failureTimeout
resetSync.mean
resetSync.variance
nightlySync.failureTimeout
nightlySync.mean
nightlySync.variance
msgType
NDTMessaging
-[NDTMessaging sendMessage:responseHandler:completion:]
v8@?0
-[NDTMessaging reply:to:completion:]
-[NDTMessaging service:account:incomingData:fromID:context:]
-[NDTMessaging service:account:incomingResourceAtURL:metadata:fromID:context:]
/tmp/verifier_data.XXXXXX
%s/%@
ValidationWrapper
cvAlertEnabled
com.apple.Bridge.CalendarSyncDebug
yyyyMMdd/HHmm
<%@:%p start:%@ end:%@ masterCount:%d occurrenceCount:%d>
Calendar validation failure. Please file a radar against "EventKitSync | watchOS"
Sync validation failure
select value from %@ where key = ?
update %@ set value = ? where value = ? and key = ?
insert or replace into %@ (key, value) values (?, ?)
delete from %@ where key = ?
create table if not exists %@ (key text unique, value text)
NDTSQKeyValueStore:%@
i16@?0@"NDTSQStatement"8
name
externalId
00000000/0000
/System/Library/LaunchDaemons/com.apple.SpringBoard.plist
syncReport.json
datestamp
duplicates
drift
sources
calendars
v24@?0@"NEKPBItemOccurrence"8q16
com.apple.eventkitsync.nekeventstore
com.apple.eventkitsync.dbidleblocks
com.apple.eventkitsync.pipe
SaveDB
-[NEKEventStore getDefaultTaskCalendar:defaultEventCalendar:store:]
updateICS:
deleteItemWithIdentifier:
-[NEKEventStore deleteItem:store:]
-[NEKEventStore handleNewEntity:withWrapper:session:]
-[NEKEventStore handleUpdatedItemFromGizmo:type:withWrapper:identifier:]
/RID=
updateMasterEvent:blah...
%@%@%llu
-[NEKEventStore handleCalendarEventWithUniqueIdentifierFromGizmo:calendar:wrapper:detachedEventMap:]
-[NEKEventStore handleCalendarTaskWithUniqueIdentifierFromGizmo:calendar:wrapper:]
com.apple.eventkitsync.lzfse.receive.logging
-[NEKEventStore _processUpdateFromWatch:calendar:store:]_block_invoke
v16@?0@"NSString"8
-[NEKEventStore _deleteCalendarItemsInICSWrapperFromOldCalendar:store:]_block_invoke
-[NEKEventStore _deleteCalendarItemsMovedToCalendar:inICSWrapper:]_block_invoke
v28@?0@"EKObjectID"8i16^B20
ICSWrappers:Inserts
ICSWrappers:Updates
-[NEKEventStore ICSWrappersForChangeSet:pipe:]_block_invoke
-[NEKEventStore _createCalendarForWrapper:store:]
com.apple.eventkitsync.lzfse.send.logging
com.apple.eventkitsync.recievedpairedsyncstart
com.apple.eventkitsync.recievedreunionsyncstart
com.apple.pairedsync.eventkitsync
internal_ignorePairedSync
com.apple.EventKitSync
/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/NEKSyncBundle/Models/NEKSyncCoordinator.m
-[NEKSyncCoordinator syncCoordinator:beginSyncSession:]
-[NEKSyncCoordinator syncCoordinator:didInvalidateSyncSession:]
None
LimitPush
startDate
endDate
masterCount
occurrenceCount
showAlert
com.apple.NanoCalendar.PrefSync.PrefMigrationSeed
com.apple.mobilecal
InviteeDeclineAlerts-rebroadcast
ShowDeclinedEvents-rebroadcast
enableTravelAdvisoriesForAutomaticBehavior
com.apple.calendar.database.preference.notification.enableTravelAdvisoriesForAutomaticBehavior
com.apple.NanoCalendar
preferences_observer
LastDeselectedCalendarSyncHashes
LastDeselectedCalendarSyncIdentifiers
TimeZoneCityArray
kCalTimeZonePrefChangedDistributedNotification
overlayCalendarID
DefaultTimedAlarmOffset
DefaultAllDayAlarmOffset
com.apple.calendar.defaultAlarmChangedNotification
ShowWeekNumbers
com.apple.mobilecal.preference.notification.showweeknumbers
CalEventDeclineEventPrefChangedRebroadcast
CalEventShowInviteeDeclinesPrefChangedRebroadcast
CalEventDeclineEventPrefChanged
CalEventShowInviteeDeclinesPrefChanged
v32@?0@"NSString"8@"NSSet"16^B24
CREATE TABLE IF NOT EXISTS analytics (hour INT PRIMARY KEY, deltas INT, resets INT, failures INT)
analytics
INSERT OR REPLACE INTO analytics (deltas, resets, failures, hour) values (?,?,?,?)
SELECT deltas, resets, failures FROM analytics WHERE hour = ?
DELETE FROM analytics WHERE hour = ?
backchannel
com.apple.private.alloy.eventkitmutation
setRemCom
v16@?0@"NDTMessage"8
setParStt
setAlmSno
deleEvent
internal_disablePhoneMutator
/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/NEKSyncBundle/Models/NEKRPCEndpoint.m
-[NEKRPCEndpoint _recvSetEventKitReminderCompletedEndpoint:]
-[NEKRPCEndpoint _recvSetReminderKitReminderCompletedEndpoint:]
-[NEKRPCEndpoint _recvDeleteEventEndpoint:]
v24@?0@"EKEvent"8^B16
v16@?0@"NSArray"8
com.apple.private.alloy.internal.watch.calendar.analytics
com.apple.internal.watch.calendar.analytics
com.apple.internal.eventkitsync.checker
<%@ %p; type=%@; identifier=%@; calendarIdentifier=%@>
Calendar
Event
Reminder
Source
phone
PreferencesObserver
com.apple.eventkitsyncd.daemon
com.apple.eventkitsyncd.notifications
com.apple.notifyd.matching
HandleNotifications
_CalDatabaseChangedNotification
com.apple.reminderkit.storeChanged
EventKitSyncTesting
com.apple.eventkitsync.force
com.apple.eventkitsync.zapversion
com.apple.datamigrator.migrationDidFinish
SignificantTimeChangeNotification
CalDefaultCalendarChangedNotification
com.apple.eventkitsync.analytics.flush
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.eventkitsync.analytics.daily
-[NEKDaemon _registerForNotifications]
com.apple.nanodaemontoolkit
[VOID]
(nil)
>%08x<
com.apple.logging.obfuscation
obfuscate
F519C070-44C7-467D-B560-7FEABDF9D3AC
-[NEKSourceAttributes(Event) initWithSource:]
CloudKit
non-CloudKit
isFacebook
v32@?0@"EKObjectID"8Q16^B24
@?<v@?@"EKObjectID"Q^B>16@?0@?<v@?@"NSString"@"EKSource"Q^B>8
v32@?0@"REMObjectID"8Q16^B24
@?<v@?@"REMObjectID"Q^B>16@?0@?<v@?@"NSString"@"EKSource"Q^B>8
v40@?0@"NSString"8@"EKSource"16Q24^B32
testWindowStart
testWindowEnd
16A0
syncWindow
recordMap
RecordMap.db
CREATE TABLE IF NOT EXISTS record(rowid INTEGER PRIMARY KEY ASC, entityType INT, entityRowID INT, UUID TEXT)
CREATE UNIQUE INDEX IF NOT EXISTS entityIndex ON record (entityType, entityRowID)
CREATE VIEW IF NOT EXISTS record_utc AS SELECT rowid, datetime(timestamp, 'unixepoch') stamp, entityType, entityRowID, masterRowID, uuid FROM record ORDER BY timestamp, entityType, uuid
ALTER TABLE record ADD COLUMN timestamp INT DEFAULT NULL
ALTER TABLE record ADD COLUMN masterRowID INT DEFAULT -1 NOT NULL
ALTER TABLE record ADD COLUMN mark INT DEFAULT 1 NOT NULL
ALTER TABLE record ADD COLUMN summary_hash TEXT DEFAULT NULL
ALTER TABLE record ADD COLUMN location_hash TEXT DEFAULT NULL
ALTER TABLE record ADD COLUMN start_time REAL DEFAULT NULL
ALTER TABLE record ADD COLUMN entityDatabaseID INT DEFAULT 0 NOT NULL
DROP INDEX entityIndex
CREATE UNIQUE INDEX entityIndex ON record (entityType, entityRowID, entityDatabaseID)
DROP VIEW record_utc
CREATE VIEW record_utc AS SELECT rowid, datetime(timestamp, 'unixepoch') stamp, entityType, entityRowID, entityDatabaseID, masterRowID, uuid FROM record ORDER BY timestamp, entityType, uuid
PRAGMA user_version
PRAGMA user_version = %d
SELECT UUID FROM record WHERE entityType = ? AND entityRowID = ? AND entityDatabaseID = ?
INSERT OR REPLACE INTO record(entityType, entityRowID, entityDatabaseID, UUID, timestamp, masterRowID, summary_hash, location_hash, start_time, mark) VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, 1)
SELECT summary_hash, location_hash, start_time FROM record WHERE entityType = ? AND entityRowID = ? AND entityDatabaseID = ?
DELETE FROM record WHERE entityType = ? and entityRowID = ? and entityDatabaseID = ?
DELETE FROM record
SELECT entityType, entityRowID, entityDatabaseID, UUID, mark FROM record ORDER BY mark, entityType, entityRowID, UUID
SELECT count() FROM record
isComplete
calendarName
reminderTitle
externalIdentifier
>>LOCAL<<
Default local calendar
UUID: %@
<%@ %p; %@>
defaultAlarmOffset
isEnabled
usesSelfAttendee
constraintsDescriptionPath
creatorBundleID
creatorCodeSigningIdentity
accountPersistentID
supportsSharedCalendars
allowsTasks
allowsEvents
allowsCalendarAddDeleteModify
onlyCreatorCanModify
snoozeAlarmRequiresDetach
supportsAlarmAcknowledgedDate
isBirthdayStore
com.apple.eventkitsync.progressliar
-[NEKProgressLiar _doneForRealNotifyingPairedSync:]
com.apple.internal.eventkitsync.testcontrol
com.apple.NEKTestControl.xpc
%@;%@;%f
/var/mobile/Library/Calendar/Calendar.sqlitedb
select I.unique_identifier, C.external_id calendar, O.occurrence_date occurrence_date from occurrencecache O left join calendar C on C.rowid = O.calendar_id left join calendaritem I on I.rowid = O.event_id where I.entity_type = 2 and O.occurrence_date >= ?  and O.occurrence_date <= ? and C.flags & 786432 == 0 order by occurrence_date, I.unique_identifier
EventKitSync
v24@?0@"NSString"8@"NSUUID"16
/System/Library/PrivateFrameworks/CDDataAccess.framework
/System/Library/PrivateFrameworks/ExchangeSync.framework
/System/Library/PrivateFrameworks/DataAccess.framework
+[NEKSourceAttributes(Reminder) createAccountWithSaveRequest:withAttributes:]
@"REMAccountChangeItem"8@?0
.plist
Analytics.sqlite
hour
deltas
resets
failures
com.apple.eventkitsync.sessions
bindInteger: index out of bounds
bindUint64: index out of bounds
bindString: index out of bounds
bindDouble: index out of bounds
bindBlob: index out of bounds
fetchInteger: column out of bounds
fetchUint64: column out of bounds
fetchString: column out of bounds
fetchDouble: column out of bounds
fetchBlob: column out of bounds
NDTQSStatement:%p:"%@",parsed=%p
changeObserver.keyqueue
E8CD02C1-B7C0-4E12-8A44-AB54B5F52E5F
E58F9466-0386-4DE7-B6CE-537A8B54C9B7
v20@?0@"NSArray"8i16
B16@?0@"EKObjectID"8
SeenMap.db
com.apple.eventkitsync.seenmap
drop table if exists seen
create table if not exists seendata (uuid TEXT, start_date REAL, end_date REAL, location TEXT, primary key (uuid))
B24@?0^^{sqlite3_stmt}8*16
insert or replace into seendata values ( ?, ?, ?, ?);
select start_date, end_date, location from seendata where uuid = ?;
delete from seendata where uuid = ?;
delete from seendata where end_date < ?;
-[NEKSeenMap didShowInvite:withUUID:]
-[NEKSeenMap deleteInviteByUUID:]
-[NEKSeenMap sweep]
B16@?0@8
<NDTResultsFIFO:%p cap:%d/%d term:%d fin:%d>
NEK.sessionIdle
resetSync
deltaSync
nightlySync
NEK.SYService
com.apple.private.alloy.eventkitsync
internal_forceFileTransfer
deferUntil
maxDeltaRetries
/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/NEKSyncBundle/Models/NEKSyncController.m
-[NEKSyncController service:willPreferSession:overSession:]
tc_automaticSync
lastSuccessfulStamp
tc_objectDelay
Object delay: %.3f
Fault count: %d
Currently syncing: %s
Automatic sync: %s
Enabled
Disabled
Last successful sync sent: 
Minimum session timeout: %.3f
Maximum session timeout: %.3f
Probability of failure: %.3f
Fixed retry interval: %.3f
minSessionTimeout
maxSessionTimeout
internal_probabilityOfSyncFailure
internal_retryInterval
-[NEKSyncController service:startSession:error:]
identifier
sending
receiving
delta
RetryDueDate
ResetSyncPipe
NightlySyncPipe
DeltaSyncPipe
internal_enableLongTimeouts
internal_enableShortTimeouts
com.apple.watch.eventkitsync.failuretesting
com.apple.eventkitsync.retrysync
com.apple.eventkitsync.sessionEnded
-[NEKSyncController service:sessionEnded:error:]
v16@?0@?<v@?>8
 (FAKE)
nightly
reset
internal_dumpRecordMap
com.apple.watch.eventkitsync.recordmapdump
EventKit
data_separation
sessionTimeout
sessionPerf
packetNumber
storeWrapper
calendarWrapper
ICSWrapper
deletionWrapper
validationWrapper
setReminderComplete
setParticipantStatus
setAlarmSnooze
deleteEvent
<%@ %p; persistentID=%@; type=%@>
Local
Exchange
CalDAV
MobileMe
Subscribed
Birthdays
Unknown
v32@?0@"NSString"8@"NEKPBICSWrapperMetadata"16^B24
v32@?0@"NSString"8Q16^B24
<%@ %p; empty changeset>
<%@ %p; %d inserts; %d updates; %d deletes>
Local store
persistentID: %@
isDefaultLocalCalendar
/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/NEKSyncBundle/Models/NEKResultsFetcher.m
-[NEKResultsFetcher fetchEverythingIntoPipe:]
B16@?0@"EKCalendarItem"8
B16@?0@"REMReminder"8
-[NEKResultsFetcher fetchEverythingIntoPipe:]_block_invoke
-[NEKResultsFetcher fetchNightlyIntoPipe:]
-[NEKResultsFetcher fetchNightlyIntoPipe:]_block_invoke
-[NEKResultsFetcher fetchChangesIntoPipe:deferrable:]
+[NEKCalendarID(Reminder) listInStore:withNEKCalendarID:]
selfAttendeeEmail
entityType
invitationChangedPropertyFlagDate
invitationChangedPropertyFlagTime
invitationChangedPropertyFlagTitle
invitationChangedPropertyFlagLocation
invitationChangedPropertyFlagAttendeeComment
invitationChangedPropertyFlagAttendeeStatus
selfAttendeeUUID
selfOrganizerEmail
selfOrganizerUUID
attendeeStatus
locationPredictionState
properInvitationStatus
+[NEKCalendarAttributes(Reminder) createListInAccount:withSaveRequest:withAttributes:]
@"REMListChangeItem"8@?0
<%@:%p capacity:%d, hitRatio:%f>
encoding
/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/NEKSyncBundle/Models/NEKSyncSession.m
-[NEKSyncSession init]
internal_disableSync
syncSession:applyChanges:(events)
syncSession:applyChanges:(reminders)
<%@:%p cpu=%lld, wall=%lld, dmem=%lld>
publishedURL
selfIdentityAddress
ownerIdentityAddress
snoozeAmount
alarmIdentifier
itemIdentifier
storeIdentifier
com.apple.eventkitsync.nekreminderstore
com.apple.eventkitsync.reminders.pipe
saveRequestForStore(Reminders)
removeAllItems
removeAllItems(reminders)
B24@?0@"REMAccount"8@"NSDictionary"16
B24@?0@"REMList"8@"NSDictionary"16
updateAccount:
-[NEKReminderStore updateSource:store:]_block_invoke
updateCalendar:
-[NEKReminderStore updateCalendar:store:]_block_invoke
-[NEKReminderStore handleReminderWithUniqueIdentifierFromGizmo:saveRequest:list:wrapper:]
-[NEKReminderStore performUpdateWithICSWrappers:store:session:]
v32@?0@"NSData"8Q16^B24
v16@?0^B8
v28@?0@"REMObjectID"8i16^B20
@"NSDictionary"16@?0@"NSArray"8
storeWrapperForCloudKitAccount
v36@?0@"REMObjectID"8@"REMAccount"16i24^B28
listWrappersForChangeSet
v36@?0@"REMObjectID"8@"REMList"16i24^B28
ICSWrappersForChangeSet(Reminders)
v36@?0@"REMObjectID"8@"REMReminder"16i24^B28
-[NEKReminderStore _deleteAccountWithIdentifier:store:]
-[NEKReminderStore _deleteListWithIdentifier:store:]
-[NEKEventChangeObserver databaseDidChange]
-[NEKEventChangeObserver allSourcesInto:]
-[NEKEventChangeObserver allCalendarsInto:]
-[NEKEventChangeObserver allEventsInto:filter:window:]
-[NEKEventChangeObserver allRemindersInto:filter:window:]
allRemindersInto:filter:window:
/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/NEKSyncBundle/Models/NEKEventChangeObserver.m
-[NEKEventChangeObserver fetchEventChangeSet]
Fetching changes took a long time
Inserts:
Updates:
Deletes:
-[NEKEventChangeObserver _fetchChangesInto:from:inside:]_block_invoke
v44@?0B8q12@"NSArray"20@"NSArray"28@"NSArray"36
-[NEKEventChangeObserver previousDefaultTaskCalendar]
-[NEKEventChangeObserver setPreviousDefaultTaskCalendar:]
v16@?0@"EKObjectID"8
ICSData
calendarItemCount
metadataKeys
metadataValues
syncID
taskCompletionDate
oldIdentifier
nuevoIdentifier
lzfseICSData
duplicateCheck
occurrenceCache
<NEKSourceAttributes (%p)
  name: %@
  defaultAlarmOffset: %@
  type: %d
  isEnabled: %d
  isFacebook: %d
  usesSelfAttendee: %d
  constraintsDescriptionPath: %@
  externalModificationTag: %@
  creatorBundleID: %@
  creatorCodeSigningIdentity: %@
  accountPersistentID: %@
  supportsSharedCalendars: %d
  allowsTasks: %d
  allowsEvents: %d
  allowsCalendarAddModifyDelete: %d
  onlyCreatorCanModify: %d
  snoozeAlarmRequiresDetach: %d
  supportsAlarmAcknowledgedDate: %d
  isLocalStore: %d
  isBirthdayStore: %d
uuid
summary
calendar
date
reminderListId
-[NEKReminderChangeObserver storeDidChange]
-[NEKReminderChangeObserver allCloudKitAccountsInto:]
-[NEKReminderChangeObserver allListsInto:]
-[NEKReminderChangeObserver allRemindersInto:filter:window:]
v24@?0@"REMReminder"8^B16
/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/NEKSyncBundle/Models/NEKReminderChangeObserver.m
-[NEKReminderChangeObserver fetchReminderChangeSet]
markedForDeletion
_fetchChangesInto(Reminders)
ReminderKit: Inserts: 
ReminderKit: Updates: 
ReminderKit: Deletes: 
v60@?0B8@"NEKReminderChangeTrackingStateMap"12@"NSArray"20@"NSArray"28@"NSArray"36@"NSDictionary"44@"NSDictionary"52
com.apple.eventkitsync.changeobserver.reminderkit.sequencenumber
-[NEKReminderChangeObserver previousDefaultReminderListID]
<%@: %p: %@, %@>
B24@?0@"REMAccount"8@16
B16@?0@"NSArray"8
@"NEKReminderChangeTrackingState"16@?0@"REMAccount"8
B24@?0@"REMChangeObject"8@"NSDictionary"16
list
v32@?0@"REMObjectID"8@"NEKReminderChangeTrackingState"16^B24
<%@: loaded:%@ - active:%@>
REMNSPersistentHistoryToken
_REMChangeUniversalToken
loadedChangeTokenMap
eventIdentifier
eventTitle
eventStart
calendarTitle
span
-[NEKEventPurger finalizeDatabasesAfterResetSync]
%@<%p>
xpc_activity
WaitingForActivityCheckinFromFireIn
WaitingForActivityCheckinFromFireOnConnection
CHECK_IN
WAIT
DEFER
CONTINUE
DONE
OUT_OF_BOUNDS
syncId
status
NEKPBOccurrenceCache
NSCopying
NEKICSWrapperMetadata
NEKICSWrapper
SYChange
NSObject
NEKStatTracker
EventKitSync
EventKitAdditions
NEKEnvironment
NEKCalendarWrapper
Reminder
NEKPBSourceID
Event
NDTSQException
NDTSQFile
NSCacheDelegate
NDTSQActor
NEKPBCalendarWrapper
EKObject_EventKitSync
NEKStore
Reminders
NEKPBCalendarAttributes
NEKTinyStore
NDTMessage
NDTMessaging
IDSServiceDelegate
NEKValidationWrapper
NDTSQKeyValueStore
NEKPBDuplicateSource
NEKAnalyticsReporter
_NEKSyncSet
NEKEventStore
NEKSack
NEKSyncCoordinator
PSYSyncCoordinatorDelegate
NEKPBValidationWrapper
NEKPreferencesObserver
NEKSessionAnalyticsStore
NDTCrashSynthesizer
NEKRPCEndpoint
NEKAnalyticsDriver
NDTActivityDelegate
NEKDeletionWrapper
NEKDaemon
NDTLogFacility
NDTLog
NEKSourceChangeAggregator
KeepItSimple
NEKSyncWindow
NEKRecordMap
NEKPBSetReminderComplete
NEKCalendarID
NEKPBSourceAttributes
NEKProgressLiar
NEKTestControlProtocol
NEKTestControl
NSXPCListenerDelegate
NEKOccurrenceCacheDumper
NEKDatabaseFileManager
NEKSessionAnalytics
NDTSQStatement
NEKChangeObserver
NEKCapabilities
NEKPBDuplicateCheck
NEKReminderChangeSet
NEKEventChangeSet
NEKSeenMap
NDTResultsFIFO
NEKSyncController
NEKChangeObserverDelegate
SYServiceDelegate
NEKPBProtoBuffMessage
NEKSourceWrapper
NEKChangeSet
NEKCalendarAttributes
NEKSourceID
NEKPBCalendarIdentifier
NEKResultsFetcher
NEKPBICSWrapperMetadata
NDTObjectCache
NEKPBDuplicateCalendar
NEKSyncSession
SYSessionDelegate
NDTPerf
NEKPBSetAlarmSnooze
NEKProtobufSerializer
SYChangeSerializer
NEKReminderStore
NEKEventChangeObserver
NEKPBICSWrapper
NEKPBDailyAnalytics
NEKSourceAttributes
NDTSQSchema
NEKPBItemOccurrence
NEKResultsPipe
NEKReminderChangeObserver
NEKReminderChangeTrackingState
NEKReminderChangeTrackingStateMap
NSSecureCoding
NSCoding
NEKPBDeleteEvent
NEKEventPurger
NEKStoreRoller
NDTActivity
NEKPBDeletionWrapper
NEKPBSetParticipantStatus
NEKPBSourceWrapper
#16@0:8
@24@0:8^{_NSZone=}16
v24@0:8d16
v20@0:8B16
B16@0:8
v16@0:8
v24@0:8@16
Q16@0:8
@24@0:8Q16
@16@0:8
B24@0:8@16
d16@0:8
@"NSMutableArray"
{?="end"b1"start"b1}
v24@0:8Q16
q16@0:8
v24@0:8q16
@"NSString"
@"NSDate"
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8@16
v32@0:8@16@24
v28@0:8B16@20
v32@0:8Q16@24
v32@0:8q16@24
q24@0:8@16
v24@0:8@?16
Q24@0:8@16
@"NSData"
@"NEKCalendarID"
@"NSDictionary"
@"NSMutableDictionary"
@48@0:8@16@24d32d40
d24@0:8d16
@"NEKEnvironment"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSCondition"
@"NEKSyncController"
@"NEKDatabaseFileManager"
@"NEKTinyStore"
@"NEKRecordMap"
@"NEKSeenMap"
@"NEKSyncCoordinator"
@"NEKSessionAnalytics"
@"NEKDaemon"
@40@0:8@16@24@32
@"NEKSourceID"
@"NEKCalendarAttributes"
v64@0:8@16@24@32@40@48@56
v40@0:8@16@24@32
v60@0:8@16@24@32B40@44@52
{?="isLocalStore"b1}
@32@0:8@16@24
v32@0:8@"NSCache"16@24
v32@0:8@16@?24
v24@0:8@"NSString"16
v32@0:8@"NSString"16@?<i@?@"NDTSQStatement">24
@36@0:8@16@24B32
@32@0:8@16^i24
v32@0:8@16q24
^{sqlite3=}16@0:8
v24@0:8^{sqlite3=}16
@"NSObject<OS_dispatch_queue>"
@"NSMutableOrderedSet"
@"NDTSQKeyValueStore"
@"NSObject<OS_dispatch_source>"
@"NSHashTable"
^{sqlite3=}
@"<NDTSQFileDelegate>"
@"NEKPBCalendarAttributes"
@"NEKPBSourceID"
{?="isDefaultEventCalendar"b1"isDefaultTaskCalendar"b1}
@"<NEKChangeObserver>"
v20@0:8i16
i16@0:8
{?="invitationStatus"b1"sharingInvitationResponse"b1"sharingStatus"b1"supportedEntityTypes"b1"displayOrder"b1"canBePublished"b1"canBeShared"b1"hasBeenAlerted"b1"isDefaultCalendarForStore"b1"isFamilyCalendar"b1"isHidden"b1"isHolidayCalendar"b1"isIgnoringEventAlerts"b1"isIgnoringSharedCalendarNotifications"b1"isImmutable"b1"isInbox"b1"isNotificationsCollection"b1"isPublished"b1"isReadonly"b1"isSchedulingProhibited"b1"isSharingInvitation"b1"isSubscribed"b1}
q32@0:8@16q24
B40@0:8q16q24@32
v32@0:8d16@24
d32@0:8@16d24
@"NDTSQFile"
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v40@0:8@16@24@?32
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32@"IDSMessageContext"40
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v20@0:8I16
@48@0:8@16@24@32^@40
v40@0:8@16@?24@?32
@"IDSService"
@"NDTLogFacility"
@"NSArray"
v40@0:8^@16^@24@32
v48@0:8@16q24@32@40
B68@0:8@16@24@32@40q48@56B64
B56@0:8@16@24@32q40@48
@40@0:8@16@24^@32
v36@0:8@16B24@28
@28@0:8@16B24
B40@0:8@16@24@32
B32@0:8@16@24
v68@0:8@16@24@32B40@44@52@60
v32@0:8@"PSYSyncCoordinator"16@"PSYServiceSyncSession"24
v24@0:8@"PSYSyncCoordinator"16
@"PSYServiceSyncSession"
@"PSYSyncCoordinator"
{?="endDate"b1"masterCount"b1"occurrenceCount"b1"startDate"b1"showAlert"b1}
@"NSObject<OS_os_log>"
@"NPSManager"
@"NPSDomainAccessor"
@"EKPreferences"
v24@0:8^{NEKAnalyticsTally=iiii}16
v28@0:8^{NEKAnalyticsTally=iiii}16i24
@28@0:8B16@20
v48@0:8q16q24@32@40
v72@0:8@16@24d32@40@48@56q64
v44@0:8B16@20@28@36
v56@0:8d16@24@32@40@48
B40@0:8@16@24d32
@"NDTMessaging"
*24@0:8@16
v24@0:8@"NDTActivity"16
*24@0:8@"NDTActivity"16
v32@0:8@"NDTActivity"16@"NSObject<OS_xpc_object>"24
@"NDTActivity"
@36@0:8@16@24i32
@"NEKPreferencesObserver"
v40@0:8Q16@24@32
@"NSSet"
@"EKEventStore"
B24@0:8d16
@"NSTimeZone"
v64@0:8@16q24@32@40d48@56
{?="isComplete"b1}
I16@0:8
{?="defaultAlarmOffset"b1"type"b1"allowsCalendarAddDeleteModify"b1"allowsEvents"b1"allowsTasks"b1"isBirthdayStore"b1"isEnabled"b1"isFacebook"b1"isLocalStore"b1"onlyCreatorCanModify"b1"snoozeAlarmRequiresDetach"b1"supportsAlarmAcknowledgedDate"b1"supportsSharedCalendars"b1"usesSelfAttendee"b1}
@32@0:8d16@24
v24@0:8@?<v@?@"NSString">16
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"NSXPCListener"
B40@0:8@16@?24@32
@"NEKSessionAnalyticsStore"
i24@0:8q16
i24@0:8Q16
i24@0:8@16
i24@0:8d16
v24@0:8^{sqlite3_stmt=}16
^{sqlite3_stmt=}16@0:8
^{sqlite3_stmt=}
@"NEKEnvironment"16@0:8
@"<NEKChangeObserverDelegate>"16@0:8
v24@0:8@"<NEKChangeObserverDelegate>"16
@"<NEKChangeObserverDelegate>"
v36@0:8i16#20@?28
@32@0:8q16@24
@"NSError"
v24@0:8@"<NEKChangeObserver>"16
B40@0:8@16@24^@32
v48@0:8@16@24@32@?40
v28@0:8@16B24
B40@0:8@"SYService"16@"SYSession"24^@32
v40@0:8@"SYService"16@"SYSession"24@"NSError"32
v40@0:8@"SYService"16@"NSData"24@?<v@?B@"NSError">32
v48@0:8@"SYService"16@"NSInputStream"24@"NSDictionary"32@?<v@?B@"NSError">40
v40@0:8@"SYService"16@"NSError"24@"NSDictionary"32
@"SYSession"40@0:8@"SYService"16@"SYSession"24@"SYSession"32
v40@0:8@"SYService"16@"NSUUID"24@"NSUUID"32
v28@0:8@"SYService"16B24
v24@0:8@"SYService"16
v32@0:8@16^{StartSessionResults=BB@}24
d24@0:8q16
@"SYService"
@"NEKStore"
@"NEKSyncSession"
@"NEKAnalyticsDriver"
@"NEKStatTracker"
@"NEKRPCEndpoint"
@"NEKProgressLiar"
@"NEKTestControl"
@"<NEKSyncControllerDelegate>"
@"NEKPBCalendarWrapper"
@"NEKPBDeleteEvent"
@"NEKPBDeletionWrapper"
@"NEKPBICSWrapper"
@"NEKPBSetAlarmSnooze"
@"NEKPBSetParticipantStatus"
@"NEKPBSetReminderComplete"
@"NEKPBSourceWrapper"
@"NEKPBValidationWrapper"
{?="packetNumber"b1}
@"NEKSourceAttributes"
@?16@0:8
@"NSURL"
{?="isDefaultLocalCalendar"b1}
@"NEKEventChangeObserver"
@"NEKReminderChangeObserver"
@"NEKEventStore"
@"NEKReminderStore"
@"NSThread"
@"NSObject<OS_dispatch_semaphore>"
{?="attendeeStatus"b1"entityType"b1"invitationStatus"b1"locationPredictionState"b1"properInvitationStatus"b1"startDate"b1"invitationChangedPropertyFlagAttendeeComment"b1"invitationChangedPropertyFlagAttendeeStatus"b1"invitationChangedPropertyFlagDate"b1"invitationChangedPropertyFlagLocation"b1"invitationChangedPropertyFlagTime"b1"invitationChangedPropertyFlagTitle"b1}
@24@0:8q16
I40@0:8@16@?24^@32
B32@0:8@16^@24
I40@0:8@"SYSession"16@?<B@?@"<SYChange>">24^@32
v40@0:8@"SYSession"16@"NSArray"24@?<v@?B@"NSError">32
v32@0:8@"SYSession"16@"NSError"24
B32@0:8@"SYSession"16^@24
v32@0:8@"SYSession"16@?<v@?B@"NSError">24
v32@0:8@"SYSession"16@"NSSet"24
^{ct_green_tea_logger_s=}
@"NEKValidationWrapper"
@"NEKResultsPipe"
@"NEKResultsFetcher"
@"NDTPerf"
{?="snoozeAmount"b1}
@32@0:8@16q24
@40@0:8@16q24q32
@"NSData"24@0:8@"<SYChange>"16
@"<SYChange>"32@0:8@"NSData"16q24
@"NSData"24@0:8@"<SYObject>"16
@"<SYObject>"24@0:8@"NSData"16
@"NSData"32@0:8@"<SYChange>"16q24
@"<SYChange>"40@0:8@"NSData"16q24q32
v52@0:8@16i24#28@?36@?44
v44@0:8@16@24i32@?36
v44@0:8@16@24B32@36
@"NSMapTable"
v36@0:8@16i24@28
@"NEKPBCalendarIdentifier"
{?="displayOrder"b1"taskCompletionDate"b1"calendarItemCount"b1}
@"NEKPBDuplicateCheck"
@"NEKPBOccurrenceCache"
@"NSNumber"
{?="date"b1}
B56@0:8@16@24@32^@40^@48
@"NEKReminderChangeTrackingStateMap"
@"REMChangeTracking"
@"REMChangeToken"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^@16
v48@0:8@16@24@?32@?40
{?="eventStart"b1"span"b1}
r*16@0:8
v24@0:8r*16
@"<NDTActivityDelegate>"
@"NSObject<OS_os_transaction>"
@"NSObject<OS_xpc_object>"
{?="type"b1}
{?="span"b1"status"b1}
@"NEKPBSourceAttributes"
Setting ICS, len:%d
Error fetching local account: %{public}@
Error fetching lists in local account: %{public}@
Read in location for a reminder
Adding ICS to wrapper to send: %{public}@
Setting task with identifier %{public}@ as completed, completion date is %{public}@
Reminder %{public}@ does not have daCalendarItemUniqueIdentifier. Falling back to use REMObjectID.
Setting all properties on %@, identifier: %{public}@
Setting minimal properties on %@, identifier: %{public}@
Can't create canonical unique identifier for reminder %{public}@. Identifier returned by REMReminder is %{public}@
Unable to create UUID for %s %{public}@
Error fetching account. Account's persistent ID: [%{public}@]
Converting old plist state
Done converting old plist state
dataWithContentsOfFile gave us nothing
propertyListWithData gave us nothing. Error: %{public}@
_rawSendData assigned IDS identifier: %@
_rawSendData has an error: %{public}@
_rawSendFile assigned IDS identifier: %@
_rawSendFile has an error: %{public}@
No identifier returned. Error: %{public}@
Incoming reply message but no handler registered.
Can't find a handler for this message
didSend:%c IDS id: %{public}@, error: %{public}@
Validation failure. Local: %@ Remote: %@
Validation faulting on second failure: Local: %@ Remote: %@
Validation succeeded, %@.
Called with nil recordID or nil event store
Event deletion wrapper: %{public}@ -> %{public}@
Analytics detected excess calendar item on watch, identifier: %{public}@, timestamp: %9.0f
Analytics detected missing calendar item on watch, identifier: %{public}@, timestamp: %9.0f
Memory delta from save: %lld #perf
Event database save time: %fs #perf
Error saving EventKit database: %{public}@
Database changes saved successfully
%{public}s: Ignoring EventKit code path for getting default task calendar
_shouldSendEvent: Got a nil identifier for event: %p
Entity with summary %{public}@ identifier %{public}@ is a phantom master.  Ignoring.
_shouldSendEvent: Entity with summary %{public}@ identifier %{public}@ is detached, master identifier is %{public}@
_shouldSendEvent: Entity with summary %{public}@ identifier %{public}@ is detached, but can't get master, so using the actual detached event
No calendar for event with summary %{public}@ identifier %{public}@, event won't be tracked for sending duplicates, but we'll soldier on and likely fail somewhere later down the line.
Calendar identifier is nil for event %{public}@ identifier %{public}@. This is probably very bad.
Entity with summary %{public}@ and identifier %{public}@ already in set for calendar with identifier %{public}@, not sending again
Entity with summary %{public}@ and identifier %{public}@ not in set for calendar with identifier %{public}@, adding
Identifier is nil after much fiddling. Perhaps the master identifier is to blame?
Selecting reminder %{public}@
Fetched source via ID %{public}@ and got source:%p
NOT zapping source though I really feel like I should.
Create or update source: %{public}@, source:%p
Saving after updating a source (%{public}@) failed: %{public}@
Updated source (%{public}@) saved successfully.
No need to create source since the source [%{public}@] doesn't exist in database and the source wrapper has allowsEvents=NO
Creating non-local source
Saving after creating a source (%{public}@) failed: %{public}@
New source (%{public}@) saved successfully.
Received source wrapper that I'm not sure how to process: %{public}@
Error saving new/updated source (%{public}@): %{public}@
Update calendar: %{public}@
Error saving updated calendar (%{public}@): %{public}@
Create calendar: %{public}@
I'm refusing to create this calendar because I am a phone.
Sent calendarWrapper with no attributes, updating defaults.
%{public}s: Ignoring EventKit code path for reminder with identifier: [%{public}@]
%{public}s: Ignoring sidecar data for phantom master with identifier: [%{public}@]
Handling updated event from gizmo with summary %{public}@ and identifier %{public}@
Set self attendee status to 0x%08x for event with identifier %{public}@
Set invitation status to none for event with identifier %{public}@
Error saving database while setting event invitation status: %{public}@
No need to set attendee status, synced value is the same as existing value: 0x%08x for event with identifier %{public}@
Handling updated task from gizmo with summary "%{public}@" and identifier %{public}@
Task with identifier %{public}@ is completed, completion date is %{public}@
Saved event with identifier %{public}@, externalID is %{public}@
Failed to save event with identifier %{public}@. Error =  %{public}@
Participant status did not change. No need to save event with identifier %{public}@, externalID is %{public}@
Handling updated master event from gizmo with participationStatus %d, summary "%{public}@", and identifier %{public}@
Can't get row id for master with identifier %{public}@ to set attendee status for recurring series
Checking for calendar match for event %{public}@ with identifier %{public}@
Checking for match on calendar, we want %{public}@, calendarIdentifier is %{public}@
Handling master event from gizmo with participation status %d, summary %{public}@, and identifier %{public}@
Couldn't get master event for recurring event sequence with identifier %{public}@, but we'll check for detached events in case those are still around
Using existing detached event
Grabbing recurrence to use for detached event
Handling updated detached event from gizmo with participation status %d, summary %{public}@, and identifier %{public}@.
Failed to get/create event with identifier %{public}@ to set attendee status %d, skipping event
Failed to commit after saving recurring event series with master identifier %{public}@. Error =  %{public}@
Found event with identifer %{public}@ but in the wrong calendar.
%{public}s: No calendar item with identifier %{public}@ in calendar with identifier %{public}@
Received ICS wrapper: %{public}@
recv: %{public}@
recv LZFSE: <<!%@!>>
performUpdateWithICSWrappers: Calendar %{public}@ does not exist!
Processing update from the watch, main identifier is %{public}@
Cannot find object of type %d to update.
No calendar item found for main event in recurring series with identifier %{public}@ in calendar with identifier %{public}@
Processing add/update from companion, or a new record from the watch, id = %{public}@
Error deleting event for identifier remap: %{public}@
Item ID remapping complete: %{public}@ => %{public}@
Calendars don't match, so deleting from old calendar: old calendar id = %{public}@, current calendar id = %{public}@
Calendars match, so event didn't move: calendar id = %{public}@
Got an update/add for event "%{public}@", no old calendar id was sent, so this is from an old record map and falling back to old code to check and delete from any old calendar. The current calendar id = %{public}@
We have a recurring event %{public}@ and identifier %{public}@, checking to see if any detached events need attention
performUpdateWithICSWrappers: handling detached event %{public}@ identifier %{public}@
performUpdateWithICSWrappers received %d items
Critical error, received compressed and uncompressed data.
ICS Import: %fs #perf
We have a recurring event with summary "%{public}@" and identifier %{public}@, deleting all detached events too, since they have also moved calendars
Deleting detached event from old calendar since it has moved. Event summary "%{public}@", identifier %{public}@
No calendar for calendar identifier %{public}@
Skipping deletion for event with identifier %{public}@ in calendar with identifier %{public}@, we already detected and deleted it as part of a recurring master's detached events
Found no matches for potential deletion of calendar item %{public}@
Found multiple matches for potential deletion of calendar item %{public}@
Error deleting item: %{public}@
Changing event id from %{public}@ to %{public}@
setting externalID %{public}@ for event with identifier %{public}@
No externalID in metadata for event with identifier %{public}@
Changed date changed flag to %d for event %{public}@
Changed time changed flag to %d for event %{public}@
Changed title changed flag to %d for event %{public}@
Changed location changed flag to %d for event %{public}@
Changed attendee comment changed flag to %d for event %{public}@
Changed attendee status changed flag to %d for event %{public}@
Setting location prediction state to %d for event %{public}@
Error saving event in applySidePropertiesToEntity: %{public}@
Self attendee email is %{public}@, and uuid is %{public}@ for event with identifier %{public}@
Found self attendee for event with identifier %{public}@, email = %{public}@, address = %{public}@
No self attendee email in wrapper for event with identifier %{public}@
Determined user is organizer for event with identifier %{public}@, email = %{public}@, address = %{public}@
updateSelfAttendeeForCalendarItem saving, attendees: %d, span: %d
updateSelfAttendeeForCalendarItem save error: %{public}@
Deleteing suppression cache entry for %@
Suppressing alert due to cache hit on %@
Setting invitation status %{public}@ for event with identifier %{public}@
No invitation status in wrapper for event with identifier %{public}@
Surreptitiously adding event to changeset: %{public}@ due to attendee change
Can't create wrapper for source %@
Sending source wrapper accountPersistentID=%{public}@ isLocalStore=%d events=%d tasks=%d
Skipping hidden calendar: %{public}@
CalendarID remap detected: %{public}@ => %{public}@
Could not create calendar wrapper for entity: %{public}@
Default reminder and event calendar are the same.
Marking default task calendar in wrapper to calendar with name %{public}@, identifier %{public}@
Marking default event calendar in wrapper to calendar with name %{public}@, identifier %{public}@
publicObjectWithObjectID returned nil, objectID: %{public}@
Event %{public}@ returned a unique id of nil.
%{public}s: Ignoring EventKit code path for reminder
CalendarItem remap detected: %{public}@ => %{public}@
Decided not to send event %@
Decided not to send reminder %@
Decided not to send %{public}@
Deletion wrapper: %@
Could not create deletion wrapper for recordID: %{public}@
Deletion wrapper for source: %@
Attempt to create wrapper for unknown type: %{public}@
Error deleting source with identifier %{public}@
Deleted source with identifier %{public}@
Cannot delete source; no source exists for %{public}@
Error deleting calendar with identifier %{public}@, error: %{public}@
Deleted calendar with identifier %{public}@
Cannot delete; no calendar exists for %{public}@
Deleting event (span future) with identifier %{public}@, recordID %{public}@
Deleting event (span single) with identifier %{public}@, recordID %{public}@
Error deleting event %{public}@
Deleting event with identifier %{public}@, from calendar with identifier %{public}@
Deleting event with identifier %{public}@, from any calendar, old mapping didn't send calendar to delete from so falling back to old code
Deleting event %{public}@ failed as we were not handed an event by the store.
No event exists for %{public}@
Failure to delete reminder: %{public}@
No reminder exists for %{public}@
Updating calendar with title %{public}@, identifier %{public}@
%{public}s: Ignoring EventKit code path: mixed entity calendar is not supported
%{public}s: Ignoring EventKit code path: creating reminders calendar is not supported
Source not found with sourceID: %@
Created calendar with title %{public}@, identifier %{public}@
Asked to set a nonexistent calendar as the default. Ignoring. Calendar identifier = %{public}@, store identifier = %{public}@
wrapperForCalendarItem: Entity with identifier %{public}@ is detached, master identifier is %@
Entity with identifier %{public}@ is detached, but can't get master
Entity with identifier %{public}@ is master for a recurring series
Handling detached events for %{public}@, count=%d
LZFSE ICS: <<!%@!>>
self attendee status is 0x%08x for event with identifier %{public}@
Setting all properties on %@, identifier: %{public}@, attendees: %d
Setting minimal properties on %@, identifier: %{public}@, attendees: %d
Can't create canonical unique identifier for event %{public}@. Identifier returned by CalCalendarItemCopyUniqueIdentifier is %{public}@
NEKSyncCoordinator initialized %@
%{public}s:%d %s --mark--
Restriction is now %{public}s
Migrated prefs; version %zd -> %zd
Rebroadcast pref for key %{public}@
Synced prefs for keys %{public}@
Received weird session type: %d
Incoming message missing required body.
Local store ID %@, remote store ID %@
itemIdentifier: %@, event: <%p>
Failure to save event: %{public}@
_recvSetParticipantStatusEndpoint ignored
Cannot finder reminder '%{public}@:%{public}@'
Failure to save reminder: %{public}@
Reminder saved successfully.
_recvSetEventKitReminderCompletedEndpoint ignored
_recvSetReminderKitReminderCompletedEndpoint ignored
Failure to delete event %@: %{public}@
I have %d candidate events so I'm not sure what to delete.
_recvDeleteEventEndpoint ignored
Snooze Reminder: time:%.1f calendar: '%{public}@' reminder: '%{public}@' externalId: %@
No reminder alarm found
Snooze Event: time:%.1f calendar: '%{public}@' itemIdentifier: %@ event: <%p> local store ID: %@, remote store ID: %@
Event saved successfully.
No event alarm found
_recvSetEventKitAlarmSnoozeEndpoint ignored
_recvSetReminderKitAlarmSnoozeEndpoint ignored
Found reminder %{public}@:%{public}@
Cannot find reminder %{public}@:%{public}@
Sending analytics blob (%d bytes), IDS identifier %{public}@, result: %d
Failure to deserialize analytics data from watch
Failure to initialize SQL log: %@, userInfo: %@
== Started EventKitSync_Sim-394
Pairing ID: %{public}@
Pre prefs observer init
Post prefs observer init
_blockUntilUnlock returned
Beginning XPC transaction for com.apple.notifyd.matching notification named %{public}@
Launched from IDS
Triggering full sync for testing notification %{public}@
Thinking about a migration sync.
SignificantTimeChange incremental sync
SignificantTimeChange ignored
Calling pref observer for notification: %{public}@
Ending XPC transaction for com.apple.notifyd.matching notification named %{public}@
Analytics activity
Failed to set done state
%s: Registered for XPC activity.
Registered for notifications.
Received full sync command from NEKSyncCoordinator.
Prefs synced.
Starting sync controller.
Received reunion sync command.
Creating sync controller
Assigning sync controller
Starting sync controller
Cannot determine calendar identifier for reminder %{public}@. Deletion wrapper will be sent but the remote device may not be able to delete the reminder
Failed to fetch account with identifier %{public}@
Attempting to send source wrapper for CloudKit reminders account %{public}@ with allowsEvents=YES but the other side does not support CloudKit. This is not expected but is handled by sending a source wrapper with allowsEvents=YES and allowsTasks=NO.
Attempting to send source wrapper for CloudKit reminders account %{public}@ with allowsEvents=NO but the other side does not support CloudKit. Dropping this source wrapper and it will not be sent.
Sending %{public}@ reminder-only EKSource %{public}@ with REMAccount %{public}@
Performing a priori deletion of calendar %{public}@
Deletion of calendar %{public}@ didn't go so well: %{public}@
Error committing store after preemptive deletion of calendars: %{public}@
Successful save after deleting very suspicious calendars.
Starting configuration of source with persistent ID: [%{public}@].
Source's 'name' has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'defaultAlarmOffset' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'type' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'enabled' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's '%@' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'usesSelfAttendee' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'constraintsDescriptionPath' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'externalID' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'creatorBundleID' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'creatorCodeSigningIdentity' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'accountPersistentID' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'supportsSharedCalendars' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'allowsTasks' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Skipping deletion of task calendar as we are on the phone.
Source's 'allowsEvents' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Skipping deletion of event calendar as we are on the phone.
Source's 'allowsCalendarAddDeleteModify' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'onlyCreatorCanModify' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'snoozeAlarmRequiresDetach' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'supportsAlarmAcknowledgedDate' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Completed configuration of source with persistent ID: [%{public}@].
Sorry. Unable to determine identifier or resolve EKSource object for EKObjectID %{public}@
Source with ID %{public}@ does not exist. This is unexpected for update/insert. Skipping.
Source with ID %{public}@ (%@) updated. Going to send wrapper for this source.
EKSource %{public}@ (%@) is still available due to one of the event/reminder dataclass still enabled. Treating this as an update to send wrapper for dataclass updates.
Deleted source/account %{public}@ is not available anymore. Going to send delete wrapper for this source
Window: start: %{public}@ end: %{public}@, isFullSync: %d
Asked for incremental sync window when there was no/incomplete previous sync window data
Rejected event: %{public}@ %{public}@
Rejected reminder: %{public}@ %{public}@
Accepting unknown entity: %{public}@
event not in future: %{public}@ "%@"
reminder not in future: %{public}@
Migrating recordMap to version 1.
Migrating recordMap to version 2.
Migrating recordMap to version 3.
read id:%{public}@ %d/%d/%d
Attempt to save a nil identifier: %d/%d
set id:%{public}@ %d/%d/%d
Deleting everything from record map
eT:%d eR:%d eD:%d id:%{public}@ m:%d
Lying about progress: %0.2f%%
doneForRealNotifyingPairedSync: %d
Returning suggested db path: %@
Creating REMAccount with id:%{public}@ type:%@ name:%@
Error creating account. Source's persistent ID: [%{public}@]
UNSUPPORTED: Local source's 'name' has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'defaultAlarmOffset' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'type' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'enabled' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's '%@' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'usesSelfAttendee' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'externalID' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'externalModificationTag' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'creatorBundleID' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'creatorCodeSigningIdentity' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'accountPersistentID' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'supportsSharedCalendars' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'allowsTasks' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Updating local account .inactive to %{public}@.
Deleting account with identifier %{public}@.
UNSUPPORTED: Source's 'allowsEvents' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'allowsCalendarAddDeleteModify' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'onlyCreatorCanModify' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'snoozeAlarmRequiresDetach' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'supportsAlarmAcknowledgedDate' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Unknown account type %ld
Unexpected constraint plist path from ReminderKit account: %@
Flushing to CoreAnalytics
Daily tally: D: %d R: %d F: %d
Terminating enumeration early
Sqlite create failed, path: %s, error: (%d)
Sqlite statement prepare failed for "%{public}s"
NEKSqueeze failed to initialize
NEKSqueeze failed to compress
Compressed ICS %d->%d %.01f%%
NEKFluff failed to initialize
NEKFluff failed to uncompress
ReminderKit enabled.
ReminderKit disabled.
Remote system build version: %{public}@
New NEK.SYService queue: %p
Shutting down existing SYService: %p
Selecting file transfer engine
Selecting data messaging engine
Failed to resume SYService: %{public}@
Started new SYService: %p
Enqueueing a full sync
Enqueueing a delta reunion sync
Reunion sync with faults- Forcing full sync
Poking CS for nightly sync
Nightly sync requested but we have faults. Ignoring request.
Requested migration sync
Migration number is fine, no migration sync needed.
Migration check dropped.
Looks like I could use a reset but it turns out we're already standing right in the middle of one, so let's just move on.
Retrying a failed sync (%d) (reset)
Retrying a failed sync (%d) (delta)
Retrying a deferral.
_retrySync called but we have no faults. We're perfect!
%{public}@
Handling task list.
Handling calendar.
Calendar/list "%{public}@"/%{public}@ has entitySupportType %d
Recevied calendar wrapper without attributes and without default selection: "%{public}@"/%{public}@
Attempting to set a default calendar or list
Assuming mixed entity NEKICSWrapper comes from EventKit
object is not of recognized class: %{public}@
Got a deletion wrapper from SYStore: %{public}@
passed weird class: %{public}@
Decided to prefer reset session over delta.
Winning session: %{public}@, losing session: %{public}@
%{public}s %{public}@ #%{public}@ #%{public}@
Session start call not balanced. This is a fatal condition.
Locking session idle queue.
StartSession result: %d
No session created so declaring completion to PSYSync
Deferrability: %d
Delta sync fired but it really wants to be a reset sync.
Change set was empty, not starting a sync session.
Change set is deferrable, not starting session.
Retry is overdue and we need a reset. Forcing things along.
We were denied delta sync effort but there is no backup due date. Scheduling retry based on current faultCount/connectedState
Sync request ignored: isReset: %d isNightly: %d clearToDelta: %d
Session timeout: %.02f
perMessageTimeout: %d
Before timeout stats: x=%.02f sigma=%f
Comically long session timeouts enabled!
Comically short session timeouts enabled!
XPC activity deferral requested.
Remote engine requirement zapped.
This pipe better be dead: %{public}@
Session is nil during sessionEnded.
service.currentSession is nil, clearing user session.
Current session [%{public}@] != ending session [%{public}@]. Error: %{public}@ Dropping notificaiton on floor.
Resuming session idle queue
Fatal: sessionEnd call not balanced.
Send complete with error: %{public}@
SendingSession: %{public}@ error: %{public}@ cpuTime: %.02fms
There was a sync error%{public}@.
Failed session was a %{public}s so setting up retry to be a reset.
SYErrorCanceled (deferral/collision)
LostCollisionTest error, retry should already be scheduled.
Post failure update sync timings: x=%.02f sigma=%f
Looks like I didn't schedule  retry. That's bad.
Following nightly sync with request for delta
Post success update sync timings: elapsed=%.02f x=%.02f sigma=%f
Before join.
After join.
ReceivingSession: %{public}@ error: %{public}@ cpuTime: %.02fms
Session walltime breakdown (ms): %llu store, %llu calendar, %llu events, %llu reminders.
Recv complete with error: %{public}@
Remove all items
Poking CS for delta sync
Delta sync request suppressed
Change log truncation is making us request a reset
Reset sync request suppressed
For %{public}@ we are sending attendee stats (ek %d, wire %d)
For %{public}@ setting attendee status to (wire %d, ek %d)
fetchEverythingIntoPipe:PipeBefore: %{public}@
%{public}s: All things pushed successfully
fetchEverythingIntoPipe:PipeAfter: %{public}@
fetchNightlyIntoPipe:PipeBefore: %{public}@
%{public}s: All nightly things pushed successfully
fetchNightlyIntoPipe:PipeAfter: %{public}@
Finishing pipe (empty changesets): %p
Finishing pipe. Changeset is deferrable.
fetchChangesIntoPipe:PipeBefore: %{public}@
fetchChangesIntoPipe:PipeAfter: %{public}@
Default local list does not exist
Cannot find list for identifier %{public}@
Starting configuration of list with UUID: [%{public}@].
UNSUPPORTED: List's 'UUID' has changed from [%@] to [%@].  List's UUID: [%{public}@]
List's 'title' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isReadOnly' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isHidden' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isImmutable' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isInbox' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isNotificationsCollection' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isSharingInvitation' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isSubscribed' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isHolidayCalendar' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isFamilyCalendar' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isIgnoringEventAlerts' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isIgnoringSharedCalendarNotifications' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isSchedulingProhibited' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isDefaultCalendarForStore' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'digest' has changed from [%@] to [%@].  List's UUID: [%{public}@]
List's 'symbolicColorName/colorString' has changed from [%@/%@] to [%@/%@].  List's UUID: [%{public}@]
List's 'displayOrder' has changed from %ld to %d.  List's UUID: [%{public}@]
UNSUPPORTED: List's 'sharingStatus' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'sharedOwnerName' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'sharedOwnerAddress' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'sharingInvitationResponse' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'publishedURL' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'canBePublished' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'canBeShared' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isPublished' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'externalID' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'externalIdentificationTag' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'daSyncToken' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'externalModificationTag' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'externalRepresentation' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'invitationStatus' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'notes' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'subCalAccountID' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'pushKey' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'selfIdentityDisplayName' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'selfIdentityEmail' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'selfIdentityAddress' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'selfIdentityFirstName' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'selfIdentityLastName' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'ownerIdentityDisplayName' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'ownerIdentityEmail' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'ownerIdentityAddress' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'ownerIdentityFirstName' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'ownerIdentityLastName' has changed from [%@] to [%@].  List's UUID: [%{public}@]
Completed configuration of list with UUID: [%{public}@].
Change exceeded batch size. Will catch next batch.
Enqueued last change, pipe error: %{public}@
Enqueing validation message.
Not enqueuing validation message as the population shifted during sync.
Sending events
Applying changes
Sync disabled. Dropping changes on floor.
Deserialization failed.
Hit ICS batch import capacity.
Picking up final ICS batch import, %d items.
Calling sync session completion.
Sync disabled. Ignoring reset request.
Calendar "%@"/%{public}@ supports no entity types.
didCalendarChange: title:%{public}@ identifier:%{public}@
didCalendarChange: local->syncToken:%{public}@ externalModificationTag:%{public}@ externalIdentificationTag:%{public}@
didCalendarChange: incmg->syncToken:%{public}@ externalModificationTag:%{public}@ externalIdentificationTag:%{public}@
No changes for calendar with title %{public}@, identifier %{public}@
_calendarPropertyIsEqualToAttributeProperty: Calendar and attributes property %{public}@ are different: (calendar) %{public}@ != (attributes) %{public}@
dataWithSYChange: serializing object of class: %{public}@ S_PKT_NUM:%04x_%04x
Sending reminder with location
SYChangeWithData - unrecognized type: %{public}@
SYChangeWithData: returning object of type: %{public}@ R_PKT_NUM:%04x_%04x
Transport number gap detected. Might be a problem, might not.
Could not create wrapper object
Error saving save request %@: %{public}@
Purge deleted object is not supported on this platform. Ignoring.
Reminders database save time: %fs #perf
Can't create save request for nil store. Using a fresh REMStore to avoid crashing, but this won't be correct.
Save request created with needsPurgeDeletedObjectsAfterSave=YES. The next save will be slow.
Received reset sync. Resetting change tracking state map to %{public}@
Error fetching accounts: %{public}@
Skip deleting list in CloudKit account with ID %{public}@
Error fetching lists: %{public}@
Selecting reminder (id=%{public}@, calendarUniqueId=%{public}@)
Error fetching account with ID: [%{public}@]
Reminders: Create or update account: %{public}@
Reminders: Account (%{public}@) saved successfully.
Reminders: Saving after updating an account (%{public}@) failed
Reminders: No need to create account since the account [%{public}@] doesn't exist in database and the source wrapper has allowsTasks=NO
Received source wrapper without corresponding REMAccount: %{public}@
Error fetching list with ID: [%{public}@]
Update list: %{public}@
List (%{public}@) saved successfully.
Error saving updated list (%{public}@)
Create list: %{public}@
New list (%{public}@) saved successfully.
Error saving new list (%{public}@)
Unknown deletion wrapper: %{public}@
Handling updated reminder from gizmo with summary "%{public}@" and identifier %{public}@
Reminder with identifier %{public}@ is completed, completion date is %{public}@
Received ICS wrappers with the same identifier %{public}@ in the same batch. Deduplicating. 
Going to build list cache for IDs %{public}@
Built list cache for wrappers %{public}@
Received ICS wrappers with the same identifier %{public}@ in the same batch
Going to build reminder cache for IDs %{public}@
Failed to batch fetch reminders with calendar item unique ID %{public}@. error=%@
Built reminder cache for wrappers %{public}@
List %{public}@ does not exist. Skip processing this wrapper.
Processing add/update from companion, or a new record from the watch
Got an update/add for reminder, old list id = %{public}@, current list id = %{public}@
Lists don't match, so deleting from old list: old list id = %{public}@, current list id = %{public}@
Lists match, so reminder didn't move: old list id = %{public}@, current list id = %{public}@
Got an update/add for reminder "%{public}@", no old list id was sent, so this is from an old record map and falling back to old code to check and delete from any old list. The current list id = %{public}@
Reminder for identifier %{public}@ not found (%@)
No ReminderChangeItem was created. ICS importing failed?
Input to _ensureReminderInList is nil (%@, %@, %@). Skipping.
Unexpected wrapper type %lu for identitifer %{public}@
Found no matches for potential deletion of moved reminder %{public}@ with error %@
Failed to batch fetch account %{public}@ %@
Fetched account batch: %{public}@ %{public}@
Failed to batch fetch list %{public}@ %@
Fetched list batch: %{public}@ %{public}@
Failed to batch fetch reminder %{public}@ %@
Fetched reminder batch: %{public}@ %{public}@
Skipping storeWrapperForCloudKitAccount as changeSet is empty
Failed to create source wrapper for CloudKit account %{public}@
Sending source wrapper for CloudKit account %{public}@
Skipping listWrappersForChangeSet as changeSet is empty
Failed to fetch list %{public}@. Unable to create wrapper.
Marking default list in wrapper to list with name %{public}@, identifier %{public}@
Skipping remindersWrappersForChangeSet as changeSet is empty
Failed to fetch reminder %{public}@. Unable to create wrapper.
Deleting account with identifier %{public}@
Cannot delete; no account exists for identifier %{public}@
Cannot delete; account with identifier %{public}@ is a local account
Cannot delete; account with identifier %{public}@ is a local internal account (this is unexpected)
Cannot delete; no list exists for identifier %{public}@
Cannot delete; no reminder exists for identifier %{public}@
Updating list with title %{public}@, identifier %{public}@
Failed to fetch an account for reminders. This is very bad.
Created list with title %{public}@, identifier %{public}@
Asked to set a nonexistent list as the default. Ignoring. List identifier = %{public}@, account identifier = %{public}@
Error removing reminder: %{public}@
Default Calendar Changed
Ignoring delta sync request as sync coordinator says it is not time.
%{public}s: Ignoring EventKit code path for sync'ing local reminders-only source %{public}@
Sending mixed entity source %{public}@ from EventKit
shouldSyncSource: %d for %{public}@
Failed to create source wrapper for %{public}@
%{public}s: Ignoring EventKit code path for sync'ing calendar %{public}@
Sending mixed entity calendar %@ from EventKit
Pipe finished, exiting allEventsInto loop.
publicObjectWithObjectID returned nil. ObjectID: %{public}@
Reading events
allEventsInto:filter:window: pushed %d items.
%{public}s: Ignoring EventKit code path for sync'ing reminders
Pulled -1 from lastSequenceNumber.
%{public}s: Saw sequence number failure already. Still waiting for corrective sync to complete.
Previous sequence number: %d, current sequence number: %d, delta: %d
Change log numbers went backward, forcing full sync (phone only)
Fetch duration: %.2f
Aggregate changelog: %{public}@
Change log truncated
fetchChangesInto: Fetching default calendars
fetchChangesInto: Changed default task calendar
fetchChangesInto: Unchanged default task calendar
fetchChangesInto: Changed default event calendar
fetchChangesInto: Unchanged default events calendar
fetchChangesInto: Done fetching default calendars
Updates is NULL. This shouldn't happen.
EventKit: Change set is empty.
Registering for persistent change tracking: %ld
Setting anchor sequence number: %d
%{public}s: Ignoring EventKit code path for getting previous default task calendar
%{public}s: Ignoring EventKit code path for setting previous default task calendar
Error fetching reminder accounts for lists: %{public}@
Pulled nil from changeTrackingStateMap.
Timed out trying to fetch changes from database.
Synthesizing delete for REMAccount %{public}@
Previous sequence number: %@
Current sequence number: %@
Found marked as delete reminder %{public}@
Found marked as delete list %{public}@
Unhandled object with markedForDeletion update %{public}@
fetchChangesInto: Fetching default list
fetchChangesInto: Changed default list
fetchChangesInto: Unchanged default list
fetchChangesInto: Done fetching default list
ReminderKit: Change set is empty.
Reminder fetchChanges: Timeout out waiting for database to respond.
Loaded change tracking state map %@
Saved change tracking state map %@
No previous NEKReminderChangeTrackingStateMap found
Error deserializing NEKReminderChangeTrackingStateMap archive. (%@)
Decoded NEKReminderChangeTrackingStateMap. %@
Encoded NEKReminderChangeTrackingStateMap: %@ (encoded=%@)
Tracking more than one store is not supported. Behavior is undefined.
Error fetching accounts %@
Error fetching changes for account %{public}@ with state %{public}@, assuming changes are truncated: %@
Filtered change set summary for account %{public}@ since token %{public}@: before: i=%{public}@ u=%{public}@ d=%{public}@; after: i=%{public}@ u=%{public}@ d=%{public}@
Fetched auxiliary delete change info %@ for object ID %{public}@
Old list ID %{public}@ for deleted reminder %{public}@
Fetched auxiliary move change info %@ for object ID %{public}@
Old list ID %{public}@ for moved reminder %{public}@
Error fetching auxiliary change info %@
Forward to latest change token for account %{public}@ (lastChangeToken=%{public}@, latestChangeToken=%{public}@).
Resetting to current change token for account %{public}@ because change history is truncated (lastChangeToken=%{public}@, latestChangeToken=%{public}@).
%{public}s%{public}@, %{public}@, %{public}@, %{public}@
%{public}s%{public}@
%{public}s%{public}@, %{public}@
%{public}s%{public}@, %{public}@, %{public}@
--empty--
%{public}s
PURGE: Error saving database after purging unwanted elements.
PURGE: Failure deleting stale source %{public}@ "%{public}@", %{public}@
PURGE: Successfully deleted stale source %{public}@
PURGE: Failure to fetch stale source, rowid: %d
PURGE: Failure deleting stale calendar %{public}@ "%{public}@", %{public}@
PURGE: Successfully deleted stale calendar %{public}@
PURGE: Failure to fetch stale calendar, rowid: %d
PURGE: Failure deleting stale event %{public}@ "%{public}@", %{public}@
PURGE: Successfully deleted stale event %{public}@
PURGE: Failure to fetch stale event, rowid: %d
EKa: Live EKEventStore: %{public}@
EKa: Total stores: %d
SIGTERM, Bye bye.
SIGQUIT, Bye bye.
Manually triggered state dump
Checkin activity state for %s: %s
Running %s (late by: %.02f)
Received an odd state in checkin for %s: %d.
%s: completeAndFireIn: %d
%s: fireIn: %d
fireIn request for %s disregarded for previous scheduled timer (%0.2f to go)
%s: completeAndFireOnConnection
%s: completeAndFireNever
%s: Set activity state to %s
%s: Failed to set activity state to %s
%s: _activityComplete
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.nano.nanoregistry</key>
<true/>
<key>com.apple.private.calendar.allow-birthday-modification</key>
<true/>
<key>com.apple.private.calendar.changeIdTrackingOverride</key>
<true/>
<key>com.apple.private.calendar.custom-database-path</key>
<true/>
<key>com.apple.private.calendar.syncclient</key>
<true/>
<key>com.apple.private.calendar.watchos-mutable-database</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.eventkitmutation</string>
<string>com.apple.private.alloy.eventkitsync</string>
<string>com.apple.private.alloy.internal.watch.calendar.analytics</string>
</array>
<key>com.apple.private.security.storage.Calendar</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceCalendar</string>
<string>kTCCServiceReminders</string>
</array>
</dict>
</plist>
e0 
com.apple.nano.nanoregistry
0;6com.apple.private.calendar.allow-birthday-modification
083com.apple.private.calendar.changeIdTrackingOverride
04/com.apple.private.calendar.custom-database-path
0*%com.apple.private.calendar.syncclient
083com.apple.private.calendar.watchos-mutable-database
com.apple.private.ids.messaging0
(com.apple.private.alloy.eventkitmutation$com.apple.private.alloy.eventkitsync9com.apple.private.alloy.internal.watch.calendar.analytics00+com.apple.private.security.storage.Calendar
com.apple.private.tcc.allow0+
kTCCServiceCalendar
kTCCServiceReminders
%@ %@
start
items
NEKDatabaseChangedExternallyNotification
NEKDefaultCalendarChanged
NEKBlindChangeNumberAdvance
<NEKICSWrapperMetadata (%p): 
  entityType: %d
  identifier: %@
  externalID: %@
  selfAttendeeEmail: %@
  selfAttendeeUUID: %@
  selfOrganizerEmail: %@
  selfOrganizerUUID: %@
  attendeeStatus: %d
  invitationStatus: %d
  properInvitationStatus: %d
  hasProperInvitationStatus: %d
  locationPredictionState: %d
  dateChanged: %d
  timeChanged: %d
  titleChanged: %d
  locationChanged: %d
  attendeeComment: %d
  attendeeStatusFlag: %d
  startDate: %@
<%@ %p; identifier=%@; calendarIdentifier=%@; oldCalendarIdentifier=%@; title='%@'>
<%@ %p; identifier=%@; calendarIdentifier=%@; oldCalendarIdentifier=%@>
<%@ %p, calendarIdentifier = %@; oldCalendarIdentifier = %@; count = %@>
v8@?0
%@.mean
%@.variance
%@.failureTimeout
NDTSetDefaultPriority
NDTQueueFactory.m
qos != QOS_CLASS_UNSPECIFIED
NDTSetElevatedPriority
GARBAGE:%@
com.apple.eventkitsync.changeobserver.%@
<%@ %p, source = %@, calendarIdentifier = %@>
watch.eventsync
com.apple.eventkitsync
persistentID
isLocalStore
+[NEKSourceID(Reminder) accountForStore:identifier:]
NDTSQFile.%@.%p
%04d%02d%02d-%02d%02d%02d
:memory:
mobile
_openDatabase(1)
NDTSQError
pragma journal_mode=wal
_SQ_Versions
%@-wal
%@: %s
_executeSql(1)
_parseSql:(1)
_parseSql:(2)
BEGIN
begin(1)
COMMIT
commit(1)
ROLLBACK
rollback(1)
sourceIdentifier
calendarIdentifier
attributes
isDefaultTaskCalendar
isDefaultEventCalendar
oldCalendarIdentifier
%@%@%@
UUID
title
isReadonly
isHidden
isImmutable
isInbox
isNotificationsCollection
isSharingInvitation
isSubscribed
isHolidayCalendar
isFamilyCalendar
isIgnoringEventAlerts
isIgnoringSharedCalendarNotifications
isSchedulingProhibited
isDefaultCalendarForStore
type
digest
symbolicColorName
colorString
displayOrder
sharingStatus
sharedOwnerName
sharedOwnerAddress
sharingInvitationResponse
publishedURLString
canBePublished
canBeShared
isPublished
externalID
externalIdentificationTag
syncToken
externalModificationTag
externalRepresentation
supportedEntityTypes
invitationStatus
hasBeenAlerted
notes
subCalAccountID
pushKey
selfIdentityDisplayName
selfIdentityEmail
selfIdentityAddressString
selfIdentityFirstName
selfIdentityLastName
ownerIdentityDisplayName
ownerIdentityEmail
ownerIdentityAddressString
ownerIdentityFirstName
ownerIdentityLastName
TinyStore
tinyStore.sqlitedb
tinyStore
tinyStore.plist
com.apple.eventkitsync.changeobserver.sequencenumber
FaultCount
RetryMustBeReset
heardFromPhone
MigrationSyncCount
eventCalendarId
taskCalendarId
windowEnd
windowStart
deltaSync.failureTimeout
deltaSync.mean
deltaSync.variance
resetSync.failureTimeout
resetSync.mean
resetSync.variance
nightlySync.failureTimeout
nightlySync.mean
nightlySync.variance
msgType
NDTMessaging
-[NDTMessaging sendMessage:responseHandler:completion:]
-[NDTMessaging reply:to:completion:]
-[NDTMessaging service:account:incomingData:fromID:context:]
-[NDTMessaging service:account:incomingResourceAtURL:metadata:fromID:context:]
/tmp/verifier_data.XXXXXX
%s/%@
ValidationWrapper
cvAlertEnabled
com.apple.Bridge.CalendarSyncDebug
yyyyMMdd/HHmm
<%@:%p start:%@ end:%@ masterCount:%d occurrenceCount:%d>
Calendar validation failure. Please file a radar against "EventKitSync | watchOS"
Sync validation failure
select value from %@ where key = ?
update %@ set value = ? where value = ? and key = ?
insert or replace into %@ (key, value) values (?, ?)
delete from %@ where key = ?
create table if not exists %@ (key text unique, value text)
NDTSQKeyValueStore:%@
i16@?0@"NDTSQStatement"8
name
externalId
00000000/0000
/System/Library/LaunchDaemons/com.apple.SpringBoard.plist
syncReport.json
datestamp
duplicates
drift
sources
calendars
v24@?0@"NEKPBItemOccurrence"8q16
com.apple.eventkitsync.nekeventstore
com.apple.eventkitsync.dbidleblocks
com.apple.eventkitsync.pipe
SaveDB
-[NEKEventStore getDefaultTaskCalendar:defaultEventCalendar:store:]
updateICS:
deleteItemWithIdentifier:
-[NEKEventStore deleteItem:store:]
-[NEKEventStore handleNewEntity:withWrapper:session:]
-[NEKEventStore handleUpdatedItemFromGizmo:type:withWrapper:identifier:]
/RID=
updateMasterEvent:blah...
%@%@%llu
-[NEKEventStore handleCalendarEventWithUniqueIdentifierFromGizmo:calendar:wrapper:detachedEventMap:]
-[NEKEventStore handleCalendarTaskWithUniqueIdentifierFromGizmo:calendar:wrapper:]
com.apple.eventkitsync.lzfse.receive.logging
-[NEKEventStore _processUpdateFromWatch:calendar:store:]_block_invoke
v16@?0@"NSString"8
-[NEKEventStore _deleteCalendarItemsInICSWrapperFromOldCalendar:store:]_block_invoke
-[NEKEventStore _deleteCalendarItemsMovedToCalendar:inICSWrapper:]_block_invoke
v28@?0@"EKObjectID"8i16^B20
ICSWrappers:Inserts
ICSWrappers:Updates
-[NEKEventStore ICSWrappersForChangeSet:pipe:]_block_invoke
-[NEKEventStore _createCalendarForWrapper:store:]
com.apple.eventkitsync.lzfse.send.logging
com.apple.eventkitsync.recievedpairedsyncstart
com.apple.eventkitsync.recievedreunionsyncstart
com.apple.pairedsync.eventkitsync
internal_ignorePairedSync
com.apple.EventKitSync
/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/NEKSyncBundle/Models/NEKSyncCoordinator.m
-[NEKSyncCoordinator syncCoordinator:beginSyncSession:]
-[NEKSyncCoordinator syncCoordinator:didInvalidateSyncSession:]
None
LimitPush
startDate
endDate
masterCount
occurrenceCount
showAlert
com.apple.NanoCalendar.PrefSync.PrefMigrationSeed
com.apple.mobilecal
InviteeDeclineAlerts-rebroadcast
ShowDeclinedEvents-rebroadcast
enableTravelAdvisoriesForAutomaticBehavior
com.apple.calendar.database.preference.notification.enableTravelAdvisoriesForAutomaticBehavior
com.apple.NanoCalendar
preferences_observer
LastDeselectedCalendarSyncHashes
LastDeselectedCalendarSyncIdentifiers
TimeZoneCityArray
kCalTimeZonePrefChangedDistributedNotification
overlayCalendarID
DefaultTimedAlarmOffset
DefaultAllDayAlarmOffset
com.apple.calendar.defaultAlarmChangedNotification
ShowWeekNumbers
com.apple.mobilecal.preference.notification.showweeknumbers
CalEventDeclineEventPrefChangedRebroadcast
CalEventShowInviteeDeclinesPrefChangedRebroadcast
CalEventDeclineEventPrefChanged
CalEventShowInviteeDeclinesPrefChanged
v32@?0@"NSString"8@"NSSet"16^B24
CREATE TABLE IF NOT EXISTS analytics (hour INT PRIMARY KEY, deltas INT, resets INT, failures INT)
analytics
INSERT OR REPLACE INTO analytics (deltas, resets, failures, hour) values (?,?,?,?)
SELECT deltas, resets, failures FROM analytics WHERE hour = ?
DELETE FROM analytics WHERE hour = ?
backchannel
com.apple.private.alloy.eventkitmutation
setRemCom
v16@?0@"NDTMessage"8
setParStt
setAlmSno
deleEvent
internal_disablePhoneMutator
/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/NEKSyncBundle/Models/NEKRPCEndpoint.m
-[NEKRPCEndpoint _recvSetEventKitReminderCompletedEndpoint:]
-[NEKRPCEndpoint _recvSetReminderKitReminderCompletedEndpoint:]
-[NEKRPCEndpoint _recvDeleteEventEndpoint:]
v24@?0@"EKEvent"8^B16
v16@?0@"NSArray"8
com.apple.private.alloy.internal.watch.calendar.analytics
com.apple.internal.watch.calendar.analytics
com.apple.internal.eventkitsync.checker
<%@ %p; type=%@; identifier=%@; calendarIdentifier=%@>
Calendar
Event
Reminder
Source
phone
PreferencesObserver
com.apple.eventkitsyncd.daemon
com.apple.eventkitsyncd.notifications
com.apple.notifyd.matching
HandleNotifications
_CalDatabaseChangedNotification
com.apple.reminderkit.storeChanged
EventKitSyncTesting
com.apple.eventkitsync.force
com.apple.eventkitsync.zapversion
com.apple.datamigrator.migrationDidFinish
SignificantTimeChangeNotification
CalDefaultCalendarChangedNotification
com.apple.eventkitsync.analytics.flush
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.eventkitsync.analytics.daily
-[NEKDaemon _registerForNotifications]
com.apple.nanodaemontoolkit
[VOID]
(nil)
>%08x<
com.apple.logging.obfuscation
obfuscate
F519C070-44C7-467D-B560-7FEABDF9D3AC
-[NEKSourceAttributes(Event) initWithSource:]
CloudKit
non-CloudKit
isFacebook
v32@?0@"EKObjectID"8Q16^B24
@?<v@?@"EKObjectID"Q^B>16@?0@?<v@?@"NSString"@"EKSource"Q^B>8
v32@?0@"REMObjectID"8Q16^B24
@?<v@?@"REMObjectID"Q^B>16@?0@?<v@?@"NSString"@"EKSource"Q^B>8
v40@?0@"NSString"8@"EKSource"16Q24^B32
testWindowStart
testWindowEnd
16A0
syncWindow
recordMap
RecordMap.db
CREATE TABLE IF NOT EXISTS record(rowid INTEGER PRIMARY KEY ASC, entityType INT, entityRowID INT, UUID TEXT)
CREATE UNIQUE INDEX IF NOT EXISTS entityIndex ON record (entityType, entityRowID)
CREATE VIEW IF NOT EXISTS record_utc AS SELECT rowid, datetime(timestamp, 'unixepoch') stamp, entityType, entityRowID, masterRowID, uuid FROM record ORDER BY timestamp, entityType, uuid
ALTER TABLE record ADD COLUMN timestamp INT DEFAULT NULL
ALTER TABLE record ADD COLUMN masterRowID INT DEFAULT -1 NOT NULL
ALTER TABLE record ADD COLUMN mark INT DEFAULT 1 NOT NULL
ALTER TABLE record ADD COLUMN summary_hash TEXT DEFAULT NULL
ALTER TABLE record ADD COLUMN location_hash TEXT DEFAULT NULL
ALTER TABLE record ADD COLUMN start_time REAL DEFAULT NULL
ALTER TABLE record ADD COLUMN entityDatabaseID INT DEFAULT 0 NOT NULL
DROP INDEX entityIndex
CREATE UNIQUE INDEX entityIndex ON record (entityType, entityRowID, entityDatabaseID)
DROP VIEW record_utc
CREATE VIEW record_utc AS SELECT rowid, datetime(timestamp, 'unixepoch') stamp, entityType, entityRowID, entityDatabaseID, masterRowID, uuid FROM record ORDER BY timestamp, entityType, uuid
PRAGMA user_version
PRAGMA user_version = %d
SELECT UUID FROM record WHERE entityType = ? AND entityRowID = ? AND entityDatabaseID = ?
INSERT OR REPLACE INTO record(entityType, entityRowID, entityDatabaseID, UUID, timestamp, masterRowID, summary_hash, location_hash, start_time, mark) VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, 1)
SELECT summary_hash, location_hash, start_time FROM record WHERE entityType = ? AND entityRowID = ? AND entityDatabaseID = ?
DELETE FROM record WHERE entityType = ? and entityRowID = ? and entityDatabaseID = ?
DELETE FROM record
SELECT entityType, entityRowID, entityDatabaseID, UUID, mark FROM record ORDER BY mark, entityType, entityRowID, UUID
SELECT count() FROM record
isComplete
calendarName
reminderTitle
externalIdentifier
>>LOCAL<<
Default local calendar
UUID: %@
<%@ %p; %@>
defaultAlarmOffset
isEnabled
usesSelfAttendee
constraintsDescriptionPath
creatorBundleID
creatorCodeSigningIdentity
accountPersistentID
supportsSharedCalendars
allowsTasks
allowsEvents
allowsCalendarAddDeleteModify
onlyCreatorCanModify
snoozeAlarmRequiresDetach
supportsAlarmAcknowledgedDate
isBirthdayStore
com.apple.eventkitsync.progressliar
-[NEKProgressLiar _doneForRealNotifyingPairedSync:]
com.apple.internal.eventkitsync.testcontrol
com.apple.NEKTestControl.xpc
%@;%@;%f
/var/mobile/Library/Calendar/Calendar.sqlitedb
select I.unique_identifier, C.external_id calendar, O.occurrence_date occurrence_date from occurrencecache O left join calendar C on C.rowid = O.calendar_id left join calendaritem I on I.rowid = O.event_id where I.entity_type = 2 and O.occurrence_date >= ?  and O.occurrence_date <= ? and C.flags & 786432 == 0 order by occurrence_date, I.unique_identifier
EventKitSync
v24@?0@"NSString"8@"NSUUID"16
/System/Library/PrivateFrameworks/CDDataAccess.framework
/System/Library/PrivateFrameworks/ExchangeSync.framework
/System/Library/PrivateFrameworks/DataAccess.framework
+[NEKSourceAttributes(Reminder) createAccountWithSaveRequest:withAttributes:]
@"REMAccountChangeItem"8@?0
.plist
Analytics.sqlite
hour
deltas
resets
failures
com.apple.eventkitsync.sessions
bindInteger: index out of bounds
bindUint64: index out of bounds
bindString: index out of bounds
bindDouble: index out of bounds
bindBlob: index out of bounds
fetchInteger: column out of bounds
fetchUint64: column out of bounds
fetchString: column out of bounds
fetchDouble: column out of bounds
fetchBlob: column out of bounds
NDTQSStatement:%p:"%@",parsed=%p
changeObserver.keyqueue
E8CD02C1-B7C0-4E12-8A44-AB54B5F52E5F
E58F9466-0386-4DE7-B6CE-537A8B54C9B7
v20@?0@"NSArray"8i16
B16@?0@"EKObjectID"8
SeenMap.db
com.apple.eventkitsync.seenmap
drop table if exists seen
create table if not exists seendata (uuid TEXT, start_date REAL, end_date REAL, location TEXT, primary key (uuid))
B24@?0^^{sqlite3_stmt}8*16
insert or replace into seendata values ( ?, ?, ?, ?);
select start_date, end_date, location from seendata where uuid = ?;
delete from seendata where uuid = ?;
delete from seendata where end_date < ?;
-[NEKSeenMap didShowInvite:withUUID:]
-[NEKSeenMap deleteInviteByUUID:]
-[NEKSeenMap sweep]
B16@?0@8
<NDTResultsFIFO:%p cap:%d/%d term:%d fin:%d>
NEK.sessionIdle
resetSync
deltaSync
nightlySync
NEK.SYService
com.apple.private.alloy.eventkitsync
internal_forceFileTransfer
deferUntil
maxDeltaRetries
/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/NEKSyncBundle/Models/NEKSyncController.m
-[NEKSyncController service:willPreferSession:overSession:]
tc_automaticSync
lastSuccessfulStamp
tc_objectDelay
Object delay: %.3f
Fault count: %d
Currently syncing: %s
Automatic sync: %s
Enabled
Disabled
Last successful sync sent: 
Minimum session timeout: %.3f
Maximum session timeout: %.3f
Probability of failure: %.3f
Fixed retry interval: %.3f
minSessionTimeout
maxSessionTimeout
internal_probabilityOfSyncFailure
internal_retryInterval
-[NEKSyncController service:startSession:error:]
identifier
sending
receiving
delta
RetryDueDate
ResetSyncPipe
NightlySyncPipe
DeltaSyncPipe
internal_enableLongTimeouts
internal_enableShortTimeouts
com.apple.watch.eventkitsync.failuretesting
com.apple.eventkitsync.retrysync
com.apple.eventkitsync.sessionEnded
-[NEKSyncController service:sessionEnded:error:]
v16@?0@?<v@?>8
 (FAKE)
nightly
reset
internal_dumpRecordMap
com.apple.watch.eventkitsync.recordmapdump
EventKit
data_separation
sessionTimeout
sessionPerf
packetNumber
storeWrapper
calendarWrapper
ICSWrapper
deletionWrapper
validationWrapper
setReminderComplete
setParticipantStatus
setAlarmSnooze
deleteEvent
<%@ %p; persistentID=%@; type=%@>
Local
Exchange
CalDAV
MobileMe
Subscribed
Birthdays
Unknown
v32@?0@"NSString"8@"NEKPBICSWrapperMetadata"16^B24
v32@?0@"NSString"8Q16^B24
<%@ %p; empty changeset>
<%@ %p; %d inserts; %d updates; %d deletes>
Local store
persistentID: %@
isDefaultLocalCalendar
/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/NEKSyncBundle/Models/NEKResultsFetcher.m
-[NEKResultsFetcher fetchEverythingIntoPipe:]
B16@?0@"EKCalendarItem"8
B16@?0@"REMReminder"8
-[NEKResultsFetcher fetchEverythingIntoPipe:]_block_invoke
-[NEKResultsFetcher fetchNightlyIntoPipe:]
-[NEKResultsFetcher fetchNightlyIntoPipe:]_block_invoke
-[NEKResultsFetcher fetchChangesIntoPipe:deferrable:]
+[NEKCalendarID(Reminder) listInStore:withNEKCalendarID:]
selfAttendeeEmail
entityType
invitationChangedPropertyFlagDate
invitationChangedPropertyFlagTime
invitationChangedPropertyFlagTitle
invitationChangedPropertyFlagLocation
invitationChangedPropertyFlagAttendeeComment
invitationChangedPropertyFlagAttendeeStatus
selfAttendeeUUID
selfOrganizerEmail
selfOrganizerUUID
attendeeStatus
locationPredictionState
properInvitationStatus
+[NEKCalendarAttributes(Reminder) createListInAccount:withSaveRequest:withAttributes:]
@"REMListChangeItem"8@?0
<%@:%p capacity:%d, hitRatio:%f>
encoding
/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/NEKSyncBundle/Models/NEKSyncSession.m
-[NEKSyncSession init]
internal_disableSync
syncSession:applyChanges:(events)
syncSession:applyChanges:(reminders)
<%@:%p cpu=%lld, wall=%lld, dmem=%lld>
publishedURL
selfIdentityAddress
ownerIdentityAddress
snoozeAmount
alarmIdentifier
itemIdentifier
storeIdentifier
com.apple.eventkitsync.nekreminderstore
com.apple.eventkitsync.reminders.pipe
saveRequestForStore(Reminders)
removeAllItems
removeAllItems(reminders)
B24@?0@"REMAccount"8@"NSDictionary"16
B24@?0@"REMList"8@"NSDictionary"16
updateAccount:
-[NEKReminderStore updateSource:store:]_block_invoke
updateCalendar:
-[NEKReminderStore updateCalendar:store:]_block_invoke
-[NEKReminderStore handleReminderWithUniqueIdentifierFromGizmo:saveRequest:list:wrapper:]
-[NEKReminderStore performUpdateWithICSWrappers:store:session:]
v32@?0@"NSData"8Q16^B24
v16@?0^B8
v28@?0@"REMObjectID"8i16^B20
@"NSDictionary"16@?0@"NSArray"8
storeWrapperForCloudKitAccount
v36@?0@"REMObjectID"8@"REMAccount"16i24^B28
listWrappersForChangeSet
v36@?0@"REMObjectID"8@"REMList"16i24^B28
ICSWrappersForChangeSet(Reminders)
v36@?0@"REMObjectID"8@"REMReminder"16i24^B28
-[NEKReminderStore _deleteAccountWithIdentifier:store:]
-[NEKReminderStore _deleteListWithIdentifier:store:]
-[NEKEventChangeObserver databaseDidChange]
-[NEKEventChangeObserver allSourcesInto:]
-[NEKEventChangeObserver allCalendarsInto:]
-[NEKEventChangeObserver allEventsInto:filter:window:]
-[NEKEventChangeObserver allRemindersInto:filter:window:]
allRemindersInto:filter:window:
/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/NEKSyncBundle/Models/NEKEventChangeObserver.m
-[NEKEventChangeObserver fetchEventChangeSet]
Fetching changes took a long time
Inserts:
Updates:
Deletes:
-[NEKEventChangeObserver _fetchChangesInto:from:inside:]_block_invoke
v44@?0B8q12@"NSArray"20@"NSArray"28@"NSArray"36
-[NEKEventChangeObserver previousDefaultTaskCalendar]
-[NEKEventChangeObserver setPreviousDefaultTaskCalendar:]
v16@?0@"EKObjectID"8
ICSData
calendarItemCount
metadataKeys
metadataValues
syncID
taskCompletionDate
oldIdentifier
nuevoIdentifier
lzfseICSData
duplicateCheck
occurrenceCache
<NEKSourceAttributes (%p)
  name: %@
  defaultAlarmOffset: %@
  type: %d
  isEnabled: %d
  isFacebook: %d
  usesSelfAttendee: %d
  constraintsDescriptionPath: %@
  externalModificationTag: %@
  creatorBundleID: %@
  creatorCodeSigningIdentity: %@
  accountPersistentID: %@
  supportsSharedCalendars: %d
  allowsTasks: %d
  allowsEvents: %d
  allowsCalendarAddModifyDelete: %d
  onlyCreatorCanModify: %d
  snoozeAlarmRequiresDetach: %d
  supportsAlarmAcknowledgedDate: %d
  isLocalStore: %d
  isBirthdayStore: %d
uuid
summary
calendar
date
reminderListId
-[NEKReminderChangeObserver storeDidChange]
-[NEKReminderChangeObserver allCloudKitAccountsInto:]
-[NEKReminderChangeObserver allListsInto:]
-[NEKReminderChangeObserver allRemindersInto:filter:window:]
v24@?0@"REMReminder"8^B16
/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/NEKSyncBundle/Models/NEKReminderChangeObserver.m
-[NEKReminderChangeObserver fetchReminderChangeSet]
markedForDeletion
_fetchChangesInto(Reminders)
ReminderKit: Inserts: 
ReminderKit: Updates: 
ReminderKit: Deletes: 
v60@?0B8@"NEKReminderChangeTrackingStateMap"12@"NSArray"20@"NSArray"28@"NSArray"36@"NSDictionary"44@"NSDictionary"52
com.apple.eventkitsync.changeobserver.reminderkit.sequencenumber
-[NEKReminderChangeObserver previousDefaultReminderListID]
<%@: %p: %@, %@>
B24@?0@"REMAccount"8@16
B16@?0@"NSArray"8
@"NEKReminderChangeTrackingState"16@?0@"REMAccount"8
B24@?0@"REMChangeObject"8@"NSDictionary"16
list
v32@?0@"REMObjectID"8@"NEKReminderChangeTrackingState"16^B24
<%@: loaded:%@ - active:%@>
REMNSPersistentHistoryToken
_REMChangeUniversalToken
loadedChangeTokenMap
eventIdentifier
eventTitle
eventStart
calendarTitle
span
-[NEKEventPurger finalizeDatabasesAfterResetSync]
%@<%p>
xpc_activity
WaitingForActivityCheckinFromFireIn
WaitingForActivityCheckinFromFireOnConnection
CHECK_IN
WAIT
DEFER
CONTINUE
DONE
OUT_OF_BOUNDS
syncId
status
ICSData
ICSDataForCalendarItems:options:
T@"NSDate",&,N,V_taskCutoffDate
ICSWrapperMetadata
T@"NSString",&,N,V_pathTemplate
ICSWrappersForChangeSet:pipe:
T@?,R,N
NEKSqueeze
TB,N,V_isHidden
T#,R
TB,R,N,V_isDefaultLocalCalendar
T@"<NDTSQFileDelegate>",W,N,V_delegate
Tq,N,V_accesses
T@"<NEKChangeObserverDelegate>",W,N
Tq,N,V_wallTime
T@"<NEKSyncControllerDelegate>",W,N,V_delegate
_attendeeStatus
T@"EKEventStore",R,N,V_ekEventStore
_changeObserver
T@"NDTActivity",&,N,V_activity
_changeTracking
T@"NDTSQFile",&,N,V_db
_createAccountForWrapper:store:
T@"NEKCalendarAttributes",R,N,V_attributes
T@"NEKDaemon",&,N,V_daemon
_delete
T@"NEKEnvironment",&,N,V_environment
_digest
T@"NEKEventChangeObserver",&,N,V_eventChangeObserver
_duplicateCheck
T@"NEKEventStore",W,N,V_weakEventDatabaseController
_failureScaling
T@"NEKPBCalendarIdentifier",&,N,V_calendarIdentifier
_hasBeenAlerted
T@"NEKPBDeleteEvent",&,N,V_deleteEvent
_insert
T@"NEKPBDuplicateCheck",&,N,V_duplicateCheck
_length
T@"NEKPBOccurrenceCache",&,N,V_occurrenceCache
_messageLogging
T@"NEKPBSetParticipantStatus",&,N,V_setParticipantStatus
_parsed
T@"NEKPBSourceAttributes",&,N,V_attributes
_readFd
T@"NEKPBSourceWrapper",&,N,V_storeWrapper
_setAlarmSnooze
T@"NEKProgressLiar",&,N,V_progressLiar
_setWindowToNow
T@"NEKRecordMap",R,N
_status
T@"NEKReminderStore",&,N,V_nekReminderStore
_syncController
T@"NEKResultsFetcher",&,N,V_fetcher
_syncId
T@"NEKSeenMap",R,N
_testingControl
T@"NEKSessionAnalyticsStore",&,N,V_store
_update
T@"NEKSourceID",R,N,V_storeIdentifier
account
T@"NEKStore",R,N,V_eventStore
allKeys
T@"NEKSyncController",&,N
allSourcesInto:
T@"NEKTinyStore",R,N
base64EncodedStringWithOptions:
T@"NSArray",&,N,V_calendars
changeObserverForEventWithQueue:databaseController:environment:
T@"NSArray",&,N,V_stores
changes
T@"NSArray",C,N,V_deletes
commit:
T@"NSArray",C,N,V_updates
containsObject:
T@"NSData",&,N
cpuTime
T@"NSData",&,N,V_digest
dataFromChange:
T@"NSData",&,N,V_iCSData
dealloc
T@"NSData",C,N,V_digest
deleteItemWithIdentifier:store:
T@"NSDate",&,N,V_end
deletes
T@"NSDate",&,N,V_estimatedFireDate
doneForRealNotifyingPairedSync:
T@"NSDate",&,N,V_start
eks_garbageUUID
T@"NSDictionary",&,N,V_deletionMap
T@"NSDictionary",&,N,V_moveMap
enumerateAllRemindersWithBlock:
T@"NSError",&,N,V_error
facilityWithSubsystem:category:
T@"NSMutableArray",&,N,V_calendars
fetchRemindersWithDACalendarItemUniqueIdentifiers:inList:error:
T@"NSMutableArray",&,N,V_items
finalizeDatabasesAfterResetSync
T@"NSMutableArray",&,N,V_metadataValues
handleDarwinNotificationOfName:
T@"NSMutableDictionary",&,N,V_cache
hasCalendarName
T@"NSMutableDictionary",&,N,V_properties
hasDisplayOrder
T@"NSNumber",&,N,V_defaultAlarmOffset
hasIsSubscribed
T@"NSObject<OS_dispatch_source>",&,N,V_deferPollingSource
hasName
T@"NSObject<OS_os_transaction>",&,N,V_waitingForCheckin
hasPersistentID
T@"NSSet",R,N,V_deletedSourcesIDs
hasSpan
T@"NSSet",R,V_deletedAccountIDsFromLoadedMap
hasType
T@"NSString",&,N,V_alarmIdentifier
hasUuid
T@"NSString",&,N,V_calendarIdentifier
icsDisplayOrder
T@"NSString",&,N,V_colorString
initWithIDSServiceName:logging:
T@"NSString",&,N,V_creatorBundleID
inserts
T@"NSString",&,N,V_dbFilename
isEmpty
T@"NSString",&,N,V_eventTitle
isInbox
T@"NSString",&,N,V_externalId
isTaskCompleted
T@"NSString",&,N,V_externalIdentifier
locationChanged
T@"NSString",&,N,V_identifier
markAsTruncated
T@"NSString",&,N,V_msgType
member:
T@"NSString",&,N,V_notes
msgType
T@"NSString",&,N,V_oldCalendarIdentifier
numberWithBool:
T@"NSString",&,N,V_ownerIdentityAddressString
occurrenceCache
T@"NSString",&,N,V_ownerIdentityEmail
os_log_facility
T@"NSString",&,N,V_ownerIdentityLastName
pushKey
T@"NSString",&,N,V_publishedURLString
reminderCacheForStore:wrappers:
T@"NSString",&,N,V_reminderTitle
removeObserver:
T@"NSString",&,N,V_selfAttendeeEmail
resetBindCursor
T@"NSString",&,N,V_selfIdentityAddressString
saveEventStore:
T@"NSString",&,N,V_selfIdentityEmail
seenMap
T@"NSString",&,N,V_selfIdentityLastName
selfOrganizerUUIDForIdentifier:
T@"NSString",&,N,V_selfOrganizerUUID
service
T@"NSString",&,N,V_sharedOwnerName
session
T@"NSString",&,N,V_subCalAccountID
setAllowsTasks:
T@"NSString",&,N,V_symbolicColorName
setCanBeShared:
T@"NSString",&,N,V_syncId
setColorString:
T@"NSString",&,N,V_syncToken
setData:forKey:
T@"NSString",&,N,V_type
setDeleteEvent:
T@"NSString",&,N,V_uuid
setDirtyMemory:
T@"NSString",C,N,V_accountPersistentID
setEnvironment:
T@"NSString",C,N,V_constraintsDescriptionPath
setHasIsHidden:
T@"NSString",C,N,V_creatorCodeSigningIdentity
setIsImmutable:
T@"NSString",C,N,V_externalIdentificationTag
setIsPublished:
T@"NSString",C,N,V_identifier
setMasterCount:
T@"NSString",C,N,V_notes
setTimeChanged:
T@"NSString",C,N,V_ownerIdentityEmail
setWithObjects:
T@"NSString",C,N,V_ownerIdentityLastName
sources
T@"NSString",C,N,V_selfIdentityDisplayName
spanEnd
T@"NSString",C,N,V_selfIdentityFirstName
stringByAppendingPathComponent:
T@"NSString",C,N,V_sharedOwnerAddress
subCalAccountID
T@"NSString",C,N,V_subCalAccountID
summary
T@"NSString",C,N,V_syncId
syncCoordinatorWithServiceName:
T@"NSString",C,N,V_title
syncRestriction
T@"NSString",R,N
syncSessionType
T@"NSString",R,N,V_name
tc_requestReset
T@"NSString",R,N,V_title
updateReminder:
T@"NSTimeZone",&,N,V_timeZone
wrapperForList:
T@"NSURL",C,N,V_publishedURL
.cxx_destruct
T@"NSCondition",&,N,V_condition
ICSDataWithOptions:
T@"NSString",&,N,V_calendarName
ICSWrappersForChangeSet:movedReminderAndListMapping:pipe:
T@"NSString",&,N,V_persistentID
NEKFluff
TB,N,V_finished
SYObjectWithData:
TB,N,V_readOnly
T@"<NDTActivityDelegate>",W,N,V_delegate
Td,N,V_variance
T@"<NEKChangeObserver>",&,N,V_changeObserver
Tq,N,V_capacity
T@"<NEKChangeObserverDelegate>",W,N,V_delegate
T@"EKEventStore",&,N,V_store
_canBePublished
T@"IDSService",&,N,V_service
_changeSupplier
T@"NDTPerf",&,N,V_perfomanceTracker
_computeDerived
T@"NDTSQFile",&,N,V_storeFile
_daemon
T@"NEKCalendarID",&,N,V_calendarIdentifier
_dbConn
T@"NEKDatabaseFileManager",R,N
_deletedAccountIDsFromLoadedMap
T@"NEKEnvironment",W,N,V_environment
_domainAccessor
T@"NEKEventStore",&,N,V_nekEventStore
_events
T@"NEKPBCalendarAttributes",&,N,V_attributes
_getWindowStart
T@"NEKPBCalendarWrapper",&,N,V_calendarWrapper
_idleBlockQueue
T@"NEKPBDeletionWrapper",&,N,V_deletionWrapper
_itemIdentifier
T@"NEKPBICSWrapper",&,N,V_iCSWrapper
_loadPlistFrom:
T@"NEKPBSetAlarmSnooze",&,N,V_setAlarmSnooze
_metadataValues
T@"NEKPBSetReminderComplete",&,N,V_setReminderComplete
_query:
T@"NEKPBSourceID",&,N,V_sourceIdentifier
_select
T@"NEKPBValidationWrapper",&,N,V_validationWrapper
_setFaultCount:
T@"NEKRecordMap",&,N,V_recordMap
_statementCache
T@"NEKReminderChangeObserver",&,N,V_reminderChangeObserver
_stores
T@"NEKReminderStore",W,N,V_weakReminderDatabaseController
_syncID
T@"NEKResultsPipe",&,N,V_changeSupplier
_taskCutoffDate
T@"NEKSessionAnalytics",&,N,V_analytics
_treeReportFor:
T@"NEKSourceAttributes",R,N,V_attributes
_weakReminderDatabaseController
T@"NEKStatTracker",&,N,V_statsTracker
alarmIdentifier
T@"NEKStore",R,N,V_reminderStore
allRemindersInto:filter:window:
T@"NEKSyncCoordinator",R,N
attendeeComment
T@"NEKValidationWrapper",&,N,V_validationObject
calendarWrapper
T@"NSArray",&,N,V_events
changedObjectID
T@"NSArray",&,N,V_tasks
clearRetryState
T@"NSArray",C,N,V_inserts
conditionalPop:
T@"NSCondition",&,N,V_activityCondition
copyTo:
T@"NSData",&,N,V_data
creatorBundleID
T@"NSData",&,N,V_externalRepresentation
T@"NSData",&,N,V_lzfseICSData
defaultTimeZone
T@"NSData",C,N,V_externalRepresentation
deleteReminder:
T@"NSDate",&,N,V_endDate
deletionWrapper
T@"NSDate",&,N,V_lastFired
ekColor
T@"NSDate",&,N,V_startDate
eks_sourcesAlwaysIncludingLocal
T@"NSDictionary",&,N,V_idsOptions
endDate
T@"NSDictionary",&,N,V_startDateMap
eventIdentifier
T@"NSMapTable",&,N,V_saveRequests
fetchAccountWithObjectID:error:
T@"NSMutableArray",&,N,V_fifo
fetcher
T@"NSMutableArray",&,N,V_metadataKeys
getBytes:range:
T@"NSMutableArray",&,N,V_sources
hasAllowsEvents
T@"NSMutableDictionary",&,N,V_dict
hasDate
T@"NSMutableOrderedSet",&,N,V_cache
hasIsLocalStore
T@"NSObject<OS_dispatch_semaphore>",&,N,V_terminateSemaphore
hasLzfseICSData
T@"NSObject<OS_os_log>",&,N,V_log
hasPacketNumber
T@"NSObject<OS_xpc_object>",&,N,V_activity
hasSnoozeAmount
T@"NSSet",R,N,V_insertedOrUpdatedSources
hasStoreWrapper
T@"NSString",&,N,V_accountPersistentID
hasUUID
T@"NSString",&,N,V_calendar
iCSData
T@"NSString",&,N,V_calendarTitle
initWithDomain:
T@"NSString",&,N,V_constraintsDescriptionPath
initWithSource:
T@"NSString",&,N,V_creatorCodeSigningIdentity
isBirthdayStore
T@"NSString",&,N,V_eventIdentifier
isGroup
T@"NSString",&,N,V_externalID
isProxy
T@"NSString",&,N,V_externalIdentificationTag
lastChangeToken
T@"NSString",&,N,V_externalModificationTag
T@"NSString",&,N,V_itemIdentifier
maxDeltaRetries
T@"NSString",&,N,V_name
moveMap
T@"NSString",&,N,V_nuevoIdentifier
nuevoIdentifier
T@"NSString",&,N,V_oldIdentifier
numberWithLong:
T@"NSString",&,N,V_ownerIdentityDisplayName
occurrenceCount
T@"NSString",&,N,V_ownerIdentityFirstName
T@"NSString",&,N,V_path
release
T@"NSString",&,N,V_pushKey
removeFromStore
T@"NSString",&,N,V_responseIdentifier
reportProgress:
T@"NSString",&,N,V_selfAttendeeUUID
resume:
T@"NSString",&,N,V_selfIdentityDisplayName
sealCompletions
T@"NSString",&,N,V_selfIdentityFirstName
selfAttendeeEmailForIdentifier:
T@"NSString",&,N,V_selfOrganizerEmail
sendDeleteEventId:title:start:inCalendarId:title:inSource:span:
T@"NSString",&,N,V_sharedOwnerAddress
serviceSpaceDidBecomeAvailable:
T@"NSString",&,N,V_storeIdentifier
T@"NSString",&,N,V_summary
setBool:forKey:
T@"NSString",&,N,V_syncID
setCanRollback:
T@"NSString",&,N,V_syncKind
setCurrentUser:
T@"NSString",&,N,V_title
setDateChanged:
T@"NSString",&,N,V_uUID
setDeletionMap:
T@"NSString",C,N,V_UUID
setEnd:
T@"NSString",C,N,V_colorString
setFailTimeout:
T@"NSString",C,N,V_creatorBundleID
setIsDefaultSchedulingCalendar:
T@"NSString",C,N,V_externalID
setIsPerformingBackupResetSync:
T@"NSString",C,N,V_externalModificationTag
setLog:
T@"NSString",C,N,V_name
setPreviousDefaultTaskCalendar:
T@"NSString",C,N,V_ownerIdentityDisplayName
setWeakEventDatabaseController:
T@"NSString",C,N,V_ownerIdentityFirstName
sharedOwnerName
T@"NSString",C,N,V_pushKey
sourcesAtIndex:
T@"NSString",C,N,V_selfIdentityEmail
storeIdentifier
T@"NSString",C,N,V_selfIdentityLastName
stringFromDate:
T@"NSString",C,N,V_sharedOwnerName
subcalAccountID
T@"NSString",C,N,V_symbolicColorName
syncCoordinator
T@"NSString",C,N,V_syncToken
syncDidComplete
T@"NSString",R,C
syncSession:successfullySynced:
T@"NSString",R,N,V_identifier
tc_requestDelta
T@"NSString",R,N,V_text
trigger
T@"NSThread",&,N,V_backgroundThread
updates
T@"NSURL",C,N,V_ownerIdentityAddress
writeStackshot:
T@"NSURL",C,N,V_selfIdentityAddress
T@"NSXPCListener",&,N,V_listener
T@"PSYServiceSyncSession",&,N,V_session
T@"PSYSyncCoordinator",&,N,V_syncCoordinator
T@"REMChangeToken",&,N,V_lastChangeToken
T@"REMChangeTracking",&,N,V_changeTracking
T@?,C,N,V_completion
TB,N
TB,N,GisTaskCompleted,V_taskCompleted
TB,N,V_allowsCalendarAddDeleteModify
TB,N,V_allowsEvents
TB,N,V_allowsTasks
TB,N,V_attendeeComment
TB,N,V_attendeeStatusFlag
TB,N,V_canBePublished
TB,N,V_canBeShared
TB,N,V_criteriaOnConnection
TB,N,V_dateChanged
TB,N,V_firstTimeEver
TB,N,V_hasBeenAlerted
TB,N,V_hasProperInvitationStatus
TB,N,V_invitationChangedPropertyFlagAttendeeComment
TB,N,V_invitationChangedPropertyFlagAttendeeStatus
TB,N,V_invitationChangedPropertyFlagDate
TB,N,V_invitationChangedPropertyFlagLocation
TB,N,V_invitationChangedPropertyFlagTime
TB,N,V_invitationChangedPropertyFlagTitle
TB,N,V_isBirthdayStore
TB,N,V_isComplete
TB,N,V_isDefaultCalendarForStore
TB,N,V_isDefaultEventCalendar
TB,N,V_isDefaultLocalCalendar
TB,N,V_isDefaultTaskCalendar
TB,N,V_isEnabled
TB,N,V_isFacebook
TB,N,V_isFamilyCalendar
TB,N,V_isHolidayCalendar
TB,N,V_isHolidyCalendar
TB,N,V_isIgnoringEventAlerts
TB,N,V_isIgnoringSharedCalendarNotifications
TB,N,V_isImmutable
TB,N,V_isInbox
TB,N,V_isLocalStore
TB,N,V_isNotificationsCollection
TB,N,V_isPerformingBackupResetSync
TB,N,V_isPublished
TB,N,V_isReadonly
TB,N,V_isReminderWithLocation
TB,N,V_isSchedulingProhibited
TB,N,V_isSharingInvitation
TB,N,V_isSubscribed
TB,N,V_locationChanged
TB,N,V_onlyCreatorCanModify
TB,N,V_saveRequestsNeedPurgeDeletedObjectsAfterSave
TB,N,V_showAlert
TB,N,V_snoozeAlarmRequiresDetach
TB,N,V_supportsAlarmAcknowledgedDate
TB,N,V_supportsSharedCalendars
TB,N,V_terminated
TB,N,V_timeChanged
TB,N,V_titleChanged
TB,N,V_truncated
TB,N,V_usesSelfAttendee
TB,R
TB,R,N
TB,R,N,V_isCurrentlySyncing
TB,R,N,V_isDeferrable
TI,N,V_calendarItemCount
TI,N,V_defaultAlarmOffset
TI,N,V_packetNumber
TI,N,V_span
TI,N,V_status
TI,N,V_type
TQ,N,V_attendeeStatus
TQ,N,V_calendarUpdateTimeNs
TQ,N,V_displayOrder
TQ,N,V_entityType
TQ,N,V_eventUpdateTimeNs
TQ,N,V_invitationStatus
TQ,N,V_locationPredictionState
TQ,N,V_masterCount
TQ,N,V_occurrenceCount
TQ,N,V_properInvitationStatus
TQ,N,V_reminderUpdateTimeNs
TQ,N,V_sharingInvitationResponse
TQ,N,V_sharingStatus
TQ,N,V_storeUpdateTimeNs
TQ,N,V_supportedEntityTypes
TQ,R
T^{sqlite3=},N,V_db
T^{sqlite3=},N,V_rawDb
T^{sqlite3_stmt=},N,V_parsed
Td,N
Td,N,V_alpha
Td,N,V_date
Td,N,V_end
Td,N,V_endDate
Td,N,V_eventStart
Td,N,V_failTimeout
Td,N,V_failureScaling
Td,N,V_maxTimeout
Td,N,V_mean
Td,N,V_minTimeout
Td,N,V_sigmaSpan
Td,N,V_snoozeAmount
Td,N,V_spanEnd
Td,N,V_spanStart
Td,N,V_start
Td,N,V_startDate
Td,N,V_taskCompletionDate
Td,N,V_taskCutoff
Ti,N,V_displayOrder
Ti,N,V_supportedEntityTypes
Tq,N,V_attendeeStatus
Tq,N,V_calendarItemCount
Tq,N,V_changeNumber
Tq,N,V_cpuTime
Tq,N,V_criteriaDelay
Tq,N,V_dirtyMemory
Tq,N,V_displayOrder
Tq,N,V_hits
Tq,N,V_length
Tq,N,V_locationPredictionState
Tq,N,V_masterCount
Tq,N,V_objectDelayUs
Tq,N,V_occurrenceCount
Tq,N,V_type
Tq,R,N
Tr*,N,V_activityIdentifier
URLWithString:
UTF8String
UUID
UUIDString
_ICSLogTestForWrapper:
_UUID
_accesses
_accountPersistentID
_activity
_activityComplete
_activityCondition
_activityIdentifier
_addAccountWithType:name:accountObjectID:
_addSchema:
_alarmIdentifier
_alertSupressionCache
_allowsCalendarAddDeleteModify
_allowsEvents
_allowsTasks
_alpha
_analytics
_analyticsDriver
_attendeeComment
_attendeeStatusFlag
_attributes
_backgroundThread
_baseName
_beginTrackingForStore:clientName:verifyAccountsBlock:changeTrackingStateFromAccountBlock:
_beginTrackingFromLoadedStateForStore:clientName:
_blockUntilUnlock
_bootstrap
_broadcastBool:forKey:
_bump
_cache
_calendar
_calendarIdentifier
_calendarItem:snoozeAlarmID:withTimeIntervalFromNow:
_calendarItemCount
_calendarName
_calendarTitle
_calendarUpdateTimeNs
_calendarWrapper
_calendars
_calledDidComplete
_canBeShared
_canUseDataTransfer
_capacity
_cause
_changeNumber
_changeQueue
_changeTrackingStateMap
_changed:
_checkAndSetDefaultCalendar:calendarWrapper:store:
_checkAndSetDefaultList:calendarWrapper:store:
_checkIn
_clearToDeltaSync
_clientName
_clip:
_cloudFallback
_colorString
_commitPendingRecordMapChanges
_completion
_completions
_condition
_constraintsDescriptionPath
_controllerCondition
_convertIfNeeded:
_countEvents
_counter
_cpuTime
_createCalendarForWrapper:store:
_createDb
_createListForWrapper:store:
_createParentDirectory
_createSourceForWrapper:store:
_createdEntities
_createdEntitiesLock
_creatorBundleID
_creatorCodeSigningIdentity
_criteriaDelay
_criteriaOnConnection
_ct_logger
_currentCriteria
_currentHour
_daemonQueue
_data
_databaseChangedExternally
_date
_dateChanged
_dbFileManager
_dbFilename
_dbQueue
_defaultAlarmOffset
_defaultCalendarChanged:
_deferPollingSource
_delegate
_deletableAccountsForStore:
_deletableListsForStore:
_deletableSources
_deleteAccountWithIdentifier:store:
_deleteAndLogEvent:identifier:store:
_deleteCalendarById:
_deleteCalendarItemsInICSWrapperFromOldCalendar:store:
_deleteCalendarItemsMovedToCalendar:inICSWrapper:
_deleteCalendarWithIdentifier:store:
_deleteDetachedCalendarItemsFromOldCalendar:deletedEvents:
_deleteEvent
_deleteEventById:
_deleteEventWithIdentifier:calendarIdentifier:store:
_deleteListWithIdentifier:store:
_deleteReminderWithIdentifier:calendarIdentifier:store:
_deleteReminderWithIdentifier:store:
_deleteSYObject:eventStore:reminderStore:
_deleteSourceWithIdentifier:store:
_deleteStoreById:
_deleteWronglyImmutableCalendars
_deletedSourcesIDs
_deletes
_deletionMap
_deletionWrapper
_deltaTimeoutTracker
_dict
_didCreateEntity:
_dirtyMemory
_disableMutation
_displayOrder
_doneForRealNotifyingPairedSync:
_dontSyncDays
_driftMetricFor:
_duplicatesTreeFrom:
_ekEventStore
_ekPrefs
_enableDisableLogging
_end
_endDate
_endTime
_ensureReminderInList:saveRequest:inICSWrapper:
_entityType
_enumerateForChangeType:forEntitiesOfClass:withBlock:
_environment
_error
_estimatedFireDate
_eventCalendarKey
_eventChangeObserver
_eventIdentifier
_eventInWindow:inStore:
_eventStart
_eventStore
_eventTitle
_eventUpdateTimeNs
_exchange
_executeSql:
_externalID
_externalId
_externalIdentificationTag
_externalIdentifier
_externalModificationTag
_externalRepresentation
_failTimeout
_faultCount
_fetch
_fetchChangesInto:from:inside:
_fetchChangesInto:from:inside:outDeletedReminderAndListMapping:outMovedReminderAndListMapping:
_fetcher
_fifo
_file
_filterOutInvalidICSWrappers:store:calendars:
_finished
_firstTimeEver
_flushQueue
_fullSessionTimeout
_fwdDaysToSync
_getTestWindowEnd
_getTestWindowStart
_getWindowEnd
_handlers
_has
_hasProperInvitationStatus
_hits
_iCSData
_iCSWrapper
_identifier
_identifierInRowMapping:
_idsOptions
_insertedOrUpdatedSources
_inserts
_instanceVersion:
_instanceVersions
_invitationChangedPropertyFlagAttendeeComment
_invitationChangedPropertyFlagAttendeeStatus
_invitationChangedPropertyFlagDate
_invitationChangedPropertyFlagLocation
_invitationChangedPropertyFlagTime
_invitationChangedPropertyFlagTitle
_invitationStatus
_isBirthdayStore
_isComplete
_isCurrentlySyncing
_isDefaultCalendarForStore
_isDefaultEventCalendar
_isDefaultLocalCalendar
_isDefaultTaskCalendar
_isDeferrable
_isEffectivelyEmpty
_isEnabled
_isFacebook
_isFamilyCalendar
_isFirst
_isHidden
_isHolidayCalendar
_isHolidyCalendar
_isIgnoringEventAlerts
_isIgnoringSharedCalendarNotifications
_isImmutable
_isInbox
_isLocalStore
_isNightlySync
_isNotificationsCollection
_isPaused
_isPerformingBackupResetSync
_isPublished
_isReadonly
_isReminderWithLocation
_isSchedulingProhibited
_isSharingInvitation
_isSubscribed
_isTruncated
_items
_keyQueue
_keysToDirectMirrorCompanionToGizmo
_lastChangeToken
_lastFired
_lastSequenceNumber
_lastStore
_listener
_loadCache:sqlErr:
_loadLastSyncWindow
_loadedChangeTokenMap
_locationChanged
_locationPredictionState
_lock
_log
_logDbFile
_logFacility
_lzfseICSData
_makeMessageFromWireData:
_makeSqlErrorReasonString:
_makeWireMessageType:content:
_masterCount
_masterEventsToSync
_maxTimeout
_mean
_memberSchemas
_memberSchemasLock
_messaging
_metadataKeys
_migrateDoubleFrom:key:
_migrateIntegerFrom:key:
_migrateStringFrom:key:
_minTimeout
_moveMap
_msgType
_name
_nekEventStore
_nekReminderStore
_newPath
_nextDelay:
_nightlyTimeoutTracker
_notes
_notificationQueue
_npsManager
_nuevoIdentifier
_objectDelayUs
_occurrenceCache
_occurrenceCount
_oldCalendarIdentifier
_oldIdentifier
_onlyCreatorCanModify
_openDatabase
_os_lock
_outstanding
_ownerIdentityAddress
_ownerIdentityAddressString
_ownerIdentityDisplayName
_ownerIdentityEmail
_ownerIdentityFirstName
_ownerIdentityLastName
_packetNumber
_parseSql:andRun:
_path
_pathTemplate
_perfomanceTracker
_persistentID
_pipeQueue
_preSyncCensus
_preemptedSessionProgressLiar
_prefObserverLog
_preferencesObserver
_preferencesQueue
_prepDatabase
_prepareStatements
_previousFraction
_priority
_processArrayOfArrayOfICSWrappers:batchWrappers:session:
_processUpdateFromWatch:calendar:store:
_processUpdateWithICS:store:calendar:resultWrappers:resultCalendars:
_progressLiar
_properInvitationStatus
_properties
_publishedURL
_publishedURLString
_pushKey
_queue
_rICSData
_rawDb
_rawSendData:type:responseIdentifier:error:
_rawSendFile:type:responseIdentifier:error:
_readOnly
_readSource
_recordMap
_recreatePath
_recvDeleteEventEndpoint:
_recvSessionEnded:error:
_recvSetEventKitAlarmSnoozeEndpoint:
_recvSetEventKitReminderCompletedEndpoint:
_recvSetParticipantStatusEndpoint:
_recvSetReminderKitAlarmSnoozeEndpoint:
_recvSetReminderKitReminderCompletedEndpoint:
_registerForNotifications
_reminderChangeObserver
_reminderListKey
_reminderStore
_reminderTitle
_reminderUpdateTimeNs
_removeIdentifierForDeletedEntity:
_resetTimeoutTracker
_responseIdentifier
_retrySession:
_retrySync
_revDaysToSync
_rpcEndpoint
_runDuplicateChecker
_runOccurrenceCacheDumper
_saveEventStore:
_saveRequests
_saveRequestsNeedPurgeDeletedObjectsAfterSave
_sawSeqnoFailure
_schemaVersion
_seenMap
_selfAttendeeEmail
_selfAttendeeUUID
_selfIdentityAddress
_selfIdentityAddressString
_selfIdentityDisplayName
_selfIdentityEmail
_selfIdentityFirstName
_selfIdentityLastName
_selfOrganizerEmail
_selfOrganizerUUID
_sendChangesIfAvailable
_sendMessage:
_sendSessionEnded:error:
_sequenceKey
_service
_session
_sessionDepth
_sessionIdleQueue
_setActivity:
_setClipping:
_setInstance:version:
_setParticipantStatus
_setQueue:
_setReminderComplete
_setSchemaVersion:
_setState:
_shadowLock
_sharedOwnerAddress
_sharedOwnerName
_sharingInvitationResponse
_sharingStatus
_shouldFakeFailure
_shouldSendEvent:
_shouldSendReminder:
_showAlert
_sigmaSpan
_snoozeAlarmRequiresDetach
_snoozeAmount
_sourceIdentifier
_sources
_span
_spanEnd
_spanNowTime
_spanStart
_start
_startDate
_startDateMap
_startDeferralPolling
_startRecvSession:results:
_startSendSession:results:
_statsTracker
_stopDeferralPolling
_store
_storeFile
_storeIdentifier
_storeUpdateTimeNs
_storeWrapper
_subCalAccountID
_summary
_supportedEntityTypes
_supportsAlarmAcknowledgedDate
_supportsSharedCalendars
_suspended
_sweep
_syServiceLock
_symbolicColorName
_syncCoordinator
_syncKind
_syncRestrictionShadow
_syncService
_syncSession
_syncToken
_syncedEntityUniqueIdentifiers
_taskCalendarKey
_taskCompleted
_taskCompletionDate
_taskCutoff
_tasks
_terminateSemaphore
_terminated
_text
_timeChanged
_timeToLie
_timeZone
_tinyStore
_title
_titleChanged
_triggerFullSync
_triggerMigrationSync
_triggerNightlySync
_truncated
_type
_uUID
_updateAccount:withSourceWrapper:store:
_updateCalendar:withCalendarWrapper:
_updateList:withCalendarWrapper:
_updateSource:withSourceWrapper:store:
_updates
_usesSelfAttendee
_uuid
_validationObject
_validationWrapper
_variance
_waitingForCheckin
_wallTime
_wasUsingDataTransfer
_watchWalFile
_weakEventDatabaseController
_writeTally:
_zICSData
absoluteString
accesses
accountForStore:identifier:
accountID
accountPersistentID
activity
activity:customizeCriteria:
activityCondition
activityDefer:
activityIdentifier
activityIdentifier:
activityRun:
activitySubsystem:
addAttendeeEvents:
addCalendars:
addCompletion:
addDelegate:queue:
addItems:
addListWithName:toAccountChangeItem:listObjectID:
addMetadataKeys:
addMetadataValues:
addObject:
addObjectsFromArray:
addObserver:selector:name:object:
addReminderChangeItem:
addSchema:
addSources:
alarms
alertInviteeDeclines
allCalendars
allCalendarsInto:
allCloudKitAccountsInto:
allEventsInto:filter:window:
allListsInto:
allObjects
allValues
allocWithZone:
allowEvents
allowReminders
allowedEntityTypes
allowsCalendarAddDeleteModify
allowsEvents
allowsScheduling
allowsTasks
alpha
analytics
appendBytes:length:
appendData:
appendFormat:
appendString:
applyRebroadcastAlertInviteeDeclines
applyRebroadcastShowDeclinedEvents
applySidePropertiesToEntity:withWrapper:session:
applySidePropertiesToReminderChangeItem:withWrapper:session:
archivedDataWithRootObject:requiringSecureCoding:error:
array
arrayByAddingObject:
arrayWithCapacity:
arrayWithObjects:count:
attendeeCommentForIdentifier:
attendeeStatus
attendeeStatusFlag
attendeeStatusFlagForIdentifier:
attendeeStatusForIdentifier:
attendees
attributes
autorelease
auxiliaryChangeInfos
backgroundThread
batchedEnumerateAccountsForStore:changeSet:changeType:withBlock:
batchedEnumerateForChangeSet:changeType:forEntitiesOfClass:withFetchBlock:withBlock:
batchedEnumerateListsForStore:changeSet:changeType:withBlock:
batchedEnumerateRemindersForStore:changeSet:changeType:withBlock:
begin
beginObservingChanges
beginTrackingFromEpochForStore:clientName:
beginTrackingFromNowForStore:clientName:
bindBlob:
bindCount
bindDouble:
bindInteger:
bindPosition
bindString:
bindUint64:
blindChangeNumberAdvance:
boolForKey:keyExistsAndHasValidFormat:
boolValue
broadcast
bumpFaultsAndScheduleRetry
bytes
cache
cache:willEvictObject:
cachedCopy:
calendar
calendarForEntityType:eventStore:
calendarForEntityTypes:eventStore:
calendarIdentifier
calendarIdentifierInRowMappingForEventOrTask:
calendarIdentifierInRowMappingForRecordIDRef:
calendarInStore:withNEKCalendarID:
calendarItemCount
calendarItemExternalIdentifier
calendarItemsWithExternalIdentifier:
calendarItemsWithExternalIdentifier:inCalendars:
calendarItemsWithUniqueIdentifier:inCalendar:
calendarName
calendarTitle
calendarUpdateTimeNs
calendarWithIdentifier:
calendarWrappersForChangeSet:pipe:
calendars
calendarsAtIndex:
calendarsCount
calendarsForEntityType:
calendarsType
canBePublished
canBeShared
canUseDataTransfer
canUseLzfse
cancel
capacity
cdEntityName
changeFromData:ofType:
changeNumber
changeObserver
changeObserverDidObserveChanges:
changeObserverDidObserveTruncation:
changeObserverForReminderWithQueue:databaseController:environment:
changeSetForEvent
changeSetForReminder
changeStateMap
changeSupplier
changeTracking
changeType
changedObjectIDsSinceToken:resultHandler:
class
clearCalendars
clearHour:
clearItems
clearMetadataKeys
clearMetadataValues
clearRemoteBuildVersion
clearSources
clientName
code
colorString
columnCount
commit
compare:
compare:options:
compare:options:range:
compareAndSwapIntegerValue:expectedExistingValue:forKey:
completeAndFireIn:
completeAndFireNever
completeAndFireOnConnection
completion
completionDate
component:fromDate:
components:fromDate:
componentsSeparatedByString:
condition
configureAccount:accountChangeItemProvider:withAttributes:
configureAccount:withSaveRequest:withAttributes:
configureCalendar:inDatabase:withAttributes:
configureList:listChangeItemProvider:withAttributes:
configureList:withSaveRequest:withAttributes:
configureSource:inStore:withAttributes:
conformsToProtocol:
constraintsDescriptionPath
copy
copyWithZone:
count
countByEnumeratingWithState:objects:count:
countSessionType:
cpuTimeMs
createAccountWithSaveRequest:withAttributes:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
createListInAccount:withSaveRequest:withAttributes:
createOrUpdateSYObject:eventStore:reminderStore:session:
createTables
creatorCodeSigningIdentity
criteriaDelay
criteriaOnConnection
currentChangeTokenWithError:
currentSession
currentVersion
daCalendarItemUniqueIdentifier
daConstraintsDescriptionPath
daDisplayOrder
daExternalIdentificationTag
daHexString
daIsEventOnlyContainer
daIsImmutable
daIsNotificationsCollection
daIsReadOnly
daPushKey
daSupportsSharedCalendars
daSymbolicColorName
daSyncToken
daemon
data
dataUsingEncoding:
dataWithBytes:length:
dataWithContentsOfFile:
dataWithJSONObject:options:error:
dataWithSYObject:
databaseChangedExternally
databaseDidChange
databaseID
date
dateByAddingTimeInterval:
dateChanged
dateChangedForIdentifier:
dateWithTimeIntervalSince1970:
dateWithTimeIntervalSinceNow:
dateWithTimeIntervalSinceReferenceDate:
dbFileManager
dbFilename
debugDescription
decodeChangeData:fromProtocolVersion:ofType:
decodeObjectOfClasses:forKey:
deduplicateICSWrappers:
defaultAlarmOffset
defaultCalendarForNewEvents
defaultCalendarForNewReminders
defaultCenter
defaultLocalCalendar
defaultManager
deferPollingSource
degenerateChange
delegate
deleteAccount:
deleteEvent
deleteIdentifierForRecordID:
deleteInviteByUUID:
deleteItem:store:
deleteList:
deleteObjectByID:store:
deleteSYObject:eventStore:reminderStore:
deleteSourcesEventCalendars:inStore:
deleteSourcesTaskCalendars:inStore:
deleteValueForKey:
deleteWhatever:calendarsInSource:inStore:
deletedAccountIDsFromLoadedMap
deletedSourcesIDs
deletionMap
deletionWrapperForObjectID:deletedReminderAndListMapping:
deletionWrapperForRecordID:eventStore:
deletionWrapperForSourceID:
deletionWrappersForChangeSet:deletedReminderAndListMapping:skipAccountDeletions:pipe:
deletionWrappersForChangeSet:skipSourceDeletions:pipe:
deletionWrappersForSourceAggregator:pipe:
description
detachedItems
detacheesForIdentifierCreatingIfNeeded:detachedEventMap:
dict
dictionary
dictionaryRepresentation
dictionaryWithCapacity:
dictionaryWithObjects:forKeys:count:
didCalendarChange:
didReceiveReunionSyncCommand:
didReceiveStartSyncCommand:
didShowInvite:withUUID:
digest
dirtyMemory
displayOrder
distantFuture
domain
doubleValue
dueDateComponents
dumpToLog
duplicateCheck
ekEventStore
eks_cacheKey
eks_compoundIdentifier
eks_debugDesc
eks_defaultLocalList
eks_eventOnlyStoreFor:
eks_eventOnlyStoreIgnoringExternalChangesFor:withClientId:
eks_eventStoreFor:
eks_localAccount
eks_storeCount
eks_storeForSyncing
emailAddress
encodeObject:forKey:
encodeSYChangeForBackwardCompatibility:protocolVersion:
encodeWithCoder:
endMappingEntities
entityName
entityType
entityTypeForCalendarItemWithIdentifier:
enumerateCalendarItemIdentifiersUsingBlock:
enumerateEventsMatchingPredicate:usingBlock:
enumerateForChangeType:forEntitiesOfClass:withBlock:
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
environment
error
estimatedFireDate
eventChangeObserver
eventDatabaseController
eventForUID:occurrenceDate:
eventInFuture:inStore:
eventInWindow:inStore:
eventObjectIDsMatchingPredicate:
eventSourceForDatabase:identifier:
eventSources
eventStart
eventStore
eventStoreIdentifier
eventTitle
eventUpdateTimeNs
eventWithIdentifier:
eventWithUniqueId:
events
eventsWithExternalIdentifier:inCalendars:
exceptionWithName:reason:userInfo:
executeSql:
externalID
externalIDForIdentifier:
externalIDTag
externalId
externalIdentificationTag
externalIdentifier
externalModificationTag
externalRepresentation
failTimeout
failureScaling
fetch:
fetchAccountsIncludingInactive:error:
fetchAccountsWithError:
fetchAccountsWithObjectIDs:error:
fetchAuxiliaryChangeInfosOfType:withChangeObject:error:
fetchBlob
fetchChangedObjectIDs:
fetchChangesIntoPipe:deferrable:
fetchDefaultListWithError:
fetchDouble
fetchEventChangeSet
fetchEverythingIntoPipe:
fetchHistoryAfterToken:error:
fetchHourlyTallies:hour:
fetchInteger
fetchListWithObjectID:error:
fetchListsWithError:
fetchListsWithObjectIDs:error:
fetchNightlyIntoPipe:
fetchPosition
fetchReminderChangeSet
fetchReminderIncludingConcealedWithObjectID:error:
fetchReminderWithDACalendarItemUniqueIdentifier:inList:error:
fetchReminderWithExternalIdentifier:inList:error:
fetchRemindersMatchingPredicate:completion:
fetchRemindersWithError:
fetchRemindersWithObjectIDs:error:
fetchString
fetchUint64
fifo
fileExistsAtPath:
fileSystemRepresentation
fileURLWithPath:
filterAccountToSync:
filteredArrayUsingPredicate:
finish
finished
firstObject
firstTimeEver
flush
forEachUnique:
freshEventStoreFor:
fullSessionTimeout
getActivePairedDevice
getDataForKey:default:
getDefaultListForStore:
getDefaultTaskCalendar:defaultEventCalendar:store:
getDoubleForKey:default:
getDoubleValueForKey:default:
getFailureProbablity
getFixedRetryInternal
getIntegerForKey:default:
getIntegerValueForKey:default:
getMaximumSessionTimeout
getMinimumSessionTimeout
getStringForKey:default:
getStringValueForKey:default:
handleCalendarEventWithUniqueIdentifierFromGizmo:calendar:wrapper:detachedEventMap:
handleCalendarTaskWithUniqueIdentifierFromGizmo:calendar:wrapper:
handleNewEntity:withWrapper:session:
handleNewReminderChangeItem:withWrapper:session:
handleReminderWithUniqueIdentifierFromGizmo:saveRequest:list:wrapper:
handleUpdatedItemFromGizmo:type:withWrapper:identifier:
handleUpdatedReminderFromGizmo:withSaveRequest:withWrapper:
hasAccountPersistentID
hasAlarmIdentifier
hasAllowsCalendarAddDeleteModify
hasAllowsTasks
hasAttendeeStatus
hasAttributes
hasBeenAlerted
hasCalendar
hasCalendarIdentifier
hasCalendarItemCount
hasCalendarTitle
hasCalendarWrapper
hasCanBePublished
hasCanBeShared
hasChangeTrackingTokens
hasColorString
hasConstraintsDescriptionPath
hasCreatorBundleID
hasCreatorCodeSigningIdentity
hasDefaultAlarmOffset
hasDeleteEvent
hasDeletionWrapper
hasDigest
hasDuplicateCheck
hasEnd
hasEndDate
hasEntityType
hasEventIdentifier
hasEventStart
hasEventTitle
hasExternalID
hasExternalId
hasExternalIdentificationTag
hasExternalIdentifier
hasExternalModificationTag
hasExternalRepresentation
hasHasBeenAlerted
hasICSData
hasICSWrapper
hasIdentifier
hasInvitationChangedPropertyFlagAttendeeComment
hasInvitationChangedPropertyFlagAttendeeStatus
hasInvitationChangedPropertyFlagDate
hasInvitationChangedPropertyFlagLocation
hasInvitationChangedPropertyFlagTime
hasInvitationChangedPropertyFlagTitle
hasInvitationStatus
hasIsBirthdayStore
hasIsComplete
hasIsDefaultCalendarForStore
hasIsDefaultEventCalendar
hasIsDefaultLocalCalendar
hasIsDefaultTaskCalendar
hasIsEnabled
hasIsFacebook
hasIsFamilyCalendar
hasIsHidden
hasIsHolidayCalendar
hasIsIgnoringEventAlerts
hasIsIgnoringSharedCalendarNotifications
hasIsImmutable
hasIsInbox
hasIsNotificationsCollection
hasIsPublished
hasIsReadonly
hasIsSchedulingProhibited
hasIsSharingInvitation
hasItemIdentifier
hasLocationPredictionState
hasMasterCount
hasNotes
hasNuevoIdentifier
hasOccurrenceCache
hasOccurrenceCount
hasOldCalendarIdentifier
hasOldIdentifier
hasOnlyCreatorCanModify
hasOwnerIdentityAddressString
hasOwnerIdentityDisplayName
hasOwnerIdentityEmail
hasOwnerIdentityFirstName
hasOwnerIdentityLastName
hasPrefix:
hasProperInvitationStatus
hasPropertiesForIdentifier:
hasPublishedURLString
hasPushKey
hasRecurrenceRules
hasReminderTitle
hasRowMappingForEntity:
hasSelfAttendeeEmail
hasSelfAttendeeUUID
hasSelfIdentityAddressString
hasSelfIdentityDisplayName
hasSelfIdentityEmail
hasSelfIdentityFirstName
hasSelfIdentityLastName
hasSelfOrganizerEmail
hasSelfOrganizerUUID
hasSetAlarmSnooze
hasSetParticipantStatus
hasSetReminderComplete
hasSharedOwnerAddress
hasSharedOwnerName
hasSharingInvitationResponse
hasSharingStatus
hasShowAlert
hasSnoozeAlarmRequiresDetach
hasSourceIdentifier
hasStart
hasStartDate
hasStatus
hasStoreIdentifier
hasSubCalAccountID
hasSuffix:
hasSummary
hasSupportedEntityTypes
hasSupportsAlarmAcknowledgedDate
hasSupportsSharedCalendars
hasSymbolicColorName
hasSyncID
hasSyncId
hasSyncToken
hasTaskCompletionDate
hasTitle
hasUsesSelfAttendee
hasValidationWrapper
hash
hitRatio
hits
hour
iCSWrapper
icsTodoFromReminder:exportingOption:
identifier
identifierForRecordID:
identifierInRowMappingForEventOrTask:
identifierInRowMappingForRecordIDRef:
idsOptions
importICSData:intoCalendars:options:
importRemindersFromICSData:insertIntoListChangeItem:error:
inactive
incomingResponseIdentifier
indexOfObject:
init
initForFullSync:tinyStore:
initUniquelyWithKey:localFlag:
initWithAccount:
initWithAttributes:
initWithBase64EncodedString:options:
initWithBlock:
initWithCalendar:
initWithCalendarIdentifier:
initWithCalendarRef:
initWithCalendarRef:useAttributes:
initWithCapacity:
initWithChangeTracking:lastChangeToken:
initWithCoder:
initWithCustomClientId:
initWithDASymbolicColorName:daHexString:
initWithData:
initWithData:encoding:
initWithData:store:clientName:
initWithDatabaseManager:
initWithDelegate:
initWithEKOptions:
initWithEKOptions:path:changeTrackingClientId:enablePropertyModificationLogging:allowDelegateSources:
initWithEnvironment:
initWithEnvironment:name:defaultMean:defaultStddev:
initWithEventStore:cause:
initWithFIFOLength:name:
initWithFile:
initWithFileManager:
initWithIDSServiceName:
initWithIdentifier:calendarIdentifier:type:
initWithIdentifier:isDefaultLocalCalendar:
initWithKeyOptions:valueOptions:capacity:
initWithList:
initWithList:useAttributes:
initWithMachServiceName:
initWithNEKEventStore:eventChanges:reminderChanges:
initWithName:
initWithOptions:capacity:
initWithPath:
initWithPath:queue:
initWithPath:queue:readOnly:
initWithPersistentID:isLocalStore:
initWithPersistentObject:occurrenceDate:
initWithQueue:environment:
initWithQueue:text:
initWithReminderKitEnabled:clientName:
initWithService:
initWithService:priority:qos:asMasterStore:options:
initWithSourceIdentifier:attributes:calendarIdentifier:
initWithSpan:session:
initWithStore:
initWithStore:recordMap:
initWithTimeIntervalSinceReferenceDate:
initWithURL:
initWithUUIDString:
insertObject:atIndex:
insertedOrUpdatedSources
instance
instanceName
intValue
integerForKey:
integerValue
interfaceWithProtocol:
internalTransactionAuthorKeysToExclude
invitationChangedPropertyFlagAttendeeComment
invitationChangedPropertyFlagAttendeeStatus
invitationChangedPropertyFlagDate
invitationChangedPropertyFlagLocation
invitationChangedPropertyFlagTime
invitationChangedPropertyFlagTitle
invitationStatus
invitationStatusForIdentifier:
isAfter:
isBefore:
isComplete
isCompleted
isCurrentUser
isCurrentlySyncing
isDefaultCalendarForStore
isDefaultEventCalendar
isDefaultLocalCalendar
isDefaultSchedulingCalendar
isDefaultTaskCalendar
isDeferrable
isDegenerate:
isDelegate
isDetached
isEffectivelyEmpty
isEnabled
isEqual:
isEqualToNEKSourceID:
isEqualToNumber:
isEqualToString:
isEventKitSyncEnabledForReminderKit
isFacebook
isFacebookSource
isFamilyCalendar
isHidden
isHolidayCalendar
isHolidyCalendar
isIdentifierPresent:forRecordID:
isIgnoringEventAlerts
isIgnoringSharedCalendarNotifications
isImmutable
isImmutableRaw
isInternalDevice
isKindOfClass:
isLocalStore
isMasterOrDetachedOccurrence
isMemberOfClass:
isNotificationsCollection
isPerformingBackupResetSync
isPhantom
isPublished
isReadonly
isReminderKitEnabled
isReminderWithLocation
isResetSync
isSchedulingProhibited
isSending
isSharingInvitation
isSubscribed
isSubscribedHolidayCalendar
isTemporary
isTruncated
itemIdentifier
items
itemsAtIndex:
itemsCount
itemsType
join
keyEnumerator
lastChangeTokenForAccountID:
lastFired
lastInsertedRowId
lastObject
lastPathComponent
lastSequenceNumber
length
list
listCacheForStore:wrappers:
listInStore:withNEKCalendarID:
listWrappersForChangeSet:pipe:
listener
listener:shouldAcceptNewConnection:
load
loadChangeTrackingStateMapWithStore:
localAccountID
localBirthdayCalendarSource
localSource
localizedStandardCompare:
location
locationChangedForIdentifier:
locationPredictionState
locationPredictionStateForIdentifier:
lock
longLongValue
lzfseICSData
makeReportWithModel:
mapTableWithKeyOptions:valueOptions:
markAsDeferrable
markAsNotEffectivelyEmpty
markChangedObjectIDsConsumedUpToToken:
masterCount
maxTimeout
mean
mergeFrom:
metadataKeys
metadataKeysAtIndex:
metadataKeysCount
metadataKeysType
metadataValues
metadataValuesAtIndex:
metadataValuesCount
metadataValuesType
migrateFrom:
migratePrefsIfNecessary
minTimeout
minute
month
mutableCopy
name
nekEventStore
nekReminderStore
newFileName:
nextTimeout
notes
notifyForDatabaseUpdates
notifyForDatabaseUpdatesIfNeeded
nowMinusPrevious:
numberWithDouble:
numberWithInt:
numberWithInteger:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLongLong:
obfuscate
objectAtIndex:
objectAtIndexedSubscript:
objectDelayUs
objectForKey:
objectForKeyedSubscript:
objectID
objectIDWithUUID:
objectIdentifier
objectTypeForCalendarItemWithIdentifier:
occurrencesExistInRangeForEvent:startDate:endDate:mustStartInInterval:timezone:
okToPerformDeltaSync
oldCalendarIdentifier
oldIdentifier
oldListIdentifier
onlyCreatorCanModify
oops
orderedSet
orderedSetWithCapacity:
organizer
originalItem
originalStartDate
outgoingResponseIdentifier
owner
ownerIdentityAddress
ownerIdentityAddressString
ownerIdentityDisplayName
ownerIdentityEmail
ownerIdentityFirstName
ownerIdentityLastName
packetNumber
pairingID
pairingStorePath
parseSql:andRun:
parsed
participantStatus
participationStatus
path
pathTemplate
pause
perMessageTimeout
perfomanceTracker
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performUpdateWithICSWrappers:store:session:
persistToData:
persistentID
persistentObject
postNotificationName:object:
predicateForEventsWithStartDate:endDate:calendars:
predicateForMasterEventsInCalendar:
predicateForMasterEventsInCalendars:
predicateForMasterEventsWithOccurrencesWithStartDate:endDate:inCalendar:
predicateForRemindersInCalendars:
predicateWithBlock:
prepDatabasesForResetSync
previousDefaultEventCalendar
previousDefaultReminderListID
previousDefaultTaskCalendar
progressLiar
properInvitationStatus
properInvitationStatusForIdentifier:
properties
propertiesForCalendarItemIdentifier:
propertyListWithData:options:format:error:
provideChangeTrackingForAccountID:clientName:transactionAuthorKeysToExclude:
publicObjectWithObjectID:
publishURL
publishedURL
publishedURLString
purge
purgeRecordMap
push:
rawDb
readFrom:
readOnly
rebroadcastAlertInviteeDeclinesChangeNotification
rebroadcastAllObservedNotifications
rebroadcastShowDeclinedChangeNotification
receivedReunionSyncNotificationString
receivedStartSyncNotificationString
recordChanged:
recordMap
recordSessionType:
registerForDetailedChangeTracking:
registerMessageType:handler:
remObjectID
reminderChangeObserver
reminderDatabaseController
reminderIdentifier
reminderInFuture:
reminderInWindow:
reminderObjectIDsMatchingPredicate:
reminderStore
reminderTitle
reminderUpdateTimeNs
remindersWithExternalIdentifier:inCalendars:
remindersWrappersForChangeSet:skipAccountDeletions:pipe:
removeAllItems
removeAllObjects
removeAllRecords
removeAllRemindersInList:
removeCalendar:commit:error:
removeDeletableAccounts:
removeDeletableLists:
removeEvent:span:error:
removeFromList
removeFromParent
removeIdentifiersForDeletedRecordIDs:
removeItemAtPath:error:
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removeObserver:name:object:
removeReminder:commit:error:
removeSource:commit:error:
reply:to:completion:
resetDataStoreForSyncSession:completion:
resetFetchCursor
resetLocalCalendarCache
respondsToSelector:
responseIdentifier
restartTrackingChanges
resume
retain
retainCount
reverseObjectEnumerator
rollback
rowID
runForNow
runFrom:to:
save
saveCalendar:commit:error:
saveChangeTrackingStateMap:
saveEvent:span:commit:error:
saveEvent:span:error:
saveReminder:error:
saveRequestForStore:
saveRequestForStore:needsPurgeDeletedObjectsAfterSave:
saveRequests
saveRequestsNeedPurgeDeletedObjectsAfterSave
saveSource:commit:error:
saveSynchronouslyWithError:
scheduleDeferredRetry
scheduleRetry
second
self
selfAttendee
selfAttendeeEmail
selfAttendeeUUID
selfAttendeeUUIDForIdentifier:
selfIdentityAddress
selfIdentityAddressString
selfIdentityDisplayName
selfIdentityEmail
selfIdentityFirstName
selfIdentityLastName
selfOrganizerEmail
selfOrganizerEmailForIdentifier:
selfOrganizerUUID
sendData:toDestinations:priority:options:identifier:error:
sendMessage:responseHandler:completion:
sendResourceAtURL:metadata:toDestinations:priority:options:identifier:error:
sendSetCompleted:calendarName:title:externalIdentifier:
sendSetEventAlarmSnooze:calendarName:storeId:eventId:alarmIdentifier:
sendSetParticipantStatus:span:storeId:eventId:
sendSetReminderAlarmSnooze:calendarName:title:externalIdentifier:alarmIdentifier:
sequencer
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:sentBytes:totalBytes:
service:account:incomingData:fromID:context:
service:account:incomingMessage:fromID:context:
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:receivedGroupSessionParticipantDataUpdate:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantUpdate:context:
service:activeAccountsChanged:
service:connectedDevicesChanged:
service:devicesChanged:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:didSwitchActivePairedDevice:acknowledgementBlock:
service:didSwitchFromPairingID:toPairingID:
service:encounteredError:context:
service:incomingData:completion:
service:incomingStream:metadata:completion:
service:linkedDevicesChanged:
service:nearbyDevicesChanged:
service:sessionEnded:error:
service:startSession:error:
service:targetDeviceConnectionChanged:
service:targetDeviceProximityChanged:
service:willPreferSession:overSession:
service:willSwitchFromPairingID:toPairingID:
serviceAllowedTrafficClassifiersDidReset:
serviceDidPairDevice:
serviceDidUnpairDevice:
setAccesses:
setAccountPersistentID:
setActivity:
setActivityCondition:
setActivityIdentifier:
setAlarmIdentifier:
setAlarmSnooze
setAllPropertiesForItem:identifier:wrapper:needsInvite:eventStore:calendar:
setAllPropertiesForReminder:identifier:wrapper:store:list:oldListIdentifier:
setAllowsCalendarAddDeleteModify:
setAllowsEvents:
setAllowsScheduling:
setAlpha:
setAnalytics:
setAttendeeComment:
setAttendeeComment:forIdentifier:
setAttendeeStatus:
setAttendeeStatus:forIdentifier:
setAttendeeStatusFlag:
setAttendeeStatusFlag:forIdentifier:
setAttributes:
setAuthor:
setBackgroundThread:
setCache:
setCalendar:
setCalendarIdentifier:
setCalendarItemCount:
setCalendarName:
setCalendarTitle:
setCalendarUpdateTimeNs:
setCalendarWrapper:
setCalendars:
setCanBePublished:
setCanRestart:
setCapacity:
setChangeNumber:
setChangeObserver:
setChangeSupplier:
setChangeToken:forAccountID:
setChangeTracking:
setCloudFallback:
setColor:
setCompleted:
setCompletion:
setCompletionDate:
setComponents:options:
setCondition:
setConstraintsDescriptionPath:
setCountLimit:
setCpuTime:
setCreatorBundleID:
setCreatorCodeSigningIdentity:
setCriteriaDelay:
setCriteriaOnConnection:
setDaDisplayOrder:
setDaemon:
setData:
setDate:
setDateChanged:forIdentifier:
setDateFormat:
setDb:
setDbFilename:
setDefaultAlarmOffset:
setDeferPollingSource:
setDelegate:
setDelegate:queue:
setDeletes:
setDeletionWrapper:
setDict:
setDigest:
setDisplayOrder:
setDouble:forKey:
setDoubleValue:forKey:
setDuplicateCheck:
setEnabled:
setEndDate:
setEngineType:
setEntityType:
setError:
setEstimatedFireDate:
setEventChangeObserver:
setEventIdentifier:
setEventStart:
setEventTitle:
setEventUpdateTimeNs:
setEvents:
setExportedInterface:
setExportedObject:
setExternalID:
setExternalID:forIdentifier:
setExternalIDTag:
setExternalId:
setExternalIdentificationTag:
setExternalIdentifier:
setExternalModificationTag:
setExternalRepresentation:
setFailureScaling:
setFamilyCalendar:
setFetcher:
setFifo:
setFinished:
setFirstTimeEver:
setFullSessionTimeout:
setHasAllowsCalendarAddDeleteModify:
setHasAllowsEvents:
setHasAllowsTasks:
setHasAttendeeStatus:
setHasBeenAlerted:
setHasCalendarItemCount:
setHasCanBePublished:
setHasCanBeShared:
setHasChangesAvailable
setHasDate:
setHasDefaultAlarmOffset:
setHasDisplayOrder:
setHasEnd:
setHasEndDate:
setHasEntityType:
setHasEventStart:
setHasHasBeenAlerted:
setHasInvitationChangedPropertyFlagAttendeeComment:
setHasInvitationChangedPropertyFlagAttendeeStatus:
setHasInvitationChangedPropertyFlagDate:
setHasInvitationChangedPropertyFlagLocation:
setHasInvitationChangedPropertyFlagTime:
setHasInvitationChangedPropertyFlagTitle:
setHasInvitationStatus:
setHasIsBirthdayStore:
setHasIsComplete:
setHasIsDefaultCalendarForStore:
setHasIsDefaultEventCalendar:
setHasIsDefaultLocalCalendar:
setHasIsDefaultTaskCalendar:
setHasIsEnabled:
setHasIsFacebook:
setHasIsFamilyCalendar:
setHasIsHolidayCalendar:
setHasIsIgnoringEventAlerts:
setHasIsIgnoringSharedCalendarNotifications:
setHasIsImmutable:
setHasIsInbox:
setHasIsLocalStore:
setHasIsNotificationsCollection:
setHasIsPublished:
setHasIsReadonly:
setHasIsSchedulingProhibited:
setHasIsSharingInvitation:
setHasIsSubscribed:
setHasLocationPredictionState:
setHasMasterCount:
setHasOccurrenceCount:
setHasOnlyCreatorCanModify:
setHasPacketNumber:
setHasProperInvitationStatus:
setHasSharingInvitationResponse:
setHasSharingStatus:
setHasShowAlert:
setHasSnoozeAlarmRequiresDetach:
setHasSnoozeAmount:
setHasSpan:
setHasStart:
setHasStartDate:
setHasStatus:
setHasSupportedEntityTypes:
setHasSupportsAlarmAcknowledgedDate:
setHasSupportsSharedCalendars:
setHasTaskCompletionDate:
setHasType:
setHasUsesSelfAttendee:
setHidden:
setHits:
setICSData:
setICSWrapper:
setIdentifier:
setIdentifier:masterRowID:summary:location:startTime:forRecordID:
setIdsOptions:
setImmutable:
setInactive:
setInbox:
setInserts:
setInteger:forKey:
setIntegerValue:forKey:
setInvitationChangedPropertyFlagAttendeeComment:
setInvitationChangedPropertyFlagAttendeeStatus:
setInvitationChangedPropertyFlagDate:
setInvitationChangedPropertyFlagLocation:
setInvitationChangedPropertyFlagTime:
setInvitationChangedPropertyFlagTitle:
setInvitationStatus:
setInvitationStatus:forIdentifier:
setIsBirthdayStore:
setIsComplete:
setIsDefaultCalendarForStore:
setIsDefaultEventCalendar:
setIsDefaultLocalCalendar:
setIsDefaultTaskCalendar:
setIsEnabled:
setIsFacebook:
setIsFamilyCalendar:
setIsHidden:
setIsHolidayCalendar:
setIsHolidyCalendar:
setIsIgnoringEventAlerts:
setIsIgnoringSharedCalendarNotifications:
setIsInbox:
setIsLocalStore:
setIsNotificationsCollection:
setIsReadonly:
setIsReminderWithLocation:
setIsSchedulingProhibited:
setIsSharingInvitation:
setIsSubscribed:
setItemIdentifier:
setItems:
setLastChangeToken:
setLastFired:
setLastSequenceNumber:
setLength:
setListener:
setLocationChanged:
setLocationChanged:forIdentifier:
setLocationPredictionState:
setLocationPredictionState:forIdentifier:
setLzfseICSData:
setMaxConcurrentMessages:
setMaxTimeout:
setMean:
setMetadata:forCalendarItemIdentifier:
setMetadataKeys:
setMetadataValues:
setMinTimeout:
setMinimalPropertiesForItem:identifier:wrapper:
setMinimalPropertiesForReminder:identifier:wrapper:
setMode:
setMoveMap:
setMsgType:
setName:
setNeedsFullSync
setNeedsMigrationSync
setNeedsNightlySync
setNeedsResetSync
setNeedsReunionSync
setNekEventStore:
setNekReminderStore:
setNotes:
setNotificationsCollection:
setNuevoIdentifier:
setObfuscate:
setObject:forKey:
setObject:forKeyedSubscript:
setObjectDelayUs:
setOccurrenceCache:
setOccurrenceCount:
setOldCalendarIdentifier:
setOldIdentifier:
setOnlyCreatorCanModify:
setOptions:
setOrganizer:
setOwnerIdentityAddress:
setOwnerIdentityAddressString:
setOwnerIdentityDisplayName:
setOwnerIdentityEmail:
setOwnerIdentityFirstName:
setOwnerIdentityLastName:
setPacketNumber:
setParsed:
setParticipantStatus
setParticipationStatus:
setPath:
setPathTemplate:
setPerMessageTimeout:
setPerfomanceTracker:
setPersistentID:
setPreviousDefaultEventCalendar:
setPreviousDefaultReminderListID:
setPriority:
setProgressLiar:
setProperInvitationStatus:
setProperInvitationStatus:forIdentifier:
setProperties:
setPropertiesForWrapper:withCalendarItems:needsInvite:sendAllProperties:eventStore:calendar:originalEvent:
setPropertiesForWrapper:withReminders:oldListIdentifier:sendAllProperties:store:list:
setPublishURL:
setPublishedURL:
setPublishedURLString:
setPushKey:
setRawDb:
setReadOnly:
setRecordMap:
setReminderChangeObserver:
setReminderComplete
setReminderTitle:
setReminderUpdateTimeNs:
setResponseIdentifier:
setSaveRequests:
setSaveRequestsNeedPurgeDeletedObjectsAfterSave:
setSelfAttendee:
setSelfAttendeeEmail:
setSelfAttendeeEmail:forIdentifier:
setSelfAttendeeUUID:
setSelfAttendeeUUID:forIdentifier:
setSelfIdentityAddress:
setSelfIdentityAddressString:
setSelfIdentityDisplayName:
setSelfIdentityEmail:
setSelfIdentityFirstName:
setSelfIdentityLastName:
setSelfOrganizerEmail:
setSelfOrganizerEmail:forIdentifier:
setSelfOrganizerUUID:
setSelfOrganizerUUID:forIdentifier:
setSendingBufferCap:
setSerializer:
setService:
setSession:
setSessionMetadata:
setSetAlarmSnooze:
setSetParticipantStatus:
setSetReminderComplete:
setSharedOwnerAddress:
setSharedOwnerName:
setSharingInvitation:
setSharingInvitationResponse:
setSharingStatus:
setShowAlert:
setSigmaSpan:
setSnoozeAlarmRequiresDetach:
setSnoozeAmount:
setSource:
setSourceIdentifier:
setSourceType:
setSources:
setSpan:
setSpanEnd:
setSpanStart:
setStart:
setStartDate:
setStartDate:forIdentifier:
setStartDateComponents:
setStartDateMap:
setStatsTracker:
setStatus:
setStddev:
setStore:
setStoreFile:
setStoreIdentifier:
setStoreUpdateTimeNs:
setStoreWrapper:
setStores:
setString:forKey:
setStringValue:forKey:
setSubCalAccountID:
setSubcalAccountID:
setSubscribed:
setSubscribedHolidayCalendar:
setSummary:
setSupportedEntityTypes:
setSupportsAlarmAcknowledgedDate:
setSupportsSharedCalendars:
setSymbolicColorName:
setSyncController:
setSyncCoordinator:
setSyncID:
setSyncId:
setSyncKind:
setSyncToken:
setTaskCompleted:
setTaskCompletionDate:
setTaskCutoff:
setTaskCutoffDate:
setTasks:
setTerminateSemaphore:
setTerminated:
setTimeChanged:forIdentifier:
setTimeZone:
setTitle:
setTitleChanged:
setTitleChanged:forIdentifier:
setTruncated:
setType:
setUUID:
setUniqueId:
setUpdates:
setUsesSelfAttendee:
setUuid:
setValidationObject:
setValidationWrapper:
setValue:forKey:
setVariance:
setWaitingForCheckin:
setWallTime:
setWeakReminderDatabaseController:
setWithCapacity:
setWithObject:
setX_calendarserver_access:
settablePropertiesForCalendarItemIdentifier:
shared
sharedInstance
sharedOwnerAddress
sharingInvitationResponse
sharingStatus
shouldSendEntity:
shouldSendReminder:
shouldShowInvite:withUUID:
shouldSyncBasedOnTime:
showAlert
showDeclinedEvents
sigmaSpan
snoozeAlarm:withTimeIntervalFromNow:
snoozeAlarmRequiresDetach
snoozeAmount
snoozeFromNowForTimeInterval:
someStore
source
sourceIdentifier
sourceType
sourceWithEventStore:
sourceWithExternalID:
sourceWithIdentifier:
sourcesCount
sourcesType
span
spanStart
start
startDate
startDateComponents
startDateForIdentifier:
startDateMap
startMappingEntities
statsTracker
status
stddev
step
stopObservingChanges
store
storeDidChange
storeDidChangeNotificationName
storeFile
storeForEventWithEnvironment:
storeForReminderWithEnvironment:
storeUpdateTimeNs
storeWrapper
storeWrapperForCloudKitAccount:pipe:
storeWrappersForSourceAggregator:pipe:
stores
string
stringByDeletingLastPathComponent
stringByReplacingOccurrencesOfString:withString:
stringRepresentation
stringWithFormat:
stringWithUTF8String:
structuredLocation
subdataWithRange:
superclass
supportedEntityTypes
supportsAlarmAcknowledgedDate
supportsCapability:
supportsMigrationSync
supportsSecureCoding
supportsSharedCalendars
sweep
sweepSeenMap
symbolicColorName
syncController
syncCoordinator:beginSyncSession:
syncCoordinator:didInvalidateSyncSession:
syncCoordinatorDidChangeSyncRestriction:
syncCoordinatorDidReceiveStartSyncCommand:
syncID
syncId
syncKind
syncSession:applyChanges:completion:
syncSession:didEndWithError:
syncSession:enqueueChanges:error:
syncSession:resetDataStoreWithError:
syncSession:restartChanges:
syncSession:rollbackChangesWithError:
syncStateDBPathFor:
syncToken
synchronize
synchronizeNanoDomain:keys:
synchronizeUserDefaultsDomain:keys:
systemBuildVersion
systemTimeZone
targetIsConnected
targetableDevice
taskCompleted
taskCompletionDate
taskCutoff
taskCutoffDate
tasks
tc_advanceChangeNumber
tc_setAutomaticSync:
tc_setFailureProbablity:
tc_setFixedRetryInternal:
tc_setMaximumSessionTimeout:
tc_setMinimumSessionTimeout:
tc_setNominal
tc_setObjectDelay:
tc_status:
terminate
terminateIfNotFinished
terminateSemaphore
terminated
text
timeChanged
timeChangedForIdentifier:
timeIntervalSince1970
timeIntervalSinceDate:
timeIntervalSinceNow
timeIntervalSinceReferenceDate
timeZone
tinyStore
title
titleChanged
titleChangedForIdentifier:
transaction
transactionAuthorsToExclude
truncated
type
uUID
unarchivedObjectOfClass:fromData:error:
uniqueId
uniqueIdentifier
universalToken
unlocalizedTitle
unlock
unregisterForDetailedChangeTracking:
unsignedIntegerValue
updateAccount:
updateCalendar:store:
updateEvent:identifier:eventStore:occurrenceDate:participationStatus:masterIdentifier:isMaster:
updateFailure
updateICS:store:session:
updateInvitationStatusForCalendarItem:identifier:withWrapper:session:
updateList:
updateMasterEvent:masterIdentifier:calendarIdentifier:masterParticipationStatus:detachedEvents:
updateReminderChangeItem:fromICSData:isNew:withOptions:error:
updateRowMappingForEntity:
updateSelfAttendeeForCalendarItem:identifier:withWrapper:
updateSource:store:
updateSuccess:
updatedProperties
userInfo
usesSelfAttendee
uuid
validate
validationEnabled
validationObject
validationWrapper
validationWrapperForPb:
validationWrapperForRightNow
validationWrapperForSameSpan:
valueForKey:
variance
wait
waitForPairingStorePathPairingID:
waitingForCheckin
wallTime
weakEventDatabaseController
weakReminderDatabaseController
wrapperForCalEntity:
wrapperForCalendar:
wrapperForCalendar:useAttributes:
wrapperForCalendarItem:
wrapperForCalendarItem:needsInvite:eventStore:
wrapperForList:useAttributes:
wrapperForReminder:oldListIdentifier:
wrapperForReminder:oldListIdentifier:store:
wrapperForSource:
writeCrashReport:
writeTo:
writeToFile:options:error:
x_calendarserver_access
year
zone
NEKPBOccurrenceCache
NSCopying
NEKICSWrapperMetadata
NEKICSWrapper
SYChange
NSObject
NEKStatTracker
EventKitSync
EventKitAdditions
NEKEnvironment
NEKCalendarWrapper
Reminder
NEKPBSourceID
Event
NDTSQException
NDTSQFile
NSCacheDelegate
NDTSQActor
NEKPBCalendarWrapper
EKObject_EventKitSync
NEKStore
Reminders
NEKPBCalendarAttributes
NEKTinyStore
NDTMessage
NDTMessaging
IDSServiceDelegate
NEKValidationWrapper
NDTSQKeyValueStore
NEKPBDuplicateSource
NEKAnalyticsReporter
_NEKSyncSet
NEKEventStore
NEKSack
NEKSyncCoordinator
PSYSyncCoordinatorDelegate
NEKPBValidationWrapper
NEKPreferencesObserver
NEKSessionAnalyticsStore
NDTCrashSynthesizer
NEKRPCEndpoint
NEKAnalyticsDriver
NDTActivityDelegate
NEKDeletionWrapper
NEKDaemon
NDTLogFacility
NDTLog
NEKSourceChangeAggregator
KeepItSimple
NEKSyncWindow
NEKRecordMap
NEKPBSetReminderComplete
NEKCalendarID
NEKPBSourceAttributes
NEKProgressLiar
NEKTestControlProtocol
NEKTestControl
NSXPCListenerDelegate
NEKOccurrenceCacheDumper
NEKDatabaseFileManager
NEKSessionAnalytics
NDTSQStatement
NEKChangeObserver
NEKCapabilities
NEKPBDuplicateCheck
NEKReminderChangeSet
NEKEventChangeSet
NEKSeenMap
NDTResultsFIFO
NEKSyncController
NEKChangeObserverDelegate
SYServiceDelegate
NEKPBProtoBuffMessage
NEKSourceWrapper
NEKChangeSet
NEKCalendarAttributes
NEKSourceID
NEKPBCalendarIdentifier
NEKResultsFetcher
NEKPBICSWrapperMetadata
NDTObjectCache
NEKPBDuplicateCalendar
NEKSyncSession
SYSessionDelegate
NDTPerf
NEKPBSetAlarmSnooze
NEKProtobufSerializer
SYChangeSerializer
NEKReminderStore
NEKEventChangeObserver
NEKPBICSWrapper
NEKPBDailyAnalytics
NEKSourceAttributes
NDTSQSchema
NEKPBItemOccurrence
NEKResultsPipe
NEKReminderChangeObserver
NEKReminderChangeTrackingState
NEKReminderChangeTrackingStateMap
NSSecureCoding
NSCoding
NEKPBDeleteEvent
NEKEventPurger
NEKStoreRoller
NDTActivity
NEKPBDeletionWrapper
NEKPBSetParticipantStatus
NEKPBSourceWrapper
#16@0:8
@24@0:8^{_NSZone=}16
v24@0:8d16
v20@0:8B16
B16@0:8
v16@0:8
v24@0:8@16
Q16@0:8
@24@0:8Q16
@16@0:8
B24@0:8@16
d16@0:8
@"NSMutableArray"
{?="end"b1"start"b1}
v24@0:8Q16
q16@0:8
v24@0:8q16
@"NSString"
@"NSDate"
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8@16
v32@0:8@16@24
v28@0:8B16@20
v32@0:8Q16@24
v32@0:8q16@24
q24@0:8@16
v24@0:8@?16
Q24@0:8@16
@"NSData"
@"NEKCalendarID"
@"NSDictionary"
@"NSMutableDictionary"
@48@0:8@16@24d32d40
d24@0:8d16
@"NEKEnvironment"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSCondition"
@"NEKSyncController"
@"NEKDatabaseFileManager"
@"NEKTinyStore"
@"NEKRecordMap"
@"NEKSeenMap"
@"NEKSyncCoordinator"
@"NEKSessionAnalytics"
@"NEKDaemon"
@40@0:8@16@24@32
@"NEKSourceID"
@"NEKCalendarAttributes"
v64@0:8@16@24@32@40@48@56
v40@0:8@16@24@32
v60@0:8@16@24@32B40@44@52
{?="isLocalStore"b1}
@32@0:8@16@24
v32@0:8@"NSCache"16@24
v32@0:8@16@?24
v24@0:8@"NSString"16
v32@0:8@"NSString"16@?<i@?@"NDTSQStatement">24
@36@0:8@16@24B32
@32@0:8@16^i24
v32@0:8@16q24
^{sqlite3=}16@0:8
v24@0:8^{sqlite3=}16
@"NSObject<OS_dispatch_queue>"
@"NSMutableOrderedSet"
@"NDTSQKeyValueStore"
@"NSObject<OS_dispatch_source>"
@"NSHashTable"
^{sqlite3=}
@"<NDTSQFileDelegate>"
@"NEKPBCalendarAttributes"
@"NEKPBSourceID"
{?="isDefaultEventCalendar"b1"isDefaultTaskCalendar"b1}
@"<NEKChangeObserver>"
v20@0:8i16
i16@0:8
{?="invitationStatus"b1"sharingInvitationResponse"b1"sharingStatus"b1"supportedEntityTypes"b1"displayOrder"b1"canBePublished"b1"canBeShared"b1"hasBeenAlerted"b1"isDefaultCalendarForStore"b1"isFamilyCalendar"b1"isHidden"b1"isHolidayCalendar"b1"isIgnoringEventAlerts"b1"isIgnoringSharedCalendarNotifications"b1"isImmutable"b1"isInbox"b1"isNotificationsCollection"b1"isPublished"b1"isReadonly"b1"isSchedulingProhibited"b1"isSharingInvitation"b1"isSubscribed"b1}
q32@0:8@16q24
B40@0:8q16q24@32
v32@0:8d16@24
d32@0:8@16d24
@"NDTSQFile"
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v40@0:8@16@24@?32
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32@"IDSMessageContext"40
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v20@0:8I16
@48@0:8@16@24@32^@40
v40@0:8@16@?24@?32
@"IDSService"
@"NDTLogFacility"
@"NSArray"
v40@0:8^@16^@24@32
v48@0:8@16q24@32@40
B68@0:8@16@24@32@40q48@56B64
B56@0:8@16@24@32q40@48
@40@0:8@16@24^@32
v36@0:8@16B24@28
@28@0:8@16B24
B40@0:8@16@24@32
B32@0:8@16@24
v68@0:8@16@24@32B40@44@52@60
v32@0:8@"PSYSyncCoordinator"16@"PSYServiceSyncSession"24
v24@0:8@"PSYSyncCoordinator"16
@"PSYServiceSyncSession"
@"PSYSyncCoordinator"
{?="endDate"b1"masterCount"b1"occurrenceCount"b1"startDate"b1"showAlert"b1}
@"NSObject<OS_os_log>"
@"NPSManager"
@"NPSDomainAccessor"
@"EKPreferences"
v24@0:8^{NEKAnalyticsTally=iiii}16
v28@0:8^{NEKAnalyticsTally=iiii}16i24
@28@0:8B16@20
v48@0:8q16q24@32@40
v72@0:8@16@24d32@40@48@56q64
v44@0:8B16@20@28@36
v56@0:8d16@24@32@40@48
B40@0:8@16@24d32
@"NDTMessaging"
*24@0:8@16
v24@0:8@"NDTActivity"16
*24@0:8@"NDTActivity"16
v32@0:8@"NDTActivity"16@"NSObject<OS_xpc_object>"24
@"NDTActivity"
@36@0:8@16@24i32
@"NEKPreferencesObserver"
v40@0:8Q16@24@32
@"NSSet"
@"EKEventStore"
B24@0:8d16
@"NSTimeZone"
v64@0:8@16q24@32@40d48@56
{?="isComplete"b1}
I16@0:8
{?="defaultAlarmOffset"b1"type"b1"allowsCalendarAddDeleteModify"b1"allowsEvents"b1"allowsTasks"b1"isBirthdayStore"b1"isEnabled"b1"isFacebook"b1"isLocalStore"b1"onlyCreatorCanModify"b1"snoozeAlarmRequiresDetach"b1"supportsAlarmAcknowledgedDate"b1"supportsSharedCalendars"b1"usesSelfAttendee"b1}
@32@0:8d16@24
v24@0:8@?<v@?@"NSString">16
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"NSXPCListener"
B40@0:8@16@?24@32
@"NEKSessionAnalyticsStore"
i24@0:8q16
i24@0:8Q16
i24@0:8@16
i24@0:8d16
v24@0:8^{sqlite3_stmt=}16
^{sqlite3_stmt=}16@0:8
^{sqlite3_stmt=}
@"NEKEnvironment"16@0:8
@"<NEKChangeObserverDelegate>"16@0:8
v24@0:8@"<NEKChangeObserverDelegate>"16
@"<NEKChangeObserverDelegate>"
v36@0:8i16#20@?28
@32@0:8q16@24
@"NSError"
v24@0:8@"<NEKChangeObserver>"16
B40@0:8@16@24^@32
v48@0:8@16@24@32@?40
v28@0:8@16B24
B40@0:8@"SYService"16@"SYSession"24^@32
v40@0:8@"SYService"16@"SYSession"24@"NSError"32
v40@0:8@"SYService"16@"NSData"24@?<v@?B@"NSError">32
v48@0:8@"SYService"16@"NSInputStream"24@"NSDictionary"32@?<v@?B@"NSError">40
v40@0:8@"SYService"16@"NSError"24@"NSDictionary"32
@"SYSession"40@0:8@"SYService"16@"SYSession"24@"SYSession"32
v40@0:8@"SYService"16@"NSUUID"24@"NSUUID"32
v28@0:8@"SYService"16B24
v24@0:8@"SYService"16
v32@0:8@16^{StartSessionResults=BB@}24
d24@0:8q16
@"SYService"
@"NEKStore"
@"NEKSyncSession"
@"NEKAnalyticsDriver"
@"NEKStatTracker"
@"NEKRPCEndpoint"
@"NEKProgressLiar"
@"NEKTestControl"
@"<NEKSyncControllerDelegate>"
@"NEKPBCalendarWrapper"
@"NEKPBDeleteEvent"
@"NEKPBDeletionWrapper"
@"NEKPBICSWrapper"
@"NEKPBSetAlarmSnooze"
@"NEKPBSetParticipantStatus"
@"NEKPBSetReminderComplete"
@"NEKPBSourceWrapper"
@"NEKPBValidationWrapper"
{?="packetNumber"b1}
@"NEKSourceAttributes"
@?16@0:8
@"NSURL"
{?="isDefaultLocalCalendar"b1}
@"NEKEventChangeObserver"
@"NEKReminderChangeObserver"
@"NEKEventStore"
@"NEKReminderStore"
@"NSThread"
@"NSObject<OS_dispatch_semaphore>"
{?="attendeeStatus"b1"entityType"b1"invitationStatus"b1"locationPredictionState"b1"properInvitationStatus"b1"startDate"b1"invitationChangedPropertyFlagAttendeeComment"b1"invitationChangedPropertyFlagAttendeeStatus"b1"invitationChangedPropertyFlagDate"b1"invitationChangedPropertyFlagLocation"b1"invitationChangedPropertyFlagTime"b1"invitationChangedPropertyFlagTitle"b1}
@24@0:8q16
I40@0:8@16@?24^@32
B32@0:8@16^@24
I40@0:8@"SYSession"16@?<B@?@"<SYChange>">24^@32
v40@0:8@"SYSession"16@"NSArray"24@?<v@?B@"NSError">32
v32@0:8@"SYSession"16@"NSError"24
B32@0:8@"SYSession"16^@24
v32@0:8@"SYSession"16@?<v@?B@"NSError">24
v32@0:8@"SYSession"16@"NSSet"24
^{ct_green_tea_logger_s=}
@"NEKValidationWrapper"
@"NEKResultsPipe"
@"NEKResultsFetcher"
@"NDTPerf"
{?="snoozeAmount"b1}
@32@0:8@16q24
@40@0:8@16q24q32
@"NSData"24@0:8@"<SYChange>"16
@"<SYChange>"32@0:8@"NSData"16q24
@"NSData"24@0:8@"<SYObject>"16
@"<SYObject>"24@0:8@"NSData"16
@"NSData"32@0:8@"<SYChange>"16q24
@"<SYChange>"40@0:8@"NSData"16q24q32
v52@0:8@16i24#28@?36@?44
v44@0:8@16@24i32@?36
v44@0:8@16@24B32@36
@"NSMapTable"
v36@0:8@16i24@28
@"NEKPBCalendarIdentifier"
{?="displayOrder"b1"taskCompletionDate"b1"calendarItemCount"b1}
@"NEKPBDuplicateCheck"
@"NEKPBOccurrenceCache"
@"NSNumber"
{?="date"b1}
B56@0:8@16@24@32^@40^@48
@"NEKReminderChangeTrackingStateMap"
@"REMChangeTracking"
@"REMChangeToken"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^@16
v48@0:8@16@24@?32@?40
{?="eventStart"b1"span"b1}
r*16@0:8
v24@0:8r*16
@"<NDTActivityDelegate>"
@"NSObject<OS_os_transaction>"
@"NSObject<OS_xpc_object>"
{?="type"b1}
{?="span"b1"status"b1}
@"NEKPBSourceAttributes"
Setting ICS, len:%d
Error fetching local account: %{public}@
Error fetching lists in local account: %{public}@
Read in location for a reminder
Adding ICS to wrapper to send: %{public}@
Setting task with identifier %{public}@ as completed, completion date is %{public}@
Reminder %{public}@ does not have daCalendarItemUniqueIdentifier. Falling back to use REMObjectID.
Setting all properties on %@, identifier: %{public}@
Setting minimal properties on %@, identifier: %{public}@
Can't create canonical unique identifier for reminder %{public}@. Identifier returned by REMReminder is %{public}@
Unable to create UUID for %s %{public}@
Error fetching account. Account's persistent ID: [%{public}@]
Converting old plist state
Done converting old plist state
dataWithContentsOfFile gave us nothing
propertyListWithData gave us nothing. Error: %{public}@
_rawSendData assigned IDS identifier: %@
_rawSendData has an error: %{public}@
_rawSendFile assigned IDS identifier: %@
_rawSendFile has an error: %{public}@
No identifier returned. Error: %{public}@
Incoming reply message but no handler registered.
Can't find a handler for this message
didSend:%c IDS id: %{public}@, error: %{public}@
Validation failure. Local: %@ Remote: %@
Validation faulting on second failure: Local: %@ Remote: %@
Validation succeeded, %@.
Called with nil recordID or nil event store
Event deletion wrapper: %{public}@ -> %{public}@
Analytics detected excess calendar item on watch, identifier: %{public}@, timestamp: %9.0f
Analytics detected missing calendar item on watch, identifier: %{public}@, timestamp: %9.0f
Memory delta from save: %lld #perf
Event database save time: %fs #perf
Error saving EventKit database: %{public}@
Database changes saved successfully
%{public}s: Ignoring EventKit code path for getting default task calendar
_shouldSendEvent: Got a nil identifier for event: %p
Entity with summary %{public}@ identifier %{public}@ is a phantom master.  Ignoring.
_shouldSendEvent: Entity with summary %{public}@ identifier %{public}@ is detached, master identifier is %{public}@
_shouldSendEvent: Entity with summary %{public}@ identifier %{public}@ is detached, but can't get master, so using the actual detached event
No calendar for event with summary %{public}@ identifier %{public}@, event won't be tracked for sending duplicates, but we'll soldier on and likely fail somewhere later down the line.
Calendar identifier is nil for event %{public}@ identifier %{public}@. This is probably very bad.
Entity with summary %{public}@ and identifier %{public}@ already in set for calendar with identifier %{public}@, not sending again
Entity with summary %{public}@ and identifier %{public}@ not in set for calendar with identifier %{public}@, adding
Identifier is nil after much fiddling. Perhaps the master identifier is to blame?
Selecting reminder %{public}@
Fetched source via ID %{public}@ and got source:%p
NOT zapping source though I really feel like I should.
Create or update source: %{public}@, source:%p
Saving after updating a source (%{public}@) failed: %{public}@
Updated source (%{public}@) saved successfully.
No need to create source since the source [%{public}@] doesn't exist in database and the source wrapper has allowsEvents=NO
Creating non-local source
Saving after creating a source (%{public}@) failed: %{public}@
New source (%{public}@) saved successfully.
Received source wrapper that I'm not sure how to process: %{public}@
Error saving new/updated source (%{public}@): %{public}@
Update calendar: %{public}@
Error saving updated calendar (%{public}@): %{public}@
Create calendar: %{public}@
I'm refusing to create this calendar because I am a phone.
Sent calendarWrapper with no attributes, updating defaults.
%{public}s: Ignoring EventKit code path for reminder with identifier: [%{public}@]
%{public}s: Ignoring sidecar data for phantom master with identifier: [%{public}@]
Handling updated event from gizmo with summary %{public}@ and identifier %{public}@
Set self attendee status to 0x%08x for event with identifier %{public}@
Set invitation status to none for event with identifier %{public}@
Error saving database while setting event invitation status: %{public}@
No need to set attendee status, synced value is the same as existing value: 0x%08x for event with identifier %{public}@
Handling updated task from gizmo with summary "%{public}@" and identifier %{public}@
Task with identifier %{public}@ is completed, completion date is %{public}@
Saved event with identifier %{public}@, externalID is %{public}@
Failed to save event with identifier %{public}@. Error =  %{public}@
Participant status did not change. No need to save event with identifier %{public}@, externalID is %{public}@
Handling updated master event from gizmo with participationStatus %d, summary "%{public}@", and identifier %{public}@
Can't get row id for master with identifier %{public}@ to set attendee status for recurring series
Checking for calendar match for event %{public}@ with identifier %{public}@
Checking for match on calendar, we want %{public}@, calendarIdentifier is %{public}@
Handling master event from gizmo with participation status %d, summary %{public}@, and identifier %{public}@
Couldn't get master event for recurring event sequence with identifier %{public}@, but we'll check for detached events in case those are still around
Using existing detached event
Grabbing recurrence to use for detached event
Handling updated detached event from gizmo with participation status %d, summary %{public}@, and identifier %{public}@.
Failed to get/create event with identifier %{public}@ to set attendee status %d, skipping event
Failed to commit after saving recurring event series with master identifier %{public}@. Error =  %{public}@
Found event with identifer %{public}@ but in the wrong calendar.
%{public}s: No calendar item with identifier %{public}@ in calendar with identifier %{public}@
Received ICS wrapper: %{public}@
recv: %{public}@
recv LZFSE: <<!%@!>>
performUpdateWithICSWrappers: Calendar %{public}@ does not exist!
Processing update from the watch, main identifier is %{public}@
Cannot find object of type %d to update.
No calendar item found for main event in recurring series with identifier %{public}@ in calendar with identifier %{public}@
Processing add/update from companion, or a new record from the watch, id = %{public}@
Error deleting event for identifier remap: %{public}@
Item ID remapping complete: %{public}@ => %{public}@
Calendars don't match, so deleting from old calendar: old calendar id = %{public}@, current calendar id = %{public}@
Calendars match, so event didn't move: calendar id = %{public}@
Got an update/add for event "%{public}@", no old calendar id was sent, so this is from an old record map and falling back to old code to check and delete from any old calendar. The current calendar id = %{public}@
We have a recurring event %{public}@ and identifier %{public}@, checking to see if any detached events need attention
performUpdateWithICSWrappers: handling detached event %{public}@ identifier %{public}@
performUpdateWithICSWrappers received %d items
Critical error, received compressed and uncompressed data.
ICS Import: %fs #perf
We have a recurring event with summary "%{public}@" and identifier %{public}@, deleting all detached events too, since they have also moved calendars
Deleting detached event from old calendar since it has moved. Event summary "%{public}@", identifier %{public}@
No calendar for calendar identifier %{public}@
Skipping deletion for event with identifier %{public}@ in calendar with identifier %{public}@, we already detected and deleted it as part of a recurring master's detached events
Found no matches for potential deletion of calendar item %{public}@
Found multiple matches for potential deletion of calendar item %{public}@
Error deleting item: %{public}@
Changing event id from %{public}@ to %{public}@
setting externalID %{public}@ for event with identifier %{public}@
No externalID in metadata for event with identifier %{public}@
Changed date changed flag to %d for event %{public}@
Changed time changed flag to %d for event %{public}@
Changed title changed flag to %d for event %{public}@
Changed location changed flag to %d for event %{public}@
Changed attendee comment changed flag to %d for event %{public}@
Changed attendee status changed flag to %d for event %{public}@
Setting location prediction state to %d for event %{public}@
Error saving event in applySidePropertiesToEntity: %{public}@
Self attendee email is %{public}@, and uuid is %{public}@ for event with identifier %{public}@
Found self attendee for event with identifier %{public}@, email = %{public}@, address = %{public}@
No self attendee email in wrapper for event with identifier %{public}@
Determined user is organizer for event with identifier %{public}@, email = %{public}@, address = %{public}@
updateSelfAttendeeForCalendarItem saving, attendees: %d, span: %d
updateSelfAttendeeForCalendarItem save error: %{public}@
Deleteing suppression cache entry for %@
Suppressing alert due to cache hit on %@
Setting invitation status %{public}@ for event with identifier %{public}@
No invitation status in wrapper for event with identifier %{public}@
Surreptitiously adding event to changeset: %{public}@ due to attendee change
Can't create wrapper for source %@
Sending source wrapper accountPersistentID=%{public}@ isLocalStore=%d events=%d tasks=%d
Skipping hidden calendar: %{public}@
CalendarID remap detected: %{public}@ => %{public}@
Could not create calendar wrapper for entity: %{public}@
Default reminder and event calendar are the same.
Marking default task calendar in wrapper to calendar with name %{public}@, identifier %{public}@
Marking default event calendar in wrapper to calendar with name %{public}@, identifier %{public}@
publicObjectWithObjectID returned nil, objectID: %{public}@
Event %{public}@ returned a unique id of nil.
%{public}s: Ignoring EventKit code path for reminder
CalendarItem remap detected: %{public}@ => %{public}@
Decided not to send event %@
Decided not to send reminder %@
Decided not to send %{public}@
Deletion wrapper: %@
Could not create deletion wrapper for recordID: %{public}@
Deletion wrapper for source: %@
Attempt to create wrapper for unknown type: %{public}@
Error deleting source with identifier %{public}@
Deleted source with identifier %{public}@
Cannot delete source; no source exists for %{public}@
Error deleting calendar with identifier %{public}@, error: %{public}@
Deleted calendar with identifier %{public}@
Cannot delete; no calendar exists for %{public}@
Deleting event (span future) with identifier %{public}@, recordID %{public}@
Deleting event (span single) with identifier %{public}@, recordID %{public}@
Error deleting event %{public}@
Deleting event with identifier %{public}@, from calendar with identifier %{public}@
Deleting event with identifier %{public}@, from any calendar, old mapping didn't send calendar to delete from so falling back to old code
Deleting event %{public}@ failed as we were not handed an event by the store.
No event exists for %{public}@
Failure to delete reminder: %{public}@
No reminder exists for %{public}@
Updating calendar with title %{public}@, identifier %{public}@
%{public}s: Ignoring EventKit code path: mixed entity calendar is not supported
%{public}s: Ignoring EventKit code path: creating reminders calendar is not supported
Source not found with sourceID: %@
Created calendar with title %{public}@, identifier %{public}@
Asked to set a nonexistent calendar as the default. Ignoring. Calendar identifier = %{public}@, store identifier = %{public}@
wrapperForCalendarItem: Entity with identifier %{public}@ is detached, master identifier is %@
Entity with identifier %{public}@ is detached, but can't get master
Entity with identifier %{public}@ is master for a recurring series
Handling detached events for %{public}@, count=%d
LZFSE ICS: <<!%@!>>
self attendee status is 0x%08x for event with identifier %{public}@
Setting all properties on %@, identifier: %{public}@, attendees: %d
Setting minimal properties on %@, identifier: %{public}@, attendees: %d
Can't create canonical unique identifier for event %{public}@. Identifier returned by CalCalendarItemCopyUniqueIdentifier is %{public}@
NEKSyncCoordinator initialized %@
%{public}s:%d %s --mark--
Restriction is now %{public}s
Migrated prefs; version %zd -> %zd
Rebroadcast pref for key %{public}@
Synced prefs for keys %{public}@
Received weird session type: %d
Incoming message missing required body.
Local store ID %@, remote store ID %@
itemIdentifier: %@, event: <%p>
Failure to save event: %{public}@
_recvSetParticipantStatusEndpoint ignored
Cannot finder reminder '%{public}@:%{public}@'
Failure to save reminder: %{public}@
Reminder saved successfully.
_recvSetEventKitReminderCompletedEndpoint ignored
_recvSetReminderKitReminderCompletedEndpoint ignored
Failure to delete event %@: %{public}@
I have %d candidate events so I'm not sure what to delete.
_recvDeleteEventEndpoint ignored
Snooze Reminder: time:%.1f calendar: '%{public}@' reminder: '%{public}@' externalId: %@
No reminder alarm found
Snooze Event: time:%.1f calendar: '%{public}@' itemIdentifier: %@ event: <%p> local store ID: %@, remote store ID: %@
Event saved successfully.
No event alarm found
_recvSetEventKitAlarmSnoozeEndpoint ignored
_recvSetReminderKitAlarmSnoozeEndpoint ignored
Found reminder %{public}@:%{public}@
Cannot find reminder %{public}@:%{public}@
Sending analytics blob (%d bytes), IDS identifier %{public}@, result: %d
Failure to deserialize analytics data from watch
Failure to initialize SQL log: %@, userInfo: %@
== Started EventKitSync_Sim-394
Pairing ID: %{public}@
Pre prefs observer init
Post prefs observer init
_blockUntilUnlock returned
Beginning XPC transaction for com.apple.notifyd.matching notification named %{public}@
Launched from IDS
Triggering full sync for testing notification %{public}@
Thinking about a migration sync.
SignificantTimeChange incremental sync
SignificantTimeChange ignored
Calling pref observer for notification: %{public}@
Ending XPC transaction for com.apple.notifyd.matching notification named %{public}@
Analytics activity
Failed to set done state
%s: Registered for XPC activity.
Registered for notifications.
Received full sync command from NEKSyncCoordinator.
Prefs synced.
Starting sync controller.
Received reunion sync command.
Creating sync controller
Assigning sync controller
Starting sync controller
Cannot determine calendar identifier for reminder %{public}@. Deletion wrapper will be sent but the remote device may not be able to delete the reminder
Failed to fetch account with identifier %{public}@
Attempting to send source wrapper for CloudKit reminders account %{public}@ with allowsEvents=YES but the other side does not support CloudKit. This is not expected but is handled by sending a source wrapper with allowsEvents=YES and allowsTasks=NO.
Attempting to send source wrapper for CloudKit reminders account %{public}@ with allowsEvents=NO but the other side does not support CloudKit. Dropping this source wrapper and it will not be sent.
Sending %{public}@ reminder-only EKSource %{public}@ with REMAccount %{public}@
Performing a priori deletion of calendar %{public}@
Deletion of calendar %{public}@ didn't go so well: %{public}@
Error committing store after preemptive deletion of calendars: %{public}@
Successful save after deleting very suspicious calendars.
Starting configuration of source with persistent ID: [%{public}@].
Source's 'name' has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'defaultAlarmOffset' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'type' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'enabled' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's '%@' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'usesSelfAttendee' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'constraintsDescriptionPath' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'externalID' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'creatorBundleID' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'creatorCodeSigningIdentity' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'accountPersistentID' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'supportsSharedCalendars' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'allowsTasks' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Skipping deletion of task calendar as we are on the phone.
Source's 'allowsEvents' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Skipping deletion of event calendar as we are on the phone.
Source's 'allowsCalendarAddDeleteModify' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'onlyCreatorCanModify' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'snoozeAlarmRequiresDetach' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'supportsAlarmAcknowledgedDate' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Completed configuration of source with persistent ID: [%{public}@].
Sorry. Unable to determine identifier or resolve EKSource object for EKObjectID %{public}@
Source with ID %{public}@ does not exist. This is unexpected for update/insert. Skipping.
Source with ID %{public}@ (%@) updated. Going to send wrapper for this source.
EKSource %{public}@ (%@) is still available due to one of the event/reminder dataclass still enabled. Treating this as an update to send wrapper for dataclass updates.
Deleted source/account %{public}@ is not available anymore. Going to send delete wrapper for this source
Window: start: %{public}@ end: %{public}@, isFullSync: %d
Asked for incremental sync window when there was no/incomplete previous sync window data
Rejected event: %{public}@ %{public}@
Rejected reminder: %{public}@ %{public}@
Accepting unknown entity: %{public}@
event not in future: %{public}@ "%@"
reminder not in future: %{public}@
Migrating recordMap to version 1.
Migrating recordMap to version 2.
Migrating recordMap to version 3.
read id:%{public}@ %d/%d/%d
Attempt to save a nil identifier: %d/%d
set id:%{public}@ %d/%d/%d
Deleting everything from record map
eT:%d eR:%d eD:%d id:%{public}@ m:%d
Lying about progress: %0.2f%%
doneForRealNotifyingPairedSync: %d
Returning suggested db path: %@
Creating REMAccount with id:%{public}@ type:%@ name:%@
Error creating account. Source's persistent ID: [%{public}@]
UNSUPPORTED: Local source's 'name' has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'defaultAlarmOffset' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'type' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'enabled' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's '%@' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'usesSelfAttendee' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'externalID' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'externalModificationTag' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'creatorBundleID' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'creatorCodeSigningIdentity' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'accountPersistentID' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'supportsSharedCalendars' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'allowsTasks' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Updating local account .inactive to %{public}@.
Deleting account with identifier %{public}@.
UNSUPPORTED: Source's 'allowsEvents' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'allowsCalendarAddDeleteModify' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'onlyCreatorCanModify' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'snoozeAlarmRequiresDetach' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'supportsAlarmAcknowledgedDate' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Unknown account type %ld
Unexpected constraint plist path from ReminderKit account: %@
Flushing to CoreAnalytics
Daily tally: D: %d R: %d F: %d
Terminating enumeration early
Sqlite create failed, path: %s, error: (%d)
Sqlite statement prepare failed for "%{public}s"
NEKSqueeze failed to initialize
NEKSqueeze failed to compress
Compressed ICS %d->%d %.01f%%
NEKFluff failed to initialize
NEKFluff failed to uncompress
ReminderKit enabled.
ReminderKit disabled.
Remote system build version: %{public}@
New NEK.SYService queue: %p
Shutting down existing SYService: %p
Selecting file transfer engine
Selecting data messaging engine
Failed to resume SYService: %{public}@
Started new SYService: %p
Enqueueing a full sync
Enqueueing a delta reunion sync
Reunion sync with faults- Forcing full sync
Poking CS for nightly sync
Nightly sync requested but we have faults. Ignoring request.
Requested migration sync
Migration number is fine, no migration sync needed.
Migration check dropped.
Looks like I could use a reset but it turns out we're already standing right in the middle of one, so let's just move on.
Retrying a failed sync (%d) (reset)
Retrying a failed sync (%d) (delta)
Retrying a deferral.
_retrySync called but we have no faults. We're perfect!
%{public}@
Handling task list.
Handling calendar.
Calendar/list "%{public}@"/%{public}@ has entitySupportType %d
Recevied calendar wrapper without attributes and without default selection: "%{public}@"/%{public}@
Attempting to set a default calendar or list
Assuming mixed entity NEKICSWrapper comes from EventKit
object is not of recognized class: %{public}@
Got a deletion wrapper from SYStore: %{public}@
passed weird class: %{public}@
Decided to prefer reset session over delta.
Winning session: %{public}@, losing session: %{public}@
%{public}s %{public}@ #%{public}@ #%{public}@
Session start call not balanced. This is a fatal condition.
Locking session idle queue.
StartSession result: %d
No session created so declaring completion to PSYSync
Deferrability: %d
Delta sync fired but it really wants to be a reset sync.
Change set was empty, not starting a sync session.
Change set is deferrable, not starting session.
Retry is overdue and we need a reset. Forcing things along.
We were denied delta sync effort but there is no backup due date. Scheduling retry based on current faultCount/connectedState
Sync request ignored: isReset: %d isNightly: %d clearToDelta: %d
Session timeout: %.02f
perMessageTimeout: %d
Before timeout stats: x=%.02f sigma=%f
Comically long session timeouts enabled!
Comically short session timeouts enabled!
XPC activity deferral requested.
Remote engine requirement zapped.
This pipe better be dead: %{public}@
Session is nil during sessionEnded.
service.currentSession is nil, clearing user session.
Current session [%{public}@] != ending session [%{public}@]. Error: %{public}@ Dropping notificaiton on floor.
Resuming session idle queue
Fatal: sessionEnd call not balanced.
Send complete with error: %{public}@
SendingSession: %{public}@ error: %{public}@ cpuTime: %.02fms
There was a sync error%{public}@.
Failed session was a %{public}s so setting up retry to be a reset.
SYErrorCanceled (deferral/collision)
LostCollisionTest error, retry should already be scheduled.
Post failure update sync timings: x=%.02f sigma=%f
Looks like I didn't schedule  retry. That's bad.
Following nightly sync with request for delta
Post success update sync timings: elapsed=%.02f x=%.02f sigma=%f
Before join.
After join.
ReceivingSession: %{public}@ error: %{public}@ cpuTime: %.02fms
Session walltime breakdown (ms): %llu store, %llu calendar, %llu events, %llu reminders.
Recv complete with error: %{public}@
Remove all items
Poking CS for delta sync
Delta sync request suppressed
Change log truncation is making us request a reset
Reset sync request suppressed
For %{public}@ we are sending attendee stats (ek %d, wire %d)
For %{public}@ setting attendee status to (wire %d, ek %d)
fetchEverythingIntoPipe:PipeBefore: %{public}@
%{public}s: All things pushed successfully
fetchEverythingIntoPipe:PipeAfter: %{public}@
fetchNightlyIntoPipe:PipeBefore: %{public}@
%{public}s: All nightly things pushed successfully
fetchNightlyIntoPipe:PipeAfter: %{public}@
Finishing pipe (empty changesets): %p
Finishing pipe. Changeset is deferrable.
fetchChangesIntoPipe:PipeBefore: %{public}@
fetchChangesIntoPipe:PipeAfter: %{public}@
Default local list does not exist
Cannot find list for identifier %{public}@
Starting configuration of list with UUID: [%{public}@].
UNSUPPORTED: List's 'UUID' has changed from [%@] to [%@].  List's UUID: [%{public}@]
List's 'title' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isReadOnly' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isHidden' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isImmutable' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isInbox' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isNotificationsCollection' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isSharingInvitation' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isSubscribed' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isHolidayCalendar' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isFamilyCalendar' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isIgnoringEventAlerts' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isIgnoringSharedCalendarNotifications' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isSchedulingProhibited' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isDefaultCalendarForStore' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'digest' has changed from [%@] to [%@].  List's UUID: [%{public}@]
List's 'symbolicColorName/colorString' has changed from [%@/%@] to [%@/%@].  List's UUID: [%{public}@]
List's 'displayOrder' has changed from %ld to %d.  List's UUID: [%{public}@]
UNSUPPORTED: List's 'sharingStatus' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'sharedOwnerName' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'sharedOwnerAddress' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'sharingInvitationResponse' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'publishedURL' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'canBePublished' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'canBeShared' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isPublished' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'externalID' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'externalIdentificationTag' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'daSyncToken' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'externalModificationTag' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'externalRepresentation' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'invitationStatus' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'notes' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'subCalAccountID' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'pushKey' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'selfIdentityDisplayName' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'selfIdentityEmail' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'selfIdentityAddress' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'selfIdentityFirstName' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'selfIdentityLastName' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'ownerIdentityDisplayName' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'ownerIdentityEmail' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'ownerIdentityAddress' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'ownerIdentityFirstName' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'ownerIdentityLastName' has changed from [%@] to [%@].  List's UUID: [%{public}@]
Completed configuration of list with UUID: [%{public}@].
Change exceeded batch size. Will catch next batch.
Enqueued last change, pipe error: %{public}@
Enqueing validation message.
Not enqueuing validation message as the population shifted during sync.
Sending events
Applying changes
Sync disabled. Dropping changes on floor.
Deserialization failed.
Hit ICS batch import capacity.
Picking up final ICS batch import, %d items.
Calling sync session completion.
Sync disabled. Ignoring reset request.
Calendar "%@"/%{public}@ supports no entity types.
didCalendarChange: title:%{public}@ identifier:%{public}@
didCalendarChange: local->syncToken:%{public}@ externalModificationTag:%{public}@ externalIdentificationTag:%{public}@
didCalendarChange: incmg->syncToken:%{public}@ externalModificationTag:%{public}@ externalIdentificationTag:%{public}@
No changes for calendar with title %{public}@, identifier %{public}@
_calendarPropertyIsEqualToAttributeProperty: Calendar and attributes property %{public}@ are different: (calendar) %{public}@ != (attributes) %{public}@
dataWithSYChange: serializing object of class: %{public}@ S_PKT_NUM:%04x_%04x
Sending reminder with location
SYChangeWithData - unrecognized type: %{public}@
SYChangeWithData: returning object of type: %{public}@ R_PKT_NUM:%04x_%04x
Transport number gap detected. Might be a problem, might not.
Could not create wrapper object
Error saving save request %@: %{public}@
Purge deleted object is not supported on this platform. Ignoring.
Reminders database save time: %fs #perf
Can't create save request for nil store. Using a fresh REMStore to avoid crashing, but this won't be correct.
Save request created with needsPurgeDeletedObjectsAfterSave=YES. The next save will be slow.
Received reset sync. Resetting change tracking state map to %{public}@
Error fetching accounts: %{public}@
Skip deleting list in CloudKit account with ID %{public}@
Error fetching lists: %{public}@
Selecting reminder (id=%{public}@, calendarUniqueId=%{public}@)
Error fetching account with ID: [%{public}@]
Reminders: Create or update account: %{public}@
Reminders: Account (%{public}@) saved successfully.
Reminders: Saving after updating an account (%{public}@) failed
Reminders: No need to create account since the account [%{public}@] doesn't exist in database and the source wrapper has allowsTasks=NO
Received source wrapper without corresponding REMAccount: %{public}@
Error fetching list with ID: [%{public}@]
Update list: %{public}@
List (%{public}@) saved successfully.
Error saving updated list (%{public}@)
Create list: %{public}@
New list (%{public}@) saved successfully.
Error saving new list (%{public}@)
Unknown deletion wrapper: %{public}@
Handling updated reminder from gizmo with summary "%{public}@" and identifier %{public}@
Reminder with identifier %{public}@ is completed, completion date is %{public}@
Received ICS wrappers with the same identifier %{public}@ in the same batch. Deduplicating. 
Going to build list cache for IDs %{public}@
Built list cache for wrappers %{public}@
Received ICS wrappers with the same identifier %{public}@ in the same batch
Going to build reminder cache for IDs %{public}@
Failed to batch fetch reminders with calendar item unique ID %{public}@. error=%@
Built reminder cache for wrappers %{public}@
List %{public}@ does not exist. Skip processing this wrapper.
Processing add/update from companion, or a new record from the watch
Got an update/add for reminder, old list id = %{public}@, current list id = %{public}@
Lists don't match, so deleting from old list: old list id = %{public}@, current list id = %{public}@
Lists match, so reminder didn't move: old list id = %{public}@, current list id = %{public}@
Got an update/add for reminder "%{public}@", no old list id was sent, so this is from an old record map and falling back to old code to check and delete from any old list. The current list id = %{public}@
Reminder for identifier %{public}@ not found (%@)
No ReminderChangeItem was created. ICS importing failed?
Input to _ensureReminderInList is nil (%@, %@, %@). Skipping.
Unexpected wrapper type %lu for identitifer %{public}@
Found no matches for potential deletion of moved reminder %{public}@ with error %@
Failed to batch fetch account %{public}@ %@
Fetched account batch: %{public}@ %{public}@
Failed to batch fetch list %{public}@ %@
Fetched list batch: %{public}@ %{public}@
Failed to batch fetch reminder %{public}@ %@
Fetched reminder batch: %{public}@ %{public}@
Skipping storeWrapperForCloudKitAccount as changeSet is empty
Failed to create source wrapper for CloudKit account %{public}@
Sending source wrapper for CloudKit account %{public}@
Skipping listWrappersForChangeSet as changeSet is empty
Failed to fetch list %{public}@. Unable to create wrapper.
Marking default list in wrapper to list with name %{public}@, identifier %{public}@
Skipping remindersWrappersForChangeSet as changeSet is empty
Failed to fetch reminder %{public}@. Unable to create wrapper.
Deleting account with identifier %{public}@
Cannot delete; no account exists for identifier %{public}@
Cannot delete; account with identifier %{public}@ is a local account
Cannot delete; account with identifier %{public}@ is a local internal account (this is unexpected)
Cannot delete; no list exists for identifier %{public}@
Cannot delete; no reminder exists for identifier %{public}@
Updating list with title %{public}@, identifier %{public}@
Failed to fetch an account for reminders. This is very bad.
Created list with title %{public}@, identifier %{public}@
Asked to set a nonexistent list as the default. Ignoring. List identifier = %{public}@, account identifier = %{public}@
Error removing reminder: %{public}@
Default Calendar Changed
Ignoring delta sync request as sync coordinator says it is not time.
%{public}s
%{public}s: Ignoring EventKit code path for sync'ing local reminders-only source %{public}@
Sending mixed entity source %{public}@ from EventKit
shouldSyncSource: %d for %{public}@
Failed to create source wrapper for %{public}@
%{public}s: Ignoring EventKit code path for sync'ing calendar %{public}@
Sending mixed entity calendar %@ from EventKit
Pipe finished, exiting allEventsInto loop.
publicObjectWithObjectID returned nil. ObjectID: %{public}@
Reading events
allEventsInto:filter:window: pushed %d items.
%{public}s: Ignoring EventKit code path for sync'ing reminders
Pulled -1 from lastSequenceNumber.
%{public}s: Saw sequence number failure already. Still waiting for corrective sync to complete.
Previous sequence number: %d, current sequence number: %d, delta: %d
Change log numbers went backward, forcing full sync (phone only)
Fetch duration: %.2f
Aggregate changelog: %{public}@
Change log truncated
fetchChangesInto: Fetching default calendars
fetchChangesInto: Changed default task calendar
fetchChangesInto: Unchanged default task calendar
fetchChangesInto: Changed default event calendar
fetchChangesInto: Unchanged default events calendar
fetchChangesInto: Done fetching default calendars
Updates is NULL. This shouldn't happen.
EventKit: Change set is empty.
Registering for persistent change tracking: %ld
Setting anchor sequence number: %d
%{public}s: Ignoring EventKit code path for getting previous default task calendar
%{public}s: Ignoring EventKit code path for setting previous default task calendar
Error fetching reminder accounts for lists: %{public}@
Pulled nil from changeTrackingStateMap.
Timed out trying to fetch changes from database.
Synthesizing delete for REMAccount %{public}@
Previous sequence number: %@
Current sequence number: %@
Found marked as delete reminder %{public}@
Found marked as delete list %{public}@
Unhandled object with markedForDeletion update %{public}@
fetchChangesInto: Fetching default list
fetchChangesInto: Changed default list
fetchChangesInto: Unchanged default list
fetchChangesInto: Done fetching default list
ReminderKit: Change set is empty.
Reminder fetchChanges: Timeout out waiting for database to respond.
Loaded change tracking state map %@
Saved change tracking state map %@
No previous NEKReminderChangeTrackingStateMap found
Error deserializing NEKReminderChangeTrackingStateMap archive. (%@)
Decoded NEKReminderChangeTrackingStateMap. %@
Encoded NEKReminderChangeTrackingStateMap: %@ (encoded=%@)
Tracking more than one store is not supported. Behavior is undefined.
Error fetching accounts %@
Error fetching changes for account %{public}@ with state %{public}@, assuming changes are truncated: %@
Filtered change set summary for account %{public}@ since token %{public}@: before: i=%{public}@ u=%{public}@ d=%{public}@; after: i=%{public}@ u=%{public}@ d=%{public}@
Fetched auxiliary delete change info %@ for object ID %{public}@
Old list ID %{public}@ for deleted reminder %{public}@
Fetched auxiliary move change info %@ for object ID %{public}@
Old list ID %{public}@ for moved reminder %{public}@
Error fetching auxiliary change info %@
Forward to latest change token for account %{public}@ (lastChangeToken=%{public}@, latestChangeToken=%{public}@).
Resetting to current change token for account %{public}@ because change history is truncated (lastChangeToken=%{public}@, latestChangeToken=%{public}@).
%{public}s%{public}@, %{public}@, %{public}@, %{public}@
%{public}s%{public}@
%{public}s%{public}@, %{public}@
%{public}s%{public}@, %{public}@, %{public}@
--empty--
PURGE: Error saving database after purging unwanted elements.
PURGE: Failure deleting stale source %{public}@ "%{public}@", %{public}@
PURGE: Successfully deleted stale source %{public}@
PURGE: Failure to fetch stale source, rowid: %d
PURGE: Failure deleting stale calendar %{public}@ "%{public}@", %{public}@
PURGE: Successfully deleted stale calendar %{public}@
PURGE: Failure to fetch stale calendar, rowid: %d
PURGE: Failure deleting stale event %{public}@ "%{public}@", %{public}@
PURGE: Successfully deleted stale event %{public}@
PURGE: Failure to fetch stale event, rowid: %d
EKa: Live EKEventStore: %{public}@
EKa: Total stores: %d
SIGTERM, Bye bye.
SIGQUIT, Bye bye.
Manually triggered state dump
Checkin activity state for %s: %s
Running %s (late by: %.02f)
Received an odd state in checkin for %s: %d.
%s: completeAndFireIn: %d
%s: fireIn: %d
fireIn request for %s disregarded for previous scheduled timer (%0.2f to go)
%s: completeAndFireOnConnection
%s: completeAndFireNever
%s: Set activity state to %s
%s: Failed to set activity state to %s
%s: _activityComplete
@333333
!8Wv
*=Pccccgz
cccccc
 &27
!?H]ciz
%+1@
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.nano.nanoregistry</key>
<true/>
<key>com.apple.private.calendar.allow-birthday-modification</key>
<true/>
<key>com.apple.private.calendar.changeIdTrackingOverride</key>
<true/>
<key>com.apple.private.calendar.custom-database-path</key>
<true/>
<key>com.apple.private.calendar.syncclient</key>
<true/>
<key>com.apple.private.calendar.watchos-mutable-database</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.eventkitmutation</string>
<string>com.apple.private.alloy.eventkitsync</string>
<string>com.apple.private.alloy.internal.watch.calendar.analytics</string>
</array>
<key>com.apple.private.security.storage.Calendar</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceCalendar</string>
<string>kTCCServiceReminders</string>
</array>
</dict>
</plist>
e0 
com.apple.nano.nanoregistry
0;6com.apple.private.calendar.allow-birthday-modification
083com.apple.private.calendar.changeIdTrackingOverride
04/com.apple.private.calendar.custom-database-path
0*%com.apple.private.calendar.syncclient
083com.apple.private.calendar.watchos-mutable-database
com.apple.private.ids.messaging0
(com.apple.private.alloy.eventkitmutation$com.apple.private.alloy.eventkitsync9com.apple.private.alloy.internal.watch.calendar.analytics00+com.apple.private.security.storage.Calendar
com.apple.private.tcc.allow0+
kTCCServiceCalendar
kTCCServiceReminders
