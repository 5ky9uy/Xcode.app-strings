@(#)PROGRAM:backgroundassets.user  PROJECT:BackgroundAssets-1
removePowerAssertionAndActivity
dealloc
internalState
resumeData
setDelegate:
setInternalState:
uniqueIdentifier
addPowerAssertionAndActivityWithIdentifier:
delegate
downloadDidBegin:
request
mutableCopy
scheme
caseInsensitiveCompare:
download:failedWithError:
applicationInfo
host
allowedDownloadDomains
containsObject:
allowedDownloadDomainWildcards
countByEnumeratingWithState:objects:count:
substringFromIndex:
hasSuffix:
setError:
error
remainingDownloadAllowance
setIsForegroundDownload:
isForegroundDownload
defaultSessionConfiguration
setAllowsCellularAccess:
setAllowsExpensiveNetworkAccess:
setTimeoutIntervalForRequest:
backgroundSessionConfigurationWithIdentifier:
set_allowsRetryForBackgroundDataTasks:
allowsCellularAccess
allowsExpensiveNetworkAccess
setNetworkServiceType:
copy
setRequest:
sessionWithConfiguration:delegate:delegateQueue:
setSession:
session
downloadTaskWithResumeData:
setDownloadTask:
downloadTask
downloadTaskWithRequest:
resume
setResumeData:
cancelByProducingResumeData:
downloadDidPause:
_cancelDownload
download:finishedWithFileURL:
stagedDownloadedFileURL
domain
isEqualToString:
code
state
download:didReceiveChallenge:completionHandler:
downloadCachePath
path
lastPathComponent
stringByAppendingPathComponent:
fileURLWithPath:
defaultManager
moveItemAtURL:toURL:error:
setStagedDownloadedFileURL:
response
statusCode
absoluteString
numberWithInteger:
allHeaderFields
dictionaryWithObjectsAndKeys:
errorWithDomain:code:userInfo:
userInfo
objectForKey:
intValue
pauseDownload
finishTasksAndInvalidate
consumeAllowanceAndReturnShouldStop:
download:didWriteBytes:totalBytesWritten:totalBytesExpectedToWrite:
startDownloadWithDelegate:
cancelDownload
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSession:downloadTask:didFinishDownloadingToURL:
URLSession:task:didCompleteWithError:
URLSession:downloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:
URLSession:downloadTask:didResumeAtOffset:expectedTotalBytes:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:didCreateTask:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
init
setExtensionConnection:
setExtensionProcess:
setApplicationInfo:
applicationIdentifier
_baassets_validUTI
setIdentifier:
identifier
stringWithFormat:
UTF8String
setShutdownQueue:
wakeupForTokenWithReply:
applicationDidInstallWithMetadata:completionHandler:
applicationDidUpdateWithMetadata:completionHandler:
checkForUpdatesWithMetadata:completionHandler:
receivedAuthenticationChallenge:download:completionHandler:
extensionWillTerminate
backgroundDownloadDidFail:completionHandler:
backgroundDownloadDidFinish:stagedClientURL:sandboxToken:completionHandler:
interfaceWithProtocol:
setWithObject:
setClasses:forSelector:argumentIndex:ofReply:
setWithObjects:
arrayWithObjects:count:
setWithArray:
extensionConnection
setRemoteObjectInterface:
sharedCore
extensionDisconnectedWithIdentifier:
setInterruptionHandler:
setInvalidationHandler:
remoteObjectProxyWithErrorHandler:
invalidate
exitTimer
willLaunchExtension
_startExitTimer
_sendingMessage
_checkForExit
synchronousRemoteObjectProxyWithErrorHandler:
exceptionWithName:reason:userInfo:
raise
fileSystemRepresentation
auditToken
stringWithCString:encoding:
_terminateConnection
shutdownQueue
setSentWillTerminateMessage:
extensionActiveCalls
setExtensionActiveCalls:
extensionRuntime
sentWillTerminateMessage
sentTerminatonMessage
setSentTerminatonMessage:
extensionProcess
fireDate
timeIntervalSinceNow
processIdentifier
initWithExtension:XPCConnection:applicationInfo:
applicationDidInstallWithMetadata:
applicationDidUpdateWithMetadata:
checkForUpdatesWithMetadata:
sendAuthenticationChallenge:download:completionHandler:
extendClientSandboxForStagedURL:
setExitTimer:
.cxx_destruct
_sentWillTerminateMessage
_sentTerminatonMessage
_identifier
_shutdownQueue
_extensionConnection
_applicationInfo
_exitTimer
_extensionProcess
_extensionActiveCalls
T@"NSObject<OS_dispatch_queue>",&,V_shutdownQueue
T@"NSXPCConnection",&,V_extensionConnection
T@"BAApplicationInfo",&,V_applicationInfo
T@"NSString",&,V_identifier
T@"NSTimer",&,V_exitTimer
T@"_EXExtensionProcess",&,V_extensionProcess
TQ,V_extensionActiveCalls
TB,V_sentWillTerminateMessage
TB,V_sentTerminatonMessage
mainRunLoop
port
addPort:forMode:
setPowerAssertionID:
setTransaction:
powerAssertionID
setApplicationInformationForRestrictedDownload:
setByAddingObjectsFromArray:
applicationGroupIdentifier
containerURLForSecurityApplicationGroupIdentifier:
URLByAppendingPathComponent:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
expectedOutFileName
stringByDeletingPathExtension
pathExtension
fileExistsAtPath:isDirectory:
syncTo:
moveDownloadToFinalDestinationPathWithStagedURL:outDestinationURL:outError:
classesForSerialization
bundleForClass:
localizedStringForKey:value:table:
dictionaryWithObjects:forKeys:count:
date
initWithStartDate:
setStartDate:
decodeObjectOfClass:forKey:
startDate
setEndDate:
endDate
encodeObject:forKey:
timeIntervalSinceDate:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
elapsedTime
extensionExited
isMoreThan24HoursAgo
_startDate
_endDate
T@"NSDate",&,V_startDate
T@"NSDate",&,V_endDate
Td,R
initWithNSXPCConnection:error:
applicationWillBeInstalled:completionHandler:
applicationWasInstalled:completionHandler:
applicationWasUpdated:completionHandler:
applicationWasRestored:completionHandler:
triggerPeriodic:completionHandler:
runDebugCommand:reply:
connection
setExportedInterface:
setExportedObject:
count
arrayWithCapacity:
longLongValue
addObject:
applicationWithIdentifier:willBeInstalledWithInitialRestrictions:
handleApplicationEvent:identifier:applicationInfo:
applicationInfoForIdentifier:
initWithApplicationInfo:
downloaderExtensionForApplicationIdentifier:
lowercaseString
_printDebugState
_debugShutdown
doPeriodicUpdateCheck
_setClearBeforeShutdown
objectAtIndex:
_debugDownloadTime:clear:
initWithIdentifier:recordType:expectedFieldKey:expectedFieldValue:assetKey:applicationGroupIdentifier:
defaultContainer
containerIdentifier
defaultRecordZone
zoneID
initWithIdentifier:recordType:expectedFieldKey:expectedFieldValue:assetKey:applicationGroupIdentifier:containerIdentifier:zoneID:databaseScope:priority:
length
predicateWithFormat:
initWithRecordType:predicate:
initPrivatelyWithApplicationGroupIdentifier:
setPriority:
UUID
UUIDString
setExpectedOutFileName:
initWithContainerIdentifier:environment:
setContainerID:
setQuery:
setAssetKey:
setZoneID:
setDatabaseScope:
decodeIntegerForKey:
containerID
query
assetKey
databaseScope
encodeInteger:forKey:
initWithIdentifier:recordType:recordName:assetKey:applicationGroupIdentifier:
_containerID
_query
_assetKey
_zoneID
_databaseScope
T@"CKContainerID",&,N,V_containerID
T@"CKQuery",&,N,V_query
T@"NSString",&,N,V_assetKey
T@"CKRecordZoneID",&,N,V_zoneID
Tq,N,V_databaseScope
initWithIdentifier:request:applicationGroupIdentifier:priority:
initWithIdentifier:request:applicationGroupIdentifier:
_request
T@"NSURLRequest",&,V_request
token
blockFired
fireByTimer
block
initWithToken:block:
executeWithSuccessfulDequeue:
setFireByTimer:
_blockFired
_block
_token
_fireByTimer
T@?,R,C,N,V_block
T@"NSUUID",R,N,V_token
T@"NSObject<OS_dispatch_source>",&,V_fireByTimer
TB,R,N,V_blockFired
drain
blockQueue
blockQueueLock
lock
__enqueue:
unlock
_dequeueNext
drainSpecificWithToken:
awaitingBlockCompletion
setAwaitingBlockCompletion:
enumerateObjectsUsingBlock:
removeObject:
removeAllObjects
initWithIdentifier:
enqueue:
enqueue:waitLimitDate:
consumeToken:
_increment
_decrement
queueRetainCount
_awaitingBlockCompletion
_queueRetainCount
_blockQueueLock
_blockQueue
T@"NSString",R,N,V_identifier
TQ,R,N,V_queueRetainCount
T@"NSLock",R,N,V_blockQueueLock
T@"NSMutableOrderedSet",R,N,V_blockQueue
TB,N,V_awaitingBlockCompletion
identifiersToBlockQueues
setObject:forKey:
removeObjectForKey:
blockQueueWithIdentifier:
invalidateBlockQueue:
_identifiersToBlockQueues
T@"NSMutableDictionary",R,N,V_identifiersToBlockQueues
unionSet:
addObjectsFromArray:
distantPast
setLastDownloadStartDate:
setDownloads:
setStagingDirectory:
stagingDirectory
removeItemAtPath:error:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
decodeObjectOfClasses:forKey:
lastDownloadStartDate
downloads
array
setApplicationIdentifier:
setDownloadCachePath:
priority
sortUsingComparator:
downloadStartDate
allDownloads
initWithFormat:
appendFormat:
appendString:
initWithApplicationIdentifier:delegate:
scheduleDownload:error:
startForegroundDownload:error:
cancelDownload:error:
cancelAllDownloads
pauseAllForegroundDownloads
startNextDownload
pauseAllDownloads
numberOfActiveDownloads
numberOfWaitingDownloads
_lastDownloadStartDate
_delegate
_downloads
_stagingDirectory
T@"NSMutableArray",&,V_downloads
T@"NSDate",&,V_lastDownloadStartDate
T@"NSString",&,V_stagingDirectory
Tq,R
T@"NSArray",R
T@"<BADownloadManagerDelegate>",W,V_delegate
rangeOfString:options:
substringToIndex:
characterSetWithCharactersInString:
invertedSet
stringByTrimmingCharactersInSet:
_baassets_stringByRemovingLastIdentifierComponent
_baassets_validUTIWithWildcard
setAsyncClientNotificationQueue:
setConnectionQueue:
setWorkQueue:
initWithCapacity:
setConnections:
setExtensionConnections:
setDownloadQueuesByClientIdentifier:
setApplicationState:
setConnectionReplyQueue:
setUnhandledDownloadEvents:
initWithDelegate:
setRulesEngine:
workQueue
_deserializeState
_pokeScheduler
defaultCenter
_backgroundActivityStateDidChange
addObserver:selector:name:object:
initWithMachServiceName:
setListener:
listener
connectionQueue
_setQueue:
setSpiListener:
spiListener
rulesEngine
serviceName
listener:shouldAcceptNewClientConnection:
listener:shouldAcceptNewSPIConnection:
clientIdentifier
_checkConnection:hasAllowedTeamIDForIdentifier:
connections
callBlockWhenConnectionReady:onQueue:
valueForEntitlement:
boolValue
connectionReplyQueue
connectionInvalidated
updateApplication:state:
extensionConnections
_applicationInfoForIdentifier:
_connectionReplyQueueForIdentifier:
_downloaderExtensionForApplicationIdentifier:
allowsBackgroundActivity
shouldLaunchExtension
extensionPointIdentifierQuery:
executeQuery:
bundleIdentifier
hasPrefix:
containingBundleRecord
setExtensionIdentity:
extensionProcessWithConfiguration:error:
newXPCConnectionWithError:
applicationState
initWithFullRestrictionsForIdentifier:
_serializeApplicationState
updateApplicationRestrictions:
_applicationIdentifierAllowsBackgroundActivity:
asyncClientNotificationQueue
setHasSentApplicationInstalledMessage:
applicationLaunched
downloadQueuesByClientIdentifier
hasLaunchedApplication
_serializeDownloadQueues
userQuitTheApp
downloadsInProgress
_scheduleDownloads
unhandledDownloadEvents
download
_connectionsForApplicationIdentifier:
removeObjectsInArray:
type
allValues
compare:
sortedArrayUsingComparator:
setDownloadsInProgress:
syncDownloads:
downloadIdentifierDidBegin:
downloadIdentifierDidPause:
downloadIdentifier:didReceiveChallenge:authChallengeHandler:withCompletion:
downloadIdentifier:didWriteBytes:totalBytesWritten:totalBytesExpectedToWrite:
downloadIdentifier:didFailWithError:wasHandled:
initWithEventType:download:
_serializeUndeliveredEvents
URLByDeletingLastPathComponent
removeItemAtURL:error:
downloadIdentifierDidFinish:clientStagedURL:sandboxExtensionToken:wasHandled:
isValidTimeForDownloads
_pauseDownloads
shouldDoPeriodicCheck
applicationTeamIdentifier
setApplicationTeamIdentifier:
setDebugClearState:
URLForDirectory:inDomain:appropriateForURL:create:error:
_shutdownAgent
_deserializeApplicationList
_deserializeDownloadQueues
_deserializeUndeliveredEvents
extensionContainingApplicationList
dataWithContentsOfURL:
initForReadingFromData:error:
setDecodingFailurePolicy:
hasSentApplicationInstalledMessage
setAgentCore:
addEntriesFromDictionary:
setByAddingObjectsFromSet:
initRequiringSecureCoding:
encodedData
writeToURL:options:error:
_serializeState
debugClearState
_clearState
setDebugValidityTimeOverride:
listener:shouldAcceptNewConnection:
downloadTimeValidityDidChange
connectionDisconnected:
handleApplicationLaunched:
scheduleDownload:forClientIdentifier:error:
downloadForIdentifier:forClientIdentifier:
downloadsForIdentifier:
startForegroundDownload:forClientIdentifier:error:
cancelDownload:forClientIdentifier:error:
lastStartDate
setLastStartDate:
_debugClearState
_asyncClientNotificationQueue
_connectionQueue
_workQueue
_listener
_spiListener
_applicationState
_connections
_connectionReplyQueue
_unhandledDownloadEvents
_extensionConnections
_rulesEngine
_downloadsInProgress
_lastStartDate
_downloadQueuesByClientIdentifier
T@"NSObject<OS_dispatch_queue>",&,V_asyncClientNotificationQueue
T@"NSObject<OS_dispatch_queue>",&,V_connectionQueue
T@"NSObject<OS_dispatch_queue>",&,V_workQueue
T@"NSXPCListener",&,V_listener
T@"NSXPCListener",&,V_spiListener
T@"NSMutableArray",&,V_applicationState
T@"NSMutableArray",&,V_connections
T@"NSMutableDictionary",&,V_connectionReplyQueue
T@"NSMutableArray",&,V_unhandledDownloadEvents
T@"NSMutableDictionary",&,V_extensionConnections
T@"BAAgentDownloadRulesEngine",&,V_rulesEngine
Tq,V_downloadsInProgress
T@"NSMutableDictionary",&,V_lastStartDate
T@"NSMutableDictionary",&,V_downloadQueuesByClientIdentifier
TB,V_debugClearState
lastPeriodicCheckTime
isEqualToDate:
setLastPeriodicCheckTime:
lastApplicationLaunchTime
setLastApplicationLaunchTime:
setDownloadSizeRestricted:
agentCore
_agentCore
T@"BAAgentCore",W,V_agentCore
setRulesEngineWorkQueue:
setLastDownloadIsValidValue:
powerRunLoopSource
setPowerRunLoopSource:
rulesEngineWorkQueue
setDebugRuleValidity:
debugRuleValidity
isConnectedToPower
_setupXPCActivity
_setupPowerSourceMonitor
_takePowerAssertion
_dropPowerAssertion
lastDownloadIsValidValue
batteryLevel
_powerSourceHasChanged
networkingIsCheap
setNetworkingIsCheap:
_networkingIsCheap
_lastDownloadIsValidValue
_powerAssertionID
_debugRuleValidity
_powerRunLoopSource
_rulesEngineWorkQueue
T@"<BAAgentDownloadRulesEngineDelegate>",W,V_delegate
TB,V_networkingIsCheap
T^{__CFRunLoopSource=},V_powerRunLoopSource
TB,V_lastDownloadIsValidValue
T@"NSObject<OS_dispatch_queue>",&,V_rulesEngineWorkQueue
TI,V_powerAssertionID
Ti,V_debugRuleValidity
setDownload:
dictionary
setRecordErrors:
setResponseQueue:
setStateLock:
stateLock
recordErrors
setRecordFound:
setAssetFound:
setAssetURL:
setAssetSize:
initWithContainerID:
setContainer:
setDiscretionaryNetworkBehavior:
setQualityOfService:
setAutomaticallyRetryNetworkFailures:
masqueradeIdentifier
setApplicationBundleIdentifierOverrideForContainerAccess:
setOperationConfiguration:
_newOperationQuery
setShouldFetchAssetContent:
database
_downloadFailedWithError:
initWithCursor:
addOperation:
recordFound
enumerateKeysAndObjectsUsingBlock:
assetFound
_consumeAvailableDownloadSize
_downloadActualAsset
setQueryCompletionBlock:
size
setRecordMatchedBlock:
setCurrentOperation:
responseQueue
downloadDidPause
currentOperation
cancel
downloadFailedWithError:
downloadSucceededWithURL:
assetSize
assetURL
_downloadSucceededWithURL:
fileURL
initWithQuery:
operationConfiguration
setConfiguration:
container
privateCloudDatabase
sharedCloudDatabase
publicCloudDatabase
setDatabase:
setDesiredKeys:
setResultsLimit:
initWithDownload:withDelegate:
startDownloadWithError:
_recordFound
_assetFound
_download
_responseQueue
_stateLock
_operationConfiguration
_currentOperation
_recordErrors
_assetSize
_assetURL
T@"<BACloudKitDownloadManagerDelegate>",W,N,V_delegate
T@"BACloudKitDownload",W,N,V_download
T@"NSObject<OS_dispatch_queue>",&,N,V_responseQueue
T@"NSLock",&,N,V_stateLock
T@"CKOperationConfiguration",&,N,V_operationConfiguration
T@"CKQueryOperation",&,N,V_currentOperation
T@"NSMutableDictionary",&,N,V_recordErrors
TB,N,V_recordFound
TB,N,V_assetFound
TQ,N,V_assetSize
T@"NSURL",&,N,V_assetURL
setType:
typeString
_type
Tq,V_type
T@"BADownload",&,V_download
initWithSuiteName:
sharedConnection
isAutomaticAppUpdatesAllowed
processInfo
isLowPowerModeEnabled
entitlementNamed:ofClass:
UIBackgroundModes
initWithIdentifier:applicationTeamIdentifier:
unsignedLongLongValue
setDownloadAllowance:
setAllowedDownloadDomains:
setAmountDownloaded:
setHasLaunchedApplication:
setExtensionRuntimeEvents:
setAllowedDownloadDomainWildcards:
setAllowanceLock:
allowanceLock
setName:
decodeBoolForKey:
_populateAllowedDomainInfoWithArray:
amountDownloaded
numberWithUnsignedLongLong:
downloadAllowance
encodeBool:forKey:
serializableAllowedDomainInfo
extensionRuntimeEvents
_remainingDownloadAllowance
appWasLastForceQuit
applicationForIdentifierAllowsBackgroundActivity:
currentRuntime
setAppWasLastForceQuit:
arrayByAddingObjectsFromArray:
initWithIdentifier:restrictionsDictionary:
donePeriodicCheck
setCurrentRuntime:
_hasSentApplicationInstalledMessage
_hasLaunchedApplication
_appWasLastForceQuit
_applicationIdentifier
_lastPeriodicCheckTime
_lastApplicationLaunchTime
_applicationTeamIdentifier
_allowedDownloadDomains
_allowedDownloadDomainWildcards
_amountDownloaded
_downloadAllowance
_allowanceLock
_extensionRuntimeEvents
_currentRuntime
T@"NSString",&,V_applicationIdentifier
TQ,V_amountDownloaded
TQ,V_downloadAllowance
T@"NSDate",&,V_lastPeriodicCheckTime
TB,V_hasLaunchedApplication
TB,V_appWasLastForceQuit
T@"NSDate",&,V_lastApplicationLaunchTime
T@"NSLock",&,V_allowanceLock
T@"NSArray",&,V_allowedDownloadDomains
T@"NSArray",&,V_allowedDownloadDomainWildcards
T@"NSMutableArray",&,V_extensionRuntimeEvents
T@"BAExtensionRuntime",&,V_currentRuntime
TB,V_hasSentApplicationInstalledMessage
T@"NSString",&,V_applicationTeamIdentifier
setUniqueIdentifier:
setDownloadManager:
downloadManager
downloadSizeRestricted
_downloadSizeRestricted
TB,V_downloadSizeRestricted
setConnection:
_setupConnection
_connection
T@"NSXPCConnection",&,V_connection
integerValue
setApplicationGroupIdentifier:
setMasqueradeIdentifier:
bundleRecordForCurrentProcess
groupContainerURLs
allKeys
allocWithZone:
copyWithZone:
setState:
bytes
setDownloadStartDate:
transaction
_internalState
_isForegroundDownload
_state
_uniqueIdentifier
_priority
_error
_applicationGroupIdentifier
_expectedOutFileName
_downloadStartDate
_downloadCachePath
_session
_downloadTask
_resumeData
_stagedDownloadedFileURL
_transaction
_masqueradeIdentifier
Tq,N,SsetInternalState:
Tq,N,V_state
Tq,V_priority
T@"NSString",&,N,V_identifier
T@"NSString",&,N,V_uniqueIdentifier
T@"NSError",&,V_error
T@"NSString",&,V_applicationGroupIdentifier
T@"NSString",&,V_expectedOutFileName
T@"NSDate",&,V_downloadStartDate
T@"NSString",&,V_downloadCachePath
T@"NSURLSession",&,V_session
T@"NSURLSessionDownloadTask",&,V_downloadTask
T@"NSData",&,V_resumeData
T@"NSURL",&,V_stagedDownloadedFileURL
TB,V_isForegroundDownload
T@"NSObject<OS_os_transaction>",&,V_transaction
T@"NSString",&,N,V_masqueradeIdentifier
currentDownloads:
scheduleDownload:reply:
performWithExclusiveControlBeforeDate:handler:
performWithExclusiveControlWithHandler:
exclusiveControlExitedWithToken:
startForegroundDownload:reply:
cancelDownload:reply:
applicationStateDidChange:
setIsActive:
setClientWorkQueue:
setClientHandlerQueue:
clientWorkQueue
_validateAndSetClientIdentifier
setExclusiveAccessBlockQueue:
clientHandlerQueue
removeDownloadIdentifier:
downloadIdentifier:didReceiveChallenge:authChallengeHandler:
lastExclusiveAccessBlockToken
exclusiveAccessBlockQueue
connectionIsValid
isApplication
isActive
_entitledForCloudKitWithDownload:outError:
setLastExclusiveAccessBlockToken:
stringWithUTF8String:
bundleRecordForAuditToken:error:
parentAppRecord
setClientIdentifier:
setIsApplication:
applicationProxyForIdentifier:
initWithApplicationProxy:
unauthoritativeTrustState
setSigningIdentifier:
signingIdentifier
setConnectionIsValid:
remoteObjectProxy
_isApplication
_isActive
_connectionIsValid
_clientIdentifier
_clientHandlerQueue
_clientWorkQueue
_signingIdentifier
_exclusiveAccessBlockQueue
_lastExclusiveAccessBlockToken
T@"NSObject<OS_dispatch_queue>",&,V_clientHandlerQueue
T@"NSObject<OS_dispatch_queue>",&,V_clientWorkQueue
TB,V_isApplication
TB,V_isActive
TB,V_connectionIsValid
T@"NSString",&,V_clientIdentifier
T@"NSString",&,V_signingIdentifier
T@"BABlockQueue",&,V_exclusiveAccessBlockQueue
T@"NSUUID",&,V_lastExclusiveAccessBlockToken
https
v16@?0@"NSData"8
HTTP Status
HTTP Headers
com.apple.backgroundassets.extension.%@.shutdown_queue
v8@?0
v16@?0@"NSError"8
v12@?0B8
-[BADownloaderExtensionProxy applicationDidInstallWithMetadata:]_block_invoke
-[BADownloaderExtensionProxy applicationDidUpdateWithMetadata:]_block_invoke
-[BADownloaderExtensionProxy checkForUpdatesWithMetadata:]_block_invoke
-[BADownloaderExtensionProxy sendAuthenticationChallenge:download:completionHandler:]_block_invoke
v24@?0q8@"NSURLCredential"16
-[BADownloaderExtensionProxy extensionWillTerminate]_block_invoke
-[BADownloaderExtensionProxy backgroundDownloadDidFail:completionHandler:]_block_invoke
-[BADownloaderExtensionProxy backgroundDownloadDidFinish:stagedClientURL:sandboxToken:completionHandler:]_block_invoke
wakeupForTokenWithReply should never be called on the proxy object, it is for internal use only
Extension Proxy
Identifier: %@
PID: %d
Extension Termination Time: %@ (%.2lf seconds remaining)
startDownloadWithDelegate is not implemented on BADownload as it is abstract.
pauseDownload is not implemented on BADownload as it is abstract.
cancelDownload is not implemented on BADownload as it is abstract.
PreventUserIdleSystemSleep
Downloading - %@
Library/Caches
%@-%ld.%@
com.apple.backgroundassets.error
BAError
startDate
endDate
**error**
-[BAAgentSystemConnection triggerPeriodic:completionHandler:]
command
arguments
state
shutdown
force_periodic
reset
downloads-allowed
clear
System Connection
PID: %d
Non BAURLDownload passed to syncTo for BAURLDownload
Name
expectedFieldKey must be a valid string.
expectedFieldValue cannot be passed in as nil.
expectedFieldValue must be of type: NSString, NSNumber, NSDate, NSData, or NSArray.
%@ == %%@
NSString *  must be a valid unique string.
Provided query must be a valid CKQuery.
Provided assetKey must be a valid string.
Provided containerIdentifier must be a valid string.
Provided CKRecordZoneID must be a valid object.
com.apple.developer.icloud-container-environment
production
BACloudKitDownload_File_%@
BACKD.ContainerID
BACKD.query
BACKD.assetKey
BACKD.zoneID
BACKD.databaseScope
request must be a URLRequest.
request must have a valid URL.
request can only download over HTTPS.
request must be secure coding compliant.
identifier can not be nil
identifier must be a string.
request
com.apple.backgroundassets
system
client_connection
download
v32@?0@"BABlock"8Q16^B24
BABlockQueue retain count is being decremented past 0.
Caller invoked invalidateBlockQueue on BABlockQueueManager with an object that was not a BABlockQueue.
com.apple.backgroundassets.downloadstaging/%@
identifier
lastDownloadStartDate
downloads
q24@?0@"BADownload"8@"BADownload"16
%@ (%p) - %lu Downloads {
%@ (%p)
Application Identifier: %@
Downloads (%lu): {
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-.
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-.*
com.apple.backgroundassets.system
com.apple.backgroundassets.appstore
kKeepAppsUpToDateEnabledChangedNotification
com.apple.backgroundassets.agentcore.clientnotification.async
com.apple.backgroundassets.agentcore.connectionqueue
com.apple.backgroundassets.agentcore.workqueue
-[BAAgentCore handleApplicationEvent:identifier:applicationInfo:]_block_invoke_3
baagent.redeliverevents
q24@?0@"BADownloadQueue"8@"BADownloadQueue"16
-[BAAgentCore download:didReceiveChallenge:completionHandler:]_block_invoke
-[BAAgentCore download:failedWithError:]_block_invoke
B32@?0@"BADownload"8^@16^@24
BADownload_Client_Link_%@.tmp
-[BAAgentCore download:finishedWithFileURL:]_block_invoke
ApplicationState.bin
DownloadQueues.bin
baagent.deserializestate
Application State
Queues
UndeliveredEvents.bin
Undelivered Events
baagent.serializestate
baagent.serializestate.downloadqueues
baagent.serializestate.applicationstates
baagent.serializestate.undeliveredevents
com.apple.backgroundassets.%@.reply
com.apple.backgroundassets.rulesengine
Power Source State
AC Power
Current Capacity
com.apple.backgroundassets.periodic_check
v16@?0@"NSObject<OS_xpc_object>"8
Background assets - rules engine
com.apple.BACloudKitDownloadManager.ResponseQueue
v32@?0@"CKRecordID"8@"NSError"16^B24
v24@?0@"CKQueryCursor"8@"NSError"16
v32@?0@"CKRecordID"8@"CKRecord"16@"NSError"24
type
Download Finished
Download Failed
Unknown
Event: %@ - Download %@
com.apple.mt
KeepAppsUpToDateAppList
fetch
%@ Allowance Lock
extensionRuntimeEvents
Application Identifier: %@
Allowed Initital Download Amount: %llu
Amount Downloaded: %llu
Has Run Installed: %@
Allowed Domains: %@
Last Check Time: %@
App Has Been Launched: %@
Last Launch Time: %@
Extension Runtime In Last 24h: %lf
BACloudKitDownload.%@.%@
applicationIdentifier
lastPeriodicCheckTime
lastApplicationLaunchTime
downloadSizeRestricted
com.apple.backgroundassets.user
com.apple.developer.team-identifier
applicationTeamIdentifier
amountDownloaded
downloadAllowance
hasSentApplicationInstalledMessage
hasLaunchedApplication
allowedDownloadDomains
com.apple.background-asset-downloader-extension
BAInitialDownloadRestrictions
BADownloadAllowance
BADownloadDomainAllowList
com.apple.backgroundassets.application-identifier
com.apple.backgroundassets.localized-application-name
internalState
priority
downloadFailureError
uniqueIdentifier
applicationGroupIdentifier
expectedOutFileName
stagedDownloadedFileURL
resumeData
downloadCachePath
isRestrictedDownload
masqueradeIdentifier
Provided applicationGroupIdentifier must be a valid string.
The current app has no app groups it is a member of %@
%@.%@.%@
%@ (%p) - %@
%@ (%p) - %@
Failed
Created
Pausing
Paused
Waiting
Download Starting...
Download backgrounded and waiting on NSURLSession
Downloading
Finished
State: %@
Priority: %lu
Download error: %@
Unique identifier: %@
App Group identifier: %@
Application identifier: %@
Download start time: %@
Download cache path: %@
Staged file url: %@
URL session object: %@
URL download task: %@
Resume data: %p, %lu
Is restricted download: %@
Is foreground download: %@
%d.%@.worker
%d.%@.handler
v20@?0B8@"NSUUID"12
EXAppExtensionAttributes
NSExtension
com.apple.developer.icloud-services
CloudKit
com.apple.developer.icloud-container-identifiers
com.apple.BAAgentClientConnection.AuthChallengeWaiter
-[BAAgentClientConnection downloadIdentifier:didReceiveChallenge:authChallengeHandler:withCompletion:]_block_invoke_2
Client Connection
Client Identifier: %@
PID: %d
Is Client App: %@
Download %{public}@ is restricted, validating.
Download %{public}@ rejected based on domain check.
Download %{public}@ rejected as we are out of download allowance.
Download %{public}@ was invalidated with a failure in state: %ld.
Pausing download %{public}@ because we are on cellular.
Pausing download %{public}@ because our network is expensive.
Extension interrupted for identifier: %{public}@
Extension invalidated for identifier: %{public}@
Attempting to wakeup extension connection.
Fatal: Wakeup extension timed out.
Wakeup extension succeeded.
Fatal: Wakeup extension errored out.
Failed to send %s for: %{public}@ error: %@
Terminating connection to extension: %{public}@
Failed to take power assertion for rules engine.
Staged download url is nil.
Failed to load container for app group identifier: %@
Failed to move file with error: %@
%s called from client (%d) failed because the plugin could not be found / loaded.
Rejecting download (%{public}@ , %@) because queue (%{public}@) is full.
Requested foreground on download that does not appear to be scheduled.
Download: %{public}@
Client: %{public}@
Started listening for clients.
Started listening for xpc activity.
Connection to service: %{public}@ from pid:%{public}d has invalid service name.
Client connection accepted from pid:%{public}d
Client connection rejected (signing error or team-id mismatch) from pid:%{public}d
New SPI connection from pid:%{public}d
System connection accepted from pid:%{public}d
System connection from pid:%{public}d failed to init with error: %@
System connection from pid:%{public}d rejected due to lack of entitlement.
Rejecting talking to extension %@ because the background activity is not allowed.
Rejecting launching extension for %@ because it has already run too long.
Failed to get represented extension point with query: %s
Extension (%@) is not part of a application bundle. Failing.
Application bundle (%@) is not the same as the bundle id (%@). Failing.
Failed to get extension process: %s
Extension representation failed to generate XPC connection: %s
Extension representation failed to generate XPC connection with unknown error.
Rejected extension connection (%@) for mismiatched team id
failed to establish connection for extension (%@)
Event (%ld) dropped from client (%s) failed because background activity is not allowed.
%s called from client (%s) failed because the plugin could not be found / loaded.
Scheduled download identifier: %{public}@ for client: %{public}@
Dropping unknown unhandled event type in list: %@
Download did begin: %{public}@
Download did begin finished.
%s, Will not message extension for %@ because background activity is disabled.
Download did fail: %{public}@ with error: %{public}@
Added undelivered event: %@
Failed to notify anyone about failed download: %@
Download did fail done
Download did finish: %{public}@
Failed to stage download url for download: %{public}@ for client: %{public}@
Warning: No sandbox token issued for finished download: %@ URL: %@ for client: %@
Failed to clone download: %{public}@ for extension.
Failed to notify anyone about finished download: %@
Download did finish done.
Debug shutdwon called. Preparing to exit
Dumping debug agent state:
Allowed time for downloads: %@
**** Application State Info ****
**** Connection State Info  ****
**** Extension Connection State Info ****
**** Download Queue State Info ****
**** ---------------------- ****
**** ------------------------------- ****
Failed to deserialize application state: %{public}@
failed to open application state URL: %{public}@
Failed to load serialized application state with error: %@
Failed to deserialize download queues: %{public}@
failed to open download queue URL: %{public}@
Failed to load serialized downloads with error: %@
Failed to deserialize events file: %{public}@
failed to open deserialize events URL: %{public}@
Failed to load deserialize events with error: %@
Failed to serialize download queues: %{public}@
Failed to serialize application state: %{public}@
Serializing state and shutting down.
Clear state set, will clear state..
Failed to get power sources. Assume connected to power.
Failed to get power sources. Assume full battery.
A cursor was returned, this is unexpected for 1 result; is the operation hung? This is why.
CKRecordID: %@ returned an error: %@
Denying background activity for %@ background updates are disabled.
Denying background activity for %@ because device is in low power mode.
Denying background activity for %@ background activity for this app is disabled.
Application (%@) lacks background fetch entitlement. Will not use extension.
Application identifier (%@) is not valid Universal Type Identifier. Failing.
Dropping download because application identifier is invalid: %@
Failed to consume token: %@ for client: %@
Failed to get executable path from audit token.
Executable path from audit token is invalid or is of an empty length.
Unable to construct a SecTaskRef from client audit token.
Failed to get client application static code object, error OSStatus: %d
Failed to get client application code signing information, error OSStatus: %d
Code signed Info.plist is nil
Failed to get application record. Falling back to last component removal.
App-ified clientIdentifier is nil or 0 length
Code signed bundle identifier is nil
Application (%@) is not found in the LaunchServices database and cannot be used with BackgroundAssets.
Application (%@) is not registered with FrontBoardServices and cannot be used with BackgroundAssets.
Application (%@) is not trusted on this iOS device and cannot be used with BackgroundAssets. Trust State: %@
Client identifier (%@) is not valid Universal Type Identifier. Disconnecting.
Client is missing signing identifier, client must be signed with an identifier to use BackgroundAssets. %@
Agent
BAURLDownloadNSURLDelegateProtocol
BADownloadAgentProtocol
NSURLSessionDelegate
NSObject
NSURLSessionTaskDelegate
NSURLSessionDownloadDelegate
BADownloaderExtensionSyncProtocol
BADownloaderExtensionProxy
Private
BAExtensionRuntime
NSSecureCoding
NSCoding
BAAgentSystemXPCProtocol
BAAgentSystemConnection
VeryPrivate
BACloudKitDownload
BAURLDownload
BABlock
BABlockQueue
BABlockQueueManager
BADownloadQueue
BADownloadManagerDelegate
BAUtilities
BAAgentCore
NSXPCListenerDelegate
BAAgentDownloadRulesEngineDelegate
BAAgentKeyedUnarchiver
BAAgentDownloadRulesEngine
BACloudKitDownloadManager
BAUnhandledDownloadEvent
BAApplicationInfo
BACloudKitDownloadManagerDelegate
BAApplicationExtensionInfo
BAAgentConnection
BADownload
NSCopying
BAAgentKeyedArchiver
BAAgentClientXPCProtocol
BADownloadManagerSyncProtocol
BAAgentClientConnection
v16@0:8
B24@0:8@16
v32@0:8@16@24
v40@0:8@16@24@?32
v40@0:8@16@24@32
v56@0:8@16@24q32q40q48
v48@0:8@16@24q32q40
B24@0:8@"<BADownloadManagerDelegate>"16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@16
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v40@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24@"NSURL"32
v56@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24q32q40
v24@0:8@?16
v32@0:8@16@?24
v24@0:8@?<v@?B>16
v32@0:8@"BAApplicationExtensionInfo"16@?<v@?>24
v40@0:8@"NSURLAuthenticationChallenge"16@"BADownload"24@?<v@?q@"NSURLCredential">32
v32@0:8@"BADownload"16@?<v@?B>24
v48@0:8@"BADownload"16@"NSURL"24@"NSString"32@?<v@?B>40
@40@0:8@16@24@32
B40@0:8@16@24@?32
@24@0:8@16
v24@0:8Q16
v20@0:8B16
@"NSString"
@"NSObject<OS_dispatch_queue>"
@"NSXPCConnection"
@"BAApplicationInfo"
@"NSTimer"
@"_EXExtensionProcess"
B40@0:8@16^@24^@32
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
d16@0:8
@"NSDate"
v32@0:8@"NSDictionary"16@?<v@?>24
@32@0:8@16^@24
@56@0:8@16@24@32@40@48
@64@0:8@16@24@32@40@48@56
@96@0:8@16@24@32@40@48@56@64@72q80q88
q16@0:8
v24@0:8q16
@"CKContainerID"
@"CKQuery"
@"CKRecordZoneID"
@48@0:8@16@24@32q40
@"NSURLRequest"
@32@0:8@16@?24
B20@0:8B16
@?16@0:8
@"NSUUID"
@"NSObject<OS_dispatch_source>"
@24@0:8@?16
v32@0:8@?16@24
@"NSLock"
@"NSMutableOrderedSet"
@"NSMutableDictionary"
v48@0:8@16q24q32q40
v24@0:8@"BADownload"16
v48@0:8@"BADownload"16q24q32q40
v40@0:8@"BADownload"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v32@0:8@"BADownload"16@"NSError"24
v32@0:8@"BADownload"16@"NSURL"24
@32@0:8@16@24
B32@0:8@16^@24
@"<BADownloadManagerDelegate>"
@"NSMutableArray"
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v40@0:8q16@24@32
B40@0:8@16@24^@32
v32@0:8@16q24
v24@0:8B16B20
@"NSXPCListener"
@"BAAgentDownloadRulesEngine"
@"BAAgentCore"
v20@0:8i16
f16@0:8
^{__CFRunLoopSource=}16@0:8
v24@0:8^{__CFRunLoopSource=}16
I16@0:8
v20@0:8I16
i16@0:8
@"<BAAgentDownloadRulesEngineDelegate>"
^{__CFRunLoopSource=}
B24@0:8^@16
@"<BACloudKitDownloadManagerDelegate>"
@"BACloudKitDownload"
@"CKOperationConfiguration"
@"CKQueryOperation"
@"NSURL"
@32@0:8q16@24
@"BADownload"
B24@0:8Q16
@"NSArray"
@"BAExtensionRuntime"
v24@0:8@"NSError"16
v24@0:8@"NSURL"16
@24@0:8^{_NSZone=}16
@"NSError"
@"NSURLSession"
@"NSURLSessionDownloadTask"
@"NSData"
@"NSObject<OS_os_transaction>"
v24@0:8@?<v@?@"NSArray"@"NSError">16
v32@0:8@"BADownload"16@?<v@?B@"NSError">24
v32@0:8@"NSDate"16@?<v@?B@"NSError"@"NSUUID">24
v24@0:8@?<v@?@"NSError"@"NSUUID">16
v24@0:8@"NSUUID"16
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v24@0:8@"NSArray"16
v24@0:8@"NSString"16
v48@0:8@"NSString"16q24q32q40
v40@0:8@"NSString"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v40@0:8@"NSString"16@"NSError"24@?<v@?B>32
v48@0:8@"NSString"16@"NSURL"24@"NSString"32@?<v@?B>40
v48@0:8@16@24@?32@?40
@"BABlockQueue"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>20A241133</string>
<key>CFBundleDevelopmentRegion</key>
<string>en</string>
<key>CFBundleExecutable</key>
<string>backgroundassets.user</string>
<key>CFBundleIdentifier</key>
<string>com.apple.backgroundassets.user</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>backgroundassets.user</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>20A5303d</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.0</string>
<key>DTSDKBuild</key>
<string>20A5303d</string>
<key>DTSDKName</key>
<string>iphonesimulator16.0.internal</string>
<key>DTXcode</key>
<string>1400</string>
<key>DTXcodeBuild</key>
<string>14A6200i</string>
<key>MinimumOSVersion</key>
<string>16.0</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.backgroundassets.user</string>
<key>com.apple.QuartzCore.secure-mode</key>
<true/>
<key>com.apple.application-identifier</key>
<string>com.apple.backgroundassets.user</string>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudKit</string>
</array>
<key>com.apple.private.MobileContainerManager.otherIdLookup</key>
<true/>
<key>com.apple.private.cloudkit.masquerade</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.runningboard.launch_extensions</key>
<true/>
<key>com.apple.springboard.CFUserNotification</key>
<true/>
</dict>
</plist>
@(#)PROGRAM:backgroundassets.user  PROJECT:BackgroundAssets-1
UIBackgroundModes
writeToURL:options:error:
valueForEntitlement:
userInfo
unsignedLongLongValue
unlock
unionSet:
unauthoritativeTrustState
timeIntervalSinceNow
timeIntervalSinceDate:
synchronousRemoteObjectProxyWithErrorHandler:
substringToIndex:
substringFromIndex:
stringWithUTF8String:
stringWithFormat:
stringWithCString:encoding:
stringByTrimmingCharactersInSet:
stringByDeletingPathExtension
stringByAppendingPathComponent:
statusCode
sortedArrayUsingComparator:
sortUsingComparator:
size
sharedConnection
sharedCloudDatabase
set_allowsRetryForBackgroundDataTasks:
setWithObjects:
setWithObject:
setWithArray:
setTimeoutIntervalForRequest:
setShouldFetchAssetContent:
setResultsLimit:
setRemoteObjectInterface:
setRecordMatchedBlock:
setQueryCompletionBlock:
setQualityOfService:
setObject:forKey:
setNetworkServiceType:
setName:
setInvalidationHandler:
setInterruptionHandler:
setExtensionIdentity:
setExportedObject:
setExportedInterface:
setDiscretionaryNetworkBehavior:
setDesiredKeys:
setDecodingFailurePolicy:
setDatabase:
setContainer:
setConfiguration:
setClasses:forSelector:argumentIndex:ofReply:
setByAddingObjectsFromSet:
setByAddingObjectsFromArray:
setAutomaticallyRetryNetworkFailures:
setApplicationBundleIdentifierOverrideForContainerAccess:
setAllowsExpensiveNetworkAccess:
setAllowsCellularAccess:
sessionWithConfiguration:delegate:delegateQueue:
serviceName
scheme
response
removeObjectsInArray:
removeObjectForKey:
removeObject:
removeItemAtURL:error:
removeItemAtPath:error:
removeAllObjects
remoteObjectProxyWithErrorHandler:
remoteObjectProxy
rangeOfString:options:
raise
publicCloudDatabase
processInfo
processIdentifier
privateCloudDatabase
predicateWithFormat:
port
pathExtension
path
parentAppRecord
objectForKey:
objectAtIndex:
numberWithUnsignedLongLong:
numberWithInteger:
newXPCConnectionWithError:
mutableCopy
moveItemAtURL:toURL:error:
mainRunLoop
lowercaseString
longLongValue
lock
localizedStringForKey:value:table:
length
lastPathComponent
isLowPowerModeEnabled
isEqualToString:
isEqualToDate:
isAutomaticAppUpdatesAllowed
invertedSet
interfaceWithProtocol:
integerValue
intValue
initWithSuiteName:
initWithRecordType:predicate:
initWithQuery:
initWithMachServiceName:
initWithFormat:
initWithCursor:
initWithContainerIdentifier:environment:
initWithContainerID:
initWithCapacity:
initWithApplicationProxy:
initRequiringSecureCoding:
initForReadingFromData:error:
host
hasSuffix:
hasPrefix:
groupContainerURLs
fireDate
finishTasksAndInvalidate
fileURLWithPath:
fileURL
fileSystemRepresentation
fileExistsAtPath:isDirectory:
extensionProcessWithConfiguration:error:
extensionPointIdentifierQuery:
executeQuery:
exceptionWithName:reason:userInfo:
errorWithDomain:code:userInfo:
enumerateObjectsUsingBlock:
enumerateKeysAndObjectsUsingBlock:
entitlementNamed:ofClass:
encodedData
encodeObject:forKey:
encodeInteger:forKey:
encodeBool:forKey:
downloadTaskWithResumeData:
downloadTaskWithRequest:
domain
distantPast
dictionaryWithObjectsAndKeys:
dictionaryWithObjects:forKeys:count:
dictionary
defaultSessionConfiguration
defaultRecordZone
defaultManager
defaultContainer
defaultCenter
decodeObjectOfClasses:forKey:
decodeObjectOfClass:forKey:
decodeIntegerForKey:
decodeBoolForKey:
date
database
dataWithContentsOfURL:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
countByEnumeratingWithState:objects:count:
count
copy
containsObject:
containingBundleRecord
containerURLForSecurityApplicationGroupIdentifier:
containerIdentifier
container
compare:
code
characterSetWithCharactersInString:
caseInsensitiveCompare:
cancelByProducingResumeData:
cancel
bytes
bundleRecordForCurrentProcess
bundleRecordForAuditToken:error:
bundleIdentifier
bundleForClass:
boolValue
backgroundSessionConfigurationWithIdentifier:
auditToken
arrayWithObjects:count:
arrayWithCapacity:
arrayByAddingObjectsFromArray:
array
applicationProxyForIdentifier:
appendString:
appendFormat:
allowsExpensiveNetworkAccess
allowsCellularAccess
allocWithZone:
allValues
allKeys
allHeaderFields
addPort:forMode:
addOperation:
addObserver:selector:name:object:
addObjectsFromArray:
addObject:
addEntriesFromDictionary:
absoluteString
_setQueue:
UUIDString
UUID
UTF8String
URLForDirectory:inDomain:appropriateForURL:create:error:
URLByAppendingPathComponent:
URLByDeletingLastPathComponent
dealloc
downloadDidBegin:
download:failedWithError:
downloadDidPause:
download:finishedWithFileURL:
download:didReceiveChallenge:completionHandler:
download:didWriteBytes:totalBytesWritten:totalBytesExpectedToWrite:
startDownloadWithDelegate:
pauseDownload
cancelDownload
_cancelDownload
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSession:downloadTask:didFinishDownloadingToURL:
URLSession:task:didCompleteWithError:
URLSession:downloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:
URLSession:downloadTask:didResumeAtOffset:expectedTotalBytes:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:didCreateTask:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
init
wakeupForTokenWithReply:
applicationDidInstallWithMetadata:completionHandler:
applicationDidUpdateWithMetadata:completionHandler:
checkForUpdatesWithMetadata:completionHandler:
receivedAuthenticationChallenge:download:completionHandler:
extensionWillTerminate
backgroundDownloadDidFail:completionHandler:
backgroundDownloadDidFinish:stagedClientURL:sandboxToken:completionHandler:
initWithExtension:XPCConnection:applicationInfo:
applicationDidInstallWithMetadata:
applicationDidUpdateWithMetadata:
checkForUpdatesWithMetadata:
sendAuthenticationChallenge:download:completionHandler:
extendClientSandboxForStagedURL:
invalidate
_sendingMessage
_checkForExit
_startExitTimer
_terminateConnection
identifier
setIdentifier:
shutdownQueue
setShutdownQueue:
extensionConnection
setExtensionConnection:
applicationInfo
setApplicationInfo:
exitTimer
setExitTimer:
extensionProcess
setExtensionProcess:
extensionActiveCalls
setExtensionActiveCalls:
sentWillTerminateMessage
setSentWillTerminateMessage:
sentTerminatonMessage
setSentTerminatonMessage:
.cxx_destruct
_sentWillTerminateMessage
_sentTerminatonMessage
_identifier
_shutdownQueue
_extensionConnection
_applicationInfo
_exitTimer
_extensionProcess
_extensionActiveCalls
T@"NSObject<OS_dispatch_queue>",&,V_shutdownQueue
T@"NSXPCConnection",&,V_extensionConnection
T@"BAApplicationInfo",&,V_applicationInfo
T@"NSString",&,V_identifier
T@"NSTimer",&,V_exitTimer
T@"_EXExtensionProcess",&,V_extensionProcess
TQ,V_extensionActiveCalls
TB,V_sentWillTerminateMessage
TB,V_sentTerminatonMessage
setApplicationInformationForRestrictedDownload:
addPowerAssertionAndActivityWithIdentifier:
removePowerAssertionAndActivity
syncTo:
moveDownloadToFinalDestinationPathWithStagedURL:outDestinationURL:outError:
classesForSerialization
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
initWithStartDate:
elapsedTime
extensionExited
isMoreThan24HoursAgo
startDate
setStartDate:
endDate
setEndDate:
_startDate
_endDate
T@"NSDate",&,V_startDate
T@"NSDate",&,V_endDate
Td,R
initWithNSXPCConnection:error:
applicationWillBeInstalled:completionHandler:
applicationWasInstalled:completionHandler:
applicationWasUpdated:completionHandler:
applicationWasRestored:completionHandler:
triggerPeriodic:completionHandler:
runDebugCommand:reply:
initPrivatelyWithApplicationGroupIdentifier:
initWithIdentifier:recordType:recordName:assetKey:applicationGroupIdentifier:
initWithIdentifier:recordType:expectedFieldKey:expectedFieldValue:assetKey:applicationGroupIdentifier:
initWithIdentifier:recordType:expectedFieldKey:expectedFieldValue:assetKey:applicationGroupIdentifier:containerIdentifier:zoneID:databaseScope:priority:
containerID
setContainerID:
query
setQuery:
assetKey
setAssetKey:
zoneID
setZoneID:
databaseScope
setDatabaseScope:
_containerID
_query
_assetKey
_zoneID
_databaseScope
T@"CKContainerID",&,N,V_containerID
T@"CKQuery",&,N,V_query
T@"NSString",&,N,V_assetKey
T@"CKRecordZoneID",&,N,V_zoneID
Tq,N,V_databaseScope
initWithIdentifier:request:applicationGroupIdentifier:
initWithIdentifier:request:applicationGroupIdentifier:priority:
request
setRequest:
_request
T@"NSURLRequest",&,V_request
initWithToken:block:
executeWithSuccessfulDequeue:
block
token
fireByTimer
setFireByTimer:
blockFired
_blockFired
_block
_token
_fireByTimer
T@?,R,C,N,V_block
T@"NSUUID",R,N,V_token
T@"NSObject<OS_dispatch_source>",&,V_fireByTimer
TB,R,N,V_blockFired
initWithIdentifier:
__enqueue:
enqueue:
enqueue:waitLimitDate:
_dequeueNext
consumeToken:
drainSpecificWithToken:
drain
_increment
_decrement
queueRetainCount
blockQueueLock
blockQueue
awaitingBlockCompletion
setAwaitingBlockCompletion:
_awaitingBlockCompletion
_queueRetainCount
_blockQueueLock
_blockQueue
T@"NSString",R,N,V_identifier
TQ,R,N,V_queueRetainCount
T@"NSLock",R,N,V_blockQueueLock
T@"NSMutableOrderedSet",R,N,V_blockQueue
TB,N,V_awaitingBlockCompletion
blockQueueWithIdentifier:
invalidateBlockQueue:
identifiersToBlockQueues
_identifiersToBlockQueues
T@"NSMutableDictionary",R,N,V_identifiersToBlockQueues
initWithApplicationIdentifier:delegate:
scheduleDownload:error:
startForegroundDownload:error:
cancelDownload:error:
cancelAllDownloads
pauseAllForegroundDownloads
startNextDownload
pauseAllDownloads
numberOfActiveDownloads
numberOfWaitingDownloads
allDownloads
lastDownloadStartDate
setLastDownloadStartDate:
delegate
setDelegate:
downloads
setDownloads:
stagingDirectory
setStagingDirectory:
_lastDownloadStartDate
_delegate
_downloads
_stagingDirectory
T@"NSMutableArray",&,V_downloads
T@"NSDate",&,V_lastDownloadStartDate
T@"NSString",&,V_stagingDirectory
Tq,R
T@"NSArray",R
T@"<BADownloadManagerDelegate>",W,V_delegate
_baassets_stringByRemovingLastIdentifierComponent
_baassets_validUTI
_baassets_validUTIWithWildcard
_backgroundActivityStateDidChange
sharedCore
listener:shouldAcceptNewConnection:
downloadTimeValidityDidChange
doPeriodicUpdateCheck
listener:shouldAcceptNewClientConnection:
listener:shouldAcceptNewSPIConnection:
connectionDisconnected:
extensionDisconnectedWithIdentifier:
downloaderExtensionForApplicationIdentifier:
_downloaderExtensionForApplicationIdentifier:
applicationInfoForIdentifier:
_applicationInfoForIdentifier:
applicationWithIdentifier:willBeInstalledWithInitialRestrictions:
handleApplicationEvent:identifier:applicationInfo:
handleApplicationLaunched:
scheduleDownload:forClientIdentifier:error:
downloadForIdentifier:forClientIdentifier:
downloadsForIdentifier:
startForegroundDownload:forClientIdentifier:error:
cancelDownload:forClientIdentifier:error:
updateApplication:state:
_pokeScheduler
_scheduleDownloads
_checkConnection:hasAllowedTeamIDForIdentifier:
_setClearBeforeShutdown
_clearState
_debugShutdown
_printDebugState
_connectionsForApplicationIdentifier:
_pauseDownloads
_deserializeState
_deserializeApplicationList
_deserializeDownloadQueues
_deserializeUndeliveredEvents
_serializeState
_serializeDownloadQueues
_serializeApplicationState
_serializeUndeliveredEvents
_shutdownAgent
_debugDownloadTime:clear:
_connectionReplyQueueForIdentifier:
_applicationIdentifierAllowsBackgroundActivity:
asyncClientNotificationQueue
setAsyncClientNotificationQueue:
connectionQueue
setConnectionQueue:
workQueue
setWorkQueue:
listener
setListener:
spiListener
setSpiListener:
applicationState
setApplicationState:
connections
setConnections:
connectionReplyQueue
setConnectionReplyQueue:
unhandledDownloadEvents
setUnhandledDownloadEvents:
extensionConnections
setExtensionConnections:
rulesEngine
setRulesEngine:
downloadsInProgress
setDownloadsInProgress:
lastStartDate
setLastStartDate:
downloadQueuesByClientIdentifier
setDownloadQueuesByClientIdentifier:
debugClearState
setDebugClearState:
_debugClearState
_asyncClientNotificationQueue
_connectionQueue
_workQueue
_listener
_spiListener
_applicationState
_connections
_connectionReplyQueue
_unhandledDownloadEvents
_extensionConnections
_rulesEngine
_downloadsInProgress
_lastStartDate
_downloadQueuesByClientIdentifier
T@"NSObject<OS_dispatch_queue>",&,V_asyncClientNotificationQueue
T@"NSObject<OS_dispatch_queue>",&,V_connectionQueue
T@"NSObject<OS_dispatch_queue>",&,V_workQueue
T@"NSXPCListener",&,V_listener
T@"NSXPCListener",&,V_spiListener
T@"NSMutableArray",&,V_applicationState
T@"NSMutableArray",&,V_connections
T@"NSMutableDictionary",&,V_connectionReplyQueue
T@"NSMutableArray",&,V_unhandledDownloadEvents
T@"NSMutableDictionary",&,V_extensionConnections
T@"BAAgentDownloadRulesEngine",&,V_rulesEngine
Tq,V_downloadsInProgress
T@"NSMutableDictionary",&,V_lastStartDate
T@"NSMutableDictionary",&,V_downloadQueuesByClientIdentifier
TB,V_debugClearState
initWithApplicationInfo:
agentCore
setAgentCore:
_agentCore
T@"BAAgentCore",W,V_agentCore
initWithDelegate:
setDebugValidityTimeOverride:
isValidTimeForDownloads
isConnectedToPower
batteryLevel
resume
_setupPowerSourceMonitor
_setupXPCActivity
_takePowerAssertion
_dropPowerAssertion
_powerSourceHasChanged
networkingIsCheap
setNetworkingIsCheap:
powerRunLoopSource
setPowerRunLoopSource:
lastDownloadIsValidValue
setLastDownloadIsValidValue:
rulesEngineWorkQueue
setRulesEngineWorkQueue:
powerAssertionID
setPowerAssertionID:
debugRuleValidity
setDebugRuleValidity:
_networkingIsCheap
_lastDownloadIsValidValue
_powerAssertionID
_debugRuleValidity
_powerRunLoopSource
_rulesEngineWorkQueue
T@"<BAAgentDownloadRulesEngineDelegate>",W,V_delegate
TB,V_networkingIsCheap
T^{__CFRunLoopSource=},V_powerRunLoopSource
TB,V_lastDownloadIsValidValue
T@"NSObject<OS_dispatch_queue>",&,V_rulesEngineWorkQueue
TI,V_powerAssertionID
Ti,V_debugRuleValidity
downloadFailedWithError:
downloadSucceededWithURL:
initWithDownload:withDelegate:
startDownloadWithError:
_downloadFailedWithError:
_downloadSucceededWithURL:
_consumeAvailableDownloadSize
_downloadActualAsset
_newOperationQuery
download
setDownload:
responseQueue
setResponseQueue:
stateLock
setStateLock:
operationConfiguration
setOperationConfiguration:
currentOperation
setCurrentOperation:
recordErrors
setRecordErrors:
recordFound
setRecordFound:
assetFound
setAssetFound:
assetSize
setAssetSize:
assetURL
setAssetURL:
_recordFound
_assetFound
_download
_responseQueue
_stateLock
_operationConfiguration
_currentOperation
_recordErrors
_assetSize
_assetURL
T@"<BACloudKitDownloadManagerDelegate>",W,N,V_delegate
T@"BACloudKitDownload",W,N,V_download
T@"NSObject<OS_dispatch_queue>",&,N,V_responseQueue
T@"NSLock",&,N,V_stateLock
T@"CKOperationConfiguration",&,N,V_operationConfiguration
T@"CKQueryOperation",&,N,V_currentOperation
T@"NSMutableDictionary",&,N,V_recordErrors
TB,N,V_recordFound
TB,N,V_assetFound
TQ,N,V_assetSize
T@"NSURL",&,N,V_assetURL
initWithEventType:download:
typeString
type
setType:
_type
Tq,V_type
T@"BADownload",&,V_download
applicationForIdentifierAllowsBackgroundActivity:
extensionContainingApplicationList
initWithFullRestrictionsForIdentifier:
initWithIdentifier:restrictionsDictionary:
initWithIdentifier:applicationTeamIdentifier:
updateApplicationRestrictions:
remainingDownloadAllowance
consumeAllowanceAndReturnShouldStop:
allowsBackgroundActivity
shouldDoPeriodicCheck
extensionRuntime
shouldLaunchExtension
willLaunchExtension
donePeriodicCheck
applicationLaunched
userQuitTheApp
_remainingDownloadAllowance
_populateAllowedDomainInfoWithArray:
serializableAllowedDomainInfo
applicationIdentifier
setApplicationIdentifier:
lastPeriodicCheckTime
setLastPeriodicCheckTime:
lastApplicationLaunchTime
setLastApplicationLaunchTime:
hasSentApplicationInstalledMessage
setHasSentApplicationInstalledMessage:
hasLaunchedApplication
setHasLaunchedApplication:
applicationTeamIdentifier
setApplicationTeamIdentifier:
allowedDownloadDomains
setAllowedDownloadDomains:
allowedDownloadDomainWildcards
setAllowedDownloadDomainWildcards:
amountDownloaded
setAmountDownloaded:
downloadAllowance
setDownloadAllowance:
appWasLastForceQuit
setAppWasLastForceQuit:
allowanceLock
setAllowanceLock:
extensionRuntimeEvents
setExtensionRuntimeEvents:
currentRuntime
setCurrentRuntime:
_hasSentApplicationInstalledMessage
_hasLaunchedApplication
_appWasLastForceQuit
_applicationIdentifier
_lastPeriodicCheckTime
_lastApplicationLaunchTime
_applicationTeamIdentifier
_allowedDownloadDomains
_allowedDownloadDomainWildcards
_amountDownloaded
_downloadAllowance
_allowanceLock
_extensionRuntimeEvents
_currentRuntime
T@"NSString",&,V_applicationIdentifier
TQ,V_amountDownloaded
TQ,V_downloadAllowance
T@"NSDate",&,V_lastPeriodicCheckTime
TB,V_hasLaunchedApplication
TB,V_appWasLastForceQuit
T@"NSDate",&,V_lastApplicationLaunchTime
T@"NSLock",&,V_allowanceLock
T@"NSArray",&,V_allowedDownloadDomains
T@"NSArray",&,V_allowedDownloadDomainWildcards
T@"NSMutableArray",&,V_extensionRuntimeEvents
T@"BAExtensionRuntime",&,V_currentRuntime
TB,V_hasSentApplicationInstalledMessage
T@"NSString",&,V_applicationTeamIdentifier
downloadDidPause
downloadManager
setDownloadManager:
downloadSizeRestricted
setDownloadSizeRestricted:
_downloadSizeRestricted
TB,V_downloadSizeRestricted
_setupConnection
connectionInvalidated
connection
setConnection:
_connection
T@"NSXPCConnection",&,V_connection
copyWithZone:
internalState
setInternalState:
state
setState:
uniqueIdentifier
setUniqueIdentifier:
priority
setPriority:
error
setError:
applicationGroupIdentifier
setApplicationGroupIdentifier:
expectedOutFileName
setExpectedOutFileName:
downloadStartDate
setDownloadStartDate:
downloadCachePath
setDownloadCachePath:
session
setSession:
downloadTask
setDownloadTask:
resumeData
setResumeData:
stagedDownloadedFileURL
setStagedDownloadedFileURL:
isForegroundDownload
setIsForegroundDownload:
transaction
setTransaction:
masqueradeIdentifier
setMasqueradeIdentifier:
_internalState
_isForegroundDownload
_state
_uniqueIdentifier
_priority
_error
_applicationGroupIdentifier
_expectedOutFileName
_downloadStartDate
_downloadCachePath
_session
_downloadTask
_resumeData
_stagedDownloadedFileURL
_transaction
_masqueradeIdentifier
Tq,N,SsetInternalState:
Tq,N,V_state
Tq,V_priority
T@"NSString",&,N,V_identifier
T@"NSString",&,N,V_uniqueIdentifier
T@"NSError",&,V_error
T@"NSString",&,V_applicationGroupIdentifier
T@"NSString",&,V_expectedOutFileName
T@"NSDate",&,V_downloadStartDate
T@"NSString",&,V_downloadCachePath
T@"NSURLSession",&,V_session
T@"NSURLSessionDownloadTask",&,V_downloadTask
T@"NSData",&,V_resumeData
T@"NSURL",&,V_stagedDownloadedFileURL
TB,V_isForegroundDownload
T@"NSObject<OS_os_transaction>",&,V_transaction
T@"NSString",&,N,V_masqueradeIdentifier
currentDownloads:
scheduleDownload:reply:
performWithExclusiveControlBeforeDate:handler:
performWithExclusiveControlWithHandler:
exclusiveControlExitedWithToken:
startForegroundDownload:reply:
cancelDownload:reply:
applicationStateDidChange:
syncDownloads:
removeDownloadIdentifier:
downloadIdentifierDidBegin:
downloadIdentifierDidPause:
downloadIdentifier:didWriteBytes:totalBytesWritten:totalBytesExpectedToWrite:
downloadIdentifier:didReceiveChallenge:authChallengeHandler:
downloadIdentifier:didFailWithError:wasHandled:
downloadIdentifierDidFinish:clientStagedURL:sandboxExtensionToken:wasHandled:
_validateAndSetClientIdentifier
_entitledForCloudKitWithDownload:outError:
callBlockWhenConnectionReady:onQueue:
downloadIdentifier:didReceiveChallenge:authChallengeHandler:withCompletion:
isApplication
setIsApplication:
clientIdentifier
setClientIdentifier:
clientHandlerQueue
setClientHandlerQueue:
clientWorkQueue
setClientWorkQueue:
isActive
setIsActive:
connectionIsValid
setConnectionIsValid:
signingIdentifier
setSigningIdentifier:
exclusiveAccessBlockQueue
setExclusiveAccessBlockQueue:
lastExclusiveAccessBlockToken
setLastExclusiveAccessBlockToken:
_isApplication
_isActive
_connectionIsValid
_clientIdentifier
_clientHandlerQueue
_clientWorkQueue
_signingIdentifier
_exclusiveAccessBlockQueue
_lastExclusiveAccessBlockToken
T@"NSObject<OS_dispatch_queue>",&,V_clientHandlerQueue
T@"NSObject<OS_dispatch_queue>",&,V_clientWorkQueue
TB,V_isApplication
TB,V_isActive
TB,V_connectionIsValid
T@"NSString",&,V_clientIdentifier
T@"NSString",&,V_signingIdentifier
T@"BABlockQueue",&,V_exclusiveAccessBlockQueue
T@"NSUUID",&,V_lastExclusiveAccessBlockToken
https
v16@?0@"NSData"8
HTTP Status
HTTP Headers
com.apple.backgroundassets.extension.%@.shutdown_queue
v8@?0
v16@?0@"NSError"8
v12@?0B8
-[BADownloaderExtensionProxy applicationDidInstallWithMetadata:]_block_invoke
-[BADownloaderExtensionProxy applicationDidUpdateWithMetadata:]_block_invoke
-[BADownloaderExtensionProxy checkForUpdatesWithMetadata:]_block_invoke
-[BADownloaderExtensionProxy sendAuthenticationChallenge:download:completionHandler:]_block_invoke
v24@?0q8@"NSURLCredential"16
-[BADownloaderExtensionProxy extensionWillTerminate]_block_invoke
-[BADownloaderExtensionProxy backgroundDownloadDidFail:completionHandler:]_block_invoke
-[BADownloaderExtensionProxy backgroundDownloadDidFinish:stagedClientURL:sandboxToken:completionHandler:]_block_invoke
wakeupForTokenWithReply should never be called on the proxy object, it is for internal use only
Extension Proxy
Identifier: %@
PID: %d
Extension Termination Time: %@ (%.2lf seconds remaining)
startDownloadWithDelegate is not implemented on BADownload as it is abstract.
pauseDownload is not implemented on BADownload as it is abstract.
cancelDownload is not implemented on BADownload as it is abstract.
PreventUserIdleSystemSleep
Downloading - %@
Library/Caches
%@-%ld.%@
com.apple.backgroundassets.error
BAError
startDate
endDate
**error**
-[BAAgentSystemConnection triggerPeriodic:completionHandler:]
command
arguments
state
shutdown
force_periodic
reset
downloads-allowed
clear
System Connection
PID: %d
Non BAURLDownload passed to syncTo for BAURLDownload
Name
expectedFieldKey must be a valid string.
expectedFieldValue cannot be passed in as nil.
expectedFieldValue must be of type: NSString, NSNumber, NSDate, NSData, or NSArray.
%@ == %%@
NSString *  must be a valid unique string.
Provided query must be a valid CKQuery.
Provided assetKey must be a valid string.
Provided containerIdentifier must be a valid string.
Provided CKRecordZoneID must be a valid object.
com.apple.developer.icloud-container-environment
production
BACloudKitDownload_File_%@
BACKD.ContainerID
BACKD.query
BACKD.assetKey
BACKD.zoneID
BACKD.databaseScope
request must be a URLRequest.
request must have a valid URL.
request can only download over HTTPS.
request must be secure coding compliant.
identifier can not be nil
identifier must be a string.
request
com.apple.backgroundassets
system
client_connection
download
v32@?0@"BABlock"8Q16^B24
BABlockQueue retain count is being decremented past 0.
Caller invoked invalidateBlockQueue on BABlockQueueManager with an object that was not a BABlockQueue.
com.apple.backgroundassets.downloadstaging/%@
identifier
lastDownloadStartDate
downloads
q24@?0@"BADownload"8@"BADownload"16
%@ (%p) - %lu Downloads {
%@ (%p)
Application Identifier: %@
Downloads (%lu): {
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-.
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-.*
com.apple.backgroundassets.system
com.apple.backgroundassets.appstore
kKeepAppsUpToDateEnabledChangedNotification
com.apple.backgroundassets.agentcore.clientnotification.async
com.apple.backgroundassets.agentcore.connectionqueue
com.apple.backgroundassets.agentcore.workqueue
-[BAAgentCore handleApplicationEvent:identifier:applicationInfo:]_block_invoke_3
baagent.redeliverevents
q24@?0@"BADownloadQueue"8@"BADownloadQueue"16
-[BAAgentCore download:didReceiveChallenge:completionHandler:]_block_invoke
-[BAAgentCore download:failedWithError:]_block_invoke
B32@?0@"BADownload"8^@16^@24
BADownload_Client_Link_%@.tmp
-[BAAgentCore download:finishedWithFileURL:]_block_invoke
ApplicationState.bin
DownloadQueues.bin
baagent.deserializestate
Application State
Queues
UndeliveredEvents.bin
Undelivered Events
baagent.serializestate
baagent.serializestate.downloadqueues
baagent.serializestate.applicationstates
baagent.serializestate.undeliveredevents
com.apple.backgroundassets.%@.reply
com.apple.backgroundassets.rulesengine
Power Source State
AC Power
Current Capacity
com.apple.backgroundassets.periodic_check
v16@?0@"NSObject<OS_xpc_object>"8
Background assets - rules engine
com.apple.BACloudKitDownloadManager.ResponseQueue
v32@?0@"CKRecordID"8@"NSError"16^B24
v24@?0@"CKQueryCursor"8@"NSError"16
v32@?0@"CKRecordID"8@"CKRecord"16@"NSError"24
type
Download Finished
Download Failed
Unknown
Event: %@ - Download %@
com.apple.mt
KeepAppsUpToDateAppList
fetch
%@ Allowance Lock
extensionRuntimeEvents
Application Identifier: %@
Allowed Initital Download Amount: %llu
Amount Downloaded: %llu
Has Run Installed: %@
Allowed Domains: %@
Last Check Time: %@
App Has Been Launched: %@
Last Launch Time: %@
Extension Runtime In Last 24h: %lf
BACloudKitDownload.%@.%@
applicationIdentifier
lastPeriodicCheckTime
lastApplicationLaunchTime
downloadSizeRestricted
com.apple.backgroundassets.user
com.apple.developer.team-identifier
applicationTeamIdentifier
amountDownloaded
downloadAllowance
hasSentApplicationInstalledMessage
hasLaunchedApplication
allowedDownloadDomains
com.apple.background-asset-downloader-extension
BAInitialDownloadRestrictions
BADownloadAllowance
BADownloadDomainAllowList
com.apple.backgroundassets.application-identifier
com.apple.backgroundassets.localized-application-name
internalState
priority
downloadFailureError
uniqueIdentifier
applicationGroupIdentifier
expectedOutFileName
stagedDownloadedFileURL
resumeData
downloadCachePath
isRestrictedDownload
masqueradeIdentifier
Provided applicationGroupIdentifier must be a valid string.
The current app has no app groups it is a member of %@
%@.%@.%@
%@ (%p) - %@
%@ (%p) - %@
Failed
Created
Pausing
Paused
Waiting
Download Starting...
Download backgrounded and waiting on NSURLSession
Downloading
Finished
State: %@
Priority: %lu
Download error: %@
Unique identifier: %@
App Group identifier: %@
Application identifier: %@
Download start time: %@
Download cache path: %@
Staged file url: %@
URL session object: %@
URL download task: %@
Resume data: %p, %lu
Is restricted download: %@
Is foreground download: %@
%d.%@.worker
%d.%@.handler
v20@?0B8@"NSUUID"12
EXAppExtensionAttributes
NSExtension
com.apple.developer.icloud-services
CloudKit
com.apple.developer.icloud-container-identifiers
com.apple.BAAgentClientConnection.AuthChallengeWaiter
-[BAAgentClientConnection downloadIdentifier:didReceiveChallenge:authChallengeHandler:withCompletion:]_block_invoke_2
Client Connection
Client Identifier: %@
PID: %d
Is Client App: %@
Download %{public}@ is restricted, validating.
Download %{public}@ rejected based on domain check.
Download %{public}@ rejected as we are out of download allowance.
Download %{public}@ was invalidated with a failure in state: %ld.
Pausing download %{public}@ because we are on cellular.
Pausing download %{public}@ because our network is expensive.
Extension interrupted for identifier: %{public}@
Extension invalidated for identifier: %{public}@
Attempting to wakeup extension connection.
Fatal: Wakeup extension timed out.
Wakeup extension succeeded.
Fatal: Wakeup extension errored out.
Failed to send %s for: %{public}@ error: %@
Terminating connection to extension: %{public}@
Failed to take power assertion for rules engine.
Staged download url is nil.
Failed to load container for app group identifier: %@
Failed to move file with error: %@
%s called from client (%d) failed because the plugin could not be found / loaded.
Rejecting download (%{public}@ , %@) because queue (%{public}@) is full.
Requested foreground on download that does not appear to be scheduled.
Download: %{public}@
Client: %{public}@
Started listening for clients.
Started listening for xpc activity.
Connection to service: %{public}@ from pid:%{public}d has invalid service name.
Client connection accepted from pid:%{public}d
Client connection rejected (signing error or team-id mismatch) from pid:%{public}d
New SPI connection from pid:%{public}d
System connection accepted from pid:%{public}d
System connection from pid:%{public}d failed to init with error: %@
System connection from pid:%{public}d rejected due to lack of entitlement.
Rejecting talking to extension %@ because the background activity is not allowed.
Rejecting launching extension for %@ because it has already run too long.
Failed to get represented extension point with query: %s
Extension (%@) is not part of a application bundle. Failing.
Application bundle (%@) is not the same as the bundle id (%@). Failing.
Failed to get extension process: %s
Extension representation failed to generate XPC connection: %s
Extension representation failed to generate XPC connection with unknown error.
Rejected extension connection (%@) for mismiatched team id
failed to establish connection for extension (%@)
Event (%ld) dropped from client (%s) failed because background activity is not allowed.
%s called from client (%s) failed because the plugin could not be found / loaded.
Scheduled download identifier: %{public}@ for client: %{public}@
Dropping unknown unhandled event type in list: %@
Download did begin: %{public}@
Download did begin finished.
%s, Will not message extension for %@ because background activity is disabled.
Download did fail: %{public}@ with error: %{public}@
Added undelivered event: %@
Failed to notify anyone about failed download: %@
Download did fail done
Download did finish: %{public}@
Failed to stage download url for download: %{public}@ for client: %{public}@
Warning: No sandbox token issued for finished download: %@ URL: %@ for client: %@
Failed to clone download: %{public}@ for extension.
Failed to notify anyone about finished download: %@
Download did finish done.
Debug shutdwon called. Preparing to exit
Dumping debug agent state:
Allowed time for downloads: %@
**** Application State Info ****
**** Connection State Info  ****
**** Extension Connection State Info ****
**** Download Queue State Info ****
**** ---------------------- ****
**** ------------------------------- ****
Failed to deserialize application state: %{public}@
failed to open application state URL: %{public}@
Failed to load serialized application state with error: %@
Failed to deserialize download queues: %{public}@
failed to open download queue URL: %{public}@
Failed to load serialized downloads with error: %@
Failed to deserialize events file: %{public}@
failed to open deserialize events URL: %{public}@
Failed to load deserialize events with error: %@
Failed to serialize download queues: %{public}@
Failed to serialize application state: %{public}@
Serializing state and shutting down.
Clear state set, will clear state..
Failed to get power sources. Assume connected to power.
Failed to get power sources. Assume full battery.
A cursor was returned, this is unexpected for 1 result; is the operation hung? This is why.
CKRecordID: %@ returned an error: %@
Denying background activity for %@ background updates are disabled.
Denying background activity for %@ because device is in low power mode.
Denying background activity for %@ background activity for this app is disabled.
Application (%@) lacks background fetch entitlement. Will not use extension.
Application identifier (%@) is not valid Universal Type Identifier. Failing.
Dropping download because application identifier is invalid: %@
Failed to consume token: %@ for client: %@
Failed to get executable path from audit token.
Executable path from audit token is invalid or is of an empty length.
Unable to construct a SecTaskRef from client audit token.
Failed to get client application static code object, error OSStatus: %d
Failed to get client application code signing information, error OSStatus: %d
Code signed Info.plist is nil
Failed to get application record. Falling back to last component removal.
App-ified clientIdentifier is nil or 0 length
Code signed bundle identifier is nil
Application (%@) is not found in the LaunchServices database and cannot be used with BackgroundAssets.
Application (%@) is not registered with FrontBoardServices and cannot be used with BackgroundAssets.
Application (%@) is not trusted on this iOS device and cannot be used with BackgroundAssets. Trust State: %@
Client identifier (%@) is not valid Universal Type Identifier. Disconnecting.
Client is missing signing identifier, client must be signed with an identifier to use BackgroundAssets. %@
Agent
BAURLDownloadNSURLDelegateProtocol
BADownloadAgentProtocol
NSURLSessionDelegate
NSObject
NSURLSessionTaskDelegate
NSURLSessionDownloadDelegate
BADownloaderExtensionSyncProtocol
BADownloaderExtensionProxy
Private
BAExtensionRuntime
NSSecureCoding
NSCoding
BAAgentSystemXPCProtocol
BAAgentSystemConnection
VeryPrivate
BACloudKitDownload
BAURLDownload
BABlock
BABlockQueue
BABlockQueueManager
BADownloadQueue
BADownloadManagerDelegate
BAUtilities
BAAgentCore
NSXPCListenerDelegate
BAAgentDownloadRulesEngineDelegate
BAAgentKeyedUnarchiver
BAAgentDownloadRulesEngine
BACloudKitDownloadManager
BAUnhandledDownloadEvent
BAApplicationInfo
BACloudKitDownloadManagerDelegate
BAApplicationExtensionInfo
BAAgentConnection
BADownload
NSCopying
BAAgentKeyedArchiver
BAAgentClientXPCProtocol
BADownloadManagerSyncProtocol
BAAgentClientConnection
v16@0:8
B24@0:8@16
v32@0:8@16@24
v40@0:8@16@24@?32
v40@0:8@16@24@32
v56@0:8@16@24q32q40q48
v48@0:8@16@24q32q40
B24@0:8@"<BADownloadManagerDelegate>"16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@16
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v40@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24@"NSURL"32
v56@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24q32q40
v24@0:8@?16
v32@0:8@16@?24
v24@0:8@?<v@?B>16
v32@0:8@"BAApplicationExtensionInfo"16@?<v@?>24
v40@0:8@"NSURLAuthenticationChallenge"16@"BADownload"24@?<v@?q@"NSURLCredential">32
v32@0:8@"BADownload"16@?<v@?B>24
v48@0:8@"BADownload"16@"NSURL"24@"NSString"32@?<v@?B>40
@40@0:8@16@24@32
B40@0:8@16@24@?32
@24@0:8@16
v24@0:8Q16
v20@0:8B16
@"NSString"
@"NSObject<OS_dispatch_queue>"
@"NSXPCConnection"
@"BAApplicationInfo"
@"NSTimer"
@"_EXExtensionProcess"
B40@0:8@16^@24^@32
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
d16@0:8
@"NSDate"
v32@0:8@"NSDictionary"16@?<v@?>24
@32@0:8@16^@24
@56@0:8@16@24@32@40@48
@64@0:8@16@24@32@40@48@56
@96@0:8@16@24@32@40@48@56@64@72q80q88
q16@0:8
v24@0:8q16
@"CKContainerID"
@"CKQuery"
@"CKRecordZoneID"
@48@0:8@16@24@32q40
@"NSURLRequest"
@32@0:8@16@?24
B20@0:8B16
@?16@0:8
@"NSUUID"
@"NSObject<OS_dispatch_source>"
@24@0:8@?16
v32@0:8@?16@24
@"NSLock"
@"NSMutableOrderedSet"
@"NSMutableDictionary"
v48@0:8@16q24q32q40
v24@0:8@"BADownload"16
v48@0:8@"BADownload"16q24q32q40
v40@0:8@"BADownload"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v32@0:8@"BADownload"16@"NSError"24
v32@0:8@"BADownload"16@"NSURL"24
@32@0:8@16@24
B32@0:8@16^@24
@"<BADownloadManagerDelegate>"
@"NSMutableArray"
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v40@0:8q16@24@32
B40@0:8@16@24^@32
v32@0:8@16q24
v24@0:8B16B20
@"NSXPCListener"
@"BAAgentDownloadRulesEngine"
@"BAAgentCore"
v20@0:8i16
f16@0:8
^{__CFRunLoopSource=}16@0:8
v24@0:8^{__CFRunLoopSource=}16
I16@0:8
v20@0:8I16
i16@0:8
@"<BAAgentDownloadRulesEngineDelegate>"
^{__CFRunLoopSource=}
B24@0:8^@16
@"<BACloudKitDownloadManagerDelegate>"
@"BACloudKitDownload"
@"CKOperationConfiguration"
@"CKQueryOperation"
@"NSURL"
@32@0:8q16@24
@"BADownload"
B24@0:8Q16
@"NSArray"
@"BAExtensionRuntime"
v24@0:8@"NSError"16
v24@0:8@"NSURL"16
@24@0:8^{_NSZone=}16
@"NSError"
@"NSURLSession"
@"NSURLSessionDownloadTask"
@"NSData"
@"NSObject<OS_os_transaction>"
v24@0:8@?<v@?@"NSArray"@"NSError">16
v32@0:8@"BADownload"16@?<v@?B@"NSError">24
v32@0:8@"NSDate"16@?<v@?B@"NSError"@"NSUUID">24
v24@0:8@?<v@?@"NSError"@"NSUUID">16
v24@0:8@"NSUUID"16
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v24@0:8@"NSArray"16
v24@0:8@"NSString"16
v48@0:8@"NSString"16q24q32q40
v40@0:8@"NSString"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v40@0:8@"NSString"16@"NSError"24@?<v@?B>32
v48@0:8@"NSString"16@"NSURL"24@"NSString"32@?<v@?B>40
v48@0:8@16@24@?32@?40
@"BABlockQueue"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>20A241133</string>
<key>CFBundleDevelopmentRegion</key>
<string>en</string>
<key>CFBundleExecutable</key>
<string>backgroundassets.user</string>
<key>CFBundleIdentifier</key>
<string>com.apple.backgroundassets.user</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>backgroundassets.user</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>20A5303d</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.0</string>
<key>DTSDKBuild</key>
<string>20A5303d</string>
<key>DTSDKName</key>
<string>iphonesimulator16.0.internal</string>
<key>DTXcode</key>
<string>1400</string>
<key>DTXcodeBuild</key>
<string>14A6200i</string>
<key>MinimumOSVersion</key>
<string>16.0</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.backgroundassets.user</string>
<key>com.apple.QuartzCore.secure-mode</key>
<true/>
<key>com.apple.application-identifier</key>
<string>com.apple.backgroundassets.user</string>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudKit</string>
</array>
<key>com.apple.private.MobileContainerManager.otherIdLookup</key>
<true/>
<key>com.apple.private.cloudkit.masquerade</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.runningboard.launch_extensions</key>
<true/>
<key>com.apple.springboard.CFUserNotification</key>
<true/>
</dict>
</plist>
