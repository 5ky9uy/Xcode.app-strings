@(#)PROGRAM:backgroundassets.user  PROJECT:BackgroundAssets-1
removePowerAssertionAndActivity
dealloc
resumeData
setDelegate:
uniqueIdentifier
addPowerAssertionAndActivityWithIdentifier:
delegate
downloadDidBegin:
request
mutableCopy
scheme
caseInsensitiveCompare:
download:failedWithError:
applicationInfo
host
allowedDownloadDomains
containsObject:
allowedDownloadDomainWildcards
countByEnumeratingWithState:objects:count:
substringFromIndex:
hasSuffix:
setDownloadError:
downloadError
remainingDownloadAllowance
setIsForegroundDownload:
isForegroundDownload
defaultSessionConfiguration
setAllowsCellularAccess:
setAllowsExpensiveNetworkAccess:
setTimeoutIntervalForRequest:
setWaitsForConnectivity:
backgroundSessionConfigurationWithIdentifier:
set_allowsRetryForBackgroundDataTasks:
allowsCellularAccess
allowsExpensiveNetworkAccess
setNetworkServiceType:
applicationIdentifier
set_sourceApplicationBundleIdentifier:
copy
setRequest:
sessionWithConfiguration:delegate:delegateQueue:
setSession:
session
downloadTaskWithResumeData:
setDownloadTask:
downloadTask
downloadTaskWithRequest:
resume
setResumeData:
downloadDidPause:
cancelByProducingResumeData:
_cancelDownloadWithCompletionHandler:
cancel
download:finishedWithFileURL:
domain
isEqualToString:
code
download:didReceiveChallenge:completionHandler:
downloadCachePath
path
lastPathComponent
stringByAppendingPathComponent:
fileURLWithPath:
defaultManager
moveItemAtURL:toURL:error:
response
statusCode
absoluteString
numberWithInteger:
allHeaderFields
dictionaryWithObjectsAndKeys:
errorWithDomain:code:userInfo:
userInfo
objectForKey:
intValue
pauseDownloadWithCompletionHandler:
finishTasksAndInvalidate
consumeAllowanceAndReturnShouldStop:
download:didWriteBytes:totalBytesWritten:totalBytesExpectedToWrite:
startDownloadWithDelegate:
cancelDownloadSilentlyWithCompletionHandler:
cancelDownloadWithCompletionHandler:
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSession:downloadTask:didFinishDownloadingToURL:
URLSession:task:didCompleteWithError:
URLSession:downloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:
URLSession:downloadTask:didResumeAtOffset:expectedTotalBytes:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:didCreateTask:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
init
setExtensionConnection:
setExtensionProcess:
setApplicationInfo:
_baassets_validUTI
setIdentifier:
identifier
stringWithFormat:
UTF8String
setShutdownQueue:
wakeupForTokenWithReply:
downloadsForRequest:manifestURL:manifestToken:extensionInfo:completionHandler:
receivedAuthenticationChallenge:download:completionHandler:
extensionWillTerminate
backgroundDownload:failedWithError:completionHandler:
backgroundDownload:finishedWithSandboxToken:completionHandler:
interfaceWithProtocol:
setWithObjects:
setClasses:forSelector:argumentIndex:ofReply:
arrayWithObjects:count:
setWithArray:
extensionConnection
setRemoteObjectInterface:
sharedCore
extensionDisconnectedWithIdentifier:
setInterruptionHandler:
setInvalidationHandler:
remoteObjectProxyWithErrorHandler:
invalidate
exitTimer
willLaunchExtension
_startExitTimer
extendClientSandboxForStagedURL:allowWrites:
_sendingMessage
_checkForExit
synchronousRemoteObjectProxyWithErrorHandler:
exceptionWithName:reason:userInfo:
raise
fileSystemRepresentation
auditToken
stringWithCString:encoding:
_terminateConnection
shutdownQueue
setSentWillTerminateMessage:
extensionActiveCalls
setExtensionActiveCalls:
extensionRuntime
sentWillTerminateMessage
sentTerminatonMessage
setSentTerminatonMessage:
extensionProcess
fireDate
timeIntervalSinceNow
processIdentifier
initWithExtension:XPCConnection:applicationInfo:
requestDownloadsWithContentRequest:manifestURL:extensionInfo:
sendAuthenticationChallenge:download:completionHandler:
setExitTimer:
.cxx_destruct
_sentWillTerminateMessage
_sentTerminatonMessage
_identifier
_shutdownQueue
_extensionConnection
_applicationInfo
_exitTimer
_extensionProcess
_extensionActiveCalls
T@"NSObject<OS_dispatch_queue>",&,V_shutdownQueue
T@"NSXPCConnection",&,V_extensionConnection
T@"BAApplicationInfo",&,V_applicationInfo
T@"NSString",&,V_identifier
T@"NSTimer",&,V_exitTimer
T@"_EXExtensionProcess",&,V_extensionProcess
TQ,V_extensionActiveCalls
TB,V_sentWillTerminateMessage
TB,V_sentTerminatonMessage
mainRunLoop
port
addPort:forMode:
setPowerAssertionID:
setTransaction:
powerAssertionID
setApplicationInformationForRestrictedDownload:
setByAddingObjectsFromArray:
applicationGroupIdentifier
containerURLForSecurityApplicationGroupIdentifier:
URLByAppendingPathComponent:
fileExistsAtPath:isDirectory:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
removeItemAtURL:error:
stringByDeletingPathExtension
pathExtension
dictionaryWithObjects:forKeys:count:
syncTo:
cloneDownloadToFinalDestinationURL:error:
classesForSerialization
requestWithURL:cachePolicy:timeoutInterval:
UUID
UUIDString
initWithIdentifier:request:applicationGroupIdentifier:priority:
initWithCoder:
decodeIntegerForKey:
encodeInteger:forKey:
encodeWithCoder:
supportsSecureCoding
_applicationEvent
fileURLWithPath:isDirectory:
bundleWithURL:
localizedStringForKey:value:table:
date
initWithStartDate:
setStartDate:
decodeObjectOfClass:forKey:
startDate
setEndDate:
endDate
encodeObject:forKey:
timeIntervalSinceDate:
TB,R
elapsedTime
extensionExited
isMoreThan24HoursAgo
_startDate
_endDate
T@"NSDate",&,V_startDate
T@"NSDate",&,V_endDate
Td,R
initWithMessageOperation:
appBundleIdentifier
initWithAppBundleIdentifier:
_appBundleIdentifier
T@"NSString",R,N,V_appBundleIdentifier
initWithNSXPCConnection:error:
grantedInitialBackgroundActivityWithIdentifier:completionHandler:
applicationWasInstalledWithIdentifier:bundleURLPath:completionHandler:
applicationWasUpdatedWithIdentifier:bundleURLPath:completionHandler:
applicationShouldTriggerPeriodicWithIdentifier:bundleURLPath:completionHandler:
runDebugCommand:reply:
connection
setExportedInterface:
setExportedObject:
grantedInitialBackgroundActivityWithIdentifier:
handleApplicationEvent:identifier:bundleURLPath:
lowercaseString
count
_printDebugState
_debugShutdown
doPeriodicUpdateCheck
_setClearBeforeShutdown
objectAtIndex:
_debugDownloadTime:clear:
scannerWithString:
scanInt:
scanLocation
whitespaceAndNewlineCharacterSet
stringByTrimmingCharactersInSet:
length
applicationInfoForIdentifier:
_debugConsumeTime:
initWithIdentifier:recordType:expectedFieldKey:expectedFieldValue:assetKey:applicationGroupIdentifier:
defaultContainer
containerIdentifier
defaultRecordZone
zoneID
initWithIdentifier:recordType:expectedFieldKey:expectedFieldValue:assetKey:applicationGroupIdentifier:containerIdentifier:zoneID:databaseScope:priority:
predicateWithFormat:
initWithRecordType:predicate:
initPrivatelyWithApplicationGroupIdentifier:
setPriority:
initWithContainerIdentifier:environment:
setContainerID:
setQuery:
setAssetKey:
setZoneID:
setDatabaseScope:
setMasqueradeIdentifier:
containerID
query
assetKey
databaseScope
masqueradeIdentifier
copyWithZone:
initWithIdentifier:recordType:recordName:assetKey:applicationGroupIdentifier:
_containerID
_query
_assetKey
_zoneID
_databaseScope
_masqueradeIdentifier
T@"CKContainerID",&,N,V_containerID
T@"CKQuery",&,N,V_query
T@"NSString",&,N,V_assetKey
T@"CKRecordZoneID",&,N,V_zoneID
Tq,N,V_databaseScope
T@"NSString",&,N,V_masqueradeIdentifier
appendFormat:
initWithIdentifier:request:applicationGroupIdentifier:
_request
T@"NSURLRequest",&,V_request
token
blockFired
fireByTimer
block
initWithToken:block:
executeWithSuccessfulDequeue:
setFireByTimer:
_blockFired
_block
_token
_fireByTimer
T@?,R,C,N,V_block
T@"NSUUID",R,N,V_token
T@"NSObject<OS_dispatch_source>",&,V_fireByTimer
TB,R,N,V_blockFired
drain
blockQueue
addObject:
blockQueueLock
lock
__enqueue:
unlock
_dequeueNext
drainSpecificWithToken:
awaitingBlockCompletion
setAwaitingBlockCompletion:
enumerateObjectsUsingBlock:
removeObject:
removeAllObjects
initWithIdentifier:
enqueue:
enqueue:waitLimitDate:
consumeToken:
_increment
_decrement
queueRetainCount
_awaitingBlockCompletion
_queueRetainCount
_blockQueueLock
_blockQueue
T@"NSString",R,N,V_identifier
TQ,R,N,V_queueRetainCount
T@"NSLock",R,N,V_blockQueueLock
T@"NSMutableOrderedSet",R,N,V_blockQueue
TB,N,V_awaitingBlockCompletion
identifiersToBlockQueues
setObject:forKey:
removeObjectForKey:
blockQueueWithIdentifier:
invalidateBlockQueue:
_identifiersToBlockQueues
T@"NSMutableDictionary",R,N,V_identifiersToBlockQueues
unionSet:
addObjectsFromArray:
distantPast
setLastDownloadStartDate:
setDownloads:
setStagingDirectory:
stagingDirectory
removeItemAtPath:error:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
decodeObjectOfClasses:forKey:
lastDownloadStartDate
downloads
array
setApplicationIdentifier:
setDownloadCachePath:
state
priority
sortUsingComparator:
downloadStartDate
allDownloads
initWithFormat:
appendString:
initWithApplicationIdentifier:delegate:
scheduleDownload:withCompletionHandler:
startForegroundDownload:withCompletionHandler:
cancelDownload:withCompletionHandler:
cancelAllDownloadsWithCompletionHandler:
pauseAllForegroundDownloadsWithCompletionHandler:
startNextDownload
pauseAllDownloadsWithCompletionHandler:
numberOfActiveDownloads
numberOfWaitingDownloads
_lastDownloadStartDate
_delegate
_downloads
_stagingDirectory
T@"NSMutableArray",&,V_downloads
T@"NSDate",&,V_lastDownloadStartDate
T@"NSString",&,V_stagingDirectory
Tq,R
T@"NSArray",R
T@"<BADownloadManagerDelegate>",W,V_delegate
rangeOfString:options:
substringToIndex:
characterSetWithCharactersInString:
invertedSet
_baassets_stringByRemovingLastIdentifierComponent
_baassets_validUTIWithWildcard
messageOperation
classForMessageOperation:
setMessageOperation:
versionSupported
setVersionSupported:
unsupportedVersionFailureMessage
setUnsupportedVersionFailureMessage:
_versionSupported
_messageOperation
_unsupportedVersionFailureMessage
Tq,N,V_messageOperation
TB,N,V_versionSupported
T@"NSString",&,N,V_unsupportedVersionFailureMessage
setAsyncClientNotificationQueue:
setConnectionQueue:
setWorkQueue:
initWithCapacity:
setConnections:
setExtensionConnections:
setDownloadQueuesByClientIdentifier:
setApplicationState:
setConnectionReplyQueue:
setUnhandledDownloadEvents:
initWithDelegate:
setRulesEngine:
workQueue
_deserializeState
_pokeScheduler
defaultCenter
_backgroundActivityStateDidChange
addObserver:selector:name:object:
initWithMachServiceName:
setListener:
listener
connectionQueue
_setQueue:
setSpiListener:
spiListener
rulesEngine
serviceName
listener:shouldAcceptNewClientConnection:
listener:shouldAcceptNewSPIConnection:
clientIdentifier
_checkConnection:hasAllowedTeamIDForIdentifier:
_checkIdentifierHasExtension:
connections
callBlockWhenConnectionReady:onQueue:
valueForEntitlement:
boolValue
connectionReplyQueue
connectionInvalidated
_updateApplication:state:
extensionConnections
_connectionReplyQueueForIdentifier:
_downloaderExtensionForApplicationIdentifier:
_extensionIdentityForApplicationInfo:
extensionIdentityForApplicationInfo:
containingBundleRecord
initWithURL:requireValid:error:
groupContainerURLs
allKeys
intersectSet:
allObjects
extensionPointIdentifierQuery:
executeQueries:
bundleIdentifier
hasPrefix:
allowsBackgroundActivity
shouldLaunchExtension
setExtensionIdentity:
extensionProcessWithConfiguration:error:
newXPCConnectionWithError:
applicationState
_serializeApplicationState
grantApprovalForInitialBackgroundActivity
_initUniqueWithURL:
infoDictionary
bundleRecordWithBundleIdentifier:allowPlaceholder:error:
updateApplicationWithInfoDictionary:
updateApplicationInformationForIdentifier:bundleURLPath:
manifestURL
_applicationIdentifierAllowsBackgroundActivity:
appGroupsForApplicationInfo:
applicationInstalledWithUpdateInstall:
setHasSentApplicationInstalledMessage:
firstObject
scheduleDownload:forClientIdentifier:notifyQueue:completionBlock:
applicationLaunched
downloadQueuesByClientIdentifier
hasLaunchedApplication
permittedForInitialBackgroundActivity
_serializeDownloadQueues
userQuitTheApp
_downloadsInProgress
_scheduleDownloads
unhandledDownloadEvents
arrayWithCapacity:
download
_connectionsForApplicationIdentifier:
removeObjectsInArray:
type
eventError
allValues
compare:
sortedArrayUsingComparator:
syncDownloads:
downloadIdentifierDidBegin:
downloadIdentifierDidPause:
downloadIdentifier:didReceiveChallenge:authChallengeHandler:withCompletion:
downloadIdentifier:didWriteBytes:totalBytesWritten:totalBytesExpectedToWrite:
asyncClientNotificationQueue
downloadIdentifier:didFailWithError:wasHandled:
initWithEventType:download:error:
_serializeUndeliveredEvents
downloadIdentifierDidFinish:sandboxExtensionToken:wasHandled:
initWithApplicationInfo:
isValidTimeForDownloads
_pauseDownloads
shouldDoPeriodicCheck
applicationExtensionRecords
extensionPointRecord
applicationTeamIdentifier
setApplicationTeamIdentifier:
setDebugClearState:
URLForDirectory:inDomain:appropriateForURL:create:error:
_shutdownAgent
_deserializeApplicationList
_deserializeDownloadQueues
_deserializeUndeliveredEvents
extensionContainingApplicationList
dataWithContentsOfURL:
initForReadingFromData:error:
setDecodingFailurePolicy:
hasSentApplicationInstalledMessage
error
setAgentCore:
addEntriesFromDictionary:
setWithObject:
setByAddingObjectsFromSet:
initRequiringSecureCoding:
encodedData
writeToURL:options:error:
_serializeState
debugClearState
_clearState
setDebugValidityTimeOverride:
listener:shouldAcceptNewConnection:
downloadTimeValidityDidChange
connectionDisconnected:
downloaderExtensionForApplicationIdentifier:
handleApplicationLaunched:
downloadForIdentifier:forClientIdentifier:
downloadsForIdentifier:
startForegroundDownload:forClientIdentifier:completionBlock:
cancelDownload:forClientIdentifier:completionBlock:
updateApplication:state:
lastStartDate
setLastStartDate:
_debugClearState
_asyncClientNotificationQueue
_connectionQueue
_workQueue
_listener
_spiListener
_applicationState
_connections
_connectionReplyQueue
_unhandledDownloadEvents
_extensionConnections
_rulesEngine
_lastStartDate
_downloadQueuesByClientIdentifier
T@"NSObject<OS_dispatch_queue>",&,V_asyncClientNotificationQueue
T@"NSObject<OS_dispatch_queue>",&,V_connectionQueue
T@"NSObject<OS_dispatch_queue>",&,V_workQueue
T@"NSXPCListener",&,V_listener
T@"NSXPCListener",&,V_spiListener
T@"NSMutableArray",&,V_applicationState
T@"NSMutableArray",&,V_connections
T@"NSMutableDictionary",&,V_connectionReplyQueue
T@"NSMutableArray",&,V_unhandledDownloadEvents
T@"NSMutableDictionary",&,V_extensionConnections
T@"BAAgentDownloadRulesEngine",&,V_rulesEngine
T@"NSMutableDictionary",&,V_lastStartDate
T@"NSMutableDictionary",&,V_downloadQueuesByClientIdentifier
TB,V_debugClearState
setRestrictedDownloadSizeRemaining:
numberWithUnsignedLongLong:
agentCore
_agentCore
T@"BAAgentCore",W,V_agentCore
setRulesEngineWorkQueue:
setLastDownloadIsValidValue:
powerRunLoopSource
setPowerRunLoopSource:
rulesEngineWorkQueue
setDebugRuleValidity:
debugRuleValidity
isConnectedToPower
_setupXPCActivity
_setupPowerSourceMonitor
_takePowerAssertion
_dropPowerAssertion
lastDownloadIsValidValue
batteryLevel
_powerSourceHasChanged
networkingIsCheap
setNetworkingIsCheap:
_networkingIsCheap
_lastDownloadIsValidValue
_powerAssertionID
_debugRuleValidity
_powerRunLoopSource
_rulesEngineWorkQueue
T@"<BAAgentDownloadRulesEngineDelegate>",W,V_delegate
TB,V_networkingIsCheap
T^{__CFRunLoopSource=},V_powerRunLoopSource
TB,V_lastDownloadIsValidValue
T@"NSObject<OS_dispatch_queue>",&,V_rulesEngineWorkQueue
TI,V_powerAssertionID
Ti,V_debugRuleValidity
setDownload:
dictionary
setRecordErrors:
setResponseQueue:
setStateLock:
stateLock
recordErrors
setRecordFound:
setAssetFound:
setAssetURL:
setAssetSize:
initWithContainerID:
setContainer:
setDiscretionaryNetworkBehavior:
setQualityOfService:
setAutomaticallyRetryNetworkFailures:
setApplicationBundleIdentifierOverrideForContainerAccess:
setOperationConfiguration:
_newOperationQuery
setShouldFetchAssetContent:
database
_downloadFailedWithError:
initWithCursor:
addOperation:
recordFound
enumerateKeysAndObjectsUsingBlock:
assetFound
_consumeAvailableDownloadSize
_downloadActualAsset
setQueryCompletionBlock:
size
setRecordMatchedBlock:
setCurrentOperation:
cancelDownload
responseQueue
downloadDidPause
currentOperation
downloadFailedWithError:
downloadSucceededWithURL:
assetSize
assetURL
_downloadSucceededWithURL:
fileURL
initWithQuery:
operationConfiguration
setConfiguration:
container
privateCloudDatabase
sharedCloudDatabase
publicCloudDatabase
setDatabase:
setDesiredKeys:
setResultsLimit:
initWithDownload:withDelegate:
startDownloadWithError:
pauseDownload
_recordFound
_assetFound
_download
_responseQueue
_stateLock
_operationConfiguration
_currentOperation
_recordErrors
_assetSize
_assetURL
T@"<BACloudKitDownloadManagerDelegate>",W,N,V_delegate
T@"BACloudKitDownload",W,N,V_download
T@"NSObject<OS_dispatch_queue>",&,N,V_responseQueue
T@"NSLock",&,N,V_stateLock
T@"CKOperationConfiguration",&,N,V_operationConfiguration
T@"CKQueryOperation",&,N,V_currentOperation
T@"NSMutableDictionary",&,N,V_recordErrors
TB,N,V_recordFound
TB,N,V_assetFound
TQ,N,V_assetSize
T@"NSURL",&,N,V_assetURL
unsignedIntegerValue
messageVersion
numberWithUnsignedInteger:
archivedDataWithRootObject:requiringSecureCoding:error:
archivedRepresentationWithError:
setMessageVersion:
_messageVersion
TQ,N,V_messageVersion
setType:
setEventError:
containsValueForKey:
typeString
_type
_eventError
Tq,V_type
T@"BADownload",&,V_download
T@"NSError",&,V_eventError
initWithSuiteName:
sharedConnection
isAutomaticAppUpdatesAllowed
processInfo
isLowPowerModeEnabled
executeQuery:
entitlementNamed:ofClass:
UIBackgroundModes
initWithIdentifier:applicationTeamIdentifier:
setAmountDownloaded:
setDownloadAllowance:
setPermittedForInitialBackgroundActivity:
setHasLaunchedApplication:
setExtensionRuntimeEvents:
setLastPeriodicCheckTime:
setLastApplicationLaunchTime:
setAllowedDownloadDomains:
setAllowedDownloadDomainWildcards:
setManifestURL:
setAppInfoLock:
appInfoLock
setName:
unsignedLongLongValue
decodeBoolForKey:
_populateAllowedDomainInfoWithArray:
amountDownloaded
downloadAllowance
encodeBool:forKey:
lastApplicationLaunchTime
lastPeriodicCheckTime
serializableAllowedDomainInfo
extensionRuntimeEvents
setAppWasLastForceQuit:
URLWithString:
_remainingDownloadAllowance
appWasLastForceQuit
applicationForIdentifierAllowsBackgroundActivity:
currentRuntime
setCurrentRuntime:
dateWithTimeIntervalSinceNow:
arrayByAddingObjectsFromArray:
donePeriodicCheck
_hasSentApplicationInstalledMessage
_hasLaunchedApplication
_permittedForInitialBackgroundActivity
_appWasLastForceQuit
_applicationIdentifier
_lastPeriodicCheckTime
_lastApplicationLaunchTime
_applicationTeamIdentifier
_allowedDownloadDomains
_allowedDownloadDomainWildcards
_manifestURL
_amountDownloaded
_downloadAllowance
_appInfoLock
_extensionRuntimeEvents
_currentRuntime
T@"NSString",&,V_applicationIdentifier
TQ,V_amountDownloaded
TQ,V_downloadAllowance
T@"NSDate",&,V_lastPeriodicCheckTime
TB,V_permittedForInitialBackgroundActivity
TB,V_hasLaunchedApplication
TB,V_appWasLastForceQuit
T@"NSDate",&,V_lastApplicationLaunchTime
T@"NSLock",&,V_appInfoLock
T@"NSArray",&,V_allowedDownloadDomains
T@"NSArray",&,V_allowedDownloadDomainWildcards
T@"NSURL",&,V_manifestURL
T@"NSMutableArray",&,V_extensionRuntimeEvents
T@"BAExtensionRuntime",&,V_currentRuntime
TB,V_hasSentApplicationInstalledMessage
T@"NSString",&,V_applicationTeamIdentifier
setUniqueIdentifier:
setDownloadManager:
downloadManager
restrictedDownloadSizeRemaining
_restrictedDownloadSizeRemaining
T@"NSNumber",&,V_restrictedDownloadSizeRemaining
setConnection:
_setupConnection
_connection
T@"NSXPCConnection",&,V_connection
versionAllowed
failureReason
initWithVersionAllowed:failureExplanation:
_versionAllowed
_failureReason
TB,R,N,V_versionAllowed
T@"NSString",R,N,V_failureReason
integerValue
setApplicationGroupIdentifier:
allocWithZone:
setState:
bytes
setDownloadStartDate:
transaction
_isForegroundDownload
_priority
_internalState
_state
_uniqueIdentifier
_applicationGroupIdentifier
_expectedOutFileName
_stagedDownloadedFileURL
_downloadStartDate
_downloadCachePath
_session
_downloadTask
_resumeData
_downloadError
_transaction
Tq,N,V_state
Tq,V_priority
T@"NSString",&,N,V_identifier
T@"NSString",&,N,V_uniqueIdentifier
T@"NSString",&,V_applicationGroupIdentifier
T@"NSDate",&,V_downloadStartDate
T@"NSString",&,V_downloadCachePath
T@"NSURLSession",&,V_session
T@"NSURLSessionDownloadTask",&,V_downloadTask
T@"NSData",&,V_resumeData
T@"NSError",&,V_downloadError
TB,V_isForegroundDownload
T@"NSObject<OS_os_transaction>",&,V_transaction
currentDownloads:
scheduleDownload:reply:
performWithExclusiveControlBeforeDate:handler:
performWithExclusiveControlWithHandler:
exclusiveControlExitedWithToken:
startForegroundDownload:reply:
cancelDownload:reply:
applicationStateDidChange:
setIsActive:
setClientWorkQueue:
setClientHandlerQueue:
clientWorkQueue
_validateAndSetClientIdentifier
setExclusiveAccessBlockQueue:
clientHandlerQueue
removeDownloadIdentifier:
downloadIdentifier:didReceiveChallenge:authChallengeHandler:
lastExclusiveAccessBlockToken
exclusiveAccessBlockQueue
connectionIsValid
_entitledForCloudKitWithDownload:outError:
isApplication
isActive
setLastExclusiveAccessBlockToken:
stringWithUTF8String:
bundleRecordForAuditToken:error:
setClientIdentifier:
setIsApplication:
applicationProxyForIdentifier:
initWithApplicationProxy:
unauthoritativeTrustState
setSigningIdentifier:
signingIdentifier
setConnectionIsValid:
remoteObjectProxy
_isApplication
_isActive
_connectionIsValid
_clientIdentifier
_clientHandlerQueue
_clientWorkQueue
_signingIdentifier
_exclusiveAccessBlockQueue
_lastExclusiveAccessBlockToken
T@"NSObject<OS_dispatch_queue>",&,V_clientHandlerQueue
T@"NSObject<OS_dispatch_queue>",&,V_clientWorkQueue
TB,V_isApplication
TB,V_isActive
TB,V_connectionIsValid
T@"NSString",&,V_clientIdentifier
T@"NSString",&,V_signingIdentifier
T@"BABlockQueue",&,V_exclusiveAccessBlockQueue
T@"NSUUID",&,V_lastExclusiveAccessBlockToken
https
v16@?0@"NSData"8
HTTP Status
HTTP Headers
com.apple.backgroundassets.extension.%@.shutdown_queue
v8@?0
v16@?0@"NSError"8
v12@?0B8
-[BADownloaderExtensionProxy requestDownloadsWithContentRequest:manifestURL:extensionInfo:]
-[BADownloaderExtensionProxy requestDownloadsWithContentRequest:manifestURL:extensionInfo:]_block_invoke
-[BADownloaderExtensionProxy sendAuthenticationChallenge:download:completionHandler:]_block_invoke
v24@?0q8@"NSURLCredential"16
-[BADownloaderExtensionProxy extensionWillTerminate]_block_invoke
-[BADownloaderExtensionProxy backgroundDownload:failedWithError:completionHandler:]_block_invoke
-[BADownloaderExtensionProxy backgroundDownload:finishedWithSandboxToken:completionHandler:]_block_invoke
wakeupForTokenWithReply should never be called on the proxy object, it is for internal use only
Extension Proxy
Identifier: %@
PID: %d
Extension Termination Time: %@ (%.2lf seconds remaining)
startDownloadWithDelegate is not implemented on BADownload as it is abstract.
pauseDownloadWithCompletionHandler is not implemented on BADownload as it is abstract.
cancelDownloadWithCompletionHandler is not implemented on BADownload as it is abstract.
cancelDownloadSilentlyWithCompletionHandler is not implemented on BADownload as it is abstract.
PreventUserIdleSystemSleep
Downloading - %@
Library/Caches
%@-%ld.%@
SourceURL
DestURL
%@.Manifest-%@
applicationEvent
com.apple.backgroundassets.error
/System/Library/Frameworks/BackgroundAssets.framework
BAError
startDate
endDate
BAApplicationIdentifier
BAAgentSystemConnectionErrorDomain
Invalid application identifier supplied: %@
command
arguments
state
shutdown
force_periodic
reset
downloads-allowed
clear
consume-extension-time
System Connection
PID: %d
Non BAURLDownload passed to syncTo for BAURLDownload
BUG IN CLIENT OF BackgroundAssets: BACloudKitDownload cannot be constructed using -init.
Name
expectedFieldKey must be a valid string.
expectedFieldValue cannot be passed in as nil.
expectedFieldValue must be of type: NSString, NSNumber, NSDate, NSData, or NSArray.
%@ == %%@
NSString *  must be a valid unique string.
Provided query must be a valid CKQuery.
Provided assetKey must be a valid string.
Provided containerIdentifier must be a valid string.
Provided CKRecordZoneID must be a valid object.
com.apple.developer.icloud-container-environment
production
BACloudKitDownload_File_%@
BACKD.ContainerID
BACKD.query
BACKD.assetKey
BACKD.zoneID
BACKD.databaseScope
masqueradeIdentifier
BUG IN CLIENT OF BackgroundAssets: BAURLDownload cannot be constructed using -init.
request must be a URLRequest.
request must have a valid URL.
request can only download over HTTPS.
request must be secure coding compliant.
identifier can not be nil
identifier must be a string.
request
URL: %@
com.apple.backgroundassets
system
client_connection
download
v32@?0@"BABlock"8Q16^B24
BABlockQueue retain count is being decremented past 0.
Caller invoked invalidateBlockQueue on BABlockQueueManager with an object that was not a BABlockQueue.
com.apple.backgroundassets.downloadstaging/%@
identifier
lastDownloadStartDate
downloads
q24@?0@"BADownload"8@"BADownload"16
%@ (%p) - %lu Downloads {
%@ (%p)
Application Identifier: %@
Downloads (%lu): {
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-.
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-.*
BAServerMessageOperation
com.apple.backgroundassets.system
com.apple.backgroundassets.appstore
kKeepAppsUpToDateEnabledChangedNotification
com.apple.backgroundassets.agentcore.clientnotification.async
com.apple.backgroundassets.agentcore.connectionqueue
com.apple.backgroundassets.agentcore.workqueue
baagent.redeliverevents
q24@?0@"BADownloadQueue"8@"BADownloadQueue"16
-[BAAgentCore download:failedWithError:]_block_invoke
-[BAAgentCore download:finishedWithFileURL:]_block_invoke
ApplicationState.bin
DownloadQueues.bin
UndeliveredEvents.bin
baagent.deserializestate
Application State
Queues
Undelivered Events
baagent.serializestate
baagent.serializestate.downloadqueues
baagent.serializestate.applicationstates
baagent.serializestate.undeliveredevents
com.apple.backgroundassets.%@.reply
com.apple.backgroundassets.rulesengine
Power Source State
AC Power
Current Capacity
com.apple.backgroundassets.periodic_check
v16@?0@"NSObject<OS_xpc_object>"8
Background assets - rules engine
com.apple.BACloudKitDownloadManager.ResponseQueue
v32@?0@"CKRecordID"8@"NSError"16^B24
v24@?0@"CKQueryCursor"8@"NSError"16
v32@?0@"CKRecordID"8@"CKRecord"16@"NSError"24
BAMessageVersion
BUG IN BackgroundAssets: BAUnhandledDownloadEvent initialized with a failure event but a nil error.
type
eventError
BUG IN BackgroundAssets: BAUnhandledDownloadEvent initialized from coder as a failure event but with a nil error.
Download Finished
Download Failed
Unknown
Event: %@ - Error %@ - Download %@
Event: %@ - Download %@
com.apple.mt
KeepAppsUpToDateAppList
fetch
%@ App Info Lock
extensionRuntimeEvents
Application Identifier: %@
Allowed Initital Download Amount: %llu
Amount Downloaded: %llu
Has Run Installed: %@
Allowed Domains: %@
Last Check Time: %@
App Has Been Launched: %@
Last Launch Time: %@
Extension Runtime In Last 24h: %lf
BACloudKitDownload.%@.%@
BUG IN CLIENT OF BackgroundAssets: BAAppExtensionInfo cannot be constructed using -init.
restrictedDownloadSizeRemaining
com.apple.backgroundassets.user
com.apple.developer.team-identifier
applicationIdentifier
applicationTeamIdentifier
amountDownloaded
downloadAllowance
permittedForInitialBackgroundActivity
hasSentApplicationInstalledMessage
hasLaunchedApplication
lastApplicationLaunchTime
lastPeriodicCheckTime
allowedDownloadDomains
manifestURL
com.apple.background-asset-downloader-extension
BAManifestURL
BAInitialDownloadRestrictions
BADownloadAllowance
BADownloadDomainAllowList
BAServerVersionSupported
BAFailureReason
BAClientMessageOperation
BUG IN CLIENT OF BackgroundAssets: BADownload cannot be constructed using -init.
internalState
priority
uniqueIdentifier
applicationGroupIdentifier
expectedOutFileName
stagedDownloadedFileURL
downloadFailureError
resumeData
downloadCachePath
isRestrictedDownload
Provided applicationGroupIdentifier must be a valid string.
%@.%@.%@
%@ (%p) - %@
%@ (%p) - %@
Silently Failed
Failed
Created
Pausing
Paused
Waiting
Download Starting...
Download backgrounded and waiting on NSURLSession
Downloading
Finished
State: %@
Priority: %lu
Unique identifier: %@
App Group identifier: %@
Staged file url: %@
Application identifier: %@
Download error: %@
Download start time: %@
Download cache path: %@
URL session object: %@
URL download task: %@
Resume data: %p, %lu
Is restricted download: %@
Is foreground download: %@
%d.%@.worker
%d.%@.handler
v20@?0B8@"NSUUID"12
EXAppExtensionAttributes
NSExtension
com.apple.developer.icloud-services
CloudKit
com.apple.developer.icloud-container-identifiers
com.apple.BAAgentClientConnection.AuthChallengeWaiter
-[BAAgentClientConnection downloadIdentifier:didReceiveChallenge:authChallengeHandler:withCompletion:]_block_invoke_2
-[BAAgentClientConnection downloadIdentifier:didFailWithError:wasHandled:]_block_invoke
-[BAAgentClientConnection downloadIdentifierDidFinish:sandboxExtensionToken:wasHandled:]_block_invoke
Client Connection
Client Identifier: %@
PID: %d
Is Client App: %@
Download %{public}@ is restricted, validating.
Download %{public}@ rejected based on domain check.
Download %{public}@ rejected as we are out of download allowance.
Download %{public}@ was invalidated with a silent failure in internal state: %ld.
Download %{public}@ was invalidated with a failure in internal state: %ld.
Pausing download %{public}@ because we are on cellular.
Pausing download %{public}@ because our network is expensive.
Extension interrupted for identifier: %{public}@
Extension invalidated for identifier: %{public}@
Attempting to wakeup extension connection.
Fatal: Extension failed to send wakeup message. %@
Fatal: Wakeup extension timed out.
Wakeup extension succeeded.
Fatal: Wakeup extension errored out.
Failed in %s for: %{public}@. Unable to extend sandbox for manifest URL: %{public}@
Failed to send %s for: %{public}@ error: %@
Terminating connection to extension: %{public}@
Failed to take power assertion for rules engine.
Failed to load container for app group identifier: %@
More than 1440m is nonsense as time resets every day.
More than 24h is nonsense as time resets every day.
Invalid unit string: %@
Should be 'm' or 'h'.
Added %d seconds to %@
Unable to get applicaiton runtime info for identifier: %@
Rejecting download (%{public}@ , %@) because it is already scheduled in (%{public}@).
Requested foreground on download that does not appear to be scheduled.
Download: %{public}@
Client: %{public}@
Started listening for clients.
Started listening for xpc activity.
Connection to service: %{public}@ from pid:%{public}d has invalid service name.
Client connection accepted from pid:%{public}d
Client connection rejected (no extension, signing error or team-id mismatch) from pid:%{public}d
New SPI connection from pid:%{public}d
System connection accepted from pid:%{public}d
System connection from pid:%{public}d failed to init with error: %@
System connection from pid:%{public}d rejected due to lack of entitlement.
Failed to get represented extension point with queries: %s
Extension (%@) is not part of a application bundle. Failing.
Application bundle (%@) is not the same as the bundle id (%@). Failing.
Rejecting talking to extension %@ because the background activity is not allowed.
Rejecting launching extension for %@ because it has already run too long.
Rejecting launch of extension for %@ because an extension identity could not be created.
Failed to get extension process: %s
Extension representation failed to generate XPC connection: %s
Extension representation failed to generate XPC connection with unknown error.
Rejected extension connection (%@) for mismiatched team id
failed to establish connection for extension (%@)
Unable to update application info. (bundle identifier: %@) %@
Unable to update application info, bundle record returned is not an LSApplicationRecord. (bundle identifier: %@)
Unable to update application info, no info dictionary could be found. (bundle identifier: %@)
Event (%ld) dropped for client (%s) failed because client Info dictionary is not accessible or valid.
Event (%ld) dropped for client (%s) failed because client Info dictionary is missing its '%@' key.
Event (%ld) dropped for client (%s) failed because background activity is not allowed.
Event (%ld) dropped for client (%s) failed because the app and extension do not share any application groups.
Event (%ld) for client (%s) is scheduling manifest for download.
Event (%ld) failed for client (%s) because the manifest URL (%@) could not be enqueued. %@
Scheduled download identifier: %{public}@ for client: %{public}@
Dropping unknown unhandled event type in list: %@
Download did begin: %{public}@
Download did begin finished: %{public}@
Download did pause: %{public}@
Download did pause finished: %{public}@
Timed out messaging client for '%@' to answer auth challenge for download: %@
Cannot message extension for '%@' to answer auth challenge, canceling challenge for download: %@
Download did fail: %{public}@ with error: %{public}@
Added undelivered event: %@
Failed to notify anyone about failed download: %@
%s, Will not message extension for %@ because background activity is disabled.
Download did fail done
Download did finish: %{public}@
Warning: No sandbox token issued for finished download: %@ URL: %@ for client: %@
Warning: No sandbox token issued for extension for finished download: %@ URL: %@ for client: %@
Failed to notify extension about failed manifest download: %@
Client failed to enqueue requested downloads for manifest: %@ with content request: %ld
Extension handled the manifest download, removing download. %@
Failed to notify extension about finished download: %@
Extension handled the background download, removing download. %@
Failed to find extension for installed application, removing download. %@
Result was handled by a client of BADownloadManager, removing download. %@
Download did finish done.
Failed to get bundle record for identifier: %@ error: %@
Bundle for %@ does not have a extension record. Blocking.
Bundle for %@ does not have a downloader extension. Blocking.
Bundle for %@ is not application or extension. Blocking.
Debug shutdown called. Preparing to exit
Dumping debug agent state:
Allowed time for downloads: %@
**** Application State Info ****
**** Connection State Info  ****
**** Extension Connection State Info ****
**** Download Queue State Info ****
**** ---------------------- ****
**** ------------------------------- ****
Failed to deserialize application state: %{public}@
failed to open application state URL: %{public}@
Failed to load serialized application state with error: %@
Failed to deserialize download queues: %{public}@
failed to open download queue URL: %{public}@
Failed to load serialized downloads with error: %@
Failed to deserialize events file: %{public}@
failed to open deserialize events URL: %{public}@
Failed to load deserialize events with error: %@
Failed to serialize download queues: %{public}@
Failed to serialize application state: %{public}@
Serializing state and shutting down.
Clear state set, will clear state..
Requested background activity for application identifier that is not known to BAAgentCore. %@
Failed to get power sources. Assume connected to power.
Failed to get power sources. Assume full battery.
A cursor was returned, this is unexpected for 1 result; is the operation hung? This is why.
CKRecordID: %@ returned an error: %@
Denying background activity for %@ background updates are disabled.
Denying background activity for %@ because device is in low power mode.
Denying background activity for %@ background activity for this app is disabled.
Application (%@) lacks background fetch entitlement. Will not use extension.
Application identifier (%@) is not valid Universal Type Identifier. Failing.
Granting approval for initial background activity for: %@
Application was updated: %@
Application was installed: %@
Background activity denied for (%@) because the app was last force quit.
Background activity denied for (%@) because the user has not launched the app.
Dropping download because application identifier is invalid: %@
Failed to consume token: %@ for client: %@
Failed to get executable path from audit token.
Executable path from audit token is invalid or is of an empty length.
Unable to construct a SecTaskRef from client audit token.
Failed to get client application static code object, error OSStatus: %d
Failed to get client application code signing information, error OSStatus: %d
Code signed Info.plist is nil
Failed to lookup LSApplicationExtensionRecord for audit token.
Failed to get application record. Falling back to last component removal.
App-ified clientIdentifier is nil or 0 length
Code signed bundle identifier is nil
Application (%@) is not found in the LaunchServices database and cannot be used with BackgroundAssets.
Application (%@) is not registered with FrontBoardServices and cannot be used with BackgroundAssets.
Application (%@) is not trusted on this iOS device and cannot be used with BackgroundAssets. Trust State: %@
Client identifier (%@) is not valid Universal Type Identifier. Disconnecting.
Client is missing signing identifier, client must be signed with an identifier to use BackgroundAssets. %@
Agent
BAURLDownloadNSURLDelegateProtocol
BADownloadAgentProtocol
NSURLSessionDelegate
NSObject
NSURLSessionTaskDelegate
NSURLSessionDownloadDelegate
BADownloaderExtensionSyncProtocol
BADownloaderExtensionProxy
VeryPrivate
BAManifestDownload
BAExtensionRuntime
NSSecureCoding
NSCoding
BADeveloperDebugClientMessageVersionCheck
BADeveloperDebugClientMessageApplicationInstalled
BADeveloperDebugClientMessageApplicationUpdated
BADeveloperDebugClientMessageApplicationPeriodicCheck
BAAgentSystemXPCProtocol
BAAgentSystemConnection
BACloudKitDownload
NSCopying
BAURLDownload
BABlock
BABlockQueue
BABlockQueueManager
BADownloadQueue
BADownloadManagerDelegate
BAAgentUtilities
BAUtilities
BADeveloperDebugServerMessage
BAAgentCore
NSXPCListenerDelegate
BAAgentDownloadRulesEngineDelegate
BAAgentKeyedUnarchiver
BAAgentDownloadRulesEngine
BACloudKitDownloadManager
BADeveloperDebugMessage
BAUnhandledDownloadEvent
BAApplicationInfo
BACloudKitDownloadManagerDelegate
BAAppExtensionInfo
BAAgentConnection
BADeveloperDebugServerMessageVersionCheck
BADeveloperDebugClientMessage
BADownload
BAAgentKeyedArchiver
BAAgentClientXPCProtocol
BADownloadManagerSyncProtocol
BAAgentClientConnection
v16@0:8
B24@0:8@16
v24@0:8@?16
v32@0:8@16@24
v40@0:8@16@24@?32
v40@0:8@16@24@32
v56@0:8@16@24q32q40q48
v48@0:8@16@24q32q40
B24@0:8@"<BADownloadManagerDelegate>"16
v24@0:8@?<v@?>16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@16
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v40@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24@"NSURL"32
v56@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24q32q40
v56@0:8q16@24@32@40@?48
v24@0:8@?<v@?B>16
v56@0:8q16@"NSURL"24@"NSString"32@"BAAppExtensionInfo"40@?<v@?>48
v40@0:8@"NSURLAuthenticationChallenge"16@"BADownload"24@?<v@?q@"NSURLCredential">32
v40@0:8@"BADownload"16@"NSError"24@?<v@?B>32
v40@0:8@"BADownload"16@"NSString"24@?<v@?B>32
@40@0:8@16@24@32
B40@0:8q16@24@32
B40@0:8@16@24@?32
@28@0:8@16B24
v24@0:8Q16
v20@0:8B16
@"NSString"
@"NSObject<OS_dispatch_queue>"
@"NSXPCConnection"
@"BAApplicationInfo"
@"NSTimer"
@"_EXExtensionProcess"
B32@0:8^@16^@24
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
d16@0:8
@"NSDate"
v32@0:8@16@?24
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v40@0:8@"NSString"16@"NSURL"24@?<v@?B@"NSError">32
v32@0:8@"NSDictionary"16@?<v@?>24
@32@0:8@16^@24
@24@0:8^{_NSZone=}16
@56@0:8@16@24@32@40@48
@64@0:8@16@24@32@40@48@56
@96@0:8@16@24@32@40@48@56@64@72q80q88
q16@0:8
v24@0:8q16
@"CKContainerID"
@"CKQuery"
@"CKRecordZoneID"
@48@0:8@16@24@32q40
@"NSURLRequest"
@32@0:8@16@?24
B20@0:8B16
@?16@0:8
@"NSUUID"
@"NSObject<OS_dispatch_source>"
@24@0:8@?16
v32@0:8@?16@24
@"NSLock"
@"NSMutableOrderedSet"
@"NSMutableDictionary"
v48@0:8@16q24q32q40
v24@0:8@"BADownload"16
v48@0:8@"BADownload"16q24q32q40
v40@0:8@"BADownload"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v32@0:8@"BADownload"16@"NSError"24
v32@0:8@"BADownload"16@"NSURL"24
@32@0:8@16@24
@"<BADownloadManagerDelegate>"
@"NSMutableArray"
#24@0:8q16
@24@0:8q16
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v40@0:8q16@24@32
v32@0:8@16q24
v24@0:8B16B20
@"NSXPCListener"
@"BAAgentDownloadRulesEngine"
@"BAAgentCore"
v20@0:8i16
f16@0:8
^{__CFRunLoopSource=}16@0:8
v24@0:8^{__CFRunLoopSource=}16
I16@0:8
v20@0:8I16
i16@0:8
@"<BAAgentDownloadRulesEngineDelegate>"
^{__CFRunLoopSource=}
B24@0:8^@16
@"<BACloudKitDownloadManagerDelegate>"
@"BACloudKitDownload"
@"CKOperationConfiguration"
@"CKQueryOperation"
@"NSURL"
@24@0:8^@16
@40@0:8q16@24@32
@"BADownload"
@"NSError"
B24@0:8Q16
v24@0:8d16
@"NSArray"
@"BAExtensionRuntime"
v24@0:8@"NSError"16
v24@0:8@"NSURL"16
@"NSNumber"
@28@0:8B16@20
@"NSURLSession"
@"NSURLSessionDownloadTask"
@"NSData"
@"NSObject<OS_os_transaction>"
v24@0:8@?<v@?@"NSArray"@"NSError">16
v32@0:8@"BADownload"16@?<v@?B@"NSError">24
v32@0:8@"NSDate"16@?<v@?B@"NSError"@"NSUUID">24
v24@0:8@?<v@?B@"NSError"@"NSUUID">16
v24@0:8@"NSUUID"16
v24@0:8@"NSArray"16
v24@0:8@"NSString"16
v48@0:8@"NSString"16q24q32q40
v40@0:8@"NSString"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v40@0:8@"NSString"16@"NSError"24@?<v@?B>32
v40@0:8@"NSString"16@"NSString"24@?<v@?B>32
B32@0:8@16^@24
v48@0:8@16@24@?32@?40
@"BABlockQueue"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>20A241133</string>
<key>CFBundleDevelopmentRegion</key>
<string>en</string>
<key>CFBundleExecutable</key>
<string>backgroundassets.user</string>
<key>CFBundleIdentifier</key>
<string>com.apple.backgroundassets.user</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>backgroundassets.user</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>14A5270i</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.1</string>
<key>DTSDKBuild</key>
<string>20B43</string>
<key>DTSDKName</key>
<string>iphonesimulator16.1.internal</string>
<key>DTXcode</key>
<string>1400</string>
<key>DTXcodeBuild</key>
<string>14A5270i</string>
<key>MinimumOSVersion</key>
<string>16.1</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.backgroundassets.user</string>
<key>com.apple.QuartzCore.secure-mode</key>
<true/>
<key>com.apple.application-identifier</key>
<string>com.apple.backgroundassets.user</string>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudKit</string>
</array>
<key>com.apple.private.MobileContainerManager.otherIdLookup</key>
<true/>
<key>com.apple.private.cloudkit.masquerade</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.network.socket-delegate</key>
<true/>
<key>com.apple.private.nsurlsession.impersonate</key>
<true/>
<key>com.apple.runningboard.launch_extensions</key>
<true/>
<key>com.apple.springboard.CFUserNotification</key>
<true/>
</dict>
</plist>
@(#)PROGRAM:backgroundassets.user  PROJECT:BackgroundAssets-1
addPort:forMode:
downloadTaskWithRequest:
timeIntervalSinceNow
scheme
isEqualToString:
addOperation:
port
container
auditToken
removeItemAtPath:error:
timeIntervalSinceDate:
setRemoteObjectInterface:
appendString:
host
whitespaceAndNewlineCharacterSet
setRecordMatchedBlock:
errorWithDomain:code:userInfo:
addObserver:selector:name:object:
synchronousRemoteObjectProxyWithErrorHandler:
appendFormat:
mainRunLoop
isAutomaticAppUpdatesAllowed
error
sortedArrayUsingComparator:
addObjectsFromArray:
removeAllObjects
cancelByProducingResumeData:
scannerWithString:
lowercaseString
dateWithTimeIntervalSinceNow:
hasSuffix:
setTimeoutIntervalForRequest:
sortUsingComparator:
URLWithString:
enumerateObjectsUsingBlock:
extensionProcessWithConfiguration:error:
addObject:
remoteObjectProxyWithErrorHandler:
size
valueForEntitlement:
enumerateKeysAndObjectsUsingBlock:
remoteObjectProxy
lock
scanLocation
setApplicationBundleIdentifierOverrideForContainerAccess:
initWithFormat:
date
setQueryCompletionBlock:
addEntriesFromDictionary:
setConfiguration:
substringToIndex:
domain
cancel
hasPrefix:
extensionPointRecord
scanInt:
localizedStringForKey:value:table:
entitlementNamed:ofClass:
invertedSet
setInvalidationHandler:
substringFromIndex:
absoluteString
stringWithUTF8String:
database
userInfo
arrayWithObjects:count:
setInterruptionHandler:
pathExtension
bytes
setQualityOfService:
extensionPointIdentifierQuery:
distantPast
URLByAppendingPathComponent:
dataWithContentsOfURL:
arrayWithCapacity:
path
bundleWithURL:
stringWithFormat:
arrayByAddingObjectsFromArray:
UTF8String
dictionaryWithObjectsAndKeys:
UUID
allowsExpensiveNetworkAccess
URLForDirectory:inDomain:appropriateForURL:create:error:
bundleRecordWithBundleIdentifier:allowPlaceholder:error:
setAllowsExpensiveNetworkAccess:
intersectSet:
dictionaryWithObjects:forKeys:count:
setDiscretionaryNetworkBehavior:
stringWithCString:encoding:
groupContainerURLs
initWithCursor:
bundleRecordForAuditToken:error:
length
allowsCellularAccess
encodedData
dictionary
_initUniqueWithURL:
array
objectForKey:
setAllowsCellularAccess:
rangeOfString:options:
stringByTrimmingCharactersInSet:
setDesiredKeys:
interfaceWithProtocol:
setClasses:forSelector:argumentIndex:ofReply:
integerValue
sharedConnection
archivedDataWithRootObject:requiringSecureCoding:error:
objectAtIndex:
setByAddingObjectsFromSet:
encodeObject:forKey:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
unsignedLongLongValue
initWithContainerIdentifier:environment:
UIBackgroundModes
stringByDeletingPathExtension
setShouldFetchAssetContent:
raise
bundleIdentifier
lastPathComponent
sharedCloudDatabase
compare:
initWithContainerID:
numberWithUnsignedLongLong:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
encodeInteger:forKey:
boolValue
unsignedIntegerValue
setByAddingObjectsFromArray:
intValue
stringByAppendingPathComponent:
setDecodingFailurePolicy:
encodeBool:forKey:
firstObject
numberWithUnsignedInteger:
code
initWithURL:requireValid:error:
initWithCapacity:
setObject:forKey:
countByEnumeratingWithState:objects:count:
set_sourceApplicationBundleIdentifier:
UUIDString
allocWithZone:
applicationProxyForIdentifier:
statusCode
defaultSessionConfiguration
initWithApplicationProxy:
unlock
publicCloudDatabase
fireDate
response
setAutomaticallyRetryNetworkFailures:
setExtensionIdentity:
count
set_allowsRetryForBackgroundDataTasks:
numberWithInteger:
allValues
defaultRecordZone
setNetworkServiceType:
requestWithURL:cachePolicy:timeoutInterval:
setName:
initWithSuiteName:
sessionWithConfiguration:delegate:delegateQueue:
processInfo
defaultManager
allObjects
unionSet:
finishTasksAndInvalidate
_setQueue:
copy
defaultContainer
allKeys
containsValueForKey:
processIdentifier
initRequiringSecureCoding:
privateCloudDatabase
fileURLWithPath:isDirectory:
newXPCConnectionWithError:
serviceName
unauthoritativeTrustState
setWithObjects:
defaultCenter
setDatabase:
initWithRecordType:predicate:
characterSetWithCharactersInString:
allHeaderFields
fileURLWithPath:
setWithObject:
executeQuery:
initForReadingFromData:error:
setExportedObject:
initWithQuery:
mutableCopy
containsObject:
setResultsLimit:
fileURL
decodeObjectOfClasses:forKey:
backgroundSessionConfigurationWithIdentifier:
removeObjectsInArray:
containingBundleRecord
caseInsensitiveCompare:
setExportedInterface:
isLowPowerModeEnabled
setWithArray:
moveItemAtURL:toURL:error:
executeQueries:
predicateWithFormat:
decodeObjectOfClass:forKey:
removeObjectForKey:
writeToURL:options:error:
fileSystemRepresentation
infoDictionary
containerURLForSecurityApplicationGroupIdentifier:
setWaitsForConnectivity:
initWithMachServiceName:
decodeIntegerForKey:
removeObject:
decodeBoolForKey:
fileExistsAtPath:isDirectory:
containerIdentifier
downloadTaskWithResumeData:
setContainer:
removeItemAtURL:error:
applicationExtensionRecords
exceptionWithName:reason:userInfo:
dealloc
downloadDidBegin:
download:failedWithError:
downloadDidPause:
download:finishedWithFileURL:
download:didReceiveChallenge:completionHandler:
download:didWriteBytes:totalBytesWritten:totalBytesExpectedToWrite:
startDownloadWithDelegate:
pauseDownloadWithCompletionHandler:
cancelDownloadSilentlyWithCompletionHandler:
cancelDownloadWithCompletionHandler:
_cancelDownloadWithCompletionHandler:
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSession:downloadTask:didFinishDownloadingToURL:
URLSession:task:didCompleteWithError:
URLSession:downloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:
URLSession:downloadTask:didResumeAtOffset:expectedTotalBytes:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:didCreateTask:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
init
wakeupForTokenWithReply:
downloadsForRequest:manifestURL:manifestToken:extensionInfo:completionHandler:
receivedAuthenticationChallenge:download:completionHandler:
extensionWillTerminate
backgroundDownload:failedWithError:completionHandler:
backgroundDownload:finishedWithSandboxToken:completionHandler:
initWithExtension:XPCConnection:applicationInfo:
requestDownloadsWithContentRequest:manifestURL:extensionInfo:
sendAuthenticationChallenge:download:completionHandler:
extendClientSandboxForStagedURL:allowWrites:
invalidate
_sendingMessage
_checkForExit
_startExitTimer
_terminateConnection
identifier
setIdentifier:
shutdownQueue
setShutdownQueue:
extensionConnection
setExtensionConnection:
applicationInfo
setApplicationInfo:
exitTimer
setExitTimer:
extensionProcess
setExtensionProcess:
extensionActiveCalls
setExtensionActiveCalls:
sentWillTerminateMessage
setSentWillTerminateMessage:
sentTerminatonMessage
setSentTerminatonMessage:
.cxx_destruct
_sentWillTerminateMessage
_sentTerminatonMessage
_identifier
_shutdownQueue
_extensionConnection
_applicationInfo
_exitTimer
_extensionProcess
_extensionActiveCalls
T@"NSObject<OS_dispatch_queue>",&,V_shutdownQueue
T@"NSXPCConnection",&,V_extensionConnection
T@"BAApplicationInfo",&,V_applicationInfo
T@"NSString",&,V_identifier
T@"NSTimer",&,V_exitTimer
T@"_EXExtensionProcess",&,V_extensionProcess
TQ,V_extensionActiveCalls
TB,V_sentWillTerminateMessage
TB,V_sentTerminatonMessage
setApplicationInformationForRestrictedDownload:
addPowerAssertionAndActivityWithIdentifier:
removePowerAssertionAndActivity
syncTo:
cloneDownloadToFinalDestinationURL:error:
classesForSerialization
initWithIdentifier:request:applicationGroupIdentifier:priority:
initWithCoder:
encodeWithCoder:
supportsSecureCoding
_applicationEvent
TB,R
initWithStartDate:
elapsedTime
extensionExited
isMoreThan24HoursAgo
startDate
setStartDate:
endDate
setEndDate:
_startDate
_endDate
T@"NSDate",&,V_startDate
T@"NSDate",&,V_endDate
Td,R
initWithMessageOperation:
initWithAppBundleIdentifier:
appBundleIdentifier
_appBundleIdentifier
T@"NSString",R,N,V_appBundleIdentifier
initWithNSXPCConnection:error:
grantedInitialBackgroundActivityWithIdentifier:completionHandler:
applicationWasInstalledWithIdentifier:bundleURLPath:completionHandler:
applicationWasUpdatedWithIdentifier:bundleURLPath:completionHandler:
applicationShouldTriggerPeriodicWithIdentifier:bundleURLPath:completionHandler:
runDebugCommand:reply:
initPrivatelyWithApplicationGroupIdentifier:
copyWithZone:
initWithIdentifier:recordType:recordName:assetKey:applicationGroupIdentifier:
initWithIdentifier:recordType:expectedFieldKey:expectedFieldValue:assetKey:applicationGroupIdentifier:
initWithIdentifier:recordType:expectedFieldKey:expectedFieldValue:assetKey:applicationGroupIdentifier:containerIdentifier:zoneID:databaseScope:priority:
containerID
setContainerID:
query
setQuery:
assetKey
setAssetKey:
zoneID
setZoneID:
databaseScope
setDatabaseScope:
masqueradeIdentifier
setMasqueradeIdentifier:
_containerID
_query
_assetKey
_zoneID
_databaseScope
_masqueradeIdentifier
T@"CKContainerID",&,N,V_containerID
T@"CKQuery",&,N,V_query
T@"NSString",&,N,V_assetKey
T@"CKRecordZoneID",&,N,V_zoneID
Tq,N,V_databaseScope
T@"NSString",&,N,V_masqueradeIdentifier
initWithIdentifier:request:applicationGroupIdentifier:
request
setRequest:
_request
T@"NSURLRequest",&,V_request
initWithToken:block:
executeWithSuccessfulDequeue:
block
token
fireByTimer
setFireByTimer:
blockFired
_blockFired
_block
_token
_fireByTimer
T@?,R,C,N,V_block
T@"NSUUID",R,N,V_token
T@"NSObject<OS_dispatch_source>",&,V_fireByTimer
TB,R,N,V_blockFired
initWithIdentifier:
__enqueue:
enqueue:
enqueue:waitLimitDate:
_dequeueNext
consumeToken:
drainSpecificWithToken:
drain
_increment
_decrement
queueRetainCount
blockQueueLock
blockQueue
awaitingBlockCompletion
setAwaitingBlockCompletion:
_awaitingBlockCompletion
_queueRetainCount
_blockQueueLock
_blockQueue
T@"NSString",R,N,V_identifier
TQ,R,N,V_queueRetainCount
T@"NSLock",R,N,V_blockQueueLock
T@"NSMutableOrderedSet",R,N,V_blockQueue
TB,N,V_awaitingBlockCompletion
blockQueueWithIdentifier:
invalidateBlockQueue:
identifiersToBlockQueues
_identifiersToBlockQueues
T@"NSMutableDictionary",R,N,V_identifiersToBlockQueues
initWithApplicationIdentifier:delegate:
scheduleDownload:withCompletionHandler:
startForegroundDownload:withCompletionHandler:
cancelDownload:withCompletionHandler:
cancelAllDownloadsWithCompletionHandler:
pauseAllForegroundDownloadsWithCompletionHandler:
startNextDownload
pauseAllDownloadsWithCompletionHandler:
numberOfActiveDownloads
numberOfWaitingDownloads
allDownloads
lastDownloadStartDate
setLastDownloadStartDate:
delegate
setDelegate:
downloads
setDownloads:
stagingDirectory
setStagingDirectory:
_lastDownloadStartDate
_delegate
_downloads
_stagingDirectory
T@"NSMutableArray",&,V_downloads
T@"NSDate",&,V_lastDownloadStartDate
T@"NSString",&,V_stagingDirectory
Tq,R
T@"NSArray",R
T@"<BADownloadManagerDelegate>",W,V_delegate
_baassets_stringByRemovingLastIdentifierComponent
_baassets_validUTI
_baassets_validUTIWithWildcard
classForMessageOperation:
messageOperation
setMessageOperation:
versionSupported
setVersionSupported:
unsupportedVersionFailureMessage
setUnsupportedVersionFailureMessage:
_versionSupported
_messageOperation
_unsupportedVersionFailureMessage
Tq,N,V_messageOperation
TB,N,V_versionSupported
T@"NSString",&,N,V_unsupportedVersionFailureMessage
_backgroundActivityStateDidChange
sharedCore
listener:shouldAcceptNewConnection:
downloadTimeValidityDidChange
doPeriodicUpdateCheck
listener:shouldAcceptNewClientConnection:
listener:shouldAcceptNewSPIConnection:
connectionDisconnected:
extensionDisconnectedWithIdentifier:
downloaderExtensionForApplicationIdentifier:
extensionIdentityForApplicationInfo:
appGroupsForApplicationInfo:
_extensionIdentityForApplicationInfo:
_downloaderExtensionForApplicationIdentifier:
applicationInfoForIdentifier:
grantedInitialBackgroundActivityWithIdentifier:
updateApplicationInformationForIdentifier:bundleURLPath:
handleApplicationEvent:identifier:bundleURLPath:
handleApplicationLaunched:
scheduleDownload:forClientIdentifier:notifyQueue:completionBlock:
downloadForIdentifier:forClientIdentifier:
downloadsForIdentifier:
startForegroundDownload:forClientIdentifier:completionBlock:
cancelDownload:forClientIdentifier:completionBlock:
_updateApplication:state:
updateApplication:state:
_pokeScheduler
_scheduleDownloads
_checkIdentifierHasExtension:
_checkConnection:hasAllowedTeamIDForIdentifier:
_setClearBeforeShutdown
_clearState
_debugShutdown
_printDebugState
_connectionsForApplicationIdentifier:
_pauseDownloads
_deserializeState
_deserializeApplicationList
_deserializeDownloadQueues
_deserializeUndeliveredEvents
_serializeState
_serializeDownloadQueues
_serializeApplicationState
_serializeUndeliveredEvents
_shutdownAgent
_debugDownloadTime:clear:
_connectionReplyQueueForIdentifier:
_applicationIdentifierAllowsBackgroundActivity:
_downloadsInProgress
asyncClientNotificationQueue
setAsyncClientNotificationQueue:
connectionQueue
setConnectionQueue:
workQueue
setWorkQueue:
listener
setListener:
spiListener
setSpiListener:
applicationState
setApplicationState:
connections
setConnections:
connectionReplyQueue
setConnectionReplyQueue:
unhandledDownloadEvents
setUnhandledDownloadEvents:
extensionConnections
setExtensionConnections:
rulesEngine
setRulesEngine:
lastStartDate
setLastStartDate:
downloadQueuesByClientIdentifier
setDownloadQueuesByClientIdentifier:
debugClearState
setDebugClearState:
_debugClearState
_asyncClientNotificationQueue
_connectionQueue
_workQueue
_listener
_spiListener
_applicationState
_connections
_connectionReplyQueue
_unhandledDownloadEvents
_extensionConnections
_rulesEngine
_lastStartDate
_downloadQueuesByClientIdentifier
T@"NSObject<OS_dispatch_queue>",&,V_asyncClientNotificationQueue
T@"NSObject<OS_dispatch_queue>",&,V_connectionQueue
T@"NSObject<OS_dispatch_queue>",&,V_workQueue
T@"NSXPCListener",&,V_listener
T@"NSXPCListener",&,V_spiListener
T@"NSMutableArray",&,V_applicationState
T@"NSMutableArray",&,V_connections
T@"NSMutableDictionary",&,V_connectionReplyQueue
T@"NSMutableArray",&,V_unhandledDownloadEvents
T@"NSMutableDictionary",&,V_extensionConnections
T@"BAAgentDownloadRulesEngine",&,V_rulesEngine
T@"NSMutableDictionary",&,V_lastStartDate
T@"NSMutableDictionary",&,V_downloadQueuesByClientIdentifier
TB,V_debugClearState
initWithApplicationInfo:
agentCore
setAgentCore:
_agentCore
T@"BAAgentCore",W,V_agentCore
initWithDelegate:
setDebugValidityTimeOverride:
isValidTimeForDownloads
isConnectedToPower
batteryLevel
resume
_setupPowerSourceMonitor
_setupXPCActivity
_takePowerAssertion
_dropPowerAssertion
_powerSourceHasChanged
networkingIsCheap
setNetworkingIsCheap:
powerRunLoopSource
setPowerRunLoopSource:
lastDownloadIsValidValue
setLastDownloadIsValidValue:
rulesEngineWorkQueue
setRulesEngineWorkQueue:
powerAssertionID
setPowerAssertionID:
debugRuleValidity
setDebugRuleValidity:
_networkingIsCheap
_lastDownloadIsValidValue
_powerAssertionID
_debugRuleValidity
_powerRunLoopSource
_rulesEngineWorkQueue
T@"<BAAgentDownloadRulesEngineDelegate>",W,V_delegate
TB,V_networkingIsCheap
T^{__CFRunLoopSource=},V_powerRunLoopSource
TB,V_lastDownloadIsValidValue
T@"NSObject<OS_dispatch_queue>",&,V_rulesEngineWorkQueue
TI,V_powerAssertionID
Ti,V_debugRuleValidity
downloadFailedWithError:
downloadSucceededWithURL:
initWithDownload:withDelegate:
startDownloadWithError:
pauseDownload
cancelDownload
_downloadFailedWithError:
_downloadSucceededWithURL:
_consumeAvailableDownloadSize
_downloadActualAsset
_newOperationQuery
download
setDownload:
responseQueue
setResponseQueue:
stateLock
setStateLock:
operationConfiguration
setOperationConfiguration:
currentOperation
setCurrentOperation:
recordErrors
setRecordErrors:
recordFound
setRecordFound:
assetFound
setAssetFound:
assetSize
setAssetSize:
assetURL
setAssetURL:
_recordFound
_assetFound
_download
_responseQueue
_stateLock
_operationConfiguration
_currentOperation
_recordErrors
_assetSize
_assetURL
T@"<BACloudKitDownloadManagerDelegate>",W,N,V_delegate
T@"BACloudKitDownload",W,N,V_download
T@"NSObject<OS_dispatch_queue>",&,N,V_responseQueue
T@"NSLock",&,N,V_stateLock
T@"CKOperationConfiguration",&,N,V_operationConfiguration
T@"CKQueryOperation",&,N,V_currentOperation
T@"NSMutableDictionary",&,N,V_recordErrors
TB,N,V_recordFound
TB,N,V_assetFound
TQ,N,V_assetSize
T@"NSURL",&,N,V_assetURL
archivedRepresentationWithError:
messageVersion
setMessageVersion:
_messageVersion
TQ,N,V_messageVersion
initWithEventType:download:error:
typeString
type
setType:
eventError
setEventError:
_type
_eventError
Tq,V_type
T@"BADownload",&,V_download
T@"NSError",&,V_eventError
applicationForIdentifierAllowsBackgroundActivity:
extensionContainingApplicationList
initWithIdentifier:applicationTeamIdentifier:
grantApprovalForInitialBackgroundActivity
applicationInstalledWithUpdateInstall:
updateApplicationWithInfoDictionary:
remainingDownloadAllowance
consumeAllowanceAndReturnShouldStop:
allowsBackgroundActivity
shouldDoPeriodicCheck
extensionRuntime
shouldLaunchExtension
willLaunchExtension
donePeriodicCheck
applicationLaunched
userQuitTheApp
_debugConsumeTime:
_remainingDownloadAllowance
_populateAllowedDomainInfoWithArray:
serializableAllowedDomainInfo
applicationIdentifier
setApplicationIdentifier:
lastPeriodicCheckTime
setLastPeriodicCheckTime:
lastApplicationLaunchTime
setLastApplicationLaunchTime:
hasSentApplicationInstalledMessage
setHasSentApplicationInstalledMessage:
hasLaunchedApplication
setHasLaunchedApplication:
permittedForInitialBackgroundActivity
setPermittedForInitialBackgroundActivity:
applicationTeamIdentifier
setApplicationTeamIdentifier:
allowedDownloadDomains
setAllowedDownloadDomains:
allowedDownloadDomainWildcards
setAllowedDownloadDomainWildcards:
manifestURL
setManifestURL:
amountDownloaded
setAmountDownloaded:
downloadAllowance
setDownloadAllowance:
appWasLastForceQuit
setAppWasLastForceQuit:
appInfoLock
setAppInfoLock:
extensionRuntimeEvents
setExtensionRuntimeEvents:
currentRuntime
setCurrentRuntime:
_hasSentApplicationInstalledMessage
_hasLaunchedApplication
_permittedForInitialBackgroundActivity
_appWasLastForceQuit
_applicationIdentifier
_lastPeriodicCheckTime
_lastApplicationLaunchTime
_applicationTeamIdentifier
_allowedDownloadDomains
_allowedDownloadDomainWildcards
_manifestURL
_amountDownloaded
_downloadAllowance
_appInfoLock
_extensionRuntimeEvents
_currentRuntime
T@"NSString",&,V_applicationIdentifier
TQ,V_amountDownloaded
TQ,V_downloadAllowance
T@"NSDate",&,V_lastPeriodicCheckTime
TB,V_permittedForInitialBackgroundActivity
TB,V_hasLaunchedApplication
TB,V_appWasLastForceQuit
T@"NSDate",&,V_lastApplicationLaunchTime
T@"NSLock",&,V_appInfoLock
T@"NSArray",&,V_allowedDownloadDomains
T@"NSArray",&,V_allowedDownloadDomainWildcards
T@"NSURL",&,V_manifestURL
T@"NSMutableArray",&,V_extensionRuntimeEvents
T@"BAExtensionRuntime",&,V_currentRuntime
TB,V_hasSentApplicationInstalledMessage
T@"NSString",&,V_applicationTeamIdentifier
downloadDidPause
downloadManager
setDownloadManager:
restrictedDownloadSizeRemaining
setRestrictedDownloadSizeRemaining:
_restrictedDownloadSizeRemaining
T@"NSNumber",&,V_restrictedDownloadSizeRemaining
_setupConnection
connectionInvalidated
connection
setConnection:
_connection
T@"NSXPCConnection",&,V_connection
initWithVersionAllowed:failureExplanation:
versionAllowed
failureReason
_versionAllowed
_failureReason
TB,R,N,V_versionAllowed
T@"NSString",R,N,V_failureReason
priority
setPriority:
state
setState:
uniqueIdentifier
setUniqueIdentifier:
applicationGroupIdentifier
setApplicationGroupIdentifier:
downloadStartDate
setDownloadStartDate:
downloadCachePath
setDownloadCachePath:
session
setSession:
downloadTask
setDownloadTask:
resumeData
setResumeData:
downloadError
setDownloadError:
isForegroundDownload
setIsForegroundDownload:
transaction
setTransaction:
_isForegroundDownload
_priority
_internalState
_state
_uniqueIdentifier
_applicationGroupIdentifier
_expectedOutFileName
_stagedDownloadedFileURL
_downloadStartDate
_downloadCachePath
_session
_downloadTask
_resumeData
_downloadError
_transaction
Tq,N,V_state
Tq,V_priority
T@"NSString",&,N,V_identifier
T@"NSString",&,N,V_uniqueIdentifier
T@"NSString",&,V_applicationGroupIdentifier
T@"NSDate",&,V_downloadStartDate
T@"NSString",&,V_downloadCachePath
T@"NSURLSession",&,V_session
T@"NSURLSessionDownloadTask",&,V_downloadTask
T@"NSData",&,V_resumeData
T@"NSError",&,V_downloadError
TB,V_isForegroundDownload
T@"NSObject<OS_os_transaction>",&,V_transaction
currentDownloads:
scheduleDownload:reply:
performWithExclusiveControlBeforeDate:handler:
performWithExclusiveControlWithHandler:
exclusiveControlExitedWithToken:
startForegroundDownload:reply:
cancelDownload:reply:
applicationStateDidChange:
syncDownloads:
removeDownloadIdentifier:
downloadIdentifierDidBegin:
downloadIdentifierDidPause:
downloadIdentifier:didWriteBytes:totalBytesWritten:totalBytesExpectedToWrite:
downloadIdentifier:didReceiveChallenge:authChallengeHandler:
downloadIdentifier:didFailWithError:wasHandled:
downloadIdentifierDidFinish:sandboxExtensionToken:wasHandled:
_validateAndSetClientIdentifier
_entitledForCloudKitWithDownload:outError:
callBlockWhenConnectionReady:onQueue:
downloadIdentifier:didReceiveChallenge:authChallengeHandler:withCompletion:
isApplication
setIsApplication:
clientIdentifier
setClientIdentifier:
clientHandlerQueue
setClientHandlerQueue:
clientWorkQueue
setClientWorkQueue:
isActive
setIsActive:
connectionIsValid
setConnectionIsValid:
signingIdentifier
setSigningIdentifier:
exclusiveAccessBlockQueue
setExclusiveAccessBlockQueue:
lastExclusiveAccessBlockToken
setLastExclusiveAccessBlockToken:
_isApplication
_isActive
_connectionIsValid
_clientIdentifier
_clientHandlerQueue
_clientWorkQueue
_signingIdentifier
_exclusiveAccessBlockQueue
_lastExclusiveAccessBlockToken
T@"NSObject<OS_dispatch_queue>",&,V_clientHandlerQueue
T@"NSObject<OS_dispatch_queue>",&,V_clientWorkQueue
TB,V_isApplication
TB,V_isActive
TB,V_connectionIsValid
T@"NSString",&,V_clientIdentifier
T@"NSString",&,V_signingIdentifier
T@"BABlockQueue",&,V_exclusiveAccessBlockQueue
T@"NSUUID",&,V_lastExclusiveAccessBlockToken
https
v16@?0@"NSData"8
HTTP Status
HTTP Headers
com.apple.backgroundassets.extension.%@.shutdown_queue
v8@?0
v16@?0@"NSError"8
v12@?0B8
-[BADownloaderExtensionProxy requestDownloadsWithContentRequest:manifestURL:extensionInfo:]
-[BADownloaderExtensionProxy requestDownloadsWithContentRequest:manifestURL:extensionInfo:]_block_invoke
-[BADownloaderExtensionProxy sendAuthenticationChallenge:download:completionHandler:]_block_invoke
v24@?0q8@"NSURLCredential"16
-[BADownloaderExtensionProxy extensionWillTerminate]_block_invoke
-[BADownloaderExtensionProxy backgroundDownload:failedWithError:completionHandler:]_block_invoke
-[BADownloaderExtensionProxy backgroundDownload:finishedWithSandboxToken:completionHandler:]_block_invoke
wakeupForTokenWithReply should never be called on the proxy object, it is for internal use only
Extension Proxy
Identifier: %@
PID: %d
Extension Termination Time: %@ (%.2lf seconds remaining)
startDownloadWithDelegate is not implemented on BADownload as it is abstract.
pauseDownloadWithCompletionHandler is not implemented on BADownload as it is abstract.
cancelDownloadWithCompletionHandler is not implemented on BADownload as it is abstract.
cancelDownloadSilentlyWithCompletionHandler is not implemented on BADownload as it is abstract.
PreventUserIdleSystemSleep
Downloading - %@
Library/Caches
%@-%ld.%@
SourceURL
DestURL
%@.Manifest-%@
applicationEvent
com.apple.backgroundassets.error
/System/Library/Frameworks/BackgroundAssets.framework
BAError
startDate
endDate
BAApplicationIdentifier
BAAgentSystemConnectionErrorDomain
Invalid application identifier supplied: %@
command
arguments
state
shutdown
force_periodic
reset
downloads-allowed
clear
consume-extension-time
System Connection
PID: %d
Non BAURLDownload passed to syncTo for BAURLDownload
BUG IN CLIENT OF BackgroundAssets: BACloudKitDownload cannot be constructed using -init.
Name
expectedFieldKey must be a valid string.
expectedFieldValue cannot be passed in as nil.
expectedFieldValue must be of type: NSString, NSNumber, NSDate, NSData, or NSArray.
%@ == %%@
NSString *  must be a valid unique string.
Provided query must be a valid CKQuery.
Provided assetKey must be a valid string.
Provided containerIdentifier must be a valid string.
Provided CKRecordZoneID must be a valid object.
com.apple.developer.icloud-container-environment
production
BACloudKitDownload_File_%@
BACKD.ContainerID
BACKD.query
BACKD.assetKey
BACKD.zoneID
BACKD.databaseScope
masqueradeIdentifier
BUG IN CLIENT OF BackgroundAssets: BAURLDownload cannot be constructed using -init.
request must be a URLRequest.
request must have a valid URL.
request can only download over HTTPS.
request must be secure coding compliant.
identifier can not be nil
identifier must be a string.
request
URL: %@
com.apple.backgroundassets
system
client_connection
download
v32@?0@"BABlock"8Q16^B24
BABlockQueue retain count is being decremented past 0.
Caller invoked invalidateBlockQueue on BABlockQueueManager with an object that was not a BABlockQueue.
com.apple.backgroundassets.downloadstaging/%@
identifier
lastDownloadStartDate
downloads
q24@?0@"BADownload"8@"BADownload"16
%@ (%p) - %lu Downloads {
%@ (%p)
Application Identifier: %@
Downloads (%lu): {
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-.
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-.*
BAServerMessageOperation
com.apple.backgroundassets.system
com.apple.backgroundassets.appstore
kKeepAppsUpToDateEnabledChangedNotification
com.apple.backgroundassets.agentcore.clientnotification.async
com.apple.backgroundassets.agentcore.connectionqueue
com.apple.backgroundassets.agentcore.workqueue
baagent.redeliverevents
q24@?0@"BADownloadQueue"8@"BADownloadQueue"16
-[BAAgentCore download:failedWithError:]_block_invoke
-[BAAgentCore download:finishedWithFileURL:]_block_invoke
ApplicationState.bin
DownloadQueues.bin
UndeliveredEvents.bin
baagent.deserializestate
Application State
Queues
Undelivered Events
baagent.serializestate
baagent.serializestate.downloadqueues
baagent.serializestate.applicationstates
baagent.serializestate.undeliveredevents
com.apple.backgroundassets.%@.reply
com.apple.backgroundassets.rulesengine
Power Source State
AC Power
Current Capacity
com.apple.backgroundassets.periodic_check
v16@?0@"NSObject<OS_xpc_object>"8
Background assets - rules engine
com.apple.BACloudKitDownloadManager.ResponseQueue
v32@?0@"CKRecordID"8@"NSError"16^B24
v24@?0@"CKQueryCursor"8@"NSError"16
v32@?0@"CKRecordID"8@"CKRecord"16@"NSError"24
BAMessageVersion
BUG IN BackgroundAssets: BAUnhandledDownloadEvent initialized with a failure event but a nil error.
type
eventError
BUG IN BackgroundAssets: BAUnhandledDownloadEvent initialized from coder as a failure event but with a nil error.
Download Finished
Download Failed
Unknown
Event: %@ - Error %@ - Download %@
Event: %@ - Download %@
com.apple.mt
KeepAppsUpToDateAppList
fetch
%@ App Info Lock
extensionRuntimeEvents
Application Identifier: %@
Allowed Initital Download Amount: %llu
Amount Downloaded: %llu
Has Run Installed: %@
Allowed Domains: %@
Last Check Time: %@
App Has Been Launched: %@
Last Launch Time: %@
Extension Runtime In Last 24h: %lf
BACloudKitDownload.%@.%@
BUG IN CLIENT OF BackgroundAssets: BAAppExtensionInfo cannot be constructed using -init.
restrictedDownloadSizeRemaining
com.apple.backgroundassets.user
com.apple.developer.team-identifier
applicationIdentifier
applicationTeamIdentifier
amountDownloaded
downloadAllowance
permittedForInitialBackgroundActivity
hasSentApplicationInstalledMessage
hasLaunchedApplication
lastApplicationLaunchTime
lastPeriodicCheckTime
allowedDownloadDomains
manifestURL
com.apple.background-asset-downloader-extension
BAManifestURL
BAInitialDownloadRestrictions
BADownloadAllowance
BADownloadDomainAllowList
BAServerVersionSupported
BAFailureReason
BAClientMessageOperation
BUG IN CLIENT OF BackgroundAssets: BADownload cannot be constructed using -init.
internalState
priority
uniqueIdentifier
applicationGroupIdentifier
expectedOutFileName
stagedDownloadedFileURL
downloadFailureError
resumeData
downloadCachePath
isRestrictedDownload
Provided applicationGroupIdentifier must be a valid string.
%@.%@.%@
%@ (%p) - %@
%@ (%p) - %@
Silently Failed
Failed
Created
Pausing
Paused
Waiting
Download Starting...
Download backgrounded and waiting on NSURLSession
Downloading
Finished
State: %@
Priority: %lu
Unique identifier: %@
App Group identifier: %@
Staged file url: %@
Application identifier: %@
Download error: %@
Download start time: %@
Download cache path: %@
URL session object: %@
URL download task: %@
Resume data: %p, %lu
Is restricted download: %@
Is foreground download: %@
%d.%@.worker
%d.%@.handler
v20@?0B8@"NSUUID"12
EXAppExtensionAttributes
NSExtension
com.apple.developer.icloud-services
CloudKit
com.apple.developer.icloud-container-identifiers
com.apple.BAAgentClientConnection.AuthChallengeWaiter
-[BAAgentClientConnection downloadIdentifier:didReceiveChallenge:authChallengeHandler:withCompletion:]_block_invoke_2
-[BAAgentClientConnection downloadIdentifier:didFailWithError:wasHandled:]_block_invoke
-[BAAgentClientConnection downloadIdentifierDidFinish:sandboxExtensionToken:wasHandled:]_block_invoke
Client Connection
Client Identifier: %@
PID: %d
Is Client App: %@
Download %{public}@ is restricted, validating.
Download %{public}@ rejected based on domain check.
Download %{public}@ rejected as we are out of download allowance.
Download %{public}@ was invalidated with a silent failure in internal state: %ld.
Download %{public}@ was invalidated with a failure in internal state: %ld.
Pausing download %{public}@ because we are on cellular.
Pausing download %{public}@ because our network is expensive.
Extension interrupted for identifier: %{public}@
Extension invalidated for identifier: %{public}@
Attempting to wakeup extension connection.
Fatal: Extension failed to send wakeup message. %@
Fatal: Wakeup extension timed out.
Wakeup extension succeeded.
Fatal: Wakeup extension errored out.
Failed in %s for: %{public}@. Unable to extend sandbox for manifest URL: %{public}@
Failed to send %s for: %{public}@ error: %@
Terminating connection to extension: %{public}@
Failed to take power assertion for rules engine.
Failed to load container for app group identifier: %@
More than 1440m is nonsense as time resets every day.
More than 24h is nonsense as time resets every day.
Invalid unit string: %@
Should be 'm' or 'h'.
Added %d seconds to %@
Unable to get applicaiton runtime info for identifier: %@
Rejecting download (%{public}@ , %@) because it is already scheduled in (%{public}@).
Requested foreground on download that does not appear to be scheduled.
Download: %{public}@
Client: %{public}@
Started listening for clients.
Started listening for xpc activity.
Connection to service: %{public}@ from pid:%{public}d has invalid service name.
Client connection accepted from pid:%{public}d
Client connection rejected (no extension, signing error or team-id mismatch) from pid:%{public}d
New SPI connection from pid:%{public}d
System connection accepted from pid:%{public}d
System connection from pid:%{public}d failed to init with error: %@
System connection from pid:%{public}d rejected due to lack of entitlement.
Failed to get represented extension point with queries: %s
Extension (%@) is not part of a application bundle. Failing.
Application bundle (%@) is not the same as the bundle id (%@). Failing.
Rejecting talking to extension %@ because the background activity is not allowed.
Rejecting launching extension for %@ because it has already run too long.
Rejecting launch of extension for %@ because an extension identity could not be created.
Failed to get extension process: %s
Extension representation failed to generate XPC connection: %s
Extension representation failed to generate XPC connection with unknown error.
Rejected extension connection (%@) for mismiatched team id
failed to establish connection for extension (%@)
Unable to update application info. (bundle identifier: %@) %@
Unable to update application info, bundle record returned is not an LSApplicationRecord. (bundle identifier: %@)
Unable to update application info, no info dictionary could be found. (bundle identifier: %@)
Event (%ld) dropped for client (%s) failed because client Info dictionary is not accessible or valid.
Event (%ld) dropped for client (%s) failed because client Info dictionary is missing its '%@' key.
Event (%ld) dropped for client (%s) failed because background activity is not allowed.
Event (%ld) dropped for client (%s) failed because the app and extension do not share any application groups.
Event (%ld) for client (%s) is scheduling manifest for download.
Event (%ld) failed for client (%s) because the manifest URL (%@) could not be enqueued. %@
Scheduled download identifier: %{public}@ for client: %{public}@
Dropping unknown unhandled event type in list: %@
Download did begin: %{public}@
Download did begin finished: %{public}@
Download did pause: %{public}@
Download did pause finished: %{public}@
Timed out messaging client for '%@' to answer auth challenge for download: %@
Cannot message extension for '%@' to answer auth challenge, canceling challenge for download: %@
Download did fail: %{public}@ with error: %{public}@
Added undelivered event: %@
Failed to notify anyone about failed download: %@
%s, Will not message extension for %@ because background activity is disabled.
Download did fail done
Download did finish: %{public}@
Warning: No sandbox token issued for finished download: %@ URL: %@ for client: %@
Warning: No sandbox token issued for extension for finished download: %@ URL: %@ for client: %@
Failed to notify extension about failed manifest download: %@
Client failed to enqueue requested downloads for manifest: %@ with content request: %ld
Extension handled the manifest download, removing download. %@
Failed to notify extension about finished download: %@
Extension handled the background download, removing download. %@
Failed to find extension for installed application, removing download. %@
Result was handled by a client of BADownloadManager, removing download. %@
Download did finish done.
Failed to get bundle record for identifier: %@ error: %@
Bundle for %@ does not have a extension record. Blocking.
Bundle for %@ does not have a downloader extension. Blocking.
Bundle for %@ is not application or extension. Blocking.
Debug shutdown called. Preparing to exit
Dumping debug agent state:
Allowed time for downloads: %@
**** Application State Info ****
**** Connection State Info  ****
**** Extension Connection State Info ****
**** Download Queue State Info ****
**** ---------------------- ****
**** ------------------------------- ****
Failed to deserialize application state: %{public}@
failed to open application state URL: %{public}@
Failed to load serialized application state with error: %@
Failed to deserialize download queues: %{public}@
failed to open download queue URL: %{public}@
Failed to load serialized downloads with error: %@
Failed to deserialize events file: %{public}@
failed to open deserialize events URL: %{public}@
Failed to load deserialize events with error: %@
Failed to serialize download queues: %{public}@
Failed to serialize application state: %{public}@
Serializing state and shutting down.
Clear state set, will clear state..
Requested background activity for application identifier that is not known to BAAgentCore. %@
Failed to get power sources. Assume connected to power.
Failed to get power sources. Assume full battery.
A cursor was returned, this is unexpected for 1 result; is the operation hung? This is why.
CKRecordID: %@ returned an error: %@
Denying background activity for %@ background updates are disabled.
Denying background activity for %@ because device is in low power mode.
Denying background activity for %@ background activity for this app is disabled.
Application (%@) lacks background fetch entitlement. Will not use extension.
Application identifier (%@) is not valid Universal Type Identifier. Failing.
Granting approval for initial background activity for: %@
Application was updated: %@
Application was installed: %@
Background activity denied for (%@) because the app was last force quit.
Background activity denied for (%@) because the user has not launched the app.
Dropping download because application identifier is invalid: %@
Failed to consume token: %@ for client: %@
Failed to get executable path from audit token.
Executable path from audit token is invalid or is of an empty length.
Unable to construct a SecTaskRef from client audit token.
Failed to get client application static code object, error OSStatus: %d
Failed to get client application code signing information, error OSStatus: %d
Code signed Info.plist is nil
Failed to lookup LSApplicationExtensionRecord for audit token.
Failed to get application record. Falling back to last component removal.
App-ified clientIdentifier is nil or 0 length
Code signed bundle identifier is nil
Application (%@) is not found in the LaunchServices database and cannot be used with BackgroundAssets.
Application (%@) is not registered with FrontBoardServices and cannot be used with BackgroundAssets.
Application (%@) is not trusted on this iOS device and cannot be used with BackgroundAssets. Trust State: %@
Client identifier (%@) is not valid Universal Type Identifier. Disconnecting.
Client is missing signing identifier, client must be signed with an identifier to use BackgroundAssets. %@
Agent
BAURLDownloadNSURLDelegateProtocol
BADownloadAgentProtocol
NSURLSessionDelegate
NSObject
NSURLSessionTaskDelegate
NSURLSessionDownloadDelegate
BADownloaderExtensionSyncProtocol
BADownloaderExtensionProxy
VeryPrivate
BAManifestDownload
BAExtensionRuntime
NSSecureCoding
NSCoding
BADeveloperDebugClientMessageVersionCheck
BADeveloperDebugClientMessageApplicationInstalled
BADeveloperDebugClientMessageApplicationUpdated
BADeveloperDebugClientMessageApplicationPeriodicCheck
BAAgentSystemXPCProtocol
BAAgentSystemConnection
BACloudKitDownload
NSCopying
BAURLDownload
BABlock
BABlockQueue
BABlockQueueManager
BADownloadQueue
BADownloadManagerDelegate
BAAgentUtilities
BAUtilities
BADeveloperDebugServerMessage
BAAgentCore
NSXPCListenerDelegate
BAAgentDownloadRulesEngineDelegate
BAAgentKeyedUnarchiver
BAAgentDownloadRulesEngine
BACloudKitDownloadManager
BADeveloperDebugMessage
BAUnhandledDownloadEvent
BAApplicationInfo
BACloudKitDownloadManagerDelegate
BAAppExtensionInfo
BAAgentConnection
BADeveloperDebugServerMessageVersionCheck
BADeveloperDebugClientMessage
BADownload
BAAgentKeyedArchiver
BAAgentClientXPCProtocol
BADownloadManagerSyncProtocol
BAAgentClientConnection
v16@0:8
B24@0:8@16
v24@0:8@?16
v32@0:8@16@24
v40@0:8@16@24@?32
v40@0:8@16@24@32
v56@0:8@16@24q32q40q48
v48@0:8@16@24q32q40
B24@0:8@"<BADownloadManagerDelegate>"16
v24@0:8@?<v@?>16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@16
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v40@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24@"NSURL"32
v56@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24q32q40
v56@0:8q16@24@32@40@?48
v24@0:8@?<v@?B>16
v56@0:8q16@"NSURL"24@"NSString"32@"BAAppExtensionInfo"40@?<v@?>48
v40@0:8@"NSURLAuthenticationChallenge"16@"BADownload"24@?<v@?q@"NSURLCredential">32
v40@0:8@"BADownload"16@"NSError"24@?<v@?B>32
v40@0:8@"BADownload"16@"NSString"24@?<v@?B>32
@40@0:8@16@24@32
B40@0:8q16@24@32
B40@0:8@16@24@?32
@28@0:8@16B24
v24@0:8Q16
v20@0:8B16
@"NSString"
@"NSObject<OS_dispatch_queue>"
@"NSXPCConnection"
@"BAApplicationInfo"
@"NSTimer"
@"_EXExtensionProcess"
B32@0:8^@16^@24
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
d16@0:8
@"NSDate"
v32@0:8@16@?24
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v40@0:8@"NSString"16@"NSURL"24@?<v@?B@"NSError">32
v32@0:8@"NSDictionary"16@?<v@?>24
@32@0:8@16^@24
@24@0:8^{_NSZone=}16
@56@0:8@16@24@32@40@48
@64@0:8@16@24@32@40@48@56
@96@0:8@16@24@32@40@48@56@64@72q80q88
q16@0:8
v24@0:8q16
@"CKContainerID"
@"CKQuery"
@"CKRecordZoneID"
@48@0:8@16@24@32q40
@"NSURLRequest"
@32@0:8@16@?24
B20@0:8B16
@?16@0:8
@"NSUUID"
@"NSObject<OS_dispatch_source>"
@24@0:8@?16
v32@0:8@?16@24
@"NSLock"
@"NSMutableOrderedSet"
@"NSMutableDictionary"
v48@0:8@16q24q32q40
v24@0:8@"BADownload"16
v48@0:8@"BADownload"16q24q32q40
v40@0:8@"BADownload"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v32@0:8@"BADownload"16@"NSError"24
v32@0:8@"BADownload"16@"NSURL"24
@32@0:8@16@24
@"<BADownloadManagerDelegate>"
@"NSMutableArray"
#24@0:8q16
@24@0:8q16
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v40@0:8q16@24@32
v32@0:8@16q24
v24@0:8B16B20
@"NSXPCListener"
@"BAAgentDownloadRulesEngine"
@"BAAgentCore"
v20@0:8i16
f16@0:8
^{__CFRunLoopSource=}16@0:8
v24@0:8^{__CFRunLoopSource=}16
I16@0:8
v20@0:8I16
i16@0:8
@"<BAAgentDownloadRulesEngineDelegate>"
^{__CFRunLoopSource=}
B24@0:8^@16
@"<BACloudKitDownloadManagerDelegate>"
@"BACloudKitDownload"
@"CKOperationConfiguration"
@"CKQueryOperation"
@"NSURL"
@24@0:8^@16
@40@0:8q16@24@32
@"BADownload"
@"NSError"
B24@0:8Q16
v24@0:8d16
@"NSArray"
@"BAExtensionRuntime"
v24@0:8@"NSError"16
v24@0:8@"NSURL"16
@"NSNumber"
@28@0:8B16@20
@"NSURLSession"
@"NSURLSessionDownloadTask"
@"NSData"
@"NSObject<OS_os_transaction>"
v24@0:8@?<v@?@"NSArray"@"NSError">16
v32@0:8@"BADownload"16@?<v@?B@"NSError">24
v32@0:8@"NSDate"16@?<v@?B@"NSError"@"NSUUID">24
v24@0:8@?<v@?B@"NSError"@"NSUUID">16
v24@0:8@"NSUUID"16
v24@0:8@"NSArray"16
v24@0:8@"NSString"16
v48@0:8@"NSString"16q24q32q40
v40@0:8@"NSString"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v40@0:8@"NSString"16@"NSError"24@?<v@?B>32
v40@0:8@"NSString"16@"NSString"24@?<v@?B>32
B32@0:8@16^@24
v48@0:8@16@24@?32@?40
@"BABlockQueue"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>20A241133</string>
<key>CFBundleDevelopmentRegion</key>
<string>en</string>
<key>CFBundleExecutable</key>
<string>backgroundassets.user</string>
<key>CFBundleIdentifier</key>
<string>com.apple.backgroundassets.user</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>backgroundassets.user</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>14A5270i</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.1</string>
<key>DTSDKBuild</key>
<string>20B43</string>
<key>DTSDKName</key>
<string>iphonesimulator16.1.internal</string>
<key>DTXcode</key>
<string>1400</string>
<key>DTXcodeBuild</key>
<string>14A5270i</string>
<key>MinimumOSVersion</key>
<string>16.1</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.backgroundassets.user</string>
<key>com.apple.QuartzCore.secure-mode</key>
<true/>
<key>com.apple.application-identifier</key>
<string>com.apple.backgroundassets.user</string>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudKit</string>
</array>
<key>com.apple.private.MobileContainerManager.otherIdLookup</key>
<true/>
<key>com.apple.private.cloudkit.masquerade</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.network.socket-delegate</key>
<true/>
<key>com.apple.private.nsurlsession.impersonate</key>
<true/>
<key>com.apple.runningboard.launch_extensions</key>
<true/>
<key>com.apple.springboard.CFUserNotification</key>
<true/>
</dict>
</plist>
