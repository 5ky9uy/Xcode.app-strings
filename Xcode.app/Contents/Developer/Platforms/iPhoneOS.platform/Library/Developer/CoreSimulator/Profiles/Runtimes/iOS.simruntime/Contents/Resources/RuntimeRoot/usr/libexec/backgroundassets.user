@(#)PROGRAM:backgroundassets.user  PROJECT:BackgroundAssets-1
downloadLock
_removePowerAssertionAndActivity
dealloc
setDelegate:
setDownloadError:
setBailError:
uniqueIdentifier
_addPowerAssertionAndActivityWithIdentifier:
delegate
downloadDidBegin:
responseQueue
request
mutableCopy
scheme
caseInsensitiveCompare:
_informDelegateOfFailedDownloadWithError:
applicationInfo
host
allowedDownloadDomains
containsObject:
allowedDownloadDomainWildcards
countByEnumeratingWithState:objects:count:
substringFromIndex:
hasSuffix:
remainingDownloadAllowance
setIsForegroundDownload:
isForegroundDownload
defaultSessionConfiguration
setAllowsExpensiveNetworkAccess:
setTimeoutIntervalForRequest:
setWaitsForConnectivity:
permitInitialCellularDownload
setAllowsCellularAccess:
backgroundSessionConfigurationWithIdentifier:
set_allowsRetryForBackgroundDataTasks:
allowsCellularAccess
allowsExpensiveNetworkAccess
setNetworkServiceType:
applicationIdentifier
set_sourceApplicationBundleIdentifier:
copy
setRequest:
resumeData
downloadCachePath
fileURLWithPath:isDirectory:
_handleChallenge:authenticationHandler:
initWithResumeData:withDestinationDirectory:inBackground:withAuthenticationHandler:withRedirectResponseHandler:
setSession:
initWithURLRequest:withDestinationDirectory:inBackground:withAuthenticationHandler:
session
setUseUniqueFileName:
_handleProgressWithBytesReceived:totalBytesRecieved:totalDownloadSize:resuming:
_handleDownloadCompletionWithFileLocation:response:
_handleDownloadFailureWithError:resumeData:response:
startAsyncDownloadNotifyingOnQueue:sessionConfiguration:bytesReceivedHandler:completionHandler:
invalidate
bailError
userInfo
setObject:forKey:
domain
code
errorWithDomain:code:userInfo:
stopRequest
_cellularNetworkProhibitsDownloadUsingError:
setResumeData:
_informDelegateOfPausedDownload
_informDelegateOfFailedDownloadWithError:silentFailure:
startDownloadWithDelegate:
download:finishedWithFileURL:
download:didWriteBytes:totalBytesWritten:totalBytesExpectedToWrite:
consumeAllowanceAndReturnShouldStop:
cancelDownload
download:didReceiveChallenge:completionHandler:
protectionSpace
authenticationMethod
isEqualToString:
previousFailureCount
serverTrust
credentialForTrust:
proposedCredential
downloadDidPause:
download:failedWithError:
downloadError
setStopRequest:
cancel
objectForKey:
intValue
integerValue
numberWithInteger:
cancelDownloadSilently
pauseDownload
promoteToForeground
demoteToBackground
init
setExtensionConnection:
setExtensionProcess:
setApplicationInfo:
_baassets_validUTI
setIdentifier:
identifier
stringWithFormat:
UTF8String
setShutdownQueue:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
wakeupForTokenWithReply:
downloadsForRequest:manifestURL:manifestToken:extensionInfo:completionHandler:
receivedAuthenticationChallenge:download:completionHandler:
extensionWillTerminate
backgroundDownload:failedWithError:completionHandler:
backgroundDownload:finishedWithSandboxToken:completionHandler:
interfaceWithProtocol:
setWithObjects:
setClasses:forSelector:argumentIndex:ofReply:
arrayWithObjects:count:
setWithArray:
markPurgableWithFileURL:sandboxToken:reply:
extensionConnection
setRemoteObjectInterface:
setExportedInterface:
setExportedObject:
sharedCore
extensionDisconnectedWithIdentifier:
setInterruptionHandler:
setInvalidationHandler:
resume
remoteObjectProxyWithErrorHandler:
exitTimer
willLaunchExtension
_startExitTimer
extendClientSandboxForStagedURL:allowWrites:
_sendingMessage
_checkForExit
synchronousRemoteObjectProxyWithErrorHandler:
exceptionWithName:reason:userInfo:
raise
fileSystemRepresentation
auditToken
stringWithCString:encoding:
_terminateConnection
shutdownQueue
setSentWillTerminateMessage:
extensionActiveCalls
setExtensionActiveCalls:
extensionRuntime
sentWillTerminateMessage
sentTerminatonMessage
setSentTerminatonMessage:
extensionProcess
fireDate
timeIntervalSinceNow
processIdentifier
null
dictionaryWithObjects:forKeys:count:
initWithExtension:XPCConnection:applicationInfo:
requestDownloadsWithContentRequest:manifestURL:extensionInfo:
sendAuthenticationChallenge:download:completionHandler:
setExitTimer:
.cxx_destruct
_sentWillTerminateMessage
_sentTerminatonMessage
_identifier
_shutdownQueue
_extensionConnection
_applicationInfo
_exitTimer
_extensionProcess
_extensionActiveCalls
T@"NSObject<OS_dispatch_queue>",&,V_shutdownQueue
T@"NSXPCConnection",&,V_extensionConnection
T@"BAApplicationInfo",&,V_applicationInfo
T@"NSString",&,V_identifier
T@"NSTimer",&,V_exitTimer
T@"_EXExtensionProcess",&,V_extensionProcess
TQ,V_extensionActiveCalls
TB,V_sentWillTerminateMessage
TB,V_sentTerminatonMessage
mainRunLoop
port
addPort:forMode:
setPowerAssertionID:
setTransaction:
powerAssertionID
setApplicationInformationForRestrictedDownload:
setByAddingObjectsFromArray:
defaultManager
applicationGroupIdentifier
containerURLForSecurityApplicationGroupIdentifier:
URLByAppendingPathComponent:
path
fileExistsAtPath:isDirectory:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
removeItemAtURL:error:
UUID
UUIDString
substringToIndex:
syncTo:
cloneDownloadToFinalDestinationURL:error:
classesForSerialization
requestWithURL:cachePolicy:timeoutInterval:
initWithIdentifier:request:applicationGroupIdentifier:priority:
initWithCoder:
decodeIntegerForKey:
encodeInteger:forKey:
encodeWithCoder:
supportsSecureCoding
_applicationEvent
bundleWithURL:
localizedStringForKey:value:table:
date
initWithStartDate:
setStartDate:
decodeObjectOfClass:forKey:
startDate
setEndDate:
endDate
encodeObject:forKey:
timeIntervalSinceDate:
TB,R
elapsedTime
extensionExited
isMoreThan24HoursAgo
_startDate
_endDate
T@"NSDate",&,V_startDate
T@"NSDate",&,V_endDate
Td,R
initWithMessageOperation:
appBundleIdentifier
initWithAppBundleIdentifier:
_appBundleIdentifier
T@"NSString",R,N,V_appBundleIdentifier
initWithNSXPCConnection:error:
grantedInitialBackgroundActivityWithDescriptor:completionHandler:
applicationWasInstalledWithIdentifier:bundleURLPath:completionHandler:
applicationWasUpdatedWithIdentifier:bundleURLPath:completionHandler:
applicationShouldTriggerPeriodicWithIdentifier:bundleURLPath:completionHandler:
runDebugCommand:reply:
connection
grantedInitialBackgroundActivityWithDescriptor:
handleApplicationEvent:identifier:bundleURLPath:
lowercaseString
count
_printDebugState
_debugShutdown
doPeriodicUpdateCheck
_setClearBeforeShutdown
objectAtIndex:
_debugDownloadTime:clear:
scannerWithString:
scanInteger:
scanLocation
whitespaceAndNewlineCharacterSet
stringByTrimmingCharactersInSet:
length
applicationInfoForIdentifier:
_debugConsumeTime:
initWithIdentifier:recordType:expectedFieldKey:expectedFieldValue:assetKey:applicationGroupIdentifier:
defaultContainer
containerIdentifier
defaultRecordZone
zoneID
initWithIdentifier:recordType:expectedFieldKey:expectedFieldValue:assetKey:applicationGroupIdentifier:containerIdentifier:zoneID:databaseScope:priority:
predicateWithFormat:
initWithRecordType:predicate:
initPrivatelyWithApplicationGroupIdentifier:
setPriority:
initWithContainerIdentifier:environment:
setContainerID:
setQuery:
setAssetKey:
setZoneID:
setDatabaseScope:
setMasqueradeIdentifier:
containerID
query
assetKey
databaseScope
masqueradeIdentifier
copyWithZone:
initWithIdentifier:recordType:recordName:assetKey:applicationGroupIdentifier:
_containerID
_query
_assetKey
_zoneID
_databaseScope
_masqueradeIdentifier
T@"CKContainerID",&,N,V_containerID
T@"CKQuery",&,N,V_query
T@"NSString",&,N,V_assetKey
T@"CKRecordZoneID",&,N,V_zoneID
Tq,N,V_databaseScope
T@"NSString",&,N,V_masqueradeIdentifier
setMostRecentError:
setObject:forKeyedSubscript:
mostRecentError
_combineExistingError:newError:
data
response
fileHandle
filePath
fileURLWithPath:
handle
synchronizeAndReturnError:
setFileHandle:
statusCode
absoluteString
allHeaderFields
setResponse:
finishTasksAndInvalidate
expectedContentLength
setFullDownloadSize:
currentRequest
lastPathComponent
stringByAppendingPathComponent:
uniqueFileName
stringByAppendingPathExtension:
initWithFileDescriptor:originalPath:closeOnDealloc:
setData:
fileExistsAtPath:
removeItemAtPath:error:
moveItemAtURL:toURL:error:
dataWithContentsOfURL:options:error:
writeData:
offsetInFile
appendData:
fullDownloadSize
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:didCreateTask:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:downloadTask:didFinishDownloadingToURL:
URLSession:downloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:
URLSession:downloadTask:didResumeAtOffset:expectedTotalBytes:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
initWithNotifyQueue:withDestinationDirectory:uniqueFileName:inBackground:withAuthenticationHandler:withRedirectResponseHandler:withBytesReceivedHandler:usingBlock:
cancelWithResumeData:
setUniqueFileName:
taskCompleted
setTaskCompleted:
inBackground
setInBackground:
_notifyQueue
_stateLock
_destinationDirectory
_notifyBlock
_challengeBlock
_redirectResponseBlock
_bytesReceivedBlock
_uniqueFileName
_taskCompleted
_inBackground
_response
_data
_fileHandle
_fullDownloadSize
_resumeData
_mostRecentError
T@"NSURLResponse",&,V_response
T@"NSMutableData",&,V_data
T@"BAFileHandle",&,V_fileHandle
TB,N,V_uniqueFileName
Tq,V_fullDownloadSize
T@"NSData",&,V_resumeData
T@"NSError",&,N,V_mostRecentError
TB,V_taskCompleted
TB,V_inBackground
initWithURLRequest:withDestinationDirectory:inBackground:withAuthenticationHandler:withRedirectResponseHandler:
_initWithURLRequest:withResumeData:withDestinationDirectory:inBackground:withAuthenticationHandler:withRedirectResponseHandler:
isFileURL
stringByStandardizingPath
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
connectionLock
lock
urlSession
unlock
downloadTask
baURLSessionDelegate
cancelByProducingResumeData:
invalidateAndCancel
setUrlSession:
setBaURLSessionDelegate:
setDownloadTask:
destinationDirectory
useUniqueFileName
sessionWithConfiguration:delegate:delegateQueue:
urlRequest
downloadTaskWithResumeData:
downloadTaskWithRequest:
dataTaskWithRequest:
initWithURLRequest:withDestinationDirectory:inBackground:
setConnectionLock:
setUrlRequest:
setDestinationDirectory:
_useUniqueFileName
_connectionLock
_urlSession
_downloadTask
_baURLSessionDelegate
_urlRequest
T@"NSLock",&,V_connectionLock
T@"NSURLSession",&,V_urlSession
T@"NSURLSessionDownloadTask",&,V_downloadTask
T@"_BAURLSessionDelegate",&,V_baURLSessionDelegate
T@"NSURLRequest",&,N,V_urlRequest
T@"NSString",&,N,V_destinationDirectory
TB,N,V_useUniqueFileName
decodeObjectOfClasses:forKey:
appStoreMetadata
cellularPolicy
descriptorWithAppBundleIdentifier:appStoreMetadata:
setCellularPolicy:
_appStoreMetadata
_cellularPolicy
T@"NSDictionary",R,N,V_appStoreMetadata
TQ,N,V_cellularPolicy
appendFormat:
initWithIdentifier:request:applicationGroupIdentifier:
_request
T@"NSURLRequest",&,V_request
token
blockFired
fireByTimer
block
initWithToken:block:
executeWithSuccessfulDequeue:
setFireByTimer:
_blockFired
_block
_token
_fireByTimer
T@?,R,C,N,V_block
T@"NSUUID",R,N,V_token
T@"NSObject<OS_dispatch_source>",&,V_fireByTimer
TB,R,N,V_blockFired
drain
blockQueue
addObject:
blockQueueLock
__enqueue:
_dequeueNext
drainSpecificWithToken:
awaitingBlockCompletion
setAwaitingBlockCompletion:
enumerateObjectsUsingBlock:
removeObject:
removeAllObjects
initWithIdentifier:
enqueue:
enqueue:waitLimitDate:
consumeToken:
_increment
_decrement
queueRetainCount
_awaitingBlockCompletion
_queueRetainCount
_blockQueueLock
_blockQueue
T@"NSString",R,N,V_identifier
TQ,R,N,V_queueRetainCount
T@"NSLock",R,N,V_blockQueueLock
T@"NSMutableOrderedSet",R,N,V_blockQueue
TB,N,V_awaitingBlockCompletion
identifiersToBlockQueues
removeObjectForKey:
blockQueueWithIdentifier:
invalidateBlockQueue:
_identifiersToBlockQueues
T@"NSMutableDictionary",R,N,V_identifiersToBlockQueues
unionSet:
addObjectsFromArray:
distantPast
setLastDownloadStartDate:
setDownloads:
setStagingDirectory:
stagingDirectory
lastDownloadStartDate
downloads
array
setApplicationIdentifier:
setDownloadCachePath:
state
removeObjectsInArray:
priority
sortUsingComparator:
downloadStartDate
allDownloads
initWithFormat:
appendString:
initWithApplicationIdentifier:delegate:
scheduleDownload:withCompletionHandler:
startForegroundDownload:withCompletionHandler:
cancelDownload:error:
cancelAllDownloads
demoteAllForegroundDownloads
startNextDownload
pauseAllDownloads
numberOfActiveDownloads
numberOfWaitingDownloads
_lastDownloadStartDate
_delegate
_downloads
_stagingDirectory
T@"NSMutableArray",&,V_downloads
T@"NSDate",&,V_lastDownloadStartDate
T@"NSString",&,V_stagingDirectory
Tq,R
T@"NSArray",R
T@"<BADownloadManagerDelegate>",W,V_delegate
rangeOfString:options:
characterSetWithCharactersInString:
invertedSet
_baassets_stringByRemovingLastIdentifierComponent
_baassets_validUTIWithWildcard
initWithFileDescriptor:closeOnDealloc:
setHandle:
setFilePath:
_handle
_filePath
T@"NSFileHandle",&,N,V_handle
T@"NSString",&,N,V_filePath
messageOperation
classForMessageOperation:
setMessageOperation:
versionSupported
setVersionSupported:
unsupportedVersionFailureMessage
setUnsupportedVersionFailureMessage:
_versionSupported
_messageOperation
_unsupportedVersionFailureMessage
Tq,N,V_messageOperation
TB,N,V_versionSupported
T@"NSString",&,N,V_unsupportedVersionFailureMessage
setAsyncClientNotificationQueue:
setConnectionQueue:
setWorkQueue:
initWithCapacity:
setConnections:
setExtensionConnections:
setDownloadQueuesByClientIdentifier:
setApplicationState:
setConnectionReplyQueue:
setUnhandledDownloadEvents:
initWithDelegate:
setRulesEngine:
workQueue
_deserializeState
_pokeScheduler
defaultCenter
_backgroundActivityStateDidChange
addObserver:selector:name:object:
initWithMachServiceName:
setListener:
listener
connectionQueue
_setQueue:
setSpiListener:
spiListener
rulesEngine
serviceName
listener:shouldAcceptNewClientConnection:
listener:shouldAcceptNewSPIConnection:
applicationBundleIdentifier
_checkConnection:hasAllowedTeamIDForIdentifier:
_checkIdentifierHasExtension:
connections
callBlockWhenConnectionReady:onQueue:
valueForEntitlement:
boolValue
connectionReplyQueue
connectionInvalidated
extensionConnections
_connectionReplyQueueForIdentifier:
_downloaderExtensionForApplicationIdentifier:
allowsBackgroundActivity
shouldLaunchExtension
extensionIdentity
setExtensionIdentity:
extensionProcessWithConfiguration:error:
newXPCConnectionWithError:
applicationExtensionState
applicationState
_updateProcessMonitor
_serializeApplicationState
grantApprovalForInitialBackgroundActivityWithCellularPolicy:
_initUniqueWithURL:
infoDictionary
bundleRecordWithBundleIdentifier:allowPlaceholder:error:
updateApplicationWithInfoDictionary:
updateApplicationInformationForIdentifier:bundleURLPath:
manifestURL
applicationSecurityGroups
applicationInstalledWithUpdateInstall:
_applicationIdentifierAllowsBackgroundActivity:
firstObject
scheduleDownload:forClientIdentifier:notifyQueue:completionBlock:
__handleApplicationLaunchedWithInfo:
applicationLaunched
downloadQueuesByClientIdentifier
hasLaunchedApplication
permittedForInitialBackgroundActivity
initialBackgroundCellularPolicy
setPermitInitialCellularDownload:
_serializeDownloadQueues
descriptor
setValues:
setEndowmentNamespaces:
setStateDescriptor:
setEvents:
_processRunningBoardStateUpdate:forProcess:
setUpdateHandler:
monitorWithConfiguration:
predicateMatchingBundleIdentifier:
bundleIdentifier
setPredicates:
updateConfiguration:
bundle
endowmentNamespaces
taskState
exitEvent
context
status
containingBundleRecord
_updateStateForAppExtensionBundleIdentifier:appBundleIdentifier:state:
_updateStateForAppBundleIdentifier:state:
setApplicationExtensionState:
setUserForceQuitApp:
_downloadsInProgress
_scheduleDownloads
unhandledDownloadEvents
arrayWithCapacity:
download
_connectionsForApplicationIdentifier:
isActive
type
eventError
_serializeUndeliveredEvents
allValues
compare:
sortedArrayUsingComparator:
syncDownloads:
downloadIdentifierDidBegin:
downloadIdentifierDidPause:
downloadIdentifier:didReceiveChallenge:authChallengeHandler:withCompletion:
downloadIdentifier:didWriteBytes:totalBytesWritten:totalBytesExpectedToWrite:
asyncClientNotificationQueue
downloadIdentifier:didFailWithError:wasHandled:
initWithEventType:download:error:
downloadIdentifierDidFinish:sandboxExtensionToken:wasHandled:
initWithApplicationInfo:
isValidTimeForDownloads
_pauseDownloads
shouldDoPeriodicCheck
applicationExtensionRecords
extensionPointRecord
applicationTeamIdentifier
setApplicationTeamIdentifier:
setDebugClearState:
URLForDirectory:inDomain:appropriateForURL:create:error:
_shutdownAgent
isApplication
_deserializeApplicationList
_deserializeDownloadQueues
_deserializeUndeliveredEvents
extensionContainingApplicationList
dataWithContentsOfURL:
initForReadingFromData:error:
setDecodingFailurePolicy:
hasSentApplicationInstalledMessage
error
setAgentCore:
addEntriesFromDictionary:
setWithObject:
setByAddingObjectsFromSet:
initRequiringSecureCoding:
encodedData
writeToURL:options:error:
_serializeState
debugClearState
_clearState
setDebugValidityTimeOverride:
listener:shouldAcceptNewConnection:
downloadTimeValidityDidChange
connectionDisconnected:
downloaderExtensionForApplicationIdentifier:
applicationExtensionStateForIdentifier:
applicationStateForIdentifier:
handleApplicationLaunched:
downloadForIdentifier:forClientIdentifier:
downloadsForIdentifier:
startForegroundDownload:forClientIdentifier:completionBlock:
cancelDownload:forClientIdentifier:completionBlock:
lastStartDate
setLastStartDate:
_debugClearState
_asyncClientNotificationQueue
_connectionQueue
_workQueue
_listener
_spiListener
_applicationState
_connections
_connectionReplyQueue
_unhandledDownloadEvents
_extensionConnections
_rulesEngine
_lastStartDate
_downloadQueuesByClientIdentifier
T@"NSObject<OS_dispatch_queue>",&,V_asyncClientNotificationQueue
T@"NSObject<OS_dispatch_queue>",&,V_connectionQueue
T@"NSObject<OS_dispatch_queue>",&,V_workQueue
T@"NSXPCListener",&,V_listener
T@"NSXPCListener",&,V_spiListener
T@"NSMutableArray",&,V_applicationState
T@"NSMutableArray",&,V_connections
T@"NSMutableDictionary",&,V_connectionReplyQueue
T@"NSMutableArray",&,V_unhandledDownloadEvents
T@"NSMutableDictionary",&,V_extensionConnections
T@"BAAgentDownloadRulesEngine",&,V_rulesEngine
T@"NSMutableDictionary",&,V_lastStartDate
T@"NSMutableDictionary",&,V_downloadQueuesByClientIdentifier
TB,V_debugClearState
setRestrictedDownloadSizeRemaining:
numberWithUnsignedLongLong:
agentCore
_agentCore
T@"BAAgentCore",W,V_agentCore
setRulesEngineWorkQueue:
setLastDownloadIsValidValue:
powerRunLoopSource
setPowerRunLoopSource:
rulesEngineWorkQueue
setDebugRuleValidity:
debugRuleValidity
isConnectedToPower
_setupXPCActivity
_setupPowerSourceMonitor
_takePowerAssertion
_dropPowerAssertion
lastDownloadIsValidValue
batteryLevel
_powerSourceHasChanged
networkingIsCheap
setNetworkingIsCheap:
_networkingIsCheap
_lastDownloadIsValidValue
_powerAssertionID
_debugRuleValidity
_powerRunLoopSource
_rulesEngineWorkQueue
T@"<BAAgentDownloadRulesEngineDelegate>",W,V_delegate
TB,V_networkingIsCheap
T^{__CFRunLoopSource=},V_powerRunLoopSource
TB,V_lastDownloadIsValidValue
T@"NSObject<OS_dispatch_queue>",&,V_rulesEngineWorkQueue
TI,V_powerAssertionID
Ti,V_debugRuleValidity
setDownload:
dictionary
setRecordErrors:
setResponseQueue:
setStateLock:
stateLock
recordErrors
setRecordFound:
setAssetFound:
setAssetURL:
setAssetSize:
initWithContainerID:
setContainer:
setDiscretionaryNetworkBehavior:
setQualityOfService:
setAutomaticallyRetryNetworkFailures:
setApplicationBundleIdentifierOverrideForContainerAccess:
setOperationConfiguration:
_newOperationQuery
setShouldFetchAssetContent:
database
_downloadFailedWithError:
initWithCursor:
addOperation:
recordFound
enumerateKeysAndObjectsUsingBlock:
assetFound
_consumeAvailableDownloadSize
_downloadActualAsset
setQueryCompletionBlock:
size
setRecordMatchedBlock:
setCurrentOperation:
downloadDidPause
currentOperation
downloadFailedWithError:
downloadSucceededWithURL:
assetSize
assetURL
_downloadSucceededWithURL:
fileURL
initWithQuery:
operationConfiguration
setConfiguration:
container
privateCloudDatabase
sharedCloudDatabase
publicCloudDatabase
setDatabase:
setDesiredKeys:
setResultsLimit:
initWithDownload:withDelegate:
startDownloadWithError:
_recordFound
_assetFound
_download
_responseQueue
_operationConfiguration
_currentOperation
_recordErrors
_assetSize
_assetURL
T@"<BACloudKitDownloadManagerDelegate>",W,N,V_delegate
T@"BACloudKitDownload",W,N,V_download
T@"NSObject<OS_dispatch_queue>",&,N,V_responseQueue
T@"NSLock",&,N,V_stateLock
T@"CKOperationConfiguration",&,N,V_operationConfiguration
T@"CKQueryOperation",&,N,V_currentOperation
T@"NSMutableDictionary",&,N,V_recordErrors
TB,N,V_recordFound
TB,N,V_assetFound
TQ,N,V_assetSize
T@"NSURL",&,N,V_assetURL
unsignedIntegerValue
messageVersion
numberWithUnsignedInteger:
archivedDataWithRootObject:requiringSecureCoding:error:
archivedRepresentationWithError:
setMessageVersion:
_messageVersion
TQ,N,V_messageVersion
setType:
setEventError:
containsValueForKey:
typeString
_type
_eventError
Tq,V_type
T@"BADownload",&,V_download
T@"NSError",&,V_eventError
initWithSuiteName:
sharedConnection
isAutomaticAppUpdatesAllowed
processInfo
isLowPowerModeEnabled
extensionPointIdentifierQuery:
executeQuery:
entitlementNamed:ofClass:
UIBackgroundModes
initWithIdentifier:applicationTeamIdentifier:
setAmountDownloaded:
setDownloadAllowance:
setPermittedForInitialBackgroundActivity:
setInitialBackgroundCellularPolicy:
setHasSentApplicationInstalledMessage:
setHasLaunchedApplication:
setExtensionRuntimeEvents:
setLastPeriodicCheckTime:
setLastApplicationLaunchTime:
setAllowedDownloadDomains:
setAllowedDownloadDomainWildcards:
setManifestURL:
setAppInfoLock:
appInfoLock
setName:
unsignedLongLongValue
decodeBoolForKey:
_populateAllowedDomainInfoWithArray:
amountDownloaded
downloadAllowance
encodeBool:forKey:
lastApplicationLaunchTime
lastPeriodicCheckTime
_serializableAllowedDomainInfo
extensionRuntimeEvents
URLWithString:
executeQueries:
hasPrefix:
initWithURL:requireValid:error:
groupContainerURLs
allKeys
intersectSet:
allObjects
_remainingDownloadAllowance
applicationForIdentifierAllowsBackgroundActivity:
currentRuntime
setCurrentRuntime:
dateWithTimeIntervalSinceNow:
arrayByAddingObjectsFromArray:
userForceQuitApp
resetExtensionRuntime
donePeriodicCheck
_userForceQuitApp
_hasSentApplicationInstalledMessage
_hasLaunchedApplication
_permittedForInitialBackgroundActivity
_applicationExtensionState
_applicationIdentifier
_lastPeriodicCheckTime
_lastApplicationLaunchTime
_initialBackgroundCellularPolicy
_applicationTeamIdentifier
_allowedDownloadDomains
_allowedDownloadDomainWildcards
_manifestURL
_amountDownloaded
_downloadAllowance
_appInfoLock
_extensionRuntimeEvents
_currentRuntime
T@"NSString",&,V_applicationIdentifier
TQ,V_amountDownloaded
TQ,V_downloadAllowance
T@"NSDate",&,V_lastPeriodicCheckTime
TB,V_permittedForInitialBackgroundActivity
TQ,V_initialBackgroundCellularPolicy
TB,V_hasLaunchedApplication
T@"NSDate",&,V_lastApplicationLaunchTime
T@"NSLock",&,V_appInfoLock
T@"NSArray",&,V_allowedDownloadDomains
T@"NSArray",&,V_allowedDownloadDomainWildcards
T@"NSURL",&,V_manifestURL
T@"NSMutableArray",&,V_extensionRuntimeEvents
T@"BAExtensionRuntime",&,V_currentRuntime
TB,V_hasSentApplicationInstalledMessage
TB,V_userForceQuitApp
Tq,V_applicationState
Tq,V_applicationExtensionState
T@"NSString",&,V_applicationTeamIdentifier
setUniqueIdentifier:
setDownloadManager:
downloadManager
_downloadDidPause
restrictedDownloadSizeRemaining
_restrictedDownloadSizeRemaining
T@"NSNumber",&,V_restrictedDownloadSizeRemaining
setConnection:
_setupConnection
_connection
T@"NSXPCConnection",&,V_connection
versionAllowed
failureReason
initWithVersionAllowed:failureExplanation:
_versionAllowed
_failureReason
TB,R,N,V_versionAllowed
T@"NSString",R,N,V_failureReason
setApplicationGroupIdentifier:
allocWithZone:
bytes
setDownloadStartDate:
transaction
_downloadLockOpaque
_isForegroundDownload
_permitInitialCellularDownload
_priority
_internalState
_uniqueIdentifier
_applicationGroupIdentifier
_stagedDownloadedFileURL
_downloadStartDate
_downloadCachePath
_session
_downloadError
_transaction
Tq,V_priority
T@"NSString",&,N,V_identifier
T@"NSString",&,N,V_uniqueIdentifier
T@"NSString",&,V_applicationGroupIdentifier
T@"NSDate",&,V_downloadStartDate
T@"NSString",&,V_downloadCachePath
T^{os_unfair_lock_s=I},R
T@"BAURLSession",&,V_session
T@"NSError",&,V_downloadError
TB,V_isForegroundDownload
TB,V_permitInitialCellularDownload
T@"NSObject<OS_dispatch_queue>",&,V_responseQueue
T@"NSObject<OS_os_transaction>",&,V_transaction
Tq,R,N
currentDownloads:
scheduleDownload:reply:
performWithExclusiveControlBeforeDate:handler:
performWithExclusiveControlWithHandler:
exclusiveControlExitedWithToken:
startForegroundDownload:reply:
cancelDownload:reply:
setClientWorkQueue:
setClientHandlerQueue:
clientWorkQueue
_validateAndSetClientIdentifier
setExclusiveAccessBlockQueue:
clientHandlerQueue
removeDownloadIdentifier:
downloadIdentifier:didReceiveChallenge:authChallengeHandler:
lastExclusiveAccessBlockToken
exclusiveAccessBlockQueue
connectionIsValid
_entitledForCloudKitWithDownload:outError:
setLastExclusiveAccessBlockToken:
stringWithUTF8String:
bundleRecordForAuditToken:error:
setClientBundleIdentifier:
clientBundleIdentifier
setApplicationBundleIdentifier:
setIsApplication:
applicationProxyForIdentifier:
initWithApplicationProxy:
unauthoritativeTrustState
setSigningIdentifier:
signingIdentifier
setConnectionIsValid:
_isApplication
_connectionIsValid
_applicationBundleIdentifier
_clientBundleIdentifier
_clientHandlerQueue
_clientWorkQueue
_signingIdentifier
_exclusiveAccessBlockQueue
_lastExclusiveAccessBlockToken
T@"NSObject<OS_dispatch_queue>",&,V_clientHandlerQueue
T@"NSObject<OS_dispatch_queue>",&,V_clientWorkQueue
TB,V_isApplication
TB,V_connectionIsValid
T@"NSString",&,V_applicationBundleIdentifier
T@"NSString",&,V_clientBundleIdentifier
T@"NSString",&,V_signingIdentifier
T@"BABlockQueue",&,V_exclusiveAccessBlockQueue
T@"NSUUID",&,V_lastExclusiveAccessBlockToken
v8@?0
https
v24@?0@"NSURLAuthenticationChallenge"8@?<v@?q@"NSURLCredential">16
v36@?0Q8Q16q24B32
BUG IN BackgroundAssets: BAURLDownload returned an NSData, which is highly unexpected.
v48@?0@"NSURL"8@"NSData"16@"NSURLResponse"24@"NSData"32@"NSError"40
com.apple.backgroundassets.extension.%@.shutdown_queue
v16@?0@"NSError"8
v12@?0B8
-[BADownloaderExtensionProxy requestDownloadsWithContentRequest:manifestURL:extensionInfo:]
-[BADownloaderExtensionProxy requestDownloadsWithContentRequest:manifestURL:extensionInfo:]_block_invoke
-[BADownloaderExtensionProxy sendAuthenticationChallenge:download:completionHandler:]_block_invoke
v24@?0q8@"NSURLCredential"16
-[BADownloaderExtensionProxy extensionWillTerminate]_block_invoke
-[BADownloaderExtensionProxy backgroundDownload:failedWithError:completionHandler:]_block_invoke
-[BADownloaderExtensionProxy backgroundDownload:finishedWithSandboxToken:completionHandler:]_block_invoke
wakeupForTokenWithReply should never be called on the proxy object, it is for internal use only
Extension Proxy
Identifier: %@
PID: %d
Extension Termination Time: %@ (%.2lf seconds remaining)
FileURL
promoteToForeground is not implemented on BADownload as it is abstract.
demoteToBackground is not implemented on BADownload as it is abstract.
pauseDownload is not implemented on BADownload as it is abstract.
cancelDownload is not implemented on BADownload as it is abstract.
cancelDownloadSilently is not implemented on BADownload as it is abstract.
startDownloadWithDelegate is not implemented on BADownload as it is abstract.
PreventUserIdleSystemSleep
Downloading - %@
Library/Caches/com.apple.BackgroundAssets
BAFile-%@
%@.%@
%@-%ld.%@
SourceURL
DestURL
%@.Manifest-%@
applicationEvent
com.apple.backgroundassets.error
/System/Library/Frameworks/BackgroundAssets.framework
BAError
startDate
endDate
BAApplicationIdentifier
BAAgentSystemConnectionErrorDomain
Invalid application identifier supplied: %@
command
arguments
state
shutdown
force_periodic
reset
downloads-allowed
clear
consume-extension-time
reset-extension-time
System Connection
PID: %d
Non BAURLDownload passed to syncTo for BAURLDownload
BUG IN CLIENT OF BackgroundAssets: BACloudKitDownload cannot be constructed using -init.
Name
expectedFieldKey must be a valid string.
expectedFieldValue cannot be passed in as nil.
expectedFieldValue must be of type: NSString, NSNumber, NSDate, NSData, or NSArray.
%@ == %%@
NSString *  must be a valid unique string.
Provided query must be a valid CKQuery.
Provided assetKey must be a valid string.
Provided containerIdentifier must be a valid string.
Provided CKRecordZoneID must be a valid object.
com.apple.developer.icloud-container-environment
production
BACKD.ContainerID
BACKD.query
BACKD.assetKey
BACKD.zoneID
BACKD.databaseScope
masqueradeIdentifier
BAURLSessionErrorDomain
ResponseStatusCode
ResponseHTTPHeaders
com.apple.BackgroundAssets.BAURLSession.DefaultNotifyQueue
BAUnique-%@
Destination directory must be a file URL.
Destination directory must exist and be a valid directory.
v16@?0@"NSData"8
A queue must be passed to _startAsyncDownloadNotifyingOnQueue:
appBundleIdentifier
appStoreMetadata
cellularPolicy
BUG IN CLIENT OF BackgroundAssets: BAURLDownload cannot be constructed using -init.
request must be a URLRequest.
request must have a valid URL.
request can only download over HTTPS.
request must be secure coding compliant.
identifier can not be nil
identifier must be a string.
request
URL: %@
com.apple.backgroundassets
system
client_connection
download
v32@?0@"BABlock"8Q16^B24
BABlockQueue retain count is being decremented past 0.
Caller invoked invalidateBlockQueue on BABlockQueueManager with an object that was not a BABlockQueue.
com.apple.backgroundassets.downloadstaging/%@
identifier
lastDownloadStartDate
downloads
q24@?0@"BADownload"8@"BADownload"16
%@ (%p) - %lu Downloads {
%@ (%p)
Application Identifier: %@
Downloads (%lu): {
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-.
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-.*
BAServerMessageOperation
com.apple.backgroundassets.system
com.apple.backgroundassets.appstore
kKeepAppsUpToDateEnabledChangedNotification
com.apple.backgroundassets.agentcore.clientnotification.async
com.apple.backgroundassets.agentcore.connectionqueue
com.apple.backgroundassets.agentcore.workqueue
com.apple.frontboard.visibility
v32@?0@"RBSProcessMonitor"8@"RBSProcessHandle"16@"RBSProcessStateUpdate"24
v16@?0@"<RBSProcessMonitorConfiguring>"8
baagent.redeliverevents
q24@?0@"BADownloadQueue"8@"BADownloadQueue"16
-[BAAgentCore download:failedWithError:]_block_invoke
-[BAAgentCore download:finishedWithFileURL:]_block_invoke
ApplicationState.bin
DownloadQueues.bin
UndeliveredEvents.bin
q24@?0@"BAAgentClientConnection"8@"BAAgentClientConnection"16
baagent.deserializestate
Application State
Queues
Undelivered Events
baagent.serializestate
baagent.serializestate.downloadqueues
baagent.serializestate.applicationstates
baagent.serializestate.undeliveredevents
com.apple.backgroundassets.%@.reply
com.apple.backgroundassets.rulesengine
Power Source State
AC Power
Current Capacity
com.apple.backgroundassets.periodic_check
v16@?0@"NSObject<OS_xpc_object>"8
Background assets - rules engine
com.apple.BACloudKitDownloadManager.ResponseQueue
v32@?0@"CKRecordID"8@"NSError"16^B24
v24@?0@"CKQueryCursor"8@"NSError"16
v32@?0@"CKRecordID"8@"CKRecord"16@"NSError"24
BAMessageVersion
BUG IN BackgroundAssets: BAUnhandledDownloadEvent initialized with a failure event but a nil error.
type
eventError
BUG IN BackgroundAssets: BAUnhandledDownloadEvent initialized from coder as a failure event but with a nil error.
Download Finished
Download Failed
Unknown
Event: %@ - Error %@ - Download %@
Event: %@ - Download %@
com.apple.mt
KeepAppsUpToDateAppList
fetch
%@ App Info Lock
extensionRuntimeEvents
Application Identifier: %@
Allowed Initital Download Amount: %llu
Amount Downloaded: %llu
Has Run Installed: %@
Allowed Domains: %@
Last Check Time: %@
App Has Been Launched: %@
Last Launch Time: %@
Extension Runtime In Last 24h: %lf
BACloudKitDownload.%@.%@
BUG IN CLIENT OF BackgroundAssets: BAAppExtensionInfo cannot be constructed using -init.
restrictedDownloadSizeRemaining
com.apple.backgroundassets.user
com.apple.developer.team-identifier
applicationIdentifier
applicationTeamIdentifier
amountDownloaded
downloadAllowance
permittedForInitialBackgroundActivity
initialBackgroundCellularPolicy
hasSentApplicationInstalledMessage
hasLaunchedApplication
lastApplicationLaunchTime
userForceQuitApp
lastPeriodicCheckTime
allowedDownloadDomains
manifestURL
com.apple.background-asset-downloader-extension
BAManifestURL
BAInitialDownloadRestrictions
BADownloadAllowance
BADownloadDomainAllowList
BAServerVersionSupported
BAFailureReason
BAClientMessageOperation
BUG IN CLIENT OF BackgroundAssets: BADownload cannot be constructed using -init.
internalState
priority
uniqueIdentifier
applicationGroupIdentifier
stagedDownloadedFileURL
downloadFailureError
com.apple.BackgroundAssets.BADownload+Agent.ResponseQueue
resumeData
downloadCachePath
isRestrictedDownload
permitInitialCellularDownload
Provided applicationGroupIdentifier must be a valid string.
%@.%@.%@
%@ (%p) - %@
%@ (%p) - %@
Silently Failed
Failed
Created
Pausing
Paused
Canceling
Waiting
Download Starting...
Download backgrounded and waiting on NSURLSession
Downloading
Finished
State: %@
Priority: %lu
Unique identifier: %@
App Group identifier: %@
Staged file url: %@
Application identifier: %@
Download error: %@
Download start time: %@
Download cache path: %@
BAURLSession object: %@
Resume data: %p, %lu
Is restricted download: %@
Is foreground download: %@
Is initial cellular permitted: %@
%d.%@.worker
%d.%@.handler
v20@?0B8@"NSUUID"12
EXAppExtensionAttributes
NSExtension
com.apple.developer.icloud-services
CloudKit
com.apple.developer.icloud-container-identifiers
v20@?0B8@"NSError"12
-[BAAgentClientConnection syncDownloads:]_block_invoke
-[BAAgentClientConnection removeDownloadIdentifier:]_block_invoke
-[BAAgentClientConnection downloadIdentifierDidBegin:]_block_invoke
-[BAAgentClientConnection downloadIdentifierDidPause:]_block_invoke
-[BAAgentClientConnection downloadIdentifier:didWriteBytes:totalBytesWritten:totalBytesExpectedToWrite:]_block_invoke
com.apple.BAAgentClientConnection.AuthChallengeWaiter
-[BAAgentClientConnection downloadIdentifier:didReceiveChallenge:authChallengeHandler:withCompletion:]_block_invoke_2
-[BAAgentClientConnection downloadIdentifier:didFailWithError:wasHandled:]_block_invoke
-[BAAgentClientConnection downloadIdentifierDidFinish:sandboxExtensionToken:wasHandled:]_block_invoke
Client Connection
App Identifier: %@
Client Identifier: %@
PID: %d
Is Client App: %@
Download %{public}@ is restricted, validating.
Download %{public}@ rejected based on domain check.
BAURLDownload+Agent: File data was returned, which is invalid. Daemon will crash. Download: %{public}@. Data: %{public}@
Pausing download %{public}@ because we are on cellular.
Pausing download %{public}@ because our network is expensive.
Extension interrupted for identifier: %{public}@
Extension invalidated for identifier: %{public}@
Attempting to wakeup extension connection.
Fatal: Extension failed to send wakeup message. %{public}@
Fatal: Wakeup extension timed out.
Wakeup extension succeeded.
Fatal: Wakeup extension errored out.
Failed in %s for: %{public}@. Unable to extend sandbox for manifest URL: %{public}@
Failed to send %s for: %{public}@ error: %{public}@
Terminating connection to extension: %{public}@
Failed to take power assertion for rules engine.
Failed to load container for app group identifier: %{public}@
consume-extension-time was called without the required 2 arguments, ignoring.
Invalid unit string: %{public}@
Should be 'm' or 'h'.
Added %ld seconds to %{public}@
Removing %ld seconds to %{public}@
reset-extension-time was called without the required singular identifier argument, ignoring.
reset-extension-time requires an identifier, ignoring.
Unable to get applicaiton runtime info for identifier: %{public}@
Resetting extension runtime for %{public}@
BAURLSession: Unable to create destination directory due to error: %@ - Falling back to NSTemporaryDirectory()
Rejecting download (%{public}@ , %{public}@) because it is already scheduled in (%{public}@).
Requested foreground on download that does not appear to be scheduled.
Download: %{public}@
Client: %{public}@
Started listening for clients.
Started listening for xpc activity.
Connection to service: %{public}@ from pid:%{public}d has invalid service name.
Client connection accepted from pid:%{public}d
Client connection rejected (no extension, signing error or team-id mismatch) from pid:%{public}d
New SPI connection from pid:%{public}d
System connection accepted from pid:%{public}d
System connection from pid:%{public}d failed to init with error: %{public}@
System connection from pid:%{public}d rejected due to lack of entitlement.
Rejecting talking to extension %{public}@ because the background activity is not allowed.
Rejecting launching extension for %{public}@ because it has already run too long.
Rejecting launch of extension for %{public}@ because an extension identity could not be created.
Failed to get extension process: %{public}s
Extension representation failed to generate XPC connection: %{public}s
Extension representation failed to generate XPC connection with unknown error.
Rejected extension connection (%{public}@) for mismiatched team id
failed to establish connection for extension (%{public}@)
Unable to update application info. (bundle identifier: %{public}@) %{public}@
Unable to update application info, bundle record returned is not an LSApplicationRecord. (bundle identifier: %{public}@)
Unable to update application info, no info dictionary could be found. (bundle identifier: %{public}@)
Event (%ld) dropped for client (%{public}s) failed because client Info dictionary is not accessible or valid.
Event (%ld) dropped for client (%{public}s) failed because client Info dictionary is missing its '%{public}@' key.
Event (%ld) dropped for client (%{public}s) failed because the app and extension do not share any application groups.
Event (%ld) ignored for client (%{public}s) because background activity is not allowed.
Event (%ld) for client (%{public}s) is scheduling manifest for download.
Event (%ld) failed for client (%{public}s) because the manifest URL (%{public}@) could not be enqueued. %{public}@
Scheduled download identifier: %{public}@ for client: %{public}@
Cannot observe app with identifier (%{public}@), because the app is not installed. %@
Unable to observe extension for (%{public}@), the BAApplicationInfo is missing an extensionIdentity.
Unable to get RBS state because fetching a LSBundleRecord for (%{public}@) failed. %{public}@
Unable to get RBS state for extension (%{public}@). Containing bundle record is not an application record. (Class:%{public}@)
Application (%{public}@) was quit by the user.
Application (%{public}@) has terminated.
Application (%{public}@) is backgrounded.
Application (%{public}@) allows BG activity, pausing any foreground downloads for background demotion.
Application (%{public}@) does NOT allow BG activity, canceling all active downloads.
Application (%{public}@) is active. (Foreground = %{public}@)
Dropping unknown unhandled event type in list: %{public}@
Download did begin: %{public}@
Download did begin finished: %{public}@
Download did pause: %{public}@
Download did pause finished: %{public}@
Timed out messaging client for '%{public}@' to answer auth challenge for download: %{public}@
Cannot message extension for '%{public}@' to answer auth challenge, canceling challenge for download: %{public}@
Cannot message extension for '%{public}@' to answer auth challenge, performing default handling for download: %{public}@
Download did fail: %{public}@ with error: %{public}@
Added undelivered event: %{public}@
Failed to notify anyone about failed download: %{public}@
%s, Will not message extension for %{public}@ because background activity is disabled.
Download did fail done
Download did finish: %{public}@
Warning: No sandbox token issued for finished download: %{public}@ URL: %{public}@ for client: %{public}@. -- %{public}s
Warning: No sandbox token issued for extension for finished download: %{public}@ URL: %{public}@ for client: %{public}@
Failed to notify extension about failed manifest download: %{public}@
Client failed to enqueue requested downloads for manifest: %{public}@ with content request: %ld
Extension handled the manifest download, removing download. %{public}@
Failed to notify extension about finished download: %{public}@
Extension handled the background download, removing download. %{public}@
Failed to find extension for installed application, removing download. %{public}@
Result was handled by a client of BADownloadManager, removing download. %{public}@
Download did finish done.
Failed to get bundle record for identifier: %{public}@ error: %{public}@
Bundle for %{public}@ does not have a extension record. Blocking.
Bundle for %{public}@ does not have a downloader extension. Blocking.
Bundle for %{public}@ is not application or extension. Blocking.
Debug shutdown called. Preparing to exit
Dumping debug agent state:
Allowed time for downloads: %{public}@
**** Application State Info ****
**** Connection State Info  ****
**** Extension Connection State Info ****
**** Download Queue State Info ****
**** ---------------------- ****
**** ------------------------------- ****
Failed to deserialize application state: %{public}@
failed to open application state URL: %{public}@
Failed to load serialized application state with error: %{public}@
Failed to deserialize download queues: %{public}@
failed to open download queue URL: %{public}@
Failed to load serialized downloads with error: %{public}@
Failed to deserialize events file: %{public}@
failed to open deserialize events URL: %{public}@
Failed to load deserialize events with error: %{public}@
Failed to serialize download queues: %{public}@
Failed to serialize application state: %{public}@
Serializing state and shutting down.
Clear state set, will clear state..
Requested background activity for application identifier that is not known to BAAgentCore. %{public}@
Failed to get power sources. Assume connected to power.
Failed to get power sources. Assume full battery.
A cursor was returned, this is unexpected for 1 result; is the operation hung? This is why.
CKRecordID: %{public}@ returned an error: %{public}@
Denying background activity for %{public}@ background updates are disabled.
Denying background activity for %{public}@ because device is in low power mode.
Denying background activity for %{public}@ background activity for this app is disabled.
Application (%{public}@) lacks background fetch entitlement. Will not use extension.
Application identifier (%{public}@) is not valid Universal Type Identifier. Failing.
Granting approval for initial background activity for: %{public}@
Application was updated: %{public}@
Application was installed: %{public}@
Failed to get represented extension point with queries: %s
Extension (%{public}@) is not part of a application bundle. Failing.
Application bundle (%{public}@) is not the same as the bundle id (%{public}@). Failing.
Background activity denied for (%{public}@) because the app is not running.
Background activity denied for (%{public}@) because the user has not launched the app.
Resetting extension runtime for: %{public}@
Download %{public}@ rejected as we are out of download allowance.
Dropping download because application identifier is invalid: %{public}@
Failed to consume token: %@ for client: %{public}@
Failed to get executable path from audit token.
Executable path from audit token is invalid or is of an empty length.
Unable to construct a SecTaskRef from client audit token.
Failed to get client application static code object, error OSStatus: %d
Failed to get client application code signing information, error OSStatus: %d
Code signed Info.plist is nil
Code signed bundle identifier is nil
LSBundleRecord returned is not an expected LSApplicationExtensionRecord. Class:%{public}@
LSBundleRecord.bundleRecordForAuditToken returned a record without a bundle identifier.
Failed to get application record. Falling back to last component removal.
App identifier is nil or 0 length
Failed to lookup LSBundleRecord for audit token. %{public}@
LSBundleRecord returned is not an expected LSApplicationRecord. Class:%{public}@
Bundle identifier from LSApplicationRecord is nil. %{public}@
Application (%{public}@) is not found in the LaunchServices database and cannot be used with BackgroundAssets.
Application (%{public}@) is not registered with FrontBoardServices and cannot be used with BackgroundAssets.
Application (%{public}@) is not trusted on this iOS device and cannot be used with BackgroundAssets. Trust State: %{public}@
App bundle identifier (%{public}@) is not valid Universal Type Identifier. Disconnecting.
Client bundle identifier (%{public}@) is not valid Universal Type Identifier. Disconnecting.
Client is missing signing identifier, client must be signed with an identifier to use BackgroundAssets. %{public}@
Failed to send %s. error: %{public}@
Agent
BADownloadAgentProtocol
BADownloaderExtensionSyncProtocol
NSObject
BADownloaderExtensionClientSyncProtocol
BADownloaderExtensionProxy
VeryPrivate
BAManifestDownload
BAExtensionRuntime
NSSecureCoding
NSCoding
BADeveloperDebugClientMessageVersionCheck
BADeveloperDebugClientMessageApplicationInstalled
BADeveloperDebugClientMessageApplicationUpdated
BADeveloperDebugClientMessageApplicationPeriodicCheck
BAAgentSystemXPCProtocol
BAAgentSystemConnection
BACloudKitDownload
NSCopying
_BAURLSessionDelegate
NSURLSessionDelegate
NSURLSessionDownloadDelegate
NSURLSessionTaskDelegate
NSURLSessionDataDelegate
BAURLSession
BAAppStoreGrantDescriptor
BAURLDownload
BABlock
BABlockQueue
BABlockQueueManager
BADownloadQueue
BADownloadManagerDelegate
BAAgentUtilities
BAUtilities
BAFileHandle
BADeveloperDebugServerMessage
BAAgentCore
NSXPCListenerDelegate
BAAgentDownloadRulesEngineDelegate
BAAgentKeyedUnarchiver
BAAgentDownloadRulesEngine
BACloudKitDownloadManager
BADeveloperDebugMessage
BAUnhandledDownloadEvent
BAApplicationInfo
BACloudKitDownloadManagerDelegate
BAAppExtensionInfo
BAAgentConnection
BADeveloperDebugServerMessageVersionCheck
BADeveloperDebugClientMessage
BADownload
BAAgentKeyedArchiver
BAAgentClientXPCProtocol
BADownloadManagerSyncProtocol
BAAgentClientConnection
v16@0:8
B24@0:8@16
v40@0:8@16@24@32
v32@0:8@16@24
v44@0:8Q16Q24q32B40
v32@0:8@16@?24
v24@0:8@16
v28@0:8@16B24
q16@0:8
v24@0:8q16
@16@0:8
B24@0:8@"<BADownloadManagerDelegate>"16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@?16
v56@0:8q16@24@32@40@?48
v40@0:8@16@24@?32
v24@0:8@?<v@?B>16
v56@0:8q16@"NSURL"24@"NSString"32@"BAAppExtensionInfo"40@?<v@?>48
v40@0:8@"NSURLAuthenticationChallenge"16@"BADownload"24@?<v@?q@"NSURLCredential">32
v40@0:8@"BADownload"16@"NSError"24@?<v@?B>32
v40@0:8@"BADownload"16@"NSString"24@?<v@?B>32
v40@0:8@"NSURL"16@"NSString"24@?<v@?B@"NSError">32
@40@0:8@16@24@32
B40@0:8q16@24@32
B40@0:8@16@24@?32
@28@0:8@16B24
v24@0:8Q16
v20@0:8B16
@"NSString"
@"NSObject<OS_dispatch_queue>"
@"NSXPCConnection"
@"BAApplicationInfo"
@"NSTimer"
@"_EXExtensionProcess"
B32@0:8^@16^@24
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
d16@0:8
@"NSDate"
v32@0:8@"BAAppStoreGrantDescriptor"16@?<v@?B@"NSError">24
v40@0:8@"NSString"16@"NSURL"24@?<v@?B@"NSError">32
v32@0:8@"NSDictionary"16@?<v@?>24
@32@0:8@16^@24
@24@0:8^{_NSZone=}16
@56@0:8@16@24@32@40@48
@64@0:8@16@24@32@40@48@56
@96@0:8@16@24@32@40@48@56@64@72q80q88
@"CKContainerID"
@"CKQuery"
@"CKRecordZoneID"
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@16@24q32q40
v40@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24@"NSURL"32
v56@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24q32q40
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
@72@0:8@16@24B32B36@?40@?48@?56@?64
@32@0:8@16@24
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSURLResponse"
@"NSMutableData"
@"BAFileHandle"
@"NSData"
@"NSError"
@36@0:8@16@24B32
@44@0:8@16@24B32@?36
@52@0:8@16@24B32@?36@?44
@60@0:8@16@24@32B40@?44@?52
v48@0:8@16@24@?32@?40
@"NSLock"
@"NSURLSession"
@"NSURLSessionDownloadTask"
@"_BAURLSessionDelegate"
@"NSURLRequest"
@"NSDictionary"
@48@0:8@16@24@32q40
@32@0:8@16@?24
B20@0:8B16
@?16@0:8
@"NSUUID"
@"NSObject<OS_dispatch_source>"
@24@0:8@?16
v32@0:8@?16@24
@"NSMutableOrderedSet"
@"NSMutableDictionary"
v48@0:8@16q24q32q40
v24@0:8@"BADownload"16
v48@0:8@"BADownload"16q24q32q40
v40@0:8@"BADownload"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v32@0:8@"BADownload"16@"NSError"24
v32@0:8@"BADownload"16@"NSURL"24
B32@0:8@16^@24
@"<BADownloadManagerDelegate>"
@"NSMutableArray"
@32@0:8i16@20B28
@"NSFileHandle"
#24@0:8q16
@24@0:8q16
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
q24@0:8@16
v40@0:8q16@24@32
v40@0:8@16@24q32
v32@0:8@16q24
v24@0:8B16B20
@"NSXPCListener"
@"BAAgentDownloadRulesEngine"
@"BAAgentCore"
v20@0:8i16
f16@0:8
^{__CFRunLoopSource=}16@0:8
v24@0:8^{__CFRunLoopSource=}16
I16@0:8
v20@0:8I16
i16@0:8
@"<BAAgentDownloadRulesEngineDelegate>"
^{__CFRunLoopSource=}
B24@0:8^@16
@"<BACloudKitDownloadManagerDelegate>"
@"BACloudKitDownload"
@"CKOperationConfiguration"
@"CKQueryOperation"
@"NSURL"
@24@0:8^@16
@40@0:8q16@24@32
@"BADownload"
B24@0:8Q16
v24@0:8d16
@"NSArray"
@"BAExtensionRuntime"
v24@0:8@"NSError"16
v24@0:8@"NSURL"16
@"NSNumber"
@28@0:8B16@20
^{os_unfair_lock_s=I}16@0:8
@"BAURLSession"
@"NSObject<OS_os_transaction>"
v24@0:8@?<v@?@"NSArray"@"NSError">16
v32@0:8@"BADownload"16@?<v@?B@"NSError">24
v32@0:8@"NSDate"16@?<v@?B@"NSError"@"NSUUID">24
v24@0:8@?<v@?B@"NSError"@"NSUUID">16
v24@0:8@"NSUUID"16
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v24@0:8@"NSArray"16
v24@0:8@"NSString"16
v48@0:8@"NSString"16q24q32q40
v40@0:8@"NSString"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v40@0:8@"NSString"16@"NSError"24@?<v@?B>32
v40@0:8@"NSString"16@"NSString"24@?<v@?B>32
@"BABlockQueue"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>20A241133</string>
<key>CFBundleDevelopmentRegion</key>
<string>en</string>
<key>CFBundleExecutable</key>
<string>backgroundassets.user</string>
<key>CFBundleIdentifier</key>
<string>com.apple.backgroundassets.user</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>backgroundassets.user</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>14A5270i</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.2</string>
<key>DTSDKBuild</key>
<string>20C47</string>
<key>DTSDKName</key>
<string>iphonesimulator16.2.internal</string>
<key>DTXcode</key>
<string>1400</string>
<key>DTXcodeBuild</key>
<string>14A5270i</string>
<key>MinimumOSVersion</key>
<string>16.2</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.backgroundassets.user</string>
<key>com.apple.QuartzCore.secure-mode</key>
<true/>
<key>com.apple.application-identifier</key>
<string>com.apple.backgroundassets.user</string>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudKit</string>
</array>
<key>com.apple.private.MobileContainerManager.otherIdLookup</key>
<true/>
<key>com.apple.private.cloudkit.masquerade</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.network.socket-delegate</key>
<true/>
<key>com.apple.private.nsurlsession.impersonate</key>
<true/>
<key>com.apple.runningboard.launch_extensions</key>
<true/>
<key>com.apple.runningboard.process-state</key>
<true/>
<key>com.apple.runningboard.terminateprocess</key>
<true/>
<key>com.apple.springboard.CFUserNotification</key>
<true/>
</dict>
</plist>
@(#)PROGRAM:backgroundassets.user  PROJECT:BackgroundAssets-1
containsValueForKey:
unsignedLongLongValue
setUpdateHandler:
scanInteger:
absoluteString
initWithCapacity:
initWithApplicationProxy:
setNetworkServiceType:
isFileURL
setDiscretionaryNetworkBehavior:
array
setResultsLimit:
entitlementNamed:ofClass:
context
sortedArrayUsingComparator:
substringFromIndex:
scanLocation
stringWithUTF8String:
boolValue
setObject:forKey:
copy
setApplicationBundleIdentifierOverrideForContainerAccess:
addEntriesFromDictionary:
extensionPointIdentifierQuery:
port
initWithContainerID:
appendData:
enumerateKeysAndObjectsUsingBlock:
updateConfiguration:
substringToIndex:
decodeIntegerForKey:
scannerWithString:
arrayByAddingObjectsFromArray:
initWithContainerIdentifier:environment:
decodeBoolForKey:
addObject:
extensionPointRecord
enumerateObjectsUsingBlock:
remoteObjectProxyWithErrorHandler:
setObject:forKeyedSubscript:
initWithSuiteName:
arrayWithCapacity:
code
bundle
setConfiguration:
appendFormat:
decodeObjectOfClass:forKey:
addObjectsFromArray:
isLowPowerModeEnabled
groupContainerURLs
bundleIdentifier
count
arrayWithObjects:count:
monitorWithConfiguration:
error
removeAllObjects
appendString:
extensionProcessWithConfiguration:error:
errorWithDomain:code:userInfo:
setValues:
initWithCursor:
compare:
decodeObjectOfClasses:forKey:
countByEnumeratingWithState:objects:count:
addObserver:selector:name:object:
downloadTaskWithRequest:
initWithURL:requireValid:error:
setWaitsForConnectivity:
scheme
synchronizeAndReturnError:
moveItemAtURL:toURL:error:
bundleRecordForAuditToken:error:
defaultCenter
removeItemAtPath:error:
predicateMatchingBundleIdentifier:
bundleRecordWithBundleIdentifier:allowPlaceholder:error:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
downloadTaskWithResumeData:
setWithArray:
addOperation:
predicateWithFormat:
mutableCopy
synchronousRemoteObjectProxyWithErrorHandler:
exceptionWithName:reason:userInfo:
addPort:forMode:
bundleWithURL:
URLByAppendingPathComponent:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
applicationExtensionRecords
defaultContainer
removeItemAtURL:error:
userInfo
previousFailureCount
defaultManager
newXPCConnectionWithError:
taskState
credentialForTrust:
removeObject:
setShouldFetchAssetContent:
setWithObject:
URLForDirectory:inDomain:appropriateForURL:create:error:
intValue
setInterruptionHandler:
setWithObjects:
bytes
valueForEntitlement:
null
timeIntervalSinceDate:
hasPrefix:
defaultRecordZone
removeObjectForKey:
setPredicates:
integerValue
initWithFileDescriptor:closeOnDealloc:
setInvalidationHandler:
fileExistsAtPath:
setContainer:
allHeaderFields
timeIntervalSinceNow
executeQueries:
URLWithString:
defaultSessionConfiguration
currentRequest
removeObjectsInArray:
_setQueue:
privateCloudDatabase
serverTrust
hasSuffix:
UTF8String
auditToken
interfaceWithProtocol:
executeQuery:
processIdentifier
initWithFormat:
serviceName
fileExistsAtPath:isDirectory:
authenticationMethod
UUID
lastPathComponent
setEndowmentNamespaces:
set_allowsRetryForBackgroundDataTasks:
whitespaceAndNewlineCharacterSet
numberWithInteger:
cancelByProducingResumeData:
allKeys
setQualityOfService:
host
UUIDString
exitEvent
processInfo
set_sourceApplicationBundleIdentifier:
intersectSet:
sessionWithConfiguration:delegate:delegateQueue:
allObjects
_initUniqueWithURL:
requestWithURL:cachePolicy:timeoutInterval:
length
setEvents:
allValues
dataTaskWithRequest:
proposedCredential
fileSystemRepresentation
numberWithUnsignedInteger:
status
invalidateAndCancel
expectedContentLength
setQueryCompletionBlock:
setStateDescriptor:
statusCode
numberWithUnsignedLongLong:
protectionSpace
writeData:
allocWithZone:
sharedCloudDatabase
dataWithContentsOfURL:
setAutomaticallyRetryNetworkFailures:
setExportedInterface:
fileURL
objectAtIndex:
unauthoritativeTrustState
sharedConnection
setDatabase:
descriptor
encodeInteger:forKey:
encodeBool:forKey:
fileURLWithPath:
invertedSet
dataWithContentsOfURL:options:error:
setExportedObject:
objectForKey:
writeToURL:options:error:
infoDictionary
encodeObject:forKey:
backgroundSessionConfigurationWithIdentifier:
stringByAppendingPathComponent:
publicCloudDatabase
unionSet:
container
fileURLWithPath:isDirectory:
initForReadingFromData:error:
setTimeoutIntervalForRequest:
setRecordMatchedBlock:
offsetInFile
database
setRemoteObjectInterface:
initWithMachServiceName:
localizedStringForKey:value:table:
containerIdentifier
finishTasksAndInvalidate
stringByAppendingPathExtension:
applicationProxyForIdentifier:
encodedData
dictionary
caseInsensitiveCompare:
setAllowsCellularAccess:
allowsCellularAccess
dictionaryWithObjects:forKeys:count:
date
stringByStandardizingPath
raise
setByAddingObjectsFromArray:
lock
containerURLForSecurityApplicationGroupIdentifier:
allowsExpensiveNetworkAccess
setAllowsExpensiveNetworkAccess:
path
unlock
initRequiringSecureCoding:
lowercaseString
stringByTrimmingCharactersInSet:
isAutomaticAppUpdatesAllowed
distantPast
fireDate
endowmentNamespaces
rangeOfString:options:
containingBundleRecord
characterSetWithCharactersInString:
setDecodingFailurePolicy:
setByAddingObjectsFromSet:
setExtensionIdentity:
dateWithTimeIntervalSinceNow:
stringWithCString:encoding:
mainRunLoop
initWithQuery:
setClasses:forSelector:argumentIndex:ofReply:
unsignedIntegerValue
containsObject:
firstObject
domain
initWithRecordType:predicate:
stringWithFormat:
size
sortUsingComparator:
isEqualToString:
UIBackgroundModes
archivedDataWithRootObject:requiringSecureCoding:error:
setDesiredKeys:
setName:
dealloc
downloadDidBegin:
download:finishedWithFileURL:
download:didWriteBytes:totalBytesWritten:totalBytesExpectedToWrite:
download:didReceiveChallenge:completionHandler:
downloadDidPause:
download:failedWithError:
stopRequest
bailError
startDownloadWithDelegate:
_handleDownloadFailureWithError:resumeData:response:
_handleDownloadCompletionWithFileLocation:response:
_handleProgressWithBytesReceived:totalBytesRecieved:totalDownloadSize:resuming:
_handleChallenge:authenticationHandler:
_informDelegateOfPausedDownload
_informDelegateOfFailedDownloadWithError:
_informDelegateOfFailedDownloadWithError:silentFailure:
cancelDownload
cancelDownloadSilently
pauseDownload
promoteToForeground
demoteToBackground
setStopRequest:
setBailError:
_cellularNetworkProhibitsDownloadUsingError:
init
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
wakeupForTokenWithReply:
downloadsForRequest:manifestURL:manifestToken:extensionInfo:completionHandler:
receivedAuthenticationChallenge:download:completionHandler:
extensionWillTerminate
backgroundDownload:failedWithError:completionHandler:
backgroundDownload:finishedWithSandboxToken:completionHandler:
markPurgableWithFileURL:sandboxToken:reply:
initWithExtension:XPCConnection:applicationInfo:
requestDownloadsWithContentRequest:manifestURL:extensionInfo:
sendAuthenticationChallenge:download:completionHandler:
extendClientSandboxForStagedURL:allowWrites:
invalidate
_sendingMessage
_checkForExit
_startExitTimer
_terminateConnection
identifier
setIdentifier:
shutdownQueue
setShutdownQueue:
extensionConnection
setExtensionConnection:
applicationInfo
setApplicationInfo:
exitTimer
setExitTimer:
extensionProcess
setExtensionProcess:
extensionActiveCalls
setExtensionActiveCalls:
sentWillTerminateMessage
setSentWillTerminateMessage:
sentTerminatonMessage
setSentTerminatonMessage:
.cxx_destruct
_sentWillTerminateMessage
_sentTerminatonMessage
_identifier
_shutdownQueue
_extensionConnection
_applicationInfo
_exitTimer
_extensionProcess
_extensionActiveCalls
T@"NSObject<OS_dispatch_queue>",&,V_shutdownQueue
T@"NSXPCConnection",&,V_extensionConnection
T@"BAApplicationInfo",&,V_applicationInfo
T@"NSString",&,V_identifier
T@"NSTimer",&,V_exitTimer
T@"_EXExtensionProcess",&,V_extensionProcess
TQ,V_extensionActiveCalls
TB,V_sentWillTerminateMessage
TB,V_sentTerminatonMessage
setApplicationInformationForRestrictedDownload:
_addPowerAssertionAndActivityWithIdentifier:
_removePowerAssertionAndActivity
syncTo:
cloneDownloadToFinalDestinationURL:error:
classesForSerialization
initWithIdentifier:request:applicationGroupIdentifier:priority:
initWithCoder:
encodeWithCoder:
supportsSecureCoding
_applicationEvent
TB,R
initWithStartDate:
elapsedTime
extensionExited
isMoreThan24HoursAgo
startDate
setStartDate:
endDate
setEndDate:
_startDate
_endDate
T@"NSDate",&,V_startDate
T@"NSDate",&,V_endDate
Td,R
initWithMessageOperation:
initWithAppBundleIdentifier:
appBundleIdentifier
_appBundleIdentifier
T@"NSString",R,N,V_appBundleIdentifier
initWithNSXPCConnection:error:
grantedInitialBackgroundActivityWithDescriptor:completionHandler:
applicationWasInstalledWithIdentifier:bundleURLPath:completionHandler:
applicationWasUpdatedWithIdentifier:bundleURLPath:completionHandler:
applicationShouldTriggerPeriodicWithIdentifier:bundleURLPath:completionHandler:
runDebugCommand:reply:
initPrivatelyWithApplicationGroupIdentifier:
copyWithZone:
initWithIdentifier:recordType:recordName:assetKey:applicationGroupIdentifier:
initWithIdentifier:recordType:expectedFieldKey:expectedFieldValue:assetKey:applicationGroupIdentifier:
initWithIdentifier:recordType:expectedFieldKey:expectedFieldValue:assetKey:applicationGroupIdentifier:containerIdentifier:zoneID:databaseScope:priority:
containerID
setContainerID:
query
setQuery:
assetKey
setAssetKey:
zoneID
setZoneID:
databaseScope
setDatabaseScope:
masqueradeIdentifier
setMasqueradeIdentifier:
_containerID
_query
_assetKey
_zoneID
_databaseScope
_masqueradeIdentifier
T@"CKContainerID",&,N,V_containerID
T@"CKQuery",&,N,V_query
T@"NSString",&,N,V_assetKey
T@"CKRecordZoneID",&,N,V_zoneID
Tq,N,V_databaseScope
T@"NSString",&,N,V_masqueradeIdentifier
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:didCreateTask:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:downloadTask:didFinishDownloadingToURL:
URLSession:downloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:
URLSession:downloadTask:didResumeAtOffset:expectedTotalBytes:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
initWithNotifyQueue:withDestinationDirectory:uniqueFileName:inBackground:withAuthenticationHandler:withRedirectResponseHandler:withBytesReceivedHandler:usingBlock:
cancel
cancelWithResumeData:
_combineExistingError:newError:
response
setResponse:
data
setData:
fileHandle
setFileHandle:
uniqueFileName
setUniqueFileName:
fullDownloadSize
setFullDownloadSize:
resumeData
setResumeData:
mostRecentError
setMostRecentError:
taskCompleted
setTaskCompleted:
inBackground
setInBackground:
_notifyQueue
_stateLock
_destinationDirectory
_notifyBlock
_challengeBlock
_redirectResponseBlock
_bytesReceivedBlock
_uniqueFileName
_taskCompleted
_inBackground
_response
_data
_fileHandle
_fullDownloadSize
_resumeData
_mostRecentError
T@"NSURLResponse",&,V_response
T@"NSMutableData",&,V_data
T@"BAFileHandle",&,V_fileHandle
TB,N,V_uniqueFileName
Tq,V_fullDownloadSize
T@"NSData",&,V_resumeData
T@"NSError",&,N,V_mostRecentError
TB,V_taskCompleted
TB,V_inBackground
initWithURLRequest:withDestinationDirectory:inBackground:
initWithURLRequest:withDestinationDirectory:inBackground:withAuthenticationHandler:
initWithURLRequest:withDestinationDirectory:inBackground:withAuthenticationHandler:withRedirectResponseHandler:
initWithResumeData:withDestinationDirectory:inBackground:withAuthenticationHandler:withRedirectResponseHandler:
_initWithURLRequest:withResumeData:withDestinationDirectory:inBackground:withAuthenticationHandler:withRedirectResponseHandler:
startAsyncDownloadNotifyingOnQueue:sessionConfiguration:bytesReceivedHandler:completionHandler:
useUniqueFileName
setUseUniqueFileName:
connectionLock
setConnectionLock:
urlSession
setUrlSession:
downloadTask
setDownloadTask:
baURLSessionDelegate
setBaURLSessionDelegate:
urlRequest
setUrlRequest:
destinationDirectory
setDestinationDirectory:
_useUniqueFileName
_connectionLock
_urlSession
_downloadTask
_baURLSessionDelegate
_urlRequest
T@"NSLock",&,V_connectionLock
T@"NSURLSession",&,V_urlSession
T@"NSURLSessionDownloadTask",&,V_downloadTask
T@"_BAURLSessionDelegate",&,V_baURLSessionDelegate
T@"NSURLRequest",&,N,V_urlRequest
T@"NSString",&,N,V_destinationDirectory
TB,N,V_useUniqueFileName
descriptorWithAppBundleIdentifier:appStoreMetadata:
appStoreMetadata
cellularPolicy
setCellularPolicy:
_appStoreMetadata
_cellularPolicy
T@"NSDictionary",R,N,V_appStoreMetadata
TQ,N,V_cellularPolicy
initWithIdentifier:request:applicationGroupIdentifier:
request
setRequest:
_request
T@"NSURLRequest",&,V_request
initWithToken:block:
executeWithSuccessfulDequeue:
block
token
fireByTimer
setFireByTimer:
blockFired
_blockFired
_block
_token
_fireByTimer
T@?,R,C,N,V_block
T@"NSUUID",R,N,V_token
T@"NSObject<OS_dispatch_source>",&,V_fireByTimer
TB,R,N,V_blockFired
initWithIdentifier:
__enqueue:
enqueue:
enqueue:waitLimitDate:
_dequeueNext
consumeToken:
drainSpecificWithToken:
drain
_increment
_decrement
queueRetainCount
blockQueueLock
blockQueue
awaitingBlockCompletion
setAwaitingBlockCompletion:
_awaitingBlockCompletion
_queueRetainCount
_blockQueueLock
_blockQueue
T@"NSString",R,N,V_identifier
TQ,R,N,V_queueRetainCount
T@"NSLock",R,N,V_blockQueueLock
T@"NSMutableOrderedSet",R,N,V_blockQueue
TB,N,V_awaitingBlockCompletion
blockQueueWithIdentifier:
invalidateBlockQueue:
identifiersToBlockQueues
_identifiersToBlockQueues
T@"NSMutableDictionary",R,N,V_identifiersToBlockQueues
initWithApplicationIdentifier:delegate:
scheduleDownload:withCompletionHandler:
startForegroundDownload:withCompletionHandler:
cancelDownload:error:
cancelAllDownloads
demoteAllForegroundDownloads
startNextDownload
pauseAllDownloads
numberOfActiveDownloads
numberOfWaitingDownloads
allDownloads
lastDownloadStartDate
setLastDownloadStartDate:
delegate
setDelegate:
downloads
setDownloads:
stagingDirectory
setStagingDirectory:
_lastDownloadStartDate
_delegate
_downloads
_stagingDirectory
T@"NSMutableArray",&,V_downloads
T@"NSDate",&,V_lastDownloadStartDate
T@"NSString",&,V_stagingDirectory
Tq,R
T@"NSArray",R
T@"<BADownloadManagerDelegate>",W,V_delegate
_baassets_stringByRemovingLastIdentifierComponent
_baassets_validUTI
_baassets_validUTIWithWildcard
initWithFileDescriptor:originalPath:closeOnDealloc:
handle
setHandle:
filePath
setFilePath:
_handle
_filePath
T@"NSFileHandle",&,N,V_handle
T@"NSString",&,N,V_filePath
classForMessageOperation:
messageOperation
setMessageOperation:
versionSupported
setVersionSupported:
unsupportedVersionFailureMessage
setUnsupportedVersionFailureMessage:
_versionSupported
_messageOperation
_unsupportedVersionFailureMessage
Tq,N,V_messageOperation
TB,N,V_versionSupported
T@"NSString",&,N,V_unsupportedVersionFailureMessage
_backgroundActivityStateDidChange
sharedCore
listener:shouldAcceptNewConnection:
downloadTimeValidityDidChange
doPeriodicUpdateCheck
listener:shouldAcceptNewClientConnection:
listener:shouldAcceptNewSPIConnection:
connectionDisconnected:
extensionDisconnectedWithIdentifier:
downloaderExtensionForApplicationIdentifier:
_downloaderExtensionForApplicationIdentifier:
applicationExtensionStateForIdentifier:
applicationStateForIdentifier:
applicationInfoForIdentifier:
grantedInitialBackgroundActivityWithDescriptor:
updateApplicationInformationForIdentifier:bundleURLPath:
handleApplicationEvent:identifier:bundleURLPath:
handleApplicationLaunched:
__handleApplicationLaunchedWithInfo:
scheduleDownload:forClientIdentifier:notifyQueue:completionBlock:
downloadForIdentifier:forClientIdentifier:
downloadsForIdentifier:
startForegroundDownload:forClientIdentifier:completionBlock:
cancelDownload:forClientIdentifier:completionBlock:
_updateProcessMonitor
_processRunningBoardStateUpdate:forProcess:
_updateStateForAppExtensionBundleIdentifier:appBundleIdentifier:state:
_updateStateForAppBundleIdentifier:state:
_pokeScheduler
_scheduleDownloads
_checkIdentifierHasExtension:
_checkConnection:hasAllowedTeamIDForIdentifier:
_setClearBeforeShutdown
_clearState
_debugShutdown
_printDebugState
_connectionsForApplicationIdentifier:
_pauseDownloads
_deserializeState
_deserializeApplicationList
_deserializeDownloadQueues
_deserializeUndeliveredEvents
_serializeState
_serializeDownloadQueues
_serializeApplicationState
_serializeUndeliveredEvents
_shutdownAgent
_debugDownloadTime:clear:
_connectionReplyQueueForIdentifier:
_applicationIdentifierAllowsBackgroundActivity:
_downloadsInProgress
asyncClientNotificationQueue
setAsyncClientNotificationQueue:
connectionQueue
setConnectionQueue:
workQueue
setWorkQueue:
listener
setListener:
spiListener
setSpiListener:
applicationState
setApplicationState:
connections
setConnections:
connectionReplyQueue
setConnectionReplyQueue:
unhandledDownloadEvents
setUnhandledDownloadEvents:
extensionConnections
setExtensionConnections:
rulesEngine
setRulesEngine:
lastStartDate
setLastStartDate:
downloadQueuesByClientIdentifier
setDownloadQueuesByClientIdentifier:
debugClearState
setDebugClearState:
_debugClearState
_asyncClientNotificationQueue
_connectionQueue
_workQueue
_listener
_spiListener
_applicationState
_connections
_connectionReplyQueue
_unhandledDownloadEvents
_extensionConnections
_rulesEngine
_lastStartDate
_downloadQueuesByClientIdentifier
T@"NSObject<OS_dispatch_queue>",&,V_asyncClientNotificationQueue
T@"NSObject<OS_dispatch_queue>",&,V_connectionQueue
T@"NSObject<OS_dispatch_queue>",&,V_workQueue
T@"NSXPCListener",&,V_listener
T@"NSXPCListener",&,V_spiListener
T@"NSMutableArray",&,V_applicationState
T@"NSMutableArray",&,V_connections
T@"NSMutableDictionary",&,V_connectionReplyQueue
T@"NSMutableArray",&,V_unhandledDownloadEvents
T@"NSMutableDictionary",&,V_extensionConnections
T@"BAAgentDownloadRulesEngine",&,V_rulesEngine
T@"NSMutableDictionary",&,V_lastStartDate
T@"NSMutableDictionary",&,V_downloadQueuesByClientIdentifier
TB,V_debugClearState
initWithApplicationInfo:
agentCore
setAgentCore:
_agentCore
T@"BAAgentCore",W,V_agentCore
initWithDelegate:
setDebugValidityTimeOverride:
isValidTimeForDownloads
isConnectedToPower
batteryLevel
resume
_setupPowerSourceMonitor
_setupXPCActivity
_takePowerAssertion
_dropPowerAssertion
_powerSourceHasChanged
networkingIsCheap
setNetworkingIsCheap:
powerRunLoopSource
setPowerRunLoopSource:
lastDownloadIsValidValue
setLastDownloadIsValidValue:
rulesEngineWorkQueue
setRulesEngineWorkQueue:
powerAssertionID
setPowerAssertionID:
debugRuleValidity
setDebugRuleValidity:
_networkingIsCheap
_lastDownloadIsValidValue
_powerAssertionID
_debugRuleValidity
_powerRunLoopSource
_rulesEngineWorkQueue
T@"<BAAgentDownloadRulesEngineDelegate>",W,V_delegate
TB,V_networkingIsCheap
T^{__CFRunLoopSource=},V_powerRunLoopSource
TB,V_lastDownloadIsValidValue
T@"NSObject<OS_dispatch_queue>",&,V_rulesEngineWorkQueue
TI,V_powerAssertionID
Ti,V_debugRuleValidity
downloadFailedWithError:
downloadSucceededWithURL:
initWithDownload:withDelegate:
startDownloadWithError:
_downloadFailedWithError:
_downloadSucceededWithURL:
_consumeAvailableDownloadSize
_downloadActualAsset
_newOperationQuery
download
setDownload:
responseQueue
setResponseQueue:
stateLock
setStateLock:
operationConfiguration
setOperationConfiguration:
currentOperation
setCurrentOperation:
recordErrors
setRecordErrors:
recordFound
setRecordFound:
assetFound
setAssetFound:
assetSize
setAssetSize:
assetURL
setAssetURL:
_recordFound
_assetFound
_download
_responseQueue
_operationConfiguration
_currentOperation
_recordErrors
_assetSize
_assetURL
T@"<BACloudKitDownloadManagerDelegate>",W,N,V_delegate
T@"BACloudKitDownload",W,N,V_download
T@"NSObject<OS_dispatch_queue>",&,N,V_responseQueue
T@"NSLock",&,N,V_stateLock
T@"CKOperationConfiguration",&,N,V_operationConfiguration
T@"CKQueryOperation",&,N,V_currentOperation
T@"NSMutableDictionary",&,N,V_recordErrors
TB,N,V_recordFound
TB,N,V_assetFound
TQ,N,V_assetSize
T@"NSURL",&,N,V_assetURL
archivedRepresentationWithError:
messageVersion
setMessageVersion:
_messageVersion
TQ,N,V_messageVersion
initWithEventType:download:error:
typeString
type
setType:
eventError
setEventError:
_type
_eventError
Tq,V_type
T@"BADownload",&,V_download
T@"NSError",&,V_eventError
applicationForIdentifierAllowsBackgroundActivity:
extensionContainingApplicationList
initWithIdentifier:applicationTeamIdentifier:
applicationExtensionState
setApplicationExtensionState:
userForceQuitApp
setUserForceQuitApp:
grantApprovalForInitialBackgroundActivityWithCellularPolicy:
applicationInstalledWithUpdateInstall:
updateApplicationWithInfoDictionary:
extensionIdentity
applicationSecurityGroups
remainingDownloadAllowance
consumeAllowanceAndReturnShouldStop:
allowsBackgroundActivity
shouldDoPeriodicCheck
extensionRuntime
resetExtensionRuntime
shouldLaunchExtension
willLaunchExtension
donePeriodicCheck
applicationLaunched
_debugConsumeTime:
_remainingDownloadAllowance
_populateAllowedDomainInfoWithArray:
_serializableAllowedDomainInfo
applicationIdentifier
setApplicationIdentifier:
lastPeriodicCheckTime
setLastPeriodicCheckTime:
lastApplicationLaunchTime
setLastApplicationLaunchTime:
hasSentApplicationInstalledMessage
setHasSentApplicationInstalledMessage:
hasLaunchedApplication
setHasLaunchedApplication:
permittedForInitialBackgroundActivity
setPermittedForInitialBackgroundActivity:
initialBackgroundCellularPolicy
setInitialBackgroundCellularPolicy:
applicationTeamIdentifier
setApplicationTeamIdentifier:
allowedDownloadDomains
setAllowedDownloadDomains:
allowedDownloadDomainWildcards
setAllowedDownloadDomainWildcards:
manifestURL
setManifestURL:
amountDownloaded
setAmountDownloaded:
downloadAllowance
setDownloadAllowance:
appInfoLock
setAppInfoLock:
extensionRuntimeEvents
setExtensionRuntimeEvents:
currentRuntime
setCurrentRuntime:
_userForceQuitApp
_hasSentApplicationInstalledMessage
_hasLaunchedApplication
_permittedForInitialBackgroundActivity
_applicationExtensionState
_applicationIdentifier
_lastPeriodicCheckTime
_lastApplicationLaunchTime
_initialBackgroundCellularPolicy
_applicationTeamIdentifier
_allowedDownloadDomains
_allowedDownloadDomainWildcards
_manifestURL
_amountDownloaded
_downloadAllowance
_appInfoLock
_extensionRuntimeEvents
_currentRuntime
T@"NSString",&,V_applicationIdentifier
TQ,V_amountDownloaded
TQ,V_downloadAllowance
T@"NSDate",&,V_lastPeriodicCheckTime
TB,V_permittedForInitialBackgroundActivity
TQ,V_initialBackgroundCellularPolicy
TB,V_hasLaunchedApplication
T@"NSDate",&,V_lastApplicationLaunchTime
T@"NSLock",&,V_appInfoLock
T@"NSArray",&,V_allowedDownloadDomains
T@"NSArray",&,V_allowedDownloadDomainWildcards
T@"NSURL",&,V_manifestURL
T@"NSMutableArray",&,V_extensionRuntimeEvents
T@"BAExtensionRuntime",&,V_currentRuntime
TB,V_hasSentApplicationInstalledMessage
TB,V_userForceQuitApp
Tq,V_applicationState
Tq,V_applicationExtensionState
T@"NSString",&,V_applicationTeamIdentifier
downloadDidPause
_downloadDidPause
downloadManager
setDownloadManager:
restrictedDownloadSizeRemaining
setRestrictedDownloadSizeRemaining:
_restrictedDownloadSizeRemaining
T@"NSNumber",&,V_restrictedDownloadSizeRemaining
_setupConnection
connectionInvalidated
connection
setConnection:
_connection
T@"NSXPCConnection",&,V_connection
initWithVersionAllowed:failureExplanation:
versionAllowed
failureReason
_versionAllowed
_failureReason
TB,R,N,V_versionAllowed
T@"NSString",R,N,V_failureReason
priority
setPriority:
state
downloadLock
setIsForegroundDownload:
isForegroundDownload
uniqueIdentifier
setUniqueIdentifier:
applicationGroupIdentifier
setApplicationGroupIdentifier:
downloadStartDate
setDownloadStartDate:
downloadCachePath
setDownloadCachePath:
session
setSession:
downloadError
setDownloadError:
permitInitialCellularDownload
setPermitInitialCellularDownload:
transaction
setTransaction:
_downloadLockOpaque
_isForegroundDownload
_permitInitialCellularDownload
_priority
_internalState
_uniqueIdentifier
_applicationGroupIdentifier
_stagedDownloadedFileURL
_downloadStartDate
_downloadCachePath
_session
_downloadError
_transaction
Tq,V_priority
T@"NSString",&,N,V_identifier
T@"NSString",&,N,V_uniqueIdentifier
T@"NSString",&,V_applicationGroupIdentifier
T@"NSDate",&,V_downloadStartDate
T@"NSString",&,V_downloadCachePath
T^{os_unfair_lock_s=I},R
T@"BAURLSession",&,V_session
T@"NSError",&,V_downloadError
TB,V_isForegroundDownload
TB,V_permitInitialCellularDownload
T@"NSObject<OS_dispatch_queue>",&,V_responseQueue
T@"NSObject<OS_os_transaction>",&,V_transaction
Tq,R,N
currentDownloads:
scheduleDownload:reply:
performWithExclusiveControlBeforeDate:handler:
performWithExclusiveControlWithHandler:
exclusiveControlExitedWithToken:
startForegroundDownload:reply:
cancelDownload:reply:
syncDownloads:
removeDownloadIdentifier:
downloadIdentifierDidBegin:
downloadIdentifierDidPause:
downloadIdentifier:didWriteBytes:totalBytesWritten:totalBytesExpectedToWrite:
downloadIdentifier:didReceiveChallenge:authChallengeHandler:
downloadIdentifier:didFailWithError:wasHandled:
downloadIdentifierDidFinish:sandboxExtensionToken:wasHandled:
_validateAndSetClientIdentifier
_entitledForCloudKitWithDownload:outError:
isActive
callBlockWhenConnectionReady:onQueue:
downloadIdentifier:didReceiveChallenge:authChallengeHandler:withCompletion:
isApplication
setIsApplication:
applicationBundleIdentifier
setApplicationBundleIdentifier:
clientBundleIdentifier
setClientBundleIdentifier:
clientHandlerQueue
setClientHandlerQueue:
clientWorkQueue
setClientWorkQueue:
connectionIsValid
setConnectionIsValid:
signingIdentifier
setSigningIdentifier:
exclusiveAccessBlockQueue
setExclusiveAccessBlockQueue:
lastExclusiveAccessBlockToken
setLastExclusiveAccessBlockToken:
_isApplication
_connectionIsValid
_applicationBundleIdentifier
_clientBundleIdentifier
_clientHandlerQueue
_clientWorkQueue
_signingIdentifier
_exclusiveAccessBlockQueue
_lastExclusiveAccessBlockToken
T@"NSObject<OS_dispatch_queue>",&,V_clientHandlerQueue
T@"NSObject<OS_dispatch_queue>",&,V_clientWorkQueue
TB,V_isApplication
TB,V_connectionIsValid
T@"NSString",&,V_applicationBundleIdentifier
T@"NSString",&,V_clientBundleIdentifier
T@"NSString",&,V_signingIdentifier
T@"BABlockQueue",&,V_exclusiveAccessBlockQueue
T@"NSUUID",&,V_lastExclusiveAccessBlockToken
v8@?0
https
v24@?0@"NSURLAuthenticationChallenge"8@?<v@?q@"NSURLCredential">16
v36@?0Q8Q16q24B32
BUG IN BackgroundAssets: BAURLDownload returned an NSData, which is highly unexpected.
v48@?0@"NSURL"8@"NSData"16@"NSURLResponse"24@"NSData"32@"NSError"40
com.apple.backgroundassets.extension.%@.shutdown_queue
v16@?0@"NSError"8
v12@?0B8
-[BADownloaderExtensionProxy requestDownloadsWithContentRequest:manifestURL:extensionInfo:]
-[BADownloaderExtensionProxy requestDownloadsWithContentRequest:manifestURL:extensionInfo:]_block_invoke
-[BADownloaderExtensionProxy sendAuthenticationChallenge:download:completionHandler:]_block_invoke
v24@?0q8@"NSURLCredential"16
-[BADownloaderExtensionProxy extensionWillTerminate]_block_invoke
-[BADownloaderExtensionProxy backgroundDownload:failedWithError:completionHandler:]_block_invoke
-[BADownloaderExtensionProxy backgroundDownload:finishedWithSandboxToken:completionHandler:]_block_invoke
wakeupForTokenWithReply should never be called on the proxy object, it is for internal use only
Extension Proxy
Identifier: %@
PID: %d
Extension Termination Time: %@ (%.2lf seconds remaining)
FileURL
promoteToForeground is not implemented on BADownload as it is abstract.
demoteToBackground is not implemented on BADownload as it is abstract.
pauseDownload is not implemented on BADownload as it is abstract.
cancelDownload is not implemented on BADownload as it is abstract.
cancelDownloadSilently is not implemented on BADownload as it is abstract.
startDownloadWithDelegate is not implemented on BADownload as it is abstract.
PreventUserIdleSystemSleep
Downloading - %@
Library/Caches/com.apple.BackgroundAssets
BAFile-%@
%@.%@
%@-%ld.%@
SourceURL
DestURL
%@.Manifest-%@
applicationEvent
com.apple.backgroundassets.error
/System/Library/Frameworks/BackgroundAssets.framework
BAError
startDate
endDate
BAApplicationIdentifier
BAAgentSystemConnectionErrorDomain
Invalid application identifier supplied: %@
command
arguments
state
shutdown
force_periodic
reset
downloads-allowed
clear
consume-extension-time
reset-extension-time
System Connection
PID: %d
Non BAURLDownload passed to syncTo for BAURLDownload
BUG IN CLIENT OF BackgroundAssets: BACloudKitDownload cannot be constructed using -init.
Name
expectedFieldKey must be a valid string.
expectedFieldValue cannot be passed in as nil.
expectedFieldValue must be of type: NSString, NSNumber, NSDate, NSData, or NSArray.
%@ == %%@
NSString *  must be a valid unique string.
Provided query must be a valid CKQuery.
Provided assetKey must be a valid string.
Provided containerIdentifier must be a valid string.
Provided CKRecordZoneID must be a valid object.
com.apple.developer.icloud-container-environment
production
BACKD.ContainerID
BACKD.query
BACKD.assetKey
BACKD.zoneID
BACKD.databaseScope
masqueradeIdentifier
BAURLSessionErrorDomain
ResponseStatusCode
ResponseHTTPHeaders
com.apple.BackgroundAssets.BAURLSession.DefaultNotifyQueue
BAUnique-%@
Destination directory must be a file URL.
Destination directory must exist and be a valid directory.
v16@?0@"NSData"8
A queue must be passed to _startAsyncDownloadNotifyingOnQueue:
appBundleIdentifier
appStoreMetadata
cellularPolicy
BUG IN CLIENT OF BackgroundAssets: BAURLDownload cannot be constructed using -init.
request must be a URLRequest.
request must have a valid URL.
request can only download over HTTPS.
request must be secure coding compliant.
identifier can not be nil
identifier must be a string.
request
URL: %@
com.apple.backgroundassets
system
client_connection
download
v32@?0@"BABlock"8Q16^B24
BABlockQueue retain count is being decremented past 0.
Caller invoked invalidateBlockQueue on BABlockQueueManager with an object that was not a BABlockQueue.
com.apple.backgroundassets.downloadstaging/%@
identifier
lastDownloadStartDate
downloads
q24@?0@"BADownload"8@"BADownload"16
%@ (%p) - %lu Downloads {
%@ (%p)
Application Identifier: %@
Downloads (%lu): {
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-.
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-.*
BAServerMessageOperation
com.apple.backgroundassets.system
com.apple.backgroundassets.appstore
kKeepAppsUpToDateEnabledChangedNotification
com.apple.backgroundassets.agentcore.clientnotification.async
com.apple.backgroundassets.agentcore.connectionqueue
com.apple.backgroundassets.agentcore.workqueue
com.apple.frontboard.visibility
v32@?0@"RBSProcessMonitor"8@"RBSProcessHandle"16@"RBSProcessStateUpdate"24
v16@?0@"<RBSProcessMonitorConfiguring>"8
baagent.redeliverevents
q24@?0@"BADownloadQueue"8@"BADownloadQueue"16
-[BAAgentCore download:failedWithError:]_block_invoke
-[BAAgentCore download:finishedWithFileURL:]_block_invoke
ApplicationState.bin
DownloadQueues.bin
UndeliveredEvents.bin
q24@?0@"BAAgentClientConnection"8@"BAAgentClientConnection"16
baagent.deserializestate
Application State
Queues
Undelivered Events
baagent.serializestate
baagent.serializestate.downloadqueues
baagent.serializestate.applicationstates
baagent.serializestate.undeliveredevents
com.apple.backgroundassets.%@.reply
com.apple.backgroundassets.rulesengine
Power Source State
AC Power
Current Capacity
com.apple.backgroundassets.periodic_check
v16@?0@"NSObject<OS_xpc_object>"8
Background assets - rules engine
com.apple.BACloudKitDownloadManager.ResponseQueue
v32@?0@"CKRecordID"8@"NSError"16^B24
v24@?0@"CKQueryCursor"8@"NSError"16
v32@?0@"CKRecordID"8@"CKRecord"16@"NSError"24
BAMessageVersion
BUG IN BackgroundAssets: BAUnhandledDownloadEvent initialized with a failure event but a nil error.
type
eventError
BUG IN BackgroundAssets: BAUnhandledDownloadEvent initialized from coder as a failure event but with a nil error.
Download Finished
Download Failed
Unknown
Event: %@ - Error %@ - Download %@
Event: %@ - Download %@
com.apple.mt
KeepAppsUpToDateAppList
fetch
%@ App Info Lock
extensionRuntimeEvents
Application Identifier: %@
Allowed Initital Download Amount: %llu
Amount Downloaded: %llu
Has Run Installed: %@
Allowed Domains: %@
Last Check Time: %@
App Has Been Launched: %@
Last Launch Time: %@
Extension Runtime In Last 24h: %lf
BACloudKitDownload.%@.%@
BUG IN CLIENT OF BackgroundAssets: BAAppExtensionInfo cannot be constructed using -init.
restrictedDownloadSizeRemaining
com.apple.backgroundassets.user
com.apple.developer.team-identifier
applicationIdentifier
applicationTeamIdentifier
amountDownloaded
downloadAllowance
permittedForInitialBackgroundActivity
initialBackgroundCellularPolicy
hasSentApplicationInstalledMessage
hasLaunchedApplication
lastApplicationLaunchTime
userForceQuitApp
lastPeriodicCheckTime
allowedDownloadDomains
manifestURL
com.apple.background-asset-downloader-extension
BAManifestURL
BAInitialDownloadRestrictions
BADownloadAllowance
BADownloadDomainAllowList
BAServerVersionSupported
BAFailureReason
BAClientMessageOperation
BUG IN CLIENT OF BackgroundAssets: BADownload cannot be constructed using -init.
internalState
priority
uniqueIdentifier
applicationGroupIdentifier
stagedDownloadedFileURL
downloadFailureError
com.apple.BackgroundAssets.BADownload+Agent.ResponseQueue
resumeData
downloadCachePath
isRestrictedDownload
permitInitialCellularDownload
Provided applicationGroupIdentifier must be a valid string.
%@.%@.%@
%@ (%p) - %@
%@ (%p) - %@
Silently Failed
Failed
Created
Pausing
Paused
Canceling
Waiting
Download Starting...
Download backgrounded and waiting on NSURLSession
Downloading
Finished
State: %@
Priority: %lu
Unique identifier: %@
App Group identifier: %@
Staged file url: %@
Application identifier: %@
Download error: %@
Download start time: %@
Download cache path: %@
BAURLSession object: %@
Resume data: %p, %lu
Is restricted download: %@
Is foreground download: %@
Is initial cellular permitted: %@
%d.%@.worker
%d.%@.handler
v20@?0B8@"NSUUID"12
EXAppExtensionAttributes
NSExtension
com.apple.developer.icloud-services
CloudKit
com.apple.developer.icloud-container-identifiers
v20@?0B8@"NSError"12
-[BAAgentClientConnection syncDownloads:]_block_invoke
-[BAAgentClientConnection removeDownloadIdentifier:]_block_invoke
-[BAAgentClientConnection downloadIdentifierDidBegin:]_block_invoke
-[BAAgentClientConnection downloadIdentifierDidPause:]_block_invoke
-[BAAgentClientConnection downloadIdentifier:didWriteBytes:totalBytesWritten:totalBytesExpectedToWrite:]_block_invoke
com.apple.BAAgentClientConnection.AuthChallengeWaiter
-[BAAgentClientConnection downloadIdentifier:didReceiveChallenge:authChallengeHandler:withCompletion:]_block_invoke_2
-[BAAgentClientConnection downloadIdentifier:didFailWithError:wasHandled:]_block_invoke
-[BAAgentClientConnection downloadIdentifierDidFinish:sandboxExtensionToken:wasHandled:]_block_invoke
Client Connection
App Identifier: %@
Client Identifier: %@
PID: %d
Is Client App: %@
Download %{public}@ is restricted, validating.
Download %{public}@ rejected based on domain check.
BAURLDownload+Agent: File data was returned, which is invalid. Daemon will crash. Download: %{public}@. Data: %{public}@
Pausing download %{public}@ because we are on cellular.
Pausing download %{public}@ because our network is expensive.
Extension interrupted for identifier: %{public}@
Extension invalidated for identifier: %{public}@
Attempting to wakeup extension connection.
Fatal: Extension failed to send wakeup message. %{public}@
Fatal: Wakeup extension timed out.
Wakeup extension succeeded.
Fatal: Wakeup extension errored out.
Failed in %s for: %{public}@. Unable to extend sandbox for manifest URL: %{public}@
Failed to send %s for: %{public}@ error: %{public}@
Terminating connection to extension: %{public}@
Failed to take power assertion for rules engine.
Failed to load container for app group identifier: %{public}@
consume-extension-time was called without the required 2 arguments, ignoring.
Invalid unit string: %{public}@
Should be 'm' or 'h'.
Added %ld seconds to %{public}@
Removing %ld seconds to %{public}@
reset-extension-time was called without the required singular identifier argument, ignoring.
reset-extension-time requires an identifier, ignoring.
Unable to get applicaiton runtime info for identifier: %{public}@
Resetting extension runtime for %{public}@
BAURLSession: Unable to create destination directory due to error: %@ - Falling back to NSTemporaryDirectory()
Rejecting download (%{public}@ , %{public}@) because it is already scheduled in (%{public}@).
Requested foreground on download that does not appear to be scheduled.
Download: %{public}@
Client: %{public}@
Started listening for clients.
Started listening for xpc activity.
Connection to service: %{public}@ from pid:%{public}d has invalid service name.
Client connection accepted from pid:%{public}d
Client connection rejected (no extension, signing error or team-id mismatch) from pid:%{public}d
New SPI connection from pid:%{public}d
System connection accepted from pid:%{public}d
System connection from pid:%{public}d failed to init with error: %{public}@
System connection from pid:%{public}d rejected due to lack of entitlement.
Rejecting talking to extension %{public}@ because the background activity is not allowed.
Rejecting launching extension for %{public}@ because it has already run too long.
Rejecting launch of extension for %{public}@ because an extension identity could not be created.
Failed to get extension process: %{public}s
Extension representation failed to generate XPC connection: %{public}s
Extension representation failed to generate XPC connection with unknown error.
Rejected extension connection (%{public}@) for mismiatched team id
failed to establish connection for extension (%{public}@)
Unable to update application info. (bundle identifier: %{public}@) %{public}@
Unable to update application info, bundle record returned is not an LSApplicationRecord. (bundle identifier: %{public}@)
Unable to update application info, no info dictionary could be found. (bundle identifier: %{public}@)
Event (%ld) dropped for client (%{public}s) failed because client Info dictionary is not accessible or valid.
Event (%ld) dropped for client (%{public}s) failed because client Info dictionary is missing its '%{public}@' key.
Event (%ld) dropped for client (%{public}s) failed because the app and extension do not share any application groups.
Event (%ld) ignored for client (%{public}s) because background activity is not allowed.
Event (%ld) for client (%{public}s) is scheduling manifest for download.
Event (%ld) failed for client (%{public}s) because the manifest URL (%{public}@) could not be enqueued. %{public}@
Scheduled download identifier: %{public}@ for client: %{public}@
Cannot observe app with identifier (%{public}@), because the app is not installed. %@
Unable to observe extension for (%{public}@), the BAApplicationInfo is missing an extensionIdentity.
Unable to get RBS state because fetching a LSBundleRecord for (%{public}@) failed. %{public}@
Unable to get RBS state for extension (%{public}@). Containing bundle record is not an application record. (Class:%{public}@)
Application (%{public}@) was quit by the user.
Application (%{public}@) has terminated.
Application (%{public}@) is backgrounded.
Application (%{public}@) allows BG activity, pausing any foreground downloads for background demotion.
Application (%{public}@) does NOT allow BG activity, canceling all active downloads.
Application (%{public}@) is active. (Foreground = %{public}@)
Dropping unknown unhandled event type in list: %{public}@
Download did begin: %{public}@
Download did begin finished: %{public}@
Download did pause: %{public}@
Download did pause finished: %{public}@
Timed out messaging client for '%{public}@' to answer auth challenge for download: %{public}@
Cannot message extension for '%{public}@' to answer auth challenge, canceling challenge for download: %{public}@
Cannot message extension for '%{public}@' to answer auth challenge, performing default handling for download: %{public}@
Download did fail: %{public}@ with error: %{public}@
Added undelivered event: %{public}@
Failed to notify anyone about failed download: %{public}@
%s, Will not message extension for %{public}@ because background activity is disabled.
Download did fail done
Download did finish: %{public}@
Warning: No sandbox token issued for finished download: %{public}@ URL: %{public}@ for client: %{public}@. -- %{public}s
Warning: No sandbox token issued for extension for finished download: %{public}@ URL: %{public}@ for client: %{public}@
Failed to notify extension about failed manifest download: %{public}@
Client failed to enqueue requested downloads for manifest: %{public}@ with content request: %ld
Extension handled the manifest download, removing download. %{public}@
Failed to notify extension about finished download: %{public}@
Extension handled the background download, removing download. %{public}@
Failed to find extension for installed application, removing download. %{public}@
Result was handled by a client of BADownloadManager, removing download. %{public}@
Download did finish done.
Failed to get bundle record for identifier: %{public}@ error: %{public}@
Bundle for %{public}@ does not have a extension record. Blocking.
Bundle for %{public}@ does not have a downloader extension. Blocking.
Bundle for %{public}@ is not application or extension. Blocking.
Debug shutdown called. Preparing to exit
Dumping debug agent state:
Allowed time for downloads: %{public}@
**** Application State Info ****
**** Connection State Info  ****
**** Extension Connection State Info ****
**** Download Queue State Info ****
**** ---------------------- ****
**** ------------------------------- ****
Failed to deserialize application state: %{public}@
failed to open application state URL: %{public}@
Failed to load serialized application state with error: %{public}@
Failed to deserialize download queues: %{public}@
failed to open download queue URL: %{public}@
Failed to load serialized downloads with error: %{public}@
Failed to deserialize events file: %{public}@
failed to open deserialize events URL: %{public}@
Failed to load deserialize events with error: %{public}@
Failed to serialize download queues: %{public}@
Failed to serialize application state: %{public}@
Serializing state and shutting down.
Clear state set, will clear state..
Requested background activity for application identifier that is not known to BAAgentCore. %{public}@
Failed to get power sources. Assume connected to power.
Failed to get power sources. Assume full battery.
A cursor was returned, this is unexpected for 1 result; is the operation hung? This is why.
CKRecordID: %{public}@ returned an error: %{public}@
Denying background activity for %{public}@ background updates are disabled.
Denying background activity for %{public}@ because device is in low power mode.
Denying background activity for %{public}@ background activity for this app is disabled.
Application (%{public}@) lacks background fetch entitlement. Will not use extension.
Application identifier (%{public}@) is not valid Universal Type Identifier. Failing.
Granting approval for initial background activity for: %{public}@
Application was updated: %{public}@
Application was installed: %{public}@
Failed to get represented extension point with queries: %s
Extension (%{public}@) is not part of a application bundle. Failing.
Application bundle (%{public}@) is not the same as the bundle id (%{public}@). Failing.
Background activity denied for (%{public}@) because the app is not running.
Background activity denied for (%{public}@) because the user has not launched the app.
Resetting extension runtime for: %{public}@
Download %{public}@ rejected as we are out of download allowance.
Dropping download because application identifier is invalid: %{public}@
Failed to consume token: %@ for client: %{public}@
Failed to get executable path from audit token.
Executable path from audit token is invalid or is of an empty length.
Unable to construct a SecTaskRef from client audit token.
Failed to get client application static code object, error OSStatus: %d
Failed to get client application code signing information, error OSStatus: %d
Code signed Info.plist is nil
Code signed bundle identifier is nil
LSBundleRecord returned is not an expected LSApplicationExtensionRecord. Class:%{public}@
LSBundleRecord.bundleRecordForAuditToken returned a record without a bundle identifier.
Failed to get application record. Falling back to last component removal.
App identifier is nil or 0 length
Failed to lookup LSBundleRecord for audit token. %{public}@
LSBundleRecord returned is not an expected LSApplicationRecord. Class:%{public}@
Bundle identifier from LSApplicationRecord is nil. %{public}@
Application (%{public}@) is not found in the LaunchServices database and cannot be used with BackgroundAssets.
Application (%{public}@) is not registered with FrontBoardServices and cannot be used with BackgroundAssets.
Application (%{public}@) is not trusted on this iOS device and cannot be used with BackgroundAssets. Trust State: %{public}@
App bundle identifier (%{public}@) is not valid Universal Type Identifier. Disconnecting.
Client bundle identifier (%{public}@) is not valid Universal Type Identifier. Disconnecting.
Client is missing signing identifier, client must be signed with an identifier to use BackgroundAssets. %{public}@
Failed to send %s. error: %{public}@
Agent
BADownloadAgentProtocol
BADownloaderExtensionSyncProtocol
NSObject
BADownloaderExtensionClientSyncProtocol
BADownloaderExtensionProxy
VeryPrivate
BAManifestDownload
BAExtensionRuntime
NSSecureCoding
NSCoding
BADeveloperDebugClientMessageVersionCheck
BADeveloperDebugClientMessageApplicationInstalled
BADeveloperDebugClientMessageApplicationUpdated
BADeveloperDebugClientMessageApplicationPeriodicCheck
BAAgentSystemXPCProtocol
BAAgentSystemConnection
BACloudKitDownload
NSCopying
_BAURLSessionDelegate
NSURLSessionDelegate
NSURLSessionDownloadDelegate
NSURLSessionTaskDelegate
NSURLSessionDataDelegate
BAURLSession
BAAppStoreGrantDescriptor
BAURLDownload
BABlock
BABlockQueue
BABlockQueueManager
BADownloadQueue
BADownloadManagerDelegate
BAAgentUtilities
BAUtilities
BAFileHandle
BADeveloperDebugServerMessage
BAAgentCore
NSXPCListenerDelegate
BAAgentDownloadRulesEngineDelegate
BAAgentKeyedUnarchiver
BAAgentDownloadRulesEngine
BACloudKitDownloadManager
BADeveloperDebugMessage
BAUnhandledDownloadEvent
BAApplicationInfo
BACloudKitDownloadManagerDelegate
BAAppExtensionInfo
BAAgentConnection
BADeveloperDebugServerMessageVersionCheck
BADeveloperDebugClientMessage
BADownload
BAAgentKeyedArchiver
BAAgentClientXPCProtocol
BADownloadManagerSyncProtocol
BAAgentClientConnection
v16@0:8
B24@0:8@16
v40@0:8@16@24@32
v32@0:8@16@24
v44@0:8Q16Q24q32B40
v32@0:8@16@?24
v24@0:8@16
v28@0:8@16B24
q16@0:8
v24@0:8q16
@16@0:8
B24@0:8@"<BADownloadManagerDelegate>"16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@?16
v56@0:8q16@24@32@40@?48
v40@0:8@16@24@?32
v24@0:8@?<v@?B>16
v56@0:8q16@"NSURL"24@"NSString"32@"BAAppExtensionInfo"40@?<v@?>48
v40@0:8@"NSURLAuthenticationChallenge"16@"BADownload"24@?<v@?q@"NSURLCredential">32
v40@0:8@"BADownload"16@"NSError"24@?<v@?B>32
v40@0:8@"BADownload"16@"NSString"24@?<v@?B>32
v40@0:8@"NSURL"16@"NSString"24@?<v@?B@"NSError">32
@40@0:8@16@24@32
B40@0:8q16@24@32
B40@0:8@16@24@?32
@28@0:8@16B24
v24@0:8Q16
v20@0:8B16
@"NSString"
@"NSObject<OS_dispatch_queue>"
@"NSXPCConnection"
@"BAApplicationInfo"
@"NSTimer"
@"_EXExtensionProcess"
B32@0:8^@16^@24
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
d16@0:8
@"NSDate"
v32@0:8@"BAAppStoreGrantDescriptor"16@?<v@?B@"NSError">24
v40@0:8@"NSString"16@"NSURL"24@?<v@?B@"NSError">32
v32@0:8@"NSDictionary"16@?<v@?>24
@32@0:8@16^@24
@24@0:8^{_NSZone=}16
@56@0:8@16@24@32@40@48
@64@0:8@16@24@32@40@48@56
@96@0:8@16@24@32@40@48@56@64@72q80q88
@"CKContainerID"
@"CKQuery"
@"CKRecordZoneID"
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@16@24q32q40
v40@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24@"NSURL"32
v56@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24q32q40
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
@72@0:8@16@24B32B36@?40@?48@?56@?64
@32@0:8@16@24
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSURLResponse"
@"NSMutableData"
@"BAFileHandle"
@"NSData"
@"NSError"
@36@0:8@16@24B32
@44@0:8@16@24B32@?36
@52@0:8@16@24B32@?36@?44
@60@0:8@16@24@32B40@?44@?52
v48@0:8@16@24@?32@?40
@"NSLock"
@"NSURLSession"
@"NSURLSessionDownloadTask"
@"_BAURLSessionDelegate"
@"NSURLRequest"
@"NSDictionary"
@48@0:8@16@24@32q40
@32@0:8@16@?24
B20@0:8B16
@?16@0:8
@"NSUUID"
@"NSObject<OS_dispatch_source>"
@24@0:8@?16
v32@0:8@?16@24
@"NSMutableOrderedSet"
@"NSMutableDictionary"
v48@0:8@16q24q32q40
v24@0:8@"BADownload"16
v48@0:8@"BADownload"16q24q32q40
v40@0:8@"BADownload"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v32@0:8@"BADownload"16@"NSError"24
v32@0:8@"BADownload"16@"NSURL"24
B32@0:8@16^@24
@"<BADownloadManagerDelegate>"
@"NSMutableArray"
@32@0:8i16@20B28
@"NSFileHandle"
#24@0:8q16
@24@0:8q16
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
q24@0:8@16
v40@0:8q16@24@32
v40@0:8@16@24q32
v32@0:8@16q24
v24@0:8B16B20
@"NSXPCListener"
@"BAAgentDownloadRulesEngine"
@"BAAgentCore"
v20@0:8i16
f16@0:8
^{__CFRunLoopSource=}16@0:8
v24@0:8^{__CFRunLoopSource=}16
I16@0:8
v20@0:8I16
i16@0:8
@"<BAAgentDownloadRulesEngineDelegate>"
^{__CFRunLoopSource=}
B24@0:8^@16
@"<BACloudKitDownloadManagerDelegate>"
@"BACloudKitDownload"
@"CKOperationConfiguration"
@"CKQueryOperation"
@"NSURL"
@24@0:8^@16
@40@0:8q16@24@32
@"BADownload"
B24@0:8Q16
v24@0:8d16
@"NSArray"
@"BAExtensionRuntime"
v24@0:8@"NSError"16
v24@0:8@"NSURL"16
@"NSNumber"
@28@0:8B16@20
^{os_unfair_lock_s=I}16@0:8
@"BAURLSession"
@"NSObject<OS_os_transaction>"
v24@0:8@?<v@?@"NSArray"@"NSError">16
v32@0:8@"BADownload"16@?<v@?B@"NSError">24
v32@0:8@"NSDate"16@?<v@?B@"NSError"@"NSUUID">24
v24@0:8@?<v@?B@"NSError"@"NSUUID">16
v24@0:8@"NSUUID"16
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v24@0:8@"NSArray"16
v24@0:8@"NSString"16
v48@0:8@"NSString"16q24q32q40
v40@0:8@"NSString"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v40@0:8@"NSString"16@"NSError"24@?<v@?B>32
v40@0:8@"NSString"16@"NSString"24@?<v@?B>32
@"BABlockQueue"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>20A241133</string>
<key>CFBundleDevelopmentRegion</key>
<string>en</string>
<key>CFBundleExecutable</key>
<string>backgroundassets.user</string>
<key>CFBundleIdentifier</key>
<string>com.apple.backgroundassets.user</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>backgroundassets.user</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>14A5270i</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.2</string>
<key>DTSDKBuild</key>
<string>20C47</string>
<key>DTSDKName</key>
<string>iphonesimulator16.2.internal</string>
<key>DTXcode</key>
<string>1400</string>
<key>DTXcodeBuild</key>
<string>14A5270i</string>
<key>MinimumOSVersion</key>
<string>16.2</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.backgroundassets.user</string>
<key>com.apple.QuartzCore.secure-mode</key>
<true/>
<key>com.apple.application-identifier</key>
<string>com.apple.backgroundassets.user</string>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudKit</string>
</array>
<key>com.apple.private.MobileContainerManager.otherIdLookup</key>
<true/>
<key>com.apple.private.cloudkit.masquerade</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.network.socket-delegate</key>
<true/>
<key>com.apple.private.nsurlsession.impersonate</key>
<true/>
<key>com.apple.runningboard.launch_extensions</key>
<true/>
<key>com.apple.runningboard.process-state</key>
<true/>
<key>com.apple.runningboard.terminateprocess</key>
<true/>
<key>com.apple.springboard.CFUserNotification</key>
<true/>
</dict>
</plist>
