@(#)PROGRAM:EscrowSecurityAlert  PROJECT:CloudServices-528.40.9
33333
v8@?0
https://support.apple.com/kb/HT205011
https://support.apple.com/kb/HT5834
void prompt(EscrowSecurityAlertType)
ESCROW_ELE_ALERT_MESSAGE_TITLE
ESCROW_ELE_ALERT_MESSAGE
NOTNOW
RESETKEYCHAIN
CREATENEWCODE
LEARNMORE
RECORD_BURNED_ALERT_MESSAGE_TITLE
RECORD_BURNED_ALERT_MESSAGE
UPDATECODE
CloudServices.ESA.prompt.alert
void response(CFUserNotificationRef, CFOptionFlags)
RESET_CONFIRMATION_MESSAGE_TITLE
RESET_CONFIRMATION_MESSAGE
CANCEL
prefs:root=APPLE_ACCOUNT&path=ICLOUD_SERVICE/com.apple.Dataclass.KeychainSync/ADVANCED
void cancelAlert(void)
com.apple.EscrowSecurityAlert
com.apple.EscrowSecurityAlert.server
com.apple.EscrowSecurityAlert.record
com.apple.EscrowSecurityAlert.reset
com.apple.EscrowSecurityAlert.notifyQueue
CloudServices
ReportESAHealth
ESA-health
Unexpected escrow state
87327574
@"NSDictionary"8@?0
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.notifyd.matching
CKErrorDomain
CKRetryAfter
0 escrow records exist for this account
ProtectedCloudStorageTLKFound
ProtectedCloudStorage
failed to find PCS tlks for account
v16@?0^{__CFString=}8
SecureBackupStingrayMetadata
ClientMetadata
SecureBackupKeyRegistry
PublicIdentities
v24@?0@"NSString"8@"NSNumber"16
PCSCKMirrorStatus-%@
PCSCKMirrorStatus
v24@?0@"NSDictionary"8@"NSError"16
com.apple.security.ESAHealthSummary
-[EscrowSecurityAlert handleNotification:]
com.apple.EscrowSecurityAlert.daily
NextTTRDate
com.apple.EscrowSecurityAlert.diagnostic-queue
507587
%@-%@
Triggered ESATTR: %@ - %@
Related radar: rdar://%@
tap-to-radar://new?Title=%@&ComponentName=%@&ComponentVersion=%@&Reproducibility=Not%%20Applicable&ComponentID=%@&Classification=Crash/Hang/Data%%20Loss&Description=%@
Tap-To-Radar
Go away
EscrowSecurityAlert
com.apple.security
LSApplicationWorkspace
Unable to find class %s
_AKAddTestAccountHeader
personID
PasswordConfigured
CDPShouldRepair
CDPManateeAvailable
WAvailable
OTCliqueStatus
SOSStatus
timestamp
internal
build
accountSecurityLevel
cdpShouldRepair
cdpShouldRepairError
cdpManateeAvailable
cdpManateeAvailableError
wAvailable
wAvailableError
otCliqueStatus
otCliqueStatusError
sosStatus
sosStatusError
testAccount
iCDPEnabledForDSID
passcodeEnabled
notificationsAllowed
thresholdLevel
notificationType
Error
ESAHealthSampleUpdateStorageKey
type
previousStateFirstSample
previousStateLastSample
currentStateFirstSample
currentStateMostRecentSample
v32@?0@8@"HealthSampleUpdateRecord"16^B24
Timestamp
ErrorCode
ErrorDomainHash
_prev
_storage
daemon
errorDomain
errorCode
CloudServicesAnalytics
SecureBackupSynchronize
SecureBackupUsesRandomPassphrase
SecureBackupEnabled
SecureBackupEscrowTrustStatus
recordStatus
SecureBackupiCDPRecords
invalid
EscrowServiceErrorDomain
CloudServicesErrorDomain
SecureBackupSuppressServerFiltering
defaultStore
stringForKey:
setString:forKey:
mutableCopy
countByEnumeratingWithState:objects:count:
objectForKeyedSubscript:
setObject:forKeyedSubscript:
errorWithDomain:code:userInfo:
addObject:
arrayWithObjects:count:
setWithArray:
recoverSilentWithCDPContextInDaemon:allRecords:reply:
setClasses:forSelector:argumentIndex:ofReply:
setWithObject:
recoverWithCDPContextInDaemon:escrowRecord:reply:
restoreKeychainAsyncWithPasswordInDaemon:keybagDigest:haveBottledPeer:viewsNotToBeRestored:reply:
createICDPRecordWithRequest:recordContents:reply:
beginHSA2PasscodeRequest:desirePasscodeImmediately:uuid:reason:reply:
setWithObjects:
getAcceptedTermsForAltDSID:reply:
init
isNotificationDisabled
setAlertType:
reset
alertType
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
prompt:
cancelAlert
isNotificationSnoozed
mainBundle
localizedStringForKey:value:table:
shouldAllowSnooze
dictionaryWithObjects:forKeys:count:
notificationSnoozed
setNotificationDisabled:
disableWithInfo:
URLWithString:
defaultWorkspace
openSensitiveURL:withOptions:
openURL:withOptions:error:
current
updateWithHealthSample:
logErrors
metricsDict
results
tLKRecoverabilityMetrics:tapToRadar:
addEntriesFromDictionary:
pcsRecoverabilityMetrics:tapToRadar:
tapToRadar
otCliqueStatus
passcodeEnabled
trigger
initTapToRadar:description:radar:
logger
metrics
AddMultiSamplerForName:withTimeInterval:block:
handleTimerEvent
initWithCString:encoding:
handleNotification:
tlkRecoverabilityForEscrowRecord:error:
domain
code
userInfo
doubleValue
setContext:
initWithContextData:
count
errorWithCode:format:
logResultForEvent:hardFailure:result:withAttributes:
dictionaryToEscrowRecord:
tlkRecoverabilityRetryWithClique:record:error:
containsObject:
logSuccessForEventNamed:
initWithCapacity:
foreachStingrayService:
CKKSControlObject:error:
stringWithFormat:
isEqualToSet:
numberWithUnsignedInt:
logSuccessForEvent:
initWithDomain:code:userInfo:
pcsMirrorKeysForServices:reply:
setResults:
getAccountInfoWithInfo:results:
dailyCoreAnalyticsMetrics:
inCircle
isEqualToNumber:
delegate
isEqualToString:
backupWithInfo:
setDelegate:
notifyQueue
analyticsStore
setTapToRadar:
.cxx_destruct
_delegate
_notifyQueue
_analyticsStore
_results
_tapToRadar
T@"NSObject<OS_dispatch_queue>",R,&,V_notifyQueue
T@"SecureBackup",R,&,V_sb
T@"ESAHealthSampleAnalyticsStore",R,V_analyticsStore
T@"NSDictionary",&,V_results
T@"SecTapToRadar",&,V_tapToRadar
T@"<EscrowSecurityAlertDelegateProtocol>",&,V_delegate
radarnumber
isRateLimited
initWithSuiteName:
keyname:
valueForKey:
removeObjectForKey:
date
compare:
dateByAddingTimeInterval:
setObject:forKey:
alert
queue
URLQueryAllowedCharacterSet
formUnionWithCharacterSet:
removeCharactersInString:
stringByAddingPercentEncodingWithAllowedCharacters:
radarDescription
componentName
componentVersion
componentID
openURL:configuration:completionHandler:
numberWithInt:
isRateLimited:
askUserIfTTR:
triggerTapToRadar:
updateRetryTimestamp
disableTTRsEntirely
clearRetryTimestamp
setComponentID:
setComponentName:
setComponentVersion:
setAlert:
setRadarDescription:
setRadarnumber:
setQueue:
_componentID
_componentName
_componentVersion
_alert
_radarDescription
_radarnumber
_queue
T@"NSString",&,V_alert
T@"NSString",&,V_radarDescription
T@"NSString",&,V_radarnumber
T@"NSObject<OS_dispatch_queue>",&,V_queue
T@"NSString",&,V_componentID
T@"NSString",&,V_componentName
T@"NSString",&,V_componentVersion
aa_primaryAppleAccount
aa_altDSID
authKitAccountWithAltDSID:
securityLevelForAccount:
shouldPerformRepairWithOptionForceFetch:error:
isManateeAvailable:
fetchCliqueStatus:
standardUserDefaults
boolForKey:
accountProperties
isICDPEnabledForDSID:
boolValue
getAccountTypeWithAccountStore:accountManager:
getCDPShouldRepair:error:
getCDPManateeAvailable:error:
getOTCliqueStatusWithContext:error:
getSOSStatusWithError:
testAccount
getIsICDPEnabledForDSIDWithAccountStore:
getPasscodeEnabled
cdpShouldRepairError
cdpManateeAvailableError
wAvailableError
otCliqueStatusError
sosStatusError
cdpShouldRepair
initWithAuthKitManager:accountStore:cdpStateController:otConfigurationContext:
timestamp
setTimestamp:
internal
setInternal:
build
setBuild:
accountSecurityLevel
setAccountSecurityLevel:
setCdpShouldRepair:
setCdpShouldRepairError:
cdpManateeAvailable
setCdpManateeAvailable:
setCdpManateeAvailableError:
wAvailable
setWAvailable:
setWAvailableError:
setOtCliqueStatus:
setOtCliqueStatusError:
sosStatus
setSosStatus:
setSosStatusError:
setTestAccount:
iCDPEnabledForDSID
setICDPEnabledForDSID:
setPasscodeEnabled:
_internal
_testAccount
_iCDPEnabledForDSID
_passcodeEnabled
_sosStatus
_timestamp
_build
_accountSecurityLevel
_cdpShouldRepair
_cdpShouldRepairError
_cdpManateeAvailable
_cdpManateeAvailableError
_wAvailable
_wAvailableError
_otCliqueStatus
_otCliqueStatusError
_sosStatusError
T@"NSDate",C,N,V_timestamp
TB,N,V_internal
T@"NSString",C,N,V_build
TQ,N,V_accountSecurityLevel
Tq,N,V_cdpShouldRepair
T@"NSError",C,N,V_cdpShouldRepairError
Tq,N,V_cdpManateeAvailable
T@"NSError",C,N,V_cdpManateeAvailableError
Tq,N,V_wAvailable
T@"NSError",C,N,V_wAvailableError
Tq,N,V_otCliqueStatus
T@"NSError",C,N,V_otCliqueStatusError
Ti,N,V_sosStatus
T@"NSError",C,N,V_sosStatusError
TB,N,V_testAccount
TB,N,V_iCDPEnabledForDSID
TB,N,V_passcodeEnabled
decodeObjectOfClass:forKey:
decodeBoolForKey:
decodeIntegerForKey:
decodeIntForKey:
encodeObject:forKey:
encodeBool:forKey:
encodeInteger:forKey:
encodeInt:forKey:
initWithCoder:
encodeWithCoder:
supportsSecureCoding
TB,R
numberWithBool:
intValue
notificationDisabled
TB,N,GisNotificationDisabled
TB,R,N
Ti,N
stringByAppendingString:
valueForKeyPath:
stateForType:
errorForType:
sameValueAndErrorAsHealthSample:forType:
isNewerThanHealthSample:
type
currentStateMostRecentSample
previousStateFirstSample
previousStateLastSample
currentStateFirstSample
initWithStartDate:endDate:
initWithRecordType:initialSample:
updatedRecordWithHealthSample:
previousState
previousStateError
previousStateDuration
currentState
currentStateError
currentStateDuration
dict
_type
_previousStateFirstSample
_previousStateLastSample
_currentStateFirstSample
_currentStateMostRecentSample
T@"HealthSample",R,N,V_previousStateFirstSample
T@"HealthSample",R,N,V_previousStateLastSample
T@"HealthSample",R,N,V_currentStateFirstSample
T@"HealthSample",R,N,V_currentStateMostRecentSample
TQ,R,N,V_type
T@"NSNumber",R,N
T@"NSError",R,N
T@"NSDateInterval",R,N
initWithDictionary:
enumerateKeysAndObjectsUsingBlock:
objectForKey:
lastHealthSample
setValue:forKey:
timeIntervalSince1970
numberWithDouble:
numberWithUnsignedInteger:
recordForType:
numberWithInteger:
lastHealthSampleTimestamp
updatedValueWithHealthSample:
_storage
_lastHealthSample
T@"HealthSample",R,N,V_lastHealthSample
T@"NSDate",R,N
decodeObjectOfClasses:forKey:
initWithStorage:
unarchivedObjectOfClass:fromData:error:
lastUpdate
archivedDataWithRootObject:requiringSecureCoding:error:
lastHealthCheckTimestamp
performUpdate
storage
_lastUpdate
T@"NSUserDefaults",R,N,V_storage
T@"HealthSampleUpdate",R,N
defaultAnalyticsDatabasePath:
setValuesForKeysWithDictionary:
logHardFailureForEventNamed:withAttributes:
databasePath
logUnrecoverableError:forEvent:withAttributes:
codeForNSError:
codeForErrno:
initWithFormat:arguments:
dictionaryWithObjectsAndKeys:
sanitizedError:
errorWithCode:error:format:
errorWithCode:URL:format:
errorWithCode:error:URL:format:
errorWithDomain:code:format:
errorForNSError:path:format:
ESADelegate
EscrowSecurityAlertDelegateProtocol
NSObject
EscrowSecurityAlert
SecTapToRadar
HealthSample
SecureCoding
NSSecureCoding
NSCoding
ESALocalSettings
StateExtraction
HealthSampleUpdateRecord
HealthSampleUpdate
ESAHealthSampleAnalyticsStore
CloudServicesAnalytics
CloudServicesError
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v20@0:8i16
v16@0:8
i16@0:8
@40@0:8@16@24^@32
@32@0:8@16^B24
v24@0:8@?16
v24@0:8@16
@"<EscrowSecurityAlertDelegateProtocol>"
@"NSObject<OS_dispatch_queue>"
@"SecureBackup"
@"ESAHealthSampleAnalyticsStore"
@"NSDictionary"
@"SecTapToRadar"
@24@0:8@16
@40@0:8@16@24@32
@"NSString"
Q32@0:8@16@24
i32@0:8@16^@24
q32@0:8@16^@24
i24@0:8^@16
@48@0:8@16@24@32@40
v20@0:8B16
v24@0:8Q16
q16@0:8
v24@0:8q16
@"NSDate"
@"NSError"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8Q16
B32@0:8@16Q24
@32@0:8Q16@24
@"HealthSample"
@"HealthSampleUpdate"
@"NSUserDefaults"
v40@0:8@16@24@32
q24@0:8@16
q24@0:8q16
@32@0:8q16@24
@40@0:8q16@24@32
@48@0:8q16@24@32@40
@40@0:8@16q24@32
In %s
Don't replace a ELE notification with one about a burned record
CFUserNotificationUpdate err=%d
Can't make notification err=%x
%s: starting xpc transaction
%s: unexpected xpc transaction count
Error displaying alert: %d
Error getting alert response: %d
Error disabling backup: %@
Error resetting circle: %@
could not open %@: %@
opened %@
canceling alert
%s: ending xpc transaction
fetching metrics, last request at %u (now %u)
rate-limiting metrics
triggering TTR
CK rate-limited, sleeping %d secs
Record %@, can recover views: %@
handleTLKRecoverabilityMetrics: failed to verify record: %@, error: %@
failed to acquire CKKS control object: %@
error getting PCS CKMirror keys from CKKS: %@
Daily maintenance
got error back from getAccountInfoWithInfo: %@
not in circle, skipping daily maintance
End of daily maintenance
alert: %@
Getting info
Exit %s
Triggering TTR: %@
Failed to create notification error %@
Not showing ttr due to ratelimiting: %@
No code for POSIX error: %s (%d)
softlink:r:path:/System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.cdp.utility</key>
<true/>
<key>com.apple.cdp.walrus</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.ckks</key>
<true/>
<key>com.apple.private.notificationcenter-system</key>
<array>
<dict>
<key>identifier</key>
<string>com.apple.EscrowSecurityAlert</string>
</dict>
</array>
<key>com.apple.private.octagon</key>
<true/>
<key>com.apple.private.security.storage.SFAnalytics</key>
<true/>
<key>com.apple.securebackupd.access</key>
<true/>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>keychain-cloud-circle</key>
<true/>
</dict>
</plist>
@(#)PROGRAM:EscrowSecurityAlert  PROJECT:CloudServices-528.40.9
33333
v8@?0
https://support.apple.com/kb/HT205011
https://support.apple.com/kb/HT5834
void prompt(EscrowSecurityAlertType)
ESCROW_ELE_ALERT_MESSAGE_TITLE
ESCROW_ELE_ALERT_MESSAGE
NOTNOW
RESETKEYCHAIN
CREATENEWCODE
LEARNMORE
RECORD_BURNED_ALERT_MESSAGE_TITLE
RECORD_BURNED_ALERT_MESSAGE
UPDATECODE
CloudServices.ESA.prompt.alert
void response(CFUserNotificationRef, CFOptionFlags)
RESET_CONFIRMATION_MESSAGE_TITLE
RESET_CONFIRMATION_MESSAGE
CANCEL
prefs:root=APPLE_ACCOUNT&path=ICLOUD_SERVICE/com.apple.Dataclass.KeychainSync/ADVANCED
void cancelAlert(void)
com.apple.EscrowSecurityAlert
com.apple.EscrowSecurityAlert.server
com.apple.EscrowSecurityAlert.record
com.apple.EscrowSecurityAlert.reset
com.apple.EscrowSecurityAlert.notifyQueue
CloudServices
ReportESAHealth
ESA-health
Unexpected escrow state
87327574
@"NSDictionary"8@?0
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.notifyd.matching
CKErrorDomain
CKRetryAfter
0 escrow records exist for this account
ProtectedCloudStorageTLKFound
ProtectedCloudStorage
failed to find PCS tlks for account
v16@?0^{__CFString=}8
SecureBackupStingrayMetadata
ClientMetadata
SecureBackupKeyRegistry
PublicIdentities
v24@?0@"NSString"8@"NSNumber"16
PCSCKMirrorStatus-%@
PCSCKMirrorStatus
v24@?0@"NSDictionary"8@"NSError"16
com.apple.security.ESAHealthSummary
-[EscrowSecurityAlert handleNotification:]
com.apple.EscrowSecurityAlert.daily
NextTTRDate
com.apple.EscrowSecurityAlert.diagnostic-queue
507587
%@-%@
Triggered ESATTR: %@ - %@
Related radar: rdar://%@
tap-to-radar://new?Title=%@&ComponentName=%@&ComponentVersion=%@&Reproducibility=Not%%20Applicable&ComponentID=%@&Classification=Crash/Hang/Data%%20Loss&Description=%@
Tap-To-Radar
Go away
EscrowSecurityAlert
com.apple.security
LSApplicationWorkspace
Unable to find class %s
_AKAddTestAccountHeader
personID
PasswordConfigured
CDPShouldRepair
CDPManateeAvailable
WAvailable
OTCliqueStatus
SOSStatus
timestamp
internal
build
accountSecurityLevel
cdpShouldRepair
cdpShouldRepairError
cdpManateeAvailable
cdpManateeAvailableError
wAvailable
wAvailableError
otCliqueStatus
otCliqueStatusError
sosStatus
sosStatusError
testAccount
iCDPEnabledForDSID
passcodeEnabled
notificationsAllowed
thresholdLevel
notificationType
Error
ESAHealthSampleUpdateStorageKey
type
previousStateFirstSample
previousStateLastSample
currentStateFirstSample
currentStateMostRecentSample
v32@?0@8@"HealthSampleUpdateRecord"16^B24
Timestamp
ErrorCode
ErrorDomainHash
_prev
_storage
daemon
errorDomain
errorCode
CloudServicesAnalytics
SecureBackupSynchronize
SecureBackupUsesRandomPassphrase
SecureBackupEnabled
SecureBackupEscrowTrustStatus
recordStatus
SecureBackupiCDPRecords
invalid
EscrowServiceErrorDomain
CloudServicesErrorDomain
SecureBackupSuppressServerFiltering
mutableCopy
disableWithInfo:
tlkRecoverabilityForEscrowRecord:error:
decodeBoolForKey:
standardUserDefaults
addObject:
isEqualToSet:
containsObject:
userInfo
openSensitiveURL:withOptions:
errorWithDomain:code:userInfo:
initWithContextData:
dictionaryWithObjects:forKeys:count:
dateByAddingTimeInterval:
addEntriesFromDictionary:
isEqualToNumber:
setObject:forKeyedSubscript:
objectForKeyedSubscript:
timeIntervalSince1970
boolValue
initWithCapacity:
dictionaryToEscrowRecord:
date
objectForKey:
setObject:forKey:
boolForKey:
initWithCString:encoding:
mainBundle
accountProperties
shouldPerformRepairWithOptionForceFetch:error:
dailyCoreAnalyticsMetrics:
numberWithUnsignedInteger:
enumerateKeysAndObjectsUsingBlock:
removeObjectForKey:
backupWithInfo:
defaultWorkspace
aa_primaryAppleAccount
intValue
encodeObject:forKey:
compare:
numberWithUnsignedInt:
authKitAccountWithAltDSID:
removeCharactersInString:
logSuccessForEventNamed:
pcsMirrorKeysForServices:reply:
aa_altDSID
encodeInteger:forKey:
setContext:
code
initWithSuiteName:
unarchivedObjectOfClass:fromData:error:
numberWithInteger:
stringWithFormat:
defaultAnalyticsDatabasePath:
URLWithString:
encodeInt:forKey:
numberWithInt:
arrayWithObjects:count:
decodeObjectOfClasses:forKey:
logResultForEvent:hardFailure:result:withAttributes:
URLQueryAllowedCharacterSet
getAccountInfoWithInfo:results:
setWithArray:
numberWithDouble:
initWithStartDate:endDate:
encodeBool:forKey:
logHardFailureForEventNamed:withAttributes:
archivedDataWithRootObject:requiringSecureCoding:error:
setValuesForKeysWithDictionary:
stringByAppendingString:
decodeObjectOfClass:forKey:
isManateeAvailable:
CKKSControlObject:error:
formUnionWithCharacterSet:
numberWithBool:
initWithFormat:arguments:
doubleValue
decodeIntegerForKey:
setValue:forKey:
stringByAddingPercentEncodingWithAllowedCharacters:
valueForKeyPath:
isICDPEnabledForDSID:
openURL:withOptions:error:
countByEnumeratingWithState:objects:count:
AddMultiSamplerForName:withTimeInterval:block:
securityLevelForAccount:
initWithDomain:code:userInfo:
dictionaryWithObjectsAndKeys:
domain
decodeIntForKey:
localizedStringForKey:value:table:
fetchCliqueStatus:
openURL:configuration:completionHandler:
valueForKey:
isEqualToString:
count
recoverSilentWithCDPContextInDaemon:allRecords:reply:
recoverWithCDPContextInDaemon:escrowRecord:reply:
restoreKeychainAsyncWithPasswordInDaemon:keybagDigest:haveBottledPeer:viewsNotToBeRestored:reply:
createICDPRecordWithRequest:recordContents:reply:
beginHSA2PasscodeRequest:desirePasscodeImmediately:uuid:reason:reply:
getAcceptedTermsForAltDSID:reply:
init
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
prompt:
cancelAlert
isNotificationSnoozed
isNotificationDisabled
alertType
tlkRecoverabilityRetryWithClique:record:error:
inCircle
metrics
tLKRecoverabilityMetrics:tapToRadar:
foreachStingrayService:
pcsRecoverabilityMetrics:tapToRadar:
handleTimerEvent
handleNotification:
delegate
setDelegate:
notifyQueue
analyticsStore
results
setResults:
tapToRadar
setTapToRadar:
.cxx_destruct
_delegate
_notifyQueue
_analyticsStore
_results
_tapToRadar
T@"NSObject<OS_dispatch_queue>",R,&,V_notifyQueue
T@"SecureBackup",R,&,V_sb
T@"ESAHealthSampleAnalyticsStore",R,V_analyticsStore
T@"NSDictionary",&,V_results
T@"SecTapToRadar",&,V_tapToRadar
T@"<EscrowSecurityAlertDelegateProtocol>",&,V_delegate
keyname:
isRateLimited:
disableTTRsEntirely
triggerTapToRadar:
askUserIfTTR:
initTapToRadar:description:radar:
isRateLimited
updateRetryTimestamp
clearRetryTimestamp
trigger
componentID
setComponentID:
componentName
setComponentName:
componentVersion
setComponentVersion:
alert
setAlert:
radarDescription
setRadarDescription:
radarnumber
setRadarnumber:
queue
setQueue:
_componentID
_componentName
_componentVersion
_alert
_radarDescription
_radarnumber
_queue
T@"NSString",&,V_alert
T@"NSString",&,V_radarDescription
T@"NSString",&,V_radarnumber
T@"NSObject<OS_dispatch_queue>",&,V_queue
T@"NSString",&,V_componentID
T@"NSString",&,V_componentName
T@"NSString",&,V_componentVersion
getAccountTypeWithAccountStore:accountManager:
getCDPShouldRepair:error:
getCDPManateeAvailable:error:
getOTCliqueStatusWithContext:error:
getSOSStatusWithError:
testAccount
getIsICDPEnabledForDSIDWithAccountStore:
getPasscodeEnabled
current
initWithAuthKitManager:accountStore:cdpStateController:otConfigurationContext:
logErrors
timestamp
setTimestamp:
internal
setInternal:
build
setBuild:
accountSecurityLevel
setAccountSecurityLevel:
cdpShouldRepair
setCdpShouldRepair:
cdpShouldRepairError
setCdpShouldRepairError:
cdpManateeAvailable
setCdpManateeAvailable:
cdpManateeAvailableError
setCdpManateeAvailableError:
wAvailable
setWAvailable:
wAvailableError
setWAvailableError:
otCliqueStatus
setOtCliqueStatus:
otCliqueStatusError
setOtCliqueStatusError:
sosStatus
setSosStatus:
sosStatusError
setSosStatusError:
setTestAccount:
iCDPEnabledForDSID
setICDPEnabledForDSID:
passcodeEnabled
setPasscodeEnabled:
_internal
_testAccount
_iCDPEnabledForDSID
_passcodeEnabled
_sosStatus
_timestamp
_build
_accountSecurityLevel
_cdpShouldRepair
_cdpShouldRepairError
_cdpManateeAvailable
_cdpManateeAvailableError
_wAvailable
_wAvailableError
_otCliqueStatus
_otCliqueStatusError
_sosStatusError
T@"NSDate",C,N,V_timestamp
TB,N,V_internal
T@"NSString",C,N,V_build
TQ,N,V_accountSecurityLevel
Tq,N,V_cdpShouldRepair
T@"NSError",C,N,V_cdpShouldRepairError
Tq,N,V_cdpManateeAvailable
T@"NSError",C,N,V_cdpManateeAvailableError
Tq,N,V_wAvailable
T@"NSError",C,N,V_wAvailableError
Tq,N,V_otCliqueStatus
T@"NSError",C,N,V_otCliqueStatusError
Ti,N,V_sosStatus
T@"NSError",C,N,V_sosStatusError
TB,N,V_testAccount
TB,N,V_iCDPEnabledForDSID
TB,N,V_passcodeEnabled
initWithCoder:
encodeWithCoder:
supportsSecureCoding
TB,R
setNotificationDisabled:
shouldAllowSnooze
notificationSnoozed
setAlertType:
reset
notificationDisabled
TB,N,GisNotificationDisabled
TB,R,N
Ti,N
stateForType:
errorForType:
sameValueAndErrorAsHealthSample:forType:
isNewerThanHealthSample:
initWithRecordType:initialSample:
updatedRecordWithHealthSample:
previousState
previousStateError
previousStateDuration
currentState
currentStateError
currentStateDuration
dict
type
previousStateFirstSample
previousStateLastSample
currentStateFirstSample
currentStateMostRecentSample
_type
_previousStateFirstSample
_previousStateLastSample
_currentStateFirstSample
_currentStateMostRecentSample
T@"HealthSample",R,N,V_previousStateFirstSample
T@"HealthSample",R,N,V_previousStateLastSample
T@"HealthSample",R,N,V_currentStateFirstSample
T@"HealthSample",R,N,V_currentStateMostRecentSample
TQ,R,N,V_type
T@"NSNumber",R,N
T@"NSError",R,N
T@"NSDateInterval",R,N
initWithDictionary:
recordForType:
lastHealthSampleTimestamp
updatedValueWithHealthSample:
metricsDict
lastHealthSample
_storage
_lastHealthSample
T@"HealthSample",R,N,V_lastHealthSample
T@"NSDate",R,N
initWithStorage:
lastUpdate
lastHealthCheckTimestamp
performUpdate
updateWithHealthSample:
storage
_lastUpdate
T@"NSUserDefaults",R,N,V_storage
T@"HealthSampleUpdate",R,N
logger
databasePath
logSuccessForEvent:
logUnrecoverableError:forEvent:withAttributes:
codeForNSError:
codeForErrno:
sanitizedError:
errorWithCode:format:
errorWithCode:error:format:
errorWithCode:URL:format:
errorWithCode:error:URL:format:
errorWithDomain:code:format:
errorForNSError:path:format:
ESADelegate
EscrowSecurityAlertDelegateProtocol
NSObject
EscrowSecurityAlert
SecTapToRadar
HealthSample
SecureCoding
NSSecureCoding
NSCoding
ESALocalSettings
StateExtraction
HealthSampleUpdateRecord
HealthSampleUpdate
ESAHealthSampleAnalyticsStore
CloudServicesAnalytics
CloudServicesError
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v20@0:8i16
v16@0:8
i16@0:8
@40@0:8@16@24^@32
@32@0:8@16^B24
v24@0:8@?16
v24@0:8@16
@"<EscrowSecurityAlertDelegateProtocol>"
@"NSObject<OS_dispatch_queue>"
@"SecureBackup"
@"ESAHealthSampleAnalyticsStore"
@"NSDictionary"
@"SecTapToRadar"
@24@0:8@16
@40@0:8@16@24@32
@"NSString"
Q32@0:8@16@24
i32@0:8@16^@24
q32@0:8@16^@24
i24@0:8^@16
@48@0:8@16@24@32@40
v20@0:8B16
v24@0:8Q16
q16@0:8
v24@0:8q16
@"NSDate"
@"NSError"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8Q16
B32@0:8@16Q24
@32@0:8Q16@24
@"HealthSample"
@"HealthSampleUpdate"
@"NSUserDefaults"
v40@0:8@16@24@32
q24@0:8@16
q24@0:8q16
@32@0:8q16@24
@40@0:8q16@24@32
@48@0:8q16@24@32@40
@40@0:8@16q24@32
In %s
Don't replace a ELE notification with one about a burned record
CFUserNotificationUpdate err=%d
Can't make notification err=%x
%s: starting xpc transaction
%s: unexpected xpc transaction count
Exit %s
Error displaying alert: %d
Error getting alert response: %d
Error disabling backup: %@
Error resetting circle: %@
could not open %@: %@
opened %@
canceling alert
%s: ending xpc transaction
fetching metrics, last request at %u (now %u)
rate-limiting metrics
triggering TTR
CK rate-limited, sleeping %d secs
Record %@, can recover views: %@
handleTLKRecoverabilityMetrics: failed to verify record: %@, error: %@
failed to acquire CKKS control object: %@
error getting PCS CKMirror keys from CKKS: %@
Daily maintenance
got error back from getAccountInfoWithInfo: %@
not in circle, skipping daily maintance
End of daily maintenance
alert: %@
Getting info
Triggering TTR: %@
Failed to create notification error %@
Not showing ttr due to ratelimiting: %@
No code for POSIX error: %s (%d)
softlink:r:path:/System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.cdp.utility</key>
<true/>
<key>com.apple.cdp.walrus</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.ckks</key>
<true/>
<key>com.apple.private.notificationcenter-system</key>
<array>
<dict>
<key>identifier</key>
<string>com.apple.EscrowSecurityAlert</string>
</dict>
</array>
<key>com.apple.private.octagon</key>
<true/>
<key>com.apple.private.security.storage.SFAnalytics</key>
<true/>
<key>com.apple.securebackupd.access</key>
<true/>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>keychain-cloud-circle</key>
<true/>
</dict>
</plist>
