com.apple.AuthenticationServices.AuthorizationError
ASAuthorizationAppleIDCredentialRevokedNotification
v24@?0q8@"NSError"16
ASAccountAuthenticationModificationServiceViewController
com.apple.SafariViewService
ASAuthorizationControllerContinueButton
v8@?0
Sign Up Not Completed
Continue
v20@?0B8@"LAContext"12
v24@?0@"NSDictionary"8@"NSError"16
exclamationmark.circle
Continue with Passcode
Continue with Password
Done
Signing in
v12@?0B8
v16@?0@"<UIViewControllerTransitionCoordinatorContext>"8
credentialID
<%@: %p; isEnabled=%@; supportsIncrementalUpdates=%@>
com.apple.AuthenticationServices.ASPublicKeyCredentialManager
@"ASCPlatformPublicKeyCredentialLoginChoice"16@?0@"_WKWebAuthenticationAssertionResponse"8
v16@?0@"_WKWebAuthenticationAssertionResponse"8
@"ASCSecurityKeyPublicKeyCredentialLoginChoice"16@?0@"_WKWebAuthenticationAssertionResponse"8
@"_WKPublicKeyCredentialRequestOptions"16@?0@"ASCPublicKeyCredentialAssertionOptions"8
https://
v24@?0@"_WKAuthenticatorAssertionResponse"8@"NSError"16
@"_WKPublicKeyCredentialParameters"16@?0@"NSNumber"8
@"_WKPublicKeyCredentialDescriptor"16@?0@"ASCPublicKeyCredentialDescriptor"8
v24@?0@"_WKAuthenticatorAttestationResponse"8@"NSError"16
@"NSNumber"16@?0@"NSString"8
Did not find a valid extension for request.
v24@?0@"NSExtension"8@"NSError"16
Did not find Account Authentication Modification extension.
v16@?0@"NSExtension"8
iCloud Keychain must be enabled to perform strong password upgrades.
Discovered extension %@ does not support strong password upgrades.
Calling process is not entitled
com.apple.AuthenticationServicesCore.AuthorizationErrorAlertQueue
Use Security Key
Save on Another Device
Sign In with Another Device
Other Options
Other Sign In Options
Manually enter password
B16@?0@"<ASCLoginChoiceProtocol>"8
v24@?0@"<ASCCredentialProtocol>"8@"NSError"16
Select an account to continue
rawClientDataJSON
baseCredential
rawAttestationObject
ASExtensionErrorDomain
ASExtensionLocalizedFailureReasonErrorKey
Sign In (Manual password entry view controller)
Enter a PIN to unlock your security key.
User
WebAuthn Security Key prompt (PIN entry)
Password
PIN validation successful
AuthenticationServicesIncorrectPinEntryAnimation
transform
provideCredentialWithoutUserInteraction(for:)
-provideCredentialWithoutUserInteractionForIdentity:
ASCredentialIdentityStoreErrorDomain
v20@?0B8@"NSError"12
v16@?0@"SFCredentialProviderExtensionState"8
algorithm
v16@?0@"NSError"8
state
access_token
id_token
v32@?0@"NSString"8@16^B24
<%@: %p, state: %@, accessToken: %@, identityToken: %@, authorizedScopes: %@, authenticatedResponse: %@, privateKeys: %@>
rawAuthenticatorData
userID
signature
full_name
email
<%@: %p { provider: %@ }>
<%@: %p { provider: %@, credential: %@ }>
v16@?0@"NSString"8
Unable to sign in
No view controller specified for request.
DeviceClassNumber
Insert and activate your security key, or bring it near the top of your iPhone.
Insert and activate your security key.
WebAuthn Security Key prompt (registration)
Cancel
The operation could not be completed. Please try again.
apple-internal-install
(Internal only: %@)
v24@?0@"ASCAuthorizationPresentationContext"8@"NSError"16
Sign In
KeyIcon
com.apple.AuthenticationServices
ASAuthorizationAppleIDCredential.m
Invalid parameter not satisfying: %@
user
authorizedScopes
<%@: %p { userIdentifier: %@, authorizedScopes: %@ }>
_user
_state
_authorizedScopes
_authorizationCode
_identityToken
_email
_fullName
_realUserStatus
v16@?0@"<_ASAccountAuthenticationModificationExtensionContextProtocol>"8
Cannot request Sign in with Apple authorization in the middle of a strong password upgrade.
Couldn't get application record while fetching authorization.
application-identifier
Host view controller deallocated.
v24@?0@"AKAuthorization"8@"NSError"16
User tapped cancel on Sign in with Apple sheet.
EnableSFAppAccountAuthenticationModificationExtension
com.apple.AuthenticationServices.%@.%p
com.apple.AuthenticationServices.ReadOnly.%@.%p
v16@?0@"NSArray"8
v24@?0@"NSArray"8@"NSError"16
apple.com
com.apple.AuthenticationServices.WebAuthenticationSession
The provided scheme is not valid. A scheme should not include special characters such as ":" or "/".
v24@?0@"NSURL"8@"NSError"16
Cannot start ASWebAuthenticationSession without providing presentation context. Set presentationContextProvider before calling -start.
The UIWindowScene for the returned window was not in the foreground active state.
com.apple.
SFAuthenticationSession
Class getSFAuthenticationSessionClass(void)_block_invoke
ASWebAuthenticationSessionIOS.m
Unable to find class %s
void *SafariServicesLibrary(void)
/System/Library/Frameworks/SafariServices.framework/SafariServices
/System/Library/Frameworks/SafariServices.framework/Contents/MacOS/SafariServices
transports
v32@?0@"<NSCopying>"8@"UIViewController"16@"NSError"24
Your iPad needs to connect to this device in order to sign in with or save a passkey.
Your iPod touch needs to connect to this device in order to sign in with or save a passkey.
Your iPhone needs to connect to this device in order to sign in with or save a passkey.
v16@?0@"<_ASCredentialProviderExtensionContextProtocol>"8
AuthenticationSession
Authorization
CredentialProviderExtension
Keychain
AccountAuthenticationModificationExtension
No user name
iCloud Keychain
Available on all your Apple devices
Security key
Use an external security key
iPhone, iPad, or Android device
Save a passkey on a device with a camera
Use passkey from a device with a camera
Credential (%@)
For this app
For this website
qrcode.viewfinder
key.fill
v32@?0@"NSUUID"8@"UIViewController"16@"NSError"24
get-task-allow
ASCredentialServiceIdentifierValue
ASCredentialServiceIdentifierType
domain
<%@: %p; type=%@; identifier=%@>
@"ASCPublicKeyCredentialDescriptor"16@?0@"ASAuthorizationPlatformPublicKeyCredentialDescriptor"8
_UIViewServiceHostDidEnterBackgroundNotification
preferred
required
discouraged
none
direct
indirect
enterprise
configuration_removed
_type
_style
highlightFilter
inputColor
filters.highlightFilter.inputColor
Continue with Apple
Sign up with Apple
Sign in with Apple
void _ASAuthorizationButtonInitialize(ASAuthorizationAppleIDButton *__strong)
ASAuthorizationAppleIDButton.m
self
ASAuthorizationController.m
authorizationRequests.count
v32@?0@"ASAuthorizationRequest"8Q16^B24
nonce
scope
v32@?0@"NSString"8Q16^B24
HTTP/1.1
B16@?0@"ASAuthorizationRequest"8
Passkeys do not support attestation.
No algorithms specified for ASAuthorizationSecurityKeyPublicKeyCredentialRegistrationRequest.
All Public Key Credential requests must use the same relyingPartyIdentifier.
Found duplicate requests. Only one of each type of request is currently supported.
Registration requests cannot be used with other types of requests.
com.apple.AuthenticationServices.AccountAuthenticationModificationExtensionHelper
Cannot start another Account Authentication Modification request until the current request finishes.
Received request is not a valid ASAccountAuthenticationModificationRequest subclass.
v24@?0@"UIViewController"8@"NSError"16
ASDebugASAccountAuthenticationModificationControllerUsesSafariViewService
v24@?0@"_ASAccountAuthenticationModificationRemoteViewController"8@"NSError"16
The new password will be saved to your iCloud Keychain and will AutoFill on all of your devices. You can view and remove saved passwords in Settings > Passwords, or by asking Siri.
Change to Strong Password
v16@?0@"UIAlertAction"8
Not Now
No presentation anchor provided to show strong password upgrade UI.
No presentation anchor provided to show extension UI.
convertAccountToSignInWithAppleWithoutUserInteractionForServiceIdentifier(for:existingCredential:userInfo:)
-convertAccountToSignInWithAppleWithoutUserInteractionForServiceIdentifier:existingCredential:userInfo:
prepareInterfaceToConvertAccountToSignInWithAppleForServiceIdentifier(serviceIdentifier:existingCredential:userInfo:)
-prepareInterfaceToConvertAccountToSignInWithAppleForServiceIdentifier:existingCredential:userInfo:
changePasswordWithoutUserInteraction(serviceIdentifier:credential:newPassword:userInfo:)
-changePasswordWithoutUserInteractionForServiceIdentifier:existingCredential:newPassword:userInfo:
prepareInterfaceToChangePasswordForServiceIdentifier(serviceIdentifier:credential:newPassword:userInfo:)
-prepareInterfaceToChangePasswordForServiceIdentifier:existingCredential:newPassword:userInfo:
@"ASCPublicKeyCredentialDescriptor"16@?0@"ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor"8
@"UIColor"16@?0@"UITraitCollection"8
serviceIdentifier
recordIdentifier
rank
credentialIdentityStoreIdentifier
<%@: %p; user=%@; serviceIdentifier=%@>
@"NSNumber"16@?0@"ASAuthorizationPublicKeyCredentialParameters"8
Bluetooth Off
Turn on Bluetooth
To sign in to another device using a passkey, your iPad needs to have Bluetooth turned on.
To sign in to another device using a passkey, your iPod touch needs to have Bluetooth turned on.
To sign in to another device using a passkey, your iPhone needs to have Bluetooth turned on.
To save a passkey on another device, your iPad needs to have Bluetooth turned on.
To save a passkey on another device, your iPod touch needs to have Bluetooth turned on.
To save a passkey on another device, your iPhone needs to have Bluetooth turned on.
To save a passkey on another device, your Mac needs to have Bluetooth turned on.
To sign in with a passkey from another device, your iPad needs to have Bluetooth turned on.
To sign in with a passkey from another device, your iPod touch needs to have Bluetooth turned on.
To sign in with a passkey from another device, your iPhone needs to have Bluetooth turned on.
To sign in with a passkey from another device, your Mac needs to have Bluetooth turned on.
implicit
login
refresh
logout
.@333333
0@ffffff
*@333333
@ffffff
?333333
@333333
Error enabling biometrics in credential picker: %{public}@
Biometric authentication not available. Falling back to passcode.
Passcode authentication in ASAuthorizationController credential picker failed with error: %{public}@
Asked to show biometric view without any biometrics available.
Error disabling biometrics UI: %{public}@
ASCredentialRequestConfirmButtonSubPane already in processing state, ignoring attempt.
Biometric auth failed or locked out. Switching to passcode authentication.
Biometric auth failed with error: %{public}@
Requesting PIN for security key.
Received unexpected assertion options.
Assertion completed: %ld.
Assertion failed: %{public}@
Replacing error %{public}@ with %{public}@
Not requesting platform credentials.
Platform authenticator not available.
Could not find assertion for user handle: %{private}@
Completion registration: %lu.
Ignoring unknown user verification preference "%{public}@"
Ignoring unknown attestation preference "%{public}@"
Failed to get bundle record for host application due to error: %{public}@
The caller is not entitled to coordinate account authentication modification extension requests
Deleted credential from Keychain after upgrading to Sign in with Apple.
Use Security Key button tapped but no security key login choice is available. Failing request.
Use caBLE button tapped but no caBLE login choice is available. Failing request.
Failed to get application name with error: %{public}@
authenticated for external password login choice but no credential is available
No credential provider extension available
Did not receive any external password credential because user canceled
Did not receive any external password credential because of error: %@
Biometric authentication in ASAuthorizationController credential picker failed.
Password authentication button pressed but selected login choice is not a Sign in with Apple login choice
Showing alert (%@) failed, user notification is nil!. Error: %d
Authentication provider tried to pop view controller but it was not the top view controller in the navigation stack
Asked to present unsupported error: %{public}@.
Class %{public}s must override %{public}s. Canceling extension request.
Class %{public}s's implementation of %{public}s should not call super. Canceling extension request.
Found credential of unexpected type: %{private}@
Rejecting update with no login choices.
Couldn't update interface because a new request view controller could not be created for the new login choices.
No request view controller specified for credential request.
Starting caBLE client: bluetoothEnabled: %{bool}d
Enabling Bluetooth
Starting caBLE authenticator: bluetoothEnabled: %{bool}d
Could not get bundle record to get icon for credential with error: %{public}@.
Could not get icon for password provider
Failed to get application record to revoke authorization with error: %{public}@
Authorization controller successfully revoked the upgrade authorization.
Authorization controller attempted to revoke upgrade authorization and failed with error: %@
Failed to get application record to request authorization due to error: %{public}@
Error when creating Sign in with Apple Authorization: %{public}@
Could not retrieve bundle identifier from %@
The provided scheme is not valid. A scheme should not include special characters such as ":" or "/".
%{public}@ Please adopt the new API as soon as possible (rdar://50384281).
Attempted to set ASNavigationItem on iOS. ASNavigationItem is UINavigationItem on iOS and is a readonly property.
Device does not support transport: %{public}@. Ignoring.
Could not get bundle record to fetch password manager name error: %{public}@.
Failed to get remote view controller: %{public}@
Extension would ordinarily be killed due to timeout, but is kept alive for debugging
Killing extension due to timeout during non-UI request
Extension requires user interaction - re-running with UI
ASAuthorizationController credential request failed with error: %{public}@
Rejecting invalid requests.
Found request for unexpected type: %{private}@
Failed to find helper extension to perform Account Authentication Modification Extension requests with error %{public}@.
Failed to get remote view controller from helper extension: %{public}@
No presentation anchor provided to strong password upgrade UI.
No presentation anchor provided to show extension UI.
Refusing to send credential identity with store identifier [%{public}@] to to extension with store identifier [%{public}@]
Extension did not find a credential corresponding the identity. Invalidating the identity store.
Failed to remove credential identity store with error: %{public}@
softlink:r:path:/System/Library/Frameworks/SafariServices.framework/SafariServices
ASCredentialRequestButtonContinue
ASNSLayoutConstraintExtras
ASAuthorizationAppleIDProvider
AKAuthorizationNotificationHandler
AKAdaptiveServiceInterface
ASAuthorizationProvider
NSObject
ASAccountAuthenticationModificationRemoteViewControllerProtocol
_ASAccountAuthenticationModificationRemoteViewController
ASAuthorizationProviderExtensionAuthorizationResult
ASCredentialRequestConfirmButtonSubPane
LAUIAuthenticationDelegate
ASCredentialRequestInfoLabelSubPane
ASCredentialRequestContainerViewControllerAnimator
UIViewControllerAnimatedTransitioning
ASCredentialRequestContainerViewController
UIViewControllerTransitioningDelegate
UINavigationControllerDelegate
ASAuthorizationPlatformPublicKeyCredentialDescriptor
ASAuthorizationPublicKeyCredentialDescriptor
NSSecureCoding
NSCoding
NSCopying
ASCredentialIdentityStoreState
ASPublicKeyCredentialManager
_WKWebAuthenticationPanelDelegate
ASPublicKeyCredentialManagerInterface
ASAccountAuthenticationModificationServiceViewControllerProtocol
ASAccountAuthenticationModificationServiceViewController
_ASAccountAuthenticationModificationHostViewControllerDelegate
ASCredentialPickerPaneViewController
SFCredentialProviderExtensionManagerObserver
_ASPasswordCredentialAuthenticationViewControllerDelegate
_ASAuthenticationPresentationProvider
ASCredentialRequestSubPaneConfirmButtonDelegate
UITableViewDataSource
_ASIncomingCallObserver
CXCallObserverDelegate
ASPublicKeyCredentialBase
ASPublicKeyCredential
ASAuthorizationCredential
ASAuthorizationSecurityKeyPublicKeyCredentialRegistration
ASAuthorizationPublicKeyCredentialRegistration
_ASInsetTextField
ASPasswordAuthenticationPaneViewController
ASCredentialProviderViewController
AuthenticationServicesExtras
ASCredentialRequestPaneContext
ASCredentialRequestCABLEClientViewController
ASAuthorizationSecurityKeyPublicKeyCredentialProvider
ASCredentialIdentityStore
ASAuthorizationPublicKeyCredentialParameters
ASAccountAuthenticationModificationExtensionContext
_ASAccountAuthenticationModificationExtensionContextProtocol
ASAuthorizationSingleSignOnCredential
ASAuthorizationSecurityKeyPublicKeyCredentialAssertion
ASAuthorizationPublicKeyCredentialAssertion
ASCredentialRequestCABLEConnectingViewController
ASAuthorization
ASAuthorizationViewController
ASCredentialRequestPaneViewControllerDelegate
ASCredentialRequestContainerViewControllerDelegate
ASPasswordAuthenticationPaneViewControllerDelegate
ASCredentialRequestIconGenerator
ASAuthorizationAppleIDCredential
_ASAccountAuthenticationModificationHostViewController
_ASAccountAuthenticationModificationExtensionHostContextDelegate
_ASExtensionHostContextDelegate
ASAuthorizationRequest
_ASAccountAuthenticationModificationExtensionManager
ASAuthorizationSingleSignOnProvider
ASWebAuthenticationSession
ASCredentialRequestImageSubPane
ASAuthorizationAppleIDRequest
_ASCredentialProviderExtensionHostContext
_ASCredentialProviderExtensionHostContextProtocol
_ASExtensionHostContext
ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor
ASCredentialRequestPaneViewController
UITableViewDelegate
UIScrollViewDelegate
ASCredentialRequestBasicPaneViewController
ASPasswordCredential
_ASCredentialProviderExtensionContextProtocol
ASCredentialRequestCABLEConsentViewController
_ASCredentialProviderExtensionConfigurationViewController
_ASCredentialProviderExtensionHostContextDelegate
ASAuthorizationPlatformPublicKeyCredentialProvider
ASCredentialRequestLoginChoiceCell
ASAccountAuthenticationModificationRequest
ASAuthorizationPlatformPublicKeyCredentialAssertion
_ASExtensionViewController
ASCredentialServiceIdentifier
ASCredentialRequestSubPane
_ASAccountAuthenticationModificationExtensionHostContext
_ASAccountAuthenticationModificationExtensionHostContextProtocol
ASAuthorizationPlatformPublicKeyCredentialAssertionRequest
ASAuthorizationPublicKeyCredentialAssertionRequest
ASBackgroundObserver
ASAuthorizationPlatformPublicKeyCredentialRegistration
ASNavigationController
ASAccountAuthenticationModificationUpgradePasswordToStrongPasswordRequest
ASAuthorizationProviderExtensionAuthorizationRequest
ASAuthorizationAppleIDButton
ASAuthorizationController
SOAuthorizationDelegate
ASAccountAuthenticationModificationController
_ASAccountAuthenticationModificationRemoteViewControllerDelegate
ASCredentialRequestSecondaryButton
ASAccountAuthenticationModificationReplacePasswordWithSignInWithAppleRequest
ASAuthorizationPasswordRequest
ASAccountAuthenticationModificationViewController
ASAuthorizationPlatformPublicKeyCredentialRegistrationRequest
ASAuthorizationPublicKeyCredentialRegistrationRequest
_ASPasswordCredentialAuthenticationViewController
ASAuthorizationSecurityKeyPublicKeyCredentialAssertionRequest
ASViewServiceInterfaceUtilities
ASCredentialProviderExtensionContext
ASAuthorizationPasswordProvider
ASPasswordCredentialIdentity
ASAuthorizationSecurityKeyPublicKeyCredentialRegistrationRequest
ASCredentialRequestEnableBluetoothViewController
ASCredentialRequestButton
_ASCredentialListViewController
ASAuthorizationOpenIDRequest
ASAuthorizationSingleSignOnRequest
initWithFrame:
_commonInit
initWithCoder:
_preferredFontForTextStyle:maximumContentSizeCategory:
setTextAlignment:
setAdjustsFontForContentSizeCategory:
setAdjustsFontSizeToFitWidth:
setBackgroundColor:
setFont:
whiteColor
setTextColor:
setTranslatesAutoresizingMaskIntoConstraints:
setTitleLabel:
titleLabel
addSubview:
layer
setCornerRadius:
centerYAnchor
constraintEqualToAnchor:
leadingAnchor
constraintEqualToAnchor:constant:
trailingAnchor
arrayWithObjects:count:
activateConstraints:
isHighlighted
setHighlighted:
isEnabled
setEnabled:
colorWithRed:green:blue:alpha:
colorWithAlphaComponent:
systemGrayColor
as_constraintsMatchingFrameOfView:withFrameOfView:edgeInsets:
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
as_constraintsMatchingFrameOfView:withFrameOfView:
initialize
startServiceWithNotificationHandler:
initWithProvider:
setUserID:
errorWithDomain:code:userInfo:
getCredentialStateForRequest:completion:
defaultCenter
postNotificationName:object:
activate
credentialStateDidChange:completion:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
createRequest
getCredentialStateForUserID:completion:
requestViewController:fromServiceWithBundleIdentifier:connectionHandler:
_plugIn
uuid
serviceViewControllerProxy
upgradeCredentialToSignInWithApple:forServiceIdentifier:userInfo:extensionUUID:
updateCredential:forServiceIdentifier:userInfo:extensionUUID:
accountModificationRemoteViewControllerDidFinishUpgradeToSignInWithApple:userInfo:completion:
accountModificationRemoteViewController:didFinishWithCredential:userInfo:completion:
accountModificationRemoteViewController:requestCanceledWithError:completion:
presentAccountModificationRemoteViewController:
dismissAccountModificationRemoteViewController:
requestToUpgradeToSignInWithAppleDidFinishWithUserInfo:completion:
requestDidFinishWithCredential:userInfo:completion:
requestDidFailWithError:completion:
presentAccountModificationRemoteViewController
dismissAccountModificationRemoteViewController
interfaceWithProtocol:
setWithObject:
setClasses:forSelector:argumentIndex:ofReply:
_exportedInterface
accountModificationRemoteViewController:viewServiceDidTerminateWithError:
requestViewControllerWithConnectionHandler:
exportedInterface
serviceViewControllerInterface
upgradeCredentialToSignInWithApple:forServiceIdentifier:userInfo:extension:
updateCredential:forServiceIdentifier:userInfo:extension:
viewServiceDidTerminateWithError:
delegate
setDelegate:
.cxx_destruct
_delegate
T@"<_ASAccountAuthenticationModificationRemoteViewControllerDelegate>",W,N,V_delegate
init
array
setPrivateKeys:
initWithHTTPAuthorizationHeaders:
initWithHTTPResponse:httpBody:
httpAuthorizationHeaders
setHttpAuthorizationHeaders:
httpResponse
setHttpResponse:
httpBody
setHttpBody:
privateKeys
authorizationResult
_authorizationResult
T@"SOAuthorizationResult",R,N,V_authorizationResult
T@"NSDictionary",&,N
T@"NSHTTPURLResponse",C,N
T@"NSData",&,N
T@"NSArray",&,N
_createMainStackView
initWithView:
setContentCompressionResistancePriority:forAxis:
isBiometricAuthenticationAvailable
_initializeAuthorizationButton
_windowDidBecomeKey:
addObserver:selector:name:object:
authorizationButton
buttonText
setButtonText:
removeObserver:
dealloc
setAccessibilityIdentifier:
setSpacing:
setAlignment:
setAxis:
setDistribution:
clearColor
addArrangedSubview:
centerXAnchor
widthAnchor
heightAnchor
constraintEqualToConstant:
isMechanismEnabled:
_enableLAUIAuthenticationMechanism
enableMechanism:error:
safari_privacyPreservingDescription
biometryType
_switchToBiometricsView:withAuthenticationMechanismEnabled:showAlert:alertString:
_switchToAppleAccountPassword
_passcodeOrPasswordButtonTitle
_authorizeAppleAccountWithPasswordButtonSelected:
addTarget:action:
_authorizationButtonBioSelected:
_authorizationWithPasscodeOrPasswordButtonSelected:
stackView
_continueButtonTapped
performAuthorization:withAuthenticatedLAContext:
_performPasscodeOrPasswordValidation:
_isDelegateReadyForAuthorization
performPasswordAuthentication:
userTappedContinueButton
dictionaryWithObjects:forKeys:count:
evaluatePolicy:options:reply:
validateReadyForAuthorization:
subviews
copy
countByEnumeratingWithState:objects:count:
removeFromSuperview
_disableBiometricView
_addArrangedSpaceToMainStackView:
_setUpAlertImageWithConstraints
_setupLabelWithTitle:animated:
_setupBiometricButtonWithConstraints:
disableMechanism:error:
_verticalSpacerWithConstant:
addConstraint:
redColor
setTintColor:
configurationWithPointSize:weight:
setPreferredSymbolConfiguration:
systemImageNamed:
setImage:
setContentMode:
setFrame:
view
defaultMetrics
systemFontOfSize:weight:
scaledFontForFont:
setNumberOfLines:
setText:
setMaximumContentSizeCategory:
setCustomSpacing:afterView:
_updateLabelAnimatedWithTitle:
animation
functionWithName:
setTimingFunction:
setType:
setDuration:
addAnimation:forKey:
initWithFrame:mechanisms:
addObjectsFromArray:
_passwordAuthenticationButtonTitle
_setGlyphViewGestureRecognizerEnabled:
firstObject
gestureRecognizers
_waitForTimeInterval:withGroup:
invalidateProcessingState
confirmButtonSubPaneDidEnterProcessingState:withAuthenticatedContext:
code
domain
isEqualToString:
_switchToPasscodeOrPassword
confirmButtonSubPaneDidFailBiometry:
_enterProcessingStateWithCompletionHandler:
addToStackView:withCustomSpacingAfter:context:
authenticationResult:error:context:
biometricNoMatch
localizedSubTitleForMechanisms:
processBiometricMatchWithCompletionHandler:
callerIconBundlePath
localizedCallerName
setAuthorizationCapabilityEnabled:
authorizationCapabilityEnabled
showContinueWithPasswordButton
showAlertContinuingWithPassword:
setUpButtonInPaneContext:
showContinueButton
showAuthenticationMechanismForExternalPasswordCredential
biometricAuthenticationFailureWithAlertString:
finishProcessingWithCompletionHandler:
_mainStackView
_containerView
_canPerformBiometricAuthentication
_authorizationButtonContainerView
_biometricsView
_paneContext
_biometricLabel
_processingStateCompletionHandler
_processingStateGroup
_authorizationButton
T@"NSString",C,N
T@"ASCredentialRequestButton",R,N,V_authorizationButton
T@"<ASCredentialRequestSubPaneConfirmButtonDelegate>",W,N,V_delegate
TB,N
_infoLabelWithString:labelType:
_infoLabelMarginInset
_fontForLabelType:
labelColor
messageLabelColor
titleFont
messageFont
isPad
marginInset
text
initWithString:labelType:
setMarginInset:
_infoLabel
_marginInset
Td,N,V_marginInset
T@"NSString",&,N
initWithPresenting:
isPresenting
viewControllerForKey:
_viewControllerForTransitionContext:
containerView
bounds
layoutIfNeeded
performWithoutAnimation:
completeTransition:
_animateUsingDefaultTimingWithOptions:animations:completion:
transitionDuration:
animateTransition:
interruptibleAnimatorForTransition:
animationEnded:
_presenting
presenting
TB,R,N,GisPresenting,V_presenting
initWithNibName:bundle:
setModalPresentationStyle:
setTransitioningDelegate:
_handleTapGesture:
initWithTarget:action:
setCancelsTouchesInView:
viewDidLoad
addGestureRecognizer:
setOpaque:
rootViewController
willMoveToParentViewController:
addChildViewController:
didMoveToParentViewController:
viewWillAppear:
isBeingPresented
preferredContentSize
_dismissalFrameForContentSize:
viewIfLoaded
transitionCoordinator
isAnimated
setContainerContentSize:animated:
effectWithStyle:
setEffect:
colorWithWhite:alpha:
animateAlongsideTransition:completion:
viewDidAppear:
presentViewController:animated:completion:
viewWillDisappear:
isBeingDismissed
dismissViewControllerAnimated:completion:
containerContentSize
locationInView:
frame
_shouldDismiss
requestContainerViewControllerDidDismiss:
requestContainerViewControllerShouldDismiss:
_layoutFrameForContentSize:
initWithDuration:timingParameters:
addAnimations:
startAnimation
_setPaneDelegateForTopViewController
topViewController
_setPaneDelegateForViewController:
paneDelegate
_setPaneDelegate:forViewController:
_clearPaneDelegateForViewController:
_layoutContainerView:
preferredContentSizeDidChangeForChildContentContainer:
viewForKey:
viewWillTransitionToSize:withTransitionCoordinator:
animationControllerForPresentedController:presentingController:sourceController:
animationControllerForDismissedController:
interactionControllerForPresentation:
interactionControllerForDismissal:
presentationControllerForPresentedViewController:presentingViewController:sourceViewController:
navigationController:willShowViewController:animated:
navigationController:didShowViewController:animated:
navigationControllerSupportedInterfaceOrientations:
navigationControllerPreferredInterfaceOrientationForPresentation:
navigationController:interactionControllerForAnimationController:
navigationController:animationControllerForOperation:fromViewController:toViewController:
initWithRootViewController:
supportedInterfaceOrientations
setPaneDelegate:
setContainerContentSize:
setRootViewController:
blurBackgroundView
setBlurBackgroundView:
_tapGestureRecognizer
_rootViewController
_paneDelegate
_blurBackgroundView
_containerContentSize
T@"UIVisualEffectView",&,N,V_blurBackgroundView
T{CGSize=dd},N,V_containerContentSize
T@"UIViewController",&,N,V_rootViewController
T@"<ASCredentialRequestContainerViewControllerDelegate>",W,N,V_delegate
T@"<ASCredentialRequestPaneViewControllerDelegate>",W,N,V_paneDelegate
initWithCredentialID:transports:
credentialID
initWithCredentialID:
decodeObjectOfClass:forKey:
encodeObject:forKey:
supportsSecureCoding
encodeWithCoder:
TB,R
copyWithZone:
setCredentialID:
T@"NSData",C,N
coreDescriptor
_credentialID
T@"ASCPublicKeyCredentialDescriptor",R,N
T@"NSData",C,N,V_credentialID
numberWithBool:
stringWithFormat:
initWithEnabledState:supportsIncrementalUpdates:
supportsIncrementalUpdates
_enabled
_supportsIncrementalUpdates
enabled
TB,R,N,GisEnabled,V_enabled
TB,R,N,V_supportsIncrementalUpdates
dictionary
didReceiveError:
didFetchPlatformLoginChoices:
userHandle
setObject:forKeyedSubscript:
name
displayName
initWithName:displayName:userHandle:relyingPartyIdentifier:
safari_mapObjectsUsingBlock:
_tearDownOnMainQueue
initWithName:displayName:userHandle:
didFetchSecurityKeyLoginChoices:
cancelCurrentOperationIfNecessaryWithOverrideError:
requestPINWithRemainingRetries:completionHandler:
_asToWKCredentialAssertionOptions:
objectAtIndexedSubscript:
relyingPartyIdentifier
authenticatorAttachment
allowCredentials
safari_addObjectsFromArrayUnlessNil:
setAuthenticatorAttachment:
count
setAllowCredentials:
challenge
stringByAppendingString:
getClientDataJSONForAuthenticationType:challenge:origin:
attachment
didCompleteAssertionWithCredential:error:
clientDataHash
dataWithLength:
bytes
length
mutableBytes
setClientDataHash:
getAssertionWithClientDataHash:options:completionHandler:
getAssertionWithChallenge:origin:options:completionHandler:
isUserVerifyingPlatformAuthenticatorAvailable
_createCredentialOfKind:withOptions:
objectForKeyedSubscript:
setLAContext:
clearAllLocalAuthenticatorCredentials
_cancelCurrentOperationSynchronouslyOnInternalQueueIfNecessary
_asToWKCredentialCreationOptions:forCredentialKind:
encodeMakeCredentialCommandWithClientDataHash:options:userVerificationAvailability:
encodeMakeCredentialCommandWithClientDataJSON:options:userVerificationAvailability:
initWithFirst:second:
encodeGetAssertionCommandWithClientDataHash:options:userVerificationAvailability:
encodeGetAssertionCommandWithClientDataJSON:options:userVerificationAvailability:
supportedAlgorithmIdentifiers
initWithAlgorithm:
initWithName:
setIdentifier:
userName
userIdentifier
userDisplayName
initWithName:identifier:displayName:
initWithRelyingParty:user:publicKeyCredentialParamaters:
shouldRequireResidentKey
setRequireResidentKey:
excludedCredentials
setExcludeCredentials:
userVerificationPreference
setUserVerification:
attestationPreference
setAttestation:
setAuthenticatorSelection:
setRelyingPartyIdentifier:
credentialKind
_allowedCredentialsForAssertionOptions:
allowedCredentials
didCompleteRegistrationWithCredential:error:
makeCredentialWithClientDataHash:options:completionHandler:
makeCredentialWithChallenge:origin:options:completionHandler:
cancel
removeAllObjects
panel:updateWebAuthenticationPanel:
panel:requestPINWithRemainingRetries:completionHandler:
panel:selectAssertionResponse:source:completionHandler:
panel:requestLAContextForUserVerificationWithCompletionHandler:
panel:decidePolicyForLocalAuthenticatorWithCompletionHandler:
panel:dismissWebAuthenticationPanelWithResult:
beginAssertionsWithOptions:
createNewPlatformCredentialWithOptions:authenticatedContext:
assertUsingPlatformCredentialForLoginChoice:authenticatedContext:
beginCreatingNewSecurityKeyCredentialIfAvailableWithOptions:
assertUsingSecurityKeyCredentialForLoginChoice:
clearAllCredentials
setDelegateCancellingCurrentOperation:
encodeMakeCredentialCommandWithOptions:authenticatorUserVerificationAvailability:
encodeGetAssertionCommandWithOptions:authenticatorUserVerificationAvailability:
hasRunningPublicKeyCredentialOperation
TB,R,N
_panel
_userHandlesToAssertionResponses
_selectPlatformAssertionCallback
_selectSecurityKeyAssertionCallback
_currentRelyingPartyIdentifier
_currentAuthenticatedContext
_hasRunningPublicKeyCredentialOperation
_pendingError
_internalQueue
T@"<ASPublicKeyCredentialManagerDelegate>",R,W,N,V_delegate
authenticatorData
signature
rawId
initWithRelyingPartyIdentifier:authenticatorData:signature:userHandle:rawClientDataJSON:credentialID:
initWithIdentifier:
setTransports:
transports
safari_mapAndFilterObjectsUsingBlock:
attestationObject
initWithRelyingPartyIdentifier:attestationObject:rawClientDataJSON:credentialID:
_ensureHostHasAccountModificationEntitlement
extensionPointIdentifier
_remoteViewControllerProxy
_upgradeCredentialToSignInWithApple:forServiceIdentifier:userInfo:extension:
extensionWithUUID:completion:
_findExtensionSupportingUpgrade:withCompletionHandler:
initWithExtension:serviceIdentifier:
upgradeCredentialToSignInWithApple:userInfo:
_updateCredential:forServiceIdentifier:userInfo:extension:
_isKeychainSyncEnabled
attributes
safari_stringForKey:
parsePasswordRules:error:
requirementsForPasswordRuleSet:respectingMinLength:maxLength:
initWithPasswordRequirementsByDomain:
generatedPasswordMatchingRequirements:
updateCredential:withNewPassword:userInfo:
_hostAuditToken
bundleRecordForAuditToken:error:
path
extensionsWithMatchingAttributes:error:
safari_boolForKey:
identifier
safari_highLevelDomainFromHost
sharedStore
savedAccountsWithPasswords
user
highLevelDomain
removeCredentialTypes:forSavedAccount:
password
changeSavedAccount:toUser:password:
initWithHost:port:protocol:realm:authenticationMethod:
saveUser:password:forProtectionSpace:highLevelDomain:
_deleteExistingKeychainCredentialIfPossible
_updateKeychainWithNewCredential:
setAutoresizingMask:
_remoteViewControllerInterface
accountModificationHostViewControllerDidCompleteUpgradeToSignInWithApple:userInfo:completion:
accountModificationHostViewController:didFinishWithCredential:userInfo:completion:
presentUIForAccountModificationHostViewController:
dismissUIForAccountModificationHostViewController:
accountModificationHostViewController:requestCanceledWithError:completion:
_accountModificationHostViewController
_isPerformingAppInitiatedUpgrade
_existingCredential
_serviceIdentifierForUpgrade
_addSpacerView
initRequiringTableView:
_updateCachedLoginChoices
requestTypes
_serviceName
teamIdentifier
bundleIdentifier
appleIDAuthorizationRequest
initWithAppName:teamIdentifier:bundleIdentifier:authorizationRequest:
setPresentationProvider:
_selectInitialLoginChoice
sharedManager
addObserver:
initWithPresentationContext:shouldExpandOtherLoginChoices:
tableView
indexSetWithIndex:
reloadSections:withRowAnimation:
reloadData
sizeToFitPaneContent
_selectPreviouslySelectedLoginChoiceIfPossible:
loginChoices
indexOfObject:
indexPathForRow:inSection:
selectRowAtIndexPath:animated:scrollPosition:
tableView:didSelectRowAtIndexPath:
_setUpView
isRegistrationRequest
_configureAuthenticationPaneForSelectedLoginChoice:
setPreferredContentSize:
viewDidDisappear:
setDataSource:
paneHeaderStackView
_setUpIconViewIfNecessary
_setUpInfoLabel
footerPaneContext
_addAuthorizationButtonToPaneContext:
_addOtherLoginChoicesButtonIfNeeded
_addManuallyEnterPasswordButtonIfNeeded
paneFooterStackView
_iconImage
_createIconViewWithIconImage:
headerPaneContext
_localizedInfoString
addSubPane:withCustomSpacingAfter:
isCombinedPublicKeyCredentialRegistrationRequest
loginChoiceKind
_useSecurityKeyButtonTapped
buttonWithTitle:target:action:
_useCABLEButtonTapped
_otherLoginChoicesButtonTapped
_secondaryButtonBottomMargin
isProxiedRequest
_manuallyEnterPasswordButtonTapped
requestPaneViewControllerPresentExpandedLoginChoiceInterface:
safari_firstObjectPassingTest:
requestPaneViewController:dismissWithCredential:error:
requestPaneViewController:didRequestCredentialForLoginChoice:authenticatedContext:completionHandler:
requestPaneViewControllerPresentManualPasswordEntryInterface:
_shouldShowLoginChoicesInTableView
setUserInteractionEnabled:
_updateSelectedRow:
_infoLabelStringForPlatformPublicKeyCredentialRegistration
_infoLabelStringForPassword
_infoLabelStringForSignInWithApple
_infoLabelStringForPlatformPublicKeyCredentialAssertion
_infoLabelStringForSecurityKeyCredentialAssertion
destinationSiteForCrossSiteAssertion
serviceName
proxiedOriginDeviceName
localAccountLoginChoices
appIdentifier
bundleRecordWithApplicationIdentifier:error:
localizedName
shouldUseAlternateCredentialStore
isCABLEAuthenticatorRequest
username
loginRowData
loginRowPaneTitleText
loginRowAuthenticationType
isExternal
shouldRequireLocalAuthenticationForPasswords
platformUserVerificationPreference
shouldRequireLocalAuthenticationForPlatformCredentials
initWithImage:
as_navigationItem
rightBarButtonItem
initWithAuthorization:
performAuthorizationWithCompletionHandler:
primaryLoginChoices
otherLoginChoices
passwordManagerIcon
iconForPresentationContext:size:
primaryExtension
externalCredentialIdentity
_initWithFoundationCredentialIdentity:
initWithExtension:credentialIdentity:
setHandler:
presentingViewController
site
date
initWithUser:password:site:creationDate:
numberOfTableRows
_cellForRow:
initWithLoginChoice:presentationContext:authorizationProvider:
setIsSelectedLoginChoice:
isMovingToParentViewController
cellForRowAtIndexPath:
_setCancelButtonEnabled:
_errorIsPINRequiredError:
requestPaneViewControllerRequiresPINEntryInterface:
_performAuthorizationWithAuthenticatedContext:completionHandler:
ak_isUserCancelError
_userTappedContinueButtonForPasswordLoginChoice:
_userTappedContinueButtonForPasskeyLoginChoice:
_userTappendContinueButtonForSecurityKeyLoginChoice:
_userTappedContinueButtonForCABLELoginChoice:
_userSelectedExternalPasswordCredential
_presentAlert:primaryAction:alternateAction:
navigationController
pushViewController:animated:
popViewControllerAnimated:
window
credentialProviderExtensionManagerExtensionListDidChange:
presentUIForPasswordCredentialAuthenticationViewController:
passwordCredentialAuthenticationViewController:didFinishWithCredential:error:completion:
authenticationProvider:showViewController:
authenticationProvider:hideViewController:
authenticationProvider:presentAlert:primaryAction:alternateAction:
presentationAnchor
T@"UIWindow",R,N
tableView:numberOfRowsInSection:
tableView:cellForRowAtIndexPath:
numberOfSectionsInTableView:
tableView:titleForHeaderInSection:
tableView:titleForFooterInSection:
tableView:canEditRowAtIndexPath:
tableView:canMoveRowAtIndexPath:
sectionIndexTitlesForTableView:
tableView:sectionForSectionIndexTitle:atIndex:
tableView:commitEditingStyle:forRowAtIndexPath:
tableView:moveRowAtIndexPath:toIndexPath:
initWithPresentationContext:
reloadLoginChoices
_presentationContext
_imageSubPane
_confirmButtonSubPane
_currentlySelectedRow
_previouslySelectedLoginChoice
_shouldExpandOtherLoginChoices
_tableViewLoginChoices
_otherLoginChoices
_authKitAuthorizationProvider
_alertQueue
_credentialProviderViewController
_externalPasswordCredentialForSelectedLoginChoice
_initWithBlock:
setDelegate:queue:
hasConnected
callObserverWithBlock:
callObserver:callChanged:
_callObserver
_incomingCallHandler
initWithCredentialID:rawClientDataJSON:
rawClientDataJSON
T@"NSData",R,C,N
_rawClientDataJSON
T@"NSData",R,C,N,V_rawClientDataJSON
T@"NSData",R,C,N,V_credentialID
_initWithBaseCredential:rawAttestationObject:
rawAttestationObject
initWithCoreCredential:
_baseCredential
_rawAttestationObject
T@"NSData",R,C,N,V_rawAttestationObject
textRectForBounds:
editingRectForBounds:
leftViewRectForBounds:
rightViewRectForBounds:
insetSize
setInsetSize:
_insetSize
T{CGSize=dd},N,V_insetSize
_createViews
_setConstraints
keyboardDidShow:
defaultFontForTextStyle:
_titleLabelText
_setUpSubtitleLabel
_setUpUsernameLabel
_secureTextFieldPlaceholderText
setPlaceholder:
setSecureTextEntry:
setReturnKeyType:
setTextContentType:
_textFieldChanged:
addTarget:action:forControlEvents:
_signInButtonTapped
_topViewMargin
_setUpAndAddIconImage
_containerViewHorizontalMargin
bottomAnchor
constraintGreaterThanOrEqualToAnchor:
setPriority:
_secureTextFieldInsetMargin
constraintGreaterThanOrEqualToConstant:
_manualPasswordEntryTitleLabelText
_completeManualPasswordCredentialEntry
_startAnimatingActivityIndicator
_stopAnimatingActivityIndicator
_pinValidationSucceededWithCredential:
_pinValidationFailedWithError:
passwordAuthenticationViewController:validateUserEnteredPIN:completionHandler:
removeObserver:name:object:
initWithActivityIndicatorStyle:
startAnimating
setRightView:
setRightViewMode:
stopAnimating
systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:
proxiedAssociatedDomains
passwordAuthenticationViewController:completedWithManuallyEnteredPasswordCredential:
animateWithDuration:animations:
userInfo
CGRectValue
safeAreaInsets
setConstant:
sizeToFitPaneContentAnimated:
becomeFirstResponder
resignFirstResponder
canBecomeFirstResponder
initWithPersona:presentationContext:
_signInButtonInsetMargin
_intrinsicContentHeight
authenticationDelegate
setAuthenticationDelegate:
_keyboardHeight
_persona
_titleLabel
_subtitleLabel
_usernameField
_secureTextField
_signInButton
_signInButtonActivityIndicator
_paneHeaderStackViewBottomKeyboardConstraint
_authenticationDelegate
T@"<ASPasswordAuthenticationPaneViewControllerDelegate>",W,N,V_authenticationDelegate
setMass:
setStiffness:
setDamping:
setVelocity:
setFillMode:
numberWithFloat:
setFromValue:
setToValue:
setValueFunction:
functionWithControlPoints::::
setKeyPath:
extensionContext
instanceMethodForSelector:
methodForSelector:
containsString:
cancelRequestWithError:
prepareCredentialListForServiceIdentifiers:
provideCredentialWithoutUserInteractionForIdentity:
prepareInterfaceToProvideCredentialForIdentity:
prepareInterfaceForExtensionConfiguration
T@"ASCredentialProviderExtensionContext",R,N
_credentialScopes
initWithUser:authorizedScopes:
identityToken
setIdentityToken:
authorizationCode
setAuthorizationCode:
state
setState:
userInformation
selectedEmail
setEmail:
familyName
setFamilyName:
givenName
setGivenName:
setFullName:
isLikelyRealUser
setRealUserStatus:
authorizedScopes
initWithCapacity:
addObject:
authenticationServicesCredential
initWithPaneViewController:stackView:
addEmptyViewWithSpacing:
paneViewController
_paneViewController
_stackView
T@"ASCredentialRequestPaneViewController",R,W,N,V_paneViewController
T@"UIStackView",R,N,V_stackView
_addAboveIconSpacerView
_setUpIconView
_setUpTitleView
_setUpQRCodeView
_addBelowQRCodeSpacerView
_titleText
_qrCodeSize
_qrCodeASImageWithSize:
setActive:
proxiedIconData
proxiedIconScale
localizedStringWithFormat:
_qrCodeCIImageWithSize:
imageWithCIImage:
QRCodeGenerator
qrCodeURL
absoluteString
dataUsingEncoding:
setMessage:
outputImage
extent
imageByApplyingTransform:
_marginAboveIcon
initWithPresentationContext:loginChoice:
_loginChoice
_initWithProvider:relyingPartyIdentifier:challenge:displayName:name:userID:
_initWithProvider:relyingPartyIdentifier:challenge:
initWithRelyingPartyIdentifier:
createCredentialRegistrationRequestWithChallenge:displayName:name:userID:
createCredentialAssertionRequestWithChallenge:
_relyingPartyIdentifier
T@"NSString",R,C,N,V_relyingPartyIdentifier
_initCredentialIdentityStore
replaceCredentialIdentitiesWithIdentities:completion:
getCredentialProviderExtensionStateWithCompletion:
saveCredentialIdentities:completion:
removeCredentialIdentities:completion:
removeAllCredentialIdentitiesWithCompletion:
T@"ASCredentialIdentityStore",R,N
getCredentialIdentityStoreStateWithCompletion:
_helperProxy
serviceIdentifier
type
recordIdentifier
rank
initWithServiceIdentifier:serviceIdentifierType:externalRecordIdentifier:user:rank:
algorithm
integerValue
numberWithInteger:
_algorithm
Tq,R,N,V_algorithm
_as_accountModificationHostInterface
_as_accountModificationExtensionInterface
_auxiliaryConnection
remoteObjectProxyWithErrorHandler:
getSignInWithAppleAuthorizationWithState:nonce:completion:
completeRequestReturningItems:completionHandler:
prepareToCompleteUpgradeToSignInWithAppleWithUserInfo:completion:
prepareToCompleteRequestWithUpdatedCredential:userInfo:completion:
prepareToCancelRequestWithError:completion:
_principalObject
prepareToConvertAccountToSignInWithAppleWithoutUserInteractionForServiceIdentifier:existingCredential:
convertAccountToSignInWithAppleWithoutUserInteractionForServiceIdentifier:existingCredential:
convertAccountToSignInWithAppleWithoutUserInteractionForServiceIdentifier:existingCredential:userInfo:
prepareInterfaceToConvertAccountToSignInWithAppleForServiceIdentifier:existingCredential:
prepareInterfaceToConvertAccountToSignInWithAppleForServiceIdentifier:existingCredential:userInfo:
changePasswordWithoutUserInteractionForServiceIdentifier:existingCredential:newPassword:userInfo:
prepareInterfaceToChangePasswordForServiceIdentifier:existingCredential:newPassword:userInfo:
cancelRequest
dismissRequestUI
_extensionAuxiliaryHostProtocol
_extensionAuxiliaryVendorProtocol
upgradeCredentialToSignInWithApple:serviceIdentifier:userInfo:
prepareInterfaceToUpgradeCredentialToSignInWithApple:serviceIdentifier:userInfo:completion:
updatePasswordForServiceIdentifier:existingCredential:newPassword:userInfo:
prepareInterfaceToUpdatePasswordForServiceIdentifier:existingCredential:newPassword:userInfo:completion:
getSignInWithAppleUpgradeAuthorizationWithState:nonce:completionHandler:
completeUpgradeToSignInWithAppleWithUserInfo:
completeChangePasswordRequestWithUpdatedCredential:userInfo:
initWithAuthenticatedResponse:
doesNotRecognizeSelector:
_initWithAuthenticatedResponse:
allHeaderFields
enumerateKeysAndObjectsUsingBlock:
emptyCredential
initWithAuthenticatedResponse:privateKeys:
accessToken
authenticatedResponse
_state
_accessToken
_identityToken
_authorizedScopes
_authenticatedResponse
_privateKeys
T@"NSString",R,C,N,V_state
T@"NSData",R,C,N,V_accessToken
T@"NSData",R,C,N,V_identityToken
T@"NSArray",R,C,N,V_authorizedScopes
T@"NSHTTPURLResponse",R,C,N,V_authenticatedResponse
T@"NSArray",R,N,V_privateKeys
_initWithBaseCredential:userID:signature:rawAuthenticatorData:
rawAuthenticatorData
userID
_rawAuthenticatorData
_userID
_signature
T@"NSData",R,C,N,V_rawAuthenticatorData
T@"NSData",R,C,N,V_userID
T@"NSData",R,C,N,V_signature
_connectingText
initWithArrangedSubviews:
safeAreaLayoutGuide
_activityIndicator
initWithProvider:credential:
initWithUser:password:
authorization
credential
authorizationFromCredential:
initWithCorePlatformKeyCredentialAssertion:
initWithCorePlatformKeyCredentialRegistration:
provider
_provider
_credential
T@"<ASAuthorizationProvider>",R,N,V_provider
T@"<ASAuthorizationCredential>",R,N,V_credential
updateLoginChoices:
_initialViewControllerForPresentationContext:
setViewControllers:
_presentPINEntryInterface
visibleViewController
updateSubtitle:
_pushSecurityKeyViewControllerWithOverrideSubtitle:
initWithTitle:subtitle:icon:
_pushCABLEConnectingViewController
_pushCABLEAuthenticatingViewController
_setUpInitialViewController
authorizationViewControllerDidCompleteInitialPresentation:
_startCABLEClientForSingleLoginChoiceIfNeeded
_startCABLEAuthenticatorOnInitialPresentationIfNeeded
initWithCustomView:
authorizationViewController:didCompleteWithCredential:error:
_setUpContainerViewControllerWithCredentialRequestViewController:
cableAuthenticatorURL
shouldRequireCABLEAuthenticatorConsent
_cancelBarButtonItem
setRightBarButtonItem:
_signInBarButtonItem
setLeftBarButtonItem:
_securityKeyRequestViewController
navigationItem
_securityKeyRequestViewControllerWithOverrideSubtitle:
setHidesBackButton:
_cancelButtonSelected:
initWithTitle:style:target:action:
_cableClientViewControllerWithLoginChoice:
setViewControllers:animated:
isBluetoothEnabled
_showEnableBluetoothViewControllerForCABLEClientWithLoginChoice:
authorizationViewController:didRequestCredentialForLoginChoice:authenticatedContext:completionHandler:
_startCABLEClientWithLoginChoice:
_enableBluetoothAndShowCABLEClientViewControllerWithLoginChoice:
setEnableBluetoothHandler:
setBluetoothEnabled:
_startCABLEAuthenticator
_showEnableBluetoothViewControllerForCABLEAuthenticator
_pushCABLEAuthenticatorCredentialPickerViewControllerWithPresentationContext:
_showCABLEAuthenticatorError:
authorizationViewController:startCABLEAuthenticationWithCompletionHandler:
_enableBluetoothAndShowCABLEConnectingViewController
_pushSecurityKeyViewController
_pushCABLEClientViewControllerForCABLELoginChoice:
_presentManualPasswordEntryInterface
authorizationViewController:validateUserEnteredPIN:completionHandler:
requestPaneViewControllerStartCABLEAuthentication:
updateInterfaceWithLoginChoices:
presentPINEntryInterface
pushOrUpdateBasicPaneViewControllerWithError:
cableClientWillConnect
cableClientWillAuthenticate
modalPresentationStyle
_navigationController
_wirelessSettingsController
T@"<ASAuthorizationViewControllerDelegate>",W,N,V_delegate
doubleValue
_iconForData:scale:size:
_iconForApplicationIdentifier:size:
hasExternalPasswords
_providerIconForPasswordLoginChoice:
_keychainIcon
initWithBundleIdentifier:
_imageForIcon:size:
imageWithData:scale:
CGImage
scale
initWithCGImage:scale:
initWithImages:
size
mainScreen
initWithSize:scale:
setShouldApplyMask:
setShape:
prepareImagesForImageDescriptors:
imageForImageDescriptor:
imageWithCGImage:scale:orientation:
providerBundleIdentifier
_iconForPasswordProviderBundleIdentifier:
bundleWithIdentifier:
imageNamed:inBundle:
_applicationIconImageForBundleIdentifier:format:scale:
iconForPasswordLoginChoice:presentationContext:
iconForPublicKeyCredentialLoginChoiceWithPresentationContext:
T@"UIImage",R,N
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
encodeInteger:forKey:
setWithObjects:
decodeObjectOfClasses:forKey:
decodeIntegerForKey:
email
fullName
realUserStatus
setAccessToken:
refreshToken
setRefreshToken:
_user
_authorizationCode
_email
_fullName
_realUserStatus
_refreshToken
T@"NSData",C,N,V_accessToken
T@"NSData",C,N,V_refreshToken
T@"NSData",C,N,V_identityToken
T@"NSData",C,N,V_authorizationCode
T@"NSString",C,N,V_state
T@"NSString",C,N,V_email
T@"NSPersonNameComponents",C,N,V_fullName
Tq,N,V_realUserStatus
T@"NSString",R,C,N,V_user
initWithExtension:
_cancelButtonPressed
initWithBarButtonSystemItem:target:action:
extension
localizedContainingName
setTitle:
setModalInPresentation:
_beginNonUIRequest:connectionHandler:
_beginRequestWithConnectionHandler:
systemBackgroundColor
navigationBar
setTranslucent:
prepareToCancelRequestWithHostContext:error:completion:
containingUrl
initWithURL:allowPlaceholder:error:
authorizedRequest
requestIdentifier
UUIDString
setTransactionID:
setBundleID:
setTeamID:
revokeAuthorizationWithContext:completion:
setNonce:
entitlements
objectForKey:ofClass:
setAppID:
initWithUpgradeContext:
performAuthorizationWithContext:completion:
prepareToCompleteUpgradeToSignInWithAppleRequestWithHostContext:userInfo:completion:
prepareToCompleteRequestWithHostContext:updatedCredential:userInfo:completion:
dismissRequestUI:
_nonUIRequestDidRequireUserInteraction
_shouldUseNonUIRequestTimer
_requestDidFailWithError:completion:
_serviceIdentifier
_newPassword
_accountModificationOperation
_signInWithAppleAuthorization
_accountModificationExtensionContextProxy
_userInfo
T@"<_ASAccountAuthenticationModificationHostViewControllerDelegate>",W,N,V_delegate
UTF8String
orderedSet
safari_browserDefaults
endMatchingExtensions:
_endExtensionDiscovery
_buildDomainToExtensionDictionaryWithSharedWebCredentialsDatabaseEntries:
getAllApprovedSharedWebCredentialsEntries:
beginMatchingExtensionsWithAttributes:completion:
domainByStrippingSubdomainWildcardPrefixIfNecessary:
domainIsProhibitedForSavingCredentials:
highLevelDomainHasSuiteOfAssociatedApps:
service
appID
applicationProxyForBundleURL:
_notifyObservers:
boolForKey:
_beginExtensionDiscovery
removeObject:
accountModificationExtensionManagerExtensionListDidChange:
extensionForDomain:completionHandler:
addChangeObserver:
removeChangeObserver:
_dataConstructionQueue
_readOnlyQueue
_extensionMatchingToken
_domainToExtension
_extensions
_observers
_errorEncounteredDuringLastExtensionDiscovery
_mobileSafariUserDefaults
initWithURL:
canPerformAuthorizationWithURL:responseCode:useInternalExtensions:
authorizationProviderWithIdentityProviderURL:
canPerformAuthorization
_url
T@"NSURL",R,N,V_url
initWithURL:callbackURLScheme:usingEphemeralSession:completionHandler:
exceptionWithName:reason:userInfo:
_invalidate
_startDryRun:
setPrefersEphemeralWebBrowserSession:
presentationAnchorForWebAuthenticationSession:
windowScene
activationState
mainBundle
hasPrefix:
startASWebAuthenticationSessionInWindow:dryRun:
isSessionStarted
initWithURL:callbackURLScheme:completionHandler:
canStart
start
presentationContextProvider
setPresentationContextProvider:
prefersEphemeralWebBrowserSession
_authenticationSession
_originalCompletionHandler
_referenceToSelf
_prefersEphemeralWebBrowserSession
_presentationContextProvider
T@"<ASWebAuthenticationPresentationContextProviding>",W,N,V_presentationContextProvider
TB,N,V_prefersEphemeralWebBrowserSession
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
setAs_navigationItem:
T@"UINavigationItem",&,N
_imageViewWithImage:
image
constraintEqualToAnchor:multiplier:
headerIconCornerRadius
_setCornerRadius:
iconBorderColor
setBorderColor:
iconBorderWidth
setBorderWidth:
imageView
_imageView
T@"UIImageView",R,N,V_imageView
setUser:
T@"NSString",C,N,V_user
_as_credentialProviderHostInterface
_as_credentialProviderExtensionInterface
prepareToCompleteRequestWithHostContext:credential:completion:
prepareToCompleteExtensionConfigurationRequestWithHost:completion:
prepareToCompleteRequestWithSelectedCredential:completion:
prepareToCompleteExtensionConfigurationRequestWithCompletion:
T@"<_ASExtensionHostContextDelegate>",W,N
T@"<_ASCredentialProviderExtensionHostContextDelegate>",W,N,V_delegate
_transports
T@"NSArray",&,N,V_transports
_newStackView
_navigationBarHeaderHeight
topAnchor
constraintGreaterThanOrEqualToAnchor:constant:
constraintLessThanOrEqualToAnchor:
_setUpContexts
initWithFrame:style:
setAlwaysBounceVertical:
setShowsVerticalScrollIndicator:
_newContainerView
setTableHeaderView:
tableHeaderView
initWithEffect:
contentView
priority
_blurryTrayMinimumHeight
constraintGreaterThanOrEqualToSystemSpacingBelowAnchor:multiplier:
constraintLessThanOrEqualToSystemSpacingBelowAnchor:multiplier:
setNeedsLayout
_adjustForPositionOfScrollView:
viewSafeAreaInsetsDidChange
setNeedsUpdateConstraints
viewWillLayoutSubviews
viewDidLayoutSubviews
_setCompressedHeightForView:
_updateBlurForTray
systemLayoutSizeFittingSize:
_maximumContentHeight
setScrollEnabled:
traitCollectionDidChange:
traitCollection
preferredContentSizeCategory
contentOffset
setBackgroundEffects:
_isContentUnderTray
_indexPathForLastRow
rectForRowAtIndexPath:
convertRect:toView:
numberOfSections
_safeIndexWithCount:
numberOfRowsInSection:
rectForSection:
scrollViewDidScroll:
scrollViewDidZoom:
scrollViewWillBeginDragging:
scrollViewWillEndDragging:withVelocity:targetContentOffset:
scrollViewDidEndDragging:willDecelerate:
scrollViewWillBeginDecelerating:
scrollViewDidEndDecelerating:
scrollViewDidEndScrollingAnimation:
viewForZoomingInScrollView:
scrollViewWillBeginZooming:withView:
scrollViewDidEndZooming:withView:atScale:
scrollViewShouldScrollToTop:
scrollViewDidScrollToTop:
scrollViewDidChangeAdjustedContentInset:
tableView:willDisplayCell:forRowAtIndexPath:
tableView:willDisplayHeaderView:forSection:
tableView:willDisplayFooterView:forSection:
tableView:didEndDisplayingCell:forRowAtIndexPath:
tableView:didEndDisplayingHeaderView:forSection:
tableView:didEndDisplayingFooterView:forSection:
tableView:heightForRowAtIndexPath:
tableView:heightForHeaderInSection:
tableView:heightForFooterInSection:
tableView:estimatedHeightForRowAtIndexPath:
tableView:estimatedHeightForHeaderInSection:
tableView:estimatedHeightForFooterInSection:
tableView:viewForHeaderInSection:
tableView:viewForFooterInSection:
tableView:accessoryTypeForRowWithIndexPath:
tableView:accessoryButtonTappedForRowWithIndexPath:
tableView:shouldHighlightRowAtIndexPath:
tableView:didHighlightRowAtIndexPath:
tableView:didUnhighlightRowAtIndexPath:
tableView:willSelectRowAtIndexPath:
tableView:willDeselectRowAtIndexPath:
tableView:didDeselectRowAtIndexPath:
tableView:editingStyleForRowAtIndexPath:
tableView:titleForDeleteConfirmationButtonForRowAtIndexPath:
tableView:editActionsForRowAtIndexPath:
tableView:leadingSwipeActionsConfigurationForRowAtIndexPath:
tableView:trailingSwipeActionsConfigurationForRowAtIndexPath:
tableView:shouldIndentWhileEditingRowAtIndexPath:
tableView:willBeginEditingRowAtIndexPath:
tableView:didEndEditingRowAtIndexPath:
tableView:targetIndexPathForMoveFromRowAtIndexPath:toProposedIndexPath:
tableView:indentationLevelForRowAtIndexPath:
tableView:shouldShowMenuForRowAtIndexPath:
tableView:canPerformAction:forRowAtIndexPath:withSender:
tableView:performAction:forRowAtIndexPath:withSender:
tableView:canFocusRowAtIndexPath:
tableView:shouldUpdateFocusInContext:
tableView:didUpdateFocusInContext:withAnimationCoordinator:
indexPathForPreferredFocusedViewInTableView:
tableView:selectionFollowsFocusForRowAtIndexPath:
tableView:shouldSpringLoadRowAtIndexPath:withContext:
tableView:shouldBeginMultipleSelectionInteractionAtIndexPath:
tableView:didBeginMultipleSelectionInteractionAtIndexPath:
tableViewDidEndMultipleSelectionInteraction:
tableView:contextMenuConfigurationForRowAtIndexPath:point:
tableView:previewForHighlightingContextMenuWithConfiguration:
tableView:previewForDismissingContextMenuWithConfiguration:
tableView:willPerformPreviewActionForMenuWithConfiguration:animator:
tableView:willDisplayContextMenuWithConfiguration:animator:
tableView:willEndContextMenuInteractionWithConfiguration:animator:
setTableView:
_isTableViewRequired
_blurryTray
_headerWidthConstraint
_footerWidthConstraint
_paneHeaderStackView
_paneFooterStackView
_headerPaneContext
_footerPaneContext
_tableView
T@"<ASCredentialRequestPaneViewControllerDelegate>",W,N,V_delegate
T@"UIStackView",R,N,V_paneHeaderStackView
T@"UIStackView",R,N,V_paneFooterStackView
T@"ASCredentialRequestPaneContext",R,N,V_headerPaneContext
T@"ASCredentialRequestPaneContext",R,N,V_footerPaneContext
T@"UITableView",&,N,V_tableView
Tq,R,N
_setUpTitleLabel
_addBottomFillerView
_addTopFillerViewWithMargin:
_title
_subtitle
_icon
_subtitleSubPane
initWithPublicKeyCredentialManager:
credentialWithUser:password:
_password
T@"NSString",R,C,N,V_password
instantiateViewControllerWithInputItems:connectionHandler:
_extensionContextForUUID:
remoteObjectProxy
prepareCredentialListForServiceIdentifiers:completionHandler:
prepareInterfaceToProvideCredentialForIdentity:completionHandler:
_as_instantiateViewControllerWithConnectionHandler:
_as_auxiliaryRemoteObjectWithRequestID:
setSeparatorStyle:
_addHeaderSpacerViewWithCustomSpacingAfter:
_setUpContinueButton
_continueButtonPressed
_finishWithSuccess:completion:
credentialProviderExtensionConfigurationViewControllerDidFinish:completion:
beginConfiguringExtension
T@"<_ASCredentialProviderExtensionConfigurationViewControllerDelegate>",W,N,V_delegate
_initWithProvider:relyingPartyIdentifier:challenge:name:userID:
createCredentialRegistrationRequestWithChallenge:name:userID:
initWithStyle:reuseIdentifier:
_setUpFormat
_setUpConstraints
_setUpContent
setSelectionStyle:
_cellLabelFontWithStyle:traits:
secondaryLabelColor
grayColor
setClipsToBounds:
cellIconCornerRadius
_leadingIconImageOffset
setSeparatorInset:
layoutMarginsGuide
preferredFontDescriptorWithTextStyle:addingSymbolicTraits:options:
fontWithDescriptor:size:
_showIconBorder
loginRowText
loginRowDetailText
setDetailText:
loginRowIconImage
setIconImage:
tertiaryLabelColor
_detailTextForPasswordLoginChoice:
_defaultPasskeyIcon
_publicKeyCredentialImageForPresentationContext:
_titleForPublicKeyCredentialAssertionWithName:userHandle:
_defaultSecurityKeyIcon
_subtitleForPublicKeyCredentialAssertion
_cableIcon
base64EncodedStringWithOptions:
substringWithRange:
accessoryType
setAccessoryType:
_detailTextForPasswordLoginChoiceFromKeychain:
_detailTextForExternalPasswordLoginChoice:
bundleRecordWithBundleIdentifier:allowPlaceholder:error:
_hideIconBorder
iconImage
title
detailText
isSelectedLoginChoice
_authorizationProvider
_detailLabel
_iconImageView
T@"UIImage",&,N
_invalidateNonUIRequestTimerIfNeeded
_endDelayingPresentation
leftAnchor
rightAnchor
_kill:
_as_setApplicationBackgroundBlock:
_beginDelayingPresentation:cancellationHandler:
_extensionRequestDidFinish:
_sf_addHandlerForRequestIdentifier:withBlock:
_setRemoteViewController:
invalidate
setDismissOnBackground:
_nonUIRequestTimedOut
childViewControllerForHomeIndicatorAutoHidden
childViewControllerForScreenEdgesDeferringSystemGestures
childViewControllerForStatusBarHidden
childViewControllerForStatusBarStyle
childViewControllerForWhitePointAdaptivityStyle
dismissOnBackground
nonUIHostContext
_remoteViewController
_nonUIHostContext
_nonUIRequestTimer
_allowRequestingUIFromNonUIRequest
_dismissOnBackground
_extension
T@"NSExtension",R,N,V_extension
T@"NSExtensionContext",R,N,V_nonUIHostContext
TB,N,V_dismissOnBackground
decodeInt64ForKey:
initWithIdentifier:type:
encodeInt64:forKey:
_identifier
_type
T@"NSString",R,C,N,V_identifier
Tq,R,N,V_type
setCustomSpacingAfter:
superview
customSpacingAfter
_view
_customSpacingAfter
T@"UIView",R,N,V_view
Td,N,V_customSpacingAfter
T@"<_ASAccountAuthenticationModificationExtensionHostContextDelegate>",W,N,V_delegate
initWithKind:relyingPartyIdentifier:challenge:userVerificationPreference:allowedCredentials:
setChallenge:
setAllowedCredentials:
setUserVerificationPreference:
T@"NSArray",C,N
coreCredentialAssertionOptions
_challenge
_userVerificationPreference
_allowedCredentials
T@"ASCPublicKeyCredentialAssertionOptions",R,N
T@"NSArray",C,N,V_allowedCredentials
T@"NSData",C,N,V_challenge
T@"NSString",C,N,V_relyingPartyIdentifier
T@"NSString",&,N,V_userVerificationPreference
_sceneDidEnterBackground:
_hostDidEnterBackground:
object
parentViewController
initWithViewController:block:
viewController
block
_viewController
_block
T@"UIViewController",R,W,N,V_viewController
T@?,R,N,V_block
presentedViewController
_as_applicationBackgroundBlock
_as_viewControllerToPresentFrom
T@?,C,N,S_as_setApplicationBackgroundBlock:
_setBuiltinTransitionStyle:
setBackgroundImage:forBarMetrics:
insertSubview:atIndex:
_backdropView
_currentStyle
initWithUser:serviceIdentifier:userInfo:
initWithUser:password:extension:serviceIdentifier:userInfo:
T@"NSString",R,N,V_password
T@"NSString",R,N,V_user
T@"ASCredentialServiceIdentifier",R,N,V_serviceIdentifier
T@"NSDictionary",R,N,V_userInfo
doNotHandle
complete
completeWithHTTPAuthorizationHeaders:
completeWithHTTPResponse:httpBody:
completeWithError:
completeWithAuthorizationResult:
presentAuthorizationViewControllerWithCompletion:
requestedOperation
httpHeaders
realm
extensionData
callerBundleIdentifier
authorizationOptions
isCallerManaged
callerTeamIdentifier
localizedCallerDisplayName
isUserInteractionEnabled
initWithAuthorizationRequest:
isUserInterfaceEnabled
authorizationRequest
_authorizationRequest
T@"SOAuthorizationRequest",R,N,V_authorizationRequest
T@"NSURL",R,N
T@"NSString",R,N
T@"NSDictionary",R,N
T@"NSData",R,N
T@"NSString",R,C,N
callerManaged
TB,R,N,GisCallerManaged
userInterfaceEnabled
TB,R,N,GisUserInterfaceEnabled
initWithAuthorizationButtonType:authorizationButtonStyle:
defaultCornerRadius
setNeedsDisplay
_drawRect:inView:
_screen
_ak_buttonType
_ak_buttonStyle
layoutSubviews
initWithType:
setName:
CGColor
setValue:forKey:
setFilters:
_createHighlightFilterIfNecessary
valueForKeyPath:
colorWithCGColor:
setValue:forKeyPath:
animationWithKeyPath:
ak_addAdditiveAnimation:
_performAnimationToSetHighlighted:
buttonWithType:style:
layerClass
Td,R
drawRect:
intrinsicContentSize
isAccessibilityElement
accessibilityTraits
accessibilityLabel
cornerRadius
_style
_highlightFilter
_cornerRadius
Td,N,V_cornerRadius
constraintLessThanOrEqualToConstant:
_authorizationRequestsHandledByAuthenticationServicesDaemon:
_shouldPerformRequestsWithAuthKit:
_authKitRequests
_performAuthKitRequests:
_performAuthorizationRequests:
enumerateObjectsUsingBlock:
value
nonce
requestedScopes
componentsJoinedByString:
setOperation:
setUrl:
setHttpHeaders:
setUseInternalExtensions:
setAuthorizationOptions:
setEnableUserInteraction:
presentationAnchorForAuthorizationController:
setEnableEmbeddedAuthorizationViewController:
beginAuthorizationWithParameters:
setCredentialRequests:
_authorizationFromAuthKitResult:
authorizationController:didCompleteWithAuthorization:
authorizationController:didCompleteWithError:
_authKitRequestFromAppleIDRequest:
setUserIdentifier:
setRequestedScopes:
JSONObjectWithData:options:error:
addEntriesFromDictionary:
statusCode
initWithURL:statusCode:HTTPVersion:headerFields:
_finishAppSSO
_authenticatedResponseFromHTTPResponse:httpBody:
_viewControllerForFullScreenPresentationFromView:
_presentViewController:sendingView:animated:
_onlyHasAppleIDRequest:
safari_filterObjectsUsingBlock:
_convertCoreErrorToPublicError:
_requestContextWithRequests:error:
_authenticationServicesAgentProxy
performAuthorizationRequestsForContext:withCompletionHandler:
coreCredentialCreationOptions
initWithRequestTypes:
setAppleIDAuthorizationRequest:
setPlatformKeyCredentialCreationOptions:
setPlatformKeyCredentialAssertionOptions:
setSecurityKeyCredentialCreationOptions:
setSecurityKeyCredentialAssertionOptions:
authorizationDidNotHandle:
authorizationDidCancel:
authorizationDidComplete:
authorization:didCompleteWithHTTPAuthorizationHeaders:
authorization:didCompleteWithHTTPResponse:httpBody:
authorization:didCompleteWithAuthorizationResult:
authorization:didCompleteWithError:
authorization:presentViewController:withCompletion:
initWithAuthorizationRequests:
performRequests
authorizationRequests
customAuthorizationMethods
setCustomAuthorizationMethods:
_appSSOAuthorization
_appSSORequestURL
_appSSOPresentationAnchor
_appSSOViewController
_authorizationRequests
_customAuthorizationMethods
T@"NSArray",R,N,V_authorizationRequests
T@"<ASAuthorizationControllerDelegate>",W,N,V_delegate
T@"<ASAuthorizationControllerPresentationContextProviding>",W,N,V_presentationContextProvider
T@"NSArray",C,N,V_customAuthorizationMethods
accountAuthenticationModificationController:didFailRequest:withError:
_performReplacePasswordWithSignInWithAppleRequest:
_showUpgradeToStrongPasswordPromptForRequest:
standardUserDefaults
_failRequestWithError:
_requestRemoteViewController:
applicationProxyForIdentifier:
alertControllerWithTitle:message:preferredStyle:
_performUpgradePasswordToStrongPasswordRequest:
actionWithTitle:style:handler:
addAction:
_viewControllerToPresentFrom
presentationAnchorForAccountAuthenticationModificationController:
accountAuthenticationModificationController:didSuccessfullyCompleteRequest:withUserInfo:
performRequest:
_accountAuthenticationModificationRemoteViewController
_request
_helperExtension
T@"<ASAccountAuthenticationModificationControllerDelegate>",W,N,V_delegate
T@"<ASAccountAuthenticationModificationControllerPresentationContextProviding>",W,N,V_presentationContextProvider
buttonWithType:
setTitle:forState:
T@"ASAccountAuthenticationModificationExtensionContext",R,N
setUserName:
setUserDisplayName:
setSupportedAlgorithmIdentifiers:
setAttestationPreference:
setDisplayName:
_displayName
_name
_attestationPreference
T@"ASCPublicKeyCredentialCreationOptions",R,N
T@"NSData",C,N,V_userID
T@"NSString",C,N,V_name
T@"NSString",C,N,V_displayName
T@"NSString",&,N,V_attestationPreference
credentialIdentityStoreIdentifier
sf_bundleIdentifierForContainingApp
removeCredentialIdentityStoreForApplication:completion:
_finishWithCredential:error:completion:
_credentialIdentity
T@"<_ASPasswordCredentialAuthenticationViewControllerDelegate>",W,N,V_delegate
userInterfaceStyle
systemDarkGrayTintColor
colorWithDynamicProvider:
systemGray2Color
T^{CGColor=},R,N
Td,R,N
T@"UIFont",R,N
addCommitHandler:forPhase:
completeRequestWithSelectedCredential:completionHandler:
completeExtensionConfigurationRequest
initWithServiceIdentifier:user:recordIdentifier:
serviceIdentifierType
externalRecordIdentifier
owningExtensionState
allocWithZone:
setRank:
identityWithServiceIdentifier:user:recordIdentifier:
_recordIdentifier
_rank
_credentialIdentityStoreIdentifier
T@"SFExternalCredentialIdentityStoreIdentifier",R,N,V_credentialIdentityStoreIdentifier
T@"NSString",R,C,N,V_recordIdentifier
Tq,N,V_rank
setShouldRequireResidentKey:
setExcludedCredentials:
credentialParameters
setCredentialParameters:
residentKeyPreference
setResidentKeyPreference:
_credentialParameters
_excludedCredentials
_residentKeyPreference
T@"NSArray",C,N,V_credentialParameters
T@"NSArray",C,N,V_excludedCredentials
T@"NSString",&,N,V_residentKeyPreference
_setUpTitlePane
_setUpMessagePane
_setUpButtonPane
_preferredFontForTextStyle:weight:
_message
_enableBluetooth
presentationContext
enableBluetoothHandler
_enableBluetoothHandler
T@"ASCAuthorizationPresentationContext",R,N,V_presentationContext
T@?,C,N,V_enableBluetoothHandler
removeTarget:action:forControlEvents:
T@"UILabel",&,N,V_titleLabel
credentialListViewControllerDidPrepareInterface:
_finishWithCredential:completion:
credentialListViewController:didFinishWithCredential:completion:
initWithExtension:serviceIdentifiers:
T@"<_ASCredentialListViewControllerDelegate>",W,N,V_delegate
setRequestedOperation:
_requestedScopes
_nonce
_requestedOperation
T@"NSArray",C,N,V_requestedScopes
T@"NSString",C,N,V_nonce
T@"NSString",C,N,V_requestedOperation
setUserInterfaceEnabled:
_userInterfaceEnabled
_authorizationOptions
T@"NSArray",C,N,V_authorizationOptions
TB,N,GisUserInterfaceEnabled,V_userInterfaceEnabled
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@24@0:8@16
v16@0:8
v20@0:8B16
@32@0:8@16@24
@64@0:8@16@24{UIEdgeInsets=dddd}32
v32@0:8q16@?24
v32@0:8q16@?<v@?B@"NSError">24
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@?24
v40@0:8@16@24@?32
v32@0:8@"NSDictionary"16@?<v@?>24
v40@0:8@"ASPasswordCredential"16@"NSDictionary"24@?<v@?>32
v32@0:8@"NSError"16@?<v@?>24
@24@0:8@?16
v48@0:8@16@24@32@40
v24@0:8@16
@"<_ASAccountAuthenticationModificationRemoteViewControllerDelegate>"
@"SOAuthorizationResult"
v40@0:8@16@24@32
@24@0:8Q16
v24@0:8@?16
v40@0:8@"NSDictionary"16@"NSError"24@"LAContext"32
@"NSString"24@0:8Q16
v24@0:8@?<v@?>16
v36@0:8B16B20B24@28
v24@0:8d16
@24@0:8d16
v28@0:8@16B24
v32@0:8d16@24
v40@0:8@16d24@32
@"UIStackView"
@"UIView"
@"LAUIAuthenticationView"
@"ASCredentialRequestPaneContext"
@"UILabel"
@"NSObject<OS_dispatch_group>"
@"ASCredentialRequestButton"
@"<ASCredentialRequestSubPaneConfirmButtonDelegate>"
@32@0:8@16Q24
d16@0:8
d24@0:8@16
d24@0:8@"<UIViewControllerContextTransitioning>"16
v24@0:8@"<UIViewControllerContextTransitioning>"16
@"<UIViewImplicitlyAnimating>"24@0:8@"<UIViewControllerContextTransitioning>"16
@20@0:8B16
@40@0:8@16@24@32
@"<UIViewControllerAnimatedTransitioning>"40@0:8@"UIViewController"16@"UIViewController"24@"UIViewController"32
@"<UIViewControllerAnimatedTransitioning>"24@0:8@"UIViewController"16
@"<UIViewControllerInteractiveTransitioning>"24@0:8@"<UIViewControllerAnimatedTransitioning>"16
@"UIPresentationController"40@0:8@"UIViewController"16@"UIViewController"24@"UIViewController"32
v36@0:8@16@24B32
Q24@0:8@16
q24@0:8@16
@48@0:8@16q24@32@40
v36@0:8@"UINavigationController"16@"UIViewController"24B32
Q24@0:8@"UINavigationController"16
q24@0:8@"UINavigationController"16
@"<UIViewControllerInteractiveTransitioning>"32@0:8@"UINavigationController"16@"<UIViewControllerAnimatedTransitioning>"24
@"<UIViewControllerAnimatedTransitioning>"48@0:8@"UINavigationController"16q24@"UIViewController"32@"UIViewController"40
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8{CGSize=dd}16
v32@0:8@16@24
v32@0:8{CGSize=dd}16
v36@0:8{CGSize=dd}16B32
v40@0:8{CGSize=dd}16@32
{CGSize=dd}16@0:8
@"UITapGestureRecognizer"
@"UIViewController"
@"<ASCredentialRequestContainerViewControllerDelegate>"
@"<ASCredentialRequestPaneViewControllerDelegate>"
@"UIVisualEffectView"
{CGSize="width"d"height"d}
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^{_NSZone=}16
@"NSData"16@0:8
v24@0:8@"NSData"16
@"NSData"
@24@0:8B16B20
v32@0:8@16q24
v40@0:8@16Q24@?32
v48@0:8@16@24q32@?40
v32@0:8@"_WKWebAuthenticationPanel"16q24
v40@0:8@"_WKWebAuthenticationPanel"16Q24@?<v@?@"NSString">32
v48@0:8@"_WKWebAuthenticationPanel"16@"NSArray"24q32@?<v@?@"_WKWebAuthenticationAssertionResponse">40
v32@0:8@"_WKWebAuthenticationPanel"16@?<v@?@"LAContext">24
v32@0:8@"_WKWebAuthenticationPanel"16@?<v@?q>24
v24@0:8@"NSArray"16
v32@0:8@"ASCPublicKeyCredentialCreationOptions"16@"LAContext"24
v32@0:8@"ASCPlatformPublicKeyCredentialLoginChoice"16@"LAContext"24
v24@0:8@"ASCPublicKeyCredentialCreationOptions"16
v24@0:8@"ASCSecurityKeyPublicKeyCredentialLoginChoice"16
v24@0:8@"NSError"16
v24@0:8@"<ASPublicKeyCredentialManagerDelegate>"16
@"WBSPair"32@0:8@"ASCPublicKeyCredentialCreationOptions"16Q24
@"WBSPair"32@0:8@"ASCPublicKeyCredentialAssertionOptions"16Q24
v32@0:8Q16@24
@"_WKWebAuthenticationPanel"
@"NSMutableDictionary"
@"NSString"
@"LAContext"
@"NSError"
@"NSObject<OS_dispatch_queue>"
@"<ASPublicKeyCredentialManagerDelegate>"
v48@0:8@"ASPasswordCredential"16@"ASCredentialServiceIdentifier"24@"NSDictionary"32@"NSUUID"40
v48@0:8@16@24@32@?40
v40@0:8@"_ASAccountAuthenticationModificationHostViewController"16@"NSDictionary"24@?<v@?>32
v48@0:8@"_ASAccountAuthenticationModificationHostViewController"16@"ASPasswordCredential"24@"NSDictionary"32@?<v@?>40
v24@0:8@"_ASAccountAuthenticationModificationHostViewController"16
v40@0:8@"_ASAccountAuthenticationModificationHostViewController"16@"NSError"24@?<v@?>32
@"_ASAccountAuthenticationModificationHostViewController"
@"ASPasswordCredential"
@"ASCredentialServiceIdentifier"
v24@0:8@"SFCredentialProviderExtensionManager"16
v24@0:8@"_ASPasswordCredentialAuthenticationViewController"16
v48@0:8@"_ASPasswordCredentialAuthenticationViewController"16@"ASPasswordCredential"24@"NSError"32@?<v@?>40
v48@0:8@16@24@?32@?40
v32@0:8@"<_ASAuthenticationProvider>"16@"UIViewController"24
v48@0:8@"<_ASAuthenticationProvider>"16@"NSDictionary"24@?<v@?>32@?<v@?>40
@"UIWindow"16@0:8
v32@0:8@"ASCredentialRequestConfirmButtonSubPane"16@"LAContext"24
v24@0:8@"ASCredentialRequestConfirmButtonSubPane"16
B24@0:8@"ASCredentialRequestConfirmButtonSubPane"16
q32@0:8@16q24
@32@0:8@16q24
B32@0:8@16@24
q40@0:8@16@24q32
v40@0:8@16q24@32
q32@0:8@"UITableView"16q24
@"UITableViewCell"32@0:8@"UITableView"16@"NSIndexPath"24
q24@0:8@"UITableView"16
@"NSString"32@0:8@"UITableView"16q24
B32@0:8@"UITableView"16@"NSIndexPath"24
@"NSArray"24@0:8@"UITableView"16
q40@0:8@"UITableView"16@"NSString"24q32
v40@0:8@"UITableView"16q24@"NSIndexPath"32
v40@0:8@"UITableView"16@"NSIndexPath"24@"NSIndexPath"32
@28@0:8@16B24
q16@0:8
@24@0:8q16
v24@0:8q16
v40@0:8@16@?24@?32
@"ASCAuthorizationPresentationContext"
@"ASCredentialRequestImageSubPane"
@"ASCredentialRequestConfirmButtonSubPane"
@"<ASCLoginChoiceProtocol>"
@"NSArray"
@"AKASAuthorizationProvider"
@"_ASPasswordCredentialAuthenticationViewController"
@"ASCPasswordCredential"
v32@0:8@"CXCallObserver"16@"CXCall"24
@"CXCallObserver"
@"ASPublicKeyCredentialBase"
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@32@0:8Q16@24
@"UITextField"
@"ASCredentialRequestButtonContinue"
@"UIActivityIndicatorView"
@"NSLayoutConstraint"
@"<ASPasswordAuthenticationPaneViewControllerDelegate>"
v32@0:8@16d24
@"ASCredentialRequestPaneViewController"
@32@0:8{CGSize=dd}16
@"ASCABLELoginChoice"
@48@0:8@16@24@32@40
@"SFCredentialProviderExtensionHelperProxy"
v56@0:8@16@24@32@40@?48
v40@0:8@"ASPasswordCredential"16@"ASCredentialServiceIdentifier"24@"NSDictionary"32
v48@0:8@"ASPasswordCredential"16@"ASCredentialServiceIdentifier"24@"NSDictionary"32@?<v@?>40
v48@0:8@"ASCredentialServiceIdentifier"16@"ASPasswordCredential"24@"NSString"32@"NSDictionary"40
v56@0:8@"ASCredentialServiceIdentifier"16@"ASPasswordCredential"24@"NSString"32@"NSDictionary"40@?<v@?>48
@"NSHTTPURLResponse"
@"<ASAuthorizationProvider>"
@"<ASAuthorizationCredential>"
v40@0:8@"ASCredentialRequestPaneViewController"16@"<ASCCredentialProtocol>"24@"NSError"32
v48@0:8@"ASCredentialRequestPaneViewController"16@"<ASCLoginChoiceProtocol>"24@"LAContext"32@?<v@?@"<ASCCredentialProtocol>"@"NSError">40
v24@0:8@"ASCredentialRequestPaneViewController"16
B24@0:8@"ASCredentialRequestContainerViewController"16
v24@0:8@"ASCredentialRequestContainerViewController"16
v40@0:8@"ASPasswordAuthenticationPaneViewController"16@"NSString"24@?<v@?@"<ASCCredentialProtocol>"@"NSError">32
v32@0:8@"ASPasswordAuthenticationPaneViewController"16@"ASCPasswordCredential"24
@"ASNavigationController"
@"SFWirelessSettingsController"
@"<ASAuthorizationViewControllerDelegate>"
@40@0:8@16{CGSize=dd}24
@48@0:8@16d24{CGSize=dd}32
@"NSPersonNameComponents"
v40@0:8@"NSExtensionContext<_ASExtensionHostContext>"16@"NSError"24@?<v@?>32
v40@0:8@"_ASAccountAuthenticationModificationExtensionHostContext"16@"NSDictionary"24@?<v@?>32
v48@0:8@"_ASAccountAuthenticationModificationExtensionHostContext"16@"ASPasswordCredential"24@"NSDictionary"32@?<v@?>40
v40@0:8@"NSString"16@"NSString"24@?<v@?@"ASAuthorizationAppleIDCredential"@"NSError">32
v24@0:8@"_ASAccountAuthenticationModificationExtensionHostContext"16
@"AKAuthorization"
@"<_ASAccountAuthenticationModificationExtensionContextProtocol>"
@"NSDictionary"
@"<_ASAccountAuthenticationModificationHostViewControllerDelegate>"
@"NSMutableOrderedSet"
@"NSUserDefaults"
@"NSURL"
@40@0:8@16@24@?32
@44@0:8@16@24B32@?36
B20@0:8B16
@"SFAuthenticationSession"
@"ASWebAuthenticationSession"
@"<ASWebAuthenticationPresentationContextProviding>"
@"UIImageView"
v32@0:8@"ASPasswordCredential"16@?<v@?>24
@"<_ASExtensionHostContextDelegate>"16@0:8
v24@0:8@"<_ASExtensionHostContextDelegate>"16
@"<_ASCredentialProviderExtensionHostContextDelegate>"
v48@0:8@16{CGPoint=dd}24N^{CGPoint=dd}40
v40@0:8@16@24d32
v24@0:8@"UIScrollView"16
v48@0:8@"UIScrollView"16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@"UIScrollView"16B24
@"UIView"24@0:8@"UIScrollView"16
v32@0:8@"UIScrollView"16@"UIView"24
v40@0:8@"UIScrollView"16@"UIView"24d32
B24@0:8@"UIScrollView"16
v40@0:8@16@24q32
d32@0:8@16@24
d32@0:8@16q24
q32@0:8@16@24
B48@0:8@16:24@32@40
v48@0:8@16:24@32@40
B40@0:8@16@24@32
@48@0:8@16@24{CGPoint=dd}32
v40@0:8@"UITableView"16@"UITableViewCell"24@"NSIndexPath"32
v40@0:8@"UITableView"16@"UIView"24q32
d32@0:8@"UITableView"16@"NSIndexPath"24
d32@0:8@"UITableView"16q24
@"UIView"32@0:8@"UITableView"16q24
q32@0:8@"UITableView"16@"NSIndexPath"24
v32@0:8@"UITableView"16@"NSIndexPath"24
@"NSIndexPath"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSString"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSArray"32@0:8@"UITableView"16@"NSIndexPath"24
@"UISwipeActionsConfiguration"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSIndexPath"40@0:8@"UITableView"16@"NSIndexPath"24@"NSIndexPath"32
B48@0:8@"UITableView"16:24@"NSIndexPath"32@40
v48@0:8@"UITableView"16:24@"NSIndexPath"32@40
B32@0:8@"UITableView"16@"UITableViewFocusUpdateContext"24
v40@0:8@"UITableView"16@"UITableViewFocusUpdateContext"24@"UIFocusAnimationCoordinator"32
@"NSIndexPath"24@0:8@"UITableView"16
B40@0:8@"UITableView"16@"NSIndexPath"24@"<UISpringLoadedInteractionContext>"32
v24@0:8@"UITableView"16
@"UIContextMenuConfiguration"48@0:8@"UITableView"16@"NSIndexPath"24{CGPoint=dd}32
@"UITargetedPreview"32@0:8@"UITableView"16@"UIContextMenuConfiguration"24
v40@0:8@"UITableView"16@"UIContextMenuConfiguration"24@"<UIContextMenuInteractionCommitAnimating>"32
v40@0:8@"UITableView"16@"UIContextMenuConfiguration"24@"<UIContextMenuInteractionAnimating>"32
q24@0:8q16
@"UITableView"
@"UIImage"
@"ASCredentialRequestInfoLabelSubPane"
v32@0:8@"NSArray"16@?<v@?>24
v24@0:8@"ASPasswordCredentialIdentity"16
v32@0:8@"ASPasswordCredentialIdentity"16@?<v@?>24
v40@0:8@"_ASCredentialProviderExtensionHostContext"16@"ASPasswordCredential"24@?<v@?>32
v32@0:8@"_ASCredentialProviderExtensionHostContext"16@?<v@?>24
v28@0:8B16@?20
@"<_ASCredentialProviderExtensionConfigurationViewControllerDelegate>"
@28@0:8@16I24
@"NSExtensionContext<_ASExtensionHostContext>"
@"NSTimer"
@"NSExtension"
@"<_ASAccountAuthenticationModificationExtensionHostContextDelegate>"
v24@0:8@"NSString"16
@"NSArray"16@0:8
@32@0:8@16@?24
@?16@0:8
@56@0:8@16@24@32@40@48
@"SOAuthorizationRequest"
@32@0:8q16q24
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
@"CAFilter"
v24@0:8@"SOAuthorization"16
v32@0:8@"SOAuthorization"16@"NSDictionary"24
v40@0:8@"SOAuthorization"16@"NSHTTPURLResponse"24@"NSData"32
v32@0:8@"SOAuthorization"16@"SOAuthorizationResult"24
v32@0:8@"SOAuthorization"16@"NSError"24
v40@0:8@"SOAuthorization"16@"UIViewController"24@?<v@?B@"NSError">32
@32@0:8@16^@24
@"SOAuthorization"
@"UIWindow"
@"ASCAgentProxy"
@"<ASAuthorizationControllerDelegate>"
@"<ASAuthorizationControllerPresentationContextProviding>"
v40@0:8@"_ASAccountAuthenticationModificationRemoteViewController"16@"NSDictionary"24@?<v@?>32
v48@0:8@"_ASAccountAuthenticationModificationRemoteViewController"16@"ASPasswordCredential"24@"NSDictionary"32@?<v@?>40
v24@0:8@"_ASAccountAuthenticationModificationRemoteViewController"16
v40@0:8@"_ASAccountAuthenticationModificationRemoteViewController"16@"NSError"24@?<v@?>32
v32@0:8@"_ASAccountAuthenticationModificationRemoteViewController"16@"NSError"24
@"_ASAccountAuthenticationModificationRemoteViewController"
@"ASAccountAuthenticationModificationRequest"
@"ASAccountAuthenticationModificationController"
@"<ASAccountAuthenticationModificationControllerDelegate>"
@"<ASAccountAuthenticationModificationControllerPresentationContextProviding>"
@40@0:8@16@24:32
@"ASPasswordCredentialIdentity"
@"<_ASPasswordCredentialAuthenticationViewControllerDelegate>"
^{CGColor=}16@0:8
@"SFExternalCredentialIdentityStoreIdentifier"
@64@0:8@16@24@32@40@48@56
v32@0:8@16:24
@"_ASIncomingCallObserver"
@"<_ASCredentialListViewControllerDelegate>"
com.apple.AuthenticationServices.AuthorizationError
ASAuthorizationAppleIDCredentialRevokedNotification
v24@?0q8@"NSError"16
ASAccountAuthenticationModificationServiceViewController
com.apple.SafariViewService
ASAuthorizationControllerContinueButton
v8@?0
Sign Up Not Completed
Continue
v20@?0B8@"LAContext"12
v24@?0@"NSDictionary"8@"NSError"16
exclamationmark.circle
Continue with Passcode
Continue with Password
Done
Signing in
v12@?0B8
v16@?0@"<UIViewControllerTransitionCoordinatorContext>"8
credentialID
<%@: %p; isEnabled=%@; supportsIncrementalUpdates=%@>
com.apple.AuthenticationServices.ASPublicKeyCredentialManager
@"ASCPlatformPublicKeyCredentialLoginChoice"16@?0@"_WKWebAuthenticationAssertionResponse"8
v16@?0@"_WKWebAuthenticationAssertionResponse"8
@"ASCSecurityKeyPublicKeyCredentialLoginChoice"16@?0@"_WKWebAuthenticationAssertionResponse"8
@"_WKPublicKeyCredentialRequestOptions"16@?0@"ASCPublicKeyCredentialAssertionOptions"8
https://
v24@?0@"_WKAuthenticatorAssertionResponse"8@"NSError"16
@"_WKPublicKeyCredentialParameters"16@?0@"NSNumber"8
@"_WKPublicKeyCredentialDescriptor"16@?0@"ASCPublicKeyCredentialDescriptor"8
v24@?0@"_WKAuthenticatorAttestationResponse"8@"NSError"16
@"NSNumber"16@?0@"NSString"8
Did not find a valid extension for request.
v24@?0@"NSExtension"8@"NSError"16
Did not find Account Authentication Modification extension.
v16@?0@"NSExtension"8
iCloud Keychain must be enabled to perform strong password upgrades.
Discovered extension %@ does not support strong password upgrades.
Calling process is not entitled
com.apple.AuthenticationServicesCore.AuthorizationErrorAlertQueue
Use Security Key
Save on Another Device
Sign In with Another Device
Other Options
Other Sign In Options
Manually enter password
B16@?0@"<ASCLoginChoiceProtocol>"8
v24@?0@"<ASCCredentialProtocol>"8@"NSError"16
Select an account to continue
rawClientDataJSON
baseCredential
rawAttestationObject
ASExtensionErrorDomain
ASExtensionLocalizedFailureReasonErrorKey
Sign In (Manual password entry view controller)
Enter a PIN to unlock your security key.
User
WebAuthn Security Key prompt (PIN entry)
Password
PIN validation successful
AuthenticationServicesIncorrectPinEntryAnimation
transform
provideCredentialWithoutUserInteraction(for:)
-provideCredentialWithoutUserInteractionForIdentity:
ASCredentialIdentityStoreErrorDomain
v20@?0B8@"NSError"12
v16@?0@"SFCredentialProviderExtensionState"8
algorithm
v16@?0@"NSError"8
state
access_token
id_token
v32@?0@"NSString"8@16^B24
<%@: %p, state: %@, accessToken: %@, identityToken: %@, authorizedScopes: %@, authenticatedResponse: %@, privateKeys: %@>
rawAuthenticatorData
userID
signature
full_name
email
<%@: %p { provider: %@ }>
<%@: %p { provider: %@, credential: %@ }>
v16@?0@"NSString"8
Unable to sign in
No view controller specified for request.
DeviceClassNumber
Insert and activate your security key, or bring it near the top of your iPhone.
Insert and activate your security key.
WebAuthn Security Key prompt (registration)
Cancel
The operation could not be completed. Please try again.
apple-internal-install
(Internal only: %@)
v24@?0@"ASCAuthorizationPresentationContext"8@"NSError"16
Sign In
KeyIcon
com.apple.AuthenticationServices
ASAuthorizationAppleIDCredential.m
Invalid parameter not satisfying: %@
user
authorizedScopes
<%@: %p { userIdentifier: %@, authorizedScopes: %@ }>
_user
_state
_authorizedScopes
_authorizationCode
_identityToken
_email
_fullName
_realUserStatus
v16@?0@"<_ASAccountAuthenticationModificationExtensionContextProtocol>"8
Cannot request Sign in with Apple authorization in the middle of a strong password upgrade.
Couldn't get application record while fetching authorization.
application-identifier
Host view controller deallocated.
v24@?0@"AKAuthorization"8@"NSError"16
User tapped cancel on Sign in with Apple sheet.
EnableSFAppAccountAuthenticationModificationExtension
com.apple.AuthenticationServices.%@.%p
com.apple.AuthenticationServices.ReadOnly.%@.%p
v16@?0@"NSArray"8
v24@?0@"NSArray"8@"NSError"16
apple.com
com.apple.AuthenticationServices.WebAuthenticationSession
The provided scheme is not valid. A scheme should not include special characters such as ":" or "/".
v24@?0@"NSURL"8@"NSError"16
Cannot start ASWebAuthenticationSession without providing presentation context. Set presentationContextProvider before calling -start.
The UIWindowScene for the returned window was not in the foreground active state.
com.apple.
SFAuthenticationSession
Class getSFAuthenticationSessionClass(void)_block_invoke
ASWebAuthenticationSessionIOS.m
Unable to find class %s
void *SafariServicesLibrary(void)
/System/Library/Frameworks/SafariServices.framework/SafariServices
/System/Library/Frameworks/SafariServices.framework/Contents/MacOS/SafariServices
transports
v32@?0@"<NSCopying>"8@"UIViewController"16@"NSError"24
Your iPad needs to connect to this device in order to sign in with or save a passkey.
Your iPod touch needs to connect to this device in order to sign in with or save a passkey.
Your iPhone needs to connect to this device in order to sign in with or save a passkey.
v16@?0@"<_ASCredentialProviderExtensionContextProtocol>"8
AuthenticationSession
Authorization
CredentialProviderExtension
Keychain
AccountAuthenticationModificationExtension
No user name
iCloud Keychain
Available on all your Apple devices
Security key
Use an external security key
iPhone, iPad, or Android device
Save a passkey on a device with a camera
Use passkey from a device with a camera
Credential (%@)
For this app
For this website
qrcode.viewfinder
key.fill
v32@?0@"NSUUID"8@"UIViewController"16@"NSError"24
get-task-allow
ASCredentialServiceIdentifierValue
ASCredentialServiceIdentifierType
domain
<%@: %p; type=%@; identifier=%@>
@"ASCPublicKeyCredentialDescriptor"16@?0@"ASAuthorizationPlatformPublicKeyCredentialDescriptor"8
_UIViewServiceHostDidEnterBackgroundNotification
preferred
required
discouraged
none
direct
indirect
enterprise
configuration_removed
_type
_style
highlightFilter
inputColor
filters.highlightFilter.inputColor
Continue with Apple
Sign up with Apple
Sign in with Apple
void _ASAuthorizationButtonInitialize(ASAuthorizationAppleIDButton *__strong)
ASAuthorizationAppleIDButton.m
self
ASAuthorizationController.m
authorizationRequests.count
v32@?0@"ASAuthorizationRequest"8Q16^B24
nonce
scope
v32@?0@"NSString"8Q16^B24
HTTP/1.1
B16@?0@"ASAuthorizationRequest"8
Passkeys do not support attestation.
No algorithms specified for ASAuthorizationSecurityKeyPublicKeyCredentialRegistrationRequest.
All Public Key Credential requests must use the same relyingPartyIdentifier.
Found duplicate requests. Only one of each type of request is currently supported.
Registration requests cannot be used with other types of requests.
com.apple.AuthenticationServices.AccountAuthenticationModificationExtensionHelper
Cannot start another Account Authentication Modification request until the current request finishes.
Received request is not a valid ASAccountAuthenticationModificationRequest subclass.
v24@?0@"UIViewController"8@"NSError"16
ASDebugASAccountAuthenticationModificationControllerUsesSafariViewService
v24@?0@"_ASAccountAuthenticationModificationRemoteViewController"8@"NSError"16
The new password will be saved to your iCloud Keychain and will AutoFill on all of your devices. You can view and remove saved passwords in Settings > Passwords, or by asking Siri.
Change to Strong Password
v16@?0@"UIAlertAction"8
Not Now
No presentation anchor provided to show strong password upgrade UI.
No presentation anchor provided to show extension UI.
convertAccountToSignInWithAppleWithoutUserInteractionForServiceIdentifier(for:existingCredential:userInfo:)
-convertAccountToSignInWithAppleWithoutUserInteractionForServiceIdentifier:existingCredential:userInfo:
prepareInterfaceToConvertAccountToSignInWithAppleForServiceIdentifier(serviceIdentifier:existingCredential:userInfo:)
-prepareInterfaceToConvertAccountToSignInWithAppleForServiceIdentifier:existingCredential:userInfo:
changePasswordWithoutUserInteraction(serviceIdentifier:credential:newPassword:userInfo:)
-changePasswordWithoutUserInteractionForServiceIdentifier:existingCredential:newPassword:userInfo:
prepareInterfaceToChangePasswordForServiceIdentifier(serviceIdentifier:credential:newPassword:userInfo:)
-prepareInterfaceToChangePasswordForServiceIdentifier:existingCredential:newPassword:userInfo:
@"ASCPublicKeyCredentialDescriptor"16@?0@"ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor"8
@"UIColor"16@?0@"UITraitCollection"8
serviceIdentifier
recordIdentifier
rank
credentialIdentityStoreIdentifier
<%@: %p; user=%@; serviceIdentifier=%@>
@"NSNumber"16@?0@"ASAuthorizationPublicKeyCredentialParameters"8
Bluetooth Off
Turn on Bluetooth
To sign in to another device using a passkey, your iPad needs to have Bluetooth turned on.
To sign in to another device using a passkey, your iPod touch needs to have Bluetooth turned on.
To sign in to another device using a passkey, your iPhone needs to have Bluetooth turned on.
To save a passkey on another device, your iPad needs to have Bluetooth turned on.
To save a passkey on another device, your iPod touch needs to have Bluetooth turned on.
To save a passkey on another device, your iPhone needs to have Bluetooth turned on.
To save a passkey on another device, your Mac needs to have Bluetooth turned on.
To sign in with a passkey from another device, your iPad needs to have Bluetooth turned on.
To sign in with a passkey from another device, your iPod touch needs to have Bluetooth turned on.
To sign in with a passkey from another device, your iPhone needs to have Bluetooth turned on.
To sign in with a passkey from another device, your Mac needs to have Bluetooth turned on.
implicit
login
refresh
logout
333333
@ffffff
V@333333
@ffffff
?333333
pw@333333
Error enabling biometrics in credential picker: %{public}@
Biometric authentication not available. Falling back to passcode.
Passcode authentication in ASAuthorizationController credential picker failed with error: %{public}@
Asked to show biometric view without any biometrics available.
Error disabling biometrics UI: %{public}@
ASCredentialRequestConfirmButtonSubPane already in processing state, ignoring attempt.
Biometric auth failed or locked out. Switching to passcode authentication.
Biometric auth failed with error: %{public}@
Requesting PIN for security key.
Received unexpected assertion options.
Assertion completed: %ld.
Assertion failed: %{public}@
Replacing error %{public}@ with %{public}@
Not requesting platform credentials.
Platform authenticator not available.
Could not find assertion for user handle: %{private}@
Completion registration: %lu.
Ignoring unknown user verification preference "%{public}@"
Ignoring unknown attestation preference "%{public}@"
Failed to get bundle record for host application due to error: %{public}@
The caller is not entitled to coordinate account authentication modification extension requests
Deleted credential from Keychain after upgrading to Sign in with Apple.
Use Security Key button tapped but no security key login choice is available. Failing request.
Use caBLE button tapped but no caBLE login choice is available. Failing request.
Failed to get application name with error: %{public}@
authenticated for external password login choice but no credential is available
No credential provider extension available
Did not receive any external password credential because user canceled
Did not receive any external password credential because of error: %@
Biometric authentication in ASAuthorizationController credential picker failed.
Password authentication button pressed but selected login choice is not a Sign in with Apple login choice
Showing alert (%@) failed, user notification is nil!. Error: %d
Authentication provider tried to pop view controller but it was not the top view controller in the navigation stack
Asked to present unsupported error: %{public}@.
Class %{public}s must override %{public}s. Canceling extension request.
Class %{public}s's implementation of %{public}s should not call super. Canceling extension request.
Found credential of unexpected type: %{private}@
Rejecting update with no login choices.
Couldn't update interface because a new request view controller could not be created for the new login choices.
No request view controller specified for credential request.
Starting caBLE client: bluetoothEnabled: %{bool}d
Enabling Bluetooth
Starting caBLE authenticator: bluetoothEnabled: %{bool}d
Could not get bundle record to get icon for credential with error: %{public}@.
Could not get icon for password provider
Failed to get application record to revoke authorization with error: %{public}@
Authorization controller successfully revoked the upgrade authorization.
Authorization controller attempted to revoke upgrade authorization and failed with error: %@
Failed to get application record to request authorization due to error: %{public}@
Error when creating Sign in with Apple Authorization: %{public}@
Could not retrieve bundle identifier from %@
The provided scheme is not valid. A scheme should not include special characters such as ":" or "/".
%{public}@ Please adopt the new API as soon as possible (rdar://50384281).
Attempted to set ASNavigationItem on iOS. ASNavigationItem is UINavigationItem on iOS and is a readonly property.
Device does not support transport: %{public}@. Ignoring.
Could not get bundle record to fetch password manager name error: %{public}@.
Failed to get remote view controller: %{public}@
Extension would ordinarily be killed due to timeout, but is kept alive for debugging
Killing extension due to timeout during non-UI request
Extension requires user interaction - re-running with UI
ASAuthorizationController credential request failed with error: %{public}@
Rejecting invalid requests.
Found request for unexpected type: %{private}@
Failed to find helper extension to perform Account Authentication Modification Extension requests with error %{public}@.
Failed to get remote view controller from helper extension: %{public}@
No presentation anchor provided to strong password upgrade UI.
No presentation anchor provided to show extension UI.
Refusing to send credential identity with store identifier [%{public}@] to to extension with store identifier [%{public}@]
Extension did not find a credential corresponding the identity. Invalidating the identity store.
Failed to remove credential identity store with error: %{public}@
softlink:r:path:/System/Library/Frameworks/SafariServices.framework/SafariServices
ASCredentialRequestButtonContinue
ASNSLayoutConstraintExtras
ASAuthorizationAppleIDProvider
AKAuthorizationNotificationHandler
AKAdaptiveServiceInterface
ASAuthorizationProvider
NSObject
ASAccountAuthenticationModificationRemoteViewControllerProtocol
_ASAccountAuthenticationModificationRemoteViewController
ASAuthorizationProviderExtensionAuthorizationResult
ASCredentialRequestConfirmButtonSubPane
LAUIAuthenticationDelegate
ASCredentialRequestInfoLabelSubPane
ASCredentialRequestContainerViewControllerAnimator
UIViewControllerAnimatedTransitioning
ASCredentialRequestContainerViewController
UIViewControllerTransitioningDelegate
UINavigationControllerDelegate
ASAuthorizationPlatformPublicKeyCredentialDescriptor
ASAuthorizationPublicKeyCredentialDescriptor
NSSecureCoding
NSCoding
NSCopying
ASCredentialIdentityStoreState
ASPublicKeyCredentialManager
_WKWebAuthenticationPanelDelegate
ASPublicKeyCredentialManagerInterface
ASAccountAuthenticationModificationServiceViewControllerProtocol
ASAccountAuthenticationModificationServiceViewController
_ASAccountAuthenticationModificationHostViewControllerDelegate
ASCredentialPickerPaneViewController
SFCredentialProviderExtensionManagerObserver
_ASPasswordCredentialAuthenticationViewControllerDelegate
_ASAuthenticationPresentationProvider
ASCredentialRequestSubPaneConfirmButtonDelegate
UITableViewDataSource
_ASIncomingCallObserver
CXCallObserverDelegate
ASPublicKeyCredentialBase
ASPublicKeyCredential
ASAuthorizationCredential
ASAuthorizationSecurityKeyPublicKeyCredentialRegistration
ASAuthorizationPublicKeyCredentialRegistration
_ASInsetTextField
ASPasswordAuthenticationPaneViewController
ASCredentialProviderViewController
AuthenticationServicesExtras
ASCredentialRequestPaneContext
ASCredentialRequestCABLEClientViewController
ASAuthorizationSecurityKeyPublicKeyCredentialProvider
ASCredentialIdentityStore
ASAuthorizationPublicKeyCredentialParameters
ASAccountAuthenticationModificationExtensionContext
_ASAccountAuthenticationModificationExtensionContextProtocol
ASAuthorizationSingleSignOnCredential
ASAuthorizationSecurityKeyPublicKeyCredentialAssertion
ASAuthorizationPublicKeyCredentialAssertion
ASCredentialRequestCABLEConnectingViewController
ASAuthorization
ASAuthorizationViewController
ASCredentialRequestPaneViewControllerDelegate
ASCredentialRequestContainerViewControllerDelegate
ASPasswordAuthenticationPaneViewControllerDelegate
ASCredentialRequestIconGenerator
ASAuthorizationAppleIDCredential
_ASAccountAuthenticationModificationHostViewController
_ASAccountAuthenticationModificationExtensionHostContextDelegate
_ASExtensionHostContextDelegate
ASAuthorizationRequest
_ASAccountAuthenticationModificationExtensionManager
ASAuthorizationSingleSignOnProvider
ASWebAuthenticationSession
ASCredentialRequestImageSubPane
ASAuthorizationAppleIDRequest
_ASCredentialProviderExtensionHostContext
_ASCredentialProviderExtensionHostContextProtocol
_ASExtensionHostContext
ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor
ASCredentialRequestPaneViewController
UITableViewDelegate
UIScrollViewDelegate
ASCredentialRequestBasicPaneViewController
ASPasswordCredential
_ASCredentialProviderExtensionContextProtocol
ASCredentialRequestCABLEConsentViewController
_ASCredentialProviderExtensionConfigurationViewController
_ASCredentialProviderExtensionHostContextDelegate
ASAuthorizationPlatformPublicKeyCredentialProvider
ASCredentialRequestLoginChoiceCell
ASAccountAuthenticationModificationRequest
ASAuthorizationPlatformPublicKeyCredentialAssertion
_ASExtensionViewController
ASCredentialServiceIdentifier
ASCredentialRequestSubPane
_ASAccountAuthenticationModificationExtensionHostContext
_ASAccountAuthenticationModificationExtensionHostContextProtocol
ASAuthorizationPlatformPublicKeyCredentialAssertionRequest
ASAuthorizationPublicKeyCredentialAssertionRequest
ASBackgroundObserver
ASAuthorizationPlatformPublicKeyCredentialRegistration
ASNavigationController
ASAccountAuthenticationModificationUpgradePasswordToStrongPasswordRequest
ASAuthorizationProviderExtensionAuthorizationRequest
ASAuthorizationAppleIDButton
ASAuthorizationController
SOAuthorizationDelegate
ASAccountAuthenticationModificationController
_ASAccountAuthenticationModificationRemoteViewControllerDelegate
ASCredentialRequestSecondaryButton
ASAccountAuthenticationModificationReplacePasswordWithSignInWithAppleRequest
ASAuthorizationPasswordRequest
ASAccountAuthenticationModificationViewController
ASAuthorizationPlatformPublicKeyCredentialRegistrationRequest
ASAuthorizationPublicKeyCredentialRegistrationRequest
_ASPasswordCredentialAuthenticationViewController
ASAuthorizationSecurityKeyPublicKeyCredentialAssertionRequest
ASViewServiceInterfaceUtilities
ASCredentialProviderExtensionContext
ASAuthorizationPasswordProvider
ASPasswordCredentialIdentity
ASAuthorizationSecurityKeyPublicKeyCredentialRegistrationRequest
ASCredentialRequestEnableBluetoothViewController
ASCredentialRequestButton
_ASCredentialListViewController
ASAuthorizationOpenIDRequest
ASAuthorizationSingleSignOnRequest
initWithFrame:
_commonInit
initWithCoder:
_preferredFontForTextStyle:maximumContentSizeCategory:
setTextAlignment:
setAdjustsFontForContentSizeCategory:
setAdjustsFontSizeToFitWidth:
setBackgroundColor:
setFont:
whiteColor
setTextColor:
setTranslatesAutoresizingMaskIntoConstraints:
setTitleLabel:
titleLabel
addSubview:
layer
setCornerRadius:
centerYAnchor
constraintEqualToAnchor:
leadingAnchor
constraintEqualToAnchor:constant:
trailingAnchor
arrayWithObjects:count:
activateConstraints:
isHighlighted
setHighlighted:
isEnabled
setEnabled:
colorWithRed:green:blue:alpha:
colorWithAlphaComponent:
systemGrayColor
as_constraintsMatchingFrameOfView:withFrameOfView:edgeInsets:
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
as_constraintsMatchingFrameOfView:withFrameOfView:
initialize
startServiceWithNotificationHandler:
initWithProvider:
setUserID:
errorWithDomain:code:userInfo:
getCredentialStateForRequest:completion:
defaultCenter
postNotificationName:object:
activate
credentialStateDidChange:completion:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
createRequest
getCredentialStateForUserID:completion:
requestViewController:fromServiceWithBundleIdentifier:connectionHandler:
_plugIn
uuid
serviceViewControllerProxy
upgradeCredentialToSignInWithApple:forServiceIdentifier:userInfo:extensionUUID:
updateCredential:forServiceIdentifier:userInfo:extensionUUID:
accountModificationRemoteViewControllerDidFinishUpgradeToSignInWithApple:userInfo:completion:
accountModificationRemoteViewController:didFinishWithCredential:userInfo:completion:
accountModificationRemoteViewController:requestCanceledWithError:completion:
presentAccountModificationRemoteViewController:
dismissAccountModificationRemoteViewController:
requestToUpgradeToSignInWithAppleDidFinishWithUserInfo:completion:
requestDidFinishWithCredential:userInfo:completion:
requestDidFailWithError:completion:
presentAccountModificationRemoteViewController
dismissAccountModificationRemoteViewController
interfaceWithProtocol:
setWithObject:
setClasses:forSelector:argumentIndex:ofReply:
_exportedInterface
accountModificationRemoteViewController:viewServiceDidTerminateWithError:
requestViewControllerWithConnectionHandler:
exportedInterface
serviceViewControllerInterface
upgradeCredentialToSignInWithApple:forServiceIdentifier:userInfo:extension:
updateCredential:forServiceIdentifier:userInfo:extension:
viewServiceDidTerminateWithError:
delegate
setDelegate:
.cxx_destruct
_delegate
T@"<_ASAccountAuthenticationModificationRemoteViewControllerDelegate>",W,N,V_delegate
init
array
setPrivateKeys:
initWithHTTPAuthorizationHeaders:
initWithHTTPResponse:httpBody:
httpAuthorizationHeaders
setHttpAuthorizationHeaders:
httpResponse
setHttpResponse:
httpBody
setHttpBody:
privateKeys
authorizationResult
_authorizationResult
T@"SOAuthorizationResult",R,N,V_authorizationResult
T@"NSDictionary",&,N
T@"NSHTTPURLResponse",C,N
T@"NSData",&,N
T@"NSArray",&,N
_createMainStackView
initWithView:
setContentCompressionResistancePriority:forAxis:
isBiometricAuthenticationAvailable
_initializeAuthorizationButton
_windowDidBecomeKey:
addObserver:selector:name:object:
authorizationButton
buttonText
setButtonText:
removeObserver:
dealloc
setAccessibilityIdentifier:
setSpacing:
setAlignment:
setAxis:
setDistribution:
clearColor
addArrangedSubview:
centerXAnchor
widthAnchor
heightAnchor
constraintEqualToConstant:
isMechanismEnabled:
_enableLAUIAuthenticationMechanism
enableMechanism:error:
safari_privacyPreservingDescription
biometryType
_switchToBiometricsView:withAuthenticationMechanismEnabled:showAlert:alertString:
_switchToAppleAccountPassword
_passcodeOrPasswordButtonTitle
_authorizeAppleAccountWithPasswordButtonSelected:
addTarget:action:
_authorizationButtonBioSelected:
_authorizationWithPasscodeOrPasswordButtonSelected:
stackView
_continueButtonTapped
performAuthorization:withAuthenticatedLAContext:
_performPasscodeOrPasswordValidation:
_isDelegateReadyForAuthorization
performPasswordAuthentication:
userTappedContinueButton
dictionaryWithObjects:forKeys:count:
evaluatePolicy:options:reply:
validateReadyForAuthorization:
subviews
copy
countByEnumeratingWithState:objects:count:
removeFromSuperview
_disableBiometricView
_addArrangedSpaceToMainStackView:
_setUpAlertImageWithConstraints
_setupLabelWithTitle:animated:
_setupBiometricButtonWithConstraints:
disableMechanism:error:
_verticalSpacerWithConstant:
addConstraint:
redColor
setTintColor:
configurationWithPointSize:weight:
setPreferredSymbolConfiguration:
systemImageNamed:
setImage:
setContentMode:
setFrame:
view
defaultMetrics
systemFontOfSize:weight:
scaledFontForFont:
setNumberOfLines:
setText:
setMaximumContentSizeCategory:
setCustomSpacing:afterView:
_updateLabelAnimatedWithTitle:
animation
functionWithName:
setTimingFunction:
setType:
setDuration:
addAnimation:forKey:
initWithFrame:mechanisms:
addObjectsFromArray:
_passwordAuthenticationButtonTitle
_setGlyphViewGestureRecognizerEnabled:
firstObject
gestureRecognizers
_waitForTimeInterval:withGroup:
invalidateProcessingState
confirmButtonSubPaneDidEnterProcessingState:withAuthenticatedContext:
code
domain
isEqualToString:
_switchToPasscodeOrPassword
confirmButtonSubPaneDidFailBiometry:
_enterProcessingStateWithCompletionHandler:
addToStackView:withCustomSpacingAfter:context:
authenticationResult:error:context:
biometricNoMatch
localizedSubTitleForMechanisms:
processBiometricMatchWithCompletionHandler:
callerIconBundlePath
localizedCallerName
setAuthorizationCapabilityEnabled:
authorizationCapabilityEnabled
showContinueWithPasswordButton
showAlertContinuingWithPassword:
setUpButtonInPaneContext:
showContinueButton
showAuthenticationMechanismForExternalPasswordCredential
biometricAuthenticationFailureWithAlertString:
finishProcessingWithCompletionHandler:
_mainStackView
_containerView
_canPerformBiometricAuthentication
_authorizationButtonContainerView
_biometricsView
_paneContext
_biometricLabel
_processingStateCompletionHandler
_processingStateGroup
_authorizationButton
T@"NSString",C,N
T@"ASCredentialRequestButton",R,N,V_authorizationButton
T@"<ASCredentialRequestSubPaneConfirmButtonDelegate>",W,N,V_delegate
TB,N
_infoLabelWithString:labelType:
_infoLabelMarginInset
_fontForLabelType:
labelColor
messageLabelColor
titleFont
messageFont
isPad
marginInset
text
initWithString:labelType:
setMarginInset:
_infoLabel
_marginInset
Td,N,V_marginInset
T@"NSString",&,N
initWithPresenting:
isPresenting
viewControllerForKey:
_viewControllerForTransitionContext:
containerView
bounds
layoutIfNeeded
performWithoutAnimation:
completeTransition:
_animateUsingDefaultTimingWithOptions:animations:completion:
transitionDuration:
animateTransition:
interruptibleAnimatorForTransition:
animationEnded:
_presenting
presenting
TB,R,N,GisPresenting,V_presenting
initWithNibName:bundle:
setModalPresentationStyle:
setTransitioningDelegate:
_handleTapGesture:
initWithTarget:action:
setCancelsTouchesInView:
viewDidLoad
addGestureRecognizer:
setOpaque:
rootViewController
willMoveToParentViewController:
addChildViewController:
didMoveToParentViewController:
viewWillAppear:
isBeingPresented
preferredContentSize
_dismissalFrameForContentSize:
viewIfLoaded
transitionCoordinator
isAnimated
setContainerContentSize:animated:
effectWithStyle:
setEffect:
colorWithWhite:alpha:
animateAlongsideTransition:completion:
viewDidAppear:
presentViewController:animated:completion:
viewWillDisappear:
isBeingDismissed
dismissViewControllerAnimated:completion:
containerContentSize
locationInView:
frame
_shouldDismiss
requestContainerViewControllerDidDismiss:
requestContainerViewControllerShouldDismiss:
_layoutFrameForContentSize:
initWithDuration:timingParameters:
addAnimations:
startAnimation
_setPaneDelegateForTopViewController
topViewController
_setPaneDelegateForViewController:
paneDelegate
_setPaneDelegate:forViewController:
_clearPaneDelegateForViewController:
_layoutContainerView:
preferredContentSizeDidChangeForChildContentContainer:
viewForKey:
viewWillTransitionToSize:withTransitionCoordinator:
animationControllerForPresentedController:presentingController:sourceController:
animationControllerForDismissedController:
interactionControllerForPresentation:
interactionControllerForDismissal:
presentationControllerForPresentedViewController:presentingViewController:sourceViewController:
navigationController:willShowViewController:animated:
navigationController:didShowViewController:animated:
navigationControllerSupportedInterfaceOrientations:
navigationControllerPreferredInterfaceOrientationForPresentation:
navigationController:interactionControllerForAnimationController:
navigationController:animationControllerForOperation:fromViewController:toViewController:
initWithRootViewController:
supportedInterfaceOrientations
setPaneDelegate:
setContainerContentSize:
setRootViewController:
blurBackgroundView
setBlurBackgroundView:
_tapGestureRecognizer
_rootViewController
_paneDelegate
_blurBackgroundView
_containerContentSize
T@"UIVisualEffectView",&,N,V_blurBackgroundView
T{CGSize=dd},N,V_containerContentSize
T@"UIViewController",&,N,V_rootViewController
T@"<ASCredentialRequestContainerViewControllerDelegate>",W,N,V_delegate
T@"<ASCredentialRequestPaneViewControllerDelegate>",W,N,V_paneDelegate
initWithCredentialID:transports:
credentialID
initWithCredentialID:
decodeObjectOfClass:forKey:
encodeObject:forKey:
supportsSecureCoding
encodeWithCoder:
TB,R
copyWithZone:
setCredentialID:
T@"NSData",C,N
coreDescriptor
_credentialID
T@"ASCPublicKeyCredentialDescriptor",R,N
T@"NSData",C,N,V_credentialID
numberWithBool:
stringWithFormat:
initWithEnabledState:supportsIncrementalUpdates:
supportsIncrementalUpdates
_enabled
_supportsIncrementalUpdates
enabled
TB,R,N,GisEnabled,V_enabled
TB,R,N,V_supportsIncrementalUpdates
dictionary
didReceiveError:
didFetchPlatformLoginChoices:
userHandle
setObject:forKeyedSubscript:
name
displayName
initWithName:displayName:userHandle:relyingPartyIdentifier:
safari_mapObjectsUsingBlock:
_tearDownOnMainQueue
initWithName:displayName:userHandle:
didFetchSecurityKeyLoginChoices:
cancelCurrentOperationIfNecessaryWithOverrideError:
requestPINWithRemainingRetries:completionHandler:
_asToWKCredentialAssertionOptions:
objectAtIndexedSubscript:
relyingPartyIdentifier
authenticatorAttachment
allowCredentials
safari_addObjectsFromArrayUnlessNil:
setAuthenticatorAttachment:
count
setAllowCredentials:
challenge
stringByAppendingString:
getClientDataJSONForAuthenticationType:challenge:origin:
attachment
didCompleteAssertionWithCredential:error:
clientDataHash
dataWithLength:
bytes
length
mutableBytes
setClientDataHash:
getAssertionWithClientDataHash:options:completionHandler:
getAssertionWithChallenge:origin:options:completionHandler:
isUserVerifyingPlatformAuthenticatorAvailable
_createCredentialOfKind:withOptions:
objectForKeyedSubscript:
setLAContext:
clearAllLocalAuthenticatorCredentials
_cancelCurrentOperationSynchronouslyOnInternalQueueIfNecessary
_asToWKCredentialCreationOptions:forCredentialKind:
encodeMakeCredentialCommandWithClientDataHash:options:userVerificationAvailability:
encodeMakeCredentialCommandWithClientDataJSON:options:userVerificationAvailability:
initWithFirst:second:
encodeGetAssertionCommandWithClientDataHash:options:userVerificationAvailability:
encodeGetAssertionCommandWithClientDataJSON:options:userVerificationAvailability:
supportedAlgorithmIdentifiers
initWithAlgorithm:
initWithName:
setIdentifier:
userName
userIdentifier
userDisplayName
initWithName:identifier:displayName:
initWithRelyingParty:user:publicKeyCredentialParamaters:
shouldRequireResidentKey
setRequireResidentKey:
excludedCredentials
setExcludeCredentials:
userVerificationPreference
setUserVerification:
attestationPreference
setAttestation:
setAuthenticatorSelection:
setRelyingPartyIdentifier:
credentialKind
_allowedCredentialsForAssertionOptions:
allowedCredentials
didCompleteRegistrationWithCredential:error:
makeCredentialWithClientDataHash:options:completionHandler:
makeCredentialWithChallenge:origin:options:completionHandler:
cancel
removeAllObjects
panel:updateWebAuthenticationPanel:
panel:requestPINWithRemainingRetries:completionHandler:
panel:selectAssertionResponse:source:completionHandler:
panel:requestLAContextForUserVerificationWithCompletionHandler:
panel:decidePolicyForLocalAuthenticatorWithCompletionHandler:
panel:dismissWebAuthenticationPanelWithResult:
beginAssertionsWithOptions:
createNewPlatformCredentialWithOptions:authenticatedContext:
assertUsingPlatformCredentialForLoginChoice:authenticatedContext:
beginCreatingNewSecurityKeyCredentialIfAvailableWithOptions:
assertUsingSecurityKeyCredentialForLoginChoice:
clearAllCredentials
setDelegateCancellingCurrentOperation:
encodeMakeCredentialCommandWithOptions:authenticatorUserVerificationAvailability:
encodeGetAssertionCommandWithOptions:authenticatorUserVerificationAvailability:
hasRunningPublicKeyCredentialOperation
TB,R,N
_panel
_userHandlesToAssertionResponses
_selectPlatformAssertionCallback
_selectSecurityKeyAssertionCallback
_currentRelyingPartyIdentifier
_currentAuthenticatedContext
_hasRunningPublicKeyCredentialOperation
_pendingError
_internalQueue
T@"<ASPublicKeyCredentialManagerDelegate>",R,W,N,V_delegate
authenticatorData
signature
rawId
initWithRelyingPartyIdentifier:authenticatorData:signature:userHandle:rawClientDataJSON:credentialID:
initWithIdentifier:
setTransports:
transports
safari_mapAndFilterObjectsUsingBlock:
attestationObject
initWithRelyingPartyIdentifier:attestationObject:rawClientDataJSON:credentialID:
_ensureHostHasAccountModificationEntitlement
extensionPointIdentifier
_remoteViewControllerProxy
_upgradeCredentialToSignInWithApple:forServiceIdentifier:userInfo:extension:
extensionWithUUID:completion:
_findExtensionSupportingUpgrade:withCompletionHandler:
initWithExtension:serviceIdentifier:
upgradeCredentialToSignInWithApple:userInfo:
_updateCredential:forServiceIdentifier:userInfo:extension:
_isKeychainSyncEnabled
attributes
safari_stringForKey:
parsePasswordRules:error:
requirementsForPasswordRuleSet:respectingMinLength:maxLength:
initWithPasswordRequirementsByDomain:
generatedPasswordMatchingRequirements:
updateCredential:withNewPassword:userInfo:
_hostAuditToken
bundleRecordForAuditToken:error:
path
extensionsWithMatchingAttributes:error:
safari_boolForKey:
identifier
safari_highLevelDomainFromHost
sharedStore
savedAccountsWithPasswords
user
highLevelDomain
removeCredentialTypes:forSavedAccount:
password
changeSavedAccount:toUser:password:
initWithHost:port:protocol:realm:authenticationMethod:
saveUser:password:forProtectionSpace:highLevelDomain:
_deleteExistingKeychainCredentialIfPossible
_updateKeychainWithNewCredential:
setAutoresizingMask:
_remoteViewControllerInterface
accountModificationHostViewControllerDidCompleteUpgradeToSignInWithApple:userInfo:completion:
accountModificationHostViewController:didFinishWithCredential:userInfo:completion:
presentUIForAccountModificationHostViewController:
dismissUIForAccountModificationHostViewController:
accountModificationHostViewController:requestCanceledWithError:completion:
_accountModificationHostViewController
_isPerformingAppInitiatedUpgrade
_existingCredential
_serviceIdentifierForUpgrade
_addSpacerView
initRequiringTableView:
_updateCachedLoginChoices
requestTypes
_serviceName
teamIdentifier
bundleIdentifier
appleIDAuthorizationRequest
initWithAppName:teamIdentifier:bundleIdentifier:authorizationRequest:
setPresentationProvider:
_selectInitialLoginChoice
sharedManager
addObserver:
initWithPresentationContext:shouldExpandOtherLoginChoices:
tableView
indexSetWithIndex:
reloadSections:withRowAnimation:
reloadData
sizeToFitPaneContent
_selectPreviouslySelectedLoginChoiceIfPossible:
loginChoices
indexOfObject:
indexPathForRow:inSection:
selectRowAtIndexPath:animated:scrollPosition:
tableView:didSelectRowAtIndexPath:
_setUpView
isRegistrationRequest
_configureAuthenticationPaneForSelectedLoginChoice:
setPreferredContentSize:
viewDidDisappear:
setDataSource:
paneHeaderStackView
_setUpIconViewIfNecessary
_setUpInfoLabel
footerPaneContext
_addAuthorizationButtonToPaneContext:
_addOtherLoginChoicesButtonIfNeeded
_addManuallyEnterPasswordButtonIfNeeded
paneFooterStackView
_iconImage
_createIconViewWithIconImage:
headerPaneContext
_localizedInfoString
addSubPane:withCustomSpacingAfter:
isCombinedPublicKeyCredentialRegistrationRequest
loginChoiceKind
_useSecurityKeyButtonTapped
buttonWithTitle:target:action:
_useCABLEButtonTapped
_otherLoginChoicesButtonTapped
_secondaryButtonBottomMargin
isProxiedRequest
_manuallyEnterPasswordButtonTapped
requestPaneViewControllerPresentExpandedLoginChoiceInterface:
safari_firstObjectPassingTest:
requestPaneViewController:dismissWithCredential:error:
requestPaneViewController:didRequestCredentialForLoginChoice:authenticatedContext:completionHandler:
requestPaneViewControllerPresentManualPasswordEntryInterface:
_shouldShowLoginChoicesInTableView
setUserInteractionEnabled:
_updateSelectedRow:
_infoLabelStringForPlatformPublicKeyCredentialRegistration
_infoLabelStringForPassword
_infoLabelStringForSignInWithApple
_infoLabelStringForPlatformPublicKeyCredentialAssertion
_infoLabelStringForSecurityKeyCredentialAssertion
destinationSiteForCrossSiteAssertion
serviceName
proxiedOriginDeviceName
localAccountLoginChoices
appIdentifier
bundleRecordWithApplicationIdentifier:error:
localizedName
shouldUseAlternateCredentialStore
isCABLEAuthenticatorRequest
username
loginRowData
loginRowPaneTitleText
loginRowAuthenticationType
isExternal
shouldRequireLocalAuthenticationForPasswords
platformUserVerificationPreference
shouldRequireLocalAuthenticationForPlatformCredentials
initWithImage:
as_navigationItem
rightBarButtonItem
initWithAuthorization:
performAuthorizationWithCompletionHandler:
primaryLoginChoices
otherLoginChoices
passwordManagerIcon
iconForPresentationContext:size:
primaryExtension
externalCredentialIdentity
_initWithFoundationCredentialIdentity:
initWithExtension:credentialIdentity:
setHandler:
presentingViewController
site
date
initWithUser:password:site:creationDate:
numberOfTableRows
_cellForRow:
initWithLoginChoice:presentationContext:authorizationProvider:
setIsSelectedLoginChoice:
isMovingToParentViewController
cellForRowAtIndexPath:
_setCancelButtonEnabled:
_errorIsPINRequiredError:
requestPaneViewControllerRequiresPINEntryInterface:
_performAuthorizationWithAuthenticatedContext:completionHandler:
ak_isUserCancelError
_userTappedContinueButtonForPasswordLoginChoice:
_userTappedContinueButtonForPasskeyLoginChoice:
_userTappendContinueButtonForSecurityKeyLoginChoice:
_userTappedContinueButtonForCABLELoginChoice:
_userSelectedExternalPasswordCredential
_presentAlert:primaryAction:alternateAction:
navigationController
pushViewController:animated:
popViewControllerAnimated:
window
credentialProviderExtensionManagerExtensionListDidChange:
presentUIForPasswordCredentialAuthenticationViewController:
passwordCredentialAuthenticationViewController:didFinishWithCredential:error:completion:
authenticationProvider:showViewController:
authenticationProvider:hideViewController:
authenticationProvider:presentAlert:primaryAction:alternateAction:
presentationAnchor
T@"UIWindow",R,N
tableView:numberOfRowsInSection:
tableView:cellForRowAtIndexPath:
numberOfSectionsInTableView:
tableView:titleForHeaderInSection:
tableView:titleForFooterInSection:
tableView:canEditRowAtIndexPath:
tableView:canMoveRowAtIndexPath:
sectionIndexTitlesForTableView:
tableView:sectionForSectionIndexTitle:atIndex:
tableView:commitEditingStyle:forRowAtIndexPath:
tableView:moveRowAtIndexPath:toIndexPath:
initWithPresentationContext:
reloadLoginChoices
_presentationContext
_imageSubPane
_confirmButtonSubPane
_currentlySelectedRow
_previouslySelectedLoginChoice
_shouldExpandOtherLoginChoices
_tableViewLoginChoices
_otherLoginChoices
_authKitAuthorizationProvider
_alertQueue
_credentialProviderViewController
_externalPasswordCredentialForSelectedLoginChoice
_initWithBlock:
setDelegate:queue:
hasConnected
callObserverWithBlock:
callObserver:callChanged:
_callObserver
_incomingCallHandler
initWithCredentialID:rawClientDataJSON:
rawClientDataJSON
T@"NSData",R,C,N
_rawClientDataJSON
T@"NSData",R,C,N,V_rawClientDataJSON
T@"NSData",R,C,N,V_credentialID
_initWithBaseCredential:rawAttestationObject:
rawAttestationObject
initWithCoreCredential:
_baseCredential
_rawAttestationObject
T@"NSData",R,C,N,V_rawAttestationObject
textRectForBounds:
editingRectForBounds:
leftViewRectForBounds:
rightViewRectForBounds:
insetSize
setInsetSize:
_insetSize
T{CGSize=dd},N,V_insetSize
_createViews
_setConstraints
keyboardDidShow:
defaultFontForTextStyle:
_titleLabelText
_setUpSubtitleLabel
_setUpUsernameLabel
_secureTextFieldPlaceholderText
setPlaceholder:
setSecureTextEntry:
setReturnKeyType:
setTextContentType:
_textFieldChanged:
addTarget:action:forControlEvents:
_signInButtonTapped
_topViewMargin
_setUpAndAddIconImage
_containerViewHorizontalMargin
bottomAnchor
constraintGreaterThanOrEqualToAnchor:
setPriority:
_secureTextFieldInsetMargin
constraintGreaterThanOrEqualToConstant:
_manualPasswordEntryTitleLabelText
_completeManualPasswordCredentialEntry
_startAnimatingActivityIndicator
_stopAnimatingActivityIndicator
_pinValidationSucceededWithCredential:
_pinValidationFailedWithError:
passwordAuthenticationViewController:validateUserEnteredPIN:completionHandler:
removeObserver:name:object:
initWithActivityIndicatorStyle:
startAnimating
setRightView:
setRightViewMode:
stopAnimating
systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:
proxiedAssociatedDomains
passwordAuthenticationViewController:completedWithManuallyEnteredPasswordCredential:
animateWithDuration:animations:
userInfo
CGRectValue
safeAreaInsets
setConstant:
sizeToFitPaneContentAnimated:
becomeFirstResponder
resignFirstResponder
canBecomeFirstResponder
initWithPersona:presentationContext:
_signInButtonInsetMargin
_intrinsicContentHeight
authenticationDelegate
setAuthenticationDelegate:
_keyboardHeight
_persona
_titleLabel
_subtitleLabel
_usernameField
_secureTextField
_signInButton
_signInButtonActivityIndicator
_paneHeaderStackViewBottomKeyboardConstraint
_authenticationDelegate
T@"<ASPasswordAuthenticationPaneViewControllerDelegate>",W,N,V_authenticationDelegate
setMass:
setStiffness:
setDamping:
setVelocity:
setFillMode:
numberWithFloat:
setFromValue:
setToValue:
setValueFunction:
functionWithControlPoints::::
setKeyPath:
extensionContext
instanceMethodForSelector:
methodForSelector:
containsString:
cancelRequestWithError:
prepareCredentialListForServiceIdentifiers:
provideCredentialWithoutUserInteractionForIdentity:
prepareInterfaceToProvideCredentialForIdentity:
prepareInterfaceForExtensionConfiguration
T@"ASCredentialProviderExtensionContext",R,N
_credentialScopes
initWithUser:authorizedScopes:
identityToken
setIdentityToken:
authorizationCode
setAuthorizationCode:
state
setState:
userInformation
selectedEmail
setEmail:
familyName
setFamilyName:
givenName
setGivenName:
setFullName:
isLikelyRealUser
setRealUserStatus:
authorizedScopes
initWithCapacity:
addObject:
authenticationServicesCredential
initWithPaneViewController:stackView:
addEmptyViewWithSpacing:
paneViewController
_paneViewController
_stackView
T@"ASCredentialRequestPaneViewController",R,W,N,V_paneViewController
T@"UIStackView",R,N,V_stackView
_addAboveIconSpacerView
_setUpIconView
_setUpTitleView
_setUpQRCodeView
_addBelowQRCodeSpacerView
_titleText
_qrCodeSize
_qrCodeASImageWithSize:
setActive:
proxiedIconData
proxiedIconScale
localizedStringWithFormat:
_qrCodeCIImageWithSize:
imageWithCIImage:
QRCodeGenerator
qrCodeURL
absoluteString
dataUsingEncoding:
setMessage:
outputImage
extent
imageByApplyingTransform:
_marginAboveIcon
initWithPresentationContext:loginChoice:
_loginChoice
_initWithProvider:relyingPartyIdentifier:challenge:displayName:name:userID:
_initWithProvider:relyingPartyIdentifier:challenge:
initWithRelyingPartyIdentifier:
createCredentialRegistrationRequestWithChallenge:displayName:name:userID:
createCredentialAssertionRequestWithChallenge:
_relyingPartyIdentifier
T@"NSString",R,C,N,V_relyingPartyIdentifier
_initCredentialIdentityStore
replaceCredentialIdentitiesWithIdentities:completion:
getCredentialProviderExtensionStateWithCompletion:
saveCredentialIdentities:completion:
removeCredentialIdentities:completion:
removeAllCredentialIdentitiesWithCompletion:
T@"ASCredentialIdentityStore",R,N
getCredentialIdentityStoreStateWithCompletion:
_helperProxy
serviceIdentifier
type
recordIdentifier
rank
initWithServiceIdentifier:serviceIdentifierType:externalRecordIdentifier:user:rank:
algorithm
integerValue
numberWithInteger:
_algorithm
Tq,R,N,V_algorithm
_as_accountModificationHostInterface
_as_accountModificationExtensionInterface
_auxiliaryConnection
remoteObjectProxyWithErrorHandler:
getSignInWithAppleAuthorizationWithState:nonce:completion:
completeRequestReturningItems:completionHandler:
prepareToCompleteUpgradeToSignInWithAppleWithUserInfo:completion:
prepareToCompleteRequestWithUpdatedCredential:userInfo:completion:
prepareToCancelRequestWithError:completion:
_principalObject
prepareToConvertAccountToSignInWithAppleWithoutUserInteractionForServiceIdentifier:existingCredential:
convertAccountToSignInWithAppleWithoutUserInteractionForServiceIdentifier:existingCredential:
convertAccountToSignInWithAppleWithoutUserInteractionForServiceIdentifier:existingCredential:userInfo:
prepareInterfaceToConvertAccountToSignInWithAppleForServiceIdentifier:existingCredential:
prepareInterfaceToConvertAccountToSignInWithAppleForServiceIdentifier:existingCredential:userInfo:
changePasswordWithoutUserInteractionForServiceIdentifier:existingCredential:newPassword:userInfo:
prepareInterfaceToChangePasswordForServiceIdentifier:existingCredential:newPassword:userInfo:
cancelRequest
dismissRequestUI
_extensionAuxiliaryHostProtocol
_extensionAuxiliaryVendorProtocol
upgradeCredentialToSignInWithApple:serviceIdentifier:userInfo:
prepareInterfaceToUpgradeCredentialToSignInWithApple:serviceIdentifier:userInfo:completion:
updatePasswordForServiceIdentifier:existingCredential:newPassword:userInfo:
prepareInterfaceToUpdatePasswordForServiceIdentifier:existingCredential:newPassword:userInfo:completion:
getSignInWithAppleUpgradeAuthorizationWithState:nonce:completionHandler:
completeUpgradeToSignInWithAppleWithUserInfo:
completeChangePasswordRequestWithUpdatedCredential:userInfo:
initWithAuthenticatedResponse:
doesNotRecognizeSelector:
_initWithAuthenticatedResponse:
allHeaderFields
enumerateKeysAndObjectsUsingBlock:
emptyCredential
initWithAuthenticatedResponse:privateKeys:
accessToken
authenticatedResponse
_state
_accessToken
_identityToken
_authorizedScopes
_authenticatedResponse
_privateKeys
T@"NSString",R,C,N,V_state
T@"NSData",R,C,N,V_accessToken
T@"NSData",R,C,N,V_identityToken
T@"NSArray",R,C,N,V_authorizedScopes
T@"NSHTTPURLResponse",R,C,N,V_authenticatedResponse
T@"NSArray",R,N,V_privateKeys
_initWithBaseCredential:userID:signature:rawAuthenticatorData:
rawAuthenticatorData
userID
_rawAuthenticatorData
_userID
_signature
T@"NSData",R,C,N,V_rawAuthenticatorData
T@"NSData",R,C,N,V_userID
T@"NSData",R,C,N,V_signature
_connectingText
initWithArrangedSubviews:
safeAreaLayoutGuide
_activityIndicator
initWithProvider:credential:
initWithUser:password:
authorization
credential
authorizationFromCredential:
initWithCorePlatformKeyCredentialAssertion:
initWithCorePlatformKeyCredentialRegistration:
provider
_provider
_credential
T@"<ASAuthorizationProvider>",R,N,V_provider
T@"<ASAuthorizationCredential>",R,N,V_credential
updateLoginChoices:
_initialViewControllerForPresentationContext:
setViewControllers:
_presentPINEntryInterface
visibleViewController
updateSubtitle:
_pushSecurityKeyViewControllerWithOverrideSubtitle:
initWithTitle:subtitle:icon:
_pushCABLEConnectingViewController
_pushCABLEAuthenticatingViewController
_setUpInitialViewController
authorizationViewControllerDidCompleteInitialPresentation:
_startCABLEClientForSingleLoginChoiceIfNeeded
_startCABLEAuthenticatorOnInitialPresentationIfNeeded
initWithCustomView:
authorizationViewController:didCompleteWithCredential:error:
_setUpContainerViewControllerWithCredentialRequestViewController:
cableAuthenticatorURL
shouldRequireCABLEAuthenticatorConsent
_cancelBarButtonItem
setRightBarButtonItem:
_signInBarButtonItem
setLeftBarButtonItem:
_securityKeyRequestViewController
navigationItem
_securityKeyRequestViewControllerWithOverrideSubtitle:
setHidesBackButton:
_cancelButtonSelected:
initWithTitle:style:target:action:
_cableClientViewControllerWithLoginChoice:
setViewControllers:animated:
isBluetoothEnabled
_showEnableBluetoothViewControllerForCABLEClientWithLoginChoice:
authorizationViewController:didRequestCredentialForLoginChoice:authenticatedContext:completionHandler:
_startCABLEClientWithLoginChoice:
_enableBluetoothAndShowCABLEClientViewControllerWithLoginChoice:
setEnableBluetoothHandler:
setBluetoothEnabled:
_startCABLEAuthenticator
_showEnableBluetoothViewControllerForCABLEAuthenticator
_pushCABLEAuthenticatorCredentialPickerViewControllerWithPresentationContext:
_showCABLEAuthenticatorError:
authorizationViewController:startCABLEAuthenticationWithCompletionHandler:
_enableBluetoothAndShowCABLEConnectingViewController
_pushSecurityKeyViewController
_pushCABLEClientViewControllerForCABLELoginChoice:
_presentManualPasswordEntryInterface
authorizationViewController:validateUserEnteredPIN:completionHandler:
requestPaneViewControllerStartCABLEAuthentication:
updateInterfaceWithLoginChoices:
presentPINEntryInterface
pushOrUpdateBasicPaneViewControllerWithError:
cableClientWillConnect
cableClientWillAuthenticate
modalPresentationStyle
_navigationController
_wirelessSettingsController
T@"<ASAuthorizationViewControllerDelegate>",W,N,V_delegate
doubleValue
_iconForData:scale:size:
_iconForApplicationIdentifier:size:
hasExternalPasswords
_providerIconForPasswordLoginChoice:
_keychainIcon
initWithBundleIdentifier:
_imageForIcon:size:
imageWithData:scale:
CGImage
scale
initWithCGImage:scale:
initWithImages:
size
mainScreen
initWithSize:scale:
setShouldApplyMask:
setShape:
prepareImagesForImageDescriptors:
imageForImageDescriptor:
imageWithCGImage:scale:orientation:
providerBundleIdentifier
_iconForPasswordProviderBundleIdentifier:
bundleWithIdentifier:
imageNamed:inBundle:
_applicationIconImageForBundleIdentifier:format:scale:
iconForPasswordLoginChoice:presentationContext:
iconForPublicKeyCredentialLoginChoiceWithPresentationContext:
T@"UIImage",R,N
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
encodeInteger:forKey:
setWithObjects:
decodeObjectOfClasses:forKey:
decodeIntegerForKey:
email
fullName
realUserStatus
setAccessToken:
refreshToken
setRefreshToken:
_user
_authorizationCode
_email
_fullName
_realUserStatus
_refreshToken
T@"NSData",C,N,V_accessToken
T@"NSData",C,N,V_refreshToken
T@"NSData",C,N,V_identityToken
T@"NSData",C,N,V_authorizationCode
T@"NSString",C,N,V_state
T@"NSString",C,N,V_email
T@"NSPersonNameComponents",C,N,V_fullName
Tq,N,V_realUserStatus
T@"NSString",R,C,N,V_user
initWithExtension:
_cancelButtonPressed
initWithBarButtonSystemItem:target:action:
extension
localizedContainingName
setTitle:
setModalInPresentation:
_beginNonUIRequest:connectionHandler:
_beginRequestWithConnectionHandler:
systemBackgroundColor
navigationBar
setTranslucent:
prepareToCancelRequestWithHostContext:error:completion:
containingUrl
initWithURL:allowPlaceholder:error:
authorizedRequest
requestIdentifier
UUIDString
setTransactionID:
setBundleID:
setTeamID:
revokeAuthorizationWithContext:completion:
setNonce:
entitlements
objectForKey:ofClass:
setAppID:
initWithUpgradeContext:
performAuthorizationWithContext:completion:
prepareToCompleteUpgradeToSignInWithAppleRequestWithHostContext:userInfo:completion:
prepareToCompleteRequestWithHostContext:updatedCredential:userInfo:completion:
dismissRequestUI:
_nonUIRequestDidRequireUserInteraction
_shouldUseNonUIRequestTimer
_requestDidFailWithError:completion:
_serviceIdentifier
_newPassword
_accountModificationOperation
_signInWithAppleAuthorization
_accountModificationExtensionContextProxy
_userInfo
T@"<_ASAccountAuthenticationModificationHostViewControllerDelegate>",W,N,V_delegate
UTF8String
orderedSet
safari_browserDefaults
endMatchingExtensions:
_endExtensionDiscovery
_buildDomainToExtensionDictionaryWithSharedWebCredentialsDatabaseEntries:
getAllApprovedSharedWebCredentialsEntries:
beginMatchingExtensionsWithAttributes:completion:
domainByStrippingSubdomainWildcardPrefixIfNecessary:
domainIsProhibitedForSavingCredentials:
highLevelDomainHasSuiteOfAssociatedApps:
service
appID
applicationProxyForBundleURL:
_notifyObservers:
boolForKey:
_beginExtensionDiscovery
removeObject:
accountModificationExtensionManagerExtensionListDidChange:
extensionForDomain:completionHandler:
addChangeObserver:
removeChangeObserver:
_dataConstructionQueue
_readOnlyQueue
_extensionMatchingToken
_domainToExtension
_extensions
_observers
_errorEncounteredDuringLastExtensionDiscovery
_mobileSafariUserDefaults
initWithURL:
canPerformAuthorizationWithURL:responseCode:useInternalExtensions:
authorizationProviderWithIdentityProviderURL:
canPerformAuthorization
_url
T@"NSURL",R,N,V_url
initWithURL:callbackURLScheme:usingEphemeralSession:completionHandler:
exceptionWithName:reason:userInfo:
_invalidate
_startDryRun:
setPrefersEphemeralWebBrowserSession:
presentationAnchorForWebAuthenticationSession:
windowScene
activationState
mainBundle
hasPrefix:
startASWebAuthenticationSessionInWindow:dryRun:
isSessionStarted
initWithURL:callbackURLScheme:completionHandler:
canStart
start
presentationContextProvider
setPresentationContextProvider:
prefersEphemeralWebBrowserSession
_authenticationSession
_originalCompletionHandler
_referenceToSelf
_prefersEphemeralWebBrowserSession
_presentationContextProvider
T@"<ASWebAuthenticationPresentationContextProviding>",W,N,V_presentationContextProvider
TB,N,V_prefersEphemeralWebBrowserSession
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
setAs_navigationItem:
T@"UINavigationItem",&,N
_imageViewWithImage:
image
constraintEqualToAnchor:multiplier:
headerIconCornerRadius
_setCornerRadius:
iconBorderColor
setBorderColor:
iconBorderWidth
setBorderWidth:
imageView
_imageView
T@"UIImageView",R,N,V_imageView
setUser:
T@"NSString",C,N,V_user
_as_credentialProviderHostInterface
_as_credentialProviderExtensionInterface
prepareToCompleteRequestWithHostContext:credential:completion:
prepareToCompleteExtensionConfigurationRequestWithHost:completion:
prepareToCompleteRequestWithSelectedCredential:completion:
prepareToCompleteExtensionConfigurationRequestWithCompletion:
T@"<_ASExtensionHostContextDelegate>",W,N
T@"<_ASCredentialProviderExtensionHostContextDelegate>",W,N,V_delegate
_transports
T@"NSArray",&,N,V_transports
_newStackView
_navigationBarHeaderHeight
topAnchor
constraintGreaterThanOrEqualToAnchor:constant:
constraintLessThanOrEqualToAnchor:
_setUpContexts
initWithFrame:style:
setAlwaysBounceVertical:
setShowsVerticalScrollIndicator:
_newContainerView
setTableHeaderView:
tableHeaderView
initWithEffect:
contentView
priority
_blurryTrayMinimumHeight
constraintGreaterThanOrEqualToSystemSpacingBelowAnchor:multiplier:
constraintLessThanOrEqualToSystemSpacingBelowAnchor:multiplier:
setNeedsLayout
_adjustForPositionOfScrollView:
viewSafeAreaInsetsDidChange
setNeedsUpdateConstraints
viewWillLayoutSubviews
viewDidLayoutSubviews
_setCompressedHeightForView:
_updateBlurForTray
systemLayoutSizeFittingSize:
_maximumContentHeight
setScrollEnabled:
traitCollectionDidChange:
traitCollection
preferredContentSizeCategory
contentOffset
setBackgroundEffects:
_isContentUnderTray
_indexPathForLastRow
rectForRowAtIndexPath:
convertRect:toView:
numberOfSections
_safeIndexWithCount:
numberOfRowsInSection:
rectForSection:
scrollViewDidScroll:
scrollViewDidZoom:
scrollViewWillBeginDragging:
scrollViewWillEndDragging:withVelocity:targetContentOffset:
scrollViewDidEndDragging:willDecelerate:
scrollViewWillBeginDecelerating:
scrollViewDidEndDecelerating:
scrollViewDidEndScrollingAnimation:
viewForZoomingInScrollView:
scrollViewWillBeginZooming:withView:
scrollViewDidEndZooming:withView:atScale:
scrollViewShouldScrollToTop:
scrollViewDidScrollToTop:
scrollViewDidChangeAdjustedContentInset:
tableView:willDisplayCell:forRowAtIndexPath:
tableView:willDisplayHeaderView:forSection:
tableView:willDisplayFooterView:forSection:
tableView:didEndDisplayingCell:forRowAtIndexPath:
tableView:didEndDisplayingHeaderView:forSection:
tableView:didEndDisplayingFooterView:forSection:
tableView:heightForRowAtIndexPath:
tableView:heightForHeaderInSection:
tableView:heightForFooterInSection:
tableView:estimatedHeightForRowAtIndexPath:
tableView:estimatedHeightForHeaderInSection:
tableView:estimatedHeightForFooterInSection:
tableView:viewForHeaderInSection:
tableView:viewForFooterInSection:
tableView:accessoryTypeForRowWithIndexPath:
tableView:accessoryButtonTappedForRowWithIndexPath:
tableView:shouldHighlightRowAtIndexPath:
tableView:didHighlightRowAtIndexPath:
tableView:didUnhighlightRowAtIndexPath:
tableView:willSelectRowAtIndexPath:
tableView:willDeselectRowAtIndexPath:
tableView:didDeselectRowAtIndexPath:
tableView:editingStyleForRowAtIndexPath:
tableView:titleForDeleteConfirmationButtonForRowAtIndexPath:
tableView:editActionsForRowAtIndexPath:
tableView:leadingSwipeActionsConfigurationForRowAtIndexPath:
tableView:trailingSwipeActionsConfigurationForRowAtIndexPath:
tableView:shouldIndentWhileEditingRowAtIndexPath:
tableView:willBeginEditingRowAtIndexPath:
tableView:didEndEditingRowAtIndexPath:
tableView:targetIndexPathForMoveFromRowAtIndexPath:toProposedIndexPath:
tableView:indentationLevelForRowAtIndexPath:
tableView:shouldShowMenuForRowAtIndexPath:
tableView:canPerformAction:forRowAtIndexPath:withSender:
tableView:performAction:forRowAtIndexPath:withSender:
tableView:canFocusRowAtIndexPath:
tableView:shouldUpdateFocusInContext:
tableView:didUpdateFocusInContext:withAnimationCoordinator:
indexPathForPreferredFocusedViewInTableView:
tableView:selectionFollowsFocusForRowAtIndexPath:
tableView:shouldSpringLoadRowAtIndexPath:withContext:
tableView:shouldBeginMultipleSelectionInteractionAtIndexPath:
tableView:didBeginMultipleSelectionInteractionAtIndexPath:
tableViewDidEndMultipleSelectionInteraction:
tableView:contextMenuConfigurationForRowAtIndexPath:point:
tableView:previewForHighlightingContextMenuWithConfiguration:
tableView:previewForDismissingContextMenuWithConfiguration:
tableView:willPerformPreviewActionForMenuWithConfiguration:animator:
tableView:willDisplayContextMenuWithConfiguration:animator:
tableView:willEndContextMenuInteractionWithConfiguration:animator:
setTableView:
_isTableViewRequired
_blurryTray
_headerWidthConstraint
_footerWidthConstraint
_paneHeaderStackView
_paneFooterStackView
_headerPaneContext
_footerPaneContext
_tableView
T@"<ASCredentialRequestPaneViewControllerDelegate>",W,N,V_delegate
T@"UIStackView",R,N,V_paneHeaderStackView
T@"UIStackView",R,N,V_paneFooterStackView
T@"ASCredentialRequestPaneContext",R,N,V_headerPaneContext
T@"ASCredentialRequestPaneContext",R,N,V_footerPaneContext
T@"UITableView",&,N,V_tableView
Tq,R,N
_setUpTitleLabel
_addBottomFillerView
_addTopFillerViewWithMargin:
_title
_subtitle
_icon
_subtitleSubPane
initWithPublicKeyCredentialManager:
credentialWithUser:password:
_password
T@"NSString",R,C,N,V_password
instantiateViewControllerWithInputItems:connectionHandler:
_extensionContextForUUID:
remoteObjectProxy
prepareCredentialListForServiceIdentifiers:completionHandler:
prepareInterfaceToProvideCredentialForIdentity:completionHandler:
_as_instantiateViewControllerWithConnectionHandler:
_as_auxiliaryRemoteObjectWithRequestID:
setSeparatorStyle:
_addHeaderSpacerViewWithCustomSpacingAfter:
_setUpContinueButton
_continueButtonPressed
_finishWithSuccess:completion:
credentialProviderExtensionConfigurationViewControllerDidFinish:completion:
beginConfiguringExtension
T@"<_ASCredentialProviderExtensionConfigurationViewControllerDelegate>",W,N,V_delegate
_initWithProvider:relyingPartyIdentifier:challenge:name:userID:
createCredentialRegistrationRequestWithChallenge:name:userID:
initWithStyle:reuseIdentifier:
_setUpFormat
_setUpConstraints
_setUpContent
setSelectionStyle:
_cellLabelFontWithStyle:traits:
secondaryLabelColor
grayColor
setClipsToBounds:
cellIconCornerRadius
_leadingIconImageOffset
setSeparatorInset:
layoutMarginsGuide
preferredFontDescriptorWithTextStyle:addingSymbolicTraits:options:
fontWithDescriptor:size:
_showIconBorder
loginRowText
loginRowDetailText
setDetailText:
loginRowIconImage
setIconImage:
tertiaryLabelColor
_detailTextForPasswordLoginChoice:
_defaultPasskeyIcon
_publicKeyCredentialImageForPresentationContext:
_titleForPublicKeyCredentialAssertionWithName:userHandle:
_defaultSecurityKeyIcon
_subtitleForPublicKeyCredentialAssertion
_cableIcon
base64EncodedStringWithOptions:
substringWithRange:
accessoryType
setAccessoryType:
_detailTextForPasswordLoginChoiceFromKeychain:
_detailTextForExternalPasswordLoginChoice:
bundleRecordWithBundleIdentifier:allowPlaceholder:error:
_hideIconBorder
iconImage
title
detailText
isSelectedLoginChoice
_authorizationProvider
_detailLabel
_iconImageView
T@"UIImage",&,N
_invalidateNonUIRequestTimerIfNeeded
_endDelayingPresentation
leftAnchor
rightAnchor
_kill:
_as_setApplicationBackgroundBlock:
_beginDelayingPresentation:cancellationHandler:
_extensionRequestDidFinish:
_sf_addHandlerForRequestIdentifier:withBlock:
_setRemoteViewController:
invalidate
setDismissOnBackground:
_nonUIRequestTimedOut
childViewControllerForHomeIndicatorAutoHidden
childViewControllerForScreenEdgesDeferringSystemGestures
childViewControllerForStatusBarHidden
childViewControllerForStatusBarStyle
childViewControllerForWhitePointAdaptivityStyle
dismissOnBackground
nonUIHostContext
_remoteViewController
_nonUIHostContext
_nonUIRequestTimer
_allowRequestingUIFromNonUIRequest
_dismissOnBackground
_extension
T@"NSExtension",R,N,V_extension
T@"NSExtensionContext",R,N,V_nonUIHostContext
TB,N,V_dismissOnBackground
decodeInt64ForKey:
initWithIdentifier:type:
encodeInt64:forKey:
_identifier
_type
T@"NSString",R,C,N,V_identifier
Tq,R,N,V_type
setCustomSpacingAfter:
superview
customSpacingAfter
_view
_customSpacingAfter
T@"UIView",R,N,V_view
Td,N,V_customSpacingAfter
T@"<_ASAccountAuthenticationModificationExtensionHostContextDelegate>",W,N,V_delegate
initWithKind:relyingPartyIdentifier:challenge:userVerificationPreference:allowedCredentials:
setChallenge:
setAllowedCredentials:
setUserVerificationPreference:
T@"NSArray",C,N
coreCredentialAssertionOptions
_challenge
_userVerificationPreference
_allowedCredentials
T@"ASCPublicKeyCredentialAssertionOptions",R,N
T@"NSArray",C,N,V_allowedCredentials
T@"NSData",C,N,V_challenge
T@"NSString",C,N,V_relyingPartyIdentifier
T@"NSString",&,N,V_userVerificationPreference
_sceneDidEnterBackground:
_hostDidEnterBackground:
object
parentViewController
initWithViewController:block:
viewController
block
_viewController
_block
T@"UIViewController",R,W,N,V_viewController
T@?,R,N,V_block
presentedViewController
_as_applicationBackgroundBlock
_as_viewControllerToPresentFrom
T@?,C,N,S_as_setApplicationBackgroundBlock:
_setBuiltinTransitionStyle:
setBackgroundImage:forBarMetrics:
insertSubview:atIndex:
_backdropView
_currentStyle
initWithUser:serviceIdentifier:userInfo:
initWithUser:password:extension:serviceIdentifier:userInfo:
T@"NSString",R,N,V_password
T@"NSString",R,N,V_user
T@"ASCredentialServiceIdentifier",R,N,V_serviceIdentifier
T@"NSDictionary",R,N,V_userInfo
doNotHandle
complete
completeWithHTTPAuthorizationHeaders:
completeWithHTTPResponse:httpBody:
completeWithError:
completeWithAuthorizationResult:
presentAuthorizationViewControllerWithCompletion:
requestedOperation
httpHeaders
realm
extensionData
callerBundleIdentifier
authorizationOptions
isCallerManaged
callerTeamIdentifier
localizedCallerDisplayName
isUserInteractionEnabled
initWithAuthorizationRequest:
isUserInterfaceEnabled
authorizationRequest
_authorizationRequest
T@"SOAuthorizationRequest",R,N,V_authorizationRequest
T@"NSURL",R,N
T@"NSString",R,N
T@"NSDictionary",R,N
T@"NSData",R,N
T@"NSString",R,C,N
callerManaged
TB,R,N,GisCallerManaged
userInterfaceEnabled
TB,R,N,GisUserInterfaceEnabled
initWithAuthorizationButtonType:authorizationButtonStyle:
defaultCornerRadius
setNeedsDisplay
_drawRect:inView:
_screen
_ak_buttonType
_ak_buttonStyle
layoutSubviews
initWithType:
setName:
CGColor
setValue:forKey:
setFilters:
_createHighlightFilterIfNecessary
valueForKeyPath:
colorWithCGColor:
setValue:forKeyPath:
animationWithKeyPath:
ak_addAdditiveAnimation:
_performAnimationToSetHighlighted:
buttonWithType:style:
layerClass
Td,R
drawRect:
intrinsicContentSize
isAccessibilityElement
accessibilityTraits
accessibilityLabel
cornerRadius
_style
_highlightFilter
_cornerRadius
Td,N,V_cornerRadius
constraintLessThanOrEqualToConstant:
_authorizationRequestsHandledByAuthenticationServicesDaemon:
_shouldPerformRequestsWithAuthKit:
_authKitRequests
_performAuthKitRequests:
_performAuthorizationRequests:
enumerateObjectsUsingBlock:
value
nonce
requestedScopes
componentsJoinedByString:
setOperation:
setUrl:
setHttpHeaders:
setUseInternalExtensions:
setAuthorizationOptions:
setEnableUserInteraction:
presentationAnchorForAuthorizationController:
setEnableEmbeddedAuthorizationViewController:
beginAuthorizationWithParameters:
setCredentialRequests:
_authorizationFromAuthKitResult:
authorizationController:didCompleteWithAuthorization:
authorizationController:didCompleteWithError:
_authKitRequestFromAppleIDRequest:
setUserIdentifier:
setRequestedScopes:
JSONObjectWithData:options:error:
addEntriesFromDictionary:
statusCode
initWithURL:statusCode:HTTPVersion:headerFields:
_finishAppSSO
_authenticatedResponseFromHTTPResponse:httpBody:
_viewControllerForFullScreenPresentationFromView:
_presentViewController:sendingView:animated:
_onlyHasAppleIDRequest:
safari_filterObjectsUsingBlock:
_convertCoreErrorToPublicError:
_requestContextWithRequests:error:
_authenticationServicesAgentProxy
performAuthorizationRequestsForContext:withCompletionHandler:
coreCredentialCreationOptions
initWithRequestTypes:
setAppleIDAuthorizationRequest:
setPlatformKeyCredentialCreationOptions:
setPlatformKeyCredentialAssertionOptions:
setSecurityKeyCredentialCreationOptions:
setSecurityKeyCredentialAssertionOptions:
authorizationDidNotHandle:
authorizationDidCancel:
authorizationDidComplete:
authorization:didCompleteWithHTTPAuthorizationHeaders:
authorization:didCompleteWithHTTPResponse:httpBody:
authorization:didCompleteWithAuthorizationResult:
authorization:didCompleteWithError:
authorization:presentViewController:withCompletion:
initWithAuthorizationRequests:
performRequests
authorizationRequests
customAuthorizationMethods
setCustomAuthorizationMethods:
_appSSOAuthorization
_appSSORequestURL
_appSSOPresentationAnchor
_appSSOViewController
_authorizationRequests
_customAuthorizationMethods
T@"NSArray",R,N,V_authorizationRequests
T@"<ASAuthorizationControllerDelegate>",W,N,V_delegate
T@"<ASAuthorizationControllerPresentationContextProviding>",W,N,V_presentationContextProvider
T@"NSArray",C,N,V_customAuthorizationMethods
accountAuthenticationModificationController:didFailRequest:withError:
_performReplacePasswordWithSignInWithAppleRequest:
_showUpgradeToStrongPasswordPromptForRequest:
standardUserDefaults
_failRequestWithError:
_requestRemoteViewController:
applicationProxyForIdentifier:
alertControllerWithTitle:message:preferredStyle:
_performUpgradePasswordToStrongPasswordRequest:
actionWithTitle:style:handler:
addAction:
_viewControllerToPresentFrom
presentationAnchorForAccountAuthenticationModificationController:
accountAuthenticationModificationController:didSuccessfullyCompleteRequest:withUserInfo:
performRequest:
_accountAuthenticationModificationRemoteViewController
_request
_helperExtension
T@"<ASAccountAuthenticationModificationControllerDelegate>",W,N,V_delegate
T@"<ASAccountAuthenticationModificationControllerPresentationContextProviding>",W,N,V_presentationContextProvider
buttonWithType:
setTitle:forState:
T@"ASAccountAuthenticationModificationExtensionContext",R,N
setUserName:
setUserDisplayName:
setSupportedAlgorithmIdentifiers:
setAttestationPreference:
setDisplayName:
_displayName
_name
_attestationPreference
T@"ASCPublicKeyCredentialCreationOptions",R,N
T@"NSData",C,N,V_userID
T@"NSString",C,N,V_name
T@"NSString",C,N,V_displayName
T@"NSString",&,N,V_attestationPreference
credentialIdentityStoreIdentifier
sf_bundleIdentifierForContainingApp
removeCredentialIdentityStoreForApplication:completion:
_finishWithCredential:error:completion:
_credentialIdentity
T@"<_ASPasswordCredentialAuthenticationViewControllerDelegate>",W,N,V_delegate
userInterfaceStyle
systemDarkGrayTintColor
colorWithDynamicProvider:
systemGray2Color
T^{CGColor=},R,N
Td,R,N
T@"UIFont",R,N
addCommitHandler:forPhase:
completeRequestWithSelectedCredential:completionHandler:
completeExtensionConfigurationRequest
initWithServiceIdentifier:user:recordIdentifier:
serviceIdentifierType
externalRecordIdentifier
owningExtensionState
allocWithZone:
setRank:
identityWithServiceIdentifier:user:recordIdentifier:
_recordIdentifier
_rank
_credentialIdentityStoreIdentifier
T@"SFExternalCredentialIdentityStoreIdentifier",R,N,V_credentialIdentityStoreIdentifier
T@"NSString",R,C,N,V_recordIdentifier
Tq,N,V_rank
setShouldRequireResidentKey:
setExcludedCredentials:
credentialParameters
setCredentialParameters:
residentKeyPreference
setResidentKeyPreference:
_credentialParameters
_excludedCredentials
_residentKeyPreference
T@"NSArray",C,N,V_credentialParameters
T@"NSArray",C,N,V_excludedCredentials
T@"NSString",&,N,V_residentKeyPreference
_setUpTitlePane
_setUpMessagePane
_setUpButtonPane
_preferredFontForTextStyle:weight:
_message
_enableBluetooth
presentationContext
enableBluetoothHandler
_enableBluetoothHandler
T@"ASCAuthorizationPresentationContext",R,N,V_presentationContext
T@?,C,N,V_enableBluetoothHandler
removeTarget:action:forControlEvents:
T@"UILabel",&,N,V_titleLabel
credentialListViewControllerDidPrepareInterface:
_finishWithCredential:completion:
credentialListViewController:didFinishWithCredential:completion:
initWithExtension:serviceIdentifiers:
T@"<_ASCredentialListViewControllerDelegate>",W,N,V_delegate
setRequestedOperation:
_requestedScopes
_nonce
_requestedOperation
T@"NSArray",C,N,V_requestedScopes
T@"NSString",C,N,V_nonce
T@"NSString",C,N,V_requestedOperation
setUserInterfaceEnabled:
_userInterfaceEnabled
_authorizationOptions
T@"NSArray",C,N,V_authorizationOptions
TB,N,GisUserInterfaceEnabled,V_userInterfaceEnabled
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@24@0:8@16
v16@0:8
v20@0:8B16
@32@0:8@16@24
@64@0:8@16@24{UIEdgeInsets=dddd}32
v32@0:8q16@?24
v32@0:8q16@?<v@?B@"NSError">24
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@?24
v40@0:8@16@24@?32
v32@0:8@"NSDictionary"16@?<v@?>24
v40@0:8@"ASPasswordCredential"16@"NSDictionary"24@?<v@?>32
v32@0:8@"NSError"16@?<v@?>24
@24@0:8@?16
v48@0:8@16@24@32@40
v24@0:8@16
@"<_ASAccountAuthenticationModificationRemoteViewControllerDelegate>"
@"SOAuthorizationResult"
v40@0:8@16@24@32
@24@0:8Q16
v24@0:8@?16
v40@0:8@"NSDictionary"16@"NSError"24@"LAContext"32
@"NSString"24@0:8Q16
v24@0:8@?<v@?>16
v36@0:8B16B20B24@28
v24@0:8d16
@24@0:8d16
v28@0:8@16B24
v32@0:8d16@24
v40@0:8@16d24@32
@"UIStackView"
@"UIView"
@"LAUIAuthenticationView"
@"ASCredentialRequestPaneContext"
@"UILabel"
@"NSObject<OS_dispatch_group>"
@"ASCredentialRequestButton"
@"<ASCredentialRequestSubPaneConfirmButtonDelegate>"
@32@0:8@16Q24
d16@0:8
d24@0:8@16
d24@0:8@"<UIViewControllerContextTransitioning>"16
v24@0:8@"<UIViewControllerContextTransitioning>"16
@"<UIViewImplicitlyAnimating>"24@0:8@"<UIViewControllerContextTransitioning>"16
@20@0:8B16
@40@0:8@16@24@32
@"<UIViewControllerAnimatedTransitioning>"40@0:8@"UIViewController"16@"UIViewController"24@"UIViewController"32
@"<UIViewControllerAnimatedTransitioning>"24@0:8@"UIViewController"16
@"<UIViewControllerInteractiveTransitioning>"24@0:8@"<UIViewControllerAnimatedTransitioning>"16
@"UIPresentationController"40@0:8@"UIViewController"16@"UIViewController"24@"UIViewController"32
v36@0:8@16@24B32
Q24@0:8@16
q24@0:8@16
@48@0:8@16q24@32@40
v36@0:8@"UINavigationController"16@"UIViewController"24B32
Q24@0:8@"UINavigationController"16
q24@0:8@"UINavigationController"16
@"<UIViewControllerInteractiveTransitioning>"32@0:8@"UINavigationController"16@"<UIViewControllerAnimatedTransitioning>"24
@"<UIViewControllerAnimatedTransitioning>"48@0:8@"UINavigationController"16q24@"UIViewController"32@"UIViewController"40
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8{CGSize=dd}16
v32@0:8@16@24
v32@0:8{CGSize=dd}16
v36@0:8{CGSize=dd}16B32
v40@0:8{CGSize=dd}16@32
{CGSize=dd}16@0:8
@"UITapGestureRecognizer"
@"UIViewController"
@"<ASCredentialRequestContainerViewControllerDelegate>"
@"<ASCredentialRequestPaneViewControllerDelegate>"
@"UIVisualEffectView"
{CGSize="width"d"height"d}
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^{_NSZone=}16
@"NSData"16@0:8
v24@0:8@"NSData"16
@"NSData"
@24@0:8B16B20
v32@0:8@16q24
v40@0:8@16Q24@?32
v48@0:8@16@24q32@?40
v32@0:8@"_WKWebAuthenticationPanel"16q24
v40@0:8@"_WKWebAuthenticationPanel"16Q24@?<v@?@"NSString">32
v48@0:8@"_WKWebAuthenticationPanel"16@"NSArray"24q32@?<v@?@"_WKWebAuthenticationAssertionResponse">40
v32@0:8@"_WKWebAuthenticationPanel"16@?<v@?@"LAContext">24
v32@0:8@"_WKWebAuthenticationPanel"16@?<v@?q>24
v24@0:8@"NSArray"16
v32@0:8@"ASCPublicKeyCredentialCreationOptions"16@"LAContext"24
v32@0:8@"ASCPlatformPublicKeyCredentialLoginChoice"16@"LAContext"24
v24@0:8@"ASCPublicKeyCredentialCreationOptions"16
v24@0:8@"ASCSecurityKeyPublicKeyCredentialLoginChoice"16
v24@0:8@"NSError"16
v24@0:8@"<ASPublicKeyCredentialManagerDelegate>"16
@"WBSPair"32@0:8@"ASCPublicKeyCredentialCreationOptions"16Q24
@"WBSPair"32@0:8@"ASCPublicKeyCredentialAssertionOptions"16Q24
v32@0:8Q16@24
@"_WKWebAuthenticationPanel"
@"NSMutableDictionary"
@"NSString"
@"LAContext"
@"NSError"
@"NSObject<OS_dispatch_queue>"
@"<ASPublicKeyCredentialManagerDelegate>"
v48@0:8@"ASPasswordCredential"16@"ASCredentialServiceIdentifier"24@"NSDictionary"32@"NSUUID"40
v48@0:8@16@24@32@?40
v40@0:8@"_ASAccountAuthenticationModificationHostViewController"16@"NSDictionary"24@?<v@?>32
v48@0:8@"_ASAccountAuthenticationModificationHostViewController"16@"ASPasswordCredential"24@"NSDictionary"32@?<v@?>40
v24@0:8@"_ASAccountAuthenticationModificationHostViewController"16
v40@0:8@"_ASAccountAuthenticationModificationHostViewController"16@"NSError"24@?<v@?>32
@"_ASAccountAuthenticationModificationHostViewController"
@"ASPasswordCredential"
@"ASCredentialServiceIdentifier"
v24@0:8@"SFCredentialProviderExtensionManager"16
v24@0:8@"_ASPasswordCredentialAuthenticationViewController"16
v48@0:8@"_ASPasswordCredentialAuthenticationViewController"16@"ASPasswordCredential"24@"NSError"32@?<v@?>40
v48@0:8@16@24@?32@?40
v32@0:8@"<_ASAuthenticationProvider>"16@"UIViewController"24
v48@0:8@"<_ASAuthenticationProvider>"16@"NSDictionary"24@?<v@?>32@?<v@?>40
@"UIWindow"16@0:8
v32@0:8@"ASCredentialRequestConfirmButtonSubPane"16@"LAContext"24
v24@0:8@"ASCredentialRequestConfirmButtonSubPane"16
B24@0:8@"ASCredentialRequestConfirmButtonSubPane"16
q32@0:8@16q24
@32@0:8@16q24
B32@0:8@16@24
q40@0:8@16@24q32
v40@0:8@16q24@32
q32@0:8@"UITableView"16q24
@"UITableViewCell"32@0:8@"UITableView"16@"NSIndexPath"24
q24@0:8@"UITableView"16
@"NSString"32@0:8@"UITableView"16q24
B32@0:8@"UITableView"16@"NSIndexPath"24
@"NSArray"24@0:8@"UITableView"16
q40@0:8@"UITableView"16@"NSString"24q32
v40@0:8@"UITableView"16q24@"NSIndexPath"32
v40@0:8@"UITableView"16@"NSIndexPath"24@"NSIndexPath"32
@28@0:8@16B24
q16@0:8
@24@0:8q16
v24@0:8q16
v40@0:8@16@?24@?32
@"ASCAuthorizationPresentationContext"
@"ASCredentialRequestImageSubPane"
@"ASCredentialRequestConfirmButtonSubPane"
@"<ASCLoginChoiceProtocol>"
@"NSArray"
@"AKASAuthorizationProvider"
@"_ASPasswordCredentialAuthenticationViewController"
@"ASCPasswordCredential"
v32@0:8@"CXCallObserver"16@"CXCall"24
@"CXCallObserver"
@"ASPublicKeyCredentialBase"
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@32@0:8Q16@24
@"UITextField"
@"ASCredentialRequestButtonContinue"
@"UIActivityIndicatorView"
@"NSLayoutConstraint"
@"<ASPasswordAuthenticationPaneViewControllerDelegate>"
v32@0:8@16d24
@"ASCredentialRequestPaneViewController"
@32@0:8{CGSize=dd}16
@"ASCABLELoginChoice"
@48@0:8@16@24@32@40
@"SFCredentialProviderExtensionHelperProxy"
v56@0:8@16@24@32@40@?48
v40@0:8@"ASPasswordCredential"16@"ASCredentialServiceIdentifier"24@"NSDictionary"32
v48@0:8@"ASPasswordCredential"16@"ASCredentialServiceIdentifier"24@"NSDictionary"32@?<v@?>40
v48@0:8@"ASCredentialServiceIdentifier"16@"ASPasswordCredential"24@"NSString"32@"NSDictionary"40
v56@0:8@"ASCredentialServiceIdentifier"16@"ASPasswordCredential"24@"NSString"32@"NSDictionary"40@?<v@?>48
@"NSHTTPURLResponse"
@"<ASAuthorizationProvider>"
@"<ASAuthorizationCredential>"
v40@0:8@"ASCredentialRequestPaneViewController"16@"<ASCCredentialProtocol>"24@"NSError"32
v48@0:8@"ASCredentialRequestPaneViewController"16@"<ASCLoginChoiceProtocol>"24@"LAContext"32@?<v@?@"<ASCCredentialProtocol>"@"NSError">40
v24@0:8@"ASCredentialRequestPaneViewController"16
B24@0:8@"ASCredentialRequestContainerViewController"16
v24@0:8@"ASCredentialRequestContainerViewController"16
v40@0:8@"ASPasswordAuthenticationPaneViewController"16@"NSString"24@?<v@?@"<ASCCredentialProtocol>"@"NSError">32
v32@0:8@"ASPasswordAuthenticationPaneViewController"16@"ASCPasswordCredential"24
@"ASNavigationController"
@"SFWirelessSettingsController"
@"<ASAuthorizationViewControllerDelegate>"
@40@0:8@16{CGSize=dd}24
@48@0:8@16d24{CGSize=dd}32
@"NSPersonNameComponents"
v40@0:8@"NSExtensionContext<_ASExtensionHostContext>"16@"NSError"24@?<v@?>32
v40@0:8@"_ASAccountAuthenticationModificationExtensionHostContext"16@"NSDictionary"24@?<v@?>32
v48@0:8@"_ASAccountAuthenticationModificationExtensionHostContext"16@"ASPasswordCredential"24@"NSDictionary"32@?<v@?>40
v40@0:8@"NSString"16@"NSString"24@?<v@?@"ASAuthorizationAppleIDCredential"@"NSError">32
v24@0:8@"_ASAccountAuthenticationModificationExtensionHostContext"16
@"AKAuthorization"
@"<_ASAccountAuthenticationModificationExtensionContextProtocol>"
@"NSDictionary"
@"<_ASAccountAuthenticationModificationHostViewControllerDelegate>"
@"NSMutableOrderedSet"
@"NSUserDefaults"
@"NSURL"
@40@0:8@16@24@?32
@44@0:8@16@24B32@?36
B20@0:8B16
@"SFAuthenticationSession"
@"ASWebAuthenticationSession"
@"<ASWebAuthenticationPresentationContextProviding>"
@"UIImageView"
v32@0:8@"ASPasswordCredential"16@?<v@?>24
@"<_ASExtensionHostContextDelegate>"16@0:8
v24@0:8@"<_ASExtensionHostContextDelegate>"16
@"<_ASCredentialProviderExtensionHostContextDelegate>"
v48@0:8@16{CGPoint=dd}24N^{CGPoint=dd}40
v40@0:8@16@24d32
v24@0:8@"UIScrollView"16
v48@0:8@"UIScrollView"16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@"UIScrollView"16B24
@"UIView"24@0:8@"UIScrollView"16
v32@0:8@"UIScrollView"16@"UIView"24
v40@0:8@"UIScrollView"16@"UIView"24d32
B24@0:8@"UIScrollView"16
v40@0:8@16@24q32
d32@0:8@16@24
d32@0:8@16q24
q32@0:8@16@24
B48@0:8@16:24@32@40
v48@0:8@16:24@32@40
B40@0:8@16@24@32
@48@0:8@16@24{CGPoint=dd}32
v40@0:8@"UITableView"16@"UITableViewCell"24@"NSIndexPath"32
v40@0:8@"UITableView"16@"UIView"24q32
d32@0:8@"UITableView"16@"NSIndexPath"24
d32@0:8@"UITableView"16q24
@"UIView"32@0:8@"UITableView"16q24
q32@0:8@"UITableView"16@"NSIndexPath"24
v32@0:8@"UITableView"16@"NSIndexPath"24
@"NSIndexPath"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSString"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSArray"32@0:8@"UITableView"16@"NSIndexPath"24
@"UISwipeActionsConfiguration"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSIndexPath"40@0:8@"UITableView"16@"NSIndexPath"24@"NSIndexPath"32
B48@0:8@"UITableView"16:24@"NSIndexPath"32@40
v48@0:8@"UITableView"16:24@"NSIndexPath"32@40
B32@0:8@"UITableView"16@"UITableViewFocusUpdateContext"24
v40@0:8@"UITableView"16@"UITableViewFocusUpdateContext"24@"UIFocusAnimationCoordinator"32
@"NSIndexPath"24@0:8@"UITableView"16
B40@0:8@"UITableView"16@"NSIndexPath"24@"<UISpringLoadedInteractionContext>"32
v24@0:8@"UITableView"16
@"UIContextMenuConfiguration"48@0:8@"UITableView"16@"NSIndexPath"24{CGPoint=dd}32
@"UITargetedPreview"32@0:8@"UITableView"16@"UIContextMenuConfiguration"24
v40@0:8@"UITableView"16@"UIContextMenuConfiguration"24@"<UIContextMenuInteractionCommitAnimating>"32
v40@0:8@"UITableView"16@"UIContextMenuConfiguration"24@"<UIContextMenuInteractionAnimating>"32
q24@0:8q16
@"UITableView"
@"UIImage"
@"ASCredentialRequestInfoLabelSubPane"
v32@0:8@"NSArray"16@?<v@?>24
v24@0:8@"ASPasswordCredentialIdentity"16
v32@0:8@"ASPasswordCredentialIdentity"16@?<v@?>24
v40@0:8@"_ASCredentialProviderExtensionHostContext"16@"ASPasswordCredential"24@?<v@?>32
v32@0:8@"_ASCredentialProviderExtensionHostContext"16@?<v@?>24
v28@0:8B16@?20
@"<_ASCredentialProviderExtensionConfigurationViewControllerDelegate>"
@28@0:8@16I24
@"NSExtensionContext<_ASExtensionHostContext>"
@"NSTimer"
@"NSExtension"
@"<_ASAccountAuthenticationModificationExtensionHostContextDelegate>"
v24@0:8@"NSString"16
@"NSArray"16@0:8
@32@0:8@16@?24
@?16@0:8
@56@0:8@16@24@32@40@48
@"SOAuthorizationRequest"
@32@0:8q16q24
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
@"CAFilter"
v24@0:8@"SOAuthorization"16
v32@0:8@"SOAuthorization"16@"NSDictionary"24
v40@0:8@"SOAuthorization"16@"NSHTTPURLResponse"24@"NSData"32
v32@0:8@"SOAuthorization"16@"SOAuthorizationResult"24
v32@0:8@"SOAuthorization"16@"NSError"24
v40@0:8@"SOAuthorization"16@"UIViewController"24@?<v@?B@"NSError">32
@32@0:8@16^@24
@"SOAuthorization"
@"UIWindow"
@"ASCAgentProxy"
@"<ASAuthorizationControllerDelegate>"
@"<ASAuthorizationControllerPresentationContextProviding>"
v40@0:8@"_ASAccountAuthenticationModificationRemoteViewController"16@"NSDictionary"24@?<v@?>32
v48@0:8@"_ASAccountAuthenticationModificationRemoteViewController"16@"ASPasswordCredential"24@"NSDictionary"32@?<v@?>40
v24@0:8@"_ASAccountAuthenticationModificationRemoteViewController"16
v40@0:8@"_ASAccountAuthenticationModificationRemoteViewController"16@"NSError"24@?<v@?>32
v32@0:8@"_ASAccountAuthenticationModificationRemoteViewController"16@"NSError"24
@"_ASAccountAuthenticationModificationRemoteViewController"
@"ASAccountAuthenticationModificationRequest"
@"ASAccountAuthenticationModificationController"
@"<ASAccountAuthenticationModificationControllerDelegate>"
@"<ASAccountAuthenticationModificationControllerPresentationContextProviding>"
@40@0:8@16@24:32
@"ASPasswordCredentialIdentity"
@"<_ASPasswordCredentialAuthenticationViewControllerDelegate>"
^{CGColor=}16@0:8
@"SFExternalCredentialIdentityStoreIdentifier"
@64@0:8@16@24@32@40@48@56
v32@0:8@16:24
@"_ASIncomingCallObserver"
@"<_ASCredentialListViewControllerDelegate>"
