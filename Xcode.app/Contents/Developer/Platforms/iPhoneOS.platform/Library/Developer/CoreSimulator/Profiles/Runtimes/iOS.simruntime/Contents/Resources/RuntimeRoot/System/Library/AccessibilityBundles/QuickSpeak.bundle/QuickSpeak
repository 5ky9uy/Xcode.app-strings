CKChatController
_menuForChatItem:
CKCoreChatController
collectionViewController
CKTranscriptCollectionViewController
balloonViewForChatItem:
CKTextBalloonView
textView
CKBalloonChatItem
balloonViewClass
CKMessagePartChatItem
v8@?0
quickspeak.pause
quickspeak.speak
rectangle.3.group.bubble.left
v16@?0@"UIAction"8
CKFullScreenBalloonViewController
performCancelAnimationWithCompletion:
PLStackView
WAllPhotosAlbumViewController
WInteractiveNavigationControllerView
WInteractiveNavigationController
PKTextAttachmentDrawingView
Files.DOCItemCollectionViewController
com_apple_DocumentManager_Service.DOCItemCollectionViewController
v24@?0@8^B16
QuickSpeak
B16@?0@"AXValidationManager"8
UIColor
selectionHighlightColor
UICalloutBar
buttonPressed:
delegate
fade
hide
_targetForAction:
updateAvailableButtons
UICalloutBarButton
setPage:
UITextSelectionView
setVisible:
showSelectionCommands
m_extraItems
NSArray
m_currentSystemButtons
NSMutableArray
UITextInteraction
_textInput
_updatedAccessibilityTextMenuWithMenuElements:
NSObject_QSExtras
UIResponder_QSExtras
UITextField_QSExtrasAccessibility
CKBalloonTextView_QSExtras
CKFullScreenBalloonViewController_QSExtras
CKFullScreenBalloonViewControllerPhone_QSExtras
CKChatController_ClickyOrb_QSExtras
EKDayOccurrenceView
EKDayOccurrenceView_QSExtras
PUOneUpViewController
PUOneUpViewController_QSExtras
UITextInteraction_QSExtras
v16@?0@"AXValidationManager"8
QuickSpeak PDF
PDFView_QSExtras
PDFKit
QuickSpeak WebKit2
WKContentView_QSExtras
WKWebViewAccessibility_QSExtras
WebKit
UIWebView
_internal
UIWebViewInternal
browserView
UIWebBrowserView
QuickSpeak WebKit Legacy
UIWebView_QSExtras
UIWebBrowserView_QSExtras
UIApplicationLoadedWebKit
AXSpeakSelectionLastSpokenString
Received error trying to start speaking: %{public}@
Received error trying to pause speaking: %{public}@
Received error trying to resume speaking: %{public}@
v12@?0B8
v16@?0@"UIView"8
v32@?0@8Q16^B24
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/Source/QuickSpeak/QuickSpeak.m
-[AXQuickSpeak _viewsWithBlock:]
Only call this when highlight view is not nil
interactionAssistant
selectionView
B16@?0@"UIView"8
UISelectionGrabberDot
_accessibilitySpeakTextSelectionViews
_accessibilityQuickSpeakTokenizer
QS can't handle range speaking because this isn't UITextInput: %{public}@
no text rect available %{public}@
failed to make start[%{private}@] and end[%{private}@] position start:%{private}@, - start:%{private}@, length: %{private}@
WKContentView
SXCanvasView
TSDCanvasView
CKBalloonTextView
UITextView
text
NSObject
dialect
quickspeak.many.languages
& %@
%@ %@
v56@?0@"NSString"8{_NSRange=QQ}16{_NSRange=QQ}32^B48
Please stop calling _accessibilityQuickSpeakContentIsSpeakable: %{private}@
play
pause
quickspeak.one.nonambiguous.language
quickspeak.preferred.language
v16@?0@?<v@?@"NSArray">8
quickspeak.speak.languages
quickspeak.sentence
quickspeak.spell.out
UIResponder
UIWebDocumentView
UITextInputPrivate
occurrence
EKEvent
title
WKWebView
_currentContentView
selectedText
accessibilityRetrieveSpeakSelectionContent
WebSelectionRect
rect
{CGRect={CGPoint=dd}{CGSize=dd}}
_accessibilityRetrieveRectsEnclosingSelectionOffset:withGranularity:
_accessibilityRetrieveRectsAtSelectionOffset:withText:
_selectionChanged
_accessibilityStoreSelection
_accessibilityClearSelection
WKTextRange
selectedTextRange
selectedTextLength
AXSelectionRange
AXSpeakSelectionString
AXRetrievingContent
UITextRange
_accessibilityCacheContentIfNecessary
AXIsCachingContent
AXRetrievingRects
Caught exception while waiting for rects results... %@
PDFView
currentSelection
PDFPageLayerSelectionEffect
_private
PDFViewPrivate
scrollView
PDFScrollView
UIScrollView
pdfDocumentView
Got error making selection: %{private}@/%{private}@ %{private}@
PDFView will process range: %d, %d
PDFSelection
PDFView got the following ranges: %{private}@
PDFView got the following sentence ranges: %{private}@
UITextField
tokenizer
CKFullScreenBalloonViewControllerPhone
setBalloonView:
Will load QS safe categories for WebKit legacy now
WebKit legacy not loaded. Will load QS safe categories on demand
Secondary maps contained langs in non ambiguous maps. Secondary Maps: %@ Non-ambiguous Maps: %@
%{public}@
Will update AX speech items for UIMenu
Did update AX speech items for UIMenu: %@
WKContentView: will wait for speak selection content
WKContentView: Finish waiting for content. Context exists or not we are not supposed to show speak
WKContentView: Finish waiting for content. Already waiting
WKContentView: Finish waiting for content. Last retrieveal too soon
WKContentView: Caught exception while waiting for results: %@
WKContentView: Finish waiting for content. Got valued or timeout occurred
WebKit content setting AXSpeakSelectionString '%{private}@'
WebKit content requesting AXSpeakSelectionString: '%{private}@'
__CKChatController_ClickyOrb_QSExtras_super
SafeCategory
CKChatController_ClickyOrb_QSExtras
__CKFullScreenBalloonViewController_QSExtras_super
CKFullScreenBalloonViewController_QSExtras
QuickSpeakPriv
UITextInput
UIKeyInput
UITextInputTraits
NSObject
AXQuickSpeak
AXOratorDelegate
__CKBalloonTextView_QSExtras_super
CKBalloonTextView_QSExtras
__NSObject_QSExtras_super
NSObject_QSExtras
__UIWebView_QSExtras_super
UIWebView_QSExtras
__UITextInteraction_QSExtras_super
UITextInteraction_QSExtras
__UIResponder_QSExtras_super
UIResponder_QSExtras
__UIWebBrowserView_QSExtras_super
UIWebBrowserView_QSExtras
AXQSMenuHelper
__EKDayOccurrenceView_QSExtras_super
EKDayOccurrenceView_QSExtras
__PUOneUpViewController_QSExtras_super
PUOneUpViewController_QSExtras
__WKWebViewAccessibility_QSExtras_super
WKWebViewAccessibility_QSExtras
__WKContentView_QSExtras_super
WKContentView_QSExtras
__PDFView_QSExtras_super
PDFView_QSExtras
__UITextField_QSExtrasAccessibility_super
UITextField_QSExtrasAccessibility
__CKFullScreenBalloonViewControllerPhone_QSExtras_super
CKFullScreenBalloonViewControllerPhone_QSExtras
T@"AXLanguageTaggedContent",R,N
CGRectValue
_accessibilityQuickSpeakContent
T@"<UITextInputDelegate>",W,N
_paused
T@"AXDispatchTimer",&,N,V_highlightViewDispatcher
backgroundColor
T@"NSArray",&,N,V_hiddenTextSelectionDelegates
containsObject:
T@"NSDictionary",C,N
dealloc
T@"NSString",R,C
T@"QSSelectionHighlightView",&,N,V_sentenceHighlightView
isEmpty
T@"UITextPosition",R,N
isScrollEnabled
T@"UITextRange",C
markedTextRange
T@"UIView",R,N
primaryLanguage
T@,&,N,V_quickSpeakInitiator
removeObserver:
TB,D,N
secureTextEntry
TB,N,GisPaused,V_paused
setBalloonView:
TB,N,GisShowingLanguageChoices,V_showingLanguageChoices
smartQuotesType
TB,N,V_hasTextBalloonView
textContentType
.cxx_destruct
_accessibilityIsTextInteraction
T#,R
_orator
T@"<UITextInputTokenizer>",R,N
animateWithDuration:animations:
T@"AXOrator",R,N
bundleForClass:
T@"NSArray",&,N,V_hiddenTextSelectionViews
content
T@"NSString",C,N
dialect
T@"QSSelectionHighlightView",&,N,V_highlightView
hasText
T@"UITextInputPasswordRules",C,N
isProxy
T@"UITextRange",&,N,VspeakingSentenceRange
langMap
T@"UITextRange",R,N
markedTextStyle
T@,&,N,V_contentOwner
release
T@,R,N
resumeSpeaking:
TB,N
selectedContent
TB,N,GisSecureTextEntry
smartDashesType
TB,N,V_cachedIdleTimerPref
spellOutContent
TB,R,N
TQ,R
Tq,N
_accessibilityBoolValueForKey:
_accessibilityCacheContentIfNecessary
_accessibilityClearSelection
_accessibilityDidGetSelectionRects:withGranularity:atOffset:
_accessibilityHandleFinishSpeaking
_accessibilityIsTextInput
_accessibilityPauseSpeaking:
_accessibilityPerformValidations:
_accessibilityQScanPerformAction:withSender:
_accessibilityQuickSpeakContentIsSpeakable
_accessibilityQuickSpeakEnclosingSentence:
_accessibilityQuickSpeakTextRectsWithRange:string:highlightRects:sentenceRects:singleTextRect:
_accessibilityQuickSpeakTokenizer
_accessibilityRemoveValueForKey:
_accessibilityRetrieveRectsAtSelectionOffset:withText:
_accessibilityRetrieveRectsEnclosingSelectionOffset:withGranularity:
_accessibilityRetrieveRectsForGuanularity:atSelectionOffset:wordText:
_accessibilitySearchTextRangeFromRange:withString:selectedRange:
_accessibilitySentenceRectsForRange:
_accessibilitySetBoolValue:forKey:
_accessibilitySetRetainedValue:forKey:
_accessibilitySetValue:forKey:storageMode:
_accessibilityShouldShowPauseBubble
_accessibilityShouldShowSpeakBubble
_accessibilityShouldShowSpeakLanguageBubble
_accessibilityShouldShowSpeakSpellOut
_accessibilityShouldUpdateQuickSpeakContent
_accessibilitySpeak:
_accessibilitySpeakLanguageSelection:
_accessibilitySpeakSelectionAssociatedScrollView
_accessibilitySpeakSelectionTextInputResponder
_accessibilitySpeakSentence:
_accessibilitySpeakSpellOut:
_accessibilitySpeakTextSelectionViews
_accessibilitySpeakWithLanguage:
_accessibilityStoreSelection
_accessibilitySystemShouldShowPauseBubble
_accessibilitySystemShouldShowSpeakBubble
_accessibilitySystemShouldShowSpeakBubbleCommon
_accessibilitySystemShouldShowSpeakLanguageBubble
_accessibilitySystemShouldShowSpeakSentence
_accessibilitySystemShouldShowSpeakSpellOut
_accessibilityTextRectsForRange:singleTextRect:
_accessibilityTextRectsForRange:singleTextRect:selectedRange:string:
_accessibilityUITextInput
_accessibilityValueForKey:
_adjustedRange:withText:matchText:initiator:
_axActionForSpeakSelection:
_axContentView
_axConvertRange:toRects:operatingPage:
_axSelectedTextLength
_axWaitForSpeakSelectionContentResults
_axWaitForSpeakSelectionRectResultsForGuanularity:atSelectionOffset:wordText:
_cachedIdleTimerPref
_cleanupTextSelectionViews
_contentOwner
_currentSentenceRange
_handleAppDidEnterBackground:
_handleAppWillResignActive:
_handlePauseCallback
_handleQuickSpeakHighlight:sentenceRects:textRect:initiator:
_handleWebkitLegacyWasLoaded:
_hasTextBalloonView
_hiddenTextSelectionDelegates
_hiddenTextSelectionViews
_highlightView
_highlightViewDispatcher
_installWebKitLegacySafeCategories
_installWebKitLegacySafeCategoriesIfNeeded
_lastQuickSpeakOffset
_lastUnicharLocation
_lastWholeCharacterLocation
_manipulateOtherTextViews:
_menuForChatItem:
_quickSpeakInitiator
_quickSpeakInputInitiator
_quickSpeakTextRects:withRange:string:highlightRects:sentenceRects:singleTextRect:
_quickSpeakUITextInputTextRects:withRange:string:highlightRects:sentenceRects:singleTextRect:
_rangeStringMatch:wordText:
_rectsByUnionSamelineRects:
_scrollToTextRect:withScrollView:
_selectionChanged
_sentenceHighlightOverlapHeightArray
_sentenceHighlightView
_sentenceRects:speakingRange:
_showingLanguageChoices
_sliceRects:withSentenceRects:wordRects:
_stopSpeakingQuickSpeak:
_textSelectionViews
_updatedAccessibilityTextMenuWithMenuElements:
_updatedAccessibilityTextSpeechMenuWithMenu:
_updatedRangeForComposedCharacters:string:lastKnownWholeCharacterLocation:lastKnownUnicharLocation:
_viewsWithBlock:
_webTextRectsFromWKTextRects:
_willSpeakRange:string:
accessibilityQSSentenceRects
accessibilityQSWordRects
accessibilitySetQSSentenceRects:
accessibilitySetQSWordRects:
accessibilitySpeakSelectionSetContent:
actionWithTitle:image:identifier:handler:
activeTextEffectsWindowForWindowScene:
addHandler:forFramework:
addObject:
addObjectsFromArray:
addObserver:selector:name:object:
addSubview:
adjustedContentInset
ambiguousLangMaps
animateWithDuration:animations:completion:
array
arrayWithCapacity:
arrayWithObjects:
arrayWithObjects:count:
associatedAmbiguousLanguages
autocapitalizationType
autocorrectionType
autorelease
axSafelyAddObject:
axSafelyAddObjectsFromArray:
ax_sentenceFromPosition:inDirection:
balloonViewForChatItem:
baseWritingDirectionForPosition:inDirection:
beginFloatingCursorAtPoint:
beginningOfDocument
bounds
boundsForPage:
bundleIdentifier
cachedIdleTimerPref
callStackSymbols
canPerformAction:withSender:
caretRectForPosition:
characterOffsetOfPosition:withinRange:
characterRangeAtPoint:
characterRangeByExtendingPosition:inDirection:
children
class
clearSelectedContent
closestPositionToPoint:
closestPositionToPoint:withinRange:
collectionViewController
colorWithAlphaComponent:
colorWithCGColor:
colorWithRed:green:blue:alpha:
commandWithTitle:image:action:propertyList:
comparePosition:toPosition:
conformsToProtocol:
contentIsSpeakable
contentOffset
contentOwner
contentSize
convertRect:fromPage:
convertRect:toView:
count
countByEnumeratingWithState:objects:count:
currentInputModeInPreference
debugDescription
defaultCenter
defaultDialect
delegate
deleteBackward
description
dialectForCurrentLocale
dictationRecognitionFailed
dictationRecordingDidEnd
editMenuForTextRange:suggestedActions:
elementWithProvider:
enablesReturnKeyAutomatically
endFloatingCursor
endOfDocument
enumerateObjectsUsingBlock:
enumerateTagsInRange:scheme:options:usingBlock:
firstObject
firstRectForRange:
floatValue
frameForDictationResultPlaceholder:
generalLanguageID
getRed:green:blue:alpha:
hasTextBalloonView
hash
hiddenTextSelectionViewDelegates
hiddenTextSelectionViews
highlightView
highlightViewDispatcher
identifier
ignoreLogging
indexOfFirstCharacterOnPage:
indexOfObject:
init
initWithArray:
initWithFrame:
initWithTagSchemes:options:
initWithTargetSerialQueue:
initialize
inputDelegate
insertDictationResult:
insertDictationResultPlaceholder
insertObject:atIndex:
insertSubview:atIndex:
insertText:
insertText:alternatives:style:
insertTextPlaceholderWithSize:
installSafeCategory:canInteractWithTargetClass:
interactionAssistant
intersectsOrderedSet:
isEqual:
isEqualToString:
isHidden
isIdleTimerDisabled
isKindOfClass:
isMemberOfClass:
isPaused
isQuickSpeakSelector:
isSecureTextEntry
isShowingLanguageChoices
isSpeaking
isSubclassOfClass:
keyboardAppearance
keyboardType
labelColor
languageNameInNativeLocale
lastObject
layer
length
localizedStringForKey:value:table:
localizedStringWithFormat:
mainBundle
menuByReplacingChildren:
menuWithTitle:image:identifier:options:children:
modifiedRange:withString:
mutableCopy
numberWithFloat:
numberWithUnsignedInteger:
objectAtIndex:
offsetFromPosition:toPosition:
orator
orator:willSpeakRange:ofContent:
oratorDidCancelSpeaking:
oratorDidChangeSpeakingRate:
oratorDidFinishSpeaking:
oratorDidPauseSpeaking:
oratorDidResumeSpeaking:
oratorDidStartSpeaking:
oratorShouldFetchNextElements:shouldScrollOpaqueProviderIfNecessary:
orderedSet
pages
passwordRules
pauseAction:
pauseSpeaking:
paused
performCancelAnimationWithCompletion:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performValidations:withPreValidationHandler:postValidationHandler:safeCategoryInstallationHandler:
positionFromPosition:inDirection:offset:
positionFromPosition:offset:
positionWithinRange:atCharacterOffset:
positionWithinRange:farthestInDirection:
predictedSecondaryLangMaps
primaryAmbiguousDialect
primaryUnambiguousDialect
quickSpeakClassIsDenied:
quickSpeakHighlightOption
quickSpeakInitiator
quickSpeakSentenceHighlightColor
quickSpeakSentenceHighlightOption
quickSpeakWordHighlightColor
rangeOfComposedCharacterSequenceAtIndex:
rangeOfString:
rectValue
removeDictationResultPlaceholder:willInsertResult:
removeFromSuperview
removeLastObject
removeObjectAtIndex:
removeTextPlaceholder:
replaceRange:withText:
resetQuickSpeakForUnitTests
respondsToSelector:
restoreMenu
resumeAction:
retain
retainCount
returnKeyType
safeCategoryBaseClass
safeCategoryTargetClassName
safeStringForKey:
safeUnsignedIntegerForKey:
safeValueForKey:
selectedContentIsSpeakable
selectedContentRequiresUserChoice
selectedTextRange
selectionAffinity
selectionForRange:
selectionHighlightColor
selectionRectsForRange:
selectionsByLine
self
sentenceHighlightView
setAlpha:
setAttributedMarkedText:selectedRange:
setAutocapitalizationType:
setAutocorrectionType:
setAutoresizesSubviews:
setBaseWritingDirection:forRange:
setCachedIdleTimerPref:
setContent:
setContentOffset:animated:
setContentOwner:
setDebugBuild:
setDelegate:
setEnablesReturnKeyAutomatically:
setFrame:
setHasTextBalloonView:
setHidden:
setHiddenTextSelectionViewDelegates:
setHiddenTextSelectionViews:
setHighlightSelectionRects:
setHighlightView:
setHighlightViewDispatcher:
setIdleTimerDisabled:
setInputDelegate:
setKeyboardAppearance:
setKeyboardType:
setMarkedText:selectedRange:
setMarkedTextStyle:
setObject:atIndexedSubscript:
setOverrideProcessName:
setPasswordRules:
setPaused:
setQuickSpeakInitiator:
setReturnKeyType:
setSecureTextEntry:
setSelectable:
setSelectedTextRange:
setSelectionAffinity:
setSelectionColor:
setSentenceHighlight:
setSentenceHighlightView:
setShowingLanguageChoices:
setSmartDashesType:
setSmartInsertDeleteType:
setSmartQuotesType:
setSpeakingContext:
setSpeakingSentenceRange:
setSpellCheckingType:
setSpellOutContent:
setString:
setTextContentType:
setUnderlineColor:
setValidationTargetName:
setVisible:
setWithCapacity:
sharedInputModeController
sharedInstance
shouldChangeTextInRange:replacementText:
showingLanguageChoices
smartInsertDeleteType
speakAction:withPreferredLanguage:
speakStatusWithLanguage:rate:
speakingSentenceRange
specificLanguageID
spellCheckingType
start
startSpeakingWithPreferredLanguage:error:
stopAction:
stopSpeaking:
string
stringWithFormat:
sublayers
substringWithRange:
subviews
superclass
superview
systemImageNamed:
systemLanguageID
text
textInRange:
textInputView
textRangeFromPosition:toPosition:
textStylingAtPosition:inDirection:
tokenizer
unambiguousLangMaps
unionOrderedSet:
unmarkText
unpredictedAmbiguousLangMaps
updateFloatingCursorAtPoint:
validateClass:
validateClass:conformsToProtocol:
validateClass:hasClassMethod:withFullSignature:
validateClass:hasInstanceMethod:withFullSignature:
validateClass:hasInstanceVariable:withType:
validateClass:isKindOfClass:
valueWithCGRect:
valueWithRect:
willDismissEditMenuWithAnimator:
willPresentEditMenuWithAnimator:
window
windowScene
zone
@16@0:8
#16@0:8
v24@0:8@16
@24@0:8@16
v24@0:8@?16
B24@0:8@16
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
q16@0:8
v24@0:8q16
v20@0:8B16
v24@0:8@"NSString"16
@"UITextInputPasswordRules"16@0:8
v24@0:8@"UITextInputPasswordRules"16
v16@0:8
v32@0:8@16@24
v40@0:8@16{_NSRange=QQ}24
@32@0:8@16@24
@32@0:8@16q24
@40@0:8@16q24q32
q32@0:8@16@24
q32@0:8@16q24
v32@0:8q16@24
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16
@32@0:8{CGPoint=dd}16
@40@0:8{CGPoint=dd}16@32
B32@0:8@16@24
v28@0:8@16B24
v40@0:8@16@24q32
@32@0:8{CGSize=dd}16
v32@0:8{CGPoint=dd}16
@"NSString"24@0:8@"UITextRange"16
v32@0:8@"UITextRange"16@"NSString"24
v40@0:8@"NSString"16{_NSRange=QQ}24
@"UITextRange"32@0:8@"UITextPosition"16@"UITextPosition"24
@"UITextPosition"32@0:8@"UITextPosition"16q24
@"UITextPosition"40@0:8@"UITextPosition"16q24q32
q32@0:8@"UITextPosition"16@"UITextPosition"24
@"UITextPosition"32@0:8@"UITextRange"16q24
@"UITextRange"32@0:8@"UITextPosition"16q24
q32@0:8@"UITextPosition"16q24
v32@0:8q16@"UITextRange"24
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@"UITextRange"16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@"UITextPosition"16
@"NSArray"24@0:8@"UITextRange"16
@"UITextPosition"32@0:8{CGPoint=dd}16
@"UITextPosition"40@0:8{CGPoint=dd}16@"UITextRange"32
@"UITextRange"32@0:8{CGPoint=dd}16
@"UITextRange"16@0:8
v24@0:8@"UITextRange"16
@"NSDictionary"16@0:8
v24@0:8@"NSDictionary"16
@"UITextPosition"16@0:8
@"<UITextInputDelegate>"16@0:8
v24@0:8@"<UITextInputDelegate>"16
@"<UITextInputTokenizer>"16@0:8
B32@0:8@"UITextRange"16@"NSString"24
@"NSDictionary"32@0:8@"UITextPosition"16q24
q32@0:8@"UITextPosition"16@"UITextRange"24
v24@0:8@"NSArray"16
v40@0:8@"NSString"16@"NSArray"24q32
v40@0:8@"NSAttributedString"16{_NSRange=QQ}24
@"UITextPlaceholder"32@0:8{CGSize=dd}16
v24@0:8@"UITextPlaceholder"16
@"UIMenu"32@0:8@"UITextRange"16@"NSArray"24
v24@0:8@"<UIEditMenuInteractionAnimating>"16
@"UIView"16@0:8
v48@0:8@16{_NSRange=QQ}24@40
v24@0:8@"AXOrator"16
v48@0:8@"AXOrator"16{_NSRange=QQ}24@"NSString"40
v28@0:8@"AXOrator"16B24
@24@0:8@?16
v56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
{_NSRange=QQ}56@0:8{_NSRange=QQ}16@32Q40Q48
v40@0:8{_NSRange=QQ}16@32
{_NSRange=QQ}40@0:8{_NSRange=QQ}16@32
v72@0:8@16{_NSRange=QQ}24@40@48@56^{CGRect={CGPoint=dd}{CGSize=dd}}64
@40@0:8@16@24@32
v72@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32@64
{CGPoint="x"d"y"d}
@"AXOrator"
@"UITextRange"
@"QSSelectionHighlightView"
@"NSArray"
@"AXDispatchTimer"
v64@0:8{_NSRange=QQ}16@32@40@48^{CGRect={CGPoint=dd}{CGSize=dd}}56
B32@0:8:16@24
@48@0:8@16^{CGRect={CGPoint=dd}{CGSize=dd}}24@32@40
@48@0:8@16@24@32@40
@40@0:8q16q24@32
v40@0:8q16q24@32
v40@0:8@16q24q32
v48@0:8{_NSRange=QQ}16@32@40
CKChatController
_menuForChatItem:
CKCoreChatController
collectionViewController
CKTranscriptCollectionViewController
balloonViewForChatItem:
CKTextBalloonView
textView
CKBalloonChatItem
balloonViewClass
CKMessagePartChatItem
v8@?0
quickspeak.pause
quickspeak.speak
rectangle.3.group.bubble.left
v16@?0@"UIAction"8
CKFullScreenBalloonViewController
performCancelAnimationWithCompletion:
PLStackView
WAllPhotosAlbumViewController
WInteractiveNavigationControllerView
WInteractiveNavigationController
PKTextAttachmentDrawingView
Files.DOCItemCollectionViewController
com_apple_DocumentManager_Service.DOCItemCollectionViewController
v24@?0@8^B16
QuickSpeak
B16@?0@"AXValidationManager"8
UIColor
selectionHighlightColor
UICalloutBar
buttonPressed:
delegate
fade
hide
_targetForAction:
updateAvailableButtons
UICalloutBarButton
setPage:
UITextSelectionView
setVisible:
showSelectionCommands
m_extraItems
NSArray
m_currentSystemButtons
NSMutableArray
UITextInteraction
_textInput
_updatedAccessibilityTextMenuWithMenuElements:
NSObject_QSExtras
UIResponder_QSExtras
UITextField_QSExtrasAccessibility
CKBalloonTextView_QSExtras
CKFullScreenBalloonViewController_QSExtras
CKFullScreenBalloonViewControllerPhone_QSExtras
CKChatController_ClickyOrb_QSExtras
EKDayOccurrenceView
EKDayOccurrenceView_QSExtras
PUOneUpViewController
PUOneUpViewController_QSExtras
UITextInteraction_QSExtras
v16@?0@"AXValidationManager"8
QuickSpeak PDF
PDFView_QSExtras
PDFKit
QuickSpeak WebKit2
WKContentView_QSExtras
WKWebViewAccessibility_QSExtras
WebKit
UIWebView
_internal
UIWebViewInternal
browserView
UIWebBrowserView
QuickSpeak WebKit Legacy
UIWebView_QSExtras
UIWebBrowserView_QSExtras
UIApplicationLoadedWebKit
AXSpeakSelectionLastSpokenString
Received error trying to start speaking: %{public}@
Received error trying to pause speaking: %{public}@
Received error trying to resume speaking: %{public}@
v12@?0B8
v16@?0@"UIView"8
v32@?0@8Q16^B24
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/Source/QuickSpeak/QuickSpeak.m
-[AXQuickSpeak _viewsWithBlock:]
Only call this when highlight view is not nil
interactionAssistant
selectionView
B16@?0@"UIView"8
UISelectionGrabberDot
_accessibilitySpeakTextSelectionViews
_accessibilityQuickSpeakTokenizer
QS can't handle range speaking because this isn't UITextInput: %{public}@
no text rect available %{public}@
failed to make start[%{private}@] and end[%{private}@] position start:%{private}@, - start:%{private}@, length: %{private}@
WKContentView
SXCanvasView
TSDCanvasView
CKBalloonTextView
UITextView
text
NSObject
dialect
quickspeak.many.languages
& %@
%@ %@
v56@?0@"NSString"8{_NSRange=QQ}16{_NSRange=QQ}32^B48
Please stop calling _accessibilityQuickSpeakContentIsSpeakable: %{private}@
play
pause
quickspeak.one.nonambiguous.language
quickspeak.preferred.language
v16@?0@?<v@?@"NSArray">8
quickspeak.speak.languages
quickspeak.sentence
quickspeak.spell.out
UIResponder
UIWebDocumentView
UITextInputPrivate
occurrence
EKEvent
title
WKWebView
_currentContentView
selectedText
accessibilityRetrieveSpeakSelectionContent
WebSelectionRect
rect
{CGRect={CGPoint=dd}{CGSize=dd}}
_accessibilityRetrieveRectsEnclosingSelectionOffset:withGranularity:
_accessibilityRetrieveRectsAtSelectionOffset:withText:
_selectionChanged
_accessibilityStoreSelection
_accessibilityClearSelection
WKTextRange
selectedTextRange
selectedTextLength
AXSelectionRange
AXSpeakSelectionString
AXRetrievingContent
UITextRange
_accessibilityCacheContentIfNecessary
AXIsCachingContent
AXRetrievingRects
Caught exception while waiting for rects results... %@
PDFView
currentSelection
PDFPageLayerSelectionEffect
_private
PDFViewPrivate
scrollView
PDFScrollView
UIScrollView
pdfDocumentView
Got error making selection: %{private}@/%{private}@ %{private}@
PDFView will process range: %d, %d
PDFSelection
PDFView got the following ranges: %{private}@
PDFView got the following sentence ranges: %{private}@
UITextField
tokenizer
CKFullScreenBalloonViewControllerPhone
setBalloonView:
Will load QS safe categories for WebKit legacy now
WebKit legacy not loaded. Will load QS safe categories on demand
%{public}@
Secondary maps contained langs in non ambiguous maps. Secondary Maps: %@ Non-ambiguous Maps: %@
Will update AX speech items for UIMenu
Did update AX speech items for UIMenu: %@
WKContentView: will wait for speak selection content
WKContentView: Finish waiting for content. Context exists or not we are not supposed to show speak
WKContentView: Finish waiting for content. Already waiting
WKContentView: Finish waiting for content. Last retrieveal too soon
WKContentView: Caught exception while waiting for results: %@
WKContentView: Finish waiting for content. Got valued or timeout occurred
WebKit content setting AXSpeakSelectionString '%{private}@'
WebKit content requesting AXSpeakSelectionString: '%{private}@'
__CKChatController_ClickyOrb_QSExtras_super
SafeCategory
CKChatController_ClickyOrb_QSExtras
__CKFullScreenBalloonViewController_QSExtras_super
CKFullScreenBalloonViewController_QSExtras
QuickSpeakPriv
UITextInput
UIKeyInput
UITextInputTraits
NSObject
AXQuickSpeak
AXOratorDelegate
__CKBalloonTextView_QSExtras_super
CKBalloonTextView_QSExtras
__NSObject_QSExtras_super
NSObject_QSExtras
__UIWebView_QSExtras_super
UIWebView_QSExtras
__UITextInteraction_QSExtras_super
UITextInteraction_QSExtras
__UIResponder_QSExtras_super
UIResponder_QSExtras
__UIWebBrowserView_QSExtras_super
UIWebBrowserView_QSExtras
AXQSMenuHelper
__EKDayOccurrenceView_QSExtras_super
EKDayOccurrenceView_QSExtras
__PUOneUpViewController_QSExtras_super
PUOneUpViewController_QSExtras
__WKWebViewAccessibility_QSExtras_super
WKWebViewAccessibility_QSExtras
__WKContentView_QSExtras_super
WKContentView_QSExtras
__PDFView_QSExtras_super
PDFView_QSExtras
__UITextField_QSExtrasAccessibility_super
UITextField_QSExtrasAccessibility
__CKFullScreenBalloonViewControllerPhone_QSExtras_super
CKFullScreenBalloonViewControllerPhone_QSExtras
T@"AXLanguageTaggedContent",R,N
CGRectValue
_accessibilityQuickSpeakContent
T@"<UITextInputDelegate>",W,N
_paused
T@"AXDispatchTimer",&,N,V_highlightViewDispatcher
backgroundColor
T@"NSArray",&,N,V_hiddenTextSelectionDelegates
containsObject:
T@"NSDictionary",C,N
dealloc
T@"NSString",R,C
T@"QSSelectionHighlightView",&,N,V_sentenceHighlightView
isEmpty
T@"UITextPosition",R,N
isScrollEnabled
T@"UITextRange",C
markedTextRange
T@"UIView",R,N
primaryLanguage
T@,&,N,V_quickSpeakInitiator
removeObserver:
TB,D,N
secureTextEntry
TB,N,GisPaused,V_paused
setBalloonView:
TB,N,GisShowingLanguageChoices,V_showingLanguageChoices
smartQuotesType
TB,N,V_hasTextBalloonView
textContentType
.cxx_destruct
_accessibilityIsTextInteraction
T#,R
_orator
T@"<UITextInputTokenizer>",R,N
animateWithDuration:animations:
T@"AXOrator",R,N
bundleForClass:
T@"NSArray",&,N,V_hiddenTextSelectionViews
content
T@"NSString",C,N
dialect
T@"QSSelectionHighlightView",&,N,V_highlightView
hasText
T@"UITextInputPasswordRules",C,N
isProxy
T@"UITextRange",&,N,VspeakingSentenceRange
langMap
T@"UITextRange",R,N
markedTextStyle
T@,&,N,V_contentOwner
release
T@,R,N
resumeSpeaking:
TB,N
selectedContent
TB,N,GisSecureTextEntry
smartDashesType
TB,N,V_cachedIdleTimerPref
spellOutContent
TB,R,N
TQ,R
Tq,N
_accessibilityBoolValueForKey:
_accessibilityCacheContentIfNecessary
_accessibilityClearSelection
_accessibilityDidGetSelectionRects:withGranularity:atOffset:
_accessibilityHandleFinishSpeaking
_accessibilityIsTextInput
_accessibilityPauseSpeaking:
_accessibilityPerformValidations:
_accessibilityQScanPerformAction:withSender:
_accessibilityQuickSpeakContentIsSpeakable
_accessibilityQuickSpeakEnclosingSentence:
_accessibilityQuickSpeakTextRectsWithRange:string:highlightRects:sentenceRects:singleTextRect:
_accessibilityQuickSpeakTokenizer
_accessibilityRemoveValueForKey:
_accessibilityRetrieveRectsAtSelectionOffset:withText:
_accessibilityRetrieveRectsEnclosingSelectionOffset:withGranularity:
_accessibilityRetrieveRectsForGuanularity:atSelectionOffset:wordText:
_accessibilitySearchTextRangeFromRange:withString:selectedRange:
_accessibilitySentenceRectsForRange:
_accessibilitySetBoolValue:forKey:
_accessibilitySetRetainedValue:forKey:
_accessibilitySetValue:forKey:storageMode:
_accessibilityShouldShowPauseBubble
_accessibilityShouldShowSpeakBubble
_accessibilityShouldShowSpeakLanguageBubble
_accessibilityShouldShowSpeakSpellOut
_accessibilityShouldUpdateQuickSpeakContent
_accessibilitySpeak:
_accessibilitySpeakLanguageSelection:
_accessibilitySpeakSelectionAssociatedScrollView
_accessibilitySpeakSelectionTextInputResponder
_accessibilitySpeakSentence:
_accessibilitySpeakSpellOut:
_accessibilitySpeakTextSelectionViews
_accessibilitySpeakWithLanguage:
_accessibilityStoreSelection
_accessibilitySystemShouldShowPauseBubble
_accessibilitySystemShouldShowSpeakBubble
_accessibilitySystemShouldShowSpeakBubbleCommon
_accessibilitySystemShouldShowSpeakLanguageBubble
_accessibilitySystemShouldShowSpeakSentence
_accessibilitySystemShouldShowSpeakSpellOut
_accessibilityTextRectsForRange:singleTextRect:
_accessibilityTextRectsForRange:singleTextRect:selectedRange:string:
_accessibilityUITextInput
_accessibilityValueForKey:
_adjustedRange:withText:matchText:initiator:
_axActionForSpeakSelection:
_axContentView
_axConvertRange:toRects:operatingPage:
_axSelectedTextLength
_axWaitForSpeakSelectionContentResults
_axWaitForSpeakSelectionRectResultsForGuanularity:atSelectionOffset:wordText:
_cachedIdleTimerPref
_cleanupTextSelectionViews
_contentOwner
_currentSentenceRange
_handleAppDidEnterBackground:
_handleAppWillResignActive:
_handlePauseCallback
_handleQuickSpeakHighlight:sentenceRects:textRect:initiator:
_handleWebkitLegacyWasLoaded:
_hasTextBalloonView
_hiddenTextSelectionDelegates
_hiddenTextSelectionViews
_highlightView
_highlightViewDispatcher
_installWebKitLegacySafeCategories
_installWebKitLegacySafeCategoriesIfNeeded
_lastQuickSpeakOffset
_lastUnicharLocation
_lastWholeCharacterLocation
_manipulateOtherTextViews:
_menuForChatItem:
_quickSpeakInitiator
_quickSpeakInputInitiator
_quickSpeakTextRects:withRange:string:highlightRects:sentenceRects:singleTextRect:
_quickSpeakUITextInputTextRects:withRange:string:highlightRects:sentenceRects:singleTextRect:
_rangeStringMatch:wordText:
_rectsByUnionSamelineRects:
_scrollToTextRect:withScrollView:
_selectionChanged
_sentenceHighlightOverlapHeightArray
_sentenceHighlightView
_sentenceRects:speakingRange:
_showingLanguageChoices
_sliceRects:withSentenceRects:wordRects:
_stopSpeakingQuickSpeak:
_textSelectionViews
_updatedAccessibilityTextMenuWithMenuElements:
_updatedAccessibilityTextSpeechMenuWithMenu:
_updatedRangeForComposedCharacters:string:lastKnownWholeCharacterLocation:lastKnownUnicharLocation:
_viewsWithBlock:
_webTextRectsFromWKTextRects:
_willSpeakRange:string:
accessibilityQSSentenceRects
accessibilityQSWordRects
accessibilitySetQSSentenceRects:
accessibilitySetQSWordRects:
accessibilitySpeakSelectionSetContent:
actionWithTitle:image:identifier:handler:
activeTextEffectsWindowForWindowScene:
addHandler:forFramework:
addObject:
addObjectsFromArray:
addObserver:selector:name:object:
addSubview:
adjustedContentInset
ambiguousLangMaps
animateWithDuration:animations:completion:
array
arrayWithCapacity:
arrayWithObjects:
arrayWithObjects:count:
associatedAmbiguousLanguages
autocapitalizationType
autocorrectionType
autorelease
axSafelyAddObject:
axSafelyAddObjectsFromArray:
ax_sentenceFromPosition:inDirection:
balloonViewForChatItem:
baseWritingDirectionForPosition:inDirection:
beginFloatingCursorAtPoint:
beginningOfDocument
bounds
boundsForPage:
bundleIdentifier
cachedIdleTimerPref
callStackSymbols
canPerformAction:withSender:
caretRectForPosition:
characterOffsetOfPosition:withinRange:
characterRangeAtPoint:
characterRangeByExtendingPosition:inDirection:
children
class
clearSelectedContent
closestPositionToPoint:
closestPositionToPoint:withinRange:
collectionViewController
colorWithAlphaComponent:
colorWithCGColor:
colorWithRed:green:blue:alpha:
commandWithTitle:image:action:propertyList:
comparePosition:toPosition:
conformsToProtocol:
contentIsSpeakable
contentOffset
contentOwner
contentSize
convertRect:fromPage:
convertRect:toView:
count
countByEnumeratingWithState:objects:count:
currentInputModeInPreference
debugDescription
defaultCenter
defaultDialect
delegate
deleteBackward
description
dialectForCurrentLocale
dictationRecognitionFailed
dictationRecordingDidEnd
editMenuForTextRange:suggestedActions:
elementWithProvider:
enablesReturnKeyAutomatically
endFloatingCursor
endOfDocument
enumerateObjectsUsingBlock:
enumerateTagsInRange:scheme:options:usingBlock:
firstObject
firstRectForRange:
floatValue
frameForDictationResultPlaceholder:
generalLanguageID
getRed:green:blue:alpha:
hasTextBalloonView
hash
hiddenTextSelectionViewDelegates
hiddenTextSelectionViews
highlightView
highlightViewDispatcher
identifier
ignoreLogging
indexOfFirstCharacterOnPage:
indexOfObject:
init
initWithArray:
initWithFrame:
initWithTagSchemes:options:
initWithTargetSerialQueue:
initialize
inputDelegate
insertDictationResult:
insertDictationResultPlaceholder
insertObject:atIndex:
insertSubview:atIndex:
insertText:
insertText:alternatives:style:
insertTextPlaceholderWithSize:
installSafeCategory:canInteractWithTargetClass:
interactionAssistant
intersectsOrderedSet:
isEqual:
isEqualToString:
isHidden
isIdleTimerDisabled
isKindOfClass:
isMemberOfClass:
isPaused
isQuickSpeakSelector:
isSecureTextEntry
isShowingLanguageChoices
isSpeaking
isSubclassOfClass:
keyboardAppearance
keyboardType
labelColor
languageNameInNativeLocale
lastObject
layer
length
localizedStringForKey:value:table:
localizedStringWithFormat:
mainBundle
menuByReplacingChildren:
menuWithTitle:image:identifier:options:children:
modifiedRange:withString:
mutableCopy
numberWithFloat:
numberWithUnsignedInteger:
objectAtIndex:
offsetFromPosition:toPosition:
orator
orator:willSpeakRange:ofContent:
oratorDidCancelSpeaking:
oratorDidChangeSpeakingRate:
oratorDidFinishSpeaking:
oratorDidPauseSpeaking:
oratorDidResumeSpeaking:
oratorDidStartSpeaking:
oratorShouldFetchNextElements:shouldScrollOpaqueProviderIfNecessary:
orderedSet
pages
passwordRules
pauseAction:
pauseSpeaking:
paused
performCancelAnimationWithCompletion:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performValidations:withPreValidationHandler:postValidationHandler:safeCategoryInstallationHandler:
positionFromPosition:inDirection:offset:
positionFromPosition:offset:
positionWithinRange:atCharacterOffset:
positionWithinRange:farthestInDirection:
predictedSecondaryLangMaps
primaryAmbiguousDialect
primaryUnambiguousDialect
quickSpeakClassIsDenied:
quickSpeakHighlightOption
quickSpeakInitiator
quickSpeakSentenceHighlightColor
quickSpeakSentenceHighlightOption
quickSpeakWordHighlightColor
rangeOfComposedCharacterSequenceAtIndex:
rangeOfString:
rectValue
removeDictationResultPlaceholder:willInsertResult:
removeFromSuperview
removeLastObject
removeObjectAtIndex:
removeTextPlaceholder:
replaceRange:withText:
resetQuickSpeakForUnitTests
respondsToSelector:
restoreMenu
resumeAction:
retain
retainCount
returnKeyType
safeCategoryBaseClass
safeCategoryTargetClassName
safeStringForKey:
safeUnsignedIntegerForKey:
safeValueForKey:
selectedContentIsSpeakable
selectedContentRequiresUserChoice
selectedTextRange
selectionAffinity
selectionForRange:
selectionHighlightColor
selectionRectsForRange:
selectionsByLine
self
sentenceHighlightView
setAlpha:
setAttributedMarkedText:selectedRange:
setAutocapitalizationType:
setAutocorrectionType:
setAutoresizesSubviews:
setBaseWritingDirection:forRange:
setCachedIdleTimerPref:
setContent:
setContentOffset:animated:
setContentOwner:
setDebugBuild:
setDelegate:
setEnablesReturnKeyAutomatically:
setFrame:
setHasTextBalloonView:
setHidden:
setHiddenTextSelectionViewDelegates:
setHiddenTextSelectionViews:
setHighlightSelectionRects:
setHighlightView:
setHighlightViewDispatcher:
setIdleTimerDisabled:
setInputDelegate:
setKeyboardAppearance:
setKeyboardType:
setMarkedText:selectedRange:
setMarkedTextStyle:
setObject:atIndexedSubscript:
setOverrideProcessName:
setPasswordRules:
setPaused:
setQuickSpeakInitiator:
setReturnKeyType:
setSecureTextEntry:
setSelectable:
setSelectedTextRange:
setSelectionAffinity:
setSelectionColor:
setSentenceHighlight:
setSentenceHighlightView:
setShowingLanguageChoices:
setSmartDashesType:
setSmartInsertDeleteType:
setSmartQuotesType:
setSpeakingContext:
setSpeakingSentenceRange:
setSpellCheckingType:
setSpellOutContent:
setString:
setTextContentType:
setUnderlineColor:
setValidationTargetName:
setVisible:
setWithCapacity:
sharedInputModeController
sharedInstance
shouldChangeTextInRange:replacementText:
showingLanguageChoices
smartInsertDeleteType
speakAction:withPreferredLanguage:
speakStatusWithLanguage:rate:
speakingSentenceRange
specificLanguageID
spellCheckingType
start
startSpeakingWithPreferredLanguage:error:
stopAction:
stopSpeaking:
string
stringWithFormat:
sublayers
substringWithRange:
subviews
superclass
superview
systemImageNamed:
systemLanguageID
text
textInRange:
textInputView
textRangeFromPosition:toPosition:
textStylingAtPosition:inDirection:
tokenizer
unambiguousLangMaps
unionOrderedSet:
unmarkText
unpredictedAmbiguousLangMaps
updateFloatingCursorAtPoint:
validateClass:
validateClass:conformsToProtocol:
validateClass:hasClassMethod:withFullSignature:
validateClass:hasInstanceMethod:withFullSignature:
validateClass:hasInstanceVariable:withType:
validateClass:isKindOfClass:
valueWithCGRect:
valueWithRect:
willDismissEditMenuWithAnimator:
willPresentEditMenuWithAnimator:
window
windowScene
zone
@16@0:8
#16@0:8
v24@0:8@16
@24@0:8@16
v24@0:8@?16
B24@0:8@16
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
q16@0:8
v24@0:8q16
v20@0:8B16
v24@0:8@"NSString"16
@"UITextInputPasswordRules"16@0:8
v24@0:8@"UITextInputPasswordRules"16
v16@0:8
v32@0:8@16@24
v40@0:8@16{_NSRange=QQ}24
@32@0:8@16@24
@32@0:8@16q24
@40@0:8@16q24q32
q32@0:8@16@24
q32@0:8@16q24
v32@0:8q16@24
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16
@32@0:8{CGPoint=dd}16
@40@0:8{CGPoint=dd}16@32
B32@0:8@16@24
v28@0:8@16B24
v40@0:8@16@24q32
@32@0:8{CGSize=dd}16
v32@0:8{CGPoint=dd}16
@"NSString"24@0:8@"UITextRange"16
v32@0:8@"UITextRange"16@"NSString"24
v40@0:8@"NSString"16{_NSRange=QQ}24
@"UITextRange"32@0:8@"UITextPosition"16@"UITextPosition"24
@"UITextPosition"32@0:8@"UITextPosition"16q24
@"UITextPosition"40@0:8@"UITextPosition"16q24q32
q32@0:8@"UITextPosition"16@"UITextPosition"24
@"UITextPosition"32@0:8@"UITextRange"16q24
@"UITextRange"32@0:8@"UITextPosition"16q24
q32@0:8@"UITextPosition"16q24
v32@0:8q16@"UITextRange"24
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@"UITextRange"16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@"UITextPosition"16
@"NSArray"24@0:8@"UITextRange"16
@"UITextPosition"32@0:8{CGPoint=dd}16
@"UITextPosition"40@0:8{CGPoint=dd}16@"UITextRange"32
@"UITextRange"32@0:8{CGPoint=dd}16
@"UITextRange"16@0:8
v24@0:8@"UITextRange"16
@"NSDictionary"16@0:8
v24@0:8@"NSDictionary"16
@"UITextPosition"16@0:8
@"<UITextInputDelegate>"16@0:8
v24@0:8@"<UITextInputDelegate>"16
@"<UITextInputTokenizer>"16@0:8
B32@0:8@"UITextRange"16@"NSString"24
@"NSDictionary"32@0:8@"UITextPosition"16q24
q32@0:8@"UITextPosition"16@"UITextRange"24
v24@0:8@"NSArray"16
v40@0:8@"NSString"16@"NSArray"24q32
v40@0:8@"NSAttributedString"16{_NSRange=QQ}24
@"UITextPlaceholder"32@0:8{CGSize=dd}16
v24@0:8@"UITextPlaceholder"16
@"UIMenu"32@0:8@"UITextRange"16@"NSArray"24
v24@0:8@"<UIEditMenuInteractionAnimating>"16
@"UIView"16@0:8
v48@0:8@16{_NSRange=QQ}24@40
v24@0:8@"AXOrator"16
v48@0:8@"AXOrator"16{_NSRange=QQ}24@"NSString"40
v28@0:8@"AXOrator"16B24
@24@0:8@?16
v56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
{_NSRange=QQ}56@0:8{_NSRange=QQ}16@32Q40Q48
v40@0:8{_NSRange=QQ}16@32
{_NSRange=QQ}40@0:8{_NSRange=QQ}16@32
v72@0:8@16{_NSRange=QQ}24@40@48@56^{CGRect={CGPoint=dd}{CGSize=dd}}64
@40@0:8@16@24@32
v72@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32@64
{CGPoint="x"d"y"d}
@"AXOrator"
@"UITextRange"
@"QSSelectionHighlightView"
@"NSArray"
@"AXDispatchTimer"
v64@0:8{_NSRange=QQ}16@32@40@48^{CGRect={CGPoint=dd}{CGSize=dd}}56
B32@0:8:16@24
@48@0:8@16^{CGRect={CGPoint=dd}{CGSize=dd}}24@32@40
@48@0:8@16@24@32@40
@40@0:8q16q24@32
v40@0:8q16q24@32
v40@0:8@16q24q32
v48@0:8{_NSRange=QQ}16@32@40
