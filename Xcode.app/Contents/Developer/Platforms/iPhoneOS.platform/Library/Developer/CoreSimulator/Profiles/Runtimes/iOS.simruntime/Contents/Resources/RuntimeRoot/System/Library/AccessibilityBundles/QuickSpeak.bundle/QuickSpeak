CKChatController
_menuForChatItem:
CKCoreChatController
collectionViewController
CKTranscriptCollectionViewController
balloonViewForChatItem:
CKTextBalloonView
textView
CKBalloonChatItem
balloonViewClass
CKMessagePartChatItem
v8@?0
quickspeak.pause
quickspeak.speak
rectangle.3.group.bubble.left
v16@?0@"UIAction"8
CKFullScreenBalloonViewController
performCancelAnimationWithCompletion:
QuickSpeak.quickspeakbundle
PLStackView
WAllPhotosAlbumViewController
WInteractiveNavigationControllerView
WInteractiveNavigationController
PKTextAttachmentDrawingView
Files.DOCItemCollectionViewController
com_apple_DocumentManager_Service.DOCItemCollectionViewController
v24@?0@8^B16
QuickSpeak
B16@?0@"AXValidationManager"8
UIColor
selectionHighlightColor
UICalloutBar
buttonPressed:
delegate
fade
hide
_targetForAction:
updateAvailableButtons
UICalloutBarButton
setPage:
UITextSelectionView
setVisible:
showSelectionCommands
m_extraItems
NSArray
m_currentSystemButtons
NSMutableArray
UIWebView
_internal
UIWebViewInternal
browserView
UIWebBrowserView
UITextInteraction
_textInput
_updatedAccessibilityTextMenuWithMenuElements:
NSObject_QSExtras
UIResponder_QSExtras
UICalloutBar_QSExtras
UITextField_QSExtrasAccessibility
CKBalloonTextView_QSExtras
CKFullScreenBalloonViewController_QSExtras
CKFullScreenBalloonViewControllerPhone_QSExtras
CKChatController_ClickyOrb_QSExtras
PUOneUpViewController
PUOneUpViewController_QSExtras
UITextInteraction_QSExtras
v16@?0@"AXValidationManager"8
QuickSpeak PDF
PDFView_QSExtras
PDFKit
QuickSpeak WebKit2
WKContentView_QSExtras
WKWebViewAccessibility_QSExtras
WebKit
QuickSpeak WebKit Legacy
UIWebView_QSExtras
UIWebBrowserView_QSExtras
UIApplicationLoadedWebKit
AXSpeakSelectionLastSpokenString
Received error trying to start speaking: %{public}@
Received error trying to pause speaking: %{public}@
Received error trying to resume speaking: %{public}@
v12@?0B8
v16@?0@"UIView"8
v32@?0@8Q16^B24
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/Source/QuickSpeak/QuickSpeak.m
-[AXQuickSpeak _viewsWithBlock:]
Only call this when highlight view is not nil
interactionAssistant
selectionView
B16@?0@"UIView"8
UISelectionGrabberDot
_accessibilitySpeakTextSelectionViews
_accessibilityQuickSpeakTokenizer
QS can't handle range speaking because this isn't UITextInput: %{public}@
no text rect available %{public}@
failed to make start[%{private}@] and end[%{private}@] position start:%{private}@, - start:%{private}@, length: %{private}@
WKContentView
SXCanvasView
TSDCanvasView
CKBalloonTextView
UITextView
text
NSObject
dialect
quickspeak.many.languages
& %@
%@ %@
v56@?0@"NSString"8{_NSRange=QQ}16{_NSRange=QQ}32^B48
Please stop calling _accessibilityQuickSpeakContentIsSpeakable: %{private}@
play
pause
quickspeak.one.nonambiguous.language
quickspeak.preferred.language
v16@?0@?<v@?@"NSArray">8
quickspeak.speak.languages
quickspeak.sentence
quickspeak.spell.out
UIResponder
UIWebDocumentView
UITextInputPrivate
initWithFrame:
{CGRect={CGPoint=dd}{CGSize=dd}}
_UICalloutBarSystemButtonDescription
buttonDescriptionWithTitle: action: type:
m_extraButtons
_accessibility
copy:
WKWebView
_currentContentView
selectedText
accessibilityRetrieveSpeakSelectionContent
WebSelectionRect
rect
_accessibilityRetrieveRectsEnclosingSelectionOffset:withGranularity:
_accessibilityRetrieveRectsAtSelectionOffset:withText:
_selectionChanged
_accessibilityStoreSelection
_accessibilityClearSelection
WKTextRange
selectedTextRange
selectedTextLength
AXSelectionRange
AXSpeakSelectionString
AXRetrievingContent
Caught exception while waiting for results... %@
UITextRange
_accessibilityCacheContentIfNecessary
AXRetrievingRects
Caught exception while waiting for rects results... %@
QSMenuButton<%p>. action:%@. dialect:%@
PDFView
currentSelection
PDFPageLayerSelectionEffect
_private
PDFViewPrivate
scrollView
PDFScrollView
UIScrollView
pdfDocumentView
Got error making selection: %{private}@/%{private}@ %{private}@
PDFView will process range: %d, %d
PDFSelection
PDFView got the following ranges: %{private}@
PDFView got the following sentence ranges: %{private}@
UITextField
tokenizer
CKFullScreenBalloonViewControllerPhone
setBalloonView:
Will load QS safe categories for WebKit legacy now
WebKit legacy not loaded. Will load QS safe categories on demand
Secondary maps contained langs in non ambiguous maps. Secondary Maps: %@ Non-ambiguous Maps: %@
%{public}@
__CKChatController_ClickyOrb_QSExtras_super
SafeCategory
CKChatController_ClickyOrb_QSExtras
__CKFullScreenBalloonViewController_QSExtras_super
CKFullScreenBalloonViewController_QSExtras
QuickSpeakPriv
UITextInput
UIKeyInput
UITextInputTraits
NSObject
AXQuickSpeak
AXOratorDelegate
__CKBalloonTextView_QSExtras_super
CKBalloonTextView_QSExtras
__NSObject_QSExtras_super
NSObject_QSExtras
__UIWebView_QSExtras_super
UIWebView_QSExtras
__UITextInteraction_QSExtras_super
UITextInteraction_QSExtras
__UIResponder_QSExtras_super
UIResponder_QSExtras
__UIWebBrowserView_QSExtras_super
UIWebBrowserView_QSExtras
__UICalloutBar_QSExtras_super
UICalloutBar_QSExtras
AXQSMenuHelper
__PUOneUpViewController_QSExtras_super
PUOneUpViewController_QSExtras
__WKWebViewAccessibility_QSExtras_super
WKWebViewAccessibility_QSExtras
__WKContentView_QSExtras_super
WKContentView_QSExtras
QuickSpeakLanguageMenuItem
__PDFView_QSExtras_super
PDFView_QSExtras
__UITextField_QSExtrasAccessibility_super
UITextField_QSExtrasAccessibility
__CKFullScreenBalloonViewControllerPhone_QSExtras_super
CKFullScreenBalloonViewControllerPhone_QSExtras
safeCategoryTargetClassName
safeCategoryBaseClass
validateClass:hasInstanceMethod:withFullSignature:
validateClass:isKindOfClass:
validateClass:
_menuForChatItem:
children
count
safeValueForKey:
isSubclassOfClass:
collectionViewController
balloonViewForChatItem:
_axActionForSpeakSelection:
mutableCopy
insertObject:atIndex:
menuByReplacingChildren:
sharedInstance
isSpeaking
systemImageNamed:
setSelectable:
_accessibilityPauseSpeaking:
_accessibilitySpeak:
actionWithTitle:image:identifier:handler:
_accessibilityPerformValidations:
performCancelAnimationWithCompletion:
setContent:
_accessibilitySpeakSelectionAssociatedScrollView
setDelegate:
orator
content
setPaused:
selectedContent
setSpellOutContent:
spellOutContent
setWithCapacity:
arrayWithObjects:
countByEnumeratingWithState:objects:count:
addObject:
enumerateObjectsUsingBlock:
_accessibilitySpeakLanguageSelection:
_accessibilitySpeakWithLanguage:
_accessibilitySpeakSentence:
_accessibilitySpeakSpellOut:
bundleForClass:
localizedStringForKey:value:table:
init
validateClass:hasClassMethod:withFullSignature:
validateClass:hasInstanceVariable:withType:
setValidationTargetName:
setOverrideProcessName:
setDebugBuild:
installSafeCategory:canInteractWithTargetClass:
_installWebKitLegacySafeCategoriesIfNeeded
performValidations:withPreValidationHandler:postValidationHandler:safeCategoryInstallationHandler:
addHandler:forFramework:
defaultCenter
_handleAppDidEnterBackground:
addObserver:selector:name:object:
_handleAppWillResignActive:
_stopSpeakingQuickSpeak:
removeObserver:
sentenceHighlightView
removeFromSuperview
highlightView
dealloc
_installWebKitLegacySafeCategories
_handleWebkitLegacyWasLoaded:
clearSelectedContent
stopAction:
isPaused
resumeAction:
_accessibilitySetRetainedValue:forKey:
setSpeakingContext:
startSpeakingWithPreferredLanguage:error:
setQuickSpeakInitiator:
quickSpeakInitiator
_accessibilitySpeakSelectionTextInputResponder
_accessibilityStoreSelection
isIdleTimerDisabled
setCachedIdleTimerPref:
setIdleTimerDisabled:
sharedCalloutBar
update
ignoreLogging
identifier
pauseSpeaking:
resumeSpeaking:
stopSpeaking:
setAlpha:
_manipulateOtherTextViews:
_accessibilityClearSelection
setContentOwner:
speakingSentenceRange
setSpeakingSentenceRange:
setHighlightView:
setSentenceHighlightView:
animateWithDuration:animations:completion:
visible
appear
setVisible:
setHidden:
_textSelectionViews
setHiddenTextSelectionViews:
array
hiddenTextSelectionViews
delegate
setHiddenTextSelectionViewDelegates:
window
subviews
initWithArray:
windowScene
activeTextEffectsWindowForWindowScene:
addObjectsFromArray:
lastObject
removeLastObject
superview
interactionAssistant
_viewsWithBlock:
_quickSpeakInputInitiator
_accessibilitySpeakTextSelectionViews
_updateCalloutBar
cachedIdleTimerPref
_cleanupTextSelectionViews
isHidden
isScrollEnabled
contentOffset
bounds
adjustedContentInset
contentSize
setContentOffset:animated:
rangeOfComposedCharacterSequenceAtIndex:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
autocapitalizationType
setAutocapitalizationType:
autocorrectionType
setAutocorrectionType:
spellCheckingType
setSpellCheckingType:
smartQuotesType
setSmartQuotesType:
smartDashesType
setSmartDashesType:
smartInsertDeleteType
setSmartInsertDeleteType:
keyboardType
setKeyboardType:
keyboardAppearance
setKeyboardAppearance:
returnKeyType
setReturnKeyType:
enablesReturnKeyAutomatically
setEnablesReturnKeyAutomatically:
isSecureTextEntry
setSecureTextEntry:
textContentType
setTextContentType:
passwordRules
setPasswordRules:
Tq,N
TB,N
secureTextEntry
TB,N,GisSecureTextEntry
T@"NSString",C,N
T@"UITextInputPasswordRules",C,N
insertText:
deleteBackward
hasText
TB,R,N
textInRange:
replaceRange:withText:
setMarkedText:selectedRange:
unmarkText
textRangeFromPosition:toPosition:
positionFromPosition:offset:
positionFromPosition:inDirection:offset:
comparePosition:toPosition:
offsetFromPosition:toPosition:
positionWithinRange:farthestInDirection:
characterRangeByExtendingPosition:inDirection:
baseWritingDirectionForPosition:inDirection:
setBaseWritingDirection:forRange:
firstRectForRange:
caretRectForPosition:
selectionRectsForRange:
closestPositionToPoint:
closestPositionToPoint:withinRange:
characterRangeAtPoint:
selectedTextRange
setSelectedTextRange:
markedTextRange
markedTextStyle
setMarkedTextStyle:
beginningOfDocument
endOfDocument
inputDelegate
setInputDelegate:
tokenizer
shouldChangeTextInRange:replacementText:
textStylingAtPosition:inDirection:
positionWithinRange:atCharacterOffset:
characterOffsetOfPosition:withinRange:
insertDictationResult:
dictationRecordingDidEnd
dictationRecognitionFailed
frameForDictationResultPlaceholder:
removeDictationResultPlaceholder:willInsertResult:
insertText:alternatives:style:
setAttributedMarkedText:selectedRange:
insertTextPlaceholderWithSize:
removeTextPlaceholder:
beginFloatingCursorAtPoint:
updateFloatingCursorAtPoint:
endFloatingCursor
editMenuForTextRange:suggestedActions:
textInputView
selectionAffinity
setSelectionAffinity:
insertDictationResultPlaceholder
T@"UITextRange",C
T@"UITextRange",R,N
T@"NSDictionary",C,N
T@"UITextPosition",R,N
T@"<UITextInputDelegate>",W,N
T@"<UITextInputTokenizer>",R,N
T@"UIView",R,N
T@,R,N
contentOwner
CGRectValue
_accessibilitySentenceRectsForRange:
objectAtIndex:
rectValue
numberWithFloat:
_accessibilityRetrieveRectsForGuanularity:atSelectionOffset:wordText:
_quickSpeakTextRects:withRange:string:highlightRects:sentenceRects:singleTextRect:
_quickSpeakUITextInputTextRects:withRange:string:highlightRects:sentenceRects:singleTextRect:
_accessibilityQuickSpeakTextRectsWithRange:string:highlightRects:sentenceRects:singleTextRect:
_handleQuickSpeakHighlight:sentenceRects:textRect:initiator:
_updatedRangeForComposedCharacters:string:lastKnownWholeCharacterLocation:lastKnownUnicharLocation:
modifiedRange:withString:
substringWithRange:
_rectsByUnionSamelineRects:
axSafelyAddObjectsFromArray:
firstObject
start
numberWithUnsignedInteger:
_accessibilityTextRectsForRange:singleTextRect:selectedRange:string:
_accessibilityTextRectsForRange:singleTextRect:
_sentenceRects:speakingRange:
valueWithCGRect:
valueWithRect:
convertRect:toView:
_scrollToTextRect:withScrollView:
_sentenceHighlightOverlapHeightArray
quickSpeakSentenceHighlightOption
indexOfObject:
floatValue
quickSpeakHighlightOption
_sliceRects:withSentenceRects:wordRects:
mainBundle
bundleIdentifier
isEqualToString:
initWithFrame:
quickSpeakWordHighlightColor
selectionHighlightColor
getRed:green:blue:alpha:
colorWithRed:green:blue:alpha:
colorWithCGColor:
quickSpeakSentenceHighlightColor
colorWithAlphaComponent:
setSelectionColor:
setSentenceHighlight:
setUnderlineColor:
labelColor
backgroundColor
addSubview:
insertSubview:atIndex:
setFrame:
setAutoresizesSubviews:
animateWithDuration:animations:
setHighlightSelectionRects:
speakStatusWithLanguage:rate:
contentIsSpeakable
systemLanguageID
predictedSecondaryLangMaps
unpredictedAmbiguousLangMaps
ambiguousLangMaps
generalLanguageID
associatedAmbiguousLanguages
containsObject:
_accessibilityHandleFinishSpeaking
_handlePauseCallback
highlightViewDispatcher
initWithTargetSerialQueue:
setHighlightViewDispatcher:
_willSpeakRange:string:
quickSpeakClassIsDenied:
isQuickSpeakSelector:
initialize
oratorDidStartSpeaking:
oratorDidFinishSpeaking:
oratorDidPauseSpeaking:
oratorDidResumeSpeaking:
oratorDidCancelSpeaking:
orator:willSpeakRange:ofContent:
oratorShouldFetchNextElements:shouldScrollOpaqueProviderIfNecessary:
oratorDidChangeSpeakingRate:
resetQuickSpeakForUnitTests
speakAction:withPreferredLanguage:
pauseAction:
selectedContentIsSpeakable
selectedContentRequiresUserChoice
hiddenTextSelectionViewDelegates
hasTextBalloonView
setHasTextBalloonView:
.cxx_destruct
_lastQuickSpeakOffset
_orator
_lastWholeCharacterLocation
_lastUnicharLocation
_currentSentenceRange
_cachedIdleTimerPref
_paused
_hasTextBalloonView
_quickSpeakInitiator
_highlightView
_hiddenTextSelectionViews
_sentenceHighlightView
_hiddenTextSelectionDelegates
_highlightViewDispatcher
_contentOwner
T@"AXOrator",R,N
TB,N,V_cachedIdleTimerPref
paused
TB,N,GisPaused,V_paused
T@,&,N,V_quickSpeakInitiator
T@"AXDispatchTimer",&,N,V_highlightViewDispatcher
T@"NSArray",&,N,V_hiddenTextSelectionViews
T@"NSArray",&,N,V_hiddenTextSelectionDelegates
T@,&,N,V_contentOwner
T@"UITextRange",&,N,VspeakingSentenceRange
TB,D,N
T@"AXLanguageTaggedContent",R,N
TB,N,V_hasTextBalloonView
T@"QSSelectionHighlightView",&,N,V_highlightView
T@"QSSelectionHighlightView",&,N,V_sentenceHighlightView
text
_accessibilityQuickSpeakContent
_accessibilityIsTextInput
_accessibilityIsTextInteraction
length
_accessibilityCacheContentIfNecessary
dialect
restoreMenu
specificLanguageID
menuItemForCalloutBarButton:
sharedInputModeController
currentInputModeInPreference
primaryLanguage
_accessibilityQuickSpeakEnclosingSentence:
unambiguousLangMaps
localizedStringWithFormat:
defaultDialect
languageNameInNativeLocale
stringWithFormat:
intersectsOrderedSet:
orderedSet
unionOrderedSet:
primaryUnambiguousDialect
langMap
primaryAmbiguousDialect
arrayWithObjects:count:
dialectForCurrentLocale
initWithTitle:action:
setDialect:
setDontDismiss:
sharedMenuController
menuItems
saveThirdPartyMenuItemsIfNeeded:
setShowingLanguageChoices:
setMenuItems:
isShowingLanguageChoices
_accessibilityShouldUpdateQuickSpeakContent
_accessibilitySystemShouldShowSpeakSpellOut
_accessibilitySystemShouldShowSpeakBubbleCommon
initWithTagSchemes:options:
setString:
enumerateTagsInRange:scheme:options:usingBlock:
_accessibilitySystemShouldShowSpeakBubble
_accessibilityShouldShowSpeakBubble
_accessibilitySystemShouldShowSpeakSentence
_accessibilityShouldShowSpeakSpellOut
_accessibilityShouldShowSpeakLanguageBubble
_accessibilitySystemShouldShowSpeakLanguageBubble
_accessibilitySystemShouldShowPauseBubble
_accessibilityShouldShowPauseBubble
callStackSymbols
_accessibilityQScanPerformAction:withSender:
_accessibilityQuickSpeakContentIsSpeakable
commandWithTitle:image:action:propertyList:
elementWithProvider:
menuWithTitle:image:identifier:options:children:
_updatedAccessibilityTextMenuWithMenuElements:
_updatedAccessibilityTextSpeechMenuWithMenu:
setObject:atIndexedSubscript:
canPerformAction:withSender:
validateClass:conformsToProtocol:
_accessibilitySearchTextRangeFromRange:withString:selectedRange:
_rangeStringMatch:wordText:
_adjustedRange:withText:matchText:initiator:
rangeOfString:
fade
hide
action
hasPrefix:
valueForKey:
setValue:forKey:
buttonPressed:
updateAvailableButtons
safeArrayForKey:
setHighlighted:
setPage:
_accessibilityAddSpeakItemToExtras:selector:
_axSystemButtonsContainsLanguageChoices:
_axHideSpeakButtonFromSystemButtons:
axSafelyAddObject:
safeIvarForKey:
copy
thirdPartyMenuItems
menuController
setThirdPartyMenuItems:
calloutBar
_showingLanguageChoices
_thirdPartyMenuItems
T@"NSArray",&,N,V_thirdPartyMenuItems
T@"UIMenuController",R,N
T@"UICalloutBar",R,N
showingLanguageChoices
TB,N,GisShowingLanguageChoices,V_showingLanguageChoices
_axContentView
_axWaitForSpeakSelectionContentResults
_selectionChanged
_accessibilityValueForKey:
_accessibilitySetValue:forKey:storageMode:
_accessibilityRemoveValueForKey:
_axSelectedTextLength
_accessibilityBoolValueForKey:
_accessibilitySetBoolValue:forKey:
isEmpty
arrayWithCapacity:
_axWaitForSpeakSelectionRectResultsForGuanularity:atSelectionOffset:wordText:
accessibilityQSSentenceRects
accessibilityQSWordRects
accessibilitySetQSWordRects:
_accessibilityRetrieveRectsAtSelectionOffset:withText:
_accessibilityRetrieveRectsEnclosingSelectionOffset:withGranularity:
_webTextRectsFromWKTextRects:
accessibilitySetQSSentenceRects:
safeUnsignedIntegerForKey:
accessibilitySpeakSelectionSetContent:
_accessibilityDidGetSelectionRects:withGranularity:atOffset:
accessibilityLanguage
_dialect
T@"AXDialectMap",&,N,V_dialect
layer
sublayers
removeObjectAtIndex:
selectionForRange:
selectionsByLine
boundsForPage:
convertRect:fromPage:
string
pages
indexOfFirstCharacterOnPage:
_axConvertRange:toRects:operatingPage:
ax_sentenceFromPosition:inDirection:
_accessibilityQuickSpeakTokenizer
setBalloonView:
@16@0:8
#16@0:8
v24@0:8@16
@24@0:8@16
v24@0:8@?16
B24@0:8@16
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
q16@0:8
v24@0:8q16
v20@0:8B16
v24@0:8@"NSString"16
@"UITextInputPasswordRules"16@0:8
v24@0:8@"UITextInputPasswordRules"16
v16@0:8
v32@0:8@16@24
v40@0:8@16{_NSRange=QQ}24
@32@0:8@16@24
@32@0:8@16q24
@40@0:8@16q24q32
q32@0:8@16@24
q32@0:8@16q24
v32@0:8q16@24
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16
@32@0:8{CGPoint=dd}16
@40@0:8{CGPoint=dd}16@32
B32@0:8@16@24
v28@0:8@16B24
v40@0:8@16@24q32
@32@0:8{CGSize=dd}16
v32@0:8{CGPoint=dd}16
@"NSString"24@0:8@"UITextRange"16
v32@0:8@"UITextRange"16@"NSString"24
v40@0:8@"NSString"16{_NSRange=QQ}24
@"UITextRange"32@0:8@"UITextPosition"16@"UITextPosition"24
@"UITextPosition"32@0:8@"UITextPosition"16q24
@"UITextPosition"40@0:8@"UITextPosition"16q24q32
q32@0:8@"UITextPosition"16@"UITextPosition"24
@"UITextPosition"32@0:8@"UITextRange"16q24
@"UITextRange"32@0:8@"UITextPosition"16q24
q32@0:8@"UITextPosition"16q24
v32@0:8q16@"UITextRange"24
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@"UITextRange"16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@"UITextPosition"16
@"NSArray"24@0:8@"UITextRange"16
@"UITextPosition"32@0:8{CGPoint=dd}16
@"UITextPosition"40@0:8{CGPoint=dd}16@"UITextRange"32
@"UITextRange"32@0:8{CGPoint=dd}16
@"UITextRange"16@0:8
v24@0:8@"UITextRange"16
@"NSDictionary"16@0:8
v24@0:8@"NSDictionary"16
@"UITextPosition"16@0:8
@"<UITextInputDelegate>"16@0:8
v24@0:8@"<UITextInputDelegate>"16
@"<UITextInputTokenizer>"16@0:8
B32@0:8@"UITextRange"16@"NSString"24
@"NSDictionary"32@0:8@"UITextPosition"16q24
q32@0:8@"UITextPosition"16@"UITextRange"24
v24@0:8@"NSArray"16
v40@0:8@"NSString"16@"NSArray"24q32
v40@0:8@"NSAttributedString"16{_NSRange=QQ}24
@"UITextPlaceholder"32@0:8{CGSize=dd}16
v24@0:8@"UITextPlaceholder"16
@"UIMenu"32@0:8@"UITextRange"16@"NSArray"24
@"UIView"16@0:8
v48@0:8@16{_NSRange=QQ}24@40
v24@0:8@"AXOrator"16
v48@0:8@"AXOrator"16{_NSRange=QQ}24@"NSString"40
v28@0:8@"AXOrator"16B24
@24@0:8@?16
v56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
{_NSRange=QQ}56@0:8{_NSRange=QQ}16@32Q40Q48
v40@0:8{_NSRange=QQ}16@32
{_NSRange=QQ}40@0:8{_NSRange=QQ}16@32
v72@0:8@16{_NSRange=QQ}24@40@48@56^{CGRect={CGPoint=dd}{CGSize=dd}}64
@40@0:8@16@24@32
v72@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32@64
{CGPoint="x"d"y"d}
@"AXOrator"
@"UITextRange"
@"QSSelectionHighlightView"
@"NSArray"
@"AXDispatchTimer"
v64@0:8{_NSRange=QQ}16@32@40@48^{CGRect={CGPoint=dd}{CGSize=dd}}56
B32@0:8:16@24
@48@0:8@16^{CGRect={CGPoint=dd}{CGSize=dd}}24@32@40
@48@0:8@16@24@32@40
v32@0:8@16:24
@40@0:8q16q24@32
v40@0:8q16q24@32
v40@0:8@16q24q32
@"AXDialectMap"
v48@0:8{_NSRange=QQ}16@32@40
CKChatController
_menuForChatItem:
CKCoreChatController
collectionViewController
CKTranscriptCollectionViewController
balloonViewForChatItem:
CKTextBalloonView
textView
CKBalloonChatItem
balloonViewClass
CKMessagePartChatItem
v8@?0
quickspeak.pause
quickspeak.speak
rectangle.3.group.bubble.left
v16@?0@"UIAction"8
CKFullScreenBalloonViewController
performCancelAnimationWithCompletion:
QuickSpeak.quickspeakbundle
PLStackView
WAllPhotosAlbumViewController
WInteractiveNavigationControllerView
WInteractiveNavigationController
PKTextAttachmentDrawingView
Files.DOCItemCollectionViewController
com_apple_DocumentManager_Service.DOCItemCollectionViewController
v24@?0@8^B16
QuickSpeak
B16@?0@"AXValidationManager"8
UIColor
selectionHighlightColor
UICalloutBar
buttonPressed:
delegate
fade
hide
_targetForAction:
updateAvailableButtons
UICalloutBarButton
setPage:
UITextSelectionView
setVisible:
showSelectionCommands
m_extraItems
NSArray
m_currentSystemButtons
NSMutableArray
UIWebView
_internal
UIWebViewInternal
browserView
UIWebBrowserView
UITextInteraction
_textInput
_updatedAccessibilityTextMenuWithMenuElements:
NSObject_QSExtras
UIResponder_QSExtras
UICalloutBar_QSExtras
UITextField_QSExtrasAccessibility
CKBalloonTextView_QSExtras
CKFullScreenBalloonViewController_QSExtras
CKFullScreenBalloonViewControllerPhone_QSExtras
CKChatController_ClickyOrb_QSExtras
PUOneUpViewController
PUOneUpViewController_QSExtras
UITextInteraction_QSExtras
v16@?0@"AXValidationManager"8
QuickSpeak PDF
PDFView_QSExtras
PDFKit
QuickSpeak WebKit2
WKContentView_QSExtras
WKWebViewAccessibility_QSExtras
WebKit
QuickSpeak WebKit Legacy
UIWebView_QSExtras
UIWebBrowserView_QSExtras
UIApplicationLoadedWebKit
AXSpeakSelectionLastSpokenString
Received error trying to start speaking: %{public}@
Received error trying to pause speaking: %{public}@
Received error trying to resume speaking: %{public}@
v12@?0B8
v16@?0@"UIView"8
v32@?0@8Q16^B24
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/Source/QuickSpeak/QuickSpeak.m
-[AXQuickSpeak _viewsWithBlock:]
Only call this when highlight view is not nil
interactionAssistant
selectionView
B16@?0@"UIView"8
UISelectionGrabberDot
_accessibilitySpeakTextSelectionViews
_accessibilityQuickSpeakTokenizer
QS can't handle range speaking because this isn't UITextInput: %{public}@
no text rect available %{public}@
failed to make start[%{private}@] and end[%{private}@] position start:%{private}@, - start:%{private}@, length: %{private}@
WKContentView
SXCanvasView
TSDCanvasView
CKBalloonTextView
UITextView
text
NSObject
dialect
quickspeak.many.languages
& %@
%@ %@
v56@?0@"NSString"8{_NSRange=QQ}16{_NSRange=QQ}32^B48
Please stop calling _accessibilityQuickSpeakContentIsSpeakable: %{private}@
play
pause
quickspeak.one.nonambiguous.language
quickspeak.preferred.language
v16@?0@?<v@?@"NSArray">8
quickspeak.speak.languages
quickspeak.sentence
quickspeak.spell.out
UIResponder
UIWebDocumentView
UITextInputPrivate
initWithFrame:
{CGRect={CGPoint=dd}{CGSize=dd}}
_UICalloutBarSystemButtonDescription
buttonDescriptionWithTitle: action: type:
m_extraButtons
_accessibility
copy:
WKWebView
_currentContentView
selectedText
accessibilityRetrieveSpeakSelectionContent
WebSelectionRect
rect
_accessibilityRetrieveRectsEnclosingSelectionOffset:withGranularity:
_accessibilityRetrieveRectsAtSelectionOffset:withText:
_selectionChanged
_accessibilityStoreSelection
_accessibilityClearSelection
WKTextRange
selectedTextRange
selectedTextLength
AXSelectionRange
AXSpeakSelectionString
AXRetrievingContent
Caught exception while waiting for results... %@
UITextRange
_accessibilityCacheContentIfNecessary
AXRetrievingRects
Caught exception while waiting for rects results... %@
QSMenuButton<%p>. action:%@. dialect:%@
PDFView
currentSelection
PDFPageLayerSelectionEffect
_private
PDFViewPrivate
scrollView
PDFScrollView
UIScrollView
pdfDocumentView
Got error making selection: %{private}@/%{private}@ %{private}@
PDFView will process range: %d, %d
PDFSelection
PDFView got the following ranges: %{private}@
PDFView got the following sentence ranges: %{private}@
UITextField
tokenizer
CKFullScreenBalloonViewControllerPhone
setBalloonView:
Will load QS safe categories for WebKit legacy now
WebKit legacy not loaded. Will load QS safe categories on demand
%{public}@
Secondary maps contained langs in non ambiguous maps. Secondary Maps: %@ Non-ambiguous Maps: %@
__CKChatController_ClickyOrb_QSExtras_super
SafeCategory
CKChatController_ClickyOrb_QSExtras
__CKFullScreenBalloonViewController_QSExtras_super
CKFullScreenBalloonViewController_QSExtras
QuickSpeakPriv
UITextInput
UIKeyInput
UITextInputTraits
NSObject
AXQuickSpeak
AXOratorDelegate
__CKBalloonTextView_QSExtras_super
CKBalloonTextView_QSExtras
__NSObject_QSExtras_super
NSObject_QSExtras
__UIWebView_QSExtras_super
UIWebView_QSExtras
__UITextInteraction_QSExtras_super
UITextInteraction_QSExtras
__UIResponder_QSExtras_super
UIResponder_QSExtras
__UIWebBrowserView_QSExtras_super
UIWebBrowserView_QSExtras
__UICalloutBar_QSExtras_super
UICalloutBar_QSExtras
AXQSMenuHelper
__PUOneUpViewController_QSExtras_super
PUOneUpViewController_QSExtras
__WKWebViewAccessibility_QSExtras_super
WKWebViewAccessibility_QSExtras
__WKContentView_QSExtras_super
WKContentView_QSExtras
QuickSpeakLanguageMenuItem
__PDFView_QSExtras_super
PDFView_QSExtras
__UITextField_QSExtrasAccessibility_super
UITextField_QSExtrasAccessibility
__CKFullScreenBalloonViewControllerPhone_QSExtras_super
CKFullScreenBalloonViewControllerPhone_QSExtras
removeObserver:
addSubview:
callStackSymbols
orderedSet
setHighlightSelectionRects:
valueWithRect:
unionOrderedSet:
currentInputModeInPreference
labelColor
setUnderlineColor:
removeObjectAtIndex:
setContentOffset:animated:
floatValue
quickSpeakHighlightOption
substringWithRange:
_accessibilityValueForKey:
associatedAmbiguousLanguages
containsObject:
indexOfObject:
unambiguousLangMaps
sublayers
valueWithCGRect:
addObserver:selector:name:object:
isEmpty
firstObject
_accessibilitySentenceRectsForRange:
arrayWithObjects:count:
indexOfFirstCharacterOnPage:
isSubclassOfClass:
valueForKey:
countByEnumeratingWithState:objects:count:
setString:
removeLastObject
enumerateTagsInRange:scheme:options:usingBlock:
setPage:
addObjectsFromArray:
menuByReplacingChildren:
primaryUnambiguousDialect
bundleIdentifier
intersectsOrderedSet:
commandWithTitle:image:action:propertyList:
CGRectValue
stringWithFormat:
sharedMenuController
mainBundle
primaryLanguage
count
arrayWithObjects:
ignoreLogging
setAutoresizesSubviews:
validateClass:isKindOfClass:
removeFromSuperview
string
addObject:
setHidden:
_accessibilityTextRectsForRange:singleTextRect:
arrayWithCapacity:
copy
bundleForClass:
enumerateObjectsUsingBlock:
objectAtIndex:
localizedStringWithFormat:
boundsForPage:
installSafeCategory:canInteractWithTargetClass:
safeValueForKey:
setOverrideProcessName:
colorWithRed:green:blue:alpha:
_accessibilityRetrieveRectsEnclosingSelectionOffset:withGranularity:
rectValue
identifier
safeUnsignedIntegerForKey:
validateClass:hasInstanceVariable:withType:
addHandler:forFramework:
primaryAmbiguousDialect
setObject:atIndexedSubscript:
rangeOfString:
setAlpha:
convertRect:toView:
_accessibilityRetrieveRectsAtSelectionOffset:withText:
sharedInputModeController
insertSubview:atIndex:
numberWithUnsignedInteger:
array
stopSpeaking:
colorWithCGColor:
setFrame:
elementWithProvider:
activeTextEffectsWindowForWindowScene:
localizedStringForKey:value:table:
validateClass:hasInstanceMethod:withFullSignature:
convertRect:fromPage:
setSpeakingContext:
safeIvarForKey:
predictedSecondaryLangMaps
isScrollEnabled
bounds
setMenuItems:
selectionsByLine
setDontDismiss:
numberWithFloat:
length
_accessibilityRemoveValueForKey:
insertObject:atIndex:
appear
colorWithAlphaComponent:
rangeOfComposedCharacterSequenceAtIndex:
validateClass:hasClassMethod:withFullSignature:
actionWithTitle:image:identifier:handler:
sharedCalloutBar
layer
safeArrayForKey:
dialectForCurrentLocale
initWithTitle:action:
text
balloonViewForChatItem:
contentSize
action
animateWithDuration:animations:completion:
validateClass:conformsToProtocol:
startSpeakingWithPreferredLanguage:error:
setIdleTimerDisabled:
mutableCopy
setHighlighted:
systemLanguageID
quickSpeakWordHighlightColor
collectionViewController
setWithCapacity:
backgroundColor
initWithTargetSerialQueue:
animateWithDuration:animations:
performValidations:withPreValidationHandler:postValidationHandler:safeCategoryInstallationHandler:
start
ax_sentenceFromPosition:inDirection:
hasPrefix:
selectionForRange:
windowScene
resumeSpeaking:
quickSpeakSentenceHighlightOption
validateClass:
setDelegate:
_accessibilityQuickSpeakEnclosingSentence:
menuWithTitle:image:identifier:options:children:
lastObject
setVisible:
clearSelectedContent
setSentenceHighlight:
_accessibilitySetValue:forKey:storageMode:
initWithTagSchemes:options:
isIdleTimerDisabled
systemImageNamed:
delegate
pauseSpeaking:
ambiguousLangMaps
setValue:forKey:
contentOffset
window
languageNameInNativeLocale
getRed:green:blue:alpha:
menuItems
defaultDialect
quickSpeakSentenceHighlightColor
update
setDebugBuild:
children
specificLanguageID
setSelectionColor:
axSafelyAddObjectsFromArray:
isHidden
superview
contentIsSpeakable
pages
langMap
initWithFrame:
adjustedContentInset
generalLanguageID
axSafelyAddObject:
visible
unpredictedAmbiguousLangMaps
_accessibilitySetRetainedValue:forKey:
setValidationTargetName:
isEqualToString:
initWithArray:
_accessibilityBoolValueForKey:
subviews
_accessibilitySetBoolValue:forKey:
defaultCenter
setSelectable:
safeCategoryTargetClassName
safeCategoryBaseClass
_menuForChatItem:
_accessibilityPauseSpeaking:
_accessibilitySpeak:
_accessibilityPerformValidations:
_axActionForSpeakSelection:
performCancelAnimationWithCompletion:
_accessibilitySpeakSelectionAssociatedScrollView
_accessibilitySpeakLanguageSelection:
_accessibilitySpeakWithLanguage:
_accessibilitySpeakSentence:
_accessibilitySpeakSpellOut:
init
_handleAppDidEnterBackground:
_handleAppWillResignActive:
_stopSpeakingQuickSpeak:
dealloc
_handleWebkitLegacyWasLoaded:
_accessibilityStoreSelection
_accessibilityClearSelection
interactionAssistant
_accessibilitySpeakTextSelectionViews
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
autocapitalizationType
setAutocapitalizationType:
autocorrectionType
setAutocorrectionType:
spellCheckingType
setSpellCheckingType:
smartQuotesType
setSmartQuotesType:
smartDashesType
setSmartDashesType:
smartInsertDeleteType
setSmartInsertDeleteType:
keyboardType
setKeyboardType:
keyboardAppearance
setKeyboardAppearance:
returnKeyType
setReturnKeyType:
enablesReturnKeyAutomatically
setEnablesReturnKeyAutomatically:
isSecureTextEntry
setSecureTextEntry:
textContentType
setTextContentType:
passwordRules
setPasswordRules:
Tq,N
TB,N
secureTextEntry
TB,N,GisSecureTextEntry
T@"NSString",C,N
T@"UITextInputPasswordRules",C,N
insertText:
deleteBackward
hasText
TB,R,N
textInRange:
replaceRange:withText:
setMarkedText:selectedRange:
unmarkText
textRangeFromPosition:toPosition:
positionFromPosition:offset:
positionFromPosition:inDirection:offset:
comparePosition:toPosition:
offsetFromPosition:toPosition:
positionWithinRange:farthestInDirection:
characterRangeByExtendingPosition:inDirection:
baseWritingDirectionForPosition:inDirection:
setBaseWritingDirection:forRange:
firstRectForRange:
caretRectForPosition:
selectionRectsForRange:
closestPositionToPoint:
closestPositionToPoint:withinRange:
characterRangeAtPoint:
selectedTextRange
setSelectedTextRange:
markedTextRange
markedTextStyle
setMarkedTextStyle:
beginningOfDocument
endOfDocument
inputDelegate
setInputDelegate:
tokenizer
shouldChangeTextInRange:replacementText:
textStylingAtPosition:inDirection:
positionWithinRange:atCharacterOffset:
characterOffsetOfPosition:withinRange:
insertDictationResult:
dictationRecordingDidEnd
dictationRecognitionFailed
frameForDictationResultPlaceholder:
removeDictationResultPlaceholder:willInsertResult:
insertText:alternatives:style:
setAttributedMarkedText:selectedRange:
insertTextPlaceholderWithSize:
removeTextPlaceholder:
beginFloatingCursorAtPoint:
updateFloatingCursorAtPoint:
endFloatingCursor
editMenuForTextRange:suggestedActions:
textInputView
selectionAffinity
setSelectionAffinity:
insertDictationResultPlaceholder
T@"UITextRange",C
T@"UITextRange",R,N
T@"NSDictionary",C,N
T@"UITextPosition",R,N
T@"<UITextInputDelegate>",W,N
T@"<UITextInputTokenizer>",R,N
T@"UIView",R,N
T@,R,N
_accessibilityRetrieveRectsForGuanularity:atSelectionOffset:wordText:
_accessibilityTextRectsForRange:singleTextRect:selectedRange:string:
selectionHighlightColor
sharedInstance
quickSpeakClassIsDenied:
isQuickSpeakSelector:
initialize
oratorDidStartSpeaking:
oratorDidFinishSpeaking:
oratorDidPauseSpeaking:
oratorDidResumeSpeaking:
oratorDidCancelSpeaking:
orator:willSpeakRange:ofContent:
oratorShouldFetchNextElements:shouldScrollOpaqueProviderIfNecessary:
oratorDidChangeSpeakingRate:
orator
content
setContent:
selectedContent
setSpellOutContent:
spellOutContent
resetQuickSpeakForUnitTests
_installWebKitLegacySafeCategories
_installWebKitLegacySafeCategoriesIfNeeded
speakAction:withPreferredLanguage:
pauseAction:
resumeAction:
stopAction:
_updateCalloutBar
_manipulateOtherTextViews:
_viewsWithBlock:
_textSelectionViews
_cleanupTextSelectionViews
_handlePauseCallback
_scrollToTextRect:withScrollView:
_updatedRangeForComposedCharacters:string:lastKnownWholeCharacterLocation:lastKnownUnicharLocation:
_quickSpeakInputInitiator
_rectsByUnionSamelineRects:
_sentenceRects:speakingRange:
_sentenceHighlightOverlapHeightArray
_willSpeakRange:string:
modifiedRange:withString:
_quickSpeakTextRects:withRange:string:highlightRects:sentenceRects:singleTextRect:
_quickSpeakUITextInputTextRects:withRange:string:highlightRects:sentenceRects:singleTextRect:
_sliceRects:withSentenceRects:wordRects:
_handleQuickSpeakHighlight:sentenceRects:textRect:initiator:
isSpeaking
speakStatusWithLanguage:rate:
selectedContentIsSpeakable
selectedContentRequiresUserChoice
speakingSentenceRange
setSpeakingSentenceRange:
cachedIdleTimerPref
setCachedIdleTimerPref:
isPaused
setPaused:
quickSpeakInitiator
setQuickSpeakInitiator:
highlightView
setHighlightView:
hiddenTextSelectionViews
setHiddenTextSelectionViews:
sentenceHighlightView
setSentenceHighlightView:
hiddenTextSelectionViewDelegates
setHiddenTextSelectionViewDelegates:
highlightViewDispatcher
setHighlightViewDispatcher:
contentOwner
setContentOwner:
hasTextBalloonView
setHasTextBalloonView:
.cxx_destruct
_lastQuickSpeakOffset
_orator
_lastWholeCharacterLocation
_lastUnicharLocation
_currentSentenceRange
_cachedIdleTimerPref
_paused
_hasTextBalloonView
_quickSpeakInitiator
_highlightView
_hiddenTextSelectionViews
_sentenceHighlightView
_hiddenTextSelectionDelegates
_highlightViewDispatcher
_contentOwner
T@"AXOrator",R,N
TB,N,V_cachedIdleTimerPref
paused
TB,N,GisPaused,V_paused
T@,&,N,V_quickSpeakInitiator
T@"AXDispatchTimer",&,N,V_highlightViewDispatcher
T@"NSArray",&,N,V_hiddenTextSelectionViews
T@"NSArray",&,N,V_hiddenTextSelectionDelegates
T@,&,N,V_contentOwner
T@"UITextRange",&,N,VspeakingSentenceRange
TB,D,N
T@"AXLanguageTaggedContent",R,N
TB,N,V_hasTextBalloonView
T@"QSSelectionHighlightView",&,N,V_highlightView
T@"QSSelectionHighlightView",&,N,V_sentenceHighlightView
_accessibilityQuickSpeakContent
dialect
_accessibilitySpeakSelectionTextInputResponder
_accessibilityShouldShowSpeakBubble
_accessibilityShouldShowSpeakLanguageBubble
_accessibilityShouldShowPauseBubble
_accessibilityQuickSpeakTextRectsWithRange:string:highlightRects:sentenceRects:singleTextRect:
_accessibilityIsTextInput
_accessibilityIsTextInteraction
_accessibilityShouldUpdateQuickSpeakContent
_accessibilitySystemShouldShowSpeakBubbleCommon
_accessibilityCacheContentIfNecessary
_accessibilityShouldShowSpeakSpellOut
_accessibilitySystemShouldShowSpeakSpellOut
_accessibilitySystemShouldShowSpeakSentence
_accessibilitySystemShouldShowSpeakBubble
_accessibilitySystemShouldShowSpeakLanguageBubble
_accessibilitySystemShouldShowPauseBubble
_accessibilityQScanPerformAction:withSender:
_accessibilityQuickSpeakContentIsSpeakable
_accessibilityHandleFinishSpeaking
_updatedAccessibilityTextMenuWithMenuElements:
_updatedAccessibilityTextSpeechMenuWithMenu:
canPerformAction:withSender:
_accessibilitySearchTextRangeFromRange:withString:selectedRange:
_adjustedRange:withText:matchText:initiator:
_rangeStringMatch:wordText:
fade
hide
buttonPressed:
updateAvailableButtons
_accessibilityAddSpeakItemToExtras:selector:
_axSystemButtonsContainsLanguageChoices:
_axHideSpeakButtonFromSystemButtons:
menuController
calloutBar
restoreMenu
saveThirdPartyMenuItemsIfNeeded:
menuItemForCalloutBarButton:
isShowingLanguageChoices
setShowingLanguageChoices:
thirdPartyMenuItems
setThirdPartyMenuItems:
_showingLanguageChoices
_thirdPartyMenuItems
T@"NSArray",&,N,V_thirdPartyMenuItems
T@"UIMenuController",R,N
T@"UICalloutBar",R,N
showingLanguageChoices
TB,N,GisShowingLanguageChoices,V_showingLanguageChoices
_axContentView
_selectionChanged
_axWaitForSpeakSelectionContentResults
accessibilitySpeakSelectionSetContent:
accessibilityQSSentenceRects
accessibilitySetQSSentenceRects:
accessibilityQSWordRects
accessibilitySetQSWordRects:
_webTextRectsFromWKTextRects:
_axWaitForSpeakSelectionRectResultsForGuanularity:atSelectionOffset:wordText:
_accessibilityDidGetSelectionRects:withGranularity:atOffset:
_axSelectedTextLength
accessibilityLanguage
setDialect:
_dialect
T@"AXDialectMap",&,N,V_dialect
_axConvertRange:toRects:operatingPage:
_accessibilityQuickSpeakTokenizer
setBalloonView:
@16@0:8
#16@0:8
v24@0:8@16
@24@0:8@16
v24@0:8@?16
B24@0:8@16
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
q16@0:8
v24@0:8q16
v20@0:8B16
v24@0:8@"NSString"16
@"UITextInputPasswordRules"16@0:8
v24@0:8@"UITextInputPasswordRules"16
v16@0:8
v32@0:8@16@24
v40@0:8@16{_NSRange=QQ}24
@32@0:8@16@24
@32@0:8@16q24
@40@0:8@16q24q32
q32@0:8@16@24
q32@0:8@16q24
v32@0:8q16@24
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16
@32@0:8{CGPoint=dd}16
@40@0:8{CGPoint=dd}16@32
B32@0:8@16@24
v28@0:8@16B24
v40@0:8@16@24q32
@32@0:8{CGSize=dd}16
v32@0:8{CGPoint=dd}16
@"NSString"24@0:8@"UITextRange"16
v32@0:8@"UITextRange"16@"NSString"24
v40@0:8@"NSString"16{_NSRange=QQ}24
@"UITextRange"32@0:8@"UITextPosition"16@"UITextPosition"24
@"UITextPosition"32@0:8@"UITextPosition"16q24
@"UITextPosition"40@0:8@"UITextPosition"16q24q32
q32@0:8@"UITextPosition"16@"UITextPosition"24
@"UITextPosition"32@0:8@"UITextRange"16q24
@"UITextRange"32@0:8@"UITextPosition"16q24
q32@0:8@"UITextPosition"16q24
v32@0:8q16@"UITextRange"24
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@"UITextRange"16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@"UITextPosition"16
@"NSArray"24@0:8@"UITextRange"16
@"UITextPosition"32@0:8{CGPoint=dd}16
@"UITextPosition"40@0:8{CGPoint=dd}16@"UITextRange"32
@"UITextRange"32@0:8{CGPoint=dd}16
@"UITextRange"16@0:8
v24@0:8@"UITextRange"16
@"NSDictionary"16@0:8
v24@0:8@"NSDictionary"16
@"UITextPosition"16@0:8
@"<UITextInputDelegate>"16@0:8
v24@0:8@"<UITextInputDelegate>"16
@"<UITextInputTokenizer>"16@0:8
B32@0:8@"UITextRange"16@"NSString"24
@"NSDictionary"32@0:8@"UITextPosition"16q24
q32@0:8@"UITextPosition"16@"UITextRange"24
v24@0:8@"NSArray"16
v40@0:8@"NSString"16@"NSArray"24q32
v40@0:8@"NSAttributedString"16{_NSRange=QQ}24
@"UITextPlaceholder"32@0:8{CGSize=dd}16
v24@0:8@"UITextPlaceholder"16
@"UIMenu"32@0:8@"UITextRange"16@"NSArray"24
@"UIView"16@0:8
v48@0:8@16{_NSRange=QQ}24@40
v24@0:8@"AXOrator"16
v48@0:8@"AXOrator"16{_NSRange=QQ}24@"NSString"40
v28@0:8@"AXOrator"16B24
@24@0:8@?16
v56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
{_NSRange=QQ}56@0:8{_NSRange=QQ}16@32Q40Q48
v40@0:8{_NSRange=QQ}16@32
{_NSRange=QQ}40@0:8{_NSRange=QQ}16@32
v72@0:8@16{_NSRange=QQ}24@40@48@56^{CGRect={CGPoint=dd}{CGSize=dd}}64
@40@0:8@16@24@32
v72@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32@64
{CGPoint="x"d"y"d}
@"AXOrator"
@"UITextRange"
@"QSSelectionHighlightView"
@"NSArray"
@"AXDispatchTimer"
v64@0:8{_NSRange=QQ}16@32@40@48^{CGRect={CGPoint=dd}{CGSize=dd}}56
B32@0:8:16@24
@48@0:8@16^{CGRect={CGPoint=dd}{CGSize=dd}}24@32@40
@48@0:8@16@24@32@40
v32@0:8@16:24
@40@0:8q16q24@32
v40@0:8q16q24@32
v40@0:8@16q24q32
@"AXDialectMap"
v48@0:8{_NSRange=QQ}16@32@40
