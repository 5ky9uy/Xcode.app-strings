?ffffff
?[5"y
MbP?{
?333333
?333333
?333333
W@ffffff
?ffffff
?UUUUUU
yDff
?)\
appStorePlayerViewPlayerLayerOnly
appStorePlayerViewDisableVideo
v16@?0@"AVAppStorePlayerView"8
rate
Central Play
AVRouteDetectorCoordinatorMultipleRoutesDetectedDidChangeNotification
com.apple.avkit.routeDetectorCoordinatorQueue
-[UIWindow(AVAdditions) avkit_ensureOrientation:disableTouchCancellation:]
AVKit
%@ (%p) %@
AVKitErrorDomain
layer
playerLayer
V:|[simplePlayerLayerView]|
H:|[simplePlayerLayerView]|
simplePlayerLayerView
-[AVPictureInPicturePlatformAdapter pictureInPictureViewControllerViewWillDisappear:]
-[AVPictureInPicturePlatformAdapter pictureInPictureViewControllerViewDidAppear:]
-[AVPictureInPicturePlatformAdapter pictureInPictureProxy:didReceiveTestingCommand:]
-[AVPictureInPicturePlatformAdapter pictureInPictureProxy:didReceivePlaybackCommand:]
-[AVPictureInPicturePlatformAdapter pictureInPictureProxy:didUpdateResourcesUsageReductionReasons:oldReasons:]
shouldReduceResources
-[AVPictureInPicturePlatformAdapter pictureInPictureProxyPictureInPictureInterruptionEnded:]
-[AVPictureInPicturePlatformAdapter pictureInPictureProxyPictureInPictureInterruptionBegan:]
-[AVPictureInPicturePlatformAdapter pictureInPictureProxy:didStopPictureInPictureWithAnimationType:reason:]
-[AVPictureInPicturePlatformAdapter pictureInPictureProxy:willStopPictureInPictureWithAnimationType:reason:]
-[AVPictureInPicturePlatformAdapter pictureInPictureProxy:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:]
-[AVPictureInPicturePlatformAdapter pictureInPictureProxy:failedToStartPictureInPictureWithAnimationType:error:]
-[AVPictureInPicturePlatformAdapter pictureInPictureProxy:didStartPictureInPictureWithAnimationType:]
-[AVPictureInPicturePlatformAdapter pictureInPictureProxy:willStartPictureInPictureWithAnimationType:]
v32@?0@"AVPictureInPicturePlatformAdapter"8@16@"AVKeyValueChange"24
playerController.playing
playerController.timeControlStatus
playerController.scrubbing
playerController.seekToTime
playerController.seeking
v32@?0@"AVPictureInPicturePlatformAdapter"8@16@"NSNotification"24
playerController.hasSeekableLiveStreamingContent
playerController.seekableTimeRanges
playerController.hasLiveStreamingContent
playerController.status
playerController.muted
playerController.timing
playerController.maxTime
playerController.minTime
playerController.rate
playerController.player
pictureInPictureWasStartedWhenEnteringBackground
playerController.contentDimensions
-[AVPictureInPicturePlatformAdapter setBackgroundPlaybackPolicy:]
v16@?0@"<PGMutablePlaybackState>"8
-[AVPictureInPicturePlatformAdapter _updatePictureInPictureShouldStartWhenEnteringBackground]
pictureInPictureShouldStartWhenEnteringBackground
-[AVPictureInPicturePlatformAdapter updateLayoutDependentBehaviors]
-[AVPictureInPicturePlatformAdapter setSource:]
-[AVPictureInPicturePlatformAdapter setWasPlayingWhenSuspended:]
wasPlayingWhenSuspended
-[AVPictureInPicturePlatformAdapter setInterruptedForAudioSession:]
interruptedForAudioSession
-[AVPictureInPicturePlatformAdapter stopPictureInPictureAndRestoreUserInterface:]
shouldRestore
The UIScene for the content source has an activation state other than UISceneActivationStateForegroundActive, which is not allowed.
Failed to start picture in picture.
SpringBoard
alwaysAllowNonlinearPlaybackByDefault
v16@?0@"AVPictureInPicturePlatformAdapter"8
playerController.playingOnSecondScreen
playerController.pictureInPicturePossible
+[AVPictureInPicturePlatformAdapter isPictureInPictureSupported]
isPictureInPictureSupported
playerLayer.pixelBufferAttributes
videoGravity
pictureInPicturePlayerLayer.videoRect
videoBounds
playerLayer.videoRect
playerLayer.readyForDisplay
playerLayer.videoGravity
PLAYBACK_CONTROLS_VIEW_CONTROLLER_SCRUB_INSTRUCTIONS_SUBTITLE_LABEL_FINE_SCRUBBING_TEXT
PLAYBACK_CONTROLS_VIEW_CONTROLLER_SCRUB_INSTRUCTIONS_SUBTITLE_LABEL_QUARTER_SPEED_SCRUBBING_TEXT
PLAYBACK_CONTROLS_VIEW_CONTROLLER_SCRUB_INSTRUCTIONS_SUBTITLE_LABEL_HALF_SPEED_SCRUBBING_TEXT
PLAYBACK_CONTROLS_VIEW_CONTROLLER_SCRUB_INSTRUCTIONS_SUBTITLE_LABEL_HI_SPEED_SCRUBBING_TEXT
scrubbingSpeed
-[AVAirMessageNotificationCenter airTransportInputDidClose:]
-[AVAirMessageNotificationCenter airTransport:didReceiveObject:]
v24@?0q8@"NSDictionary"16
-[AVAirMessageNotificationCenter airTransport:didReceiveObject:]_block_invoke
-[AVAirMessageNotificationCenter bonjourService:didCloseChannel:]
currentItemIdentifier
-[AVAirMessageNotificationCenter bonjourService:didAcceptConnectionChannel:]
-[AVAirMessageNotificationCenter handleCommandMessage:completion:]
com.apple.avkit.AirMessageNotificationCenter
do not create your own AVAirMessageNotificationCenter
cgImage
com.apple.AVKit.ChapterImageQueue
avkt/ExternalContentIdentifier
avkt/ExternalUserProfileIdentifier
avkt/PlaybackProgress
avkt/ServiceIdentifier
avkt/iTunesStoreIdentifier
avkt/BrandIdentifier
AVPlayerItemAVKitDataDidChangeNotification
externalMetadata
-[AVPlayerItem(AVKitAdditionsPrivate) avkit_airMessageSendToAppleTV]
-[AVPlayerItem(AVKitAdditionsPrivate) avkit_airMessageSendExternalMetadata]
v24@?0@"AVAirMessageResponse"8q16
-[AVPlayerItem(AVKitAdditionsPrivate) avkit_airMessageSendExternalMetadata]_block_invoke
externalPlaybackController
-[AVPlayerController(AVMediaSelection) _setMediaOption:mediaCharacteristic:]
-[AVPlayerController(AVMediaSelection) _enableAutoMediaSelection:]
-[AVPlayerController(AVMediaSelection) _disableLegibleMediaSelectionOptions:]
-[AVPlayerController(AVMediaSelection) _ensureUserCaptionDisplayType:]
q24@?0@8@16
B8@?0
avkit_persistentIdentifier
-[AVPlayerController(AVMediaSelection) selectedMediaOptionMayHaveChanged:]
currentAssetIfReady
player.appliesMediaSelectionCriteriaAutomatically
-[AVPlayerController(AVMediaSelection) currentLegibleMediaSelectionOption]
-[AVPlayerController(AVMediaSelection) setLegibleMediaSelectionOptions:]
-[AVPlayerController(AVMediaSelection) setAudioMediaSelectionOptions:]
MediaSelectionOptionsPersistentID
legibleMediaSelectionOptions
audioMediaSelectionOptions
hasLegibleMediaSelectionOptions
hasAudioMediaSelectionOptions
+[AVPlayerController(AVMediaSelection) canonicalLanguageIdentifierFromString:]
NilString
Volume
-[AVNewsWidgetPlayerBehavior dealloc]
-[AVNewsWidgetPlayerBehavior init]
OVERFLOW_MENU_SUBTITLES_TITLE
OVERFLOW_MENU_LANGUAGES_TITLE
-[AVMediaSelectionMenuController _menuForOptions:]_block_invoke
Playback Speed
v32@?0@"AVMobilePlaybackRateMenuController"8@16@"AVKeyValueChange"24
selectedRate
-[AVSecondScreenController _insertConnection:atIndex:]
-[AVSecondScreenController _updateActiveConnection]
B16@?0@"AVSecondScreenConnection"8
-[AVSecondScreenController _targetScreen]
-[AVSecondScreenController removeSecondScreen:]
-[AVSecondScreenController addSecondScreen:]
-[AVSecondScreenController setPreferredConnection:]
-[AVSecondScreenController removeConnection:]
-[AVSecondScreenController addConnection:]
v32@?0@"AVSecondScreenController"8@16@"NSNotification"24
-[AVSecondScreenController init]_block_invoke
receiverPairingIdentity
AVBonjourServiceClientDidResolveNetServiceNotification
AVExternalDeviceAControllerirPlayDeviceRefDidChangeNotification
AVBonjourServiceClientDidResolveAirPlayDeviceNetServiceNotification
-[AVBonjourServiceClient netServiceDidResolveAddress:]
-[AVBonjourServiceClient airTransportSenderForNetService:]
<%@:%ld>
?host?
-[AVBonjourServiceClient _isServiceForCurrentAirPlayDevice:]
-[AVBonjourServiceClient _updatedAirPlayPairedDeviceAsync]
v24@?0^v8^{__CFError=}16
-[AVBonjourServiceClient _updatedAirPlayPairedDeviceAsync]_block_invoke
v20@?0C8^v12
SUCCESS
FAIL
<AVBonjourServiceClient %p (%@); delegate <%@ %p>>
local
-[AVBonjourServiceClient initWithNetServiceType:]_block_invoke
AVNowPlayingInfoControllerDidReceiveStopCommandEventNotification
v40@?0@"NSMutableDictionary"8@"NSArray"16@"NSString"24^{__CFString=}32
-[AVNowPlayingInfoController stopNowPlayingUpdatesForPlayerController:]
-[AVNowPlayingInfoController startNowPlayingUpdatesForPlayerController:afterDelay:]
-[AVNowPlayingInfoController setPlayerController:]
playerController.legibleMediaSelectionOptions
playerController.audioMediaSelectionOptions
playerController.canSeekChapterBackward
playerController.canSeekChapterForward
playerController.canScanBackward
playerController.canScanForward
playerController.canSeek
playerController.canTogglePlayback
playerController.canPlay
playerController.canPause
v32@?0@"AVNowPlayingInfoController"8@16@"NSNotification"24
playerController.metadata
playerController.contentDuration
playerController.hasContent
-[AVNowPlayingInfoController dealloc]
-[AVNowPlayingInfoController init]
^{__CFArray=}20@?0I8^{__CFDictionary=}12
+[AVNowPlayingInfoController _mediaRemoteLanguageOptionCharacteristicsForAVMediaSelectionOption:]
AVNowPlayingInfoController_Mobile.m
mediaRemoteMediaCharacteristic
com.apple.avkit.sharedNowPlayingInfoController
B24@?0@"UISceneSession"8@"NSDictionary"16
B24@?0@"UIWindowScene"8@"NSDictionary"16
v16@?0@"NSNotification"8
v32@?0@8@16@24
v48@?0@8@"NSString"16@24@32@"NSString"40
v32@?0@"AVMusicAppBehaviorContext"8@16@"NSNotification"24
v32@?0@"AVMusicAppBehaviorContext"8@16@"AVKeyValueChange"24
playerController.player.currentItem
avkit_musicAppBehaviorContext
AVSecondScreenDidDisconnectNotification
AVSecondScreenConnectionDidBecomePossibleNotification
-[AVSecondScreen setState:]
PlaybackProhibited
PlaybackPossible
PlaybackActive
Invalid
-[AVSecondScreen connectWithSecondScreenConnection:]
-[AVSecondScreen dealloc]
v32@?0@"AVSecondScreen"8@16@"NSNotification"24
-[AVSecondScreen initWithScene:]_block_invoke
v32@?0@"AVSecondScreen"8@"UIWindowScene"16@"NSNotification"24
-[AVAirTransportStreams stream:handleEvent:]
AVAirTransport.m
isRunningEventThread()
Input
Output
-[AVAirTransportStreams _inputStreamHasBytesAvailable]
-[AVAirTransportStreams _inputStreamHasBytesAvailable]_block_invoke
-[AVAirTransportStreams _readAvailableData]
-[AVAirTransportStreams _readDataNonBlockingUpToMaxLength:]
<%@ %p: (<%@, >%@), delegate=%@>
<%@ %p>
-[AVAirTransportStreams invalidate]
-[AVAirTransport sendResponse:]
-[AVAirTransport sendObject:receiveResponse:]_block_invoke
isReadyToSend should be implemented by subclass
-[AVAirTransport writeData:]
-[AVAirTransport writeMore]
_writeData must be implmemented by subclass
-[AVAirTransport terminatePendingRequests]_block_invoke
<%@ %p: delegate=%@>
-[AVAirTransport dealloc]
com.apple.avkit.AirChannel
+[AVAirTransport startEventThreadIfNecessary]_block_invoke_2
AVAirMessageDispatcherDidChangeTargetNotification
-[AVAirMessageDispatcher airTransport:didReceiveObject:]
-[AVAirMessageDispatcher airTransportInputDidClose:]
-[AVAirMessageDispatcher airTransportOutputDidOpen:]
-[AVAirMessageDispatcher didConnectToBonjourService:channel:]
-[AVAirMessageDispatcher sendMessage:completion:]
v24@?0@"<AVAirTransportReverseTransformationResultProtocol>"8q16
-[AVAirMessageDispatcher sendMessage:completion:]_block_invoke
<%@ %p: serviceClient=%@, channel=%@; delegate=%@>
-[UIViewController(AVAdditions) avkit_setNeedsUpdatePreferencesIfNeeded]
UIWhitePointAdaptivityStyleVideo == preferredWhitePointAdaptivityStyle
prefersHomeIndicatorAutoHidden
-[UIWindowScene(AVAdditions) avkit_disableTouchCancellation:forRotationActions:]
actuallyDisableTouchCancellation
com.apple.avkit
MediaPlayback
-[AVSystemVolumeController setPrefersSystemVolumeHUDHidden:]
-[AVSystemVolumeController _applyProposedVolumeImmediately]
v16@?0@"AVSystemVolumeController"8
AVVolumeControllerCurrentRouteHasVolumeControlChangedNotification
RouteChange
ExplicitVolumeChange
AVVolumeControllerVolumeChangedNotification
-[AVSystemVolumeController setSystemVolumeHUDEnabled:forWindowSceneSessionIdentifier:]
Disabling
Enabling
-[AVSystemVolumeController setSystemVolumeHUDEnabled:forSceneVolumeHudAssertion:]
MPVolumeHUDController
B24@?0@"AVVolumeHUDAssertion"8^B16
AVVolumeControllerVolumeDidChangeNotificationIsInitialValueKey
Audio/Video
v16@?0@"AVMicaPackage"8
AirPlay
Airplay
AVPlayerViewControllerDidChangePlayerControllerNotification
AVPlayerViewControllerDidEnterFullScreenFromInline
AVPlayerViewControllerDidExitFullScreenFromInline
-[AVPlayerViewController playbackRateCollection:selectedPlaybackRateDidChangeTo:]
-[AVPlayerViewController pictureInPictureController:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:]
v20@?0B8@"NSError"12
-[AVPlayerViewController avkit_willBeginStoppingPictureInPictureForPictureInPictureViewController:]
Invalid call of %@!
*** Warning: %@ is trying to exit full screen, but is not in its view's window's view controller hierarchy. This results in undefined behavior.
*** Warning: %@ is trying to enter full screen, but is not in its view's window's view controller hierarchy. This results in undefined behavior.
-[AVPlayerViewController exitFullScreenWithCompletion:]_block_invoke
success
-[AVPlayerViewController enterFullScreenWithCompletion:]_block_invoke
-[AVPlayerViewController showFullScreenPresentationFromView:completion:]
v32@?0@"AVPlayerViewController"8@16@"AVKeyValueChange"24
playerLayerView.videoBounds
playerLayerView.readyForDisplay
v16@?0@"NSTimer"8
-[AVPlayerViewController _delegateRespondsTo:]
does NOT
does
v16@?0@"<AVMetricsCollectionBehaviorContext>"8
-[AVPlayerViewController _mediaSelectionDoneButtonTapped:]
B16@?0@"UIView"8
-[AVPlayerViewController _handleDoubleDoubleTapGesture:]
-[AVPlayerViewController _handleSingleTapGesture:]
-[AVPlayerViewController _handleDoubleTapGesture:]
com.apple.iBooks
EXTERNAL_PLAYBACK_INDICATOR_VIEW_TV_OUT_SUBTITLE
EXTERNAL_PLAYBACK_INDICATOR_VIEW_TV_OUT_TITLE
EXTERNAL_PLAYBACK_INDICATOR_VIEW_AIRPLAY_SUBTITLE
EXTERNAL_PLAYBACK_INDICATOR_VIEW_AIRPLAY_TITLE
-[AVPlayerViewController isAudioOnlyContent]
_pictureInPictureController
-[AVPlayerViewController _addObservers]
com.apple.avkittester
com.apple.tv
playerController.defaultPlaybackRate
v16@?0@"AVPlayerViewController"8
playerController.hasEnabledVideo
playerController.hasEnabledAudio
playerController.externalPlaybackType
playerController.playingOnExternalScreen
v32@?0@"AVPlayerViewController"8@16@"NSNotification"24
Exit full screen keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_EXIT_FULLSCREEN
Show next frame keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_SHOW_NEXT_FRAME
Show previous frame keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_SHOW_PREVIOUS_FRAME
Fast forward keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_FAST_FORWARD
Rewind keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_REWIND
Go to beginning keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_GO_TO_BEGINNING
Skip ahead 15 seconds keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_SKIP_AHEAD_15
Skip back 15 seconds keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_SKIP_BACK_15
Volume down keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_VOLUME_DOWN
Volume up keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_VOLUME_UP
Play/Pause keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_PLAY_PAUSE
v60@?0@"NSString"8q16B24:28:36@"NSString"44@"NSString"52
com.apple.AppStore
-[AVPlayerViewController prefersStatusBarHidden]
prefersStatusBarHidden
-[AVPlayerViewController loadView]
*** AVPlayerViewController: Setting a view is not supported.
-[AVPlayerViewController flashPlaybackControlsWithDuration:]
*** Warning: Called %@ with a duration of %@. Ignoring the duration as it is too short.
-[AVPlayerViewController setEntersFullScreenWhenPlaybackBegins:]
entersFullScreenWhenPlaybackBegins
-[AVPlayerViewController setVolumeControlsCanShowSlider:]
-[AVPlayerViewController setPlaybackControlsIncludeVolumeControls:]
playbackControlsIncludeVolumeControls
-[AVPlayerViewController setPlaybackControlsIncludeDisplayModeControls:]
playbackControlsIncludeDisplayModeControls
-[AVPlayerViewController setPlaybackControlsIncludeTransportControls:]
playbackControlsIncludeTransportControls
-[AVPlayerViewController setRequiresLinearPlayback:]
-[AVPlayerViewController setShowsMinimalPlaybackControlsWhenEmbeddedInline:]
-[AVPlayerViewController setAllowsEnteringFullScreen:]
allowsEnteringFullScreen
-[AVPlayerViewController setCanHidePlaybackControls:]
canHidePlaybackControls
-[AVPlayerViewController setUpdatesNowPlayingInfoCenter:]
-[AVPlayerViewController setShowsTimecodes:]
_showsTimecodes
-[AVPlayerViewController setPlaybackRateCollection:]
-[AVPlayerViewController setPlayerController:]
-[AVPlayerViewController setAllowsPictureInPicturePlayback:]
-[AVPlayerViewController setVideoGravity:forLayoutClass:]
-[AVPlayerViewController setShowsPlaybackControls:]
-[AVPlayerViewController setPlayer:]
%@ only supports AVPlayer instances that have been initialized with the main queue as the dispatch queue for serializing key-value observations.
-[AVPlayerViewController encodeWithCoder:]
AVAllowsPictureInPicturePlayback
AVVideoLayerGravity
AVShowsPlaybackControls
-[AVPlayerViewController initWithCoder:]
com.apple.podcasts
AVCanDisplayContentInDetachedWindow
AVWantsDetachedFullscreenPresentation
AVPlayerShouldAutoplay
AVPlayerAssetFilename
-[AVPlayerViewController dealloc]
*** Warning: %@ was deallocated while its contents were being presented full screen. ***
-[AVPlayerViewController initWithNibName:bundle:]
_playerLayerView.pixelBufferAttributes
secondScreenConnectionDisplaySize
_playerLayerView.videoDisplaySize
playerLayerView.videoGravity
-[AVPlayerViewController(DeprecationsAndToBeRemoved) setEntersFullScreenWhenTapped:]
entersFullScreenWhenTapped
-[AVPlayerViewController(DeprecationsAndToBeRemoved) setPreferredUnobscuredArea:]
-[AVPlayerViewController(AVPlayerViewController_WebKitOnly) exitFullScreenAnimated:completionHandler:]
View needs to be loaded before you can call %@!
View may not need layout when you call %@!
-[AVPlayerViewController(AVPlayerViewController_WebKitOnly) enterFullScreenAnimated:completionHandler:]
-[AVPlayerViewController(AVPlayerViewController_WebKitOnly) setPlaybackControlsShouldControlSystemVolume:]
-[AVPlayerViewController(AVPlayerViewController_WebKitOnly) initWithPlayerLayerView:]
playbackControlsController
-[AVPlayerViewController(AVPlaybackControlsViewControllerActions) exitFullscreen:]
-[AVPlayerViewController(AVPlaybackControlsViewControllerActions) pictureInPictureButtonTapped:]
-[AVPlayerViewController(AVPlaybackControlsViewControllerActions) fullScreenButtonTapped:]
-[AVPlayerViewController(AVPlaybackControlsViewControllerActions) mediaSelectionButtonTapped:]
-[AVPlayerViewController(AVPlaybackControlsViewControllerActions) videoGravityButtonTapped:]
_pictureInPictureController.pictureInPictureWasStartedWhenEnteringBackground
_pictureInPictureController.pictureInPictureSuspended
_pictureInPictureController.pictureInPictureActive
_pictureInPictureController.pictureInPicturePossible
v80@?0{?=qiIq}8^{CGImage=}32{?=qiIq}40q64@"NSError"72
v32@?0@"AVEditBehaviorContext"8@16@"AVKeyValueChange"24
EDIT_BEHAVIOR_CONTEXT_CANCEL
-[AVEditBehaviorContext rotateClockwise]
editView.scrubbing
editView.trimming
playerController.player.timeControlStatus
playerController.player.currentItem.presentationSize
playerController.player.currentItem.duration
avkit_currentEditBehaviorContext
AVOverflowButtonDidShowContextMenu
AVOverflowButtonDidHideContextMenu
@"UIMenu"16@?0@"NSArray"8
More Controls
 [%f, %@, %@]
_avairtvui._tcp.
AVKitAir/1
-[AVAirMessage messageDataRepresentation]
mimetype
languagetag
compression
application/octet-stream
%@:%@
item
messagetype
length
-[AVAirMessage jsonDataRepresentation]
 %@: %@
type
-[AVAirMessage initWithMessageType:itemIdentifier:dictionaryRepresentation:]
+[AVAirMessage messageWithParts:]
+[AVAirMessage _nameForDataCompressionAlgorithm:]
none
lzfse
zlib
lzma
+[AVAirMessage _decompressBodyData:forCompressionAlgorithm:]
+[AVAirMessage isAirMessagingEnabled]_block_invoke
airmessaging
build
sender
kern.osversion
%@ does not support unarchiving from a nib.
-[AVPictureInPictureViewController dealloc]
-[AVPictureInPictureViewController initWithPictureInPicturePlayerLayerView:]
@"UIStackView"24@?0@"NSArray"8d16
@"UILabel"16@?0d8
*** -%@ only defined for abstract class.  Define %c[%@ %@]!
*** -%@ cannot be sent to an abstract object of class %@: Create a concrete instance!
time stamp
value
*** initialization method -%@ cannot be sent to an abstract object of class %@: Create a concrete instance!
UIScreen.nativeBounds.size: %@
Content Match: %@
Preferred Color Mode: %@
Disabled
Enabled
Preferred Refresh Rate: %@Hz
Best Variant: %@ %@
Current Variant: %@ %@
--------
Current Display Mode: %@ %@ @ %@Hz
%0.f
%.0f
%.0fx%0.f
HDR10
Dolby
Unknown
naturalSize
formatDescriptions
v16@?0@"AVSecondScreenDebugAssistant"8
player.currentItem.tracks
player.currentItem
debugInfoDisplay.preferences
debugInfoDisplay.currentMode
enableSecondScreenHUD
InternalBuild
com.apple.springboard
feC7TgoAAKLjn/KU8JAKFA
v32@?0@"AVPresentationController"8@16@"NSNotification"24
-[AVPresentationController _observeSceneDidBecomeActiveForRestoringRotatability]_block_invoke
-[AVPresentationController dismissalTransitionDidEnd:]
completed
-[AVPresentationController dismissalTransitionWillBegin]
-[AVPresentationController presentationTransitionDidEnd:]
-[AVPresentationController presentationTransitionWillBegin]
-[AVPresentationController dealloc]
-[AVPresentationController initWithPresentedViewController:presentingViewController:withConfiguration:]
v32@?0@"AVHomeIPCameraBehaviorContext"8@16@"NSNotification"24
-[AVHomeIPCameraBehaviorContext setPlaybackControlsIncludePictureInPictureButton:]
playbackControlsIncludePictureInPictureButton
-[AVHomeIPCameraBehaviorContext setCanStartPictureInPictureAutomaticallyWhenEnteringBackground:]
canStartPictureInPictureAutomaticallyWhenEnteringBackground
-[AVHomeIPCameraBehaviorContext setLivePreviewActive:]
livePreviewActive
-[AVHomeIPCameraBehaviorContext setZoomingEnabled:]
zoomingEnabled
-[AVSeymourBehaviorContext hidePlaybackControlsImmediately]
-[AVAirMessageTransformer dataForMessage:]
missing implementation
+[AVDismissalExpanseCoordinator coordinateDismissalWithExpanseSessionForPlayer:cancellable:dismissalBlock:]
+[AVDismissalExpanseCoordinator coordinateDismissalWithExpanseSessionForPlayer:cancellable:dismissalBlock:]_block_invoke
identifier
extendedLanguageTag
localeIdentifier
time
duration
dataType
startDate
-[AVMetadataItem(AVAirSerialization) airDictionaryRepresentation]
b64:%@
+[AVMetadataItem(AVAirSerialization) itemWithAirDictionaryRepresentation:]
b64:
%@ %@
Right
 Left
 None
Bounce
    Completed
   Completing
    Cancelled
   Cancelling
Transitioning
   Prohibited
     Possible
         Idle
-[AVPlaybackContentTransitioningView setStateDescription:]
MEDIA_SELECTION_VIEW_CONTROLLER_AUDIO_OPTIONS_HEADER_TITLE
MEDIA_SELECTION_VIEW_CONTROLLER_LEGIBLE_OPTIONS_HEADER_TITLE
AVMediaSelectionViewControllerCellReuseIdentifier
v16@?0@"<UIViewControllerTransitionCoordinatorContext>"8
-[AVMediaSelectionTableViewController dealloc]
-[AVMediaSelectionTableViewController initWithStyle:]
MEDIA_SELECTION_VIEW_CONTROLLER_NAVIGATION_ITEM_TITLE
AVPictureInPictureControllerWillStartNotification
AVPictureInPictureControllerDidStartNotification
AVPictureInPictureControllerWillStopNotification
AVPictureInPictureControllerDidStopNotification
AVPictureInPictureControllerPlaybackStateDidChangeNotification
AVPictureInPictureControllerPlaybackStateIsPlayingKey
AVPictureInPictureControllerContentSourceKey
v32@?0@"AVPictureInPictureController"8@16@"NSNotification"24
v32@?0@"AVPictureInPictureController"8@16@"AVKeyValueChange"24
readyForDisplay
videoRect
player
-[AVPictureInPictureController setContentSource:]_block_invoke
owner.isOtherPictureInPictureActive
anyPictureInPictureActive
-[AVPictureInPictureController pictureInPicturePlatformAdapter:statusDidChange:fromStatus:]
shouldRetainSource
self.sourceIfRetainedDuringPictureInPicturePlayback == nil
-[AVPictureInPictureController pictureInPicturePlatformAdapter:prepareToStopForRestoringUserInterface:]
-[AVPictureInPictureController setPictureInPicturePossible:]
pictureInPicturePossible
-[AVPictureInPictureController setRequiresLinearPlayback:]
requiresLinearPlayback
-[AVPictureInPictureController setCanStartAutomaticallyWhenEnteringBackground:]
canStartAutomaticallyWhenEnteringBackground
-[AVPictureInPictureController setMicrophoneEnabled:]
microphoneEnabled
-[AVPictureInPictureController setAllowsPictureInPicturePlayback:]
allowsPictureInPicturePlayback
-[AVPictureInPictureController startPictureInPicture]
-[AVPictureInPictureController _commonInitWithSource:]_block_invoke
%@ is not a valid initializer. You must call -[%@ initWithPlayerLayer:].
PictureInPictureIndicatorLarge
-[AVPlayerLayer(AVPictureInPictureContentSource) avkit_stopRoutingVideoToPictureInPictureViewController:]
self.isPIPModeEnabled
-[AVPlayerLayer(AVPictureInPictureContentSource) avkit_startRoutingVideoToPictureInPictureViewController:]
 (-> [%@...%@])
[%@...%@]
-[AVTimeRange timeRangeByAddingTimeInterval:shiftingDates:]
AVTimeRange.m
false
startTime
-[AVTimeRange initWithUnionOfCMTimeRanges:]
B16@?0@"AVTimeRange"8
v32@?0@"AVTimeRange"8Q16^B24
-[AVExternalPlaybackController _invokeClientCompletionHandlerWithPlaybackState:]
-[AVExternalPlaybackController willBeginPlaybackFromAppWithBundleID:completionHandler:]
v16@?0Q8
-[AVExternalPlaybackController willBeginPlaybackFromAppWithBundleID:completionHandler:]_block_invoke
MPMediaControlsConfiguration
AVExternalPlaybackStatePlaybackCancelled
AVExternalPlaybackStateWillPlayExternally
AVExternalPlaybackStateWillPlayLocally
%02d:%02d:%02d%@%02d
%lu F
-[AVPictureInPicturePlatformAdapter(Common) _setRoutingVideoToHostedWindow:pictureInPictureViewController:source:]
shouldRoute
-[AVPictureInPicturePlatformAdapter(Common) _updateStatusUsingProposedStatus:]
self.status != AVPictureInPictureControllerStatusProhibited
-[AVPictureInPicturePlatformAdapter(Common) _setStatusAndNotifyDelegateIfNeeded:]
%@ - selected
Compact Double Speed
Double Speed
Compact Faster Speed
Faster Speed
Compact Fast Speed
Fast Speed
Compact Normal Speed
Normal Speed
Compact Half Speed
Half Speed
v16@?0@"AVCABackdropLayerView"8
inputColorMatrix
inputIntermediateBitDepth
inputQuality
inputNormalizeEdges
inputRadius
v32@?0@"AVRoutePickerView"8@16@"NSNotification"24
/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
/System/Library/Frameworks/MediaPlayer.framework/Contents/MacOS/MediaPlayer
MPMediaControls
Unable to find class %s
-[AVRoutePickerView updateButtonAppearance]
Inactive
Active
-[AVRoutePickerView setAirPlayActive:]
airPlayActive
com.apple.avkit.avroutepickerview
%@ is not a valid initializer. You must call -[%@ initWithTraitCollection:opaque:].
PICTURE_IN_PICTURE_INDICATOR_LAYER_TITLE
Mute
Mute Toggle
currentTime
maxTime
minTime
playerController.minTiming
playerController.maxTiming
targetTime
v32@?0@"AVZoomingBehaviorContext"8@16@"NSNotification"24
-[AVNewsWidgetPlayerBehaviorContext setCustomContentTransitioningInfoPanel:]
-[AVNewsWidgetPlayerBehaviorContext updateStartLeftRightContentTransitionButtonsEnabled]_block_invoke
-[AVNewsWidgetPlayerBehaviorContext setStartPreviousContentTransitionButtonEnabled:]
startPreviousContentTransitionButtonEnabled
-[AVNewsWidgetPlayerBehaviorContext setStartNextContentTransitionButtonEnabled:]
startNextContentTransitionButtonEnabled
-[AVNewsWidgetPlayerBehaviorContext setVideoGravityForTransitioningContent:]
-[AVNewsWidgetPlayerBehaviorContext initWithAVKitOwner:]
-[AVPlayerViewController(AVPlayerViewController_NewsOnly) startContentTransition:]
-[AVPlayerViewController(AVPlayerViewController_NewsOnly) setContentTransitioningDelegate:]
-[AVTransition completeTransition:]
didComplete
-[AVTransition completeTransition:]_block_invoke
-[AVTransition cancelInteractiveTransition]
-[AVTransition finishInteractiveTransition]
-[AVTransition startInteractiveTransition]
-[AVTransition dealloc]
-[AVTransition initWithTransitionContext:]
v32@?0@"AVLayoutItemAttributes"8Q16^B24
v32@?0@"AVLayoutViewRowHead"8Q16^B24
rectangle.portrait.arrowtriangle.2.inward
rectangle.portrait.arrowtriangle.2.outward
rectangle.arrowtriangle.2.inward
rectangle.arrowtriangle.2.outward
arrow.up.left.and.arrow.down.right
xmark
captions.bubble
globe
pause.fill
play.fill
pip.enter
pip.exit
gobackward.15
goforward.15
forward.end.alt.fill
backward.end.fill
forward.end.fill
airplayvideo
VolumeMuted
VolumeZero
VolumeLow
VolumeMedium
VolumeHigh
ellipsis
speedometer
AVMobileImageNameNoImage
com.apple.avkit.UIKit_AVAdditions.AVMobileTextImageCache
com.apple.avkit.UIKit_AVAdditions.AVMobileImageLoadingQueue
.westernarabic
latn
goforward.90
goforward.75
goforward.60
goforward.45
goforward.30
goforward.10
gobackward.90
gobackward.75
gobackward.60
gobackward.45
gobackward.30
gobackward.10
com.apple.avkit.images
v16@?0@"UIGraphicsImageRendererContext"8
AVRoutePickerViewCircularAirPlayGlyph
AVRoutePickerViewSquareAirPlayGlyph
VolumeGlyph
mute
half
full
plusL
caml
-RTL
v32@?0@"CAState"8Q16^B24
v32@?0@"CALayer"8Q16^B24
LKStateTransitionElement
LKStateTransition
LKStateSetProperty
LKStateSetValue
LKStateRemoveElement
LKStateRemoveAnimation
LKStateElement
LKStateAddElement
LKStateAddAnimation
LKEventHandler
LKState
com.apple.avkit.caml
v32@?0@"AVTurboModePlaybackControlsPlaceholderView"8@16@"AVKeyValueChange"24
muted
timeControlStatus
*** AVPlayerViewControllerAnimationCoordinator: Animations added to coordinator after animations performed will be ignored.
%@ is not a valid initializer. You must call -[%@ initWithTimeInterval:queue:block:repeats:].
com.apple.avkit.AVTimer.timer %p
com.apple.avkit.AVTimer.manage %p
AVSecondScreenConnectionVideoDisplaySizeChanged
AVSecondScreenConnectionReadyDidChangeNotification
AVSecondScreenConnectionActiveDidChangeNotification
AVSecondScreenConnectionPlayingDidChangeNotification
AVSecondScreenConnectionPreferredDisplayCriteriaDidChangeNotification
-[AVSecondScreenConnection _currentItemIsReadyToPlayVideoOrLoadingWhileActive]
isReadyToPlayOrLoadingWhileActive
-[AVSecondScreenConnection _determineIsReadyToConnect]
preferredDisplayCriteria
availableVideoDynamicRanges
v16@?0@"AVSecondScreenConnection"8
currentItem.asset
usesExternalPlaybackWhileExternalScreenIsActive
currentItem.hasVideo
currentItem.status
airPlayVideoActive
externalPlaybackActive
allowsExternalPlayback
-[AVSecondScreenConnection setPlayerLayer:]
-[AVSecondScreenConnection dealloc]
v32@?0@"AVPlayerVolumeController"8@16@"AVKeyValueChange"24
playerController.volume
-[AVAirMessageParts decompressBodyUsingNamedAlgorithm:]
-[AVAirMessageParts decompressBodyUsingAlgorithm:]
-[AVAirMessageParts bodyAsJSON]
-[AVAirMessageParts(AVAirMessages) airMessage]
sublayerTransform
6.6x
Fractional Numeric Playback Speed
Whole Numeric Playback Speed
PLAYBACK_CONTROLS_VIEW_CONTROLLER_SCRUB_INSTRUCTIONS_SLIDE_UP_TITLE_LABEL_TEXT
-[AVTransportControlsView initWithFrame:styleSheet:]
transportControlsView
Skip To Previous
Skip To Next
Skip Backward
Skip Forward
Play/Pause
Media Selection
detatchedExtraContentStackView
Live
PLAYBACK_CONTROLS_VIEW_CONTROLLER_LIVE_LABEL_TEXT
Live Broadcast
PLAYBACK_CONTROLS_VIEW_CONTROLLER_LIVE_BROADCAST_LABEL_TEXT
Time Remaining
v16@?0@"NSString"8
Time Elapsed
@"AVLabel"24@?0@"NSString"8@"NSString"16
Scrubber
v16@?0@8
v16@?0@"<AVBehaviorContext>"8
v16@?0@"<AVBehavior>"8
-[UIWindowScene(AVSecondScreenAdditions) _avkit_setPreferredRefreshRate:HDRMode:overscanCompensation:]
None
B24@?0@"UIWindow"8@"NSDictionary"16
TVOut
wireless
-[UIScene(AVSecondScreenAdditions) _avkit_setPreferredRefreshRate:HDRMode:overscanCompensation:]
B24@?0@"UIScene"8@"NSDictionary"16
AVPlaybackControlsControllsShowsLoadingIndicatorNotification
AVPlaybackControlsControllerShowsLoadingIndicatorValueKey
-[AVPlaybackControlsController _updateSecondScreenConnectionReadyToConnect]
readyToConnect
v16@?0@"AVNowPlayingInfoController"8
v16@?0@"UIImage"8
v32@?0@8@16@"AVKeyValueChange"24
v32@?0@"AVPlaybackControlsController"8@16@"NSNotification"24
v32@?0@"AVPlaybackControlsController"8@16@"AVKeyValueChange"24
maximumTime
minimumTime
showsPlaybackSpeedButton
showsMediaSelectionButton
showsRoutePickerView
showsStartContentTransitionButtons
showsSkipButtons
showsTransportControls
startRightwardContentTransitionButtonEnabled
startLeftwardContentTransitionButtonEnabled
seekingEnabled
canShowLoadingIndicator
hasBecomeReadyToPlay
playerController.hasVideo
playbackViewFrame
showsLoadingIndicator
playerController.loadedTimeRanges
playerController.playingOnMatchPointDevice
hasSeekableLiveStreamingContent
fullScreen
prefersMuted
v24@?0@"AVPlaybackControlsController"8@"AVDisplayLink"16
playerController.currentAssetIfReady
playButtonsShowPauseGlyph
showsProminentPlayButton
prominentPlayButtonCanShowPauseGlyph
-[AVPlaybackControlsController _autoHideControlsAfterDelay:]
-[AVPlaybackControlsController showPlaybackControls:immediately:]
_showingPlaybackControls
-[AVPlaybackControlsController flashPlaybackControlsWithDuration:]
-[AVPlaybackControlsController _observeBoolForKeyPath:usingKeyValueObservationController:observationHandler:]
v16@?0@"UIAction"8
EXTERNAL_PLAYBACK_OVERFLOW_MENU_ITEM_TITLE
-[AVPlaybackControlsController setShowsTimecodes:]
showsTimecodes
-[AVPlaybackControlsController setPlaybackControlsShouldControlSystemVolume:]
playbackControlsShouldControlSystemVolume
-[AVPlaybackControlsController setShowsVideoGravityButton:]
showsVideoGravityButton
-[AVPlaybackControlsController setUpdatesNowPlayingInfoCenter:]
updatesNowPlayingInfoCenter
-[AVPlaybackControlsController setVolumeControlsCanShowSlider:]
volumeControlsCanShowSlider
-[AVPlaybackControlsController setCanIncludePlaybackControlsWhenInline:]
canIncludePlaybackControlsWhenInline
-[AVPlaybackControlsController setHasCustomPlaybackControls:]
hasCustomPlaybackControls
-[AVPlaybackControlsController setShowsPlaybackControls:]
showsPlaybackControls
-[AVPlaybackControlsController setShowsMinimalPlaybackControlsWhenEmbeddedInline:]
showsMinimalPlaybackControlsWhenEmbeddedInline
needsTimeResolver
v16@?0@"AVPlaybackControlsController"8
playerController.usesExternalPlaybackWhileExternalScreenIsActive
scrubbingOrSeeking
-[AVPlaybackControlsController dealloc]
-[AVPlaybackControlsController initWithPlayerViewController:]
playbackControlsView.showsPlaybackControls
resumingUpdates
playbackControlsView
playbackSuspendedForScrubbing
playerViewControllerIsBeingTransitionedWithResizing
playbackControlsIncludeStartContentTransitionButtons
timeResolver.maxTime
timeResolver.minTime
timeResolver.targetTime
playerController.hasMediaSelectionOptions
playerViewControllerHasInvalidViewControllerHierarchy
hasPlaybackBegunSincePlayerControllerBecameReadyToPlay
shouldEnterFullScreenWhenPlaybackBegins
preferredUnobscuredArea
inlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused
playButtonHandlerForLazyPlayerLoading
playerController
pictureInPictureController.pictureInPictureActive
playerController.allowsExternalPlayback
multipleRoutesDetected
coveringWindow
playerViewControllerIsPresentedFullScreen
playerViewControllerIsPresentingFullScreen
-[AVSecondScreenViewController setPlayingOnSecondScreen:]
playingOnSecondScreen
v32@?0@"AVSecondScreenPlayerLayerView"8@16@"AVKeyValueChange"24
layer.videoRect
-[AVSecondScreenViewController dealloc]
v24@?0@"AVTransitionController"8@"AVDisplayLink"16
-[AVTransitionController animationEnded:]
-[AVTransitionController startInteractiveTransition:]
-[AVTransitionController wantsInteractiveStart]
wantsInteractiveStart
v32@?0@"AVPictureInPictureSampleBufferDisplayLayerView"8@16@"NSNotification"24
VideoQueue_CAContextIDDidChange
v32@?0@"AVPictureInPictureSampleBufferDisplayLayerView"8@16@"AVKeyValueChange"24
bounds
contentDimensions
v32@?0@"AVPictureInPictureSampleBufferDisplayLayerView"8@"CALayerHost"16@"AVKeyValueChange"24
beginTime
AVPlayerControllerCurrentTimeJumpedNotification
AVPlayerControllerPlaybackDidEndNotification
AVPlayerControllerContentDimensionsChangedNotification
AVPlayerControllerSelectedMediaOptionDidChangeNotification
AVPlayerControllerDidSeekChapterNotification
AVPlayerControllerDidSeekChapterChapterKey
AVPlayerControllerDidBeginScanningNotification
AVPlayerControllerDidEndScanningNotification
AVPlayerControllerScanningDirectionKey
AVPlayerControllerPIPActivitySessionIdentifierDidChangeNotification
availableTrackAssociationTypes
mediaCharacteristics
metadata
mediaType
languageCode
enabled
commonMetadata
availableMetadataFormats
nominalFrameRate
assetCache
tracks
maximumVideoResolution
availableChapterLocales
availableMediaCharacteristicsWithMediaSelectionOptions
compatibleWithAirPlayVideo
streaming
composable
hasProtectedContent
-[AVPlayerController _updateRateForScrubbingAndSeeking]
Reducing Resources for Picture in Picture
AVPlayerControllerResourceReductionIdentifier
v16@?0@"BSSimpleAssertion"8
-[AVPlayerController endReducingResourcesForPictureInPicturePlayerLayer:]
-[AVPlayerController beginReducingResourcesForPictureInPicturePlayerLayer:]
shouldRemovePlayer
PIPStashPeakBitRate
PIPStashBufferDuration
-[AVPlayerController externalPlaybackAirPlayDeviceLocalizedName]
EXTERNAL_PLAYBACK_DEVICE_NAME_NIL
-[AVPlayerController updateMinMaxTiming]
-[AVPlayerController seekOrStepByFrameCount:]
-[AVPlayerController actuallySeekToTime]
com.apple.motion.notserializable
-[AVPlayerController setCoordinatedPlaybackActive:]
-[AVPlayerController setVolume:]
-[AVPlayerController togglePlayback:]
-[AVPlayerController pauseForAllCoordinatedPlaybackParticipants:]
-[AVPlayerController autoplay:]
-[AVPlayerController play:]
-[AVPlayerController setPlaying:]
v16@?0d8
-[AVPlayerController setRate:]_block_invoke
-[AVPlayerController _observeValueForKeyPath:oldValue:newValue:]
com.apple.videos
isPiPAvailable
audioFormats
player.externalPlaybackActive
seekToTimeInternal
player.rate
player.currentItem.loadedTimeRanges
player.currentItem.playbackBufferEmpty
player.currentItem.playbackLikelyToKeepUp
player.currentItem.hasEnabledVideo
player.currentItem.hasEnabledAudio
hasLiveStreamingContent
player.currentItem.seekableTimeRanges
q24@?0@"AVChapter"8@"AVChapter"16
-[AVPlayerController _queuePlayer]
v16@?0@"AVPlayerController"8
currentVideoMediaSelectionOption
hasEnabledVideo
currentAudioMediaSelectionOption
hasEnabledAudio
player.currentItem.duration
readyToPlay
player.currentItem.asset
v32@?0@"AVPlayerController"8@16@"AVKeyValueChange"24
player.currentItem.presentationSize
-[AVPlayerController dealloc]
v32@?0@"AVPlayerController"8@16@"NSNotification"24
-[AVPlayerController startInspectionIfNeeded]_block_invoke_3
-[AVPlayerController startInspectionIfNeeded]_block_invoke
shouldRestoreRate
delegateCanResumeAfterInterruption
-[AVPlayerController initWithPlayer:]
com.apple.avkit.playerControllerAssetInspectionQueue
com.apple.avkit.seekQueue
-[AVPlayerController init]
playingOnExternalScreen
hasVideo
status
pictureInPictureSupported
externalPlaybackType
player.allowsExternalPlayback
canSeek
contentChapters
atMinTime
atMaxTime
pictureInPictureInterrupted
touchBarRequiresLinearPlayback
player.currentItem.canPlayFastReverse
player.currentItem.canPlayFastForward
seekableTimeRanges
player.timeControlStatus
completelySeekable
player.currentItem.seekableTimeRangesLastModifiedTime
player.currentItem.liveUpdateInterval
maxTiming
minTiming
player.currentItem.hasVideo
contentDuration
player.currentItem.forwardPlaybackEndTime
forwardPlaybackEndTime
player.currentItem.reversePlaybackEndTime
reversePlaybackEndTime
timing
presentationSize
player.muted
player.volume
player.error
player.currentItem.status
player.status
v32@?0{?=qiIq}8
-[AVPlayerController(AVPlayerControllerExternalPlaybackSupportInternal) setHandlesAudioSessionInterruptions:]
handlesAudioSessionInterruptions
player.usesExternalPlaybackWhileExternalScreenIsActive
-[AVPlayerViewControllerContentView setShowsAudioOnlyIndicator:]
showsAudioOnlyIndicator
AudioOnlyIndicator
UnsupportedContentIndicator
com.apple.avkit.SharedPreferences
automaticVideoGravity
{accessibilityID: %@ minSize: %@ isCollapsed: %@ isIncluded: %@ displayPriority: %ld}
q24@?0@"UIView<AVLayoutViewItem>"8@"UIView<AVLayoutViewItem>"16
v32@?0@"UIView<AVLayoutViewItem>"8Q16^B24
<%@: %p> - %@
v32@?0@"NSValue"8Q16^B24
v16@?0q8
-[AVPlaybackControlsView updateDisplayControlsVisibilityIncludedButtons:]
self.prefersFullScreenButtonIncluded
self.prefersDoneButtonIncluded
self.prefersVideoGravityButtonIncluded
self.prefersPiPButtonIncluded
v12@?0B8
-[AVPlaybackControlsView setFullScreen:]
-[AVPlaybackControlsView dealloc]
-[AVPlaybackControlsView initWithFrame:styleSheet:]
v32@?0@"AVPlaybackControlsView"8@16@"NSNotification"24
volumeControls
prominentPlayButton
ScreenModeControls
Picture in Picture
Zoom
Full Screen
Done
AVKitAirResponse/1
response-status
-[AVAirMessageResponse bodyData]
description
%@ status %ld; "%@"
response-description
+[AVAirMessageResponse messageWithVersion:headers:bodyData:]
com.apple.
com.apple.avkit.localizedStringBundleQueue
bounds.origin
position
v32@?0@"AVSampleBufferDisplayLayerPlayerController"8@16@"AVKeyValueChange"24
v8@?0
affineTransform
transform
frame
v32@?0@"AVSampleBufferDisplayLayerPlayerController"8@16@"NSNotification"24
-[AVSampleBufferDisplayLayerPlayerController seekByTimeInterval:toleranceBefore:toleranceAfter:]
-[AVSampleBufferDisplayLayerPlayerController invalidatePlaybackState]
contentTimeRange
contentDurationWithinEndTimes
playbackState.timelineDuration
playbackState
playbackState.timelineRate
enqueuedBufferDimensions
pictureInPictureAvailable
paused
AVSBDLPlayerControllerKey
%@-%@-%@
MEDIA_SELECTION_OPTION_AUTO_TITLE
MEDIA_SELECTION_OPTION_OFF_TITLE
Only access this property on the main queue!
%s Setting: %ld
%s starting for playerController %{public}@
%s failed; status = %d
%s playbackCommand: %ld
Error: Unrecognized PGPlaybackAction - %ld
%s pictureInPictureProxy: %@ reason: %ld
%s pictureInPictureProxy: %@
%s error: %@
Interruption notification: AVPlayerPlaybackWasInterruptedNotification player.rate: %.1f userinfo: %@
%s backgroundPlaybackPolicy %{public}ld
%s canStartAutomaticallyWhenEnteringBackground: %s isFullScreen - %s alwaysStartsAutomaticallyWhenEnteringBackground - %s allowsPictureInPicturePlayback - %s playerController.isPlaying - %s status != prohibited - %s
%s %d
%s %@ --> %@
%s %s %s
_sceneActivationState == %ld for start pictureinpicture
%s Removing channel from active list (%@)
%s unable to receive message : %{public}@
%s unexpectedly received a response -- expected a message only
%s I just received something, I know not what
%s Unexpectedly received object from inactive channel (%@)
%s responding with result %d
%s %{public}@
%s new channel %@; activeChannels has %@
%s received message %{public}@
%s Sending all available information for this player item.
%s Sending external metadata (%ld items)
%s Result of sending external metadata: %ld [%{public}@]
%s mediaOption: %{public}@ mediaCharacteristic: %{public}@
%s Skipped setting identical option.
%s Changing MACaptionAppearanceDisplayType: %ld -> %ld
%s Enabling automatic display type because receiver changed captions to forced-only.
%s Persisting preferences for remote legible option change: %{public}@ -> %{public}@
%s Selected legible option: %{public}@ 
%s Selected audible option: %{public}@ 
*** %s Received a forced-only media selection (%{public}@) when display type was NOT forced-only (was %ld). mediaSelectionCriteriaCanBeAppliedAutomaticallyToMediaSelectionGroup: %d. ***
*** %s Received a non-forced-only media selection (%{public}@) from automatic media selection when display type was forced-only. ***
%s LegibleMediaSelectionOptions: %{public}@
%s AudioMediaSelectionOptions: %{public}@
*** %s must be called on main thread. ***
%s %d %p
%s subclass: %@
We expect all menu elements in this menu to be UIActions.
%s Did select media selection option: %@
Cannot unmute when muting.
Cannot mute when unmuting.
Error: Internal inconsistency - playback rate menu item count does not equal the rate collection count. 
Cannot reset when not tracking.
Cannot continue if still waiting.
Cannot cancel when not tracking.
Cannot finish when not tracking.
Began tracking when already tracking.
Recognized pan gesture without enabling pan to dismiss.
Recognized pinch gesture without enabling pinch to present or pinch to dismiss.
Pinch to present and pinch to dismiss cannot be simultaneously enabled.
%s %@ %ld
%s %@ %@
%s %@
didUpdateTXTRecordData
didStop resolution request %@
didNotResolve %@
didNotResolve %@ due to timeout!
didResolveAddress %@
%s localAirPlayReceiverPairingIdentity = %@
Found netService for the current AirPlay device; posting .DidResolveAirPlayDeviceNetServiceNotification..
willResolve %@
didRemoveService %@
didFindService %@
didNotSearch (errorDict = %{public}@)
%s %@ ===> %@
%s failed to get the input/output streams!
%s current device UID = %{public}@; service identifier = %{public}@
%s %p getting device info...
%s have device info and device. Getting more information...
AppleTV pairedDeviceRef = %@
_updateAirPlayPairedDeviceAsync: first grouped device is not AppleTV (%@)
_updateAirPlayPairedDeviceAsync: grouped devices count != 1
_updateAirPlayPairedDeviceAsync: no grouped devices: localDevice = %@
_updateAirPlayPairedDeviceAsync failed; error = %{public}@
%s done.
%s getActiveOrigin: %@, %@
%s have [active] device info. Getting more information...
[active] AppleTV pairedDeviceRef = %@
[active] first grouped device is not AppleTV (%@)
[active] grouped devices count != 1
[active] no grouped devices; activeDevice = %@
%s [active] done.
Found service for the current AirPlay device! Posting AVBonjourServiceClientDidResolveAirPlayDeviceNetServiceNotification..
delegate has not been set!
Stopping discovery for %{public}@
Beginning discovery for %{public}@...
%s kMRDeviceInfoDidChangeNotification received; note = %{public}@
%s AVExternalPlaybackMonitorAirPlayVideoActiveDidChangeNotification received; note = %{public}@
Pause command
Stop command
Play command
Toggle play pause command
Next track command
Can not seek chapter forward; skipping forward %.2f seconds instead.
Previous track command
Can not seek chapter backward; skipping backward %.2f seconds instead.
Skip forward command
Skip backward command
Begin fast forward command
End fast forward command
Begin rewind command
End rewind command
Change playback rate command
Seek to playback position command
Enable language option command
Disable language option command
Remote Command Status: %ld
Update now playing info if needed: %d
%s playerController: %@
You must call -[AVObservationController stopAllObservation] before destroying it, perhaps in its owner's dealloc. %@
%s %@ -> %@
Attempted to connect with a screen that is not available.
%s Created second window %p on %@
%s %@ foreground: %d haswindows: %d
%s %{public}@: ErrorOccurred
%s %{public}@: OpenCompleted
%s %{public}@: EndEncountered
%s %{public}@: HasSpaceAvailable
%s %{public}@: HasBytesAvailable
%s inputStream hasBytesAvailable
%s ... but the data couldn't be read
%s message data failed to deserialize
%s unexpected message/response received; delegate not expecting messages
%s an error prevented bytes from being read! (%{public}@)
%s the input data disappeared! the input stream has closed.
%s the input data disappeared! Are multiple clients trying to read from this stream? (status = %d)
%s shutting down streams %p and %p
%s failed to transform response object (%@)
%s failed to transform message object (%@)
%s sending %ld bytes...
%s ...succeeded, now waiting for/reading the response...
%s writing %ld bytes...
%s wrote %ld bytes
%s write error occurred
%s write error: stream closed
%s response never received
%s bye bye
%s Starting event thread..
%s Ending event thread..
%s (call unexpected! message will be dropped)
%s channel = %@; delegate = %@
%s the channel.delegate is already set
%s cannot send message; we don't have a channel to the AirPlay receiver (if there is one).
%s cannot send message yet; please wait for output stream to finish opening!
%s telling channel to sendObject (%@)
%s sendObject completed with status = %d; response message: %@
%s Attempted to set SystemVolumeHUD visibility before setting Client Identifier or Scene Identifier.
%s Setting volume on AVSystemController to: %.2f for category: %@
%s %@ volume HUD for windowScene with ID: %@
%@: It is an error to set the target volume without calling -[AVVolumeController begin/endChangingVolume].
setDefaultPlaybackRate called during linear playback. Updating default linear playback rate to %f
%s New playback rate selected: %@
%s pending restore user interface for presentation context dismissal
%s Disabling legible display for picture in picture player layer
Target view should be our own view when the full screen view controller is being transitioned!
Detached fullscreen is only available on Mac Catalyst.
Unexpected value for the transition controller's presentedViewController
Scrub gesture did end.
Scrub gesture will begin.
Scrub gesture will transition to momentum phase with remaining velocity %f.
%s <%{public}@ %p> %@ respond to %{public}@
%s .status: %ld .hasEnabledVideo: %d .hasEnabledAudio: %d
The player controller should have content before calling %@.
It's an error to repeatedly add observers.
Did receive stop command notification.
Already performed initial setup.
%s Attempt to load view when view was already loaded.
Expected only one context for AVPlayerViewControllerBehaviorContext. This is fine, but probably means AVPlayerViewControllerBehaviorContext needs to be refactored
%s %f
%s New playback rate collection set: %@
%s %@ layoutClass: %ld
%s %ld
%s Did not get a valid video composition.
%@ did not receive a view from its delegate, %@.
%s failed to compress data (%ld/%{public}@): %{public}@
%s failed to serialize %{public}@ to JSON (%{public}@)
%s incoming message type %d is unrecognized!
%s removing unrecognized key '%{public}@'
%s error: json deserialization failed
%s This code has not been updated to handle algorithm %ld!
%s failed to decompress data; algorithm name '%{public}@' is not recognized
%s failed to decompress data (%{public}@ algorithm): %{public}@
%s isAirMessageEnabled %@; global %@; app %@; environ %{public}@
value for '%{public}@' is neither a string nor convertible to one
Don't initialize this unless AVSecondScreenDebugHUDEnabled()!
%s Disabling autorotation for window: %p
%s Enabling autorotation for window: %p
AVSeymourBehaviorContext is no longer around, playerViewController will not be dismissed.
%s value does not implement AVMessageTransformerProtocol
%s value not represented by NSData (%@)
%s Playback coordination dismissal delegate not implemented. Dismissing.
%s Not in Expanse session (AVPlayer.backgroundPIPAuthorizationToken not set). Dismissing.
%s Playback coordination dismissal delegate completed. Dismissing.
%s Playback coordination dismissal delegate completed but cancelled. Not dismissing.
%s ** WARNING: the value of this metadata item %@ has not yet been loaded; we're about to force it
%s ** AVMetadataItem representation has no identifier!
%s The value passed for '%{public}@' is raw data, but we do not expect it. Discarding.
%s Metadata values should not be arrays/dictionaries. Lookin' at you, '%@'.
%s %@ Offset: %@ ActiveOrigin: %@ TransitioningOrigin: %@
Instance %@ attempted content transition while one was already active. Ignoring. %@
Attempt to transition while adjusting bounds.
Invalid state transition from %@ to %@.
This is where the problem is.
Invalid state transition
%s old: %ld --> new: %ld
Invalid track type for frame stepping.
Invalid input base frame time.
setMapDate:toTime: expects startDate to be valid. Did the caller want setMapTime:toDate: instead?
setMapDate:toTime: is changing _startTime to NAN!
%s There's a loadedTimeRange that doesn't respond to -CMTimeRangeValue (<%{public}@ %p>)
%s Calling client completion handler with playbackState: %@
%s isLongFormVideoApp = %i
%s Current routing session: %@, routingSessionManager.prefersLikelyDestinationsOverCurrentRoutingSession: %i
%s Using current routing session. Calling client completion handler with playbackState: %@
%s Not using current routing session. AVRoutingSessionManager has %lu likely external destinations: %@
%s Showing medium confidence picker.
%s No likely external destinations. Calling client completion handler with playback state: %@
%s Not a long-form video app. Calling client completion handler with playback state: %@
%s Medium confidence picker dismissed because MPMediaControlsDismissalReasonUserCancelled.
%s Medium confidence picker dismissed because MPMediaControlsDismissalReasonUnknown.
%s current status: %ld -> proposed status: %ld
%s  newStatus: %ld
Error: Internal inconsistency. Selected rate was not found in playback rate collection.
%@ should be called from a background thread
%s Setting mica color: (R: %.2f G: %.2f B: %.2f Alpha: %.2f) and state: %@.
Shouldn't already have a contentZooming view.
Content view unexpectedly had incomingContentView.
contentTransitioningPlayer should never be nil here.
Already had a content transition view, which is unexpected.
Warning: Attempted to start content transition on a %@, which was already transitioning. Ignoring.
Unexpected
Rendering image with text: "%@"
Error: -[UIImage avkit_imageFromString:font:completion:] called off of the main thread. The AVMobileTextImageCache should only be accessed on the main thread.
Unexpectedly missing URL for CAML file. %@
%@: %@ -> %@
%s failed to decompress data (%{public}@)
%s JSON deserialization failed: %{public}@
%s no class registered for version '%{public}@'
%s class %{public}@ does not implement messageWithParts:
Do not call this method when showing the content info panel.
%s Refresh: %.f HDRMode: %@ overscanCompensation: %@
%s This feature requires a UIWindowScene.
Called %@ before creating playback controls view!
%s delay: %f
%s duration: %f
%s Cannot observe keypath %@ %@
*** AVPlayerViewController cannot update status bar visibility while hosted in view service. ***
%@: Unexpected transition state.
%@ called with an invalid state %ld
Unexpected gesture kind.
Unexpected transitioning state.
Tried to dismiss a view controller without a presenting view controller. This is hard.
Cannot present view controller without a view controller from which to present.
Expected a source layer.
Expected a player controller.
Calls to -[AVPlayerController stopUsingNetworkResourcesForLiveStreamingWhilePaused] must be counterbalanced with calls to -[AVPlayerController startUsingNetworkResourcesForLiveStreamingWhilePaused].
Resource Reduction assertion was invalidated.
%s Using output context %@
Modifying seekableTimeRange by: %f
segmentDuration: %f
minTimingNeedsUpdate: %d, new minTiming with minTime: %f, rate: %f, old minTime: %f, delta: %f
maxTimingNeedsUpdate: %d, new maxTiming with maxTime: %f old maxTime: %f, delta: %f
%s stepByCount: %ld
%s sampleBasedSeekTarget: %f
%s time: %f toleranceBefore: %f toleranceAfter: %f
Seek completed: %s
Scrubbing Ended
Scrubbing Started
%s coordinatedPlaybackActive set to %d
%s notifyCoordinatedPlayback of pause: %@
%s setPlaying:YES (AVPlayerControllerAutoplayEnabled)
%s setPlaying:YES
Can play immediately: %d
Retrying play immediately.
Calling playImmediatelyAtRate: %f
Could not play immediately, setting a play immediately retry block.
%s %.1f on %p
%s immediately %.1f on %p
PlayerItemDidChange
New playerItem: <%{public}@: %p>
New asset: <%{public}@: %p>
SeekableTimeRanges changed {%f, %f} -> {%f, %f}.
liveStreamEventModePossible: %d
Time control status = %ld
Playback likely to keep up changed to: %@
%s setPlaying:YES because AVPlayerControllerAutoplayEnabled
isPlaybackBufferEmpty: %d
Rate changed to: %f
Ignoring rate change.
Ignored single rate change to: %f. Keeping current rate: %f
Failed to handle %@ %@
%s queuePlayer: %d
%s have AirPlay to AppleTV for %{public}@
%s have AirPlay to AppleTV, but externalPlaybackType = %ld
Interruption notification: AVAudioSessionInterruptionNotification player.rate: %.1f userinfo: %@
AVAudioSessionInterruptionTypeEnded: %f
%s player: %p
Never load the turboModePlaybackControlsPlaceholderView when the playbackControlsView is already loaded!
Has control that can only overflow, but no layout views can substitute others.
%@ - Computed more frames than we have arranged subviews. Number of arranged subviews: %ld -- current frame index: %ld
%@ called when initial layout not needed already set.
%@ %d
%s failed to serialize response body: %{public}@
%s response received: %{public}@
%s response version seems incorrect; have '%{public}@' but expecting '%{public}@'
%s response is invalid: the %{public}@ header is missing
%s  interval: %f shouldResumePlayback: %@
Done seeking.
Resuming playback after a seek.
Expect this to only be set once.
softlink:r:path:/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
softlink:r:path:/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
softlink:r:path:/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
AVView
AVAppStorePlayerView
AVAppStorePlayerLayerView
AVRouteDetectorCoordinator
AVContentOverlayView
AVAdditions
_AVSimplePlayerLayerView
AVPictureInPicturePlayerLayerView
AVPictureInPicturePlatformAdapter
AVPictureInPictureControlsStyleAppearance
NSObject
PGPictureInPictureProxyDelegate
AVPictureInPictureViewControllerDelegate
AVPictureInPicturePrerollAttributes
__AVPlayerLayerView
AVScrubberVelocity
AVScrubber
AVPlaybackControlsViewItem
AVLayoutViewItem
AVExternalGestureRecognizerPreventing
UIScrollViewDelegate
AVAirMessageNotificationCenter
AVAirTransportDelegate
AVBonjourServiceDelegate
AVChapter
NSCopying
AVPlayerItemAVKitData
AVKitAdditionsPrivate
AVPlaybackRouteSelecting_Private
AVPlaybackRouteSelecting
AVMediaSelection
AVPlayerController
AVScrollViewObserver
_UIScrollViewScrollObserver
AVVolumeSlider
AVNewsWidgetPlayerBehavior
AVBehavior
AVBehaviorInternal
AVPictureInPictureCALayerHostView
AVPictureInPictureSampleBufferDisplayLayerHostView
AVMediaSelectionMenuController
AVUserInteractionObserverGestureRecognizer
AVPlayerControllerVolumeAnimator
AVHomeIPCameraActionButtonHandling
AVHomeIPCameraBehavior
AVPictureInPictureContentSource
AVPictureInPictureContentSourceExtensions
AVMobilePlaybackRateMenuController
AVInteractiveTransitionGestureTracker
AVTransitionDriver
UIInteraction
UIGestureRecognizerDelegate
AVSecondScreenController
AVPresentationContext
AVBonjourServiceClient
NSNetServiceDelegate
NSNetServiceBrowserDelegate
AVNowPlayingInfoController
AVStatusBarBackgroundGradientViewSubview
AVStatusBarBackgroundGradientView
AVObservationController
AVKeyValueChange
AVProxyKVOObserver
AVMusicAppBehavior
AVMusicAppBehaviorContext
AVBehaviorContext
AVMetricsCollectionBehaviorContext
AVPlayerViewControllerBehaviorContext
AVBehaviorContextInternal
AVPlayerItem_AVMusicAppBehaviorContextAdditions
AVSecondScreen
AVStringPair
AVAirTransportStreams
NSStreamDelegate
AVAirTransport
StreamBased
AVAirMessageDispatcher
AVBonjourServiceClientDelegate
AVPictureInPictureVideoCallViewController
AVVideoCallPlayerController
AVSeymourBehavior
AVLoadingButtonView
AVVolumeHUDAssertion
MPVolumeDisplaying
AVSystemVolumeController
AVVolumeController
AVZoomingBehavior
AVPlayerViewControllerCustomControlsViewLayoutMarginsGuideProvidingView
AVPlayerViewControllerCustomControlsView
AVPictureInPicturePlaybackState
AVPlaybackControlsRoutePickerView
AVStyleSheet
AVEditBehavior
AVPlayerViewController
AVPlaybackControlsViewVisibilityDelegate
AVPlaybackRateCollectionDelegate
AVContentOverlayViewDelegate
AVTransitionControllerDelegate
AVFullScreenViewControllerDelegate
UIPopoverPresentationControllerDelegate
UIAdaptivePresentationControllerDelegate
AVPictureInPictureControllerDelegate
AVPlayerViewController_AdLibOnly
AVPlayerViewController_WebKitOnly
AVPlayerViewController_AppStoreOnly
AVPlayerViewControllerInternal
AVPlaybackControlsViewControllerActions
AVPlayerViewControllerTransitioningInternal
DeprecationsAndToBeRemoved
AVEditBehaviorContext
AVEditViewDelegate
AVEditViewDataSource
AVPlayerItem_AVEditBehaviorContextAdditions
AVFullScreenViewController
AVControlOverflowButton
AVExternalGestureRecognizerPreventer
AVPlaybackRate
AVDeprecated
AVAirMessage
AVAirMessageExtensions
AVPictureInPictureViewController
PGPictureInPictureViewController
PGPictureInPictureViewControllerSupport
AVExternalPlaybackIndicatorView
AVValueTiming
NSMutableCopying
NSSecureCoding
NSCoding
AVMutableValueTiming
AVConcreteMutableValueTiming
AVConcreteValueTiming
AVValueTimingCreation
AVExtendedValueTiming
AVExtendedMutableValueTiming
AVSecondScreenDebugAssistant
AVPresentationController
AVHomeIPCameraBehaviorContext
AVScrubbing
AVSeymourBehaviorContext
AVVolumeControlsController
AVPlaybackContentZoomingView
AVPlaybackContentContainer
AVAirMessageTransformer
AVDataValueTransformer
AVAirTransportTransformationProtocol
AVDismissalExpanseCoordinator
AVEditView
UIMovieScrubberDelegate
UIMovieScrubberDataSource
AVAirSerializationProtocol
AVAirSerialization
AVPlaybackContentTransitioningView
AVMediaSelectionTableViewController
AVTableViewCell
AVMediaSelectionViewController
AVPictureInPictureControllerContentSource
AVPictureInPictureController
AVPictureInPicturePlatformAdapterDelegate
ToBeDeprecated
AVSampleBufferDisplayLayerSupport
VideoCallSupport
AVControlItem
AVLabel
AVPlayerView
AVTimeRange
AVTimeRangeCollection
AVExternalPlaybackController
AVTimecode
AVTimecodeController
Common
AVPlaybackRateCollection
AVCABackdropLayer
AVCABackdropLayerView
AVRoutePickerView
AVRoutePickerViewInternalDelegate
AVRoutePickerViewDelegate
AVPictureInPictureIndicatorLayer
AVPictureInPictureIndicatorSublayer
AVBackgroundView
AVVolumeButtonControl
AVPlayerControllerTimeResolver
TimeObserverAdditions
AVPrioritizedSize
AVTouchIgnoringView
AVZoomingBehaviorContext
AVNewsWidgetPlayerBehaviorContext
AVPlaybackContentTransitioningViewDelegate
AVNewsWidgetPlayerLegacyBehavior
AVPlayerViewController_NewsOnly
AVTransition
AVCustomStackLayout
AVMobileImageConfiguration
AVImage
AVMicaPackage
CAStateControllerDelegate
CAMLParserDelegate
AVTurboModePlaybackControlsPlaceholderView
AVPlayerViewControllerAnimationCoordinator
AVTimer
AVSecondScreenConnection
AVSecondScreenContentViewConnection
AVPlayerVolumeController
AVPresentationContainerViewLayer
AVPresentationContainerViewAppearanceProxy
AVPresentationContainerView
AVMessageParser
AVAirMessageParts
AVAirTransportReverseTransformationResultProtocol
AVAirMessages
AVVolumeControlsContentView
AVPlaybackContentContainerView
AVEmbeddedAdditions
AVTransportControlsView
AVVolumeControlsControllerLayoutDelegate
AVScrubberDelegate
AVDefaultBehaviorContext
AVBehaviorStorage
AVBehaviorSupport
AVPresentationConfiguration
AVSecondScreenAdditions
AVPresentationContextTransition
AVHomeIPCameraPlayerController
AVPlaybackControlsController
AVPlayerViewControllerContentViewDelegate
AVControlOverflowButtonDelegate
AVMediaSelectionMenuDelegate
AVVolumeControlsControllerDelegate
AVTransportControlsViewDelegate
AVSecondScreenViewController
AVSecondScreenPlayerLayerView
UIViewControllerAnimatedTransitioning
UIViewControllerInteractiveTransitioning
AVTransitionDelegate
AVTransitionDriverDelegate
UIViewControllerTransitioningDelegate
AVTransitionController
AVPictureInPictureSampleBufferDisplayLayerView
AVSBDLPIPAdditions
AVPlayerControllerMercurySupportInternal
AVPlayerControllerExternalPlaybackSupportInternal
AVPlayerControllerTimecodeSupportInternal
AVPlayerControllerTimecodeSupport
AVPlayerControllerDelegate
AVBackdropView
AVPlayerViewControllerContentView
AVScrollViewObserverContentView
AVSharedPreferencesProtocol
!C$A
AVButton
AVInternetDateFormatter
AVLayoutItemAttributes
AVHomeLoadingButtonControlItem
AVDisplayLink
AVLayoutView
AVPlaybackControlsView
AVAirMessageResponse
AVMessageTransformerProtocol
_AVBundle
AVPictureInPictureIndicatorView
AVKitLayoutItem
NSLayoutConstraint_AVKitAdditions
NSLayoutAnchor_AVKitAdditions
NSLayoutDimension_AVKitAdditions
AVLayoutViewRowHead
AVSampleBufferDisplayLayerPlaybackDelegateAdapter
AVPictureInPictureSampleBufferPlaybackDelegate
AVSampleBufferDisplayLayerPlayerController
AVPictureInPictureSuppport
EmbeddedAdditions
TB,N,V_ignoresTouches
_ignoresTouches
setHidden:
hitTest:withEvent:
ignoresTouches
setIgnoresTouches:
T@"AVButton",&,N,V_prominentPlayButton
T@"AVLayoutView",&,N,V_prominentPlayButtonLayoutView
T@"AVStyleSheet",&,N,V_styleSheet
T@"AVPlayerViewController",&,N,V_playerViewController
T@"AVAppStorePlayerLayerView",&,N,V_playerLayerView
T@"NSMutableDictionary",&,N,V_videoGravityForLayoutClassDictionary
T@"AVObservationController",R,N,V_observationController
TB,N,V_showsPlaybackControls
TB,N,V_updatesNowPlayingInfoCenter
TB,N,V_showsMinimalPlaybackControlsWhenEmbeddedInline
TB,N,V_canPausePlaybackWhenExitingFullScreen
TB,N,V_allowsEnteringFullScreen
T@"NSString",C,N,V_videoGravity
T@"UIView",R,N,V_contentOverlayView
T@"AVPlayer",&,N,V_player
T@?,C,N,V_playButtonHandlerForLazyPlayerLoading
Tq,N,V_preferredUnobscuredArea
T@"<AVPlayerViewControllerDelegate>",W,N,V_playerViewControllerDelegate
_showsPlaybackControls
_updatesNowPlayingInfoCenter
_showsMinimalPlaybackControlsWhenEmbeddedInline
_canPausePlaybackWhenExitingFullScreen
_allowsEnteringFullScreen
_videoGravity
_contentOverlayView
_player
_playButtonHandlerForLazyPlayerLoading
_preferredUnobscuredArea
_playerViewControllerDelegate
_playerViewController
_prominentPlayButton
_prominentPlayButtonLayoutView
_styleSheet
_playerLayerView
_videoGravityForLayoutClassDictionary
_observationController
initWithFrame:
dealloc
setShowsPlaybackControls:
setUpdatesNowPlayingInfoCenter:
setShowsMinimalPlaybackControlsWhenEmbeddedInline:
setCanPausePlaybackWhenExitingFullScreen:
setAllowsEnteringFullScreen:
setVideoGravity:
setPreferredUnobscuredArea:
setPlayerViewControllerDelegate:
setPlayer:
setVideoGravity:forLayoutClass:
setPlayButtonHandlerForLazyPlayerLoading:
setClipsToBounds:
_setContinuousCornerRadius:
layoutSubviews
_makeActualVideoViewWithPlayerIfNeeded:
_makePlayerLayerViewWithPlayer:
_makePlayerViewControllerWithPlayer:
_prominentPlayButtonTouchUpInside:
showsPlaybackControls
updatesNowPlayingInfoCenter
showsMinimalPlaybackControlsWhenEmbeddedInline
canPausePlaybackWhenExitingFullScreen
allowsEnteringFullScreen
videoGravity
contentOverlayView
player
playButtonHandlerForLazyPlayerLoading
preferredUnobscuredArea
playerViewControllerDelegate
playerViewController
setPlayerViewController:
prominentPlayButton
setProminentPlayButton:
prominentPlayButtonLayoutView
setProminentPlayButtonLayoutView:
styleSheet
setStyleSheet:
playerLayerView
setPlayerLayerView:
videoGravityForLayoutClassDictionary
setVideoGravityForLayoutClassDictionary:
observationController
.cxx_destruct
animateWithDuration:delay:options:animations:completion:
removeFromSuperview
activateConstraints:
setTranslatesAutoresizingMaskIntoConstraints:
addSubview:
bounds
objectForKeyedSubscript:
unsignedIntegerValue
countByEnumeratingWithState:objects:count:
allKeys
layer
T@"AVPlayerLayer",R,D,N
layerClass
insertSubview:atIndex:
layoutFrame
layoutMarginsGuide
superview
copy
setObject:forKeyedSubscript:
numberWithUnsignedInteger:
mainScreen
addTarget:action:forControlEvents:
preferredFontForTextStyle:compatibleWithTraitCollection:
routeDetectionEnabled
TB,N,GisRouteDetectionEnabled,V_routeDetectionEnabled
TB,R,N
_routeDetectionEnabled
setRouteDetectionEnabled:
multipleRoutesDetected
isRouteDetectionEnabled
endDetectingRoutes
beginDetectingRoutes
routeDetectorCoordinatorQueue
sharedSystemRouteDetector
updateMultipleRoutesDetected
setMultipleRoutesDetected:
postNotificationName:object:
defaultCenter
isMainThread
addObserverForName:object:queue:usingBlock:
T@"<AVContentOverlayViewDelegate>",W,N,V_delegate
_delegate
didAddSubview:
_didRemoveSubview:
delegate
setDelegate:
_isHostedInAnotherProcess
_windowInterfaceOrientation
autorotates
avkit_canAttemptSecondWindowForRotability
_windowOwnsInterfaceOrientation
_windowControlsStatusBarOrientation
_shouldControlAutorotation
avkit_isHostedInAnotherProcess
_shouldAutorotateToInterfaceOrientation:
_setRotatableViewOrientation:duration:
avkit_canAttemptRotation
avkit_preferredInterfaceOrientationFromDeviceOrientation
avkit_supportsAutorotationForInterfaceOrientationMask:
avkit_ensureOrientation:disableTouchCancellation:
userInterfaceIdiom
currentDevice
orientation
rangeOfString:
substringFromIndex:
stringWithFormat:
substringToIndex:
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
T@"AVPlayerLayer",R,N
playerLayer
keyPathsForValuesAffectingPlayerLayer
setWithObjects:
_simplePlayerLayerView
attachPlayerLayer
detachPlayerLayer
didChangeValueForKey:
willChangeValueForKey:
constraintsWithVisualFormat:options:metrics:views:
T@"PGPictureInPictureProxy",R,N,V_pegasusProxy
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_videoRectInScreen
T@"NSTimer",R,N,V_layoutCheckTimer
T@"AVSecondScreenConnection",&,N,V_secondScreenConnection
T@"UIWindow",W,N,V_sourceWindowWhenPictureInPictureStarted
T@"<AVPictureInPictureContentSource>",W,N,V_contentSourceAwaitingInvalidation
T@"<AVPictureInPictureContentSource>",W,N,V_contentSourceAwaitingSetup
Tq,N,V_observedTimeControlStatus
scrubbingOrSeeking
TB,N,GisScrubbingOrSeeking,V_scrubbingOrSeeking
scrubbing
TB,N,GisScrubbing,V_scrubbing
seeking
TB,N,GisSeeking,V_seeking
Td,N,V_rateWhenScrubbingOrSeekingBegan
interruptedForAudioSession
TB,N,GisInterruptedForAudioSession,V_interruptedForAudioSession
TB,N,V_wasPlayingWhenSuspended
T@"<AVPictureInPictureContentSource>",W,N,V_source
Tq,N,V_status
routingVideoToHostedWindow
TB,N,GisRoutingVideoToHostedWindow,V_routingVideoToHostedWindow
contentSourceSupported
TB,R,N,GisContentSourceSupported
T@"<AVPictureInPicturePlatformAdapterDelegate>",W,N,V_delegate
T@"AVPlayerController",&,N,V_playerController
TB,N,V_allowsPictureInPicturePlayback
systemPictureInPicturePossible
TB,R,N,GisSystemPictureInPicturePossible
TB,N,V_alwaysStartsAutomaticallyWhenEnteringBackground
TB,N,V_canStartAutomaticallyWhenEnteringBackground
TB,N,V_requiresLinearPlayback
Tq,N,V_controlsStyle
microphoneEnabled
TB,N,GisMicrophoneEnabled,V_microphoneEnabled
T@"AVPictureInPicturePrerollAttributes",&,N,V_prerollAttributes
TB,N,V_managesWiredSecondScreenPlayback
T@"NSString",C,N,V_activitySessionIdentifier
Tq,N,V_backgroundPlaybackPolicy
T@"AVPictureInPictureViewController",R,N,V_pictureInPictureViewController
anyPictureInPictureActive
TB,R,N,GisAnyPictureInPictureActive,V_anyPictureInPictureActive
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
_allowsPictureInPicturePlayback
_alwaysStartsAutomaticallyWhenEnteringBackground
_canStartAutomaticallyWhenEnteringBackground
_requiresLinearPlayback
_microphoneEnabled
_managesWiredSecondScreenPlayback
_anyPictureInPictureActive
_scrubbingOrSeeking
_scrubbing
_seeking
_interruptedForAudioSession
_wasPlayingWhenSuspended
_routingVideoToHostedWindow
_playerController
_controlsStyle
_prerollAttributes
_activitySessionIdentifier
_backgroundPlaybackPolicy
_pictureInPictureViewController
_status
_pegasusProxy
_layoutCheckTimer
_secondScreenConnection
_sourceWindowWhenPictureInPictureStarted
_contentSourceAwaitingInvalidation
_contentSourceAwaitingSetup
_observedTimeControlStatus
_rateWhenScrubbingOrSeekingBegan
_source
_videoRectInScreen
Tq,N
controlsStyle
setControlsStyle:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
pictureInPictureProxyInterfaceOrientationForTransitionAnimation:
pictureInPictureProxyViewFrameForTransitionAnimation:
pictureInPictureProxyViewControllerWindowForTransitionAnimation:
pictureInPictureProxy:willStartPictureInPictureWithAnimationType:
pictureInPictureProxy:didStartPictureInPictureWithAnimationType:
pictureInPictureProxy:failedToStartPictureInPictureWithAnimationType:error:
pictureInPictureProxy:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:
pictureInPictureProxyWillSetupPictureInPictureStop:
pictureInPictureProxy:willStopPictureInPictureWithAnimationType:reason:
pictureInPictureProxy:didStopPictureInPictureWithAnimationType:reason:
pictureInPictureProxyPictureInPictureInterruptionBegan:
pictureInPictureProxyPictureInPictureInterruptionEnded:
pictureInPictureProxy:didReceivePlaybackCommand:
pictureInPictureProxy:didUpdateStashedOrUnderLockState:
pictureInPictureProxy:didUpdateResourcesUsageReductionReasons:oldReasons:
pictureInPictureProxy:didRequestFaceTimeAction:
pictureInPictureProxy:didReceiveTestingCommand:
pictureInPictureProxyContentType:
pictureInPictureProxyCanIssueOptionalCommand:
pictureInPictureViewControllerViewDidAppear:
pictureInPictureViewControllerViewWillDisappear:
isContentSourceSupported
initWithSource:
startPictureInPicture
stopPictureInPictureAndRestoreUserInterface:
canAnimatePictureInPictureTransition
isSystemPictureInPicturePossible
setAllowsPictureInPicturePlayback:
setInterruptedForAudioSession:
setWasPlayingWhenSuspended:
setMicrophoneEnabled:
setRequiresLinearPlayback:
setAlwaysStartsAutomaticallyWhenEnteringBackground:
setPrerollAttributes:
setStatus:
setSource:
setPlayerController:
setActivitySessionIdentifier:
setCanStartAutomaticallyWhenEnteringBackground:
updateLayoutDependentBehaviors
_updatePictureInPictureShouldStartWhenEnteringBackground
_proxyControlsStyle
_updateProxyPlaybackState
setBackgroundPlaybackPolicy:
_createProxyIfNeeded
_startObservation
_startObservingForPlaybackStateUpdates
setScrubbingOrSeeking:
setSeeking:
setScrubbing:
setObservedTimeControlStatus:
setRoutingVideoToHostedWindow:
_removeSecondScreenConnection
_sceneActivationState
playerController
allowsPictureInPicturePlayback
alwaysStartsAutomaticallyWhenEnteringBackground
canStartAutomaticallyWhenEnteringBackground
requiresLinearPlayback
isMicrophoneEnabled
prerollAttributes
managesWiredSecondScreenPlayback
setManagesWiredSecondScreenPlayback:
activitySessionIdentifier
backgroundPlaybackPolicy
pictureInPictureViewController
isAnyPictureInPictureActive
status
pegasusProxy
videoRectInScreen
setVideoRectInScreen:
layoutCheckTimer
secondScreenConnection
setSecondScreenConnection:
sourceWindowWhenPictureInPictureStarted
setSourceWindowWhenPictureInPictureStarted:
contentSourceAwaitingInvalidation
setContentSourceAwaitingInvalidation:
contentSourceAwaitingSetup
setContentSourceAwaitingSetup:
observedTimeControlStatus
isScrubbingOrSeeking
isScrubbing
isSeeking
rateWhenScrubbingOrSeekingBegan
setRateWhenScrubbingOrSeekingBegan:
isInterruptedForAudioSession
wasPlayingWhenSuspended
source
isRoutingVideoToHostedWindow
activationState
playbackAction
testingAction
associatedBoolValue
associatedDoubleValue
interfaceOrientation
boolValue
integerValue
object
arrayWithObjects:count:
userInfo
preferredContentSizeDidChangeForViewController
CGSizeValue
initWithControlsStyle:viewController:
updatePlaybackStateUsingBlock:
setBackgroundAudioPolicy:
pegasusAttributes
setPlaybackRate:elapsedTime:timeControlStatus:
setContentDuration:
setContentType:
setPictureInPictureShouldStartWhenEnteringBackground:
_largestInscribedRectInBoundingPathWithCenter:aspectRatio:
viewFrameForInteractiveTransitionAnimationWhenEnteringBackgroundDidChangeForViewController
convertRect:toCoordinateSpace:
fixedCoordinateSpace
setClientSessionIdentifier:
isEqualToString:
pictureInPictureSupported
TB,R,N,GisPictureInPictureSupported
T@"NSString",R,N
T@"UIImageSymbolConfiguration",R,N
isPictureInPictureSupported
startPictureInPictureButtonImageName
stopPictureInPictureButtonImageName
imageSymbolConfiguration
configurationWithPointSize:weight:
pointSize
preferredFontForTextStyle:
T@"PGPlaybackStatePrerollAttributes",R,N,V_pegasusAttributes
T{?=qiIq},R,N,V_requiredLinearPlaybackEndTime
T@"UIColor",R,N
_pegasusAttributes
_requiredLinearPlaybackEndTime
initWithPlaybackStatePrerollAttributes:requiredLinearPlaybackEndTime:
preferredTintColor
requiredLinearPlaybackEndTime
prerollAttributesForAdContentWithRequiredLinearPlaybackEndTime:preferredTintColor:
prerollAttributesForSponsoredContentWithRequiredLinearPlaybackEndTime:preferredTintColor:
keyPathsForValuesAffectingVideoLayerGravity
keyPathsForValuesAffectingReadyForDisplay
keyPathsForValuesAffectingVideoBounds
keyPathsForValuesAffectingVideoDisplaySize
keyPathsForValuesAffectingVideoScaled
keyPathsForValuesAffectingPixelBufferAttributes
setWithObject:
setWithArray:
T@"AVPlayerLayer",&,N,V_pictureInPicturePlayerLayer
T{CGSize=dd},R,N
T@"AVPlayerController",&,N
readyForDisplay
TB,R,N,GisReadyForDisplay
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
videoScaled
TB,N,GisVideoScaled
T@"NSDictionary",C,N
T@"AVPictureInPicturePlayerLayerView",R,N
_pictureInPicturePlayerLayerView
_pictureInPicturePlayerLayer
isReadyForDisplay
videoBounds
videoDisplaySize
isVideoScaled
setVideoScaled:
pixelBufferAttributes
setPixelBufferAttributes:
pictureInPicturePlayerLayerView
startRoutingVideoToPictureInPicturePlayerLayerView
stopRoutingVideoToPictureInPicturePlayerLayerView
pictureInPicturePlayerLayer
setPictureInPicturePlayerLayer:
setPlaceholderContentLayerDuringPIPMode:
setLegibleDisplayEnabled:
isLegibleDisplayEnabled
stopRedirectingVideoToLayer:
CGImage
displayScale
_flatImageWithColor:
systemFontOfSize:weight:
startRedirectingVideoToLayer:forMode:
videoRect
clearColor
Td,V_timestamp
Td,V_velocity
_timestamp
_velocity
timestamp
setTimestamp:
velocity
setVelocity:
T@"UIScrollView",&,N,V_scrollView
scrollScrubbing
TB,N,GisScrollScrubbing,V_scrollScrubbing
Tq,N,V_scrubbingSpeed
Td,N,V_resolution
TB,N,V_slowKnobMovementDetected
TB,N,V_shouldRecoverFromPrecisionScrubbingIfNeeded
T@"UIView",R,N,V_loadedTrackOverlayView
T@"UIImageView",W,N,V_currentThumbView
T@"NSMutableArray",&,N,V_previousScrubberVelocities
T@"NSTimer",&,N,V_updateSlowKnobMovementDetectedTimer
Td,N,V_timestampWhenTrackingEnded
T@"UISelectionFeedbackGenerator",R,N,V_feedbackGenerator
TB,N,V_scrubsWhenTappedAnywhere
TB,N,V_canChangeScrubbingSpeed
TB,N,V_hasChangedLocationAtLeastOnce
TB,N,V_scrubberEnabledStatus
Td,N,V_currentScrubberParentHeight
Td,N,V_newScrubberParentHeight
T@"<AVScrubberDelegate>",W,N,V_delegate
T@"NSArray",C,N,V_loadedTimeRanges
Tf,N,V_estimatedFrameRate
T{NSDirectionalEdgeInsets=dddd},N,V_hitRectInsets
Td,R,N
Td,N,SsetScrubberParentHeight:,V_scrubberParentHeight
Tf,N,V_rate
T{CGSize=dd},N,V_extrinsicContentSize
removed
TB,N,GisRemoved,V_removed
collapsed
TB,N,GisCollapsed,V_collapsed
included
TB,N,GisIncluded,V_included
collapsedOrExcluded
TB,R,N,GisCollapsedOrExcluded
TB,N,V_hasAlternateAppearance
TB,N,V_hasFullScreenAppearance
T@"AVLayoutItemAttributes",R,N,V_layoutAttributes
_trackingStartTime
_previousValue
_previousValueChangeTime
_currentValueChangedTime
_didHaveLessThanFullScrubbingSpeedSinceTrackingBegin
_collapsed
_included
_removed
_hasAlternateAppearance
_hasFullScreenAppearance
_scrollScrubbing
_slowKnobMovementDetected
_shouldRecoverFromPrecisionScrubbingIfNeeded
_scrubsWhenTappedAnywhere
_canChangeScrubbingSpeed
_hasChangedLocationAtLeastOnce
_scrubberEnabledStatus
_estimatedFrameRate
_rate
_feedbackGenerator
_loadedTrackOverlayView
_previousScrubberVelocities
_layoutAttributes
_loadedTimeRanges
_scrubbingSpeed
_resolution
_scrubberParentHeight
_scrollView
_currentThumbView
_updateSlowKnobMovementDetectedTimer
_timestampWhenTrackingEnded
_currentScrubberParentHeight
_newScrubberParentHeight
_extrinsicContentSize
_hitRectInsets
T{CGSize=dd},N
TB,N,GisRemoved
TB,N,GisCollapsed
TB,N,GisIncluded
TB,N
extrinsicContentSize
setExtrinsicContentSize:
isRemoved
setRemoved:
isCollapsed
setCollapsed:
isIncluded
setIncluded:
isCollapsedOrExcluded
hasAlternateAppearance
setHasAlternateAppearance:
hasFullScreenAppearance
setHasFullScreenAppearance:
T@"AVLayoutItemAttributes",R,N
layoutAttributesDidChange
layoutAttributes
avkit_shouldPreventExternalGestureRecognizerAtPoint:
scrollViewDidScroll:
scrollViewDidZoom:
scrollViewWillBeginDragging:
scrollViewWillEndDragging:withVelocity:targetContentOffset:
scrollViewDidEndDragging:willDecelerate:
scrollViewWillBeginDecelerating:
scrollViewDidEndDecelerating:
scrollViewDidEndScrollingAnimation:
viewForZoomingInScrollView:
scrollViewWillBeginZooming:withView:
scrollViewDidEndZooming:withView:atScale:
scrollViewShouldScrollToTop:
scrollViewDidScrollToTop:
scrollViewDidChangeAdjustedContentInset:
setScrubberParentHeight:
setScrubberThumbImage:
createScrubberTicTacImage
feedbackGenerator
loadedTrackOverlayView
previousScrubberVelocities
setLoadedTimeRanges:
clampedEstimatedFrameRate
localizedScrubbingSpeedName
setCurrentThumbView:
timeIntervalSinceTrackingEnded
intrinsicContentSize
setValue:
minimumValueImageRectForBounds:
maximumValueImageRectForBounds:
thumbRectForBounds:trackRect:value:
trackRectForBounds:
createThumbView
setEnabled:
isTracking
beginTrackingWithTouch:withEvent:
continueTrackingWithTouch:withEvent:
endTrackingWithTouch:withEvent:
cancelTrackingWithEvent:
endOrCancelTracking
alignmentRectInsets
updateScrollViewContentSizeAndOffsetIfNeeded
hitRect
pointInside:withEvent:
duration
normalizedPosition
normalizedScrollOffset
valueFromScrollView
contentOffsetFromValue
_shouldTrackTouchAtPoint:
_updateSlowKnobMovementDetected
_updateSlowKnobMovementDetectedForTargetValue:
_updateLayoutItem
setPreviousScrubberVelocities:
loadedTimeRanges
scrubbingSpeed
setScrubbingSpeed:
estimatedFrameRate
setEstimatedFrameRate:
resolution
setResolution:
hitRectInsets
setHitRectInsets:
scrubberParentHeight
rate
setRate:
scrollView
setScrollView:
isScrollScrubbing
setScrollScrubbing:
slowKnobMovementDetected
setSlowKnobMovementDetected:
shouldRecoverFromPrecisionScrubbingIfNeeded
setShouldRecoverFromPrecisionScrubbingIfNeeded:
currentThumbView
updateSlowKnobMovementDetectedTimer
setUpdateSlowKnobMovementDetectedTimer:
timestampWhenTrackingEnded
setTimestampWhenTrackingEnded:
scrubsWhenTappedAnywhere
setScrubsWhenTappedAnywhere:
canChangeScrubbingSpeed
setCanChangeScrubbingSpeed:
hasChangedLocationAtLeastOnce
setHasChangedLocationAtLeastOnce:
scrubberEnabledStatus
setScrubberEnabledStatus:
currentScrubberParentHeight
setCurrentScrubberParentHeight:
newScrubberParentHeight
setNewScrubberParentHeight:
objectAtIndexedSubscript:
removeObjectsInArray:
addObject:
scheduledTimerWithTimeInterval:repeats:block:
minimumValue
maximumValue
_trackEnabled
_thumbHitEdgeInsets
convertPoint:toView:
contentSize
contentOffset
effectiveUserInterfaceLayoutDirection
setContentOffset:
_maxTrackView
floatValue
convertRect:fromView:
_minTrackView
removeAllObjects
setTracking:
sendActionsForControlEvents:
selectionChanged
center
previousLocationInView:
locationInView:
frame
_isPointerTouch
invalidateIntrinsicContentSize
whiteColor
setUserInteractionEnabled:
fill
setFill
bezierPathWithRoundedRect:cornerRadius:
colorWithWhite:alpha:
setThumbImage:forState:
setMaximumTrackImage:forState:
setMinimumTrackImage:forState:
setContentCompressionResistancePriority:forAxis:
setContentHuggingPriority:forAxis:
minimumTrackImageForState:
setSemanticContentAttribute:
keyPathsForValuesAffectingLocalizedScrubbingSpeedName
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
T@"NSMutableSet",&,N,V_activeChannels
T@"<AVAirMessageNotificationCenterDelegate>",W,N,V_delegate
T@"AVBonjourService",R,N,V_mainService
T@"AVPlayerItem",&,N,V_nowPlayingPlayerItem
_started
_mainService
_nowPlayingPlayerItem
_queue
_activeChannels
airTransportOutputDidOpen:
airTransport:didReceiveObject:
airTransportInputDidClose:
bonjourServiceAdditionalTXTRecordInfo:
bonjourService:didAcceptConnectionChannel:
bonjourService:didCloseChannel:
init
_initPrivate
start
stop
playerItemForIdentifier:
handleCommandMessage:completion:
mainService
nowPlayingPlayerItem
setNowPlayingPlayerItem:
queue
activeChannels
setActiveChannels:
removeObject:
containsObject:
length
airTrafficControllerCurrentItemIdentifier:
airTrafficController:didReceiveMessage:completion:
raise:format:
TB,R
_isNotificationCenterEnabled
prepare
isPrepared
shared
T^{CGImage=},N,V_cgImage
Td,R,V_startTime
Td,R,V_duration
TQ,R,V_number
T@"NSString",R,C,V_title
_imageBlock
_startTime
_duration
_number
_title
_cgImage
copyWithZone:
initWithStartTime:duration:number:title:imageFaultBlock:
cgImage
setCGImage:
setValue:forUndefinedKey:
valueForUndefinedKey:
startTime
number
title
setCgImage:
initialize
playbackChapterWithStartTime:duration:number:title:imageFaultBlock:
chapterAtTime:inChapters:
T@"NSMutableDictionary",R,N,V_customPropertyStorage
_customPropertyStorage
customPropertyStorage
avkit_data
avkit_dataOrNil
externalMetadata
avkit_airMessageSendExternalMetadata
isEqualToArray:
AVKitData
setAVKitData:
avkit_setValue:forAVKitProperty:
avkit_valueForAVKitProperty:
avkit_airMessageSendToAppleTV
setExternalMetadata:
_externalPlaybackController
prepareRouteSelectionForPlaybackFromBundleID:withCompletionHandler:
prepareRouteSelectionForPlaybackWithCompletionHandler:
_ensureUserCaptionDisplayType:
currentLegibleMediaSelectionOption
currentAudioMediaSelectionOption
propertyList
reloadOptionsAssumingMediaOptionsMayHaveChanged:
audioOptions
hasAudioMediaSelectionOptions
legibleOptions
setLegibleMediaSelectionOptions:audioMediaSelectionOptions:assumeMediaOptionMayHaveChanged:
_optionsForGroup:
playableMediaSelectionOptionsFromArray:
autoupdatingCurrentLocale
objectForKey:
localeIdentifier
languageCompare:currentLanguageCode:currentLanguageIdentifier:
sortedArrayUsingComparator:
hasLegibleMediaSelectionOptions
numberWithBool:
isAC3Only
arrayWithArray:
currentItem
currentMediaSelection
selectedMediaOptionInMediaSelectionGroup:
mediaSelectionOptionsFromArray:withoutMediaCharacteristics:
mediaSelectionOptionsFromArray:withMediaCharacteristics:
arrayByAddingObjectsFromArray:
valueForKey:
avkit_persistentIdentifier
isEqualToSet:
isCC
isAuxiliary
isEasyReader
isSDH
isMain
selectMediaOptionAutomaticallyInMediaSelectionGroup:
_performAutomaticMediaSelectionForUserCaptionDisplayType:
selectMediaOption:inMediaSelectionGroup:
mediaSelectionCriteriaCanBeAppliedAutomaticallyToMediaSelectionGroup:
hasMediaSelectionOptions
currentVideoMediaSelectionOption
keyPathsForValuesAffectingCurrentAudioMediaSelectionOption
setCurrentAudioMediaSelectionOption:
keyPathsForValuesAffectingCurrentLegibleMediaSelectionOption
setCurrentLegibleMediaSelectionOption:
selectedMediaOptionMayHaveChanged
reloadOptions
reloadOptionsAndCurrentSelections
reloadAudioOptions
reloadLegibleOptions
keyPathsForValuesAffectingHasMediaSelectionOptions
keyPathsForValuesAffectingHasAudioMediaSelectionOptions
keyPathsForValuesAffectingHasLegibleMediaSelectionOptions
mediaSubTypes
unsignedIntValue
audioMediaSelectionOptions
locale
displayName
localizedCaseInsensitiveCompare:
audioFormats
setAudioMediaSelectionOptions:
setLegibleMediaSelectionOptions:
selectedMediaOptionMayHaveChanged:
_selectedMediaOptionWithMediaCharacteristic:
visualMediaSelectionOptions
_setMediaOption:mediaCharacteristic:
legibleMediaSelectionOptions
hasMediaCharacteristic:
appliesMediaSelectionCriteriaAutomatically
_mediaSelectionCriteriaCanBeAppliedAutomaticallyToLegibleMediaSelectionGroup
_disableLegibleMediaSelectionOptions:
_enableAutoMediaSelection:
mediaSelectionGroupForMediaCharacteristic:
assetCache
isPlayableOffline
mediaSelectionOptionsInMediaSelectionGroup:
options
canonicalLanguageIdentifierFromString:
minusSet:
mediaType
arrayByAddingObject:
AC3Only
TB,R,GisAC3Only
main
TB,R,GisMain
TB,R,GisSDH
TB,R,GisCC
easyReader
TB,R,GisEasyReader
auxiliary
TB,R,GisAuxiliary
T@"NSNumber",R
T@"UIView<AVScrollViewObserverContentView>",W,N,V_observer
T@"NSHashTable",C,N,V_observedScrollViews
scrolling
TB,N,GisScrolling,V_scrolling
scrollingQuickly
TB,N,GisScrollingQuickly,V_scrollingQuickly
T@"NSTimer",&,N,V_scrollingDidEndTimer
_scrolling
_scrollingQuickly
_observer
_observedScrollViews
_scrollingDidEndTimer
_observeScrollViewDidScroll:
initWithContentView:
updateObservedScrollViews
_updateScrollingStatus
isScrolling
setScrolling:
isScrollingQuickly
setScrollingQuickly:
observer
setObserver:
observedScrollViews
setObservedScrollViews:
scrollingDidEndTimer
setScrollingDidEndTimer:
setTolerance:
anyObject
_removeScrollViewScrollObserver:
minusHashTable:
_addScrollViewScrollObserver:
_isScrollViewScrollObserver:
weakObjectsHashTable
T@"UIImageView",&,N,V_thumbView
animatingVolumeChange
TB,N,GisAnimatingVolumeChange,V_animatingVolumeChange
Td,N,SsetThumbSize:,V_thumbSize
_animatingVolumeChange
_thumbView
_thumbSize
initWithFrame:thumbSize:
_commonInit
minimumSize
accessibilityLabel
didMoveToWindow
gestureRecognizerShouldBegin:
setValue:animated:
_endTracking
thumbView
setThumbView:
isAnimatingVolumeChange
setAnimatingVolumeChange:
thumbSize
setThumbSize:
deactivate
_modulationFeedbackGenerator
userInteractionEnded
_edgeFeedbackGenerator
startAnimation
addCompletion:
addAnimations:
layoutIfNeeded
initWithDuration:timingParameters:
initWithDampingRatio:
valueUpdated:
positionUpdated:
distance
activateWithCompletionBlock:
userInteractionStarted
isDescendantOfView:
T@"AVNewsWidgetPlayerBehaviorContext",W,N,V_behaviorContext
_behaviorContext
willMoveToContext:
T@,W,N
behaviorContextClass
behaviorContext
setBehaviorContext:
didMoveToContext:
willRemoveFromContext:
didRemoveFromContext:
playerForContentTransitionType:
willBeginContentTransition
didUpdateContentTransitionProgress:
willCompleteContentTransition
didCompleteContentTransition
willCancelContentTransition
didCancelContentTransition
T@"CALayerHost",R,D,N
setInheritsTiming:
T@"AVPictureInPictureCALayerHostView",R,N,V_hostView
T{CGSize=dd},N,V_imageQueueSize
T{CGSize=dd},N,V_contentDimensions
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_lastKnownFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_lastKnownBounds
TB,N,V_needsGeometryUpdate
deferringGeometryUpdates
TB,N,GisDeferringGeometryUpdates,V_deferringGeometryUpdates
TI,N
Td,N
_needsGeometryUpdate
_deferringGeometryUpdates
_hostView
_imageQueueSize
_contentDimensions
_lastKnownFrame
_lastKnownBounds
contextId
setContextId:
beginTime
setBeginTime:
setFrame:contentDimensions:imageQueueSize:
_updateGeometryIfNeeded
hostView
imageQueueSize
setImageQueueSize:
contentDimensions
setContentDimensions:
lastKnownFrame
setLastKnownFrame:
lastKnownBounds
setLastKnownBounds:
needsGeometryUpdate
setNeedsGeometryUpdate:
isDeferringGeometryUpdates
setDeferringGeometryUpdates:
setCenter:
setTransform:
blackColor
performWithoutAnimation:
setAutoresizingMask:
T@"<AVMediaSelectionMenuDelegate>",W,N,V_delegate
T@"NSArray",C,N,V_audibleOptions
T@"NSArray",C,N,V_legibleOptions
TQ,N,V_currentAudibleOptionIndex
TQ,N,V_currentLegibleOptionIndex
T@"UIMenu",R
_audibleOptionsMenu
_legibleOptionsMenu
_audibleOptions
_legibleOptions
_currentAudibleOptionIndex
_currentLegibleOptionIndex
initWithAudibleOptions:legibleOptions:
setAudibleOptions:
setLegibleOptions:
setCurrentAudibleOptionIndex:
setCurrentLegibleOptionIndex:
audibleOptionsMenu
legibleOptionsMenu
_menuForOptions:
_updateSelectionStateForMenu:selectedIndex:
audibleOptions
currentAudibleOptionIndex
currentLegibleOptionIndex
children
menuWithTitle:image:identifier:options:children:
systemImageNamed:
actionWithTitle:image:identifier:handler:
_trackedTouches
initWithTarget:action:
canBePreventedByGestureRecognizer:
canPreventGestureRecognizer:
shouldRequireFailureOfGestureRecognizer:
shouldBeRequiredToFailByGestureRecognizer:
touchesBegan:withEvent:
touchesMoved:withEvent:
touchesEstimatedPropertiesUpdated:
touchesEnded:withEvent:
touchesCancelled:withEvent:
_touchesEndedOrCancelled:
unionSet:
setCancelsTouchesInView:
Td,N,V_volumeToRestore
animatingTowardsZero
TB,N,GisAnimatingTowardsZero,V_animatingTowardsZero
animatingAwayFromZero
TB,N,GisAnimatingAwayFromZero,V_animatingAwayFromZero
T@"AVPlayerController",R,N,V_playerController
_animatingTowardsZero
_animatingAwayFromZero
_volumeToRestore
initWithPlayerController:
currentRouteHasVolumeControl
canAnimateVolumeTowardsZero
canAnimateVolumeAwayFromZero
setProgressTowardsZero:
setProgressAwayFromZero:
restoreVolumeIfNeeded
volumeToRestore
setVolumeToRestore:
isAnimatingTowardsZero
setAnimatingTowardsZero:
isAnimatingAwayFromZero
setAnimatingAwayFromZero:
pictureInPictureActionButtonTapped
playbackControlsDidChangePlayerVolume:
playbackControlsDidToggleMuted:
T@"AVHomeIPCameraBehaviorContext",W,N,V_behaviorContext
playbackControlsDidUpdateVisibilityOfLoadingIndicator:
T@"UIWindow",R,N
avkit_makePlayerControllerIfNeeded:
avkit_pictureInPictureViewController
avkit_startRoutingVideoToPictureInPictureViewController:
avkit_stopRoutingVideoToPictureInPictureViewController:
avkit_beginReducingResourcesForPictureInPictureViewController:playerController:
avkit_endReducingResourcesForPictureInPictureViewController:playerController:
avkit_willBeginStoppingPictureInPictureForPictureInPictureViewController:
avkit_contentSourceType
avkit_videoRectInWindow
avkit_isVisible
avkit_window
isHidden
superlayer
convertRect:fromLayer:
avkit_visibleRectForRect:inLayer:
T@"AVPlaybackRateCollection",&,N,V_playbackRateCollection
T@"UIMenu",R,N
_playbackRateMenu
_activeMenuItems
_activePlaybackRateCollection
_activeSelectedPlaybackRate
_activeMenuHasImage
_playbackRateCollection
setPlaybackRateCollection:
menu
_reconstructPlaybackRateMenuItems
_updatePlaybackRateMenuIfNeeded
_updatePlaybackRateMenuItemStatesIfNeeded
playbackRateCollection
objectAtIndex:
indexOfObject:
initWithCapacity:
_loadPlaybackSpeedControlImageWithCompletionHandler:
pinchToDismissEnabled
TB,N,GisPinchToDismissEnabled,V_pinchToDismissEnabled
pinchToPresentEnabled
TB,N,GisPinchToPresentEnabled,V_pinchToPresentEnabled
panToDismissEnabled
TB,N,GisPanToDismissEnabled,V_panToDismissEnabled
Td,N,V_previousPinchScale
Td,N,S_setRotation:,V__rotation
T@"UIPanGestureRecognizer",R,N,V_panGestureRecognizer
T@"UIPinchGestureRecognizer",R,N,V_pinchGestureRecognizer
T@"UIRotationGestureRecognizer",R,N,V_rotationGestureRecognizer
T@"NSArray",R,N,V_recognizers
waitingForTransition
TB,N,GisWaitingForTransition,V_waitingForTransition
waitingForBoundsChange
TB,N,GisWaitingForBoundsChange,V_waitingForBoundsChange
waitingForLocationChangeAfterBoundsChange
TB,N,GisWaitingForLocationChangeAfterBoundsChange,V_waitingForLocationChangeAfterBoundsChange
Td,N,V_timestampOfTouchWithLocationChangeAfterBoundsChange
TB,N,V_hasContinued
TB,N,V_hasRotated
Tq,N,V_initialInterfaceOrientation
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_initialCoordinateSpaceBounds
T{CGPoint=dd},N,V_gestureLocationAfterBoundsChange
T{CGPoint=dd},N,V_lastReportedLocationInWindow
T{CGPoint=dd},N,V_anchorLocationInWindow
TB,N,V_lastNonZeroVelocityWasDownward
Tq,N,V_transitionInteraction
T@"UIView",W,N,V_view
enabled
TB,N,GisEnabled,V_enabled
T@"<AVTransitionDriverDelegate>",W,N,V_transitionDriverDelegate
T@"UIPanGestureRecognizer",W,N,V_contentTransitioningViewGestureRecognizer
_enabled
_pinchToDismissEnabled
_pinchToPresentEnabled
_panToDismissEnabled
_waitingForTransition
_waitingForBoundsChange
_waitingForLocationChangeAfterBoundsChange
_hasContinued
_hasRotated
_lastNonZeroVelocityWasDownward
_contentTransitioningViewGestureRecognizer
_transitionDriverDelegate
_previousPinchScale
__rotation
_panGestureRecognizer
_pinchGestureRecognizer
_rotationGestureRecognizer
_recognizers
_timestampOfTouchWithLocationChangeAfterBoundsChange
_initialInterfaceOrientation
_transitionInteraction
_view
_gestureLocationAfterBoundsChange
_lastReportedLocationInWindow
_anchorLocationInWindow
_initialCoordinateSpaceBounds
TB,R,N,GisEnabled
T@"<AVTransitionDriverDelegate>",W,N
Tq,R,N
T@"UIPanGestureRecognizer",W,N
locationInWindow
translationInWindow
velocityInWindow
angleOfVelocityInWindow
transitionDriver:shouldRequireFailureOfGestureRecognizer:
isEnabled
transitionDriverDelegate
setTransitionDriverDelegate:
transitionInteraction
rotation
rotationVelocity
pinchScale
pinchVelocity
lastNonZeroVelocityWasDownward
contentTransitioningViewGestureRecognizer
setContentTransitioningViewGestureRecognizer:
T@"UIView",R,W,N
willMoveToView:
didMoveToView:
view
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
gestureRecognizer:shouldReceiveEvent:
addRecognizersToView:
_locationRecognizer
_untranslatedUnfilteredLocationInFixedCoordinateSpace
_filteredUntranslatedLocationInWindow
_handlePinchGesture:
_handleRotationGesture:
_handlePanGesture:
_isWaitingToContinue
_beginTracking:
_finish
_cancel
_updateLastNonZeroVelocityDirection
_resetGesturesIfPossible
_setHasContinuedIfNeeded
_reset
isPinchToDismissEnabled
setPinchToDismissEnabled:
isPinchToPresentEnabled
setPinchToPresentEnabled:
isPanToDismissEnabled
setPanToDismissEnabled:
previousPinchScale
setPreviousPinchScale:
_rotation
_setRotation:
panGestureRecognizer
pinchGestureRecognizer
rotationGestureRecognizer
recognizers
isWaitingForTransition
setWaitingForTransition:
isWaitingForBoundsChange
setWaitingForBoundsChange:
isWaitingForLocationChangeAfterBoundsChange
setWaitingForLocationChangeAfterBoundsChange:
timestampOfTouchWithLocationChangeAfterBoundsChange
setTimestampOfTouchWithLocationChangeAfterBoundsChange:
hasContinued
setHasContinued:
hasRotated
setHasRotated:
initialInterfaceOrientation
setInitialInterfaceOrientation:
initialCoordinateSpaceBounds
setInitialCoordinateSpaceBounds:
gestureLocationAfterBoundsChange
setGestureLocationAfterBoundsChange:
lastReportedLocationInWindow
setLastReportedLocationInWindow:
anchorLocationInWindow
setAnchorLocationInWindow:
setLastNonZeroVelocityWasDownward:
setTransitionInteraction:
setView:
setRotation:
coordinateSpace
lastTouchTimestamp
scale
translationInView:
velocityInView:
convertPoint:fromCoordinateSpace:
removeGestureRecognizer:
addGestureRecognizer:
_setRequiresSystemGesturesToFail:
_setEndsOnSingleTouch:
setMaximumNumberOfTouches:
T@"NSMutableOrderedSet",R,N,V_secondScreens
T@"NSMutableOrderedSet",R,N,V_connections
TB,N,V_allowsUpdatingActiveConnection
_allowsUpdatingActiveConnection
_secondScreens
_connections
addConnectionForPlayer:playerLayer:
addConnection:
removeConnection:
connectionPassingTest:
preferredConnection
setPreferredConnection:
addSecondScreen:
removeSecondScreen:
activeConnection
_connectionForPlayer:
_targetScreen
_updateActiveConnection
_insertConnection:atIndex:
secondScreens
connections
allowsUpdatingActiveConnection
setAllowsUpdatingActiveConnection:
insertObject:atIndex:
reverseObjectEnumerator
moveObjectsAtIndexes:toIndex:
indexSetWithIndex:
lastObject
orderedSet
sharedInstance
T@"AVPresentationController",R,W,N,V_presentationController
T@"AVPresentationConfiguration",R,N,V_configuration
T@"UIView",W,N,V_sourceView
T@"AVPresentationContainerView",R,W,N
T@"UIWindow",R,W,N
T@"UIView",R,N,V_touchBlockingView
T@"UIView",R,N,V_backgroundView
T@"UIViewController",R,W,N
T@"<UIViewControllerContextTransitioning>",W,N,V_transitionContext
TB,N,V_allowsSecondWindowPresentations
TB,N,V_wasInitiallyPresentedWithoutSecondWindow
T@"UIWindow",&,N,V_rotatableSecondWindow
T@"AVFullScreenViewController",R,W,N,V_avFullScreenViewController
T@"AVFullScreenViewController",R,W,N
T@"AVPresentationContextTransition",&,N,V_presentingTransition
T@"AVPresentationContextTransition",&,N,V_dismissingTransition
T@"AVPresentationContextTransition",R,N
presenting
TB,R,N,GisPresenting
dismissing
TB,R,N,GisDismissing
TB,N,V_allowsPausingWhenTransitionCompletes
_allowsSecondWindowPresentations
_wasInitiallyPresentedWithoutSecondWindow
_allowsPausingWhenTransitionCompletes
_configuration
_sourceView
_touchBlockingView
_backgroundView
_transitionContext
_rotatableSecondWindow
_avFullScreenViewController
_presentingTransition
_dismissingTransition
_presentationController
initWithPresentationController:configuration:
containerView
presentingView
presentationWindow
rotatableWindowViewController
presentedView
presentedViewController
hasActiveTransition
wasInitiallyInteractive
isDismissing
isPresenting
currentTransition
transitionType
canBeInteractivelyDismissed
presentationFromView
dismissalToView
configuration
sourceView
setSourceView:
touchBlockingView
backgroundView
transitionContext
setTransitionContext:
allowsSecondWindowPresentations
setAllowsSecondWindowPresentations:
wasInitiallyPresentedWithoutSecondWindow
setWasInitiallyPresentedWithoutSecondWindow:
rotatableSecondWindow
setRotatableSecondWindow:
avFullScreenViewController
presentingTransition
setPresentingTransition:
dismissingTransition
setDismissingTransition:
allowsPausingWhenTransitionCompletes
setAllowsPausingWhenTransitionCompletes:
presentationController
viewForKey:
presentingViewController
_supportedInterfaceOrientationsForWindow:
supportsInteractiveCounterRotationDismissals
rootViewController
T@"NSNetServiceBrowser",R,N,V_netServiceBrowser
T^v,N,V_airplayDeviceRef
T@"NSString",R,N,V_serviceType
T@"<AVBonjourServiceClientDelegate>",W,N,V_delegate
_discovering
_resolvedServices
_resolvingServices
_monitoringServices
_netServiceIdentifierToChannel
_observeAirPlayVideoActiveDidChange
_observeMRDeviceInfoDidChange
_serviceType
_netServiceBrowser
_airplayDeviceRef
netServiceWillPublish:
netServiceDidPublish:
netService:didNotPublish:
netServiceWillResolve:
netServiceDidResolveAddress:
netService:didNotResolve:
netServiceDidStop:
netService:didUpdateTXTRecordData:
netService:didAcceptConnectionWithInputStream:outputStream:
netServiceBrowserWillSearch:
netServiceBrowserDidStopSearch:
netServiceBrowser:didNotSearch:
netServiceBrowser:didFindDomain:moreComing:
netServiceBrowser:didFindService:moreComing:
netServiceBrowser:didRemoveDomain:moreComing:
netServiceBrowser:didRemoveService:moreComing:
initWithNetServiceType:
beginDiscovery
endDiscovery
setAirplayDeviceRef:
_updatedAirPlayPairedDeviceAsync
_isServiceForCurrentAirPlayDevice:
identifierForNetService:
airTransportSenderForNetService:
serviceType
netServiceBrowser
airplayDeviceRef
name
resolveWithTimeout:
dictionaryFromTXTRecordData:
TXTRecordData
removeFromRunLoop:forMode:
mainRunLoop
stopMonitoring
startMonitoring
scheduleInRunLoop:forMode:
getInputStream:outputStream:
port
hostName
searchForServicesOfType:inDomain:
removeObserver:
mainQueue
setIncludesPeerToPeer:
initWithData:encoding:
keyEnumerator
T@"AVPlayerController",W,N,V_playerControllerToActivateAfterDelay
T@"NSTimer",W,N,V_startNowPlayingUpdatesTimer
TB,N,GisEnabled
T@"NSString",C,N,V_overrideParentApplicationDisplayIdentifier
_playerControllerCurrentTimeJumpedObserver
_nowPlayingInfoNeedsUpdate
_commandHandlerIdentifier
_keyValueObservationController
_backgroundQueue
_overrideParentApplicationDisplayIdentifier
_playerControllerToActivateAfterDelay
_startNowPlayingUpdatesTimer
setOverrideParentApplicationDisplayIdentifier:
startNowPlayingUpdatesForPlayerController:afterDelay:
stopNowPlayingUpdatesForPlayerController:
_setNowPlayingInfoNeedsUpdate
_updateNowPlayingInfoIfNeeded
_updateNowPlayingInfo:commandsAndStates:
_makeNowPlayingInfo
_makeCommandsAndStatesDictionaryForPlayerController:
_updateRegisteredRemoteCommandEnabledStatesWithCommandsAndStates:
_handleRemoteCommand:options:
_availableLanguageOptions
_currentLanguageOptions
overrideParentApplicationDisplayIdentifier
playerControllerToActivateAfterDelay
setPlayerControllerToActivateAfterDelay:
startNowPlayingUpdatesTimer
setStartNowPlayingUpdatesTimer:
_createMediaRemoteLanguageOptionWithAVMediaSelectionOption:
_createMediaRemoteLanguageOptionGroupWithAVMediaSelectionOptions:
doubleValue
numberWithInt:
dataValue
firstObject
metadataItemsFromArray:filteredByIdentifier:
stringValue
numberWithDouble:
cancelPreviousPerformRequestsWithTarget:selector:object:
performSelector:withObject:afterDelay:
bundleIdentifier
mainBundle
numberWithUnsignedInt:
sharedNowPlayingInfoControllerWithCompletion:
_mediaRemoteLanguageOptionCharacteristicsForAVMediaSelectionOption:
_avMediaCharacteristics
_mediaRemoteLanguageOptionCharacteristicForAVMediaCharacteristic:
T@"CAGradientLayer",R,D,N
Td,N,V_gradientOpacity
_gradientOpacity
gradientOpacity
setGradientOpacity:
setCompositingFilter:
filterWithType:
setLocations:
setColors:
CGColor
T@"CABackdropLayer",R,D,N
T@"AVStatusBarBackgroundGradientViewSubview",&,N,V_gradientView
_gradientView
alpha
setAlpha:
gradientView
setGradientView:
connectedScenes
filteredSetUsingPredicate:
avkit_possiblePrimaryWindowScene
_findWindowForControllingOverallAppearanceInWindowScene:
openSessions
persistentIdentifier
avkit_possibleWindowForControllingOverallAppearance
avkit_windowSceneWithSessionIdentifier:
predicateWithBlock:
_unfairLock
_proxyObserversByTokens
_notificationObservers
_notificationCenters
_owner
initWithOwner:
startObserving:keyPaths:includeInitialValue:includeChanges:observationHandler:
startObserving:keyPath:includeInitialValue:observationHandler:
startObserving:keyPaths:observationHandler:
startObserving:keyPath:observationHandler:
startObserving:keyPaths:includeInitialValue:observationHandler:
startObservingNotificationForName:object:notificationCenter:observationHandler:
stopObserving:
stopAllObservation
_stopAllObservation
stopObserving
allValues
removeObjectForKey:
initWithName:object:userInfo:
token
startObserving:completion:
initWithObservedObject:observer:keyPaths:retainingObservedObject:includeInitialValue:includeChanges:changesBlock:
initWithValue:oldValue:keyPath:observationToken:
T@,R,N,V_value
T@,R,N,V_oldValue
T@"NSString",R,N,V_keyPath
T@,R,N,V_observationToken
_value
_oldValue
_keyPath
_observationToken
value
oldValue
keyPath
observationToken
null
T@"NSString",R,N,V_token
TB,R,N,V_includeInitialValue
TB,R,N,V_includeChanges
T@"NSSet",R,N,V_keyPaths
T@?,R,N,V_changesBlock
_retainedObservedObject
_unsafeUnretainedObservedObject
_canHandleChanges
_includeInitialValue
_includeChanges
_token
_keyPaths
_changesBlock
observeValueForKeyPath:ofObject:change:context:
_handleValueChangeForKeyPath:ofObject:oldValue:newValue:context:
includeInitialValue
includeChanges
keyPaths
changesBlock
removeObserver:forKeyPath:context:
valueForKeyPath:
addObserver:forKeyPath:options:context:
globallyUniqueString
processInfo
T@"AVMusicAppBehaviorContext",W,N,V_behaviorContext
contextWillHandleUserAction:
skipToNextItem
skipToPreviousItem
T@"AVMusicAppBehavior",W,N,V_behavior
T@"NSNumber",&,N,V_seekTargetTime
TB,N,V_showsSkipItemButtons
skipToPreviousItemButtonEnabled
TB,N,GisSkipToPreviousItemButtonEnabled,V_skipToPreviousItemButtonEnabled
skipToNextItemButtonEnabled
TB,N,GisSkipToNextItemButtonEnabled,V_skipToNextItemButtonEnabled
T@"AVPlayerViewController",R,W,N,V_playerViewController
_showsSkipItemButtons
_skipToPreviousItemButtonEnabled
_skipToNextItemButtonEnabled
_behavior
_seekTargetTime
T@"AVPlayerViewController",R,W,N
playerViewController:didCollectMetricsEvent:
viewDidLoad
contentViewWillTransitionToSize:withCoordinator:
willStartPictureInPictureWithViewController:
didStopPictureInPicture
makePlaybackContentContainerWithFrame:activeContentView:
playerControllerDidChange
initWithAVKitOwner:
willAddBehavior:
didAddBehavior:
willRemoveBehavior:
didRemoveBehavior:
behavior
setBehavior:
setSkipToNextItemButtonEnabled:
setSkipToPreviousItemButtonEnabled:
setShowsSkipItemButtons:
_updateSkipItemButtonsEnabled
_updatePlaybackControlsInclusion
showsSkipItemButtons
isSkipToPreviousItemButtonEnabled
isSkipToNextItemButtonEnabled
seekTargetTime
setSeekTargetTime:
avkit_setMusicBehaviorData:
avkit_musicAppBehaviorContext
T@"AVMusicAppBehaviorContext",R,W,N
URLForResource:withExtension:
stringByDeletingPathExtension
checkResourceIsReachableAndReturnError:
imageForResource:size:
URLForMovieResource:
dataWithContentsOfURL:
imageWithData:
pathExtension
T@"UIWindow",&,N,V_window
T@"UIWindowScene",R,W,N,V_windowScene
T@"UIScreen",R,W,N,V_screen
Tq,R,N,V_state
T@"CADisplay",&,N,V_debugInfoDisplay
TVOutScreen
TB,R,N,GisTVOutScreen,V_TVOutScreen
_TVOutScreen
_window
_windowScene
_screen
_state
_debugInfoDisplay
initWithScene:
connectWithSecondScreenConnection:
setState:
isAvailable
sceneBounds
_updatePreferredDisplayCriteria
_isWindowSceneAvailable
isTVOutScreen
window
setWindow:
windowScene
screen
state
debugInfoDisplay
setDebugInfoDisplay:
refreshRate
videoDynamicRange
setRootViewController:
setWindowScene:
T@"NSString",R,N,V_first
T@"NSString",R,N,V_second
_first
_second
initWithString:separatedByString:
keyEquals:
first
second
caseInsensitiveCompare:
T@"NSInputStream",R,N,V_inputStream
T@"NSOutputStream",R,N,V_outputStream
_inputStream
_outputStream
stream:handleEvent:
initWithInput:output:
invalidate
open
_readDataNonBlockingUpToMaxLength:
isReadyToSend
canWrite
_readAvailableData
_writeData:
_inputStreamHasBytesAvailable
_outputStreamDidOpen
_outputStreamCanWrite
_inputStreamDidClose
inputStream
outputStream
eventThread
currentThread
terminatePendingRequests
writeMore
performOnAirChannelQueueSync:
removeObjectAtIndex:
streamDataTransformer
receiveResponseBlocks
write:maxLength:
bytes
hasSpaceAvailable
streamStatus
streamError
setLength:
increaseLengthBy:
read:maxLength:
mutableBytes
initWithLength:
hasBytesAvailable
close
eventRunLoop
T@"NSMutableArray",R,N,V_receiveResponseBlocks
T@"<AVAirTransportTransformationProtocol>",&,N,V_streamDataTransformer
T@"<AVAirTransportDelegate>",W,N,V_delegate
_outputQueue
_leftoverInputData
_requestCompletions
_streamDataTransformer
_receiveResponseBlocks
requestCompletions
writeData:
sendObject:receiveResponse:
sendResponse:
setStreamDataTransformer:
performSync:
airTransportQueue
_isRunningOnAirChannelQueue
performAsync:
setObject:atIndexedSubscript:
subdataWithRange:
timeIntervalSinceReferenceDate
T@"NSRunLoop",R,N
T@"NSThread",R,N
startEventThreadIfNecessary
__performBlock:
performSelector:onThread:withObject:waitUntilDone:
currentRunLoop
setName:
addTimer:forMode:
timerWithTimeInterval:repeats:block:
timeIntervalSinceNow
distantFuture
initWithBlock:
channelWithInput:output:
T@"AVAirTransport",&,N,V_channel
T@"AVBonjourServiceClient",R,N,V_bonjourServiceClient
T@"<AVAirMessageDispatcherClientDelegate>",W,N,V_delegate
T@"NSNetService",&,N,V_currentNetService
_currentNetService
_channel
_bonjourServiceClient
didConnectToBonjourService:channel:
haveAirPlayService
sendMessage:completion:
currentNetService
setCurrentNetService:
channel
setChannel:
bonjourServiceClient
didChangeTargetForAirMessageDispatcher:
_isDispatcherEnabled
T@"AVPictureInPictureViewController",W,N,V_pictureInPictureViewController
T@"AVVideoCallPlayerController",R,N,V_videoCallPlayerController
T@"NSTimer",&,N,V_observeSourceViewTimer
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_lastKnownVideoRectInWindow
TB,N,V_lastKnownIsVisible
T@"AVPictureInPictureController",W,N,V_pictureInPictureController
T@"AVPictureInPictureControllerContentSource",W,N,V_contentSource
_lastKnownIsVisible
_videoCallPlayerController
_observeSourceViewTimer
_pictureInPictureController
_contentSource
_lastKnownVideoRectInWindow
initWithNibName:bundle:
startObservingSourceView
stopObservingSourceView
setPreferredContentSize:
videoCallPlayerController
_observeSourceView
_setLastKnownIsVisible:videoRectInWindow:
_removeFromParent
setPictureInPictureViewController:
observeSourceViewTimer
setObserveSourceViewTimer:
lastKnownVideoRectInWindow
setLastKnownVideoRectInWindow:
lastKnownIsVisible
setLastKnownIsVisible:
pictureInPictureController
setPictureInPictureController:
contentSource
setContentSource:
removeFromParentViewController
willMoveToParentViewController:
parentViewController
addChildViewController:
setPictureInPicturePossible:
preferredContentSize
pictureInPicturePossible
TB,N,GisPictureInPicturePossible,V_pictureInPicturePossible
_pictureInPicturePossible
isPlaying
timeControlStatus
isPictureInPicturePossible
avkit_isEffectivelyFullScreen
viewIfLoaded
isStatusBarHidden
statusBarStyle
setNeedsStatusBarAppearanceUpdate
_effectiveUIClientSettings
whitePointAdaptivityStyle
setNeedsWhitePointAdaptivityStyleUpdate
homeIndicatorAutoHidden
setNeedsUpdateOfHomeIndicatorAutoHidden
avkit_setNeedsUpdatePreferencesIfNeeded
statusBarManager
_disableTouchCancellationOnRotation
instancesRespondToSelector:
avkit_disableTouchCancellation:forRotationActions:
avkit_supportsInteractiveCounterRotationDismissals
T@"AVSeymourBehaviorContext",W,N,V_behaviorContext
seymourBehaviorContext:didRecieveDoneButtonTapWithDismissalBlock:
T@"UIActivityIndicatorView",&,N,V_loadingIndicator
T@"AVButton",R,N,V_button
TB,N,V_showsLoadingIndicator
TB,R,N,GisCollapsedOrExcluded,V_collapsedOrExcluded
_collapsedOrExcluded
_showsLoadingIndicator
_button
_loadingIndicator
initWithTitle:
setShowsLoadingIndicator:
button
showsLoadingIndicator
loadingIndicator
setLoadingIndicator:
stopAnimating
startAnimating
systemFontOfSize:
titleLabel
setColor:
initWithActivityIndicatorStyle:
T@"NSString",R,N,V_clientIdentifier
T@"NSString",R,N,V_sceneIdentifier
TB,N,V_prefersSystemVolumeHUDHidden
T@"UIWindowScene",R,N
onScreenForVolumeDisplay
TB,R,N,GisOnScreenForVolumeDisplay
onScreen
TB,R,N,GisOnScreen
_prefersSystemVolumeHUDHidden
_clientIdentifier
_sceneIdentifier
windowSceneForVolumeDisplay
isOnScreenForVolumeDisplay
volumeAudioCategory
isOnScreen
initWithSceneIdentifier:clientIdentifier:
clientIdentifier
sceneIdentifier
prefersSystemVolumeHUDHidden
setPrefersSystemVolumeHUDHidden:
volumeCategoryForAudioCategory:
sharedAVSystemController
stringByAppendingString:
changingVolume
TB,N,GisChangingVolume,V_changingVolume
TB,N,V_currentRouteHasVolumeControl
Tf,N,V_volume
TB,N,V_volumeChangesThrottled
T@"NSNumber",&,N,V_targetVolumeInternal
T@"NSNumber",&,N,V_maximumTargetVolumeSinceChangingVolumeBegan
T@"NSString",R,N,V_volumeCategory
T@"AVSystemController",&,N,V_sharedSystemController
fullyInitialized
TB,N,GisFullyInitialized,V_fullyInitialized
T@"NSString",R,N,V_uniqueIdentifier
T@"NSString",R,N,V_windowSceneSessionIdentifier
_changingVolume
_currentRouteHasVolumeControl
_volumeChangesThrottled
_fullyInitialized
_volume
_targetVolumeInternal
_maximumTargetVolumeSinceChangingVolumeBegan
_volumeCategory
_sharedSystemController
_uniqueIdentifier
_windowSceneSessionIdentifier
TB,R,N,GisChangingVolume
Tf,R,N
volumeController
setClientWithIdentifier:forWindowSceneSessionWithIdentifier:
beginChangingVolume
endChangingVolume
setTargetVolume:
isChangingVolume
volume
_removeVolumeHUDAssertionsForClientID:
setSystemVolumeHUDEnabled:forSceneVolumeHudAssertion:
setSystemVolumeHUDEnabled:forWindowSceneSessionIdentifier:
setVolume:
_postNotificationForNameIfFullyInitialized:userInfo:
_observeSystemController
_unobserveSystemController
_handleSystemControllerServerDiedNotification
_handleSystemVolumeDidChangeNotification:
_handleCurrentRouteHasVolumeControlDidChangeNotification:
_applyProposedVolumeIfNeeded
_applyProposedVolumeImmediately
_performOnMainThread:
setChangingVolume:
setCurrentRouteHasVolumeControl:
volumeChangesThrottled
setVolumeChangesThrottled:
targetVolumeInternal
setTargetVolumeInternal:
maximumTargetVolumeSinceChangingVolumeBegan
setMaximumTargetVolumeSinceChangingVolumeBegan:
volumeCategory
sharedSystemController
setSharedSystemController:
isFullyInitialized
setFullyInitialized:
uniqueIdentifier
windowSceneSessionIdentifier
mutableCopy
windowSceneVolumeHUDAssertions
setVolumeTo:forCategory:
removeObserver:name:object:
addObserver:selector:name:object:
setAttribute:forKey:error:
postNotificationName:object:userInfo:
_setSystemVolumeHUDEnabled:
setNeedsUpdate
addVolumeDisplay:
_appAdoptsUISceneLifecycle
objectsPassingTest:
numberWithFloat:
getVolume:forCategory:
T@"NSMutableSet",R,N
T@"AVZoomingBehaviorContext",W,N,V_behaviorContext
setLayoutMargins:
setInsetsLayoutMarginsFromSafeArea:
setPreservesSuperviewLayoutMargins:
T@"UIView",R,N,V_transportControlsAreaLayoutGuideProvidingView
T@"UIView",R,N,V_displayModeControlsAreaLayoutGuideProvidingView
T@"UIView",R,N,V_volumeControlsAreaLayoutGuideProvidingView
T@"UIView",R,N,V_unobscuredTopAreaLayoutGuideProvidingView
T@"UIView",R,N,V_unobscuredCenterAreaLayoutGuideProvidingView
T@"UIView",R,N,V_animatedUnobscuredCenterAreaLayoutGuideProvidingView
TB,N,V_areTransportControlsVisible
TB,N,V_areVolumeControlsVisible
T@"UILayoutGuide",R,N,V_transportControlsAreaLayoutGuide
T@"UILayoutGuide",R,N,V_displayModeControlsAreaLayoutGuide
T@"UILayoutGuide",R,N,V_volumeControlsAreaLayoutGuide
T@"UILayoutGuide",R,N,V_unobscuredCenterAreaLayoutGuide
T@"UILayoutGuide",R,N,V_animatedUnobscuredCenterAreaLayoutGuide
T@"UILayoutGuide",R,N,V_unobscuredTopAreaLayoutGuide
_needsInitialConstraints
_transportControlsVisibleConstraint
_transportControlsHiddenConstraint
_volumeControlsVisibleConstraint
_volumeControlsHiddenConstraint
_areTransportControlsVisible
_areVolumeControlsVisible
_transportControlsAreaLayoutGuide
_displayModeControlsAreaLayoutGuide
_volumeControlsAreaLayoutGuide
_unobscuredCenterAreaLayoutGuide
_animatedUnobscuredCenterAreaLayoutGuide
_unobscuredTopAreaLayoutGuide
_transportControlsAreaLayoutGuideProvidingView
_displayModeControlsAreaLayoutGuideProvidingView
_volumeControlsAreaLayoutGuideProvidingView
_unobscuredTopAreaLayoutGuideProvidingView
_unobscuredCenterAreaLayoutGuideProvidingView
_animatedUnobscuredCenterAreaLayoutGuideProvidingView
setAreVolumeControlsVisible:
setAreTransportControlsVisible:
updateConstraints
transportControlsAreaLayoutGuide
displayModeControlsAreaLayoutGuide
volumeControlsAreaLayoutGuide
unobscuredCenterAreaLayoutGuide
animatedUnobscuredCenterAreaLayoutGuide
unobscuredTopAreaLayoutGuide
transportControlsAreaLayoutGuideProvidingView
displayModeControlsAreaLayoutGuideProvidingView
volumeControlsAreaLayoutGuideProvidingView
unobscuredTopAreaLayoutGuideProvidingView
unobscuredCenterAreaLayoutGuideProvidingView
animatedUnobscuredCenterAreaLayoutGuideProvidingView
areTransportControlsVisible
areVolumeControlsVisible
constraintEqualToAnchor:
constraintLessThanOrEqualToAnchor:constant:
constraintGreaterThanOrEqualToAnchor:constant:
safeAreaLayoutGuide
constraintEqualToAnchor:constant:
setNeedsUpdateConstraints
requiresConstraintBasedLayout
Td,R,N,V_initializationTimestamp
Td,R,N,V_initializedElapsedTime
Td,R,N,V_timelineRate
Td,R,N,V_timelineDuration
paused
TB,R,N,GisPaused,V_paused
_paused
_initializationTimestamp
_initializedElapsedTime
_timelineRate
_timelineDuration
initWithElapsedTime:timelineDuration:timelineRate:paused:
currentElapsedTime
initializationTimestamp
initializedElapsedTime
timelineRate
timelineDuration
isPaused
T@"NSString",&,N,V_currentMicaPackageName
T@"AVButton",R,N
_customButton
_currentMicaPackageName
customButton
setPrioritizesVideoDevices:
setCurrentMicaPackageName:
_updateCustomButtonMicaPackage
updateButtonAppearance
currentMicaPackageName
colorWithAlphaComponent:
setAllowsGroupBlending:
avkit_ancestorViewPassingTest:
avkit_wantsAnimatedViewTransitions
avkit_largestInscribedRectInBoundingPathWithCenter:aspectRatio:
avkit_portionOfFrameUnobscuredBySuperviews
isPagingEnabled
_isAnimatingScrollTest
avkit_hitTestControlForPoint:withEvent:bestSoFar:shortestDistanceSoFar:
isDecelerating
isDragging
_isAnimatingScroll
_horizontalVelocity
_verticalVelocity
isUserInteractionEnabled
presentationLayer
opacity
subviews
_isInAWindow
isHiddenOrHasHiddenAncestor
avkit_isCompletelyTransparent
avkit_overrideLayoutMarginsForCounterRotation
avkit_isVideoGravityFrozen
avkit_isCounterRotatedForTransition
avkit_isBeingDismissed
avkit_isBeingPresented
avkit_needsUpdateBackdropCaptureViewHidden
avkit_backdropGroupLeader
avkit_isBeingScrollTested
avkit_isBeingScrolled
avkit_isAncestorOfViewPassingTest:
avkit_isBeingScrolledQuickly
avkit_isInAScrollView
avkit_isDescendantOfNonPagingScrollView
avkit_makeSubtreeDisallowGroupBlending
avkit_hasFullScreenLayoutClass
avkit_reevaluateHiddenStateOfItem:
avkit_sizeWasInvalidatedNeedingLayoutIfNeeded:
convertRect:toView:
avkit_isDescendantOfViewPassingTest:
avkit_hitTestControlForPoint:withEvent:
avkit_isInAWindowAndVisible
TB,N,V_shouldUseCompactFullScreenSize
T@"UITraitCollection",&,N,V_traitCollection
TB,R,GshouldUseMacStyle
TB,R,GshouldUsePadStyle
T{CGSize=dd},R,N,V_defaultItemInlineSize
T{CGSize=dd},R,N,V_defaultItemFullScreenSize
Td,R,N,V_standardPaddingFullScreen
Td,R,N,V_standardPaddingInline
Td,R,N,V_standardInteritemPadding
Td,R,N,V_additionalInlinePaddingForDodgingSafeArea
T{CGSize=dd},R,N,V_routePickerButtonInlineSize
T{CGSize=dd},R,N,V_routePickerButtonFullScreenSize
T{CGSize=dd},R,N,V_audioRoutePickerFullScreenSize
Td,R,N,V_volumeSliderInlineWidth
Td,R,N,V_volumeSliderCompactFullScreenWidth
Td,R,N,V_volumeSliderRegularFullScreenWidth
Td,R,N,V_volumeSliderPadding
T{CGSize=dd},R,N,V_volumeButtonInlineSize
T{CGSize=dd},R,N,V_volumeButtonFullScreenSize
Td,R,N,V_minimumProminentPlayButtonDimension
Td,R,N,V_maximumProminentPlayButtonDimension
Td,R,N,V_maximumTransportControlsWidth
Td,R,N,V_maximumMultiRowTransportControlsWidth
Td,R,N,V_minimumTransportControlsWidth
Td,R,N,V_minimumSingleButtonTransportControlsWidth
T{CGSize=dd},R,N,V_minimumScrubberSize
T{NSDirectionalEdgeInsets=dddd},R,N,V_doubleRowLayoutMargins
T{NSDirectionalEdgeInsets=dddd},R,N,V_doubleRowLayoutMarginsWhenShowingScrubInstructions
T{NSDirectionalEdgeInsets=dddd},R,N,V_doublerowLayoutMarginsWhenShowingCustomContentInfo
Td,R,N,V_spacingBetweenScrubInstructionsAndScrubber
Td,R,N,V_liveBroadcastLabelTopToBackdropTopDistance
T@"UIFont",R,N,V_infoLabelFont
T@"UIFont",R,N,V_scrubberTimeLabelFont
T@"UIFont",R,N,V_scrubberInfoLabelFont
_shouldUseCompactFullScreenSize
_scrubberTimeLabelFont
_scrubberInfoLabelFont
_infoLabelFont
_standardPaddingFullScreen
_standardPaddingInline
_standardInteritemPadding
_additionalInlinePaddingForDodgingSafeArea
_volumeSliderInlineWidth
_volumeSliderCompactFullScreenWidth
_volumeSliderRegularFullScreenWidth
_volumeSliderPadding
_minimumProminentPlayButtonDimension
_maximumProminentPlayButtonDimension
_maximumTransportControlsWidth
_maximumMultiRowTransportControlsWidth
_minimumTransportControlsWidth
_minimumSingleButtonTransportControlsWidth
_spacingBetweenScrubInstructionsAndScrubber
_liveBroadcastLabelTopToBackdropTopDistance
_traitCollection
_defaultItemInlineSize
_defaultItemFullScreenSize
_routePickerButtonInlineSize
_routePickerButtonFullScreenSize
_audioRoutePickerFullScreenSize
_volumeButtonInlineSize
_volumeButtonFullScreenSize
_minimumScrubberSize
_doubleRowLayoutMargins
_doubleRowLayoutMarginsWhenShowingScrubInstructions
_doublerowLayoutMarginsWhenShowingCustomContentInfo
initWithTraitCollection:shouldUseCompactFullScreenSize:
playbackControlsViewLayoutMarginsForView:keyboardHeight:isFullScreen:
scrubberInfoLabelFont
scrubberTimeLabelFont
infoLabelFont
shouldUseMacStyle
shouldUsePadStyle
_loadFontsIfNeeded
defaultItemInlineSize
defaultItemFullScreenSize
standardPaddingFullScreen
standardPaddingInline
standardInteritemPadding
additionalInlinePaddingForDodgingSafeArea
routePickerButtonInlineSize
routePickerButtonFullScreenSize
audioRoutePickerFullScreenSize
volumeSliderInlineWidth
volumeSliderCompactFullScreenWidth
volumeSliderRegularFullScreenWidth
volumeSliderPadding
volumeButtonInlineSize
volumeButtonFullScreenSize
minimumProminentPlayButtonDimension
maximumProminentPlayButtonDimension
maximumTransportControlsWidth
maximumMultiRowTransportControlsWidth
minimumTransportControlsWidth
minimumSingleButtonTransportControlsWidth
minimumScrubberSize
doubleRowLayoutMargins
doubleRowLayoutMarginsWhenShowingScrubInstructions
doublerowLayoutMarginsWhenShowingCustomContentInfo
spacingBetweenScrubInstructionsAndScrubber
liveBroadcastLabelTopToBackdropTopDistance
shouldUseCompactFullScreenSize
setShouldUseCompactFullScreenSize:
traitCollection
setTraitCollection:
fontWithDescriptor:size:
fontDescriptorByAddingAttributes:
fontDescriptor
monospacedDigitSystemFontOfSize:weight:
_peripheryInsets
_classicMode
_isClassic
displayCornerRadius
statusBarFrame
safeAreaInsets
T@"AVEditBehaviorContext",W,N,V_behaviorContext
T@"<AVEditBehaviorDelegate>",W,N,V_delegate
T@"AVContentOverlayView",R,N,V__actualContentOverlayView
T@"AVFullScreenViewController",R,N
TB,N,V_shouldUseNetworkingResourcesForLiveStreamingWhilePaused
T@?,C,N,V_finishPreparingForInteractiveDismissalHandler
T@?,C,N,V_dismissForPIPStartAfterPresentationHandler
T@?,C,N,V_pendingRestoreUserInterfaceForPictureInPictureStopHandler
T@?,C,N,V_interactiveDismissalCompletionHandler
T@"AVObservationController",R,N,V__observationController
T@"AVObservationController",R,N,V__pipActivitySessionObservationController
T@"AVBehaviorStorage",R,N,V__behaviorStorage
T@"NSMutableDictionary",R,N,V__targetVideoGravitiesForLayoutClass
TB,N,V__hasBegunObservation
Tq,N,S_setNumberOfTrackedUserInteractions:,V__numberOfTrackedUserInteractions
T@"UIHoverGestureRecognizer",&,N,V_hoverGestureRecognizer
T@"UIPanGestureRecognizer",&,N,V_scrubGestureRecognizer
T@"NSMutableDictionary",R,N,V__localizedDiscoverabilityTitleForKeyCommandLocalizationKey
TQ,N,V_overrideRouteSharingPolicy
T{CGSize=dd},N,V_secondScreenConnectionDisplaySize
T@"AVPlayerControllerVolumeAnimator",&,N,V_volumeAnimator
T@"__AVPlayerLayerView",&,N,V_playerLayerView
TB,N,GisReadyForDisplay,V_readyForDisplay
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_videoBounds
TB,N,V_hasPerformedInitialSetup
TB,N,V_wasInitializedUsingWebKitSPI
hoveringOverPlaybackControl
TB,N,GisHoveringOverPlaybackControl,V_hoveringOverPlaybackControl
T@"NSString",C,N,V_overrideRoutingContextUID
TB,N,V_requiresImmediateAssetInspection
TB,N,V_canHidePlaybackControls
T@"AVPlayerViewControllerCustomControlsView",R,N
TB,N,V_playbackControlsIncludeVolumeControls
T@"UIViewController",R,N
T@"NSArray",C,N,V_customControlItems
Td,N,V_defaultPlaybackRate
TB,N,V_canIncludePlaybackControlsWhenInline
T@"NSValue",&,N
pictureInPictureActive
TB,R,N,GisPictureInPictureActive,V_pictureInPictureActive
T@"NSString",C,N,V_pictureInPictureActivitySessionIdentifier
T@?,C,N
TB,N,V_wantsDetachedFullscreenPresentation
TB,N,V_showsTimecodes
T@"NSString",C,N
T@"UIView",R,N
TB,N,V_canStartPictureInPictureAutomaticallyFromInline
TB,N,V_entersFullScreenWhenPlaybackBegins
TB,N,V_exitsFullScreenWhenPlaybackEnds
T@"<AVPlayerViewControllerDelegate>",W,N,V_delegate
_playerShouldAutoplay
_hasClientSetVideoGravity
_canShowPictureInPictureButton
_pixelBufferAttributes
_canHidePlaybackControls
_hoveringOverPlaybackControl
_canDisplayContentInDetachedWindow
_mediaSelectionPopoverPresentationController
_transitionController
_playbackControlsController
_playerViewControllerView
_playerViewControllerContentView
_overrideLayoutMarginsWhenEmbeddedInline
_overrideTransformForProminentPlayButton
_canToggleVideoGravityWhenEmbeddedInline
_playbackControlsShouldControlSystemVolume
_customControlsView
_scrubGestureMomentumTimer
_scrubGestureIsActive
_defaultLinearPlaybackRate
_showsTimecodes
_readyForDisplay
_canStartPictureInPictureAutomaticallyFromInline
_entersFullScreenWhenPlaybackBegins
_exitsFullScreenWhenPlaybackEnds
_shouldUseNetworkingResourcesForLiveStreamingWhilePaused
__hasBegunObservation
_hasPerformedInitialSetup
_wasInitializedUsingWebKitSPI
_requiresImmediateAssetInspection
_playbackControlsIncludeVolumeControls
_canIncludePlaybackControlsWhenInline
_pictureInPictureActive
_wantsDetachedFullscreenPresentation
__targetVideoGravitiesForLayoutClass
__actualContentOverlayView
_finishPreparingForInteractiveDismissalHandler
_dismissForPIPStartAfterPresentationHandler
_pendingRestoreUserInterfaceForPictureInPictureStopHandler
_interactiveDismissalCompletionHandler
__observationController
__pipActivitySessionObservationController
__behaviorStorage
__numberOfTrackedUserInteractions
_hoverGestureRecognizer
_scrubGestureRecognizer
__localizedDiscoverabilityTitleForKeyCommandLocalizationKey
_overrideRouteSharingPolicy
_volumeAnimator
_overrideRoutingContextUID
_customControlItems
_defaultPlaybackRate
_pictureInPictureActivitySessionIdentifier
_secondScreenConnectionDisplaySize
_videoBounds
playbackControlsViewNeedsUpdateStatusBarAppearance:
playbackControlsView:animateAlongsideVisibilityAnimationsWithAnimationCoordinator:appearingViews:disappearingViews:
playerControllerCanRestorePlaybackRateAfterAudioSessionDeactivation:
playbackRateCollection:selectedPlaybackRateDidChangeTo:
contentOverlayViewDidAddOrRemoveSubview:
transitionController:configurationForPresentedViewController:presentingViewController:
transitionController:willBeginPresentingViewController:
transitionController:willBeginDismissingViewController:
transitionController:targetViewForDismissingViewController:
transitionController:gestureRecognizer:shouldReceiveTouch:
transitionControllerPresentedViewBackgroundColor:
transitionControllerBackgroundViewBackgroundColor:
transitionControllerCanBeginInteractiveDismissalTransition:
transitionControllerCanBeginInteractivePresentationTransition:
transitionControllerBeginInteractivePresentationTransition:
transitionControllerBeginInteractiveDismissalTransition:
transitionController:prepareForFinishingInteractiveTransition:
transitionController:transitionWillComplete:continueBlock:
transitionController:animationProgressDidChange:
fullScreenViewControllerWillBeginFullScreenPresentation:
fullScreenViewControllerWillEndFullScreenPresentation:
viewForFullScreenViewController:
playbackContainerViewForFullScreenViewController:
fullScreenViewController:viewWillTransitionToSize:coordinator:
prefersStatusBarHiddenForFullScreenViewController:
preferredStatusStyleForFullScreenViewController:
keyCommandResponderForFullScreenViewController:
preferredInterfaceOrientationForPresentation
supportedInterfaceOrientations
shouldAutorotate
prepareForPopoverPresentation:
popoverPresentationControllerShouldDismissPopover:
popoverPresentationControllerDidDismissPopover:
popoverPresentationController:willRepositionPopoverToRect:inView:
adaptivePresentationStyleForPresentationController:
adaptivePresentationStyleForPresentationController:traitCollection:
presentationController:prepareAdaptivePresentationController:
presentationController:viewControllerForAdaptivePresentationStyle:
presentationController:willPresentWithAdaptiveStyle:transitionCoordinator:
presentationControllerShouldDismiss:
presentationControllerWillDismiss:
presentationControllerDidDismiss:
presentationControllerDidAttemptToDismiss:
pictureInPictureControllerWillStartPictureInPicture:
pictureInPictureControllerDidStartPictureInPicture:
pictureInPictureController:failedToStartPictureInPictureWithError:
pictureInPictureControllerWillStopPictureInPicture:
pictureInPictureControllerDidStopPictureInPicture:
pictureInPictureController:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:
initWithCoder:
encodeWithCoder:
setRequiresImmediateAssetInspection:
setCanIncludePlaybackControlsWhenInline:
_targetVideoGravitiesForLayoutClass
updateVideoBounds
videoDisplayScale
setShowsTimecodes:
interactiveContentOverlayView
customControlsView
_updateCustomControlsViewSuperViewIfNeeded
hasCustomPlaybackControls
canControlPlayback
setCanHidePlaybackControls:
_inlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused
_setInlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused:
playbackControlsIncludeTransportControls
setPlaybackControlsIncludeTransportControls:
playbackControlsIncludeDisplayModeControls
setPlaybackControlsIncludeDisplayModeControls:
playbackControlsIncludeVolumeControlsControls
setPlaybackControlsIncludeVolumeControls:
volumeControlsCanShowSlider
setVolumeControlsCanShowSlider:
setEntersFullScreenWhenPlaybackBegins:
flashPlaybackControlsWithDuration:
setShouldUseNetworkingResourcesForLiveStreamingWhilePaused:
setCustomControlItems:
setOverrideLayoutMarginsWhenEmbeddedInline:
setPictureInPictureActivitySessionIdentifier:
overrideLayoutMarginsWhenEmbeddedInline
_activeViewControllerForContentView
viewControllerForFullScreenPresentation
_ensureBehaviorStorage
setHoveringOverPlaybackControl:
setDefaultPlaybackRate:
loadView
performInitialSetupIfNeededAndPossible
performInitialSetup
viewWillAppear:
viewDidAppear:
viewDidDisappear:
viewDidMoveToWindow:shouldAppearOrDisappear:
didMoveToParentViewController:
viewWillTransitionToSize:withTransitionCoordinator:
preferredWhitePointAdaptivityStyle
modalPresentationCapturesStatusBarAppearance
prefersStatusBarHidden
preferredStatusBarStyle
prefersHomeIndicatorAutoHidden
transitioningDelegate
_preferredModalPresentationStyle
_requiresCustomPresentationController
_presentationControllerForPresentedController:presentingController:sourceController:
canBecomeFirstResponder
keyCommands
_handleExitFullScreenKeyCommand:
_handlePlayPauseKeyCommand:
_handleSkipBack15SecondsKeyCommand:
_handleSkipAhead15SecondsKeyCommand:
_handleShowNextFrameKeyCommand:
_handleGoToBeginningKeyCommand:
_handleShowPreviousFrameKeyCommand:
_handleVolumeUpKeyPressedCommand:
_handleVolumeUpKeyReleasedCommand:
_handleVolumeDownKeyPressedCommand:
_handleVolumeDownKeyReleasedCommand:
_handleRewindKeyPressedCommand:
_handleRewindKeyReleasedCommand:
_handleFastForwardKeyPressedCommand:
_handleFastForwardKeyReleasedCommand:
_addObservers
_createPictureInPictureControllerIfNeeded
setCanStartPictureInPictureAutomaticallyFromInline:
_isUnsupportedContent
_updateUnsupportedContentIndicatorView
isAudioOnlyContent
_updateAudioOnlyIndicatorView
_updateExternalPlaybackIndicatorView
_updatePlaybackControlsController
_shouldShowPictureInPictureButton
_handleDoubleTapGesture:
_handleSingleTapGesture:
_handleDoubleDoubleTapGesture:
_handleUserInteractionObservationRecognizer:
_beginTrackingUserInteraction
_endTrackingUserInteraction
_isTrackingUserInteraction
_isTrackingUserInteractionWithInteractiveView
_togglePictureInPicture
_mediaSelectionDoneButtonTapped:
_notifyOfMetricsCollectionEvent:
_delegateRespondsTo:
_contentViewWillTransitionToSize:withTransitionCoordinator:
_handleHoverGestureRecognizer:
_handleScrubInteruptionGestureRecognizer:
_handleScrubbingGestureRecognizer:
_applyNonlinearScaleToScrubGestureVelocity:
_seekDistanceForScrubGestureWithVelocity:
_seekForScrubGestureWithVelocity:
_shouldPausePlaybackWhenExitingFullscreen
_endScrubGestureIfActive
_hoverGestureRecognizer:hasCursorOverView:
_loadObservationControllerIfNeeded
_updateContentOverlayViewSuperview
_updatePlaybackControlsCanHideStateIfNeeded
showFullScreenPresentationFromView:completion:
enterFullScreenWithCompletion:
exitFullScreenWithCompletion:
fullScreenViewController
_transitionControllerIfLoaded
_avkitPreferredTransitioningDelegate
_isDescendantOfRootViewController
_transitionFromFullScreenWithReason:animated:completionHandler:
_canEnterFullScreen
_transitionToFullScreenAnimated:interactive:completionHandler:
_transitionToAttachedFullScreenAnimated:interactive:completionHandler:
_transitionToDetachedFullScreenCompletionHandler:
_transitionFromFullScreenAnimated:completionHandler:
_transitionFromFullScreenAnimated:interactive:completionHandler:
_transitionFromInlineToFullScreenPresentationAnimated:interactive:completionHandler:
_transitionFromInlineToDetachedFullScreenPresentationAnimated:completionHandler:
_isTransitioningToOrFromFullScreen
_modalPresentationStyleIsFullScreen
_updateDefaultPlaybackRateIfNeeded
_updateDefaultLinearPlaybackRateIfNeeded
_updateSelectedPlaybackRateIfNeeded
_updateSelectedPlaybackRateIfPlayerControllerRateChanges
canHidePlaybackControls
isHoveringOverPlaybackControl
showsTimecodes
setReadyForDisplay:
setVideoBounds:
canStartPictureInPictureAutomaticallyFromInline
entersFullScreenWhenPlaybackBegins
exitsFullScreenWhenPlaybackEnds
setExitsFullScreenWhenPlaybackEnds:
_actualContentOverlayView
shouldUseNetworkingResourcesForLiveStreamingWhilePaused
finishPreparingForInteractiveDismissalHandler
setFinishPreparingForInteractiveDismissalHandler:
dismissForPIPStartAfterPresentationHandler
setDismissForPIPStartAfterPresentationHandler:
pendingRestoreUserInterfaceForPictureInPictureStopHandler
setPendingRestoreUserInterfaceForPictureInPictureStopHandler:
interactiveDismissalCompletionHandler
setInteractiveDismissalCompletionHandler:
_pipActivitySessionObservationController
_behaviorStorage
_hasBegunObservation
set_hasBegunObservation:
_numberOfTrackedUserInteractions
_setNumberOfTrackedUserInteractions:
hoverGestureRecognizer
setHoverGestureRecognizer:
scrubGestureRecognizer
setScrubGestureRecognizer:
_localizedDiscoverabilityTitleForKeyCommandLocalizationKey
overrideRouteSharingPolicy
setOverrideRouteSharingPolicy:
secondScreenConnectionDisplaySize
setSecondScreenConnectionDisplaySize:
volumeAnimator
setVolumeAnimator:
hasPerformedInitialSetup
setHasPerformedInitialSetup:
wasInitializedUsingWebKitSPI
setWasInitializedUsingWebKitSPI:
overrideRoutingContextUID
setOverrideRoutingContextUID:
requiresImmediateAssetInspection
playbackControlsIncludeVolumeControls
customControlItems
defaultPlaybackRate
canIncludePlaybackControlsWhenInline
isPictureInPictureActive
pictureInPictureActivitySessionIdentifier
wantsDetachedFullscreenPresentation
setWantsDetachedFullscreenPresentation:
deactivationReasons
uiSettings
_FBSScene
contentView
playerViewController:willTransitionToVisibilityOfPlaybackControls:withAnimationCoordinator:
animateAlongsideTransition:completion:
transitionCoordinator
playbackControlsController
presentationContext
playerViewController:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:
animateWithDuration:animations:
playerViewControllerDidStopPictureInPicture:
playerViewControllerWillStopPictureInPicture:
playerViewController:failedToStartPictureInPictureWithError:
endBackgroundTask:
isPresentingFullScreenFromInline
playerViewControllerShouldAutomaticallyDismissAtPictureInPictureStart:
playerViewControllerDidStartPictureInPicture:
beginBackgroundTaskWithExpirationHandler:
playerViewControllerWillStartPictureInPicture:
dismissViewControllerAnimated:completion:
playerViewControllerEndReducingResourcesForPictureInPicture:
playerViewControllerBeginReducingResourcesForPictureInPicture:
loadViewIfNeeded
entersFullScreenWhenTapped
numberOfTapsRequired
modalPresentationStyle
canDisplayContentInDetachedWindow
playerViewController:shouldExitFullScreenWithReason:
playerViewController:targetViewForDismissalAnimationWithProposedTargetView:
playerViewController:willEndFullScreenPresentationWithAnimationCoordinator:
isCancelled
isInteractive
playerViewControllerShouldMuteVolumeForFullScreenDismissalTransition:
playerViewController:willBeginFullScreenPresentationWithAnimationCoordinator:
attemptRotationToDeviceOrientation
isPresentingDetachedFullScreen
isPresentedFullScreen
setTransitioningDelegate:
setModalPresentationStyle:
exitFullScreenAnimated:completionHandler:
enterFullScreenAnimated:completionHandler:
playerViewController:contentViewWillTransitionToSize:withTransitionCoordinator:
playerViewController:metricsCollectionEventOccured:
stopPictureInPicture
canToggleVideoGravityWhenEmbeddedInline
canShowPictureInPictureButton
playerViewControllerShouldStartPictureInPictureFromInlineWhenEnteringBackground:
setNumberOfTouchesRequired:
setNumberOfTapsRequired:
lowercaseString
togglePlayback:
exitFullscreen:
setWantsPriorityOverSystemBehavior:
keyCommandWithInput:modifierFlags:action:upAction:discoverabilityTitle:
setDiscoverabilityTitle:
keyCommandWithInput:modifierFlags:action:
isNavigationBarHidden
navigationController
setAllowedTouchTypes:
_setiOSMacIgnoreScrollDirectionUserPreference:
setAllowedScrollTypesMask:
requireGestureRecognizerToFail:
isViewLoaded
_viewControllerForFullScreenPresentationFromView:
setEdgesInsettingLayoutMarginsFromSafeArea:
dispatchQueue
encodeInteger:forKey:
encodeBool:forKey:
decodeIntegerForKey:
decodeBoolForKey:
playerWithURL:
decodeObjectOfClass:forKey:
containsValueForKey:
keyPathsForValuesAffectingVideoGravity
iAdPrerollView
setCanDisplayContentInDetachedWindow:
setPlaybackControlsShouldControlSystemVolume:
needsLayout
isPictureInPictureSuspended
pictureInPictureWasStartedWhenEnteringBackground
initWithPlayerLayerView:
showsExitFullScreenButton
setShowsExitFullScreenButton:
playbackControlsShouldControlSystemVolume
setWebKitOverrideRouteSharingPolicy:routingContextUID:
keyPathsForValuesAffectingPictureInPicturePossible
keyPathsForValuesAffectingPictureInPictureActive
keyPathsForValuesAffectingPictureInPictureSuspended
keyPathsForValuesAffectingPictureInPictureWasStartedWhenEnteringBackground
setOverrideTransformForProminentPlayButton:
overrideTransformForProminentPlayButton
setCanToggleVideoGravityWhenEmbeddedInline:
setCanShowPictureInPictureButton:
activeContentViewDidChange
popoverPresentationController
setPermittedArrowDirections:
setSourceRect:
_setIgnoreAppSupportedOrientations:
_ignoreAppSupportedOrientations
presentViewController:animated:completion:
doneButtonTapped:
videoGravityButtonTapped:
mediaSelectionButtonTapped:
fullScreenButtonTapped:
pictureInPictureButtonTapped:
toggleMuted:
isPresentingFullWindow
enterAutoplayPhase
exitAutoplayPhase
flashAutoplayControls
setEntersFullScreenWhenTapped:
TB,R,N,GisPictureInPicturePossible
pictureInPictureSuspended
TB,R,N,GisPictureInPictureSuspended
TB,N,S_setInlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused:
T{CGAffineTransform=dddddd},N
T@"AVPlaybackControlsController",R,N
T@"AVTransitionController",R,N
audioOnlyContent
TB,R,N,GisAudioOnlyContent
T@"AVPlayerViewControllerContentView",R,N
presentingDetachedFullScreen
TB,R,N,GisPresentingDetachedFullScreen
presentingFullWindow
TB,R,N,GisPresentingFullWindow
presentingFullScreenFromInline
TB,R,N,GisPresentingFullScreenFromInline
presentedFullScreen
TB,R,N,GisPresentedFullScreen
T@"AVPresentationContext",R,N
T@"AVEditBehavior",W,N,V_behavior
T@"AVZoomingBehavior",&,N,V_zoomingBehavior
T@"AVObservationController",&,N,V_observationController
T@"AVEditView",&,N,V_editView
editing
TB,N,GisEditing,V_editing
T@"AVAssetImageGenerator",&,N,V_imageGenerator
T@,&,N,V_playerTimeObserver
T@"UIView",&,N,V_containerView
T@"UIToolbar",&,N,V_toolbar
T@"UIBarButtonItem",&,N,V_cancelButton
T@"UIBarButtonItem",&,N,V_doneButton
T@"UIBarButtonItem",&,N,V_flexibleSpaceItem
T@"UIBarButtonItem",&,N,V_playButton
T@"UIBarButtonItem",&,N,V_pauseButton
T@"NSMutableArray",R,N,V_pendingImageRequests
T@"NSMutableDictionary",R,N,V_requestedImageTimeToCMTimeMap
TQ,N,V_currentRotation
T{CGAffineTransform=dddddd},N,V_rotationTransform
T@"AVEditBehaviorParameters",R,C,N,V_parameters
_editing
_parameters
_zoomingBehavior
_editView
_imageGenerator
_playerTimeObserver
_containerView
_toolbar
_cancelButton
_doneButton
_flexibleSpaceItem
_playButton
_pauseButton
_pendingImageRequests
_requestedImageTimeToCMTimeMap
_currentRotation
_rotationTransform
editViewDidBeginScrubbing:
editViewDidEndScrubbing:
editView:currentTimeDidChange:
editView:trimStartTimeDidChange:
editView:trimEndTimeDidChange:
editViewWillBeginRequestingThumbnails:
editViewDidFinishRequestingThumbnails:
editViewDuration:
editViewThumbnailAspectRatio:
editView:requestThumbnailImageForTimestamp:
startEditing
endEditing
rotateClockwise
videoCompostitionRotatingAsset:
cancel:
play:
pause:
done:
_generateThumbnails
_makeBarButtonItems
isEditing
setEditing:
rotationTransform
setRotationTransform:
parameters
zoomingBehavior
setZoomingBehavior:
setObservationController:
editView
setEditView:
imageGenerator
setImageGenerator:
playerTimeObserver
setPlayerTimeObserver:
setContainerView:
toolbar
setToolbar:
cancelButton
setCancelButton:
doneButton
setDoneButton:
flexibleSpaceItem
setFlexibleSpaceItem:
playButton
setPlayButton:
pauseButton
setPauseButton:
pendingImageRequests
requestedImageTimeToCMTimeMap
currentRotation
setCurrentRotation:
items
systemYellowColor
systemWhiteColor
initWithBarButtonSystemItem:target:action:
generateCGImagesAsynchronouslyForTimes:completionHandler:
valueWithCMTime:
cancelAllCGImageGeneration
seekToTime:toleranceBefore:toleranceAfter:completionHandler:
avkit_setCurrentEditBehaviorContext:
actionWithTitle:style:handler:
addAction:
editBehaviorAlertActionsForDoneButtonTap:
setBarButtonItem:
alertControllerWithTitle:message:preferredStyle:
editBehaviorDidCancel:
setRenderSize:
setInstructions:
videoCompositionWithPropertiesOfAsset:
setLayerInstructions:
setTimeRange:
videoCompositionInstruction
setTransform:atTime:
setTrackID:
trackID
videoCompositionLayerInstruction
preferredTransform
naturalSize
tracksWithMediaType:
setVideoComposition:
asset
removeTimeObserver:
setItems:
setAxis:
initWithArrangedSubviews:
setBarStyle:
setMaximumSize:
setAppliesPreferredTrackTransform:
assetImageGeneratorWithAsset:
addPeriodicTimeObserverForInterval:queue:usingBlock:
avkit_currentEditBehaviorContext
T@"AVEditBehaviorContext",R,W,N
T@"UIView",W,N,V_contentView
T@"UIViewController<AVFullScreenViewControllerDelegate>",W,N,V_delegate
T@"AVFullScreenViewController",W,N,V_associatedFullScreenViewController
T@"AVFullScreenViewController",W,N,V_sourceFullScreenViewController
_associatedFullScreenViewController
_sourceFullScreenViewController
_contentView
_canShowWhileLocked
targetForAction:withSender:
viewWillMoveToWindow:
attachContentView
associatedFullScreenViewController
setAssociatedFullScreenViewController:
sourceFullScreenViewController
setSourceFullScreenViewController:
setContentView:
T@"<AVControlOverflowButtonDelegate>",W,N,V_delegate
contextMenuInteraction:configurationForMenuAtLocation:
contextMenuInteraction:willDisplayMenuForConfiguration:animator:
contextMenuInteraction:willEndForConfiguration:animator:
configurationWithIdentifier:previewProvider:actionProvider:
menuWithTitle:children:
setContextMenuInteractionEnabled:
setShowsMenuAsPrimaryAction:
setOverrideUserInterfaceStyle:
T@"UIImage",&,N,S_setUIImage:,V__uiImage
Td,R,N,V_rate
T@"NSString",R,C,N,V_localizedName
T@"NSString",R,C,N,V_compactLocalizedName
_symbolImage
__uiImage
_localizedName
_compactLocalizedName
initWithRate:localizedName:compactLocalizedName:
_uiImage
_setUIImage:
localizedName
compactLocalizedName
stringByAppendingFormat:
initWithRate:localizedName:compactLocalizedName:symbolImage:
symbolImage
T@"UIImage",R,C,N
T@"NSString",C,N,V_itemIdentifier
T@"NSString",C,N,V_MIMEType
T@"NSString",C,N,V_extendedLanguageTag
T@"NSValue",&,N,V_value
T@"NSData",&,N,V_rawData
T@"NSArray",&,N,V_array
T@"NSDictionary",&,N,V_dictionary
T@"NSDictionary",R,N,V_initialRepresentation
TI,R,N,V_type
T@"NSData",R,N
T@"NSDictionary",R,N
_type
_itemIdentifier
_MIMEType
_extendedLanguageTag
_rawData
_array
_dictionary
_initialRepresentation
initWithMessageType:itemIdentifier:
initWithMessageType:itemIdentifier:dictionaryRepresentation:
dictionaryRepresentation
allRecognizedKeysForDictionaryRepresentation
jsonDataRepresentation
headerTextRepresenationForBodyDataLength:extraHeaders:
shouldUseJSONForBody
messageDataRepresentation
type
itemIdentifier
setItemIdentifier:
MIMEType
setMIMEType:
extendedLanguageTag
setExtendedLanguageTag:
rawData
setRawData:
array
setArray:
dictionary
setDictionary:
initialRepresentation
appendData:
dataUsingEncoding:allowLossyConversion:
compressedDataUsingAlgorithm:error:
_nameForDataCompressionAlgorithm:
componentsJoinedByString:
addEntriesFromDictionary:
airMessageCanonicalForm
initWithDictionary:
arrayWithObject:
dataWithJSONObject:options:error:
sortedArrayUsingSelector:
commonDictionaryRepresentationKeys
base64EncodedStringWithOptions:
dictionaryRepresentationCommon
initWithBase64EncodedString:options:
isAirMessagingEnabled
currentOSIdentifier
currentAppIdentifier
buildVersion
_decompressBodyData:forCompressionAlgorithm:
messageWithRequiresLinearPlayback:itemIdentifier:
messageWithUserScrubToAssetTime:itemIdentifier:
messageWithExternalMetadata:itemIdentifier:
messageWithPosterArtworkMetadata:itemIdentifier:
messageWithParts:
intValue
decompressedDataUsingAlgorithm:error:
environment
standardUserDefaults
initWithSuiteName:
stringWithUTF8String:
absoluteString
avkitACMIdentifier
T@"AVPictureInPicturePlayerLayerView",R,N,V_pictureInPicturePlayerLayerView
TB,N,V_shouldShowAlternateActionButtonImage
T@"<AVPictureInPictureViewControllerDelegate>",W,N,V_delegate
T@"AVPictureInPictureViewController",&,N,V_contentViewController
shouldShowLoadingIndicator
_shouldShowAlternateActionButtonImage
_contentViewController
willAnimatePictureInPictureStart
didAnimatePictureInPictureStart
willAnimatePictureInPictureStop
didAnimatePictureInPictureStop
viewWillResize
viewDidResize
actionButtonTapped
shouldShowAlternateActionButtonImage
initWithPictureInPicturePlayerLayerView:
setContentViewController:
setShouldShowAlternateActionButtonImage:
contentViewController
_imageView
_titleLabel
_subtitleLabel
_textLabelsContainer
setTitleString:subtitleString:
setSpacing:
size
constraintEqualToAnchor:multiplier:
addObjectsFromArray:
setCustomSpacing:afterView:
setBaselineRelativeArrangement:
setAlignment:
setTextColor:
setTextAlignment:
setLineBreakMode:
setContentMode:
initWithImage:
systemImageNamed:withConfiguration:
configurationWithFont:
mutableCopyWithZone:
supportsSecureCoding
classForCoder
_timing
anchorValue
anchorTimeStamp
encodeDouble:forKey:
initWithAnchorValue:anchorTimeStamp:rate:
decodeDoubleForKey:
initWithValueTiming:
allocWithZone:
Td,D,N
setAnchorValue:
setAnchorTimeStamp:
_timeStamp
isEqualToValueTiming:
valueTimingWithAnchorValue:anchorTimeStamp:rate:
systemUptime
currentTimeStamp
valueForTimeStamp:
currentValue
timeStampForValue:
setValueTiming:
T@"UIScene",W,N,V_scene
T@"NSString",C,N,V_debugText
T@"AVSecondScreenViewController",W,N,V_secondScreenViewController
_scene
_debugText
_secondScreenViewController
setScene:
setDebugText:
setSecondScreenViewController:
_currentEnabledVideoTrack
_currentDisplay
_currentVideoDynamicRange
_updateDebugLabelText
_actuallyUpdateDebugLabelTextWithCurrentResolution:currentVideoDynamicRange:
scene
debugText
secondScreenViewController
nativeBounds
matchContent
preferredHdrMode
preferences
height
width
hdrMode
currentMode
loadValuesAsynchronouslyForKeys:completionHandler:
statusOfValueForKey:error:
assetTrack
formatDescriptions
_displayID
uniqueId
displays
tracks
hasPrefix:
T@"UIWindow",W,N,V_presentationWindowForDisablingAutorotation
T@"AVPresentationContext",R,N,V_context
_context
_presentationWindowForDisablingAutorotation
initWithPresentedViewController:presentingViewController:withConfiguration:
shouldRemovePresentersView
shouldPresentInFullscreen
containerViewWillLayoutSubviews
presentationTransitionWillBegin
presentationTransitionDidEnd:
_ensureOrientation:enablingMixedOrientations:
dismissalTransitionWillBegin
_prepareDismissingTransitionContext
dismissalTransitionDidEnd:
_observeSceneDidBecomeActiveForRestoringRotatability
context
presentationWindowForDisablingAutorotation
setPresentationWindowForDisablingAutorotation:
endDisablingInterfaceAutorotation
beginDisablingInterfaceAutorotation
_setViewDelegateContentOverlayInsetsAreClean:
setWindowLevel:
windowLevel
initWithWindowScene:
presented
initWithPresentedViewController:presentingViewController:
T@"AVHomeIPCameraBehavior",W,N,V_behavior
T@"AVHomeIPCameraPlayerController",W,N,V_livePreviewPlayerController
T@"AVPlayerController",&,N,V_playerControllerToRestore
TB,N,V_playbackControlsShowsLoadingIndicator
TB,N,V_playbackControlsIncludeTransportControls
TB,N,V_playbackControlsIncludeDisplayModeControls
zoomingEnabled
TB,N,GisZoomingEnabled,V_zoomingEnabled
T@"UIView",R,N,V_livePreviewContainerView
livePreviewActive
TB,N,GisLivePreviewActive,V_livePreviewActive
TB,N,V_hasMicrophone
TB,N,V_canStartPictureInPictureAutomaticallyWhenEnteringBackground
TB,N,V_playbackControlsIncludePictureInPictureButton
T{CGSize=dd},N,V_livePreviewAspectRatio
_playbackControlsIncludeTransportControls
_playbackControlsIncludeDisplayModeControls
_zoomingEnabled
_livePreviewActive
_hasMicrophone
_canStartPictureInPictureAutomaticallyWhenEnteringBackground
_playbackControlsIncludePictureInPictureButton
_playbackControlsShowsLoadingIndicator
_livePreviewContainerView
_livePreviewPlayerController
_playerControllerToRestore
_livePreviewAspectRatio
beginScrubbing
scrubToTime:resolution:
endScrubbing
setZoomingEnabled:
setLivePreviewActive:
setHasMicrophone:
setCanStartPictureInPictureAutomaticallyWhenEnteringBackground:
setPlaybackControlsIncludePictureInPictureButton:
setLivePreviewAspectRatio:
setBackgroundColor:forContainerOfControlItem:
_updatePlaybackControlsControllerAndZoomingBehavior
_updatePictureInPictureController
isZoomingEnabled
livePreviewContainerView
isLivePreviewActive
hasMicrophone
canStartPictureInPictureAutomaticallyWhenEnteringBackground
playbackControlsIncludePictureInPictureButton
livePreviewAspectRatio
livePreviewPlayerController
setLivePreviewPlayerController:
playerControllerToRestore
setPlayerControllerToRestore:
playbackControlsShowsLoadingIndicator
setPlaybackControlsShowsLoadingIndicator:
T{NSEdgeInsets=dddd},N,V_legibleContentInsets
T@,W,N,V_behavior
_legibleContentInsets
setLegibleContentInsets:
_updateLegibleContentInsets
hidePlaybackControlsImmediately
seymourBehaviorContextDidReceiveButtonTap:
legibleContentInsets
removeTarget:action:forControlEvents:
T@"AVVolumeControlsContentView",&,N,V_volumeControlsContentView
T@"AVLayoutView",&,N,V_volumeSliderContentView
T@"UIView",W,N,V_volumeControlParentView
TB,N,V_volumeSliderGestureActive
T@"UIHoverGestureRecognizer",&,N,V_volumeSliderHover
Tf,N,V_volumeSliderTransportBarHeight
Tf,N,V_playerViewHeight
T@"NSLayoutConstraint",&,N,V_volumeSliderGapConstraint
T@"NSLayoutConstraint",&,N,V_volumeSliderWidthConstraint
T@"NSLayoutConstraint",&,N,V_volumeSliderHeightConstraint
T@"AVVolumeButtonControl",R,N,V_volumeButton
T@"AVVolumeSlider",R,N,V_volumeSlider
TB,N,V_canShowVolumeSlider
T@"<AVVolumeControlsControllerDelegate>",W,V_volumeControllerDelegate
T@"<AVVolumeControlsControllerLayoutDelegate>",W,V_transportViewDelegate
_canShowVolumeSlider
_volumeSliderGestureActive
_volumeSliderTransportBarHeight
_playerViewHeight
_volumeButton
_volumeSlider
_volumeControllerDelegate
_transportViewDelegate
_volumeControlsContentView
_volumeSliderContentView
_volumeControlParentView
_volumeSliderHover
_volumeSliderGapConstraint
_volumeSliderWidthConstraint
_volumeSliderHeightConstraint
updateVolumeControlsContollerLayout
layoutVolumeSliderViewIfNeeded
prepareSliderView
setCanShowVolumeSlider:
showSliderViewIfNeeded
hideVolumeSlider
mouseDidEnterVolumeControlsVolumeButton:
mouseDidEnterVolumeControlsContentView:
volumeButton
volumeSlider
canShowVolumeSlider
volumeControllerDelegate
setVolumeControllerDelegate:
transportViewDelegate
setTransportViewDelegate:
volumeControlsContentView
setVolumeControlsContentView:
volumeSliderContentView
setVolumeSliderContentView:
volumeControlParentView
setVolumeControlParentView:
volumeSliderGestureActive
setVolumeSliderGestureActive:
volumeSliderHover
setVolumeSliderHover:
volumeSliderTransportBarHeight
setVolumeSliderTransportBarHeight:
playerViewHeight
setPlayerViewHeight:
volumeSliderGapConstraint
setVolumeSliderGapConstraint:
volumeSliderWidthConstraint
setVolumeSliderWidthConstraint:
volumeSliderHeightConstraint
setVolumeSliderHeightConstraint:
addConstraint:
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
constraints
removeConstraint:
setSize:
setMaximumValue:
setMinimumValue:
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_previousBounds
T@"UIWindow",W,N,V_lastKnownWindow
T{CGSize=dd},N,V_contentAspectRatio
fullScreen
TB,N,GisFullScreen,V_fullScreen
T@"AVPlaybackContentContainerView",R,N,V_activeContentView
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_videoContentFrame
playingOnSecondScreen
TB,N,GisPlayingOnSecondScreen,V_playingOnSecondScreen
_playingOnSecondScreen
_fullScreen
_activeContentView
_lastKnownWindow
_contentAspectRatio
_videoContentFrame
_previousBounds
T@"AVPlaybackContentContainerView",R,N
T{CGRect={CGPoint=dd}{CGSize=dd}},N
TB,N,GisPlayingOnSecondScreen
initWithFrame:activeContentView:
setVideoGravity:removingAllSubayerTransformAnimations:
activeContentView
canShowStatusBarBackgroundGradientWhenStatusBarVisible
setCanShowStatusBarBackgroundGradientWhenStatusBarVisible:
videoContentFrame
setVideoContentFrame:
isPlayingOnSecondScreen
setPlayingOnSecondScreen:
setLastKnownWindow:
setContentAspectRatio:
zoomToPoint:
scrollView:contentSizeForZoomScale:withProposedSize:
setFrame:
willMoveToWindow:
_contentSizeForScale:
_contentRectForScale:
_updateMinMaxZoomScales
_updateMinMaxZoomScales:
_contentInsets
contentAspectRatio
isFullScreen
setFullScreen:
previousBounds
setPreviousBounds:
lastKnownWindow
zoomScale
setZoomScale:
setMaximumZoomScale:
maximumZoomScale
setMinimumZoomScale:
minimumZoomScale
setContentInset:
contentInset
setScrollEnabled:
setBouncesVertically:
setBouncesHorizontally:
setAlwaysBounceHorizontal:
setAlwaysBounceVertical:
zoomToRect:animated:
convertPoint:fromView:
setContentSize:
setDecelerationRate:
setShowsHorizontalScrollIndicator:
setShowsVerticalScrollIndicator:
setBouncesZoom:
setContentInsetAdjustmentBehavior:
T#,R,N,V_messageClass
_previousUnusedData
_messageClass
initWithMessageClass:
resetState
dataForMessage:
reverseTransformerForMessageData:
messageClass
messageTransformerWithClass:
coordinateDismissalWithExpanseSessionForPlayer:cancellable:dismissalBlock:
playbackCoordinator:promptForLeaveOrEndSessionAllowingCancellation:completionHandler:
coordinationMediumDelegate
playbackCoordinator
backgroundPIPAuthorizationToken
T@"UIMovieScrubber",&,V_movieScrubber
trimming
TB,N,GisTrimming,V_trimming
T@"<AVEditViewDataSource>",W,N,V_dataSource
T@"<AVEditViewDelegate>",W,N,V_delegate
TB,N,V_prefersThumbVisible
_prefersThumbVisible
_trimming
_dataSource
_movieScrubber
movieScrubber:valueDidChange:
movieScrubber:editingStartValueDidChange:
movieScrubber:editingEndValueDidChange:
movieScrubberDidBeginScrubbing:withHandle:
movieScrubberDidEndScrubbing:withHandle:
movieScrubber:widthDelta:originXDelta:
movieScrubberWillBeginRequestingThumbnails:
movieScrubberDidFinishRequestingThumbnails:
movieScrubberWillBeginEditing:
movieScrubberDidBeginEditing:
movieScrubberDidCancelEditing:
movieScrubberEditingAnimationFinished:
movieScrubber:willZoomToMinimumValue:maximumValue:
movieScrubberDidBeginAnimatingZoom:
movieScrubberDidEndAnimatingZoom:
movieScrubber:requestThumbnailImageForTimestamp:isSummaryThumbnail:
movieScrubberDuration:
movieScrubber:evenlySpacedTimestamps:startingAt:endingAt:
movieScrubberThumbnailAspectRatio:
movieScrubber:requestThumbnailImageForTimestamp:
trimStartTime
trimEndTime
reloadData
userObservationGestureRecognizerFired:
setThumbnailImage:forTimestamp:
setDataSource:
setPrefersThumbVisible:
setTrimming:
setCurrentTime:
dataSource
prefersThumbVisible
isTrimming
movieScrubber
setMovieScrubber:
setThumbIsVisible:
setEditable:
setEdgeInset:
trimEndValue
trimStartValue
itemWithAirDictionaryRepresentation:
airRepresentationForArray:
itemArrayWithAirRepresentations:
airDictionaryRepresentation
identifier
setExtraAttributes:
time
dataType
extraAttributes
setIdentifier:
localeWithLocaleIdentifier:
setLocale:
setTime:
setDuration:
T@"NSValue",&,N,V_targetContentOffset
T@"NSString",C,N,V_stateDescription
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_frameForActiveContentView
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_frameForTransitioningContentView
Tq,N,V_boundsOrContentSizeAdjustmentCount
transitionInteractive
TB,N,GisTransitionInteractive,V_transitionInteractive
T@"<AVPlaybackContentTransitioningViewDelegate>",W,N,V_contentTransitioningDelegate
T@"AVPlaybackContentContainerView",R,N,V_incomingContentView
Tq,R,N,V_transitionState
Tq,R,N,V_transitionDirection
Td,R,N,V_transitionProgress
_transitionInteractive
_transitionState
_transitionDirection
_transitionProgress
_contentTransitioningDelegate
_incomingContentView
_targetContentOffset
_stateDescription
_boundsOrContentSizeAdjustmentCount
_frameForActiveContentView
_frameForTransitioningContentView
_setTransitionState:transitionDirection:transitionProgress:
performTransition:
_updateTransitionStateIfPossible
_performBoundsOrContentSizeAdjustment:
_isAdjustingBoundsOrContentSize
_updateSizeAndContentFrame
_ensureContentViews
_frameExcludingActiveContent
_frameExcludingTransitioningContent
_canTransitionFromState:toState:
setStateDescription:
_descriptionForState:
_makeStateDescription
transitionState
transitionDirection
transitionProgress
contentTransitioningDelegate
setContentTransitioningDelegate:
incomingContentView
isTransitionInteractive
setTransitionInteractive:
targetContentOffset
setTargetContentOffset:
stateDescription
frameForActiveContentView
setFrameForActiveContentView:
frameForTransitioningContentView
setFrameForTransitioningContentView:
boundsOrContentSizeAdjustmentCount
setBoundsOrContentSizeAdjustmentCount:
_interpageSpacing
numberWithLong:
numberWithInteger:
_isHorizontalBouncing
setContentOffset:animated:
valueWithCGPoint:
CGPointValue
setDirectionalLockEnabled:
_setInterpageSpacing:
setPagingEnabled:
_selectedAudioMediaSelectionOption
_selectedLegibleMediaSelectionOption
initWithStyle:
playerControllerMediaSelectionChanged:
_isSelectedOrCurrentAudioMediaSelectionOption:
_isSelectedOrCurrentLegibleMediaSelectionOption:
tableView:numberOfRowsInSection:
tableView:cellForRowAtIndexPath:
numberOfSectionsInTableView:
tableView:titleForHeaderInSection:
tableView:willDisplayHeaderView:forSection:
tableView:didSelectRowAtIndexPath:
deselectRowAtIndexPath:animated:
setAccessoryType:
indexPathForCell:
visibleCells
section
representedObject
cellForRowAtIndexPath:
textLabel
setRepresentedObject:
dequeueReusableCellWithIdentifier:forIndexPath:
tableView
flashScrollIndicators
notifyWhenInteractionChangesUsingBlock:
initiallyInteractive
indexPathsForSelectedRows
numberOfSections
setSeparatorStyle:
setEstimatedRowHeight:
lineHeight
registerClass:forCellReuseIdentifier:
T@,&,N,V_representedObject
_representedObject
setBackgroundView:
configureLayerView:
contentConfig
configWithContentConfig:
layerWithFillColor:opacity:filterType:
initWithEffect:
effectCombiningEffects:
effectWithBlurRadius:
colorEffectSaturate:
_mediaSelectionTableViewController
initWithPlayerController:doneButtonTarget:doneButtonAction:
mediaSelectionTableViewController
navigationBar
setModalPresentationCapturesStatusBarAppearance:
setRightBarButtonItem:
navigationItem
initWithRootViewController:
systemGrayColor
AV_indicatorBackgroundColor
AV_indicatorForegroundColor
T@"<AVPictureInPictureContentSource>",R,N
T@,R,W,N,V__activeVideoCallSourceView
T@"<AVPictureInPictureContentSource>",R,N,V__activeVideoCallContentViewController
TB,R,N,V_hasInitialRenderSize
T@"AVPlayerLayer",R,N,V_playerLayer
_initialRenderSize
_sampleBufferDisplayLayer
_sampleBufferPlaybackDelegate
_hasInitialRenderSize
_playerLayer
__activeVideoCallSourceView
__activeVideoCallContentViewController
initWithPlayerLayer:
_activeVideoCallSourceView
_activeVideoCallContentViewController
hasInitialRenderSize
sampleBufferDisplayLayer
version
T@"AVPictureInPicturePlatformAdapter",R,N,V_platformAdapter
T@"<AVPictureInPictureContentSource>",&,N,V_sourceIfRetainedDuringPictureInPicturePlayback
T@,&,N,V_playerControllerIsPlayingObservationToken
TB,N,GisPictureInPictureActive,V_pictureInPictureActive
TB,N,GisPictureInPictureSuspended,V_pictureInPictureSuspended
otherPictureInPictureActive
TB,N,GisOtherPictureInPictureActive,V_otherPictureInPictureActive
TB,N,S_setCanStopPictureInPicture:,V_canStopPictureInPicture
TB,N,V_wantsImmediateAssetInspection
TB,N,V_wasPlayingWhenPictureInPictureInterruptionBegan
T@"<AVPictureInPictureContentSource>",R,W,N,V_source
T@"AVPictureInPictureViewController",R,N
TB,R,N,V_wantsResourceReduction
TB,N,V_retainsSourceDuringPictureInPicturePlayback
TB,N,V_allowsPictureInPictureFromInlineWhenEnteringBackground
TB,N,V_pictureInPictureWasStartedWhenEnteringBackground
T@"<AVPictureInPicturePrerollDelegate>",W,N,V_prerollDelegate
T@"AVPictureInPictureControllerContentSource",&,N,V_contentSource
T@"<AVPictureInPictureControllerDelegate>",W,N,V_delegate
_pictureInPictureSuspended
_canStopPictureInPicture
_otherPictureInPictureActive
_wantsImmediateAssetInspection
_wasPlayingWhenPictureInPictureInterruptionBegan
_wantsResourceReduction
_retainsSourceDuringPictureInPicturePlayback
_allowsPictureInPictureFromInlineWhenEnteringBackground
_pictureInPictureWasStartedWhenEnteringBackground
_platformAdapter
_sourceIfRetainedDuringPictureInPicturePlayback
_playerControllerIsPlayingObservationToken
_prerollDelegate
pictureInPicturePlatformAdapter:failedToStartError:
pictureInPicturePlatformAdapter:prepareToStopForRestoringUserInterface:
pictureInPicturePlatformAdapterPrepareToStopForDismissal:
pictureInPicturePlatformAdapter:stopPictureInPictureAndRestoreUserInterface:
pictureInPicturePlatformAdapter:handlePlaybackCommand:
pictureInPicturePlatformAdapter:statusDidChange:fromStatus:
pictureInPicturePlatformAdapterBeginReducingResourcesForEligibleOffScreenState
pictureInPicturePlatformAdapterEndReducingResourcesForEligibleOffScreenState
initWithContentSource:
_commonInitWithSource:
stopPictureInPictureEvenWhenInBackground
contentSourceVideoRectInWindowChanged
setAllowsPictureInPictureFromInlineWhenEnteringBackground:
setPictureInPictureActive:
setOtherPictureInPictureActive:
startObservingPlayerController:
stopObservingPlayerController:
reloadPrerollAttributes
invalidatePlaybackState
sampleBufferDisplayLayerRenderSizeDidChangeToSize:
sampleBufferDisplayLayerDidAppear
sampleBufferDisplayLayerDidDisappear
_sbdlPlayerController
_invalidateContentSourceForVideoCallsIfNeeded:
_configureContentSourceForVideoCallsIfNeeded:
_delegateIfRespondsToSelector:
_stopPictureInPictureAndRestoreUserInterface:
_startObservationsForContentSource:
_startObservingPlayerLayerContentSource:
_updateBackgroundPlaybackPolicyFromPlayerController
_startObservingSampleBufferDisplayLayerContentSource:
_updateEnqueuedBufferDimensions
setPictureInPictureSuspended:
canStopPictureInPicture
_setCanStopPictureInPicture:
platformAdapter
sourceIfRetainedDuringPictureInPicturePlayback
setSourceIfRetainedDuringPictureInPicturePlayback:
playerControllerIsPlayingObservationToken
setPlayerControllerIsPlayingObservationToken:
isOtherPictureInPictureActive
wantsImmediateAssetInspection
setWantsImmediateAssetInspection:
wasPlayingWhenPictureInPictureInterruptionBegan
setWasPlayingWhenPictureInPictureInterruptionBegan:
wantsResourceReduction
retainsSourceDuringPictureInPicturePlayback
setRetainsSourceDuringPictureInPicturePlayback:
allowsPictureInPictureFromInlineWhenEnteringBackground
setPictureInPictureWasStartedWhenEnteringBackground:
prerollDelegate
setPrerollDelegate:
audiovisualBackgroundPlaybackPolicy
activeVideoCallContentViewController
initialRenderSize
dictionaryWithObject:forKey:
pictureInPictureControllerSkipPreroll:
pictureInPictureControllerPrerollAttributes:
T@"UIImage",R,N
_imageNamed:compatibileWithTraitCollection:
pictureInPictureButtonStartImageCompatibleWithTraitCollection:
pictureInPictureButtonStopImageCompatibleWithTraitCollection:
pictureInPictureButtonStartImage
pictureInPictureButtonStopImage
imageNamed:inBundle:compatibleWithTraitCollection:
configurationByApplyingConfiguration:
initWithSampleBufferDisplayLayer:initialRenderSize:playbackDelegate:
initWithSampleBufferDisplayLayer:playbackDelegate:
sampleBufferPlaybackDelegate
initWithActiveVideoCallSourceView:contentViewController:
activeVideoCallSourceView
T@"AVSampleBufferDisplayLayer",R,N
T@"<AVPictureInPictureSampleBufferPlaybackDelegate>",R,W,N
T@"AVPictureInPictureVideoCallViewController",R,N
minFrameDuration
avkit_timeForFrameSteppedByFrameCount:fromFrameAtTime:
_avkit_timeForFrameUsingSampleCursorSteppedByFrameCount:fromFrameAtTime:
_avkit_findTimeForFrameUsingFrameRateSteppedByFrameCount:fromFrameAtTime:
_avkit_frameRateIsValid:
avkit_makePictureInPicturePlatformAdapterContentPlaceholderLayer
Tq,R,N,V_type
T@"NSString",C,N,V_title
T@"UIImage",&,N,V_image
T@?,C,N,V_action
T@"UIColor",&,N,V_tintColor
_titleFont
_image
_action
_tintColor
initWithTitle:type:
setTitle:
setImage:
setTintColor:
setTitleFont:
titleFont
_updateTintColor
setAccessibilityLabel:
setAccessibilityAttributedLabel:
setAccessibilityHint:
setAccessibilityAttributedHint:
_buttonTouchUpInside:
_updateButton
image
action
setAction:
tintColor
T@"UILabel",R,N,V_label
T@"UILabel",R,N
T@"UIActivityIndicatorView",R,N,V_loadingIndicator
Tq,N,V_numberOfLines
T@"NSLayoutConstraint",&,N,V_loadingIndicatorLeftAlignmentConstraint
T@"NSLayoutConstraint",&,N,V_loadingIndicatorRightAlignmentConstraint
Tq,N,V_loadingIndicatorAlignment
T@"NSString",C,N,V_text
T@"NSAttributedString",C,N,V_attributedText
T@"UIFont",&,N,V_font
_label
_loadingIndicatorAlignment
_text
_attributedText
_font
_numberOfLines
_loadingIndicatorLeftAlignmentConstraint
_loadingIndicatorRightAlignmentConstraint
label
labelIfLoaded
setFont:
setLoadingIndicatorAlignment:
setText:
setAttributedText:
didMoveToSuperview
tintColorDidChange
viewForFirstBaselineLayout
viewForLastBaselineLayout
setNumberOfLines:
loadingIndicatorAlignment
text
attributedText
font
numberOfLines
loadingIndicatorLeftAlignmentConstraint
setLoadingIndicatorLeftAlignmentConstraint:
loadingIndicatorRightAlignmentConstraint
setLoadingIndicatorRightAlignmentConstraint:
translatesAutoresizingMaskIntoConstraints
isEqualToAttributedString:
TB,N,V_needsInitialLayout
T@"UIView",&,N,V_contentView
_needsInitialLayout
initWithFrame:contentView:
_beginManagingContentViewIfNeeded
_stopManagingContentView
needsInitialLayout
setNeedsInitialLayout:
T{?=qiIq},R
T@"NSDate",&,N,V_startDate
Td,R
_startDate
initWithStartTime:duration:
initWithStartTime:endTime:
initWithCMTimeRange:
initWithAVTimedMetadataGroup:
initWithUnionOfCMTimeRanges:
setMapTime:toDate:
setMapDate:toTime:
dateForTime:
timeForDate:
endTime
startCMTime
endCMTime
cmTimeRange
endDate
containsTime:
containsDate:
deltaTimeFromOutsideTime:
pinnedTime:
timeRangeIntersectingWithTimeRange:
timeRangeExcludingTimeRange:
timeRangeByAddingTimeInterval:shiftingDates:
timeRangeByAddingTimeInterval:
isEqualToTimeRange:
compare:
startDate
setStartDate:
dateByAddingTimeInterval:
setTimeStyle:
setDateStyle:
stringFromSeconds:
setFormatTemplate:
setStyle:
isEqualToDate:
timeRangeZero
timeIntervalSinceDate:
CMTimeRangeValue
timeRange
T@"NSArray",R,V_timeRanges
Td,R,V_combinedDuration
_timeRanges
_combinedDuration
initWithTimeRanges:
initWithTimedMetadataGroups:
count
timeRangeContainingTime:
timeRangeClosestToTime:
timeRangeBeforeTime:
timeRangeAfterTime:
arrayOfBoundaryTimes
arrayOfDisplayTimesMatching:
arrayOfDisplayTimes
timeRangesBetweenDisplayTime:and:
displayTimeFromTime:
timeFromDisplayTime:
displayTimeRangeTrimmedToTimeRange:
timeRanges
combinedDuration
isCollapsedInTimeLine
enumerateObjectsWithOptions:usingBlock:
_mediaControls
_clientCompletionHandler
willBeginPlaybackWithCompletionHandler:
willBeginPlaybackFromAppWithBundleID:completionHandler:
_invokeClientCompletionHandlerWithPlaybackState:
externalPlaybackStateDescriptionForState:
present
setDismissHandlerWithReason:
deviceType
outputDevices
outputContextForID:
routingContextUID
startPrewarming
initWithConfiguration:
likelyExternalDestinations
providesExternalVideoPlayback
destination
prefersLikelyDestinationsOverCurrentRoutingSession
currentRoutingSession
longFormVideoRoutingSessionManager
hasRouteSharingPolicyLongFormVideo:
T{CVSMPTETime=ssIIIssss},N,V_timecodeStruct
Tq,N,V_frameNumber
T{?=qiIq},N,V_frameDuration
TI,N,V_tc_flags
_tc_flags
_frameNumber
_timecodeStruct
_frameDuration
initWithTimecodeString:
stringIsValidNumericValue:
timecodeStruct
setTimecodeStruct:
frameNumber
setFrameNumber:
frameDuration
setFrameDuration:
tc_flags
setTc_flags:
rangeOfCharacterFromSet:
invertedSet
decimalDigitCharacterSet
componentsSeparatedByCharactersInSet:
punctuationCharacterSet
T@"AVAssetTrack",&,N,V_timecodeTrack
T{?=qiIq},R,N,V_observationInterval
_frameCount
_videoTrack
_timecodeTrack
_timecodes
_maxTimecode
_maxFrameNumber
_timeObserver
_observationInterval
initWithTimecodeTrack:videoTrack:
calculateMaxFrameAndTimecode
maxTimecodeString
maxFrameCountString
calculateFrameNumberAtCMTime:
calculateTimecodeAtFrame:
calculateFrameNumberAtTimecode:
timecodeForFrameNumber32UsingFormatDescription:timecodeStartFrame:
timecodeForFrameNumber64UsingCachedDescription:
offsetFor:fromTimecode:
timecodeForOffset:from:timecode:
calculateFrameNumberAtTimeInterval:
timeIntervalForFrameNumber:
cacheTimecodeDescriptionForSampleBuffer:
validateCMTime:
readTimecodes
timecodeAvailable
timecodeTrack
setTimecodeTrack:
observationInterval
cancelReading
copyNextSampleBuffer
startReading
addOutput:
assetReaderTrackOutputWithTrack:outputSettings:
initWithAsset:error:
naturalTimeScale
_setStatusAndNotifyDelegateIfNeeded:
_updateStatus
_setRoutingVideoToHostedWindow:pictureInPictureViewController:source:
_updateStatusUsingProposedStatus:
T@"NSArray",R,N
T@"AVPlaybackRate",R,N,V_selectedRate
_rates
_selectedRate
_initInternalWithRates:
rates
setSelectedRate:
selectNextPlaybackRate:
selectedRate
collectionWithDefaultRates
collectionWithRates:
setScale:
T@"AVCABackdropLayerView",W,N,V_groupLeader
T@"NSHashTable",R,N,V_dependents
Tq,N,V_activeBackdropEffect
captureOnly
TB,N,GisCaptureOnly
TB,N,V_forceLowQualityEffect
T@"UIColor",C,N,V_customBackgroundColor
_forceLowQualityEffect
_customBackgroundColor
_groupLeader
_dependents
_activeBackdropEffect
updateActiveBackdropEffectIfGroupLeader
isCaptureOnly
setCaptureOnly:
setCustomBackgroundColor:
setGroupLeader:
updateGroupLeader
addDependent:
removeDependent:
_updateFilters
_ensureDependents
_enumerateDependents:
forceLowQualityEffect
setForceLowQualityEffect:
customBackgroundColor
groupLeader
dependents
activeBackdropEffect
setActiveBackdropEffect:
filters
reducedTransparencyColor
averageFilter
colorMatrixFilter
blurFilter
setFilters:
setGroupName:
groupName
colorWithRed:green:blue:alpha:
setValue:forKey:
valueWithCAColorMatrix:
T@"<AVRoutePickerViewDelegate>",W,N,V_delegate
T@"UIColor",&,N
Tq,N,V_routePickerButtonStyle
_getAirPlayStatusQueue
_activeTintColor
_routePickerButton
_oldSize
_buttonHighlightAnimator
_outputContext
_airPlayActive
_prioritizesVideoDevices
_routePickerButtonMicaPackage
_routePickingControls
_routePickerButtonStyle
activeTintColor
setActiveTintColor:
isAirPlayActive
setAirPlayActive:
setCustomButton:
prioritizesVideoDevices
presentRoutePicker:
_createOrUpdateRoutePickerButton
_routePickerButtonTapped:
_routePickerButtonTouchDown:
_routePickerButtonTouchDragEnter:
_routePickerButtonTouchUp:
_setRoutePickerButtonAlpha:animated:
_registerNotifications
_updateAirPlayActive
_setupOutputContext
_isAirPlayActive
_defaultActiveTintColor
_normalizedRect:fromView:
routePickerButtonStyle
setRoutePickerButtonStyle:
initWithDuration:curve:animations:
finishAnimationAtPosition:
stopAnimation:
isInterruptible
isRunning
setDismissHandler:
routePickerViewDidEndPresentingRoutes:
setSortByIsVideoRoute:
initWithRouteSharingPolicy:routingContextUID:
overrideRouteSharingPolicyForRoutePickerView:
overrideRoutingContextUIDForRoutePickerView:
routePickerViewWillBeginPresentingRoutes:
addSublayer:
setContentVerticalAlignment:
setContentHorizontalAlignment:
setContentEdgeInsets:
buttonWithType:
getRed:green:blue:alpha:
commit
setPosition:
setDisableActions:
begin
T@"AVPictureInPictureIndicatorSublayer",R,N,V_contentLayer
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_videoRectWhenPIPBegan
_contentLayer
_videoRectWhenPIPBegan
initWithDisplayScale:placeholderImage:opaque:videoRectWhenPIPBegan:
layoutSublayers
setCustomText:
customText
contentLayer
videoRectWhenPIPBegan
initWithDisplayScale:placeholderImage:opaque:
T@"NSString",C,N,V_customText
_imageSize
_languageAwareOutsets
_lineHeight
_baselineOffset
_textLayer
_imageLayer
_customText
layoutSublayersWithTextAndImageUsingInsetBounds:
textBoundingRectWhenDrawnInRect:
canRenderAttributedTextWithoutTruncationInsideRect:
boundingRectWithSize:options:context:
setString:
initWithString:attributes:
setWrapped:
setTruncationMode:
setAlignmentMode:
setForegroundColor:
setFontSize:
setContentsScale:
setContentsGravity:
setContents:
ascender
T@"AVLayoutView",&,N,V_layoutView
TB,N,V_automaticallyDrawsRoundedCorners
TB,N,V_prefersLowQualityEffects
circular
TB,N,GisCircular,V_circular
_automaticallyDrawsRoundedCorners
_prefersLowQualityEffects
_circular
_layoutView
addSubview:applyingMaterialStyle:tintEffectStyle:
setAutomaticallyDrawsRoundedCorners:
setCircular:
setPrefersLowQualityEffects:
_updateBackdropShape
_ensureOrRemoveLayoutView
_isContainedInOverlappingBackgroundView
automaticallyDrawsRoundedCorners
prefersLowQualityEffects
isCircular
layoutView
setLayoutView:
sendSubviewToBack:
T@"UIViewPropertyAnimator",W,N,V_highlightAnimator
T@"AVMicaPackage",&,N,V_micaPackage
T@"UIImageView",&,N,V_imageView
T@"UIView",&,N,V_micaPackageContainerView
T{CGPoint=dd},N,V_initialPreciseLocationOfTouch
T@"NSTimer",W,N,V_longPressTimer
Tq,N,V_trackingState
TB,N,V_showsHighlightedAppearance
Tq,N,V_volumeControllerType
T@"NSString",&,N,V_micaPackageStateName
longPressEnabled
TB,N,GisLongPressEnabled,V_longPressEnabled
T{CGPoint=dd},N,V_translationOfPanFromPreviousTouch
T{CGPoint=dd},N,V_cumulativeTranslationSincePanningBegan
T{CGPoint=dd},N,V_locationOfTouchInWindow
_trackingState
_longPressEnabled
_showsHighlightedAppearance
_micaPackageStateName
_highlightAnimator
_micaPackage
_micaPackageContainerView
_longPressTimer
_volumeControllerType
_translationOfPanFromPreviousTouch
_cumulativeTranslationSincePanningBegan
_locationOfTouchInWindow
_initialPreciseLocationOfTouch
setVolumeControllerType:
setMicaPackage:
setMicaPackageStateName:
triggerSelectionChangedFeedback
setShowsHighlightedAppearance:
setTrackingState:
setNeedsUpdateGlyphRenderingMode
imageNameForMicaPackageState
setBounds:
_updateMicaPackage:
micaPackageStateName
isLongPressEnabled
setLongPressEnabled:
translationOfPanFromPreviousTouch
setTranslationOfPanFromPreviousTouch:
cumulativeTranslationSincePanningBegan
setCumulativeTranslationSincePanningBegan:
locationOfTouchInWindow
setLocationOfTouchInWindow:
highlightAnimator
setHighlightAnimator:
micaPackage
imageView
setImageView:
micaPackageContainerView
setMicaPackageContainerView:
initialPreciseLocationOfTouch
setInitialPreciseLocationOfTouch:
longPressTimer
setLongPressTimer:
trackingState
showsHighlightedAppearance
volumeControllerType
position
removeFromSuperlayer
precisePreviousLocationInView:
preciseLocationInView:
transform
setIsAccessibilityElement:
Td,V_minTime
Td,V_maxTime
T@"<AVTimeControlling>",&
_interval
_currentTime
_timer
_minTime
_maxTime
interval
setInterval:
currentTime
minTime
setMinTime:
maxTime
setMaxTime:
seekableTimeRangeDuration
automaticallyNotifiesObserversOfCurrentTime
setTargetTimeWithinEndTimes:
remainingTargetTimeWithinEndTimes
currentTimeWithinEndTimes
setCurrentTimeWithinEndTimes:
remainingTime
remainingTimeWithinEndTimes
isCurrentTimeAtEndOfSeekableTimeRanges
keyPathsForValuesAffectingTargetTime
keyPathsForValuesAffectingTargetTimeWithinEndTimes
keyPathsForValuesAffectingRemainingTargetTimeWithinEndTimes
keyPathsForValuesAffectingCurrentTimeWithinEndTimes
keyPathsForValuesAffectingRemainingTime
keyPathsForValuesAffectingRemainingTimeWithinEndTimes
keyPathsForValuesAffectingSeekableTimeRangeDuration
keyPathsForValuesAffectingCurrentTimeAtEndOfSeekableTimeRanges
targetTime
setTargetTime:
targetTimeWithinEndTimes
currentTimeAtEndOfSeekableTimeRanges
TB,R,GisCurrentTimeAtEndOfSeekableTimeRanges
T@"NSMutableArray",&,N,V_requiredPrioritySizes
T@"NSMutableArray",&,N,V_veryHighPrioritySizes
T@"NSMutableArray",&,N,V_highPrioritySizes
T@"NSMutableArray",&,N,V_mediumPrioritySizes
T@"NSMutableArray",&,N,V_lowPrioritySizes
T{CGSize=dd},N,V_currentTotalSize
_requiredPrioritySizes
_veryHighPrioritySizes
_highPrioritySizes
_mediumPrioritySizes
_lowPrioritySizes
_currentTotalSize
addSize:withPriority:
removeLastSizeOfPriority:
currentTotalSize
setCurrentTotalSize:
requiredPrioritySizes
setRequiredPrioritySizes:
veryHighPrioritySizes
setVeryHighPrioritySizes:
highPrioritySizes
setHighPrioritySizes:
mediumPrioritySizes
setMediumPrioritySizes:
lowPrioritySizes
setLowPrioritySizes:
sizeValue
valueWithSize:
sizesResolvingFirstPrioritizedSize:secondPrioritizedSize:inAvailableWidth:
T@"AVZoomingBehavior",W,N,V_behavior
T@"AVPlaybackContentZoomingView",&,N,V_contentZoomingView
T@"UITapGestureRecognizer",&,N,V_doubleTapGestureRecognizer
_contentZoomingView
_doubleTapGestureRecognizer
_handleDoubleTapGestureRecognizer:
_updateZoomingView
contentZoomingView
setContentZoomingView:
doubleTapGestureRecognizer
setDoubleTapGestureRecognizer:
T@"AVPlayer",&,N,V_contentTransitioningPlayer
T@"AVPlaybackContentTransitioningView",&,N,V_contentTransitionView
T@"AVNewsWidgetPlayerBehavior",W,N,V_behavior
contentTransitionInteractive
TB,R,N,GisContentTransitionInteractive
startNextContentTransitionButtonEnabled
TB,N,GisStartNextContentTransitionButtonEnabled,V_startNextContentTransitionButtonEnabled
startPreviousContentTransitionButtonEnabled
TB,N,GisStartPreviousContentTransitionButtonEnabled,V_startPreviousContentTransitionButtonEnabled
T@"UIView",&,N,V_customContentTransitioningInfoPanel
_startNextContentTransitionButtonEnabled
_startPreviousContentTransitionButtonEnabled
_contentTransitioningPlayer
_customContentTransitioningInfoPanel
_contentTransitionView
contentTransitioningViewShouldBeginDragging:locationInView:
contentTransitioningView:shouldBeginTransitionWithDirection:
contentTransitioningPlayerContentViewForTransition:
contentTransitioningViewDidChangeTransitionStatus:oldState:oldTransitionDirection:oldProgress:
setVideoGravityForTransitioningContent:
startContentTransition:
_transitionDirectionForContentTransitionType:
contentTransitioningOverlayView
activeContentTransitionType
isContentTransitionInteractive
setStartNextContentTransitionButtonEnabled:
setStartPreviousContentTransitionButtonEnabled:
updateStartLeftRightContentTransitionButtonsEnabled
setCustomContentTransitioningInfoPanel:
contentTransitionTypeForTransitionDirection:
contentTransitioningPlayer
setContentTransitioningPlayer:
isStartNextContentTransitionButtonEnabled
isStartPreviousContentTransitionButtonEnabled
customContentTransitioningInfoPanel
contentTransitionView
setContentTransitionView:
T@"<AVPlayerViewControllerContentTransitioning_NewsOnly>",W,N,V_legacyDelegate
_legacyDelegate
legacyDelegate
setLegacyDelegate:
playerViewControllerDidCancelContentTransition:
playerViewControllerWillCancelContentTransition:
playerViewControllerDidCompleteContentTransition:
playerViewControllerWillCompleteContentTransition:
playerViewController:didUpdateContentTransitionProgress:
playerViewControllerWillBeginContentTransition:
playerViewController:playerForContentTransitionType:
_newsWidgetPlayerBehaviorContext
_newsWidgetPlayerLegacyBehavior
T@"AVPlayer",R,N
T@"<AVPlayerViewControllerContentTransitioning_NewsOnly>",W,N
TB,N,GisStartNextContentTransitionButtonEnabled
TB,N,GisStartPreviousContentTransitionButtonEnabled
T@"UIView",&,N
T@"<UIViewControllerContextTransitioningEx>",R,W,N,V_transitionContext
T@"UIViewPropertyAnimator",R,N,V_transitionAnimator
T@"UIViewPropertyAnimator",R,N,V_clientAnimator
T@"NSMutableArray",R,N,V_allAnimators
T@"AVPresentationContext",&,N,V_presentationContext
T@"<AVTransitionDelegate>",W,N,V_delegate
_presentationContext
_transitionAnimator
_clientAnimator
_allAnimators
initWithTransitionContext:
transitionAnimatorProgress
startInteractiveTransition
_presentationTransitionWillBegin
_dismissalTransitionWillBegin
pauseInteractiveTransition
updateWithPercentComplete:scale:translation:rotation:
finishInteractiveTransition
_animateFinishInteractiveTransition
_freezeDismissingViewForFinishing
cancelInteractiveTransition
_animateAlongsideInteractivePresentationTransitionAnimationForCancelling
_animateAlongsideInteractiveDismissalTransitionAnimationForCancelling
addRunAlongsideAnimationsIfNeeded
completeTransition:
_presentationTransitionDidEnd:
_dismissalTransitionDidEnd:
_startOrContinueAnimatorsReversed:
_initialFrameForPresentedView
_finalFrameForPresentedView
_transformForScale:translation:rotation:locationInWindow:sourceRectInContainerView:
_updateCornerAppearanceAttributesOfView:toSourceView:similarity:
_sourceViewFrameInContainerView
setPresentationContext:
transitionAnimator
clientAnimator
allAnimators
finalFrameForViewController:
continueAnimationWithTimingParameters:durationFactor:
timingParameters
setReversed:
pauseAnimation
updateInteractiveTransition:
__runAlongsideAnimations
_alongsideAnimationsCount
addKeyframeWithRelativeStartTime:relativeDuration:animations:
animateKeyframesWithDuration:delay:options:animations:completion:
setFractionComplete:
makeObjectsPerformSelector:
insertSubview:below:
viewControllerForKey:
insertSubview:belowSubview:
setScrubsLinearly:
initWithAnimationCurve:
isReversed
fractionComplete
T@"NSArray",&,N,V_rowHeads
T@"NSMutableArray",&,N,V_rowSpacing
T@"NSString",C,N,V_debugIdentifier
_debugIdentifier
_rowHeads
_rowSpacing
initWithLayoutRowHeads:
layoutFramesInBoundingSize:
itemsThatFitSize:
prioritizedSizeThatFitsSize:
setRowSpacing:afterRow:
layoutHeightThatFitsRowsStartingWithRow:
_flexibleWidthMapForLayoutItemsBeginningWithLayoutItem:endingWithItem:withAvailableSize:
_lastVisibleLayoutItemAttributesFrom:
_heightForRow:startingFrom:inBoundingSize:
debugIdentifier
setDebugIdentifier:
rowHeads
setRowHeads:
rowSpacing
setRowSpacing:
enumerateObjectsUsingBlock:
valueWithRect:
arrayWithCapacity:
T@"NSString",R,C,N,V_string
T@"UIFont",R,N,V_font
TB,R,N,V_prefersWesternLatinDigits
_prefersWesternLatinDigits
_string
initWithString:font:
initWithImageName:font:prefersWesternLatinDigits:
imageName
string
prefersWesternLatinDigits
_suppressesAccessibilityHairlineThickening
imageWithConfiguration:
currentLocale
languageCode
_avkit_imageLoadingQueue
configurationWithTextStyle:scale:
_avkit_textImageCache
_avkit_imageWithSize:ofText:font:scaleFactor:
setObject:forKey:
fontWithSize:
sizeWithAttributes:
drawAtPoint:withAttributes:
imageOrientation
imageWithCGImage:scale:orientation:
setCountLimit:
avkit_flatWhiteResizableTemplateImage
avkit_imageNamed:completion:
avkit_imageWithSymbolNamed:font:completion:
avkit_imageWithSymbolNamed:textStyle:scale:
avkit_imageWithSize:ofText:font:scaleFactor:completion:
numberingSystem
initWithSize:
fillRect:
imageWithActions:
resizableImageWithCapInsets:
imageWithRenderingMode:
avkit_loadedImageConfigurations
T@"CAStateController",R,N,V_stateController
T{CGSize=dd},N,V_unscaledSize
Tq,N,V_layoutDirection
T@"CALayer",&,N,V_rootLayer
T@"NSString",R,C,N,V_state
T{CGSize=dd},N,V_targetSize
T@"NSString",R,N,V_packageName
_packageName
_stateController
_layoutDirection
_rootLayer
_targetSize
_unscaledSize
stateController:didSetStateOfLayer:
stateController:transitionDidStart:speed:
stateController:transitionDidStop:completed:
CAMLParser:resourceForURL:
CAMLParser:didLoadResource:fromURL:
CAMLParser:didFailToLoadResourceFromURL:
CAMLParser:didFailToFindClassWithName:
CAMLParser:evaluateScriptElement:sourceURL:lineNumber:
CAMLParser:evaluateScriptValue:sourceURL:lineNumber:
CAMLParser:formatWarningString:arguments:lineNumber:
CAMLParser:formatErrorString:arguments:lineNumber:
initWithPackageName:layoutDirection:
rootLayer
setTargetSize:
setState:color:
removeCompositingFiltersWithName:
_setState:
_recursivelyFindSublayerWithName:rootLayer:
_recursivelySetFillColor:rootLayer:
_recursivelyRemoveCompositingFiltersWithName:rootLayer:
transitionToStateWithName:
transitionToStateWithName:onLayer:
availableStates
availableStatesOnLayer:
sublayerWithName:
_loadRootLayerIfNeeded
targetSize
unscaledSize
setUnscaledSize:
packageName
stateController
layoutDirection
setLayoutDirection:
setRootLayer:
initWithLayer:
result
parseContentsOfURL:
parser
activateBackground:
states
setState:ofLayer:transitionSpeed:
stateWithName:
compositingFilter
sublayers
setFillColor:
classSubstitions
asynchronouslyPrepareMicaPackageWithName:layoutDirection:completion:
T@"UIView",&,N,V_prominentPlayButtonContainer
T@"AVButton",W,N,V_prominentPlayButton
T@"UIView",&,N,V_volumeButtonContainer
T@"AVVolumeButtonControl",W,N,V_volumeButton
T@"UIView",R,N,V_contentView
Tq,N,V_includedControlType
T@"NSString",C,N,V_volumeButtonMicaPackageStateName
T{CGAffineTransform=dddddd},N,V_overrideTransformForProminentPlayButton
T@"NSValue",&,N,V_overrideLayoutMarginsWhenEmbeddedInline
_includedControlType
_volumeButtonMicaPackageStateName
_prominentPlayButtonContainer
_volumeButtonContainer
initWithFrame:styleSheet:
hasVisibleControls
setIncludedControlType:
setVolumeButtonMicaPackageStateName:
_updateFramesAndHitRectInsets
_frameForIncludedViewType:
_makeVolumeButtonAndContainerIfNeeded
_makeVolumeButtonAndContainer
_makeProminentPlayButtonAndContainerIfNeeded
_makeProminentPlayButtonAndContainer
includedControlType
volumeButtonMicaPackageStateName
setVolumeButton:
prominentPlayButtonContainer
setProminentPlayButtonContainer:
volumeButtonContainer
setVolumeButtonContainer:
UIEdgeInsetsValue
isEqualToValue:
T@"NSMutableArray",R,N,V_animations
T@"NSMutableArray",R,N,V_completions
_animations
_completions
addCoordinatedAnimations:completion:
performCoordinatedAnimations
didFinishAnimations:
animations
completions
Td,R,V_interval
_invalidated
initWithTimeInterval:queue:block:repeats:
UTF8String
active
TB,N,GisActive,V_active
T@"AVSecondScreen",W,N,V_connectedSecondScreen
T@"AVDisplayCriteria",&,N,V_preferredDisplayCriteria
T{CGSize=dd},N,V_maximumVideoResolution
ready
TB,N,GisReady,V_ready
playing
TB,N,GisPlaying,V_playing
TB,N,V_requiresTVOutScreen
T@"AVSecondScreenViewController",&,N,V_secondScreenViewController
T@"AVPlayer",R,N,V_player
T@"AVPlayerLayer",R,W,N,V_playerLayer
readyToConnect
TB,R,N,GisReadyToConnect,V_readyToConnect
T@"AVSecondScreenDebugAssistant",R,N,V_debugAssistant
_readyToConnect
_active
_playing
_requiresTVOutScreen
_ready
_debugAssistant
_connectedSecondScreen
_preferredDisplayCriteria
_maximumVideoResolution
initWithPlayer:playerLayer:
startUpdates
debugAssistant
setPlayerLayer:
setPreferredDisplayCriteria:
setReadyToConnect:
setActive:
setPlaying:
connectWithScreen:active:
_loadSecondScreenViewControllerIfNeeded
_postNotification:oldValue:newValue:
_startObservingPlayer
_updatePreferredDisplayCriteriaFromPreparedAssetIfNeeded:
_updateReadyToConnect
_determineIsReadyToConnect
_allowsNonAirPlayExternalPlayback
_currentItemIsReadyToPlayVideoOrLoadingWhileActive
isReadyToConnect
connectedSecondScreen
setConnectedSecondScreen:
isActive
requiresTVOutScreen
setRequiresTVOutScreen:
preferredDisplayCriteria
maximumVideoResolution
setMaximumVideoResolution:
isReady
setReady:
initWithRefreshRate:videoDynamicRange:
T@"AVDisplayCriteria",&,D,N
TB,D,N,GisReadyToConnect
TB,D,N,GisPlaying
TB,D,N
T@"AVObservationController",&,N,V_keyValueObservationController
keyValueObservationController
setKeyValueObservationController:
T@"AVPresentationContainerViewAppearanceProxy",R,N,V_appearanceProxy
TB,N,V_wantsAppearanceConfigValues
_wantsAppearanceConfigValues
_appearanceProxy
appearanceProxy
setWantsAppearanceConfigValues:
maskedCorners
setMaskedCorners:
masksToBounds
setMasksToBounds:
cornerCurve
setCornerCurve:
cornerRadius
setCornerRadius:
continuousCorners
setContinuousCorners:
wantsAppearanceConfigValues
actualView
clipsToBounds
T@"UIView",W,N,V_actualView
T@"NSString",&,N,V_cornerCurve
TQ,N,V_maskedCorners
Td,N,V_cornerRadius
T@"UIColor",&,N,V_backgroundColor
TB,N,V_clipsToBounds
_clipsToBounds
_actualView
_cornerCurve
_maskedCorners
_cornerRadius
_backgroundColor
setActualView:
backgroundColor
setBackgroundColor:
T@"AVPresentationContainerViewLayer",R,D,N
counterRotatingContentView
TB,N,GisCounterRotatingContentView,V_counterRotatingContentView
beingPresented
TB,N,GisBeingPresented,V_beingPresented
beingDismissed
TB,N,GisBeingDismissed,V_beingDismissed
Tq,N,V_fromOrientation
Tq,N,V_toOrientation
TB,N,V_willBeginOrientationChange
T@"UIView",W,N,V_presentationContainerContentView
T@"AVPresentationContainerViewAppearanceProxy",R,N
_counterRotatingContentView
_beingPresented
_beingDismissed
_willBeginOrientationChange
_presentationContainerContentView
_fromOrientation
_toOrientation
_continuousCornerRadius
_setCornerRadius:
willBeginAdjustingOrientation
avkit_overrideLayoutMarginsForInterfaceOrientation:
willStartPresentationTransitionFromInterfaceOrientation:toOrientation:needsCounterRotation:
willStartDismissalTransitionFromInterfaceOrientation:toOrientation:needsCounterRotation:
didStopTransition
_contentTransform
_radiansForCounterRotation
isCounterRotatingContentView
setCounterRotatingContentView:
presentationContainerContentView
setPresentationContainerContentView:
isBeingPresented
setBeingPresented:
isBeingDismissed
setBeingDismissed:
fromOrientation
setFromOrientation:
toOrientation
setToOrientation:
willBeginOrientationChange
setWillBeginOrientationChange:
T@"NSString",C,N,V_lineSeparator
T@"NSString",C,N,V_headerBodySeparator
T@"NSString",C,N,V_bodyLengthKey
T@"NSString",C,N,V_compressionMethodKey
T@"NSData",&,N,V_lineSeparatorData
T@"NSData",&,N,V_headerBodySeparatorData
_lineSeparator
_headerBodySeparator
_bodyLengthKey
_compressionMethodKey
_lineSeparatorData
_headerBodySeparatorData
initWithLineSeparator:headerBodySeparator:bodyLengthKey:compressionMethodKey:
setLineSeparator:
setHeaderBodySeparator:
partsWithData:
lineSeparator
headerBodySeparator
bodyLengthKey
setBodyLengthKey:
compressionMethodKey
setCompressionMethodKey:
lineSeparatorData
setLineSeparatorData:
headerBodySeparatorData
setHeaderBodySeparatorData:
setUncompressedBodyData:
decompressBodyUsingNamedAlgorithm:
uniqueHeaders
messagePartsWithData:lineSeparator:data:headerBodySeparator:data:bodyLengthKey:
T@"NSData",&,N,V_uncompressedBodyData
TB,R,N,V_isIncomplete
T@"NSString",R,N,V_version
T@"NSArray",R,N,V_headers
Tq,R,N,V_expectedBodyLength
T@"NSData",R,N,V_rawBodyData
T@"NSData",R,N,V_extraData
T@,R,N
_uniqueHeaders
_repeatedHeaders
_isIncomplete
_version
_headers
_expectedBodyLength
_rawBodyData
_extraData
_uncompressedBodyData
isIncomplete
shouldCallReverseTransformerAgain
initWithVersion:headers:expectedBodyLength:body:extra:
_setIncomplete
_identifyUniqueAndRepeatedHeadersIfNecessary
repeatedHeaders
bodyAsUTF8Text
bodyAsJSON
bodyAsJSONDictionary
decompressBodyUsingAlgorithm:
headers
expectedBodyLength
rawBodyData
extraData
uncompressedBodyData
JSONObjectWithData:options:error:
componentsSeparatedByString:
rangeOfData:options:range:
dataUsingEncoding:
_matchingClass
airMessage
registerClass:forMessageVersion:
airMessageParser
T@"AVMessageParser",R,N
T@"AVStatusBarBackgroundGradientView",R,N,V_statusBarBackgroundGradientView
observingStatusBarHidden
TB,N,GisObservingStatusBarHidden,V_observingStatusBarHidden
T@"UIView",&,N,V_contentOverlayViewSubview
TB,N,V_canShowStatusBarBackgroundGradientWhenStatusBarVisible
_canShowStatusBarBackgroundGradientWhenStatusBarVisible
_observingStatusBarHidden
_contentOverlayViewSubview
_statusBarBackgroundGradientView
initWithFrame:playerLayerView:contentOverlayView:
setContentOverlayViewSubview:
removeAllSublayerTransformAnimations
_updateStatusBarBackgroundGradientViewAlpha
_frameForStatusBarBackgroundGradientView
_resolvedContentFrame
contentOverlayViewSubview
statusBarBackgroundGradientView
isObservingStatusBarHidden
setObservingStatusBarHidden:
avkit_removeAllSublayerTransformAnimations
animationKeys
animationForKey:
containsString:
removeAnimationForKey:
labelColor
_loadUIImageWithCompletionHandler:
T@"AVLayoutView",R,N,V_controlsLayoutView
T@"AVLayoutView",&,N,V_detachedExtraContentLayoutView
T@"AVLabel",R,N,V_liveBroadcastLabel
T@"AVLabel",R,N,V_liveBroadcastScrubberLabel
T@"AVTouchIgnoringView",R,N,V_embeddedExtraContentContainer
T@"UILabel",R,N,V_scrubInstructionsLabel
T@"AVLabel",R,N,V_detachedScrubInstructionsBackdropLabel
T@"NSTimer",W,N,V_scrubInstructionsTimer
Tf,N,V_scrubberValueWhenScrubInstructionsTimerBegan
T@"AVTouchIgnoringView",&,N,V_flexibleViewAfterRoutePickerView
T@"AVTouchIgnoringView",&,N,V_flexibleViewAfterSkipForwardButtons
showingScrubInstructions
TB,N,GisShowingScrubInstructions,V_showingScrubInstructions
animatingScrubInstructions
TB,N,GisAnimatingScrubInstructions,V_animatingScrubInstructions
T@"<AVTransportControlsViewDelegate>",W,N,V_delegate
doubleRowLayoutEnabled
TB,N,GisDoubleRowLayoutEnabled,V_doubleRowLayoutEnabled
TB,N,V_showsLiveStreamingControls
TB,N,V_liveStreamingControlsIncludeScrubber
TB,N,V_transportViewIncludesVolumeController
Td,R,N,V_minimumRequiredWidth
T@"AVScrubber",R,N,V_scrubber
T@"AVLabel",R,N,V_elapsedTimeLabel
T@"AVLabel",R,N,V_timeRemainingLabel
T@"AVButton",R,N,V_standardPlayPauseButton
T@"AVButton",R,N,V_skipForwardButton
T@"AVButton",R,N,V_skipBackButton
T@"AVButton",R,N,V_startLeftwardContentTransitionButton
T@"AVButton",R,N,V_startRightwardContentTransitionButton
T@"AVPlaybackControlsRoutePickerView",R,N,V_routePickerView
T@"AVButton",R,N,V_mediaSelectionButton
T@"AVControlOverflowButton",R,N,V_controlOverflowButton
T@"AVButton",R,N,V_playbackSpeedButton
T@"NSArray",C,N,V_customItems
_doubleRowLayoutEnabled
_showsLiveStreamingControls
_liveStreamingControlsIncludeScrubber
_transportViewIncludesVolumeController
_showingScrubInstructions
_animatingScrubInstructions
_scrubberValueWhenScrubInstructionsTimerBegan
_minimumRequiredWidth
_scrubber
_elapsedTimeLabel
_timeRemainingLabel
_standardPlayPauseButton
_skipForwardButton
_skipBackButton
_startLeftwardContentTransitionButton
_startRightwardContentTransitionButton
_routePickerView
_mediaSelectionButton
_controlOverflowButton
_playbackSpeedButton
_customItems
_controlsLayoutView
_detachedExtraContentLayoutView
_liveBroadcastLabel
_liveBroadcastScrubberLabel
_embeddedExtraContentContainer
_scrubInstructionsLabel
_detachedScrubInstructionsBackdropLabel
_scrubInstructionsTimer
_flexibleViewAfterRoutePickerView
_flexibleViewAfterSkipForwardButtons
volumeControlsControllerTransportBarHeight:
scrubberSlowKnobMovementDetected:
setDoubleRowLayoutEnabled:
setShowsLiveStreamingControls:
setLiveStreamingControlsIncludeScrubber:
setCustomItems:
reevaluateHiddenStateOfAllItems
traitCollectionDidChange:
beginScrubbing:
scrubberValueChanged:
endScrubbing:
_singeRowLayoutSpacingAfterSubview:
_doubleRowLayoutSpacingAfterSubview:
_layoutDoubleRowViews
_layoutSingleRowViews
_rowSpacingForDoubleRowLayoutAfterRow:
_layoutItemDisplayPriorityForSubview:
_updateFontSizes
_showScrubInstructions
_updateScrubInstructionsLabelsText
_updateScrubInstructionsFrame
_scrubInstructionsAttributedText
_updateVolumeControllerLayout
_updateCustomContentTransitioningInfoPanelLayout
singleRowViews
doubleRowViews
canShowScrubInstructions
isDoubleRowLayoutEnabled
showsLiveStreamingControls
liveStreamingControlsIncludeScrubber
transportViewIncludesVolumeController
setTransportViewIncludesVolumeController:
minimumRequiredWidth
scrubber
elapsedTimeLabel
timeRemainingLabel
standardPlayPauseButton
skipForwardButton
skipBackButton
startLeftwardContentTransitionButton
startRightwardContentTransitionButton
routePickerView
mediaSelectionButton
controlOverflowButton
playbackSpeedButton
customItems
controlsLayoutView
detachedExtraContentLayoutView
setDetachedExtraContentLayoutView:
liveBroadcastLabel
liveBroadcastScrubberLabel
embeddedExtraContentContainer
scrubInstructionsLabel
detachedScrubInstructionsBackdropLabel
scrubInstructionsTimer
setScrubInstructionsTimer:
scrubberValueWhenScrubInstructionsTimerBegan
setScrubberValueWhenScrubInstructionsTimerBegan:
flexibleViewAfterRoutePickerView
setFlexibleViewAfterRoutePickerView:
flexibleViewAfterSkipForwardButtons
setFlexibleViewAfterSkipForwardButtons:
isShowingScrubInstructions
setShowingScrubInstructions:
isAnimatingScrubInstructions
setAnimatingScrubInstructions:
appendAttributedString:
sizeThatFits:
systemLayoutSizeFittingSize:
T@,W,N,V_AVKitOwner
T@"NSMapTable",R,N,V_behaviorsAndBehaviorContexts
_AVKitOwner
_behaviorsAndBehaviorContexts
behaviors
addBehavior:
removeBehavior:
enumerateAllBehaviorsUsingBlock:
enumerateAllBehaviorsConformingToProtocol:usingBlock:
behaviorOfClass:
enumerateAllBehaviorContextsUsingBlock:
enumerateAllBehaviorContextsConformingToProtocol:usingBlock:
enumerateAllBehaviorContextsImplementingSelector:forProtocol:usingBlock:
behaviorContextOfClass:
AVKitOwner
setAVKitOwner:
behaviorsAndBehaviorContexts
objectEnumerator
allObjects
strongToStrongObjectsMapTable
TQ,R,N,V_transitionStyle
Td,R,N,V_transitionDuration
_transitionStyle
_transitionDuration
transitionStyle
transitionDuration
configurationWithTransitionStyle:transitionDuration:
avkit_asWindowScene
_isCarScreen
windows
filteredArrayUsingPredicate:
displayConfiguration
_setAVKitRequestedRefreshRate:HDRMode:overscanCompensation:
avkit_screenType
avkit_screenHasWindowsExcludingWindow:
_avkit_setPreferredRefreshRate:HDRMode:overscanCompensation:
sharedApplication
avkit_isForeground
avkit_resetPreferredModeSwitchRequest
avkit_setPreferredRefreshRate:HDRMode:
avkit_secondScreenScenes
TB,N,V_wasInitiallyInteractive
TB,N,V_hasAVKitAnimator
TB,N,V_wasCancelledWithInactiveScene
TQ,N,V_presenterSupportedOrientations
Tq,N,V_finalInterfaceOrientation
T{CGAffineTransform=dddddd},R,N
_wasInitiallyInteractive
_hasAVKitAnimator
_wasCancelledWithInactiveScene
_presenterSupportedOrientations
_finalInterfaceOrientation
counterRotationTransform
interfaceRotation
isRotated
presenterSupportsOrientation:
setWasInitiallyInteractive:
hasAVKitAnimator
setHasAVKitAnimator:
wasCancelledWithInactiveScene
setWasCancelledWithInactiveScene:
presenterSupportedOrientations
setPresenterSupportedOrientations:
finalInterfaceOrientation
setFinalInterfaceOrientation:
T@"<AVHomeIPCameraActionButtonHandling>",W,N,V_delegate
T{CGSize=dd},N,V_presentationSize
muted
TB,N,GisMuted,V_muted
_muted
_presentationSize
hasContent
hasEnabledVideo
hasLiveStreamingContent
hasSeekableLiveStreamingContent
togglePlaybackEvenWhenInBackground:
setMuted:
beginReducingResourcesForPictureInPicturePlayerLayer:
endReducingResourcesForPictureInPicturePlayerLayer:
presentationSize
setPresentationSize:
isMuted
T@"AVPlaybackControlsView",&,N,V_playbackControlsView
T@"AVTurboModePlaybackControlsPlaceholderView",W,N,V_turboModePlaybackControlsPlaceholderView
T@"AVNowPlayingInfoController",&,N,V_nowPlayingInfoControllerIfLoaded
T@"AVObservationController",&,N,V_playbackControlsObservationController
T@"AVPlayerControllerTimeResolver",&,N,V_timeResolver
T@"AVTimeFormatter",R,N,V_elapsedTimeFormatter
T@"AVTimeFormatter",R,N,V_remainingTimeFormatter
T@"UIAlertController",W,N,V_routePickerAlertController
T@"AVRouteDetectorCoordinator",&,N,V_routeDetectorCoordinator
T@,&,N,V_AVRouteDetectorCoordinatorMultipleRoutesDetectedObserver
T@"NSTimer",W,N,V_loadingIndicatorTimer
T@"UIViewPropertyAnimator",W,N,V_collapseExpandSliderAnimator
T@"<AVVolumeController>",&,N,V_volumeController
T@"NSUUID",&,N,V_playerMuteFadeAnimationID
T@"AVMediaSelectionMenuController",&,N,V_mediaSelectionMenuController
T@"AVMobilePlaybackRateMenuController",&,N,V_playbackRateMenuController
TB,N,V_showsPlaybackSpeedButton
seekingEnabled
TB,R,N,GisSeekingEnabled
TB,N,V_canIncludeVideoGravityButton
T@"NSNumber",&,N,V_pendingOrientationChange
userInteracting
TB,R,N,GisUserInteracting
TB,N,V_hasStartedUpdates
coveringWindow
TB,N,GisCoveringWindow,V_coveringWindow
TB,R,N,GisFullScreen
TB,N,V_hasPlaybackBegunSincePlayerControllerBecameReadyToPlay
TB,N,V_hasBecomeReadyToPlay
TB,N,V_multipleRoutesDetected
Td,N,V_loadingIndicatorTimerDelay
resumingUpdates
TB,N,GisResumingUpdates,V_resumingUpdates
TB,N,V_prefersMuted
playbackSuspendedForScrubbing
TB,N,GisPlaybackSuspendedForScrubbing,V_playbackSuspendedForScrubbing
Tq,N,V_timeControlStatus
TB,N,V_hasSeekableLiveStreamingContent
TB,N,V_shouldIgnoreTimeResolverUpdates
TB,N,V_hasBegunObservingPotentiallyUnimplementedPlayerControllerProperties
Tq,N,V_videoGravityButtonType
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_playbackViewFrame
TB,N,GisVideoScaled,V_videoScaled
T@"NSString",R,N,V_uniqueIdentifer
T@"NSString",&,N,V_windowSceneSessionIdentifier
T@"NSTimer",&,N,V_playbackControlsVisibilityTimer
TQ,N,V_userInteractingCount
hidingItemsForTransition
TB,N,GisHidingItemsForTransition,V_hidingItemsForTransition
showingPlaybackControls
TB,N,GisShowingPlaybackControls,V_showingPlaybackControls
showingVolumeControlInTransportBar
TB,N,GshouldShowVolumeControlInTransportBar,V_showingVolumeControlInTransportBar
T@"AVPlayerController",W,N,V_playerController
TB,N,V_playerViewControllerIsBeingTransitionedWithResizing
TB,N,V_playerViewControllerIsPresentingFullScreen
TB,N,V_playerViewControllerIsPresentedFullScreen
TB,N,V_playerViewControllerHasInvalidViewControllerHierarchy
TB,N,V_inlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused
TB,N,V_volumeControlsCanShowSlider
TB,N,V_showsPictureInPictureButton
TB,N,V_hasCustomPlaybackControls
TB,N,V_showsVideoGravityButton
TB,N,V_showsDoneButtonWhenFullScreen
TB,N,V_playbackControlsIncludeStartContentTransitionButtons
TB,N,V_playbackControlsShouldControlSystemVolume
TB,N,V_forcePlaybackControlsHidden
startLeftwardContentTransitionButtonEnabled
TB,N,GisStartLeftwardContentTransitionButtonEnabled,V_startLeftwardContentTransitionButtonEnabled
startRightwardContentTransitionButtonEnabled
TB,N,GisStartRightwardContentTransitionButtonEnabled,V_startRightwardContentTransitionButtonEnabled
T@?,C,N,V_contentTransitionAction
T@"AVPictureInPictureController",&,N,V_pictureInPictureController
T@"AVSecondScreenContentViewConnection",&,N,V_secondScreenConnection
popoverIsBeingPresented
TB,N,GisPopoverBeingPresented,V_popoverIsBeingPresented
_selectedPlaybackRateObservationToken
_playerViewControllerIsBeingTransitionedWithResizing
_playerViewControllerIsPresentingFullScreen
_playerViewControllerIsPresentedFullScreen
_playerViewControllerHasInvalidViewControllerHierarchy
_volumeControlsCanShowSlider
_showsPictureInPictureButton
_hasCustomPlaybackControls
_showsVideoGravityButton
_showsDoneButtonWhenFullScreen
_playbackControlsIncludeStartContentTransitionButtons
_forcePlaybackControlsHidden
_startLeftwardContentTransitionButtonEnabled
_startRightwardContentTransitionButtonEnabled
_popoverIsBeingPresented
_showsPlaybackSpeedButton
_canIncludeVideoGravityButton
_hasStartedUpdates
_coveringWindow
_hasPlaybackBegunSincePlayerControllerBecameReadyToPlay
_hasBecomeReadyToPlay
_multipleRoutesDetected
_resumingUpdates
_prefersMuted
_playbackSuspendedForScrubbing
_hasSeekableLiveStreamingContent
_shouldIgnoreTimeResolverUpdates
_hasBegunObservingPotentiallyUnimplementedPlayerControllerProperties
_videoScaled
_hidingItemsForTransition
_showingPlaybackControls
_showingVolumeControlInTransportBar
_contentTransitionAction
_volumeController
_nowPlayingInfoControllerIfLoaded
_playbackControlsView
_turboModePlaybackControlsPlaceholderView
_playbackControlsObservationController
_timeResolver
_elapsedTimeFormatter
_remainingTimeFormatter
_routePickerAlertController
_routeDetectorCoordinator
_AVRouteDetectorCoordinatorMultipleRoutesDetectedObserver
_loadingIndicatorTimer
_collapseExpandSliderAnimator
_playerMuteFadeAnimationID
_mediaSelectionMenuController
_playbackRateMenuController
_pendingOrientationChange
_loadingIndicatorTimerDelay
_timeControlStatus
_videoGravityButtonType
_uniqueIdentifer
_playbackControlsVisibilityTimer
_userInteractingCount
_playbackViewFrame
playerViewControllerContentView:willLoadPlaybackControlsView:
playerViewControllerContentView:willLoadTurboModePlaceholderView:
playerViewControllerContentViewIsPlayingOnSecondScreen:
playerViewControllerContentViewPlaybackContentContainerViewChanged:
playerViewControllerContentViewDidLayoutSubviews:
playerViewControllerContentViewDidMoveToSuperviewOrWindow:
playerViewControllerContentViewShouldApplyAutomaticVideoGravity:
playerViewControllerContentViewEdgeInsetsForLetterboxedVideo:
playerViewControllerContentViewDidChangeVideoGravity:
playerViewControllerContentViewHasActiveTransition:
playerViewControllerContentViewIsBeingTransitionedFromFullScreen:
playerViewControllerContentViewOverrideLayoutClass:
playerViewControllerContentViewDidUpdateScrollingStatus:
overflowMenuItemsForControlOverflowButton:
mediaSelectionMenuController:didSelectOption:atIndex:
volumeControlsController:volumeButtonControl:didShowVolumeSlider:
volumeControlsController:volumeButtonControl:didHideVolumeSlider:
volumeControlsControllerPlayerViewHeight:
volumeControlsController:volumeButtonControl:viewContainingVolumeSlider:
transportControlsNeedsLayoutIfNeeded:
transportControls:scrubberDidBeginScrubbing:
transportControls:scrubberDidScrub:
transportControls:scrubberDidEndScrubbing:
initWithPlayerViewController:
startUpdatesIfNeeded
toggleMuted
_updateVolumeButtonInclusionAndPrefersVolumeSliderExpandedWithPreferredExpansion:
setPlayerViewControllerIsPresentingFullScreen:
setPlayerViewControllerIsPresentedFullScreen:
setPlayerViewControllerIsBeingTransitionedWithResizing:
setHasCustomPlaybackControls:
setShowsDoneButtonWhenFullScreen:
setShowsVideoGravityButton:
setVolumeController:
setCoveringWindow:
setCanIncludeVideoGravityButton:
setShowsPictureInPictureButton:
showsRoutePickerView
showsProminentPlayButton
prominentPlayButtonCanShowPauseGlyph
showsTransportControls
shouldEnterFullScreenWhenPlaybackBegins
showsMediaSelectionButton
minimumTime
maximumTime
isSeekingEnabled
showsSkipButtons
showsStartContentTransitionButtons
canShowLoadingIndicator
playButtonsShowPauseGlyph
needsTimeResolver
tapGestureRecognizersCanReceiveTouches
playbackControlsViewDidLoad:
turboModePlaybackControlsPlaceholderViewDidLoad:
secondScreenConnectionDidBecomeActive:
secondScreenConnectionDidResignActive:
handleVolumeChange:
handleCurrentRouteSupportsVolumeControlChanged:
volumeSliderValueDidChange:
volumeButtonTapTriggered:
volumeButtonLongPressTriggered:
volumeButtonPanChanged:
updateVolumeSliderValue:volumeButtonControl:
shouldShowVolumeControlInTransportBar
_prefersVolumeSliderExpandedAutomatically
_showOrHideDisplayModeControls
_updateVolumeButtonGlyph
_volumeButtonMicaPackageState
_updateVolumeSliderValueWithSystemVolume:animated:
playbackSpeedButtonTapped:
prominentPlayButtonTouchUpInside:
skipButtonTouchUpInside:
skipButtonLongPressTriggered:
skipButtonLongPressEnded:
skipButtonForcePressChanged:
startContentTransitionButtonTouchUpInside:
_bindEnabledStateOfControls:toKeyPath:
_bindInclusionOfControlItems:toKeyPath:
_observeBoolForKeyPath:usingKeyValueObservationController:observationHandler:
_seekByTimeInterval:toleranceBefore:toleranceAfter:
setForcePlaybackControlsHidden:
togglePlaybackControlsVisibility
_updatePlaybackControlsVisibilityWantsPlaybackControlsVisible:
showPlaybackControls:immediately:
flashVolumeControlsWithDuration:
_autoHideControlsAfterDelay:
beginShowingItemsDueToIndirectUserInteraction
endShowingItemsDueToIndirectUserInteraction
setPopoverIsBeingPresented:
beginUserInteraction
endUserInteraction
isUserInteracting
beginHidingItemsForTransition
endHidingItemsForTransitionAndShowImmediately:
_updatePlaybackControlsVisibleAndObservingUpdates
_startObservingForPlaybackViewUpdates
_startObservingPotentiallyUnimplementedPlayerControllerProperties
_wantsRouteDetectionEnabled
_updateSkipButtonsEnableLongPress
_updateControlInclusion
_updateContainerInclusion
_updateOrCreateTimeResolverIfNeeded
_updatePlaybackSpeedControlImageNames
_updatePlaybackSpeedControlInclusion
_updateScrubberAndTimeLabels
_updateVideoGravityButtonType
_updateVolumeControllerView
_updateHasPlaybackBegunSincePlayerControllerBecameReadyToPlay:playing:userDidEndTappingProminentPlayButton:
_updatePrefersInspectionSuspended
_updateNowPlayingInfoCenter
_updateEdgeInsetsForLetterboxedContentInContentView:
_updateSecondScreenConnectionReadyToConnect
playerViewControllerIsBeingTransitionedWithResizing
playerViewControllerIsPresentingFullScreen
playerViewControllerIsPresentedFullScreen
playerViewControllerHasInvalidViewControllerHierarchy
setPlayerViewControllerHasInvalidViewControllerHierarchy:
inlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused
setInlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused:
showsPictureInPictureButton
showsVideoGravityButton
showsDoneButtonWhenFullScreen
playbackControlsIncludeStartContentTransitionButtons
setPlaybackControlsIncludeStartContentTransitionButtons:
forcePlaybackControlsHidden
isStartLeftwardContentTransitionButtonEnabled
setStartLeftwardContentTransitionButtonEnabled:
isStartRightwardContentTransitionButtonEnabled
setStartRightwardContentTransitionButtonEnabled:
contentTransitionAction
setContentTransitionAction:
nowPlayingInfoControllerIfLoaded
setNowPlayingInfoControllerIfLoaded:
isPopoverBeingPresented
playbackControlsView
setPlaybackControlsView:
turboModePlaybackControlsPlaceholderView
setTurboModePlaybackControlsPlaceholderView:
playbackControlsObservationController
setPlaybackControlsObservationController:
timeResolver
setTimeResolver:
elapsedTimeFormatter
remainingTimeFormatter
routePickerAlertController
setRoutePickerAlertController:
routeDetectorCoordinator
setRouteDetectorCoordinator:
AVRouteDetectorCoordinatorMultipleRoutesDetectedObserver
setAVRouteDetectorCoordinatorMultipleRoutesDetectedObserver:
loadingIndicatorTimer
setLoadingIndicatorTimer:
collapseExpandSliderAnimator
setCollapseExpandSliderAnimator:
playerMuteFadeAnimationID
setPlayerMuteFadeAnimationID:
mediaSelectionMenuController
setMediaSelectionMenuController:
playbackRateMenuController
setPlaybackRateMenuController:
showsPlaybackSpeedButton
setShowsPlaybackSpeedButton:
canIncludeVideoGravityButton
pendingOrientationChange
setPendingOrientationChange:
hasStartedUpdates
setHasStartedUpdates:
isCoveringWindow
hasPlaybackBegunSincePlayerControllerBecameReadyToPlay
setHasPlaybackBegunSincePlayerControllerBecameReadyToPlay:
hasBecomeReadyToPlay
setHasBecomeReadyToPlay:
loadingIndicatorTimerDelay
setLoadingIndicatorTimerDelay:
isResumingUpdates
setResumingUpdates:
prefersMuted
setPrefersMuted:
isPlaybackSuspendedForScrubbing
setPlaybackSuspendedForScrubbing:
setTimeControlStatus:
setHasSeekableLiveStreamingContent:
shouldIgnoreTimeResolverUpdates
setShouldIgnoreTimeResolverUpdates:
hasBegunObservingPotentiallyUnimplementedPlayerControllerProperties
setHasBegunObservingPotentiallyUnimplementedPlayerControllerProperties:
videoGravityButtonType
setVideoGravityButtonType:
playbackViewFrame
setPlaybackViewFrame:
uniqueIdentifer
setWindowSceneSessionIdentifier:
playbackControlsVisibilityTimer
setPlaybackControlsVisibilityTimer:
userInteractingCount
setUserInteractingCount:
isHidingItemsForTransition
setHidingItemsForTransition:
isShowingPlaybackControls
setShowingPlaybackControls:
setShowingVolumeControlInTransportBar:
_playbackSpeedControlFeatureEnabled
timeIntervalSince1970
date
isValid
_solveForInput:
functionWithName:
UUID
reason
imageWithTintColor:renderingMode:
horizontalSizeClass
session
addAction:forControlEvents:
setMenu:
actionWithHandler:
areAnimationsEnabled
verticalSizeClass
keyPathsForValuesAffectingFullScreen
keyPathsForValuesAffectingShowsRoutePickerView
keyPathsForValuesAffectingShowsProminentPlayButton
keyPathsForValuesAffectingProminentPlayButtonCanShowPauseGlyph
keyPathsForValuesAffectingShowsTransportControls
keyPathsForValuesAffectingShouldEnterFullScreenWhenPlaybackBegins
keyPathsForValuesAffectingShowsMediaSelectionButton
keyPathsForValuesAffectingCurrentTime
keyPathsForValuesAffectingMinimumTime
keyPathsForValuesAffectingMaximumTime
keyPathsForValuesAffectingSeekingEnabled
keyPathsForValuesAffectingShowsSkipButtons
keyPathsForValuesAffectingShowsStartContentTransitionButtons
keyPathsForValuesAffectingCanShowLoadingIndicator
keyPathsForValuesAffectingPlayButtonsShowPauseGlyph
keyPathsForValuesAffectingNeedsTimeResolver
T@"UILabel",R,N,V_debugLabel
T@"AVSecondScreenPlayerLayerView",&,N,V_playerLayerView
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_initialScreenBoundsHint
T@"AVPlayerLayer",W,N,V_sourcePlayerLayer
_sourcePlayerLayer
_debugLabel
_initialScreenBoundsHint
loadPlayerLayerViewIfNeeded
setSourcePlayerLayer:
setInitialScreenBoundsHint:
viewDidLayoutSubviews
_updateContentViewIfNeeded
_updateLayout
initialScreenBoundsHint
sourcePlayerLayer
debugLabel
bringSubviewToFront:
sizeToFit
startShowingContentFromSourcePlayerLayer:
stopShowingContentFromActiveSourcePlayerLayer
T@"AVPlayerLayer",W,N,V_activeSourcePlayerLayer
_activeSourcePlayerLayer
activeSourcePlayerLayer
setActiveSourcePlayerLayer:
interruptibleAnimatorForTransition:
animationEnded:
transitionDuration:
animateTransition:
completionSpeed
completionCurve
wantsInteractiveStart
startInteractiveTransition:
transitionWillComplete:success:continueBlock:
transitionPresentedViewBackgroundColor:
transitionBackgroundViewBackgroundColor:
transitionDriver:gestureRecognizer:shouldReceiveTouch:
transitionDriver:shouldDriveTransitionInteractionOfType:
transitionDriver:didBeginTrackingTransitionInteraction:readyToProceedHandler:
transitionDriverDidContinueInteraction:
transitionDriverDidCancelInteraction:
transitionDriverDidFinishInteraction:
animationControllerForPresentedController:presentingController:sourceController:
animationControllerForDismissedController:
interactionControllerForPresentation:
interactionControllerForDismissal:
presentationControllerForPresentedViewController:presentingViewController:sourceViewController:
Tq,N,V_state
T@"AVDisplayLink",&,N,V_displayLink
T@"AVTransition",&,N,V_activeTransition
T@"AVInteractiveTransitionGestureTracker",R,N,V_gestureTracker
T@"AVPresentationController",W,N,V_presentationController
T@?,C,N,V_transitionDidBeginHandler
T@"CAMediaTimingFunction",&,N,V_easeInFunction
T@"CAMediaTimingFunction",&,N,V_easeOutFunction
T{CGPoint=dd},N,V_touchGravity
T@"AVPresentationContext",R,W,N
T@"<AVTransitionControllerDelegate>",W,N,V_delegate
T@"<AVTransitionDriver>",&,N,V_interactiveGestureTracker
T@"UIView",W,N,V_interactionView
_interactiveGestureTracker
_interactionView
_displayLink
_activeTransition
_gestureTracker
_transitionDidBeginHandler
_easeInFunction
_easeOutFunction
_touchGravity
displayLink
setInteractiveGestureTracker:
setInteractionView:
addTransitionDriver:toView:
beginFullScreenPresentationOfViewController:fromView:isInteractive:completion:
beginFullScreenDismissalOfViewController:animated:isInteractive:completion:
_cancelTransition
_finishTransition
_fireDidBeginHandlerIfNeeded
_startObservingAnimatorProgress
interactiveGestureTracker
interactionView
setDisplayLink:
activeTransition
setActiveTransition:
gestureTracker
setPresentationController:
transitionDidBeginHandler
setTransitionDidBeginHandler:
easeInFunction
setEaseInFunction:
easeOutFunction
setEaseOutFunction:
touchGravity
setTouchGravity:
isAnimated
supportsMultipleScenes
addInteraction:
removeInteraction:
T@"AVSampleBufferDisplayLayerPlayerController",&,N,V_playerController
T@"AVPictureInPictureIndicatorLayer",&,N,V_placeholderLayer
T@"AVPictureInPictureSampleBufferDisplayLayerHostView",&,N,V_sbdlHostView
T@"CALayerHost",W,N,V_sourceLayerHost
TI,N,V_sourceContextId
T{CGSize=dd},N,V_lastKnownRenderSize
T@"AVSampleBufferDisplayLayer",R,N,V_sourceLayer
PIPModeEnabled
TB,N,GisPIPModeEnabled,V_PIPModeEnabled
_PIPModeEnabled
_sourceContextId
_sourceLayer
_placeholderLayer
_sbdlHostView
_sourceLayerHost
_lastKnownRenderSize
initWithSourceLayer:playerController:
_updateSourceLayerHost
setPIPModeEnabled:
setLastKnownRenderSize:
_updateGeometry
_makePictureInPicturePlatformAdapterContentPlaceholderLayer
sourceLayer
isPIPModeEnabled
placeholderLayer
setPlaceholderLayer:
sbdlHostView
setSbdlHostView:
sourceLayerHost
setSourceLayerHost:
sourceContextId
setSourceContextId:
lastKnownRenderSize
avkit_sbdlpip_findFirstCALayerHost
atMaxTime
TB,N,GisAtMaxTime,V_atMaxTime
atMinTime
TB,N,GisAtMinTime,V_atMinTime
playbackSuspended
TB,N,GisPlaybackSuspended,V_playbackSuspended
T@"AVAsset",&,N,V_currentAssetIfReady
T@"NSObject<OS_dispatch_queue>",&,N,V_assetInspectionQueue
T@"AVAsset",&,N,V_assetBeingPrepared
TB,N,GisPictureInPictureSupported,V_pictureInPictureSupported
readyToPlay
TB,R,N,GisReadyToPlay
T@"AVValueTiming",&,N,V_timing
T@"AVValueTiming",&,N,V_minTiming
T@"AVValueTiming",&,N,V_maxTiming
T@"AVAssetTrack",&,N,V_currentAudioTrack
T@"AVAssetTrack",&,N,V_currentVideoTrack
seekingInternal
TB,GisSeekingInternal,V_seekingInternal
T{?=qiIq},V_seekToTimeInternal
Td,N,V_seekToTime
T@"NSDictionary",&,N,V_metadata
T@"NSArray",&,N,V_contentChapters
composable
TB,N,GisComposable,V_composable
TB,N,V_hasProtectedContent
T@"NSArray",&,N,V_availableMetadataFormats
compatibleWithAirPlayVideo
TB,N,GisCompatibleWithAirPlayVideo,V_compatibleWithAirPlayVideo
Td,N,V_rateBeforeScrubBegan
T@"AVCoordinatedPlaybackSuspension",&,N,V_scrubCoordinatorSuspension
preventingIdleSystemSleep
TB,N,GisPreventingIdleSystemSleep,V_preventingIdleSystemSleep
preventingIdleDisplaySleep
TB,N,GisPreventingIdleDisplaySleep,V_preventingIdleDisplaySleep
disablingAutomaticTermination
TB,N,GisDisablingAutomaticTermination,V_disablingAutomaticTermination
TB,N,V_canTogglePictureInPicture
T@"NSString",C,N,V_pipActivitySessionIdentifier
TB,N,V_hasBegunInspection
playingOnMatchPointDevice
TB,N,GisPlayingOnMatchPointDevice,V_playingOnMatchPointDevice
T@"BSSimpleAssertion",&,N
T@"AVPlayerLayer",W,N,V_playerLayerForReducingResources
T@"NSObject<OS_dispatch_source>",R,N
T@"NSDate",R,N
T@"NSArray",R,N,V_visualMediaSelectionOptions
T@"AVMediaSelectionOption",&,N,V_currentVideoMediaSelectionOption
TB,N,V_coordinatedPlaybackActive
T@"NSError",R,N
_audioMediaSelectionOptions
_visualMediaSelectionOptions
_legibleMediaSelectionOptions
_cachedSelectedAudioMediaSelectionOption
_cachedSelectedLegibleMediaSelectionOption
_cachedSelectedLegibleMediaSelectionOptionAccordingToAVFoundation
_lastKnownPersistedExtendedLanguageTag
_observationInfo
_inspectionSuspended
_updateAtMinMaxTimePeriodicObserverToken
_timecodePeriodicObserverToken
_pictureInPictureInterrupted
_handlesAudioSessionInterruptions
_isDeallocating
_hasSetUpSeekableLiveStreamState
_rateToRestoreAfterAudioSessionInterruptionEnds
_retryPlayingImmediatelyBlock
_shouldPlayImmediately
_looping
_actionAtItemEnd
_seekQueue
_seekTimer
_timeOfLastUpdate
_ignoreRateKeyValueChanges
_ignoreNextRateKeyValueChange
_pendingSeek
_isResumed
_toleranceBefore
_toleranceAfter
_isScanningForward
_isScanningBackward
_scanningCount
_preScanningRate
_liveStreamMinTiming
_liveStreamMaxTiming
_liveStreamEventModePossible
_canUseNetworkResourcesForLiveStreamingWhilePausedCount
_previousValueOfCanUseNetworkResourcesForLiveStreamingWhilePaused
_shouldPlayWhenLikelyToKeepUp
_forceScanning
_rateBeforeForceScanning
_reduceResourceUsageAssertion
_touchBarRequiresLinearPlayback
_timecodeController
_internalDelegate
_atMaxTime
_atMinTime
_playbackSuspended
_pictureInPictureSupported
_seekingInternal
_composable
_hasProtectedContent
_compatibleWithAirPlayVideo
_preventingIdleSystemSleep
_preventingIdleDisplaySleep
_disablingAutomaticTermination
_canTogglePictureInPicture
_hasBegunInspection
_playingOnMatchPointDevice
_coordinatedPlaybackActive
_currentAssetIfReady
_assetInspectionQueue
_assetBeingPrepared
_minTiming
_maxTiming
_currentAudioTrack
_currentVideoTrack
_seekToTime
_metadata
_contentChapters
_availableMetadataFormats
_rateBeforeScrubBegan
_scrubCoordinatorSuspension
_pipActivitySessionIdentifier
_playerLayerForReducingResources
_currentVideoMediaSelectionOption
_seekToTimeInternal
initWithPlayer:
startInspectionIfNeeded
startKVO
observationInfo
setObservationInfo:
_queuePlayer
isReadyToPlay
error
isCompletelySeekable
_observeValueForKeyPath:oldValue:newValue:
_retryPlayImmediatelyIfNeeded
canPlayImmediately
seekTimer
_handleSeekTimerEvent
canPlay
autoplay:
canPause
pauseForAllCoordinatedPlaybackParticipants:
canTogglePlayback
touchBarRequiresLinearPlayback
setTouchBarRequiresLinearPlayback:
isLooping
setLooping:
updateAtMinMaxTime
beginPlaybackSuspension
endPlaybackSuspension
increaseVolume:
decreaseVolume:
changeVolumeToMinimum:
changeVolumeToMaximum:
setCoordinatedPlaybackActive:
isInspectionSuspended
setInspectionSuspended:
contentDuration
nominalFrameRate
reversePlaybackEndTime
setReversePlaybackEndTime:
forwardPlaybackEndTime
setForwardPlaybackEndTime:
_setMinTiming:maxTiming:
contentDurationWithinEndTimes
currentDate
currentOrEstimatedDate
seekableTimeRanges
hasEnabledAudio
hasVideo
hasContentChapters
isStreaming
hasTrimmableContent
hasShareableContent
_assetIsRestrictedFromSaving:
audioWaveform
_assetIsMarkedNotSerializable:
_assetContainsProResRaw:
_updateCoordinatedPlaybackActive
_updateCurrentAudioTrackIfNeeded
_updateCurrentVideoTrackIfNeeded
_updatePlayingOnMatchPointDeviceIfNeeded
currentEnabledAssetTrackForMediaType:
canSeek
seekToTime:
suspendPlaybackCoordinatorWhileActivelySeekingIfNecessary
resumePlaybackCoordinatorIfSuspended
seekToTime:toleranceBefore:toleranceAfter:
seekToCMTime:toleranceBefore:toleranceAfter:
throttledSeekToTime:toleranceBefore:toleranceAfter:
actuallySeekToTime
seekByTimeInterval:
seekByTimeInterval:toleranceBefore:toleranceAfter:
canScanForward
scanForward:
beginScanningForward:
_updateScanningForwardRate
endScanningForward:
canScanBackward
scanBackward:
beginScanningBackward:
_updateScanningBackwardRate
endScanningBackward:
canSeekToBeginning
seekToBeginning:
canSeekToEnd
seekToEnd:
canSeekFrameForward
seekFrameForward:
canSeekFrameBackward
seekFrameBackward:
seekOrStepByFrameCount:
skipBackwardThirtySeconds:
gotoEndOfSeekableRanges:
seekToChapter:
canSeekChapterForward
seekChapterForward:
canSeekChapterBackward
seekChapterBackward:
updateTiming
updateMinMaxTiming
_updateMinMaxTimingIfNeeded
allowsExternalPlayback
setAllowsExternalPlayback:
isPlayingOnExternalScreen
isExternalPlaybackActive
externalPlaybackType
externalPlaybackAirPlayDeviceLocalizedName
isPictureInPictureInterrupted
setPictureInPictureInterrupted:
togglePictureInPicture:
acquireResourceReductionAssertion
setReduceResourceUsageAssertion:
reduceResourceUsageAssertion
isReducingResourcesForPictureInPicture
startUsingNetworkResourcesForLiveStreamingWhilePaused
stopUsingNetworkResourcesForLiveStreamingWhilePaused
canUseNetworkResourcesForLiveStreamingWhilePaused
setCanUseNetworkResourcesForLiveStreamingWhilePaused:
_cancelPendingSeeksIfNeeded
_updateRateForScrubbingAndSeeking
scanningDelays
_prepareAssetForInspectionIfNeeded
isAtMaxTime
setAtMaxTime:
isAtMinTime
setAtMinTime:
isPlaybackSuspended
setPlaybackSuspended:
currentAssetIfReady
setCurrentAssetIfReady:
assetInspectionQueue
setAssetInspectionQueue:
assetBeingPrepared
setAssetBeingPrepared:
setPictureInPictureSupported:
timing
setTiming:
minTiming
setMinTiming:
maxTiming
setMaxTiming:
currentAudioTrack
setCurrentAudioTrack:
currentVideoTrack
setCurrentVideoTrack:
isSeekingInternal
setSeekingInternal:
seekToTimeInternal
setSeekToTimeInternal:
seekToTime
setSeekToTime:
metadata
setMetadata:
contentChapters
setContentChapters:
isComposable
setComposable:
hasProtectedContent
setHasProtectedContent:
availableMetadataFormats
setAvailableMetadataFormats:
isCompatibleWithAirPlayVideo
setCompatibleWithAirPlayVideo:
rateBeforeScrubBegan
setRateBeforeScrubBegan:
scrubCoordinatorSuspension
setScrubCoordinatorSuspension:
isPreventingIdleSystemSleep
setPreventingIdleSystemSleep:
isPreventingIdleDisplaySleep
setPreventingIdleDisplaySleep:
isDisablingAutomaticTermination
setDisablingAutomaticTermination:
canTogglePictureInPicture
setCanTogglePictureInPicture:
pipActivitySessionIdentifier
setPipActivitySessionIdentifier:
hasBegunInspection
setHasBegunInspection:
isPlayingOnMatchPointDevice
setPlayingOnMatchPointDevice:
playerLayerForReducingResources
setPlayerLayerForReducingResources:
setCurrentVideoMediaSelectionOption:
coordinatedPlaybackActive
cancelPendingSeeks
associatedTracksOfType:
initWithIdentifier:forReason:invalidationBlock:
setPreferredForwardBufferDuration:
setPreferredPeakBitRate:
preferredForwardBufferDuration
preferredPeakBitRate
deviceName
supportsMultipleOutputDevices
outputContext
liveUpdateInterval
seekableTimeRangesLastModifiedTime
timebase
stepByCount:
canStepBackward
canStepForward
canPlayFastReverse
canPlayFastForward
endProposingNewTime:
beginSuspensionForReason:
_playbackCoordinatorWithoutTriggeringFullSetup
track
deviceSubType
otherParticipants
getBytes:length:
metadataItemsFromArray:withKey:keySpace:
metadataForFormat:
availableVideoDynamicRanges
currentEstimatedDate
setActionAtItemEnd:
actionAtItemEnd
pauseWithoutAffectingCoordinatedPlayback
isPlaybackLikelyToKeepUp
isPlaybackBufferEmpty
playImmediatelyAtRate:
setCachedIsPictureInPictureSupported:
isPiPAvailable
applicationState
sortUsingComparator:
chapterMetadataGroupsBestMatchingPreferredLanguages:
preferredLanguages
dictionaryWithDictionary:
commonMetadata
stopGeneratingTimecodes
contextID
internalDelegate
handlesAudioSessionInterruptions
cachedIsPictureInPictureSupported
keyPathsForValuesAffectingStatus
keyPathsForValuesAffectingReadyToPlay
keyPathsForValuesAffectingError
keyPathsForValuesAffectingCompletelySeekable
keyPathsForValuesAffectingCanPlay
keyPathsForValuesAffectingPlaying
keyPathsForValuesAffectingCanPause
keyPathsForValuesAffectingCanTogglePlayback
keyPathsForValuesAffectingVolume
keyPathsForValuesAffectingMuted
keyPathsForValuesAffectingHasContent
keyPathsForValuesAffectingContentDuration
keyPathsForValuesAffectingContentDimensions
keyPathsForValuesAffectingMinTime
keyPathsForValuesAffectingReversePlaybackEndTime
keyPathsForValuesAffectingMaxTime
keyPathsForValuesAffectingForwardPlaybackEndTime
keyPathsForValuesAffectingContentDurationWithinEndTimes
keyPathsForValuesAffectingSeekableTimeRanges
keyPathsForValuesAffectingLoadedTimeRanges
keyPathsForValuesAffectingHasEnabledAudio
keyPathsForValuesAffectingHasVideo
keyPathsForValuesAffectingHasEnabledVideo
keyPathsForValuesAffectingHasContentChapters
keyPathsForValuesAffectingStreaming
keyPathsForValuesAffectingHasLiveStreamingContent
keyPathsForValuesAffectingHasSeekableLiveStreamingContent
keyPathsForValuesAffectingHasTrimmableContent
keyPathsForValuesAffectingHasShareableContent
keyPathsForValuesAffectingTimeControlStatus
keyPathsForValuesAffectingCanSeek
keyPathsForValuesAffectingCanScanForward
keyPathsForValuesAffectingCanScanBackward
keyPathsForValuesAffectingCanSeekToBeginning
keyPathsForValuesAffectingCanSeekToEnd
keyPathsForValuesAffectingCanSeekFrameForward
keyPathsForValuesAffectingCanSeekFrameBackward
keyPathsForValuesAffectingCanSeekChapterForward
keyPathsForValuesAffectingCanSeekChapterBackward
keyPathsForValuesAffectingAllowsExternalPlayback
keyPathsForValuesAffectingPlayingOnExternalScreen
keyPathsForValuesAffectingExternalPlaybackActive
keyPathsForValuesAffectingExternalPlaybackType
keyPathsForValuesAffectingExternalPlaybackAirPlayDeviceLocalizedName
setRateWithForce:
usesExternalPlaybackWhileExternalScreenIsActive
setHandlesAudioSessionInterruptions:
keyPathsForValuesAffectingUsesExternalPlaybackWhileExternalScreenIsActive
keyPathsForValuesAffectingPreferredDisplayCriteria
keyPathsForValuesAffectingMaximumVideoResolution
hasTimecodes
loadTimecodeControllerIfNeeded
timecodeController
frameNumberForCurrentTime
hasReadableTimecodes
timecodeObservationInterval
startGeneratingTimecodesUsingBlock:
seekToTimecode:
seekToFrame:
timecodeForCurrentTime
maxTimecode
setInternalDelegate:
functionWithControlPoints::::
TB,R,N,GisPlayingOnMatchPointDevice
T@"AVTimecodeController",R,N
T@"<AVPlayerControllerDelegate>",W,N
removeAllFiltersFromView:
applyPrimaryGlyphTintToView:
applySecondaryGlyphTintToView:
applyGlyphTintColor:toView:
configureSlider:thumbView:loadedTrackView:
applyBaseTrackTintToView:
applyCompletedTrackTintToView:
applyLoadedTrackTintToView:
configureView:forTintEffectWithColor:filterType:
configureView:withBackgroundFillOfColor:opacity:filter:
secondaryMaterialOverlayView
secondaryGlyphTintColor
setBackgroundEffects:
effectCompositingColor:withMode:alpha:
layerWithTintColor:filterType:
imageForState:
titleForState:
_setTextColorFollowsTintColor:
T@"AVExternalPlaybackIndicatorView",R,N,V_externalPlaybackIndicatorView
T@"UIImageView",R,N,V_unsupportedContentIndicatorView
T@"UIImageView",R,N,V_audioOnlyIndicatorView
T@"AVExternalPlaybackIndicatorView",R,N
T@"UIImageView",R,N
T{UIEdgeInsets=dddd},N,V_videoContentInset
T@"NSMutableDictionary",R,N,V_targetVideoGravities
T@"NSString",C,N,V_automaticVideoGravity
T@"AVCABackdropLayerView",R,N,V_backdropLayerView
T@"NSString",C,N,V_externalPlaybackIndicatorTitle
T@"NSString",C,N,V_externalPlaybackIndicatorSubtitle
T@"AVScrollViewObserver",R,N,V_scrollingObserver
T@"<AVPlayerViewControllerContentViewDelegate>",W,N,V_delegate
T@"UIView<AVPlaybackContentContainer>",&,N,V_playbackContentContainerView
T@"NSNumber",R,N
inAWindowAndNotScrolling
TB,R,N,GisInAWindowAndNotScrolling
TB,R,N,GisScrolling
TB,R,N,GisScrollingQuickly
TB,N,V_shouldLoadPlaybackControlsHint
TB,N,V_canAutomaticallyZoomLetterboxVideos
T{UIEdgeInsets=dddd},N,V_edgeInsetsForLetterboxedContent
T@"UIView",&,N,V_interactiveContentOverlayView
T@"UIView",R,N,V_iAdPreRollView
T@"AVPlaybackControlsView",R,N,V_playbackControlsView
T@"AVTurboModePlaybackControlsPlaceholderView",R,W,N,V_turboModePlaybackControlsPlaceholderView
TB,N,V_styleSheetShouldUseCompactFullScreenItemSize
_shouldLoadPlaybackControlsHint
_canAutomaticallyZoomLetterboxVideos
_styleSheetShouldUseCompactFullScreenItemSize
_automaticVideoGravity
_externalPlaybackIndicatorView
_unsupportedContentIndicatorView
_audioOnlyIndicatorView
_iAdPreRollView
_playbackContentContainerView
_interactiveContentOverlayView
_targetVideoGravities
_backdropLayerView
_externalPlaybackIndicatorTitle
_externalPlaybackIndicatorSubtitle
_scrollingObserver
_edgeInsetsForLetterboxedContent
_videoContentInset
scrollViewObserverValuesDidChange:
initWithFrame:playbackContentContainerView:targetVideoGravities:
automaticVideoGravity
setAutomaticVideoGravity:
setStyleSheetShouldUseCompactFullScreenItemSize:
externalPlaybackIndicatorView
externalPlaybackIndicatorViewIfLoaded
unsupportedContentIndicatorView
unsupportedContentIndicatorViewIfLoaded
audioOnlyIndicatorView
audioOnlyIndicatorViewIfLoaded
iAdPreRollView
iAdPreRollViewIfLoaded
setInteractiveContentOverlayView:
setShouldLoadPlaybackControlsHint:
addPlaybackContentContainerViewIfNeeded
setPlaybackContentContainerView:
isViewDescendantOfPlaybackControlsSubview:
setShowsUnsupportedContentIndicator:
setShowsAudioOnlyIndicator:
setShowsExternalPlaybackIndicator:
setExternalPlaybackIndicatorTitle:subtitle:
setTargetVideoGravity:forLayoutClass:
layoutClass
loadPlaybackControlsViewIfNeeded
removeTurboModePlaybackControlsPlaceholderViewIfNeeded
isInAWindowAndNotScrolling
_isBeingTransitionedToOrFromFullScreen
_updateVideoGravityDuringLayoutSubviewsAndAssertThatIfYouBreakThisMethodYouOwnThisMethod
_updateVideoContentInsetForVideoGravity:
_applyVideoGravityIfNeeded:
_mediaTimingFunctionForCurrentAnimationCurve
_insertPlaybackControlsOrPlaceholderView:
_loadTurboOrFullPlaybackControlsIfNeeded
_loadTurboModePlaybackControlsPlaceholderViewIfNeeded
_updateStyleSheet
playbackContentContainerView
shouldLoadPlaybackControlsHint
canAutomaticallyZoomLetterboxVideos
setCanAutomaticallyZoomLetterboxVideos:
edgeInsetsForLetterboxedContent
setEdgeInsetsForLetterboxedContent:
styleSheetShouldUseCompactFullScreenItemSize
videoContentInset
setVideoContentInset:
targetVideoGravities
backdropLayerView
externalPlaybackIndicatorTitle
setExternalPlaybackIndicatorTitle:
externalPlaybackIndicatorSubtitle
setExternalPlaybackIndicatorSubtitle:
scrollingObserver
_currentAnimationCurve
removeAllAnimations
setAnimationTimingFunction:
setAnimationDuration:
_currentAnimationDuration
_isInAnimationBlock
_isInAnimationBlockWithAnimationsEnabled
numberWithUnsignedLong:
imageNamed:inBundle:
setAutomaticVideoGravity:completion:
remoteObjectProxy
resume
setRemoteObjectInterface:
interfaceWithProtocol:
initWithServiceName:
Td,N,V_trackingStartTime
TB,N,V_wasLongPressed
TB,N,V_wasForcePressTriggered
Td,N,V_horizontalTranslationOfLongPress
T@"NSNumber",&,N,V_previousHorizontalPositionOfLongPress
Td,N,V_force
Td,N,V_maximumForceSinceTrackingBegan
T@"AVUserInteractionObserverGestureRecognizer",&,N,V_userInteractionGestureRecognizer
T@"UIVisualEffectView",&,N,V_backgroundEffectView
T@"UIFont",&,N,V_activeFont
TB,N,V_treatsForcePressAsLongPress
Tq,N,V_tintEffectStyle
TB,N,V_usesBackgroundEffectViewForTextOnlyButtons
Td,N,V_forceThreshold
TB,N,V_multipleTouchesEndsTracking
T@"NSString",C,N,V_activeImageName
T@"NSString",C,N,V_imageName
T@"NSString",C,N,V_alternateImageName
Td,N,V_alternateImagePadding
Td,N,V_fullscreenAlternateImagePadding
TB,N,V_appliesTransformToImageViewWhenHighlighted
T@"UIFont",&,N,V_inlineFont
T@"UIFont",&,N,V_fullScreenFont
T@"UIFont",&,N,V_alternateFullScreenFont
Td,N,V_micaSnapshotAlpha
TB,N,V_disablesHighlightWhenLongPressed
TB,N,V_clampsHitRectInsetsWhenContainedInScrollableView
_accessibilityLabelOverride
_wasLongPressed
_treatsForcePressAsLongPress
_usesBackgroundEffectViewForTextOnlyButtons
_multipleTouchesEndsTracking
_appliesTransformToImageViewWhenHighlighted
_disablesHighlightWhenLongPressed
_clampsHitRectInsetsWhenContainedInScrollableView
_wasForcePressTriggered
_tintEffectStyle
_forceThreshold
_force
_maximumForceSinceTrackingBegan
_activeImageName
_imageName
_alternateImageName
_alternateImagePadding
_fullscreenAlternateImagePadding
_inlineFont
_fullScreenFont
_alternateFullScreenFont
_micaSnapshotAlpha
_horizontalTranslationOfLongPress
_previousHorizontalPositionOfLongPress
_userInteractionGestureRecognizer
_backgroundEffectView
_activeFont
setImageName:
setAlternateImageName:
setActiveImageName:
setWasLongPressed:
setForce:
setMultipleTouchesEndsTracking:
setUsesBackgroundEffectViewForTextOnlyButtons:
setTintEffectStyle:
setHighlighted:
setImage:forState:
setTitle:forState:
_preferredLayoutSize
_handleUserInteractionGestureRecognizer:
_resetTrackedState
_updateImageIfNeeded
_updateTintColorIfNeeded
_updateEdgeInsets
_updateBackgroundEffectViewIsHidden
_preferredImageName
_preferredFont
_imageViewAlpha
wasLongPressed
treatsForcePressAsLongPress
setTreatsForcePressAsLongPress:
tintEffectStyle
usesBackgroundEffectViewForTextOnlyButtons
forceThreshold
setForceThreshold:
force
maximumForceSinceTrackingBegan
setMaximumForceSinceTrackingBegan:
multipleTouchesEndsTracking
activeImageName
alternateImageName
alternateImagePadding
setAlternateImagePadding:
fullscreenAlternateImagePadding
setFullscreenAlternateImagePadding:
appliesTransformToImageViewWhenHighlighted
setAppliesTransformToImageViewWhenHighlighted:
inlineFont
setInlineFont:
fullScreenFont
setFullScreenFont:
alternateFullScreenFont
setAlternateFullScreenFont:
micaSnapshotAlpha
setMicaSnapshotAlpha:
disablesHighlightWhenLongPressed
setDisablesHighlightWhenLongPressed:
clampsHitRectInsetsWhenContainedInScrollableView
setClampsHitRectInsetsWhenContainedInScrollableView:
trackingStartTime
setTrackingStartTime:
wasForcePressTriggered
setWasForcePressTriggered:
horizontalTranslationOfLongPress
setHorizontalTranslationOfLongPress:
previousHorizontalPositionOfLongPress
setPreviousHorizontalPositionOfLongPress:
userInteractionGestureRecognizer
setUserInteractionGestureRecognizer:
backgroundEffectView
setBackgroundEffectView:
activeFont
setActiveFont:
numberOfTouches
isHighlighted
setEffect:
alwaysBounceHorizontal
alwaysBounceVertical
buttonWithAccessibilityIdentifier:
buttonWithAccessibilityIdentifier:accessibilityLabel:
setAdjustsImageWhenHighlighted:
_setVisualEffectViewEnabled:backgroundColor:
_dateFormatter
stringFromDate:
dateFromString:
internetDateFormatter
T@"NSString",C,N,V_uniqueIdentifier
TQ,N,V_displayPriority
T@"AVLayoutItemAttributes",W,V_displayPartnerAttributes
TB,N,V_hasFlexibleContentSize
TB,N,V_prefersSecondaryMaterialOverlay
TB,N,V_canOverflowToAuxiliaryMenu
TB,N,V_canOnlyAppearInControlOverflowMenu
TB,N,V_canSubstituteOtherAttributes
T{CGSize=dd},N,V_minimumSize
Td,N,V_trailingInterItemSpace
T@"NSString",C,N,V_accessibilityIdentifier
T@"AVLayoutItemAttributes",&,N,V_nextAttributesInLayoutOrder
T@"AVLayoutItemAttributes",W,N,V_nextAttributesInPriorityOrder
_hasFlexibleContentSize
_prefersSecondaryMaterialOverlay
_canOverflowToAuxiliaryMenu
_canOnlyAppearInControlOverflowMenu
_canSubstituteOtherAttributes
_displayPriority
_displayPartnerAttributes
_trailingInterItemSpace
_accessibilityIdentifier
_nextAttributesInLayoutOrder
_nextAttributesInPriorityOrder
_minimumSize
displayPriority
setDisplayPriority:
displayPartnerAttributes
setDisplayPartnerAttributes:
hasFlexibleContentSize
setHasFlexibleContentSize:
prefersSecondaryMaterialOverlay
setPrefersSecondaryMaterialOverlay:
canOverflowToAuxiliaryMenu
setCanOverflowToAuxiliaryMenu:
canOnlyAppearInControlOverflowMenu
setCanOnlyAppearInControlOverflowMenu:
canSubstituteOtherAttributes
setCanSubstituteOtherAttributes:
setMinimumSize:
trailingInterItemSpace
setTrailingInterItemSpace:
accessibilityIdentifier
setAccessibilityIdentifier:
nextAttributesInLayoutOrder
setNextAttributesInLayoutOrder:
nextAttributesInPriorityOrder
setNextAttributesInPriorityOrder:
setUniqueIdentifier:
appendFormat:
T@"AVLoadingButtonView",&,N,V_loadingButtonView
_loadingButtonView
loadingButtonView
setLoadingButtonView:
fontDescriptorWithSize:
fontWithName:size:
timeFontWithFont:
boldSystemFontOfSize:
italicSystemFontOfSize:
traitCollectionWithPreferredContentSizeCategory:
timeFontWithName:size:
timeFontOfSize:
boldTimeFontOfSize:
italicTimeFontOfSize:
monospacedTimeFontOfSize:
avkit_nonScalingFontWithTextStyle:weight:
T@?,C,N,V_linkFired
T@"CADisplayLink",&,N,V_displayLink
T@,W,N,V_observer
Td,N,V_startTime
_linkFired
startDisplayLinkUpdatesForObserver:framesPerSecond:usingBlock:
linkFired:
runningTime
linkFired
setLinkFired:
setStartTime:
addToRunLoop:forMode:
setPreferredFramesPerSecond:
displayLinkWithTarget:selector:
T@"NSMutableArray",&,N,V_flattenedArrangedSubviewsInLayoutOrder
T@"AVCustomStackLayout",&,N,V_currentStackLayout
layoutDirty
TB,N,GisLayoutDirty,V_layoutDirty
T@"AVCABackdropLayerView",&,N,V_backdropLayerView
T@"UIVisualEffectView",&,N,V_secondaryMaterialOverlayView
TB,N,V_stackLayoutNeedsUpdate
T@"UIView<AVLayoutViewItem>",&,N,V_targetViewForSecondaryMaterialOverlayView
T@"NSArray",R,C,N,V_arrangedSubviews
T{NSDirectionalEdgeInsets=dddd},N
TQ,N,V_shapeStyle
_layoutDirty
_stackLayoutNeedsUpdate
_arrangedSubviews
_shapeStyle
_flattenedArrangedSubviewsInLayoutOrder
_currentStackLayout
_secondaryMaterialOverlayView
_targetViewForSecondaryMaterialOverlayView
setNeedsLayout
setArrangedSubviews:
setShapeStyle:
setContentLayoutMargins:
contentLayoutMargins
hasVisibleArrangedSubview
_updateStackLayoutIfNeeded
_applyShapeStyle
_insertArrangedSubview:atIndex:
_removeArrangedSubview:
_includedItemsFromSubviews:inStackLayout:thatFitSize:
arrangedSubviews
shapeStyle
flattenedArrangedSubviewsInLayoutOrder
setFlattenedArrangedSubviewsInLayoutOrder:
currentStackLayout
setCurrentStackLayout:
isLayoutDirty
setLayoutDirty:
setBackdropLayerView:
setSecondaryMaterialOverlayView:
stackLayoutNeedsUpdate
setStackLayoutNeedsUpdate:
targetViewForSecondaryMaterialOverlayView
setTargetViewForSecondaryMaterialOverlayView:
_setCornerRadius:continuous:maskedCorners:
semanticContentAttribute
directionalLayoutMargins
setDirectionalLayoutMargins:
CGRectValue
T@"NSArray",R,N,V_defaultAudioControls
T@"NSArray",R,N,V_defaultDisplayModeControls
Td,N,V_keyboardHeight
T@"UIViewPropertyAnimator",R,N,V_keyboardUIAvoidanceAnimator
TB,N,V_needsIntialLayout
T@"UIViewPropertyAnimator",&,N,V_playbackControlsVisibilityAnimator
T@"NSUUID",&,N,V_mostRecentAnimationCompletionsID
topAreaLayoutGuideExpanded
TB,N,GisTopAreaLayoutGuideExpanded,V_topAreaLayoutGuideExpanded
TB,N,V_prefersDoneButtonIncluded
TB,N,V_prefersVideoGravityButtonIncluded
TB,N,V_prefersFullScreenButtonIncluded
TB,N,V_prefersPiPButtonIncluded
Tq,R,N,V_includedContainers
T@"AVTouchIgnoringView",R,N,V_volumeControlsContainer
T@"AVTouchIgnoringView",R,N,V_playbackControlsContainer
T@"AVLayoutView",R,N,V_screenModeControls
T@"AVLayoutView",R,N,V_volumeControls
T@"AVLayoutView",R,N,V_prominentPlayButtonContainerView
T@"AVView",R,N,V_transportControlsContainerView
T@"AVButton",R,N,V_doneButton
T@"AVButton",R,N,V_fullScreenButton
T@"AVButton",R,N,V_videoGravityButton
T@"AVButton",R,N,V_pictureInPictureButton
T@"NSArray",R,C,N,V_customDisplayModeItems
T@"NSArray",R,C,N,V_customAudioItems
T@"AVButton",R,N,V_prominentPlayButton
T@"AVTransportControlsView",R,N,V_transportControlsView
T@"NSArray",R,C,N,V_customMediaItems
T@"NSArray",R,C,N,V_customControlItems
T@"AVPlayerViewControllerCustomControlsView",&,N,V_customControlsView
TB,N,V_prefersVolumeSliderExpandedAutomatically
T@"<AVPlaybackControlsViewVisibilityDelegate>",W,N,V_visibilityDelegate
TB,N,V_showsAudioControls
_customControlsViewLayoutGuideConstraints
_showsAudioControls
_needsIntialLayout
_topAreaLayoutGuideExpanded
_prefersDoneButtonIncluded
_prefersVideoGravityButtonIncluded
_prefersFullScreenButtonIncluded
_prefersPiPButtonIncluded
_includedContainers
_volumeControlsContainer
_playbackControlsContainer
_screenModeControls
_volumeControls
_prominentPlayButtonContainerView
_transportControlsContainerView
_fullScreenButton
_videoGravityButton
_pictureInPictureButton
_customDisplayModeItems
_customAudioItems
_transportControlsView
_customMediaItems
_visibilityDelegate
_defaultAudioControls
_defaultDisplayModeControls
_keyboardHeight
_keyboardUIAvoidanceAnimator
_playbackControlsVisibilityAnimator
_mostRecentAnimationCompletionsID
setupInitialLayout
setCustomControlsView:
_setUpCustomControlsViewConstraintsIfNeeded
setIncludedContainers:animations:
includesAudioControlsContainer
includesCustomAudioControls
includesTransportControls
includesDisplayModeControlsContainer
includesCustomDisplayModeControls
setCustomControlItems:animations:
animateAlongsideVisibilityAnimationsWithAnimationCoordinator:appearingViews:disappearingViews:
hasVisibleSubview
updateLayoutForChangedControlsVisibility
setShowsAudioControls:
setPrefersVolumeSliderExpanded:prefersVolumeButtonIncluded:animated:
safeAreaInsetsDidChange
_showPlaybackControlsAnimated:
_updateTransportControlsFrame
_updateVolumeControlsWithSize:
_preferredArrangedAudioModeViews
_preferredArrangedDisplayModeViews
_currentArrangedAudioModeViews
_currentArrangedDisplayModeViews
_audioViewsToRemoveDuringAnimation
_displayModeViewsToRemoveDuringAnimation
_collapse:views:
_collapse:view:
updateDisplayControlsVisibilityIncludedButtons:
_updatePlaybackControlsContainerVisibilityAnimated:additionalActions:
reevaluateHiddenStateForContainersAndSubviews
_updateAreVolumeAndTransportControlsVisible
_updateDoubleRowLayoutEnabled
_setupInitialLayout
_updateLayoutMargins
_animateKeyboardAvoidance:duration:
_playbackControlsViewItems
_playbackControlsViewsForControlItems:withType:
_customControlsViewIfLoaded
includedContainers
volumeControlsContainer
playbackControlsContainer
screenModeControls
volumeControls
prominentPlayButtonContainerView
transportControlsContainerView
fullScreenButton
videoGravityButton
pictureInPictureButton
customDisplayModeItems
customAudioItems
transportControlsView
customMediaItems
prefersVolumeSliderExpandedAutomatically
setPrefersVolumeSliderExpandedAutomatically:
visibilityDelegate
setVisibilityDelegate:
showsAudioControls
defaultAudioControls
defaultDisplayModeControls
keyboardHeight
setKeyboardHeight:
keyboardUIAvoidanceAnimator
needsIntialLayout
setNeedsIntialLayout:
playbackControlsVisibilityAnimator
setPlaybackControlsVisibilityAnimator:
mostRecentAnimationCompletionsID
setMostRecentAnimationCompletionsID:
isTopAreaLayoutGuideExpanded
setTopAreaLayoutGuideExpanded:
prefersDoneButtonIncluded
setPrefersDoneButtonIncluded:
prefersVideoGravityButtonIncluded
setPrefersVideoGravityButtonIncluded:
prefersFullScreenButtonIncluded
setPrefersFullScreenButtonIncluded:
prefersPiPButtonIncluded
setPrefersPiPButtonIncluded:
layoutMargins
updateConstraintsIfNeeded
setCompletionBlock:
minusOrderedSet:
orderedSetWithArray:
initWithArray:
setPriority:
deactivateConstraints:
longValue
Tq,R,N,V_status
T@"NSString",R,N,V_localizedDescription
_localizedDescription
initWithStatus:localizedDescription:
headersForContentLength:compression:
bodyData
localizedDescription
messageWithVersion:headers:bodyData:
responseWithParts:
bundle
bundleForClass:
localizedStringForKey:value:table:
T@"AVPictureInPictureIndicatorLayer",&,N,V_pipIndicatorLayer
T@"NSString",C,N,V_customMessage
_customMessage
_pipIndicatorLayer
layoutSublayersOfLayer:
setCustomMessage:
_addIndicatorLayerIfNeeded
customMessage
pipIndicatorLayer
setPipIndicatorLayer:
addAnimation:forKey:
T@"NSLayoutXAxisAnchor",R,N
T@"NSLayoutYAxisAnchor",R,N
T@"NSLayoutDimension",R,N
avkit_constraintsFromCenterAnchorsToCenterAnchorsOfItem:
avkit_constraintsFromEdgeAnchorsToEdgeAnchorsOfItem:
avkit_constraintsFromCenterAndDimensionAnchorsToCenterAndDimensionAnchorsOfItem:
avkit_constraintsFromDimensionAnchorsToSize:
leadingAnchor
trailingAnchor
leftAnchor
rightAnchor
topAnchor
bottomAnchor
widthAnchor
heightAnchor
centerXAnchor
centerYAnchor
avkit_constraintEqualToAnchor:priority:
constraintGreaterThanOrEqualToAnchor:
constraintLessThanOrEqualToAnchor:
avkit_constraintGreaterThanOrEqualToAnchor:priority:
avkit_constraintLessThanOrEqualToAnchor:priority:
avkit_constraintEqualToAnchor:constant:priority:
avkit_constraintGreaterThanOrEqualToAnchor:constant:priority:
avkit_constraintLessThanOrEqualToAnchor:constant:priority:
constraintGreaterThanOrEqualToConstant:
constraintLessThanOrEqualToConstant:
avkit_constraintEqualToConstant:priority:
avkit_constraintGreaterThanOrEqualToConstant:priority:
avkit_constraintLessThanOrEqualToConstant:priority:
avkit_constraintsFromEdgesOfItem:toLeadingAnchor:topAnchor:trailingAnchor:bottomAnchor:priority:
avkit_constraintsFromEdgesOfItem:toEdgesOfItem:
avkit_constraintsFromLeadingAndTrailingEdgesOfItem:toEdgesOfItem:
avkit_constraintsFromTopAndBottomEdgesOfItem:toEdgesOfItem:
constraintEqualToConstant:
T@"AVLayoutItemAttributes",R,N,V_firstAttributesInLayoutOrder
T@"AVLayoutItemAttributes",R,W,N,V_firstAttributesInPriorityOrder
_firstAttributesInLayoutOrder
_firstAttributesInPriorityOrder
initWithFirstAttributesInLayoutOrder:firstAttributesInPriorityOrder:
firstAttributesInLayoutOrder
firstAttributesInPriorityOrder
pictureInPictureControllerShouldProhibitBackgroundAudioPlayback:
pictureInPictureController:setPlaying:
pictureInPictureControllerTimeRangeForPlayback:
pictureInPictureControllerIsPlaybackPaused:
pictureInPictureController:didTransitionToRenderSize:
pictureInPictureController:skipByInterval:completionHandler:
playbackDelegateAdapterWithDelegate:
alloc
T@"<AVPictureInPictureSampleBufferPlaybackDelegate>",R,W,N,V_playbackDelegate
_playbackDelegate
playbackDelegate
pictureInPictureControllerPlaybackPaused:
pictureInPictureControllerPlaybackTimeRange:
pictureInPictureControllerStopPlayback:
pictureInPictureControllerStartPlayback:
T@"AVPictureInPicturePlaybackState",C,N,V_playbackState
T@"AVObservationController",&,N,V_sbdlObservationController
pictureInPictureAvailable
TB,N,GisPictureInPictureAvailable,V_pictureInPictureAvailable
TB,N,GisPaused,V_paused
T{?={?=qiIq}{?=qiIq}},N,V_contentTimeRange
T@"AVSampleBufferDisplayLayerPlaybackDelegateAdapter",&,N,V_playbackDelegateAdapter
T@"<AVPictureInPictureSampleBufferPlaybackDelegate>",W,N,V_playbackDelegate
T{CGSize=dd},N,V_enqueuedBufferDimensions
_pictureInPictureAvailable
_playbackState
_sbdlObservationController
_playbackDelegateAdapter
_enqueuedBufferDimensions
_contentTimeRange
_effectiveRate
_currentSBDLTime
setPlaybackDelegate:
setPlaybackState:
setEnqueuedBufferDimensions:
_updateBackgroundAudioPlaybackPolicy
isPictureInPictureAvailable
setPictureInPictureAvailable:
enqueuedBufferDimensions
playbackState
sbdlObservationController
setSbdlObservationController:
setPaused:
contentTimeRange
setContentTimeRange:
playbackDelegateAdapter
setPlaybackDelegateAdapter:
sublayerTransform
affineTransform
keyPathsForValuesAffectingRate
avkit_sampleBufferDisplayLayerPlayerController
avkit_removePictureInPicturePlayerController
initWithCGImage:
T@"UIImage",R
avkit_title
shortLocalizedDisplayName
mediaRemoteIdentifier
avkit_offOption
avkit_autoOption
localizedDisplayName
T@"AVMediaSelectionOption",R
v20@0:8B16
@40@0:8{CGPoint=dd}16@32
B16@0:8
@"NSString"
@"UIView"
@"AVPlayer"
@"<AVPlayerViewControllerDelegate>"
@"AVPlayerViewController"
@"AVButton"
@"AVLayoutView"
@"AVStyleSheet"
@"AVAppStorePlayerLayerView"
@"NSMutableDictionary"
@"AVObservationController"
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v16@0:8
v24@0:8@16
v24@0:8q16
v32@0:8@16Q24
v24@0:8@?16
v24@0:8d16
@16@0:8
@?16@0:8
q16@0:8
#16@0:8
@"<AVContentOverlayViewDelegate>"
B24@0:8Q16
v28@0:8q16B24
@"_AVSimplePlayerLayerView"
@"<AVPictureInPicturePlatformAdapterDelegate>"
@"AVPlayerController"
@"AVPictureInPicturePrerollAttributes"
@"AVPictureInPictureViewController"
@"PGPictureInPictureProxy"
@"NSTimer"
@"AVSecondScreenConnection"
@"UIWindow"
@"<AVPictureInPictureContentSource>"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
B24@0:8@16
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
q24@0:8@"PGPictureInPictureProxy"16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@"PGPictureInPictureProxy"16
@"UIWindow"24@0:8@"PGPictureInPictureProxy"16
v32@0:8@"PGPictureInPictureProxy"16q24
v40@0:8@"PGPictureInPictureProxy"16q24@"NSError"32
v32@0:8@"PGPictureInPictureProxy"16@?<v@?B>24
v24@0:8@"PGPictureInPictureProxy"16
v40@0:8@"PGPictureInPictureProxy"16q24q32
v32@0:8@"PGPictureInPictureProxy"16@"PGCommand"24
v28@0:8@"PGPictureInPictureProxy"16B24
v40@0:8@"PGPictureInPictureProxy"16Q24Q32
B24@0:8@"PGCommand"16
q24@0:8@16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16
@24@0:8@16
v32@0:8@16q24
v40@0:8@16q24@32
v32@0:8@16@?24
v40@0:8@16q24q32
v32@0:8@16@24
v28@0:8@16B24
v40@0:8@16Q24Q32
v24@0:8@"AVPictureInPictureViewController"16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
d16@0:8
@"PGPlaybackStatePrerollAttributes"
{?="value"q"timescale"i"flags"I"epoch"q}
@48@0:8@16{?=qiIq}24
{?=qiIq}16@0:8
@48@0:8{?=qiIq}16@40
@"AVPictureInPicturePlayerLayerView"
@"AVPlayerLayer"
{CGSize=dd}16@0:8
@"UISelectionFeedbackGenerator"
@"NSMutableArray"
@"AVLayoutItemAttributes"
@"<AVScrubberDelegate>"
@"NSArray"
@"UIScrollView"
@"UIImageView"
{CGSize="width"d"height"d}
{NSDirectionalEdgeInsets="top"d"leading"d"bottom"d"trailing"d}
v32@0:8{CGSize=dd}16
@"AVLayoutItemAttributes"16@0:8
B32@0:8{CGPoint=dd}16
v24@0:8@"UIScrollView"16
v48@0:8@"UIScrollView"16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@"UIScrollView"16B24
@"UIView"24@0:8@"UIScrollView"16
v32@0:8@"UIScrollView"16@"UIView"24
v40@0:8@"UIScrollView"16@"UIView"24d32
B24@0:8@"UIScrollView"16
v48@0:8@16{CGPoint=dd}24N^{CGPoint=dd}40
v40@0:8@16@24d32
f16@0:8
v20@0:8f16
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGRect={CGPoint=dd}{CGSize=dd}}84@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGRect={CGPoint=dd}{CGSize=dd}}48f80
B32@0:8@16@24
{UIEdgeInsets=dddd}16@0:8
B40@0:8{CGPoint=dd}16@32
{CGPoint=dd}16@0:8
{NSDirectionalEdgeInsets=dddd}16@0:8
v48@0:8{NSDirectionalEdgeInsets=dddd}16
@"<AVAirMessageNotificationCenterDelegate>"
@"AVBonjourService"
@"AVPlayerItem"
@"NSObject<OS_dispatch_queue>"
@"NSMutableSet"
v32@0:8@"AVAirTransport"16@"<AVAirTransportReverseTransformationResultProtocol>"24
v24@0:8@"AVAirTransport"16
v32@0:8@"AVBonjourService"16@"AVAirTransport"24
@"NSDictionary"24@0:8@"AVBonjourService"16
^{CGImage=}
@24@0:8^{_NSZone=}16
@56@0:8d16d24Q32@40@?48
^{CGImage=}16@0:8
v24@0:8^{CGImage=}16
@32@0:8d16@24
v36@0:8@16@24B32
q40@0:8@16@24@32
@"UIView<AVScrollViewObserverContentView>"
@"NSHashTable"
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16d48
v24@0:8f16B20
@"AVNewsWidgetPlayerBehaviorContext"
v24@0:8@"<AVBehaviorContext>"16
@24@0:8q16
@"AVPictureInPictureCALayerHostView"
I16@0:8
v20@0:8I16
v80@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGSize=dd}48{CGSize=dd}64
@"UIMenu"
@"<AVMediaSelectionMenuDelegate>"
@32@0:8@16@24
v24@0:8Q16
@32@0:8@16:24
@"AVHomeIPCameraBehaviorContext"
@"AVPlayerController"24@0:8@"AVPlayerController"16
@"AVPictureInPictureViewController"16@0:8
v32@0:8@"AVPictureInPictureViewController"16@"AVPlayerController"24
@"UIWindow"16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
@"AVPlaybackRateCollection"
@"AVPlaybackRate"
@"UIPanGestureRecognizer"
@"<AVTransitionDriverDelegate>"
@"UIPinchGestureRecognizer"
@"UIRotationGestureRecognizer"
{CGPoint="x"d"y"d}
B32@0:8@"<AVTransitionDriver>"16@"UIGestureRecognizer"24
@"<AVTransitionDriverDelegate>"16@0:8
v24@0:8@"<AVTransitionDriverDelegate>"16
@"UIPanGestureRecognizer"16@0:8
v24@0:8@"UIPanGestureRecognizer"16
v24@0:8@"UIView"16
@"UIView"16@0:8
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
B32@0:8@"UIGestureRecognizer"16@"UIEvent"24
v32@0:8{CGPoint=dd}16
@"NSMutableOrderedSet"
@24@0:8@?16
@"AVPresentationConfiguration"
@"<UIViewControllerContextTransitioning>"
@"AVFullScreenViewController"
@"AVPresentationContextTransition"
@"AVPresentationController"
@"<AVBonjourServiceClientDelegate>"
@"NSNetServiceBrowser"
v24@0:8@"NSNetService"16
v32@0:8@"NSNetService"16@"NSDictionary"24
v32@0:8@"NSNetService"16@"NSData"24
v40@0:8@"NSNetService"16@"NSInputStream"24@"NSOutputStream"32
v40@0:8@16@24@32
v24@0:8@"NSNetServiceBrowser"16
v32@0:8@"NSNetServiceBrowser"16@"NSDictionary"24
v36@0:8@"NSNetServiceBrowser"16@"NSString"24B32
v36@0:8@"NSNetServiceBrowser"16@"NSNetService"24B32
v24@0:8^v16
^v16@0:8
v32@0:8@16d24
I28@0:8I16@20
^v24@0:8@16
@"AVStatusBarBackgroundGradientViewSubview"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@48@0:8@16@24B32B36@?40
@44@0:8@16@24B32@?36
@40@0:8@16@24@?32
v48@0:8@16@24@32@?40
@48@0:8@16@24@32@40
@"NSSet"
@60@0:8@16@24@32B40B44B48@?52
v48@0:8@16@24@32^v40
v56@0:8@16@24@32@40^v48
@"AVMusicAppBehaviorContext"
@"AVMusicAppBehavior"
@"NSNumber"
@"AVPlayerViewController"16@0:8
v32@0:8@"AVPlayerViewController"16q24
v40@0:8{CGSize=dd}16@"<UIViewControllerTransitionCoordinator>"32
v24@0:8@"UIViewController"16
@"UIView<AVPlaybackContentContainer>"56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@"AVPlaybackContentContainerView"48
v40@0:8{CGSize=dd}16@32
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
v24@0:8@"<AVBehavior>"16
@40@0:8@16{CGSize=dd}24
@"UIWindowScene"
@"UIScreen"
@"CADisplay"
@"NSInputStream"
@"NSOutputStream"
v32@0:8@"NSStream"16Q24
@24@0:8Q16
@"NSData"
@"<AVAirTransportTransformationProtocol>"
@"<AVAirTransportDelegate>"
@"<AVAirMessageDispatcherClientDelegate>"
@"NSNetService"
@"AVAirTransport"
@"AVBonjourServiceClient"
v32@0:8@"NSNetService"16@"AVAirTransport"24
@"AVVideoCallPlayerController"
@"AVPictureInPictureController"
@"AVPictureInPictureControllerContentSource"
v52@0:8B16{CGRect={CGPoint=dd}{CGSize=dd}}20
v28@0:8B16@?20
@"AVSeymourBehaviorContext"
@"UIActivityIndicatorView"
@"UIWindowScene"16@0:8
@"AVSystemController"
v32@0:8@"NSString"16@"NSString"24
v28@0:8B16@20
@"AVZoomingBehaviorContext"
@"NSLayoutConstraint"
@"UILayoutGuide"
@44@0:8d16d24d32B40
{CGRect={CGPoint=dd}{CGSize=dd}}40@0:8{CGPoint=dd}16d32
B24@0:8@?16
v56@0:8{CGPoint=dd}16@32N^@40N^d48
@"UIFont"
@"UITraitCollection"
@28@0:8@16B24
{UIEdgeInsets=dddd}36@0:8@16d24B32
@"AVEditBehaviorContext"
@"<AVEditBehaviorDelegate>"
@"NSDictionary"
@"UIPopoverPresentationController"
@"AVTransitionController"
@"AVPlaybackControlsController"
@"AVPlayerView"
@"AVPlayerViewControllerContentView"
@"NSValue"
{CGAffineTransform="a"d"b"d"c"d"d"d"tx"d"ty"d}
@"AVPlayerViewControllerCustomControlsView"
@"AVContentOverlayView"
@"AVBehaviorStorage"
@"UIHoverGestureRecognizer"
@"AVPlayerControllerVolumeAnimator"
@"__AVPlayerLayerView"
v24@0:8@"AVPlaybackControlsView"16
v48@0:8@"AVPlaybackControlsView"16@"<AVPlayerViewControllerAnimationCoordinator>"24@"NSArray"32@"NSArray"40
v48@0:8@16@24@32@40
B24@0:8@"AVPlayerController"16
v32@0:8@"AVPlaybackRateCollection"16@"AVPlaybackRate"24
v24@0:8@"AVContentOverlayView"16
@"AVPresentationConfiguration"40@0:8@"AVTransitionController"16@"UIViewController"24@"UIViewController"32
v32@0:8@"AVTransitionController"16@"UIViewController"24
@"UIView"32@0:8@"AVTransitionController"16@"UIViewController"24
B40@0:8@"AVTransitionController"16@"UIGestureRecognizer"24@"UITouch"32
@"UIColor"24@0:8@"AVTransitionController"16
B24@0:8@"AVTransitionController"16
v24@0:8@"AVTransitionController"16
v32@0:8@"AVTransitionController"16@?<v@?>24
v36@0:8@"AVTransitionController"16B24@?<v@?>28
v28@0:8@"AVTransitionController"16f24
@40@0:8@16@24@32
B40@0:8@16@24@32
v36@0:8@16B24@?28
v28@0:8@16f24
v24@0:8@"AVFullScreenViewController"16
@"UIView"24@0:8@"AVFullScreenViewController"16
v48@0:8@"AVFullScreenViewController"16{CGSize=dd}24@"<UIViewControllerTransitionCoordinator>"40
B24@0:8@"AVFullScreenViewController"16
q24@0:8@"AVFullScreenViewController"16
@"UIResponder"24@0:8@"AVFullScreenViewController"16
v48@0:8@16{CGSize=dd}24@40
v24@0:8@"UIPopoverPresentationController"16
B24@0:8@"UIPopoverPresentationController"16
v40@0:8@"UIPopoverPresentationController"16N^{CGRect={CGPoint=dd}{CGSize=dd}}24N^@32
v40@0:8@16N^{CGRect={CGPoint=dd}{CGSize=dd}}24N^@32
q24@0:8@"UIPresentationController"16
q32@0:8@"UIPresentationController"16@"UITraitCollection"24
v32@0:8@"UIPresentationController"16@"UIPresentationController"24
@"UIViewController"32@0:8@"UIPresentationController"16q24
v40@0:8@"UIPresentationController"16q24@"<UIViewControllerTransitionCoordinator>"32
B24@0:8@"UIPresentationController"16
v24@0:8@"UIPresentationController"16
q32@0:8@16@24
@32@0:8@16q24
v24@0:8@"AVPictureInPictureController"16
v32@0:8@"AVPictureInPictureController"16@"NSError"24
v32@0:8@"AVPictureInPictureController"16@?<v@?B>24
d24@0:8d16
v36@0:8q16B24@?28
v32@0:8B16B20@?24
v32@0:8Q16@24
{CGAffineTransform=dddddd}16@0:8
v64@0:8{CGAffineTransform=dddddd}16
@"AVEditBehavior"
@"AVEditBehaviorParameters"
@"AVZoomingBehavior"
@"AVEditView"
@"AVAssetImageGenerator"
@"UIToolbar"
@"UIBarButtonItem"
v24@0:8@"AVEditView"16
v32@0:8@"AVEditView"16d24
d24@0:8@"AVEditView"16
v32@0:8@"AVEditView"16@"NSNumber"24
d24@0:8@16
@"UIViewController<AVFullScreenViewControllerDelegate>"
@"<AVControlOverflowButtonDelegate>"
@40@0:8@16{CGPoint=dd}24
@40@0:8d16@24@32
@48@0:8d16@24@32@40
@28@0:8I16@20
@36@0:8I16@20@28
@32@0:8Q16@24
@28@0:8B16@20
@"<AVPictureInPictureViewControllerDelegate>"
@"UILabel"
@"UIStackView"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
{?=dd}16@0:8
@40@0:8d16d24d32
@"UIScene"
@"AVSecondScreenViewController"
@"AVPresentationContext"
@"AVHomeIPCameraBehavior"
@"AVHomeIPCameraPlayerController"
v32@0:8d16d24
{NSEdgeInsets="top"d"left"d"bottom"d"right"d}
v48@0:8{NSEdgeInsets=dddd}16
{NSEdgeInsets=dddd}16@0:8
@"AVVolumeButtonControl"
@"AVVolumeSlider"
@"<AVVolumeControlsControllerDelegate>"
@"<AVVolumeControlsControllerLayoutDelegate>"
@"AVVolumeControlsContentView"
@"AVPlaybackContentContainerView"
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@"AVPlaybackContentContainerView"48
@"AVPlaybackContentContainerView"16@0:8
{CGSize=dd}48@0:8@16d24{CGSize=dd}32
{CGSize=dd}24@0:8d16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8d16
@24@0:8#16
@"NSData"24@0:8@"<AVMessageTransformerProtocol>"16
@"AVAirMessageParts<AVAirTransportReverseTransformationResultProtocol>"24@0:8@"NSData"16
@"<AVEditViewDataSource>"
@"<AVEditViewDelegate>"
@"UIMovieScrubber"
v32@0:8@"UIMovieScrubber"16d24
v28@0:8@"UIMovieScrubber"16i24
v32@0:8@"UIMovieScrubber"16f24f28
v24@0:8@"UIMovieScrubber"16
v40@0:8@"UIMovieScrubber"16d24d32
v28@0:8@16i24
v32@0:8@16f24f28
v40@0:8@16d24d32
d24@0:8@"UIMovieScrubber"16
@"NSArray"44@0:8@"UIMovieScrubber"16i24@"NSNumber"28@"NSNumber"36
v32@0:8@"UIMovieScrubber"16@"NSNumber"24
v36@0:8@"UIMovieScrubber"16@"NSNumber"24B32
@44@0:8@16i24@28@36
v32@0:8^{CGImage=}16@24
@"NSDictionary"16@0:8
@24@0:8@"NSDictionary"16
@"NSArray"24@0:8@"NSArray"16
@"<AVPlaybackContentTransitioningViewDelegate>"
B32@0:8q16q24
@"AVMediaSelectionOption"
q32@0:8@16q24
v40@0:8@16@24q32
@"AVMediaSelectionTableViewController"
@40@0:8@16@24:32
@"AVSampleBufferDisplayLayer"
@"<AVPictureInPictureSampleBufferPlaybackDelegate>"
@"<AVPictureInPictureControllerDelegate>"
@"AVPictureInPicturePlatformAdapter"
@"<AVPictureInPicturePrerollDelegate>"
v32@0:8@"AVPictureInPicturePlatformAdapter"16@"NSError"24
v32@0:8@"AVPictureInPicturePlatformAdapter"16@?<v@?B>24
v24@0:8@"AVPictureInPicturePlatformAdapter"16
v28@0:8@"AVPictureInPicturePlatformAdapter"16B24
v32@0:8@"AVPictureInPicturePlatformAdapter"16q24
v40@0:8@"AVPictureInPicturePlatformAdapter"16q24q32
@48@0:8@16{CGSize=dd}24@40
{?=qiIq}48@0:8q16{?=qiIq}24
B20@0:8f16
@"UIImage"
@"UIColor"
@"NSAttributedString"
@"NSDate"
@32@0:8d16d24
@64@0:8{?={?=qiIq}{?=qiIq}}16
v32@0:8d16@24
@24@0:8d16
{?={?=qiIq}{?=qiIq}}16@0:8
B24@0:8d16
@28@0:8d16B24
@"MPMediaControls"
{CVSMPTETime="subframes"s"subframeDivisor"s"counter"I"type"I"flags"I"hours"s"minutes"s"seconds"s"frames"s}
{CVSMPTETime=ssIIIssss}16@0:8
v40@0:8{CVSMPTETime=ssIIIssss}16
v40@0:8{?=qiIq}16
@"AVAssetTrack"
q40@0:8{?=qiIq}16
@32@0:8^{opaqueCMFormatDescription=}16q24
{CVSMPTETime=ssIIIssss}24@0:8q16
{CVSMPTETime=ssIIIssss}40@0:8q16q24@32
q24@0:8d16
d24@0:8q16
v24@0:8^{opaqueCMSampleBuffer=}16
B40@0:8{?=qiIq}16
v36@0:8B16@20@28
@"<AVPlaybackRateCollectionDelegate>"
@"AVCABackdropLayerView"
@"UIButton"
@"UIViewPropertyAnimator"
@"AVOutputContext"
@"AVMicaPackage"
@"<AVRoutePickerViewDelegate>"
v28@0:8d16B24
Q24@0:8@"AVRoutePickerView"16
@"NSString"24@0:8@"AVRoutePickerView"16
Q24@0:8@16
v24@0:8@"AVRoutePickerView"16
@"AVPictureInPictureIndicatorSublayer"
@68@0:8d16^{CGImage=}24B32{CGRect={CGPoint=dd}{CGSize=dd}}36
@"CATextLayer"
@"CALayer"
@36@0:8d16^{CGImage=}24B32
B48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"<AVTimeControlling>"
@"AVTimer"
v40@0:8{CGSize=dd}16Q32
@40@0:8@16@24d32
@"AVPlaybackContentZoomingView"
@"UITapGestureRecognizer"
@"AVNewsWidgetPlayerBehavior"
@"AVPlaybackContentTransitioningView"
B40@0:8@"AVPlaybackContentTransitioningView"16{CGPoint=dd}24
B32@0:8@"AVPlaybackContentTransitioningView"16q24
@"AVPlaybackContentContainerView"24@0:8@"AVPlaybackContentTransitioningView"16
v48@0:8@"AVPlaybackContentTransitioningView"16q24q32d40
B40@0:8@16{CGPoint=dd}24
B32@0:8@16q24
v48@0:8@16q24q32d40
q24@0:8q16
@"<AVPlayerViewControllerContentTransitioning_NewsOnly>"
@"<AVTransitionDelegate>"
@"<UIViewControllerContextTransitioningEx>"
v56@0:8d16d24{CGPoint=dd}32d48
{CGAffineTransform=dddddd}96@0:8d16{CGPoint=dd}24d40{CGPoint=dd}48{CGRect={CGPoint=dd}{CGSize=dd}}64
@32@0:8{CGSize=dd}16
v32@0:8d16Q24
d24@0:8Q16
@48@0:8@16@24{CGSize=dd}32
d48@0:8Q16@24{CGSize=dd}32
@36@0:8@16@24B32
v40@0:8@16@24@?32
@40@0:8@16@24q32
v64@0:8{CGSize=dd}16@32@40d48@?56
@56@0:8{CGSize=dd}16@32@40d48
@"CAStateController"
v32@0:8@"CAStateController"16@"CALayer"24
v36@0:8@"CAStateController"16@"CAStateTransition"24f32
v36@0:8@"CAStateController"16@"CAStateTransition"24B32
v36@0:8@16@24f32
@32@0:8@"CAMLParser"16@"NSURL"24
v40@0:8@"CAMLParser"16@24@"NSURL"32
#32@0:8@"CAMLParser"16@"NSString"24
v44@0:8@"CAMLParser"16@"NSString"24@"NSURL"32I40
@44@0:8@"CAMLParser"16@"NSString"24@"NSURL"32I40
v48@0:8@"CAMLParser"16r*24*32Q40
#32@0:8@16@24
v44@0:8@16@24@32I40
@44@0:8@16@24@32I40
v48@0:8@16r*24*32Q40
v32@0:8@16^{CGColor=}24
v32@0:8^{CGColor=}16@24
v40@0:8@16q24@?32
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8q16
v32@0:8@?<v@?>16@?<v@?B>24
v32@0:8@?16@?24
@"NSObject<OS_dispatch_source>"
@44@0:8d16@24@?32B40
@"AVSecondScreenDebugAssistant"
@"AVSecondScreen"
@"AVDisplayCriteria"
@"AVPresentationContainerViewAppearanceProxy"
{UIEdgeInsets=dddd}24@0:8q16
v36@0:8q16q24B32
@56@0:8@16@24q32@40@48
@64@0:8@16@24@32@40@48@56
v32@0:8#16@24
@"AVStatusBarBackgroundGradientView"
@64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48@56
@"<AVTransportControlsViewDelegate>"
@"AVScrubber"
@"AVLabel"
@"AVPlaybackControlsRoutePickerView"
@"AVControlOverflowButton"
@"AVTouchIgnoringView"
f24@0:8@"AVVolumeControlsContentView"16
f24@0:8@16
v24@0:8@"AVScrubber"16
@"NSMapTable"
v40@0:8:16@24@?32
@32@0:8Q16d24
v40@0:8d16q24q32
v32@0:8d16q24
B24@0:8q16
@"<AVHomeIPCameraActionButtonHandling>"
@"<AVVolumeController>"
@"AVNowPlayingInfoController"
@"AVSecondScreenContentViewConnection"
@"AVPlaybackControlsView"
@"AVTurboModePlaybackControlsPlaceholderView"
@"AVPlayerControllerTimeResolver"
@"AVTimeFormatter"
@"UIAlertController"
@"AVRouteDetectorCoordinator"
@"NSUUID"
@"AVMediaSelectionMenuController"
@"AVMobilePlaybackRateMenuController"
v32@0:8@"AVPlayerViewControllerContentView"16@"AVPlaybackControlsView"24
v32@0:8@"AVPlayerViewControllerContentView"16@"AVTurboModePlaybackControlsPlaceholderView"24
B24@0:8@"AVPlayerViewControllerContentView"16
v24@0:8@"AVPlayerViewControllerContentView"16
{UIEdgeInsets=dddd}24@0:8@"AVPlayerViewControllerContentView"16
@"NSNumber"24@0:8@"AVPlayerViewControllerContentView"16
{UIEdgeInsets=dddd}24@0:8@16
@"NSArray"24@0:8@"AVControlOverflowButton"16
v40@0:8@"AVMediaSelectionMenuController"16@"AVMediaSelectionOption"24Q32
v40@0:8@16@24Q32
@"UIView"40@0:8@"AVVolumeControlsContentView"16@"AVVolumeButtonControl"24@"AVVolumeSlider"32
v40@0:8@"AVVolumeControlsContentView"16@"AVVolumeButtonControl"24@"AVVolumeSlider"32
v24@0:8@"AVTransportControlsView"16
v32@0:8@"AVTransportControlsView"16@"AVScrubber"24
v40@0:8d16d24d32
v24@0:8B16B20
v28@0:8B16B20B24
@"AVSecondScreenPlayerLayerView"
d24@0:8@"<UIViewControllerContextTransitioning>"16
v24@0:8@"<UIViewControllerContextTransitioning>"16
@"<UIViewImplicitlyAnimating>"24@0:8@"<UIViewControllerContextTransitioning>"16
v36@0:8@"AVTransition"16B24@?<v@?>28
@"UIColor"24@0:8@"AVTransition"16
B40@0:8@"<AVTransitionDriver>"16@"UIGestureRecognizer"24@"UITouch"32
B32@0:8@"<AVTransitionDriver>"16q24
v40@0:8@"<AVTransitionDriver>"16q24@?<v@?>32
v24@0:8@"<AVTransitionDriver>"16
@"<UIViewControllerAnimatedTransitioning>"40@0:8@"UIViewController"16@"UIViewController"24@"UIViewController"32
@"<UIViewControllerAnimatedTransitioning>"24@0:8@"UIViewController"16
@"<UIViewControllerInteractiveTransitioning>"24@0:8@"<UIViewControllerAnimatedTransitioning>"16
@"UIPresentationController"40@0:8@"UIViewController"16@"UIViewController"24@"UIViewController"32
@"<AVTransitionControllerDelegate>"
@"<AVTransitionDriver>"
@"AVDisplayLink"
@"AVTransition"
@"AVInteractiveTransitionGestureTracker"
@"CAMediaTimingFunction"
v44@0:8@16@24B32@?36
v40@0:8@16B24B28@?32
@"AVSampleBufferDisplayLayerPlayerController"
@"AVPictureInPictureIndicatorLayer"
@"AVPictureInPictureSampleBufferDisplayLayerHostView"
@"CALayerHost"
@"AVValueTiming"
@"BSSimpleAssertion"
@"AVTimecodeController"
@"<AVPlayerControllerDelegate>"
@"AVAsset"
@"AVCoordinatedPlaybackSuspension"
v88@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64
v48@0:8@16@24d32@40
@"AVExternalPlaybackIndicatorView"
@"<AVPlayerViewControllerContentViewDelegate>"
@"UIView<AVPlaybackContentContainer>"
@"AVScrollViewObserver"
{UIEdgeInsets="top"d"left"d"bottom"d"right"d}
v24@0:8@"AVScrollViewObserver"16
v48@0:8{UIEdgeInsets=dddd}16
v32@0:8@"NSString"16@?<v@?>24
@"AVUserInteractionObserverGestureRecognizer"
@"UIVisualEffectView"
@"NSISO8601DateFormatter"
@"AVLoadingButtonView"
@32@0:8@16d24
@"CADisplayLink"
@"AVCustomStackLayout"
@"UIView<AVLayoutViewItem>"
@"AVView"
@"AVTransportControlsView"
@"<AVPlaybackControlsViewVisibilityDelegate>"
v32@0:8q16@?24
v32@0:8q16d24
@"NSData"16@0:8
@32@0:8q16@24
@"NSArray"24@0:8@"<AVKitLayoutItem>"16
@"NSArray"32@0:8{CGSize=dd}16
@"NSLayoutXAxisAnchor"16@0:8
@"NSLayoutYAxisAnchor"16@0:8
@"NSLayoutDimension"16@0:8
@60@0:8@16@24@32@40@48f56
@28@0:8@16f24
@36@0:8@16d24f32
@28@0:8d16f24
v28@0:8@"AVPictureInPictureController"16B24
{?={?=qiIq}{?=qiIq}}24@0:8@"AVPictureInPictureController"16
B24@0:8@"AVPictureInPictureController"16
v32@0:8@"AVPictureInPictureController"16{?=ii}24
v56@0:8@"AVPictureInPictureController"16{?=qiIq}24@?<v@?>48
{?={?=qiIq}{?=qiIq}}24@0:8@16
v32@0:8@16{?=ii}24
v56@0:8@16{?=qiIq}24@?48
@"AVPictureInPicturePlaybackState"
@"AVSampleBufferDisplayLayerPlaybackDelegateAdapter"
{?="start"{?="value"q"timescale"i"flags"I"epoch"q}"duration"{?="value"q"timescale"i"flags"I"epoch"q}}
v64@0:8{?={?=qiIq}{?=qiIq}}16
