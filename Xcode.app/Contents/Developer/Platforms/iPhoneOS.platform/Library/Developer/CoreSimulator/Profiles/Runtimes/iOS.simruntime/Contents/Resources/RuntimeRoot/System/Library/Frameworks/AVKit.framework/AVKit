?333333
?ffffff
?[5"y
MbP?{
333333
?333333
ffffff
?ffffff
.AUUUUUU
?)\
Central Play
rate
v16@?0@"AVAppStorePlayerView"8
appStorePlayerViewDisableVideo
appStorePlayerViewPlayerLayerOnly
AVRouteDetectorCoordinatorMultipleRoutesDetectedDidChangeNotification
com.apple.avkit.routeDetectorCoordinatorQueue
-[UIWindow(AVAdditions) avkit_ensureOrientation:disableTouchCancellation:]
AVKit
%@ (%p) %@
AVKitErrorDomain
playerLayer
H:|[simplePlayerLayerView]|
simplePlayerLayerView
V:|[simplePlayerLayerView]|
layer
+[AVPictureInPicturePlatformAdapter isPictureInPictureSupported]
isPictureInPictureSupported
SpringBoard
alwaysAllowNonlinearPlaybackByDefault
playerController.pictureInPicturePossible
playerController.playingOnSecondScreen
v16@?0@"AVPictureInPicturePlatformAdapter"8
Failed to start picture in picture.
The UIScene for the content source has an activation state other than UISceneActivationStateForegroundActive, which is not allowed.
-[AVPictureInPicturePlatformAdapter stopPictureInPictureAndRestoreUserInterface:]
shouldRestore
-[AVPictureInPicturePlatformAdapter setInterruptedForAudioSession:]
interruptedForAudioSession
-[AVPictureInPicturePlatformAdapter setWasPlayingWhenSuspended:]
wasPlayingWhenSuspended
-[AVPictureInPicturePlatformAdapter setSource:]
-[AVPictureInPicturePlatformAdapter updateLayoutDependentBehaviors]
-[AVPictureInPicturePlatformAdapter _updatePictureInPictureShouldStartWhenEnteringBackground]
pictureInPictureShouldStartWhenEnteringBackground
v16@?0@"<PGMutablePlaybackState>"8
-[AVPictureInPicturePlatformAdapter setBackgroundPlaybackPolicy:]
playerController.contentDimensions
v32@?0@"AVPictureInPicturePlatformAdapter"8@16@"AVKeyValueChange"24
pictureInPictureWasStartedWhenEnteringBackground
playerController.playing
playerController.player
v32@?0@"AVPictureInPicturePlatformAdapter"8@16@"NSNotification"24
playerController.rate
playerController.minTime
playerController.maxTime
playerController.timing
playerController.muted
playerController.status
playerController.hasLiveStreamingContent
playerController.seekableTimeRanges
playerController.hasSeekableLiveStreamingContent
playerController.seeking
playerController.seekToTime
playerController.scrubbing
playerController.timeControlStatus
-[AVPictureInPicturePlatformAdapter pictureInPictureProxy:willStartPictureInPictureWithAnimationType:]
-[AVPictureInPicturePlatformAdapter pictureInPictureProxy:didStartPictureInPictureWithAnimationType:]
-[AVPictureInPicturePlatformAdapter pictureInPictureProxy:failedToStartPictureInPictureWithAnimationType:error:]
-[AVPictureInPicturePlatformAdapter pictureInPictureProxy:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:]
-[AVPictureInPicturePlatformAdapter pictureInPictureProxy:willStopPictureInPictureWithAnimationType:reason:]
-[AVPictureInPicturePlatformAdapter pictureInPictureProxy:didStopPictureInPictureWithAnimationType:reason:]
-[AVPictureInPicturePlatformAdapter pictureInPictureProxyPictureInPictureInterruptionBegan:]
-[AVPictureInPicturePlatformAdapter pictureInPictureProxyPictureInPictureInterruptionEnded:]
-[AVPictureInPicturePlatformAdapter pictureInPictureProxy:didUpdateResourcesUsageReductionReasons:oldReasons:]
shouldReduceResources
-[AVPictureInPicturePlatformAdapter pictureInPictureProxy:didReceivePlaybackCommand:]
-[AVPictureInPicturePlatformAdapter pictureInPictureProxy:didReceiveTestingCommand:]
-[AVPictureInPicturePlatformAdapter pictureInPictureViewControllerViewDidAppear:]
-[AVPictureInPicturePlatformAdapter pictureInPictureViewControllerViewWillDisappear:]
playerLayer.videoGravity
playerLayer.readyForDisplay
playerLayer.videoRect
videoBounds
pictureInPicturePlayerLayer.videoRect
videoGravity
playerLayer.pixelBufferAttributes
PLAYBACK_CONTROLS_VIEW_CONTROLLER_SCRUB_INSTRUCTIONS_SUBTITLE_LABEL_HI_SPEED_SCRUBBING_TEXT
PLAYBACK_CONTROLS_VIEW_CONTROLLER_SCRUB_INSTRUCTIONS_SUBTITLE_LABEL_HALF_SPEED_SCRUBBING_TEXT
PLAYBACK_CONTROLS_VIEW_CONTROLLER_SCRUB_INSTRUCTIONS_SUBTITLE_LABEL_QUARTER_SPEED_SCRUBBING_TEXT
PLAYBACK_CONTROLS_VIEW_CONTROLLER_SCRUB_INSTRUCTIONS_SUBTITLE_LABEL_FINE_SCRUBBING_TEXT
scrubbingSpeed
do not create your own AVAirMessageNotificationCenter
com.apple.avkit.AirMessageNotificationCenter
-[AVAirMessageNotificationCenter handleCommandMessage:completion:]
-[AVAirMessageNotificationCenter bonjourService:didAcceptConnectionChannel:]
currentItemIdentifier
-[AVAirMessageNotificationCenter bonjourService:didCloseChannel:]
-[AVAirMessageNotificationCenter airTransport:didReceiveObject:]
-[AVAirMessageNotificationCenter airTransport:didReceiveObject:]_block_invoke
v24@?0q8@"NSDictionary"16
-[AVAirMessageNotificationCenter airTransportInputDidClose:]
com.apple.AVKit.ChapterImageQueue
cgImage
avkt/ExternalContentIdentifier
avkt/ExternalUserProfileIdentifier
avkt/PlaybackProgress
avkt/ServiceIdentifier
avkt/iTunesStoreIdentifier
avkt/BrandIdentifier
AVPlayerItemAVKitDataDidChangeNotification
-[AVPlayerItem(AVKitAdditionsPrivate) avkit_airMessageSendExternalMetadata]
v24@?0@"AVAirMessageResponse"8q16
-[AVPlayerItem(AVKitAdditionsPrivate) avkit_airMessageSendExternalMetadata]_block_invoke
-[AVPlayerItem(AVKitAdditionsPrivate) avkit_airMessageSendToAppleTV]
externalMetadata
externalPlaybackController
+[AVPlayerController(AVMediaSelection) canonicalLanguageIdentifierFromString:]
NilString
hasAudioMediaSelectionOptions
hasLegibleMediaSelectionOptions
audioMediaSelectionOptions
-[AVPlayerController(AVMediaSelection) setAudioMediaSelectionOptions:]
currentAssetIfReady
legibleMediaSelectionOptions
-[AVPlayerController(AVMediaSelection) setLegibleMediaSelectionOptions:]
-[AVPlayerController(AVMediaSelection) currentLegibleMediaSelectionOption]
player.appliesMediaSelectionCriteriaAutomatically
-[AVPlayerController(AVMediaSelection) selectedMediaOptionMayHaveChanged:]
q24@?0@8@16
B8@?0
avkit_persistentIdentifier
-[AVPlayerController(AVMediaSelection) _ensureUserCaptionDisplayType:]
-[AVPlayerController(AVMediaSelection) _disableLegibleMediaSelectionOptions:]
-[AVPlayerController(AVMediaSelection) _enableAutoMediaSelection:]
-[AVPlayerController(AVMediaSelection) _setMediaOption:mediaCharacteristic:]
MediaSelectionOptionsPersistentID
Volume
-[AVNewsWidgetPlayerBehavior init]
-[AVNewsWidgetPlayerBehavior dealloc]
AVSubtitlesMenu
AVLanguagesMenu
-[AVMediaSelectionMenuController _menuForOptions:withIdentifier:]_block_invoke
OVERFLOW_MENU_LANGUAGES_TITLE
OVERFLOW_MENU_SUBTITLES_TITLE
AVPlaybackSpeedMenu
selectedRate
v32@?0@"AVMobilePlaybackRateMenuController"8@16@"AVKeyValueChange"24
Playback Speed
menu
v32@?0@"AVSecondScreenController"8@16@"NSNotification"24
-[AVSecondScreenController init]_block_invoke
-[AVSecondScreenController addConnection:]
-[AVSecondScreenController removeConnection:]
-[AVSecondScreenController setPreferredConnection:]
-[AVSecondScreenController addSecondScreen:]
-[AVSecondScreenController removeSecondScreen:]
B16@?0@"AVSecondScreenConnection"8
-[AVSecondScreenController _targetScreen]
-[AVSecondScreenController _updateActiveConnection]
-[AVSecondScreenController _insertConnection:atIndex:]
receiverPairingIdentity
AVBonjourServiceClientDidResolveNetServiceNotification
AVExternalDeviceAControllerirPlayDeviceRefDidChangeNotification
AVBonjourServiceClientDidResolveAirPlayDeviceNetServiceNotification
-[AVBonjourServiceClient initWithNetServiceType:]_block_invoke
local
<AVBonjourServiceClient %p (%@); delegate <%@ %p>>
-[AVBonjourServiceClient _updatedAirPlayPairedDeviceAsync]
-[AVBonjourServiceClient _updatedAirPlayPairedDeviceAsync]_block_invoke
SUCCESS
FAIL
v24@?0^v8^{__CFError=}16
v20@?0C8^v12
-[AVBonjourServiceClient _isServiceForCurrentAirPlayDevice:]
<%@:%ld>
?host?
-[AVBonjourServiceClient airTransportSenderForNetService:]
-[AVBonjourServiceClient netServiceDidResolveAddress:]
AVNowPlayingInfoControllerDidReceiveStopCommandEventNotification
com.apple.avkit.sharedNowPlayingInfoController
-[AVNowPlayingInfoController init]
^{__CFArray=}20@?0I8^{__CFDictionary=}12
-[AVNowPlayingInfoController dealloc]
-[AVNowPlayingInfoController setPlayerController:]
playerController.hasContent
playerController.contentDuration
playerController.metadata
v32@?0@"AVNowPlayingInfoController"8@16@"NSNotification"24
playerController.canPause
playerController.canPlay
playerController.canTogglePlayback
playerController.canSeek
playerController.canScanForward
playerController.canScanBackward
playerController.canSeekChapterForward
playerController.canSeekChapterBackward
playerController.audioMediaSelectionOptions
playerController.legibleMediaSelectionOptions
-[AVNowPlayingInfoController startNowPlayingUpdatesForPlayerController:afterDelay:]
-[AVNowPlayingInfoController stopNowPlayingUpdatesForPlayerController:]
v40@?0@"NSMutableDictionary"8@"NSArray"16@"NSString"24^{__CFString=}32
+[AVNowPlayingInfoController _mediaRemoteLanguageOptionCharacteristicsForAVMediaSelectionOption:]
AVNowPlayingInfoController_Mobile.m
mediaRemoteMediaCharacteristic
B24@?0@"UIWindowScene"8@"NSDictionary"16
B24@?0@"UISceneSession"8@"NSDictionary"16
v48@?0@8@"NSString"16@24@32@"NSString"40
v32@?0@8@16@24
v16@?0@"NSNotification"8
avkit_musicAppBehaviorContext
v32@?0@"AVMusicAppBehaviorContext"8@16@"NSNotification"24
v32@?0@"AVMusicAppBehaviorContext"8@16@"AVKeyValueChange"24
playerController.player.currentItem
AVSecondScreenDidDisconnectNotification
AVSecondScreenConnectionDidBecomePossibleNotification
v32@?0@"AVSecondScreen"8@"UIWindowScene"16@"NSNotification"24
-[AVSecondScreen initWithScene:]_block_invoke
v32@?0@"AVSecondScreen"8@16@"NSNotification"24
-[AVSecondScreen dealloc]
-[AVSecondScreen connectWithSecondScreenConnection:]
-[AVSecondScreen setState:]
PlaybackProhibited
PlaybackPossible
PlaybackActive
Invalid
-[AVAirTransportStreams invalidate]
<%@ %p>
<%@ %p: (<%@, >%@), delegate=%@>
-[AVAirTransportStreams _readDataNonBlockingUpToMaxLength:]
AVAirTransport.m
isRunningEventThread()
-[AVAirTransportStreams _readAvailableData]
-[AVAirTransportStreams _inputStreamHasBytesAvailable]
-[AVAirTransportStreams _inputStreamHasBytesAvailable]_block_invoke
-[AVAirTransportStreams stream:handleEvent:]
Output
Input
+[AVAirTransport startEventThreadIfNecessary]_block_invoke_2
com.apple.avkit.AirChannel
-[AVAirTransport dealloc]
<%@ %p: delegate=%@>
-[AVAirTransport terminatePendingRequests]_block_invoke
_writeData must be implmemented by subclass
-[AVAirTransport writeMore]
-[AVAirTransport writeData:]
isReadyToSend should be implemented by subclass
-[AVAirTransport sendObject:receiveResponse:]_block_invoke
-[AVAirTransport sendResponse:]
AVAirMessageDispatcherDidChangeTargetNotification
<%@ %p: serviceClient=%@, channel=%@; delegate=%@>
-[AVAirMessageDispatcher sendMessage:completion:]
-[AVAirMessageDispatcher sendMessage:completion:]_block_invoke
v24@?0@"<AVAirTransportReverseTransformationResultProtocol>"8q16
-[AVAirMessageDispatcher didConnectToBonjourService:channel:]
-[AVAirMessageDispatcher airTransportOutputDidOpen:]
-[AVAirMessageDispatcher airTransportInputDidClose:]
-[AVAirMessageDispatcher airTransport:didReceiveObject:]
-[UIViewController(AVAdditions) avkit_setNeedsUpdatePreferencesIfNeeded]
UIWhitePointAdaptivityStyleVideo == preferredWhitePointAdaptivityStyle
prefersHomeIndicatorAutoHidden
-[UIWindowScene(AVAdditions) avkit_disableTouchCancellation:forRotationActions:]
actuallyDisableTouchCancellation
com.apple.avkit
AVVolumeControllerCurrentRouteHasVolumeControlChangedNotification
AVVolumeControllerVolumeChangedNotification
AVVolumeControllerVolumeDidChangeNotificationIsInitialValueKey
MediaPlayback
com.apple.AVKit.AVSystemVolumeControllerQueue
B24@?0@"AVVolumeHUDAssertion"8^B16
-[AVSystemVolumeController setSystemVolumeHUDEnabled:forSceneVolumeHudAssertion:]
Enabling
Disabling
-[AVSystemVolumeController setSystemVolumeHUDEnabled:forWindowSceneSessionIdentifier:]
Audio/Video
ExplicitVolumeChange
RouteChange
v16@?0@"AVSystemVolumeController"8
-[AVSystemVolumeController _applyProposedVolumeImmediately]
-[AVSystemVolumeController setPrefersSystemVolumeHUDHidden:]
MPVolumeHUDController
Airplay
AirPlay
v16@?0@"AVMicaPackage"8
AVPlayerAssetFilename
AVPlayerShouldAutoplay
AVShowsPlaybackControls
AVVideoLayerGravity
AVAllowsPictureInPicturePlayback
AVWantsDetachedFullscreenPresentation
AVCanDisplayContentInDetachedWindow
AVCanStartPictureInPictureAutomaticallyWhenEnteringBackground
AVPlayerViewControllerDidChangePlayerControllerNotification
AVPlayerViewControllerDidEnterFullScreenFromInline
AVPlayerViewControllerDidExitFullScreenFromInline
-[AVPlayerViewController initWithNibName:bundle:]
com.apple.podcasts
*** Warning: %@ was deallocated while its contents were being presented full screen. ***
-[AVPlayerViewController dealloc]
-[AVPlayerViewController initWithCoder:]
-[AVPlayerViewController encodeWithCoder:]
-[AVPlayerViewController setPlayer:]
%@ only supports AVPlayer instances that have been initialized with the main queue as the dispatch queue for serializing key-value observations.
-[AVPlayerViewController setShowsPlaybackControls:]
-[AVPlayerViewController setVideoGravity:forLayoutClass:]
playerLayerView.videoGravity
_playerLayerView.videoDisplaySize
secondScreenConnectionDisplaySize
playerController.externalPlaybackType
-[AVPlayerViewController setAllowsPictureInPicturePlayback:]
-[AVPlayerViewController setPlayerController:]
v32@?0@"AVPlayerViewController"8@16@"NSNotification"24
-[AVPlayerViewController setPlaybackRateCollection:]
-[AVPlayerViewController setShowsTimecodes:]
_showsTimecodes
-[AVPlayerViewController setUpdatesNowPlayingInfoCenter:]
_playerLayerView.pixelBufferAttributes
-[AVPlayerViewController setCanHidePlaybackControls:]
canHidePlaybackControls
-[AVPlayerViewController setAllowsEnteringFullScreen:]
allowsEnteringFullScreen
-[AVPlayerViewController setShowsMinimalPlaybackControlsWhenEmbeddedInline:]
-[AVPlayerViewController setRequiresLinearPlayback:]
-[AVPlayerViewController setPlaybackControlsIncludeTransportControls:]
playbackControlsIncludeTransportControls
-[AVPlayerViewController setPlaybackControlsIncludeDisplayModeControls:]
playbackControlsIncludeDisplayModeControls
-[AVPlayerViewController setPlaybackControlsIncludeVolumeControls:]
playbackControlsIncludeVolumeControls
-[AVPlayerViewController setVolumeControlsCanShowSlider:]
-[AVPlayerViewController setEntersFullScreenWhenPlaybackBegins:]
entersFullScreenWhenPlaybackBegins
-[AVPlayerViewController flashPlaybackControlsWithDuration:]
*** Warning: Called %@ with a duration of %@. Ignoring the duration as it is too short.
*** AVPlayerViewController: Setting a view is not supported.
-[AVPlayerViewController loadView]
v32@?0@"AVPlayerViewController"8@16@"AVKeyValueChange"24
-[AVPlayerViewController prefersStatusBarHidden]
prefersStatusBarHidden
com.apple.AppStore
-[AVPlayerViewController setTransportBarCustomMenuItems:]
playbackControlsController.transportBarCustomMenuItems
v60@?0@"NSString"8q16B24:28:36@"NSString"44@"NSString"52
KEYBOARD_DISCOVERABILITY_PLAY_PAUSE
Play/Pause keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_VOLUME_UP
Volume up keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_VOLUME_DOWN
Volume down keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_SKIP_BACK_15
Skip back 15 seconds keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_SKIP_AHEAD_15
Skip ahead 15 seconds keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_GO_TO_BEGINNING
Go to beginning keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_REWIND
Rewind keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_FAST_FORWARD
Fast forward keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_SHOW_PREVIOUS_FRAME
Show previous frame keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_SHOW_NEXT_FRAME
Show next frame keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_EXIT_FULLSCREEN
Exit full screen keyboard command discoverability title
-[AVPlayerViewController _addObservers]
playerController.playingOnExternalScreen
playerController.externalPlaybackAirPlayDeviceLocalizedName
playerController.hasEnabledAudio
playerController.hasEnabledVideo
v16@?0@"AVPlayerViewController"8
playerController.defaultPlaybackRate
com.apple.tv
com.apple.avkittester
_pictureInPictureController
-[AVPlayerViewController isAudioOnlyContent]
EXTERNAL_PLAYBACK_INDICATOR_VIEW_AIRPLAY_TITLE
EXTERNAL_PLAYBACK_INDICATOR_VIEW_AIRPLAY_SUBTITLE
EXTERNAL_PLAYBACK_INDICATOR_VIEW_TV_OUT_TITLE
EXTERNAL_PLAYBACK_INDICATOR_VIEW_TV_OUT_SUBTITLE
com.apple.iBooks
-[AVPlayerViewController _handleDoubleTapGesture:]
-[AVPlayerViewController _handleSingleTapGesture:]
-[AVPlayerViewController _handleDoubleDoubleTapGesture:]
B16@?0@"UIView"8
-[AVPlayerViewController _mediaSelectionDoneButtonTapped:]
v16@?0@"<AVMetricsCollectionBehaviorContext>"8
-[AVPlayerViewController _delegateRespondsTo:]
does
does NOT
playerLayerView.readyForDisplay
playerLayerView.videoBounds
-[AVPlayerViewController showFullScreenPresentationFromView:completion:]
-[AVPlayerViewController enterFullScreenWithCompletion:]_block_invoke
success
v20@?0B8@"NSError"12
-[AVPlayerViewController exitFullScreenWithCompletion:]_block_invoke
*** Warning: %@ is trying to enter full screen, but is not in its view's window's view controller hierarchy. This results in undefined behavior.
Invalid call of %@!
*** Warning: %@ is trying to exit full screen, but is not in its view's window's view controller hierarchy. This results in undefined behavior.
-[AVPlayerViewController avkit_willBeginStoppingPictureInPictureForPictureInPictureViewController:]
-[AVPlayerViewController pictureInPictureController:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:]
-[AVPlayerViewController playbackRateCollection:selectedPlaybackRateDidChangeTo:]
-[AVPlayerViewController(AVPlayerViewController_WebKitOnly) initWithPlayerLayerView:]
-[AVPlayerViewController(AVPlayerViewController_WebKitOnly) setPlaybackControlsShouldControlSystemVolume:]
-[AVPlayerViewController(AVPlayerViewController_WebKitOnly) enterFullScreenAnimated:completionHandler:]
View may not need layout when you call %@!
View needs to be loaded before you can call %@!
-[AVPlayerViewController(AVPlayerViewController_WebKitOnly) exitFullScreenAnimated:completionHandler:]
_pictureInPictureController.pictureInPicturePossible
_pictureInPictureController.pictureInPictureActive
_pictureInPictureController.pictureInPictureSuspended
_pictureInPictureController.pictureInPictureWasStartedWhenEnteringBackground
playbackControlsController
-[AVPlayerViewController(AVPlayerViewControllerInternal) setCanStartPictureInPictureAutomaticallyWhenEnteringBackground:]
-[AVPlayerViewController(AVPlaybackControlsViewControllerActions) videoGravityButtonTapped:]
-[AVPlayerViewController(AVPlaybackControlsViewControllerActions) mediaSelectionButtonTapped:]
-[AVPlayerViewController(AVPlaybackControlsViewControllerActions) fullScreenButtonTapped:]
-[AVPlayerViewController(AVPlaybackControlsViewControllerActions) pictureInPictureButtonTapped:]
-[AVPlayerViewController(AVPlaybackControlsViewControllerActions) exitFullscreen:]
-[AVPlayerViewController(DeprecationsAndToBeRemoved) setPreferredUnobscuredArea:]
-[AVPlayerViewController(DeprecationsAndToBeRemoved) setEntersFullScreenWhenTapped:]
entersFullScreenWhenTapped
avkit_currentEditBehaviorContext
playerController.player.currentItem.duration
playerController.player.currentItem.presentationSize
v32@?0@"AVEditBehaviorContext"8@16@"AVKeyValueChange"24
playerController.player.timeControlStatus
editView.trimming
editView.scrubbing
-[AVEditBehaviorContext rotateClockwise]
EDIT_BEHAVIOR_CONTEXT_CANCEL
v80@?0{?=qiIq}8^{CGImage=}32{?=qiIq}40q64@"NSError"72
AVOverflowButtonDidShowContextMenu
AVOverflowButtonDidHideContextMenu
AVControlOverflowMenu
More Controls
@"UIMenu"16@?0@"UIMenu"8
@"UIMenu"16@?0@"NSArray"8
 [%f, %@, %@]
_avairtvui._tcp.
AVKitAir/1
length
compression
messagetype
item
mimetype
languagetag
kern.osversion
sender
build
airmessaging
+[AVAirMessage isAirMessagingEnabled]_block_invoke
type
-[AVAirMessage initWithMessageType:itemIdentifier:dictionaryRepresentation:]
 %@: %@
-[AVAirMessage jsonDataRepresentation]
none
lzfse
zlib
lzma
+[AVAirMessage _decompressBodyData:forCompressionAlgorithm:]
+[AVAirMessage _nameForDataCompressionAlgorithm:]
%@:%@
application/octet-stream
-[AVAirMessage messageDataRepresentation]
+[AVAirMessage messageWithParts:]
-[AVPictureInPictureViewController initWithPictureInPicturePlayerLayerView:]
-[AVPictureInPictureViewController dealloc]
%@ does not support unarchiving from a nib.
@"UILabel"16@?0d8
@"UIStackView"24@?0@"NSArray"8d16
value
time stamp
*** initialization method -%@ cannot be sent to an abstract object of class %@: Create a concrete instance!
*** -%@ cannot be sent to an abstract object of class %@: Create a concrete instance!
*** -%@ only defined for abstract class.  Define %c[%@ %@]!
debugInfoDisplay.currentMode
debugInfoDisplay.preferences
player.currentItem
player.currentItem.tracks
v16@?0@"AVSecondScreenDebugAssistant"8
formatDescriptions
Unknown
naturalSize
%.0f
%0.f
Dolby
Current Display Mode: %@ %@ @ %@Hz
--------
Current Variant: %@ %@
Best Variant: %@ %@
Preferred Refresh Rate: %@Hz
Content Match: %@
Preferred Color Mode: %@
Enabled
Disabled
UIScreen.nativeBounds.size: %@
feC7TgoAAKLjn/KU8JAKFA
com.apple.springboard
%.0fx%0.f
HDR10
InternalBuild
enableSecondScreenHUD
-[AVPresentationController initWithPresentedViewController:presentingViewController:withConfiguration:]
-[AVPresentationController dealloc]
-[AVPresentationController presentationTransitionWillBegin]
-[AVPresentationController presentationTransitionDidEnd:]
completed
-[AVPresentationController dismissalTransitionWillBegin]
-[AVPresentationController dismissalTransitionDidEnd:]
v32@?0@"AVPresentationController"8@16@"NSNotification"24
-[AVPresentationController _observeSceneDidBecomeActiveForRestoringRotatability]_block_invoke
-[AVHomeIPCameraBehaviorContext setZoomingEnabled:]
zoomingEnabled
-[AVHomeIPCameraBehaviorContext setLivePreviewActive:]
livePreviewActive
-[AVHomeIPCameraBehaviorContext setCanStartPictureInPictureAutomaticallyWhenEnteringBackground:]
canStartPictureInPictureAutomaticallyWhenEnteringBackground
-[AVHomeIPCameraBehaviorContext setPlaybackControlsIncludePictureInPictureButton:]
playbackControlsIncludePictureInPictureButton
v32@?0@"AVHomeIPCameraBehaviorContext"8@16@"NSNotification"24
-[AVSeymourBehaviorContext hidePlaybackControlsImmediately]
missing implementation
-[AVAirMessageTransformer dataForMessage:]
+[AVDismissalExpanseCoordinator coordinateDismissalWithExpanseSessionForPlayer:cancellable:dismissalBlock:]_block_invoke
+[AVDismissalExpanseCoordinator coordinateDismissalWithExpanseSessionForPlayer:cancellable:dismissalBlock:]
identifier
extendedLanguageTag
localeIdentifier
time
duration
dataType
startDate
-[AVMetadataItem(AVAirSerialization) airDictionaryRepresentation]
b64:%@
+[AVMetadataItem(AVAirSerialization) itemWithAirDictionaryRepresentation:]
b64:
-[AVPlaybackContentTransitioningView setStateDescription:]
         Idle
     Possible
   Prohibited
Transitioning
   Cancelling
    Cancelled
   Completing
    Completed
Bounce
 None
 Left
Right
%@ %@
AVMediaSelectionViewControllerCellReuseIdentifier
-[AVMediaSelectionTableViewController initWithStyle:]
MEDIA_SELECTION_VIEW_CONTROLLER_NAVIGATION_ITEM_TITLE
-[AVMediaSelectionTableViewController dealloc]
v16@?0@"<UIViewControllerTransitionCoordinatorContext>"8
MEDIA_SELECTION_VIEW_CONTROLLER_AUDIO_OPTIONS_HEADER_TITLE
MEDIA_SELECTION_VIEW_CONTROLLER_LEGIBLE_OPTIONS_HEADER_TITLE
AVPictureInPictureControllerWillStartNotification
AVPictureInPictureControllerDidStartNotification
AVPictureInPictureControllerWillStopNotification
AVPictureInPictureControllerDidStopNotification
AVPictureInPictureControllerPlaybackStateDidChangeNotification
AVPictureInPictureControllerPlaybackStateIsPlayingKey
AVPictureInPictureControllerContentSourceKey
%@ is not a valid initializer. You must call -[%@ initWithPlayerLayer:].
anyPictureInPictureActive
v32@?0@"AVPictureInPictureController"8@16@"AVKeyValueChange"24
-[AVPictureInPictureController _commonInitWithSource:]_block_invoke
owner.isOtherPictureInPictureActive
v32@?0@"AVPictureInPictureController"8@16@"NSNotification"24
-[AVPictureInPictureController startPictureInPicture]
-[AVPictureInPictureController setAllowsPictureInPicturePlayback:]
allowsPictureInPicturePlayback
-[AVPictureInPictureController setMicrophoneEnabled:]
microphoneEnabled
-[AVPictureInPictureController setCanStartAutomaticallyWhenEnteringBackground:]
canStartAutomaticallyWhenEnteringBackground
-[AVPictureInPictureController setRequiresLinearPlayback:]
requiresLinearPlayback
-[AVPictureInPictureController setPictureInPicturePossible:]
pictureInPicturePossible
-[AVPictureInPictureController pictureInPicturePlatformAdapter:prepareToStopForRestoringUserInterface:]
-[AVPictureInPictureController pictureInPicturePlatformAdapter:statusDidChange:fromStatus:]
shouldRetainSource
self.sourceIfRetainedDuringPictureInPicturePlayback == nil
-[AVPictureInPictureController setContentSource:]_block_invoke
player
videoRect
readyForDisplay
-[AVPlayerLayer(AVPictureInPictureContentSource) avkit_startRoutingVideoToPictureInPictureViewController:]
self.isPIPModeEnabled
-[AVPlayerLayer(AVPictureInPictureContentSource) avkit_stopRoutingVideoToPictureInPictureViewController:]
PictureInPictureIndicatorLarge
-[AVTimeRange initWithUnionOfCMTimeRanges:]
startTime
-[AVTimeRange timeRangeByAddingTimeInterval:shiftingDates:]
AVTimeRange.m
false
[%@...%@]
 (-> [%@...%@])
v32@?0@"AVTimeRange"8Q16^B24
B16@?0@"AVTimeRange"8
AVExternalPlaybackStateWillPlayLocally
AVExternalPlaybackStateWillPlayExternally
AVExternalPlaybackStatePlaybackCancelled
-[AVExternalPlaybackController willBeginPlaybackFromAppWithBundleID:completionHandler:]
-[AVExternalPlaybackController willBeginPlaybackFromAppWithBundleID:completionHandler:]_block_invoke
v16@?0Q8
-[AVExternalPlaybackController _invokeClientCompletionHandlerWithPlaybackState:]
MPMediaControlsConfiguration
%02d:%02d:%02d%@%02d
%lu F
-[AVPictureInPicturePlatformAdapter(Common) _setStatusAndNotifyDelegateIfNeeded:]
-[AVPictureInPicturePlatformAdapter(Common) _updateStatusUsingProposedStatus:]
self.status != AVPictureInPictureControllerStatusProhibited
-[AVPictureInPicturePlatformAdapter(Common) _setRoutingVideoToHostedWindow:pictureInPictureViewController:source:]
shouldRoute
Half Speed
Compact Half Speed
Normal Speed
Compact Normal Speed
Fast Speed
Compact Fast Speed
Faster Speed
Compact Faster Speed
Double Speed
Compact Double Speed
%@ - selected
inputRadius
inputNormalizeEdges
inputQuality
inputIntermediateBitDepth
inputColorMatrix
v16@?0@"AVCABackdropLayerView"8
-[AVRoutePickerView setAirPlayActive:]
airPlayActive
-[AVRoutePickerView updateButtonAppearance]
Active
Inactive
v32@?0@"AVRoutePickerView"8@16@"NSNotification"24
com.apple.avkit.avroutepickerview
MPMediaControls
Unable to find class %s
/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
/System/Library/Frameworks/MediaPlayer.framework/Contents/MacOS/MediaPlayer
%@ is not a valid initializer. You must call -[%@ initWithTraitCollection:opaque:].
PICTURE_IN_PICTURE_INDICATOR_LAYER_TITLE
Mute Toggle
Mute
playerController.maxTiming
playerController.minTiming
currentTime
targetTime
minTime
maxTime
v32@?0@"AVZoomingBehaviorContext"8@16@"NSNotification"24
-[AVNewsWidgetPlayerBehaviorContext initWithAVKitOwner:]
-[AVNewsWidgetPlayerBehaviorContext setVideoGravityForTransitioningContent:]
-[AVNewsWidgetPlayerBehaviorContext setStartNextContentTransitionButtonEnabled:]
startNextContentTransitionButtonEnabled
-[AVNewsWidgetPlayerBehaviorContext setStartPreviousContentTransitionButtonEnabled:]
startPreviousContentTransitionButtonEnabled
-[AVNewsWidgetPlayerBehaviorContext updateStartLeftRightContentTransitionButtonsEnabled]_block_invoke
-[AVNewsWidgetPlayerBehaviorContext setCustomContentTransitioningInfoPanel:]
-[AVPlayerViewController(AVPlayerViewController_NewsOnly) setContentTransitioningDelegate:]
-[AVPlayerViewController(AVPlayerViewController_NewsOnly) startContentTransition:]
-[AVTransition initWithTransitionContext:]
-[AVTransition dealloc]
-[AVTransition startInteractiveTransition]
-[AVTransition finishInteractiveTransition]
-[AVTransition cancelInteractiveTransition]
-[AVTransition completeTransition:]
didComplete
-[AVTransition completeTransition:]_block_invoke
v32@?0@"AVLayoutViewRowHead"8Q16^B24
v32@?0@"AVLayoutItemAttributes"8Q16^B24
rectangle.portrait.arrowtriangle.2.inward
rectangle.portrait.arrowtriangle.2.outward
rectangle.arrowtriangle.2.inward
rectangle.arrowtriangle.2.outward
arrow.up.left.and.arrow.down.right
xmark
captions.bubble
globe
pause.fill
play.fill
pip.enter
pip.exit
gobackward.15
goforward.15
forward.end.alt.fill
backward.end.fill
forward.end.fill
airplayvideo
VolumeMuted
VolumeZero
VolumeLow
VolumeMedium
VolumeHigh
ellipsis
speedometer
AVMobileImageNameNoImage
v16@?0@"UIGraphicsImageRendererContext"8
com.apple.avkit.images
com.apple.avkit.UIKit_AVAdditions.AVMobileImageLoadingQueue
com.apple.avkit.UIKit_AVAdditions.AVMobileTextImageCache
gobackward.10
gobackward.30
gobackward.45
gobackward.60
gobackward.75
gobackward.90
goforward.10
goforward.30
goforward.45
goforward.60
goforward.75
goforward.90
latn
.westernarabic
AVRoutePickerViewCircularAirPlayGlyph
AVRoutePickerViewSquareAirPlayGlyph
VolumeGlyph
mute
half
full
plusL
com.apple.avkit.caml
LKState
LKEventHandler
LKStateAddAnimation
LKStateAddElement
LKStateElement
LKStateRemoveAnimation
LKStateRemoveElement
LKStateSetValue
LKStateSetProperty
LKStateTransition
LKStateTransitionElement
v32@?0@"CALayer"8Q16^B24
v32@?0@"CAState"8Q16^B24
-RTL
caml
timeControlStatus
v32@?0@"AVTurboModePlaybackControlsPlaceholderView"8@16@"AVKeyValueChange"24
muted
*** AVPlayerViewControllerAnimationCoordinator: Animations added to coordinator after animations performed will be ignored.
com.apple.avkit.AVTimer.manage %p
com.apple.avkit.AVTimer.timer %p
%@ is not a valid initializer. You must call -[%@ initWithTimeInterval:queue:block:repeats:].
AVSecondScreenConnectionVideoDisplaySizeChanged
AVSecondScreenConnectionReadyDidChangeNotification
AVSecondScreenConnectionActiveDidChangeNotification
AVSecondScreenConnectionPlayingDidChangeNotification
AVSecondScreenConnectionPreferredDisplayCriteriaDidChangeNotification
-[AVSecondScreenConnection dealloc]
-[AVSecondScreenConnection setPlayerLayer:]
allowsExternalPlayback
externalPlaybackActive
airPlayVideoActive
currentItem.status
currentItem.hasVideo
usesExternalPlaybackWhileExternalScreenIsActive
v16@?0@"AVSecondScreenConnection"8
currentItem.asset
availableVideoDynamicRanges
preferredDisplayCriteria
-[AVSecondScreenConnection _determineIsReadyToConnect]
-[AVSecondScreenConnection _currentItemIsReadyToPlayVideoOrLoadingWhileActive]
isReadyToPlayOrLoadingWhileActive
playerController.volume
v32@?0@"AVPlayerVolumeController"8@16@"AVKeyValueChange"24
-[AVAirMessageParts bodyAsJSON]
-[AVAirMessageParts decompressBodyUsingAlgorithm:]
-[AVAirMessageParts decompressBodyUsingNamedAlgorithm:]
-[AVAirMessageParts(AVAirMessages) airMessage]
sublayerTransform
6.6x
Whole Numeric Playback Speed
Fractional Numeric Playback Speed
-[AVTransportControlsView initWithFrame:styleSheet:]
Scrubber
@"AVLabel"24@?0@"NSString"8@"NSString"16
v16@?0@"NSString"8
Time Elapsed
Time Remaining
PLAYBACK_CONTROLS_VIEW_CONTROLLER_LIVE_BROADCAST_LABEL_TEXT
Live Broadcast
PLAYBACK_CONTROLS_VIEW_CONTROLLER_LIVE_LABEL_TEXT
Live
detatchedExtraContentStackView
Media Selection
Play/Pause
Skip Forward
Skip Backward
Skip To Next
Skip To Previous
transportControlsView
PLAYBACK_CONTROLS_VIEW_CONTROLLER_SCRUB_INSTRUCTIONS_SLIDE_UP_TITLE_LABEL_TEXT
v16@?0@"<AVBehavior>"8
v16@?0@"<AVBehaviorContext>"8
v16@?0@8
wireless
TVOut
B24@?0@"UIWindow"8@"NSDictionary"16
-[UIWindowScene(AVSecondScreenAdditions) _avkit_setPreferredRefreshRate:HDRMode:overscanCompensation:]
None
B24@?0@"UIScene"8@"NSDictionary"16
-[UIScene(AVSecondScreenAdditions) _avkit_setPreferredRefreshRate:HDRMode:overscanCompensation:]
AVPlaybackControlsControllsShowsLoadingIndicatorNotification
AVPlaybackControlsControllerShowsLoadingIndicatorValueKey
v32@?0@"AVPlaybackControlsController"8@16@"NSNotification"24
-[AVPlaybackControlsController initWithPlayerViewController:]
-[AVPlaybackControlsController dealloc]
scrubbingOrSeeking
v32@?0@8@16@"AVKeyValueChange"24
playerController.usesExternalPlaybackWhileExternalScreenIsActive
v16@?0@"AVPlaybackControlsController"8
needsTimeResolver
-[AVPlaybackControlsController setShowsMinimalPlaybackControlsWhenEmbeddedInline:]
showsMinimalPlaybackControlsWhenEmbeddedInline
v32@?0@"AVPlaybackControlsController"8@16@"AVKeyValueChange"24
-[AVPlaybackControlsController setShowsPlaybackControls:]
showsPlaybackControls
-[AVPlaybackControlsController setHasCustomPlaybackControls:]
hasCustomPlaybackControls
-[AVPlaybackControlsController setCanIncludePlaybackControlsWhenInline:]
canIncludePlaybackControlsWhenInline
-[AVPlaybackControlsController setVolumeControlsCanShowSlider:]
volumeControlsCanShowSlider
-[AVPlaybackControlsController setUpdatesNowPlayingInfoCenter:]
updatesNowPlayingInfoCenter
-[AVPlaybackControlsController setShowsVideoGravityButton:]
showsVideoGravityButton
-[AVPlaybackControlsController setPlaybackControlsShouldControlSystemVolume:]
playbackControlsShouldControlSystemVolume
playerViewControllerIsPresentingFullScreen
playerViewControllerIsPresentedFullScreen
coveringWindow
-[AVPlaybackControlsController setShowsTimecodes:]
showsTimecodes
multipleRoutesDetected
playerController.allowsExternalPlayback
wantsExternalPlaybackButtonShown
hasPlaybackBegunSincePlayerControllerBecameReadyToPlay
fullScreen
shouldEnterFullScreenWhenPlaybackBegins
pictureInPictureController.pictureInPictureActive
preferredUnobscuredArea
playerController.hasVideo
playButtonsShowPauseGlyph
playerController
playButtonHandlerForLazyPlayerLoading
inlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused
playerViewControllerHasInvalidViewControllerHierarchy
playerController.hasMediaSelectionOptions
timeResolver.targetTime
timeResolver.minTime
timeResolver.maxTime
seekingEnabled
playerViewControllerIsBeingTransitionedWithResizing
playbackControlsIncludeStartContentTransitionButtons
playbackControlsView
resumingUpdates
playbackSuspendedForScrubbing
playbackControlsView.showsPlaybackControls
v16@?0@"UIAction"8
EXTERNAL_PLAYBACK_OVERFLOW_MENU_ITEM_TITLE
-[AVPlaybackControlsController _observeBoolForKeyPath:usingKeyValueObservationController:observationHandler:]
-[AVPlaybackControlsController _updatePlaybackControlsVisibilityWantsPlaybackControlsVisible:]
-[AVPlaybackControlsController flashPlaybackControlsWithDuration:]
-[AVPlaybackControlsController showPlaybackControls:immediately:]
-[AVPlaybackControlsController _autoHideControlsAfterDelay:]
prominentPlayButtonCanShowPauseGlyph
showsProminentPlayButton
playerController.currentAssetIfReady
prefersMuted
v24@?0@"AVPlaybackControlsController"8@"AVDisplayLink"16
hasSeekableLiveStreamingContent
playerController.playingOnMatchPointDevice
playerController.loadedTimeRanges
showsLoadingIndicator
playbackViewFrame
hasBecomeReadyToPlay
canShowLoadingIndicator
startLeftwardContentTransitionButtonEnabled
startRightwardContentTransitionButtonEnabled
showsTransportControls
showsSkipButtons
showsStartContentTransitionButtons
showsRoutePickerView
showsMediaSelectionButton
showsPlaybackSpeedButton
minimumTime
maximumTime
currentAudioMediaSelectionOption
currentLegibleMediaSelectionOption
v16@?0@"UIImage"8
v16@?0@"AVNowPlayingInfoController"8
-[AVPlaybackControlsController _updateSecondScreenConnectionReadyToConnect]
readyToConnect
-[AVSecondScreenViewController dealloc]
-[AVSecondScreenViewController setPlayingOnSecondScreen:]
playingOnSecondScreen
layer.videoRect
v32@?0@"AVSecondScreenPlayerLayerView"8@16@"AVKeyValueChange"24
-[AVTransitionController wantsInteractiveStart]
wantsInteractiveStart
-[AVTransitionController startInteractiveTransition:]
-[AVTransitionController animationEnded:]
v24@?0@"AVTransitionController"8@"AVDisplayLink"16
beginTime
v32@?0@"AVPictureInPictureSampleBufferDisplayLayerView"8@"CALayerHost"16@"AVKeyValueChange"24
contentDimensions
v32@?0@"AVPictureInPictureSampleBufferDisplayLayerView"8@16@"AVKeyValueChange"24
bounds
VideoQueue_CAContextIDDidChange
v32@?0@"AVPictureInPictureSampleBufferDisplayLayerView"8@16@"NSNotification"24
PIPStashBufferDuration
PIPStashPeakBitRate
AVPlayerControllerCurrentTimeJumpedNotification
AVPlayerControllerPlaybackDidEndNotification
AVPlayerControllerContentDimensionsChangedNotification
AVPlayerControllerSelectedMediaOptionDidChangeNotification
AVPlayerControllerDidSeekChapterNotification
AVPlayerControllerDidSeekChapterChapterKey
AVPlayerControllerDidBeginScanningNotification
AVPlayerControllerDidEndScanningNotification
AVPlayerControllerScanningDirectionKey
AVPlayerControllerPIPActivitySessionIdentifierDidChangeNotification
-[AVPlayerController init]
com.apple.avkit.seekQueue
com.apple.avkit.playerControllerAssetInspectionQueue
com.apple.avkit.playerControllerBackgroundQueue
-[AVPlayerController initWithPlayer:]
v32@?0@"AVPlayerController"8@16@"NSNotification"24
-[AVPlayerController startInspectionIfNeeded]_block_invoke
shouldRestoreRate
delegateCanResumeAfterInterruption
-[AVPlayerController startInspectionIfNeeded]_block_invoke_3
-[AVPlayerController dealloc]
v32@?0@"AVPlayerController"8@16@"AVKeyValueChange"24
isPiPAvailable
audioFormats
player.externalPlaybackActive
player.currentItem.seekableTimeRanges
player.currentItem.loadedTimeRanges
player.currentItem.playbackBufferEmpty
player.currentItem.playbackLikelyToKeepUp
player.rate
hasLiveStreamingContent
seekToTimeInternal
player.currentItem.hasEnabledAudio
player.currentItem.hasEnabledVideo
player.currentItem.presentationSize
player.currentItem.asset
readyToPlay
player.currentItem.duration
hasEnabledAudio
v16@?0@"AVPlayerController"8
hasEnabledVideo
currentVideoMediaSelectionOption
externalPlaybackType
-[AVPlayerController _queuePlayer]
player.status
player.currentItem.status
status
player.error
seekableTimeRanges
commonMetadata
q24@?0@"AVChapter"8@"AVChapter"16
availableChapterLocales
composable
hasProtectedContent
availableMetadataFormats
compatibleWithAirPlayVideo
-[AVPlayerController _observeValueForKeyPath:oldValue:newValue:]
com.apple.videos
-[AVPlayerController setRate:]_block_invoke
v16@?0d8
pictureInPictureInterrupted
-[AVPlayerController setPlaying:]
-[AVPlayerController play:]
-[AVPlayerController autoplay:]
-[AVPlayerController pauseForAllCoordinatedPlaybackParticipants:]
-[AVPlayerController togglePlayback:]
-[AVPlayerController beginPlaybackSuspension]
-[AVPlayerController endPlaybackSuspension]
-[AVPlayerController setVolume:]
player.volume
player.muted
-[AVPlayerController setCoordinatedPlaybackActive:]
presentationSize
timing
reversePlaybackEndTime
minTiming
player.currentItem.reversePlaybackEndTime
forwardPlaybackEndTime
contentDuration
maxTiming
player.currentItem.forwardPlaybackEndTime
player.currentItem.hasVideo
contentChapters
streaming
player.currentItem.liveUpdateInterval
player.currentItem.seekableTimeRangesLastModifiedTime
completelySeekable
com.apple.motion.notserializable
v16@?0@"NSTimer"8
player.timeControlStatus
touchBarRequiresLinearPlayback
-[AVPlayerController beginScrubbing]
-[AVPlayerController endScrubbing]
-[AVPlayerController suspendPlaybackCoordinatorWhileActivelySeekingIfNecessary]
-[AVPlayerController resumePlaybackCoordinatorIfSuspended]
-[AVPlayerController actuallySeekToTime]
player.currentItem.canPlayFastForward
-[AVPlayerController beginScanningForward:]
-[AVPlayerController endScanningForward:]
player.currentItem.canPlayFastReverse
-[AVPlayerController beginScanningBackward:]
-[AVPlayerController endScanningBackward:]
canSeek
atMaxTime
atMinTime
-[AVPlayerController seekOrStepByFrameCount:]
-[AVPlayerController updateMinMaxTiming]
player.allowsExternalPlayback
-[AVPlayerController _updateExternalPlaybackAirPlayDeviceLocalizedNameIfNeeded]
EXTERNAL_PLAYBACK_DEVICE_NAME_NIL
pictureInPictureSupported
hasVideo
playingOnExternalScreen
pipActivitySessionIdentifier
-[AVPlayerController beginReducingResourcesForPictureInPicturePlayerLayer:]
-[AVPlayerController endReducingResourcesForPictureInPicturePlayerLayer:]
AVPlayerControllerResourceReductionIdentifier
Reducing Resources for Picture in Picture
v16@?0@"BSSimpleAssertion"8
-[AVPlayerController _updateRateForScrubbingAndSeeking]
metadata
availableMediaCharacteristicsWithMediaSelectionOptions
maximumVideoResolution
tracks
assetCache
nominalFrameRate
enabled
languageCode
mediaType
mediaCharacteristics
availableTrackAssociationTypes
-[AVPlayerController(AVPlayerControllerExternalPlaybackSupportInternal) setHandlesAudioSessionInterruptions:]
handlesAudioSessionInterruptions
player.usesExternalPlaybackWhileExternalScreenIsActive
v32@?0{?=qiIq}8
automaticVideoGravity
com.apple.avkit.SharedPreferences
UnsupportedContentIndicator
AudioOnlyIndicator
-[AVPlayerViewControllerContentView setShowsAudioOnlyIndicator:]
showsAudioOnlyIndicator
{accessibilityID: %@ minSize: %@ isCollapsed: %@ isIncluded: %@ displayPriority: %ld}
v32@?0@"NSValue"8Q16^B24
v32@?0@"UIView<AVLayoutViewItem>"8Q16^B24
<%@: %p> - %@
q24@?0@"UIView<AVLayoutViewItem>"8@"UIView<AVLayoutViewItem>"16
-[AVPlaybackControlsView initWithFrame:styleSheet:]
Done
Full Screen
Zoom
Picture in Picture
ScreenModeControls
prominentPlayButton
volumeControls
v32@?0@"AVPlaybackControlsView"8@16@"NSNotification"24
-[AVPlaybackControlsView dealloc]
-[AVPlaybackControlsView setFullScreen:]
v12@?0B8
v16@?0q8
-[AVPlaybackControlsView updateDisplayControlsVisibilityIncludedButtons:]
self.prefersFullScreenButtonIncluded
self.prefersDoneButtonIncluded
self.prefersVideoGravityButtonIncluded
self.prefersPiPButtonIncluded
AVKitAirResponse/1
response-status
response-description
%@ status %ld; "%@"
description
-[AVAirMessageResponse bodyData]
+[AVAirMessageResponse messageWithVersion:headers:bodyData:]
com.apple.
com.apple.avkit.localizedStringBundleQueue
position
bounds.origin
-[AVSampleBufferDisplayLayerPlayerController invalidatePlaybackState]
v8@?0
paused
-[AVSampleBufferDisplayLayerPlayerController seekByTimeInterval:toleranceBefore:toleranceAfter:]
pictureInPictureAvailable
enqueuedBufferDimensions
playbackState.timelineRate
playbackState
playbackState.timelineDuration
contentDurationWithinEndTimes
contentTimeRange
v32@?0@"AVSampleBufferDisplayLayerPlayerController"8@16@"AVKeyValueChange"24
v32@?0@"AVSampleBufferDisplayLayerPlayerController"8@16@"NSNotification"24
frame
transform
affineTransform
AVSBDLPlayerControllerKey
MEDIA_SELECTION_OPTION_OFF_TITLE
MEDIA_SELECTION_OPTION_AUTO_TITLE
%@-%@-%@
Only access this property on the main queue!
%s Setting: %ld
%s %s %s
_sceneActivationState == %ld for start pictureinpicture
%s %@ --> %@
%s %d
%s canStartAutomaticallyWhenEnteringBackground: %s isFullScreen - %s alwaysStartsAutomaticallyWhenEnteringBackground - %s allowsPictureInPicturePlayback - %s playerController.isPlaying - %s inSharePlaySession - %s status != prohibited - %s
%s backgroundPlaybackPolicy %{public}ld
Interruption notification: AVPlayerPlaybackWasInterruptedNotification player.rate: %.1f userinfo: %@
%s error: %@
%s pictureInPictureProxy: %@
%s pictureInPictureProxy: %@ reason: %ld
%s playbackCommand: %ld
Error: Unrecognized PGPlaybackAction - %ld
%s starting for playerController %{public}@
%s failed; status = %d
%s received message %{public}@
%s new channel %@; activeChannels has %@
%s %{public}@
%s unable to receive message : %{public}@
%s responding with result %d
%s unexpectedly received a response -- expected a message only
%s I just received something, I know not what
%s Unexpectedly received object from inactive channel (%@)
%s Removing channel from active list (%@)
%s Sending external metadata (%ld items)
%s Result of sending external metadata: %ld [%{public}@]
%s Sending all available information for this player item.
*** %s must be called on main thread. ***
%s AudioMediaSelectionOptions: %{public}@
%s LegibleMediaSelectionOptions: %{public}@
*** %s Received a forced-only media selection (%{public}@) when display type was NOT forced-only (was %ld). mediaSelectionCriteriaCanBeAppliedAutomaticallyToMediaSelectionGroup: %d. ***
*** %s Received a non-forced-only media selection (%{public}@) from automatic media selection when display type was forced-only. ***
%s Enabling automatic display type because receiver changed captions to forced-only.
%s Persisting preferences for remote legible option change: %{public}@ -> %{public}@
%s Selected legible option: %{public}@ 
%s Selected audible option: %{public}@ 
%s Changing MACaptionAppearanceDisplayType: %ld -> %ld
%s mediaOption: %{public}@ mediaCharacteristic: %{public}@
%s Skipped setting identical option.
%s subclass: %@
%s %d %p
%s Did select media selection option: %@
We expect all menu elements in this menu to be UIActions.
Cannot mute when unmuting.
Cannot unmute when muting.
Error: Internal inconsistency - playback rate menu item count does not equal the rate collection count. 
Recognized pinch gesture without enabling pinch to present or pinch to dismiss.
Pinch to present and pinch to dismiss cannot be simultaneously enabled.
Recognized pan gesture without enabling pan to dismiss.
Began tracking when already tracking.
Cannot finish when not tracking.
Cannot cancel when not tracking.
Cannot continue if still waiting.
Cannot reset when not tracking.
%s %@
%s %@ %@
%s %@ %ld
%s AVExternalPlaybackMonitorAirPlayVideoActiveDidChangeNotification received; note = %{public}@
%s kMRDeviceInfoDidChangeNotification received; note = %{public}@
Beginning discovery for %{public}@...
Stopping discovery for %{public}@
Found service for the current AirPlay device! Posting AVBonjourServiceClientDidResolveAirPlayDeviceNetServiceNotification..
delegate has not been set!
%s %p getting device info...
%s getActiveOrigin: %@, %@
%s have [active] device info. Getting more information...
[active] AppleTV pairedDeviceRef = %@
[active] first grouped device is not AppleTV (%@)
[active] grouped devices count != 1
[active] no grouped devices; activeDevice = %@
%s [active] done.
%s have device info and device. Getting more information...
AppleTV pairedDeviceRef = %@
_updateAirPlayPairedDeviceAsync: first grouped device is not AppleTV (%@)
_updateAirPlayPairedDeviceAsync: grouped devices count != 1
_updateAirPlayPairedDeviceAsync: no grouped devices: localDevice = %@
_updateAirPlayPairedDeviceAsync failed; error = %{public}@
%s done.
%s current device UID = %{public}@; service identifier = %{public}@
%s %@ ===> %@
%s failed to get the input/output streams!
didNotSearch (errorDict = %{public}@)
didFindService %@
didRemoveService %@
willResolve %@
didResolveAddress %@
%s localAirPlayReceiverPairingIdentity = %@
Found netService for the current AirPlay device; posting .DidResolveAirPlayDeviceNetServiceNotification..
didNotResolve %@
didNotResolve %@ due to timeout!
didStop resolution request %@
didUpdateTXTRecordData
%s playerController: %@
Update now playing info if needed: %d
Pause command
Stop command
Play command
Toggle play pause command
Next track command
Can not seek chapter forward; skipping forward %.2f seconds instead.
Previous track command
Can not seek chapter backward; skipping backward %.2f seconds instead.
Skip forward command
Skip backward command
Begin fast forward command
End fast forward command
Begin rewind command
End rewind command
Change playback rate command
Seek to playback position command
Enable language option command
Disable language option command
Remote Command Status: %ld
You must call -[AVObservationController stopAllObservation] before destroying it, perhaps in its owner's dealloc. %@
%s %@ foreground: %d haswindows: %d
Attempted to connect with a screen that is not available.
%s Created second window %p on %@
%s %@ -> %@
%s shutting down streams %p and %p
%s an error prevented bytes from being read! (%{public}@)
%s the input data disappeared! the input stream has closed.
%s the input data disappeared! Are multiple clients trying to read from this stream? (status = %d)
%s inputStream hasBytesAvailable
%s ... but the data couldn't be read
%s message data failed to deserialize
%s unexpected message/response received; delegate not expecting messages
%s %{public}@: ErrorOccurred
%s %{public}@: OpenCompleted
%s %{public}@: EndEncountered
%s %{public}@: HasSpaceAvailable
%s %{public}@: HasBytesAvailable
%s Starting event thread..
%s Ending event thread..
%s bye bye
%s response never received
%s wrote %ld bytes
%s write error occurred
%s write error: stream closed
%s writing %ld bytes...
%s failed to transform message object (%@)
%s sending %ld bytes...
%s ...succeeded, now waiting for/reading the response...
%s failed to transform response object (%@)
%s cannot send message; we don't have a channel to the AirPlay receiver (if there is one).
%s cannot send message yet; please wait for output stream to finish opening!
%s telling channel to sendObject (%@)
%s sendObject completed with status = %d; response message: %@
%s channel = %@; delegate = %@
%s the channel.delegate is already set
%s (call unexpected! message will be dropped)
%@: It is an error to set the target volume without calling -[AVVolumeController begin/endChangingVolume].
%s %@ volume HUD for windowScene with ID: %@
%s Setting volume on AVSystemController to: %.2f for category: %@
%s Attempted to set SystemVolumeHUD visibility before setting Client Identifier or Scene Identifier.
%s %@ layoutClass: %ld
%s New playback rate collection set: %@
%s Attempt to load view when view was already loaded.
Expected only one context for AVPlayerViewControllerBehaviorContext. This is fine, but probably means AVPlayerViewControllerBehaviorContext needs to be refactored
Already performed initial setup.
%s Unsupported custom menu item. Skipping %@. UIMenuElements must have both a title and an image.
%s Unsupported subclass of UIMenuElement. Only UIAction and UIMenu types are supported. Skipping: %@.
The player controller should have content before calling %@.
It's an error to repeatedly add observers.
Did receive stop command notification.
%s .status: %ld .hasEnabledVideo: %d .hasEnabledAudio: %d
%s <%{public}@ %p> %@ respond to %{public}@
Scrub gesture will begin.
Scrub gesture will transition to momentum phase with remaining velocity %f.
Scrub gesture did end.
Unexpected value for the transition controller's presentedViewController
Detached fullscreen is only available on Mac Catalyst.
Target view should be our own view when the full screen view controller is being transitioned!
%s Disabling legible display for picture in picture player layer
%s pending restore user interface for presentation context dismissal
%s New playback rate selected: %@
setDefaultPlaybackRate called during linear playback. Updating default linear playback rate to %f
%s %ld
%s Did not get a valid video composition.
%@ did not receive a view from its delegate, %@.
value for '%{public}@' is neither a string nor convertible to one
%s isAirMessageEnabled %@; global %@; app %@; environ %{public}@
%s incoming message type %d is unrecognized!
%s removing unrecognized key '%{public}@'
%s failed to serialize %{public}@ to JSON (%{public}@)
%s failed to decompress data; algorithm name '%{public}@' is not recognized
%s failed to decompress data (%{public}@ algorithm): %{public}@
%s This code has not been updated to handle algorithm %ld!
%s failed to compress data (%ld/%{public}@): %{public}@
%s error: json deserialization failed
Don't initialize this unless AVSecondScreenDebugHUDEnabled()!
%s Enabling autorotation for window: %p
%s Disabling autorotation for window: %p
AVSeymourBehaviorContext is no longer around, playerViewController will not be dismissed.
%s value does not implement AVMessageTransformerProtocol
%s value not represented by NSData (%@)
%s Playback coordination dismissal delegate completed but cancelled. Not dismissing.
%s Playback coordination dismissal delegate completed. Dismissing.
%s Playback coordination dismissal delegate not implemented. Dismissing.
%s Not in Expanse session (AVPlayer.backgroundPIPAuthorizationToken not set). Dismissing.
%s ** WARNING: the value of this metadata item %@ has not yet been loaded; we're about to force it
%s ** AVMetadataItem representation has no identifier!
%s The value passed for '%{public}@' is raw data, but we do not expect it. Discarding.
%s Metadata values should not be arrays/dictionaries. Lookin' at you, '%@'.
Attempt to transition while adjusting bounds.
Invalid state transition from %@ to %@.
This is where the problem is.
Invalid state transition
Instance %@ attempted content transition while one was already active. Ignoring. %@
%s %@ Offset: %@ ActiveOrigin: %@ TransitioningOrigin: %@
%s old: %ld --> new: %ld
Invalid track type for frame stepping.
Invalid input base frame time.
%s There's a loadedTimeRange that doesn't respond to -CMTimeRangeValue (<%{public}@ %p>)
setMapDate:toTime: expects startDate to be valid. Did the caller want setMapTime:toDate: instead?
setMapDate:toTime: is changing _startTime to NAN!
%s isLongFormVideoApp = %i
%s Current routing session: %@, routingSessionManager.prefersLikelyDestinationsOverCurrentRoutingSession: %i
%s Using current routing session. Calling client completion handler with playbackState: %@
%s Not using current routing session. AVRoutingSessionManager has %lu likely external destinations: %@
%s Medium confidence picker dismissed because MPMediaControlsDismissalReasonUserCancelled.
%s Medium confidence picker dismissed because MPMediaControlsDismissalReasonUnknown.
%s Showing medium confidence picker.
%s No likely external destinations. Calling client completion handler with playback state: %@
%s Not a long-form video app. Calling client completion handler with playback state: %@
%s Calling client completion handler with playbackState: %@
%s  newStatus: %ld
%s current status: %ld -> proposed status: %ld
%s isPictureInPictureProhibited: %s {
isContentSourceSupported: %s
isPictureInPicturePossible: %s
isSystemPictureInPicturePossible: %s
allowsPictureInPicturePlayback: %s
isPlayingOnSecondScreen: %s
sourceIsVisible: %s
contentDimensions: (%.01f, %.01f)
isPictureInPictureSupported: %s
Error: Internal inconsistency. Selected rate was not found in playback rate collection.
%s Setting mica color: (R: %.2f G: %.2f B: %.2f Alpha: %.2f) and state: %@.
%@ should be called from a background thread
Shouldn't already have a contentZooming view.
Warning: Attempted to start content transition on a %@, which was already transitioning. Ignoring.
Already had a content transition view, which is unexpected.
Content view unexpectedly had incomingContentView.
contentTransitioningPlayer should never be nil here.
Unexpected
Error: -[UIImage avkit_imageFromString:font:completion:] called off of the main thread. The AVMobileTextImageCache should only be accessed on the main thread.
Rendering image with text: "%@"
Unexpectedly missing URL for CAML file. %@
%@: %@ -> %@
%s JSON deserialization failed: %{public}@
%s failed to decompress data (%{public}@)
%s no class registered for version '%{public}@'
%s class %{public}@ does not implement messageWithParts:
Do not call this method when showing the content info panel.
%s Refresh: %.f HDRMode: %@ overscanCompensation: %@
%s This feature requires a UIWindowScene.
*** AVPlayerViewController cannot update status bar visibility while hosted in view service. ***
%s Cannot observe keypath %@ %@
%s shouldShowPlaybackControls: %d {
wantsPlaybackControlsVisible: %d
isUserInteracting: %d
isPictureInPictureActive: %d
playingOnExternalScreen: %d
audioOnlyContent: %d
isPopoverBeingPresented: %d
showsLoadingIndicator: %d
canHidePlaybackControls: %d
%s duration: %f
%s shouldShowPlaybackControls: %d {
showImmediately: %d
isHidingItemsForTransition: %d}
%s delay: %f
Called %@ before creating playback controls view!
Cannot present view controller without a view controller from which to present.
Tried to dismiss a view controller without a presenting view controller. This is hard.
Unexpected gesture kind.
Unexpected transitioning state.
%@ called with an invalid state %ld
%@: Unexpected transition state.
Expected a source layer.
Expected a player controller.
%s player: %p
Interruption notification: AVAudioSessionInterruptionNotification player.rate: %.1f userinfo: %@
AVAudioSessionInterruptionTypeEnded: %f
%s have AirPlay to AppleTV for %{public}@
%s have AirPlay to AppleTV, but externalPlaybackType = %ld
%s queuePlayer: %d
PlayerItemDidChange
New playerItem: <%{public}@: %p>
New asset: <%{public}@: %p>
SeekableTimeRanges changed {%f, %f} -> {%f, %f}.
liveStreamEventModePossible: %d
Time control status = %ld
Playback likely to keep up changed to: %@
%s setPlaying:YES because AVPlayerControllerAutoplayEnabled
isPlaybackBufferEmpty: %d
Rate changed to: %f
Ignoring rate change.
Ignored single rate change to: %f. Keeping current rate: %f
Failed to handle %@ %@
Calling playImmediatelyAtRate: %f
Could not play immediately, setting a play immediately retry block.
%s immediately %.1f on %p
%s %.1f on %p
Retrying play immediately.
Can play immediately: %d
%s setPlaying:YES
%s setPlaying:YES (AVPlayerControllerAutoplayEnabled)
%s notifyCoordinatedPlayback of pause: %@
%s %f
%s coordinatedPlaybackActive set to %d
%s Starting coordination suspension.
%s Ending coordination suspension.
%s time: %f toleranceBefore: %f toleranceAfter: %f
Seek completed: %s
%s isScanningForward: %d    isScanningBackward: %d
%s isScanningForward: %d
%s isScanningForward: %d isScanningBackward: %d
%s isScanningBackward: %d
%s stepByCount: %ld
%s sampleBasedSeekTarget: %f
Modifying seekableTimeRange by: %f
segmentDuration: %f
minTimingNeedsUpdate: %d, new minTiming with minTime: %f, rate: %f, old minTime: %f, delta: %f
maxTimingNeedsUpdate: %d, new maxTiming with maxTime: %f old maxTime: %f, delta: %f
%s Using output context %@
Resource Reduction assertion was invalidated.
Calls to -[AVPlayerController stopUsingNetworkResourcesForLiveStreamingWhilePaused] must be counterbalanced with calls to -[AVPlayerController startUsingNetworkResourcesForLiveStreamingWhilePaused].
Never load the turboModePlaybackControlsPlaceholderView when the playbackControlsView is already loaded!
%@ - Computed more frames than we have arranged subviews. Number of arranged subviews: %ld -- current frame index: %ld
Has control that can only overflow, but no layout views can substitute others.
%@ %d
%@ called when initial layout not needed already set.
%s failed to serialize response body: %{public}@
%s response received: %{public}@
%s response version seems incorrect; have '%{public}@' but expecting '%{public}@'
%s response is invalid: the %{public}@ header is missing
Expect this to only be set once.
%s  interval: %f shouldResumePlayback: %@
Done seeking.
Resuming playback after a seek.
softlink:r:path:/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
softlink:r:path:/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
softlink:r:path:/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
AVView
AVAppStorePlayerView
AVAppStorePlayerLayerView
AVRouteDetectorCoordinator
AVContentOverlayView
AVAdditions
AVPictureInPicturePlayerLayerView
_AVSimplePlayerLayerView
AVPictureInPicturePlatformAdapter
AVPictureInPictureViewControllerDelegate
NSObject
PGPictureInPictureProxyDelegate
AVPictureInPictureControlsStyleAppearance
AVPictureInPicturePrerollAttributes
__AVPlayerLayerView
AVScrubberVelocity
AVScrubber
UIScrollViewDelegate
AVExternalGestureRecognizerPreventing
AVPlaybackControlsViewItem
AVLayoutViewItem
AVAirMessageNotificationCenter
AVBonjourServiceDelegate
AVAirTransportDelegate
AVChapter
NSCopying
AVPlayerItemAVKitData
AVKitAdditionsPrivate
AVPlaybackRouteSelecting_Private
AVPlaybackRouteSelecting
AVMediaSelection
AVPlayerController
AVScrollViewObserver
_UIScrollViewScrollObserver
AVVolumeSlider
AVNewsWidgetPlayerBehavior
AVBehaviorInternal
AVBehavior
AVPictureInPictureCALayerHostView
AVPictureInPictureSampleBufferDisplayLayerHostView
AVMediaSelectionMenuController
AVUserInteractionObserverGestureRecognizer
AVPlayerControllerVolumeAnimator
AVHomeIPCameraBehavior
AVHomeIPCameraActionButtonHandling
AVPictureInPictureContentSourceExtensions
AVPictureInPictureContentSource
AVMobilePlaybackRateMenuController
AVInteractiveTransitionGestureTracker
UIGestureRecognizerDelegate
AVTransitionDriver
UIInteraction
AVSecondScreenController
AVPresentationContext
AVBonjourServiceClient
NSNetServiceBrowserDelegate
NSNetServiceDelegate
AVNowPlayingInfoController
AVStatusBarBackgroundGradientView
AVStatusBarBackgroundGradientViewSubview
AVObservationController
AVProxyKVOObserver
AVKeyValueChange
AVMusicAppBehavior
AVPlayerItem_AVMusicAppBehaviorContextAdditions
AVMusicAppBehaviorContext
AVBehaviorContextInternal
AVBehaviorContext
AVPlayerViewControllerBehaviorContext
AVMetricsCollectionBehaviorContext
AVSecondScreen
AVStringPair
AVAirTransportStreams
NSStreamDelegate
AVAirTransport
StreamBased
AVAirMessageDispatcher
AVBonjourServiceClientDelegate
AVPictureInPictureVideoCallViewController
AVVideoCallPlayerController
AVSeymourBehavior
AVLoadingButtonView
AVVolumeHUDAssertion
MPVolumeDisplaying
AVSystemVolumeController
AVVolumeHUDAssertionDelegate
AVVolumeController
AVZoomingBehavior
AVPlayerViewControllerCustomControlsViewLayoutMarginsGuideProvidingView
AVPlayerViewControllerCustomControlsView
AVPictureInPicturePlaybackState
AVPlaybackControlsRoutePickerView
AVStyleSheet
AVEditBehavior
AVPlayerViewController
AVPictureInPictureControllerDelegate
UIPopoverPresentationControllerDelegate
UIAdaptivePresentationControllerDelegate
AVFullScreenViewControllerDelegate
AVTransitionControllerDelegate
AVContentOverlayViewDelegate
AVPlaybackRateCollectionDelegate
AVPlayerControllerDelegate
AVPlaybackControlsViewVisibilityDelegate
AVPlayerViewController_AdLibOnly
AVPlayerViewController_WebKitOnly
AVPlayerViewController_AppStoreOnly
AVPlayerViewControllerInternal
AVPlaybackControlsViewControllerActions
AVPlayerViewControllerTransitioningInternal
DeprecationsAndToBeRemoved
AVPlayerItem_AVEditBehaviorContextAdditions
AVEditBehaviorContext
AVEditViewDataSource
AVEditViewDelegate
AVFullScreenViewController
AVControlOverflowButton
AVExternalGestureRecognizerPreventer
AVPlaybackRate
AVDeprecated
AVAirMessageExtensions
AVAirMessage
AVPictureInPictureViewController
PGPictureInPictureViewController
PGPictureInPictureViewControllerSupport
AVExternalPlaybackIndicatorView
AVValueTiming
NSSecureCoding
NSCoding
NSMutableCopying
AVMutableValueTiming
AVValueTimingCreation
AVExtendedValueTiming
AVExtendedMutableValueTiming
AVConcreteValueTiming
AVConcreteMutableValueTiming
AVSecondScreenDebugAssistant
AVPresentationController
AVHomeIPCameraBehaviorContext
AVScrubbing
AVSeymourBehaviorContext
AVVolumeControlsController
AVPlaybackContentZoomingView
AVPlaybackContentContainer
AVDataValueTransformer
AVAirTransportTransformationProtocol
AVAirMessageTransformer
AVDismissalExpanseCoordinator
AVEditView
UIMovieScrubberDataSource
UIMovieScrubberDelegate
AVAirSerialization
AVAirSerializationProtocol
AVPlaybackContentTransitioningView
AVMediaSelectionViewController
AVMediaSelectionTableViewController
AVTableViewCell
AVPictureInPictureController
AVPictureInPicturePlatformAdapterDelegate
AVPictureInPictureControllerContentSource
ToBeDeprecated
AVSampleBufferDisplayLayerSupport
VideoCallSupport
AVControlItem
AVLabel
AVPlayerView
AVTimeRange
AVTimeRangeCollection
AVExternalPlaybackController
AVTimecode
AVTimecodeController
Common
AVPlaybackRateCollection
AVCABackdropLayerView
AVCABackdropLayer
AVRoutePickerViewInternalDelegate
AVRoutePickerViewDelegate
AVRoutePickerView
AVPictureInPictureIndicatorLayer
AVPictureInPictureIndicatorSublayer
AVBackgroundView
AVVolumeButtonControl
AVPlayerControllerTimeResolver
TimeObserverAdditions
AVPrioritizedSize
AVTouchIgnoringView
AVZoomingBehaviorContext
AVNewsWidgetPlayerBehaviorContext
AVPlaybackContentTransitioningViewDelegate
AVNewsWidgetPlayerLegacyBehavior
AVPlayerViewController_NewsOnly
AVTransition
AVCustomStackLayout
AVImage
AVMobileImageConfiguration
AVMicaPackage
CAMLParserDelegate
CAStateControllerDelegate
AVTurboModePlaybackControlsPlaceholderView
AVPlayerViewControllerAnimationCoordinator
AVTimer
AVSecondScreenConnection
AVSecondScreenContentViewConnection
AVPlayerVolumeController
AVPresentationContainerView
AVPresentationContainerViewAppearanceProxy
AVPresentationContainerViewLayer
AVMessageParser
AVAirMessages
AVAirMessageParts
AVAirTransportReverseTransformationResultProtocol
AVVolumeControlsContentView
AVPlaybackContentContainerView
AVEmbeddedAdditions
AVTransportControlsView
AVScrubberDelegate
AVVolumeControlsControllerLayoutDelegate
AVDefaultBehaviorContext
AVBehaviorStorage
AVBehaviorSupport
AVPresentationConfiguration
AVSecondScreenAdditions
AVPresentationContextTransition
AVHomeIPCameraPlayerController
AVPlaybackControlsController
AVTransportControlsViewDelegate
AVVolumeControlsControllerDelegate
AVMediaSelectionMenuDelegate
AVControlOverflowButtonDelegate
AVPlayerViewControllerContentViewDelegate
AVSecondScreenViewController
AVSecondScreenPlayerLayerView
AVTransitionController
UIViewControllerAnimatedTransitioning
UIViewControllerInteractiveTransitioning
AVTransitionDelegate
AVTransitionDriverDelegate
UIViewControllerTransitioningDelegate
AVPictureInPictureSampleBufferDisplayLayerView
AVSBDLPIPAdditions
AVPlayerControllerMercurySupportInternal
AVPlayerControllerExternalPlaybackSupportInternal
AVPlayerControllerTimecodeSupportInternal
AVPlayerControllerTimecodeSupport
AVBackdropView
AVSharedPreferencesProtocol
AVPlayerViewControllerContentView
AVScrollViewObserverContentView
AVButton
!C$A
AVInternetDateFormatter
AVLayoutItemAttributes
AVHomeLoadingButtonControlItem
AVDisplayLink
AVLayoutView
AVPlaybackControlsView
AVAirMessageResponse
AVMessageTransformerProtocol
_AVBundle
AVPictureInPictureIndicatorView
NSLayoutConstraint_AVKitAdditions
AVKitLayoutItem
NSLayoutAnchor_AVKitAdditions
NSLayoutDimension_AVKitAdditions
AVLayoutViewRowHead
AVSampleBufferDisplayLayerPlaybackDelegateAdapter
AVPictureInPictureSampleBufferPlaybackDelegate
AVSampleBufferDisplayLayerPlayerController
AVPictureInPictureSuppport
EmbeddedAdditions
setHidden:
avkit_needsUpdateBackdropCaptureViewHidden
hitTest:withEvent:
ignoresTouches
isEqual:
setIgnoresTouches:
_ignoresTouches
TB,N,V_ignoresTouches
initWithFrame:
buttonWithAccessibilityIdentifier:
setClampsHitRectInsetsWhenContainedInScrollableView:
setImageName:
traitCollection
preferredFontForTextStyle:compatibleWithTraitCollection:
setFullScreenFont:
_prominentPlayButtonTouchUpInside:
addTarget:action:forControlEvents:
bounds
setShapeStyle:
mainScreen
initWithTraitCollection:shouldUseCompactFullScreenSize:
contentOverlayView
addSubview:
prominentPlayButtonLayoutView
observationController
stopAllObservation
dealloc
playerViewController
setShowsPlaybackControls:
setUpdatesNowPlayingInfoCenter:
setShowsMinimalPlaybackControlsWhenEmbeddedInline:
setCanPausePlaybackWhenExitingFullScreen:
setAllowsEnteringFullScreen:
setVideoGravity:
setPreferredUnobscuredArea:
setDelegate:
setPlayer:
player
rate
playerLayerView
initWithOwner:
_makeActualVideoViewWithPlayerIfNeeded:
startObserving:keyPath:observationHandler:
videoGravityForLayoutClassDictionary
numberWithUnsignedInteger:
setObject:forKeyedSubscript:
setVideoGravity:forLayoutClass:
copy
setPlayButtonHandlerForLazyPlayerLoading:
setClipsToBounds:
view
_setContinuousCornerRadius:
layoutSubviews
superview
setFrame:
layoutMarginsGuide
layoutFrame
styleSheet
defaultItemInlineSize
maximumProminentPlayButtonDimension
minimumProminentPlayButtonDimension
prominentPlayButton
setExtrinsicContentSize:
_makePlayerLayerViewWithPlayer:
insertSubview:atIndex:
_makePlayerViewControllerWithPlayer:
setPlayerLayerView:
layer
initWithNibName:bundle:
setPlayerViewController:
showsPlaybackControls
updatesNowPlayingInfoCenter
showsMinimalPlaybackControlsWhenEmbeddedInline
canPausePlaybackWhenExitingFullScreen
allowsEnteringFullScreen
videoGravity
playerViewControllerDelegate
playButtonHandlerForLazyPlayerLoading
clipsToBounds
_continuousCornerRadius
maskedCorners
setMaskedCorners:
preferredUnobscuredArea
allKeys
countByEnumeratingWithState:objects:count:
unsignedIntegerValue
objectForKeyedSubscript:
setTranslatesAutoresizingMaskIntoConstraints:
avkit_constraintsFromCenterAndDimensionAnchorsToCenterAndDimensionAnchorsOfItem:
activateConstraints:
setAlpha:
removeFromSuperview
setProminentPlayButtonLayoutView:
setProminentPlayButton:
animateWithDuration:delay:options:animations:completion:
setPlayerViewControllerDelegate:
setStyleSheet:
setVideoGravityForLayoutClassDictionary:
.cxx_destruct
_showsPlaybackControls
_updatesNowPlayingInfoCenter
_showsMinimalPlaybackControlsWhenEmbeddedInline
_canPausePlaybackWhenExitingFullScreen
_allowsEnteringFullScreen
_videoGravity
_contentOverlayView
_player
_playButtonHandlerForLazyPlayerLoading
_preferredUnobscuredArea
_playerViewControllerDelegate
_playerViewController
_prominentPlayButton
_prominentPlayButtonLayoutView
_styleSheet
_playerLayerView
_videoGravityForLayoutClassDictionary
_observationController
T@"AVButton",&,N,V_prominentPlayButton
T@"AVLayoutView",&,N,V_prominentPlayButtonLayoutView
T@"AVStyleSheet",&,N,V_styleSheet
T@"AVPlayerViewController",&,N,V_playerViewController
T@"AVAppStorePlayerLayerView",&,N,V_playerLayerView
T@"NSMutableDictionary",&,N,V_videoGravityForLayoutClassDictionary
T@"AVObservationController",R,N,V_observationController
TB,N,V_showsPlaybackControls
TB,N,V_updatesNowPlayingInfoCenter
TB,N,V_showsMinimalPlaybackControlsWhenEmbeddedInline
TB,N,V_canPausePlaybackWhenExitingFullScreen
TB,N,V_allowsEnteringFullScreen
T@"NSString",C,N,V_videoGravity
T@"UIView",R,N,V_contentOverlayView
T@"AVPlayer",&,N,V_player
T@?,C,N,V_playButtonHandlerForLazyPlayerLoading
Tq,N,V_preferredUnobscuredArea
T@"<AVPlayerViewControllerDelegate>",W,N,V_playerViewControllerDelegate
layerClass
T@"AVPlayerLayer",R,D,N
defaultCenter
updateMultipleRoutesDetected
addObserverForName:object:queue:usingBlock:
routeDetectorCoordinatorQueue
sharedSystemRouteDetector
setRouteDetectionEnabled:
multipleRoutesDetected
setMultipleRoutesDetected:
isMainThread
postNotificationName:object:
beginDetectingRoutes
endDetectingRoutes
isRouteDetectionEnabled
_routeDetectionEnabled
routeDetectionEnabled
TB,N,GisRouteDetectionEnabled,V_routeDetectionEnabled
TB,R,N
didAddSubview:
delegate
contentOverlayViewDidAddOrRemoveSubview:
_didRemoveSubview:
_delegate
T@"<AVContentOverlayViewDelegate>",W,N,V_delegate
_isHostedInAnotherProcess
_windowInterfaceOrientation
avkit_canAttemptRotation
currentDevice
orientation
autorotates
avkit_canAttemptSecondWindowForRotability
_windowOwnsInterfaceOrientation
_windowControlsStatusBarOrientation
_shouldControlAutorotation
avkit_isHostedInAnotherProcess
_shouldAutorotateToInterfaceOrientation:
windowScene
_setRotatableViewOrientation:duration:
avkit_disableTouchCancellation:forRotationActions:
avkit_preferredInterfaceOrientationFromDeviceOrientation
avkit_supportsAutorotationForInterfaceOrientationMask:
avkit_ensureOrientation:disableTouchCancellation:
userInterfaceIdiom
rangeOfString:
substringToIndex:
substringFromIndex:
stringWithFormat:
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
playerLayer
willChangeValueForKey:
constraintsWithVisualFormat:options:metrics:views:
didChangeValueForKey:
attachPlayerLayer
detachPlayerLayer
_simplePlayerLayerView
T@"AVPlayerLayer",R,N
setWithObjects:
keyPathsForValuesAffectingPlayerLayer
isPictureInPictureSupported
preferredFontForTextStyle:
pointSize
configurationWithPointSize:weight:
init
avkit_pictureInPictureViewController
initWithPictureInPicturePlayerLayerView:
arrayWithObjects:count:
_updateStatus
_createProxyIfNeeded
startObserving:keyPaths:observationHandler:
_removeSecondScreenConnection
invalidate
source
avkit_window
activationState
_sceneActivationState
_updateStatusUsingProposedStatus:
pegasusProxy
startPictureInPicture
pictureInPicturePlatformAdapter:failedToStartError:
pictureInPicturePlatformAdapterPrepareToStopForDismissal:
updateLayoutDependentBehaviors
stopPictureInPictureAndRestoreUserInterface:
isPictureInPicturePossible
isPictureInPictureSuspended
isPictureInPictureActive
_updateProxyPlaybackState
pegasusAttributes
prerollAttributes
_updatePictureInPictureShouldStartWhenEnteringBackground
setContentSourceAwaitingInvalidation:
setContentSourceAwaitingSetup:
contentSourceAwaitingSetup
contentSourceAwaitingInvalidation
status
pictureInPictureViewController
setContentViewController:
contentViewController
avkit_stopRoutingVideoToPictureInPictureViewController:
avkit_startRoutingVideoToPictureInPictureViewController:
isEqualToString:
setClientSessionIdentifier:
avkit_videoRectInWindow
screen
fixedCoordinateSpace
convertRect:toCoordinateSpace:
videoRectInScreen
setVideoRectInScreen:
viewFrameForInteractiveTransitionAnimationWhenEnteringBackgroundDidChangeForViewController
_largestInscribedRectInBoundingPathWithCenter:aspectRatio:
activitySessionIdentifier
playerController
isPlaying
canStartAutomaticallyWhenEnteringBackground
alwaysStartsAutomaticallyWhenEnteringBackground
allowsPictureInPicturePlayback
setPictureInPictureShouldStartWhenEnteringBackground:
controlsStyle
_proxyControlsStyle
setControlsStyle:
seekToTime
isSeeking
currentTimeWithinEndTimes
contentDurationWithinEndTimes
observedTimeControlStatus
isScrubbingOrSeeking
rateWhenScrubbingOrSeekingBegan
hasLiveStreamingContent
setContentType:
requiresLinearPlayback
hasSeekableLiveStreamingContent
setRequiresLinearPlayback:
setContentDuration:
setPlaybackRate:elapsedTime:timeControlStatus:
isMuted
setMuted:
setPrerollAttributes:
isMicrophoneEnabled
isRoutingVideoToHostedWindow
setRoutingVideoToHostedWindow:
backgroundPlaybackPolicy
setBackgroundAudioPolicy:
updatePlaybackStateUsingBlock:
initWithControlsStyle:viewController:
_startObservation
value
CGSizeValue
setPreferredContentSize:
preferredContentSizeDidChangeForViewController
startObserving:keyPath:includeInitialValue:observationHandler:
boolValue
_startObservingForPlaybackStateUpdates
managesWiredSecondScreenPlayback
sharedInstance
addConnectionForPlayer:playerLayer:
setSecondScreenConnection:
object
startObservingNotificationForName:object:notificationCenter:observationHandler:
userInfo
setInterruptedForAudioSession:
startObserving:keyPaths:includeInitialValue:observationHandler:
setSeeking:
isScrubbing
setScrubbing:
timeControlStatus
integerValue
setObservedTimeControlStatus:
setSourceWindowWhenPictureInPictureStarted:
pictureInPictureWasStartedWhenEnteringBackground
pictureInPicturePlatformAdapter:prepareToStopForRestoringUserInterface:
avkit_willBeginStoppingPictureInPictureForPictureInPictureViewController:
pictureInPicturePlatformAdapterEndReducingResourcesForEligibleOffScreenState
pictureInPicturePlatformAdapter:handlePlaybackCommand:
interfaceOrientation
pictureInPicturePlatformAdapterBeginReducingResourcesForEligibleOffScreenState
playbackAction
associatedDoubleValue
seekByTimeInterval:toleranceBefore:toleranceAfter:
gotoEndOfSeekableRanges:
associatedBoolValue
setWasPlayingWhenSuspended:
canPausePlaybackWhenExitingPictureInPicture
pauseForAllCoordinatedPlaybackParticipants:
setPlaying:
wasPlayingWhenSuspended
isInterruptedForAudioSession
isPictureInPictureInterrupted
play:
coordinateDismissalWithExpanseSessionForPlayer:cancellable:dismissalBlock:
testingAction
_setRoutingVideoToHostedWindow:pictureInPictureViewController:source:
setRateWhenScrubbingOrSeekingBegan:
setScrubbingOrSeeking:
secondScreenConnection
removeConnection:
sourceWindowWhenPictureInPictureStarted
startPictureInPictureButtonImageName
stopPictureInPictureButtonImageName
imageSymbolConfiguration
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
pictureInPictureViewControllerViewDidAppear:
pictureInPictureViewControllerViewWillDisappear:
pictureInPictureProxyInterfaceOrientationForTransitionAnimation:
pictureInPictureProxyViewFrameForTransitionAnimation:
pictureInPictureProxyViewControllerWindowForTransitionAnimation:
pictureInPictureProxy:willStartPictureInPictureWithAnimationType:
pictureInPictureProxy:didStartPictureInPictureWithAnimationType:
pictureInPictureProxy:failedToStartPictureInPictureWithAnimationType:error:
pictureInPictureProxy:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:
pictureInPictureProxyWillSetupPictureInPictureStop:
pictureInPictureProxy:willStopPictureInPictureWithAnimationType:reason:
pictureInPictureProxy:didStopPictureInPictureWithAnimationType:reason:
pictureInPictureProxyPictureInPictureInterruptionBegan:
pictureInPictureProxyPictureInPictureInterruptionEnded:
pictureInPictureProxy:didReceivePlaybackCommand:
pictureInPictureProxy:didUpdateStashedOrUnderLockState:
pictureInPictureProxy:didUpdateResourcesUsageReductionReasons:oldReasons:
pictureInPictureProxy:didRequestFaceTimeAction:
pictureInPictureProxy:didReceiveTestingCommand:
pictureInPictureProxyContentType:
pictureInPictureProxyCanIssueOptionalCommand:
pictureInPictureProxySupportsPrewarming:
Tq,N
pictureInPictureSupported
TB,R,N,GisPictureInPictureSupported
T@"NSString",R,N
T@"UIImageSymbolConfiguration",R,N
isContentSourceSupported
initWithSource:
canAnimatePictureInPictureTransition
isSystemPictureInPicturePossible
setAllowsPictureInPicturePlayback:
setMicrophoneEnabled:
setAlwaysStartsAutomaticallyWhenEnteringBackground:
setStatus:
setSource:
setPlayerController:
setActivitySessionIdentifier:
setCanStartAutomaticallyWhenEnteringBackground:
setBackgroundPlaybackPolicy:
setCanPausePlaybackWhenExitingPictureInPicture:
setManagesWiredSecondScreenPlayback:
isAnyPictureInPictureActive
layoutCheckTimer
_allowsPictureInPicturePlayback
_alwaysStartsAutomaticallyWhenEnteringBackground
_canStartAutomaticallyWhenEnteringBackground
_canPausePlaybackWhenExitingPictureInPicture
_requiresLinearPlayback
_microphoneEnabled
_managesWiredSecondScreenPlayback
_anyPictureInPictureActive
_scrubbingOrSeeking
_scrubbing
_seeking
_interruptedForAudioSession
_wasPlayingWhenSuspended
_routingVideoToHostedWindow
_playerController
_controlsStyle
_prerollAttributes
_activitySessionIdentifier
_backgroundPlaybackPolicy
_pictureInPictureViewController
_status
_pegasusProxy
_layoutCheckTimer
_secondScreenConnection
_sourceWindowWhenPictureInPictureStarted
_contentSourceAwaitingInvalidation
_contentSourceAwaitingSetup
_observedTimeControlStatus
_rateWhenScrubbingOrSeekingBegan
_source
_videoRectInScreen
T@"PGPictureInPictureProxy",R,N,V_pegasusProxy
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_videoRectInScreen
T@"NSTimer",R,N,V_layoutCheckTimer
T@"AVSecondScreenConnection",&,N,V_secondScreenConnection
T@"UIWindow",W,N,V_sourceWindowWhenPictureInPictureStarted
T@"<AVPictureInPictureContentSource>",W,N,V_contentSourceAwaitingInvalidation
T@"<AVPictureInPictureContentSource>",W,N,V_contentSourceAwaitingSetup
Tq,N,V_observedTimeControlStatus
scrubbingOrSeeking
TB,N,GisScrubbingOrSeeking,V_scrubbingOrSeeking
scrubbing
TB,N,GisScrubbing,V_scrubbing
seeking
TB,N,GisSeeking,V_seeking
Td,N,V_rateWhenScrubbingOrSeekingBegan
interruptedForAudioSession
TB,N,GisInterruptedForAudioSession,V_interruptedForAudioSession
TB,N,V_wasPlayingWhenSuspended
T@"<AVPictureInPictureContentSource>",W,N,V_source
Tq,N,V_status
routingVideoToHostedWindow
TB,N,GisRoutingVideoToHostedWindow,V_routingVideoToHostedWindow
contentSourceSupported
TB,R,N,GisContentSourceSupported
T@"<AVPictureInPicturePlatformAdapterDelegate>",W,N,V_delegate
T@"AVPlayerController",&,N,V_playerController
TB,N,V_allowsPictureInPicturePlayback
systemPictureInPicturePossible
TB,R,N,GisSystemPictureInPicturePossible
TB,N,V_alwaysStartsAutomaticallyWhenEnteringBackground
TB,N,V_canStartAutomaticallyWhenEnteringBackground
TB,N,V_canPausePlaybackWhenExitingPictureInPicture
TB,N,V_requiresLinearPlayback
Tq,N,V_controlsStyle
microphoneEnabled
TB,N,GisMicrophoneEnabled,V_microphoneEnabled
T@"AVPictureInPicturePrerollAttributes",&,N,V_prerollAttributes
TB,N,V_managesWiredSecondScreenPlayback
T@"NSString",C,N,V_activitySessionIdentifier
Tq,N,V_backgroundPlaybackPolicy
T@"AVPictureInPictureViewController",R,N,V_pictureInPictureViewController
anyPictureInPictureActive
TB,R,N,GisAnyPictureInPictureActive,V_anyPictureInPictureActive
prerollAttributesForAdContentWithRequiredLinearPlaybackEndTime:preferredTintColor:
initWithPlaybackStatePrerollAttributes:requiredLinearPlaybackEndTime:
prerollAttributesForSponsoredContentWithRequiredLinearPlaybackEndTime:preferredTintColor:
preferredTintColor
requiredLinearPlaybackEndTime
_pegasusAttributes
_requiredLinearPlaybackEndTime
T@"PGPlaybackStatePrerollAttributes",R,N,V_pegasusAttributes
T{?=qiIq},R,N,V_requiredLinearPlaybackEndTime
T@"UIColor",R,N
clearColor
pictureInPicturePlayerLayerView
setBackgroundColor:
setWithObject:
isReadyForDisplay
videoRect
contentDimensions
pictureInPicturePlayerLayer
videoBounds
setWithArray:
pixelBufferAttributes
setPixelBufferAttributes:
setPictureInPicturePlayerLayer:
startRedirectingVideoToLayer:forMode:
systemFontOfSize:weight:
AV_indicatorForegroundColor
_flatImageWithColor:
displayScale
CGImage
initWithDisplayScale:placeholderImage:opaque:videoRectWhenPIPBegan:
setPlaceholderContentLayerDuringPIPMode:
avkit_imageWithSymbolNamed:font:completion:
stopRedirectingVideoToLayer:
isLegibleDisplayEnabled
setLegibleDisplayEnabled:
keyPathsForValuesAffectingVideoLayerGravity
keyPathsForValuesAffectingReadyForDisplay
keyPathsForValuesAffectingVideoBounds
keyPathsForValuesAffectingVideoDisplaySize
keyPathsForValuesAffectingVideoScaled
keyPathsForValuesAffectingPixelBufferAttributes
videoDisplaySize
isVideoScaled
setVideoScaled:
startRoutingVideoToPictureInPicturePlayerLayerView
stopRoutingVideoToPictureInPicturePlayerLayerView
_pictureInPicturePlayerLayerView
_pictureInPicturePlayerLayer
T@"AVPlayerLayer",&,N,V_pictureInPicturePlayerLayer
T{CGSize=dd},R,N
T@"AVPlayerController",&,N
readyForDisplay
TB,R,N,GisReadyForDisplay
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
videoScaled
TB,N,GisVideoScaled
T@"NSDictionary",C,N
T@"AVPictureInPicturePlayerLayerView",R,N
timestamp
setTimestamp:
velocity
setVelocity:
_timestamp
_velocity
Td,V_timestamp
Td,V_velocity
setSemanticContentAttribute:
intrinsicContentSize
setMinimumSize:
isCollapsed
setCollapsed:
isIncluded
setIncluded:
setHasFlexibleContentSize:
accessibilityIdentifier
setAccessibilityIdentifier:
avkit_flatWhiteResizableTemplateImage
minimumTrackImageForState:
setContentHuggingPriority:forAxis:
setContentCompressionResistancePriority:forAxis:
setMinimumTrackImage:forState:
setMaximumTrackImage:forState:
setScrubberThumbImage:
newScrubberParentHeight
setNewScrubberParentHeight:
setThumbImage:forState:
currentScrubberParentHeight
whiteColor
isEnabled
colorWithWhite:alpha:
bezierPathWithRoundedRect:cornerRadius:
setFill
fill
setUserInteractionEnabled:
array
setNeedsLayout
estimatedFrameRate
scrubbingSpeed
timestampWhenTrackingEnded
layoutAttributes
isRemoved
_updateLayoutItem
avkit_reevaluateHiddenStateOfItem:
invalidateIntrinsicContentSize
isTracking
_shouldTrackTouchAtPoint:
isCollapsedOrExcluded
extrinsicContentSize
setValue:
isScrollScrubbing
updateScrollViewContentSizeAndOffsetIfNeeded
scrollView
contentOffsetFromValue
setContentOffset:
minimumValue
maximumValue
currentThumbView
setCornerCurve:
setCornerRadius:
createThumbView
setCurrentThumbView:
setEnabled:
setTracking:
setHighlighted:
sendActionsForControlEvents:
setHasChangedLocationAtLeastOnce:
setShouldRecoverFromPrecisionScrubbingIfNeeded:
setScrubbingSpeed:
locationInView:
_isPointerTouch
frame
setScrubsWhenTappedAnywhere:
feedbackGenerator
prepare
_updateSlowKnobMovementDetected
scheduledTimerWithTimeInterval:repeats:block:
setUpdateSlowKnobMovementDetectedTimer:
scrubsWhenTappedAnywhere
trackRectForBounds:
hasChangedLocationAtLeastOnce
previousLocationInView:
center
canChangeScrubbingSpeed
clampedEstimatedFrameRate
selectionChanged
shouldRecoverFromPrecisionScrubbingIfNeeded
_updateSlowKnobMovementDetectedForTargetValue:
setResolution:
window
endOrCancelTracking
cancelTrackingWithEvent:
setTimestampWhenTrackingEnded:
setSlowKnobMovementDetected:
previousScrubberVelocities
removeAllObjects
updateSlowKnobMovementDetectedTimer
_minTrackView
convertRect:fromView:
loadedTimeRanges
count
objectAtIndexedSubscript:
floatValue
loadedTrackOverlayView
_maxTrackView
_cornerRadius
configureSlider:thumbView:loadedTrackView:
avkit_makeSubtreeDisallowGroupBlending
hitRect
hitRectInsets
duration
contentSize
contentOffset
normalizedScrollOffset
normalizedPosition
convertPoint:toView:
_thumbHitEdgeInsets
_trackEnabled
slowKnobMovementDetected
addObject:
removeObjectsInArray:
scrubberSlowKnobMovementDetected:
keyPathsForValuesAffectingLocalizedScrubbingSpeedName
scrollViewDidScroll:
scrollViewDidZoom:
scrollViewWillBeginDragging:
scrollViewWillEndDragging:withVelocity:targetContentOffset:
scrollViewDidEndDragging:willDecelerate:
scrollViewWillBeginDecelerating:
scrollViewDidEndDecelerating:
scrollViewDidEndScrollingAnimation:
viewForZoomingInScrollView:
scrollViewWillBeginZooming:withView:
scrollViewDidEndZooming:withView:atScale:
scrollViewShouldScrollToTop:
scrollViewDidScrollToTop:
scrollViewDidChangeAdjustedContentInset:
avkit_shouldPreventExternalGestureRecognizerAtPoint:
layoutAttributesDidChange
T@"AVLayoutItemAttributes",R,N
setRemoved:
hasAlternateAppearance
setHasAlternateAppearance:
hasFullScreenAppearance
setHasFullScreenAppearance:
T{CGSize=dd},N
removed
TB,N,GisRemoved
collapsed
TB,N,GisCollapsed
included
TB,N,GisIncluded
collapsedOrExcluded
TB,R,N,GisCollapsedOrExcluded
TB,N
setScrubberParentHeight:
createScrubberTicTacImage
setLoadedTimeRanges:
localizedScrubbingSpeedName
timeIntervalSinceTrackingEnded
minimumValueImageRectForBounds:
maximumValueImageRectForBounds:
thumbRectForBounds:trackRect:value:
beginTrackingWithTouch:withEvent:
continueTrackingWithTouch:withEvent:
endTrackingWithTouch:withEvent:
alignmentRectInsets
pointInside:withEvent:
valueFromScrollView
setPreviousScrubberVelocities:
setEstimatedFrameRate:
resolution
setHitRectInsets:
scrubberParentHeight
setRate:
setScrollView:
setScrollScrubbing:
setCanChangeScrubbingSpeed:
scrubberEnabledStatus
setScrubberEnabledStatus:
setCurrentScrubberParentHeight:
_trackingStartTime
_previousValue
_previousValueChangeTime
_currentValueChangedTime
_didHaveLessThanFullScrubbingSpeedSinceTrackingBegin
_collapsed
_included
_removed
_hasAlternateAppearance
_hasFullScreenAppearance
_scrollScrubbing
_slowKnobMovementDetected
_shouldRecoverFromPrecisionScrubbingIfNeeded
_scrubsWhenTappedAnywhere
_canChangeScrubbingSpeed
_hasChangedLocationAtLeastOnce
_scrubberEnabledStatus
_estimatedFrameRate
_rate
_feedbackGenerator
_loadedTrackOverlayView
_previousScrubberVelocities
_layoutAttributes
_loadedTimeRanges
_scrubbingSpeed
_resolution
_scrubberParentHeight
_scrollView
_currentThumbView
_updateSlowKnobMovementDetectedTimer
_timestampWhenTrackingEnded
_currentScrubberParentHeight
_newScrubberParentHeight
_extrinsicContentSize
_hitRectInsets
T@"UIScrollView",&,N,V_scrollView
scrollScrubbing
TB,N,GisScrollScrubbing,V_scrollScrubbing
Tq,N,V_scrubbingSpeed
Td,N,V_resolution
TB,N,V_slowKnobMovementDetected
TB,N,V_shouldRecoverFromPrecisionScrubbingIfNeeded
T@"UIView",R,N,V_loadedTrackOverlayView
T@"UIImageView",W,N,V_currentThumbView
T@"NSMutableArray",&,N,V_previousScrubberVelocities
T@"NSTimer",&,N,V_updateSlowKnobMovementDetectedTimer
Td,N,V_timestampWhenTrackingEnded
T@"UISelectionFeedbackGenerator",R,N,V_feedbackGenerator
TB,N,V_scrubsWhenTappedAnywhere
TB,N,V_canChangeScrubbingSpeed
TB,N,V_hasChangedLocationAtLeastOnce
TB,N,V_scrubberEnabledStatus
Td,N,V_currentScrubberParentHeight
Td,N,V_newScrubberParentHeight
T@"<AVScrubberDelegate>",W,N,V_delegate
T@"NSArray",C,N,V_loadedTimeRanges
Tf,N,V_estimatedFrameRate
T{NSDirectionalEdgeInsets=dddd},N,V_hitRectInsets
Td,R,N
Td,N,SsetScrubberParentHeight:,V_scrubberParentHeight
Tf,N,V_rate
T{CGSize=dd},N,V_extrinsicContentSize
TB,N,GisRemoved,V_removed
TB,N,GisCollapsed,V_collapsed
TB,N,GisIncluded,V_included
TB,N,V_hasAlternateAppearance
TB,N,V_hasFullScreenAppearance
T@"AVLayoutItemAttributes",R,N,V_layoutAttributes
effectiveUserInterfaceLayoutDirection
isAirMessagingEnabled
_isNotificationCenterEnabled
_initPrivate
raise:format:
registerClass:forMessageVersion:
start
stop
activeChannels
setActiveChannels:
nowPlayingPlayerItem
avkitACMIdentifier
type
airTrafficController:didReceiveMessage:completion:
messageTransformerWithClass:
setStreamDataTransformer:
open
airTrafficControllerCurrentItemIdentifier:
length
close
removeObject:
containsObject:
airMessage
initWithStatus:localizedDescription:
sendResponse:
handleCommandMessage:completion:
isPrepared
shared
bonjourService:didAcceptConnectionChannel:
bonjourService:didCloseChannel:
bonjourServiceAdditionalTXTRecordInfo:
airTransport:didReceiveObject:
airTransportInputDidClose:
airTransportOutputDidOpen:
TB,R
playerItemForIdentifier:
mainService
setNowPlayingPlayerItem:
queue
_started
_mainService
_nowPlayingPlayerItem
_queue
_activeChannels
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
T@"NSMutableSet",&,N,V_activeChannels
T@"<AVAirMessageNotificationCenterDelegate>",W,N,V_delegate
T@"AVBonjourService",R,N,V_mainService
T@"AVPlayerItem",&,N,V_nowPlayingPlayerItem
initWithStartTime:duration:number:title:imageFaultBlock:
setCGImage:
startTime
number
title
cgImage
setValue:forUndefinedKey:
valueForUndefinedKey:
initialize
playbackChapterWithStartTime:duration:number:title:imageFaultBlock:
chapterAtTime:inChapters:
copyWithZone:
setCgImage:
_imageBlock
_startTime
_duration
_number
_title
_cgImage
T^{CGImage=},N,V_cgImage
Td,R,V_startTime
Td,R,V_duration
TQ,R,V_number
T@"NSString",R,C,V_title
dictionary
customPropertyStorage
setDictionary:
_customPropertyStorage
T@"NSMutableDictionary",R,N,V_customPropertyStorage
avkit_data
avkit_dataOrNil
externalMetadata
messageWithExternalMetadata:itemIdentifier:
sendMessage:completion:
haveAirPlayService
avkit_airMessageSendExternalMetadata
isEqualToArray:
AVKitData
setAVKitData:
avkit_setValue:forAVKitProperty:
avkit_valueForAVKitProperty:
avkit_airMessageSendToAppleTV
setExternalMetadata:
_externalPlaybackController
willBeginPlaybackFromAppWithBundleID:completionHandler:
prepareRouteSelectionForPlaybackFromBundleID:withCompletionHandler:
prepareRouteSelectionForPlaybackWithCompletionHandler:
canonicalLanguageIdentifierFromString:
hasAudioMediaSelectionOptions
hasLegibleMediaSelectionOptions
audioMediaSelectionOptions
setAudioMediaSelectionOptions:
setLegibleMediaSelectionOptions:
selectedMediaOptionMayHaveChanged:
_selectedMediaOptionWithMediaCharacteristic:
visualMediaSelectionOptions
_setMediaOption:mediaCharacteristic:
legibleMediaSelectionOptions
hasMediaCharacteristic:
appliesMediaSelectionCriteriaAutomatically
_mediaSelectionCriteriaCanBeAppliedAutomaticallyToLegibleMediaSelectionGroup
_disableLegibleMediaSelectionOptions:
_enableAutoMediaSelection:
currentAssetIfReady
mediaSelectionGroupForMediaCharacteristic:
assetCache
isPlayableOffline
mediaSelectionOptionsInMediaSelectionGroup:
options
minusSet:
mediaType
arrayByAddingObject:
externalPlaybackType
handlesAudioSessionInterruptions
extendedLanguageTag
_ensureUserCaptionDisplayType:
currentLegibleMediaSelectionOption
currentAudioMediaSelectionOption
propertyList
reloadOptionsAssumingMediaOptionsMayHaveChanged:
audioOptions
legibleOptions
setLegibleMediaSelectionOptions:audioMediaSelectionOptions:assumeMediaOptionMayHaveChanged:
_optionsForGroup:
playableMediaSelectionOptionsFromArray:
autoupdatingCurrentLocale
objectForKey:
localeIdentifier
languageCompare:currentLanguageCode:currentLanguageIdentifier:
sortedArrayUsingComparator:
numberWithBool:
isAC3Only
arrayWithArray:
currentItem
currentMediaSelection
selectedMediaOptionInMediaSelectionGroup:
mediaSelectionOptionsFromArray:withoutMediaCharacteristics:
mediaSelectionOptionsFromArray:withMediaCharacteristics:
arrayByAddingObjectsFromArray:
valueForKey:
avkit_persistentIdentifier
isEqualToSet:
isCC
isAuxiliary
isEasyReader
isSDH
isMain
selectMediaOptionAutomaticallyInMediaSelectionGroup:
_performAutomaticMediaSelectionForUserCaptionDisplayType:
selectMediaOption:inMediaSelectionGroup:
mediaSelectionCriteriaCanBeAppliedAutomaticallyToMediaSelectionGroup:
hasMediaSelectionOptions
currentVideoMediaSelectionOption
keyPathsForValuesAffectingCurrentAudioMediaSelectionOption
setCurrentAudioMediaSelectionOption:
keyPathsForValuesAffectingCurrentLegibleMediaSelectionOption
setCurrentLegibleMediaSelectionOption:
selectedMediaOptionMayHaveChanged
reloadOptions
reloadOptionsAndCurrentSelections
reloadAudioOptions
reloadLegibleOptions
keyPathsForValuesAffectingHasMediaSelectionOptions
keyPathsForValuesAffectingHasAudioMediaSelectionOptions
keyPathsForValuesAffectingHasLegibleMediaSelectionOptions
mediaSubTypes
unsignedIntValue
locale
displayName
localizedCaseInsensitiveCompare:
AC3Only
TB,R,GisAC3Only
main
TB,R,GisMain
TB,R,GisSDH
TB,R,GisCC
easyReader
TB,R,GisEasyReader
auxiliary
TB,R,GisAuxiliary
T@"NSNumber",R
audioFormats
weakObjectsHashTable
observedScrollViews
_removeScrollViewScrollObserver:
observer
_isScrollViewScrollObserver:
_addScrollViewScrollObserver:
minusHashTable:
setObservedScrollViews:
anyObject
_observeScrollViewDidScroll:
_updateScrollingStatus
isScrolling
avkit_isBeingScrollTested
scrollingDidEndTimer
setScrollingDidEndTimer:
setTolerance:
isScrollingQuickly
avkit_isBeingScrolled
setScrolling:
avkit_isBeingScrolledQuickly
setScrollingQuickly:
scrollViewObserverValuesDidChange:
initWithContentView:
updateObservedScrollViews
setObserver:
_scrolling
_scrollingQuickly
_observer
_observedScrollViews
_scrollingDidEndTimer
T@"UIView<AVScrollViewObserverContentView>",W,N,V_observer
T@"NSHashTable",C,N,V_observedScrollViews
scrolling
TB,N,GisScrolling,V_scrolling
scrollingQuickly
TB,N,GisScrollingQuickly,V_scrollingQuickly
T@"NSTimer",&,N,V_scrollingDidEndTimer
_commonInit
didMoveToWindow
cornerRadius
thumbView
isDescendantOfView:
_edgeFeedbackGenerator
userInteractionStarted
_modulationFeedbackGenerator
activateWithCompletionBlock:
setValue:animated:
distance
positionUpdated:
valueUpdated:
_endTracking
setThumbView:
thumbSize
setAnimatingVolumeChange:
initWithDampingRatio:
initWithDuration:timingParameters:
layoutIfNeeded
addAnimations:
addCompletion:
startAnimation
userInteractionEnded
deactivate
initWithFrame:thumbSize:
minimumSize
accessibilityLabel
gestureRecognizerShouldBegin:
isAnimatingVolumeChange
setThumbSize:
_animatingVolumeChange
_thumbView
_thumbSize
T@"UIImageView",&,N,V_thumbView
animatingVolumeChange
TB,N,GisAnimatingVolumeChange,V_animatingVolumeChange
Td,N,SsetThumbSize:,V_thumbSize
behaviorContextClass
willMoveToContext:
behaviorContext
setBehaviorContext:
T@,W,N
didMoveToContext:
willRemoveFromContext:
didRemoveFromContext:
playerForContentTransitionType:
willBeginContentTransition
didUpdateContentTransitionProgress:
willCompleteContentTransition
didCompleteContentTransition
willCancelContentTransition
didCancelContentTransition
_behaviorContext
T@"AVNewsWidgetPlayerBehaviorContext",W,N,V_behaviorContext
setInheritsTiming:
T@"CALayerHost",R,D,N
setAutoresizingMask:
hostView
contextId
setContextId:
beginTime
setBeginTime:
imageQueueSize
setDeferringGeometryUpdates:
setNeedsGeometryUpdate:
setContentDimensions:
setImageQueueSize:
_updateGeometryIfNeeded
performWithoutAnimation:
lastKnownBounds
lastKnownFrame
setLastKnownFrame:
setLastKnownBounds:
needsGeometryUpdate
isDeferringGeometryUpdates
blackColor
setTransform:
setCenter:
setFrame:contentDimensions:imageQueueSize:
_needsGeometryUpdate
_deferringGeometryUpdates
_hostView
_imageQueueSize
_contentDimensions
_lastKnownFrame
_lastKnownBounds
T@"AVPictureInPictureCALayerHostView",R,N,V_hostView
T{CGSize=dd},N,V_imageQueueSize
T{CGSize=dd},N,V_contentDimensions
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_lastKnownFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_lastKnownBounds
TB,N,V_needsGeometryUpdate
deferringGeometryUpdates
TB,N,GisDeferringGeometryUpdates,V_deferringGeometryUpdates
TI,N
Td,N
_menuForOptions:withIdentifier:
_updateSelectionStateForMenu:selectedIndex:
audibleOptionsMenu
legibleOptionsMenu
localizedDisplayName
mediaSelectionMenuController:didSelectOption:atIndex:
actionWithTitle:image:identifier:handler:
audibleOptions
systemImageNamed:
menuWithTitle:image:identifier:options:children:
children
setState:
initWithAudibleOptions:legibleOptions:
setAudibleOptions:
setLegibleOptions:
setCurrentAudibleOptionIndex:
setCurrentLegibleOptionIndex:
currentAudibleOptionIndex
currentLegibleOptionIndex
_audibleOptionsMenu
_legibleOptionsMenu
_audibleOptions
_legibleOptions
_currentAudibleOptionIndex
_currentLegibleOptionIndex
T@"<AVMediaSelectionMenuDelegate>",W,N,V_delegate
T@"NSArray",C,N,V_audibleOptions
T@"NSArray",C,N,V_legibleOptions
TQ,N,V_currentAudibleOptionIndex
TQ,N,V_currentLegibleOptionIndex
T@"UIMenu",R
initWithTarget:action:
setCancelsTouchesInView:
unionSet:
_touchesEndedOrCancelled:
canBePreventedByGestureRecognizer:
canPreventGestureRecognizer:
shouldRequireFailureOfGestureRecognizer:
shouldBeRequiredToFailByGestureRecognizer:
touchesBegan:withEvent:
touchesMoved:withEvent:
touchesEstimatedPropertiesUpdated:
touchesEnded:withEvent:
touchesCancelled:withEvent:
_trackedTouches
volumeController
currentRouteHasVolumeControl
isAnimatingAwayFromZero
volume
isAnimatingTowardsZero
setAnimatingTowardsZero:
setVolumeToRestore:
volumeToRestore
setVolume:
setAnimatingAwayFromZero:
initWithPlayerController:
canAnimateVolumeTowardsZero
canAnimateVolumeAwayFromZero
setProgressTowardsZero:
setProgressAwayFromZero:
restoreVolumeIfNeeded
_animatingTowardsZero
_animatingAwayFromZero
_volumeToRestore
Td,N,V_volumeToRestore
animatingTowardsZero
TB,N,GisAnimatingTowardsZero,V_animatingTowardsZero
animatingAwayFromZero
TB,N,GisAnimatingAwayFromZero,V_animatingAwayFromZero
T@"AVPlayerController",R,N,V_playerController
pictureInPictureActionButtonTapped
playbackControlsDidChangePlayerVolume:
playbackControlsDidToggleMuted:
playbackControlsDidUpdateVisibilityOfLoadingIndicator:
T@"AVHomeIPCameraBehaviorContext",W,N,V_behaviorContext
isHidden
superlayer
masksToBounds
convertRect:fromLayer:
avkit_visibleRectForRect:inLayer:
avkit_sampleBufferDisplayLayerPlayerController
setPIPModeEnabled:
initWithSourceLayer:playerController:
avkit_makePlayerControllerIfNeeded:
avkit_isVisible
avkit_beginReducingResourcesForPictureInPictureViewController:playerController:
avkit_endReducingResourcesForPictureInPictureViewController:playerController:
avkit_contentSourceType
avkit_wantsManagedSecondScreenPlayback
T@"UIWindow",R,N
_updatePlaybackRateMenuIfNeeded
_loadPlaybackSpeedControlImageWithCompletionHandler:
_updatePlaybackRateMenuItemStatesIfNeeded
_reconstructPlaybackRateMenuItems
playbackRateCollection
rates
initWithCapacity:
compactLocalizedName
selectedRate
setSelectedRate:
indexOfObject:
objectAtIndex:
setPlaybackRateCollection:
menu
_playbackRateMenu
_activeMenuItems
_activePlaybackRateCollection
_activeSelectedPlaybackRate
_activeMenuHasImage
_playbackRateCollection
T@"AVPlaybackRateCollection",&,N,V_playbackRateCollection
T@"UIMenu",R,N
_handlePanGesture:
setMaximumNumberOfTouches:
_handlePinchGesture:
_setEndsOnSingleTouch:
_setRequiresSystemGesturesToFail:
_handleRotationGesture:
recognizers
removeGestureRecognizer:
contentTransitioningViewGestureRecognizer
addGestureRecognizer:
transitionInteraction
setView:
addRecognizersToView:
isPanToDismissEnabled
panGestureRecognizer
pinchGestureRecognizer
_locationRecognizer
coordinateSpace
convertPoint:fromCoordinateSpace:
_isWaitingToContinue
setLastReportedLocationInWindow:
lastReportedLocationInWindow
_filteredUntranslatedLocationInWindow
initialInterfaceOrientation
locationInWindow
anchorLocationInWindow
velocityInView:
velocityInWindow
scale
_rotation
rotationGestureRecognizer
transitionDriverDelegate
transitionDriver:gestureRecognizer:shouldReceiveTouch:
translationInView:
transitionDriver:shouldDriveTransitionInteractionOfType:
setPinchToDismissEnabled:
setPinchToPresentEnabled:
isPinchToDismissEnabled
isPinchToPresentEnabled
setPanToDismissEnabled:
state
_beginTracking:
setPreviousPinchScale:
_cancel
_finish
_setHasContinuedIfNeeded
previousPinchScale
setScale:
hasRotated
setRotation:
transitionDriverDidContinueInteraction:
setHasRotated:
rotation
_setRotation:
_updateLastNonZeroVelocityDirection
isWaitingForBoundsChange
lastTouchTimestamp
initialCoordinateSpaceBounds
_untranslatedUnfilteredLocationInFixedCoordinateSpace
setGestureLocationAfterBoundsChange:
setWaitingForLocationChangeAfterBoundsChange:
setWaitingForBoundsChange:
isWaitingForLocationChangeAfterBoundsChange
gestureLocationAfterBoundsChange
setTimestampOfTouchWithLocationChangeAfterBoundsChange:
isWaitingForTransition
timestampOfTouchWithLocationChangeAfterBoundsChange
setWaitingForTransition:
setInitialInterfaceOrientation:
setInitialCoordinateSpaceBounds:
setTransitionInteraction:
_resetGesturesIfPossible
transitionDriver:didBeginTrackingTransitionInteraction:readyToProceedHandler:
transitionDriverDidFinishInteraction:
_reset
transitionDriverDidCancelInteraction:
angleOfVelocityInWindow
setLastNonZeroVelocityWasDownward:
setAnchorLocationInWindow:
hasContinued
setHasContinued:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
gestureRecognizer:shouldReceiveEvent:
willMoveToView:
didMoveToView:
T@"UIView",R,W,N
translationInWindow
transitionDriver:shouldRequireFailureOfGestureRecognizer:
setTransitionDriverDelegate:
rotationVelocity
pinchScale
pinchVelocity
lastNonZeroVelocityWasDownward
setContentTransitioningViewGestureRecognizer:
enabled
TB,R,N,GisEnabled
T@"<AVTransitionDriverDelegate>",W,N
Tq,R,N
T@"UIPanGestureRecognizer",W,N
_enabled
_pinchToDismissEnabled
_pinchToPresentEnabled
_panToDismissEnabled
_waitingForTransition
_waitingForBoundsChange
_waitingForLocationChangeAfterBoundsChange
_hasContinued
_hasRotated
_lastNonZeroVelocityWasDownward
_contentTransitioningViewGestureRecognizer
_transitionDriverDelegate
_previousPinchScale
__rotation
_panGestureRecognizer
_pinchGestureRecognizer
_rotationGestureRecognizer
_recognizers
_timestampOfTouchWithLocationChangeAfterBoundsChange
_initialInterfaceOrientation
_transitionInteraction
_view
_gestureLocationAfterBoundsChange
_lastReportedLocationInWindow
_anchorLocationInWindow
_initialCoordinateSpaceBounds
pinchToDismissEnabled
TB,N,GisPinchToDismissEnabled,V_pinchToDismissEnabled
pinchToPresentEnabled
TB,N,GisPinchToPresentEnabled,V_pinchToPresentEnabled
panToDismissEnabled
TB,N,GisPanToDismissEnabled,V_panToDismissEnabled
Td,N,V_previousPinchScale
Td,N,S_setRotation:,V__rotation
T@"UIPanGestureRecognizer",R,N,V_panGestureRecognizer
T@"UIPinchGestureRecognizer",R,N,V_pinchGestureRecognizer
T@"UIRotationGestureRecognizer",R,N,V_rotationGestureRecognizer
T@"NSArray",R,N,V_recognizers
waitingForTransition
TB,N,GisWaitingForTransition,V_waitingForTransition
waitingForBoundsChange
TB,N,GisWaitingForBoundsChange,V_waitingForBoundsChange
waitingForLocationChangeAfterBoundsChange
TB,N,GisWaitingForLocationChangeAfterBoundsChange,V_waitingForLocationChangeAfterBoundsChange
Td,N,V_timestampOfTouchWithLocationChangeAfterBoundsChange
TB,N,V_hasContinued
TB,N,V_hasRotated
Tq,N,V_initialInterfaceOrientation
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_initialCoordinateSpaceBounds
T{CGPoint=dd},N,V_gestureLocationAfterBoundsChange
T{CGPoint=dd},N,V_lastReportedLocationInWindow
T{CGPoint=dd},N,V_anchorLocationInWindow
TB,N,V_lastNonZeroVelocityWasDownward
Tq,N,V_transitionInteraction
T@"UIView",W,N,V_view
TB,N,GisEnabled,V_enabled
T@"<AVTransitionDriverDelegate>",W,N,V_transitionDriverDelegate
T@"UIPanGestureRecognizer",W,N,V_contentTransitioningViewGestureRecognizer
orderedSet
activeConnection
_updateActiveConnection
initWithScene:
addSecondScreen:
removeSecondScreen:
isReadyToConnect
setPreferredConnection:
avkit_secondScreenScenes
setAllowsUpdatingActiveConnection:
_connectionForPlayer:
initWithPlayer:playerLayer:
addConnection:
startUpdates
connections
_insertConnection:atIndex:
connectWithScreen:active:
reverseObjectEnumerator
lastObject
preferredConnection
indexSetWithIndex:
moveObjectsAtIndexes:toIndex:
isTVOutScreen
secondScreens
insertObject:atIndex:
isActive
connectionPassingTest:
isAvailable
allowsUpdatingActiveConnection
_targetScreen
requiresTVOutScreen
connectWithSecondScreenConnection:
_allowsUpdatingActiveConnection
_secondScreens
_connections
T@"NSMutableOrderedSet",R,N,V_secondScreens
T@"NSMutableOrderedSet",R,N,V_connections
TB,N,V_allowsUpdatingActiveConnection
avkit_supportsInteractiveCounterRotationDismissals
presentedViewController
presentationController
containerView
transitionContext
isPresenting
presentationFromView
isDismissing
dismissalToView
presentingViewController
rotatableSecondWindow
rootViewController
presentingTransition
wasInitiallyInteractive
dismissingTransition
dismissing
presenting
supportsInteractiveCounterRotationDismissals
_supportedInterfaceOrientationsForWindow:
supportedInterfaceOrientations
viewForKey:
initWithPresentationController:configuration:
presentingView
presentationWindow
rotatableWindowViewController
presentedView
hasActiveTransition
currentTransition
transitionType
canBeInteractivelyDismissed
configuration
sourceView
setSourceView:
touchBlockingView
backgroundView
setTransitionContext:
allowsSecondWindowPresentations
setAllowsSecondWindowPresentations:
wasInitiallyPresentedWithoutSecondWindow
setWasInitiallyPresentedWithoutSecondWindow:
setRotatableSecondWindow:
avFullScreenViewController
setPresentingTransition:
setDismissingTransition:
allowsPausingWhenTransitionCompletes
setAllowsPausingWhenTransitionCompletes:
_allowsSecondWindowPresentations
_wasInitiallyPresentedWithoutSecondWindow
_allowsPausingWhenTransitionCompletes
_configuration
_sourceView
_touchBlockingView
_backgroundView
_transitionContext
_rotatableSecondWindow
_avFullScreenViewController
_presentingTransition
_dismissingTransition
_presentationController
T@"AVPresentationController",R,W,N,V_presentationController
T@"AVPresentationConfiguration",R,N,V_configuration
T@"UIView",W,N,V_sourceView
T@"AVPresentationContainerView",R,W,N
T@"UIWindow",R,W,N
T@"UIView",R,N,V_touchBlockingView
T@"UIView",R,N,V_backgroundView
T@"UIViewController",R,W,N
T@"<UIViewControllerContextTransitioning>",W,N,V_transitionContext
TB,N,V_allowsSecondWindowPresentations
TB,N,V_wasInitiallyPresentedWithoutSecondWindow
T@"UIWindow",&,N,V_rotatableSecondWindow
T@"AVFullScreenViewController",R,W,N,V_avFullScreenViewController
T@"AVFullScreenViewController",R,W,N
T@"AVPresentationContextTransition",&,N,V_presentingTransition
T@"AVPresentationContextTransition",&,N,V_dismissingTransition
T@"AVPresentationContextTransition",R,N
TB,R,N,GisPresenting
TB,R,N,GisDismissing
TB,N,V_allowsPausingWhenTransitionCompletes
setIncludesPeerToPeer:
mainRunLoop
scheduleInRunLoop:forMode:
mainQueue
_updatedAirPlayPairedDeviceAsync
endDiscovery
removeObserver:
searchForServicesOfType:inDomain:
serviceType
_isServiceForCurrentAirPlayDevice:
airTransportSenderForNetService:
didConnectToBonjourService:channel:
setAirplayDeviceRef:
airplayDeviceRef
TXTRecordData
dictionaryFromTXTRecordData:
hostName
port
identifierForNetService:
getInputStream:outputStream:
channelWithInput:output:
startMonitoring
resolveWithTimeout:
stopMonitoring
removeFromRunLoop:forMode:
keyEnumerator
initWithData:encoding:
name
netServiceBrowserWillSearch:
netServiceBrowserDidStopSearch:
netServiceBrowser:didNotSearch:
netServiceBrowser:didFindDomain:moreComing:
netServiceBrowser:didFindService:moreComing:
netServiceBrowser:didRemoveDomain:moreComing:
netServiceBrowser:didRemoveService:moreComing:
netServiceWillPublish:
netServiceDidPublish:
netService:didNotPublish:
netServiceWillResolve:
netServiceDidResolveAddress:
netService:didNotResolve:
netServiceDidStop:
netService:didUpdateTXTRecordData:
netService:didAcceptConnectionWithInputStream:outputStream:
initWithNetServiceType:
beginDiscovery
netServiceBrowser
_discovering
_resolvedServices
_resolvingServices
_monitoringServices
_netServiceIdentifierToChannel
_observeAirPlayVideoActiveDidChange
_observeMRDeviceInfoDidChange
_serviceType
_netServiceBrowser
_airplayDeviceRef
T@"NSNetServiceBrowser",R,N,V_netServiceBrowser
T^v,N,V_airplayDeviceRef
T@"NSString",R,N,V_serviceType
T@"<AVBonjourServiceClientDelegate>",W,N,V_delegate
_setNowPlayingInfoNeedsUpdate
_handleRemoteCommand:options:
numberWithUnsignedInt:
_updateNowPlayingInfo:commandsAndStates:
_makeCommandsAndStatesDictionaryForPlayerController:
_updateRegisteredRemoteCommandEnabledStatesWithCommandsAndStates:
mainBundle
bundleIdentifier
playerControllerToActivateAfterDelay
setPlayerControllerToActivateAfterDelay:
stopNowPlayingUpdatesForPlayerController:
startNowPlayingUpdatesTimer
setStartNowPlayingUpdatesTimer:
_updateNowPlayingInfoIfNeeded
performSelector:withObject:afterDelay:
cancelPreviousPerformRequestsWithTarget:selector:object:
_makeNowPlayingInfo
hasContent
metadata
numberWithDouble:
hasEnabledVideo
hasEnabledAudio
_availableLanguageOptions
_currentLanguageOptions
timing
currentValue
minTime
currentDate
metadataItemsFromArray:filteredByIdentifier:
firstObject
stringValue
dataValue
canPause
canPlay
canTogglePlayback
numberWithInt:
canSeek
canSeekChapterForward
canScanForward
canSeekChapterBackward
canScanBackward
pause:
togglePlayback:
seekChapterForward:
seekByTimeInterval:
seekChapterBackward:
doubleValue
beginScanningForward:
endScanningForward:
beginScanningBackward:
endScanningBackward:
seekToTime:
mediaRemoteIdentifier
_createMediaRemoteLanguageOptionGroupWithAVMediaSelectionOptions:
_createMediaRemoteLanguageOptionWithAVMediaSelectionOption:
_mediaRemoteLanguageOptionCharacteristicsForAVMediaSelectionOption:
_avMediaCharacteristics
_mediaRemoteLanguageOptionCharacteristicForAVMediaCharacteristic:
sharedNowPlayingInfoControllerWithCompletion:
setOverrideParentApplicationDisplayIdentifier:
startNowPlayingUpdatesForPlayerController:afterDelay:
overrideParentApplicationDisplayIdentifier
_playerControllerCurrentTimeJumpedObserver
_nowPlayingInfoNeedsUpdate
_commandHandlerIdentifier
_keyValueObservationController
_backgroundQueue
_overrideParentApplicationDisplayIdentifier
_playerControllerToActivateAfterDelay
_startNowPlayingUpdatesTimer
T@"AVPlayerController",W,N,V_playerControllerToActivateAfterDelay
T@"NSTimer",W,N,V_startNowPlayingUpdatesTimer
TB,N,GisEnabled
T@"NSString",C,N,V_overrideParentApplicationDisplayIdentifier
gradientView
alpha
setGradientView:
_gradientView
T@"CABackdropLayer",R,D,N
T@"AVStatusBarBackgroundGradientViewSubview",&,N,V_gradientView
CGColor
setColors:
setLocations:
filterWithType:
setCompositingFilter:
gradientOpacity
setGradientOpacity:
_gradientOpacity
T@"CAGradientLayer",R,D,N
Td,N,V_gradientOpacity
connectedScenes
predicateWithBlock:
filteredSetUsingPredicate:
avkit_possiblePrimaryWindowScene
_findWindowForControllingOverallAppearanceInWindowScene:
openSessions
persistentIdentifier
scene
avkit_possibleWindowForControllingOverallAppearance
avkit_windowSceneWithSessionIdentifier:
_stopAllObservation
initWithValue:oldValue:keyPath:observationToken:
initWithObservedObject:observer:keyPaths:retainingObservedObject:includeInitialValue:includeChanges:changesBlock:
token
startObserving:completion:
startObserving:keyPaths:includeInitialValue:includeChanges:observationHandler:
initWithName:object:userInfo:
stopObserving
removeObjectForKey:
allValues
stopObserving:
_unfairLock
_proxyObserversByTokens
_notificationObservers
_notificationCenters
_owner
processInfo
globallyUniqueString
includeChanges
keyPaths
addObserver:forKeyPath:options:context:
includeInitialValue
valueForKeyPath:
_handleValueChangeForKeyPath:ofObject:oldValue:newValue:context:
removeObserver:forKeyPath:context:
changesBlock
observeValueForKeyPath:ofObject:change:context:
_retainedObservedObject
_unsafeUnretainedObservedObject
_canHandleChanges
_includeInitialValue
_includeChanges
_token
_keyPaths
_changesBlock
T@"NSString",R,N,V_token
TB,R,N,V_includeInitialValue
TB,R,N,V_includeChanges
T@"NSSet",R,N,V_keyPaths
T@?,R,N,V_changesBlock
null
oldValue
keyPath
observationToken
_value
_oldValue
_keyPath
_observationToken
T@,R,N,V_value
T@,R,N,V_oldValue
T@"NSString",R,N,V_keyPath
T@,R,N,V_observationToken
airDictionaryRepresentation
itemWithAirDictionaryRepresentation:
contextWillHandleUserAction:
skipToNextItem
skipToPreviousItem
T@"AVMusicAppBehaviorContext",W,N,V_behaviorContext
avkit_musicAppBehaviorContext
avkit_setMusicBehaviorData:
T@"AVMusicAppBehaviorContext",R,W,N
_updateSkipItemButtonsEnabled
_updatePlaybackControlsInclusion
behavior
setSeekTargetTime:
isSkipToPreviousItemButtonEnabled
isSkipToNextItemButtonEnabled
playbackControlsController
setStartLeftwardContentTransitionButtonEnabled:
setStartRightwardContentTransitionButtonEnabled:
showsSkipItemButtons
setPlaybackControlsIncludeStartContentTransitionButtons:
setContentTransitionAction:
isPresentingFullScreenFromInline
isPresentedFullScreen
setPlaybackControlsIncludeVolumeControls:
setPlaybackControlsIncludeTransportControls:
setPlaybackControlsIncludeDisplayModeControls:
T@"AVPlayerViewController",R,W,N
initWithAVKitOwner:
willAddBehavior:
didAddBehavior:
willRemoveBehavior:
didRemoveBehavior:
setBehavior:
viewDidLoad
contentViewWillTransitionToSize:withCoordinator:
willStartPictureInPictureWithViewController:
didStopPictureInPicture
makePlaybackContentContainerWithFrame:activeContentView:
playerControllerDidChange
playerViewController:didCollectMetricsEvent:
setSkipToNextItemButtonEnabled:
setSkipToPreviousItemButtonEnabled:
setShowsSkipItemButtons:
seekTargetTime
_showsSkipItemButtons
_skipToPreviousItemButtonEnabled
_skipToNextItemButtonEnabled
_behavior
_seekTargetTime
T@"AVMusicAppBehavior",W,N,V_behavior
T@"NSNumber",&,N,V_seekTargetTime
TB,N,V_showsSkipItemButtons
skipToPreviousItemButtonEnabled
TB,N,GisSkipToPreviousItemButtonEnabled,V_skipToPreviousItemButtonEnabled
skipToNextItemButtonEnabled
TB,N,GisSkipToNextItemButtonEnabled,V_skipToNextItemButtonEnabled
T@"AVPlayerViewController",R,W,N,V_playerViewController
URLForResource:withExtension:
dataWithContentsOfURL:
imageWithData:
pathExtension
stringByDeletingPathExtension
checkResourceIsReachableAndReturnError:
imageForResource:size:
URLForMovieResource:
avkit_asWindowScene
avkit_screenType
avkit_screenHasWindowsExcludingWindow:
avkit_isForeground
_isWindowSceneAvailable
_updatePreferredDisplayCriteria
debugAssistant
setScene:
setWindow:
setWindowScene:
setRootViewController:
avkit_resetPreferredModeSwitchRequest
preferredDisplayCriteria
videoDynamicRange
refreshRate
avkit_setPreferredRefreshRate:HDRMode:
sceneBounds
debugInfoDisplay
setDebugInfoDisplay:
_TVOutScreen
_window
_windowScene
_screen
_state
_debugInfoDisplay
T@"UIWindow",&,N,V_window
T@"UIWindowScene",R,W,N,V_windowScene
T@"UIScreen",R,W,N,V_screen
Tq,R,N,V_state
T@"CADisplay",&,N,V_debugInfoDisplay
TVOutScreen
TB,R,N,GisTVOutScreen,V_TVOutScreen
caseInsensitiveCompare:
initWithString:separatedByString:
keyEquals:
first
second
_first
_second
T@"NSString",R,N,V_first
T@"NSString",R,N,V_second
eventRunLoop
streamStatus
inputStream
hasBytesAvailable
initWithLength:
mutableBytes
read:maxLength:
setLength:
increaseLengthBy:
streamError
outputStream
hasSpaceAvailable
_readDataNonBlockingUpToMaxLength:
bytes
write:maxLength:
_readAvailableData
receiveResponseBlocks
streamDataTransformer
reverseTransformerForMessageData:
removeObjectAtIndex:
isIncomplete
shouldCallReverseTransformerAgain
performOnAirChannelQueueSync:
writeMore
terminatePendingRequests
_outputStreamDidOpen
_inputStreamDidClose
_outputStreamCanWrite
_inputStreamHasBytesAvailable
stream:handleEvent:
initWithInput:output:
isReadyToSend
canWrite
_writeData:
_inputStream
_outputStream
T@"NSInputStream",R,N,V_inputStream
T@"NSOutputStream",R,N,V_outputStream
distantFuture
timeIntervalSinceNow
timerWithTimeInterval:repeats:block:
currentRunLoop
addTimer:forMode:
initWithBlock:
setName:
performSync:
__performBlock:
performSelector:onThread:withObject:waitUntilDone:
startEventThreadIfNecessary
timeIntervalSinceReferenceDate
subdataWithRange:
setObject:atIndexedSubscript:
performAsync:
_isRunningOnAirChannelQueue
airTransportQueue
dataForMessage:
writeData:
eventThread
T@"NSRunLoop",R,N
T@"NSThread",R,N
requestCompletions
sendObject:receiveResponse:
_outputQueue
_leftoverInputData
_requestCompletions
_streamDataTransformer
_receiveResponseBlocks
T@"NSMutableArray",R,N,V_receiveResponseBlocks
T@"<AVAirTransportTransformationProtocol>",&,N,V_streamDataTransformer
T@"<AVAirTransportDelegate>",W,N,V_delegate
currentThread
_isDispatcherEnabled
bonjourServiceClient
channel
dictionaryRepresentation
setCurrentNetService:
setChannel:
didChangeTargetForAirMessageDispatcher:
currentNetService
_currentNetService
_channel
_bonjourServiceClient
T@"AVAirTransport",&,N,V_channel
T@"AVBonjourServiceClient",R,N,V_bonjourServiceClient
T@"<AVAirMessageDispatcherClientDelegate>",W,N,V_delegate
T@"NSNetService",&,N,V_currentNetService
_observeSourceView
observeSourceViewTimer
setObserveSourceViewTimer:
videoCallPlayerController
setPictureInPicturePossible:
contentSource
activeVideoCallSourceView
avkit_isInAWindowAndVisible
setContentSource:
preferredContentSize
setPictureInPictureViewController:
parentViewController
_removeFromParent
addChildViewController:
didMoveToParentViewController:
_setLastKnownIsVisible:videoRectInWindow:
lastKnownIsVisible
lastKnownVideoRectInWindow
setLastKnownIsVisible:
setLastKnownVideoRectInWindow:
pictureInPictureController
contentSourceVideoRectInWindowChanged
willMoveToParentViewController:
removeFromParentViewController
startObservingSourceView
stopObservingSourceView
setPictureInPictureController:
_lastKnownIsVisible
_videoCallPlayerController
_observeSourceViewTimer
_pictureInPictureController
_contentSource
_lastKnownVideoRectInWindow
T@"AVPictureInPictureViewController",W,N,V_pictureInPictureViewController
T@"AVVideoCallPlayerController",R,N,V_videoCallPlayerController
T@"NSTimer",&,N,V_observeSourceViewTimer
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_lastKnownVideoRectInWindow
TB,N,V_lastKnownIsVisible
T@"AVPictureInPictureController",W,N,V_pictureInPictureController
T@"AVPictureInPictureControllerContentSource",W,N,V_contentSource
_pictureInPicturePossible
pictureInPicturePossible
TB,N,GisPictureInPicturePossible,V_pictureInPicturePossible
avkit_isEffectivelyFullScreen
viewIfLoaded
statusBarManager
prefersStatusBarHidden
preferredStatusBarStyle
isStatusBarHidden
statusBarStyle
setNeedsStatusBarAppearanceUpdate
preferredWhitePointAdaptivityStyle
_effectiveUIClientSettings
whitePointAdaptivityStyle
setNeedsWhitePointAdaptivityStyleUpdate
prefersHomeIndicatorAutoHidden
homeIndicatorAutoHidden
setNeedsUpdateOfHomeIndicatorAutoHidden
avkit_setNeedsUpdatePreferencesIfNeeded
_disableTouchCancellationOnRotation
instancesRespondToSelector:
seymourBehaviorContext:didRecieveDoneButtonTapWithDismissalBlock:
T@"AVSeymourBehaviorContext",W,N,V_behaviorContext
initWithActivityIndicatorStyle:
setColor:
setAccessibilityLabel:
setTitle:forState:
titleLabel
systemFontOfSize:
setFont:
button
loadingIndicator
startAnimating
stopAnimating
initWithTitle:
setShowsLoadingIndicator:
showsLoadingIndicator
setLoadingIndicator:
_collapsedOrExcluded
_showsLoadingIndicator
_button
_loadingIndicator
T@"UIActivityIndicatorView",&,N,V_loadingIndicator
T@"AVButton",R,N,V_button
TB,N,V_showsLoadingIndicator
TB,R,N,GisCollapsedOrExcluded,V_collapsedOrExcluded
clientIdentifier
sceneIdentifier
prefersSystemVolumeHUDHidden
stringByAppendingString:
_systemController
volumeCategoryForAudioCategory:
currentSystemController
windowSceneForVolumeDisplay
isOnScreenForVolumeDisplay
volumeAudioCategory
isOnScreen
T@"UIWindowScene",R,N
onScreenForVolumeDisplay
TB,R,N,GisOnScreenForVolumeDisplay
onScreen
TB,R,N,GisOnScreen
initWithSceneIdentifier:clientIdentifier:
setPrefersSystemVolumeHUDHidden:
_prefersSystemVolumeHUDHidden
_clientIdentifier
_sceneIdentifier
T@"<AVVolumeHUDAssertionDelegate>",W,N,V_delegate
T@"NSString",R,N,V_clientIdentifier
T@"NSString",R,N,V_sceneIdentifier
TB,N,V_prefersSystemVolumeHUDHidden
_setupSystemController
_unobserveSystemControllerIfNeeded
isChangingVolume
maximumTargetVolumeSinceChangingVolumeBegan
numberWithFloat:
setTargetVolumeInternal:
setMaximumTargetVolumeSinceChangingVolumeBegan:
_postNotificationForNameIfFullyInitialized:userInfo:
_applyProposedVolumeIfNeeded
setChangingVolume:
setVolumeChangesThrottled:
setClientWithIdentifier:forWindowSceneSessionWithIdentifier:
windowSceneVolumeHUDAssertions
objectsPassingTest:
_appAdoptsUISceneLifecycle
addVolumeDisplay:
setNeedsUpdate
setSystemVolumeHUDEnabled:forWindowSceneSessionIdentifier:
_setSystemVolumeHUDEnabled:
sharedSystemController
setAttribute:forKey:error:
isFullyInitialized
postNotificationName:object:userInfo:
sharedAVSystemController
_requestSharedSystemController
getVolume:forCategory:
_observeSystemControllerIfNeeded
setSharedSystemController:
setCurrentRouteHasVolumeControl:
setFullyInitialized:
_handleSystemControllerServerDiedNotification
addObserver:selector:name:object:
_handleCurrentRouteHasVolumeControlDidChangeNotification:
_handleSystemVolumeDidChangeNotification:
removeObserver:name:object:
volumeCategory
_performOnMainThread:
targetVolumeInternal
volumeChangesThrottled
_applyProposedVolumeImmediately
setVolumeTo:forCategory:
_removeVolumeHUDAssertionsForClientID:
mutableCopy
setSystemVolumeHUDEnabled:forSceneVolumeHudAssertion:
beginChangingVolume
endChangingVolume
setTargetVolume:
changingVolume
TB,R,N,GisChangingVolume
Tf,R,N
T@"NSMutableSet",R,N
uniqueIdentifier
windowSceneSessionIdentifier
_systemControllerQueue
_observingSystemController
_changingVolume
_currentRouteHasVolumeControl
_volumeChangesThrottled
_fullyInitialized
_volume
_sharedSystemController
_targetVolumeInternal
_maximumTargetVolumeSinceChangingVolumeBegan
_volumeCategory
_uniqueIdentifier
_windowSceneSessionIdentifier
TB,N,GisChangingVolume,V_changingVolume
TB,N,V_currentRouteHasVolumeControl
Tf,N,V_volume
TB,N,V_volumeChangesThrottled
T@"NSNumber",&,N,V_targetVolumeInternal
T@"NSNumber",&,N,V_maximumTargetVolumeSinceChangingVolumeBegan
T@"NSString",R,N,V_volumeCategory
T@"AVSystemController",&,N,V_sharedSystemController
fullyInitialized
TB,N,GisFullyInitialized,V_fullyInitialized
T@"NSString",R,N,V_uniqueIdentifier
T@"NSString",R,N,V_windowSceneSessionIdentifier
T@"AVZoomingBehaviorContext",W,N,V_behaviorContext
setPreservesSuperviewLayoutMargins:
setInsetsLayoutMarginsFromSafeArea:
setLayoutMargins:
setNeedsUpdateConstraints
unobscuredTopAreaLayoutGuideProvidingView
leadingAnchor
displayModeControlsAreaLayoutGuideProvidingView
trailingAnchor
constraintEqualToAnchor:constant:
volumeControlsAreaLayoutGuideProvidingView
topAnchor
bottomAnchor
unobscuredCenterAreaLayoutGuideProvidingView
avkit_constraintGreaterThanOrEqualToAnchor:constant:priority:
avkit_constraintLessThanOrEqualToAnchor:constant:priority:
safeAreaLayoutGuide
constraintGreaterThanOrEqualToAnchor:constant:
constraintLessThanOrEqualToAnchor:constant:
transportControlsAreaLayoutGuideProvidingView
animatedUnobscuredCenterAreaLayoutGuideProvidingView
constraintEqualToAnchor:
areVolumeControlsVisible
setActive:
areTransportControlsVisible
updateConstraints
requiresConstraintBasedLayout
setAreVolumeControlsVisible:
setAreTransportControlsVisible:
transportControlsAreaLayoutGuide
displayModeControlsAreaLayoutGuide
volumeControlsAreaLayoutGuide
unobscuredCenterAreaLayoutGuide
animatedUnobscuredCenterAreaLayoutGuide
unobscuredTopAreaLayoutGuide
_needsInitialConstraints
_transportControlsVisibleConstraint
_transportControlsHiddenConstraint
_volumeControlsVisibleConstraint
_volumeControlsHiddenConstraint
_areTransportControlsVisible
_areVolumeControlsVisible
_transportControlsAreaLayoutGuide
_displayModeControlsAreaLayoutGuide
_volumeControlsAreaLayoutGuide
_unobscuredCenterAreaLayoutGuide
_animatedUnobscuredCenterAreaLayoutGuide
_unobscuredTopAreaLayoutGuide
_transportControlsAreaLayoutGuideProvidingView
_displayModeControlsAreaLayoutGuideProvidingView
_volumeControlsAreaLayoutGuideProvidingView
_unobscuredTopAreaLayoutGuideProvidingView
_unobscuredCenterAreaLayoutGuideProvidingView
_animatedUnobscuredCenterAreaLayoutGuideProvidingView
T@"UIView",R,N,V_transportControlsAreaLayoutGuideProvidingView
T@"UIView",R,N,V_displayModeControlsAreaLayoutGuideProvidingView
T@"UIView",R,N,V_volumeControlsAreaLayoutGuideProvidingView
T@"UIView",R,N,V_unobscuredTopAreaLayoutGuideProvidingView
T@"UIView",R,N,V_unobscuredCenterAreaLayoutGuideProvidingView
T@"UIView",R,N,V_animatedUnobscuredCenterAreaLayoutGuideProvidingView
TB,N,V_areTransportControlsVisible
TB,N,V_areVolumeControlsVisible
T@"UILayoutGuide",R,N,V_transportControlsAreaLayoutGuide
T@"UILayoutGuide",R,N,V_displayModeControlsAreaLayoutGuide
T@"UILayoutGuide",R,N,V_volumeControlsAreaLayoutGuide
T@"UILayoutGuide",R,N,V_unobscuredCenterAreaLayoutGuide
T@"UILayoutGuide",R,N,V_animatedUnobscuredCenterAreaLayoutGuide
T@"UILayoutGuide",R,N,V_unobscuredTopAreaLayoutGuide
isPaused
timelineDuration
currentElapsedTime
initializedElapsedTime
timelineRate
initializationTimestamp
initWithElapsedTime:timelineDuration:timelineRate:paused:
_paused
_initializationTimestamp
_initializedElapsedTime
_timelineRate
_timelineDuration
Td,R,N,V_initializationTimestamp
Td,R,N,V_initializedElapsedTime
Td,R,N,V_timelineRate
Td,R,N,V_timelineDuration
paused
TB,R,N,GisPaused,V_paused
customButton
updateButtonAppearance
setAllowsGroupBlending:
currentMicaPackageName
setCurrentMicaPackageName:
setAlternateImageName:
setMicaSnapshotAlpha:
setPrioritizesVideoDevices:
prioritizesVideoDevices
_updateCustomButtonMicaPackage
setMicaPackage:
asynchronouslyPrepareMicaPackageWithName:layoutDirection:completion:
isAirPlayActive
colorWithAlphaComponent:
micaPackage
rootLayer
setState:color:
setTargetSize:
_customButton
_currentMicaPackageName
T@"NSString",&,N,V_currentMicaPackageName
T@"AVButton",R,N
avkit_ancestorViewPassingTest:
subviews
avkit_isAncestorOfViewPassingTest:
avkit_isDescendantOfViewPassingTest:
avkit_hitTestControlForPoint:withEvent:bestSoFar:shortestDistanceSoFar:
isUserInteractionEnabled
presentationLayer
opacity
_isInAWindow
isHiddenOrHasHiddenAncestor
avkit_isCompletelyTransparent
avkit_overrideLayoutMarginsForCounterRotation
avkit_isVideoGravityFrozen
avkit_isCounterRotatedForTransition
avkit_isBeingDismissed
avkit_isBeingPresented
avkit_backdropGroupLeader
avkit_isInAScrollView
avkit_isDescendantOfNonPagingScrollView
avkit_hasFullScreenLayoutClass
avkit_sizeWasInvalidatedNeedingLayoutIfNeeded:
convertRect:toView:
avkit_hitTestControlForPoint:withEvent:
avkit_wantsAnimatedViewTransitions
avkit_largestInscribedRectInBoundingPathWithCenter:aspectRatio:
avkit_portionOfFrameUnobscuredBySuperviews
isPagingEnabled
_isAnimatingScrollTest
isDecelerating
isDragging
_isAnimatingScroll
_horizontalVelocity
_verticalVelocity
shouldUseMacStyle
shouldUsePadStyle
safeAreaInsets
statusBarFrame
standardPaddingFullScreen
shouldUseCompactFullScreenSize
displayCornerRadius
_isClassic
_classicMode
_peripheryInsets
standardPaddingInline
_loadFontsIfNeeded
monospacedDigitSystemFontOfSize:weight:
fontDescriptor
fontDescriptorByAddingAttributes:
fontWithDescriptor:size:
playbackControlsViewLayoutMarginsForView:keyboardHeight:isFullScreen:
scrubberInfoLabelFont
scrubberTimeLabelFont
infoLabelFont
defaultItemFullScreenSize
standardInteritemPadding
additionalInlinePaddingForDodgingSafeArea
routePickerButtonInlineSize
routePickerButtonFullScreenSize
audioRoutePickerFullScreenSize
volumeSliderInlineWidth
volumeSliderCompactFullScreenWidth
volumeSliderRegularFullScreenWidth
volumeSliderPadding
volumeButtonInlineSize
volumeButtonFullScreenSize
maximumTransportControlsWidth
maximumMultiRowTransportControlsWidth
minimumTransportControlsWidth
minimumSingleButtonTransportControlsWidth
minimumScrubberSize
doubleRowLayoutMargins
doubleRowLayoutMarginsWhenShowingScrubInstructions
doublerowLayoutMarginsWhenShowingCustomContentInfo
spacingBetweenScrubInstructionsAndScrubber
liveBroadcastLabelTopToBackdropTopDistance
setShouldUseCompactFullScreenSize:
setTraitCollection:
_shouldUseCompactFullScreenSize
_scrubberTimeLabelFont
_scrubberInfoLabelFont
_infoLabelFont
_standardPaddingFullScreen
_standardPaddingInline
_standardInteritemPadding
_additionalInlinePaddingForDodgingSafeArea
_volumeSliderInlineWidth
_volumeSliderCompactFullScreenWidth
_volumeSliderRegularFullScreenWidth
_volumeSliderPadding
_minimumProminentPlayButtonDimension
_maximumProminentPlayButtonDimension
_maximumTransportControlsWidth
_maximumMultiRowTransportControlsWidth
_minimumTransportControlsWidth
_minimumSingleButtonTransportControlsWidth
_spacingBetweenScrubInstructionsAndScrubber
_liveBroadcastLabelTopToBackdropTopDistance
_traitCollection
_defaultItemInlineSize
_defaultItemFullScreenSize
_routePickerButtonInlineSize
_routePickerButtonFullScreenSize
_audioRoutePickerFullScreenSize
_volumeButtonInlineSize
_volumeButtonFullScreenSize
_minimumScrubberSize
_doubleRowLayoutMargins
_doubleRowLayoutMarginsWhenShowingScrubInstructions
_doublerowLayoutMarginsWhenShowingCustomContentInfo
TB,N,V_shouldUseCompactFullScreenSize
T@"UITraitCollection",&,N,V_traitCollection
TB,R,GshouldUseMacStyle
TB,R,GshouldUsePadStyle
T{CGSize=dd},R,N,V_defaultItemInlineSize
T{CGSize=dd},R,N,V_defaultItemFullScreenSize
Td,R,N,V_standardPaddingFullScreen
Td,R,N,V_standardPaddingInline
Td,R,N,V_standardInteritemPadding
Td,R,N,V_additionalInlinePaddingForDodgingSafeArea
T{CGSize=dd},R,N,V_routePickerButtonInlineSize
T{CGSize=dd},R,N,V_routePickerButtonFullScreenSize
T{CGSize=dd},R,N,V_audioRoutePickerFullScreenSize
Td,R,N,V_volumeSliderInlineWidth
Td,R,N,V_volumeSliderCompactFullScreenWidth
Td,R,N,V_volumeSliderRegularFullScreenWidth
Td,R,N,V_volumeSliderPadding
T{CGSize=dd},R,N,V_volumeButtonInlineSize
T{CGSize=dd},R,N,V_volumeButtonFullScreenSize
Td,R,N,V_minimumProminentPlayButtonDimension
Td,R,N,V_maximumProminentPlayButtonDimension
Td,R,N,V_maximumTransportControlsWidth
Td,R,N,V_maximumMultiRowTransportControlsWidth
Td,R,N,V_minimumTransportControlsWidth
Td,R,N,V_minimumSingleButtonTransportControlsWidth
T{CGSize=dd},R,N,V_minimumScrubberSize
T{NSDirectionalEdgeInsets=dddd},R,N,V_doubleRowLayoutMargins
T{NSDirectionalEdgeInsets=dddd},R,N,V_doubleRowLayoutMarginsWhenShowingScrubInstructions
T{NSDirectionalEdgeInsets=dddd},R,N,V_doublerowLayoutMarginsWhenShowingCustomContentInfo
Td,R,N,V_spacingBetweenScrubInstructionsAndScrubber
Td,R,N,V_liveBroadcastLabelTopToBackdropTopDistance
T@"UIFont",R,N,V_infoLabelFont
T@"UIFont",R,N,V_scrubberTimeLabelFont
T@"UIFont",R,N,V_scrubberInfoLabelFont
T@"AVEditBehaviorContext",W,N,V_behaviorContext
T@"<AVEditBehaviorDelegate>",W,N,V_delegate
_avkitPreferredTransitioningDelegate
setTransitioningDelegate:
collectionWithDefaultRates
fullScreenViewController
isBeingDismissed
_transitionController
beginFullScreenDismissalOfViewController:animated:isInteractive:completion:
_pipActivitySessionObservationController
initWithCoder:
containsValueForKey:
decodeObjectOfClass:forKey:
playerWithURL:
initWithPlayer:
decodeBoolForKey:
decodeIntegerForKey:
encodeWithCoder:
encodeBool:forKey:
isViewLoaded
encodeInteger:forKey:
dispatchQueue
setHandlesAudioSessionInterruptions:
requiresImmediateAssetInspection
setInspectionSuspended:
beginReducingResourcesForPictureInPicturePlayerLayer:
isReducingResourcesForPictureInPicture
endReducingResourcesForPictureInPicturePlayerLayer:
wantsResourceReduction
contentView
setShouldLoadPlaybackControlsHint:
_updateContentOverlayViewSuperview
canIncludePlaybackControlsWhenInline
setCanIncludePlaybackControlsWhenInline:
setCanAutomaticallyZoomLetterboxVideos:
_targetVideoGravitiesForLayoutClass
setTargetVideoGravity:forLayoutClass:
playbackContentContainerView
setVideoBounds:
secondScreenConnectionDisplaySize
videoDisplayScale
loadViewIfNeeded
contentTransitioningDelegate
activeContentView
_actualContentOverlayView
_updatePlaybackControlsController
playerViewControllerShouldStartPictureInPictureFromInlineWhenEnteringBackground:
_delegateRespondsTo:
setCanStartPictureInPictureAutomaticallyFromInline:
stopPictureInPicture
volumeAnimator
setVolumeAnimator:
isPlayingOnSecondScreen
setPlayingOnSecondScreen:
setInternalDelegate:
layoutClass
shouldUseNetworkingResourcesForLiveStreamingWhilePaused
stopUsingNetworkResourcesForLiveStreamingWhilePaused
startUsingNetworkResourcesForLiveStreamingWhilePaused
pipActivitySessionIdentifier
setPictureInPictureActivitySessionIdentifier:
_updateDefaultPlaybackRateIfNeeded
setShowsTimecodes:
loadPlaybackControlsViewIfNeeded
interactiveContentOverlayView
setEdgesInsettingLayoutMarginsFromSafeArea:
_updateCustomControlsViewSuperViewIfNeeded
playbackControlsView
setCustomControlsView:
hasCustomPlaybackControls
_updatePlaybackControlsCanHideStateIfNeeded
inlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused
setInlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused:
setTouchBarRequiresLinearPlayback:
playbackControlsIncludeTransportControls
playbackControlsIncludeDisplayModeControls
playbackControlsIncludeVolumeControls
volumeControlsCanShowSlider
setVolumeControlsCanShowSlider:
setEntersFullScreenWhenPlaybackBegins:
flashPlaybackControlsWithDuration:
setCustomControlItems:
setOverrideLayoutMarginsWhenEmbeddedInline:
turboModePlaybackControlsPlaceholderView
associatedFullScreenViewController
_viewControllerForFullScreenPresentationFromView:
setDefaultPlaybackRate:
initWithFrame:playerLayerView:contentOverlayView:
_behaviorStorage
enumerateAllBehaviorContextsImplementingSelector:forProtocol:usingBlock:
initWithFrame:playbackContentContainerView:targetVideoGravities:
initWithFrame:contentView:
appearanceProxy
setActualView:
performInitialSetupIfNeededAndPossible
hasPerformedInitialSetup
isInAWindowAndNotScrolling
pictureInPictureActivitySessionIdentifier
performInitialSetup
setHasPerformedInitialSetup:
_handleDoubleTapGesture:
setNumberOfTapsRequired:
_handleSingleTapGesture:
requireGestureRecognizerToFail:
_handleUserInteractionObservationRecognizer:
_handleHoverGestureRecognizer:
setHoverGestureRecognizer:
_handleScrubbingGestureRecognizer:
setAllowedScrollTypesMask:
_setiOSMacIgnoreScrollDirectionUserPreference:
setAllowedTouchTypes:
setScrubGestureRecognizer:
_handleScrubInteruptionGestureRecognizer:
setInteractionView:
setInteractiveGestureTracker:
_loadObservationControllerIfNeeded
_hasBegunObservation
_addObservers
startUpdatesIfNeeded
_updateUnsupportedContentIndicatorView
_avkitWillCompletePresentationTransition
_avkitDidCompletePresentationTransition
keyCommands
viewWillAppear:
transitionCoordinator
animateAlongsideTransition:completion:
viewDidAppear:
autoplay:
setShouldUseNetworkingResourcesForLiveStreamingWhilePaused:
updateVideoBounds
viewDidDisappear:
viewDidMoveToWindow:shouldAppearOrDisappear:
_contentViewWillTransitionToSize:withTransitionCoordinator:
viewWillTransitionToSize:withTransitionCoordinator:
_modalPresentationStyleIsFullScreen
isCoveringWindow
presentationContext
preferredInterfaceOrientationForPresentation
navigationController
isNavigationBarHidden
isCounterRotatingContentView
transitioningDelegate
presentationControllerForPresentedViewController:presentingViewController:sourceViewController:
image
setTransportBarCustomMenuItems:
transportBarCustomMenuItems
canControlPlayback
_localizedDiscoverabilityTitleForKeyCommandLocalizationKey
keyCommandWithInput:modifierFlags:action:
setDiscoverabilityTitle:
keyCommandWithInput:modifierFlags:action:upAction:discoverabilityTitle:
setWantsPriorityOverSystemBehavior:
_handlePlayPauseKeyCommand:
_handleVolumeUpKeyPressedCommand:
_handleVolumeUpKeyReleasedCommand:
_handleVolumeDownKeyPressedCommand:
_handleVolumeDownKeyReleasedCommand:
_handleSkipBack15SecondsKeyCommand:
_handleSkipAhead15SecondsKeyCommand:
_handleGoToBeginningKeyCommand:
_handleRewindKeyPressedCommand:
_handleRewindKeyReleasedCommand:
_handleFastForwardKeyPressedCommand:
_handleFastForwardKeyReleasedCommand:
_handleShowPreviousFrameKeyCommand:
_handleShowNextFrameKeyCommand:
_handleExitFullScreenKeyCommand:
exitFullscreen:
currentTime
seekFrameForward:
seekToBeginning:
seekFrameBackward:
set_hasBegunObservation:
_updateExternalPlaybackIndicatorView
nowPlayingInfoControllerIfLoaded
_transitionFromFullScreenWithReason:animated:completionHandler:
_transitionFromFullScreenAnimated:completionHandler:
exitsFullScreenWhenPlaybackEnds
_isTrackingUserInteraction
_updateAudioOnlyIndicatorView
_updateDefaultLinearPlaybackRateIfNeeded
_updateSelectedPlaybackRateIfNeeded
lowercaseString
coordinatedPlaybackActive
_updateSelectedPlaybackRateIfPlayerControllerRateChanges
_createPictureInPictureControllerIfNeeded
_handleDoubleDoubleTapGesture:
setNumberOfTouchesRequired:
setRetainsSourceDuringPictureInPicturePlayback:
canStartPictureInPictureAutomaticallyFromInline
_shouldShowPictureInPictureButton
setShowsPictureInPictureButton:
_updatePiPControllerCanStartAutomaticallyWhenEnteringBackground
_isUnsupportedContent
setShowsUnsupportedContentIndicator:
isAudioOnlyContent
setShowsAudioOnlyIndicator:
externalPlaybackAirPlayDeviceLocalizedName
isPlayingOnExternalScreen
setExternalPlaybackIndicatorTitle:subtitle:
setShowsExternalPlaybackIndicator:
setShowsDoneButtonWhenFullScreen:
_isDescendantOfRootViewController
setPlayerViewControllerHasInvalidViewControllerHierarchy:
setPlayerViewControllerIsPresentingFullScreen:
setPlayerViewControllerIsPresentedFullScreen:
canShowPictureInPictureButton
canToggleVideoGravityWhenEmbeddedInline
showsVideoGravityButton
isExternalPlaybackActive
_canEnterFullScreen
entersFullScreenWhenTapped
_transitionToFullScreenAnimated:interactive:completionHandler:
togglePlaybackControlsVisibility
_togglePictureInPicture
_beginTrackingUserInteraction
_endTrackingUserInteraction
_numberOfTrackedUserInteractions
_setNumberOfTrackedUserInteractions:
beginUserInteraction
endUserInteraction
isContentTransitionInteractive
setPopoverIsBeingPresented:
dismissViewControllerAnimated:completion:
enumerateAllBehaviorContextsConformingToProtocol:usingBlock:
playerViewController:metricsCollectionEventOccured:
playerViewController:contentViewWillTransitionToSize:withTransitionCoordinator:
beginShowingItemsDueToIndirectUserInteraction
transportControlsContainerView
volumeControls
screenModeControls
_hoverGestureRecognizer:hasCursorOverView:
setHoveringOverPlaybackControl:
endShowingItemsDueToIndirectUserInteraction
_endScrubGestureIfActive
beginPlaybackSuspension
_applyNonlinearScaleToScrubGestureVelocity:
_seekForScrubGestureWithVelocity:
canSeekFrameBackward
canSeekFrameForward
_seekDistanceForScrubGestureWithVelocity:
seekToTime:toleranceBefore:toleranceAfter:
endPlaybackSuspension
setReadyForDisplay:
setContentOverlayViewSubview:
setInteractiveContentOverlayView:
setHasCustomPlaybackControls:
canHidePlaybackControls
isHoveringOverPlaybackControl
setCanHidePlaybackControls:
canStartPictureInPictureAutomaticallyWhenEnteringBackground
beginFullScreenPresentationOfViewController:fromView:isInteractive:completion:
enterFullScreenAnimated:completionHandler:
exitFullScreenAnimated:completionHandler:
_transitionControllerIfLoaded
playerViewController:shouldExitFullScreenWithReason:
_isTransitioningToOrFromFullScreen
wantsDetachedFullscreenPresentation
canDisplayContentInDetachedWindow
_transitionToDetachedFullScreenCompletionHandler:
_transitionToAttachedFullScreenAnimated:interactive:completionHandler:
canAutomaticallyZoomLetterboxVideos
_preferredModalPresentationStyle
modalPresentationStyle
setModalPresentationStyle:
_transitionFromFullScreenAnimated:interactive:completionHandler:
isPresentingDetachedFullScreen
_transitionFromInlineToDetachedFullScreenPresentationAnimated:completionHandler:
_transitionFromInlineToFullScreenPresentationAnimated:interactive:completionHandler:
interactiveDismissalCompletionHandler
setInteractiveDismissalCompletionHandler:
configurationWithTransitionStyle:transitionDuration:
_isTrackingUserInteractionWithInteractiveView
isViewDescendantOfPlaybackControlsSubview:
prominentPlayButtonContainerView
setWantsAppearanceConfigValues:
wasInitializedUsingWebKitSPI
isInteractive
setPlayerViewControllerIsBeingTransitionedWithResizing:
isCancelled
setContentView:
_notifyOfMetricsCollectionEvent:
setCanShowStatusBarBackgroundGradientWhenStatusBarVisible:
attemptRotationToDeviceOrientation
dismissForPIPStartAfterPresentationHandler
setDismissForPIPStartAfterPresentationHandler:
playerViewController:willBeginFullScreenPresentationWithAnimationCoordinator:
_shouldPausePlaybackWhenExitingFullscreen
playerViewControllerShouldMuteVolumeForFullScreenDismissalTransition:
pendingRestoreUserInterfaceForPictureInPictureStopHandler
setPendingRestoreUserInterfaceForPictureInPictureStopHandler:
playerViewController:willEndFullScreenPresentationWithAnimationCoordinator:
playerViewController:targetViewForDismissalAnimationWithProposedTargetView:
isBeingPresented
setFinishPreparingForInteractiveDismissalHandler:
presenterSupportsOrientation:
attachContentView
tapGestureRecognizersCanReceiveTouches
numberOfTapsRequired
scrubGestureRecognizer
showsProminentPlayButton
hoverGestureRecognizer
playerViewControllerBeginReducingResourcesForPictureInPicture:
playerViewControllerEndReducingResourcesForPictureInPicture:
playerViewControllerWillStartPictureInPicture:
AV_indicatorBackgroundColor
animateWithDuration:animations:
setPictureInPictureActive:
endBackgroundTask:
beginBackgroundTaskWithExpirationHandler:
playerViewControllerDidStartPictureInPicture:
playerViewControllerShouldAutomaticallyDismissAtPictureInPictureStart:
playerViewController:failedToStartPictureInPictureWithError:
playerViewControllerWillStopPictureInPicture:
playerViewControllerDidStopPictureInPicture:
playerViewController:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:
pictureInPictureController:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:
_activeViewControllerForContentView
animateAlongsideVisibilityAnimationsWithAnimationCoordinator:appearingViews:disappearingViews:
playbackControlsContainer
playerViewController:willTransitionToVisibilityOfPlaybackControls:withAnimationCoordinator:
removeTurboModePlaybackControlsPlaceholderViewIfNeeded
addCoordinatedAnimations:completion:
_FBSScene
uiSettings
deactivationReasons
defaultPlaybackRate
keyPathsForValuesAffectingVideoGravity
keyPathsForValuesAffectingTransportBarCustomMenuItems
pictureInPictureControllerWillStartPictureInPicture:
pictureInPictureControllerDidStartPictureInPicture:
pictureInPictureController:failedToStartPictureInPictureWithError:
pictureInPictureControllerWillStopPictureInPicture:
pictureInPictureControllerDidStopPictureInPicture:
adaptivePresentationStyleForPresentationController:
adaptivePresentationStyleForPresentationController:traitCollection:
presentationController:prepareAdaptivePresentationController:
presentationController:viewControllerForAdaptivePresentationStyle:
presentationController:willPresentWithAdaptiveStyle:transitionCoordinator:
presentationControllerShouldDismiss:
presentationControllerWillDismiss:
presentationControllerDidDismiss:
presentationControllerDidAttemptToDismiss:
prepareForPopoverPresentation:
popoverPresentationControllerShouldDismissPopover:
popoverPresentationControllerDidDismissPopover:
popoverPresentationController:willRepositionPopoverToRect:inView:
fullScreenViewControllerWillBeginFullScreenPresentation:
fullScreenViewControllerWillEndFullScreenPresentation:
viewForFullScreenViewController:
playbackContainerViewForFullScreenViewController:
fullScreenViewController:viewWillTransitionToSize:coordinator:
prefersStatusBarHiddenForFullScreenViewController:
preferredStatusStyleForFullScreenViewController:
keyCommandResponderForFullScreenViewController:
shouldAutorotate
transitionController:configurationForPresentedViewController:presentingViewController:
transitionController:willBeginPresentingViewController:
transitionController:willBeginDismissingViewController:
transitionController:targetViewForDismissingViewController:
transitionController:gestureRecognizer:shouldReceiveTouch:
transitionControllerPresentedViewBackgroundColor:
transitionControllerBackgroundViewBackgroundColor:
transitionControllerCanBeginInteractiveDismissalTransition:
transitionControllerCanBeginInteractivePresentationTransition:
transitionControllerBeginInteractivePresentationTransition:
transitionControllerBeginInteractiveDismissalTransition:
transitionController:prepareForFinishingInteractiveTransition:
transitionController:transitionWillComplete:continueBlock:
transitionController:animationProgressDidChange:
playbackRateCollection:selectedPlaybackRateDidChangeTo:
playerControllerCanRestorePlaybackRateAfterAudioSessionDeactivation:
playbackControlsViewNeedsUpdateStatusBarAppearance:
playbackControlsView:animateAlongsideVisibilityAnimationsWithAnimationCoordinator:appearingViews:disappearingViews:
setRequiresImmediateAssetInspection:
customControlsView
_inlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused
_setInlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused:
playbackControlsIncludeVolumeControlsControls
overrideLayoutMarginsWhenEmbeddedInline
viewControllerForFullScreenPresentation
_ensureBehaviorStorage
loadView
modalPresentationCapturesStatusBarAppearance
_requiresCustomPresentationController
_presentationControllerForPresentedController:presentingController:sourceController:
canBecomeFirstResponder
_mediaSelectionDoneButtonTapped:
showFullScreenPresentationFromView:completion:
enterFullScreenWithCompletion:
exitFullScreenWithCompletion:
showsTimecodes
entersFullScreenWhenPlaybackBegins
setExitsFullScreenWhenPlaybackEnds:
finishPreparingForInteractiveDismissalHandler
overrideRouteSharingPolicy
setOverrideRouteSharingPolicy:
setSecondScreenConnectionDisplaySize:
setWasInitializedUsingWebKitSPI:
overrideRoutingContextUID
setOverrideRoutingContextUID:
customControlItems
setWantsDetachedFullscreenPresentation:
_playerShouldAutoplay
_hasClientSetVideoGravity
_canShowPictureInPictureButton
_pixelBufferAttributes
_canHidePlaybackControls
_hoveringOverPlaybackControl
_canDisplayContentInDetachedWindow
_disallowsAutomaticPictureInPictureStart
_canStartPictureInPictureAutomaticallyWhenEnteringBackground
_mediaSelectionPopoverPresentationController
_playbackControlsController
_playerViewControllerView
_playerViewControllerContentView
_overrideLayoutMarginsWhenEmbeddedInline
_overrideTransformForProminentPlayButton
_canToggleVideoGravityWhenEmbeddedInline
_playbackControlsShouldControlSystemVolume
_customControlsView
_scrubGestureMomentumTimer
_scrubGestureIsActive
_defaultLinearPlaybackRate
_showsTimecodes
_readyForDisplay
_canStartPictureInPictureAutomaticallyFromInline
_entersFullScreenWhenPlaybackBegins
_exitsFullScreenWhenPlaybackEnds
_shouldUseNetworkingResourcesForLiveStreamingWhilePaused
__hasBegunObservation
_hasPerformedInitialSetup
_wasInitializedUsingWebKitSPI
_requiresImmediateAssetInspection
_playbackControlsIncludeVolumeControls
_canIncludePlaybackControlsWhenInline
_pictureInPictureActive
_wantsDetachedFullscreenPresentation
__targetVideoGravitiesForLayoutClass
__actualContentOverlayView
_finishPreparingForInteractiveDismissalHandler
_dismissForPIPStartAfterPresentationHandler
_pendingRestoreUserInterfaceForPictureInPictureStopHandler
_interactiveDismissalCompletionHandler
__observationController
__pipActivitySessionObservationController
__behaviorStorage
__numberOfTrackedUserInteractions
_hoverGestureRecognizer
_scrubGestureRecognizer
__localizedDiscoverabilityTitleForKeyCommandLocalizationKey
_overrideRouteSharingPolicy
_volumeAnimator
_overrideRoutingContextUID
_customControlItems
_defaultPlaybackRate
_pictureInPictureActivitySessionIdentifier
_secondScreenConnectionDisplaySize
_videoBounds
T@"AVContentOverlayView",R,N,V__actualContentOverlayView
T@"AVFullScreenViewController",R,N
TB,N,V_shouldUseNetworkingResourcesForLiveStreamingWhilePaused
T@?,C,N,V_finishPreparingForInteractiveDismissalHandler
T@?,C,N,V_dismissForPIPStartAfterPresentationHandler
T@?,C,N,V_pendingRestoreUserInterfaceForPictureInPictureStopHandler
T@?,C,N,V_interactiveDismissalCompletionHandler
T@"AVObservationController",R,N,V__observationController
T@"AVObservationController",R,N,V__pipActivitySessionObservationController
T@"AVBehaviorStorage",R,N,V__behaviorStorage
T@"NSMutableDictionary",R,N,V__targetVideoGravitiesForLayoutClass
TB,N,V__hasBegunObservation
Tq,N,S_setNumberOfTrackedUserInteractions:,V__numberOfTrackedUserInteractions
T@"UIHoverGestureRecognizer",&,N,V_hoverGestureRecognizer
T@"UIPanGestureRecognizer",&,N,V_scrubGestureRecognizer
T@"NSMutableDictionary",R,N,V__localizedDiscoverabilityTitleForKeyCommandLocalizationKey
TQ,N,V_overrideRouteSharingPolicy
T{CGSize=dd},N,V_secondScreenConnectionDisplaySize
T@"AVPlayerControllerVolumeAnimator",&,N,V_volumeAnimator
T@"__AVPlayerLayerView",&,N,V_playerLayerView
TB,N,GisReadyForDisplay,V_readyForDisplay
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_videoBounds
TB,N,V_hasPerformedInitialSetup
TB,N,V_wasInitializedUsingWebKitSPI
hoveringOverPlaybackControl
TB,N,GisHoveringOverPlaybackControl,V_hoveringOverPlaybackControl
T@"NSString",C,N,V_overrideRoutingContextUID
TB,N,V_requiresImmediateAssetInspection
TB,N,V_canHidePlaybackControls
T@"NSArray",C,N
T@"AVPlayerViewControllerCustomControlsView",R,N
TB,N,V_playbackControlsIncludeVolumeControls
T@"UIViewController",R,N
T@"NSArray",C,N,V_customControlItems
Td,N,V_defaultPlaybackRate
TB,N,V_canIncludePlaybackControlsWhenInline
T@"NSValue",&,N
pictureInPictureActive
TB,R,N,GisPictureInPictureActive,V_pictureInPictureActive
T@"NSString",C,N,V_pictureInPictureActivitySessionIdentifier
T@?,C,N
TB,N,V_wantsDetachedFullscreenPresentation
TB,N,V_showsTimecodes
T@"NSString",C,N
T@"UIView",R,N
TB,N,V_canStartPictureInPictureAutomaticallyFromInline
TB,N,V_entersFullScreenWhenPlaybackBegins
TB,N,V_exitsFullScreenWhenPlaybackEnds
T@"<AVPlayerViewControllerDelegate>",W,N,V_delegate
iAdPreRollView
iAdPrerollView
setCanDisplayContentInDetachedWindow:
setPlaybackControlsShouldControlSystemVolume:
needsLayout
stopPictureInPictureEvenWhenInBackground
initWithPlayerLayerView:
showsExitFullScreenButton
setShowsExitFullScreenButton:
playbackControlsShouldControlSystemVolume
setWebKitOverrideRouteSharingPolicy:routingContextUID:
keyPathsForValuesAffectingPictureInPicturePossible
keyPathsForValuesAffectingPictureInPictureActive
keyPathsForValuesAffectingPictureInPictureSuspended
keyPathsForValuesAffectingPictureInPictureWasStartedWhenEnteringBackground
TB,R,N,GisPictureInPicturePossible
pictureInPictureSuspended
TB,R,N,GisPictureInPictureSuspended
setOverrideTransformForProminentPlayButton:
overrideTransformForProminentPlayButton
setCanToggleVideoGravityWhenEmbeddedInline:
TB,N,S_setInlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused:
T{CGAffineTransform=dddddd},N
initWithPlayerViewController:
setCanShowPictureInPictureButton:
activeContentViewDidChange
setCanStartPictureInPictureAutomaticallyWhenEnteringBackground:
T@"AVPlaybackControlsController",R,N
T@"AVTransitionController",R,N
audioOnlyContent
TB,R,N,GisAudioOnlyContent
shouldEnterFullScreenWhenPlaybackBegins
initWithPlayerController:doneButtonTarget:doneButtonAction:
popoverPresentationController
setPermittedArrowDirections:
setSourceRect:
_setIgnoreAppSupportedOrientations:
mediaSelectionTableViewController
_ignoreAppSupportedOrientations
presentViewController:animated:completion:
toggleMuted
doneButtonTapped:
videoGravityButtonTapped:
mediaSelectionButtonTapped:
fullScreenButtonTapped:
pictureInPictureButtonTapped:
toggleMuted:
isPresentingFullWindow
T@"AVPlayerViewControllerContentView",R,N
presentingDetachedFullScreen
TB,R,N,GisPresentingDetachedFullScreen
presentingFullWindow
TB,R,N,GisPresentingFullWindow
presentingFullScreenFromInline
TB,R,N,GisPresentingFullScreenFromInline
presentedFullScreen
TB,R,N,GisPresentedFullScreen
T@"AVPresentationContext",R,N
enterAutoplayPhase
exitAutoplayPhase
flashAutoplayControls
setEntersFullScreenWhenTapped:
avkit_currentEditBehaviorContext
avkit_setCurrentEditBehaviorContext:
T@"AVEditBehaviorContext",R,W,N
endEditing
isEditing
setEditing:
editView
setCurrentTime:
addPeriodicTimeObserverForInterval:queue:usingBlock:
setPlayerTimeObserver:
presentationSize
leftAnchor
rightAnchor
setDataSource:
asset
assetImageGeneratorWithAsset:
setImageGenerator:
imageGenerator
setAppliesPreferredTrackTransform:
setMaximumSize:
setToolbar:
toolbar
setBarStyle:
_makeBarButtonItems
setItems:
initWithArrangedSubviews:
setAxis:
setContainerView:
setEditView:
playerTimeObserver
removeTimeObserver:
currentRotation
setCurrentRotation:
videoCompostitionRotatingAsset:
setVideoComposition:
tracksWithMediaType:
naturalSize
preferredTransform
videoCompositionLayerInstruction
trackID
setTrackID:
setTransform:atTime:
setRotationTransform:
videoCompositionInstruction
setTimeRange:
setLayerInstructions:
videoCompositionWithPropertiesOfAsset:
setInstructions:
setRenderSize:
setReversePlaybackEndTime:
setForwardPlaybackEndTime:
editBehaviorDidCancel:
alertControllerWithTitle:message:preferredStyle:
doneButton
setBarButtonItem:
editBehaviorAlertActionsForDoneButtonTap:
addAction:
actionWithTitle:style:handler:
zoomingBehavior
addBehavior:
removeBehavior:
reloadData
contentDuration
valueWithCMTime:
pendingImageRequests
requestedImageTimeToCMTimeMap
scrubToTime:resolution:
reversePlaybackEndTime
forwardPlaybackEndTime
beginScrubbing
isTrimming
trimStartTime
trimEndTime
seekToTime:toleranceBefore:toleranceAfter:completionHandler:
endScrubbing
cancelAllCGImageGeneration
_generateThumbnails
setThumbnailImage:forTimestamp:
generateCGImagesAsynchronouslyForTimes:completionHandler:
flexibleSpaceItem
initWithBarButtonSystemItem:target:action:
setFlexibleSpaceItem:
cancel:
setCancelButton:
setPlayButton:
systemWhiteColor
playButton
setTintColor:
setPauseButton:
pauseButton
done:
setDoneButton:
systemYellowColor
items
cancelButton
setPrefersThumbVisible:
editViewDuration:
editViewThumbnailAspectRatio:
editView:requestThumbnailImageForTimestamp:
editViewDidBeginScrubbing:
editViewDidEndScrubbing:
editView:currentTimeDidChange:
editView:trimStartTimeDidChange:
editView:trimEndTimeDidChange:
editViewWillBeginRequestingThumbnails:
editViewDidFinishRequestingThumbnails:
startEditing
rotateClockwise
rotationTransform
parameters
setZoomingBehavior:
setObservationController:
_editing
_parameters
_zoomingBehavior
_editView
_imageGenerator
_playerTimeObserver
_containerView
_toolbar
_cancelButton
_doneButton
_flexibleSpaceItem
_playButton
_pauseButton
_pendingImageRequests
_requestedImageTimeToCMTimeMap
_currentRotation
_rotationTransform
T@"AVEditBehavior",W,N,V_behavior
T@"AVZoomingBehavior",&,N,V_zoomingBehavior
T@"AVObservationController",&,N,V_observationController
T@"AVEditView",&,N,V_editView
editing
TB,N,GisEditing,V_editing
T@"AVAssetImageGenerator",&,N,V_imageGenerator
T@,&,N,V_playerTimeObserver
T@"UIView",&,N,V_containerView
T@"UIToolbar",&,N,V_toolbar
T@"UIBarButtonItem",&,N,V_cancelButton
T@"UIBarButtonItem",&,N,V_doneButton
T@"UIBarButtonItem",&,N,V_flexibleSpaceItem
T@"UIBarButtonItem",&,N,V_playButton
T@"UIBarButtonItem",&,N,V_pauseButton
T@"NSMutableArray",R,N,V_pendingImageRequests
T@"NSMutableDictionary",R,N,V_requestedImageTimeToCMTimeMap
TQ,N,V_currentRotation
T{CGAffineTransform=dddddd},N,V_rotationTransform
T@"AVEditBehaviorParameters",R,C,N,V_parameters
_canShowWhileLocked
canPerformAction:withSender:
targetForAction:withSender:
viewWillMoveToWindow:
setPresentationContainerContentView:
sourceFullScreenViewController
setAssociatedFullScreenViewController:
setSourceFullScreenViewController:
_associatedFullScreenViewController
_sourceFullScreenViewController
_contentView
T@"UIView",W,N,V_contentView
T@"UIViewController<AVFullScreenViewControllerDelegate>",W,N,V_delegate
T@"AVFullScreenViewController",W,N,V_associatedFullScreenViewController
T@"AVFullScreenViewController",W,N,V_sourceFullScreenViewController
buttonWithAccessibilityIdentifier:accessibilityLabel:
setOverrideUserInterfaceStyle:
setShowsMenuAsPrimaryAction:
setContextMenuInteractionEnabled:
setAppliesTransformToImageViewWhenHighlighted:
overflowMenuItemsForControlOverflowButton:
identifier
updateVisibleMenuWithBlock:
configurationWithIdentifier:previewProvider:actionProvider:
contextMenuInteraction:willDisplayMenuForConfiguration:animator:
contextMenuInteraction:willEndForConfiguration:animator:
updateContextMenu
contextMenuInteraction:configurationForMenuAtLocation:
_activeMenuInteraction
T@"<AVControlOverflowButtonDelegate>",W,N,V_delegate
stringByAppendingFormat:
initWithRate:localizedName:compactLocalizedName:
_uiImage
_setUIImage:
localizedName
_symbolImage
__uiImage
_localizedName
_compactLocalizedName
T@"UIImage",&,N,S_setUIImage:,V__uiImage
Td,R,N,V_rate
T@"NSString",R,C,N,V_localizedName
T@"NSString",R,C,N,V_compactLocalizedName
initWithRate:localizedName:compactLocalizedName:symbolImage:
symbolImage
T@"UIImage",R,C,N
airMessageCanonicalForm
stringWithUTF8String:
currentOSIdentifier
buildVersion
currentAppIdentifier
dictionaryRepresentationCommon
initWithSuiteName:
standardUserDefaults
environment
allRecognizedKeysForDictionaryRepresentation
itemIdentifier
airRepresentationForArray:
rawData
base64EncodedStringWithOptions:
commonDictionaryRepresentationKeys
compare:
sortedArrayUsingSelector:
componentsJoinedByString:
dataWithJSONObject:options:error:
decompressedDataUsingAlgorithm:error:
arrayWithObject:
initWithDictionary:
addEntriesFromDictionary:
shouldUseJSONForBody
MIMEType
jsonDataRepresentation
_nameForDataCompressionAlgorithm:
compressedDataUsingAlgorithm:error:
headerTextRepresenationForBodyDataLength:extraHeaders:
dataUsingEncoding:allowLossyConversion:
appendData:
initWithMessageType:itemIdentifier:
setArray:
setRawData:
setExtendedLanguageTag:
expectedBodyLength
uncompressedBodyData
bodyAsJSONDictionary
rawBodyData
uniqueHeaders
intValue
responseWithParts:
initWithMessageType:itemIdentifier:dictionaryRepresentation:
setMIMEType:
_decompressBodyData:forCompressionAlgorithm:
messageWithRequiresLinearPlayback:itemIdentifier:
messageWithUserScrubToAssetTime:itemIdentifier:
messageWithPosterArtworkMetadata:itemIdentifier:
messageWithParts:
messageDataRepresentation
setItemIdentifier:
initialRepresentation
_type
_itemIdentifier
_MIMEType
_extendedLanguageTag
_rawData
_array
_dictionary
_initialRepresentation
T@"NSString",C,N,V_itemIdentifier
T@"NSString",C,N,V_MIMEType
T@"NSString",C,N,V_extendedLanguageTag
T@"NSValue",&,N,V_value
T@"NSData",&,N,V_rawData
T@"NSArray",&,N,V_array
T@"NSDictionary",&,N,V_dictionary
T@"NSDictionary",R,N,V_initialRepresentation
TI,R,N,V_type
T@"NSData",R,N
T@"NSDictionary",R,N
absoluteString
initWithBase64EncodedString:options:
willAnimatePictureInPictureStart
didAnimatePictureInPictureStart
willAnimatePictureInPictureStop
didAnimatePictureInPictureStop
viewWillResize
viewDidResize
actionButtonTapped
shouldShowAlternateActionButtonImage
shouldShowLoadingIndicator
setShouldShowAlternateActionButtonImage:
_shouldShowAlternateActionButtonImage
_contentViewController
T@"AVPictureInPicturePlayerLayerView",R,N,V_pictureInPicturePlayerLayerView
TB,N,V_shouldShowAlternateActionButtonImage
T@"<AVPictureInPictureViewControllerDelegate>",W,N,V_delegate
T@"AVPictureInPictureViewController",&,N,V_contentViewController
setLineBreakMode:
setTextAlignment:
setTextColor:
setAlignment:
setBaselineRelativeArrangement:
setCustomSpacing:afterView:
configurationWithFont:
systemImageNamed:withConfiguration:
initWithImage:
setContentMode:
setNumberOfLines:
avkit_constraintsFromCenterAnchorsToCenterAnchorsOfItem:
addObjectsFromArray:
widthAnchor
heightAnchor
size
constraintEqualToAnchor:multiplier:
setSpacing:
setText:
setTitleString:subtitleString:
_imageView
_titleLabel
_subtitleLabel
_textLabelsContainer
_timing
isEqualToValueTiming:
allocWithZone:
initWithValueTiming:
decodeDoubleForKey:
initWithAnchorValue:anchorTimeStamp:rate:
anchorValue
encodeDouble:forKey:
anchorTimeStamp
supportsSecureCoding
mutableCopyWithZone:
classForCoder
setAnchorValue:
setAnchorTimeStamp:
Td,D,N
valueTimingWithAnchorValue:anchorTimeStamp:rate:
systemUptime
currentTimeStamp
valueForTimeStamp:
timeStampForValue:
setValueTiming:
_timeStamp
_updateDebugLabelText
_currentDisplay
secondScreenViewController
setDebugText:
debugText
tracks
assetTrack
displays
uniqueId
_displayID
_currentEnabledVideoTrack
statusOfValueForKey:error:
formatDescriptions
_currentVideoDynamicRange
_actuallyUpdateDebugLabelTextWithCurrentResolution:currentVideoDynamicRange:
loadValuesAsynchronouslyForKeys:completionHandler:
maximumVideoResolution
currentMode
hdrMode
width
height
preferences
preferredHdrMode
matchContent
nativeBounds
setSecondScreenViewController:
_scene
_debugText
_secondScreenViewController
T@"UIScene",W,N,V_scene
T@"NSString",C,N,V_debugText
T@"AVSecondScreenViewController",W,N,V_secondScreenViewController
hasPrefix:
initWithPresentedViewController:presentingViewController:
_observeSceneDidBecomeActiveForRestoringRotatability
presentationWindowForDisablingAutorotation
endDisablingInterfaceAutorotation
setPresentationWindowForDisablingAutorotation:
containerViewWillLayoutSubviews
presented
context
setWasInitiallyInteractive:
setHasAVKitAnimator:
setPresenterSupportedOrientations:
shouldRemovePresentersView
setFinalInterfaceOrientation:
hasAVKitAnimator
finalInterfaceOrientation
_ensureOrientation:enablingMixedOrientations:
didStopTransition
isRotated
initWithWindowScene:
windowLevel
setWindowLevel:
_prepareDismissingTransitionContext
willBeginAdjustingOrientation
_setViewDelegateContentOverlayInsetsAreClean:
presenterSupportedOrientations
wasCancelledWithInactiveScene
beginDisablingInterfaceAutorotation
initWithPresentedViewController:presentingViewController:withConfiguration:
shouldPresentInFullscreen
presentationTransitionWillBegin
presentationTransitionDidEnd:
dismissalTransitionWillBegin
dismissalTransitionDidEnd:
_context
_presentationWindowForDisablingAutorotation
T@"UIWindow",W,N,V_presentationWindowForDisablingAutorotation
T@"AVPresentationContext",R,N,V_context
_updatePlaybackControlsControllerAndZoomingBehavior
setPlayerControllerToRestore:
livePreviewAspectRatio
setPresentationSize:
playerControllerToRestore
setLivePreviewPlayerController:
_updatePictureInPictureController
livePreviewContainerView
isLivePreviewActive
livePreviewPlayerController
setLivePreviewActive:
playbackControlsShowsLoadingIndicator
setPlaybackControlsShowsLoadingIndicator:
setShowsVideoGravityButton:
avkit_constraintsFromEdgeAnchorsToEdgeAnchorsOfItem:
setForcePlaybackControlsHidden:
playbackControlsIncludePictureInPictureButton
setContentAspectRatio:
isZoomingEnabled
setZoomingEnabled:
hasMicrophone
setHasMicrophone:
setPlaybackControlsIncludePictureInPictureButton:
setLivePreviewAspectRatio:
setBackgroundColor:forContainerOfControlItem:
_playbackControlsIncludeTransportControls
_playbackControlsIncludeDisplayModeControls
_zoomingEnabled
_livePreviewActive
_hasMicrophone
_playbackControlsIncludePictureInPictureButton
_playbackControlsShowsLoadingIndicator
_livePreviewContainerView
_livePreviewPlayerController
_playerControllerToRestore
_livePreviewAspectRatio
T@"AVHomeIPCameraBehavior",W,N,V_behavior
T@"AVHomeIPCameraPlayerController",W,N,V_livePreviewPlayerController
T@"AVPlayerController",&,N,V_playerControllerToRestore
TB,N,V_playbackControlsShowsLoadingIndicator
TB,N,V_playbackControlsIncludeTransportControls
TB,N,V_playbackControlsIncludeDisplayModeControls
zoomingEnabled
TB,N,GisZoomingEnabled,V_zoomingEnabled
T@"UIView",R,N,V_livePreviewContainerView
livePreviewActive
TB,N,GisLivePreviewActive,V_livePreviewActive
TB,N,V_hasMicrophone
TB,N,V_canStartPictureInPictureAutomaticallyWhenEnteringBackground
TB,N,V_playbackControlsIncludePictureInPictureButton
T{CGSize=dd},N,V_livePreviewAspectRatio
seymourBehaviorContextDidReceiveButtonTap:
removeTarget:action:forControlEvents:
setWantsExternalPlaybackButtonShown:
_updateLegibleContentInsets
legibleContentInsets
setLegibleContentInsets:
hidePlaybackControlsImmediately
_legibleContentInsets
T{NSEdgeInsets=dddd},N,V_legibleContentInsets
T@,W,N,V_behavior
volumeControlsContentView
setVolumeControllerType:
mouseDidEnterVolumeControlsVolumeButton:
setMinimumValue:
setMaximumValue:
setSize:
setVolumeSliderContentView:
volumeSliderContentView
setVolumeControlsContentView:
volumeSlider
volumeControlParentView
volumeSliderTransportBarHeight
transportViewDelegate
volumeControlsControllerTransportBarHeight:
volumeSliderWidthConstraint
removeConstraint:
setVolumeSliderWidthConstraint:
setVolumeSliderTransportBarHeight:
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
addConstraint:
volumeSliderHeightConstraint
setVolumeSliderHeightConstraint:
volumeSliderGapConstraint
setVolumeSliderGapConstraint:
constraints
centerXAnchor
updateVolumeControlsContollerLayout
volumeButton
volumeControllerDelegate
volumeControlsController:volumeButtonControl:viewContainingVolumeSlider:
setVolumeControlParentView:
mouseDidEnterVolumeControlsContentView:
setVolumeSliderHover:
volumeSliderHover
layoutVolumeSliderViewIfNeeded
canShowVolumeSlider
volumeControlsController:volumeButtonControl:didShowVolumeSlider:
volumeControlsController:volumeButtonControl:didHideVolumeSlider:
setVolumeSliderGestureActive:
prepareSliderView
volumeSliderGestureActive
showSliderViewIfNeeded
hideVolumeSlider
setCanShowVolumeSlider:
setVolumeControllerDelegate:
setTransportViewDelegate:
playerViewHeight
setPlayerViewHeight:
_canShowVolumeSlider
_volumeSliderGestureActive
_volumeSliderTransportBarHeight
_playerViewHeight
_volumeButton
_volumeSlider
_volumeControllerDelegate
_transportViewDelegate
_volumeControlsContentView
_volumeSliderContentView
_volumeControlParentView
_volumeSliderHover
_volumeSliderGapConstraint
_volumeSliderWidthConstraint
_volumeSliderHeightConstraint
T@"AVVolumeControlsContentView",&,N,V_volumeControlsContentView
T@"AVLayoutView",&,N,V_volumeSliderContentView
T@"UIView",W,N,V_volumeControlParentView
TB,N,V_volumeSliderGestureActive
T@"UIHoverGestureRecognizer",&,N,V_volumeSliderHover
Tf,N,V_volumeSliderTransportBarHeight
Tf,N,V_playerViewHeight
T@"NSLayoutConstraint",&,N,V_volumeSliderGapConstraint
T@"NSLayoutConstraint",&,N,V_volumeSliderWidthConstraint
T@"NSLayoutConstraint",&,N,V_volumeSliderHeightConstraint
T@"AVVolumeButtonControl",R,N,V_volumeButton
T@"AVVolumeSlider",R,N,V_volumeSlider
TB,N,V_canShowVolumeSlider
T@"<AVVolumeControlsControllerDelegate>",W,V_volumeControllerDelegate
T@"<AVVolumeControlsControllerLayoutDelegate>",W,V_transportViewDelegate
setContentInsetAdjustmentBehavior:
setBouncesZoom:
setShowsVerticalScrollIndicator:
setShowsHorizontalScrollIndicator:
_updateMinMaxZoomScales
_contentRectForScale:
setDecelerationRate:
zoomScale
setScrollEnabled:
backgroundColor
canShowStatusBarBackgroundGradientWhenStatusBarVisible
setVideoGravity:removingAllSubayerTransformAnimations:
_contentSizeForScale:
setContentSize:
contentAspectRatio
convertPoint:fromView:
maximumZoomScale
minimumZoomScale
zoomToRect:animated:
setZoomScale:
removeAllSublayerTransformAnimations
setAlwaysBounceVertical:
setAlwaysBounceHorizontal:
setBouncesHorizontally:
setBouncesVertically:
isFullScreen
contentInset
_updateMinMaxZoomScales:
willMoveToWindow:
setLastKnownWindow:
setVideoContentFrame:
_contentInsets
setContentInset:
lastKnownWindow
setMinimumZoomScale:
setMaximumZoomScale:
initWithFrame:activeContentView:
videoContentFrame
T@"AVPlaybackContentContainerView",R,N
T{CGRect={CGPoint=dd}{CGSize=dd}},N
playingOnSecondScreen
TB,N,GisPlayingOnSecondScreen
zoomToPoint:
scrollView:contentSizeForZoomScale:withProposedSize:
setFullScreen:
previousBounds
setPreviousBounds:
_playingOnSecondScreen
_fullScreen
_activeContentView
_lastKnownWindow
_contentAspectRatio
_videoContentFrame
_previousBounds
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_previousBounds
T@"UIWindow",W,N,V_lastKnownWindow
T{CGSize=dd},N,V_contentAspectRatio
fullScreen
TB,N,GisFullScreen,V_fullScreen
T@"AVPlaybackContentContainerView",R,N,V_activeContentView
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_videoContentFrame
TB,N,GisPlayingOnSecondScreen,V_playingOnSecondScreen
initWithMessageClass:
airMessageParser
partsWithData:
extraData
resetState
messageClass
_previousUnusedData
_messageClass
T#,R,N,V_messageClass
backgroundPIPAuthorizationToken
playbackCoordinator
coordinationMediumDelegate
playbackCoordinator:promptForLeaveOrEndSessionAllowingCancellation:completionHandler:
movieScrubber
trimStartValue
trimEndValue
setEdgeInset:
dataSource
setMovieScrubber:
userObservationGestureRecognizerFired:
setEditable:
setTrimming:
setThumbIsVisible:
movieScrubberDuration:
movieScrubber:evenlySpacedTimestamps:startingAt:endingAt:
movieScrubberThumbnailAspectRatio:
movieScrubber:requestThumbnailImageForTimestamp:
movieScrubber:requestThumbnailImageForTimestamp:isSummaryThumbnail:
movieScrubber:valueDidChange:
movieScrubber:editingStartValueDidChange:
movieScrubber:editingEndValueDidChange:
movieScrubberDidBeginScrubbing:withHandle:
movieScrubberDidEndScrubbing:withHandle:
movieScrubber:widthDelta:originXDelta:
movieScrubberWillBeginRequestingThumbnails:
movieScrubberDidFinishRequestingThumbnails:
movieScrubberWillBeginEditing:
movieScrubberDidBeginEditing:
movieScrubberDidCancelEditing:
movieScrubberEditingAnimationFinished:
movieScrubber:willZoomToMinimumValue:maximumValue:
movieScrubberDidBeginAnimatingZoom:
movieScrubberDidEndAnimatingZoom:
prefersThumbVisible
_prefersThumbVisible
_trimming
_dataSource
_movieScrubber
T@"UIMovieScrubber",&,V_movieScrubber
trimming
TB,N,GisTrimming,V_trimming
T@"<AVEditViewDataSource>",W,N,V_dataSource
T@"<AVEditViewDelegate>",W,N,V_delegate
TB,N,V_prefersThumbVisible
time
dataType
internetDateFormatter
stringFromDate:
startDate
extraAttributes
setIdentifier:
localeWithLocaleIdentifier:
setLocale:
setTime:
setDuration:
dateFromString:
setStartDate:
setExtraAttributes:
itemArrayWithAirRepresentations:
setPagingEnabled:
_setInterpageSpacing:
setDirectionalLockEnabled:
incomingContentView
contentTransitioningViewShouldBeginDragging:locationInView:
_updateTransitionStateIfPossible
valueWithCGPoint:
setTargetContentOffset:
setTransitionInteractive:
_isAdjustingBoundsOrContentSize
_canTransitionFromState:toState:
_descriptionForState:
_updateSizeAndContentFrame
_performBoundsOrContentSizeAdjustment:
_makeStateDescription
setStateDescription:
contentTransitioningViewDidChangeTransitionStatus:oldState:oldTransitionDirection:oldProgress:
_setTransitionState:transitionDirection:transitionProgress:
contentTransitioningView:shouldBeginTransitionWithDirection:
contentTransitioningPlayerContentViewForTransition:
targetContentOffset
setContentOffset:animated:
CGPointValue
frameForActiveContentView
frameForTransitioningContentView
_isHorizontalBouncing
_frameExcludingTransitioningContent
_frameExcludingActiveContent
transitionState
_interpageSpacing
stateDescription
transitionDirection
numberWithInteger:
numberWithLong:
boundsOrContentSizeAdjustmentCount
setBoundsOrContentSizeAdjustmentCount:
setFrameForActiveContentView:
setFrameForTransitioningContentView:
_ensureContentViews
performTransition:
transitionProgress
setContentTransitioningDelegate:
isTransitionInteractive
_transitionInteractive
_transitionState
_transitionDirection
_transitionProgress
_contentTransitioningDelegate
_incomingContentView
_targetContentOffset
_stateDescription
_boundsOrContentSizeAdjustmentCount
_frameForActiveContentView
_frameForTransitioningContentView
T@"NSValue",&,N,V_targetContentOffset
T@"NSString",C,N,V_stateDescription
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_frameForActiveContentView
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_frameForTransitioningContentView
Tq,N,V_boundsOrContentSizeAdjustmentCount
transitionInteractive
TB,N,GisTransitionInteractive,V_transitionInteractive
T@"<AVPlaybackContentTransitioningViewDelegate>",W,N,V_contentTransitioningDelegate
T@"AVPlaybackContentContainerView",R,N,V_incomingContentView
Tq,R,N,V_transitionState
Tq,R,N,V_transitionDirection
Td,R,N,V_transitionProgress
initWithStyle:
initWithRootViewController:
navigationItem
setRightBarButtonItem:
setModalPresentationCapturesStatusBarAppearance:
navigationBar
_mediaSelectionTableViewController
setTitle:
playerControllerMediaSelectionChanged:
colorEffectSaturate:
effectWithBlurRadius:
effectCombiningEffects:
initWithEffect:
layerWithFillColor:opacity:filterType:
configWithContentConfig:
contentConfig
configureLayerView:
tableView
setBackgroundView:
registerClass:forCellReuseIdentifier:
lineHeight
setEstimatedRowHeight:
setSeparatorStyle:
numberOfSections
indexPathsForSelectedRows
deselectRowAtIndexPath:animated:
initiallyInteractive
notifyWhenInteractionChangesUsingBlock:
flashScrollIndicators
dequeueReusableCellWithIdentifier:forIndexPath:
section
_isSelectedOrCurrentAudioMediaSelectionOption:
_isSelectedOrCurrentLegibleMediaSelectionOption:
setAccessoryType:
setRepresentedObject:
textLabel
applySecondaryGlyphTintToView:
cellForRowAtIndexPath:
representedObject
visibleCells
indexPathForCell:
tableView:numberOfRowsInSection:
tableView:cellForRowAtIndexPath:
numberOfSectionsInTableView:
tableView:titleForHeaderInSection:
tableView:willDisplayHeaderView:forSection:
tableView:didSelectRowAtIndexPath:
_selectedAudioMediaSelectionOption
_selectedLegibleMediaSelectionOption
_representedObject
T@,&,N,V_representedObject
systemGrayColor
configurationByApplyingConfiguration:
imageNamed:inBundle:compatibleWithTraitCollection:
_imageNamed:compatibileWithTraitCollection:
pictureInPictureButtonStartImageCompatibleWithTraitCollection:
pictureInPictureButtonStopImageCompatibleWithTraitCollection:
initWithPlayerLayer:
initWithContentSource:
_commonInitWithSource:
_startObservationsForContentSource:
_configureContentSourceForVideoCallsIfNeeded:
platformAdapter
_sbdlPlayerController
initialRenderSize
setEnqueuedBufferDimensions:
setOtherPictureInPictureActive:
_setCanStopPictureInPicture:
isOtherPictureInPictureActive
_updateBackgroundPlaybackPolicyFromPlayerController
_stopPictureInPictureAndRestoreUserInterface:
allowsPictureInPictureFromInlineWhenEnteringBackground
setAllowsPictureInPictureFromInlineWhenEnteringBackground:
setCanTogglePictureInPicture:
stopObservingPlayerController:
startObservingPlayerController:
wantsImmediateAssetInspection
setPictureInPictureInterrupted:
setPlayerControllerIsPlayingObservationToken:
playerControllerIsPlayingObservationToken
prerollDelegate
pictureInPictureControllerPrerollAttributes:
_delegateIfRespondsToSelector:
togglePlaybackEvenWhenInBackground:
setWasPlayingWhenPictureInPictureInterruptionBegan:
wasPlayingWhenPictureInPictureInterruptionBegan
pictureInPictureControllerSkipPreroll:
sourceIfRetainedDuringPictureInPicturePlayback
setPictureInPictureSuspended:
setPictureInPictureWasStartedWhenEnteringBackground:
retainsSourceDuringPictureInPicturePlayback
setSourceIfRetainedDuringPictureInPicturePlayback:
dictionaryWithObject:forKey:
_shouldPauseWhenExitingPictureInPicture
sampleBufferDisplayLayer
avkit_removePictureInPicturePlayerController
_invalidateContentSourceForVideoCallsIfNeeded:
invalidatePlaybackState
sampleBufferDisplayLayerRenderSizeDidChangeToSize:
activeVideoCallContentViewController
_startObservingPlayerLayerContentSource:
hasInitialRenderSize
_startObservingSampleBufferDisplayLayerContentSource:
audiovisualBackgroundPlaybackPolicy
_updateEnqueuedBufferDimensions
pictureInPictureButtonStartImage
pictureInPictureButtonStopImage
pictureInPicturePlatformAdapter:stopPictureInPictureAndRestoreUserInterface:
pictureInPicturePlatformAdapter:statusDidChange:fromStatus:
T@"UIImage",R,N
reloadPrerollAttributes
sampleBufferDisplayLayerDidAppear
sampleBufferDisplayLayerDidDisappear
canStopPictureInPicture
setWantsImmediateAssetInspection:
setPrerollDelegate:
_pictureInPictureSuspended
_canStopPictureInPicture
_otherPictureInPictureActive
_wantsImmediateAssetInspection
_wasPlayingWhenPictureInPictureInterruptionBegan
_wantsResourceReduction
_retainsSourceDuringPictureInPicturePlayback
_allowsPictureInPictureFromInlineWhenEnteringBackground
_pictureInPictureWasStartedWhenEnteringBackground
_playerLayer
_platformAdapter
_sourceIfRetainedDuringPictureInPicturePlayback
_playerControllerIsPlayingObservationToken
_prerollDelegate
T@"AVPictureInPicturePlatformAdapter",R,N,V_platformAdapter
T@"<AVPictureInPictureContentSource>",&,N,V_sourceIfRetainedDuringPictureInPicturePlayback
T@,&,N,V_playerControllerIsPlayingObservationToken
TB,N,GisPictureInPictureActive,V_pictureInPictureActive
TB,N,GisPictureInPictureSuspended,V_pictureInPictureSuspended
otherPictureInPictureActive
TB,N,GisOtherPictureInPictureActive,V_otherPictureInPictureActive
TB,N,S_setCanStopPictureInPicture:,V_canStopPictureInPicture
TB,N,V_wantsImmediateAssetInspection
TB,N,V_wasPlayingWhenPictureInPictureInterruptionBegan
T@"<AVPictureInPictureContentSource>",R,W,N,V_source
T@"AVPictureInPictureViewController",R,N
TB,R,N,V_wantsResourceReduction
TB,N,V_retainsSourceDuringPictureInPicturePlayback
TB,N,V_allowsPictureInPictureFromInlineWhenEnteringBackground
TB,N,V_pictureInPictureWasStartedWhenEnteringBackground
T@"<AVPictureInPicturePrerollDelegate>",W,N,V_prerollDelegate
T@"AVPictureInPictureControllerContentSource",&,N,V_contentSource
T@"AVPlayerLayer",R,N,V_playerLayer
T@"<AVPictureInPictureControllerDelegate>",W,N,V_delegate
_activeVideoCallContentViewController
version
_activeVideoCallSourceView
_initialRenderSize
_sampleBufferDisplayLayer
_sampleBufferPlaybackDelegate
_hasInitialRenderSize
__activeVideoCallSourceView
__activeVideoCallContentViewController
T@"<AVPictureInPictureContentSource>",R,N
T@,R,W,N,V__activeVideoCallSourceView
T@"<AVPictureInPictureContentSource>",R,N,V__activeVideoCallContentViewController
TB,R,N,V_hasInitialRenderSize
initWithSampleBufferDisplayLayer:initialRenderSize:playbackDelegate:
initWithSampleBufferDisplayLayer:playbackDelegate:
sampleBufferPlaybackDelegate
T@"AVSampleBufferDisplayLayer",R,N
T@"<AVPictureInPictureSampleBufferPlaybackDelegate>",R,W,N
initWithActiveVideoCallSourceView:contentViewController:
T@"AVPictureInPictureVideoCallViewController",R,N
_avkit_timeForFrameUsingSampleCursorSteppedByFrameCount:fromFrameAtTime:
_avkit_findTimeForFrameUsingFrameRateSteppedByFrameCount:fromFrameAtTime:
nominalFrameRate
_avkit_frameRateIsValid:
minFrameDuration
avkit_timeForFrameSteppedByFrameCount:fromFrameAtTime:
isPIPModeEnabled
avkit_makePictureInPicturePlatformAdapterContentPlaceholderLayer
_buttonTouchUpInside:
setTitleFont:
setUsesBackgroundEffectViewForTextOnlyButtons:
_updateButton
_updateTintColor
secondaryGlyphTintColor
tintColor
applyGlyphTintColor:toView:
setAccessibilityAttributedLabel:
setAccessibilityHint:
setAccessibilityAttributedHint:
action
setImage:forState:
titleFont
initWithTitle:type:
setImage:
setAction:
_titleFont
_image
_action
_tintColor
Tq,R,N,V_type
T@"NSString",C,N,V_title
T@"UIImage",&,N,V_image
T@?,C,N,V_action
T@"UIColor",&,N,V_tintColor
text
font
loadingIndicatorAlignment
numberOfLines
labelIfLoaded
label
isEqualToAttributedString:
setAttributedText:
didMoveToSuperview
tintColorDidChange
translatesAutoresizingMaskIntoConstraints
centerYAnchor
loadingIndicatorLeftAlignmentConstraint
loadingIndicatorRightAlignmentConstraint
setLoadingIndicatorAlignment:
viewForFirstBaselineLayout
viewForLastBaselineLayout
attributedText
setLoadingIndicatorLeftAlignmentConstraint:
setLoadingIndicatorRightAlignmentConstraint:
_label
_loadingIndicatorAlignment
_text
_attributedText
_font
_numberOfLines
_loadingIndicatorLeftAlignmentConstraint
_loadingIndicatorRightAlignmentConstraint
T@"UILabel",R,N,V_label
T@"UILabel",R,N
T@"UIActivityIndicatorView",R,N,V_loadingIndicator
Tq,N,V_numberOfLines
T@"NSLayoutConstraint",&,N,V_loadingIndicatorLeftAlignmentConstraint
T@"NSLayoutConstraint",&,N,V_loadingIndicatorRightAlignmentConstraint
Tq,N,V_loadingIndicatorAlignment
T@"NSString",C,N,V_text
T@"NSAttributedString",C,N,V_attributedText
T@"UIFont",&,N,V_font
_stopManagingContentView
_beginManagingContentViewIfNeeded
needsInitialLayout
setNeedsInitialLayout:
_needsInitialLayout
TB,N,V_needsInitialLayout
T@"UIView",&,N,V_contentView
initWithStartTime:duration:
timeRange
initWithCMTimeRange:
CMTimeRangeValue
dateByAddingTimeInterval:
timeIntervalSinceDate:
endTime
startCMTime
endCMTime
endDate
deltaTimeFromOutsideTime:
timeRangeZero
initWithStartTime:endTime:
setMapTime:toDate:
timeRangeByAddingTimeInterval:shiftingDates:
isEqualToDate:
isEqualToTimeRange:
setStyle:
setFormatTemplate:
stringFromSeconds:
setDateStyle:
setTimeStyle:
initWithAVTimedMetadataGroup:
initWithUnionOfCMTimeRanges:
setMapDate:toTime:
dateForTime:
timeForDate:
cmTimeRange
containsTime:
containsDate:
pinnedTime:
timeRangeIntersectingWithTimeRange:
timeRangeExcludingTimeRange:
timeRangeByAddingTimeInterval:
_startDate
T{?=qiIq},R
T@"NSDate",&,N,V_startDate
Td,R
initWithTimeRanges:
timeRanges
displayTimeFromTime:
enumerateObjectsWithOptions:usingBlock:
arrayOfDisplayTimesMatching:
timeFromDisplayTime:
isCollapsedInTimeLine
timeRangeContainingTime:
initWithTimedMetadataGroups:
timeRangeClosestToTime:
timeRangeBeforeTime:
timeRangeAfterTime:
arrayOfBoundaryTimes
arrayOfDisplayTimes
timeRangesBetweenDisplayTime:and:
displayTimeRangeTrimmedToTimeRange:
combinedDuration
_timeRanges
_combinedDuration
T@"NSArray",R,V_timeRanges
Td,R,V_combinedDuration
hasRouteSharingPolicyLongFormVideo:
longFormVideoRoutingSessionManager
currentRoutingSession
prefersLikelyDestinationsOverCurrentRoutingSession
destination
providesExternalVideoPlayback
externalPlaybackStateDescriptionForState:
likelyExternalDestinations
initWithConfiguration:
startPrewarming
routingContextUID
outputContextForID:
outputDevices
deviceType
_invokeClientCompletionHandlerWithPlaybackState:
setDismissHandlerWithReason:
present
willBeginPlaybackWithCompletionHandler:
_mediaControls
_clientCompletionHandler
punctuationCharacterSet
componentsSeparatedByCharactersInSet:
stringIsValidNumericValue:
decimalDigitCharacterSet
invertedSet
rangeOfCharacterFromSet:
initWithTimecodeString:
timecodeStruct
setTimecodeStruct:
frameNumber
setFrameNumber:
frameDuration
setFrameDuration:
tc_flags
setTc_flags:
_tc_flags
_frameNumber
_timecodeStruct
_frameDuration
T{CVSMPTETime=ssIIIssss},N,V_timecodeStruct
Tq,N,V_frameNumber
T{?=qiIq},N,V_frameDuration
TI,N,V_tc_flags
readTimecodes
calculateFrameNumberAtCMTime:
timecodeForFrameNumber64UsingCachedDescription:
offsetFor:fromTimecode:
timecodeForOffset:from:timecode:
validateCMTime:
naturalTimeScale
timecodeForFrameNumber32UsingFormatDescription:timecodeStartFrame:
timecodeTrack
initWithAsset:error:
assetReaderTrackOutputWithTrack:outputSettings:
addOutput:
startReading
copyNextSampleBuffer
cacheTimecodeDescriptionForSampleBuffer:
cancelReading
calculateMaxFrameAndTimecode
initWithTimecodeTrack:videoTrack:
maxTimecodeString
maxFrameCountString
calculateTimecodeAtFrame:
calculateFrameNumberAtTimecode:
calculateFrameNumberAtTimeInterval:
timeIntervalForFrameNumber:
timecodeAvailable
setTimecodeTrack:
observationInterval
_frameCount
_videoTrack
_timecodeTrack
_timecodes
_maxTimecode
_maxFrameNumber
_timeObserver
_observationInterval
T@"AVAssetTrack",&,N,V_timecodeTrack
T{?=qiIq},R,N,V_observationInterval
_setStatusAndNotifyDelegateIfNeeded:
collectionWithRates:
_initInternalWithRates:
selectNextPlaybackRate:
_rates
_selectedRate
T@"NSArray",R,N
T@"AVPlaybackRate",R,N,V_selectedRate
setValue:forKey:
valueWithCAColorMatrix:
colorWithRed:green:blue:alpha:
updateGroupLeader
groupLeader
activeBackdropEffect
forceLowQualityEffect
dependents
_enumerateDependents:
setActiveBackdropEffect:
_updateFilters
captureOnly
setCaptureOnly:
removeDependent:
addDependent:
updateActiveBackdropEffectIfGroupLeader
setGroupLeader:
_ensureDependents
isCaptureOnly
groupName
setGroupName:
setFilters:
blurFilter
colorMatrixFilter
customBackgroundColor
averageFilter
reducedTransparencyColor
filters
setCustomBackgroundColor:
setForceLowQualityEffect:
_forceLowQualityEffect
_customBackgroundColor
_groupLeader
_dependents
_activeBackdropEffect
T@"AVCABackdropLayerView",W,N,V_groupLeader
T@"NSHashTable",R,N,V_dependents
Tq,N,V_activeBackdropEffect
TB,N,GisCaptureOnly
TB,N,V_forceLowQualityEffect
T@"UIColor",C,N,V_customBackgroundColor
unscaledSize
begin
setDisableActions:
setPosition:
commit
_defaultActiveTintColor
_createOrUpdateRoutePickerButton
activeTintColor
getRed:green:blue:alpha:
setSortByIsVideoRoute:
_routePickerButtonTapped:
buttonWithType:
setContentEdgeInsets:
setContentHorizontalAlignment:
setContentVerticalAlignment:
initWithPackageName:layoutDirection:
removeCompositingFiltersWithName:
addSublayer:
_routePickerButtonTouchDown:
_routePickerButtonTouchDragEnter:
_routePickerButtonTouchUp:
routePickerViewWillBeginPresentingRoutes:
routePickerViewDidEndPresentingRoutes:
overrideRouteSharingPolicyForRoutePickerView:
overrideRoutingContextUIDForRoutePickerView:
initWithRouteSharingPolicy:routingContextUID:
setDismissHandler:
_setRoutePickerButtonAlpha:animated:
isRunning
isInterruptible
stopAnimation:
finishAnimationAtPosition:
initWithDuration:curve:animations:
_updateAirPlayActive
_isAirPlayActive
setAirPlayActive:
setActiveTintColor:
setCustomButton:
presentRoutePicker:
_registerNotifications
_setupOutputContext
_normalizedRect:fromView:
routePickerButtonStyle
setRoutePickerButtonStyle:
_getAirPlayStatusQueue
_activeTintColor
_routePickerButton
_oldSize
_buttonHighlightAnimator
_outputContext
_airPlayActive
_prioritizesVideoDevices
_routePickerButtonMicaPackage
_routePickingControls
_routePickerButtonStyle
T@"<AVRoutePickerViewDelegate>",W,N,V_delegate
T@"UIColor",&,N
Tq,N,V_routePickerButtonStyle
initWithDisplayScale:placeholderImage:opaque:
layoutSublayers
videoRectWhenPIPBegan
contentLayer
setBounds:
setCustomText:
customText
_contentLayer
_videoRectWhenPIPBegan
T@"AVPictureInPictureIndicatorSublayer",R,N,V_contentLayer
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_videoRectWhenPIPBegan
initWithString:attributes:
ascender
setContents:
setContentsGravity:
setContentsScale:
setFontSize:
setForegroundColor:
setAlignmentMode:
setString:
setTruncationMode:
setWrapped:
canRenderAttributedTextWithoutTruncationInsideRect:
layoutSublayersWithTextAndImageUsingInsetBounds:
textBoundingRectWhenDrawnInRect:
boundingRectWithSize:options:context:
_imageSize
_languageAwareOutsets
_lineHeight
_baselineOffset
_textLayer
_imageLayer
_customText
T@"NSString",C,N,V_customText
_ensureOrRemoveLayoutView
applyPrimaryGlyphTintToView:
secondaryMaterialOverlayView
_updateBackdropShape
layoutView
setPrefersLowQualityEffects:
isCircular
automaticallyDrawsRoundedCorners
_isContainedInOverlappingBackgroundView
setLayoutView:
prefersLowQualityEffects
sendSubviewToBack:
addSubview:applyingMaterialStyle:tintEffectStyle:
setAutomaticallyDrawsRoundedCorners:
setCircular:
_automaticallyDrawsRoundedCorners
_prefersLowQualityEffects
_circular
_layoutView
T@"AVLayoutView",&,N,V_layoutView
TB,N,V_automaticallyDrawsRoundedCorners
TB,N,V_prefersLowQualityEffects
circular
TB,N,GisCircular,V_circular
setIsAccessibilityElement:
_updateMicaPackage:
showsHighlightedAppearance
highlightAnimator
micaPackageContainerView
setHighlightAnimator:
setCumulativeTranslationSincePanningBegan:
setTranslationOfPanFromPreviousTouch:
setLocationOfTouchInWindow:
setShowsHighlightedAppearance:
micaPackageStateName
transform
isLongPressEnabled
trackingState
setTrackingState:
setLongPressTimer:
longPressTimer
preciseLocationInView:
setInitialPreciseLocationOfTouch:
force
initialPreciseLocationOfTouch
precisePreviousLocationInView:
cumulativeTranslationSincePanningBegan
translationOfPanFromPreviousTouch
imageNameForMicaPackageState
removeFromSuperlayer
imageView
avkit_imageNamed:completion:
volumeControllerType
position
setMicaPackageStateName:
triggerSelectionChangedFeedback
setNeedsUpdateGlyphRenderingMode
setLongPressEnabled:
locationOfTouchInWindow
setImageView:
setMicaPackageContainerView:
_trackingState
_longPressEnabled
_showsHighlightedAppearance
_micaPackageStateName
_highlightAnimator
_micaPackage
_micaPackageContainerView
_longPressTimer
_volumeControllerType
_translationOfPanFromPreviousTouch
_cumulativeTranslationSincePanningBegan
_locationOfTouchInWindow
_initialPreciseLocationOfTouch
T@"UIViewPropertyAnimator",W,N,V_highlightAnimator
T@"AVMicaPackage",&,N,V_micaPackage
T@"UIImageView",&,N,V_imageView
T@"UIView",&,N,V_micaPackageContainerView
T{CGPoint=dd},N,V_initialPreciseLocationOfTouch
T@"NSTimer",W,N,V_longPressTimer
Tq,N,V_trackingState
TB,N,V_showsHighlightedAppearance
Tq,N,V_volumeControllerType
T@"NSString",&,N,V_micaPackageStateName
longPressEnabled
TB,N,GisLongPressEnabled,V_longPressEnabled
T{CGPoint=dd},N,V_translationOfPanFromPreviousTouch
T{CGPoint=dd},N,V_cumulativeTranslationSincePanningBegan
T{CGPoint=dd},N,V_locationOfTouchInWindow
automaticallyNotifiesObserversOfCurrentTime
interval
setInterval:
setMinTime:
maxTime
setMaxTime:
_interval
_currentTime
_timer
_minTime
_maxTime
Td,V_minTime
Td,V_maxTime
T@"<AVTimeControlling>",&
targetTime
setTargetTime:
seekableTimeRanges
targetTimeWithinEndTimes
setTargetTimeWithinEndTimes:
remainingTargetTimeWithinEndTimes
setCurrentTimeWithinEndTimes:
remainingTime
remainingTimeWithinEndTimes
seekableTimeRangeDuration
isCurrentTimeAtEndOfSeekableTimeRanges
keyPathsForValuesAffectingTargetTime
keyPathsForValuesAffectingTargetTimeWithinEndTimes
keyPathsForValuesAffectingRemainingTargetTimeWithinEndTimes
keyPathsForValuesAffectingCurrentTimeWithinEndTimes
keyPathsForValuesAffectingRemainingTime
keyPathsForValuesAffectingRemainingTimeWithinEndTimes
keyPathsForValuesAffectingSeekableTimeRangeDuration
keyPathsForValuesAffectingCurrentTimeAtEndOfSeekableTimeRanges
currentTimeAtEndOfSeekableTimeRanges
TB,R,GisCurrentTimeAtEndOfSeekableTimeRanges
minTiming
maxTiming
initWithTimeInterval:queue:block:repeats:
currentTotalSize
setCurrentTotalSize:
valueWithSize:
requiredPrioritySizes
veryHighPrioritySizes
highPrioritySizes
mediumPrioritySizes
lowPrioritySizes
sizeValue
removeLastSizeOfPriority:
sizesResolvingFirstPrioritizedSize:secondPrioritizedSize:inAvailableWidth:
addSize:withPriority:
setRequiredPrioritySizes:
setVeryHighPrioritySizes:
setHighPrioritySizes:
setMediumPrioritySizes:
setLowPrioritySizes:
_requiredPrioritySizes
_veryHighPrioritySizes
_highPrioritySizes
_mediumPrioritySizes
_lowPrioritySizes
_currentTotalSize
T@"NSMutableArray",&,N,V_requiredPrioritySizes
T@"NSMutableArray",&,N,V_veryHighPrioritySizes
T@"NSMutableArray",&,N,V_highPrioritySizes
T@"NSMutableArray",&,N,V_mediumPrioritySizes
T@"NSMutableArray",&,N,V_lowPrioritySizes
T{CGSize=dd},N,V_currentTotalSize
_updateZoomingView
contentZoomingView
setContentZoomingView:
setPlaybackContentContainerView:
doubleTapGestureRecognizer
_handleDoubleTapGestureRecognizer:
setDoubleTapGestureRecognizer:
_contentZoomingView
_doubleTapGestureRecognizer
T@"AVZoomingBehavior",W,N,V_behavior
T@"AVPlaybackContentZoomingView",&,N,V_contentZoomingView
T@"UITapGestureRecognizer",&,N,V_doubleTapGestureRecognizer
contentTransitionView
_transitionDirectionForContentTransitionType:
contentTransitionTypeForTransitionDirection:
updateStartLeftRightContentTransitionButtonsEnabled
isStartPreviousContentTransitionButtonEnabled
isStartNextContentTransitionButtonEnabled
activeContentTransitionType
startContentTransition:
transportControlsView
setCustomContentTransitioningInfoPanel:
interactiveGestureTracker
setStyleSheetShouldUseCompactFullScreenItemSize:
customContentTransitioningInfoPanel
setContentTransitionView:
setContentTransitioningPlayer:
contentTransitioningPlayer
setVideoGravityForTransitioningContent:
contentTransitioningOverlayView
setStartNextContentTransitionButtonEnabled:
setStartPreviousContentTransitionButtonEnabled:
_startNextContentTransitionButtonEnabled
_startPreviousContentTransitionButtonEnabled
_contentTransitioningPlayer
_customContentTransitioningInfoPanel
_contentTransitionView
T@"AVPlayer",&,N,V_contentTransitioningPlayer
T@"AVPlaybackContentTransitioningView",&,N,V_contentTransitionView
T@"AVNewsWidgetPlayerBehavior",W,N,V_behavior
contentTransitionInteractive
TB,R,N,GisContentTransitionInteractive
startNextContentTransitionButtonEnabled
TB,N,GisStartNextContentTransitionButtonEnabled,V_startNextContentTransitionButtonEnabled
startPreviousContentTransitionButtonEnabled
TB,N,GisStartPreviousContentTransitionButtonEnabled,V_startPreviousContentTransitionButtonEnabled
T@"UIView",&,N,V_customContentTransitioningInfoPanel
legacyDelegate
playerViewController:playerForContentTransitionType:
playerViewControllerWillBeginContentTransition:
playerViewController:didUpdateContentTransitionProgress:
playerViewControllerWillCompleteContentTransition:
playerViewControllerDidCompleteContentTransition:
playerViewControllerWillCancelContentTransition:
playerViewControllerDidCancelContentTransition:
setLegacyDelegate:
_legacyDelegate
T@"<AVPlayerViewControllerContentTransitioning_NewsOnly>",W,N,V_legacyDelegate
_newsWidgetPlayerBehaviorContext
_newsWidgetPlayerLegacyBehavior
behaviorContextOfClass:
behaviorOfClass:
T@"AVPlayer",R,N
T@"<AVPlayerViewControllerContentTransitioning_NewsOnly>",W,N
TB,N,GisStartNextContentTransitionButtonEnabled
TB,N,GisStartPreviousContentTransitionButtonEnabled
T@"UIView",&,N
transitionDuration
transitionAnimator
fractionComplete
isReversed
initWithAnimationCurve:
clientAnimator
setScrubsLinearly:
allAnimators
transitionBackgroundViewBackgroundColor:
transitionPresentedViewBackgroundColor:
_presentationTransitionWillBegin
_dismissalTransitionWillBegin
transitionStyle
insertSubview:belowSubview:
_updateCornerAppearanceAttributesOfView:toSourceView:similarity:
_sourceViewFrameInContainerView
interfaceRotation
willStartPresentationTransitionFromInterfaceOrientation:toOrientation:needsCounterRotation:
counterRotationTransform
viewControllerForKey:
finalFrameForViewController:
insertSubview:below:
willStartDismissalTransitionFromInterfaceOrientation:toOrientation:needsCounterRotation:
pauseInteractiveTransition
pauseAnimation
makeObjectsPerformSelector:
addKeyframeWithRelativeStartTime:relativeDuration:animations:
animateKeyframesWithDuration:delay:options:animations:completion:
updateInteractiveTransition:
setFractionComplete:
finishInteractiveTransition
_animateFinishInteractiveTransition
completeTransition:
_startOrContinueAnimatorsReversed:
_freezeDismissingViewForFinishing
cancelInteractiveTransition
_animateAlongsideInteractivePresentationTransitionAnimationForCancelling
_animateAlongsideInteractiveDismissalTransitionAnimationForCancelling
_alongsideAnimationsCount
__runAlongsideAnimations
_dismissalTransitionDidEnd:
_presentationTransitionDidEnd:
transitionWillComplete:success:continueBlock:
setReversed:
timingParameters
continueAnimationWithTimingParameters:durationFactor:
cornerCurve
initWithTransitionContext:
transitionAnimatorProgress
startInteractiveTransition
updateWithPercentComplete:scale:translation:rotation:
addRunAlongsideAnimationsIfNeeded
_initialFrameForPresentedView
_finalFrameForPresentedView
_transformForScale:translation:rotation:locationInWindow:sourceRectInContainerView:
setPresentationContext:
_presentationContext
_transitionAnimator
_clientAnimator
_allAnimators
T@"<UIViewControllerContextTransitioningEx>",R,W,N,V_transitionContext
T@"UIViewPropertyAnimator",R,N,V_transitionAnimator
T@"UIViewPropertyAnimator",R,N,V_clientAnimator
T@"NSMutableArray",R,N,V_allAnimators
T@"AVPresentationContext",&,N,V_presentationContext
T@"<AVTransitionDelegate>",W,N,V_delegate
initWithLayoutRowHeads:
arrayWithCapacity:
rowHeads
firstAttributesInLayoutOrder
_heightForRow:startingFrom:inBoundingSize:
rowSpacing
_lastVisibleLayoutItemAttributesFrom:
_flexibleWidthMapForLayoutItemsBeginningWithLayoutItem:endingWithItem:withAvailableSize:
trailingInterItemSpace
hasFlexibleContentSize
valueWithRect:
nextAttributesInLayoutOrder
enumerateObjectsUsingBlock:
firstAttributesInPriorityOrder
canSubstituteOtherAttributes
canOnlyAppearInControlOverflowMenu
canOverflowToAuxiliaryMenu
displayPartnerAttributes
nextAttributesInPriorityOrder
itemsThatFitSize:
displayPriority
layoutFramesInBoundingSize:
prioritizedSizeThatFitsSize:
setRowSpacing:afterRow:
layoutHeightThatFitsRowsStartingWithRow:
debugIdentifier
setDebugIdentifier:
setRowHeads:
setRowSpacing:
_debugIdentifier
_rowHeads
_rowSpacing
T@"NSArray",&,N,V_rowHeads
T@"NSMutableArray",&,N,V_rowSpacing
T@"NSString",C,N,V_debugIdentifier
initWithSize:
fillRect:
imageWithActions:
resizableImageWithCapInsets:
imageWithRenderingMode:
initWithImageName:font:prefersWesternLatinDigits:
avkit_loadedImageConfigurations
currentLocale
languageCode
imageWithConfiguration:
_avkit_imageLoadingQueue
configurationWithTextStyle:scale:
initWithString:font:
_avkit_textImageCache
_avkit_imageWithSize:ofText:font:scaleFactor:
setObject:forKey:
fontWithSize:
sizeWithAttributes:
drawAtPoint:withAttributes:
imageOrientation
imageWithCGImage:scale:orientation:
setCountLimit:
avkit_imageWithSymbolNamed:textStyle:scale:
avkit_imageWithSize:ofText:font:scaleFactor:completion:
prefersWesternLatinDigits
imageName
_suppressesAccessibilityHairlineThickening
string
_prefersWesternLatinDigits
_string
T@"NSString",R,C,N,V_string
T@"UIFont",R,N,V_font
TB,R,N,V_prefersWesternLatinDigits
numberingSystem
_loadRootLayerIfNeeded
_setState:
_recursivelySetFillColor:rootLayer:
_recursivelyRemoveCompositingFiltersWithName:rootLayer:
classSubstitions
transitionToStateWithName:
sublayers
_recursivelyFindSublayerWithName:rootLayer:
setFillColor:
compositingFilter
transitionToStateWithName:onLayer:
stateWithName:
stateController
setState:ofLayer:transitionSpeed:
availableStatesOnLayer:
states
packageName
layoutDirection
activateBackground:
parser
parseContentsOfURL:
result
initWithLayer:
CAMLParser:resourceForURL:
CAMLParser:didLoadResource:fromURL:
CAMLParser:didFailToLoadResourceFromURL:
CAMLParser:didFailToFindClassWithName:
CAMLParser:evaluateScriptElement:sourceURL:lineNumber:
CAMLParser:evaluateScriptValue:sourceURL:lineNumber:
CAMLParser:formatWarningString:arguments:lineNumber:
CAMLParser:formatErrorString:arguments:lineNumber:
stateController:didSetStateOfLayer:
stateController:transitionDidStart:speed:
stateController:transitionDidStop:completed:
availableStates
sublayerWithName:
targetSize
setUnscaledSize:
setLayoutDirection:
setRootLayer:
_packageName
_stateController
_layoutDirection
_rootLayer
_targetSize
_unscaledSize
T@"CAStateController",R,N,V_stateController
T{CGSize=dd},N,V_unscaledSize
Tq,N,V_layoutDirection
T@"CALayer",&,N,V_rootLayer
T@"NSString",R,C,N,V_state
T{CGSize=dd},N,V_targetSize
T@"NSString",R,N,V_packageName
includedControlType
setIncludedControlType:
setVolumeButtonMicaPackageStateName:
volumeButtonContainer
_makeProminentPlayButtonAndContainerIfNeeded
prominentPlayButtonContainer
_makeVolumeButtonAndContainerIfNeeded
isEqualToValue:
_updateFramesAndHitRectInsets
_frameForIncludedViewType:
UIEdgeInsetsValue
_makeVolumeButtonAndContainer
setVolumeButtonContainer:
setVolumeButton:
volumeButtonMicaPackageStateName
_makeProminentPlayButtonAndContainer
setInlineFont:
setTintEffectStyle:
setProminentPlayButtonContainer:
initWithFrame:styleSheet:
hasVisibleControls
_includedControlType
_volumeButtonMicaPackageStateName
_prominentPlayButtonContainer
_volumeButtonContainer
T@"UIView",&,N,V_prominentPlayButtonContainer
T@"AVButton",W,N,V_prominentPlayButton
T@"UIView",&,N,V_volumeButtonContainer
T@"AVVolumeButtonControl",W,N,V_volumeButton
T@"UIView",R,N,V_contentView
Tq,N,V_includedControlType
T@"NSString",C,N,V_volumeButtonMicaPackageStateName
T{CGAffineTransform=dddddd},N,V_overrideTransformForProminentPlayButton
T@"NSValue",&,N,V_overrideLayoutMarginsWhenEmbeddedInline
animations
completions
performCoordinatedAnimations
didFinishAnimations:
_animations
_completions
T@"NSMutableArray",R,N,V_animations
T@"NSMutableArray",R,N,V_completions
UTF8String
_invalidated
Td,R,V_interval
_determineIsReadyToConnect
_startObservingPlayer
_loadSecondScreenViewControllerIfNeeded
setSourcePlayerLayer:
_postNotification:oldValue:newValue:
_updateReadyToConnect
setConnectedSecondScreen:
connectedSecondScreen
setInitialScreenBoundsHint:
_updatePreferredDisplayCriteriaFromPreparedAssetIfNeeded:
setPreferredDisplayCriteria:
initWithRefreshRate:videoDynamicRange:
setReadyToConnect:
_allowsNonAirPlayExternalPlayback
_currentItemIsReadyToPlayVideoOrLoadingWhileActive
allowsExternalPlayback
usesExternalPlaybackWhileExternalScreenIsActive
hasVideo
setPlayerLayer:
setRequiresTVOutScreen:
setMaximumVideoResolution:
isReady
setReady:
_readyToConnect
_active
_playing
_requiresTVOutScreen
_ready
_debugAssistant
_connectedSecondScreen
_preferredDisplayCriteria
_maximumVideoResolution
active
TB,N,GisActive,V_active
T@"AVSecondScreen",W,N,V_connectedSecondScreen
T@"AVDisplayCriteria",&,N,V_preferredDisplayCriteria
T{CGSize=dd},N,V_maximumVideoResolution
ready
TB,N,GisReady,V_ready
playing
TB,N,GisPlaying,V_playing
TB,N,V_requiresTVOutScreen
T@"AVSecondScreenViewController",&,N,V_secondScreenViewController
T@"AVPlayer",R,N,V_player
T@"AVPlayerLayer",R,W,N,V_playerLayer
readyToConnect
TB,R,N,GisReadyToConnect,V_readyToConnect
T@"AVSecondScreenDebugAssistant",R,N,V_debugAssistant
T@"AVDisplayCriteria",&,D,N
TB,D,N,GisReadyToConnect
TB,D,N,GisPlaying
TB,D,N
keyValueObservationController
setKeyValueObservationController:
T@"AVObservationController",&,N,V_keyValueObservationController
setWillBeginOrientationChange:
willBeginOrientationChange
fromOrientation
toOrientation
avkit_overrideLayoutMarginsForInterfaceOrientation:
setBeingPresented:
setFromOrientation:
setToOrientation:
setCounterRotatingContentView:
setBeingDismissed:
_radiansForCounterRotation
wantsAppearanceConfigValues
actualView
presentationContainerContentView
_contentTransform
_setCornerRadius:
_counterRotatingContentView
_wantsAppearanceConfigValues
_beingPresented
_beingDismissed
_willBeginOrientationChange
_presentationContainerContentView
_fromOrientation
_toOrientation
T@"AVPresentationContainerViewLayer",R,D,N
counterRotatingContentView
TB,N,GisCounterRotatingContentView,V_counterRotatingContentView
beingPresented
TB,N,GisBeingPresented,V_beingPresented
beingDismissed
TB,N,GisBeingDismissed,V_beingDismissed
Tq,N,V_fromOrientation
Tq,N,V_toOrientation
TB,N,V_willBeginOrientationChange
T@"UIView",W,N,V_presentationContainerContentView
T@"AVPresentationContainerViewAppearanceProxy",R,N
TB,N,V_wantsAppearanceConfigValues
_clipsToBounds
_actualView
_cornerCurve
_maskedCorners
_backgroundColor
T@"UIView",W,N,V_actualView
T@"NSString",&,N,V_cornerCurve
TQ,N,V_maskedCorners
Td,N,V_cornerRadius
T@"UIColor",&,N,V_backgroundColor
TB,N,V_clipsToBounds
setMasksToBounds:
continuousCorners
setContinuousCorners:
_appearanceProxy
T@"AVPresentationContainerViewAppearanceProxy",R,N,V_appearanceProxy
setLineSeparator:
setHeaderBodySeparator:
setBodyLengthKey:
setCompressionMethodKey:
dataUsingEncoding:
setLineSeparatorData:
setHeaderBodySeparatorData:
lineSeparator
lineSeparatorData
headerBodySeparator
headerBodySeparatorData
bodyLengthKey
messagePartsWithData:lineSeparator:data:headerBodySeparator:data:bodyLengthKey:
compressionMethodKey
decompressBodyUsingNamedAlgorithm:
setUncompressedBodyData:
initWithLineSeparator:headerBodySeparator:bodyLengthKey:compressionMethodKey:
_lineSeparator
_headerBodySeparator
_bodyLengthKey
_compressionMethodKey
_lineSeparatorData
_headerBodySeparatorData
T@"NSString",C,N,V_lineSeparator
T@"NSString",C,N,V_headerBodySeparator
T@"NSString",C,N,V_bodyLengthKey
T@"NSString",C,N,V_compressionMethodKey
T@"NSData",&,N,V_lineSeparatorData
T@"NSData",&,N,V_headerBodySeparatorData
T@"AVMessageParser",R,N
headers
_identifyUniqueAndRepeatedHeadersIfNecessary
JSONObjectWithData:options:error:
bodyAsJSON
decompressBodyUsingAlgorithm:
rangeOfData:options:range:
initWithVersion:headers:expectedBodyLength:body:extra:
componentsSeparatedByString:
_setIncomplete
repeatedHeaders
bodyAsUTF8Text
_uniqueHeaders
_repeatedHeaders
_isIncomplete
_version
_headers
_expectedBodyLength
_rawBodyData
_extraData
_uncompressedBodyData
T@"NSData",&,N,V_uncompressedBodyData
TB,R,N,V_isIncomplete
T@"NSString",R,N,V_version
T@"NSArray",R,N,V_headers
Tq,R,N,V_expectedBodyLength
T@"NSData",R,N,V_rawBodyData
T@"NSData",R,N,V_extraData
T@,R,N
_matchingClass
animationKeys
animationForKey:
containsString:
removeAnimationForKey:
avkit_removeAllSublayerTransformAnimations
_resolvedContentFrame
statusBarBackgroundGradientView
_frameForStatusBarBackgroundGradientView
_updateStatusBarBackgroundGradientViewAlpha
contentOverlayViewSubview
isObservingStatusBarHidden
setObservingStatusBarHidden:
_canShowStatusBarBackgroundGradientWhenStatusBarVisible
_observingStatusBarHidden
_contentOverlayViewSubview
_statusBarBackgroundGradientView
T@"AVStatusBarBackgroundGradientView",R,N,V_statusBarBackgroundGradientView
observingStatusBarHidden
TB,N,GisObservingStatusBarHidden,V_observingStatusBarHidden
T@"UIView",&,N,V_contentOverlayViewSubview
TB,N,V_canShowStatusBarBackgroundGradientWhenStatusBarVisible
labelColor
_loadUIImageWithCompletionHandler:
beginScrubbing:
endScrubbing:
scrubberValueChanged:
setArrangedSubviews:
setCanSubstituteOtherAttributes:
setCanOverflowToAuxiliaryMenu:
setCanOnlyAppearInControlOverflowMenu:
avkit_nonScalingFontWithTextStyle:weight:
scrubInstructionsLabel
detachedExtraContentLayoutView
detachedScrubInstructionsBackdropLabel
_updateFontSizes
controlsLayoutView
reevaluateHiddenStateOfAllItems
systemLayoutSizeFittingSize:
isShowingScrubInstructions
isDoubleRowLayoutEnabled
embeddedExtraContentContainer
sizeThatFits:
traitCollectionDidChange:
liveBroadcastScrubberLabel
liveStreamingControlsIncludeScrubber
liveBroadcastLabel
showsLiveStreamingControls
scrubber
elapsedTimeLabel
timeRemainingLabel
_updateCustomContentTransitioningInfoPanelLayout
_layoutDoubleRowViews
_layoutSingleRowViews
customItems
standardPlayPauseButton
isAnimatingScrubInstructions
canShowScrubInstructions
_showScrubInstructions
singleRowViews
transportControls:scrubberDidBeginScrubbing:
_updateScrubInstructionsLabelsText
_updateScrubInstructionsFrame
transportControls:scrubberDidScrub:
setScrubberValueWhenScrubInstructionsTimerBegan:
scrubInstructionsTimer
transportControls:scrubberDidEndScrubbing:
setShowingScrubInstructions:
setAnimatingScrubInstructions:
transportControlsNeedsLayoutIfNeeded:
skipBackButton
startLeftwardContentTransitionButton
skipForwardButton
startRightwardContentTransitionButton
mediaSelectionButton
playbackSpeedButton
controlOverflowButton
contentLayoutMargins
routePickerView
setContentLayoutMargins:
doubleRowViews
flexibleViewAfterRoutePickerView
flexibleViewAfterSkipForwardButtons
_doubleRowLayoutSpacingAfterSubview:
setTrailingInterItemSpace:
_layoutItemDisplayPriorityForSubview:
setDisplayPriority:
_rowSpacingForDoubleRowLayoutAfterRow:
setDisplayPartnerAttributes:
_singeRowLayoutSpacingAfterSubview:
_scrubInstructionsAttributedText
appendAttributedString:
setDoubleRowLayoutEnabled:
setShowsLiveStreamingControls:
setLiveStreamingControlsIncludeScrubber:
setCustomItems:
_updateVolumeControllerLayout
transportViewIncludesVolumeController
setTransportViewIncludesVolumeController:
minimumRequiredWidth
setDetachedExtraContentLayoutView:
setScrubInstructionsTimer:
scrubberValueWhenScrubInstructionsTimerBegan
setFlexibleViewAfterRoutePickerView:
setFlexibleViewAfterSkipForwardButtons:
_doubleRowLayoutEnabled
_showsLiveStreamingControls
_liveStreamingControlsIncludeScrubber
_transportViewIncludesVolumeController
_showingScrubInstructions
_animatingScrubInstructions
_scrubberValueWhenScrubInstructionsTimerBegan
_minimumRequiredWidth
_scrubber
_elapsedTimeLabel
_timeRemainingLabel
_standardPlayPauseButton
_skipForwardButton
_skipBackButton
_startLeftwardContentTransitionButton
_startRightwardContentTransitionButton
_routePickerView
_mediaSelectionButton
_controlOverflowButton
_playbackSpeedButton
_customItems
_controlsLayoutView
_detachedExtraContentLayoutView
_liveBroadcastLabel
_liveBroadcastScrubberLabel
_embeddedExtraContentContainer
_scrubInstructionsLabel
_detachedScrubInstructionsBackdropLabel
_scrubInstructionsTimer
_flexibleViewAfterRoutePickerView
_flexibleViewAfterSkipForwardButtons
T@"AVLayoutView",R,N,V_controlsLayoutView
T@"AVLayoutView",&,N,V_detachedExtraContentLayoutView
T@"AVLabel",R,N,V_liveBroadcastLabel
T@"AVLabel",R,N,V_liveBroadcastScrubberLabel
T@"AVTouchIgnoringView",R,N,V_embeddedExtraContentContainer
T@"UILabel",R,N,V_scrubInstructionsLabel
T@"AVLabel",R,N,V_detachedScrubInstructionsBackdropLabel
T@"NSTimer",W,N,V_scrubInstructionsTimer
Tf,N,V_scrubberValueWhenScrubInstructionsTimerBegan
T@"AVTouchIgnoringView",&,N,V_flexibleViewAfterRoutePickerView
T@"AVTouchIgnoringView",&,N,V_flexibleViewAfterSkipForwardButtons
showingScrubInstructions
TB,N,GisShowingScrubInstructions,V_showingScrubInstructions
animatingScrubInstructions
TB,N,GisAnimatingScrubInstructions,V_animatingScrubInstructions
T@"<AVTransportControlsViewDelegate>",W,N,V_delegate
doubleRowLayoutEnabled
TB,N,GisDoubleRowLayoutEnabled,V_doubleRowLayoutEnabled
TB,N,V_showsLiveStreamingControls
TB,N,V_liveStreamingControlsIncludeScrubber
TB,N,V_transportViewIncludesVolumeController
Td,R,N,V_minimumRequiredWidth
T@"AVScrubber",R,N,V_scrubber
T@"AVLabel",R,N,V_elapsedTimeLabel
T@"AVLabel",R,N,V_timeRemainingLabel
T@"AVButton",R,N,V_standardPlayPauseButton
T@"AVButton",R,N,V_skipForwardButton
T@"AVButton",R,N,V_skipBackButton
T@"AVButton",R,N,V_startLeftwardContentTransitionButton
T@"AVButton",R,N,V_startRightwardContentTransitionButton
T@"AVPlaybackControlsRoutePickerView",R,N,V_routePickerView
T@"AVButton",R,N,V_mediaSelectionButton
T@"AVControlOverflowButton",R,N,V_controlOverflowButton
T@"AVButton",R,N,V_playbackSpeedButton
T@"NSArray",C,N,V_customItems
strongToStrongObjectsMapTable
behaviorsAndBehaviorContexts
allObjects
AVKitOwner
enumerateAllBehaviorsUsingBlock:
objectEnumerator
enumerateAllBehaviorContextsUsingBlock:
behaviors
enumerateAllBehaviorsConformingToProtocol:usingBlock:
setAVKitOwner:
_AVKitOwner
_behaviorsAndBehaviorContexts
T@,W,N,V_AVKitOwner
T@"NSMapTable",R,N,V_behaviorsAndBehaviorContexts
_transitionStyle
_transitionDuration
TQ,R,N,V_transitionStyle
Td,R,N,V_transitionDuration
displayConfiguration
_isCarScreen
windows
filteredArrayUsingPredicate:
_setAVKitRequestedRefreshRate:HDRMode:overscanCompensation:
_avkit_setPreferredRefreshRate:HDRMode:overscanCompensation:
sharedApplication
setWasCancelledWithInactiveScene:
_wasInitiallyInteractive
_hasAVKitAnimator
_wasCancelledWithInactiveScene
_presenterSupportedOrientations
_finalInterfaceOrientation
TB,N,V_wasInitiallyInteractive
TB,N,V_hasAVKitAnimator
TB,N,V_wasCancelledWithInactiveScene
TQ,N,V_presenterSupportedOrientations
Tq,N,V_finalInterfaceOrientation
T{CGAffineTransform=dddddd},R,N
_muted
_presentationSize
T@"<AVHomeIPCameraActionButtonHandling>",W,N,V_delegate
T{CGSize=dd},N,V_presentationSize
muted
TB,N,GisMuted,V_muted
secondScreenConnectionDidBecomeActive:
secondScreenConnectionDidResignActive:
playbackControlsObservationController
timeResolver
routeDetectorCoordinator
hasStartedUpdates
setHasStartedUpdates:
_updateRouteDetectionEnabled
handleVolumeChange:
handleCurrentRouteSupportsVolumeControlChanged:
_startObservingPotentiallyUnimplementedPlayerControllerProperties
setLoadingIndicatorTimerDelay:
_observeBoolForKeyPath:usingKeyValueObservationController:observationHandler:
_updateEdgeInsetsForLetterboxedContentInContentView:
_updateHasPlaybackBegunSincePlayerControllerBecameReadyToPlay:playing:userDidEndTappingProminentPlayButton:
_updatePrefersInspectionSuspended
setHasBecomeReadyToPlay:
_updateSecondScreenConnectionReadyToConnect
_updateOrCreateTimeResolverIfNeeded
_updatePlaybackControlsVisibleAndObservingUpdates
prefersMuted
setPrefersMuted:
_updateContainerInclusion
_updateControlInclusion
verticalSizeClass
horizontalSizeClass
shouldShowVolumeControlInTransportBar
customAudioItems
_updateVolumeSliderValueWithSystemVolume:animated:
areAnimationsEnabled
isResumingUpdates
setPrefersVolumeSliderExpanded:prefersVolumeButtonIncluded:animated:
_updateVolumeButtonGlyph
_updateSkipButtonsEnableLongPress
playbackRateMenuController
_updatePlaybackSpeedControlInclusion
_updatePlaybackSpeedControlImageNames
_updateVolumeButtonInclusionAndPrefersVolumeSliderExpandedWithPreferredExpansion:
_updateNowPlayingInfoCenter
_updateVideoGravityButtonType
setVolumeController:
playerViewControllerIsPresentingFullScreen
playerViewControllerIsPresentedFullScreen
hasReadableTimecodes
_updateScrubberAndTimeLabels
wantsExternalPlaybackButtonShown
hasPlaybackBegunSincePlayerControllerBecameReadyToPlay
playButtonsShowPauseGlyph
playerViewControllerHasInvalidViewControllerHierarchy
playbackControlsIncludeStartContentTransitionButtons
playerViewControllerIsBeingTransitionedWithResizing
isSeekingEnabled
isPlaybackSuspendedForScrubbing
setCustomControlItems:animations:
_prefersVolumeSliderExpandedAutomatically
setPrefersVolumeSliderExpandedAutomatically:
setResumingUpdates:
setPlaybackControlsView:
isHidingItemsForTransition
beginHidingItemsForTransition
_updatePlaybackControlsVisibilityWantsPlaybackControlsVisible:
setPlaybackViewFrame:
setVisibilityDelegate:
setAlternateFullScreenFont:
setFullscreenAlternateImagePadding:
setAlternateImagePadding:
setMultipleTouchesEndsTracking:
pictureInPictureButton
fullScreenButton
_volumeButtonMicaPackageState
videoGravityButton
setMenu:
actionWithHandler:
addAction:forControlEvents:
playbackSpeedButtonTapped:
skipButtonTouchUpInside:
skipButtonLongPressTriggered:
skipButtonLongPressEnded:
skipButtonForcePressChanged:
startContentTransitionButtonTouchUpInside:
prominentPlayButtonTouchUpInside:
volumeButtonTapTriggered:
volumeButtonLongPressTriggered:
volumeButtonPanChanged:
volumeSliderValueDidChange:
uniqueIdentifer
setupInitialLayout
_updateVolumeControllerView
setTurboModePlaybackControlsPlaceholderView:
playbackControlsViewDidLoad:
turboModePlaybackControlsPlaceholderViewDidLoad:
session
setWindowSceneSessionIdentifier:
setCoveringWindow:
edgeInsetsForLetterboxedContent
addPlaybackContentContainerViewIfNeeded
setPlaybackSuspendedForScrubbing:
setShouldIgnoreTimeResolverUpdates:
flashVolumeControlsWithDuration:
updateVolumeSliderValue:volumeButtonControl:
pendingOrientationChange
customDisplayModeItems
showsDoneButtonWhenFullScreen
showsPictureInPictureButton
canIncludeVideoGravityButton
updateDisplayControlsVisibilityIncludedButtons:
imageWithTintColor:renderingMode:
wasLongPressed
maximumForceSinceTrackingBegan
forceThreshold
_seekByTimeInterval:toleranceBefore:toleranceAfter:
setRateWithForce:
contentTransitionAction
reason
isShowingPlaybackControls
isUserInteracting
isPopoverBeingPresented
showsAudioControls
showPlaybackControls:immediately:
_autoHideControlsAfterDelay:
playbackControlsVisibilityTimer
setShowingPlaybackControls:
volumeControlsContainer
setShowsAudioControls:
setPlaybackControlsVisibilityTimer:
userInteractingCount
setUserInteractingCount:
setHidingItemsForTransition:
forcePlaybackControlsHidden
setPlaybackControlsObservationController:
_startObservingForPlaybackViewUpdates
endHidingItemsForTransitionAndShowImmediately:
prominentPlayButtonCanShowPauseGlyph
UUID
setPlayerMuteFadeAnimationID:
runningTime
functionWithName:
_solveForInput:
playerMuteFadeAnimationID
startDisplayLinkUpdatesForObserver:framesPerSecond:usingBlock:
date
timeIntervalSince1970
loadingIndicatorTimerDelay
isValid
canShowLoadingIndicator
setLoadingIndicatorTimer:
loadingIndicatorTimer
_bindEnabledStateOfControls:toKeyPath:
_bindInclusionOfControlItems:toKeyPath:
shouldIgnoreTimeResolverUpdates
setPendingOrientationChange:
hasBegunObservingPotentiallyUnimplementedPlayerControllerProperties
setHasBegunObservingPotentiallyUnimplementedPlayerControllerProperties:
setHasSeekableLiveStreamingContent:
setTimeControlStatus:
setTreatsForcePressAsLongPress:
_showOrHideDisplayModeControls
setIncludedContainers:animations:
needsTimeResolver
timecodeObservationInterval
setTimeResolver:
_playbackSpeedControlFeatureEnabled
isPlayingOnMatchPointDevice
showsPlaybackSpeedButton
setShowsPlaybackSpeedButton:
maximumTime
minimumTime
elapsedTimeFormatter
remainingTimeFormatter
timecodeForCurrentTime
maxTimecode
hasBecomeReadyToPlay
videoGravityButtonType
setVideoGravityButtonType:
setCanIncludeVideoGravityButton:
setHasPlaybackBegunSincePlayerControllerBecameReadyToPlay:
isInspectionSuspended
setNowPlayingInfoControllerIfLoaded:
playerViewControllerContentViewEdgeInsetsForLetterboxedVideo:
setEdgeInsetsForLetterboxedContent:
_wantsRouteDetectionEnabled
keyPathsForValuesAffectingFullScreen
keyPathsForValuesAffectingShowsRoutePickerView
keyPathsForValuesAffectingShowsProminentPlayButton
keyPathsForValuesAffectingProminentPlayButtonCanShowPauseGlyph
keyPathsForValuesAffectingShowsTransportControls
keyPathsForValuesAffectingShouldEnterFullScreenWhenPlaybackBegins
keyPathsForValuesAffectingShowsMediaSelectionButton
keyPathsForValuesAffectingCurrentTime
keyPathsForValuesAffectingMinimumTime
keyPathsForValuesAffectingMaximumTime
keyPathsForValuesAffectingSeekingEnabled
keyPathsForValuesAffectingShowsSkipButtons
keyPathsForValuesAffectingShowsStartContentTransitionButtons
keyPathsForValuesAffectingCanShowLoadingIndicator
keyPathsForValuesAffectingPlayButtonsShowPauseGlyph
keyPathsForValuesAffectingNeedsTimeResolver
volumeControlsControllerPlayerViewHeight:
playerViewControllerContentView:willLoadPlaybackControlsView:
playerViewControllerContentView:willLoadTurboModePlaceholderView:
playerViewControllerContentViewIsPlayingOnSecondScreen:
playerViewControllerContentViewPlaybackContentContainerViewChanged:
playerViewControllerContentViewDidLayoutSubviews:
playerViewControllerContentViewDidMoveToSuperviewOrWindow:
playerViewControllerContentViewShouldApplyAutomaticVideoGravity:
playerViewControllerContentViewDidChangeVideoGravity:
playerViewControllerContentViewHasActiveTransition:
playerViewControllerContentViewIsBeingTransitionedFromFullScreen:
playerViewControllerContentViewOverrideLayoutClass:
playerViewControllerContentViewDidUpdateScrollingStatus:
showsRoutePickerView
showsTransportControls
showsMediaSelectionButton
showsSkipButtons
showsStartContentTransitionButtons
isStartLeftwardContentTransitionButtonEnabled
isStartRightwardContentTransitionButtonEnabled
routePickerAlertController
setRoutePickerAlertController:
setRouteDetectorCoordinator:
AVRouteDetectorCoordinatorMultipleRoutesDetectedObserver
setAVRouteDetectorCoordinatorMultipleRoutesDetectedObserver:
collapseExpandSliderAnimator
setCollapseExpandSliderAnimator:
mediaSelectionMenuController
setMediaSelectionMenuController:
setPlaybackRateMenuController:
playbackViewFrame
setShowingVolumeControlInTransportBar:
_selectedPlaybackRateObservationToken
_playerViewControllerIsBeingTransitionedWithResizing
_playerViewControllerIsPresentingFullScreen
_playerViewControllerIsPresentedFullScreen
_playerViewControllerHasInvalidViewControllerHierarchy
_volumeControlsCanShowSlider
_showsPictureInPictureButton
_hasCustomPlaybackControls
_showsVideoGravityButton
_showsDoneButtonWhenFullScreen
_playbackControlsIncludeStartContentTransitionButtons
_forcePlaybackControlsHidden
_wantsExternalPlaybackButtonShown
_startLeftwardContentTransitionButtonEnabled
_startRightwardContentTransitionButtonEnabled
_popoverIsBeingPresented
_showsPlaybackSpeedButton
_canIncludeVideoGravityButton
_hasStartedUpdates
_coveringWindow
_hasPlaybackBegunSincePlayerControllerBecameReadyToPlay
_hasBecomeReadyToPlay
_multipleRoutesDetected
_resumingUpdates
_prefersMuted
_playbackSuspendedForScrubbing
_hasSeekableLiveStreamingContent
_shouldIgnoreTimeResolverUpdates
_hasBegunObservingPotentiallyUnimplementedPlayerControllerProperties
_videoScaled
_hidingItemsForTransition
_showingPlaybackControls
_showingVolumeControlInTransportBar
_transportBarCustomMenuItems
_contentTransitionAction
_volumeController
_nowPlayingInfoControllerIfLoaded
_playbackControlsView
_turboModePlaybackControlsPlaceholderView
_playbackControlsObservationController
_timeResolver
_elapsedTimeFormatter
_remainingTimeFormatter
_routePickerAlertController
_routeDetectorCoordinator
_AVRouteDetectorCoordinatorMultipleRoutesDetectedObserver
_loadingIndicatorTimer
_collapseExpandSliderAnimator
_playerMuteFadeAnimationID
_mediaSelectionMenuController
_playbackRateMenuController
_pendingOrientationChange
_loadingIndicatorTimerDelay
_timeControlStatus
_videoGravityButtonType
_uniqueIdentifer
_playbackControlsVisibilityTimer
_userInteractingCount
_playbackViewFrame
T@"AVPlaybackControlsView",&,N,V_playbackControlsView
T@"AVTurboModePlaybackControlsPlaceholderView",W,N,V_turboModePlaybackControlsPlaceholderView
T@"AVNowPlayingInfoController",&,N,V_nowPlayingInfoControllerIfLoaded
T@"AVObservationController",&,N,V_playbackControlsObservationController
T@"AVPlayerControllerTimeResolver",&,N,V_timeResolver
T@"AVTimeFormatter",R,N,V_elapsedTimeFormatter
T@"AVTimeFormatter",R,N,V_remainingTimeFormatter
T@"UIAlertController",W,N,V_routePickerAlertController
T@"AVRouteDetectorCoordinator",&,N,V_routeDetectorCoordinator
T@,&,N,V_AVRouteDetectorCoordinatorMultipleRoutesDetectedObserver
T@"NSTimer",W,N,V_loadingIndicatorTimer
T@"UIViewPropertyAnimator",W,N,V_collapseExpandSliderAnimator
T@"<AVVolumeController>",&,N,V_volumeController
T@"NSUUID",&,N,V_playerMuteFadeAnimationID
T@"AVMediaSelectionMenuController",&,N,V_mediaSelectionMenuController
T@"AVMobilePlaybackRateMenuController",&,N,V_playbackRateMenuController
TB,N,V_showsPlaybackSpeedButton
seekingEnabled
TB,R,N,GisSeekingEnabled
TB,N,V_canIncludeVideoGravityButton
T@"NSNumber",&,N,V_pendingOrientationChange
userInteracting
TB,R,N,GisUserInteracting
TB,N,V_hasStartedUpdates
coveringWindow
TB,N,GisCoveringWindow,V_coveringWindow
TB,R,N,GisFullScreen
TB,N,V_hasPlaybackBegunSincePlayerControllerBecameReadyToPlay
TB,N,V_hasBecomeReadyToPlay
TB,N,V_multipleRoutesDetected
Td,N,V_loadingIndicatorTimerDelay
resumingUpdates
TB,N,GisResumingUpdates,V_resumingUpdates
TB,N,V_prefersMuted
playbackSuspendedForScrubbing
TB,N,GisPlaybackSuspendedForScrubbing,V_playbackSuspendedForScrubbing
Tq,N,V_timeControlStatus
TB,N,V_hasSeekableLiveStreamingContent
TB,N,V_shouldIgnoreTimeResolverUpdates
TB,N,V_hasBegunObservingPotentiallyUnimplementedPlayerControllerProperties
Tq,N,V_videoGravityButtonType
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_playbackViewFrame
TB,N,GisVideoScaled,V_videoScaled
T@"NSString",R,N,V_uniqueIdentifer
T@"NSString",&,N,V_windowSceneSessionIdentifier
T@"NSTimer",&,N,V_playbackControlsVisibilityTimer
TQ,N,V_userInteractingCount
hidingItemsForTransition
TB,N,GisHidingItemsForTransition,V_hidingItemsForTransition
showingPlaybackControls
TB,N,GisShowingPlaybackControls,V_showingPlaybackControls
showingVolumeControlInTransportBar
TB,N,GshouldShowVolumeControlInTransportBar,V_showingVolumeControlInTransportBar
T@"AVPlayerController",W,N,V_playerController
TB,N,V_playerViewControllerIsBeingTransitionedWithResizing
TB,N,V_playerViewControllerIsPresentingFullScreen
TB,N,V_playerViewControllerIsPresentedFullScreen
TB,N,V_playerViewControllerHasInvalidViewControllerHierarchy
TB,N,V_inlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused
TB,N,V_volumeControlsCanShowSlider
T@"NSArray",C,N,V_transportBarCustomMenuItems
TB,N,V_showsPictureInPictureButton
TB,N,V_hasCustomPlaybackControls
TB,N,V_showsVideoGravityButton
TB,N,V_showsDoneButtonWhenFullScreen
TB,N,V_playbackControlsIncludeStartContentTransitionButtons
TB,N,V_playbackControlsShouldControlSystemVolume
TB,N,V_forcePlaybackControlsHidden
TB,N,V_wantsExternalPlaybackButtonShown
startLeftwardContentTransitionButtonEnabled
TB,N,GisStartLeftwardContentTransitionButtonEnabled,V_startLeftwardContentTransitionButtonEnabled
startRightwardContentTransitionButtonEnabled
TB,N,GisStartRightwardContentTransitionButtonEnabled,V_startRightwardContentTransitionButtonEnabled
T@?,C,N,V_contentTransitionAction
T@"AVPictureInPictureController",&,N,V_pictureInPictureController
T@"AVSecondScreenContentViewConnection",&,N,V_secondScreenConnection
popoverIsBeingPresented
TB,N,GisPopoverBeingPresented,V_popoverIsBeingPresented
_updateContentViewIfNeeded
initialScreenBoundsHint
viewDidLayoutSubviews
_updateLayout
debugLabel
sourcePlayerLayer
stopShowingContentFromActiveSourcePlayerLayer
loadPlayerLayerViewIfNeeded
startShowingContentFromSourcePlayerLayer:
sizeToFit
bringSubviewToFront:
_sourcePlayerLayer
_debugLabel
_initialScreenBoundsHint
T@"UILabel",R,N,V_debugLabel
T@"AVSecondScreenPlayerLayerView",&,N,V_playerLayerView
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_initialScreenBoundsHint
T@"AVPlayerLayer",W,N,V_sourcePlayerLayer
activeSourcePlayerLayer
setActiveSourcePlayerLayer:
_activeSourcePlayerLayer
T@"AVPlayerLayer",W,N,V_activeSourcePlayerLayer
removeInteraction:
interactionView
addTransitionDriver:toView:
addInteraction:
setSourceViewForNextPresentation:
supportsMultipleScenes
_startObservingAnimatorProgress
setTouchGravity:
setTransitionDidBeginHandler:
easeInFunction
easeOutFunction
touchGravity
activeTransition
_finishTransition
_cancelTransition
setActiveTransition:
_fireDidBeginHandlerIfNeeded
isAnimated
displayLink
sourceViewForNextPresentation
setPresentationController:
transitionDidBeginHandler
transitionDuration:
animateTransition:
interruptibleAnimatorForTransition:
animationEnded:
startInteractiveTransition:
completionSpeed
completionCurve
wantsInteractiveStart
animationControllerForPresentedController:presentingController:sourceController:
animationControllerForDismissedController:
interactionControllerForPresentation:
interactionControllerForDismissal:
setDisplayLink:
gestureTracker
setEaseInFunction:
setEaseOutFunction:
_interactiveGestureTracker
_interactionView
_displayLink
_activeTransition
_gestureTracker
_sourceViewForNextPresentation
_transitionDidBeginHandler
_easeInFunction
_easeOutFunction
_touchGravity
Tq,N,V_state
T@"AVDisplayLink",&,N,V_displayLink
T@"AVTransition",&,N,V_activeTransition
T@"AVInteractiveTransitionGestureTracker",R,N,V_gestureTracker
T@"UIView",W,N,V_sourceViewForNextPresentation
T@"AVPresentationController",W,N,V_presentationController
T@?,C,N,V_transitionDidBeginHandler
T@"CAMediaTimingFunction",&,N,V_easeInFunction
T@"CAMediaTimingFunction",&,N,V_easeOutFunction
T{CGPoint=dd},N,V_touchGravity
T@"AVPresentationContext",R,W,N
T@"<AVTransitionControllerDelegate>",W,N,V_delegate
T@"<AVTransitionDriver>",&,N,V_interactiveGestureTracker
T@"UIView",W,N,V_interactionView
sourceLayer
avkit_sbdlpip_findFirstCALayerHost
sourceLayerHost
sourceContextId
setSourceLayerHost:
setSourceContextId:
sbdlHostView
placeholderLayer
_makePictureInPicturePlatformAdapterContentPlaceholderLayer
setPlaceholderLayer:
setSbdlHostView:
_updateGeometry
_updateSourceLayerHost
pictureInPictureController:didTransitionToRenderSize:
setLastKnownRenderSize:
lastKnownRenderSize
_PIPModeEnabled
_sourceContextId
_sourceLayer
_placeholderLayer
_sbdlHostView
_sourceLayerHost
_lastKnownRenderSize
T@"AVSampleBufferDisplayLayerPlayerController",&,N,V_playerController
T@"AVPictureInPictureIndicatorLayer",&,N,V_placeholderLayer
T@"AVPictureInPictureSampleBufferDisplayLayerHostView",&,N,V_sbdlHostView
T@"CALayerHost",W,N,V_sourceLayerHost
TI,N,V_sourceContextId
T{CGSize=dd},N,V_lastKnownRenderSize
T@"AVSampleBufferDisplayLayer",R,N,V_sourceLayer
PIPModeEnabled
TB,N,GisPIPModeEnabled,V_PIPModeEnabled
cachedIsPictureInPictureSupported
startInspectionIfNeeded
setPipActivitySessionIdentifier:
hasBegunInspection
setHasBegunInspection:
isReadyToPlay
timebase
updateTiming
isLooping
seekToEnd:
internalDelegate
applicationState
startKVO
_playbackCoordinatorWithoutTriggeringFullSetup
_updateCoordinatedPlaybackActive
_throttledUpdatePlayingOnMatchPointDeviceIfNeededWithContext:
_updatePlayingOnMatchPointDeviceIfNeeded
reduceResourceUsageAssertion
setPlayerLayerForReducingResources:
stopGeneratingTimecodes
_observeValueForKeyPath:oldValue:newValue:
assetInspectionQueue
isPiPAvailable
_prepareAssetForInspectionIfNeeded
_updateCurrentAudioTrackIfNeeded
_updateCurrentVideoTrackIfNeeded
_updateExternalPlaybackAirPlayDeviceLocalizedNameIfNeeded
error
setMetadata:
setComposable:
setHasProtectedContent:
setAvailableMetadataFormats:
setCompatibleWithAirPlayVideo:
setSeekingInternal:
setSeekToTimeInternal:
setContentChapters:
updateAtMinMaxTime
acquireResourceReductionAssertion
commonMetadata
metadataItemsFromArray:withKey:keySpace:
dictionaryWithDictionary:
preferredLanguages
chapterMetadataGroupsBestMatchingPreferredLanguages:
sortUsingComparator:
isComposable
hasProtectedContent
availableMetadataFormats
isCompatibleWithAirPlayVideo
updateMinMaxTiming
seekTimer
isPlaybackLikelyToKeepUp
isPlaybackBufferEmpty
_retryPlayImmediatelyIfNeeded
seekToTimeInternal
setSeekToTime:
setCachedIsPictureInPictureSupported:
setPictureInPictureSupported:
canPlayImmediately
playImmediatelyAtRate:
_handleSeekTimerEvent
throttledSeekToTime:toleranceBefore:toleranceAfter:
_cancelPendingSeeksIfNeeded
setRateBeforeScrubBegan:
_queuePlayer
isSeekingInternal
pauseWithoutAffectingCoordinatedPlayback
actionAtItemEnd
setActionAtItemEnd:
setAtMinTime:
setAtMaxTime:
setPlaybackSuspended:
suspendPlaybackCoordinatorWhileActivelySeekingIfNecessary
resumePlaybackCoordinatorIfSuspended
setMinTiming:
setMaxTiming:
currentEstimatedDate
contentChapters
_updateMinMaxTimingIfNeeded
seekableTimeRangesLastModifiedTime
liveUpdateInterval
isCompletelySeekable
_assetIsRestrictedFromSaving:
_assetIsMarkedNotSerializable:
availableVideoDynamicRanges
_assetContainsProResRaw:
metadataForFormat:
getBytes:length:
otherParticipants
setCoordinatedPlaybackActive:
currentEnabledAssetTrackForMediaType:
setCurrentAudioTrack:
setCurrentVideoTrack:
contextID
deviceSubType
setPlayingOnMatchPointDevice:
track
touchBarRequiresLinearPlayback
_updateRateForScrubbingAndSeeking
scrubCoordinatorSuspension
beginSuspensionForReason:
setScrubCoordinatorSuspension:
endProposingNewTime:
seekToCMTime:toleranceBefore:toleranceAfter:
isStreaming
actuallySeekToTime
canPlayFastForward
_updateScanningForwardRate
scanningDelays
canPlayFastReverse
_updateScanningBackwardRate
isAtMaxTime
seekOrStepByFrameCount:
isAtMinTime
canStepForward
canStepBackward
stepByCount:
setTiming:
_setMinTiming:maxTiming:
setAllowsExternalPlayback:
supportsMultipleOutputDevices
deviceName
setExternalPlaybackAirPlayDeviceLocalizedName:
setPreferredPeakBitRate:
setPreferredForwardBufferDuration:
preferredPeakBitRate
preferredForwardBufferDuration
playerLayerForReducingResources
initWithIdentifier:forReason:invalidationBlock:
setReduceResourceUsageAssertion:
canUseNetworkResourcesForLiveStreamingWhilePaused
setCanUseNetworkResourcesForLiveStreamingWhilePaused:
associatedTracksOfType:
cancelPendingSeeks
outputContext
rateBeforeScrubBegan
setCurrentAssetIfReady:
assetBeingPrepared
setAssetBeingPrepared:
keyPathsForValuesAffectingStatus
keyPathsForValuesAffectingReadyToPlay
keyPathsForValuesAffectingError
keyPathsForValuesAffectingCompletelySeekable
keyPathsForValuesAffectingCanPlay
keyPathsForValuesAffectingPlaying
keyPathsForValuesAffectingCanPause
keyPathsForValuesAffectingCanTogglePlayback
keyPathsForValuesAffectingVolume
keyPathsForValuesAffectingMuted
keyPathsForValuesAffectingHasContent
keyPathsForValuesAffectingContentDuration
keyPathsForValuesAffectingContentDimensions
keyPathsForValuesAffectingMinTime
keyPathsForValuesAffectingReversePlaybackEndTime
keyPathsForValuesAffectingMaxTime
keyPathsForValuesAffectingForwardPlaybackEndTime
keyPathsForValuesAffectingContentDurationWithinEndTimes
keyPathsForValuesAffectingSeekableTimeRanges
keyPathsForValuesAffectingLoadedTimeRanges
keyPathsForValuesAffectingHasEnabledAudio
keyPathsForValuesAffectingHasVideo
keyPathsForValuesAffectingHasEnabledVideo
keyPathsForValuesAffectingHasContentChapters
keyPathsForValuesAffectingStreaming
keyPathsForValuesAffectingHasLiveStreamingContent
keyPathsForValuesAffectingHasSeekableLiveStreamingContent
keyPathsForValuesAffectingHasTrimmableContent
keyPathsForValuesAffectingHasShareableContent
keyPathsForValuesAffectingTimeControlStatus
keyPathsForValuesAffectingCanSeek
keyPathsForValuesAffectingCanScanForward
keyPathsForValuesAffectingCanScanBackward
keyPathsForValuesAffectingCanSeekToBeginning
keyPathsForValuesAffectingCanSeekToEnd
keyPathsForValuesAffectingCanSeekFrameForward
keyPathsForValuesAffectingCanSeekFrameBackward
keyPathsForValuesAffectingCanSeekChapterForward
keyPathsForValuesAffectingCanSeekChapterBackward
keyPathsForValuesAffectingAllowsExternalPlayback
keyPathsForValuesAffectingPlayingOnExternalScreen
keyPathsForValuesAffectingExternalPlaybackActive
keyPathsForValuesAffectingExternalPlaybackType
observationInfo
setObservationInfo:
setLooping:
increaseVolume:
decreaseVolume:
changeVolumeToMinimum:
changeVolumeToMaximum:
currentOrEstimatedDate
hasContentChapters
hasTrimmableContent
hasShareableContent
audioWaveform
scanForward:
scanBackward:
canSeekToBeginning
canSeekToEnd
skipBackwardThirtySeconds:
seekToChapter:
togglePictureInPicture:
isPlaybackSuspended
setAssetInspectionQueue:
currentAudioTrack
currentVideoTrack
isPreventingIdleSystemSleep
setPreventingIdleSystemSleep:
isPreventingIdleDisplaySleep
setPreventingIdleDisplaySleep:
isDisablingAutomaticTermination
setDisablingAutomaticTermination:
canTogglePictureInPicture
setCurrentVideoMediaSelectionOption:
_audioMediaSelectionOptions
_visualMediaSelectionOptions
_legibleMediaSelectionOptions
_cachedSelectedAudioMediaSelectionOption
_cachedSelectedLegibleMediaSelectionOption
_cachedSelectedLegibleMediaSelectionOptionAccordingToAVFoundation
_lastKnownPersistedExtendedLanguageTag
_observationInfo
_inspectionSuspended
_updateAtMinMaxTimePeriodicObserverToken
_timecodePeriodicObserverToken
_pictureInPictureInterrupted
_handlesAudioSessionInterruptions
_isDeallocating
_hasSetUpSeekableLiveStreamState
_rateToRestoreAfterAudioSessionInterruptionEnds
_retryPlayingImmediatelyBlock
_shouldPlayImmediately
_looping
_actionAtItemEnd
_seekQueue
_seekTimer
_timeOfLastUpdate
_ignoreRateKeyValueChanges
_ignoreNextRateKeyValueChange
_pendingSeek
_isResumed
_toleranceBefore
_toleranceAfter
_isScanningForward
_isScanningBackward
_scanningCount
_preScanningRate
_liveStreamMinTiming
_liveStreamMaxTiming
_liveStreamEventModePossible
_canUseNetworkResourcesForLiveStreamingWhilePausedCount
_previousValueOfCanUseNetworkResourcesForLiveStreamingWhilePaused
_shouldPlayWhenLikelyToKeepUp
_forceScanning
_rateBeforeForceScanning
_reduceResourceUsageAssertion
_touchBarRequiresLinearPlayback
_timecodeController
_internalDelegate
_lastTimePlayingOnMatchPointDeviceWasUpdated
_updatePlayingOnMatchPointDeviceThrottleTimer
_atMaxTime
_atMinTime
_playbackSuspended
_pictureInPictureSupported
_seekingInternal
_composable
_hasProtectedContent
_compatibleWithAirPlayVideo
_preventingIdleSystemSleep
_preventingIdleDisplaySleep
_disablingAutomaticTermination
_canTogglePictureInPicture
_hasBegunInspection
_playingOnMatchPointDevice
_coordinatedPlaybackActive
_currentAssetIfReady
_assetInspectionQueue
_assetBeingPrepared
_externalPlaybackAirPlayDeviceLocalizedName
_minTiming
_maxTiming
_currentAudioTrack
_currentVideoTrack
_seekToTime
_metadata
_contentChapters
_availableMetadataFormats
_rateBeforeScrubBegan
_scrubCoordinatorSuspension
_pipActivitySessionIdentifier
_playerLayerForReducingResources
_currentVideoMediaSelectionOption
_seekToTimeInternal
atMaxTime
TB,N,GisAtMaxTime,V_atMaxTime
atMinTime
TB,N,GisAtMinTime,V_atMinTime
playbackSuspended
TB,N,GisPlaybackSuspended,V_playbackSuspended
T@"AVAsset",&,N,V_currentAssetIfReady
T@"NSObject<OS_dispatch_queue>",&,N,V_assetInspectionQueue
T@"AVAsset",&,N,V_assetBeingPrepared
TB,N,GisPictureInPictureSupported,V_pictureInPictureSupported
T@"NSString",&,N,V_externalPlaybackAirPlayDeviceLocalizedName
readyToPlay
TB,R,N,GisReadyToPlay
T@"AVValueTiming",&,N,V_timing
T@"AVValueTiming",&,N,V_minTiming
T@"AVValueTiming",&,N,V_maxTiming
T@"AVAssetTrack",&,N,V_currentAudioTrack
T@"AVAssetTrack",&,N,V_currentVideoTrack
seekingInternal
TB,GisSeekingInternal,V_seekingInternal
T{?=qiIq},V_seekToTimeInternal
Td,N,V_seekToTime
T@"NSDictionary",&,N,V_metadata
T@"NSArray",&,N,V_contentChapters
composable
TB,N,GisComposable,V_composable
TB,N,V_hasProtectedContent
T@"NSArray",&,N,V_availableMetadataFormats
compatibleWithAirPlayVideo
TB,N,GisCompatibleWithAirPlayVideo,V_compatibleWithAirPlayVideo
Td,N,V_rateBeforeScrubBegan
T@"AVCoordinatedPlaybackSuspension",&,N,V_scrubCoordinatorSuspension
preventingIdleSystemSleep
TB,N,GisPreventingIdleSystemSleep,V_preventingIdleSystemSleep
preventingIdleDisplaySleep
TB,N,GisPreventingIdleDisplaySleep,V_preventingIdleDisplaySleep
disablingAutomaticTermination
TB,N,GisDisablingAutomaticTermination,V_disablingAutomaticTermination
TB,N,V_canTogglePictureInPicture
T@"NSString",C,N,V_pipActivitySessionIdentifier
TB,N,V_hasBegunInspection
playingOnMatchPointDevice
TB,N,GisPlayingOnMatchPointDevice,V_playingOnMatchPointDevice
T@"BSSimpleAssertion",&,N
T@"AVPlayerLayer",W,N,V_playerLayerForReducingResources
T@"NSObject<OS_dispatch_source>",R,N
T@"NSDate",R,N
T@"NSArray",R,N,V_visualMediaSelectionOptions
T@"AVMediaSelectionOption",&,N,V_currentVideoMediaSelectionOption
TB,N,V_coordinatedPlaybackActive
T@"NSError",R,N
keyPathsForValuesAffectingUsesExternalPlaybackWhileExternalScreenIsActive
keyPathsForValuesAffectingPreferredDisplayCriteria
keyPathsForValuesAffectingMaximumVideoResolution
TB,R,N,GisPlayingOnMatchPointDevice
hasTimecodes
loadTimecodeControllerIfNeeded
timecodeController
frameNumberForCurrentTime
startGeneratingTimecodesUsingBlock:
seekToTimecode:
seekToFrame:
T@"AVTimecodeController",R,N
T@"<AVPlayerControllerDelegate>",W,N
functionWithControlPoints::::
configureView:forTintEffectWithColor:filterType:
_setTextColorFollowsTintColor:
titleForState:
imageForState:
layerWithTintColor:filterType:
effectCompositingColor:withMode:alpha:
setBackgroundEffects:
removeAllFiltersFromView:
applyBaseTrackTintToView:
applyCompletedTrackTintToView:
applyLoadedTrackTintToView:
configureView:withBackgroundFillOfColor:opacity:filter:
_updateStyleSheet
initWithServiceName:
setAutomaticVideoGravity:completion:
interfaceWithProtocol:
setRemoteObjectInterface:
resume
remoteObjectProxy
imageNamed:inBundle:
backdropLayerView
_loadTurboOrFullPlaybackControlsIfNeeded
externalPlaybackIndicatorViewIfLoaded
externalPlaybackIndicatorView
unsupportedContentIndicatorView
unsupportedContentIndicatorViewIfLoaded
audioOnlyIndicatorView
audioOnlyIndicatorViewIfLoaded
externalPlaybackIndicatorTitle
externalPlaybackIndicatorSubtitle
setExternalPlaybackIndicatorTitle:
setExternalPlaybackIndicatorSubtitle:
targetVideoGravities
setAutomaticVideoGravity:
_isInAnimationBlockWithAnimationsEnabled
numberWithUnsignedLong:
_insertPlaybackControlsOrPlaceholderView:
scrollingObserver
iAdPreRollViewIfLoaded
_updateVideoGravityDuringLayoutSubviewsAndAssertThatIfYouBreakThisMethodYouOwnThisMethod
automaticVideoGravity
_updateVideoContentInsetForVideoGravity:
_isBeingTransitionedToOrFromFullScreen
_applyVideoGravityIfNeeded:
videoContentInset
setVideoContentInset:
_isInAnimationBlock
_currentAnimationDuration
setAnimationDuration:
_mediaTimingFunctionForCurrentAnimationCurve
setAnimationTimingFunction:
removeAllAnimations
_currentAnimationCurve
shouldLoadPlaybackControlsHint
_loadTurboModePlaybackControlsPlaceholderViewIfNeeded
styleSheetShouldUseCompactFullScreenItemSize
_shouldLoadPlaybackControlsHint
_canAutomaticallyZoomLetterboxVideos
_styleSheetShouldUseCompactFullScreenItemSize
_automaticVideoGravity
_externalPlaybackIndicatorView
_unsupportedContentIndicatorView
_audioOnlyIndicatorView
_iAdPreRollView
_playbackContentContainerView
_interactiveContentOverlayView
_targetVideoGravities
_backdropLayerView
_externalPlaybackIndicatorTitle
_externalPlaybackIndicatorSubtitle
_scrollingObserver
_edgeInsetsForLetterboxedContent
_videoContentInset
T@"AVExternalPlaybackIndicatorView",R,N,V_externalPlaybackIndicatorView
T@"UIImageView",R,N,V_unsupportedContentIndicatorView
T@"UIImageView",R,N,V_audioOnlyIndicatorView
T@"AVExternalPlaybackIndicatorView",R,N
T@"UIImageView",R,N
T{UIEdgeInsets=dddd},N,V_videoContentInset
T@"NSMutableDictionary",R,N,V_targetVideoGravities
T@"NSString",C,N,V_automaticVideoGravity
T@"AVCABackdropLayerView",R,N,V_backdropLayerView
T@"NSString",C,N,V_externalPlaybackIndicatorTitle
T@"NSString",C,N,V_externalPlaybackIndicatorSubtitle
T@"AVScrollViewObserver",R,N,V_scrollingObserver
T@"<AVPlayerViewControllerContentViewDelegate>",W,N,V_delegate
T@"UIView<AVPlaybackContentContainer>",&,N,V_playbackContentContainerView
T@"NSNumber",R,N
inAWindowAndNotScrolling
TB,R,N,GisInAWindowAndNotScrolling
TB,R,N,GisScrolling
TB,R,N,GisScrollingQuickly
TB,N,V_shouldLoadPlaybackControlsHint
TB,N,V_canAutomaticallyZoomLetterboxVideos
T{UIEdgeInsets=dddd},N,V_edgeInsetsForLetterboxedContent
T@"UIView",&,N,V_interactiveContentOverlayView
T@"UIView",R,N,V_iAdPreRollView
T@"AVPlaybackControlsView",R,N,V_playbackControlsView
T@"AVTurboModePlaybackControlsPlaceholderView",R,W,N,V_turboModePlaybackControlsPlaceholderView
TB,N,V_styleSheetShouldUseCompactFullScreenItemSize
_setVisualEffectViewEnabled:backgroundColor:
setForceThreshold:
setAdjustsImageWhenHighlighted:
_updateImageIfNeeded
_updateEdgeInsets
activeFont
_preferredFont
tintEffectStyle
activeImageName
treatsForcePressAsLongPress
clampsHitRectInsetsWhenContainedInScrollableView
alwaysBounceVertical
alwaysBounceHorizontal
_handleUserInteractionGestureRecognizer:
setUserInteractionGestureRecognizer:
userInteractionGestureRecognizer
backgroundEffectView
setBackgroundEffectView:
setEffect:
setForce:
_resetTrackedState
_updateTintColorIfNeeded
disablesHighlightWhenLongPressed
isHighlighted
appliesTransformToImageViewWhenHighlighted
setTrackingStartTime:
setWasLongPressed:
setMaximumForceSinceTrackingBegan:
trackingStartTime
setWasForcePressTriggered:
previousHorizontalPositionOfLongPress
setHorizontalTranslationOfLongPress:
setPreviousHorizontalPositionOfLongPress:
_preferredLayoutSize
_imageViewAlpha
_updateBackgroundEffectViewIsHidden
fullscreenAlternateImagePadding
alternateImagePadding
multipleTouchesEndsTracking
numberOfTouches
_preferredImageName
setActiveImageName:
usesBackgroundEffectViewForTextOnlyButtons
alternateImageName
alternateFullScreenFont
fullScreenFont
inlineFont
micaSnapshotAlpha
setDisablesHighlightWhenLongPressed:
wasForcePressTriggered
horizontalTranslationOfLongPress
setActiveFont:
_accessibilityLabelOverride
_wasLongPressed
_treatsForcePressAsLongPress
_usesBackgroundEffectViewForTextOnlyButtons
_multipleTouchesEndsTracking
_appliesTransformToImageViewWhenHighlighted
_disablesHighlightWhenLongPressed
_clampsHitRectInsetsWhenContainedInScrollableView
_wasForcePressTriggered
_tintEffectStyle
_forceThreshold
_force
_maximumForceSinceTrackingBegan
_activeImageName
_imageName
_alternateImageName
_alternateImagePadding
_fullscreenAlternateImagePadding
_inlineFont
_fullScreenFont
_alternateFullScreenFont
_micaSnapshotAlpha
_horizontalTranslationOfLongPress
_previousHorizontalPositionOfLongPress
_userInteractionGestureRecognizer
_backgroundEffectView
_activeFont
Td,N,V_trackingStartTime
TB,N,V_wasLongPressed
TB,N,V_wasForcePressTriggered
Td,N,V_horizontalTranslationOfLongPress
T@"NSNumber",&,N,V_previousHorizontalPositionOfLongPress
Td,N,V_force
Td,N,V_maximumForceSinceTrackingBegan
T@"AVUserInteractionObserverGestureRecognizer",&,N,V_userInteractionGestureRecognizer
T@"UIVisualEffectView",&,N,V_backgroundEffectView
T@"UIFont",&,N,V_activeFont
TB,N,V_treatsForcePressAsLongPress
Tq,N,V_tintEffectStyle
TB,N,V_usesBackgroundEffectViewForTextOnlyButtons
Td,N,V_forceThreshold
TB,N,V_multipleTouchesEndsTracking
T@"NSString",C,N,V_activeImageName
T@"NSString",C,N,V_imageName
T@"NSString",C,N,V_alternateImageName
Td,N,V_alternateImagePadding
Td,N,V_fullscreenAlternateImagePadding
TB,N,V_appliesTransformToImageViewWhenHighlighted
T@"UIFont",&,N,V_inlineFont
T@"UIFont",&,N,V_fullScreenFont
T@"UIFont",&,N,V_alternateFullScreenFont
Td,N,V_micaSnapshotAlpha
TB,N,V_disablesHighlightWhenLongPressed
TB,N,V_clampsHitRectInsetsWhenContainedInScrollableView
_dateFormatter
setUniqueIdentifier:
prefersSecondaryMaterialOverlay
setPrefersSecondaryMaterialOverlay:
setNextAttributesInLayoutOrder:
setNextAttributesInPriorityOrder:
appendFormat:
_hasFlexibleContentSize
_prefersSecondaryMaterialOverlay
_canOverflowToAuxiliaryMenu
_canOnlyAppearInControlOverflowMenu
_canSubstituteOtherAttributes
_displayPriority
_displayPartnerAttributes
_trailingInterItemSpace
_accessibilityIdentifier
_nextAttributesInLayoutOrder
_nextAttributesInPriorityOrder
_minimumSize
T@"NSString",C,N,V_uniqueIdentifier
TQ,N,V_displayPriority
T@"AVLayoutItemAttributes",W,V_displayPartnerAttributes
TB,N,V_hasFlexibleContentSize
TB,N,V_prefersSecondaryMaterialOverlay
TB,N,V_canOverflowToAuxiliaryMenu
TB,N,V_canOnlyAppearInControlOverflowMenu
TB,N,V_canSubstituteOtherAttributes
T{CGSize=dd},N,V_minimumSize
Td,N,V_trailingInterItemSpace
T@"NSString",C,N,V_accessibilityIdentifier
T@"AVLayoutItemAttributes",&,N,V_nextAttributesInLayoutOrder
T@"AVLayoutItemAttributes",W,N,V_nextAttributesInPriorityOrder
loadingButtonView
setLoadingButtonView:
_loadingButtonView
T@"AVLoadingButtonView",&,N,V_loadingButtonView
fontDescriptorWithSize:
fontWithName:size:
timeFontWithFont:
boldSystemFontOfSize:
italicSystemFontOfSize:
traitCollectionWithPreferredContentSizeCategory:
timeFontWithName:size:
timeFontOfSize:
boldTimeFontOfSize:
italicTimeFontOfSize:
monospacedTimeFontOfSize:
setLinkFired:
linkFired:
displayLinkWithTarget:selector:
setPreferredFramesPerSecond:
setStartTime:
addToRunLoop:forMode:
linkFired
_linkFired
T@?,C,N,V_linkFired
T@"CADisplayLink",&,N,V_displayLink
T@,W,N,V_observer
Td,N,V_startTime
isLayoutDirty
_updateStackLayoutIfNeeded
flattenedArrangedSubviewsInLayoutOrder
currentStackLayout
_includedItemsFromSubviews:inStackLayout:thatFitSize:
CGRectValue
setLayoutDirty:
_applyShapeStyle
semanticContentAttribute
_removeArrangedSubview:
_insertArrangedSubview:atIndex:
setDirectionalLayoutMargins:
directionalLayoutMargins
stackLayoutNeedsUpdate
arrangedSubviews
initWithFirstAttributesInLayoutOrder:firstAttributesInPriorityOrder:
setCurrentStackLayout:
setStackLayoutNeedsUpdate:
shapeStyle
_setCornerRadius:continuous:maskedCorners:
hasVisibleArrangedSubview
setFlattenedArrangedSubviewsInLayoutOrder:
setBackdropLayerView:
setSecondaryMaterialOverlayView:
targetViewForSecondaryMaterialOverlayView
setTargetViewForSecondaryMaterialOverlayView:
_layoutDirty
_stackLayoutNeedsUpdate
_arrangedSubviews
_shapeStyle
_flattenedArrangedSubviewsInLayoutOrder
_currentStackLayout
_secondaryMaterialOverlayView
_targetViewForSecondaryMaterialOverlayView
T@"NSMutableArray",&,N,V_flattenedArrangedSubviewsInLayoutOrder
T@"AVCustomStackLayout",&,N,V_currentStackLayout
layoutDirty
TB,N,GisLayoutDirty,V_layoutDirty
T@"AVCABackdropLayerView",&,N,V_backdropLayerView
T@"UIVisualEffectView",&,N,V_secondaryMaterialOverlayView
TB,N,V_stackLayoutNeedsUpdate
T@"UIView<AVLayoutViewItem>",&,N,V_targetViewForSecondaryMaterialOverlayView
T@"NSArray",R,C,N,V_arrangedSubviews
T{NSDirectionalEdgeInsets=dddd},N
TQ,N,V_shapeStyle
longValue
keyboardHeight
setKeyboardHeight:
_animateKeyboardAvoidance:duration:
needsIntialLayout
_setupInitialLayout
deactivateConstraints:
_setUpCustomControlsViewConstraintsIfNeeded
_updateAreVolumeAndTransportControlsVisible
setPriority:
initWithArray:
_updateLayoutMargins
_updateDoubleRowLayoutEnabled
_updatePlaybackControlsContainerVisibilityAnimated:additionalActions:
_playbackControlsViewsForControlItems:withType:
_showPlaybackControlsAnimated:
playbackControlsVisibilityAnimator
setPlaybackControlsVisibilityAnimator:
safeAreaInsetsDidChange
_playbackControlsViewItems
customMediaItems
_updateTransportControlsFrame
_updateVolumeControlsWithSize:
layoutMargins
defaultAudioControls
orderedSetWithArray:
defaultDisplayModeControls
_currentArrangedAudioModeViews
_preferredArrangedAudioModeViews
minusOrderedSet:
_currentArrangedDisplayModeViews
_preferredArrangedDisplayModeViews
_collapse:view:
setPrefersFullScreenButtonIncluded:
setPrefersDoneButtonIncluded:
setPrefersPiPButtonIncluded:
setPrefersVideoGravityButtonIncluded:
prefersFullScreenButtonIncluded
prefersDoneButtonIncluded
prefersVideoGravityButtonIncluded
prefersPiPButtonIncluded
includesTransportControls
includesDisplayModeControlsContainer
includesCustomDisplayModeControls
includesAudioControlsContainer
includesCustomAudioControls
_collapse:views:
prefersVolumeSliderExpandedAutomatically
visibilityDelegate
_displayModeViewsToRemoveDuringAnimation
_audioViewsToRemoveDuringAnimation
setMostRecentAnimationCompletionsID:
reevaluateHiddenStateForContainersAndSubviews
mostRecentAnimationCompletionsID
setCompletionBlock:
_customControlsViewIfLoaded
updateConstraintsIfNeeded
setNeedsIntialLayout:
keyboardUIAvoidanceAnimator
hasVisibleSubview
updateLayoutForChangedControlsVisibility
includedContainers
isTopAreaLayoutGuideExpanded
setTopAreaLayoutGuideExpanded:
_customControlsViewLayoutGuideConstraints
_showsAudioControls
_needsIntialLayout
_topAreaLayoutGuideExpanded
_prefersDoneButtonIncluded
_prefersVideoGravityButtonIncluded
_prefersFullScreenButtonIncluded
_prefersPiPButtonIncluded
_includedContainers
_volumeControlsContainer
_playbackControlsContainer
_screenModeControls
_volumeControls
_prominentPlayButtonContainerView
_transportControlsContainerView
_fullScreenButton
_videoGravityButton
_pictureInPictureButton
_customDisplayModeItems
_customAudioItems
_transportControlsView
_customMediaItems
_visibilityDelegate
_defaultAudioControls
_defaultDisplayModeControls
_keyboardHeight
_keyboardUIAvoidanceAnimator
_playbackControlsVisibilityAnimator
_mostRecentAnimationCompletionsID
T@"NSArray",R,N,V_defaultAudioControls
T@"NSArray",R,N,V_defaultDisplayModeControls
Td,N,V_keyboardHeight
T@"UIViewPropertyAnimator",R,N,V_keyboardUIAvoidanceAnimator
TB,N,V_needsIntialLayout
T@"UIViewPropertyAnimator",&,N,V_playbackControlsVisibilityAnimator
T@"NSUUID",&,N,V_mostRecentAnimationCompletionsID
topAreaLayoutGuideExpanded
TB,N,GisTopAreaLayoutGuideExpanded,V_topAreaLayoutGuideExpanded
TB,N,V_prefersDoneButtonIncluded
TB,N,V_prefersVideoGravityButtonIncluded
TB,N,V_prefersFullScreenButtonIncluded
TB,N,V_prefersPiPButtonIncluded
Tq,R,N,V_includedContainers
T@"AVTouchIgnoringView",R,N,V_volumeControlsContainer
T@"AVTouchIgnoringView",R,N,V_playbackControlsContainer
T@"AVLayoutView",R,N,V_screenModeControls
T@"AVLayoutView",R,N,V_volumeControls
T@"AVLayoutView",R,N,V_prominentPlayButtonContainerView
T@"AVView",R,N,V_transportControlsContainerView
T@"AVButton",R,N,V_doneButton
T@"AVButton",R,N,V_fullScreenButton
T@"AVButton",R,N,V_videoGravityButton
T@"AVButton",R,N,V_pictureInPictureButton
T@"NSArray",R,C,N,V_customDisplayModeItems
T@"NSArray",R,C,N,V_customAudioItems
T@"AVButton",R,N,V_prominentPlayButton
T@"AVTransportControlsView",R,N,V_transportControlsView
T@"NSArray",R,C,N,V_customMediaItems
T@"NSArray",R,C,N,V_customControlItems
T@"AVPlayerViewControllerCustomControlsView",&,N,V_customControlsView
TB,N,V_prefersVolumeSliderExpandedAutomatically
T@"<AVPlaybackControlsViewVisibilityDelegate>",W,N,V_visibilityDelegate
TB,N,V_showsAudioControls
localizedDescription
bodyData
headersForContentLength:compression:
messageWithVersion:headers:bodyData:
_localizedDescription
Tq,R,N,V_status
T@"NSString",R,N,V_localizedDescription
bundleForClass:
bundle
localizedStringForKey:value:table:
layoutSublayersOfLayer:
pipIndicatorLayer
_addIndicatorLayerIfNeeded
addAnimation:forKey:
setPipIndicatorLayer:
customMessage
setCustomMessage:
_customMessage
_pipIndicatorLayer
T@"AVPictureInPictureIndicatorLayer",&,N,V_pipIndicatorLayer
T@"NSString",C,N,V_customMessage
avkit_constraintEqualToAnchor:priority:
avkit_constraintsFromEdgesOfItem:toLeadingAnchor:topAnchor:trailingAnchor:bottomAnchor:priority:
avkit_constraintsFromEdgesOfItem:toEdgesOfItem:
avkit_constraintsFromLeadingAndTrailingEdgesOfItem:toEdgesOfItem:
avkit_constraintsFromTopAndBottomEdgesOfItem:toEdgesOfItem:
constraintEqualToConstant:
avkit_constraintsFromDimensionAnchorsToSize:
T@"NSLayoutXAxisAnchor",R,N
T@"NSLayoutYAxisAnchor",R,N
T@"NSLayoutDimension",R,N
constraintGreaterThanOrEqualToAnchor:
constraintLessThanOrEqualToAnchor:
avkit_constraintGreaterThanOrEqualToAnchor:priority:
avkit_constraintLessThanOrEqualToAnchor:priority:
avkit_constraintEqualToAnchor:constant:priority:
constraintGreaterThanOrEqualToConstant:
constraintLessThanOrEqualToConstant:
avkit_constraintEqualToConstant:priority:
avkit_constraintGreaterThanOrEqualToConstant:priority:
avkit_constraintLessThanOrEqualToConstant:priority:
_firstAttributesInLayoutOrder
_firstAttributesInPriorityOrder
T@"AVLayoutItemAttributes",R,N,V_firstAttributesInLayoutOrder
T@"AVLayoutItemAttributes",R,W,N,V_firstAttributesInPriorityOrder
alloc
playbackDelegate
pictureInPictureControllerStartPlayback:
pictureInPictureControllerStopPlayback:
pictureInPictureController:setPlaying:
pictureInPictureControllerPlaybackTimeRange:
pictureInPictureControllerTimeRangeForPlayback:
pictureInPictureControllerPlaybackPaused:
pictureInPictureControllerIsPlaybackPaused:
pictureInPictureController:skipByInterval:completionHandler:
playbackDelegateAdapterWithDelegate:
pictureInPictureControllerShouldProhibitBackgroundAudioPlayback:
_playbackDelegate
T@"<AVPictureInPictureSampleBufferPlaybackDelegate>",R,W,N,V_playbackDelegate
sbdlObservationController
setPlaybackDelegateAdapter:
setPlaybackDelegate:
playbackDelegateAdapter
setContentTimeRange:
_currentSBDLTime
contentTimeRange
_effectiveRate
setPlaybackState:
_updateBackgroundAudioPlaybackPolicy
setPaused:
isPictureInPictureAvailable
enqueuedBufferDimensions
playbackState
setSbdlObservationController:
setPictureInPictureAvailable:
affineTransform
sublayerTransform
keyPathsForValuesAffectingRate
_pictureInPictureAvailable
_playbackState
_sbdlObservationController
_playbackDelegateAdapter
_enqueuedBufferDimensions
_contentTimeRange
T@"AVPictureInPicturePlaybackState",C,N,V_playbackState
T@"AVObservationController",&,N,V_sbdlObservationController
pictureInPictureAvailable
TB,N,GisPictureInPictureAvailable,V_pictureInPictureAvailable
TB,N,GisPaused,V_paused
T{?={?=qiIq}{?=qiIq}},N,V_contentTimeRange
T@"AVSampleBufferDisplayLayerPlaybackDelegateAdapter",&,N,V_playbackDelegateAdapter
T@"<AVPictureInPictureSampleBufferPlaybackDelegate>",W,N,V_playbackDelegate
T{CGSize=dd},N,V_enqueuedBufferDimensions
initWithCGImage:
T@"UIImage",R
avkit_title
shortLocalizedDisplayName
avkit_offOption
avkit_autoOption
T@"AVMediaSelectionOption",R
v20@0:8B16
@40@0:8{CGPoint=dd}16@32
B16@0:8
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v16@0:8
v24@0:8@16
v24@0:8q16
v32@0:8@16Q24
v24@0:8@?16
v24@0:8d16
@16@0:8
@?16@0:8
q16@0:8
@"NSString"
@"UIView"
@"AVPlayer"
@"<AVPlayerViewControllerDelegate>"
@"AVPlayerViewController"
@"AVButton"
@"AVLayoutView"
@"AVStyleSheet"
@"AVAppStorePlayerLayerView"
@"NSMutableDictionary"
@"AVObservationController"
#16@0:8
@"<AVContentOverlayViewDelegate>"
B24@0:8Q16
v28@0:8q16B24
@"_AVSimplePlayerLayerView"
B24@0:8@16
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@"AVPictureInPictureViewController"16
q24@0:8@16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16
@24@0:8@16
v32@0:8@16q24
v40@0:8@16q24@32
v32@0:8@16@?24
v40@0:8@16q24q32
v32@0:8@16@24
v28@0:8@16B24
v40@0:8@16Q24Q32
q24@0:8@"PGPictureInPictureProxy"16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@"PGPictureInPictureProxy"16
@"UIWindow"24@0:8@"PGPictureInPictureProxy"16
v32@0:8@"PGPictureInPictureProxy"16q24
v40@0:8@"PGPictureInPictureProxy"16q24@"NSError"32
v32@0:8@"PGPictureInPictureProxy"16@?<v@?B>24
v24@0:8@"PGPictureInPictureProxy"16
v40@0:8@"PGPictureInPictureProxy"16q24q32
v32@0:8@"PGPictureInPictureProxy"16@"PGCommand"24
v28@0:8@"PGPictureInPictureProxy"16B24
v40@0:8@"PGPictureInPictureProxy"16Q24Q32
B24@0:8@"PGCommand"16
B24@0:8@"PGPictureInPictureProxy"16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
d16@0:8
@"<AVPictureInPicturePlatformAdapterDelegate>"
@"AVPlayerController"
@"AVPictureInPicturePrerollAttributes"
@"AVPictureInPictureViewController"
@"PGPictureInPictureProxy"
@"NSTimer"
@"AVSecondScreenConnection"
@"UIWindow"
@"<AVPictureInPictureContentSource>"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@48@0:8{?=qiIq}16@40
@48@0:8@16{?=qiIq}24
{?=qiIq}16@0:8
@"PGPlaybackStatePrerollAttributes"
{?="value"q"timescale"i"flags"I"epoch"q}
{CGSize=dd}16@0:8
@"AVPictureInPicturePlayerLayerView"
@"AVPlayerLayer"
v48@0:8@16{CGPoint=dd}24N^{CGPoint=dd}40
v40@0:8@16@24d32
v24@0:8@"UIScrollView"16
v48@0:8@"UIScrollView"16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@"UIScrollView"16B24
@"UIView"24@0:8@"UIScrollView"16
v32@0:8@"UIScrollView"16@"UIView"24
v40@0:8@"UIScrollView"16@"UIView"24d32
B24@0:8@"UIScrollView"16
B32@0:8{CGPoint=dd}16
@"AVLayoutItemAttributes"16@0:8
v32@0:8{CGSize=dd}16
f16@0:8
v20@0:8f16
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGRect={CGPoint=dd}{CGSize=dd}}84@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGRect={CGPoint=dd}{CGSize=dd}}48f80
B32@0:8@16@24
{UIEdgeInsets=dddd}16@0:8
B40@0:8{CGPoint=dd}16@32
{CGPoint=dd}16@0:8
{NSDirectionalEdgeInsets=dddd}16@0:8
v48@0:8{NSDirectionalEdgeInsets=dddd}16
@"UISelectionFeedbackGenerator"
@"NSMutableArray"
@"AVLayoutItemAttributes"
@"<AVScrubberDelegate>"
@"NSArray"
@"UIScrollView"
@"UIImageView"
{CGSize="width"d"height"d}
{NSDirectionalEdgeInsets="top"d"leading"d"bottom"d"trailing"d}
v32@0:8@"AVBonjourService"16@"AVAirTransport"24
@"NSDictionary"24@0:8@"AVBonjourService"16
v32@0:8@"AVAirTransport"16@"<AVAirTransportReverseTransformationResultProtocol>"24
v24@0:8@"AVAirTransport"16
@"<AVAirMessageNotificationCenterDelegate>"
@"AVBonjourService"
@"AVPlayerItem"
@"NSObject<OS_dispatch_queue>"
@"NSMutableSet"
@56@0:8d16d24Q32@40@?48
@32@0:8d16@24
@24@0:8^{_NSZone=}16
^{CGImage=}16@0:8
v24@0:8^{CGImage=}16
^{CGImage=}
v36@0:8@16@24B32
q40@0:8@16@24@32
@"UIView<AVScrollViewObserverContentView>"
@"NSHashTable"
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16d48
v24@0:8f16B20
v24@0:8@"<AVBehaviorContext>"16
@24@0:8q16
@"AVNewsWidgetPlayerBehaviorContext"
I16@0:8
v20@0:8I16
v80@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGSize=dd}48{CGSize=dd}64
@"AVPictureInPictureCALayerHostView"
@32@0:8@16@24
v24@0:8Q16
@"UIMenu"
@"<AVMediaSelectionMenuDelegate>"
@32@0:8@16:24
@"AVHomeIPCameraBehaviorContext"
{CGRect={CGPoint=dd}{CGSize=dd}}56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
@"AVPlayerController"24@0:8@"AVPlayerController"16
@"AVPictureInPictureViewController"16@0:8
v32@0:8@"AVPictureInPictureViewController"16@"AVPlayerController"24
@"UIWindow"16@0:8
@"AVPlaybackRateCollection"
@"AVPlaybackRate"
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
B32@0:8@"UIGestureRecognizer"16@"UIEvent"24
v24@0:8@"UIView"16
@"UIView"16@0:8
B32@0:8@"<AVTransitionDriver>"16@"UIGestureRecognizer"24
@"<AVTransitionDriverDelegate>"16@0:8
v24@0:8@"<AVTransitionDriverDelegate>"16
@"UIPanGestureRecognizer"16@0:8
v24@0:8@"UIPanGestureRecognizer"16
v32@0:8{CGPoint=dd}16
@"UIPanGestureRecognizer"
@"<AVTransitionDriverDelegate>"
@"UIPinchGestureRecognizer"
@"UIRotationGestureRecognizer"
{CGPoint="x"d"y"d}
@24@0:8@?16
@"NSMutableOrderedSet"
@"AVPresentationConfiguration"
@"<UIViewControllerContextTransitioning>"
@"AVFullScreenViewController"
@"AVPresentationContextTransition"
@"AVPresentationController"
v24@0:8@"NSNetServiceBrowser"16
v32@0:8@"NSNetServiceBrowser"16@"NSDictionary"24
v36@0:8@"NSNetServiceBrowser"16@"NSString"24B32
v36@0:8@"NSNetServiceBrowser"16@"NSNetService"24B32
v40@0:8@16@24@32
v24@0:8@"NSNetService"16
v32@0:8@"NSNetService"16@"NSDictionary"24
v32@0:8@"NSNetService"16@"NSData"24
v40@0:8@"NSNetService"16@"NSInputStream"24@"NSOutputStream"32
v24@0:8^v16
^v16@0:8
@"<AVBonjourServiceClientDelegate>"
@"NSNetServiceBrowser"
^v24@0:8@16
v32@0:8@16d24
I28@0:8I16@20
@"AVStatusBarBackgroundGradientViewSubview"
@48@0:8@16@24B32B36@?40
@44@0:8@16@24B32@?36
@40@0:8@16@24@?32
v48@0:8@16@24@32@?40
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@60@0:8@16@24@32B40B44B48@?52
v48@0:8@16@24@32^v40
v56@0:8@16@24@32@40^v48
@"NSSet"
@48@0:8@16@24@32@40
@"AVMusicAppBehaviorContext"
@"AVPlayerViewController"16@0:8
v24@0:8@"<AVBehavior>"16
v40@0:8{CGSize=dd}16@32
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
v40@0:8{CGSize=dd}16@"<UIViewControllerTransitionCoordinator>"32
v24@0:8@"UIViewController"16
@"UIView<AVPlaybackContentContainer>"56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@"AVPlaybackContentContainerView"48
v32@0:8@"AVPlayerViewController"16q24
@"AVMusicAppBehavior"
@"NSNumber"
@40@0:8@16{CGSize=dd}24
@"UIWindowScene"
@"UIScreen"
@"CADisplay"
v32@0:8@"NSStream"16Q24
@24@0:8Q16
@"NSInputStream"
@"NSOutputStream"
@"NSData"
@"<AVAirTransportTransformationProtocol>"
@"<AVAirTransportDelegate>"
v32@0:8@"NSNetService"16@"AVAirTransport"24
@"<AVAirMessageDispatcherClientDelegate>"
@"NSNetService"
@"AVAirTransport"
@"AVBonjourServiceClient"
v52@0:8B16{CGRect={CGPoint=dd}{CGSize=dd}}20
@"AVVideoCallPlayerController"
@"AVPictureInPictureController"
@"AVPictureInPictureControllerContentSource"
v28@0:8B16@?20
@"AVSeymourBehaviorContext"
@"UIActivityIndicatorView"
@"UIWindowScene"16@0:8
@"<AVVolumeHUDAssertionDelegate>"
@"AVSystemController"16@0:8
v32@0:8@"NSString"16@"NSString"24
v28@0:8B16@20
@"AVSystemController"
@"AVZoomingBehaviorContext"
@"NSLayoutConstraint"
@"UILayoutGuide"
@44@0:8d16d24d32B40
B24@0:8@?16
v56@0:8{CGPoint=dd}16@32N^@40N^d48
{CGRect={CGPoint=dd}{CGSize=dd}}40@0:8{CGPoint=dd}16d32
@28@0:8@16B24
{UIEdgeInsets=dddd}36@0:8@16d24B32
@"UIFont"
@"UITraitCollection"
@"AVEditBehaviorContext"
@"<AVEditBehaviorDelegate>"
v24@0:8@"AVPictureInPictureController"16
v32@0:8@"AVPictureInPictureController"16@"NSError"24
v32@0:8@"AVPictureInPictureController"16@?<v@?B>24
q32@0:8@16@24
@32@0:8@16q24
q24@0:8@"UIPresentationController"16
q32@0:8@"UIPresentationController"16@"UITraitCollection"24
v32@0:8@"UIPresentationController"16@"UIPresentationController"24
@"UIViewController"32@0:8@"UIPresentationController"16q24
v40@0:8@"UIPresentationController"16q24@"<UIViewControllerTransitionCoordinator>"32
B24@0:8@"UIPresentationController"16
v24@0:8@"UIPresentationController"16
v40@0:8@16N^{CGRect={CGPoint=dd}{CGSize=dd}}24N^@32
v24@0:8@"UIPopoverPresentationController"16
B24@0:8@"UIPopoverPresentationController"16
v40@0:8@"UIPopoverPresentationController"16N^{CGRect={CGPoint=dd}{CGSize=dd}}24N^@32
v48@0:8@16{CGSize=dd}24@40
v24@0:8@"AVFullScreenViewController"16
@"UIView"24@0:8@"AVFullScreenViewController"16
v48@0:8@"AVFullScreenViewController"16{CGSize=dd}24@"<UIViewControllerTransitionCoordinator>"40
B24@0:8@"AVFullScreenViewController"16
q24@0:8@"AVFullScreenViewController"16
@"UIResponder"24@0:8@"AVFullScreenViewController"16
@40@0:8@16@24@32
B40@0:8@16@24@32
v36@0:8@16B24@?28
v28@0:8@16f24
@"AVPresentationConfiguration"40@0:8@"AVTransitionController"16@"UIViewController"24@"UIViewController"32
v32@0:8@"AVTransitionController"16@"UIViewController"24
@"UIView"32@0:8@"AVTransitionController"16@"UIViewController"24
B40@0:8@"AVTransitionController"16@"UIGestureRecognizer"24@"UITouch"32
@"UIColor"24@0:8@"AVTransitionController"16
B24@0:8@"AVTransitionController"16
v24@0:8@"AVTransitionController"16
v32@0:8@"AVTransitionController"16@?<v@?>24
v36@0:8@"AVTransitionController"16B24@?<v@?B>28
v28@0:8@"AVTransitionController"16f24
v24@0:8@"AVContentOverlayView"16
v32@0:8@"AVPlaybackRateCollection"16@"AVPlaybackRate"24
B24@0:8@"AVPlayerController"16
v48@0:8@16@24@32@40
v24@0:8@"AVPlaybackControlsView"16
v48@0:8@"AVPlaybackControlsView"16@"<AVPlayerViewControllerAnimationCoordinator>"24@"NSArray"32@"NSArray"40
d24@0:8d16
v36@0:8q16B24@?28
v32@0:8B16B20@?24
@"NSDictionary"
@"UIPopoverPresentationController"
@"AVTransitionController"
@"AVPlaybackControlsController"
@"AVPlayerView"
@"AVPlayerViewControllerContentView"
@"NSValue"
{CGAffineTransform="a"d"b"d"c"d"d"d"tx"d"ty"d}
@"AVPlayerViewControllerCustomControlsView"
@"AVContentOverlayView"
@"AVBehaviorStorage"
@"UIHoverGestureRecognizer"
@"AVPlayerControllerVolumeAnimator"
@"__AVPlayerLayerView"
v32@0:8Q16@24
{CGAffineTransform=dddddd}16@0:8
v64@0:8{CGAffineTransform=dddddd}16
d24@0:8@16
d24@0:8@"AVEditView"16
v32@0:8@"AVEditView"16@"NSNumber"24
v24@0:8@"AVEditView"16
v32@0:8@"AVEditView"16d24
@"AVEditBehavior"
@"AVEditBehaviorParameters"
@"AVZoomingBehavior"
@"AVEditView"
@"AVAssetImageGenerator"
@"UIToolbar"
@"UIBarButtonItem"
@"UIViewController<AVFullScreenViewControllerDelegate>"
@40@0:8@16{CGPoint=dd}24
@"UIContextMenuInteraction"
@"<AVControlOverflowButtonDelegate>"
@40@0:8d16@24@32
@48@0:8d16@24@32@40
@28@0:8B16@20
@28@0:8I16@20
@36@0:8I16@20@28
@32@0:8Q16@24
@"<AVPictureInPictureViewControllerDelegate>"
@"UILabel"
@"UIStackView"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
{?=dd}16@0:8
@40@0:8d16d24d32
@"UIScene"
@"AVSecondScreenViewController"
@"AVPresentationContext"
v32@0:8d16d24
@"AVHomeIPCameraBehavior"
@"AVHomeIPCameraPlayerController"
v48@0:8{NSEdgeInsets=dddd}16
{NSEdgeInsets=dddd}16@0:8
{NSEdgeInsets="top"d"left"d"bottom"d"right"d}
@"AVVolumeButtonControl"
@"AVVolumeSlider"
@"<AVVolumeControlsControllerDelegate>"
@"<AVVolumeControlsControllerLayoutDelegate>"
@"AVVolumeControlsContentView"
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@"AVPlaybackContentContainerView"48
@"AVPlaybackContentContainerView"16@0:8
{CGSize=dd}48@0:8@16d24{CGSize=dd}32
{CGSize=dd}24@0:8d16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8d16
@"AVPlaybackContentContainerView"
@24@0:8#16
@"NSData"24@0:8@"<AVMessageTransformerProtocol>"16
@"AVAirMessageParts<AVAirTransportReverseTransformationResultProtocol>"24@0:8@"NSData"16
@44@0:8@16i24@28@36
d24@0:8@"UIMovieScrubber"16
@"NSArray"44@0:8@"UIMovieScrubber"16i24@"NSNumber"28@"NSNumber"36
v32@0:8@"UIMovieScrubber"16@"NSNumber"24
v36@0:8@"UIMovieScrubber"16@"NSNumber"24B32
v28@0:8@16i24
v32@0:8@16f24f28
v40@0:8@16d24d32
v32@0:8@"UIMovieScrubber"16d24
v28@0:8@"UIMovieScrubber"16i24
v32@0:8@"UIMovieScrubber"16f24f28
v24@0:8@"UIMovieScrubber"16
v40@0:8@"UIMovieScrubber"16d24d32
v32@0:8^{CGImage=}16@24
@"<AVEditViewDataSource>"
@"<AVEditViewDelegate>"
@"UIMovieScrubber"
@"NSDictionary"16@0:8
@24@0:8@"NSDictionary"16
@"NSArray"24@0:8@"NSArray"16
B32@0:8q16q24
@"<AVPlaybackContentTransitioningViewDelegate>"
@40@0:8@16@24:32
@"AVMediaSelectionTableViewController"
q32@0:8@16q24
v40@0:8@16@24q32
@"AVMediaSelectionOption"
v32@0:8@"AVPictureInPicturePlatformAdapter"16@"NSError"24
v32@0:8@"AVPictureInPicturePlatformAdapter"16@?<v@?B>24
v24@0:8@"AVPictureInPicturePlatformAdapter"16
v28@0:8@"AVPictureInPicturePlatformAdapter"16B24
v32@0:8@"AVPictureInPicturePlatformAdapter"16q24
v40@0:8@"AVPictureInPicturePlatformAdapter"16q24q32
@"<AVPictureInPictureControllerDelegate>"
@"AVPictureInPicturePlatformAdapter"
@"<AVPictureInPicturePrerollDelegate>"
@"AVSampleBufferDisplayLayer"
@"<AVPictureInPictureSampleBufferPlaybackDelegate>"
@48@0:8@16{CGSize=dd}24@40
{?=qiIq}48@0:8q16{?=qiIq}24
B20@0:8f16
@"UIImage"
@"UIColor"
@"NSAttributedString"
@32@0:8d16d24
@64@0:8{?={?=qiIq}{?=qiIq}}16
v32@0:8d16@24
@24@0:8d16
{?={?=qiIq}{?=qiIq}}16@0:8
B24@0:8d16
@28@0:8d16B24
@"NSDate"
@"MPMediaControls"
{CVSMPTETime=ssIIIssss}16@0:8
v40@0:8{CVSMPTETime=ssIIIssss}16
v40@0:8{?=qiIq}16
{CVSMPTETime="subframes"s"subframeDivisor"s"counter"I"type"I"flags"I"hours"s"minutes"s"seconds"s"frames"s}
q40@0:8{?=qiIq}16
@32@0:8^{opaqueCMFormatDescription=}16q24
{CVSMPTETime=ssIIIssss}24@0:8q16
{CVSMPTETime=ssIIIssss}40@0:8q16q24@32
q24@0:8d16
d24@0:8q16
v24@0:8^{opaqueCMSampleBuffer=}16
B40@0:8{?=qiIq}16
@"AVAssetTrack"
v36@0:8B16@20@28
@"<AVPlaybackRateCollectionDelegate>"
@"AVCABackdropLayerView"
v24@0:8@"AVRoutePickerView"16
Q24@0:8@16
Q24@0:8@"AVRoutePickerView"16
@"NSString"24@0:8@"AVRoutePickerView"16
v28@0:8d16B24
@"UIButton"
@"UIViewPropertyAnimator"
@"AVOutputContext"
@"AVMicaPackage"
@"<AVRoutePickerViewDelegate>"
@68@0:8d16^{CGImage=}24B32{CGRect={CGPoint=dd}{CGSize=dd}}36
@"AVPictureInPictureIndicatorSublayer"
@36@0:8d16^{CGImage=}24B32
B48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"CATextLayer"
@"CALayer"
@"<AVTimeControlling>"
@"AVTimer"
@40@0:8@16@24d32
v40@0:8{CGSize=dd}16Q32
@"AVPlaybackContentZoomingView"
@"UITapGestureRecognizer"
B40@0:8@16{CGPoint=dd}24
B32@0:8@16q24
v48@0:8@16q24q32d40
B40@0:8@"AVPlaybackContentTransitioningView"16{CGPoint=dd}24
B32@0:8@"AVPlaybackContentTransitioningView"16q24
@"AVPlaybackContentContainerView"24@0:8@"AVPlaybackContentTransitioningView"16
v48@0:8@"AVPlaybackContentTransitioningView"16q24q32d40
q24@0:8q16
@"AVNewsWidgetPlayerBehavior"
@"AVPlaybackContentTransitioningView"
@"<AVPlayerViewControllerContentTransitioning_NewsOnly>"
v56@0:8d16d24{CGPoint=dd}32d48
{CGAffineTransform=dddddd}96@0:8d16{CGPoint=dd}24d40{CGPoint=dd}48{CGRect={CGPoint=dd}{CGSize=dd}}64
@"<AVTransitionDelegate>"
@"<UIViewControllerContextTransitioningEx>"
@32@0:8{CGSize=dd}16
v32@0:8d16Q24
d24@0:8Q16
@48@0:8@16@24{CGSize=dd}32
d48@0:8Q16@24{CGSize=dd}32
v40@0:8@16@24@?32
@40@0:8@16@24q32
v64@0:8{CGSize=dd}16@32@40d48@?56
@56@0:8{CGSize=dd}16@32@40d48
@36@0:8@16@24B32
v40@0:8@16q24@?32
#32@0:8@16@24
v44@0:8@16@24@32I40
@44@0:8@16@24@32I40
v48@0:8@16r*24[1{__va_list_tag=II^v^v}]32Q40
@32@0:8@"CAMLParser"16@"NSURL"24
v40@0:8@"CAMLParser"16@24@"NSURL"32
#32@0:8@"CAMLParser"16@"NSString"24
v44@0:8@"CAMLParser"16@"NSString"24@"NSURL"32I40
@44@0:8@"CAMLParser"16@"NSString"24@"NSURL"32I40
v48@0:8@"CAMLParser"16r*24[1{__va_list_tag=II^v^v}]32Q40
v36@0:8@16@24f32
v32@0:8@"CAStateController"16@"CALayer"24
v36@0:8@"CAStateController"16@"CAStateTransition"24f32
v36@0:8@"CAStateController"16@"CAStateTransition"24B32
v32@0:8@16^{CGColor=}24
v32@0:8^{CGColor=}16@24
@"CAStateController"
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8q16
v32@0:8@?16@?24
v32@0:8@?<v@?>16@?<v@?B>24
@44@0:8d16@24@?32B40
@"NSObject<OS_dispatch_source>"
@"AVSecondScreenDebugAssistant"
@"AVSecondScreen"
@"AVDisplayCriteria"
{UIEdgeInsets=dddd}24@0:8q16
v36@0:8q16q24B32
@"AVPresentationContainerViewAppearanceProxy"
@64@0:8@16@24@32@40@48@56
@56@0:8@16@24q32@40@48
v32@0:8#16@24
@64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48@56
@"AVStatusBarBackgroundGradientView"
v24@0:8@"AVScrubber"16
f24@0:8@16
f24@0:8@"AVVolumeControlsContentView"16
@"<AVTransportControlsViewDelegate>"
@"AVScrubber"
@"AVLabel"
@"AVPlaybackControlsRoutePickerView"
@"AVControlOverflowButton"
@"AVTouchIgnoringView"
v40@0:8:16@24@?32
@"NSMapTable"
@32@0:8Q16d24
v40@0:8d16q24q32
v32@0:8d16q24
B24@0:8q16
@"<AVHomeIPCameraActionButtonHandling>"
v24@0:8@"AVTransportControlsView"16
v32@0:8@"AVTransportControlsView"16@"AVScrubber"24
@"UIView"40@0:8@"AVVolumeControlsContentView"16@"AVVolumeButtonControl"24@"AVVolumeSlider"32
v40@0:8@"AVVolumeControlsContentView"16@"AVVolumeButtonControl"24@"AVVolumeSlider"32
v40@0:8@16@24Q32
v40@0:8@"AVMediaSelectionMenuController"16@"AVMediaSelectionOption"24Q32
@"NSArray"24@0:8@"AVControlOverflowButton"16
{UIEdgeInsets=dddd}24@0:8@16
v32@0:8@"AVPlayerViewControllerContentView"16@"AVPlaybackControlsView"24
v32@0:8@"AVPlayerViewControllerContentView"16@"AVTurboModePlaybackControlsPlaceholderView"24
B24@0:8@"AVPlayerViewControllerContentView"16
v24@0:8@"AVPlayerViewControllerContentView"16
{UIEdgeInsets=dddd}24@0:8@"AVPlayerViewControllerContentView"16
@"NSNumber"24@0:8@"AVPlayerViewControllerContentView"16
v40@0:8d16d24d32
v24@0:8B16B20
v28@0:8B16B20B24
@"<AVVolumeController>"
@"AVNowPlayingInfoController"
@"AVSecondScreenContentViewConnection"
@"AVPlaybackControlsView"
@"AVTurboModePlaybackControlsPlaceholderView"
@"AVPlayerControllerTimeResolver"
@"AVTimeFormatter"
@"UIAlertController"
@"AVRouteDetectorCoordinator"
@"NSUUID"
@"AVMediaSelectionMenuController"
@"AVMobilePlaybackRateMenuController"
@"AVSecondScreenPlayerLayerView"
d24@0:8@"<UIViewControllerContextTransitioning>"16
v24@0:8@"<UIViewControllerContextTransitioning>"16
@"<UIViewImplicitlyAnimating>"24@0:8@"<UIViewControllerContextTransitioning>"16
v36@0:8@"AVTransition"16B24@?<v@?B>28
@"UIColor"24@0:8@"AVTransition"16
B40@0:8@"<AVTransitionDriver>"16@"UIGestureRecognizer"24@"UITouch"32
B32@0:8@"<AVTransitionDriver>"16q24
v40@0:8@"<AVTransitionDriver>"16q24@?<v@?>32
v24@0:8@"<AVTransitionDriver>"16
@"<UIViewControllerAnimatedTransitioning>"40@0:8@"UIViewController"16@"UIViewController"24@"UIViewController"32
@"<UIViewControllerAnimatedTransitioning>"24@0:8@"UIViewController"16
@"<UIViewControllerInteractiveTransitioning>"24@0:8@"<UIViewControllerAnimatedTransitioning>"16
@"UIPresentationController"40@0:8@"UIViewController"16@"UIViewController"24@"UIViewController"32
v44@0:8@16@24B32@?36
v40@0:8@16B24B28@?32
@"<AVTransitionControllerDelegate>"
@"<AVTransitionDriver>"
@"AVDisplayLink"
@"AVTransition"
@"AVInteractiveTransitionGestureTracker"
@"CAMediaTimingFunction"
@"AVSampleBufferDisplayLayerPlayerController"
@"AVPictureInPictureIndicatorLayer"
@"AVPictureInPictureSampleBufferDisplayLayerHostView"
@"CALayerHost"
v88@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64
@"AVValueTiming"
@"BSSimpleAssertion"
@"AVTimecodeController"
@"<AVPlayerControllerDelegate>"
@"AVAsset"
@"AVCoordinatedPlaybackSuspension"
v48@0:8@16@24d32@40
v32@0:8@"NSString"16@?<v@?>24
v24@0:8@"AVScrollViewObserver"16
v48@0:8{UIEdgeInsets=dddd}16
@"AVExternalPlaybackIndicatorView"
@"<AVPlayerViewControllerContentViewDelegate>"
@"UIView<AVPlaybackContentContainer>"
@"AVScrollViewObserver"
{UIEdgeInsets="top"d"left"d"bottom"d"right"d}
@"AVUserInteractionObserverGestureRecognizer"
@"UIVisualEffectView"
@"NSISO8601DateFormatter"
@"AVLoadingButtonView"
@32@0:8@16d24
@"CADisplayLink"
@"AVCustomStackLayout"
@"UIView<AVLayoutViewItem>"
v32@0:8q16@?24
v32@0:8q16d24
@"AVView"
@"AVTransportControlsView"
@"<AVPlaybackControlsViewVisibilityDelegate>"
@"NSData"16@0:8
@32@0:8q16@24
@60@0:8@16@24@32@40@48f56
@"NSArray"24@0:8@"<AVKitLayoutItem>"16
@"NSArray"32@0:8{CGSize=dd}16
@"NSLayoutXAxisAnchor"16@0:8
@"NSLayoutYAxisAnchor"16@0:8
@"NSLayoutDimension"16@0:8
@28@0:8@16f24
@36@0:8@16d24f32
@28@0:8d16f24
{?={?=qiIq}{?=qiIq}}24@0:8@16
v32@0:8@16{?=ii}24
v56@0:8@16{?=qiIq}24@?48
v28@0:8@"AVPictureInPictureController"16B24
{?={?=qiIq}{?=qiIq}}24@0:8@"AVPictureInPictureController"16
B24@0:8@"AVPictureInPictureController"16
v32@0:8@"AVPictureInPictureController"16{?=ii}24
v56@0:8@"AVPictureInPictureController"16{?=qiIq}24@?<v@?>48
v64@0:8{?={?=qiIq}{?=qiIq}}16
@"AVPictureInPicturePlaybackState"
@"AVSampleBufferDisplayLayerPlaybackDelegateAdapter"
{?="start"{?="value"q"timescale"i"flags"I"epoch"q}"duration"{?="value"q"timescale"i"flags"I"epoch"q}}
?ffffff
?[5"y
MbP?{
?333333
?333333
?333333
W@ffffff
?ffffff
?UUUUUU
(4Fd
yDff
?)\
Central Play
rate
v16@?0@"AVAppStorePlayerView"8
appStorePlayerViewDisableVideo
appStorePlayerViewPlayerLayerOnly
AVRouteDetectorCoordinatorMultipleRoutesDetectedDidChangeNotification
com.apple.avkit.routeDetectorCoordinatorQueue
-[UIWindow(AVAdditions) avkit_ensureOrientation:disableTouchCancellation:]
AVKit
%@ (%p) %@
AVKitErrorDomain
playerLayer
H:|[simplePlayerLayerView]|
simplePlayerLayerView
V:|[simplePlayerLayerView]|
layer
+[AVPictureInPicturePlatformAdapter isPictureInPictureSupported]
isPictureInPictureSupported
SpringBoard
alwaysAllowNonlinearPlaybackByDefault
playerController.pictureInPicturePossible
playerController.playingOnSecondScreen
v16@?0@"AVPictureInPicturePlatformAdapter"8
Failed to start picture in picture.
The UIScene for the content source has an activation state other than UISceneActivationStateForegroundActive, which is not allowed.
-[AVPictureInPicturePlatformAdapter stopPictureInPictureAndRestoreUserInterface:]
shouldRestore
-[AVPictureInPicturePlatformAdapter setInterruptedForAudioSession:]
interruptedForAudioSession
-[AVPictureInPicturePlatformAdapter setWasPlayingWhenSuspended:]
wasPlayingWhenSuspended
-[AVPictureInPicturePlatformAdapter setSource:]
-[AVPictureInPicturePlatformAdapter updateLayoutDependentBehaviors]
-[AVPictureInPicturePlatformAdapter _updatePictureInPictureShouldStartWhenEnteringBackground]
pictureInPictureShouldStartWhenEnteringBackground
v16@?0@"<PGMutablePlaybackState>"8
-[AVPictureInPicturePlatformAdapter setBackgroundPlaybackPolicy:]
playerController.contentDimensions
v32@?0@"AVPictureInPicturePlatformAdapter"8@16@"AVKeyValueChange"24
pictureInPictureWasStartedWhenEnteringBackground
playerController.playing
playerController.player
v32@?0@"AVPictureInPicturePlatformAdapter"8@16@"NSNotification"24
playerController.rate
playerController.minTime
playerController.maxTime
playerController.timing
playerController.muted
playerController.status
playerController.hasLiveStreamingContent
playerController.seekableTimeRanges
playerController.hasSeekableLiveStreamingContent
playerController.seeking
playerController.seekToTime
playerController.scrubbing
playerController.timeControlStatus
-[AVPictureInPicturePlatformAdapter pictureInPictureProxy:willStartPictureInPictureWithAnimationType:]
-[AVPictureInPicturePlatformAdapter pictureInPictureProxy:didStartPictureInPictureWithAnimationType:]
-[AVPictureInPicturePlatformAdapter pictureInPictureProxy:failedToStartPictureInPictureWithAnimationType:error:]
-[AVPictureInPicturePlatformAdapter pictureInPictureProxy:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:]
-[AVPictureInPicturePlatformAdapter pictureInPictureProxy:willStopPictureInPictureWithAnimationType:reason:]
-[AVPictureInPicturePlatformAdapter pictureInPictureProxy:didStopPictureInPictureWithAnimationType:reason:]
-[AVPictureInPicturePlatformAdapter pictureInPictureProxyPictureInPictureInterruptionBegan:]
-[AVPictureInPicturePlatformAdapter pictureInPictureProxyPictureInPictureInterruptionEnded:]
-[AVPictureInPicturePlatformAdapter pictureInPictureProxy:didUpdateResourcesUsageReductionReasons:oldReasons:]
shouldReduceResources
-[AVPictureInPicturePlatformAdapter pictureInPictureProxy:didReceivePlaybackCommand:]
-[AVPictureInPicturePlatformAdapter pictureInPictureProxy:didReceiveTestingCommand:]
-[AVPictureInPicturePlatformAdapter pictureInPictureViewControllerViewDidAppear:]
-[AVPictureInPicturePlatformAdapter pictureInPictureViewControllerViewWillDisappear:]
playerLayer.videoGravity
playerLayer.readyForDisplay
playerLayer.videoRect
videoBounds
pictureInPicturePlayerLayer.videoRect
videoGravity
playerLayer.pixelBufferAttributes
PLAYBACK_CONTROLS_VIEW_CONTROLLER_SCRUB_INSTRUCTIONS_SUBTITLE_LABEL_HI_SPEED_SCRUBBING_TEXT
PLAYBACK_CONTROLS_VIEW_CONTROLLER_SCRUB_INSTRUCTIONS_SUBTITLE_LABEL_HALF_SPEED_SCRUBBING_TEXT
PLAYBACK_CONTROLS_VIEW_CONTROLLER_SCRUB_INSTRUCTIONS_SUBTITLE_LABEL_QUARTER_SPEED_SCRUBBING_TEXT
PLAYBACK_CONTROLS_VIEW_CONTROLLER_SCRUB_INSTRUCTIONS_SUBTITLE_LABEL_FINE_SCRUBBING_TEXT
scrubbingSpeed
do not create your own AVAirMessageNotificationCenter
com.apple.avkit.AirMessageNotificationCenter
-[AVAirMessageNotificationCenter handleCommandMessage:completion:]
-[AVAirMessageNotificationCenter bonjourService:didAcceptConnectionChannel:]
currentItemIdentifier
-[AVAirMessageNotificationCenter bonjourService:didCloseChannel:]
-[AVAirMessageNotificationCenter airTransport:didReceiveObject:]
-[AVAirMessageNotificationCenter airTransport:didReceiveObject:]_block_invoke
v24@?0q8@"NSDictionary"16
-[AVAirMessageNotificationCenter airTransportInputDidClose:]
com.apple.AVKit.ChapterImageQueue
cgImage
avkt/ExternalContentIdentifier
avkt/ExternalUserProfileIdentifier
avkt/PlaybackProgress
avkt/ServiceIdentifier
avkt/iTunesStoreIdentifier
avkt/BrandIdentifier
AVPlayerItemAVKitDataDidChangeNotification
-[AVPlayerItem(AVKitAdditionsPrivate) avkit_airMessageSendExternalMetadata]
v24@?0@"AVAirMessageResponse"8q16
-[AVPlayerItem(AVKitAdditionsPrivate) avkit_airMessageSendExternalMetadata]_block_invoke
-[AVPlayerItem(AVKitAdditionsPrivate) avkit_airMessageSendToAppleTV]
externalMetadata
externalPlaybackController
+[AVPlayerController(AVMediaSelection) canonicalLanguageIdentifierFromString:]
NilString
hasAudioMediaSelectionOptions
hasLegibleMediaSelectionOptions
audioMediaSelectionOptions
-[AVPlayerController(AVMediaSelection) setAudioMediaSelectionOptions:]
currentAssetIfReady
legibleMediaSelectionOptions
-[AVPlayerController(AVMediaSelection) setLegibleMediaSelectionOptions:]
-[AVPlayerController(AVMediaSelection) currentLegibleMediaSelectionOption]
player.appliesMediaSelectionCriteriaAutomatically
-[AVPlayerController(AVMediaSelection) selectedMediaOptionMayHaveChanged:]
q24@?0@8@16
B8@?0
avkit_persistentIdentifier
-[AVPlayerController(AVMediaSelection) _ensureUserCaptionDisplayType:]
-[AVPlayerController(AVMediaSelection) _disableLegibleMediaSelectionOptions:]
-[AVPlayerController(AVMediaSelection) _enableAutoMediaSelection:]
-[AVPlayerController(AVMediaSelection) _setMediaOption:mediaCharacteristic:]
MediaSelectionOptionsPersistentID
Volume
-[AVNewsWidgetPlayerBehavior init]
-[AVNewsWidgetPlayerBehavior dealloc]
AVSubtitlesMenu
AVLanguagesMenu
-[AVMediaSelectionMenuController _menuForOptions:withIdentifier:]_block_invoke
OVERFLOW_MENU_LANGUAGES_TITLE
OVERFLOW_MENU_SUBTITLES_TITLE
AVPlaybackSpeedMenu
selectedRate
v32@?0@"AVMobilePlaybackRateMenuController"8@16@"AVKeyValueChange"24
Playback Speed
menu
v32@?0@"AVSecondScreenController"8@16@"NSNotification"24
-[AVSecondScreenController init]_block_invoke
-[AVSecondScreenController addConnection:]
-[AVSecondScreenController removeConnection:]
-[AVSecondScreenController setPreferredConnection:]
-[AVSecondScreenController addSecondScreen:]
-[AVSecondScreenController removeSecondScreen:]
B16@?0@"AVSecondScreenConnection"8
-[AVSecondScreenController _targetScreen]
-[AVSecondScreenController _updateActiveConnection]
-[AVSecondScreenController _insertConnection:atIndex:]
receiverPairingIdentity
AVBonjourServiceClientDidResolveNetServiceNotification
AVExternalDeviceAControllerirPlayDeviceRefDidChangeNotification
AVBonjourServiceClientDidResolveAirPlayDeviceNetServiceNotification
-[AVBonjourServiceClient initWithNetServiceType:]_block_invoke
local
<AVBonjourServiceClient %p (%@); delegate <%@ %p>>
-[AVBonjourServiceClient _updatedAirPlayPairedDeviceAsync]
-[AVBonjourServiceClient _updatedAirPlayPairedDeviceAsync]_block_invoke
SUCCESS
FAIL
v24@?0^v8^{__CFError=}16
v20@?0C8^v12
-[AVBonjourServiceClient _isServiceForCurrentAirPlayDevice:]
<%@:%ld>
?host?
-[AVBonjourServiceClient airTransportSenderForNetService:]
-[AVBonjourServiceClient netServiceDidResolveAddress:]
AVNowPlayingInfoControllerDidReceiveStopCommandEventNotification
com.apple.avkit.sharedNowPlayingInfoController
-[AVNowPlayingInfoController init]
^{__CFArray=}20@?0I8^{__CFDictionary=}12
-[AVNowPlayingInfoController dealloc]
-[AVNowPlayingInfoController setPlayerController:]
playerController.hasContent
playerController.contentDuration
playerController.metadata
v32@?0@"AVNowPlayingInfoController"8@16@"NSNotification"24
playerController.canPause
playerController.canPlay
playerController.canTogglePlayback
playerController.canSeek
playerController.canScanForward
playerController.canScanBackward
playerController.canSeekChapterForward
playerController.canSeekChapterBackward
playerController.audioMediaSelectionOptions
playerController.legibleMediaSelectionOptions
-[AVNowPlayingInfoController startNowPlayingUpdatesForPlayerController:afterDelay:]
-[AVNowPlayingInfoController stopNowPlayingUpdatesForPlayerController:]
v40@?0@"NSMutableDictionary"8@"NSArray"16@"NSString"24^{__CFString=}32
+[AVNowPlayingInfoController _mediaRemoteLanguageOptionCharacteristicsForAVMediaSelectionOption:]
AVNowPlayingInfoController_Mobile.m
mediaRemoteMediaCharacteristic
B24@?0@"UIWindowScene"8@"NSDictionary"16
B24@?0@"UISceneSession"8@"NSDictionary"16
v48@?0@8@"NSString"16@24@32@"NSString"40
v32@?0@8@16@24
v16@?0@"NSNotification"8
avkit_musicAppBehaviorContext
v32@?0@"AVMusicAppBehaviorContext"8@16@"NSNotification"24
v32@?0@"AVMusicAppBehaviorContext"8@16@"AVKeyValueChange"24
playerController.player.currentItem
AVSecondScreenDidDisconnectNotification
AVSecondScreenConnectionDidBecomePossibleNotification
v32@?0@"AVSecondScreen"8@"UIWindowScene"16@"NSNotification"24
-[AVSecondScreen initWithScene:]_block_invoke
v32@?0@"AVSecondScreen"8@16@"NSNotification"24
-[AVSecondScreen dealloc]
-[AVSecondScreen connectWithSecondScreenConnection:]
-[AVSecondScreen setState:]
PlaybackProhibited
PlaybackPossible
PlaybackActive
Invalid
-[AVAirTransportStreams invalidate]
<%@ %p>
<%@ %p: (<%@, >%@), delegate=%@>
-[AVAirTransportStreams _readDataNonBlockingUpToMaxLength:]
AVAirTransport.m
isRunningEventThread()
-[AVAirTransportStreams _readAvailableData]
-[AVAirTransportStreams _inputStreamHasBytesAvailable]
-[AVAirTransportStreams _inputStreamHasBytesAvailable]_block_invoke
-[AVAirTransportStreams stream:handleEvent:]
Output
Input
+[AVAirTransport startEventThreadIfNecessary]_block_invoke_2
com.apple.avkit.AirChannel
-[AVAirTransport dealloc]
<%@ %p: delegate=%@>
-[AVAirTransport terminatePendingRequests]_block_invoke
_writeData must be implmemented by subclass
-[AVAirTransport writeMore]
-[AVAirTransport writeData:]
isReadyToSend should be implemented by subclass
-[AVAirTransport sendObject:receiveResponse:]_block_invoke
-[AVAirTransport sendResponse:]
AVAirMessageDispatcherDidChangeTargetNotification
<%@ %p: serviceClient=%@, channel=%@; delegate=%@>
-[AVAirMessageDispatcher sendMessage:completion:]
-[AVAirMessageDispatcher sendMessage:completion:]_block_invoke
v24@?0@"<AVAirTransportReverseTransformationResultProtocol>"8q16
-[AVAirMessageDispatcher didConnectToBonjourService:channel:]
-[AVAirMessageDispatcher airTransportOutputDidOpen:]
-[AVAirMessageDispatcher airTransportInputDidClose:]
-[AVAirMessageDispatcher airTransport:didReceiveObject:]
-[UIViewController(AVAdditions) avkit_setNeedsUpdatePreferencesIfNeeded]
UIWhitePointAdaptivityStyleVideo == preferredWhitePointAdaptivityStyle
prefersHomeIndicatorAutoHidden
-[UIWindowScene(AVAdditions) avkit_disableTouchCancellation:forRotationActions:]
actuallyDisableTouchCancellation
com.apple.avkit
AVVolumeControllerCurrentRouteHasVolumeControlChangedNotification
AVVolumeControllerVolumeChangedNotification
AVVolumeControllerVolumeDidChangeNotificationIsInitialValueKey
MediaPlayback
com.apple.AVKit.AVSystemVolumeControllerQueue
B24@?0@"AVVolumeHUDAssertion"8^B16
-[AVSystemVolumeController setSystemVolumeHUDEnabled:forSceneVolumeHudAssertion:]
Enabling
Disabling
-[AVSystemVolumeController setSystemVolumeHUDEnabled:forWindowSceneSessionIdentifier:]
Audio/Video
ExplicitVolumeChange
RouteChange
v16@?0@"AVSystemVolumeController"8
-[AVSystemVolumeController _applyProposedVolumeImmediately]
-[AVSystemVolumeController setPrefersSystemVolumeHUDHidden:]
MPVolumeHUDController
Airplay
AirPlay
v16@?0@"AVMicaPackage"8
AVPlayerAssetFilename
AVPlayerShouldAutoplay
AVShowsPlaybackControls
AVVideoLayerGravity
AVAllowsPictureInPicturePlayback
AVWantsDetachedFullscreenPresentation
AVCanDisplayContentInDetachedWindow
AVCanStartPictureInPictureAutomaticallyWhenEnteringBackground
AVPlayerViewControllerDidChangePlayerControllerNotification
AVPlayerViewControllerDidEnterFullScreenFromInline
AVPlayerViewControllerDidExitFullScreenFromInline
-[AVPlayerViewController initWithNibName:bundle:]
com.apple.podcasts
*** Warning: %@ was deallocated while its contents were being presented full screen. ***
-[AVPlayerViewController dealloc]
-[AVPlayerViewController initWithCoder:]
-[AVPlayerViewController encodeWithCoder:]
-[AVPlayerViewController setPlayer:]
%@ only supports AVPlayer instances that have been initialized with the main queue as the dispatch queue for serializing key-value observations.
-[AVPlayerViewController setShowsPlaybackControls:]
-[AVPlayerViewController setVideoGravity:forLayoutClass:]
playerLayerView.videoGravity
_playerLayerView.videoDisplaySize
secondScreenConnectionDisplaySize
playerController.externalPlaybackType
-[AVPlayerViewController setAllowsPictureInPicturePlayback:]
-[AVPlayerViewController setPlayerController:]
v32@?0@"AVPlayerViewController"8@16@"NSNotification"24
-[AVPlayerViewController setPlaybackRateCollection:]
-[AVPlayerViewController setShowsTimecodes:]
_showsTimecodes
-[AVPlayerViewController setUpdatesNowPlayingInfoCenter:]
_playerLayerView.pixelBufferAttributes
-[AVPlayerViewController setCanHidePlaybackControls:]
canHidePlaybackControls
-[AVPlayerViewController setAllowsEnteringFullScreen:]
allowsEnteringFullScreen
-[AVPlayerViewController setShowsMinimalPlaybackControlsWhenEmbeddedInline:]
-[AVPlayerViewController setRequiresLinearPlayback:]
-[AVPlayerViewController setPlaybackControlsIncludeTransportControls:]
playbackControlsIncludeTransportControls
-[AVPlayerViewController setPlaybackControlsIncludeDisplayModeControls:]
playbackControlsIncludeDisplayModeControls
-[AVPlayerViewController setPlaybackControlsIncludeVolumeControls:]
playbackControlsIncludeVolumeControls
-[AVPlayerViewController setVolumeControlsCanShowSlider:]
-[AVPlayerViewController setEntersFullScreenWhenPlaybackBegins:]
entersFullScreenWhenPlaybackBegins
-[AVPlayerViewController flashPlaybackControlsWithDuration:]
*** Warning: Called %@ with a duration of %@. Ignoring the duration as it is too short.
*** AVPlayerViewController: Setting a view is not supported.
-[AVPlayerViewController loadView]
v32@?0@"AVPlayerViewController"8@16@"AVKeyValueChange"24
-[AVPlayerViewController prefersStatusBarHidden]
prefersStatusBarHidden
com.apple.AppStore
-[AVPlayerViewController setTransportBarCustomMenuItems:]
playbackControlsController.transportBarCustomMenuItems
v60@?0@"NSString"8q16B24:28:36@"NSString"44@"NSString"52
KEYBOARD_DISCOVERABILITY_PLAY_PAUSE
Play/Pause keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_VOLUME_UP
Volume up keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_VOLUME_DOWN
Volume down keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_SKIP_BACK_15
Skip back 15 seconds keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_SKIP_AHEAD_15
Skip ahead 15 seconds keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_GO_TO_BEGINNING
Go to beginning keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_REWIND
Rewind keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_FAST_FORWARD
Fast forward keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_SHOW_PREVIOUS_FRAME
Show previous frame keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_SHOW_NEXT_FRAME
Show next frame keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_EXIT_FULLSCREEN
Exit full screen keyboard command discoverability title
-[AVPlayerViewController _addObservers]
playerController.playingOnExternalScreen
playerController.externalPlaybackAirPlayDeviceLocalizedName
playerController.hasEnabledAudio
playerController.hasEnabledVideo
v16@?0@"AVPlayerViewController"8
playerController.defaultPlaybackRate
com.apple.tv
com.apple.avkittester
_pictureInPictureController
-[AVPlayerViewController isAudioOnlyContent]
EXTERNAL_PLAYBACK_INDICATOR_VIEW_AIRPLAY_TITLE
EXTERNAL_PLAYBACK_INDICATOR_VIEW_AIRPLAY_SUBTITLE
EXTERNAL_PLAYBACK_INDICATOR_VIEW_TV_OUT_TITLE
EXTERNAL_PLAYBACK_INDICATOR_VIEW_TV_OUT_SUBTITLE
com.apple.iBooks
-[AVPlayerViewController _handleDoubleTapGesture:]
-[AVPlayerViewController _handleSingleTapGesture:]
-[AVPlayerViewController _handleDoubleDoubleTapGesture:]
B16@?0@"UIView"8
-[AVPlayerViewController _mediaSelectionDoneButtonTapped:]
v16@?0@"<AVMetricsCollectionBehaviorContext>"8
-[AVPlayerViewController _delegateRespondsTo:]
does
does NOT
playerLayerView.readyForDisplay
playerLayerView.videoBounds
-[AVPlayerViewController showFullScreenPresentationFromView:completion:]
-[AVPlayerViewController enterFullScreenWithCompletion:]_block_invoke
success
v20@?0B8@"NSError"12
-[AVPlayerViewController exitFullScreenWithCompletion:]_block_invoke
*** Warning: %@ is trying to enter full screen, but is not in its view's window's view controller hierarchy. This results in undefined behavior.
Invalid call of %@!
*** Warning: %@ is trying to exit full screen, but is not in its view's window's view controller hierarchy. This results in undefined behavior.
-[AVPlayerViewController avkit_willBeginStoppingPictureInPictureForPictureInPictureViewController:]
-[AVPlayerViewController pictureInPictureController:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:]
-[AVPlayerViewController playbackRateCollection:selectedPlaybackRateDidChangeTo:]
-[AVPlayerViewController(AVPlayerViewController_WebKitOnly) initWithPlayerLayerView:]
-[AVPlayerViewController(AVPlayerViewController_WebKitOnly) setPlaybackControlsShouldControlSystemVolume:]
-[AVPlayerViewController(AVPlayerViewController_WebKitOnly) enterFullScreenAnimated:completionHandler:]
View may not need layout when you call %@!
View needs to be loaded before you can call %@!
-[AVPlayerViewController(AVPlayerViewController_WebKitOnly) exitFullScreenAnimated:completionHandler:]
_pictureInPictureController.pictureInPicturePossible
_pictureInPictureController.pictureInPictureActive
_pictureInPictureController.pictureInPictureSuspended
_pictureInPictureController.pictureInPictureWasStartedWhenEnteringBackground
playbackControlsController
-[AVPlayerViewController(AVPlayerViewControllerInternal) setCanStartPictureInPictureAutomaticallyWhenEnteringBackground:]
-[AVPlayerViewController(AVPlaybackControlsViewControllerActions) videoGravityButtonTapped:]
-[AVPlayerViewController(AVPlaybackControlsViewControllerActions) mediaSelectionButtonTapped:]
-[AVPlayerViewController(AVPlaybackControlsViewControllerActions) fullScreenButtonTapped:]
-[AVPlayerViewController(AVPlaybackControlsViewControllerActions) pictureInPictureButtonTapped:]
-[AVPlayerViewController(AVPlaybackControlsViewControllerActions) exitFullscreen:]
-[AVPlayerViewController(DeprecationsAndToBeRemoved) setPreferredUnobscuredArea:]
-[AVPlayerViewController(DeprecationsAndToBeRemoved) setEntersFullScreenWhenTapped:]
entersFullScreenWhenTapped
avkit_currentEditBehaviorContext
playerController.player.currentItem.duration
playerController.player.currentItem.presentationSize
v32@?0@"AVEditBehaviorContext"8@16@"AVKeyValueChange"24
playerController.player.timeControlStatus
editView.trimming
editView.scrubbing
-[AVEditBehaviorContext rotateClockwise]
EDIT_BEHAVIOR_CONTEXT_CANCEL
v80@?0{?=qiIq}8^{CGImage=}32{?=qiIq}40q64@"NSError"72
AVOverflowButtonDidShowContextMenu
AVOverflowButtonDidHideContextMenu
AVControlOverflowMenu
More Controls
@"UIMenu"16@?0@"UIMenu"8
@"UIMenu"16@?0@"NSArray"8
 [%f, %@, %@]
_avairtvui._tcp.
AVKitAir/1
length
compression
messagetype
item
mimetype
languagetag
kern.osversion
sender
build
airmessaging
+[AVAirMessage isAirMessagingEnabled]_block_invoke
type
-[AVAirMessage initWithMessageType:itemIdentifier:dictionaryRepresentation:]
 %@: %@
-[AVAirMessage jsonDataRepresentation]
none
lzfse
zlib
lzma
+[AVAirMessage _decompressBodyData:forCompressionAlgorithm:]
+[AVAirMessage _nameForDataCompressionAlgorithm:]
%@:%@
application/octet-stream
-[AVAirMessage messageDataRepresentation]
+[AVAirMessage messageWithParts:]
-[AVPictureInPictureViewController initWithPictureInPicturePlayerLayerView:]
-[AVPictureInPictureViewController dealloc]
%@ does not support unarchiving from a nib.
@"UILabel"16@?0d8
@"UIStackView"24@?0@"NSArray"8d16
value
time stamp
*** initialization method -%@ cannot be sent to an abstract object of class %@: Create a concrete instance!
*** -%@ cannot be sent to an abstract object of class %@: Create a concrete instance!
*** -%@ only defined for abstract class.  Define %c[%@ %@]!
debugInfoDisplay.currentMode
debugInfoDisplay.preferences
player.currentItem
player.currentItem.tracks
v16@?0@"AVSecondScreenDebugAssistant"8
formatDescriptions
Unknown
naturalSize
%.0f
%0.f
Dolby
Current Display Mode: %@ %@ @ %@Hz
--------
Current Variant: %@ %@
Best Variant: %@ %@
Preferred Refresh Rate: %@Hz
Content Match: %@
Preferred Color Mode: %@
Enabled
Disabled
UIScreen.nativeBounds.size: %@
feC7TgoAAKLjn/KU8JAKFA
com.apple.springboard
%.0fx%0.f
HDR10
InternalBuild
enableSecondScreenHUD
-[AVPresentationController initWithPresentedViewController:presentingViewController:withConfiguration:]
-[AVPresentationController dealloc]
-[AVPresentationController presentationTransitionWillBegin]
-[AVPresentationController presentationTransitionDidEnd:]
completed
-[AVPresentationController dismissalTransitionWillBegin]
-[AVPresentationController dismissalTransitionDidEnd:]
v32@?0@"AVPresentationController"8@16@"NSNotification"24
-[AVPresentationController _observeSceneDidBecomeActiveForRestoringRotatability]_block_invoke
-[AVHomeIPCameraBehaviorContext setZoomingEnabled:]
zoomingEnabled
-[AVHomeIPCameraBehaviorContext setLivePreviewActive:]
livePreviewActive
-[AVHomeIPCameraBehaviorContext setCanStartPictureInPictureAutomaticallyWhenEnteringBackground:]
canStartPictureInPictureAutomaticallyWhenEnteringBackground
-[AVHomeIPCameraBehaviorContext setPlaybackControlsIncludePictureInPictureButton:]
playbackControlsIncludePictureInPictureButton
v32@?0@"AVHomeIPCameraBehaviorContext"8@16@"NSNotification"24
-[AVSeymourBehaviorContext hidePlaybackControlsImmediately]
missing implementation
-[AVAirMessageTransformer dataForMessage:]
+[AVDismissalExpanseCoordinator coordinateDismissalWithExpanseSessionForPlayer:cancellable:dismissalBlock:]_block_invoke
+[AVDismissalExpanseCoordinator coordinateDismissalWithExpanseSessionForPlayer:cancellable:dismissalBlock:]
identifier
extendedLanguageTag
localeIdentifier
time
duration
dataType
startDate
-[AVMetadataItem(AVAirSerialization) airDictionaryRepresentation]
b64:%@
+[AVMetadataItem(AVAirSerialization) itemWithAirDictionaryRepresentation:]
b64:
-[AVPlaybackContentTransitioningView setStateDescription:]
         Idle
     Possible
   Prohibited
Transitioning
   Cancelling
    Cancelled
   Completing
    Completed
Bounce
 None
 Left
Right
%@ %@
AVMediaSelectionViewControllerCellReuseIdentifier
-[AVMediaSelectionTableViewController initWithStyle:]
MEDIA_SELECTION_VIEW_CONTROLLER_NAVIGATION_ITEM_TITLE
-[AVMediaSelectionTableViewController dealloc]
v16@?0@"<UIViewControllerTransitionCoordinatorContext>"8
MEDIA_SELECTION_VIEW_CONTROLLER_AUDIO_OPTIONS_HEADER_TITLE
MEDIA_SELECTION_VIEW_CONTROLLER_LEGIBLE_OPTIONS_HEADER_TITLE
AVPictureInPictureControllerWillStartNotification
AVPictureInPictureControllerDidStartNotification
AVPictureInPictureControllerWillStopNotification
AVPictureInPictureControllerDidStopNotification
AVPictureInPictureControllerPlaybackStateDidChangeNotification
AVPictureInPictureControllerPlaybackStateIsPlayingKey
AVPictureInPictureControllerContentSourceKey
%@ is not a valid initializer. You must call -[%@ initWithPlayerLayer:].
anyPictureInPictureActive
v32@?0@"AVPictureInPictureController"8@16@"AVKeyValueChange"24
-[AVPictureInPictureController _commonInitWithSource:]_block_invoke
owner.isOtherPictureInPictureActive
v32@?0@"AVPictureInPictureController"8@16@"NSNotification"24
-[AVPictureInPictureController startPictureInPicture]
-[AVPictureInPictureController setAllowsPictureInPicturePlayback:]
allowsPictureInPicturePlayback
-[AVPictureInPictureController setMicrophoneEnabled:]
microphoneEnabled
-[AVPictureInPictureController setCanStartAutomaticallyWhenEnteringBackground:]
canStartAutomaticallyWhenEnteringBackground
-[AVPictureInPictureController setRequiresLinearPlayback:]
requiresLinearPlayback
-[AVPictureInPictureController setPictureInPicturePossible:]
pictureInPicturePossible
-[AVPictureInPictureController pictureInPicturePlatformAdapter:prepareToStopForRestoringUserInterface:]
-[AVPictureInPictureController pictureInPicturePlatformAdapter:statusDidChange:fromStatus:]
shouldRetainSource
self.sourceIfRetainedDuringPictureInPicturePlayback == nil
-[AVPictureInPictureController setContentSource:]_block_invoke
player
videoRect
readyForDisplay
-[AVPlayerLayer(AVPictureInPictureContentSource) avkit_startRoutingVideoToPictureInPictureViewController:]
self.isPIPModeEnabled
-[AVPlayerLayer(AVPictureInPictureContentSource) avkit_stopRoutingVideoToPictureInPictureViewController:]
PictureInPictureIndicatorLarge
-[AVTimeRange initWithUnionOfCMTimeRanges:]
startTime
-[AVTimeRange timeRangeByAddingTimeInterval:shiftingDates:]
AVTimeRange.m
false
[%@...%@]
 (-> [%@...%@])
v32@?0@"AVTimeRange"8Q16^B24
B16@?0@"AVTimeRange"8
AVExternalPlaybackStateWillPlayLocally
AVExternalPlaybackStateWillPlayExternally
AVExternalPlaybackStatePlaybackCancelled
-[AVExternalPlaybackController willBeginPlaybackFromAppWithBundleID:completionHandler:]
-[AVExternalPlaybackController willBeginPlaybackFromAppWithBundleID:completionHandler:]_block_invoke
v16@?0Q8
-[AVExternalPlaybackController _invokeClientCompletionHandlerWithPlaybackState:]
MPMediaControlsConfiguration
%02d:%02d:%02d%@%02d
%lu F
-[AVPictureInPicturePlatformAdapter(Common) _setStatusAndNotifyDelegateIfNeeded:]
-[AVPictureInPicturePlatformAdapter(Common) _updateStatusUsingProposedStatus:]
self.status != AVPictureInPictureControllerStatusProhibited
-[AVPictureInPicturePlatformAdapter(Common) _setRoutingVideoToHostedWindow:pictureInPictureViewController:source:]
shouldRoute
Half Speed
Compact Half Speed
Normal Speed
Compact Normal Speed
Fast Speed
Compact Fast Speed
Faster Speed
Compact Faster Speed
Double Speed
Compact Double Speed
%@ - selected
inputRadius
inputNormalizeEdges
inputQuality
inputIntermediateBitDepth
inputColorMatrix
v16@?0@"AVCABackdropLayerView"8
-[AVRoutePickerView setAirPlayActive:]
airPlayActive
-[AVRoutePickerView updateButtonAppearance]
Active
Inactive
v32@?0@"AVRoutePickerView"8@16@"NSNotification"24
com.apple.avkit.avroutepickerview
MPMediaControls
Unable to find class %s
/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
/System/Library/Frameworks/MediaPlayer.framework/Contents/MacOS/MediaPlayer
%@ is not a valid initializer. You must call -[%@ initWithTraitCollection:opaque:].
PICTURE_IN_PICTURE_INDICATOR_LAYER_TITLE
Mute Toggle
Mute
playerController.maxTiming
playerController.minTiming
currentTime
targetTime
minTime
maxTime
v32@?0@"AVZoomingBehaviorContext"8@16@"NSNotification"24
-[AVNewsWidgetPlayerBehaviorContext initWithAVKitOwner:]
-[AVNewsWidgetPlayerBehaviorContext setVideoGravityForTransitioningContent:]
-[AVNewsWidgetPlayerBehaviorContext setStartNextContentTransitionButtonEnabled:]
startNextContentTransitionButtonEnabled
-[AVNewsWidgetPlayerBehaviorContext setStartPreviousContentTransitionButtonEnabled:]
startPreviousContentTransitionButtonEnabled
-[AVNewsWidgetPlayerBehaviorContext updateStartLeftRightContentTransitionButtonsEnabled]_block_invoke
-[AVNewsWidgetPlayerBehaviorContext setCustomContentTransitioningInfoPanel:]
-[AVPlayerViewController(AVPlayerViewController_NewsOnly) setContentTransitioningDelegate:]
-[AVPlayerViewController(AVPlayerViewController_NewsOnly) startContentTransition:]
-[AVTransition initWithTransitionContext:]
-[AVTransition dealloc]
-[AVTransition startInteractiveTransition]
-[AVTransition finishInteractiveTransition]
-[AVTransition cancelInteractiveTransition]
-[AVTransition completeTransition:]
didComplete
-[AVTransition completeTransition:]_block_invoke
v32@?0@"AVLayoutViewRowHead"8Q16^B24
v32@?0@"AVLayoutItemAttributes"8Q16^B24
rectangle.portrait.arrowtriangle.2.inward
rectangle.portrait.arrowtriangle.2.outward
rectangle.arrowtriangle.2.inward
rectangle.arrowtriangle.2.outward
arrow.up.left.and.arrow.down.right
xmark
captions.bubble
globe
pause.fill
play.fill
pip.enter
pip.exit
gobackward.15
goforward.15
forward.end.alt.fill
backward.end.fill
forward.end.fill
airplayvideo
VolumeMuted
VolumeZero
VolumeLow
VolumeMedium
VolumeHigh
ellipsis
speedometer
AVMobileImageNameNoImage
v16@?0@"UIGraphicsImageRendererContext"8
com.apple.avkit.images
com.apple.avkit.UIKit_AVAdditions.AVMobileImageLoadingQueue
com.apple.avkit.UIKit_AVAdditions.AVMobileTextImageCache
gobackward.10
gobackward.30
gobackward.45
gobackward.60
gobackward.75
gobackward.90
goforward.10
goforward.30
goforward.45
goforward.60
goforward.75
goforward.90
latn
.westernarabic
AVRoutePickerViewCircularAirPlayGlyph
AVRoutePickerViewSquareAirPlayGlyph
VolumeGlyph
mute
half
full
plusL
com.apple.avkit.caml
LKState
LKEventHandler
LKStateAddAnimation
LKStateAddElement
LKStateElement
LKStateRemoveAnimation
LKStateRemoveElement
LKStateSetValue
LKStateSetProperty
LKStateTransition
LKStateTransitionElement
v32@?0@"CALayer"8Q16^B24
v32@?0@"CAState"8Q16^B24
-RTL
caml
timeControlStatus
v32@?0@"AVTurboModePlaybackControlsPlaceholderView"8@16@"AVKeyValueChange"24
muted
*** AVPlayerViewControllerAnimationCoordinator: Animations added to coordinator after animations performed will be ignored.
com.apple.avkit.AVTimer.manage %p
com.apple.avkit.AVTimer.timer %p
%@ is not a valid initializer. You must call -[%@ initWithTimeInterval:queue:block:repeats:].
AVSecondScreenConnectionVideoDisplaySizeChanged
AVSecondScreenConnectionReadyDidChangeNotification
AVSecondScreenConnectionActiveDidChangeNotification
AVSecondScreenConnectionPlayingDidChangeNotification
AVSecondScreenConnectionPreferredDisplayCriteriaDidChangeNotification
-[AVSecondScreenConnection dealloc]
-[AVSecondScreenConnection setPlayerLayer:]
allowsExternalPlayback
externalPlaybackActive
airPlayVideoActive
currentItem.status
currentItem.hasVideo
usesExternalPlaybackWhileExternalScreenIsActive
v16@?0@"AVSecondScreenConnection"8
currentItem.asset
availableVideoDynamicRanges
preferredDisplayCriteria
-[AVSecondScreenConnection _determineIsReadyToConnect]
-[AVSecondScreenConnection _currentItemIsReadyToPlayVideoOrLoadingWhileActive]
isReadyToPlayOrLoadingWhileActive
playerController.volume
v32@?0@"AVPlayerVolumeController"8@16@"AVKeyValueChange"24
-[AVAirMessageParts bodyAsJSON]
-[AVAirMessageParts decompressBodyUsingAlgorithm:]
-[AVAirMessageParts decompressBodyUsingNamedAlgorithm:]
-[AVAirMessageParts(AVAirMessages) airMessage]
sublayerTransform
6.6x
Whole Numeric Playback Speed
Fractional Numeric Playback Speed
-[AVTransportControlsView initWithFrame:styleSheet:]
Scrubber
@"AVLabel"24@?0@"NSString"8@"NSString"16
v16@?0@"NSString"8
Time Elapsed
Time Remaining
PLAYBACK_CONTROLS_VIEW_CONTROLLER_LIVE_BROADCAST_LABEL_TEXT
Live Broadcast
PLAYBACK_CONTROLS_VIEW_CONTROLLER_LIVE_LABEL_TEXT
Live
detatchedExtraContentStackView
Media Selection
Play/Pause
Skip Forward
Skip Backward
Skip To Next
Skip To Previous
transportControlsView
PLAYBACK_CONTROLS_VIEW_CONTROLLER_SCRUB_INSTRUCTIONS_SLIDE_UP_TITLE_LABEL_TEXT
v16@?0@"<AVBehavior>"8
v16@?0@"<AVBehaviorContext>"8
v16@?0@8
wireless
TVOut
B24@?0@"UIWindow"8@"NSDictionary"16
-[UIWindowScene(AVSecondScreenAdditions) _avkit_setPreferredRefreshRate:HDRMode:overscanCompensation:]
None
B24@?0@"UIScene"8@"NSDictionary"16
-[UIScene(AVSecondScreenAdditions) _avkit_setPreferredRefreshRate:HDRMode:overscanCompensation:]
AVPlaybackControlsControllsShowsLoadingIndicatorNotification
AVPlaybackControlsControllerShowsLoadingIndicatorValueKey
v32@?0@"AVPlaybackControlsController"8@16@"NSNotification"24
-[AVPlaybackControlsController initWithPlayerViewController:]
-[AVPlaybackControlsController dealloc]
scrubbingOrSeeking
v32@?0@8@16@"AVKeyValueChange"24
playerController.usesExternalPlaybackWhileExternalScreenIsActive
v16@?0@"AVPlaybackControlsController"8
needsTimeResolver
-[AVPlaybackControlsController setShowsMinimalPlaybackControlsWhenEmbeddedInline:]
showsMinimalPlaybackControlsWhenEmbeddedInline
v32@?0@"AVPlaybackControlsController"8@16@"AVKeyValueChange"24
-[AVPlaybackControlsController setShowsPlaybackControls:]
showsPlaybackControls
-[AVPlaybackControlsController setHasCustomPlaybackControls:]
hasCustomPlaybackControls
-[AVPlaybackControlsController setCanIncludePlaybackControlsWhenInline:]
canIncludePlaybackControlsWhenInline
-[AVPlaybackControlsController setVolumeControlsCanShowSlider:]
volumeControlsCanShowSlider
-[AVPlaybackControlsController setUpdatesNowPlayingInfoCenter:]
updatesNowPlayingInfoCenter
-[AVPlaybackControlsController setShowsVideoGravityButton:]
showsVideoGravityButton
-[AVPlaybackControlsController setPlaybackControlsShouldControlSystemVolume:]
playbackControlsShouldControlSystemVolume
playerViewControllerIsPresentingFullScreen
playerViewControllerIsPresentedFullScreen
coveringWindow
-[AVPlaybackControlsController setShowsTimecodes:]
showsTimecodes
multipleRoutesDetected
playerController.allowsExternalPlayback
wantsExternalPlaybackButtonShown
hasPlaybackBegunSincePlayerControllerBecameReadyToPlay
fullScreen
shouldEnterFullScreenWhenPlaybackBegins
pictureInPictureController.pictureInPictureActive
preferredUnobscuredArea
playerController.hasVideo
playButtonsShowPauseGlyph
playerController
playButtonHandlerForLazyPlayerLoading
inlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused
playerViewControllerHasInvalidViewControllerHierarchy
playerController.hasMediaSelectionOptions
timeResolver.targetTime
timeResolver.minTime
timeResolver.maxTime
seekingEnabled
playerViewControllerIsBeingTransitionedWithResizing
playbackControlsIncludeStartContentTransitionButtons
playbackControlsView
resumingUpdates
playbackSuspendedForScrubbing
playbackControlsView.showsPlaybackControls
v16@?0@"UIAction"8
EXTERNAL_PLAYBACK_OVERFLOW_MENU_ITEM_TITLE
-[AVPlaybackControlsController _observeBoolForKeyPath:usingKeyValueObservationController:observationHandler:]
-[AVPlaybackControlsController _updatePlaybackControlsVisibilityWantsPlaybackControlsVisible:]
-[AVPlaybackControlsController flashPlaybackControlsWithDuration:]
-[AVPlaybackControlsController showPlaybackControls:immediately:]
-[AVPlaybackControlsController _autoHideControlsAfterDelay:]
prominentPlayButtonCanShowPauseGlyph
showsProminentPlayButton
playerController.currentAssetIfReady
prefersMuted
v24@?0@"AVPlaybackControlsController"8@"AVDisplayLink"16
hasSeekableLiveStreamingContent
playerController.playingOnMatchPointDevice
playerController.loadedTimeRanges
showsLoadingIndicator
playbackViewFrame
hasBecomeReadyToPlay
canShowLoadingIndicator
startLeftwardContentTransitionButtonEnabled
startRightwardContentTransitionButtonEnabled
showsTransportControls
showsSkipButtons
showsStartContentTransitionButtons
showsRoutePickerView
showsMediaSelectionButton
showsPlaybackSpeedButton
minimumTime
maximumTime
currentAudioMediaSelectionOption
currentLegibleMediaSelectionOption
v16@?0@"UIImage"8
v16@?0@"AVNowPlayingInfoController"8
-[AVPlaybackControlsController _updateSecondScreenConnectionReadyToConnect]
readyToConnect
-[AVSecondScreenViewController dealloc]
-[AVSecondScreenViewController setPlayingOnSecondScreen:]
playingOnSecondScreen
layer.videoRect
v32@?0@"AVSecondScreenPlayerLayerView"8@16@"AVKeyValueChange"24
-[AVTransitionController wantsInteractiveStart]
wantsInteractiveStart
-[AVTransitionController startInteractiveTransition:]
-[AVTransitionController animationEnded:]
v24@?0@"AVTransitionController"8@"AVDisplayLink"16
beginTime
v32@?0@"AVPictureInPictureSampleBufferDisplayLayerView"8@"CALayerHost"16@"AVKeyValueChange"24
contentDimensions
v32@?0@"AVPictureInPictureSampleBufferDisplayLayerView"8@16@"AVKeyValueChange"24
bounds
VideoQueue_CAContextIDDidChange
v32@?0@"AVPictureInPictureSampleBufferDisplayLayerView"8@16@"NSNotification"24
PIPStashBufferDuration
PIPStashPeakBitRate
AVPlayerControllerCurrentTimeJumpedNotification
AVPlayerControllerPlaybackDidEndNotification
AVPlayerControllerContentDimensionsChangedNotification
AVPlayerControllerSelectedMediaOptionDidChangeNotification
AVPlayerControllerDidSeekChapterNotification
AVPlayerControllerDidSeekChapterChapterKey
AVPlayerControllerDidBeginScanningNotification
AVPlayerControllerDidEndScanningNotification
AVPlayerControllerScanningDirectionKey
AVPlayerControllerPIPActivitySessionIdentifierDidChangeNotification
-[AVPlayerController init]
com.apple.avkit.seekQueue
com.apple.avkit.playerControllerAssetInspectionQueue
com.apple.avkit.playerControllerBackgroundQueue
-[AVPlayerController initWithPlayer:]
v32@?0@"AVPlayerController"8@16@"NSNotification"24
-[AVPlayerController startInspectionIfNeeded]_block_invoke
shouldRestoreRate
delegateCanResumeAfterInterruption
-[AVPlayerController startInspectionIfNeeded]_block_invoke_3
-[AVPlayerController dealloc]
v32@?0@"AVPlayerController"8@16@"AVKeyValueChange"24
isPiPAvailable
audioFormats
player.externalPlaybackActive
player.currentItem.seekableTimeRanges
player.currentItem.loadedTimeRanges
player.currentItem.playbackBufferEmpty
player.currentItem.playbackLikelyToKeepUp
player.rate
hasLiveStreamingContent
seekToTimeInternal
player.currentItem.hasEnabledAudio
player.currentItem.hasEnabledVideo
player.currentItem.presentationSize
player.currentItem.asset
readyToPlay
player.currentItem.duration
hasEnabledAudio
v16@?0@"AVPlayerController"8
hasEnabledVideo
currentVideoMediaSelectionOption
externalPlaybackType
-[AVPlayerController _queuePlayer]
player.status
player.currentItem.status
status
player.error
seekableTimeRanges
commonMetadata
q24@?0@"AVChapter"8@"AVChapter"16
availableChapterLocales
composable
hasProtectedContent
availableMetadataFormats
compatibleWithAirPlayVideo
-[AVPlayerController _observeValueForKeyPath:oldValue:newValue:]
com.apple.videos
-[AVPlayerController setRate:]_block_invoke
v16@?0d8
pictureInPictureInterrupted
-[AVPlayerController setPlaying:]
-[AVPlayerController play:]
-[AVPlayerController autoplay:]
-[AVPlayerController pauseForAllCoordinatedPlaybackParticipants:]
-[AVPlayerController togglePlayback:]
-[AVPlayerController beginPlaybackSuspension]
-[AVPlayerController endPlaybackSuspension]
-[AVPlayerController setVolume:]
player.volume
player.muted
-[AVPlayerController setCoordinatedPlaybackActive:]
presentationSize
timing
reversePlaybackEndTime
minTiming
player.currentItem.reversePlaybackEndTime
forwardPlaybackEndTime
contentDuration
maxTiming
player.currentItem.forwardPlaybackEndTime
player.currentItem.hasVideo
contentChapters
streaming
player.currentItem.liveUpdateInterval
player.currentItem.seekableTimeRangesLastModifiedTime
completelySeekable
com.apple.motion.notserializable
v16@?0@"NSTimer"8
player.timeControlStatus
touchBarRequiresLinearPlayback
-[AVPlayerController beginScrubbing]
-[AVPlayerController endScrubbing]
-[AVPlayerController suspendPlaybackCoordinatorWhileActivelySeekingIfNecessary]
-[AVPlayerController resumePlaybackCoordinatorIfSuspended]
-[AVPlayerController actuallySeekToTime]
player.currentItem.canPlayFastForward
-[AVPlayerController beginScanningForward:]
-[AVPlayerController endScanningForward:]
player.currentItem.canPlayFastReverse
-[AVPlayerController beginScanningBackward:]
-[AVPlayerController endScanningBackward:]
canSeek
atMaxTime
atMinTime
-[AVPlayerController seekOrStepByFrameCount:]
-[AVPlayerController updateMinMaxTiming]
player.allowsExternalPlayback
-[AVPlayerController _updateExternalPlaybackAirPlayDeviceLocalizedNameIfNeeded]
EXTERNAL_PLAYBACK_DEVICE_NAME_NIL
pictureInPictureSupported
hasVideo
playingOnExternalScreen
pipActivitySessionIdentifier
-[AVPlayerController beginReducingResourcesForPictureInPicturePlayerLayer:]
-[AVPlayerController endReducingResourcesForPictureInPicturePlayerLayer:]
AVPlayerControllerResourceReductionIdentifier
Reducing Resources for Picture in Picture
v16@?0@"BSSimpleAssertion"8
-[AVPlayerController _updateRateForScrubbingAndSeeking]
metadata
availableMediaCharacteristicsWithMediaSelectionOptions
maximumVideoResolution
tracks
assetCache
nominalFrameRate
enabled
languageCode
mediaType
mediaCharacteristics
availableTrackAssociationTypes
-[AVPlayerController(AVPlayerControllerExternalPlaybackSupportInternal) setHandlesAudioSessionInterruptions:]
handlesAudioSessionInterruptions
player.usesExternalPlaybackWhileExternalScreenIsActive
v32@?0{?=qiIq}8
automaticVideoGravity
com.apple.avkit.SharedPreferences
UnsupportedContentIndicator
AudioOnlyIndicator
-[AVPlayerViewControllerContentView setShowsAudioOnlyIndicator:]
showsAudioOnlyIndicator
{accessibilityID: %@ minSize: %@ isCollapsed: %@ isIncluded: %@ displayPriority: %ld}
v32@?0@"NSValue"8Q16^B24
v32@?0@"UIView<AVLayoutViewItem>"8Q16^B24
<%@: %p> - %@
q24@?0@"UIView<AVLayoutViewItem>"8@"UIView<AVLayoutViewItem>"16
-[AVPlaybackControlsView initWithFrame:styleSheet:]
Done
Full Screen
Zoom
Picture in Picture
ScreenModeControls
prominentPlayButton
volumeControls
v32@?0@"AVPlaybackControlsView"8@16@"NSNotification"24
-[AVPlaybackControlsView dealloc]
-[AVPlaybackControlsView setFullScreen:]
v12@?0B8
v16@?0q8
-[AVPlaybackControlsView updateDisplayControlsVisibilityIncludedButtons:]
self.prefersFullScreenButtonIncluded
self.prefersDoneButtonIncluded
self.prefersVideoGravityButtonIncluded
self.prefersPiPButtonIncluded
AVKitAirResponse/1
response-status
response-description
%@ status %ld; "%@"
description
-[AVAirMessageResponse bodyData]
+[AVAirMessageResponse messageWithVersion:headers:bodyData:]
com.apple.
com.apple.avkit.localizedStringBundleQueue
position
bounds.origin
-[AVSampleBufferDisplayLayerPlayerController invalidatePlaybackState]
v8@?0
paused
-[AVSampleBufferDisplayLayerPlayerController seekByTimeInterval:toleranceBefore:toleranceAfter:]
pictureInPictureAvailable
enqueuedBufferDimensions
playbackState.timelineRate
playbackState
playbackState.timelineDuration
contentDurationWithinEndTimes
contentTimeRange
v32@?0@"AVSampleBufferDisplayLayerPlayerController"8@16@"AVKeyValueChange"24
v32@?0@"AVSampleBufferDisplayLayerPlayerController"8@16@"NSNotification"24
frame
transform
affineTransform
AVSBDLPlayerControllerKey
MEDIA_SELECTION_OPTION_OFF_TITLE
MEDIA_SELECTION_OPTION_AUTO_TITLE
%@-%@-%@
Only access this property on the main queue!
%s Setting: %ld
_sceneActivationState == %ld for start pictureinpicture
%s %s %s
%s %@ --> %@
%s %d
%s canStartAutomaticallyWhenEnteringBackground: %s isFullScreen - %s alwaysStartsAutomaticallyWhenEnteringBackground - %s allowsPictureInPicturePlayback - %s playerController.isPlaying - %s inSharePlaySession - %s status != prohibited - %s
%s backgroundPlaybackPolicy %{public}ld
Interruption notification: AVPlayerPlaybackWasInterruptedNotification player.rate: %.1f userinfo: %@
%s error: %@
%s pictureInPictureProxy: %@
%s pictureInPictureProxy: %@ reason: %ld
%s playbackCommand: %ld
Error: Unrecognized PGPlaybackAction - %ld
%s starting for playerController %{public}@
%s failed; status = %d
%s received message %{public}@
%s new channel %@; activeChannels has %@
%s %{public}@
%s unable to receive message : %{public}@
%s responding with result %d
%s unexpectedly received a response -- expected a message only
%s I just received something, I know not what
%s Unexpectedly received object from inactive channel (%@)
%s Removing channel from active list (%@)
%s Sending external metadata (%ld items)
%s Result of sending external metadata: %ld [%{public}@]
%s Sending all available information for this player item.
*** %s must be called on main thread. ***
%s AudioMediaSelectionOptions: %{public}@
%s LegibleMediaSelectionOptions: %{public}@
*** %s Received a forced-only media selection (%{public}@) when display type was NOT forced-only (was %ld). mediaSelectionCriteriaCanBeAppliedAutomaticallyToMediaSelectionGroup: %d. ***
*** %s Received a non-forced-only media selection (%{public}@) from automatic media selection when display type was forced-only. ***
%s Enabling automatic display type because receiver changed captions to forced-only.
%s Persisting preferences for remote legible option change: %{public}@ -> %{public}@
%s Selected legible option: %{public}@ 
%s Selected audible option: %{public}@ 
%s Changing MACaptionAppearanceDisplayType: %ld -> %ld
%s mediaOption: %{public}@ mediaCharacteristic: %{public}@
%s Skipped setting identical option.
%s subclass: %@
%s %d %p
%s Did select media selection option: %@
We expect all menu elements in this menu to be UIActions.
Cannot mute when unmuting.
Cannot unmute when muting.
Error: Internal inconsistency - playback rate menu item count does not equal the rate collection count. 
Recognized pinch gesture without enabling pinch to present or pinch to dismiss.
Pinch to present and pinch to dismiss cannot be simultaneously enabled.
Recognized pan gesture without enabling pan to dismiss.
Began tracking when already tracking.
Cannot finish when not tracking.
Cannot cancel when not tracking.
Cannot continue if still waiting.
Cannot reset when not tracking.
%s %@
%s %@ %@
%s %@ %ld
%s AVExternalPlaybackMonitorAirPlayVideoActiveDidChangeNotification received; note = %{public}@
%s kMRDeviceInfoDidChangeNotification received; note = %{public}@
Beginning discovery for %{public}@...
Stopping discovery for %{public}@
Found service for the current AirPlay device! Posting AVBonjourServiceClientDidResolveAirPlayDeviceNetServiceNotification..
delegate has not been set!
%s %p getting device info...
%s getActiveOrigin: %@, %@
%s have [active] device info. Getting more information...
[active] AppleTV pairedDeviceRef = %@
[active] first grouped device is not AppleTV (%@)
[active] grouped devices count != 1
[active] no grouped devices; activeDevice = %@
%s [active] done.
%s have device info and device. Getting more information...
AppleTV pairedDeviceRef = %@
_updateAirPlayPairedDeviceAsync: first grouped device is not AppleTV (%@)
_updateAirPlayPairedDeviceAsync: grouped devices count != 1
_updateAirPlayPairedDeviceAsync: no grouped devices: localDevice = %@
_updateAirPlayPairedDeviceAsync failed; error = %{public}@
%s done.
%s current device UID = %{public}@; service identifier = %{public}@
%s %@ ===> %@
%s failed to get the input/output streams!
didNotSearch (errorDict = %{public}@)
didFindService %@
didRemoveService %@
willResolve %@
didResolveAddress %@
%s localAirPlayReceiverPairingIdentity = %@
Found netService for the current AirPlay device; posting .DidResolveAirPlayDeviceNetServiceNotification..
didNotResolve %@
didNotResolve %@ due to timeout!
didStop resolution request %@
didUpdateTXTRecordData
%s playerController: %@
Update now playing info if needed: %d
Pause command
Stop command
Play command
Toggle play pause command
Next track command
Can not seek chapter forward; skipping forward %.2f seconds instead.
Previous track command
Can not seek chapter backward; skipping backward %.2f seconds instead.
Skip forward command
Skip backward command
Begin fast forward command
End fast forward command
Begin rewind command
End rewind command
Change playback rate command
Seek to playback position command
Enable language option command
Disable language option command
Remote Command Status: %ld
You must call -[AVObservationController stopAllObservation] before destroying it, perhaps in its owner's dealloc. %@
%s %@ foreground: %d haswindows: %d
Attempted to connect with a screen that is not available.
%s Created second window %p on %@
%s %@ -> %@
%s shutting down streams %p and %p
%s an error prevented bytes from being read! (%{public}@)
%s the input data disappeared! the input stream has closed.
%s the input data disappeared! Are multiple clients trying to read from this stream? (status = %d)
%s inputStream hasBytesAvailable
%s ... but the data couldn't be read
%s message data failed to deserialize
%s unexpected message/response received; delegate not expecting messages
%s %{public}@: ErrorOccurred
%s %{public}@: OpenCompleted
%s %{public}@: EndEncountered
%s %{public}@: HasSpaceAvailable
%s %{public}@: HasBytesAvailable
%s Starting event thread..
%s Ending event thread..
%s bye bye
%s response never received
%s wrote %ld bytes
%s write error occurred
%s write error: stream closed
%s writing %ld bytes...
%s failed to transform message object (%@)
%s sending %ld bytes...
%s ...succeeded, now waiting for/reading the response...
%s failed to transform response object (%@)
%s cannot send message; we don't have a channel to the AirPlay receiver (if there is one).
%s cannot send message yet; please wait for output stream to finish opening!
%s telling channel to sendObject (%@)
%s sendObject completed with status = %d; response message: %@
%s channel = %@; delegate = %@
%s the channel.delegate is already set
%s (call unexpected! message will be dropped)
%@: It is an error to set the target volume without calling -[AVVolumeController begin/endChangingVolume].
%s %@ volume HUD for windowScene with ID: %@
%s Setting volume on AVSystemController to: %.2f for category: %@
%s Attempted to set SystemVolumeHUD visibility before setting Client Identifier or Scene Identifier.
%s %@ layoutClass: %ld
%s New playback rate collection set: %@
%s %f
%s Attempt to load view when view was already loaded.
Expected only one context for AVPlayerViewControllerBehaviorContext. This is fine, but probably means AVPlayerViewControllerBehaviorContext needs to be refactored
Already performed initial setup.
%s Unsupported custom menu item. Skipping %@. UIMenuElements must have both a title and an image.
%s Unsupported subclass of UIMenuElement. Only UIAction and UIMenu types are supported. Skipping: %@.
The player controller should have content before calling %@.
It's an error to repeatedly add observers.
Did receive stop command notification.
%s .status: %ld .hasEnabledVideo: %d .hasEnabledAudio: %d
%s <%{public}@ %p> %@ respond to %{public}@
Scrub gesture will begin.
Scrub gesture will transition to momentum phase with remaining velocity %f.
Scrub gesture did end.
Unexpected value for the transition controller's presentedViewController
Detached fullscreen is only available on Mac Catalyst.
Target view should be our own view when the full screen view controller is being transitioned!
%s Disabling legible display for picture in picture player layer
%s pending restore user interface for presentation context dismissal
%s New playback rate selected: %@
setDefaultPlaybackRate called during linear playback. Updating default linear playback rate to %f
%s %ld
%s Did not get a valid video composition.
%@ did not receive a view from its delegate, %@.
value for '%{public}@' is neither a string nor convertible to one
%s isAirMessageEnabled %@; global %@; app %@; environ %{public}@
%s incoming message type %d is unrecognized!
%s removing unrecognized key '%{public}@'
%s failed to serialize %{public}@ to JSON (%{public}@)
%s failed to decompress data; algorithm name '%{public}@' is not recognized
%s failed to decompress data (%{public}@ algorithm): %{public}@
%s This code has not been updated to handle algorithm %ld!
%s failed to compress data (%ld/%{public}@): %{public}@
%s error: json deserialization failed
Don't initialize this unless AVSecondScreenDebugHUDEnabled()!
%s Enabling autorotation for window: %p
%s Disabling autorotation for window: %p
AVSeymourBehaviorContext is no longer around, playerViewController will not be dismissed.
%s value does not implement AVMessageTransformerProtocol
%s value not represented by NSData (%@)
%s Playback coordination dismissal delegate completed but cancelled. Not dismissing.
%s Playback coordination dismissal delegate completed. Dismissing.
%s Playback coordination dismissal delegate not implemented. Dismissing.
%s Not in Expanse session (AVPlayer.backgroundPIPAuthorizationToken not set). Dismissing.
%s ** WARNING: the value of this metadata item %@ has not yet been loaded; we're about to force it
%s ** AVMetadataItem representation has no identifier!
%s The value passed for '%{public}@' is raw data, but we do not expect it. Discarding.
%s Metadata values should not be arrays/dictionaries. Lookin' at you, '%@'.
Attempt to transition while adjusting bounds.
Invalid state transition from %@ to %@.
This is where the problem is.
Invalid state transition
Instance %@ attempted content transition while one was already active. Ignoring. %@
%s %@ Offset: %@ ActiveOrigin: %@ TransitioningOrigin: %@
%s old: %ld --> new: %ld
Invalid track type for frame stepping.
Invalid input base frame time.
%s There's a loadedTimeRange that doesn't respond to -CMTimeRangeValue (<%{public}@ %p>)
setMapDate:toTime: expects startDate to be valid. Did the caller want setMapTime:toDate: instead?
setMapDate:toTime: is changing _startTime to NAN!
%s isLongFormVideoApp = %i
%s Current routing session: %@, routingSessionManager.prefersLikelyDestinationsOverCurrentRoutingSession: %i
%s Using current routing session. Calling client completion handler with playbackState: %@
%s Not using current routing session. AVRoutingSessionManager has %lu likely external destinations: %@
%s Medium confidence picker dismissed because MPMediaControlsDismissalReasonUserCancelled.
%s Medium confidence picker dismissed because MPMediaControlsDismissalReasonUnknown.
%s Showing medium confidence picker.
%s No likely external destinations. Calling client completion handler with playback state: %@
%s Not a long-form video app. Calling client completion handler with playback state: %@
%s Calling client completion handler with playbackState: %@
%s  newStatus: %ld
%s current status: %ld -> proposed status: %ld
%s isPictureInPictureProhibited: %s {
isContentSourceSupported: %s
isPictureInPicturePossible: %s
isSystemPictureInPicturePossible: %s
allowsPictureInPicturePlayback: %s
isPlayingOnSecondScreen: %s
sourceIsVisible: %s
contentDimensions: (%.01f, %.01f)
isPictureInPictureSupported: %s
Error: Internal inconsistency. Selected rate was not found in playback rate collection.
%s Setting mica color: (R: %.2f G: %.2f B: %.2f Alpha: %.2f) and state: %@.
%@ should be called from a background thread
Shouldn't already have a contentZooming view.
Warning: Attempted to start content transition on a %@, which was already transitioning. Ignoring.
Already had a content transition view, which is unexpected.
Content view unexpectedly had incomingContentView.
contentTransitioningPlayer should never be nil here.
Unexpected
Error: -[UIImage avkit_imageFromString:font:completion:] called off of the main thread. The AVMobileTextImageCache should only be accessed on the main thread.
Rendering image with text: "%@"
Unexpectedly missing URL for CAML file. %@
%@: %@ -> %@
%s JSON deserialization failed: %{public}@
%s failed to decompress data (%{public}@)
%s no class registered for version '%{public}@'
%s class %{public}@ does not implement messageWithParts:
Do not call this method when showing the content info panel.
%s Refresh: %.f HDRMode: %@ overscanCompensation: %@
%s This feature requires a UIWindowScene.
*** AVPlayerViewController cannot update status bar visibility while hosted in view service. ***
%s Cannot observe keypath %@ %@
%s shouldShowPlaybackControls: %d {
wantsPlaybackControlsVisible: %d
isUserInteracting: %d
isPictureInPictureActive: %d
playingOnExternalScreen: %d
audioOnlyContent: %d
isPopoverBeingPresented: %d
showsLoadingIndicator: %d
canHidePlaybackControls: %d
%s duration: %f
%s shouldShowPlaybackControls: %d {
showImmediately: %d
isHidingItemsForTransition: %d}
%s delay: %f
Called %@ before creating playback controls view!
Cannot present view controller without a view controller from which to present.
Tried to dismiss a view controller without a presenting view controller. This is hard.
Unexpected gesture kind.
Unexpected transitioning state.
%@ called with an invalid state %ld
%@: Unexpected transition state.
Expected a source layer.
Expected a player controller.
%s player: %p
Interruption notification: AVAudioSessionInterruptionNotification player.rate: %.1f userinfo: %@
AVAudioSessionInterruptionTypeEnded: %f
%s have AirPlay to AppleTV for %{public}@
%s have AirPlay to AppleTV, but externalPlaybackType = %ld
%s queuePlayer: %d
PlayerItemDidChange
New playerItem: <%{public}@: %p>
New asset: <%{public}@: %p>
SeekableTimeRanges changed {%f, %f} -> {%f, %f}.
liveStreamEventModePossible: %d
Time control status = %ld
Playback likely to keep up changed to: %@
%s setPlaying:YES because AVPlayerControllerAutoplayEnabled
isPlaybackBufferEmpty: %d
Rate changed to: %f
Ignoring rate change.
Ignored single rate change to: %f. Keeping current rate: %f
Failed to handle %@ %@
Calling playImmediatelyAtRate: %f
Could not play immediately, setting a play immediately retry block.
%s immediately %.1f on %p
%s %.1f on %p
Retrying play immediately.
Can play immediately: %d
%s setPlaying:YES
%s setPlaying:YES (AVPlayerControllerAutoplayEnabled)
%s notifyCoordinatedPlayback of pause: %@
%s coordinatedPlaybackActive set to %d
%s Starting coordination suspension.
%s Ending coordination suspension.
%s time: %f toleranceBefore: %f toleranceAfter: %f
Seek completed: %s
%s isScanningForward: %d    isScanningBackward: %d
%s isScanningForward: %d
%s isScanningForward: %d isScanningBackward: %d
%s isScanningBackward: %d
%s stepByCount: %ld
%s sampleBasedSeekTarget: %f
Modifying seekableTimeRange by: %f
segmentDuration: %f
minTimingNeedsUpdate: %d, new minTiming with minTime: %f, rate: %f, old minTime: %f, delta: %f
maxTimingNeedsUpdate: %d, new maxTiming with maxTime: %f old maxTime: %f, delta: %f
%s Using output context %@
Resource Reduction assertion was invalidated.
Calls to -[AVPlayerController stopUsingNetworkResourcesForLiveStreamingWhilePaused] must be counterbalanced with calls to -[AVPlayerController startUsingNetworkResourcesForLiveStreamingWhilePaused].
Never load the turboModePlaybackControlsPlaceholderView when the playbackControlsView is already loaded!
%@ - Computed more frames than we have arranged subviews. Number of arranged subviews: %ld -- current frame index: %ld
Has control that can only overflow, but no layout views can substitute others.
%@ %d
%@ called when initial layout not needed already set.
%s failed to serialize response body: %{public}@
%s response received: %{public}@
%s response version seems incorrect; have '%{public}@' but expecting '%{public}@'
%s response is invalid: the %{public}@ header is missing
Expect this to only be set once.
%s  interval: %f shouldResumePlayback: %@
Done seeking.
Resuming playback after a seek.
softlink:r:path:/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
softlink:r:path:/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
softlink:r:path:/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
AVView
AVAppStorePlayerView
AVAppStorePlayerLayerView
AVRouteDetectorCoordinator
AVContentOverlayView
AVAdditions
AVPictureInPicturePlayerLayerView
_AVSimplePlayerLayerView
AVPictureInPicturePlatformAdapter
AVPictureInPictureViewControllerDelegate
NSObject
PGPictureInPictureProxyDelegate
AVPictureInPictureControlsStyleAppearance
AVPictureInPicturePrerollAttributes
__AVPlayerLayerView
AVScrubberVelocity
AVScrubber
UIScrollViewDelegate
AVExternalGestureRecognizerPreventing
AVPlaybackControlsViewItem
AVLayoutViewItem
AVAirMessageNotificationCenter
AVBonjourServiceDelegate
AVAirTransportDelegate
AVChapter
NSCopying
AVPlayerItemAVKitData
AVKitAdditionsPrivate
AVPlaybackRouteSelecting_Private
AVPlaybackRouteSelecting
AVMediaSelection
AVPlayerController
AVScrollViewObserver
_UIScrollViewScrollObserver
AVVolumeSlider
AVNewsWidgetPlayerBehavior
AVBehaviorInternal
AVBehavior
AVPictureInPictureCALayerHostView
AVPictureInPictureSampleBufferDisplayLayerHostView
AVMediaSelectionMenuController
AVUserInteractionObserverGestureRecognizer
AVPlayerControllerVolumeAnimator
AVHomeIPCameraBehavior
AVHomeIPCameraActionButtonHandling
AVPictureInPictureContentSourceExtensions
AVPictureInPictureContentSource
AVMobilePlaybackRateMenuController
AVInteractiveTransitionGestureTracker
UIGestureRecognizerDelegate
AVTransitionDriver
UIInteraction
AVSecondScreenController
AVPresentationContext
AVBonjourServiceClient
NSNetServiceBrowserDelegate
NSNetServiceDelegate
AVNowPlayingInfoController
AVStatusBarBackgroundGradientView
AVStatusBarBackgroundGradientViewSubview
AVObservationController
AVProxyKVOObserver
AVKeyValueChange
AVMusicAppBehavior
AVPlayerItem_AVMusicAppBehaviorContextAdditions
AVMusicAppBehaviorContext
AVBehaviorContextInternal
AVBehaviorContext
AVPlayerViewControllerBehaviorContext
AVMetricsCollectionBehaviorContext
AVSecondScreen
AVStringPair
AVAirTransportStreams
NSStreamDelegate
AVAirTransport
StreamBased
AVAirMessageDispatcher
AVBonjourServiceClientDelegate
AVPictureInPictureVideoCallViewController
AVVideoCallPlayerController
AVSeymourBehavior
AVLoadingButtonView
AVVolumeHUDAssertion
MPVolumeDisplaying
AVSystemVolumeController
AVVolumeHUDAssertionDelegate
AVVolumeController
AVZoomingBehavior
AVPlayerViewControllerCustomControlsViewLayoutMarginsGuideProvidingView
AVPlayerViewControllerCustomControlsView
AVPictureInPicturePlaybackState
AVPlaybackControlsRoutePickerView
AVStyleSheet
AVEditBehavior
AVPlayerViewController
AVPictureInPictureControllerDelegate
UIPopoverPresentationControllerDelegate
UIAdaptivePresentationControllerDelegate
AVFullScreenViewControllerDelegate
AVTransitionControllerDelegate
AVContentOverlayViewDelegate
AVPlaybackRateCollectionDelegate
AVPlayerControllerDelegate
AVPlaybackControlsViewVisibilityDelegate
AVPlayerViewController_AdLibOnly
AVPlayerViewController_WebKitOnly
AVPlayerViewController_AppStoreOnly
AVPlayerViewControllerInternal
AVPlaybackControlsViewControllerActions
AVPlayerViewControllerTransitioningInternal
DeprecationsAndToBeRemoved
AVPlayerItem_AVEditBehaviorContextAdditions
AVEditBehaviorContext
AVEditViewDataSource
AVEditViewDelegate
AVFullScreenViewController
AVControlOverflowButton
AVExternalGestureRecognizerPreventer
AVPlaybackRate
AVDeprecated
AVAirMessageExtensions
AVAirMessage
AVPictureInPictureViewController
PGPictureInPictureViewController
PGPictureInPictureViewControllerSupport
AVExternalPlaybackIndicatorView
AVValueTiming
NSSecureCoding
NSCoding
NSMutableCopying
AVMutableValueTiming
AVValueTimingCreation
AVExtendedValueTiming
AVExtendedMutableValueTiming
AVConcreteValueTiming
AVConcreteMutableValueTiming
AVSecondScreenDebugAssistant
AVPresentationController
AVHomeIPCameraBehaviorContext
AVScrubbing
AVSeymourBehaviorContext
AVVolumeControlsController
AVPlaybackContentZoomingView
AVPlaybackContentContainer
AVDataValueTransformer
AVAirTransportTransformationProtocol
AVAirMessageTransformer
AVDismissalExpanseCoordinator
AVEditView
UIMovieScrubberDataSource
UIMovieScrubberDelegate
AVAirSerialization
AVAirSerializationProtocol
AVPlaybackContentTransitioningView
AVMediaSelectionViewController
AVMediaSelectionTableViewController
AVTableViewCell
AVPictureInPictureController
AVPictureInPicturePlatformAdapterDelegate
AVPictureInPictureControllerContentSource
ToBeDeprecated
AVSampleBufferDisplayLayerSupport
VideoCallSupport
AVControlItem
AVLabel
AVPlayerView
AVTimeRange
AVTimeRangeCollection
AVExternalPlaybackController
AVTimecode
AVTimecodeController
Common
AVPlaybackRateCollection
AVCABackdropLayerView
AVCABackdropLayer
AVRoutePickerViewInternalDelegate
AVRoutePickerViewDelegate
AVRoutePickerView
AVPictureInPictureIndicatorLayer
AVPictureInPictureIndicatorSublayer
AVBackgroundView
AVVolumeButtonControl
AVPlayerControllerTimeResolver
TimeObserverAdditions
AVPrioritizedSize
AVTouchIgnoringView
AVZoomingBehaviorContext
AVNewsWidgetPlayerBehaviorContext
AVPlaybackContentTransitioningViewDelegate
AVNewsWidgetPlayerLegacyBehavior
AVPlayerViewController_NewsOnly
AVTransition
AVCustomStackLayout
AVImage
AVMobileImageConfiguration
AVMicaPackage
CAMLParserDelegate
CAStateControllerDelegate
AVTurboModePlaybackControlsPlaceholderView
AVPlayerViewControllerAnimationCoordinator
AVTimer
AVSecondScreenConnection
AVSecondScreenContentViewConnection
AVPlayerVolumeController
AVPresentationContainerView
AVPresentationContainerViewAppearanceProxy
AVPresentationContainerViewLayer
AVMessageParser
AVAirMessages
AVAirMessageParts
AVAirTransportReverseTransformationResultProtocol
AVVolumeControlsContentView
AVPlaybackContentContainerView
AVEmbeddedAdditions
AVTransportControlsView
AVScrubberDelegate
AVVolumeControlsControllerLayoutDelegate
AVDefaultBehaviorContext
AVBehaviorStorage
AVBehaviorSupport
AVPresentationConfiguration
AVSecondScreenAdditions
AVPresentationContextTransition
AVHomeIPCameraPlayerController
AVPlaybackControlsController
AVTransportControlsViewDelegate
AVVolumeControlsControllerDelegate
AVMediaSelectionMenuDelegate
AVControlOverflowButtonDelegate
AVPlayerViewControllerContentViewDelegate
AVSecondScreenViewController
AVSecondScreenPlayerLayerView
AVTransitionController
UIViewControllerAnimatedTransitioning
UIViewControllerInteractiveTransitioning
AVTransitionDelegate
AVTransitionDriverDelegate
UIViewControllerTransitioningDelegate
AVPictureInPictureSampleBufferDisplayLayerView
AVSBDLPIPAdditions
AVPlayerControllerMercurySupportInternal
AVPlayerControllerExternalPlaybackSupportInternal
AVPlayerControllerTimecodeSupportInternal
AVPlayerControllerTimecodeSupport
AVBackdropView
AVSharedPreferencesProtocol
AVPlayerViewControllerContentView
AVScrollViewObserverContentView
AVButton
!C$A
AVInternetDateFormatter
AVLayoutItemAttributes
AVHomeLoadingButtonControlItem
AVDisplayLink
AVLayoutView
AVPlaybackControlsView
AVAirMessageResponse
AVMessageTransformerProtocol
_AVBundle
AVPictureInPictureIndicatorView
NSLayoutConstraint_AVKitAdditions
AVKitLayoutItem
NSLayoutAnchor_AVKitAdditions
NSLayoutDimension_AVKitAdditions
AVLayoutViewRowHead
AVSampleBufferDisplayLayerPlaybackDelegateAdapter
AVPictureInPictureSampleBufferPlaybackDelegate
AVSampleBufferDisplayLayerPlayerController
AVPictureInPictureSuppport
EmbeddedAdditions
setHidden:
avkit_needsUpdateBackdropCaptureViewHidden
hitTest:withEvent:
ignoresTouches
isEqual:
setIgnoresTouches:
_ignoresTouches
TB,N,V_ignoresTouches
initWithFrame:
buttonWithAccessibilityIdentifier:
setClampsHitRectInsetsWhenContainedInScrollableView:
setImageName:
traitCollection
preferredFontForTextStyle:compatibleWithTraitCollection:
setFullScreenFont:
_prominentPlayButtonTouchUpInside:
addTarget:action:forControlEvents:
bounds
setShapeStyle:
mainScreen
initWithTraitCollection:shouldUseCompactFullScreenSize:
contentOverlayView
addSubview:
prominentPlayButtonLayoutView
observationController
stopAllObservation
dealloc
playerViewController
setShowsPlaybackControls:
setUpdatesNowPlayingInfoCenter:
setShowsMinimalPlaybackControlsWhenEmbeddedInline:
setCanPausePlaybackWhenExitingFullScreen:
setAllowsEnteringFullScreen:
setVideoGravity:
setPreferredUnobscuredArea:
setDelegate:
setPlayer:
player
rate
playerLayerView
initWithOwner:
_makeActualVideoViewWithPlayerIfNeeded:
startObserving:keyPath:observationHandler:
videoGravityForLayoutClassDictionary
numberWithUnsignedInteger:
setObject:forKeyedSubscript:
setVideoGravity:forLayoutClass:
copy
setPlayButtonHandlerForLazyPlayerLoading:
setClipsToBounds:
view
_setContinuousCornerRadius:
layoutSubviews
superview
setFrame:
layoutMarginsGuide
layoutFrame
styleSheet
defaultItemInlineSize
maximumProminentPlayButtonDimension
minimumProminentPlayButtonDimension
prominentPlayButton
setExtrinsicContentSize:
_makePlayerLayerViewWithPlayer:
insertSubview:atIndex:
_makePlayerViewControllerWithPlayer:
setPlayerLayerView:
layer
initWithNibName:bundle:
setPlayerViewController:
showsPlaybackControls
updatesNowPlayingInfoCenter
showsMinimalPlaybackControlsWhenEmbeddedInline
canPausePlaybackWhenExitingFullScreen
allowsEnteringFullScreen
videoGravity
playerViewControllerDelegate
playButtonHandlerForLazyPlayerLoading
clipsToBounds
_continuousCornerRadius
maskedCorners
setMaskedCorners:
preferredUnobscuredArea
allKeys
countByEnumeratingWithState:objects:count:
unsignedIntegerValue
objectForKeyedSubscript:
setTranslatesAutoresizingMaskIntoConstraints:
avkit_constraintsFromCenterAndDimensionAnchorsToCenterAndDimensionAnchorsOfItem:
activateConstraints:
setAlpha:
removeFromSuperview
setProminentPlayButtonLayoutView:
setProminentPlayButton:
animateWithDuration:delay:options:animations:completion:
setPlayerViewControllerDelegate:
setStyleSheet:
setVideoGravityForLayoutClassDictionary:
.cxx_destruct
_showsPlaybackControls
_updatesNowPlayingInfoCenter
_showsMinimalPlaybackControlsWhenEmbeddedInline
_canPausePlaybackWhenExitingFullScreen
_allowsEnteringFullScreen
_videoGravity
_contentOverlayView
_player
_playButtonHandlerForLazyPlayerLoading
_preferredUnobscuredArea
_playerViewControllerDelegate
_playerViewController
_prominentPlayButton
_prominentPlayButtonLayoutView
_styleSheet
_playerLayerView
_videoGravityForLayoutClassDictionary
_observationController
T@"AVButton",&,N,V_prominentPlayButton
T@"AVLayoutView",&,N,V_prominentPlayButtonLayoutView
T@"AVStyleSheet",&,N,V_styleSheet
T@"AVPlayerViewController",&,N,V_playerViewController
T@"AVAppStorePlayerLayerView",&,N,V_playerLayerView
T@"NSMutableDictionary",&,N,V_videoGravityForLayoutClassDictionary
T@"AVObservationController",R,N,V_observationController
TB,N,V_showsPlaybackControls
TB,N,V_updatesNowPlayingInfoCenter
TB,N,V_showsMinimalPlaybackControlsWhenEmbeddedInline
TB,N,V_canPausePlaybackWhenExitingFullScreen
TB,N,V_allowsEnteringFullScreen
T@"NSString",C,N,V_videoGravity
T@"UIView",R,N,V_contentOverlayView
T@"AVPlayer",&,N,V_player
T@?,C,N,V_playButtonHandlerForLazyPlayerLoading
Tq,N,V_preferredUnobscuredArea
T@"<AVPlayerViewControllerDelegate>",W,N,V_playerViewControllerDelegate
layerClass
T@"AVPlayerLayer",R,D,N
defaultCenter
updateMultipleRoutesDetected
addObserverForName:object:queue:usingBlock:
routeDetectorCoordinatorQueue
sharedSystemRouteDetector
setRouteDetectionEnabled:
multipleRoutesDetected
setMultipleRoutesDetected:
isMainThread
postNotificationName:object:
beginDetectingRoutes
endDetectingRoutes
isRouteDetectionEnabled
_routeDetectionEnabled
routeDetectionEnabled
TB,N,GisRouteDetectionEnabled,V_routeDetectionEnabled
TB,R,N
didAddSubview:
delegate
contentOverlayViewDidAddOrRemoveSubview:
_didRemoveSubview:
_delegate
T@"<AVContentOverlayViewDelegate>",W,N,V_delegate
_isHostedInAnotherProcess
_windowInterfaceOrientation
avkit_canAttemptRotation
currentDevice
orientation
autorotates
avkit_canAttemptSecondWindowForRotability
_windowOwnsInterfaceOrientation
_windowControlsStatusBarOrientation
_shouldControlAutorotation
avkit_isHostedInAnotherProcess
_shouldAutorotateToInterfaceOrientation:
windowScene
_setRotatableViewOrientation:duration:
avkit_disableTouchCancellation:forRotationActions:
avkit_preferredInterfaceOrientationFromDeviceOrientation
avkit_supportsAutorotationForInterfaceOrientationMask:
avkit_ensureOrientation:disableTouchCancellation:
userInterfaceIdiom
rangeOfString:
substringToIndex:
substringFromIndex:
stringWithFormat:
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
playerLayer
willChangeValueForKey:
constraintsWithVisualFormat:options:metrics:views:
didChangeValueForKey:
attachPlayerLayer
detachPlayerLayer
_simplePlayerLayerView
T@"AVPlayerLayer",R,N
setWithObjects:
keyPathsForValuesAffectingPlayerLayer
isPictureInPictureSupported
preferredFontForTextStyle:
pointSize
configurationWithPointSize:weight:
init
avkit_pictureInPictureViewController
initWithPictureInPicturePlayerLayerView:
arrayWithObjects:count:
_updateStatus
_createProxyIfNeeded
startObserving:keyPaths:observationHandler:
_removeSecondScreenConnection
invalidate
source
avkit_window
activationState
_sceneActivationState
_updateStatusUsingProposedStatus:
pegasusProxy
startPictureInPicture
pictureInPicturePlatformAdapter:failedToStartError:
pictureInPicturePlatformAdapterPrepareToStopForDismissal:
updateLayoutDependentBehaviors
stopPictureInPictureAndRestoreUserInterface:
isPictureInPicturePossible
isPictureInPictureSuspended
isPictureInPictureActive
_updateProxyPlaybackState
pegasusAttributes
prerollAttributes
_updatePictureInPictureShouldStartWhenEnteringBackground
setContentSourceAwaitingInvalidation:
setContentSourceAwaitingSetup:
contentSourceAwaitingSetup
contentSourceAwaitingInvalidation
status
pictureInPictureViewController
setContentViewController:
contentViewController
avkit_stopRoutingVideoToPictureInPictureViewController:
avkit_startRoutingVideoToPictureInPictureViewController:
isEqualToString:
setClientSessionIdentifier:
avkit_videoRectInWindow
screen
fixedCoordinateSpace
convertRect:toCoordinateSpace:
videoRectInScreen
setVideoRectInScreen:
viewFrameForInteractiveTransitionAnimationWhenEnteringBackgroundDidChangeForViewController
_largestInscribedRectInBoundingPathWithCenter:aspectRatio:
activitySessionIdentifier
playerController
isPlaying
canStartAutomaticallyWhenEnteringBackground
alwaysStartsAutomaticallyWhenEnteringBackground
allowsPictureInPicturePlayback
setPictureInPictureShouldStartWhenEnteringBackground:
controlsStyle
_proxyControlsStyle
setControlsStyle:
seekToTime
isSeeking
currentTimeWithinEndTimes
contentDurationWithinEndTimes
observedTimeControlStatus
isScrubbingOrSeeking
rateWhenScrubbingOrSeekingBegan
hasLiveStreamingContent
setContentType:
requiresLinearPlayback
hasSeekableLiveStreamingContent
setRequiresLinearPlayback:
setContentDuration:
setPlaybackRate:elapsedTime:timeControlStatus:
isMuted
setMuted:
setPrerollAttributes:
isMicrophoneEnabled
isRoutingVideoToHostedWindow
setRoutingVideoToHostedWindow:
backgroundPlaybackPolicy
setBackgroundAudioPolicy:
updatePlaybackStateUsingBlock:
initWithControlsStyle:viewController:
_startObservation
value
CGSizeValue
setPreferredContentSize:
preferredContentSizeDidChangeForViewController
startObserving:keyPath:includeInitialValue:observationHandler:
boolValue
_startObservingForPlaybackStateUpdates
managesWiredSecondScreenPlayback
sharedInstance
addConnectionForPlayer:playerLayer:
setSecondScreenConnection:
object
startObservingNotificationForName:object:notificationCenter:observationHandler:
userInfo
setInterruptedForAudioSession:
startObserving:keyPaths:includeInitialValue:observationHandler:
setSeeking:
isScrubbing
setScrubbing:
timeControlStatus
integerValue
setObservedTimeControlStatus:
setSourceWindowWhenPictureInPictureStarted:
pictureInPictureWasStartedWhenEnteringBackground
pictureInPicturePlatformAdapter:prepareToStopForRestoringUserInterface:
avkit_willBeginStoppingPictureInPictureForPictureInPictureViewController:
pictureInPicturePlatformAdapterEndReducingResourcesForEligibleOffScreenState
pictureInPicturePlatformAdapter:handlePlaybackCommand:
interfaceOrientation
pictureInPicturePlatformAdapterBeginReducingResourcesForEligibleOffScreenState
playbackAction
associatedDoubleValue
seekByTimeInterval:toleranceBefore:toleranceAfter:
gotoEndOfSeekableRanges:
associatedBoolValue
setWasPlayingWhenSuspended:
canPausePlaybackWhenExitingPictureInPicture
pauseForAllCoordinatedPlaybackParticipants:
setPlaying:
wasPlayingWhenSuspended
isInterruptedForAudioSession
isPictureInPictureInterrupted
play:
coordinateDismissalWithExpanseSessionForPlayer:cancellable:dismissalBlock:
testingAction
_setRoutingVideoToHostedWindow:pictureInPictureViewController:source:
setRateWhenScrubbingOrSeekingBegan:
setScrubbingOrSeeking:
secondScreenConnection
removeConnection:
sourceWindowWhenPictureInPictureStarted
startPictureInPictureButtonImageName
stopPictureInPictureButtonImageName
imageSymbolConfiguration
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
pictureInPictureViewControllerViewDidAppear:
pictureInPictureViewControllerViewWillDisappear:
pictureInPictureProxyInterfaceOrientationForTransitionAnimation:
pictureInPictureProxyViewFrameForTransitionAnimation:
pictureInPictureProxyViewControllerWindowForTransitionAnimation:
pictureInPictureProxy:willStartPictureInPictureWithAnimationType:
pictureInPictureProxy:didStartPictureInPictureWithAnimationType:
pictureInPictureProxy:failedToStartPictureInPictureWithAnimationType:error:
pictureInPictureProxy:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:
pictureInPictureProxyWillSetupPictureInPictureStop:
pictureInPictureProxy:willStopPictureInPictureWithAnimationType:reason:
pictureInPictureProxy:didStopPictureInPictureWithAnimationType:reason:
pictureInPictureProxyPictureInPictureInterruptionBegan:
pictureInPictureProxyPictureInPictureInterruptionEnded:
pictureInPictureProxy:didReceivePlaybackCommand:
pictureInPictureProxy:didUpdateStashedOrUnderLockState:
pictureInPictureProxy:didUpdateResourcesUsageReductionReasons:oldReasons:
pictureInPictureProxy:didRequestFaceTimeAction:
pictureInPictureProxy:didReceiveTestingCommand:
pictureInPictureProxyContentType:
pictureInPictureProxyCanIssueOptionalCommand:
pictureInPictureProxySupportsPrewarming:
Tq,N
pictureInPictureSupported
TB,R,N,GisPictureInPictureSupported
T@"NSString",R,N
T@"UIImageSymbolConfiguration",R,N
isContentSourceSupported
initWithSource:
canAnimatePictureInPictureTransition
isSystemPictureInPicturePossible
setAllowsPictureInPicturePlayback:
setMicrophoneEnabled:
setAlwaysStartsAutomaticallyWhenEnteringBackground:
setStatus:
setSource:
setPlayerController:
setActivitySessionIdentifier:
setCanStartAutomaticallyWhenEnteringBackground:
setBackgroundPlaybackPolicy:
setCanPausePlaybackWhenExitingPictureInPicture:
setManagesWiredSecondScreenPlayback:
isAnyPictureInPictureActive
layoutCheckTimer
_allowsPictureInPicturePlayback
_alwaysStartsAutomaticallyWhenEnteringBackground
_canStartAutomaticallyWhenEnteringBackground
_canPausePlaybackWhenExitingPictureInPicture
_requiresLinearPlayback
_microphoneEnabled
_managesWiredSecondScreenPlayback
_anyPictureInPictureActive
_scrubbingOrSeeking
_scrubbing
_seeking
_interruptedForAudioSession
_wasPlayingWhenSuspended
_routingVideoToHostedWindow
_playerController
_controlsStyle
_prerollAttributes
_activitySessionIdentifier
_backgroundPlaybackPolicy
_pictureInPictureViewController
_status
_pegasusProxy
_layoutCheckTimer
_secondScreenConnection
_sourceWindowWhenPictureInPictureStarted
_contentSourceAwaitingInvalidation
_contentSourceAwaitingSetup
_observedTimeControlStatus
_rateWhenScrubbingOrSeekingBegan
_source
_videoRectInScreen
T@"PGPictureInPictureProxy",R,N,V_pegasusProxy
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_videoRectInScreen
T@"NSTimer",R,N,V_layoutCheckTimer
T@"AVSecondScreenConnection",&,N,V_secondScreenConnection
T@"UIWindow",W,N,V_sourceWindowWhenPictureInPictureStarted
T@"<AVPictureInPictureContentSource>",W,N,V_contentSourceAwaitingInvalidation
T@"<AVPictureInPictureContentSource>",W,N,V_contentSourceAwaitingSetup
Tq,N,V_observedTimeControlStatus
scrubbingOrSeeking
TB,N,GisScrubbingOrSeeking,V_scrubbingOrSeeking
scrubbing
TB,N,GisScrubbing,V_scrubbing
seeking
TB,N,GisSeeking,V_seeking
Td,N,V_rateWhenScrubbingOrSeekingBegan
interruptedForAudioSession
TB,N,GisInterruptedForAudioSession,V_interruptedForAudioSession
TB,N,V_wasPlayingWhenSuspended
T@"<AVPictureInPictureContentSource>",W,N,V_source
Tq,N,V_status
routingVideoToHostedWindow
TB,N,GisRoutingVideoToHostedWindow,V_routingVideoToHostedWindow
contentSourceSupported
TB,R,N,GisContentSourceSupported
T@"<AVPictureInPicturePlatformAdapterDelegate>",W,N,V_delegate
T@"AVPlayerController",&,N,V_playerController
TB,N,V_allowsPictureInPicturePlayback
systemPictureInPicturePossible
TB,R,N,GisSystemPictureInPicturePossible
TB,N,V_alwaysStartsAutomaticallyWhenEnteringBackground
TB,N,V_canStartAutomaticallyWhenEnteringBackground
TB,N,V_canPausePlaybackWhenExitingPictureInPicture
TB,N,V_requiresLinearPlayback
Tq,N,V_controlsStyle
microphoneEnabled
TB,N,GisMicrophoneEnabled,V_microphoneEnabled
T@"AVPictureInPicturePrerollAttributes",&,N,V_prerollAttributes
TB,N,V_managesWiredSecondScreenPlayback
T@"NSString",C,N,V_activitySessionIdentifier
Tq,N,V_backgroundPlaybackPolicy
T@"AVPictureInPictureViewController",R,N,V_pictureInPictureViewController
anyPictureInPictureActive
TB,R,N,GisAnyPictureInPictureActive,V_anyPictureInPictureActive
prerollAttributesForAdContentWithRequiredLinearPlaybackEndTime:preferredTintColor:
initWithPlaybackStatePrerollAttributes:requiredLinearPlaybackEndTime:
prerollAttributesForSponsoredContentWithRequiredLinearPlaybackEndTime:preferredTintColor:
preferredTintColor
requiredLinearPlaybackEndTime
_pegasusAttributes
_requiredLinearPlaybackEndTime
T@"PGPlaybackStatePrerollAttributes",R,N,V_pegasusAttributes
T{?=qiIq},R,N,V_requiredLinearPlaybackEndTime
T@"UIColor",R,N
clearColor
pictureInPicturePlayerLayerView
setBackgroundColor:
setWithObject:
isReadyForDisplay
videoRect
contentDimensions
pictureInPicturePlayerLayer
videoBounds
setWithArray:
pixelBufferAttributes
setPixelBufferAttributes:
setPictureInPicturePlayerLayer:
startRedirectingVideoToLayer:forMode:
systemFontOfSize:weight:
AV_indicatorForegroundColor
_flatImageWithColor:
displayScale
CGImage
initWithDisplayScale:placeholderImage:opaque:videoRectWhenPIPBegan:
setPlaceholderContentLayerDuringPIPMode:
avkit_imageWithSymbolNamed:font:completion:
stopRedirectingVideoToLayer:
isLegibleDisplayEnabled
setLegibleDisplayEnabled:
keyPathsForValuesAffectingVideoLayerGravity
keyPathsForValuesAffectingReadyForDisplay
keyPathsForValuesAffectingVideoBounds
keyPathsForValuesAffectingVideoDisplaySize
keyPathsForValuesAffectingVideoScaled
keyPathsForValuesAffectingPixelBufferAttributes
videoDisplaySize
isVideoScaled
setVideoScaled:
startRoutingVideoToPictureInPicturePlayerLayerView
stopRoutingVideoToPictureInPicturePlayerLayerView
_pictureInPicturePlayerLayerView
_pictureInPicturePlayerLayer
T@"AVPlayerLayer",&,N,V_pictureInPicturePlayerLayer
T{CGSize=dd},R,N
T@"AVPlayerController",&,N
readyForDisplay
TB,R,N,GisReadyForDisplay
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
videoScaled
TB,N,GisVideoScaled
T@"NSDictionary",C,N
T@"AVPictureInPicturePlayerLayerView",R,N
timestamp
setTimestamp:
velocity
setVelocity:
_timestamp
_velocity
Td,V_timestamp
Td,V_velocity
setSemanticContentAttribute:
intrinsicContentSize
setMinimumSize:
isCollapsed
setCollapsed:
isIncluded
setIncluded:
setHasFlexibleContentSize:
accessibilityIdentifier
setAccessibilityIdentifier:
avkit_flatWhiteResizableTemplateImage
minimumTrackImageForState:
setContentHuggingPriority:forAxis:
setContentCompressionResistancePriority:forAxis:
setMinimumTrackImage:forState:
setMaximumTrackImage:forState:
setScrubberThumbImage:
newScrubberParentHeight
setNewScrubberParentHeight:
setThumbImage:forState:
currentScrubberParentHeight
whiteColor
isEnabled
colorWithWhite:alpha:
bezierPathWithRoundedRect:cornerRadius:
setFill
fill
setUserInteractionEnabled:
array
setNeedsLayout
estimatedFrameRate
scrubbingSpeed
timestampWhenTrackingEnded
layoutAttributes
isRemoved
_updateLayoutItem
avkit_reevaluateHiddenStateOfItem:
invalidateIntrinsicContentSize
isTracking
_shouldTrackTouchAtPoint:
isCollapsedOrExcluded
extrinsicContentSize
setValue:
isScrollScrubbing
updateScrollViewContentSizeAndOffsetIfNeeded
scrollView
contentOffsetFromValue
setContentOffset:
minimumValue
maximumValue
currentThumbView
setCornerCurve:
setCornerRadius:
createThumbView
setCurrentThumbView:
setEnabled:
setTracking:
setHighlighted:
sendActionsForControlEvents:
setHasChangedLocationAtLeastOnce:
setShouldRecoverFromPrecisionScrubbingIfNeeded:
setScrubbingSpeed:
locationInView:
_isPointerTouch
frame
setScrubsWhenTappedAnywhere:
feedbackGenerator
prepare
_updateSlowKnobMovementDetected
scheduledTimerWithTimeInterval:repeats:block:
setUpdateSlowKnobMovementDetectedTimer:
scrubsWhenTappedAnywhere
trackRectForBounds:
hasChangedLocationAtLeastOnce
previousLocationInView:
center
canChangeScrubbingSpeed
clampedEstimatedFrameRate
selectionChanged
shouldRecoverFromPrecisionScrubbingIfNeeded
_updateSlowKnobMovementDetectedForTargetValue:
setResolution:
window
endOrCancelTracking
cancelTrackingWithEvent:
setTimestampWhenTrackingEnded:
setSlowKnobMovementDetected:
previousScrubberVelocities
removeAllObjects
updateSlowKnobMovementDetectedTimer
_minTrackView
convertRect:fromView:
loadedTimeRanges
count
objectAtIndexedSubscript:
floatValue
loadedTrackOverlayView
_maxTrackView
_cornerRadius
configureSlider:thumbView:loadedTrackView:
avkit_makeSubtreeDisallowGroupBlending
hitRect
hitRectInsets
duration
contentSize
contentOffset
normalizedScrollOffset
normalizedPosition
convertPoint:toView:
_thumbHitEdgeInsets
_trackEnabled
slowKnobMovementDetected
addObject:
removeObjectsInArray:
scrubberSlowKnobMovementDetected:
keyPathsForValuesAffectingLocalizedScrubbingSpeedName
scrollViewDidScroll:
scrollViewDidZoom:
scrollViewWillBeginDragging:
scrollViewWillEndDragging:withVelocity:targetContentOffset:
scrollViewDidEndDragging:willDecelerate:
scrollViewWillBeginDecelerating:
scrollViewDidEndDecelerating:
scrollViewDidEndScrollingAnimation:
viewForZoomingInScrollView:
scrollViewWillBeginZooming:withView:
scrollViewDidEndZooming:withView:atScale:
scrollViewShouldScrollToTop:
scrollViewDidScrollToTop:
scrollViewDidChangeAdjustedContentInset:
avkit_shouldPreventExternalGestureRecognizerAtPoint:
layoutAttributesDidChange
T@"AVLayoutItemAttributes",R,N
setRemoved:
hasAlternateAppearance
setHasAlternateAppearance:
hasFullScreenAppearance
setHasFullScreenAppearance:
T{CGSize=dd},N
removed
TB,N,GisRemoved
collapsed
TB,N,GisCollapsed
included
TB,N,GisIncluded
collapsedOrExcluded
TB,R,N,GisCollapsedOrExcluded
TB,N
setScrubberParentHeight:
createScrubberTicTacImage
setLoadedTimeRanges:
localizedScrubbingSpeedName
timeIntervalSinceTrackingEnded
minimumValueImageRectForBounds:
maximumValueImageRectForBounds:
thumbRectForBounds:trackRect:value:
beginTrackingWithTouch:withEvent:
continueTrackingWithTouch:withEvent:
endTrackingWithTouch:withEvent:
alignmentRectInsets
pointInside:withEvent:
valueFromScrollView
setPreviousScrubberVelocities:
setEstimatedFrameRate:
resolution
setHitRectInsets:
scrubberParentHeight
setRate:
setScrollView:
setScrollScrubbing:
setCanChangeScrubbingSpeed:
scrubberEnabledStatus
setScrubberEnabledStatus:
setCurrentScrubberParentHeight:
_trackingStartTime
_previousValue
_previousValueChangeTime
_currentValueChangedTime
_didHaveLessThanFullScrubbingSpeedSinceTrackingBegin
_collapsed
_included
_removed
_hasAlternateAppearance
_hasFullScreenAppearance
_scrollScrubbing
_slowKnobMovementDetected
_shouldRecoverFromPrecisionScrubbingIfNeeded
_scrubsWhenTappedAnywhere
_canChangeScrubbingSpeed
_hasChangedLocationAtLeastOnce
_scrubberEnabledStatus
_estimatedFrameRate
_rate
_feedbackGenerator
_loadedTrackOverlayView
_previousScrubberVelocities
_layoutAttributes
_loadedTimeRanges
_scrubbingSpeed
_resolution
_scrubberParentHeight
_scrollView
_currentThumbView
_updateSlowKnobMovementDetectedTimer
_timestampWhenTrackingEnded
_currentScrubberParentHeight
_newScrubberParentHeight
_extrinsicContentSize
_hitRectInsets
T@"UIScrollView",&,N,V_scrollView
scrollScrubbing
TB,N,GisScrollScrubbing,V_scrollScrubbing
Tq,N,V_scrubbingSpeed
Td,N,V_resolution
TB,N,V_slowKnobMovementDetected
TB,N,V_shouldRecoverFromPrecisionScrubbingIfNeeded
T@"UIView",R,N,V_loadedTrackOverlayView
T@"UIImageView",W,N,V_currentThumbView
T@"NSMutableArray",&,N,V_previousScrubberVelocities
T@"NSTimer",&,N,V_updateSlowKnobMovementDetectedTimer
Td,N,V_timestampWhenTrackingEnded
T@"UISelectionFeedbackGenerator",R,N,V_feedbackGenerator
TB,N,V_scrubsWhenTappedAnywhere
TB,N,V_canChangeScrubbingSpeed
TB,N,V_hasChangedLocationAtLeastOnce
TB,N,V_scrubberEnabledStatus
Td,N,V_currentScrubberParentHeight
Td,N,V_newScrubberParentHeight
T@"<AVScrubberDelegate>",W,N,V_delegate
T@"NSArray",C,N,V_loadedTimeRanges
Tf,N,V_estimatedFrameRate
T{NSDirectionalEdgeInsets=dddd},N,V_hitRectInsets
Td,R,N
Td,N,SsetScrubberParentHeight:,V_scrubberParentHeight
Tf,N,V_rate
T{CGSize=dd},N,V_extrinsicContentSize
TB,N,GisRemoved,V_removed
TB,N,GisCollapsed,V_collapsed
TB,N,GisIncluded,V_included
TB,N,V_hasAlternateAppearance
TB,N,V_hasFullScreenAppearance
T@"AVLayoutItemAttributes",R,N,V_layoutAttributes
effectiveUserInterfaceLayoutDirection
isAirMessagingEnabled
_isNotificationCenterEnabled
_initPrivate
raise:format:
registerClass:forMessageVersion:
start
stop
activeChannels
setActiveChannels:
nowPlayingPlayerItem
avkitACMIdentifier
type
airTrafficController:didReceiveMessage:completion:
messageTransformerWithClass:
setStreamDataTransformer:
open
airTrafficControllerCurrentItemIdentifier:
length
close
removeObject:
containsObject:
airMessage
initWithStatus:localizedDescription:
sendResponse:
handleCommandMessage:completion:
isPrepared
shared
bonjourService:didAcceptConnectionChannel:
bonjourService:didCloseChannel:
bonjourServiceAdditionalTXTRecordInfo:
airTransport:didReceiveObject:
airTransportInputDidClose:
airTransportOutputDidOpen:
TB,R
playerItemForIdentifier:
mainService
setNowPlayingPlayerItem:
queue
_started
_mainService
_nowPlayingPlayerItem
_queue
_activeChannels
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
T@"NSMutableSet",&,N,V_activeChannels
T@"<AVAirMessageNotificationCenterDelegate>",W,N,V_delegate
T@"AVBonjourService",R,N,V_mainService
T@"AVPlayerItem",&,N,V_nowPlayingPlayerItem
initWithStartTime:duration:number:title:imageFaultBlock:
setCGImage:
startTime
number
title
cgImage
setValue:forUndefinedKey:
valueForUndefinedKey:
initialize
playbackChapterWithStartTime:duration:number:title:imageFaultBlock:
chapterAtTime:inChapters:
copyWithZone:
setCgImage:
_imageBlock
_startTime
_duration
_number
_title
_cgImage
T^{CGImage=},N,V_cgImage
Td,R,V_startTime
Td,R,V_duration
TQ,R,V_number
T@"NSString",R,C,V_title
dictionary
customPropertyStorage
setDictionary:
_customPropertyStorage
T@"NSMutableDictionary",R,N,V_customPropertyStorage
avkit_data
avkit_dataOrNil
externalMetadata
messageWithExternalMetadata:itemIdentifier:
sendMessage:completion:
haveAirPlayService
avkit_airMessageSendExternalMetadata
isEqualToArray:
AVKitData
setAVKitData:
avkit_setValue:forAVKitProperty:
avkit_valueForAVKitProperty:
avkit_airMessageSendToAppleTV
setExternalMetadata:
_externalPlaybackController
willBeginPlaybackFromAppWithBundleID:completionHandler:
prepareRouteSelectionForPlaybackFromBundleID:withCompletionHandler:
prepareRouteSelectionForPlaybackWithCompletionHandler:
canonicalLanguageIdentifierFromString:
hasAudioMediaSelectionOptions
hasLegibleMediaSelectionOptions
audioMediaSelectionOptions
setAudioMediaSelectionOptions:
setLegibleMediaSelectionOptions:
selectedMediaOptionMayHaveChanged:
_selectedMediaOptionWithMediaCharacteristic:
visualMediaSelectionOptions
_setMediaOption:mediaCharacteristic:
legibleMediaSelectionOptions
hasMediaCharacteristic:
appliesMediaSelectionCriteriaAutomatically
_mediaSelectionCriteriaCanBeAppliedAutomaticallyToLegibleMediaSelectionGroup
_disableLegibleMediaSelectionOptions:
_enableAutoMediaSelection:
currentAssetIfReady
mediaSelectionGroupForMediaCharacteristic:
assetCache
isPlayableOffline
mediaSelectionOptionsInMediaSelectionGroup:
options
minusSet:
mediaType
arrayByAddingObject:
externalPlaybackType
handlesAudioSessionInterruptions
extendedLanguageTag
_ensureUserCaptionDisplayType:
currentLegibleMediaSelectionOption
currentAudioMediaSelectionOption
propertyList
reloadOptionsAssumingMediaOptionsMayHaveChanged:
audioOptions
legibleOptions
setLegibleMediaSelectionOptions:audioMediaSelectionOptions:assumeMediaOptionMayHaveChanged:
_optionsForGroup:
playableMediaSelectionOptionsFromArray:
autoupdatingCurrentLocale
objectForKey:
localeIdentifier
languageCompare:currentLanguageCode:currentLanguageIdentifier:
sortedArrayUsingComparator:
numberWithBool:
isAC3Only
arrayWithArray:
currentItem
currentMediaSelection
selectedMediaOptionInMediaSelectionGroup:
mediaSelectionOptionsFromArray:withoutMediaCharacteristics:
mediaSelectionOptionsFromArray:withMediaCharacteristics:
arrayByAddingObjectsFromArray:
valueForKey:
avkit_persistentIdentifier
isEqualToSet:
isCC
isAuxiliary
isEasyReader
isSDH
isMain
selectMediaOptionAutomaticallyInMediaSelectionGroup:
_performAutomaticMediaSelectionForUserCaptionDisplayType:
selectMediaOption:inMediaSelectionGroup:
mediaSelectionCriteriaCanBeAppliedAutomaticallyToMediaSelectionGroup:
hasMediaSelectionOptions
currentVideoMediaSelectionOption
keyPathsForValuesAffectingCurrentAudioMediaSelectionOption
setCurrentAudioMediaSelectionOption:
keyPathsForValuesAffectingCurrentLegibleMediaSelectionOption
setCurrentLegibleMediaSelectionOption:
selectedMediaOptionMayHaveChanged
reloadOptions
reloadOptionsAndCurrentSelections
reloadAudioOptions
reloadLegibleOptions
keyPathsForValuesAffectingHasMediaSelectionOptions
keyPathsForValuesAffectingHasAudioMediaSelectionOptions
keyPathsForValuesAffectingHasLegibleMediaSelectionOptions
mediaSubTypes
unsignedIntValue
locale
displayName
localizedCaseInsensitiveCompare:
AC3Only
TB,R,GisAC3Only
main
TB,R,GisMain
TB,R,GisSDH
TB,R,GisCC
easyReader
TB,R,GisEasyReader
auxiliary
TB,R,GisAuxiliary
T@"NSNumber",R
audioFormats
weakObjectsHashTable
observedScrollViews
_removeScrollViewScrollObserver:
observer
_isScrollViewScrollObserver:
_addScrollViewScrollObserver:
minusHashTable:
setObservedScrollViews:
anyObject
_observeScrollViewDidScroll:
_updateScrollingStatus
isScrolling
avkit_isBeingScrollTested
scrollingDidEndTimer
setScrollingDidEndTimer:
setTolerance:
isScrollingQuickly
avkit_isBeingScrolled
setScrolling:
avkit_isBeingScrolledQuickly
setScrollingQuickly:
scrollViewObserverValuesDidChange:
initWithContentView:
updateObservedScrollViews
setObserver:
_scrolling
_scrollingQuickly
_observer
_observedScrollViews
_scrollingDidEndTimer
T@"UIView<AVScrollViewObserverContentView>",W,N,V_observer
T@"NSHashTable",C,N,V_observedScrollViews
scrolling
TB,N,GisScrolling,V_scrolling
scrollingQuickly
TB,N,GisScrollingQuickly,V_scrollingQuickly
T@"NSTimer",&,N,V_scrollingDidEndTimer
_commonInit
didMoveToWindow
cornerRadius
thumbView
isDescendantOfView:
_edgeFeedbackGenerator
userInteractionStarted
_modulationFeedbackGenerator
activateWithCompletionBlock:
setValue:animated:
distance
positionUpdated:
valueUpdated:
_endTracking
setThumbView:
thumbSize
setAnimatingVolumeChange:
initWithDampingRatio:
initWithDuration:timingParameters:
layoutIfNeeded
addAnimations:
addCompletion:
startAnimation
userInteractionEnded
deactivate
initWithFrame:thumbSize:
minimumSize
accessibilityLabel
gestureRecognizerShouldBegin:
isAnimatingVolumeChange
setThumbSize:
_animatingVolumeChange
_thumbView
_thumbSize
T@"UIImageView",&,N,V_thumbView
animatingVolumeChange
TB,N,GisAnimatingVolumeChange,V_animatingVolumeChange
Td,N,SsetThumbSize:,V_thumbSize
behaviorContextClass
willMoveToContext:
behaviorContext
setBehaviorContext:
T@,W,N
didMoveToContext:
willRemoveFromContext:
didRemoveFromContext:
playerForContentTransitionType:
willBeginContentTransition
didUpdateContentTransitionProgress:
willCompleteContentTransition
didCompleteContentTransition
willCancelContentTransition
didCancelContentTransition
_behaviorContext
T@"AVNewsWidgetPlayerBehaviorContext",W,N,V_behaviorContext
setInheritsTiming:
T@"CALayerHost",R,D,N
setAutoresizingMask:
hostView
contextId
setContextId:
beginTime
setBeginTime:
imageQueueSize
setDeferringGeometryUpdates:
setNeedsGeometryUpdate:
setContentDimensions:
setImageQueueSize:
_updateGeometryIfNeeded
performWithoutAnimation:
lastKnownBounds
lastKnownFrame
setLastKnownFrame:
setLastKnownBounds:
needsGeometryUpdate
isDeferringGeometryUpdates
blackColor
setTransform:
setCenter:
setFrame:contentDimensions:imageQueueSize:
_needsGeometryUpdate
_deferringGeometryUpdates
_hostView
_imageQueueSize
_contentDimensions
_lastKnownFrame
_lastKnownBounds
T@"AVPictureInPictureCALayerHostView",R,N,V_hostView
T{CGSize=dd},N,V_imageQueueSize
T{CGSize=dd},N,V_contentDimensions
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_lastKnownFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_lastKnownBounds
TB,N,V_needsGeometryUpdate
deferringGeometryUpdates
TB,N,GisDeferringGeometryUpdates,V_deferringGeometryUpdates
TI,N
Td,N
_menuForOptions:withIdentifier:
_updateSelectionStateForMenu:selectedIndex:
audibleOptionsMenu
legibleOptionsMenu
localizedDisplayName
mediaSelectionMenuController:didSelectOption:atIndex:
actionWithTitle:image:identifier:handler:
audibleOptions
systemImageNamed:
menuWithTitle:image:identifier:options:children:
children
setState:
initWithAudibleOptions:legibleOptions:
setAudibleOptions:
setLegibleOptions:
setCurrentAudibleOptionIndex:
setCurrentLegibleOptionIndex:
currentAudibleOptionIndex
currentLegibleOptionIndex
_audibleOptionsMenu
_legibleOptionsMenu
_audibleOptions
_legibleOptions
_currentAudibleOptionIndex
_currentLegibleOptionIndex
T@"<AVMediaSelectionMenuDelegate>",W,N,V_delegate
T@"NSArray",C,N,V_audibleOptions
T@"NSArray",C,N,V_legibleOptions
TQ,N,V_currentAudibleOptionIndex
TQ,N,V_currentLegibleOptionIndex
T@"UIMenu",R
initWithTarget:action:
setCancelsTouchesInView:
unionSet:
_touchesEndedOrCancelled:
canBePreventedByGestureRecognizer:
canPreventGestureRecognizer:
shouldRequireFailureOfGestureRecognizer:
shouldBeRequiredToFailByGestureRecognizer:
touchesBegan:withEvent:
touchesMoved:withEvent:
touchesEstimatedPropertiesUpdated:
touchesEnded:withEvent:
touchesCancelled:withEvent:
_trackedTouches
volumeController
currentRouteHasVolumeControl
isAnimatingAwayFromZero
volume
isAnimatingTowardsZero
setAnimatingTowardsZero:
setVolumeToRestore:
volumeToRestore
setVolume:
setAnimatingAwayFromZero:
initWithPlayerController:
canAnimateVolumeTowardsZero
canAnimateVolumeAwayFromZero
setProgressTowardsZero:
setProgressAwayFromZero:
restoreVolumeIfNeeded
_animatingTowardsZero
_animatingAwayFromZero
_volumeToRestore
Td,N,V_volumeToRestore
animatingTowardsZero
TB,N,GisAnimatingTowardsZero,V_animatingTowardsZero
animatingAwayFromZero
TB,N,GisAnimatingAwayFromZero,V_animatingAwayFromZero
T@"AVPlayerController",R,N,V_playerController
pictureInPictureActionButtonTapped
playbackControlsDidChangePlayerVolume:
playbackControlsDidToggleMuted:
playbackControlsDidUpdateVisibilityOfLoadingIndicator:
T@"AVHomeIPCameraBehaviorContext",W,N,V_behaviorContext
isHidden
superlayer
masksToBounds
convertRect:fromLayer:
avkit_visibleRectForRect:inLayer:
avkit_sampleBufferDisplayLayerPlayerController
setPIPModeEnabled:
initWithSourceLayer:playerController:
avkit_makePlayerControllerIfNeeded:
avkit_isVisible
avkit_beginReducingResourcesForPictureInPictureViewController:playerController:
avkit_endReducingResourcesForPictureInPictureViewController:playerController:
avkit_contentSourceType
avkit_wantsManagedSecondScreenPlayback
T@"UIWindow",R,N
_updatePlaybackRateMenuIfNeeded
_loadPlaybackSpeedControlImageWithCompletionHandler:
_updatePlaybackRateMenuItemStatesIfNeeded
_reconstructPlaybackRateMenuItems
playbackRateCollection
rates
initWithCapacity:
compactLocalizedName
selectedRate
setSelectedRate:
indexOfObject:
objectAtIndex:
setPlaybackRateCollection:
menu
_playbackRateMenu
_activeMenuItems
_activePlaybackRateCollection
_activeSelectedPlaybackRate
_activeMenuHasImage
_playbackRateCollection
T@"AVPlaybackRateCollection",&,N,V_playbackRateCollection
T@"UIMenu",R,N
_handlePanGesture:
setMaximumNumberOfTouches:
_handlePinchGesture:
_setEndsOnSingleTouch:
_setRequiresSystemGesturesToFail:
_handleRotationGesture:
recognizers
removeGestureRecognizer:
contentTransitioningViewGestureRecognizer
addGestureRecognizer:
transitionInteraction
setView:
addRecognizersToView:
isPanToDismissEnabled
panGestureRecognizer
pinchGestureRecognizer
_locationRecognizer
coordinateSpace
convertPoint:fromCoordinateSpace:
_isWaitingToContinue
setLastReportedLocationInWindow:
lastReportedLocationInWindow
_filteredUntranslatedLocationInWindow
initialInterfaceOrientation
locationInWindow
anchorLocationInWindow
velocityInView:
velocityInWindow
scale
_rotation
rotationGestureRecognizer
transitionDriverDelegate
transitionDriver:gestureRecognizer:shouldReceiveTouch:
translationInView:
transitionDriver:shouldDriveTransitionInteractionOfType:
setPinchToDismissEnabled:
setPinchToPresentEnabled:
isPinchToDismissEnabled
isPinchToPresentEnabled
setPanToDismissEnabled:
state
_beginTracking:
setPreviousPinchScale:
_cancel
_finish
_setHasContinuedIfNeeded
previousPinchScale
setScale:
hasRotated
setRotation:
transitionDriverDidContinueInteraction:
setHasRotated:
rotation
_setRotation:
_updateLastNonZeroVelocityDirection
isWaitingForBoundsChange
lastTouchTimestamp
initialCoordinateSpaceBounds
_untranslatedUnfilteredLocationInFixedCoordinateSpace
setGestureLocationAfterBoundsChange:
setWaitingForLocationChangeAfterBoundsChange:
setWaitingForBoundsChange:
isWaitingForLocationChangeAfterBoundsChange
gestureLocationAfterBoundsChange
setTimestampOfTouchWithLocationChangeAfterBoundsChange:
isWaitingForTransition
timestampOfTouchWithLocationChangeAfterBoundsChange
setWaitingForTransition:
setInitialInterfaceOrientation:
setInitialCoordinateSpaceBounds:
setTransitionInteraction:
_resetGesturesIfPossible
transitionDriver:didBeginTrackingTransitionInteraction:readyToProceedHandler:
transitionDriverDidFinishInteraction:
_reset
transitionDriverDidCancelInteraction:
angleOfVelocityInWindow
setLastNonZeroVelocityWasDownward:
setAnchorLocationInWindow:
hasContinued
setHasContinued:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
gestureRecognizer:shouldReceiveEvent:
willMoveToView:
didMoveToView:
T@"UIView",R,W,N
translationInWindow
transitionDriver:shouldRequireFailureOfGestureRecognizer:
setTransitionDriverDelegate:
rotationVelocity
pinchScale
pinchVelocity
lastNonZeroVelocityWasDownward
setContentTransitioningViewGestureRecognizer:
enabled
TB,R,N,GisEnabled
T@"<AVTransitionDriverDelegate>",W,N
Tq,R,N
T@"UIPanGestureRecognizer",W,N
_enabled
_pinchToDismissEnabled
_pinchToPresentEnabled
_panToDismissEnabled
_waitingForTransition
_waitingForBoundsChange
_waitingForLocationChangeAfterBoundsChange
_hasContinued
_hasRotated
_lastNonZeroVelocityWasDownward
_contentTransitioningViewGestureRecognizer
_transitionDriverDelegate
_previousPinchScale
__rotation
_panGestureRecognizer
_pinchGestureRecognizer
_rotationGestureRecognizer
_recognizers
_timestampOfTouchWithLocationChangeAfterBoundsChange
_initialInterfaceOrientation
_transitionInteraction
_view
_gestureLocationAfterBoundsChange
_lastReportedLocationInWindow
_anchorLocationInWindow
_initialCoordinateSpaceBounds
pinchToDismissEnabled
TB,N,GisPinchToDismissEnabled,V_pinchToDismissEnabled
pinchToPresentEnabled
TB,N,GisPinchToPresentEnabled,V_pinchToPresentEnabled
panToDismissEnabled
TB,N,GisPanToDismissEnabled,V_panToDismissEnabled
Td,N,V_previousPinchScale
Td,N,S_setRotation:,V__rotation
T@"UIPanGestureRecognizer",R,N,V_panGestureRecognizer
T@"UIPinchGestureRecognizer",R,N,V_pinchGestureRecognizer
T@"UIRotationGestureRecognizer",R,N,V_rotationGestureRecognizer
T@"NSArray",R,N,V_recognizers
waitingForTransition
TB,N,GisWaitingForTransition,V_waitingForTransition
waitingForBoundsChange
TB,N,GisWaitingForBoundsChange,V_waitingForBoundsChange
waitingForLocationChangeAfterBoundsChange
TB,N,GisWaitingForLocationChangeAfterBoundsChange,V_waitingForLocationChangeAfterBoundsChange
Td,N,V_timestampOfTouchWithLocationChangeAfterBoundsChange
TB,N,V_hasContinued
TB,N,V_hasRotated
Tq,N,V_initialInterfaceOrientation
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_initialCoordinateSpaceBounds
T{CGPoint=dd},N,V_gestureLocationAfterBoundsChange
T{CGPoint=dd},N,V_lastReportedLocationInWindow
T{CGPoint=dd},N,V_anchorLocationInWindow
TB,N,V_lastNonZeroVelocityWasDownward
Tq,N,V_transitionInteraction
T@"UIView",W,N,V_view
TB,N,GisEnabled,V_enabled
T@"<AVTransitionDriverDelegate>",W,N,V_transitionDriverDelegate
T@"UIPanGestureRecognizer",W,N,V_contentTransitioningViewGestureRecognizer
orderedSet
activeConnection
_updateActiveConnection
initWithScene:
addSecondScreen:
removeSecondScreen:
isReadyToConnect
setPreferredConnection:
avkit_secondScreenScenes
setAllowsUpdatingActiveConnection:
_connectionForPlayer:
initWithPlayer:playerLayer:
addConnection:
startUpdates
connections
_insertConnection:atIndex:
connectWithScreen:active:
reverseObjectEnumerator
lastObject
preferredConnection
indexSetWithIndex:
moveObjectsAtIndexes:toIndex:
isTVOutScreen
secondScreens
insertObject:atIndex:
isActive
connectionPassingTest:
isAvailable
allowsUpdatingActiveConnection
_targetScreen
requiresTVOutScreen
connectWithSecondScreenConnection:
_allowsUpdatingActiveConnection
_secondScreens
_connections
T@"NSMutableOrderedSet",R,N,V_secondScreens
T@"NSMutableOrderedSet",R,N,V_connections
TB,N,V_allowsUpdatingActiveConnection
avkit_supportsInteractiveCounterRotationDismissals
presentedViewController
presentationController
containerView
transitionContext
isPresenting
presentationFromView
isDismissing
dismissalToView
presentingViewController
rotatableSecondWindow
rootViewController
presentingTransition
wasInitiallyInteractive
dismissingTransition
dismissing
presenting
supportsInteractiveCounterRotationDismissals
_supportedInterfaceOrientationsForWindow:
supportedInterfaceOrientations
viewForKey:
initWithPresentationController:configuration:
presentingView
presentationWindow
rotatableWindowViewController
presentedView
hasActiveTransition
currentTransition
transitionType
canBeInteractivelyDismissed
configuration
sourceView
setSourceView:
touchBlockingView
backgroundView
setTransitionContext:
allowsSecondWindowPresentations
setAllowsSecondWindowPresentations:
wasInitiallyPresentedWithoutSecondWindow
setWasInitiallyPresentedWithoutSecondWindow:
setRotatableSecondWindow:
avFullScreenViewController
setPresentingTransition:
setDismissingTransition:
allowsPausingWhenTransitionCompletes
setAllowsPausingWhenTransitionCompletes:
_allowsSecondWindowPresentations
_wasInitiallyPresentedWithoutSecondWindow
_allowsPausingWhenTransitionCompletes
_configuration
_sourceView
_touchBlockingView
_backgroundView
_transitionContext
_rotatableSecondWindow
_avFullScreenViewController
_presentingTransition
_dismissingTransition
_presentationController
T@"AVPresentationController",R,W,N,V_presentationController
T@"AVPresentationConfiguration",R,N,V_configuration
T@"UIView",W,N,V_sourceView
T@"AVPresentationContainerView",R,W,N
T@"UIWindow",R,W,N
T@"UIView",R,N,V_touchBlockingView
T@"UIView",R,N,V_backgroundView
T@"UIViewController",R,W,N
T@"<UIViewControllerContextTransitioning>",W,N,V_transitionContext
TB,N,V_allowsSecondWindowPresentations
TB,N,V_wasInitiallyPresentedWithoutSecondWindow
T@"UIWindow",&,N,V_rotatableSecondWindow
T@"AVFullScreenViewController",R,W,N,V_avFullScreenViewController
T@"AVFullScreenViewController",R,W,N
T@"AVPresentationContextTransition",&,N,V_presentingTransition
T@"AVPresentationContextTransition",&,N,V_dismissingTransition
T@"AVPresentationContextTransition",R,N
TB,R,N,GisPresenting
TB,R,N,GisDismissing
TB,N,V_allowsPausingWhenTransitionCompletes
setIncludesPeerToPeer:
mainRunLoop
scheduleInRunLoop:forMode:
mainQueue
_updatedAirPlayPairedDeviceAsync
endDiscovery
removeObserver:
searchForServicesOfType:inDomain:
serviceType
_isServiceForCurrentAirPlayDevice:
airTransportSenderForNetService:
didConnectToBonjourService:channel:
setAirplayDeviceRef:
airplayDeviceRef
TXTRecordData
dictionaryFromTXTRecordData:
hostName
port
identifierForNetService:
getInputStream:outputStream:
channelWithInput:output:
startMonitoring
resolveWithTimeout:
stopMonitoring
removeFromRunLoop:forMode:
keyEnumerator
initWithData:encoding:
name
netServiceBrowserWillSearch:
netServiceBrowserDidStopSearch:
netServiceBrowser:didNotSearch:
netServiceBrowser:didFindDomain:moreComing:
netServiceBrowser:didFindService:moreComing:
netServiceBrowser:didRemoveDomain:moreComing:
netServiceBrowser:didRemoveService:moreComing:
netServiceWillPublish:
netServiceDidPublish:
netService:didNotPublish:
netServiceWillResolve:
netServiceDidResolveAddress:
netService:didNotResolve:
netServiceDidStop:
netService:didUpdateTXTRecordData:
netService:didAcceptConnectionWithInputStream:outputStream:
initWithNetServiceType:
beginDiscovery
netServiceBrowser
_discovering
_resolvedServices
_resolvingServices
_monitoringServices
_netServiceIdentifierToChannel
_observeAirPlayVideoActiveDidChange
_observeMRDeviceInfoDidChange
_serviceType
_netServiceBrowser
_airplayDeviceRef
T@"NSNetServiceBrowser",R,N,V_netServiceBrowser
T^v,N,V_airplayDeviceRef
T@"NSString",R,N,V_serviceType
T@"<AVBonjourServiceClientDelegate>",W,N,V_delegate
_setNowPlayingInfoNeedsUpdate
_handleRemoteCommand:options:
numberWithUnsignedInt:
_updateNowPlayingInfo:commandsAndStates:
_makeCommandsAndStatesDictionaryForPlayerController:
_updateRegisteredRemoteCommandEnabledStatesWithCommandsAndStates:
mainBundle
bundleIdentifier
playerControllerToActivateAfterDelay
setPlayerControllerToActivateAfterDelay:
stopNowPlayingUpdatesForPlayerController:
startNowPlayingUpdatesTimer
setStartNowPlayingUpdatesTimer:
_updateNowPlayingInfoIfNeeded
performSelector:withObject:afterDelay:
cancelPreviousPerformRequestsWithTarget:selector:object:
_makeNowPlayingInfo
hasContent
metadata
numberWithDouble:
hasEnabledVideo
hasEnabledAudio
_availableLanguageOptions
_currentLanguageOptions
timing
currentValue
minTime
currentDate
metadataItemsFromArray:filteredByIdentifier:
firstObject
stringValue
dataValue
canPause
canPlay
canTogglePlayback
numberWithInt:
canSeek
canSeekChapterForward
canScanForward
canSeekChapterBackward
canScanBackward
pause:
togglePlayback:
seekChapterForward:
seekByTimeInterval:
seekChapterBackward:
doubleValue
beginScanningForward:
endScanningForward:
beginScanningBackward:
endScanningBackward:
seekToTime:
mediaRemoteIdentifier
_createMediaRemoteLanguageOptionGroupWithAVMediaSelectionOptions:
_createMediaRemoteLanguageOptionWithAVMediaSelectionOption:
_mediaRemoteLanguageOptionCharacteristicsForAVMediaSelectionOption:
_avMediaCharacteristics
_mediaRemoteLanguageOptionCharacteristicForAVMediaCharacteristic:
sharedNowPlayingInfoControllerWithCompletion:
setOverrideParentApplicationDisplayIdentifier:
startNowPlayingUpdatesForPlayerController:afterDelay:
overrideParentApplicationDisplayIdentifier
_playerControllerCurrentTimeJumpedObserver
_nowPlayingInfoNeedsUpdate
_commandHandlerIdentifier
_keyValueObservationController
_backgroundQueue
_overrideParentApplicationDisplayIdentifier
_playerControllerToActivateAfterDelay
_startNowPlayingUpdatesTimer
T@"AVPlayerController",W,N,V_playerControllerToActivateAfterDelay
T@"NSTimer",W,N,V_startNowPlayingUpdatesTimer
TB,N,GisEnabled
T@"NSString",C,N,V_overrideParentApplicationDisplayIdentifier
gradientView
alpha
setGradientView:
_gradientView
T@"CABackdropLayer",R,D,N
T@"AVStatusBarBackgroundGradientViewSubview",&,N,V_gradientView
CGColor
setColors:
setLocations:
filterWithType:
setCompositingFilter:
gradientOpacity
setGradientOpacity:
_gradientOpacity
T@"CAGradientLayer",R,D,N
Td,N,V_gradientOpacity
connectedScenes
predicateWithBlock:
filteredSetUsingPredicate:
avkit_possiblePrimaryWindowScene
_findWindowForControllingOverallAppearanceInWindowScene:
openSessions
persistentIdentifier
scene
avkit_possibleWindowForControllingOverallAppearance
avkit_windowSceneWithSessionIdentifier:
_stopAllObservation
initWithValue:oldValue:keyPath:observationToken:
initWithObservedObject:observer:keyPaths:retainingObservedObject:includeInitialValue:includeChanges:changesBlock:
token
startObserving:completion:
startObserving:keyPaths:includeInitialValue:includeChanges:observationHandler:
initWithName:object:userInfo:
stopObserving
removeObjectForKey:
allValues
stopObserving:
_unfairLock
_proxyObserversByTokens
_notificationObservers
_notificationCenters
_owner
processInfo
globallyUniqueString
includeChanges
keyPaths
addObserver:forKeyPath:options:context:
includeInitialValue
valueForKeyPath:
_handleValueChangeForKeyPath:ofObject:oldValue:newValue:context:
removeObserver:forKeyPath:context:
changesBlock
observeValueForKeyPath:ofObject:change:context:
_retainedObservedObject
_unsafeUnretainedObservedObject
_canHandleChanges
_includeInitialValue
_includeChanges
_token
_keyPaths
_changesBlock
T@"NSString",R,N,V_token
TB,R,N,V_includeInitialValue
TB,R,N,V_includeChanges
T@"NSSet",R,N,V_keyPaths
T@?,R,N,V_changesBlock
null
oldValue
keyPath
observationToken
_value
_oldValue
_keyPath
_observationToken
T@,R,N,V_value
T@,R,N,V_oldValue
T@"NSString",R,N,V_keyPath
T@,R,N,V_observationToken
airDictionaryRepresentation
itemWithAirDictionaryRepresentation:
contextWillHandleUserAction:
skipToNextItem
skipToPreviousItem
T@"AVMusicAppBehaviorContext",W,N,V_behaviorContext
avkit_musicAppBehaviorContext
avkit_setMusicBehaviorData:
T@"AVMusicAppBehaviorContext",R,W,N
_updateSkipItemButtonsEnabled
_updatePlaybackControlsInclusion
behavior
setSeekTargetTime:
isSkipToPreviousItemButtonEnabled
isSkipToNextItemButtonEnabled
playbackControlsController
setStartLeftwardContentTransitionButtonEnabled:
setStartRightwardContentTransitionButtonEnabled:
showsSkipItemButtons
setPlaybackControlsIncludeStartContentTransitionButtons:
setContentTransitionAction:
isPresentingFullScreenFromInline
isPresentedFullScreen
setPlaybackControlsIncludeVolumeControls:
setPlaybackControlsIncludeTransportControls:
setPlaybackControlsIncludeDisplayModeControls:
T@"AVPlayerViewController",R,W,N
initWithAVKitOwner:
willAddBehavior:
didAddBehavior:
willRemoveBehavior:
didRemoveBehavior:
setBehavior:
viewDidLoad
contentViewWillTransitionToSize:withCoordinator:
willStartPictureInPictureWithViewController:
didStopPictureInPicture
makePlaybackContentContainerWithFrame:activeContentView:
playerControllerDidChange
playerViewController:didCollectMetricsEvent:
setSkipToNextItemButtonEnabled:
setSkipToPreviousItemButtonEnabled:
setShowsSkipItemButtons:
seekTargetTime
_showsSkipItemButtons
_skipToPreviousItemButtonEnabled
_skipToNextItemButtonEnabled
_behavior
_seekTargetTime
T@"AVMusicAppBehavior",W,N,V_behavior
T@"NSNumber",&,N,V_seekTargetTime
TB,N,V_showsSkipItemButtons
skipToPreviousItemButtonEnabled
TB,N,GisSkipToPreviousItemButtonEnabled,V_skipToPreviousItemButtonEnabled
skipToNextItemButtonEnabled
TB,N,GisSkipToNextItemButtonEnabled,V_skipToNextItemButtonEnabled
T@"AVPlayerViewController",R,W,N,V_playerViewController
URLForResource:withExtension:
dataWithContentsOfURL:
imageWithData:
pathExtension
stringByDeletingPathExtension
checkResourceIsReachableAndReturnError:
imageForResource:size:
URLForMovieResource:
avkit_asWindowScene
avkit_screenType
avkit_screenHasWindowsExcludingWindow:
avkit_isForeground
_isWindowSceneAvailable
_updatePreferredDisplayCriteria
debugAssistant
setScene:
setWindow:
setWindowScene:
setRootViewController:
avkit_resetPreferredModeSwitchRequest
preferredDisplayCriteria
videoDynamicRange
refreshRate
avkit_setPreferredRefreshRate:HDRMode:
sceneBounds
debugInfoDisplay
setDebugInfoDisplay:
_TVOutScreen
_window
_windowScene
_screen
_state
_debugInfoDisplay
T@"UIWindow",&,N,V_window
T@"UIWindowScene",R,W,N,V_windowScene
T@"UIScreen",R,W,N,V_screen
Tq,R,N,V_state
T@"CADisplay",&,N,V_debugInfoDisplay
TVOutScreen
TB,R,N,GisTVOutScreen,V_TVOutScreen
caseInsensitiveCompare:
initWithString:separatedByString:
keyEquals:
first
second
_first
_second
T@"NSString",R,N,V_first
T@"NSString",R,N,V_second
eventRunLoop
streamStatus
inputStream
hasBytesAvailable
initWithLength:
mutableBytes
read:maxLength:
setLength:
increaseLengthBy:
streamError
outputStream
hasSpaceAvailable
_readDataNonBlockingUpToMaxLength:
bytes
write:maxLength:
_readAvailableData
receiveResponseBlocks
streamDataTransformer
reverseTransformerForMessageData:
removeObjectAtIndex:
isIncomplete
shouldCallReverseTransformerAgain
performOnAirChannelQueueSync:
writeMore
terminatePendingRequests
_outputStreamDidOpen
_inputStreamDidClose
_outputStreamCanWrite
_inputStreamHasBytesAvailable
stream:handleEvent:
initWithInput:output:
isReadyToSend
canWrite
_writeData:
_inputStream
_outputStream
T@"NSInputStream",R,N,V_inputStream
T@"NSOutputStream",R,N,V_outputStream
distantFuture
timeIntervalSinceNow
timerWithTimeInterval:repeats:block:
currentRunLoop
addTimer:forMode:
initWithBlock:
setName:
performSync:
__performBlock:
performSelector:onThread:withObject:waitUntilDone:
startEventThreadIfNecessary
timeIntervalSinceReferenceDate
subdataWithRange:
setObject:atIndexedSubscript:
performAsync:
_isRunningOnAirChannelQueue
airTransportQueue
dataForMessage:
writeData:
eventThread
T@"NSRunLoop",R,N
T@"NSThread",R,N
requestCompletions
sendObject:receiveResponse:
_outputQueue
_leftoverInputData
_requestCompletions
_streamDataTransformer
_receiveResponseBlocks
T@"NSMutableArray",R,N,V_receiveResponseBlocks
T@"<AVAirTransportTransformationProtocol>",&,N,V_streamDataTransformer
T@"<AVAirTransportDelegate>",W,N,V_delegate
currentThread
_isDispatcherEnabled
bonjourServiceClient
channel
dictionaryRepresentation
setCurrentNetService:
setChannel:
didChangeTargetForAirMessageDispatcher:
currentNetService
_currentNetService
_channel
_bonjourServiceClient
T@"AVAirTransport",&,N,V_channel
T@"AVBonjourServiceClient",R,N,V_bonjourServiceClient
T@"<AVAirMessageDispatcherClientDelegate>",W,N,V_delegate
T@"NSNetService",&,N,V_currentNetService
_observeSourceView
observeSourceViewTimer
setObserveSourceViewTimer:
videoCallPlayerController
setPictureInPicturePossible:
contentSource
activeVideoCallSourceView
avkit_isInAWindowAndVisible
setContentSource:
preferredContentSize
setPictureInPictureViewController:
parentViewController
_removeFromParent
addChildViewController:
didMoveToParentViewController:
_setLastKnownIsVisible:videoRectInWindow:
lastKnownIsVisible
lastKnownVideoRectInWindow
setLastKnownIsVisible:
setLastKnownVideoRectInWindow:
pictureInPictureController
contentSourceVideoRectInWindowChanged
willMoveToParentViewController:
removeFromParentViewController
startObservingSourceView
stopObservingSourceView
setPictureInPictureController:
_lastKnownIsVisible
_videoCallPlayerController
_observeSourceViewTimer
_pictureInPictureController
_contentSource
_lastKnownVideoRectInWindow
T@"AVPictureInPictureViewController",W,N,V_pictureInPictureViewController
T@"AVVideoCallPlayerController",R,N,V_videoCallPlayerController
T@"NSTimer",&,N,V_observeSourceViewTimer
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_lastKnownVideoRectInWindow
TB,N,V_lastKnownIsVisible
T@"AVPictureInPictureController",W,N,V_pictureInPictureController
T@"AVPictureInPictureControllerContentSource",W,N,V_contentSource
_pictureInPicturePossible
pictureInPicturePossible
TB,N,GisPictureInPicturePossible,V_pictureInPicturePossible
avkit_isEffectivelyFullScreen
viewIfLoaded
statusBarManager
prefersStatusBarHidden
preferredStatusBarStyle
isStatusBarHidden
statusBarStyle
setNeedsStatusBarAppearanceUpdate
preferredWhitePointAdaptivityStyle
_effectiveUIClientSettings
whitePointAdaptivityStyle
setNeedsWhitePointAdaptivityStyleUpdate
prefersHomeIndicatorAutoHidden
homeIndicatorAutoHidden
setNeedsUpdateOfHomeIndicatorAutoHidden
avkit_setNeedsUpdatePreferencesIfNeeded
_disableTouchCancellationOnRotation
instancesRespondToSelector:
seymourBehaviorContext:didRecieveDoneButtonTapWithDismissalBlock:
T@"AVSeymourBehaviorContext",W,N,V_behaviorContext
initWithActivityIndicatorStyle:
setColor:
setAccessibilityLabel:
setTitle:forState:
titleLabel
systemFontOfSize:
setFont:
button
loadingIndicator
startAnimating
stopAnimating
initWithTitle:
setShowsLoadingIndicator:
showsLoadingIndicator
setLoadingIndicator:
_collapsedOrExcluded
_showsLoadingIndicator
_button
_loadingIndicator
T@"UIActivityIndicatorView",&,N,V_loadingIndicator
T@"AVButton",R,N,V_button
TB,N,V_showsLoadingIndicator
TB,R,N,GisCollapsedOrExcluded,V_collapsedOrExcluded
clientIdentifier
sceneIdentifier
prefersSystemVolumeHUDHidden
stringByAppendingString:
_systemController
volumeCategoryForAudioCategory:
currentSystemController
windowSceneForVolumeDisplay
isOnScreenForVolumeDisplay
volumeAudioCategory
isOnScreen
T@"UIWindowScene",R,N
onScreenForVolumeDisplay
TB,R,N,GisOnScreenForVolumeDisplay
onScreen
TB,R,N,GisOnScreen
initWithSceneIdentifier:clientIdentifier:
setPrefersSystemVolumeHUDHidden:
_prefersSystemVolumeHUDHidden
_clientIdentifier
_sceneIdentifier
T@"<AVVolumeHUDAssertionDelegate>",W,N,V_delegate
T@"NSString",R,N,V_clientIdentifier
T@"NSString",R,N,V_sceneIdentifier
TB,N,V_prefersSystemVolumeHUDHidden
_setupSystemController
_unobserveSystemControllerIfNeeded
isChangingVolume
maximumTargetVolumeSinceChangingVolumeBegan
numberWithFloat:
setTargetVolumeInternal:
setMaximumTargetVolumeSinceChangingVolumeBegan:
_postNotificationForNameIfFullyInitialized:userInfo:
_applyProposedVolumeIfNeeded
setChangingVolume:
setVolumeChangesThrottled:
setClientWithIdentifier:forWindowSceneSessionWithIdentifier:
windowSceneVolumeHUDAssertions
objectsPassingTest:
_appAdoptsUISceneLifecycle
addVolumeDisplay:
setNeedsUpdate
setSystemVolumeHUDEnabled:forWindowSceneSessionIdentifier:
_setSystemVolumeHUDEnabled:
sharedSystemController
setAttribute:forKey:error:
isFullyInitialized
postNotificationName:object:userInfo:
sharedAVSystemController
_requestSharedSystemController
getVolume:forCategory:
_observeSystemControllerIfNeeded
setSharedSystemController:
setCurrentRouteHasVolumeControl:
setFullyInitialized:
_handleSystemControllerServerDiedNotification
addObserver:selector:name:object:
_handleCurrentRouteHasVolumeControlDidChangeNotification:
_handleSystemVolumeDidChangeNotification:
removeObserver:name:object:
volumeCategory
_performOnMainThread:
targetVolumeInternal
volumeChangesThrottled
_applyProposedVolumeImmediately
setVolumeTo:forCategory:
_removeVolumeHUDAssertionsForClientID:
mutableCopy
setSystemVolumeHUDEnabled:forSceneVolumeHudAssertion:
beginChangingVolume
endChangingVolume
setTargetVolume:
changingVolume
TB,R,N,GisChangingVolume
Tf,R,N
T@"NSMutableSet",R,N
uniqueIdentifier
windowSceneSessionIdentifier
_systemControllerQueue
_observingSystemController
_changingVolume
_currentRouteHasVolumeControl
_volumeChangesThrottled
_fullyInitialized
_volume
_sharedSystemController
_targetVolumeInternal
_maximumTargetVolumeSinceChangingVolumeBegan
_volumeCategory
_uniqueIdentifier
_windowSceneSessionIdentifier
TB,N,GisChangingVolume,V_changingVolume
TB,N,V_currentRouteHasVolumeControl
Tf,N,V_volume
TB,N,V_volumeChangesThrottled
T@"NSNumber",&,N,V_targetVolumeInternal
T@"NSNumber",&,N,V_maximumTargetVolumeSinceChangingVolumeBegan
T@"NSString",R,N,V_volumeCategory
T@"AVSystemController",&,N,V_sharedSystemController
fullyInitialized
TB,N,GisFullyInitialized,V_fullyInitialized
T@"NSString",R,N,V_uniqueIdentifier
T@"NSString",R,N,V_windowSceneSessionIdentifier
T@"AVZoomingBehaviorContext",W,N,V_behaviorContext
setPreservesSuperviewLayoutMargins:
setInsetsLayoutMarginsFromSafeArea:
setLayoutMargins:
setNeedsUpdateConstraints
unobscuredTopAreaLayoutGuideProvidingView
leadingAnchor
displayModeControlsAreaLayoutGuideProvidingView
trailingAnchor
constraintEqualToAnchor:constant:
volumeControlsAreaLayoutGuideProvidingView
topAnchor
bottomAnchor
unobscuredCenterAreaLayoutGuideProvidingView
avkit_constraintGreaterThanOrEqualToAnchor:constant:priority:
avkit_constraintLessThanOrEqualToAnchor:constant:priority:
safeAreaLayoutGuide
constraintGreaterThanOrEqualToAnchor:constant:
constraintLessThanOrEqualToAnchor:constant:
transportControlsAreaLayoutGuideProvidingView
animatedUnobscuredCenterAreaLayoutGuideProvidingView
constraintEqualToAnchor:
areVolumeControlsVisible
setActive:
areTransportControlsVisible
updateConstraints
requiresConstraintBasedLayout
setAreVolumeControlsVisible:
setAreTransportControlsVisible:
transportControlsAreaLayoutGuide
displayModeControlsAreaLayoutGuide
volumeControlsAreaLayoutGuide
unobscuredCenterAreaLayoutGuide
animatedUnobscuredCenterAreaLayoutGuide
unobscuredTopAreaLayoutGuide
_needsInitialConstraints
_transportControlsVisibleConstraint
_transportControlsHiddenConstraint
_volumeControlsVisibleConstraint
_volumeControlsHiddenConstraint
_areTransportControlsVisible
_areVolumeControlsVisible
_transportControlsAreaLayoutGuide
_displayModeControlsAreaLayoutGuide
_volumeControlsAreaLayoutGuide
_unobscuredCenterAreaLayoutGuide
_animatedUnobscuredCenterAreaLayoutGuide
_unobscuredTopAreaLayoutGuide
_transportControlsAreaLayoutGuideProvidingView
_displayModeControlsAreaLayoutGuideProvidingView
_volumeControlsAreaLayoutGuideProvidingView
_unobscuredTopAreaLayoutGuideProvidingView
_unobscuredCenterAreaLayoutGuideProvidingView
_animatedUnobscuredCenterAreaLayoutGuideProvidingView
T@"UIView",R,N,V_transportControlsAreaLayoutGuideProvidingView
T@"UIView",R,N,V_displayModeControlsAreaLayoutGuideProvidingView
T@"UIView",R,N,V_volumeControlsAreaLayoutGuideProvidingView
T@"UIView",R,N,V_unobscuredTopAreaLayoutGuideProvidingView
T@"UIView",R,N,V_unobscuredCenterAreaLayoutGuideProvidingView
T@"UIView",R,N,V_animatedUnobscuredCenterAreaLayoutGuideProvidingView
TB,N,V_areTransportControlsVisible
TB,N,V_areVolumeControlsVisible
T@"UILayoutGuide",R,N,V_transportControlsAreaLayoutGuide
T@"UILayoutGuide",R,N,V_displayModeControlsAreaLayoutGuide
T@"UILayoutGuide",R,N,V_volumeControlsAreaLayoutGuide
T@"UILayoutGuide",R,N,V_unobscuredCenterAreaLayoutGuide
T@"UILayoutGuide",R,N,V_animatedUnobscuredCenterAreaLayoutGuide
T@"UILayoutGuide",R,N,V_unobscuredTopAreaLayoutGuide
isPaused
timelineDuration
currentElapsedTime
initializedElapsedTime
timelineRate
initializationTimestamp
initWithElapsedTime:timelineDuration:timelineRate:paused:
_paused
_initializationTimestamp
_initializedElapsedTime
_timelineRate
_timelineDuration
Td,R,N,V_initializationTimestamp
Td,R,N,V_initializedElapsedTime
Td,R,N,V_timelineRate
Td,R,N,V_timelineDuration
paused
TB,R,N,GisPaused,V_paused
customButton
updateButtonAppearance
setAllowsGroupBlending:
currentMicaPackageName
setCurrentMicaPackageName:
setAlternateImageName:
setMicaSnapshotAlpha:
setPrioritizesVideoDevices:
prioritizesVideoDevices
_updateCustomButtonMicaPackage
setMicaPackage:
asynchronouslyPrepareMicaPackageWithName:layoutDirection:completion:
isAirPlayActive
colorWithAlphaComponent:
micaPackage
rootLayer
setState:color:
setTargetSize:
_customButton
_currentMicaPackageName
T@"NSString",&,N,V_currentMicaPackageName
T@"AVButton",R,N
avkit_ancestorViewPassingTest:
subviews
avkit_isAncestorOfViewPassingTest:
avkit_isDescendantOfViewPassingTest:
avkit_hitTestControlForPoint:withEvent:bestSoFar:shortestDistanceSoFar:
isUserInteractionEnabled
presentationLayer
opacity
_isInAWindow
isHiddenOrHasHiddenAncestor
avkit_isCompletelyTransparent
avkit_overrideLayoutMarginsForCounterRotation
avkit_isVideoGravityFrozen
avkit_isCounterRotatedForTransition
avkit_isBeingDismissed
avkit_isBeingPresented
avkit_backdropGroupLeader
avkit_isInAScrollView
avkit_isDescendantOfNonPagingScrollView
avkit_hasFullScreenLayoutClass
avkit_sizeWasInvalidatedNeedingLayoutIfNeeded:
convertRect:toView:
avkit_hitTestControlForPoint:withEvent:
avkit_wantsAnimatedViewTransitions
avkit_largestInscribedRectInBoundingPathWithCenter:aspectRatio:
avkit_portionOfFrameUnobscuredBySuperviews
isPagingEnabled
_isAnimatingScrollTest
isDecelerating
isDragging
_isAnimatingScroll
_horizontalVelocity
_verticalVelocity
shouldUseMacStyle
shouldUsePadStyle
safeAreaInsets
statusBarFrame
standardPaddingFullScreen
shouldUseCompactFullScreenSize
displayCornerRadius
_isClassic
_classicMode
_peripheryInsets
standardPaddingInline
_loadFontsIfNeeded
monospacedDigitSystemFontOfSize:weight:
fontDescriptor
fontDescriptorByAddingAttributes:
fontWithDescriptor:size:
playbackControlsViewLayoutMarginsForView:keyboardHeight:isFullScreen:
scrubberInfoLabelFont
scrubberTimeLabelFont
infoLabelFont
defaultItemFullScreenSize
standardInteritemPadding
additionalInlinePaddingForDodgingSafeArea
routePickerButtonInlineSize
routePickerButtonFullScreenSize
audioRoutePickerFullScreenSize
volumeSliderInlineWidth
volumeSliderCompactFullScreenWidth
volumeSliderRegularFullScreenWidth
volumeSliderPadding
volumeButtonInlineSize
volumeButtonFullScreenSize
maximumTransportControlsWidth
maximumMultiRowTransportControlsWidth
minimumTransportControlsWidth
minimumSingleButtonTransportControlsWidth
minimumScrubberSize
doubleRowLayoutMargins
doubleRowLayoutMarginsWhenShowingScrubInstructions
doublerowLayoutMarginsWhenShowingCustomContentInfo
spacingBetweenScrubInstructionsAndScrubber
liveBroadcastLabelTopToBackdropTopDistance
setShouldUseCompactFullScreenSize:
setTraitCollection:
_shouldUseCompactFullScreenSize
_scrubberTimeLabelFont
_scrubberInfoLabelFont
_infoLabelFont
_standardPaddingFullScreen
_standardPaddingInline
_standardInteritemPadding
_additionalInlinePaddingForDodgingSafeArea
_volumeSliderInlineWidth
_volumeSliderCompactFullScreenWidth
_volumeSliderRegularFullScreenWidth
_volumeSliderPadding
_minimumProminentPlayButtonDimension
_maximumProminentPlayButtonDimension
_maximumTransportControlsWidth
_maximumMultiRowTransportControlsWidth
_minimumTransportControlsWidth
_minimumSingleButtonTransportControlsWidth
_spacingBetweenScrubInstructionsAndScrubber
_liveBroadcastLabelTopToBackdropTopDistance
_traitCollection
_defaultItemInlineSize
_defaultItemFullScreenSize
_routePickerButtonInlineSize
_routePickerButtonFullScreenSize
_audioRoutePickerFullScreenSize
_volumeButtonInlineSize
_volumeButtonFullScreenSize
_minimumScrubberSize
_doubleRowLayoutMargins
_doubleRowLayoutMarginsWhenShowingScrubInstructions
_doublerowLayoutMarginsWhenShowingCustomContentInfo
TB,N,V_shouldUseCompactFullScreenSize
T@"UITraitCollection",&,N,V_traitCollection
TB,R,GshouldUseMacStyle
TB,R,GshouldUsePadStyle
T{CGSize=dd},R,N,V_defaultItemInlineSize
T{CGSize=dd},R,N,V_defaultItemFullScreenSize
Td,R,N,V_standardPaddingFullScreen
Td,R,N,V_standardPaddingInline
Td,R,N,V_standardInteritemPadding
Td,R,N,V_additionalInlinePaddingForDodgingSafeArea
T{CGSize=dd},R,N,V_routePickerButtonInlineSize
T{CGSize=dd},R,N,V_routePickerButtonFullScreenSize
T{CGSize=dd},R,N,V_audioRoutePickerFullScreenSize
Td,R,N,V_volumeSliderInlineWidth
Td,R,N,V_volumeSliderCompactFullScreenWidth
Td,R,N,V_volumeSliderRegularFullScreenWidth
Td,R,N,V_volumeSliderPadding
T{CGSize=dd},R,N,V_volumeButtonInlineSize
T{CGSize=dd},R,N,V_volumeButtonFullScreenSize
Td,R,N,V_minimumProminentPlayButtonDimension
Td,R,N,V_maximumProminentPlayButtonDimension
Td,R,N,V_maximumTransportControlsWidth
Td,R,N,V_maximumMultiRowTransportControlsWidth
Td,R,N,V_minimumTransportControlsWidth
Td,R,N,V_minimumSingleButtonTransportControlsWidth
T{CGSize=dd},R,N,V_minimumScrubberSize
T{NSDirectionalEdgeInsets=dddd},R,N,V_doubleRowLayoutMargins
T{NSDirectionalEdgeInsets=dddd},R,N,V_doubleRowLayoutMarginsWhenShowingScrubInstructions
T{NSDirectionalEdgeInsets=dddd},R,N,V_doublerowLayoutMarginsWhenShowingCustomContentInfo
Td,R,N,V_spacingBetweenScrubInstructionsAndScrubber
Td,R,N,V_liveBroadcastLabelTopToBackdropTopDistance
T@"UIFont",R,N,V_infoLabelFont
T@"UIFont",R,N,V_scrubberTimeLabelFont
T@"UIFont",R,N,V_scrubberInfoLabelFont
T@"AVEditBehaviorContext",W,N,V_behaviorContext
T@"<AVEditBehaviorDelegate>",W,N,V_delegate
_avkitPreferredTransitioningDelegate
setTransitioningDelegate:
collectionWithDefaultRates
fullScreenViewController
isBeingDismissed
_transitionController
beginFullScreenDismissalOfViewController:animated:isInteractive:completion:
_pipActivitySessionObservationController
initWithCoder:
containsValueForKey:
decodeObjectOfClass:forKey:
playerWithURL:
initWithPlayer:
decodeBoolForKey:
decodeIntegerForKey:
encodeWithCoder:
encodeBool:forKey:
isViewLoaded
encodeInteger:forKey:
dispatchQueue
setHandlesAudioSessionInterruptions:
requiresImmediateAssetInspection
setInspectionSuspended:
beginReducingResourcesForPictureInPicturePlayerLayer:
isReducingResourcesForPictureInPicture
endReducingResourcesForPictureInPicturePlayerLayer:
wantsResourceReduction
contentView
setShouldLoadPlaybackControlsHint:
_updateContentOverlayViewSuperview
canIncludePlaybackControlsWhenInline
setCanIncludePlaybackControlsWhenInline:
setCanAutomaticallyZoomLetterboxVideos:
_targetVideoGravitiesForLayoutClass
setTargetVideoGravity:forLayoutClass:
playbackContentContainerView
setVideoBounds:
secondScreenConnectionDisplaySize
videoDisplayScale
loadViewIfNeeded
contentTransitioningDelegate
activeContentView
_actualContentOverlayView
_updatePlaybackControlsController
playerViewControllerShouldStartPictureInPictureFromInlineWhenEnteringBackground:
_delegateRespondsTo:
setCanStartPictureInPictureAutomaticallyFromInline:
stopPictureInPicture
volumeAnimator
setVolumeAnimator:
isPlayingOnSecondScreen
setPlayingOnSecondScreen:
setInternalDelegate:
layoutClass
shouldUseNetworkingResourcesForLiveStreamingWhilePaused
stopUsingNetworkResourcesForLiveStreamingWhilePaused
startUsingNetworkResourcesForLiveStreamingWhilePaused
pipActivitySessionIdentifier
setPictureInPictureActivitySessionIdentifier:
_updateDefaultPlaybackRateIfNeeded
setShowsTimecodes:
loadPlaybackControlsViewIfNeeded
interactiveContentOverlayView
setEdgesInsettingLayoutMarginsFromSafeArea:
_updateCustomControlsViewSuperViewIfNeeded
playbackControlsView
setCustomControlsView:
hasCustomPlaybackControls
_updatePlaybackControlsCanHideStateIfNeeded
inlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused
setInlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused:
setTouchBarRequiresLinearPlayback:
playbackControlsIncludeTransportControls
playbackControlsIncludeDisplayModeControls
playbackControlsIncludeVolumeControls
volumeControlsCanShowSlider
setVolumeControlsCanShowSlider:
setEntersFullScreenWhenPlaybackBegins:
flashPlaybackControlsWithDuration:
setCustomControlItems:
setOverrideLayoutMarginsWhenEmbeddedInline:
turboModePlaybackControlsPlaceholderView
associatedFullScreenViewController
_viewControllerForFullScreenPresentationFromView:
setDefaultPlaybackRate:
initWithFrame:playerLayerView:contentOverlayView:
_behaviorStorage
enumerateAllBehaviorContextsImplementingSelector:forProtocol:usingBlock:
initWithFrame:playbackContentContainerView:targetVideoGravities:
initWithFrame:contentView:
appearanceProxy
setActualView:
performInitialSetupIfNeededAndPossible
hasPerformedInitialSetup
isInAWindowAndNotScrolling
pictureInPictureActivitySessionIdentifier
performInitialSetup
setHasPerformedInitialSetup:
_handleDoubleTapGesture:
setNumberOfTapsRequired:
_handleSingleTapGesture:
requireGestureRecognizerToFail:
_handleUserInteractionObservationRecognizer:
_handleHoverGestureRecognizer:
setHoverGestureRecognizer:
_handleScrubbingGestureRecognizer:
setAllowedScrollTypesMask:
_setiOSMacIgnoreScrollDirectionUserPreference:
setAllowedTouchTypes:
setScrubGestureRecognizer:
_handleScrubInteruptionGestureRecognizer:
setInteractionView:
setInteractiveGestureTracker:
_loadObservationControllerIfNeeded
_hasBegunObservation
_addObservers
startUpdatesIfNeeded
_updateUnsupportedContentIndicatorView
_avkitWillCompletePresentationTransition
_avkitDidCompletePresentationTransition
keyCommands
viewWillAppear:
transitionCoordinator
animateAlongsideTransition:completion:
viewDidAppear:
autoplay:
setShouldUseNetworkingResourcesForLiveStreamingWhilePaused:
updateVideoBounds
viewDidDisappear:
viewDidMoveToWindow:shouldAppearOrDisappear:
_contentViewWillTransitionToSize:withTransitionCoordinator:
viewWillTransitionToSize:withTransitionCoordinator:
_modalPresentationStyleIsFullScreen
isCoveringWindow
presentationContext
preferredInterfaceOrientationForPresentation
navigationController
isNavigationBarHidden
isCounterRotatingContentView
transitioningDelegate
presentationControllerForPresentedViewController:presentingViewController:sourceViewController:
image
setTransportBarCustomMenuItems:
transportBarCustomMenuItems
canControlPlayback
_localizedDiscoverabilityTitleForKeyCommandLocalizationKey
keyCommandWithInput:modifierFlags:action:
setDiscoverabilityTitle:
keyCommandWithInput:modifierFlags:action:upAction:discoverabilityTitle:
setWantsPriorityOverSystemBehavior:
_handlePlayPauseKeyCommand:
_handleVolumeUpKeyPressedCommand:
_handleVolumeUpKeyReleasedCommand:
_handleVolumeDownKeyPressedCommand:
_handleVolumeDownKeyReleasedCommand:
_handleSkipBack15SecondsKeyCommand:
_handleSkipAhead15SecondsKeyCommand:
_handleGoToBeginningKeyCommand:
_handleRewindKeyPressedCommand:
_handleRewindKeyReleasedCommand:
_handleFastForwardKeyPressedCommand:
_handleFastForwardKeyReleasedCommand:
_handleShowPreviousFrameKeyCommand:
_handleShowNextFrameKeyCommand:
_handleExitFullScreenKeyCommand:
exitFullscreen:
currentTime
seekFrameForward:
seekToBeginning:
seekFrameBackward:
set_hasBegunObservation:
_updateExternalPlaybackIndicatorView
nowPlayingInfoControllerIfLoaded
_transitionFromFullScreenWithReason:animated:completionHandler:
_transitionFromFullScreenAnimated:completionHandler:
exitsFullScreenWhenPlaybackEnds
_isTrackingUserInteraction
_updateAudioOnlyIndicatorView
_updateDefaultLinearPlaybackRateIfNeeded
_updateSelectedPlaybackRateIfNeeded
lowercaseString
coordinatedPlaybackActive
_updateSelectedPlaybackRateIfPlayerControllerRateChanges
_createPictureInPictureControllerIfNeeded
_handleDoubleDoubleTapGesture:
setNumberOfTouchesRequired:
setRetainsSourceDuringPictureInPicturePlayback:
canStartPictureInPictureAutomaticallyFromInline
_shouldShowPictureInPictureButton
setShowsPictureInPictureButton:
_updatePiPControllerCanStartAutomaticallyWhenEnteringBackground
_isUnsupportedContent
setShowsUnsupportedContentIndicator:
isAudioOnlyContent
setShowsAudioOnlyIndicator:
externalPlaybackAirPlayDeviceLocalizedName
isPlayingOnExternalScreen
setExternalPlaybackIndicatorTitle:subtitle:
setShowsExternalPlaybackIndicator:
setShowsDoneButtonWhenFullScreen:
_isDescendantOfRootViewController
setPlayerViewControllerHasInvalidViewControllerHierarchy:
setPlayerViewControllerIsPresentingFullScreen:
setPlayerViewControllerIsPresentedFullScreen:
canShowPictureInPictureButton
canToggleVideoGravityWhenEmbeddedInline
showsVideoGravityButton
isExternalPlaybackActive
_canEnterFullScreen
entersFullScreenWhenTapped
_transitionToFullScreenAnimated:interactive:completionHandler:
togglePlaybackControlsVisibility
_togglePictureInPicture
_beginTrackingUserInteraction
_endTrackingUserInteraction
_numberOfTrackedUserInteractions
_setNumberOfTrackedUserInteractions:
beginUserInteraction
endUserInteraction
isContentTransitionInteractive
setPopoverIsBeingPresented:
dismissViewControllerAnimated:completion:
enumerateAllBehaviorContextsConformingToProtocol:usingBlock:
playerViewController:metricsCollectionEventOccured:
playerViewController:contentViewWillTransitionToSize:withTransitionCoordinator:
beginShowingItemsDueToIndirectUserInteraction
transportControlsContainerView
volumeControls
screenModeControls
_hoverGestureRecognizer:hasCursorOverView:
setHoveringOverPlaybackControl:
endShowingItemsDueToIndirectUserInteraction
_endScrubGestureIfActive
beginPlaybackSuspension
_applyNonlinearScaleToScrubGestureVelocity:
_seekForScrubGestureWithVelocity:
canSeekFrameBackward
canSeekFrameForward
_seekDistanceForScrubGestureWithVelocity:
seekToTime:toleranceBefore:toleranceAfter:
endPlaybackSuspension
setReadyForDisplay:
setContentOverlayViewSubview:
setInteractiveContentOverlayView:
setHasCustomPlaybackControls:
canHidePlaybackControls
isHoveringOverPlaybackControl
setCanHidePlaybackControls:
canStartPictureInPictureAutomaticallyWhenEnteringBackground
beginFullScreenPresentationOfViewController:fromView:isInteractive:completion:
enterFullScreenAnimated:completionHandler:
exitFullScreenAnimated:completionHandler:
_transitionControllerIfLoaded
playerViewController:shouldExitFullScreenWithReason:
_isTransitioningToOrFromFullScreen
wantsDetachedFullscreenPresentation
canDisplayContentInDetachedWindow
_transitionToDetachedFullScreenCompletionHandler:
_transitionToAttachedFullScreenAnimated:interactive:completionHandler:
canAutomaticallyZoomLetterboxVideos
_preferredModalPresentationStyle
modalPresentationStyle
setModalPresentationStyle:
_transitionFromFullScreenAnimated:interactive:completionHandler:
isPresentingDetachedFullScreen
_transitionFromInlineToDetachedFullScreenPresentationAnimated:completionHandler:
_transitionFromInlineToFullScreenPresentationAnimated:interactive:completionHandler:
interactiveDismissalCompletionHandler
setInteractiveDismissalCompletionHandler:
configurationWithTransitionStyle:transitionDuration:
_isTrackingUserInteractionWithInteractiveView
isViewDescendantOfPlaybackControlsSubview:
prominentPlayButtonContainerView
setWantsAppearanceConfigValues:
wasInitializedUsingWebKitSPI
isInteractive
setPlayerViewControllerIsBeingTransitionedWithResizing:
isCancelled
setContentView:
_notifyOfMetricsCollectionEvent:
setCanShowStatusBarBackgroundGradientWhenStatusBarVisible:
attemptRotationToDeviceOrientation
dismissForPIPStartAfterPresentationHandler
setDismissForPIPStartAfterPresentationHandler:
playerViewController:willBeginFullScreenPresentationWithAnimationCoordinator:
_shouldPausePlaybackWhenExitingFullscreen
playerViewControllerShouldMuteVolumeForFullScreenDismissalTransition:
pendingRestoreUserInterfaceForPictureInPictureStopHandler
setPendingRestoreUserInterfaceForPictureInPictureStopHandler:
playerViewController:willEndFullScreenPresentationWithAnimationCoordinator:
playerViewController:targetViewForDismissalAnimationWithProposedTargetView:
isBeingPresented
setFinishPreparingForInteractiveDismissalHandler:
presenterSupportsOrientation:
attachContentView
tapGestureRecognizersCanReceiveTouches
numberOfTapsRequired
scrubGestureRecognizer
showsProminentPlayButton
hoverGestureRecognizer
playerViewControllerBeginReducingResourcesForPictureInPicture:
playerViewControllerEndReducingResourcesForPictureInPicture:
playerViewControllerWillStartPictureInPicture:
AV_indicatorBackgroundColor
animateWithDuration:animations:
setPictureInPictureActive:
endBackgroundTask:
beginBackgroundTaskWithExpirationHandler:
playerViewControllerDidStartPictureInPicture:
playerViewControllerShouldAutomaticallyDismissAtPictureInPictureStart:
playerViewController:failedToStartPictureInPictureWithError:
playerViewControllerWillStopPictureInPicture:
playerViewControllerDidStopPictureInPicture:
playerViewController:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:
pictureInPictureController:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:
_activeViewControllerForContentView
animateAlongsideVisibilityAnimationsWithAnimationCoordinator:appearingViews:disappearingViews:
playbackControlsContainer
playerViewController:willTransitionToVisibilityOfPlaybackControls:withAnimationCoordinator:
removeTurboModePlaybackControlsPlaceholderViewIfNeeded
addCoordinatedAnimations:completion:
_FBSScene
uiSettings
deactivationReasons
defaultPlaybackRate
keyPathsForValuesAffectingVideoGravity
keyPathsForValuesAffectingTransportBarCustomMenuItems
pictureInPictureControllerWillStartPictureInPicture:
pictureInPictureControllerDidStartPictureInPicture:
pictureInPictureController:failedToStartPictureInPictureWithError:
pictureInPictureControllerWillStopPictureInPicture:
pictureInPictureControllerDidStopPictureInPicture:
adaptivePresentationStyleForPresentationController:
adaptivePresentationStyleForPresentationController:traitCollection:
presentationController:prepareAdaptivePresentationController:
presentationController:viewControllerForAdaptivePresentationStyle:
presentationController:willPresentWithAdaptiveStyle:transitionCoordinator:
presentationControllerShouldDismiss:
presentationControllerWillDismiss:
presentationControllerDidDismiss:
presentationControllerDidAttemptToDismiss:
prepareForPopoverPresentation:
popoverPresentationControllerShouldDismissPopover:
popoverPresentationControllerDidDismissPopover:
popoverPresentationController:willRepositionPopoverToRect:inView:
fullScreenViewControllerWillBeginFullScreenPresentation:
fullScreenViewControllerWillEndFullScreenPresentation:
viewForFullScreenViewController:
playbackContainerViewForFullScreenViewController:
fullScreenViewController:viewWillTransitionToSize:coordinator:
prefersStatusBarHiddenForFullScreenViewController:
preferredStatusStyleForFullScreenViewController:
keyCommandResponderForFullScreenViewController:
shouldAutorotate
transitionController:configurationForPresentedViewController:presentingViewController:
transitionController:willBeginPresentingViewController:
transitionController:willBeginDismissingViewController:
transitionController:targetViewForDismissingViewController:
transitionController:gestureRecognizer:shouldReceiveTouch:
transitionControllerPresentedViewBackgroundColor:
transitionControllerBackgroundViewBackgroundColor:
transitionControllerCanBeginInteractiveDismissalTransition:
transitionControllerCanBeginInteractivePresentationTransition:
transitionControllerBeginInteractivePresentationTransition:
transitionControllerBeginInteractiveDismissalTransition:
transitionController:prepareForFinishingInteractiveTransition:
transitionController:transitionWillComplete:continueBlock:
transitionController:animationProgressDidChange:
playbackRateCollection:selectedPlaybackRateDidChangeTo:
playerControllerCanRestorePlaybackRateAfterAudioSessionDeactivation:
playbackControlsViewNeedsUpdateStatusBarAppearance:
playbackControlsView:animateAlongsideVisibilityAnimationsWithAnimationCoordinator:appearingViews:disappearingViews:
setRequiresImmediateAssetInspection:
customControlsView
_inlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused
_setInlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused:
playbackControlsIncludeVolumeControlsControls
overrideLayoutMarginsWhenEmbeddedInline
viewControllerForFullScreenPresentation
_ensureBehaviorStorage
loadView
modalPresentationCapturesStatusBarAppearance
_requiresCustomPresentationController
_presentationControllerForPresentedController:presentingController:sourceController:
canBecomeFirstResponder
_mediaSelectionDoneButtonTapped:
showFullScreenPresentationFromView:completion:
enterFullScreenWithCompletion:
exitFullScreenWithCompletion:
showsTimecodes
entersFullScreenWhenPlaybackBegins
setExitsFullScreenWhenPlaybackEnds:
finishPreparingForInteractiveDismissalHandler
overrideRouteSharingPolicy
setOverrideRouteSharingPolicy:
setSecondScreenConnectionDisplaySize:
setWasInitializedUsingWebKitSPI:
overrideRoutingContextUID
setOverrideRoutingContextUID:
customControlItems
setWantsDetachedFullscreenPresentation:
_playerShouldAutoplay
_hasClientSetVideoGravity
_canShowPictureInPictureButton
_pixelBufferAttributes
_canHidePlaybackControls
_hoveringOverPlaybackControl
_canDisplayContentInDetachedWindow
_disallowsAutomaticPictureInPictureStart
_canStartPictureInPictureAutomaticallyWhenEnteringBackground
_mediaSelectionPopoverPresentationController
_playbackControlsController
_playerViewControllerView
_playerViewControllerContentView
_overrideLayoutMarginsWhenEmbeddedInline
_overrideTransformForProminentPlayButton
_canToggleVideoGravityWhenEmbeddedInline
_playbackControlsShouldControlSystemVolume
_customControlsView
_scrubGestureMomentumTimer
_scrubGestureIsActive
_defaultLinearPlaybackRate
_showsTimecodes
_readyForDisplay
_canStartPictureInPictureAutomaticallyFromInline
_entersFullScreenWhenPlaybackBegins
_exitsFullScreenWhenPlaybackEnds
_shouldUseNetworkingResourcesForLiveStreamingWhilePaused
__hasBegunObservation
_hasPerformedInitialSetup
_wasInitializedUsingWebKitSPI
_requiresImmediateAssetInspection
_playbackControlsIncludeVolumeControls
_canIncludePlaybackControlsWhenInline
_pictureInPictureActive
_wantsDetachedFullscreenPresentation
__targetVideoGravitiesForLayoutClass
__actualContentOverlayView
_finishPreparingForInteractiveDismissalHandler
_dismissForPIPStartAfterPresentationHandler
_pendingRestoreUserInterfaceForPictureInPictureStopHandler
_interactiveDismissalCompletionHandler
__observationController
__pipActivitySessionObservationController
__behaviorStorage
__numberOfTrackedUserInteractions
_hoverGestureRecognizer
_scrubGestureRecognizer
__localizedDiscoverabilityTitleForKeyCommandLocalizationKey
_overrideRouteSharingPolicy
_volumeAnimator
_overrideRoutingContextUID
_customControlItems
_defaultPlaybackRate
_pictureInPictureActivitySessionIdentifier
_secondScreenConnectionDisplaySize
_videoBounds
T@"AVContentOverlayView",R,N,V__actualContentOverlayView
T@"AVFullScreenViewController",R,N
TB,N,V_shouldUseNetworkingResourcesForLiveStreamingWhilePaused
T@?,C,N,V_finishPreparingForInteractiveDismissalHandler
T@?,C,N,V_dismissForPIPStartAfterPresentationHandler
T@?,C,N,V_pendingRestoreUserInterfaceForPictureInPictureStopHandler
T@?,C,N,V_interactiveDismissalCompletionHandler
T@"AVObservationController",R,N,V__observationController
T@"AVObservationController",R,N,V__pipActivitySessionObservationController
T@"AVBehaviorStorage",R,N,V__behaviorStorage
T@"NSMutableDictionary",R,N,V__targetVideoGravitiesForLayoutClass
TB,N,V__hasBegunObservation
Tq,N,S_setNumberOfTrackedUserInteractions:,V__numberOfTrackedUserInteractions
T@"UIHoverGestureRecognizer",&,N,V_hoverGestureRecognizer
T@"UIPanGestureRecognizer",&,N,V_scrubGestureRecognizer
T@"NSMutableDictionary",R,N,V__localizedDiscoverabilityTitleForKeyCommandLocalizationKey
TQ,N,V_overrideRouteSharingPolicy
T{CGSize=dd},N,V_secondScreenConnectionDisplaySize
T@"AVPlayerControllerVolumeAnimator",&,N,V_volumeAnimator
T@"__AVPlayerLayerView",&,N,V_playerLayerView
TB,N,GisReadyForDisplay,V_readyForDisplay
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_videoBounds
TB,N,V_hasPerformedInitialSetup
TB,N,V_wasInitializedUsingWebKitSPI
hoveringOverPlaybackControl
TB,N,GisHoveringOverPlaybackControl,V_hoveringOverPlaybackControl
T@"NSString",C,N,V_overrideRoutingContextUID
TB,N,V_requiresImmediateAssetInspection
TB,N,V_canHidePlaybackControls
T@"NSArray",C,N
T@"AVPlayerViewControllerCustomControlsView",R,N
TB,N,V_playbackControlsIncludeVolumeControls
T@"UIViewController",R,N
T@"NSArray",C,N,V_customControlItems
Td,N,V_defaultPlaybackRate
TB,N,V_canIncludePlaybackControlsWhenInline
T@"NSValue",&,N
pictureInPictureActive
TB,R,N,GisPictureInPictureActive,V_pictureInPictureActive
T@"NSString",C,N,V_pictureInPictureActivitySessionIdentifier
T@?,C,N
TB,N,V_wantsDetachedFullscreenPresentation
TB,N,V_showsTimecodes
T@"NSString",C,N
T@"UIView",R,N
TB,N,V_canStartPictureInPictureAutomaticallyFromInline
TB,N,V_entersFullScreenWhenPlaybackBegins
TB,N,V_exitsFullScreenWhenPlaybackEnds
T@"<AVPlayerViewControllerDelegate>",W,N,V_delegate
iAdPreRollView
iAdPrerollView
setCanDisplayContentInDetachedWindow:
setPlaybackControlsShouldControlSystemVolume:
needsLayout
stopPictureInPictureEvenWhenInBackground
initWithPlayerLayerView:
showsExitFullScreenButton
setShowsExitFullScreenButton:
playbackControlsShouldControlSystemVolume
setWebKitOverrideRouteSharingPolicy:routingContextUID:
keyPathsForValuesAffectingPictureInPicturePossible
keyPathsForValuesAffectingPictureInPictureActive
keyPathsForValuesAffectingPictureInPictureSuspended
keyPathsForValuesAffectingPictureInPictureWasStartedWhenEnteringBackground
TB,R,N,GisPictureInPicturePossible
pictureInPictureSuspended
TB,R,N,GisPictureInPictureSuspended
setOverrideTransformForProminentPlayButton:
overrideTransformForProminentPlayButton
setCanToggleVideoGravityWhenEmbeddedInline:
TB,N,S_setInlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused:
T{CGAffineTransform=dddddd},N
initWithPlayerViewController:
setCanShowPictureInPictureButton:
activeContentViewDidChange
setCanStartPictureInPictureAutomaticallyWhenEnteringBackground:
T@"AVPlaybackControlsController",R,N
T@"AVTransitionController",R,N
audioOnlyContent
TB,R,N,GisAudioOnlyContent
shouldEnterFullScreenWhenPlaybackBegins
initWithPlayerController:doneButtonTarget:doneButtonAction:
popoverPresentationController
setPermittedArrowDirections:
setSourceRect:
_setIgnoreAppSupportedOrientations:
mediaSelectionTableViewController
_ignoreAppSupportedOrientations
presentViewController:animated:completion:
toggleMuted
doneButtonTapped:
videoGravityButtonTapped:
mediaSelectionButtonTapped:
fullScreenButtonTapped:
pictureInPictureButtonTapped:
toggleMuted:
isPresentingFullWindow
T@"AVPlayerViewControllerContentView",R,N
presentingDetachedFullScreen
TB,R,N,GisPresentingDetachedFullScreen
presentingFullWindow
TB,R,N,GisPresentingFullWindow
presentingFullScreenFromInline
TB,R,N,GisPresentingFullScreenFromInline
presentedFullScreen
TB,R,N,GisPresentedFullScreen
T@"AVPresentationContext",R,N
enterAutoplayPhase
exitAutoplayPhase
flashAutoplayControls
setEntersFullScreenWhenTapped:
avkit_currentEditBehaviorContext
avkit_setCurrentEditBehaviorContext:
T@"AVEditBehaviorContext",R,W,N
endEditing
isEditing
setEditing:
editView
setCurrentTime:
addPeriodicTimeObserverForInterval:queue:usingBlock:
setPlayerTimeObserver:
presentationSize
leftAnchor
rightAnchor
setDataSource:
asset
assetImageGeneratorWithAsset:
setImageGenerator:
imageGenerator
setAppliesPreferredTrackTransform:
setMaximumSize:
setToolbar:
toolbar
setBarStyle:
_makeBarButtonItems
setItems:
initWithArrangedSubviews:
setAxis:
setContainerView:
setEditView:
playerTimeObserver
removeTimeObserver:
currentRotation
setCurrentRotation:
videoCompostitionRotatingAsset:
setVideoComposition:
tracksWithMediaType:
naturalSize
preferredTransform
videoCompositionLayerInstruction
trackID
setTrackID:
setTransform:atTime:
setRotationTransform:
videoCompositionInstruction
setTimeRange:
setLayerInstructions:
videoCompositionWithPropertiesOfAsset:
setInstructions:
setRenderSize:
setReversePlaybackEndTime:
setForwardPlaybackEndTime:
editBehaviorDidCancel:
alertControllerWithTitle:message:preferredStyle:
doneButton
setBarButtonItem:
editBehaviorAlertActionsForDoneButtonTap:
addAction:
actionWithTitle:style:handler:
zoomingBehavior
addBehavior:
removeBehavior:
reloadData
contentDuration
valueWithCMTime:
pendingImageRequests
requestedImageTimeToCMTimeMap
scrubToTime:resolution:
reversePlaybackEndTime
forwardPlaybackEndTime
beginScrubbing
isTrimming
trimStartTime
trimEndTime
seekToTime:toleranceBefore:toleranceAfter:completionHandler:
endScrubbing
cancelAllCGImageGeneration
_generateThumbnails
setThumbnailImage:forTimestamp:
generateCGImagesAsynchronouslyForTimes:completionHandler:
flexibleSpaceItem
initWithBarButtonSystemItem:target:action:
setFlexibleSpaceItem:
cancel:
setCancelButton:
setPlayButton:
systemWhiteColor
playButton
setTintColor:
setPauseButton:
pauseButton
done:
setDoneButton:
systemYellowColor
items
cancelButton
setPrefersThumbVisible:
editViewDuration:
editViewThumbnailAspectRatio:
editView:requestThumbnailImageForTimestamp:
editViewDidBeginScrubbing:
editViewDidEndScrubbing:
editView:currentTimeDidChange:
editView:trimStartTimeDidChange:
editView:trimEndTimeDidChange:
editViewWillBeginRequestingThumbnails:
editViewDidFinishRequestingThumbnails:
startEditing
rotateClockwise
rotationTransform
parameters
setZoomingBehavior:
setObservationController:
_editing
_parameters
_zoomingBehavior
_editView
_imageGenerator
_playerTimeObserver
_containerView
_toolbar
_cancelButton
_doneButton
_flexibleSpaceItem
_playButton
_pauseButton
_pendingImageRequests
_requestedImageTimeToCMTimeMap
_currentRotation
_rotationTransform
T@"AVEditBehavior",W,N,V_behavior
T@"AVZoomingBehavior",&,N,V_zoomingBehavior
T@"AVObservationController",&,N,V_observationController
T@"AVEditView",&,N,V_editView
editing
TB,N,GisEditing,V_editing
T@"AVAssetImageGenerator",&,N,V_imageGenerator
T@,&,N,V_playerTimeObserver
T@"UIView",&,N,V_containerView
T@"UIToolbar",&,N,V_toolbar
T@"UIBarButtonItem",&,N,V_cancelButton
T@"UIBarButtonItem",&,N,V_doneButton
T@"UIBarButtonItem",&,N,V_flexibleSpaceItem
T@"UIBarButtonItem",&,N,V_playButton
T@"UIBarButtonItem",&,N,V_pauseButton
T@"NSMutableArray",R,N,V_pendingImageRequests
T@"NSMutableDictionary",R,N,V_requestedImageTimeToCMTimeMap
TQ,N,V_currentRotation
T{CGAffineTransform=dddddd},N,V_rotationTransform
T@"AVEditBehaviorParameters",R,C,N,V_parameters
_canShowWhileLocked
canPerformAction:withSender:
targetForAction:withSender:
viewWillMoveToWindow:
setPresentationContainerContentView:
sourceFullScreenViewController
setAssociatedFullScreenViewController:
setSourceFullScreenViewController:
_associatedFullScreenViewController
_sourceFullScreenViewController
_contentView
T@"UIView",W,N,V_contentView
T@"UIViewController<AVFullScreenViewControllerDelegate>",W,N,V_delegate
T@"AVFullScreenViewController",W,N,V_associatedFullScreenViewController
T@"AVFullScreenViewController",W,N,V_sourceFullScreenViewController
buttonWithAccessibilityIdentifier:accessibilityLabel:
setOverrideUserInterfaceStyle:
setShowsMenuAsPrimaryAction:
setContextMenuInteractionEnabled:
setAppliesTransformToImageViewWhenHighlighted:
overflowMenuItemsForControlOverflowButton:
identifier
updateVisibleMenuWithBlock:
configurationWithIdentifier:previewProvider:actionProvider:
contextMenuInteraction:willDisplayMenuForConfiguration:animator:
contextMenuInteraction:willEndForConfiguration:animator:
updateContextMenu
contextMenuInteraction:configurationForMenuAtLocation:
_activeMenuInteraction
T@"<AVControlOverflowButtonDelegate>",W,N,V_delegate
stringByAppendingFormat:
initWithRate:localizedName:compactLocalizedName:
_uiImage
_setUIImage:
localizedName
_symbolImage
__uiImage
_localizedName
_compactLocalizedName
T@"UIImage",&,N,S_setUIImage:,V__uiImage
Td,R,N,V_rate
T@"NSString",R,C,N,V_localizedName
T@"NSString",R,C,N,V_compactLocalizedName
initWithRate:localizedName:compactLocalizedName:symbolImage:
symbolImage
T@"UIImage",R,C,N
airMessageCanonicalForm
stringWithUTF8String:
currentOSIdentifier
buildVersion
currentAppIdentifier
dictionaryRepresentationCommon
initWithSuiteName:
standardUserDefaults
environment
allRecognizedKeysForDictionaryRepresentation
itemIdentifier
airRepresentationForArray:
rawData
base64EncodedStringWithOptions:
commonDictionaryRepresentationKeys
compare:
sortedArrayUsingSelector:
componentsJoinedByString:
dataWithJSONObject:options:error:
decompressedDataUsingAlgorithm:error:
arrayWithObject:
initWithDictionary:
addEntriesFromDictionary:
shouldUseJSONForBody
MIMEType
jsonDataRepresentation
_nameForDataCompressionAlgorithm:
compressedDataUsingAlgorithm:error:
headerTextRepresenationForBodyDataLength:extraHeaders:
dataUsingEncoding:allowLossyConversion:
appendData:
initWithMessageType:itemIdentifier:
setArray:
setRawData:
setExtendedLanguageTag:
expectedBodyLength
uncompressedBodyData
bodyAsJSONDictionary
rawBodyData
uniqueHeaders
intValue
responseWithParts:
initWithMessageType:itemIdentifier:dictionaryRepresentation:
setMIMEType:
_decompressBodyData:forCompressionAlgorithm:
messageWithRequiresLinearPlayback:itemIdentifier:
messageWithUserScrubToAssetTime:itemIdentifier:
messageWithPosterArtworkMetadata:itemIdentifier:
messageWithParts:
messageDataRepresentation
setItemIdentifier:
initialRepresentation
_type
_itemIdentifier
_MIMEType
_extendedLanguageTag
_rawData
_array
_dictionary
_initialRepresentation
T@"NSString",C,N,V_itemIdentifier
T@"NSString",C,N,V_MIMEType
T@"NSString",C,N,V_extendedLanguageTag
T@"NSValue",&,N,V_value
T@"NSData",&,N,V_rawData
T@"NSArray",&,N,V_array
T@"NSDictionary",&,N,V_dictionary
T@"NSDictionary",R,N,V_initialRepresentation
TI,R,N,V_type
T@"NSData",R,N
T@"NSDictionary",R,N
absoluteString
initWithBase64EncodedString:options:
willAnimatePictureInPictureStart
didAnimatePictureInPictureStart
willAnimatePictureInPictureStop
didAnimatePictureInPictureStop
viewWillResize
viewDidResize
actionButtonTapped
shouldShowAlternateActionButtonImage
shouldShowLoadingIndicator
setShouldShowAlternateActionButtonImage:
_shouldShowAlternateActionButtonImage
_contentViewController
T@"AVPictureInPicturePlayerLayerView",R,N,V_pictureInPicturePlayerLayerView
TB,N,V_shouldShowAlternateActionButtonImage
T@"<AVPictureInPictureViewControllerDelegate>",W,N,V_delegate
T@"AVPictureInPictureViewController",&,N,V_contentViewController
setLineBreakMode:
setTextAlignment:
setTextColor:
setAlignment:
setBaselineRelativeArrangement:
setCustomSpacing:afterView:
configurationWithFont:
systemImageNamed:withConfiguration:
initWithImage:
setContentMode:
setNumberOfLines:
avkit_constraintsFromCenterAnchorsToCenterAnchorsOfItem:
addObjectsFromArray:
widthAnchor
heightAnchor
size
constraintEqualToAnchor:multiplier:
setSpacing:
setText:
setTitleString:subtitleString:
_imageView
_titleLabel
_subtitleLabel
_textLabelsContainer
_timing
isEqualToValueTiming:
allocWithZone:
initWithValueTiming:
decodeDoubleForKey:
initWithAnchorValue:anchorTimeStamp:rate:
anchorValue
encodeDouble:forKey:
anchorTimeStamp
supportsSecureCoding
mutableCopyWithZone:
classForCoder
setAnchorValue:
setAnchorTimeStamp:
Td,D,N
valueTimingWithAnchorValue:anchorTimeStamp:rate:
systemUptime
currentTimeStamp
valueForTimeStamp:
timeStampForValue:
setValueTiming:
_timeStamp
_updateDebugLabelText
_currentDisplay
secondScreenViewController
setDebugText:
debugText
tracks
assetTrack
displays
uniqueId
_displayID
_currentEnabledVideoTrack
statusOfValueForKey:error:
formatDescriptions
_currentVideoDynamicRange
_actuallyUpdateDebugLabelTextWithCurrentResolution:currentVideoDynamicRange:
loadValuesAsynchronouslyForKeys:completionHandler:
maximumVideoResolution
currentMode
hdrMode
width
height
preferences
preferredHdrMode
matchContent
nativeBounds
setSecondScreenViewController:
_scene
_debugText
_secondScreenViewController
T@"UIScene",W,N,V_scene
T@"NSString",C,N,V_debugText
T@"AVSecondScreenViewController",W,N,V_secondScreenViewController
hasPrefix:
initWithPresentedViewController:presentingViewController:
_observeSceneDidBecomeActiveForRestoringRotatability
presentationWindowForDisablingAutorotation
endDisablingInterfaceAutorotation
setPresentationWindowForDisablingAutorotation:
containerViewWillLayoutSubviews
presented
context
setWasInitiallyInteractive:
setHasAVKitAnimator:
setPresenterSupportedOrientations:
shouldRemovePresentersView
setFinalInterfaceOrientation:
hasAVKitAnimator
finalInterfaceOrientation
_ensureOrientation:enablingMixedOrientations:
didStopTransition
isRotated
initWithWindowScene:
windowLevel
setWindowLevel:
_prepareDismissingTransitionContext
willBeginAdjustingOrientation
_setViewDelegateContentOverlayInsetsAreClean:
presenterSupportedOrientations
wasCancelledWithInactiveScene
beginDisablingInterfaceAutorotation
initWithPresentedViewController:presentingViewController:withConfiguration:
shouldPresentInFullscreen
presentationTransitionWillBegin
presentationTransitionDidEnd:
dismissalTransitionWillBegin
dismissalTransitionDidEnd:
_context
_presentationWindowForDisablingAutorotation
T@"UIWindow",W,N,V_presentationWindowForDisablingAutorotation
T@"AVPresentationContext",R,N,V_context
_updatePlaybackControlsControllerAndZoomingBehavior
setPlayerControllerToRestore:
livePreviewAspectRatio
setPresentationSize:
playerControllerToRestore
setLivePreviewPlayerController:
_updatePictureInPictureController
livePreviewContainerView
isLivePreviewActive
livePreviewPlayerController
setLivePreviewActive:
playbackControlsShowsLoadingIndicator
setPlaybackControlsShowsLoadingIndicator:
setShowsVideoGravityButton:
avkit_constraintsFromEdgeAnchorsToEdgeAnchorsOfItem:
setForcePlaybackControlsHidden:
playbackControlsIncludePictureInPictureButton
setContentAspectRatio:
isZoomingEnabled
setZoomingEnabled:
hasMicrophone
setHasMicrophone:
setPlaybackControlsIncludePictureInPictureButton:
setLivePreviewAspectRatio:
setBackgroundColor:forContainerOfControlItem:
_playbackControlsIncludeTransportControls
_playbackControlsIncludeDisplayModeControls
_zoomingEnabled
_livePreviewActive
_hasMicrophone
_playbackControlsIncludePictureInPictureButton
_playbackControlsShowsLoadingIndicator
_livePreviewContainerView
_livePreviewPlayerController
_playerControllerToRestore
_livePreviewAspectRatio
T@"AVHomeIPCameraBehavior",W,N,V_behavior
T@"AVHomeIPCameraPlayerController",W,N,V_livePreviewPlayerController
T@"AVPlayerController",&,N,V_playerControllerToRestore
TB,N,V_playbackControlsShowsLoadingIndicator
TB,N,V_playbackControlsIncludeTransportControls
TB,N,V_playbackControlsIncludeDisplayModeControls
zoomingEnabled
TB,N,GisZoomingEnabled,V_zoomingEnabled
T@"UIView",R,N,V_livePreviewContainerView
livePreviewActive
TB,N,GisLivePreviewActive,V_livePreviewActive
TB,N,V_hasMicrophone
TB,N,V_canStartPictureInPictureAutomaticallyWhenEnteringBackground
TB,N,V_playbackControlsIncludePictureInPictureButton
T{CGSize=dd},N,V_livePreviewAspectRatio
seymourBehaviorContextDidReceiveButtonTap:
removeTarget:action:forControlEvents:
setWantsExternalPlaybackButtonShown:
_updateLegibleContentInsets
legibleContentInsets
setLegibleContentInsets:
hidePlaybackControlsImmediately
_legibleContentInsets
T{NSEdgeInsets=dddd},N,V_legibleContentInsets
T@,W,N,V_behavior
volumeControlsContentView
setVolumeControllerType:
mouseDidEnterVolumeControlsVolumeButton:
setMinimumValue:
setMaximumValue:
setSize:
setVolumeSliderContentView:
volumeSliderContentView
setVolumeControlsContentView:
volumeSlider
volumeControlParentView
volumeSliderTransportBarHeight
transportViewDelegate
volumeControlsControllerTransportBarHeight:
volumeSliderWidthConstraint
removeConstraint:
setVolumeSliderWidthConstraint:
setVolumeSliderTransportBarHeight:
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
addConstraint:
volumeSliderHeightConstraint
setVolumeSliderHeightConstraint:
volumeSliderGapConstraint
setVolumeSliderGapConstraint:
constraints
centerXAnchor
updateVolumeControlsContollerLayout
volumeButton
volumeControllerDelegate
volumeControlsController:volumeButtonControl:viewContainingVolumeSlider:
setVolumeControlParentView:
mouseDidEnterVolumeControlsContentView:
setVolumeSliderHover:
volumeSliderHover
layoutVolumeSliderViewIfNeeded
canShowVolumeSlider
volumeControlsController:volumeButtonControl:didShowVolumeSlider:
volumeControlsController:volumeButtonControl:didHideVolumeSlider:
setVolumeSliderGestureActive:
prepareSliderView
volumeSliderGestureActive
showSliderViewIfNeeded
hideVolumeSlider
setCanShowVolumeSlider:
setVolumeControllerDelegate:
setTransportViewDelegate:
playerViewHeight
setPlayerViewHeight:
_canShowVolumeSlider
_volumeSliderGestureActive
_volumeSliderTransportBarHeight
_playerViewHeight
_volumeButton
_volumeSlider
_volumeControllerDelegate
_transportViewDelegate
_volumeControlsContentView
_volumeSliderContentView
_volumeControlParentView
_volumeSliderHover
_volumeSliderGapConstraint
_volumeSliderWidthConstraint
_volumeSliderHeightConstraint
T@"AVVolumeControlsContentView",&,N,V_volumeControlsContentView
T@"AVLayoutView",&,N,V_volumeSliderContentView
T@"UIView",W,N,V_volumeControlParentView
TB,N,V_volumeSliderGestureActive
T@"UIHoverGestureRecognizer",&,N,V_volumeSliderHover
Tf,N,V_volumeSliderTransportBarHeight
Tf,N,V_playerViewHeight
T@"NSLayoutConstraint",&,N,V_volumeSliderGapConstraint
T@"NSLayoutConstraint",&,N,V_volumeSliderWidthConstraint
T@"NSLayoutConstraint",&,N,V_volumeSliderHeightConstraint
T@"AVVolumeButtonControl",R,N,V_volumeButton
T@"AVVolumeSlider",R,N,V_volumeSlider
TB,N,V_canShowVolumeSlider
T@"<AVVolumeControlsControllerDelegate>",W,V_volumeControllerDelegate
T@"<AVVolumeControlsControllerLayoutDelegate>",W,V_transportViewDelegate
setContentInsetAdjustmentBehavior:
setBouncesZoom:
setShowsVerticalScrollIndicator:
setShowsHorizontalScrollIndicator:
_updateMinMaxZoomScales
_contentRectForScale:
setDecelerationRate:
zoomScale
setScrollEnabled:
backgroundColor
canShowStatusBarBackgroundGradientWhenStatusBarVisible
setVideoGravity:removingAllSubayerTransformAnimations:
_contentSizeForScale:
setContentSize:
contentAspectRatio
convertPoint:fromView:
maximumZoomScale
minimumZoomScale
zoomToRect:animated:
setZoomScale:
removeAllSublayerTransformAnimations
setAlwaysBounceVertical:
setAlwaysBounceHorizontal:
setBouncesHorizontally:
setBouncesVertically:
isFullScreen
contentInset
_updateMinMaxZoomScales:
willMoveToWindow:
setLastKnownWindow:
setVideoContentFrame:
_contentInsets
setContentInset:
lastKnownWindow
setMinimumZoomScale:
setMaximumZoomScale:
initWithFrame:activeContentView:
videoContentFrame
T@"AVPlaybackContentContainerView",R,N
T{CGRect={CGPoint=dd}{CGSize=dd}},N
playingOnSecondScreen
TB,N,GisPlayingOnSecondScreen
zoomToPoint:
scrollView:contentSizeForZoomScale:withProposedSize:
setFullScreen:
previousBounds
setPreviousBounds:
_playingOnSecondScreen
_fullScreen
_activeContentView
_lastKnownWindow
_contentAspectRatio
_videoContentFrame
_previousBounds
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_previousBounds
T@"UIWindow",W,N,V_lastKnownWindow
T{CGSize=dd},N,V_contentAspectRatio
fullScreen
TB,N,GisFullScreen,V_fullScreen
T@"AVPlaybackContentContainerView",R,N,V_activeContentView
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_videoContentFrame
TB,N,GisPlayingOnSecondScreen,V_playingOnSecondScreen
initWithMessageClass:
airMessageParser
partsWithData:
extraData
resetState
messageClass
_previousUnusedData
_messageClass
T#,R,N,V_messageClass
backgroundPIPAuthorizationToken
playbackCoordinator
coordinationMediumDelegate
playbackCoordinator:promptForLeaveOrEndSessionAllowingCancellation:completionHandler:
movieScrubber
trimStartValue
trimEndValue
setEdgeInset:
dataSource
setMovieScrubber:
userObservationGestureRecognizerFired:
setEditable:
setTrimming:
setThumbIsVisible:
movieScrubberDuration:
movieScrubber:evenlySpacedTimestamps:startingAt:endingAt:
movieScrubberThumbnailAspectRatio:
movieScrubber:requestThumbnailImageForTimestamp:
movieScrubber:requestThumbnailImageForTimestamp:isSummaryThumbnail:
movieScrubber:valueDidChange:
movieScrubber:editingStartValueDidChange:
movieScrubber:editingEndValueDidChange:
movieScrubberDidBeginScrubbing:withHandle:
movieScrubberDidEndScrubbing:withHandle:
movieScrubber:widthDelta:originXDelta:
movieScrubberWillBeginRequestingThumbnails:
movieScrubberDidFinishRequestingThumbnails:
movieScrubberWillBeginEditing:
movieScrubberDidBeginEditing:
movieScrubberDidCancelEditing:
movieScrubberEditingAnimationFinished:
movieScrubber:willZoomToMinimumValue:maximumValue:
movieScrubberDidBeginAnimatingZoom:
movieScrubberDidEndAnimatingZoom:
prefersThumbVisible
_prefersThumbVisible
_trimming
_dataSource
_movieScrubber
T@"UIMovieScrubber",&,V_movieScrubber
trimming
TB,N,GisTrimming,V_trimming
T@"<AVEditViewDataSource>",W,N,V_dataSource
T@"<AVEditViewDelegate>",W,N,V_delegate
TB,N,V_prefersThumbVisible
time
dataType
internetDateFormatter
stringFromDate:
startDate
extraAttributes
setIdentifier:
localeWithLocaleIdentifier:
setLocale:
setTime:
setDuration:
dateFromString:
setStartDate:
setExtraAttributes:
itemArrayWithAirRepresentations:
setPagingEnabled:
_setInterpageSpacing:
setDirectionalLockEnabled:
incomingContentView
contentTransitioningViewShouldBeginDragging:locationInView:
_updateTransitionStateIfPossible
valueWithCGPoint:
setTargetContentOffset:
setTransitionInteractive:
_isAdjustingBoundsOrContentSize
_canTransitionFromState:toState:
_descriptionForState:
_updateSizeAndContentFrame
_performBoundsOrContentSizeAdjustment:
_makeStateDescription
setStateDescription:
contentTransitioningViewDidChangeTransitionStatus:oldState:oldTransitionDirection:oldProgress:
_setTransitionState:transitionDirection:transitionProgress:
contentTransitioningView:shouldBeginTransitionWithDirection:
contentTransitioningPlayerContentViewForTransition:
targetContentOffset
setContentOffset:animated:
CGPointValue
frameForActiveContentView
frameForTransitioningContentView
_isHorizontalBouncing
_frameExcludingTransitioningContent
_frameExcludingActiveContent
transitionState
_interpageSpacing
stateDescription
transitionDirection
numberWithInteger:
numberWithLong:
boundsOrContentSizeAdjustmentCount
setBoundsOrContentSizeAdjustmentCount:
setFrameForActiveContentView:
setFrameForTransitioningContentView:
_ensureContentViews
performTransition:
transitionProgress
setContentTransitioningDelegate:
isTransitionInteractive
_transitionInteractive
_transitionState
_transitionDirection
_transitionProgress
_contentTransitioningDelegate
_incomingContentView
_targetContentOffset
_stateDescription
_boundsOrContentSizeAdjustmentCount
_frameForActiveContentView
_frameForTransitioningContentView
T@"NSValue",&,N,V_targetContentOffset
T@"NSString",C,N,V_stateDescription
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_frameForActiveContentView
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_frameForTransitioningContentView
Tq,N,V_boundsOrContentSizeAdjustmentCount
transitionInteractive
TB,N,GisTransitionInteractive,V_transitionInteractive
T@"<AVPlaybackContentTransitioningViewDelegate>",W,N,V_contentTransitioningDelegate
T@"AVPlaybackContentContainerView",R,N,V_incomingContentView
Tq,R,N,V_transitionState
Tq,R,N,V_transitionDirection
Td,R,N,V_transitionProgress
initWithStyle:
initWithRootViewController:
navigationItem
setRightBarButtonItem:
setModalPresentationCapturesStatusBarAppearance:
navigationBar
_mediaSelectionTableViewController
setTitle:
playerControllerMediaSelectionChanged:
colorEffectSaturate:
effectWithBlurRadius:
effectCombiningEffects:
initWithEffect:
layerWithFillColor:opacity:filterType:
configWithContentConfig:
contentConfig
configureLayerView:
tableView
setBackgroundView:
registerClass:forCellReuseIdentifier:
lineHeight
setEstimatedRowHeight:
setSeparatorStyle:
numberOfSections
indexPathsForSelectedRows
deselectRowAtIndexPath:animated:
initiallyInteractive
notifyWhenInteractionChangesUsingBlock:
flashScrollIndicators
dequeueReusableCellWithIdentifier:forIndexPath:
section
_isSelectedOrCurrentAudioMediaSelectionOption:
_isSelectedOrCurrentLegibleMediaSelectionOption:
setAccessoryType:
setRepresentedObject:
textLabel
applySecondaryGlyphTintToView:
cellForRowAtIndexPath:
representedObject
visibleCells
indexPathForCell:
tableView:numberOfRowsInSection:
tableView:cellForRowAtIndexPath:
numberOfSectionsInTableView:
tableView:titleForHeaderInSection:
tableView:willDisplayHeaderView:forSection:
tableView:didSelectRowAtIndexPath:
_selectedAudioMediaSelectionOption
_selectedLegibleMediaSelectionOption
_representedObject
T@,&,N,V_representedObject
systemGrayColor
configurationByApplyingConfiguration:
imageNamed:inBundle:compatibleWithTraitCollection:
_imageNamed:compatibileWithTraitCollection:
pictureInPictureButtonStartImageCompatibleWithTraitCollection:
pictureInPictureButtonStopImageCompatibleWithTraitCollection:
initWithPlayerLayer:
initWithContentSource:
_commonInitWithSource:
_startObservationsForContentSource:
_configureContentSourceForVideoCallsIfNeeded:
platformAdapter
_sbdlPlayerController
initialRenderSize
setEnqueuedBufferDimensions:
setOtherPictureInPictureActive:
_setCanStopPictureInPicture:
isOtherPictureInPictureActive
_updateBackgroundPlaybackPolicyFromPlayerController
_stopPictureInPictureAndRestoreUserInterface:
allowsPictureInPictureFromInlineWhenEnteringBackground
setAllowsPictureInPictureFromInlineWhenEnteringBackground:
setCanTogglePictureInPicture:
stopObservingPlayerController:
startObservingPlayerController:
wantsImmediateAssetInspection
setPictureInPictureInterrupted:
setPlayerControllerIsPlayingObservationToken:
playerControllerIsPlayingObservationToken
prerollDelegate
pictureInPictureControllerPrerollAttributes:
_delegateIfRespondsToSelector:
togglePlaybackEvenWhenInBackground:
setWasPlayingWhenPictureInPictureInterruptionBegan:
wasPlayingWhenPictureInPictureInterruptionBegan
pictureInPictureControllerSkipPreroll:
sourceIfRetainedDuringPictureInPicturePlayback
setPictureInPictureSuspended:
setPictureInPictureWasStartedWhenEnteringBackground:
retainsSourceDuringPictureInPicturePlayback
setSourceIfRetainedDuringPictureInPicturePlayback:
dictionaryWithObject:forKey:
_shouldPauseWhenExitingPictureInPicture
sampleBufferDisplayLayer
avkit_removePictureInPicturePlayerController
_invalidateContentSourceForVideoCallsIfNeeded:
invalidatePlaybackState
sampleBufferDisplayLayerRenderSizeDidChangeToSize:
activeVideoCallContentViewController
_startObservingPlayerLayerContentSource:
hasInitialRenderSize
_startObservingSampleBufferDisplayLayerContentSource:
audiovisualBackgroundPlaybackPolicy
_updateEnqueuedBufferDimensions
pictureInPictureButtonStartImage
pictureInPictureButtonStopImage
pictureInPicturePlatformAdapter:stopPictureInPictureAndRestoreUserInterface:
pictureInPicturePlatformAdapter:statusDidChange:fromStatus:
T@"UIImage",R,N
reloadPrerollAttributes
sampleBufferDisplayLayerDidAppear
sampleBufferDisplayLayerDidDisappear
canStopPictureInPicture
setWantsImmediateAssetInspection:
setPrerollDelegate:
_pictureInPictureSuspended
_canStopPictureInPicture
_otherPictureInPictureActive
_wantsImmediateAssetInspection
_wasPlayingWhenPictureInPictureInterruptionBegan
_wantsResourceReduction
_retainsSourceDuringPictureInPicturePlayback
_allowsPictureInPictureFromInlineWhenEnteringBackground
_pictureInPictureWasStartedWhenEnteringBackground
_playerLayer
_platformAdapter
_sourceIfRetainedDuringPictureInPicturePlayback
_playerControllerIsPlayingObservationToken
_prerollDelegate
T@"AVPictureInPicturePlatformAdapter",R,N,V_platformAdapter
T@"<AVPictureInPictureContentSource>",&,N,V_sourceIfRetainedDuringPictureInPicturePlayback
T@,&,N,V_playerControllerIsPlayingObservationToken
TB,N,GisPictureInPictureActive,V_pictureInPictureActive
TB,N,GisPictureInPictureSuspended,V_pictureInPictureSuspended
otherPictureInPictureActive
TB,N,GisOtherPictureInPictureActive,V_otherPictureInPictureActive
TB,N,S_setCanStopPictureInPicture:,V_canStopPictureInPicture
TB,N,V_wantsImmediateAssetInspection
TB,N,V_wasPlayingWhenPictureInPictureInterruptionBegan
T@"<AVPictureInPictureContentSource>",R,W,N,V_source
T@"AVPictureInPictureViewController",R,N
TB,R,N,V_wantsResourceReduction
TB,N,V_retainsSourceDuringPictureInPicturePlayback
TB,N,V_allowsPictureInPictureFromInlineWhenEnteringBackground
TB,N,V_pictureInPictureWasStartedWhenEnteringBackground
T@"<AVPictureInPicturePrerollDelegate>",W,N,V_prerollDelegate
T@"AVPictureInPictureControllerContentSource",&,N,V_contentSource
T@"AVPlayerLayer",R,N,V_playerLayer
T@"<AVPictureInPictureControllerDelegate>",W,N,V_delegate
_activeVideoCallContentViewController
version
_activeVideoCallSourceView
_initialRenderSize
_sampleBufferDisplayLayer
_sampleBufferPlaybackDelegate
_hasInitialRenderSize
__activeVideoCallSourceView
__activeVideoCallContentViewController
T@"<AVPictureInPictureContentSource>",R,N
T@,R,W,N,V__activeVideoCallSourceView
T@"<AVPictureInPictureContentSource>",R,N,V__activeVideoCallContentViewController
TB,R,N,V_hasInitialRenderSize
initWithSampleBufferDisplayLayer:initialRenderSize:playbackDelegate:
initWithSampleBufferDisplayLayer:playbackDelegate:
sampleBufferPlaybackDelegate
T@"AVSampleBufferDisplayLayer",R,N
T@"<AVPictureInPictureSampleBufferPlaybackDelegate>",R,W,N
initWithActiveVideoCallSourceView:contentViewController:
T@"AVPictureInPictureVideoCallViewController",R,N
_avkit_timeForFrameUsingSampleCursorSteppedByFrameCount:fromFrameAtTime:
_avkit_findTimeForFrameUsingFrameRateSteppedByFrameCount:fromFrameAtTime:
nominalFrameRate
_avkit_frameRateIsValid:
minFrameDuration
avkit_timeForFrameSteppedByFrameCount:fromFrameAtTime:
isPIPModeEnabled
avkit_makePictureInPicturePlatformAdapterContentPlaceholderLayer
_buttonTouchUpInside:
setTitleFont:
setUsesBackgroundEffectViewForTextOnlyButtons:
_updateButton
_updateTintColor
secondaryGlyphTintColor
tintColor
applyGlyphTintColor:toView:
setAccessibilityAttributedLabel:
setAccessibilityHint:
setAccessibilityAttributedHint:
action
setImage:forState:
titleFont
initWithTitle:type:
setImage:
setAction:
_titleFont
_image
_action
_tintColor
Tq,R,N,V_type
T@"NSString",C,N,V_title
T@"UIImage",&,N,V_image
T@?,C,N,V_action
T@"UIColor",&,N,V_tintColor
text
font
loadingIndicatorAlignment
numberOfLines
labelIfLoaded
label
isEqualToAttributedString:
setAttributedText:
didMoveToSuperview
tintColorDidChange
translatesAutoresizingMaskIntoConstraints
centerYAnchor
loadingIndicatorLeftAlignmentConstraint
loadingIndicatorRightAlignmentConstraint
setLoadingIndicatorAlignment:
viewForFirstBaselineLayout
viewForLastBaselineLayout
attributedText
setLoadingIndicatorLeftAlignmentConstraint:
setLoadingIndicatorRightAlignmentConstraint:
_label
_loadingIndicatorAlignment
_text
_attributedText
_font
_numberOfLines
_loadingIndicatorLeftAlignmentConstraint
_loadingIndicatorRightAlignmentConstraint
T@"UILabel",R,N,V_label
T@"UILabel",R,N
T@"UIActivityIndicatorView",R,N,V_loadingIndicator
Tq,N,V_numberOfLines
T@"NSLayoutConstraint",&,N,V_loadingIndicatorLeftAlignmentConstraint
T@"NSLayoutConstraint",&,N,V_loadingIndicatorRightAlignmentConstraint
Tq,N,V_loadingIndicatorAlignment
T@"NSString",C,N,V_text
T@"NSAttributedString",C,N,V_attributedText
T@"UIFont",&,N,V_font
_stopManagingContentView
_beginManagingContentViewIfNeeded
needsInitialLayout
setNeedsInitialLayout:
_needsInitialLayout
TB,N,V_needsInitialLayout
T@"UIView",&,N,V_contentView
initWithStartTime:duration:
timeRange
initWithCMTimeRange:
CMTimeRangeValue
dateByAddingTimeInterval:
timeIntervalSinceDate:
endTime
startCMTime
endCMTime
endDate
deltaTimeFromOutsideTime:
timeRangeZero
initWithStartTime:endTime:
setMapTime:toDate:
timeRangeByAddingTimeInterval:shiftingDates:
isEqualToDate:
isEqualToTimeRange:
setStyle:
setFormatTemplate:
stringFromSeconds:
setDateStyle:
setTimeStyle:
initWithAVTimedMetadataGroup:
initWithUnionOfCMTimeRanges:
setMapDate:toTime:
dateForTime:
timeForDate:
cmTimeRange
containsTime:
containsDate:
pinnedTime:
timeRangeIntersectingWithTimeRange:
timeRangeExcludingTimeRange:
timeRangeByAddingTimeInterval:
_startDate
T{?=qiIq},R
T@"NSDate",&,N,V_startDate
Td,R
initWithTimeRanges:
timeRanges
displayTimeFromTime:
enumerateObjectsWithOptions:usingBlock:
arrayOfDisplayTimesMatching:
timeFromDisplayTime:
isCollapsedInTimeLine
timeRangeContainingTime:
initWithTimedMetadataGroups:
timeRangeClosestToTime:
timeRangeBeforeTime:
timeRangeAfterTime:
arrayOfBoundaryTimes
arrayOfDisplayTimes
timeRangesBetweenDisplayTime:and:
displayTimeRangeTrimmedToTimeRange:
combinedDuration
_timeRanges
_combinedDuration
T@"NSArray",R,V_timeRanges
Td,R,V_combinedDuration
hasRouteSharingPolicyLongFormVideo:
longFormVideoRoutingSessionManager
currentRoutingSession
prefersLikelyDestinationsOverCurrentRoutingSession
destination
providesExternalVideoPlayback
externalPlaybackStateDescriptionForState:
likelyExternalDestinations
initWithConfiguration:
startPrewarming
routingContextUID
outputContextForID:
outputDevices
deviceType
_invokeClientCompletionHandlerWithPlaybackState:
setDismissHandlerWithReason:
present
willBeginPlaybackWithCompletionHandler:
_mediaControls
_clientCompletionHandler
punctuationCharacterSet
componentsSeparatedByCharactersInSet:
stringIsValidNumericValue:
decimalDigitCharacterSet
invertedSet
rangeOfCharacterFromSet:
initWithTimecodeString:
timecodeStruct
setTimecodeStruct:
frameNumber
setFrameNumber:
frameDuration
setFrameDuration:
tc_flags
setTc_flags:
_tc_flags
_frameNumber
_timecodeStruct
_frameDuration
T{CVSMPTETime=ssIIIssss},N,V_timecodeStruct
Tq,N,V_frameNumber
T{?=qiIq},N,V_frameDuration
TI,N,V_tc_flags
readTimecodes
calculateFrameNumberAtCMTime:
timecodeForFrameNumber64UsingCachedDescription:
offsetFor:fromTimecode:
timecodeForOffset:from:timecode:
validateCMTime:
naturalTimeScale
timecodeForFrameNumber32UsingFormatDescription:timecodeStartFrame:
timecodeTrack
initWithAsset:error:
assetReaderTrackOutputWithTrack:outputSettings:
addOutput:
startReading
copyNextSampleBuffer
cacheTimecodeDescriptionForSampleBuffer:
cancelReading
calculateMaxFrameAndTimecode
initWithTimecodeTrack:videoTrack:
maxTimecodeString
maxFrameCountString
calculateTimecodeAtFrame:
calculateFrameNumberAtTimecode:
calculateFrameNumberAtTimeInterval:
timeIntervalForFrameNumber:
timecodeAvailable
setTimecodeTrack:
observationInterval
_frameCount
_videoTrack
_timecodeTrack
_timecodes
_maxTimecode
_maxFrameNumber
_timeObserver
_observationInterval
T@"AVAssetTrack",&,N,V_timecodeTrack
T{?=qiIq},R,N,V_observationInterval
_setStatusAndNotifyDelegateIfNeeded:
collectionWithRates:
_initInternalWithRates:
selectNextPlaybackRate:
_rates
_selectedRate
T@"NSArray",R,N
T@"AVPlaybackRate",R,N,V_selectedRate
setValue:forKey:
valueWithCAColorMatrix:
colorWithRed:green:blue:alpha:
updateGroupLeader
groupLeader
activeBackdropEffect
forceLowQualityEffect
dependents
_enumerateDependents:
setActiveBackdropEffect:
_updateFilters
captureOnly
setCaptureOnly:
removeDependent:
addDependent:
updateActiveBackdropEffectIfGroupLeader
setGroupLeader:
_ensureDependents
isCaptureOnly
groupName
setGroupName:
setFilters:
blurFilter
colorMatrixFilter
customBackgroundColor
averageFilter
reducedTransparencyColor
filters
setCustomBackgroundColor:
setForceLowQualityEffect:
_forceLowQualityEffect
_customBackgroundColor
_groupLeader
_dependents
_activeBackdropEffect
T@"AVCABackdropLayerView",W,N,V_groupLeader
T@"NSHashTable",R,N,V_dependents
Tq,N,V_activeBackdropEffect
TB,N,GisCaptureOnly
TB,N,V_forceLowQualityEffect
T@"UIColor",C,N,V_customBackgroundColor
unscaledSize
begin
setDisableActions:
setPosition:
commit
_defaultActiveTintColor
_createOrUpdateRoutePickerButton
activeTintColor
getRed:green:blue:alpha:
setSortByIsVideoRoute:
_routePickerButtonTapped:
buttonWithType:
setContentEdgeInsets:
setContentHorizontalAlignment:
setContentVerticalAlignment:
initWithPackageName:layoutDirection:
removeCompositingFiltersWithName:
addSublayer:
_routePickerButtonTouchDown:
_routePickerButtonTouchDragEnter:
_routePickerButtonTouchUp:
routePickerViewWillBeginPresentingRoutes:
routePickerViewDidEndPresentingRoutes:
overrideRouteSharingPolicyForRoutePickerView:
overrideRoutingContextUIDForRoutePickerView:
initWithRouteSharingPolicy:routingContextUID:
setDismissHandler:
_setRoutePickerButtonAlpha:animated:
isRunning
isInterruptible
stopAnimation:
finishAnimationAtPosition:
initWithDuration:curve:animations:
_updateAirPlayActive
_isAirPlayActive
setAirPlayActive:
setActiveTintColor:
setCustomButton:
presentRoutePicker:
_registerNotifications
_setupOutputContext
_normalizedRect:fromView:
routePickerButtonStyle
setRoutePickerButtonStyle:
_getAirPlayStatusQueue
_activeTintColor
_routePickerButton
_oldSize
_buttonHighlightAnimator
_outputContext
_airPlayActive
_prioritizesVideoDevices
_routePickerButtonMicaPackage
_routePickingControls
_routePickerButtonStyle
T@"<AVRoutePickerViewDelegate>",W,N,V_delegate
T@"UIColor",&,N
Tq,N,V_routePickerButtonStyle
initWithDisplayScale:placeholderImage:opaque:
layoutSublayers
videoRectWhenPIPBegan
contentLayer
setBounds:
setCustomText:
customText
_contentLayer
_videoRectWhenPIPBegan
T@"AVPictureInPictureIndicatorSublayer",R,N,V_contentLayer
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_videoRectWhenPIPBegan
initWithString:attributes:
ascender
setContents:
setContentsGravity:
setContentsScale:
setFontSize:
setForegroundColor:
setAlignmentMode:
setString:
setTruncationMode:
setWrapped:
canRenderAttributedTextWithoutTruncationInsideRect:
layoutSublayersWithTextAndImageUsingInsetBounds:
textBoundingRectWhenDrawnInRect:
boundingRectWithSize:options:context:
_imageSize
_languageAwareOutsets
_lineHeight
_baselineOffset
_textLayer
_imageLayer
_customText
T@"NSString",C,N,V_customText
_ensureOrRemoveLayoutView
applyPrimaryGlyphTintToView:
secondaryMaterialOverlayView
_updateBackdropShape
layoutView
setPrefersLowQualityEffects:
isCircular
automaticallyDrawsRoundedCorners
_isContainedInOverlappingBackgroundView
setLayoutView:
prefersLowQualityEffects
sendSubviewToBack:
addSubview:applyingMaterialStyle:tintEffectStyle:
setAutomaticallyDrawsRoundedCorners:
setCircular:
_automaticallyDrawsRoundedCorners
_prefersLowQualityEffects
_circular
_layoutView
T@"AVLayoutView",&,N,V_layoutView
TB,N,V_automaticallyDrawsRoundedCorners
TB,N,V_prefersLowQualityEffects
circular
TB,N,GisCircular,V_circular
setIsAccessibilityElement:
_updateMicaPackage:
showsHighlightedAppearance
highlightAnimator
micaPackageContainerView
setHighlightAnimator:
setCumulativeTranslationSincePanningBegan:
setTranslationOfPanFromPreviousTouch:
setLocationOfTouchInWindow:
setShowsHighlightedAppearance:
micaPackageStateName
transform
isLongPressEnabled
trackingState
setTrackingState:
setLongPressTimer:
longPressTimer
preciseLocationInView:
setInitialPreciseLocationOfTouch:
force
initialPreciseLocationOfTouch
precisePreviousLocationInView:
cumulativeTranslationSincePanningBegan
translationOfPanFromPreviousTouch
imageNameForMicaPackageState
removeFromSuperlayer
imageView
avkit_imageNamed:completion:
volumeControllerType
position
setMicaPackageStateName:
triggerSelectionChangedFeedback
setNeedsUpdateGlyphRenderingMode
setLongPressEnabled:
locationOfTouchInWindow
setImageView:
setMicaPackageContainerView:
_trackingState
_longPressEnabled
_showsHighlightedAppearance
_micaPackageStateName
_highlightAnimator
_micaPackage
_micaPackageContainerView
_longPressTimer
_volumeControllerType
_translationOfPanFromPreviousTouch
_cumulativeTranslationSincePanningBegan
_locationOfTouchInWindow
_initialPreciseLocationOfTouch
T@"UIViewPropertyAnimator",W,N,V_highlightAnimator
T@"AVMicaPackage",&,N,V_micaPackage
T@"UIImageView",&,N,V_imageView
T@"UIView",&,N,V_micaPackageContainerView
T{CGPoint=dd},N,V_initialPreciseLocationOfTouch
T@"NSTimer",W,N,V_longPressTimer
Tq,N,V_trackingState
TB,N,V_showsHighlightedAppearance
Tq,N,V_volumeControllerType
T@"NSString",&,N,V_micaPackageStateName
longPressEnabled
TB,N,GisLongPressEnabled,V_longPressEnabled
T{CGPoint=dd},N,V_translationOfPanFromPreviousTouch
T{CGPoint=dd},N,V_cumulativeTranslationSincePanningBegan
T{CGPoint=dd},N,V_locationOfTouchInWindow
automaticallyNotifiesObserversOfCurrentTime
interval
setInterval:
setMinTime:
maxTime
setMaxTime:
_interval
_currentTime
_timer
_minTime
_maxTime
Td,V_minTime
Td,V_maxTime
T@"<AVTimeControlling>",&
targetTime
setTargetTime:
seekableTimeRanges
targetTimeWithinEndTimes
setTargetTimeWithinEndTimes:
remainingTargetTimeWithinEndTimes
setCurrentTimeWithinEndTimes:
remainingTime
remainingTimeWithinEndTimes
seekableTimeRangeDuration
isCurrentTimeAtEndOfSeekableTimeRanges
keyPathsForValuesAffectingTargetTime
keyPathsForValuesAffectingTargetTimeWithinEndTimes
keyPathsForValuesAffectingRemainingTargetTimeWithinEndTimes
keyPathsForValuesAffectingCurrentTimeWithinEndTimes
keyPathsForValuesAffectingRemainingTime
keyPathsForValuesAffectingRemainingTimeWithinEndTimes
keyPathsForValuesAffectingSeekableTimeRangeDuration
keyPathsForValuesAffectingCurrentTimeAtEndOfSeekableTimeRanges
currentTimeAtEndOfSeekableTimeRanges
TB,R,GisCurrentTimeAtEndOfSeekableTimeRanges
minTiming
maxTiming
initWithTimeInterval:queue:block:repeats:
currentTotalSize
setCurrentTotalSize:
valueWithSize:
requiredPrioritySizes
veryHighPrioritySizes
highPrioritySizes
mediumPrioritySizes
lowPrioritySizes
sizeValue
removeLastSizeOfPriority:
sizesResolvingFirstPrioritizedSize:secondPrioritizedSize:inAvailableWidth:
addSize:withPriority:
setRequiredPrioritySizes:
setVeryHighPrioritySizes:
setHighPrioritySizes:
setMediumPrioritySizes:
setLowPrioritySizes:
_requiredPrioritySizes
_veryHighPrioritySizes
_highPrioritySizes
_mediumPrioritySizes
_lowPrioritySizes
_currentTotalSize
T@"NSMutableArray",&,N,V_requiredPrioritySizes
T@"NSMutableArray",&,N,V_veryHighPrioritySizes
T@"NSMutableArray",&,N,V_highPrioritySizes
T@"NSMutableArray",&,N,V_mediumPrioritySizes
T@"NSMutableArray",&,N,V_lowPrioritySizes
T{CGSize=dd},N,V_currentTotalSize
_updateZoomingView
contentZoomingView
setContentZoomingView:
setPlaybackContentContainerView:
doubleTapGestureRecognizer
_handleDoubleTapGestureRecognizer:
setDoubleTapGestureRecognizer:
_contentZoomingView
_doubleTapGestureRecognizer
T@"AVZoomingBehavior",W,N,V_behavior
T@"AVPlaybackContentZoomingView",&,N,V_contentZoomingView
T@"UITapGestureRecognizer",&,N,V_doubleTapGestureRecognizer
contentTransitionView
_transitionDirectionForContentTransitionType:
contentTransitionTypeForTransitionDirection:
updateStartLeftRightContentTransitionButtonsEnabled
isStartPreviousContentTransitionButtonEnabled
isStartNextContentTransitionButtonEnabled
activeContentTransitionType
startContentTransition:
transportControlsView
setCustomContentTransitioningInfoPanel:
interactiveGestureTracker
setStyleSheetShouldUseCompactFullScreenItemSize:
customContentTransitioningInfoPanel
setContentTransitionView:
setContentTransitioningPlayer:
contentTransitioningPlayer
setVideoGravityForTransitioningContent:
contentTransitioningOverlayView
setStartNextContentTransitionButtonEnabled:
setStartPreviousContentTransitionButtonEnabled:
_startNextContentTransitionButtonEnabled
_startPreviousContentTransitionButtonEnabled
_contentTransitioningPlayer
_customContentTransitioningInfoPanel
_contentTransitionView
T@"AVPlayer",&,N,V_contentTransitioningPlayer
T@"AVPlaybackContentTransitioningView",&,N,V_contentTransitionView
T@"AVNewsWidgetPlayerBehavior",W,N,V_behavior
contentTransitionInteractive
TB,R,N,GisContentTransitionInteractive
startNextContentTransitionButtonEnabled
TB,N,GisStartNextContentTransitionButtonEnabled,V_startNextContentTransitionButtonEnabled
startPreviousContentTransitionButtonEnabled
TB,N,GisStartPreviousContentTransitionButtonEnabled,V_startPreviousContentTransitionButtonEnabled
T@"UIView",&,N,V_customContentTransitioningInfoPanel
legacyDelegate
playerViewController:playerForContentTransitionType:
playerViewControllerWillBeginContentTransition:
playerViewController:didUpdateContentTransitionProgress:
playerViewControllerWillCompleteContentTransition:
playerViewControllerDidCompleteContentTransition:
playerViewControllerWillCancelContentTransition:
playerViewControllerDidCancelContentTransition:
setLegacyDelegate:
_legacyDelegate
T@"<AVPlayerViewControllerContentTransitioning_NewsOnly>",W,N,V_legacyDelegate
_newsWidgetPlayerBehaviorContext
_newsWidgetPlayerLegacyBehavior
behaviorContextOfClass:
behaviorOfClass:
T@"AVPlayer",R,N
T@"<AVPlayerViewControllerContentTransitioning_NewsOnly>",W,N
TB,N,GisStartNextContentTransitionButtonEnabled
TB,N,GisStartPreviousContentTransitionButtonEnabled
T@"UIView",&,N
transitionDuration
transitionAnimator
fractionComplete
isReversed
initWithAnimationCurve:
clientAnimator
setScrubsLinearly:
allAnimators
transitionBackgroundViewBackgroundColor:
transitionPresentedViewBackgroundColor:
_presentationTransitionWillBegin
_dismissalTransitionWillBegin
transitionStyle
insertSubview:belowSubview:
_updateCornerAppearanceAttributesOfView:toSourceView:similarity:
_sourceViewFrameInContainerView
interfaceRotation
willStartPresentationTransitionFromInterfaceOrientation:toOrientation:needsCounterRotation:
counterRotationTransform
viewControllerForKey:
finalFrameForViewController:
insertSubview:below:
willStartDismissalTransitionFromInterfaceOrientation:toOrientation:needsCounterRotation:
pauseInteractiveTransition
pauseAnimation
makeObjectsPerformSelector:
addKeyframeWithRelativeStartTime:relativeDuration:animations:
animateKeyframesWithDuration:delay:options:animations:completion:
updateInteractiveTransition:
setFractionComplete:
finishInteractiveTransition
_animateFinishInteractiveTransition
completeTransition:
_startOrContinueAnimatorsReversed:
_freezeDismissingViewForFinishing
cancelInteractiveTransition
_animateAlongsideInteractivePresentationTransitionAnimationForCancelling
_animateAlongsideInteractiveDismissalTransitionAnimationForCancelling
_alongsideAnimationsCount
__runAlongsideAnimations
_dismissalTransitionDidEnd:
_presentationTransitionDidEnd:
transitionWillComplete:success:continueBlock:
setReversed:
timingParameters
continueAnimationWithTimingParameters:durationFactor:
cornerCurve
initWithTransitionContext:
transitionAnimatorProgress
startInteractiveTransition
updateWithPercentComplete:scale:translation:rotation:
addRunAlongsideAnimationsIfNeeded
_initialFrameForPresentedView
_finalFrameForPresentedView
_transformForScale:translation:rotation:locationInWindow:sourceRectInContainerView:
setPresentationContext:
_presentationContext
_transitionAnimator
_clientAnimator
_allAnimators
T@"<UIViewControllerContextTransitioningEx>",R,W,N,V_transitionContext
T@"UIViewPropertyAnimator",R,N,V_transitionAnimator
T@"UIViewPropertyAnimator",R,N,V_clientAnimator
T@"NSMutableArray",R,N,V_allAnimators
T@"AVPresentationContext",&,N,V_presentationContext
T@"<AVTransitionDelegate>",W,N,V_delegate
initWithLayoutRowHeads:
arrayWithCapacity:
rowHeads
firstAttributesInLayoutOrder
_heightForRow:startingFrom:inBoundingSize:
rowSpacing
_lastVisibleLayoutItemAttributesFrom:
_flexibleWidthMapForLayoutItemsBeginningWithLayoutItem:endingWithItem:withAvailableSize:
trailingInterItemSpace
hasFlexibleContentSize
valueWithRect:
nextAttributesInLayoutOrder
enumerateObjectsUsingBlock:
firstAttributesInPriorityOrder
canSubstituteOtherAttributes
canOnlyAppearInControlOverflowMenu
canOverflowToAuxiliaryMenu
displayPartnerAttributes
nextAttributesInPriorityOrder
itemsThatFitSize:
displayPriority
layoutFramesInBoundingSize:
prioritizedSizeThatFitsSize:
setRowSpacing:afterRow:
layoutHeightThatFitsRowsStartingWithRow:
debugIdentifier
setDebugIdentifier:
setRowHeads:
setRowSpacing:
_debugIdentifier
_rowHeads
_rowSpacing
T@"NSArray",&,N,V_rowHeads
T@"NSMutableArray",&,N,V_rowSpacing
T@"NSString",C,N,V_debugIdentifier
initWithSize:
fillRect:
imageWithActions:
resizableImageWithCapInsets:
imageWithRenderingMode:
initWithImageName:font:prefersWesternLatinDigits:
avkit_loadedImageConfigurations
currentLocale
languageCode
imageWithConfiguration:
_avkit_imageLoadingQueue
configurationWithTextStyle:scale:
initWithString:font:
_avkit_textImageCache
_avkit_imageWithSize:ofText:font:scaleFactor:
setObject:forKey:
fontWithSize:
sizeWithAttributes:
drawAtPoint:withAttributes:
imageOrientation
imageWithCGImage:scale:orientation:
setCountLimit:
avkit_imageWithSymbolNamed:textStyle:scale:
avkit_imageWithSize:ofText:font:scaleFactor:completion:
prefersWesternLatinDigits
imageName
_suppressesAccessibilityHairlineThickening
string
_prefersWesternLatinDigits
_string
T@"NSString",R,C,N,V_string
T@"UIFont",R,N,V_font
TB,R,N,V_prefersWesternLatinDigits
numberingSystem
_loadRootLayerIfNeeded
_setState:
_recursivelySetFillColor:rootLayer:
_recursivelyRemoveCompositingFiltersWithName:rootLayer:
classSubstitions
transitionToStateWithName:
sublayers
_recursivelyFindSublayerWithName:rootLayer:
setFillColor:
compositingFilter
transitionToStateWithName:onLayer:
stateWithName:
stateController
setState:ofLayer:transitionSpeed:
availableStatesOnLayer:
states
packageName
layoutDirection
activateBackground:
parser
parseContentsOfURL:
result
initWithLayer:
CAMLParser:resourceForURL:
CAMLParser:didLoadResource:fromURL:
CAMLParser:didFailToLoadResourceFromURL:
CAMLParser:didFailToFindClassWithName:
CAMLParser:evaluateScriptElement:sourceURL:lineNumber:
CAMLParser:evaluateScriptValue:sourceURL:lineNumber:
CAMLParser:formatWarningString:arguments:lineNumber:
CAMLParser:formatErrorString:arguments:lineNumber:
stateController:didSetStateOfLayer:
stateController:transitionDidStart:speed:
stateController:transitionDidStop:completed:
availableStates
sublayerWithName:
targetSize
setUnscaledSize:
setLayoutDirection:
setRootLayer:
_packageName
_stateController
_layoutDirection
_rootLayer
_targetSize
_unscaledSize
T@"CAStateController",R,N,V_stateController
T{CGSize=dd},N,V_unscaledSize
Tq,N,V_layoutDirection
T@"CALayer",&,N,V_rootLayer
T@"NSString",R,C,N,V_state
T{CGSize=dd},N,V_targetSize
T@"NSString",R,N,V_packageName
includedControlType
setIncludedControlType:
setVolumeButtonMicaPackageStateName:
volumeButtonContainer
_makeProminentPlayButtonAndContainerIfNeeded
prominentPlayButtonContainer
_makeVolumeButtonAndContainerIfNeeded
isEqualToValue:
_updateFramesAndHitRectInsets
_frameForIncludedViewType:
UIEdgeInsetsValue
_makeVolumeButtonAndContainer
setVolumeButtonContainer:
setVolumeButton:
volumeButtonMicaPackageStateName
_makeProminentPlayButtonAndContainer
setInlineFont:
setTintEffectStyle:
setProminentPlayButtonContainer:
initWithFrame:styleSheet:
hasVisibleControls
_includedControlType
_volumeButtonMicaPackageStateName
_prominentPlayButtonContainer
_volumeButtonContainer
T@"UIView",&,N,V_prominentPlayButtonContainer
T@"AVButton",W,N,V_prominentPlayButton
T@"UIView",&,N,V_volumeButtonContainer
T@"AVVolumeButtonControl",W,N,V_volumeButton
T@"UIView",R,N,V_contentView
Tq,N,V_includedControlType
T@"NSString",C,N,V_volumeButtonMicaPackageStateName
T{CGAffineTransform=dddddd},N,V_overrideTransformForProminentPlayButton
T@"NSValue",&,N,V_overrideLayoutMarginsWhenEmbeddedInline
animations
completions
performCoordinatedAnimations
didFinishAnimations:
_animations
_completions
T@"NSMutableArray",R,N,V_animations
T@"NSMutableArray",R,N,V_completions
UTF8String
_invalidated
Td,R,V_interval
_determineIsReadyToConnect
_startObservingPlayer
_loadSecondScreenViewControllerIfNeeded
setSourcePlayerLayer:
_postNotification:oldValue:newValue:
_updateReadyToConnect
setConnectedSecondScreen:
connectedSecondScreen
setInitialScreenBoundsHint:
_updatePreferredDisplayCriteriaFromPreparedAssetIfNeeded:
setPreferredDisplayCriteria:
initWithRefreshRate:videoDynamicRange:
setReadyToConnect:
_allowsNonAirPlayExternalPlayback
_currentItemIsReadyToPlayVideoOrLoadingWhileActive
allowsExternalPlayback
usesExternalPlaybackWhileExternalScreenIsActive
hasVideo
setPlayerLayer:
setRequiresTVOutScreen:
setMaximumVideoResolution:
isReady
setReady:
_readyToConnect
_active
_playing
_requiresTVOutScreen
_ready
_debugAssistant
_connectedSecondScreen
_preferredDisplayCriteria
_maximumVideoResolution
active
TB,N,GisActive,V_active
T@"AVSecondScreen",W,N,V_connectedSecondScreen
T@"AVDisplayCriteria",&,N,V_preferredDisplayCriteria
T{CGSize=dd},N,V_maximumVideoResolution
ready
TB,N,GisReady,V_ready
playing
TB,N,GisPlaying,V_playing
TB,N,V_requiresTVOutScreen
T@"AVSecondScreenViewController",&,N,V_secondScreenViewController
T@"AVPlayer",R,N,V_player
T@"AVPlayerLayer",R,W,N,V_playerLayer
readyToConnect
TB,R,N,GisReadyToConnect,V_readyToConnect
T@"AVSecondScreenDebugAssistant",R,N,V_debugAssistant
T@"AVDisplayCriteria",&,D,N
TB,D,N,GisReadyToConnect
TB,D,N,GisPlaying
TB,D,N
keyValueObservationController
setKeyValueObservationController:
T@"AVObservationController",&,N,V_keyValueObservationController
setWillBeginOrientationChange:
willBeginOrientationChange
fromOrientation
toOrientation
avkit_overrideLayoutMarginsForInterfaceOrientation:
setBeingPresented:
setFromOrientation:
setToOrientation:
setCounterRotatingContentView:
setBeingDismissed:
_radiansForCounterRotation
wantsAppearanceConfigValues
actualView
presentationContainerContentView
_contentTransform
_setCornerRadius:
_counterRotatingContentView
_wantsAppearanceConfigValues
_beingPresented
_beingDismissed
_willBeginOrientationChange
_presentationContainerContentView
_fromOrientation
_toOrientation
T@"AVPresentationContainerViewLayer",R,D,N
counterRotatingContentView
TB,N,GisCounterRotatingContentView,V_counterRotatingContentView
beingPresented
TB,N,GisBeingPresented,V_beingPresented
beingDismissed
TB,N,GisBeingDismissed,V_beingDismissed
Tq,N,V_fromOrientation
Tq,N,V_toOrientation
TB,N,V_willBeginOrientationChange
T@"UIView",W,N,V_presentationContainerContentView
T@"AVPresentationContainerViewAppearanceProxy",R,N
TB,N,V_wantsAppearanceConfigValues
_clipsToBounds
_actualView
_cornerCurve
_maskedCorners
_backgroundColor
T@"UIView",W,N,V_actualView
T@"NSString",&,N,V_cornerCurve
TQ,N,V_maskedCorners
Td,N,V_cornerRadius
T@"UIColor",&,N,V_backgroundColor
TB,N,V_clipsToBounds
setMasksToBounds:
continuousCorners
setContinuousCorners:
_appearanceProxy
T@"AVPresentationContainerViewAppearanceProxy",R,N,V_appearanceProxy
setLineSeparator:
setHeaderBodySeparator:
setBodyLengthKey:
setCompressionMethodKey:
dataUsingEncoding:
setLineSeparatorData:
setHeaderBodySeparatorData:
lineSeparator
lineSeparatorData
headerBodySeparator
headerBodySeparatorData
bodyLengthKey
messagePartsWithData:lineSeparator:data:headerBodySeparator:data:bodyLengthKey:
compressionMethodKey
decompressBodyUsingNamedAlgorithm:
setUncompressedBodyData:
initWithLineSeparator:headerBodySeparator:bodyLengthKey:compressionMethodKey:
_lineSeparator
_headerBodySeparator
_bodyLengthKey
_compressionMethodKey
_lineSeparatorData
_headerBodySeparatorData
T@"NSString",C,N,V_lineSeparator
T@"NSString",C,N,V_headerBodySeparator
T@"NSString",C,N,V_bodyLengthKey
T@"NSString",C,N,V_compressionMethodKey
T@"NSData",&,N,V_lineSeparatorData
T@"NSData",&,N,V_headerBodySeparatorData
T@"AVMessageParser",R,N
headers
_identifyUniqueAndRepeatedHeadersIfNecessary
JSONObjectWithData:options:error:
bodyAsJSON
decompressBodyUsingAlgorithm:
rangeOfData:options:range:
initWithVersion:headers:expectedBodyLength:body:extra:
componentsSeparatedByString:
_setIncomplete
repeatedHeaders
bodyAsUTF8Text
_uniqueHeaders
_repeatedHeaders
_isIncomplete
_version
_headers
_expectedBodyLength
_rawBodyData
_extraData
_uncompressedBodyData
T@"NSData",&,N,V_uncompressedBodyData
TB,R,N,V_isIncomplete
T@"NSString",R,N,V_version
T@"NSArray",R,N,V_headers
Tq,R,N,V_expectedBodyLength
T@"NSData",R,N,V_rawBodyData
T@"NSData",R,N,V_extraData
T@,R,N
_matchingClass
animationKeys
animationForKey:
containsString:
removeAnimationForKey:
avkit_removeAllSublayerTransformAnimations
_resolvedContentFrame
statusBarBackgroundGradientView
_frameForStatusBarBackgroundGradientView
_updateStatusBarBackgroundGradientViewAlpha
contentOverlayViewSubview
isObservingStatusBarHidden
setObservingStatusBarHidden:
_canShowStatusBarBackgroundGradientWhenStatusBarVisible
_observingStatusBarHidden
_contentOverlayViewSubview
_statusBarBackgroundGradientView
T@"AVStatusBarBackgroundGradientView",R,N,V_statusBarBackgroundGradientView
observingStatusBarHidden
TB,N,GisObservingStatusBarHidden,V_observingStatusBarHidden
T@"UIView",&,N,V_contentOverlayViewSubview
TB,N,V_canShowStatusBarBackgroundGradientWhenStatusBarVisible
labelColor
_loadUIImageWithCompletionHandler:
beginScrubbing:
endScrubbing:
scrubberValueChanged:
setArrangedSubviews:
setCanSubstituteOtherAttributes:
setCanOverflowToAuxiliaryMenu:
setCanOnlyAppearInControlOverflowMenu:
avkit_nonScalingFontWithTextStyle:weight:
scrubInstructionsLabel
detachedExtraContentLayoutView
detachedScrubInstructionsBackdropLabel
_updateFontSizes
controlsLayoutView
reevaluateHiddenStateOfAllItems
systemLayoutSizeFittingSize:
isShowingScrubInstructions
isDoubleRowLayoutEnabled
embeddedExtraContentContainer
sizeThatFits:
traitCollectionDidChange:
liveBroadcastScrubberLabel
liveStreamingControlsIncludeScrubber
liveBroadcastLabel
showsLiveStreamingControls
scrubber
elapsedTimeLabel
timeRemainingLabel
_updateCustomContentTransitioningInfoPanelLayout
_layoutDoubleRowViews
_layoutSingleRowViews
customItems
standardPlayPauseButton
isAnimatingScrubInstructions
canShowScrubInstructions
_showScrubInstructions
singleRowViews
transportControls:scrubberDidBeginScrubbing:
_updateScrubInstructionsLabelsText
_updateScrubInstructionsFrame
transportControls:scrubberDidScrub:
setScrubberValueWhenScrubInstructionsTimerBegan:
scrubInstructionsTimer
transportControls:scrubberDidEndScrubbing:
setShowingScrubInstructions:
setAnimatingScrubInstructions:
transportControlsNeedsLayoutIfNeeded:
skipBackButton
startLeftwardContentTransitionButton
skipForwardButton
startRightwardContentTransitionButton
mediaSelectionButton
playbackSpeedButton
controlOverflowButton
contentLayoutMargins
routePickerView
setContentLayoutMargins:
doubleRowViews
flexibleViewAfterRoutePickerView
flexibleViewAfterSkipForwardButtons
_doubleRowLayoutSpacingAfterSubview:
setTrailingInterItemSpace:
_layoutItemDisplayPriorityForSubview:
setDisplayPriority:
_rowSpacingForDoubleRowLayoutAfterRow:
setDisplayPartnerAttributes:
_singeRowLayoutSpacingAfterSubview:
_scrubInstructionsAttributedText
appendAttributedString:
setDoubleRowLayoutEnabled:
setShowsLiveStreamingControls:
setLiveStreamingControlsIncludeScrubber:
setCustomItems:
_updateVolumeControllerLayout
transportViewIncludesVolumeController
setTransportViewIncludesVolumeController:
minimumRequiredWidth
setDetachedExtraContentLayoutView:
setScrubInstructionsTimer:
scrubberValueWhenScrubInstructionsTimerBegan
setFlexibleViewAfterRoutePickerView:
setFlexibleViewAfterSkipForwardButtons:
_doubleRowLayoutEnabled
_showsLiveStreamingControls
_liveStreamingControlsIncludeScrubber
_transportViewIncludesVolumeController
_showingScrubInstructions
_animatingScrubInstructions
_scrubberValueWhenScrubInstructionsTimerBegan
_minimumRequiredWidth
_scrubber
_elapsedTimeLabel
_timeRemainingLabel
_standardPlayPauseButton
_skipForwardButton
_skipBackButton
_startLeftwardContentTransitionButton
_startRightwardContentTransitionButton
_routePickerView
_mediaSelectionButton
_controlOverflowButton
_playbackSpeedButton
_customItems
_controlsLayoutView
_detachedExtraContentLayoutView
_liveBroadcastLabel
_liveBroadcastScrubberLabel
_embeddedExtraContentContainer
_scrubInstructionsLabel
_detachedScrubInstructionsBackdropLabel
_scrubInstructionsTimer
_flexibleViewAfterRoutePickerView
_flexibleViewAfterSkipForwardButtons
T@"AVLayoutView",R,N,V_controlsLayoutView
T@"AVLayoutView",&,N,V_detachedExtraContentLayoutView
T@"AVLabel",R,N,V_liveBroadcastLabel
T@"AVLabel",R,N,V_liveBroadcastScrubberLabel
T@"AVTouchIgnoringView",R,N,V_embeddedExtraContentContainer
T@"UILabel",R,N,V_scrubInstructionsLabel
T@"AVLabel",R,N,V_detachedScrubInstructionsBackdropLabel
T@"NSTimer",W,N,V_scrubInstructionsTimer
Tf,N,V_scrubberValueWhenScrubInstructionsTimerBegan
T@"AVTouchIgnoringView",&,N,V_flexibleViewAfterRoutePickerView
T@"AVTouchIgnoringView",&,N,V_flexibleViewAfterSkipForwardButtons
showingScrubInstructions
TB,N,GisShowingScrubInstructions,V_showingScrubInstructions
animatingScrubInstructions
TB,N,GisAnimatingScrubInstructions,V_animatingScrubInstructions
T@"<AVTransportControlsViewDelegate>",W,N,V_delegate
doubleRowLayoutEnabled
TB,N,GisDoubleRowLayoutEnabled,V_doubleRowLayoutEnabled
TB,N,V_showsLiveStreamingControls
TB,N,V_liveStreamingControlsIncludeScrubber
TB,N,V_transportViewIncludesVolumeController
Td,R,N,V_minimumRequiredWidth
T@"AVScrubber",R,N,V_scrubber
T@"AVLabel",R,N,V_elapsedTimeLabel
T@"AVLabel",R,N,V_timeRemainingLabel
T@"AVButton",R,N,V_standardPlayPauseButton
T@"AVButton",R,N,V_skipForwardButton
T@"AVButton",R,N,V_skipBackButton
T@"AVButton",R,N,V_startLeftwardContentTransitionButton
T@"AVButton",R,N,V_startRightwardContentTransitionButton
T@"AVPlaybackControlsRoutePickerView",R,N,V_routePickerView
T@"AVButton",R,N,V_mediaSelectionButton
T@"AVControlOverflowButton",R,N,V_controlOverflowButton
T@"AVButton",R,N,V_playbackSpeedButton
T@"NSArray",C,N,V_customItems
strongToStrongObjectsMapTable
behaviorsAndBehaviorContexts
allObjects
AVKitOwner
enumerateAllBehaviorsUsingBlock:
objectEnumerator
enumerateAllBehaviorContextsUsingBlock:
behaviors
enumerateAllBehaviorsConformingToProtocol:usingBlock:
setAVKitOwner:
_AVKitOwner
_behaviorsAndBehaviorContexts
T@,W,N,V_AVKitOwner
T@"NSMapTable",R,N,V_behaviorsAndBehaviorContexts
_transitionStyle
_transitionDuration
TQ,R,N,V_transitionStyle
Td,R,N,V_transitionDuration
displayConfiguration
_isCarScreen
windows
filteredArrayUsingPredicate:
_setAVKitRequestedRefreshRate:HDRMode:overscanCompensation:
_avkit_setPreferredRefreshRate:HDRMode:overscanCompensation:
sharedApplication
setWasCancelledWithInactiveScene:
_wasInitiallyInteractive
_hasAVKitAnimator
_wasCancelledWithInactiveScene
_presenterSupportedOrientations
_finalInterfaceOrientation
TB,N,V_wasInitiallyInteractive
TB,N,V_hasAVKitAnimator
TB,N,V_wasCancelledWithInactiveScene
TQ,N,V_presenterSupportedOrientations
Tq,N,V_finalInterfaceOrientation
T{CGAffineTransform=dddddd},R,N
_muted
_presentationSize
T@"<AVHomeIPCameraActionButtonHandling>",W,N,V_delegate
T{CGSize=dd},N,V_presentationSize
muted
TB,N,GisMuted,V_muted
secondScreenConnectionDidBecomeActive:
secondScreenConnectionDidResignActive:
playbackControlsObservationController
timeResolver
routeDetectorCoordinator
hasStartedUpdates
setHasStartedUpdates:
_updateRouteDetectionEnabled
handleVolumeChange:
handleCurrentRouteSupportsVolumeControlChanged:
_startObservingPotentiallyUnimplementedPlayerControllerProperties
setLoadingIndicatorTimerDelay:
_observeBoolForKeyPath:usingKeyValueObservationController:observationHandler:
_updateEdgeInsetsForLetterboxedContentInContentView:
_updateHasPlaybackBegunSincePlayerControllerBecameReadyToPlay:playing:userDidEndTappingProminentPlayButton:
_updatePrefersInspectionSuspended
setHasBecomeReadyToPlay:
_updateSecondScreenConnectionReadyToConnect
_updateOrCreateTimeResolverIfNeeded
_updatePlaybackControlsVisibleAndObservingUpdates
prefersMuted
setPrefersMuted:
_updateContainerInclusion
_updateControlInclusion
verticalSizeClass
horizontalSizeClass
shouldShowVolumeControlInTransportBar
customAudioItems
_updateVolumeSliderValueWithSystemVolume:animated:
areAnimationsEnabled
isResumingUpdates
setPrefersVolumeSliderExpanded:prefersVolumeButtonIncluded:animated:
_updateVolumeButtonGlyph
_updateSkipButtonsEnableLongPress
playbackRateMenuController
_updatePlaybackSpeedControlInclusion
_updatePlaybackSpeedControlImageNames
_updateVolumeButtonInclusionAndPrefersVolumeSliderExpandedWithPreferredExpansion:
_updateNowPlayingInfoCenter
_updateVideoGravityButtonType
setVolumeController:
playerViewControllerIsPresentingFullScreen
playerViewControllerIsPresentedFullScreen
hasReadableTimecodes
_updateScrubberAndTimeLabels
wantsExternalPlaybackButtonShown
hasPlaybackBegunSincePlayerControllerBecameReadyToPlay
playButtonsShowPauseGlyph
playerViewControllerHasInvalidViewControllerHierarchy
playbackControlsIncludeStartContentTransitionButtons
playerViewControllerIsBeingTransitionedWithResizing
isSeekingEnabled
isPlaybackSuspendedForScrubbing
setCustomControlItems:animations:
_prefersVolumeSliderExpandedAutomatically
setPrefersVolumeSliderExpandedAutomatically:
setResumingUpdates:
setPlaybackControlsView:
isHidingItemsForTransition
beginHidingItemsForTransition
_updatePlaybackControlsVisibilityWantsPlaybackControlsVisible:
setPlaybackViewFrame:
setVisibilityDelegate:
setAlternateFullScreenFont:
setFullscreenAlternateImagePadding:
setAlternateImagePadding:
setMultipleTouchesEndsTracking:
pictureInPictureButton
fullScreenButton
_volumeButtonMicaPackageState
videoGravityButton
setMenu:
actionWithHandler:
addAction:forControlEvents:
playbackSpeedButtonTapped:
skipButtonTouchUpInside:
skipButtonLongPressTriggered:
skipButtonLongPressEnded:
skipButtonForcePressChanged:
startContentTransitionButtonTouchUpInside:
prominentPlayButtonTouchUpInside:
volumeButtonTapTriggered:
volumeButtonLongPressTriggered:
volumeButtonPanChanged:
volumeSliderValueDidChange:
uniqueIdentifer
setupInitialLayout
_updateVolumeControllerView
setTurboModePlaybackControlsPlaceholderView:
playbackControlsViewDidLoad:
turboModePlaybackControlsPlaceholderViewDidLoad:
session
setWindowSceneSessionIdentifier:
setCoveringWindow:
edgeInsetsForLetterboxedContent
addPlaybackContentContainerViewIfNeeded
setPlaybackSuspendedForScrubbing:
setShouldIgnoreTimeResolverUpdates:
flashVolumeControlsWithDuration:
updateVolumeSliderValue:volumeButtonControl:
pendingOrientationChange
customDisplayModeItems
showsDoneButtonWhenFullScreen
showsPictureInPictureButton
canIncludeVideoGravityButton
updateDisplayControlsVisibilityIncludedButtons:
imageWithTintColor:renderingMode:
wasLongPressed
maximumForceSinceTrackingBegan
forceThreshold
_seekByTimeInterval:toleranceBefore:toleranceAfter:
setRateWithForce:
contentTransitionAction
reason
isShowingPlaybackControls
isUserInteracting
isPopoverBeingPresented
showsAudioControls
showPlaybackControls:immediately:
_autoHideControlsAfterDelay:
playbackControlsVisibilityTimer
setShowingPlaybackControls:
volumeControlsContainer
setShowsAudioControls:
setPlaybackControlsVisibilityTimer:
userInteractingCount
setUserInteractingCount:
setHidingItemsForTransition:
forcePlaybackControlsHidden
setPlaybackControlsObservationController:
_startObservingForPlaybackViewUpdates
endHidingItemsForTransitionAndShowImmediately:
prominentPlayButtonCanShowPauseGlyph
UUID
setPlayerMuteFadeAnimationID:
runningTime
functionWithName:
_solveForInput:
playerMuteFadeAnimationID
startDisplayLinkUpdatesForObserver:framesPerSecond:usingBlock:
date
timeIntervalSince1970
loadingIndicatorTimerDelay
isValid
canShowLoadingIndicator
setLoadingIndicatorTimer:
loadingIndicatorTimer
_bindEnabledStateOfControls:toKeyPath:
_bindInclusionOfControlItems:toKeyPath:
shouldIgnoreTimeResolverUpdates
setPendingOrientationChange:
hasBegunObservingPotentiallyUnimplementedPlayerControllerProperties
setHasBegunObservingPotentiallyUnimplementedPlayerControllerProperties:
setHasSeekableLiveStreamingContent:
setTimeControlStatus:
setTreatsForcePressAsLongPress:
_showOrHideDisplayModeControls
setIncludedContainers:animations:
needsTimeResolver
timecodeObservationInterval
setTimeResolver:
_playbackSpeedControlFeatureEnabled
isPlayingOnMatchPointDevice
showsPlaybackSpeedButton
setShowsPlaybackSpeedButton:
maximumTime
minimumTime
elapsedTimeFormatter
remainingTimeFormatter
timecodeForCurrentTime
maxTimecode
hasBecomeReadyToPlay
videoGravityButtonType
setVideoGravityButtonType:
setCanIncludeVideoGravityButton:
setHasPlaybackBegunSincePlayerControllerBecameReadyToPlay:
isInspectionSuspended
setNowPlayingInfoControllerIfLoaded:
playerViewControllerContentViewEdgeInsetsForLetterboxedVideo:
setEdgeInsetsForLetterboxedContent:
_wantsRouteDetectionEnabled
keyPathsForValuesAffectingFullScreen
keyPathsForValuesAffectingShowsRoutePickerView
keyPathsForValuesAffectingShowsProminentPlayButton
keyPathsForValuesAffectingProminentPlayButtonCanShowPauseGlyph
keyPathsForValuesAffectingShowsTransportControls
keyPathsForValuesAffectingShouldEnterFullScreenWhenPlaybackBegins
keyPathsForValuesAffectingShowsMediaSelectionButton
keyPathsForValuesAffectingCurrentTime
keyPathsForValuesAffectingMinimumTime
keyPathsForValuesAffectingMaximumTime
keyPathsForValuesAffectingSeekingEnabled
keyPathsForValuesAffectingShowsSkipButtons
keyPathsForValuesAffectingShowsStartContentTransitionButtons
keyPathsForValuesAffectingCanShowLoadingIndicator
keyPathsForValuesAffectingPlayButtonsShowPauseGlyph
keyPathsForValuesAffectingNeedsTimeResolver
volumeControlsControllerPlayerViewHeight:
playerViewControllerContentView:willLoadPlaybackControlsView:
playerViewControllerContentView:willLoadTurboModePlaceholderView:
playerViewControllerContentViewIsPlayingOnSecondScreen:
playerViewControllerContentViewPlaybackContentContainerViewChanged:
playerViewControllerContentViewDidLayoutSubviews:
playerViewControllerContentViewDidMoveToSuperviewOrWindow:
playerViewControllerContentViewShouldApplyAutomaticVideoGravity:
playerViewControllerContentViewDidChangeVideoGravity:
playerViewControllerContentViewHasActiveTransition:
playerViewControllerContentViewIsBeingTransitionedFromFullScreen:
playerViewControllerContentViewOverrideLayoutClass:
playerViewControllerContentViewDidUpdateScrollingStatus:
showsRoutePickerView
showsTransportControls
showsMediaSelectionButton
showsSkipButtons
showsStartContentTransitionButtons
isStartLeftwardContentTransitionButtonEnabled
isStartRightwardContentTransitionButtonEnabled
routePickerAlertController
setRoutePickerAlertController:
setRouteDetectorCoordinator:
AVRouteDetectorCoordinatorMultipleRoutesDetectedObserver
setAVRouteDetectorCoordinatorMultipleRoutesDetectedObserver:
collapseExpandSliderAnimator
setCollapseExpandSliderAnimator:
mediaSelectionMenuController
setMediaSelectionMenuController:
setPlaybackRateMenuController:
playbackViewFrame
setShowingVolumeControlInTransportBar:
_selectedPlaybackRateObservationToken
_playerViewControllerIsBeingTransitionedWithResizing
_playerViewControllerIsPresentingFullScreen
_playerViewControllerIsPresentedFullScreen
_playerViewControllerHasInvalidViewControllerHierarchy
_volumeControlsCanShowSlider
_showsPictureInPictureButton
_hasCustomPlaybackControls
_showsVideoGravityButton
_showsDoneButtonWhenFullScreen
_playbackControlsIncludeStartContentTransitionButtons
_forcePlaybackControlsHidden
_wantsExternalPlaybackButtonShown
_startLeftwardContentTransitionButtonEnabled
_startRightwardContentTransitionButtonEnabled
_popoverIsBeingPresented
_showsPlaybackSpeedButton
_canIncludeVideoGravityButton
_hasStartedUpdates
_coveringWindow
_hasPlaybackBegunSincePlayerControllerBecameReadyToPlay
_hasBecomeReadyToPlay
_multipleRoutesDetected
_resumingUpdates
_prefersMuted
_playbackSuspendedForScrubbing
_hasSeekableLiveStreamingContent
_shouldIgnoreTimeResolverUpdates
_hasBegunObservingPotentiallyUnimplementedPlayerControllerProperties
_videoScaled
_hidingItemsForTransition
_showingPlaybackControls
_showingVolumeControlInTransportBar
_transportBarCustomMenuItems
_contentTransitionAction
_volumeController
_nowPlayingInfoControllerIfLoaded
_playbackControlsView
_turboModePlaybackControlsPlaceholderView
_playbackControlsObservationController
_timeResolver
_elapsedTimeFormatter
_remainingTimeFormatter
_routePickerAlertController
_routeDetectorCoordinator
_AVRouteDetectorCoordinatorMultipleRoutesDetectedObserver
_loadingIndicatorTimer
_collapseExpandSliderAnimator
_playerMuteFadeAnimationID
_mediaSelectionMenuController
_playbackRateMenuController
_pendingOrientationChange
_loadingIndicatorTimerDelay
_timeControlStatus
_videoGravityButtonType
_uniqueIdentifer
_playbackControlsVisibilityTimer
_userInteractingCount
_playbackViewFrame
T@"AVPlaybackControlsView",&,N,V_playbackControlsView
T@"AVTurboModePlaybackControlsPlaceholderView",W,N,V_turboModePlaybackControlsPlaceholderView
T@"AVNowPlayingInfoController",&,N,V_nowPlayingInfoControllerIfLoaded
T@"AVObservationController",&,N,V_playbackControlsObservationController
T@"AVPlayerControllerTimeResolver",&,N,V_timeResolver
T@"AVTimeFormatter",R,N,V_elapsedTimeFormatter
T@"AVTimeFormatter",R,N,V_remainingTimeFormatter
T@"UIAlertController",W,N,V_routePickerAlertController
T@"AVRouteDetectorCoordinator",&,N,V_routeDetectorCoordinator
T@,&,N,V_AVRouteDetectorCoordinatorMultipleRoutesDetectedObserver
T@"NSTimer",W,N,V_loadingIndicatorTimer
T@"UIViewPropertyAnimator",W,N,V_collapseExpandSliderAnimator
T@"<AVVolumeController>",&,N,V_volumeController
T@"NSUUID",&,N,V_playerMuteFadeAnimationID
T@"AVMediaSelectionMenuController",&,N,V_mediaSelectionMenuController
T@"AVMobilePlaybackRateMenuController",&,N,V_playbackRateMenuController
TB,N,V_showsPlaybackSpeedButton
seekingEnabled
TB,R,N,GisSeekingEnabled
TB,N,V_canIncludeVideoGravityButton
T@"NSNumber",&,N,V_pendingOrientationChange
userInteracting
TB,R,N,GisUserInteracting
TB,N,V_hasStartedUpdates
coveringWindow
TB,N,GisCoveringWindow,V_coveringWindow
TB,R,N,GisFullScreen
TB,N,V_hasPlaybackBegunSincePlayerControllerBecameReadyToPlay
TB,N,V_hasBecomeReadyToPlay
TB,N,V_multipleRoutesDetected
Td,N,V_loadingIndicatorTimerDelay
resumingUpdates
TB,N,GisResumingUpdates,V_resumingUpdates
TB,N,V_prefersMuted
playbackSuspendedForScrubbing
TB,N,GisPlaybackSuspendedForScrubbing,V_playbackSuspendedForScrubbing
Tq,N,V_timeControlStatus
TB,N,V_hasSeekableLiveStreamingContent
TB,N,V_shouldIgnoreTimeResolverUpdates
TB,N,V_hasBegunObservingPotentiallyUnimplementedPlayerControllerProperties
Tq,N,V_videoGravityButtonType
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_playbackViewFrame
TB,N,GisVideoScaled,V_videoScaled
T@"NSString",R,N,V_uniqueIdentifer
T@"NSString",&,N,V_windowSceneSessionIdentifier
T@"NSTimer",&,N,V_playbackControlsVisibilityTimer
TQ,N,V_userInteractingCount
hidingItemsForTransition
TB,N,GisHidingItemsForTransition,V_hidingItemsForTransition
showingPlaybackControls
TB,N,GisShowingPlaybackControls,V_showingPlaybackControls
showingVolumeControlInTransportBar
TB,N,GshouldShowVolumeControlInTransportBar,V_showingVolumeControlInTransportBar
T@"AVPlayerController",W,N,V_playerController
TB,N,V_playerViewControllerIsBeingTransitionedWithResizing
TB,N,V_playerViewControllerIsPresentingFullScreen
TB,N,V_playerViewControllerIsPresentedFullScreen
TB,N,V_playerViewControllerHasInvalidViewControllerHierarchy
TB,N,V_inlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused
TB,N,V_volumeControlsCanShowSlider
T@"NSArray",C,N,V_transportBarCustomMenuItems
TB,N,V_showsPictureInPictureButton
TB,N,V_hasCustomPlaybackControls
TB,N,V_showsVideoGravityButton
TB,N,V_showsDoneButtonWhenFullScreen
TB,N,V_playbackControlsIncludeStartContentTransitionButtons
TB,N,V_playbackControlsShouldControlSystemVolume
TB,N,V_forcePlaybackControlsHidden
TB,N,V_wantsExternalPlaybackButtonShown
startLeftwardContentTransitionButtonEnabled
TB,N,GisStartLeftwardContentTransitionButtonEnabled,V_startLeftwardContentTransitionButtonEnabled
startRightwardContentTransitionButtonEnabled
TB,N,GisStartRightwardContentTransitionButtonEnabled,V_startRightwardContentTransitionButtonEnabled
T@?,C,N,V_contentTransitionAction
T@"AVPictureInPictureController",&,N,V_pictureInPictureController
T@"AVSecondScreenContentViewConnection",&,N,V_secondScreenConnection
popoverIsBeingPresented
TB,N,GisPopoverBeingPresented,V_popoverIsBeingPresented
_updateContentViewIfNeeded
initialScreenBoundsHint
viewDidLayoutSubviews
_updateLayout
debugLabel
sourcePlayerLayer
stopShowingContentFromActiveSourcePlayerLayer
loadPlayerLayerViewIfNeeded
startShowingContentFromSourcePlayerLayer:
sizeToFit
bringSubviewToFront:
_sourcePlayerLayer
_debugLabel
_initialScreenBoundsHint
T@"UILabel",R,N,V_debugLabel
T@"AVSecondScreenPlayerLayerView",&,N,V_playerLayerView
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_initialScreenBoundsHint
T@"AVPlayerLayer",W,N,V_sourcePlayerLayer
activeSourcePlayerLayer
setActiveSourcePlayerLayer:
_activeSourcePlayerLayer
T@"AVPlayerLayer",W,N,V_activeSourcePlayerLayer
removeInteraction:
interactionView
addTransitionDriver:toView:
addInteraction:
setSourceViewForNextPresentation:
supportsMultipleScenes
_startObservingAnimatorProgress
setTouchGravity:
setTransitionDidBeginHandler:
easeInFunction
easeOutFunction
touchGravity
activeTransition
_finishTransition
_cancelTransition
setActiveTransition:
_fireDidBeginHandlerIfNeeded
isAnimated
displayLink
sourceViewForNextPresentation
setPresentationController:
transitionDidBeginHandler
transitionDuration:
animateTransition:
interruptibleAnimatorForTransition:
animationEnded:
startInteractiveTransition:
completionSpeed
completionCurve
wantsInteractiveStart
animationControllerForPresentedController:presentingController:sourceController:
animationControllerForDismissedController:
interactionControllerForPresentation:
interactionControllerForDismissal:
setDisplayLink:
gestureTracker
setEaseInFunction:
setEaseOutFunction:
_interactiveGestureTracker
_interactionView
_displayLink
_activeTransition
_gestureTracker
_sourceViewForNextPresentation
_transitionDidBeginHandler
_easeInFunction
_easeOutFunction
_touchGravity
Tq,N,V_state
T@"AVDisplayLink",&,N,V_displayLink
T@"AVTransition",&,N,V_activeTransition
T@"AVInteractiveTransitionGestureTracker",R,N,V_gestureTracker
T@"UIView",W,N,V_sourceViewForNextPresentation
T@"AVPresentationController",W,N,V_presentationController
T@?,C,N,V_transitionDidBeginHandler
T@"CAMediaTimingFunction",&,N,V_easeInFunction
T@"CAMediaTimingFunction",&,N,V_easeOutFunction
T{CGPoint=dd},N,V_touchGravity
T@"AVPresentationContext",R,W,N
T@"<AVTransitionControllerDelegate>",W,N,V_delegate
T@"<AVTransitionDriver>",&,N,V_interactiveGestureTracker
T@"UIView",W,N,V_interactionView
sourceLayer
avkit_sbdlpip_findFirstCALayerHost
sourceLayerHost
sourceContextId
setSourceLayerHost:
setSourceContextId:
sbdlHostView
placeholderLayer
_makePictureInPicturePlatformAdapterContentPlaceholderLayer
setPlaceholderLayer:
setSbdlHostView:
_updateGeometry
_updateSourceLayerHost
pictureInPictureController:didTransitionToRenderSize:
setLastKnownRenderSize:
lastKnownRenderSize
_PIPModeEnabled
_sourceContextId
_sourceLayer
_placeholderLayer
_sbdlHostView
_sourceLayerHost
_lastKnownRenderSize
T@"AVSampleBufferDisplayLayerPlayerController",&,N,V_playerController
T@"AVPictureInPictureIndicatorLayer",&,N,V_placeholderLayer
T@"AVPictureInPictureSampleBufferDisplayLayerHostView",&,N,V_sbdlHostView
T@"CALayerHost",W,N,V_sourceLayerHost
TI,N,V_sourceContextId
T{CGSize=dd},N,V_lastKnownRenderSize
T@"AVSampleBufferDisplayLayer",R,N,V_sourceLayer
PIPModeEnabled
TB,N,GisPIPModeEnabled,V_PIPModeEnabled
cachedIsPictureInPictureSupported
startInspectionIfNeeded
setPipActivitySessionIdentifier:
hasBegunInspection
setHasBegunInspection:
isReadyToPlay
timebase
updateTiming
isLooping
seekToEnd:
internalDelegate
applicationState
startKVO
_playbackCoordinatorWithoutTriggeringFullSetup
_updateCoordinatedPlaybackActive
_throttledUpdatePlayingOnMatchPointDeviceIfNeededWithContext:
_updatePlayingOnMatchPointDeviceIfNeeded
reduceResourceUsageAssertion
setPlayerLayerForReducingResources:
stopGeneratingTimecodes
_observeValueForKeyPath:oldValue:newValue:
assetInspectionQueue
isPiPAvailable
_prepareAssetForInspectionIfNeeded
_updateCurrentAudioTrackIfNeeded
_updateCurrentVideoTrackIfNeeded
_updateExternalPlaybackAirPlayDeviceLocalizedNameIfNeeded
error
setMetadata:
setComposable:
setHasProtectedContent:
setAvailableMetadataFormats:
setCompatibleWithAirPlayVideo:
setSeekingInternal:
setSeekToTimeInternal:
setContentChapters:
updateAtMinMaxTime
acquireResourceReductionAssertion
commonMetadata
metadataItemsFromArray:withKey:keySpace:
dictionaryWithDictionary:
preferredLanguages
chapterMetadataGroupsBestMatchingPreferredLanguages:
sortUsingComparator:
isComposable
hasProtectedContent
availableMetadataFormats
isCompatibleWithAirPlayVideo
updateMinMaxTiming
seekTimer
isPlaybackLikelyToKeepUp
isPlaybackBufferEmpty
_retryPlayImmediatelyIfNeeded
seekToTimeInternal
setSeekToTime:
setCachedIsPictureInPictureSupported:
setPictureInPictureSupported:
canPlayImmediately
playImmediatelyAtRate:
_handleSeekTimerEvent
throttledSeekToTime:toleranceBefore:toleranceAfter:
_cancelPendingSeeksIfNeeded
setRateBeforeScrubBegan:
_queuePlayer
isSeekingInternal
pauseWithoutAffectingCoordinatedPlayback
actionAtItemEnd
setActionAtItemEnd:
setAtMinTime:
setAtMaxTime:
setPlaybackSuspended:
suspendPlaybackCoordinatorWhileActivelySeekingIfNecessary
resumePlaybackCoordinatorIfSuspended
setMinTiming:
setMaxTiming:
currentEstimatedDate
contentChapters
_updateMinMaxTimingIfNeeded
seekableTimeRangesLastModifiedTime
liveUpdateInterval
isCompletelySeekable
_assetIsRestrictedFromSaving:
_assetIsMarkedNotSerializable:
availableVideoDynamicRanges
_assetContainsProResRaw:
metadataForFormat:
getBytes:length:
otherParticipants
setCoordinatedPlaybackActive:
currentEnabledAssetTrackForMediaType:
setCurrentAudioTrack:
setCurrentVideoTrack:
contextID
deviceSubType
setPlayingOnMatchPointDevice:
track
touchBarRequiresLinearPlayback
_updateRateForScrubbingAndSeeking
scrubCoordinatorSuspension
beginSuspensionForReason:
setScrubCoordinatorSuspension:
endProposingNewTime:
seekToCMTime:toleranceBefore:toleranceAfter:
isStreaming
actuallySeekToTime
canPlayFastForward
_updateScanningForwardRate
scanningDelays
canPlayFastReverse
_updateScanningBackwardRate
isAtMaxTime
seekOrStepByFrameCount:
isAtMinTime
canStepForward
canStepBackward
stepByCount:
setTiming:
_setMinTiming:maxTiming:
setAllowsExternalPlayback:
supportsMultipleOutputDevices
deviceName
setExternalPlaybackAirPlayDeviceLocalizedName:
setPreferredPeakBitRate:
setPreferredForwardBufferDuration:
preferredPeakBitRate
preferredForwardBufferDuration
playerLayerForReducingResources
initWithIdentifier:forReason:invalidationBlock:
setReduceResourceUsageAssertion:
canUseNetworkResourcesForLiveStreamingWhilePaused
setCanUseNetworkResourcesForLiveStreamingWhilePaused:
associatedTracksOfType:
cancelPendingSeeks
outputContext
rateBeforeScrubBegan
setCurrentAssetIfReady:
assetBeingPrepared
setAssetBeingPrepared:
keyPathsForValuesAffectingStatus
keyPathsForValuesAffectingReadyToPlay
keyPathsForValuesAffectingError
keyPathsForValuesAffectingCompletelySeekable
keyPathsForValuesAffectingCanPlay
keyPathsForValuesAffectingPlaying
keyPathsForValuesAffectingCanPause
keyPathsForValuesAffectingCanTogglePlayback
keyPathsForValuesAffectingVolume
keyPathsForValuesAffectingMuted
keyPathsForValuesAffectingHasContent
keyPathsForValuesAffectingContentDuration
keyPathsForValuesAffectingContentDimensions
keyPathsForValuesAffectingMinTime
keyPathsForValuesAffectingReversePlaybackEndTime
keyPathsForValuesAffectingMaxTime
keyPathsForValuesAffectingForwardPlaybackEndTime
keyPathsForValuesAffectingContentDurationWithinEndTimes
keyPathsForValuesAffectingSeekableTimeRanges
keyPathsForValuesAffectingLoadedTimeRanges
keyPathsForValuesAffectingHasEnabledAudio
keyPathsForValuesAffectingHasVideo
keyPathsForValuesAffectingHasEnabledVideo
keyPathsForValuesAffectingHasContentChapters
keyPathsForValuesAffectingStreaming
keyPathsForValuesAffectingHasLiveStreamingContent
keyPathsForValuesAffectingHasSeekableLiveStreamingContent
keyPathsForValuesAffectingHasTrimmableContent
keyPathsForValuesAffectingHasShareableContent
keyPathsForValuesAffectingTimeControlStatus
keyPathsForValuesAffectingCanSeek
keyPathsForValuesAffectingCanScanForward
keyPathsForValuesAffectingCanScanBackward
keyPathsForValuesAffectingCanSeekToBeginning
keyPathsForValuesAffectingCanSeekToEnd
keyPathsForValuesAffectingCanSeekFrameForward
keyPathsForValuesAffectingCanSeekFrameBackward
keyPathsForValuesAffectingCanSeekChapterForward
keyPathsForValuesAffectingCanSeekChapterBackward
keyPathsForValuesAffectingAllowsExternalPlayback
keyPathsForValuesAffectingPlayingOnExternalScreen
keyPathsForValuesAffectingExternalPlaybackActive
keyPathsForValuesAffectingExternalPlaybackType
observationInfo
setObservationInfo:
setLooping:
increaseVolume:
decreaseVolume:
changeVolumeToMinimum:
changeVolumeToMaximum:
currentOrEstimatedDate
hasContentChapters
hasTrimmableContent
hasShareableContent
audioWaveform
scanForward:
scanBackward:
canSeekToBeginning
canSeekToEnd
skipBackwardThirtySeconds:
seekToChapter:
togglePictureInPicture:
isPlaybackSuspended
setAssetInspectionQueue:
currentAudioTrack
currentVideoTrack
isPreventingIdleSystemSleep
setPreventingIdleSystemSleep:
isPreventingIdleDisplaySleep
setPreventingIdleDisplaySleep:
isDisablingAutomaticTermination
setDisablingAutomaticTermination:
canTogglePictureInPicture
setCurrentVideoMediaSelectionOption:
_audioMediaSelectionOptions
_visualMediaSelectionOptions
_legibleMediaSelectionOptions
_cachedSelectedAudioMediaSelectionOption
_cachedSelectedLegibleMediaSelectionOption
_cachedSelectedLegibleMediaSelectionOptionAccordingToAVFoundation
_lastKnownPersistedExtendedLanguageTag
_observationInfo
_inspectionSuspended
_updateAtMinMaxTimePeriodicObserverToken
_timecodePeriodicObserverToken
_pictureInPictureInterrupted
_handlesAudioSessionInterruptions
_isDeallocating
_hasSetUpSeekableLiveStreamState
_rateToRestoreAfterAudioSessionInterruptionEnds
_retryPlayingImmediatelyBlock
_shouldPlayImmediately
_looping
_actionAtItemEnd
_seekQueue
_seekTimer
_timeOfLastUpdate
_ignoreRateKeyValueChanges
_ignoreNextRateKeyValueChange
_pendingSeek
_isResumed
_toleranceBefore
_toleranceAfter
_isScanningForward
_isScanningBackward
_scanningCount
_preScanningRate
_liveStreamMinTiming
_liveStreamMaxTiming
_liveStreamEventModePossible
_canUseNetworkResourcesForLiveStreamingWhilePausedCount
_previousValueOfCanUseNetworkResourcesForLiveStreamingWhilePaused
_shouldPlayWhenLikelyToKeepUp
_forceScanning
_rateBeforeForceScanning
_reduceResourceUsageAssertion
_touchBarRequiresLinearPlayback
_timecodeController
_internalDelegate
_lastTimePlayingOnMatchPointDeviceWasUpdated
_updatePlayingOnMatchPointDeviceThrottleTimer
_atMaxTime
_atMinTime
_playbackSuspended
_pictureInPictureSupported
_seekingInternal
_composable
_hasProtectedContent
_compatibleWithAirPlayVideo
_preventingIdleSystemSleep
_preventingIdleDisplaySleep
_disablingAutomaticTermination
_canTogglePictureInPicture
_hasBegunInspection
_playingOnMatchPointDevice
_coordinatedPlaybackActive
_currentAssetIfReady
_assetInspectionQueue
_assetBeingPrepared
_externalPlaybackAirPlayDeviceLocalizedName
_minTiming
_maxTiming
_currentAudioTrack
_currentVideoTrack
_seekToTime
_metadata
_contentChapters
_availableMetadataFormats
_rateBeforeScrubBegan
_scrubCoordinatorSuspension
_pipActivitySessionIdentifier
_playerLayerForReducingResources
_currentVideoMediaSelectionOption
_seekToTimeInternal
atMaxTime
TB,N,GisAtMaxTime,V_atMaxTime
atMinTime
TB,N,GisAtMinTime,V_atMinTime
playbackSuspended
TB,N,GisPlaybackSuspended,V_playbackSuspended
T@"AVAsset",&,N,V_currentAssetIfReady
T@"NSObject<OS_dispatch_queue>",&,N,V_assetInspectionQueue
T@"AVAsset",&,N,V_assetBeingPrepared
TB,N,GisPictureInPictureSupported,V_pictureInPictureSupported
T@"NSString",&,N,V_externalPlaybackAirPlayDeviceLocalizedName
readyToPlay
TB,R,N,GisReadyToPlay
T@"AVValueTiming",&,N,V_timing
T@"AVValueTiming",&,N,V_minTiming
T@"AVValueTiming",&,N,V_maxTiming
T@"AVAssetTrack",&,N,V_currentAudioTrack
T@"AVAssetTrack",&,N,V_currentVideoTrack
seekingInternal
TB,GisSeekingInternal,V_seekingInternal
T{?=qiIq},V_seekToTimeInternal
Td,N,V_seekToTime
T@"NSDictionary",&,N,V_metadata
T@"NSArray",&,N,V_contentChapters
composable
TB,N,GisComposable,V_composable
TB,N,V_hasProtectedContent
T@"NSArray",&,N,V_availableMetadataFormats
compatibleWithAirPlayVideo
TB,N,GisCompatibleWithAirPlayVideo,V_compatibleWithAirPlayVideo
Td,N,V_rateBeforeScrubBegan
T@"AVCoordinatedPlaybackSuspension",&,N,V_scrubCoordinatorSuspension
preventingIdleSystemSleep
TB,N,GisPreventingIdleSystemSleep,V_preventingIdleSystemSleep
preventingIdleDisplaySleep
TB,N,GisPreventingIdleDisplaySleep,V_preventingIdleDisplaySleep
disablingAutomaticTermination
TB,N,GisDisablingAutomaticTermination,V_disablingAutomaticTermination
TB,N,V_canTogglePictureInPicture
T@"NSString",C,N,V_pipActivitySessionIdentifier
TB,N,V_hasBegunInspection
playingOnMatchPointDevice
TB,N,GisPlayingOnMatchPointDevice,V_playingOnMatchPointDevice
T@"BSSimpleAssertion",&,N
T@"AVPlayerLayer",W,N,V_playerLayerForReducingResources
T@"NSObject<OS_dispatch_source>",R,N
T@"NSDate",R,N
T@"NSArray",R,N,V_visualMediaSelectionOptions
T@"AVMediaSelectionOption",&,N,V_currentVideoMediaSelectionOption
TB,N,V_coordinatedPlaybackActive
T@"NSError",R,N
keyPathsForValuesAffectingUsesExternalPlaybackWhileExternalScreenIsActive
keyPathsForValuesAffectingPreferredDisplayCriteria
keyPathsForValuesAffectingMaximumVideoResolution
TB,R,N,GisPlayingOnMatchPointDevice
hasTimecodes
loadTimecodeControllerIfNeeded
timecodeController
frameNumberForCurrentTime
startGeneratingTimecodesUsingBlock:
seekToTimecode:
seekToFrame:
T@"AVTimecodeController",R,N
T@"<AVPlayerControllerDelegate>",W,N
functionWithControlPoints::::
configureView:forTintEffectWithColor:filterType:
_setTextColorFollowsTintColor:
titleForState:
imageForState:
layerWithTintColor:filterType:
effectCompositingColor:withMode:alpha:
setBackgroundEffects:
removeAllFiltersFromView:
applyBaseTrackTintToView:
applyCompletedTrackTintToView:
applyLoadedTrackTintToView:
configureView:withBackgroundFillOfColor:opacity:filter:
_updateStyleSheet
initWithServiceName:
setAutomaticVideoGravity:completion:
interfaceWithProtocol:
setRemoteObjectInterface:
resume
remoteObjectProxy
imageNamed:inBundle:
backdropLayerView
_loadTurboOrFullPlaybackControlsIfNeeded
externalPlaybackIndicatorViewIfLoaded
externalPlaybackIndicatorView
unsupportedContentIndicatorView
unsupportedContentIndicatorViewIfLoaded
audioOnlyIndicatorView
audioOnlyIndicatorViewIfLoaded
externalPlaybackIndicatorTitle
externalPlaybackIndicatorSubtitle
setExternalPlaybackIndicatorTitle:
setExternalPlaybackIndicatorSubtitle:
targetVideoGravities
setAutomaticVideoGravity:
_isInAnimationBlockWithAnimationsEnabled
numberWithUnsignedLong:
_insertPlaybackControlsOrPlaceholderView:
scrollingObserver
iAdPreRollViewIfLoaded
_updateVideoGravityDuringLayoutSubviewsAndAssertThatIfYouBreakThisMethodYouOwnThisMethod
automaticVideoGravity
_updateVideoContentInsetForVideoGravity:
_isBeingTransitionedToOrFromFullScreen
_applyVideoGravityIfNeeded:
videoContentInset
setVideoContentInset:
_isInAnimationBlock
_currentAnimationDuration
setAnimationDuration:
_mediaTimingFunctionForCurrentAnimationCurve
setAnimationTimingFunction:
removeAllAnimations
_currentAnimationCurve
shouldLoadPlaybackControlsHint
_loadTurboModePlaybackControlsPlaceholderViewIfNeeded
styleSheetShouldUseCompactFullScreenItemSize
_shouldLoadPlaybackControlsHint
_canAutomaticallyZoomLetterboxVideos
_styleSheetShouldUseCompactFullScreenItemSize
_automaticVideoGravity
_externalPlaybackIndicatorView
_unsupportedContentIndicatorView
_audioOnlyIndicatorView
_iAdPreRollView
_playbackContentContainerView
_interactiveContentOverlayView
_targetVideoGravities
_backdropLayerView
_externalPlaybackIndicatorTitle
_externalPlaybackIndicatorSubtitle
_scrollingObserver
_edgeInsetsForLetterboxedContent
_videoContentInset
T@"AVExternalPlaybackIndicatorView",R,N,V_externalPlaybackIndicatorView
T@"UIImageView",R,N,V_unsupportedContentIndicatorView
T@"UIImageView",R,N,V_audioOnlyIndicatorView
T@"AVExternalPlaybackIndicatorView",R,N
T@"UIImageView",R,N
T{UIEdgeInsets=dddd},N,V_videoContentInset
T@"NSMutableDictionary",R,N,V_targetVideoGravities
T@"NSString",C,N,V_automaticVideoGravity
T@"AVCABackdropLayerView",R,N,V_backdropLayerView
T@"NSString",C,N,V_externalPlaybackIndicatorTitle
T@"NSString",C,N,V_externalPlaybackIndicatorSubtitle
T@"AVScrollViewObserver",R,N,V_scrollingObserver
T@"<AVPlayerViewControllerContentViewDelegate>",W,N,V_delegate
T@"UIView<AVPlaybackContentContainer>",&,N,V_playbackContentContainerView
T@"NSNumber",R,N
inAWindowAndNotScrolling
TB,R,N,GisInAWindowAndNotScrolling
TB,R,N,GisScrolling
TB,R,N,GisScrollingQuickly
TB,N,V_shouldLoadPlaybackControlsHint
TB,N,V_canAutomaticallyZoomLetterboxVideos
T{UIEdgeInsets=dddd},N,V_edgeInsetsForLetterboxedContent
T@"UIView",&,N,V_interactiveContentOverlayView
T@"UIView",R,N,V_iAdPreRollView
T@"AVPlaybackControlsView",R,N,V_playbackControlsView
T@"AVTurboModePlaybackControlsPlaceholderView",R,W,N,V_turboModePlaybackControlsPlaceholderView
TB,N,V_styleSheetShouldUseCompactFullScreenItemSize
_setVisualEffectViewEnabled:backgroundColor:
setForceThreshold:
setAdjustsImageWhenHighlighted:
_updateImageIfNeeded
_updateEdgeInsets
activeFont
_preferredFont
tintEffectStyle
activeImageName
treatsForcePressAsLongPress
clampsHitRectInsetsWhenContainedInScrollableView
alwaysBounceVertical
alwaysBounceHorizontal
_handleUserInteractionGestureRecognizer:
setUserInteractionGestureRecognizer:
userInteractionGestureRecognizer
backgroundEffectView
setBackgroundEffectView:
setEffect:
setForce:
_resetTrackedState
_updateTintColorIfNeeded
disablesHighlightWhenLongPressed
isHighlighted
appliesTransformToImageViewWhenHighlighted
setTrackingStartTime:
setWasLongPressed:
setMaximumForceSinceTrackingBegan:
trackingStartTime
setWasForcePressTriggered:
previousHorizontalPositionOfLongPress
setHorizontalTranslationOfLongPress:
setPreviousHorizontalPositionOfLongPress:
_preferredLayoutSize
_imageViewAlpha
_updateBackgroundEffectViewIsHidden
fullscreenAlternateImagePadding
alternateImagePadding
multipleTouchesEndsTracking
numberOfTouches
_preferredImageName
setActiveImageName:
usesBackgroundEffectViewForTextOnlyButtons
alternateImageName
alternateFullScreenFont
fullScreenFont
inlineFont
micaSnapshotAlpha
setDisablesHighlightWhenLongPressed:
wasForcePressTriggered
horizontalTranslationOfLongPress
setActiveFont:
_accessibilityLabelOverride
_wasLongPressed
_treatsForcePressAsLongPress
_usesBackgroundEffectViewForTextOnlyButtons
_multipleTouchesEndsTracking
_appliesTransformToImageViewWhenHighlighted
_disablesHighlightWhenLongPressed
_clampsHitRectInsetsWhenContainedInScrollableView
_wasForcePressTriggered
_tintEffectStyle
_forceThreshold
_force
_maximumForceSinceTrackingBegan
_activeImageName
_imageName
_alternateImageName
_alternateImagePadding
_fullscreenAlternateImagePadding
_inlineFont
_fullScreenFont
_alternateFullScreenFont
_micaSnapshotAlpha
_horizontalTranslationOfLongPress
_previousHorizontalPositionOfLongPress
_userInteractionGestureRecognizer
_backgroundEffectView
_activeFont
Td,N,V_trackingStartTime
TB,N,V_wasLongPressed
TB,N,V_wasForcePressTriggered
Td,N,V_horizontalTranslationOfLongPress
T@"NSNumber",&,N,V_previousHorizontalPositionOfLongPress
Td,N,V_force
Td,N,V_maximumForceSinceTrackingBegan
T@"AVUserInteractionObserverGestureRecognizer",&,N,V_userInteractionGestureRecognizer
T@"UIVisualEffectView",&,N,V_backgroundEffectView
T@"UIFont",&,N,V_activeFont
TB,N,V_treatsForcePressAsLongPress
Tq,N,V_tintEffectStyle
TB,N,V_usesBackgroundEffectViewForTextOnlyButtons
Td,N,V_forceThreshold
TB,N,V_multipleTouchesEndsTracking
T@"NSString",C,N,V_activeImageName
T@"NSString",C,N,V_imageName
T@"NSString",C,N,V_alternateImageName
Td,N,V_alternateImagePadding
Td,N,V_fullscreenAlternateImagePadding
TB,N,V_appliesTransformToImageViewWhenHighlighted
T@"UIFont",&,N,V_inlineFont
T@"UIFont",&,N,V_fullScreenFont
T@"UIFont",&,N,V_alternateFullScreenFont
Td,N,V_micaSnapshotAlpha
TB,N,V_disablesHighlightWhenLongPressed
TB,N,V_clampsHitRectInsetsWhenContainedInScrollableView
_dateFormatter
setUniqueIdentifier:
prefersSecondaryMaterialOverlay
setPrefersSecondaryMaterialOverlay:
setNextAttributesInLayoutOrder:
setNextAttributesInPriorityOrder:
appendFormat:
_hasFlexibleContentSize
_prefersSecondaryMaterialOverlay
_canOverflowToAuxiliaryMenu
_canOnlyAppearInControlOverflowMenu
_canSubstituteOtherAttributes
_displayPriority
_displayPartnerAttributes
_trailingInterItemSpace
_accessibilityIdentifier
_nextAttributesInLayoutOrder
_nextAttributesInPriorityOrder
_minimumSize
T@"NSString",C,N,V_uniqueIdentifier
TQ,N,V_displayPriority
T@"AVLayoutItemAttributes",W,V_displayPartnerAttributes
TB,N,V_hasFlexibleContentSize
TB,N,V_prefersSecondaryMaterialOverlay
TB,N,V_canOverflowToAuxiliaryMenu
TB,N,V_canOnlyAppearInControlOverflowMenu
TB,N,V_canSubstituteOtherAttributes
T{CGSize=dd},N,V_minimumSize
Td,N,V_trailingInterItemSpace
T@"NSString",C,N,V_accessibilityIdentifier
T@"AVLayoutItemAttributes",&,N,V_nextAttributesInLayoutOrder
T@"AVLayoutItemAttributes",W,N,V_nextAttributesInPriorityOrder
loadingButtonView
setLoadingButtonView:
_loadingButtonView
T@"AVLoadingButtonView",&,N,V_loadingButtonView
fontDescriptorWithSize:
fontWithName:size:
timeFontWithFont:
boldSystemFontOfSize:
italicSystemFontOfSize:
traitCollectionWithPreferredContentSizeCategory:
timeFontWithName:size:
timeFontOfSize:
boldTimeFontOfSize:
italicTimeFontOfSize:
monospacedTimeFontOfSize:
setLinkFired:
linkFired:
displayLinkWithTarget:selector:
setPreferredFramesPerSecond:
setStartTime:
addToRunLoop:forMode:
linkFired
_linkFired
T@?,C,N,V_linkFired
T@"CADisplayLink",&,N,V_displayLink
T@,W,N,V_observer
Td,N,V_startTime
isLayoutDirty
_updateStackLayoutIfNeeded
flattenedArrangedSubviewsInLayoutOrder
currentStackLayout
_includedItemsFromSubviews:inStackLayout:thatFitSize:
CGRectValue
setLayoutDirty:
_applyShapeStyle
semanticContentAttribute
_removeArrangedSubview:
_insertArrangedSubview:atIndex:
setDirectionalLayoutMargins:
directionalLayoutMargins
stackLayoutNeedsUpdate
arrangedSubviews
initWithFirstAttributesInLayoutOrder:firstAttributesInPriorityOrder:
setCurrentStackLayout:
setStackLayoutNeedsUpdate:
shapeStyle
_setCornerRadius:continuous:maskedCorners:
hasVisibleArrangedSubview
setFlattenedArrangedSubviewsInLayoutOrder:
setBackdropLayerView:
setSecondaryMaterialOverlayView:
targetViewForSecondaryMaterialOverlayView
setTargetViewForSecondaryMaterialOverlayView:
_layoutDirty
_stackLayoutNeedsUpdate
_arrangedSubviews
_shapeStyle
_flattenedArrangedSubviewsInLayoutOrder
_currentStackLayout
_secondaryMaterialOverlayView
_targetViewForSecondaryMaterialOverlayView
T@"NSMutableArray",&,N,V_flattenedArrangedSubviewsInLayoutOrder
T@"AVCustomStackLayout",&,N,V_currentStackLayout
layoutDirty
TB,N,GisLayoutDirty,V_layoutDirty
T@"AVCABackdropLayerView",&,N,V_backdropLayerView
T@"UIVisualEffectView",&,N,V_secondaryMaterialOverlayView
TB,N,V_stackLayoutNeedsUpdate
T@"UIView<AVLayoutViewItem>",&,N,V_targetViewForSecondaryMaterialOverlayView
T@"NSArray",R,C,N,V_arrangedSubviews
T{NSDirectionalEdgeInsets=dddd},N
TQ,N,V_shapeStyle
longValue
keyboardHeight
setKeyboardHeight:
_animateKeyboardAvoidance:duration:
needsIntialLayout
_setupInitialLayout
deactivateConstraints:
_setUpCustomControlsViewConstraintsIfNeeded
_updateAreVolumeAndTransportControlsVisible
setPriority:
initWithArray:
_updateLayoutMargins
_updateDoubleRowLayoutEnabled
_updatePlaybackControlsContainerVisibilityAnimated:additionalActions:
_playbackControlsViewsForControlItems:withType:
_showPlaybackControlsAnimated:
playbackControlsVisibilityAnimator
setPlaybackControlsVisibilityAnimator:
safeAreaInsetsDidChange
_playbackControlsViewItems
customMediaItems
_updateTransportControlsFrame
_updateVolumeControlsWithSize:
layoutMargins
defaultAudioControls
orderedSetWithArray:
defaultDisplayModeControls
_currentArrangedAudioModeViews
_preferredArrangedAudioModeViews
minusOrderedSet:
_currentArrangedDisplayModeViews
_preferredArrangedDisplayModeViews
_collapse:view:
setPrefersFullScreenButtonIncluded:
setPrefersDoneButtonIncluded:
setPrefersPiPButtonIncluded:
setPrefersVideoGravityButtonIncluded:
prefersFullScreenButtonIncluded
prefersDoneButtonIncluded
prefersVideoGravityButtonIncluded
prefersPiPButtonIncluded
includesTransportControls
includesDisplayModeControlsContainer
includesCustomDisplayModeControls
includesAudioControlsContainer
includesCustomAudioControls
_collapse:views:
prefersVolumeSliderExpandedAutomatically
visibilityDelegate
_displayModeViewsToRemoveDuringAnimation
_audioViewsToRemoveDuringAnimation
setMostRecentAnimationCompletionsID:
reevaluateHiddenStateForContainersAndSubviews
mostRecentAnimationCompletionsID
setCompletionBlock:
_customControlsViewIfLoaded
updateConstraintsIfNeeded
setNeedsIntialLayout:
keyboardUIAvoidanceAnimator
hasVisibleSubview
updateLayoutForChangedControlsVisibility
includedContainers
isTopAreaLayoutGuideExpanded
setTopAreaLayoutGuideExpanded:
_customControlsViewLayoutGuideConstraints
_showsAudioControls
_needsIntialLayout
_topAreaLayoutGuideExpanded
_prefersDoneButtonIncluded
_prefersVideoGravityButtonIncluded
_prefersFullScreenButtonIncluded
_prefersPiPButtonIncluded
_includedContainers
_volumeControlsContainer
_playbackControlsContainer
_screenModeControls
_volumeControls
_prominentPlayButtonContainerView
_transportControlsContainerView
_fullScreenButton
_videoGravityButton
_pictureInPictureButton
_customDisplayModeItems
_customAudioItems
_transportControlsView
_customMediaItems
_visibilityDelegate
_defaultAudioControls
_defaultDisplayModeControls
_keyboardHeight
_keyboardUIAvoidanceAnimator
_playbackControlsVisibilityAnimator
_mostRecentAnimationCompletionsID
T@"NSArray",R,N,V_defaultAudioControls
T@"NSArray",R,N,V_defaultDisplayModeControls
Td,N,V_keyboardHeight
T@"UIViewPropertyAnimator",R,N,V_keyboardUIAvoidanceAnimator
TB,N,V_needsIntialLayout
T@"UIViewPropertyAnimator",&,N,V_playbackControlsVisibilityAnimator
T@"NSUUID",&,N,V_mostRecentAnimationCompletionsID
topAreaLayoutGuideExpanded
TB,N,GisTopAreaLayoutGuideExpanded,V_topAreaLayoutGuideExpanded
TB,N,V_prefersDoneButtonIncluded
TB,N,V_prefersVideoGravityButtonIncluded
TB,N,V_prefersFullScreenButtonIncluded
TB,N,V_prefersPiPButtonIncluded
Tq,R,N,V_includedContainers
T@"AVTouchIgnoringView",R,N,V_volumeControlsContainer
T@"AVTouchIgnoringView",R,N,V_playbackControlsContainer
T@"AVLayoutView",R,N,V_screenModeControls
T@"AVLayoutView",R,N,V_volumeControls
T@"AVLayoutView",R,N,V_prominentPlayButtonContainerView
T@"AVView",R,N,V_transportControlsContainerView
T@"AVButton",R,N,V_doneButton
T@"AVButton",R,N,V_fullScreenButton
T@"AVButton",R,N,V_videoGravityButton
T@"AVButton",R,N,V_pictureInPictureButton
T@"NSArray",R,C,N,V_customDisplayModeItems
T@"NSArray",R,C,N,V_customAudioItems
T@"AVButton",R,N,V_prominentPlayButton
T@"AVTransportControlsView",R,N,V_transportControlsView
T@"NSArray",R,C,N,V_customMediaItems
T@"NSArray",R,C,N,V_customControlItems
T@"AVPlayerViewControllerCustomControlsView",&,N,V_customControlsView
TB,N,V_prefersVolumeSliderExpandedAutomatically
T@"<AVPlaybackControlsViewVisibilityDelegate>",W,N,V_visibilityDelegate
TB,N,V_showsAudioControls
localizedDescription
bodyData
headersForContentLength:compression:
messageWithVersion:headers:bodyData:
_localizedDescription
Tq,R,N,V_status
T@"NSString",R,N,V_localizedDescription
bundleForClass:
bundle
localizedStringForKey:value:table:
layoutSublayersOfLayer:
pipIndicatorLayer
_addIndicatorLayerIfNeeded
addAnimation:forKey:
setPipIndicatorLayer:
customMessage
setCustomMessage:
_customMessage
_pipIndicatorLayer
T@"AVPictureInPictureIndicatorLayer",&,N,V_pipIndicatorLayer
T@"NSString",C,N,V_customMessage
avkit_constraintEqualToAnchor:priority:
avkit_constraintsFromEdgesOfItem:toLeadingAnchor:topAnchor:trailingAnchor:bottomAnchor:priority:
avkit_constraintsFromEdgesOfItem:toEdgesOfItem:
avkit_constraintsFromLeadingAndTrailingEdgesOfItem:toEdgesOfItem:
avkit_constraintsFromTopAndBottomEdgesOfItem:toEdgesOfItem:
constraintEqualToConstant:
avkit_constraintsFromDimensionAnchorsToSize:
T@"NSLayoutXAxisAnchor",R,N
T@"NSLayoutYAxisAnchor",R,N
T@"NSLayoutDimension",R,N
constraintGreaterThanOrEqualToAnchor:
constraintLessThanOrEqualToAnchor:
avkit_constraintGreaterThanOrEqualToAnchor:priority:
avkit_constraintLessThanOrEqualToAnchor:priority:
avkit_constraintEqualToAnchor:constant:priority:
constraintGreaterThanOrEqualToConstant:
constraintLessThanOrEqualToConstant:
avkit_constraintEqualToConstant:priority:
avkit_constraintGreaterThanOrEqualToConstant:priority:
avkit_constraintLessThanOrEqualToConstant:priority:
_firstAttributesInLayoutOrder
_firstAttributesInPriorityOrder
T@"AVLayoutItemAttributes",R,N,V_firstAttributesInLayoutOrder
T@"AVLayoutItemAttributes",R,W,N,V_firstAttributesInPriorityOrder
alloc
playbackDelegate
pictureInPictureControllerStartPlayback:
pictureInPictureControllerStopPlayback:
pictureInPictureController:setPlaying:
pictureInPictureControllerPlaybackTimeRange:
pictureInPictureControllerTimeRangeForPlayback:
pictureInPictureControllerPlaybackPaused:
pictureInPictureControllerIsPlaybackPaused:
pictureInPictureController:skipByInterval:completionHandler:
playbackDelegateAdapterWithDelegate:
pictureInPictureControllerShouldProhibitBackgroundAudioPlayback:
_playbackDelegate
T@"<AVPictureInPictureSampleBufferPlaybackDelegate>",R,W,N,V_playbackDelegate
sbdlObservationController
setPlaybackDelegateAdapter:
setPlaybackDelegate:
playbackDelegateAdapter
setContentTimeRange:
_currentSBDLTime
contentTimeRange
_effectiveRate
setPlaybackState:
_updateBackgroundAudioPlaybackPolicy
setPaused:
isPictureInPictureAvailable
enqueuedBufferDimensions
playbackState
setSbdlObservationController:
setPictureInPictureAvailable:
affineTransform
sublayerTransform
keyPathsForValuesAffectingRate
_pictureInPictureAvailable
_playbackState
_sbdlObservationController
_playbackDelegateAdapter
_enqueuedBufferDimensions
_contentTimeRange
T@"AVPictureInPicturePlaybackState",C,N,V_playbackState
T@"AVObservationController",&,N,V_sbdlObservationController
pictureInPictureAvailable
TB,N,GisPictureInPictureAvailable,V_pictureInPictureAvailable
TB,N,GisPaused,V_paused
T{?={?=qiIq}{?=qiIq}},N,V_contentTimeRange
T@"AVSampleBufferDisplayLayerPlaybackDelegateAdapter",&,N,V_playbackDelegateAdapter
T@"<AVPictureInPictureSampleBufferPlaybackDelegate>",W,N,V_playbackDelegate
T{CGSize=dd},N,V_enqueuedBufferDimensions
initWithCGImage:
T@"UIImage",R
avkit_title
shortLocalizedDisplayName
avkit_offOption
avkit_autoOption
T@"AVMediaSelectionOption",R
v20@0:8B16
@40@0:8{CGPoint=dd}16@32
B16@0:8
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v16@0:8
v24@0:8@16
v24@0:8q16
v32@0:8@16Q24
v24@0:8@?16
v24@0:8d16
@16@0:8
@?16@0:8
q16@0:8
@"NSString"
@"UIView"
@"AVPlayer"
@"<AVPlayerViewControllerDelegate>"
@"AVPlayerViewController"
@"AVButton"
@"AVLayoutView"
@"AVStyleSheet"
@"AVAppStorePlayerLayerView"
@"NSMutableDictionary"
@"AVObservationController"
#16@0:8
@"<AVContentOverlayViewDelegate>"
B24@0:8Q16
v28@0:8q16B24
@"_AVSimplePlayerLayerView"
B24@0:8@16
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@"AVPictureInPictureViewController"16
q24@0:8@16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16
@24@0:8@16
v32@0:8@16q24
v40@0:8@16q24@32
v32@0:8@16@?24
v40@0:8@16q24q32
v32@0:8@16@24
v28@0:8@16B24
v40@0:8@16Q24Q32
q24@0:8@"PGPictureInPictureProxy"16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@"PGPictureInPictureProxy"16
@"UIWindow"24@0:8@"PGPictureInPictureProxy"16
v32@0:8@"PGPictureInPictureProxy"16q24
v40@0:8@"PGPictureInPictureProxy"16q24@"NSError"32
v32@0:8@"PGPictureInPictureProxy"16@?<v@?B>24
v24@0:8@"PGPictureInPictureProxy"16
v40@0:8@"PGPictureInPictureProxy"16q24q32
v32@0:8@"PGPictureInPictureProxy"16@"PGCommand"24
v28@0:8@"PGPictureInPictureProxy"16B24
v40@0:8@"PGPictureInPictureProxy"16Q24Q32
B24@0:8@"PGCommand"16
B24@0:8@"PGPictureInPictureProxy"16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
d16@0:8
@"<AVPictureInPicturePlatformAdapterDelegate>"
@"AVPlayerController"
@"AVPictureInPicturePrerollAttributes"
@"AVPictureInPictureViewController"
@"PGPictureInPictureProxy"
@"NSTimer"
@"AVSecondScreenConnection"
@"UIWindow"
@"<AVPictureInPictureContentSource>"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@48@0:8{?=qiIq}16@40
@48@0:8@16{?=qiIq}24
{?=qiIq}16@0:8
@"PGPlaybackStatePrerollAttributes"
{?="value"q"timescale"i"flags"I"epoch"q}
{CGSize=dd}16@0:8
@"AVPictureInPicturePlayerLayerView"
@"AVPlayerLayer"
v48@0:8@16{CGPoint=dd}24N^{CGPoint=dd}40
v40@0:8@16@24d32
v24@0:8@"UIScrollView"16
v48@0:8@"UIScrollView"16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@"UIScrollView"16B24
@"UIView"24@0:8@"UIScrollView"16
v32@0:8@"UIScrollView"16@"UIView"24
v40@0:8@"UIScrollView"16@"UIView"24d32
B24@0:8@"UIScrollView"16
B32@0:8{CGPoint=dd}16
@"AVLayoutItemAttributes"16@0:8
v32@0:8{CGSize=dd}16
f16@0:8
v20@0:8f16
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGRect={CGPoint=dd}{CGSize=dd}}84@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGRect={CGPoint=dd}{CGSize=dd}}48f80
B32@0:8@16@24
{UIEdgeInsets=dddd}16@0:8
B40@0:8{CGPoint=dd}16@32
{CGPoint=dd}16@0:8
{NSDirectionalEdgeInsets=dddd}16@0:8
v48@0:8{NSDirectionalEdgeInsets=dddd}16
@"UISelectionFeedbackGenerator"
@"NSMutableArray"
@"AVLayoutItemAttributes"
@"<AVScrubberDelegate>"
@"NSArray"
@"UIScrollView"
@"UIImageView"
{CGSize="width"d"height"d}
{NSDirectionalEdgeInsets="top"d"leading"d"bottom"d"trailing"d}
v32@0:8@"AVBonjourService"16@"AVAirTransport"24
@"NSDictionary"24@0:8@"AVBonjourService"16
v32@0:8@"AVAirTransport"16@"<AVAirTransportReverseTransformationResultProtocol>"24
v24@0:8@"AVAirTransport"16
@"<AVAirMessageNotificationCenterDelegate>"
@"AVBonjourService"
@"AVPlayerItem"
@"NSObject<OS_dispatch_queue>"
@"NSMutableSet"
@56@0:8d16d24Q32@40@?48
@32@0:8d16@24
@24@0:8^{_NSZone=}16
^{CGImage=}16@0:8
v24@0:8^{CGImage=}16
^{CGImage=}
v36@0:8@16@24B32
q40@0:8@16@24@32
@"UIView<AVScrollViewObserverContentView>"
@"NSHashTable"
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16d48
v24@0:8f16B20
v24@0:8@"<AVBehaviorContext>"16
@24@0:8q16
@"AVNewsWidgetPlayerBehaviorContext"
I16@0:8
v20@0:8I16
v80@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGSize=dd}48{CGSize=dd}64
@"AVPictureInPictureCALayerHostView"
@32@0:8@16@24
v24@0:8Q16
@"UIMenu"
@"<AVMediaSelectionMenuDelegate>"
@32@0:8@16:24
@"AVHomeIPCameraBehaviorContext"
{CGRect={CGPoint=dd}{CGSize=dd}}56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
@"AVPlayerController"24@0:8@"AVPlayerController"16
@"AVPictureInPictureViewController"16@0:8
v32@0:8@"AVPictureInPictureViewController"16@"AVPlayerController"24
@"UIWindow"16@0:8
@"AVPlaybackRateCollection"
@"AVPlaybackRate"
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
B32@0:8@"UIGestureRecognizer"16@"UIEvent"24
v24@0:8@"UIView"16
@"UIView"16@0:8
B32@0:8@"<AVTransitionDriver>"16@"UIGestureRecognizer"24
@"<AVTransitionDriverDelegate>"16@0:8
v24@0:8@"<AVTransitionDriverDelegate>"16
@"UIPanGestureRecognizer"16@0:8
v24@0:8@"UIPanGestureRecognizer"16
v32@0:8{CGPoint=dd}16
@"UIPanGestureRecognizer"
@"<AVTransitionDriverDelegate>"
@"UIPinchGestureRecognizer"
@"UIRotationGestureRecognizer"
{CGPoint="x"d"y"d}
@24@0:8@?16
@"NSMutableOrderedSet"
@"AVPresentationConfiguration"
@"<UIViewControllerContextTransitioning>"
@"AVFullScreenViewController"
@"AVPresentationContextTransition"
@"AVPresentationController"
v24@0:8@"NSNetServiceBrowser"16
v32@0:8@"NSNetServiceBrowser"16@"NSDictionary"24
v36@0:8@"NSNetServiceBrowser"16@"NSString"24B32
v36@0:8@"NSNetServiceBrowser"16@"NSNetService"24B32
v40@0:8@16@24@32
v24@0:8@"NSNetService"16
v32@0:8@"NSNetService"16@"NSDictionary"24
v32@0:8@"NSNetService"16@"NSData"24
v40@0:8@"NSNetService"16@"NSInputStream"24@"NSOutputStream"32
v24@0:8^v16
^v16@0:8
@"<AVBonjourServiceClientDelegate>"
@"NSNetServiceBrowser"
^v24@0:8@16
v32@0:8@16d24
I28@0:8I16@20
@"AVStatusBarBackgroundGradientViewSubview"
@48@0:8@16@24B32B36@?40
@44@0:8@16@24B32@?36
@40@0:8@16@24@?32
v48@0:8@16@24@32@?40
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@60@0:8@16@24@32B40B44B48@?52
v48@0:8@16@24@32^v40
v56@0:8@16@24@32@40^v48
@"NSSet"
@48@0:8@16@24@32@40
@"AVMusicAppBehaviorContext"
@"AVPlayerViewController"16@0:8
v24@0:8@"<AVBehavior>"16
v40@0:8{CGSize=dd}16@32
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
v40@0:8{CGSize=dd}16@"<UIViewControllerTransitionCoordinator>"32
v24@0:8@"UIViewController"16
@"UIView<AVPlaybackContentContainer>"56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@"AVPlaybackContentContainerView"48
v32@0:8@"AVPlayerViewController"16q24
@"AVMusicAppBehavior"
@"NSNumber"
@40@0:8@16{CGSize=dd}24
@"UIWindowScene"
@"UIScreen"
@"CADisplay"
v32@0:8@"NSStream"16Q24
@24@0:8Q16
@"NSInputStream"
@"NSOutputStream"
@"NSData"
@"<AVAirTransportTransformationProtocol>"
@"<AVAirTransportDelegate>"
v32@0:8@"NSNetService"16@"AVAirTransport"24
@"<AVAirMessageDispatcherClientDelegate>"
@"NSNetService"
@"AVAirTransport"
@"AVBonjourServiceClient"
v52@0:8B16{CGRect={CGPoint=dd}{CGSize=dd}}20
@"AVVideoCallPlayerController"
@"AVPictureInPictureController"
@"AVPictureInPictureControllerContentSource"
v28@0:8B16@?20
@"AVSeymourBehaviorContext"
@"UIActivityIndicatorView"
@"UIWindowScene"16@0:8
@"<AVVolumeHUDAssertionDelegate>"
@"AVSystemController"16@0:8
v32@0:8@"NSString"16@"NSString"24
v28@0:8B16@20
@"AVSystemController"
@"AVZoomingBehaviorContext"
@"NSLayoutConstraint"
@"UILayoutGuide"
@44@0:8d16d24d32B40
B24@0:8@?16
v56@0:8{CGPoint=dd}16@32N^@40N^d48
{CGRect={CGPoint=dd}{CGSize=dd}}40@0:8{CGPoint=dd}16d32
@28@0:8@16B24
{UIEdgeInsets=dddd}36@0:8@16d24B32
@"UIFont"
@"UITraitCollection"
@"AVEditBehaviorContext"
@"<AVEditBehaviorDelegate>"
v24@0:8@"AVPictureInPictureController"16
v32@0:8@"AVPictureInPictureController"16@"NSError"24
v32@0:8@"AVPictureInPictureController"16@?<v@?B>24
q32@0:8@16@24
@32@0:8@16q24
q24@0:8@"UIPresentationController"16
q32@0:8@"UIPresentationController"16@"UITraitCollection"24
v32@0:8@"UIPresentationController"16@"UIPresentationController"24
@"UIViewController"32@0:8@"UIPresentationController"16q24
v40@0:8@"UIPresentationController"16q24@"<UIViewControllerTransitionCoordinator>"32
B24@0:8@"UIPresentationController"16
v24@0:8@"UIPresentationController"16
v40@0:8@16N^{CGRect={CGPoint=dd}{CGSize=dd}}24N^@32
v24@0:8@"UIPopoverPresentationController"16
B24@0:8@"UIPopoverPresentationController"16
v40@0:8@"UIPopoverPresentationController"16N^{CGRect={CGPoint=dd}{CGSize=dd}}24N^@32
v48@0:8@16{CGSize=dd}24@40
v24@0:8@"AVFullScreenViewController"16
@"UIView"24@0:8@"AVFullScreenViewController"16
v48@0:8@"AVFullScreenViewController"16{CGSize=dd}24@"<UIViewControllerTransitionCoordinator>"40
B24@0:8@"AVFullScreenViewController"16
q24@0:8@"AVFullScreenViewController"16
@"UIResponder"24@0:8@"AVFullScreenViewController"16
@40@0:8@16@24@32
B40@0:8@16@24@32
v36@0:8@16B24@?28
v28@0:8@16f24
@"AVPresentationConfiguration"40@0:8@"AVTransitionController"16@"UIViewController"24@"UIViewController"32
v32@0:8@"AVTransitionController"16@"UIViewController"24
@"UIView"32@0:8@"AVTransitionController"16@"UIViewController"24
B40@0:8@"AVTransitionController"16@"UIGestureRecognizer"24@"UITouch"32
@"UIColor"24@0:8@"AVTransitionController"16
B24@0:8@"AVTransitionController"16
v24@0:8@"AVTransitionController"16
v32@0:8@"AVTransitionController"16@?<v@?>24
v36@0:8@"AVTransitionController"16B24@?<v@?B>28
v28@0:8@"AVTransitionController"16f24
v24@0:8@"AVContentOverlayView"16
v32@0:8@"AVPlaybackRateCollection"16@"AVPlaybackRate"24
B24@0:8@"AVPlayerController"16
v48@0:8@16@24@32@40
v24@0:8@"AVPlaybackControlsView"16
v48@0:8@"AVPlaybackControlsView"16@"<AVPlayerViewControllerAnimationCoordinator>"24@"NSArray"32@"NSArray"40
d24@0:8d16
v36@0:8q16B24@?28
v32@0:8B16B20@?24
@"NSDictionary"
@"UIPopoverPresentationController"
@"AVTransitionController"
@"AVPlaybackControlsController"
@"AVPlayerView"
@"AVPlayerViewControllerContentView"
@"NSValue"
{CGAffineTransform="a"d"b"d"c"d"d"d"tx"d"ty"d}
@"AVPlayerViewControllerCustomControlsView"
@"AVContentOverlayView"
@"AVBehaviorStorage"
@"UIHoverGestureRecognizer"
@"AVPlayerControllerVolumeAnimator"
@"__AVPlayerLayerView"
v32@0:8Q16@24
{CGAffineTransform=dddddd}16@0:8
v64@0:8{CGAffineTransform=dddddd}16
d24@0:8@16
d24@0:8@"AVEditView"16
v32@0:8@"AVEditView"16@"NSNumber"24
v24@0:8@"AVEditView"16
v32@0:8@"AVEditView"16d24
@"AVEditBehavior"
@"AVEditBehaviorParameters"
@"AVZoomingBehavior"
@"AVEditView"
@"AVAssetImageGenerator"
@"UIToolbar"
@"UIBarButtonItem"
@"UIViewController<AVFullScreenViewControllerDelegate>"
@40@0:8@16{CGPoint=dd}24
@"UIContextMenuInteraction"
@"<AVControlOverflowButtonDelegate>"
@40@0:8d16@24@32
@48@0:8d16@24@32@40
@28@0:8B16@20
@28@0:8I16@20
@36@0:8I16@20@28
@32@0:8Q16@24
@"<AVPictureInPictureViewControllerDelegate>"
@"UILabel"
@"UIStackView"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
{?=dd}16@0:8
@40@0:8d16d24d32
@"UIScene"
@"AVSecondScreenViewController"
@"AVPresentationContext"
v32@0:8d16d24
@"AVHomeIPCameraBehavior"
@"AVHomeIPCameraPlayerController"
v48@0:8{NSEdgeInsets=dddd}16
{NSEdgeInsets=dddd}16@0:8
{NSEdgeInsets="top"d"left"d"bottom"d"right"d}
@"AVVolumeButtonControl"
@"AVVolumeSlider"
@"<AVVolumeControlsControllerDelegate>"
@"<AVVolumeControlsControllerLayoutDelegate>"
@"AVVolumeControlsContentView"
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@"AVPlaybackContentContainerView"48
@"AVPlaybackContentContainerView"16@0:8
{CGSize=dd}48@0:8@16d24{CGSize=dd}32
{CGSize=dd}24@0:8d16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8d16
@"AVPlaybackContentContainerView"
@24@0:8#16
@"NSData"24@0:8@"<AVMessageTransformerProtocol>"16
@"AVAirMessageParts<AVAirTransportReverseTransformationResultProtocol>"24@0:8@"NSData"16
@44@0:8@16i24@28@36
d24@0:8@"UIMovieScrubber"16
@"NSArray"44@0:8@"UIMovieScrubber"16i24@"NSNumber"28@"NSNumber"36
v32@0:8@"UIMovieScrubber"16@"NSNumber"24
v36@0:8@"UIMovieScrubber"16@"NSNumber"24B32
v28@0:8@16i24
v32@0:8@16f24f28
v40@0:8@16d24d32
v32@0:8@"UIMovieScrubber"16d24
v28@0:8@"UIMovieScrubber"16i24
v32@0:8@"UIMovieScrubber"16f24f28
v24@0:8@"UIMovieScrubber"16
v40@0:8@"UIMovieScrubber"16d24d32
v32@0:8^{CGImage=}16@24
@"<AVEditViewDataSource>"
@"<AVEditViewDelegate>"
@"UIMovieScrubber"
@"NSDictionary"16@0:8
@24@0:8@"NSDictionary"16
@"NSArray"24@0:8@"NSArray"16
B32@0:8q16q24
@"<AVPlaybackContentTransitioningViewDelegate>"
@40@0:8@16@24:32
@"AVMediaSelectionTableViewController"
q32@0:8@16q24
v40@0:8@16@24q32
@"AVMediaSelectionOption"
v32@0:8@"AVPictureInPicturePlatformAdapter"16@"NSError"24
v32@0:8@"AVPictureInPicturePlatformAdapter"16@?<v@?B>24
v24@0:8@"AVPictureInPicturePlatformAdapter"16
v28@0:8@"AVPictureInPicturePlatformAdapter"16B24
v32@0:8@"AVPictureInPicturePlatformAdapter"16q24
v40@0:8@"AVPictureInPicturePlatformAdapter"16q24q32
@"<AVPictureInPictureControllerDelegate>"
@"AVPictureInPicturePlatformAdapter"
@"<AVPictureInPicturePrerollDelegate>"
@"AVSampleBufferDisplayLayer"
@"<AVPictureInPictureSampleBufferPlaybackDelegate>"
@48@0:8@16{CGSize=dd}24@40
{?=qiIq}48@0:8q16{?=qiIq}24
B20@0:8f16
@"UIImage"
@"UIColor"
@"NSAttributedString"
@32@0:8d16d24
@64@0:8{?={?=qiIq}{?=qiIq}}16
v32@0:8d16@24
@24@0:8d16
{?={?=qiIq}{?=qiIq}}16@0:8
B24@0:8d16
@28@0:8d16B24
@"NSDate"
@"MPMediaControls"
{CVSMPTETime=ssIIIssss}16@0:8
v40@0:8{CVSMPTETime=ssIIIssss}16
v40@0:8{?=qiIq}16
{CVSMPTETime="subframes"s"subframeDivisor"s"counter"I"type"I"flags"I"hours"s"minutes"s"seconds"s"frames"s}
q40@0:8{?=qiIq}16
@32@0:8^{opaqueCMFormatDescription=}16q24
{CVSMPTETime=ssIIIssss}24@0:8q16
{CVSMPTETime=ssIIIssss}40@0:8q16q24@32
q24@0:8d16
d24@0:8q16
v24@0:8^{opaqueCMSampleBuffer=}16
B40@0:8{?=qiIq}16
@"AVAssetTrack"
v36@0:8B16@20@28
@"<AVPlaybackRateCollectionDelegate>"
@"AVCABackdropLayerView"
v24@0:8@"AVRoutePickerView"16
Q24@0:8@16
Q24@0:8@"AVRoutePickerView"16
@"NSString"24@0:8@"AVRoutePickerView"16
v28@0:8d16B24
@"UIButton"
@"UIViewPropertyAnimator"
@"AVOutputContext"
@"AVMicaPackage"
@"<AVRoutePickerViewDelegate>"
@68@0:8d16^{CGImage=}24B32{CGRect={CGPoint=dd}{CGSize=dd}}36
@"AVPictureInPictureIndicatorSublayer"
@36@0:8d16^{CGImage=}24B32
B48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"CATextLayer"
@"CALayer"
@"<AVTimeControlling>"
@"AVTimer"
@40@0:8@16@24d32
v40@0:8{CGSize=dd}16Q32
@"AVPlaybackContentZoomingView"
@"UITapGestureRecognizer"
B40@0:8@16{CGPoint=dd}24
B32@0:8@16q24
v48@0:8@16q24q32d40
B40@0:8@"AVPlaybackContentTransitioningView"16{CGPoint=dd}24
B32@0:8@"AVPlaybackContentTransitioningView"16q24
@"AVPlaybackContentContainerView"24@0:8@"AVPlaybackContentTransitioningView"16
v48@0:8@"AVPlaybackContentTransitioningView"16q24q32d40
q24@0:8q16
@"AVNewsWidgetPlayerBehavior"
@"AVPlaybackContentTransitioningView"
@"<AVPlayerViewControllerContentTransitioning_NewsOnly>"
v56@0:8d16d24{CGPoint=dd}32d48
{CGAffineTransform=dddddd}96@0:8d16{CGPoint=dd}24d40{CGPoint=dd}48{CGRect={CGPoint=dd}{CGSize=dd}}64
@"<AVTransitionDelegate>"
@"<UIViewControllerContextTransitioningEx>"
@32@0:8{CGSize=dd}16
v32@0:8d16Q24
d24@0:8Q16
@48@0:8@16@24{CGSize=dd}32
d48@0:8Q16@24{CGSize=dd}32
v40@0:8@16@24@?32
@40@0:8@16@24q32
v64@0:8{CGSize=dd}16@32@40d48@?56
@56@0:8{CGSize=dd}16@32@40d48
@36@0:8@16@24B32
v40@0:8@16q24@?32
#32@0:8@16@24
v44@0:8@16@24@32I40
@44@0:8@16@24@32I40
v48@0:8@16r*24*32Q40
@32@0:8@"CAMLParser"16@"NSURL"24
v40@0:8@"CAMLParser"16@24@"NSURL"32
#32@0:8@"CAMLParser"16@"NSString"24
v44@0:8@"CAMLParser"16@"NSString"24@"NSURL"32I40
@44@0:8@"CAMLParser"16@"NSString"24@"NSURL"32I40
v48@0:8@"CAMLParser"16r*24*32Q40
v36@0:8@16@24f32
v32@0:8@"CAStateController"16@"CALayer"24
v36@0:8@"CAStateController"16@"CAStateTransition"24f32
v36@0:8@"CAStateController"16@"CAStateTransition"24B32
v32@0:8@16^{CGColor=}24
v32@0:8^{CGColor=}16@24
@"CAStateController"
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8q16
v32@0:8@?16@?24
v32@0:8@?<v@?>16@?<v@?B>24
@44@0:8d16@24@?32B40
@"NSObject<OS_dispatch_source>"
@"AVSecondScreenDebugAssistant"
@"AVSecondScreen"
@"AVDisplayCriteria"
{UIEdgeInsets=dddd}24@0:8q16
v36@0:8q16q24B32
@"AVPresentationContainerViewAppearanceProxy"
@64@0:8@16@24@32@40@48@56
@56@0:8@16@24q32@40@48
v32@0:8#16@24
@64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48@56
@"AVStatusBarBackgroundGradientView"
v24@0:8@"AVScrubber"16
f24@0:8@16
f24@0:8@"AVVolumeControlsContentView"16
@"<AVTransportControlsViewDelegate>"
@"AVScrubber"
@"AVLabel"
@"AVPlaybackControlsRoutePickerView"
@"AVControlOverflowButton"
@"AVTouchIgnoringView"
v40@0:8:16@24@?32
@"NSMapTable"
@32@0:8Q16d24
v40@0:8d16q24q32
v32@0:8d16q24
B24@0:8q16
@"<AVHomeIPCameraActionButtonHandling>"
v24@0:8@"AVTransportControlsView"16
v32@0:8@"AVTransportControlsView"16@"AVScrubber"24
@"UIView"40@0:8@"AVVolumeControlsContentView"16@"AVVolumeButtonControl"24@"AVVolumeSlider"32
v40@0:8@"AVVolumeControlsContentView"16@"AVVolumeButtonControl"24@"AVVolumeSlider"32
v40@0:8@16@24Q32
v40@0:8@"AVMediaSelectionMenuController"16@"AVMediaSelectionOption"24Q32
@"NSArray"24@0:8@"AVControlOverflowButton"16
{UIEdgeInsets=dddd}24@0:8@16
v32@0:8@"AVPlayerViewControllerContentView"16@"AVPlaybackControlsView"24
v32@0:8@"AVPlayerViewControllerContentView"16@"AVTurboModePlaybackControlsPlaceholderView"24
B24@0:8@"AVPlayerViewControllerContentView"16
v24@0:8@"AVPlayerViewControllerContentView"16
{UIEdgeInsets=dddd}24@0:8@"AVPlayerViewControllerContentView"16
@"NSNumber"24@0:8@"AVPlayerViewControllerContentView"16
v40@0:8d16d24d32
v24@0:8B16B20
v28@0:8B16B20B24
@"<AVVolumeController>"
@"AVNowPlayingInfoController"
@"AVSecondScreenContentViewConnection"
@"AVPlaybackControlsView"
@"AVTurboModePlaybackControlsPlaceholderView"
@"AVPlayerControllerTimeResolver"
@"AVTimeFormatter"
@"UIAlertController"
@"AVRouteDetectorCoordinator"
@"NSUUID"
@"AVMediaSelectionMenuController"
@"AVMobilePlaybackRateMenuController"
@"AVSecondScreenPlayerLayerView"
d24@0:8@"<UIViewControllerContextTransitioning>"16
v24@0:8@"<UIViewControllerContextTransitioning>"16
@"<UIViewImplicitlyAnimating>"24@0:8@"<UIViewControllerContextTransitioning>"16
v36@0:8@"AVTransition"16B24@?<v@?B>28
@"UIColor"24@0:8@"AVTransition"16
B40@0:8@"<AVTransitionDriver>"16@"UIGestureRecognizer"24@"UITouch"32
B32@0:8@"<AVTransitionDriver>"16q24
v40@0:8@"<AVTransitionDriver>"16q24@?<v@?>32
v24@0:8@"<AVTransitionDriver>"16
@"<UIViewControllerAnimatedTransitioning>"40@0:8@"UIViewController"16@"UIViewController"24@"UIViewController"32
@"<UIViewControllerAnimatedTransitioning>"24@0:8@"UIViewController"16
@"<UIViewControllerInteractiveTransitioning>"24@0:8@"<UIViewControllerAnimatedTransitioning>"16
@"UIPresentationController"40@0:8@"UIViewController"16@"UIViewController"24@"UIViewController"32
v44@0:8@16@24B32@?36
v40@0:8@16B24B28@?32
@"<AVTransitionControllerDelegate>"
@"<AVTransitionDriver>"
@"AVDisplayLink"
@"AVTransition"
@"AVInteractiveTransitionGestureTracker"
@"CAMediaTimingFunction"
@"AVSampleBufferDisplayLayerPlayerController"
@"AVPictureInPictureIndicatorLayer"
@"AVPictureInPictureSampleBufferDisplayLayerHostView"
@"CALayerHost"
v88@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64
@"AVValueTiming"
@"BSSimpleAssertion"
@"AVTimecodeController"
@"<AVPlayerControllerDelegate>"
@"AVAsset"
@"AVCoordinatedPlaybackSuspension"
v48@0:8@16@24d32@40
v32@0:8@"NSString"16@?<v@?>24
v24@0:8@"AVScrollViewObserver"16
v48@0:8{UIEdgeInsets=dddd}16
@"AVExternalPlaybackIndicatorView"
@"<AVPlayerViewControllerContentViewDelegate>"
@"UIView<AVPlaybackContentContainer>"
@"AVScrollViewObserver"
{UIEdgeInsets="top"d"left"d"bottom"d"right"d}
@"AVUserInteractionObserverGestureRecognizer"
@"UIVisualEffectView"
@"NSISO8601DateFormatter"
@"AVLoadingButtonView"
@32@0:8@16d24
@"CADisplayLink"
@"AVCustomStackLayout"
@"UIView<AVLayoutViewItem>"
v32@0:8q16@?24
v32@0:8q16d24
@"AVView"
@"AVTransportControlsView"
@"<AVPlaybackControlsViewVisibilityDelegate>"
@"NSData"16@0:8
@32@0:8q16@24
@60@0:8@16@24@32@40@48f56
@"NSArray"24@0:8@"<AVKitLayoutItem>"16
@"NSArray"32@0:8{CGSize=dd}16
@"NSLayoutXAxisAnchor"16@0:8
@"NSLayoutYAxisAnchor"16@0:8
@"NSLayoutDimension"16@0:8
@28@0:8@16f24
@36@0:8@16d24f32
@28@0:8d16f24
{?={?=qiIq}{?=qiIq}}24@0:8@16
v32@0:8@16{?=ii}24
v56@0:8@16{?=qiIq}24@?48
v28@0:8@"AVPictureInPictureController"16B24
{?={?=qiIq}{?=qiIq}}24@0:8@"AVPictureInPictureController"16
B24@0:8@"AVPictureInPictureController"16
v32@0:8@"AVPictureInPictureController"16{?=ii}24
v56@0:8@"AVPictureInPictureController"16{?=qiIq}24@?<v@?>48
v64@0:8{?={?=qiIq}{?=qiIq}}16
@"AVPictureInPicturePlaybackState"
@"AVSampleBufferDisplayLayerPlaybackDelegateAdapter"
{?="start"{?="value"q"timescale"i"flags"I"epoch"q}"duration"{?="value"q"timescale"i"flags"I"epoch"q}}
