?ffffff
?ffffff
?ffffff
?[5"y
MbP?{
333333
?333333
 @ffffff
.AUUUUUU
yDff
?)\
ignoresTouches
TB,N,V_ignoresTouches
prominentPlayButton
T@"AVButton",&,N,V_prominentPlayButton
prominentPlayButtonBackdropView
T@"AVBackdropView",&,N,V_prominentPlayButtonBackdropView
styleSheet
T@"AVStyleSheet",&,N,V_styleSheet
playerViewController
T@"AVPlayerViewController",&,N,V_playerViewController
playerLayerView
T@"AVAppStorePlayerLayerView",&,N,V_playerLayerView
videoGravityForLayoutClassDictionary
T@"NSMutableDictionary",&,N,V_videoGravityForLayoutClassDictionary
observationController
T@"AVObservationController",R,N,V_observationController
TB,N,V_showsPlaybackControls
TB,N,V_updatesNowPlayingInfoCenter
TB,N,V_showsMinimalPlaybackControlsWhenEmbeddedInline
canPausePlaybackWhenExitingFullScreen
TB,N,V_canPausePlaybackWhenExitingFullScreen
TB,N,V_allowsEnteringFullScreen
videoGravity
T@"NSString",C,N,V_videoGravity
contentOverlayView
T@"UIView",R,N,V_contentOverlayView
player
T@"AVPlayer",&,N,V_player
playButtonHandlerForLazyPlayerLoading
T@?,C,N,V_playButtonHandlerForLazyPlayerLoading
preferredUnobscuredArea
Tq,N,V_preferredUnobscuredArea
playerViewControllerDelegate
T@"<AVPlayerViewControllerDelegate>",W,N,V_playerViewControllerDelegate
layer
T@"AVPlayerLayer",R,D,N
appStorePlayerViewPlayerLayerOnly
appStorePlayerViewDisableVideo
v16@?0@"AVAppStorePlayerView"8
Central Play
routeDetectionEnabled
TB,N,GisRouteDetectionEnabled,V_routeDetectionEnabled
multipleRoutesDetected
TB,R,N
AVRouteDetectorCoordinatorMultipleRoutesDetectedDidChangeNotification
com.apple.avkit.routeDetectorCoordinatorQueue
delegate
T@"<AVContentOverlayViewDelegate>",W,N,V_delegate
-[UIWindow(AVAdditions) avkit_ensureOrientation:disableTouchCancellation:]
com.apple.avkit
AVKit
%@ (%p) %@
AVKitErrorDomain
playerLayer
T@"AVPlayerLayer",R,N
V:|[simplePlayerLayerView]|
H:|[simplePlayerLayerView]|
simplePlayerLayerView
pegasusProxy
T@"PGPictureInPictureProxy",R,N,V_pegasusProxy
videoRectInScreen
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_videoRectInScreen
layoutCheckTimer
T@"NSTimer",R,N,V_layoutCheckTimer
secondScreenConnection
T@"AVSecondScreenConnection",&,N,V_secondScreenConnection
sourceWindowWhenPictureInPictureStarted
T@"UIWindow",W,N,V_sourceWindowWhenPictureInPictureStarted
source
T@"<AVPictureInPictureContentSource>",R,W,N,V_source
statusStorage
Tq,N,V_statusStorage
T@"<AVPictureInPicturePlatformAdapterDelegate>",W,N,V_delegate
playerController
T@"AVPlayerController",&,N,V_playerController
TB,N,V_allowsPictureInPicturePlayback
systemPictureInPicturePossible
TB,R,N,GisSystemPictureInPicturePossible
alwaysStartsAutomaticallyWhenEnteringBackground
TB,N,V_alwaysStartsAutomaticallyWhenEnteringBackground
controlsStyle
Tq,N,V_controlsStyle
canAnimatePictureInPictureTransition
pictureInPictureViewController
T@"AVPictureInPictureViewController",R,N,V_pictureInPictureViewController
anyPictureInPictureActive
TB,R,N,GisAnyPictureInPictureActive,V_anyPictureInPictureActive
status
Tq,R,N,V_status
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
Tq,N
-[AVPictureInPicturePlatformAdapter pictureInPictureProxyPictureInPictureInterruptionEnded:]
-[AVPictureInPicturePlatformAdapter pictureInPictureProxyPictureInPictureInterruptionBegan:]
-[AVPictureInPicturePlatformAdapter pictureInPictureProxy:didStopPictureInPictureWithAnimationType:reason:]
-[AVPictureInPicturePlatformAdapter pictureInPictureProxy:willStopPictureInPictureWithAnimationType:reason:]
-[AVPictureInPicturePlatformAdapter pictureInPictureProxy:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:]
-[AVPictureInPicturePlatformAdapter pictureInPictureProxy:failedToStartPictureInPictureWithAnimationType:error:]
-[AVPictureInPicturePlatformAdapter pictureInPictureProxy:didStartPictureInPictureWithAnimationType:]
-[AVPictureInPicturePlatformAdapter pictureInPictureProxy:willStartPictureInPictureWithAnimationType:]
playerController.player
v32@?0@"AVPictureInPicturePlatformAdapter"8@16@"AVKeyValueChange"24
isPictureInPicturePossible
v32@?0@"AVPictureInPicturePlatformAdapter"8@"PGPictureInPictureProxy"16@"AVKeyValueChange"24
playerController.contentDimensions
playerController.loadedTimeRanges
playerController.playing
playerController.rate
playerController.status
playerController.contentDurationWithinEndTimes
playerController.currentTimeWithinEndTimes
v16@?0@"AVPictureInPicturePlatformAdapter"8
playerController.pictureInPicturePossible
pictureInPictureSupported
TB,R,N,GisPictureInPictureSupported
stopPictureInPictureButtonImageName
T@"NSString",R,N
startPictureInPictureButtonImageName
StopPictureInPictureButton
StartPictureInPictureButton
pictureInPicturePlayerLayer
T@"AVPlayerLayer",&,N,V_pictureInPicturePlayerLayer
videoDisplaySize
T{CGSize=dd},R,N
T@"AVPlayerLayer",R,N,V_playerLayer
T@"AVPlayerController",&,N
readyForDisplay
TB,R,N,GisReadyForDisplay
videoBounds
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
videoScaled
TB,N,GisVideoScaled
pixelBufferAttributes
T@"NSDictionary",C,N
pictureInPicturePlayerLayerView
T@"AVPictureInPicturePlayerLayerView",R,N
PictureInPictureIndicatorLarge
playerLayer.pixelBufferAttributes
pictureInPicturePlayerLayer.videoRect
playerLayer.videoRect
playerLayer.readyForDisplay
playerLayer.videoGravity
timestamp
Td,V_timestamp
velocity
Td,V_velocity
scrollView
T@"UIScrollView",&,N,V_scrollView
scrollScrubbing
TB,N,GisScrollScrubbing,V_scrollScrubbing
scrubbingSpeed
Tq,N,V_scrubbingSpeed
resolution
Td,N,V_resolution
slowKnobMovementDetected
TB,N,V_slowKnobMovementDetected
shouldRecoverFromPrecisionScrubbingIfNeeded
TB,N,V_shouldRecoverFromPrecisionScrubbingIfNeeded
loadedTrackOverlayView
T@"UIView",R,N,V_loadedTrackOverlayView
currentThumbView
T@"UIImageView",W,N,V_currentThumbView
previousScrubberVelocities
T@"NSMutableArray",&,N,V_previousScrubberVelocities
updateSlowKnobMovementDetectedTimer
T@"NSTimer",&,N,V_updateSlowKnobMovementDetectedTimer
timestampWhenTrackingEnded
Td,N,V_timestampWhenTrackingEnded
feedbackGenerator
T@"UISelectionFeedbackGenerator",R,N,V_feedbackGenerator
scrubsWhenTappedAnywhere
TB,N,V_scrubsWhenTappedAnywhere
canChangeScrubbingSpeed
TB,N,V_canChangeScrubbingSpeed
extrinsicContentSize
T{CGSize=dd},N,V_extrinsicContentSize
collapsed
TB,N,GisCollapsed,V_collapsed
included
TB,N,GisIncluded,V_included
removed
TB,N,GisRemoved,V_removed
collapsedOrExcluded
TB,R,N,GisCollapsedOrExcluded
hasAlternateAppearance
TB,N,V_hasAlternateAppearance
hasFullScreenAppearance
TB,N,V_hasFullScreenAppearance
hasChangedLocationAtLeastOnce
TB,N,V_hasChangedLocationAtLeastOnce
T@"<AVScrubberDelegate>",W,N,V_delegate
loadedTimeRanges
T@"NSArray",C,N,V_loadedTimeRanges
localizedScrubbingSpeedName
estimatedFrameRate
Tf,N,V_estimatedFrameRate
hitRectInsets
T{NSDirectionalEdgeInsets=dddd},N,V_hitRectInsets
timeIntervalSinceTrackingEnded
Td,R,N
rate
Tf,N,V_rate
PLAYBACK_CONTROLS_VIEW_CONTROLLER_SCRUB_INSTRUCTIONS_SUBTITLE_LABEL_FINE_SCRUBBING_TEXT
PLAYBACK_CONTROLS_VIEW_CONTROLLER_SCRUB_INSTRUCTIONS_SUBTITLE_LABEL_QUARTER_SPEED_SCRUBBING_TEXT
PLAYBACK_CONTROLS_VIEW_CONTROLLER_SCRUB_INSTRUCTIONS_SUBTITLE_LABEL_HALF_SPEED_SCRUBBING_TEXT
PLAYBACK_CONTROLS_VIEW_CONTROLLER_SCRUB_INSTRUCTIONS_SUBTITLE_LABEL_HI_SPEED_SCRUBBING_TEXT
viewLoaded
TB,N,GisViewLoaded,V_viewLoaded
hidden
TB,N,GisHidden,V_hidden
alpha
Td,N,V_alpha
view
T@"UIView",W,N,V_view
startTime
Td,R,V_startTime
duration
Td,R,V_duration
number
TQ,R,V_number
title
T@"NSString",R,C,V_title
image
T@"UIImage",R,V_image
com.apple.AVKit.ChapterImageQueue
avkt/ExternalContentIdentifier
avkt/ExternalUserProfileIdentifier
avkt/PlaybackProgress
avkt/ServiceIdentifier
avkt/iTunesStoreIdentifier
avkt/BrandIdentifier
AVPlayerItemAVKitDataDidChangeNotification
customPropertyStorage
T@"NSMutableDictionary",R,N,V_customPropertyStorage
externalMetadata
externalPlaybackController
AC3Only
TB,R,GisAC3Only
main
TB,R,GisMain
TB,R,GisSDH
TB,R,GisCC
easyReader
TB,R,GisEasyReader
auxiliary
TB,R,GisAuxiliary
avkit_persistentIdentifier
T@"NSNumber",R
-[AVPlayerController(AVMediaSelection) _setMediaOption:mediaCharacteristic:]
-[AVPlayerController(AVMediaSelection) _enableAutoMediaSelection:]
-[AVPlayerController(AVMediaSelection) _disableLegibleMediaSelectionOptions:]
-[AVPlayerController(AVMediaSelection) _ensureUserCaptionDisplayType:]
q24@?0@8@16
B8@?0
-[AVPlayerController(AVMediaSelection) selectedMediaOptionMayHaveChanged:]
player.appliesMediaSelectionCriteriaAutomatically
-[AVPlayerController(AVMediaSelection) currentLegibleMediaSelectionOption]
-[AVPlayerController(AVMediaSelection) setLegibleMediaSelectionOptions:]
-[AVPlayerController(AVMediaSelection) setAudioMediaSelectionOptions:]
MediaSelectionOptionsPersistentID
legibleMediaSelectionOptions
audioMediaSelectionOptions
hasLegibleMediaSelectionOptions
hasAudioMediaSelectionOptions
+[AVPlayerController(AVMediaSelection) canonicalLanguageIdentifierFromString:]
NilString
observer
T@"UIView<AVScrollViewObserverContentView>",W,N,V_observer
observedScrollViews
T@"NSHashTable",C,N,V_observedScrollViews
scrolling
TB,N,GisScrolling,V_scrolling
scrollingQuickly
TB,N,GisScrollingQuickly,V_scrollingQuickly
scrollingDidEndTimer
T@"NSTimer",&,N,V_scrollingDidEndTimer
thumbView
T@"UIImageView",&,N,V_thumbView
volumeWarningView
T@"AVVolumeWarningView",W,N,V_volumeWarningView
animatingVolumeChange
TB,N,GisAnimatingVolumeChange,V_animatingVolumeChange
effectiveVolumeLimit
Tf,N,V_effectiveVolumeLimit
unclampedValue
T@"NSNumber",&,N,V_unclampedValue
T{CGSize=dd},N
TB,N,GisRemoved
TB,N,GisCollapsed
TB,N,GisIncluded
TB,N
animator
T@"UIViewPropertyAnimator",&,N,V_animator
stopping
TB,N,GisStopping,V_stopping
behaviorContext
T@"AVNewsWidgetPlayerBehaviorContext",W,N,V_behaviorContext
T@,W,N
-[AVNewsWidgetPlayerBehavior dealloc]
-[AVNewsWidgetPlayerBehavior init]
volumeToRestore
Td,N,V_volumeToRestore
animatingTowardsZero
TB,N,GisAnimatingTowardsZero,V_animatingTowardsZero
animatingAwayFromZero
TB,N,GisAnimatingAwayFromZero,V_animatingAwayFromZero
T@"AVPlayerController",R,N,V_playerController
supportsVolumeAnimation
T@"AVHomeIPCameraBehaviorContext",W,N,V_behaviorContext
pinchToDismissEnabled
TB,N,GisPinchToDismissEnabled,V_pinchToDismissEnabled
pinchToPresentEnabled
TB,N,GisPinchToPresentEnabled,V_pinchToPresentEnabled
panToDismissEnabled
TB,N,GisPanToDismissEnabled,V_panToDismissEnabled
previousPinchScale
Td,N,V_previousPinchScale
_rotation
Td,N,S_setRotation:,V__rotation
panGestureRecognizer
T@"UIPanGestureRecognizer",R,N,V_panGestureRecognizer
pinchGestureRecognizer
T@"UIPinchGestureRecognizer",R,N,V_pinchGestureRecognizer
rotationGestureRecognizer
T@"UIRotationGestureRecognizer",R,N,V_rotationGestureRecognizer
recognizers
T@"NSArray",R,N,V_recognizers
waitingForTransition
TB,N,GisWaitingForTransition,V_waitingForTransition
waitingForBoundsChange
TB,N,GisWaitingForBoundsChange,V_waitingForBoundsChange
waitingForLocationChangeAfterBoundsChange
TB,N,GisWaitingForLocationChangeAfterBoundsChange,V_waitingForLocationChangeAfterBoundsChange
timestampOfTouchWithLocationChangeAfterBoundsChange
Td,N,V_timestampOfTouchWithLocationChangeAfterBoundsChange
hasContinued
TB,N,V_hasContinued
hasRotated
TB,N,V_hasRotated
initialInterfaceOrientation
Tq,N,V_initialInterfaceOrientation
initialCoordinateSpaceBounds
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_initialCoordinateSpaceBounds
gestureLocationAfterBoundsChange
T{CGPoint=dd},N,V_gestureLocationAfterBoundsChange
lastReportedLocationInWindow
T{CGPoint=dd},N,V_lastReportedLocationInWindow
anchorLocationInWindow
T{CGPoint=dd},N,V_anchorLocationInWindow
lastNonZeroVelocityWasDownward
TB,N,V_lastNonZeroVelocityWasDownward
transitionInteraction
Tq,N,V_transitionInteraction
enabled
TB,N,GisEnabled,V_enabled
transitionDriverDelegate
T@"<AVTransitionDriverDelegate>",W,N,V_transitionDriverDelegate
rotation
rotationVelocity
pinchScale
pinchVelocity
contentTransitioningViewGestureRecognizer
T@"UIPanGestureRecognizer",W,N,V_contentTransitioningViewGestureRecognizer
TB,R,N,GisEnabled
T@"<AVTransitionDriverDelegate>",W,N
Tq,R,N
T@"UIPanGestureRecognizer",W,N
T@"UIView",R,W,N
secondScreens
T@"NSMutableOrderedSet",R,N,V_secondScreens
connections
T@"NSMutableOrderedSet",R,N,V_connections
allowsUpdatingActiveConnection
TB,N,V_allowsUpdatingActiveConnection
-[AVSecondScreenController _insertConnection:atIndex:]
-[AVSecondScreenController _updateActiveConnection]
B16@?0@"AVSecondScreenConnection"8
-[AVSecondScreenController _targetScreen]
-[AVSecondScreenController removeSecondScreen:]
-[AVSecondScreenController addSecondScreen:]
-[AVSecondScreenController setPreferredConnection:]
-[AVSecondScreenController removeConnection:]
-[AVSecondScreenController addConnection:]
v32@?0@"AVSecondScreenController"8@16@"NSNotification"24
-[AVSecondScreenController init]_block_invoke
presentationController
T@"AVPresentationController",R,W,N,V_presentationController
transitionType
sourceView
T@"UIView",W,N,V_sourceView
presentedView
T@"AVPresentationContainerView",R,W,N
containerView
presentationWindow
T@"UIWindow",R,W,N
touchBlockingView
T@"UIView",R,N,V_touchBlockingView
backgroundView
T@"UIView",R,N,V_backgroundView
presentedViewController
T@"UIViewController",R,W,N
transitionContext
T@"<UIViewControllerContextTransitioning>",W,N,V_transitionContext
allowsSecondWindowPresentations
TB,N,V_allowsSecondWindowPresentations
rotatableSecondWindow
T@"UIWindow",&,N,V_rotatableSecondWindow
avFullScreenViewController
T@"AVFullScreenViewController",R,W,N,V_avFullScreenViewController
rotatableWindowViewController
T@"AVFullScreenViewController",R,W,N
presentingTransition
T@"AVPresentationContextTransition",&,N,V_presentingTransition
dismissingTransition
T@"AVPresentationContextTransition",&,N,V_dismissingTransition
currentTransition
T@"AVPresentationContextTransition",R,N
hasActiveTransition
presenting
TB,R,N,GisPresenting
dismissing
TB,R,N,GisDismissing
wasInitiallyInteractive
canBeInteractivelyDismissed
allowsPausingWhenTransitionCompletes
TB,N,V_allowsPausingWhenTransitionCompletes
supportsInteractiveCounterRotationDismissals
AVNowPlayingInfoControllerDidReceiveStopCommandEventNotification
playerControllerToActivateAfterDelay
T@"AVPlayerController",W,N,V_playerControllerToActivateAfterDelay
TB,N,GisEnabled
TB,N,V_requiresLinearPlayback
overrideParentApplicationDisplayIdentifier
T@"NSString",C,N,V_overrideParentApplicationDisplayIdentifier
v40@?0@"NSMutableDictionary"8@"NSArray"16@"NSString"24^{__CFString=}32
playerController.legibleMediaSelectionOptions
playerController.audioMediaSelectionOptions
playerController.canSeekChapterBackward
playerController.canSeekChapterForward
playerController.canScanBackward
playerController.canScanForward
playerController.canSeek
playerController.canTogglePlayback
playerController.canPlay
playerController.canPause
v32@?0@"AVNowPlayingInfoController"8@16@"NSNotification"24
playerController.hasLiveStreamingContent
playerController.metadata
playerController.contentDuration
playerController.hasContent
-[AVNowPlayingInfoController dealloc]
-[AVNowPlayingInfoController init]
^{__CFArray=}20@?0I8^{__CFDictionary=}12
+[AVNowPlayingInfoController _mediaRemoteLanguageOptionCharacteristicsForAVMediaSelectionOption:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileAVKit_Sim/MobileAVKit-619.1.7/Embedded/MobileAVKit/Utilities/AVNowPlayingInfoController_Mobile.m
mediaRemoteMediaCharacteristic
com.apple.avkit.sharedNowPlayingInfoController
T@"CAGradientLayer",R,D,N
gradientOpacity
Td,N,V_gradientOpacity
T@"CABackdropLayer",R,D,N
gradientView
T@"AVStatusBarBackgroundGradientViewSubview",&,N,V_gradientView
B24@?0@"UISceneSession"8@"NSDictionary"16
B24@?0@"UIWindowScene"8@"NSDictionary"16
T@"AVMusicAppBehaviorContext",W,N,V_behaviorContext
behavior
T@"AVMusicAppBehavior",W,N,V_behavior
scrubbing
TB,N,GisScrubbing,V_scrubbing
seekTargetTime
T@"NSNumber",&,N,V_seekTargetTime
showsSkipItemButtons
TB,N,V_showsSkipItemButtons
skipToPreviousItemButtonEnabled
TB,N,GisSkipToPreviousItemButtonEnabled,V_skipToPreviousItemButtonEnabled
skipToNextItemButtonEnabled
TB,N,GisSkipToNextItemButtonEnabled,V_skipToNextItemButtonEnabled
T@"AVPlayerViewController",R,W,N,V_playerViewController
T@"AVPlayerViewController",R,W,N
v32@?0@"AVMusicAppBehaviorContext"8@16@"AVKeyValueChange"24
playerController.seeking
playerController.seekToTime
playerController.player.currentItem
playerController.scrubbing
v32@?0@"AVMusicAppBehaviorContext"8@16@"NSNotification"24
avkit_musicAppBehaviorContext
T@"AVMusicAppBehaviorContext",R,W,N
AVSecondScreenDidDisconnectNotification
AVSecondScreenConnectionDidBecomePossibleNotification
window
T@"UIWindow",&,N,V_window
windowScene
T@"UIWindowScene",R,W,N,V_windowScene
screen
T@"UIScreen",R,W,N,V_screen
state
Tq,R,N,V_state
debugInfoDisplay
T@"CADisplay",&,N,V_debugInfoDisplay
TVOutScreen
TB,R,N,GisTVOutScreen,V_TVOutScreen
sceneBounds
-[AVSecondScreen setState:]
Invalid
PlaybackActive
PlaybackPossible
PlaybackProhibited
-[AVSecondScreen connectWithSecondScreenConnection:]
-[AVSecondScreen dealloc]
v32@?0@"AVSecondScreen"8@16@"NSNotification"24
-[AVSecondScreen initWithScene:]_block_invoke
v32@?0@"AVSecondScreen"8@"UIWindowScene"16@"NSNotification"24
-[UIViewController(AVAdditions) avkit_setNeedsUpdatePreferencesIfNeeded]
UIWhitePointAdaptivityStyleVideo == preferredWhitePointAdaptivityStyle
prefersHomeIndicatorAutoHidden
-[UIWindowScene(AVAdditions) avkit_disableTouchCancellation:forRotationActions:]
actuallyDisableTouchCancellation
loadingIndicator
T@"UIActivityIndicatorView",&,N,V_loadingIndicator
button
T@"AVButton",R,N,V_button
showsLoadingIndicator
TB,N,V_showsLoadingIndicator
TB,R,N,GisCollapsedOrExcluded,V_collapsedOrExcluded
clientIdentifier
T@"NSString",R,N,V_clientIdentifier
sceneIdentifier
T@"NSString",R,N,V_sceneIdentifier
changingVolume
TB,N,GisChangingVolume,V_changingVolume
currentRouteHasVolumeControl
TB,N,V_currentRouteHasVolumeControl
EUVolumeLimit
Tf,N,V_EUVolumeLimit
EUVolumeLimitEnabled
TB,N,GisEUVolumeLimitEnabled,V_EUVolumeLimitEnabled
EUVolumeLimitOverridden
TB,N,GisEUVolumeLimitOverridden,V_EUVolumeLimitOverridden
volume
Tf,N,V_volume
volumeChangesThrottled
TB,N,V_volumeChangesThrottled
canOverrideEUVolumeLimit
TB,N,V_canOverrideEUVolumeLimit
targetVolumeInternal
T@"NSNumber",&,N,V_targetVolumeInternal
maximumTargetVolumeSinceChangingVolumeBegan
T@"NSNumber",&,N,V_maximumTargetVolumeSinceChangingVolumeBegan
volumeCategory
T@"NSString",R,N,V_volumeCategory
sharedSystemController
T@"AVSystemController",&,N,V_sharedSystemController
fullyInitialized
TB,N,GisFullyInitialized,V_fullyInitialized
Tf,R,N
TB,R,N,GisChangingVolume
v16@?0@"AVSystemVolumeController"8
AVVolumeControllerCurrentRouteHasVolumeControlChangedNotification
CannotExceedEUVolumeLimit
EUVolumeLimitReached
RouteChange
ExplicitVolumeChange
AVVolumeControllerVolumeChangedNotification
-[AVSystemVolumeController setSystemVolumeHUDEnabled:forWindowSceneSessionIdentifier:]
Disabling
Enabling
B24@?0@"AVVolumeHUDAssertion"8^B16
AVVolumeControllerVolumeDidChangeNotificationIsInitialValueKey
MPDebugEUVolumeLimit
.GlobalPreferences
Audio/Video
RegionalBehaviorEUVolumeLimit
windowSceneVolumeHUDAssertions
T@"NSMutableSet",R,N
T@"AVZoomingBehaviorContext",W,N,V_behaviorContext
transportControlsAreaLayoutGuideProvidingView
T@"UIView",R,N,V_transportControlsAreaLayoutGuideProvidingView
displayModeControlsAreaLayoutGuideProvidingView
T@"UIView",R,N,V_displayModeControlsAreaLayoutGuideProvidingView
volumeControlsAreaLayoutGuideProvidingView
T@"UIView",R,N,V_volumeControlsAreaLayoutGuideProvidingView
unobscuredTopAreaLayoutGuideProvidingView
T@"UIView",R,N,V_unobscuredTopAreaLayoutGuideProvidingView
unobscuredCenterAreaLayoutGuideProvidingView
T@"UIView",R,N,V_unobscuredCenterAreaLayoutGuideProvidingView
animatedUnobscuredCenterAreaLayoutGuideProvidingView
T@"UIView",R,N,V_animatedUnobscuredCenterAreaLayoutGuideProvidingView
areTransportControlsVisible
TB,N,V_areTransportControlsVisible
areVolumeControlsVisible
TB,N,V_areVolumeControlsVisible
transportControlsAreaLayoutGuide
T@"UILayoutGuide",R,N,V_transportControlsAreaLayoutGuide
displayModeControlsAreaLayoutGuide
T@"UILayoutGuide",R,N,V_displayModeControlsAreaLayoutGuide
volumeControlsAreaLayoutGuide
T@"UILayoutGuide",R,N,V_volumeControlsAreaLayoutGuide
unobscuredCenterAreaLayoutGuide
T@"UILayoutGuide",R,N,V_unobscuredCenterAreaLayoutGuide
animatedUnobscuredCenterAreaLayoutGuide
T@"UILayoutGuide",R,N,V_animatedUnobscuredCenterAreaLayoutGuide
unobscuredTopAreaLayoutGuide
T@"UILayoutGuide",R,N,V_unobscuredTopAreaLayoutGuide
customButton
T@"AVButton",R,N
v16@?0@"AVMicaPackage"8
AirPlay
shouldUseCompactFullScreenSize
TB,N,V_shouldUseCompactFullScreenSize
traitCollection
T@"UITraitCollection",&,N,V_traitCollection
defaultItemInlineSize
T{CGSize=dd},R,N,V_defaultItemInlineSize
defaultItemFullScreenSize
T{CGSize=dd},R,N,V_defaultItemFullScreenSize
standardPadding
Td,R,N,V_standardPadding
standardInteritemPadding
Td,R,N,V_standardInteritemPadding
additionalInlinePaddingForDodgingSafeArea
Td,R,N,V_additionalInlinePaddingForDodgingSafeArea
routePickerButtonInlineSize
T{CGSize=dd},R,N,V_routePickerButtonInlineSize
routePickerButtonFullScreenSize
T{CGSize=dd},R,N,V_routePickerButtonFullScreenSize
volumeSliderInlineWidth
Td,R,N,V_volumeSliderInlineWidth
volumeSliderCompactFullScreenWidth
Td,R,N,V_volumeSliderCompactFullScreenWidth
volumeSliderRegularFullScreenWidth
Td,R,N,V_volumeSliderRegularFullScreenWidth
volumeSliderPadding
Td,R,N,V_volumeSliderPadding
minimumProminentPlayButtonDimension
Td,R,N,V_minimumProminentPlayButtonDimension
maximumProminentPlayButtonDimension
Td,R,N,V_maximumProminentPlayButtonDimension
maximumTransportControlsWidth
Td,R,N,V_maximumTransportControlsWidth
maximumMultiRowTransportControlsWidth
Td,R,N,V_maximumMultiRowTransportControlsWidth
minimumTransportControlsWidth
Td,R,N,V_minimumTransportControlsWidth
minimumScrubberWidth
Td,R,N,V_minimumScrubberWidth
playButtonCenterToBottomDistance
Td,R,N,V_playButtonCenterToBottomDistance
scrubberCenterToScrubInstructionsDistance
Td,R,N,V_scrubberCenterToScrubInstructionsDistance
elapsedTimeLabelBaselineToControlsBottomDistance
Td,R,N,V_elapsedTimeLabelBaselineToControlsBottomDistance
elapsedTimeLabelTopToScrubberCenterYDistance
Td,R,N,V_elapsedTimeLabelTopToScrubberCenterYDistance
scrubberCenterYToControlsTopMinimumDistance
Td,R,N,V_scrubberCenterYToControlsTopMinimumDistance
liveBroadcastLabelTopToBackdropTopDistance
Td,R,N,V_liveBroadcastLabelTopToBackdropTopDistance
scrubberInstructionsTopToBackdropTopDistance
Td,R,N,V_scrubberInstructionsTopToBackdropTopDistance
scrubberInstructionsMinimumRequiredWidth
Td,R,N,V_scrubberInstructionsMinimumRequiredWidth
infoLabelFont
T@"UIFont",R,N,V_infoLabelFont
scrubberTimeLabelFont
T@"UIFont",R,N,V_scrubberTimeLabelFont
scrubberInfoLabelFont
T@"UIFont",R,N,V_scrubberInfoLabelFont
T@"AVEditBehaviorContext",W,N,V_behaviorContext
T@"<AVEditBehaviorDelegate>",W,N,V_delegate
AVPlayerViewControllerDidChangePlayerControllerNotification
_actualContentOverlayView
T@"AVContentOverlayView",R,N,V__actualContentOverlayView
_defaultPlaybackRateStorage
T@"NSNumber",&,N,V__defaultPlaybackRateStorage
fullScreenViewController
T@"AVFullScreenViewController",R,N
shouldUseNetworkingResourcesForLiveStreamingWhilePaused
TB,N,V_shouldUseNetworkingResourcesForLiveStreamingWhilePaused
finishPreparingForInteractiveDismissalHandler
T@?,C,N,V_finishPreparingForInteractiveDismissalHandler
interactiveDismissalCompletionHandler
T@?,C,N,V_interactiveDismissalCompletionHandler
_observationController
T@"AVObservationController",R,N,V__observationController
_behaviorStorage
T@"AVBehaviorStorage",R,N,V__behaviorStorage
_targetVideoGravitiesForLayoutClass
T@"NSMutableDictionary",R,N,V__targetVideoGravitiesForLayoutClass
_hasBegunObservation
TB,N,V__hasBegunObservation
_numberOfTrackedUserInteractions
Tq,N,S_setNumberOfTrackedUserInteractions:,V__numberOfTrackedUserInteractions
hoverGestureRecognizer
T@"UIGestureRecognizer",&,N,V_hoverGestureRecognizer
_localizedDiscoverabilityTitleForKeyCommandLocalizationKey
T@"NSMutableDictionary",R,N,V__localizedDiscoverabilityTitleForKeyCommandLocalizationKey
overrideRouteSharingPolicy
TQ,N,V_overrideRouteSharingPolicy
secondScreenConnectionDisplaySize
T{CGSize=dd},N,V_secondScreenConnectionDisplaySize
volumeAnimator
T@"AVPlayerControllerVolumeAnimator",&,N,V_volumeAnimator
T@"__AVPlayerLayerView",&,N,V_playerLayerView
TB,N,GisReadyForDisplay,V_readyForDisplay
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_videoBounds
hasPerformedInitialSetup
TB,N,V_hasPerformedInitialSetup
wasInitializedUsingWebKitSPI
TB,N,V_wasInitializedUsingWebKitSPI
overrideRoutingContextUID
T@"NSString",C,N,V_overrideRoutingContextUID
requiresImmediateAssetInspection
TB,N,V_requiresImmediateAssetInspection
TB,N,V_showsTimecodes
customControlsView
T@"AVPlayerViewControllerCustomControlsView",R,N
TB,N,V_playbackControlsIncludeVolumeControls
videoDisplayScale
viewControllerForFullScreenPresentation
T@"UIViewController",R,N
customControlItems
T@"NSArray",C,N,V_customControlItems
defaultPlaybackRate
Td,N
TB,N,V_canIncludePlaybackControlsWhenInline
pictureInPictureActive
TB,R,N,GisPictureInPictureActive,V_pictureInPictureActive
T@?,C,N
T@"NSString",C,N
T@"UIView",R,N
TB,N,V_entersFullScreenWhenPlaybackBegins
exitsFullScreenWhenPlaybackEnds
TB,N,V_exitsFullScreenWhenPlaybackEnds
T@"<AVPlayerViewControllerDelegate>",W,N,V_delegate
avkit_videoRectInWindow
avkit_isVisible
avkit_window
T@"UIWindow",R,N
v20@?0B8@"NSError"12
Invalid call of %@!
*** Warning: %@ is trying to exit full screen, but is not in its view's window's view controller hierarchy. This results in undefined behavior.
*** Warning: %@ is trying to enter full screen, but is not in its view's window's view controller hierarchy. This results in undefined behavior.
-[AVPlayerViewController exitFullScreenWithCompletion:]_block_invoke
success
-[AVPlayerViewController enterFullScreenWithCompletion:]_block_invoke
v32@?0@"AVPlayerViewController"8@16@"AVKeyValueChange"24
playerLayerView.videoBounds
playerLayerView.readyForDisplay
-[AVPlayerViewController _delegateRespondsTo:]
does NOT
does
v16@?0@"<AVMetricsCollectionBehaviorContext>"8
-[AVPlayerViewController _mediaSelectionDoneButtonTapped:]
B16@?0@"UIView"8
-[AVPlayerViewController _handleDoubleDoubleTapGesture:]
-[AVPlayerViewController _handleSingleTapGesture:]
-[AVPlayerViewController _handleDoubleTapGesture:]
com.apple.iBooks
EXTERNAL_PLAYBACK_INDICATOR_VIEW_TV_OUT_SUBTITLE
EXTERNAL_PLAYBACK_INDICATOR_VIEW_TV_OUT_TITLE
EXTERNAL_PLAYBACK_INDICATOR_VIEW_AIRPLAY_SUBTITLE
EXTERNAL_PLAYBACK_INDICATOR_VIEW_AIRPLAY_TITLE
-[AVPlayerViewController _isAudioOnlyContent]
-[AVPlayerViewController _addObservers]
_pictureInPictureController
v16@?0@"AVPlayerViewController"8
playerController.hasEnabledVideo
playerController.hasEnabledAudio
playerController.externalPlaybackType
playerController.playingOnExternalScreen
v32@?0@"AVPlayerViewController"8@16@"NSNotification"24
Exit full screen keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_EXIT_FULLSCREEN
Show next frame keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_SHOW_NEXT_FRAME
Show previous frame keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_SHOW_PREVIOUS_FRAME
Fast forward keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_FAST_FORWARD
Rewind keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_REWIND
Go to beginning keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_GO_TO_BEGINNING
Skip ahead 15 seconds keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_SKIP_AHEAD_15
Skip back 15 seconds keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_SKIP_BACK_15
Volume down keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_VOLUME_DOWN
Volume up keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_VOLUME_UP
Play/Pause keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_PLAY_PAUSE
v56@?0@"NSString"8q16:24:32@"NSString"40@"NSString"48
com.apple.AppStore
-[AVPlayerViewController prefersStatusBarHidden]
prefersStatusBarHidden
-[AVPlayerViewController loadView]
*** AVPlayerViewController: Setting a view is not supported.
-[AVPlayerViewController flashPlaybackControlsWithDuration:]
*** Warning: Called %@ with a duration of %@. Ignoring the duration as it is too short.
-[AVPlayerViewController setEntersFullScreenWhenPlaybackBegins:]
entersFullScreenWhenPlaybackBegins
-[AVPlayerViewController setVolumeControlsCanShowSlider:]
-[AVPlayerViewController setPlaybackControlsIncludeVolumeControls:]
playbackControlsIncludeVolumeControls
-[AVPlayerViewController setPlaybackControlsIncludeDisplayModeControls:]
playbackControlsIncludeDisplayModeControls
-[AVPlayerViewController setPlaybackControlsIncludeTransportControls:]
playbackControlsIncludeTransportControls
-[AVPlayerViewController setRequiresLinearPlayback:]
requiresLinearPlayback
-[AVPlayerViewController setShowsMinimalPlaybackControlsWhenEmbeddedInline:]
-[AVPlayerViewController setAllowsEnteringFullScreen:]
allowsEnteringFullScreen
-[AVPlayerViewController setCanHidePlaybackControls:]
canHidePlaybackControls
-[AVPlayerViewController setUpdatesNowPlayingInfoCenter:]
-[AVPlayerViewController setShowsTimecodes:]
_showsTimecodes
-[AVPlayerViewController setPlayerController:]
-[AVPlayerViewController setAllowsPictureInPicturePlayback:]
-[AVPlayerViewController setVideoGravity:forLayoutClass:]
-[AVPlayerViewController setShowsPlaybackControls:]
-[AVPlayerViewController setPlayer:]
%@ only supports AVPlayer instances that have been initialized with the main queue as the dispatch queue for serializing key-value observations.
-[AVPlayerViewController encodeWithCoder:]
AVAllowsPictureInPicturePlayback
AVVideoLayerGravity
AVShowsPlaybackControls
-[AVPlayerViewController initWithCoder:]
AVPlayerShouldAutoplay
AVPlayerAssetFilename
-[AVPlayerViewController dealloc]
*** Warning: %@ was deallocated while its contents were being presented full screen. ***
-[AVPlayerViewController initWithNibName:bundle:]
_playerLayerView.pixelBufferAttributes
_playerLayerView.videoDisplaySize
playerLayerView.videoGravity
iAdPrerollView
showsExitFullScreenButton
TB,R,N,GisPictureInPicturePossible
pictureInPictureSuspended
TB,R,N,GisPictureInPictureSuspended
pictureInPictureWasStartedWhenEnteringBackground
_inlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused
TB,N,S_setInlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused:
overrideLayoutMarginsWhenEmbeddedInline
T@"NSValue",&,N
overrideTransformForProminentPlayButton
T{CGAffineTransform=dddddd},N
canToggleVideoGravityWhenEmbeddedInline
playbackControlsVisibilityController
T@"AVPlaybackControlsVisibilityController",R,N
playbackControlsController
T@"AVPlaybackControlsController",R,N
_transitionController
T@"AVTransitionController",R,N
canShowPictureInPictureButton
canControlPlayback
contentView
T@"AVPlayerViewControllerContentView",R,N
presentingFullScreenFromInline
TB,R,N,GisPresentingFullScreenFromInline
presentedFullScreen
TB,R,N,GisPresentedFullScreen
presentationContext
T@"AVPresentationContext",R,N
-[AVPlayerViewController(DeprecationsAndToBeRemoved) setEntersFullScreenWhenTapped:]
entersFullScreenWhenTapped
-[AVPlayerViewController(DeprecationsAndToBeRemoved) setPreferredUnobscuredArea:]
-[AVPlayerViewController(AVPlayerViewController_WebKitOnly) exitFullScreenAnimated:completionHandler:]
View needs to be loaded before you can call %@!
View may not need layout when you call %@!
-[AVPlayerViewController(AVPlayerViewController_WebKitOnly) enterFullScreenAnimated:completionHandler:]
-[AVPlayerViewController(AVPlayerViewController_WebKitOnly) setPlaybackControlsShouldControlSystemVolume:]
-[AVPlayerViewController(AVPlayerViewController_WebKitOnly) initWithPlayerLayerView:]
-[AVPlayerViewController(AVPlaybackControlsViewControllerActions) pictureInPictureButtonTapped:]
-[AVPlayerViewController(AVPlaybackControlsViewControllerActions) fullScreenButtonTapped:]
-[AVPlayerViewController(AVPlaybackControlsViewControllerActions) mediaSelectionButtonTapped:]
-[AVPlayerViewController(AVPlaybackControlsViewControllerActions) videoGravityButtonTapped:]
-[AVPlayerViewController(AVPlaybackControlsViewControllerActions) doneButtonTapped:]
_pictureInPictureController.pictureInPictureWasStartedWhenEnteringBackground
_pictureInPictureController.pictureInPictureSuspended
_pictureInPictureController.pictureInPictureActive
_pictureInPictureController.pictureInPicturePossible
T@"AVEditBehavior",W,N,V_behavior
zoomingBehavior
T@"AVZoomingBehavior",&,N,V_zoomingBehavior
T@"AVObservationController",&,N,V_observationController
editView
T@"AVEditView",&,N,V_editView
editing
TB,N,GisEditing,V_editing
imageGenerator
T@"AVAssetImageGenerator",&,N,V_imageGenerator
playerTimeObserver
T@,&,N,V_playerTimeObserver
T@"UIView",&,N,V_containerView
toolbar
T@"UIToolbar",&,N,V_toolbar
cancelButton
T@"UIBarButtonItem",&,N,V_cancelButton
doneButton
T@"UIBarButtonItem",&,N,V_doneButton
flexibleSpaceItem
T@"UIBarButtonItem",&,N,V_flexibleSpaceItem
playButton
T@"UIBarButtonItem",&,N,V_playButton
pauseButton
T@"UIBarButtonItem",&,N,V_pauseButton
pendingImageRequests
T@"NSMutableArray",R,N,V_pendingImageRequests
requestedImageTimeToCMTimeMap
T@"NSMutableDictionary",R,N,V_requestedImageTimeToCMTimeMap
currentRotation
TQ,N,V_currentRotation
rotationTransform
T{CGAffineTransform=dddddd},N,V_rotationTransform
parameters
T@"AVEditBehaviorParameters",R,C,N,V_parameters
v80@?0{?=qiIq}8^{CGImage=}32{?=qiIq}40q64@"NSError"72
v32@?0@"AVEditBehaviorContext"8@16@"AVKeyValueChange"24
EDIT_BEHAVIOR_CONTEXT_CANCEL
-[AVEditBehaviorContext rotateClockwise]
editView.scrubbing
editView.trimming
playerController.player.timeControlStatus
playerController.player.currentItem.presentationSize
playerController.player.currentItem.duration
avkit_currentEditBehaviorContext
T@"AVEditBehaviorContext",R,W,N
T@"UIView",W,N,V_contentView
T@"<AVFullScreenViewControllerDelegate>",W,N,V_delegate
associatedFullScreenViewController
T@"AVFullScreenViewController",W,N,V_associatedFullScreenViewController
sourceFullScreenViewController
T@"AVFullScreenViewController",W,N,V_sourceFullScreenViewController
T@"AVPictureInPicturePlayerLayerView",R,N,V_pictureInPicturePlayerLayerView
shouldShowAlternateActionButtonImage
TB,N,V_shouldShowAlternateActionButtonImage
T@"<AVPictureInPictureViewControllerDelegate>",W,N,V_delegate
shouldShowLoadingIndicator
%@ does not support unarchiving from a nib.
-[AVPictureInPictureViewController dealloc]
-[AVPictureInPictureViewController initWithPictureInPicturePlayerLayerView:]
ExternalPlaybackIndicatorLarge
@"UIStackView"24@?0@"NSArray"8d16
@"UILabel"16@?0d8
anchorValue
anchorTimeStamp
*** -%@ only defined for abstract class.  Define %c[%@ %@]!
*** -%@ cannot be sent to an abstract object of class %@: Create a concrete instance!
time stamp
Td,D,N
currentValue
*** initialization method -%@ cannot be sent to an abstract object of class %@: Create a concrete instance!
scene
T@"UIScene",W,N,V_scene
debugText
T@"NSString",C,N,V_debugText
secondScreenViewController
T@"AVSecondScreenViewController",W,N,V_secondScreenViewController
UIScreen.nativeBounds.size: %@
Content Match: %@
Preferred Color Mode: %@
Disabled
Enabled
Preferred Refresh Rate: %@Hz
Best Variant: %@ %@
Current Variant: %@ %@
--------
Current Display Mode: %@ %@ @ %@Hz
%0.f
%.0f
%.0fx%0.f
Unknown
Dolby
HDR10
naturalSize
formatDescriptions
v16@?0@"AVSecondScreenDebugAssistant"8
player.currentItem.tracks
player.currentItem
debugInfoDisplay.preferences
debugInfoDisplay.currentMode
enableSecondScreenHUD
InternalBuild
com.apple.springboard
feC7TgoAAKLjn/KU8JAKFA
presentationWindowForDisablingAutorotation
T@"UIWindow",W,N,V_presentationWindowForDisablingAutorotation
context
T@"AVPresentationContext",R,N,V_context
v32@?0@"AVPresentationController"8@16@"NSNotification"24
-[AVPresentationController _observeSceneDidBecomeActiveForRestoringRotatability]_block_invoke
-[AVPresentationController dismissalTransitionDidEnd:]
completed
-[AVPresentationController dismissalTransitionWillBegin]
-[AVPresentationController presentationTransitionDidEnd:]
-[AVPresentationController presentationTransitionWillBegin]
-[AVPresentationController dealloc]
-[AVPresentationController initWithPresentedViewController:presentingViewController:]
v16@?0@"NSNotification"8
v32@?0@8@16@24
v48@?0@8@"NSString"16@24@32@"NSString"40
value
T@,R,N,V_value
oldValue
T@,R,N,V_oldValue
keyPath
T@"NSString",R,N,V_keyPath
observationToken
T@,R,N,V_observationToken
token
T@"NSString",R,N,V_token
includeInitialValue
TB,R,N,V_includeInitialValue
includeChanges
TB,R,N,V_includeChanges
keyPaths
T@"NSSet",R,N,V_keyPaths
changesBlock
T@?,R,N,V_changesBlock
T@"AVHomeIPCameraBehavior",W,N,V_behavior
livePreviewPlayerController
T@"AVHomeIPCameraPlayerController",W,N,V_livePreviewPlayerController
playerControllerToRestore
T@"AVPlayerController",&,N,V_playerControllerToRestore
playbackControlsShowsLoadingIndicator
TB,N,V_playbackControlsShowsLoadingIndicator
TB,N,V_playbackControlsIncludeTransportControls
TB,N,V_playbackControlsIncludeDisplayModeControls
TB,N,GisZoomingEnabled,V_zoomingEnabled
microphoneEnabled
TB,N,GisMicrophoneEnabled,V_microphoneEnabled
livePreviewContainerView
T@"UIView",R,N,V_livePreviewContainerView
TB,N,GisLivePreviewActive,V_livePreviewActive
livePreviewAspectRatio
T{CGSize=dd},N,V_livePreviewAspectRatio
v32@?0@"AVHomeIPCameraBehaviorContext"8@16@"NSNotification"24
-[AVHomeIPCameraBehaviorContext setLivePreviewActive:]
livePreviewActive
-[AVHomeIPCameraBehaviorContext setZoomingEnabled:]
zoomingEnabled
statusBarBackgroundGradientView
T@"AVStatusBarBackgroundGradientView",R,N,V_statusBarBackgroundGradientView
observingStatusBarHidden
TB,N,GisObservingStatusBarHidden,V_observingStatusBarHidden
contentOverlayViewSubview
T@"UIView",&,N,V_contentOverlayViewSubview
canShowStatusBarBackgroundGradientWhenStatusBarVisible
TB,N,V_canShowStatusBarBackgroundGradientWhenStatusBarVisible
activeContentView
T@"AVPlaybackContentContainerView",R,N
videoContentFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_videoContentFrame
TB,N,GisPlayingOnSecondScreen,V_playingOnSecondScreen
T{CGRect={CGPoint=dd}{CGSize=dd}},N
TB,N,GisPlayingOnSecondScreen
sublayerTransform
previousBounds
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_previousBounds
lastKnownWindow
T@"UIWindow",W,N,V_lastKnownWindow
contentAspectRatio
T{CGSize=dd},N,V_contentAspectRatio
fullScreen
TB,N,GisFullScreen,V_fullScreen
T@"AVPlaybackContentContainerView",R,N,V_activeContentView
movieScrubber
T@"UIMovieScrubber",&,V_movieScrubber
trimming
TB,N,GisTrimming,V_trimming
dataSource
T@"<AVEditViewDataSource>",W,N,V_dataSource
T@"<AVEditViewDelegate>",W,N,V_delegate
prefersThumbVisible
TB,N,V_prefersThumbVisible
trimStartTime
trimEndTime
targetContentOffset
T@"NSValue",&,N,V_targetContentOffset
stateDescription
T@"NSString",C,N,V_stateDescription
frameForActiveContentView
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_frameForActiveContentView
frameForTransitioningContentView
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_frameForTransitioningContentView
boundsOrContentSizeAdjustmentCount
Tq,N,V_boundsOrContentSizeAdjustmentCount
transitionInteractive
TB,N,GisTransitionInteractive,V_transitionInteractive
contentTransitioningDelegate
T@"<AVPlaybackContentTransitioningViewDelegate>",W,N,V_contentTransitioningDelegate
incomingContentView
T@"AVPlaybackContentContainerView",R,N,V_incomingContentView
transitionState
Tq,R,N,V_transitionState
transitionDirection
Tq,R,N,V_transitionDirection
transitionProgress
Td,R,N,V_transitionProgress
%@ %@
Right
 Left
 None
Bounce
    Completed
   Completing
    Cancelled
   Cancelling
Transitioning
   Prohibited
     Possible
         Idle
-[AVPlaybackContentTransitioningView setStateDescription:]
MEDIA_SELECTION_VIEW_CONTROLLER_AUDIO_OPTIONS_HEADER_TITLE
MEDIA_SELECTION_VIEW_CONTROLLER_LEGIBLE_OPTIONS_HEADER_TITLE
AVMediaSelectionViewControllerCellReuseIdentifier
v16@?0@"<UIViewControllerTransitionCoordinatorContext>"8
representedObject
T@,&,N,V_representedObject
-[AVMediaSelectionTableViewController dealloc]
-[AVMediaSelectionTableViewController initWithStyle:]
MEDIA_SELECTION_VIEW_CONTROLLER_NAVIGATION_ITEM_TITLE
AVPictureInPictureControllerWillStartNotification
AVPictureInPictureControllerDidStartNotification
AVPictureInPictureControllerWillStopNotification
AVPictureInPictureControllerDidStopNotification
AVPictureInPictureControllerContentSourceKey
platformAdapter
T@"AVPictureInPicturePlatformAdapter",R,N,V_platformAdapter
sourceIfRetainedDuringPictureInPicturePlayback
T@"<AVPictureInPictureContentSource>",&,N,V_sourceIfRetainedDuringPictureInPicturePlayback
TB,N,GisPictureInPicturePossible,V_pictureInPicturePossible
TB,N,GisPictureInPictureActive,V_pictureInPictureActive
TB,N,GisPictureInPictureSuspended,V_pictureInPictureSuspended
otherPictureInPictureActive
TB,N,GisOtherPictureInPictureActive,V_otherPictureInPictureActive
wantsImmediateAssetInspection
TB,N,V_wantsImmediateAssetInspection
T@"AVPictureInPictureViewController",R,N
retainsSourceDuringPictureInPicturePlayback
TB,N,V_retainsSourceDuringPictureInPicturePlayback
allowsPictureInPictureFromInlineWhenEnteringBackground
TB,N,V_allowsPictureInPictureFromInlineWhenEnteringBackground
TB,N,V_pictureInPictureWasStartedWhenEnteringBackground
T@"<AVPictureInPictureControllerDelegate>",W,N,V_delegate
-[AVPictureInPictureController pictureInPicturePlatformAdapter:statusDidChange:fromStatus:]
-[AVPictureInPictureController pictureInPicturePlatformAdapter:prepareToStopForRestoringUserInterface:]
-[AVPictureInPictureController setPictureInPicturePossible:]
pictureInPicturePossible
-[AVPictureInPictureController setAllowsPictureInPicturePlayback:]
allowsPictureInPicturePlayback
v32@?0@"AVPictureInPictureController"8@16@"AVKeyValueChange"24
-[AVPictureInPictureController _commonInitWithSource:]_block_invoke
owner.isOtherPictureInPictureActive
videoRect
%@ is not a valid initializer. You must call -[%@ initWithPlayerLayer:].
pictureInPictureButtonStartImage
T@"UIImage",R,N
pictureInPictureButtonStopImage
type
Tq,R,N,V_type
T@"NSString",C,N,V_title
T@"UIImage",&,N,V_image
action
T@?,C,N,V_action
tintColor
T@"UIColor",&,N,V_tintColor
label
T@"UILabel",R,N,V_label
labelIfLoaded
T@"UILabel",R,N
T@"UIActivityIndicatorView",R,N,V_loadingIndicator
loadingIndicatorLeftAlignmentConstraint
T@"NSLayoutConstraint",&,N,V_loadingIndicatorLeftAlignmentConstraint
loadingIndicatorRightAlignmentConstraint
T@"NSLayoutConstraint",&,N,V_loadingIndicatorRightAlignmentConstraint
loadingIndicatorAlignment
Tq,N,V_loadingIndicatorAlignment
text
T@"NSString",C,N,V_text
font
T@"UIFont",&,N,V_font
needsInitialLayout
TB,N,V_needsInitialLayout
T@"AVPlayerViewControllerContentView",R,N,V_contentView
-[AVExternalPlaybackController _invokeClientCompletionHandlerWithPlaybackState:]
-[AVExternalPlaybackController willBeginPlaybackFromAppWithBundleID:completionHandler:]
v16@?0Q8
-[AVExternalPlaybackController willBeginPlaybackFromAppWithBundleID:completionHandler:]_block_invoke
MPMediaControlsConfiguration
AVExternalPlaybackStatePlaybackCancelled
AVExternalPlaybackStateWillPlayExternally
AVExternalPlaybackStateWillPlayLocally
timecodeStruct
T{CVSMPTETime=ssIIIssss},N,V_timecodeStruct
frameNumber
Tq,N,V_frameNumber
frameDuration
T{?=qiIq},N,V_frameDuration
tc_flags
TI,N,V_tc_flags
formatDescription
T^{opaqueCMFormatDescription=},N,V_formatDescription
timecodeTrack
T@"AVAssetTrack",&,N,V_timecodeTrack
observationInterval
T{?=qiIq},R,N,V_observationInterval
%02d:%02d:%02d%@%02d
%lu F
groupLeader
T@"AVCABackdropLayerView",W,N,V_groupLeader
dependents
T@"NSHashTable",R,N,V_dependents
activeBackdropEffect
Tq,N,V_activeBackdropEffect
captureOnly
TB,N,GisCaptureOnly
forceLowQualityEffect
TB,N,V_forceLowQualityEffect
customBackgroundColor
T@"UIColor",C,N,V_customBackgroundColor
v16@?0@"AVCABackdropLayerView"8
inputColorMatrix
inputIntermediateBitDepth
inputQuality
inputNormalizeEdges
inputRadius
T@"<AVRoutePickerViewDelegate>",W,N,V_delegate
activeTintColor
T@"UIColor",&,N
routePickerButtonStyle
Tq,N,V_routePickerButtonStyle
prioritizesVideoDevices
v32@?0@"AVRoutePickerView"8@16@"NSNotification"24
/System/Library/PrivateFrameworks/MediaPlayer.framework/MediaPlayer
MPMediaControls
Unable to find class %s
-[AVRoutePickerView updateButtonAppearance]
Inactive
Active
-[AVRoutePickerView setAirPlayActive:]
airPlayActive
com.apple.avkit.avroutepickerview
%@ is not a valid initializer. You must call -[%@ initWithTraitCollection:opaque:].
PICTURE_IN_PICTURE_INDICATOR_LAYER_TITLE
backdropView
T@"AVBackdropView",&,N,V_backdropView
automaticallyDrawsRoundedCorners
TB,N,V_automaticallyDrawsRoundedCorners
prefersLowQualityEffects
TB,N,V_prefersLowQualityEffects
circular
TB,N,GisCircular,V_circular
highlightAnimator
T@"UIViewPropertyAnimator",W,N,V_highlightAnimator
micaPackage
T@"AVMicaPackage",&,N,V_micaPackage
imageView
T@"UIImageView",&,N,V_imageView
initialPreciseLocationOfTouch
T{CGPoint=dd},N,V_initialPreciseLocationOfTouch
longPressTimer
T@"NSTimer",W,N,V_longPressTimer
trackingState
Tq,N,V_trackingState
showsHighlightedAppearance
TB,N,V_showsHighlightedAppearance
micaPackageStateName
T@"NSString",&,N,V_micaPackageStateName
longPressEnabled
TB,N,GisLongPressEnabled,V_longPressEnabled
translationOfPanFromPreviousTouch
T{CGPoint=dd},N,V_translationOfPanFromPreviousTouch
cumulativeTranslationSincePanningBegan
T{CGPoint=dd},N,V_cumulativeTranslationSincePanningBegan
locationOfTouchInWindow
T{CGPoint=dd},N,V_locationOfTouchInWindow
v16@?0@"UIImage"8
Mute Toggle
minTime
Td,V_minTime
maxTime
Td,V_maxTime
T@"<AVTimeControlling>",&
interval
currentTime
AVResolution
AVInterval
AVPlayerController
playerController.minTime
playerController.minTiming
playerController.maxTime
playerController.maxTiming
playerController.timing
targetTime
targetTimeWithinEndTimes
remainingTargetTimeWithinEndTimes
Td,R
currentTimeWithinEndTimes
remainingTime
remainingTimeWithinEndTimes
seekableTimeRangeDuration
thirtySecondsBeforeCurrentTimeWithinSeekableTimeRanges
TB,R,GisThirtySecondsBeforeCurrentTimeWithinSeekableTimeRanges
currentTimeAtEndOfSeekableTimeRanges
TB,R,GisCurrentTimeAtEndOfSeekableTimeRanges
playerController.seekableTimeRanges
T@"AVZoomingBehavior",W,N,V_behavior
contentZoomingView
T@"AVPlaybackContentZoomingView",&,N,V_contentZoomingView
doubleTapGestureRecognizer
T@"UITapGestureRecognizer",&,N,V_doubleTapGestureRecognizer
v32@?0@"AVZoomingBehaviorContext"8@16@"NSNotification"24
contentTransitioningPlayer
T@"AVPlayer",&,N,V_contentTransitioningPlayer
contentTransitionView
T@"AVPlaybackContentTransitioningView",&,N,V_contentTransitionView
T@"AVNewsWidgetPlayerBehavior",W,N,V_behavior
activeContentTransitionType
contentTransitionInteractive
TB,R,N,GisContentTransitionInteractive
contentTransitioningOverlayView
TB,N,GisStartNextContentTransitionButtonEnabled,V_startNextContentTransitionButtonEnabled
TB,N,GisStartPreviousContentTransitionButtonEnabled,V_startPreviousContentTransitionButtonEnabled
customContentTransitioningInfoPanel
T@"UIView",&,N,V_customContentTransitioningInfoPanel
-[AVNewsWidgetPlayerBehaviorContext setCustomContentTransitioningInfoPanel:]
-[AVNewsWidgetPlayerBehaviorContext updateStartLeftRightContentTransitionButtonsEnabled]_block_invoke
-[AVNewsWidgetPlayerBehaviorContext setStartPreviousContentTransitionButtonEnabled:]
startPreviousContentTransitionButtonEnabled
-[AVNewsWidgetPlayerBehaviorContext setStartNextContentTransitionButtonEnabled:]
startNextContentTransitionButtonEnabled
-[AVNewsWidgetPlayerBehaviorContext setVideoGravityForTransitioningContent:]
-[AVNewsWidgetPlayerBehaviorContext initWithAVKitOwner:]
legacyDelegate
T@"<AVPlayerViewControllerContentTransitioning_NewsOnly>",W,N,V_legacyDelegate
T@"AVPlayer",R,N
T@"<AVPlayerViewControllerContentTransitioning_NewsOnly>",W,N
TB,N,GisStartNextContentTransitionButtonEnabled
TB,N,GisStartPreviousContentTransitionButtonEnabled
T@"UIView",&,N
-[AVPlayerViewController(AVPlayerViewController_NewsOnly) startContentTransition:]
-[AVPlayerViewController(AVPlayerViewController_NewsOnly) setContentTransitioningDelegate:]
T@"<UIViewControllerContextTransitioningEx>",R,W,N,V_transitionContext
transitionAnimator
T@"UIViewPropertyAnimator",R,N,V_transitionAnimator
clientAnimator
T@"UIViewPropertyAnimator",R,N,V_clientAnimator
allAnimators
T@"NSMutableArray",R,N,V_allAnimators
T@"AVPresentationContext",&,N,V_presentationContext
transitionAnimatorProgress
T@"<AVTransitionDelegate>",W,N,V_delegate
-[AVTransition completeTransition:]
didComplete
-[AVTransition cancelInteractiveTransition]
-[AVTransition finishInteractiveTransition]
-[AVTransition startInteractiveTransition]
-[AVTransition dealloc]
-[AVTransition initWithTransitionContext:]
-[AVPlayerLayer(AVPictureInPictureContentSource) avkit_stopRoutingVideoToPictureInPictureViewController:]
self.isPIPModeEnabled
-[AVPlayerLayer(AVPictureInPictureContentSource) avkit_startRoutingVideoToPictureInPictureViewController:]
ScaleToFitPillarboxButton
ScaleToFillPillarboxButton
ScaleToFitLetterboxButton
ScaleToFillLetterboxButton
EnterFullScreen
Done
VolumeMuted
VolumeZero
VolumeLow
VolumeMedium
VolumeHigh
ProminentPlaySmall
ProminentPlayLarge
Inline_AirPlay
Inline_MediaSelection
Inline_Pause
Inline_Play
Inline_PiP
Inline_SkipBack15
Inline_SkipForward15
Inline_GotoLive
FullScreen_AirPlay
FullScreen_MediaSelection
FullScreen_Pause
FullScreen_Play
FullScreen_PiP
FullScreen_SkipBack15
FullScreen_SkipForward15
FullScreen_GotoLive
FullScreen_StartPreviousContentTransition
FullScreen_StartNextContentTransition
AVMobileImageNameNoImage
com.apple.avkit.images
v16@?0@"UIGraphicsImageRendererContext"8
AVRoutePickerViewCircularAirPlayGlyph
AVRoutePickerViewSquareAirPlayGlyph
VolumeGlyph
mute
half
full
plusL
stateController
T@"CAStateController",R,N,V_stateController
unscaledSize
T{CGSize=dd},N,V_unscaledSize
layoutDirection
Tq,N,V_layoutDirection
rootLayer
T@"CALayer",&,N,V_rootLayer
T@"NSString",R,C,N,V_state
targetSize
T{CGSize=dd},N,V_targetSize
packageName
T@"NSString",R,N,V_packageName
caml
-RTL
v32@?0@"CAState"8Q16^B24
v32@?0@"CALayer"8Q16^B24
classSubstitions
T@"NSDictionary",R,N
LKStateTransitionElement
LKStateTransition
LKStateSetProperty
LKStateSetValue
LKStateRemoveElement
LKStateRemoveAnimation
LKStateElement
LKStateAddElement
LKStateAddAnimation
LKEventHandler
LKState
com.apple.avkit.caml
prominentPlayButtonContainer
T@"UIView",&,N,V_prominentPlayButtonContainer
T@"AVButton",W,N,V_prominentPlayButton
volumeButtonContainer
T@"UIView",&,N,V_volumeButtonContainer
volumeButton
T@"AVVolumeButtonControl",W,N,V_volumeButton
T@"UIView",R,N,V_contentView
includedControlType
Tq,N,V_includedControlType
volumeButtonMicaPackageStateName
T@"NSString",C,N,V_volumeButtonMicaPackageStateName
T{CGAffineTransform=dddddd},N,V_overrideTransformForProminentPlayButton
T@"NSValue",&,N,V_overrideLayoutMarginsWhenEmbeddedInline
v32@?0@"AVTurboModePlaybackControlsPlaceholderView"8@16@"AVKeyValueChange"24
animations
T@"NSMutableArray",R,N,V_animations
completions
T@"NSMutableArray",R,N,V_completions
*** AVPlayerViewControllerAnimationCoordinator: Animations added to coordinator after animations performed will be ignored.
Td,R,V_interval
%@ is not a valid initializer. You must call -[%@ initWithTimeInterval:queue:block:repeats:].
com.apple.avkit.AVTimer.timer %p
com.apple.avkit.AVTimer.manage %p
AVSecondScreenConnectionVideoDisplaySizeChanged
AVSecondScreenConnectionReadyDidChangeNotification
AVSecondScreenConnectionActiveDidChangeNotification
AVSecondScreenConnectionPlayingDidChangeNotification
AVSecondScreenConnectionPreferredDisplayCriteriaDidChangeNotification
active
TB,N,GisActive,V_active
connectedSecondScreen
T@"AVSecondScreen",W,N,V_connectedSecondScreen
preferredDisplayCriteria
T@"AVDisplayCriteria",&,N,V_preferredDisplayCriteria
maximumVideoResolution
T{CGSize=dd},N,V_maximumVideoResolution
ready
TB,N,GisReady,V_ready
playing
TB,N,GisPlaying,V_playing
requiresTVOutScreen
TB,N,V_requiresTVOutScreen
T@"UIView",&,N,V_contentView
T@"AVSecondScreenViewController",&,N,V_secondScreenViewController
T@"AVPlayer",R,N,V_player
T@"AVPlayerLayer",R,W,N,V_playerLayer
TB,R,N,GisReadyToConnect,V_readyToConnect
contentViewController
debugAssistant
T@"AVSecondScreenDebugAssistant",R,N,V_debugAssistant
-[AVSecondScreenConnection _currentItemIsReadyToPlayVideoOrLoadingWhileActive]
isReadyToPlayOrLoadingWhileActive
-[AVSecondScreenConnection _determineIsReadyToConnect]
availableVideoDynamicRanges
v16@?0@"AVSecondScreenConnection"8
currentItem.asset
currentItem.hasVideo
currentItem.status
airPlayVideoActive
externalPlaybackActive
allowsExternalPlayback
-[AVSecondScreenConnection setPlayerLayer:]
-[AVSecondScreenConnection dealloc]
T@"AVDisplayCriteria",&,D,N
TB,D,N,GisReadyToConnect
TB,D,N,GisPlaying
TB,D,N
keyValueObservationController
T@"AVObservationController",&,N,V_keyValueObservationController
v32@?0@"AVPlayerVolumeController"8@16@"AVKeyValueChange"24
playerController.volume
appearanceProxy
T@"AVPresentationContainerViewAppearanceProxy",R,N,V_appearanceProxy
wantsAppearanceConfigValues
TB,N,V_wantsAppearanceConfigValues
actualView
T@"UIView",W,N,V_actualView
cornerCurve
T@"NSString",&,N,V_cornerCurve
maskedCorners
TQ,N,V_maskedCorners
cornerRadius
Td,N,V_cornerRadius
backgroundColor
T@"UIColor",&,N,V_backgroundColor
clipsToBounds
TB,N,V_clipsToBounds
T@"AVPresentationContainerViewLayer",R,D,N
counterRotatingContentView
TB,N,GisCounterRotatingContentView,V_counterRotatingContentView
beingPresented
TB,N,GisBeingPresented,V_beingPresented
beingDismissed
TB,N,GisBeingDismissed,V_beingDismissed
fromOrientation
Tq,N,V_fromOrientation
toOrientation
Tq,N,V_toOrientation
willBeginOrientationChange
TB,N,V_willBeginOrientationChange
presentationContainerContentView
T@"UIView",W,N,V_presentationContainerContentView
T@"AVPresentationContainerViewAppearanceProxy",R,N
T@"AVBackdropView",R,N,V_backdropView
detachedExtraContentBackdropView
T@"AVBackdropView",&,N,V_detachedExtraContentBackdropView
doubleRowLayoutConstraints
T@"NSArray",R,N,V_doubleRowLayoutConstraints
scrubberInstructionsDoubleRowActiveConstraint
T@"NSLayoutConstraint",R,N,V_scrubberInstructionsDoubleRowActiveConstraint
liveBroadcastLabel
T@"AVLabel",R,N,V_liveBroadcastLabel
liveBroadcastScrubberLabel
T@"AVLabel",R,N,V_liveBroadcastScrubberLabel
embeddedExtraContentContainer
T@"AVTouchIgnoringView",R,N,V_embeddedExtraContentContainer
scrubInstructionsLabel
T@"UILabel",R,N,V_scrubInstructionsLabel
scrubInstructionsBackdropLabel
T@"UILabel",R,N,V_scrubInstructionsBackdropLabel
scrubInstructionsTimer
T@"NSTimer",W,N,V_scrubInstructionsTimer
scrubberValueWhenScrubInstructionsTimerBegan
Tf,N,V_scrubberValueWhenScrubInstructionsTimerBegan
canShowScrubInstructions
singleRowViews
T@"NSArray",R,N
backdropViewNeedsLayout
TB,N,V_backdropViewNeedsLayout
T@"<AVTransportControlsViewDelegate>",W,N,V_delegate
doubleRowLayoutEnabled
TB,N,GisDoubleRowLayoutEnabled,V_doubleRowLayoutEnabled
showsLiveStreamingControls
TB,N,V_showsLiveStreamingControls
liveStreamingControlsIncludeScrubber
TB,N,V_liveStreamingControlsIncludeScrubber
minimumRequiredWidth
Td,R,N,V_minimumRequiredWidth
scrubber
T@"AVScrubber",R,N,V_scrubber
elapsedTimeLabel
T@"AVLabel",R,N,V_elapsedTimeLabel
timeRemainingLabel
T@"AVLabel",R,N,V_timeRemainingLabel
standardPlayPauseButton
T@"AVButton",R,N,V_standardPlayPauseButton
skipForwardButton
T@"AVButton",R,N,V_skipForwardButton
skipBackButton
T@"AVButton",R,N,V_skipBackButton
startLeftwardContentTransitionButton
T@"AVButton",R,N,V_startLeftwardContentTransitionButton
startRightwardContentTransitionButton
T@"AVButton",R,N,V_startRightwardContentTransitionButton
routePickerView
T@"AVPlaybackControlsRoutePickerView",R,N,V_routePickerView
mediaSelectionButton
T@"AVButton",R,N,V_mediaSelectionButton
customItems
T@"NSArray",C,N,V_customItems
PLAYBACK_CONTROLS_VIEW_CONTROLLER_SCRUB_INSTRUCTIONS_SLIDE_UP_TITLE_LABEL_TEXT
v24@?0@"<AVPlaybackControlsViewItem>"8d16
-[AVTransportControlsView initWithFrame:styleSheet:]
Skip To Previous
Skip To Next
Skip Backward
Skip Forward
Play/Pause
Media Selection
Live
PLAYBACK_CONTROLS_VIEW_CONTROLLER_LIVE_LABEL_TEXT
Live Broadcast
PLAYBACK_CONTROLS_VIEW_CONTROLLER_LIVE_BROADCAST_LABEL_TEXT
Time Remaining
Time Elapsed
@"AVLabel"24@?0@"NSString"8@"NSString"16
v16@?0@"NSString"8
AVKitOwner
T@,W,N,V_AVKitOwner
behaviorsAndBehaviorContexts
T@"NSMapTable",R,N,V_behaviorsAndBehaviorContexts
v16@?0@8
v16@?0@"<AVBehaviorContext>"8
v16@?0@"<AVBehavior>"8
behaviors
-[UIWindowScene(AVSecondScreenAdditions) _avkit_setPreferredRefreshRate:HDRMode:overscanCompensation:]
None
B24@?0@"UIWindow"8@"NSDictionary"16
TVOut
wireless
-[UIScene(AVSecondScreenAdditions) _avkit_setPreferredRefreshRate:HDRMode:overscanCompensation:]
B24@?0@"UIScene"8@"NSDictionary"16
TB,N,V_wasInitiallyInteractive
hasAVKitAnimator
TB,N,V_hasAVKitAnimator
wasCancelledWithInactiveScene
TB,N,V_wasCancelledWithInactiveScene
presenterSupportedOrientations
TQ,N,V_presenterSupportedOrientations
finalInterfaceOrientation
Tq,N,V_finalInterfaceOrientation
isRotated
interfaceRotation
T{CGAffineTransform=dddddd},R,N
counterRotationTransform
T@"<AVHomeIPCameraActionButtonHandling>",W,N,V_delegate
presentationSize
T{CGSize=dd},N,V_presentationSize
muted
TB,N,GisMuted,V_muted
AVPlaybackControlsControllsShowsLoadingIndicatorNotification
AVPlaybackControlsControllerShowsLoadingIndicatorValueKey
playbackControlsView
T@"AVPlaybackControlsView",&,N,V_playbackControlsView
turboModePlaybackControlsPlaceholderView
T@"AVTurboModePlaybackControlsPlaceholderView",W,N,V_turboModePlaybackControlsPlaceholderView
nowPlayingInfoControllerIfLoaded
T@"AVNowPlayingInfoController",&,N,V_nowPlayingInfoControllerIfLoaded
playbackControlsObservationController
T@"AVObservationController",&,N,V_playbackControlsObservationController
timeResolver
T@"AVPlayerControllerTimeResolver",&,N,V_timeResolver
elapsedTimeFormatter
T@"AVTimeFormatter",R,N,V_elapsedTimeFormatter
remainingTimeFormatter
T@"AVTimeFormatter",R,N,V_remainingTimeFormatter
routePickerAlertController
T@"UIAlertController",W,N,V_routePickerAlertController
routeDetectorCoordinator
T@"AVRouteDetectorCoordinator",&,N,V_routeDetectorCoordinator
AVRouteDetectorCoordinatorMultipleRoutesDetectedObserver
T@,&,N,V_AVRouteDetectorCoordinatorMultipleRoutesDetectedObserver
loadingIndicatorTimer
T@"NSTimer",W,N,V_loadingIndicatorTimer
collapseExpandSliderAnimator
T@"UIViewPropertyAnimator",W,N,V_collapseExpandSliderAnimator
volumeController
T@"<AVVolumeController>",&,N,V_volumeController
playerMuteFadeAnimationID
T@"NSUUID",&,N,V_playerMuteFadeAnimationID
playbackControlsContainerVisibilityItem
T@"AVPlaybackControlsVisibilityControllerItem",R,N,V_playbackControlsContainerVisibilityItem
volumeControlsContainerVisibilityItem
T@"AVPlaybackControlsVisibilityControllerItem",R,N,V_volumeControlsContainerVisibilityItem
allVisibilityControllerItems
T@"NSArray",R,N,V_allVisibilityControllerItems
showsMediaSelectionButton
showsSkipButtons
showsStartContentTransitionButtons
showsProminentPlayButton
playButtonsShowPauseGlyph
prominentPlayButtonCanShowPauseGlyph
showsRoutePickerView
showsTransportControls
canShowLoadingIndicator
seekingEnabled
TB,R,N,GisSeekingEnabled
prefersVolumeSliderExpanded
TB,N,V_prefersVolumeSliderExpanded
canIncludeVideoGravityButton
TB,N,V_canIncludeVideoGravityButton
pendingOrientationChange
T@"NSNumber",&,N,V_pendingOrientationChange
hasStartedUpdates
TB,N,V_hasStartedUpdates
needsTimeResolver
coveringWindow
TB,N,GisCoveringWindow,V_coveringWindow
TB,R,N,GisFullScreen
hasPlaybackBegunSincePlayerControllerBecameReadyToPlay
TB,N,V_hasPlaybackBegunSincePlayerControllerBecameReadyToPlay
hasBecomeReadyToPlay
TB,N,V_hasBecomeReadyToPlay
TB,N,V_multipleRoutesDetected
minimumTime
maximumTime
loadingIndicatorTimerDelay
Td,N,V_loadingIndicatorTimerDelay
resumingUpdates
TB,N,GisResumingUpdates,V_resumingUpdates
prefersMuted
TB,N,V_prefersMuted
playbackSuspendedForScrubbing
TB,N,GisPlaybackSuspendedForScrubbing,V_playbackSuspendedForScrubbing
timeControlStatus
Tq,N,V_timeControlStatus
hasSeekableLiveStreamingContent
TB,N,V_hasSeekableLiveStreamingContent
scrubbingOrSeeking
TB,N,GisScrubbingOrSeeking,V_scrubbingOrSeeking
shouldIgnoreTimeResolverUpdates
TB,N,V_shouldIgnoreTimeResolverUpdates
videoGravityButtonType
Tq,N,V_videoGravityButtonType
playbackViewFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_playbackViewFrame
TB,N,GisVideoScaled,V_videoScaled
uniqueIdentifer
T@"NSString",R,N,V_uniqueIdentifer
windowSceneSessionIdentifier
T@"NSString",&,N,V_windowSceneSessionIdentifier
T@"AVPlayerController",W,N,V_playerController
playerViewControllerIsBeingTransitionedWithResizing
TB,N,V_playerViewControllerIsBeingTransitionedWithResizing
playerViewControllerIsPresentingFullScreen
TB,N,V_playerViewControllerIsPresentingFullScreen
playerViewControllerIsPresentedFullScreen
TB,N,V_playerViewControllerIsPresentedFullScreen
playerViewControllerHasInvalidViewControllerHierarchy
TB,N,V_playerViewControllerHasInvalidViewControllerHierarchy
shouldEnterFullScreenWhenPlaybackBegins
inlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused
TB,N,V_inlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused
TB,N,V_volumeControlsCanShowSlider
showsPictureInPictureButton
TB,N,V_showsPictureInPictureButton
TB,N,V_hasCustomPlaybackControls
TB,N,V_showsVideoGravityButton
showsDoneButtonWhenFullScreen
TB,N,V_showsDoneButtonWhenFullScreen
playbackControlsIncludeStartContentTransitionButtons
TB,N,V_playbackControlsIncludeStartContentTransitionButtons
TB,N,V_playbackControlsShouldControlSystemVolume
forcePlaybackControlsHidden
TB,N,V_forcePlaybackControlsHidden
startLeftwardContentTransitionButtonEnabled
TB,N,GisStartLeftwardContentTransitionButtonEnabled,V_startLeftwardContentTransitionButtonEnabled
startRightwardContentTransitionButtonEnabled
TB,N,GisStartRightwardContentTransitionButtonEnabled,V_startRightwardContentTransitionButtonEnabled
contentTransitionAction
T@?,C,N,V_contentTransitionAction
pictureInPictureController
T@"AVPictureInPictureController",&,N,V_pictureInPictureController
T@"AVSecondScreenContentViewConnection",&,N,V_secondScreenConnection
tapGestureRecognizersCanReceiveTouches
-[AVPlaybackControlsController _updateSecondScreenConnectionReadyToConnect]
readyToConnect
v16@?0@"AVNowPlayingInfoController"8
playerController.timeControlStatus
v32@?0@8@16@"AVKeyValueChange"24
playerController.hasSeekableLiveStreamingContent
v32@?0@"AVPlaybackControlsController"8@16@"NSNotification"24
volumeControlsContainerVisibilityItem.hidden
v32@?0@"AVPlaybackControlsController"8@16@"AVKeyValueChange"24
playerController.hasVideo
volumeController.changingVolume
v24@?0@"AVPlaybackControlsController"8@"AVDisplayLink"16
playerController.currentAssetIfReady
playerController.muted
-[AVPlaybackControlsController _observeBoolForKeyPath:usingKeyValueObservationController:observationHandler:]
-[AVPlaybackControlsController setShowsTimecodes:]
showsTimecodes
-[AVPlaybackControlsController setPlaybackControlsShouldControlSystemVolume:]
playbackControlsShouldControlSystemVolume
-[AVPlaybackControlsController setShowsVideoGravityButton:]
showsVideoGravityButton
-[AVPlaybackControlsController setUpdatesNowPlayingInfoCenter:]
updatesNowPlayingInfoCenter
-[AVPlaybackControlsController setVolumeControlsCanShowSlider:]
volumeControlsCanShowSlider
-[AVPlaybackControlsController setCanIncludePlaybackControlsWhenInline:]
canIncludePlaybackControlsWhenInline
-[AVPlaybackControlsController setHasCustomPlaybackControls:]
hasCustomPlaybackControls
-[AVPlaybackControlsController setShowsPlaybackControls:]
showsPlaybackControls
-[AVPlaybackControlsController setShowsMinimalPlaybackControlsWhenEmbeddedInline:]
showsMinimalPlaybackControlsWhenEmbeddedInline
v16@?0@"AVPlaybackControlsController"8
playerController.usesExternalPlaybackWhileExternalScreenIsActive
-[AVPlaybackControlsController dealloc]
-[AVPlaybackControlsController initWithPlayerViewController:]
playbackControlsContainerVisibilityItem.hidden
playbackControlsContainerVisibilityItem.viewLoaded
timeResolver.maxTime
timeResolver.minTime
timeResolver.targetTime
playerController.hasMediaSelectionOptions
pictureInPictureController.pictureInPictureActive
debugLabel
T@"UILabel",R,N,V_debugLabel
T@"AVSecondScreenPlayerLayerView",&,N,V_playerLayerView
initialScreenBoundsHint
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_initialScreenBoundsHint
sourcePlayerLayer
T@"AVPlayerLayer",W,N,V_sourcePlayerLayer
-[AVSecondScreenViewController setPlayingOnSecondScreen:]
playingOnSecondScreen
activeSourcePlayerLayer
T@"AVPlayerLayer",W,N,V_activeSourcePlayerLayer
v32@?0@"AVSecondScreenPlayerLayerView"8@16@"AVKeyValueChange"24
layer.videoRect
-[AVSecondScreenViewController dealloc]
controls
T@"NSArray",&,N,V_controls
visibilityBehaviorOptions
Tq,N,V_visibilityBehaviorOptions
initiallyHidden
TB,N,GisInitiallyHidden,V_initiallyHidden
showsItemsWhenPaused
TB,N,V_showsItemsWhenPaused
T@"<AVPlaybackControlsVisibilityControllerDelegate>",W,V_delegate
showsItemPreferingStatusBarVisible
canHideItems
TB,N,V_canHideItems
popoverPresented
TB,N,GisPopoverPresented,V_popoverPresented
showsItemsWhileWaitingToPlay
TB,N,V_showsItemsWhileWaitingToPlay
v24@?0@"AVPlaybackControlsVisibilityControllerItem"8@"AVPlaybackControlsVisibilityControllerItemInfo"16
v16@?0@"NSTimer"8
B24@?0@"AVPlaybackControlsVisibilityControllerItem"8q16
v32@?0@"AVPlaybackControlsVisibilityController"8@16@"NSNotification"24
v32@?0@"AVPlaybackControlsVisibilityController"8@16@"AVKeyValueChange"24
-[AVPlaybackControlsVisibilityController endHidingItemsForTransitionAndShowImmediately:]
-[AVPlaybackControlsVisibilityController beginHidingItemsForTransition]
animationDuration
hideItemsTimerInterval
hideItemsQuicklyTimerInterval
volumeChangeHidePlaybackControlTimerInterval
completionSpeed
completionCurve
Tq,N,V_state
displayLink
T@"AVDisplayLink",&,N,V_displayLink
activeTransition
T@"AVTransition",&,N,V_activeTransition
gestureTracker
T@"AVInteractiveTransitionGestureTracker",R,N,V_gestureTracker
T@"AVPresentationController",W,N,V_presentationController
transitionDidBeginHandler
T@?,C,N,V_transitionDidBeginHandler
easeInFunction
T@"CAMediaTimingFunction",&,N,V_easeInFunction
easeOutFunction
T@"CAMediaTimingFunction",&,N,V_easeOutFunction
touchGravity
T{CGPoint=dd},N,V_touchGravity
T@"AVPresentationContext",R,W,N
T@"<AVTransitionControllerDelegate>",W,N,V_delegate
interactiveGestureTracker
T@"<AVTransitionDriver>",&,N,V_interactiveGestureTracker
interactionView
T@"UIView",W,N,V_interactionView
v24@?0@"AVTransitionController"8@"AVDisplayLink"16
-[AVTransitionController animationEnded:]
-[AVTransitionController startInteractiveTransition:]
-[AVTransitionController wantsInteractiveStart]
wantsInteractiveStart
AVPlayerControllerCurrentTimeJumpedNotification
AVPlayerControllerPlaybackDidEndNotification
AVPlayerControllerContentDimensionsChangedNotification
AVPlayerControllerSelectedMediaOptionDidChangeNotification
AVPlayerControllerDidSeekChapterNotification
AVPlayerControllerDidSeekChapterChapterKey
atMaxTime
TB,N,GisAtMaxTime,V_atMaxTime
atMinTime
TB,N,GisAtMinTime,V_atMinTime
currentAssetIfReady
T@"AVAsset",&,N,V_currentAssetIfReady
assetInspectionQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_assetInspectionQueue
assetBeingPrepared
T@"AVAsset",&,N,V_assetBeingPrepared
TB,N,GisPictureInPictureSupported,V_pictureInPictureSupported
readyToPlay
TB,R,N,GisReadyToPlay
timing
T@"AVValueTiming",&,N,V_timing
minTiming
T@"AVValueTiming",&,N,V_minTiming
maxTiming
T@"AVValueTiming",&,N,V_maxTiming
currentAudioTrack
T@"AVAssetTrack",&,N,V_currentAudioTrack
timecodeController
T@"AVTimecodeController",&,N,V_timecodeController
seekingInternal
TB,GisSeekingInternal,V_seekingInternal
seeking
TB,N,GisSeeking,V_seeking
seekToTimeInternal
T{?=qiIq},V_seekToTimeInternal
seekToTime
Td,N,V_seekToTime
metadata
T@"NSDictionary",&,N,V_metadata
contentChapters
T@"NSArray",&,N,V_contentChapters
composable
TB,N,GisComposable,V_composable
hasProtectedContent
TB,N,V_hasProtectedContent
availableMetadataFormats
T@"NSArray",&,N,V_availableMetadataFormats
compatibleWithAirPlayVideo
TB,N,GisCompatibleWithAirPlayVideo,V_compatibleWithAirPlayVideo
rateBeforeScrubBegan
Td,N,V_rateBeforeScrubBegan
preventingIdleSystemSleep
TB,N,GisPreventingIdleSystemSleep,V_preventingIdleSystemSleep
preventingIdleDisplaySleep
TB,N,GisPreventingIdleDisplaySleep,V_preventingIdleDisplaySleep
disablingAutomaticTermination
TB,N,GisDisablingAutomaticTermination,V_disablingAutomaticTermination
canTogglePictureInPicture
TB,N,V_canTogglePictureInPicture
hasBegunInspection
TB,N,V_hasBegunInspection
seekTimer
T@"NSObject<OS_dispatch_source>",R,N
currentDate
T@"NSDate",R,N
currentOrEstimatedDate
Td,N,V_defaultPlaybackRate
touchBarRequiresLinearPlayback
TB,N,V_touchBarRequiresLinearPlayback
error
T@"NSError",R,N
availableTrackAssociationTypes
mediaCharacteristics
extendedLanguageTag
mediaType
languageCode
nominalFrameRate
assetCache
tracks
availableChapterLocales
availableMediaCharacteristicsWithMediaSelectionOptions
streaming
commonMetadata
-[AVPlayerController _updateRateForScrubbingAndSeeking]
-[AVPlayerController updateMinMaxTiming]
-[AVPlayerController seekOrStepByFrameCount:]
-[AVPlayerController actuallySeekToTime]
com.apple.motion.notserializable
-[AVPlayerController setVolume:]
-[AVPlayerController setPlaying:]
v16@?0d8
-[AVPlayerController setRate:]_block_invoke
com.apple.videos
isPiPAvailable
audioFormats
player.externalPlaybackActive
player.rate
player.currentItem.loadedTimeRanges
player.currentItem.playbackBufferEmpty
player.currentItem.playbackLikelyToKeepUp
player.currentItem.hasEnabledVideo
player.currentItem.hasEnabledAudio
hasLiveStreamingContent
player.currentItem.seekableTimeRanges
q24@?0@"AVChapter"8@"AVChapter"16
-[AVPlayerController _queuePlayer]
v16@?0@"AVPlayerController"8
currentAudioMediaSelectionOption
hasEnabledAudio
player.currentItem.duration
player.currentItem.asset
v32@?0@"AVPlayerController"8@16@"AVKeyValueChange"24
contentDimensions
player.currentItem.presentationSize
-[AVPlayerController dealloc]
v32@?0@"AVPlayerController"8@16@"NSNotification"24
-[AVPlayerController initWithPlayer:]
com.apple.avkit.playerControllerAssetInspectionQueue
com.apple.avkit.seekQueue
playingOnExternalScreen
hasEnabledVideo
hasVideo
externalPlaybackType
player.airPlayVideoActive
player.allowsExternalPlayback
canSeek
player.currentItem.canPlayFastReverse
player.currentItem.canPlayFastForward
seekableTimeRanges
player.timeControlStatus
completelySeekable
player.currentItem.seekableTimeRangesLastModifiedTime
player.currentItem.liveUpdateInterval
player.currentItem.hasVideo
contentDuration
player.currentItem.forwardPlaybackEndTime
forwardPlaybackEndTime
player.currentItem.reversePlaybackEndTime
reversePlaybackEndTime
player.muted
player.volume
player.error
player.currentItem.status
player.status
usesExternalPlaybackWhileExternalScreenIsActive
hasTimecodes
hasReadableTimecodes
v32@?0{?=qiIq}8
-[AVPlayerController(AVPlayerControllerExternalPlaybackSupportInternal) setHandlesAudioSessionInterruptions:]
handlesAudioSessionInterruptions
player.usesExternalPlaybackWhileExternalScreenIsActive
stackView
T@"UIStackView",R,N,V_stackView
secondaryMaterialOverlayView
T@"UIVisualEffectView",&,N,V_secondaryMaterialOverlayView
secondaryMaterialOverlayViewConstraints
T@"NSArray",&,N,V_secondaryMaterialOverlayViewConstraints
disablesAutoLayout
TB,N,V_disablesAutoLayout
backdropLayerView
T@"AVCABackdropLayerView",&,N,V_backdropLayerView
axis
Tq,R,N,V_axis
contentLayoutMargins
T{NSDirectionalEdgeInsets=dddd},N
shapeStyle
TQ,N,V_shapeStyle
targetViewForSecondaryMaterialOverlay
T@"UIView",&,N,V_targetViewForSecondaryMaterialOverlay
v32@?0@"UIView"8Q16^B24
externalPlaybackIndicatorView
T@"AVExternalPlaybackIndicatorView",R,N,V_externalPlaybackIndicatorView
unsupportedContentIndicatorView
T@"UIImageView",R,N,V_unsupportedContentIndicatorView
audioOnlyIndicatorView
T@"UIImageView",R,N,V_audioOnlyIndicatorView
externalPlaybackIndicatorViewIfLoaded
T@"AVExternalPlaybackIndicatorView",R,N
unsupportedContentIndicatorViewIfLoaded
T@"UIImageView",R,N
audioOnlyIndicatorViewIfLoaded
videoContentInset
T{UIEdgeInsets=dddd},N,V_videoContentInset
targetVideoGravities
T@"NSMutableDictionary",R,N,V_targetVideoGravities
automaticVideoGravity
T@"NSString",C,N,V_automaticVideoGravity
T@"AVCABackdropLayerView",R,N,V_backdropLayerView
externalPlaybackIndicatorTitle
T@"NSString",C,N,V_externalPlaybackIndicatorTitle
externalPlaybackIndicatorSubtitle
T@"NSString",C,N,V_externalPlaybackIndicatorSubtitle
scrollingObserver
T@"AVScrollViewObserver",R,N,V_scrollingObserver
T@"<AVPlayerViewControllerContentViewDelegate>",W,N,V_delegate
isCoveringWindow
playbackContentContainerView
T@"UIView<AVPlaybackContentContainer>",&,N,V_playbackContentContainerView
layoutClass
T@"NSNumber",R,N
inAWindowAndNotScrolling
TB,R,N,GisInAWindowAndNotScrolling
TB,R,N,GisScrolling
TB,R,N,GisScrollingQuickly
shouldLoadPlaybackControlsHint
TB,N,V_shouldLoadPlaybackControlsHint
canAutomaticallyZoomLetterboxVideos
TB,N,V_canAutomaticallyZoomLetterboxVideos
edgeInsetsForLetterboxedContent
T{UIEdgeInsets=dddd},N,V_edgeInsetsForLetterboxedContent
interactiveContentOverlayView
T@"UIView",&,N,V_interactiveContentOverlayView
iAdPreRollView
T@"UIView",R,N,V_iAdPreRollView
iAdPreRollViewIfLoaded
T@"AVPlaybackControlsView",R,N,V_playbackControlsView
T@"AVTurboModePlaybackControlsPlaceholderView",R,W,N,V_turboModePlaybackControlsPlaceholderView
styleSheetShouldUseCompactFullScreenItemSize
TB,N,V_styleSheetShouldUseCompactFullScreenItemSize
-[AVPlayerViewControllerContentView setShowsAudioOnlyIndicator:]
showsAudioOnlyIndicator
AudioOnlyIndicator
UnsupportedContentIndicator
com.apple.avkit.SharedPreferences
trackingStartTime
Td,N,V_trackingStartTime
wasLongPressed
TB,N,V_wasLongPressed
wasForcePressTriggered
TB,N,V_wasForcePressTriggered
horizontalTranslationOfLongPress
Td,N,V_horizontalTranslationOfLongPress
previousHorizontalPositionOfLongPress
T@"NSNumber",&,N,V_previousHorizontalPositionOfLongPress
force
Td,N,V_force
maximumForceSinceTrackingBegan
Td,N,V_maximumForceSinceTrackingBegan
userInteractionGestureRecognizer
T@"AVUserInteractionObserverGestureRecognizer",&,N,V_userInteractionGestureRecognizer
backgroundEffectView
T@"UIVisualEffectView",&,N,V_backgroundEffectView
treatsForcePressAsLongPress
TB,N,V_treatsForcePressAsLongPress
tintEffectStyle
Tq,N,V_tintEffectStyle
usesBackgroundEffectViewForTextOnlyButtons
TB,N,V_usesBackgroundEffectViewForTextOnlyButtons
forceThreshold
Td,N,V_forceThreshold
multipleTouchesEndsTracking
TB,N,V_multipleTouchesEndsTracking
imageName
T@"NSString",C,N,V_imageName
fullScreenImageName
T@"NSString",C,N,V_fullScreenImageName
inlineImageName
T@"NSString",C,N,V_inlineImageName
fullScreenAlternateImageName
T@"NSString",C,N,V_fullScreenAlternateImageName
inlineAlternateImageName
T@"NSString",C,N,V_inlineAlternateImageName
micaSnapshotAlpha
Td,N,V_micaSnapshotAlpha
disablesHighlightWhenLongPressed
TB,N,V_disablesHighlightWhenLongPressed
clampsHitRectInsetsWhenContainedInScrollableView
TB,N,V_clampsHitRectInsetsWhenContainedInScrollableView
loadingButtonView
T@"AVLoadingButtonView",&,N,V_loadingButtonView
linkFired
T@?,C,N,V_linkFired
T@"CADisplayLink",&,N,V_displayLink
T@,W,N,V_observer
Td,N,V_startTime
runningTime
defaultAudioControls
T@"NSArray",R,N,V_defaultAudioControls
defaultDisplayModeControls
T@"NSArray",R,N,V_defaultDisplayModeControls
keyboardHeight
Td,N,V_keyboardHeight
keyboardUIAvoidanceAnimator
T@"UIViewPropertyAnimator",R,N,V_keyboardUIAvoidanceAnimator
volumeButtonBottomToLayoutMarginsGuideBottomConstraint
T@"NSLayoutConstraint",R,N,V_volumeButtonBottomToLayoutMarginsGuideBottomConstraint
volumeTopToLayoutGuideTopConstraint
T@"NSLayoutConstraint",R,N,V_volumeTopToLayoutGuideTopConstraint
volumeTopToViewTopConstraint
T@"NSLayoutConstraint",R,N,V_volumeTopToViewTopConstraint
screenModeControlsToVolumeControlsSpacingConstraint
T@"NSLayoutConstraint",R,N,V_screenModeControlsToVolumeControlsSpacingConstraint
needsIntialLayout
TB,N,V_needsIntialLayout
playbackControlsVisibilityAnimator
T@"UIViewPropertyAnimator",&,N,V_playbackControlsVisibilityAnimator
mostRecentAnimationCompletionsID
T@"NSUUID",&,N,V_mostRecentAnimationCompletionsID
topAreaLayoutGuideExpanded
TB,N,GisTopAreaLayoutGuideExpanded,V_topAreaLayoutGuideExpanded
includesTransportControls
includesDisplayModeControlsContainer
includesCustomDisplayModeControls
includesAudioControlsContainer
includesCustomAudioControls
includedContainers
Tq,R,N,V_includedContainers
volumeControlsContainer
T@"UIView",R,N,V_volumeControlsContainer
playbackControlsContainer
T@"UIView",R,N,V_playbackControlsContainer
screenModeControls
T@"AVBackdropView",R,N,V_screenModeControls
volumeControls
T@"AVBackdropView",R,N,V_volumeControls
T@"AVBackdropView",R,N,V_prominentPlayButtonBackdropView
miniPlayPauseButtonBackdropView
T@"AVBackdropView",R,N,V_miniPlayPauseButtonBackdropView
transportControlsContainerView
T@"AVView",R,N,V_transportControlsContainerView
T@"AVButton",R,N,V_doneButton
fullScreenButton
T@"AVButton",R,N,V_fullScreenButton
videoGravityButton
T@"AVButton",R,N,V_videoGravityButton
pictureInPictureButton
T@"AVButton",R,N,V_pictureInPictureButton
customDisplayModeItems
T@"NSArray",R,C,N,V_customDisplayModeItems
T@"AVVolumeButtonControl",R,N,V_volumeButton
volumeSlider
T@"AVVolumeSlider",R,N,V_volumeSlider
customAudioItems
T@"NSArray",R,C,N,V_customAudioItems
T@"AVButton",R,N,V_prominentPlayButton
miniPlayPauseButton
T@"AVButton",R,N,V_miniPlayPauseButton
transportControlsView
T@"AVTransportControlsView",R,N,V_transportControlsView
customMediaItems
T@"NSArray",R,C,N,V_customMediaItems
T@"NSArray",R,C,N,V_customControlItems
T@"AVPlayerViewControllerCustomControlsView",R,N,V_customControlsView
hasVisibleSubview
v16@?0q8
v8@?0
B32@?0@"<AVPlaybackControlsViewItem>"8{CGSize=dd}16
v12@?0B8
-[AVPlaybackControlsView setFullScreen:]
-[AVPlaybackControlsView dealloc]
-[AVPlaybackControlsView initWithFrame:styleSheet:]
v32@?0@"AVPlaybackControlsView"8@16@"NSNotification"24
Mini Play Pause Button
Picture in Picture
Zoom
Full Screen
com.apple.avkit.localizedStringBundleQueue
leadingAnchor
T@"NSLayoutXAxisAnchor",R,N
trailingAnchor
leftAnchor
rightAnchor
topAnchor
T@"NSLayoutYAxisAnchor",R,N
bottomAnchor
widthAnchor
T@"NSLayoutDimension",R,N
heightAnchor
centerXAnchor
centerYAnchor
localizedDisplayName
shortLocalizedDisplayName
mediaRemoteIdentifier
avkit_offOption
T@"AVMediaSelectionOption",R
avkit_autoOption
%@-%@-%@
MEDIA_SELECTION_OPTION_AUTO_TITLE
MEDIA_SELECTION_OPTION_OFF_TITLE
Only access this property on the main queue!
%s Setting: %ld
%s pictureInPictureProxy: %@ reason: %ld
%s pictureInPictureProxy: %@
%s error: %@
%s %d
_sceneActivationState == %ld for start pictureinpicture
%s mediaOption: %{public}@ mediaCharacteristic: %{public}@
%s Skipped setting identical option.
%s Changing MACaptionAppearanceDisplayType: %ld -> %ld
%s Enabling automatic display type because receiver changed captions to forced-only.
%s Persisting preferences for remote legible option change: %{public}@ -> %{public}@
%s Selected legible option: %{public}@ 
%s Selected audible option: %{public}@ 
*** %s Received a forced-only media selection (%{public}@) when display type was NOT forced-only (was %ld). mediaSelectionCriteriaCanBeAppliedAutomaticallyToMediaSelectionGroup: %d. ***
*** %s Received a non-forced-only media selection (%{public}@) from automatic media selection when display type was forced-only. ***
%s LegibleMediaSelectionOptions: %{public}@
%s AudioMediaSelectionOptions: %{public}@
*** %s must be called on main thread. ***
%s subclass: %@
Cannot unmute when muting.
Cannot mute when unmuting.
Cannot reset when not tracking.
Cannot continue if still waiting.
Cannot cancel when not tracking.
Cannot finish when not tracking.
Began tracking when already tracking.
Recognized pan gesture without enabling pan to dismiss.
Recognized pinch gesture without enabling pinch to present or pinch to dismiss.
Pinch to present and pinch to dismiss cannot be simultaneously enabled.
%s %@ %ld
%s %@ %@
Pause command
Stop command
Play command
Toggle play pause command
Next track command
Previous track command
Skip forward command
Skip backward command
Begin fast forward command
End fast forward command
Begin rewind command
End rewind command
Change playback rate command
Seek to playback position command
Enable language option command
Disable language option command
Remote Command Status: %ld
Update now playing info if needed: %d
%s %@ -> %@
Attempted to connect with a screen that is not available.
%s Created second window %p on %@
%s %@ foreground: %d haswindows: %d
%s %@ volume HUD for windowScene with ID: %@
%@: It is an error to set the target volume without calling -[AVVolumeController begin/endChangingVolume].
Target view should be our own view when the full screen view controller is being transitioned!
Unexpected value for the transition controller's presentedViewController
%s <%{public}@ %p> %@ respond to %{public}@
%s .status: %ld .hasEnabledVideo: %d .hasEnabledAudio: %d
The player controller should have content before calling %@.
It's an error to repeatedly add observers.
Did receive stop command notification.
Already performed initial setup.
%s Attempt to load view when view was already loaded.
Expected only one context for AVPlayerViewControllerBehaviorContext. This is fine, but probably means AVPlayerViewControllerBehaviorContext needs to be refactored
Default playback rates of less than 0.5 are not supported. Ignoring.
%s %@ layoutClass: %ld
%s %@
%s %d %p
%s Did not get a valid video composition.
%@ did not receive a view from its delegate, %@.
Don't initialize this unless AVSecondScreenDebugHUDEnabled()!
%s Disabling autorotation for window: %p
%s Enabling autorotation for window: %p
You must call -[AVObservationController stopAllObservation] before destroying it, perhaps in its owner's dealloc. %@
%s %@ Offset: %@ ActiveOrigin: %@ TransitioningOrigin: %@
Instance %@ attempted content transition while one was already active. Ignoring. %@
Attempt to transition while adjusting bounds.
Invalid state transition from %@ to %@.
This is where the problem is.
Invalid state transition
%s old: %ld --> new: %ld
%s Calling client completion handler with playbackState: %@
%s isLongFormVideoApp = %i
%s Current routing session: %@, routingSessionManager.prefersLikelyDestinationsOverCurrentRoutingSession: %i
%s Using current routing session. Calling client completion handler with playbackState: %@
%s Not using current routing session. AVRoutingSessionManager has %lu likely external destinations: %@
%s Showing medium confidence picker.
%s No likely external destinations. Calling client completion handler with playback state: %@
%s Not a long-form video app. Calling client completion handler with playback state: %@
%s Medium confidence picker dismissed because MPMediaControlsDismissalReasonUserCancelled.
%s Medium confidence picker dismissed because MPMediaControlsDismissalReasonUnknown.
%@ should be called from a background thread
%s Setting mica color: (R: %.2f G: %.2f B: %.2f Alpha: %.2f) and state: %@.
Shouldn't already have a contentZooming view.
Content view unexpectedly had incomingContentView.
contentTransitioningPlayer should never be nil here.
Already had a content transition view, which is unexpected.
Warning: Attempted to start content transition on a %@, which was already transitioning. Ignoring.
%s %ld
Unexpected
Unexpectedly missing URL for CAML file. %@
%@: %@ -> %@
Do not call this method when showing the content info panel.
%s Refresh: %.f HDRMode: %@ overscanCompensation: %@
%s This feature requires a UIWindowScene.
Called %@ before creating playback controls view!
%s Cannot observe keypath %@ %@
*** AVPlayerViewController cannot update status bar visibility while hosted in view service. ***
%s %s %s
Called %@ when _numberOfUserInteractionsBeingTracked == %ld
%@ %d
%@: Unexpected transition state.
%@ called with an invalid state %ld
Unexpected gesture kind.
Unexpected transitioning state.
Tried to dismiss a view controller without a presenting view controller. This is hard.
Cannot present view controller without a view controller from which to present.
Calls to -[AVPlayerController stopUsingNetworkResourcesForLiveStreamingWhilePaused] must be counterbalanced with calls to -[AVPlayerController startUsingNetworkResourcesForLiveStreamingWhilePaused].
Modifying seekableTimeRange by: %f
segmentDuration: %f
minTimingNeedsUpdate: %d, new minTiming with minTime: %f, rate: %f, old minTime: %f, delta: %f
maxTimingNeedsUpdate: %d, new maxTiming with maxTime: %f old maxTime: %f, delta: %f
%s stepByCount: %ld
%s sampleBasedSeekTarget: %f
%s skipInterval: %f
%s time: %f toleranceBefore: %f toleranceAfter: %f
Seek completed: %s
Scrubbing Ended
Scrubbing Started
%s %f
Can play immediately: %d
Retrying play immediately.
Calling playImmediatelyAtRate: %f
Could not play immediately, setting a play immediately retry block.
%s %.1f on %p
%s immediately %.1f on %p
PlayerItemDidChange
New playerItem: <%{public}@: %p>
New asset: <%{public}@: %p>
SeekableTimeRanges changed {%f, %f} -> {%f, %f}.
liveStreamEventModePossible: %d
Time control status = %ld
Playback likely to keep up changed to: %@
isPlaybackBufferEmpty: %d
Rate changed to: %f
Ignoring rate change.
Failed to handle %@ %@
%s queuePlayer: %d
Interruption notification: AVAudioSessionInterruptionNotification player.rate: %.1f userinfo: %@
AVAudioSessionInterruptionTypeEnded: %f
Interruption notification: AVPlayerPlaybackWasInterruptedNotification player.rate: %.1f userinfo: %@
%s player: %p
Never load the turboModePlaybackControlsPlaceholderView when the playbackControlsView is already loaded!
%@ called when initial layout not needed already set.
AVView
AVAppStorePlayerView
AVAppStorePlayerLayerView
AVRouteDetectorCoordinator
AVContentOverlayView
AVAdditions
_AVSimplePlayerLayerView
AVPictureInPicturePlayerLayerView
AVPictureInPicturePlatformAdapter
AVPictureInPictureControlsStyleAppearance
NSObject
PGPictureInPictureProxyDelegate
AVPictureInPictureViewControllerDelegate
__AVPlayerLayerView
AVScrubberVelocity
AVScrubber
AVExternalGestureRecognizerPreventing
UIScrollViewDelegate
AVPlaybackControlsVisibilityControllerItem
AVChapter
NSCopying
AVPlayerItemAVKitData
AVKitAdditionsPrivate
AVPlaybackRouteSelecting_Private
AVPlaybackRouteSelecting
AVMediaSelection
AVPlayerController
AVScrollViewObserver
_UIScrollViewScrollObserver
AVVolumeSlider
AVPlaybackControlsViewItem
AVVolumeWarningView
AVNewsWidgetPlayerBehavior
AVBehavior
AVBehaviorInternal
AVUserInteractionObserverGestureRecognizer
AVPlayerControllerVolumeAnimator
AVPlayerController_AVPlayerControllerVolumeAnimatorAdditions
AVHomeIPCameraActionButtonHandling
AVHomeIPCameraBehavior
AVInteractiveTransitionGestureTracker
AVTransitionDriver
UIInteraction
UIGestureRecognizerDelegate
AVSecondScreenController
AVPresentationContext
AVNowPlayingInfoController
AVStatusBarBackgroundGradientViewSubview
AVStatusBarBackgroundGradientView
AVMusicAppBehavior
AVMusicAppBehaviorContext
AVBehaviorContext
AVMetricsCollectionBehaviorContext
AVPlayerViewControllerBehaviorContext
AVBehaviorContextInternal
AVPlayerItem_AVMusicAppBehaviorContextAdditions
AVSecondScreen
AVLoadingButtonView
AVVolumeHUDAssertion
AVSystemVolumeController
AVVolumeController
AVZoomingBehavior
AVPlayerViewControllerCustomControlsViewLayoutMarginsGuideProvidingView
AVPlayerViewControllerCustomControlsView
AVPlaybackControlsRoutePickerView
AVStyleSheet
AVEditBehavior
AVPlayerViewController
AVContentOverlayViewDelegate
AVTransitionControllerDelegate
AVFullScreenViewControllerDelegate
AVPlaybackControlsVisibilityControllerDelegate
UIPopoverPresentationControllerDelegate
UIAdaptivePresentationControllerDelegate
AVPictureInPictureControllerDelegate
AVPlayerViewController_AdLibOnly
AVPlayerViewController_WebKitOnly
AVPlayerViewController_AppStoreOnly
AVPlayerViewControllerInternal
AVPlaybackControlsViewControllerActions
AVPlayerViewControllerTransitioningInternal
DeprecationsAndToBeRemoved
AVEditBehaviorContext
AVEditViewDelegate
AVEditViewDataSource
AVPlayerItem_AVEditBehaviorContextAdditions
AVFullScreenViewController
AVExternalGestureRecognizerPreventer
AVPictureInPictureViewController
PGPictureInPictureViewController
PGPictureInPictureViewControllerSupport
AVExternalPlaybackIndicatorView
AVValueTiming
NSMutableCopying
NSCoding
AVMutableValueTiming
AVConcreteMutableValueTiming
AVConcreteValueTiming
AVValueTimingCreation
AVExtendedValueTiming
AVExtendedMutableValueTiming
AVSecondScreenDebugAssistant
AVPresentationController
AVObservationController
AVKeyValueChange
AVProxyKVOObserver
AVHomeIPCameraBehaviorContext
AVScrubbing
AVPlaybackContentContainerView
AVPlaybackContentContainer
AVPlaybackContentZoomingView
AVEditView
UIMovieScrubberDelegate
UIMovieScrubberDataSource
AVPlaybackContentTransitioningView
AVMediaSelectionTableViewController
AVTableViewCell
AVMediaSelectionViewController
AVPictureInPictureController
AVPictureInPicturePlatformAdapterDelegate
AVControlItem
AVLabel
AVPlayerView
AVExternalPlaybackController
AVTimecode
AVTimecodeController
Common
AVCABackdropLayer
AVCABackdropLayerView
AVRoutePickerView
AVRoutePickerViewInternalDelegate
AVRoutePickerViewDelegate
AVPictureInPictureIndicatorLayer
AVBackgroundView
AVVolumeButtonControl
AVPlayerControllerTimeResolver
TimeObserverAdditions
AVTouchIgnoringView
AVZoomingBehaviorContext
AVNewsWidgetPlayerBehaviorContext
AVPlaybackContentTransitioningViewDelegate
AVNewsWidgetPlayerLegacyBehavior
AVPlayerViewController_NewsOnly
AVTransition
AVPictureInPictureContentSource
AVImage
AVMicaPackage
CAStateControllerDelegate
CAMLParserDelegate
AVTurboModePlaybackControlsPlaceholderView
AVPlayerViewControllerAnimationCoordinator
AVTimer
AVSecondScreenConnection
AVSecondScreenContentViewConnection
AVPlayerVolumeController
AVPresentationContainerViewLayer
AVPresentationContainerViewAppearanceProxy
AVPresentationContainerView
AVTransportControlsView
AVScrubberDelegate
AVDefaultBehaviorContext
AVBehaviorStorage
AVBehaviorSupport
AVSecondScreenAdditions
AVPresentationContextTransition
AVHomeIPCameraPlayerController
AVPlaybackControlsController
AVPlayerViewControllerContentViewDelegate
AVTransportControlsViewDelegate
AVSecondScreenViewController
AVSecondScreenPlayerLayerView
AVPlaybackControlsVisibilityControllerItemInfo
AVPlaybackControlsVisibilityController
UnitTestSupport
AVIndirectUserInteractionSupport
UIViewControllerAnimatedTransitioning
UIViewControllerInteractiveTransitioning
AVTransitionDelegate
AVTransitionDriverDelegate
UIViewControllerTransitioningDelegate
AVTransitionController
AVPlayerControllerMercurySupportInternal
AVPlayerControllerExternalPlaybackSupportInternal
AVPlayerControllerTimecodeSupport
AVBackdropView
AVPlayerViewControllerContentView
AVScrollViewObserverContentView
AVSharedPreferencesProtocol
AVButton
AVHomeLoadingButtonControlItem
AVDisplayLink
AVPlaybackControlsView
_AVBundle
AVKitLayoutItem
NSLayoutConstraint_AVKitAdditions
NSLayoutAnchor_AVKitAdditions
NSLayoutDimension_AVKitAdditions
_ignoresTouches
setHidden:
hitTest:withEvent:
ignoresTouches
setIgnoresTouches:
_showsPlaybackControls
_updatesNowPlayingInfoCenter
_showsMinimalPlaybackControlsWhenEmbeddedInline
_canPausePlaybackWhenExitingFullScreen
_allowsEnteringFullScreen
_videoGravity
_contentOverlayView
_player
_playButtonHandlerForLazyPlayerLoading
_preferredUnobscuredArea
_playerViewControllerDelegate
_playerViewController
_prominentPlayButton
_prominentPlayButtonBackdropView
_styleSheet
_playerLayerView
_videoGravityForLayoutClassDictionary
_observationController
initWithFrame:
dealloc
setShowsPlaybackControls:
setUpdatesNowPlayingInfoCenter:
setShowsMinimalPlaybackControlsWhenEmbeddedInline:
setCanPausePlaybackWhenExitingFullScreen:
setAllowsEnteringFullScreen:
setVideoGravity:
setPreferredUnobscuredArea:
setPlayerViewControllerDelegate:
setPlayer:
setVideoGravity:forLayoutClass:
setPlayButtonHandlerForLazyPlayerLoading:
setClipsToBounds:
_setContinuousCornerRadius:
layoutSubviews
_makeActualVideoViewWithPlayerIfNeeded:
_makePlayerLayerViewWithPlayer:
_makePlayerViewControllerWithPlayer:
_prominentPlayButtonTouchUpInside:
.cxx_destruct
showsPlaybackControls
updatesNowPlayingInfoCenter
showsMinimalPlaybackControlsWhenEmbeddedInline
canPausePlaybackWhenExitingFullScreen
allowsEnteringFullScreen
videoGravity
contentOverlayView
player
playButtonHandlerForLazyPlayerLoading
preferredUnobscuredArea
playerViewControllerDelegate
playerViewController
setPlayerViewController:
prominentPlayButton
setProminentPlayButton:
prominentPlayButtonBackdropView
setProminentPlayButtonBackdropView:
styleSheet
setStyleSheet:
playerLayerView
setPlayerLayerView:
videoGravityForLayoutClassDictionary
setVideoGravityForLayoutClassDictionary:
observationController
animateWithDuration:delay:options:animations:completion:
removeFromSuperview
activateConstraints:
setTranslatesAutoresizingMaskIntoConstraints:
addSubview:
bounds
objectForKeyedSubscript:
unsignedIntegerValue
countByEnumeratingWithState:objects:count:
allKeys
layer
layerClass
insertSubview:atIndex:
layoutFrame
layoutMarginsGuide
superview
copy
setObject:forKeyedSubscript:
numberWithUnsignedInteger:
mainScreen
addTarget:action:forControlEvents:
_routeDetectionEnabled
setRouteDetectionEnabled:
multipleRoutesDetected
isRouteDetectionEnabled
endDetectingRoutes
beginDetectingRoutes
routeDetectorCoordinatorQueue
sharedSystemRouteDetector
updateMultipleRoutesDetected
setMultipleRoutesDetected:
postNotificationName:object:
defaultCenter
isMainThread
addObserverForName:object:queue:usingBlock:
_delegate
didAddSubview:
_didRemoveSubview:
delegate
setDelegate:
_isHostedInAnotherProcess
_windowInterfaceOrientation
autorotates
avkit_canAttemptSecondWindowForRotability
_windowOwnsInterfaceOrientation
_windowControlsStatusBarOrientation
_shouldControlAutorotation
avkit_isHostedInAnotherProcess
_shouldAutorotateToInterfaceOrientation:
_setRotatableViewOrientation:duration:
avkit_canAttemptRotation
avkit_preferredInterfaceOrientationFromDeviceOrientation
avkit_supportsAutorotationForInterfaceOrientationMask:
avkit_ensureOrientation:disableTouchCancellation:
userInterfaceIdiom
currentDevice
orientation
rangeOfString:
substringFromIndex:
stringWithFormat:
substringToIndex:
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
playerLayer
keyPathsForValuesAffectingPlayerLayer
setWithObjects:
_simplePlayerLayerView
attachPlayerLayer
detachPlayerLayer
didChangeValueForKey:
willChangeValueForKey:
constraintsWithVisualFormat:options:metrics:views:
_allowsPictureInPicturePlayback
_alwaysStartsAutomaticallyWhenEnteringBackground
_anyPictureInPictureActive
_playerController
_controlsStyle
_pictureInPictureViewController
_status
_pegasusProxy
_layoutCheckTimer
_secondScreenConnection
_sourceWindowWhenPictureInPictureStarted
_source
_statusStorage
_videoRectInScreen
controlsStyle
setControlsStyle:
debugDescription
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
pictureInPictureProxyInterfaceOrientationForTransitionAnimation:
pictureInPictureProxyViewFrameForTransitionAnimation:
pictureInPictureProxyViewControllerWindowForTransitionAnimation:
pictureInPictureProxy:willStartPictureInPictureWithAnimationType:
pictureInPictureProxy:didStartPictureInPictureWithAnimationType:
pictureInPictureProxy:failedToStartPictureInPictureWithAnimationType:error:
pictureInPictureProxy:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:
pictureInPictureProxy:willStopPictureInPictureWithAnimationType:reason:
pictureInPictureProxy:didStopPictureInPictureWithAnimationType:reason:
pictureInPictureProxyPictureInPictureInterruptionBegan:
pictureInPictureProxyPictureInPictureInterruptionEnded:
pictureInPictureViewControllerViewDidAppear:
pictureInPictureViewControllerViewWillDisappear:
initWithSource:
startPictureInPicture
stopPictureInPictureAndRestoreUserInterface:
canAnimatePictureInPictureTransition
isSystemPictureInPicturePossible
setAllowsPictureInPicturePlayback:
setPlaybackProgress:playbackRate:loadedTimeRanges:
setAlwaysStartsAutomaticallyWhenEnteringBackground:
updateLayoutDependentBehaviors
_updatePegasusProxyControlsStyle
_createProxyIfNeeded
_startObservation
_removeSecondScreenConnection
_sceneActivationState
playerController
setPlayerController:
allowsPictureInPicturePlayback
alwaysStartsAutomaticallyWhenEnteringBackground
pictureInPictureViewController
isAnyPictureInPictureActive
status
pegasusProxy
videoRectInScreen
setVideoRectInScreen:
layoutCheckTimer
secondScreenConnection
setSecondScreenConnection:
sourceWindowWhenPictureInPictureStarted
setSourceWindowWhenPictureInPictureStarted:
source
statusStorage
setStatusStorage:
activationState
interfaceOrientation
setTolerance:
scheduledTimerWithTimeInterval:repeats:block:
boolValue
preferredContentSizeDidChangeForViewController
setPreferredContentSize:
CGSizeValue
setPlaybackProgress:playbackRate:
arrayWithObjects:count:
initWithControlsStyle:viewController:
setPictureInPictureShouldStartWhenEnteringBackground:
_largestInscribedRectInBoundingPathWithCenter:aspectRatio:
viewFrameForInteractiveTransitionAnimationWhenEnteringBackgroundDidChangeForViewController
convertRect:toCoordinateSpace:
fixedCoordinateSpace
isPictureInPictureSupported
startPictureInPictureButtonImageName
stopPictureInPictureButtonImageName
_pictureInPicturePlayerLayerView
_playerLayer
_pictureInPicturePlayerLayer
isReadyForDisplay
videoBounds
videoDisplaySize
isVideoScaled
setVideoScaled:
pixelBufferAttributes
setPixelBufferAttributes:
pictureInPicturePlayerLayerView
startRoutingVideoToPictureInPicturePlayerLayerView
stopRoutingVideoToPictureInPicturePlayerLayerView
pictureInPicturePlayerLayer
setPictureInPicturePlayerLayer:
setPlaceholderContentLayerDuringPIPMode:
stopRedirectingVideoToLayer:
CGImage
displayScale
_flatImageWithColor:
imageNamed:inBundle:compatibleWithTraitCollection:
startRedirectingVideoToLayer:forMode:
videoRect
isEqualToString:
clearColor
keyPathsForValuesAffectingVideoLayerGravity
keyPathsForValuesAffectingReadyForDisplay
keyPathsForValuesAffectingVideoBounds
keyPathsForValuesAffectingVideoDisplaySize
keyPathsForValuesAffectingVideoScaled
keyPathsForValuesAffectingPixelBufferAttributes
setWithObject:
setWithArray:
_timestamp
_velocity
timestamp
setTimestamp:
velocity
setVelocity:
_trackingStartTime
_previousValue
_previousValueChangeTime
_currentValueChangedTime
_didHaveLessThanFullScrubbingSpeedSinceTrackingBegin
_scrollScrubbing
_slowKnobMovementDetected
_shouldRecoverFromPrecisionScrubbingIfNeeded
_scrubsWhenTappedAnywhere
_canChangeScrubbingSpeed
_collapsed
_included
_removed
_hasAlternateAppearance
_hasFullScreenAppearance
_hasChangedLocationAtLeastOnce
_estimatedFrameRate
_rate
_feedbackGenerator
_loadedTrackOverlayView
_previousScrubberVelocities
_loadedTimeRanges
_scrubbingSpeed
_resolution
_scrollView
_currentThumbView
_updateSlowKnobMovementDetectedTimer
_timestampWhenTrackingEnded
_extrinsicContentSize
_hitRectInsets
avkit_shouldPreventExternalGestureRecognizerAtPoint:
scrollViewDidScroll:
scrollViewDidZoom:
scrollViewWillBeginDragging:
scrollViewWillEndDragging:withVelocity:targetContentOffset:
scrollViewDidEndDragging:willDecelerate:
scrollViewWillBeginDecelerating:
scrollViewDidEndDecelerating:
scrollViewDidEndScrollingAnimation:
viewForZoomingInScrollView:
scrollViewWillBeginZooming:withView:
scrollViewDidEndZooming:withView:atScale:
scrollViewShouldScrollToTop:
scrollViewDidScrollToTop:
scrollViewDidChangeAdjustedContentInset:
feedbackGenerator
loadedTrackOverlayView
previousScrubberVelocities
setLoadedTimeRanges:
clampedEstimatedFrameRate
localizedScrubbingSpeedName
setCurrentThumbView:
timeIntervalSinceTrackingEnded
isCollapsedOrExcluded
setIncluded:
setCollapsed:
setRemoved:
setExtrinsicContentSize:
intrinsicContentSize
setValue:
minimumValueImageRectForBounds:
maximumValueImageRectForBounds:
thumbRectForBounds:trackRect:value:
trackRectForBounds:
createThumbView
setEnabled:
isTracking
beginTrackingWithTouch:withEvent:
continueTrackingWithTouch:withEvent:
endTrackingWithTouch:withEvent:
cancelTrackingWithEvent:
endOrCancelTracking
alignmentRectInsets
updateScrollViewContentSizeAndOffsetIfNeeded
hitRect
pointInside:withEvent:
duration
normalizedPosition
normalizedScrollOffset
valueFromScrollView
contentOffsetFromValue
_shouldTrackTouchAtPoint:
_updateSlowKnobMovementDetected
_updateSlowKnobMovementDetectedForTargetValue:
setPreviousScrubberVelocities:
loadedTimeRanges
scrubbingSpeed
setScrubbingSpeed:
estimatedFrameRate
setEstimatedFrameRate:
resolution
setResolution:
hitRectInsets
setHitRectInsets:
rate
setRate:
scrollView
setScrollView:
isScrollScrubbing
setScrollScrubbing:
slowKnobMovementDetected
setSlowKnobMovementDetected:
shouldRecoverFromPrecisionScrubbingIfNeeded
setShouldRecoverFromPrecisionScrubbingIfNeeded:
currentThumbView
updateSlowKnobMovementDetectedTimer
setUpdateSlowKnobMovementDetectedTimer:
timestampWhenTrackingEnded
setTimestampWhenTrackingEnded:
scrubsWhenTappedAnywhere
setScrubsWhenTappedAnywhere:
canChangeScrubbingSpeed
setCanChangeScrubbingSpeed:
extrinsicContentSize
isCollapsed
isIncluded
isRemoved
hasAlternateAppearance
setHasAlternateAppearance:
hasFullScreenAppearance
setHasFullScreenAppearance:
hasChangedLocationAtLeastOnce
setHasChangedLocationAtLeastOnce:
objectAtIndexedSubscript:
count
removeObjectsInArray:
addObject:
array
minimumValue
maximumValue
_trackEnabled
_thumbHitEdgeInsets
convertPoint:toView:
contentSize
contentOffset
effectiveUserInterfaceLayoutDirection
setContentOffset:
_maxTrackView
floatValue
convertRect:fromView:
_minTrackView
removeAllObjects
setTracking:
sendActionsForControlEvents:
selectionChanged
center
previousLocationInView:
locationInView:
prepare
invalidateIntrinsicContentSize
whiteColor
setNeedsLayout
setUserInteractionEnabled:
setThumbImage:forState:
setMaximumTrackImage:forState:
setMinimumTrackImage:forState:
setContentCompressionResistancePriority:forAxis:
setContentHuggingPriority:forAxis:
minimumTrackImageForState:
keyPathsForValuesAffectingLocalizedScrubbingSpeedName
_hidden
_viewLoaded
_alpha
_view
init
setView:
setAlpha:
wantsAnimatedTransitionToHidden:alpha:
needsTransitionToHidden:alpha:
isHidden
alpha
isViewLoaded
setViewLoaded:
view
opacity
presentationLayer
isHiddenOrHasHiddenAncestor
_image
_imageBlock
_startTime
_duration
_number
_title
copyWithZone:
initWithStartTime:duration:number:title:imageFaultBlock:
startTime
number
title
image
alloc
initWithCGImage:
initialize
playbackChapterWithStartTime:duration:number:title:imageFaultBlock:
chapterAtTime:inChapters:
_customPropertyStorage
customPropertyStorage
setDictionary:
dictionary
avkit_data
avkit_dataOrNil
AVKitData
setAVKitData:
avkit_setValue:forAVKitProperty:
avkit_valueForAVKitProperty:
externalMetadata
setExternalMetadata:
_externalPlaybackController
prepareRouteSelectionForPlaybackWithCompletionHandler:
prepareRouteSelectionForPlaybackFromBundleID:withCompletionHandler:
_ensureUserCaptionDisplayType:
currentLegibleMediaSelectionOption
currentAudioMediaSelectionOption
propertyList
reloadOptionsAssumingMediaOptionsMayHaveChanged:
audioOptions
legibleOptions
hasAudioMediaSelectionOptions
setLegibleMediaSelectionOptions:audioMediaSelectionOptions:assumeMediaOptionMayHaveChanged:
_optionsForGroup:
playableMediaSelectionOptionsFromArray:
autoupdatingCurrentLocale
objectForKey:
localeIdentifier
languageCompare:currentLanguageCode:currentLanguageIdentifier:
sortedArrayUsingComparator:
hasLegibleMediaSelectionOptions
numberWithBool:
isAC3Only
arrayWithArray:
currentItem
currentMediaSelection
selectedMediaOptionInMediaSelectionGroup:
mediaSelectionOptionsFromArray:withoutMediaCharacteristics:
mediaSelectionOptionsFromArray:withMediaCharacteristics:
arrayByAddingObjectsFromArray:
valueForKey:
avkit_persistentIdentifier
removeObject:
isEqualToSet:
isCC
isAuxiliary
isEasyReader
isSDH
isMain
selectMediaOptionAutomaticallyInMediaSelectionGroup:
_performAutomaticMediaSelectionForUserCaptionDisplayType:
selectMediaOption:inMediaSelectionGroup:
mediaSelectionCriteriaCanBeAppliedAutomaticallyToMediaSelectionGroup:
hasMediaSelectionOptions
keyPathsForValuesAffectingCurrentAudioMediaSelectionOption
setCurrentAudioMediaSelectionOption:
keyPathsForValuesAffectingCurrentLegibleMediaSelectionOption
setCurrentLegibleMediaSelectionOption:
selectedMediaOptionMayHaveChanged
reloadOptions
reloadOptionsAndCurrentSelections
reloadAudioOptions
reloadLegibleOptions
keyPathsForValuesAffectingHasMediaSelectionOptions
keyPathsForValuesAffectingHasAudioMediaSelectionOptions
keyPathsForValuesAffectingHasLegibleMediaSelectionOptions
numberWithInt:
mediaSubTypes
unsignedIntValue
locale
audioMediaSelectionOptions
displayName
localizedCaseInsensitiveCompare:
audioFormats
integerValue
isEqualToArray:
setAudioMediaSelectionOptions:
setLegibleMediaSelectionOptions:
selectedMediaOptionMayHaveChanged:
_selectedMediaOptionWithMediaCharacteristic:
containsObject:
_setMediaOption:mediaCharacteristic:
legibleMediaSelectionOptions
hasMediaCharacteristic:
appliesMediaSelectionCriteriaAutomatically
_mediaSelectionCriteriaCanBeAppliedAutomaticallyToLegibleMediaSelectionGroup
_disableLegibleMediaSelectionOptions:
_enableAutoMediaSelection:
mediaSelectionGroupForMediaCharacteristic:
assetCache
isPlayableOffline
mediaSelectionOptionsInMediaSelectionGroup:
options
canonicalLanguageIdentifierFromString:
minusSet:
mediaType
arrayByAddingObject:
extendedLanguageTag
_scrolling
_scrollingQuickly
_observer
_observedScrollViews
_scrollingDidEndTimer
_observeScrollViewDidScroll:
initWithContentView:
updateObservedScrollViews
_updateScrollingStatus
isScrolling
setScrolling:
isScrollingQuickly
setScrollingQuickly:
observer
setObserver:
observedScrollViews
setObservedScrollViews:
scrollingDidEndTimer
setScrollingDidEndTimer:
anyObject
_removeScrollViewScrollObserver:
minusHashTable:
_addScrollViewScrollObserver:
_isScrollViewScrollObserver:
weakObjectsHashTable
_animatingVolumeChange
_effectiveVolumeLimit
_thumbView
_unclampedValue
_volumeWarningView
setEffectiveVolumeLimit:
unclampedValue
didMoveToWindow
gestureRecognizerShouldBegin:
setValue:animated:
_endTracking
thumbView
setThumbView:
effectiveVolumeLimit
setUnclampedValue:
isAnimatingVolumeChange
setAnimatingVolumeChange:
volumeWarningView
setVolumeWarningView:
deactivate
_modulationFeedbackGenerator
userInteractionEnded
_edgeFeedbackGenerator
layoutIfNeeded
startAnimation
addCompletion:
addAnimations:
initWithDuration:timingParameters:
initWithDampingRatio:
_solveForInput:
functionWithName:
valueUpdated:
positionUpdated:
distance
numberWithDouble:
activateWithCompletionBlock:
userInteractionStarted
isDescendantOfView:
convertPoint:fromView:
stopAnimatingAndRemoveFromSuperview
startAnimating
insertSubview:below:
_stopping
_animator
continueAnimating
isStopping
setStopping:
animator
setAnimator:
finishAnimationAtPosition:
stopAnimation:
isInterruptible
isRunning
initWithDuration:curve:animations:
systemYellowColor
numberWithFloat:
_behaviorContext
willMoveToContext:
behaviorContextClass
behaviorContext
setBehaviorContext:
didMoveToContext:
willRemoveFromContext:
didRemoveFromContext:
playerForContentTransitionType:
willBeginContentTransition
didUpdateContentTransitionProgress:
willCompleteContentTransition
didCompleteContentTransition
willCancelContentTransition
didCancelContentTransition
_trackedTouches
initWithTarget:action:
canBePreventedByGestureRecognizer:
canPreventGestureRecognizer:
shouldRequireFailureOfGestureRecognizer:
shouldBeRequiredToFailByGestureRecognizer:
touchesBegan:withEvent:
touchesMoved:withEvent:
touchesEstimatedPropertiesUpdated:
touchesEnded:withEvent:
touchesCancelled:withEvent:
_touchesEndedOrCancelled:
unionSet:
setCancelsTouchesInView:
_animatingTowardsZero
_animatingAwayFromZero
_volumeToRestore
initWithPlayerController:
currentRouteHasVolumeControl
canAnimateVolumeTowardsZero
canAnimateVolumeAwayFromZero
setProgressTowardsZero:
setProgressAwayFromZero:
restoreVolumeIfNeeded
volumeToRestore
setVolumeToRestore:
isAnimatingTowardsZero
setAnimatingTowardsZero:
isAnimatingAwayFromZero
setAnimatingAwayFromZero:
supportsVolumeAnimation
pictureInPictureActionButtonTapped
playbackControlsDidChangePlayerVolume:
playbackControlsDidToggleMuted:
playbackControlsDidUpdateVisibilityOfLoadingIndicator:
_enabled
_pinchToDismissEnabled
_pinchToPresentEnabled
_panToDismissEnabled
_waitingForTransition
_waitingForBoundsChange
_waitingForLocationChangeAfterBoundsChange
_hasContinued
_hasRotated
_lastNonZeroVelocityWasDownward
_contentTransitioningViewGestureRecognizer
_transitionDriverDelegate
_previousPinchScale
__rotation
_panGestureRecognizer
_pinchGestureRecognizer
_rotationGestureRecognizer
_recognizers
_timestampOfTouchWithLocationChangeAfterBoundsChange
_initialInterfaceOrientation
_transitionInteraction
_gestureLocationAfterBoundsChange
_lastReportedLocationInWindow
_anchorLocationInWindow
_initialCoordinateSpaceBounds
locationInWindow
translationInWindow
velocityInWindow
angleOfVelocityInWindow
transitionDriver:shouldRequireFailureOfGestureRecognizer:
isEnabled
transitionDriverDelegate
setTransitionDriverDelegate:
transitionInteraction
rotation
rotationVelocity
pinchScale
pinchVelocity
lastNonZeroVelocityWasDownward
contentTransitioningViewGestureRecognizer
setContentTransitioningViewGestureRecognizer:
willMoveToView:
didMoveToView:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
addRecognizersToView:
_locationRecognizer
_untranslatedUnfilteredLocationInFixedCoordinateSpace
_filteredUntranslatedLocationInWindow
_handlePinchGesture:
_handleRotationGesture:
_handlePanGesture:
_isWaitingToContinue
_beginTracking:
_finish
_cancel
_updateLastNonZeroVelocityDirection
_resetGesturesIfPossible
_setHasContinuedIfNeeded
_reset
isPinchToDismissEnabled
setPinchToDismissEnabled:
isPinchToPresentEnabled
setPinchToPresentEnabled:
isPanToDismissEnabled
setPanToDismissEnabled:
previousPinchScale
setPreviousPinchScale:
_rotation
_setRotation:
panGestureRecognizer
pinchGestureRecognizer
rotationGestureRecognizer
recognizers
isWaitingForTransition
setWaitingForTransition:
isWaitingForBoundsChange
setWaitingForBoundsChange:
isWaitingForLocationChangeAfterBoundsChange
setWaitingForLocationChangeAfterBoundsChange:
timestampOfTouchWithLocationChangeAfterBoundsChange
setTimestampOfTouchWithLocationChangeAfterBoundsChange:
hasContinued
setHasContinued:
hasRotated
setHasRotated:
initialInterfaceOrientation
setInitialInterfaceOrientation:
initialCoordinateSpaceBounds
setInitialCoordinateSpaceBounds:
gestureLocationAfterBoundsChange
setGestureLocationAfterBoundsChange:
lastReportedLocationInWindow
setLastReportedLocationInWindow:
anchorLocationInWindow
setAnchorLocationInWindow:
setLastNonZeroVelocityWasDownward:
setTransitionInteraction:
setRotation:
coordinateSpace
lastTouchTimestamp
scale
translationInView:
velocityInView:
convertPoint:fromCoordinateSpace:
removeGestureRecognizer:
addGestureRecognizer:
_setEndsOnSingleTouch:
setMaximumNumberOfTouches:
_allowsUpdatingActiveConnection
_secondScreens
_connections
addConnectionForPlayer:playerLayer:
addConnection:
removeConnection:
connectionPassingTest:
preferredConnection
setPreferredConnection:
addSecondScreen:
removeSecondScreen:
activeConnection
_connectionForPlayer:
_targetScreen
_updateActiveConnection
_insertConnection:atIndex:
secondScreens
connections
allowsUpdatingActiveConnection
setAllowsUpdatingActiveConnection:
insertObject:atIndex:
reverseObjectEnumerator
moveObjectsAtIndexes:toIndex:
indexSetWithIndex:
indexOfObject:
lastObject
object
orderedSet
sharedInstance
_allowsSecondWindowPresentations
_allowsPausingWhenTransitionCompletes
_sourceView
_touchBlockingView
_backgroundView
_transitionContext
_rotatableSecondWindow
_avFullScreenViewController
_presentingTransition
_dismissingTransition
_presentationController
initWithPresentationController:
containerView
presentingView
presentationWindow
rotatableWindowViewController
presentedView
presentedViewController
hasActiveTransition
wasInitiallyInteractive
isDismissing
isPresenting
currentTransition
transitionType
canBeInteractivelyDismissed
presentationFromView
dismissalToView
sourceView
setSourceView:
touchBlockingView
backgroundView
transitionContext
setTransitionContext:
allowsSecondWindowPresentations
setAllowsSecondWindowPresentations:
rotatableSecondWindow
setRotatableSecondWindow:
avFullScreenViewController
presentingTransition
setPresentingTransition:
dismissingTransition
setDismissingTransition:
allowsPausingWhenTransitionCompletes
setAllowsPausingWhenTransitionCompletes:
presentationController
viewForKey:
presentingViewController
_supportedInterfaceOrientationsForWindow:
supportsInteractiveCounterRotationDismissals
presenting
dismissing
rootViewController
_playerControllerCurrentTimeJumpedObserver
_nowPlayingInfoNeedsUpdate
_commandHandlerIdentifier
_keyValueObservationController
_backgroundQueue
_requiresLinearPlayback
_overrideParentApplicationDisplayIdentifier
_playerControllerToActivateAfterDelay
setOverrideParentApplicationDisplayIdentifier:
setRequiresLinearPlayback:
startNowPlayingUpdatesForPlayerController:afterDelay:
stopNowPlayingUpdatesForPlayerController:
_setNowPlayingInfoNeedsUpdate
_updateNowPlayingInfoIfNeeded
_updateNowPlayingInfo:commandsAndStates:
_makeNowPlayingInfo
_makeCommandsAndStatesDictionaryForPlayerController:
_updateRegisteredRemoteCommandEnabledStatesWithCommandsAndStates:
_handleRemoteCommand:options:
_availableLanguageOptions
_currentLanguageOptions
requiresLinearPlayback
overrideParentApplicationDisplayIdentifier
playerControllerToActivateAfterDelay
setPlayerControllerToActivateAfterDelay:
_createMediaRemoteLanguageOptionWithAVMediaSelectionOption:
_createMediaRemoteLanguageOptionGroupWithAVMediaSelectionOptions:
doubleValue
dataValue
firstObject
metadataItemsFromArray:filteredByIdentifier:
stringValue
cancelPreviousPerformRequestsWithTarget:selector:object:
performSelector:withObject:afterDelay:
bundleIdentifier
mainBundle
removeObserver:
numberWithUnsignedInt:
mainQueue
sharedNowPlayingInfoControllerWithCompletion:
_mediaRemoteLanguageOptionCharacteristicsForAVMediaSelectionOption:
_avMediaCharacteristics
_mediaRemoteLanguageOptionCharacteristicForAVMediaCharacteristic:
_gradientOpacity
gradientOpacity
setGradientOpacity:
setCompositingFilter:
filterWithType:
setLocations:
setColors:
CGColor
colorWithWhite:alpha:
_gradientView
gradientView
setGradientView:
connectedScenes
filteredSetUsingPredicate:
avkit_possiblePrimaryWindowScene
_findWindowForControllingOverallAppearanceInWindowScene:
openSessions
persistentIdentifier
avkit_possibleWindowForControllingOverallAppearance
avkit_windowSceneWithSessionIdentifier:
predicateWithBlock:
contextWillHandleUserAction:
skipToNextItem
skipToPreviousItem
_showsSkipItemButtons
_skipToPreviousItemButtonEnabled
_skipToNextItemButtonEnabled
_scrubbing
_behavior
_seekTargetTime
playerViewController:didCollectMetricsEvent:
viewDidLoad
contentViewWillTransitionToSize:withCoordinator:
willStartPictureInPictureWithViewController:
didStopPictureInPicture
makePlaybackContentContainerWithFrame:activeContentView:
initWithAVKitOwner:
willAddBehavior:
didAddBehavior:
willRemoveBehavior:
didRemoveBehavior:
behavior
setBehavior:
setSkipToNextItemButtonEnabled:
setSkipToPreviousItemButtonEnabled:
setShowsSkipItemButtons:
seekTargetTime
_updateSkipItemButtonsEnabled
showsSkipItemButtons
isSkipToPreviousItemButtonEnabled
isSkipToNextItemButtonEnabled
isScrubbing
setScrubbing:
setSeekTargetTime:
avkit_setMusicBehaviorData:
avkit_musicAppBehaviorContext
URLForResource:withExtension:
stringByDeletingPathExtension
checkResourceIsReachableAndReturnError:
imageForResource:size:
URLForMovieResource:
dataWithContentsOfURL:
imageWithData:
pathExtension
length
_TVOutScreen
_window
_windowScene
_screen
_state
_debugInfoDisplay
initWithScene:
connectWithSecondScreenConnection:
setState:
isAvailable
sceneBounds
_updatePreferredDisplayCriteria
_isWindowSceneAvailable
isTVOutScreen
window
setWindow:
windowScene
screen
state
debugInfoDisplay
setDebugInfoDisplay:
refreshRate
videoDynamicRange
setRootViewController:
setWindowScene:
avkit_isEffectivelyFullScreen
viewIfLoaded
isStatusBarHidden
statusBarStyle
setNeedsStatusBarAppearanceUpdate
_effectiveUIClientSettings
whitePointAdaptivityStyle
setNeedsWhitePointAdaptivityStyleUpdate
homeIndicatorAutoHidden
setNeedsUpdateOfHomeIndicatorAutoHidden
avkit_setNeedsUpdatePreferencesIfNeeded
statusBarManager
_disableTouchCancellationOnRotation
instancesRespondToSelector:
avkit_disableTouchCancellation:forRotationActions:
avkit_supportsInteractiveCounterRotationDismissals
_collapsedOrExcluded
_showsLoadingIndicator
_button
_loadingIndicator
initWithTitle:
setShowsLoadingIndicator:
_updateIsHiddenAndAlpha
button
showsLoadingIndicator
loadingIndicator
setLoadingIndicator:
frame
setCenter:
stopAnimating
systemFontOfSize:
titleLabel
setColor:
blackColor
initWithActivityIndicatorStyle:
_clientIdentifier
_sceneIdentifier
initWithSceneIdentifier:clientIdentifier:
clientIdentifier
sceneIdentifier
stringByAppendingString:
_changingVolume
_currentRouteHasVolumeControl
_EUVolumeLimitEnabled
_EUVolumeLimitOverridden
_volumeChangesThrottled
_canOverrideEUVolumeLimit
_fullyInitialized
_EUVolumeLimit
_volume
_targetVolumeInternal
_maximumTargetVolumeSinceChangingVolumeBegan
_volumeCategory
_sharedSystemController
volumeController
setClientWithIdentifier:prefersSystemVolumeHUDHidden:forWindowSceneSessionWithIdentifier:
beginChangingVolumeForWindowSceneSessionID:
endChangingVolume
setTargetVolume:
isChangingVolume
volume
_removeVolumeHUDAssertionsForClientID:
_windowSceneIdentifiersWithVolumeHUDAssertions
setSystemVolumeHUDEnabled:forWindowSceneSessionIdentifier:
setVolume:
_postNotificationForNameIfFullyInitialized:userInfo:
_observeSystemController
_unobserveSystemController
_handleSystemControllerServerDiedNotification
_handleEUVolumeLimitDidChangeNotification:
_handleSystemVolumeDidChangeNotification:
_handleCurrentRouteHasVolumeControlDidChangeNotification:
_applyProposedVolumeIfNeeded
_applyProposedVolumeImmediately
_performOnMainThread:
setChangingVolume:
setCurrentRouteHasVolumeControl:
EUVolumeLimit
setEUVolumeLimit:
isEUVolumeLimitEnabled
setEUVolumeLimitEnabled:
isEUVolumeLimitOverridden
setEUVolumeLimitOverridden:
volumeChangesThrottled
setVolumeChangesThrottled:
canOverrideEUVolumeLimit
setCanOverrideEUVolumeLimit:
targetVolumeInternal
setTargetVolumeInternal:
maximumTargetVolumeSinceChangingVolumeBegan
setMaximumTargetVolumeSinceChangingVolumeBegan:
volumeCategory
sharedSystemController
setSharedSystemController:
isFullyInitialized
setFullyInitialized:
setVolumeTo:forCategory:
addTimer:forMode:
mainRunLoop
timerWithTimeInterval:repeats:block:
userInfo
removeObserver:name:object:
addObserver:selector:name:object:
postNotificationName:object:userInfo:
_setSystemVolumeHUDEnabled:
windowSceneVolumeHUDAssertions
objectsPassingTest:
mutableCopy
allowUserToExceedEUVolumeLimit
getVolume:forCategory:
attributeForKey:
sharedAVSystemController
setLayoutMargins:
setInsetsLayoutMarginsFromSafeArea:
setPreservesSuperviewLayoutMargins:
_needsInitialConstraints
_transportControlsVisibleConstraint
_transportControlsHiddenConstraint
_volumeControlsVisibleConstraint
_volumeControlsHiddenConstraint
_areTransportControlsVisible
_areVolumeControlsVisible
_transportControlsAreaLayoutGuide
_displayModeControlsAreaLayoutGuide
_volumeControlsAreaLayoutGuide
_unobscuredCenterAreaLayoutGuide
_animatedUnobscuredCenterAreaLayoutGuide
_unobscuredTopAreaLayoutGuide
_transportControlsAreaLayoutGuideProvidingView
_displayModeControlsAreaLayoutGuideProvidingView
_volumeControlsAreaLayoutGuideProvidingView
_unobscuredTopAreaLayoutGuideProvidingView
_unobscuredCenterAreaLayoutGuideProvidingView
_animatedUnobscuredCenterAreaLayoutGuideProvidingView
setAreVolumeControlsVisible:
setAreTransportControlsVisible:
updateConstraints
transportControlsAreaLayoutGuide
displayModeControlsAreaLayoutGuide
volumeControlsAreaLayoutGuide
unobscuredCenterAreaLayoutGuide
animatedUnobscuredCenterAreaLayoutGuide
unobscuredTopAreaLayoutGuide
transportControlsAreaLayoutGuideProvidingView
displayModeControlsAreaLayoutGuideProvidingView
volumeControlsAreaLayoutGuideProvidingView
unobscuredTopAreaLayoutGuideProvidingView
unobscuredCenterAreaLayoutGuideProvidingView
animatedUnobscuredCenterAreaLayoutGuideProvidingView
areTransportControlsVisible
areVolumeControlsVisible
constraintEqualToAnchor:
constraintLessThanOrEqualToAnchor:constant:
constraintGreaterThanOrEqualToAnchor:constant:
safeAreaLayoutGuide
constraintEqualToAnchor:constant:
setNeedsUpdateConstraints
requiresConstraintBasedLayout
_customButton
customButton
updateButtonAppearance
setTransform:
setAllowsGroupBlending:
avkit_ancestorViewPassingTest:
isDragging
_isAnimatingScroll
_horizontalVelocity
_verticalVelocity
avkit_hitTestControlForPoint:withEvent:bestSoFar:shortestDistanceSoFar:
isUserInteractionEnabled
subviews
_isInAWindow
avkit_isCompletelyTransparent
avkit_overrideLayoutMarginsForCounterRotation
avkit_isVideoGravityFrozen
avkit_isCounterRotatedForTransition
avkit_isBeingDismissed
avkit_needsUpdateBackdropCaptureViewHidden
avkit_backdropGroupLeader
avkit_isBeingScrollTested
avkit_isBeingScrolled
avkit_isBeingScrolledQuickly
avkit_isInAScrollView
avkit_isAncestorOfViewPassingTest:
avkit_isDescendantOfNonPagingScrollView
avkit_makeSubtreeDisallowGroupBlending
avkit_hasFullScreenLayoutClass
avkit_hitTestControlForPoint:withEvent:
avkit_isInAWindowAndVisible
avkit_wantsAnimatedViewTransitions
avkit_isDescendantOfViewPassingTest:
avkit_largestInscribedRectInBoundingPathWithCenter:aspectRatio:
isPagingEnabled
_isAnimatingScrollTest
isDecelerating
_shouldUseCompactFullScreenSize
_scrubberTimeLabelFont
_scrubberInfoLabelFont
_infoLabelFont
_standardPadding
_standardInteritemPadding
_additionalInlinePaddingForDodgingSafeArea
_volumeSliderInlineWidth
_volumeSliderCompactFullScreenWidth
_volumeSliderRegularFullScreenWidth
_volumeSliderPadding
_minimumProminentPlayButtonDimension
_maximumProminentPlayButtonDimension
_maximumTransportControlsWidth
_maximumMultiRowTransportControlsWidth
_minimumTransportControlsWidth
_minimumScrubberWidth
_playButtonCenterToBottomDistance
_scrubberCenterToScrubInstructionsDistance
_elapsedTimeLabelBaselineToControlsBottomDistance
_elapsedTimeLabelTopToScrubberCenterYDistance
_scrubberCenterYToControlsTopMinimumDistance
_liveBroadcastLabelTopToBackdropTopDistance
_scrubberInstructionsTopToBackdropTopDistance
_scrubberInstructionsMinimumRequiredWidth
_traitCollection
_defaultItemInlineSize
_defaultItemFullScreenSize
_routePickerButtonInlineSize
_routePickerButtonFullScreenSize
initWithTraitCollection:shouldUseCompactFullScreenSize:
playbackControlsViewLayoutMarginsForView:keyboardHeight:isFullScreen:
scrubberInfoLabelFont
scrubberTimeLabelFont
infoLabelFont
_loadFontsIfNeeded
defaultItemInlineSize
defaultItemFullScreenSize
standardPadding
standardInteritemPadding
additionalInlinePaddingForDodgingSafeArea
routePickerButtonInlineSize
routePickerButtonFullScreenSize
volumeSliderInlineWidth
volumeSliderCompactFullScreenWidth
volumeSliderRegularFullScreenWidth
volumeSliderPadding
minimumProminentPlayButtonDimension
maximumProminentPlayButtonDimension
maximumTransportControlsWidth
maximumMultiRowTransportControlsWidth
minimumTransportControlsWidth
minimumScrubberWidth
playButtonCenterToBottomDistance
scrubberCenterToScrubInstructionsDistance
elapsedTimeLabelBaselineToControlsBottomDistance
elapsedTimeLabelTopToScrubberCenterYDistance
scrubberCenterYToControlsTopMinimumDistance
liveBroadcastLabelTopToBackdropTopDistance
scrubberInstructionsTopToBackdropTopDistance
scrubberInstructionsMinimumRequiredWidth
shouldUseCompactFullScreenSize
setShouldUseCompactFullScreenSize:
traitCollection
setTraitCollection:
fontWithDescriptor:size:
fontDescriptorByAddingAttributes:
fontDescriptor
monospacedDigitSystemFontOfSize:weight:
pointSize
preferredFontForTextStyle:compatibleWithTraitCollection:
_peripheryInsets
_classicMode
_isClassic
displayCornerRadius
statusBarFrame
safeAreaInsets
_playerShouldAutoplay
_hasClientSetVideoGravity
_canShowPictureInPictureButton
_pixelBufferAttributes
_pictureInPictureController
_mediaSelectionPopoverPresentationController
_transitionController
_playbackControlsVisibilityController
_playbackControlsController
_playerViewControllerView
_overrideLayoutMarginsWhenEmbeddedInline
_overrideTransformForProminentPlayButton
_canToggleVideoGravityWhenEmbeddedInline
_playbackControlsShouldControlSystemVolume
_readyForDisplay
_entersFullScreenWhenPlaybackBegins
_exitsFullScreenWhenPlaybackEnds
_shouldUseNetworkingResourcesForLiveStreamingWhilePaused
__hasBegunObservation
_hasPerformedInitialSetup
_wasInitializedUsingWebKitSPI
_requiresImmediateAssetInspection
_showsTimecodes
_playbackControlsIncludeVolumeControls
_canIncludePlaybackControlsWhenInline
_pictureInPictureActive
__targetVideoGravitiesForLayoutClass
__actualContentOverlayView
__defaultPlaybackRateStorage
_finishPreparingForInteractiveDismissalHandler
_interactiveDismissalCompletionHandler
__observationController
__behaviorStorage
__numberOfTrackedUserInteractions
_hoverGestureRecognizer
__localizedDiscoverabilityTitleForKeyCommandLocalizationKey
_overrideRouteSharingPolicy
_volumeAnimator
_overrideRoutingContextUID
_customControlItems
_secondScreenConnectionDisplaySize
_videoBounds
contentOverlayViewDidAddOrRemoveSubview:
avkit_makePlayerControllerIfNeeded:
avkit_pictureInPictureViewController
avkit_startRoutingVideoToPictureInPictureViewController:
avkit_stopRoutingVideoToPictureInPictureViewController:
avkit_videoRectInWindow
avkit_isVisible
avkit_window
transitionController:willBeginPresentingViewController:
transitionController:willBeginDismissingViewController:
transitionController:targetViewForDismissingViewController:
transitionController:gestureRecognizer:shouldReceiveTouch:
transitionControllerPresentedViewBackgroundColor:
transitionControllerBackgroundViewBackgroundColor:
transitionControllerCanBeginInteractiveDismissalTransition:
transitionControllerCanBeginInteractivePresentationTransition:
transitionControllerBeginInteractivePresentationTransition:
transitionControllerBeginInteractiveDismissalTransition:
transitionController:prepareForFinishingInteractiveTransition:
transitionController:transitionWillComplete:
transitionController:animationProgressDidChange:
fullScreenViewControllerWillBeginFullScreenPresentation:
fullScreenViewControllerWillEndFullScreenPresentation:
viewForFullScreenViewController:
playbackContainerViewForFullScreenViewController:
fullScreenViewController:viewWillTransitionToSize:coordinator:
prefersStatusBarHiddenForFullScreenViewController:
preferredStatusStyleForFullScreenViewController:
keyCommandResponderForFullScreenViewController:
preferredInterfaceOrientationForPresentation
supportedInterfaceOrientations
shouldAutorotate
playbackControlsVisibilityController:updateStatusBarAppearanceUsingAnimator:
playbackControlsVisibilityController:animateAlongsideVisibilityAnimationsWithAnimationCoordinator:appearingViews:disappearingViews:
prepareForPopoverPresentation:
popoverPresentationControllerShouldDismissPopover:
popoverPresentationControllerDidDismissPopover:
popoverPresentationController:willRepositionPopoverToRect:inView:
adaptivePresentationStyleForPresentationController:
adaptivePresentationStyleForPresentationController:traitCollection:
presentationController:viewControllerForAdaptivePresentationStyle:
presentationController:willPresentWithAdaptiveStyle:transitionCoordinator:
presentationControllerShouldDismiss:
presentationControllerWillDismiss:
presentationControllerDidDismiss:
presentationControllerDidAttemptToDismiss:
pictureInPictureControllerWillStartPictureInPicture:
pictureInPictureControllerDidStartPictureInPicture:
pictureInPictureController:failedToStartPictureInPictureWithError:
pictureInPictureControllerWillStopPictureInPicture:
pictureInPictureControllerDidStopPictureInPicture:
pictureInPictureController:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:
initWithNibName:bundle:
initWithCoder:
encodeWithCoder:
setRequiresImmediateAssetInspection:
setCanIncludePlaybackControlsWhenInline:
_targetVideoGravitiesForLayoutClass
updateVideoBounds
videoDisplayScale
setShowsTimecodes:
interactiveContentOverlayView
customControlsView
hasCustomPlaybackControls
canControlPlayback
canHidePlaybackControls
setCanHidePlaybackControls:
_inlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused
_setInlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused:
playbackControlsIncludeTransportControls
setPlaybackControlsIncludeTransportControls:
playbackControlsIncludeDisplayModeControls
setPlaybackControlsIncludeDisplayModeControls:
playbackControlsIncludeVolumeControlsControls
setPlaybackControlsIncludeVolumeControls:
volumeControlsCanShowSlider
setVolumeControlsCanShowSlider:
setEntersFullScreenWhenPlaybackBegins:
flashPlaybackControlsWithDuration:
setShouldUseNetworkingResourcesForLiveStreamingWhilePaused:
setCustomControlItems:
setDefaultPlaybackRate:
defaultPlaybackRate
_activeViewControllerForContentView
viewControllerForFullScreenPresentation
_ensureBehaviorStorage
loadView
performInitialSetupIfNeededAndPossible
performInitialSetup
viewWillAppear:
viewDidAppear:
viewDidDisappear:
viewDidMoveToWindow:shouldAppearOrDisappear:
didMoveToParentViewController:
viewWillTransitionToSize:withTransitionCoordinator:
preferredWhitePointAdaptivityStyle
modalPresentationCapturesStatusBarAppearance
prefersStatusBarHidden
preferredStatusBarStyle
prefersHomeIndicatorAutoHidden
transitioningDelegate
_preferredModalPresentationStyle
_requiresCustomPresentationController
_presentationControllerForPresentedController:presentingController:sourceController:
canBecomeFirstResponder
keyCommands
_handleExitFullScreenKeyCommand:
_handlePlayPauseKeyCommand:
_handleSkipBack15SecondsKeyCommand:
_handleSkipAhead15SecondsKeyCommand:
_handleShowNextFrameKeyCommand:
_handleGoToBeginningKeyCommand:
_handleShowPreviousFrameKeyCommand:
_handleVolumeUpKeyPressedCommand:
_handleVolumeUpKeyReleasedCommand:
_handleVolumeDownKeyPressedCommand:
_handleVolumeDownKeyReleasedCommand:
_handleRewindKeyPressedCommand:
_handleRewindKeyReleasedCommand:
_handleFastForwardKeyPressedCommand:
_handleFastForwardKeyReleasedCommand:
_addObservers
_isUnsupportedContent
_updateUnsupportedContentIndicatorView
_isAudioOnlyContent
_updateAudioOnlyIndicatorView
_updateExternalPlaybackIndicatorView
_updatePlaybackControlsController
_shouldShowPictureInPictureButton
_handleDoubleTapGesture:
_handleSingleTapGesture:
_handleDoubleDoubleTapGesture:
_handleUserInteractionObservationRecognizer:
_beginTrackingUserInteraction
_endTrackingUserInteraction
_isTrackingUserInteraction
_isTrackingUserInteractionWithInteractiveView
_togglePictureInPicture
_mediaSelectionDoneButtonTapped:
_notifyOfMetricsCollectionEvent:
_delegateRespondsTo:
_contentViewWillTransitionToSize:withTransitionCoordinator:
_handleHoverGestureRecognizer:
_loadObservationControllerIfNeeded
_updateContentOverlayViewSuperview
showFullScreenPresentationFromView:completion:
enterFullScreenWithCompletion:
exitFullScreenWithCompletion:
fullScreenViewController
_transitionControllerIfLoaded
_avkitPreferredTransitioningDelegate
_isDescendantOfRootViewController
_transitionFromFullScreenWithReason:animated:completionHandler:
_canEnterFullScreen
_transitionToFullScreenAnimated:interactive:completionHandler:
_transitionFromFullScreenAnimated:completionHandler:
_transitionFromFullScreenAnimated:interactive:completionHandler:
_isTransitioningToOrFromFullScreen
_modalPresentationStyleIsFullScreen
setReadyForDisplay:
setVideoBounds:
entersFullScreenWhenPlaybackBegins
exitsFullScreenWhenPlaybackEnds
setExitsFullScreenWhenPlaybackEnds:
_actualContentOverlayView
_defaultPlaybackRateStorage
set_defaultPlaybackRateStorage:
shouldUseNetworkingResourcesForLiveStreamingWhilePaused
finishPreparingForInteractiveDismissalHandler
setFinishPreparingForInteractiveDismissalHandler:
interactiveDismissalCompletionHandler
setInteractiveDismissalCompletionHandler:
_behaviorStorage
_hasBegunObservation
set_hasBegunObservation:
_numberOfTrackedUserInteractions
_setNumberOfTrackedUserInteractions:
hoverGestureRecognizer
setHoverGestureRecognizer:
_localizedDiscoverabilityTitleForKeyCommandLocalizationKey
overrideRouteSharingPolicy
setOverrideRouteSharingPolicy:
secondScreenConnectionDisplaySize
setSecondScreenConnectionDisplaySize:
volumeAnimator
setVolumeAnimator:
hasPerformedInitialSetup
setHasPerformedInitialSetup:
wasInitializedUsingWebKitSPI
setWasInitializedUsingWebKitSPI:
overrideRoutingContextUID
setOverrideRoutingContextUID:
requiresImmediateAssetInspection
showsTimecodes
playbackControlsIncludeVolumeControls
customControlItems
canIncludePlaybackControlsWhenInline
isPictureInPictureActive
contentView
playbackControlsController
playerViewController:willTransitionToVisibilityOfPlaybackControls:withAnimationCoordinator:
animateAlongsideTransition:completion:
transitionCoordinator
playbackControlsVisibilityController
playerViewController:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:
animateWithDuration:animations:
playerViewControllerDidStopPictureInPicture:
playerViewControllerWillStopPictureInPicture:
playerViewController:failedToStartPictureInPictureWithError:
endBackgroundTask:
isPresentingFullScreenFromInline
playerViewControllerShouldAutomaticallyDismissAtPictureInPictureStart:
playerViewControllerDidStartPictureInPicture:
beginBackgroundTaskWithExpirationHandler:
playerViewControllerWillStartPictureInPicture:
dismissViewControllerAnimated:completion:
loadViewIfNeeded
entersFullScreenWhenTapped
numberOfTapsRequired
modalPresentationStyle
presentationContext
parentViewController
playerViewController:shouldExitFullScreenWithReason:
playerViewController:targetViewForDismissalAnimationWithProposedTargetView:
playerViewController:willEndFullScreenPresentationWithAnimationCoordinator:
pause
isCancelled
isInteractive
playerViewControllerShouldMuteVolumeForFullScreenDismissalTransition:
playerViewController:willBeginFullScreenPresentationWithAnimationCoordinator:
attemptRotationToDeviceOrientation
isPresentedFullScreen
setTransitioningDelegate:
setModalPresentationStyle:
exitFullScreenAnimated:completionHandler:
enterFullScreenAnimated:completionHandler:
playerViewController:contentViewWillTransitionToSize:withTransitionCoordinator:
playerViewController:metricsCollectionEventOccured:
stopPictureInPicture
isPictureInPicturePossible
canToggleVideoGravityWhenEmbeddedInline
canShowPictureInPictureButton
setNumberOfTouchesRequired:
setNumberOfTapsRequired:
playerViewControllerShouldStartPictureInPictureFromInlineWhenEnteringBackground:
session
togglePlayback:
doneButtonTapped:
keyCommandWithInput:modifierFlags:action:upAction:discoverabilityTitle:
setDiscoverabilityTitle:
keyCommandWithInput:modifierFlags:action:
isNavigationBarHidden
navigationController
requireGestureRecognizerToFail:
setAutoresizingMask:
_viewControllerForFullScreenPresentationFromView:
convertRect:toView:
raise:format:
dispatchQueue
encodeInteger:forKey:
encodeBool:forKey:
decodeIntegerForKey:
decodeBoolForKey:
playerWithURL:
decodeObjectForKey:
containsValueForKey:
keyPathsForValuesAffectingVideoGravity
iAdPrerollView
setPlaybackControlsShouldControlSystemVolume:
needsLayout
isPictureInPictureSuspended
pictureInPictureWasStartedWhenEnteringBackground
initWithPlayerLayerView:
showsExitFullScreenButton
setShowsExitFullScreenButton:
playbackControlsShouldControlSystemVolume
setWebKitOverrideRouteSharingPolicy:routingContextUID:
keyPathsForValuesAffectingPictureInPicturePossible
keyPathsForValuesAffectingPictureInPictureActive
keyPathsForValuesAffectingPictureInPictureSuspended
keyPathsForValuesAffectingPictureInPictureWasStartedWhenEnteringBackground
setOverrideTransformForProminentPlayButton:
setOverrideLayoutMarginsWhenEmbeddedInline:
overrideTransformForProminentPlayButton
overrideLayoutMarginsWhenEmbeddedInline
setCanToggleVideoGravityWhenEmbeddedInline:
setCanShowPictureInPictureButton:
activeContentViewDidChange
popoverPresentationController
setPermittedArrowDirections:
setSourceRect:
_setIgnoreAppSupportedOrientations:
_ignoreAppSupportedOrientations
presentViewController:animated:completion:
videoGravityButtonTapped:
mediaSelectionButtonTapped:
fullScreenButtonTapped:
pictureInPictureButtonTapped:
toggleMuted:
prepareForFinishingInteractiveTransition:
enterAutoplayPhase
exitAutoplayPhase
flashAutoplayControls
setEntersFullScreenWhenTapped:
_editing
_parameters
_zoomingBehavior
_editView
_imageGenerator
_playerTimeObserver
_containerView
_toolbar
_cancelButton
_doneButton
_flexibleSpaceItem
_playButton
_pauseButton
_pendingImageRequests
_requestedImageTimeToCMTimeMap
_currentRotation
_rotationTransform
editViewDidBeginScrubbing:
editViewDidEndScrubbing:
editView:currentTimeDidChange:
editView:trimStartTimeDidChange:
editView:trimEndTimeDidChange:
editViewWillBeginRequestingThumbnails:
editViewDidFinishRequestingThumbnails:
editViewDuration:
editViewThumbnailAspectRatio:
editView:requestThumbnailImageForTimestamp:
startEditing
endEditing
rotateClockwise
videoCompostitionRotatingAsset:
cancel:
play:
pause:
done:
_generateThumbnails
_makeBarButtonItems
isEditing
setEditing:
rotationTransform
setRotationTransform:
parameters
zoomingBehavior
setZoomingBehavior:
setObservationController:
editView
setEditView:
imageGenerator
setImageGenerator:
playerTimeObserver
setPlayerTimeObserver:
setContainerView:
toolbar
setToolbar:
cancelButton
setCancelButton:
doneButton
setDoneButton:
flexibleSpaceItem
setFlexibleSpaceItem:
playButton
setPlayButton:
pauseButton
setPauseButton:
pendingImageRequests
requestedImageTimeToCMTimeMap
currentRotation
setCurrentRotation:
items
systemWhiteColor
initWithBarButtonSystemItem:target:action:
generateCGImagesAsynchronouslyForTimes:completionHandler:
valueWithCMTime:
cancelAllCGImageGeneration
seekToTime:toleranceBefore:toleranceAfter:completionHandler:
avkit_setCurrentEditBehaviorContext:
actionWithTitle:style:handler:
addAction:
editBehaviorAlertActionsForDoneButtonTap:
setBarButtonItem:
alertControllerWithTitle:message:preferredStyle:
editBehaviorDidCancel:
setRenderSize:
setInstructions:
videoCompositionWithPropertiesOfAsset:
setLayerInstructions:
setTimeRange:
videoCompositionInstruction
setTransform:atTime:
setTrackID:
trackID
videoCompositionLayerInstruction
preferredTransform
naturalSize
tracksWithMediaType:
setVideoComposition:
asset
removeTimeObserver:
setItems:
setAxis:
setBarStyle:
setMaximumSize:
setAppliesPreferredTrackTransform:
assetImageGeneratorWithAsset:
addPeriodicTimeObserverForInterval:queue:usingBlock:
avkit_currentEditBehaviorContext
_associatedFullScreenViewController
_sourceFullScreenViewController
_contentView
targetForAction:withSender:
viewWillMoveToWindow:
attachContentView
associatedFullScreenViewController
setAssociatedFullScreenViewController:
sourceFullScreenViewController
setSourceFullScreenViewController:
setContentView:
_shouldShowAlternateActionButtonImage
willAnimatePictureInPictureStart
didAnimatePictureInPictureStart
willAnimatePictureInPictureStop
didAnimatePictureInPictureStop
viewWillResize
viewDidResize
actionButtonTapped
shouldShowAlternateActionButtonImage
shouldShowLoadingIndicator
initWithPictureInPicturePlayerLayerView:
setShouldShowAlternateActionButtonImage:
keyPathsForValuesAffectingShouldShowLoadingIndicator
_imageView
_titleLabel
_subtitleLabel
_textLabelsContainer
setTitleString:subtitleString:
setSpacing:
size
constraintEqualToAnchor:multiplier:
addObjectsFromArray:
setNumberOfLines:
setContentMode:
initWithImage:
imageNamed:inBundle:
setBaselineRelativeArrangement:
setAlignment:
setTextColor:
setTextAlignment:
setLineBreakMode:
mutableCopyWithZone:
classForCoder
_timing
anchorValue
anchorTimeStamp
encodeDouble:forKey:
initWithAnchorValue:anchorTimeStamp:rate:
decodeDoubleForKey:
initWithValueTiming:
allocWithZone:
setAnchorValue:
setAnchorTimeStamp:
_value
_timeStamp
isEqualToValueTiming:
valueTimingWithAnchorValue:anchorTimeStamp:rate:
processInfo
systemUptime
currentTimeStamp
valueForTimeStamp:
currentValue
timeStampForValue:
setValueTiming:
_scene
_debugText
_secondScreenViewController
setScene:
setDebugText:
setSecondScreenViewController:
_currentEnabledVideoTrack
_currentDisplay
_currentVideoDynamicRange
_updateDebugLabelText
_actuallyUpdateDebugLabelTextWithCurrentResolution:currentVideoDynamicRange:
scene
debugText
secondScreenViewController
componentsJoinedByString:
nativeBounds
matchContent
preferredHdrMode
preferences
height
width
hdrMode
currentMode
loadValuesAsynchronouslyForKeys:completionHandler:
statusOfValueForKey:error:
assetTrack
formatDescriptions
_displayID
uniqueId
displays
tracks
hasPrefix:
_context
_presentationWindowForDisablingAutorotation
initWithPresentedViewController:presentingViewController:
shouldRemovePresentersView
shouldPresentInFullscreen
containerViewWillLayoutSubviews
presentationTransitionWillBegin
presentationTransitionDidEnd:
_ensureOrientation:enablingMixedOrientations:
dismissalTransitionWillBegin
_prepareDismissingTransitionContext
dismissalTransitionDidEnd:
_observeSceneDidBecomeActiveForRestoringRotatability
context
presentationWindowForDisablingAutorotation
setPresentationWindowForDisablingAutorotation:
endDisablingInterfaceAutorotation
beginDisablingInterfaceAutorotation
performWithoutAnimation:
_setViewDelegateContentOverlayInsetsAreClean:
setWindowLevel:
windowLevel
presented
_unfairLock
_proxyObserversByTokens
_notificationObservers
_notificationCenters
_owner
initWithOwner:
startObserving:keyPaths:includeInitialValue:includeChanges:observationHandler:
startObserving:keyPath:includeInitialValue:observationHandler:
startObserving:keyPaths:observationHandler:
startObserving:keyPath:observationHandler:
startObserving:keyPaths:includeInitialValue:observationHandler:
startObservingNotificationForName:object:notificationCenter:observationHandler:
stopObserving:
stopAllObservation
_stopAllObservation
stopObserving
allValues
removeObjectForKey:
initWithName:object:userInfo:
name
token
startObserving:completion:
initWithObservedObject:observer:keyPaths:retainingObservedObject:includeInitialValue:includeChanges:changesBlock:
initWithValue:oldValue:keyPath:observationToken:
_oldValue
_keyPath
_observationToken
value
oldValue
keyPath
observationToken
null
_retainedObservedObject
_unsafeUnretainedObservedObject
_canHandleChanges
_includeInitialValue
_includeChanges
_token
_keyPaths
_changesBlock
observeValueForKeyPath:ofObject:change:context:
_handleValueChangeForKeyPath:ofObject:oldValue:newValue:context:
includeInitialValue
includeChanges
keyPaths
changesBlock
removeObserver:forKeyPath:context:
valueForKeyPath:
addObserver:forKeyPath:options:context:
globallyUniqueString
_playbackControlsIncludeTransportControls
_playbackControlsIncludeDisplayModeControls
_zoomingEnabled
_microphoneEnabled
_livePreviewActive
_playbackControlsShowsLoadingIndicator
_livePreviewContainerView
_livePreviewPlayerController
_playerControllerToRestore
_livePreviewAspectRatio
beginScrubbing
scrubToTime:resolution:
endScrubbing
setZoomingEnabled:
setLivePreviewActive:
setMicrophoneEnabled:
setLivePreviewAspectRatio:
setBackgroundColor:forContainerOfControlItem:
_updatePlaybackControlsControllerAndZoomingBehavior
isZoomingEnabled
isMicrophoneEnabled
livePreviewContainerView
isLivePreviewActive
livePreviewAspectRatio
livePreviewPlayerController
setLivePreviewPlayerController:
playerControllerToRestore
setPlayerControllerToRestore:
playbackControlsShowsLoadingIndicator
setPlaybackControlsShowsLoadingIndicator:
_playingOnSecondScreen
_canShowStatusBarBackgroundGradientWhenStatusBarVisible
_observingStatusBarHidden
_contentOverlayViewSubview
_statusBarBackgroundGradientView
_videoContentFrame
initWithFrame:activeContentView:
setVideoGravity:removingAllSubayerTransformAnimations:
activeContentView
canShowStatusBarBackgroundGradientWhenStatusBarVisible
setCanShowStatusBarBackgroundGradientWhenStatusBarVisible:
videoContentFrame
setVideoContentFrame:
isPlayingOnSecondScreen
setPlayingOnSecondScreen:
initWithFrame:playerLayerView:contentOverlayView:
setContentOverlayViewSubview:
removeAllSublayerTransformAnimations
didMoveToSuperview
_updateStatusBarBackgroundGradientViewAlpha
_frameForStatusBarBackgroundGradientView
_resolvedContentFrame
contentOverlayViewSubview
statusBarBackgroundGradientView
isObservingStatusBarHidden
setObservingStatusBarHidden:
avkit_removeAllSublayerTransformAnimations
animationKeys
sublayers
animationForKey:
containsString:
removeAnimationForKey:
_fullScreen
_activeContentView
_lastKnownWindow
_contentAspectRatio
_previousBounds
setLastKnownWindow:
setContentAspectRatio:
zoomToPoint:
scrollView:contentSizeForZoomScale:withProposedSize:
setFrame:
willMoveToWindow:
_contentSizeForScale:
_contentRectForScale:
_updateMinMaxZoomScales
_updateMinMaxZoomScales:
_contentInsets
contentAspectRatio
isFullScreen
setFullScreen:
previousBounds
setPreviousBounds:
lastKnownWindow
zoomScale
setZoomScale:
setMaximumZoomScale:
maximumZoomScale
setMinimumZoomScale:
minimumZoomScale
setContentInset:
contentInset
setScrollEnabled:
setBouncesVertically:
setBouncesHorizontally:
setAlwaysBounceHorizontal:
setAlwaysBounceVertical:
zoomToRect:animated:
setContentSize:
setDecelerationRate:
setShowsHorizontalScrollIndicator:
setShowsVerticalScrollIndicator:
setBouncesZoom:
setContentInsetAdjustmentBehavior:
_prefersThumbVisible
_trimming
_dataSource
_movieScrubber
movieScrubber:valueDidChange:
movieScrubber:editingStartValueDidChange:
movieScrubber:editingEndValueDidChange:
movieScrubberDidBeginScrubbing:withHandle:
movieScrubberDidEndScrubbing:withHandle:
movieScrubber:widthDelta:originXDelta:
movieScrubberWillBeginRequestingThumbnails:
movieScrubberDidFinishRequestingThumbnails:
movieScrubberWillBeginEditing:
movieScrubberDidBeginEditing:
movieScrubberDidCancelEditing:
movieScrubberEditingAnimationFinished:
movieScrubber:willZoomToMinimumValue:maximumValue:
movieScrubberDidBeginAnimatingZoom:
movieScrubberDidEndAnimatingZoom:
movieScrubber:requestThumbnailImageForTimestamp:isSummaryThumbnail:
movieScrubberDuration:
movieScrubber:evenlySpacedTimestamps:startingAt:endingAt:
movieScrubberThumbnailAspectRatio:
movieScrubber:requestThumbnailImageForTimestamp:
trimStartTime
trimEndTime
reloadData
userObservationGestureRecognizerFired:
setThumbnailImage:forTimestamp:
setDataSource:
setPrefersThumbVisible:
setTrimming:
setCurrentTime:
dataSource
prefersThumbVisible
isTrimming
movieScrubber
setMovieScrubber:
setThumbIsVisible:
setEditable:
setEdgeInset:
trimEndValue
trimStartValue
_transitionInteractive
_transitionState
_transitionDirection
_transitionProgress
_contentTransitioningDelegate
_incomingContentView
_targetContentOffset
_stateDescription
_boundsOrContentSizeAdjustmentCount
_frameForActiveContentView
_frameForTransitioningContentView
_setTransitionState:transitionDirection:transitionProgress:
performTransition:
_updateTransitionStateIfPossible
_performBoundsOrContentSizeAdjustment:
_isAdjustingBoundsOrContentSize
_updateSizeAndContentFrame
_ensureContentViews
_frameExcludingActiveContent
_frameExcludingTransitioningContent
_canTransitionFromState:toState:
setStateDescription:
_descriptionForState:
_makeStateDescription
transitionState
transitionDirection
transitionProgress
contentTransitioningDelegate
setContentTransitioningDelegate:
incomingContentView
isTransitionInteractive
setTransitionInteractive:
targetContentOffset
setTargetContentOffset:
stateDescription
frameForActiveContentView
setFrameForActiveContentView:
frameForTransitioningContentView
setFrameForTransitioningContentView:
boundsOrContentSizeAdjustmentCount
setBoundsOrContentSizeAdjustmentCount:
_interpageSpacing
numberWithLong:
numberWithInteger:
_isHorizontalBouncing
setContentOffset:animated:
valueWithCGPoint:
CGPointValue
setDirectionalLockEnabled:
_setInterpageSpacing:
setPagingEnabled:
_selectedAudioMediaSelectionOption
_selectedLegibleMediaSelectionOption
initWithStyle:
playerControllerMediaSelectionChanged:
_isSelectedOrCurrentAudioMediaSelectionOption:
_isSelectedOrCurrentLegibleMediaSelectionOption:
tableView:numberOfRowsInSection:
tableView:cellForRowAtIndexPath:
numberOfSectionsInTableView:
tableView:titleForHeaderInSection:
tableView:willDisplayHeaderView:forSection:
tableView:didSelectRowAtIndexPath:
deselectRowAtIndexPath:animated:
setAccessoryType:
indexPathForCell:
visibleCells
section
representedObject
cellForRowAtIndexPath:
textLabel
setRepresentedObject:
setBackgroundView:
dequeueReusableCellWithIdentifier:forIndexPath:
tableView
flashScrollIndicators
notifyWhenInteractionChangesUsingBlock:
initiallyInteractive
indexPathsForSelectedRows
numberOfSections
setEstimatedRowHeight:
lineHeight
preferredFontForTextStyle:
setSeparatorColor:
registerClass:forCellReuseIdentifier:
_representedObject
configureLayerView:
contentConfig
configWithContentConfig:
layerWithFillColor:opacity:filterType:
initWithEffect:
effectCombiningEffects:
effectWithBlurRadius:
colorEffectSaturate:
_mediaSelectionTableViewController
initWithPlayerController:doneButtonTarget:doneButtonAction:
mediaSelectionTableViewController
setOverrideUserInterfaceStyle:
navigationBar
setModalPresentationCapturesStatusBarAppearance:
setRightBarButtonItem:
navigationItem
initWithRootViewController:
systemGrayColor
AV_indicatorBackgroundColor
AV_indicatorForegroundColor
_pictureInPicturePossible
_pictureInPictureSuspended
_otherPictureInPictureActive
_wantsImmediateAssetInspection
_retainsSourceDuringPictureInPicturePlayback
_allowsPictureInPictureFromInlineWhenEnteringBackground
_pictureInPictureWasStartedWhenEnteringBackground
_platformAdapter
_sourceIfRetainedDuringPictureInPicturePlayback
pictureInPicturePlatformAdapter:failedToStartError:
pictureInPicturePlatformAdapter:prepareToStopForRestoringUserInterface:
pictureInPicturePlatformAdapterPrepareToStopForDismissal:
pictureInPicturePlatformAdapter:stopPictureInPictureAndRestoreUserInterface:
pictureInPicturePlatformAdapter:handlePlaybackCommand:
pictureInPicturePlatformAdapter:statusDidChange:fromStatus:
initWithPlayerLayer:
_commonInitWithSource:
stopPictureInPictureEvenWhenInBackground
invalidate
contentSourceVideoRectInWindowChanged
setAllowsPictureInPictureFromInlineWhenEnteringBackground:
setPictureInPictureActive:
setPictureInPicturePossible:
_delegateIfRespondsToSelector:
_stopPictureInPictureAndRestoreUserInterface:
setPictureInPictureSuspended:
platformAdapter
sourceIfRetainedDuringPictureInPicturePlayback
setSourceIfRetainedDuringPictureInPicturePlayback:
isOtherPictureInPictureActive
setOtherPictureInPictureActive:
wantsImmediateAssetInspection
setWantsImmediateAssetInspection:
retainsSourceDuringPictureInPicturePlayback
setRetainsSourceDuringPictureInPicturePlayback:
allowsPictureInPictureFromInlineWhenEnteringBackground
setPictureInPictureWasStartedWhenEnteringBackground:
pictureInPictureButtonStartImageCompatibleWithTraitCollection:
pictureInPictureButtonStopImageCompatibleWithTraitCollection:
pictureInPictureButtonStartImage
pictureInPictureButtonStopImage
_type
_action
_tintColor
initWithTitle:type:
setTitle:
setImage:
setTintColor:
_updateTintColor
setAccessibilityLabel:
setAccessibilityAttributedLabel:
setAccessibilityHint:
setAccessibilityAttributedHint:
_buttonTouchUpInside:
_updateButton
type
action
setAction:
tintColor
_label
_loadingIndicatorAlignment
_text
_font
_loadingIndicatorLeftAlignmentConstraint
_loadingIndicatorRightAlignmentConstraint
label
labelIfLoaded
setFont:
setLoadingIndicatorAlignment:
setText:
tintColorDidChange
viewForFirstBaselineLayout
viewForLastBaselineLayout
loadingIndicatorAlignment
text
font
loadingIndicatorLeftAlignmentConstraint
setLoadingIndicatorLeftAlignmentConstraint:
loadingIndicatorRightAlignmentConstraint
setLoadingIndicatorRightAlignmentConstraint:
translatesAutoresizingMaskIntoConstraints
_needsInitialLayout
initWithFrame:contentView:
beginManagingContentView
needsInitialLayout
setNeedsInitialLayout:
_mediaControls
_clientCompletionHandler
willBeginPlaybackWithCompletionHandler:
willBeginPlaybackFromAppWithBundleID:completionHandler:
_invokeClientCompletionHandlerWithPlaybackState:
externalPlaybackStateDescriptionForState:
present
setDismissHandlerWithReason:
deviceType
outputDevices
outputContextForID:
routingContextUID
startPrewarming
initWithConfiguration:
setStyle:
likelyExternalDestinations
providesExternalVideoPlayback
destination
prefersLikelyDestinationsOverCurrentRoutingSession
currentRoutingSession
longFormVideoRoutingSessionManager
hasRouteSharingPolicyLongFormVideo:
_tc_flags
_frameNumber
_formatDescription
_timecodeStruct
_frameDuration
timecodeStruct
setTimecodeStruct:
frameNumber
setFrameNumber:
frameDuration
setFrameDuration:
tc_flags
setTc_flags:
formatDescription
setFormatDescription:
_frameCount
_videoTrack
_timecodeTrack
_timecodes
_maxTimecode
_maxFrameNumber
_timeObserver
_observationInterval
initWithTimecodeTrack:videoTrack:
calculateMaxFrameAndTimecode
maxTimecodeString
maxFrameCountString
calculateFrameNumberAtCMTime:
calculateTimecodeAtFrame:
timecodeForFrameNumber32UsingFormatDescription:timecodeStartFrame:
timecodeForFrameNumber64UsingCachedDescription:
timecodeForOffset:from:timecode:
calculateFrameNumberAtTimeInterval:
timeIntervalForFrameNumber:
cacheTimecodeDescriptionForSampleBuffer:
validateCMTime:
readTimecodes
timecodeAvailable
timecodeTrack
setTimecodeTrack:
observationInterval
copyNextSampleBuffer
startReading
addOutput:
assetReaderTrackOutputWithTrack:outputSettings:
initWithAsset:error:
naturalTimeScale
minFrameDuration
timeRange
setStatus:
_updateStatus
_updateStatusUsingProposedStatus:
setScale:
_forceLowQualityEffect
_customBackgroundColor
_groupLeader
_dependents
_activeBackdropEffect
updateActiveBackdropEffectIfGroupLeader
isCaptureOnly
setCaptureOnly:
setCustomBackgroundColor:
setGroupLeader:
updateGroupLeader
addDependent:
removeDependent:
_updateFilters
_ensureDependents
_enumerateDependents:
forceLowQualityEffect
setForceLowQualityEffect:
customBackgroundColor
groupLeader
dependents
activeBackdropEffect
setActiveBackdropEffect:
filters
reducedTransparencyColor
averageFilter
colorMatrixFilter
blurFilter
setFilters:
setGroupName:
groupName
captureOnly
colorWithRed:green:blue:alpha:
setValue:forKey:
valueWithCAColorMatrix:
_getAirPlayStatusQueue
_activeTintColor
_routePickerButton
_oldSize
_buttonHighlightAnimator
_airPlayActive
_prioritizesVideoDevices
_routePickerButtonMicaPackage
_routePickingControls
_routePickerButtonStyle
activeTintColor
setActiveTintColor:
isAirPlayActive
setAirPlayActive:
setCustomButton:
prioritizesVideoDevices
setPrioritizesVideoDevices:
_createOrUpdateRoutePickerButton
_routePickerButtonTapped:
_routePickerButtonTouchDown:
_routePickerButtonTouchDragEnter:
_routePickerButtonTouchUp:
_setRoutePickerButtonAlpha:animated:
_registerNotifications
_updateAirPlayActive
_isAirPlayActive
_defaultActiveTintColor
_normalizedRectInWindow
routePickerButtonStyle
setRoutePickerButtonStyle:
setDismissHandler:
routePickerViewDidEndPresentingRoutes:
setSortByIsVideoRoute:
configuration
initWithRouteSharingPolicy:routingContextUID:
overrideRouteSharingPolicyForRoutePickerView:
overrideRoutingContextUIDForRoutePickerView:
routePickerViewWillBeginPresentingRoutes:
addSublayer:
setContentVerticalAlignment:
setContentHorizontalAlignment:
setContentEdgeInsets:
buttonWithType:
getRed:green:blue:alpha:
commit
setPosition:
setDisableActions:
begin
_attributedText
_imageSize
_languageAwareOutsets
_lineHeight
_baselineOffset
_textLayer
_imageLayer
initWithDisplayScale:placeholderImage:opaque:
layoutSublayers
textBoundingRectWhenDrawnInRect:
boundingRectWithSize:options:context:
setWrapped:
setTruncationMode:
setString:
setAlignmentMode:
setForegroundColor:
setFontSize:
setContentsScale:
setContentsGravity:
setContents:
ascender
initWithString:attributes:
_automaticallyDrawsRoundedCorners
_prefersLowQualityEffects
_circular
_backdropView
addSubview:applyingMaterialStyle:tintEffectStyle:
setAutomaticallyDrawsRoundedCorners:
setCircular:
setPrefersLowQualityEffects:
_updateBackdropShape
_ensureOrRemoveBackdropView
_isContainedInOverlappingBackgroundView
automaticallyDrawsRoundedCorners
prefersLowQualityEffects
isCircular
backdropView
setBackdropView:
sendSubviewToBack:
_trackingState
_longPressEnabled
_showsHighlightedAppearance
_micaPackageStateName
_highlightAnimator
_micaPackage
_longPressTimer
_translationOfPanFromPreviousTouch
_cumulativeTranslationSincePanningBegan
_locationOfTouchInWindow
_initialPreciseLocationOfTouch
setMicaPackage:
setMicaPackageStateName:
triggerSelectionChangedFeedback
setShowsHighlightedAppearance:
setTrackingState:
setNeedsUpdateGlyphRenderingMode
imageNameForMicaPackageState
setBounds:
_updateMicaPackage:
micaPackageStateName
isLongPressEnabled
setLongPressEnabled:
translationOfPanFromPreviousTouch
setTranslationOfPanFromPreviousTouch:
cumulativeTranslationSincePanningBegan
setCumulativeTranslationSincePanningBegan:
locationOfTouchInWindow
setLocationOfTouchInWindow:
highlightAnimator
setHighlightAnimator:
micaPackage
imageView
setImageView:
initialPreciseLocationOfTouch
setInitialPreciseLocationOfTouch:
longPressTimer
setLongPressTimer:
trackingState
showsHighlightedAppearance
position
superlayer
removeFromSuperlayer
precisePreviousLocationInView:
preciseLocationInView:
setIsAccessibilityElement:
setAccessibilityIdentifier:
_interval
_currentTime
_timer
_minTime
_maxTime
interval
setInterval:
currentTime
minTime
setMinTime:
maxTime
setMaxTime:
seekableTimeRangeDuration
encodeObject:forKey:
automaticallyNotifiesObserversOfCurrentTime
CMTimeRangeValue
targetTimeWithinEndTimes
setTargetTimeWithinEndTimes:
remainingTargetTimeWithinEndTimes
currentTimeWithinEndTimes
setCurrentTimeWithinEndTimes:
remainingTime
remainingTimeWithinEndTimes
isThirtySecondsBeforeCurrentTimeWithinSeekableTimeRanges
isCurrentTimeAtEndOfSeekableTimeRanges
keyPathsForValuesAffectingTargetTime
keyPathsForValuesAffectingTargetTimeWithinEndTimes
keyPathsForValuesAffectingRemainingTargetTimeWithinEndTimes
keyPathsForValuesAffectingCurrentTimeWithinEndTimes
keyPathsForValuesAffectingRemainingTime
keyPathsForValuesAffectingRemainingTimeWithinEndTimes
keyPathsForValuesAffectingSeekableTimeRangeDuration
keyPathsForValuesAffectingThirtySecondsBeforeCurrentTimeWithinSeekableTimeRanges
keyPathsForValuesAffectingCurrentTimeAtEndOfSeekableTimeRanges
targetTime
setTargetTime:
_contentZoomingView
_doubleTapGestureRecognizer
_handleDoubleTapGestureRecognizer:
_updateZoomingView
contentZoomingView
setContentZoomingView:
doubleTapGestureRecognizer
setDoubleTapGestureRecognizer:
_startNextContentTransitionButtonEnabled
_startPreviousContentTransitionButtonEnabled
_contentTransitioningPlayer
_customContentTransitioningInfoPanel
_contentTransitionView
contentTransitioningViewShouldBeginDragging:locationInView:
contentTransitioningView:shouldBeginTransitionWithDirection:
contentTransitioningPlayerContentViewForTransition:
contentTransitioningViewDidChangeTransitionStatus:oldState:oldTransitionDirection:oldProgress:
setVideoGravityForTransitioningContent:
startContentTransition:
_transitionDirectionForContentTransitionType:
contentTransitioningOverlayView
activeContentTransitionType
isContentTransitionInteractive
setStartNextContentTransitionButtonEnabled:
setStartPreviousContentTransitionButtonEnabled:
updateStartLeftRightContentTransitionButtonsEnabled
setCustomContentTransitioningInfoPanel:
contentTransitionTypeForTransitionDirection:
contentTransitioningPlayer
setContentTransitioningPlayer:
isStartNextContentTransitionButtonEnabled
isStartPreviousContentTransitionButtonEnabled
customContentTransitioningInfoPanel
contentTransitionView
setContentTransitionView:
_legacyDelegate
legacyDelegate
setLegacyDelegate:
playerViewControllerDidCancelContentTransition:
playerViewControllerWillCancelContentTransition:
playerViewControllerDidCompleteContentTransition:
playerViewControllerWillCompleteContentTransition:
playerViewController:didUpdateContentTransitionProgress:
playerViewControllerWillBeginContentTransition:
playerViewController:playerForContentTransitionType:
_newsWidgetPlayerBehaviorContext
_newsWidgetPlayerLegacyBehavior
_presentationContext
_transitionAnimator
_clientAnimator
_allAnimators
initWithTransitionContext:
transitionAnimatorProgress
startInteractiveTransition
_presentationTransitionWillBegin
_dismissalTransitionWillBegin
pauseInteractiveTransition
updateWithPercentComplete:scale:translation:rotation:
finishInteractiveTransition
_animateFinishInteractiveTransition
_freezeDismissingViewForFinishing
cancelInteractiveTransition
_animateAlongsideInteractivePresentationTransitionAnimationForCancelling
_animateAlongsideInteractiveDismissalTransitionAnimationForCancelling
addRunAlongsideAnimationsIfNeeded
completeTransition:
_presentationTransitionDidEnd:
_dismissalTransitionDidEnd:
_startOrContinueAnimatorsReversed:
_initialFrameForPresentedView
_finalFrameForPresentedView
_transformForScale:translation:rotation:locationInWindow:sourceRectInContainerView:
_updateCornerAppearanceAttributesOfView:toSourceView:similarity:
_sourceViewFrameInContainerView
setPresentationContext:
transitionAnimator
clientAnimator
allAnimators
finalFrameForViewController:
continueAnimationWithTimingParameters:durationFactor:
timingParameters
setReversed:
pauseAnimation
updateInteractiveTransition:
__runAlongsideAnimations
_alongsideAnimationsCount
transform
addKeyframeWithRelativeStartTime:relativeDuration:animations:
animateKeyframesWithDuration:delay:options:animations:completion:
setFractionComplete:
makeObjectsPerformSelector:
viewControllerForKey:
insertSubview:belowSubview:
setScrubsLinearly:
initWithAnimationCurve:
isReversed
fractionComplete
transitionDuration
avkit_makePictureInPicturePlatformAdapterContentPlaceholderLayer
convertRect:fromLayer:
isPIPModeEnabled
_suppressesAccessibilityHairlineThickening
avkit_flatWhiteResizableTemplateImage
avkit_imageNamed:completion:
initWithSize:
setFill
fillRect:
imageWithActions:
resizableImageWithCapInsets:
imageWithRenderingMode:
avkit_loadedImageNames
_packageName
_stateController
_layoutDirection
_rootLayer
_targetSize
_unscaledSize
stateController:didSetStateOfLayer:
stateController:transitionDidStart:speed:
stateController:transitionDidStop:completed:
CAMLParser:resourceForURL:
CAMLParser:didLoadResource:fromURL:
CAMLParser:didFailToLoadResourceFromURL:
CAMLParser:didFailToFindClassWithName:
CAMLParser:evaluateScriptElement:sourceURL:lineNumber:
CAMLParser:evaluateScriptValue:sourceURL:lineNumber:
CAMLParser:formatWarningString:arguments:lineNumber:
CAMLParser:formatErrorString:arguments:lineNumber:
initWithPackageName:layoutDirection:
rootLayer
setTargetSize:
setState:color:
removeCompositingFiltersWithName:
_setState:
_recursivelyFindSublayerWithName:rootLayer:
_recursivelySetFillColor:rootLayer:
_recursivelyRemoveCompositingFiltersWithName:rootLayer:
transitionToStateWithName:
transitionToStateWithName:onLayer:
availableStates
availableStatesOnLayer:
sublayerWithName:
_loadRootLayerIfNeeded
targetSize
unscaledSize
setUnscaledSize:
packageName
stateController
layoutDirection
setLayoutDirection:
setRootLayer:
initWithLayer:
result
parseContentsOfURL:
parser
activateBackground:
enumerateObjectsUsingBlock:
states
setState:ofLayer:transitionSpeed:
stateWithName:
compositingFilter
setFillColor:
classSubstitions
asynchronouslyPrepareMicaPackageWithName:layoutDirection:completion:
_includedControlType
_volumeButtonMicaPackageStateName
_volumeButton
_prominentPlayButtonContainer
_volumeButtonContainer
initWithFrame:styleSheet:
hasVisibleControls
setIncludedControlType:
setVolumeButtonMicaPackageStateName:
_updateFramesAndHitRectInsets
_frameForIncludedViewType:
_makeVolumeButtonAndContainerIfNeeded
_makeVolumeButtonAndContainer
_makeProminentPlayButtonAndContainerIfNeeded
_makeProminentPlayButtonAndContainer
includedControlType
volumeButtonMicaPackageStateName
volumeButton
setVolumeButton:
prominentPlayButtonContainer
setProminentPlayButtonContainer:
volumeButtonContainer
setVolumeButtonContainer:
UIEdgeInsetsValue
isEqualToValue:
_animations
_completions
addCoordinatedAnimations:completion:
performCoordinatedAnimations
didFinishAnimations:
animations
completions
_queue
_invalidated
initWithTimeInterval:queue:block:repeats:
UTF8String
_readyToConnect
_active
_playing
_requiresTVOutScreen
_ready
_debugAssistant
_connectedSecondScreen
_preferredDisplayCriteria
_maximumVideoResolution
initWithPlayer:playerLayer:
startUpdates
contentViewController
debugAssistant
setPlayerLayer:
setPreferredDisplayCriteria:
setReadyToConnect:
setActive:
setPlaying:
connectWithScreen:active:
_loadSecondScreenViewControllerIfNeeded
_postNotification:oldValue:newValue:
_startObservingPlayer
_updatePreferredDisplayCriteriaFromPreparedAssetIfNeeded:
_determineIsReadyToConnect
_allowsNonAirPlayExternalPlayback
_currentItemIsReadyToPlayVideoOrLoadingWhileActive
isReadyToConnect
connectedSecondScreen
setConnectedSecondScreen:
isActive
isPlaying
requiresTVOutScreen
setRequiresTVOutScreen:
preferredDisplayCriteria
maximumVideoResolution
setMaximumVideoResolution:
isReady
setReady:
initWithRefreshRate:videoDynamicRange:
keyValueObservationController
setKeyValueObservationController:
_wantsAppearanceConfigValues
_appearanceProxy
appearanceProxy
setWantsAppearanceConfigValues:
maskedCorners
setMaskedCorners:
masksToBounds
setMasksToBounds:
cornerCurve
setCornerCurve:
cornerRadius
setCornerRadius:
continuousCorners
setContinuousCorners:
wantsAppearanceConfigValues
actualView
clipsToBounds
_clipsToBounds
_actualView
_cornerCurve
_maskedCorners
_cornerRadius
_backgroundColor
setActualView:
backgroundColor
setBackgroundColor:
_counterRotatingContentView
_beingPresented
_beingDismissed
_willBeginOrientationChange
_presentationContainerContentView
_fromOrientation
_toOrientation
_continuousCornerRadius
_setCornerRadius:
willBeginAdjustingOrientation
avkit_overrideLayoutMarginsForInterfaceOrientation:
willStartPresentationTransitionFromInterfaceOrientation:toOrientation:needsCounterRotation:
willStartDismissalTransitionFromInterfaceOrientation:toOrientation:needsCounterRotation:
didStopTransition
_contentTransform
_radiansForCounterRotation
isCounterRotatingContentView
setCounterRotatingContentView:
presentationContainerContentView
setPresentationContainerContentView:
isBeingPresented
setBeingPresented:
isBeingDismissed
setBeingDismissed:
fromOrientation
setFromOrientation:
toOrientation
setToOrientation:
willBeginOrientationChange
setWillBeginOrientationChange:
_doubleRowLayoutEnabled
_showsLiveStreamingControls
_liveStreamingControlsIncludeScrubber
_backdropViewNeedsLayout
_scrubberValueWhenScrubInstructionsTimerBegan
_minimumRequiredWidth
_scrubber
_elapsedTimeLabel
_timeRemainingLabel
_standardPlayPauseButton
_skipForwardButton
_skipBackButton
_startLeftwardContentTransitionButton
_startRightwardContentTransitionButton
_routePickerView
_mediaSelectionButton
_customItems
_detachedExtraContentBackdropView
_doubleRowLayoutConstraints
_scrubberInstructionsDoubleRowActiveConstraint
_liveBroadcastLabel
_liveBroadcastScrubberLabel
_embeddedExtraContentContainer
_scrubInstructionsLabel
_scrubInstructionsBackdropLabel
_scrubInstructionsTimer
scrubberSlowKnobMovementDetected:
setDoubleRowLayoutEnabled:
setShowsLiveStreamingControls:
setLiveStreamingControlsIncludeScrubber:
setCustomItems:
traitCollectionDidChange:
beginScrubbing:
scrubberValueChanged:
endScrubbing:
_ensureLayoutConstraints
_updateFontSizes
_showScrubInstructions
_updateScrubInstructionsLabelsText
_scrubInstructionsAttributedText
_updateCustomContentTransitioningInfoPanelLayout
singleRowViews
canShowScrubInstructions
isDoubleRowLayoutEnabled
showsLiveStreamingControls
liveStreamingControlsIncludeScrubber
minimumRequiredWidth
scrubber
elapsedTimeLabel
timeRemainingLabel
standardPlayPauseButton
skipForwardButton
skipBackButton
startLeftwardContentTransitionButton
startRightwardContentTransitionButton
routePickerView
mediaSelectionButton
customItems
detachedExtraContentBackdropView
setDetachedExtraContentBackdropView:
doubleRowLayoutConstraints
scrubberInstructionsDoubleRowActiveConstraint
liveBroadcastLabel
liveBroadcastScrubberLabel
embeddedExtraContentContainer
scrubInstructionsLabel
scrubInstructionsBackdropLabel
scrubInstructionsTimer
setScrubInstructionsTimer:
scrubberValueWhenScrubInstructionsTimerBegan
setScrubberValueWhenScrubInstructionsTimerBegan:
backdropViewNeedsLayout
setBackdropViewNeedsLayout:
appendAttributedString:
systemFontOfSize:weight:
isEqualToAttributedString:
attributedText
setAttributedText:
firstBaselineAnchor
lastBaselineAnchor
setPriority:
constraintLessThanOrEqualToAnchor:
deactivateConstraints:
bringSubviewToFront:
_AVKitOwner
_behaviorsAndBehaviorContexts
behaviors
addBehavior:
removeBehavior:
enumerateAllBehaviorsUsingBlock:
enumerateAllBehaviorsConformingToProtocol:usingBlock:
behaviorOfClass:
enumerateAllBehaviorContextsUsingBlock:
enumerateAllBehaviorContextsConformingToProtocol:usingBlock:
enumerateAllBehaviorContextsImplementingSelector:forProtocol:usingBlock:
behaviorContextOfClass:
AVKitOwner
setAVKitOwner:
behaviorsAndBehaviorContexts
objectEnumerator
keyEnumerator
setObject:forKey:
allObjects
strongToStrongObjectsMapTable
avkit_asWindowScene
_isCarScreen
lowercaseString
windows
filteredArrayUsingPredicate:
displayConfiguration
_setAVKitRequestedRefreshRate:HDRMode:overscanCompensation:
avkit_screenType
avkit_screenHasWindowsExcludingWindow:
_avkit_setPreferredRefreshRate:HDRMode:overscanCompensation:
sharedApplication
avkit_isForeground
avkit_resetPreferredModeSwitchRequest
avkit_setPreferredRefreshRate:HDRMode:
avkit_secondScreenScenes
_wasInitiallyInteractive
_hasAVKitAnimator
_wasCancelledWithInactiveScene
_presenterSupportedOrientations
_finalInterfaceOrientation
counterRotationTransform
interfaceRotation
isRotated
presenterSupportsOrientation:
setWasInitiallyInteractive:
hasAVKitAnimator
setHasAVKitAnimator:
wasCancelledWithInactiveScene
setWasCancelledWithInactiveScene:
presenterSupportedOrientations
setPresenterSupportedOrientations:
finalInterfaceOrientation
setFinalInterfaceOrientation:
_muted
_presentationSize
hasContent
hasEnabledVideo
hasLiveStreamingContent
hasSeekableLiveStreamingContent
timeControlStatus
togglePlaybackEvenWhenInBackground:
setMuted:
presentationSize
setPresentationSize:
isMuted
_playerViewControllerIsBeingTransitionedWithResizing
_playerViewControllerIsPresentingFullScreen
_playerViewControllerIsPresentedFullScreen
_playerViewControllerHasInvalidViewControllerHierarchy
_volumeControlsCanShowSlider
_showsPictureInPictureButton
_hasCustomPlaybackControls
_showsVideoGravityButton
_showsDoneButtonWhenFullScreen
_playbackControlsIncludeStartContentTransitionButtons
_forcePlaybackControlsHidden
_startLeftwardContentTransitionButtonEnabled
_startRightwardContentTransitionButtonEnabled
_prefersVolumeSliderExpanded
_canIncludeVideoGravityButton
_hasStartedUpdates
_coveringWindow
_hasPlaybackBegunSincePlayerControllerBecameReadyToPlay
_hasBecomeReadyToPlay
_multipleRoutesDetected
_resumingUpdates
_prefersMuted
_playbackSuspendedForScrubbing
_hasSeekableLiveStreamingContent
_scrubbingOrSeeking
_shouldIgnoreTimeResolverUpdates
_videoScaled
_contentTransitionAction
_volumeController
_nowPlayingInfoControllerIfLoaded
_playbackControlsView
_turboModePlaybackControlsPlaceholderView
_playbackControlsObservationController
_timeResolver
_elapsedTimeFormatter
_remainingTimeFormatter
_routePickerAlertController
_routeDetectorCoordinator
_AVRouteDetectorCoordinatorMultipleRoutesDetectedObserver
_loadingIndicatorTimer
_collapseExpandSliderAnimator
_playerMuteFadeAnimationID
_playbackControlsContainerVisibilityItem
_volumeControlsContainerVisibilityItem
_allVisibilityControllerItems
_pendingOrientationChange
_loadingIndicatorTimerDelay
_timeControlStatus
_videoGravityButtonType
_uniqueIdentifer
_windowSceneSessionIdentifier
_playbackViewFrame
playerViewControllerContentView:willLoadPlaybackControlsView:
playerViewControllerContentView:willLoadTurboModePlaceholderView:
playerViewControllerContentViewIsPlayingOnSecondScreen:
playerViewControllerContentViewPlaybackContentContainerViewChanged:
playerViewControllerContentViewDidLayoutSubviews:
playerViewControllerContentViewDidMoveToSuperviewOrWindow:
playerViewControllerContentViewShouldApplyAutomaticVideoGravity:
playerViewControllerContentViewEdgeInsetsForLetterboxedVideo:
playerViewControllerContentViewDidChangeVideoGravity:
playerViewControllerContentViewHasActiveTransition:
playerViewControllerContentViewIsBeingTransitionedFromFullScreen:
playerViewControllerContentViewOverrideLayoutClass:
playerViewControllerContentViewDidUpdateScrollingStatus:
transportControlsNeedsLayoutIfNeeded:
transportControls:scrubberDidBeginScrubbing:
transportControls:scrubberDidScrub:
transportControls:scrubberDidEndScrubbing:
initWithPlayerViewController:
startUpdatesIfNeeded
toggleMuted
setPrefersVolumeSliderExpanded:
setPlayerViewControllerIsPresentingFullScreen:
setPlayerViewControllerIsPresentedFullScreen:
setPlayerViewControllerIsBeingTransitionedWithResizing:
setHasCustomPlaybackControls:
setShowsDoneButtonWhenFullScreen:
setShowsVideoGravityButton:
setVolumeController:
setCoveringWindow:
setCanIncludeVideoGravityButton:
setShowsPictureInPictureButton:
showsRoutePickerView
showsProminentPlayButton
prominentPlayButtonCanShowPauseGlyph
showsTransportControls
shouldEnterFullScreenWhenPlaybackBegins
showsMediaSelectionButton
minimumTime
maximumTime
isSeekingEnabled
showsSkipButtons
showsStartContentTransitionButtons
canShowLoadingIndicator
playButtonsShowPauseGlyph
needsTimeResolver
tapGestureRecognizersCanReceiveTouches
playbackControlsViewDidLoad:
turboModePlaybackControlsPlaceholderViewDidLoad:
secondScreenConnectionDidBecomeActive:
secondScreenConnectionDidResignActive:
handleVolumeChange:
handleCurrentRouteSupportsVolumeControlChanged:
volumeSliderValueDidChange:
volumeButtonTapTriggered:
volumeButtonLongPressTriggered:
beginChangingVolume
volumeButtonPanChanged:
_prefersVolumeSliderExpandedAutomatically
_showOrHideAudioControls
_showOrHideDisplayModeControls
_updateVolumeButtonGlyph
_volumeButtonMicaPackageState
_updateVolumeSliderValueWithSystemVolume:animated:
prominentPlayButtonTouchUpInside:
skipButtonTouchUpInside:
skipButtonLongPressTriggered:
skipButtonLongPressEnded:
skipButtonForcePressChanged:
startContentTransitionButtonTouchUpInside:
_bindEnabledStateOfControls:toKeyPath:
_bindInclusionOfControlItems:toKeyPath:
_hasVisibilityControllerItemThatPrefersVisible
_observeBoolForKeyPath:usingKeyValueObservationController:observationHandler:
_seekByTimeInterval:toleranceBefore:toleranceAfter:
setForcePlaybackControlsHidden:
_updatePlaybackControlsVisibleAndObservingUpdates
_startObservingForPlaybackViewUpdates
_startObservingPotentiallyUnimplementedPlayerControllerProperties
_wantsRouteDetectionEnabled
_updateSkipButtonsEnableLongPress
updateControlsInclusion
_updateControlInclusion
_updateContainerInclusion
_updateOrCreateTimeResolverIfNeeded
_updateScrubberAndTimeLabels
_updateVideoGravityButtonType
_updateHasPlaybackBegunSincePlayerControllerBecameReadyToPlay:playing:userDidEndTappingProminentPlayButton:
_updatePrefersInspectionSuspended
_updateNowPlayingInfoCenter
_updateEdgeInsetsForLetterboxedContentInContentView:
_updateSecondScreenConnectionReadyToConnect
playerViewControllerIsBeingTransitionedWithResizing
playerViewControllerIsPresentingFullScreen
playerViewControllerIsPresentedFullScreen
playerViewControllerHasInvalidViewControllerHierarchy
setPlayerViewControllerHasInvalidViewControllerHierarchy:
inlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused
setInlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused:
showsPictureInPictureButton
showsVideoGravityButton
showsDoneButtonWhenFullScreen
playbackControlsIncludeStartContentTransitionButtons
setPlaybackControlsIncludeStartContentTransitionButtons:
forcePlaybackControlsHidden
isStartLeftwardContentTransitionButtonEnabled
setStartLeftwardContentTransitionButtonEnabled:
isStartRightwardContentTransitionButtonEnabled
setStartRightwardContentTransitionButtonEnabled:
contentTransitionAction
setContentTransitionAction:
pictureInPictureController
setPictureInPictureController:
nowPlayingInfoControllerIfLoaded
setNowPlayingInfoControllerIfLoaded:
playbackControlsView
setPlaybackControlsView:
turboModePlaybackControlsPlaceholderView
setTurboModePlaybackControlsPlaceholderView:
playbackControlsObservationController
setPlaybackControlsObservationController:
timeResolver
setTimeResolver:
elapsedTimeFormatter
remainingTimeFormatter
routePickerAlertController
setRoutePickerAlertController:
routeDetectorCoordinator
setRouteDetectorCoordinator:
AVRouteDetectorCoordinatorMultipleRoutesDetectedObserver
setAVRouteDetectorCoordinatorMultipleRoutesDetectedObserver:
loadingIndicatorTimer
setLoadingIndicatorTimer:
collapseExpandSliderAnimator
setCollapseExpandSliderAnimator:
playerMuteFadeAnimationID
setPlayerMuteFadeAnimationID:
playbackControlsContainerVisibilityItem
volumeControlsContainerVisibilityItem
allVisibilityControllerItems
prefersVolumeSliderExpanded
canIncludeVideoGravityButton
pendingOrientationChange
setPendingOrientationChange:
hasStartedUpdates
setHasStartedUpdates:
isCoveringWindow
hasPlaybackBegunSincePlayerControllerBecameReadyToPlay
setHasPlaybackBegunSincePlayerControllerBecameReadyToPlay:
hasBecomeReadyToPlay
setHasBecomeReadyToPlay:
loadingIndicatorTimerDelay
setLoadingIndicatorTimerDelay:
isResumingUpdates
setResumingUpdates:
prefersMuted
setPrefersMuted:
isPlaybackSuspendedForScrubbing
setPlaybackSuspendedForScrubbing:
setTimeControlStatus:
setHasSeekableLiveStreamingContent:
isScrubbingOrSeeking
setScrubbingOrSeeking:
shouldIgnoreTimeResolverUpdates
setShouldIgnoreTimeResolverUpdates:
videoGravityButtonType
setVideoGravityButtonType:
playbackViewFrame
setPlaybackViewFrame:
uniqueIdentifer
windowSceneSessionIdentifier
setWindowSceneSessionIdentifier:
setMaximumValue:
setMinimumValue:
stringFromSeconds:
setFormatTemplate:
isValid
UUID
reason
_isInAnimationBlock
areAnimationsEnabled
verticalSizeClass
horizontalSizeClass
keyPathsForValuesAffectingFullScreen
keyPathsForValuesAffectingShowsRoutePickerView
keyPathsForValuesAffectingShowsProminentPlayButton
keyPathsForValuesAffectingProminentPlayButtonCanShowPauseGlyph
keyPathsForValuesAffectingShowsTransportControls
keyPathsForValuesAffectingShouldEnterFullScreenWhenPlaybackBegins
keyPathsForValuesAffectingShowsMediaSelectionButton
keyPathsForValuesAffectingCurrentTime
keyPathsForValuesAffectingMinimumTime
keyPathsForValuesAffectingMaximumTime
keyPathsForValuesAffectingSeekingEnabled
keyPathsForValuesAffectingShowsSkipButtons
keyPathsForValuesAffectingShowsStartContentTransitionButtons
keyPathsForValuesAffectingCanShowLoadingIndicator
keyPathsForValuesAffectingPlayButtonsShowPauseGlyph
keyPathsForValuesAffectingNeedsTimeResolver
_sourcePlayerLayer
_debugLabel
_initialScreenBoundsHint
loadPlayerLayerViewIfNeeded
setSourcePlayerLayer:
setInitialScreenBoundsHint:
viewDidLayoutSubviews
_updateContentViewIfNeeded
_updateLayout
initialScreenBoundsHint
sourcePlayerLayer
debugLabel
sizeToFit
startShowingContentFromSourcePlayerLayer:
stopShowingContentFromActiveSourcePlayerLayer
_activeSourcePlayerLayer
activeSourcePlayerLayer
setActiveSourcePlayerLayer:
_initiallyHidden
_controls
_visibilityBehaviorOptions
controls
setControls:
visibilityBehaviorOptions
setVisibilityBehaviorOptions:
isInitiallyHidden
setInitiallyHidden:
_visibilityAnimator
_itemsAndItemInfos
_numberOfUserInteractionsBeingTracked
_animationDuration
_visibilityNeedsUpdate
_prefersRegularItemsVisible
_prefersItemsVisibleTimerInterval
_prefersItemsVisibleTimerIntervalForQuicklyHiding
_prefersItemsVisibleTimerIntervalForFlashingControls
_prefersRegularItemsVisibleTimer
_prefersItemsShownForVolumeChangeVisible
_prefersItemsShownForVolumeChangeVisibleTimerInterval
_prefersItemsShownForVolumeChangeVisibleTimer
_hidesItemQuicklyWhenPlaybackBegins
_popoverPresented
_transitionInProgress
_playbackWasPausedAndVisibilityNotToggledAfterPausing
_loadingIndicatorWasShownAndVisibilityNotToggledAfterLoadingIndicatorShown
_isFlashingControlsVisible
_statusBarAppearanceNeedsUpdate
_canHideItems
_showsItemsWhileWaitingToPlay
_showsItemsWhenPaused
activeAudioRouteOrSystemVolumeDidChange
startHidingItemQuicklyWhenPlaybackBegins
stopHidingItemQuicklyWhenPlaybackBegins
showsItemPreferingStatusBarVisible
isHidingItemsForTransition
beginHidingItemsForTransition
endHidingItemsForTransition
endHidingItemsForTransitionAndShowImmediately:
toggleVisibility
startControllingVisibilityOfItem:visibilityBehaviorOptions:
stopControllingVisibilityOfItem:
visibilityBehaviorOptionsOfItem:
beginTrackingUserInteraction
endTrackingUserInteraction
didMoveOffScreen
_startControllingVisibilityIfNeeded
_updateVisibilityWithCompletionHandler:
_setVisibilityNeedsUpdate
_updateControlItemVisibilityIfNeeded
_performForEachItem:
_itemsPassingTest:
_hasItemsThatCanBeShown
_hasItemsThatCanBeHidden
_showItemsShownForVolumeChange
_showItemsShownForVolumeChangeAndHideAfterDelay
_startTimerToHideItemsShownForVolumeChange
_stopTimerToHideItemsShownForVolumeChange
_hideItemsShownForVolumeChange
_showRegularItems
_showRegularItemsAndHideAfterDelay
_showRegularItemsAndHideAfterDelayIfPlaying:
_startTimerToHideRegularItems
_startTimerToHideRegularItemsAfterDelay:ifPlaying:
_stopTimerToHideRegularControls
_hideRegularItems
_stopInitiallyHidingItems
_stopInitiallyHidingItemsThatAreShownForVolumeChanges
_userIsInteractingWithItems
canHideItems
setCanHideItems:
isPopoverPresented
setPopoverPresented:
showsItemsWhileWaitingToPlay
setShowsItemsWhileWaitingToPlay:
showsItemsWhenPaused
setShowsItemsWhenPaused:
currentRunLoop
hideItemsTimerInterval
weakToStrongObjectsMapTable
animationDuration
setAnimationDuration:
setHideItemsTimerInterval:
hideItemsQuicklyTimerInterval
setHideItemsQuicklyTimerInterval:
volumeChangeHidePlaybackControlTimerInterval
setVolumeChangeHidePlaybackControlTimerInterval:
beginShowingItemsDueToIndirectUserInteraction
endShowingItemsDueToIndirectUserInteraction
interruptibleAnimatorForTransition:
animationEnded:
transitionDuration:
animateTransition:
completionSpeed
completionCurve
wantsInteractiveStart
startInteractiveTransition:
transitionWillComplete:success:
transitionPresentedViewBackgroundColor:
transitionBackgroundViewBackgroundColor:
transitionDriver:gestureRecognizer:shouldReceiveTouch:
transitionDriver:shouldDriveTransitionInteractionOfType:
transitionDriver:didBeginTrackingTransitionInteraction:readyToProceedHandler:
transitionDriverDidContinueInteraction:
transitionDriverDidCancelInteraction:
transitionDriverDidFinishInteraction:
animationControllerForPresentedController:presentingController:sourceController:
animationControllerForDismissedController:
interactionControllerForPresentation:
interactionControllerForDismissal:
presentationControllerForPresentedViewController:presentingViewController:sourceViewController:
_interactiveGestureTracker
_interactionView
_displayLink
_activeTransition
_gestureTracker
_transitionDidBeginHandler
_easeInFunction
_easeOutFunction
_touchGravity
displayLink
setInteractiveGestureTracker:
setInteractionView:
addTransitionDriver:toView:
beginFullScreenPresentationOfViewController:fromView:isInteractive:completion:
beginFullScreenDismissalOfViewController:animated:isInteractive:completion:
_cancelTransition
_finishTransition
_fireDidBeginHandlerIfNeeded
_startObservingAnimatorProgress
interactiveGestureTracker
interactionView
setDisplayLink:
activeTransition
setActiveTransition:
gestureTracker
setPresentationController:
transitionDidBeginHandler
setTransitionDidBeginHandler:
easeInFunction
setEaseInFunction:
easeOutFunction
setEaseOutFunction:
touchGravity
setTouchGravity:
isAnimated
supportsMultipleScenes
addInteraction:
removeInteraction:
_jKeyDown
_kKeyDown
_lKeyDown
_audioMediaSelectionOptions
_legibleMediaSelectionOptions
_cachedSelectedAudioMediaSelectionOption
_cachedSelectedLegibleMediaSelectionOption
_cachedSelectedLegibleMediaSelectionOptionAccordingToAVFoundation
_lastKnownPersistedExtendedLanguageTag
_isResumed
_seekTimer
_timeOfLastUpdate
_seekQueue
_ignoreRateKeyValueChange
_observationInfo
_inspectionSuspended
_updateAtMinMaxTimePeriodicObserverToken
_timecodePeriodicObserverToken
_pictureInPictureInterrupted
_handlesAudioSessionInterruptions
_isDeallocating
_rateToRestoreAfterAudioSessionInterruptionEnds
_retryPlayingImmediatelyBlock
_shouldPlayImmediately
_looping
_actionAtItemEnd
_pendingSeek
_toleranceBefore
_toleranceAfter
_isScanningForward
_isScanningBackward
_scanningCount
_preScanningRate
_liveStreamMinTiming
_liveStreamMaxTiming
_liveStreamEventModePossible
_canUseNetworkResourcesForLiveStreamingWhilePausedCount
_previousValueOfCanUseNetworkResourcesForLiveStreamingWhilePaused
_shouldPlayWhenLikelyToKeepUp
_forceScanning
_rateBeforeForceScanning
_atMaxTime
_atMinTime
_pictureInPictureSupported
_seekingInternal
_seeking
_composable
_hasProtectedContent
_compatibleWithAirPlayVideo
_preventingIdleSystemSleep
_preventingIdleDisplaySleep
_disablingAutomaticTermination
_canTogglePictureInPicture
_hasBegunInspection
_touchBarRequiresLinearPlayback
_currentAssetIfReady
_assetInspectionQueue
_assetBeingPrepared
_minTiming
_maxTiming
_currentAudioTrack
_timecodeController
_seekToTime
_metadata
_contentChapters
_availableMetadataFormats
_rateBeforeScrubBegan
_defaultPlaybackRate
_seekToTimeInternal
initWithPlayer:
startInspectionIfNeeded
startKVO
observationInfo
setObservationInfo:
_queuePlayer
isReadyToPlay
error
isCompletelySeekable
_observeValueForKeyPath:oldValue:newValue:
_retryPlayImmediatelyIfNeeded
canPlayImmediately
seekTimer
_handleSeekTimerEvent
canPlay
autoplay:
canPause
canTogglePlayback
setTouchBarRequiresLinearPlayback:
isLooping
setLooping:
updateAtMinMaxTime
increaseVolume:
decreaseVolume:
changeVolumeToMinimum:
changeVolumeToMaximum:
isInspectionSuspended
setInspectionSuspended:
contentDuration
nominalFrameRate
contentDimensions
reversePlaybackEndTime
setReversePlaybackEndTime:
forwardPlaybackEndTime
setForwardPlaybackEndTime:
_setMinTiming:maxTiming:
contentDurationWithinEndTimes
currentDate
currentOrEstimatedDate
seekableTimeRanges
hasEnabledAudio
hasVideo
hasContentChapters
isStreaming
hasTrimmableContent
hasShareableContent
_assetIsRestrictedFromSaving:
audioWaveform
_assetIsMarkedNotSerializable:
_assetContainsProResRaw:
_updateCurrentAudioTrackIfNeeded
canSeek
seekToTime:
seekToTime:toleranceBefore:toleranceAfter:
seekToCMTime:toleranceBefore:toleranceAfter:
throttledSeekToTime:toleranceBefore:toleranceAfter:
actuallySeekToTime
seekByTimeInterval:
seekByTimeInterval:toleranceBefore:toleranceAfter:
canScanForward
scanForward:
beginScanningForward:
_updateScanningForwardRate
endScanningForward:
canScanBackward
scanBackward:
beginScanningBackward:
_updateScanningBackwardRate
endScanningBackward:
canSeekToBeginning
seekToBeginning:
canSeekToEnd
seekToEnd:
canSeekFrameForward
seekFrameForward:
canSeekFrameBackward
seekFrameBackward:
seekOrStepByFrameCount:
skipBackwardThirtySeconds:
gotoEndOfSeekableRanges:
seekToChapter:
canSeekChapterForward
seekChapterForward:
canSeekChapterBackward
seekChapterBackward:
updateTiming
updateMinMaxTiming
allowsExternalPlayback
setAllowsExternalPlayback:
isPlayingOnExternalScreen
isExternalPlaybackActive
externalPlaybackType
externalPlaybackAirPlayDeviceLocalizedName
isPictureInPictureInterrupted
setPictureInPictureInterrupted:
togglePictureInPicture:
startUsingNetworkResourcesForLiveStreamingWhilePaused
stopUsingNetworkResourcesForLiveStreamingWhilePaused
canUseNetworkResourcesForLiveStreamingWhilePaused
setCanUseNetworkResourcesForLiveStreamingWhilePaused:
_cancelPendingSeeksIfNeeded
_updateRateForScrubbingAndSeeking
scanningDelays
_prepareAssetForInspectionIfNeeded
isAtMaxTime
setAtMaxTime:
isAtMinTime
setAtMinTime:
currentAssetIfReady
setCurrentAssetIfReady:
assetInspectionQueue
setAssetInspectionQueue:
assetBeingPrepared
setAssetBeingPrepared:
setPictureInPictureSupported:
timing
setTiming:
minTiming
setMinTiming:
maxTiming
setMaxTiming:
currentAudioTrack
setCurrentAudioTrack:
timecodeController
setTimecodeController:
isSeekingInternal
setSeekingInternal:
isSeeking
setSeeking:
seekToTimeInternal
setSeekToTimeInternal:
seekToTime
setSeekToTime:
metadata
setMetadata:
contentChapters
setContentChapters:
isComposable
setComposable:
hasProtectedContent
setHasProtectedContent:
availableMetadataFormats
setAvailableMetadataFormats:
isCompatibleWithAirPlayVideo
setCompatibleWithAirPlayVideo:
rateBeforeScrubBegan
setRateBeforeScrubBegan:
isPreventingIdleSystemSleep
setPreventingIdleSystemSleep:
isPreventingIdleDisplaySleep
setPreventingIdleDisplaySleep:
isDisablingAutomaticTermination
setDisablingAutomaticTermination:
canTogglePictureInPicture
setCanTogglePictureInPicture:
hasBegunInspection
setHasBegunInspection:
touchBarRequiresLinearPlayback
cancelPendingSeeks
associatedTracksOfType:
deviceName
supportsMultipleOutputDevices
sharedAudioPresentationOutputContext
liveUpdateInterval
seekableTimeRangesLastModifiedTime
timebase
stepByCount:
canStepBackward
canStepForward
canPlayFastReverse
canPlayFastForward
track
getBytes:length:
objectAtIndex:
metadataItemsFromArray:withKey:keySpace:
metadataForFormat:
availableVideoDynamicRanges
currentEstimatedDate
setActionAtItemEnd:
actionAtItemEnd
setAttribute:forKey:error:
isPlaybackLikelyToKeepUp
isPlaybackBufferEmpty
playImmediatelyAtRate:
isPiPAvailable
applicationState
sortUsingComparator:
arrayWithCapacity:
chapterMetadataGroupsBestMatchingPreferredLanguages:
preferredLanguages
dictionaryWithDictionary:
commonMetadata
stopGeneratingTimecodes
handlesAudioSessionInterruptions
keyPathsForValuesAffectingStatus
keyPathsForValuesAffectingReadyToPlay
keyPathsForValuesAffectingError
keyPathsForValuesAffectingCompletelySeekable
keyPathsForValuesAffectingCanPlay
keyPathsForValuesAffectingPlaying
keyPathsForValuesAffectingCanPause
keyPathsForValuesAffectingCanTogglePlayback
keyPathsForValuesAffectingVolume
keyPathsForValuesAffectingMuted
keyPathsForValuesAffectingHasContent
keyPathsForValuesAffectingContentDuration
keyPathsForValuesAffectingContentDimensions
keyPathsForValuesAffectingMinTime
keyPathsForValuesAffectingReversePlaybackEndTime
keyPathsForValuesAffectingMaxTime
keyPathsForValuesAffectingForwardPlaybackEndTime
keyPathsForValuesAffectingContentDurationWithinEndTimes
keyPathsForValuesAffectingSeekableTimeRanges
keyPathsForValuesAffectingLoadedTimeRanges
keyPathsForValuesAffectingHasEnabledAudio
keyPathsForValuesAffectingHasVideo
keyPathsForValuesAffectingHasEnabledVideo
keyPathsForValuesAffectingHasContentChapters
keyPathsForValuesAffectingStreaming
keyPathsForValuesAffectingHasLiveStreamingContent
keyPathsForValuesAffectingHasSeekableLiveStreamingContent
keyPathsForValuesAffectingHasTrimmableContent
keyPathsForValuesAffectingHasShareableContent
keyPathsForValuesAffectingTimeControlStatus
keyPathsForValuesAffectingCanSeek
keyPathsForValuesAffectingCanScanForward
keyPathsForValuesAffectingCanScanBackward
keyPathsForValuesAffectingCanSeekToBeginning
keyPathsForValuesAffectingCanSeekToEnd
keyPathsForValuesAffectingCanSeekFrameForward
keyPathsForValuesAffectingCanSeekFrameBackward
keyPathsForValuesAffectingCanSeekChapterForward
keyPathsForValuesAffectingCanSeekChapterBackward
keyPathsForValuesAffectingAllowsExternalPlayback
keyPathsForValuesAffectingPlayingOnExternalScreen
keyPathsForValuesAffectingExternalPlaybackActive
keyPathsForValuesAffectingExternalPlaybackType
keyPathsForValuesAffectingExternalPlaybackAirPlayDeviceLocalizedName
setRateWithForce:
usesExternalPlaybackWhileExternalScreenIsActive
setHandlesAudioSessionInterruptions:
keyPathsForValuesAffectingUsesExternalPlaybackWhileExternalScreenIsActive
keyPathsForValuesAffectingPreferredDisplayCriteria
keyPathsForValuesAffectingMaximumVideoResolution
hasTimecodes
loadTimecodeControllerIfNeeded
frameNumberForCurrentTime
hasReadableTimecodes
timecodeObservationInterval
startGeneratingTimecodesUsingBlock:
seekToTimecode:
seekToFrame:
timecodeForCurrentTime
maxTimecode
functionWithControlPoints::::
_temporaryArrangedSubviews
_disablesAutoLayout
_axis
_shapeStyle
_targetViewForSecondaryMaterialOverlay
_stackView
_secondaryMaterialOverlayView
_secondaryMaterialOverlayViewConstraints
_backdropLayerView
initWithArrangedSubviews:
initWithFrame:disablingAutoLayout:
hasVisibleArrangedSubview
arrangedSubviews
setArrangedSubviews:axis:
setCustomSpacing:afterView:
setCustomSpacing:afterViews:
customSpacingAfterView:
setTargetViewForSecondaryMaterialOverlay:
contentLayoutMargins
setContentLayoutMargins:
setShapeStyle:
setSemanticContentAttribute:
_stackViewIfLoaded
_applyShapeStyle
axis
shapeStyle
targetViewForSecondaryMaterialOverlay
stackView
secondaryMaterialOverlayView
setSecondaryMaterialOverlayView:
secondaryMaterialOverlayViewConstraints
setSecondaryMaterialOverlayViewConstraints:
disablesAutoLayout
setDisablesAutoLayout:
backdropLayerView
setBackdropLayerView:
_setCornerRadius:continuous:maskedCorners:
setDirectionalLayoutMargins:
directionalLayoutMargins
insertArrangedSubview:atIndex:
removeArrangedSubview:
insertSubview:above:
setLayoutMarginsRelativeArrangement:
removeAllFiltersFromView:
applyPrimaryGlyphTintToView:
applySecondaryGlyphTintToView:
applyGlyphTintColor:toView:
configureSlider:thumbView:loadedTrackView:
applyBaseTrackTintToView:
applyCompletedTrackTintToView:
applyLoadedTrackTintToView:
configureView:forTintEffectWithColor:filterType:
configureView:withBackgroundFillOfColor:opacity:filter:
secondaryGlyphTintColor
setBackgroundEffects:
effectCompositingColor:withMode:alpha:
layerWithTintColor:filterType:
imageForState:
titleForState:
_setTextColorFollowsTintColor:
_shouldLoadPlaybackControlsHint
_canAutomaticallyZoomLetterboxVideos
_styleSheetShouldUseCompactFullScreenItemSize
_automaticVideoGravity
_externalPlaybackIndicatorView
_unsupportedContentIndicatorView
_audioOnlyIndicatorView
_iAdPreRollView
_playbackContentContainerView
_interactiveContentOverlayView
_targetVideoGravities
_externalPlaybackIndicatorTitle
_externalPlaybackIndicatorSubtitle
_scrollingObserver
_edgeInsetsForLetterboxedContent
_videoContentInset
scrollViewObserverValuesDidChange:
initWithFrame:playbackContentContainerView:targetVideoGravities:
automaticVideoGravity
setAutomaticVideoGravity:
setStyleSheetShouldUseCompactFullScreenItemSize:
externalPlaybackIndicatorView
externalPlaybackIndicatorViewIfLoaded
unsupportedContentIndicatorView
unsupportedContentIndicatorViewIfLoaded
audioOnlyIndicatorView
audioOnlyIndicatorViewIfLoaded
iAdPreRollView
iAdPreRollViewIfLoaded
setInteractiveContentOverlayView:
setShouldLoadPlaybackControlsHint:
addPlaybackContentContainerViewIfNeeded
setPlaybackContentContainerView:
isViewDescendantOfPlaybackControlsSubview:
setShowsUnsupportedContentIndicator:
setShowsAudioOnlyIndicator:
setShowsExternalPlaybackIndicator:
setExternalPlaybackIndicatorTitle:subtitle:
setTargetVideoGravity:forLayoutClass:
layoutClass
loadPlaybackControlsViewIfNeeded
removeTurboModePlaybackControlsPlaceholderViewIfNeeded
isInAWindowAndNotScrolling
_isBeingTransitionedToOrFromFullScreen
_updateVideoGravityDuringLayoutSubviewsAndAssertThatIfYouBreakThisMethodYouOwnThisMethod
_updateVideoContentInsetForVideoGravity:
_applyVideoGravityIfNeeded:
_mediaTimingFunctionForCurrentAnimationCurve
_insertPlaybackControlsOrPlaceholderView:
_loadTurboOrFullPlaybackControlsIfNeeded
_loadTurboModePlaybackControlsPlaceholderViewIfNeeded
_updateStyleSheet
playbackContentContainerView
shouldLoadPlaybackControlsHint
canAutomaticallyZoomLetterboxVideos
setCanAutomaticallyZoomLetterboxVideos:
edgeInsetsForLetterboxedContent
setEdgeInsetsForLetterboxedContent:
styleSheetShouldUseCompactFullScreenItemSize
videoContentInset
setVideoContentInset:
targetVideoGravities
externalPlaybackIndicatorTitle
setExternalPlaybackIndicatorTitle:
externalPlaybackIndicatorSubtitle
setExternalPlaybackIndicatorSubtitle:
scrollingObserver
_currentAnimationCurve
removeAllAnimations
setAnimationTimingFunction:
_currentAnimationDuration
_isInAnimationBlockWithAnimationsEnabled
numberWithUnsignedLong:
setEdgesInsettingLayoutMarginsFromSafeArea:
setAutomaticVideoGravity:completion:
remoteObjectProxy
resume
setRemoteObjectInterface:
interfaceWithProtocol:
initWithServiceName:
_wasLongPressed
_treatsForcePressAsLongPress
_usesBackgroundEffectViewForTextOnlyButtons
_multipleTouchesEndsTracking
_disablesHighlightWhenLongPressed
_clampsHitRectInsetsWhenContainedInScrollableView
_wasForcePressTriggered
_tintEffectStyle
_forceThreshold
_force
_maximumForceSinceTrackingBegan
_imageName
_fullScreenImageName
_inlineImageName
_fullScreenAlternateImageName
_inlineAlternateImageName
_micaSnapshotAlpha
_horizontalTranslationOfLongPress
_previousHorizontalPositionOfLongPress
_userInteractionGestureRecognizer
_backgroundEffectView
setImageName:
setWasLongPressed:
setForce:
setMultipleTouchesEndsTracking:
setUsesBackgroundEffectViewForTextOnlyButtons:
setTintEffectStyle:
setHighlighted:
setImage:forState:
setTitle:forState:
_preferredLayoutSize
_handleUserInteractionGestureRecognizer:
_resetTrackedState
_updateImageIfNeeded
_updateEdgeInsets
_updateBackgroundEffectViewIsHidden
_preferredImageName
_imageViewAlpha
wasLongPressed
treatsForcePressAsLongPress
setTreatsForcePressAsLongPress:
tintEffectStyle
usesBackgroundEffectViewForTextOnlyButtons
forceThreshold
setForceThreshold:
force
maximumForceSinceTrackingBegan
setMaximumForceSinceTrackingBegan:
multipleTouchesEndsTracking
imageName
fullScreenImageName
setFullScreenImageName:
inlineImageName
setInlineImageName:
fullScreenAlternateImageName
setFullScreenAlternateImageName:
inlineAlternateImageName
setInlineAlternateImageName:
micaSnapshotAlpha
setMicaSnapshotAlpha:
disablesHighlightWhenLongPressed
setDisablesHighlightWhenLongPressed:
clampsHitRectInsetsWhenContainedInScrollableView
setClampsHitRectInsetsWhenContainedInScrollableView:
trackingStartTime
setTrackingStartTime:
wasForcePressTriggered
setWasForcePressTriggered:
horizontalTranslationOfLongPress
setHorizontalTranslationOfLongPress:
previousHorizontalPositionOfLongPress
setPreviousHorizontalPositionOfLongPress:
userInteractionGestureRecognizer
setUserInteractionGestureRecognizer:
backgroundEffectView
setBackgroundEffectView:
numberOfTouches
isHighlighted
setEffect:
alwaysBounceHorizontal
alwaysBounceVertical
buttonWithAccessibilityIdentifier:
setAdjustsImageWhenHighlighted:
_setVisualEffectViewEnabled:backgroundColor:
_loadingButtonView
loadingButtonView
setLoadingButtonView:
fontDescriptorWithSize:
fontWithName:size:
timeFontWithFont:
boldSystemFontOfSize:
italicSystemFontOfSize:
timeFontWithName:size:
timeFontOfSize:
boldTimeFontOfSize:
italicTimeFontOfSize:
monospacedTimeFontOfSize:
_linkFired
startDisplayLinkUpdatesForObserver:framesPerSecond:usingBlock:
linkFired:
runningTime
linkFired
setLinkFired:
setStartTime:
addToRunLoop:forMode:
setPreferredFramesPerSecond:
displayLinkWithTarget:selector:
_needsIntialLayout
_topAreaLayoutGuideExpanded
_customControlsView
_includedContainers
_volumeControlsContainer
_playbackControlsContainer
_screenModeControls
_volumeControls
_miniPlayPauseButtonBackdropView
_transportControlsContainerView
_fullScreenButton
_videoGravityButton
_pictureInPictureButton
_customDisplayModeItems
_volumeSlider
_customAudioItems
_miniPlayPauseButton
_transportControlsView
_customMediaItems
_defaultAudioControls
_defaultDisplayModeControls
_keyboardHeight
_keyboardUIAvoidanceAnimator
_volumeButtonBottomToLayoutMarginsGuideBottomConstraint
_volumeTopToLayoutGuideTopConstraint
_volumeTopToViewTopConstraint
_screenModeControlsToVolumeControlsSpacingConstraint
_playbackControlsVisibilityAnimator
_mostRecentAnimationCompletionsID
setupInitialLayout
setIncludedContainers:animations:
includesAudioControlsContainer
includesCustomAudioControls
includesTransportControls
includesDisplayModeControlsContainer
includesCustomDisplayModeControls
setCustomControlItems:animations:
animateAlongsideVisibilityAnimationsWithAnimationCoordinator:appearingViews:disappearingViews:
hasVisibleSubview
updateLayoutForChangedControlsVisibility
safeAreaInsetsDidChange
_preferredArrangedAudioModeViews
_preferredArrangedDisplayModeViews
_currentArrangedAudioModeViews
_currentArrangedDisplayModeViews
_audioViewsToRemoveDuringAnimation
_displayModeViewsToRemoveDuringAnimation
_remove:views:
_remove:view:
_updatePlaybackControlsContainerVisibility:
_updateAreVolumeAndTransportControlsVisible
_updateDoubleRowLayoutEnabled
_setupInitialLayout
_updateLayoutMargins
_animateKeyboardAvoidance:duration:
_playbackControlsViewItems
_playbackControlsViewsForControlItems:withType:
_customControlsViewIfLoaded
includedContainers
volumeControlsContainer
playbackControlsContainer
screenModeControls
volumeControls
miniPlayPauseButtonBackdropView
transportControlsContainerView
fullScreenButton
videoGravityButton
pictureInPictureButton
customDisplayModeItems
volumeSlider
customAudioItems
miniPlayPauseButton
transportControlsView
customMediaItems
defaultAudioControls
defaultDisplayModeControls
keyboardHeight
setKeyboardHeight:
keyboardUIAvoidanceAnimator
volumeButtonBottomToLayoutMarginsGuideBottomConstraint
volumeTopToLayoutGuideTopConstraint
volumeTopToViewTopConstraint
screenModeControlsToVolumeControlsSpacingConstraint
needsIntialLayout
setNeedsIntialLayout:
playbackControlsVisibilityAnimator
setPlaybackControlsVisibilityAnimator:
mostRecentAnimationCompletionsID
setMostRecentAnimationCompletionsID:
isTopAreaLayoutGuideExpanded
setTopAreaLayoutGuideExpanded:
layoutMargins
updateConstraintsIfNeeded
setCompletionBlock:
unionOrderedSet:
minusOrderedSet:
orderedSetWithArray:
longValue
CGRectValue
bundle
bundleForClass:
localizedStringForKey:value:table:
avkit_constraintsFromCenterAnchorsToCenterAnchorsOfItem:
avkit_constraintsFromEdgeAnchorsToEdgeAnchorsOfItem:
avkit_constraintsFromCenterAndDimensionAnchorsToCenterAndDimensionAnchorsOfItem:
avkit_constraintsFromDimensionAnchorsToSize:
leadingAnchor
trailingAnchor
leftAnchor
rightAnchor
topAnchor
bottomAnchor
widthAnchor
heightAnchor
centerXAnchor
centerYAnchor
avkit_constraintEqualToAnchor:priority:
constraintGreaterThanOrEqualToAnchor:
avkit_constraintGreaterThanOrEqualToAnchor:priority:
avkit_constraintLessThanOrEqualToAnchor:priority:
avkit_constraintEqualToAnchor:constant:priority:
avkit_constraintGreaterThanOrEqualToAnchor:constant:priority:
avkit_constraintLessThanOrEqualToAnchor:constant:priority:
constraintGreaterThanOrEqualToConstant:
constraintLessThanOrEqualToConstant:
avkit_constraintEqualToConstant:priority:
avkit_constraintGreaterThanOrEqualToConstant:priority:
avkit_constraintLessThanOrEqualToConstant:priority:
avkit_constraintsFromEdgesOfItem:toLeadingAnchor:topAnchor:trailingAnchor:bottomAnchor:priority:
avkit_constraintsFromEdgesOfItem:toEdgesOfItem:
avkit_constraintsFromLeadingAndTrailingEdgesOfItem:toEdgesOfItem:
avkit_constraintsFromTopAndBottomEdgesOfItem:toEdgesOfItem:
constraintEqualToConstant:
avkit_title
shortLocalizedDisplayName
mediaRemoteIdentifier
avkit_offOption
avkit_autoOption
localizedDisplayName
v20@0:8B16
@40@0:8{CGPoint=dd}16@32
B16@0:8
@"NSString"
@"UIView"
@"AVPlayer"
@"<AVPlayerViewControllerDelegate>"
@"AVPlayerViewController"
@"AVButton"
@"AVBackdropView"
@"AVStyleSheet"
@"AVAppStorePlayerLayerView"
@"NSMutableDictionary"
@"AVObservationController"
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v16@0:8
v24@0:8@16
v24@0:8q16
v32@0:8@16Q24
v24@0:8@?16
v24@0:8d16
@16@0:8
@?16@0:8
q16@0:8
#16@0:8
@"<AVContentOverlayViewDelegate>"
B24@0:8Q16
v28@0:8q16B24
@"_AVSimplePlayerLayerView"
@"<AVPictureInPicturePlatformAdapterDelegate>"
@"AVPlayerController"
@"AVPictureInPictureViewController"
@"PGPictureInPictureProxy"
@"NSTimer"
@"AVSecondScreenConnection"
@"UIWindow"
@"<AVPictureInPictureContentSource>"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
B24@0:8@16
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
q24@0:8@"PGPictureInPictureProxy"16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@"PGPictureInPictureProxy"16
@"UIWindow"24@0:8@"PGPictureInPictureProxy"16
v32@0:8@"PGPictureInPictureProxy"16q24
v40@0:8@"PGPictureInPictureProxy"16q24@"NSError"32
v32@0:8@"PGPictureInPictureProxy"16@?<v@?B>24
v40@0:8@"PGPictureInPictureProxy"16q24q32
v24@0:8@"PGPictureInPictureProxy"16
q24@0:8@16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16
@24@0:8@16
v32@0:8@16q24
v40@0:8@16q24@32
v32@0:8@16@?24
v40@0:8@16q24q32
v24@0:8@"AVPictureInPictureViewController"16
v36@0:8d16f24@28
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"AVPictureInPicturePlayerLayerView"
@"AVPlayerLayer"
{CGSize=dd}16@0:8
d16@0:8
@"UISelectionFeedbackGenerator"
@"NSMutableArray"
@"<AVScrubberDelegate>"
@"NSArray"
@"UIScrollView"
@"UIImageView"
{CGSize="width"d"height"d}
{NSDirectionalEdgeInsets="top"d"leading"d"bottom"d"trailing"d}
B32@0:8{CGPoint=dd}16
v24@0:8@"UIScrollView"16
v48@0:8@"UIScrollView"16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@"UIScrollView"16B24
@"UIView"24@0:8@"UIScrollView"16
v32@0:8@"UIScrollView"16@"UIView"24
v40@0:8@"UIScrollView"16@"UIView"24d32
B24@0:8@"UIScrollView"16
v48@0:8@16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@16B24
v32@0:8@16@24
v40@0:8@16@24d32
f16@0:8
v32@0:8{CGSize=dd}16
v20@0:8f16
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGRect={CGPoint=dd}{CGSize=dd}}84@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGRect={CGPoint=dd}{CGSize=dd}}48f80
B32@0:8@16@24
{UIEdgeInsets=dddd}16@0:8
B40@0:8{CGPoint=dd}16@32
{CGPoint=dd}16@0:8
{NSDirectionalEdgeInsets=dddd}16@0:8
v48@0:8{NSDirectionalEdgeInsets=dddd}16
B28@0:8B16d20
@"UIImage"
@24@0:8^{_NSZone=}16
@56@0:8d16d24Q32@40@?48
@32@0:8d16@24
v36@0:8@16@24B32
q40@0:8@16@24@32
@"UIView<AVScrollViewObserverContentView>"
@"NSHashTable"
@"NSNumber"
@"AVVolumeWarningView"
v24@0:8f16B20
@"UIViewPropertyAnimator"
@"AVNewsWidgetPlayerBehaviorContext"
v24@0:8@"<AVBehaviorContext>"16
@24@0:8q16
@"NSMutableSet"
@32@0:8@16:24
@"AVHomeIPCameraBehaviorContext"
@"UIPanGestureRecognizer"
@"<AVTransitionDriverDelegate>"
@"UIPinchGestureRecognizer"
@"UIRotationGestureRecognizer"
{CGPoint="x"d"y"d}
B32@0:8@"<AVTransitionDriver>"16@"UIGestureRecognizer"24
@"<AVTransitionDriverDelegate>"16@0:8
v24@0:8@"<AVTransitionDriverDelegate>"16
@"UIPanGestureRecognizer"16@0:8
v24@0:8@"UIPanGestureRecognizer"16
v24@0:8@"UIView"16
@"UIView"16@0:8
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
v32@0:8{CGPoint=dd}16
@"NSMutableOrderedSet"
@32@0:8@16@24
@24@0:8@?16
@"<UIViewControllerContextTransitioning>"
@"AVFullScreenViewController"
@"AVPresentationContextTransition"
@"AVPresentationController"
@"NSObject<OS_dispatch_queue>"
v32@0:8@16d24
I28@0:8I16@20
^v24@0:8@16
@"AVStatusBarBackgroundGradientViewSubview"
@"AVMusicAppBehaviorContext"
@"AVMusicAppBehavior"
@"AVPlayerViewController"16@0:8
v32@0:8@"AVPlayerViewController"16q24
v40@0:8{CGSize=dd}16@"<UIViewControllerTransitionCoordinator>"32
v24@0:8@"UIViewController"16
@"UIView<AVPlaybackContentContainer>"56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@"AVPlaybackContentContainerView"48
v40@0:8{CGSize=dd}16@32
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
v24@0:8@"<AVBehavior>"16
@40@0:8@16{CGSize=dd}24
@"UIWindowScene"
@"UIScreen"
@"CADisplay"
v28@0:8B16@?20
@"UIActivityIndicatorView"
@"AVSystemController"
v36@0:8@"NSString"16B24@"NSString"28
v24@0:8@"NSString"16
v36@0:8@16B24@28
v28@0:8B16@20
@"AVZoomingBehaviorContext"
@"NSLayoutConstraint"
@"UILayoutGuide"
B24@0:8@?16
v56@0:8{CGPoint=dd}16@32N^@40N^d48
{CGRect={CGPoint=dd}{CGSize=dd}}40@0:8{CGPoint=dd}16d32
@"UIFont"
@"UITraitCollection"
@28@0:8@16B24
{UIEdgeInsets=dddd}36@0:8@16d24B32
@"AVEditBehaviorContext"
@"<AVEditBehaviorDelegate>"
@"NSDictionary"
@"AVPictureInPictureController"
@"UIPopoverPresentationController"
@"AVTransitionController"
@"AVPlaybackControlsVisibilityController"
@"AVPlaybackControlsController"
@"AVPlayerView"
@"NSValue"
{CGAffineTransform="a"d"b"d"c"d"d"d"tx"d"ty"d}
@"AVContentOverlayView"
@"AVBehaviorStorage"
@"UIGestureRecognizer"
@"AVPlayerControllerVolumeAnimator"
@"__AVPlayerLayerView"
v24@0:8@"AVContentOverlayView"16
@"AVPlayerController"24@0:8@"AVPlayerController"16
@"AVPictureInPictureViewController"16@0:8
@"UIWindow"16@0:8
v32@0:8@"AVTransitionController"16@"UIViewController"24
@"UIView"32@0:8@"AVTransitionController"16@"UIViewController"24
B40@0:8@"AVTransitionController"16@"UIGestureRecognizer"24@"UITouch"32
@"UIColor"24@0:8@"AVTransitionController"16
B24@0:8@"AVTransitionController"16
v24@0:8@"AVTransitionController"16
v32@0:8@"AVTransitionController"16@?<v@?>24
v28@0:8@"AVTransitionController"16B24
v28@0:8@"AVTransitionController"16f24
B40@0:8@16@24@32
v28@0:8@16f24
v24@0:8@"AVFullScreenViewController"16
@"UIView"24@0:8@"AVFullScreenViewController"16
v48@0:8@"AVFullScreenViewController"16{CGSize=dd}24@"<UIViewControllerTransitionCoordinator>"40
B24@0:8@"AVFullScreenViewController"16
q24@0:8@"AVFullScreenViewController"16
@"UIResponder"24@0:8@"AVFullScreenViewController"16
v48@0:8@16{CGSize=dd}24@40
v32@0:8@"AVPlaybackControlsVisibilityController"16@"<UIViewImplicitlyAnimating>"24
v48@0:8@"AVPlaybackControlsVisibilityController"16@"<AVPlayerViewControllerAnimationCoordinator>"24@"NSArray"32@"NSArray"40
v48@0:8@16@24@32@40
v24@0:8@"UIPopoverPresentationController"16
B24@0:8@"UIPopoverPresentationController"16
v40@0:8@"UIPopoverPresentationController"16N^{CGRect={CGPoint=dd}{CGSize=dd}}24N^@32
v40@0:8@16N^{CGRect={CGPoint=dd}{CGSize=dd}}24N^@32
q24@0:8@"UIPresentationController"16
q32@0:8@"UIPresentationController"16@"UITraitCollection"24
@"UIViewController"32@0:8@"UIPresentationController"16q24
v40@0:8@"UIPresentationController"16q24@"<UIViewControllerTransitionCoordinator>"32
B24@0:8@"UIPresentationController"16
v24@0:8@"UIPresentationController"16
q32@0:8@16@24
@32@0:8@16q24
v24@0:8@"AVPictureInPictureController"16
v32@0:8@"AVPictureInPictureController"16@"NSError"24
v32@0:8@"AVPictureInPictureController"16@?<v@?B>24
@40@0:8@16@24@32
v36@0:8q16B24@?28
v32@0:8B16B20@?24
v24@0:8Q16
v32@0:8Q16@24
{CGAffineTransform=dddddd}16@0:8
v64@0:8{CGAffineTransform=dddddd}16
@"AVEditBehavior"
@"AVEditBehaviorParameters"
@"AVZoomingBehavior"
@"AVEditView"
@"AVAssetImageGenerator"
@"UIToolbar"
@"UIBarButtonItem"
v24@0:8@"AVEditView"16
v32@0:8@"AVEditView"16d24
d24@0:8@"AVEditView"16
v32@0:8@"AVEditView"16@"NSNumber"24
d24@0:8@16
@"<AVFullScreenViewControllerDelegate>"
@"<AVPictureInPictureViewControllerDelegate>"
@"UILabel"
@"UIStackView"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
{?=dd}16@0:8
@40@0:8d16d24d32
d24@0:8d16
@"UIScene"
@"AVSecondScreenViewController"
@"AVPresentationContext"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@48@0:8@16@24B32B36@?40
@44@0:8@16@24B32@?36
@40@0:8@16@24@?32
v48@0:8@16@24@32@?40
@48@0:8@16@24@32@40
@"NSSet"
@60@0:8@16@24@32B40B44B48@?52
v48@0:8@16@24@32^v40
v56@0:8@16@24@32@40^v48
@"AVHomeIPCameraBehavior"
@"AVHomeIPCameraPlayerController"
v32@0:8d16d24
@"AVStatusBarBackgroundGradientView"
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@"AVPlaybackContentContainerView"48
@"AVPlaybackContentContainerView"16@0:8
@64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48@56
@"AVPlaybackContentContainerView"
{CGSize=dd}48@0:8@16d24{CGSize=dd}32
{CGSize=dd}24@0:8d16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8d16
@"<AVEditViewDataSource>"
@"<AVEditViewDelegate>"
@"UIMovieScrubber"
v32@0:8@"UIMovieScrubber"16d24
v28@0:8@"UIMovieScrubber"16i24
v32@0:8@"UIMovieScrubber"16f24f28
v24@0:8@"UIMovieScrubber"16
v40@0:8@"UIMovieScrubber"16d24d32
v28@0:8@16i24
v32@0:8@16f24f28
v40@0:8@16d24d32
d24@0:8@"UIMovieScrubber"16
@"NSArray"44@0:8@"UIMovieScrubber"16i24@"NSNumber"28@"NSNumber"36
v32@0:8@"UIMovieScrubber"16@"NSNumber"24
v36@0:8@"UIMovieScrubber"16@"NSNumber"24B32
@44@0:8@16i24@28@36
v32@0:8^{CGImage=}16@24
@"<AVPlaybackContentTransitioningViewDelegate>"
v40@0:8@16@24@32
B32@0:8q16q24
@"AVMediaSelectionOption"
q32@0:8@16q24
v40@0:8@16@24q32
@"AVMediaSelectionTableViewController"
@40@0:8@16@24:32
@"<AVPictureInPictureControllerDelegate>"
@"AVPictureInPicturePlatformAdapter"
v32@0:8@"AVPictureInPicturePlatformAdapter"16@"NSError"24
v32@0:8@"AVPictureInPicturePlatformAdapter"16@?<v@?B>24
v24@0:8@"AVPictureInPicturePlatformAdapter"16
v28@0:8@"AVPictureInPicturePlatformAdapter"16B24
v32@0:8@"AVPictureInPicturePlatformAdapter"16q24
v40@0:8@"AVPictureInPicturePlatformAdapter"16q24q32
@"UIColor"
@"AVPlayerViewControllerContentView"
@"MPMediaControls"
^{opaqueCMFormatDescription=}
{CVSMPTETime="subframes"s"subframeDivisor"s"counter"I"type"I"flags"I"hours"s"minutes"s"seconds"s"frames"s}
{?="value"q"timescale"i"flags"I"epoch"q}
{CVSMPTETime=ssIIIssss}16@0:8
v40@0:8{CVSMPTETime=ssIIIssss}16
{?=qiIq}16@0:8
v40@0:8{?=qiIq}16
I16@0:8
v20@0:8I16
^{opaqueCMFormatDescription=}16@0:8
v24@0:8^{opaqueCMFormatDescription=}16
@"AVAssetTrack"
q40@0:8{?=qiIq}16
@32@0:8^{opaqueCMFormatDescription=}16q24
{CVSMPTETime=ssIIIssss}24@0:8q16
{CVSMPTETime=ssIIIssss}40@0:8q16q24@32
q24@0:8d16
d24@0:8q16
v24@0:8^{opaqueCMSampleBuffer=}16
B40@0:8{?=qiIq}16
@"AVCABackdropLayerView"
@"UIButton"
@"AVMicaPackage"
@"<AVRoutePickerViewDelegate>"
v28@0:8d16B24
Q24@0:8@"AVRoutePickerView"16
@"NSString"24@0:8@"AVRoutePickerView"16
Q24@0:8@16
v24@0:8@"AVRoutePickerView"16
@"NSAttributedString"
{NSEdgeInsets="top"d"left"d"bottom"d"right"d}
@"CATextLayer"
@"CALayer"
@36@0:8d16^{CGImage=}24B32
@"<AVTimeControlling>"
@"AVTimer"
@"AVPlaybackContentZoomingView"
@"UITapGestureRecognizer"
@"AVNewsWidgetPlayerBehavior"
@"AVPlaybackContentTransitioningView"
B40@0:8@"AVPlaybackContentTransitioningView"16{CGPoint=dd}24
B32@0:8@"AVPlaybackContentTransitioningView"16q24
@"AVPlaybackContentContainerView"24@0:8@"AVPlaybackContentTransitioningView"16
v48@0:8@"AVPlaybackContentTransitioningView"16q24q32d40
B40@0:8@16{CGPoint=dd}24
B32@0:8@16q24
v48@0:8@16q24q32d40
q24@0:8q16
@"<AVPlayerViewControllerContentTransitioning_NewsOnly>"
@"<AVTransitionDelegate>"
@"<UIViewControllerContextTransitioningEx>"
v56@0:8d16d24{CGPoint=dd}32d48
{CGAffineTransform=dddddd}96@0:8d16{CGPoint=dd}24d40{CGPoint=dd}48{CGRect={CGPoint=dd}{CGSize=dd}}64
@"CAStateController"
v32@0:8@"CAStateController"16@"CALayer"24
v36@0:8@"CAStateController"16@"CAStateTransition"24f32
v36@0:8@"CAStateController"16@"CAStateTransition"24B32
v36@0:8@16@24f32
@32@0:8@"CAMLParser"16@"NSURL"24
v40@0:8@"CAMLParser"16@24@"NSURL"32
#32@0:8@"CAMLParser"16@"NSString"24
v44@0:8@"CAMLParser"16@"NSString"24@"NSURL"32I40
@44@0:8@"CAMLParser"16@"NSString"24@"NSURL"32I40
v48@0:8@"CAMLParser"16r*24[1{__va_list_tag=II^v^v}]32Q40
#32@0:8@16@24
v44@0:8@16@24@32I40
@44@0:8@16@24@32I40
v48@0:8@16r*24[1{__va_list_tag=II^v^v}]32Q40
v32@0:8@16^{CGColor=}24
v32@0:8^{CGColor=}16@24
v40@0:8@16q24@?32
@"AVVolumeButtonControl"
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8q16
v32@0:8@?<v@?>16@?<v@?B>24
v32@0:8@?16@?24
@"NSObject<OS_dispatch_source>"
@44@0:8d16@24@?32B40
@"AVSecondScreenDebugAssistant"
@"AVSecondScreen"
@"AVDisplayCriteria"
@"AVPresentationContainerViewAppearanceProxy"
{UIEdgeInsets=dddd}24@0:8q16
v36@0:8q16q24B32
@"<AVTransportControlsViewDelegate>"
@"AVScrubber"
@"AVLabel"
@"AVPlaybackControlsRoutePickerView"
@"AVTouchIgnoringView"
v24@0:8@"AVScrubber"16
@"NSMapTable"
@24@0:8#16
v40@0:8:16@24@?32
v40@0:8d16q24q32
v32@0:8d16q24
B24@0:8q16
@"<AVHomeIPCameraActionButtonHandling>"
@"<AVVolumeController>"
@"AVNowPlayingInfoController"
@"AVSecondScreenContentViewConnection"
@"AVPlaybackControlsView"
@"AVTurboModePlaybackControlsPlaceholderView"
@"AVPlayerControllerTimeResolver"
@"AVTimeFormatter"
@"UIAlertController"
@"AVRouteDetectorCoordinator"
@"NSUUID"
@"AVPlaybackControlsVisibilityControllerItem"
v32@0:8@"AVPlayerViewControllerContentView"16@"AVPlaybackControlsView"24
v32@0:8@"AVPlayerViewControllerContentView"16@"AVTurboModePlaybackControlsPlaceholderView"24
B24@0:8@"AVPlayerViewControllerContentView"16
v24@0:8@"AVPlayerViewControllerContentView"16
{UIEdgeInsets=dddd}24@0:8@"AVPlayerViewControllerContentView"16
@"NSNumber"24@0:8@"AVPlayerViewControllerContentView"16
{UIEdgeInsets=dddd}24@0:8@16
v24@0:8@"AVTransportControlsView"16
v32@0:8@"AVTransportControlsView"16@"AVScrubber"24
v40@0:8@16@24@?32
v40@0:8d16d24d32
v28@0:8B16B20B24
@"AVSecondScreenPlayerLayerView"
@"<AVPlaybackControlsVisibilityControllerDelegate>"
d24@0:8@"<UIViewControllerContextTransitioning>"16
v24@0:8@"<UIViewControllerContextTransitioning>"16
@"<UIViewImplicitlyAnimating>"24@0:8@"<UIViewControllerContextTransitioning>"16
v28@0:8@"AVTransition"16B24
@"UIColor"24@0:8@"AVTransition"16
B40@0:8@"<AVTransitionDriver>"16@"UIGestureRecognizer"24@"UITouch"32
B32@0:8@"<AVTransitionDriver>"16q24
v40@0:8@"<AVTransitionDriver>"16q24@?<v@?>32
v24@0:8@"<AVTransitionDriver>"16
@"<UIViewControllerAnimatedTransitioning>"40@0:8@"UIViewController"16@"UIViewController"24@"UIViewController"32
@"<UIViewControllerAnimatedTransitioning>"24@0:8@"UIViewController"16
@"<UIViewControllerInteractiveTransitioning>"24@0:8@"<UIViewControllerAnimatedTransitioning>"16
@"UIPresentationController"40@0:8@"UIViewController"16@"UIViewController"24@"UIViewController"32
@"<AVTransitionControllerDelegate>"
@"<AVTransitionDriver>"
@"AVDisplayLink"
@"AVTransition"
@"AVInteractiveTransitionGestureTracker"
@"CAMediaTimingFunction"
v44@0:8@16@24B32@?36
v40@0:8@16B24B28@?32
@"AVValueTiming"
@"AVAsset"
@"AVTimecodeController"
^v16@0:8
v24@0:8^v16
v88@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64
@"UIVisualEffectView"
@52@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16B48
v32@0:8d16@24
v48@0:8@16@24d32@40
@"AVExternalPlaybackIndicatorView"
@"<AVPlayerViewControllerContentViewDelegate>"
@"UIView<AVPlaybackContentContainer>"
@"AVScrollViewObserver"
{UIEdgeInsets="top"d"left"d"bottom"d"right"d}
v24@0:8@"AVScrollViewObserver"16
v48@0:8{UIEdgeInsets=dddd}16
v32@0:8@"NSString"16@?<v@?>24
@"AVUserInteractionObserverGestureRecognizer"
@"AVLoadingButtonView"
@32@0:8@16d24
@24@0:8d16
@"CADisplayLink"
@"AVPlayerViewControllerCustomControlsView"
@"AVView"
@"AVVolumeSlider"
@"AVTransportControlsView"
v32@0:8q16@?24
v32@0:8q16d24
@"NSArray"24@0:8@"<AVKitLayoutItem>"16
@"NSArray"32@0:8{CGSize=dd}16
@"NSLayoutXAxisAnchor"16@0:8
@"NSLayoutYAxisAnchor"16@0:8
@"NSLayoutDimension"16@0:8
@32@0:8{CGSize=dd}16
@60@0:8@16@24@32@40@48f56
@28@0:8@16f24
@36@0:8@16d24f32
@28@0:8d16f24
