SAConnectionEventIdentifier
SAConnectionEventState
SAConnectionEventDate
EventType
SATimeEventDate
GeofenceEventRegion
GeofenceEventType
GeofenceEventDate
<unknown>
Inside
Outside
Entry
Exit
<invalid>
UUID
Device
WithYouStatus
ConnectionState
NotificationState
LatestAdvertisement
LastWithYouDate
RelatedDevices
Surfaced
FirstAdvertisement
CurrentScenarioTime
currentScenario
firstDetectedToNextScenarioTimeInterval
nextScenario
previousMonitoringState
scenarioChangeToFirstDetectedTimeInterval
com.apple.clx.alert.firstAdv
SADeviceIdentifier
SADeviceGroupIdentifier
SADevicePartIdentifier
SADeviceName
SADeviceModel
SADeviceSystemVersion
SADeviceVendorId
SADeviceProductId
SADeviceType
SADeviceNotifyEnabled
SADeviceIsAppleAudioAccessory
SADeviceDate
SADeviceMacAddress
MonitoringSessionRecord
SASafeLocationIdentifier
SASafeLocationLatitude
SASafeLocationLongitude
SASafeLocationRadius
SASafeLocationReferenceFrame
SASafeLocationNameString
SASafeLocationDate
SASafeLocationUpdateEventSafeLocation
SASafeLocationUpdateEventType
SASafeLocationUpdateEventLast
SASafeLocationUpdateEventDate
kSASafeLocationsEventKeySafeLocations
kSASafeLocationsEventKeyDate
process == 'locationd'
subsystem == 'com.apple.TrackingAvoidance'
category == 'SeparationAlertsEvents'
processID == %d
category == 'SeparationAlerts'
Error writing replay result to file
ReplayStatus: %s
Log stream stopped
Log stream started
Stream error: %@
Replaying with
StartDate: %@
EndDate: %@
Writing output to: %@
STREAM START TIMEOUT
REPLAY TIMEOUT
STREAM STOP TIMEOUT
HEX DESERIALIZATION EXCEPTION: %@
ERROR DESERIALIZING EVENT: %@
Got activity events from log archive
Error in replaying logarchive: %@
Finished fetching events from log archive
replaying:%@
Could not replay event %@
v8@?0
com.apple.tracking-avoidance
Status
Events
com.apple.TrackingAvoidance
SeparationAlerts
SeparationAlertsEvents
Unknown
NonVehicular
Vehicular
NonVehicular - Static
NonVehicular - Pedestrian
NonVehicular - Cycling
unsafe_
SADeviceUpdateEventDevice
SADeviceUpdateEventType
SADeviceUpdateEventLast
SADeviceUpdateEventDate
kSADevicesWithSafeLocationsEventKeyDevices
kSADevicesWithSafeLocationsEventKeySafeLocationIDs
kSADevicesWithSafeLocationsEventKeyDate
SAMonitoringSessionIdentifier
SAMonitoringSessionState
SAMonitoringSessionGeofence
SAMonitoringSessionScenario
SAMonitoringSessionTrackedTravelingStartDate
SAMonitoringSessionTrackedTravelingStartLocation
iPhone
iPad
MacBook
left
right
unsafe_%@
TrackedInUnsafeLocation
TrackedTraveling
Untracked
Separated
SeparationVerification
EndMonitoring
com.apple.clx.separationalerts.scan
scanType
isPartOfLongScan
scanDuration
relevantOnlyScanDuration
foundExtraHELECount
extraHELEScanDuration
foundExtraNonHELECount
extraNonHELEScanDuration
longScanContext
WithYou
NotWithYou
WithYouToBeVerified
NotWithYouToBeVerified
UnsafeExit
EndOfTravel
TravelingGeofenceExit
StandbyExit
NewMonitoredDeviceAdded
AirplaneModeToggle
EarlyVehicularTrigger
RetryScan
WatchScenarioTransition
EnableWithDevicesNeedingTransition
v16@?0@"NSSet"8
Watch
v24@?0@"SPBeaconGroup"8@"NSError"16
v24@?0@"RTLocationOfInterest"8@"NSError"16
v24@?0@"NSArray"8@"NSError"16
vector
/var/root/Library/Caches/locationd/TrackingAvoidance/
separationalerts.bin
com.apple.tracking-avoidance.NSJSONSerializationNSString
Invalid dictionary for JSON serialization
Refer to NSJSONSerialization spec for valid dictionaries
NSJSONSerialization failed
inSafeLocation
inUnsafeLocation
Traveling
%@%@
DeviceRecord
SAAudioAccessory
com.apple.clx.alert.heartbeats
numAlerts
numAlertsLeftBehind
numAlertsTraveling
numEnabled
numItems
numAccessories
numBTLE
numDevices
numiPhone
numiPad
numMacBook
numAirPods
numSafe
numSafeInUse
isAllUsingSameSafe
numBTRequests
numBTLeftBehindRequests
numBTTravelingRequests
numGpsRequests
numWifiRequests
numTimers
numDevicesAtSafeExit
numUnsafe
numUnsafeWithLOI
numUnsafeWithoutLOI
aggActiveDuration
aggInSafeDuration
aggInUnsafeDuration
aggInTravelDuration
totalScanDuration
totalScanDurationForFindingRelevantItemsOnly
%@ instance failed to create description:%@
{"msg%{public}.0s":"#SATravelTypeClassifier handleVehicleState", "curr":"%{private}s", "new":"%{private}s", "hints":"%{private}s"}
{"msg%{public}.0s":"#SATravelTypeClassifier handleUserActivity", "curr":"%{private}s", "new":"%{private}s"}
{"msg%{public}.0s":"#SATravelTypeClassifier notifyTravelTypeChange", "from":"%{private}s", "to":"%{private}s"}
{"msg%{public}.0s":"#sa #fencemgr, Could not find region for safe location"}
{"msg%{public}.0s":"#sa #fencemgr, Safe location already used for this device"}
{"msg%{public}.0s":"#sa #fencemgr, Safe location state should have been set to unknown at least"}
{"msg%{public}.0s":"#sa #fencemgr, Can't remove a non-existent safe location"}
{"msg%{public}.0s":"#sa #fencemgr, Unsafe location already used for this device"}
{"msg%{public}.0s":"#sa #fencemgr, Unsafe location state should have been set to unknown at least"}
{"msg%{public}.0s":"#sa #fencemgr, Can't remove a non-existent unsafe location"}
{"msg%{public}.0s":"#sa #fencemgr handleFenceEvent for unsafe location not in dictionary", "deviceUUID":"%{private}@"}
{"msg%{public}.0s":"#sa #fencemgr, region monitoring error", "regionUUID":"%{private}@"}
{"msg%{public}.0s":"#sa #fencemgr, notify state for safe", "regionUUID":"%{private}s", "Clients":%{private}ld, "Found":"%{private}s"}
{"msg%{public}.0s":"#sa #fencemgr, notify state for unsafe", "regionUUID":"%{private}s", "Clients":%{private}ld}
{"msg%{public}.0s":"#SAMonitoringSessionManager request to start scanning"}
{"msg%{public}.0s":"#SAMonitoringSessionManager request to stop scanning"}
{"msg%{public}.0s":"#SAMonitoringSessionManager bootstraped from persisted data", "uuid":"%{private}@", "state":"%{private}@", "scenario":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager requesting terminable long scan on enable with devices needing transition", "count of devices needing transition":%{private}ld}
{"msg%{public}.0s":"#SAMonitoringSessionManager enabling sa"}
{"msg%{public}.0s":"#SAMonitoringSessionManager disabling sa"}
{"msg%{public}.0s":"#SAMonitoringSessionManager createMonitoringDevice nil UUID"}
{"msg%{public}.0s":"#SAMonitoringSessionManager createMonitoringDevice while not enabled"}
{"msg%{public}.0s":"#SAMonitoringSessionManager createMonitoringDevice monitoring session already exists", "uuid":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager createMonitoringDevice", "uuid":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager cancelMonitoringDevice nil UUID"}
{"msg%{public}.0s":"#SAMonitoringSessionManager cancelMonitoringDevice monitoring session does not exist", "uuid":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager canceled monitoring session", "uuid":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager attemptToPopulateTrackedTravelingStartLocationForDevice not in one of the traveling states", "uuid":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager attemptToPopulateTrackedTravelingStartLocationForDevice already set", "uuid":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager attemptToPopulateTrackedTravelingStartLocationForDevice lastLocation is not recent enough, adding to set to be populated", "uuid":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager changeMonitoringSessionState UUID doesn't map to monitoring session", "uuid":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager changeMonitoringSessionState no state change necessary", "uuid":"%{private}@", "fromState":"%{private}@", "toState":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager changeMonitoringSessionState", "uuid":"%{private}@", "fromState":"%{private}@", "toState":"%{private}@"}
{"msg%{public}.0s":"#sa check in ear status received unknown audioAccessoryManager"}
{"msg%{public}.0s":"#sa check in ear status received unknown macAddress"}
{"msg%{public}.0s":"#sa received in ear status", "macAddress":"%{private}@", "primary":%{private}ld, "secondary":%{private}ld}
{"msg%{public}.0s":"#sa received primary bud side", "bud side":%{private}ld}
{"msg%{public}.0s":"#sa Service tried to notify with no corresponding device", "uuid":"%{private}@"}
{"msg%{public}.0s":"SAMonitoringSessionManager in ear status before notifying", "state":%{private}ld}
{"msg%{public}.0s":"#sa separation for classically connected device", "device":"%{private}@"}
{"msg%{public}.0s":"#sa notify separation", "uuid":"%{private}@", "name":"%{private}@", "type":%{private}ld}
{"msg%{public}.0s":"#SAMonitoringSessionManager travel exit while in standby"}
{"msg%{public}.0s":"#SAMonitoringSessionManager is only monitoring disconnected companion device, skipping force update all WithYouStatus"}
{"msg%{public}.0s":"#SAMonitoringSessionManager unable to set while traveling fence due to no session", "uuid":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager unable to set while traveling fence due to no last location", "uuid":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager unable to remove while traveling fence due to no session", "uuid":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager standby notify"}
{"msg%{public}.0s":"#SAMonitoringSessionManager unable to notify while traveling due to no session", "uuid":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager notifyWhileTraveling with nil location"}
{"msg%{public}.0s":"#SAMonitoringSessionManager unable to notify when left behind due to no session", "uuid":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager notifyWhenLeftBehind without suggesting location"}
{"msg%{public}.0s":"#SAMonitoringSessionManager standby notify early"}
{"msg%{public}.0s":"#SAMonitoringSessionManager unable to notify early left behind due to no session", "uuid":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager unable to create/recommend location", "uuid":"%{private}@", "context":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager new device", "uuid":"%{private}@", "name":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager remove device", "uuid":"%{private}@", "name":"%{private}@"}
#SAMonitoringSessionManager found removed location, for deviceId, %{private}@
#SAMonitoringSessionManager attempted adding non-existing location, for deviceId, %{private}@
{"msg%{public}.0s":"#SAMonitoringSessionManager update safe locations", "device":"%{private}@", "count":%{private}ld}
{"msg%{public}.0s":"#SAMonitoringSessionManager start location error", "location":"%{private}@", "device":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager start location device error", "device":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager start location", "location":"%{private}@", "device":"%{private}@", "refFrame":%{private}lu}
{"msg%{public}.0s":"#SAMonitoringSessionManager stop location error", "location":"%{private}@", "device":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager stop location device error", "device":"%{private}@"}
#SAMonitoringSessionManager stop location %{private}@ for device %{private}@
#SAMonitoringSessionManager found unpaired device, clearing deviceId, %{private}@
#SAMonitoringSessionManager found unpaired device in monitoring session record, clearing deviceId, %{private}@
{"msg%{public}.0s":"#SAMonitoringSessionManager no tracked traveling start date"}
{"msg%{public}.0s":"#SAMonitoringSessionManager shouldIssueBookendedNotificationBasedOnTimeForDevice", "min travel satisified":%{private}hhd, "min duration after persistence":%{private}hhd}
{"msg%{public}.0s":"#SAMonitoringSessionManager shouldIssueBookendedNotificationForDevice", "based on location":%{private}hhd, "based on time":%{private}hhd}
{"msg%{public}.0s":"#SAMonitoringSessionManager update devices", "count":%{private}ld}
{"msg%{public}.0s":"#SAMonitoringSessionManager update safe locations", "count":%{private}ld}
{"msg%{public}.0s":"#SAMonitoringSessionManager updateLocation update criteria not satisfied", "lastLocation":"%{private}@", "newLocation":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager updateLocation updated", "lastLocation":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager updateLocation populating tracked traveling start location", "device count":%{private}lu}
{"msg%{public}.0s":"#SAMonitoringSessionManager updateLocation populating tracked traveling start location", "device":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager handleGeofenceEvent invalid geofenceEvent", "geofence":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager handleGeofenceEvent received geofenceEvent", "geofence":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager handleGeofenceEvent geofenceEvent cannot be mapped to monitoring session", "geofence":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager handleGeofenceEvent ignored (recent crash?)", "geofence":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager removeDisableReason", "reason":%{private}lu}
{"msg%{public}.0s":"#SAMonitoringSessionManager addDisableReason", "reason":%{private}lu}
{"msg%{public}.0s":"#SAMonitoringSessionManager requesting terminable long aggressive scan on Airplane Mode toggle", "count of devices to find":%{private}ld}
{"msg%{public}.0s":"#SAMonitoringSessionManager didChangeScenarioClass end monitoring skip"}
{"msg%{public}.0s":"#SAMonitoringSessionManager didChangeScenarioClass", "sessionState":"%{private}@", "fromScenario":"%{private}@", "toScenario":"%{private}@", "uuid":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager not requesting aggressive scan, entering safe location for device", "uuid":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager requesting short aggressive scan, exiting safe location for device", "uuid":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager requesting a terminable long aggressive scan to find tracked device when exiting unsafe location", "uuid":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager requesting short aggressive scan, exiting unsafe location and device is not tracked", "uuid":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager requesting a terminable long aggressive scan to find tracked device when ending traveling scenario", "uuid":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager requesting short aggressive scan, ending traveling scenario and device is not tracked", "uuid":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager removing currentVisitOrLOIEvent due to scenario change", "currentVisitOrLOIEvent":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager got unknown with-you status", "uuid":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager got to be verified with-you status at the end of a force update", "uuid":"%{private}@", "status":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager updatedWithYouStatus", "sessionState":"%{private}@", "fromStatus":"%{private}@", "toStatus":"%{private}@", "scenario":"%{private}@", "uuid":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager Unknown signal state", "sessionState":"%{private}@", "fromStatus":"%{private}@", "toStatus":"%{private}@", "uuid":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager session already finished", "sessionState":"%{private}@", "uuid":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager travel bookending into a safe location", "uuid":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager issuing travel bookending notification into an unsafe location", "uuid":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager not issuing travel bookending notification into an unsafe location", "uuid":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager received unexpected status in verification stage", "uuid":"%{private}@", "status":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager received unexpected status in left location stage", "uuid":"%{private}@", "status":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager lost from unsafe to safe", "uuid":"%{private}@"}
{"msg%{public}.0s":"SAMonitoringSessionManager schedule retry scan", "uuid":"%{private}@", "alertType":%{private}ld, "withYouStatus":%{private}ld}
{"msg%{public}.0s":"SAMonitoringSessionManager alarm fired while not standby, requesting a terminable long aggressive scan", "devices pending transition count":%{private}ld}
{"msg%{public}.0s":"SAMonitoringSessionManager alarm fired while standby, requesting short aggressive scan"}
{"msg%{public}.0s":"SAMonitoringSessionManager device found in monitoringSession list, but not in devices list"}
{"msg%{public}.0s":"#SAMonitoringSessionManager requesting terminable long aggressive scan on travel type change", "count of devices to find":%{private}ld}
{"msg%{public}.0s":"#sa #withyou at least one device not found yet", "uuid":"%{private}@"}
{"msg%{public}.0s":"#sa #withyou all devices found"}
{"msg%{public}.0s":"#sa #withyou at least one sa enabled device not found yet", "uuid":"%{private}@"}
{"msg%{public}.0s":"#sa #withyou all sa enabled devices found"}
{"msg%{public}.0s":"#sa #withyou skip requesting scan - leash-only"}
{"msg%{public}.0s":"#sa #withyou requesting scan to force update withyou status"}
{"msg%{public}.0s":"#sa #withyou force update to find devices", "device list":"%{private}@", "context":"%{private}s"}
{"msg%{public}.0s":"#sa #withyou devices to find", "devices to find":"%{private}@", "devices found":"%{private}@"}
{"msg%{public}.0s":"#sa #withyou some remaining devices to find, requesting long aggressive scan if not already ongoing"}
{"msg%{public}.0s":"#sa #withyou no more devices to find, recording time of last device found for metrics"}
{"msg%{public}.0s":"#sa #withyou some remaining sa enabled devices to find, requesting long aggressive scan if not already ongoing"}
{"msg%{public}.0s":"#sa #withyou no more sa enabled devices to find while long scan is ongoing, requesting to stop long aggressive scan"}
{"msg%{public}.0s":"#sa #withyou skip requesting short scan - leash-only"}
{"msg%{public}.0s":"#sa #withyou requesting short scan to force update withyou status"}
{"msg%{public}.0s":"#sa #withyou status updated connection state changed", "uuid":"%{private}@", "oldStatus":"%{private}@", "newStatus":"%{private}@"}
{"msg%{public}.0s":"#sa #withyou found new device", "uuid":"%{private}@"}
{"msg%{public}.0s":"#sa #withyou no more devices to find while long scan is ongoing, recording time of last device found for metrics"}
{"msg%{public}.0s":"#sa #withyou status updated observed advertisement", "uuid":"%{private}@", "oldStatus":"%{private}@", "newStatus":"%{private}@"}
{"msg%{public}.0s":"#sa #withyou detected a device with more than maximum allowable related beacons", "uuid":"%{private}@", "count":%{private}ld}
{"msg%{public}.0s":"#sa #withyou status updated observed advertisement from related device", "uuid":"%{private}@", "oldStatus":"%{private}@", "newStatus":"%{private}@"}
{"msg%{public}.0s":"#sa #withyou trying to get status bit of related device at out of bound index"}
{"msg%{public}.0s":"#sa #withyou status updated end of scan", "uuid":"%{private}@", "oldStatus":"%{private}@", "newStatus":"%{private}@"}
{"msg%{public}.0s":"#sa #withyou status updated on adv buffer empty event", "uuid":"%{private}@", "oldStatus":"%{private}@", "newStatus":"%{private}@"}
{"msg%{public}.0s":"#sa #withyou travel type change", "from":"%{private}@", "to":"%{private}@"}
#sa ServiceMgr received unknown device type, %{private}@
{"msg%{public}.0s":"#sa ServiceMgr FetchSafe", "uuid":"%{private}@", "name":"%{private}@", "lat":"%{private}f", "lon":"%{private}f", "radius":"%{public}f", "refFrame":%{private}lu}
#sa ServiceMgr endFetchSafe, %{public}d
{"msg%{public}.0s":"#sa ServiceMgr FetchBeaconGroup", "device":"%{private}@", "macAddress":"%{private}@"}
{"msg%{public}.0s":"#sa ServiceMgr FetchSafeForBeacon", "device":"%{private}@", "uuid":"%{private}@", "name":"%{private}@", "lat":"%{private}f", "lon":"%{private}f", "radius":"%{public}f", "refFrame":%{private}lu}
{"msg%{public}.0s":"#sa ServiceMgr FetchAll", "name":"%{private}@", "device":"%{private}@", "type":"%{private}@", "safes":"%{private}@"}
#sa ServiceMgr endFetchBeaconsSafe, %{public}d
#sa ServiceMgr endFetchAll %{public}d, types, %{public}d
{"msg%{public}.0s":"#manager:visit not ingesting TAEvent as SA service is down"}
{"msg%{public}.0s":"#manager:visit no last visit to bootstrap onto"}
{"msg%{public}.0s":"#manager:visit got last visit", "visits":"%{private}@"}
{"msg%{public}.0s":"#sa #loi error fetching LOI", "visit":"%{private}@", "error":"%{public}@"}
{"msg%{public}.0s":"#sa #loi received nil in return when fetching LOI", "visit":"%{private}@", "loiIdentifier":"%{private}@"}
{"msg%{public}.0s":"#sa #loi received LOI", "loi":"%{private}@", "loiIdentifier":"%{private}@"}
#sa ServiceMgr enableMonitoringForSeparations: %{public}d
#sa ServiceMgr notifyAboutDevices:%{private}ld
#sa ServiceMgr requestBluetoothScan:%{private}#lx
#sa ServiceMgr requestLocationForType:%{private}#lx
#sa ServiceMgr addGeofence
#sa ServiceMgr removeGeofence
#sa ServiceMgr requestStateForRegion
#sa ServiceMgr scheduleSATimeEvent:%{public}#lf
{"msg%{public}.0s":"#sa ServiceMgr cancelSATimeEventForAlarm", "uuid":"%{public}@"}
{"msg%{public}.0s":"#sa ServiceMgr startBackgroundScanning"}
{"msg%{public}.0s":"#sa ServiceMgr stopBackgroundScanning"}
{"msg%{public}.0s":"#sa ServiceMgr stopLongAggressiveScan"}
{"msg%{public}.0s":"#sa ServiceMgr fetchLastVisit"}
{"msg%{public}.0s":"#SATime alarm fired", "uuid":"%{private}@", "alarmDate":"%{private}@", "client":"%{private}@"}
{"msg%{public}.0s":"#SATime received event with future date", "Event":"%{private}@"}
{"msg%{public}.0s":"#SAPersistenceManager encountered error in creating directory", "error":"%{private}s"}
{"msg%{public}.0s":"#SAPersistenceManager file does not exist"}
{"msg%{public}.0s":"#SAPersistenceManager encountered error in loading file", "url":"%{private}s", "error":"%{private}s"}
{"msg%{public}.0s":"#SAPersistenceManager encountered error in unarchiving store", "url":"%{private}s", "error":"%{private}s"}
{"msg%{public}.0s":"#SAPersistenceManager no store to save"}
{"msg%{public}.0s":"#SAPersistenceManager saving to location", "path":"%{private}s"}
{"msg%{public}.0s":"#SAPersistenceManager error archiving store", "error":"%{private}s"}
{"msg%{public}.0s":"#SAPersistenceManager error reseting directory", "error":"%{private}s"}
{"msg%{public}.0s":"#SAScenarioClassifier notifyScenarioChange", "device":"%{private}@", "from":"%{private}s", "to":"%{private}s"}
{"msg%{public}.0s":"#SAScenarioClassifier setting current unsafe location from nil", "device":"%{private}@"}
{"msg%{public}.0s":"#SAScenarioClassifier forUnsafeLocation location", "device":"%{private}@"}
{"msg%{public}.0s":"#SAScenarioClassifier didDetermineState unsafe", "device":"%{private}@", "state":%{private}ld}
{"msg%{public}.0s":"#SAScenarioClassifier forUnsafeLocation unexpected", "device":"%{private}@"}
{"msg%{public}.0s":"#SAScenarioClassifier forUnsafeLocation in safe", "device":"%{private}@"}
{"msg%{public}.0s":"#SAScenarioClassifier forUnsafeLocation not supported", "device":"%{private}@"}
{"msg%{public}.0s":"#SAScenarioClassifier didDetermineState safe", "device":"%{private}@", "state":%{private}ld}
{"msg%{public}.0s":"#warning #SAScenarioClassifier forSafeLocation in unsafe", "device":"%{private}@"}
{"msg%{public}.0s":"#SAScenarioClassifier forSafeLocation not supported", "device":"%{private}@"}
{"msg%{public}.0s":"#warning #SAScenarioClassifier visit while in safe", "device":"%{private}@"}
{"msg%{public}.0s":"#warning #SAScenarioClassifier visit while in unsafe", "device":"%{private}@"}
{"msg%{public}.0s":"#warning #SAScenarioClassifier LOI while in safe", "device":"%{private}@"}
{"msg%{public}.0s":"#warning #SAScenarioClassifier LOI while in unsafe", "device":"%{private}@"}
{"msg%{public}.0s":"#SAScenarioClassifier addUnsafeLocation replacing already existing unsafe", "device":"%{private}@", "old":"%{private}@", "new":"%{private}@"}
{"msg%{public}.0s":"#SAScenarioClassifier addSafeLocation replacing", "device":"%{private}@", "location":"%{private}@"}
{"msg%{public}.0s":"#SAScenarioClassifier removeSafeLocation not in set", "device":"%{private}@", "location":"%{private}@"}
{"msg%{public}.0s":"Archiver error", "Error":"%{private}@", "String":"%{private}@"}
unarchive error: %@
{"msg%{public}.0s":"#sa related devices update for device", "uuid":"%{private}@", "groupID":"%{private}@", "related devices":"%{private}@"}
#sa Service enableMonitoringForSeparations: %{public}d
#sa Service notifyAboutDevices:%{private}lu
#sa Service requestBluetoothScan:%{private}#lx
#sa Service requestLocationForType:%{private}#lx
#sa Service addGeofence
#sa Service removeGeofence
#sa Service requestStateForRegion
#sa Service scheduleSATimeEvent:%{public}#lf
{"msg%{public}.0s":"#sa Service cancelSATimeEventForAlarm", "uuid":"%{public}@"}
{"msg%{public}.0s":"#sa Service startBackgroundScanning"}
{"msg%{public}.0s":"#sa Service stopBackgroundScanning"}
{"msg%{public}.0s":"#sa Service stopLongAggressiveScan"}
{"msg%{public}.0s":"#sa Service fetchLastVisit"}
{"msg%{public}.0s":"Ingesting event", "Event":"%{private}@"}
{"msg%{public}.0s":"SAAudioAccessory failed to register BT session callback"}
{"msg%{public}.0s":"SAAudioAccessory received unknown BT address"}
{"msg%{public}.0s":"SAAudioAccessory set BT address of the current device", "address":"%{private}@"}
{"msg%{public}.0s":"SAAudioAccessory refresh device failed - invalid BT session"}
{"msg%{public}.0s":"SAAudioAccessory refresh device failed - invalid BT address", "address":"%{private}@"}
{"msg%{public}.0s":"SAAudioAccessory refresh device failed - failed to convert address into a valid BT address", "address":"%{private}@"}
{"msg%{public}.0s":"SAAudioAccessory refresh device failed - Failed to get the device handle with BT address", "address":"%{private}@"}
{"msg%{public}.0s":"SAAudioAccessory refresh device failed - Failed to get the product ID"}
{"msg%{public}.0s":"SAAudioAccessory in ear status - invalid BT device"}
{"msg%{public}.0s":"SAAudioAccessory in ear status - invalid BT address", "address":"%{private}@"}
{"msg%{public}.0s":"SAAudioAccessory in ear status - failed to get IED setting"}
{"msg%{public}.0s":"SAAudioAccessory in ear status - IED is disabled"}
{"msg%{public}.0s":"SAAudioAccessory in ear status - failed to get inear status"}
{"msg%{public}.0s":"SAAudioAccessory received in ear status", "Primary":%{private}ld, "Secondary":%{private}ld}
{"msg%{public}.0s":"SAAudioAccessory in ear status - invalid BT device when get primary bud side"}
{"msg%{public}.0s":"SAAudioAccessory in ear status - invalid BT address when get primary bud side"}
{"msg%{public}.0s":"SAAudioAccessory in ear status - failed to get primary bud"}
{"msg%{public}.0s":"SAAudioAccessory BT session terminated"}
{"msg%{public}.0s":"SAAudioAccessory BT session re-attaching", "Retry count":%{private}d}
{"msg%{public}.0s":"SAAudioAccessory BT session attached successfully"}
{"msg%{public}.0s":"SAAudioAccessory Accessory Mananger unavailable.", "status":%{private}d}
SAConnectionEvent
OSLogCoding
TAEventProtocol
NSObject
NSSecureCoding
NSCoding
NSCopying
SATimeEvent
SAGeofenceEvent
SASingleDeviceRecord
SADevice
SAPersistenceStore
SASafeLocation
SASafeLocationUpdateEvent
SASafeLocationsEvent
SAReplay
OSLogPersistenceDelegate
OSActivityStreamDelegate
OSDeviceDelegate
SATravelTypeClassifier
SATravelTypeClassifierServiceProtocol
SAFenceManager
SAFenceManagerServiceProtocol
SAFenceManagerRequestProtocol
SADeviceUpdateEvent
SADevicesWithSafeLocationsEvent
SAPowerLog
SAPowerLogServiceProtocol
SAMonitoringSession
SAMonitoringSessionManager
SAMonitoringSessionManagerServiceProtocol
SAScenarioClassifierClientProtocol
SAWithYouDetectorClientProtocol
SATimeClientProtocol
SATravelTypeClassifierClientProtocol
SAWithYouDetector
SAWithYouDetectorServiceProtocol
TADateFormat
SAServiceManager
SAServiceServiceProtocol
SAServiceClientProtocol
SAAlarmTask
SATime
SATimeServiceProtocol
SAPersistenceManagerSettings
SAPersistenceManager
NSString
SAScenarioClassifier
SAScenarioClassifierServiceProtocol
SAFenceManagerClientProtocol
SALoggingUtilities
SADeviceRecord
SAService
SAMonitoringSessionManagerClientProtocol
SABluetoothScanRequestProtocol
SALocationRequestProtocol
SAPowerLogClientProtocol
SAGeoFenceRequestProtocol
SATimeEventRequestProtocol
SAAudioAccessory
SAAnalyticsSettings
SAAnalytics
SAAnalyticsServiceProtocol
T@"NSDate",&,N,V_startTimestamp
JSONStringFromNSDictionary:error:
T@"SAAnalytics",&,N,V_analytics
T@"<SAAnalyticsServiceProtocol>",&,N,V_analytics
TB,N,V_isReplay
T@"<SAFenceManagerRequestProtocol>",&,N,V_delegate
TQ,N,V_scenario
T@"<SAGeoFenceRequestProtocol>",&,N,V_fenceRequestServicer
T^{BTDeviceImpl=},N,V_fBTDevice
T@"<SATimeClientProtocol>",W,N,V_client
_client
T@"<SATimeServiceProtocol>",&,N,V_clock
_deviceIsWatch:
T@"<SATravelTypeClassifierServiceProtocol>",&,N,V_travelTypeClassifier
_lastCompanionDisconnectionDate
T@"<TAEventProtocol>",&,N,V_currentVisitOrLOIEvent
_numGpsRequests
T@"CLCircularRegion",&,N,V_geofence
_radius
T@"CLLocation",&,N,V_caSeparationLocation
_region
T@"CLRegion",C,N,V_lastUnsafeLocation
_startTimestamp
T@"NSDate",&,N,V_caLastAlertDate
aggScanDuration
T@"NSDate",&,N,V_earlyVehicularStateChangeDate
attachBTSession
T@"NSDate",&,N,V_lastActivated
base64EncodedStringWithOptions:
T@"NSDate",&,N,V_lastExtraHELEFoundTime
clients
T@"NSDate",&,N,V_lastLongScanRequest
containsObject:
T@"NSDate",&,N,V_lastSafeEntry
convertSAWithYouStatusToString:
T@"NSDate",&,N,V_lastTravelStart
dateWithTimeInterval:sinceDate:
T@"NSDate",&,N,V_nextAnalyticsSubmission
devices
T@"NSDate",&,N,V_previousBufferEmptyTime
enableMonitoringForSeparations:
T@"NSDate",&,N,V_trackedTravelingStartDate
getDate
T@"NSDate",C,N,V_currentTravelTypeChangeDate
getType
T@"NSDate",R,C,N,V_date
increaseGpsLocationRequestCount
T@"NSDate",R,C,N,V_scenarioChangeDate
initWithExternalTimer:isReplay:
T@"NSDate",R,N,V_currentScenarioTime
initWithTimeInterval:sinceDate:
T@"NSDate",R,N,V_lastCompanionDisconnectionDate
isSafeLocation:
T@"NSDate",R,N,V_now
lastTravelStart
T@"NSDictionary",R,C,N,V_safeLocations
lastWithYouDate
T@"NSMutableArray",&,N,V_eventOrder
numBTLE
T@"NSMutableDictionary",&,N,V_deviceRecord
numWifiRequests
T@"NSMutableDictionary",&,N,V_deviceUUIDtoAlertContext
numiPad
T@"NSMutableDictionary",&,N,V_deviceUUIDtoSafeLocationUUIDs
release
T@"NSMutableDictionary",&,N,V_eventMessages
removeObserver:
T@"NSMutableDictionary",&,N,V_monitoringSessionRecord
resetStatistics
T@"NSMutableDictionary",&,N,V_safeLocations
seekToEndOfFile
T@"NSMutableDictionary",&,N,V_statesByRegionIdentifier
T@"NSMutableDictionary",&,V_deviceUUIDsBySafeLocation
setBtScanCount:
T@"NSMutableSet",&,N,V_devicesWithToBePopulatedTrackedTravelingStartLocation
setLastRelevantDeviceFoundTime:
T@"NSMutableSet",&,N,V_ongoingAlarms
setSafeLocations:forDeviceUUID:
T@"NSMutableSet",&,N,V_safeLocations
standby
T@"NSString",&,N,V_fBTAddress
stringFromDate:
T@"NSString",&,N,V_persistenceStoreFileName
updateDevicesWithSafeLocations:
T@"NSString",R,C,N,V_model
withYouDetector
.cxx_destruct
T@"NSHashTable",&,N,V_observers
T#,R
TB,N,V_isFindingRelevantDevices
T@"<SABluetoothScanRequestProtocol>",W,N,V_bluetoothScanner
TQ,N,V_numItems
T@"<SAFenceManagerServiceProtocol><SAFenceManagerRequestProtocol>",&,N,V_fenceManager
TQ,N,V_wifiLocationRequestCount
T@"<SALocationRequestProtocol>",W,N,V_locationRequester
Td,R,N,V_radius
T@"<SATimeEventRequestProtocol>",W,N,V_externalTimer
_device
T@"<SATimeServiceProtocol>",&,N,V_timeDelegate
_isValidPartID:
T@"<SAWithYouDetectorServiceProtocol>",&,N,V_withYouDetector
_numAccessories
T@"<TAEventProtocol>",&,N,V_previousVisitOrLOIEvent
_partIdentifier
T@"CLCircularRegion",C,N,V_currentVisit
_referenceFrame
T@"CLRegion",C,N,V_currentUnsafeLocation
_routineManager
T@"CLRegion",R,C,N,V_region
_stream
T@"NSDate",&,N,V_caLastStateTransition
allKeys
T@"NSDate",&,N,V_initializationTime
audioAcccessory
T@"NSDate",&,N,V_lastEndOfScan
caLastAlertDate
T@"NSDate",&,N,V_lastExtraNonHELEFoundTime
connectionState
T@"NSDate",&,N,V_lastRelevantDeviceFoundTime
convertSAScenarioClassToString:
T@"NSDate",&,N,V_lastStartOfScan
currentCalendar
T@"NSDate",&,N,V_lastUnsafeEntry
dealloc
T@"NSDate",&,N,V_nextOpportunisticScanDate
disabledReasons
T@"NSDate",&,N,V_timeOfAttemptToLoadFromPersistence
enabled
T@"NSDate",&,N,V_travelingGeofenceExitDate
getEventSubtype
T@"NSDate",C,N,V_fireDate
groupIdentifier
T@"NSDate",R,C,N,V_eventDate
initWithDevice:clock:analytics:
T@"NSDate",R,N
initWithFormat:
T@"NSDate",R,N,V_firstAdvertisementAfterScenarioTransition
isProxy
T@"NSDate",R,N,V_lastWithYouDate
lastStartOfScan
T@"NSDictionary",R,C,N,V_devices
lastUnsafeEntry
T@"NSHashTable",&,N,V_clients
T@"NSMutableArray",&,N,V_uuidsOfRelatedDevices
numSafe
T@"NSMutableDictionary",&,N,V_deviceUUIDsByUnsafeRegionIdentifier
numberWithBool:
T@"NSMutableDictionary",&,N,V_deviceUUIDtoMonitoringSession
refreshBTDevice
T@"NSMutableDictionary",&,N,V_devices
removeGeofence:
T@"NSMutableDictionary",&,N,V_foundDevicesDuringCurrentScan
requestToStopBackgroundScanning
T@"NSMutableDictionary",&,N,V_regionsByRegionIdentifier
safeLocationsByRegionIdentifier
T@"NSMutableDictionary",&,N,V_safeLocationsByRegionIdentifier
service
T@"NSMutableDictionary",&,N,V_statesBySafeLocation
setActiveState:
T@"NSMutableSet",&,N,V_devicesWithPendingTransition
setCurrentTravelTypeChangeDate:
T@"NSMutableSet",&,N,V_monitoredDevices
setPowerLogger:
T@"NSMutableSet",&,N,V_relevantDevicesToFindDuringLongScan
setWithObjects:
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
streamDidStart:
T@"NSString",&,N,V_macAddress
systemStateType
T@"NSString",R,C
updateLocation:
T@"NSString",R,C,N,V_name
T@"NSString",R,C,N,V_systemVersion
T@"NSURL",&,N,V_persistenceDirectoryURL
T@"NSUUID",&,N,V_deviceUUID
T@"NSUUID",&,N,V_nextScheduledAlarm
T@"NSUUID",&,N,V_nextScheduledAlarmForPersistenceWrite
T@"NSUUID",&,N,V_scheduledAlarmForForceUpdateWithYouStatus
T@"NSUUID",C,N,V_alarmUUID
T@"NSUUID",C,N,V_deviceUuid
T@"NSUUID",R,C,N,V_groupIdentifier
T@"NSUUID",R,C,N,V_identifier
T@"NSUUID",R,N,V_uuid
T@"RTRoutineManager",&,N,V_routineManager
T@"SAAudioAccessory",&,N,V_audioAcccessory
T@"SAAudioAccessory",&,N,V_audioAccessoryManager
T@"SADevice",&,N,V_device
T@"SADevice",R,C,N,V_device
T@"SADeviceRecord",&,N,V_deviceRecord
T@"SAFenceManager",&,N,V_fenceManager
T@"SAMonitoringSessionManager",&,N,V_monitoringSessionManager
T@"SAPersistenceManager",&,N,V_persistenceManager
T@"SAPersistenceManagerSettings",&,V_settings
T@"SAPersistenceStore",R,N,V_store
T@"SAPowerLog",&,N,V_powerLogger
T@"SASafeLocation",R,C,N,V_safeLocation
T@"SAScenarioClassifier",&,N,V_scenarioClassifier
T@"SAService",&,N,V_service
T@"SATime",&,N,V_clock
T@"SATravelTypeClassifier",&,N,V_travelTypeClassifier
T@"SAWithYouDetector",&,N,V_withYouDetector
T@"TALocationLite",&,N,V_firstNotWithYouLocation
T@"TALocationLite",&,N,V_lastLocation
T@"TALocationLite",&,N,V_trackedTravelingStartLocation
T@"TASPAdvertisement",R,N,V_latestAdvertisement
T@"TASPAdvertisement",R,N,V_latestNOAdvertisement
T@"TASPAdvertisement",R,N,V_latestWildAdvertisement
TB,N,V_caIsVehicularBTHintOn
TB,N,V_earlyAirplaneTrigger
TB,N,V_earlyVehicularTrigger
TB,N,V_enabled
TB,N,V_hasAttemptedToIngestLastVisitAtStartup
TB,N,V_hasSurfacedNotification
TB,N,V_isAllUsingSameSafe
TB,N,V_isCompanionConnected
TB,N,V_isInAirplaneMode
TB,N,V_isInVehicularTravel
TB,N,V_isNotifyWhileTravelingEnabled
TB,N,V_isPeriodicScansNeeded
TB,N,V_longScanIsOngoing
TB,N,V_requestedPeriodicScan
TB,N,V_requestedShortScan
TB,N,V_standby
TB,R
TB,R,N,V_isAppleAudioAccessory
TB,R,N,V_lastEvent
TB,R,N,V_notifyEnabled
TB,V_enableSubmission
TI,N,V_fProductID
TQ,N,V_aggActiveDuration
TQ,N,V_aggInSafeDuration
TQ,N,V_aggInTravelDuration
TQ,N,V_aggInUnsafeDuration
TQ,N,V_btScanCount
TQ,N,V_caCurrentVehicularState
TQ,N,V_currentMonitoringSessionState
TQ,N,V_currentTravelType
TQ,N,V_disabledReasons
TQ,N,V_extraFoundHELECount
TQ,N,V_extraFoundNonHELECount
TQ,N,V_geofenceCount
TQ,N,V_gpsLocationRequestCount
TQ,N,V_lastLongScanContext
TQ,N,V_notificationState
TQ,N,V_numAccessories
TQ,N,V_numAirPods
TQ,N,V_numAlerts
TQ,N,V_numAlertsLeftBehind
TQ,N,V_numAlertsTraveling
TQ,N,V_numBTLE
TQ,N,V_numBTLeftBehindRequests
TQ,N,V_numBTRequests
TQ,N,V_numBTTravelingRequests
TQ,N,V_numDevices
TQ,N,V_numDevicesAtSafeExit
TQ,N,V_numEnabled
TQ,N,V_numGpsRequests
TQ,N,V_numMacBook
TQ,N,V_numSafe
TQ,N,V_numSafeInUse
TQ,N,V_numTimers
TQ,N,V_numUnsafe
TQ,N,V_numUnsafeWithLOI
TQ,N,V_numUnsafeWithoutLOI
TQ,N,V_numWifiRequests
TQ,N,V_numiPad
TQ,N,V_numiPhone
TQ,N,V_scenarioClassification
TQ,N,V_separationAlertsCount
TQ,N,V_state
TQ,N,V_visitCount
TQ,N,V_withYouStatus
TQ,R
TQ,R,N
TQ,R,N,V_currentScenarioClass
TQ,R,N,V_deviceType
TQ,R,N,V_eventType
TQ,R,N,V_monitoringSessionStateAtTimeOfFirstAdv
TQ,R,N,V_referenceFrame
T^v,N,V_alarmQueue
T^{BTAccessoryManagerImpl=},N,V_fBTAccessoryManager
T^{BTSessionImpl=},N,V_fBTSession
Td,N,V_aggScanDuration
Td,N,V_aggScanDurationForFindingRelevantItemsOnly
Td,N,V_totalVisitDuration
Td,R,N
Td,R,N,V_latitude
Td,R,N,V_longitude
Ti,N,V_fBTSessionAttachRetryCount
Tq,N,V_caBroughtOutOnTravel
Tq,N,V_connectionState
Tq,R,N,V_partIdentifier
Tq,R,N,V_productId
Tq,R,N,V_state
Tq,R,N,V_vendorId
UTF8String
UUID
UUIDString
_addSafeLocation:
_addUnsafeLocation:
_aggActiveDuration
_aggInSafeDuration
_aggInTravelDuration
_aggInUnsafeDuration
_aggScanDuration
_aggScanDurationForFindingRelevantItemsOnly
_alarmQueue
_alarmUUID
_analytics
_audioAcccessory
_audioAccessoryManager
_beaconManager
_bluetoothScanner
_btScanCount
_caBroughtOutOnTravel
_caCurrentVehicularState
_caIsVehicularBTHintOn
_caLastAlertDate
_caLastStateTransition
_caSeparationLocation
_clients
_clock
_connectionState
_createDirectoryIfNotPresent
_currentMonitoringSessionState
_currentScenarioClass
_currentScenarioTime
_currentTravelType
_currentTravelTypeChangeDate
_currentUnsafeLocation
_currentVisit
_currentVisitOrLOIEvent
_date
_delegate
_deviceRecord
_deviceType
_deviceUUID
_deviceUUIDsBySafeLocation
_deviceUUIDsByUnsafeRegionIdentifier
_deviceUUIDtoAlertContext
_deviceUUIDtoMonitoringSession
_deviceUUIDtoSafeLocationUUIDs
_deviceUuid
_deviceWithUUID:isWithYouDuringLongScanOnAdvertisement:
_devices
_devicesWithPendingTransition
_devicesWithToBePopulatedTrackedTravelingStartLocation
_disabledReasons
_earlyAirplaneTrigger
_earlyVehicularStateChangeDate
_earlyVehicularTrigger
_enableSubmission
_enabled
_enoughTimeHasPassedSinceInitializationToMarkNotWithYouForDeviceUUID:
_eventDate
_eventMessages
_eventOrder
_eventType
_externalTimer
_extraFoundHELECount
_extraFoundNonHELECount
_fBTAccessoryManager
_fBTAddress
_fBTDevice
_fBTSession
_fBTSessionAttachRetryCount
_fProductID
_fenceManager
_fenceRequestServicer
_fetchAndIngestLastVisit
_finalizeToBeVerifiedStatus:
_findSafeLocationWithUUID:
_fireDate
_firstAdvertisementAfterScenarioTransition
_firstNotWithYouLocation
_foundDevicesDuringCurrentScan
_geofence
_geofenceCount
_getStoreURL
_gpsLocationRequestCount
_groupIdentifier
_handleUserActivityEvent:
_handleVehicleStateEvent:
_hasAllSafeLocationStatesKnown
_hasAttemptedToIngestLastVisitAtStartup
_hasSurfacedNotification
_identifier
_ingestVisit:
_initializationTime
_inputPersistencePath
_isAllUsingSameSafe
_isAppleAudioAccessory
_isCompanionConnected
_isFindingRelevantDevices
_isInAirplaneMode
_isInVehicularTravel
_isInsideAnySafeLocation
_isNotifyWhileTravelingEnabled
_isOnlyMonitoringCompanionDevice
_isOnlyMonitoringDisconnectedCompanionDevice
_isOnlyMonitoringLeashOnlyDevices
_isPeriodicScansNeeded
_isRecentEnoughAdvertisement:forCurrentDate:
_isReplay
_isStatusBitSetForRelatedDeviceWithShiftIndex:fromAdvertisement:
_lastActivated
_lastEndOfScan
_lastEvent
_lastExtraHELEFoundTime
_lastExtraNonHELEFoundTime
_lastLocation
_lastLongScanContext
_lastLongScanRequest
_lastRelevantDeviceFoundTime
_lastSafeEntry
_lastStartOfScan
_lastTravelStart
_lastUnsafeEntry
_lastUnsafeLocation
_lastWithYouDate
_latestAdvertisement
_latestNOAdvertisement
_latestWildAdvertisement
_latitude
_locationRequester
_longScanIsOngoing
_longitude
_macAddress
_maxAgeOfWithYouAdvertisementForDeviceUUID:
_model
_monitoredDevices
_monitoringSessionManager
_monitoringSessionRecord
_monitoringSessionStateAtTimeOfFirstAdv
_name
_nextAnalyticsSubmission
_nextOpportunisticScanDate
_nextScheduledAlarm
_nextScheduledAlarmForPersistenceWrite
_notificationState
_notifyAllClientsOfScenarioChangeFrom:to:
_notifyAllClientsOfTravelTypeChangeFrom:to:hints:
_notifyAllClientsOfWithYouStatusUpdate:forDeviceWithUUID:
_notifyEnabled
_notifyObserversOnReadFromURL:bytes:
_notifyObserversOnWriteToURL:bytes:
_now
_numAirPods
_numAlerts
_numAlertsLeftBehind
_numAlertsTraveling
_numBTLE
_numBTLeftBehindRequests
_numBTRequests
_numBTTravelingRequests
_numDevices
_numDevicesAtSafeExit
_numEnabled
_numItems
_numMacBook
_numSafe
_numSafeInUse
_numTimers
_numUnsafe
_numUnsafeWithLOI
_numUnsafeWithoutLOI
_numWifiRequests
_numiPad
_numiPhone
_observers
_ongoingAlarms
_outputPath
_ownerSession
_persistence
_persistenceDirectoryURL
_persistenceManager
_persistenceStoreFileName
_persistenceWait
_powerLogger
_previousBufferEmptyTime
_previousVisitOrLOIEvent
_productId
_queue
_regionsByRegionIdentifier
_relevantDevicesToFindDuringLongScan
_removeSafeLocation:
_removeUnsafeLocation:
_requestedPeriodicScan
_requestedShortScan
_safeLocation
_safeLocations
_safeLocationsByRegionIdentifier
_scenario
_scenarioChangeDate
_scenarioClassification
_scenarioClassifier
_scheduleNextAlarmForScanAfterDate:
_scheduledAlarmForForceUpdateWithYouStatus
_separationAlertsCount
_separationMonitoringSession
_service
_setNewScenarioClass:
_setNewTravelType:hints:
_settings
_standby
_state
_statesByRegionIdentifier
_statesBySafeLocation
_store
_streamWait
_systemVersion
_timeDelegate
_timeOfAttemptToLoadFromPersistence
_totalVisitDuration
_trackedTravelingStartDate
_trackedTravelingStartLocation
_travelTypeClassifier
_travelingGeofenceExitDate
_updateAllRelatedDevices
_updateAllWithYouStatusOnScanEndedEvent:
_updateConnectionStateOnConnectionEvent:
_updateDeviceRecordOnDeviceUpdateEvent:
_updateLatestAdvertisement:
_updateSingleDeviceRecordForDevice:
_updateWithYouStatusIfNecessaryOnAdvertisement:
_updateWithYouStatusIfNecessaryOnConnectionEvent:
_updateWithYouStatusOfRelatedDevices:
_updateWithYouStatusOnAdvBufferEmptyEvent:
_uuid
_uuidsOfRelatedDevices
_vehicularHintsToString:
_vendorId
_visitCount
_wifiLocationRequestCount
_withYouDetector
_withYouStatus
absoluteString
activityStream:deviceUDID:deviceID:status:error:
activityStream:results:
activityStream:results:error:
activityType
addAggressiveScanRequest:
addAlarm:
addAlertWithContext:
addClient:
addDevice:isLastDeviceEvent:
addDeviceFetchResultCount:type1count:type2count:type3count:type4count:type5count:type6count:type7count:type8count:safeCount:usingSameSafe:
addDevicesIfNeededPerEvent:
addDidSeparateWhileInVisit:didRejoinPriorExit:
addDisableReason:
addGeofence:
addGpsLocationRequest:
addMonitoredDevice:
addNumDevicesWithYou:
addObject:
addObjectsFromArray:
addObserver:
addPreArrivalAlertTime:didRejoinPriorExit:
addSafeLocation:forDeviceUUID:
addSafeLocationFetchResultCount:
addSafeLocationsIfNeededPerNewSet:forDevice:
addScanDuration:
addScanDurationForFindingRelevantItemsOnly:
addTravelFenceForDevice:
addVisit:withRadius:
addWakeTimerRequest
addWifiLocationRequest:
advanceTimeWithEvent:
aggActiveDuration
aggInSafeDuration
aggInTravelDuration
aggInUnsafeDuration
aggScanDurationForFindingRelevantItemsOnly
alarmCount
alarmFired:
alarmFiredForUUID:
alarmQueue
alarmUUID
allDevicesInSafeLocation
allObjects
allRelevantDevicesToFindAreFound
allSAEnabledDevicesAreFound
allValues
allocWithZone:
analytics
andPredicateWithSubpredicates:
anyDeviceInUnsafeLocation
appendBytes:length:
appendString:
approvalState
archivedDataWithRootObject:requiringSecureCoding:error:
arrayWithObjects:count:
arrivalDate
attemptToPopulateTrackedTravelingStartLocationForDevice:
audioAccessoryManager
autorelease
beaconGroupForIdentifier:completion:
bluetoothScanner
bootstrapMonitoringSessionRecord:
btScanCount
btSessionEventHandler:event:result:
bytes
caBroughtOutOnTravel
caCurrentVehicularState
caIsVehicularBTHintOn
caLastStateTransition
caSeparationLocation
cancelAlarmWithUUID:
cancelMonitoringDevice:
cancelSATimeEventForAlarm:
center
changeMonitoringSessionState:toState:
checkForDevicesNeedingTransition
checkInEarStatus:
checkReunion:to:forDeviceWithUUID:
class
client
clock
closeFile
compare:
computeMessagesForEvent:
computeRemovedSafeLocations:
configureBackgroundScanning
conformsToProtocol:
containsCoordinate:
convertBeaconToDeviceType:
convertCLReferenceFrameToSAReferenceFrame:
convertSAMonitoringSessionStateToString:
convertSATravelTypeToString:
convertSAWithYouLongScanContextToString:
convertToSAInEarStatus:
coordinate
copy
copyWithZone:
count
countByEnumeratingWithState:objects:count:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
createLocationFromCircularRegion:forDevice:withContext:
createMonitoringDevice:
currentLocale
currentMonitoringSessionState
currentScenarioClass
currentScenarioTime
currentTravelType
currentTravelTypeChangeDate
currentUnsafeLocation
currentVisit
currentVisitOrLOIEvent
dataUsingEncoding:
dataWithBytes:length:
dataWithContentsOfURL:options:error:
dataWithHexString:
dataWithJSONObject:options:error:
date
dateByAddingTimeInterval:
debugDescription
decodeBoolForKey:
decodeDoubleForKey:
decodeIntegerForKey:
decodeObjectForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
defaultManager
delegate
departureDate
description
descriptionDictionary
descriptionWithLocale:
determineTrackedTravelingCount
device
deviceRecord
deviceShouldTransitionWithLastScenarioChangeDate:lastWithYouDate:
deviceType
deviceUUID
deviceUUIDsBySafeLocation
deviceUUIDsByUnsafeRegionIdentifier
deviceUUIDtoAlertContext
deviceUUIDtoMonitoringSession
deviceUUIDtoSafeLocationUUIDs
deviceUuid
devicesWithPendingTransition
devicesWithToBePopulatedTrackedTravelingStartLocation
dictionaryWithObjects:forKeys:count:
didChangeScenarioClassFrom:to:forDevice:
didChangeTravelTypeFrom:to:hints:
didDetermineState:forSafeLocation:forDevice:
didDetermineState:forUnsafeLocation:forDevice:
didFetchAllDevices:
didFetchAllSafeLocations:
didForceUpdateWithYouStatus
didReadFromURL:bytes:
didWriteToURL:bytes:
distanceFromLocation:
distantPast
earlierDate:
earliestAlarm
earlyAirplaneTrigger
earlyVehicularStateChangeDate
earlyVehicularTrigger
earlyVehicularTriggerForDeviceUUID:
enableSubmission
encodeBool:forKey:
encodeDouble:forKey:
encodeInteger:forKey:
encodeObject:forKey:
encodeWithCoder:
encodeWithOSLogCoder:options:maxLength:
enoughTimeHasPassedBeforeSurfacingAlert:forAlertForDevice:alertType:
entry
errorWithDomain:code:userInfo:
eventDate
eventMessage
eventMessages
eventOrder
eventType
exit
externalTimer
extraFoundHELECount
extraFoundNonHELECount
extractEventFromMessages:
extractUniqueIdentifierFromMessage:
fBTAccessoryManager
fBTAddress
fBTDevice
fBTSession
fBTSessionAttachRetryCount
fProductID
fenceManager
fenceRequestServicer
fetchFromStartDate:toEndDate:
fetchLastVisit
fetchLocationOfInterestWithIdentifier:withHandler:
fetchStoredVisitsWithOptions:handler:
fileExistsAtPath:
fileHandleForWritingToURL:error:
fileURLWithPath:isDirectory:
fileURLWithPath:relativeToURL:
fireAlarmsIfReady
fireDate
firstAdvertisementAfterScenarioTransition
firstNotWithYouLocation
firstObject
fm_hexString
forceStandbyMode:
forceUpdateWithYouStatus
forceUpdateWithYouStatusToFindDevices:withContext:
forceUpdateWithYouStatusWithShortScan:
foundDevicesDuringCurrentScan
geoReferenceFrame
geofence
geofenceCount
getAllUUIDs
getBytes:length:
getConnectionState:
getCurrentTime
getDateString
getDeviceNotificationState:
getEarliestAlarmDate
getInEarStatus:secondary:
getLastCompanionDisconnectionDate:
getLastScenarioChangeDateAmongAllDevices
getLastWithYouDate:
getLatestAdvertisement:
getLatestNOAdvertisement:
getLatestWildAdvertisement:
getMinutesSinceStartOfDay
getMonitoringSessionState:
getMoreSpecificSADeviceType:
getNextDateAtHour:
getPrimaryBudSide
getRegionForSafeLocation:
getRelatedDevices:
getSADevice:
getSafeLocationCount
getScenarioClass:
getUUIDBytes:
getUnsafeLocationCount
getWithYouStatus:
gpsLocationRequestCount
handleFenceEvent:forRegion:
handleGeofenceEvent:
handleGeofenceExitedForDeviceUUID:
handleModifiedSafeLocation:
handleModifiedSafeLocation:forDeviceUUID:
handleNewSafeLocation:
handleRemovedSafeLocation:
handleSeparationForDeviceUUID:withSafeLocationRecommendation:context:
handleSystemStateChanged:
hasArrivalDate
hasAttemptedToIngestLastVisitAtStartup
hasDepartureDate
hasDisconnectedDevices
hasPrefix:
hasSurfacedNotification
hasSurfacedNotificationFor:
hash
hashTableWithOptions:
horizontalAccuracy
horizontalUncertainty
identifier
increaseBTScanCount
increaseGeofenceCount
increaseSeparationAlertsCount:
increaseWifiLocationRequestCount
ingestTAEvent:
init
initForLowPowerWithCenter:radius:identifier:
initWithAnalytics:isReplay:audioAccessoryManager:
initWithAscending:confidence:dateInterval:labelVisit:limit:
initWithBase64EncodedString:options:
initWithBluetoothScanner:locationRequester:deviceRecord:clock:analytics:
initWithCenter:radius:identifier:
initWithClock:
initWithClock:analytics:
initWithCoder:
initWithConnectionEvent:clock:analytics:
initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:timestamp:
initWithCoordinate:horizontalAccuracy:arrivalDate:departureDate:detectionDate:confidence:
initWithData:encoding:
initWithDate:
initWithDevice:eventType:lastEvent:date:
initWithDeviceUUID:groupIdentifier:macAddress:name:model:systemVersion:vendorId:productId:deviceType:notifyEnabled:isAppleAudioAccessory:date:
initWithDeviceUUID:groupIdentifier:macAddress:partIdentifier:name:model:systemVersion:vendorId:productId:deviceType:notifyEnabled:isAppleAudioAccessory:date:
initWithDeviceUUID:name:model:systemVersion:vendorId:productId:deviceType:notifyEnabled:isAppleAudioAccessory:date:
initWithDeviceUUID:state:date:
initWithDeviceUUID:state:geofence:scenario:trackedTravelingStartDate:
initWithDeviceUuid:
initWithDeviceUuid:scenarioClass:unsafeLocation:
initWithDevices:safeLocationUUIDs:date:
initWithDirectoryURLOrDefault:storeFileNameOrDefault:
initWithEnableSubmission:
initWithLatitude:longitude:
initWithLocationUUID:latitude:longitude:radius:referenceFrame:name:date:
initWithLogArchive:outputPath:inputPersistencePath:
initWithObjects:
initWithQueue:
initWithRegion:eventType:eventDate:
initWithSafeLocation:eventType:lastEvent:date:
initWithSafeLocations:date:
initWithSettings:
initWithState:date:
initWithTimeIntervalSinceNow:
initWithType:latitude:longitude:horizontalAccuracy:referenceFrame:date:
initWithUUIDBytes:
initWithUUIDString:
initWithWithYouDetector:fenceRequestServicer:fenceManager:travelTypeClassifier:clock:deviceRecord:analytics:persistenceManager:audioAccessoryManager:
initializationTime
insertRelatedDevice:
insertString:atIndex:
integerValue
isAllUsingSameSafe
isAnyInTrackedInUnsafeLocation
isAnyTrackedWhileTraveling
isAppleAudioAccessory
isCompanionConnected
isConnected
isEqual:
isEqualToSet:
isEqualToString:
isExtraDeviceFound:onDate:
isFindingRelevantDevices
isInAirplaneMode
isInVehicularTravel
isKindOfClass:
isLowPower
isMemberOfClass:
isNotifyWhileTravelingEnabled
isOn
isPeriodicScansAllowed
isPeriodicScansNeeded
isReallyEqual:
isReplay
isValidJSONObject:
isWithinCurrentVisitOrLOI:
lastActivated
lastCompanionDisconnectionDate
lastEndOfScan
lastEvent
lastExtraHELEFoundTime
lastExtraNonHELEFoundTime
lastLocation
lastLongScanContext
lastLongScanRequest
lastObject
lastRelevantDeviceFoundTime
lastSafeEntry
lastUnsafeLocation
laterDate:
latestAdvertisement
latestNOAdvertisement
latestWildAdvertisement
latitude
length
load
localTimeZone
localizedStringForKey:value:table:
location
locationRequester
logTAEvent:
loiIdentifier
longScanIsOngoing
longitude
macAddress
mainBundle
minimumTimeSinceScenarioTransitionForAlertForDeviceUUID:alertType:
minusSet:
model
modifyDevice:
monitoredDevices
monitoringSessionManager
monitoringSessionRecord
monitoringSessionState:matchesWithScenarioClass:
monitoringSessionStateAtTimeOfFirstAdv
name
needPeriodicScan
nextAnalyticsSubmission
nextDateAfterDate:matchingHour:minute:second:options:
nextOpportunisticScanDate
nextScheduledAlarm
nextScheduledAlarmForPersistenceWrite
notificationState
notifyEarlyLeftBehind:
notifyEnabled
notifyLeftBehind:withRegion:isEarlyVehicularTrigger:
notifySeparationsForDevices:withLocation:withContext:
notifyState:forSafeLocationRegion:
notifyState:forUnsafeLocationRegion:
notifyWhenLeftBehind:
notifyWhileTraveling:isBookendingTravel:
numAccessories
numAirPods
numAlerts
numAlertsLeftBehind
numAlertsTraveling
numBTLeftBehindRequests
numBTRequests
numBTTravelingRequests
numDevices
numDevicesAtSafeExit
numEnabled
numGpsRequests
numItems
numMacBook
numSafeInUse
numTimers
numUnsafe
numUnsafeWithLOI
numUnsafeWithoutLOI
numberWithDouble:
numberWithInteger:
numberWithUnsignedInteger:
numiPhone
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
observers
onUpdatedMonitoringSessionRecord:
ongoingAlarms
partIdentifier
path
pausePeriodicScan
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
persistence:results:error:
persistenceDidFinishReadingForStartDate:endDate:
persistenceDirectoryURL
persistenceManager
persistenceStoreFileName
placeInference
popAlarm
powerLogger
predicateWithFormat:
previousBufferEmptyTime
previousVisitOrLOIEvent
processIdentifier
processInfo
productId
publishAnalyticsForFirstAdv:scenario:
publishAndResetAggregation
publishingInterval
queue
radius
referenceFrame
region
regionsByRegionIdentifier
relevantDevicesToFindDuringLongScan
removeAllObjects
removeAndStopSafeLocationsForDeviceUUID:
removeClient:
removeDeviceWithUUID:isLastDeviceEvent:
removeDevicesIfNeededPerEvent:
removeDisableReason:
removeItemAtURL:error:
removeLocationsForDeviceUuid:
removeObject:
removeObjectForKey:
removeObjectsForKeys:
removeSafeLocation:forDeviceUUID:
removeSafeLocationsIfNeededPerNewSet:forDevice:
removeTravelFenceForDevice:
replaySingleEventLogString:
replayWithStartDate:endDate:
requestBluetoothScanForTypes:
requestLocationForType:
requestScanIfNeeded
requestStateForRegion:
requestToFetchLastVisit
requestToStartBackgroundScanning
requestedPeriodicScan
requestedShortScan
reset
resetAggregation
resetAllWithYouStatus
resetAllWithYouStatusAndScanStates
resetRelatedDevices
respondsToSelector:
resumePeriodicScan
retain
retainCount
routineManager
safeLocation
safeLocations
save
scanDate
scenario
scenarioChangeDate
scenarioClassForDeviceUUID:
scenarioClassification
scenarioClassifier
scheduleNextForceUpdateWithYouStatusFromReferenceDate:forAlertForDevice:alertType:
scheduleNextPersistenceWrite
scheduleSATimeEvent:forAlarm:
scheduledAlarmForForceUpdateWithYouStatus
self
sendPowerLog
sendScanContextToCoreAnalytics:isPartOfLongScan:scanDuration:relevantOnlyScanDuration:foundExtraHELECount:extraHELEScanDuration:foundExtraNonHELECount:extraNonHELEScanDuration:longScanContext:
separationAlertsCount
separationAlertsService:addGeofence:
separationAlertsService:cancelSATimeEventForAlarm:
separationAlertsService:enableMonitoringForSeparations:
separationAlertsService:notifySeparationsForDevices:withLocation:withContext:
separationAlertsService:removeGeofence:
separationAlertsService:requestBluetoothScanForTypes:
separationAlertsService:requestLocationForType:
separationAlertsService:requestStateForRegion:
separationAlertsService:scheduleSATimeEvent:forAlarm:
separationAlertsServiceFetchLastVisit:
separationAlertsServiceManager:addGeofence:
separationAlertsServiceManager:cancelSATimeEventForAlarm:
separationAlertsServiceManager:enableMonitoringForSeparations:
separationAlertsServiceManager:notifySeparationsForDevices:withLocation:withContext:
separationAlertsServiceManager:removeGeofence:
separationAlertsServiceManager:requestBluetoothScanForTypes:
separationAlertsServiceManager:requestLocationForType:
separationAlertsServiceManager:requestStateForRegion:
separationAlertsServiceManager:scheduleSATimeEvent:forAlarm:
separationAlertsServiceManagerStartBackgroundScanning:
separationAlertsServiceManagerStopBackgroundScanning:
separationAlertsServiceManagerStopLongAggressiveScan:
separationAlertsServiceStartBackgroundScanning:
separationAlertsServiceStopBackgroundScanning:
separationAlertsServiceStopLongAggressiveScan:
separationMonitoringSession
setAggActiveDuration:
setAggInSafeDuration:
setAggInTravelDuration:
setAggInUnsafeDuration:
setAggScanDuration:
setAggScanDurationForFindingRelevantItemsOnly:
setAlarmQueue:
setAlarmUUID:
setAnalytics:
setAudioAcccessory:
setAudioAccessoryManager:
setBTAddress:
setBluetoothScanner:
setByAddingObjectsFromSet:
setCaBroughtOutOnTravel:
setCaCurrentVehicularState:
setCaIsVehicularBTHintOn:
setCaLastAlertDate:
setCaLastStateTransition:
setCaSeparationLocation:
setClient:
setClients:
setClock:
setConnectionState:
setCurrentMonitoringSessionState:
setCurrentTravelType:
setCurrentUnsafeLocation:
setCurrentVisit:
setCurrentVisitOrLOIEvent:
setDelegate:
setDevice:
setDeviceDelegate:
setDeviceRecord:
setDeviceUUID:
setDeviceUUIDsBySafeLocation:
setDeviceUUIDsByUnsafeRegionIdentifier:
setDeviceUUIDtoAlertContext:
setDeviceUUIDtoMonitoringSession:
setDeviceUUIDtoSafeLocationUUIDs:
setDeviceUuid:
setDevices:
setDevicesWithPendingTransition:
setDevicesWithToBePopulatedTrackedTravelingStartLocation:
setDisabledReasons:
setEarlyAirplaneTrigger:
setEarlyVehicularStateChangeDate:
setEarlyVehicularTrigger:
setEnableSubmission:
setEnabled:
setEventMessages:
setEventOrder:
setExternalTimer:
setExtraFoundHELECount:
setExtraFoundNonHELECount:
setFBTAccessoryManager:
setFBTAddress:
setFBTDevice:
setFBTSession:
setFBTSessionAttachRetryCount:
setFProductID:
setFenceManager:
setFenceRequestServicer:
setFireDate:
setFirstNotWithYouLocation:
setFormatOptions:
setFoundDevicesDuringCurrentScan:
setGeoReferenceFrame:
setGeofence:
setGeofenceCount:
setGpsLocationRequestCount:
setHasAttemptedToIngestLastVisitAtStartup:
setHasSurfacedNotification:
setInSafeLocationState:
setInTravelState:
setInUnsafeLocationState:
setInitializationTime:
setIsAllUsingSameSafe:
setIsCompanionConnected:
setIsFindingRelevantDevices:
setIsInAirplaneMode:
setIsInVehicularTravel:
setIsNotifyWhileTravelingEnabled:
setIsPeriodicScansNeeded:
setIsReplay:
setLastActivated:
setLastEndOfScan:
setLastExtraHELEFoundTime:
setLastExtraNonHELEFoundTime:
setLastLocation:
setLastLongScanContext:
setLastLongScanRequest:
setLastSafeEntry:
setLastStartOfScan:
setLastTravelStart:
setLastUnsafeEntry:
setLastUnsafeLocation:
setLocationRequester:
setLogArchive:
setLongScanIsOngoing:
setMacAddress:
setMonitoredDevices:
setMonitoringSessionManager:
setMonitoringSessionRecord:
setNextAnalyticsSubmission:
setNextOpportunisticScanDate:
setNextScheduledAlarm:
setNextScheduledAlarmForPersistenceWrite:
setNotificationState:
setNumAccessories:
setNumAirPods:
setNumAlerts:
setNumAlertsLeftBehind:
setNumAlertsTraveling:
setNumBTLE:
setNumBTLeftBehindRequests:
setNumBTRequests:
setNumBTTravelingRequests:
setNumDevices:
setNumDevicesAtSafeExit:
setNumEnabled:
setNumGpsRequests:
setNumItems:
setNumMacBook:
setNumSafe:
setNumSafeInUse:
setNumTimers:
setNumUnsafe:
setNumUnsafeWithLOI:
setNumUnsafeWithoutLOI:
setNumWifiRequests:
setNumiPad:
setNumiPhone:
setObject:forKey:
setObject:forKeyedSubscript:
setObservers:
setOngoingAlarms:
setOptions:
setPersistenceDirectoryURL:
setPersistenceManager:
setPersistenceStoreFileName:
setPredicate:
setPreviousBufferEmptyTime:
setPreviousVisitOrLOIEvent:
setQueue:
setReferenceFrame:
setRegionsByRegionIdentifier:
setRelevantDevicesToFindDuringLongScan:
setRequestedPeriodicScan:
setRequestedShortScan:
setRoutineManager:
setSafeLocations:
setSafeLocationsByRegionIdentifier:
setScenario:
setScenarioClassification:
setScenarioClassifier:
setScheduledAlarmForForceUpdateWithYouStatus:
setSeparationAlertsCount:
setService:
setSettings:
setStandby:
setStartTimestamp:
setState:
setStatesByRegionIdentifier:
setStatesBySafeLocation:
setString:
setTimeDelegate:
setTimeOfAttemptToLoadFromPersistence:
setTimeZone:
setTotalVisitDuration:
setTrackedTravelingStartDate:
setTrackedTravelingStartLocation:
setTravelTypeClassifier:
setTravelingGeofenceExitDate:
setUpTravelingGeofencesOnAirplaneModeToggleOffIfNeeded
setUuidsOfRelatedDevices:
setVisitCount:
setWifiLocationRequestCount:
setWithArray:
setWithSet:
setWithYouDetector:
setWithYouStatus:
settings
setupAlarmFireAt:forClient:
shouldIssueBookendedNotificationBasedOnLocationForDevice:
shouldIssueBookendedNotificationBasedOnTimeForDevice:
shouldIssueBookendedNotificationForDevice:
sleepForTimeInterval:
start
startBackgroundScanning
startMonitorSafeLocation:forDevice:
startMonitorUnsafeLocationExit:forDevice:
startOfDayForDate:
startPeriodicScans
startPeriodicScansIfNeeded
startRefreshingBeaconsForSeparationMonitoringWithBlock:
startRefreshingSafeLocationWithBlock:
startSafeLocation:forDevice:
startTimestamp
state
stateForDeviceUUID:
statesByRegionIdentifier
statesBySafeLocation
status
statusForDeviceWithUUID:
stop
stopBackgroundScanning
stopLongAggressiveScan
stopMonitorSafeLocation:forDevice:
stopMonitorUnsafeLocationExit:forDevice:
stopPeriodicScans
stopPeriodicScansIfNotNeeded
stopSafeLocation:forDevice:
store
storeSeparationLocation:
streamDidFail:error:
streamDidStop:
string
stringByAppendingString:
stringByReplacingOccurrencesOfString:withString:
stringToSplit:maxSplitSize:
stringWithFormat:
submitEvent:content:
substringFromIndex:
substringWithRange:
superclass
supportsSecureCoding
systemVersion
timeDelayForRetryScanForAlertForDeviceUUID:alertType:
timeDelegate
timeIntervalSinceDate:
timeOfAttemptToLoadFromPersistence
totalVisitDuration
trackedTravelingStartDate
trackedTravelingStartLocation
travelType
travelTypeClassifier
travelingGeofenceExitDate
type
unarchivedObjectOfClass:fromData:error:
unarchivedObjectOfClasses:fromData:error:
unsignedIntegerValue
updateCurrentScenarioClass:
updateExtraDeviceInformation:
updateFirstAdvertisementAfterScenarioTransition:
updateLastCompanionDisconnectionDate:
updateLastWithYouDate:
updateLastWithYouDate:forDeviceWithUUID:
updateLatestAdvertisement:
updateLatestAdvertisement:forDeviceWithUUID:
updateMonitoringSessionState:forDeviceWithUUID:
updateSafeLocations:
updateScenario:forDeviceWithUUID:
updateWithYouStatus:
updatedMonitoringState:forDeviceUUID:
updatedWithYouStatusFrom:to:forDeviceWithUUID:
uuid
uuidsOfRelatedDevices
vehicularHints
vehicularState
vendorId
visitCount
wifiLocationRequestCount
withYouStatus
writeData:
writeToURL:options:error:
zone
B16@0:8
v40@0:8@16Q24Q32
v40@0:8@"<OSLogCoder>"16Q24Q32
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^{_NSZone=}16
@"NSDate"16@0:8
@"NSDictionary"16@0:8
@40@0:8@16q24@32
q16@0:8
v16@0:8
@"NSUUID"
@"NSDate"
@40@0:8@16Q24@32
@"CLRegion"
@40@0:8@16@24@32
v24@0:8Q16
v32@0:8@16Q24
v24@0:8q16
v20@0:8B16
@"SADevice"
@"TASPAdvertisement"
@"NSMutableArray"
@"<SAAnalyticsServiceProtocol>"
@"<SATimeServiceProtocol>"
@88@0:8@16@24@32@40q48q56Q64B72B76@80
@104@0:8@16@24@32@40@48@56q64q72Q80B88B92@96
@112@0:8@16@24@32q40@48@56@64q72q80Q88B96B100@104
@"NSString"
@"NSMutableDictionary"
@72@0:8@16d24d32d40Q48@56@64
d16@0:8
@44@0:8@16Q24B32@36
@"SASafeLocation"
@32@0:8@16@24
@"NSDictionary"
B40@0:8@16@24@32
v32@0:8@16@24
B40@0:8@"OSLogPersistence"16@"NSArray"24@"NSError"32
v32@0:8@"NSDate"16@"NSDate"24
B32@0:8@16@24
B32@0:8@"OSActivityStream"16@"NSArray"24
v24@0:8@"OSActivityStream"16
v32@0:8@"OSActivityStream"16@"NSError"24
B40@0:8@"OSActivityStream"16@"NSArray"24@"NSError"32
B56@0:8@16@24@32q40@48
B56@0:8@"OSActivityStream"16@"NSString"24@"OSLogDevice"32q40@"NSError"48
@"SAService"
@"OSLogPersistence"
@"OSActivityStream"
@"NSObject<OS_dispatch_semaphore>"
@"NSURL"
@"SAAnalytics"
@24@0:8Q16
v24@0:8@"<SATravelTypeClassifierClientProtocol>"16
v24@0:8@"<TAEventProtocol>"16
B32@0:8Q16Q24
v40@0:8Q16Q24Q32
@"NSHashTable"
v24@0:8@"<SAFenceManagerClientProtocol>"16
B32@0:8@"CLRegion"16@"NSUUID"24
B32@0:8@"SASafeLocation"16@"NSUUID"24
v32@0:8Q16@24
v24@0:8@"NSUUID"16
v24@0:8@"<SAPowerLogClientProtocol>"16
v24@0:8d16
@"NSMutableSet"
@56@0:8@16Q24@32Q40@48
@"CLCircularRegion"
@"TALocationLite"
@"SAScenarioClassifier"
@"CLLocation"
Q24@0:8@16
q24@0:8@16
v24@0:8@"<SAMonitoringSessionManagerClientProtocol>"16
Q24@0:8@"NSUUID"16
q24@0:8@"NSUUID"16
v40@0:8Q16Q24@32
v40@0:8Q16Q24@"NSUUID"32
@88@0:8@16@24@32@40@48@56@64@72@80
v40@0:8@16@24@32
v28@0:8@16B24
v36@0:8@16@24B32
@40@0:8@16@24Q32
v40@0:8@16@24Q32
d32@0:8@16Q24
B40@0:8@16@24Q32
@"<SAWithYouDetectorServiceProtocol>"
@"<SAGeoFenceRequestProtocol>"
@"<SAFenceManagerServiceProtocol><SAFenceManagerRequestProtocol>"
@"SADeviceRecord"
@"<SATravelTypeClassifierServiceProtocol>"
@"SAPersistenceManager"
@"SAAudioAccessory"
@"<TAEventProtocol>"
v32@0:8@"NSArray"16Q24
v24@0:8@"<SAWithYouDetectorClientProtocol>"16
@56@0:8@16@24@32@40@48
v84@0:8Q16B24d28d36Q44d52Q60d68Q76
d24@0:8@16
B24@0:8q16
B32@0:8Q16@24
Q24@0:8Q16
@"<SABluetoothScanRequestProtocol>"
@"<SALocationRequestProtocol>"
Q20@0:8i16
v24@0:8@"<SAServiceClientProtocol>"16
v48@0:8@16@24@32@40
v40@0:8@16d24@32
v28@0:8@"SAService"16B24
v48@0:8@"SAService"16@"NSArray"24@"CLLocation"32@"NSDictionary"40
v32@0:8@"SAService"16Q24
v32@0:8@"SAService"16@"CLRegion"24
v40@0:8@"SAService"16d24@"NSUUID"32
v32@0:8@"SAService"16@"NSUUID"24
v24@0:8@"SAService"16
@"SPBeaconManager"
@"SPOwnerSession"
@"NSObject<SPSeparationMonitoringProtocol>"
@"NSObject<OS_dispatch_queue>"
@"RTRoutineManager"
@"<SATimeClientProtocol>"
@"NSUUID"32@0:8@"NSDate"16@"<SATimeClientProtocol>"24
@28@0:8@16B24
^v16@0:8
v24@0:8^v16
@"<SATimeEventRequestProtocol>"
@"SAPersistenceStore"
@"SAPersistenceManagerSettings"
@32@0:8@16^@24
v24@0:8@"<SAScenarioClassifierClientProtocol>"16
v40@0:8Q16@24@32
v40@0:8Q16@"SASafeLocation"24@"NSUUID"32
v40@0:8Q16@"CLRegion"24@"NSUUID"32
v24@0:8@"CLRegion"16
B24@0:8Q16
v32@0:8Q16Q24
@"<SAFenceManagerRequestProtocol>"
@32@0:8@16Q24
v40@0:8@"NSArray"16@"CLLocation"24@"NSDictionary"32
v32@0:8Q16@"NSUUID"24
v32@0:8d16@24
v32@0:8d16@"NSUUID"24
@36@0:8@16B24@28
@"SATime"
@"SAWithYouDetector"
@"SAMonitoringSessionManager"
@"SAFenceManager"
@"SATravelTypeClassifier"
@"SAPowerLog"
q20@0:8i16
v32@0:8^q16^q24
v32@0:8^{BTSessionImpl=}16i24i28
^{BTSessionImpl=}16@0:8
v24@0:8^{BTSessionImpl=}16
^{BTAccessoryManagerImpl=}16@0:8
v24@0:8^{BTAccessoryManagerImpl=}16
^{BTDeviceImpl=}16@0:8
v24@0:8^{BTDeviceImpl=}16
I16@0:8
v20@0:8I16
i16@0:8
v20@0:8i16
^{BTSessionImpl=}
^{BTAccessoryManagerImpl=}
^{BTDeviceImpl=}
@20@0:8B16
v100@0:8Q16Q24Q32Q40Q48Q56Q64Q72Q80Q88B96
v28@0:8B16Q20
v28@0:8d16B24
v24@0:8B16B20
v32@0:8@"NSString"16@"NSDictionary"24
v24@0:8@"NSDictionary"16
@"SAAnalyticsSettings"
SAConnectionEventIdentifier
SAConnectionEventState
SAConnectionEventDate
EventType
SATimeEventDate
GeofenceEventRegion
GeofenceEventType
GeofenceEventDate
<unknown>
Inside
Outside
Entry
Exit
<invalid>
UUID
Device
WithYouStatus
ConnectionState
NotificationState
LatestAdvertisement
LastWithYouDate
RelatedDevices
Surfaced
FirstAdvertisement
CurrentScenarioTime
currentScenario
firstDetectedToNextScenarioTimeInterval
nextScenario
previousMonitoringState
scenarioChangeToFirstDetectedTimeInterval
com.apple.clx.alert.firstAdv
SADeviceIdentifier
SADeviceGroupIdentifier
SADevicePartIdentifier
SADeviceName
SADeviceModel
SADeviceSystemVersion
SADeviceVendorId
SADeviceProductId
SADeviceType
SADeviceNotifyEnabled
SADeviceIsAppleAudioAccessory
SADeviceDate
SADeviceMacAddress
MonitoringSessionRecord
SASafeLocationIdentifier
SASafeLocationLatitude
SASafeLocationLongitude
SASafeLocationRadius
SASafeLocationReferenceFrame
SASafeLocationNameString
SASafeLocationDate
SASafeLocationUpdateEventSafeLocation
SASafeLocationUpdateEventType
SASafeLocationUpdateEventLast
SASafeLocationUpdateEventDate
kSASafeLocationsEventKeySafeLocations
kSASafeLocationsEventKeyDate
process == 'locationd'
subsystem == 'com.apple.TrackingAvoidance'
category == 'SeparationAlertsEvents'
processID == %d
category == 'SeparationAlerts'
Error writing replay result to file
ReplayStatus: %s
Log stream stopped
Log stream started
Stream error: %@
Replaying with
StartDate: %@
EndDate: %@
Writing output to: %@
STREAM START TIMEOUT
REPLAY TIMEOUT
STREAM STOP TIMEOUT
HEX DESERIALIZATION EXCEPTION: %@
ERROR DESERIALIZING EVENT: %@
Got activity events from log archive
Error in replaying logarchive: %@
Finished fetching events from log archive
replaying:%@
Could not replay event %@
v8@?0
com.apple.tracking-avoidance
Status
Events
com.apple.TrackingAvoidance
SeparationAlerts
SeparationAlertsEvents
Unknown
NonVehicular
Vehicular
NonVehicular - Static
NonVehicular - Pedestrian
NonVehicular - Cycling
unsafe_
SADeviceUpdateEventDevice
SADeviceUpdateEventType
SADeviceUpdateEventLast
SADeviceUpdateEventDate
kSADevicesWithSafeLocationsEventKeyDevices
kSADevicesWithSafeLocationsEventKeySafeLocationIDs
kSADevicesWithSafeLocationsEventKeyDate
SAMonitoringSessionIdentifier
SAMonitoringSessionState
SAMonitoringSessionGeofence
SAMonitoringSessionScenario
SAMonitoringSessionTrackedTravelingStartDate
SAMonitoringSessionTrackedTravelingStartLocation
iPhone
iPad
MacBook
left
right
unsafe_%@
TrackedInUnsafeLocation
TrackedTraveling
Untracked
Separated
SeparationVerification
EndMonitoring
com.apple.clx.separationalerts.scan
scanType
isPartOfLongScan
scanDuration
relevantOnlyScanDuration
foundExtraHELECount
extraHELEScanDuration
foundExtraNonHELECount
extraNonHELEScanDuration
longScanContext
WithYou
NotWithYou
WithYouToBeVerified
NotWithYouToBeVerified
UnsafeExit
EndOfTravel
TravelingGeofenceExit
StandbyExit
NewMonitoredDeviceAdded
AirplaneModeToggle
EarlyVehicularTrigger
RetryScan
WatchScenarioTransition
EnableWithDevicesNeedingTransition
v16@?0@"NSSet"8
Watch
v24@?0@"SPBeaconGroup"8@"NSError"16
v24@?0@"RTLocationOfInterest"8@"NSError"16
v24@?0@"NSArray"8@"NSError"16
vector
/var/root/Library/Caches/locationd/TrackingAvoidance/
separationalerts.bin
com.apple.tracking-avoidance.NSJSONSerializationNSString
Invalid dictionary for JSON serialization
Refer to NSJSONSerialization spec for valid dictionaries
NSJSONSerialization failed
inSafeLocation
inUnsafeLocation
Traveling
%@%@
DeviceRecord
SAAudioAccessory
com.apple.clx.alert.heartbeats
numAlerts
numAlertsLeftBehind
numAlertsTraveling
numEnabled
numItems
numAccessories
numBTLE
numDevices
numiPhone
numiPad
numMacBook
numAirPods
numSafe
numSafeInUse
isAllUsingSameSafe
numBTRequests
numBTLeftBehindRequests
numBTTravelingRequests
numGpsRequests
numWifiRequests
numTimers
numDevicesAtSafeExit
numUnsafe
numUnsafeWithLOI
numUnsafeWithoutLOI
aggActiveDuration
aggInSafeDuration
aggInUnsafeDuration
aggInTravelDuration
totalScanDuration
totalScanDurationForFindingRelevantItemsOnly
%@ instance failed to create description:%@
{"msg%{public}.0s":"#SATravelTypeClassifier handleVehicleState", "curr":"%{private}s", "new":"%{private}s", "hints":"%{private}s"}
{"msg%{public}.0s":"#SATravelTypeClassifier handleUserActivity", "curr":"%{private}s", "new":"%{private}s"}
{"msg%{public}.0s":"#SATravelTypeClassifier notifyTravelTypeChange", "from":"%{private}s", "to":"%{private}s"}
{"msg%{public}.0s":"#sa #fencemgr, Could not find region for safe location"}
{"msg%{public}.0s":"#sa #fencemgr, Safe location already used for this device"}
{"msg%{public}.0s":"#sa #fencemgr, Safe location state should have been set to unknown at least"}
{"msg%{public}.0s":"#sa #fencemgr, Can't remove a non-existent safe location"}
{"msg%{public}.0s":"#sa #fencemgr, Unsafe location already used for this device"}
{"msg%{public}.0s":"#sa #fencemgr, Unsafe location state should have been set to unknown at least"}
{"msg%{public}.0s":"#sa #fencemgr, Can't remove a non-existent unsafe location"}
{"msg%{public}.0s":"#sa #fencemgr handleFenceEvent for unsafe location not in dictionary", "deviceUUID":"%{private}@"}
{"msg%{public}.0s":"#sa #fencemgr, region monitoring error", "regionUUID":"%{private}@"}
{"msg%{public}.0s":"#sa #fencemgr, notify state for safe", "regionUUID":"%{private}s", "Clients":%{private}ld, "Found":"%{private}s"}
{"msg%{public}.0s":"#sa #fencemgr, notify state for unsafe", "regionUUID":"%{private}s", "Clients":%{private}ld}
{"msg%{public}.0s":"#SAMonitoringSessionManager request to start scanning"}
{"msg%{public}.0s":"#SAMonitoringSessionManager request to stop scanning"}
{"msg%{public}.0s":"#SAMonitoringSessionManager bootstraped from persisted data", "uuid":"%{private}@", "state":"%{private}@", "scenario":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager requesting terminable long scan on enable with devices needing transition", "count of devices needing transition":%{private}ld}
{"msg%{public}.0s":"#SAMonitoringSessionManager enabling sa"}
{"msg%{public}.0s":"#SAMonitoringSessionManager disabling sa"}
{"msg%{public}.0s":"#SAMonitoringSessionManager createMonitoringDevice nil UUID"}
{"msg%{public}.0s":"#SAMonitoringSessionManager createMonitoringDevice while not enabled"}
{"msg%{public}.0s":"#SAMonitoringSessionManager createMonitoringDevice monitoring session already exists", "uuid":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager createMonitoringDevice", "uuid":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager cancelMonitoringDevice nil UUID"}
{"msg%{public}.0s":"#SAMonitoringSessionManager cancelMonitoringDevice monitoring session does not exist", "uuid":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager canceled monitoring session", "uuid":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager attemptToPopulateTrackedTravelingStartLocationForDevice not in one of the traveling states", "uuid":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager attemptToPopulateTrackedTravelingStartLocationForDevice already set", "uuid":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager attemptToPopulateTrackedTravelingStartLocationForDevice lastLocation is not recent enough, adding to set to be populated", "uuid":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager changeMonitoringSessionState UUID doesn't map to monitoring session", "uuid":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager changeMonitoringSessionState no state change necessary", "uuid":"%{private}@", "fromState":"%{private}@", "toState":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager changeMonitoringSessionState", "uuid":"%{private}@", "fromState":"%{private}@", "toState":"%{private}@"}
{"msg%{public}.0s":"#sa check in ear status received unknown audioAccessoryManager"}
{"msg%{public}.0s":"#sa check in ear status received unknown macAddress"}
{"msg%{public}.0s":"#sa received in ear status", "macAddress":"%{private}@", "primary":%{private}ld, "secondary":%{private}ld}
{"msg%{public}.0s":"#sa received primary bud side", "bud side":%{private}ld}
{"msg%{public}.0s":"#sa Service tried to notify with no corresponding device", "uuid":"%{private}@"}
{"msg%{public}.0s":"SAMonitoringSessionManager in ear status before notifying", "state":%{private}ld}
{"msg%{public}.0s":"#sa separation for classically connected device", "device":"%{private}@"}
{"msg%{public}.0s":"#sa notify separation", "uuid":"%{private}@", "name":"%{private}@", "type":%{private}ld}
{"msg%{public}.0s":"#SAMonitoringSessionManager travel exit while in standby"}
{"msg%{public}.0s":"#SAMonitoringSessionManager is only monitoring disconnected companion device, skipping force update all WithYouStatus"}
{"msg%{public}.0s":"#SAMonitoringSessionManager unable to set while traveling fence due to no session", "uuid":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager unable to set while traveling fence due to no last location", "uuid":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager unable to remove while traveling fence due to no session", "uuid":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager standby notify"}
{"msg%{public}.0s":"#SAMonitoringSessionManager unable to notify while traveling due to no session", "uuid":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager notifyWhileTraveling with nil location"}
{"msg%{public}.0s":"#SAMonitoringSessionManager unable to notify when left behind due to no session", "uuid":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager notifyWhenLeftBehind without suggesting location"}
{"msg%{public}.0s":"#SAMonitoringSessionManager standby notify early"}
{"msg%{public}.0s":"#SAMonitoringSessionManager unable to notify early left behind due to no session", "uuid":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager unable to create/recommend location", "uuid":"%{private}@", "context":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager new device", "uuid":"%{private}@", "name":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager remove device", "uuid":"%{private}@", "name":"%{private}@"}
#SAMonitoringSessionManager found removed location, for deviceId, %{private}@
#SAMonitoringSessionManager attempted adding non-existing location, for deviceId, %{private}@
{"msg%{public}.0s":"#SAMonitoringSessionManager update safe locations", "device":"%{private}@", "count":%{private}ld}
{"msg%{public}.0s":"#SAMonitoringSessionManager start location error", "location":"%{private}@", "device":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager start location device error", "device":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager start location", "location":"%{private}@", "device":"%{private}@", "refFrame":%{private}lu}
{"msg%{public}.0s":"#SAMonitoringSessionManager stop location error", "location":"%{private}@", "device":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager stop location device error", "device":"%{private}@"}
#SAMonitoringSessionManager stop location %{private}@ for device %{private}@
#SAMonitoringSessionManager found unpaired device, clearing deviceId, %{private}@
#SAMonitoringSessionManager found unpaired device in monitoring session record, clearing deviceId, %{private}@
{"msg%{public}.0s":"#SAMonitoringSessionManager no tracked traveling start date"}
{"msg%{public}.0s":"#SAMonitoringSessionManager shouldIssueBookendedNotificationBasedOnTimeForDevice", "min travel satisified":%{private}hhd, "min duration after persistence":%{private}hhd}
{"msg%{public}.0s":"#SAMonitoringSessionManager shouldIssueBookendedNotificationForDevice", "based on location":%{private}hhd, "based on time":%{private}hhd}
{"msg%{public}.0s":"#SAMonitoringSessionManager update devices", "count":%{private}ld}
{"msg%{public}.0s":"#SAMonitoringSessionManager update safe locations", "count":%{private}ld}
{"msg%{public}.0s":"#SAMonitoringSessionManager updateLocation update criteria not satisfied", "lastLocation":"%{private}@", "newLocation":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager updateLocation updated", "lastLocation":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager updateLocation populating tracked traveling start location", "device count":%{private}lu}
{"msg%{public}.0s":"#SAMonitoringSessionManager updateLocation populating tracked traveling start location", "device":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager handleGeofenceEvent invalid geofenceEvent", "geofence":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager handleGeofenceEvent received geofenceEvent", "geofence":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager handleGeofenceEvent geofenceEvent cannot be mapped to monitoring session", "geofence":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager handleGeofenceEvent ignored (recent crash?)", "geofence":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager removeDisableReason", "reason":%{private}lu}
{"msg%{public}.0s":"#SAMonitoringSessionManager addDisableReason", "reason":%{private}lu}
{"msg%{public}.0s":"#SAMonitoringSessionManager requesting terminable long aggressive scan on Airplane Mode toggle", "count of devices to find":%{private}ld}
{"msg%{public}.0s":"#SAMonitoringSessionManager didChangeScenarioClass end monitoring skip"}
{"msg%{public}.0s":"#SAMonitoringSessionManager didChangeScenarioClass", "sessionState":"%{private}@", "fromScenario":"%{private}@", "toScenario":"%{private}@", "uuid":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager not requesting aggressive scan, entering safe location for device", "uuid":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager requesting short aggressive scan, exiting safe location for device", "uuid":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager requesting a terminable long aggressive scan to find tracked device when exiting unsafe location", "uuid":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager requesting short aggressive scan, exiting unsafe location and device is not tracked", "uuid":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager requesting a terminable long aggressive scan to find tracked device when ending traveling scenario", "uuid":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager requesting short aggressive scan, ending traveling scenario and device is not tracked", "uuid":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager removing currentVisitOrLOIEvent due to scenario change", "currentVisitOrLOIEvent":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager got unknown with-you status", "uuid":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager got to be verified with-you status at the end of a force update", "uuid":"%{private}@", "status":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager updatedWithYouStatus", "sessionState":"%{private}@", "fromStatus":"%{private}@", "toStatus":"%{private}@", "scenario":"%{private}@", "uuid":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager Unknown signal state", "sessionState":"%{private}@", "fromStatus":"%{private}@", "toStatus":"%{private}@", "uuid":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager session already finished", "sessionState":"%{private}@", "uuid":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager travel bookending into a safe location", "uuid":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager issuing travel bookending notification into an unsafe location", "uuid":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager not issuing travel bookending notification into an unsafe location", "uuid":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager received unexpected status in verification stage", "uuid":"%{private}@", "status":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager received unexpected status in left location stage", "uuid":"%{private}@", "status":"%{private}@"}
{"msg%{public}.0s":"#SAMonitoringSessionManager lost from unsafe to safe", "uuid":"%{private}@"}
{"msg%{public}.0s":"SAMonitoringSessionManager schedule retry scan", "uuid":"%{private}@", "alertType":%{private}ld, "withYouStatus":%{private}ld}
{"msg%{public}.0s":"SAMonitoringSessionManager alarm fired while not standby, requesting a terminable long aggressive scan", "devices pending transition count":%{private}ld}
{"msg%{public}.0s":"SAMonitoringSessionManager alarm fired while standby, requesting short aggressive scan"}
{"msg%{public}.0s":"SAMonitoringSessionManager device found in monitoringSession list, but not in devices list"}
{"msg%{public}.0s":"#SAMonitoringSessionManager requesting terminable long aggressive scan on travel type change", "count of devices to find":%{private}ld}
{"msg%{public}.0s":"#sa #withyou at least one device not found yet", "uuid":"%{private}@"}
{"msg%{public}.0s":"#sa #withyou all devices found"}
{"msg%{public}.0s":"#sa #withyou at least one sa enabled device not found yet", "uuid":"%{private}@"}
{"msg%{public}.0s":"#sa #withyou all sa enabled devices found"}
{"msg%{public}.0s":"#sa #withyou skip requesting scan - leash-only"}
{"msg%{public}.0s":"#sa #withyou requesting scan to force update withyou status"}
{"msg%{public}.0s":"#sa #withyou force update to find devices", "device list":"%{private}@", "context":"%{private}s"}
{"msg%{public}.0s":"#sa #withyou devices to find", "devices to find":"%{private}@", "devices found":"%{private}@"}
{"msg%{public}.0s":"#sa #withyou some remaining devices to find, requesting long aggressive scan if not already ongoing"}
{"msg%{public}.0s":"#sa #withyou no more devices to find, recording time of last device found for metrics"}
{"msg%{public}.0s":"#sa #withyou some remaining sa enabled devices to find, requesting long aggressive scan if not already ongoing"}
{"msg%{public}.0s":"#sa #withyou no more sa enabled devices to find while long scan is ongoing, requesting to stop long aggressive scan"}
{"msg%{public}.0s":"#sa #withyou skip requesting short scan - leash-only"}
{"msg%{public}.0s":"#sa #withyou requesting short scan to force update withyou status"}
{"msg%{public}.0s":"#sa #withyou status updated connection state changed", "uuid":"%{private}@", "oldStatus":"%{private}@", "newStatus":"%{private}@"}
{"msg%{public}.0s":"#sa #withyou found new device", "uuid":"%{private}@"}
{"msg%{public}.0s":"#sa #withyou no more devices to find while long scan is ongoing, recording time of last device found for metrics"}
{"msg%{public}.0s":"#sa #withyou status updated observed advertisement", "uuid":"%{private}@", "oldStatus":"%{private}@", "newStatus":"%{private}@"}
{"msg%{public}.0s":"#sa #withyou detected a device with more than maximum allowable related beacons", "uuid":"%{private}@", "count":%{private}ld}
{"msg%{public}.0s":"#sa #withyou status updated observed advertisement from related device", "uuid":"%{private}@", "oldStatus":"%{private}@", "newStatus":"%{private}@"}
{"msg%{public}.0s":"#sa #withyou trying to get status bit of related device at out of bound index"}
{"msg%{public}.0s":"#sa #withyou status updated end of scan", "uuid":"%{private}@", "oldStatus":"%{private}@", "newStatus":"%{private}@"}
{"msg%{public}.0s":"#sa #withyou status updated on adv buffer empty event", "uuid":"%{private}@", "oldStatus":"%{private}@", "newStatus":"%{private}@"}
{"msg%{public}.0s":"#sa #withyou travel type change", "from":"%{private}@", "to":"%{private}@"}
#sa ServiceMgr received unknown device type, %{private}@
{"msg%{public}.0s":"#sa ServiceMgr FetchSafe", "uuid":"%{private}@", "name":"%{private}@", "lat":"%{private}f", "lon":"%{private}f", "radius":"%{public}f", "refFrame":%{private}lu}
#sa ServiceMgr endFetchSafe, %{public}d
{"msg%{public}.0s":"#sa ServiceMgr FetchBeaconGroup", "device":"%{private}@", "macAddress":"%{private}@"}
{"msg%{public}.0s":"#sa ServiceMgr FetchSafeForBeacon", "device":"%{private}@", "uuid":"%{private}@", "name":"%{private}@", "lat":"%{private}f", "lon":"%{private}f", "radius":"%{public}f", "refFrame":%{private}lu}
{"msg%{public}.0s":"#sa ServiceMgr FetchAll", "name":"%{private}@", "device":"%{private}@", "type":"%{private}@", "safes":"%{private}@"}
#sa ServiceMgr endFetchBeaconsSafe, %{public}d
#sa ServiceMgr endFetchAll %{public}d, types, %{public}d
{"msg%{public}.0s":"#manager:visit not ingesting TAEvent as SA service is down"}
{"msg%{public}.0s":"#manager:visit no last visit to bootstrap onto"}
{"msg%{public}.0s":"#manager:visit got last visit", "visits":"%{private}@"}
{"msg%{public}.0s":"#sa #loi error fetching LOI", "visit":"%{private}@", "error":"%{public}@"}
{"msg%{public}.0s":"#sa #loi received nil in return when fetching LOI", "visit":"%{private}@", "loiIdentifier":"%{private}@"}
{"msg%{public}.0s":"#sa #loi received LOI", "loi":"%{private}@", "loiIdentifier":"%{private}@"}
#sa ServiceMgr enableMonitoringForSeparations: %{public}d
#sa ServiceMgr notifyAboutDevices:%{private}ld
#sa ServiceMgr requestBluetoothScan:%{private}#lx
#sa ServiceMgr requestLocationForType:%{private}#lx
#sa ServiceMgr addGeofence
#sa ServiceMgr removeGeofence
#sa ServiceMgr requestStateForRegion
#sa ServiceMgr scheduleSATimeEvent:%{public}#lf
{"msg%{public}.0s":"#sa ServiceMgr cancelSATimeEventForAlarm", "uuid":"%{public}@"}
{"msg%{public}.0s":"#sa ServiceMgr startBackgroundScanning"}
{"msg%{public}.0s":"#sa ServiceMgr stopBackgroundScanning"}
{"msg%{public}.0s":"#sa ServiceMgr stopLongAggressiveScan"}
{"msg%{public}.0s":"#sa ServiceMgr fetchLastVisit"}
{"msg%{public}.0s":"#SATime alarm fired", "uuid":"%{private}@", "alarmDate":"%{private}@", "client":"%{private}@"}
{"msg%{public}.0s":"#SATime received event with future date", "Event":"%{private}@"}
{"msg%{public}.0s":"#SAPersistenceManager encountered error in creating directory", "error":"%{private}s"}
{"msg%{public}.0s":"#SAPersistenceManager file does not exist"}
{"msg%{public}.0s":"#SAPersistenceManager encountered error in loading file", "url":"%{private}s", "error":"%{private}s"}
{"msg%{public}.0s":"#SAPersistenceManager encountered error in unarchiving store", "url":"%{private}s", "error":"%{private}s"}
{"msg%{public}.0s":"#SAPersistenceManager no store to save"}
{"msg%{public}.0s":"#SAPersistenceManager saving to location", "path":"%{private}s"}
{"msg%{public}.0s":"#SAPersistenceManager error archiving store", "error":"%{private}s"}
{"msg%{public}.0s":"#SAPersistenceManager error reseting directory", "error":"%{private}s"}
{"msg%{public}.0s":"#SAScenarioClassifier notifyScenarioChange", "device":"%{private}@", "from":"%{private}s", "to":"%{private}s"}
{"msg%{public}.0s":"#SAScenarioClassifier setting current unsafe location from nil", "device":"%{private}@"}
{"msg%{public}.0s":"#SAScenarioClassifier forUnsafeLocation location", "device":"%{private}@"}
{"msg%{public}.0s":"#SAScenarioClassifier didDetermineState unsafe", "device":"%{private}@", "state":%{private}ld}
{"msg%{public}.0s":"#SAScenarioClassifier forUnsafeLocation unexpected", "device":"%{private}@"}
{"msg%{public}.0s":"#SAScenarioClassifier forUnsafeLocation in safe", "device":"%{private}@"}
{"msg%{public}.0s":"#SAScenarioClassifier forUnsafeLocation not supported", "device":"%{private}@"}
{"msg%{public}.0s":"#SAScenarioClassifier didDetermineState safe", "device":"%{private}@", "state":%{private}ld}
{"msg%{public}.0s":"#warning #SAScenarioClassifier forSafeLocation in unsafe", "device":"%{private}@"}
{"msg%{public}.0s":"#SAScenarioClassifier forSafeLocation not supported", "device":"%{private}@"}
{"msg%{public}.0s":"#warning #SAScenarioClassifier visit while in safe", "device":"%{private}@"}
{"msg%{public}.0s":"#warning #SAScenarioClassifier visit while in unsafe", "device":"%{private}@"}
{"msg%{public}.0s":"#warning #SAScenarioClassifier LOI while in safe", "device":"%{private}@"}
{"msg%{public}.0s":"#warning #SAScenarioClassifier LOI while in unsafe", "device":"%{private}@"}
{"msg%{public}.0s":"#SAScenarioClassifier addUnsafeLocation replacing already existing unsafe", "device":"%{private}@", "old":"%{private}@", "new":"%{private}@"}
{"msg%{public}.0s":"#SAScenarioClassifier addSafeLocation replacing", "device":"%{private}@", "location":"%{private}@"}
{"msg%{public}.0s":"#SAScenarioClassifier removeSafeLocation not in set", "device":"%{private}@", "location":"%{private}@"}
{"msg%{public}.0s":"Archiver error", "Error":"%{private}@", "String":"%{private}@"}
unarchive error: %@
{"msg%{public}.0s":"#sa related devices update for device", "uuid":"%{private}@", "groupID":"%{private}@", "related devices":"%{private}@"}
#sa Service enableMonitoringForSeparations: %{public}d
#sa Service notifyAboutDevices:%{private}lu
#sa Service requestBluetoothScan:%{private}#lx
#sa Service requestLocationForType:%{private}#lx
#sa Service addGeofence
#sa Service removeGeofence
#sa Service requestStateForRegion
#sa Service scheduleSATimeEvent:%{public}#lf
{"msg%{public}.0s":"#sa Service cancelSATimeEventForAlarm", "uuid":"%{public}@"}
{"msg%{public}.0s":"#sa Service startBackgroundScanning"}
{"msg%{public}.0s":"#sa Service stopBackgroundScanning"}
{"msg%{public}.0s":"#sa Service stopLongAggressiveScan"}
{"msg%{public}.0s":"#sa Service fetchLastVisit"}
{"msg%{public}.0s":"Ingesting event", "Event":"%{private}@"}
{"msg%{public}.0s":"SAAudioAccessory failed to register BT session callback"}
{"msg%{public}.0s":"SAAudioAccessory received unknown BT address"}
{"msg%{public}.0s":"SAAudioAccessory set BT address of the current device", "address":"%{private}@"}
{"msg%{public}.0s":"SAAudioAccessory refresh device failed - invalid BT session"}
{"msg%{public}.0s":"SAAudioAccessory refresh device failed - invalid BT address", "address":"%{private}@"}
{"msg%{public}.0s":"SAAudioAccessory refresh device failed - failed to convert address into a valid BT address", "address":"%{private}@"}
{"msg%{public}.0s":"SAAudioAccessory refresh device failed - Failed to get the device handle with BT address", "address":"%{private}@"}
{"msg%{public}.0s":"SAAudioAccessory refresh device failed - Failed to get the product ID"}
{"msg%{public}.0s":"SAAudioAccessory in ear status - invalid BT device"}
{"msg%{public}.0s":"SAAudioAccessory in ear status - invalid BT address", "address":"%{private}@"}
{"msg%{public}.0s":"SAAudioAccessory in ear status - failed to get IED setting"}
{"msg%{public}.0s":"SAAudioAccessory in ear status - IED is disabled"}
{"msg%{public}.0s":"SAAudioAccessory in ear status - failed to get inear status"}
{"msg%{public}.0s":"SAAudioAccessory received in ear status", "Primary":%{private}ld, "Secondary":%{private}ld}
{"msg%{public}.0s":"SAAudioAccessory in ear status - invalid BT device when get primary bud side"}
{"msg%{public}.0s":"SAAudioAccessory in ear status - invalid BT address when get primary bud side"}
{"msg%{public}.0s":"SAAudioAccessory in ear status - failed to get primary bud"}
{"msg%{public}.0s":"SAAudioAccessory BT session terminated"}
{"msg%{public}.0s":"SAAudioAccessory BT session re-attaching", "Retry count":%{private}d}
{"msg%{public}.0s":"SAAudioAccessory BT session attached successfully"}
{"msg%{public}.0s":"SAAudioAccessory Accessory Mananger unavailable.", "status":%{private}d}
,Am{
SAConnectionEvent
OSLogCoding
TAEventProtocol
NSObject
NSSecureCoding
NSCoding
NSCopying
SATimeEvent
SAGeofenceEvent
SASingleDeviceRecord
SADevice
SAPersistenceStore
SASafeLocation
SASafeLocationUpdateEvent
SASafeLocationsEvent
SAReplay
OSLogPersistenceDelegate
OSActivityStreamDelegate
OSDeviceDelegate
SATravelTypeClassifier
SATravelTypeClassifierServiceProtocol
SAFenceManager
SAFenceManagerServiceProtocol
SAFenceManagerRequestProtocol
SADeviceUpdateEvent
SADevicesWithSafeLocationsEvent
SAPowerLog
SAPowerLogServiceProtocol
SAMonitoringSession
SAMonitoringSessionManager
SAMonitoringSessionManagerServiceProtocol
SAScenarioClassifierClientProtocol
SAWithYouDetectorClientProtocol
SATimeClientProtocol
SATravelTypeClassifierClientProtocol
SAWithYouDetector
SAWithYouDetectorServiceProtocol
TADateFormat
SAServiceManager
SAServiceServiceProtocol
SAServiceClientProtocol
SAAlarmTask
SATime
SATimeServiceProtocol
SAPersistenceManagerSettings
SAPersistenceManager
NSString
SAScenarioClassifier
SAScenarioClassifierServiceProtocol
SAFenceManagerClientProtocol
SALoggingUtilities
SADeviceRecord
SAService
SAMonitoringSessionManagerClientProtocol
SABluetoothScanRequestProtocol
SALocationRequestProtocol
SAPowerLogClientProtocol
SAGeoFenceRequestProtocol
SATimeEventRequestProtocol
SAAudioAccessory
SAAnalyticsSettings
SAAnalytics
SAAnalyticsServiceProtocol
T@"NSDate",&,N,V_startTimestamp
JSONStringFromNSDictionary:error:
T@"SAAnalytics",&,N,V_analytics
T@"<SAAnalyticsServiceProtocol>",&,N,V_analytics
TB,N,V_isReplay
T@"<SAFenceManagerRequestProtocol>",&,N,V_delegate
TQ,N,V_scenario
T@"<SAGeoFenceRequestProtocol>",&,N,V_fenceRequestServicer
T^{BTDeviceImpl=},N,V_fBTDevice
T@"<SATimeClientProtocol>",W,N,V_client
_client
T@"<SATimeServiceProtocol>",&,N,V_clock
_deviceIsWatch:
T@"<SATravelTypeClassifierServiceProtocol>",&,N,V_travelTypeClassifier
_lastCompanionDisconnectionDate
T@"<TAEventProtocol>",&,N,V_currentVisitOrLOIEvent
_numGpsRequests
T@"CLCircularRegion",&,N,V_geofence
_radius
T@"CLLocation",&,N,V_caSeparationLocation
_region
T@"CLRegion",C,N,V_lastUnsafeLocation
_startTimestamp
T@"NSDate",&,N,V_caLastAlertDate
aggScanDuration
T@"NSDate",&,N,V_earlyVehicularStateChangeDate
attachBTSession
T@"NSDate",&,N,V_lastActivated
base64EncodedStringWithOptions:
T@"NSDate",&,N,V_lastExtraHELEFoundTime
clients
T@"NSDate",&,N,V_lastLongScanRequest
containsObject:
T@"NSDate",&,N,V_lastSafeEntry
convertSAWithYouStatusToString:
T@"NSDate",&,N,V_lastTravelStart
dateWithTimeInterval:sinceDate:
T@"NSDate",&,N,V_nextAnalyticsSubmission
devices
T@"NSDate",&,N,V_previousBufferEmptyTime
enableMonitoringForSeparations:
T@"NSDate",&,N,V_trackedTravelingStartDate
getDate
T@"NSDate",C,N,V_currentTravelTypeChangeDate
getType
T@"NSDate",R,C,N,V_date
increaseGpsLocationRequestCount
T@"NSDate",R,C,N,V_scenarioChangeDate
initWithExternalTimer:isReplay:
T@"NSDate",R,N,V_currentScenarioTime
initWithTimeInterval:sinceDate:
T@"NSDate",R,N,V_lastCompanionDisconnectionDate
isSafeLocation:
T@"NSDate",R,N,V_now
lastTravelStart
T@"NSDictionary",R,C,N,V_safeLocations
lastWithYouDate
T@"NSMutableArray",&,N,V_eventOrder
numBTLE
T@"NSMutableDictionary",&,N,V_deviceRecord
numWifiRequests
T@"NSMutableDictionary",&,N,V_deviceUUIDtoAlertContext
numiPad
T@"NSMutableDictionary",&,N,V_deviceUUIDtoSafeLocationUUIDs
release
T@"NSMutableDictionary",&,N,V_eventMessages
removeObserver:
T@"NSMutableDictionary",&,N,V_monitoringSessionRecord
resetStatistics
T@"NSMutableDictionary",&,N,V_safeLocations
seekToEndOfFile
T@"NSMutableDictionary",&,N,V_statesByRegionIdentifier
T@"NSMutableDictionary",&,V_deviceUUIDsBySafeLocation
setBtScanCount:
T@"NSMutableSet",&,N,V_devicesWithToBePopulatedTrackedTravelingStartLocation
setLastRelevantDeviceFoundTime:
T@"NSMutableSet",&,N,V_ongoingAlarms
setSafeLocations:forDeviceUUID:
T@"NSMutableSet",&,N,V_safeLocations
standby
T@"NSString",&,N,V_fBTAddress
stringFromDate:
T@"NSString",&,N,V_persistenceStoreFileName
updateDevicesWithSafeLocations:
T@"NSString",R,C,N,V_model
withYouDetector
.cxx_destruct
T@"NSHashTable",&,N,V_observers
T#,R
TB,N,V_isFindingRelevantDevices
T@"<SABluetoothScanRequestProtocol>",W,N,V_bluetoothScanner
TQ,N,V_numItems
T@"<SAFenceManagerServiceProtocol><SAFenceManagerRequestProtocol>",&,N,V_fenceManager
TQ,N,V_wifiLocationRequestCount
T@"<SALocationRequestProtocol>",W,N,V_locationRequester
Td,R,N,V_radius
T@"<SATimeEventRequestProtocol>",W,N,V_externalTimer
_device
T@"<SATimeServiceProtocol>",&,N,V_timeDelegate
_isValidPartID:
T@"<SAWithYouDetectorServiceProtocol>",&,N,V_withYouDetector
_numAccessories
T@"<TAEventProtocol>",&,N,V_previousVisitOrLOIEvent
_partIdentifier
T@"CLCircularRegion",C,N,V_currentVisit
_referenceFrame
T@"CLRegion",C,N,V_currentUnsafeLocation
_routineManager
T@"CLRegion",R,C,N,V_region
_stream
T@"NSDate",&,N,V_caLastStateTransition
allKeys
T@"NSDate",&,N,V_initializationTime
audioAcccessory
T@"NSDate",&,N,V_lastEndOfScan
caLastAlertDate
T@"NSDate",&,N,V_lastExtraNonHELEFoundTime
connectionState
T@"NSDate",&,N,V_lastRelevantDeviceFoundTime
convertSAScenarioClassToString:
T@"NSDate",&,N,V_lastStartOfScan
currentCalendar
T@"NSDate",&,N,V_lastUnsafeEntry
dealloc
T@"NSDate",&,N,V_nextOpportunisticScanDate
disabledReasons
T@"NSDate",&,N,V_timeOfAttemptToLoadFromPersistence
enabled
T@"NSDate",&,N,V_travelingGeofenceExitDate
getEventSubtype
T@"NSDate",C,N,V_fireDate
groupIdentifier
T@"NSDate",R,C,N,V_eventDate
initWithDevice:clock:analytics:
T@"NSDate",R,N
initWithFormat:
T@"NSDate",R,N,V_firstAdvertisementAfterScenarioTransition
isProxy
T@"NSDate",R,N,V_lastWithYouDate
lastStartOfScan
T@"NSDictionary",R,C,N,V_devices
lastUnsafeEntry
T@"NSHashTable",&,N,V_clients
T@"NSMutableArray",&,N,V_uuidsOfRelatedDevices
numSafe
T@"NSMutableDictionary",&,N,V_deviceUUIDsByUnsafeRegionIdentifier
numberWithBool:
T@"NSMutableDictionary",&,N,V_deviceUUIDtoMonitoringSession
refreshBTDevice
T@"NSMutableDictionary",&,N,V_devices
removeGeofence:
T@"NSMutableDictionary",&,N,V_foundDevicesDuringCurrentScan
requestToStopBackgroundScanning
T@"NSMutableDictionary",&,N,V_regionsByRegionIdentifier
safeLocationsByRegionIdentifier
T@"NSMutableDictionary",&,N,V_safeLocationsByRegionIdentifier
service
T@"NSMutableDictionary",&,N,V_statesBySafeLocation
setActiveState:
T@"NSMutableSet",&,N,V_devicesWithPendingTransition
setCurrentTravelTypeChangeDate:
T@"NSMutableSet",&,N,V_monitoredDevices
setPowerLogger:
T@"NSMutableSet",&,N,V_relevantDevicesToFindDuringLongScan
setWithObjects:
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
streamDidStart:
T@"NSString",&,N,V_macAddress
systemStateType
T@"NSString",R,C
updateLocation:
T@"NSString",R,C,N,V_name
T@"NSString",R,C,N,V_systemVersion
T@"NSURL",&,N,V_persistenceDirectoryURL
T@"NSUUID",&,N,V_deviceUUID
T@"NSUUID",&,N,V_nextScheduledAlarm
T@"NSUUID",&,N,V_nextScheduledAlarmForPersistenceWrite
T@"NSUUID",&,N,V_scheduledAlarmForForceUpdateWithYouStatus
T@"NSUUID",C,N,V_alarmUUID
T@"NSUUID",C,N,V_deviceUuid
T@"NSUUID",R,C,N,V_groupIdentifier
T@"NSUUID",R,C,N,V_identifier
T@"NSUUID",R,N,V_uuid
T@"RTRoutineManager",&,N,V_routineManager
T@"SAAudioAccessory",&,N,V_audioAcccessory
T@"SAAudioAccessory",&,N,V_audioAccessoryManager
T@"SADevice",&,N,V_device
T@"SADevice",R,C,N,V_device
T@"SADeviceRecord",&,N,V_deviceRecord
T@"SAFenceManager",&,N,V_fenceManager
T@"SAMonitoringSessionManager",&,N,V_monitoringSessionManager
T@"SAPersistenceManager",&,N,V_persistenceManager
T@"SAPersistenceManagerSettings",&,V_settings
T@"SAPersistenceStore",R,N,V_store
T@"SAPowerLog",&,N,V_powerLogger
T@"SASafeLocation",R,C,N,V_safeLocation
T@"SAScenarioClassifier",&,N,V_scenarioClassifier
T@"SAService",&,N,V_service
T@"SATime",&,N,V_clock
T@"SATravelTypeClassifier",&,N,V_travelTypeClassifier
T@"SAWithYouDetector",&,N,V_withYouDetector
T@"TALocationLite",&,N,V_firstNotWithYouLocation
T@"TALocationLite",&,N,V_lastLocation
T@"TALocationLite",&,N,V_trackedTravelingStartLocation
T@"TASPAdvertisement",R,N,V_latestAdvertisement
T@"TASPAdvertisement",R,N,V_latestNOAdvertisement
T@"TASPAdvertisement",R,N,V_latestWildAdvertisement
TB,N,V_caIsVehicularBTHintOn
TB,N,V_earlyAirplaneTrigger
TB,N,V_earlyVehicularTrigger
TB,N,V_enabled
TB,N,V_hasAttemptedToIngestLastVisitAtStartup
TB,N,V_hasSurfacedNotification
TB,N,V_isAllUsingSameSafe
TB,N,V_isCompanionConnected
TB,N,V_isInAirplaneMode
TB,N,V_isInVehicularTravel
TB,N,V_isNotifyWhileTravelingEnabled
TB,N,V_isPeriodicScansNeeded
TB,N,V_longScanIsOngoing
TB,N,V_requestedPeriodicScan
TB,N,V_requestedShortScan
TB,N,V_standby
TB,R
TB,R,N,V_isAppleAudioAccessory
TB,R,N,V_lastEvent
TB,R,N,V_notifyEnabled
TB,V_enableSubmission
TI,N,V_fProductID
TQ,N,V_aggActiveDuration
TQ,N,V_aggInSafeDuration
TQ,N,V_aggInTravelDuration
TQ,N,V_aggInUnsafeDuration
TQ,N,V_btScanCount
TQ,N,V_caCurrentVehicularState
TQ,N,V_currentMonitoringSessionState
TQ,N,V_currentTravelType
TQ,N,V_disabledReasons
TQ,N,V_extraFoundHELECount
TQ,N,V_extraFoundNonHELECount
TQ,N,V_geofenceCount
TQ,N,V_gpsLocationRequestCount
TQ,N,V_lastLongScanContext
TQ,N,V_notificationState
TQ,N,V_numAccessories
TQ,N,V_numAirPods
TQ,N,V_numAlerts
TQ,N,V_numAlertsLeftBehind
TQ,N,V_numAlertsTraveling
TQ,N,V_numBTLE
TQ,N,V_numBTLeftBehindRequests
TQ,N,V_numBTRequests
TQ,N,V_numBTTravelingRequests
TQ,N,V_numDevices
TQ,N,V_numDevicesAtSafeExit
TQ,N,V_numEnabled
TQ,N,V_numGpsRequests
TQ,N,V_numMacBook
TQ,N,V_numSafe
TQ,N,V_numSafeInUse
TQ,N,V_numTimers
TQ,N,V_numUnsafe
TQ,N,V_numUnsafeWithLOI
TQ,N,V_numUnsafeWithoutLOI
TQ,N,V_numWifiRequests
TQ,N,V_numiPad
TQ,N,V_numiPhone
TQ,N,V_scenarioClassification
TQ,N,V_separationAlertsCount
TQ,N,V_state
TQ,N,V_visitCount
TQ,N,V_withYouStatus
TQ,R
TQ,R,N
TQ,R,N,V_currentScenarioClass
TQ,R,N,V_deviceType
TQ,R,N,V_eventType
TQ,R,N,V_monitoringSessionStateAtTimeOfFirstAdv
TQ,R,N,V_referenceFrame
T^v,N,V_alarmQueue
T^{BTAccessoryManagerImpl=},N,V_fBTAccessoryManager
T^{BTSessionImpl=},N,V_fBTSession
Td,N,V_aggScanDuration
Td,N,V_aggScanDurationForFindingRelevantItemsOnly
Td,N,V_totalVisitDuration
Td,R,N
Td,R,N,V_latitude
Td,R,N,V_longitude
Ti,N,V_fBTSessionAttachRetryCount
Tq,N,V_caBroughtOutOnTravel
Tq,N,V_connectionState
Tq,R,N,V_partIdentifier
Tq,R,N,V_productId
Tq,R,N,V_state
Tq,R,N,V_vendorId
UTF8String
UUID
UUIDString
_addSafeLocation:
_addUnsafeLocation:
_aggActiveDuration
_aggInSafeDuration
_aggInTravelDuration
_aggInUnsafeDuration
_aggScanDuration
_aggScanDurationForFindingRelevantItemsOnly
_alarmQueue
_alarmUUID
_analytics
_audioAcccessory
_audioAccessoryManager
_beaconManager
_bluetoothScanner
_btScanCount
_caBroughtOutOnTravel
_caCurrentVehicularState
_caIsVehicularBTHintOn
_caLastAlertDate
_caLastStateTransition
_caSeparationLocation
_clients
_clock
_connectionState
_createDirectoryIfNotPresent
_currentMonitoringSessionState
_currentScenarioClass
_currentScenarioTime
_currentTravelType
_currentTravelTypeChangeDate
_currentUnsafeLocation
_currentVisit
_currentVisitOrLOIEvent
_date
_delegate
_deviceRecord
_deviceType
_deviceUUID
_deviceUUIDsBySafeLocation
_deviceUUIDsByUnsafeRegionIdentifier
_deviceUUIDtoAlertContext
_deviceUUIDtoMonitoringSession
_deviceUUIDtoSafeLocationUUIDs
_deviceUuid
_deviceWithUUID:isWithYouDuringLongScanOnAdvertisement:
_devices
_devicesWithPendingTransition
_devicesWithToBePopulatedTrackedTravelingStartLocation
_disabledReasons
_earlyAirplaneTrigger
_earlyVehicularStateChangeDate
_earlyVehicularTrigger
_enableSubmission
_enabled
_enoughTimeHasPassedSinceInitializationToMarkNotWithYouForDeviceUUID:
_eventDate
_eventMessages
_eventOrder
_eventType
_externalTimer
_extraFoundHELECount
_extraFoundNonHELECount
_fBTAccessoryManager
_fBTAddress
_fBTDevice
_fBTSession
_fBTSessionAttachRetryCount
_fProductID
_fenceManager
_fenceRequestServicer
_fetchAndIngestLastVisit
_finalizeToBeVerifiedStatus:
_findSafeLocationWithUUID:
_fireDate
_firstAdvertisementAfterScenarioTransition
_firstNotWithYouLocation
_foundDevicesDuringCurrentScan
_geofence
_geofenceCount
_getStoreURL
_gpsLocationRequestCount
_groupIdentifier
_handleUserActivityEvent:
_handleVehicleStateEvent:
_hasAllSafeLocationStatesKnown
_hasAttemptedToIngestLastVisitAtStartup
_hasSurfacedNotification
_identifier
_ingestVisit:
_initializationTime
_inputPersistencePath
_isAllUsingSameSafe
_isAppleAudioAccessory
_isCompanionConnected
_isFindingRelevantDevices
_isInAirplaneMode
_isInVehicularTravel
_isInsideAnySafeLocation
_isNotifyWhileTravelingEnabled
_isOnlyMonitoringCompanionDevice
_isOnlyMonitoringDisconnectedCompanionDevice
_isOnlyMonitoringLeashOnlyDevices
_isPeriodicScansNeeded
_isRecentEnoughAdvertisement:forCurrentDate:
_isReplay
_isStatusBitSetForRelatedDeviceWithShiftIndex:fromAdvertisement:
_lastActivated
_lastEndOfScan
_lastEvent
_lastExtraHELEFoundTime
_lastExtraNonHELEFoundTime
_lastLocation
_lastLongScanContext
_lastLongScanRequest
_lastRelevantDeviceFoundTime
_lastSafeEntry
_lastStartOfScan
_lastTravelStart
_lastUnsafeEntry
_lastUnsafeLocation
_lastWithYouDate
_latestAdvertisement
_latestNOAdvertisement
_latestWildAdvertisement
_latitude
_locationRequester
_longScanIsOngoing
_longitude
_macAddress
_maxAgeOfWithYouAdvertisementForDeviceUUID:
_model
_monitoredDevices
_monitoringSessionManager
_monitoringSessionRecord
_monitoringSessionStateAtTimeOfFirstAdv
_name
_nextAnalyticsSubmission
_nextOpportunisticScanDate
_nextScheduledAlarm
_nextScheduledAlarmForPersistenceWrite
_notificationState
_notifyAllClientsOfScenarioChangeFrom:to:
_notifyAllClientsOfTravelTypeChangeFrom:to:hints:
_notifyAllClientsOfWithYouStatusUpdate:forDeviceWithUUID:
_notifyEnabled
_notifyObserversOnReadFromURL:bytes:
_notifyObserversOnWriteToURL:bytes:
_now
_numAirPods
_numAlerts
_numAlertsLeftBehind
_numAlertsTraveling
_numBTLE
_numBTLeftBehindRequests
_numBTRequests
_numBTTravelingRequests
_numDevices
_numDevicesAtSafeExit
_numEnabled
_numItems
_numMacBook
_numSafe
_numSafeInUse
_numTimers
_numUnsafe
_numUnsafeWithLOI
_numUnsafeWithoutLOI
_numWifiRequests
_numiPad
_numiPhone
_observers
_ongoingAlarms
_outputPath
_ownerSession
_persistence
_persistenceDirectoryURL
_persistenceManager
_persistenceStoreFileName
_persistenceWait
_powerLogger
_previousBufferEmptyTime
_previousVisitOrLOIEvent
_productId
_queue
_regionsByRegionIdentifier
_relevantDevicesToFindDuringLongScan
_removeSafeLocation:
_removeUnsafeLocation:
_requestedPeriodicScan
_requestedShortScan
_safeLocation
_safeLocations
_safeLocationsByRegionIdentifier
_scenario
_scenarioChangeDate
_scenarioClassification
_scenarioClassifier
_scheduleNextAlarmForScanAfterDate:
_scheduledAlarmForForceUpdateWithYouStatus
_separationAlertsCount
_separationMonitoringSession
_service
_setNewScenarioClass:
_setNewTravelType:hints:
_settings
_standby
_state
_statesByRegionIdentifier
_statesBySafeLocation
_store
_streamWait
_systemVersion
_timeDelegate
_timeOfAttemptToLoadFromPersistence
_totalVisitDuration
_trackedTravelingStartDate
_trackedTravelingStartLocation
_travelTypeClassifier
_travelingGeofenceExitDate
_updateAllRelatedDevices
_updateAllWithYouStatusOnScanEndedEvent:
_updateConnectionStateOnConnectionEvent:
_updateDeviceRecordOnDeviceUpdateEvent:
_updateLatestAdvertisement:
_updateSingleDeviceRecordForDevice:
_updateWithYouStatusIfNecessaryOnAdvertisement:
_updateWithYouStatusIfNecessaryOnConnectionEvent:
_updateWithYouStatusOfRelatedDevices:
_updateWithYouStatusOnAdvBufferEmptyEvent:
_uuid
_uuidsOfRelatedDevices
_vehicularHintsToString:
_vendorId
_visitCount
_wifiLocationRequestCount
_withYouDetector
_withYouStatus
absoluteString
activityStream:deviceUDID:deviceID:status:error:
activityStream:results:
activityStream:results:error:
activityType
addAggressiveScanRequest:
addAlarm:
addAlertWithContext:
addClient:
addDevice:isLastDeviceEvent:
addDeviceFetchResultCount:type1count:type2count:type3count:type4count:type5count:type6count:type7count:type8count:safeCount:usingSameSafe:
addDevicesIfNeededPerEvent:
addDidSeparateWhileInVisit:didRejoinPriorExit:
addDisableReason:
addGeofence:
addGpsLocationRequest:
addMonitoredDevice:
addNumDevicesWithYou:
addObject:
addObjectsFromArray:
addObserver:
addPreArrivalAlertTime:didRejoinPriorExit:
addSafeLocation:forDeviceUUID:
addSafeLocationFetchResultCount:
addSafeLocationsIfNeededPerNewSet:forDevice:
addScanDuration:
addScanDurationForFindingRelevantItemsOnly:
addTravelFenceForDevice:
addVisit:withRadius:
addWakeTimerRequest
addWifiLocationRequest:
advanceTimeWithEvent:
aggActiveDuration
aggInSafeDuration
aggInTravelDuration
aggInUnsafeDuration
aggScanDurationForFindingRelevantItemsOnly
alarmCount
alarmFired:
alarmFiredForUUID:
alarmQueue
alarmUUID
allDevicesInSafeLocation
allObjects
allRelevantDevicesToFindAreFound
allSAEnabledDevicesAreFound
allValues
allocWithZone:
analytics
andPredicateWithSubpredicates:
anyDeviceInUnsafeLocation
appendBytes:length:
appendString:
approvalState
archivedDataWithRootObject:requiringSecureCoding:error:
arrayWithObjects:count:
arrivalDate
attemptToPopulateTrackedTravelingStartLocationForDevice:
audioAccessoryManager
autorelease
beaconGroupForIdentifier:completion:
bluetoothScanner
bootstrapMonitoringSessionRecord:
btScanCount
btSessionEventHandler:event:result:
bytes
caBroughtOutOnTravel
caCurrentVehicularState
caIsVehicularBTHintOn
caLastStateTransition
caSeparationLocation
cancelAlarmWithUUID:
cancelMonitoringDevice:
cancelSATimeEventForAlarm:
center
changeMonitoringSessionState:toState:
checkForDevicesNeedingTransition
checkInEarStatus:
checkReunion:to:forDeviceWithUUID:
class
client
clock
closeFile
compare:
computeMessagesForEvent:
computeRemovedSafeLocations:
configureBackgroundScanning
conformsToProtocol:
containsCoordinate:
convertBeaconToDeviceType:
convertCLReferenceFrameToSAReferenceFrame:
convertSAMonitoringSessionStateToString:
convertSATravelTypeToString:
convertSAWithYouLongScanContextToString:
convertToSAInEarStatus:
coordinate
copy
copyWithZone:
count
countByEnumeratingWithState:objects:count:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
createLocationFromCircularRegion:forDevice:withContext:
createMonitoringDevice:
currentLocale
currentMonitoringSessionState
currentScenarioClass
currentScenarioTime
currentTravelType
currentTravelTypeChangeDate
currentUnsafeLocation
currentVisit
currentVisitOrLOIEvent
dataUsingEncoding:
dataWithBytes:length:
dataWithContentsOfURL:options:error:
dataWithHexString:
dataWithJSONObject:options:error:
date
dateByAddingTimeInterval:
debugDescription
decodeBoolForKey:
decodeDoubleForKey:
decodeIntegerForKey:
decodeObjectForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
defaultManager
delegate
departureDate
description
descriptionDictionary
descriptionWithLocale:
determineTrackedTravelingCount
device
deviceRecord
deviceShouldTransitionWithLastScenarioChangeDate:lastWithYouDate:
deviceType
deviceUUID
deviceUUIDsBySafeLocation
deviceUUIDsByUnsafeRegionIdentifier
deviceUUIDtoAlertContext
deviceUUIDtoMonitoringSession
deviceUUIDtoSafeLocationUUIDs
deviceUuid
devicesWithPendingTransition
devicesWithToBePopulatedTrackedTravelingStartLocation
dictionaryWithObjects:forKeys:count:
didChangeScenarioClassFrom:to:forDevice:
didChangeTravelTypeFrom:to:hints:
didDetermineState:forSafeLocation:forDevice:
didDetermineState:forUnsafeLocation:forDevice:
didFetchAllDevices:
didFetchAllSafeLocations:
didForceUpdateWithYouStatus
didReadFromURL:bytes:
didWriteToURL:bytes:
distanceFromLocation:
distantPast
earlierDate:
earliestAlarm
earlyAirplaneTrigger
earlyVehicularStateChangeDate
earlyVehicularTrigger
earlyVehicularTriggerForDeviceUUID:
enableSubmission
encodeBool:forKey:
encodeDouble:forKey:
encodeInteger:forKey:
encodeObject:forKey:
encodeWithCoder:
encodeWithOSLogCoder:options:maxLength:
enoughTimeHasPassedBeforeSurfacingAlert:forAlertForDevice:alertType:
entry
errorWithDomain:code:userInfo:
eventDate
eventMessage
eventMessages
eventOrder
eventType
exit
externalTimer
extraFoundHELECount
extraFoundNonHELECount
extractEventFromMessages:
extractUniqueIdentifierFromMessage:
fBTAccessoryManager
fBTAddress
fBTDevice
fBTSession
fBTSessionAttachRetryCount
fProductID
fenceManager
fenceRequestServicer
fetchFromStartDate:toEndDate:
fetchLastVisit
fetchLocationOfInterestWithIdentifier:withHandler:
fetchStoredVisitsWithOptions:handler:
fileExistsAtPath:
fileHandleForWritingToURL:error:
fileURLWithPath:isDirectory:
fileURLWithPath:relativeToURL:
fireAlarmsIfReady
fireDate
firstAdvertisementAfterScenarioTransition
firstNotWithYouLocation
firstObject
fm_hexString
forceStandbyMode:
forceUpdateWithYouStatus
forceUpdateWithYouStatusToFindDevices:withContext:
forceUpdateWithYouStatusWithShortScan:
foundDevicesDuringCurrentScan
geoReferenceFrame
geofence
geofenceCount
getAllUUIDs
getBytes:length:
getConnectionState:
getCurrentTime
getDateString
getDeviceNotificationState:
getEarliestAlarmDate
getInEarStatus:secondary:
getLastCompanionDisconnectionDate:
getLastScenarioChangeDateAmongAllDevices
getLastWithYouDate:
getLatestAdvertisement:
getLatestNOAdvertisement:
getLatestWildAdvertisement:
getMinutesSinceStartOfDay
getMonitoringSessionState:
getMoreSpecificSADeviceType:
getNextDateAtHour:
getPrimaryBudSide
getRegionForSafeLocation:
getRelatedDevices:
getSADevice:
getSafeLocationCount
getScenarioClass:
getUUIDBytes:
getUnsafeLocationCount
getWithYouStatus:
gpsLocationRequestCount
handleFenceEvent:forRegion:
handleGeofenceEvent:
handleGeofenceExitedForDeviceUUID:
handleModifiedSafeLocation:
handleModifiedSafeLocation:forDeviceUUID:
handleNewSafeLocation:
handleRemovedSafeLocation:
handleSeparationForDeviceUUID:withSafeLocationRecommendation:context:
handleSystemStateChanged:
hasArrivalDate
hasAttemptedToIngestLastVisitAtStartup
hasDepartureDate
hasDisconnectedDevices
hasPrefix:
hasSurfacedNotification
hasSurfacedNotificationFor:
hash
hashTableWithOptions:
horizontalAccuracy
horizontalUncertainty
identifier
increaseBTScanCount
increaseGeofenceCount
increaseSeparationAlertsCount:
increaseWifiLocationRequestCount
ingestTAEvent:
init
initForLowPowerWithCenter:radius:identifier:
initWithAnalytics:isReplay:audioAccessoryManager:
initWithAscending:confidence:dateInterval:labelVisit:limit:
initWithBase64EncodedString:options:
initWithBluetoothScanner:locationRequester:deviceRecord:clock:analytics:
initWithCenter:radius:identifier:
initWithClock:
initWithClock:analytics:
initWithCoder:
initWithConnectionEvent:clock:analytics:
initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:timestamp:
initWithCoordinate:horizontalAccuracy:arrivalDate:departureDate:detectionDate:confidence:
initWithData:encoding:
initWithDate:
initWithDevice:eventType:lastEvent:date:
initWithDeviceUUID:groupIdentifier:macAddress:name:model:systemVersion:vendorId:productId:deviceType:notifyEnabled:isAppleAudioAccessory:date:
initWithDeviceUUID:groupIdentifier:macAddress:partIdentifier:name:model:systemVersion:vendorId:productId:deviceType:notifyEnabled:isAppleAudioAccessory:date:
initWithDeviceUUID:name:model:systemVersion:vendorId:productId:deviceType:notifyEnabled:isAppleAudioAccessory:date:
initWithDeviceUUID:state:date:
initWithDeviceUUID:state:geofence:scenario:trackedTravelingStartDate:
initWithDeviceUuid:
initWithDeviceUuid:scenarioClass:unsafeLocation:
initWithDevices:safeLocationUUIDs:date:
initWithDirectoryURLOrDefault:storeFileNameOrDefault:
initWithEnableSubmission:
initWithLatitude:longitude:
initWithLocationUUID:latitude:longitude:radius:referenceFrame:name:date:
initWithLogArchive:outputPath:inputPersistencePath:
initWithObjects:
initWithQueue:
initWithRegion:eventType:eventDate:
initWithSafeLocation:eventType:lastEvent:date:
initWithSafeLocations:date:
initWithSettings:
initWithState:date:
initWithTimeIntervalSinceNow:
initWithType:latitude:longitude:horizontalAccuracy:referenceFrame:date:
initWithUUIDBytes:
initWithUUIDString:
initWithWithYouDetector:fenceRequestServicer:fenceManager:travelTypeClassifier:clock:deviceRecord:analytics:persistenceManager:audioAccessoryManager:
initializationTime
insertRelatedDevice:
insertString:atIndex:
integerValue
isAllUsingSameSafe
isAnyInTrackedInUnsafeLocation
isAnyTrackedWhileTraveling
isAppleAudioAccessory
isCompanionConnected
isConnected
isEqual:
isEqualToSet:
isEqualToString:
isExtraDeviceFound:onDate:
isFindingRelevantDevices
isInAirplaneMode
isInVehicularTravel
isKindOfClass:
isLowPower
isMemberOfClass:
isNotifyWhileTravelingEnabled
isOn
isPeriodicScansAllowed
isPeriodicScansNeeded
isReallyEqual:
isReplay
isValidJSONObject:
isWithinCurrentVisitOrLOI:
lastActivated
lastCompanionDisconnectionDate
lastEndOfScan
lastEvent
lastExtraHELEFoundTime
lastExtraNonHELEFoundTime
lastLocation
lastLongScanContext
lastLongScanRequest
lastObject
lastRelevantDeviceFoundTime
lastSafeEntry
lastUnsafeLocation
laterDate:
latestAdvertisement
latestNOAdvertisement
latestWildAdvertisement
latitude
length
load
localTimeZone
localizedStringForKey:value:table:
location
locationRequester
logTAEvent:
loiIdentifier
longScanIsOngoing
longitude
macAddress
mainBundle
minimumTimeSinceScenarioTransitionForAlertForDeviceUUID:alertType:
minusSet:
model
modifyDevice:
monitoredDevices
monitoringSessionManager
monitoringSessionRecord
monitoringSessionState:matchesWithScenarioClass:
monitoringSessionStateAtTimeOfFirstAdv
name
needPeriodicScan
nextAnalyticsSubmission
nextDateAfterDate:matchingHour:minute:second:options:
nextOpportunisticScanDate
nextScheduledAlarm
nextScheduledAlarmForPersistenceWrite
notificationState
notifyEarlyLeftBehind:
notifyEnabled
notifyLeftBehind:withRegion:isEarlyVehicularTrigger:
notifySeparationsForDevices:withLocation:withContext:
notifyState:forSafeLocationRegion:
notifyState:forUnsafeLocationRegion:
notifyWhenLeftBehind:
notifyWhileTraveling:isBookendingTravel:
numAccessories
numAirPods
numAlerts
numAlertsLeftBehind
numAlertsTraveling
numBTLeftBehindRequests
numBTRequests
numBTTravelingRequests
numDevices
numDevicesAtSafeExit
numEnabled
numGpsRequests
numItems
numMacBook
numSafeInUse
numTimers
numUnsafe
numUnsafeWithLOI
numUnsafeWithoutLOI
numberWithDouble:
numberWithInteger:
numberWithUnsignedInteger:
numiPhone
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
observers
onUpdatedMonitoringSessionRecord:
ongoingAlarms
partIdentifier
path
pausePeriodicScan
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
persistence:results:error:
persistenceDidFinishReadingForStartDate:endDate:
persistenceDirectoryURL
persistenceManager
persistenceStoreFileName
placeInference
popAlarm
powerLogger
predicateWithFormat:
previousBufferEmptyTime
previousVisitOrLOIEvent
processIdentifier
processInfo
productId
publishAnalyticsForFirstAdv:scenario:
publishAndResetAggregation
publishingInterval
queue
radius
referenceFrame
region
regionsByRegionIdentifier
relevantDevicesToFindDuringLongScan
removeAllObjects
removeAndStopSafeLocationsForDeviceUUID:
removeClient:
removeDeviceWithUUID:isLastDeviceEvent:
removeDevicesIfNeededPerEvent:
removeDisableReason:
removeItemAtURL:error:
removeLocationsForDeviceUuid:
removeObject:
removeObjectForKey:
removeObjectsForKeys:
removeSafeLocation:forDeviceUUID:
removeSafeLocationsIfNeededPerNewSet:forDevice:
removeTravelFenceForDevice:
replaySingleEventLogString:
replayWithStartDate:endDate:
requestBluetoothScanForTypes:
requestLocationForType:
requestScanIfNeeded
requestStateForRegion:
requestToFetchLastVisit
requestToStartBackgroundScanning
requestedPeriodicScan
requestedShortScan
reset
resetAggregation
resetAllWithYouStatus
resetAllWithYouStatusAndScanStates
resetRelatedDevices
respondsToSelector:
resumePeriodicScan
retain
retainCount
routineManager
safeLocation
safeLocations
save
scanDate
scenario
scenarioChangeDate
scenarioClassForDeviceUUID:
scenarioClassification
scenarioClassifier
scheduleNextForceUpdateWithYouStatusFromReferenceDate:forAlertForDevice:alertType:
scheduleNextPersistenceWrite
scheduleSATimeEvent:forAlarm:
scheduledAlarmForForceUpdateWithYouStatus
self
sendPowerLog
sendScanContextToCoreAnalytics:isPartOfLongScan:scanDuration:relevantOnlyScanDuration:foundExtraHELECount:extraHELEScanDuration:foundExtraNonHELECount:extraNonHELEScanDuration:longScanContext:
separationAlertsCount
separationAlertsService:addGeofence:
separationAlertsService:cancelSATimeEventForAlarm:
separationAlertsService:enableMonitoringForSeparations:
separationAlertsService:notifySeparationsForDevices:withLocation:withContext:
separationAlertsService:removeGeofence:
separationAlertsService:requestBluetoothScanForTypes:
separationAlertsService:requestLocationForType:
separationAlertsService:requestStateForRegion:
separationAlertsService:scheduleSATimeEvent:forAlarm:
separationAlertsServiceFetchLastVisit:
separationAlertsServiceManager:addGeofence:
separationAlertsServiceManager:cancelSATimeEventForAlarm:
separationAlertsServiceManager:enableMonitoringForSeparations:
separationAlertsServiceManager:notifySeparationsForDevices:withLocation:withContext:
separationAlertsServiceManager:removeGeofence:
separationAlertsServiceManager:requestBluetoothScanForTypes:
separationAlertsServiceManager:requestLocationForType:
separationAlertsServiceManager:requestStateForRegion:
separationAlertsServiceManager:scheduleSATimeEvent:forAlarm:
separationAlertsServiceManagerStartBackgroundScanning:
separationAlertsServiceManagerStopBackgroundScanning:
separationAlertsServiceManagerStopLongAggressiveScan:
separationAlertsServiceStartBackgroundScanning:
separationAlertsServiceStopBackgroundScanning:
separationAlertsServiceStopLongAggressiveScan:
separationMonitoringSession
setAggActiveDuration:
setAggInSafeDuration:
setAggInTravelDuration:
setAggInUnsafeDuration:
setAggScanDuration:
setAggScanDurationForFindingRelevantItemsOnly:
setAlarmQueue:
setAlarmUUID:
setAnalytics:
setAudioAcccessory:
setAudioAccessoryManager:
setBTAddress:
setBluetoothScanner:
setByAddingObjectsFromSet:
setCaBroughtOutOnTravel:
setCaCurrentVehicularState:
setCaIsVehicularBTHintOn:
setCaLastAlertDate:
setCaLastStateTransition:
setCaSeparationLocation:
setClient:
setClients:
setClock:
setConnectionState:
setCurrentMonitoringSessionState:
setCurrentTravelType:
setCurrentUnsafeLocation:
setCurrentVisit:
setCurrentVisitOrLOIEvent:
setDelegate:
setDevice:
setDeviceDelegate:
setDeviceRecord:
setDeviceUUID:
setDeviceUUIDsBySafeLocation:
setDeviceUUIDsByUnsafeRegionIdentifier:
setDeviceUUIDtoAlertContext:
setDeviceUUIDtoMonitoringSession:
setDeviceUUIDtoSafeLocationUUIDs:
setDeviceUuid:
setDevices:
setDevicesWithPendingTransition:
setDevicesWithToBePopulatedTrackedTravelingStartLocation:
setDisabledReasons:
setEarlyAirplaneTrigger:
setEarlyVehicularStateChangeDate:
setEarlyVehicularTrigger:
setEnableSubmission:
setEnabled:
setEventMessages:
setEventOrder:
setExternalTimer:
setExtraFoundHELECount:
setExtraFoundNonHELECount:
setFBTAccessoryManager:
setFBTAddress:
setFBTDevice:
setFBTSession:
setFBTSessionAttachRetryCount:
setFProductID:
setFenceManager:
setFenceRequestServicer:
setFireDate:
setFirstNotWithYouLocation:
setFormatOptions:
setFoundDevicesDuringCurrentScan:
setGeoReferenceFrame:
setGeofence:
setGeofenceCount:
setGpsLocationRequestCount:
setHasAttemptedToIngestLastVisitAtStartup:
setHasSurfacedNotification:
setInSafeLocationState:
setInTravelState:
setInUnsafeLocationState:
setInitializationTime:
setIsAllUsingSameSafe:
setIsCompanionConnected:
setIsFindingRelevantDevices:
setIsInAirplaneMode:
setIsInVehicularTravel:
setIsNotifyWhileTravelingEnabled:
setIsPeriodicScansNeeded:
setIsReplay:
setLastActivated:
setLastEndOfScan:
setLastExtraHELEFoundTime:
setLastExtraNonHELEFoundTime:
setLastLocation:
setLastLongScanContext:
setLastLongScanRequest:
setLastSafeEntry:
setLastStartOfScan:
setLastTravelStart:
setLastUnsafeEntry:
setLastUnsafeLocation:
setLocationRequester:
setLogArchive:
setLongScanIsOngoing:
setMacAddress:
setMonitoredDevices:
setMonitoringSessionManager:
setMonitoringSessionRecord:
setNextAnalyticsSubmission:
setNextOpportunisticScanDate:
setNextScheduledAlarm:
setNextScheduledAlarmForPersistenceWrite:
setNotificationState:
setNumAccessories:
setNumAirPods:
setNumAlerts:
setNumAlertsLeftBehind:
setNumAlertsTraveling:
setNumBTLE:
setNumBTLeftBehindRequests:
setNumBTRequests:
setNumBTTravelingRequests:
setNumDevices:
setNumDevicesAtSafeExit:
setNumEnabled:
setNumGpsRequests:
setNumItems:
setNumMacBook:
setNumSafe:
setNumSafeInUse:
setNumTimers:
setNumUnsafe:
setNumUnsafeWithLOI:
setNumUnsafeWithoutLOI:
setNumWifiRequests:
setNumiPad:
setNumiPhone:
setObject:forKey:
setObject:forKeyedSubscript:
setObservers:
setOngoingAlarms:
setOptions:
setPersistenceDirectoryURL:
setPersistenceManager:
setPersistenceStoreFileName:
setPredicate:
setPreviousBufferEmptyTime:
setPreviousVisitOrLOIEvent:
setQueue:
setReferenceFrame:
setRegionsByRegionIdentifier:
setRelevantDevicesToFindDuringLongScan:
setRequestedPeriodicScan:
setRequestedShortScan:
setRoutineManager:
setSafeLocations:
setSafeLocationsByRegionIdentifier:
setScenario:
setScenarioClassification:
setScenarioClassifier:
setScheduledAlarmForForceUpdateWithYouStatus:
setSeparationAlertsCount:
setService:
setSettings:
setStandby:
setStartTimestamp:
setState:
setStatesByRegionIdentifier:
setStatesBySafeLocation:
setString:
setTimeDelegate:
setTimeOfAttemptToLoadFromPersistence:
setTimeZone:
setTotalVisitDuration:
setTrackedTravelingStartDate:
setTrackedTravelingStartLocation:
setTravelTypeClassifier:
setTravelingGeofenceExitDate:
setUpTravelingGeofencesOnAirplaneModeToggleOffIfNeeded
setUuidsOfRelatedDevices:
setVisitCount:
setWifiLocationRequestCount:
setWithArray:
setWithSet:
setWithYouDetector:
setWithYouStatus:
settings
setupAlarmFireAt:forClient:
shouldIssueBookendedNotificationBasedOnLocationForDevice:
shouldIssueBookendedNotificationBasedOnTimeForDevice:
shouldIssueBookendedNotificationForDevice:
sleepForTimeInterval:
start
startBackgroundScanning
startMonitorSafeLocation:forDevice:
startMonitorUnsafeLocationExit:forDevice:
startOfDayForDate:
startPeriodicScans
startPeriodicScansIfNeeded
startRefreshingBeaconsForSeparationMonitoringWithBlock:
startRefreshingSafeLocationWithBlock:
startSafeLocation:forDevice:
startTimestamp
state
stateForDeviceUUID:
statesByRegionIdentifier
statesBySafeLocation
status
statusForDeviceWithUUID:
stop
stopBackgroundScanning
stopLongAggressiveScan
stopMonitorSafeLocation:forDevice:
stopMonitorUnsafeLocationExit:forDevice:
stopPeriodicScans
stopPeriodicScansIfNotNeeded
stopSafeLocation:forDevice:
store
storeSeparationLocation:
streamDidFail:error:
streamDidStop:
string
stringByAppendingString:
stringByReplacingOccurrencesOfString:withString:
stringToSplit:maxSplitSize:
stringWithFormat:
submitEvent:content:
substringFromIndex:
substringWithRange:
superclass
supportsSecureCoding
systemVersion
timeDelayForRetryScanForAlertForDeviceUUID:alertType:
timeDelegate
timeIntervalSinceDate:
timeOfAttemptToLoadFromPersistence
totalVisitDuration
trackedTravelingStartDate
trackedTravelingStartLocation
travelType
travelTypeClassifier
travelingGeofenceExitDate
type
unarchivedObjectOfClass:fromData:error:
unarchivedObjectOfClasses:fromData:error:
unsignedIntegerValue
updateCurrentScenarioClass:
updateExtraDeviceInformation:
updateFirstAdvertisementAfterScenarioTransition:
updateLastCompanionDisconnectionDate:
updateLastWithYouDate:
updateLastWithYouDate:forDeviceWithUUID:
updateLatestAdvertisement:
updateLatestAdvertisement:forDeviceWithUUID:
updateMonitoringSessionState:forDeviceWithUUID:
updateSafeLocations:
updateScenario:forDeviceWithUUID:
updateWithYouStatus:
updatedMonitoringState:forDeviceUUID:
updatedWithYouStatusFrom:to:forDeviceWithUUID:
uuid
uuidsOfRelatedDevices
vehicularHints
vehicularState
vendorId
visitCount
wifiLocationRequestCount
withYouStatus
writeData:
writeToURL:options:error:
zone
B16@0:8
v40@0:8@16Q24Q32
v40@0:8@"<OSLogCoder>"16Q24Q32
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^{_NSZone=}16
@"NSDate"16@0:8
@"NSDictionary"16@0:8
@40@0:8@16q24@32
q16@0:8
v16@0:8
@"NSUUID"
@"NSDate"
@40@0:8@16Q24@32
@"CLRegion"
@40@0:8@16@24@32
v24@0:8Q16
v32@0:8@16Q24
v24@0:8q16
v20@0:8B16
@"SADevice"
@"TASPAdvertisement"
@"NSMutableArray"
@"<SAAnalyticsServiceProtocol>"
@"<SATimeServiceProtocol>"
@88@0:8@16@24@32@40q48q56Q64B72B76@80
@104@0:8@16@24@32@40@48@56q64q72Q80B88B92@96
@112@0:8@16@24@32q40@48@56@64q72q80Q88B96B100@104
@"NSString"
@"NSMutableDictionary"
@72@0:8@16d24d32d40Q48@56@64
d16@0:8
@44@0:8@16Q24B32@36
@"SASafeLocation"
@32@0:8@16@24
@"NSDictionary"
B40@0:8@16@24@32
v32@0:8@16@24
B40@0:8@"OSLogPersistence"16@"NSArray"24@"NSError"32
v32@0:8@"NSDate"16@"NSDate"24
B32@0:8@16@24
B32@0:8@"OSActivityStream"16@"NSArray"24
v24@0:8@"OSActivityStream"16
v32@0:8@"OSActivityStream"16@"NSError"24
B40@0:8@"OSActivityStream"16@"NSArray"24@"NSError"32
B56@0:8@16@24@32q40@48
B56@0:8@"OSActivityStream"16@"NSString"24@"OSLogDevice"32q40@"NSError"48
@"SAService"
@"OSLogPersistence"
@"OSActivityStream"
@"NSObject<OS_dispatch_semaphore>"
@"NSURL"
@"SAAnalytics"
@24@0:8Q16
v24@0:8@"<SATravelTypeClassifierClientProtocol>"16
v24@0:8@"<TAEventProtocol>"16
B32@0:8Q16Q24
v40@0:8Q16Q24Q32
@"NSHashTable"
v24@0:8@"<SAFenceManagerClientProtocol>"16
B32@0:8@"CLRegion"16@"NSUUID"24
B32@0:8@"SASafeLocation"16@"NSUUID"24
v32@0:8Q16@24
v24@0:8@"NSUUID"16
v24@0:8@"<SAPowerLogClientProtocol>"16
v24@0:8d16
@"NSMutableSet"
@56@0:8@16Q24@32Q40@48
@"CLCircularRegion"
@"TALocationLite"
@"SAScenarioClassifier"
@"CLLocation"
Q24@0:8@16
q24@0:8@16
v24@0:8@"<SAMonitoringSessionManagerClientProtocol>"16
Q24@0:8@"NSUUID"16
q24@0:8@"NSUUID"16
v40@0:8Q16Q24@32
v40@0:8Q16Q24@"NSUUID"32
@88@0:8@16@24@32@40@48@56@64@72@80
v40@0:8@16@24@32
v28@0:8@16B24
v36@0:8@16@24B32
@40@0:8@16@24Q32
v40@0:8@16@24Q32
d32@0:8@16Q24
B40@0:8@16@24Q32
@"<SAWithYouDetectorServiceProtocol>"
@"<SAGeoFenceRequestProtocol>"
@"<SAFenceManagerServiceProtocol><SAFenceManagerRequestProtocol>"
@"SADeviceRecord"
@"<SATravelTypeClassifierServiceProtocol>"
@"SAPersistenceManager"
@"SAAudioAccessory"
@"<TAEventProtocol>"
v32@0:8@"NSArray"16Q24
v24@0:8@"<SAWithYouDetectorClientProtocol>"16
@56@0:8@16@24@32@40@48
v84@0:8Q16B24d28d36Q44d52Q60d68Q76
d24@0:8@16
B24@0:8q16
B32@0:8Q16@24
Q24@0:8Q16
@"<SABluetoothScanRequestProtocol>"
@"<SALocationRequestProtocol>"
Q20@0:8i16
v24@0:8@"<SAServiceClientProtocol>"16
v48@0:8@16@24@32@40
v40@0:8@16d24@32
v28@0:8@"SAService"16B24
v48@0:8@"SAService"16@"NSArray"24@"CLLocation"32@"NSDictionary"40
v32@0:8@"SAService"16Q24
v32@0:8@"SAService"16@"CLRegion"24
v40@0:8@"SAService"16d24@"NSUUID"32
v32@0:8@"SAService"16@"NSUUID"24
v24@0:8@"SAService"16
@"SPBeaconManager"
@"SPOwnerSession"
@"NSObject<SPSeparationMonitoringProtocol>"
@"NSObject<OS_dispatch_queue>"
@"RTRoutineManager"
@"<SATimeClientProtocol>"
@"NSUUID"32@0:8@"NSDate"16@"<SATimeClientProtocol>"24
@28@0:8@16B24
^v16@0:8
v24@0:8^v16
@"<SATimeEventRequestProtocol>"
@"SAPersistenceStore"
@"SAPersistenceManagerSettings"
@32@0:8@16^@24
v24@0:8@"<SAScenarioClassifierClientProtocol>"16
v40@0:8Q16@24@32
v40@0:8Q16@"SASafeLocation"24@"NSUUID"32
v40@0:8Q16@"CLRegion"24@"NSUUID"32
v24@0:8@"CLRegion"16
B24@0:8Q16
v32@0:8Q16Q24
@"<SAFenceManagerRequestProtocol>"
@32@0:8@16Q24
v40@0:8@"NSArray"16@"CLLocation"24@"NSDictionary"32
v32@0:8Q16@"NSUUID"24
v32@0:8d16@24
v32@0:8d16@"NSUUID"24
@36@0:8@16B24@28
@"SATime"
@"SAWithYouDetector"
@"SAMonitoringSessionManager"
@"SAFenceManager"
@"SATravelTypeClassifier"
@"SAPowerLog"
q20@0:8i16
v32@0:8^q16^q24
v32@0:8^{BTSessionImpl=}16i24i28
^{BTSessionImpl=}16@0:8
v24@0:8^{BTSessionImpl=}16
^{BTAccessoryManagerImpl=}16@0:8
v24@0:8^{BTAccessoryManagerImpl=}16
^{BTDeviceImpl=}16@0:8
v24@0:8^{BTDeviceImpl=}16
I16@0:8
v20@0:8I16
i16@0:8
v20@0:8i16
^{BTSessionImpl=}
^{BTAccessoryManagerImpl=}
^{BTDeviceImpl=}
@20@0:8B16
v100@0:8Q16Q24Q32Q40Q48Q56Q64Q72Q80Q88B96
v28@0:8B16Q20
v28@0:8d16B24
v24@0:8B16B20
v32@0:8@"NSString"16@"NSDictionary"24
v24@0:8@"NSDictionary"16
@"SAAnalyticsSettings"
