MCDBrowsableContentNowPlayingIdentifiersUpdatedNotification
v8@?0
com.apple.podcasts
MCDBrowsableContentViewControllerQueue
<%@: %p [%@]>
v16@?0I8I12
MusicCarDisplayUI
ERROR_LOADING_ITEM
v16@?0@"NSError"8
v24@?0Q8^B16
v32@?0@"CPUITableCell"8Q16^B24
v12@?0B8
com.apple.Music
com.apple.iBooks
com.apple.MusicApplication
com.apple.Music.CarPlay
carplay
com.apple.Music.LibraryView
com.apple.Music.LibraryView.Albums.Detail
com.apple.Music.LibraryView.Albums
com.apple.Music.LibraryView.Artists
com.apple.Music.LibraryView.Compilations
com.apple.Music.LibraryView.Composers
com.apple.Music.LibraryView.RecentlyAdded
com.apple.Music.LibraryView.Songs
com.apple.Music.LibraryView.MadeForYou
com.apple.Music.LibraryView.Downloaded
com.apple.Music.LibraryView.Favorites
com.apple.Music.LibraryView.Genres
com.apple.Music.LibraryView.Playlists
com.apple.Music.LibraryView.Playlists.Detail
com.apple.Music.ForYou
com.apple.Music.Browse
com.apple.Music.Radio
ByArtist
ByAlbum
ByTitle
ByPlaylistType
ByLibraryAddedDate
ByLastDevicePlaybackDate
ByLastModifiedDate
ByAscendingYear
ByDescendingYear
ByPlaylistOrderAscending
ByPlaylistOrderDescending
ByReleaseDateAscending
ByReleaseDateDescending
MCDNowPlayingWillAppearNotification
MCDNowPlayingWillDisappearNotification
MCDPlaybackStateChangedNotification
com.apple.MobileMusicPlayer.MusicCarDisplayUI
music.square.stack
19.circle.fill
e.square.fill
star.fill
PLAYBACK_RATE_SPEED_HALF
PLAYBACK_RATE_SPEED_THREE_QUARTERS
PLAYBACK_RATE_SPEED_ONE_AND_QUARTER
PLAYBACK_RATE_SPEED_ONE_AND_HALF
PLAYBACK_RATE
%d Song(s)
%d Minute(s)
ALBUM_DETAIL_FORMAT_FULL
ROOT
CarPlay Now Playing Request - Playable Content
com.apple.MusicCarDisplayUI.playableContent.invalidate
[%@:%@]
PLAYBACK_QUEUE_TITLE
AppName_PlaybackQueue
POSITION_IN_PLAYLIST_FORMAT
com.apple.MusicCarDisplayUI.playableContent.mediaRemote
com.apple.MusicCarDisplayUI.playableContent.mediaRemote.items
v12@?0C8
v16@?0^{__CFArray=}8
v16@?0Q8
<%@: %p - (%@) (%@) [%@%@]>
com.apple.MusicCarDisplayUI.playableContent.serialContainerAccess
<%@:%p - [%@:%@] - %@>
v40@?0@"NSArray"8{_NSRange=QQ}16@"NSError"32
v24@?0q8@"NSError"16
v20@?0B8@"NSError"12
v16@?0@"NSArray"8
nowPlayingChange
didInvalidate
didInitiatePlayback
didUpdateContent
appReadyToFetch
indexPath
item
items
model
error
MCDError
com.apple.MCDSerialProcessingQueue
General
com.apple.MusicCarDisplay
com.apple.MusicCarPlay
MCDContentItemsChangedNotification
v24@?0@8@"UIImage"16
line.horizontal.3.decrease.circle
square.fill
pause.fill
play.fill
goforward
gobackward
%@.%@
LIKE_TRACK_DEFAULT_TITLE
DISLIKE_TRACK_DEFAULT_TITLE
CANCEL
v16@?0@"UIAlertAction"8
NO_CONTENT_TITLE
NO_CONTENT_SUBTITLE
LOADING_TITLE
FUSE_TIMEOUT_TITLE
Try Again
com.apple.MusicCarDisplayUI.playableContent.navigationController
Posting MCDBrowsableContentNowPlayingIdentifiersUpdatedNotification
Playable Content API implemented? %d
Showing loading screen
Showing timeout screen
Retrying container reload, showing loading screen
Retrying full refresh, showing loading screen
Cell displayed: title: %{public}@, subtitle: %{public}@, showExplicit: %{public}d, showCloud: %{public}d, shouldShowPlaybackProgress: %{public}d, playbackProgress: %{public}f, currentlyPlaying: %{public}d, isContainer: %{public}d
Loading content timed out, displaying error: %{public}@
Selected playable content, preparing to play back
Initiating playback failed due to timeout
Initiating playback failed, displaying error: %{public}@
Initiating playback complete, preparing to push to now playing
Selected container, preparing to push to container
Container preparation complete, pushing to container
Selected neither a container nor a playable cell
Some content have invalidated, preparing to reload table view: %{public}@, indicies: %{public}@
Content was invalidated, but there are no indexes to reload.
Content that has been been invalidated is visible, reloading those index paths in table view: %{public}@, indicies: %{public}@
Content has been invalidated, but view isn't finished loading yet. Container: %{public}@, indicies: %{public}@
The container changed count, preparing to reload
Fetching content for root container
Fetching content for non-root container: %{public}@
No container available to refresh.
Refreshing content complete for container: %{public}@
Root container has content
Root container does not have content
Completed refresh for container %{public}@
Now Playing button tapped in table view, pushing to Now Playing
Pushing to Now Playing view
Loading content in table controller for the first time since app registered
Limited UI changed from %{public}@ to %{public}@
Initializing a new view for bundle: %@
Received kMRMediaRemoteBrowsableContentNowPlayingIdentifiersUpdatedNotification
Rebuilding stack for app launch
Creating view controller for sectioned browsing
Creating view controller for table view browsing
App does not use browsable content API, pushing to now playing
Now Playing view already frontmost when Now Playing app tapped
popping from view controller to Now Playing view
Sending play command since the app supports immediate playback
Show Now Playing view on app foreground
Cancelling extra model invalidation for %{public}@.
Playable content invalidated, refreshing all index paths for %{public}@
Fetched current view controllers to reload after playable content invalidated for %{public}@: %{public}@
Adding MCDBrowsableContentTableViewController after model invalidate
Container is valid for table view
Container isn't valid for refreshed parent for table views
Next view controller is neither a table view nor now playing view when current VC is a table view, which shouldn't be here: %{public}@
Adding MCDBrowsableNavigationController to view controllers after model invalidate for %{public}@
Container is valid for tab bar
Container isn't valid for tab bar
Next view controller is neither a table view nor a now playing view when current VC is a tab bar, which shouldn't be here: %{public}@
Adding now playing view controller for model invalidate for %{public}@
Setting view controllers after model invalidate for %{public}@
current stack: %@
Hiding back button: %d
Row selected in Playback Queue, dismissing Playback Queue screen
All playback completed, dismissing Now Playing screen
%{public}@ is now playing app? %{public}@
Data source invalidated
Posting MCDPCDidInvalidateNotificationName
Content items updated
Content items updated for wrong app, expected %{public}@, got %{public}@
Got content items updated notification, but no updated content items
Posting MCDPCDidUpdateContentNotificationName
Posting MCDPCNowPlayingDidChangeNotificationName
Posting MCDPCAppReadyToFetchNotificationName
beginLoadingPlayableContent API is not implemented
Beginning to load item at index path: %{public}@
beginLoadingPlayableContent API is not implemented, receiving unsupported operation for index path: %{public}@
beginLoadingPlayableContent API error, code: %d
beginLoadingPlayableContent API in progress for %{public}@
beginLoadingPlayableContent API timed out, completion block wasn't called for index path: %{public}@
Received kMRMediaRemoteApplicationFinishedLoadingContentNotification for index path: %{public}@, beginLoadingPlayableContent API error: %{public}@
Received kMRMediaRemoteApplicationFinishedLoadingContentNotification without error for index path: %{public}@
Received kMRMediaRemoteApplicationFinishedLoadingContentNotification with error: %{public}@, but completion block is null for index path: %{public}@
Received kMRMediaRemoteApplicationFinishedLoadingContentNotification, but completion block is null for index path: %{public}@
Received kMRMediaRemoteApplicationFinishedLoadingContentNotification, beginLoadingPlayableContent API not implemented for index path: %{public}@
Received kMRMediaRemoteApplicationFinishedLoadingContentNotification, beginLoadingPlayableContent API not implemented and null completion block for index path: %{public}@
childItemsDisplayPlaybackProgress API is not implemented
Preparing to fetch if children support playback progress for index path: %{public}@
Fetched children supporting playback progress for index path: %{public}@
Children support playback progress timed out for: %{public}@
now playing identifiers API is not implemented
Preparing to fetch now playing identifiers
Fetched now playing identifiers
Fetching count of children at index path: %@
Completed fetching count of children at index path: %{public}@, number of children: %{public}llu
Fetching children at index path: %{public}@
Completed fetching children at index path: %{public}@
Finishing initial load
Asking MediaRemote to initialize playback for index path: %{public}@
Received kMRMediaRemoteApplicationInitiatedPlaybackOfContentItemNotification
Adding %{public}@ to items dictionary
Updating artwork to %{public}@
Have artwork data, but artwork is nil for %{public}@
Artwork is nil for %{public}@
Content items updated, preparing to find indicies to update
Index was nil for %{public}@
Contents updated for container: %{public}@, indicies: %{public}@
Now Playing Identifiers changed, checking to see what is now playing
Item currently playing. Identifier: %{public}@
Item not currently playing. Identifier: %{public}@
Item currently playing has changed, updating indicies
Indicies invalidated based on now playing identifiers
Starting to refresh for %@
Finishing refresh for %@
Starting to refresh all items, beginning with beginLoadingItem
Begin Loading completed for refreshing all items
Completed invalidation, resetting
Preparing to begin loading item %@
Finished begin loading item %@
Skipping item %@ without identifier
Finished adding items to cache
Cancelling all operations on MCDMediaRemoteSerialQueueManager
Operation is cancelled, not executing
Disabling up next queue; no items in queue.
Disabling up next queue; livestreaming content.
Disabling up next queue for AudioBooks.
Playing content has changed, posting notification
Timeout while waiting for artworkCatalog=%p
Sending reverse seek command
Sending end reverse seek command
Sending skip backwards command
Opening action sheet for like/dislike command
Sending previous item command
Sending stop command
Sending pause command
Sending play command
Sending forward seek command
Sending end forward seek command
Sending skip forward command
Sending forward item command
Retry button pressed
Loading content in tab controller for the first time since app registered
finished loading content after the view appeared, setting tabs
Received MCDPCNowPlayingDidChangeNotificationName
Accessory view already set.
Showing Now Playing button in tab bar
Hiding Now Playing button in tab bar
No Now Playing button hide needed.
Now playing button tapped in tab bar, pushing to Now Playing screen
Some content has invalidated, preparing to reload tab views for container: %{public}@, indicies: %{public}@
Reloading specific tabs since they are invalid for container: %{public}@, indicies: %{public}@
Reloading all host tabs since table views are nil for container: %{public}@, indicies: %{public}@
Tab view not visible for container indicies reload: %{public}@, indicies: %{public}@
No tabs available from host, loading default tabs for %{public}@
Scheduling dummy tab reload for %{public}@
Performing dummy tab reload for %{public}@
Number of tabs returned from client %{public}@: %{public}ld
Refreshing view controller %{public}@ because it is the selected index: %{public}ld
View controller %{public}@ is not selected but is reloaded, begin loading item
Dummy tab, no need to refresh in %{public}@
Reloading tabs after invalidate
Finished reloading tabs after invalidate
Tab selected, reloading content for %{public}@
Examining existing tab bar item and artwork for item: %@
Titles differ; invalidating tab bar item: %@
New image provided; invalidating tab bar item: %@
Repurposing tab bar item and artwork for tab bar item: %@
No existing tab bar item and artwork for item: %@
Creating tab bar item for item: %@, artwork is nil? %@
Adding view controller for tab: %@, artwork is nil? %@
Adding title for tab: %@, artwork is nil? %@
Container finished initial load when viewWillAppear is called, start loading host tabs
viewWillAppear called for MCDBrowsableContentNavigationController, but container isn't finished loading yet
Container finished initial load when viewDidAppear is called, start loading host tabs
viewDidAppear called for MCDBrowsableContentNavigationController, but container isn't finished loading yet
traitCollectionDidChange is called
0@333333
333333
MCDBrowsableContentUtilities
MCDBrowsableContentTableViewController
UITableViewDataSource
NSObject
UITableViewDelegate
UIScrollViewDelegate
UIGestureRecognizerDelegate
MCDPCContainerDelegate
MCDErrorViewDelegate
CARSessionObserving
_MCDBrowsableTableView
CarDisplay
MCDPlayableContentNowPlayingDataSource
MCDNowPlayingDataSource
MCDPlayableContentViewController
UINavigationControllerDelegate
_MCDStackItem
MCDNowPlayingViewController
MCDNowPlayingContentManagerDelegate
MCDPCModel
MCDPCItem
MCDPCContainer
MCDMediaRemoteSerialQueueManager
_MCDNowPlayingContentManager
MPRequestResponseControllerDelegate
MCDNowPlayingContentManagerProtocol
CPUINowPlayingViewControllerDataSource
CPUINowPlayingViewControllerDelegate
MCDPlayableContentPlaybackManager
MCDNoContentView
MCDLoadingContentView
MCDErrorLoadingView
MCDGlyph
MCDBrowsableContentNavigationController
UITabBarControllerDelegate
MCDPlayableContentQueueTableViewController
MCDAlertController
T@"MSVTimer",&,N,V_artworkTimer
T#,R
T@"NSIndexPath",R,N,V_indexPath
T#,W,N,VtableCellClass
TB,N,VlimitedUI
T@"<MCDNowPlayingContentManagerDelegate>",W,N,V_delegate
_allowsAlbumArt
T@"<MCDNowPlayingDataSource>",W,N,V_dataSource
_contentManager
T@"CARSessionStatus",&,N,V_carSessionStatus
_itemProperties
T@"MCDMediaRemoteSerialQueueManager",R,N
_performRequest
T@"MCDPCItem",R,N,V_rootItem
_stackToRebuild
T@"MCDPCModel",&,N,V_model
_trackBuffering
T@"MCDPlayableContentPlaybackManager",&,N,V_contentManager
addLayoutGuide:
T@"MPArtworkCatalog",&,N,V_artworkCatalog
alertController
T@"MPCPlayerResponseItem",&,N,V_nowPlayingItem
appName
T@"MPModelPlaylist",R,N
beginLoadingItemWithCompletion:
T@"MPModelPlaylistEntry",R,N
containsObject:
T@"MPModelRadioStation",R,N
endSeek
T@"MPModelSong",R,N
globalItemCount
T@"MPWeakTimer",&,N,V_activityTimer
initWithFrame:bundleIdentifier:
T@"MPWeakTimer",&,N,V_loadingTimer
isMusicCellularStreamingAllowed
T@"NSArray",&,N,V_nowPlayingIdentifiers
jumpByInterval:
T@"NSIndexPath",&,N,V_selectedIndexPath
numberWithLong:
T@"NSMutableDictionary",&,N,V_beginLoadingBlocks
refreshNavigationStackForLaunch
T@"NSMutableDictionary",&,N,V_cachedItemsByIndicies
removeObserver:
T@"NSObject<OS_dispatch_queue>",&,N,V_mediaRemoteItemQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_serialAccessContainerQueue
sectionAtIndex:
T@"NSOperationQueue",&,N,V_mediaRemoteSerialQueue
seeking
T@"NSString",&,N,V_appName
setCachedCount:
T@"NSString",R,C
setFittingSize:
T@"NSString",R,C,N,V_bundleID
setNumberStyle:
T@"NSString",R,N,V_identifier
setPlayerState:
T@"NSString",R,N,V_title
setTag:
T@"UIAlertController",&,N,V_alertController
traitCollection
T@"UIBarButtonItem",&,N,V_backButton
viewWillAppear:
T@"UIBarButtonItem",&,N,V_rightTitleLabelBarButtonItem
willMoveToParentViewController:
T@"UIImage",&,N,V_artworkImage
.cxx_destruct
T@"NSArray",R,N
T#,W,N
T@"UITableView",W,N,V_tableView
T@"<MCDErrorViewDelegate>",W,N,V_delegate
_activityIndicatorBarButtonItem
T@"<MCDNowPlayingContentManagerProtocol>",&,N,V_contentManager
_artworkCatalog
T@"<MCDPCContainerDelegate>",W,N,V_delegate
_isExplicitItem
T@"CPUINowPlayingButtonWrapperView",&,N,V_nowPlayingButtonView
_nowPlayingItem
T@"MCDPCContainer",&,N,V_container
_playableContentPlaybackManager
T@"MCDPCItem",R,W,N,V_rootItem
_totalItemCount
T@"MCDPCModel",R,W,N,V_model
addConstraints:
T@"MCDPlayableContentPlaybackManager",&,N,V_playableContentPlaybackManager
advance
T@"MPCPlayerResponse",&,N,V_lastReceivedResponse
allKeys
T@"MPModelPlaylist",&,N,VcurrentPlayingPlaylist
artwork
T@"MPModelPlaylistEntry",&,N,VcurrentPlayingPlaylistEntry
buttonWithType:
T@"MPModelRadioStation",&,N,VcurrentPlayingRadioStation
dealloc
T@"MPModelSong",&,N,VcurrentPlayingSong
getChildrenSupportsPlaybackProgressForIndexPath:withCompletion:
T@"MPRequestResponseController",&,N,V_requestController
initWithActivityIndicatorStyle:
T@"MPWeakTimer",&,N,V_beginLoadingTimeoutTimer
isEqualToArray:
T@"MPWeakTimer",&,N,V_playbackProgressTimeoutTimer
isProxy
T@"NSData",R,N,V_artworkData
numberWithBool:
T@"NSMutableDictionary",&,N,V_artworkCache
placeholderView
T@"NSMutableDictionary",&,N,V_cachedIndiciesByIdentifier
release
T@"NSMutableDictionary",&,N,V_items
rightTitleLabel
T@"NSObject<OS_dispatch_queue>",&,N,V_mediaRemoteNotificationQueue
section
T@"NSObject<OS_dispatch_queue>",&,N,V_serialQueue
sectionIndexTitlesForTableView:
T@"NSOperationQueue",&,N,V_modelInvalidationQueue
session:didUpdateConfiguration:
T@"NSString",&,N,V_bundleID
setCurrentPlayingPlaylistEntry:
T@"NSString",R,C,N
setMaxConcurrentOperationCount:
T@"NSString",R,N
setPlaybackQueueViewController:
T@"NSString",R,N,V_subtitle
setSerialQueue:
T@"UIActivityIndicatorView",&,N,V_activityIndicator
snapshotViewAfterScreenUpdates:
T@"UIBarButtonItem",&,N,V_activityIndicatorBarButtonItem
viewControllers
T@"UIBarButtonItem",&,N,V_playbackQueueBarButtonItem
visible
T@"UIImage",&,N,V_albumArtwork
wishlistCommand
T@"UILabel",&,N,V_rightTitleLabel
T@"UITabBarController",&,N,V_tabBarController
T@"UITableViewController",&,N,V_playbackQueueViewController
T@"UIView",&,N,V_placeholderView
T@?,C,N,V_containerCompletion
T@?,C,N,V_playbackCompletion
TB,N
TB,N,GisCurrentPlayingApp,V_currentPlayingApp
TB,N,GisSeeking,V_seeking
TB,N,GisVisible,V_visible
TB,N,V_allowsAlbumArt
TB,N,V_currentlyPlaying
TB,N,V_currentlyPlayingApp
TB,N,V_didFinishInitialLoad
TB,N,V_didFinishInitialViewAppear
TB,N,V_handledWillAppear
TB,N,V_hasCarScreen
TB,N,V_hasInvalidatedDummyTabs
TB,N,V_pushToNowPlaying
TB,N,V_shouldEnableNetwork
TB,N,V_shouldShowPlaybackQueue
TB,N,V_showNavigationBar
TB,N,V_trackBuffering
TB,N,V_visible
TB,R,N,V_isCloudItem
TB,R,N,V_isContainer
TB,R,N,V_isExplicitItem
TB,R,N,V_isPlayable
TB,R,N,V_showPlaybackProgress
TI,N,V_supportedAPIMask
TQ,R
Tf,R,N,V_playbackProgress
Tq,N,V_cachedCount
Tq,N,V_playerState
Tq,N,V_playingItemIndex
Tq,N,V_totalItemCount
Tq,R,N
T{CGSize=dd},N,V_imageSize
_MCD_tableView
__supportedDelegateCalls
_accessoryView
_activityIndicator
_activityTimer
_adjustRightTitleLabelToFit
_adjustedIndexPathForPlaybackQueue:
_albumArtwork
_alertActionForFeedbackCommand:fallbackTitle:
_alertController
_appName
_appRegisteredForContent:
_artworkCache
_artworkData
_artworkImage
_artworkTimer
_backButton
_beginLoadingBlocks
_beginLoadingTimeoutTimer
_browsableContentDidRegisterNotification:
_bundleID
_cachedCount
_cachedIndiciesByIdentifier
_cachedItemsByIndicies
_capabilityForKey:
_carScreen
_carSessionStatus
_carSystemFocusColor
_carSystemPrimaryColor
_carSystemSecondaryColor
_clearLoadingActivity
_clearTableViewSelectionAnimated:
_configureCell:forIndexPath:
_container
_containerCompletion
_contentItemsUpdated:
_count
_createRootViewController
_createSectionedRootViewController
_currentPlayingApp
_currentTraitCollection
_currentlyPlaying
_currentlyPlayingApp
_dataSource
_dataSourceInvalidated:
_delayTimer
_delegate
_didFinishInitialLoad
_didFinishInitialViewAppear
_didPushToNowPlayingAtLaunch
_displayErrorAlertController:
_displayLoadingActivity
_errorForNotification:
_finishBeginLoadingNotification:
_finishPlaybackNotification:
_handleHamburgerActionSheet
_handleWillAppear
_handledWillAppear
_hasBrowsableContent
_hasCarScreen
_hasInvalidatedDummyTabs
_hasLoaded
_hasNoBrowsableContent
_hasSectionedContent
_hasTabbedBrowsing
_hostTabAtIndex:dummyTab:
_identifier
_imageSize
_indexPath
_initWithModel:MRContentItem:
_initWithModel:rootItem:indexPath:
_invalidateActivityTimer
_invalidateBeginLoadingTimeoutTimer
_invalidatePlaybackProgressTimeoutTimer
_isCloudItem
_isContainer
_isPlayable
_isRootTableViewController
_itemAtIndexPath:
_items
_jumpBackwardInterval
_jumpForwardInterval
_labelColor
_lastReceivedResponse
_limited
_limitedUIChanged:
_loadAllHostTabs
_loadingTimer
_mediaRemoteItemQueue
_mediaRemoteNotificationQueue
_mediaRemoteSerialQueue
_model
_modelDidInvalidate:
_modelInvalidationQueue
_nowPlayingButton
_nowPlayingButtonTapped:
_nowPlayingButtonView
_nowPlayingDidChange:
_nowPlayingDidChangeNotification:
_nowPlayingIdentifiers
_nowPlayingIdentifiersChanged:
_nowPlayingIdentifiersDidChange:
_numberOfItemsInPlaybackQueue
_performChangeRequest:
_placeholderView
_playbackCompletion
_playbackProgress
_playbackProgressTimeoutTimer
_playbackQueueBarButtonItem
_playbackQueueViewController
_playbackStateChanged:
_playerState
_playingItemIndex
_popViewControllerAnimated
_populateStack
_presentingViewControllerView
_processResponse:error:
_pushToNowPlaying
_pushToNowPlaying:
_registerForClientContent
_registerNotifications
_replacePlaceholderViewWithView:
_requestController
_reselectIndexPath
_rightTitleLabel
_rightTitleLabelBarButtonItem
_rootContainer
_rootItem
_seeking
_selectedIndexPath
_selectedNextIndexPath
_serialAccessContainerQueue
_serialQueue
_sessionAllowsAlbumArt:
_setAccessoryView:
_setChecked:
_setCurrentTraitCollection:
_setupActivityTimer
_setupBeginLoadingTimeoutTimerWithCompletion:
_setupPlaybackProgressTimeoutTimerWithCompletion:
_setupRequest
_setupView
_shouldEnableNetwork
_shouldLimitLists
_shouldShowPlaybackQueue
_shouldShowPlaybackQueueForItemCount:
_showLoadingScreen
_showNavigationBar
_showPlaceholderArtwork
_showPlaybackProgress
_showTimeoutScreen
_skipIntervalButtonImageForInterval:size:
_subtitle
_supportedAPIMask
_systemImageNamed:
_tabBarController
_tabBarItemForViewController:fromItem:
_tableView
_title
_updateBackButton
_updateNowPlayingButtonVisibility
_updateTrackQueueIndex
_visible
accessoryWithCloudIcon
accessoryWithDisclosureIndicator
actionWithTitle:style:handler:
activateConstraints:
activityIndicator
activityIndicatorBarButtonItem
activityTimer
addAction:
addExecutionBlock:
addIndex:
addObject:
addObserver:selector:name:object:
addOperation:
addOperation:cancelAllOperations:
addOperationWithBlock:
addSubview:
addTarget:action:forControlEvents:
ageVerificationState
album
albumArtwork
albumImageWithFallbackForSize:doubleLineRow:
albumTextForNowPlayingController:
alertControllerWithTitle:message:preferredStyle:
allObjects
allowsAlbumArt
animateWithDuration:animations:completion:
anyObject
appTitle
appendFormat:
appendString:
applicationProxyForIdentifier:
applyConfiguration:
array
arrayWithObjects:count:
artist
artistTextForNowPlayingController:
artworkCache
artworkCatalog
artworkData
artworkImage
artworkTimer
autorelease
backButton
backgroundArtForNowPlayingController:
beginAutomaticResponseLoading
beginLoadingBlocks
beginLoadingItem:completion:
beginLoadingItemAtIndexPath:completion:
beginLoadingTimeoutTimer
beginRequestObservation
beginSeekWithDirection:
boldSystemFontOfSize:
boolValue
bottomAnchor
bounds
bundleID
bundleIdentifier
bundleWithIdentifier:
bytes
cachedCount
cachedIndexByIdentifier:
cachedIndiciesByIdentifier
cachedItemForIdentifier:
cachedItemForIndex:
cachedItemsByIndicies
canBecomeFirstResponder
cancelAllOperations
cancelPreviousPerformRequestsWithTarget:selector:object:
cancelledConnectionAttemptOnTransport:
carSessionStatus
car_scaledImageWithSize:
cellForRowAtIndexPath:
cellForTableView:
centerXAnchor
changeItemCommand
changeToItem:
changeValue:
class
colorWithAlphaComponent:
compare:
componentsJoinedByString:
componentsSeparatedByCharactersInSet:
composer
configuration
configurationWithPointSize:weight:scale:
configurationWithText:detailText:image:showExplicit:accessory:showActivityIndicator:showPlaybackProgress:playbackProgress:currentlyPlaying:
configurationWithTextStyle:scale:
conformsToProtocol:
constraintEqualToAnchor:
constraintEqualToAnchor:constant:
constraintEqualToAnchor:multiplier:constant:
constraintEqualToConstant:
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
container
container:didInvalidateIndicies:
containerAtIndex:
containerCompletion
containerDidChangeCount:
containerForItem:
containerForRoot
containerWillChangeCount:
contentManager
contentManager:bufferingItem:
contentManager:displayItemIndex:totalItemCount:
contentManager:itemDidChange:response:
contentManager:presentViewController:
contentManager:processResponse:error:
contentManager:sectionName:
contentManager:shouldShowPlaybackQueue:
contentManagerCompletedAllPlayback:
contentManagerInitiatedPlaybackFromPlaybackQueue:
contentManagerReloadData:
contentScrollView
contentView
controller:defersResponseReplacement:
controller:shouldRetryFailedRequestWithError:
copy
count
countByEnumeratingWithState:objects:count:
currentPlayingApp
currentPlayingPlaylist
currentPlayingPlaylistEntry
currentPlayingRadioStation
currentPlayingSong
currentSession
currentStack
currentlyPlaying
currentlyPlayingApp
customPlaybackControlButtonsForNowPlayingViewController:
dataSource
debugDescription
defaultCenter
defaultManager
delegate
description
deselectRowAtIndexPath:animated:
dictionary
dictionaryWithObjects:forKeys:count:
didFinishInitialLoad
didFinishInitialViewAppear
didFinishLoadingRequestForController:
dislikeCommand
dismissViewControllerAnimated:completion:
domain
doubleValue
drawInRect:
duration
durationSnapshotForNowPlayingViewController:
endAutomaticResponseLoading
endRequestObservation
enumerateIndexesUsingBlock:
enumerateObjectsUsingBlock:
errorViewDidTapButton:
errorWithDomain:code:userInfo:
fetchContentWithCompletion:
firstObject
firstPartyAppBundleIDs
flashScrollIndicators
flattenedGenericObject
floatValue
fontWithDescriptor:size:
frame
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveEvent:
gestureRecognizer:shouldReceivePress:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizerShouldBegin:
getChildrenAtIndexPath:inRange:completion:
getChildrenInRange:completion:
getCountOfChildrenAtIndexPath:withCompletion:
getCountOfChildrenWithCompletion:
getIndexes:
getNowPlayingIdentifiersWithCompletion:
getPlaybackProgressSupportForChildrenWithCompletion:
glyphFactory:pointSize:weight:scale:
handledWillAppear
hasCarScreen
hasInvalidatedDummyTabs
hash
heightAnchor
identifier
imageNamed:ofSize:
imageSize
imageWithData:
imageWithRenderingMode:
imageWithSize:
imageWithSymbolConfiguration:
indexAtPosition:
indexOfObject:
indexPath
indexPathByAddingIndex:
indexPathByRemovingLastIndex
indexPathForCell:
indexPathForGlobalIndex:
indexPathForPreferredFocusedViewInTableView:
indexPathForRow:inSection:
indexPathForSelectedRow
indexPathWithIndexes:length:
indexPathsForSelectedRows
indexPathsForVisibleRows
indexSet
init
initForAutolayout
initWithBarButtonSystemItem:target:action:
initWithBundleID:
initWithBundleID:appName:
initWithBundleID:model:
initWithBundleID:stack:
initWithBundleIdentifier:
initWithBundleIdentifier:dataSource:delegate:
initWithBytes:length:
initWithContainer:
initWithContainer:tabbedBrowsing:
initWithContentManager:
initWithCustomView:
initWithDelegate:dataSource:bundleID:
initWithFrame:
initWithName:object:userInfo:
initWithNibName:bundle:
initWithPlayableBundleID:appName:
initWithProperties:relationships:
initWithTitle:buttonText:
initWithTitle:image:selectedImage:
initWithTitle:subtitle:
initiatePlaybackAtIndexPath:completion:
integerValue
invalidate
invalidateAndReloadTabsWithCompletion:
isAnimating
isArtworkVisuallyIdenticalToCatalog:
isCancelled
isCloudItem
isContainer
isCurrentPlayingApp
isEqual:
isEqualToNumber:
isEqualToString:
isExplicitItem
isExplicitSong
isKindOfClass:
isMemberOfClass:
isPlayable
isSeeking
isValidForRefreshedParent:
isVisible
itemAtIndexPath:
items
itemsFromMRContentItems:
keyEnumerator
lastReceivedResponse
layoutIfNeeded
leadingAnchor
length
likeCommand
limitUserInterfaces
limitableUserInterfaces
limitedUI
loadingTimer
localizedDescription
localizedName
localizedNameForContext:
localizedShortTitle
localizedStringForKey:value:table:
localizedStringWithFormat:
localizedTitle
mediaRemoteItemQueue
mediaRemoteNotificationQueue
mediaRemoteSerialQueue
metadataObject
model
modelInvalidationQueue
modelResponseDidInvalidate:
mutableCopy
name
navigationController
navigationController:animationControllerForOperation:fromViewController:toViewController:
navigationController:didShowViewController:animated:
navigationController:interactionControllerForAnimationController:
navigationController:willShowViewController:animated:
navigationControllerPreferredInterfaceOrientationForPresentation:
navigationControllerSupportedInterfaceOrientations:
navigationItem
newlineCharacterSet
nextItem
nextObject
nowPlayingAlbumArtMode
nowPlayingBundleID
nowPlayingButton
nowPlayingButtonView
nowPlayingIdentifiers
nowPlayingIndicator
nowPlayingItem
nowPlayingViewController:buttonShouldBeActive:
nowPlayingViewController:didSelectButton:
nowPlayingViewController:didSendAction:state:
nowPlayingViewController:shouldDisplayButton:withImage:existingIdentifier:tinted:
nowPlayingViewControllerAddToLibrary:
nowPlayingViewControllerAlbumArtistButtonTapped:
nowPlayingViewControllerCanRepeat:
nowPlayingViewControllerCanShowAddToLibrary:
nowPlayingViewControllerCanShowAlbumArt:
nowPlayingViewControllerCanShowAlbumLink:
nowPlayingViewControllerCanShowChangePlaybackRate:
nowPlayingViewControllerCanShowMore:
nowPlayingViewControllerCanShowUpNext:
nowPlayingViewControllerCanShuffle:
nowPlayingViewControllerChangePlaybackRate:
nowPlayingViewControllerGetPlaybackRate:
nowPlayingViewControllerIsFuseSubscriber:
nowPlayingViewControllerIsPlaying:
nowPlayingViewControllerIsRightHandDrive:
nowPlayingViewControllerIsShowingExplicitTrack:
nowPlayingViewControllerMore:
nowPlayingViewControllerShouldUseMusicExplicitGlyph:
nowPlayingViewControllerToggleRepeat:
nowPlayingViewControllerToggleShuffle:
nowPlayingViewControllerUpNextButtonTapped:
nowPlayingViewControllerWillAppear:
numberOfSections
numberOfSectionsInTableView:
numberWithDouble:
numberWithFloat:
numberWithInteger:
numberWithUnsignedInteger:
object
objectAtIndexedSubscript:
objectEnumerator
objectForKey:
objectForKeyedSubscript:
operationCount
pathWithRoute:bundleID:playerID:
pause
performRequest:completion:
performRequest:options:completion:
performSelector:
performSelector:withObject:
performSelector:withObject:afterDelay:
performSelector:withObject:withObject:
placeholderTypeForNowPlayingViewController:
play
playableContentPlaybackManager
playbackCompletion
playbackProgress
playbackProgressTimeoutTimer
playbackQueueBarButtonItem
playbackQueueViewController
playbackRateCommand
playerPath
playerState
playingItemGlobalIndex
playingItemIndex
playingItemIndexPath
playingItemProperties
playlist
playlistEntry
popToViewController:animated:
popViewControllerAnimated:
postNotificationName:object:
postNotificationName:object:userInfo:
preferredBackwardJumpIntervals
preferredFocusEnvironments
preferredFontDescriptorWithTextStyle:addingSymbolicTraits:options:
preferredForwardJumpIntervals
preferredPlaybackRate
presentViewController:animated:completion:
presentingViewController
previousItem
processArtworkForCurrentlyPlayingSong
propertySetWithProperties:
pushToNowPlaying
pushViewController:animated:
queueItemProperties
queueSectionProperties
radioStation
refreshWithCompletion:
registerClass:forCellReuseIdentifier:
reloadData
reloadRowsAtIndexPaths:withRowAnimation:
reloadTable
reloadWithCompletion:
removeFromSuperview
removeObserver:name:object:
repeatCommand
repeatType
repeatTypeForNowPlayingViewController:
representedBundleID
requestController
requestLabel
respondsToSelector:
response
retain
retainCount
retryButtonPressed:
rightBarButtonItems
rightHandDrive
rightTitleLabelBarButtonItem
rootItem
safeAreaInsets
safeAreaLayoutGuide
scale
screen
scrollViewDidChangeAdjustedContentInset:
scrollViewDidEndDecelerating:
scrollViewDidEndDragging:willDecelerate:
scrollViewDidEndScrollingAnimation:
scrollViewDidEndZooming:withView:atScale:
scrollViewDidScroll:
scrollViewDidScrollToTop:
scrollViewDidZoom:
scrollViewShouldScrollToTop:
scrollViewWillBeginDecelerating:
scrollViewWillBeginDragging:
scrollViewWillBeginZooming:withView:
scrollViewWillEndDragging:withVelocity:targetContentOffset:
secondaryLabelColor
seekCommand
selectedIndex
selectedIndexPath
selectedViewController
self
serialAccessContainerQueue
serialQueue
sessionDidConnect:
sessionDidDisconnect:
setAccessoryView:
setActivityIndicator:
setActivityIndicatorBarButtonItem:
setActivityIndicatorViewStyle:
setActivityTimer:
setAlbumArtwork:
setAlertController:
setAllowsAlbumArt:
setAlpha:
setAppName:
setArtworkCache:
setArtworkCatalog:
setArtworkImage:
setArtworkTimer:
setAutoresizingMask:
setBackButton:
setBackgroundColor:
setBeginLoadingBlocks:
setBeginLoadingTimeoutTimer:
setBundleID:
setCacheIdentifier:forRequestingContext:
setCachedIndiciesByIdentifier:
setCachedItemsByIndicies:
setCarSessionStatus:
setCharge:
setColor:
setContainer:
setContainerCompletion:
setContentManager:
setCount:
setCurrentPlayingApp:
setCurrentPlayingPlaylist:
setCurrentPlayingRadioStation:
setCurrentPlayingSong:
setCurrentlyPlaying:
setCurrentlyPlayingApp:
setDataSource:
setDelegate:
setDestination:configurationBlock:
setDestinationScale:
setDidFinishInitialLoad:
setDidFinishInitialViewAppear:
setFilterType:
setFont:
setFrame:
setHandledWillAppear:
setHasCarScreen:
setHasInvalidatedDummyTabs:
setHidden:
setHidesBackButton:
setImage:
setImageSize:
setItems:
setLabel:
setLastReceivedResponse:
setLevelGuttersColor:
setLimitedUI:
setLineBreakMode:
setLoadingTimer:
setMaximumFractionDigits:
setMediaRemoteItemQueue:
setMediaRemoteNotificationQueue:
setMediaRemoteSerialQueue:
setModel:
setModelInvalidationQueue:
setMusicCellularStreamingAllowed:
setName:
setNavigationBarHidden:
setNavigationBarHidden:animated:
setNeedsLayout
setNowPlayingButtonView:
setNowPlayingIdentifiers:
setNowPlayingItem:
setNumberOfLevels:
setNumberOfLines:
setObject:forKey:
setObject:forKeyedSubscript:
setPauseButtonImageName:
setPlaceholderView:
setPlayButtonImageName:
setPlayableContentPlaybackManager:
setPlaybackCompletion:
setPlaybackProgressTimeoutTimer:
setPlaybackQueueBarButtonItem:
setPlaybackRate:
setPlaybackState:
setPlayerPath:
setPlayingItemIndex:
setPlayingItemProperties:
setPriority:
setPushToNowPlaying:
setQualityOfService:
setQueueItemProperties:
setQueueSectionProperties:
setRemembersLastFocusedIndexPath:
setRequest:
setRequestController:
setRightBarButtonItem:
setRightBarButtonItems:
setRightTitle:
setRightTitleLabel:
setRightTitleLabelBarButtonItem:
setRowHeight:
setScrollEnabled:
setSeeking:
setSelected:
setSelectedIndexPath:
setSerialAccessContainerQueue:
setSessionObserver:
setShouldEnableNetwork:
setShouldShowPlaybackQueue:
setShowNavigationBar:
setShowPlaybackProgress:
setSupportedAPIMask:
setTabBarController:
setTabBarItem:
setTableCellClass:
setTableDataSource:
setTableView:
setText:
setTextAlignment:
setTextColor:
setTintColor:
setTitle:
setTitle:forState:
setTitleView:
setTotalItemCount:
setTrackBuffering:
setTracklistRange:
setTranslatesAutoresizingMaskIntoConstraints:
setUsesGroupingSeparator:
setUsesSignificantDigits:
setViewControllers:
setViewControllers:animated:
setVisible:
setWidth:
sharedInstance
sharedNetworkObserver
shouldEnableNetwork
shouldShowComposer
shouldShowPlaybackQueue
showCurrentlyPlayingIndex
showNavigationBar
showPlaybackProgress
showViewController:sender:
shuffleCommand
shuffleType
shuffleTypeForNowPlayingViewController:
size
sizeToFit
song
stackItemWithContainer:
startAnimating
startedConnectionAttemptOnTransport:
state
stop
stopAnimating
stringFromNumber:
stringFromSeconds:
stringWithFormat:
subtitle
subviews
superclass
superview
supportedAPIMask
supportedPlaybackRates
supportsFocus
systemFontOfSize:
systemImageNamed:compatibleWithTraitCollection:
systemImageNamed:withConfiguration:
tabBar
tabBarController
tabBarController:animationControllerForTransitionFromViewController:toViewController:
tabBarController:didEndCustomizingViewControllers:changed:
tabBarController:didSelectViewController:
tabBarController:interactionControllerForAnimationController:
tabBarController:shouldSelectViewController:
tabBarController:willBeginCustomizingViewControllers:
tabBarController:willEndCustomizingViewControllers:changed:
tabBarControllerPreferredInterfaceOrientationForPresentation:
tabBarControllerSupportedInterfaceOrientations:
tabBarItem
tableBackgroundColor
tableCellClass
tableView
tableView:accessoryButtonTappedForRowWithIndexPath:
tableView:accessoryTypeForRowWithIndexPath:
tableView:canEditRowAtIndexPath:
tableView:canFocusRowAtIndexPath:
tableView:canMoveRowAtIndexPath:
tableView:canPerformAction:forRowAtIndexPath:withSender:
tableView:canPerformPrimaryActionForRowAtIndexPath:
tableView:cellForRowAtIndexPath:
tableView:commitEditingStyle:forRowAtIndexPath:
tableView:contextMenuConfigurationForRowAtIndexPath:point:
tableView:didBeginMultipleSelectionInteractionAtIndexPath:
tableView:didDeselectRowAtIndexPath:
tableView:didEndDisplayingCell:forRowAtIndexPath:
tableView:didEndDisplayingFooterView:forSection:
tableView:didEndDisplayingHeaderView:forSection:
tableView:didEndEditingRowAtIndexPath:
tableView:didFocusRowAtIndexPath:
tableView:didHighlightRowAtIndexPath:
tableView:didSelectRowAtIndexPath:
tableView:didUnhighlightRowAtIndexPath:
tableView:didUpdateFocusInContext:withAnimationCoordinator:
tableView:editActionsForRowAtIndexPath:
tableView:editingStyleForRowAtIndexPath:
tableView:estimatedHeightForFooterInSection:
tableView:estimatedHeightForHeaderInSection:
tableView:estimatedHeightForRowAtIndexPath:
tableView:heightForFooterInSection:
tableView:heightForHeaderInSection:
tableView:heightForRowAtIndexPath:
tableView:indentationLevelForRowAtIndexPath:
tableView:leadingSwipeActionsConfigurationForRowAtIndexPath:
tableView:moveRowAtIndexPath:toIndexPath:
tableView:numberOfRowsInSection:
tableView:performAction:forRowAtIndexPath:withSender:
tableView:performPrimaryActionForRowAtIndexPath:
tableView:previewForDismissingContextMenuWithConfiguration:
tableView:previewForHighlightingContextMenuWithConfiguration:
tableView:sectionForSectionIndexTitle:atIndex:
tableView:selectionFollowsFocusForRowAtIndexPath:
tableView:shouldBeginMultipleSelectionInteractionAtIndexPath:
tableView:shouldHighlightRowAtIndexPath:
tableView:shouldIndentWhileEditingRowAtIndexPath:
tableView:shouldShowMenuForRowAtIndexPath:
tableView:shouldSpringLoadRowAtIndexPath:withContext:
tableView:shouldUpdateFocusInContext:
tableView:targetIndexPathForMoveFromRowAtIndexPath:toProposedIndexPath:
tableView:titleForDeleteConfirmationButtonForRowAtIndexPath:
tableView:titleForFooterInSection:
tableView:titleForHeaderInSection:
tableView:trailingSwipeActionsConfigurationForRowAtIndexPath:
tableView:viewForFooterInSection:
tableView:viewForHeaderInSection:
tableView:willBeginEditingRowAtIndexPath:
tableView:willDeselectRowAtIndexPath:
tableView:willDisplayCell:forRowAtIndexPath:
tableView:willDisplayContextMenuWithConfiguration:animator:
tableView:willDisplayFooterView:forSection:
tableView:willDisplayHeaderView:forSection:
tableView:willEndContextMenuInteractionWithConfiguration:animator:
tableView:willPerformPreviewActionForMenuWithConfiguration:animator:
tableView:willSelectRowAtIndexPath:
tableViewDidEndMultipleSelectionInteraction:
textLabel
timerWithInterval:repeats:block:
title
titleForNowPlayingController:
titleForUpNextInNowPlayingViewController:
titleLabel
topAnchor
totalItemCount
trackBuffering
tracklist
tracksTiledArtworkCatalogWithRows:columns:
trailingAnchor
traitCollectionDidChange:
transportControlView
treatment
type
upNextButtonTapped:
updateRootItemWithCompletion:
updateTitleAndTabBarItemsAtIndexes:
userInfo
userInterfaceIdiom
value
valueForKey:
view
viewDidAppear:
viewDidDisappear:
viewDidLayoutSubviews
viewDidLoad
viewForZoomingInScrollView:
viewWillDisappear
viewWillDisappear:
visibleCells
visibleViewController
widthAnchor
willBeginLoadingRequestForController:
window
zone
@16@0:8
v24@0:8@16
v16@0:8
@"NSArray"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
q32@0:8@16q24
@32@0:8@16@24
q24@0:8@16
@32@0:8@16q24
B32@0:8@16@24
@24@0:8@16
q40@0:8@16@24q32
v40@0:8@16q24@32
v40@0:8@16@24@32
q32@0:8@"UITableView"16q24
@"UITableViewCell"32@0:8@"UITableView"16@"NSIndexPath"24
q24@0:8@"UITableView"16
@"NSString"32@0:8@"UITableView"16q24
B32@0:8@"UITableView"16@"NSIndexPath"24
@"NSArray"24@0:8@"UITableView"16
q40@0:8@"UITableView"16@"NSString"24q32
v40@0:8@"UITableView"16q24@"NSIndexPath"32
v40@0:8@"UITableView"16@"NSIndexPath"24@"NSIndexPath"32
v48@0:8@16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@16B24
v32@0:8@16@24
v40@0:8@16@24d32
v24@0:8@"UIScrollView"16
v48@0:8@"UIScrollView"16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@"UIScrollView"16B24
@"UIView"24@0:8@"UIScrollView"16
v32@0:8@"UIScrollView"16@"UIView"24
v40@0:8@"UIScrollView"16@"UIView"24d32
B24@0:8@"UIScrollView"16
v40@0:8@16@24q32
d32@0:8@16@24
d32@0:8@16q24
q32@0:8@16@24
@40@0:8@16@24@32
B48@0:8@16:24@32@40
v48@0:8@16:24@32@40
B40@0:8@16@24@32
@48@0:8@16@24{CGPoint=dd}32
v40@0:8@"UITableView"16@"UITableViewCell"24@"NSIndexPath"32
v40@0:8@"UITableView"16@"UIView"24q32
d32@0:8@"UITableView"16@"NSIndexPath"24
d32@0:8@"UITableView"16q24
@"UIView"32@0:8@"UITableView"16q24
q32@0:8@"UITableView"16@"NSIndexPath"24
v32@0:8@"UITableView"16@"NSIndexPath"24
@"NSIndexPath"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSString"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSArray"32@0:8@"UITableView"16@"NSIndexPath"24
@"UISwipeActionsConfiguration"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSIndexPath"40@0:8@"UITableView"16@"NSIndexPath"24@"NSIndexPath"32
B48@0:8@"UITableView"16:24@"NSIndexPath"32@40
v48@0:8@"UITableView"16:24@"NSIndexPath"32@40
B32@0:8@"UITableView"16@"UITableViewFocusUpdateContext"24
v40@0:8@"UITableView"16@"UITableViewFocusUpdateContext"24@"UIFocusAnimationCoordinator"32
@"NSIndexPath"24@0:8@"UITableView"16
B40@0:8@"UITableView"16@"NSIndexPath"24@"<UISpringLoadedInteractionContext>"32
v24@0:8@"UITableView"16
@"UIContextMenuConfiguration"48@0:8@"UITableView"16@"NSIndexPath"24{CGPoint=dd}32
@"UITargetedPreview"32@0:8@"UITableView"16@"UIContextMenuConfiguration"24
v40@0:8@"UITableView"16@"UIContextMenuConfiguration"24@"<UIContextMenuInteractionCommitAnimating>"32
v40@0:8@"UITableView"16@"UIContextMenuConfiguration"24@"<UIContextMenuInteractionAnimating>"32
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
B32@0:8@"UIGestureRecognizer"16@"UIEvent"24
v32@0:8@"MCDPCContainer"16@"NSIndexSet"24
v24@0:8@"MCDPCContainer"16
v24@0:8@"MCDErrorLoadingView"16
v24@0:8Q16
v24@0:8@"CARSession"16
v32@0:8@"CARSession"16@"CARSessionConfiguration"24
@28@0:8@16B24
v20@0:8B16
v24@0:8@?16
@"UITableView"
@"CPUINowPlayingButton"
@"NSIndexPath"
@"_UIFilteredDataSource"
@"MPWeakTimer"
@"UIView"
@"NSObject<OS_dispatch_queue>"
@"CARSessionStatus"
@"MCDPCContainer"
@"UIAlertController"
@36@0:8{CGSize=dd}16B32
@32@0:8{CGSize=dd}16
@"MPPropertySet"16@0:8
v36@0:8@16@24B32
Q24@0:8@16
@48@0:8@16q24@32@40
v36@0:8@"UINavigationController"16@"UIViewController"24B32
Q24@0:8@"UINavigationController"16
q24@0:8@"UINavigationController"16
@"<UIViewControllerInteractiveTransitioning>"32@0:8@"UINavigationController"16@"<UIViewControllerAnimatedTransitioning>"24
@"<UIViewControllerAnimatedTransitioning>"48@0:8@"UINavigationController"16q24@"UIViewController"32@"UIViewController"40
@"MCDPCModel"
@"NSString"
@"NSOperationQueue"
v40@0:8@16q24q32
v40@0:8@"_MCDNowPlayingContentManager"16@"MPCPlayerResponse"24@"NSError"32
v28@0:8@"_MCDNowPlayingContentManager"16B24
v24@0:8@"_MCDNowPlayingContentManager"16
v32@0:8@"_MCDNowPlayingContentManager"16@"UIViewController"24
v40@0:8@"_MCDNowPlayingContentManager"16q24q32
v32@0:8@"_MCDNowPlayingContentManager"16@"NSString"24
v40@0:8@"_MCDNowPlayingContentManager"16@"MPModelObject"24@"MPCPlayerResponse"32
@"UITableViewController"
@"<MCDNowPlayingContentManagerProtocol>"
@"UIBarButtonItem"
@"UIActivityIndicatorView"
@"UILabel"
v32@0:8@16@?24
v48@0:8@16{_NSRange=QQ}24@?40
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
@?16@0:8
I16@0:8
v20@0:8I16
@"MCDPCItem"
@"MCDPlayableContentPlaybackManager"
@"NSMutableDictionary"
{CGSize="width"d"height"d}
@32@0:8@16^v24
f16@0:8
@"NSData"
@"UIImage"
q16@0:8
v24@0:8q16
@24@0:8q16
v40@0:8{_NSRange=QQ}16@?32
{?="didInvalidateRootItem"b1"didInvalidateIndicies"b1"willChangeCount"b1"didChangeCount"b1}
@"<MCDPCContainerDelegate>"
v28@0:8@?16B24
v32@0:8@"MPRequestResponseController"16@?<v@?>24
B32@0:8@"MPRequestResponseController"16@"NSError"24
v24@0:8@"MPRequestResponseController"16
v24@0:8#16
@40@0:8@"<MCDNowPlayingContentManagerDelegate>"16@"<MCDNowPlayingDataSource>"24@"NSString"32
@"MPModelSong"16@0:8
@"MPModelPlaylistEntry"16@0:8
@"MPModelPlaylist"16@0:8
@"MPModelRadioStation"16@0:8
{?=dddddffBB}24@0:8@16
@"NSString"24@0:8@"CPUINowPlayingViewController"16
@"UIImage"24@0:8@"CPUINowPlayingViewController"16
B24@0:8@"CPUINowPlayingViewController"16
{?=dddddffBB}24@0:8@"CPUINowPlayingViewController"16
q24@0:8@"CPUINowPlayingViewController"16
B56@0:8@16q24o^@32@40o^B48
B32@0:8@16q24
B56@0:8@"CPUINowPlayingViewController"16q24o^@32@"NSString"40o^B48
B32@0:8@"CPUINowPlayingViewController"16q24
v40@0:8@"CPUINowPlayingViewController"16q24q32
v24@0:8@"CPUINowPlayingViewController"16
@"NSNumber"24@0:8@"CPUINowPlayingViewController"16
@"NSArray"24@0:8@"CPUINowPlayingViewController"16
v32@0:8@"CPUINowPlayingViewController"16@"CPUIMediaButton"24
B24@0:8q16
@"MPModelSong"
@"MPModelPlaylistEntry"
@"MPModelPlaylist"
@"MPModelRadioStation"
@"<MCDNowPlayingContentManagerDelegate>"
@"MPCPlayerResponse"
@"MPCPlayerResponseItem"
@"MPRequestResponseController"
@"MPArtworkCatalog"
@"<MCDNowPlayingDataSource>"
@"MSVTimer"
d16@0:8
@32@0:8d16q24
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"<MCDErrorViewDelegate>"
@48@0:8@16d24q32q40
@32@0:8@16d24
B32@0:8@"UITabBarController"16@"UIViewController"24
v32@0:8@"UITabBarController"16@"UIViewController"24
v32@0:8@"UITabBarController"16@"NSArray"24
v36@0:8@"UITabBarController"16@"NSArray"24B32
Q24@0:8@"UITabBarController"16
q24@0:8@"UITabBarController"16
@"<UIViewControllerInteractiveTransitioning>"32@0:8@"UITabBarController"16@"<UIViewControllerAnimatedTransitioning>"24
@"<UIViewControllerAnimatedTransitioning>"40@0:8@"UITabBarController"16@"UIViewController"24@"UIViewController"32
@28@0:8Q16B24
@"UITabBarController"
@"CPUINowPlayingButtonWrapperView"
MCDBrowsableContentNowPlayingIdentifiersUpdatedNotification
v8@?0
com.apple.podcasts
MCDBrowsableContentViewControllerQueue
<%@: %p [%@]>
v16@?0I8I12
MusicCarDisplayUI
ERROR_LOADING_ITEM
v16@?0@"NSError"8
v24@?0Q8^B16
v32@?0@"CPUITableCell"8Q16^B24
v12@?0B8
com.apple.Music
com.apple.iBooks
com.apple.MusicApplication
com.apple.Music.CarPlay
carplay
com.apple.Music.LibraryView
com.apple.Music.LibraryView.Albums.Detail
com.apple.Music.LibraryView.Albums
com.apple.Music.LibraryView.Artists
com.apple.Music.LibraryView.Compilations
com.apple.Music.LibraryView.Composers
com.apple.Music.LibraryView.RecentlyAdded
com.apple.Music.LibraryView.Songs
com.apple.Music.LibraryView.MadeForYou
com.apple.Music.LibraryView.Downloaded
com.apple.Music.LibraryView.Favorites
com.apple.Music.LibraryView.Genres
com.apple.Music.LibraryView.Playlists
com.apple.Music.LibraryView.Playlists.Detail
com.apple.Music.ForYou
com.apple.Music.Browse
com.apple.Music.Radio
ByArtist
ByAlbum
ByTitle
ByPlaylistType
ByLibraryAddedDate
ByLastDevicePlaybackDate
ByLastModifiedDate
ByAscendingYear
ByDescendingYear
ByPlaylistOrderAscending
ByPlaylistOrderDescending
ByReleaseDateAscending
ByReleaseDateDescending
MCDNowPlayingWillAppearNotification
MCDNowPlayingWillDisappearNotification
MCDPlaybackStateChangedNotification
com.apple.MobileMusicPlayer.MusicCarDisplayUI
music.square.stack
19.circle.fill
e.square.fill
star.fill
PLAYBACK_RATE_SPEED_HALF
PLAYBACK_RATE_SPEED_THREE_QUARTERS
PLAYBACK_RATE_SPEED_ONE_AND_QUARTER
PLAYBACK_RATE_SPEED_ONE_AND_HALF
PLAYBACK_RATE
%d Song(s)
%d Minute(s)
ALBUM_DETAIL_FORMAT_FULL
ROOT
CarPlay Now Playing Request - Playable Content
com.apple.MusicCarDisplayUI.playableContent.invalidate
[%@:%@]
PLAYBACK_QUEUE_TITLE
AppName_PlaybackQueue
POSITION_IN_PLAYLIST_FORMAT
com.apple.MusicCarDisplayUI.playableContent.mediaRemote
com.apple.MusicCarDisplayUI.playableContent.mediaRemote.items
v12@?0C8
v16@?0^{__CFArray=}8
v16@?0Q8
<%@: %p - (%@) (%@) [%@%@]>
com.apple.MusicCarDisplayUI.playableContent.serialContainerAccess
<%@:%p - [%@:%@] - %@>
v40@?0@"NSArray"8{_NSRange=QQ}16@"NSError"32
v24@?0q8@"NSError"16
v20@?0B8@"NSError"12
v16@?0@"NSArray"8
nowPlayingChange
didInvalidate
didInitiatePlayback
didUpdateContent
appReadyToFetch
indexPath
item
items
model
error
MCDError
com.apple.MCDSerialProcessingQueue
General
com.apple.MusicCarDisplay
com.apple.MusicCarPlay
MCDContentItemsChangedNotification
v24@?0@8@"UIImage"16
line.horizontal.3.decrease.circle
square.fill
pause.fill
play.fill
goforward
gobackward
%@.%@
LIKE_TRACK_DEFAULT_TITLE
DISLIKE_TRACK_DEFAULT_TITLE
CANCEL
v16@?0@"UIAlertAction"8
NO_CONTENT_TITLE
NO_CONTENT_SUBTITLE
LOADING_TITLE
FUSE_TIMEOUT_TITLE
Try Again
com.apple.MusicCarDisplayUI.playableContent.navigationController
Posting MCDBrowsableContentNowPlayingIdentifiersUpdatedNotification
Playable Content API implemented? %d
Showing loading screen
Showing timeout screen
Retrying container reload, showing loading screen
Retrying full refresh, showing loading screen
Cell displayed: title: %{public}@, subtitle: %{public}@, showExplicit: %{public}d, showCloud: %{public}d, shouldShowPlaybackProgress: %{public}d, playbackProgress: %{public}f, currentlyPlaying: %{public}d, isContainer: %{public}d
Loading content timed out, displaying error: %{public}@
Selected playable content, preparing to play back
Initiating playback failed due to timeout
Initiating playback failed, displaying error: %{public}@
Initiating playback complete, preparing to push to now playing
Selected container, preparing to push to container
Container preparation complete, pushing to container
Selected neither a container nor a playable cell
Some content have invalidated, preparing to reload table view: %{public}@, indicies: %{public}@
Content was invalidated, but there are no indexes to reload.
Content that has been been invalidated is visible, reloading those index paths in table view: %{public}@, indicies: %{public}@
Content has been invalidated, but view isn't finished loading yet. Container: %{public}@, indicies: %{public}@
The container changed count, preparing to reload
Fetching content for root container
Fetching content for non-root container: %{public}@
No container available to refresh.
Refreshing content complete for container: %{public}@
Root container has content
Root container does not have content
Completed refresh for container %{public}@
Now Playing button tapped in table view, pushing to Now Playing
Pushing to Now Playing view
Loading content in table controller for the first time since app registered
Limited UI changed from %{public}@ to %{public}@
Initializing a new view for bundle: %@
Received kMRMediaRemoteBrowsableContentNowPlayingIdentifiersUpdatedNotification
Rebuilding stack for app launch
Creating view controller for sectioned browsing
Creating view controller for table view browsing
App does not use browsable content API, pushing to now playing
Now Playing view already frontmost when Now Playing app tapped
popping from view controller to Now Playing view
Sending play command since the app supports immediate playback
Show Now Playing view on app foreground
Cancelling extra model invalidation for %{public}@.
Playable content invalidated, refreshing all index paths for %{public}@
Fetched current view controllers to reload after playable content invalidated for %{public}@: %{public}@
Adding MCDBrowsableContentTableViewController after model invalidate
Container is valid for table view
Container isn't valid for refreshed parent for table views
Next view controller is neither a table view nor now playing view when current VC is a table view, which shouldn't be here: %{public}@
Adding MCDBrowsableNavigationController to view controllers after model invalidate for %{public}@
Container is valid for tab bar
Container isn't valid for tab bar
Next view controller is neither a table view nor a now playing view when current VC is a tab bar, which shouldn't be here: %{public}@
Adding now playing view controller for model invalidate for %{public}@
Setting view controllers after model invalidate for %{public}@
current stack: %@
Hiding back button: %d
Row selected in Playback Queue, dismissing Playback Queue screen
All playback completed, dismissing Now Playing screen
%{public}@ is now playing app? %{public}@
Data source invalidated
Posting MCDPCDidInvalidateNotificationName
Content items updated
Content items updated for wrong app, expected %{public}@, got %{public}@
Got content items updated notification, but no updated content items
Posting MCDPCDidUpdateContentNotificationName
Posting MCDPCNowPlayingDidChangeNotificationName
Posting MCDPCAppReadyToFetchNotificationName
beginLoadingPlayableContent API is not implemented
Beginning to load item at index path: %{public}@
beginLoadingPlayableContent API is not implemented, receiving unsupported operation for index path: %{public}@
beginLoadingPlayableContent API error, code: %d
beginLoadingPlayableContent API in progress for %{public}@
beginLoadingPlayableContent API timed out, completion block wasn't called for index path: %{public}@
Received kMRMediaRemoteApplicationFinishedLoadingContentNotification for index path: %{public}@, beginLoadingPlayableContent API error: %{public}@
Received kMRMediaRemoteApplicationFinishedLoadingContentNotification without error for index path: %{public}@
Received kMRMediaRemoteApplicationFinishedLoadingContentNotification with error: %{public}@, but completion block is null for index path: %{public}@
Received kMRMediaRemoteApplicationFinishedLoadingContentNotification, but completion block is null for index path: %{public}@
Received kMRMediaRemoteApplicationFinishedLoadingContentNotification, beginLoadingPlayableContent API not implemented for index path: %{public}@
Received kMRMediaRemoteApplicationFinishedLoadingContentNotification, beginLoadingPlayableContent API not implemented and null completion block for index path: %{public}@
childItemsDisplayPlaybackProgress API is not implemented
Preparing to fetch if children support playback progress for index path: %{public}@
Fetched children supporting playback progress for index path: %{public}@
Children support playback progress timed out for: %{public}@
now playing identifiers API is not implemented
Preparing to fetch now playing identifiers
Fetched now playing identifiers
Fetching count of children at index path: %@
Completed fetching count of children at index path: %{public}@, number of children: %{public}llu
Fetching children at index path: %{public}@
Completed fetching children at index path: %{public}@
Finishing initial load
Asking MediaRemote to initialize playback for index path: %{public}@
Received kMRMediaRemoteApplicationInitiatedPlaybackOfContentItemNotification
Adding %{public}@ to items dictionary
Updating artwork to %{public}@
Have artwork data, but artwork is nil for %{public}@
Artwork is nil for %{public}@
Content items updated, preparing to find indicies to update
Index was nil for %{public}@
Contents updated for container: %{public}@, indicies: %{public}@
Now Playing Identifiers changed, checking to see what is now playing
Item currently playing. Identifier: %{public}@
Item not currently playing. Identifier: %{public}@
Item currently playing has changed, updating indicies
Indicies invalidated based on now playing identifiers
Starting to refresh for %@
Finishing refresh for %@
Starting to refresh all items, beginning with beginLoadingItem
Begin Loading completed for refreshing all items
Completed invalidation, resetting
Preparing to begin loading item %@
Finished begin loading item %@
Skipping item %@ without identifier
Finished adding items to cache
Cancelling all operations on MCDMediaRemoteSerialQueueManager
Operation is cancelled, not executing
Disabling up next queue; no items in queue.
Disabling up next queue; livestreaming content.
Disabling up next queue for AudioBooks.
Playing content has changed, posting notification
Timeout while waiting for artworkCatalog=%p
Sending reverse seek command
Sending end reverse seek command
Sending skip backwards command
Opening action sheet for like/dislike command
Sending previous item command
Sending stop command
Sending pause command
Sending play command
Sending forward seek command
Sending end forward seek command
Sending skip forward command
Sending forward item command
Retry button pressed
Loading content in tab controller for the first time since app registered
finished loading content after the view appeared, setting tabs
Received MCDPCNowPlayingDidChangeNotificationName
Accessory view already set.
Showing Now Playing button in tab bar
Hiding Now Playing button in tab bar
No Now Playing button hide needed.
Now playing button tapped in tab bar, pushing to Now Playing screen
Some content has invalidated, preparing to reload tab views for container: %{public}@, indicies: %{public}@
Reloading specific tabs since they are invalid for container: %{public}@, indicies: %{public}@
Reloading all host tabs since table views are nil for container: %{public}@, indicies: %{public}@
Tab view not visible for container indicies reload: %{public}@, indicies: %{public}@
No tabs available from host, loading default tabs for %{public}@
Scheduling dummy tab reload for %{public}@
Performing dummy tab reload for %{public}@
Number of tabs returned from client %{public}@: %{public}ld
Refreshing view controller %{public}@ because it is the selected index: %{public}ld
View controller %{public}@ is not selected but is reloaded, begin loading item
Dummy tab, no need to refresh in %{public}@
Reloading tabs after invalidate
Finished reloading tabs after invalidate
Tab selected, reloading content for %{public}@
Examining existing tab bar item and artwork for item: %@
Titles differ; invalidating tab bar item: %@
New image provided; invalidating tab bar item: %@
Repurposing tab bar item and artwork for tab bar item: %@
No existing tab bar item and artwork for item: %@
Creating tab bar item for item: %@, artwork is nil? %@
Adding view controller for tab: %@, artwork is nil? %@
Adding title for tab: %@, artwork is nil? %@
Container finished initial load when viewWillAppear is called, start loading host tabs
viewWillAppear called for MCDBrowsableContentNavigationController, but container isn't finished loading yet
Container finished initial load when viewDidAppear is called, start loading host tabs
viewDidAppear called for MCDBrowsableContentNavigationController, but container isn't finished loading yet
traitCollectionDidChange is called
333333
?333333
MCDBrowsableContentUtilities
MCDBrowsableContentTableViewController
UITableViewDataSource
NSObject
UITableViewDelegate
UIScrollViewDelegate
UIGestureRecognizerDelegate
MCDPCContainerDelegate
MCDErrorViewDelegate
CARSessionObserving
_MCDBrowsableTableView
CarDisplay
MCDPlayableContentNowPlayingDataSource
MCDNowPlayingDataSource
MCDPlayableContentViewController
UINavigationControllerDelegate
_MCDStackItem
MCDNowPlayingViewController
MCDNowPlayingContentManagerDelegate
MCDPCModel
MCDPCItem
MCDPCContainer
MCDMediaRemoteSerialQueueManager
_MCDNowPlayingContentManager
MPRequestResponseControllerDelegate
MCDNowPlayingContentManagerProtocol
CPUINowPlayingViewControllerDataSource
CPUINowPlayingViewControllerDelegate
MCDPlayableContentPlaybackManager
MCDNoContentView
MCDLoadingContentView
MCDErrorLoadingView
MCDGlyph
MCDBrowsableContentNavigationController
UITabBarControllerDelegate
MCDPlayableContentQueueTableViewController
MCDAlertController
T@"MSVTimer",&,N,V_artworkTimer
T#,R
T@"NSIndexPath",R,N,V_indexPath
T#,W,N,VtableCellClass
TB,N,VlimitedUI
T@"<MCDNowPlayingContentManagerDelegate>",W,N,V_delegate
_allowsAlbumArt
T@"<MCDNowPlayingDataSource>",W,N,V_dataSource
_contentManager
T@"CARSessionStatus",&,N,V_carSessionStatus
_itemProperties
T@"MCDMediaRemoteSerialQueueManager",R,N
_performRequest
T@"MCDPCItem",R,N,V_rootItem
_stackToRebuild
T@"MCDPCModel",&,N,V_model
_trackBuffering
T@"MCDPlayableContentPlaybackManager",&,N,V_contentManager
addLayoutGuide:
T@"MPArtworkCatalog",&,N,V_artworkCatalog
alertController
T@"MPCPlayerResponseItem",&,N,V_nowPlayingItem
appName
T@"MPModelPlaylist",R,N
beginLoadingItemWithCompletion:
T@"MPModelPlaylistEntry",R,N
containsObject:
T@"MPModelRadioStation",R,N
endSeek
T@"MPModelSong",R,N
globalItemCount
T@"MPWeakTimer",&,N,V_activityTimer
initWithFrame:bundleIdentifier:
T@"MPWeakTimer",&,N,V_loadingTimer
isMusicCellularStreamingAllowed
T@"NSArray",&,N,V_nowPlayingIdentifiers
jumpByInterval:
T@"NSIndexPath",&,N,V_selectedIndexPath
numberWithLong:
T@"NSMutableDictionary",&,N,V_beginLoadingBlocks
refreshNavigationStackForLaunch
T@"NSMutableDictionary",&,N,V_cachedItemsByIndicies
removeObserver:
T@"NSObject<OS_dispatch_queue>",&,N,V_mediaRemoteItemQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_serialAccessContainerQueue
sectionAtIndex:
T@"NSOperationQueue",&,N,V_mediaRemoteSerialQueue
seeking
T@"NSString",&,N,V_appName
setCachedCount:
T@"NSString",R,C
setFittingSize:
T@"NSString",R,C,N,V_bundleID
setNumberStyle:
T@"NSString",R,N,V_identifier
setPlayerState:
T@"NSString",R,N,V_title
setTag:
T@"UIAlertController",&,N,V_alertController
traitCollection
T@"UIBarButtonItem",&,N,V_backButton
viewWillAppear:
T@"UIBarButtonItem",&,N,V_rightTitleLabelBarButtonItem
willMoveToParentViewController:
T@"UIImage",&,N,V_artworkImage
.cxx_destruct
T@"NSArray",R,N
T#,W,N
T@"UITableView",W,N,V_tableView
T@"<MCDErrorViewDelegate>",W,N,V_delegate
_activityIndicatorBarButtonItem
T@"<MCDNowPlayingContentManagerProtocol>",&,N,V_contentManager
_artworkCatalog
T@"<MCDPCContainerDelegate>",W,N,V_delegate
_isExplicitItem
T@"CPUINowPlayingButtonWrapperView",&,N,V_nowPlayingButtonView
_nowPlayingItem
T@"MCDPCContainer",&,N,V_container
_playableContentPlaybackManager
T@"MCDPCItem",R,W,N,V_rootItem
_totalItemCount
T@"MCDPCModel",R,W,N,V_model
addConstraints:
T@"MCDPlayableContentPlaybackManager",&,N,V_playableContentPlaybackManager
advance
T@"MPCPlayerResponse",&,N,V_lastReceivedResponse
allKeys
T@"MPModelPlaylist",&,N,VcurrentPlayingPlaylist
artwork
T@"MPModelPlaylistEntry",&,N,VcurrentPlayingPlaylistEntry
buttonWithType:
T@"MPModelRadioStation",&,N,VcurrentPlayingRadioStation
dealloc
T@"MPModelSong",&,N,VcurrentPlayingSong
getChildrenSupportsPlaybackProgressForIndexPath:withCompletion:
T@"MPRequestResponseController",&,N,V_requestController
initWithActivityIndicatorStyle:
T@"MPWeakTimer",&,N,V_beginLoadingTimeoutTimer
isEqualToArray:
T@"MPWeakTimer",&,N,V_playbackProgressTimeoutTimer
isProxy
T@"NSData",R,N,V_artworkData
numberWithBool:
T@"NSMutableDictionary",&,N,V_artworkCache
placeholderView
T@"NSMutableDictionary",&,N,V_cachedIndiciesByIdentifier
release
T@"NSMutableDictionary",&,N,V_items
rightTitleLabel
T@"NSObject<OS_dispatch_queue>",&,N,V_mediaRemoteNotificationQueue
section
T@"NSObject<OS_dispatch_queue>",&,N,V_serialQueue
sectionIndexTitlesForTableView:
T@"NSOperationQueue",&,N,V_modelInvalidationQueue
session:didUpdateConfiguration:
T@"NSString",&,N,V_bundleID
setCurrentPlayingPlaylistEntry:
T@"NSString",R,C,N
setMaxConcurrentOperationCount:
T@"NSString",R,N
setPlaybackQueueViewController:
T@"NSString",R,N,V_subtitle
setSerialQueue:
T@"UIActivityIndicatorView",&,N,V_activityIndicator
snapshotViewAfterScreenUpdates:
T@"UIBarButtonItem",&,N,V_activityIndicatorBarButtonItem
viewControllers
T@"UIBarButtonItem",&,N,V_playbackQueueBarButtonItem
visible
T@"UIImage",&,N,V_albumArtwork
wishlistCommand
T@"UILabel",&,N,V_rightTitleLabel
T@"UITabBarController",&,N,V_tabBarController
T@"UITableViewController",&,N,V_playbackQueueViewController
T@"UIView",&,N,V_placeholderView
T@?,C,N,V_containerCompletion
T@?,C,N,V_playbackCompletion
TB,N
TB,N,GisCurrentPlayingApp,V_currentPlayingApp
TB,N,GisSeeking,V_seeking
TB,N,GisVisible,V_visible
TB,N,V_allowsAlbumArt
TB,N,V_currentlyPlaying
TB,N,V_currentlyPlayingApp
TB,N,V_didFinishInitialLoad
TB,N,V_didFinishInitialViewAppear
TB,N,V_handledWillAppear
TB,N,V_hasCarScreen
TB,N,V_hasInvalidatedDummyTabs
TB,N,V_pushToNowPlaying
TB,N,V_shouldEnableNetwork
TB,N,V_shouldShowPlaybackQueue
TB,N,V_showNavigationBar
TB,N,V_trackBuffering
TB,N,V_visible
TB,R,N,V_isCloudItem
TB,R,N,V_isContainer
TB,R,N,V_isExplicitItem
TB,R,N,V_isPlayable
TB,R,N,V_showPlaybackProgress
TI,N,V_supportedAPIMask
TQ,R
Tf,R,N,V_playbackProgress
Tq,N,V_cachedCount
Tq,N,V_playerState
Tq,N,V_playingItemIndex
Tq,N,V_totalItemCount
Tq,R,N
T{CGSize=dd},N,V_imageSize
_MCD_tableView
__supportedDelegateCalls
_accessoryView
_activityIndicator
_activityTimer
_adjustRightTitleLabelToFit
_adjustedIndexPathForPlaybackQueue:
_albumArtwork
_alertActionForFeedbackCommand:fallbackTitle:
_alertController
_appName
_appRegisteredForContent:
_artworkCache
_artworkData
_artworkImage
_artworkTimer
_backButton
_beginLoadingBlocks
_beginLoadingTimeoutTimer
_browsableContentDidRegisterNotification:
_bundleID
_cachedCount
_cachedIndiciesByIdentifier
_cachedItemsByIndicies
_capabilityForKey:
_carScreen
_carSessionStatus
_carSystemFocusColor
_carSystemPrimaryColor
_carSystemSecondaryColor
_clearLoadingActivity
_clearTableViewSelectionAnimated:
_configureCell:forIndexPath:
_container
_containerCompletion
_contentItemsUpdated:
_count
_createRootViewController
_createSectionedRootViewController
_currentPlayingApp
_currentTraitCollection
_currentlyPlaying
_currentlyPlayingApp
_dataSource
_dataSourceInvalidated:
_delayTimer
_delegate
_didFinishInitialLoad
_didFinishInitialViewAppear
_didPushToNowPlayingAtLaunch
_displayErrorAlertController:
_displayLoadingActivity
_errorForNotification:
_finishBeginLoadingNotification:
_finishPlaybackNotification:
_handleHamburgerActionSheet
_handleWillAppear
_handledWillAppear
_hasBrowsableContent
_hasCarScreen
_hasInvalidatedDummyTabs
_hasLoaded
_hasNoBrowsableContent
_hasSectionedContent
_hasTabbedBrowsing
_hostTabAtIndex:dummyTab:
_identifier
_imageSize
_indexPath
_initWithModel:MRContentItem:
_initWithModel:rootItem:indexPath:
_invalidateActivityTimer
_invalidateBeginLoadingTimeoutTimer
_invalidatePlaybackProgressTimeoutTimer
_isCloudItem
_isContainer
_isPlayable
_isRootTableViewController
_itemAtIndexPath:
_items
_jumpBackwardInterval
_jumpForwardInterval
_labelColor
_lastReceivedResponse
_limited
_limitedUIChanged:
_loadAllHostTabs
_loadingTimer
_mediaRemoteItemQueue
_mediaRemoteNotificationQueue
_mediaRemoteSerialQueue
_model
_modelDidInvalidate:
_modelInvalidationQueue
_nowPlayingButton
_nowPlayingButtonTapped:
_nowPlayingButtonView
_nowPlayingDidChange:
_nowPlayingDidChangeNotification:
_nowPlayingIdentifiers
_nowPlayingIdentifiersChanged:
_nowPlayingIdentifiersDidChange:
_numberOfItemsInPlaybackQueue
_performChangeRequest:
_placeholderView
_playbackCompletion
_playbackProgress
_playbackProgressTimeoutTimer
_playbackQueueBarButtonItem
_playbackQueueViewController
_playbackStateChanged:
_playerState
_playingItemIndex
_popViewControllerAnimated
_populateStack
_presentingViewControllerView
_processResponse:error:
_pushToNowPlaying
_pushToNowPlaying:
_registerForClientContent
_registerNotifications
_replacePlaceholderViewWithView:
_requestController
_reselectIndexPath
_rightTitleLabel
_rightTitleLabelBarButtonItem
_rootContainer
_rootItem
_seeking
_selectedIndexPath
_selectedNextIndexPath
_serialAccessContainerQueue
_serialQueue
_sessionAllowsAlbumArt:
_setAccessoryView:
_setChecked:
_setCurrentTraitCollection:
_setupActivityTimer
_setupBeginLoadingTimeoutTimerWithCompletion:
_setupPlaybackProgressTimeoutTimerWithCompletion:
_setupRequest
_setupView
_shouldEnableNetwork
_shouldLimitLists
_shouldShowPlaybackQueue
_shouldShowPlaybackQueueForItemCount:
_showLoadingScreen
_showNavigationBar
_showPlaceholderArtwork
_showPlaybackProgress
_showTimeoutScreen
_skipIntervalButtonImageForInterval:size:
_subtitle
_supportedAPIMask
_systemImageNamed:
_tabBarController
_tabBarItemForViewController:fromItem:
_tableView
_title
_updateBackButton
_updateNowPlayingButtonVisibility
_updateTrackQueueIndex
_visible
accessoryWithCloudIcon
accessoryWithDisclosureIndicator
actionWithTitle:style:handler:
activateConstraints:
activityIndicator
activityIndicatorBarButtonItem
activityTimer
addAction:
addExecutionBlock:
addIndex:
addObject:
addObserver:selector:name:object:
addOperation:
addOperation:cancelAllOperations:
addOperationWithBlock:
addSubview:
addTarget:action:forControlEvents:
ageVerificationState
album
albumArtwork
albumImageWithFallbackForSize:doubleLineRow:
albumTextForNowPlayingController:
alertControllerWithTitle:message:preferredStyle:
allObjects
allowsAlbumArt
animateWithDuration:animations:completion:
anyObject
appTitle
appendFormat:
appendString:
applicationProxyForIdentifier:
applyConfiguration:
array
arrayWithObjects:count:
artist
artistTextForNowPlayingController:
artworkCache
artworkCatalog
artworkData
artworkImage
artworkTimer
autorelease
backButton
backgroundArtForNowPlayingController:
beginAutomaticResponseLoading
beginLoadingBlocks
beginLoadingItem:completion:
beginLoadingItemAtIndexPath:completion:
beginLoadingTimeoutTimer
beginRequestObservation
beginSeekWithDirection:
boldSystemFontOfSize:
boolValue
bottomAnchor
bounds
bundleID
bundleIdentifier
bundleWithIdentifier:
bytes
cachedCount
cachedIndexByIdentifier:
cachedIndiciesByIdentifier
cachedItemForIdentifier:
cachedItemForIndex:
cachedItemsByIndicies
canBecomeFirstResponder
cancelAllOperations
cancelPreviousPerformRequestsWithTarget:selector:object:
cancelledConnectionAttemptOnTransport:
carSessionStatus
car_scaledImageWithSize:
cellForRowAtIndexPath:
cellForTableView:
centerXAnchor
changeItemCommand
changeToItem:
changeValue:
class
colorWithAlphaComponent:
compare:
componentsJoinedByString:
componentsSeparatedByCharactersInSet:
composer
configuration
configurationWithPointSize:weight:scale:
configurationWithText:detailText:image:showExplicit:accessory:showActivityIndicator:showPlaybackProgress:playbackProgress:currentlyPlaying:
configurationWithTextStyle:scale:
conformsToProtocol:
constraintEqualToAnchor:
constraintEqualToAnchor:constant:
constraintEqualToAnchor:multiplier:constant:
constraintEqualToConstant:
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
container
container:didInvalidateIndicies:
containerAtIndex:
containerCompletion
containerDidChangeCount:
containerForItem:
containerForRoot
containerWillChangeCount:
contentManager
contentManager:bufferingItem:
contentManager:displayItemIndex:totalItemCount:
contentManager:itemDidChange:response:
contentManager:presentViewController:
contentManager:processResponse:error:
contentManager:sectionName:
contentManager:shouldShowPlaybackQueue:
contentManagerCompletedAllPlayback:
contentManagerInitiatedPlaybackFromPlaybackQueue:
contentManagerReloadData:
contentScrollView
contentView
controller:defersResponseReplacement:
controller:shouldRetryFailedRequestWithError:
copy
count
countByEnumeratingWithState:objects:count:
currentPlayingApp
currentPlayingPlaylist
currentPlayingPlaylistEntry
currentPlayingRadioStation
currentPlayingSong
currentSession
currentStack
currentlyPlaying
currentlyPlayingApp
customPlaybackControlButtonsForNowPlayingViewController:
dataSource
debugDescription
defaultCenter
defaultManager
delegate
description
deselectRowAtIndexPath:animated:
dictionary
dictionaryWithObjects:forKeys:count:
didFinishInitialLoad
didFinishInitialViewAppear
didFinishLoadingRequestForController:
dislikeCommand
dismissViewControllerAnimated:completion:
domain
doubleValue
drawInRect:
duration
durationSnapshotForNowPlayingViewController:
endAutomaticResponseLoading
endRequestObservation
enumerateIndexesUsingBlock:
enumerateObjectsUsingBlock:
errorViewDidTapButton:
errorWithDomain:code:userInfo:
fetchContentWithCompletion:
firstObject
firstPartyAppBundleIDs
flashScrollIndicators
flattenedGenericObject
floatValue
fontWithDescriptor:size:
frame
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveEvent:
gestureRecognizer:shouldReceivePress:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizerShouldBegin:
getChildrenAtIndexPath:inRange:completion:
getChildrenInRange:completion:
getCountOfChildrenAtIndexPath:withCompletion:
getCountOfChildrenWithCompletion:
getIndexes:
getNowPlayingIdentifiersWithCompletion:
getPlaybackProgressSupportForChildrenWithCompletion:
glyphFactory:pointSize:weight:scale:
handledWillAppear
hasCarScreen
hasInvalidatedDummyTabs
hash
heightAnchor
identifier
imageNamed:ofSize:
imageSize
imageWithData:
imageWithRenderingMode:
imageWithSize:
imageWithSymbolConfiguration:
indexAtPosition:
indexOfObject:
indexPath
indexPathByAddingIndex:
indexPathByRemovingLastIndex
indexPathForCell:
indexPathForGlobalIndex:
indexPathForPreferredFocusedViewInTableView:
indexPathForRow:inSection:
indexPathForSelectedRow
indexPathWithIndexes:length:
indexPathsForSelectedRows
indexPathsForVisibleRows
indexSet
init
initForAutolayout
initWithBarButtonSystemItem:target:action:
initWithBundleID:
initWithBundleID:appName:
initWithBundleID:model:
initWithBundleID:stack:
initWithBundleIdentifier:
initWithBundleIdentifier:dataSource:delegate:
initWithBytes:length:
initWithContainer:
initWithContainer:tabbedBrowsing:
initWithContentManager:
initWithCustomView:
initWithDelegate:dataSource:bundleID:
initWithFrame:
initWithName:object:userInfo:
initWithNibName:bundle:
initWithPlayableBundleID:appName:
initWithProperties:relationships:
initWithTitle:buttonText:
initWithTitle:image:selectedImage:
initWithTitle:subtitle:
initiatePlaybackAtIndexPath:completion:
integerValue
invalidate
invalidateAndReloadTabsWithCompletion:
isAnimating
isArtworkVisuallyIdenticalToCatalog:
isCancelled
isCloudItem
isContainer
isCurrentPlayingApp
isEqual:
isEqualToNumber:
isEqualToString:
isExplicitItem
isExplicitSong
isKindOfClass:
isMemberOfClass:
isPlayable
isSeeking
isValidForRefreshedParent:
isVisible
itemAtIndexPath:
items
itemsFromMRContentItems:
keyEnumerator
lastReceivedResponse
layoutIfNeeded
leadingAnchor
length
likeCommand
limitUserInterfaces
limitableUserInterfaces
limitedUI
loadingTimer
localizedDescription
localizedName
localizedNameForContext:
localizedShortTitle
localizedStringForKey:value:table:
localizedStringWithFormat:
localizedTitle
mediaRemoteItemQueue
mediaRemoteNotificationQueue
mediaRemoteSerialQueue
metadataObject
model
modelInvalidationQueue
modelResponseDidInvalidate:
mutableCopy
name
navigationController
navigationController:animationControllerForOperation:fromViewController:toViewController:
navigationController:didShowViewController:animated:
navigationController:interactionControllerForAnimationController:
navigationController:willShowViewController:animated:
navigationControllerPreferredInterfaceOrientationForPresentation:
navigationControllerSupportedInterfaceOrientations:
navigationItem
newlineCharacterSet
nextItem
nextObject
nowPlayingAlbumArtMode
nowPlayingBundleID
nowPlayingButton
nowPlayingButtonView
nowPlayingIdentifiers
nowPlayingIndicator
nowPlayingItem
nowPlayingViewController:buttonShouldBeActive:
nowPlayingViewController:didSelectButton:
nowPlayingViewController:didSendAction:state:
nowPlayingViewController:shouldDisplayButton:withImage:existingIdentifier:tinted:
nowPlayingViewControllerAddToLibrary:
nowPlayingViewControllerAlbumArtistButtonTapped:
nowPlayingViewControllerCanRepeat:
nowPlayingViewControllerCanShowAddToLibrary:
nowPlayingViewControllerCanShowAlbumArt:
nowPlayingViewControllerCanShowAlbumLink:
nowPlayingViewControllerCanShowChangePlaybackRate:
nowPlayingViewControllerCanShowMore:
nowPlayingViewControllerCanShowUpNext:
nowPlayingViewControllerCanShuffle:
nowPlayingViewControllerChangePlaybackRate:
nowPlayingViewControllerGetPlaybackRate:
nowPlayingViewControllerIsFuseSubscriber:
nowPlayingViewControllerIsPlaying:
nowPlayingViewControllerIsRightHandDrive:
nowPlayingViewControllerIsShowingExplicitTrack:
nowPlayingViewControllerMore:
nowPlayingViewControllerShouldUseMusicExplicitGlyph:
nowPlayingViewControllerToggleRepeat:
nowPlayingViewControllerToggleShuffle:
nowPlayingViewControllerUpNextButtonTapped:
nowPlayingViewControllerWillAppear:
numberOfSections
numberOfSectionsInTableView:
numberWithDouble:
numberWithFloat:
numberWithInteger:
numberWithUnsignedInteger:
object
objectAtIndexedSubscript:
objectEnumerator
objectForKey:
objectForKeyedSubscript:
operationCount
pathWithRoute:bundleID:playerID:
pause
performRequest:completion:
performRequest:options:completion:
performSelector:
performSelector:withObject:
performSelector:withObject:afterDelay:
performSelector:withObject:withObject:
placeholderTypeForNowPlayingViewController:
play
playableContentPlaybackManager
playbackCompletion
playbackProgress
playbackProgressTimeoutTimer
playbackQueueBarButtonItem
playbackQueueViewController
playbackRateCommand
playerPath
playerState
playingItemGlobalIndex
playingItemIndex
playingItemIndexPath
playingItemProperties
playlist
playlistEntry
popToViewController:animated:
popViewControllerAnimated:
postNotificationName:object:
postNotificationName:object:userInfo:
preferredBackwardJumpIntervals
preferredFocusEnvironments
preferredFontDescriptorWithTextStyle:addingSymbolicTraits:options:
preferredForwardJumpIntervals
preferredPlaybackRate
presentViewController:animated:completion:
presentingViewController
previousItem
processArtworkForCurrentlyPlayingSong
propertySetWithProperties:
pushToNowPlaying
pushViewController:animated:
queueItemProperties
queueSectionProperties
radioStation
refreshWithCompletion:
registerClass:forCellReuseIdentifier:
reloadData
reloadRowsAtIndexPaths:withRowAnimation:
reloadTable
reloadWithCompletion:
removeFromSuperview
removeObserver:name:object:
repeatCommand
repeatType
repeatTypeForNowPlayingViewController:
representedBundleID
requestController
requestLabel
respondsToSelector:
response
retain
retainCount
retryButtonPressed:
rightBarButtonItems
rightHandDrive
rightTitleLabelBarButtonItem
rootItem
safeAreaInsets
safeAreaLayoutGuide
scale
screen
scrollViewDidChangeAdjustedContentInset:
scrollViewDidEndDecelerating:
scrollViewDidEndDragging:willDecelerate:
scrollViewDidEndScrollingAnimation:
scrollViewDidEndZooming:withView:atScale:
scrollViewDidScroll:
scrollViewDidScrollToTop:
scrollViewDidZoom:
scrollViewShouldScrollToTop:
scrollViewWillBeginDecelerating:
scrollViewWillBeginDragging:
scrollViewWillBeginZooming:withView:
scrollViewWillEndDragging:withVelocity:targetContentOffset:
secondaryLabelColor
seekCommand
selectedIndex
selectedIndexPath
selectedViewController
self
serialAccessContainerQueue
serialQueue
sessionDidConnect:
sessionDidDisconnect:
setAccessoryView:
setActivityIndicator:
setActivityIndicatorBarButtonItem:
setActivityIndicatorViewStyle:
setActivityTimer:
setAlbumArtwork:
setAlertController:
setAllowsAlbumArt:
setAlpha:
setAppName:
setArtworkCache:
setArtworkCatalog:
setArtworkImage:
setArtworkTimer:
setAutoresizingMask:
setBackButton:
setBackgroundColor:
setBeginLoadingBlocks:
setBeginLoadingTimeoutTimer:
setBundleID:
setCacheIdentifier:forRequestingContext:
setCachedIndiciesByIdentifier:
setCachedItemsByIndicies:
setCarSessionStatus:
setCharge:
setColor:
setContainer:
setContainerCompletion:
setContentManager:
setCount:
setCurrentPlayingApp:
setCurrentPlayingPlaylist:
setCurrentPlayingRadioStation:
setCurrentPlayingSong:
setCurrentlyPlaying:
setCurrentlyPlayingApp:
setDataSource:
setDelegate:
setDestination:configurationBlock:
setDestinationScale:
setDidFinishInitialLoad:
setDidFinishInitialViewAppear:
setFilterType:
setFont:
setFrame:
setHandledWillAppear:
setHasCarScreen:
setHasInvalidatedDummyTabs:
setHidden:
setHidesBackButton:
setImage:
setImageSize:
setItems:
setLabel:
setLastReceivedResponse:
setLevelGuttersColor:
setLimitedUI:
setLineBreakMode:
setLoadingTimer:
setMaximumFractionDigits:
setMediaRemoteItemQueue:
setMediaRemoteNotificationQueue:
setMediaRemoteSerialQueue:
setModel:
setModelInvalidationQueue:
setMusicCellularStreamingAllowed:
setName:
setNavigationBarHidden:
setNavigationBarHidden:animated:
setNeedsLayout
setNowPlayingButtonView:
setNowPlayingIdentifiers:
setNowPlayingItem:
setNumberOfLevels:
setNumberOfLines:
setObject:forKey:
setObject:forKeyedSubscript:
setPauseButtonImageName:
setPlaceholderView:
setPlayButtonImageName:
setPlayableContentPlaybackManager:
setPlaybackCompletion:
setPlaybackProgressTimeoutTimer:
setPlaybackQueueBarButtonItem:
setPlaybackRate:
setPlaybackState:
setPlayerPath:
setPlayingItemIndex:
setPlayingItemProperties:
setPriority:
setPushToNowPlaying:
setQualityOfService:
setQueueItemProperties:
setQueueSectionProperties:
setRemembersLastFocusedIndexPath:
setRequest:
setRequestController:
setRightBarButtonItem:
setRightBarButtonItems:
setRightTitle:
setRightTitleLabel:
setRightTitleLabelBarButtonItem:
setRowHeight:
setScrollEnabled:
setSeeking:
setSelected:
setSelectedIndexPath:
setSerialAccessContainerQueue:
setSessionObserver:
setShouldEnableNetwork:
setShouldShowPlaybackQueue:
setShowNavigationBar:
setShowPlaybackProgress:
setSupportedAPIMask:
setTabBarController:
setTabBarItem:
setTableCellClass:
setTableDataSource:
setTableView:
setText:
setTextAlignment:
setTextColor:
setTintColor:
setTitle:
setTitle:forState:
setTitleView:
setTotalItemCount:
setTrackBuffering:
setTracklistRange:
setTranslatesAutoresizingMaskIntoConstraints:
setUsesGroupingSeparator:
setUsesSignificantDigits:
setViewControllers:
setViewControllers:animated:
setVisible:
setWidth:
sharedInstance
sharedNetworkObserver
shouldEnableNetwork
shouldShowComposer
shouldShowPlaybackQueue
showCurrentlyPlayingIndex
showNavigationBar
showPlaybackProgress
showViewController:sender:
shuffleCommand
shuffleType
shuffleTypeForNowPlayingViewController:
size
sizeToFit
song
stackItemWithContainer:
startAnimating
startedConnectionAttemptOnTransport:
state
stop
stopAnimating
stringFromNumber:
stringFromSeconds:
stringWithFormat:
subtitle
subviews
superclass
superview
supportedAPIMask
supportedPlaybackRates
supportsFocus
systemFontOfSize:
systemImageNamed:compatibleWithTraitCollection:
systemImageNamed:withConfiguration:
tabBar
tabBarController
tabBarController:animationControllerForTransitionFromViewController:toViewController:
tabBarController:didEndCustomizingViewControllers:changed:
tabBarController:didSelectViewController:
tabBarController:interactionControllerForAnimationController:
tabBarController:shouldSelectViewController:
tabBarController:willBeginCustomizingViewControllers:
tabBarController:willEndCustomizingViewControllers:changed:
tabBarControllerPreferredInterfaceOrientationForPresentation:
tabBarControllerSupportedInterfaceOrientations:
tabBarItem
tableBackgroundColor
tableCellClass
tableView
tableView:accessoryButtonTappedForRowWithIndexPath:
tableView:accessoryTypeForRowWithIndexPath:
tableView:canEditRowAtIndexPath:
tableView:canFocusRowAtIndexPath:
tableView:canMoveRowAtIndexPath:
tableView:canPerformAction:forRowAtIndexPath:withSender:
tableView:canPerformPrimaryActionForRowAtIndexPath:
tableView:cellForRowAtIndexPath:
tableView:commitEditingStyle:forRowAtIndexPath:
tableView:contextMenuConfigurationForRowAtIndexPath:point:
tableView:didBeginMultipleSelectionInteractionAtIndexPath:
tableView:didDeselectRowAtIndexPath:
tableView:didEndDisplayingCell:forRowAtIndexPath:
tableView:didEndDisplayingFooterView:forSection:
tableView:didEndDisplayingHeaderView:forSection:
tableView:didEndEditingRowAtIndexPath:
tableView:didFocusRowAtIndexPath:
tableView:didHighlightRowAtIndexPath:
tableView:didSelectRowAtIndexPath:
tableView:didUnhighlightRowAtIndexPath:
tableView:didUpdateFocusInContext:withAnimationCoordinator:
tableView:editActionsForRowAtIndexPath:
tableView:editingStyleForRowAtIndexPath:
tableView:estimatedHeightForFooterInSection:
tableView:estimatedHeightForHeaderInSection:
tableView:estimatedHeightForRowAtIndexPath:
tableView:heightForFooterInSection:
tableView:heightForHeaderInSection:
tableView:heightForRowAtIndexPath:
tableView:indentationLevelForRowAtIndexPath:
tableView:leadingSwipeActionsConfigurationForRowAtIndexPath:
tableView:moveRowAtIndexPath:toIndexPath:
tableView:numberOfRowsInSection:
tableView:performAction:forRowAtIndexPath:withSender:
tableView:performPrimaryActionForRowAtIndexPath:
tableView:previewForDismissingContextMenuWithConfiguration:
tableView:previewForHighlightingContextMenuWithConfiguration:
tableView:sectionForSectionIndexTitle:atIndex:
tableView:selectionFollowsFocusForRowAtIndexPath:
tableView:shouldBeginMultipleSelectionInteractionAtIndexPath:
tableView:shouldHighlightRowAtIndexPath:
tableView:shouldIndentWhileEditingRowAtIndexPath:
tableView:shouldShowMenuForRowAtIndexPath:
tableView:shouldSpringLoadRowAtIndexPath:withContext:
tableView:shouldUpdateFocusInContext:
tableView:targetIndexPathForMoveFromRowAtIndexPath:toProposedIndexPath:
tableView:titleForDeleteConfirmationButtonForRowAtIndexPath:
tableView:titleForFooterInSection:
tableView:titleForHeaderInSection:
tableView:trailingSwipeActionsConfigurationForRowAtIndexPath:
tableView:viewForFooterInSection:
tableView:viewForHeaderInSection:
tableView:willBeginEditingRowAtIndexPath:
tableView:willDeselectRowAtIndexPath:
tableView:willDisplayCell:forRowAtIndexPath:
tableView:willDisplayContextMenuWithConfiguration:animator:
tableView:willDisplayFooterView:forSection:
tableView:willDisplayHeaderView:forSection:
tableView:willEndContextMenuInteractionWithConfiguration:animator:
tableView:willPerformPreviewActionForMenuWithConfiguration:animator:
tableView:willSelectRowAtIndexPath:
tableViewDidEndMultipleSelectionInteraction:
textLabel
timerWithInterval:repeats:block:
title
titleForNowPlayingController:
titleForUpNextInNowPlayingViewController:
titleLabel
topAnchor
totalItemCount
trackBuffering
tracklist
tracksTiledArtworkCatalogWithRows:columns:
trailingAnchor
traitCollectionDidChange:
transportControlView
treatment
type
upNextButtonTapped:
updateRootItemWithCompletion:
updateTitleAndTabBarItemsAtIndexes:
userInfo
userInterfaceIdiom
value
valueForKey:
view
viewDidAppear:
viewDidDisappear:
viewDidLayoutSubviews
viewDidLoad
viewForZoomingInScrollView:
viewWillDisappear
viewWillDisappear:
visibleCells
visibleViewController
widthAnchor
willBeginLoadingRequestForController:
window
zone
@16@0:8
v24@0:8@16
v16@0:8
@"NSArray"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
q32@0:8@16q24
@32@0:8@16@24
q24@0:8@16
@32@0:8@16q24
B32@0:8@16@24
@24@0:8@16
q40@0:8@16@24q32
v40@0:8@16q24@32
v40@0:8@16@24@32
q32@0:8@"UITableView"16q24
@"UITableViewCell"32@0:8@"UITableView"16@"NSIndexPath"24
q24@0:8@"UITableView"16
@"NSString"32@0:8@"UITableView"16q24
B32@0:8@"UITableView"16@"NSIndexPath"24
@"NSArray"24@0:8@"UITableView"16
q40@0:8@"UITableView"16@"NSString"24q32
v40@0:8@"UITableView"16q24@"NSIndexPath"32
v40@0:8@"UITableView"16@"NSIndexPath"24@"NSIndexPath"32
v48@0:8@16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@16B24
v32@0:8@16@24
v40@0:8@16@24d32
v24@0:8@"UIScrollView"16
v48@0:8@"UIScrollView"16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@"UIScrollView"16B24
@"UIView"24@0:8@"UIScrollView"16
v32@0:8@"UIScrollView"16@"UIView"24
v40@0:8@"UIScrollView"16@"UIView"24d32
B24@0:8@"UIScrollView"16
v40@0:8@16@24q32
d32@0:8@16@24
d32@0:8@16q24
q32@0:8@16@24
@40@0:8@16@24@32
B48@0:8@16:24@32@40
v48@0:8@16:24@32@40
B40@0:8@16@24@32
@48@0:8@16@24{CGPoint=dd}32
v40@0:8@"UITableView"16@"UITableViewCell"24@"NSIndexPath"32
v40@0:8@"UITableView"16@"UIView"24q32
d32@0:8@"UITableView"16@"NSIndexPath"24
d32@0:8@"UITableView"16q24
@"UIView"32@0:8@"UITableView"16q24
q32@0:8@"UITableView"16@"NSIndexPath"24
v32@0:8@"UITableView"16@"NSIndexPath"24
@"NSIndexPath"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSString"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSArray"32@0:8@"UITableView"16@"NSIndexPath"24
@"UISwipeActionsConfiguration"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSIndexPath"40@0:8@"UITableView"16@"NSIndexPath"24@"NSIndexPath"32
B48@0:8@"UITableView"16:24@"NSIndexPath"32@40
v48@0:8@"UITableView"16:24@"NSIndexPath"32@40
B32@0:8@"UITableView"16@"UITableViewFocusUpdateContext"24
v40@0:8@"UITableView"16@"UITableViewFocusUpdateContext"24@"UIFocusAnimationCoordinator"32
@"NSIndexPath"24@0:8@"UITableView"16
B40@0:8@"UITableView"16@"NSIndexPath"24@"<UISpringLoadedInteractionContext>"32
v24@0:8@"UITableView"16
@"UIContextMenuConfiguration"48@0:8@"UITableView"16@"NSIndexPath"24{CGPoint=dd}32
@"UITargetedPreview"32@0:8@"UITableView"16@"UIContextMenuConfiguration"24
v40@0:8@"UITableView"16@"UIContextMenuConfiguration"24@"<UIContextMenuInteractionCommitAnimating>"32
v40@0:8@"UITableView"16@"UIContextMenuConfiguration"24@"<UIContextMenuInteractionAnimating>"32
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
B32@0:8@"UIGestureRecognizer"16@"UIEvent"24
v32@0:8@"MCDPCContainer"16@"NSIndexSet"24
v24@0:8@"MCDPCContainer"16
v24@0:8@"MCDErrorLoadingView"16
v24@0:8Q16
v24@0:8@"CARSession"16
v32@0:8@"CARSession"16@"CARSessionConfiguration"24
@28@0:8@16B24
v20@0:8B16
v24@0:8@?16
@"UITableView"
@"CPUINowPlayingButton"
@"NSIndexPath"
@"_UIFilteredDataSource"
@"MPWeakTimer"
@"UIView"
@"NSObject<OS_dispatch_queue>"
@"CARSessionStatus"
@"MCDPCContainer"
@"UIAlertController"
@36@0:8{CGSize=dd}16B32
@32@0:8{CGSize=dd}16
@"MPPropertySet"16@0:8
v36@0:8@16@24B32
Q24@0:8@16
@48@0:8@16q24@32@40
v36@0:8@"UINavigationController"16@"UIViewController"24B32
Q24@0:8@"UINavigationController"16
q24@0:8@"UINavigationController"16
@"<UIViewControllerInteractiveTransitioning>"32@0:8@"UINavigationController"16@"<UIViewControllerAnimatedTransitioning>"24
@"<UIViewControllerAnimatedTransitioning>"48@0:8@"UINavigationController"16q24@"UIViewController"32@"UIViewController"40
@"MCDPCModel"
@"NSString"
@"NSOperationQueue"
v40@0:8@16q24q32
v40@0:8@"_MCDNowPlayingContentManager"16@"MPCPlayerResponse"24@"NSError"32
v28@0:8@"_MCDNowPlayingContentManager"16B24
v24@0:8@"_MCDNowPlayingContentManager"16
v32@0:8@"_MCDNowPlayingContentManager"16@"UIViewController"24
v40@0:8@"_MCDNowPlayingContentManager"16q24q32
v32@0:8@"_MCDNowPlayingContentManager"16@"NSString"24
v40@0:8@"_MCDNowPlayingContentManager"16@"MPModelObject"24@"MPCPlayerResponse"32
@"UITableViewController"
@"<MCDNowPlayingContentManagerProtocol>"
@"UIBarButtonItem"
@"UIActivityIndicatorView"
@"UILabel"
v32@0:8@16@?24
v48@0:8@16{_NSRange=QQ}24@?40
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
@?16@0:8
I16@0:8
v20@0:8I16
@"MCDPCItem"
@"MCDPlayableContentPlaybackManager"
@"NSMutableDictionary"
{CGSize="width"d"height"d}
@32@0:8@16^v24
f16@0:8
@"NSData"
@"UIImage"
q16@0:8
v24@0:8q16
@24@0:8q16
v40@0:8{_NSRange=QQ}16@?32
{?="didInvalidateRootItem"b1"didInvalidateIndicies"b1"willChangeCount"b1"didChangeCount"b1}
@"<MCDPCContainerDelegate>"
v28@0:8@?16B24
v32@0:8@"MPRequestResponseController"16@?<v@?>24
B32@0:8@"MPRequestResponseController"16@"NSError"24
v24@0:8@"MPRequestResponseController"16
v24@0:8#16
@40@0:8@"<MCDNowPlayingContentManagerDelegate>"16@"<MCDNowPlayingDataSource>"24@"NSString"32
@"MPModelSong"16@0:8
@"MPModelPlaylistEntry"16@0:8
@"MPModelPlaylist"16@0:8
@"MPModelRadioStation"16@0:8
{?=dddddffBB}24@0:8@16
@"NSString"24@0:8@"CPUINowPlayingViewController"16
@"UIImage"24@0:8@"CPUINowPlayingViewController"16
B24@0:8@"CPUINowPlayingViewController"16
{?=dddddffBB}24@0:8@"CPUINowPlayingViewController"16
q24@0:8@"CPUINowPlayingViewController"16
B56@0:8@16q24o^@32@40o^B48
B32@0:8@16q24
B56@0:8@"CPUINowPlayingViewController"16q24o^@32@"NSString"40o^B48
B32@0:8@"CPUINowPlayingViewController"16q24
v40@0:8@"CPUINowPlayingViewController"16q24q32
v24@0:8@"CPUINowPlayingViewController"16
@"NSNumber"24@0:8@"CPUINowPlayingViewController"16
@"NSArray"24@0:8@"CPUINowPlayingViewController"16
v32@0:8@"CPUINowPlayingViewController"16@"CPUIMediaButton"24
B24@0:8q16
@"MPModelSong"
@"MPModelPlaylistEntry"
@"MPModelPlaylist"
@"MPModelRadioStation"
@"<MCDNowPlayingContentManagerDelegate>"
@"MPCPlayerResponse"
@"MPCPlayerResponseItem"
@"MPRequestResponseController"
@"MPArtworkCatalog"
@"<MCDNowPlayingDataSource>"
@"MSVTimer"
d16@0:8
@32@0:8d16q24
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"<MCDErrorViewDelegate>"
@48@0:8@16d24q32q40
@32@0:8@16d24
B32@0:8@"UITabBarController"16@"UIViewController"24
v32@0:8@"UITabBarController"16@"UIViewController"24
v32@0:8@"UITabBarController"16@"NSArray"24
v36@0:8@"UITabBarController"16@"NSArray"24B32
Q24@0:8@"UITabBarController"16
q24@0:8@"UITabBarController"16
@"<UIViewControllerInteractiveTransitioning>"32@0:8@"UITabBarController"16@"<UIViewControllerAnimatedTransitioning>"24
@"<UIViewControllerAnimatedTransitioning>"40@0:8@"UITabBarController"16@"UIViewController"24@"UIViewController"32
@28@0:8Q16B24
@"UITabBarController"
@"CPUINowPlayingButtonWrapperView"
