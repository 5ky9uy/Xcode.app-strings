MCDBrowsableContentNowPlayingIdentifiersUpdatedNotification
v8@?0
com.apple.podcasts
nowPlayingIdentifiers
T@"NSArray",&,N,V_nowPlayingIdentifiers
firstPartyAppBundleIDs
T@"NSArray",R,N
MCDBrowsableContentViewControllerQueue
<%@: %p [%@]>
v16@?0I8I12
MusicCarDisplayUI
CarDisplayNowPlayingListGlyph
ERROR_LOADING_ITEM
v16@?0@"NSError"8
v24@?0Q8^B16
v12@?0B8
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
visible
TB,N,GisVisible,V_visible
selectedIndexPath
T@"NSIndexPath",&,N,V_selectedIndexPath
placeholderView
T@"UIView",&,N,V_placeholderView
currentlyPlayingApp
TB,N,V_currentlyPlayingApp
loadingTimer
T@"MPWeakTimer",&,N,V_loadingTimer
alertController
T@"UIAlertController",&,N,V_alertController
pushToNowPlaying
TB,N,V_pushToNowPlaying
container
T@"MCDPCContainer",&,N,V_container
didFinishInitialLoad
TB,N,V_didFinishInitialLoad
didFinishInitialViewAppear
TB,N,V_didFinishInitialViewAppear
overallBarView
T@"UIView",&,N,V_overallBarView
progressBarView
T@"UIView",&,N,V_progressBarView
progress
Td,N,V_progress
overallProgressView
T@"UIView",&,N,V_overallProgressView
currentProgressView
T@"UIView",&,N,V_currentProgressView
shouldResizeCurrentProgress
TB,N,V_shouldResizeCurrentProgress
playbackProgress
Td,N,V_playbackProgress
highlighted
TB,N,V_highlighted
explicitLabel
T@"UILabel",&,N,V_explicitLabel
titleLabel
T@"UILabel",R,N,V_titleLabel
font
T@"UIFont",&,N,V_font
explicitTrack
TB,N,GisExplicitTrack,V_explicitTrack
shouldUseMusicExplicitGlyph
TB,N,V_shouldUseMusicExplicitGlyph
_repeatButton, _moreButton, _shuffleButton, _addToLibraryButton, _playbackRateButton, _leadingGuide, _trailingGuide
H:|[_leadingGuide]
%@[%@(>=%f,<=%f)]
_shuffleButton
_addToLibraryButton
_moreButton
_playbackRateButton
_repeatButton
[_trailingGuide]|
activeButtonLayoutConstraints
T@"NSArray",&,N,V_activeButtonLayoutConstraints
leadingGuide
T@"UILayoutGuide",&,N,V_leadingGuide
trailingGuide
T@"UILayoutGuide",&,N,V_trailingGuide
repeatButton
T@"MCDRepeatButton",R,N,V_repeatButton
moreButton
T@"MCDPlayModeButton",R,N,V_moreButton
shuffleButton
T@"MCDPlayModeButton",R,N,V_shuffleButton
addToLibraryButton
T@"MCDPlayModeButton",R,N,V_addToLibraryButton
playbackRateButton
T@"MCDPlayModeButton",R,N,V_playbackRateButton
fuseSubscriberLayout
TB,N,V_fuseSubscriberLayout
selected
TB,D,N,GisSelected
showBezelInTouch
TB,N,V_showBezelInTouch
showHighlight
TB,N,V_showHighlight
disabledTextColor
T@"UIColor",&,N,V_disabledTextColor
cornerRadius
Td,N,V_cornerRadius
com.apple.Music
com.apple.iBooks
com.apple.MusicApplication
com.apple.Music.CarPlay
carplay
com.apple.Music.LibraryView
com.apple.Music.LibraryView.Albums.Detail
com.apple.Music.LibraryView.Albums
com.apple.Music.LibraryView.Artists
com.apple.Music.LibraryView.Compilations
com.apple.Music.LibraryView.Composers
com.apple.Music.LibraryView.RecentlyAdded
com.apple.Music.LibraryView.Songs
com.apple.Music.LibraryView.Downloaded
com.apple.Music.LibraryView.Loved
com.apple.Music.LibraryView.Genres
com.apple.Music.LibraryView.Playlists
com.apple.Music.LibraryView.Playlists.Detail
com.apple.Music.ForYou
com.apple.Music.Browse
com.apple.Music.Radio
ByArtist
ByTitle
ByPlaylistType
ByLibraryAddedDate
ByLastDevicePlaybackDate
ByAscendingYear
ByDescendingYear
MCDNowPlayingWillAppearNotification
MCDNowPlayingWillDisappearNotification
com.apple.MobileMusicPlayer.MusicCarDisplayUI
CarDisplayAlbumsCell
CarDisplayExplicitGlyph19
CarDisplayExplicitGlyph
PLAYBACK_RATE_SPEED_HALF
PLAYBACK_RATE_SPEED_THREE_QUARTERS
PLAYBACK_RATE_SPEED_ONE_AND_QUARTER
PLAYBACK_RATE_SPEED_ONE_AND_HALF
PLAYBACK_RATE
%d Song(s)
%d Minute(s)
ALBUM_DETAIL_FORMAT_FULL
ROOT
MusicAllowsCellularData
com.apple.mobileipod
com.apple.mobileipod.playbackPreferencesChanged-MusicAllowsCellularData
CarPlay Now Playing Request - Playable Content
com.apple.MusicCarDisplayUI.playableContent.invalidate
modelInvalidationQueue
T@"NSOperationQueue",&,N,V_modelInvalidationQueue
bundleID
T@"NSString",R,C,N,V_bundleID
[%@:%@]
identifier
T@"NSString",R,N,V_identifier
indexPath
T@"NSIndexPath",R,N,V_indexPath
playImage
T@"UIImage",&,N,V_playImage
pauseImage
T@"UIImage",&,N,V_pauseImage
defaultLeftButtonImage
T@"UIImage",&,N,V_defaultLeftButtonImage
defaultFastForwardButtonImage
T@"UIImage",&,N,V_defaultFastForwardButtonImage
containerHeightConstraint
T@"NSLayoutConstraint",&,N,V_containerHeightConstraint
controlStyle
TQ,N,V_controlStyle
buttonSize
T{CGSize=dd},N,V_buttonSize
leftButton
T@"UIButton",R,N,V_leftButton
playPauseButton
T@"UIButton",R,N,V_playPauseButton
fastForwardButton
T@"UIButton",R,N,V_fastForwardButton
progressActive
TB,N,V_progressActive
glyphSize
Td,R,N
playButtonImageName
T@"NSString",&,N,V_playButtonImageName
pauseButtonImageName
T@"NSString",&,N,V_pauseButtonImageName
LIVE_STREAMING
PROGRESS_TIME_WITH_NEGATIVE_PREFIX
durationSnapshot
T{?=dddddffBB},N,V_durationSnapshot
PLAYBACK_QUEUE_TITLE
AppName_PlaybackQueue
POSITION_IN_PLAYLIST_FORMAT
nowPlayingViewController
T@"_MCDNowPlayingViewController",&,N,V_nowPlayingViewController
backButton
T@"UIBarButtonItem",&,N,V_backButton
activityIndicator
T@"UIActivityIndicatorView",&,N,V_activityIndicator
activityIndicatorBarButtonItem
T@"UIBarButtonItem",&,N,V_activityIndicatorBarButtonItem
trackBuffering
TB,N,V_trackBuffering
T@"NSString",&,N,V_bundleID
appName
T@"NSString",&,N,V_appName
activityTimer
T@"MPWeakTimer",&,N,V_activityTimer
rightTitleLabel
T@"UILabel",&,N,V_rightTitleLabel
rightTitleLabelBarButtonItem
T@"UIBarButtonItem",&,N,V_rightTitleLabelBarButtonItem
playbackQueueBarButtonItem
T@"UIBarButtonItem",&,N,V_playbackQueueBarButtonItem
handledWillAppear
TB,N,V_handledWillAppear
shouldShowPlaybackQueue
TB,N,V_shouldShowPlaybackQueue
carSessionStatus
T@"CARSessionStatus",&,N,V_carSessionStatus
contentManager
T@"<MCDNowPlayingContentManagerProtocol>",&,N,V_contentManager
playbackQueueViewController
T@"UITableViewController",&,N,V_playbackQueueViewController
albumViewControllerProvider
T@?,C,N,V_albumViewControllerProvider
showNavigationBar
TB,N,V_showNavigationBar
com.apple.MusicCarDisplayUI.playableContent.mediaRemote
com.apple.MusicCarDisplayUI.playableContent.mediaRemote.items
v12@?0C8
v16@?0^{__CFArray=}8
v16@?0Q8
playableContentPlaybackManager
T@"MCDPlayableContentPlaybackManager",&,N,V_playableContentPlaybackManager
currentPlayingApp
TB,N,GisCurrentPlayingApp,V_currentPlayingApp
playbackCompletion
T@?,C,N,V_playbackCompletion
containerCompletion
T@?,C,N,V_containerCompletion
items
T@"NSMutableDictionary",&,N,V_items
supportedAPIMask
TI,N,V_supportedAPIMask
beginLoadingBlocks
T@"NSMutableDictionary",&,N,V_beginLoadingBlocks
beginLoadingTimeoutTimer
T@"MPWeakTimer",&,N,V_beginLoadingTimeoutTimer
playbackProgressTimeoutTimer
T@"MPWeakTimer",&,N,V_playbackProgressTimeoutTimer
mediaRemoteNotificationQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_mediaRemoteNotificationQueue
mediaRemoteItemQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_mediaRemoteItemQueue
rootItem
T@"MCDPCItem",R,N,V_rootItem
appTitle
T@"NSString",R,N
imageSize
T{CGSize=dd},N,V_imageSize
<%@: %p - (%@) (%@) [%@%@]>
model
T@"MCDPCModel",R,W,N,V_model
contentItem
T^v,N,V_contentItem
currentlyPlaying
TB,N,V_currentlyPlaying
artworkImage
T@"UIImage",&,N,V_artworkImage
title
subtitle
artworkData
T@"NSData",R,N
Tf,R,N
isPlayable
TB,R,N
isContainer
isCloudItem
isExplicitItem
com.apple.MusicCarDisplayUI.playableContent.serialContainerAccess
<%@:%p - [%@:%@] - %@>
v40@?0@"NSArray"8{_NSRange=QQ}16@"NSError"32
v24@?0q8@"NSError"16
v20@?0B8@"NSError"12
v16@?0@"NSArray"8
cachedCount
Tq,N,V_cachedCount
serialAccessContainerQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_serialAccessContainerQueue
cachedIndiciesByIdentifier
T@"NSMutableDictionary",&,N,V_cachedIndiciesByIdentifier
cachedItemsByIndicies
T@"NSMutableDictionary",&,N,V_cachedItemsByIndicies
T@"MCDPCItem",R,W,N,V_rootItem
showPlaybackProgress
TB,R,N,V_showPlaybackProgress
showCurrentlyPlayingIndex
Tq,R,N
delegate
T@"<MCDPCContainerDelegate>",W,N,V_delegate
nowPlayingChange
didInvalidate
didInitiatePlayback
didUpdateContent
appReadyToFetch
item
error
MCDError
com.apple.MCDSerialProcessingQueue
sharedInstance
T@"MCDMediaRemoteSerialQueueManager",R,N
mediaRemoteSerialQueue
T@"NSOperationQueue",&,N,V_mediaRemoteSerialQueue
nowPlayingButton
T@"MCDNowPlayingButton",R,N,V_nowPlayingButton
Pause
Play
BouncingBars
caml
CarNowPlayingBarsPlatter
height
Td,N,V_height
stateName
T@"NSString",C,N,V_stateName
Bars
Platter
v16@?0@"CALayer"8
LKState
LKEventHandler
LKStateAddAnimation
LKStateAddElement
LKStateElement
LKStateRemoveAnimation
LKStateRemoveElement
LKStateSetValue
LKStateSetProperty
LKStateTransition
LKStateTransitionElement
TB,N,GisHighlighted,V_highlighted
General
com.apple.MusicCarDisplay
com.apple.MusicCarPlay
MCDContentItemsChangedNotification
v24@?0@8@"UIImage"16
limitedUI
TB,N
currentPlayingSong
T@"MPModelSong",R,N
currentPlayingPlaylistEntry
T@"MPModelPlaylistEntry",R,N
currentPlayingPlaylist
T@"MPModelPlaylist",R,N
currentPlayingRadioStation
T@"MPModelRadioStation",R,N
tableCellClass
T#,W,N
nowPlayingBundleID
T@"NSString",R,C,N
requestController
T@"MPRequestResponseController",&,N,V_requestController
albumArtwork
T@"UIImage",&,N,V_albumArtwork
artworkCatalog
T@"MPArtworkCatalog",&,N,V_artworkCatalog
dataSource
T@"<MCDNowPlayingDataSource>",W,N,V_dataSource
T@"MPModelSong",&,N,VcurrentPlayingSong
T@"MPModelPlaylistEntry",&,N,VcurrentPlayingPlaylistEntry
T@"MPModelPlaylist",&,N,VcurrentPlayingPlaylist
T@"MPModelRadioStation",&,N,VcurrentPlayingRadioStation
artworkTimer
T@"MSVTimer",&,N,V_artworkTimer
T@"<MCDNowPlayingContentManagerDelegate>",W,N,V_delegate
lastReceivedResponse
T@"MPCPlayerResponse",&,N,V_lastReceivedResponse
tableView
T@"UITableView",W,N,V_tableView
nowPlayingItem
T@"MPCPlayerResponseItem",&,N,V_nowPlayingItem
TB,N,VlimitedUI
T#,W,N,VtableCellClass
v24@?0@"MCDPlayableContentTableViewCell"8@"UIImage"16
line.horizontal.3.decrease.circle
square.fill
play.fill
goforward
gobackward
%@.%@
LIKE_TRACK_DEFAULT_TITLE
DISLIKE_TRACK_DEFAULT_TITLE
CANCEL
v16@?0@"UIAlertAction"8
seeking
TB,N,GisSeeking,V_seeking
T@"MCDPCModel",&,N,V_model
playingItemIndex
Tq,N,V_playingItemIndex
totalItemCount
Tq,N,V_totalItemCount
v24@?0^v8^{__CFError=}16
v12@?0I8
bundleIdentifier
T@"NSString",C,N,V_bundleIdentifier
playbackState
TI,N,V_playbackState
@"UIColor"16@?0@"UITraitCollection"8
CarDisplayCloudIcon
playbackProgressView
T@"UIView",&,N,V_playbackProgressView
artworkImageView
T@"UIImageView",&,N,V_artworkImageView
explicitItemView
T@"UIImageView",&,N,V_explicitItemView
activityIndicatorView
T@"UIActivityIndicatorView",&,N,V_activityIndicatorView
showExplicit
TB,N,GisShowExplicit,V_showExplicit
showCloud
TB,N,GisShowCloud,V_showCloud
showActivityIndicator
TB,N,V_showActivityIndicator
shouldShowPlaybackProgress
TB,N,V_shouldShowPlaybackProgress
TB,N,V_container
artwork
T@"UIImage",&,N,V_artwork
kMCDIdentifierKey
MCD_identifier
T@"NSString",&,N
NO_CONTENT_TITLE
NO_CONTENT_SUBTITLE
LOADING_TITLE
FUSE_TIMEOUT_TITLE
Try Again
T@"<MCDErrorViewDelegate>",W,N,V_delegate
shouldEnableNetwork
TB,N,V_shouldEnableNetwork
shuffle
ellipsis
plus
repeat
repeat.1
pause.fill
backward.fill
forward.fill
checkmark.circle.fill
nowPlayingShuffle
T@"UIImage",R
nowPlayingEllipsis
nowPlayingAdd
nowPlayingRepeat
nowPlayingRepeatOne
com.apple.MusicCarDisplayUI.playableContent.navigationController
tabBarController
T@"UITabBarController",&,N,V_tabBarController
hostTabBarController
T@"UITabBarController",W,N,V_hostTabBarController
nowPlayingButtonView
T@"MCDNowPlayingButtonWrapperView",&,N,V_nowPlayingButtonView
hasCarScreen
TB,N,V_hasCarScreen
TB,N,V_visible
hasInvalidatedDummyTabs
TB,N,V_hasInvalidatedDummyTabs
serialQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_serialQueue
imageView
T@"UIImageView",R,N,V_imageView
image
T@"UIImage",&,N
inputColor
inputAmount
inputRadius
default
inputQuality
inputHardEdges
inputNormalizeEdges
inputDither
CarDisplayMissingArtwork
B24@?0@"UIPress"8^B16
progressView
T@"MCDProgressView",R,N,V_progressView
artworkView
T@"UIImageView",R,N,V_artworkView
knobPressRecognizer
T@"UITapGestureRecognizer",R,N,V_knobPressRecognizer
backPressRecognizer
T@"UITapGestureRecognizer",R,N,V_backPressRecognizer
leftNudgePressRecognizer
T@"UITapGestureRecognizer",&,N,V_leftNudgePressRecognizer
rightNudgePressRecognizer
T@"UITapGestureRecognizer",&,N,V_rightNudgePressRecognizer
leftNudgeLongPressRecognizer
T@"UILongPressGestureRecognizer",&,N,V_leftNudgeLongPressRecognizer
rightNudgeLongPressRecognizer
T@"UILongPressGestureRecognizer",&,N,V_rightNudgeLongPressRecognizer
leftButtonLongPressRecognizer
T@"UILongPressGestureRecognizer",&,N,V_leftButtonLongPressRecognizer
fastForwardButtonLongPressRecognizer
T@"UILongPressGestureRecognizer",&,N,V_fastForwardButtonLongPressRecognizer
controlsFocusContainerGuide
T@"UIFocusContainerGuide",&,N,V_controlsFocusContainerGuide
previousTransportButtonImageIdentifier
T@"NSString",&,N,V_previousTransportButtonImageIdentifier
forwardTransportButtonImageIdentifier
T@"NSString",&,N,V_forwardTransportButtonImageIdentifier
playPauseTransportButtonImageIdentifier
T@"NSString",&,N,V_playPauseTransportButtonImageIdentifier
nowPlayingContentRect
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_nowPlayingContentRect
layoutType
Tq,N,V_layoutType
artworkViewBrick
T@"MCDShadowImageView",R,N,V_artworkViewBrick
topSpacer
T@"UILayoutGuide",&,N,V_topSpacer
bottomSpacer
T@"UILayoutGuide",&,N,V_bottomSpacer
activeConstraints
T@"NSArray",&,N,V_activeConstraints
transportControlView
T@"MCDTransportControlView",R,N,V_transportControlView
playModeControlView
T@"MCDPlayModeControlView",R,N,V_playModeControlView
songDetailsView
T@"MCDSongDetailsView",R,N,V_songDetailsView
T@"<MCDNowPlayingViewControllerDelegate>",W,N,V_delegate
T@"<MCDNowPlayingViewControllerDataSource>",W,N,V_dataSource
albumArtAllowed
TB,N,GisAlbumArtAllowed,V_albumArtAllowed
responderViews
T@"NSArray",&,N,V_responderViews
repeatImage
T@"UIImage",&,N,V_repeatImage
repeatOneImage
T@"UIImage",&,N,V_repeatOneImage
stackView
T@"UIStackView",&,N,V_stackView
infoRect
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_infoRect
isCompactHeight
TB,N,V_isCompactHeight
fontStyle
TQ,N,V_fontStyle
titleView
T@"MCDTitleView",R,N,V_titleView
artistLabel
T@"UILabel",&,N,V_artistLabel
albumArtistLabelButton
T@"MCDLabelButton",R,N,V_albumArtistLabelButton
trackTitle
T@"NSString",&,N,V_trackTitle
albumTitle
T@"NSString",&,N,V_albumTitle
artistName
T@"NSString",&,N,V_artistName
T@"MCDPlayableContentPlaybackManager",&,N,V_contentManager
Posting MCDBrowsableContentNowPlayingIdentifiersUpdatedNotification
Playable Content API implemented? %d
Showing loading screen
Showing timeout screen
Retrying container reload, showing loading screen
Retrying full refresh, showing loading screen
Cell displayed: title: %{public}@, subtitle: %{public}@, showExplicit: %{public}d, showCloud: %{public}d, shouldShowPlaybackProgress: %{public}d, playbackProgress: %{public}f, currentlyPlaying: %{public}d, isContainer: %{public}d
Loading content timed out, displaying error: %{public}@
Selected playable content, preparing to play back
Initiating playback failed due to timeout
Initiating playback failed, displaying error: %{public}@
Initiating playback complete, preparing to push to now playing
Selected container, preparing to push to container
Container preparation complete, pushing to container
Selected neither a container nor a playable cell
Some content have invalidated, preparing to reload table view: %{public}@, indicies: %{public}@
Content was invalidated, but there are no indexes to reload.
Content that has been been invalidated is visible, reloading those index paths in table view: %{public}@, indicies: %{public}@
Content has been invalidated, but view isn't finished loading yet. Container: %{public}@, indicies: %{public}@
The container changed count, preparing to reload
Fetching content for root container
Fetching content for non-root container: %{public}@
No container available to refresh.
Refreshing content complete for container: %{public}@
Root container has content
Root container does not have content
Completed refresh for container %{public}@
Now Playing button tapped in table view, pushing to Now Playing
Pushing to Now Playing view
Loading content in table controller for the first time since app registered
Limited UI changed from %{public}@ to %{public}@
Initializing a new view for bundle: %@
Received kMRMediaRemoteBrowsableContentNowPlayingIdentifiersUpdatedNotification
Rebuilding stack for app launch
Creating view controller for sectioned browsing
Creating view controller for table view browsing
App does not use browsable content API, pushing to now playing
Now Playing view already frontmost when Now Playing app tapped
popping from view controller to Now Playing view
Sending play command since the app supports immediate playback
Show Now Playing view on app foreground
Cancelling extra model invalidation for %{public}@.
Playable content invalidated, refreshing all index paths for %{public}@
Fetched current view controllers to reload after playable content invalidated for %{public}@: %{public}@
Adding MCDBrowsableContentTableViewController after model invalidate
Container is valid for table view
Container isn't valid for refreshed parent for table views
Next view controller is neither a table view nor now playing view when current VC is a table view, which shouldn't be here: %{public}@
Adding MCDBrowsableNavigationController to view controllers after model invalidate for %{public}@
Container is valid for tab bar
Container isn't valid for tab bar
Next view controller is neither a table view nor a now playing view when current VC is a tab bar, which shouldn't be here: %{public}@
Adding now playing view controller for model invalidate for %{public}@
Setting view controllers after model invalidate for %{public}@
current stack: %@
Hiding back button: %d
Row selected in Playback Queue, dismissing Playback Queue screen
All playback completed, dismissing Now Playing screen
%{public}@ is now playing app? %{public}@
Data source invalidated
Posting MCDPCDidInvalidateNotificationName
Content items updated
Content items updated for wrong app, expected %{public}@, got %{public}@
Got content items updated notification, but no updated content items
Posting MCDPCDidUpdateContentNotificationName
Posting MCDPCNowPlayingDidChangeNotificationName
Posting MCDPCAppReadyToFetchNotificationName
beginLoadingPlayableContent API is not implemented
Beginning to load item at index path: %{public}@
beginLoadingPlayableContent API is not implemented, receiving unsupported operation for index path: %{public}@
beginLoadingPlayableContent API error, code: %d
beginLoadingPlayableContent API in progress for %{public}@
beginLoadingPlayableContent API timed out, completion block wasn't called for index path: %{public}@
Received kMRMediaRemoteApplicationFinishedLoadingContentNotification for index path: %{public}@, beginLoadingPlayableContent API error: %{public}@
Received kMRMediaRemoteApplicationFinishedLoadingContentNotification without error for index path: %{public}@
Received kMRMediaRemoteApplicationFinishedLoadingContentNotification with error: %{public}@, but completion block is null for index path: %{public}@
Received kMRMediaRemoteApplicationFinishedLoadingContentNotification, but completion block is null for index path: %{public}@
Received kMRMediaRemoteApplicationFinishedLoadingContentNotification, beginLoadingPlayableContent API not implemented for index path: %{public}@
Received kMRMediaRemoteApplicationFinishedLoadingContentNotification, beginLoadingPlayableContent API not implemented and null completion block for index path: %{public}@
childItemsDisplayPlaybackProgress API is not implemented
Preparing to fetch if children support playback progress for index path: %{public}@
Fetched children supporting playback progress for index path: %{public}@
Children support playback progress timed out for: %{public}@
now playing identifiers API is not implemented
Preparing to fetch now playing identifiers
Fetched now playing identifiers
Fetching count of children at index path: %@
Completed fetching count of children at index path: %{public}@, number of children: %{public}llu
Fetching children at index path: %{public}@
Completed fetching children at index path: %{public}@
Finishing initial load
Asking MediaRemote to initialize playback for index path: %{public}@
Received kMRMediaRemoteApplicationInitiatedPlaybackOfContentItemNotification
Adding %{public}@ to items dictionary
Updating %{public}@ to items dictionary
Updating artwork to %{public}@
Have artwork data, but artwork is nil for %{public}@
Artwork is nil for %{public}@
Content items updated, preparing to find indicies to update
Index was nil for %{public}@
Contents updated for container: %{public}@, indicies: %{public}@
Now Playing Identifiers changed, checking to see what is now playing
Item currently playing. Identifier: %{public}@
Item not currently playing. Identifier: %{public}@
Item currently playing has changed, updating indicies
Indicies invalidated based on now playing identifiers
Starting to refresh for %@
Finishing refresh for %@
Starting to refresh all items, beginning with beginLoadingItem
Begin Loading completed for refreshing all items
Completed invalidation, resetting
Preparing to begin loading item %@
Finished begin loading item %@
Skipping item %@ without identifier
Finished adding items to cache
Cancelling all operations on MCDMediaRemoteSerialQueueManager
Operation is cancelled, not executing
Disabling up next queue; no items in queue.
Disabling up next queue; livestreaming content.
Disabling up next queue for AudioBooks.
Playing content has changed, posting notification
Timeout while waiting for artworkCatalog=%p
Sending reverse seek command
Sending end reverse seek command
Sending skip backwards command
Opening action sheet for like/dislike command
Sending previous item command
Sending stop command
Sending pause command
Sending play command
Sending forward seek command
Sending end forward seek command
Sending skip forward command
Sending forward item command
Retry button pressed
Loading content in tab controller for the first time since app registered
finished loading content after the view appeared, setting tabs
Received MCDPCNowPlayingDidChangeNotificationName
Accessory view already set.
Showing Now Playing button in tab bar
Hiding Now Playing button in tab bar
No Now Playing button hide needed.
Now playing button tapped in tab bar, pushing to Now Playing screen
Some content has invalidated, preparing to reload tab views for container: %{public}@, indicies: %{public}@
Reloading specific tabs since they are invalid for container: %{public}@, indicies: %{public}@
Reloading all host tabs since table views are nil for container: %{public}@, indicies: %{public}@
Tab view not visible for container indicies reload: %{public}@, indicies: %{public}@
No tabs available from host, loading default tabs for %{public}@
Scheduling dummy tab reload for %{public}@
Performing dummy tab reload for %{public}@
Number of tabs returned from client %{public}@: %{public}ld
Refreshing view controller %{public}@ because it is the selected index: %{public}ld
View controller %{public}@ is not selected but is reloaded, begin loading item
Dummy tab, no need to refresh in %{public}@
Reloading tabs after invalidate
Finished reloading tabs after invalidate
Tab selected, reloading content for %{public}@
Examining existing tab bar item and artwork for item: %@
Titles differ; invalidating tab bar item: %@
New image provided; invalidating tab bar item: %@
Repurposing tab bar item and artwork for tab bar item: %@
No existing tab bar item and artwork for item: %@
Creating tab bar item for item: %@, artwork is nil? %@
Adding view controller for tab: %@, artwork is nil? %@
Adding title for tab: %@, artwork is nil? %@
Container finished initial load when viewWillAppear is called, start loading host tabs
viewWillAppear called for MCDBrowsableContentNavigationController, but container isn't finished loading yet
Container finished initial load when viewDidAppear is called, start loading host tabs
viewDidAppear called for MCDBrowsableContentNavigationController, but container isn't finished loading yet
traitCollectionDidChange is called
Shuffle: %d Repeat: %d Show CTA: %d Bookmark: %d Change Playback Rate: %d
Got called to reload Now Playing data, but view is not onscreen so skipping the reload
Tried to resize artwork to size: (%f, %f)
=fff
333333
333333
.@QQQQQQ
?RRRRRR
?||||||
333333
@ffffff
MCDBrowsableContentUtilities
MCDBrowsableContentTableViewController
UITableViewDataSource
NSObject
UITableViewDelegate
UIScrollViewDelegate
UIGestureRecognizerDelegate
MCDPCContainerDelegate
MCDErrorViewDelegate
CARSessionObserving
_MCDBrowsableTableView
MCDProgressBarView
MCDPlaybackProgressView
MCDTitleView
MCDPlayModeControlView
MCDButton
MCDLabelButton
MCDRoundedLabelButton
MCDBarButton
MCDMediaButton
CarDisplay
MCDPlayModeButton
MCDPlayableContentNowPlayingDataSource
MCDNowPlayingDataSource
MCDPlayableContentViewController
UINavigationControllerDelegate
_MCDStackItem
MCDTransportControlView
MCDProgressView
MCDNowPlayingViewController
MCDNowPlayingContentManagerDelegate
MCDPCModel
MCDPCItem
MCDPCContainer
MCDMediaRemoteSerialQueueManager
MCDNowPlayingButtonWrapperView
MCDNowPlayingButton
MCDNowPlayingObserverDelegate
MCDNowPlayingButtonView
CAMLParserDelegate
MCDAdditions
_MCDNowPlayingContentManager
MPRequestResponseControllerDelegate
MCDNowPlayingContentManagerProtocol
MCDNowPlayingViewControllerDataSource
MCDNowPlayingViewControllerDelegate
MCDPlayableContentPlaybackManager
MCDNowPlayingObserver
MCDPlayableContentTableViewCell
MusicCarDisplayAdditions
MCDNoContentView
MCDLoadingContentView
MCDErrorLoadingView
MCDGlyph
MCDBrowsableContentNavigationController
UITabBarControllerDelegate
MCDShadowImageView
_MCDNowPlayingViewController
_MCDNowPlayingHostView
MCDRepeatButton
MCDSongDetailsView
MCDPlayableContentQueueTableViewController
MCDAlertController
init
isEqualToArray:
defaultCenter
postNotificationName:object:
arrayWithObjects:count:
sharedInstance
setNowPlayingIdentifiers:
firstPartyAppBundleIDs
.cxx_destruct
nowPlayingIdentifiers
_nowPlayingIdentifiers
initWithNibName:bundle:
setDelegate:
title
setTitle:
setTableDataSource:
setFilterType:
model
setImageSize:
setSessionObserver:
_limitedUIChanged:
addObserver:selector:name:object:
_nowPlayingDidChange:
indexPath
length
_appRegisteredForContent:
initWithContainer:
removeObserver:
removeObserver:name:object:
setDataSource:
dealloc
container
stringWithFormat:
viewDidLoad
navigationController
viewControllers
count
view
bounds
initWithFrame:
setRowHeight:
reuseIdentifier
registerClass:forCellReuseIdentifier:
setAutoresizingMask:
addSubview:
setRemembersLastFocusedIndexPath:
viewWillAppear:
setNavigationBarHidden:animated:
_clearTableViewSelectionAnimated:
_carScreen
_updateNowPlayingButtonVisibility
setVisible:
viewDidAppear:
setDidFinishInitialViewAppear:
bundleID
flashScrollIndicators
viewWillDisappear:
invalidate
indexPathsForSelectedRows
firstObject
viewDidDisappear:
alertController
dismissViewControllerAnimated:completion:
viewDidLayoutSubviews
frame
setFrame:
isVisible
_showTimeoutScreen
timerWithInterval:repeats:block:
_replacePlaceholderViewWithView:
localizedStringForKey:value:table:
appTitle
localizedStringWithFormat:
initWithTitle:buttonText:
placeholderView
superview
removeFromSuperview
setPlaceholderView:
setScrollEnabled:
safeAreaInsets
reloadWithCompletion:
_showLoadingScreen
traitCollectionDidChange:
traitCollection
userInterfaceIdiom
layoutIfNeeded
navigationItem
setRightBarButtonItem:
preferredFocusEnvironments
cachedItemForIndex:
setAccessoryView:
indexPathForSelectedRow
compare:
setSelected:
setShowActivityIndicator:
isContainer
setContainer:
isPlayable
setSelectionStyle:
textLabel
setText:
subtitle
detailTextLabel
isExplicitItem
setShowExplicit:
isCloudItem
setShowCloud:
showPlaybackProgress
setShouldShowPlaybackProgress:
playbackProgress
setPlaybackProgress:
showCurrentlyPlayingIndex
currentlyPlayingApp
currentlyPlaying
setCurrentlyPlaying:
imageNamed:inBundle:compatibleWithTraitCollection:
artworkImage
setArtwork:
setNeedsLayout
beginLoadingItem:completion:
dequeueReusableCellWithIdentifier:forIndexPath:
_configureCell:forIndexPath:
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
_displayErrorAlertController:
loadingTimer
setLoadingTimer:
setSelectedIndexPath:
indexPathByAddingIndex:
_clearLoadingActivity
domain
isEqualToString:
setPushToNowPlaying:
initiatePlaybackAtIndexPath:completion:
indexAtPosition:
containerAtIndex:
initWithContainer:tabbedBrowsing:
showViewController:sender:
_displayLoadingActivity
performSelector:withObject:afterDelay:
cellForRowAtIndexPath:
localizedDescription
alertControllerWithTitle:message:preferredStyle:
setAlertController:
actionWithTitle:style:handler:
addAction:
presentViewController:animated:completion:
identifier
array
indexPathsForVisibleRows
copy
indexPathForRow:inSection:
containsObject:
addObject:
didFinishInitialLoad
reloadRowsAtIndexPaths:withRowAnimation:
enumerateIndexesUsingBlock:
addOperation:cancelAllOperations:
cachedCount
_shouldLimitLists
reloadTable
selectedIndexPath
cancelPreviousPerformRequestsWithTarget:selector:object:
deselectRowAtIndexPath:animated:
refreshWithCompletion:
reloadData
playableContentPlaybackManager
currentPlayingSong
isCurrentPlayingApp
setCurrentlyPlayingApp:
navigationBar
_nowPlayingButtonTapped:
setBundleIdentifier:
initWithCustomView:
_pushToNowPlaying:
pushToNowPlaying
initWithPlayableBundleID:appName:
setShowNavigationBar:
setDidFinishInitialLoad:
currentSession
limitUserInterfaces
boolValue
configuration
limitableUserInterfaces
numberWithBool:
snapshotViewAfterScreenUpdates:
setAlpha:
animateWithDuration:animations:completion:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
tableView:numberOfRowsInSection:
tableView:cellForRowAtIndexPath:
numberOfSectionsInTableView:
tableView:titleForHeaderInSection:
tableView:titleForFooterInSection:
tableView:canEditRowAtIndexPath:
tableView:canMoveRowAtIndexPath:
sectionIndexTitlesForTableView:
tableView:sectionForSectionIndexTitle:atIndex:
tableView:commitEditingStyle:forRowAtIndexPath:
tableView:moveRowAtIndexPath:toIndexPath:
scrollViewDidScroll:
scrollViewDidZoom:
scrollViewWillBeginDragging:
scrollViewWillEndDragging:withVelocity:targetContentOffset:
scrollViewDidEndDragging:willDecelerate:
scrollViewWillBeginDecelerating:
scrollViewDidEndDecelerating:
scrollViewDidEndScrollingAnimation:
viewForZoomingInScrollView:
scrollViewWillBeginZooming:withView:
scrollViewDidEndZooming:withView:atScale:
scrollViewShouldScrollToTop:
scrollViewDidScrollToTop:
scrollViewDidChangeAdjustedContentInset:
tableView:willDisplayCell:forRowAtIndexPath:
tableView:willDisplayHeaderView:forSection:
tableView:willDisplayFooterView:forSection:
tableView:didEndDisplayingCell:forRowAtIndexPath:
tableView:didEndDisplayingHeaderView:forSection:
tableView:didEndDisplayingFooterView:forSection:
tableView:heightForRowAtIndexPath:
tableView:heightForHeaderInSection:
tableView:heightForFooterInSection:
tableView:estimatedHeightForRowAtIndexPath:
tableView:estimatedHeightForHeaderInSection:
tableView:estimatedHeightForFooterInSection:
tableView:viewForHeaderInSection:
tableView:viewForFooterInSection:
tableView:accessoryTypeForRowWithIndexPath:
tableView:accessoryButtonTappedForRowWithIndexPath:
tableView:shouldHighlightRowAtIndexPath:
tableView:didHighlightRowAtIndexPath:
tableView:didUnhighlightRowAtIndexPath:
tableView:willSelectRowAtIndexPath:
tableView:willDeselectRowAtIndexPath:
tableView:didSelectRowAtIndexPath:
tableView:didDeselectRowAtIndexPath:
tableView:editingStyleForRowAtIndexPath:
tableView:titleForDeleteConfirmationButtonForRowAtIndexPath:
tableView:editActionsForRowAtIndexPath:
tableView:leadingSwipeActionsConfigurationForRowAtIndexPath:
tableView:trailingSwipeActionsConfigurationForRowAtIndexPath:
tableView:shouldIndentWhileEditingRowAtIndexPath:
tableView:willBeginEditingRowAtIndexPath:
tableView:didEndEditingRowAtIndexPath:
tableView:targetIndexPathForMoveFromRowAtIndexPath:toProposedIndexPath:
tableView:indentationLevelForRowAtIndexPath:
tableView:shouldShowMenuForRowAtIndexPath:
tableView:canPerformAction:forRowAtIndexPath:withSender:
tableView:performAction:forRowAtIndexPath:withSender:
tableView:canFocusRowAtIndexPath:
tableView:shouldUpdateFocusInContext:
tableView:didUpdateFocusInContext:withAnimationCoordinator:
indexPathForPreferredFocusedViewInTableView:
tableView:shouldSpringLoadRowAtIndexPath:withContext:
tableView:shouldBeginMultipleSelectionInteractionAtIndexPath:
tableView:didBeginMultipleSelectionInteractionAtIndexPath:
tableViewDidEndMultipleSelectionInteraction:
tableView:contextMenuConfigurationForRowAtIndexPath:point:
tableView:previewForHighlightingContextMenuWithConfiguration:
tableView:previewForDismissingContextMenuWithConfiguration:
tableView:willPerformPreviewActionForMenuWithConfiguration:animator:
gestureRecognizerShouldBegin:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
container:didInvalidateIndicies:
containerWillChangeCount:
containerDidChangeCount:
errorViewDidTapButton:
startedConnectionAttemptOnTransport:
cancelledConnectionAttemptOnTransport:
sessionDidConnect:
sessionDidDisconnect:
session:didUpdateConfiguration:
contentScrollView
tableView:didFocusRowAtIndexPath:
didFinishInitialViewAppear
_tableView
_nowPlayingButton
_count
_selectedNextIndexPath
_dataSource
_reselectIndexPath
_loadingTimer
_delayTimer
_MCD_tableView
_serialQueue
_carSessionStatus
_limited
_hasCarScreen
_hasNoBrowsableContent
_didPushToNowPlayingAtLaunch
_isRootTableViewController
_hasTabbedBrowsing
_visible
_currentlyPlayingApp
_pushToNowPlaying
_didFinishInitialLoad
_didFinishInitialViewAppear
_container
_selectedIndexPath
_placeholderView
_alertController
canBecomeFirstResponder
_labelColor
setBackgroundColor:
overallBarView
layer
setCornerRadius:
setOpacity:
progressBarView
progress
performWithoutAnimation:
layoutSubviews
setProgress:
setOverallBarView:
setProgressBarView:
_overallBarView
_progressBarView
_progress
setProgressViewHighlighted:
setShouldResizeCurrentProgress:
_carSystemFocusPrimaryColor
_carSystemPrimaryColor
currentProgressView
_carSystemFocusSecondaryColor
_carSystemSecondaryColor
overallProgressView
shouldResizeCurrentProgress
sharedApplication
userInterfaceLayoutDirection
bezierPathWithRoundedRect:byRoundingCorners:cornerRadii:
CGPath
setPath:
setMask:
setHighlighted:
highlighted
setOverallProgressView:
setCurrentProgressView:
_highlighted
_shouldResizeCurrentProgress
_playbackProgress
_overallProgressView
_currentProgressView
clearColor
_createLabelWithTextAlignment:
setupConstraints
widthAnchor
constraintEqualToConstant:
addLayoutGuide:
topAnchor
constraintEqualToAnchor:constant:
trailingAnchor
leadingAnchor
firstBaselineAnchor
activateConstraints:
setNeedsUpdateConstraints
_updateExplicitTreatmentString
setFont:
invalidateIntrinsicContentSize
updateConstraints
sizeThatFits:
setConstant:
font
lineHeight
setTranslatesAutoresizingMaskIntoConstraints:
setTextColor:
setTextAlignment:
explicitLabel
setExplicitTrack:
setShouldUseMusicExplicitGlyph:
intrinsicContentSize
titleLabel
isExplicitTrack
shouldUseMusicExplicitGlyph
setExplicitLabel:
_badgeWidthConstraint
_explicitTrack
_shouldUseMusicExplicitGlyph
_font
_titleLabel
_explicitLabel
nowPlayingEllipsis
setImage:forState:
colorWithAlphaComponent:
_flatImageWithColor:
setHidden:
nowPlayingShuffle
nowPlayingAdd
numberWithInt:
setTitle:forState:
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
addConstraint:
constraintEqualToAnchor:
addSizeConstraintsForButton:
_updateButtonLayouts
deactivateConstraints:
shuffleButton
isHidden
addToLibraryButton
moreButton
playbackRateButton
repeatButton
appendString:
constraintsWithVisualFormat:options:metrics:views:
fuseSubscriberLayout
setFuseSubscriberLayout:
activeButtonLayoutConstraints
setActiveButtonLayoutConstraints:
leadingGuide
setLeadingGuide:
trailingGuide
setTrailingGuide:
_fuseSubscriberLayout
_repeatButton
_moreButton
_shuffleButton
_addToLibraryButton
_playbackRateButton
_activeButtonLayoutConstraints
_leadingGuide
_trailingGuide
systemFontOfSize:
setShowsTouchWhenHighlighted:
setAdjustsImageWhenDisabled:
setAdjustsImageWhenHighlighted:
setCharge:
isEnabled
_updateButtonStyle
isSelected
isFocused
setNeedsFocusUpdate
tintColor
canShowHighlight
showHighlight
isHighlighted
tintColorForUnhighlightedTextLabel
showBezelInTouch
setCornerCurve:
focusLayerCornerRadius
addSublayer:
colorForKnobFocusLayer
colorForKnobFocusLayerSelected
shouldUpdateButtonOpacityForKnobUnfocused
updateButtonOpacityForKnobUnfocused
colorForKnobContentSelected
colorForKnobFocused
colorForTouchContentSelected
colorForTouchFocusLayerSelected
colorForTouchFocusLayer
CGColor
imageView
setTintColor:
filterWithType:
setCompositingFilter:
userInterfaceStyle
canBecomeFocused
didUpdateFocusInContext:withAnimationCoordinator:
willMoveToWindow:
setShowBezelInTouch:
setShowHighlight:
_buttonBackGroundColorTouch
_focusColorLayer
_showBezelInTouch
_showHighlight
disabledTextColor
setEnabled:
setDisabledTextColor:
_disabledTextColor
_setContinuousCornerRadius:
_carSystemQuaternaryColor
_carSystemFocusLabelColor
_carSystemFocusColor
cornerRadius
_cornerRadius
artwork
imageWithSize:
albumImageWithFallbackForSize:doubleLineRow:
size
drawInRect:
car_scaledImageWithSize:
bundleWithIdentifier:
_capabilityForKey:
integerValue
supportsFocus
setNumberStyle:
setUsesSignificantDigits:
setMaximumFractionDigits:
setUsesGroupingSeparator:
stringFromNumber:
defaultManager
ageVerificationState
treatment
numberWithDouble:
isEqualToNumber:
tracksTiledArtworkCatalogWithRows:columns:
type
song
album
artist
playlist
subviews
countByEnumeratingWithState:objects:count:
getIndexes:
numberWithUnsignedInteger:
appendFormat:
buttonWithHeight:
addTarget:action:forControlEvents:
initWithBarButtonSystemItem:target:action:
setWidth:
tableBackgroundColor
contentView
boldSystemFontOfSize:
stringFromSeconds:
newlineCharacterSet
componentsSeparatedByCharactersInSet:
componentsJoinedByString:
sharedNetworkObserver
isMusicCellularStreamingAllowed
_currentTraitCollection
_setCurrentTraitCollection:
_focusedCarSystemColor:
propertySetWithProperties:
initWithProperties:relationships:
_itemProperties
playingItemProperties
queueItemProperties
requestLabel
queueSectionProperties
initWithBundleID:
setQualityOfService:
setMaxConcurrentOperationCount:
setName:
_modelDidInvalidate:
_nowPlayingIdentifiersChanged:
initWithBundleID:stack:
_setupView
userInfo
valueForKey:
containerForRoot
setNavigationBarHidden:
initWithBundleID:model:
_populateStack
_createSectionedRootViewController
_createRootViewController
setViewControllers:animated:
visibleViewController
popToViewController:animated:
pushViewController:animated:
modelInvalidationQueue
operationCount
objectAtIndexedSubscript:
isValidForRefreshedParent:
selectedViewController
invalidateAndReloadTabsWithCompletion:
addOperationWithBlock:
objectEnumerator
nextObject
stackItemWithContainer:
navigationController:willShowViewController:animated:
navigationController:didShowViewController:animated:
navigationControllerSupportedInterfaceOrientations:
navigationControllerPreferredInterfaceOrientationForPresentation:
navigationController:interactionControllerForAnimationController:
navigationController:animationControllerForOperation:fromViewController:toViewController:
refreshNavigationStackForLaunch
currentStack
setModelInvalidationQueue:
_model
_rootContainer
_stackToRebuild
_hasBrowsableContent
_hasSectionedContent
_hasLoaded
_bundleID
_modelInvalidationQueue
alloc
_identifier
_indexPath
glyphSize
nowPlayingPauseWithSize:
nowPlayingBackWithSize:
nowPlayingForwardWithSize:
defaultLeftButtonImage
imageWithRenderingMode:
defaultFastForwardButtonImage
heightAnchor
constraintEqualToAnchor:multiplier:
setPriority:
constraintLessThanOrEqualToConstant:
centerYAnchor
centerXAnchor
leftAnchor
rightAnchor
_updateProgressActive
setMCD_identifier:
controlStyle
imageNamed:ofSize:
setPlayImage:
setPauseImage:
setControlStyle:
setButtonSize:
setProgressActive:
_defaultImageForIdentifier:
setPlayButtonImageName:
setPauseButtonImageName:
buttonSize
leftButton
playPauseButton
fastForwardButton
progressActive
playButtonImageName
pauseButtonImageName
setDefaultLeftButtonImage:
setDefaultFastForwardButtonImage:
playImage
pauseImage
containerHeightConstraint
setContainerHeightConstraint:
_progressActive
_controlStyle
_leftButton
_playPauseButton
_fastForwardButton
_playButtonImageName
_pauseButtonImageName
_defaultLeftButtonImage
_defaultFastForwardButtonImage
_playImage
_pauseImage
_containerHeightConstraint
_buttonSize
monospacedDigitSystemFontOfSize:weight:
didMoveToWindow
window
_displayLinkTick:
displayLinkWithTarget:selector:
currentRunLoop
addToRunLoop:forMode:
setPreferredFramesPerSecond:
timeIntervalSinceReferenceDate
_updateLabelsForElapsedTime:duration:
_updateProgressForElapsedTime:duration:
runUntilNextDisplayLinkEvent
pauseDisplayLinkIfNeeded
isPaused
setPaused:
setDurationSnapshot:
durationSnapshot
_timeLabel
_timeRemainingLabel
_liveLabel
_displayLink
_lastTargetTimestamp
_durationSnapshot
initAndWaitUntilSessionUpdated
initWithBundleID:appName:
initWithDelegate:dataSource:bundleID:
setContentManager:
contentManager
initWithContentManager:
setPlaybackQueueViewController:
beginRequestObservation
endRequestObservation
nowPlayingViewController
setNowPlayingViewController:
setTitleView:
_updateBackButton
carSessionStatus
nowPlayingAlbumArtMode
setAlbumArtAllowed:
setRightTitleLabel:
rightTitleLabel
setLineBreakMode:
_adjustRightTitleLabelToFit
initWithActivityIndicatorStyle:
setActivityIndicator:
setActivityIndicatorBarButtonItem:
_setupActivityTimer
setRightTitleLabelBarButtonItem:
buttonWithType:
upNextButtonTapped:
sizeToFit
setPlaybackQueueBarButtonItem:
addChildViewController:
didMoveToParentViewController:
setRightTitle:
shouldShowPlaybackQueue
contentManager:shouldShowPlaybackQueue:
songDetailsView
titleView
albumArtistLabelButton
albumArtistButtonTapped:
playbackQueueViewController
_handleWillAppear
setHandledWillAppear:
viewWillDisappear
setHidesBackButton:
appName
transportControlView
setTrackBuffering:
trackBuffering
activityIndicator
startAnimating
stopAnimating
albumViewControllerProvider
limitedUI
identifiers
library
persistentID
setShouldShowPlaybackQueue:
handledWillAppear
playbackQueueBarButtonItem
rightTitleLabelBarButtonItem
activityIndicatorBarButtonItem
rightBarButtonItems
setRightBarButtonItems:
numberWithLong:
numberWithInteger:
_popViewControllerAnimated
popViewControllerAnimated:
_invalidateActivityTimer
isAnimating
setActivityTimer:
activityTimer
contentManager:processResponse:error:
contentManagerReloadData:
contentManager:presentViewController:
contentManager:bufferingItem:
contentManagerInitiatedPlaybackFromPlaybackQueue:
contentManager:displayItemIndex:totalItemCount:
contentManagerCompletedAllPlayback:
contentManager:sectionName:
contentManager:itemDidChange:response:
willMoveToParentViewController:
showNavigationBar
backButton
setBackButton:
setBundleID:
setAppName:
setCarSessionStatus:
setAlbumViewControllerProvider:
_showNavigationBar
_trackBuffering
_handledWillAppear
_shouldShowPlaybackQueue
_nowPlayingViewController
_backButton
_activityIndicator
_activityIndicatorBarButtonItem
_appName
_activityTimer
_rightTitleLabel
_rightTitleLabelBarButtonItem
_playbackQueueBarButtonItem
_contentManager
_playbackQueueViewController
_albumViewControllerProvider
dictionary
_registerForClientContent
playerPath
setCurrentPlayingApp:
setSupportedAPIMask:
_browsableContentDidRegisterNotification:
_registerNotifications
_dataSourceInvalidated:
_contentItemsUpdated:
_nowPlayingDidChangeNotification:
setItems:
objectForKeyedSubscript:
itemsFromMRContentItems:
postNotificationName:object:userInfo:
applicationProxyForIdentifier:
localizedNameForContext:
localizedName
indexPathWithIndexes:length:
_initWithModel:rootItem:indexPath:
supportedAPIMask
_finishBeginLoadingNotification:
beginLoadingBlocks
setObject:forKeyedSubscript:
initWithName:object:userInfo:
_setupBeginLoadingTimeoutTimerWithCompletion:
numberWithUnsignedInt:
_errorForNotification:
_invalidateBeginLoadingTimeoutTimer
_invalidatePlaybackProgressTimeoutTimer
_setupPlaybackProgressTimeoutTimerWithCompletion:
setPlaybackCompletion:
_finishPlaybackNotification:
playbackCompletion
objectForKey:
mutableCopy
setBeginLoadingTimeoutTimer:
beginLoadingTimeoutTimer
setPlaybackProgressTimeoutTimer:
playbackProgressTimeoutTimer
items
_initWithModel:MRContentItem:
setContentItem:
artworkData
imageWithData:
setArtworkImage:
beginLoadingItemAtIndexPath:completion:
getChildrenSupportsPlaybackProgressForIndexPath:withCompletion:
getNowPlayingIdentifiersWithCompletion:
getCountOfChildrenAtIndexPath:withCompletion:
getChildrenAtIndexPath:inRange:completion:
rootItem
imageSize
setPlayableContentPlaybackManager:
containerCompletion
setContainerCompletion:
setBeginLoadingBlocks:
mediaRemoteNotificationQueue
setMediaRemoteNotificationQueue:
mediaRemoteItemQueue
setMediaRemoteItemQueue:
_currentPlayingApp
_supportedAPIMask
_rootItem
_playableContentPlaybackManager
_playbackCompletion
_containerCompletion
_items
_beginLoadingBlocks
_beginLoadingTimeoutTimer
_playbackProgressTimeoutTimer
_mediaRemoteNotificationQueue
_mediaRemoteItemQueue
_imageSize
contentItem
_contentItem
_currentlyPlaying
_artworkImage
_nowPlayingIdentifiersDidChange:
setCachedCount:
serialAccessContainerQueue
setCachedItemsByIndicies:
setCachedIndiciesByIdentifier:
keyEnumerator
allObjects
indexSet
cachedIndiciesByIdentifier
addIndex:
cachedItemsByIndicies
allKeys
cachedIndexByIdentifier:
indexPathByRemovingLastIndex
getChildrenInRange:completion:
getCountOfChildrenWithCompletion:
getPlaybackProgressSupportForChildrenWithCompletion:
fetchContentWithCompletion:
beginLoadingItemWithCompletion:
containerForItem:
setShowPlaybackProgress:
setCount:
updateRootItemWithCompletion:
cachedItemForIdentifier:
delegate
setSerialAccessContainerQueue:
_showPlaybackProgress
__supportedDelegateCalls
_cachedCount
_delegate
_serialAccessContainerQueue
_cachedIndiciesByIdentifier
_cachedItemsByIndicies
initWithBytes:length:
bytes
mediaRemoteSerialQueue
cancelAllOperations
isCancelled
addExecutionBlock:
addOperation:
setMediaRemoteSerialQueue:
_mediaRemoteSerialQueue
effectiveUserInterfaceLayoutDirection
nowPlayingButton
setHeight:
URLForResource:withExtension:
imageNamed:inBundle:
initWithImage:highlightedImage:
setMasksToBounds:
setUserInteractionEnabled:
addObserver:
initWithCAML:
setContentCompressionResistancePriority:forAxis:
nextFocusedItem
setStateName:
nowPlayingObserver:stateDidChanged:
stateName
height
_nowPlayingView
_focusBackgroundView
_stateName
_height
parser
parseContentsOfURL:
result
setGeometryFlipped:
_handleGlyphLayerDidLoad:
playbackState
initWithLayer:
stateWithName:
setState:ofLayer:
name
hasPrefix:
mcd_enumerateSublayersWithBlock:
_updateColors
setPosition:
setAffineTransform:
begin
commit
setState:ofLayer:transitionSpeed:
mcd_startAnimating
classSubstitions
CAMLParser:resourceForURL:
CAMLParser:didLoadResource:fromURL:
CAMLParser:didFailToLoadResourceFromURL:
CAMLParser:didFailToFindClassWithName:
CAMLParser:evaluateScriptElement:sourceURL:lineNumber:
CAMLParser:evaluateScriptValue:sourceURL:lineNumber:
CAMLParser:formatWarningString:arguments:lineNumber:
CAMLParser:formatErrorString:arguments:lineNumber:
_animatedGlyphLayer
_stateController
_barLayers
_platterLayer
sublayers
setSpeed:
setTimeOffset:
setBeginTime:
_performRequest
requestController
beginAutomaticResponseLoading
endAutomaticResponseLoading
tableCellClass
tableView
setLimitedUI:
_setupRequest
setRequest:
setTracklistRange:
pathWithRoute:bundleID:playerID:
setPlayerPath:
dataSource
setPlayingItemProperties:
setQueueItemProperties:
setQueueSectionProperties:
setLabel:
object
nowPlayingItem
duration
response
setLastReceivedResponse:
lastReceivedResponse
tracklist
playingItemIndexPath
itemAtIndexPath:
setNowPlayingItem:
totalItemCount
_shouldShowPlaybackQueueForItemCount:
setCurrentPlayingPlaylist:
setCurrentPlayingRadioStation:
section
sectionAtIndex:
metadataObject
radioStation
flattenedGenericObject
anyObject
setCurrentPlayingSong:
processArtworkForCurrentlyPlayingSong
playlistEntry
setCurrentPlayingPlaylistEntry:
_processResponse:error:
scale
artworkCatalog
isArtworkVisuallyIdenticalToCatalog:
setArtworkCatalog:
setAlbumArtwork:
setDestinationScale:
setFittingSize:
_showPlaceholderArtwork
setArtworkTimer:
setDestination:configurationBlock:
albumArtwork
isExplicitSong
state
shuffleType
repeatType
shuffleCommand
advance
_performChangeRequest:
repeatCommand
playbackRateCommand
supportedPlaybackRates
nowPlayingViewControllerGetPlaybackRate:
indexOfObject:
floatValue
setPlaybackRate:
preferredPlaybackRate
numberWithFloat:
performRequest:options:completion:
controller:defersResponseReplacement:
controller:shouldRetryFailedRequestWithError:
willBeginLoadingRequestForController:
didFinishLoadingRequestForController:
currentPlayingPlaylistEntry
currentPlayingPlaylist
currentPlayingRadioStation
setTableCellClass:
nowPlayingBundleID
artistTextForNowPlayingController:
albumTextForNowPlayingController:
titleForNowPlayingController:
backgroundArtForNowPlayingController:
nowPlayingViewControllerIsShowingExplicitTrack:
durationSnapshotForNowPlayingViewController:
nowPlayingViewControllerIsPlaying:
shuffleTypeForNowPlayingViewController:
repeatTypeForNowPlayingViewController:
likedForNowPlayingViewController:
nowPlayingViewController:shouldDisplayButton:withImage:existingIdentifier:tinted:
nowPlayingViewController:buttonShouldBeActive:
nowPlayingViewController:didSendAction:state:
nowPlayingViewControllerCanShuffle:
nowPlayingViewControllerToggleShuffle:
nowPlayingViewControllerCanRepeat:
nowPlayingViewControllerToggleRepeat:
nowPlayingViewControllerCanShowAddToLibrary:
nowPlayingViewControllerAddToLibrary:
nowPlayingViewControllerIsFuseSubscriber:
nowPlayingViewControllerCanShowAlbumLink:
nowPlayingViewControllerCanShowChangePlaybackRate:
nowPlayingViewControllerChangePlaybackRate:
nowPlayingViewControllerCanShowMore:
nowPlayingViewControllerMore:
setTableView:
modelResponseDidInvalidate:
setRequestController:
artworkTimer
_requestController
_albumArtwork
_artworkCatalog
_artworkTimer
_lastReceivedResponse
_nowPlayingItem
numberOfSections
_itemAtIndexPath:
_numberOfItemsInPlaybackQueue
_updateTrackQueueIndex
indexPathForGlobalIndex:
playingItemGlobalIndex
globalItemCount
playingItemIndex
_adjustedIndexPathForPlaybackQueue:
screen
setCacheIdentifier:forRequestingContext:
changeItemCommand
changeToItem:
performRequest:completion:
seekCommand
preferredForwardJumpIntervals
doubleValue
preferredBackwardJumpIntervals
_jumpBackwardInterval
_skipIntervalButtonImageForInterval:size:
previousItem
likeCommand
dislikeCommand
value
stop
pause
_jumpForwardInterval
nextItem
isSeeking
beginSeekWithDirection:
setSeeking:
endSeek
jumpByInterval:
_handleHamburgerActionSheet
play
_alertActionForFeedbackCommand:fallbackTitle:
localizedShortTitle
localizedTitle
changeValue:
_setChecked:
wishlistCommand
setModel:
setPlayingItemIndex:
setTotalItemCount:
_seeking
_playingItemIndex
_totalItemCount
bundleIdentifier
unsignedIntegerValue
setPlaybackState:
queryPlaybackState
_notifyObservers
initWithOptions:capacity:
removeObject:
playbackStateChanged:
_observers
_playbackState
_bundleIdentifier
isMainThread
initWithStyle:reuseIdentifier:
setHighlightedTextColor:
colorWithRed:green:blue:alpha:
colorWithDynamicProvider:
setHighlighted:animated:
playbackProgressView
setAccessoryType:
_setCloudAccessoryView:
explicitItemView
setExplicitItemView:
setActivityIndicatorView:
activityIndicatorView
isShowCloud
pointSize
playbackProgressCompleteWithSize:
setSeparatorInset:
artworkImageView
setArtworkImageView:
_updatePlayingArtworkIfNeeded
setContentMode:
setImage:
setClipsToBounds:
imageWithTintColor:
setHighlightedImage:
shouldShowPlaybackProgress
setPlaybackProgressView:
text
isShowExplicit
_setExplicitView:
layoutMargins
accessoryView
nextFocusedView
previouslyFocusedView
showActivityIndicator
_showExplicit
_showCloud
_showActivityIndicator
_shouldShowPlaybackProgress
_artwork
_playbackProgressView
_artworkImageView
_explicitItemView
_activityIndicatorView
MCD_identifier
initWithTitle:subtitle:
initForAutolayout
setNumberOfLines:
safeAreaLayoutGuide
addConstraints:
setColor:
setActivityIndicatorViewStyle:
constraintEqualToAnchor:multiplier:constant:
bottomAnchor
retryButtonPressed:
shouldEnableNetwork
setShouldEnableNetwork:
_shouldEnableNetwork
preferredFontDescriptorWithTextStyle:addingSymbolicTraits:options:
fontWithDescriptor:size:
configurationWithPointSize:weight:scale:
systemImageNamed:compatibleWithTraitCollection:
imageWithSymbolConfiguration:
glyphFactory:pointSize:weight:scale:
nowPlayingRepeat
nowPlayingRepeatOne
visible
_loadAllHostTabs
_accessoryView
tabBar
_setAccessoryView:
updateTitleAndTabBarItemsAtIndexes:
hasInvalidatedDummyTabs
setHasInvalidatedDummyTabs:
selectedIndex
_hostTabAtIndex:dummyTab:
setViewControllers:
tabBarItem
initWithTitle:image:selectedImage:
_tabBarItemForViewController:fromItem:
setTabBarItem:
setHasCarScreen:
tabBarController:shouldSelectViewController:
tabBarController:didSelectViewController:
tabBarController:willBeginCustomizingViewControllers:
tabBarController:willEndCustomizingViewControllers:changed:
tabBarController:didEndCustomizingViewControllers:changed:
tabBarControllerSupportedInterfaceOrientations:
tabBarControllerPreferredInterfaceOrientationForPresentation:
tabBarController:interactionControllerForAnimationController:
tabBarController:animationControllerForTransitionFromViewController:toViewController:
tabBarController
setTabBarController:
hostTabBarController
setHostTabBarController:
nowPlayingButtonView
setNowPlayingButtonView:
hasCarScreen
serialQueue
setSerialQueue:
_hasInvalidatedDummyTabs
_tabBarController
_hostTabBarController
_nowPlayingButtonView
initWithImage:
setupEffects
contentMode
setShadowColor:
setShadowOpacity:
setShadowRadius:
setShadowOffset:
image
_imageView
isViewLoaded
updateLayoutStyle
_repeatButtonTouchUp:
_shuffleButtonTouchUp:
_moreButtonTouchUp:
_addToLibraryButtonTouchUp:
_playbackButtonTouchUp:
addTarget:action:forEvents:
setResponderViews:
_leftNudgePress:
initWithTarget:action:
setLeftNudgePressRecognizer:
leftNudgePressRecognizer
setAllowedPressTypes:
addGestureRecognizer:
_rightNudgePress:
setRightNudgePressRecognizer:
rightNudgePressRecognizer
_leftButtonLongPress:
setLeftNudgeLongPressRecognizer:
leftNudgeLongPressRecognizer
requireGestureRecognizerToFail:
_fastForwardButtonLongPress:
setRightNudgeLongPressRecognizer:
rightNudgeLongPressRecognizer
controlsFocusContainerGuide
setView:
_updateBackgroundEffect
_initializeTransportControls
_recalculateLayout:
_showsButtonSelectionsForTouch
updateViewConstraints
layoutType
activeConstraints
constraintsForLayoutType:
setActiveConstraints:
artworkViewBrick
isCompactHeight
updatePlayControls
layoutMarginsGuide
layoutFrame
innerSpacing
constraintGreaterThanOrEqualToAnchor:
constraintLessThanOrEqualToAnchor:
constraintLessThanOrEqualToAnchor:constant:
constraintGreaterThanOrEqualToAnchor:constant:
bottomPadding
playModeControlView
topPadding
constraintGreaterThanOrEqualToConstant:
topSpacer
setTopSpacer:
bottomSpacer
setBottomSpacer:
_artBrickScale
layoutDirection
addObjectsFromArray:
setObject:forKey:
setBarStyle:
_updateTransportControl:withDefaultImage:actionType:
_updatePlayModesState
setValue:forKey:
setFilters:
setShouldRasterize:
_updateShuffleStateWithType:
_updateRepeatStateWithType:
_updatePlaybackRate
setRepeatType:
setTrackTitle:
setAlbumTitle:
setArtistName:
_imageWithSize:
_sendAction:withState:
_respondToHeldAction
_sendHeldAction
_playPauseButtonTouchDown:
_playPauseButtonTouchUp:
_leftButtonTouchDown:
_leftButtonTouchUp:
_fastForwardButtonTouchDown:
_fastForwardButtonTouchUp:
setLeftButtonLongPressRecognizer:
leftButtonLongPressRecognizer
setFastForwardButtonLongPressRecognizer:
fastForwardButtonLongPressRecognizer
objectsPassingTest:
pressesBegan:withEvent:
pressesChanged:withEvent:
pressesEnded:withEvent:
pressesCancelled:withEvent:
updateLayoutStyle:
isAlbumArtAllowed
isCompactWidth
setNowPlayingLayout:forceChange:
nowPlayingContentRect
setLayoutType:
layoutStyleDidChange
setFontStyle:
displayScale
_invalidateConstraintCache
_didUpdateSupportedCommandsNotification:
progressView
artworkView
knobPressRecognizer
backPressRecognizer
setControlsFocusContainerGuide:
previousTransportButtonImageIdentifier
setPreviousTransportButtonImageIdentifier:
forwardTransportButtonImageIdentifier
setForwardTransportButtonImageIdentifier:
playPauseTransportButtonImageIdentifier
setPlayPauseTransportButtonImageIdentifier:
setNowPlayingContentRect:
_heldAction
_navigationBar
_navbarColor
_scale
_contentAspectRatio
_navbarHidesShadow
_highTouchMode
_needsUpdate
_needsConstraintUpdate
_constraintCache
_albumArtAllowed
_transportControlView
_playModeControlView
_songDetailsView
_progressView
_artworkView
_knobPressRecognizer
_backPressRecognizer
_leftNudgePressRecognizer
_rightNudgePressRecognizer
_leftNudgeLongPressRecognizer
_rightNudgeLongPressRecognizer
_leftButtonLongPressRecognizer
_fastForwardButtonLongPressRecognizer
_controlsFocusContainerGuide
_previousTransportButtonImageIdentifier
_forwardTransportButtonImageIdentifier
_playPauseTransportButtonImageIdentifier
_layoutType
_artworkViewBrick
_topSpacer
_bottomSpacer
_activeConstraints
_nowPlayingContentRect
responderViews
_responderViews
repeatOneImage
repeatImage
setRepeatImage:
setRepeatOneImage:
_repeatImage
_repeatOneImage
setAxis:
setAlignment:
setDistribution:
addArrangedSubview:
setTitleColor:forState:
setTintAdjustmentMode:
_preferredHeight
infoRect
setInfoRect:
setIsCompactHeight:
_updateFont
artistLabel
setSpacing:
preferredFontForTextStyle:compatibleWithTraitCollection:
fontDescriptor
fontDescriptorWithSymbolicTraits:
fontStyle
setArtistLabel:
trackTitle
albumTitle
artistName
stackView
setStackView:
_isCompactHeight
_fontStyle
_titleView
_artistLabel
_albumArtistLabelButton
_trackTitle
_albumTitle
_artistName
_stackView
_infoRect
presentingViewController
_presentingViewControllerView
@16@0:8
v24@0:8@16
v16@0:8
@"NSArray"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
q32@0:8@16q24
@32@0:8@16@24
q24@0:8@16
@32@0:8@16q24
B32@0:8@16@24
@24@0:8@16
q40@0:8@16@24q32
v40@0:8@16q24@32
v40@0:8@16@24@32
q32@0:8@"UITableView"16q24
@"UITableViewCell"32@0:8@"UITableView"16@"NSIndexPath"24
q24@0:8@"UITableView"16
@"NSString"32@0:8@"UITableView"16q24
B32@0:8@"UITableView"16@"NSIndexPath"24
@"NSArray"24@0:8@"UITableView"16
q40@0:8@"UITableView"16@"NSString"24q32
v40@0:8@"UITableView"16q24@"NSIndexPath"32
v40@0:8@"UITableView"16@"NSIndexPath"24@"NSIndexPath"32
v48@0:8@16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@16B24
v32@0:8@16@24
v40@0:8@16@24d32
v24@0:8@"UIScrollView"16
v48@0:8@"UIScrollView"16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@"UIScrollView"16B24
@"UIView"24@0:8@"UIScrollView"16
v32@0:8@"UIScrollView"16@"UIView"24
v40@0:8@"UIScrollView"16@"UIView"24d32
B24@0:8@"UIScrollView"16
v40@0:8@16@24q32
d32@0:8@16@24
d32@0:8@16q24
q32@0:8@16@24
@40@0:8@16@24@32
B48@0:8@16:24@32@40
v48@0:8@16:24@32@40
B40@0:8@16@24@32
@48@0:8@16@24{CGPoint=dd}32
v40@0:8@"UITableView"16@"UITableViewCell"24@"NSIndexPath"32
v40@0:8@"UITableView"16@"UIView"24q32
d32@0:8@"UITableView"16@"NSIndexPath"24
d32@0:8@"UITableView"16q24
@"UIView"32@0:8@"UITableView"16q24
q32@0:8@"UITableView"16@"NSIndexPath"24
v32@0:8@"UITableView"16@"NSIndexPath"24
@"NSIndexPath"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSString"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSArray"32@0:8@"UITableView"16@"NSIndexPath"24
@"UISwipeActionsConfiguration"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSIndexPath"40@0:8@"UITableView"16@"NSIndexPath"24@"NSIndexPath"32
B48@0:8@"UITableView"16:24@"NSIndexPath"32@40
v48@0:8@"UITableView"16:24@"NSIndexPath"32@40
B32@0:8@"UITableView"16@"UITableViewFocusUpdateContext"24
v40@0:8@"UITableView"16@"UITableViewFocusUpdateContext"24@"UIFocusAnimationCoordinator"32
@"NSIndexPath"24@0:8@"UITableView"16
B40@0:8@"UITableView"16@"NSIndexPath"24@"<UISpringLoadedInteractionContext>"32
v24@0:8@"UITableView"16
@"UIContextMenuConfiguration"48@0:8@"UITableView"16@"NSIndexPath"24{CGPoint=dd}32
@"UITargetedPreview"32@0:8@"UITableView"16@"UIContextMenuConfiguration"24
v40@0:8@"UITableView"16@"UIContextMenuConfiguration"24@"<UIContextMenuInteractionCommitAnimating>"32
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
v32@0:8@"MCDPCContainer"16@"NSIndexSet"24
v24@0:8@"MCDPCContainer"16
v24@0:8@"MCDErrorLoadingView"16
v24@0:8Q16
v24@0:8@"CARSession"16
v32@0:8@"CARSession"16@"CARSessionConfiguration"24
@28@0:8@16B24
v20@0:8B16
v24@0:8@?16
@"UITableView"
@"MCDNowPlayingButton"
@"NSIndexPath"
@"_UIFilteredDataSource"
@"MPWeakTimer"
@"UIView"
@"NSObject<OS_dispatch_queue>"
@"CARSessionStatus"
@"MCDPCContainer"
@"UIAlertController"
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v24@0:8d16
d16@0:8
{CGSize=dd}16@0:8
@24@0:8q16
@"NSLayoutConstraint"
@"UIFont"
@"UILabel"
@"MCDRepeatButton"
@"MCDPlayModeButton"
@"UILayoutGuide"
@"CALayer"
@"UIColor"
@36@0:8{CGSize=dd}16B32
@32@0:8{CGSize=dd}16
@"MPPropertySet"16@0:8
v36@0:8@16@24B32
Q24@0:8@16
@48@0:8@16q24@32@40
v36@0:8@"UINavigationController"16@"UIViewController"24B32
Q24@0:8@"UINavigationController"16
q24@0:8@"UINavigationController"16
@"<UIViewControllerInteractiveTransitioning>"32@0:8@"UINavigationController"16@"<UIViewControllerAnimatedTransitioning>"24
@"<UIViewControllerAnimatedTransitioning>"48@0:8@"UINavigationController"16q24@"UIViewController"32@"UIViewController"40
@"MCDPCModel"
@"NSString"
@"NSOperationQueue"
v32@0:8{CGSize=dd}16
@"UIButton"
@"UIImage"
{CGSize="width"d"height"d}
v72@0:8{?=dddddffBB}16
v32@0:8d16d24
{?=dddddffBB}16@0:8
@"MCDProgressBarView"
@"CADisplayLink"
{?="snapshotTime"d"startTime"d"endTime"d"duration"d"elapsedDuration"d"rate"f"defaultRate"f"isLiveContent"B"isLoading"B}
v40@0:8@16q24q32
v40@0:8@"_MCDNowPlayingContentManager"16@"MPCPlayerResponse"24@"NSError"32
v28@0:8@"_MCDNowPlayingContentManager"16B24
v24@0:8@"_MCDNowPlayingContentManager"16
v32@0:8@"_MCDNowPlayingContentManager"16@"UIViewController"24
v40@0:8@"_MCDNowPlayingContentManager"16q24q32
v32@0:8@"_MCDNowPlayingContentManager"16@"NSString"24
v40@0:8@"_MCDNowPlayingContentManager"16@"MPModelObject"24@"MPCPlayerResponse"32
@?16@0:8
@"_MCDNowPlayingViewController"
@"UIBarButtonItem"
@"UIActivityIndicatorView"
@"<MCDNowPlayingContentManagerProtocol>"
@"UITableViewController"
v32@0:8@16@?24
v48@0:8@16{_NSRange=QQ}24@?40
I16@0:8
v20@0:8I16
@"MCDPCItem"
@"MCDPlayableContentPlaybackManager"
@"NSMutableDictionary"
@32@0:8@16^v24
f16@0:8
v24@0:8^v16
^v16@0:8
q16@0:8
v24@0:8q16
v40@0:8{_NSRange=QQ}16@?32
{?="didInvalidateRootItem"b1"didInvalidateIndicies"b1"willChangeCount"b1"didChangeCount"b1}
@"<MCDPCContainerDelegate>"
v28@0:8@?16B24
@24@0:8d16
v28@0:8@"MCDNowPlayingObserver"16B24
@"MCDNowPlayingButtonView"
@"UIImageView"
#32@0:8@16@24
v44@0:8@16@24@32I40
@44@0:8@16@24@32I40
v48@0:8@16r*24[1{__va_list_tag=II^v^v}]32Q40
@32@0:8@"CAMLParser"16@"NSURL"24
v40@0:8@"CAMLParser"16@24@"NSURL"32
#32@0:8@"CAMLParser"16@"NSString"24
v44@0:8@"CAMLParser"16@"NSString"24@"NSURL"32I40
@44@0:8@"CAMLParser"16@"NSString"24@"NSURL"32I40
v48@0:8@"CAMLParser"16r*24[1{__va_list_tag=II^v^v}]32Q40
@"CAStateController"
@"NSMutableArray"
v32@0:8@"MPRequestResponseController"16@?<v@?>24
B32@0:8@"MPRequestResponseController"16@"NSError"24
v24@0:8@"MPRequestResponseController"16
v24@0:8#16
@40@0:8@"<MCDNowPlayingContentManagerDelegate>"16@"<MCDNowPlayingDataSource>"24@"NSString"32
@"MPModelSong"16@0:8
@"MPModelPlaylistEntry"16@0:8
@"MPModelPlaylist"16@0:8
@"MPModelRadioStation"16@0:8
{?=dddddffBB}24@0:8@16
@"NSString"24@0:8@"_MCDNowPlayingViewController"16
@"UIImage"24@0:8@"_MCDNowPlayingViewController"16
B24@0:8@"_MCDNowPlayingViewController"16
{?=dddddffBB}24@0:8@"_MCDNowPlayingViewController"16
q24@0:8@"_MCDNowPlayingViewController"16
B56@0:8@16q24o^@32@40o^B48
B32@0:8@16q24
B56@0:8@"_MCDNowPlayingViewController"16q24o^@32@"NSString"40o^B48
B32@0:8@"_MCDNowPlayingViewController"16q24
v40@0:8@"_MCDNowPlayingViewController"16q24q32
v24@0:8@"_MCDNowPlayingViewController"16
@"NSNumber"24@0:8@"_MCDNowPlayingViewController"16
B24@0:8q16
@"MPModelSong"
@"MPModelPlaylistEntry"
@"MPModelPlaylist"
@"MPModelRadioStation"
@"MPRequestResponseController"
@"MPArtworkCatalog"
@"<MCDNowPlayingDataSource>"
@"MSVTimer"
@"<MCDNowPlayingContentManagerDelegate>"
@"MPCPlayerResponse"
@"MPCPlayerResponseItem"
@32@0:8d16q24
@"NSHashTable"
@32@0:8q16@24
v24@0:8B16B20
@"<MCDErrorViewDelegate>"
@48@0:8@16d24q32q40
@32@0:8@16d24
B32@0:8@"UITabBarController"16@"UIViewController"24
v32@0:8@"UITabBarController"16@"UIViewController"24
v32@0:8@"UITabBarController"16@"NSArray"24
v36@0:8@"UITabBarController"16@"NSArray"24B32
Q24@0:8@"UITabBarController"16
q24@0:8@"UITabBarController"16
@"<UIViewControllerInteractiveTransitioning>"32@0:8@"UITabBarController"16@"<UIViewControllerAnimatedTransitioning>"24
@"<UIViewControllerAnimatedTransitioning>"40@0:8@"UITabBarController"16@"UIViewController"24@"UIViewController"32
@28@0:8Q16B24
@"UITabBarController"
@"MCDNowPlayingButtonWrapperView"
v32@0:8q16q24
v28@0:8q16B24
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"UINavigationBar"
@"MCDTransportControlView"
@"MCDPlayModeControlView"
@"MCDSongDetailsView"
@"<MCDNowPlayingViewControllerDelegate>"
@"<MCDNowPlayingViewControllerDataSource>"
@"MCDProgressView"
@"UITapGestureRecognizer"
@"UILongPressGestureRecognizer"
@"UIFocusContainerGuide"
@"MCDShadowImageView"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@"MCDTitleView"
@"MCDLabelButton"
@"UIStackView"
