MCDBrowsableContentNowPlayingIdentifiersUpdatedNotification
v8@?0
com.apple.podcasts
MCDBrowsableContentViewControllerQueue
<%@: %p [%@]>
v16@?0I8I12
MusicCarDisplayUI
ERROR_LOADING_ITEM
v16@?0@"NSError"8
v24@?0Q8^B16
v32@?0@"CPUITableCell"8Q16^B24
v12@?0B8
com.apple.Music
com.apple.iBooks
com.apple.MusicApplication
com.apple.Music.CarPlay
carplay
com.apple.Music.LibraryView
com.apple.Music.LibraryView.Albums.Detail
com.apple.Music.LibraryView.Albums
com.apple.Music.LibraryView.Artists
com.apple.Music.LibraryView.Compilations
com.apple.Music.LibraryView.Composers
com.apple.Music.LibraryView.RecentlyAdded
com.apple.Music.LibraryView.Songs
com.apple.Music.LibraryView.MadeForYou
com.apple.Music.LibraryView.Downloaded
com.apple.Music.LibraryView.Loved
com.apple.Music.LibraryView.Genres
com.apple.Music.LibraryView.Playlists
com.apple.Music.LibraryView.Playlists.Detail
com.apple.Music.ForYou
com.apple.Music.Browse
com.apple.Music.Radio
ByArtist
ByAlbum
ByTitle
ByPlaylistType
ByLibraryAddedDate
ByLastDevicePlaybackDate
ByLastModifiedDate
ByAscendingYear
ByDescendingYear
ByPlaylistOrderAscending
ByPlaylistOrderDescending
ByReleaseDateAscending
ByReleaseDateDescending
MCDNowPlayingWillAppearNotification
MCDNowPlayingWillDisappearNotification
MCDPlaybackStateChangedNotification
com.apple.MobileMusicPlayer.MusicCarDisplayUI
music.square.stack
19.circle.fill
e.square.fill
PLAYBACK_RATE_SPEED_HALF
PLAYBACK_RATE_SPEED_THREE_QUARTERS
PLAYBACK_RATE_SPEED_ONE_AND_QUARTER
PLAYBACK_RATE_SPEED_ONE_AND_HALF
PLAYBACK_RATE
%d Song(s)
%d Minute(s)
ALBUM_DETAIL_FORMAT_FULL
ROOT
CarPlay Now Playing Request - Playable Content
com.apple.MusicCarDisplayUI.playableContent.invalidate
[%@:%@]
PLAYBACK_QUEUE_TITLE
AppName_PlaybackQueue
POSITION_IN_PLAYLIST_FORMAT
com.apple.MusicCarDisplayUI.playableContent.mediaRemote
com.apple.MusicCarDisplayUI.playableContent.mediaRemote.items
v12@?0C8
v16@?0^{__CFArray=}8
v16@?0Q8
<%@: %p - (%@) (%@) [%@%@]>
com.apple.MusicCarDisplayUI.playableContent.serialContainerAccess
<%@:%p - [%@:%@] - %@>
v40@?0@"NSArray"8{_NSRange=QQ}16@"NSError"32
v24@?0q8@"NSError"16
v20@?0B8@"NSError"12
v16@?0@"NSArray"8
nowPlayingChange
didInvalidate
didInitiatePlayback
didUpdateContent
appReadyToFetch
indexPath
item
items
model
error
MCDError
com.apple.MCDSerialProcessingQueue
General
com.apple.MusicCarDisplay
com.apple.MusicCarPlay
MCDContentItemsChangedNotification
v24@?0@8@"UIImage"16
line.horizontal.3.decrease.circle
square.fill
pause.fill
play.fill
goforward
gobackward
%@.%@
LIKE_TRACK_DEFAULT_TITLE
DISLIKE_TRACK_DEFAULT_TITLE
CANCEL
v16@?0@"UIAlertAction"8
NO_CONTENT_TITLE
NO_CONTENT_SUBTITLE
LOADING_TITLE
FUSE_TIMEOUT_TITLE
Try Again
com.apple.MusicCarDisplayUI.playableContent.navigationController
Posting MCDBrowsableContentNowPlayingIdentifiersUpdatedNotification
Playable Content API implemented? %d
Showing loading screen
Showing timeout screen
Retrying container reload, showing loading screen
Retrying full refresh, showing loading screen
Cell displayed: title: %{public}@, subtitle: %{public}@, showExplicit: %{public}d, showCloud: %{public}d, shouldShowPlaybackProgress: %{public}d, playbackProgress: %{public}f, currentlyPlaying: %{public}d, isContainer: %{public}d
Loading content timed out, displaying error: %{public}@
Selected playable content, preparing to play back
Initiating playback failed due to timeout
Initiating playback failed, displaying error: %{public}@
Initiating playback complete, preparing to push to now playing
Selected container, preparing to push to container
Container preparation complete, pushing to container
Selected neither a container nor a playable cell
Some content have invalidated, preparing to reload table view: %{public}@, indicies: %{public}@
Content was invalidated, but there are no indexes to reload.
Content that has been been invalidated is visible, reloading those index paths in table view: %{public}@, indicies: %{public}@
Content has been invalidated, but view isn't finished loading yet. Container: %{public}@, indicies: %{public}@
The container changed count, preparing to reload
Fetching content for root container
Fetching content for non-root container: %{public}@
No container available to refresh.
Refreshing content complete for container: %{public}@
Root container has content
Root container does not have content
Completed refresh for container %{public}@
Now Playing button tapped in table view, pushing to Now Playing
Pushing to Now Playing view
Loading content in table controller for the first time since app registered
Limited UI changed from %{public}@ to %{public}@
Initializing a new view for bundle: %@
Received kMRMediaRemoteBrowsableContentNowPlayingIdentifiersUpdatedNotification
Rebuilding stack for app launch
Creating view controller for sectioned browsing
Creating view controller for table view browsing
App does not use browsable content API, pushing to now playing
Now Playing view already frontmost when Now Playing app tapped
popping from view controller to Now Playing view
Sending play command since the app supports immediate playback
Show Now Playing view on app foreground
Cancelling extra model invalidation for %{public}@.
Playable content invalidated, refreshing all index paths for %{public}@
Fetched current view controllers to reload after playable content invalidated for %{public}@: %{public}@
Adding MCDBrowsableContentTableViewController after model invalidate
Container is valid for table view
Container isn't valid for refreshed parent for table views
Next view controller is neither a table view nor now playing view when current VC is a table view, which shouldn't be here: %{public}@
Adding MCDBrowsableNavigationController to view controllers after model invalidate for %{public}@
Container is valid for tab bar
Container isn't valid for tab bar
Next view controller is neither a table view nor a now playing view when current VC is a tab bar, which shouldn't be here: %{public}@
Adding now playing view controller for model invalidate for %{public}@
Setting view controllers after model invalidate for %{public}@
current stack: %@
Hiding back button: %d
Row selected in Playback Queue, dismissing Playback Queue screen
All playback completed, dismissing Now Playing screen
%{public}@ is now playing app? %{public}@
Data source invalidated
Posting MCDPCDidInvalidateNotificationName
Content items updated
Content items updated for wrong app, expected %{public}@, got %{public}@
Got content items updated notification, but no updated content items
Posting MCDPCDidUpdateContentNotificationName
Posting MCDPCNowPlayingDidChangeNotificationName
Posting MCDPCAppReadyToFetchNotificationName
beginLoadingPlayableContent API is not implemented
Beginning to load item at index path: %{public}@
beginLoadingPlayableContent API is not implemented, receiving unsupported operation for index path: %{public}@
beginLoadingPlayableContent API error, code: %d
beginLoadingPlayableContent API in progress for %{public}@
beginLoadingPlayableContent API timed out, completion block wasn't called for index path: %{public}@
Received kMRMediaRemoteApplicationFinishedLoadingContentNotification for index path: %{public}@, beginLoadingPlayableContent API error: %{public}@
Received kMRMediaRemoteApplicationFinishedLoadingContentNotification without error for index path: %{public}@
Received kMRMediaRemoteApplicationFinishedLoadingContentNotification with error: %{public}@, but completion block is null for index path: %{public}@
Received kMRMediaRemoteApplicationFinishedLoadingContentNotification, but completion block is null for index path: %{public}@
Received kMRMediaRemoteApplicationFinishedLoadingContentNotification, beginLoadingPlayableContent API not implemented for index path: %{public}@
Received kMRMediaRemoteApplicationFinishedLoadingContentNotification, beginLoadingPlayableContent API not implemented and null completion block for index path: %{public}@
childItemsDisplayPlaybackProgress API is not implemented
Preparing to fetch if children support playback progress for index path: %{public}@
Fetched children supporting playback progress for index path: %{public}@
Children support playback progress timed out for: %{public}@
now playing identifiers API is not implemented
Preparing to fetch now playing identifiers
Fetched now playing identifiers
Fetching count of children at index path: %@
Completed fetching count of children at index path: %{public}@, number of children: %{public}llu
Fetching children at index path: %{public}@
Completed fetching children at index path: %{public}@
Finishing initial load
Asking MediaRemote to initialize playback for index path: %{public}@
Received kMRMediaRemoteApplicationInitiatedPlaybackOfContentItemNotification
Adding %{public}@ to items dictionary
Updating artwork to %{public}@
Have artwork data, but artwork is nil for %{public}@
Artwork is nil for %{public}@
Content items updated, preparing to find indicies to update
Index was nil for %{public}@
Contents updated for container: %{public}@, indicies: %{public}@
Now Playing Identifiers changed, checking to see what is now playing
Item currently playing. Identifier: %{public}@
Item not currently playing. Identifier: %{public}@
Item currently playing has changed, updating indicies
Indicies invalidated based on now playing identifiers
Starting to refresh for %@
Finishing refresh for %@
Starting to refresh all items, beginning with beginLoadingItem
Begin Loading completed for refreshing all items
Completed invalidation, resetting
Preparing to begin loading item %@
Finished begin loading item %@
Skipping item %@ without identifier
Finished adding items to cache
Cancelling all operations on MCDMediaRemoteSerialQueueManager
Operation is cancelled, not executing
Disabling up next queue; no items in queue.
Disabling up next queue; livestreaming content.
Disabling up next queue for AudioBooks.
Playing content has changed, posting notification
Timeout while waiting for artworkCatalog=%p
Sending reverse seek command
Sending end reverse seek command
Sending skip backwards command
Opening action sheet for like/dislike command
Sending previous item command
Sending stop command
Sending pause command
Sending play command
Sending forward seek command
Sending end forward seek command
Sending skip forward command
Sending forward item command
Retry button pressed
Loading content in tab controller for the first time since app registered
finished loading content after the view appeared, setting tabs
Received MCDPCNowPlayingDidChangeNotificationName
Accessory view already set.
Showing Now Playing button in tab bar
Hiding Now Playing button in tab bar
No Now Playing button hide needed.
Now playing button tapped in tab bar, pushing to Now Playing screen
Some content has invalidated, preparing to reload tab views for container: %{public}@, indicies: %{public}@
Reloading specific tabs since they are invalid for container: %{public}@, indicies: %{public}@
Reloading all host tabs since table views are nil for container: %{public}@, indicies: %{public}@
Tab view not visible for container indicies reload: %{public}@, indicies: %{public}@
No tabs available from host, loading default tabs for %{public}@
Scheduling dummy tab reload for %{public}@
Performing dummy tab reload for %{public}@
Number of tabs returned from client %{public}@: %{public}ld
Refreshing view controller %{public}@ because it is the selected index: %{public}ld
View controller %{public}@ is not selected but is reloaded, begin loading item
Dummy tab, no need to refresh in %{public}@
Reloading tabs after invalidate
Finished reloading tabs after invalidate
Tab selected, reloading content for %{public}@
Examining existing tab bar item and artwork for item: %@
Titles differ; invalidating tab bar item: %@
New image provided; invalidating tab bar item: %@
Repurposing tab bar item and artwork for tab bar item: %@
No existing tab bar item and artwork for item: %@
Creating tab bar item for item: %@, artwork is nil? %@
Adding view controller for tab: %@, artwork is nil? %@
Adding title for tab: %@, artwork is nil? %@
Container finished initial load when viewWillAppear is called, start loading host tabs
viewWillAppear called for MCDBrowsableContentNavigationController, but container isn't finished loading yet
Container finished initial load when viewDidAppear is called, start loading host tabs
viewDidAppear called for MCDBrowsableContentNavigationController, but container isn't finished loading yet
traitCollectionDidChange is called
0@333333
333333
MCDBrowsableContentUtilities
MCDBrowsableContentTableViewController
UITableViewDataSource
NSObject
UITableViewDelegate
UIScrollViewDelegate
UIGestureRecognizerDelegate
MCDPCContainerDelegate
MCDErrorViewDelegate
CARSessionObserving
_MCDBrowsableTableView
CarDisplay
MCDPlayableContentNowPlayingDataSource
MCDNowPlayingDataSource
MCDPlayableContentViewController
UINavigationControllerDelegate
_MCDStackItem
MCDNowPlayingViewController
MCDNowPlayingContentManagerDelegate
MCDPCModel
MCDPCItem
MCDPCContainer
MCDMediaRemoteSerialQueueManager
_MCDNowPlayingContentManager
MPRequestResponseControllerDelegate
MCDNowPlayingContentManagerProtocol
CPUINowPlayingViewControllerDataSource
CPUINowPlayingViewControllerDelegate
MCDPlayableContentPlaybackManager
MCDNoContentView
MCDLoadingContentView
MCDErrorLoadingView
MCDGlyph
MCDBrowsableContentNavigationController
UITabBarControllerDelegate
MCDPlayableContentQueueTableViewController
MCDAlertController
isEqualToArray:
defaultCenter
postNotificationName:object:
arrayWithObjects:count:
sharedInstance
setNowPlayingIdentifiers:
firstPartyAppBundleIDs
nowPlayingIdentifiers
.cxx_destruct
_nowPlayingIdentifiers
T@"NSArray",&,N,V_nowPlayingIdentifiers
T@"NSArray",R,N
initWithNibName:bundle:
setDelegate:
title
setTitle:
setTableDataSource:
setFilterType:
model
setImageSize:
setSessionObserver:
_limitedUIChanged:
addObserver:selector:name:object:
_nowPlayingDidChange:
indexPath
length
_appRegisteredForContent:
_playbackStateChanged:
initWithContainer:
removeObserver:
removeObserver:name:object:
setDataSource:
dealloc
container
stringWithFormat:
viewDidLoad
navigationController
viewControllers
count
view
bounds
initWithFrame:
setRowHeight:
setAutoresizingMask:
addSubview:
setRemembersLastFocusedIndexPath:
viewWillAppear:
setNavigationBarHidden:animated:
_clearTableViewSelectionAnimated:
_carScreen
_updateNowPlayingButtonVisibility
setVisible:
viewDidAppear:
setDidFinishInitialViewAppear:
bundleID
flashScrollIndicators
viewWillDisappear:
invalidate
indexPathsForSelectedRows
firstObject
viewDidDisappear:
alertController
dismissViewControllerAnimated:completion:
viewDidLayoutSubviews
frame
setFrame:
isVisible
_showTimeoutScreen
timerWithInterval:repeats:block:
_replacePlaceholderViewWithView:
localizedStringForKey:value:table:
appTitle
localizedStringWithFormat:
initWithTitle:buttonText:
placeholderView
superview
removeFromSuperview
setPlaceholderView:
setScrollEnabled:
safeAreaInsets
reloadWithCompletion:
_showLoadingScreen
traitCollectionDidChange:
traitCollection
userInterfaceIdiom
layoutIfNeeded
navigationItem
setRightBarButtonItem:
preferredFocusEnvironments
cachedItemForIndex:
setAccessoryView:
indexPathForSelectedRow
compare:
selectedIndexPath
isEqual:
showCurrentlyPlayingIndex
currentlyPlayingApp
currentlyPlaying
setSelected:
isCloudItem
isPlayable
accessoryWithCloudIcon
isContainer
accessoryWithDisclosureIndicator
subtitle
artworkImage
isExplicitItem
showPlaybackProgress
playbackProgress
configurationWithText:detailText:image:showExplicit:accessory:showActivityIndicator:showPlaybackProgress:playbackProgress:currentlyPlaying:
applyConfiguration:
playableContentPlaybackManager
playerState
nowPlayingIndicator
setPlaybackState:
setNeedsLayout
beginLoadingItem:completion:
cellForTableView:
_configureCell:forIndexPath:
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
_displayErrorAlertController:
loadingTimer
setLoadingTimer:
setSelectedIndexPath:
indexPathByAddingIndex:
_clearLoadingActivity
domain
isEqualToString:
setPushToNowPlaying:
initiatePlaybackAtIndexPath:completion:
indexAtPosition:
containerAtIndex:
initWithContainer:tabbedBrowsing:
showViewController:sender:
_displayLoadingActivity
performSelector:withObject:afterDelay:
cellForRowAtIndexPath:
localizedDescription
alertControllerWithTitle:message:preferredStyle:
setAlertController:
actionWithTitle:style:handler:
addAction:
presentViewController:animated:completion:
identifier
array
indexPathsForVisibleRows
copy
indexPathForRow:inSection:
containsObject:
addObject:
didFinishInitialLoad
reloadRowsAtIndexPaths:withRowAnimation:
enumerateIndexesUsingBlock:
addOperation:cancelAllOperations:
cachedCount
_shouldLimitLists
reloadTable
cancelPreviousPerformRequestsWithTarget:selector:object:
deselectRowAtIndexPath:animated:
visibleCells
indexPathForCell:
enumerateObjectsUsingBlock:
refreshWithCompletion:
reloadData
currentPlayingSong
isCurrentPlayingApp
setCurrentlyPlayingApp:
_nowPlayingButtonTapped:
initWithCustomView:
_pushToNowPlaying:
pushToNowPlaying
initWithPlayableBundleID:appName:
setShowNavigationBar:
setDidFinishInitialLoad:
currentSession
limitUserInterfaces
boolValue
configuration
limitableUserInterfaces
numberWithBool:
snapshotViewAfterScreenUpdates:
setAlpha:
animateWithDuration:animations:completion:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
tableView:numberOfRowsInSection:
tableView:cellForRowAtIndexPath:
numberOfSectionsInTableView:
tableView:titleForHeaderInSection:
tableView:titleForFooterInSection:
tableView:canEditRowAtIndexPath:
tableView:canMoveRowAtIndexPath:
sectionIndexTitlesForTableView:
tableView:sectionForSectionIndexTitle:atIndex:
tableView:commitEditingStyle:forRowAtIndexPath:
tableView:moveRowAtIndexPath:toIndexPath:
scrollViewDidScroll:
scrollViewDidZoom:
scrollViewWillBeginDragging:
scrollViewWillEndDragging:withVelocity:targetContentOffset:
scrollViewDidEndDragging:willDecelerate:
scrollViewWillBeginDecelerating:
scrollViewDidEndDecelerating:
scrollViewDidEndScrollingAnimation:
viewForZoomingInScrollView:
scrollViewWillBeginZooming:withView:
scrollViewDidEndZooming:withView:atScale:
scrollViewShouldScrollToTop:
scrollViewDidScrollToTop:
scrollViewDidChangeAdjustedContentInset:
tableView:willDisplayCell:forRowAtIndexPath:
tableView:willDisplayHeaderView:forSection:
tableView:willDisplayFooterView:forSection:
tableView:didEndDisplayingCell:forRowAtIndexPath:
tableView:didEndDisplayingHeaderView:forSection:
tableView:didEndDisplayingFooterView:forSection:
tableView:heightForRowAtIndexPath:
tableView:heightForHeaderInSection:
tableView:heightForFooterInSection:
tableView:estimatedHeightForRowAtIndexPath:
tableView:estimatedHeightForHeaderInSection:
tableView:estimatedHeightForFooterInSection:
tableView:viewForHeaderInSection:
tableView:viewForFooterInSection:
tableView:accessoryTypeForRowWithIndexPath:
tableView:accessoryButtonTappedForRowWithIndexPath:
tableView:shouldHighlightRowAtIndexPath:
tableView:didHighlightRowAtIndexPath:
tableView:didUnhighlightRowAtIndexPath:
tableView:willSelectRowAtIndexPath:
tableView:willDeselectRowAtIndexPath:
tableView:didSelectRowAtIndexPath:
tableView:didDeselectRowAtIndexPath:
tableView:canPerformPrimaryActionForRowAtIndexPath:
tableView:performPrimaryActionForRowAtIndexPath:
tableView:editingStyleForRowAtIndexPath:
tableView:titleForDeleteConfirmationButtonForRowAtIndexPath:
tableView:editActionsForRowAtIndexPath:
tableView:leadingSwipeActionsConfigurationForRowAtIndexPath:
tableView:trailingSwipeActionsConfigurationForRowAtIndexPath:
tableView:shouldIndentWhileEditingRowAtIndexPath:
tableView:willBeginEditingRowAtIndexPath:
tableView:didEndEditingRowAtIndexPath:
tableView:targetIndexPathForMoveFromRowAtIndexPath:toProposedIndexPath:
tableView:indentationLevelForRowAtIndexPath:
tableView:shouldShowMenuForRowAtIndexPath:
tableView:canPerformAction:forRowAtIndexPath:withSender:
tableView:performAction:forRowAtIndexPath:withSender:
tableView:canFocusRowAtIndexPath:
tableView:shouldUpdateFocusInContext:
tableView:didUpdateFocusInContext:withAnimationCoordinator:
indexPathForPreferredFocusedViewInTableView:
tableView:selectionFollowsFocusForRowAtIndexPath:
tableView:shouldSpringLoadRowAtIndexPath:withContext:
tableView:shouldBeginMultipleSelectionInteractionAtIndexPath:
tableView:didBeginMultipleSelectionInteractionAtIndexPath:
tableViewDidEndMultipleSelectionInteraction:
tableView:contextMenuConfigurationForRowAtIndexPath:point:
tableView:previewForHighlightingContextMenuWithConfiguration:
tableView:previewForDismissingContextMenuWithConfiguration:
tableView:willPerformPreviewActionForMenuWithConfiguration:animator:
tableView:willDisplayContextMenuWithConfiguration:animator:
tableView:willEndContextMenuInteractionWithConfiguration:animator:
gestureRecognizerShouldBegin:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
gestureRecognizer:shouldReceiveEvent:
container:didInvalidateIndicies:
containerWillChangeCount:
containerDidChangeCount:
errorViewDidTapButton:
startedConnectionAttemptOnTransport:
cancelledConnectionAttemptOnTransport:
sessionDidConnect:
sessionDidDisconnect:
session:didUpdateConfiguration:
contentScrollView
tableView:didFocusRowAtIndexPath:
setContainer:
didFinishInitialViewAppear
_tableView
_nowPlayingButton
_count
_selectedNextIndexPath
_dataSource
_reselectIndexPath
_loadingTimer
_delayTimer
_MCD_tableView
_serialQueue
_carSessionStatus
_limited
_hasCarScreen
_hasNoBrowsableContent
_didPushToNowPlayingAtLaunch
_isRootTableViewController
_hasTabbedBrowsing
_visible
_currentlyPlayingApp
_pushToNowPlaying
_didFinishInitialLoad
_didFinishInitialViewAppear
_container
_selectedIndexPath
_placeholderView
_alertController
visible
TB,N,GisVisible,V_visible
T@"NSIndexPath",&,N,V_selectedIndexPath
T@"UIView",&,N,V_placeholderView
TB,N,V_currentlyPlayingApp
T@"MPWeakTimer",&,N,V_loadingTimer
T@"UIAlertController",&,N,V_alertController
TB,N,V_pushToNowPlaying
T@"MCDPCContainer",&,N,V_container
TB,N,V_didFinishInitialLoad
TB,N,V_didFinishInitialViewAppear
canBecomeFirstResponder
artwork
imageWithSize:
albumImageWithFallbackForSize:doubleLineRow:
size
drawInRect:
car_scaledImageWithSize:
bundleWithIdentifier:
_capabilityForKey:
integerValue
supportsFocus
_systemImageNamed:
setNumberStyle:
setUsesSignificantDigits:
setMaximumFractionDigits:
setUsesGroupingSeparator:
stringFromNumber:
defaultManager
ageVerificationState
treatment
isEqualToNumber:
tracksTiledArtworkCatalogWithRows:columns:
type
song
album
artist
playlist
subviews
countByEnumeratingWithState:objects:count:
setCharge:
getIndexes:
numberWithUnsignedInteger:
appendFormat:
appendString:
initWithBundleIdentifier:
addTarget:action:forControlEvents:
setNumberOfLevels:
_carSystemFocusColor
setLevelGuttersColor:
setTag:
sizeToFit
initWithBarButtonSystemItem:target:action:
setWidth:
tableBackgroundColor
contentView
setBackgroundColor:
_carSystemPrimaryColor
textLabel
setTextColor:
boldSystemFontOfSize:
setFont:
setTextAlignment:
stringFromSeconds:
newlineCharacterSet
componentsSeparatedByCharactersInSet:
componentsJoinedByString:
sharedNetworkObserver
isMusicCellularStreamingAllowed
setMusicCellularStreamingAllowed:
_currentTraitCollection
_setCurrentTraitCollection:
propertySetWithProperties:
initWithProperties:relationships:
_itemProperties
playingItemProperties
queueItemProperties
requestLabel
queueSectionProperties
init
initWithBundleID:
setQualityOfService:
setMaxConcurrentOperationCount:
setName:
_modelDidInvalidate:
_nowPlayingIdentifiersChanged:
initWithBundleID:stack:
_setupView
userInfo
valueForKey:
containerForRoot
setNavigationBarHidden:
initWithBundleID:model:
_populateStack
_createSectionedRootViewController
_createRootViewController
setViewControllers:animated:
visibleViewController
popToViewController:animated:
pushViewController:animated:
modelInvalidationQueue
operationCount
objectAtIndexedSubscript:
isValidForRefreshedParent:
selectedViewController
invalidateAndReloadTabsWithCompletion:
addOperationWithBlock:
objectEnumerator
nextObject
stackItemWithContainer:
navigationController:willShowViewController:animated:
navigationController:didShowViewController:animated:
navigationControllerSupportedInterfaceOrientations:
navigationControllerPreferredInterfaceOrientationForPresentation:
navigationController:interactionControllerForAnimationController:
navigationController:animationControllerForOperation:fromViewController:toViewController:
refreshNavigationStackForLaunch
currentStack
setModelInvalidationQueue:
_model
_rootContainer
_stackToRebuild
_hasBrowsableContent
_hasSectionedContent
_hasLoaded
_bundleID
_modelInvalidationQueue
T@"NSOperationQueue",&,N,V_modelInvalidationQueue
T@"NSString",R,C,N,V_bundleID
_identifier
_indexPath
T@"NSString",R,N,V_identifier
T@"NSIndexPath",R,N,V_indexPath
initWithBundleIdentifier:dataSource:delegate:
initWithBundleID:appName:
initWithDelegate:dataSource:bundleID:
setContentManager:
contentManager
initWithContentManager:
setPlaybackQueueViewController:
beginRequestObservation
endRequestObservation
setTitleView:
bundleIdentifier
_updateBackButton
setRightTitleLabel:
systemFontOfSize:
rightTitleLabel
setLineBreakMode:
_labelColor
colorWithAlphaComponent:
_adjustRightTitleLabelToFit
initWithActivityIndicatorStyle:
setActivityIndicator:
setActivityIndicatorBarButtonItem:
_setupActivityTimer
setRightTitleLabelBarButtonItem:
buttonWithType:
titleLabel
setTitle:forState:
upNextButtonTapped:
setPlaybackQueueBarButtonItem:
setRightTitle:
delegate
nowPlayingViewControllerCanShowUpNext:
contentManager:shouldShowPlaybackQueue:
playbackQueueViewController
_handleWillAppear
setHandledWillAppear:
viewWillDisappear
setHidesBackButton:
appName
setText:
setTrackBuffering:
trackBuffering
activityIndicator
startAnimating
stopAnimating
setShouldShowPlaybackQueue:
handledWillAppear
shouldShowPlaybackQueue
playbackQueueBarButtonItem
rightTitleLabelBarButtonItem
activityIndicatorBarButtonItem
rightBarButtonItems
setRightBarButtonItems:
numberWithLong:
numberWithInteger:
_popViewControllerAnimated
popViewControllerAnimated:
_invalidateActivityTimer
isAnimating
setActivityTimer:
activityTimer
contentManager:processResponse:error:
contentManagerReloadData:
contentManager:presentViewController:
contentManager:bufferingItem:
contentManagerInitiatedPlaybackFromPlaybackQueue:
contentManager:displayItemIndex:totalItemCount:
contentManagerCompletedAllPlayback:
contentManager:sectionName:
contentManager:itemDidChange:response:
willMoveToParentViewController:
showNavigationBar
backButton
setBackButton:
setAppName:
_showNavigationBar
_trackBuffering
_handledWillAppear
_shouldShowPlaybackQueue
_playbackQueueViewController
_contentManager
_backButton
_activityIndicator
_activityIndicatorBarButtonItem
_appName
_activityTimer
_rightTitleLabel
_rightTitleLabelBarButtonItem
_playbackQueueBarButtonItem
T@"UIBarButtonItem",&,N,V_backButton
T@"UIActivityIndicatorView",&,N,V_activityIndicator
T@"UIBarButtonItem",&,N,V_activityIndicatorBarButtonItem
TB,N,V_trackBuffering
T@"NSString",&,N,V_appName
T@"MPWeakTimer",&,N,V_activityTimer
T@"UILabel",&,N,V_rightTitleLabel
T@"UIBarButtonItem",&,N,V_rightTitleLabelBarButtonItem
T@"UIBarButtonItem",&,N,V_playbackQueueBarButtonItem
TB,N,V_handledWillAppear
TB,N,V_shouldShowPlaybackQueue
TB,N,V_showNavigationBar
T@"UITableViewController",&,N,V_playbackQueueViewController
T@"<MCDNowPlayingContentManagerProtocol>",&,N,V_contentManager
dictionary
_registerForClientContent
playerPath
setCurrentPlayingApp:
setSupportedAPIMask:
_browsableContentDidRegisterNotification:
_registerNotifications
_dataSourceInvalidated:
_contentItemsUpdated:
_nowPlayingDidChangeNotification:
setItems:
objectForKeyedSubscript:
itemsFromMRContentItems:
postNotificationName:object:userInfo:
applicationProxyForIdentifier:
localizedNameForContext:
localizedName
indexPathWithIndexes:length:
_initWithModel:rootItem:indexPath:
supportedAPIMask
_finishBeginLoadingNotification:
beginLoadingBlocks
setObject:forKeyedSubscript:
initWithName:object:userInfo:
_setupBeginLoadingTimeoutTimerWithCompletion:
_errorForNotification:
_invalidateBeginLoadingTimeoutTimer
_invalidatePlaybackProgressTimeoutTimer
_setupPlaybackProgressTimeoutTimerWithCompletion:
setPlaybackCompletion:
_finishPlaybackNotification:
playbackCompletion
objectForKey:
mutableCopy
setBeginLoadingTimeoutTimer:
beginLoadingTimeoutTimer
setPlaybackProgressTimeoutTimer:
playbackProgressTimeoutTimer
_initWithModel:MRContentItem:
items
artworkData
imageWithData:
setArtworkImage:
beginLoadingItemAtIndexPath:completion:
getChildrenSupportsPlaybackProgressForIndexPath:withCompletion:
getNowPlayingIdentifiersWithCompletion:
getCountOfChildrenAtIndexPath:withCompletion:
getChildrenAtIndexPath:inRange:completion:
rootItem
imageSize
setPlayableContentPlaybackManager:
containerCompletion
setContainerCompletion:
setBeginLoadingBlocks:
mediaRemoteNotificationQueue
setMediaRemoteNotificationQueue:
mediaRemoteItemQueue
setMediaRemoteItemQueue:
_currentPlayingApp
_supportedAPIMask
_rootItem
_playableContentPlaybackManager
_playbackCompletion
_containerCompletion
_items
_beginLoadingBlocks
_beginLoadingTimeoutTimer
_playbackProgressTimeoutTimer
_mediaRemoteNotificationQueue
_mediaRemoteItemQueue
_imageSize
T@"MCDPlayableContentPlaybackManager",&,N,V_playableContentPlaybackManager
currentPlayingApp
TB,N,GisCurrentPlayingApp,V_currentPlayingApp
T@?,C,N,V_playbackCompletion
T@?,C,N,V_containerCompletion
T@"NSMutableDictionary",&,N,V_items
TI,N,V_supportedAPIMask
T@"NSMutableDictionary",&,N,V_beginLoadingBlocks
T@"MPWeakTimer",&,N,V_beginLoadingTimeoutTimer
T@"MPWeakTimer",&,N,V_playbackProgressTimeoutTimer
T@"NSObject<OS_dispatch_queue>",&,N,V_mediaRemoteNotificationQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_mediaRemoteItemQueue
T@"MCDPCItem",R,N,V_rootItem
T@"NSString",R,N
T{CGSize=dd},N,V_imageSize
setCurrentlyPlaying:
_isPlayable
_isContainer
_isCloudItem
_currentlyPlaying
_isExplicitItem
_playbackProgress
_title
_subtitle
_artworkData
_artworkImage
T@"MCDPCModel",R,W,N,V_model
TB,N,V_currentlyPlaying
T@"UIImage",&,N,V_artworkImage
T@"NSString",R,N,V_title
T@"NSString",R,N,V_subtitle
T@"NSData",R,N,V_artworkData
Tf,R,N,V_playbackProgress
TB,R,N,V_isPlayable
TB,R,N,V_isContainer
TB,R,N,V_isCloudItem
TB,R,N,V_isExplicitItem
_nowPlayingIdentifiersDidChange:
setCachedCount:
serialAccessContainerQueue
setCachedItemsByIndicies:
setCachedIndiciesByIdentifier:
keyEnumerator
allObjects
indexSet
cachedIndiciesByIdentifier
addIndex:
cachedItemsByIndicies
allKeys
cachedIndexByIdentifier:
indexPathByRemovingLastIndex
getChildrenInRange:completion:
getCountOfChildrenWithCompletion:
getPlaybackProgressSupportForChildrenWithCompletion:
fetchContentWithCompletion:
beginLoadingItemWithCompletion:
containerForItem:
setShowPlaybackProgress:
setCount:
updateRootItemWithCompletion:
cachedItemForIdentifier:
setSerialAccessContainerQueue:
_showPlaybackProgress
__supportedDelegateCalls
_cachedCount
_delegate
_serialAccessContainerQueue
_cachedIndiciesByIdentifier
_cachedItemsByIndicies
Tq,N,V_cachedCount
T@"NSObject<OS_dispatch_queue>",&,N,V_serialAccessContainerQueue
T@"NSMutableDictionary",&,N,V_cachedIndiciesByIdentifier
T@"NSMutableDictionary",&,N,V_cachedItemsByIndicies
T@"MCDPCItem",R,W,N,V_rootItem
TB,R,N,V_showPlaybackProgress
Tq,R,N
T@"<MCDPCContainerDelegate>",W,N,V_delegate
initWithBytes:length:
bytes
mediaRemoteSerialQueue
cancelAllOperations
isCancelled
addExecutionBlock:
addOperation:
T@"MCDMediaRemoteSerialQueueManager",R,N
setMediaRemoteSerialQueue:
_mediaRemoteSerialQueue
T@"NSOperationQueue",&,N,V_mediaRemoteSerialQueue
_performRequest
requestController
beginAutomaticResponseLoading
endAutomaticResponseLoading
tableCellClass
registerClass:forCellReuseIdentifier:
nowPlayingAlbumArtMode
_sessionAllowsAlbumArt:
setAllowsAlbumArt:
tableView
carSessionStatus
setLimitedUI:
_setupRequest
setRequest:
setTracklistRange:
pathWithRoute:bundleID:playerID:
setPlayerPath:
dataSource
setPlayingItemProperties:
setQueueItemProperties:
setQueueSectionProperties:
setLabel:
object
nowPlayingItem
duration
response
setLastReceivedResponse:
lastReceivedResponse
tracklist
playingItemIndexPath
itemAtIndexPath:
setNowPlayingItem:
totalItemCount
_shouldShowPlaybackQueueForItemCount:
setCurrentPlayingPlaylist:
setCurrentPlayingRadioStation:
section
sectionAtIndex:
metadataObject
radioStation
flattenedGenericObject
anyObject
setCurrentPlayingSong:
processArtworkForCurrentlyPlayingSong
playlistEntry
setCurrentPlayingPlaylistEntry:
state
_processResponse:error:
scale
artworkCatalog
isArtworkVisuallyIdenticalToCatalog:
setArtworkCatalog:
setAlbumArtwork:
setDestinationScale:
setFittingSize:
_showPlaceholderArtwork
setArtworkTimer:
setDestination:configurationBlock:
shouldShowComposer
composer
name
currentPlayingRadioStation
albumArtwork
isExplicitSong
shuffleType
repeatType
shuffleCommand
advance
_performChangeRequest:
repeatCommand
playbackRateCommand
supportedPlaybackRates
nowPlayingViewControllerGetPlaybackRate:
indexOfObject:
floatValue
setPlaybackRate:
preferredPlaybackRate
numberWithFloat:
performRequest:options:completion:
rightHandDrive
controller:defersResponseReplacement:
controller:shouldRetryFailedRequestWithError:
willBeginLoadingRequestForController:
didFinishLoadingRequestForController:
limitedUI
currentPlayingPlaylistEntry
currentPlayingPlaylist
setTableCellClass:
nowPlayingBundleID
TB,N
T@"MPModelSong",R,N
T@"MPModelPlaylistEntry",R,N
T@"MPModelPlaylist",R,N
T@"MPModelRadioStation",R,N
T#,W,N
T@"NSString",R,C,N
artistTextForNowPlayingController:
albumTextForNowPlayingController:
titleForNowPlayingController:
backgroundArtForNowPlayingController:
nowPlayingViewControllerIsShowingExplicitTrack:
durationSnapshotForNowPlayingViewController:
nowPlayingViewControllerIsPlaying:
placeholderTypeForNowPlayingViewController:
shuffleTypeForNowPlayingViewController:
repeatTypeForNowPlayingViewController:
nowPlayingViewController:shouldDisplayButton:withImage:existingIdentifier:tinted:
nowPlayingViewController:buttonShouldBeActive:
nowPlayingViewController:didSendAction:state:
nowPlayingViewControllerCanShuffle:
nowPlayingViewControllerToggleShuffle:
nowPlayingViewControllerCanRepeat:
nowPlayingViewControllerToggleRepeat:
nowPlayingViewControllerCanShowAddToLibrary:
nowPlayingViewControllerAddToLibrary:
nowPlayingViewControllerIsFuseSubscriber:
nowPlayingViewControllerCanShowAlbumLink:
nowPlayingViewControllerAlbumArtistButtonTapped:
titleForUpNextInNowPlayingViewController:
nowPlayingViewControllerUpNextButtonTapped:
nowPlayingViewControllerCanShowChangePlaybackRate:
nowPlayingViewControllerChangePlaybackRate:
nowPlayingViewControllerCanShowMore:
nowPlayingViewControllerMore:
nowPlayingViewControllerCanShowAlbumArt:
nowPlayingViewControllerShouldUseMusicExplicitGlyph:
nowPlayingViewControllerWillAppear:
customPlaybackControlButtonsForNowPlayingViewController:
nowPlayingViewController:didSelectButton:
nowPlayingViewControllerIsRightHandDrive:
setTableView:
modelResponseDidInvalidate:
setRequestController:
setBundleID:
setCarSessionStatus:
setPlayerState:
artworkCache
setArtworkCache:
artworkTimer
allowsAlbumArt
_allowsAlbumArt
_lastReceivedResponse
_nowPlayingItem
_requestController
_albumArtwork
_artworkCatalog
_playerState
_artworkCache
_artworkTimer
T@"<MCDNowPlayingContentManagerDelegate>",W,N,V_delegate
T@"MPCPlayerResponse",&,N,V_lastReceivedResponse
T@"UITableView",W,N,V_tableView
T@"MPCPlayerResponseItem",&,N,V_nowPlayingItem
T@"MPRequestResponseController",&,N,V_requestController
T@"UIImage",&,N,V_albumArtwork
T@"MPArtworkCatalog",&,N,V_artworkCatalog
T@"<MCDNowPlayingDataSource>",W,N,V_dataSource
T@"NSString",&,N,V_bundleID
T@"CARSessionStatus",&,N,V_carSessionStatus
Tq,N,V_playerState
T@"MPModelSong",&,N,VcurrentPlayingSong
T@"MPModelPlaylistEntry",&,N,VcurrentPlayingPlaylistEntry
T@"MPModelPlaylist",&,N,VcurrentPlayingPlaylist
T@"MPModelRadioStation",&,N,VcurrentPlayingRadioStation
T@"NSMutableDictionary",&,N,V_artworkCache
T@"MSVTimer",&,N,V_artworkTimer
TB,N,V_allowsAlbumArt
TB,N,VlimitedUI
T#,W,N,VtableCellClass
numberOfSections
_itemAtIndexPath:
_numberOfItemsInPlaybackQueue
_updateTrackQueueIndex
indexPathForGlobalIndex:
playingItemGlobalIndex
globalItemCount
playingItemIndex
_adjustedIndexPathForPlaybackQueue:
window
screen
setCacheIdentifier:forRequestingContext:
setObject:forKey:
changeItemCommand
changeToItem:
performRequest:completion:
seekCommand
preferredForwardJumpIntervals
doubleValue
preferredBackwardJumpIntervals
_jumpBackwardInterval
_skipIntervalButtonImageForInterval:size:
previousItem
likeCommand
dislikeCommand
imageNamed:ofSize:
value
stop
pause
transportControlView
setPauseButtonImageName:
setPlayButtonImageName:
_jumpForwardInterval
numberWithDouble:
nextItem
isSeeking
beginSeekWithDirection:
setSeeking:
endSeek
jumpByInterval:
_handleHamburgerActionSheet
play
_alertActionForFeedbackCommand:fallbackTitle:
localizedShortTitle
localizedTitle
changeValue:
_setChecked:
wishlistCommand
setModel:
setPlayingItemIndex:
setTotalItemCount:
_seeking
_playingItemIndex
_totalItemCount
seeking
TB,N,GisSeeking,V_seeking
T@"MCDPCModel",&,N,V_model
Tq,N,V_playingItemIndex
Tq,N,V_totalItemCount
initWithTitle:subtitle:
initForAutolayout
setHidden:
_carSystemSecondaryColor
setNumberOfLines:
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
setPriority:
safeAreaLayoutGuide
addConstraints:
setColor:
setActivityIndicatorViewStyle:
addLayoutGuide:
heightAnchor
constraintEqualToAnchor:multiplier:constant:
topAnchor
bottomAnchor
constraintEqualToAnchor:
leadingAnchor
constraintEqualToAnchor:constant:
trailingAnchor
centerXAnchor
activateConstraints:
setTranslatesAutoresizingMaskIntoConstraints:
retryButtonPressed:
widthAnchor
constraintEqualToConstant:
shouldEnableNetwork
setShouldEnableNetwork:
_shouldEnableNetwork
T@"<MCDErrorViewDelegate>",W,N,V_delegate
TB,N,V_shouldEnableNetwork
preferredFontDescriptorWithTextStyle:addingSymbolicTraits:options:
fontWithDescriptor:size:
configurationWithPointSize:weight:scale:
systemImageNamed:compatibleWithTraitCollection:
imageWithSymbolConfiguration:
glyphFactory:pointSize:weight:scale:
_loadAllHostTabs
_accessoryView
tabBar
initWithFrame:bundleIdentifier:
nowPlayingButton
_setAccessoryView:
updateTitleAndTabBarItemsAtIndexes:
hasInvalidatedDummyTabs
setHasInvalidatedDummyTabs:
selectedIndex
_hostTabAtIndex:dummyTab:
setViewControllers:
imageWithRenderingMode:
tabBarItem
initWithTitle:image:selectedImage:
_tabBarItemForViewController:fromItem:
setTabBarItem:
setHasCarScreen:
tabBarController:shouldSelectViewController:
tabBarController:didSelectViewController:
tabBarController:willBeginCustomizingViewControllers:
tabBarController:willEndCustomizingViewControllers:changed:
tabBarController:didEndCustomizingViewControllers:changed:
tabBarControllerSupportedInterfaceOrientations:
tabBarControllerPreferredInterfaceOrientationForPresentation:
tabBarController:interactionControllerForAnimationController:
tabBarController:animationControllerForTransitionFromViewController:toViewController:
tabBarController
setTabBarController:
nowPlayingButtonView
setNowPlayingButtonView:
hasCarScreen
serialQueue
setSerialQueue:
_hasInvalidatedDummyTabs
_tabBarController
_nowPlayingButtonView
T@"UITabBarController",&,N,V_tabBarController
T@"CPUINowPlayingButtonWrapperView",&,N,V_nowPlayingButtonView
TB,N,V_hasCarScreen
TB,N,V_visible
TB,N,V_hasInvalidatedDummyTabs
T@"NSObject<OS_dispatch_queue>",&,N,V_serialQueue
T@"MCDPlayableContentPlaybackManager",&,N,V_contentManager
presentingViewController
_presentingViewControllerView
@16@0:8
v24@0:8@16
v16@0:8
@"NSArray"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
q32@0:8@16q24
@32@0:8@16@24
q24@0:8@16
@32@0:8@16q24
B32@0:8@16@24
@24@0:8@16
q40@0:8@16@24q32
v40@0:8@16q24@32
v40@0:8@16@24@32
q32@0:8@"UITableView"16q24
@"UITableViewCell"32@0:8@"UITableView"16@"NSIndexPath"24
q24@0:8@"UITableView"16
@"NSString"32@0:8@"UITableView"16q24
B32@0:8@"UITableView"16@"NSIndexPath"24
@"NSArray"24@0:8@"UITableView"16
q40@0:8@"UITableView"16@"NSString"24q32
v40@0:8@"UITableView"16q24@"NSIndexPath"32
v40@0:8@"UITableView"16@"NSIndexPath"24@"NSIndexPath"32
v48@0:8@16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@16B24
v32@0:8@16@24
v40@0:8@16@24d32
v24@0:8@"UIScrollView"16
v48@0:8@"UIScrollView"16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@"UIScrollView"16B24
@"UIView"24@0:8@"UIScrollView"16
v32@0:8@"UIScrollView"16@"UIView"24
v40@0:8@"UIScrollView"16@"UIView"24d32
B24@0:8@"UIScrollView"16
v40@0:8@16@24q32
d32@0:8@16@24
d32@0:8@16q24
q32@0:8@16@24
@40@0:8@16@24@32
B48@0:8@16:24@32@40
v48@0:8@16:24@32@40
B40@0:8@16@24@32
@48@0:8@16@24{CGPoint=dd}32
v40@0:8@"UITableView"16@"UITableViewCell"24@"NSIndexPath"32
v40@0:8@"UITableView"16@"UIView"24q32
d32@0:8@"UITableView"16@"NSIndexPath"24
d32@0:8@"UITableView"16q24
@"UIView"32@0:8@"UITableView"16q24
q32@0:8@"UITableView"16@"NSIndexPath"24
v32@0:8@"UITableView"16@"NSIndexPath"24
@"NSIndexPath"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSString"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSArray"32@0:8@"UITableView"16@"NSIndexPath"24
@"UISwipeActionsConfiguration"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSIndexPath"40@0:8@"UITableView"16@"NSIndexPath"24@"NSIndexPath"32
B48@0:8@"UITableView"16:24@"NSIndexPath"32@40
v48@0:8@"UITableView"16:24@"NSIndexPath"32@40
B32@0:8@"UITableView"16@"UITableViewFocusUpdateContext"24
v40@0:8@"UITableView"16@"UITableViewFocusUpdateContext"24@"UIFocusAnimationCoordinator"32
@"NSIndexPath"24@0:8@"UITableView"16
B40@0:8@"UITableView"16@"NSIndexPath"24@"<UISpringLoadedInteractionContext>"32
v24@0:8@"UITableView"16
@"UIContextMenuConfiguration"48@0:8@"UITableView"16@"NSIndexPath"24{CGPoint=dd}32
@"UITargetedPreview"32@0:8@"UITableView"16@"UIContextMenuConfiguration"24
v40@0:8@"UITableView"16@"UIContextMenuConfiguration"24@"<UIContextMenuInteractionCommitAnimating>"32
v40@0:8@"UITableView"16@"UIContextMenuConfiguration"24@"<UIContextMenuInteractionAnimating>"32
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
B32@0:8@"UIGestureRecognizer"16@"UIEvent"24
v32@0:8@"MCDPCContainer"16@"NSIndexSet"24
v24@0:8@"MCDPCContainer"16
v24@0:8@"MCDErrorLoadingView"16
v24@0:8Q16
v24@0:8@"CARSession"16
v32@0:8@"CARSession"16@"CARSessionConfiguration"24
@28@0:8@16B24
v20@0:8B16
v24@0:8@?16
@"UITableView"
@"CPUINowPlayingButton"
@"NSIndexPath"
@"_UIFilteredDataSource"
@"MPWeakTimer"
@"UIView"
@"NSObject<OS_dispatch_queue>"
@"CARSessionStatus"
@"MCDPCContainer"
@"UIAlertController"
@36@0:8{CGSize=dd}16B32
@32@0:8{CGSize=dd}16
@"MPPropertySet"16@0:8
v36@0:8@16@24B32
Q24@0:8@16
@48@0:8@16q24@32@40
v36@0:8@"UINavigationController"16@"UIViewController"24B32
Q24@0:8@"UINavigationController"16
q24@0:8@"UINavigationController"16
@"<UIViewControllerInteractiveTransitioning>"32@0:8@"UINavigationController"16@"<UIViewControllerAnimatedTransitioning>"24
@"<UIViewControllerAnimatedTransitioning>"48@0:8@"UINavigationController"16q24@"UIViewController"32@"UIViewController"40
@"MCDPCModel"
@"NSString"
@"NSOperationQueue"
v40@0:8@16q24q32
v40@0:8@"_MCDNowPlayingContentManager"16@"MPCPlayerResponse"24@"NSError"32
v28@0:8@"_MCDNowPlayingContentManager"16B24
v24@0:8@"_MCDNowPlayingContentManager"16
v32@0:8@"_MCDNowPlayingContentManager"16@"UIViewController"24
v40@0:8@"_MCDNowPlayingContentManager"16q24q32
v32@0:8@"_MCDNowPlayingContentManager"16@"NSString"24
v40@0:8@"_MCDNowPlayingContentManager"16@"MPModelObject"24@"MPCPlayerResponse"32
@"UITableViewController"
@"<MCDNowPlayingContentManagerProtocol>"
@"UIBarButtonItem"
@"UIActivityIndicatorView"
@"UILabel"
v32@0:8@16@?24
v48@0:8@16{_NSRange=QQ}24@?40
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
@?16@0:8
I16@0:8
v20@0:8I16
@"MCDPCItem"
@"MCDPlayableContentPlaybackManager"
@"NSMutableDictionary"
{CGSize="width"d"height"d}
@32@0:8@16^v24
f16@0:8
@"NSData"
@"UIImage"
q16@0:8
v24@0:8q16
@24@0:8q16
v40@0:8{_NSRange=QQ}16@?32
{?="didInvalidateRootItem"b1"didInvalidateIndicies"b1"willChangeCount"b1"didChangeCount"b1}
@"<MCDPCContainerDelegate>"
v28@0:8@?16B24
v32@0:8@"MPRequestResponseController"16@?<v@?>24
B32@0:8@"MPRequestResponseController"16@"NSError"24
v24@0:8@"MPRequestResponseController"16
v24@0:8#16
@40@0:8@"<MCDNowPlayingContentManagerDelegate>"16@"<MCDNowPlayingDataSource>"24@"NSString"32
@"MPModelSong"16@0:8
@"MPModelPlaylistEntry"16@0:8
@"MPModelPlaylist"16@0:8
@"MPModelRadioStation"16@0:8
{?=dddddffBB}24@0:8@16
@"NSString"24@0:8@"CPUINowPlayingViewController"16
@"UIImage"24@0:8@"CPUINowPlayingViewController"16
B24@0:8@"CPUINowPlayingViewController"16
{?=dddddffBB}24@0:8@"CPUINowPlayingViewController"16
q24@0:8@"CPUINowPlayingViewController"16
B56@0:8@16q24o^@32@40o^B48
B32@0:8@16q24
B56@0:8@"CPUINowPlayingViewController"16q24o^@32@"NSString"40o^B48
B32@0:8@"CPUINowPlayingViewController"16q24
v40@0:8@"CPUINowPlayingViewController"16q24q32
v24@0:8@"CPUINowPlayingViewController"16
@"NSNumber"24@0:8@"CPUINowPlayingViewController"16
@"NSArray"24@0:8@"CPUINowPlayingViewController"16
v32@0:8@"CPUINowPlayingViewController"16@"CPUIMediaButton"24
B24@0:8q16
@"MPModelSong"
@"MPModelPlaylistEntry"
@"MPModelPlaylist"
@"MPModelRadioStation"
@"<MCDNowPlayingContentManagerDelegate>"
@"MPCPlayerResponse"
@"MPCPlayerResponseItem"
@"MPRequestResponseController"
@"MPArtworkCatalog"
@"<MCDNowPlayingDataSource>"
@"MSVTimer"
d16@0:8
@32@0:8d16q24
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"<MCDErrorViewDelegate>"
@48@0:8@16d24q32q40
@32@0:8@16d24
B32@0:8@"UITabBarController"16@"UIViewController"24
v32@0:8@"UITabBarController"16@"UIViewController"24
v32@0:8@"UITabBarController"16@"NSArray"24
v36@0:8@"UITabBarController"16@"NSArray"24B32
Q24@0:8@"UITabBarController"16
q24@0:8@"UITabBarController"16
@"<UIViewControllerInteractiveTransitioning>"32@0:8@"UITabBarController"16@"<UIViewControllerAnimatedTransitioning>"24
@"<UIViewControllerAnimatedTransitioning>"40@0:8@"UITabBarController"16@"UIViewController"24@"UIViewController"32
@28@0:8Q16B24
@"UITabBarController"
@"CPUINowPlayingButtonWrapperView"
MCDBrowsableContentNowPlayingIdentifiersUpdatedNotification
v8@?0
com.apple.podcasts
MCDBrowsableContentViewControllerQueue
<%@: %p [%@]>
v16@?0I8I12
MusicCarDisplayUI
ERROR_LOADING_ITEM
v16@?0@"NSError"8
v24@?0Q8^B16
v32@?0@"CPUITableCell"8Q16^B24
v12@?0B8
com.apple.Music
com.apple.iBooks
com.apple.MusicApplication
com.apple.Music.CarPlay
carplay
com.apple.Music.LibraryView
com.apple.Music.LibraryView.Albums.Detail
com.apple.Music.LibraryView.Albums
com.apple.Music.LibraryView.Artists
com.apple.Music.LibraryView.Compilations
com.apple.Music.LibraryView.Composers
com.apple.Music.LibraryView.RecentlyAdded
com.apple.Music.LibraryView.Songs
com.apple.Music.LibraryView.MadeForYou
com.apple.Music.LibraryView.Downloaded
com.apple.Music.LibraryView.Loved
com.apple.Music.LibraryView.Genres
com.apple.Music.LibraryView.Playlists
com.apple.Music.LibraryView.Playlists.Detail
com.apple.Music.ForYou
com.apple.Music.Browse
com.apple.Music.Radio
ByArtist
ByAlbum
ByTitle
ByPlaylistType
ByLibraryAddedDate
ByLastDevicePlaybackDate
ByLastModifiedDate
ByAscendingYear
ByDescendingYear
ByPlaylistOrderAscending
ByPlaylistOrderDescending
ByReleaseDateAscending
ByReleaseDateDescending
MCDNowPlayingWillAppearNotification
MCDNowPlayingWillDisappearNotification
MCDPlaybackStateChangedNotification
com.apple.MobileMusicPlayer.MusicCarDisplayUI
music.square.stack
19.circle.fill
e.square.fill
PLAYBACK_RATE_SPEED_HALF
PLAYBACK_RATE_SPEED_THREE_QUARTERS
PLAYBACK_RATE_SPEED_ONE_AND_QUARTER
PLAYBACK_RATE_SPEED_ONE_AND_HALF
PLAYBACK_RATE
%d Song(s)
%d Minute(s)
ALBUM_DETAIL_FORMAT_FULL
ROOT
CarPlay Now Playing Request - Playable Content
com.apple.MusicCarDisplayUI.playableContent.invalidate
[%@:%@]
PLAYBACK_QUEUE_TITLE
AppName_PlaybackQueue
POSITION_IN_PLAYLIST_FORMAT
com.apple.MusicCarDisplayUI.playableContent.mediaRemote
com.apple.MusicCarDisplayUI.playableContent.mediaRemote.items
v12@?0C8
v16@?0^{__CFArray=}8
v16@?0Q8
<%@: %p - (%@) (%@) [%@%@]>
com.apple.MusicCarDisplayUI.playableContent.serialContainerAccess
<%@:%p - [%@:%@] - %@>
v40@?0@"NSArray"8{_NSRange=QQ}16@"NSError"32
v24@?0q8@"NSError"16
v20@?0B8@"NSError"12
v16@?0@"NSArray"8
nowPlayingChange
didInvalidate
didInitiatePlayback
didUpdateContent
appReadyToFetch
indexPath
item
items
model
error
MCDError
com.apple.MCDSerialProcessingQueue
General
com.apple.MusicCarDisplay
com.apple.MusicCarPlay
MCDContentItemsChangedNotification
v24@?0@8@"UIImage"16
line.horizontal.3.decrease.circle
square.fill
pause.fill
play.fill
goforward
gobackward
%@.%@
LIKE_TRACK_DEFAULT_TITLE
DISLIKE_TRACK_DEFAULT_TITLE
CANCEL
v16@?0@"UIAlertAction"8
NO_CONTENT_TITLE
NO_CONTENT_SUBTITLE
LOADING_TITLE
FUSE_TIMEOUT_TITLE
Try Again
com.apple.MusicCarDisplayUI.playableContent.navigationController
Posting MCDBrowsableContentNowPlayingIdentifiersUpdatedNotification
Playable Content API implemented? %d
Showing loading screen
Showing timeout screen
Retrying container reload, showing loading screen
Retrying full refresh, showing loading screen
Cell displayed: title: %{public}@, subtitle: %{public}@, showExplicit: %{public}d, showCloud: %{public}d, shouldShowPlaybackProgress: %{public}d, playbackProgress: %{public}f, currentlyPlaying: %{public}d, isContainer: %{public}d
Loading content timed out, displaying error: %{public}@
Selected playable content, preparing to play back
Initiating playback failed due to timeout
Initiating playback failed, displaying error: %{public}@
Initiating playback complete, preparing to push to now playing
Selected container, preparing to push to container
Container preparation complete, pushing to container
Selected neither a container nor a playable cell
Some content have invalidated, preparing to reload table view: %{public}@, indicies: %{public}@
Content was invalidated, but there are no indexes to reload.
Content that has been been invalidated is visible, reloading those index paths in table view: %{public}@, indicies: %{public}@
Content has been invalidated, but view isn't finished loading yet. Container: %{public}@, indicies: %{public}@
The container changed count, preparing to reload
Fetching content for root container
Fetching content for non-root container: %{public}@
No container available to refresh.
Refreshing content complete for container: %{public}@
Root container has content
Root container does not have content
Completed refresh for container %{public}@
Now Playing button tapped in table view, pushing to Now Playing
Pushing to Now Playing view
Loading content in table controller for the first time since app registered
Limited UI changed from %{public}@ to %{public}@
Initializing a new view for bundle: %@
Received kMRMediaRemoteBrowsableContentNowPlayingIdentifiersUpdatedNotification
Rebuilding stack for app launch
Creating view controller for sectioned browsing
Creating view controller for table view browsing
App does not use browsable content API, pushing to now playing
Now Playing view already frontmost when Now Playing app tapped
popping from view controller to Now Playing view
Sending play command since the app supports immediate playback
Show Now Playing view on app foreground
Cancelling extra model invalidation for %{public}@.
Playable content invalidated, refreshing all index paths for %{public}@
Fetched current view controllers to reload after playable content invalidated for %{public}@: %{public}@
Adding MCDBrowsableContentTableViewController after model invalidate
Container is valid for table view
Container isn't valid for refreshed parent for table views
Next view controller is neither a table view nor now playing view when current VC is a table view, which shouldn't be here: %{public}@
Adding MCDBrowsableNavigationController to view controllers after model invalidate for %{public}@
Container is valid for tab bar
Container isn't valid for tab bar
Next view controller is neither a table view nor a now playing view when current VC is a tab bar, which shouldn't be here: %{public}@
Adding now playing view controller for model invalidate for %{public}@
Setting view controllers after model invalidate for %{public}@
current stack: %@
Hiding back button: %d
Row selected in Playback Queue, dismissing Playback Queue screen
All playback completed, dismissing Now Playing screen
%{public}@ is now playing app? %{public}@
Data source invalidated
Posting MCDPCDidInvalidateNotificationName
Content items updated
Content items updated for wrong app, expected %{public}@, got %{public}@
Got content items updated notification, but no updated content items
Posting MCDPCDidUpdateContentNotificationName
Posting MCDPCNowPlayingDidChangeNotificationName
Posting MCDPCAppReadyToFetchNotificationName
beginLoadingPlayableContent API is not implemented
Beginning to load item at index path: %{public}@
beginLoadingPlayableContent API is not implemented, receiving unsupported operation for index path: %{public}@
beginLoadingPlayableContent API error, code: %d
beginLoadingPlayableContent API in progress for %{public}@
beginLoadingPlayableContent API timed out, completion block wasn't called for index path: %{public}@
Received kMRMediaRemoteApplicationFinishedLoadingContentNotification for index path: %{public}@, beginLoadingPlayableContent API error: %{public}@
Received kMRMediaRemoteApplicationFinishedLoadingContentNotification without error for index path: %{public}@
Received kMRMediaRemoteApplicationFinishedLoadingContentNotification with error: %{public}@, but completion block is null for index path: %{public}@
Received kMRMediaRemoteApplicationFinishedLoadingContentNotification, but completion block is null for index path: %{public}@
Received kMRMediaRemoteApplicationFinishedLoadingContentNotification, beginLoadingPlayableContent API not implemented for index path: %{public}@
Received kMRMediaRemoteApplicationFinishedLoadingContentNotification, beginLoadingPlayableContent API not implemented and null completion block for index path: %{public}@
childItemsDisplayPlaybackProgress API is not implemented
Preparing to fetch if children support playback progress for index path: %{public}@
Fetched children supporting playback progress for index path: %{public}@
Children support playback progress timed out for: %{public}@
now playing identifiers API is not implemented
Preparing to fetch now playing identifiers
Fetched now playing identifiers
Fetching count of children at index path: %@
Completed fetching count of children at index path: %{public}@, number of children: %{public}llu
Fetching children at index path: %{public}@
Completed fetching children at index path: %{public}@
Finishing initial load
Asking MediaRemote to initialize playback for index path: %{public}@
Received kMRMediaRemoteApplicationInitiatedPlaybackOfContentItemNotification
Adding %{public}@ to items dictionary
Updating artwork to %{public}@
Have artwork data, but artwork is nil for %{public}@
Artwork is nil for %{public}@
Content items updated, preparing to find indicies to update
Index was nil for %{public}@
Contents updated for container: %{public}@, indicies: %{public}@
Now Playing Identifiers changed, checking to see what is now playing
Item currently playing. Identifier: %{public}@
Item not currently playing. Identifier: %{public}@
Item currently playing has changed, updating indicies
Indicies invalidated based on now playing identifiers
Starting to refresh for %@
Finishing refresh for %@
Starting to refresh all items, beginning with beginLoadingItem
Begin Loading completed for refreshing all items
Completed invalidation, resetting
Preparing to begin loading item %@
Finished begin loading item %@
Skipping item %@ without identifier
Finished adding items to cache
Cancelling all operations on MCDMediaRemoteSerialQueueManager
Operation is cancelled, not executing
Disabling up next queue; no items in queue.
Disabling up next queue; livestreaming content.
Disabling up next queue for AudioBooks.
Playing content has changed, posting notification
Timeout while waiting for artworkCatalog=%p
Sending reverse seek command
Sending end reverse seek command
Sending skip backwards command
Opening action sheet for like/dislike command
Sending previous item command
Sending stop command
Sending pause command
Sending play command
Sending forward seek command
Sending end forward seek command
Sending skip forward command
Sending forward item command
Retry button pressed
Loading content in tab controller for the first time since app registered
finished loading content after the view appeared, setting tabs
Received MCDPCNowPlayingDidChangeNotificationName
Accessory view already set.
Showing Now Playing button in tab bar
Hiding Now Playing button in tab bar
No Now Playing button hide needed.
Now playing button tapped in tab bar, pushing to Now Playing screen
Some content has invalidated, preparing to reload tab views for container: %{public}@, indicies: %{public}@
Reloading specific tabs since they are invalid for container: %{public}@, indicies: %{public}@
Reloading all host tabs since table views are nil for container: %{public}@, indicies: %{public}@
Tab view not visible for container indicies reload: %{public}@, indicies: %{public}@
No tabs available from host, loading default tabs for %{public}@
Scheduling dummy tab reload for %{public}@
Performing dummy tab reload for %{public}@
Number of tabs returned from client %{public}@: %{public}ld
Refreshing view controller %{public}@ because it is the selected index: %{public}ld
View controller %{public}@ is not selected but is reloaded, begin loading item
Dummy tab, no need to refresh in %{public}@
Reloading tabs after invalidate
Finished reloading tabs after invalidate
Tab selected, reloading content for %{public}@
Examining existing tab bar item and artwork for item: %@
Titles differ; invalidating tab bar item: %@
New image provided; invalidating tab bar item: %@
Repurposing tab bar item and artwork for tab bar item: %@
No existing tab bar item and artwork for item: %@
Creating tab bar item for item: %@, artwork is nil? %@
Adding view controller for tab: %@, artwork is nil? %@
Adding title for tab: %@, artwork is nil? %@
Container finished initial load when viewWillAppear is called, start loading host tabs
viewWillAppear called for MCDBrowsableContentNavigationController, but container isn't finished loading yet
Container finished initial load when viewDidAppear is called, start loading host tabs
viewDidAppear called for MCDBrowsableContentNavigationController, but container isn't finished loading yet
traitCollectionDidChange is called
333333
?333333
MCDBrowsableContentUtilities
MCDBrowsableContentTableViewController
UITableViewDataSource
NSObject
UITableViewDelegate
UIScrollViewDelegate
UIGestureRecognizerDelegate
MCDPCContainerDelegate
MCDErrorViewDelegate
CARSessionObserving
_MCDBrowsableTableView
CarDisplay
MCDPlayableContentNowPlayingDataSource
MCDNowPlayingDataSource
MCDPlayableContentViewController
UINavigationControllerDelegate
_MCDStackItem
MCDNowPlayingViewController
MCDNowPlayingContentManagerDelegate
MCDPCModel
MCDPCItem
MCDPCContainer
MCDMediaRemoteSerialQueueManager
_MCDNowPlayingContentManager
MPRequestResponseControllerDelegate
MCDNowPlayingContentManagerProtocol
CPUINowPlayingViewControllerDataSource
CPUINowPlayingViewControllerDelegate
MCDPlayableContentPlaybackManager
MCDNoContentView
MCDLoadingContentView
MCDErrorLoadingView
MCDGlyph
MCDBrowsableContentNavigationController
UITabBarControllerDelegate
MCDPlayableContentQueueTableViewController
MCDAlertController
nowPlayingIndicator
objectForKeyedSubscript:
trailingAnchor
addOperationWithBlock:
setName:
sharedNetworkObserver
setPlayingItemProperties:
length
subviews
initWithBytes:length:
fontWithDescriptor:size:
artist
setBackgroundColor:
buttonWithType:
leadingAnchor
composer
newlineCharacterSet
scale
_currentTraitCollection
playingItemIndexPath
setMusicCellularStreamingAllowed:
setPlayerPath:
setDestinationScale:
objectForKey:
radioStation
_carSystemPrimaryColor
indexAtPosition:
initWithBundleIdentifier:
safeAreaLayoutGuide
setAutoresizingMask:
arrayWithObjects:count:
tracksTiledArtworkCatalogWithRows:columns:
floatValue
bundleWithIdentifier:
isCancelled
imageWithSymbolConfiguration:
dictionaryWithObjects:forKeys:count:
navigationItem
addOperation:
objectEnumerator
componentsSeparatedByCharactersInSet:
setWidth:
setMaximumFractionDigits:
setDestination:configurationBlock:
array
tracklist
isArtworkVisuallyIdenticalToCatalog:
setPlaybackState:
layoutIfNeeded
stringWithFormat:
flattenedGenericObject
dictionary
objectAtIndexedSubscript:
playingItemGlobalIndex
bundleIdentifier
navigationController
setMaxConcurrentOperationCount:
componentsJoinedByString:
name
addObserver:selector:name:object:
safeAreaInsets
setPlaybackRate:
wishlistCommand
object
stringFromSeconds:
imageWithSize:
applyConfiguration:
isAnimating
deselectRowAtIndexPath:animated:
imageWithRenderingMode:
setSessionObserver:
addObject:
compare:
flashScrollIndicators
setViewControllers:
keyEnumerator
applicationProxyForIdentifier:
mutableCopy
addLayoutGuide:
stringFromNumber:
window
pushViewController:animated:
jumpByInterval:
bounds
setLineBreakMode:
_accessoryView
colorWithAlphaComponent:
imageWithData:
topAnchor
numberWithUnsignedInteger:
playerPath
widthAnchor
bottomAnchor
stopAnimating
changeValue:
appendString:
setAlpha:
_carSystemSecondaryColor
setSelected:
defaultManager
addIndex:
stop
numberWithLong:
playbackRateCommand
firstObject
setUsesSignificantDigits:
titleLabel
changeToItem:
_labelColor
containsObject:
appendFormat:
rightHandDrive
propertySetWithProperties:
initWithBarButtonSystemItem:target:action:
addExecutionBlock:
boolValue
defaultCenter
state
numberWithInteger:
visibleViewController
metadataObject
setLevelGuttersColor:
setUsesGroupingSeparator:
integerValue
setTranslatesAutoresizingMaskIntoConstraints:
addConstraints:
initWithActivityIndicatorStyle:
changeItemCommand
heightAnchor
boldSystemFontOfSize:
setScrollEnabled:
numberWithFloat:
rightBarButtonItems
setPlayButtonImageName:
initForAutolayout
visibleCells
errorWithDomain:code:userInfo:
beginSeekWithDirection:
itemAtIndexPath:
previousItem
startAnimating
centerXAnchor
timerWithInterval:repeats:block:
setRowHeight:
anyObject
numberWithDouble:
response
presentingViewController
setTracklistRange:
setLabel:
addAction:
localizedTitle
initWithTitle:image:selectedImage:
setActivityIndicatorViewStyle:
setPauseButtonImageName:
textLabel
numberWithBool:
enumerateObjectsUsingBlock:
cellForTableView:
numberOfSections
currentSession
song
animateWithDuration:animations:completion:
presentViewController:animated:completion:
viewControllers
indexSet
localizedStringWithFormat:
preferredPlaybackRate
enumerateIndexesUsingBlock:
cellForRowAtIndexPath:
setObject:forKeyedSubscript:
setTitleView:
_carScreen
snapshotViewAfterScreenUpdates:
_setCurrentTraitCollection:
endSeek
allObjects
_capabilityForKey:
indexPathsForVisibleRows
repeatType
setObject:forKey:
localizedStringForKey:value:table:
globalItemCount
setHidesBackButton:
allKeys
localizedShortTitle
setTitle:forState:
initWithProperties:relationships:
view
_setChecked:
preferredForwardJumpIntervals
activateConstraints:
sizeToFit
setHidden:
play
setRightBarButtonItems:
tableBackgroundColor
indexPathsForSelectedRows
repeatCommand
tabBarItem
valueForKey:
setTitle:
isMusicCellularStreamingAllowed
_setAccessoryView:
setNumberStyle:
size
preferredFontDescriptorWithTextStyle:addingSymbolicTraits:options:
alertControllerWithTitle:message:preferredStyle:
setAccessoryView:
indexPathWithIndexes:length:
setNumberOfLines:
value
localizedNameForContext:
endAutomaticResponseLoading
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
countByEnumeratingWithState:objects:count:
setRightBarButtonItem:
initWithName:object:userInfo:
shuffleType
setTextColor:
isExplicitSong
tabBar
cancelPreviousPerformRequestsWithTarget:selector:object:
actionWithTitle:style:handler:
removeObserver:name:object:
setColor:
preferredBackwardJumpIntervals
_carSystemFocusColor
setRequest:
initWithFrame:bundleIdentifier:
constraintEqualToConstant:
localizedName
count
indexPathForSelectedRow
duration
systemImageNamed:compatibleWithTraitCollection:
shuffleCommand
setTextAlignment:
accessoryWithDisclosureIndicator
userInterfaceIdiom
removeObserver:
beginAutomaticResponseLoading
selectedViewController
setNumberOfLevels:
postNotificationName:object:userInfo:
getIndexes:
performSelector:withObject:afterDelay:
setCharge:
setText:
indexPathForRow:inSection:
copy
localizedDescription
setRemembersLastFocusedIndexPath:
userInfo
constraintEqualToAnchor:multiplier:constant:
accessoryWithCloudIcon
performRequest:options:completion:
indexPathForGlobalIndex:
configuration
drawInRect:
removeFromSuperview
setQueueSectionProperties:
isEqualToString:
album
showViewController:sender:
doubleValue
systemFontOfSize:
contentView
selectedIndex
postNotificationName:object:
constraintEqualToAnchor:constant:
setTag:
performRequest:completion:
setFrame:
setQueueItemProperties:
isEqualToNumber:
ageVerificationState
nowPlayingButton
constraintEqualToAnchor:
popViewControllerAnimated:
supportsFocus
indexPathForCell:
setFont:
type
initWithCustomView:
pause
domain
seekCommand
supportedPlaybackRates
advance
setFittingSize:
setNeedsLayout
isEqualToArray:
indexPathByRemovingLastIndex
nowPlayingAlbumArtMode
popToViewController:animated:
sectionAtIndex:
setQualityOfService:
limitableUserInterfaces
pathWithRoute:bundleID:playerID:
treatment
reloadRowsAtIndexPaths:withRowAnimation:
setTableDataSource:
dismissViewControllerAnimated:completion:
setCacheIdentifier:forRequestingContext:
addTarget:action:forControlEvents:
setTabBarItem:
configurationWithText:detailText:image:showExplicit:accessory:showActivityIndicator:showPlaybackProgress:playbackProgress:currentlyPlaying:
setNavigationBarHidden:animated:
playlistEntry
configurationWithPointSize:weight:scale:
transportControlView
dislikeCommand
shouldShowComposer
limitUserInterfaces
indexPathByAddingIndex:
section
nextObject
reloadData
setPriority:
setFilterType:
likeCommand
operationCount
setNavigationBarHidden:
addSubview:
nextItem
playlist
registerClass:forCellReuseIdentifier:
screen
artwork
superview
bytes
frame
_systemImageNamed:
indexOfObject:
traitCollection
sharedInstance
setNowPlayingIdentifiers:
firstPartyAppBundleIDs
nowPlayingIdentifiers
.cxx_destruct
_nowPlayingIdentifiers
T@"NSArray",&,N,V_nowPlayingIdentifiers
T@"NSArray",R,N
initWithNibName:bundle:
_limitedUIChanged:
_nowPlayingDidChange:
_appRegisteredForContent:
_playbackStateChanged:
dealloc
viewDidLoad
viewWillAppear:
viewDidAppear:
viewWillDisappear:
viewDidDisappear:
viewDidLayoutSubviews
traitCollectionDidChange:
preferredFocusEnvironments
_displayLoadingActivity
_nowPlayingButtonTapped:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
tableView:numberOfRowsInSection:
tableView:cellForRowAtIndexPath:
numberOfSectionsInTableView:
tableView:titleForHeaderInSection:
tableView:titleForFooterInSection:
tableView:canEditRowAtIndexPath:
tableView:canMoveRowAtIndexPath:
sectionIndexTitlesForTableView:
tableView:sectionForSectionIndexTitle:atIndex:
tableView:commitEditingStyle:forRowAtIndexPath:
tableView:moveRowAtIndexPath:toIndexPath:
scrollViewDidScroll:
scrollViewDidZoom:
scrollViewWillBeginDragging:
scrollViewWillEndDragging:withVelocity:targetContentOffset:
scrollViewDidEndDragging:willDecelerate:
scrollViewWillBeginDecelerating:
scrollViewDidEndDecelerating:
scrollViewDidEndScrollingAnimation:
viewForZoomingInScrollView:
scrollViewWillBeginZooming:withView:
scrollViewDidEndZooming:withView:atScale:
scrollViewShouldScrollToTop:
scrollViewDidScrollToTop:
scrollViewDidChangeAdjustedContentInset:
tableView:willDisplayCell:forRowAtIndexPath:
tableView:willDisplayHeaderView:forSection:
tableView:willDisplayFooterView:forSection:
tableView:didEndDisplayingCell:forRowAtIndexPath:
tableView:didEndDisplayingHeaderView:forSection:
tableView:didEndDisplayingFooterView:forSection:
tableView:heightForRowAtIndexPath:
tableView:heightForHeaderInSection:
tableView:heightForFooterInSection:
tableView:estimatedHeightForRowAtIndexPath:
tableView:estimatedHeightForHeaderInSection:
tableView:estimatedHeightForFooterInSection:
tableView:viewForHeaderInSection:
tableView:viewForFooterInSection:
tableView:accessoryTypeForRowWithIndexPath:
tableView:accessoryButtonTappedForRowWithIndexPath:
tableView:shouldHighlightRowAtIndexPath:
tableView:didHighlightRowAtIndexPath:
tableView:didUnhighlightRowAtIndexPath:
tableView:willSelectRowAtIndexPath:
tableView:willDeselectRowAtIndexPath:
tableView:didSelectRowAtIndexPath:
tableView:didDeselectRowAtIndexPath:
tableView:canPerformPrimaryActionForRowAtIndexPath:
tableView:performPrimaryActionForRowAtIndexPath:
tableView:editingStyleForRowAtIndexPath:
tableView:titleForDeleteConfirmationButtonForRowAtIndexPath:
tableView:editActionsForRowAtIndexPath:
tableView:leadingSwipeActionsConfigurationForRowAtIndexPath:
tableView:trailingSwipeActionsConfigurationForRowAtIndexPath:
tableView:shouldIndentWhileEditingRowAtIndexPath:
tableView:willBeginEditingRowAtIndexPath:
tableView:didEndEditingRowAtIndexPath:
tableView:targetIndexPathForMoveFromRowAtIndexPath:toProposedIndexPath:
tableView:indentationLevelForRowAtIndexPath:
tableView:shouldShowMenuForRowAtIndexPath:
tableView:canPerformAction:forRowAtIndexPath:withSender:
tableView:performAction:forRowAtIndexPath:withSender:
tableView:canFocusRowAtIndexPath:
tableView:shouldUpdateFocusInContext:
tableView:didUpdateFocusInContext:withAnimationCoordinator:
indexPathForPreferredFocusedViewInTableView:
tableView:selectionFollowsFocusForRowAtIndexPath:
tableView:shouldSpringLoadRowAtIndexPath:withContext:
tableView:shouldBeginMultipleSelectionInteractionAtIndexPath:
tableView:didBeginMultipleSelectionInteractionAtIndexPath:
tableViewDidEndMultipleSelectionInteraction:
tableView:contextMenuConfigurationForRowAtIndexPath:point:
tableView:previewForHighlightingContextMenuWithConfiguration:
tableView:previewForDismissingContextMenuWithConfiguration:
tableView:willPerformPreviewActionForMenuWithConfiguration:animator:
tableView:willDisplayContextMenuWithConfiguration:animator:
tableView:willEndContextMenuInteractionWithConfiguration:animator:
gestureRecognizerShouldBegin:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
gestureRecognizer:shouldReceiveEvent:
container:didInvalidateIndicies:
containerWillChangeCount:
containerDidChangeCount:
errorViewDidTapButton:
startedConnectionAttemptOnTransport:
cancelledConnectionAttemptOnTransport:
sessionDidConnect:
sessionDidDisconnect:
session:didUpdateConfiguration:
initWithContainer:
initWithContainer:tabbedBrowsing:
_showLoadingScreen
_showTimeoutScreen
_replacePlaceholderViewWithView:
contentScrollView
_configureCell:forIndexPath:
tableView:didFocusRowAtIndexPath:
_displayErrorAlertController:
_clearLoadingActivity
reloadWithCompletion:
reloadTable
_updateNowPlayingButtonVisibility
_pushToNowPlaying:
_clearTableViewSelectionAnimated:
_shouldLimitLists
container
setContainer:
isVisible
setVisible:
selectedIndexPath
setSelectedIndexPath:
placeholderView
setPlaceholderView:
currentlyPlayingApp
setCurrentlyPlayingApp:
loadingTimer
setLoadingTimer:
alertController
setAlertController:
pushToNowPlaying
setPushToNowPlaying:
didFinishInitialLoad
setDidFinishInitialLoad:
didFinishInitialViewAppear
setDidFinishInitialViewAppear:
_tableView
_nowPlayingButton
_count
_selectedNextIndexPath
_dataSource
_reselectIndexPath
_loadingTimer
_delayTimer
_MCD_tableView
_serialQueue
_carSessionStatus
_limited
_hasCarScreen
_hasNoBrowsableContent
_didPushToNowPlayingAtLaunch
_isRootTableViewController
_hasTabbedBrowsing
_visible
_currentlyPlayingApp
_pushToNowPlaying
_didFinishInitialLoad
_didFinishInitialViewAppear
_container
_selectedIndexPath
_placeholderView
_alertController
visible
TB,N,GisVisible,V_visible
T@"NSIndexPath",&,N,V_selectedIndexPath
T@"UIView",&,N,V_placeholderView
TB,N,V_currentlyPlayingApp
T@"MPWeakTimer",&,N,V_loadingTimer
T@"UIAlertController",&,N,V_alertController
TB,N,V_pushToNowPlaying
T@"MCDPCContainer",&,N,V_container
TB,N,V_didFinishInitialLoad
TB,N,V_didFinishInitialViewAppear
canBecomeFirstResponder
albumImageWithFallbackForSize:doubleLineRow:
car_scaledImageWithSize:
playingItemProperties
queueItemProperties
requestLabel
queueSectionProperties
_itemProperties
init
_modelDidInvalidate:
_nowPlayingIdentifiersChanged:
setViewControllers:animated:
navigationController:willShowViewController:animated:
navigationController:didShowViewController:animated:
navigationControllerSupportedInterfaceOrientations:
navigationControllerPreferredInterfaceOrientationForPresentation:
navigationController:interactionControllerForAnimationController:
navigationController:animationControllerForOperation:fromViewController:toViewController:
initWithBundleID:stack:
initWithBundleID:
_createSectionedRootViewController
_createRootViewController
_setupView
refreshNavigationStackForLaunch
_populateStack
currentStack
bundleID
modelInvalidationQueue
setModelInvalidationQueue:
_model
_rootContainer
_stackToRebuild
_hasBrowsableContent
_hasSectionedContent
_hasLoaded
_bundleID
_modelInvalidationQueue
T@"NSOperationQueue",&,N,V_modelInvalidationQueue
T@"NSString",R,C,N,V_bundleID
stackItemWithContainer:
identifier
indexPath
_identifier
_indexPath
T@"NSString",R,N,V_identifier
T@"NSIndexPath",R,N,V_indexPath
initWithBundleIdentifier:dataSource:delegate:
_updateBackButton
upNextButtonTapped:
nowPlayingViewControllerCanShowUpNext:
contentManager:processResponse:error:
contentManager:shouldShowPlaybackQueue:
contentManagerReloadData:
contentManager:presentViewController:
contentManager:bufferingItem:
contentManagerInitiatedPlaybackFromPlaybackQueue:
contentManager:displayItemIndex:totalItemCount:
contentManagerCompletedAllPlayback:
contentManager:sectionName:
contentManager:itemDidChange:response:
initWithBundleID:appName:
initWithPlayableBundleID:appName:
setContentManager:
willMoveToParentViewController:
_handleWillAppear
setRightTitle:
_adjustRightTitleLabelToFit
_popViewControllerAnimated
_setupActivityTimer
_invalidateActivityTimer
showNavigationBar
setShowNavigationBar:
playbackQueueViewController
setPlaybackQueueViewController:
contentManager
backButton
setBackButton:
activityIndicator
setActivityIndicator:
activityIndicatorBarButtonItem
setActivityIndicatorBarButtonItem:
trackBuffering
setTrackBuffering:
appName
setAppName:
activityTimer
setActivityTimer:
rightTitleLabel
setRightTitleLabel:
rightTitleLabelBarButtonItem
setRightTitleLabelBarButtonItem:
playbackQueueBarButtonItem
setPlaybackQueueBarButtonItem:
handledWillAppear
setHandledWillAppear:
shouldShowPlaybackQueue
setShouldShowPlaybackQueue:
_showNavigationBar
_trackBuffering
_handledWillAppear
_shouldShowPlaybackQueue
_playbackQueueViewController
_contentManager
_backButton
_activityIndicator
_activityIndicatorBarButtonItem
_appName
_activityTimer
_rightTitleLabel
_rightTitleLabelBarButtonItem
_playbackQueueBarButtonItem
T@"UIBarButtonItem",&,N,V_backButton
T@"UIActivityIndicatorView",&,N,V_activityIndicator
T@"UIBarButtonItem",&,N,V_activityIndicatorBarButtonItem
TB,N,V_trackBuffering
T@"NSString",&,N,V_appName
T@"MPWeakTimer",&,N,V_activityTimer
T@"UILabel",&,N,V_rightTitleLabel
T@"UIBarButtonItem",&,N,V_rightTitleLabelBarButtonItem
T@"UIBarButtonItem",&,N,V_playbackQueueBarButtonItem
TB,N,V_handledWillAppear
TB,N,V_shouldShowPlaybackQueue
TB,N,V_showNavigationBar
T@"UITableViewController",&,N,V_playbackQueueViewController
T@"<MCDNowPlayingContentManagerProtocol>",&,N,V_contentManager
_dataSourceInvalidated:
_contentItemsUpdated:
_nowPlayingDidChangeNotification:
_finishBeginLoadingNotification:
_finishPlaybackNotification:
_registerForClientContent
_registerNotifications
_browsableContentDidRegisterNotification:
appTitle
containerForRoot
beginLoadingItemAtIndexPath:completion:
getChildrenSupportsPlaybackProgressForIndexPath:withCompletion:
getNowPlayingIdentifiersWithCompletion:
getCountOfChildrenAtIndexPath:withCompletion:
getChildrenAtIndexPath:inRange:completion:
initiatePlaybackAtIndexPath:completion:
_errorForNotification:
_setupBeginLoadingTimeoutTimerWithCompletion:
_invalidateBeginLoadingTimeoutTimer
_setupPlaybackProgressTimeoutTimerWithCompletion:
_invalidatePlaybackProgressTimeoutTimer
itemsFromMRContentItems:
rootItem
imageSize
setImageSize:
playableContentPlaybackManager
setPlayableContentPlaybackManager:
isCurrentPlayingApp
setCurrentPlayingApp:
playbackCompletion
setPlaybackCompletion:
containerCompletion
setContainerCompletion:
items
setItems:
supportedAPIMask
setSupportedAPIMask:
beginLoadingBlocks
setBeginLoadingBlocks:
beginLoadingTimeoutTimer
setBeginLoadingTimeoutTimer:
playbackProgressTimeoutTimer
setPlaybackProgressTimeoutTimer:
mediaRemoteNotificationQueue
setMediaRemoteNotificationQueue:
mediaRemoteItemQueue
setMediaRemoteItemQueue:
_currentPlayingApp
_supportedAPIMask
_rootItem
_playableContentPlaybackManager
_playbackCompletion
_containerCompletion
_items
_beginLoadingBlocks
_beginLoadingTimeoutTimer
_playbackProgressTimeoutTimer
_mediaRemoteNotificationQueue
_mediaRemoteItemQueue
_imageSize
T@"MCDPlayableContentPlaybackManager",&,N,V_playableContentPlaybackManager
currentPlayingApp
TB,N,GisCurrentPlayingApp,V_currentPlayingApp
T@?,C,N,V_playbackCompletion
T@?,C,N,V_containerCompletion
T@"NSMutableDictionary",&,N,V_items
TI,N,V_supportedAPIMask
T@"NSMutableDictionary",&,N,V_beginLoadingBlocks
T@"MPWeakTimer",&,N,V_beginLoadingTimeoutTimer
T@"MPWeakTimer",&,N,V_playbackProgressTimeoutTimer
T@"NSObject<OS_dispatch_queue>",&,N,V_mediaRemoteNotificationQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_mediaRemoteItemQueue
T@"MCDPCItem",R,N,V_rootItem
T@"NSString",R,N
T{CGSize=dd},N,V_imageSize
_initWithModel:MRContentItem:
title
subtitle
artworkData
playbackProgress
isPlayable
isContainer
isCloudItem
currentlyPlaying
setCurrentlyPlaying:
isExplicitItem
artworkImage
setArtworkImage:
model
_isPlayable
_isContainer
_isCloudItem
_currentlyPlaying
_isExplicitItem
_playbackProgress
_title
_subtitle
_artworkData
_artworkImage
T@"MCDPCModel",R,W,N,V_model
TB,N,V_currentlyPlaying
T@"UIImage",&,N,V_artworkImage
T@"NSString",R,N,V_title
T@"NSString",R,N,V_subtitle
T@"NSData",R,N,V_artworkData
Tf,R,N,V_playbackProgress
TB,R,N,V_isPlayable
TB,R,N,V_isContainer
TB,R,N,V_isCloudItem
TB,R,N,V_isExplicitItem
_nowPlayingIdentifiersDidChange:
_initWithModel:rootItem:indexPath:
invalidate
setDelegate:
setShowPlaybackProgress:
showCurrentlyPlayingIndex
setCount:
containerForItem:
containerAtIndex:
updateRootItemWithCompletion:
fetchContentWithCompletion:
refreshWithCompletion:
isValidForRefreshedParent:
beginLoadingItem:completion:
beginLoadingItemWithCompletion:
getPlaybackProgressSupportForChildrenWithCompletion:
getCountOfChildrenWithCompletion:
getChildrenInRange:completion:
cachedItemForIndex:
cachedItemForIdentifier:
cachedIndexByIdentifier:
cachedCount
setCachedCount:
showPlaybackProgress
delegate
serialAccessContainerQueue
setSerialAccessContainerQueue:
cachedIndiciesByIdentifier
setCachedIndiciesByIdentifier:
cachedItemsByIndicies
setCachedItemsByIndicies:
_showPlaybackProgress
__supportedDelegateCalls
_cachedCount
_delegate
_serialAccessContainerQueue
_cachedIndiciesByIdentifier
_cachedItemsByIndicies
Tq,N,V_cachedCount
T@"NSObject<OS_dispatch_queue>",&,N,V_serialAccessContainerQueue
T@"NSMutableDictionary",&,N,V_cachedIndiciesByIdentifier
T@"NSMutableDictionary",&,N,V_cachedItemsByIndicies
T@"MCDPCItem",R,W,N,V_rootItem
TB,R,N,V_showPlaybackProgress
Tq,R,N
T@"<MCDPCContainerDelegate>",W,N,V_delegate
T@"MCDMediaRemoteSerialQueueManager",R,N
cancelAllOperations
addOperation:cancelAllOperations:
mediaRemoteSerialQueue
setMediaRemoteSerialQueue:
_mediaRemoteSerialQueue
T@"NSOperationQueue",&,N,V_mediaRemoteSerialQueue
controller:defersResponseReplacement:
controller:shouldRetryFailedRequestWithError:
willBeginLoadingRequestForController:
didFinishLoadingRequestForController:
initWithDelegate:dataSource:bundleID:
beginRequestObservation
endRequestObservation
viewWillDisappear
limitedUI
setLimitedUI:
playerState
currentPlayingSong
currentPlayingPlaylistEntry
currentPlayingPlaylist
currentPlayingRadioStation
tableCellClass
setTableCellClass:
nowPlayingBundleID
TB,N
T@"MPModelSong",R,N
T@"MPModelPlaylistEntry",R,N
T@"MPModelPlaylist",R,N
T@"MPModelRadioStation",R,N
T#,W,N
T@"NSString",R,C,N
artistTextForNowPlayingController:
albumTextForNowPlayingController:
titleForNowPlayingController:
backgroundArtForNowPlayingController:
nowPlayingViewControllerIsShowingExplicitTrack:
durationSnapshotForNowPlayingViewController:
nowPlayingViewControllerIsPlaying:
placeholderTypeForNowPlayingViewController:
shuffleTypeForNowPlayingViewController:
repeatTypeForNowPlayingViewController:
nowPlayingViewController:shouldDisplayButton:withImage:existingIdentifier:tinted:
nowPlayingViewController:buttonShouldBeActive:
nowPlayingViewController:didSendAction:state:
nowPlayingViewControllerCanShuffle:
nowPlayingViewControllerToggleShuffle:
nowPlayingViewControllerCanRepeat:
nowPlayingViewControllerToggleRepeat:
nowPlayingViewControllerCanShowAddToLibrary:
nowPlayingViewControllerAddToLibrary:
nowPlayingViewControllerIsFuseSubscriber:
nowPlayingViewControllerCanShowAlbumLink:
nowPlayingViewControllerAlbumArtistButtonTapped:
titleForUpNextInNowPlayingViewController:
nowPlayingViewControllerUpNextButtonTapped:
nowPlayingViewControllerCanShowChangePlaybackRate:
nowPlayingViewControllerChangePlaybackRate:
nowPlayingViewControllerGetPlaybackRate:
nowPlayingViewControllerCanShowMore:
nowPlayingViewControllerMore:
nowPlayingViewControllerCanShowAlbumArt:
nowPlayingViewControllerShouldUseMusicExplicitGlyph:
nowPlayingViewControllerWillAppear:
customPlaybackControlButtonsForNowPlayingViewController:
nowPlayingViewController:didSelectButton:
nowPlayingViewControllerIsRightHandDrive:
setTableView:
setAllowsAlbumArt:
_sessionAllowsAlbumArt:
_performRequest
_setupRequest
modelResponseDidInvalidate:
_shouldShowPlaybackQueueForItemCount:
_processResponse:error:
processArtworkForCurrentlyPlayingSong
_showPlaceholderArtwork
_performChangeRequest:
setCurrentPlayingSong:
setCurrentPlayingPlaylistEntry:
setCurrentPlayingPlaylist:
setCurrentPlayingRadioStation:
lastReceivedResponse
setLastReceivedResponse:
tableView
nowPlayingItem
setNowPlayingItem:
requestController
setRequestController:
albumArtwork
setAlbumArtwork:
artworkCatalog
setArtworkCatalog:
dataSource
setDataSource:
setBundleID:
carSessionStatus
setCarSessionStatus:
setPlayerState:
artworkCache
setArtworkCache:
artworkTimer
setArtworkTimer:
allowsAlbumArt
_allowsAlbumArt
_lastReceivedResponse
_nowPlayingItem
_requestController
_albumArtwork
_artworkCatalog
_playerState
_artworkCache
_artworkTimer
T@"<MCDNowPlayingContentManagerDelegate>",W,N,V_delegate
T@"MPCPlayerResponse",&,N,V_lastReceivedResponse
T@"UITableView",W,N,V_tableView
T@"MPCPlayerResponseItem",&,N,V_nowPlayingItem
T@"MPRequestResponseController",&,N,V_requestController
T@"UIImage",&,N,V_albumArtwork
T@"MPArtworkCatalog",&,N,V_artworkCatalog
T@"<MCDNowPlayingDataSource>",W,N,V_dataSource
T@"NSString",&,N,V_bundleID
T@"CARSessionStatus",&,N,V_carSessionStatus
Tq,N,V_playerState
T@"MPModelSong",&,N,VcurrentPlayingSong
T@"MPModelPlaylistEntry",&,N,VcurrentPlayingPlaylistEntry
T@"MPModelPlaylist",&,N,VcurrentPlayingPlaylist
T@"MPModelRadioStation",&,N,VcurrentPlayingRadioStation
T@"NSMutableDictionary",&,N,V_artworkCache
T@"MSVTimer",&,N,V_artworkTimer
TB,N,V_allowsAlbumArt
TB,N,VlimitedUI
T#,W,N,VtableCellClass
_numberOfItemsInPlaybackQueue
_adjustedIndexPathForPlaybackQueue:
_itemAtIndexPath:
_updateTrackQueueIndex
_jumpForwardInterval
_jumpBackwardInterval
_skipIntervalButtonImageForInterval:size:
_handleHamburgerActionSheet
_alertActionForFeedbackCommand:fallbackTitle:
isSeeking
setSeeking:
setModel:
playingItemIndex
setPlayingItemIndex:
totalItemCount
setTotalItemCount:
_seeking
_playingItemIndex
_totalItemCount
seeking
TB,N,GisSeeking,V_seeking
T@"MCDPCModel",&,N,V_model
Tq,N,V_playingItemIndex
Tq,N,V_totalItemCount
initWithFrame:
initWithTitle:subtitle:
retryButtonPressed:
initWithTitle:buttonText:
shouldEnableNetwork
setShouldEnableNetwork:
_shouldEnableNetwork
T@"<MCDErrorViewDelegate>",W,N,V_delegate
TB,N,V_shouldEnableNetwork
glyphFactory:pointSize:weight:scale:
imageNamed:ofSize:
tabBarController:shouldSelectViewController:
tabBarController:didSelectViewController:
tabBarController:willBeginCustomizingViewControllers:
tabBarController:willEndCustomizingViewControllers:changed:
tabBarController:didEndCustomizingViewControllers:changed:
tabBarControllerSupportedInterfaceOrientations:
tabBarControllerPreferredInterfaceOrientationForPresentation:
tabBarController:interactionControllerForAnimationController:
tabBarController:animationControllerForTransitionFromViewController:toViewController:
initWithBundleID:model:
_loadAllHostTabs
invalidateAndReloadTabsWithCompletion:
_tabBarItemForViewController:fromItem:
_hostTabAtIndex:dummyTab:
updateTitleAndTabBarItemsAtIndexes:
tabBarController
setTabBarController:
nowPlayingButtonView
setNowPlayingButtonView:
hasCarScreen
setHasCarScreen:
hasInvalidatedDummyTabs
setHasInvalidatedDummyTabs:
serialQueue
setSerialQueue:
_hasInvalidatedDummyTabs
_tabBarController
_nowPlayingButtonView
T@"UITabBarController",&,N,V_tabBarController
T@"CPUINowPlayingButtonWrapperView",&,N,V_nowPlayingButtonView
TB,N,V_hasCarScreen
TB,N,V_visible
TB,N,V_hasInvalidatedDummyTabs
T@"NSObject<OS_dispatch_queue>",&,N,V_serialQueue
initWithContentManager:
T@"MCDPlayableContentPlaybackManager",&,N,V_contentManager
_presentingViewControllerView
@16@0:8
v24@0:8@16
v16@0:8
@"NSArray"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
q32@0:8@16q24
@32@0:8@16@24
q24@0:8@16
@32@0:8@16q24
B32@0:8@16@24
@24@0:8@16
q40@0:8@16@24q32
v40@0:8@16q24@32
v40@0:8@16@24@32
q32@0:8@"UITableView"16q24
@"UITableViewCell"32@0:8@"UITableView"16@"NSIndexPath"24
q24@0:8@"UITableView"16
@"NSString"32@0:8@"UITableView"16q24
B32@0:8@"UITableView"16@"NSIndexPath"24
@"NSArray"24@0:8@"UITableView"16
q40@0:8@"UITableView"16@"NSString"24q32
v40@0:8@"UITableView"16q24@"NSIndexPath"32
v40@0:8@"UITableView"16@"NSIndexPath"24@"NSIndexPath"32
v48@0:8@16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@16B24
v32@0:8@16@24
v40@0:8@16@24d32
v24@0:8@"UIScrollView"16
v48@0:8@"UIScrollView"16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@"UIScrollView"16B24
@"UIView"24@0:8@"UIScrollView"16
v32@0:8@"UIScrollView"16@"UIView"24
v40@0:8@"UIScrollView"16@"UIView"24d32
B24@0:8@"UIScrollView"16
v40@0:8@16@24q32
d32@0:8@16@24
d32@0:8@16q24
q32@0:8@16@24
@40@0:8@16@24@32
B48@0:8@16:24@32@40
v48@0:8@16:24@32@40
B40@0:8@16@24@32
@48@0:8@16@24{CGPoint=dd}32
v40@0:8@"UITableView"16@"UITableViewCell"24@"NSIndexPath"32
v40@0:8@"UITableView"16@"UIView"24q32
d32@0:8@"UITableView"16@"NSIndexPath"24
d32@0:8@"UITableView"16q24
@"UIView"32@0:8@"UITableView"16q24
q32@0:8@"UITableView"16@"NSIndexPath"24
v32@0:8@"UITableView"16@"NSIndexPath"24
@"NSIndexPath"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSString"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSArray"32@0:8@"UITableView"16@"NSIndexPath"24
@"UISwipeActionsConfiguration"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSIndexPath"40@0:8@"UITableView"16@"NSIndexPath"24@"NSIndexPath"32
B48@0:8@"UITableView"16:24@"NSIndexPath"32@40
v48@0:8@"UITableView"16:24@"NSIndexPath"32@40
B32@0:8@"UITableView"16@"UITableViewFocusUpdateContext"24
v40@0:8@"UITableView"16@"UITableViewFocusUpdateContext"24@"UIFocusAnimationCoordinator"32
@"NSIndexPath"24@0:8@"UITableView"16
B40@0:8@"UITableView"16@"NSIndexPath"24@"<UISpringLoadedInteractionContext>"32
v24@0:8@"UITableView"16
@"UIContextMenuConfiguration"48@0:8@"UITableView"16@"NSIndexPath"24{CGPoint=dd}32
@"UITargetedPreview"32@0:8@"UITableView"16@"UIContextMenuConfiguration"24
v40@0:8@"UITableView"16@"UIContextMenuConfiguration"24@"<UIContextMenuInteractionCommitAnimating>"32
v40@0:8@"UITableView"16@"UIContextMenuConfiguration"24@"<UIContextMenuInteractionAnimating>"32
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
B32@0:8@"UIGestureRecognizer"16@"UIEvent"24
v32@0:8@"MCDPCContainer"16@"NSIndexSet"24
v24@0:8@"MCDPCContainer"16
v24@0:8@"MCDErrorLoadingView"16
v24@0:8Q16
v24@0:8@"CARSession"16
v32@0:8@"CARSession"16@"CARSessionConfiguration"24
@28@0:8@16B24
v20@0:8B16
v24@0:8@?16
@"UITableView"
@"CPUINowPlayingButton"
@"NSIndexPath"
@"_UIFilteredDataSource"
@"MPWeakTimer"
@"UIView"
@"NSObject<OS_dispatch_queue>"
@"CARSessionStatus"
@"MCDPCContainer"
@"UIAlertController"
@36@0:8{CGSize=dd}16B32
@32@0:8{CGSize=dd}16
@"MPPropertySet"16@0:8
v36@0:8@16@24B32
Q24@0:8@16
@48@0:8@16q24@32@40
v36@0:8@"UINavigationController"16@"UIViewController"24B32
Q24@0:8@"UINavigationController"16
q24@0:8@"UINavigationController"16
@"<UIViewControllerInteractiveTransitioning>"32@0:8@"UINavigationController"16@"<UIViewControllerAnimatedTransitioning>"24
@"<UIViewControllerAnimatedTransitioning>"48@0:8@"UINavigationController"16q24@"UIViewController"32@"UIViewController"40
@"MCDPCModel"
@"NSString"
@"NSOperationQueue"
v40@0:8@16q24q32
v40@0:8@"_MCDNowPlayingContentManager"16@"MPCPlayerResponse"24@"NSError"32
v28@0:8@"_MCDNowPlayingContentManager"16B24
v24@0:8@"_MCDNowPlayingContentManager"16
v32@0:8@"_MCDNowPlayingContentManager"16@"UIViewController"24
v40@0:8@"_MCDNowPlayingContentManager"16q24q32
v32@0:8@"_MCDNowPlayingContentManager"16@"NSString"24
v40@0:8@"_MCDNowPlayingContentManager"16@"MPModelObject"24@"MPCPlayerResponse"32
@"UITableViewController"
@"<MCDNowPlayingContentManagerProtocol>"
@"UIBarButtonItem"
@"UIActivityIndicatorView"
@"UILabel"
v32@0:8@16@?24
v48@0:8@16{_NSRange=QQ}24@?40
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
@?16@0:8
I16@0:8
v20@0:8I16
@"MCDPCItem"
@"MCDPlayableContentPlaybackManager"
@"NSMutableDictionary"
{CGSize="width"d"height"d}
@32@0:8@16^v24
f16@0:8
@"NSData"
@"UIImage"
q16@0:8
v24@0:8q16
@24@0:8q16
v40@0:8{_NSRange=QQ}16@?32
{?="didInvalidateRootItem"b1"didInvalidateIndicies"b1"willChangeCount"b1"didChangeCount"b1}
@"<MCDPCContainerDelegate>"
v28@0:8@?16B24
v32@0:8@"MPRequestResponseController"16@?<v@?>24
B32@0:8@"MPRequestResponseController"16@"NSError"24
v24@0:8@"MPRequestResponseController"16
v24@0:8#16
@40@0:8@"<MCDNowPlayingContentManagerDelegate>"16@"<MCDNowPlayingDataSource>"24@"NSString"32
@"MPModelSong"16@0:8
@"MPModelPlaylistEntry"16@0:8
@"MPModelPlaylist"16@0:8
@"MPModelRadioStation"16@0:8
{?=dddddffBB}24@0:8@16
@"NSString"24@0:8@"CPUINowPlayingViewController"16
@"UIImage"24@0:8@"CPUINowPlayingViewController"16
B24@0:8@"CPUINowPlayingViewController"16
{?=dddddffBB}24@0:8@"CPUINowPlayingViewController"16
q24@0:8@"CPUINowPlayingViewController"16
B56@0:8@16q24o^@32@40o^B48
B32@0:8@16q24
B56@0:8@"CPUINowPlayingViewController"16q24o^@32@"NSString"40o^B48
B32@0:8@"CPUINowPlayingViewController"16q24
v40@0:8@"CPUINowPlayingViewController"16q24q32
v24@0:8@"CPUINowPlayingViewController"16
@"NSNumber"24@0:8@"CPUINowPlayingViewController"16
@"NSArray"24@0:8@"CPUINowPlayingViewController"16
v32@0:8@"CPUINowPlayingViewController"16@"CPUIMediaButton"24
B24@0:8q16
@"MPModelSong"
@"MPModelPlaylistEntry"
@"MPModelPlaylist"
@"MPModelRadioStation"
@"<MCDNowPlayingContentManagerDelegate>"
@"MPCPlayerResponse"
@"MPCPlayerResponseItem"
@"MPRequestResponseController"
@"MPArtworkCatalog"
@"<MCDNowPlayingDataSource>"
@"MSVTimer"
d16@0:8
@32@0:8d16q24
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"<MCDErrorViewDelegate>"
@48@0:8@16d24q32q40
@32@0:8@16d24
B32@0:8@"UITabBarController"16@"UIViewController"24
v32@0:8@"UITabBarController"16@"UIViewController"24
v32@0:8@"UITabBarController"16@"NSArray"24
v36@0:8@"UITabBarController"16@"NSArray"24B32
Q24@0:8@"UITabBarController"16
q24@0:8@"UITabBarController"16
@"<UIViewControllerInteractiveTransitioning>"32@0:8@"UITabBarController"16@"<UIViewControllerAnimatedTransitioning>"24
@"<UIViewControllerAnimatedTransitioning>"40@0:8@"UITabBarController"16@"UIViewController"24@"UIViewController"32
@28@0:8Q16B24
@"UITabBarController"
@"CPUINowPlayingButtonWrapperView"
