aolAccountIcon
%@@aol.com
Sent
Trash
Drafts
Spam
AOL_DELIVERY_HOSTNAME
AOL SMTP Server
Delayed
icloud.com
iCloud-%@
iCloud
%@-%p
com.apple.message.icloud.alias-update
CastleIMAPAccount.m
Invalid parameter not satisfying: %@
nil != _appleAccountLock
CastleIMAPErrorDomain
Username
mac.com
me.com
dotMacMailSupported
EmailAddress
FullUserName
imapHostname
imapPort
imapRequiresSSL
v8@?0
Mailbox is over quota
smtpHostname
smtpPort
smtpRequiresSSL
sendFromAddressJSONURL
%@ (%@)
%@:%@
X-MobileMe-AuthToken %@
aliases
fullName
emails
address
canSendFrom
name
email
account
en_US_POSIX
EEE, dd MMM yyyy HH:mm:ss zzz
Current thread is main
Authorization
X-Apple-I-MD-M
X-Apple-I-MD
%llu
X-Apple-I-MD-RINFO
If-Modified-Since
p99-
v20@?0B8@"NSError"12
jsonrpc
update
method
params
POST
application/json-rpc; charset=UTF-8
castleAccountIcon
AKAnisetteProvisioningController
/System/Library/PrivateFrameworks/AuthKit.framework/AuthKit
### Failed to Soft Linked: /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit
(CHANGEDSINCE %@)
(FLAGS)
IMAPESearchMinKey
IMAPESearchMaxKey
IMAPESearchAllKey
IMAPESearchCountKey
IMAPESearchTagKey
-[MFIMAPConnection(ESearch) eSearchIDSet:areMessageSequenceNumbers:arguments:success:returning:]
ESearch.m
returning && "Should have at least one return request on an esearch command."
RETURN
Expected space
Expected number for minimum result
Expected number for maximum result
COUNT
Expected number for count result
Did not find a valid search return.
Expected right paren
\Important
\Starred
\AllMail
\Spam
gmail.com
Gmail
Your account is not enabled for IMAP use.
IDToken
gmailAccountIcon
VERIFICATION_REQUIRED_TITLE
Verification Required
WEBLOGIN_PROMPT_FORMAT
Log in to your %@ account
MailErrorHandlerDoNotSanitize
xwebalert
webalert
EnableSchema
EnableHost
EnablePath
apple
GMAIL_ALL_MAIL_SPECIAL_MAILBOX_NAME
All Mail
self
GMAIL_DELIVERY_HOSTNAME
Gmail SMTP Server
PLAIN-CLIENTTOKEN
MESSAGE_AUTH_GMAIL_CLIENTTOKEN
Gmail Client Token
IMAPAccountOfflineOperationQueued
ServerPathPrefix
CompactWhenClosingMailboxes
ListsSubscribedOnly
DaysBetweenSyncs
DateOfLastSync
PreventDismemberment
PushedMailboxes
NotesPushedMailboxes
NotesNotificationPrefix
flagChangesLock
connectionLock
separator
namespace
capabilities
push-service-level
push-registered-mailboxes
aps-topic
imapmbox
imap
imaps
IMAP
IMAP_SERVER_ALERT_FORMAT
WARNING_TITLE
Warning
DeleteInPlace
IMAP_OPEN_FAILED_TITLE_FORMAT
MailboxName
Apple Mail To Do
IMAPAccount
_releaseAllConnectionsAndCallSuper
edgeOnly
IMAP account %@ (%@)
com.apple.mail.imap.offlinestatuschange
INBOX
INBOX%@INBOX
-[IMAPAccount _newMailboxWithParent:name:attributes:dictionary:withCreationOption:]
IMAPAccount.m
creationOption == MailboxCreationOptionDefault
SYNCHRONIZING_WITH_SERVER_FORMAT
Synchronizing with server
CHECKING_FOR_MAIL
Main
v32@?0@"NSString"8@"NSDictionary"16^B24
B16@?0@"MFMailboxUid"8
@16@?0@"MFMailboxUid"8
IMAP_REMOVING_CACHE_FILES
Removing old cache files...
MAILBOX_NAME_INCLUDES_PATH_SEPARATOR
NO_OFFLINE_MAILBOX_RENAMING
.OfflineCache
Account
RelativePath
v32@?0@"NSString"8@"NSString"16^B24
.%@.%@
RelatedMessagesShouldIncludeDrafts
not 
CANNOT
is NOT
    topic: %@
    known capabilities: %@
    negotiated push service level: %@
    last push registration time: %@
<never>
    mailboxes registered for push: %@
StoreDraftsOnServer
StoreSentMessagesOnServer
StoreTrashOnServer
StoreArchiveOnServer
CSAccountTypeIMAP
/System/Library/Frameworks/CoreSpotlight.framework/CoreSpotlight
### Failed to Soft Linked: /System/Library/Frameworks/CoreSpotlight.framework/CoreSpotlight
<null>
<unavailable>
<unknown>
version 1
version 2
_pushServiceLevelName
0 && "unknown push service level"
BODYSTRUCTURE
BODY
.PEEK
HEADER
IMAPMailboxAttributes
DELETED
Source UIDS
Destination UIDS
\All
\Archive
\Drafts
\Flagged
\Junk
\Sent
\Trash
XAPPLEPUSHSERVICE
d-MMM-yyyy
(){ %*\"
    supports IDLE: %@
    using IDLE: %@ (seq=%lu)
STARTTLS
LITERAL+
LITERAL-
UIDPLUS
CHILDREN
IDLE
QUOTA
NAMESPACE
MULTIAPPEND
UNSELECT
LOGINDISABLED
XLIST
COMPRESS=DEFLATE
ESEARCH
CONDSTORE
SASL-IR
XYMHIGHESTMODSEQ
X-GM-EXT-1
MOVE
SPECIAL-USE
LIST-STATUS
LIST-EXTENDED
"%@"
"%@ (%@)"
"name"
"version"
"os"
"iOS"
"os-version"
%@%@
aps-version
aps-account-id
aps-device-token
aps-subtopic
mailboxes
mailbox
DEFLATE
FAILED_FETCH_TITLE
Cannot Get Mail
outNonSynchronizingLiteral
{%lu%s}
%lu 
v40@?0r^v8{_NSRange=QQ}16^B32
B32@?0r*8Q16B24B28
IMAP_OPEN_FAILED_MSG_FORMAT
IMAP_COMMAND_FAILED_FORMAT1
DisableESEARCH
DisableCOMPRESS
DisableCONDSTORE
FAILED_LOGIN
STATUS %@
RETURN (%@)
@"NSNull"16@?0^@8
*** Server doesn't support UIDPLUS
B8@?0
MESSAGE-ID
+FLAGS.SILENT
-FLAGS.SILENT
(\Deleted)
BEFORE
uids
RFC822.SIZE
BODY.PEEK[HEADER]
(BODY.PEEK[HEADER.FIELDS (MESSAGE-ID)])
(UID X-GM-MSGID)
MinFetchChunkSize
MaxFetchChunkSize
FetchDeltaTarget
%d:*
%d:%d
%lu:%lu
%lu:*
%lu:%u
TLS_NOT_SUPPORTED_FORMAT
TLS_FAILED_FORMAT
Disconnected
Non-authenticated
Authenticated
Selected
<%@:%p> [%@%s] delegate=%p mailbox=<%@>
, Fetching
<%@:%p> [%@%s] delegate=%p
(UID FLAGS)
-[MFIMAPConnection _fetchArgumentForMessageSkeletonsWithHeaders:]
IMAPConnection.m
requiredHeaders
(INTERNALDATE UID RFC822.SIZE FLAGS 
MODSEQ 
X-GM-MSGID 
BODY.PEEK[HEADER.FIELDS (
<%@: %p>
%@ set %@
%@ unset %@
CAPABILITY
NOOP
LOGOUT
AUTHENTICATE
LOGIN
LIST
LSUB
STATUS
EXAMINE
CREATE
DELETE
RENAME
SELECT
SUBSCRIBE
UNSUBSCRIBE
EXPUNGE
UID EXPUNGE
CLOSE
APPEND
FETCH
UID FETCH
UID STORE
UID COPY
UID SEARCH
GETQUOTAROOT
GETQUOTA
DONE
SEARCH
XDELIVER
COMPRESS
UID MOVE
"dd-MMM-yyyy HH:mm:ss ZZ"
TEXT
BODY.PEEK[
-[MFIMAPFetchResult envelope]
IMAPFetchResult.m
Invalid item type %d
-[MFIMAPFetchResult setEnvelope:]
-[MFIMAPFetchResult internalDate]
-[MFIMAPFetchResult setInternalDate:]
-[MFIMAPFetchResult fetchData]
-[MFIMAPFetchResult setFetchData:]
-[MFIMAPFetchResult messageSize]
-[MFIMAPFetchResult setMessageSize:]
-[MFIMAPFetchResult bodyStructure]
-[MFIMAPFetchResult setBodyStructure:]
-[MFIMAPFetchResult startOffset]
-[MFIMAPFetchResult setStartOffset:]
-[MFIMAPFetchResult section]
-[MFIMAPFetchResult setSection:]
-[MFIMAPFetchResult uid]
-[MFIMAPFetchResult setUid:]
-[MFIMAPFetchResult uniqueRemoteId]
-[MFIMAPFetchResult setUniqueRemoteId:]
-[MFIMAPFetchResult flagsArray]
-[MFIMAPFetchResult setFlagsArray:]
-[MFIMAPFetchResult setMessageFlags:]
-[MFIMAPFetchResult setCustomFlagsArray:]
-[MFIMAPFetchResult customFlagsArray]
* INVALID *
ENVELOPE %@
INTERNALDATE
RFC822.SIZE %u
BODYSTRUCTURE %@
BODY[%@]<%lu> {%lu}...
BODY[%@] {%lu}...
UID %u
X-GM-MSGID %llu
FLAGS (%@)
MODSEQ %d
 remoteID=%@
%s%u
temp-
multipart
boundary
%@: Unexpected byte %x at position %lu
IMAPOperation.m
Invalid method for type %d
CREATE [%@]
DELETE [%@]
[%@] STORE 
 ** expunged **
 <+FLAGS.SILENT%@>
 <-FLAGS.SILENT%@> 
APPEND [%@] %@ {%u}
COPY [%@] [%@]
PERFORMING_PENDED_OPERATIONS_TASK_NAME
Performing pended operations
operations
RECENT
-[MFIMAPParseContext setStart:]
IMAPParseContext.m
start >= _originalStart && "Should not put the start before the original start."
-[MFIMAPParseContext setEnd:]
end <= _originalEnd && "Should not put the end past the original end."
Error while parsing IMAP response %@: %@
Remaining text: <%@>
Expected number in literal
Expected right curly brace
Expected end-of-line
Read failure
Ignoring extra bytes read during literal
d-MMM-yyyy H:mm:ss ZZZ
Can't parse array contents
In-Reply-To:
References:
BODY[HEADER.FIELDS (REFERENCES IN-REPLY-TO)]
Message-ID
v32@?0@"NSString"8Q16^B24
UNDELETED
MESSAGES
EXISTS
_IMAPNameQuotaKey
_IMAPCurrentUsageQuotaKey
_IMAPMaxUsageQuotaKey
_IMAPNamespacePrefixKey
_IMAPNamespaceDelimiterKey
_IMAPNamespaceExtensionsKey
CHARSET=
%@ is invalid for %s
%@ is invalid for response type %d
-[MFIMAPResponse fetchResults]
IMAPResponse.m
_responseType == IMAPFetchResponse && "Invalid response type for fetchResults"
(%@)
%@ %@
 ==> (%@)
 "%@"
 (%@ %@/%@)
 %@ %c%@
*nil*
("%@" 
 "%@" ("%@")
v32@?0@"NSString"8@"NSArray"16^B24
v16@?0@"NSArray"8
should not register multiple consumers for the same section: %@
--Not Set--
PREAUTH
FLAGS
QUOTAROOT
--OTHER--
X-UID-FLAGS
ALERT
UNAVAILABLE
AUTHENTICATIONFAILED
AUTHORIZATIONFAILED
EXPIRED
PRIVACYREQUIRED
CONTACTADMIN
NOPERM
INUSE
EXPUNGEISSUED
CORRUPTION
SERVERBUG
LIMIT
OVERQUOTA
ALREADYEXISTS
NONEXISTENT
BADCHARSET
NEWNAME
PARSE
READ-ONLY
READ-WRITE
TRYCREATE
UIDNEXT
HIGHESTMODSEQ
UIDVALIDITY
NOMODSEQ
UNSEEN
PERMANENTFLAGS
APPENDUID
COPYUID
CLIENTBUG
Expected ]
Expected list or NIL
\Noinferiors
\Noselect
\Marked
\Unmarked
\HasChildren
\HasNoChildren
\NonExistent
Invalid FETCH response
Couldn't parse FETCH: no space character in input
ENVELOPE
X-GM-MSGID
RFC822
RFC822.HEADER
RFC822.TEXT
MODSEQ
BODY[
HEADER.
Unable to parse header keys array
Couldn't parse FETCH: no square brace character in input
Expected number
Expected >
Unrecognized FETCH key
Expected a right paren
couldn't parse NAMESPACE: unexpected atom
couldn't parse namespace response: prefix and/or delimiter were not strings
couldn't parse namespace response extensions: invalid key or value
couldn't parse namespace response extensions: not enough values for keys
@"NSArray"8@?0
--EXTENSION--
\Seen
\Deleted
\Answered
\Recent
\Draft
$Forwarded
$Junk
$NotJunk
Forwarded
Junk
NotJunk
Redirected
Incomplete response
Junk at end of response
@"MFMailMessage"8@?0
-[MFBaseSyncResponseQueue sequenceIdentifierForItem:]
LibraryIMAPStore.m
[item isKindOfClass:[NSArray class]]
SupportsCustomFlags
CachedConnectionLock
DOWNLOADING_STATUS_FORMAT
Downloading %@ of %@
SEEN
FLAGGED
ANSWERED
KEYWORD
v16@?0@"MFIMAPConnection"8
LibraryIMAPStoreErrorDomain
v32@?0Q8@"NSIndexSet"16@"NSError"24
IMAP_COMPACT_FAILED
@"NSString"12@?0I8
temp-%lu
v40@?0@"MFIMAPConnection"8@"NSArray"16{_NSRange=QQ}24
B16@?0@"MFLibraryMessage"8
@"NSArray"16@?0@"MFMailMessage"8
messageToTransfer
destinationMailbox
Unknown MoveResult (%ld)
operation
We should never pass a batchUIDs that is nil (might be interpreted as all messages)
@"NSNumber"16@?0@"MFAppStateMonitor"8
@"NSNumber"16@?0@"NSArray"8
com.apple.message.imap (IDLE)
v16@?0@"NSError"8
v16@?0@"NSNumber"8
DeletedSearchLimit
q24@?0@8@16
q24@?0@"NSValue"8@"NSValue"16
CHARSET
UTF-8
v16@?0@"NSString"8
SUBJECT
fetchArgumentsForCriterion
0 && "Message ID header criterion must have a MessageRuleIsEqualTo qualifier"
FROM
(OR TO
NOT 
NSArray *fetchArgumentsForCriterion(MFMessageCriterion *, BOOL)
could not map expression to flag: %@
SINCE
0 && "Need to handle criterion for IMAP headers"
(OR FROM
(OR SUBJECT
(OR CC
MFAPSManagerDeviceTokenChangedNote
com.apple.message.apsManager
System/Library/PrivateFrameworks/ApplePushService.framework
APSConnection
com.apple.mobilemail.dummyTopicToForceServerConnection
com.apple.mobilemail.push.
com.apple.mail.
account-id
==== MFAPSManager ====
  push service: %@
  watched topics: {%@}
  ignored topics: {%@}
  device token (%@): '%@'
waiting for token
has token
_tokenConditionString
MFAPSManager.m
0 && "unknown token condition"
MFIMAPConnection+Move.m
mailboxName
command == _IMAPCommandUidMove || command == _IMAPCommandMove
B16@?0@"MFIMAPResponse"8
OS X Server
OSXServerIMAPErrorDomain
EmailAccountName
EmailAddresses
EmailDomain
%@@%@
IncomingMailServerAuthentication
EmailAuthCRAMMD5
EmailAuthNTLM
EmailAuthHTTPMD5
OutgoingMailServerAuthentication
EmailAuthNone
ATOKEN
MESSAGE_AUTH_ATOKEN
Apple Token
CASTLE_SMTP_SERVER
iCloud SMTP Server
XOAUTH2
MESSAGE_AUTH_OAUTH2TOKEN
OAuth 2.0 Token
user=%@
auth=Bearer %@
yahoo.com
YahooAllowSSL
YahooIMAPPort
Draft
Bulk Mail
%@@yahoo.com
Inbox
ymail://?fid=%@&mid=%@
yahoo.co.jp
ybb.ne.jp
yahooAccountIcon
YAHOO_DELIVERY_HOSTNAME
Yahoo! SMTP Server
%@ (%@) failed to get auth token: %{public}@
anisetteDataWithError failure: %@ (%.3f sec)
anisetteDataWithError success: %@ (%.3f sec)
Over quota error message: %@
#Warning #CloudSync AnisetteData not found for account: %{public}@ error: %{public}@
#CloudSync Starting request for aliases for account %@.
#CloudSync Response from new alias %@. Status Code: %lu
Data: %@
#CloudSync Alias Data: %@
Email alias request to [%@] failed with error code [%lu]
Email alias requests configured to use [%@], scheduling reprovision
#CloudSync Unable to push new alias data to server %@. Received response code %lu, with error %{public}@.
JSON:%@
#CloudSync response: %@.
JSON: %@
Got a response, but it was not for our tag.  Throwing out the results.
Got invalid value in sequence set
#Warning failed to get client token
*** Unable to determine name for %@
#IMAPFlagChanges removing all changes: %{public}@
#Warning Unselected connection checked back in, mailbox: %@, connection: %@
#Network %@: -[%@ _releaseAllConnectionsAndCallSuper:%@ edgeForcedOnly:%@ ifIdleForTimeInterval:(%.4f) saveOfflineCache:%@]
#Network All connections: %@
#Network EDGE ONLY
#Network Dropping connections: %@
No connection!! What's going on?
%{public}@ deleting messages from mailbox: %{public}@ older than %d days
#IMAPFlagChanges added %@
#IMAPFlagChanges using changes from %@
#IMAPFlagChanges resulting changes are %@
#IMAPFlagChanges removing failed entry %@
#IMAPFlagChanges removing committed entry %@
#IMAPFlagChanges remaining change entries: %@
#IMAPFlagChanges setting commit time %d for change %@
#IMAPFlagChanges setting connection %d for change %@
#aps-push warning, can't find mailbox with name '%@' (%@)
#aps-push failed to generate hash for mailbox named '%@'
#aps-push Setting aps-topic '%@' for account %@
#aps-push account <%@:%p> scheduling push registration connection
#aps-push account %@ forcing push registration connection
#aps-push account %@ will NOT force push registration connection, didRequestPushRegistration: %s, mustRegisterOnNextConnection: %s
#aps-push account %@ has no pushed mailboxes, skipping
#aps-push account %@ last registered for push %.3f seconds ago
#aps-push {mailboxes=%@, topic=%@, version=%d}
#aps-push external push client registration failed: %{public}@
#aps-push could not create mailbox names for: %@, pushed mailboxes: %@ (sep: %@ prefix: %@)
#aps-push Received notification for account '%@', will %@handle push
#aps-push warning, %@ got a notification for mailbox %@, but we're not enabled for the appropriate dataclass
#aps-push warning, %@ got a notification for mailbox with hash '%@', but can't find that mailbox.
#aps-push account %@ will NOT start listening for notifications, canRegisterForAPSPush returned NO
#aps-push account %@ will NOT start listening for notifications, battery-saver mode is ON
#aps-push account %@ told to start listening for notifications
#aps-push account %@ did NOT register for push, %s register for push and PCConnectionStyle %s push
#aps-push account %@ told to stop listening for notifications
sending ID command: %@
server response to ID request: %@
server does not support ID extension
#aps-push not registering for push on unauthenticated connection for account %@
#aps-push connection doesn't support XAPPLEPUSHSERVICE for account %@
#aps-push MCC push settings are not set to push (%d != PCStylePush) for account %@
#aps-push account %@ not registering for push
#aps-push failed to get device token while registering for push on account %@
#aps-push account %@ registering for push: {%@}
#aps-push account %@ will send pushes for mailbox '%@'
#aps-push account %@ (version %@) ignoring invalid version in push response '%@'
#aps-push account %@ (version %@) sent unknown push response %@
#aps-push account %@ will NOT push these mailboxes {%@}
#aps-push account %@ will push all requested mailboxes
#aps-push account %@ specified bad version/topic in response: %@
#aps-push account %@ received mailbox responses but version 1 response, ignoring mailboxes
#aps-push account %@ rejected XAPPLEPUSHSERVICE request: %@
server supports deflate compression, sending COMPRESS request
server rejected our COMPRESS request: %@
*** Failed to read initial response from %@
*** Expected untagged initial response from %@
*** Invalid IMAP command %d
#imap-idle connection <%p> received response while idling: %@
#imap-idle connection <%p> starting IDLE state for delegate %@
#imap-idle connection <%p> failed to enter IDLE state: %@
#imap-idle connection <%p> delegate rejected starting IDLE state: %@
#imap-idle connection <%p> leaving IDLE state for delegate: %@
#imap-idle connection <%p> timer fired for delayed IDLE reset after %0.2fs delay: %@
#imap-idle connection <%p> resetting IDLE state: %@
See <rdar://problem/26633447> : term should be an NSString, but is %{public}@
inconsistent esearch counts detected, ignoring esearch capability
#Warning Invalid response from SEARCH command
#Warning %@ claimed to support initial response data, and didn't supply an initial response
IMAP protocol error: %@
IMAP auth failure: %@
*** Unexpected response during authentication: %@
Unhandled response to command %s: %@
MFIMAPConnection was lost during processing of command %s: %@.
uid of message %{public}@ is 0
Unexpected byte %u at position %lu
deserialized offline operation was invalid - skipping
attempt to create an invalid offline operation of type %d with no mailbox name %p
attempt to create an invalid store-flags offline operation: %lu true flags, %lu false flags, %lu uids
attempt to create an invalid copy-message offline operation: %lu srcUids, %lu dstUids, dstMailbox=%p (%lu)
*** Error while creating %@: %{public}@
**** Failed to append to %@
*** Error while copying messages to %@
replaying %lu operations with connection %@
replaying %@
removing failed operation from offline cache: %@
*** Error while selecting %@: %{public}@
*** Warning while parsing %@: %@
Remaining text: <%@>
ERROR: UNKNOWN RESULT: %@ %d
Invalid for response type %d
#Warning caught %@: %@
caught %@: %@
server returned data we don't have a consumer for, might be expected for section %@
We did something bad: we just got back a CLIENTBUG from the server.
#Power [Server Fetch Time] InternalDate=%@
#Power [New Message] subject=%@;
Compacting %lu messages during IMAP sync
[FetchActivity] Search for recent UIDs returned %lu items (success=%@)
[FetchActivity] starting UID sync for %@ (selected mailbox: %@) idRange=%@ limit=%lu topUIDToCompact=%lu topKnownUID=%lu UIDCount=%lu lowUID=%lu highUID=%lu libraryDetailsIndex=%lu libraryDetailsUIDRange=%lu:%lu
[FetchActivity] preserving UID %lu!
[FetchActivity] Compacting %lu (1)
[FetchActivity] Syncing %lu
[FetchActivity] Fetching %lu
[FetchActivity] Compacting %lu (2)
[FetchActivity] _fetchMessagesWithArguments returns %lu
%@: "Connecting..." starting
[FetchActivity] store and connection mailboxes differ: store=%@ connection=%@ (%p, valid: %@)
[FetchActivity] canceling fetch because connection is invalid
[FetchActivity] canceling fetch because mailbox could not be selected
store and connection mailboxes differ
%@: "Connecting..." completed
[FetchActivity] Compacting all messages
[FetchActivity] Compacting messages with UIDs <= %lu
IMAP Account %{public}@ deleting messages from store: %@ older than %d days using connection: %@
-[MFLibraryIMAPStore _dataForMessage:] bad message data
[FetchActivity] performOperationRequiringConnection: mailbox=%@ connection=%p cached=%@ options=%d
Forcing reload of %@ because of UIDVALIDITY change (old:%lu new:%lu)
#imap-idle error occurred while observing conditions for IDLE: %{public}@
#imap-idle scheduling IDLE transition (should-use-idle %@): %@
-[MFLibraryIMAPStore _setFlagsForMessages:] flagsByMessage contains mixed message types
#IMAPFlagChanges applying pending changes for message %u: %@
#IMAPFlagChanges remaining changes from server (connection %u): %@
#Warning unsupported header criterion type %@
#Warning need to handle criterion for IMAP search: %@
#aps-push Unable to open ApplePushService at %@
#aps-push Push service not supported.
#aps-push Stopped MFAPSManager.
#aps-push Start watching topic '%@'
#aps-push Stop watching topic '%@'
#aps-push Swapping registered topic '%@' for topic '%@'
#aps-push Received public token '%@'.
#aps-push received notification on topic '%@', userInfo=%@
#Warning couldn't find our CastleAccount for our sending account: %@
AOLAccount
MFOAuth2TokenAuthProtocol
NSObject
MFAOLSMTPAccount
CastleIMAPAccount
CondStore
ESearch
GmailAccount
MFClientTokenAuthProtocol
NSURLSessionDataDelegate
NSURLSessionTaskDelegate
NSURLSessionDelegate
MFGmailSMTPAccount
MFGmailClientTokenAuthScheme
_MFGmailClientTokenAuthenticator
_MFIMAPMailboxDeletionQueueEntry
_MFFlagChangeEntry
IMAPAccount
MFIMAPConnectionDelegate
MFIMAPMailboxListFilter
MFIMAPCommandPipeline
_MFIMAPFetchUnit
MFIMAPConnection
MFIMAPConnectionFlagSearchResults
MFIMAPConnectionFlagSearchRequest
MFIMAPDownload
MFIMAPSimpleDownload
MFIMAPCompoundDownload
MFIMAPDownloadCache
MFIMAPFetchResult
MFIMAPMessage
MFIMAPMessageDownload
MFIMAPMessageWithCache
IMAPNameEncoding
MFIMAPOperation
MFIMAPOfflineCopyOnStupidServerOperation
MFIMAPOperationCache
MFIMAPParseContext
ReferenceSearching
MFIMAPResponse
MFIMAPResponseConsumer
_MFWholeMessageSection
MFMessageDataSection
MFFetchResponseQueue
MFSearchFetchResponseQueue
MFBaseSyncResponseQueue
MFSyncResponseQueue
MFSearchResponseQueue
MFLibraryIMAPStore
MFIMAPSequenceIdentifierProvider
MFAPSManager
APSConnectionDelegate
MFDiagnosticsGenerator
Move
MFOSXServerIMAPAccount
MFOSXServerSMTPAccount
MFNewcastleAuthScheme
_MFNewcastleAuthenticator
MFNewcastleSMTPAccount
MFOAuth2TokenAuthScheme
_MFOAuth2TokenAuthenticator
YahooDeliveryAccount
YahooAccount
MFYahooSMTPAccount
T@"NSArray",C,N
APSConnection
T#,R
_connectionLock
T@"<MFDataConsumer>",&,N,V_bodyDataConsumer
_deliveryAccountCreateIfNeeded:
T@"ACAccount",R,N
_doBasicConnectionUsingAccount:
T@"AOLAccount",&,N,GmailAccountIfAvailable,V_account
_expirationTime
T@"EFCancelationToken",&,N,V_cancelationToken
_handle
T@"IMAPAccount",&,Vaccount
_headersToFetchIncludingThoseRequiredForRouting:withRecipients:
T@"MFDataHolder",&,N,V_dataHolder
_length
T@"MFOSXServerIMAPAccount",&,N,GmailAccountIfAvailable,V_mailAccount
_listeningForDeviceTokenChanges
T@"NSArray",C,Vpaths
_observeChangesInIdleConditions
T@"NSArray",R,N,V_searchTerms
_readyToDealloc
T@"NSDictionary",R,Vchanges
_updateMetadata
T@"NSString",&,N,V_consumerSection
account
T@"NSString",R,&,N
allKeys
T@"NSString",R,N
arrayWithArray:
T@"NSURL",R,N
changes
TB,R,N
connectionClass
TB,R,N,V_gotBadResponse
consumerSection
TB,V_shouldUseIDLE
copyDeviceToken
TI,R,N
countForObject:
TI,VconnectionTag
TQ,R
deletedMessages
Td,R,N,V_connectTime
destinationUids
Ti,N,V_tag
displayUsername
URLSession:dataTask:didBecomeDownloadTask:
ef_map:
URLSession:dataTask:didReceiveData:
examineMailbox:
URLSession:dataTask:willCacheResponse:completionHandler:
extraAttributes
URLSession:didCreateTask:
flagChangesLock
URLSession:task:didCompleteWithError:
growFetchWindow
URLSession:task:didReceiveChallenge:completionHandler:
headers
URLSession:task:needNewBodyStream:
initWithFormat:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
initWithString:
URLSessionDidFinishEventsForBackgroundURLSession:
invocationWithSelector:target:taskName:priority:canBeCancelled:
URLWithString:
isAtEnd
UUID
isPositiveMatch
_UIDPlusInfoFromIMAPResponses:
isStore
_URLScheme
library
_accountsChanged:
mailboxNamesForPushRegistration
_addOfflineTransferMessages:
messageIDHeader
_additionalHeadersForFetch
mf_lock
_aliasAuthorizationHeader
numberWithBool:
_aliasUpdateQueue
parenthesizedStringWithObjects:
_aliasesFromOldData:
persistentStore
_appleAccount
release
_apsDeviceTokenChanged:
requestWithURL:
_assignSpecialMailboxToAppropriateIvar:forType:
result:
_bodyDataConsumer
saslProfileName
_cachedBodyDataContainerForMessage:valueIfNotPresent:
section
_cachedConnectionLock
_cancelationToken
setCompactWhenClosingMailboxes:
_capabilityFlags
setEnabledTopics:ignoredTopics:
_changedFlagsForMessage:fetchResponse:newFlags:
setHandlerForOfflineCacheFlush:
_chunkSize
setMessageSize:
_clientToken
setServerPathPrefix:shouldSync:
_complete
setTag:
_connection
shouldSyncFlags
_consumeExistingPreAuthToken
storeFlags:state:forMessageSet:
_consumersBySection
stringByRemovingPercentEncoding
_copyMailboxListPreferenceForKey:
subject
_copyMailboxWithParent:name:attributes:dictionary:
timeout
_copyNextTaggedOrContinuationResponseForCommand:
uidForAppendingMessageData:withFlags:andInternalDate:toMailbox:
_copyUserPushedMailboxes
uppercaseString
_credential
valueWithRange:
.cxx_destruct
TB,R,N,GisValid
JSONObjectWithData:options:error:
_aliasUserAgent
T@"<EFCancelable>",&,N,V_idleSubscriptionCancelable
_deleteMailbox:
T@"<MFIMAPConnectionDelegate>",W,N
_didUpdateSeparatorAndNamespace
T@"ACAccountStore",R,N
_doUidCopy:toStore:newMessages:
T@"CastleIMAPAccount",&,N,V_castleAccount
_gotBadResponse
T@"GmailAccount",&,N,GmailAccountIfAvailable,V_account
_headerConsumer
T@"MFBaseFilterDataConsumer",R,N,V_mainConsumer
_lastLoggedChar
T@"MFIMAPResponseConsumer",&,N,V_responseConsumer
_libraryDetails
T@"NSArray",C
_messageIDsFromFetchResultData:
T@"NSArray",C,Vurls
_readBufferSize
T@"NSDictionary",R,N
_uniqueRemoteId
T@"NSIndexSet",R,&,N,VindexSet
_writeCustomInfoToMailboxCache:
T@"NSString",C,N,V_fetchItem
addSubdownload:
T@"NSString",R,C
approximateSize
T@"NSString",R,Vpath
bundleWithPath:
T@"YahooAccount",&,N,GmailAccountIfAvailable,V_account
connect
TB,R,N,GisIdle
connectionState
TB,R,N,V_isPositiveMatch
containsObject:
TI,N,V_uid
copyNilOrString
TI,R,Vuid
dateFromString:
TQ,N,V_idleCommandSequenceNumber
dealloc
TQ,R,N,V_mask
deliveryUsesSSL
Td,VcommitTime
displayHostname
URLForMessage:
ef_gmailAuthAllowedCharacterSet
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveResponse:completionHandler:
expunge
URLSession:didBecomeInvalidWithError:
fetchTotalSize:andMessageCount:
URLSession:didReceiveChallenge:completionHandler:
getBytes:range:
URLSession:task:didFinishCollectingMetrics:
hasTemporaryUid
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
initWithAppendedUid:approximateSize:flags:internalDate:mailbox:
URLSession:task:willBeginDelayedRequest:completionHandler:
initWithLength:
URLSession:taskIsWaitingForConnectivity:
insertMessages:
URLString
isAlertResponse
UTF8String
isEqualToArray:
UUIDString
isProxy
_URLFromUncleanString:
isValid
_account
mailbox
_addCapabilities:
message
_additionalFetchHeaders
mf_decodeBase64
_additionalSynchronizationSearchArguments
networkAssertionWithIdentifier:
_aliasChanges
oneTimePassword
_aliasesFromData:
partial
_allowsPartialDownloads
primaryDeliveryAccountIsDynamic
_appleAccountLock
removeObserver:
_apsTopic
reselectMailbox
_authSchemeForAuthenticationMethod:
retainArguments
_boolForAccountInfoKey:defaultValue:
schemeWithName:
_cachedConnection
selectedMailbox
_cachedConnections
setCommitTime:forConnectionTag:
_capabilities
setDisplayName:
_castleAccount
setEnd:
_childOfMailbox:withComponentName:
setMailAccount:
_clearCapabilities
setPercentDone:
_commandNumber
setStartOffset:
_connectTime
setUid:
_connectionState
specialUseAttributesForMailbox:
_consumerSection
stringByAppendingPathComponent:
_copyMailboxListForNames:
stringFromDate:
_copyMailboxUidWithParent:name:attributes:existingMailboxUid:dictionary:
_copyNextServerResponseForCommand:
_copyPushedMailboxesForPrefix:
uniqueIdForPersistentConnection
_countingConsumer
usesSSL
_credentialCreateIfNecessary:error:
_currentFetchUid
_currentUID
_customFlags
_data
_dataForMessage:readHeadersOnly:
_dataForTemporaryUid:
_dataHolder
_defaultEmailAddressFromData:
_defaultSpecialMailboxNameForType:
_delegateState
_deleteHook
_deleteQueuedMailboxes:
_deliveryAccount
_deserializeOpSpecificValuesFromData:cursor:
_deviceToken
_deviceTokenLock
_didRequestPushRegistration
_didSynchronizeMailboxCachesAndFoundChanges:
_didSynchronizeOldMessages
_doAppend:
_doIMAPLoginForAccount:quotedUsername:password:
_doListCommand:withReference:mailboxName:options:getSpecialUse:statusDataItems:statusEntriesByMailbox:
_doNamespaceCommand
_doUidFetchWithRange:arguments:validateMessage:responses:
_doneAddingSubdownloads
_downloadCache
_downloadDelegate
_downloadForMessageBodyData:
_downloads
_eSearchSupported
_eSearchSupportedLock
_emailsFromData:
_enableCompressionIfSupported
_enablingPromise
_end
_error
_errorForResponse:commandParams:
_expectedFetchResult
_expectedSize
_externalMailboxUids
_failureCount
_fetchArgumentForMessageSkeletonsWithHeaders:
_fetchArgumentForMessageUidsAndFlags
_fetchBodyData
_fetchBodyDataForMessage:andHeaderDataIfReadilyAvailable:downloadIfNecessary:partial:
_fetchCapabilities
_fetchDataForMimePart:range:isComplete:consumer:
_fetchFullBodyDataForMessage:andHeaderDataIfReadilyAvailable:downloadIfNecessary:didDownload:
_fetchHeaderDataForMessage:downloadIfNecessary:
_fetchItem
_fetchMessagesMatchingCriterion:limit:withOptions:handler:
_fetchMessagesWithArguments:idRange:onConnection:synchronize:limit:topUIDToCompact:topKnownUID:success:examinedRange:fetchableUIDsFound:preserveUID:numFetchedUIDs:
_fetchPipeline
_fetchServerUnreadCountWithConnection:
_fetchUnits
_fetchedMailboxList
_fetchingBodyText
_fetchingMessageContents
_fileSystemServerPathPrefix
_flagChangesLock
_flags
_flagsForUID:
_flushAllMessageData
_flushOfflineCache
_fromEmailAddressesIncludingDisabled:
_full
_getFirstLevelMessageIDsForReference:
_getReferencesForMessageSet:
_greatestInboxUid
_handleFlagsChangedForMessages:flags:oldFlagsByMessage:
_headerFilter
_headerStringFromDate:
_headers
_highestModSequence
_idleCommandSequenceNumber
_idleConditionsObservable
_idleSubscriptionCancelable
_indexSetFromUIDs:
_infoForMatchingURL:
_invalid
_invokeBlock:
_isFetchResponseValid:
_isOffline
_isPositiveMatch
_isSearching
_itemType
_keyValuePairs
_knownLength
_lastHighestModSequence
_lastKnownCapabilities
_lastPushRegistration
_lastRequiredHeaders
_lastRequiredHeadersArray
_lastSave
_lastUid
_lastUidValidity
_listingForMailbox:options:getSpecialUse:statusDataItems:statusEntriesByMailbox:withCommand:
_listingForMailboxUid:listAllChildren:
_listingForMailboxUid:listAllChildren:onlySubscribed:
_listingForMailboxUid:listAllChildren:onlySubscribed:statusDataItems:withConnection:statusEntriesByMailbox:
_loadMailboxListingIntoCache:attributes:children:parent:
_localMailboxNameForType:usingDisplayName:
_lockOrderingArray
_magic
_mailAccount
_mailPropertyFromAppleAccountForKey:
_mailboxListFilter
_mailboxListingChanged
_mailboxName
_mailboxPathPrefix
_mailboxUidForName:
_mailboxesToSynchronize
_mailboxesWereRemovedFromTree:withFileSystemPaths:
_mainConsumer
_mask
_message
_messageData
_missingUIDs
_modSequenceNumber
_moveMessageSet:toMailboxName:command:newMessageInfo:
_mustRegisterForPushOnNextConnection
_nameForMailboxUid:
_newConnection
_newMailboxWithParent:name:attributes:dictionary:withCreationOption:
_newMessageCount
_newSearchResponseQueueForConnection:limit:
_nextConnectionTag
_noModSequence
_notesPrefix
_notificationNameForMailbox:withPrefix:
_numNewUIDs
_objectForAccountInfoKey:
_observingPushedFoldersPrefsChanged
_offlineCache
_offlineCacheFlushHandler
_offsetAdjustment
_opSpecific
_ops
_opsPending
_originalDataLength
_originalEnd
_originalStart
_packetContextAssertion
_pathComponentForUidName:
_pendingFetchResults
_performActionsOnConnection:uidsToFetch:uidsToSync:messagesToCompact:libraryDetails:flagSearchResults:shouldForce:newUIDsToFetch:
_performAppendOperation:withContext:
_performBodyDataDownload:usingConnection:isPartial:
_performCopyOperation:withContext:
_performCreateOperation:withContext:
_performDeleteOperation:withContext:
_performStoreOperation:withContext:
_prepareAliasData
_privacySafeDescription
_purgeStaleFlagChanges
_pushRegisteredMailboxes
_pushService
_pushedMailboxUids
_queue
_queueAccountInfoDidChange
_queueDeferredOperation:
_range
_readCustomInfoFromMailboxCache:
_readDataOfLength:
_readyForPushRegistration
_recentFlagChanges
_recentsExist
_registerForDeviceTokenChanges
_registerPushNotificationPrefix:forMailboxNames:
_relativePath
_releaseAllConnectionsAndCallSuper:
_releaseAllConnectionsAndCallSuper:edgeForcedOnly:ifIdleForTimeInterval:saveOfflineCache:
_removeCredential:
_removeFetchUnitMatchingResponse:
_removePasswordInKeychain
_renameLocalSpecialMailboxesToName:
_reserved
_resetAppleAccount
_response
_responseConsumer
_responseFromSendingCommand:andPossiblyCreateMailbox:
_responseFromSendingCommands:count:
_responseType
_scheduleIdleTransition:
_schedulePushRegistrationConnection
_searchArgumentsForSynchronize
_searchFlagsForUIDs:usingConnection:
_searchTerms
_searchUidsForMessageIDs:excludeDeleted:
_section
_selectMailbox:withConnection:
_selectedMailbox
_selectedUID
_sendApplePushForAccountIfSupported:
_sendClientInfoIfSupported
_sendCommands:count:response:
_sendMailboxCommand:withArguments:
_sending
_sentResponse
_separatorChar
_serverDeletedCount
_serverErrorForAccount:response:command:
_serverNamespace
_serverUidNext
_setCapabilities:
_setChildren:forMailboxUid:
_setFlagsForMessages:
_setFlagsFromDictionary:forMessages:
_setSpecialMailbox:forType:
_settingServerCount
_setupExpectedFetchResult
_shouldCompact
_shouldContinueToPreservedUID:
_shouldFetch
_shouldLogDeleteActivity
_shouldSyncFlags
_shouldUseIDLE
_size
_specialMailboxUidWithType:create:
_start
_startAPS_nts
_startedFetch
_stopAPS_nts
_store
_streamEventQueue
_subdownloads
_supportedPushServiceLevel
_supportsCustomPermanentFlags
_supportsDollarForwardedFlag
_supportsDollarJunkFlag
_supportsDollarNotJunkFlag
_supportsForwardedFlag
_supportsJunkFlag
_supportsNotJunkFlag
_synchronizeAccountWithServer
_synchronouslyLoadListingForParent:
_synchronouslySetFlags:clearFlags:forMessages:originalChanges:
_tag
_temporaryUids
_textConsumer
_textFilter
_timeLastFetchedMailboxList
_topLevelPart
_tryConnectionUsingAccount:
_type
_typeSpecific
_uid
_uidNameForPathComponent:
_uidsForMessageIDs:excludeDeleted:
_uidsForMessages:
_uidsWithFlagMaskSet
_uidsWithoutFlagMaskSet
_unregisterForDeviceTokenChanges
_unwatchedTopics
_updateCapabilitiesForAccount:withAuthenticationResponse:
_updateEmailAddressAndAliases
_updateLibraryForTransferedMessages:toDestinationMailbox:newMessageInfo:flagsToSet:
_updatePushedMailboxesAndNotify:
_updateSearchCapabilityWithAccount:
_updateSelectedUID:
_updateSeparatorAndNamespaceWithConnection:
_updateServerUnreadCount:
_updatedDefaultEmail
_updatingCache
_url
_urlFromResponse:
_usingPartialDownloads
_verifiedESearchResponse
_waitForMailboxListingLoadToComplete
_watchedTopics
_webLoginErrorWithURL:
_writeMailboxCacheWithPrejudice:
aa_authToken
aa_authTokenWithError:
aa_firstName
aa_lastName
aa_password
aa_personID
aa_updatePropertiesForAppleAccount:completion:
abort
accountDescription
accountForRenewingCredentials
accountPropertiesValueForKey:value:
accountPropertyForKey:
accountRelativePath
accountStore
accountType
accountTypeIdentifier
accountTypeString
accountWithProperties:
accountWithUniqueId:
acquireExclusiveAccessKey
acquireNetworkAssertion
actsOnTemporaryUid:
addCancelable:
addClientToken:forAccount:
addCommandsForDownload:toPipeline:
addCommandsToPipeline:withCache:
addConsumer:forSection:
addDiagnosticsGenerator:
addEntriesFromDictionary:
addFetchCommandForUid:fetchItem:expectedLength:bodyDataConsumer:consumerSection:
addFlagChanges:forMailboxPath:UID:
addFlagChanges:forMessages:
addIndex:
addIndexes:
addIndexesInRange:
addInvocation:
addItem:
addMessages:newMessagesByOldMessage:
addMessages:withMailbox:fetchBodies:newMessagesByOldMessage:
addMessages:withMailbox:fetchBodies:newMessagesByOldMessage:remoteIDs:setFlags:clearFlags:messageFlagsForMessages:copyFiles:addPOPUIDs:dataSectionsByMessage:
addObject:
addObjectsFromArray:
addObserver:selector:name:object:
addRemoteID:mailbox:
additionalHeadersForFetch
afterDelay:performBlock:
ak_addClientInfoHeader
ak_addDeviceUDIDHeader
aliasLookupURL
allCredentials
allCriteriaMustBeSatisfied
allMailMailboxUid
allMailboxUids
allNonDeletedCountIncludingServerSearch:andThreadSearch:
allObjects
allValues
allocWithZone:
allowsAppend
allowsPartialDownloads
allowsTrustPrompt
andCompoundCriterionWithCriteria:
anisetteDataWithError:
anyObject
appStateObservable
appendBytes:length:
appendData:
appendData:forSection:
appendData:toMailboxNamed:flags:dateReceived:newMessageInfo:
appendDataForMimePart:toData:withPartData:
appendFormat:
appendMessages:unsuccessfulOnes:newMessageIDs:newMessages:flagsToSet:
appendMessages:unsuccessfulOnes:newMessageIDs:newMessages:flagsToSet:customIMAPFlagsToSet:
appendString:
appleAccount
apsTopic
archiveDestinationForMailbox:
archiveSentMessages
array
arrayByAddingObjectsFromArray:
arrayWithCapacity:
arrayWithObject:
arrayWithObjects:
arrayWithObjects:count:
attributes
authScheme
authSchemesForAccountClass
authToken
authTokenWithError:
authenticateUsingAccount:
authenticateUsingAccount:authenticator:
authenticatedConnection
authenticationMechanisms
authenticationState
authenticatorClass
authenticatorForAccount:connection:
autofetchAccount:mailboxUid:
autorelease
base64EncodeResponseData
bodyDataConsumer
bodyFetchRequiresNetworkActivity
bodyParameterForKey:
bodyStructure
boolForKey:
boolValue
bundleIdentifier
bytes
bytesFetched
cachePolicy
cacheStateForUIDs:mask:existenceSetsFlag:
calendarWithIdentifier:
canAttemptPushRegistration
canAuthenticateAccountClass:connection:
canCompact
canFetch
canFetchMessageIDs
canFetchSearchResults
canGoOffline
canMailboxBeDeleted:
canPerformOfflineAppend
canProvideMinimumRemoteID
canReceiveNewMailNotifications
canRegisterForAPSPush
cancel
cancelationToken
capabilities
caseInsensitiveCompare:
castleAccount
certUIService
changePushedMailboxUidsAdded:deleted:
characterAtIndex:
checkInConnection:
checkInConnection:destroy:
checkInConnectionsForStore:
childAccounts
childWithExtraAttribute:
childWithName:
chunkSize
class
classNamed:
cleanUpDownloadsForUid:
clientCertificates
clientInfo
clientInfoHeader
clientToken
clientTokenForAccount:
close
closeAndLogout
combineLatest:
commitTime
compactMessages:
compactWhenClosingMailboxes
compare:
compare:options:
compareByNumberWithMessage:
components:fromDate:toDate:options:
componentsJoinedByString:
componentsSeparatedByString:
condition
conformsToProtocol:
connectAndAuthenticate:
connectTime
connectUsingAccount:
connection
connection:channelSubscriptionsFailedWithFailures:
connection:didBeginBodyLoad:section:
connection:didChangeConnectedStatus:
connection:didFailToSendOutgoingMessage:error:
connection:didFinishLoadingBodyData:section:
connection:didLoadMoreBodyData:section:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didReceivePublicToken:
connection:didReceiveResponse:forCommand:
connection:didReceiveToken:forInfo:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveURLToken:forInfo:
connection:didReceiveURLTokenError:forInfo:
connection:didSendOutgoingMessage:
connection:shouldHandleUntaggedResponse:forCommand:
connectionBodyDataReadChunkSize:
connectionDidDisconnect:
connectionDidReconnect:
connectionForStore:delegate:options:
connectionTag
consumers
consumersBySection
containsIndex:
continuationResponses
conversationFlags
copy
copyAString
copyArgumentForSearchTerm:
copyArray
copyArrayAllowingNulls:
copyAtom
copyDateTime
copyDiagnosticInformation
copyFailedFetchResponse
copyFirstStringValueForKey:
copyLiteral
copyLiteralString
copyMessageSet
copyNumber
copyOfAllMessagesWithOptions:
copyQuotedString
copyRemoteIDForTemporaryUid:
copyResponseForUID:
copyStringFrom:to:withCaseOption:
copyUids:toMailboxNamed:newMessageInfo:
copyWithZone:
count
countByEnumeratingWithState:objects:count:
countForSearchOfIDSet:forTerms:success:
countForSearchOfUidSet:forTerms:success:
createMailbox:
credentialAccessibility
credentialWithError:
criteria
criterionForMailboxURL:
criterionIdentifier
criterionType
csAccountTypeString
currentDevice
currentHandler
currentLocale
currentMonitor
customFlags
customFlagsArray
data
dataHolder
dataTaskWithRequest:
dataUsingEncoding:
dataUsingEncoding:allowLossyConversion:
dataWithBytes:length:
dataWithCapacity:
dataWithJSONObject:options:error:
date
dateByAddingUnit:value:toDate:options:
dateReceived
dateReceivedAsTimeIntervalSince1970
dateWithTimeIntervalSince1970:
dateWithTimeIntervalSinceNow:
dateWithTimeIntervalSinceReferenceDate:
debugDescription
defaultCenter
defaultEmailAddress
defaultLoadOptions
defaultManager
defaultPathForAccountWithHostname:username:
defaultPathNameForAccountWithHostname:username:
defaultPortNumber
defaultSecurePortNumber
deferredOperations
delegate
deleteCharactersInRange:
deleteInPlaceForAllMailboxes
deleteInPlaceForMailbox:
deleteMailbox:
deleteMailboxes:account:
deleteMessages:moveToTrash:
deleteMessagesFromMailboxUid:olderThanNumberOfDays:
deleteMessagesOlderThanNumberOfDays:
deleteMessagesOlderThanNumberOfDays:compact:
deliveryAccountHostname
deliveryAccountPortNumber
deliveryAccountUsesSSL
deliveryHostname
deliveryPortNumber
derivesDeliveryAccountInfoFromMailAccount
descendantWithExtraAttribute:
description
descriptionWithLocale:indent:
deserializedCopyFromData:cursor:
destinationMailbox
dictionary
dictionaryWithCapacity:
dictionaryWithObjects:forKeys:count:
dictionaryWithObjectsAndKeys:
didFinishCommands:count:
disconnect
disconnectAndNotifyDelegate:
displayName
displayNameUsingSpecialNamesForMailboxUid:
displayedAccountTypeString
distinctUntilChanged
doCompact
doOnError:
done
doubleValue
downloadCache
downloadForMessage:
downloadForUid:section:expectedLength:consumer:
downloadForUid:section:length:consumer:
downloadForUid:section:range:consumer:
drain
duplicateMessages:newRemoteIDs:forMailbox:setFlags:clearFlags:messageFlagsForMessages:createNewCacheFiles:
eSearchIDSet:areMessageSequenceNumbers:arguments:success:returning:
eSearchIDSet:areMessageSequenceNumbers:forTerms:success:returning:
ef_defaultAllowedCharacterSet
ef_filter:
ef_firstObjectPassingTest:
ef_hexString
ef_insertObject:usingComparator:allowDuplicates:
ef_insertObject:usingSortFunction:context:allowDuplicates:
ef_md5Digest
ef_publicDescription
ef_subarraysOfSize:
emailAddressHostPart
emailAddressWithUsername:
emailAddresses
emailAddressesAndAliases
emailAddressesAndAliasesList
emailAddressesDictionary
emitError:
emitWarning:
emptyFrequencyForMailboxType:
emptyTrash
enableAccount
enableThroughputMonitoring:
encoding
endCompression
enumerateByteRangesUsingBlock:
enumerateConvertingNewlinesUsingBlock:
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
envelope
ephemeralSessionConfiguration
error
errorForResponse:
errorWithDomain:code:localizedDescription:
errorWithDomain:code:localizedDescription:title:userInfo:
errorWithDomain:code:userInfo:
expectedLength
expectedSize
expression
expungeTemporaryUid:
expungeUids:
failureCount
failureReason
failureResponsesFromSendingCommandsWithConnection:
fetchArgumentForMessageSkeletonsWithTo:
fetchBodyData
fetchData
fetchHeadersForUid:
fetchItem
fetchLimits
fetchMailboxList
fetchMessageIdsForUids:
fetchMessagesMatchingCriterion:limit:
fetchMessagesWithMessageIDs:andSetFlags:
fetchMessagesWithRemoteIDs:andSetFlags:
fetchMessagesWithUIDs:connection:newCount:flagsToSet:queueClass:
fetchMinBytes
fetchNumMessages:preservingUID:options:
fetchPipeline
fetchResultWithType:
fetchResults
fetchStatusForMailboxes:args:
fetchUniqueRemoteIDsForUids:
fileExistsAtPath:
fillLiteralBuffer:count:dataLength:nonSynchronizingLiteral:
filterMailboxList:forMailbox:options:
filterWithConsumer:
finishIdle
finishWithError:
finishWithResult:
firstEmailAddress
firstHeaderForKey:
firstIndex
firstObject
firstTemporaryUid
firstUidForCopyingMessages:fromMailbox:toMailbox:
flagChangesForMailboxPath:UID:connectTime:
flags
flagsArray
flagsFetchResult
flagsForItem:
flagsToClear
flagsToSet
floatForKey:
flush
flushCriteria
flushOfflineCache
focusedMessageDidChange:
fromEmailAddresses
fromEmailAddressesIncludingDisabled
fullBodyDataForMessage:andHeaderDataIfReadilyAvailable:isComplete:downloadIfNecessary:didDownload:
future
getConfigurationFromServerForEmail:
getDetailsForMessages:absoluteBottom:topOfDesiredRange:range:fromMailbox:
getDetailsForMessagesWithRemoteIDInRange:fromMailbox:
getMailboxIDForUID:
getMailboxListWithConnection:
getMailboxListWithConnection:statusDataItems:statusEntriesByMailbox:
getMessageId:andInternalDate:forDestinationUid:
getNumber:
getNumberOfAttachments:isSigned:isEncrypted:
getQuotaForRootName:
globalAsyncScheduler
globalAsyncSchedulerWithQualityOfService:
gotBadResponse
gotNewMessagesState
greatestInboxUid
hadWarningOrError
handleAlertResponse:
handleBytesAvailable
handleFailureInFunction:file:lineNumber:description:
handleFailureInMethod:object:file:lineNumber:description:
handleFetchResponse:forUid:
handleFetchResponses:
handleFetchResult:
handleItems:
handleOverQuotaResponse:
handlePushNotificationOnMailboxes:missedNotifications:
handleStreamEvent:
hasBytesAvailable
hasOperationsForMailbox:
hasPendingOfflineOperations
hasPrefix:
hasSuffix:
hasValidCacheFileForMessage:
hash
headerData
headerDataForMessage:downloadIfNecessary:
headersIfAvailable
host
hostname
humanReadableName
iconString
identifier
idle
idleCommandSequenceNumber
idleSubscriptionCancelable
imapNotEnabledPrefix
inaccessiblePasswordErrorWithTitle:
includeRemoteBodyContent
increment
indexGreaterThanIndex:
indexLessThanIndex:
indexOfObject:
indexOfObjectIdenticalTo:
indexSet
init
initForDataclass:
initWithArray:
initWithAuthScheme:account:connection:
initWithBytes:length:
initWithBytes:length:encoding:
initWithCapacity:
initWithCharacters:length:
initWithCondition:
initWithConnection:response:start:end:
initWithConnection:responseConsumer:
initWithConsumer:
initWithConsumers:
initWithContentsOfFile:options:error:
initWithData:
initWithData:encoding:
initWithData:partial:incomplete:
initWithDictionary:
initWithFlags:customFlags:size:uid:
initWithFlagsToSet:flagsToClear:forUids:inMailbox:
initWithFloat:
initWithHeaderData:encoding:
initWithIMAPAccount:
initWithImmutableData:
initWithKey:ascending:
initWithLibrary:persistentAccount:
initWithLocaleIdentifier:
initWithMailboxToCreate:
initWithMailboxToDelete:
initWithMailboxUid:readOnly:
initWithMask:searchTerms:positiveMatch:
initWithMaximumSize:latency:
initWithMessage:
initWithName:andDelegate:
initWithObjects:
initWithObjects:count:
initWithObjects:forKeys:
initWithObjectsAndKeys:
initWithPath:UID:changes:
initWithResultCode:failedMessages:transferedMessage:
initWithSet:
initWithType:
initWithType:mailbox:
initWithTypes:error:
initWithURL:
initWithUTF8String:
initWithUid:
initWithUid:section:estimatedLength:consumer:
initWithUid:section:length:consumer:
initWithUid:section:length:lengthIsKnown:range:consumer:
initWithUid:section:range:consumer:
initWithUidsToCopy:fromMailbox:toMailbox:firstNewUid:
initWithUnsignedLongLong:
initWithUser:password:persistence:
initialize
insertObject:atIndex:
intValue
integerForKey:
integerValue
internalDate
internalDates
intersectSet:
invalidateAndCancel
invocationWithSelector:target:object:taskName:priority:canBeCancelled:
is3GConnection
is4GConnection
isAccountClassEquivalentTo:
isActive
isBatterySaverModeEnabled
isCellularConnection
isComplete
isDraftsMailboxType:
isEnabledForDataclass:
isEqual:
isEqualToDictionary:
isEqualToString:
isEquivalentTo:hostname:username:
isFatPipe
isFetching
isForeground
isFull
isIdle
isInternal
isKindOfClass:
isMailboxLocalForType:
isMainThread
isMemberOfClass:
isMessageContentsLocallyAvailable
isMobileMail
isNetworkUp
isOffline
isPartial
isPluggedIn
isPredefinedAccountType
isProvisionedForDataclass:
isReadable
isRemoteSearch
isResponseWithCode:
isSSLEditable
isSending
isShared
isSourceOfTemporaryUid:
isSpecialMailbox:
isSubclassOfClass:
isSyncingNotes
isUntagged
isUsernameEquivalentTo:
isValidBase64:
justSentPlainTextPassword
keyEnumerator
keyValuePairs
lastEmailAliasesSyncDate
lastIndex
lastKnownCapabilities
lastObject
lastPushRegistration
lastTemporaryUid
lastUsedTime
lazyFutureWithBlock:
legacyKeychainProtocol
length
lengthOfDataBeforeLineConversion
libraryID
libraryIMAPStore:bodyDownloadBeganForUid:data:section:
libraryIMAPStore:bodyDownloadCompletedForUid:data:section:
libraryIMAPStore:bodyDownloadReceivedMoreDataForUid:data:section:
limit
listingForMailbox:options:getSpecialUse:statusDataItems:statusEntriesByMailbox:
literalChunkSize
literalWithResponseConsumer:section:
load
loadCachedHeaderValuesFromHeaders:
localAccount
localizedCompare:
localizedDescription
localizedStringForKey:value:table:
localizedStringFromPersonNameComponents:style:options:
lock
lockStateObservable
lockWhenCondition:beforeDate:
locked_finishIdle
locked_scheduleIdle
locked_scheduleIdleResetAfterDelay:
locked_startIdle
logReadChars
logReadChars:length:
loginDisabled
loginDisabledErrorWithTitle:
loginWithAccount:password:
logout
lookAhead
lowPowerModeObservable
machineID
mailAccount
mailAccountIfAvailable
mailboxAttributes
mailboxListFilter
mailboxName
mailboxPathExtension
mailboxUid
mailboxUidForRelativePath:create:
mailboxUidFromActiveAccountsForURL:
mailboxUidOfType:createIfNeeded:
mailboxesRegisteredForPushByHash
mainBundle
mainConsumer
makeObjectsPerformSelector:
map:
mask
match:
match:upToSpecial:
matchesFetchResponse:
matchesInString:options:range:
maximumRemoteIDForMailbox:
messageData
messageDataHolder
messageFlags
messageForRemoteID:
messageForRemoteID:inMailbox:
messageID
messageIdRollCall:
messageIds
messageIsDeletedCriterion:
messageSetForNumbers:
messageSetForNumbers:range:
messageSetForNumbers:range:maxTokens:indexOfLastNumber:
messageSetForRange:
messageSetForRange:butNotNumbers:
messageSize
messageStore
messageToSyncFlagsForUID:
messageWithLibraryID:options:inMailbox:
messageWithRemoteID:inRemoteMailbox:
messagesAdded:
messagesForMailbox:olderThanNumberOfDays:
messagesMatchingCriterion:options:
messagesWereAdded:
mf_addObject:forKey:
mf_addressDomain
mf_appendCString:
mf_boolForKey:
mf_convertNetworkLineEndingsToUnix
mf_decodeModifiedBase64
mf_decodedIMAPMailboxName
mf_encodeBase64WithoutLineBreaks
mf_encodeModifiedBase64
mf_encodedIMAPMailboxName
mf_fileSystemString
mf_formattedAddressWithName:email:useQuotes:
mf_indexOfMailboxDictionaryWithName:
mf_invocationWithSelector:target:
mf_isInaccessibleAccountCredentialError
mf_isLegalEmailAddress
mf_isUserCancelledError
mf_lockWithPriority
mf_makeCompletePath:mode:
mf_makeImmutable
mf_rangeOfRFC822HeaderData
mf_shouldFailDownload
mf_subdataWithRange:
mf_tryLock
mf_uncommentedAddress
mf_unlock
mfl_lockOrdering
mimeBody
minBytesLeft
minID
minUID
minimumPartialDownloadSize
minimumRemoteIDForMailbox:
minusSet:
missingPasswordErrorWithTitle:
modSequenceNumber
moveMessages:fromMailbox:toMailbox:markAsRead:
moveMessages:toMailbox:markAsRead:
moveSequenceSet:toMailboxName:newMessageInfo:
moveUIDSet:toMailboxNamed:newMessageInfo:
mustRegisterForPushOnNextConnection
mutableBytes
mutableCopy
mutableCopyWithZone:
name
nameForMailboxUid:
needToSynchronizeMailboxCaches
networkChanged
newChildAccountWithParentAccount:error:
newDictionaryForLocalFlags:serverFlags:existingDictionary:
newMailboxNameIsAcceptable:reasonForFailure:
nextObject
nextSeparator
noop
notificationNamesForPrefix:mailboxUids:
notificationWithName:object:userInfo:
notifyConnectionEstablished
notifyDelegateOfBodyLoadAppendage:section:
notifyDelegateOfBodyLoadCompletion:section:
notifyDelegateOfBodyLoadStart:section:
nowWouldBeAGoodTimeToStartBackgroundSynchronization
null
number
numberOfNewlinesNeedingConversion:
numberWithInteger:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLong:
numberWithUnsignedLongLong:
oauth2Token
object
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
observeOn:
observerWithResultBlock:
offlineCache
offlineCacheDirectoryPath
offlineCacheIfExists
offlineCacheIfOffline
operationType
originalMailboxURL
parameters
parent
parentAccount
parentAccountIdentifier
parentAccountMailProperties
parseESearchResponseWithContext:
parseIMAPPropertyList:
parseIndexSetFromSequenceSet:
parseSearchReturn:
parseSpace
partName
partNumber
password
passwordForServiceName:accountName:synchronizable:error:
passwordFromKeychain
path
pathComponents
paths
percentDone
performBatchOperationWithUIDs:requiringConnection:withOptions:operation:
performCustomCommand:withArguments:
performDeferredOperationsWithConnection:
performOperationRequiringConnection:withOptions:operation:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
persistentAccount
persistentAccountDidChange:previousAccount:
persistentNameForMailbox:
personID
pluggedInObservable
portNumber
postNotification:
postNotificationName:object:
postNotificationName:object:userInfo:
powerlog:eventData:
predefinedValueForKey:
preferredAuthScheme
preferredEncoding
previousFailureCount
primaryMailboxUid
privateNamespaces
processResults
processResultsForUid:
propertiesForDataclass:
publicNamespaces
pushUpdateForAliasData
pushedMailboxUids
qualifier
quotaPercentagesForMailbox:
quotaRootName
quotaRootNames
quotas
raise:format:
range
rangeOfString:
rangeOfString:options:
rangeOfString:options:range:
rangeValue
readBufferSize
readBytesIntoData:desiredLength:
readLineIntoData:
reason
receiveEmailAliasAddresses
reference
registerForPush:
registerPushNotificationPrefix:forMailboxUids:
registerSchemeClass:
relativePath
releaseAllConnections
releaseAllConnectionsIdleForTimeInterval:
releaseAllForcedConnections
releaseNetworkAssertion
relinquishExclusiveAccessKey:
remoteHostname
remoteID
remoteIDsFromUniqueRemoteIDs:
remoteMailboxURL
removeAccountPropertyForKey:
removeAllLocalMessages
removeAllObjects
removeCredential:forProtectionSpace:
removeDiagnosticsGenerator:
removeFlagChanges:forMessages:
removeFlagChangesCommittedBefore:
removeIndex:
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removeObjectIdenticalTo:
removeObjectsInRange:
removeObserver:name:object:
removePasswordForServiceName:accountName:
removeSubdownload:
renameMailbox:newName:parent:
renameMailbox:toMailbox:
replaceObjectAtIndex:withObject:
replaceObjectsInRange:withObjectsFromArray:
replaceObjectsInRange:withObjectsFromArray:range:
reportAuthenticationError:authScheme:
requestWithMask:searchTerms:positiveMatch:
requiresAuthentication
requiresDataForOfflineTransfersFromStore:
requiresPassword
reset
resetMailboxTimer
resetSpecialMailboxes
resetWarningOrError
respondsToSelector:
response
responseCode
responseConsumer
responseForServerData:
responseInfo
responseName
responseType
resultWithTimeout:error:
resume
retain
retainCount
retainedReference
rootMailboxUid
routingInfo
saslName
saveChanges
savePersistentAccount
saveSentFolder
saveState
scanInteger:
scanLocation
scheduleIdleReset
searchIDSet:forTerms:success:
searchResults
searchTerms
searchUIDs:withFlagRequests:
searchUidSet:forNewMessageIDs:
searchUidSet:forTerms:success:
secureServiceName
securityLayer
securityProtocol
selectMailbox:withAccount:
self
sendResponsesForCommand:toQueue:
sendResponsesForCondStoreFlagFetchForUIDs:withSequenceIdentifier:toQueue:
sendResponsesForUIDFetchForUIDs:fields:toQueue:
sendResponsesForUIDs:fields:flagSearchResults:toQueue:
sendSkeletonResponsesForUIDs:includeTo:toQueue:
sendUidAndFlagResponsesForUIDs:sequenceIdentifierProvider:flagSearchResults:toQueue:
sendUidResponsesForSearchArguments:toQueue:
sender
separator
separatorChar
sequenceIdentifierForItem:
sequenceIdentifierForMessagesWithRemoteIDs:inMailbox:
sequenceIdentifierForUIDs:
serialDispatchQueueSchedulerWithName:qualityOfService:
serializeIntoData:
serverInfo
serverMessageCount
serverPathPrefix
serverPathPrefixAccountValue
serverRegisteredMailboxes:withTopic:version:
serviceName
sessionWithConfiguration:delegate:delegateQueue:
setAPSTopic:
setAccount:
setAccountIdentifier:
setAccountProperty:forKey:
setAdditionalFetchHeaders:
setAdditionalHeadersForFetch:
setAdditionalSynchronizationSearchArguments:
setAllowsPartialDownloads:
setAttributes:
setAuthenticationState:
setAuthenticationType:
setBodyDataConsumer:
setBodyStructure:
setCancelationToken:
setCapabilities:
setCastleAccount:
setChunkSize:
setClientCertificates:
setCommitTime:
setConnectionError:
setConnectionTag:
setConnectionTag:forFlagChanges:forMessages:
setConsumerSection:
setCurrentCount:
setCustomFlagsArray:
setData:
setData:forMessage:isPartial:
setDataHolder:
setDateFormat:
setDateReceivedTimeIntervalSince1970:
setDefaultEmailAddress:
setDelegate:
setDisplayName:maxCount:
setDownloadDelegate:
setEmailAddresses:
setEnabled:forEmailAddress:
setEnvelope:
setError:
setEventHandler:
setExpectedLength:
setExtraAttributes:
setFailureCount:
setFamilyName:
setFetchBodyData:
setFetchData:
setFetchItem:
setFetchMaxBytes:
setFetchMinBytes:
setFetchResults:
setFlags:
setFlags:andClearFlags:forMessages:
setFlags:andClearFlags:forUids:forMailbox:
setFlagsArray:
setFlagsCancelled:forMessages:
setFlagsFetchResult:
setFlagsForAllMessagesFromDictionary:
setFlagsFromDictionary:forMessages:
setFlagsLocallyFromDictionary:forMessages:
setFull:
setGivenName:
setGotNewMessagesState:
setHTTPBody:
setHTTPMethod:
setHandlerForTemporaryUidToRemoteIDMapping:
setHasTemporaryUid:
setHeaders:
setHighestModSequence:
setHost:
setHostname:
setIdleCommandSequenceNumber:
setIdleSubscriptionCancelable:
setInternalDate:
setIsFetching:
setIsOffline:
setIsPartial:
setLastEmailAliasesSyncDate:
setLastKnownHostname:
setLastPushRegistration:
setLastSyncAndMostRecentStatusCount:forMailbox:
setLength:
setLibrary:
setLocalDefaultEmailAddress:
setLocale:
setLocallyEnabled:forEmailAddress:
setMailbox:
setMailboxAttributes:separator:mailboxName:extraAttributes:
setMailboxListFilter:
setMailboxName:quotaRootNames:
setMailboxName:statusEntries:
setMailboxNames:
setMailboxUidValidity:
setMaximumLatency:
setMessageData:isPartial:
setMessageFlags:
setMessageId:andInternalDate:forMessageWithSourceUid:
setMessageStore:
setMinBytesLeft:
setMissingPasswordError
setModSequenceNumber:
setMoreInfo:
setMustRegisterForPushOnNextConnection:
setName:
setNotificationNamePrefix:
setNumber:
setObject:forKey:
setObject:forKeyedSubscript:
setParentAccount:
setPassword:
setPasswordInKeychain:
setPath:
setPaths:
setPortNumber:
setPreferredAuthScheme:
setPreferredEncoding:
setPreferredEncoding:forMessage:
setPrivateNamespaces:
setPublicNamespaces:
setQuotaRootName:quotas:
setReadBufferSize:
setReadBufferSizeFromElapsedTime:bytesRead:
setReadSizeParameters
setReceiveEmailAliasAddresses:
setRepresentedAccount:
setResponseConsumer:
setResponseName:parameters:
setResponseType:
setScanLocation:
setScheme:
setSearchResults:
setSection:
setSecurityProtocol:
setSequenceIdentifier:forMessageWithLibraryID:
setSequenceIdentifier:forMessagesWithRemoteIDs:inMailbox:
setSequenceIdentifier:forUIDs:
setServerInfo:
setServerMessageCount:
setServerPathPrefix:
setServerUnreadOnlyOnServerCount:forMailbox:
setSharedNamespaces:
setShortDescription:
setShouldFlattenCacheOperations:
setShouldUseIDLE:
setStart:
setStoreMailboxType:onServer:
setSupportedPushServiceLevel:
setTaskName:
setTimeout:
setTopLevelPart:
setUid:forMessageWithTemporaryUid:
setUidFlagsChange:
setUids:
setUniqueRemoteId:
setUrls:
setUserData:responseCode:responseInfo:
setUserInfoObject:forKey:
setUsername:
setUsesRealUids:
setUsesSSL:
setValue:forHTTPHeaderField:
setValue:forKey:
setValueInAccountInfo:forKey:
setValueInAccountProperties:forKey:
setWithArray:
setWithCapacity:
setWithObject:
setWithSet:
sharedAccountStore
sharedController
sharedCredentialStorage
sharedInstance
sharedInvocationQueue
sharedManager
sharedNamespaces
shouldAddUID:
shouldArchiveByDefault
shouldCancel
shouldDisplayHostnameInErrorMessages
shouldEnableAfterError:
shouldExpungeMessagesOnDelete
shouldFetchACEDBInfoForError:
shouldRegisterForPush
shouldRestoreMessagesAfterFailedDelete
shouldRetryEmptyBodyDownloadForMessage:
shouldStartIdleForConnection:
shouldUseAuthentication
shouldUseIDLE
shouldUseNonDeletedForUnreadCount
showWithHandler:
sortUsingFunction:context:
sortUsingSelector:
sortedArrayUsingDescriptors:
sourceUidForTemporaryUid:
sourceUids
specialMailboxNameForType:
specialUseAttributeForType:
standardAccountClass:valueForKey:
standardUserDefaults
start
startCompression
startListeningForNotifications
startOffset
startTLSForAccount:
startWatchingForTopic:
startWith:
statisticsKind
statusCode
statusEntries
statusString
stopListeningForNotifications
stopWatchingForTopic:
store
storeClass
storeFlags:state:forRange:
storeFlags:state:forUids:
storeForMailboxUid:
storeMailboxTypeOnServer:
storeSearchResultMatchingCriterion:limit:offset:error:
string
stringByAddingPercentEncodingWithAllowedCharacters:
stringByAppendingFormat:
stringByAppendingString:
stringByTrimmingCharactersInSet:
stringValue
stringWithCString:encoding:
stringWithFormat:
stringWithString:
stringWithUTF8String:
structureDidChange
subarrayWithRange:
subdownloads
subscribe:
subscribeMailbox:
subscribedListingForMailbox:options:
substringFromIndex:
substringToIndex:
substringWithRange:
superclass
supportedPushServiceLevel
supportsAppend
supportsArchiving
supportsCapability:
supportsFastRemoteBodySearch
supportsInitialClientResponse
supportsMailboxEditing
supportsRemoteAppend
supportsUserPushedMailboxes
swapTopic:forNewTopic:
syncMessagesWithUIDs:connection:libraryDetails:flagSearchResults:
taskName
throttledGetMailboxListWithConnection:
timeIntervalSince1970
timeIntervalSinceReferenceDate
topLevelPart
topic
transferDisabledMailboxUids
transferNotificationSessionToAccount:
type
uidFlagsChange
uidForItem:
uids
uidsReferencedBy:
unionSet:
uniqueId
uniqueRemoteIDsForMessages:
uniqueRemoteId
unlock
unlockWithCondition:
unreadCount
unselect
unselectMailbox:
unsignedIntValue
unsignedIntegerValue
unsignedLongLongValue
unsubscribeMailbox:
updateDeletedCount
updateDeletedCountWithNotDeletedCount:
updateEmailAliases
updateMostRecentStatusCount:
updatePushRegisteredMailboxes:
updateServerUnreadCountClosingConnection:
urls
useCredential:forAuthenticationChallenge:
useGenericDescription:
userData
userFullName
userInfo
userInfoBoolForKey:
userInfoObjectForKey:
userString
username
usernameIsEmailAddress
usesRealUids
valid
valueForKey:
verifyESearchSupportWithBlock:
wasFromStorage
weakReferenceWithObject:
whitespaceAndNewlineCharacterSet
whitespaceCharacterSet
wifiObservable
willFetchMessages
willRemoveDelegation:
willSetFlagsFromDictionary:forMessages:
writeBytes:length:dontLogBytesInRange:
writeData:
writeData:dontLogBytesInRange:
writeToFile:options:error:
xListSupportedOnConnection:
zone
@16@0:8
@24@0:8@16
B16@0:8
I16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@20@0:8i16
@20@0:8B16
v24@0:8@16
v16@0:8
@"AOLAccount"
@32@0:8@16@24
@32@0:8@16^@24
B40@0:8@16@24@32
v32@0:8@16@24
v20@0:8I16
v20@0:8B16
@24@0:8^@16
v28@0:8B16@20
@"MFLock"
@"ACAccount"
@"DeliveryAccount"
@"NSMutableDictionary"
@"NSString"
@"NSObject<OS_dispatch_queue>"
B40@0:8@16^@24@32
@48@0:8@16B24@28^B36i44
v40@0:8@16@24@?32
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v40@0:8@16@24@32
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
i24@0:8@16
i20@0:8i16
@"EFPromise"
@"NSURLCredential"
@"GmailAccount"
B32@0:8#16@24
@"NSArray"
@"IMAPAccount"
@36@0:8@16I24@28
d16@0:8
v24@0:8d16
@"NSDictionary"
^v16@0:8
B40@0:8@16@24^{?=i@@Q@}32
v40@0:8@16@24^{?=i@@Q@}32
I24@0:8@16
B40@0:8@"MFIMAPConnection"16@"MFIMAPResponse"24^{?=i@@Q@}32
v40@0:8@"MFIMAPConnection"16@"MFIMAPResponse"24^{?=i@@Q@}32
v40@0:8@"MFIMAPConnection"16@"NSMutableData"24@"NSString"32
I24@0:8@"MFIMAPConnection"16
v24@0:8@"MFIMAPConnection"16
B24@0:8@"MFIMAPConnection"16
v36@0:8@16@24i32
v36@0:8@"NSMutableArray"16@"NSString"24i32
B32@0:8@16@24
B20@0:8i16
v24@0:8i16B20
@20@0:8I16
@36@0:8@16@24i32
v28@0:8@16B24
B24@0:8@?16
v24@0:8@?16
v36@0:8B16B20d24B32
@56@0:8@16B24B28@32@40^@48
@32@0:8@16B24B28
@28@0:8@16B24
@48@0:8@16@24I32@36i44
v28@0:8@16i24
@24@0:8i16B20
@44@0:8@16@24@32B40
B40@0:8@16@24^@32
@52@0:8@16@24I32@36@44
B32@0:8@16^@24
v28@0:8@16I24
v36@0:8@16@24I32
@36@0:8@16I24d28
v28@0:8d16I24
v36@0:8I16@20@28
i16@0:8
v20@0:8i16
^{__CFArray=}
@"MFIMAPOperationCache"
@"NSRecursiveLock"
@"NSMutableArray"
@"NSLock"
@"NSNumber"
@"NSSet"
v52@0:8I16@20Q28@36@44
v24@0:8Q16
@"MFIMAPFetchResult"
@"<MFDataConsumer>"
i48@0:8*16Q24Q32^B40
Q40@0:8^{?=i@@Q@}16Q24^@32
@24@0:8^{?=i@@Q@}16
@32@0:8@16^{?=i@@Q@}24
@40@0:8@16@24^{?=i@@Q@}32
i40@0:8@16@24@32
@60@0:8i16@20@28i36B40@44^@52
@52@0:8@16i24B28@32^@40i48
@48@0:8@16i24B28@32^@40
@28@0:8@16i24
B28@0:8i16@20
@40@0:8@16@24^B32
Q40@0:8@16@24^B32
I20@0:8I16
B36@0:8@16B24@28
B36@0:8@16B24{?=II}28
@32@0:8^{?=i@@Q@}16@24
B56@0:8@16@24@32@40^@48
@24@0:8B16B20
v32@0:8^Q16^I24
v32@0:8d16Q24
B44@0:8{?=II}16@24B32@36
@24@0:8{?=II}16
@32@0:8{?=II}16@24
@56@0:8@16{_NSRange=QQ}24Q40^Q48
@40@0:8@16{_NSRange=QQ}24
@24@0:8^{_NSZone=}16
@24@0:8q16
@32@0:8^{?=i@@Q@}16Q24
B32@0:8^{?=i@@Q@}16@24
B48@0:8@16@24@32@40
v32@0:8^{?=i@@Q@}16Q24
@"<MFIMAPMailboxListFilter>"
@"NSMutableSet"
@"NSMutableData"
@"MFInvocationQueue"
{?="holder"@"MFWeakReferenceHolder""delegate"^v"shouldHandleUntaggedResponse"b1"didReceiveResponse"b1"didFinishSelect"b1"didDisconnect"b1"didBeginBodyLoad"b1"didReceiveMoreBodyData"b1"didFinishBodyDataLoad"b1"bodyDataReadSize"b1"setServerMessageCount"b1"setHighestModSequence"b1"willRemoveDelegation"b1"shouldStartIdle"b1}
@"<EFCancelable>"
Q24@0:8Q16
v36@0:8@16Q24B32
@24@0:8Q16
@36@0:8Q16@24B32
@"MFCountingDataConsumer"
@"MFBaseFilterDataConsumer"
@64@0:8I16@20Q28B36{_NSRange=QQ}40@56
@44@0:8I16@20Q28@36
@52@0:8I16@20{_NSRange=QQ}28@44
@"NSError"
{_NSRange="location"Q"length"Q}
(?="envelope"@"NSArray""internalDate"@"NSDate""messageSize"Q"bodyStructure"@"NSArray""bodySectionInfo"{?="section"@"NSString""startOffset"Q"sectionData"@"NSData"}"uid"I"uniqueRemoteId"Q"flags"{?="messageFlags"Q"customFlags"@"NSArray"})
@44@0:8Q16@24Q32I40
q24@0:8@16
@"MFMessage"
@"MFMimePart"
@"<MFCollectingDataConsumer>"
@"NSData"
@"MFMessageHeaders"
@32@0:8@16^Q24
C16@0:8
@28@0:8i16@20
@48@0:8@16@24@32@40
@44@0:8@16@24@32I40
@48@0:8I16I20@24@32@40
B20@0:8I16
B36@0:8^@16^@24I32
(?="store"{?="trueFlags"@"NSArray""falseFlags"@"NSArray""uids"^{__CFArray}}"append"{?="uid"I"flags"@"NSArray""internalDate"i"size"I}"copy"{?="srcUids"^{__CFArray}"dstUids"^{__CFArray}"destinationMailbox"@"NSString"})
v48@0:8@16@24@32@40
I40@0:8@16@24@32
I48@0:8@16@24@32@40
v32@0:8@16^{?=@@^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}IIi@}24
@"NSFileHandle"
@48@0:8@16@24r*32r*40
r*16@0:8
v24@0:8r*16
B24@0:8^Q16
B24@0:8r*16
B32@0:8r*16r*24
^{__CFArray=}20@0:8B16
@36@0:8r*16r*24i32
@"MFIMAPConnection"
@"MFIMAPResponse"
v36@0:8@16i24@28
v48@0:8Q16@24@32@40
(_IMAPResponseData="basic"{?="responseCode"i"responseInfoAndOrUserData"@}"capabilities"@"NSArray""number"Q"flags"@"NSArray""status"{?="mailboxName"@"NSString""entries"@"NSDictionary"}"searchResults"@"NSArray""list"{?="mailboxAttributes"Q"separatorAndOrMboxName"@"extraAttributes"@"NSArray"}"fetch"{?="number"Q"items"@"NSArray""modSeqNumber"Q}"quotaRoot"{?="mailboxName"@"NSString""quotaRootNames"@"NSArray"}"quota"{?="quotaRootName"@"NSString""quotas"@"NSArray"}"uidFlags"{?="uids"@"NSString""flagsFetchResult"@"MFIMAPFetchResult""change"b1}"serverInfo"@"NSDictionary""namespace"{?="private"@"NSArray""public"@"NSArray""shared"@"NSArray"}"other"{?="name"@"NSString""parameters"@"NSArray"})
@"MFIMAPResponseConsumer"
@"MFDataHolder"16@0:8
@"MFDataHolder"
B24@0:8Q16
@"MFLibraryIMAPStore"
Q24@0:8@16
@"NSMutableIndexSet"
@"NSString"24@0:8@"NSArray"16
v32@0:8@"NSString"16@"NSArray"24
Q56@0:8@16@24Q32Q40#48
Q48@0:8@16@24@32@40
v76@0:8@16^@24^@32^@40@48@56B64^I68
v24@0:8^Q16
Q108@0:8@16@24@32B40Q44Q52Q60^B68^{_NSRange=QQ}76^Q84^Q92^Q100
q40@0:8Q16@24Q32
@28@0:8@16I24
v40@0:8@16I24i28@?32
q28@0:8@16I24
@44@0:8@16I24@28^@36
q32@0:8@16Q24
B40@0:8^{?=@@@@B@@@@II}16@24@32
Q24@0:8^{?=@@@@B@@@@II}16
Q56@0:8@16@24@32@40@48
Q64@0:8@16@24@32@40@48@56
@36@0:8@16@24B32
@40@0:8Q16Q24@32
B28@0:8I16@20
B56@0:8@16{_NSRange=QQ}24^B40@48
@44@0:8@16^@24B32^B36
B32@0:8B16i20@?24
B40@0:8@16B24i28@?32
B40@0:8@16@24^Q32
v24@0:8I16I20
@"MFIMAPDownloadCache"
@"MFIMAPCommandPipeline"
@"EFCancelationToken"
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v40@0:8@"APSConnection"16@"NSData"24@"APSAppTokenInfo"32
v40@0:8@"APSConnection"16@"APSURLToken"24@"APSURLTokenInfo"32
v40@0:8@"APSConnection"16@"NSError"24@"APSURLTokenInfo"32
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
v24@0:8@"NSString"16
v32@0:8@"NSString"16@"NSString"24
@"NSData"16@0:8
@"APSConnection"
@"NSCountedSet"
@"NSConditionLock"
q40@0:8@16@24^@32
q44@0:8@16@24i32^@36
@28@0:8B16^@20
@"MFOSXServerIMAPAccount"
@40@0:8@16@24@32
@"CastleIMAPAccount"
@"YahooAccount"
aolAccountIcon
%@@aol.com
Sent
Trash
Drafts
Spam
AOL_DELIVERY_HOSTNAME
AOL SMTP Server
Delayed
icloud.com
iCloud-%@
iCloud
%@-%p
com.apple.message.icloud.alias-update
CastleIMAPAccount.m
Invalid parameter not satisfying: %@
nil != _appleAccountLock
CastleIMAPErrorDomain
Username
mac.com
me.com
dotMacMailSupported
EmailAddress
FullUserName
imapHostname
imapPort
imapRequiresSSL
v8@?0
Mailbox is over quota
smtpHostname
smtpPort
smtpRequiresSSL
sendFromAddressJSONURL
%@ (%@)
%@:%@
X-MobileMe-AuthToken %@
aliases
fullName
emails
address
canSendFrom
name
email
account
en_US_POSIX
EEE, dd MMM yyyy HH:mm:ss zzz
Current thread is main
Authorization
X-Apple-I-MD-M
X-Apple-I-MD
%llu
X-Apple-I-MD-RINFO
If-Modified-Since
p99-
v20@?0B8@"NSError"12
jsonrpc
update
method
params
POST
application/json-rpc; charset=UTF-8
castleAccountIcon
AKAnisetteProvisioningController
/System/Library/PrivateFrameworks/AuthKit.framework/AuthKit
### Failed to Soft Linked: /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit
(CHANGEDSINCE %@)
(FLAGS)
IMAPESearchMinKey
IMAPESearchMaxKey
IMAPESearchAllKey
IMAPESearchCountKey
IMAPESearchTagKey
-[MFIMAPConnection(ESearch) eSearchIDSet:areMessageSequenceNumbers:arguments:success:returning:]
ESearch.m
returning && "Should have at least one return request on an esearch command."
RETURN
Expected space
Expected number for minimum result
Expected number for maximum result
COUNT
Expected number for count result
Did not find a valid search return.
Expected right paren
\Important
\Starred
\AllMail
\Spam
gmail.com
Gmail
Your account is not enabled for IMAP use.
IDToken
gmailAccountIcon
VERIFICATION_REQUIRED_TITLE
Verification Required
WEBLOGIN_PROMPT_FORMAT
Log in to your %@ account
MailErrorHandlerDoNotSanitize
xwebalert
webalert
EnableSchema
EnableHost
EnablePath
apple
GMAIL_ALL_MAIL_SPECIAL_MAILBOX_NAME
All Mail
self
GMAIL_DELIVERY_HOSTNAME
Gmail SMTP Server
PLAIN-CLIENTTOKEN
MESSAGE_AUTH_GMAIL_CLIENTTOKEN
Gmail Client Token
IMAPAccountOfflineOperationQueued
ServerPathPrefix
CompactWhenClosingMailboxes
ListsSubscribedOnly
DaysBetweenSyncs
DateOfLastSync
PreventDismemberment
PushedMailboxes
NotesPushedMailboxes
NotesNotificationPrefix
flagChangesLock
connectionLock
separator
namespace
capabilities
push-service-level
push-registered-mailboxes
aps-topic
imapmbox
imap
imaps
IMAP
IMAP_SERVER_ALERT_FORMAT
WARNING_TITLE
Warning
DeleteInPlace
IMAP_OPEN_FAILED_TITLE_FORMAT
MailboxName
Apple Mail To Do
IMAPAccount
_releaseAllConnectionsAndCallSuper
edgeOnly
IMAP account %@ (%@)
com.apple.mail.imap.offlinestatuschange
INBOX
INBOX%@INBOX
-[IMAPAccount _newMailboxWithParent:name:attributes:dictionary:withCreationOption:]
IMAPAccount.m
creationOption == MailboxCreationOptionDefault
SYNCHRONIZING_WITH_SERVER_FORMAT
Synchronizing with server
CHECKING_FOR_MAIL
Main
v32@?0@"NSString"8@"NSDictionary"16^B24
B16@?0@"MFMailboxUid"8
@16@?0@"MFMailboxUid"8
IMAP_REMOVING_CACHE_FILES
Removing old cache files...
MAILBOX_NAME_INCLUDES_PATH_SEPARATOR
NO_OFFLINE_MAILBOX_RENAMING
.OfflineCache
Account
RelativePath
v32@?0@"NSString"8@"NSString"16^B24
.%@.%@
RelatedMessagesShouldIncludeDrafts
not 
CANNOT
is NOT
    topic: %@
    known capabilities: %@
    negotiated push service level: %@
    last push registration time: %@
<never>
    mailboxes registered for push: %@
StoreDraftsOnServer
StoreSentMessagesOnServer
StoreTrashOnServer
StoreArchiveOnServer
CSAccountTypeIMAP
/System/Library/Frameworks/CoreSpotlight.framework/CoreSpotlight
### Failed to Soft Linked: /System/Library/Frameworks/CoreSpotlight.framework/CoreSpotlight
<null>
<unavailable>
<unknown>
version 1
version 2
_pushServiceLevelName
0 && "unknown push service level"
BODYSTRUCTURE
BODY
.PEEK
HEADER
IMAPMailboxAttributes
DELETED
Source UIDS
Destination UIDS
\All
\Archive
\Drafts
\Flagged
\Junk
\Sent
\Trash
XAPPLEPUSHSERVICE
d-MMM-yyyy
(){ %*\"
    supports IDLE: %@
    using IDLE: %@ (seq=%lu)
STARTTLS
LITERAL+
LITERAL-
UIDPLUS
CHILDREN
IDLE
QUOTA
NAMESPACE
MULTIAPPEND
UNSELECT
LOGINDISABLED
XLIST
COMPRESS=DEFLATE
ESEARCH
CONDSTORE
SASL-IR
XYMHIGHESTMODSEQ
X-GM-EXT-1
MOVE
SPECIAL-USE
LIST-STATUS
LIST-EXTENDED
"%@"
"%@ (%@)"
"name"
"version"
"os"
"iOS"
"os-version"
%@%@
aps-version
aps-account-id
aps-device-token
aps-subtopic
mailboxes
mailbox
DEFLATE
FAILED_FETCH_TITLE
Cannot Get Mail
outNonSynchronizingLiteral
{%lu%s}
%lu 
v40@?0r^v8{_NSRange=QQ}16^B32
B32@?0r*8Q16B24B28
IMAP_OPEN_FAILED_MSG_FORMAT
IMAP_COMMAND_FAILED_FORMAT1
DisableESEARCH
DisableCOMPRESS
DisableCONDSTORE
FAILED_LOGIN
STATUS %@
RETURN (%@)
@"NSNull"16@?0^@8
*** Server doesn't support UIDPLUS
B8@?0
MESSAGE-ID
+FLAGS.SILENT
-FLAGS.SILENT
(\Deleted)
BEFORE
uids
RFC822.SIZE
BODY.PEEK[HEADER]
(BODY.PEEK[HEADER.FIELDS (MESSAGE-ID)])
(UID X-GM-MSGID)
MinFetchChunkSize
MaxFetchChunkSize
FetchDeltaTarget
%d:*
%d:%d
%lu:%lu
%lu:*
%lu:%u
TLS_NOT_SUPPORTED_FORMAT
TLS_FAILED_FORMAT
Disconnected
Non-authenticated
Authenticated
Selected
<%@:%p> [%@%s] delegate=%p mailbox=<%@>
, Fetching
<%@:%p> [%@%s] delegate=%p
(UID FLAGS)
-[MFIMAPConnection _fetchArgumentForMessageSkeletonsWithHeaders:]
IMAPConnection.m
requiredHeaders
(INTERNALDATE UID RFC822.SIZE FLAGS 
MODSEQ 
X-GM-MSGID 
BODY.PEEK[HEADER.FIELDS (
<%@: %p>
%@ set %@
%@ unset %@
CAPABILITY
NOOP
LOGOUT
AUTHENTICATE
LOGIN
LIST
LSUB
STATUS
EXAMINE
CREATE
DELETE
RENAME
SELECT
SUBSCRIBE
UNSUBSCRIBE
EXPUNGE
UID EXPUNGE
CLOSE
APPEND
FETCH
UID FETCH
UID STORE
UID COPY
UID SEARCH
GETQUOTAROOT
GETQUOTA
DONE
SEARCH
XDELIVER
COMPRESS
UID MOVE
"dd-MMM-yyyy HH:mm:ss ZZ"
TEXT
BODY.PEEK[
-[MFIMAPFetchResult envelope]
IMAPFetchResult.m
Invalid item type %d
-[MFIMAPFetchResult setEnvelope:]
-[MFIMAPFetchResult internalDate]
-[MFIMAPFetchResult setInternalDate:]
-[MFIMAPFetchResult fetchData]
-[MFIMAPFetchResult setFetchData:]
-[MFIMAPFetchResult messageSize]
-[MFIMAPFetchResult setMessageSize:]
-[MFIMAPFetchResult bodyStructure]
-[MFIMAPFetchResult setBodyStructure:]
-[MFIMAPFetchResult startOffset]
-[MFIMAPFetchResult setStartOffset:]
-[MFIMAPFetchResult section]
-[MFIMAPFetchResult setSection:]
-[MFIMAPFetchResult uid]
-[MFIMAPFetchResult setUid:]
-[MFIMAPFetchResult uniqueRemoteId]
-[MFIMAPFetchResult setUniqueRemoteId:]
-[MFIMAPFetchResult flagsArray]
-[MFIMAPFetchResult setFlagsArray:]
-[MFIMAPFetchResult setMessageFlags:]
-[MFIMAPFetchResult setCustomFlagsArray:]
-[MFIMAPFetchResult customFlagsArray]
* INVALID *
ENVELOPE %@
INTERNALDATE
RFC822.SIZE %u
BODYSTRUCTURE %@
BODY[%@]<%lu> {%lu}...
BODY[%@] {%lu}...
UID %u
X-GM-MSGID %llu
FLAGS (%@)
MODSEQ %d
 remoteID=%@
%s%u
temp-
multipart
boundary
%@: Unexpected byte %x at position %lu
IMAPOperation.m
Invalid method for type %d
CREATE [%@]
DELETE [%@]
[%@] STORE 
 ** expunged **
 <+FLAGS.SILENT%@>
 <-FLAGS.SILENT%@> 
APPEND [%@] %@ {%u}
COPY [%@] [%@]
PERFORMING_PENDED_OPERATIONS_TASK_NAME
Performing pended operations
operations
RECENT
-[MFIMAPParseContext setStart:]
IMAPParseContext.m
start >= _originalStart && "Should not put the start before the original start."
-[MFIMAPParseContext setEnd:]
end <= _originalEnd && "Should not put the end past the original end."
Error while parsing IMAP response %@: %@
Remaining text: <%@>
Expected number in literal
Expected right curly brace
Expected end-of-line
Read failure
Ignoring extra bytes read during literal
d-MMM-yyyy H:mm:ss ZZZ
Can't parse array contents
In-Reply-To:
References:
BODY[HEADER.FIELDS (REFERENCES IN-REPLY-TO)]
Message-ID
v32@?0@"NSString"8Q16^B24
UNDELETED
MESSAGES
EXISTS
_IMAPNameQuotaKey
_IMAPCurrentUsageQuotaKey
_IMAPMaxUsageQuotaKey
_IMAPNamespacePrefixKey
_IMAPNamespaceDelimiterKey
_IMAPNamespaceExtensionsKey
CHARSET=
%@ is invalid for %s
%@ is invalid for response type %d
-[MFIMAPResponse fetchResults]
IMAPResponse.m
_responseType == IMAPFetchResponse && "Invalid response type for fetchResults"
(%@)
%@ %@
 ==> (%@)
 "%@"
 (%@ %@/%@)
 %@ %c%@
*nil*
("%@" 
 "%@" ("%@")
v32@?0@"NSString"8@"NSArray"16^B24
v16@?0@"NSArray"8
should not register multiple consumers for the same section: %@
--Not Set--
PREAUTH
FLAGS
QUOTAROOT
--OTHER--
X-UID-FLAGS
ALERT
UNAVAILABLE
AUTHENTICATIONFAILED
AUTHORIZATIONFAILED
EXPIRED
PRIVACYREQUIRED
CONTACTADMIN
NOPERM
INUSE
EXPUNGEISSUED
CORRUPTION
SERVERBUG
LIMIT
OVERQUOTA
ALREADYEXISTS
NONEXISTENT
BADCHARSET
NEWNAME
PARSE
READ-ONLY
READ-WRITE
TRYCREATE
UIDNEXT
HIGHESTMODSEQ
UIDVALIDITY
NOMODSEQ
UNSEEN
PERMANENTFLAGS
APPENDUID
COPYUID
CLIENTBUG
Expected ]
Expected list or NIL
\Noinferiors
\Noselect
\Marked
\Unmarked
\HasChildren
\HasNoChildren
\NonExistent
Invalid FETCH response
Couldn't parse FETCH: no space character in input
ENVELOPE
X-GM-MSGID
RFC822
RFC822.HEADER
RFC822.TEXT
MODSEQ
BODY[
HEADER.
Unable to parse header keys array
Couldn't parse FETCH: no square brace character in input
Expected number
Expected >
Unrecognized FETCH key
Expected a right paren
couldn't parse NAMESPACE: unexpected atom
couldn't parse namespace response: prefix and/or delimiter were not strings
couldn't parse namespace response extensions: invalid key or value
couldn't parse namespace response extensions: not enough values for keys
@"NSArray"8@?0
--EXTENSION--
\Seen
\Deleted
\Answered
\Recent
\Draft
$Forwarded
$Junk
$NotJunk
Forwarded
Junk
NotJunk
Redirected
Incomplete response
Junk at end of response
@"MFMailMessage"8@?0
-[MFBaseSyncResponseQueue sequenceIdentifierForItem:]
LibraryIMAPStore.m
[item isKindOfClass:[NSArray class]]
SupportsCustomFlags
CachedConnectionLock
DOWNLOADING_STATUS_FORMAT
Downloading %@ of %@
SEEN
FLAGGED
ANSWERED
KEYWORD
v16@?0@"MFIMAPConnection"8
LibraryIMAPStoreErrorDomain
v32@?0Q8@"NSIndexSet"16@"NSError"24
IMAP_COMPACT_FAILED
@"NSString"12@?0I8
temp-%lu
v40@?0@"MFIMAPConnection"8@"NSArray"16{_NSRange=QQ}24
B16@?0@"MFLibraryMessage"8
@"NSArray"16@?0@"MFMailMessage"8
messageToTransfer
destinationMailbox
Unknown MoveResult (%ld)
operation
We should never pass a batchUIDs that is nil (might be interpreted as all messages)
@"NSNumber"16@?0@"MFAppStateMonitor"8
@"NSNumber"16@?0@"NSArray"8
com.apple.message.imap (IDLE)
v16@?0@"NSError"8
v16@?0@"NSNumber"8
DeletedSearchLimit
q24@?0@8@16
q24@?0@"NSValue"8@"NSValue"16
CHARSET
UTF-8
v16@?0@"NSString"8
SUBJECT
fetchArgumentsForCriterion
0 && "Message ID header criterion must have a MessageRuleIsEqualTo qualifier"
FROM
(OR TO
NOT 
NSArray *fetchArgumentsForCriterion(MFMessageCriterion *, BOOL)
could not map expression to flag: %@
SINCE
0 && "Need to handle criterion for IMAP headers"
(OR FROM
(OR SUBJECT
(OR CC
MFAPSManagerDeviceTokenChangedNote
com.apple.message.apsManager
System/Library/PrivateFrameworks/ApplePushService.framework
APSConnection
com.apple.mobilemail.dummyTopicToForceServerConnection
com.apple.mobilemail.push.
com.apple.mail.
account-id
==== MFAPSManager ====
  push service: %@
  watched topics: {%@}
  ignored topics: {%@}
  device token (%@): '%@'
waiting for token
has token
_tokenConditionString
MFAPSManager.m
0 && "unknown token condition"
MFIMAPConnection+Move.m
mailboxName
command == _IMAPCommandUidMove || command == _IMAPCommandMove
B16@?0@"MFIMAPResponse"8
OS X Server
OSXServerIMAPErrorDomain
EmailAccountName
EmailAddresses
EmailDomain
%@@%@
IncomingMailServerAuthentication
EmailAuthCRAMMD5
EmailAuthNTLM
EmailAuthHTTPMD5
OutgoingMailServerAuthentication
EmailAuthNone
ATOKEN
MESSAGE_AUTH_ATOKEN
Apple Token
CASTLE_SMTP_SERVER
iCloud SMTP Server
XOAUTH2
MESSAGE_AUTH_OAUTH2TOKEN
OAuth 2.0 Token
user=%@
auth=Bearer %@
yahoo.com
YahooAllowSSL
YahooIMAPPort
Draft
Bulk Mail
%@@yahoo.com
Inbox
ymail://?fid=%@&mid=%@
yahoo.co.jp
ybb.ne.jp
yahooAccountIcon
YAHOO_DELIVERY_HOSTNAME
Yahoo! SMTP Server
v,Hv`oovvvvvo
9AIb
6>BMa
---!&
Vgg]d
gggM
%@ (%@) failed to get auth token: %{public}@
anisetteDataWithError failure: %@ (%.3f sec)
anisetteDataWithError success: %@ (%.3f sec)
Over quota error message: %@
#Warning #CloudSync AnisetteData not found for account: %{public}@ error: %{public}@
#CloudSync Starting request for aliases for account %@.
#CloudSync Response from new alias %@. Status Code: %lu
Data: %@
#CloudSync Alias Data: %@
Email alias request to [%@] failed with error code [%lu]
Email alias requests configured to use [%@], scheduling reprovision
#CloudSync Unable to push new alias data to server %@. Received response code %lu, with error %{public}@.
JSON:%@
#CloudSync response: %@.
JSON: %@
Got a response, but it was not for our tag.  Throwing out the results.
Got invalid value in sequence set
#Warning failed to get client token
*** Unable to determine name for %@
#IMAPFlagChanges removing all changes: %{public}@
#Warning Unselected connection checked back in, mailbox: %@, connection: %@
#Network %@: -[%@ _releaseAllConnectionsAndCallSuper:%@ edgeForcedOnly:%@ ifIdleForTimeInterval:(%.4f) saveOfflineCache:%@]
#Network All connections: %@
#Network EDGE ONLY
#Network Dropping connections: %@
No connection!! What's going on?
%{public}@ deleting messages from mailbox: %{public}@ older than %d days
#IMAPFlagChanges added %@
#IMAPFlagChanges using changes from %@
#IMAPFlagChanges resulting changes are %@
#IMAPFlagChanges removing failed entry %@
#IMAPFlagChanges removing committed entry %@
#IMAPFlagChanges remaining change entries: %@
#IMAPFlagChanges setting commit time %d for change %@
#IMAPFlagChanges setting connection %d for change %@
#aps-push warning, can't find mailbox with name '%@' (%@)
#aps-push failed to generate hash for mailbox named '%@'
#aps-push Setting aps-topic '%@' for account %@
#aps-push account <%@:%p> scheduling push registration connection
#aps-push account %@ forcing push registration connection
#aps-push account %@ will NOT force push registration connection, didRequestPushRegistration: %s, mustRegisterOnNextConnection: %s
#aps-push account %@ has no pushed mailboxes, skipping
#aps-push account %@ last registered for push %.3f seconds ago
#aps-push {mailboxes=%@, topic=%@, version=%d}
#aps-push external push client registration failed: %{public}@
#aps-push could not create mailbox names for: %@, pushed mailboxes: %@ (sep: %@ prefix: %@)
#aps-push Received notification for account '%@', will %@handle push
#aps-push warning, %@ got a notification for mailbox %@, but we're not enabled for the appropriate dataclass
#aps-push warning, %@ got a notification for mailbox with hash '%@', but can't find that mailbox.
#aps-push account %@ will NOT start listening for notifications, canRegisterForAPSPush returned NO
#aps-push account %@ will NOT start listening for notifications, battery-saver mode is ON
#aps-push account %@ told to start listening for notifications
#aps-push account %@ did NOT register for push, %s register for push and PCConnectionStyle %s push
#aps-push account %@ told to stop listening for notifications
sending ID command: %@
server response to ID request: %@
server does not support ID extension
#aps-push not registering for push on unauthenticated connection for account %@
#aps-push connection doesn't support XAPPLEPUSHSERVICE for account %@
#aps-push MCC push settings are not set to push (%d != PCStylePush) for account %@
#aps-push account %@ not registering for push
#aps-push failed to get device token while registering for push on account %@
#aps-push account %@ registering for push: {%@}
#aps-push account %@ will send pushes for mailbox '%@'
#aps-push account %@ (version %@) ignoring invalid version in push response '%@'
#aps-push account %@ (version %@) sent unknown push response %@
#aps-push account %@ will NOT push these mailboxes {%@}
#aps-push account %@ will push all requested mailboxes
#aps-push account %@ specified bad version/topic in response: %@
#aps-push account %@ received mailbox responses but version 1 response, ignoring mailboxes
#aps-push account %@ rejected XAPPLEPUSHSERVICE request: %@
server supports deflate compression, sending COMPRESS request
server rejected our COMPRESS request: %@
*** Failed to read initial response from %@
*** Expected untagged initial response from %@
*** Invalid IMAP command %d
#imap-idle connection <%p> received response while idling: %@
#imap-idle connection <%p> starting IDLE state for delegate %@
#imap-idle connection <%p> failed to enter IDLE state: %@
#imap-idle connection <%p> delegate rejected starting IDLE state: %@
#imap-idle connection <%p> leaving IDLE state for delegate: %@
#imap-idle connection <%p> timer fired for delayed IDLE reset after %0.2fs delay: %@
#imap-idle connection <%p> resetting IDLE state: %@
See <rdar://problem/26633447> : term should be an NSString, but is %{public}@
inconsistent esearch counts detected, ignoring esearch capability
#Warning Invalid response from SEARCH command
#Warning %@ claimed to support initial response data, and didn't supply an initial response
IMAP protocol error: %@
IMAP auth failure: %@
*** Unexpected response during authentication: %@
Unhandled response to command %s: %@
MFIMAPConnection was lost during processing of command %s: %@.
uid of message %{public}@ is 0
Unexpected byte %u at position %lu
deserialized offline operation was invalid - skipping
attempt to create an invalid offline operation of type %d with no mailbox name %p
attempt to create an invalid store-flags offline operation: %lu true flags, %lu false flags, %lu uids
attempt to create an invalid copy-message offline operation: %lu srcUids, %lu dstUids, dstMailbox=%p (%lu)
*** Error while creating %@: %{public}@
**** Failed to append to %@
*** Error while copying messages to %@
replaying %lu operations with connection %@
replaying %@
removing failed operation from offline cache: %@
*** Error while selecting %@: %{public}@
*** Warning while parsing %@: %@
Remaining text: <%@>
ERROR: UNKNOWN RESULT: %@ %d
Invalid for response type %d
#Warning caught %@: %@
caught %@: %@
server returned data we don't have a consumer for, might be expected for section %@
We did something bad: we just got back a CLIENTBUG from the server.
#Power [Server Fetch Time] InternalDate=%@
#Power [New Message] subject=%@;
Compacting %lu messages during IMAP sync
[FetchActivity] Search for recent UIDs returned %lu items (success=%@)
[FetchActivity] starting UID sync for %@ (selected mailbox: %@) idRange=%@ limit=%lu topUIDToCompact=%lu topKnownUID=%lu UIDCount=%lu lowUID=%lu highUID=%lu libraryDetailsIndex=%lu libraryDetailsUIDRange=%lu:%lu
[FetchActivity] preserving UID %lu!
[FetchActivity] Compacting %lu (1)
[FetchActivity] Syncing %lu
[FetchActivity] Fetching %lu
[FetchActivity] Compacting %lu (2)
[FetchActivity] _fetchMessagesWithArguments returns %lu
%@: "Connecting..." starting
[FetchActivity] store and connection mailboxes differ: store=%@ connection=%@ (%p, valid: %@)
[FetchActivity] canceling fetch because connection is invalid
[FetchActivity] canceling fetch because mailbox could not be selected
store and connection mailboxes differ
%@: "Connecting..." completed
[FetchActivity] Compacting all messages
[FetchActivity] Compacting messages with UIDs <= %lu
IMAP Account %{public}@ deleting messages from store: %@ older than %d days using connection: %@
-[MFLibraryIMAPStore _dataForMessage:] bad message data
[FetchActivity] performOperationRequiringConnection: mailbox=%@ connection=%p cached=%@ options=%d
Forcing reload of %@ because of UIDVALIDITY change (old:%lu new:%lu)
#imap-idle error occurred while observing conditions for IDLE: %{public}@
#imap-idle scheduling IDLE transition (should-use-idle %@): %@
-[MFLibraryIMAPStore _setFlagsForMessages:] flagsByMessage contains mixed message types
#IMAPFlagChanges applying pending changes for message %u: %@
#IMAPFlagChanges remaining changes from server (connection %u): %@
#Warning unsupported header criterion type %@
#Warning need to handle criterion for IMAP search: %@
#aps-push Unable to open ApplePushService at %@
#aps-push Push service not supported.
#aps-push Stopped MFAPSManager.
#aps-push Start watching topic '%@'
#aps-push Stop watching topic '%@'
#aps-push Swapping registered topic '%@' for topic '%@'
#aps-push Received public token '%@'.
#aps-push received notification on topic '%@', userInfo=%@
#Warning couldn't find our CastleAccount for our sending account: %@
AOLAccount
MFOAuth2TokenAuthProtocol
NSObject
MFAOLSMTPAccount
CastleIMAPAccount
CondStore
ESearch
GmailAccount
MFClientTokenAuthProtocol
NSURLSessionDataDelegate
NSURLSessionTaskDelegate
NSURLSessionDelegate
MFGmailSMTPAccount
MFGmailClientTokenAuthScheme
_MFGmailClientTokenAuthenticator
_MFIMAPMailboxDeletionQueueEntry
_MFFlagChangeEntry
IMAPAccount
MFIMAPConnectionDelegate
MFIMAPMailboxListFilter
MFIMAPCommandPipeline
_MFIMAPFetchUnit
MFIMAPConnection
MFIMAPConnectionFlagSearchResults
MFIMAPConnectionFlagSearchRequest
MFIMAPDownload
MFIMAPSimpleDownload
MFIMAPCompoundDownload
MFIMAPDownloadCache
MFIMAPFetchResult
MFIMAPMessage
MFIMAPMessageDownload
MFIMAPMessageWithCache
IMAPNameEncoding
MFIMAPOperation
MFIMAPOfflineCopyOnStupidServerOperation
MFIMAPOperationCache
MFIMAPParseContext
ReferenceSearching
MFIMAPResponse
MFIMAPResponseConsumer
_MFWholeMessageSection
MFMessageDataSection
MFFetchResponseQueue
MFSearchFetchResponseQueue
MFBaseSyncResponseQueue
MFSyncResponseQueue
MFSearchResponseQueue
MFLibraryIMAPStore
MFIMAPSequenceIdentifierProvider
MFAPSManager
APSConnectionDelegate
MFDiagnosticsGenerator
Move
MFOSXServerIMAPAccount
MFOSXServerSMTPAccount
MFNewcastleAuthScheme
_MFNewcastleAuthenticator
MFNewcastleSMTPAccount
MFOAuth2TokenAuthScheme
_MFOAuth2TokenAuthenticator
YahooDeliveryAccount
YahooAccount
MFYahooSMTPAccount
T@"NSArray",C,N
APSConnection
T#,R
_connectionLock
T@"<MFDataConsumer>",&,N,V_bodyDataConsumer
_deliveryAccountCreateIfNeeded:
T@"ACAccount",R,N
_doBasicConnectionUsingAccount:
T@"AOLAccount",&,N,GmailAccountIfAvailable,V_account
_expirationTime
T@"EFCancelationToken",&,N,V_cancelationToken
_handle
T@"IMAPAccount",&,Vaccount
_headersToFetchIncludingThoseRequiredForRouting:withRecipients:
T@"MFDataHolder",&,N,V_dataHolder
_length
T@"MFOSXServerIMAPAccount",&,N,GmailAccountIfAvailable,V_mailAccount
_listeningForDeviceTokenChanges
T@"NSArray",C,Vpaths
_observeChangesInIdleConditions
T@"NSArray",R,N,V_searchTerms
_readyToDealloc
T@"NSDictionary",R,Vchanges
_updateMetadata
T@"NSString",&,N,V_consumerSection
account
T@"NSString",R,&,N
allKeys
T@"NSString",R,N
arrayWithArray:
T@"NSURL",R,N
changes
TB,R,N
connectionClass
TB,R,N,V_gotBadResponse
consumerSection
TB,V_shouldUseIDLE
copyDeviceToken
TI,R,N
countForObject:
TI,VconnectionTag
TQ,R
deletedMessages
Td,R,N,V_connectTime
destinationUids
Ti,N,V_tag
displayUsername
URLSession:dataTask:didBecomeDownloadTask:
ef_map:
URLSession:dataTask:didReceiveData:
examineMailbox:
URLSession:dataTask:willCacheResponse:completionHandler:
extraAttributes
URLSession:didCreateTask:
flagChangesLock
URLSession:task:didCompleteWithError:
growFetchWindow
URLSession:task:didReceiveChallenge:completionHandler:
headers
URLSession:task:needNewBodyStream:
initWithFormat:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
initWithString:
URLSessionDidFinishEventsForBackgroundURLSession:
invocationWithSelector:target:taskName:priority:canBeCancelled:
URLWithString:
isAtEnd
UUID
isPositiveMatch
_UIDPlusInfoFromIMAPResponses:
isStore
_URLScheme
library
_accountsChanged:
mailboxNamesForPushRegistration
_addOfflineTransferMessages:
messageIDHeader
_additionalHeadersForFetch
mf_lock
_aliasAuthorizationHeader
numberWithBool:
_aliasUpdateQueue
parenthesizedStringWithObjects:
_aliasesFromOldData:
persistentStore
_appleAccount
release
_apsDeviceTokenChanged:
requestWithURL:
_assignSpecialMailboxToAppropriateIvar:forType:
result:
_bodyDataConsumer
saslProfileName
_cachedBodyDataContainerForMessage:valueIfNotPresent:
section
_cachedConnectionLock
_cancelationToken
setCompactWhenClosingMailboxes:
_capabilityFlags
setEnabledTopics:ignoredTopics:
_changedFlagsForMessage:fetchResponse:newFlags:
setHandlerForOfflineCacheFlush:
_chunkSize
setMessageSize:
_clientToken
setServerPathPrefix:shouldSync:
_complete
setTag:
_connection
shouldSyncFlags
_consumeExistingPreAuthToken
storeFlags:state:forMessageSet:
_consumersBySection
stringByRemovingPercentEncoding
_copyMailboxListPreferenceForKey:
subject
_copyMailboxWithParent:name:attributes:dictionary:
timeout
_copyNextTaggedOrContinuationResponseForCommand:
uidForAppendingMessageData:withFlags:andInternalDate:toMailbox:
_copyUserPushedMailboxes
uppercaseString
_credential
valueWithRange:
.cxx_destruct
TB,R,N,GisValid
JSONObjectWithData:options:error:
_aliasUserAgent
T@"<EFCancelable>",&,N,V_idleSubscriptionCancelable
_deleteMailbox:
T@"<MFIMAPConnectionDelegate>",W,N
_didUpdateSeparatorAndNamespace
T@"ACAccountStore",R,N
_doUidCopy:toStore:newMessages:
T@"CastleIMAPAccount",&,N,V_castleAccount
_gotBadResponse
T@"GmailAccount",&,N,GmailAccountIfAvailable,V_account
_headerConsumer
T@"MFBaseFilterDataConsumer",R,N,V_mainConsumer
_lastLoggedChar
T@"MFIMAPResponseConsumer",&,N,V_responseConsumer
_libraryDetails
T@"NSArray",C
_messageIDsFromFetchResultData:
T@"NSArray",C,Vurls
_readBufferSize
T@"NSDictionary",R,N
_uniqueRemoteId
T@"NSIndexSet",R,&,N,VindexSet
_writeCustomInfoToMailboxCache:
T@"NSString",C,N,V_fetchItem
addSubdownload:
T@"NSString",R,C
approximateSize
T@"NSString",R,Vpath
bundleWithPath:
T@"YahooAccount",&,N,GmailAccountIfAvailable,V_account
connect
TB,R,N,GisIdle
connectionState
TB,R,N,V_isPositiveMatch
containsObject:
TI,N,V_uid
copyNilOrString
TI,R,Vuid
dateFromString:
TQ,N,V_idleCommandSequenceNumber
dealloc
TQ,R,N,V_mask
deliveryUsesSSL
Td,VcommitTime
displayHostname
URLForMessage:
ef_gmailAuthAllowedCharacterSet
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveResponse:completionHandler:
expunge
URLSession:didBecomeInvalidWithError:
fetchTotalSize:andMessageCount:
URLSession:didReceiveChallenge:completionHandler:
getBytes:range:
URLSession:task:didFinishCollectingMetrics:
hasTemporaryUid
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
initWithAppendedUid:approximateSize:flags:internalDate:mailbox:
URLSession:task:willBeginDelayedRequest:completionHandler:
initWithLength:
URLSession:taskIsWaitingForConnectivity:
insertMessages:
URLString
isAlertResponse
UTF8String
isEqualToArray:
UUIDString
isProxy
_URLFromUncleanString:
isValid
_account
mailbox
_addCapabilities:
message
_additionalFetchHeaders
mf_decodeBase64
_additionalSynchronizationSearchArguments
networkAssertionWithIdentifier:
_aliasChanges
oneTimePassword
_aliasesFromData:
partial
_allowsPartialDownloads
primaryDeliveryAccountIsDynamic
_appleAccountLock
removeObserver:
_apsTopic
reselectMailbox
_authSchemeForAuthenticationMethod:
retainArguments
_boolForAccountInfoKey:defaultValue:
schemeWithName:
_cachedConnection
selectedMailbox
_cachedConnections
setCommitTime:forConnectionTag:
_capabilities
setDisplayName:
_castleAccount
setEnd:
_childOfMailbox:withComponentName:
setMailAccount:
_clearCapabilities
setPercentDone:
_commandNumber
setStartOffset:
_connectTime
setUid:
_connectionState
specialUseAttributesForMailbox:
_consumerSection
stringByAppendingPathComponent:
_copyMailboxListForNames:
stringFromDate:
_copyMailboxUidWithParent:name:attributes:existingMailboxUid:dictionary:
_copyNextServerResponseForCommand:
_copyPushedMailboxesForPrefix:
uniqueIdForPersistentConnection
_countingConsumer
usesSSL
_credentialCreateIfNecessary:error:
_currentFetchUid
_currentUID
_customFlags
_data
_dataForMessage:readHeadersOnly:
_dataForTemporaryUid:
_dataHolder
_defaultEmailAddressFromData:
_defaultSpecialMailboxNameForType:
_delegateState
_deleteHook
_deleteQueuedMailboxes:
_deliveryAccount
_deserializeOpSpecificValuesFromData:cursor:
_deviceToken
_deviceTokenLock
_didRequestPushRegistration
_didSynchronizeMailboxCachesAndFoundChanges:
_didSynchronizeOldMessages
_doAppend:
_doIMAPLoginForAccount:quotedUsername:password:
_doListCommand:withReference:mailboxName:options:getSpecialUse:statusDataItems:statusEntriesByMailbox:
_doNamespaceCommand
_doUidFetchWithRange:arguments:validateMessage:responses:
_doneAddingSubdownloads
_downloadCache
_downloadDelegate
_downloadForMessageBodyData:
_downloads
_eSearchSupported
_eSearchSupportedLock
_emailsFromData:
_enableCompressionIfSupported
_enablingPromise
_end
_error
_errorForResponse:commandParams:
_expectedFetchResult
_expectedSize
_externalMailboxUids
_failureCount
_fetchArgumentForMessageSkeletonsWithHeaders:
_fetchArgumentForMessageUidsAndFlags
_fetchBodyData
_fetchBodyDataForMessage:andHeaderDataIfReadilyAvailable:downloadIfNecessary:partial:
_fetchCapabilities
_fetchDataForMimePart:range:isComplete:consumer:
_fetchFullBodyDataForMessage:andHeaderDataIfReadilyAvailable:downloadIfNecessary:didDownload:
_fetchHeaderDataForMessage:downloadIfNecessary:
_fetchItem
_fetchMessagesMatchingCriterion:limit:withOptions:handler:
_fetchMessagesWithArguments:idRange:onConnection:synchronize:limit:topUIDToCompact:topKnownUID:success:examinedRange:fetchableUIDsFound:preserveUID:numFetchedUIDs:
_fetchPipeline
_fetchServerUnreadCountWithConnection:
_fetchUnits
_fetchedMailboxList
_fetchingBodyText
_fetchingMessageContents
_fileSystemServerPathPrefix
_flagChangesLock
_flags
_flagsForUID:
_flushAllMessageData
_flushOfflineCache
_fromEmailAddressesIncludingDisabled:
_full
_getFirstLevelMessageIDsForReference:
_getReferencesForMessageSet:
_greatestInboxUid
_handleFlagsChangedForMessages:flags:oldFlagsByMessage:
_headerFilter
_headerStringFromDate:
_headers
_highestModSequence
_idleCommandSequenceNumber
_idleConditionsObservable
_idleSubscriptionCancelable
_indexSetFromUIDs:
_infoForMatchingURL:
_invalid
_invokeBlock:
_isFetchResponseValid:
_isOffline
_isPositiveMatch
_isSearching
_itemType
_keyValuePairs
_knownLength
_lastHighestModSequence
_lastKnownCapabilities
_lastPushRegistration
_lastRequiredHeaders
_lastRequiredHeadersArray
_lastSave
_lastUid
_lastUidValidity
_listingForMailbox:options:getSpecialUse:statusDataItems:statusEntriesByMailbox:withCommand:
_listingForMailboxUid:listAllChildren:
_listingForMailboxUid:listAllChildren:onlySubscribed:
_listingForMailboxUid:listAllChildren:onlySubscribed:statusDataItems:withConnection:statusEntriesByMailbox:
_loadMailboxListingIntoCache:attributes:children:parent:
_localMailboxNameForType:usingDisplayName:
_lockOrderingArray
_magic
_mailAccount
_mailPropertyFromAppleAccountForKey:
_mailboxListFilter
_mailboxListingChanged
_mailboxName
_mailboxPathPrefix
_mailboxUidForName:
_mailboxesToSynchronize
_mailboxesWereRemovedFromTree:withFileSystemPaths:
_mainConsumer
_mask
_message
_messageData
_missingUIDs
_modSequenceNumber
_moveMessageSet:toMailboxName:command:newMessageInfo:
_mustRegisterForPushOnNextConnection
_nameForMailboxUid:
_newConnection
_newMailboxWithParent:name:attributes:dictionary:withCreationOption:
_newMessageCount
_newSearchResponseQueueForConnection:limit:
_nextConnectionTag
_noModSequence
_notesPrefix
_notificationNameForMailbox:withPrefix:
_numNewUIDs
_objectForAccountInfoKey:
_observingPushedFoldersPrefsChanged
_offlineCache
_offlineCacheFlushHandler
_offsetAdjustment
_opSpecific
_ops
_opsPending
_originalDataLength
_originalEnd
_originalStart
_packetContextAssertion
_pathComponentForUidName:
_pendingFetchResults
_performActionsOnConnection:uidsToFetch:uidsToSync:messagesToCompact:libraryDetails:flagSearchResults:shouldForce:newUIDsToFetch:
_performAppendOperation:withContext:
_performBodyDataDownload:usingConnection:isPartial:
_performCopyOperation:withContext:
_performCreateOperation:withContext:
_performDeleteOperation:withContext:
_performStoreOperation:withContext:
_prepareAliasData
_privacySafeDescription
_purgeStaleFlagChanges
_pushRegisteredMailboxes
_pushService
_pushedMailboxUids
_queue
_queueAccountInfoDidChange
_queueDeferredOperation:
_range
_readCustomInfoFromMailboxCache:
_readDataOfLength:
_readyForPushRegistration
_recentFlagChanges
_recentsExist
_registerForDeviceTokenChanges
_registerPushNotificationPrefix:forMailboxNames:
_relativePath
_releaseAllConnectionsAndCallSuper:
_releaseAllConnectionsAndCallSuper:edgeForcedOnly:ifIdleForTimeInterval:saveOfflineCache:
_removeCredential:
_removeFetchUnitMatchingResponse:
_removePasswordInKeychain
_renameLocalSpecialMailboxesToName:
_reserved
_resetAppleAccount
_response
_responseConsumer
_responseFromSendingCommand:andPossiblyCreateMailbox:
_responseFromSendingCommands:count:
_responseType
_scheduleIdleTransition:
_schedulePushRegistrationConnection
_searchArgumentsForSynchronize
_searchFlagsForUIDs:usingConnection:
_searchTerms
_searchUidsForMessageIDs:excludeDeleted:
_section
_selectMailbox:withConnection:
_selectedMailbox
_selectedUID
_sendApplePushForAccountIfSupported:
_sendClientInfoIfSupported
_sendCommands:count:response:
_sendMailboxCommand:withArguments:
_sending
_sentResponse
_separatorChar
_serverDeletedCount
_serverErrorForAccount:response:command:
_serverNamespace
_serverUidNext
_setCapabilities:
_setChildren:forMailboxUid:
_setFlagsForMessages:
_setFlagsFromDictionary:forMessages:
_setSpecialMailbox:forType:
_settingServerCount
_setupExpectedFetchResult
_shouldCompact
_shouldContinueToPreservedUID:
_shouldFetch
_shouldLogDeleteActivity
_shouldSyncFlags
_shouldUseIDLE
_size
_specialMailboxUidWithType:create:
_start
_startAPS_nts
_startedFetch
_stopAPS_nts
_store
_streamEventQueue
_subdownloads
_supportedPushServiceLevel
_supportsCustomPermanentFlags
_supportsDollarForwardedFlag
_supportsDollarJunkFlag
_supportsDollarNotJunkFlag
_supportsForwardedFlag
_supportsJunkFlag
_supportsNotJunkFlag
_synchronizeAccountWithServer
_synchronouslyLoadListingForParent:
_synchronouslySetFlags:clearFlags:forMessages:originalChanges:
_tag
_temporaryUids
_textConsumer
_textFilter
_timeLastFetchedMailboxList
_topLevelPart
_tryConnectionUsingAccount:
_type
_typeSpecific
_uid
_uidNameForPathComponent:
_uidsForMessageIDs:excludeDeleted:
_uidsForMessages:
_uidsWithFlagMaskSet
_uidsWithoutFlagMaskSet
_unregisterForDeviceTokenChanges
_unwatchedTopics
_updateCapabilitiesForAccount:withAuthenticationResponse:
_updateEmailAddressAndAliases
_updateLibraryForTransferedMessages:toDestinationMailbox:newMessageInfo:flagsToSet:
_updatePushedMailboxesAndNotify:
_updateSearchCapabilityWithAccount:
_updateSelectedUID:
_updateSeparatorAndNamespaceWithConnection:
_updateServerUnreadCount:
_updatedDefaultEmail
_updatingCache
_url
_urlFromResponse:
_usingPartialDownloads
_verifiedESearchResponse
_waitForMailboxListingLoadToComplete
_watchedTopics
_webLoginErrorWithURL:
_writeMailboxCacheWithPrejudice:
aa_authToken
aa_authTokenWithError:
aa_firstName
aa_lastName
aa_password
aa_personID
aa_updatePropertiesForAppleAccount:completion:
abort
accountDescription
accountForRenewingCredentials
accountPropertiesValueForKey:value:
accountPropertyForKey:
accountRelativePath
accountStore
accountType
accountTypeIdentifier
accountTypeString
accountWithProperties:
accountWithUniqueId:
acquireExclusiveAccessKey
acquireNetworkAssertion
actsOnTemporaryUid:
addCancelable:
addClientToken:forAccount:
addCommandsForDownload:toPipeline:
addCommandsToPipeline:withCache:
addConsumer:forSection:
addDiagnosticsGenerator:
addEntriesFromDictionary:
addFetchCommandForUid:fetchItem:expectedLength:bodyDataConsumer:consumerSection:
addFlagChanges:forMailboxPath:UID:
addFlagChanges:forMessages:
addIndex:
addIndexes:
addIndexesInRange:
addInvocation:
addItem:
addMessages:newMessagesByOldMessage:
addMessages:withMailbox:fetchBodies:newMessagesByOldMessage:
addMessages:withMailbox:fetchBodies:newMessagesByOldMessage:remoteIDs:setFlags:clearFlags:messageFlagsForMessages:copyFiles:addPOPUIDs:dataSectionsByMessage:
addObject:
addObjectsFromArray:
addObserver:selector:name:object:
addRemoteID:mailbox:
additionalHeadersForFetch
afterDelay:performBlock:
ak_addClientInfoHeader
ak_addDeviceUDIDHeader
aliasLookupURL
allCredentials
allCriteriaMustBeSatisfied
allMailMailboxUid
allMailboxUids
allNonDeletedCountIncludingServerSearch:andThreadSearch:
allObjects
allValues
allocWithZone:
allowsAppend
allowsPartialDownloads
allowsTrustPrompt
andCompoundCriterionWithCriteria:
anisetteDataWithError:
anyObject
appStateObservable
appendBytes:length:
appendData:
appendData:forSection:
appendData:toMailboxNamed:flags:dateReceived:newMessageInfo:
appendDataForMimePart:toData:withPartData:
appendFormat:
appendMessages:unsuccessfulOnes:newMessageIDs:newMessages:flagsToSet:
appendMessages:unsuccessfulOnes:newMessageIDs:newMessages:flagsToSet:customIMAPFlagsToSet:
appendString:
appleAccount
apsTopic
archiveDestinationForMailbox:
archiveSentMessages
array
arrayByAddingObjectsFromArray:
arrayWithCapacity:
arrayWithObject:
arrayWithObjects:
arrayWithObjects:count:
attributes
authScheme
authSchemesForAccountClass
authToken
authTokenWithError:
authenticateUsingAccount:
authenticateUsingAccount:authenticator:
authenticatedConnection
authenticationMechanisms
authenticationState
authenticatorClass
authenticatorForAccount:connection:
autofetchAccount:mailboxUid:
autorelease
base64EncodeResponseData
bodyDataConsumer
bodyFetchRequiresNetworkActivity
bodyParameterForKey:
bodyStructure
boolForKey:
boolValue
bundleIdentifier
bytes
bytesFetched
cachePolicy
cacheStateForUIDs:mask:existenceSetsFlag:
calendarWithIdentifier:
canAttemptPushRegistration
canAuthenticateAccountClass:connection:
canCompact
canFetch
canFetchMessageIDs
canFetchSearchResults
canGoOffline
canMailboxBeDeleted:
canPerformOfflineAppend
canProvideMinimumRemoteID
canReceiveNewMailNotifications
canRegisterForAPSPush
cancel
cancelationToken
capabilities
caseInsensitiveCompare:
castleAccount
certUIService
changePushedMailboxUidsAdded:deleted:
characterAtIndex:
checkInConnection:
checkInConnection:destroy:
checkInConnectionsForStore:
childAccounts
childWithExtraAttribute:
childWithName:
chunkSize
class
classNamed:
cleanUpDownloadsForUid:
clientCertificates
clientInfo
clientInfoHeader
clientToken
clientTokenForAccount:
close
closeAndLogout
combineLatest:
commitTime
compactMessages:
compactWhenClosingMailboxes
compare:
compare:options:
compareByNumberWithMessage:
components:fromDate:toDate:options:
componentsJoinedByString:
componentsSeparatedByString:
condition
conformsToProtocol:
connectAndAuthenticate:
connectTime
connectUsingAccount:
connection
connection:channelSubscriptionsFailedWithFailures:
connection:didBeginBodyLoad:section:
connection:didChangeConnectedStatus:
connection:didFailToSendOutgoingMessage:error:
connection:didFinishLoadingBodyData:section:
connection:didLoadMoreBodyData:section:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didReceivePublicToken:
connection:didReceiveResponse:forCommand:
connection:didReceiveToken:forInfo:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveURLToken:forInfo:
connection:didReceiveURLTokenError:forInfo:
connection:didSendOutgoingMessage:
connection:shouldHandleUntaggedResponse:forCommand:
connectionBodyDataReadChunkSize:
connectionDidDisconnect:
connectionDidReconnect:
connectionForStore:delegate:options:
connectionTag
consumers
consumersBySection
containsIndex:
continuationResponses
conversationFlags
copy
copyAString
copyArgumentForSearchTerm:
copyArray
copyArrayAllowingNulls:
copyAtom
copyDateTime
copyDiagnosticInformation
copyFailedFetchResponse
copyFirstStringValueForKey:
copyLiteral
copyLiteralString
copyMessageSet
copyNumber
copyOfAllMessagesWithOptions:
copyQuotedString
copyRemoteIDForTemporaryUid:
copyResponseForUID:
copyStringFrom:to:withCaseOption:
copyUids:toMailboxNamed:newMessageInfo:
copyWithZone:
count
countByEnumeratingWithState:objects:count:
countForSearchOfIDSet:forTerms:success:
countForSearchOfUidSet:forTerms:success:
createMailbox:
credentialAccessibility
credentialWithError:
criteria
criterionForMailboxURL:
criterionIdentifier
criterionType
csAccountTypeString
currentDevice
currentHandler
currentLocale
currentMonitor
customFlags
customFlagsArray
data
dataHolder
dataTaskWithRequest:
dataUsingEncoding:
dataUsingEncoding:allowLossyConversion:
dataWithBytes:length:
dataWithCapacity:
dataWithJSONObject:options:error:
date
dateByAddingUnit:value:toDate:options:
dateReceived
dateReceivedAsTimeIntervalSince1970
dateWithTimeIntervalSince1970:
dateWithTimeIntervalSinceNow:
dateWithTimeIntervalSinceReferenceDate:
debugDescription
defaultCenter
defaultEmailAddress
defaultLoadOptions
defaultManager
defaultPathForAccountWithHostname:username:
defaultPathNameForAccountWithHostname:username:
defaultPortNumber
defaultSecurePortNumber
deferredOperations
delegate
deleteCharactersInRange:
deleteInPlaceForAllMailboxes
deleteInPlaceForMailbox:
deleteMailbox:
deleteMailboxes:account:
deleteMessages:moveToTrash:
deleteMessagesFromMailboxUid:olderThanNumberOfDays:
deleteMessagesOlderThanNumberOfDays:
deleteMessagesOlderThanNumberOfDays:compact:
deliveryAccountHostname
deliveryAccountPortNumber
deliveryAccountUsesSSL
deliveryHostname
deliveryPortNumber
derivesDeliveryAccountInfoFromMailAccount
descendantWithExtraAttribute:
description
descriptionWithLocale:indent:
deserializedCopyFromData:cursor:
destinationMailbox
dictionary
dictionaryWithCapacity:
dictionaryWithObjects:forKeys:count:
dictionaryWithObjectsAndKeys:
didFinishCommands:count:
disconnect
disconnectAndNotifyDelegate:
displayName
displayNameUsingSpecialNamesForMailboxUid:
displayedAccountTypeString
distinctUntilChanged
doCompact
doOnError:
done
doubleValue
downloadCache
downloadForMessage:
downloadForUid:section:expectedLength:consumer:
downloadForUid:section:length:consumer:
downloadForUid:section:range:consumer:
drain
duplicateMessages:newRemoteIDs:forMailbox:setFlags:clearFlags:messageFlagsForMessages:createNewCacheFiles:
eSearchIDSet:areMessageSequenceNumbers:arguments:success:returning:
eSearchIDSet:areMessageSequenceNumbers:forTerms:success:returning:
ef_defaultAllowedCharacterSet
ef_filter:
ef_firstObjectPassingTest:
ef_hexString
ef_insertObject:usingComparator:allowDuplicates:
ef_insertObject:usingSortFunction:context:allowDuplicates:
ef_md5Digest
ef_publicDescription
ef_subarraysOfSize:
emailAddressHostPart
emailAddressWithUsername:
emailAddresses
emailAddressesAndAliases
emailAddressesAndAliasesList
emailAddressesDictionary
emitError:
emitWarning:
emptyFrequencyForMailboxType:
emptyTrash
enableAccount
enableThroughputMonitoring:
encoding
endCompression
enumerateByteRangesUsingBlock:
enumerateConvertingNewlinesUsingBlock:
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
envelope
ephemeralSessionConfiguration
error
errorForResponse:
errorWithDomain:code:localizedDescription:
errorWithDomain:code:localizedDescription:title:userInfo:
errorWithDomain:code:userInfo:
expectedLength
expectedSize
expression
expungeTemporaryUid:
expungeUids:
failureCount
failureReason
failureResponsesFromSendingCommandsWithConnection:
fetchArgumentForMessageSkeletonsWithTo:
fetchBodyData
fetchData
fetchHeadersForUid:
fetchItem
fetchLimits
fetchMailboxList
fetchMessageIdsForUids:
fetchMessagesMatchingCriterion:limit:
fetchMessagesWithMessageIDs:andSetFlags:
fetchMessagesWithRemoteIDs:andSetFlags:
fetchMessagesWithUIDs:connection:newCount:flagsToSet:queueClass:
fetchMinBytes
fetchNumMessages:preservingUID:options:
fetchPipeline
fetchResultWithType:
fetchResults
fetchStatusForMailboxes:args:
fetchUniqueRemoteIDsForUids:
fileExistsAtPath:
fillLiteralBuffer:count:dataLength:nonSynchronizingLiteral:
filterMailboxList:forMailbox:options:
filterWithConsumer:
finishIdle
finishWithError:
finishWithResult:
firstEmailAddress
firstHeaderForKey:
firstIndex
firstObject
firstTemporaryUid
firstUidForCopyingMessages:fromMailbox:toMailbox:
flagChangesForMailboxPath:UID:connectTime:
flags
flagsArray
flagsFetchResult
flagsForItem:
flagsToClear
flagsToSet
floatForKey:
flush
flushCriteria
flushOfflineCache
focusedMessageDidChange:
fromEmailAddresses
fromEmailAddressesIncludingDisabled
fullBodyDataForMessage:andHeaderDataIfReadilyAvailable:isComplete:downloadIfNecessary:didDownload:
future
getConfigurationFromServerForEmail:
getDetailsForMessages:absoluteBottom:topOfDesiredRange:range:fromMailbox:
getDetailsForMessagesWithRemoteIDInRange:fromMailbox:
getMailboxIDForUID:
getMailboxListWithConnection:
getMailboxListWithConnection:statusDataItems:statusEntriesByMailbox:
getMessageId:andInternalDate:forDestinationUid:
getNumber:
getNumberOfAttachments:isSigned:isEncrypted:
getQuotaForRootName:
globalAsyncScheduler
globalAsyncSchedulerWithQualityOfService:
gotBadResponse
gotNewMessagesState
greatestInboxUid
hadWarningOrError
handleAlertResponse:
handleBytesAvailable
handleFailureInFunction:file:lineNumber:description:
handleFailureInMethod:object:file:lineNumber:description:
handleFetchResponse:forUid:
handleFetchResponses:
handleFetchResult:
handleItems:
handleOverQuotaResponse:
handlePushNotificationOnMailboxes:missedNotifications:
handleStreamEvent:
hasBytesAvailable
hasOperationsForMailbox:
hasPendingOfflineOperations
hasPrefix:
hasSuffix:
hasValidCacheFileForMessage:
hash
headerData
headerDataForMessage:downloadIfNecessary:
headersIfAvailable
host
hostname
humanReadableName
iconString
identifier
idle
idleCommandSequenceNumber
idleSubscriptionCancelable
imapNotEnabledPrefix
inaccessiblePasswordErrorWithTitle:
includeRemoteBodyContent
increment
indexGreaterThanIndex:
indexLessThanIndex:
indexOfObject:
indexOfObjectIdenticalTo:
indexSet
init
initForDataclass:
initWithArray:
initWithAuthScheme:account:connection:
initWithBytes:length:
initWithBytes:length:encoding:
initWithCapacity:
initWithCharacters:length:
initWithCondition:
initWithConnection:response:start:end:
initWithConnection:responseConsumer:
initWithConsumer:
initWithConsumers:
initWithContentsOfFile:options:error:
initWithData:
initWithData:encoding:
initWithData:partial:incomplete:
initWithDictionary:
initWithFlags:customFlags:size:uid:
initWithFlagsToSet:flagsToClear:forUids:inMailbox:
initWithFloat:
initWithHeaderData:encoding:
initWithIMAPAccount:
initWithImmutableData:
initWithKey:ascending:
initWithLibrary:persistentAccount:
initWithLocaleIdentifier:
initWithMailboxToCreate:
initWithMailboxToDelete:
initWithMailboxUid:readOnly:
initWithMask:searchTerms:positiveMatch:
initWithMaximumSize:latency:
initWithMessage:
initWithName:andDelegate:
initWithObjects:
initWithObjects:count:
initWithObjects:forKeys:
initWithObjectsAndKeys:
initWithPath:UID:changes:
initWithResultCode:failedMessages:transferedMessage:
initWithSet:
initWithType:
initWithType:mailbox:
initWithTypes:error:
initWithURL:
initWithUTF8String:
initWithUid:
initWithUid:section:estimatedLength:consumer:
initWithUid:section:length:consumer:
initWithUid:section:length:lengthIsKnown:range:consumer:
initWithUid:section:range:consumer:
initWithUidsToCopy:fromMailbox:toMailbox:firstNewUid:
initWithUnsignedLongLong:
initWithUser:password:persistence:
initialize
insertObject:atIndex:
intValue
integerForKey:
integerValue
internalDate
internalDates
intersectSet:
invalidateAndCancel
invocationWithSelector:target:object:taskName:priority:canBeCancelled:
is3GConnection
is4GConnection
isAccountClassEquivalentTo:
isActive
isBatterySaverModeEnabled
isCellularConnection
isComplete
isDraftsMailboxType:
isEnabledForDataclass:
isEqual:
isEqualToDictionary:
isEqualToString:
isEquivalentTo:hostname:username:
isFatPipe
isFetching
isForeground
isFull
isIdle
isInternal
isKindOfClass:
isMailboxLocalForType:
isMainThread
isMemberOfClass:
isMessageContentsLocallyAvailable
isMobileMail
isNetworkUp
isOffline
isPartial
isPluggedIn
isPredefinedAccountType
isProvisionedForDataclass:
isReadable
isRemoteSearch
isResponseWithCode:
isSSLEditable
isSending
isShared
isSourceOfTemporaryUid:
isSpecialMailbox:
isSubclassOfClass:
isSyncingNotes
isUntagged
isUsernameEquivalentTo:
isValidBase64:
justSentPlainTextPassword
keyEnumerator
keyValuePairs
lastEmailAliasesSyncDate
lastIndex
lastKnownCapabilities
lastObject
lastPushRegistration
lastTemporaryUid
lastUsedTime
lazyFutureWithBlock:
legacyKeychainProtocol
length
lengthOfDataBeforeLineConversion
libraryID
libraryIMAPStore:bodyDownloadBeganForUid:data:section:
libraryIMAPStore:bodyDownloadCompletedForUid:data:section:
libraryIMAPStore:bodyDownloadReceivedMoreDataForUid:data:section:
limit
listingForMailbox:options:getSpecialUse:statusDataItems:statusEntriesByMailbox:
literalChunkSize
literalWithResponseConsumer:section:
load
loadCachedHeaderValuesFromHeaders:
localAccount
localizedCompare:
localizedDescription
localizedStringForKey:value:table:
localizedStringFromPersonNameComponents:style:options:
lock
lockStateObservable
lockWhenCondition:beforeDate:
locked_finishIdle
locked_scheduleIdle
locked_scheduleIdleResetAfterDelay:
locked_startIdle
logReadChars
logReadChars:length:
loginDisabled
loginDisabledErrorWithTitle:
loginWithAccount:password:
logout
lookAhead
lowPowerModeObservable
machineID
mailAccount
mailAccountIfAvailable
mailboxAttributes
mailboxListFilter
mailboxName
mailboxPathExtension
mailboxUid
mailboxUidForRelativePath:create:
mailboxUidFromActiveAccountsForURL:
mailboxUidOfType:createIfNeeded:
mailboxesRegisteredForPushByHash
mainBundle
mainConsumer
makeObjectsPerformSelector:
map:
mask
match:
match:upToSpecial:
matchesFetchResponse:
matchesInString:options:range:
maximumRemoteIDForMailbox:
messageData
messageDataHolder
messageFlags
messageForRemoteID:
messageForRemoteID:inMailbox:
messageID
messageIdRollCall:
messageIds
messageIsDeletedCriterion:
messageSetForNumbers:
messageSetForNumbers:range:
messageSetForNumbers:range:maxTokens:indexOfLastNumber:
messageSetForRange:
messageSetForRange:butNotNumbers:
messageSize
messageStore
messageToSyncFlagsForUID:
messageWithLibraryID:options:inMailbox:
messageWithRemoteID:inRemoteMailbox:
messagesAdded:
messagesForMailbox:olderThanNumberOfDays:
messagesMatchingCriterion:options:
messagesWereAdded:
mf_addObject:forKey:
mf_addressDomain
mf_appendCString:
mf_boolForKey:
mf_convertNetworkLineEndingsToUnix
mf_decodeModifiedBase64
mf_decodedIMAPMailboxName
mf_encodeBase64WithoutLineBreaks
mf_encodeModifiedBase64
mf_encodedIMAPMailboxName
mf_fileSystemString
mf_formattedAddressWithName:email:useQuotes:
mf_indexOfMailboxDictionaryWithName:
mf_invocationWithSelector:target:
mf_isInaccessibleAccountCredentialError
mf_isLegalEmailAddress
mf_isUserCancelledError
mf_lockWithPriority
mf_makeCompletePath:mode:
mf_makeImmutable
mf_rangeOfRFC822HeaderData
mf_shouldFailDownload
mf_subdataWithRange:
mf_tryLock
mf_uncommentedAddress
mf_unlock
mfl_lockOrdering
mimeBody
minBytesLeft
minID
minUID
minimumPartialDownloadSize
minimumRemoteIDForMailbox:
minusSet:
missingPasswordErrorWithTitle:
modSequenceNumber
moveMessages:fromMailbox:toMailbox:markAsRead:
moveMessages:toMailbox:markAsRead:
moveSequenceSet:toMailboxName:newMessageInfo:
moveUIDSet:toMailboxNamed:newMessageInfo:
mustRegisterForPushOnNextConnection
mutableBytes
mutableCopy
mutableCopyWithZone:
name
nameForMailboxUid:
needToSynchronizeMailboxCaches
networkChanged
newChildAccountWithParentAccount:error:
newDictionaryForLocalFlags:serverFlags:existingDictionary:
newMailboxNameIsAcceptable:reasonForFailure:
nextObject
nextSeparator
noop
notificationNamesForPrefix:mailboxUids:
notificationWithName:object:userInfo:
notifyConnectionEstablished
notifyDelegateOfBodyLoadAppendage:section:
notifyDelegateOfBodyLoadCompletion:section:
notifyDelegateOfBodyLoadStart:section:
nowWouldBeAGoodTimeToStartBackgroundSynchronization
null
number
numberOfNewlinesNeedingConversion:
numberWithInteger:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLong:
numberWithUnsignedLongLong:
oauth2Token
object
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
observeOn:
observerWithResultBlock:
offlineCache
offlineCacheDirectoryPath
offlineCacheIfExists
offlineCacheIfOffline
operationType
originalMailboxURL
parameters
parent
parentAccount
parentAccountIdentifier
parentAccountMailProperties
parseESearchResponseWithContext:
parseIMAPPropertyList:
parseIndexSetFromSequenceSet:
parseSearchReturn:
parseSpace
partName
partNumber
password
passwordForServiceName:accountName:synchronizable:error:
passwordFromKeychain
path
pathComponents
paths
percentDone
performBatchOperationWithUIDs:requiringConnection:withOptions:operation:
performCustomCommand:withArguments:
performDeferredOperationsWithConnection:
performOperationRequiringConnection:withOptions:operation:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
persistentAccount
persistentAccountDidChange:previousAccount:
persistentNameForMailbox:
personID
pluggedInObservable
portNumber
postNotification:
postNotificationName:object:
postNotificationName:object:userInfo:
powerlog:eventData:
predefinedValueForKey:
preferredAuthScheme
preferredEncoding
previousFailureCount
primaryMailboxUid
privateNamespaces
processResults
processResultsForUid:
propertiesForDataclass:
publicNamespaces
pushUpdateForAliasData
pushedMailboxUids
qualifier
quotaPercentagesForMailbox:
quotaRootName
quotaRootNames
quotas
raise:format:
range
rangeOfString:
rangeOfString:options:
rangeOfString:options:range:
rangeValue
readBufferSize
readBytesIntoData:desiredLength:
readLineIntoData:
reason
receiveEmailAliasAddresses
reference
registerForPush:
registerPushNotificationPrefix:forMailboxUids:
registerSchemeClass:
relativePath
releaseAllConnections
releaseAllConnectionsIdleForTimeInterval:
releaseAllForcedConnections
releaseNetworkAssertion
relinquishExclusiveAccessKey:
remoteHostname
remoteID
remoteIDsFromUniqueRemoteIDs:
remoteMailboxURL
removeAccountPropertyForKey:
removeAllLocalMessages
removeAllObjects
removeCredential:forProtectionSpace:
removeDiagnosticsGenerator:
removeFlagChanges:forMessages:
removeFlagChangesCommittedBefore:
removeIndex:
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removeObjectIdenticalTo:
removeObjectsInRange:
removeObserver:name:object:
removePasswordForServiceName:accountName:
removeSubdownload:
renameMailbox:newName:parent:
renameMailbox:toMailbox:
replaceObjectAtIndex:withObject:
replaceObjectsInRange:withObjectsFromArray:
replaceObjectsInRange:withObjectsFromArray:range:
reportAuthenticationError:authScheme:
requestWithMask:searchTerms:positiveMatch:
requiresAuthentication
requiresDataForOfflineTransfersFromStore:
requiresPassword
reset
resetMailboxTimer
resetSpecialMailboxes
resetWarningOrError
respondsToSelector:
response
responseCode
responseConsumer
responseForServerData:
responseInfo
responseName
responseType
resultWithTimeout:error:
resume
retain
retainCount
retainedReference
rootMailboxUid
routingInfo
saslName
saveChanges
savePersistentAccount
saveSentFolder
saveState
scanInteger:
scanLocation
scheduleIdleReset
searchIDSet:forTerms:success:
searchResults
searchTerms
searchUIDs:withFlagRequests:
searchUidSet:forNewMessageIDs:
searchUidSet:forTerms:success:
secureServiceName
securityLayer
securityProtocol
selectMailbox:withAccount:
self
sendResponsesForCommand:toQueue:
sendResponsesForCondStoreFlagFetchForUIDs:withSequenceIdentifier:toQueue:
sendResponsesForUIDFetchForUIDs:fields:toQueue:
sendResponsesForUIDs:fields:flagSearchResults:toQueue:
sendSkeletonResponsesForUIDs:includeTo:toQueue:
sendUidAndFlagResponsesForUIDs:sequenceIdentifierProvider:flagSearchResults:toQueue:
sendUidResponsesForSearchArguments:toQueue:
sender
separator
separatorChar
sequenceIdentifierForItem:
sequenceIdentifierForMessagesWithRemoteIDs:inMailbox:
sequenceIdentifierForUIDs:
serialDispatchQueueSchedulerWithName:qualityOfService:
serializeIntoData:
serverInfo
serverMessageCount
serverPathPrefix
serverPathPrefixAccountValue
serverRegisteredMailboxes:withTopic:version:
serviceName
sessionWithConfiguration:delegate:delegateQueue:
setAPSTopic:
setAccount:
setAccountIdentifier:
setAccountProperty:forKey:
setAdditionalFetchHeaders:
setAdditionalHeadersForFetch:
setAdditionalSynchronizationSearchArguments:
setAllowsPartialDownloads:
setAttributes:
setAuthenticationState:
setAuthenticationType:
setBodyDataConsumer:
setBodyStructure:
setCancelationToken:
setCapabilities:
setCastleAccount:
setChunkSize:
setClientCertificates:
setCommitTime:
setConnectionError:
setConnectionTag:
setConnectionTag:forFlagChanges:forMessages:
setConsumerSection:
setCurrentCount:
setCustomFlagsArray:
setData:
setData:forMessage:isPartial:
setDataHolder:
setDateFormat:
setDateReceivedTimeIntervalSince1970:
setDefaultEmailAddress:
setDelegate:
setDisplayName:maxCount:
setDownloadDelegate:
setEmailAddresses:
setEnabled:forEmailAddress:
setEnvelope:
setError:
setEventHandler:
setExpectedLength:
setExtraAttributes:
setFailureCount:
setFamilyName:
setFetchBodyData:
setFetchData:
setFetchItem:
setFetchMaxBytes:
setFetchMinBytes:
setFetchResults:
setFlags:
setFlags:andClearFlags:forMessages:
setFlags:andClearFlags:forUids:forMailbox:
setFlagsArray:
setFlagsCancelled:forMessages:
setFlagsFetchResult:
setFlagsForAllMessagesFromDictionary:
setFlagsFromDictionary:forMessages:
setFlagsLocallyFromDictionary:forMessages:
setFull:
setGivenName:
setGotNewMessagesState:
setHTTPBody:
setHTTPMethod:
setHandlerForTemporaryUidToRemoteIDMapping:
setHasTemporaryUid:
setHeaders:
setHighestModSequence:
setHost:
setHostname:
setIdleCommandSequenceNumber:
setIdleSubscriptionCancelable:
setInternalDate:
setIsFetching:
setIsOffline:
setIsPartial:
setLastEmailAliasesSyncDate:
setLastKnownHostname:
setLastPushRegistration:
setLastSyncAndMostRecentStatusCount:forMailbox:
setLength:
setLibrary:
setLocalDefaultEmailAddress:
setLocale:
setLocallyEnabled:forEmailAddress:
setMailbox:
setMailboxAttributes:separator:mailboxName:extraAttributes:
setMailboxListFilter:
setMailboxName:quotaRootNames:
setMailboxName:statusEntries:
setMailboxNames:
setMailboxUidValidity:
setMaximumLatency:
setMessageData:isPartial:
setMessageFlags:
setMessageId:andInternalDate:forMessageWithSourceUid:
setMessageStore:
setMinBytesLeft:
setMissingPasswordError
setModSequenceNumber:
setMoreInfo:
setMustRegisterForPushOnNextConnection:
setName:
setNotificationNamePrefix:
setNumber:
setObject:forKey:
setObject:forKeyedSubscript:
setParentAccount:
setPassword:
setPasswordInKeychain:
setPath:
setPaths:
setPortNumber:
setPreferredAuthScheme:
setPreferredEncoding:
setPreferredEncoding:forMessage:
setPrivateNamespaces:
setPublicNamespaces:
setQuotaRootName:quotas:
setReadBufferSize:
setReadBufferSizeFromElapsedTime:bytesRead:
setReadSizeParameters
setReceiveEmailAliasAddresses:
setRepresentedAccount:
setResponseConsumer:
setResponseName:parameters:
setResponseType:
setScanLocation:
setScheme:
setSearchResults:
setSection:
setSecurityProtocol:
setSequenceIdentifier:forMessageWithLibraryID:
setSequenceIdentifier:forMessagesWithRemoteIDs:inMailbox:
setSequenceIdentifier:forUIDs:
setServerInfo:
setServerMessageCount:
setServerPathPrefix:
setServerUnreadOnlyOnServerCount:forMailbox:
setSharedNamespaces:
setShortDescription:
setShouldFlattenCacheOperations:
setShouldUseIDLE:
setStart:
setStoreMailboxType:onServer:
setSupportedPushServiceLevel:
setTaskName:
setTimeout:
setTopLevelPart:
setUid:forMessageWithTemporaryUid:
setUidFlagsChange:
setUids:
setUniqueRemoteId:
setUrls:
setUserData:responseCode:responseInfo:
setUserInfoObject:forKey:
setUsername:
setUsesRealUids:
setUsesSSL:
setValue:forHTTPHeaderField:
setValue:forKey:
setValueInAccountInfo:forKey:
setValueInAccountProperties:forKey:
setWithArray:
setWithCapacity:
setWithObject:
setWithSet:
sharedAccountStore
sharedController
sharedCredentialStorage
sharedInstance
sharedInvocationQueue
sharedManager
sharedNamespaces
shouldAddUID:
shouldArchiveByDefault
shouldCancel
shouldDisplayHostnameInErrorMessages
shouldEnableAfterError:
shouldExpungeMessagesOnDelete
shouldFetchACEDBInfoForError:
shouldRegisterForPush
shouldRestoreMessagesAfterFailedDelete
shouldRetryEmptyBodyDownloadForMessage:
shouldStartIdleForConnection:
shouldUseAuthentication
shouldUseIDLE
shouldUseNonDeletedForUnreadCount
showWithHandler:
sortUsingFunction:context:
sortUsingSelector:
sortedArrayUsingDescriptors:
sourceUidForTemporaryUid:
sourceUids
specialMailboxNameForType:
specialUseAttributeForType:
standardAccountClass:valueForKey:
standardUserDefaults
start
startCompression
startListeningForNotifications
startOffset
startTLSForAccount:
startWatchingForTopic:
startWith:
statisticsKind
statusCode
statusEntries
statusString
stopListeningForNotifications
stopWatchingForTopic:
store
storeClass
storeFlags:state:forRange:
storeFlags:state:forUids:
storeForMailboxUid:
storeMailboxTypeOnServer:
storeSearchResultMatchingCriterion:limit:offset:error:
string
stringByAddingPercentEncodingWithAllowedCharacters:
stringByAppendingFormat:
stringByAppendingString:
stringByTrimmingCharactersInSet:
stringValue
stringWithCString:encoding:
stringWithFormat:
stringWithString:
stringWithUTF8String:
structureDidChange
subarrayWithRange:
subdownloads
subscribe:
subscribeMailbox:
subscribedListingForMailbox:options:
substringFromIndex:
substringToIndex:
substringWithRange:
superclass
supportedPushServiceLevel
supportsAppend
supportsArchiving
supportsCapability:
supportsFastRemoteBodySearch
supportsInitialClientResponse
supportsMailboxEditing
supportsRemoteAppend
supportsUserPushedMailboxes
swapTopic:forNewTopic:
syncMessagesWithUIDs:connection:libraryDetails:flagSearchResults:
taskName
throttledGetMailboxListWithConnection:
timeIntervalSince1970
timeIntervalSinceReferenceDate
topLevelPart
topic
transferDisabledMailboxUids
transferNotificationSessionToAccount:
type
uidFlagsChange
uidForItem:
uids
uidsReferencedBy:
unionSet:
uniqueId
uniqueRemoteIDsForMessages:
uniqueRemoteId
unlock
unlockWithCondition:
unreadCount
unselect
unselectMailbox:
unsignedIntValue
unsignedIntegerValue
unsignedLongLongValue
unsubscribeMailbox:
updateDeletedCount
updateDeletedCountWithNotDeletedCount:
updateEmailAliases
updateMostRecentStatusCount:
updatePushRegisteredMailboxes:
updateServerUnreadCountClosingConnection:
urls
useCredential:forAuthenticationChallenge:
useGenericDescription:
userData
userFullName
userInfo
userInfoBoolForKey:
userInfoObjectForKey:
userString
username
usernameIsEmailAddress
usesRealUids
valid
valueForKey:
verifyESearchSupportWithBlock:
wasFromStorage
weakReferenceWithObject:
whitespaceAndNewlineCharacterSet
whitespaceCharacterSet
wifiObservable
willFetchMessages
willRemoveDelegation:
willSetFlagsFromDictionary:forMessages:
writeBytes:length:dontLogBytesInRange:
writeData:
writeData:dontLogBytesInRange:
writeToFile:options:error:
xListSupportedOnConnection:
zone
@16@0:8
@24@0:8@16
B16@0:8
I16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@20@0:8i16
@20@0:8B16
v24@0:8@16
v16@0:8
@"AOLAccount"
@32@0:8@16@24
@32@0:8@16^@24
B40@0:8@16@24@32
v32@0:8@16@24
v20@0:8I16
v20@0:8B16
@24@0:8^@16
v28@0:8B16@20
@"MFLock"
@"ACAccount"
@"DeliveryAccount"
@"NSMutableDictionary"
@"NSString"
@"NSObject<OS_dispatch_queue>"
B40@0:8@16^@24@32
@48@0:8@16B24@28^B36i44
v40@0:8@16@24@?32
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v40@0:8@16@24@32
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
i24@0:8@16
i20@0:8i16
@"EFPromise"
@"NSURLCredential"
@"GmailAccount"
B32@0:8#16@24
@"NSArray"
@"IMAPAccount"
@36@0:8@16I24@28
d16@0:8
v24@0:8d16
@"NSDictionary"
^v16@0:8
B40@0:8@16@24^{?=i@@Q@}32
v40@0:8@16@24^{?=i@@Q@}32
I24@0:8@16
B40@0:8@"MFIMAPConnection"16@"MFIMAPResponse"24^{?=i@@Q@}32
v40@0:8@"MFIMAPConnection"16@"MFIMAPResponse"24^{?=i@@Q@}32
v40@0:8@"MFIMAPConnection"16@"NSMutableData"24@"NSString"32
I24@0:8@"MFIMAPConnection"16
v24@0:8@"MFIMAPConnection"16
B24@0:8@"MFIMAPConnection"16
v36@0:8@16@24i32
v36@0:8@"NSMutableArray"16@"NSString"24i32
B32@0:8@16@24
B20@0:8i16
v24@0:8i16B20
@20@0:8I16
@36@0:8@16@24i32
v28@0:8@16B24
B24@0:8@?16
v24@0:8@?16
v36@0:8B16B20d24B32
@56@0:8@16B24B28@32@40^@48
@32@0:8@16B24B28
@28@0:8@16B24
@48@0:8@16@24I32@36i44
v28@0:8@16i24
@24@0:8i16B20
@44@0:8@16@24@32B40
B40@0:8@16@24^@32
@52@0:8@16@24I32@36@44
B32@0:8@16^@24
v28@0:8@16I24
v36@0:8@16@24I32
@36@0:8@16I24d28
v28@0:8d16I24
v36@0:8I16@20@28
i16@0:8
v20@0:8i16
^{__CFArray=}
@"MFIMAPOperationCache"
@"NSRecursiveLock"
@"NSMutableArray"
@"NSLock"
@"NSNumber"
@"NSSet"
v52@0:8I16@20Q28@36@44
v24@0:8Q16
@"MFIMAPFetchResult"
@"<MFDataConsumer>"
i48@0:8*16Q24Q32^B40
Q40@0:8^{?=i@@Q@}16Q24^@32
@24@0:8^{?=i@@Q@}16
@32@0:8@16^{?=i@@Q@}24
@40@0:8@16@24^{?=i@@Q@}32
i40@0:8@16@24@32
@60@0:8i16@20@28i36B40@44^@52
@52@0:8@16i24B28@32^@40i48
@48@0:8@16i24B28@32^@40
@28@0:8@16i24
B28@0:8i16@20
@40@0:8@16@24^B32
Q40@0:8@16@24^B32
I20@0:8I16
B36@0:8@16B24@28
B36@0:8@16B24{?=II}28
@32@0:8^{?=i@@Q@}16@24
B56@0:8@16@24@32@40^@48
@24@0:8B16B20
v32@0:8^Q16^I24
v32@0:8d16Q24
B44@0:8{?=II}16@24B32@36
@24@0:8{?=II}16
@32@0:8{?=II}16@24
@56@0:8@16{_NSRange=QQ}24Q40^Q48
@40@0:8@16{_NSRange=QQ}24
@24@0:8^{_NSZone=}16
@24@0:8q16
@32@0:8^{?=i@@Q@}16Q24
B32@0:8^{?=i@@Q@}16@24
B48@0:8@16@24@32@40
v32@0:8^{?=i@@Q@}16Q24
@"<MFIMAPMailboxListFilter>"
@"NSMutableSet"
@"NSMutableData"
@"MFInvocationQueue"
{?="holder"@"MFWeakReferenceHolder""delegate"^v"shouldHandleUntaggedResponse"b1"didReceiveResponse"b1"didFinishSelect"b1"didDisconnect"b1"didBeginBodyLoad"b1"didReceiveMoreBodyData"b1"didFinishBodyDataLoad"b1"bodyDataReadSize"b1"setServerMessageCount"b1"setHighestModSequence"b1"willRemoveDelegation"b1"shouldStartIdle"b1}
@"<EFCancelable>"
Q24@0:8Q16
v36@0:8@16Q24B32
@24@0:8Q16
@36@0:8Q16@24B32
@"MFCountingDataConsumer"
@"MFBaseFilterDataConsumer"
@64@0:8I16@20Q28B36{_NSRange=QQ}40@56
@44@0:8I16@20Q28@36
@52@0:8I16@20{_NSRange=QQ}28@44
@"NSError"
{_NSRange="location"Q"length"Q}
(?="envelope"@"NSArray""internalDate"@"NSDate""messageSize"Q"bodyStructure"@"NSArray""bodySectionInfo"{?="section"@"NSString""startOffset"Q"sectionData"@"NSData"}"uid"I"uniqueRemoteId"Q"flags"{?="messageFlags"Q"customFlags"@"NSArray"})
@44@0:8Q16@24Q32I40
q24@0:8@16
@"MFMessage"
@"MFMimePart"
@"<MFCollectingDataConsumer>"
@"NSData"
@"MFMessageHeaders"
@32@0:8@16^Q24
C16@0:8
@28@0:8i16@20
@48@0:8@16@24@32@40
@44@0:8@16@24@32I40
@48@0:8I16I20@24@32@40
B20@0:8I16
B36@0:8^@16^@24I32
(?="store"{?="trueFlags"@"NSArray""falseFlags"@"NSArray""uids"^{__CFArray}}"append"{?="uid"I"flags"@"NSArray""internalDate"i"size"I}"copy"{?="srcUids"^{__CFArray}"dstUids"^{__CFArray}"destinationMailbox"@"NSString"})
v48@0:8@16@24@32@40
I40@0:8@16@24@32
I48@0:8@16@24@32@40
v32@0:8@16^{?=@@^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}IIi@}24
@"NSFileHandle"
@48@0:8@16@24r*32r*40
r*16@0:8
v24@0:8r*16
B24@0:8^Q16
B24@0:8r*16
B32@0:8r*16r*24
^{__CFArray=}20@0:8B16
@36@0:8r*16r*24i32
@"MFIMAPConnection"
@"MFIMAPResponse"
v36@0:8@16i24@28
v48@0:8Q16@24@32@40
(_IMAPResponseData="basic"{?="responseCode"i"responseInfoAndOrUserData"@}"capabilities"@"NSArray""number"Q"flags"@"NSArray""status"{?="mailboxName"@"NSString""entries"@"NSDictionary"}"searchResults"@"NSArray""list"{?="mailboxAttributes"Q"separatorAndOrMboxName"@"extraAttributes"@"NSArray"}"fetch"{?="number"Q"items"@"NSArray""modSeqNumber"Q}"quotaRoot"{?="mailboxName"@"NSString""quotaRootNames"@"NSArray"}"quota"{?="quotaRootName"@"NSString""quotas"@"NSArray"}"uidFlags"{?="uids"@"NSString""flagsFetchResult"@"MFIMAPFetchResult""change"b1}"serverInfo"@"NSDictionary""namespace"{?="private"@"NSArray""public"@"NSArray""shared"@"NSArray"}"other"{?="name"@"NSString""parameters"@"NSArray"})
@"MFIMAPResponseConsumer"
@"MFDataHolder"16@0:8
@"MFDataHolder"
B24@0:8Q16
@"MFLibraryIMAPStore"
Q24@0:8@16
@"NSMutableIndexSet"
@"NSString"24@0:8@"NSArray"16
v32@0:8@"NSString"16@"NSArray"24
Q56@0:8@16@24Q32Q40#48
Q48@0:8@16@24@32@40
v76@0:8@16^@24^@32^@40@48@56B64^I68
v24@0:8^Q16
Q108@0:8@16@24@32B40Q44Q52Q60^B68^{_NSRange=QQ}76^Q84^Q92^Q100
q40@0:8Q16@24Q32
@28@0:8@16I24
v40@0:8@16I24i28@?32
q28@0:8@16I24
@44@0:8@16I24@28^@36
q32@0:8@16Q24
B40@0:8^{?=@@@@B@@@@II}16@24@32
Q24@0:8^{?=@@@@B@@@@II}16
Q56@0:8@16@24@32@40@48
Q64@0:8@16@24@32@40@48@56
@36@0:8@16@24B32
@40@0:8Q16Q24@32
B28@0:8I16@20
B56@0:8@16{_NSRange=QQ}24^B40@48
@44@0:8@16^@24B32^B36
B32@0:8B16i20@?24
B40@0:8@16B24i28@?32
B40@0:8@16@24^Q32
v24@0:8I16I20
@"MFIMAPDownloadCache"
@"MFIMAPCommandPipeline"
@"EFCancelationToken"
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v40@0:8@"APSConnection"16@"NSData"24@"APSAppTokenInfo"32
v40@0:8@"APSConnection"16@"APSURLToken"24@"APSURLTokenInfo"32
v40@0:8@"APSConnection"16@"NSError"24@"APSURLTokenInfo"32
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
v24@0:8@"NSString"16
v32@0:8@"NSString"16@"NSString"24
@"NSData"16@0:8
@"APSConnection"
@"NSCountedSet"
@"NSConditionLock"
q40@0:8@16@24^@32
q44@0:8@16@24i32^@36
@28@0:8B16^@20
@"MFOSXServerIMAPAccount"
@40@0:8@16@24@32
@"CastleIMAPAccount"
@"YahooAccount"
