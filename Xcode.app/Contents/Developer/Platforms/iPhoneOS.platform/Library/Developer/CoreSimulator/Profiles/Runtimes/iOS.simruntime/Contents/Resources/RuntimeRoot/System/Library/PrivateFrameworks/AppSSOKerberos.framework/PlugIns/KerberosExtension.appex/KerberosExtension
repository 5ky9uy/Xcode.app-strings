PASSWORD_CHANGE_PASSWORD_MATCH_ALERT_TEXT
v8@?0
v20@?0B8@"NSError"12
CHANGE_PASSWORD_ERROR
OK_TEXT
v16@?0@"UIAlertAction"8
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
process
T@"SOKerberosExtensionProcess",&,N
containerView
T@"UIView",W,N,V_containerView
scrollView
T@"UIScrollView",W,N,V_scrollView
realmLabel
T@"UILabel",W,N,V_realmLabel
usernameTextField
T@"UITextField",W,N,V_usernameTextField
passwordTextField
T@"UITextField",W,N,V_passwordTextField
changedPasswordTextField
T@"UITextField",W,N,V_changedPasswordTextField
changedPasswordAgainTextField
T@"UITextField",W,N,V_changedPasswordAgainTextField
navigationBar
T@"UINavigationBar",W,N,V_navigationBar
separator1
T@"UIView",W,N,V_separator1
separator2
T@"UIView",W,N,V_separator2
bottomConstraint
T@"NSLayoutConstraint",W,N,V_bottomConstraint
navigationItem
T@"UINavigationItem",W,N,V_navigationItem
changePasswordButton
T@"UIBarButtonItem",&,N,V_changePasswordButton
cancelButton
T@"UIBarButtonItem",W,N,V_cancelButton
currentUIContext
T@"SOKerberosContext",&,N,V_currentUIContext
T@"SOKerberosExtensionProcess",&,N,V_process
com.apple.AppSSO
KerberosPasswordViewController
useKeychain
userSetKeychainChoice
rememberKeychainChoice
profile
realm
HTTP@%@
Negotiate %@
Authorization
kGSSMinorErrorCode
PASSWORD_CHANGE_PASSWORD_CHANGE_FAILED_OLD_PASSWORD_ALERT_TEXT
PASSWORD_CHANGE_PASSWORD_CHANGE_FAILED_SERVER_ALERT_TEXT
KDC_UNREACHABLE
REALM_CASE_MISMATCH
DEFAULT_REALM_MISSING
NSDescription
kerberosByRealm
T@"NSMutableDictionary",&,N,V_kerberosByRealm
requestContextMapping
T@"NSMapTable",&,N,V_requestContextMapping
settingsManager
T@"SORealmSettingManager",&,N,V_settingsManager
SOKerberosExtensionProcess
ASAuthorizationOperationLogout
/System/Library/Frameworks/AuthenticationServices.framework/AuthenticationServices
/System/Library/Frameworks/AuthenticationServices.framework/Contents/MacOS/AuthenticationServices
ASAuthorizationProviderAuthorizationOperationConfigurationRemoved
ASAuthorizationOperationLogin
www-authenticate
Negotiate
KerberosLoginViewController
PASSWORD_INCORRECT
ACCOUNT_LOCKED
USERNAME_INCORRECT
UNABLE_TO_RESOLVE_REALM
PASSWORD_EXPIRED
CERTIFICATE_NOT_FOUND
requestQueue
T@"NSOperationQueue",&,N,V_requestQueue
viewControllerToShow
T@"UIViewController<KerberosViewControllerData>",&,N,V_viewControllerToShow
loginViewController
T@"UIViewController<KerberosViewControllerData>",&,N,V_loginViewController
passwordViewController
T@"UIViewController<KerberosViewControllerData>",&,N,V_passwordViewController
KerberosBaseViewController
KerberosViewController
SIGN_IN_TITLE
v12@?0B8
KEYCHAIN_ALERT_TITLE
KEYCHAIN_ALERT_TEXT
YES_TEXT
NO_TEXT
UNSUPPORTED_ENC_TYPE
LOGIN_ERROR
signInTitleLabel
T@"UILabel",W,N,V_signInTitleLabel
loginButton
T@"UIBarButtonItem",&,N,V_loginButton
customHelpTitleLabel
T@"UILabel",W,N,V_customHelpTitleLabel
viewControllerIsShowing
TB,N,V_viewControllerIsShowing
promptForSmartCard
TB,N,V_promptForSmartCard
initWithNibName:bundle:
initWithCoder:
viewDidLoad
clearColor
view
setBackgroundColor:
secondarySystemBackgroundColor
setDelegate:
textFieldDidChange:
addTarget:action:forControlEvents:
setHidesWhenStopped:
setTextContentType:
containerView
setClipsToBounds:
layer
setCornerRadius:
setMaskedCorners:
currentDevice
userInterfaceIdiom
defaultCenter
keyboardWillShow:
addObserver:selector:name:object:
keyboardWillHide:
viewWillAppear:
_enableUI
text
length
becomeFirstResponder
_scrollToTop
userInfo
objectForKey:
CGRectValue
bottomConstraint
setConstant:
changePasswordClicked
_formIsValid
usernameTextField
currentUIContext
setUserName:
passwordTextField
setPassword:
changedPasswordTextField
setChangedPassword:
changeADPassword
_hasVerifiedNewPassword
_disableUI
mainBundle
localizedStringForKey:value:table:
_showMessage:completionHandler:
removeFromParentViewController
removeFromSuperview
cancelCurrentOperation
changePasswordButton
setEnabled:
cancelButton
setIsAccessibilityElement:
changedPasswordAgainTextField
initWithCustomView:
navigationItem
setRightBarButtonItem:
startAnimating
changeFocusedElementForAccessibilityIfNeeded
_hasFilledRequiredFormFields
userNameIsReadOnly
cancelRequest
setCurrentUIContext:
realm
realmLabel
setText:
userName
presentAuthorizationViewControllerWithCompletion:
process
kerberosForRealm:
changePasswordWithContext:withError:
changedPassword
extensionData
allowAutomaticLogin
extensionUserData
useKeychain
serviceName
userPrincipalName
password
requireUserPresence
addCredentialsToKeychainWithService:withUsername:withPassword:requireUserPresence:
completeRequest
mapKnownPasswordErrorToString:
alertControllerWithTitle:message:preferredStyle:
enableElementAutoFocusForAccessibility
actionWithTitle:style:handler:
addAction:
disableElementAutoFocusForAccessibility
presentViewController:animated:completion:
cancelClicked:
changePasswordClicked:
isEqualToString:
scrollView
setContentOffset:animated:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
textFieldShouldBeginEditing:
textFieldDidBeginEditing:
textFieldShouldEndEditing:
textFieldDidEndEditing:
textFieldDidEndEditing:reason:
textField:shouldChangeCharactersInRange:replacementString:
textFieldDidChangeSelection:
textFieldShouldClear:
textFieldShouldReturn:
handleKerberosOperation:withMessage:
setProcess:
nibName
accessibilityPerformEscape
accessibilityPerformMagicTap
setContainerView:
setScrollView:
setRealmLabel:
setUsernameTextField:
setPasswordTextField:
setChangedPasswordTextField:
setChangedPasswordAgainTextField:
navigationBar
setNavigationBar:
separator1
setSeparator1:
separator2
setSeparator2:
setBottomConstraint:
setNavigationItem:
setChangePasswordButton:
setCancelButton:
.cxx_destruct
_spinner
_shouldChangeFocusedElementForAccessibility
_process
_containerView
_scrollView
_realmLabel
_usernameTextField
_passwordTextField
_changedPasswordTextField
_changedPasswordAgainTextField
_navigationBar
_separator1
_separator2
_bottomConstraint
_navigationItem
_changePasswordButton
_cancelButton
_currentUIContext
init
weakToWeakObjectsMapTable
requestedOperation
handleLogout:removeRealm:
handleSaveAttributes:
handleGetSiteCode:
handleRemoveRealm:
handleGetRealmForHost:
handleGetDefaultRealm:
handleResetKeychainChoice:
handleGetRealmInfo:
invalidKerberosOperation
completeWithError:
requestContextMapping
count
cancelRequest:
kerberosByRealm
uppercaseString
objectForKeyedSubscript:
settingsManager
initWithRealm:andSettingsManager:
setObject:forKeyedSubscript:
createContextForRequest:
checkSourceAppACLWithContext:
sourceAppNotAllowed
completeRequestWithDoNotHandle
forceLoginViewController
handleResult:andContext:
attemptKerberosWithContext:andDelegate:
httpHeaders
settingsForRealm:
setDatePasswordLastChanged:
setDateLocalPasswordLastChanged:
setDatePasswordExpires:
setNetworkHomeDirectory:
saveRealmSettings
complete
callerBundleIdentifier
authorizationRequest
auditTokenData
initForRealm:bundleIdentifier:auditToken:
determineNetworkFingerprint
networkFingerprint
determineSiteCodeUsingDispatchGroup:andBundleIdentifier:networkFingerprint:
dumpSiteCodeCache
countByEnumeratingWithState:objects:count:
stringByAppendingString:
dictionaryWithObjects:forKeys:count:
completeWithHTTPAuthorizationHeaders:
retrieveCachedSiteCodeFromCacheForBundleIdentifier:networkFingerprint:
code
removeRealm:
initWithDictionary:
numberWithBool:
stringValue
isDefaultRealm
valueForKey:
hostNameMissing
domainRealmMapping
allKeys
hasSuffix:
numberWithUnsignedInteger:
credentialUUID
destroyCredential:
currentSettings
setUserPrincipalName:
setCredentialUUID:
setSmartCardIssuer:
setSmartCardSerialNumber:
setSmartCardTokenID:
setDateLastLogin:
setUserCancelledLogin:
removeCredentialsFromKeychainWithService:
setUserSetKeychainChoice:
setUseKeychain:
deleteSettingsForRealm:error:
saveValuesForPlugins:
UUIDString
destroyCredentialForUPN:
standardUserDefaults
removeObjectForKey:
synchronize
delayUserSetupCleared
setDelayUserSetupCleared:
setNetworkAvailable:
settingsForRealm:bundleIdentifer:includeSiteCodeCache:networkFingerprint:
dateLastLogin
setFormatOptions:
stringFromDate:
datePasswordLastChanged
dateLocalPasswordLastChanged
datePasswordExpires
networkHomeDirectory
networkAvailable
userCancelledLogin
credentialBundleIdACL
includeManagedAppsInBundleIdACL
lowercaseString
isManagedApp
initWithRequest:extensionData:settingsManager:
siteCode
setUseSiteAutoDiscovery:
initWithSiteCode:forNetworkFingerprint:
setSiteCode:
useSiteAutoDiscovery
auditToken
setNetworkIdentity:
scheme
setReturnCredentialOnly:
setForceLoginViewController:
setObject:forKey:
certificateUUID
identityForUUIDString:
objectAtIndex:
requestCancelled
smartCardIssuer
setCertificateIssuer:
smartCardSerialNumber
setCertificateSerialNumber:
smartCardTokenID
setCertificateTokenID:
hostName
stringWithFormat:
setServicePrincipalName:
attemptKerberosWithContext:returningToken:orError:
completeRequestWithToken:andContext:
resetUIOnDelegate:
completeRequestWithHTTPResponseFromContext:
localizedDescription
completeRequestWithError:
unhandledKerberosResult
resetUI
saveValuesAfterSuccessfulAuthentication:
base64EncodedStringWithOptions:
completeRequestWithHeaders:
networkIdentity
completeRequestWithHTTPResponseHeaders:
loginTimeStamp
handleAddKeychainCreds:
credsCameFromKeychain
numberWithLong:
isEqualToNumber:
beginAuthorizationWithRequest:
cancelAuthorizationWithRequest:
handleKerberosOperations:andDelegate:
destroyCredentialsWithContext:
handleProceedUserSetup:
handleNetworkAvailabiltyChange:networkIsAvailable:
setSettingsManager:
setKerberosByRealm:
setRequestContextMapping:
_settingsManager
_kerberosByRealm
_requestContextMapping
setMaxConcurrentOperationCount:
encodeWithCoder:
requestContainsNegotiateChallenge:
handleKerberosOperations:
doNotHandle
handleChangePasswordWithRequest:
allowPasswordChange
passwordChangeNotEnabled
setPasswordViewController:
passwordViewController
setViewControllerToShow:
addViewControllerToShowAsChildViewController
queueLoginUIForContext:andBlock:
viewControllerToShow
addChildViewController:
addSubview:
setTranslatesAutoresizingMaskIntoConstraints:
topAnchor
constraintEqualToAnchor:
bottomAnchor
leadingAnchor
trailingAnchor
arrayWithObjects:count:
activateConstraints:
rangeOfString:options:
setLoginViewController:
loginViewController
attemptedToGetCredsFromKeychain
retrievePasswordFromKeychain:
setAttemptedToGetCredsFromKeychain:
createLoginViewController
setSmartCardNeedsInsert:
retrieveCredentialsFromKeychainWithService:returnedUsername:returnedPassword:
setCredsCameFromKeychain:
requestQueue
startRequest
waitForCompletion
addOperationWithBlock:
setRequestQueue:
_viewControllerToShow
_loginViewController
_passwordViewController
_requestQueue
setViewControllerIsShowing:
enableUI
viewDidAppear:
presentPendingAlertIfNeeded
callerLocalizedName
sizeToFit
helpText
customUsernameLabel
setPlaceholder:
disableUI
prepareContextForLogin
promptUserForConsentToPerformFutureAutomaticLoginsIfNeeded:
resignFirstResponder
shouldPromptUserForConsentToPerformFutureAutomaticLogins
promptUserForConsentToPerformFutureAutomaticLogins:
userSetKeychainChoice
showMessage:andContext:
loginButton
promptForPasswordWithContext:
promptForPrincipalWithContext:
setPromptForSmartCard:
promptForSmartcardWithContext:
showAuthControllerForContext:completion:
viewControllerIsShowing
prefillWithCredentialsFromContextIfPossible:
prefillWithCredentialsFromKeychainIfPossible
_updateLoginButtonState
loginClicked:
signInTitleLabel
setSignInTitleLabel:
setLoginButton:
customHelpTitleLabel
setCustomHelpTitleLabel:
promptForSmartCard
_prefilledUsername
_prefilledPassword
_pendingAlert
_viewControllerIsShowing
_promptForSmartCard
_signInTitleLabel
_loginButton
_customHelpTitleLabel
viewDidLoad
change password clicked
starting password change
not starting password change
******************* handleKerberosOperation: %@, message: %@
begin changeADPassword
Error changing password: %{public}@
end changeADPassword
cancelled via accessibility gesture
Submitted password change request via accessibility gesture
******************* beginAuthorizationWithRequest: %@, realm: %@, operation: %@
cancelAuthorizationWithRequest: %{public}@
request count: %lu
canceling context: %@
handleKerberosOperations: %{public}@
creating new kerberosAuthentication for realm: %{public}@
Result error: %{public}@
showing login view controller: %{public}@
handleSaveAttributes: %{public}@, %{private}@
******************* end handleSaveAttributes
handleGetSiteCode: %{public}@
requesting a new sitecode
timeout waiting for sitecode, proceeding
******************* end handleGetSiteCode
handleRemoveRealm: %{public}@
******************* end handleRemoveRealm
handleGetDefaultRealm: %{public}@
error deserializing extension data: %{private}@
******************* end handleGetDefaultRealm
handleGetRealmForHost: %@
******************* end handleGetRealmForHost
handleLogout: %@, removeRealm: %@
Removing Realm: %{public}@
error when deleting plugin settings: %@
******************* end handleLogout
destroyCredentialsWithContext
destroy credential with UUID: %@
destroy credential with upn: %@
handleResetKeychainChoice: %{public}@
******************* end handleResetKeychainChoice
handleProceedUserSetup: %{public}@
handleNetworkAvailabiltyChange: %{public}@
handleGetRealmInfo: %{public}@
completing request with data: %{private}@
******************* end handleGetRealmInfo
checking bundle id: %@ is in ACL: %@
checking bundle id check passed
createContextForRequest: %{public}@
retrieving principalname from certificate
using principalname %@
certificate not found
attemptKerberos
Received token, completing
Received cred UUID, completing
Received error: %@
Unsupported Encryption: %@
Result unhandled: %lu
completing request with token: %{private}@
Password change error code: %@
Password change error: %{public}@
beginAuthorizationWithRequest: %{public}@, realm: %{public}@, operation: %{public}@
handleChangePasswordWithRequest: %{public}@
******************* end handleChangePasswordWithRequest
password required
principal name required
smart card required but not inserted
Requesting credentials from the keychain
keychainErr returned %d
cancel clicked
login clicked
User consent granted: %d
Resetting UI
cancelCurrentOperation
handleKerberosOperations: %@
smart card not inserted
showAuthControllerForContext
LoginViewController is already showing
Error presenting LoginViewController: %{public}@
prefilled credentials
Submitted login request via accessibility gesture
KerberosPasswordViewController
UITextFieldDelegate
NSObject
KerberosViewControllerData
SOKerberosExtensionProcess
KerberosBaseViewController
ASAuthorizationProviderExtensionAuthorizationRequestHandler
SOKerberosExtensionKerberosDelegate
KerberosViewController
KerberosLoginViewController
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@16
v32@0:8@16q24
B48@0:8@16{_NSRange=QQ}24@40
B24@0:8@"UITextField"16
v24@0:8@"UITextField"16
v32@0:8@"UITextField"16q24
B48@0:8@"UITextField"16{_NSRange=QQ}24@"NSString"40
v32@0:8@16@24
v16@0:8
v32@0:8@"SOKerberosContext"16@"NSString"24
@"SOKerberosExtensionProcess"16@0:8
v24@0:8@"SOKerberosExtensionProcess"16
@32@0:8@16@24
@24@0:8@16
v20@0:8B16
v32@0:8@16@?24
@"UIActivityIndicatorView"
@"SOKerberosExtensionProcess"
@"UIView"
@"UIScrollView"
@"UILabel"
@"UITextField"
@"UINavigationBar"
@"NSLayoutConstraint"
@"UINavigationItem"
@"UIBarButtonItem"
@"SOKerberosContext"
v28@0:8@16B24
@44@0:8@16@24B32@36
@"SORealmSettingManager"
@"NSMutableDictionary"
@"NSMapTable"
v24@0:8@"ASAuthorizationProviderExtensionAuthorizationRequest"16
v32@0:8Q16@24
v32@0:8Q16@"SOKerberosContext"24
@"UIViewController<KerberosViewControllerData>"
@"NSOperationQueue"
v24@0:8@?16
@"NSString"
softlink:r:path:/System/Library/Frameworks/AuthenticationServices.framework/AuthenticationServices
softlink:r:path:/System/Library/Frameworks/AuthenticationServices.framework/AuthenticationServices
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.developer.auto-elect-plugin</key>
<true/>
<key>com.apple.private.LocalAuthentication.CallerName</key>
<true/>
<key>com.apple.private.accounts.bundleidspoofing</key>
<true/>
<key>com.apple.private.gssapi.allowwildcardacl</key>
<true/>
<key>com.apple.private.network.socket-delegate</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>com.apple.identities</string>
</array>
</dict>
</plist>
