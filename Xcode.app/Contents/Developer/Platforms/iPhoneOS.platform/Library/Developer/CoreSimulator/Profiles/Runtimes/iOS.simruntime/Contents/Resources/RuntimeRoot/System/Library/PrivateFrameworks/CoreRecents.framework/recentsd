TB,N,V_hadError
T#,R
_accountAdaptor
T@"<CRSQLiteConnectionPoolDelegate>",V_delegate
_connectionPool
T@"CRPhoneSearch",&,N,V_lastPhoneSearch
_kindPredicates
T@"CRSQLiteConnection",R,N,V_connection
_makeObservableForAccountStore:
T@"NSMutableArray",&,N,V_kindPredicates
_powerAssertion
T@"NSMutableDictionary",&,N,V_cloudStores
_remoteLibraryWithErrorHandler:
T@"NSString",R,C
_storeSyncDelay
T@"NSXPCConnection",R,N,V_connection
_writersWaiting
TB,N,V_wantsGroups
addressHandlers
TB,R,N,GisLocked
bundleForClass:
TQ,R
containsObject:
T^{sqlite3=},R,N,V_db
copyCountryCode
URLForResource:withExtension:
cr_map:
XPCInterface
currentCalendar
_CRSearchContext
dealloc
_accountStore
domains
_addAddressHandler:
hashForContact:
_adjustLibraryStoreSyncBehaviorWithLockedState:
initWithFormat:
_analyzeMailAccounts
initWithObject:
_appleAccountListener
isAtEnd
_bindContact:withRecentID:forStatement:
isProxy
_cache
keyPath
_cacheLock
library
_cachedProperties
lowercaseString
_checkoutMap
members
_clients
numberWithBool:
_cloudStoreStates
refresh
_cn_skip:
removeObserver:
_components
_connectionForWriting:
setBool:forKey:
_copyInterpretationsForPhoneNumber:
setDay:
_copyRecentContactForRecordHash:recentsDomain:
setRecentDates:
_databasePropertyValueByKey:
stringByAppendingPathComponent:
.cxx_destruct
TB,N,V_isWriter
T@"<CRAccountAdaptorDelegate>",N,V_delegate
_client
T@"CRAddressHandlerIdentity",&,N,V_identity
T@"CRSQLiteConnection",&,N,V_connection
_locale
T@"CRUbiquitousCoordinator",&,N,V_ubiquitousCoordinator
_performTransaction:forWriting:
T@"NSMutableArray",&,N,V_predicates
_readersWaiting
T@"NSSet",C,N,V_supportedAddressKinds
_statementCache
T@"NSString",R,N
_writer
T@"_CRRecentsLibrary",R,N,V_library
address
TB,N,V_writer
allKeys
bundleWithPath:
TQ,R,N,V_generation
containsString:
Td,N,V_storeSyncDelay
cr_isInvalidComparisonPredicate
UTF8String
cr_mergeSubcontext:intoContext:
_CRPhoneSearchContext
dataWithLength:
_ICUSearchContext
defaultProvider
_activeConnectionWrapper
hasEntitlement:
_addressHandlersByKind
initWithClient:
_allDomains
initWithLocale:
_analyzer
initWithSearchString:andLocale:
_asciiComponents
isGroup
_bindRecent:forStatement:
isTimeoutError:
_cacheGeneration
lastPhoneSearch
_cacheSize
_checkoutLock
mailAccountListenerWithHandler:
_className
newConnectionForConnectionPool:
_cloudStoreStateForDomain:
options
_cloudStores
release
_cn_take:
rightExpression
_connection
_context
setCloudStores:
_copyRecentContactForID:
setDisplayName:
_countryCode
setWantsGroups:
_delegate
_delegateAccountChanges
_deleteRecentWithRecordHash:kind:recentsDomain:
_deleteRecentsWithRecentIDs:storeKeys:recentsDomain:deleteInUbiquitousStore:
_executeAfterFirstUnlock:
_generation
_hadError
_handleBusyError
_handleCorruptDatabase
_handleFullDatabase
_handleIOError
_handleSQLiteErrorCode:
_handler
_iCloudAccountPersonID
_iCloudAccountWasLoggedIn
_identity
_initWithStoreIdentifier:usingEndToEndEncryption:
_initializeStoreForRecentsDomain:storeIdentifier:
_insertRecentContacts:
_isWriter
_lastPhoneSearch
_lastSearchString
_lastSearchStringLength
_library
_libraryAvailable
_listener
_loadPluginBundle:
_loadPlugins
_lock
_lockNotifyToken
_lockState
_lockStateChanged:
_log
_mailAccountListener
_makeObservableForMailAccount
_maxConcurrentReaders
_maxConcurrentWriters
_mergeRemoteChanges:fromStore:forRecentsDomain:
_migrator
_needsRebuild
_nts_expungeGroupRecentsOverLimit:domain:storeKeys:connection:
_nts_expungeIndividualRecentsOverLimit:domain:storeKeys:connection:
_nts_expungeRecentsOlderThanDate:domain:storeKeys:connection:
_options
_path
_pendingDomainExpunges
_pendingStoreSyncEvents
_pluginManager
_predicateCollectionsMap
_predicates
_primaryiCloudAccountPersonID
_propertyValueForKey:defaultValue:
_queue
_readerSemaphore
_recentsDomainForStore:
_refcount
_removeLocalRecordsForAllDomains
_removeLocalRecordsForCloudStoresWithDataFromPreviousAccount
_requests
_resetCachedAccountInfo
_runWithAnalyzerLock:
_saveRecentContacts:
_searchString
_setActiveConnection:forWriting:
_setCloudStoreState:forDomain:
_setCloudStoreStateForAllDomains:
_setDatabasePropertyValue:forKey:
_setPropertyValue:forKey:
_startupQueue
_storeChangedExternally:
_storeForRecentsDomain:
_supportedAddressKinds
_syncContact:withStore:
_synchronizeAllStores
_synchronizeStore:
_transaction
_transactionCount
_transactionType
_ubiquitousCoordinator
_updateLockStateWithToken:
_updateRecentContacts:
_userDefaults
_vfsModuleName
_wantsGroups
_weakRef
_whereClauseFromPredicate:inDomains:bindings:error:
_wholeSearchStringData
_writerSemaphore
aa_personID
aa_primaryAppleAccount
accountAdaptor:observediCloudAccountTransition:
accountProperties
accountValuesForKeys:completionBlock:
addAddress:isRestricted:
addFailureBlock:
addIndex:
addObject:
addObjectsFromArray:
addObserver:selector:name:object:
addPredicate:forFieldName:
addressFromExternalAddress:kind:
addressHandlerForAddressKind:
addressHandlerWithPrincipalClass:
allAddresses
allObjects
allValues
anyObject
appendFormat:
appendString:
appleAccountListenerForStore:withHandler:
applyWeight:
array
arrayByAddingObject:
arrayByAddingObjectsFromArray:
arrayByApplyingSelector:
arrayWithCapacity:
arrayWithObject:
arrayWithObjects:
arrayWithObjects:count:
auditToken
auditToken:
autorelease
beginTransaction
beginTransaction:withType:
beginTransactionWithType:
bindingForDomain:
boolForKey:
boolValue
bundleIdentifier
bundleIdentifierForAuditToken:
bytes
cacheSize
cancel
cancelPerformExpungeRecentsOverLimitsForDomain:
cancelWorkForKey:
caseInsensitiveCompare:
checkInConnection:
class
clauseWithBindings:
clientForConnection:
clientMayConnect:
close
closeDatabaseConnections
cloudStores
code
collection
commitTransaction
commitTransaction:
compare:
comparisonPredicateModifier
completionHandlerAdapter
componentsJoinedByString:
componentsSeparatedByCharactersInSet:
componentsSeparatedByString:
compoundPredicateType
conformsToProtocol:
connection
connectionToNewInMemoryStore
constantValue
contactID
contentsOfDirectoryAtPath:error:
coordinateChangesInUbiquitousStoreForDomain:
copy
copyContactRecentsFromStatement:selectIndexes:groupThreshold:options:
copyNormalizedPhoneNumber:countryCode:
copyRecentContactFromStatement:columnIndexes:populateMetadata:
copyRecentsForQuery:error:
copySearcherForPattern:
count
countByEnumeratingWithState:objects:count:
countOfRecents
cr_CRContactGroupKindValue
cr_CRContactIDValue
cr_CRRecentIDValue
cr_addNonNilObject:
cr_addToClause:usingOperator:bindings:
cr_expressionValue
cr_insertObject:usingComparator:
cr_insertionSortedArrayUsingComparator:
cr_isInvalidOperatorType:forKeyPath:
cr_md5DigestHexString
cr_predicateClauseWithBindings:error:
cr_processWithContext:
cr_simplifiedPredicate
cr_simplifiedPredicateSingleStep
cr_sqlBindings
cr_sqlNameForFieldName:
cr_uniqueFilenameWithRespectToFilenames:
currentHandler
currentLocale
currentThread
customSelector
daemonLibraryForClient:
dataUsingEncoding:
dataWithData:
dataWithPropertyList:format:options:error:
date
dateByAddingComponents:toDate:options:
dateWithTimeIntervalSince1970:
debugDescription
decrementRefcount
defaultCenter
defaultManager
defaultPath
defaultPluginPath
defaultStore
delegate
description
dictionary
dictionaryForKey:
dictionaryRepresentation
dictionaryWithCapacity:
dictionaryWithDictionary:
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:count:
dictionaryWithObjectsAndKeys:
displayName
distantPast
doesNotRecognizeSelector:
domain
domainClauseWithDomains:bindings:
doubleValue
emailAddressesForAccount:
enumerateEmailAddresses:
enumerateKeysAndObjectsUsingBlock:
enumerateRecentsForDomain:usingBlock:
enumerateRowsInStatement:usingBlock:
errorWithDomain:code:userInfo:
executeSQL:database:
expressionForConstantValue:
expressionForKeyPath:
expressionType
expungeRecentsOverLimitsForDomain:forcibly:expungedRecentIDs:
externalAddressFromAddress:kind:
fileExistsAtPath:
fileSystemRepresentation
filteredArrayUsingPredicate:
firstObject
flush
future
generation
groupKind
groupName
hadError
handleFailureInFunction:file:lineNumber:description:
handleFailureInMethod:object:file:lineNumber:description:
handleSqliteError:format:
hasPrefix:
hash
hashForGroup:
hashForGroupMemberHashes:
hashForGroupMembers:recentsDomain:
hashesForGroupMembers:recentsDomain:
identity
identityForAddressHandler:
implicitGroupThreshold
incrementRefcount
indexOfObject:inSortedRange:options:usingComparator:
indexSet
init
initForAddressHandler:
initWithAccountStore:
initWithAddress:displayName:kind:recentDate:recentsDomain:
initWithAddressHandler:
initWithArray:
initWithBytesNoCopy:length:encoding:freeWhenDone:
initWithBytesNoCopy:length:freeWhenDone:
initWithCapacity:
initWithConnection:forWriting:
initWithConnection:generation:
initWithConnection:library:
initWithContactID:
initWithDelegate:
initWithDelegate:maxConcurrentReaders:
initWithDescription:
initWithIdentifier:timeout:
initWithMachServiceName:
initWithMembers:displayName:recentDate:recentsDomain:
initWithObjects:
initWithPath:
initWithPath:accountAdaptor:
initWithPath:databaseName:
initWithPrincipalClass:
initWithSearchString:
initWithSearchString:andLocale:andOptions:
initWithSearchString:options:
initWithType:subpredicates:
initWithUserDefaults:accountStore:delegate:
insertObject:atIndex:
intValue
integerValue
intersectSet:
invalidate
isAddressRestricted:
isEqual:
isEqualToNumber:
isEqualToPhoneNumber:
isEqualToString:
isKindOfClass:
isLocked
isMemberOfClass:
isOpen
isSyncingDisabledForAccountWithAddress:
isUsingiCloud
isWriter
keyForContact:
kind
kindClauseWithBindings:
kindPredicates
lastObject
lastPathComponent
lastSendingAddress
leftExpression
length
listener:shouldAcceptNewConnection:
loadAndReturnError:
lock
locked
longLongValue
mailAccounts
mainRunLoop
makeObjectsPerformSelector:withObject:
matches:
matches:matchType:
matchesASCIIString:matchType:
matchesUTF8String:
matchesUTF8String:matchType:
maxConcurrentReaders
maxConcurrentWriters
maximumGroupRecentsForDomain:
maximumRecentsAgeInDaysForDomain:
maximumRecentsForDomain:
mergeCloudDataOneWayIntoLocalStoreWithReason:
metadata
migrateLibraryFilesFrom:to:
migrateMailEmbeddedLibraryToPath:
migrateWithSQLiteConnection:
migrateWithSQLiteConnection:toVersion:
mostRecentDate
moveItemAtPath:toPath:error:
mutableBytes
mutableCopy
needsRebuild
nextObject
normalizeAddress:
notPredicateWithSubpredicate:
noteNeedsRebuild
notificationWithName:object:userInfo:
null
numberWithDoubleAtIndex:
numberWithIntegerAtIndex:
numberWithLongLong:
numberWithUnsignedInteger:
objCType
object
objectAtIndex:
objectAtIndex:statement:
objectAtIndexedSubscript:
objectEnumerator
objectForKey:
objectForKey:onCacheMiss:
objectForKeyedSubscript:
observableOnDefaultNotificationCenterWithName:object:
observableWithBlock:
observerDidReceiveResult:
observerWithResultBlock:
open
originalSource
os_log
pageRange
pathExtension
performExpungeRecentsOverLimitsForDomain:afterDelay:
performReadTransaction:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performWriteTransaction:
phoneSearch:
populateMetadataForRecents:
postNotification:
postNotificationName:object:userInfo:
predicate
predicateOperatorType
predicateWithBlock:
predicateWithLeftExpression:rightExpression:modifier:type:options:
predicates
prefixSearch:
preparedStatementForPattern:
principalClass
rawAddressFromFullAddress:
readerConnection
readersWaiting
receivedEmailAddressesFromAccount:
recentDates
recentID
recentsDomain
recentsHashForAddress:kind:
recentsHashForExternalAddress:kind:
recordContactEvents:domain:sendingAddress:source:completion:
recordContactEvents:recentsDomain:sendingAddress:source:
recordRecentEventForDate:userInitiated:
removeAllObjects
removeAllRecentContactsWithCompletion:
removeContact:
removeLocalRecordsForDomain:removeInUbiquitousStore:
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removeObjectsAtIndexes:
removeRecentContactsWithRecentIDs:syncKeys:domain:
removeRecentContactsWithRecentIDs:syncKeys:domain:removeInUbiquitousStore:
renameOrRemoveDatabase
respondsToSelector:
resultWithTimeout:error:
resume
retain
retainCount
reverseObjectEnumerator
rollbackTransaction
rollbackTransaction:
rowWithStatement:
scanLongLong:
scanString:intoString:
scannerWithString:
scheduleSynchronizationForStore:
scheduleWorkForKey:afterDelay:work:
searchRecentsUsingQuery:completion:
self
senderEmailAddresses
setAddress:
setCacheSize:
setConnection:
setDelegate:
setDictionary:forKey:
setDomains:
setExportedInterface:
setExportedObject:
setGroupKind:
setGroupName:
setHadError:
setIdentity:
setImplicitGroupThreshold:
setInterruptionHandler:
setInvalidationHandler:
setIsWriter:
setKind:
setKindPredicates:
setLastPhoneSearch:
setLastSendingAddress:
setMaximumGroupRecents:forRecentsDomain:
setMaximumRecents:forRecentsDomain:
setMaximumRecentsAgeInDays:forRecentsDomain:
setMembers:
setMetadata:
setObject:forKey:
setObject:forKeyedSubscript:
setOriginalSource:
setPredicates:
setRawAddress:
setRecentID:
setRecentsDomain:
setStoreSyncDelay:
setSupportedAddressKinds:
setUbiquitousCoordinator:
setVersion:ofDatabase:
setWeight:
setWithArray:
setWithCapacity:
setWithSet:
setWriter:
sharedMonitor
sortedArrayUsingFunction:context:
standardUserDefaults
start
step:
stop
storeMapping
storeSyncDelay
string
stringAtIndex:
stringByAppendingString:
stringByDeletingLastPathComponent
stringByFoldingWithOptions:locale:
stringForKey:
stringForTimeInterval:
stringWithContentsOfURL:encoding:error:
stringWithFormat:
stringWithString:
stringWithUTF8String:
subarrayWithRange:
subpredicates
subscribe:
substringFromIndex:
superclass
supportedAddressKinds
syncKeyForAddress:kind:
synchronize
threadDictionary
timeIntervalSinceDate:
timeIntervalSinceNow
timeIntervalSinceReferenceDate
timestamp
tokenSearch:
tokenWithCancelationBlock:
transactionWithDescription:
ubiquitousCoordinator
ubiquitousStoreForDomainChangedAccount:
unlock
unlockConnection:
unsignedIntegerValue
upcomingEventIdentifierForRecentID:
userInfo
uuid
variable
versionOfDatabase:
wantsGroups
weakReferenceWithObject:
weight
whitespaceCharacterSet
wrapperWithConnection:forWriting:
writer
writerConnection
writersWaiting
zone
com.apple.corerecents.delayedWork.%p
com.apple.corerecents.delayedWork-%p-%@
v8@?0
defaultAddress
ReceiveEmailAliasAddresses
v16@?0@"NSError"8
failed to get account information after 10 seconds
Error loading Mail account information: %@
com.apple.contacts.corerecents.agent.startup
com.apple.corerecents.launch
com.apple.private.corerecents
com.apple.private.contactsui
-[_CRRecentsSQLiteConnectionWrapper decrementRefcount]
_CRRecentsLibrary.m
_refcount > 0
%@/Library/Recents
com.apple.mail.recents
com.apple.eventkit.locations
com.apple.passbook.locations
v32@?0@"NSString"8@"NSString"16^B24
Recents
com.apple.corerecents.recentsLibrary.connection
recents: beginning transaction
recents: committing transaction
recents: rolling back transaction
-[_CRRecentsLibrary unlockConnection:]
[wrapper connection] == connection
-[_CRRecentsLibrary _connectionForWriting:]
nil != connection
[wrapper writer]
WHERE %@
 AND 
bundle_identifier IN (%@)
v20@?0^{sqlite3_stmt=}8i16
%@ %@
B16@?0@"CRSQLiteConnection"8
SELECT recent_id, key, value FROM metadata WHERE recent_id IN (?
) ORDER BY recent_id
v16@?0@"CRSQLRow"8
SELECT value FROM metadata WHERE recent_id = ? AND key = ?
v32@?0@"NSNumber"8@"NSMutableArray"16^B24
address
kind
 WHERE recents.record_hash = :record_hash AND recents.bundle_identifier = :bundle_identifier
:record_hash
:bundle_identifier
 WHERE recents.ROWID = :rowid
:rowid
 WHERE recents.bundle_identifier = :bundle_identifier
SELECT value FROM properties WHERE key = :key
:key
INSERT OR REPLACE INTO properties (key, value) VALUES (:key, :value)
:value
-[_CRRecentsLibrary setMaximumRecents:forRecentsDomain:]
maxRecents > 0
-[_CRRecentsLibrary setMaximumGroupRecents:forRecentsDomain:]
        SELECT recents.ROWID, recents.record_hash, recents.count 
        FROM recents 
        WHERE recents.bundle_identifier = :bundle_identifier 
        AND recents.last_date < :expunge_date     
:expunge_date
        SELECT recents.ROWID, recents.record_hash 
        FROM recents 
        WHERE recents.bundle_identifier = :bundle_identifier 
            AND recents.count = 1 
        ORDER BY recents.last_date DESC 
        LIMIT -1 
        OFFSET :offset     
:offset
        SELECT recents.ROWID, recents.record_hash 
        FROM recents 
        WHERE recents.bundle_identifier = :bundle_identifier 
            AND recents.count != 1 
        ORDER BY recents.last_date DESC 
        LIMIT -1 
        OFFSET :offset     
                    SELECT recents.record_hash, recents.count 
                    FROM recents 
                    WHERE recents.bundle_identifier = :bundle_identifier                 
-[_CRRecentsLibrary _bindRecent:forStatement:]
[recent countOfRecents] > 0 && "can't save recent contact without event dates"
:display_name
:original_source
:last_date
:weight
:group_kind
%@%lld
:dates
:sending_address
:recent_id
:kind
:address
INSERT INTO recents (display_name, bundle_identifier, original_source, dates, last_date, sending_address, count, weight, record_hash, group_kind)             VALUES (:display_name, :bundle_identifier, :original_source, :dates, :last_date, :sending_address, :count, :weight, :record_hash, :group_kind)
INSERT INTO contacts (recent_id, display_name, kind, address)             VALUES (:recent_id, :display_name, :kind, :address)
INSERT INTO metadata (recent_id, key, value) VALUES (:recent_id, :key, :value)
:count
v32@?0@8@16^B24
            UPDATE contacts             SET display_name = :display_name             WHERE ROWID = :recent_id         
            UPDATE recents             SET                 weight = COALESCE(MAX(weight, :weight), weight, :weight),                 display_name    = :display_name,                 dates           = :dates,                 last_date       = :last_date,                 sending_address = :sending_address,                 group_kind      = :group_kind             WHERE ROWID = :recent_id         
INSERT OR REPLACE INTO metadata (recent_id, key, value) VALUES (:recent_id, :key, :value)
-[_CRRecentsLibrary _deleteRecentWithRecordHash:kind:recentsDomain:]
recentsDomain
DELETE FROM recents WHERE recents.record_hash = :record_hash AND recents.bundle_identifier = :bundle_identifier
-[_CRRecentsLibrary _deleteRecentsWithRecentIDs:storeKeys:recentsDomain:deleteInUbiquitousStore:]
recentsDomain != nil
            DELETE FROM recents 
            WHERE recents.ROWID IN (%@) 
            AND recents.bundle_identifier = :bundle_identifier         
@"CRRecentContact"16@?0@"NSString"8
options
members
timestamp
displayName
metadata
weight
v24@?0@"CRRecentContact"8@"NSString"16
@"NSString"16@?0@"CRRecentContact"8
com.apple.corerecents.externalStoreChange
-[_CRRecentsLibrary _storeChangedExternally:]
MAX_RECENTS
v32@?0@"NSString"8@16^B24
v24@?0@"CRRecentContact"8^B16
q24@?0@"NSString"8@"NSString"16
v32@?0@"NSString"8@"NSDictionary"16^B24
succeeded
failed
v32@?0@8@"NSUbiquitousKeyValueStore"16^B24
@16@?0@"CRRecentContact"8
SELECT recents.ROWID,
       recents.bundle_identifier,
       recents.dates,
       recents.display_name,
       recents.sending_address,
       recents.original_source,
       recents.weight,
       recents.group_kind,
       contacts.ROWID,
       contacts.kind,
       contacts.display_name,
       contacts.address
  FROM recents
  JOIN contacts ON contacts.recent_id = recents.ROWID
_maxRecentPropertyKeyForRecentsDomain
max-recent:
_maxGroupRecentPropertyKeyForRecentsDomain
max-group-recent:
_maxRecentAgePropertyKeyForRecentsDomain
max-recent-age:
void _bindData(sqlite3_stmt *, const char *, NSData *)
data length is more than INT_MAX
NSUbiquitousKeyValueStoreServerChange
NSUbiquitousKeyValueStoreInitialSyncChange
NSUbiquitousKeyValueStoreQuotaViolationChange
NSUbiquitousKeyValueStoreAccountChange
com.apple.corerecents.newDatabase
com.apple.corerecents.iCloudSignIn
com.apple.corerecents.iCloudSwitch
unknown change reason (%lu)
B24@?0@8@"NSDictionary"16
-[CRProcessTransaction init]
CRProcessTransaction.m
<%@:%p> %s
getting library version
Error: migration is not supported for version %d
VACUUM
%@/Library/Mail
/tmp/
New path looks like a temporary directory, skipping migration: %@
Recents-shm
Recents-wal
Failed to migrate %@ to %@. Error: %@
Error %d %@: %s
SELECT value FROM properties WHERE key = 'version'
INSERT OR REPLACE INTO properties (key, value) values ('version', ?)
setting library version
preparing library version insert statement
recents
Error loading SQL: %@
executing SQL from file: %@
_ExecuteSQL
CRRecentsMigrator.m
nil != sql
executing SQL statements
ALTER TABLE recents ADD COLUMN address_hash TEXT;
adding address_hash to recents table
DROP INDEX IF EXISTS recents_last_name; DROP INDEX IF EXISTS recents_first_name; ALTER TABLE recents ADD COLUMN display_name TEXT;
dropping indexes, adding display name columns
UPDATE recents SET display_name = NULLIF(IFNULL(first_name, '') || ' ' || IFNULL(last_name, ''), ' '), last_name = NULL, middle_name = NULL, first_name = NULL, suffix = NULL;
updating recents with display names
ALTER TABLE recents ADD COLUMN sending_address TEXT;
adding sending address column
DROP TABLE IF EXISTS new_recents;
CREATE TABLE new_recents (ROWID INTEGER PRIMARY KEY AUTOINCREMENT,
display_name TEXT,
bundle_identifier TEXT,
property INTEGER,
address TEXT,
address_hash TEXT,
sending_address TEXT,
dates TEXT NOT NULL,
last_date INTEGER,
UNIQUE (bundle_identifier, address_hash)
);INSERT INTO new_recents (bundle_identifier, display_name, property, address, address_hash, sending_address, dates, last_date)SELECT 'com.apple.mobilemail', display_name, property, address, address_hash, sending_address, dates, last_date FROM recents;DROP TABLE recents; ALTER TABLE new_recents RENAME TO recents;
migrating data to recents table with new contraints
CREATE INDEX recents_address_hash ON recents(bundle_identifier, address_hash, property);CREATE INDEX recents_expunge ON recents(bundle_identifier, last_date DESC);
adding new index
_migration_hash
registering hash function
DROP TABLE IF EXISTS new_recents;
CREATE TABLE new_recents (ROWID INTEGER PRIMARY KEY AUTOINCREMENT,
display_name TEXT,
bundle_identifier TEXT,
kind TEXT,
address TEXT,
address_hash TEXT NOT NULL,
sending_address TEXT,
dates TEXT NOT NULL,
last_date INTEGER,
UNIQUE (bundle_identifier, address_hash)
creating new_recents table with new constraints
DROP TABLE IF EXISTS recents; ALTER TABLE new_recents RENAME TO recents;CREATE INDEX recents_address_hash ON recents(bundle_identifier, address_hash, kind);CREATE INDEX recents_expunge ON recents(bundle_identifier, last_date DESC);
dropping old recents table, rename new_recents to recents, adding new indexes
unregistering hash function
__recentsHashFunction
SELECT bundle_identifier, display_name, CASE WHEN property = 4 THEN 'email' WHEN property = 3 THEN 'phone' END, address, _migration_hash(CASE WHEN property = 4 THEN 'email' WHEN property = 3 THEN 'phone' END, address), sending_address, dates, last_date FROM recents;
%s-%s
bundle_identifier
address_hash
dates
last_date
display_name
sending_address
INSERT INTO new_recents (bundle_identifier, display_name, kind, address, address_hash, sending_address, dates, last_date)VALUES (?, ?, ?, ?, ?, ?, ?, ?);
transferring recents to new_recents
DROP TABLE IF EXISTS new_recents;
DROP TABLE IF EXISTS contacts;
        CREATE TABLE new_recents (            ROWID INTEGER PRIMARY KEY AUTOINCREMENT,             display_name TEXT,             bundle_identifier TEXT,             sending_address TEXT,                         dates TEXT NOT NULL,             last_date INTEGER,                         count INTEGER         );                INSERT INTO new_recents (ROWID, display_name, bundle_identifier, sending_address, dates, last_date, count)         SELECT ROWID, display_name, bundle_identifier, sending_address, dates, last_date, 1 FROM recents;   CREATE TABLE contacts (             ROWID INTEGER PRIMARY KEY AUTOINCREMENT,                         recent_id INTEGER,                         display_name TEXT,             kind TEXT,             address TEXT,             address_hash TEXT NOT NULL,                         FOREIGN KEY (recent_id) REFERENCES new_recents (ROWID) ON DELETE CASCADE         );                 INSERT INTO contacts (recent_id, display_name, kind, address, address_hash)         SELECT ROWID, display_name, kind, address, address_hash FROM recents;                 DROP TABLE recents; ALTER TABLE new_recents RENAME TO recents;                 DROP INDEX IF EXISTS recents_address_hash;         DROP INDEX IF EXISTS recents_expunge;     
creating separate contacts and recents tables
            CREATE INDEX contacts_recentsidx ON contacts(recent_id);             CREATE INDEX contacts_address_hash ON contacts(address_hash, kind);             CREATE INDEX contacts_search ON contacts(display_name, address);                    CREATE INDEX recents_expunge ON recents(bundle_identifier, last_date DESC);         
adding new index for contacts table
DROP TABLE IF EXISTS metadata;
CREATE TABLE metadata (
    ROWID INTEGER PRIMARY KEY AUTOINCREMENT,
    recent_id INTEGER,
    key TEXT,
    value,
    FOREIGN KEY (recent_id) REFERENCES recents (ROWID) ON DELETE CASCADE,
    UNIQUE (recent_id, key)
DROP INDEX IF EXISTS contacts_search;
DROP INDEX IF EXISTS contacts_address;
DROP INDEX IF EXISTS metadata_recents;
CREATE INDEX metadata_recents ON metadata(recent_id);
CREATE INDEX contacts_address ON contacts(kind, display_name, address);
creating metadata tables and indexes
ALTER TABLE recents ADD COLUMN original_source TEXT;
adding original_source column
ALTER TABLE recents ADD COLUMN weight FLOAT;
adding weight column
0. Disable foreign key constraints.
PRAGMA foreign_keys = OFF;
1. Add record_hash column to recents
DROP TABLE IF EXISTS new_recents; 
CREATE TABLE new_recents ( 
   ROWID INTEGER PRIMARY KEY AUTOINCREMENT, 
   display_name TEXT, 
   bundle_identifier TEXT, 
   sending_address TEXT, 
   original_source TEXT, 
   dates TEXT NOT NULL, 
   last_date INTEGER, 
   weight FLOAT, 
   record_hash TEXT NOT NULL, 
   count INTEGER 
);INSERT INTO new_recents (ROWID, display_name, bundle_identifier, sending_address, 
                         original_source, dates, last_date, weight, count, record_hash) SELECT recents.ROWID, 
       recents.display_name, 
       recents.bundle_identifier, 
        recents.sending_address, 
        recents.original_source, 
        recents.dates, 
        recents.last_date, 
        recents.weight, 
        recents.count, 
        contacts.address_hash 
 FROM recents 
 INNER JOIN contacts 
         ON contacts.recent_id = recents.ROWID 
GROUP BY recents.ROWID;
2. Generate new hashes for each group
SELECT recents.ROWID, contacts.address_hash, contacts.kind FROM recents INNER JOIN contacts ON contacts.recent_id = recents.ROWID WHERE recents.count > 1
q24@?0@8@16
UPDATE new_recents SET record_hash = '%@' WHERE ROWID = %ld
3. Remove contacts' address_hash column
DROP TABLE IF EXISTS new_contacts; 
CREATE TABLE new_contacts ( 
    ROWID INTEGER PRIMARY KEY AUTOINCREMENT, 
    recent_id INTEGER, 
    display_name TEXT, 
    kind TEXT, 
     address TEXT, 
    FOREIGN KEY (recent_id) REFERENCES new_recents (ROWID) ON DELETE CASCADE 
);INSERT INTO new_contacts (ROWID, recent_id, display_name, kind, address) SELECT ROWID, recent_id, display_name, kind, address FROM contacts; 
DROP TABLE contacts; ALTER TABLE new_contacts RENAME TO contacts; 
DROP TABLE recents; ALTER TABLE new_recents RENAME TO recents; 
DROP INDEX IF EXISTS contacts_address_hash; 
DROP INDEX IF EXISTS recents_record_hash; 
DROP INDEX IF EXISTS recents_expunge; 
CREATE INDEX recents_record_hash ON recents(record_hash); 
CREATE INDEX recents_expunge ON recents(bundle_identifier, last_date DESC); 
4. Re-enable foreign key constraints.
PRAGMA foreign_keys = ON;
DROP INDEX IF EXISTS contacts_recentsidx;
DROP INDEX IF EXISTS contacts_address;
CREATE INDEX contacts_recentsidx ON contacts(recent_id);
CREATE INDEX contacts_address ON contacts(kind, display_name, address);
creating contacts indexes
ALTER TABLE recents ADD COLUMN group_kind INTEGER;
adding group kind column
DELETE FROM recents WHERE bundle_identifier='com.apple.eventkit.ios'
deleting pre-existing com.apple.eventkit.ios records
UPDATE recents SET bundle_identifier='com.apple.eventkit.ios' WHERE bundle_identifier='com.apple.reminders';
renaming iOS reminders domain
DELETE FROM contacts WHERE rowid IN (SELECT c.rowid FROM contacts c LEFT JOIN recents r ON (c.recent_id = r.rowid) WHERE r.rowid IS NULL)
deleting dangling contacts
DELETE FROM metadata WHERE rowid IN (SELECT m.rowid FROM metadata m LEFT JOIN recents r ON (m.recent_id = r.rowid) WHERE r.rowid IS NULL)
deleting dangling metadata
DELETE FROM recents WHERE bundle_identifier IN ('com.apple.MobileSMS', 'com.apple.messages')
deleting messages recents
com.apple.corerecents
daemon
:memory:
-[CRSQLiteConnection initWithPath:]
CRSQLiteConnection.m
NULL != path
com.apple.contacts.recentsd
statement-cache
-[CRSQLiteConnection initWithPath:databaseName:]
NULL != databaseName
-[CRSQLiteConnection dealloc]
NULL == _db
-[CRSQLiteConnection open]
enabling extended error codes
icusearch
creating custom icusearch function
cpsearch
creating custom cpsearch function
phonesearch
creating custom phonesearch function
setting busy timeout
PRAGMA page_size = 4096;
setting page_size
PRAGMA auto_vacuum = 1;
setting auto_vacuum
PRAGMA cache_size = 100;
setting cache_size
PRAGMA journal_mode = WAL;
setting journal_mode
setting foreign_keys
opening database %s
-[CRSQLiteConnection preparedStatementForPattern:]
NULL != _db
preparing statement for query "%@"
-[CRSQLiteConnection beginTransactionWithType:]
BEGIN DEFERRED
BEGIN IMMEDIATE
BEGIN EXCLUSIVE
0 && "unsupported transaction type"
_transactionType == type
-[CRSQLiteConnection commitTransaction]
COMMIT
-[CRSQLiteConnection rollbackTransaction]
ROLLBACK
com.apple.message.library.vfsQueue
vfsQueue
_vfsQueue != NULL
CoreRecentsVFS
/System/Library/Recents/Plugins
addresshandler
no conforming principal class found in %@
unable to load plugin bundle %@: %@
ERROR: %@ attempting to register multiple sync transformers for kinds: {%@}
registered transformers:
%@ => %@
@"NSNumber"16@?0@"NSString"8
CRPowerMonitorDeviceWillLockNotification
CRPowerMonitorDeviceLockedStateKey
com.apple.corerecents.sblockqueue
v12@?0i8
.StateUnknown
.StateSignedIn
.StateSignedInWithLocalDataRemoved
.StateSignedOut
-[CRSQLiteConnectionPool initWithDelegate:maxConcurrentReaders:]
CRSQLiteConnectionPool.m
maxConcurrentReaders > 0
-[CRSQLiteConnectionPool checkInConnection:]
nil != connectionWrapper
-journal
-wal
-shm
unhandled expression type
expected only NSString, NSNumber and NSNull types, got %@
count
operator
predicate
-[NSCompoundPredicate(PredicateBindings) cr_simplifiedPredicateSingleStep]
NSPredicateBindings.m
1 == count
0 && "unknown compound predicate type"
 AND 
 OR 
tokenSearch:
prefixSearch:
phoneSearch:
%@%@ == ?
%@%@ != ?
%@%@ < ?
%@%@ <= ?
%@%@ >= ?
%@%@ > ?
%@%@ BETWEEN ? AND ?
%@%@ IN (?
%%@%@(%%@, ?, %d)
%%@%@(%%@, ?, %ld)
-[NSComparisonPredicate(PredicateBindings) cr_addToClause:usingOperator:bindings:]
0 && "should be impossible to get here if we verified everything correctly ahead of time"
groupName
sendingAddress
failed to find collections for field '%@'
unexpected kind of predicate present
%@recents.rowid IN (
      SELECT contacts.recent_id
        FROM contacts
        JOIN recents ON (recents.ROWID = contacts.recent_id)
       WHERE 
    recents.count = 1
contacts.address
contacts.display_name
recents.display_name
recents.sending_address
<%@:%p; %@ kinds={%@}>
.SignedOut
.SignedInWithPreviousAccount
.SignedInWithNewAccount
.SwitchedAccount
CRAccountAdaptor.m
Use designated initializer.
LastiCloudAccountPersonID
LastiCloudAccountWasLoggedIn
v20@?0@"NSString"8B16
-[CRAccountAdaptor _delegateAccountChanges]
v32@?0r*8Q16^B24
collation
search
AppleCollationOrder
AppleLanguages
v16@?0@8
@"<CNCancelable>"16@?0@"<CNObserver>"8
Failed to open ICUSQLite collator: %s
CRDelayedWorkQueue
CRMailAccountIterator
CRAgent
NSXPCListenerDelegate
NSObject
_CRRecentsSQLiteConnectionWrapper
_CRRecentsLibrary
CRSQLiteConnectionPoolDelegate
CRRecentsMigratorDelegate
CRUbiquitousCoordinatorDelegate
CRProcessTransaction
CRRecentsMigrator
CRDClient
CRDRecentContactsLibrary
CRDRecentContactsLibraryProtocol
CRSQLiteConnection
CRAddressHandler
CRPluginManager
CRMailAccountAnalyzer
CRPowerMonitor
CRPowerAssertion
CRUbiquitousCoordinator
CRAccountAdaptorDelegate
CRSQLiteConnectionPool
_CRSQLiteConnectionWrapper
_CRPhoneSearchCache
PredicateBindings
PredicateBindingsInternal
_ClauseGenerationContext
CRPhoneSearch
CRAddressHandlerIdentity
CRAccountAdaptor
CRSearchMatcher
CRWeakReference
CRAccountListener
@16@0:8
v16@0:8
v24@0:8@16
B40@0:8@16d24@?32
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSObject<OS_dispatch_queue>"
@"NSMutableDictionary"
@24@0:8@16
v24@0:8@?16
@"ACAccountStore"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v20@0:8B16
@"NSXPCListener"
@"_CRRecentsLibrary"
@"NSMutableSet"
@28@0:8@16B24
@"CRSQLiteConnection"
@"CRSQLiteConnection"24@0:8@"CRSQLiteConnectionPool"16
@32@0:8@16@24
@"NSString"32@0:8@"NSString"16@"NSString"24
v28@0:8@16B24
v24@0:8Q16
v28@0:8@"NSString"16B24
v20@0:8i16
i32@0:8^{sqlite3=}16@24
i28@0:8@16i24
i24@0:8@16
@20@0:8B16
v28@0:8@?16B24
@80@0:8^{sqlite3_stmt=}16{?={?=iiiiiiii}{?=iiiii}}24B76
@48@0:8@16@24^@32^@40
@?24@0:8@16
@32@0:8@16^@24
@24@0:8q16
@92@0:8^{sqlite3_stmt=}16{?={?=iiiiiiii}{?=iiiii}}24Q76Q84
v32@0:8@16@?24
v44@0:8@16@24@32B40
Q24@0:8@16
B32@0:8Q16@24
Q32@0:8@16Q24
v32@0:8Q16@24
v32@0:8@16d24
@48@0:8@16@24^@32@40
@48@0:8Q16@24^@32@40
B36@0:8@16B24^@28
v32@0:8@16^{sqlite3_stmt=}24
v40@0:8@16q24^{sqlite3_stmt=}32
v40@0:8@16@24@32
Q48@0:8@16@24@32@40
v32@0:8@16@24
B40@0:8@16@24@32
d16@0:8
v24@0:8d16
@"NSString"
@"CRPluginManager"
@"CRSQLiteConnectionPool"
@"CRRecentsMigrator"
@"<CRAccountAdaptor>"
@"NSLock"
^{__CFDictionary=}
@"CRDelayedWorkQueue"
@"CRUbiquitousCoordinator"
@"NSObject<OS_os_transaction>"
v28@0:8i16@20
B28@0:8@16i24
@"<CRRecentsMigratorDelegate>"
@"NSXPCConnection"
v56@0:8@16@24@32@40@?48
v32@0:8@"CRSearchQuery"16@?<v@?@"NSArray"@"NSError">24
v56@0:8@"NSArray"16@"NSString"24@"NSString"32@"NSString"40@?<v@?@"NSError">48
v40@0:8@"NSArray"16@"NSArray"24@"NSString"32
v24@0:8@?<v@?@"NSError">16
@24@0:8@?16
@"CRDClient"
r*16@0:8
i16@0:8
^{sqlite3_stmt=}24@0:8@16
i20@0:8i16
^{sqlite3=}16@0:8
^{sqlite3=}
@"NSObject<OS_os_log>"
@"NSSet"16@0:8
@"CNCache"
@"NSLocale"
@32@0:8@16d24
v32@0:8@16q24
v32@0:8@"<CRAccountAdaptor>"16q24
@"<CRUbiquitousCoordinatorDelegate>"
@32@0:8@16Q24
@"<CRSQLiteConnectionPoolDelegate>"
@"NSObject<OS_dispatch_semaphore>"
@24@0:8r*16
@"NSCache"
@"CRPhoneSearch"
@"NSDictionary"
@"NSMutableArray"
@32@0:8^{__CFString=}16^{__CFString=}24
B32@0:8r*16Q24
@"NSSet"
@24@0:8#16
@"<CRAddressHandler>"
@"CRAddressHandlerIdentity"
B24@0:8@"NSString"16
@40@0:8@16@24@32
@"CRMailAccountAnalyzer"
@"<CNCancelable>"
@"NSUserDefaults"
@"<CRAccountAdaptorDelegate>"
B28@0:8r*16i24
B24@0:8r*16
@36@0:8@16@24i32
@28@0:8@16i24
@"NSArray"
@"NSData"
@32@0:8@16@?24
dropping unentitled connection %{public}@
dropping connection %{public}@ because library is not available (probable cause: device not unlocked after boot)
Connection %p for %{public}@ was invalidated.
Connection %p for %{public}@ was interrupted.
Warning: getting writer connection on the main thread
No hash for contact %@
canceling any pending expunge for domain %{public}@
performing pending expunge for domain %{public}@
scheduled pending expunge after %.2fs for domain %{public}@
No hash for old recent with rowid %@ and kind %@
Found %lu recents over age limit for domain %{public}@
No hash for recent with rowid %@
Found %lu individual recents over hard limit for domain %{public}@
No hash for group recent with rowid %@
Found %lu group recents over hard limit for domain %{public}@
Expunging %lu recents over limit for bundle identifier %{public}@
No hash for row %@
No hash for recent %@
**** SQLITE ERROR: %s
deleting contact from '%{public}@' with record hash: [%{public}@]
deleting recent from remote store for domain '%{public}@' with key %{public}@
No hash for domain %@
deleting contacts from '%{public}@' with recent IDs: [%{public}@]
deleting recents from remote store for domain '%{public}@' with keys %{public}@
Attempt to remove invalid contact (h=%{public}@, b=%{public}@): %{public}@
Initializing KVS store (%{public}@: %{public}@)
reason:%{public}@ recentsDomain:%{public}@
Received external KVS change event: (%{public}@) %{public}@, changed keys=%{public}@
iCloud Key Value Store Over-Quota: %{public}@
After expunging, store has %lu entries
%{public}@: %{public}@
Syncing back local changes
Finished handling cloud store change
numChanges:%lu store:%{public}@ recentsDomain:%{public}@
Recent with hash '%{public}@' was removed from the cloud store, removing from local store
removing corrupted recent group %{public}@: %{public}@
calculated hash doesn't match reference key: %@ != %@, %@
MERGE: Skipping display name %{public}@
MERGE: Merged in local changes %{public}@ for contact %{public}@
MERGE: Skipping merging contact %{public}@ because we saw no dates %{public}@
Account with address %{public}@ is denying sync of contacts, skipping %{public}@
Contact with address %{public}@ has kind we don't know how to sync, %{public}@
SYNC: Skipped syncing contact because we could not calculate sync key: %{public}@
SYNC: Skipped syncing contact because there's not a sync transformer registered for address kind '%{public}@': %{public}@
SYNC: skipped syncing contact because not all members have an address or kind: %{public}@
SYNC: Skipping display name %{public}@
SYNC: Merged local changes from %{public}@: remote=%{public}@
merge=%{public}@
SYNC: Skipped syncing contact because we had no dates: %{public}@
Scheduled synchronization with iCloud store (%{public}@) %{public}@ after %.2fs
Synchronizing with iCloud store (%{public}@) %{public}@: %{public}@
Synchronizing with iCloud stores %{public}@
Removing local records for domain %{public}@
Removed %lu record(s)
Merge cloud data one-way into local with reason: %{public}@
wrong number of arguments (%d) to %s
Will execute query %{public}@ for %{public}@
Database connection unavailable
Query %{public}@ failed: %{public}@
Did execute query %{public}@ (%{public}@)
Closing sqlite connection %p
Will prepare statement for pattern: %@
Initializing cache
Cache hit
Cache miss
Prep time: %.3fms
SQLite I/O error (%d): %s
SQLite error (%d): %s
Did prepare statement in %.3fms
Observed iCloud account transition %@
Setting state for domain:%{public}@ -> %{public}@
Removing local records for all domains
Error %d on connection %p %{public}@: %s - I/O error %d (%s)
Error %d on connection %p %{public}@: %s
wrong number of arguments (%d) to icusearch
wrong number of arguments (%d) to cpsearch
wrong number of arguments (%d) to phonesearch
Renaming database %{public}@ to %{public}@
Removing database %{public}@
%s old:%{public}@ current:%{public}@
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>CFBundleDevelopmentRegion</key>
<string>English</string>
<key>CFBundleExecutable</key>
<string>recentsd</string>
<key>CFBundleIconFile</key>
<string></string>
<key>CFBundleIdentifier</key>
<string>com.apple.corerecents.recentsd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>recentsd</string>
<key>CFBundlePackageType</key>
<string>APPL</string>
<key>CFBundleShortVersionString</key>
<string>1.0</string>
<key>CFBundleSignature</key>
<string>????</string>
<key>CFBundleVersion</key>
<string>1</string>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.mobilemail.mailservices</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.tcc.allow.overridable</key>
<array>
<string>kTCCServiceCalendar</string>
<string>kTCCServiceReminders</string>
</array>
<key>com.apple.private.ubiquity-additional-kvstore-identifiers</key>
<array>
<string>com.apple.mail.recents</string>
<string>com.apple.facetime.recents</string>
<string>com.apple.calendar.recents</string>
<string>com.apple.eventkit.locations</string>
<string>com.apple.passbook.locations</string>
</array>
<key>com.apple.wifi.manager-access</key>
<true/>
</dict>
</plist>
0&!com.apple.mobilemail.mailservices
0+&com.apple.private.accounts.allaccounts
0V'com.apple.private.tcc.allow.overridable0+
kTCCServiceCalendar
kTCCServiceReminders0
9com.apple.private.ubiquity-additional-kvstore-identifiers0
com.apple.mail.recents
com.apple.facetime.recents
com.apple.calendar.recents
com.apple.eventkit.locations
com.apple.passbook.locations0"
com.apple.wifi.manager-access
#,5?HQZcmv
oooo
ILNRP
TB,N,V_hadError
T#,R
_accountAdaptor
T@"<CRSQLiteConnectionPoolDelegate>",V_delegate
_connectionPool
T@"CRPhoneSearch",&,N,V_lastPhoneSearch
_kindPredicates
T@"CRSQLiteConnection",R,N,V_connection
_makeObservableForAccountStore:
T@"NSMutableArray",&,N,V_kindPredicates
_powerAssertion
T@"NSMutableDictionary",&,N,V_cloudStores
_remoteLibraryWithErrorHandler:
T@"NSString",R,C
_storeSyncDelay
T@"NSXPCConnection",R,N,V_connection
_writersWaiting
TB,N,V_wantsGroups
addressHandlers
TB,R,N,GisLocked
bundleForClass:
TQ,R
containsObject:
T^{sqlite3=},R,N,V_db
copyCountryCode
URLForResource:withExtension:
cr_map:
XPCInterface
currentCalendar
_CRSearchContext
dealloc
_accountStore
domains
_addAddressHandler:
hashForContact:
_adjustLibraryStoreSyncBehaviorWithLockedState:
initWithFormat:
_analyzeMailAccounts
initWithObject:
_appleAccountListener
isAtEnd
_bindContact:withRecentID:forStatement:
isProxy
_cache
keyPath
_cacheLock
library
_cachedProperties
lowercaseString
_checkoutMap
members
_clients
numberWithBool:
_cloudStoreStates
refresh
_cn_skip:
removeObserver:
_components
_connectionForWriting:
setBool:forKey:
_copyInterpretationsForPhoneNumber:
setDay:
_copyRecentContactForRecordHash:recentsDomain:
setRecentDates:
_databasePropertyValueByKey:
stringByAppendingPathComponent:
.cxx_destruct
TB,N,V_isWriter
T@"<CRAccountAdaptorDelegate>",N,V_delegate
_client
T@"CRAddressHandlerIdentity",&,N,V_identity
T@"CRSQLiteConnection",&,N,V_connection
_locale
T@"CRUbiquitousCoordinator",&,N,V_ubiquitousCoordinator
_performTransaction:forWriting:
T@"NSMutableArray",&,N,V_predicates
_readersWaiting
T@"NSSet",C,N,V_supportedAddressKinds
_statementCache
T@"NSString",R,N
_writer
T@"_CRRecentsLibrary",R,N,V_library
address
TB,N,V_writer
allKeys
bundleWithPath:
TQ,R,N,V_generation
containsString:
Td,N,V_storeSyncDelay
cr_isInvalidComparisonPredicate
UTF8String
cr_mergeSubcontext:intoContext:
_CRPhoneSearchContext
dataWithLength:
_ICUSearchContext
defaultProvider
_activeConnectionWrapper
hasEntitlement:
_addressHandlersByKind
initWithClient:
_allDomains
initWithLocale:
_analyzer
initWithSearchString:andLocale:
_asciiComponents
isGroup
_bindRecent:forStatement:
isTimeoutError:
_cacheGeneration
lastPhoneSearch
_cacheSize
_checkoutLock
mailAccountListenerWithHandler:
_className
newConnectionForConnectionPool:
_cloudStoreStateForDomain:
options
_cloudStores
release
_cn_take:
rightExpression
_connection
_context
setCloudStores:
_copyRecentContactForID:
setDisplayName:
_countryCode
setWantsGroups:
_delegate
_delegateAccountChanges
_deleteRecentWithRecordHash:kind:recentsDomain:
_deleteRecentsWithRecentIDs:storeKeys:recentsDomain:deleteInUbiquitousStore:
_executeAfterFirstUnlock:
_generation
_hadError
_handleBusyError
_handleCorruptDatabase
_handleFullDatabase
_handleIOError
_handleSQLiteErrorCode:
_handler
_iCloudAccountPersonID
_iCloudAccountWasLoggedIn
_identity
_initWithStoreIdentifier:usingEndToEndEncryption:
_initializeStoreForRecentsDomain:storeIdentifier:
_insertRecentContacts:
_isWriter
_lastPhoneSearch
_lastSearchString
_lastSearchStringLength
_library
_libraryAvailable
_listener
_loadPluginBundle:
_loadPlugins
_lock
_lockNotifyToken
_lockState
_lockStateChanged:
_log
_mailAccountListener
_makeObservableForMailAccount
_maxConcurrentReaders
_maxConcurrentWriters
_mergeRemoteChanges:fromStore:forRecentsDomain:
_migrator
_needsRebuild
_nts_expungeGroupRecentsOverLimit:domain:storeKeys:connection:
_nts_expungeIndividualRecentsOverLimit:domain:storeKeys:connection:
_nts_expungeRecentsOlderThanDate:domain:storeKeys:connection:
_options
_path
_pendingDomainExpunges
_pendingStoreSyncEvents
_pluginManager
_predicateCollectionsMap
_predicates
_primaryiCloudAccountPersonID
_propertyValueForKey:defaultValue:
_queue
_readerSemaphore
_recentsDomainForStore:
_refcount
_removeLocalRecordsForAllDomains
_removeLocalRecordsForCloudStoresWithDataFromPreviousAccount
_requests
_resetCachedAccountInfo
_runWithAnalyzerLock:
_saveRecentContacts:
_searchString
_setActiveConnection:forWriting:
_setCloudStoreState:forDomain:
_setCloudStoreStateForAllDomains:
_setDatabasePropertyValue:forKey:
_setPropertyValue:forKey:
_startupQueue
_storeChangedExternally:
_storeForRecentsDomain:
_supportedAddressKinds
_syncContact:withStore:
_synchronizeAllStores
_synchronizeStore:
_transaction
_transactionCount
_transactionType
_ubiquitousCoordinator
_updateLockStateWithToken:
_updateRecentContacts:
_userDefaults
_vfsModuleName
_wantsGroups
_weakRef
_whereClauseFromPredicate:inDomains:bindings:error:
_wholeSearchStringData
_writerSemaphore
aa_personID
aa_primaryAppleAccount
accountAdaptor:observediCloudAccountTransition:
accountProperties
accountValuesForKeys:completionBlock:
addAddress:isRestricted:
addFailureBlock:
addIndex:
addObject:
addObjectsFromArray:
addObserver:selector:name:object:
addPredicate:forFieldName:
addressFromExternalAddress:kind:
addressHandlerForAddressKind:
addressHandlerWithPrincipalClass:
allAddresses
allObjects
allValues
anyObject
appendFormat:
appendString:
appleAccountListenerForStore:withHandler:
applyWeight:
array
arrayByAddingObject:
arrayByAddingObjectsFromArray:
arrayByApplyingSelector:
arrayWithCapacity:
arrayWithObject:
arrayWithObjects:
arrayWithObjects:count:
auditToken
auditToken:
autorelease
beginTransaction
beginTransaction:withType:
beginTransactionWithType:
bindingForDomain:
boolForKey:
boolValue
bundleIdentifier
bundleIdentifierForAuditToken:
bytes
cacheSize
cancel
cancelPerformExpungeRecentsOverLimitsForDomain:
cancelWorkForKey:
caseInsensitiveCompare:
checkInConnection:
class
clauseWithBindings:
clientForConnection:
clientMayConnect:
close
closeDatabaseConnections
cloudStores
code
collection
commitTransaction
commitTransaction:
compare:
comparisonPredicateModifier
completionHandlerAdapter
componentsJoinedByString:
componentsSeparatedByCharactersInSet:
componentsSeparatedByString:
compoundPredicateType
conformsToProtocol:
connection
connectionToNewInMemoryStore
constantValue
contactID
contentsOfDirectoryAtPath:error:
coordinateChangesInUbiquitousStoreForDomain:
copy
copyContactRecentsFromStatement:selectIndexes:groupThreshold:options:
copyNormalizedPhoneNumber:countryCode:
copyRecentContactFromStatement:columnIndexes:populateMetadata:
copyRecentsForQuery:error:
copySearcherForPattern:
count
countByEnumeratingWithState:objects:count:
countOfRecents
cr_CRContactGroupKindValue
cr_CRContactIDValue
cr_CRRecentIDValue
cr_addNonNilObject:
cr_addToClause:usingOperator:bindings:
cr_expressionValue
cr_insertObject:usingComparator:
cr_insertionSortedArrayUsingComparator:
cr_isInvalidOperatorType:forKeyPath:
cr_md5DigestHexString
cr_predicateClauseWithBindings:error:
cr_processWithContext:
cr_simplifiedPredicate
cr_simplifiedPredicateSingleStep
cr_sqlBindings
cr_sqlNameForFieldName:
cr_uniqueFilenameWithRespectToFilenames:
currentHandler
currentLocale
currentThread
customSelector
daemonLibraryForClient:
dataUsingEncoding:
dataWithData:
dataWithPropertyList:format:options:error:
date
dateByAddingComponents:toDate:options:
dateWithTimeIntervalSince1970:
debugDescription
decrementRefcount
defaultCenter
defaultManager
defaultPath
defaultPluginPath
defaultStore
delegate
description
dictionary
dictionaryForKey:
dictionaryRepresentation
dictionaryWithCapacity:
dictionaryWithDictionary:
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:count:
dictionaryWithObjectsAndKeys:
displayName
distantPast
doesNotRecognizeSelector:
domain
domainClauseWithDomains:bindings:
doubleValue
emailAddressesForAccount:
enumerateEmailAddresses:
enumerateKeysAndObjectsUsingBlock:
enumerateRecentsForDomain:usingBlock:
enumerateRowsInStatement:usingBlock:
errorWithDomain:code:userInfo:
executeSQL:database:
expressionForConstantValue:
expressionForKeyPath:
expressionType
expungeRecentsOverLimitsForDomain:forcibly:expungedRecentIDs:
externalAddressFromAddress:kind:
fileExistsAtPath:
fileSystemRepresentation
filteredArrayUsingPredicate:
firstObject
flush
future
generation
groupKind
groupName
hadError
handleFailureInFunction:file:lineNumber:description:
handleFailureInMethod:object:file:lineNumber:description:
handleSqliteError:format:
hasPrefix:
hash
hashForGroup:
hashForGroupMemberHashes:
hashForGroupMembers:recentsDomain:
hashesForGroupMembers:recentsDomain:
identity
identityForAddressHandler:
implicitGroupThreshold
incrementRefcount
indexOfObject:inSortedRange:options:usingComparator:
indexSet
init
initForAddressHandler:
initWithAccountStore:
initWithAddress:displayName:kind:recentDate:recentsDomain:
initWithAddressHandler:
initWithArray:
initWithBytesNoCopy:length:encoding:freeWhenDone:
initWithBytesNoCopy:length:freeWhenDone:
initWithCapacity:
initWithConnection:forWriting:
initWithConnection:generation:
initWithConnection:library:
initWithContactID:
initWithDelegate:
initWithDelegate:maxConcurrentReaders:
initWithDescription:
initWithIdentifier:timeout:
initWithMachServiceName:
initWithMembers:displayName:recentDate:recentsDomain:
initWithObjects:
initWithPath:
initWithPath:accountAdaptor:
initWithPath:databaseName:
initWithPrincipalClass:
initWithSearchString:
initWithSearchString:andLocale:andOptions:
initWithSearchString:options:
initWithType:subpredicates:
initWithUserDefaults:accountStore:delegate:
insertObject:atIndex:
intValue
integerValue
intersectSet:
invalidate
isAddressRestricted:
isEqual:
isEqualToNumber:
isEqualToPhoneNumber:
isEqualToString:
isKindOfClass:
isLocked
isMemberOfClass:
isOpen
isSyncingDisabledForAccountWithAddress:
isUsingiCloud
isWriter
keyForContact:
kind
kindClauseWithBindings:
kindPredicates
lastObject
lastPathComponent
lastSendingAddress
leftExpression
length
listener:shouldAcceptNewConnection:
loadAndReturnError:
lock
locked
longLongValue
mailAccounts
mainRunLoop
makeObjectsPerformSelector:withObject:
matches:
matches:matchType:
matchesASCIIString:matchType:
matchesUTF8String:
matchesUTF8String:matchType:
maxConcurrentReaders
maxConcurrentWriters
maximumGroupRecentsForDomain:
maximumRecentsAgeInDaysForDomain:
maximumRecentsForDomain:
mergeCloudDataOneWayIntoLocalStoreWithReason:
metadata
migrateLibraryFilesFrom:to:
migrateMailEmbeddedLibraryToPath:
migrateWithSQLiteConnection:
migrateWithSQLiteConnection:toVersion:
mostRecentDate
moveItemAtPath:toPath:error:
mutableBytes
mutableCopy
needsRebuild
nextObject
normalizeAddress:
notPredicateWithSubpredicate:
noteNeedsRebuild
notificationWithName:object:userInfo:
null
numberWithDoubleAtIndex:
numberWithIntegerAtIndex:
numberWithLongLong:
numberWithUnsignedInteger:
objCType
object
objectAtIndex:
objectAtIndex:statement:
objectAtIndexedSubscript:
objectEnumerator
objectForKey:
objectForKey:onCacheMiss:
objectForKeyedSubscript:
observableOnDefaultNotificationCenterWithName:object:
observableWithBlock:
observerDidReceiveResult:
observerWithResultBlock:
open
originalSource
os_log
pageRange
pathExtension
performExpungeRecentsOverLimitsForDomain:afterDelay:
performReadTransaction:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performWriteTransaction:
phoneSearch:
populateMetadataForRecents:
postNotification:
postNotificationName:object:userInfo:
predicate
predicateOperatorType
predicateWithBlock:
predicateWithLeftExpression:rightExpression:modifier:type:options:
predicates
prefixSearch:
preparedStatementForPattern:
principalClass
rawAddressFromFullAddress:
readerConnection
readersWaiting
receivedEmailAddressesFromAccount:
recentDates
recentID
recentsDomain
recentsHashForAddress:kind:
recentsHashForExternalAddress:kind:
recordContactEvents:domain:sendingAddress:source:completion:
recordContactEvents:recentsDomain:sendingAddress:source:
recordRecentEventForDate:userInitiated:
removeAllObjects
removeAllRecentContactsWithCompletion:
removeContact:
removeLocalRecordsForDomain:removeInUbiquitousStore:
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removeObjectsAtIndexes:
removeRecentContactsWithRecentIDs:syncKeys:domain:
removeRecentContactsWithRecentIDs:syncKeys:domain:removeInUbiquitousStore:
renameOrRemoveDatabase
respondsToSelector:
resultWithTimeout:error:
resume
retain
retainCount
reverseObjectEnumerator
rollbackTransaction
rollbackTransaction:
rowWithStatement:
scanLongLong:
scanString:intoString:
scannerWithString:
scheduleSynchronizationForStore:
scheduleWorkForKey:afterDelay:work:
searchRecentsUsingQuery:completion:
self
senderEmailAddresses
setAddress:
setCacheSize:
setConnection:
setDelegate:
setDictionary:forKey:
setDomains:
setExportedInterface:
setExportedObject:
setGroupKind:
setGroupName:
setHadError:
setIdentity:
setImplicitGroupThreshold:
setInterruptionHandler:
setInvalidationHandler:
setIsWriter:
setKind:
setKindPredicates:
setLastPhoneSearch:
setLastSendingAddress:
setMaximumGroupRecents:forRecentsDomain:
setMaximumRecents:forRecentsDomain:
setMaximumRecentsAgeInDays:forRecentsDomain:
setMembers:
setMetadata:
setObject:forKey:
setObject:forKeyedSubscript:
setOriginalSource:
setPredicates:
setRawAddress:
setRecentID:
setRecentsDomain:
setStoreSyncDelay:
setSupportedAddressKinds:
setUbiquitousCoordinator:
setVersion:ofDatabase:
setWeight:
setWithArray:
setWithCapacity:
setWithSet:
setWriter:
sharedMonitor
sortedArrayUsingFunction:context:
standardUserDefaults
start
step:
stop
storeMapping
storeSyncDelay
string
stringAtIndex:
stringByAppendingString:
stringByDeletingLastPathComponent
stringByFoldingWithOptions:locale:
stringForKey:
stringForTimeInterval:
stringWithContentsOfURL:encoding:error:
stringWithFormat:
stringWithString:
stringWithUTF8String:
subarrayWithRange:
subpredicates
subscribe:
substringFromIndex:
superclass
supportedAddressKinds
syncKeyForAddress:kind:
synchronize
threadDictionary
timeIntervalSinceDate:
timeIntervalSinceNow
timeIntervalSinceReferenceDate
timestamp
tokenSearch:
tokenWithCancelationBlock:
transactionWithDescription:
ubiquitousCoordinator
ubiquitousStoreForDomainChangedAccount:
unlock
unlockConnection:
unsignedIntegerValue
upcomingEventIdentifierForRecentID:
userInfo
uuid
variable
versionOfDatabase:
wantsGroups
weakReferenceWithObject:
weight
whitespaceCharacterSet
wrapperWithConnection:forWriting:
writer
writerConnection
writersWaiting
zone
com.apple.corerecents.delayedWork.%p
com.apple.corerecents.delayedWork-%p-%@
v8@?0
defaultAddress
ReceiveEmailAliasAddresses
v16@?0@"NSError"8
failed to get account information after 10 seconds
Error loading Mail account information: %@
com.apple.contacts.corerecents.agent.startup
com.apple.corerecents.launch
com.apple.private.corerecents
com.apple.private.contactsui
-[_CRRecentsSQLiteConnectionWrapper decrementRefcount]
_CRRecentsLibrary.m
_refcount > 0
%@/Library/Recents
com.apple.mail.recents
com.apple.eventkit.locations
com.apple.passbook.locations
v32@?0@"NSString"8@"NSString"16^B24
Recents
com.apple.corerecents.recentsLibrary.connection
recents: beginning transaction
recents: committing transaction
recents: rolling back transaction
-[_CRRecentsLibrary unlockConnection:]
[wrapper connection] == connection
-[_CRRecentsLibrary _connectionForWriting:]
nil != connection
[wrapper writer]
WHERE %@
 AND 
bundle_identifier IN (%@)
v20@?0^{sqlite3_stmt=}8i16
%@ %@
B16@?0@"CRSQLiteConnection"8
SELECT recent_id, key, value FROM metadata WHERE recent_id IN (?
) ORDER BY recent_id
v16@?0@"CRSQLRow"8
SELECT value FROM metadata WHERE recent_id = ? AND key = ?
v32@?0@"NSNumber"8@"NSMutableArray"16^B24
address
kind
 WHERE recents.record_hash = :record_hash AND recents.bundle_identifier = :bundle_identifier
:record_hash
:bundle_identifier
 WHERE recents.ROWID = :rowid
:rowid
 WHERE recents.bundle_identifier = :bundle_identifier
SELECT value FROM properties WHERE key = :key
:key
INSERT OR REPLACE INTO properties (key, value) VALUES (:key, :value)
:value
-[_CRRecentsLibrary setMaximumRecents:forRecentsDomain:]
maxRecents > 0
-[_CRRecentsLibrary setMaximumGroupRecents:forRecentsDomain:]
        SELECT recents.ROWID, recents.record_hash, recents.count 
        FROM recents 
        WHERE recents.bundle_identifier = :bundle_identifier 
        AND recents.last_date < :expunge_date     
:expunge_date
        SELECT recents.ROWID, recents.record_hash 
        FROM recents 
        WHERE recents.bundle_identifier = :bundle_identifier 
            AND recents.count = 1 
        ORDER BY recents.last_date DESC 
        LIMIT -1 
        OFFSET :offset     
:offset
        SELECT recents.ROWID, recents.record_hash 
        FROM recents 
        WHERE recents.bundle_identifier = :bundle_identifier 
            AND recents.count != 1 
        ORDER BY recents.last_date DESC 
        LIMIT -1 
        OFFSET :offset     
                    SELECT recents.record_hash, recents.count 
                    FROM recents 
                    WHERE recents.bundle_identifier = :bundle_identifier                 
-[_CRRecentsLibrary _bindRecent:forStatement:]
[recent countOfRecents] > 0 && "can't save recent contact without event dates"
:display_name
:original_source
:last_date
:weight
:group_kind
%@%lld
:dates
:sending_address
:recent_id
:kind
:address
INSERT INTO recents (display_name, bundle_identifier, original_source, dates, last_date, sending_address, count, weight, record_hash, group_kind)             VALUES (:display_name, :bundle_identifier, :original_source, :dates, :last_date, :sending_address, :count, :weight, :record_hash, :group_kind)
INSERT INTO contacts (recent_id, display_name, kind, address)             VALUES (:recent_id, :display_name, :kind, :address)
INSERT INTO metadata (recent_id, key, value) VALUES (:recent_id, :key, :value)
:count
v32@?0@8@16^B24
            UPDATE contacts             SET display_name = :display_name             WHERE ROWID = :recent_id         
            UPDATE recents             SET                 weight = COALESCE(MAX(weight, :weight), weight, :weight),                 display_name    = :display_name,                 dates           = :dates,                 last_date       = :last_date,                 sending_address = :sending_address,                 group_kind      = :group_kind             WHERE ROWID = :recent_id         
INSERT OR REPLACE INTO metadata (recent_id, key, value) VALUES (:recent_id, :key, :value)
-[_CRRecentsLibrary _deleteRecentWithRecordHash:kind:recentsDomain:]
recentsDomain
DELETE FROM recents WHERE recents.record_hash = :record_hash AND recents.bundle_identifier = :bundle_identifier
-[_CRRecentsLibrary _deleteRecentsWithRecentIDs:storeKeys:recentsDomain:deleteInUbiquitousStore:]
recentsDomain != nil
            DELETE FROM recents 
            WHERE recents.ROWID IN (%@) 
            AND recents.bundle_identifier = :bundle_identifier         
@"CRRecentContact"16@?0@"NSString"8
options
members
timestamp
displayName
metadata
weight
v24@?0@"CRRecentContact"8@"NSString"16
@"NSString"16@?0@"CRRecentContact"8
com.apple.corerecents.externalStoreChange
-[_CRRecentsLibrary _storeChangedExternally:]
MAX_RECENTS
v32@?0@"NSString"8@16^B24
v24@?0@"CRRecentContact"8^B16
q24@?0@"NSString"8@"NSString"16
v32@?0@"NSString"8@"NSDictionary"16^B24
succeeded
failed
v32@?0@8@"NSUbiquitousKeyValueStore"16^B24
@16@?0@"CRRecentContact"8
SELECT recents.ROWID,
       recents.bundle_identifier,
       recents.dates,
       recents.display_name,
       recents.sending_address,
       recents.original_source,
       recents.weight,
       recents.group_kind,
       contacts.ROWID,
       contacts.kind,
       contacts.display_name,
       contacts.address
  FROM recents
  JOIN contacts ON contacts.recent_id = recents.ROWID
_maxRecentPropertyKeyForRecentsDomain
max-recent:
_maxGroupRecentPropertyKeyForRecentsDomain
max-group-recent:
_maxRecentAgePropertyKeyForRecentsDomain
max-recent-age:
void _bindData(sqlite3_stmt *, const char *, NSData *)
data length is more than INT_MAX
NSUbiquitousKeyValueStoreServerChange
NSUbiquitousKeyValueStoreInitialSyncChange
NSUbiquitousKeyValueStoreQuotaViolationChange
NSUbiquitousKeyValueStoreAccountChange
com.apple.corerecents.newDatabase
com.apple.corerecents.iCloudSignIn
com.apple.corerecents.iCloudSwitch
unknown change reason (%lu)
B24@?0@8@"NSDictionary"16
-[CRProcessTransaction init]
CRProcessTransaction.m
<%@:%p> %s
getting library version
Error: migration is not supported for version %d
VACUUM
%@/Library/Mail
/tmp/
New path looks like a temporary directory, skipping migration: %@
Recents-shm
Recents-wal
Failed to migrate %@ to %@. Error: %@
Error %d %@: %s
SELECT value FROM properties WHERE key = 'version'
INSERT OR REPLACE INTO properties (key, value) values ('version', ?)
setting library version
preparing library version insert statement
recents
Error loading SQL: %@
executing SQL from file: %@
_ExecuteSQL
CRRecentsMigrator.m
nil != sql
executing SQL statements
ALTER TABLE recents ADD COLUMN address_hash TEXT;
adding address_hash to recents table
DROP INDEX IF EXISTS recents_last_name; DROP INDEX IF EXISTS recents_first_name; ALTER TABLE recents ADD COLUMN display_name TEXT;
dropping indexes, adding display name columns
UPDATE recents SET display_name = NULLIF(IFNULL(first_name, '') || ' ' || IFNULL(last_name, ''), ' '), last_name = NULL, middle_name = NULL, first_name = NULL, suffix = NULL;
updating recents with display names
ALTER TABLE recents ADD COLUMN sending_address TEXT;
adding sending address column
DROP TABLE IF EXISTS new_recents;
CREATE TABLE new_recents (ROWID INTEGER PRIMARY KEY AUTOINCREMENT,
display_name TEXT,
bundle_identifier TEXT,
property INTEGER,
address TEXT,
address_hash TEXT,
sending_address TEXT,
dates TEXT NOT NULL,
last_date INTEGER,
UNIQUE (bundle_identifier, address_hash)
);INSERT INTO new_recents (bundle_identifier, display_name, property, address, address_hash, sending_address, dates, last_date)SELECT 'com.apple.mobilemail', display_name, property, address, address_hash, sending_address, dates, last_date FROM recents;DROP TABLE recents; ALTER TABLE new_recents RENAME TO recents;
migrating data to recents table with new contraints
CREATE INDEX recents_address_hash ON recents(bundle_identifier, address_hash, property);CREATE INDEX recents_expunge ON recents(bundle_identifier, last_date DESC);
adding new index
_migration_hash
registering hash function
DROP TABLE IF EXISTS new_recents;
CREATE TABLE new_recents (ROWID INTEGER PRIMARY KEY AUTOINCREMENT,
display_name TEXT,
bundle_identifier TEXT,
kind TEXT,
address TEXT,
address_hash TEXT NOT NULL,
sending_address TEXT,
dates TEXT NOT NULL,
last_date INTEGER,
UNIQUE (bundle_identifier, address_hash)
creating new_recents table with new constraints
DROP TABLE IF EXISTS recents; ALTER TABLE new_recents RENAME TO recents;CREATE INDEX recents_address_hash ON recents(bundle_identifier, address_hash, kind);CREATE INDEX recents_expunge ON recents(bundle_identifier, last_date DESC);
dropping old recents table, rename new_recents to recents, adding new indexes
unregistering hash function
__recentsHashFunction
SELECT bundle_identifier, display_name, CASE WHEN property = 4 THEN 'email' WHEN property = 3 THEN 'phone' END, address, _migration_hash(CASE WHEN property = 4 THEN 'email' WHEN property = 3 THEN 'phone' END, address), sending_address, dates, last_date FROM recents;
%s-%s
bundle_identifier
address_hash
dates
last_date
display_name
sending_address
INSERT INTO new_recents (bundle_identifier, display_name, kind, address, address_hash, sending_address, dates, last_date)VALUES (?, ?, ?, ?, ?, ?, ?, ?);
transferring recents to new_recents
DROP TABLE IF EXISTS new_recents;
DROP TABLE IF EXISTS contacts;
        CREATE TABLE new_recents (            ROWID INTEGER PRIMARY KEY AUTOINCREMENT,             display_name TEXT,             bundle_identifier TEXT,             sending_address TEXT,                         dates TEXT NOT NULL,             last_date INTEGER,                         count INTEGER         );                INSERT INTO new_recents (ROWID, display_name, bundle_identifier, sending_address, dates, last_date, count)         SELECT ROWID, display_name, bundle_identifier, sending_address, dates, last_date, 1 FROM recents;   CREATE TABLE contacts (             ROWID INTEGER PRIMARY KEY AUTOINCREMENT,                         recent_id INTEGER,                         display_name TEXT,             kind TEXT,             address TEXT,             address_hash TEXT NOT NULL,                         FOREIGN KEY (recent_id) REFERENCES new_recents (ROWID) ON DELETE CASCADE         );                 INSERT INTO contacts (recent_id, display_name, kind, address, address_hash)         SELECT ROWID, display_name, kind, address, address_hash FROM recents;                 DROP TABLE recents; ALTER TABLE new_recents RENAME TO recents;                 DROP INDEX IF EXISTS recents_address_hash;         DROP INDEX IF EXISTS recents_expunge;     
creating separate contacts and recents tables
            CREATE INDEX contacts_recentsidx ON contacts(recent_id);             CREATE INDEX contacts_address_hash ON contacts(address_hash, kind);             CREATE INDEX contacts_search ON contacts(display_name, address);                    CREATE INDEX recents_expunge ON recents(bundle_identifier, last_date DESC);         
adding new index for contacts table
DROP TABLE IF EXISTS metadata;
CREATE TABLE metadata (
    ROWID INTEGER PRIMARY KEY AUTOINCREMENT,
    recent_id INTEGER,
    key TEXT,
    value,
    FOREIGN KEY (recent_id) REFERENCES recents (ROWID) ON DELETE CASCADE,
    UNIQUE (recent_id, key)
DROP INDEX IF EXISTS contacts_search;
DROP INDEX IF EXISTS contacts_address;
DROP INDEX IF EXISTS metadata_recents;
CREATE INDEX metadata_recents ON metadata(recent_id);
CREATE INDEX contacts_address ON contacts(kind, display_name, address);
creating metadata tables and indexes
ALTER TABLE recents ADD COLUMN original_source TEXT;
adding original_source column
ALTER TABLE recents ADD COLUMN weight FLOAT;
adding weight column
0. Disable foreign key constraints.
PRAGMA foreign_keys = OFF;
1. Add record_hash column to recents
DROP TABLE IF EXISTS new_recents; 
CREATE TABLE new_recents ( 
   ROWID INTEGER PRIMARY KEY AUTOINCREMENT, 
   display_name TEXT, 
   bundle_identifier TEXT, 
   sending_address TEXT, 
   original_source TEXT, 
   dates TEXT NOT NULL, 
   last_date INTEGER, 
   weight FLOAT, 
   record_hash TEXT NOT NULL, 
   count INTEGER 
);INSERT INTO new_recents (ROWID, display_name, bundle_identifier, sending_address, 
                         original_source, dates, last_date, weight, count, record_hash) SELECT recents.ROWID, 
       recents.display_name, 
       recents.bundle_identifier, 
        recents.sending_address, 
        recents.original_source, 
        recents.dates, 
        recents.last_date, 
        recents.weight, 
        recents.count, 
        contacts.address_hash 
 FROM recents 
 INNER JOIN contacts 
         ON contacts.recent_id = recents.ROWID 
GROUP BY recents.ROWID;
2. Generate new hashes for each group
SELECT recents.ROWID, contacts.address_hash, contacts.kind FROM recents INNER JOIN contacts ON contacts.recent_id = recents.ROWID WHERE recents.count > 1
q24@?0@8@16
UPDATE new_recents SET record_hash = '%@' WHERE ROWID = %ld
3. Remove contacts' address_hash column
DROP TABLE IF EXISTS new_contacts; 
CREATE TABLE new_contacts ( 
    ROWID INTEGER PRIMARY KEY AUTOINCREMENT, 
    recent_id INTEGER, 
    display_name TEXT, 
    kind TEXT, 
     address TEXT, 
    FOREIGN KEY (recent_id) REFERENCES new_recents (ROWID) ON DELETE CASCADE 
);INSERT INTO new_contacts (ROWID, recent_id, display_name, kind, address) SELECT ROWID, recent_id, display_name, kind, address FROM contacts; 
DROP TABLE contacts; ALTER TABLE new_contacts RENAME TO contacts; 
DROP TABLE recents; ALTER TABLE new_recents RENAME TO recents; 
DROP INDEX IF EXISTS contacts_address_hash; 
DROP INDEX IF EXISTS recents_record_hash; 
DROP INDEX IF EXISTS recents_expunge; 
CREATE INDEX recents_record_hash ON recents(record_hash); 
CREATE INDEX recents_expunge ON recents(bundle_identifier, last_date DESC); 
4. Re-enable foreign key constraints.
PRAGMA foreign_keys = ON;
DROP INDEX IF EXISTS contacts_recentsidx;
DROP INDEX IF EXISTS contacts_address;
CREATE INDEX contacts_recentsidx ON contacts(recent_id);
CREATE INDEX contacts_address ON contacts(kind, display_name, address);
creating contacts indexes
ALTER TABLE recents ADD COLUMN group_kind INTEGER;
adding group kind column
DELETE FROM recents WHERE bundle_identifier='com.apple.eventkit.ios'
deleting pre-existing com.apple.eventkit.ios records
UPDATE recents SET bundle_identifier='com.apple.eventkit.ios' WHERE bundle_identifier='com.apple.reminders';
renaming iOS reminders domain
DELETE FROM contacts WHERE rowid IN (SELECT c.rowid FROM contacts c LEFT JOIN recents r ON (c.recent_id = r.rowid) WHERE r.rowid IS NULL)
deleting dangling contacts
DELETE FROM metadata WHERE rowid IN (SELECT m.rowid FROM metadata m LEFT JOIN recents r ON (m.recent_id = r.rowid) WHERE r.rowid IS NULL)
deleting dangling metadata
DELETE FROM recents WHERE bundle_identifier IN ('com.apple.MobileSMS', 'com.apple.messages')
deleting messages recents
com.apple.corerecents
daemon
:memory:
-[CRSQLiteConnection initWithPath:]
CRSQLiteConnection.m
NULL != path
com.apple.contacts.recentsd
statement-cache
-[CRSQLiteConnection initWithPath:databaseName:]
NULL != databaseName
-[CRSQLiteConnection dealloc]
NULL == _db
-[CRSQLiteConnection open]
enabling extended error codes
icusearch
creating custom icusearch function
cpsearch
creating custom cpsearch function
phonesearch
creating custom phonesearch function
setting busy timeout
PRAGMA page_size = 4096;
setting page_size
PRAGMA auto_vacuum = 1;
setting auto_vacuum
PRAGMA cache_size = 100;
setting cache_size
PRAGMA journal_mode = WAL;
setting journal_mode
setting foreign_keys
opening database %s
-[CRSQLiteConnection preparedStatementForPattern:]
NULL != _db
preparing statement for query "%@"
-[CRSQLiteConnection beginTransactionWithType:]
BEGIN DEFERRED
BEGIN IMMEDIATE
BEGIN EXCLUSIVE
0 && "unsupported transaction type"
_transactionType == type
-[CRSQLiteConnection commitTransaction]
COMMIT
-[CRSQLiteConnection rollbackTransaction]
ROLLBACK
com.apple.message.library.vfsQueue
vfsQueue
_vfsQueue != NULL
CoreRecentsVFS
/System/Library/Recents/Plugins
addresshandler
no conforming principal class found in %@
unable to load plugin bundle %@: %@
ERROR: %@ attempting to register multiple sync transformers for kinds: {%@}
registered transformers:
%@ => %@
@"NSNumber"16@?0@"NSString"8
CRPowerMonitorDeviceWillLockNotification
CRPowerMonitorDeviceLockedStateKey
com.apple.corerecents.sblockqueue
v12@?0i8
.StateUnknown
.StateSignedIn
.StateSignedInWithLocalDataRemoved
.StateSignedOut
-[CRSQLiteConnectionPool initWithDelegate:maxConcurrentReaders:]
CRSQLiteConnectionPool.m
maxConcurrentReaders > 0
-[CRSQLiteConnectionPool checkInConnection:]
nil != connectionWrapper
-journal
-wal
-shm
unhandled expression type
expected only NSString, NSNumber and NSNull types, got %@
count
operator
predicate
-[NSCompoundPredicate(PredicateBindings) cr_simplifiedPredicateSingleStep]
NSPredicateBindings.m
1 == count
0 && "unknown compound predicate type"
 AND 
 OR 
tokenSearch:
prefixSearch:
phoneSearch:
%@%@ == ?
%@%@ != ?
%@%@ < ?
%@%@ <= ?
%@%@ >= ?
%@%@ > ?
%@%@ BETWEEN ? AND ?
%@%@ IN (?
%%@%@(%%@, ?, %d)
%%@%@(%%@, ?, %ld)
-[NSComparisonPredicate(PredicateBindings) cr_addToClause:usingOperator:bindings:]
0 && "should be impossible to get here if we verified everything correctly ahead of time"
groupName
sendingAddress
failed to find collections for field '%@'
unexpected kind of predicate present
%@recents.rowid IN (
      SELECT contacts.recent_id
        FROM contacts
        JOIN recents ON (recents.ROWID = contacts.recent_id)
       WHERE 
    recents.count = 1
contacts.address
contacts.display_name
recents.display_name
recents.sending_address
<%@:%p; %@ kinds={%@}>
.SignedOut
.SignedInWithPreviousAccount
.SignedInWithNewAccount
.SwitchedAccount
CRAccountAdaptor.m
Use designated initializer.
LastiCloudAccountPersonID
LastiCloudAccountWasLoggedIn
v20@?0@"NSString"8B16
-[CRAccountAdaptor _delegateAccountChanges]
v32@?0r*8Q16^B24
collation
search
AppleCollationOrder
AppleLanguages
v16@?0@8
@"<CNCancelable>"16@?0@"<CNObserver>"8
Failed to open ICUSQLite collator: %s
CRDelayedWorkQueue
CRMailAccountIterator
CRAgent
NSXPCListenerDelegate
NSObject
_CRRecentsSQLiteConnectionWrapper
_CRRecentsLibrary
CRSQLiteConnectionPoolDelegate
CRRecentsMigratorDelegate
CRUbiquitousCoordinatorDelegate
CRProcessTransaction
CRRecentsMigrator
CRDClient
CRDRecentContactsLibrary
CRDRecentContactsLibraryProtocol
CRSQLiteConnection
CRAddressHandler
CRPluginManager
CRMailAccountAnalyzer
CRPowerMonitor
CRPowerAssertion
CRUbiquitousCoordinator
CRAccountAdaptorDelegate
CRSQLiteConnectionPool
_CRSQLiteConnectionWrapper
_CRPhoneSearchCache
PredicateBindings
PredicateBindingsInternal
_ClauseGenerationContext
CRPhoneSearch
CRAddressHandlerIdentity
CRAccountAdaptor
CRSearchMatcher
CRWeakReference
CRAccountListener
@16@0:8
v16@0:8
v24@0:8@16
B40@0:8@16d24@?32
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSObject<OS_dispatch_queue>"
@"NSMutableDictionary"
@24@0:8@16
v24@0:8@?16
@"ACAccountStore"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v20@0:8B16
@"NSXPCListener"
@"_CRRecentsLibrary"
@"NSMutableSet"
@28@0:8@16B24
@"CRSQLiteConnection"
@"CRSQLiteConnection"24@0:8@"CRSQLiteConnectionPool"16
@32@0:8@16@24
@"NSString"32@0:8@"NSString"16@"NSString"24
v28@0:8@16B24
v24@0:8Q16
v28@0:8@"NSString"16B24
v20@0:8i16
i32@0:8^{sqlite3=}16@24
i28@0:8@16i24
i24@0:8@16
@20@0:8B16
v28@0:8@?16B24
@80@0:8^{sqlite3_stmt=}16{?={?=iiiiiiii}{?=iiiii}}24B76
@48@0:8@16@24^@32^@40
@?24@0:8@16
@32@0:8@16^@24
@24@0:8q16
@92@0:8^{sqlite3_stmt=}16{?={?=iiiiiiii}{?=iiiii}}24Q76Q84
v32@0:8@16@?24
v44@0:8@16@24@32B40
Q24@0:8@16
B32@0:8Q16@24
Q32@0:8@16Q24
v32@0:8Q16@24
v32@0:8@16d24
@48@0:8@16@24^@32@40
@48@0:8Q16@24^@32@40
B36@0:8@16B24^@28
v32@0:8@16^{sqlite3_stmt=}24
v40@0:8@16q24^{sqlite3_stmt=}32
v40@0:8@16@24@32
Q48@0:8@16@24@32@40
v32@0:8@16@24
B40@0:8@16@24@32
d16@0:8
v24@0:8d16
@"NSString"
@"CRPluginManager"
@"CRSQLiteConnectionPool"
@"CRRecentsMigrator"
@"<CRAccountAdaptor>"
@"NSLock"
^{__CFDictionary=}
@"CRDelayedWorkQueue"
@"CRUbiquitousCoordinator"
@"NSObject<OS_os_transaction>"
v28@0:8i16@20
B28@0:8@16i24
@"<CRRecentsMigratorDelegate>"
@"NSXPCConnection"
v56@0:8@16@24@32@40@?48
v32@0:8@"CRSearchQuery"16@?<v@?@"NSArray"@"NSError">24
v56@0:8@"NSArray"16@"NSString"24@"NSString"32@"NSString"40@?<v@?@"NSError">48
v40@0:8@"NSArray"16@"NSArray"24@"NSString"32
v24@0:8@?<v@?@"NSError">16
@24@0:8@?16
@"CRDClient"
r*16@0:8
i16@0:8
^{sqlite3_stmt=}24@0:8@16
i20@0:8i16
^{sqlite3=}16@0:8
^{sqlite3=}
@"NSObject<OS_os_log>"
@"NSSet"16@0:8
@"CNCache"
@"NSLocale"
@32@0:8@16d24
v32@0:8@16q24
v32@0:8@"<CRAccountAdaptor>"16q24
@"<CRUbiquitousCoordinatorDelegate>"
@32@0:8@16Q24
@"<CRSQLiteConnectionPoolDelegate>"
@"NSObject<OS_dispatch_semaphore>"
@24@0:8r*16
@"NSCache"
@"CRPhoneSearch"
@"NSDictionary"
@"NSMutableArray"
@32@0:8^{__CFString=}16^{__CFString=}24
B32@0:8r*16Q24
@"NSSet"
@24@0:8#16
@"<CRAddressHandler>"
@"CRAddressHandlerIdentity"
B24@0:8@"NSString"16
@40@0:8@16@24@32
@"CRMailAccountAnalyzer"
@"<CNCancelable>"
@"NSUserDefaults"
@"<CRAccountAdaptorDelegate>"
B28@0:8r*16i24
B24@0:8r*16
@36@0:8@16@24i32
@28@0:8@16i24
@"NSArray"
@"NSData"
@32@0:8@16@?24
dropping unentitled connection %{public}@
dropping connection %{public}@ because library is not available (probable cause: device not unlocked after boot)
Connection %p for %{public}@ was invalidated.
Connection %p for %{public}@ was interrupted.
Warning: getting writer connection on the main thread
No hash for contact %@
canceling any pending expunge for domain %{public}@
performing pending expunge for domain %{public}@
scheduled pending expunge after %.2fs for domain %{public}@
No hash for old recent with rowid %@ and kind %@
Found %lu recents over age limit for domain %{public}@
No hash for recent with rowid %@
Found %lu individual recents over hard limit for domain %{public}@
No hash for group recent with rowid %@
Found %lu group recents over hard limit for domain %{public}@
Expunging %lu recents over limit for bundle identifier %{public}@
No hash for row %@
No hash for recent %@
**** SQLITE ERROR: %s
deleting contact from '%{public}@' with record hash: [%{public}@]
deleting recent from remote store for domain '%{public}@' with key %{public}@
No hash for domain %@
deleting contacts from '%{public}@' with recent IDs: [%{public}@]
deleting recents from remote store for domain '%{public}@' with keys %{public}@
Attempt to remove invalid contact (h=%{public}@, b=%{public}@): %{public}@
Initializing KVS store (%{public}@: %{public}@)
reason:%{public}@ recentsDomain:%{public}@
Received external KVS change event: (%{public}@) %{public}@, changed keys=%{public}@
iCloud Key Value Store Over-Quota: %{public}@
After expunging, store has %lu entries
%{public}@: %{public}@
Syncing back local changes
Finished handling cloud store change
numChanges:%lu store:%{public}@ recentsDomain:%{public}@
Recent with hash '%{public}@' was removed from the cloud store, removing from local store
removing corrupted recent group %{public}@: %{public}@
calculated hash doesn't match reference key: %@ != %@, %@
MERGE: Skipping display name %{public}@
MERGE: Merged in local changes %{public}@ for contact %{public}@
MERGE: Skipping merging contact %{public}@ because we saw no dates %{public}@
Account with address %{public}@ is denying sync of contacts, skipping %{public}@
Contact with address %{public}@ has kind we don't know how to sync, %{public}@
SYNC: Skipped syncing contact because we could not calculate sync key: %{public}@
SYNC: Skipped syncing contact because there's not a sync transformer registered for address kind '%{public}@': %{public}@
SYNC: skipped syncing contact because not all members have an address or kind: %{public}@
SYNC: Skipping display name %{public}@
SYNC: Merged local changes from %{public}@: remote=%{public}@
merge=%{public}@
SYNC: Skipped syncing contact because we had no dates: %{public}@
Scheduled synchronization with iCloud store (%{public}@) %{public}@ after %.2fs
Synchronizing with iCloud store (%{public}@) %{public}@: %{public}@
Synchronizing with iCloud stores %{public}@
Removing local records for domain %{public}@
Removed %lu record(s)
Merge cloud data one-way into local with reason: %{public}@
wrong number of arguments (%d) to %s
Will execute query %{public}@ for %{public}@
Database connection unavailable
Query %{public}@ failed: %{public}@
Did execute query %{public}@ (%{public}@)
Closing sqlite connection %p
Will prepare statement for pattern: %@
Initializing cache
Cache hit
Cache miss
Prep time: %.3fms
SQLite I/O error (%d): %s
SQLite error (%d): %s
Did prepare statement in %.3fms
Observed iCloud account transition %@
Setting state for domain:%{public}@ -> %{public}@
Removing local records for all domains
Error %d on connection %p %{public}@: %s - I/O error %d (%s)
Error %d on connection %p %{public}@: %s
wrong number of arguments (%d) to icusearch
wrong number of arguments (%d) to cpsearch
wrong number of arguments (%d) to phonesearch
Renaming database %{public}@ to %{public}@
Removing database %{public}@
%s old:%{public}@ current:%{public}@
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>CFBundleDevelopmentRegion</key>
<string>English</string>
<key>CFBundleExecutable</key>
<string>recentsd</string>
<key>CFBundleIconFile</key>
<string></string>
<key>CFBundleIdentifier</key>
<string>com.apple.corerecents.recentsd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>recentsd</string>
<key>CFBundlePackageType</key>
<string>APPL</string>
<key>CFBundleShortVersionString</key>
<string>1.0</string>
<key>CFBundleSignature</key>
<string>????</string>
<key>CFBundleVersion</key>
<string>1</string>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.mobilemail.mailservices</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.tcc.allow.overridable</key>
<array>
<string>kTCCServiceCalendar</string>
<string>kTCCServiceReminders</string>
</array>
<key>com.apple.private.ubiquity-additional-kvstore-identifiers</key>
<array>
<string>com.apple.mail.recents</string>
<string>com.apple.facetime.recents</string>
<string>com.apple.calendar.recents</string>
<string>com.apple.eventkit.locations</string>
<string>com.apple.passbook.locations</string>
</array>
<key>com.apple.wifi.manager-access</key>
<true/>
</dict>
</plist>
0&!com.apple.mobilemail.mailservices
0+&com.apple.private.accounts.allaccounts
0V'com.apple.private.tcc.allow.overridable0+
kTCCServiceCalendar
kTCCServiceReminders0
9com.apple.private.ubiquity-additional-kvstore-identifiers0
com.apple.mail.recents
com.apple.facetime.recents
com.apple.calendar.recents
com.apple.eventkit.locations
com.apple.passbook.locations0"
com.apple.wifi.manager-access
