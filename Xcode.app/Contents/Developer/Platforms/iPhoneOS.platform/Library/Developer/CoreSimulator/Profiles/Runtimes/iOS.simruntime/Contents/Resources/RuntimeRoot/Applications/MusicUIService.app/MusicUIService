T@"UIWindow",W,N,V_activeWindow
T#,R
_application:willConnectCanvas:
T@"<MusicUIServiceAppEnvironmentDelegate>",W,N,V_delegate
_center
T@"BSProcessHandle",&,N,V_appHandle
activationState
T@"MPAVRoutingController",&,N,V_routingController
availableRoutes
T@"MTMaterialView",&,N,V_materialView
cleanup
T@"MediaControlsLanguageOptionsViewController",&,N,V_languageOptionsViewController
dismiss
T@"NSMutableDictionary",&,N,V_environments
isProxy
T@"NSString",C,N,V_associatedBundleID
locationInView:
T@"NSString",R,C
refreshNavigationStackForLaunch
T@"NSXPCConnection",&,N,V_connection
removeObserver:
T@"UITapGestureRecognizer",&,N,V_tapGestureRecognizer
setContentMode:
T@"UIWindow",&,N
startPrewarming
TB,N,V_appMustBeRunning
viewControllerForConfiguration:
TB,N,V_receivedResponse
willMoveToParentViewController:
.cxx_destruct
T@"<MPMediaControlsProtocol>",&,N,V_hostProxy
_candidateRoute
T@"AVOutputDevice",&,N,V_candidateOutputDevice
_window
T@"MPAVRoute",&,N,V_candidateRoute
applicationWillEnterForeground:
T@"MPMediaControlsConfiguration",&,N,V_configuration
beginDiscoveryForCandidateRoute
T@"MediaControlsEndpointsViewController",&,N,V_endpointViewController
dealloc
T@"MusicUIServiceCarDisplayBrowsableContentViewController",&,N,V_contentViewController
dismissalReason
T@"NSObject<OS_dispatch_semaphore>",&,N,V_discoverySemaphore
launchRequested
T@"NSString",C,N,V_stateName
T@"NSString",R,C,N,V_applicationIdentifier
release
T@"RBSAssertion",&,N,V_processAssertion
serviceWithDefaultShellEndpoint
T@"UIViewController<MRUViewServiceViewController>",&,N,V_remoteViewController
setDesiredHardwareButtonEvents:
T@"UIWindow",&,N,V_window
traitCollection
TB,N,V_launchRequested
viewWillAppear:
TQ,N,V_dismissalReason
TQ,R
Td,N,V_contentWidth
T{CGPoint=dd},N,V_center
_FBSScene
_activeWindow
_appHandle
_appMustBeRunning
_appearState
_application:didDiscardCanvasDefinitions:
_application:didReceiveViewServiceRequestForViewControllerClassName:
_application:handleSiriTask:
_application:statusBarTouchesEnded:
_application:willCreateCanvasWithDefinition:withOptions:
_applicationIdentifier
_associatedBundleID
_bundleIDsToStacks
_canShowWhileLocked
_candidateOutputDevice
_carScreen
_configuration
_connection
_contentViewController
_contentWidth
_createAnimationForPresenting:completion:
_delegate
_discoverySemaphore
_dismissalReason
_displayedViewControllerKey
_endpointViewController
_environments
_firstLaunchCompleted
_hostProxy
_initWithFrame:debugName:windowScene:
_isCarScreen
_isSecureForRemoteViewService
_keyWindowForScreen:
_labelColor
_languageOptionsViewController
_launchRequested
_launchTargetApp
_launchTargetAppIfNecessary
_materialView
_needsSwitch
_nowPlayingViewController
_performSwitchToNowPlayingForBundleID:showNowPlaying:
_processAssertion
_receivedResponse
_remoteViewController
_remoteViewControllerProxy
_routingController
_sceneWillEnterForeground:
_screenDidConnect:
_screenDidDisconnect:
_screenManager
_setEndpoint:
_setHeaderContentViewController:
_shouldRemoveViewFromHierarchyOnDisappear
_stateName
_switchToNowPlaying
_tapGestureRecognizer
_transitionToVisible:
_userInterfaceIdiom
acquireWithError:
actionWithTitle:style:handler:
activateConstraints:
activeWindow
addAction:
addAnimations:
addChildViewController:
addCompletion:
addGestureRecognizer:
addObserver:selector:name:object:
addSubview:
alertControllerWithTitle:message:preferredStyle:
appEnvironmentWillDisconnect:
appHandle
appMustBeRunning
application:configurationForConnectingSceneSession:options:
application:continueUserActivity:restorationHandler:
application:didChangeStatusBarFrame:
application:didChangeStatusBarOrientation:
application:didDecodeRestorableStateWithCoder:
application:didDiscardSceneSessions:
application:didFailToContinueUserActivityWithType:error:
application:didFailToRegisterForRemoteNotificationsWithError:
application:didFinishLaunchingSuspendedWithOptions:
application:didFinishLaunchingWithOptions:
application:didReceiveLocalNotification:
application:didReceiveRemoteNotification:
application:didReceiveRemoteNotification:fetchCompletionHandler:
application:didRegisterForRemoteNotificationsWithDeviceToken:
application:didRegisterUserNotificationSettings:
application:didUpdateUserActivity:
application:handleActionWithIdentifier:forLocalNotification:completionHandler:
application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:
application:handleEventsForBackgroundURLSession:completionHandler:
application:handleIntent:completionHandler:
application:handleOpenURL:
application:handleWatchKitExtensionRequest:reply:
application:handlerForIntent:
application:openURL:options:
application:openURL:sourceApplication:annotation:
application:performActionForShortcutItem:completionHandler:
application:performFetchWithCompletionHandler:
application:shouldAllowExtensionPointIdentifier:
application:shouldRestoreApplicationState:
application:shouldRestoreSecureApplicationState:
application:shouldSaveApplicationState:
application:shouldSaveSecureApplicationState:
application:supportedInterfaceOrientationsForWindow:
application:userAcceptedCloudKitShareWithMetadata:
application:userDidAcceptCloudKitShareWithMetadata:
application:viewControllerWithRestorationIdentifierPath:coder:
application:willChangeStatusBarFrame:
application:willChangeStatusBarOrientation:duration:
application:willContinueUserActivityWithType:
application:willEncodeRestorableStateWithCoder:
application:willFinishLaunchingWithOptions:
applicationDidBecomeActive:
applicationDidEnterBackground:
applicationDidFinishLaunching:
applicationDidReceiveMemoryWarning:
applicationIdentifier
applicationProtectedDataDidBecomeAvailable:
applicationProtectedDataWillBecomeUnavailable:
applicationShouldAutomaticallyLocalizeKeyCommands:
applicationShouldRequestHealthAuthorization:
applicationSignificantTimeChange:
applicationWillResignActive:
applicationWillTerminate:
arrayWithObjects:count:
associatedBundleID
attributeWithDomain:name:
autorelease
beginGeneratingLibraryChangeNotifications
bottomAnchor
bounds
candidateOutputDevice
candidateRoute
center
centerXAnchor
childViewControllerForStatusBarHidden
class
configuration
configurationWithPointSize:weight:
configurePresentation
configureWithContext:completion:
conformsToProtocol:
connection
connectionWithEndpoint:
constraintEqualToAnchor:
constraintEqualToAnchor:constant:
constraintEqualToConstant:
contentViewController
contentWidth
countByEnumeratingWithState:objects:count:
currentStack
customRowDidTap:
deactivate
debugDescription
defaultCenter
defaultMediaLibrary
delegate
description
deviceID
dictionaryWithObjects:forKeys:count:
didLoadOptionsForLanguageOptionsViewController:
didMoveToParentViewController:
discoverySemaphore
dismissLanguageOptionsViewController:
dismissWithCompletion:
endUpdates
endpointViewController
enumerateObjectsUsingBlock:
environments
events
fetchCandidateOutputDevice
firstObject
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveEvent:
gestureRecognizer:shouldReceivePress:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizerShouldBegin:
handleButtonActions:
hash
hostProxy
identifier
identifierWithPid:
init
initWithBundleID:stack:
initWithDataSource:name:
initWithExplanation:target:attributes:
initWithListenerEndpoint:
initWithRouteUID:
initWithStateContext:
initWithTarget:action:
interfaceWithProtocol:
invalidate
isEqual:
isEqualToString:
isKindOfClass:
isMemberOfClass:
languageOptionsViewController
lastPathComponent
layoutIfNeeded
leftAnchor
length
likelyExternalDestinations
localizedStringForKey:value:table:
longFormVideoRoutingSessionManager
mainBundle
makeKeyAndVisible
materialView
materialViewWithRecipe:configuration:initialWeighting:
monitorSendRight:withHandler:
name
object
objectForKey:
objectForKeyedSubscript:
openApplication:withOptions:completion:
openConnection
optionsWithDictionary:
outputDeviceDescriptions
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
pointInside:withEvent:
preferredContentSize
preferredFocusEnvironments
prefersStatusBarHidden
presentAlert
presentErrorAlert
presentingAppBundleID
processAssertion
proxiedApplicationBundleIdentifier
receivedResponse
remoteObjectProxyWithErrorHandler:
remoteViewController
removeFromParentViewController
removeFromSuperview
removeObjectForKey:
respondsToSelector:
resume
retain
retainCount
rightAnchor
role
routeUID
routingContextUID
routingController
routingController:didFailToPickRouteWithError:
routingController:pickedRouteDidChange:
routingController:pickedRoutesDidChange:
routingController:shouldHijackRoute:alertStyle:busyRouteName:presentingAppName:completion:
routingController:volumeControlAvailabilityDidChange:
routingControllerAvailableRoutesDidChange:
routingControllerDidPauseFromActiveRouteChange:
routingControllerExternalScreenTypeDidChange:
saveCurrentStack
scene:continueUserActivity:
scene:didFailToContinueUserActivityWithType:error:
scene:didUpdateUserActivity:
scene:openURLContexts:
scene:restoreInteractionStateWithUserActivity:
scene:willConnectToSession:options:
scene:willContinueUserActivityWithType:
sceneDidBecomeActive:
sceneDidDisconnect:
sceneDidEnterBackground:
sceneWillEnterForeground:
sceneWillResignActive:
selectRoute:operation:completion:
self
setAccessibilityLabel:
setActiveWindow:
setAllowsAlertStacking:
setAllowsMenuButtonDismissal:
setAlpha:
setAppHandle:
setAppMustBeRunning:
setAssociatedBundleID:
setAttribute:forKey:error:
setCandidateOutputDevice:
setCandidateRoute:
setCenter:
setConfiguration:
setConnection:
setContentViewController:
setContentWidth:
setCustomRowTappedBlock:
setDelegate:
setDelegateClass:
setDiscoveryMode:
setDiscoverySemaphore:
setDismissalAnimationStyle:
setDismissalBlock:
setDismissalReason:
setEnabled:
setEndpointRoute:
setEndpointViewController:
setEnvironments:
setExportedInterface:
setExportedObject:
setFrame:
setHostProxy:
setImage:
setInvalidationHandler:
setLanguageOptionsViewController:
setLaunchRequested:
setMaterialView:
setNeedsFocusUpdate
setNeedsLayout
setNeedsStatusBarAppearanceUpdate
setObject:forKey:
setObject:forKeyedSubscript:
setOrientationChangedEventsEnabled:
setPreferredSymbolConfiguration:
setProcessAssertion:
setReceivedResponse:
setRemoteObjectInterface:
setRemoteViewController:
setRootViewController:
setRoutingController:
setScene:
setSceneDeactivationReason:
setScrollViewInsets:
setStateName:
setSwipeDismissalStyle:
setTapGestureRecognizer:
setTappedCustomRowIdentifier:
setTintColor:
setTransform:
setTranslatesAutoresizingMaskIntoConstraints:
setUserInteractionEnabled:
setWeighting:
setWindow:
settings
sharedAVSystemController
shouldPreventAutorotation
showViewController:sender:
sizeForChildContentContainer:withParentContainerSize:
standardSpringAnimator
startAnimation
stateContextForNowPlaying
stateName
stateRestorationActivityForScene:
stringWithFormat:
superclass
switchToState:
systemImageNamed:
systemRouteWithContextUID:
tapGestureRecognizer
targetWithProcessIdentifier:
taskNameRight
topAnchor
traitCollectionDidChange:
transitionToVisible:animated:
unarchivedObjectOfClass:fromData:error:
unpickTVRoutes
updateMediaControlsWithConfiguration:
userInfo
userInterfaceIdiom
view
viewDidDisappear:
viewDidLayoutSubviews
viewDidLoad
viewIfLoaded
viewWillDisappear:
viewWillLayoutSubviews
widthAnchor
window
xpcEndpoint
zone
MEDIUM_CONFIDENCE_ALERT_AIRPLAY_ERROR
MusicUIService
MEDIUM_CONFIDENCE_ALERT_AIRPLAY_ERROR_GENERIC
MEDIUM_CONFIDENCE_ALERT_OK
v16@?0@"UIAlertAction"8
v8@?0
Medium Confidence Picker
MEDIUM_CONFIDENCE_ALERT_TITLE
MEDIUM_CONFIDENCE_ALERT_DESCRIPTION
airplayvideo
DeviceClassNumber
MEDIUM_CONFIDENCE_ALERT_LOCAL_PLAYBACK_IPHONE
MEDIUM_CONFIDENCE_ALERT_LOCAL_PLAYBACK_IPAD
MEDIUM_CONFIDENCE_ALERT_LOCAL_PLAYBACK_IPOD
v16@?0@"NSError"8
MEDIUM_CONFIDENCE_ALERT_CANCEL
v24@?0@"SBUIRemoteAlertButtonAction"8^B16
v16@?0q8
v16@?0@?<v@?>8
v16@?0@"NSString"8
nowplaying
<%@:%p - state: %@, associatedBundleID: %@>
current
show-now-playing
v24@?0@"UIOpenURLContext"8^B16
com.apple.music
v24@?0@"BSProcessHandle"8@"NSError"16
Creating XPC connection to host app.
XPC connection to host app invalidated.
Failed to obtain a candidate device.
Picked local device for medium confidence playback
Failed to discover a candidate route for candidate output device %@
Failed to pick the candidate route %@ with error %@
Picked medium confidence candidate route %@
Cancelled the medium confidence prompt
Successfully deserialized the initial media controls configuration.
Error occured while atempting to retrive remote proxy to open connection: %@
Attempting to open connection to host app.
Dismissing view service due to home button event.
Car screen did connect.
Car screen did disconnect.
Received updated media controls configuration from:  %@
Custom row did tap: %@
Failed to acquire assertion. %{public}@
Open application completed. service:%{public}@, process:%{public}@, error:%{public}@
Assigning environment for app %{public}@
No available environment for app %{public}@
MPMediaControlsProtocol
NSObject
MPMediaControlsRemoteViewControllerProtocol
MusicUIServiceMediaControlsMediumConfidenceViewController
MPAVRoutingControllerDelegate
MusicUIServiceApplication
MusicUIServiceLanguageOptionsViewController
MediaControlsLanguageOptionsViewControllerDelegate
UIGestureRecognizerDelegate
MusicUIServiceScreenManager
MusicUIServiceMediaControlsViewController
MusicUIServiceNowPlayingViewController
MusicUIDisplayNowPlayingStateContext
MusicUIServiceCarDisplayBrowsableContentViewController
MusicUIServiceDisplayNowPlayingInterface
MSVCarDisplayBrowsableContentViewController
MusicUIServiceAppEnvironment
UISceneDelegate
MusicUIServiceAppDelegate
UIApplicationDelegatePrivate
MusicUIServiceAppEnvironmentDelegate
UIApplicationDelegate
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v16@0:8
v24@0:8Q16
v24@0:8@16
v24@0:8@"NSString"16
v24@0:8@"MPMediaControlsConfiguration"16
v32@0:8@16@24
v64@0:8@16@24q32@40@48@?56
v28@0:8@16B24
v24@0:8@"MPAVRoutingController"16
v32@0:8@"MPAVRoutingController"16@"NSError"24
v32@0:8@"MPAVRoutingController"16@"NSArray"24
v32@0:8@"MPAVRoutingController"16@"MPAVRoute"24
v64@0:8@"MPAVRoutingController"16@"MPAVRoute"24q32@"NSString"40@"NSString"48@?<v@?B>56
v28@0:8@"MPAVRoutingController"16B24
v20@0:8B16
@24@0:8@16
v32@0:8@16@?24
@"NSXPCConnection"
@"<MPMediaControlsProtocol>"
@"MPMediaControlsConfiguration"
@"AVOutputDevice"
@"MPAVRoute"
@"MPAVRoutingController"
@"NSObject<OS_dispatch_semaphore>"
v24@0:8@"MediaControlsLanguageOptionsViewController"16
B32@0:8@16@24
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
B32@0:8@"UIGestureRecognizer"16@"UIEvent"24
v28@0:8B16@?20
{CGPoint=dd}16@0:8
v32@0:8{CGPoint=dd}16
@"MTMaterialView"
@"MediaControlsLanguageOptionsViewController"
@"UITapGestureRecognizer"
{CGPoint="x"d"y"d}
@"UIScreen"
v24@0:8@?16
{CGSize=dd}40@0:8@16{CGSize=dd}24
d16@0:8
v24@0:8d16
@"MediaControlsEndpointsViewController"
@"UIViewController<MRUViewServiceViewController>"
@"NSString"
v24@0:8@"MusicUIDisplayNowPlayingStateContext"16
@"MCDPlayableContentViewController"
@"NSMutableDictionary"
v40@0:8@16@24@32
v40@0:8@"UIScene"16@"UISceneSession"24@"UISceneConnectionOptions"32
v24@0:8@"UIScene"16
v32@0:8@"UIScene"16@"NSSet"24
@"NSUserActivity"24@0:8@"UIScene"16
v32@0:8@"UIScene"16@"NSUserActivity"24
v32@0:8@"UIScene"16@"NSString"24
v40@0:8@"UIScene"16@"NSString"24@"NSError"32
@"<MusicUIServiceAppEnvironmentDelegate>"
@"UIWindow"
@"RBSAssertion"
@"BSProcessHandle"
@"MusicUIServiceCarDisplayBrowsableContentViewController"
@40@0:8@16@24@32
v32@0:8@"UIApplication"16@"NSDictionary"24
v32@0:8@"UIApplication"16@"UIEvent"24
v32@0:8@"UIApplication"16@"NSString"24
v32@0:8@"UIApplication"16@"AFSiriTask"24
v32@0:8@"UIApplication"16@"CKShareMetadata"24
v32@0:8@"UIApplication"16@"UICanvas"24
@"_UICanvasDefinition"40@0:8@"UIApplication"16@"_UICanvasDefinition"24@"NSDictionary"32
v32@0:8@"UIApplication"16@"NSSet"24
v24@0:8@"MusicUIServiceAppEnvironment"16
B48@0:8@16@24@32@40
B40@0:8@16@24@32
v40@0:8@16q24d32
v32@0:8@16q24
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v40@0:8@16@24@?32
@32@0:8@16@24
Q32@0:8@16@24
B40@0:8@16@24@?32
v24@0:8@"UIApplication"16
B32@0:8@"UIApplication"16@"NSDictionary"24
B32@0:8@"UIApplication"16@"NSURL"24
B48@0:8@"UIApplication"16@"NSURL"24@"NSString"32@40
B40@0:8@"UIApplication"16@"NSURL"24@"NSDictionary"32
v40@0:8@"UIApplication"16q24d32
v32@0:8@"UIApplication"16q24
v56@0:8@"UIApplication"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@"UIApplication"16@"UIUserNotificationSettings"24
v32@0:8@"UIApplication"16@"NSData"24
v32@0:8@"UIApplication"16@"NSError"24
v32@0:8@"UIApplication"16@"UILocalNotification"24
v48@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@"NSDictionary"40@?<v@?>48
v48@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@"NSDictionary"40@?<v@?>48
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?Q>32
v32@0:8@"UIApplication"16@?<v@?Q>24
v40@0:8@"UIApplication"16@"UIApplicationShortcutItem"24@?<v@?B>32
v40@0:8@"UIApplication"16@"NSString"24@?<v@?>32
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?@"NSDictionary">32
@32@0:8@"UIApplication"16@"INIntent"24
v40@0:8@"UIApplication"16@"INIntent"24@?<v@?@"INIntentResponse">32
Q32@0:8@"UIApplication"16@"UIWindow"24
B32@0:8@"UIApplication"16@"NSString"24
@"UIViewController"40@0:8@"UIApplication"16@"NSArray"24@"NSCoder"32
B32@0:8@"UIApplication"16@"NSCoder"24
v32@0:8@"UIApplication"16@"NSCoder"24
B40@0:8@"UIApplication"16@"NSUserActivity"24@?<v@?@"NSArray">32
v40@0:8@"UIApplication"16@"NSString"24@"NSError"32
v32@0:8@"UIApplication"16@"NSUserActivity"24
@"UISceneConfiguration"40@0:8@"UIApplication"16@"UISceneSession"24@"UISceneConnectionOptions"32
B24@0:8@"UIApplication"16
@"UIWindow"16@0:8
v24@0:8@"UIWindow"16
@"MusicUIServiceScreenManager"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>SBStarkCapable</key>
<true/>
<key>application-identifier</key>
<string>com.apple.MusicUIService</string>
<key>com.apple.DeviceAccess</key>
<true/>
<key>com.apple.PairingManager.Read</key>
<true/>
<key>com.apple.PairingManager.RemovePeer</key>
<true/>
<key>com.apple.PairingManager.Write</key>
<true/>
<key>com.apple.QuartzCore.secure-mode</key>
<true/>
<key>com.apple.UIKit.vends-view-services</key>
<true/>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.avfoundation.allow-identifying-output-device-details</key>
<true/>
<key>com.apple.avfoundation.allow-system-wide-context</key>
<true/>
<key>com.apple.avfoundation.allows-set-output-device</key>
<true/>
<key>com.apple.coreduetd.allow</key>
<true/>
<key>com.apple.developer.homekit</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.homekit.private-spi-access</key>
<true/>
<key>com.apple.mediaremote.allow</key>
<array>
<string>TVPairing</string>
</array>
<key>com.apple.mediaremote.send-commands</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.attribution.implicitly-assumed-identity</key>
<dict>
<key>type</key>
<string>path</string>
<key>value</key>
<string>/Applications/MusicUIService.app</string>
</dict>
<key>com.apple.private.carkit.app</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceWillow</string>
<string>kTCCServiceMediaLibrary</string>
</array>
<key>com.apple.runningboard.assertions.music</key>
<true/>
<key>com.apple.runningboard.launchprocess</key>
<true/>
<key>com.apple.runningboard.primitiveattribute</key>
<true/>
<key>com.apple.runningboard.trustedtarget</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.telephonyutilities.callservicesdaemon.callcapabilities</string>
<string>com.apple.telephonyutilities.callservicesdaemon.conversationmanager</string>
<string>com.apple.telephonyutilities.callservicesdaemon.neighborhood-activities</string>
<string>com.apple.telephonyutilities.callservicesdaemon.callstatecontroller</string>
<string>com.apple.coremedia.endpointpicker.xpc</string>
<string>com.apple.coremedia.routediscoverer.xpc</string>
<string>com.apple.coremedia.routingcontext.xpc</string>
<string>com.apple.coremedia.endpointremotecontrolsession.xpc</string>
<string>com.apple.PairingManager</string>
<string>com.apple.carkit.app.service</string>
</array>
<key>com.apple.security.iokit-user-client-class</key>
<array>
<string>AGXCommandQueue</string>
<string>AGXDevice</string>
<string>AGXDeviceUserClient</string>
<string>AGXSharedUserClient</string>
<string>AppleJPEGDriverUserClient</string>
<string>IOAccelContext</string>
<string>IOAccelContext2</string>
<string>IOAccelDevice</string>
<string>IOAccelDevice2</string>
<string>IOAccelSharedUserClient</string>
<string>IOAccelSharedUserClient2</string>
<string>IOAccelSubmitter2</string>
<string>IOMobileFramebufferUserClient</string>
<string>IOSurfaceAcceleratorClient</string>
<string>IOSurfaceRootUserClient</string>
</array>
<key>com.apple.sharing.DeviceDiscovery</key>
<true/>
<key>com.apple.sharing.Services</key>
<true/>
<key>com.apple.sharing.Session</key>
<true/>
<key>com.apple.springboard-ui.client</key>
<true/>
<key>com.apple.springboard.activateRemoteAlert</key>
<true/>
<key>com.apple.springboard.remote-alert</key>
<true/>
<key>com.apple.springboard.stark.activateBackgroundProvider</key>
<true/>
<key>com.apple.telephonyutilities.callservicesd</key>
<array>
<string>modify-calls</string>
<string>access-calls</string>
</array>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
<string>com.apple.MediaRemote.pairing</string>
<string>com.apple.sharing.appleidauthentication</string>
</array>
</dict>
</plist>
SBStarkCapable
application-identifier
com.apple.MusicUIService0
com.apple.DeviceAccess
com.apple.PairingManager.Read
0(#com.apple.PairingManager.RemovePeer
com.apple.PairingManager.Write
0% com.apple.QuartzCore.secure-mode
0(#com.apple.UIKit.vends-view-services
0/*com.apple.accounts.appleaccount.fullaccess
0C>com.apple.avfoundation.allow-identifying-output-device-details
050com.apple.avfoundation.allow-system-wide-context
04/com.apple.avfoundation.allows-set-output-device
com.apple.coreduetd.allow
com.apple.developer.homekit
0,'com.apple.frontboard.launchapplications
0)$com.apple.homekit.private-spi-access
com.apple.mediaremote.allow0
TVPairing0(#com.apple.mediaremote.send-commands
0+&com.apple.private.accounts.allaccounts
0v9com.apple.private.attribution.implicitly-assumed-identity
90
type
path0)
value /Applications/MusicUIService.app0!
com.apple.private.carkit.app
04/com.apple.private.coreservices.canmaplsdatabase
com.apple.private.tcc.allow0,
kTCCServiceWillow
kTCCServiceMediaLibrary0,'com.apple.runningboard.assertions.music
0)$com.apple.runningboard.launchprocess
0.)com.apple.runningboard.primitiveattribute
0)$com.apple.runningboard.trustedtarget
64com.apple.security.exception.mach-lookup.global-name0
@com.apple.telephonyutilities.callservicesdaemon.callcapabilitiesCcom.apple.telephonyutilities.callservicesdaemon.conversationmanagerGcom.apple.telephonyutilities.callservicesdaemon.neighborhood-activitiesCcom.apple.telephonyutilities.callservicesdaemon.callstatecontroller&com.apple.coremedia.endpointpicker.xpc'com.apple.coremedia.routediscoverer.xpc&com.apple.coremedia.routingcontext.xpc4com.apple.coremedia.endpointremotecontrolsession.xpc
com.apple.PairingManager
com.apple.carkit.app.service0
k*com.apple.security.iokit-user-client-class0
AGXCommandQueue
AGXDevice
AGXDeviceUserClient
AGXSharedUserClient
AppleJPEGDriverUserClient
IOAccelContext
IOAccelContext2
IOAccelDevice
IOAccelDevice2
IOAccelSharedUserClient
IOAccelSharedUserClient2
IOAccelSubmitter2
IOMobileFramebufferUserClient
IOSurfaceAcceleratorClient
IOSurfaceRootUserClient0&!com.apple.sharing.DeviceDiscovery
com.apple.sharing.Services
com.apple.sharing.Session
com.apple.springboard-ui.client
0.)com.apple.springboard.activateRemoteAlert
0'"com.apple.springboard.remote-alert
0;6com.apple.springboard.stark.activateBackgroundProvider
0J*com.apple.telephonyutilities.callservicesd0
modify-callsaccess-calls0i
keychain-access-groups0O
apple
com.apple.MediaRemote.pairing'com.apple.sharing.appleidauthentication
T@"UIWindow",W,N,V_activeWindow
T#,R
_application:willConnectCanvas:
T@"<MusicUIServiceAppEnvironmentDelegate>",W,N,V_delegate
_center
T@"BSProcessHandle",&,N,V_appHandle
activationState
T@"MPAVRoutingController",&,N,V_routingController
availableRoutes
T@"MTMaterialView",&,N,V_materialView
cleanup
T@"MediaControlsLanguageOptionsViewController",&,N,V_languageOptionsViewController
dismiss
T@"NSMutableDictionary",&,N,V_environments
isProxy
T@"NSString",C,N,V_associatedBundleID
locationInView:
T@"NSString",R,C
refreshNavigationStackForLaunch
T@"NSXPCConnection",&,N,V_connection
removeObserver:
T@"UITapGestureRecognizer",&,N,V_tapGestureRecognizer
setContentMode:
T@"UIWindow",&,N
startPrewarming
TB,N,V_appMustBeRunning
viewControllerForConfiguration:
TB,N,V_receivedResponse
willMoveToParentViewController:
.cxx_destruct
T@"<MPMediaControlsProtocol>",&,N,V_hostProxy
_candidateRoute
T@"AVOutputDevice",&,N,V_candidateOutputDevice
_window
T@"MPAVRoute",&,N,V_candidateRoute
applicationWillEnterForeground:
T@"MPMediaControlsConfiguration",&,N,V_configuration
beginDiscoveryForCandidateRoute
T@"MediaControlsEndpointsViewController",&,N,V_endpointViewController
dealloc
T@"MusicUIServiceCarDisplayBrowsableContentViewController",&,N,V_contentViewController
dismissalReason
T@"NSObject<OS_dispatch_semaphore>",&,N,V_discoverySemaphore
launchRequested
T@"NSString",C,N,V_stateName
T@"NSString",R,C,N,V_applicationIdentifier
release
T@"RBSAssertion",&,N,V_processAssertion
serviceWithDefaultShellEndpoint
T@"UIViewController<MRUViewServiceViewController>",&,N,V_remoteViewController
setDesiredHardwareButtonEvents:
T@"UIWindow",&,N,V_window
traitCollection
TB,N,V_launchRequested
viewWillAppear:
TQ,N,V_dismissalReason
TQ,R
Td,N,V_contentWidth
T{CGPoint=dd},N,V_center
_FBSScene
_activeWindow
_appHandle
_appMustBeRunning
_appearState
_application:didDiscardCanvasDefinitions:
_application:didReceiveViewServiceRequestForViewControllerClassName:
_application:handleSiriTask:
_application:statusBarTouchesEnded:
_application:willCreateCanvasWithDefinition:withOptions:
_applicationIdentifier
_associatedBundleID
_bundleIDsToStacks
_canShowWhileLocked
_candidateOutputDevice
_carScreen
_configuration
_connection
_contentViewController
_contentWidth
_createAnimationForPresenting:completion:
_delegate
_discoverySemaphore
_dismissalReason
_displayedViewControllerKey
_endpointViewController
_environments
_firstLaunchCompleted
_hostProxy
_initWithFrame:debugName:windowScene:
_isCarScreen
_isSecureForRemoteViewService
_keyWindowForScreen:
_labelColor
_languageOptionsViewController
_launchRequested
_launchTargetApp
_launchTargetAppIfNecessary
_materialView
_needsSwitch
_nowPlayingViewController
_performSwitchToNowPlayingForBundleID:showNowPlaying:
_processAssertion
_receivedResponse
_remoteViewController
_remoteViewControllerProxy
_routingController
_sceneWillEnterForeground:
_screenDidConnect:
_screenDidDisconnect:
_screenManager
_setEndpoint:
_setHeaderContentViewController:
_shouldRemoveViewFromHierarchyOnDisappear
_stateName
_switchToNowPlaying
_tapGestureRecognizer
_transitionToVisible:
_userInterfaceIdiom
acquireWithError:
actionWithTitle:style:handler:
activateConstraints:
activeWindow
addAction:
addAnimations:
addChildViewController:
addCompletion:
addGestureRecognizer:
addObserver:selector:name:object:
addSubview:
alertControllerWithTitle:message:preferredStyle:
appEnvironmentWillDisconnect:
appHandle
appMustBeRunning
application:configurationForConnectingSceneSession:options:
application:continueUserActivity:restorationHandler:
application:didChangeStatusBarFrame:
application:didChangeStatusBarOrientation:
application:didDecodeRestorableStateWithCoder:
application:didDiscardSceneSessions:
application:didFailToContinueUserActivityWithType:error:
application:didFailToRegisterForRemoteNotificationsWithError:
application:didFinishLaunchingSuspendedWithOptions:
application:didFinishLaunchingWithOptions:
application:didReceiveLocalNotification:
application:didReceiveRemoteNotification:
application:didReceiveRemoteNotification:fetchCompletionHandler:
application:didRegisterForRemoteNotificationsWithDeviceToken:
application:didRegisterUserNotificationSettings:
application:didUpdateUserActivity:
application:handleActionWithIdentifier:forLocalNotification:completionHandler:
application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:
application:handleEventsForBackgroundURLSession:completionHandler:
application:handleIntent:completionHandler:
application:handleOpenURL:
application:handleWatchKitExtensionRequest:reply:
application:handlerForIntent:
application:openURL:options:
application:openURL:sourceApplication:annotation:
application:performActionForShortcutItem:completionHandler:
application:performFetchWithCompletionHandler:
application:shouldAllowExtensionPointIdentifier:
application:shouldRestoreApplicationState:
application:shouldRestoreSecureApplicationState:
application:shouldSaveApplicationState:
application:shouldSaveSecureApplicationState:
application:supportedInterfaceOrientationsForWindow:
application:userAcceptedCloudKitShareWithMetadata:
application:userDidAcceptCloudKitShareWithMetadata:
application:viewControllerWithRestorationIdentifierPath:coder:
application:willChangeStatusBarFrame:
application:willChangeStatusBarOrientation:duration:
application:willContinueUserActivityWithType:
application:willEncodeRestorableStateWithCoder:
application:willFinishLaunchingWithOptions:
applicationDidBecomeActive:
applicationDidEnterBackground:
applicationDidFinishLaunching:
applicationDidReceiveMemoryWarning:
applicationIdentifier
applicationProtectedDataDidBecomeAvailable:
applicationProtectedDataWillBecomeUnavailable:
applicationShouldAutomaticallyLocalizeKeyCommands:
applicationShouldRequestHealthAuthorization:
applicationSignificantTimeChange:
applicationWillResignActive:
applicationWillTerminate:
arrayWithObjects:count:
associatedBundleID
attributeWithDomain:name:
autorelease
beginGeneratingLibraryChangeNotifications
bottomAnchor
bounds
candidateOutputDevice
candidateRoute
center
centerXAnchor
childViewControllerForStatusBarHidden
class
configuration
configurationWithPointSize:weight:
configurePresentation
configureWithContext:completion:
conformsToProtocol:
connection
connectionWithEndpoint:
constraintEqualToAnchor:
constraintEqualToAnchor:constant:
constraintEqualToConstant:
contentViewController
contentWidth
countByEnumeratingWithState:objects:count:
currentStack
customRowDidTap:
deactivate
debugDescription
defaultCenter
defaultMediaLibrary
delegate
description
deviceID
dictionaryWithObjects:forKeys:count:
didLoadOptionsForLanguageOptionsViewController:
didMoveToParentViewController:
discoverySemaphore
dismissLanguageOptionsViewController:
dismissWithCompletion:
endUpdates
endpointViewController
enumerateObjectsUsingBlock:
environments
events
fetchCandidateOutputDevice
firstObject
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveEvent:
gestureRecognizer:shouldReceivePress:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizerShouldBegin:
handleButtonActions:
hash
hostProxy
identifier
identifierWithPid:
init
initWithBundleID:stack:
initWithDataSource:name:
initWithExplanation:target:attributes:
initWithListenerEndpoint:
initWithRouteUID:
initWithStateContext:
initWithTarget:action:
interfaceWithProtocol:
invalidate
isEqual:
isEqualToString:
isKindOfClass:
isMemberOfClass:
languageOptionsViewController
lastPathComponent
layoutIfNeeded
leftAnchor
length
likelyExternalDestinations
localizedStringForKey:value:table:
longFormVideoRoutingSessionManager
mainBundle
makeKeyAndVisible
materialView
materialViewWithRecipe:configuration:initialWeighting:
monitorSendRight:withHandler:
name
object
objectForKey:
objectForKeyedSubscript:
openApplication:withOptions:completion:
openConnection
optionsWithDictionary:
outputDeviceDescriptions
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
pointInside:withEvent:
preferredContentSize
preferredFocusEnvironments
prefersStatusBarHidden
presentAlert
presentErrorAlert
presentingAppBundleID
processAssertion
proxiedApplicationBundleIdentifier
receivedResponse
remoteObjectProxyWithErrorHandler:
remoteViewController
removeFromParentViewController
removeFromSuperview
removeObjectForKey:
respondsToSelector:
resume
retain
retainCount
rightAnchor
role
routeUID
routingContextUID
routingController
routingController:didFailToPickRouteWithError:
routingController:pickedRouteDidChange:
routingController:pickedRoutesDidChange:
routingController:shouldHijackRoute:alertStyle:busyRouteName:presentingAppName:completion:
routingController:volumeControlAvailabilityDidChange:
routingControllerAvailableRoutesDidChange:
routingControllerDidPauseFromActiveRouteChange:
routingControllerExternalScreenTypeDidChange:
saveCurrentStack
scene:continueUserActivity:
scene:didFailToContinueUserActivityWithType:error:
scene:didUpdateUserActivity:
scene:openURLContexts:
scene:restoreInteractionStateWithUserActivity:
scene:willConnectToSession:options:
scene:willContinueUserActivityWithType:
sceneDidBecomeActive:
sceneDidDisconnect:
sceneDidEnterBackground:
sceneWillEnterForeground:
sceneWillResignActive:
selectRoute:operation:completion:
self
setAccessibilityLabel:
setActiveWindow:
setAllowsAlertStacking:
setAllowsMenuButtonDismissal:
setAlpha:
setAppHandle:
setAppMustBeRunning:
setAssociatedBundleID:
setAttribute:forKey:error:
setCandidateOutputDevice:
setCandidateRoute:
setCenter:
setConfiguration:
setConnection:
setContentViewController:
setContentWidth:
setCustomRowTappedBlock:
setDelegate:
setDelegateClass:
setDiscoveryMode:
setDiscoverySemaphore:
setDismissalAnimationStyle:
setDismissalBlock:
setDismissalReason:
setEnabled:
setEndpointRoute:
setEndpointViewController:
setEnvironments:
setExportedInterface:
setExportedObject:
setFrame:
setHostProxy:
setImage:
setInvalidationHandler:
setLanguageOptionsViewController:
setLaunchRequested:
setMaterialView:
setNeedsFocusUpdate
setNeedsLayout
setNeedsStatusBarAppearanceUpdate
setObject:forKey:
setObject:forKeyedSubscript:
setOrientationChangedEventsEnabled:
setPreferredSymbolConfiguration:
setProcessAssertion:
setReceivedResponse:
setRemoteObjectInterface:
setRemoteViewController:
setRootViewController:
setRoutingController:
setScene:
setSceneDeactivationReason:
setScrollViewInsets:
setStateName:
setSwipeDismissalStyle:
setTapGestureRecognizer:
setTappedCustomRowIdentifier:
setTintColor:
setTransform:
setTranslatesAutoresizingMaskIntoConstraints:
setUserInteractionEnabled:
setWeighting:
setWindow:
settings
sharedAVSystemController
shouldPreventAutorotation
showViewController:sender:
sizeForChildContentContainer:withParentContainerSize:
standardSpringAnimator
startAnimation
stateContextForNowPlaying
stateName
stateRestorationActivityForScene:
stringWithFormat:
superclass
switchToState:
systemImageNamed:
systemRouteWithContextUID:
tapGestureRecognizer
targetWithProcessIdentifier:
taskNameRight
topAnchor
traitCollectionDidChange:
transitionToVisible:animated:
unarchivedObjectOfClass:fromData:error:
unpickTVRoutes
updateMediaControlsWithConfiguration:
userInfo
userInterfaceIdiom
view
viewDidDisappear:
viewDidLayoutSubviews
viewDidLoad
viewIfLoaded
viewWillDisappear:
viewWillLayoutSubviews
widthAnchor
window
xpcEndpoint
zone
MEDIUM_CONFIDENCE_ALERT_AIRPLAY_ERROR
MusicUIService
MEDIUM_CONFIDENCE_ALERT_AIRPLAY_ERROR_GENERIC
MEDIUM_CONFIDENCE_ALERT_OK
v16@?0@"UIAlertAction"8
v8@?0
Medium Confidence Picker
MEDIUM_CONFIDENCE_ALERT_TITLE
MEDIUM_CONFIDENCE_ALERT_DESCRIPTION
airplayvideo
DeviceClassNumber
MEDIUM_CONFIDENCE_ALERT_LOCAL_PLAYBACK_IPHONE
MEDIUM_CONFIDENCE_ALERT_LOCAL_PLAYBACK_IPAD
MEDIUM_CONFIDENCE_ALERT_LOCAL_PLAYBACK_IPOD
v16@?0@"NSError"8
MEDIUM_CONFIDENCE_ALERT_CANCEL
v24@?0@"SBUIRemoteAlertButtonAction"8^B16
v16@?0q8
v16@?0@?<v@?>8
v16@?0@"NSString"8
nowplaying
<%@:%p - state: %@, associatedBundleID: %@>
current
show-now-playing
v24@?0@"UIOpenURLContext"8^B16
com.apple.music
v24@?0@"BSProcessHandle"8@"NSError"16
Creating XPC connection to host app.
XPC connection to host app invalidated.
Failed to obtain a candidate device.
Picked local device for medium confidence playback
Failed to discover a candidate route for candidate output device %@
Failed to pick the candidate route %@ with error %@
Picked medium confidence candidate route %@
Cancelled the medium confidence prompt
Successfully deserialized the initial media controls configuration.
Error occured while atempting to retrive remote proxy to open connection: %@
Attempting to open connection to host app.
Dismissing view service due to home button event.
Car screen did connect.
Car screen did disconnect.
Received updated media controls configuration from:  %@
Custom row did tap: %@
Failed to acquire assertion. %{public}@
Open application completed. service:%{public}@, process:%{public}@, error:%{public}@
Assigning environment for app %{public}@
No available environment for app %{public}@
MPMediaControlsProtocol
NSObject
MPMediaControlsRemoteViewControllerProtocol
MusicUIServiceMediaControlsMediumConfidenceViewController
MPAVRoutingControllerDelegate
MusicUIServiceApplication
MusicUIServiceLanguageOptionsViewController
MediaControlsLanguageOptionsViewControllerDelegate
UIGestureRecognizerDelegate
MusicUIServiceScreenManager
MusicUIServiceMediaControlsViewController
MusicUIServiceNowPlayingViewController
MusicUIDisplayNowPlayingStateContext
MusicUIServiceCarDisplayBrowsableContentViewController
MusicUIServiceDisplayNowPlayingInterface
MSVCarDisplayBrowsableContentViewController
MusicUIServiceAppEnvironment
UISceneDelegate
MusicUIServiceAppDelegate
UIApplicationDelegatePrivate
MusicUIServiceAppEnvironmentDelegate
UIApplicationDelegate
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v16@0:8
v24@0:8Q16
v24@0:8@16
v24@0:8@"NSString"16
v24@0:8@"MPMediaControlsConfiguration"16
v32@0:8@16@24
v64@0:8@16@24q32@40@48@?56
v28@0:8@16B24
v24@0:8@"MPAVRoutingController"16
v32@0:8@"MPAVRoutingController"16@"NSError"24
v32@0:8@"MPAVRoutingController"16@"NSArray"24
v32@0:8@"MPAVRoutingController"16@"MPAVRoute"24
v64@0:8@"MPAVRoutingController"16@"MPAVRoute"24q32@"NSString"40@"NSString"48@?<v@?B>56
v28@0:8@"MPAVRoutingController"16B24
v20@0:8B16
@24@0:8@16
v32@0:8@16@?24
@"NSXPCConnection"
@"<MPMediaControlsProtocol>"
@"MPMediaControlsConfiguration"
@"AVOutputDevice"
@"MPAVRoute"
@"MPAVRoutingController"
@"NSObject<OS_dispatch_semaphore>"
v24@0:8@"MediaControlsLanguageOptionsViewController"16
B32@0:8@16@24
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
B32@0:8@"UIGestureRecognizer"16@"UIEvent"24
v28@0:8B16@?20
{CGPoint=dd}16@0:8
v32@0:8{CGPoint=dd}16
@"MTMaterialView"
@"MediaControlsLanguageOptionsViewController"
@"UITapGestureRecognizer"
{CGPoint="x"d"y"d}
@"UIScreen"
v24@0:8@?16
{CGSize=dd}40@0:8@16{CGSize=dd}24
d16@0:8
v24@0:8d16
@"MediaControlsEndpointsViewController"
@"UIViewController<MRUViewServiceViewController>"
@"NSString"
v24@0:8@"MusicUIDisplayNowPlayingStateContext"16
@"MCDPlayableContentViewController"
@"NSMutableDictionary"
v40@0:8@16@24@32
v40@0:8@"UIScene"16@"UISceneSession"24@"UISceneConnectionOptions"32
v24@0:8@"UIScene"16
v32@0:8@"UIScene"16@"NSSet"24
@"NSUserActivity"24@0:8@"UIScene"16
v32@0:8@"UIScene"16@"NSUserActivity"24
v32@0:8@"UIScene"16@"NSString"24
v40@0:8@"UIScene"16@"NSString"24@"NSError"32
@"<MusicUIServiceAppEnvironmentDelegate>"
@"UIWindow"
@"RBSAssertion"
@"BSProcessHandle"
@"MusicUIServiceCarDisplayBrowsableContentViewController"
@40@0:8@16@24@32
v32@0:8@"UIApplication"16@"NSDictionary"24
v32@0:8@"UIApplication"16@"UIEvent"24
v32@0:8@"UIApplication"16@"NSString"24
v32@0:8@"UIApplication"16@"AFSiriTask"24
v32@0:8@"UIApplication"16@"CKShareMetadata"24
v32@0:8@"UIApplication"16@"UICanvas"24
@"_UICanvasDefinition"40@0:8@"UIApplication"16@"_UICanvasDefinition"24@"NSDictionary"32
v32@0:8@"UIApplication"16@"NSSet"24
v24@0:8@"MusicUIServiceAppEnvironment"16
B48@0:8@16@24@32@40
B40@0:8@16@24@32
v40@0:8@16q24d32
v32@0:8@16q24
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v40@0:8@16@24@?32
@32@0:8@16@24
Q32@0:8@16@24
B40@0:8@16@24@?32
v24@0:8@"UIApplication"16
B32@0:8@"UIApplication"16@"NSDictionary"24
B32@0:8@"UIApplication"16@"NSURL"24
B48@0:8@"UIApplication"16@"NSURL"24@"NSString"32@40
B40@0:8@"UIApplication"16@"NSURL"24@"NSDictionary"32
v40@0:8@"UIApplication"16q24d32
v32@0:8@"UIApplication"16q24
v56@0:8@"UIApplication"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@"UIApplication"16@"UIUserNotificationSettings"24
v32@0:8@"UIApplication"16@"NSData"24
v32@0:8@"UIApplication"16@"NSError"24
v32@0:8@"UIApplication"16@"UILocalNotification"24
v48@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@"NSDictionary"40@?<v@?>48
v48@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@"NSDictionary"40@?<v@?>48
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?Q>32
v32@0:8@"UIApplication"16@?<v@?Q>24
v40@0:8@"UIApplication"16@"UIApplicationShortcutItem"24@?<v@?B>32
v40@0:8@"UIApplication"16@"NSString"24@?<v@?>32
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?@"NSDictionary">32
@32@0:8@"UIApplication"16@"INIntent"24
v40@0:8@"UIApplication"16@"INIntent"24@?<v@?@"INIntentResponse">32
Q32@0:8@"UIApplication"16@"UIWindow"24
B32@0:8@"UIApplication"16@"NSString"24
@"UIViewController"40@0:8@"UIApplication"16@"NSArray"24@"NSCoder"32
B32@0:8@"UIApplication"16@"NSCoder"24
v32@0:8@"UIApplication"16@"NSCoder"24
B40@0:8@"UIApplication"16@"NSUserActivity"24@?<v@?@"NSArray">32
v40@0:8@"UIApplication"16@"NSString"24@"NSError"32
v32@0:8@"UIApplication"16@"NSUserActivity"24
@"UISceneConfiguration"40@0:8@"UIApplication"16@"UISceneSession"24@"UISceneConnectionOptions"32
B24@0:8@"UIApplication"16
@"UIWindow"16@0:8
v24@0:8@"UIWindow"16
@"MusicUIServiceScreenManager"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>SBStarkCapable</key>
<true/>
<key>application-identifier</key>
<string>com.apple.MusicUIService</string>
<key>com.apple.DeviceAccess</key>
<true/>
<key>com.apple.PairingManager.Read</key>
<true/>
<key>com.apple.PairingManager.RemovePeer</key>
<true/>
<key>com.apple.PairingManager.Write</key>
<true/>
<key>com.apple.QuartzCore.secure-mode</key>
<true/>
<key>com.apple.UIKit.vends-view-services</key>
<true/>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.avfoundation.allow-identifying-output-device-details</key>
<true/>
<key>com.apple.avfoundation.allow-system-wide-context</key>
<true/>
<key>com.apple.avfoundation.allows-set-output-device</key>
<true/>
<key>com.apple.coreduetd.allow</key>
<true/>
<key>com.apple.developer.homekit</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.homekit.private-spi-access</key>
<true/>
<key>com.apple.mediaremote.allow</key>
<array>
<string>TVPairing</string>
</array>
<key>com.apple.mediaremote.send-commands</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.attribution.implicitly-assumed-identity</key>
<dict>
<key>type</key>
<string>path</string>
<key>value</key>
<string>/Applications/MusicUIService.app</string>
</dict>
<key>com.apple.private.carkit.app</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceWillow</string>
<string>kTCCServiceMediaLibrary</string>
</array>
<key>com.apple.runningboard.assertions.music</key>
<true/>
<key>com.apple.runningboard.launchprocess</key>
<true/>
<key>com.apple.runningboard.primitiveattribute</key>
<true/>
<key>com.apple.runningboard.trustedtarget</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.telephonyutilities.callservicesdaemon.callcapabilities</string>
<string>com.apple.telephonyutilities.callservicesdaemon.conversationmanager</string>
<string>com.apple.telephonyutilities.callservicesdaemon.neighborhood-activities</string>
<string>com.apple.telephonyutilities.callservicesdaemon.callstatecontroller</string>
<string>com.apple.coremedia.endpointpicker.xpc</string>
<string>com.apple.coremedia.routediscoverer.xpc</string>
<string>com.apple.coremedia.routingcontext.xpc</string>
<string>com.apple.coremedia.endpointremotecontrolsession.xpc</string>
<string>com.apple.PairingManager</string>
<string>com.apple.carkit.app.service</string>
</array>
<key>com.apple.security.iokit-user-client-class</key>
<array>
<string>AGXCommandQueue</string>
<string>AGXDevice</string>
<string>AGXDeviceUserClient</string>
<string>AGXSharedUserClient</string>
<string>AppleJPEGDriverUserClient</string>
<string>IOAccelContext</string>
<string>IOAccelContext2</string>
<string>IOAccelDevice</string>
<string>IOAccelDevice2</string>
<string>IOAccelSharedUserClient</string>
<string>IOAccelSharedUserClient2</string>
<string>IOAccelSubmitter2</string>
<string>IOMobileFramebufferUserClient</string>
<string>IOSurfaceAcceleratorClient</string>
<string>IOSurfaceRootUserClient</string>
</array>
<key>com.apple.sharing.DeviceDiscovery</key>
<true/>
<key>com.apple.sharing.Services</key>
<true/>
<key>com.apple.sharing.Session</key>
<true/>
<key>com.apple.springboard-ui.client</key>
<true/>
<key>com.apple.springboard.activateRemoteAlert</key>
<true/>
<key>com.apple.springboard.remote-alert</key>
<true/>
<key>com.apple.springboard.stark.activateBackgroundProvider</key>
<true/>
<key>com.apple.telephonyutilities.callservicesd</key>
<array>
<string>modify-calls</string>
<string>access-calls</string>
</array>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
<string>com.apple.MediaRemote.pairing</string>
<string>com.apple.sharing.appleidauthentication</string>
</array>
</dict>
</plist>
SBStarkCapable
application-identifier
com.apple.MusicUIService0
com.apple.DeviceAccess
com.apple.PairingManager.Read
0(#com.apple.PairingManager.RemovePeer
com.apple.PairingManager.Write
0% com.apple.QuartzCore.secure-mode
0(#com.apple.UIKit.vends-view-services
0/*com.apple.accounts.appleaccount.fullaccess
0C>com.apple.avfoundation.allow-identifying-output-device-details
050com.apple.avfoundation.allow-system-wide-context
04/com.apple.avfoundation.allows-set-output-device
com.apple.coreduetd.allow
com.apple.developer.homekit
0,'com.apple.frontboard.launchapplications
0)$com.apple.homekit.private-spi-access
com.apple.mediaremote.allow0
TVPairing0(#com.apple.mediaremote.send-commands
0+&com.apple.private.accounts.allaccounts
0v9com.apple.private.attribution.implicitly-assumed-identity
90
type
path0)
value /Applications/MusicUIService.app0!
com.apple.private.carkit.app
04/com.apple.private.coreservices.canmaplsdatabase
com.apple.private.tcc.allow0,
kTCCServiceWillow
kTCCServiceMediaLibrary0,'com.apple.runningboard.assertions.music
0)$com.apple.runningboard.launchprocess
0.)com.apple.runningboard.primitiveattribute
0)$com.apple.runningboard.trustedtarget
64com.apple.security.exception.mach-lookup.global-name0
@com.apple.telephonyutilities.callservicesdaemon.callcapabilitiesCcom.apple.telephonyutilities.callservicesdaemon.conversationmanagerGcom.apple.telephonyutilities.callservicesdaemon.neighborhood-activitiesCcom.apple.telephonyutilities.callservicesdaemon.callstatecontroller&com.apple.coremedia.endpointpicker.xpc'com.apple.coremedia.routediscoverer.xpc&com.apple.coremedia.routingcontext.xpc4com.apple.coremedia.endpointremotecontrolsession.xpc
com.apple.PairingManager
com.apple.carkit.app.service0
k*com.apple.security.iokit-user-client-class0
AGXCommandQueue
AGXDevice
AGXDeviceUserClient
AGXSharedUserClient
AppleJPEGDriverUserClient
IOAccelContext
IOAccelContext2
IOAccelDevice
IOAccelDevice2
IOAccelSharedUserClient
IOAccelSharedUserClient2
IOAccelSubmitter2
IOMobileFramebufferUserClient
IOSurfaceAcceleratorClient
IOSurfaceRootUserClient0&!com.apple.sharing.DeviceDiscovery
com.apple.sharing.Services
com.apple.sharing.Session
com.apple.springboard-ui.client
0.)com.apple.springboard.activateRemoteAlert
0'"com.apple.springboard.remote-alert
0;6com.apple.springboard.stark.activateBackgroundProvider
0J*com.apple.telephonyutilities.callservicesd0
modify-callsaccess-calls0i
keychain-access-groups0O
apple
com.apple.MediaRemote.pairing'com.apple.sharing.appleidauthentication
