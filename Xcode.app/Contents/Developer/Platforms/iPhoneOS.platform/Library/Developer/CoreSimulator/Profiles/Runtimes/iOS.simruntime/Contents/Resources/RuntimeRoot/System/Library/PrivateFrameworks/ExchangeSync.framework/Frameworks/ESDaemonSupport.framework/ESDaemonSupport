[%@] finished with error %@
[%@] finished, but could not find an account with the ID %@
Could not get an account with the ID [%@]
Reachability changed notification %@
Could not get an account with the ID %@
DADClientContactsSearchDelegate finished with status %ld. Finishing DASearchQuery %p
DADServerContactsSearchTask finished, but could not find an account with the ID %@
Couldn't checkin with our port. Aborting.
If running from the command line make sure you don't already have %@ registered with launchd.
ESDAccessManager is Disabled. Cancelling Connection
ESDAccessManager event %@ clientName %@ is Entitled
ESDAccessManager event %@ clientName %@ is NOT Entitled
ESDAccessManager Received connection event %@ for clientName %@
Could not get client ID through xpc_connection_copy_entitlement_value(), the client name is: %@
Found an existing ESDClient with the same bundle id and with NULL xpc connection, using this ESDClient and reconnecting. The client ID is: 1%@
Found an existing ESDClient with the same bundle id and non-NULL xpc connection. Clean it up then reuse this ESDClient and reconnect. The client ID is: %@
Found an existing ESDClient with the same bundle id with same xpc connection. The client ID is: %@
ESDAccessManager Adding New Client for %@ for clientName %@
ESDAccessManager No New Clients For Event %@ clientName %@
ESDAccessManager Initializing
ESDAccessManager REMOVING client %@ from Current Clients %@
Found an existing ESDClient with the same bundle id, not changing the folder list. The client ID is: %@
Add ESDClient for client %@
Signal USR1 (30) received.  Exit if xpc transaction count is 0.
The xpc transaction count is %d. Do nothing.
QUIT received.  Shutting down.
HUP received.  HUP is currently unused.  Ignoring.
USR2 received.  Dumping our state.
Initiating DA Shutdown...
UserManagementFramework: Ending Switch Task For %@
Add Force Logout Timer in %d seconds
No Active Agents to sync.
EAS Accounts Found. Forcing Logout without manual sync
UserManagement. Switch Tasks already pending. NOOP
UserManagementFramework: Creating Switch Tasks For Pending Transcation Count %d
UserManagementFramework: No Pending Transcation Count. Exiting without blocking logout.
All Transactions Finished. Initiating DA Shutdown
Device is a %@AppleInternal install
Enabling CFNetwork diagnostics
Received notificaion "%@" indicating a language change.  Going to exit to pick up new locale support
Failed to serialize state capture payload (%s): %@
Failed to allocate state capture data (%s)
ESDClientSettingsDelegate initialized.
ESDClientSettingsDelegate dealloced.
Account %@ supports oof %@
Account %@ is a hotmail account
Account %@ is not ASAccount class
ESDClientSettingsDelegate finished with status %ld.
Missing required container identifier
Creating a new ESDClient for Connection %p and ClientID %@
ClientDied Not Dispatching XPC Event %@ for DADClient %@
Dispatching XPC Event %@ for ESDClient %@
Destroying ESDClient %p for Connection %p and ClientID %@
Not stop monitoring account %@ folder %@ because other clients are watching it
PersistentClientCleanup called on disabled client. Will not perform any actions.
DAPERF DADClient Bumped priority, someone's waiting
DAPERF DADClient Dropping priority back to refresh
DAPERF DADClient Dropping priority, no one's waiting
DAPERF ESDClient Bumping priority to refresh
DAPERF ESDClient Dropping priority, no one's waiting
Received begin monitoring folders request with persistent flag: %@
DATransaction starting, ID: %@
Malformed request from client in %s: %@
Malformed request from client in %s: bad accountID
No folders watched. Marking not persistent. Transaction: %@
Sending pending folder updates to client. Updated folders: %@
Remote client disconnected and reconnected while begin monitoring folders.
Remote client disconnected and reconnected while stoping monitoring folders.
Remote client disconnected and reconnected while resuming monitoring folders.
Remote client disconnected and reconnected while suspending monitoring folders.
Requested to start monitoring agents with unrecognized client token %d. Forcing a reload.
Buddy needs to Run. Resetting Outstanding Agents and Registering for Buddy for Client %@
Ignoring call to _startMonitoringAgents: with missing client token
_requestFolderContentsUpdateForFolders for account %@, dataclass 0x%lx isUserRequested %d
Block: request folder contents update (accounts %@, folders %@): error updating folder contents
Deferring request to update folders %@
Not forwarding request to update folders, as we already did that recently, and have a deferred request queued
_requestAllFolderContentsUpdateForAccountId %@, dataclasses 0x%lx, isUserRequested: %d
[ESDAgentManager sharedManager] number of Current Agents %lu and they are %@
Block: request all folder contents update (accounts %@): error updating folder contents
Block: ESDClient %@ with XPC Connection %@ is In Bad State
Deferring request to update all folders
Not forwarding request to update all folders, as we already did that recently, and have a deferred request queued
_requestFolderListUpdateForAccountId %@, dataclass 0x%lx, isUserRequested %d
Block: request folder list update (accounts %@): error updating folder contents
Deferring request to update folder list
Not forwarding request to update folder list, as we already did that recently, and have a deferred request queued
ProcessMeetingRequests: DATransaction starting, ID: %@
ProcessMeetingRequests: Malformed request from client in %s: %@
ProcessMeetingRequests: sending reply message with status DAStatusUnknown
ProcessMeetingRequests: connection lost, unable to send reply message
ProcessMeetingRequests: error processing meeting
ProcessMeetingRequests: success
ProcessMeetingRequests: sending reply message
_resetCertWarningsForAccountWithId %@ dataclasses %lx
error resetting cert warnings account ID %@ dataclasses 0x%lx
SetFolderIdsThatExternalClientsCareAbout: sending reply message
SetFolderIdsThatExternalClientsCareAbout: connection lost, unable to send reply message
Unable to read data to decode folder change: %@
Swallowing decoder exception of %@, treating as null data
No status reports available
_resetThrottleTimersForAccountWithId %@
_beginDownloadingAttachment UUID: %@, accountID: %@
_cancelDownloadingAttachmentEvent downloadID: %@
Received a cancel for download %@, but that download doesn't exist any more
_respondToSharedCalendar UUID: %@, response: %ld, accountID: %@
_reportSharedCalendarAsJunk UUID: %@, accountID: %@
Daemon asked to create tz info cache
Starting calendar availability request with accountID: [%@], startDate: [%@], endDate: [%@], ignoredEventID: [%@], addresses: [%@]
Starting calendar directory search with accountID: [%@] recordTypes: [%@] resultLimit: [%lu] terms: [%@]
Received folder updated notification %@
Launching %@
Client of ESDClient died, cleaning up.
LOOK AT ME!!!! Got an unknown error, the client messed with our connection in a way we weren't expecting.  If you're seeing this, get ready for some pain
Received xpc message %@
unknown request sent to client.
request: %@
DADAttachmentDownloadDelegate finished with error %@
DADAttachmentDownloadDelegate finished, but could not find an account with the ID %@
Registered for wake notification
IONotificationPortGetRunLoopSource returned NULL, can't register for wake notification
IORegisterForSystemPower returned MACH_PORT_NULL, can't register for wake notification
ESDAgentManager: Fetching active agents. count = %d, agents = %@
loadAgents should not be called
iPhone Version %@
Not creating an agent for account info %@ (%{public}@), it refused to init itself
Creating an agent for account info %@ (%{public}@)
Loading up agent for account "%{public}@" (%@) (%{public}@)
Not loading an agent for account "%{public}@" (%@) (%{public}@), because agentClass is nil
Not loading an agent for account "%{public}@" (%@) (%{public}@), because it is disabled
ESDAgentManager: Settings active agents. count = %d, agents = %@
Enable active sync
Disable active sync
Error when cleaning up client restrictions for persistentUUID %@.  Error %@
ESDAgentManager: Clearing active agents. previous count = %d, previous agents = %@
Tearing down connection cache
Tore down connection cache
Handling power change call with messageType 0x%x
Received policy update request through XPC for account with ID %@. Setting this as user initiated.
problem handling policy update request: no known account with ID %@
Did not start monitoring folder ids %@, because the agent said "nope"
Did not start monitoring folder ids %@, because I have no agent containing account id %@.  Agents: %@
Did not stop monitoring folder ids %@, because I have no agent containing account id %@.  Agents: %@
Did not suspend monitoring folder ids %@, because I have no agent containing account id %@.  Agents: %@
Did not resume monitoring folder ids %@, because I have no agent containing account id %@.  Agents: %@
Did not add persistent monitoring folder ids %@, because the agent said "nope"
Did not add persistent monitoring folder ids %@, because I have no agent containing account id %@.  Agents: %@
Did not remove persistent monitoring folder ids %@, because I have no agent containing account id %@.  Agents: %@
Did not clear persistent monitoring folders, because I have no agent containing account id %@.  Agents: %@
DA is NOT removing orphan accounts, because we're in a holding pattern.
DA is NOT removing orphan accounts, because some joker told us not to in behavior options
ClearOrphanStores : ===== Starting Exchange Calendar Orphan Store Cleanup ======
ClearOrphanStores : Current Account IDs : %@
ClearOrphanStores : ===== End Exchange Calendar Orphan Store Cleanup ======
Ignoring Notes orphan check.  You asked for it.
ACCOUNTDCOERROR Removing notes store, as it's account id %@ isn't one of the account ids I know about: %@
Failed to save: %@
Notes database was corrupted! Non-fatal at this point, but just barely
ClearOrphanStores : Current DA CalDAV (events) Account IDs : %@
ClearOrphanStores : curStore %lu has store type %d
ClearOrphanStores : ACCOUNTDCOERROR Removing calendar store, as its account id %@ isn't one of the account ids I know about: %@ | %@
ClearOrphanStores : account id %@ store id %d has change tracking ids %@
ClearOrphanStores : Removing Calendar change tracking client, as its change tracking identifier "%@" isn't one of the account ids I know about: %@ | %@
ESAgentManager: Device is Unlocked %d and PastBuddy is %d
ESAgentManager: NO startAgentWhenSystemReadyBlock defined. This will not load any agents
ESAgentManager: System Ready Calling Load Agents Block
ESAgentManager: System Not Yet Ready. We are Not Loading Agents
ESAgentManager: Clearing disableMonitoringAgentsTokens and Loading Agents
Failed to register CT server notification %@ (domain: %d error: %d).
Failed to create CT server connection
User allowed cellular-data for BundleID %{public}@
Loading Exchange agents
Removing CFURLCache entries
Agents loaded and monitoring.  They are %@
ESAgentManager: System Not Yet Ready. We will Register for BuddyFinished and KeyBagLock status Notification
REGISTER FOR BUDDY
EXITING REGISTER FOR BUDDY
Agents awaiting shut down are %@
Stopping our agents (which are %@)
Stopping agent %@
Agent %@ has stopped monitoring
agentsAwaitingShutdown count is now %lu
Still waiting for %lu agents to shut down.  Spinning a run loop. Outstanding agents are %@
Run Loop finished.  Active Agent count is now %ld.
Agents stopped and saved
Ignoring call to enableMonitoringAgentsWithToken: with unrecognized token %d
ESDAgentManager asked to enableMonitoringAgents. New count = %d
ESDAgentManager disableMonitoringAgents reached 0. Start Loading Agents..
ESDAgentManager asked to disableMonitoringAgents. New count = %d
ESDAgentManager disableMonitoringAgents reached 1. Stop Loading Agents..
Found an EAS Account %@
ProcessMeetingRequests: account agent not found
unable to signal launchd to start dataaccessd: errno %d
unable to signal launchd to stop dataaccessd: errno %d
unable to cleanup launchd semaphore: errno %d
unable to signal launchd to keep dataaccessd alive: errno %d
unable to cleanup launchd semaphore so that dataaccessd can be pressured exit: errno %d
Received PCPreferencesDidChangeNotification due to user change
XPC: Received CDBPreferences_Notification_kCalPreferredDaysToSyncKey or CDBPreferences_Notification_kCalRemindersPreferredDaysToSyncKey
ESAgentManager: System Ready Check Fired with Name %@
DADClientShareResponseDelegate finished with error %@
DADClientShareResponseDelegate finished, but could not find an account with the ID %@
v8@?0
ESDClientDelegate.m
finishWithError: should be implemented in the subclass
%@ %@
com.apple.dataaccess.dataaccessd.PersistentPush
v16@?0@"NSObject<OS_xpc_object>"8
Should never call -init on ESDAccessManager.  Use +sharedManager instead.
DA-Blocking Task
LogoutReceived
com.apple.dataaccessd
com.apple.language.changed
com.apple.purplebuddy.LanguageResetReady
ExchangeSyncD State
@"NSString"8@?0
com.apple.dataaccessd.dadOperation
com.apple.dataaccessd.dadHighAvailability
CFNETWORK_DIAGNOSTICS
Received notificaion "%@" indicating a language change.  Going to exit to pick up new locale support
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
<%@: %p> { Folder %@, hasRemoteChanges: %d, isInitialUberSync %d isResyncAfterConnectionFailed %d actions %@ }
com.apple.dataaccess
CardDAV-changehistory
ESDRequestClientStatusDumpNotification
ESDClient.m
ESDClient already has a connection. Client bundle ID is: %@
(unknown)
B24@?0r*8@"NSObject<OS_xpc_object>"16
-[ESDClient _beginMonitoringFolders:]
v12@?0B8
B8@?0
-[ESDClient _stopMonitoringFolders:]
-[ESDClient _resumeMonitoringFolders:]
-[ESDClient _suspendMonitoringFolders:]
-[ESDClient _requestFolderContentsUpdate:]
-[ESDClient _requestAllFolderContentsUpdate:]
-[ESDClient _requestFolderListUpdate:]
Account ID is NULL when opening a contacts search. BailWhale
Query Dictionary Representation is NULL when opening a contacts search. BailWhale
-[ESDClient _processMeetingRequests:]
-[ESDClient _asyncProcessMeetingRequests:]
v40@?0@"NSString"8@"NSString"16q24@"NSError"32
root
v16@?0@"NSArray"8
Account ID is NULL when starting attachment download.
Attachment UUID is NULL when starting attachment download.
Attachment UUID is NULL when cancelling attachment download.
Account ID is NULL when starting calendar share response.
Attachment UUID is NULL when starting calendar share response.
Response type is NULL when starting calendar share response.
ASTimeZone
ASUtilsLazyClass
Account ID is NULL when opening a settings request. BailWhale
'accountID' is nil when starting calendar availability request.
'startDate' is nil when starting calendar availability request.
'endDate' is nil when starting calendar availability request.
'accountID' is nil when starting calendar directory search.
com.apple.dataaccess.statusreportaggregator
ESDAgentsStoppedNotification
PCPreferencesDidChangeNotification
_CalDatabaseChangedNotification
__ABDataBaseChangedByOtherProcessNotification
NoteContextDarwinNotificationWithLoggedChanges
com.apple.purplebuddy.setupdone
activeAgentsQueue
DataAccess
AccountInformation.plist
DAAgentClass
Identifier
com.apple.eas.account
ESDAgentManager.m
When clearing orphaned stores, we have an account with no accountID.  That's bad.  account: %@
com.apple.dataaccess.ctdatapolicychangeq
v24@?0^{__CFString=}8^{__CFDictionary=}16
kCTPerAppNetworkDataAccessPolicyChangedNotification
v16@?0@"DAAgent"8
disableMonitoringAgents
=======
Somebody isn't maintaining their account setup correctly
Library/Preferences/com.apple.dataaccess.launchd
Library/Preferences/com.apple.dataaccess.activesync
@"NSString"16@?0@"DAAccount"8
MobileCalDAVAccount
unregisterClientWithIdentifier: is abstract
registerClientWithIdentifier: is abstract
identifiersOfAllRegisterdClients: is abstract
ESDClientCalendarAvailabilityResponseDelegate
DAEventsCalendarAvailabilityResponseConsumer
NSObject
ESDClientDelegate
DaemonAdditions
DAAgent
DARefreshManagerDelegateSupport
CalendarSupport
ESDClientCalendarDirectorySearchResponseDelegate
DAEventsCalendarDirectorySearchResponseConsumer
DASearchQueryConsumer
_DAChangeHistoryABLegacyClerk
ESWifiAssertionManager
ESDClientContactsSearchDelegate
ESDAccessManager
DADClientAccountTimers
ESDMain
UMUserSwitchStakeholder
DATransactionMonitorDelegate
ESFolderSyncRequest
ESDClientSettingsDelegate
ESSettingsResponseDelegate
_DAChangeHistoryContactsClerk
ESDClient
ESDClientAttachmentDownloadDelegate
DAEventsAttachmentDownloadConsumer
ESDAgentManager
ESDClientShareResponseDelegate
DAEventsCalendarSharingResponseConsumer
ESDStatusReportAggregator
DAChangeHistoryClerk
initWithAccountID:client:
UTF8String
disable
dealloc
isDisabled
finished
setFinished:
domain
isEqualToString:
code
sharedManager
accountID
accountWithAccountID:
cancelCalendarAvailabilityRequestWithID:
client
rawConnection
setObject:forKey:
delegateID
archivedDataWithRootObject:
delegateWithIDIsGoingAway:
requestCalendarAvailabilityForStartDate:endDate:ignoredEventID:addresses:consumer:
errorWithDomain:code:userInfo:
finishWithError:
count
dictionaryWithObjects:forKeys:count:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
calendarAvailabilityRequestReturnedResults:
calendarAvailabilityRequestFinishedWithError:
initWithAccountID:client:startDate:endDate:ignoredEventID:addresses:
performRequest
.cxx_destruct
_startDate
_endDate
_ignoredEventID
_addresses
_requestID
_queue
init
setAccountID:
setClient:
da_newGUID
setDelegateID:
setConsumerCancelled:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
userRequestsCancel
consumerCancelled
_finished
_consumerCancelled
_delegateID
_client
_accountID
T@"ESDClient",W,N,V_client
T@"NSString",&,N,V_accountID
TB,N,V_finished
TB,N,V_consumerCancelled
T@"NSString",&,N,V_delegateID
deviceWillSleep
deviceDidWake
setAccount:
addToCoreDAVLoggingDelegates
account
trustHandler
stateString
name
userInfo
objectForKeyedSubscript:
boolValue
syncWhenReachable
networkReachableBlock
setSyncWhenReachable:
setNetworkReachableBlock:
sharedNetworkObserver
_reachabilityChanged:
addNetworkReachableObserver:selector:
removeNetworkReachableObserver:
setIsMonitoring:
shutdown
removeFromCoreDAVLoggingDelegates
initWithAccount:
observeReachabilityWithBlock:
stopObservingReachability
startMonitoring
requestAgentStopMonitoringWithCompletionBlock:
refreshFolderListRequireChangedFolders:isUserRequested:
syncFolderIDs:forDataclasses:isUserRequested:
processMeetingRequestDatas:deliveryIdsToClear:deliveryIdsToSoftClear:inFolderWithId:callback:
getDAAccount
isMonitoring
lastRetryTimeout
setLastRetryTimeout:
isWaitingForPassword
setIsWaitingForPassword:
_isMonitoring
_syncWhenReachable
_isWaitingForPassword
_account
_lastRetryTimeout
_networkReachableBlock
T@"DAAccount",&,N,V_account
Td,N,V_lastRetryTimeout
TB,N,V_syncWhenReachable
T@?,C,N,V_networkReachableBlock
TB,N,V_isWaitingForPassword
TB,N,V_isMonitoring
T@"DATrustHandler",R,N
saveXpcActivity:
shared
get_kCalPreferredDaysToSyncKey
get_kCalRemindersPreferredDaysToSyncKey
preferredEventDaysToSync
preferredToDoDaysToSync
cancelCalendarDirectorySearchWithID:
numberWithBool:
performCalendarDirectorySearchForTerms:recordTypes:resultLimit:consumer:
countByEnumeratingWithState:objects:count:
displayName
setDisplayName:
firstName
lastName
stringWithFormat:
emailAddress
setPreferredAddress:
addObject:
_convertSearchQueryResults:
calendarDirectorySearchReturnedResults:
calendarDirectorySearchFinishedWithError:exceededResultLimit:
searchQuery:returnedResults:
searchQuery:finishedWithError:
searchQuery:returnedTotalCount:
initWithAccountID:client:terms:recordTypes:resultLimit:
_terms
_recordTypes
_resultLimit
_searchID
_exceededResultLimit
addressBook
asSource
initWithAddressBook:
unregisterClientWithIdentifier:forContainer:
registerClientWithIdentifier:forContainer:
identifiersOfAllRegisterdClients
_addressBook
T^v,R,N,V_addressBook
sharedWifiAssertionManager
retainWifiAssertion
releaseWifiAssertion
_refCount
initWithDictionaryRepresentation:consumer:
setQuery:
query
performSearchQuery:
setQueryResultData:
setConsumer:
cancelSearchQuery:
numberWithLong:
mutableCopy
queryResultData
setObject:forKeyedSubscript:
noteBlockedClientCallChange:
initWithAccountID:queryDictionary:client:
beginQuery
_query
_queryResultData
T@"DASearchQuery",&,N,V_query
T@"NSData",&,N,V_queryResultData
setMainConnection:
mainConnection
stringWithUTF8String:
clients
clientBundleID
reconnectWithConnection:
persistentClientCleanup
initWithConnection:clientID:
exceptionWithName:reason:userInfo:
raise
setClients:
_setupServerConnection
_init
removeObject:
initWithClientID:
beginMonitoringPersistentFolders:forAccount:
clientUniqueID
isMonitoringAccountID:folderID:
removeClient:
addPersistentClientWithAccountID:clientID:watchedIDs:
isAccountID:folderID:watchedByClientBesides:
exchangeConnection
setExchangeConnection:
_mainConnection
_exchangeConnection
_clients
T@"NSObject<OS_xpc_object>",&,N,V_mainConnection
T@"NSObject<OS_xpc_object>",&,N,V_exchangeConnection
T@"NSMutableArray",&,N,V_clients
killAllTimers
refreshThrottleTime
folderIdToLastFolderContentsRequestDate
timeIntervalSinceDate:
deferredTimerInterval
date
setLastFolderContentRequestDate:forFolderWithId:
setDeferredAllFolderContentsSource:
setDeferredFolderListSource:
setDeferredFolderContentsSource:
clientBehaviorForFolderIds:
clientBehaviorForFolderList
clientBehaviorForFolderContents
allowFolderWipe
lastAllFolderContentsRequestDate
setLastAllFolderContentsRequestDate:
lastFolderListRequestDate
setLastFolderListRequestDate:
lastFolderWipeRequestDate
setLastFolderWipeRequestDate:
deferredAllFolderContentsSource
deferredFolderListSource
deferredFolderContentsSource
setFolderIdToLastFolderContentsRequestDate:
_lastAllFolderContentsRequestDate
_lastFolderListRequestDate
_lastFolderWipeRequestDate
_deferredAllFolderContentsSource
_deferredFolderListSource
_deferredFolderContentsSource
_folderIdToLastFolderContentsRequestDate
T@"NSMutableDictionary",&,N,V_folderIdToLastFolderContentsRequestDate
T@"NSDate",&,N,V_lastAllFolderContentsRequestDate
T@"NSDate",&,N,V_lastFolderListRequestDate
T@"NSDate",&,N,V_lastFolderWipeRequestDate
T@"NSObject<OS_dispatch_source>",W,N,V_deferredAllFolderContentsSource
T@"NSObject<OS_dispatch_source>",W,N,V_deferredFolderListSource
T@"NSObject<OS_dispatch_source>",W,N,V_deferredFolderContentsSource
sharedTransactionMonitor
transactionCount
sharedMain
shutdownDAD
_stopMonitoringAndSaveAgents
addToOperationsQueueDisabledCheckAndGoBlock:wrappedBlock:
userSwitchTasks
bundleID
_setRunLoopStopped:
_shutdownDaemon
invalidate
dateWithTimeIntervalSinceNow:
_forceShutdownTimerFired:
initWithFireDate:interval:target:selector:userInfo:repeats:
mainRunLoop
addTimer:forMode:
activeAgents
hasEASAccountConfigured
taskWithName:reason:forBundleID:
begin
arrayWithObjects:count:
setUserSwitchTasks:
setTransactionMonitorDelegate:
_forceShutdownDaemonOnLogoutInTimeInterval:
addSignalHandler
registerUserSwitchStakeHolder:
addLanguageChangeHandler
defaultCenter
_shutdownNotification:
addObserver:selector:name:object:
removeObserver:name:object:
isAppleInternalInstall
CFNetworkLogging
endDailyAggDReporter
willSwitchUser
didFinishAllXPCTransactions
waitForSystemAvailability
setRunLoopStoppedRef:
_configureAggdLogging
_delayedShutdownTimer
_forceShutdownTimer
_runLoopStoppedRef
_userSwitchTasks
T@"NSArray",&,N,V_userSwitchTasks
postNotificationName:object:
length
stringByAppendingString:
dataWithPropertyList:format:options:error:
getBytes:range:
setFolder:
setHasRemoteChanges:
setIsInitialUberSync:
setIsResyncAfterConnectionFailed:
setIsResyncAfterServerError:
folder
hasRemoteChanges
isInitialUberSync
isResyncAfterConnectionFailed
actions
initWithFolder:hasRemoteChanges:isInitialUberSync:
setActions:
skippedActions
setSkippedActions:
isResyncAfterServerError
containsPostponedActions
setContainsPostponedActions:
_hasRemoteChanges
_isInitialUberSync
_isResyncAfterConnectionFailed
_isResyncAfterServerError
_containsPostponedActions
_folder
_actions
_skippedActions
T@"DAFolder",&,N,V_folder
TB,N,V_hasRemoteChanges
TB,N,V_isInitialUberSync
T@"NSArray",&,N,V_actions
T@"NSArray",&,N,V_skippedActions
TB,N,V_isResyncAfterConnectionFailed
TB,N,V_isResyncAfterServerError
TB,N,V_containsPostponedActions
setIsUpdate:
initWithDictionary:
setRequestParams:
isUpdate
requestParams
updateOofSettingsWithParams:consumer:
retrieveOofSettingsForConsumer:
isHotmailAccount
protocol
supportsSettingsCommand
oofGetResult
convertToDAOofParams
setResponseParams:
responseParams
dictionaryRepresentation
settingsRequestFinishedWithResults:status:error:
initWithAccountID:requestDictionary:forUpdate:client:
beginSettingsRequest
isOofSupported
_isUpdate
_requestParams
_responseParams
TB,N,V_isUpdate
T@"DAOofParams",&,N,V_requestParams
T@"DAOofParams",&,N,V_responseParams
asContainer
identifier
os_log
contactStore
unregisterChangeHistoryClientIdentifier:forContainerIdentifier:error:
registerChangeHistoryClientIdentifier:forContainerIdentifier:error:
T@"NSObject<OS_os_log>",R,N
initWithContactStore:
_contactStore
T@"CNContactStore",R,N,V_contactStore
setConn:
conn
_clientDiedWithReason:
_dispatchMessage:
setWatchedIDs:
setBusyIDs:
setUpdatedIDs:
setAccountTimers:
setActionDelegatesById:
setAgentMonitoringTokens:
_foldersUpdated:
_asPolicyKeyChanged:
_requestClientStatusDump:
_agentsStopped:
requestPriority:forClient:dataclasses:
busyIDs
removeObjectForKey:
watchedIDs
actionDelegatesById
allValues
removeObserver:
accountTimers
unregisterForInterrogation
copy
allKeys
array
countForObject:
resumeMonitoringAccountID:folderIDs:
_removeBusyFolderIDs:forAccountWithID:
allObjects
stopMonitoringAccountID:folderIDs:
_removeWatchedFolderIDs:forAccountWithID:
_clearAllStopMonitoringAgentsTokens
setNumOutstandingBlockingClientCalls:
setNumOutstandingRefreshPriorityClientCalls:
numOutstandingBlockingClientCalls
numOutstandingRefreshPriorityClientCalls
transactionId
addObjectsFromArray:
watchedFolderCount
addPersistMonitoringAccountID:folderIDs:clientID:
_createReplyToRequest:withProperties:
setWithArray:
updatedIDs
intersectSet:
minusSet:
startMonitoringAccountID:folderIDs:
removePersistMonitoringAccountID:folderIDs:clientID:
clearPersistMonitoringAccountID:clientID:
suspendMonitoringAccountID:folderIDs:
disableMonitoringAgents
numberWithUnsignedInteger:
agentMonitoringTokens
unsignedIntegerValue
_startMonitoringAgentsWithServerToken:
enableMonitoringAgentsWithToken:
removeAllObjects
registerForBuddy
_startMonitoringAgentsWithClientToken:
numberWithInteger:
_stopMonitoringAgentsWithClientToken:
currentPolicyKeyForAccount:
requestPolicyUpdateForAccount:
timersForAccountWithID:
updateContentsOfFolders:forAccountID:andDataclasses:isUserRequested:
_requestFolderContentsUpdateForFolders:accountId:dataclasses:isUserRequested:
intValue
updateContentsOfAllFoldersForAccountID:andDataclasses:isUserRequested:
_requestAllFolderContentsUpdateForAccountId:dataclasses:isUserRequested:
updateFolderListForAccountID:andDataclasses:requireChangedFolders:isUserRequested:
_requestFolderListUpdateForAccountId:dataclasses:requireChangedFolders:isUserRequested:
processMeetingRequestDatas:deliveryIdsToClear:deliveryIdsToSoftClear:inFolderWithId:forAccountWithId:callback:
resetCertWarningsForAccountWithId:andDataclasses:
setFolderIdsThatExternalClientsCareAboutAdded:deleted:foldersTag:forAccountID:
reportFolderItemsSyncSuccess:forFolderWithID:withItemsCount:andAccountWithID:
handleURLString:
numberWithUnsignedInt:
initWithObjectsAndKeys:
initForReadingFromData:error:
decodeObjectOfClass:forKey:
processFolderChange:forAccountWithID:completionBlock:
noteRefreshClientCallChange:
getStatusReportDictsWithCompletionBlock:
registerForInterrogation
initWithAccountID:attachmentUUID:client:
beginDownload
initWithAccountID:client:calendarID:
respondToShareRequestWithResponse:
reportAsJunk
initWithIdentifier:description:
sharedInstance
loadDaemonBundleForACAccountType:
_cacheTimeZoneInfo
asDeviceID
initWithArray:
host
port
emailAddresses
object
unionSet:
noteAdditionalReportDicts:
persistent
_beginMonitoringFolders:
_stopMonitoringFolders:
_resumeMonitoringFolders:
_suspendMonitoringFolders:
_startMonitoringAgents:
_stopMonitoringAgents:
_getCurrentPolicyKey:
_requestPolicyUpdate:
_requestFolderContentsUpdate:
_requestAllFolderContentsUpdate:
_requestFolderListUpdate:
_openServerContactsSearch:
_cancelServerContactsSearch:
_processMeetingRequests:
_asyncProcessMeetingRequests:
_resetCertWarnings:
_setFolderIdsThatExternalClientsCareAbout:
_reportFolderItemsSyncResult:
_handleURL:
_processFolderChange:
_getStatusReports:
_registerForInterrogation:
_resetThrottleTimers:
_beginDownloadingAttachmentEvent:eventDict:
_cancelDownloadingAttachmentEvent:eventDict:
_respondToSharedCalendarEvent:eventDict:
_reportSharedCalendarAsJunkEvent:eventDict:
_fillOutEASTimeZoneInfo:
_getActiveSyncDeviceIdentifier:
_openServerOofSettingsRequest:
_checkIsOofSettingsSupported:
_requestCalendarAvailability:eventDict:
_cancelCalendarAvailabilityRequest:eventDict:
_performCalendarDirectorySearch:eventDict:
_cancelCalendarDirectorySearch:eventDict:
_getAccountExternalIdentification:eventDict:
clientsToInterrogate
_clientName
applyClientStatusReportToAggregator:
setClientBundleID:
setClientUniqueID:
clientName
setClientName:
_persistent
_numOutstandingBlockingClientCalls
_numOutstandingRefreshPriorityClientCalls
_clientBundleID
_clientUniqueID
_conn
_watchedIDs
_busyIDs
_updatedIDs
_accountTimers
_actionDelegatesById
_agentMonitoringTokens
T@"NSObject<OS_xpc_object>",&,N,V_conn
T@"NSMutableDictionary",&,N,V_watchedIDs
T@"NSMutableDictionary",&,N,V_busyIDs
T@"NSMutableDictionary",&,N,V_updatedIDs
Ti,N,V_numOutstandingBlockingClientCalls
Ti,N,V_numOutstandingRefreshPriorityClientCalls
T@"NSMutableDictionary",&,N,V_accountTimers
T@"NSMutableDictionary",&,N,V_actionDelegatesById
T@"NSString",&,N,V_clientName
T@"NSString",&,N,V_clientBundleID
T@"NSString",&,N,V_clientUniqueID
T@"NSMutableDictionary",&,N,V_agentMonitoringTokens
TB,R,N,V_persistent
setAttachmentUUID:
beginDownloadingAttachmentWithUUID:consumer:
setDownloadID:
attachmentUUID
numberWithLongLong:
cancelDownloadingInstance:error:
downloadProgressDownloadedByteCount:totalByteCount:
downloadFinishedError:
downloadID
_attachmentUUID
_downloadID
T@"NSString",&,N,V_attachmentUUID
T@,&,N,V_downloadID
sharedRunLoop
getCFRunLoop
useContacts
providerWithContactStore:
abDB
providerWithAddressBook:
clerkWithContactStore:
clerkWithAddressBook:
objectAtIndexedSubscript:
stringByAppendingPathComponent:
defaultManager
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
_phoneVersion
reloadAccounts
_leafExchangeAccountTypes
accountTypeWithAccountTypeIdentifier:
accountsWithAccountType:
daemonAppropriateAccountClassForACAccount:
initWithBackingAccountInfo:
sharedKeychain
removePersistentCredentials
backingAccountInfo
agentClassForACAccount:
accountDescription
enableDaemon
enableActiveSync
disableActiveSync
_accountInfoPath
initWithContentsOfFile:
containsObject:
cleanUpFilesForAccountWithId:
sharedConnection
applyRestrictionDictionary:clientType:clientUUID:localizedClientDescription:localizedWarningMessage:outRestrictionChanged:outEffectiveSettingsChanged:outError:
removeOrphanedClientRestrictionsWithCompletion:
persistentUUID
writeToFile:atomically:
sharedSession
flushWithCompletionHandler:
_deviceDidWake
_deviceWillSleep
policyManager
currentPolicyKey
setWasUserInitiated:
requestPolicyUpdate
monitorFoldersWithIDs:
stopMonitoringFoldersWithIDs:
suspendMonitoringFoldersWithIDs:
resumeMonitoringFoldersWithIDs:
setFolderIdsForPersistentPushAdded:deleted:clientID:
clearFolderIdsForPersistentPushWithClientID:
isInHoldingPattern
orphanCheckEnabled
isEnabledForDataclass:
sharedInstanceForAccountType:creatingClass:
calOpenDatabaseAsGenericClientForAccountID:
calDatabaseForAccountID:
_clearOrphanedStoresInCalendarDatabase:eventAccountIds:toDoAccountIds:
calSaveDatabaseForAccountID:
calOpenDatabaseAsGenericClientForAuxDatabaseRef:
calDatabaseForAuxDatabaseRef:
calCloseDatabaseForAuxDatabaseRef:save:
calCloseDatabaseForAccountID:save:
completelyIgnoreNotes
enableChangeLogging:
allAccounts
accountType
accountIdentifier
deleteAccount:
save:
DAExtendedDescription
databaseIsCorrupt:
hasPrefix:
substringFromIndex:
disableMonitoringAgentsTokens
_loadAndStartExchangeMonitoringAgents
preferredDaysToSyncDidChange
_handleCellularDataUsageChangedNotification
onBehalfOfBundleIdentifier
enabledDataclassesBitmask
resetSyncStatusIfNecessaryForStoresOfType:
loadExchangeAgents
_clearOrphanedStores
keychainAccessibilityType
password
_registerForCTDataUsageNotificaiton
_systemMayNowBeReady
saveAndReleaseAgents
_addAccountAggdEntries
nextDisableMonitoringAgentsToken
setNextDisableMonitoringAgentsToken:
initWithLabel:
enabledForAnyDADataclasses:
isSubscribedCalendarAccount
parentAccountIdentifier
initWithCapacity:
accountTypeIdentifier
resetCertWarnings
setFolderIdsThatExternalClientsCareAboutAdded:deleted:foldersTag:
removeFolderIDFromPingBlacklist:
removeFromAllPingHistoryBlacklistForFolderID:
addFolderIDToPingBlacklist:
sharedGateKeeper
sharedPowerAssertionManager
processDAFolderChange:withCompletionBlock:
sharedBabysitter
statusReport
waiterID
accountWithIDShouldContinue:
setSyncingAllowed:
protocolVersion
setProtocolVersion:
resetStatusReport
arrayWithCapacity:
initWithObjects:
intersectsSet:
enabledDataclasses
_hasDataclassWeCareAbout:
accountsProviderWithDBHelper:
changeHistoryClerkWithDBHelper:
agentWithAccountID:
accountWithAccountID:andClassName:
_configFileForAgent:
loadAgents
_resetMonitoringRequestsAndLoadAgents
_calDaysToSyncDidChange
activeAccountBundleIDs
addPendingAccountSetup
removePendingAccountSetup
hasPendingAccountSetup
hasActiveAccounts
disableDaemon
cleanupLaunchdSemaphore
upgradeAccountsInSimulator
subCalHandlers
setSubCalHandlers:
_activeAgents
_activeAgentsQueue
_pmNotifier
_pmPort
_pmRunLoopSource
_startAgentsWhenSystemReadyBlock
_CTCellularUsagePolicyNotificationQ
_ctServerConnection
_pendingAccountSetupCount
_subCalHandlers
_nextDisableMonitoringAgentsToken
_disableMonitoringAgentsTokens
T@"NSMutableArray",&,N,V_subCalHandlers
TQ,N,V_nextDisableMonitoringAgentsToken
T@"NSMutableDictionary",R,N,V_disableMonitoringAgentsTokens
T@"NSArray",R,N
sharedDBWatcher
didReceiveDarwinNotification:
fileSystemRepresentation
setCalendarID:
respondToShareRequestForCalendar:withResponse:consumer:
_doResponseWithBlock:
reportShareRequestAsJunkForCalendar:consumer:
setShareID:
shareID
cancelShareResponseInstance:error:
calendarID
shareResponseFinishedWithError:
_calendarID
_shareID
T@"NSString",&,N,V_calendarID
T@"NSString",&,N,V_shareID
_coalesceAndReport
initWithDictionaryRepresentation:
mergeStatusReport:
initWithStatusReports:numOutstandingReports:timeout:completionBlock:
_numOutstandingReports
_completionBlock
_persistentUUIDToStatusReport
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@16
v24@0:8@"NSDictionary"16
v24@0:8@"NSError"16
@64@0:8@16@24@32@40@48@56
v16@0:8
@"NSDate"
@"NSString"
@"NSArray"
@"NSObject<OS_dispatch_queue>"
@32@0:8@16@24
v20@0:8B16
@"ESDClient"
@24@0:8@16
v24@0:8@?16
v24@0:8B16B20
v36@0:8@16q24B32
v56@0:8@16@24@32@40@?48
d16@0:8
v24@0:8d16
@?16@0:8
@"DAAccount"
i16@0:8
v28@0:8@16B24
v28@0:8@"NSError"16B24
v32@0:8@16@24
v32@0:8@"DASearchQuery"16@"NSArray"24
v32@0:8@"DASearchQuery"16@"NSError"24
v32@0:8@"DASearchQuery"16@"NSNumber"24
@56@0:8@16@24@32@40Q48
@"NSSet"
@24@0:8^v16
^v16@0:8
@40@0:8@16@24@32
@"DASearchQuery"
@"NSData"
v40@0:8@16@24@32
B40@0:8@16@24@32
@"NSObject<OS_xpc_object>"
@"NSMutableArray"
q24@0:8@16
q16@0:8
@"NSObject<OS_dispatch_source>"
@"NSMutableDictionary"
v20@0:8i16
v32@0:8@?16@?24
v24@0:8^B16
@"NSTimer"
@32@0:8@16B24B28
@"DAFolder"
v40@0:8@16q24@32
v40@0:8@"ASSettingsTaskResponse"16q24@"NSError"32
@44@0:8@16@24B32@36
@"DAOofParams"
@"CNContactStore"
B32@0:8@16@24
v24@0:8Q16
v44@0:8@16@24q32B40
v40@0:8@16q24B32B36
v32@0:8q16q24
B40@0:8^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{_opaque_pthread_mutex_t=q[56c]}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIBBBBBB}16@24@32
B40@0:8@16q24B32B36
B44@0:8@16@24q32B40
B36@0:8@16q24B32
v64@0:8@16@24@32@40@48@?56
B32@0:8@16q24
B48@0:8@16@24@32@40
v44@0:8B16@20Q28@36
B40@0:8@16@24@?32
^{IONotificationPort=}
^{__CFRunLoopSource=}
^{__CTServerConnection=}
v24@0:8q16
@44@0:8@16i24d28@?36
[%@] finished with error %@
[%@] finished, but could not find an account with the ID %@
Could not get an account with the ID [%@]
Reachability changed notification %@
Could not get an account with the ID %@
DADClientContactsSearchDelegate finished with status %ld. Finishing DASearchQuery %p
DADServerContactsSearchTask finished, but could not find an account with the ID %@
Couldn't checkin with our port. Aborting.
If running from the command line make sure you don't already have %@ registered with launchd.
ESDAccessManager is Disabled. Cancelling Connection
ESDAccessManager event %@ clientName %@ is Entitled
ESDAccessManager event %@ clientName %@ is NOT Entitled
ESDAccessManager Received connection event %@ for clientName %@
Could not get client ID through xpc_connection_copy_entitlement_value(), the client name is: %@
Found an existing ESDClient with the same bundle id and with NULL xpc connection, using this ESDClient and reconnecting. The client ID is: 1%@
Found an existing ESDClient with the same bundle id and non-NULL xpc connection. Clean it up then reuse this ESDClient and reconnect. The client ID is: %@
Found an existing ESDClient with the same bundle id with same xpc connection. The client ID is: %@
ESDAccessManager Adding New Client for %@ for clientName %@
ESDAccessManager No New Clients For Event %@ clientName %@
ESDAccessManager Initializing
ESDAccessManager REMOVING client %@ from Current Clients %@
Found an existing ESDClient with the same bundle id, not changing the folder list. The client ID is: %@
Add ESDClient for client %@
Signal USR1 (30) received.  Exit if xpc transaction count is 0.
The xpc transaction count is %d. Do nothing.
QUIT received.  Shutting down.
HUP received.  HUP is currently unused.  Ignoring.
USR2 received.  Dumping our state.
Initiating DA Shutdown...
UserManagementFramework: Ending Switch Task For %@
Add Force Logout Timer in %d seconds
No Active Agents to sync.
EAS Accounts Found. Forcing Logout without manual sync
UserManagement. Switch Tasks already pending. NOOP
UserManagementFramework: Creating Switch Tasks For Pending Transcation Count %d
UserManagementFramework: No Pending Transcation Count. Exiting without blocking logout.
All Transactions Finished. Initiating DA Shutdown
Device is a %@AppleInternal install
Enabling CFNetwork diagnostics
Received notificaion "%@" indicating a language change.  Going to exit to pick up new locale support
Failed to serialize state capture payload (%s): %@
Failed to allocate state capture data (%s)
ESDClientSettingsDelegate initialized.
ESDClientSettingsDelegate dealloced.
Account %@ supports oof %@
Account %@ is a hotmail account
Account %@ is not ASAccount class
ESDClientSettingsDelegate finished with status %ld.
Missing required container identifier
Creating a new ESDClient for Connection %p and ClientID %@
ClientDied Not Dispatching XPC Event %@ for DADClient %@
Dispatching XPC Event %@ for ESDClient %@
Destroying ESDClient %p for Connection %p and ClientID %@
Not stop monitoring account %@ folder %@ because other clients are watching it
PersistentClientCleanup called on disabled client. Will not perform any actions.
DAPERF DADClient Bumped priority, someone's waiting
DAPERF DADClient Dropping priority back to refresh
DAPERF DADClient Dropping priority, no one's waiting
DAPERF ESDClient Bumping priority to refresh
DAPERF ESDClient Dropping priority, no one's waiting
Received begin monitoring folders request with persistent flag: %@
DATransaction starting, ID: %@
Malformed request from client in %s: %@
Malformed request from client in %s: bad accountID
No folders watched. Marking not persistent. Transaction: %@
Sending pending folder updates to client. Updated folders: %@
Remote client disconnected and reconnected while begin monitoring folders.
Remote client disconnected and reconnected while stoping monitoring folders.
Remote client disconnected and reconnected while resuming monitoring folders.
Remote client disconnected and reconnected while suspending monitoring folders.
Requested to start monitoring agents with unrecognized client token %d. Forcing a reload.
Buddy needs to Run. Resetting Outstanding Agents and Registering for Buddy for Client %@
Ignoring call to _startMonitoringAgents: with missing client token
_requestFolderContentsUpdateForFolders for account %@, dataclass 0x%lx isUserRequested %d
Block: request folder contents update (accounts %@, folders %@): error updating folder contents
Deferring request to update folders %@
Not forwarding request to update folders, as we already did that recently, and have a deferred request queued
_requestAllFolderContentsUpdateForAccountId %@, dataclasses 0x%lx, isUserRequested: %d
[ESDAgentManager sharedManager] number of Current Agents %lu and they are %@
Block: request all folder contents update (accounts %@): error updating folder contents
Block: ESDClient %@ with XPC Connection %@ is In Bad State
Deferring request to update all folders
Not forwarding request to update all folders, as we already did that recently, and have a deferred request queued
_requestFolderListUpdateForAccountId %@, dataclass 0x%lx, isUserRequested %d
Block: request folder list update (accounts %@): error updating folder contents
Deferring request to update folder list
Not forwarding request to update folder list, as we already did that recently, and have a deferred request queued
ProcessMeetingRequests: DATransaction starting, ID: %@
ProcessMeetingRequests: Malformed request from client in %s: %@
ProcessMeetingRequests: sending reply message with status DAStatusUnknown
ProcessMeetingRequests: connection lost, unable to send reply message
ProcessMeetingRequests: error processing meeting
ProcessMeetingRequests: success
ProcessMeetingRequests: sending reply message
_resetCertWarningsForAccountWithId %@ dataclasses %lx
error resetting cert warnings account ID %@ dataclasses 0x%lx
SetFolderIdsThatExternalClientsCareAbout: sending reply message
SetFolderIdsThatExternalClientsCareAbout: connection lost, unable to send reply message
Unable to read data to decode folder change: %@
Swallowing decoder exception of %@, treating as null data
No status reports available
_resetThrottleTimersForAccountWithId %@
_beginDownloadingAttachment UUID: %@, accountID: %@
_cancelDownloadingAttachmentEvent downloadID: %@
Received a cancel for download %@, but that download doesn't exist any more
_respondToSharedCalendar UUID: %@, response: %ld, accountID: %@
_reportSharedCalendarAsJunk UUID: %@, accountID: %@
Daemon asked to create tz info cache
Starting calendar availability request with accountID: [%@], startDate: [%@], endDate: [%@], ignoredEventID: [%@], addresses: [%@]
Starting calendar directory search with accountID: [%@] recordTypes: [%@] resultLimit: [%lu] terms: [%@]
Received folder updated notification %@
Launching %@
Client of ESDClient died, cleaning up.
LOOK AT ME!!!! Got an unknown error, the client messed with our connection in a way we weren't expecting.  If you're seeing this, get ready for some pain
Received xpc message %@
unknown request sent to client.
request: %@
DADAttachmentDownloadDelegate finished with error %@
DADAttachmentDownloadDelegate finished, but could not find an account with the ID %@
Registered for wake notification
IONotificationPortGetRunLoopSource returned NULL, can't register for wake notification
IORegisterForSystemPower returned MACH_PORT_NULL, can't register for wake notification
ESDAgentManager: Fetching active agents. count = %d, agents = %@
loadAgents should not be called
iPhone Version %@
Not creating an agent for account info %@ (%{public}@), it refused to init itself
Creating an agent for account info %@ (%{public}@)
Loading up agent for account "%{public}@" (%@) (%{public}@)
Not loading an agent for account "%{public}@" (%@) (%{public}@), because agentClass is nil
Not loading an agent for account "%{public}@" (%@) (%{public}@), because it is disabled
ESDAgentManager: Settings active agents. count = %d, agents = %@
Enable active sync
Disable active sync
Error when cleaning up client restrictions for persistentUUID %@.  Error %@
ESDAgentManager: Clearing active agents. previous count = %d, previous agents = %@
Tearing down connection cache
Tore down connection cache
Handling power change call with messageType 0x%x
Received policy update request through XPC for account with ID %@. Setting this as user initiated.
problem handling policy update request: no known account with ID %@
Did not start monitoring folder ids %@, because the agent said "nope"
Did not start monitoring folder ids %@, because I have no agent containing account id %@.  Agents: %@
Did not stop monitoring folder ids %@, because I have no agent containing account id %@.  Agents: %@
Did not suspend monitoring folder ids %@, because I have no agent containing account id %@.  Agents: %@
Did not resume monitoring folder ids %@, because I have no agent containing account id %@.  Agents: %@
Did not add persistent monitoring folder ids %@, because the agent said "nope"
Did not add persistent monitoring folder ids %@, because I have no agent containing account id %@.  Agents: %@
Did not remove persistent monitoring folder ids %@, because I have no agent containing account id %@.  Agents: %@
Did not clear persistent monitoring folders, because I have no agent containing account id %@.  Agents: %@
DA is NOT removing orphan accounts, because we're in a holding pattern.
DA is NOT removing orphan accounts, because some joker told us not to in behavior options
ClearOrphanStores : ===== Starting Exchange Calendar Orphan Store Cleanup ======
ClearOrphanStores : Current Account IDs : %@
ClearOrphanStores : ===== End Exchange Calendar Orphan Store Cleanup ======
Ignoring Notes orphan check.  You asked for it.
ACCOUNTDCOERROR Removing notes store, as it's account id %@ isn't one of the account ids I know about: %@
Failed to save: %@
Notes database was corrupted! Non-fatal at this point, but just barely
ClearOrphanStores : Current DA CalDAV (events) Account IDs : %@
ClearOrphanStores : curStore %lu has store type %d
ClearOrphanStores : ACCOUNTDCOERROR Removing calendar store, as its account id %@ isn't one of the account ids I know about: %@ | %@
ClearOrphanStores : account id %@ store id %d has change tracking ids %@
ClearOrphanStores : Removing Calendar change tracking client, as its change tracking identifier "%@" isn't one of the account ids I know about: %@ | %@
ESAgentManager: Device is Unlocked %d and PastBuddy is %d
ESAgentManager: NO startAgentWhenSystemReadyBlock defined. This will not load any agents
ESAgentManager: System Ready Calling Load Agents Block
ESAgentManager: System Not Yet Ready. We are Not Loading Agents
ESAgentManager: Clearing disableMonitoringAgentsTokens and Loading Agents
Failed to register CT server notification %@ (domain: %d error: %d).
Failed to create CT server connection
User allowed cellular-data for BundleID %{public}@
Loading Exchange agents
Removing CFURLCache entries
Agents loaded and monitoring.  They are %@
ESAgentManager: System Not Yet Ready. We will Register for BuddyFinished and KeyBagLock status Notification
REGISTER FOR BUDDY
EXITING REGISTER FOR BUDDY
Agents awaiting shut down are %@
Stopping our agents (which are %@)
Stopping agent %@
Agent %@ has stopped monitoring
agentsAwaitingShutdown count is now %lu
Still waiting for %lu agents to shut down.  Spinning a run loop. Outstanding agents are %@
Run Loop finished.  Active Agent count is now %ld.
Agents stopped and saved
Ignoring call to enableMonitoringAgentsWithToken: with unrecognized token %d
ESDAgentManager asked to enableMonitoringAgents. New count = %d
ESDAgentManager disableMonitoringAgents reached 0. Start Loading Agents..
ESDAgentManager asked to disableMonitoringAgents. New count = %d
ESDAgentManager disableMonitoringAgents reached 1. Stop Loading Agents..
Found an EAS Account %@
ProcessMeetingRequests: account agent not found
unable to signal launchd to start dataaccessd: errno %d
unable to signal launchd to stop dataaccessd: errno %d
unable to cleanup launchd semaphore: errno %d
unable to signal launchd to keep dataaccessd alive: errno %d
unable to cleanup launchd semaphore so that dataaccessd can be pressured exit: errno %d
Received PCPreferencesDidChangeNotification due to user change
XPC: Received CDBPreferences_Notification_kCalPreferredDaysToSyncKey or CDBPreferences_Notification_kCalRemindersPreferredDaysToSyncKey
ESAgentManager: System Ready Check Fired with Name %@
DADClientShareResponseDelegate finished with error %@
DADClientShareResponseDelegate finished, but could not find an account with the ID %@
v8@?0
ESDClientDelegate.m
finishWithError: should be implemented in the subclass
%@ %@
com.apple.dataaccess.dataaccessd.PersistentPush
v16@?0@"NSObject<OS_xpc_object>"8
Should never call -init on ESDAccessManager.  Use +sharedManager instead.
DA-Blocking Task
LogoutReceived
com.apple.dataaccessd
com.apple.language.changed
com.apple.purplebuddy.LanguageResetReady
ExchangeSyncD State
@"NSString"8@?0
com.apple.dataaccessd.dadOperation
com.apple.dataaccessd.dadHighAvailability
CFNETWORK_DIAGNOSTICS
Received notificaion "%@" indicating a language change.  Going to exit to pick up new locale support
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
<%@: %p> { Folder %@, hasRemoteChanges: %d, isInitialUberSync %d isResyncAfterConnectionFailed %d actions %@ }
com.apple.dataaccess
CardDAV-changehistory
ESDRequestClientStatusDumpNotification
ESDClient.m
ESDClient already has a connection. Client bundle ID is: %@
(unknown)
B24@?0r*8@"NSObject<OS_xpc_object>"16
-[ESDClient _beginMonitoringFolders:]
v12@?0B8
B8@?0
-[ESDClient _stopMonitoringFolders:]
-[ESDClient _resumeMonitoringFolders:]
-[ESDClient _suspendMonitoringFolders:]
-[ESDClient _requestFolderContentsUpdate:]
-[ESDClient _requestAllFolderContentsUpdate:]
-[ESDClient _requestFolderListUpdate:]
Account ID is NULL when opening a contacts search. BailWhale
Query Dictionary Representation is NULL when opening a contacts search. BailWhale
-[ESDClient _processMeetingRequests:]
-[ESDClient _asyncProcessMeetingRequests:]
v40@?0@"NSString"8@"NSString"16q24@"NSError"32
root
v16@?0@"NSArray"8
Account ID is NULL when starting attachment download.
Attachment UUID is NULL when starting attachment download.
Attachment UUID is NULL when cancelling attachment download.
Account ID is NULL when starting calendar share response.
Attachment UUID is NULL when starting calendar share response.
Response type is NULL when starting calendar share response.
ASTimeZone
ASUtilsLazyClass
Account ID is NULL when opening a settings request. BailWhale
'accountID' is nil when starting calendar availability request.
'startDate' is nil when starting calendar availability request.
'endDate' is nil when starting calendar availability request.
'accountID' is nil when starting calendar directory search.
com.apple.dataaccess.statusreportaggregator
ESDAgentsStoppedNotification
PCPreferencesDidChangeNotification
_CalDatabaseChangedNotification
__ABDataBaseChangedByOtherProcessNotification
NoteContextDarwinNotificationWithLoggedChanges
com.apple.purplebuddy.setupdone
activeAgentsQueue
DataAccess
AccountInformation.plist
DAAgentClass
Identifier
com.apple.eas.account
ESDAgentManager.m
When clearing orphaned stores, we have an account with no accountID.  That's bad.  account: %@
com.apple.dataaccess.ctdatapolicychangeq
v24@?0^{__CFString=}8^{__CFDictionary=}16
kCTPerAppNetworkDataAccessPolicyChangedNotification
v16@?0@"DAAgent"8
disableMonitoringAgents
=======
Somebody isn't maintaining their account setup correctly
Library/Preferences/com.apple.dataaccess.launchd
Library/Preferences/com.apple.dataaccess.activesync
@"NSString"16@?0@"DAAccount"8
MobileCalDAVAccount
unregisterClientWithIdentifier: is abstract
registerClientWithIdentifier: is abstract
identifiersOfAllRegisterdClients: is abstract
ESDClientCalendarAvailabilityResponseDelegate
DAEventsCalendarAvailabilityResponseConsumer
NSObject
ESDClientDelegate
DaemonAdditions
DAAgent
DARefreshManagerDelegateSupport
CalendarSupport
ESDClientCalendarDirectorySearchResponseDelegate
DAEventsCalendarDirectorySearchResponseConsumer
DASearchQueryConsumer
_DAChangeHistoryABLegacyClerk
ESWifiAssertionManager
ESDClientContactsSearchDelegate
ESDAccessManager
DADClientAccountTimers
ESDMain
UMUserSwitchStakeholder
DATransactionMonitorDelegate
ESFolderSyncRequest
ESDClientSettingsDelegate
ESSettingsResponseDelegate
_DAChangeHistoryContactsClerk
ESDClient
ESDClientAttachmentDownloadDelegate
DAEventsAttachmentDownloadConsumer
ESDAgentManager
ESDClientShareResponseDelegate
DAEventsCalendarSharingResponseConsumer
ESDStatusReportAggregator
DAChangeHistoryClerk
writeToFile:atomically:
userInfo
useContacts
updateOofSettingsWithParams:consumer:
unsignedIntegerValue
unregisterChangeHistoryClientIdentifier:forContainerIdentifier:error:
unionSet:
transactionId
transactionCount
timeIntervalSinceDate:
taskWithName:reason:forBundleID:
suspendMonitoringFoldersWithIDs:
supportsSettingsCommand
substringFromIndex:
stringWithUTF8String:
stringWithFormat:
stringByAppendingString:
stringByAppendingPathComponent:
stopMonitoringFoldersWithIDs:
statusReport
sharedTransactionMonitor
sharedSession
sharedRunLoop
sharedPowerAssertionManager
sharedNetworkObserver
sharedKeychain
sharedInstanceForAccountType:creatingClass:
sharedInstance
sharedGateKeeper
sharedDBWatcher
sharedConnection
sharedBabysitter
shared
setWithArray:
setWasUserInitiated:
setTransactionMonitorDelegate:
setSyncingAllowed:
setProtocolVersion:
setPreferredAddress:
setObject:forKeyedSubscript:
setObject:forKey:
setFolderIdsThatExternalClientsCareAboutAdded:deleted:foldersTag:
setFolderIdsForPersistentPushAdded:deleted:clientID:
setDisplayName:
setConsumer:
save:
retrieveOofSettingsForConsumer:
resumeMonitoringFoldersWithIDs:
respondToShareRequestForCalendar:withResponse:consumer:
resetSyncStatusIfNecessaryForStoresOfType:
resetStatusReport
resetCertWarnings
requestPriority:forClient:dataclasses:
requestPolicyUpdate
requestCalendarAvailabilityForStartDate:endDate:ignoredEventID:addresses:consumer:
reportShareRequestAsJunkForCalendar:consumer:
removePersistentCredentials
removeOrphanedClientRestrictionsWithCompletion:
removeObserver:name:object:
removeObserver:
removeObjectForKey:
removeObject:
removeNetworkReachableObserver:
removeFromCoreDAVLoggingDelegates
removeFromAllPingHistoryBlacklistForFolderID:
removeFolderIDFromPingBlacklist:
removeAllObjects
reloadAccounts
registerUserSwitchStakeHolder:
registerChangeHistoryClientIdentifier:forContainerIdentifier:error:
refreshThrottleTime
raise
providerWithContactStore:
providerWithAddressBook:
protocolVersion
protocol
processDAFolderChange:withCompletionBlock:
postNotificationName:object:
port
policyManager
persistentUUID
performSearchQuery:
performCalendarDirectorySearchForTerms:recordTypes:resultLimit:consumer:
password
parentAccountIdentifier
orphanCheckEnabled
oofGetResult
onBehalfOfBundleIdentifier
objectForKeyedSubscript:
objectAtIndexedSubscript:
object
numberWithUnsignedInteger:
numberWithUnsignedInt:
numberWithLongLong:
numberWithLong:
numberWithInteger:
numberWithBool:
name
mutableCopy
monitorFoldersWithIDs:
minusSet:
mergeStatusReport:
mainRunLoop
loadDaemonBundleForACAccountType:
length
lastName
keychainAccessibilityType
isSubscribedCalendarAccount
isInHoldingPattern
isHotmailAccount
isEqualToString:
isEnabledForDataclass:
isDisabled
isAppleInternalInstall
invalidate
intersectsSet:
intersectSet:
intValue
initWithObjectsAndKeys:
initWithObjects:
initWithLabel:
initWithIdentifier:description:
initWithFireDate:interval:target:selector:userInfo:repeats:
initWithDictionaryRepresentation:consumer:
initWithDictionaryRepresentation:
initWithDictionary:
initWithContentsOfFile:
initWithCapacity:
initWithBackingAccountInfo:
initWithArray:
initForReadingFromData:error:
identifier
host
hasPrefix:
handleFailureInMethod:object:file:lineNumber:description:
get_kCalRemindersPreferredDaysToSyncKey
get_kCalPreferredDaysToSyncKey
getCFRunLoop
getBytes:range:
flushWithCompletionHandler:
firstName
fileSystemRepresentation
exceptionWithName:reason:userInfo:
errorWithDomain:code:userInfo:
endDailyAggDReporter
enabledForAnyDADataclasses:
enabledDataclassesBitmask
enabledDataclasses
enableChangeLogging:
emailAddresses
emailAddress
domain
displayName
didReceiveDarwinNotification:
dictionaryWithObjects:forKeys:count:
dictionaryRepresentation
deleteAccount:
defaultManager
defaultCenter
decodeObjectOfClass:forKey:
dateWithTimeIntervalSinceNow:
date
databaseIsCorrupt:
dataWithPropertyList:format:options:error:
daemonAppropriateAccountClassForACAccount:
da_newGUID
currentPolicyKey
currentHandler
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
countForObject:
countByEnumeratingWithState:objects:count:
count
copy
convertToDAOofParams
containsObject:
completelyIgnoreNotes
code
clearFolderIdsForPersistentPushWithClientID:
cancelShareResponseInstance:error:
cancelSearchQuery:
cancelDownloadingInstance:error:
cancelCalendarDirectorySearchWithID:
cancelCalendarAvailabilityRequestWithID:
calSaveDatabaseForAccountID:
calOpenDatabaseAsGenericClientForAuxDatabaseRef:
calOpenDatabaseAsGenericClientForAccountID:
calDatabaseForAuxDatabaseRef:
calDatabaseForAccountID:
calCloseDatabaseForAuxDatabaseRef:save:
calCloseDatabaseForAccountID:save:
bundleID
boolValue
beginDownloadingAttachmentWithUUID:consumer:
begin
backingAccountInfo
asSource
asDeviceID
asContainer
arrayWithObjects:count:
arrayWithCapacity:
array
archivedDataWithRootObject:
applyRestrictionDictionary:clientType:clientUUID:localizedClientDescription:localizedWarningMessage:outRestrictionChanged:outEffectiveSettingsChanged:outError:
allValues
allObjects
allKeys
allAccounts
agentClassForACAccount:
addToCoreDAVLoggingDelegates
addTimer:forMode:
addObserver:selector:name:object:
addObjectsFromArray:
addObject:
addNetworkReachableObserver:selector:
addFolderIDToPingBlacklist:
accountsWithAccountType:
accountWithIDShouldContinue:
accountTypeWithAccountTypeIdentifier:
accountTypeIdentifier
accountType
accountIdentifier
accountDescription
abDB
_leafExchangeAccountTypes
_cacheTimeZoneInfo
UTF8String
DAExtendedDescription
CFNetworkLogging
initWithAccountID:client:
dealloc
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
calendarAvailabilityRequestReturnedResults:
calendarAvailabilityRequestFinishedWithError:
initWithAccountID:client:startDate:endDate:ignoredEventID:addresses:
finishWithError:
performRequest
.cxx_destruct
_startDate
_endDate
_ignoredEventID
_addresses
_requestID
_queue
init
disable
userRequestsCancel
delegateID
setDelegateID:
client
setClient:
accountID
setAccountID:
finished
setFinished:
consumerCancelled
setConsumerCancelled:
_finished
_consumerCancelled
_delegateID
_client
_accountID
T@"ESDClient",W,N,V_client
T@"NSString",&,N,V_accountID
TB,N,V_finished
TB,N,V_consumerCancelled
T@"NSString",&,N,V_delegateID
deviceWillSleep
deviceDidWake
_reachabilityChanged:
initWithAccount:
trustHandler
stateString
observeReachabilityWithBlock:
stopObservingReachability
startMonitoring
requestAgentStopMonitoringWithCompletionBlock:
shutdown
refreshFolderListRequireChangedFolders:isUserRequested:
syncFolderIDs:forDataclasses:isUserRequested:
processMeetingRequestDatas:deliveryIdsToClear:deliveryIdsToSoftClear:inFolderWithId:callback:
getDAAccount
isMonitoring
setIsMonitoring:
account
setAccount:
lastRetryTimeout
setLastRetryTimeout:
syncWhenReachable
setSyncWhenReachable:
networkReachableBlock
setNetworkReachableBlock:
isWaitingForPassword
setIsWaitingForPassword:
_isMonitoring
_syncWhenReachable
_isWaitingForPassword
_account
_lastRetryTimeout
_networkReachableBlock
T@"DAAccount",&,N,V_account
Td,N,V_lastRetryTimeout
TB,N,V_syncWhenReachable
T@?,C,N,V_networkReachableBlock
TB,N,V_isWaitingForPassword
TB,N,V_isMonitoring
T@"DATrustHandler",R,N
saveXpcActivity:
preferredEventDaysToSync
preferredToDoDaysToSync
calendarDirectorySearchReturnedResults:
calendarDirectorySearchFinishedWithError:exceededResultLimit:
searchQuery:returnedResults:
searchQuery:finishedWithError:
searchQuery:returnedTotalCount:
initWithAccountID:client:terms:recordTypes:resultLimit:
_convertSearchQueryResults:
_terms
_recordTypes
_resultLimit
_searchID
_exceededResultLimit
initWithAddressBook:
unregisterClientWithIdentifier:forContainer:
registerClientWithIdentifier:forContainer:
identifiersOfAllRegisterdClients
addressBook
_addressBook
T^v,R,N,V_addressBook
sharedWifiAssertionManager
retainWifiAssertion
releaseWifiAssertion
_refCount
initWithAccountID:queryDictionary:client:
beginQuery
query
setQuery:
queryResultData
setQueryResultData:
_query
_queryResultData
T@"DASearchQuery",&,N,V_query
T@"NSData",&,N,V_queryResultData
sharedManager
_setupServerConnection
_init
removeClient:
addPersistentClientWithAccountID:clientID:watchedIDs:
isAccountID:folderID:watchedByClientBesides:
mainConnection
setMainConnection:
exchangeConnection
setExchangeConnection:
clients
setClients:
_mainConnection
_exchangeConnection
_clients
T@"NSObject<OS_xpc_object>",&,N,V_mainConnection
T@"NSObject<OS_xpc_object>",&,N,V_exchangeConnection
T@"NSMutableArray",&,N,V_clients
killAllTimers
deferredTimerInterval
folderIdToLastFolderContentsRequestDate
setLastFolderContentRequestDate:forFolderWithId:
setDeferredAllFolderContentsSource:
setDeferredFolderListSource:
setDeferredFolderContentsSource:
clientBehaviorForFolderIds:
clientBehaviorForFolderList
clientBehaviorForFolderContents
allowFolderWipe
lastAllFolderContentsRequestDate
setLastAllFolderContentsRequestDate:
lastFolderListRequestDate
setLastFolderListRequestDate:
lastFolderWipeRequestDate
setLastFolderWipeRequestDate:
deferredAllFolderContentsSource
deferredFolderListSource
deferredFolderContentsSource
setFolderIdToLastFolderContentsRequestDate:
_lastAllFolderContentsRequestDate
_lastFolderListRequestDate
_lastFolderWipeRequestDate
_deferredAllFolderContentsSource
_deferredFolderListSource
_deferredFolderContentsSource
_folderIdToLastFolderContentsRequestDate
T@"NSMutableDictionary",&,N,V_folderIdToLastFolderContentsRequestDate
T@"NSDate",&,N,V_lastAllFolderContentsRequestDate
T@"NSDate",&,N,V_lastFolderListRequestDate
T@"NSDate",&,N,V_lastFolderWipeRequestDate
T@"NSObject<OS_dispatch_source>",W,N,V_deferredAllFolderContentsSource
T@"NSObject<OS_dispatch_source>",W,N,V_deferredFolderListSource
T@"NSObject<OS_dispatch_source>",W,N,V_deferredFolderContentsSource
_forceShutdownTimerFired:
_shutdownNotification:
sharedMain
willSwitchUser
didFinishAllXPCTransactions
_shutdownDaemon
_forceShutdownDaemonOnLogoutInTimeInterval:
addToOperationsQueueDisabledCheckAndGoBlock:wrappedBlock:
addSignalHandler
addLanguageChangeHandler
shutdownDAD
waitForSystemAvailability
setRunLoopStoppedRef:
_setRunLoopStopped:
_configureAggdLogging
userSwitchTasks
setUserSwitchTasks:
_delayedShutdownTimer
_forceShutdownTimer
_runLoopStoppedRef
_userSwitchTasks
T@"NSArray",&,N,V_userSwitchTasks
initWithFolder:hasRemoteChanges:isInitialUberSync:
folder
setFolder:
hasRemoteChanges
setHasRemoteChanges:
isInitialUberSync
setIsInitialUberSync:
actions
setActions:
skippedActions
setSkippedActions:
isResyncAfterConnectionFailed
setIsResyncAfterConnectionFailed:
isResyncAfterServerError
setIsResyncAfterServerError:
containsPostponedActions
setContainsPostponedActions:
_hasRemoteChanges
_isInitialUberSync
_isResyncAfterConnectionFailed
_isResyncAfterServerError
_containsPostponedActions
_folder
_actions
_skippedActions
T@"DAFolder",&,N,V_folder
TB,N,V_hasRemoteChanges
TB,N,V_isInitialUberSync
T@"NSArray",&,N,V_actions
T@"NSArray",&,N,V_skippedActions
TB,N,V_isResyncAfterConnectionFailed
TB,N,V_isResyncAfterServerError
TB,N,V_containsPostponedActions
settingsRequestFinishedWithResults:status:error:
initWithAccountID:requestDictionary:forUpdate:client:
beginSettingsRequest
isOofSupported
isUpdate
setIsUpdate:
requestParams
setRequestParams:
responseParams
setResponseParams:
_isUpdate
_requestParams
_responseParams
TB,N,V_isUpdate
T@"DAOofParams",&,N,V_requestParams
T@"DAOofParams",&,N,V_responseParams
os_log
T@"NSObject<OS_os_log>",R,N
initWithContactStore:
contactStore
_contactStore
T@"CNContactStore",R,N,V_contactStore
_foldersUpdated:
_asPolicyKeyChanged:
_requestClientStatusDump:
_agentsStopped:
clientsToInterrogate
initWithConnection:clientID:
initWithClientID:
reconnectWithConnection:
_clientName
_removeBusyFolderIDs:forAccountWithID:
_removeWatchedFolderIDs:forAccountWithID:
watchedFolderCount
persistentClientCleanup
isMonitoringAccountID:folderID:
noteBlockedClientCallChange:
noteRefreshClientCallChange:
registerForInterrogation
unregisterForInterrogation
_createReplyToRequest:withProperties:
_beginMonitoringFolders:
beginMonitoringPersistentFolders:forAccount:
_stopMonitoringFolders:
_resumeMonitoringFolders:
_suspendMonitoringFolders:
_stopMonitoringAgentsWithClientToken:
_startMonitoringAgentsWithClientToken:
_startMonitoringAgentsWithServerToken:
_clearAllStopMonitoringAgentsTokens
_startMonitoringAgents:
_stopMonitoringAgents:
_getCurrentPolicyKey:
_requestPolicyUpdate:
timersForAccountWithID:
_requestFolderContentsUpdateForFolders:accountId:dataclasses:isUserRequested:
_requestFolderContentsUpdate:
_requestAllFolderContentsUpdateForAccountId:dataclasses:isUserRequested:
_requestAllFolderContentsUpdate:
_requestFolderListUpdateForAccountId:dataclasses:requireChangedFolders:isUserRequested:
_requestFolderListUpdate:
delegateWithIDIsGoingAway:
_openServerContactsSearch:
_cancelServerContactsSearch:
_processMeetingRequests:
_asyncProcessMeetingRequests:
_resetCertWarnings:
_setFolderIdsThatExternalClientsCareAbout:
_reportFolderItemsSyncResult:
_handleURL:
_processFolderChange:
_getStatusReports:
_registerForInterrogation:
_resetThrottleTimers:
_beginDownloadingAttachmentEvent:eventDict:
_cancelDownloadingAttachmentEvent:eventDict:
_respondToSharedCalendarEvent:eventDict:
_reportSharedCalendarAsJunkEvent:eventDict:
_fillOutEASTimeZoneInfo:
_getActiveSyncDeviceIdentifier:
_openServerOofSettingsRequest:
_checkIsOofSettingsSupported:
_requestCalendarAvailability:eventDict:
_cancelCalendarAvailabilityRequest:eventDict:
_performCalendarDirectorySearch:eventDict:
_cancelCalendarDirectorySearch:eventDict:
_getAccountExternalIdentification:eventDict:
applyClientStatusReportToAggregator:
_clientDiedWithReason:
_dispatchMessage:
rawConnection
persistent
clientBundleID
setClientBundleID:
clientUniqueID
setClientUniqueID:
conn
setConn:
watchedIDs
setWatchedIDs:
busyIDs
setBusyIDs:
updatedIDs
setUpdatedIDs:
numOutstandingBlockingClientCalls
setNumOutstandingBlockingClientCalls:
numOutstandingRefreshPriorityClientCalls
setNumOutstandingRefreshPriorityClientCalls:
accountTimers
setAccountTimers:
actionDelegatesById
setActionDelegatesById:
clientName
setClientName:
agentMonitoringTokens
setAgentMonitoringTokens:
_persistent
_numOutstandingBlockingClientCalls
_numOutstandingRefreshPriorityClientCalls
_clientBundleID
_clientUniqueID
_conn
_watchedIDs
_busyIDs
_updatedIDs
_accountTimers
_actionDelegatesById
_agentMonitoringTokens
T@"NSObject<OS_xpc_object>",&,N,V_conn
T@"NSMutableDictionary",&,N,V_watchedIDs
T@"NSMutableDictionary",&,N,V_busyIDs
T@"NSMutableDictionary",&,N,V_updatedIDs
Ti,N,V_numOutstandingBlockingClientCalls
Ti,N,V_numOutstandingRefreshPriorityClientCalls
T@"NSMutableDictionary",&,N,V_accountTimers
T@"NSMutableDictionary",&,N,V_actionDelegatesById
T@"NSString",&,N,V_clientName
T@"NSString",&,N,V_clientBundleID
T@"NSString",&,N,V_clientUniqueID
T@"NSMutableDictionary",&,N,V_agentMonitoringTokens
TB,R,N,V_persistent
downloadProgressDownloadedByteCount:totalByteCount:
downloadFinishedError:
initWithAccountID:attachmentUUID:client:
beginDownload
attachmentUUID
setAttachmentUUID:
downloadID
setDownloadID:
_attachmentUUID
_downloadID
T@"NSString",&,N,V_attachmentUUID
T@,&,N,V_downloadID
cleanUpFilesForAccountWithId:
preferredDaysToSyncDidChange
waiterID
activeAgents
accountsProviderWithDBHelper:
changeHistoryClerkWithDBHelper:
agentWithAccountID:
accountWithAccountID:
accountWithAccountID:andClassName:
_configFileForAgent:
_accountInfoPath
_phoneVersion
loadAgents
loadExchangeAgents
saveAndReleaseAgents
_deviceWillSleep
_deviceDidWake
currentPolicyKeyForAccount:
requestPolicyUpdateForAccount:
startMonitoringAccountID:folderIDs:
stopMonitoringAccountID:folderIDs:
suspendMonitoringAccountID:folderIDs:
resumeMonitoringAccountID:folderIDs:
addPersistMonitoringAccountID:folderIDs:clientID:
removePersistMonitoringAccountID:folderIDs:clientID:
clearPersistMonitoringAccountID:clientID:
_clearOrphanedStores
_clearOrphanedStoresInCalendarDatabase:eventAccountIds:toDoAccountIds:
_systemMayNowBeReady
_resetMonitoringRequestsAndLoadAgents
_calDaysToSyncDidChange
_registerForCTDataUsageNotificaiton
_handleCellularDataUsageChangedNotification
_loadAndStartExchangeMonitoringAgents
registerForBuddy
_stopMonitoringAndSaveAgents
_addAccountAggdEntries
enableMonitoringAgentsWithToken:
disableMonitoringAgents
updateFolderListForAccountID:andDataclasses:requireChangedFolders:isUserRequested:
updateContentsOfFolders:forAccountID:andDataclasses:isUserRequested:
updateContentsOfAllFoldersForAccountID:andDataclasses:isUserRequested:
activeAccountBundleIDs
hasEASAccountConfigured
processMeetingRequestDatas:deliveryIdsToClear:deliveryIdsToSoftClear:inFolderWithId:forAccountWithId:callback:
resetCertWarningsForAccountWithId:andDataclasses:
setFolderIdsThatExternalClientsCareAboutAdded:deleted:foldersTag:forAccountID:
reportFolderItemsSyncSuccess:forFolderWithID:withItemsCount:andAccountWithID:
handleURLString:
processFolderChange:forAccountWithID:completionBlock:
getStatusReportDictsWithCompletionBlock:
_hasDataclassWeCareAbout:
addPendingAccountSetup
removePendingAccountSetup
hasPendingAccountSetup
hasActiveAccounts
enableDaemon
disableDaemon
cleanupLaunchdSemaphore
enableActiveSync
disableActiveSync
upgradeAccountsInSimulator
subCalHandlers
setSubCalHandlers:
nextDisableMonitoringAgentsToken
setNextDisableMonitoringAgentsToken:
disableMonitoringAgentsTokens
_activeAgents
_activeAgentsQueue
_pmNotifier
_pmPort
_pmRunLoopSource
_startAgentsWhenSystemReadyBlock
_CTCellularUsagePolicyNotificationQ
_ctServerConnection
_pendingAccountSetupCount
_subCalHandlers
_nextDisableMonitoringAgentsToken
_disableMonitoringAgentsTokens
T@"NSMutableArray",&,N,V_subCalHandlers
TQ,N,V_nextDisableMonitoringAgentsToken
T@"NSMutableDictionary",R,N,V_disableMonitoringAgentsTokens
T@"NSArray",R,N
shareResponseFinishedWithError:
initWithAccountID:client:calendarID:
respondToShareRequestWithResponse:
reportAsJunk
_doResponseWithBlock:
calendarID
setCalendarID:
shareID
setShareID:
_calendarID
_shareID
T@"NSString",&,N,V_calendarID
T@"NSString",&,N,V_shareID
initWithStatusReports:numOutstandingReports:timeout:completionBlock:
_coalesceAndReport
noteAdditionalReportDicts:
_numOutstandingReports
_completionBlock
_persistentUUIDToStatusReport
clerkWithContactStore:
clerkWithAddressBook:
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@16
v24@0:8@"NSDictionary"16
v24@0:8@"NSError"16
@64@0:8@16@24@32@40@48@56
v16@0:8
@"NSDate"
@"NSString"
@"NSArray"
@"NSObject<OS_dispatch_queue>"
@32@0:8@16@24
v20@0:8B16
@"ESDClient"
@24@0:8@16
v24@0:8@?16
v24@0:8B16B20
v36@0:8@16q24B32
v56@0:8@16@24@32@40@?48
d16@0:8
v24@0:8d16
@?16@0:8
@"DAAccount"
i16@0:8
v28@0:8@16B24
v28@0:8@"NSError"16B24
v32@0:8@16@24
v32@0:8@"DASearchQuery"16@"NSArray"24
v32@0:8@"DASearchQuery"16@"NSError"24
v32@0:8@"DASearchQuery"16@"NSNumber"24
@56@0:8@16@24@32@40Q48
@"NSSet"
@24@0:8^v16
^v16@0:8
@40@0:8@16@24@32
@"DASearchQuery"
@"NSData"
v40@0:8@16@24@32
B40@0:8@16@24@32
@"NSObject<OS_xpc_object>"
@"NSMutableArray"
q24@0:8@16
q16@0:8
@"NSObject<OS_dispatch_source>"
@"NSMutableDictionary"
v20@0:8i16
v32@0:8@?16@?24
v24@0:8^B16
@"NSTimer"
@32@0:8@16B24B28
@"DAFolder"
v40@0:8@16q24@32
v40@0:8@"ASSettingsTaskResponse"16q24@"NSError"32
@44@0:8@16@24B32@36
@"DAOofParams"
@"CNContactStore"
B32@0:8@16@24
v24@0:8Q16
v44@0:8@16@24q32B40
v40@0:8@16q24B32B36
v32@0:8q16q24
B40@0:8^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{_opaque_pthread_mutex_t=q[56c]}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIBBBBBB}16@24@32
B40@0:8@16q24B32B36
B44@0:8@16@24q32B40
B36@0:8@16q24B32
v64@0:8@16@24@32@40@48@?56
B32@0:8@16q24
B48@0:8@16@24@32@40
v44@0:8B16@20Q28@36
B40@0:8@16@24@?32
^{IONotificationPort=}
^{__CFRunLoopSource=}
^{__CTServerConnection=}
v24@0:8q16
@44@0:8@16i24d28@?36
