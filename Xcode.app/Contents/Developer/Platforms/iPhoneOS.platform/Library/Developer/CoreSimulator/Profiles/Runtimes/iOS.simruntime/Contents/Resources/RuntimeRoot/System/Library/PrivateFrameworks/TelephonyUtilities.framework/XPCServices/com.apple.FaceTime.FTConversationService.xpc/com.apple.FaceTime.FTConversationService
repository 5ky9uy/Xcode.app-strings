FaceTime
secure_delete
v24@?0@"NSPersistentStoreDescription"8@"NSError"16
Handle
com.apple.FaceTime.FTConversationService
com.apple.FaceTime.FTConversationService.queue
KeyValue
v8@?0
com.apple.FaceTime
FTConversationService
ConversationLink
-corrupt
v16@?0@"NSManagedObjectContext"8
invitedHandles
originatorHandle
v32@?0@"<FTPersistentDataSourceDelegate>"8@"NSObject<OS_dispatch_queue>"16^B24
access-conversation-links
modify-conversation-links
Loading persistent store with description %@ failed with error %@
v12@?0i8
key == %@
FaceTime.sqlite3
com.apple.mobile.keybagd.first_unlock
v32@?0@"<TUDelegate>"8@"NSObject<OS_dispatch_queue>"16^B24
T@"NSError",R,N
T#,R
T@"NSSet",R,C,N
T@"<FTDeviceDataSource>",R,N,V_dataSource
bootLockEnabled
T@"FTManagedConversationLink",&,D,N
conversationServiceEntitlements
T@"FTNotifyObserver",&,N,V_firstUnlockNotifyObserver
isProxy
T@"FTPersistentDataSource",R,N,V_dataSource
normalizedValue
T@"NSDate",&,D,N
release
T@"NSManagedObjectContext",R,N,V_managedObjectContext
serviceListener
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
setFetchOffset:
T@"NSString",R,C
setPersistentStoreDescriptions:
T@"NSUUID",C,D,N
stringByAppendingPathExtension:
T@"TUConversationLinkDescriptor",R,N
.cxx_destruct
T@"NSSet",&,D,N
T@"<FTConversationServiceConnectionDelegate>",W,N,V_delegate
T@"FTConversationServiceConnectionManager",R,N,V_connectionManager
containsObject:
T@"FTManagedHandle",&,D,N
dealloc
T@"FTPersistentContainer",R,N,V_persistentContainer
T@"NSData",&,D,N
options
T@"NSDate",C,D,N
removeDelegate:
T@"NSMutableSet",R,N,V_connections
T@"NSString",C,D,N
setKey:
T@"NSString",R,C,N,V_name
setStringValue:
T@"NSXPCConnection",R,N,V_connection
version
T@"TUDelegateController",R,D,N
T@"TUDelegateController",R,N,V_delegateController
T@"TUDelegateController<FTPersistentDataSourceDelegate>",R,N,V_delegateController
T@"TUHandle",R,N
T@"TUUserConfiguration",R,N,V_userConfiguration
T@?,R,C,N,V_callback
TB,D,N
TB,N,GisBootLockEnabled,V_bootLockEnabled
TB,R,N,GisBootLockEnabled
TQ,R
Ti,N,V_token
Tq,D,N
Ts,D,N
T{os_unfair_lock_s=I},R,N,V_accessorLock
URLByAppendingPathComponent:isDirectory:
URLByDeletingLastPathComponent
URLsForDirectory:inDomains:
UTF8String
_accessorLock
_bootLockEnabled
_callback
_connection
_connectionManager
_connections
_dataSource
_delegate
_delegateController
_firstUnlockNotifyObserver
_managedObjectContext
_name
_persistentContainer
_queue
_setQueue:
_token
_userConfiguration
accessorLock
activated
addConnection:
addConversationLinkDescriptors:completion:
addConversationLinkDescriptors:error:
addConversationLinkDescriptors:managedObjectContext:error:
addConversationLinkDescriptors:reply:
addDelegate:queue:
addObject:
addOrUpdateConversationLinkDescriptors:completion:
addOrUpdateConversationLinkDescriptors:error:
addOrUpdateConversationLinkDescriptors:managedObjectContext:error:
addOrUpdateConversationLinkDescriptors:reply:
addOrUpdateKey:forIntegerValue:stringValue:managedObjectContext:error:
addPersistentStoreWithDescription:completionHandler:
arrayWithCapacity:
arrayWithObjects:count:
autorelease
callback
class
clientXPCInterface
code
conformsToProtocol:
connection
connectionManager
connections
conversationLinkDescriptorCountWithPredicate:completion:
conversationLinkDescriptorCountWithPredicate:error:
conversationLinkDescriptorCountWithPredicate:managedObjectContext:error:
conversationLinkDescriptorCountWithPredicate:reply:
conversationLinkDescriptorDidChangeForPersistentDataSource:
conversationLinkDescriptorsDidChange
conversationLinkDescriptorsWithPredicate:limit:offset:completion:
conversationLinkDescriptorsWithPredicate:limit:offset:error:
conversationLinkDescriptorsWithPredicate:limit:offset:reply:
conversationLinkDescriptorsWithPredicate:managedObjectContext:limit:offset:error:
conversationServiceDataSourceError
copy
count
countByEnumeratingWithState:objects:count:
countForFetchRequest:error:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
creationDate
dataSource
date
debugDescription
defaultManager
delegate
delegateController
deleteObject:
deletedObjects
deletionDate
description
destroyPersistentStoreAtURL:withType:options:error:
destroyPersistentStoreWithDescription:error:
dictionaryWithObjects:forKeys:count:
didChangeBootLockEnabledForDeviceObserver:
domain
entitiesByName
entitlements
enumerateDelegatesUsingBlock:
errorWithDomain:code:userInfo:
exceptionWithName:reason:userInfo:
executeFetchRequest:error:
expirationDate
fetchRequest
fetchRequestWithEntityName:
firstObject
firstUnlockNotifyObserver
groupUUID
handle
hasChanges
hash
identifier
inMemoryPersistentStoreDescription
init
initWithConnection:queue:
initWithContext:
initWithDataSource:
initWithEntity:insertIntoManagedObjectContext:
initWithGroupUUID:originator:pseudonym:publicKey:
initWithIdentifier:revision:handle:
initWithName:
initWithName:queue:callback:
initWithQueue:
initWithQueue:dataSource:
initWithStoreType:
insertObject:
integerForKey:completion:
integerForKey:error:
integerForKey:reply:
integerValue
invalidate
invitedConversationLink
invitedHandles
isActivated
isBootLockEnabled
isEqual:
isEqualToHandle:
isEqualToSet:
isEqualToString:
isKindOfClass:
isMemberOfClass:
isoCountryCode
keyValueForKey:managedObjectContext:error:
lastPathComponent
lifetimeType
linkLifetimeScope
listener:shouldAcceptNewConnection:
loadPersistentStoresWithCompletionHandler:
managedConversationLinkForTUConversationLinkDescriptor:inManagedObjectContext:
managedHandleForTUHandle:inManagedObjectContext:
managedHandlesForTUHandles:inManagedObjectContext:
managedObjectContext
managedObjectModel
name
newBackgroundContext
normalizedEmailAddressHandleForValue:
normalizedGenericHandleForValue:
normalizedPhoneNumberHandleForValue:isoCountryCode:
notifyDelegatesConversationLinkDescriptorsDidChange
objectForKeyedSubscript:
originator
originatorConversationLink
originatorHandle
originatorIdentifier
originatorRevision
pathExtension
performBackgroundTask:
performBlock:
performBlockAndWait:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
persistentContainer
persistentStoreCoordinator
persistentStoreDescriptionWithURL:
predicateWithFormat:
privateKey
pseudonym
publicKey
queue
remoteObjectProxy
removeConnection:
removeConversationLinkDescriptorsWithPredicate:userInteraction:completion:
removeConversationLinkDescriptorsWithPredicate:userInteraction:error:
removeConversationLinkDescriptorsWithPredicate:userInteraction:managedObjectContext:error:
removeConversationLinkDescriptorsWithPredicate:userInteraction:reply:
removeObject:
replacePersistentStoreAtURL:destinationOptions:withPersistentStoreFromURL:sourceOptions:storeType:error:
respondsToSelector:
resume
retain
retainCount
revision
rollback
save:
self
serverXPCInterface
setActivated:
setActivated:withRevision:forConversationLinkDescriptorsWithPredicate:completion:
setActivated:withRevision:forConversationLinkDescriptorsWithPredicate:error:
setActivated:withRevision:forConversationLinkDescriptorsWithPredicate:managedObjectContext:error:
setActivated:withRevision:forConversationLinkDescriptorsWithPredicate:reply:
setBootLockEnabled:
setCreationDate:
setDelegate:
setDeletionDate:
setExpirationDate:
setExpirationDate:withRevision:forConversationLinkDescriptorsWithPredicate:completion:
setExpirationDate:withRevision:forConversationLinkDescriptorsWithPredicate:error:
setExpirationDate:withRevision:forConversationLinkDescriptorsWithPredicate:managedObjectContext:error:
setExpirationDate:withRevision:forConversationLinkDescriptorsWithPredicate:reply:
setExportedInterface:
setExportedObject:
setFetchLimit:
setFirstUnlockNotifyObserver:
setGroupUUID:
setInteger:forKey:completion:
setInteger:forKey:error:
setInteger:forKey:reply:
setIntegerValue:
setInterruptionHandler:
setInvalidationHandler:
setInvitedHandles:
setInvitedHandles:withRevision:forConversationLinkDescriptorsWithPredicate:completion:
setInvitedHandles:withRevision:forConversationLinkDescriptorsWithPredicate:error:
setInvitedHandles:withRevision:forConversationLinkDescriptorsWithPredicate:managedObjectContext:error:
setInvitedHandles:withRevision:forConversationLinkDescriptorsWithPredicate:reply:
setIsoCountryCode:
setLifetimeType:
setLinkLifetimeScope:
setName:
setName:withRevision:forConversationLinkDescriptorsWithPredicate:completion:
setName:withRevision:forConversationLinkDescriptorsWithPredicate:error:
setName:withRevision:forConversationLinkDescriptorsWithPredicate:managedObjectContext:error:
setName:withRevision:forConversationLinkDescriptorsWithPredicate:reply:
setNormalizedValue:
setOption:forKey:
setOriginatorHandle:
setOriginatorIdentifier:
setOriginatorRevision:
setPredicate:
setPrivateKey:
setPseudonym:
setPublicKey:
setRelationshipKeyPathsForPrefetching:
setRemoteObjectInterface:
setReturnsObjectsAsFaults:
setShouldMigrateStoreAutomatically:
setString:forKey:completion:
setString:forKey:error:
setString:forKey:reply:
setToken:
setType:
setValue:
setValue:forPragmaNamed:
setWithArray:
setWithCapacity:
shouldAcceptConnection:
simulateFatalPersistentStoreError
stringByAppendingString:
stringByDeletingPathExtension
stringForKey:completion:
stringForKey:error:
stringForKey:reply:
stringValue
stringWithCString:encoding:
stringWithFormat:
superclass
token
tuConversationLinkDescriptor
tuHandle
tuInvitedHandles
tu_predicateForConversationLinkDescriptorsWithPseudonym:
type
updateWithDescriptor:
updatedObjects
userConfiguration
userInfo
value
valueForEntitlement:
zone
Configuring SQLite persistent store.
Enabling restricted access until device is unlocked for the first time.
Enabling secure delete
Enabling automatic lightweight migration
Configuring in-memory persistent store.
Attempting to destroy corrupt persistent store due to fatal error %@
Could not find entity description with name %@ in managed object context %@. Falling back to convenience initializer.
Launching %@
Checking whether device is boot locked
Exiting %@; device has not been unlocked since boot.
Creating directory hierarchy
Exiting %@; creation of data store directory at %@ failed with error %@
Resuming listener %@
Attempt to add conversation links failed with error %@
Attempt to add or update conversation links failed with error %@
Attempt to retrieve conversation link count failed with error %@
Attempt to retrieve conversation links failed with error %@
Attempt to remove conversation links failed with error %@
Attempt to modify conversation link failed with error %@
Attempt to set integer key value failed with error %@
Attempt to set string key value failed with error %@
Moving corrupt persistent store with description %@ failed with error %@
Loading persistent stores
Loaded persistent store with description %@
%@ connection interrupted
%@ connection invalidated
Connection is not entitled to use %@
Asked to accept connection %@
Entitlement found; accepting connection %@
Entitlement not found; rejecting connection %@
failed to set user_dir_suffix path component: %{darwin.errno}d
failed to resolve temporary directory: %{darwin.errno}d
failed to create temporary directory: %{darwin.errno}d
Created temporary directory: %{public}s
FTPersistentContainer
TUHandle
FTManagedConversationLink
FTDeviceDataSource
NSObject
FTConversationService
CoreDataProperties
FTConversationServiceConnectionManager
FTConversationServiceConnectionDelegate
TUConversationLinkDescriptorXPCServer
FTManagedHandle
TUConversationLinkDescriptorDataSource
FTPersistentDataSource
FTNotifyObserver
TUConversationLinkKeyValueDataSource
FTManagedKeyValue
FTConversationServiceConnection
FTPersistentDataSourceDelegate
TUDelegate
NSXPCListenerDelegate
TUConversationLinkDescriptor
FTDeviceObserverDelegate
FTDeviceObserver
@24@0:8q16
@16@0:8
v24@0:8@?16
v16@0:8
@"NSManagedObjectContext"
@"TUUserConfiguration"
@32@0:8@16@24
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@?24
v48@0:8@16Q24Q32@?40
v36@0:8@16B24@?28
v44@0:8B16q20@28@?36
v48@0:8@16q24@32@?40
v40@0:8q16@24@?32
v40@0:8@16@24@?32
v32@0:8@"NSArray"16@?<v@?B@"NSError">24
v32@0:8@"NSPredicate"16@?<v@?Q@"NSError">24
v48@0:8@"NSPredicate"16Q24Q32@?<v@?@"NSArray"@"NSError">40
v36@0:8@"NSPredicate"16B24@?<v@?Q@"NSError">28
v44@0:8B16q20@"NSPredicate"28@?<v@?Q@"NSError">36
v48@0:8@"NSDate"16q24@"NSPredicate"32@?<v@?Q@"NSError">40
v48@0:8@"NSSet"16q24@"NSPredicate"32@?<v@?Q@"NSError">40
v48@0:8@"NSString"16q24@"NSPredicate"32@?<v@?Q@"NSError">40
v40@0:8q16@"NSString"24@?<v@?B@"NSError">32
v32@0:8@"NSString"16@?<v@?q@"NSError">24
v40@0:8@"NSString"16@"NSString"24@?<v@?B@"NSError">32
v32@0:8@"NSString"16@?<v@?@"NSString"@"NSError">24
@24@0:8@16
v24@0:8@16
{os_unfair_lock_s=I}16@0:8
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSMutableSet"
@"FTPersistentDataSource"
B32@0:8@16^@24
Q32@0:8@16^@24
@48@0:8@16Q24Q32^@40
Q36@0:8@16B24^@28
Q44@0:8B16q20@28^@36
Q48@0:8@16q24@32^@40
B40@0:8@16@24^@32
Q40@0:8@16@24^@32
@56@0:8@16@24Q32Q40^@48
Q44@0:8@16B24@28^@36
Q52@0:8B16q20@28@36^@44
Q56@0:8@16q24@32@40^@48
v32@0:8@16@24
@"FTPersistentContainer"
@"TUDelegateController<FTPersistentDataSourceDelegate>"
@40@0:8@16@24@?32
@?16@0:8
i16@0:8
v20@0:8i16
@"NSString"
@"NSObject<OS_dispatch_queue>"
B40@0:8q16@24^@32
q32@0:8@16^@24
@32@0:8@16^@24
@40@0:8@16@24^@32
B56@0:8@16q24@32@40^@48
v24@0:8@"FTPersistentDataSource"16
@"<FTConversationServiceConnectionDelegate>"
@"NSXPCConnection"
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"FTConversationServiceConnectionManager"
v24@0:8@"FTDeviceObserver"16
v20@0:8B16
@"TUDelegateController"
@"<FTDeviceDataSource>"
@"FTNotifyObserver"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.private.security.storage.AppDataContainers</key>
<true/>
<key>com.apple.private.security.storage.FaceTime</key>
<true/>
<key>com.apple.private.sqlite.sqlite-encryption</key>
<true/>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/Library/FaceTime/</string>
</array>
<key>com.apple.security.exception.shared-preference.read-only</key>
<array>
<string>com.apple.TelephonyUtilities</string>
</array>
<key>com.apple.security.ts.mobile-keybag-access</key>
<true/>
<key>com.apple.security.ts.tmpdir</key>
<string>com.apple.FaceTime.FTConversationService</string>
<key>platform-application</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>temporary-sandbox</string>
</array>
</dict>
</plist>
094com.apple.private.security.storage.AppDataContainers
00+com.apple.private.security.storage.FaceTime
0/*com.apple.private.sqlite.sqlite-encryption
0X@com.apple.security.exception.files.home-relative-path.read-write0
/Library/FaceTime/0Z8com.apple.security.exception.shared-preference.read-only0
com.apple.TelephonyUtilities0/*com.apple.security.ts.mobile-keybag-access
com.apple.security.ts.tmpdir(com.apple.FaceTime.FTConversationService0
platform-application
seatbelt-profiles0
temporary-sandbox
FaceTime
secure_delete
v24@?0@"NSPersistentStoreDescription"8@"NSError"16
Handle
com.apple.FaceTime.FTConversationService
com.apple.FaceTime.FTConversationService.queue
KeyValue
v8@?0
com.apple.FaceTime
FTConversationService
ConversationLink
-corrupt
v16@?0@"NSManagedObjectContext"8
invitedHandles
originatorHandle
v32@?0@"<FTPersistentDataSourceDelegate>"8@"NSObject<OS_dispatch_queue>"16^B24
access-conversation-links
modify-conversation-links
Loading persistent store with description %@ failed with error %@
v12@?0i8
key == %@
FaceTime.sqlite3
com.apple.mobile.keybagd.first_unlock
v32@?0@"<TUDelegate>"8@"NSObject<OS_dispatch_queue>"16^B24
T@"NSError",R,N
T#,R
T@"NSSet",R,C,N
T@"<FTDeviceDataSource>",R,N,V_dataSource
bootLockEnabled
T@"FTManagedConversationLink",&,D,N
conversationServiceEntitlements
T@"FTNotifyObserver",&,N,V_firstUnlockNotifyObserver
isProxy
T@"FTPersistentDataSource",R,N,V_dataSource
normalizedValue
T@"NSDate",&,D,N
release
T@"NSManagedObjectContext",R,N,V_managedObjectContext
serviceListener
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
setFetchOffset:
T@"NSString",R,C
setPersistentStoreDescriptions:
T@"NSUUID",C,D,N
stringByAppendingPathExtension:
T@"TUConversationLinkDescriptor",R,N
.cxx_destruct
T@"NSSet",&,D,N
T@"<FTConversationServiceConnectionDelegate>",W,N,V_delegate
T@"FTConversationServiceConnectionManager",R,N,V_connectionManager
containsObject:
T@"FTManagedHandle",&,D,N
dealloc
T@"FTPersistentContainer",R,N,V_persistentContainer
T@"NSData",&,D,N
options
T@"NSDate",C,D,N
removeDelegate:
T@"NSMutableSet",R,N,V_connections
T@"NSString",C,D,N
setKey:
T@"NSString",R,C,N,V_name
setStringValue:
T@"NSXPCConnection",R,N,V_connection
version
T@"TUDelegateController",R,D,N
T@"TUDelegateController",R,N,V_delegateController
T@"TUDelegateController<FTPersistentDataSourceDelegate>",R,N,V_delegateController
T@"TUHandle",R,N
T@"TUUserConfiguration",R,N,V_userConfiguration
T@?,R,C,N,V_callback
TB,D,N
TB,N,GisBootLockEnabled,V_bootLockEnabled
TB,R,N,GisBootLockEnabled
TQ,R
Ti,N,V_token
Tq,D,N
Ts,D,N
T{os_unfair_lock_s=I},R,N,V_accessorLock
URLByAppendingPathComponent:isDirectory:
URLByDeletingLastPathComponent
URLsForDirectory:inDomains:
UTF8String
_accessorLock
_bootLockEnabled
_callback
_connection
_connectionManager
_connections
_dataSource
_delegate
_delegateController
_firstUnlockNotifyObserver
_managedObjectContext
_name
_persistentContainer
_queue
_setQueue:
_token
_userConfiguration
accessorLock
activated
addConnection:
addConversationLinkDescriptors:completion:
addConversationLinkDescriptors:error:
addConversationLinkDescriptors:managedObjectContext:error:
addConversationLinkDescriptors:reply:
addDelegate:queue:
addObject:
addOrUpdateConversationLinkDescriptors:completion:
addOrUpdateConversationLinkDescriptors:error:
addOrUpdateConversationLinkDescriptors:managedObjectContext:error:
addOrUpdateConversationLinkDescriptors:reply:
addOrUpdateKey:forIntegerValue:stringValue:managedObjectContext:error:
addPersistentStoreWithDescription:completionHandler:
arrayWithCapacity:
arrayWithObjects:count:
autorelease
callback
class
clientXPCInterface
code
conformsToProtocol:
connection
connectionManager
connections
conversationLinkDescriptorCountWithPredicate:completion:
conversationLinkDescriptorCountWithPredicate:error:
conversationLinkDescriptorCountWithPredicate:managedObjectContext:error:
conversationLinkDescriptorCountWithPredicate:reply:
conversationLinkDescriptorDidChangeForPersistentDataSource:
conversationLinkDescriptorsDidChange
conversationLinkDescriptorsWithPredicate:limit:offset:completion:
conversationLinkDescriptorsWithPredicate:limit:offset:error:
conversationLinkDescriptorsWithPredicate:limit:offset:reply:
conversationLinkDescriptorsWithPredicate:managedObjectContext:limit:offset:error:
conversationServiceDataSourceError
copy
count
countByEnumeratingWithState:objects:count:
countForFetchRequest:error:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
creationDate
dataSource
date
debugDescription
defaultManager
delegate
delegateController
deleteObject:
deletedObjects
deletionDate
description
destroyPersistentStoreAtURL:withType:options:error:
destroyPersistentStoreWithDescription:error:
dictionaryWithObjects:forKeys:count:
didChangeBootLockEnabledForDeviceObserver:
domain
entitiesByName
entitlements
enumerateDelegatesUsingBlock:
errorWithDomain:code:userInfo:
exceptionWithName:reason:userInfo:
executeFetchRequest:error:
expirationDate
fetchRequest
fetchRequestWithEntityName:
firstObject
firstUnlockNotifyObserver
groupUUID
handle
hasChanges
hash
identifier
inMemoryPersistentStoreDescription
init
initWithConnection:queue:
initWithContext:
initWithDataSource:
initWithEntity:insertIntoManagedObjectContext:
initWithGroupUUID:originator:pseudonym:publicKey:
initWithIdentifier:revision:handle:
initWithName:
initWithName:queue:callback:
initWithQueue:
initWithQueue:dataSource:
initWithStoreType:
insertObject:
integerForKey:completion:
integerForKey:error:
integerForKey:reply:
integerValue
invalidate
invitedConversationLink
invitedHandles
isActivated
isBootLockEnabled
isEqual:
isEqualToHandle:
isEqualToSet:
isEqualToString:
isKindOfClass:
isMemberOfClass:
isoCountryCode
keyValueForKey:managedObjectContext:error:
lastPathComponent
lifetimeType
linkLifetimeScope
listener:shouldAcceptNewConnection:
loadPersistentStoresWithCompletionHandler:
managedConversationLinkForTUConversationLinkDescriptor:inManagedObjectContext:
managedHandleForTUHandle:inManagedObjectContext:
managedHandlesForTUHandles:inManagedObjectContext:
managedObjectContext
managedObjectModel
name
newBackgroundContext
normalizedEmailAddressHandleForValue:
normalizedGenericHandleForValue:
normalizedPhoneNumberHandleForValue:isoCountryCode:
notifyDelegatesConversationLinkDescriptorsDidChange
objectForKeyedSubscript:
originator
originatorConversationLink
originatorHandle
originatorIdentifier
originatorRevision
pathExtension
performBackgroundTask:
performBlock:
performBlockAndWait:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
persistentContainer
persistentStoreCoordinator
persistentStoreDescriptionWithURL:
predicateWithFormat:
privateKey
pseudonym
publicKey
queue
remoteObjectProxy
removeConnection:
removeConversationLinkDescriptorsWithPredicate:userInteraction:completion:
removeConversationLinkDescriptorsWithPredicate:userInteraction:error:
removeConversationLinkDescriptorsWithPredicate:userInteraction:managedObjectContext:error:
removeConversationLinkDescriptorsWithPredicate:userInteraction:reply:
removeObject:
replacePersistentStoreAtURL:destinationOptions:withPersistentStoreFromURL:sourceOptions:storeType:error:
respondsToSelector:
resume
retain
retainCount
revision
rollback
save:
self
serverXPCInterface
setActivated:
setActivated:withRevision:forConversationLinkDescriptorsWithPredicate:completion:
setActivated:withRevision:forConversationLinkDescriptorsWithPredicate:error:
setActivated:withRevision:forConversationLinkDescriptorsWithPredicate:managedObjectContext:error:
setActivated:withRevision:forConversationLinkDescriptorsWithPredicate:reply:
setBootLockEnabled:
setCreationDate:
setDelegate:
setDeletionDate:
setExpirationDate:
setExpirationDate:withRevision:forConversationLinkDescriptorsWithPredicate:completion:
setExpirationDate:withRevision:forConversationLinkDescriptorsWithPredicate:error:
setExpirationDate:withRevision:forConversationLinkDescriptorsWithPredicate:managedObjectContext:error:
setExpirationDate:withRevision:forConversationLinkDescriptorsWithPredicate:reply:
setExportedInterface:
setExportedObject:
setFetchLimit:
setFirstUnlockNotifyObserver:
setGroupUUID:
setInteger:forKey:completion:
setInteger:forKey:error:
setInteger:forKey:reply:
setIntegerValue:
setInterruptionHandler:
setInvalidationHandler:
setInvitedHandles:
setInvitedHandles:withRevision:forConversationLinkDescriptorsWithPredicate:completion:
setInvitedHandles:withRevision:forConversationLinkDescriptorsWithPredicate:error:
setInvitedHandles:withRevision:forConversationLinkDescriptorsWithPredicate:managedObjectContext:error:
setInvitedHandles:withRevision:forConversationLinkDescriptorsWithPredicate:reply:
setIsoCountryCode:
setLifetimeType:
setLinkLifetimeScope:
setName:
setName:withRevision:forConversationLinkDescriptorsWithPredicate:completion:
setName:withRevision:forConversationLinkDescriptorsWithPredicate:error:
setName:withRevision:forConversationLinkDescriptorsWithPredicate:managedObjectContext:error:
setName:withRevision:forConversationLinkDescriptorsWithPredicate:reply:
setNormalizedValue:
setOption:forKey:
setOriginatorHandle:
setOriginatorIdentifier:
setOriginatorRevision:
setPredicate:
setPrivateKey:
setPseudonym:
setPublicKey:
setRelationshipKeyPathsForPrefetching:
setRemoteObjectInterface:
setReturnsObjectsAsFaults:
setShouldMigrateStoreAutomatically:
setString:forKey:completion:
setString:forKey:error:
setString:forKey:reply:
setToken:
setType:
setValue:
setValue:forPragmaNamed:
setWithArray:
setWithCapacity:
shouldAcceptConnection:
simulateFatalPersistentStoreError
stringByAppendingString:
stringByDeletingPathExtension
stringForKey:completion:
stringForKey:error:
stringForKey:reply:
stringValue
stringWithCString:encoding:
stringWithFormat:
superclass
token
tuConversationLinkDescriptor
tuHandle
tuInvitedHandles
tu_predicateForConversationLinkDescriptorsWithPseudonym:
type
updateWithDescriptor:
updatedObjects
userConfiguration
userInfo
value
valueForEntitlement:
zone
Configuring SQLite persistent store.
Enabling restricted access until device is unlocked for the first time.
Enabling secure delete
Enabling automatic lightweight migration
Configuring in-memory persistent store.
Attempting to destroy corrupt persistent store due to fatal error %@
Could not find entity description with name %@ in managed object context %@. Falling back to convenience initializer.
Launching %@
Checking whether device is boot locked
Exiting %@; device has not been unlocked since boot.
Creating directory hierarchy
Exiting %@; creation of data store directory at %@ failed with error %@
Resuming listener %@
Attempt to add conversation links failed with error %@
Attempt to add or update conversation links failed with error %@
Attempt to retrieve conversation link count failed with error %@
Attempt to retrieve conversation links failed with error %@
Attempt to remove conversation links failed with error %@
Attempt to modify conversation link failed with error %@
Attempt to set integer key value failed with error %@
Attempt to set string key value failed with error %@
Moving corrupt persistent store with description %@ failed with error %@
Loading persistent stores
Loaded persistent store with description %@
%@ connection interrupted
%@ connection invalidated
Connection is not entitled to use %@
Asked to accept connection %@
Entitlement found; accepting connection %@
Entitlement not found; rejecting connection %@
failed to set user_dir_suffix path component: %{darwin.errno}d
failed to resolve temporary directory: %{darwin.errno}d
failed to create temporary directory: %{darwin.errno}d
Created temporary directory: %{public}s
FTPersistentContainer
TUHandle
FTManagedConversationLink
FTDeviceDataSource
NSObject
FTConversationService
CoreDataProperties
FTConversationServiceConnectionManager
FTConversationServiceConnectionDelegate
TUConversationLinkDescriptorXPCServer
FTManagedHandle
TUConversationLinkDescriptorDataSource
FTPersistentDataSource
FTNotifyObserver
TUConversationLinkKeyValueDataSource
FTManagedKeyValue
FTConversationServiceConnection
FTPersistentDataSourceDelegate
TUDelegate
NSXPCListenerDelegate
TUConversationLinkDescriptor
FTDeviceObserverDelegate
FTDeviceObserver
@24@0:8q16
@16@0:8
v24@0:8@?16
v16@0:8
@"NSManagedObjectContext"
@"TUUserConfiguration"
@32@0:8@16@24
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@?24
v48@0:8@16Q24Q32@?40
v36@0:8@16B24@?28
v44@0:8B16q20@28@?36
v48@0:8@16q24@32@?40
v40@0:8q16@24@?32
v40@0:8@16@24@?32
v32@0:8@"NSArray"16@?<v@?B@"NSError">24
v32@0:8@"NSPredicate"16@?<v@?Q@"NSError">24
v48@0:8@"NSPredicate"16Q24Q32@?<v@?@"NSArray"@"NSError">40
v36@0:8@"NSPredicate"16B24@?<v@?Q@"NSError">28
v44@0:8B16q20@"NSPredicate"28@?<v@?Q@"NSError">36
v48@0:8@"NSDate"16q24@"NSPredicate"32@?<v@?Q@"NSError">40
v48@0:8@"NSSet"16q24@"NSPredicate"32@?<v@?Q@"NSError">40
v48@0:8@"NSString"16q24@"NSPredicate"32@?<v@?Q@"NSError">40
v40@0:8q16@"NSString"24@?<v@?B@"NSError">32
v32@0:8@"NSString"16@?<v@?q@"NSError">24
v40@0:8@"NSString"16@"NSString"24@?<v@?B@"NSError">32
v32@0:8@"NSString"16@?<v@?@"NSString"@"NSError">24
@24@0:8@16
v24@0:8@16
{os_unfair_lock_s=I}16@0:8
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSMutableSet"
@"FTPersistentDataSource"
B32@0:8@16^@24
Q32@0:8@16^@24
@48@0:8@16Q24Q32^@40
Q36@0:8@16B24^@28
Q44@0:8B16q20@28^@36
Q48@0:8@16q24@32^@40
B40@0:8@16@24^@32
Q40@0:8@16@24^@32
@56@0:8@16@24Q32Q40^@48
Q44@0:8@16B24@28^@36
Q52@0:8B16q20@28@36^@44
Q56@0:8@16q24@32@40^@48
v32@0:8@16@24
@"FTPersistentContainer"
@"TUDelegateController<FTPersistentDataSourceDelegate>"
@40@0:8@16@24@?32
@?16@0:8
i16@0:8
v20@0:8i16
@"NSString"
@"NSObject<OS_dispatch_queue>"
B40@0:8q16@24^@32
q32@0:8@16^@24
@32@0:8@16^@24
@40@0:8@16@24^@32
B56@0:8@16q24@32@40^@48
v24@0:8@"FTPersistentDataSource"16
@"<FTConversationServiceConnectionDelegate>"
@"NSXPCConnection"
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"FTConversationServiceConnectionManager"
v24@0:8@"FTDeviceObserver"16
v20@0:8B16
@"TUDelegateController"
@"<FTDeviceDataSource>"
@"FTNotifyObserver"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.private.security.storage.AppDataContainers</key>
<true/>
<key>com.apple.private.security.storage.FaceTime</key>
<true/>
<key>com.apple.private.sqlite.sqlite-encryption</key>
<true/>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/Library/FaceTime/</string>
</array>
<key>com.apple.security.exception.shared-preference.read-only</key>
<array>
<string>com.apple.TelephonyUtilities</string>
</array>
<key>com.apple.security.ts.mobile-keybag-access</key>
<true/>
<key>com.apple.security.ts.tmpdir</key>
<string>com.apple.FaceTime.FTConversationService</string>
<key>platform-application</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>temporary-sandbox</string>
</array>
</dict>
</plist>
094com.apple.private.security.storage.AppDataContainers
00+com.apple.private.security.storage.FaceTime
0/*com.apple.private.sqlite.sqlite-encryption
0X@com.apple.security.exception.files.home-relative-path.read-write0
/Library/FaceTime/0Z8com.apple.security.exception.shared-preference.read-only0
com.apple.TelephonyUtilities0/*com.apple.security.ts.mobile-keybag-access
com.apple.security.ts.tmpdir(com.apple.FaceTime.FTConversationService0
platform-application
seatbelt-profiles0
temporary-sandbox
