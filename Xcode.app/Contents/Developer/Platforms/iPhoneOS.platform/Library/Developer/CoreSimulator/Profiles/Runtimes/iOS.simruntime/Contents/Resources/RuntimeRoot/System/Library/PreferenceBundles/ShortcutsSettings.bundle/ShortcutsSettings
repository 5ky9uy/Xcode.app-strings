ShortcutsSettings
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
sharingSwitch
T@"UISwitch",&,N,V_sharingSwitch
policy
T@"PSSystemPolicyForApp",&,N,V_policy
Legal Notices
soup
-[WFShortcutsSettingsController userHasRunWorkflowInTheLast5Days]
yeet
Don't Allow
v16@?0@"UIAlertAction"8
Allow
Apple does not review shortcuts outside of the Gallery. Running shortcuts from untrusted sources can put your personal data at risk.
Allow Untrusted Shortcuts?
Allow Untrusted Shortcuts
SHARING_AND_PRIVACY_BODY
SharingAndPrivacy
SHARING_AND_PRIVACY_TITLE
showShortcutsSharingAndPrivacy
%@ %@
Sharing Security
About Shortcuts Sharing & Privacy...
You'll need to run a shortcut once before you can allow untrusted shortcuts.
Allow receiving untrusted shortcuts from outside the Gallery.
group.is.workflow.my.app
Sync Shortcut Order
iCloud Sync
Part%li
body
T@"NSString",&,N,V_body
Acknowledgments
NSObject
DevicePINControllerDelegate
WFShortcutsSettingsController
WFShortcutsSettingsStringsController
WFShortcutsSettingsModalTextViewController
WFShortcutsSettingsLegalNoticesController
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
v16@0:8
v24@0:8@"NSString"16
v40@0:8@"DevicePINController"16@"NSString"24@?<v@?B>32
v32@0:8@"DevicePINController"16@"NSString"24
v32@0:8@"DevicePINController"16@"NSError"24
v24@0:8@"DevicePINController"16
v36@0:8@"UIViewController"16B24@?<v@?B>28
v24@0:8@16
v40@0:8@16@24@?32
v32@0:8@16@24
v36@0:8@16B24@?28
@"UISwitch"
@"PSSystemPolicyForApp"
@24@0:8@16
v28@0:8B16@20
q16@0:8
@"NSString"
@32@0:8@16@24
debugDescription
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
willAcceptEnteredPIN
didAcceptEnteredPIN
didAcceptEnteredPIN:
willCancelEnteringPIN
didCancelEnteringPIN
didAcceptChangedPIN
didAcceptRemovePIN
didAcceptSetPIN
devicePINController:shouldAcceptPIN:withCompletion:
devicePINController:didAcceptSetPIN:
devicePINController:didFailToSetPinWithError:
devicePINController:didAcceptChangedPIN:
devicePINController:didFailToChangePinWithError:
devicePINControllerDidDismissPINPane:
showWeakWarningAlertForController:offerUseAnyway:withCompletion:
_sharingSwitch
_policy
syncSpecifier
syncOrderSpecifier
sharingGroupUntrustedShortcutsDescription
sharingGroupAboutLinkText
sharingGroupSpecifier
showShortcutsSharingAndPrivacy
sharingSwitchSpecifier
isSharingEnabled
sharingEnabled:
setSharingEnabled:forSpecifier:
_setSharingEnabled:control:
requestPIN
shouldRequestPIN
userHasRunWorkflowInTheLast5Days
dummyGroupSpecifier
OSSSpecifier
specifiers
.cxx_destruct
sharingSwitch
setSharingSwitch:
policy
setPolicy:
copy
addObject:
mutableCopy
specifiersForPolicyOptions:force:
initWithBundleIdentifier:
preferenceSpecifierNamed:target:set:get:detail:cell:edit:
readPreferenceValue:
setPreferenceValue:specifier:
groupSpecifierWithID:
hasRunEventsInTheLast5DaysWithError:
standardClient
isPasscodeSet
sharedConnection
showPINSheet:
numberWithInt:
setEditPaneClass:
setProperty:forKey:
setBool:forKey:
systemShortcutsUserDefaults
setOn:animated:
presentViewController:animated:completion:
addAction:
actionWithTitle:style:handler:
alertControllerWithTitle:message:preferredStyle:
propertyForKey:
boolValue
numberWithBool:
boolForKey:
setModalPresentationStyle:
initWithRootViewController:
valueWithNonretainedObject:
rangeOfString:
stringWithFormat:
numberOfParts
stringsFileName
initWithCapacity:
_body
initWithTitle:body:
loadView
dismiss
body
setBody:
dismissViewControllerAnimated:completion:
setView:
setRightBarButtonItem:
navigationItem
initWithBarButtonSystemItem:target:action:
setDataDetectorTypes:
setContentOffset:
setTextContainerInset:
setEditable:
setFont:
preferredFontForTextStyle:
setText:
initWithFrame:
setTitle:
init
bundleForClass:
localizedStringForKey:value:table:
%s An error occurred while getting run events for sharing switch visibility: %{public}@
