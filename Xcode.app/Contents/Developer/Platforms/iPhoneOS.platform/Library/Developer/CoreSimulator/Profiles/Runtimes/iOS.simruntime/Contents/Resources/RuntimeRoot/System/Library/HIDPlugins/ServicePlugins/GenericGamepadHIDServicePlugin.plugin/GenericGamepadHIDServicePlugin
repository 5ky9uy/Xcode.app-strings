v8@?0
com.apple.gamecontroller
com.apple.GameController
com.apple.GameController.HID
com.apple.GameController.gamecontrollerd.driver
com.apple.gamecontroller.serviceplugin
Transport
isVirtual
Bluetooth
BluetoothLowEnergy
SerialNumber
GCGamepadHIDServicePlugin
BatteryCapacity
IsPowerSupplyConnected
ServicePluginDebug
XboxOneHIDServicePlugin
PluginName
cancelHandler
dispatchQueue
activated
clientAdded
GameControllerPointer
EventType
GCGamepadHIDServicePlugin.m
Subclasses must override this method.
IOService
ReportDescriptor
PhysicalDeviceUniqueID
ProductID
VendorID
Product
GameControllerType
 - will disconnect if permitted
_index
_name
_features
_frequency
_amplitude
GCHapticMotor - %@(%d) f=%f a=%f
GenericGamepad
IOHIDDevice
GCSyntheticDevice
GameControllerSupportedHIDDevice
'model' can not be nil.
Caught an exception while applying configuration.
Invalid model for element with identifier '%@'.
Invalid 'elementCookie'.
Did not find a matching element for cookie %u
v32@?0@"NSString"8@"GCHIDInputElement"16^B24
Invalid 'Input Element Value' expression.
Not tracking any element with identifier %@
v32@?0@"GCHIDInputElement"8^{__IOHIDValue=}16d24
Unsupported valueType.
@"NSError"24@?0@"GCGenericDeviceDataInputElementValueExpressionModel"8@?<v@?d>16
Invalid 'Input Element Attribute' expression.
Element with identifier '%@' does not have a '%@' attribute.
Element with identifier '%@' has an '%@' attribute, but it's not a number.
@"NSError"24@?0@"GCGenericDeviceDataInputElementAttributeExpressionModel"8@?<v@?d>16
@"NSError"24@?0@"GCGenericDeviceDataConstantExpressionModel"8@?<v@?d>16
v16@?0d8
@"NSError"24@?0@"GCGenericDeviceDataBitTestExpressionModel"8@?<v@?d>16
@"NSError"24@?0@"GCGenericDeviceDataMultiplyExpressionModel"8@?<v@?d>16
@"NSError"24@?0@"GCGenericDeviceDataAddExpressionModel"8@?<v@?d>16
@"NSError"24@?0@"GCGenericDeviceDataClampExpressionModel"8@?<v@?d>16
@"NSError"24@?0@"GCGenericDeviceDataInterpolateExpressionModel"8@?<v@?d>16
@"NSError"24@?0@"GCGenericDeviceDataSDLHatFunctionExpressionModel"8@?<v@?d>16
Invalid expression.
Unsupported expression class: %@.
@"NSError"24@?0@"GCGenericDeviceDataProcessorExpressionModel"8@?<v@?d>16
Invalid field
Invalid extendedIndex '%zi'.
Invalid source expression.
v24@?0@"GCGenericDeviceInputGamepadEventFieldModel"8^B16
v24@?0@"NSArray"8Q16
%02x%@
GCPartnersEnable
<%@ %lu (%@), i=%f s=%f (started at %f)>
transient
continuous
type
identifier
stopped
startTime
intensity
sharpness
GCGameIntentServiceClientInterface
GCGameIntentServiceServerInterface
GCGamepadHIDServicePlugin
_GCDriverClientInterface
_GCDriverClientHapticInterface
GCBatteryServiceServerInterface
HIDServicePlugin
NSObject
GCHIDXPCInterface
GCHapticMotor
NSCopying
NSSecureCoding
NSCoding
GCMotionServiceClientInterface
GCMotionServiceServerInterface
GCNintendoJoyConFusionGestureServiceClientInterface
GCNintendoJoyConFusionGestureServiceServerInterface
_GCDriverServerInterface
GenericGamepadHIDServicePlugin
GCGenericDeviceDriverConfigurationServiceServerInterface
GCAdaptiveTriggersServiceClientInterface
GCAdaptiveTriggersServiceServerInterface
GCLightServiceClientInterface
GCLightServiceServerInterface
_GCHapticEvent
GCBatteryServiceClientInterface
triggerGameIntentWithEvent:
interfaceWithProtocol:
setEnableGlobalGameControllerFunctionality:
initWithMachServiceName:options:
setInterruptionHandler:
setInvalidationHandler:
invalidate
remoteObjectProxy
driverCheckIn
setRemoteObjectInterface:
setExportedInterface:
setExportedObject:
resume
init
boolValue
isEqualToString:
defaultIdleTimeoutDuration
scheduleIdleTimer
defaultLeftThumbstickNoiseBuffer
defaultRightThumbstickNoiseBuffer
defaultHapticDispatchFrequency
defaultHapticMotors
defaultLeftThumbstickDeadzoneRadius
defaultLeftAxisSnapRadius
defaultRightThumbstickDeadzoneRadius
defaultRightAxisSnapRadius
createHIDDeviceForService:
open
isBluetoothClassic
createVirtualHIDDeviceForBattery
setupRawReportHandling
initGameControllerDaemonXPC
stringWithCString:encoding:
dealloc
initWithInt:
initWithBool:
setObject:forKeyedSubscript:
numberWithBool:
propertyForKey:client:
propertyForKey:
device
setProperty:forKey:
objectForKeyedSubscript:
unsignedIntValue
initWithType:timestamp:senderID:
setCancelHandler:
activate
cancel
close
setDispatchQueue:
initWithService:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
cStringUsingEncoding:
shouldCreateBatteryDevice
dictionary
numberWithUnsignedLongLong:
initWithProperties:
updateBattery:isCharging:
updateClientBattery
dataWithBytesNoCopy:length:freeWhenDone:
handleReport:error:
updateIdleState
isIdle
shouldDisconnectWhenIdle
disconnect
lastEventTime
timestamp
type
dispatchEvent:
dispatchEvent:updateLastEventTime:
createEvent:timestamp:
setIntegerValue:forField:
setDoubleValue:forField:
applyDeadzone:axisSnapRadius:input:
isTwoAxisInputIdle:prevInput:noiseBuffer:
hapticMotors
countByEnumeratingWithState:objects:count:
frequency
features
amplitude
queuedTransients
count
setFrequency:
setAmplitude:
numberOfTimesToSendZeroHapticReport
dispatchHapticEvent
index
objectAtIndex:
applyValuesFrom:
isAnyHapticMotorEnabled
stopHaptics
array
initWithIndex:name:features:frequency:amplitude:
updateHapticMotor:
enqueueHapticTransientEvent:
batteryReport
matchService:options:score:
setHapticMotor:frequency:amplitude:
enqueueTransient:hapticMotor:
enableHaptics
fetchDeviceRegistryIDWithReply:
connectToLightServiceWithClient:reply:
connectToAdaptiveTriggersServiceWithClient:reply:
connectToMotionServiceWithClient:reply:
connectToBatteryServiceWithClient:reply:
connectToNintendoJoyConFusionGestureServiceWithClient:reply:
connectToGameIntentServiceWithClient:reply:
connectToGenericDeviceDriverConfigurationServiceWithClient:reply:
readBatteryWithReply:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
setProperty:forKey:client:
eventMatching:forClient:
setEventDispatcher:
clientNotification:added:
ping
requestServiceWithReply:
sendBatteryReport
dispatchMotionEventWithState:timestamp:
dispatchGameControllerExtendedEventWithState:timestamp:
dispatchHomeButtonEventWithValue:timestamp:
dispatchMenuButtonEventWithValue:timestamp:
dispatchOptionsButtonEventWithValue:timestamp:
dispatchShareButtonEventWithValue:timestamp:
updateHaptics:
isHapticsActive
client
setClient:
dispatcher
setDispatcher:
service
dispatchQueue
batteryUserDevice
uniqueIdentifier
isUSB
isBluetoothLE
isVirtualDevice
idleTimeoutDuration
setIdleTimeoutDuration:
leftThumbstickNoiseBuffer
setLeftThumbstickNoiseBuffer:
rightThumbstickNoiseBuffer
setRightThumbstickNoiseBuffer:
setHapticMotors:
leftThumbstickDeadzoneRadius
setLeftThumbstickDeadzoneRadius:
leftThumbstickAxisSnapRadius
setLeftThumbstickAxisSnapRadius:
rightThumbstickDeadzoneRadius
setRightThumbstickDeadzoneRadius:
rightThumbstickAxisSnapRadius
setRightThumbstickAxisSnapRadius:
.cxx_destruct
_cancelHandler
_prop
_activated
_clientAdded
_idleDispatchSource
_session
_buttonHome
_buttonMenu
_buttonOptions
_buttonShare
_gameControllerState
_gameControllerExtendedState
_motionSequenceNumber
_motionState
_hapticsActive
_pendingHapticZeroReports
_hapticDispatchFrequency
_currentHapticClipTime
_currentHapticDispatchTime
_loopHapticEvent
_hapticDispatchSource
_daemonConnection
_batteryClient
_internalQueue
_bluetoothClassic
_usb
_bluetoothLE
_virtualDevice
_service
_idleTimeoutDuration
_leftThumbstickNoiseBuffer
_rightThumbstickNoiseBuffer
_leftThumbstickDeadzoneRadius
_leftThumbstickAxisSnapRadius
_rightThumbstickDeadzoneRadius
_rightThumbstickAxisSnapRadius
_client
_dispatcher
_dispatchQueue
_device
_batteryUserDevice
_regID
_lastEventTime
_uniqueIdentifier
_batteryReport
_hapticMotors
T@"HIDConnection",W,N,V_client
T@"<HIDEventDispatcher>",W,N,V_dispatcher
TI,R,N,V_service
T@"NSObject<OS_dispatch_queue>",R,N,V_dispatchQueue
T@"HIDDevice",R,N,V_device
T@"HIDUserDevice",R,N,V_batteryUserDevice
TQ,R,N,V_lastEventTime
T@"NSString",R,N,V_uniqueIdentifier
T^{?=CCC},R,N,V_batteryReport
bluetoothClassic
TB,R,N,GisBluetoothClassic,V_bluetoothClassic
TB,R,N,GisUSB,V_usb
bluetoothLE
TB,R,N,GisBluetoothLE,V_bluetoothLE
virtualDevice
TB,R,N,GisVirtualDevice,V_virtualDevice
Tf,N,V_idleTimeoutDuration
Tf,N,V_leftThumbstickNoiseBuffer
Tf,N,V_rightThumbstickNoiseBuffer
T@"NSArray",&,N,V_hapticMotors
Tf,N,V_leftThumbstickDeadzoneRadius
Tf,N,V_leftThumbstickAxisSnapRadius
Tf,N,V_rightThumbstickDeadzoneRadius
Tf,N,V_rightThumbstickAxisSnapRadius
initWithIndex:name:features:
initWithIndex:
encodeInteger:forKey:
encodeObject:forKey:
encodeFloat:forKey:
decodeIntegerForKey:
decodeObjectOfClass:forKey:
decodeFloatForKey:
allocWithZone:
name
copyWithZone:
addObject:
removeAllObjects
stringWithFormat:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
initWithIndex:name:
drainQueuedTransients
setQueuedTransients:
_index
_frequency
_amplitude
_name
_features
_queuedTransients
T@"NSMutableArray",&,N,V_queuedTransients
T@"NSString",R,C,N,V_name
Ti,R,N,V_index
TQ,R,N,V_features
Tf,N,V_frequency
Tf,N,V_amplitude
updateSensorsActive:
readSensorsActiveWithReply:
homeButtonLongPressGesture:
setInterface:forSelector:argumentIndex:ofReply:
initWithHIDDevice:
gc_snapshot
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
_onqueue_configureWithModel:error:
gc_error
setInputElementMatching:
setBatchInputElementHandler:
elements
identifier
elementCookie
element
setName:
calibrationMin
numberWithInteger:
setCalibrationMin:
calibrationMax
setCalibrationMax:
setObject:forKey:
setInputElements:
copy
enumerateKeysAndObjectsUsingBlock:
input
elementIdentifier
scaleType
registerScaled:valueChangedHandler:
scaledValue:
attribute
valueForElementKey:
doubleValue
value
inputExpression
maskExpression
trueExpression
falseExpression
leftExpression
rightExpression
minExpression
maxExpression
inputMinExpression
inputMaxExpression
outputMinExpression
outputMaxExpression
gamepadEventFields
extendedIndex
sourceExpression
enumerateObjectsUsingBlock:
fetchDeviceSnapshotWithReply:
applyConfiguration:withReply:
_deviceInput
_trackedInputElementsByIdentifier
_elementObservers
_eventState
_lastButtonHome
_lastButtonMenu
_lastButtonOptions
_lastButtonShare
stringWithCapacity:
appendString:
stringWithString:
initWithSuiteName:
boolForKey:
updateAdaptiveTriggerStatusWithLeftMode:leftStatus:leftArmPosition:rightMode:rightStatus:rightArmPosition:
setAdaptiveTriggerModeSlopeFeedbackWithStartPosition:endPosition:startStrength:endStrength:forIndex:
setAdaptiveTriggerModeFeedbackWithStartPosition:resistiveStrength:forIndex:
setAdaptiveTriggerModeFeedbackWithResistiveStrengths:forIndex:
setAdaptiveTriggerModeWeaponWithStartPosition:endPosition:resistiveStrength:forIndex:
setAdaptiveTriggerModeVibrationWithStartPosition:amplitude:frequency:forIndex:
setAdaptiveTriggerModeVibrationWithAmplitudes:frequency:forIndex:
setAdaptiveTriggerModeOffForIndex:
readAdaptiveTriggerStatusWithReply:
updateLightWithRed:green:blue:
readLightWithReply:
valueForNoteParam:inParameters:
tokenAndParams
time
token
params
evaluateDeviceNoteParams:
eventID
initWithSyntheticCommand:
setIdentifier:
setType:
startTime
setStartTime:
intensity
setIntensity:
sharpness
setSharpness:
stopped
setStopped:
transientBeganAsContinuousEvent
setTransientBeganAsContinuousEvent:
_stopped
_transientBeganAsContinuousEvent
_identifier
_type
_startTime
_intensity
_sharpness
TQ,N,V_identifier
Tq,N,V_type
Td,N,V_startTime
Td,N,V_intensity
Td,N,V_sharpness
TB,N,V_stopped
TB,N,V_transientBeganAsContinuousEvent
decodeBoolForKey:
decodeDoubleForKey:
encodeBool:forKey:
encodeDouble:forKey:
dataWithBytes:length:
v24@0:8q16
v20@0:8B16
B36@0:8I16@20^q28
v32@0:8Q16f24f28
v32@0:8@16Q24
v16@0:8
v32@0:8@"_GCHapticEvent"16Q24
v24@0:8@?16
v32@0:8@16@?24
v24@0:8@?<v@?@"NSNumber"q>16
v32@0:8@"<GCLightServiceClientInterface>"16@?<v@?@"<GCLightServiceServerInterface>"@"NSError">24
v32@0:8@"<GCAdaptiveTriggersServiceClientInterface>"16@?<v@?@"<GCAdaptiveTriggersServiceServerInterface>"@"NSError">24
v32@0:8@"<GCMotionServiceClientInterface>"16@?<v@?@"<GCMotionServiceServerInterface>"@"NSError">24
v32@0:8@"<GCBatteryServiceClientInterface>"16@?<v@?@"<GCBatteryServiceServerInterface>"@"NSError">24
v32@0:8@"<GCNintendoJoyConFusionGestureServiceClientInterface>"16@?<v@?@"<GCNintendoJoyConFusionGestureServiceServerInterface>"@"NSError">24
v32@0:8@"<GCGameIntentServiceClientInterface>"16@?<v@?@"<GCGameIntentServiceServerInterface>"@"NSError">24
v32@0:8@"<GCGenericDeviceDriverConfigurationServiceClientInterface>"16@?<v@?@"<GCGenericDeviceDriverConfigurationServiceServerInterface>"@"NSError">24
v24@0:8@?<v@?CB>16
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@20@0:8I16
@32@0:8@16@24
B40@0:8@16@24@32
v24@0:8@16
v28@0:8@16B24
@32@0:8@"NSString"16@"HIDConnection"24
B40@0:8@16@"NSString"24@"HIDConnection"32
@"HIDEvent"32@0:8@"NSDictionary"16@"HIDConnection"24
v24@0:8@"<HIDEventDispatcher>"16
v24@0:8@?<v@?>16
B36@0:8I16@"NSDictionary"20^q28
v24@0:8@"NSObject<OS_dispatch_queue>"16
v28@0:8@"HIDConnection"16B24
v24@0:8@?<v@?@"NSNumber">16
@28@0:8I16Q20
v32@0:8f16f20^24
B36@0:8^16^24f32
v128@0:8{?=BdddBdddBdddd}16Q120
v216@0:8{?=Q[45f]}16Q208
v28@0:8B16Q20
I16@0:8
f16@0:8
^{?=CCC}16@0:8
v20@0:8f16
@"NSNumber"
@"NSObject<OS_dispatch_source>"
^{BTSessionImpl=}
{?="directionPadUp"d"directionPadDown"d"directionPadLeft"d"directionPadRight"d"buttonA"d"buttonB"d"buttonX"d"buttonY"d"buttonL1"d"buttonR1"d"buttonL2"d"buttonR2"d"leftThumbstick""rightThumbstick""buttonL3"B"buttonR3"B"controllerType"I}
{?="mask"Q"buttons"[45f]}
{?="supportsGyro"B"gyroPitch"d"gyroYaw"d"gyroRoll"d"supportsAccelerometer"B"accelerometerX"d"accelerometerY"d"accelerometerZ"d"supportsAttitude"B"attitudeX"d"attitudeY"d"attitudeZ"d"attitudeW"d}
{timespec="tv_sec"q"tv_nsec"q}
@"NSXPCConnection"
@"<GCBatteryServiceClientInterface>"
@"NSObject<OS_dispatch_queue>"
@"HIDConnection"
@"<HIDEventDispatcher>"
@"HIDDevice"
@"HIDUserDevice"
@"NSString"
^{?=CCC}
@"NSArray"
@24@0:8^{_NSZone=}16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@44@0:8i16@20Q28f36f40
@36@0:8i16@20Q28
@28@0:8i16@20
@20@0:8i16
i16@0:8
@"NSMutableArray"
v24@0:8@?<v@?B>16
v24@0:8@?<v@?@"GCHIDUserDeviceSnapshot">16
v32@0:8@"GCGenericDeviceDriverModel"16@?<v@?B@"NSError">24
B32@0:8@16^@24
@"GCHIDDeviceInput"
@"NSDictionary"
v40@0:8C16C20C24C28C32C36
v36@0:8f16f20f24f28i32
v28@0:8f16f20i24
v28@0:8@16i24
v32@0:8f16f20f24i28
v32@0:8@16f24i28
v20@0:8i16
v28@0:8@"NSArray"16i24
v32@0:8@"NSArray"16f24i28
v24@0:8@?<v@?CCCCCC>16
v28@0:8f16f20f24
v24@0:8@?<v@?fff>16
{pair<bool, float>=Bf}28@0:8I16@20
v24@0:8Q16
q16@0:8
d16@0:8
v24@0:8d16
v24@0:8C16B20
(knN
listening for XPC daemon
Connect To Daemon
Connection to com.apple.GameController.gamecontrollerd.driver invalidated
Connection to com.apple.GameController.gamecontrollerd.driver interrupted.  Attempting to re-establish.
initWithService: %d
processing io_service
creating HIDDevice for service %d
opening HIDDevice
registering for BTSessionCallbacks sessionEvent
dealloc
Freeing HIDDevice on %@
PropertyForKey: %@
setProperty: %@ forKey: %@
eventMatching: %@ client: %@
setEventDispatcher %@
setCancelHandler %p
calling cancel handler
activate
cancel
setDispatchQueue %p
clientNotification %@ added: %d
GCHIDLog::disconnect: unable to get BTDevice; no valid BTSession
GCHIDLog::disconnect: SUCCESS
GCHIDLog::disconnect: error code = %d
GCHIDLog::disconnect: unable to get BTDevice; error code = %d
GCHIDLog::disconnect: unable to get device address from %s; errCode = %d
creating battery device
created battery device %@ with properties %@
updateClientBattery reporting battery level %d%%
updateBatteryStats reporting battery level %d%%
scheduleIdleTimer
disconnectIfIdle disconnecting...
isIdle for %.2f seconds%@
Stopping timer...
Dispatching event...
ping
requestServiceWithReply
connectToBatteryServiceWithClient %@
BTSessionEventCallback: attached session = %p
BTSessionEventCallback: detached session = %p
BTSessionEventCallback: terminated session = %p
BTSessionEventCallback: failed session = %p
Could not get parent of service <%s>: %{mach.errno}d
Failed to create device input.
[Generic Gamepad HID Service/XPC/Driver Configuration Service] Fetch Device Snapshot
[Generic Gamepad HID Service/XPC/Driver Configuration Service] Apply Configuration
Applying model: %@
#WARNING: Found multiple elements for cookie %u
Now tracking '%zd' input elements:
 %@ => %{public}@
Processing field model %@
Post Event
Partners mode enabled? %d
v8@?0
com.apple.gamecontroller
com.apple.GameController
com.apple.GameController.HID
com.apple.GameController.gamecontrollerd.driver
com.apple.gamecontroller.serviceplugin
Transport
isVirtual
Bluetooth
BluetoothLowEnergy
SerialNumber
GCGamepadHIDServicePlugin
BatteryCapacity
IsPowerSupplyConnected
ServicePluginDebug
XboxOneHIDServicePlugin
PluginName
cancelHandler
dispatchQueue
activated
clientAdded
GameControllerPointer
EventType
GCGamepadHIDServicePlugin.m
Subclasses must override this method.
IOService
ReportDescriptor
PhysicalDeviceUniqueID
ProductID
VendorID
Product
GameControllerType
 - will disconnect if permitted
_index
_name
_features
_frequency
_amplitude
GCHapticMotor - %@(%d) f=%f a=%f
GenericGamepad
IOHIDDevice
GCSyntheticDevice
GameControllerSupportedHIDDevice
'model' can not be nil.
Caught an exception while applying configuration.
Invalid model for element with identifier '%@'.
Invalid 'elementCookie'.
Did not find a matching element for cookie %u
v32@?0@"NSString"8@"GCHIDInputElement"16^B24
Invalid 'Input Element Value' expression.
Not tracking any element with identifier %@
v32@?0@"GCHIDInputElement"8^{__IOHIDValue=}16d24
Unsupported valueType.
@"NSError"24@?0@"GCGenericDeviceDataInputElementValueExpressionModel"8@?<v@?d>16
Invalid 'Input Element Attribute' expression.
Element with identifier '%@' does not have a '%@' attribute.
Element with identifier '%@' has an '%@' attribute, but it's not a number.
@"NSError"24@?0@"GCGenericDeviceDataInputElementAttributeExpressionModel"8@?<v@?d>16
@"NSError"24@?0@"GCGenericDeviceDataConstantExpressionModel"8@?<v@?d>16
v16@?0d8
@"NSError"24@?0@"GCGenericDeviceDataBitTestExpressionModel"8@?<v@?d>16
@"NSError"24@?0@"GCGenericDeviceDataMultiplyExpressionModel"8@?<v@?d>16
@"NSError"24@?0@"GCGenericDeviceDataAddExpressionModel"8@?<v@?d>16
@"NSError"24@?0@"GCGenericDeviceDataClampExpressionModel"8@?<v@?d>16
@"NSError"24@?0@"GCGenericDeviceDataInterpolateExpressionModel"8@?<v@?d>16
@"NSError"24@?0@"GCGenericDeviceDataSDLHatFunctionExpressionModel"8@?<v@?d>16
Invalid expression.
Unsupported expression class: %@.
@"NSError"24@?0@"GCGenericDeviceDataProcessorExpressionModel"8@?<v@?d>16
Invalid field
Invalid extendedIndex '%zi'.
Invalid source expression.
v24@?0@"GCGenericDeviceInputGamepadEventFieldModel"8^B16
v24@?0@"NSArray"8Q16
%02x%@
GCPartnersEnable
<%@ %lu (%@), i=%f s=%f (started at %f)>
transient
continuous
type
identifier
stopped
startTime
intensity
sharpness
GCGameIntentServiceClientInterface
GCGameIntentServiceServerInterface
GCGamepadHIDServicePlugin
_GCDriverClientInterface
_GCDriverClientHapticInterface
GCBatteryServiceServerInterface
HIDServicePlugin
NSObject
GCHIDXPCInterface
GCHapticMotor
NSCopying
NSSecureCoding
NSCoding
GCMotionServiceClientInterface
GCMotionServiceServerInterface
GCNintendoJoyConFusionGestureServiceClientInterface
GCNintendoJoyConFusionGestureServiceServerInterface
_GCDriverServerInterface
GenericGamepadHIDServicePlugin
GCGenericDeviceDriverConfigurationServiceServerInterface
GCAdaptiveTriggersServiceClientInterface
GCAdaptiveTriggersServiceServerInterface
GCLightServiceClientInterface
GCLightServiceServerInterface
_GCHapticEvent
GCBatteryServiceClientInterface
addObject:
appendString:
setBatchInputElementHandler:
stringWithCapacity:
numberWithBool:
setObject:forKey:
leftExpression
count
setIntegerValue:forField:
currentHandler
decodeBoolForKey:
inputExpression
calibrationMax
open
token
gc_error
gamepadEventFields
eventID
elements
setInputElements:
doubleValue
initWithProperties:
valueForElementKey:
setDoubleValue:forField:
dictionaryWithObjects:forKeys:count:
setName:
setInputElementMatching:
allocWithZone:
resume
initWithHIDDevice:
copy
input
objectForKeyedSubscript:
removeAllObjects
cStringUsingEncoding:
params
initWithMachServiceName:options:
propertyForKey:
encodeObject:forKey:
objectAtIndex:
array
minExpression
timestamp
elementIdentifier
stringWithCString:encoding:
initWithBool:
value
setRemoteObjectInterface:
decodeObjectOfClass:forKey:
boolForKey:
invalidate
setInvalidationHandler:
unsignedIntValue
time
encodeInteger:forKey:
initWithInt:
outputMinExpression
remoteObjectProxy
scaledValue:
dictionary
boolValue
close
elementCookie
initWithType:timestamp:senderID:
initWithSuiteName:
errorWithDomain:code:userInfo:
setCalibrationMin:
handleReport:error:
numberWithUnsignedLongLong:
sourceExpression
stringWithString:
setInterruptionHandler:
maxExpression
interfaceWithProtocol:
inputMinExpression
registerScaled:valueChangedHandler:
dataWithBytes:length:
dataWithBytesNoCopy:length:freeWhenDone:
decodeIntegerForKey:
attribute
setProperty:forKey:
encodeFloat:forKey:
outputMaxExpression
scaleType
encodeDouble:forKey:
enumerateObjectsUsingBlock:
trueExpression
handleFailureInMethod:object:file:lineNumber:description:
setExportedObject:
maskExpression
falseExpression
numberWithInteger:
inputMaxExpression
setInterface:forSelector:argumentIndex:ofReply:
element
calibrationMin
countByEnumeratingWithState:objects:count:
setCalibrationMax:
rightExpression
gc_snapshot
decodeFloatForKey:
setObject:forKeyedSubscript:
encodeBool:forKey:
isEqualToString:
tokenAndParams
enumerateKeysAndObjectsUsingBlock:
decodeDoubleForKey:
stringWithFormat:
extendedIndex
setExportedInterface:
triggerGameIntentWithEvent:
setEnableGlobalGameControllerFunctionality:
init
dealloc
matchService:options:score:
setHapticMotor:frequency:amplitude:
enqueueTransient:hapticMotor:
enableHaptics
fetchDeviceRegistryIDWithReply:
connectToLightServiceWithClient:reply:
connectToAdaptiveTriggersServiceWithClient:reply:
connectToMotionServiceWithClient:reply:
connectToBatteryServiceWithClient:reply:
connectToNintendoJoyConFusionGestureServiceWithClient:reply:
connectToGameIntentServiceWithClient:reply:
connectToGenericDeviceDriverConfigurationServiceWithClient:reply:
readBatteryWithReply:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
initWithService:
propertyForKey:client:
setProperty:forKey:client:
eventMatching:forClient:
setEventDispatcher:
setCancelHandler:
activate
cancel
setDispatchQueue:
clientNotification:added:
ping
requestServiceWithReply:
initGameControllerDaemonXPC
createHIDDeviceForService:
setupRawReportHandling
disconnect
createVirtualHIDDeviceForBattery
updateClientBattery
sendBatteryReport
shouldCreateBatteryDevice
scheduleIdleTimer
updateIdleState
isIdle
shouldDisconnectWhenIdle
createEvent:timestamp:
dispatchEvent:updateLastEventTime:
dispatchEvent:
applyDeadzone:axisSnapRadius:input:
isTwoAxisInputIdle:prevInput:noiseBuffer:
dispatchMotionEventWithState:timestamp:
dispatchGameControllerExtendedEventWithState:timestamp:
dispatchHomeButtonEventWithValue:timestamp:
dispatchMenuButtonEventWithValue:timestamp:
dispatchOptionsButtonEventWithValue:timestamp:
dispatchShareButtonEventWithValue:timestamp:
isAnyHapticMotorEnabled
dispatchHapticEvent
updateHaptics:
isHapticsActive
numberOfTimesToSendZeroHapticReport
stopHaptics
updateHapticMotor:
defaultLeftThumbstickNoiseBuffer
defaultRightThumbstickNoiseBuffer
defaultIdleTimeoutDuration
defaultLeftThumbstickDeadzoneRadius
defaultRightThumbstickDeadzoneRadius
defaultLeftAxisSnapRadius
defaultRightAxisSnapRadius
defaultHapticMotors
defaultHapticDispatchFrequency
client
setClient:
dispatcher
setDispatcher:
service
dispatchQueue
device
batteryUserDevice
lastEventTime
uniqueIdentifier
batteryReport
isBluetoothClassic
isUSB
isBluetoothLE
isVirtualDevice
idleTimeoutDuration
setIdleTimeoutDuration:
leftThumbstickNoiseBuffer
setLeftThumbstickNoiseBuffer:
rightThumbstickNoiseBuffer
setRightThumbstickNoiseBuffer:
hapticMotors
setHapticMotors:
leftThumbstickDeadzoneRadius
setLeftThumbstickDeadzoneRadius:
leftThumbstickAxisSnapRadius
setLeftThumbstickAxisSnapRadius:
rightThumbstickDeadzoneRadius
setRightThumbstickDeadzoneRadius:
rightThumbstickAxisSnapRadius
setRightThumbstickAxisSnapRadius:
.cxx_destruct
_cancelHandler
_prop
_activated
_clientAdded
_idleDispatchSource
_session
_buttonHome
_buttonMenu
_buttonOptions
_buttonShare
_gameControllerState
_gameControllerExtendedState
_motionSequenceNumber
_motionState
_hapticsActive
_pendingHapticZeroReports
_hapticDispatchFrequency
_currentHapticClipTime
_currentHapticDispatchTime
_loopHapticEvent
_hapticDispatchSource
_daemonConnection
_batteryClient
_internalQueue
_bluetoothClassic
_usb
_bluetoothLE
_virtualDevice
_service
_idleTimeoutDuration
_leftThumbstickNoiseBuffer
_rightThumbstickNoiseBuffer
_leftThumbstickDeadzoneRadius
_leftThumbstickAxisSnapRadius
_rightThumbstickDeadzoneRadius
_rightThumbstickAxisSnapRadius
_client
_dispatcher
_dispatchQueue
_device
_batteryUserDevice
_regID
_lastEventTime
_uniqueIdentifier
_batteryReport
_hapticMotors
T@"HIDConnection",W,N,V_client
T@"<HIDEventDispatcher>",W,N,V_dispatcher
TI,R,N,V_service
T@"NSObject<OS_dispatch_queue>",R,N,V_dispatchQueue
T@"HIDDevice",R,N,V_device
T@"HIDUserDevice",R,N,V_batteryUserDevice
TQ,R,N,V_lastEventTime
T@"NSString",R,N,V_uniqueIdentifier
T^{?=CCC},R,N,V_batteryReport
bluetoothClassic
TB,R,N,GisBluetoothClassic,V_bluetoothClassic
TB,R,N,GisUSB,V_usb
bluetoothLE
TB,R,N,GisBluetoothLE,V_bluetoothLE
virtualDevice
TB,R,N,GisVirtualDevice,V_virtualDevice
Tf,N,V_idleTimeoutDuration
Tf,N,V_leftThumbstickNoiseBuffer
Tf,N,V_rightThumbstickNoiseBuffer
T@"NSArray",&,N,V_hapticMotors
Tf,N,V_leftThumbstickDeadzoneRadius
Tf,N,V_leftThumbstickAxisSnapRadius
Tf,N,V_rightThumbstickDeadzoneRadius
Tf,N,V_rightThumbstickAxisSnapRadius
supportsSecureCoding
copyWithZone:
encodeWithCoder:
initWithCoder:
TB,R
initWithIndex:name:features:frequency:amplitude:
initWithIndex:name:features:
initWithIndex:name:
initWithIndex:
applyValuesFrom:
enqueueHapticTransientEvent:
drainQueuedTransients
name
index
features
frequency
setFrequency:
amplitude
setAmplitude:
queuedTransients
setQueuedTransients:
_index
_frequency
_amplitude
_name
_features
_queuedTransients
T@"NSMutableArray",&,N,V_queuedTransients
T@"NSString",R,C,N,V_name
Ti,R,N,V_index
TQ,R,N,V_features
Tf,N,V_frequency
Tf,N,V_amplitude
updateSensorsActive:
readSensorsActiveWithReply:
homeButtonLongPressGesture:
driverCheckIn
fetchDeviceSnapshotWithReply:
applyConfiguration:withReply:
_onqueue_configureWithModel:error:
_deviceInput
_trackedInputElementsByIdentifier
_elementObservers
_eventState
_lastButtonHome
_lastButtonMenu
_lastButtonOptions
_lastButtonShare
updateAdaptiveTriggerStatusWithLeftMode:leftStatus:leftArmPosition:rightMode:rightStatus:rightArmPosition:
setAdaptiveTriggerModeSlopeFeedbackWithStartPosition:endPosition:startStrength:endStrength:forIndex:
setAdaptiveTriggerModeFeedbackWithStartPosition:resistiveStrength:forIndex:
setAdaptiveTriggerModeFeedbackWithResistiveStrengths:forIndex:
setAdaptiveTriggerModeWeaponWithStartPosition:endPosition:resistiveStrength:forIndex:
setAdaptiveTriggerModeVibrationWithStartPosition:amplitude:frequency:forIndex:
setAdaptiveTriggerModeVibrationWithAmplitudes:frequency:forIndex:
setAdaptiveTriggerModeOffForIndex:
readAdaptiveTriggerStatusWithReply:
updateLightWithRed:green:blue:
readLightWithReply:
valueForNoteParam:inParameters:
evaluateDeviceNoteParams:
initWithSyntheticCommand:
identifier
setIdentifier:
type
setType:
startTime
setStartTime:
intensity
setIntensity:
sharpness
setSharpness:
stopped
setStopped:
transientBeganAsContinuousEvent
setTransientBeganAsContinuousEvent:
_stopped
_transientBeganAsContinuousEvent
_identifier
_type
_startTime
_intensity
_sharpness
TQ,N,V_identifier
Tq,N,V_type
Td,N,V_startTime
Td,N,V_intensity
Td,N,V_sharpness
TB,N,V_stopped
TB,N,V_transientBeganAsContinuousEvent
updateBattery:isCharging:
v24@0:8q16
v20@0:8B16
B36@0:8I16@20^q28
v32@0:8Q16f24f28
v32@0:8@16Q24
v16@0:8
v32@0:8@"_GCHapticEvent"16Q24
v24@0:8@?16
v32@0:8@16@?24
v24@0:8@?<v@?@"NSNumber"q>16
v32@0:8@"<GCLightServiceClientInterface>"16@?<v@?@"<GCLightServiceServerInterface>"@"NSError">24
v32@0:8@"<GCAdaptiveTriggersServiceClientInterface>"16@?<v@?@"<GCAdaptiveTriggersServiceServerInterface>"@"NSError">24
v32@0:8@"<GCMotionServiceClientInterface>"16@?<v@?@"<GCMotionServiceServerInterface>"@"NSError">24
v32@0:8@"<GCBatteryServiceClientInterface>"16@?<v@?@"<GCBatteryServiceServerInterface>"@"NSError">24
v32@0:8@"<GCNintendoJoyConFusionGestureServiceClientInterface>"16@?<v@?@"<GCNintendoJoyConFusionGestureServiceServerInterface>"@"NSError">24
v32@0:8@"<GCGameIntentServiceClientInterface>"16@?<v@?@"<GCGameIntentServiceServerInterface>"@"NSError">24
v32@0:8@"<GCGenericDeviceDriverConfigurationServiceClientInterface>"16@?<v@?@"<GCGenericDeviceDriverConfigurationServiceServerInterface>"@"NSError">24
v24@0:8@?<v@?CB>16
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@20@0:8I16
@32@0:8@16@24
B40@0:8@16@24@32
v24@0:8@16
v28@0:8@16B24
@32@0:8@"NSString"16@"HIDConnection"24
B40@0:8@16@"NSString"24@"HIDConnection"32
@"HIDEvent"32@0:8@"NSDictionary"16@"HIDConnection"24
v24@0:8@"<HIDEventDispatcher>"16
v24@0:8@?<v@?>16
B36@0:8I16@"NSDictionary"20^q28
v24@0:8@"NSObject<OS_dispatch_queue>"16
v28@0:8@"HIDConnection"16B24
v24@0:8@?<v@?@"NSNumber">16
@28@0:8I16Q20
v32@0:8f16f20^24
B36@0:8^16^24f32
v128@0:8{?=BdddBdddBdddd}16Q120
v216@0:8{?=Q[45f]}16Q208
v28@0:8B16Q20
I16@0:8
f16@0:8
^{?=CCC}16@0:8
v20@0:8f16
@"NSNumber"
@"NSObject<OS_dispatch_source>"
^{BTSessionImpl=}
{?="directionPadUp"d"directionPadDown"d"directionPadLeft"d"directionPadRight"d"buttonA"d"buttonB"d"buttonX"d"buttonY"d"buttonL1"d"buttonR1"d"buttonL2"d"buttonR2"d"leftThumbstick""rightThumbstick""buttonL3"B"buttonR3"B"controllerType"I}
{?="mask"Q"buttons"[45f]}
{?="supportsGyro"B"gyroPitch"d"gyroYaw"d"gyroRoll"d"supportsAccelerometer"B"accelerometerX"d"accelerometerY"d"accelerometerZ"d"supportsAttitude"B"attitudeX"d"attitudeY"d"attitudeZ"d"attitudeW"d}
{timespec="tv_sec"q"tv_nsec"q}
@"NSXPCConnection"
@"<GCBatteryServiceClientInterface>"
@"NSObject<OS_dispatch_queue>"
@"HIDConnection"
@"<HIDEventDispatcher>"
@"HIDDevice"
@"HIDUserDevice"
@"NSString"
^{?=CCC}
@"NSArray"
@24@0:8^{_NSZone=}16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@44@0:8i16@20Q28f36f40
@36@0:8i16@20Q28
@28@0:8i16@20
@20@0:8i16
i16@0:8
@"NSMutableArray"
v24@0:8@?<v@?B>16
v24@0:8@?<v@?@"GCHIDUserDeviceSnapshot">16
v32@0:8@"GCGenericDeviceDriverModel"16@?<v@?B@"NSError">24
B32@0:8@16^@24
@"GCHIDDeviceInput"
@"NSDictionary"
v40@0:8C16C20C24C28C32C36
v36@0:8f16f20f24f28i32
v28@0:8f16f20i24
v28@0:8@16i24
v32@0:8f16f20f24i28
v32@0:8@16f24i28
v20@0:8i16
v28@0:8@"NSArray"16i24
v32@0:8@"NSArray"16f24i28
v24@0:8@?<v@?CCCCCC>16
v28@0:8f16f20f24
v24@0:8@?<v@?fff>16
{pair<bool, float>=Bf}28@0:8I16@20
v24@0:8Q16
q16@0:8
d16@0:8
v24@0:8d16
v24@0:8C16B20
>(knN
listening for XPC daemon
Connect To Daemon
Connection to com.apple.GameController.gamecontrollerd.driver invalidated
Connection to com.apple.GameController.gamecontrollerd.driver interrupted.  Attempting to re-establish.
initWithService: %d
processing io_service
creating HIDDevice for service %d
opening HIDDevice
registering for BTSessionCallbacks sessionEvent
dealloc
Freeing HIDDevice on %@
PropertyForKey: %@
setProperty: %@ forKey: %@
eventMatching: %@ client: %@
setEventDispatcher %@
setCancelHandler %p
calling cancel handler
activate
cancel
setDispatchQueue %p
clientNotification %@ added: %d
GCHIDLog::disconnect: unable to get BTDevice; no valid BTSession
GCHIDLog::disconnect: SUCCESS
GCHIDLog::disconnect: error code = %d
GCHIDLog::disconnect: unable to get BTDevice; error code = %d
GCHIDLog::disconnect: unable to get device address from %s; errCode = %d
creating battery device
created battery device %@ with properties %@
updateClientBattery reporting battery level %d%%
updateBatteryStats reporting battery level %d%%
scheduleIdleTimer
disconnectIfIdle disconnecting...
isIdle for %.2f seconds%@
Stopping timer...
Dispatching event...
ping
requestServiceWithReply
connectToBatteryServiceWithClient %@
BTSessionEventCallback: attached session = %p
BTSessionEventCallback: detached session = %p
BTSessionEventCallback: terminated session = %p
BTSessionEventCallback: failed session = %p
Could not get parent of service <%s>: %{mach.errno}d
Failed to create device input.
[Generic Gamepad HID Service/XPC/Driver Configuration Service] Fetch Device Snapshot
[Generic Gamepad HID Service/XPC/Driver Configuration Service] Apply Configuration
Applying model: %@
#WARNING: Found multiple elements for cookie %u
Now tracking '%zd' input elements:
 %@ => %{public}@
Processing field model %@
Post Event
Partners mode enabled? %d
