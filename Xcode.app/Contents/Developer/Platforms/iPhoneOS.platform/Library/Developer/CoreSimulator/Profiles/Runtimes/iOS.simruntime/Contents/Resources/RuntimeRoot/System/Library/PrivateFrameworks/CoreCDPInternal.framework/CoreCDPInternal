@(#)PROGRAM:CoreCDPInternal  PROJECT:CoreCDP-1
"Saving terms acceptance: %@"
"Fetched accepted terms with result: %@"
"Error fetching terms acceptance %@"
"Initialized %@"
"Deallocated %@"
"%@ started observing state"
"Error checking circle status (%@) after observing kSOSCCCircleChangedNotification - %@"
"Circle state is %@ after observing kSOSCCCircleChangedNotification (observer %p)"
"Circle observer ignoring: %s"
"%@ : Confirming recovery key"
"cached reovery key"
"failed to cache recovery key"
"%@ : recovery failed with error %@"
"Programming error detected! File a radar!"
"CDPDRecoveryFlowController deallocated"
"Recovery flow failed due to device inflation error. %@"
"We are unable to show UI as the UI provider is missing."
"%s Context Type: %@"
"%s Escape available: other devices"
"Requesting UI provider prompt for a remote device secret from one of %lu devices (offeringRemoteApproval=%i)"
"Interactive recovery with walrus status - %lu"
"Invoking cdpRecoveryFlowContext:promptForRemoteSecretWithDevices in CDPDRecoveryFlowController"
"Invoking cdpContext:promptForRemoteSecretWithDevices in CDPDRecoveryFlowController"
"Requesting UI provider prompt for an ICSC isNumeric=%i numericLength=%@"
"Fetching backup record devices"
"Failed to fetch backup record devices: %@"
"Received new connection %@, checking entitlements..."
"CDP client connection invalidated: %@"
"Accepting new connection %@ with entitlements mask %i"
"Denying new connection %@"
"Client is Buddy"
"Client is Preferences"
"Unknown client type with bundleID '%@'"
"Broadcasting notification: %@, with userInfo: %@"
"Parsed a MID"
"Parsed a PRK"
"Attempting silent re-authentication..."
"Renew request completed! Error: %@"
"Silently re-fetched recovery token"
"Silent re-authentication succeeded"
"Silent re-authentication failed: %@"
"Context Type: %@"
"Escape available: other devices"
"Escape available: account reset"
"Escape available: skip flow"
"Escape available: recovery key"
"_escapeOfferForDevices: Encountered error while checking RK support: %@"
"Escape available: Custodian Recovery"
"User attempted to sign in after burning out all recovery options, present hard limits"
"CDPDRemoteDeviceSecretValidatorDelegate applying to join circle"
"CDPDRemoteDeviceSecretValidatorDelegate cancelling application to join circle"
"Failed to recovery Octagon using custodian info with error: %@"
"Attempting to recover a record with context: %@"
"Recovered a clique: %@"
"clique recovery failed with error: %@"
"Non-terminating error detected, with retry option: %{BOOL}d"
"Starting handling hard limit error..."
"Starting handling soft limit error..."
"Attempting to fallback recovery options..."
"Creating recovery option: Recovery Key"
"Creating recovery option: Remote Approval"
"No fallback available"
"Creating recovery option: Skip"
"Creating recovery option: Reset"
"User elected to Reset Encrypted Data, confirming..."
"Creating recovery option: Cancel"
"Attempting to preset alert (using: %@) for error: %@"
"User responded to presented alert with option: %@"
"Prompting user for Reset confirmation"
"Reset confirmation prompt came back with: %@"
"Creating a piggybacking data provider with session: %@"
 enableTelemetry=YES 
BEGIN [%lld]: KCJoiningRequestProcessMessage  enableTelemetry=YES 
 Error=%{public,signpost.telemetry:number1,name=Error}d 
END [%lld] %fs: KCJoiningRequestProcessMessage  Error=%{public,signpost.telemetry:number1,name=Error}d 
KCJoiningRequestProcessMessage
END [%lld] %fs: KCJoiningRequestProcessMessage 
"Starting to recover PCS state"
"PCS State restored %{BOOL}d with error: %@"
"Starting to synchronize PCS state"
"PCS State synchronized %{BOOL}d with error: %@"
"Silent auth requested prior to checking CDP state"
"Checking iCDP State. Networked: %{BOOL}d"
"PCSIdentitySetIsICDPNetwork returned isEnabled=%i error=%@"
"Checking local iCDP state..."
"Checking companion circle state..."
"PCSIdentityCreate return NULL with error: %@"
"PCSIdentitySetup returned NULL with error: %@"
"PCS Identity fetched"
"Re-authenticating on error from enableCDPWithCompletion: %@"
"Checking PCS identities for service: %@"
"No service name provided, no key to fetch."
"Fetching keys for %@ is not allowed."
"No identities found for service: %@"
"Failed to create PCS identity set with error: %@"
BEGIN [%lld]: AccountInfoWithInfo  enableTelemetry=YES 
 error=%{public,signpost.telemetry:number1,name=error}d 
AccountInfoWithInfo
END [%lld] %fs: AccountInfoWithInfo  error=%{public,signpost.telemetry:number1,name=error}d 
EnableBackupWithInfo
BEGIN [%lld]: EnableBackupWithInfo  enableTelemetry=YES 
END [%lld] %fs: EnableBackupWithInfo  error=%{public,signpost.telemetry:number1,name=error}d 
"Failed to enable SecureBackup: %@"
"SecureBackup enabled"
BEGIN [%lld]: RecoverBackupWithInfo  enableTelemetry=YES 
RecoverBackupWithInfo
END [%lld] %fs: RecoverBackupWithInfo  error=%{public,signpost.telemetry:number1,name=error}d 
DisableBackupWithInfo
BEGIN [%lld]: DisableBackupWithInfo  enableTelemetry=YES 
END [%lld] %fs: DisableBackupWithInfo  error=%{public,signpost.telemetry:number1,name=error}d 
"Failed to disable SecureBackup with error %@"
"Disabled SecureBackup!"
 enableError=%{public,signpost.telemetry:number1,name=enableError}d 
END [%lld] %fs: DisableBackupWithInfo  enableError=%{public,signpost.telemetry:number1,name=enableError}d 
"Attempting to update recovery key cache..."
"Failed to cache recovery key with error: %@"
"Recovery key cache updated"
"Cached RK with error: %@"
"Failed to fetch RK from cache: %@"
"Cleared RK cache with error: %@"
BEGIN [%lld]: FetchEscrowRecords  enableTelemetry=YES 
 resultError=%{public,signpost.telemetry:number1,name=resultError}d 
FetchEscrowRecords
END [%lld] %fs: FetchEscrowRecords  resultError=%{public,signpost.telemetry:number1,name=resultError}d 
"Fetched escrow records: %@"
"Fetched escrow records error: %@"
"Fetched all escrow records: %@"
"fetchAllEscrowRecords failed, error: %@"
BEGIN [%lld]: TLKRecoverability  enableTelemetry=YES 
TLKRecoverability
END [%lld] %fs: TLKRecoverability  resultError=%{public,signpost.telemetry:number1,name=resultError}d 
"Checked for recoverability: %@"
"checkForRecoverability failed, error: %@"
"Attempting to persist verifier: %@ for %@"
"Managed config (%@) reports isPasscodeSet=%i"
"Already sent CDPCA event %@"
"Sending report %@ (time: %f), data - %@"
SecureChannelSendPayload
BEGIN [%lld]: SecureChannelSendPayload  enableTelemetry=YES 
"Response received: %@"
"Setting _approverBackupRecordsExist = %{BOOL}d"
"Setting _approveriCloudKeychainState = %ld"
END [%lld] %fs: SecureChannelSendPayload 
"Response does not contain a value for `CDPChannelTTSUPayloadKey`."
"Starting to listen for initiating payload..."
"Payload received from requestor: %@"
"Sending response to requestor: %@"
"Attempting to join the circle using remote approval..."
"Circle join was approved from another device"
"Ignoring circle state change because a recovery is in progress"
"Ignoring circle state change because we're not supposed to be waiting for remote approval"
"Failed to request circle join approval from another device - %@"
"Circle join was successfull with custodian recovery"
"Fetching decorated delegate: %@"
"resetAccountCDPState was called"
"resetAccountCDPStateAndSetSecret was called"
"Denying walrus access. Missing entitlement."
"Failed to fetch walrus status with error code: %zd, error: %@"
"Walrus status (%lu) fetched successfully."
"Denying walrus operation. Missing entitlement."
"Unknown walrus status. Can't update."
"Failed to update walrus status with error: %@"
"Walrus status updated successfully."
"Denying web access. Missing entitlement."
"Failed to fetch web access status with error: %@"
"Web access status (%lu) fetched successfully."
"Denying web access operation. Missing entitlement."
"Unknown web access status. Can't update."
"Failed to update web access status with error: %@"
"Web access status updated successfully."
"Unable to determine walrus status, abandoning pcs key fetch. error: %@"
"Walrus status (%lu) is not enabled, abandoning pcs key fetch."
"Unable to determine web access status, abandoning pcs key fetch. error: %@"
"Web access status (%lu) is not enabled, abandoning pcs key fetch."
"Error fetching key for service %@: %@"
"Failed to recover data dictionary: %@"
"Parsing recovered data: %@"
"Recovered data dictionary with keys: %@"
"%@: Failed to allocate security task (using framework-provided identifier)"
"%@: Failed to copy signing ID from task (%@) with error (%@)"
"%@: Failed to retrieve signing ID (using framework-provided identifier)"
"Expected valid context (%@) with non-null DSID and altDSID"
"%@: Attempting to update the last silent escrow record repair attempt date (%@)"
"%@: Unexpected request to remove last silent escrow record repair attempt date"
"%@: Determining if silent repair should be performed for state (%lu)"
"%@: Silent repair should not be performed due to rate limiting"
"%@: Silent repair should not be performed for unknown state"
"%@: Silent repair should not be performed for viable state"
"%@: Silent repair should be performed for not found state"
"%@: Silent repair can be perfomed for non viable state (%{BOOL}d)"
"%@: Proceeding with silent escrow record repair for state (%lu)"
"Failed to check all records with error: %{public}@"
"%{public}@: Processing escrow record with id: %{hash.mask}@ (name: '%@', serial: %@), is device record: %{BOOL}d"
"%{public}@: Record %{hash.mask}@ is invalid. Skipping update."
"%{public}@: No further view data needed, skipping view query"
"%{public}@: Record does not appear to be valid/viable, skipping view query: %@"
"%{public}@: Error fetching views for record (%{hash.mask}@): %{public}@"
"%@: Cannot silently repair escrow record without cached local secret"
"%@: Cannot silently repair escrow record due to rate limiting"
"%@: Double checking if silent escrow record repair should be performed (using network)"
"%@: Failed to fetch keychain value for last escrow repair attempt date with error (%@)"
"%@: Fetched last escrow repair attempt date (%@)"
"%@: Escrow record repair will not be allowed at this time"
"%@: Escrow record repair will be allowed at this time"
"%@: Could not find an existing keychain value for last escrow repair attempt date, allowing repair to proceed"
"%@: Cannot determine escrow record for unknown account with altDSID (%@)"
"%@: Will not determine escrow record state for device without local secret (not eligible)"
"%@: Cannot determine escrow record state for device not in circle (%lu)"
"%@: Cannot determine escrow record state for device not in circle (%lu) with error (%@)"
"%@: Cannot determine escrow record state due to server-side disablement"
"%@: Failed to determine if device already has escrow record with error (%@)"
"%@: Determed that current device has an existing escrow record (%@)"
"%@: Existing escrow record for current device could not be found"
"%@: Cannot silently repair escrow record for current device with nil peerID"
"%@: Checking all escrow records matching peerID (%@) from source (%ld)"
"%@: Checking if device (%@) is missing TLK recoverability using cache (%{BOOL}d)"
"%@: Checking TLK recoverability for escrow record (%@) exposed its non viableness (%@)"
"%@: Failed to check TLK recoverability for record with ID (%@)"
"%@: Simulating escrow record as non-viable record only for testing"
"%@: Checked TLK recoverability for escrow record (%@) and found views (%@)"
"%{public}@: Checking for recoverable TLK views in record (%{hash.mask}@) is missing TLK recoverability using cache (%{BOOL}d)"
"%@: Context is authenticated and has PET (%{mask.hash}@}"
"%@: Unable to continue silent escrow record repair due to auth error (%@)"
"%@: Context already has PET, auth is not necessary"
"%@: Context does not have a PET, attempting to perform silent auth"
"%@: Attempting to set the current date (%@) as last escrow repair attempt date"
"%@: Failed to set last escrow repair attempt date in keychain with error (%@)"
"%@: Successfully saved current date (%@) as last escrow repair attempt date, proceeding with silent repair attempt"
"%@: Failed to repair the non-viable escrow record as the request was dropped by escrow proxy with error (%@)"
"%@: Checking all escrow records for a device matching predicate (%@) with source (%ld)"
"Failed to check all records with error: %@"
"Found matching devices by checking all records, will return first: %@"
"%@: Fetching all escrow records from source (%ld) with account info (%@)"
"%@: Failed to fetch all escrow records with error (%@)"
"%@: Successfully fetched all escrow records (%@)"
"%@: Last escrow repair attempt date not found in keychain (%@)"
"%@: Failed to retrieve combined circle status using cache (%{BOOL}d) with error (%@)"
"%@: Retrieved combined circle status (%lu) using cache (%{BOOL}d)"
"%@: Prompting for local secret is not supported in this flow"
"Failed to generate random IV data. Can't perform encryption."
"Failed to encrypt data with status: %d"
"Failed to decrypt data with status: %d"
"Successfully fetched web access status (%{BOOL}d)"
"Failed to fetch existing account settings with error: %@"
"Successfully updated web access status (%{BOOL}d)."
"Failed to update web access status (%{BOOL}d) with error: %@"
"Circle status before attempting recovery is %@"
"Circle state changed to a state other than pending, proceeding with recovery"
"Attempting to reset to offering in SOS"
"Failed to reset to offering: %@"
"Successfully reset SOS circle to offering"
"Circle join requested, but we are already in circle!"
"CDP join status: %lu, Sharing channel: %@, Retry possible: %{BOOL}d"
"Circle resume failed, re-authentication requested!"
"Failed to resume session: %@, start to fall back..."
"Failed to resume session, no fallback. %@"
"Secure channel worked, we joined the circle..."
"Failed to initialized secure channel with error: %@, Custodian keys available attempting recovery"
"Failed to initialized secure channel with error: %@, starting to fall back..."
"Failed to initialized secure channel, no fallback. %@"
"scheduling join retry after %@ seconds as security says there is no CK account yet"
"Retrying circle join now!"
"Falling back to recovery based circle flows..."
"Can't join circle, failed to check for presence of secure backup records: %@"
"Circle status is CDPSyncingStatusAbsent and backups are NOT present... Trying to create and join the circle"
"Custodian CDP Recovery failed with error: %@"
"Custodian CDP Recovery succeeded"
"UI provider failed to perform interactive authentication for repair. Error: %@"
"Populating walrus status in context before attempting join"
"Error getting walrus status - %@"
"Walrus status [%lu] enabled %{BOOL}d"
"Attempting to reset and join new circle after recovery succeeded but resulted in a pending circle join..."
"Circle reset completed with success: %{BOOL}d, error: %@"
"Resetting circle after join attempt following recovery resulted in pending..."
"Attempt 1 - Failed to reset due to auth error, will retry: %@"
"Pending application state was resolved immediately after calling remove"
"Pending application state was not resolved immediately after calling remove... waiting to see state != Pending"
"Pending application state was resolved!"
"Updating device name for %@ to '%@' based on circle info"
"Requesting to join circle with handler"
"Request made, but we were already in circle, completing..."
"Successfully joined the circle"
"Failed to apply to circle: %@"
"MUM: CDPDLocalSecretFollowUpProviderImpl init'ed with altDSID %@"
"CDPDLocalSecretController dealloc"
"Updating context for local secret change"
"CDPDLocalSecretController: updated context with context type: %ld, appleID: %@, dsid: %@"
"Not in circle , trying repair"
"repair completed with result: %{BOOL}d error: %@"
"Have EscrowPreRecord, attempting to enable secure backup: %@"
"Have local secret, attempting to enable secure backup"
"Successfully updated local secret by re-enabling SecureBackup with context type: %ld"
"Failed to update local secret by re-enabling SecureBackup"
"No secret, no follow up"
"Failed to silently update local secret, starting repair"
"Creating new CDPContext with the auth results"
"Context type set to %ld"
@"Failed to reauthenticate before updating local secret"
"Refreshing context for input: (%@) - %{BOOL}d - %@"
"Enabling backup, but we are missing a PRK, force interaction to get one"
"Refreshing context with PET"
"Prompting user to enter local secret..."
"Got peer id: %@ from %@"
"Received Auth Notification %s, with userInfo %@"
"Detected security level change for %@"
"Auth observer ignoring %s, securityLevel %@"
"Auth observer ignoring: %s"
"Checking recovery key status from Secure Backup"
"Invalid context, assuming no primary account available"
"Recovery key verification UI flow completed with success: %{BOOL}d - %@"
"Recovery key UI flow completed with success %{BOOL}d - %@"
"Recovery Key verified!"
"Failed to persist RK verifier: %@"
"Failed to persist verifier: %@"
"Prompt for Recovery Key came back with success and recoveredInfo, attempting to cache with proxy %@"
"Recovery Key prompt came back with error: %@"
"SOS is turned off, returning YES"
"CDPDRecoveryKeyController %p deallocated"
"Multiple-ICSC secret is known to be bad, skipping validation"
"Recovery delegate rejected recovery with error. %@"
"Recovery key is known to be bad, skipping validation"
"Set _isAttemptingRecovery to suppress acting on change in circle state"
"Remaining attempts: %@"
"Depleted remaining attempts for multiple-iCSC entry (%@)"
"Un-set _isAttemptingRecovery to resume acting upon circle changes after failed multiple iCSC recovery"
"Redirecting error to the delegate"
"Delegate finished handling the error and returned: %@"
"Unsupported delegate"
"Reaching out to the delegate for error handling"
"cancelValidationWithError was called"
"Event handled, skipping call to valid secret handler"
"Un-set _isAttemptingRecovery to resume acting upon circle changes after failed single iCSC recovery"
"Exceeded maximum attempts for iCSC entry"
"Key mismatch detected"
"%@ : Generating recovery key"
"**** DEBUG **** Simulate non-viable records mode is ENABLED"
"**** DEBUG **** Simulate escrow proxy throttling mode is ENABLED"
"Fetching escrow records with %@"
"Re-authenticating after error calling fetchEscrowRecords: %@"
"Encountered error while re-authenticating: %@"
"Successfully re-authed after error calling fetchEscrowRecordsWithCompletion. Received non-cached escrow records: %@"
"Failed to re-auth after error calling fetchEscrowRecordsWithCompletion. Existing cached escrow records: %@"
"Encountered error while fetching escrow records: %@"
"Fetched Escrow Records %@"
"fetchEscrowRecordsWithCompletion: failed to fetch escrow records: %@"
"Fetching all escrow records with %@"
"Re-authenticating after error calling fetchAllEscrowRecords: %@"
"Successfully re-authed after error calling fetchAllEscrowRecords. Received non-cached escrow records: %@"
"Failed to re-auth after error calling fetchAllEscrowRecords. Existing cached escrow records: %@"
"Encountered error while fetching all escrow records: %@"
"Fetched All Escrow Records %@"
"fetchAllEscrowRecordsWithOptionForceFetch: failed to fetch escrow records: %@"
"Using cached SecureBackup account info %@"
"Re-authenticating after error calling accountInfoWithCompletion: %@"
"Successfully re-authed after error calling accountInfoWithCompletion. Received non-cached SecureBackup account info: %@"
"Failed to re-auth after error calling accountInfoWithCompletion. Existing cached SecureBackup account info: %@"
"error from accountInfoWithCompletion after re-auth: %@"
"Non-cached SecureBackup account info fetched %@"
"Clearing SecureBackup account info cache..."
"Fetching account info with %@"
"getBackupRecordDevicesWithOptionForceFetch: Failed to check for secure backup records: %@"
"getBackupRecordDevicesWithOptionForceFetch returned!"
"getBackupRecordDevicesWithOptionForceFetch fetched %lu records"
"getBackupRecordDevicesWithOptionForceFetch: Secure backup hasSingleICSCBackup=%{BOOL}d hasMultipleICSCBackups=%{BOOL}d"
"getBackupRecordDevicesWithOptionForceFetch fetched 0 records"
"**** DEBUG **** Setting fake remaining attempts value of 1 for %@"
"Disqualified device %@ because the remaining attempts is %lu"
"Backup record found for device %@ with date %@ (%@)"
"Backup record date %@ is later than the previously known newest record (%@), promoting %@ as newest device record"
"Finished parsing multiple-iCSC records and found the newest record to be %@"
"_getOctagonEscrowBackupRecordDevicesWithOptionForceFetch: called, fetching escrow records"
"fetch escrow records returned error %@"
"fetch all escrow records returned error %@"
"constructed 0 CDP devices after refetching records, possibly single-iCSC.. calling _getBackupRecordDevicesIncludingUnrecoverableRecords"
"there exists multiple icsc records and none of them will get the device into any trust system. Forcing a reset protected data"
"Finished parsing backup records, returning %lu devices and isUsingMultipleICSC=%i"
"_getBackupRecordDevicesIncludingUnrecoverableRecords: called, fetching account info from SecureBackup"
"SecureBackup returned error %@"
"Found a single-iCSC metadata record. Returning that as a faux-device using %@"
"No single-iCSC metadata record is present"
"Failed to get backup record devices with error: %@"
"Already using multiple ICSC, no need to prompt for adoption"
"Single ICSC record deleted, proceeding with enable of secure backup"
"Failed to delete single-ICSC backup while attempting to enable secure backup: %@"
"Single ICSC that is complex or random and not using multiple ICSC, prompting for adoption..."
"Accepted multiple ICSC, deleting old record..."
"Single ICSC that is NOT random or complex, deleting old record and enabling multiple-ICSC"
"Calling enable without delete due to existing record metadata being present"
"No existing backup record found, continuing with enable"
"Starting to check whether the account has any OT viable escrow record..."
"Failed to fetch escrow records for OT only viability check: %@"
"Completed the check for OT only viable escrow records with result: %@"
"Checking if the peer has a secure backup: %@"
"Check for existing backup failed with error: %@"
"Found %@ matching devices"
"Forcing recovery key support by preference (com.apple.corecdp: ForceRecoveryKeySupport)"
"isRecoveryKeySet threw error: %@"
"_enableSecureBackupWithContext called."
"_authenticatedEnableSecureBackupWithContext succeeded"
"_authenticatedEnableSecureBackupWithContext failed with error: %@"
"Re-authenticating after error... Retry number: %ld..."
"Will retry in %@ second(s)... Retry number: %ld"
"Re-authenticating results: reauthSuccess: %hhd reauthError: %@"
"_authenticatedEnableSecureBackupWithContext succeeded."
"Retry count has reached the maximum limit. Bubbling up previous retry error: %@"
"Posting followup for failed async SecureBackup path with error %@"
"Re-authenticating after error from authenticatedEnableSecureBackupWithRecoveryKey: %@"
"authenticatedEnableSecureBackupWithRecoveryKey received a nil recoveryKey"
"Attempting to enable SecureBackup with recovery key using info %@"
"cdp: Attempting to perform authenticated enable with context: %@"
"Forcing use of cached secret by preference (com.apple.corecdp: ForceUseCachedSecret)"
"Forcing purge of cached secret by preference (com.apple.corecdp: ForceCachedSecretPurge)"
"Using cached secret and managed config reports devicePasscodeIsSimple=%i"
"Using cached secret and managed config reports simplePasscodeLength=%li"
"Using cached secret with updated client metadata %@"
"Failed to escrow account recovery data due to missing MID"
"Failed to escrow account recovery data due to missing recovery token"
"Failed to enable SecureBackup because no cached secret was present when expected... prompting user to enter local secret"
"Attempt to enable Secure Backup again now that we have the local secret"
"Failed to get local secret"
"Failed to enable SecureBackup with error %@"
"Enabled SecureBackup!"
"Attempting to enable SecureBackup with validated local secret using info %@"
"Failed to enable due to existing record, disabling and trying again"
"Failed to fetch Anisette data! Error: %@"
"performEscrowRecoveryWithData: calling performEscrowRecoveryWithContextData"
"performEscrowRecoveryWithContextData: failed to recover: %@"
"performEscrowRecoveryWithContextData: success!"
"performSilentEscrowRecoveryWithCDPContext: invoked"
"performSilentEscrowRecoveryWithCDPContext: failed to fetch escrow records: %@"
"performSilentEscrowRecoveryWithCDPContext: fetched 0 escrow records"
"performSilentEscrowRecoveryWithCDPContext: single icsc"
"performSilentEscrowRecoveryWithCDPContext: fetched %lu multiple icsc records"
"performSilentEscrowRecoveryWithCDPContext: failed to fetch escrow records: %@, exiting"
"performSilentEscrowRecoveryWithCDPContext: cdp context does not support optimized recovery"
"performSilentEscrowRecoveryWithCDPContext: fetched 0 escrow records, exiting"
"performSilentEscrowRecoveryWithCDPContext: calling new recovery with %lu records"
"performSilentEscrowRecoveryWithCDPContext: performing silent restore now"
BEGIN [%lld]: OTCPerformSilentEscrowRecovery  enableTelemetry=YES 
OTCPerformSilentEscrowRecovery
END [%lld] %fs: OTCPerformSilentEscrowRecovery  Error=%{public,signpost.telemetry:number1,name=Error}d 
"performSilentEscrowRecoveryWithCDPContext: failed to perform silent burn and recover: %@"
"performEscrowRecoveryWithRecoveryContext: invoked"
"performEscrowRecoveryWithRecoveryContext: using recovery key from recoveryContext"
"performEscrowRecoveryWithRecoveryContext: fetching RK from the keychain"
"performEscrowRecoveryWithRecoveryContext: attempting recovery key recovery"
"performEscrowRecoveryWithRecoveryContext failed to join via recovery key: %@"
"performEscrowRecoveryWithRecoveryContext: joined via recovery key!"
"performEscrowRecoveryWithRecoveryContext: attempting silent burn"
"performEscrowRecoveryWithRecoveryContext: attempting remote restore"
"performEscrowRecoveryWithRecoveryContext: need to perform a single icsc restore, choosing old recovery SPI"
"performEscrowRecoveryWithRecoveryContext: chosen record is empty, aborting recovery"
"performEscrowRecoveryWithRecoveryContext: record checks out, continuing with restore"
BEGIN [%lld]: OTCPerformEscrowRecovery  enableTelemetry=YES 
OTCPerformEscrowRecovery
END [%lld] %fs: OTCPerformEscrowRecovery  Error=%{public,signpost.telemetry:number1,name=Error}d 
"performEscrowRecoveryWithRecoveryContext: failed to perform escrow recovery: %@"
"performEscrowRecoveryWithRecoveryContext: escrow recovery succeeded"
"Recovering SecureBackup failed - iCSC Invalid (silent burn failed). Trying again with cached recovery key."
"performEscrowRecoveryWithData: failed to recover via cached recovery key. error: %@"
"performEscrowRecoveryWithData: failed to recover via cached recovery key, but an error was not reported. There was also an error checking recovery key support: %@"
"Attempting to recover SecureBackup secret from device %@ using info %@"
"Recovery error had additional info: %@"
"Failed to recover SecureBackup with error %@"
"Recovered SecureBackup"
"Re-authenticating after error from _deleteAllBackupRecordsWithCompletion: %@"
"Attempting to delete all SecureBackup records with info %@"
"Error attempting to delete all backup records %@"
"Re-authenticating after error from _deleteSingleICSCBackupWithCompletion: %@"
"Deleting existing single-iCSC backup..."
"Failed to delete existing single-iCSC backup: %@"
"Existing single-iCSC backup deleted successfully"
"No existing single-iCSC backup found to delete"
"Failed to get account info while deleting single-iCSC backup: %@"
"Re-authenticating after error from _disableSecureBackupWithCompletion: %@"
"Attempting to disable SecureBackup with info %@"
"Failed to disable SecureBackup because no local peerID could be found"
"Re-authenticating after error from disableRecoveryKeyWithCompletion: %@"
"Removing recovery key"
"Removed recovery key result: %{BOOL}d, error: %@"
"User previously disabled iCK: %{BOOL}d"
"User disabled iCloud keychain: %{BOOL}d"
"Failed to set user preference for iCloud keychain disable: %@"
"Error calling PCSIdentitySetIsICDP: %@"
"Failed to call PCSIdentitySetIsICDP: %@"
"CDPDAccount failed to fetch clique status with error: %@"
"Beneficiary accounts can only post follow ups for repair."
"Beneficiary accounts with valid manatee states are not eligible to post repair followups."
"Device is not biometric auth capable or is already enrolled."
"Bio metric auth not enrolled..."
"Follow up factory manatee check returned an error for altDSID %@: %@"
"Follow up factory manatee check returned an error: %@"
"Internal Walrus error %@"
"Internal Walrus status %lu enabled %{BOOL}d"
"Starting to listen for XPC events..."
"Darwin XPC event stream handler called: %s"
"Error during notify_register_check for event - %s"
"Cannot get the state using invalid token for event - %s"
"Error during notify_get_state for token"
"XPC event value is: %llu"
"Notifying listener %@ of %s"
"Distributed XPC event stream handler called: %s"
"User Info: %@"
"Failed to add auth header"
"Processing request for context: %@"
"posting followup is not supported in current configuration"
"Clearing a follow up: (%@) - %@"
"Enabling data privacy on account"
"Disabling data privacy on account"
"No primary account available. Data Privacy cannot be enabled."
"Recovery key or custodian is not available. Data Privacy cannot be enabled."
"Recovery key is not available. Data Privacy cannot be enabled."
"Checking whether any previous device is available on account that will lose access."
"Error getting device list that will lose access. We cannot proceed further. Error - %@"
"There are devices that will lose access to the account. User needs to agree to drop these devices."
"Device check complete, moving on to enable data privacy on IdMS"
"Enabling data privacy failed on IdMS. Error - %@"
"Data privacy is enabled on IdMS. Moving on to roll the keys on Security."
"Enabling data privacy failed on Security. Error - %@"
"Keys are rolled on Security. Data Privacy should be enabled now."
"Denying access to data recovery, missing entitlements."
"Fetching escrow record devices..."
"Fetched escrow record devices with error: %@"
"Checking current device's escrow record for recoverability..."
"Failed to fetch escrow records with error: %@"
"Found one escrow record for current device that is recoverable!"
"Failed to find any escrow record for this device that is recoverable: %@"
"Denying access to state machine. Missing entitlement."
"Starting state machine..."
"Forcing _useSecureBackupCachedPassphrase=YES for iOS/watchOS Buddy on a device with a local secret present"
"Joined CDP without valid method. Please file report with sysdiagnose."
"Failed to join without an error. Please file report with sysdiagnose."
"Starting state repair..."
"Denying access to state repair. Missing entitlement."
"Starting accepting side server..."
"Approving TTSU attempted without primary iCloud account, failing..."
"CDP flow interrupted"
"Denying access to escrow record status (missing entitlements)."
"Checking whether repair should be performed on the CDP state..."
"State machine status check completed shouldRepair=%{BOOL}d error=%@"
"Denying access to state machine. Missing entitlements"
"Handing change in an attempt to escrow preRecord: %@..."
"State machine finished handling preRecord %@ change with didUpdate=%{BOOL}d error=%@"
"Handing change in local secret..."
"State machine finished handling local secret change with didUpdate=%{BOOL}d error=%@"
"Finishing offline local secret change..."
"Updated local secret after offline change"
"Failed to update local secret after offline change: %@"
"Finishing Cyrus terms flow by collecting passcode..."
"Created backup after terms agreement."
"Failed to create delayed backup: %@"
"Attempting to clear a follow up: %@"
"Denying access to cleraing follow ups. Missing entitlement."
"Attempting to post a follow up: %@"
"Denying access to posting follow ups. Missing entitlement."
"Calling out to controller to save terms."
"Client is not permitted to save terms."
"Calling out to controller to fetch terms."
"Client is not permitted to fetch terms."
"Initiating Account Recovery with UI provider: %@"
"Starting RK based Account Recovery flow"
"Initiating info recovery"
"Denying access to back up data. Missing entitlements"
"info recovery completed with error: %@"
"Denying access to check OT status operation. Missing entitlement."
"Denying access to recovery key operation. Missing entitlement."
"Denying access recovery key operation. Missing entitlement."
"Denying verify recovery key operation. Missing entitlement."
"Error geting data privacy status from security - %@"
"Returing (%lu) for data privacy status."
"Error updating data privacy status - %@"
"Update to data privacy status was successful."
"Denying access (missing entitlement)."
"Successfully performed silent escrow record repair in background!"
"Failed to perform silent escrow record repair in background with error: %@"
"Denying access to start repairing escrow record (missing entitlement)."
"Successfully performed silent escrow record repair!"
"Failed to perform silent escrow record repair with error: %@"
"Denying access to perform escrow record repair (missing entitlement)."
"Successfully updated last silent escrow record repair attempt date (%@)"
"Failed to update last silent escrow record repair attempt date (%@) with error: %@"
"Denying access to update last silent escrow record repair attempt date (missing entitlement)."
"Account not eligible, cannot fetch walrus status: %@"
"No eligible primary account found, cannot fetch walrus status: %@"
BEGIN [%lld]: FetchAccountCleanupStatus  enableTelemetry=YES 
FetchAccountCleanupStatus
END [%lld] %fs: FetchAccountCleanupStatus  Error=%{public,signpost.telemetry:number1,name=Error}d 
"Failed to fetch walrus status with error: %@"
"Successfully fetched walrus status: (%{BOOL}d)"
"No eligible primary account found, cannot update walrus status: %@"
"Repairing Walrus status for account %@, initiating silent auth."
"Failed to perform silent auth with error: %@"
"Silent auth completed, continuing walrus repair."
"Repair completed successfully"
"Repair completed with error: %@"
"Updating Walrus status for account %@, initiating silent auth."
"Silent auth completed, continuing walrus update."
"Account has no CloudKit account"
"No Primary account."
"Primary account has no CloudKit account"
"Primary account has no AuthKit account"
BEGIN [%lld]: UpdateAccountCleanupStatus  enableTelemetry=YES 
 isEnabled=%{public,signpost.telemetry:number1,name=isEnabled}d  Error=%{public,signpost.telemetry:number2,name=Error}d 
UpdateAccountCleanupStatus
END [%lld] %fs: UpdateAccountCleanupStatus  isEnabled=%{public,signpost.telemetry:number1,name=isEnabled}d  Error=%{public,signpost.telemetry:number2,name=Error}d 
"Walrus status change succeeded, notifying downstream systems..."
"After successfully updating walrus state, failed to update web access state with error: %@"
"After updating walrus state to %{BOOL}d, successfully updated web access status to %{BOOL}d"
"Renew credentials completed with result %tu, with error: %@"
"**** DEBUG **** Fake nearly depleted records mode is ENABLED"
"CDPDStateMachine %p deallocated"
"State machine not supported on simulator"
"Starting preflight of account for %{mask.hash}@"
"Skipping account preflight for %@ due to presence of beneficiary identifier: %{mask.hash}@"
"Preflight finished with shouldProceed=%i error=%@"
"Credential was provided, attempting to register..."
"Failed to register credentials with Security, lets try again..."
"Credential was not provided or we are not HSA2... moving on!"
"Checking iCDP status..."
"Finished checking iCDP status with isEnabled=%i error=%@"
"Prompting for access key for beneficiary trust."
"Successfully obtained access code. Trying to recover trust..."
"Failed to get the beneficiary access key. %@"
"Checking for circle status in order to put beneficiary account in trust, attempt #%lu."
"Beneficiary trust recovery was a %@."
"Failed to recover octagon with beneficiary access key. %@"
"Completing the beneficiary trust with results: %@"
"Scheduling to join beneficiary trust after %@ seconds as security says there isn't a CK account yet."
"Circle status is unexpected for beneficiary trust. Failing
"CDP Reset has been requested... hold on to your hats..."
"iCDP is enabled on HSA2 account, attempting to join circle..."
"Attempting to RECOVER backup"
"Finished recovering backup with didRecover=%i didRequestReset=%i error=%@"
"Resetting during sign in flow is illegal, operation will not be performed."
"Failed to join circle and recovery is not needed, aborting (error as %@)"
"iCDP is enabled, but the account is not HSA2 enabled. Used to roll back iCDP enrollment previously, but these days we don't..."
"Failed to disable recovery key with error: %@"
"Successfully disabled recovery key!"
"CDP reset succeeded, attempting to join/create the circle again"
"Joined circle after CDP reset. Attempting to disable RK..."
"Joined circle after CDP reset. Enabling secure backup..."
"Finished enabling secure backup after CDP reset with didEnable=%i error=%@..."
"Joined circle after CDP reset. Skipping secure backup because we don't have a secret"
"CDP reset failed, can not proceed: %@"
"Failed to check for existing records before enabling secure backup with error: %@"
"Enabling secure backup..."
"Finished enabling secure backup with didEnable=%i error=%@..."
"Device is in circle but has no local secret or already has a secure backup enabled, skipping secure backup enable"
"Checking for existing records before enabling secure backup..."
"Account preflight failed with error, aborting CDP state machine - %@"
"Attempting to enable iCDP..."
"Finished enabling iCDP with didEnable=%i error=%@"
"Not eligible for iCDP - %@"
"Enabling iCDP has already been attempted, but checking the status reports iCDP is still not enabled. Aborting."
"iCDP is not enabled, but the account is not HSA2 enabled"
"Context passed into %s was nil, and context for primary account is also nil. Aborting."
"non-HSA2 account detected, skipping validation"
"HSA2 account that is not in circle, suggesting repair needed: %@, %@"
"Local account is a beneficiary alias and is already in circle, repair not needed"
"Local device does not have local secret and is already in circle, repair not needed"
"Will not be able to fetch escrow record status report because escrow record is nil. Aborting."
"Using fetchSource (%lu) for escrow record controller (%@) in state machine (%@)"
"Found error while attempting to generate escrow status report: %@"
"Device octagonViability=(%lu), sosViability=(%lu)"
"Device is neither octagon viable nor SOS viable. Should repair."
"Found nil accountViability in escrow report. Should not prompt."
"Account octagonViability=(%lu), sosViability=(%lu)"
"Account needs to have at least one escrow record viable for Octagon and at least one for SOS. Should repair."
"Starting silent authentication for repair"
"_performSilentlyAuthenticatedRepair: set refreshedContext type to %ld"
"Failed to perform silent authentication for repair with error %@"
"UI provider failed to perform interactive authentication for repair with error %@"
"Refreshing with context"
"_refreshAndAuthenticateWithContext: context type: %ld, appleID: %@, dsid: %@"
"Failed to enable KVS with error %@"
"Account preflight failed - Primary account DSID (%@) does not match the DSID specified in the context (%@)"
"Account preflight failed - No primary account is present"
"Found primary account"
"Enabling KVS..."
"Finished enabling KVS with success=%i error=%{public}@"
"KVS is already enabled!"
"Enabling iCDP on sign-in is disabled"
"Attempting to recover backup using the cached local secret..."
"Finished recovery attempt using the cached local secret with didRecover=%i didRequestReset=%i error=%@"
"Finished recovery attempt using the secret provided by user. didRecover=%i didRequestReset=%i error=%@"
"Failed to recover SecureBackup because no UI provider is present to request the local and/or remote device secrets"
"Proceeding with backup recovery attempt now that the local secret is known..."
"Finished backup recovery attempt with the user-provided local secret with didRecover=%i error=%@"
"Failed to get a local device secret from the UI provider with error %@"
"Prompting for local secret before recovering backup"
"Proceeding with backup recovery attempt without a local device secret"
"Finished backup recovery attempt without local secret with didRecover=%i error=%@"
"_attemptBackupRecoveryWithLocalSecret: fetching RK from the keychain"
"_attemptBackupRecoveryWithLocalSecret: Encountered error while checking RK support: %@"
"Attempting SILENT recovery with the %@"
"Silent recovery failed, attempting to recover by prompting for remote secret. error=%@"
"Attempting to enable secure backup after successful SILENT recovery"
"Finished enabling secure backup after successful SILENT recovery with didEnable=%i error=%@"
"Local secret is not present, proceeding to recovery by prompting for remote secret"
"Attempting to enable secure backup after successful INTERACTIVE recovery with multiple-ICSC already in use"
"Finished enabling secure backup after successful INTERACTIVE recovery with didEnable=%i error=%@"
"Skipping enable of SecureBackup after successful INTERACTIVE recovery due to no local secret being present"
"User cancelled remote device secret entry"
"User requested reset of their CDP state!"
"User has W enabled, will show RPD completed alert"
"Reset completed confirmation alert was not shown due to: %@"
"User does not have W enabled, signaling completion"
"Error prompting user for remote device secret - %@"
@"_enableCustodianRecoveryIfAvailableForContext: returning %i"
"Disabling async secure backup enrollment for CDPContextType: %ld"
"Disabling async secure backup enrollment since context has no cached local secret."
"Context has disabled async secure backup enrollment"
"Pref to disable async enable was set..."
"_postRecoveryEnableSecureBackupWithContext called."
"Context hasPeersWithCDPBackupRecords and async mode is enabled."
"Finished asynchronous enabling Secure Backup"
"Calling upgradeICSCRecordsThenEnableSecureBackupWithContext"
"Attempting to enable secure backup using the cached secret"
"Finished enabling secure backup using the cached secret with didEnable=%i error=%@"
"Got a valid local secret, attempting to enable secure backup"
"User cancelled local device secret entry"
"Error prompting user for local device secret - %@"
"Asking the UI provider to prompt for the local device secret"
"Failed to enable SecureBackup because no UI provider is present to request the local device secret"
"Hold on to your hats. User has requested a CDP reset."
"Failed to delete all backup records with error: %@"
"Initial sync not required, skipping..."
"Failed to parse data: %@ - %@"
"Context already initialized, returning..."
"Initializing piggybacking channel"
"Initializing TTSU channel"
"Failed to initialize a channel %@"
"Secure channel proxy going away..."
"Creating SecureBackup auth info"
"Failed to fetch iCloud Env"
"Failed to fetch EP URL"
"iCloud Env missing, bad things to come..."
"Auth Token missing, bad things to come..."
"Base URL missing, bad things to come..."
"Requesting the server suppress filtering"
"Invalid configuration request detected"
"Attempting to fetch configuration using request: %@"
"Configuration Response: %@"
"Server Indicated that a retry attempt is needed"
"Failed to load configuraiton: %@"
"Configuration Fetched: %@"
"Older, non-view-aware peers are present therefore user visible keychain is implicitly enabled despite the state of views"
"The device is NOT in circle and so isUserVisibleKeychainSyncEnabled will return NO"
"CDP State repair is needed because the account is iCDP enabled but HSA2 silent auth failed with error %@"
"CDP State repair is needed because the account is iCDP enabled but not in circle"
"Calling setUserControllableViewsSyncStatus with enable=%@ returned success=%@ error: %@"
"Peers reported positive iCloud Keychain state, enabling..."
"Failed to synchronize keychain view state with error: %@"
"Creating initiating payload..."
"Found nil initiating payload"
"Sending initiating payload: %@"
"We completed, but ended up with error... %@"
@"Failed to send initiating message for resume: %@"
"Starting a CDP accepting server..."
"Starting server in dry move, we are not HSA2"
"Failed to process requestor payload on approver side with error: %@"
"Processing reply: %@"
"Failed to process reply with error: %@"
"Found nil response data"
"Secure channel request completed..."
"Sending response: %@"
"Failed to send response with error: %@"
"postLocalSecretChangeFollowUp: altDSID:%@"
"deleteLocalSecretChangeFollowUp: altDSID:%@"
"postConfirmExistingSecretFollowUp: altDSID:%@"
"deleteConfirmExistingSecretFollowUp: altDSID:%@"
"Sending payload over piggybacking channel"
BEGIN [%lld]: TTSUInitiatingPayload  enableTelemetry=YES 
"Creating an initiating pairing channel..."
"Creating initiating TTSU payload"
"Created initiating TTSU payload with error: %@"
TTSUInitiatingPayload
END [%lld] %fs: TTSUInitiatingPayload  Error=%{public,signpost.telemetry:number1,name=Error}d 
BEGIN [%lld]: TTSUProcessIncomingPayload  enableTelemetry=YES 
"Creating an accepting pairing channel..."
"Processing incoming TTSU payload"
"Processed incoming TTSU payload with error: %@"
"Processed incoming TTSU payload with result"
TTSUProcessIncomingPayload
END [%lld] %fs: TTSUProcessIncomingPayload  Error=%{public,signpost.telemetry:number1,name=Error}d 
"Pairing channel indicated initial sync requirement: %{BOOL}d"
v24@?0@"SecureBackupTermsInfo"8@"NSError"16
CDPDCircleStateObserver Event Queue
v12@?0i8
v16@?0Q8
v32@?0@8Q16^B24
-[CDPDAccountRecoveryValidator confirmRecoveryKey:completion:]
CDPDAccountRecoveryValidator.m
completion
_authProvider
v24@?0@"NSDictionary"8@"NSError"16
v28@?0B8@"NSArray"12@"NSError"20
-[CDPDRecoveryFlowController _escapeOfferForDevices:]
com.apple.cdpd.rk.keychain_service
com.apple.cdp.rk
com.apple.CoreCDP.EscrowRecoverabilty
escrowRecoveryDeviceCount
totalAttemptsCount
maxDeviceAttemptsCount
accountCleanupStatus
CDPDConnectionInvalidatedNotification
com.apple.purplebuddy
com.apple.Preferences
v8@?0
com.apple.cdp.daemon
com.apple.cdp.recovery
com.apple.authkit.client
com.apple.authkit.client.private
com.apple.authkit.client.internal
com.apple.authkit.client.owner
com.apple.cdp.statemachine
com.apple.cdp.utility
com.apple.cdp.followup
com.apple.cdp.recoverykey
com.apple.cdp.walrus
com.apple.cdp.walrus.pcskeys
com.apple.cdp.dataprivacy
v24@?0@"CDPContext"8@"NSError"16
v24@?0@"CDPDRemoteSecretValidationResult"8@"NSError"16
v12@?0B8
v16@?0@"NSError"8
-[CDPDRecoveryValidatedJoinFlowController secretValidator:didFailRecovery:withError:completion:]
CDPDRecoveryValidatedJoinFlowController.m
v20@?0B8@"NSError"12
REMOTE_SECRET_ENTRY_FORGOT_CODE_DIALOG_RK
REMOTE_SECRET_ENTRY_MULTIPLE_INCORRECT_BUTTON_APPROVE
REMOTE_SECRET_ENTRY_MULTIPLE_INCORRECT_BUTTON_OK
REMOTE_SECRET_ENTRY_MULTIPLE_INCORRECT_BUTTON_RESET
GENERIC_CANCEL_BUTTON
v16@?0q8
REMOTE_SECRET_ENTRY_MULTIPLE_INCORRECT_TITLE
REMOTE_SECRET_ENTRY_MULTIPLE_INCORRECT_MESSAGE_SIGNIN
REMOTE_SECRET_ENTRY_MULTIPLE_INCORRECT_MESSAGE_NO_RESET
REMOTE_SECRET_ENTRY_MULTIPLE_INCORRECT_MESSAGE_RESET
REMOTE_SECRET_ENTRY_GLOBAL_LIMIT
%@%@
RESET_CONFIRMATION_DIALOG_TITLE
RESET_CONFIRMATION_DIALOG_MESSAGE
RESET_CONFIRMATION_DIALOG_BUTTON_RESET
RESET_CONFIRMATION_DIALOG_TITLE_NO_RECOVERY
RESET_CONFIRMATION_DIALOG_MESSAGE_NO_RECOVERY
RESET_CONFIRMATION_DIALOG_BUTTON_RESET_NO_RECOVERY
type=%@; endpoint=%@; backupActivity=%@
Unknown
HandleCloudDataProtectionState
StartCircleApplicationApprovalServer
RepairCloudDataProtectionState
ShouldPerformRepairForContext
RecoverAndSynchronizeSquirrel
RecoverSquirrel
LocalSecretChangedTo
AttemptToEscrowPreRecord
FinishOfflineLocalSecretChange
VerifyRecoveryKey
FinishCyrusFlowAfterTermsAgreement
GenerateNewRecoveryKey
DeleteRecoveryKey
GenerateRandomRecoveryKey
IsRecoveryKeyAvailable
IsICDPEnabledForDSID
HasLocalSecret
IsUserVisibleKeychainSyncEnabled
SetUserVisibleKeychainSyncEnabled
RemoveNonViewAwarePeersFromCircle
PerformRecovery
ClearFollowUp
PostFollowUp
StatusForDataPrivacy
UpdateDataPrivacy
FetchEscrowRecordDevices
DeviceEscrowRecordRecoverable
SaveTermsAcceptance
FetchTermsAcceptanceForAccount
WalrusStatus
BroadcastWalrusStateChange
UpdateWalrusStatus
WebAccessStatus
UpdateWebAccessStatus
PcsKeysForServices
SynchronizeKeyValueStore
IsEligibleForCDP
BackupRecordsArePresent
GetBackupRecordDevicesWithOptionForceFetch
ClearAccountInfoCache
EnableSecureBackupWithRecoveryKey
EnableSecureBackup
UpgradeICSCRecordsThenEnableSecureBackup
CheckAndRemoveExistingThenEnableSecureBackupRecord
PerformEscrowRecoveryWithRecoveryContext
RecoverSecureBackup
DeleteAllBackupRecords
DisableSecureBackup
DisableRecoveryKey
CheckForExistingRecord
CheckForExistingRecordWithPeerId
CheckForExistingRecordMatchingPredicate
SupportsRecoveryKey
UncacheAllSecrets
com.apple.CoreCDP.EscrowPreRecord
preRecordIdentifier
EscrowPreRecordResult
didAttemptEscrowPreRecord
wasSuccess
errorDomain
errorCode
underlyingErrorDomain
underlyingErrorCode
version
duration
__OSINSTALL_ENVIRONMENT
__AKSYNCBUBBLE
%@%u
<%@: %p> EventName: [%@], ReportData: %@
CDPChannelTTSURequestID
CDPChannelTTSUPayloadKey
CDPChannelTTSUPayloadBackupRecordsExistKey
CDPChannelTTSUPayloadiCloudKeychainEnabledKey
v28@?0i8@"NSDictionary"12@"NSDictionary"20
v32@?0@"NSDictionary"8@"NSDictionary"16@?<v@?i@"NSDictionary"@"NSDictionary">24
com.apple.CoreCDP.EscrowRecovery
icscRecoveryDeviceCount
totalRemainingAttempts
icscRecoveryStatus
metadata
ClientMetadata
recordID
kSecureBackupEscrowedSPKIKey
SecureBackupMetadataTimestamp
v24@?0Q8@"NSError"16
B24@?0@"CDPDevice"8@"NSDictionary"16
v32@?0@"CDPDevice"8Q16^B24
v32@?0@"CDPDevice"8@"NSError"16^B24
unknown
UNKNOWN-%0000x
com.apple.cdpd.escrow-repair.svc
com.apple.cdpd.escrow-repair.label.last-attempt-date
v28@?0Q8B16@"NSError"20
com.apple.cdpd.silent-escrow-record-repair
v32@?0Q8B16B20@"NSError"24
q24@?0@"OTEscrowRecord"8@"OTEscrowRecord"16
v24@?0@"NSArray"8@"NSError"16
com.apple.security.trustedpeers.container
v24@?0@"CDPDevice"8@"NSError"16
v32@?0@"OTEscrowRecord"8Q16^B24
B24@?0@"CDPDevice"8@16
com.apple.CoreCDP.adp.statusChange
statusChange
com.apple.cdpd.circleRequestQueue
com.apple.cdpd.retryQueue
v24@?0@"CDPDCircleJoinResult"8@"NSError"16
v24@?0B8B12@"NSError"16
B16@?0^@8
v24@?0@"CDPLocalSecret"8@"NSError"16
v32@?0@"<CDPDAuthListener>"8Q16^B24
v24@?0@"NSString"8@"NSError"16
ICSC_ENTRY_MULTIPLE_INCORRECT_TITLE
ICSC_ENTRY_MULTIPLE_INCORRECT_MESSAGE
-[CDPDRecoveryKeyValidatorImpl confirmRecoveryKey:completion:]
CDPDRecoveryKeyValidatorImpl.m
device_name
device_model
device_model_version
device_model_class
device_color
device_enclosure_color
device_platform
device_mid
RetryCount
com.apple.corecdp
RetryDelay
SimulateNonViableEscrowRecord
SimulateEPThrottle
en_US_POSIX
dd-MM-yyyy HH:mm:ss
yyyy-MM-dd HH:mm:ss
B24@?0@"CDPDevice"8Q16
ForceRecoveryKeySupport
ForceUseCachedSecret
ForceCachedSecretPurge
-[CDPDSecureBackupController _authenticatedEnableSecureBackupWithContext:completion:]
CDPDSecureBackupController.m
unlockType == MCUnlockScreenSimple || simplePasscodeType == MCNotSimplePasscode
v24@?0@"AKAnisetteData"8@"NSError"16
DeviceColor
DeviceEnclosureColor
no escrow records found
chosen record is empty
< REDACTED >
< array with %lu items >
< dictionary with %lu keys >
userDisabledICK
Localizable-Walrus
OfflineLocalSecretChange
RepairCDPState
RegenerateCDPRecoveryKey
SecureTerms
ConfirmExistingSecret
com.apple.cdp.repair.continue
com.apple.cdp.repair.recoverykey
com.apple.cdp.offlinesecret.continue
com.apple.cdp.offlinesecretcreate.continue
com.apple.cdp.secureterms.continue
com.apple.cdp.confirmexistingsecret.continue
com.apple.cdp.dismissfollowup
com.apple.purplebuddy.revisitSkippedSteps
flowSkipIdentifiers
faceID
touchID
prefs:root=SETUP_FINISH&flow=%@
CONFIRM_NEW_SECRET_FOLLOWUP_ITEM_TITLE
CONFIRM_NEW_SECRET_FOLLOWUP_ITEM_INFORMATIVE
CONFIRM_NEW_SECRET_FOLLOWUP_NOTIFICATION_TITLE
CONFIRM_NEW_SECRET_FOLLOWUP_NOTIFICATION_INFORMATIVE
CONFIRM_NEW_SECRET_FOLLOWUP_NOTIFICATION_ACTIVATE_LABEL
SECURE_TERMS_FOLLOWUP_ITEM_TITLE
SECURE_TERMS_FOLLOWUP_ITEM_INFORMATIVE
SECURE_TERMS_FOLLOWUP_NOTIFICATION_INFORMATIVE
SECURE_TERMS_FOLLOWUP_NOTIFICATION_ACTIVATE_LABEL
FOLLOWUP_VERIFY_PASSCODE
CONFIRM_EXISTING_SECRET_FOLLOWUP_NOTIFICATION_ACTIVATE_LABEL
CONFIRM_EXISTING_SECRET_FOLLOWUP_ITEM_TITLE
CONFIRM_EXISTING_SECRET_FOLLOWUP_ITEM_INFORMATIVE
CONFIRM_EXISTING_SECRET_FOLLOWUP_NOTIFICATION_TITLE
CONFIRM_EXISTING_SECRET_FOLLOWUP_NOTIFICATION_INFORMATIVE
FOLLOWUP_VERIFY_PASSCODE_TITLE
FOLLOWUP_VERIFY_PASSCODE_MESSAGE
FOLLOWUP_VERIFY_PASSCODE_NOTIFICATION_TITLE
FOLLOWUP_VERIFY_PASSCODE_NOTIFICATION_MESSAGE
FOLLOWUP_CREATE_PASSCODE_TITLE
FOLLOWUP_CREATE_PASSCODE_MESSAGE
FOLLOWUP_CREATE_PASSCODE_NOTIFICATION_TITLE
FOLLOWUP_CREATE_PASSCODE_NOTIFICATION_MESSAGE
FOLLOWUP_CREATE_PASSCODE
FOLLOWUP_CREATE_PASSCODE_BUTTON_PRIMARY
FOLLOWUP_VERIFY_PASSCODE_BUTTON_DISMISS
TRUST_FOLLOWUP_ITEM_TITLE
TRUST_FOLLOWUP_NOTIFICATION_TITLE
TRUST_FOLLOWUP_ITEM_INFORMATIVE
TRUST_FOLLOWUP_NOTIFICATION_INFORMATIVE
SKIPPED_FOLLOWUP_ITEM_TITLE
SKIPPED_FOLLOWUP_ITEM_INFORMATIVE
SKIPPED_FOLLOWUP_NOTIFICATION_TITLE
SKIPPED_FOLLOWUP_NOTIFICATION_INFORMATIVE
FOLLOWUP_JOIN_CDP_TITLE
FOLLOWUP_JOIN_CDP_MESSAGE
FOLLOWUP_JOIN_CDP_NOTIFICATION_TITLE
FOLLOWUP_JOIN_CDP_NOTIFICATION_MESSAGE
FOLLOWUP_JOIN_CDP
TRUST_FOLLOWUP_NOTIFICATION_ACTIVATE_LABEL
RECOVERY_KEY_REPAIR_TITLE
RECOVERY_KEY_REPAIR_INFORMATIVE
RECOVERY_KEY_REPAIR_NOTIFICATION_TITLE
RECOVERY_KEY_REPAIR_FOLLOWUP_NOTIFICATION_INFORMATIVE
RECOVERY_KEY_REPAIR_FOLLOWUP_NOTIFICATION_ACTIVATE_LABEL
D2DENCRYPTION_FOLLOWUP_FACEID_TITLE
D2DENCRYPTION_FOLLOWUP_FACEID_INFOTEXT
D2DENCRYPTION_FOLLOWUP_TOUCHID_TITLE
D2DENCRYPTION_FOLLOWUP_TOUCHID_INFOTEXT
D2DENCRYPTION_FOLLOWUP_ACTION
com.apple.CoreCDPUI.CDPFollowUpExtension
LAContext
/System/Library/Frameworks/LocalAuthentication.framework/LocalAuthentication
com.apple.notifyd.matching
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.distnoted.matching
UserInfo
X-MMe-Client-Info
%@:%@
true
false
X-Apple-Account-Recovery
Basic %@
Authorization
ACCOUNT_RECOVERY_SOFT_LIMIT_REACHED_TITLE
ACCOUNT_RECOVERY_SOFT_LIMIT_REACHED_MESSAGE
GENERIC_ERROR_DEFAULT_BUTTON
ACCOUNT_RECOVERY_HARD_LIMIT_REACHED_TITLE
ACCOUNT_RECOVERY_HARD_LIMIT_REACHED_MESSAGE_GLOBAL
START_ACCOUNT_RECOVERY_BUTTON
ACCOUNT_RECOVERY_HARD_LIMIT_REACHED_MESSAGE_SINGLE
ACCOUNT_RECOVERY_HARD_LIMIT_REACHED_MESSAGE_MULTI
com.apple.cdp.cfu-dismiss
KEYCHAIN_FOLLOWUP_INTERNAL_BLAME
v16@?0@"NSNotification"8
v24@?0@"CDPUpdateDataPrivacyContext"8@"NSError"16
com.apple.cdp.walrus.status.repair
com.apple.cdp.walrus.status.update
com.apple.cdp.walrus.status.update.post-enable-actions
v24@?0q8@"NSError"16
FakeDepletedRecords
v16@?0@"CDPStateHandlerResult"8
v24@?0@"AKInheritanceAccessKey"8@"NSError"16
com.apple.cdpd.beneficiaryTrustQueue
failure
success
-[CDPDStateMachine shouldPerformRepairWithOptionForceFetch:completion:]
v24@?0@"CDPEscrowRecordReport"8@"NSError"16
personID
com.apple.cdp.escrowRecoverability.reporting
com.apple.cdp.escrowRecovery.reporting
recovery key...
local secret...
DisableAsyncEnable
com.apple.cdp.async-enable-post-recovery
com.apple.cdp.async-enable
CoreCDP-user-elected
root
com.apple.CoreCDP.LocalSecret
LocalSecretResult
didChangeLocalSecret
didRemoveLocalSecret
com.apple.CoreCDP.adp.userChoice
userChoice
https://setup.icloud.com/configurations/init?context=settings
urls
getRecoverySettings
escrowProxyUrl
iCloudEnv
com.apple.Dataclass.KeychainSync
com.apple.mobileme
CDPSecureBackupURLSession
en-us
Accept-Language
application/xml
Accept
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
<CDPDSecureBackupContext: local: %@ remote: %@ preRecord: %@>
REMOTE_SECRET_ENTRY_RECOVERY_ERROR_TITLE
GENERIC_ERROR_ICLOUD_CONNECTION_MESSAGE
com.apple.CoreCDP.EscrowRepair
context
wasSilentEscrowRecordRepairAttempted
didSilentEscrowRecordRepairSucceed
deviceEscrowRecordState
escrowRecordFetchSource
v24@?0@"NSData"8@"NSError"16
com.apple.cdpd._startListeningWithProxy
v32@?0@"NSData"8^@16^@24
v24@?0@"AKCircleRequestPayload"8@"NSError"16
com.apple.appleaccount.adp.row.show
com.apple.appleaccount.adp.row.tap
com.apple.appleaccount.adp.detail.action
accountCountryCode
accountCleanupState
cdpState
isPrimary
isRepairSuccessful
repairErrorCode
deviceRegionCode
fetchUserInfoErrorCode
8olRm6C1xqr7AJGpLRnpSw
HV7WDiidgMf7lwAu++Lk5w
CDPDNetworkObserver Event Queue
v32@?0@8@16^B24
com.apple.CoreCDP.BackupRecovery
backupRecoveryResult
backupRecoveryThroughRemoteSecretDidSucceed
backupRecoveryThroughRemoteSecretDidSucceedWithoutLocalSecret
backupRecoveryThroughRemoteSecretDidCancel
backupRecoveryThroughRemoteSecretDidReset
backupRecoveryThroughRemoteSecretDidFail
joinMethod
attemptedMethods
availableMethods
escrowDeviceCount
callingProcessBundleID
CDPDTermsInfoBackupController
CDPDCircleStateObserver
CDPDXPCEventListener
NSObject
CDPDAccountRecoveryValidator
CDPRecoveryKeyValidatorInternal
CDPDRecoveryFlowController
CDPDDeviceSecretValidatorDelegate
CDPKeychainItemDescriptor
CDPCAICSCRecoverabiltyReporter
CDPDXPCListener
NSXPCListenerDelegate
CDPBroadcaster
CDPDRemoteSecretValidationResult
CDPDBackupIDMSResultsParser
CDPDBackupRecoveryResultsParser
Daemon
CDPDRecoveryValidatedJoinFlowController
CDPDRemoteDeviceSecretValidatorDelegate
CDPPiggybackingPayloadProvider
CDPKeychainCircleProxy
CDPDPCSController
CDPAuthenticationHelper
CDPDSecureBackupProxyImpl
CDPDSecureBackupProxy
CDPRecoveryKeyCache
CDPCAEscrowReporter
CDPDOctagonTrustProxyImpl
CDPDOctagonTrustProxy
CDPCAEscrowRecoveryInfo
CDPDAuthProxyImpl
CDPDAuthProviderInternal
CDPDLocalDeviceSecretProxyImpl
CDPLocalDeviceSecretProxy
CDPDRecoveryOption
Authentication
SecureBackup
CDPDCircleJoinResult
CDPCAReporter
CDPTTSUChannel
CDPSecureChannelProxy
CDPSecureChannelApprovingProxy
CDPCAICSCRecoveryReporter
CDPDRemoteDeviceSecretValidator
CDPWalrusDaemonService
CDPDBackupInfoRecoveryFlowController
Metadata
CDPDEscrowRecordController
CDPDCircleDelegate
CDPDSecureBackupDelegate
Encryption
CDPCAWalrusReporter
CDPWalrusSecurityProxyImpl
CDPWalrusSecurityProxy
CDPDCircleController
CDPCAADPOnAppearReporter
CDPDLocalSecretController
CDPDAuthObserver
CDPDRecoveryKeyController
CDPDRecoveryKeyValidatorInternalDelegate
CDPDDeviceSecretValidator
CDPRemoteDeviceSecretValidatorProtocolInternal
CDPDataPrivacyAppleAccountProxy
CDPAppleAccountProxy
CDPDRecoveryKeyValidatorImpl
CDPDSecureBackupController
CDPDAccount
CDPDFollowUpFactory
CDPDXPCEventObserver
CDPDBackupFMIPResultsParser
CDPDBackupIDMSErrorProvider
CDPDFollowUpController
CDPDAuthListener
CDPInternalDataPrivacyController
CDPDClientHandler
CDPDaemonProtocol
CDPInternalWalrusStateController
CDPDStateMachine
CDPCACommonRecoveryReporter
CDPStateHandlerResult
CDPCAADPOnRowSelectReporter
Archive
CDPDSecureChannelContext
CDPCALocalSecretReporter
CDPCAWalrusUserChoiceReporter
CDPDSecureBackupConfiguration
CDPDLockAssertion
CDPDKeychainSync
CDPDSecureBackupContext
CDPCAADPDetailActionReporter
CDPDBackupErrorProviderImpl
CDPDBackupRecoveryErrorProvider
CDPCAEscrowRepairReporter
CDPDSecureChannelController
CDPDLocalSecretFollowUpProviderImpl
CDPLocalSecretFollowUpProvider
CDPPiggybackingChannel
CDPMobileGestaltWrapper
CDPDeviceCapabilityProvider
CDPDNetworkObserverClient
CDPDNetworkObserver
CDPCABackupRecoveryReporter
CDPTTSUPayloadProvider
T@"CDPContext",&,N,V_cdpContext
AESGCM256DecryptedDataWithSymmetricKey:
TB,V_requiresEscrowRecordsFetch
CDPRecordContextToDictionary:
_clique
T@"<CDPAppleAccountProxy>",&,N,V_appleAccountInterface
_device
T@"<CDPDAuthProviderInternal>",&,N,V_authKitInterface
_escrowProxyURL
T@"<CDPDBackupRecoveryErrorProvider>",&,N,V_errorProvider
_failedAttempts
T@"<CDPDCircleProxy>",&,N,V_circleProxy
_handleDelegateValidationError:
T@"<CDPDDeviceSecretValidatorDelegate>",W,N,V_delegate
_populateWalrusStatusOnContext:
T@"<CDPDOctagonTrustProxy>",&,N,V_octagonTrustProxy
_processAuthFailure:completion:
T@"<CDPDOctagonTrustProxy>",R,N,V_octagonTrustProxy
_recoverySecret
T@"<CDPDSecureBackupProxy>",&,N,V_sbProxy
_retryIntervals
T@"<CDPDSecureBackupProxy>",&,N,V_securityInterface
_shouldContinueAfterRecoveryOptionsCheckWithContext:completion:
T@"<CDPKeychainCircleProxy>",&,N,V_keychainCircleProxy
_supportsFaceID
T@"<CDPProtectedCloudStorageProxy>",&,N,V_pcsProxy
accountInfoFetchSetupDictionary
T@"<CDPSecureChannelProxy>",&,N,V_secureChannelProxy
allKeys
T@"<CDPStateUIProviderInternal>",R,N,V_uiProvider
appleID
T@"AAFKeychainManager",R,N,V_keychainManager
clearFollowUpWithContext:error:
T@"CDPContext",&,N,V_context
containsObject:
T@"CDPDCircleController",&,N,V_circleController
contextForConfirmExistingSecret
T@"CDPDCircleJoinResult",&,N,V_circleJoinResult
dataWithLength:
T@"CDPDSecureBackupConfiguration",&,N,V_configuration
dealloc
T@"CDPDSecureBackupController",R,N,V_secureBackupController
deviceViability
T@"CDPInternalWalrusStateController",&,N,V_walrusStateController
enableWithInfo:completionBlock:
T@"CDPRecoveryFlowContext",&,N,V_recoveryContext
globalHardLimitErrorWithRecord:
T@"NSArray",&,N,V_recoveryRecords
hasRecordStatus
T@"NSDictionary",C,N,V_recoveredInfo
initWithSecureBackupRecordInfo:
T@"NSError",&,V_error
isCoolDownError
T@"NSString",&,N,V_preRecordUUID
isEligibleForCDPWithCompletion:
T@"NSString",C,N,V_localizedRecoveryOption
isProxy
T@"NSString",C,N,V_recoverySecret
keychainManager
T@"NSString",R,C
localizedString
T@"NSXPCListener",&,N,V_listener
needInitialSync
T@?,C,N,V_recoveryHandler
options
T@?,C,V_eventHandler
payload
TB,N,V_attemptedCDPEnable
recordViability
TB,N,V_didSilentEscrowRecordRepairSucceed
recoveredClique
TB,N,V_isSimulateNonViableEscrowRecordEnabled
recoveryHandler
TB,N,V_nonViableRequiresRepair
release
TB,N,V_recoveryKeyVerified
saveTermsAcceptance:completion:
TB,N,V_simulateEPThrottle
TB,N,V_usePreviouslyCachedRecoveryKey
setApproveriCloudKeychainState:
TB,N,V_userDidCancel
setCircleProxy:
TB,N,V_wasSilentEscrowRecordRepairAttempted
setDeviceCount:
TB,V_didJoin
setRecoveryKey:
TB,V_hasPeersWithCDPBackupRecords
setUrl:
TB,V_requiresInitialSync
setWithObjects:
TQ,N
stopObservingCircleStatusChange
TQ,N,V_deviceEscrowRecordState
validatedSecret
TQ,N,V_secretType
.cxx_destruct
TB,V_cloudDataProtectionEnabled
AESGCM256EncryptedDataWithSymmetricKey:
_allowFollowUps
T#,R
_clock_timebase
T@"<CDPAuthProviderInternal>",&,N,V_recoveryAuthProvider
_entryLimitSignInBodyForDevice:
T@"<CDPDAuthProviderInternal>",&,N,V_internalAuthProvider
_eventListeners
T@"<CDPDBackupRecoveryResultsParser>",&,N,V_resultParser
_fetchConfigurationWithRequest:
T@"<CDPDCircleProxy>",R,N,V_circleProxy
_pairingChannel
T@"<CDPDOctagonTrustProxy>",&,N,V_octagonProxy
_predicateForRecordUpgradeCheck
T@"<CDPDOctagonTrustProxy>",&,N,V_otProxy
_recoveryErrors
T@"<CDPDSecureBackupDelegate>",W,N,V_delegate
_removeObserver
T@"<CDPDSecureBackupProxy>",&,N,V_secureBackupProxy
_sharingSession
T@"<CDPDSecureBackupProxy>",R,N,V_secureBackupProxy
_silentRecovery
T@"<CDPLocalSecretFollowUpProvider>",&,N,V_followUpProvider
_usePreviouslyCachedRecoveryKey
T@"<CDPRemoteDeviceSecretValidatorProtocol>",&,N,V_validator
addDeviceClass:
T@"<CDPStateUIProviderInternal>",&,N,V_uiProvider
altDSID
T@"AAFKeychainManager",&,N,V_keychainManager
backupRecoveryDidFailWithError:
T@"CDPContext",&,N
clientErrorCode
T@"CDPContext",R,N,V_context
context
T@"CDPDCircleController",R,N,V_circleController
contextForOfflinePasscodeChange
T@"CDPDPCSController",&,N,V_pcsController
dateFromString:
T@"CDPDSecureBackupController",&,N,V_secureBackupController
deleteLocalSecretChangeFollowUp
T@"CDPDevice",C,N,V_device
didJoin
T@"CDPLocalSecret",C,N,V_cachedSecretForReenrollment
enabled
T@"CUMessageSession",&,N,V_sharingSession
hasRandomSecret
T@"NSDictionary",&,N,V_cachedAccountInfo
informativeText
T@"NSError",&,N,V_error
initialMessage:
T@"NSObject<CDPDCircleDelegate>",W,N,V_delegate
isCurrentDevice
T@"NSString",C,N,V_localSecret
isInternalBuild
T@"NSString",C,N,V_recoveryKey
isWalrusEnabled
T@"NSString",C,N,V_validSecret
localSecretType
T@"NSString",R,C,N
machAbsoluteTimeToTimeInterval:
T@"OTClique",&,N,V_recoveredClique
numberWithBool:
T@?,C,N,V_validSecretHandler
otProxy
TB,N
pcsIdentitySetupWithInfo:error:
TB,N,V_didForceEscrowCache
recoverAndSynchronizeSquirrelWithContext:uiProvider:completion:
TB,N,V_fakeNearlyDepletedRecords
recoveryContext
TB,N,V_isUsingMultipleICSC
recoveryRecords
TB,N,V_octagonCapableRecordsExist
removeObserver:
TB,N,V_silentRecovery
sbProxy
TB,N,V_synchronous
setAccessGroup:
TB,N,V_usePreviouslyCachedSecret
setCachedSecretForReenrollment:
TB,N,V_userDidReset
setCountryCode:
TB,R,N
setLocalSecret:
TB,V_hasPeersForRemoteApproval
setSynchronous:
TB,V_needsBackupRecovery
setValidSecret:
TB,V_shouldCompleteSignIn
simplePublicKey
TQ,N,V_context
upgradeICSCRecordsThenEnableSecureBackupWithContext:completion:
TQ,N,V_localSecretType
version
TQ,N,V_walrusStatus
TQ,N,VsupportedEscapeOfferMask
TQ,R
TQ,R,N
TQ,V_circleStatus
TQ,V_peeriCloudKeychainState
TQ,V_remotePeeriCKState
TQ,V_walrusStatus
Tq,N,V_deviceCount
Tq,N,V_icscRepairRetryDelay
Tq,N,V_icscRepairTotalRetries
Tq,N,V_maxRecoveryAttempts
Tq,N,V_recoveryOptionIndex
Tq,N,V_totalRecoveryAttempts
URLWithString:
UTF8String
UUID
UUIDString
__eventNameForTesting
_accountInfo:
_accountResetRecoveryOptionWithCompletion:
_accountSettingsLock
_accountStore
_allowDataRecovery
_allowRecoveryKey
_allowStateMachineAccess
_allowUtilityAccess
_allowWalrusAccess
_allowWalrusPCSKeysAccess
_altDSID
_alwaysCreateEscrowRecord
_appleAccountInterface
_approverBackupRecordsExist
_approveriCloudKeychainState
_attemptBackupRecoveryByPromptingForRemoteSecretWithLocalSecret:localSecretType:useCachedSecret:circleJoinResult:completion:
_attemptBackupRecoveryWithLocalSecret:type:useCachedSecret:circleJoinResult:completion:
_attemptBeneficiaryTrustWithInheritanceKey:retryCount:completion:
_attemptCDPEnable:
_attemptCustodianBackupRecoveryWithInfo:result:ignoreBackups:completion:
_attemptToEscrowPreRecord:completion:
_attemptToRecoverDevice:withSecret:completion:
_attemptToRecoverWithRecoveryKey:completion:
_attemptedCDPEnable
_attemptedMethods
_authContextForContext:
_authContextFromCDPContext:
_authKitInterface
_authListeners
_authProvider
_authWithContext:completion:
_authenticatedEnableSecureBackupWithContext:completion:
_authenticatedRepairCloudDataProtectionStateWithCompletion:
_authenticatedShouldPerformRepairWithOptionForceFetch:completion:
_availableMethods
_backupController
_baseFollowUpItemWithContext:
_baseFollowUpNotificationWithContext:
_beginSilentEscrowRecordRepairWithState:completion:
_beneficiaryTrustQueue
_broadcastNotificationName:userInfo:
_buildSecureBackupTermsInfo:
_cachedAccountInfo
_cachedSecretForReenrollment
_cancelRecoveryOptionWithCompletion:
_cdpAccount
_cdpContext
_cdpDaemonAccount
_cdpErrorFromAuthKitError:
_cdpStateMachine
_checkAllRecordsForCurrentDeviceUsingCache:completion:
_checkAllRecordsForDeviceMatchingPredicate:source:completion:
_checkiCDPStatusNetwork:withCompletion:
_circleChangeToken
_circleController
_circleJoinObserver
_circleJoinResult
_circleObservers
_circleProxy
_circleStatus
_clearLastEscrowRepairAttemptDate:
_clientMetadataWithSecretType:length:
_clientType
_clientTypeForBundleID:
_clientTypeForConnection:
_clientsByUUID
_clientsLock
_cliqueStatusRetryCount
_cloudDataProtectionEnabled
_collectLocalSecretWithCompletion:
_combinedCircleStatusUsingCache:error:
_complete
_configuration
_configurationInfoURLRequest
_configurationRequestWithURLString:
_configurationURLs
_configureConfirmExistingSecretFollowUpItem:
_configureRepairFollowUpItem:
_configureWalrusConfirmExistingSecretFollowUpItem:
_configureWalrusRepairFollowUpItem:
_confirmCDPEligibilityWithCompletion:
_confirmExistingSecretFollowUpAction
_connection
_connection:hasEntitlement:
_context
_contextForPrimaryAccount
_contextForPrimaryAccountSilentAuth
_contextSetupDictionary
_continueSilentEscrowRecordRepairWithState:completion:
_createContextForSecret:withCompletion:
_createPasscodeDismissNoteFollowUpAction
_createPasscodeFollowUpAction
_createPasscodeNoteFollowUpAction
_currentAnisetteData
_currentDevice
_dateWithSecureBackupDateString:
_decoratedDelegate
_defaultUserVisibleViewSet
_delegate
_deleteAllBackupRecordsWithCompletion:
_deleteSingleICSCBackupWithCompletion:
_depletedRemainingAttempts
_determineEligibilityForSilentRepairWithCompletion:
_deviceCapabilityProvider
_deviceCheckForDataPrivacyDidCompleteWithContext:devicesLosingAccountAccess:deviceListFetchError:finalCompletion:
_deviceCount
_deviceEscrowRecordState
_deviceEscrowRecordStateUsingCache:completion:
_didEnableDataPrivacyOnAuthKitWithContext:enableError:finalCompletion:
_didEnableDataPrivacyOnSecurityWithContext:enableError:finalCompletion:
_didFinishCheckingForRecoveryOptionsWithContext:completion:
_didForceEscrowCache
_didJoin
_didSilentEscrowRecordRepairSucceed
_disableAsyncModeRequested
_disableAsyncSecureBackupEnrollment
_disableRecoveryKey:
_disableRecoveryKeyWithCompletion:
_disableSecureBackup:
_disableThenEnableWithInfo:error:
_eligibleAccountWithContext:checkWithServer:requireCKAccount:error:
_eligiblePrimaryAccountForFlow:error:
_enableCDPWithCompletion:
_enableCustodianRecoveryIfAvailableForContext:
_enableKVSForAccount:store:completion:
_enableSecureBackupWithCircleJoinResult:completion:
_enableSecureBackupWithContext:completion:
_enrollOrDisableCDPAfterEnabledStateVerified:
_entitlements
_entryLimitNoResetForRepairForDevice:
_entryLimitRecoveryKeyAvailableBodyForDevice:
_entryLimitResetAvailableBodyForDevice:
_entryLimitTitleForDevice:
_error
_errorProvider
_escapeOfferForDevices:
_escapeOfferForDevices:remoteApproval:forMultipleICSC:
_escrowConfigurationBag
_escrowConfigurationBagFull
_escrowConfigurationURLs
_escrowDeviceCount
_escrowProxyConfigurationURL
_escrowProxyConfigurationURLRequest
_escrowRecordStateForDevice:usingCache:completion:
_eventHandler
_eventName
_eventQueue
_failedRecoveryKeys
_failedSecrets
_failedSecretsForDevice:
_failedSingleICSCs
_fakeNearlyDepletedRecords
_fallbackRecoveryOptionWithCompletion:
_fetchAllEscrowRecordsFromSource:completion:
_fetchConfigurationDictionary
_fetchEscrowConfigurationBag
_fetchKeyForPCSIdentityRef:
_followUpActionForRecoveryKeyRepair
_followUpActionForRepair
_followUpController
_followUpControllerForContext:
_followUpFactory
_followUpForConfirmExistingSecretWithContext:
_followUpForOfflineSecretChangeWithContext:
_followUpForRecoveryKeyRepairWithContext:
_followUpForRepairWithContext:
_followUpForSecureTermsWithContext:
_followUpForSettingUpBiometricsWithContext:
_followUpItemForWalrusCreatePasscodeWithContext:
_followUpProvider
_forceReset
_getBackupRecordDevicesIncludingUnrecoverableRecords:
_getOctagonEscrowBackupRecordDevicesWithOptionForceFetch:completion:
_getOrSetupIdentitySetRef:
_handleBeneficiaryTrustWithCompletion:
_handleCloudDataProtectionStateWithCompletion:
_handleCompletionStatus:preRecord:
_handleHardLimitErrorForCurrentContextWithDevice:completion:
_handleInteractiveRecoveryFlowWithCircleJoinResult:completion:
_handleJoinResult:completion:
_handleLimit:forDevice:completion:
_handleMultiCSCRecoveryFailureForDevice:recoveryError:secret:
_handleMultiCSCRecoveryResults:clique:type:secret:device:completion:
_handlePreflightError:completion:
_handleRecoveryFailureForFinalDevice:completion:
_handleSoftLimitErrorForCurrentContextWithDevice:completion:
_handleiCDPStatusCheckError:completion:
_hardLimitErrorBodyWithDevice:
_hardLimitUserInfoForDevice:
_hasPeersForRemoteApproval
_hasPeersWithCDPBackupRecords
_iCloudEnvironment
_icscRepairRetryDelay
_icscRepairTotalRetries
_infoDictionaryWithTitle:andBody:
_inheritanceTrustController
_initTime
_internalAuthProvider
_isAttemptingRecovery
_isBiometricAuthEnrolled
_isBiometricCapable
_isEligibleForEscrowRecordOperationsWithError:
_isEscrowRecordRepairPermitted
_isFailedSecret:forDevice:
_isICDPEnabledForDSID:checkWithServerFirst:
_isICloudKeychainDisabledByManagementProfile
_isInvalidICSCError:
_isManateeAvailable
_isManateeAvailableForAltDSID:
_isObserving
_isSimulateNonViableEscrowRecordEnabled
_isThisDeviceInCircle
_isUsingMultipleICSC
_isWaitingForRemoteApproval
_isWalrusEnabled
_joinCircleFallbackWithResult:ignoreBackups:completion:
_joinCircleIgnoringBackups:completion:
_joinMethod
_keychainCircleProxy
_keychainManager
_lastEscrowRepairAttemptDate:
_lastEscrowRepairAttemptDateDescriptor
_listener
_localSecret
_localSecretChangedTo:secretType:completion:
_localSecretType
_localizedRecoveryOption
_localizedStringForKey:
_maxRecoveryAttempts
_needsBackupRecovery
_networkIsReachable
_networkReach
_networkReachabilityDidChangeWithFlags:
_nonViableRequiresRepair
_notificationName
_notificationObject
_octagonCapableRecordsExist
_octagonProxy
_octagonTrustProxy
_offlineSecretChangeFollowUpAction
_optionsWithContext:
_otProxy
_pcsController
_pcsProxy
_peerDeviceNamesByPeerID
_peeriCloudKeychainState
_performInteractivelyAuthenticatedRepair:
_performRecoveryWithContext:uiProvider:authProvider:errorProviuder:resultParser:secureBackUpController:completion:
_performSilentEscrowRecordRepairWithCompletion:
_performSilentlyAuthenticatedRepair:
_performSingleiCSCRecoveryWithSecret:type:completion:
_populateUserInfo:recoveryIndexHandlers:withRecoveryOption:
_postRecoveryEnableSecureBackupWithContext:completion:
_preRecordUUID
_predicateForRecordUpgradeCheckIgnoringBottled
_predicateForRecordWithPeerID:
_predicateForRepair
_preflightAccountStateWithContext:completion:
_preflightCircleStatusWithCompletion:
_prevailingSecret
_printableAccountInfo:
_processAndReplyWithMessage:completion:
_randomDataGeneratorWithNumberOfBytes:
_reauthenticateAndCheckiCDPStatusWithNetwork:completion:
_recoverBackupDictionaryWithContext:error:
_recoverSecureBackupWithCircleJoinResult:completion:
_recoveredClique
_recoveredInfo
_recoveryAuthProvider
_recoveryContext
_recoveryHandler
_recoveryInfoDictionaryFromContext:
_recoveryKey
_recoveryKeyVerified
_recoveryListFromDevices:
_recoveryOptionIndex
_recoveryRecords
_refreshAndAuthenticateWithContext:
_remotePeeriCKState
_repairWithStateMachine:completion:
_replyContextWithPakeData:
_reportCDPJoinMetricsWithContext:didJoin:withError:
_reportData
_reportEscrowRecoverabilityAnalytics
_reportEscrowRecoveryAnalyticsWithRecoveryState:resetState:didError:
_reporterWithContext:state:usingCache:error:
_requestCircleJoinWithObserver:requestBlock:completion:
_requestSynchronizationQueue
_requestToJoinAfterRestoreAndWaitForSuccessWithHandler:
_requestToJoinAndWaitForSuccessWithHandler:
_requestToJoinCompletion
_requestToJoinWithObserver:completion:
_requestToJoinWithRequestBlock:completion:
_requiresEscrowRecordsFetch
_requiresInitialSync
_resetAccountCDPStateWithCompletion:
_resetDataErrorForCurrentContextWithRecoveryIndexMap:
_resetProtectedDataErrorUnrecoverable
_resultParser
_retryQueue
_retryRepairWithContext:retryCount:completion:
_sanitizedInfoDictionary:
_sbProxy
_secretType
_secureBackupController
_secureBackupProxy
_secureChannelContext
_secureChannelProxy
_secureTermsFollowUpAction
_securityInterface
_securityProxy
_sentInitialResponse
_session
_setContextWithAuthResults:
_setKeychainSyncState:
_setLastEscrowRepairAttemptDate:error:
_setPassword:
_setProxiedAppBundleID:
_setProxiedAppName:
_setupConfigurationURLs
_setupDarwinListener
_setupDistributedListener
_shoudAllowKeyFetchForService:
_shouldAcceptNewConnectionWithEntitlements:
_shouldCompleteSignIn
_shouldContinueAfterPrimaryAccountCheckWithContext:completion:
_shouldPerformSilentEscrowRecordRepairUsingCache:completion:
_shouldPerformSilentRepairForEscrowRecordState:
_showAccountResetConfirmationWithCompletion:
_showAccountResetConfirmationWithoutRecovery:
_showEntryLimitError:withRecoveryOptionHandlers:defaultIndex:completion:
_silentReauthWithCompletion:
_simulateEPThrottle
_skipEscrowFetches
_skipSignInRecoveryOptionWithCompletion:
_softLimitErrorBodyForDevice:
_startListeningWithProxy:
_startObservingConnectionStateForRepairWithStateMachine:context:
_statusForError:
_supportsCustodianRecovery
_synchronous
_tlkRecoveryViewsForRecord:usingCache:completion:
_totalRecoveryAttempts
_uiProvider
_updateContext:withDevices:
_updateRecordRecoveryStatusForRecordDictionary:
_updateWalrusState:context:account:completion:
_usePreviouslyCachedSecret
_useSecureBackupCachedPassphrase
_userDidCancel
_userDidReset
_userInfoForLimit:withDevice:
_validSecret
_validSecretHandler
_validator
_walrusDaemonService
_walrusStateController
_walrusStatus
_walrusStatusForPrimaryAccountWithError:
_walrusStatusWithOptions:withError:
_wasSilentEscrowRecordRepairAttempted
aa_altDSID
aa_cloudKitAccount
aa_primaryAppleAccount
aaf_firstObjectPassingTest:
aaf_toBase64EncodedString
accountInfoWithCompletion:
accountInfoWithInfo:error:
accountProperties
accountPropertyForKey:
accountViability
activate
activityTypeString
addEntriesFromDictionary:
addNetworkObserverWithEventHandler:
addObject:
addObserverForName:object:queue:usingBlock:
addOrUpdateKeychainItem:error:
addSecretType:
altDSIDForPersonID:
analyticsReporter
anisetteDataWithCompletion:
anyPeerHasEnabledViewsInSet:error:
appleAccountForAltDSID:
appleAccountInterface
applyToJoinCircleWithJoinHandler:
approveFromAnotherDeviceWithCompletion:
approverBackupRecordsExist
approveriCloudKeychainState
archivedDataWithRootObject:requiringSecureCoding:error:
array
arrayWithCapacity:
arrayWithObjects:count:
attemptToEscrowPreRecord:completion:
attemptToEscrowPreRecord:context:completion:
attemptToEscrowPreRecord:preRecordUUID:secretType:context:completion:
attemptedCDPEnable
auditToken
augmentWithCredentialsFromContext:
authController
authKitAccountWithAltDSID:
authKitInterface
authToken
authenticateWithContext:completion:
authenticatedEnableSecureBackupWithRecoveryKey:error:
autorelease
backupActivity
backupRecordsArePresentWithCompletion:
backupRecoveryDidCancel
backupRecoveryDidReset
backupRecoveryDidSucceed
backupRecoveryDidSucceedWithoutLocalSecret
backupRecoverySetAttemptedMethod:
backupRecoverySetAvailableMethod:
backupRecoverySetJoinFromBundleID:
beginInteractiveRecoveryForDevices:isUsingMultipleICSC:usingValidator:
beginRecovery:
beginRecoveryWithCompletion:
beneficiaryIdentifier
boolValue
broadcastWalrusStateChange
broadcastWalrusStateChangeNotification
broadcastWebAccessStateChangeNotification
builderForKey:
builderForKey:inTable:
bundleID
bundleIdentifier
bundleWithURL:
bytes
cacheRecoveryKey:completionBlock:
cacheRecoveryKey:forAltDSID:error:
cacheRecoveryKeyWithCompletionBlock:
cachedAccountInfo
cachedCliqueStatus:
cachedLocalSecret
cachedLocalSecretType
cachedPassphraseMissing
cachedSecretForReenrollment
canEnableMultiUserManatee
canEvaluatePolicy:error:
canRetryCliqueStatus
canUpdateDataPrivacyStatusWithCompletion:
cancelApplicationToJoinCircle
cancelApproveFromAnotherDevice
cancelRemoteSecretValidatorApplicationToJoinCircle:
cancelValidationWithError:
cdpContext
cdpContext:beginRemoteApprovalWithValidator:completion:
cdpContext:performSilentRecoveryTokenRenewal:
cdpContext:persistMasterKeyVerifier:completion:
cdpContext:presentRecoveryKeyWithValidator:completion:
cdpContext:promptForAdoptionOfMultipleICSC:
cdpContext:promptForBeneficiaryAccessKeyWithCompletion:
cdpContext:promptForICSCWithIsNumeric:numericLength:isRandom:validator:
cdpContext:promptForInteractiveAuthenticationWithCompletion:
cdpContext:promptForLocalSecretWithCompletion:
cdpContext:promptForRecoveryKeyWithSecretValidator:completion:
cdpContext:promptForRecoveryKeyWithValidator:completion:
cdpContext:promptForRemoteSecretWithDevices:offeringRemoteApproval:validator:
cdpContext:showError:withCompletion:
cdpContext:showError:withDefaultIndex:withCompletion:
cdpContext:showResetCompletedAlertWithCompletion:
cdpContext:verifyMasterKey:completion:
cdpRecoveryFlowContext:promptForRemoteSecretWithDevices:validator:
cdp_addAuthHeaderWithContext:
cdp_addClientInfoHeader
cdp_errorWithCode:
cdp_errorWithCode:underlyingError:
cdp_errorWithCode:userInfo:
cdp_isCDPErrorWithCode:
cdp_isLoginHardLimit
cdp_isLoginSoftLimit
cdp_unarchivedRoot
checkAndRemoveExistingThenEnableSecureBackupRecordWithContext:completion:
checkForAnyOctagonRecord:
checkForExistingRecord:
checkForExistingRecordMatchingPredicate:forceFetch:completion:
checkForExistingRecordWithPeerId:completion:
checkIfAltDSIDIsBeneficiary:
checkiCDPStatusNetwork:withCompletion:
circleController
circleController:secureBackupRecordsArePresentWithCompletion:
circleJoinResult
circlePeerIDForSecureBackupController:
circleProxy
circleStatus
circleStatusChanged
circleViewStatusChanged
class
clearAccountInfoCache
clearFollowUpWithContext:completion:
clearPendingFollowUpItemsWithUniqueIdentifiers:error:
clientInfo
clientMetadata
cliqueConfiguration
cloudDataProtectionEnabled
code
combinedCachedCircleStatus:
combinedCircleStatus:
configuration
configurationWithContext:
configurationWithContext:andSession:
confirmRecoveryKey:completion:
conformsToProtocol:
contextForAccountWithAltDSID:
contextForController:
contextForPrimaryAccount
contextForStateRepair
contextForWalrusCreatePasscodeWithCDPContext:
contextToIdentifierMap
coolOffEnd
cooldownErrorWithUnderlyingError:
copy
count
countByEnumeratingWithState:objects:count:
countryCode
creationDate
currentConnection
currentDevice
custodianAvailableWithCompletion:
custodianEnabledForAccount:
custodianRecoveryInfo
dataPrivacyStatusWithCompletion:
dataTaskWithRequest:completionHandler:
dataUsingEncoding:
dataWithBytes:length:
date
dateByAddingTimeInterval:
dateWithTimeIntervalSince1970:
debugDescription
decodeObjectOfClasses:forKey:
defaultCenter
defaultSessionConfiguration
defaultStore
defaultWalrusStateController
delegate
deleteAllBackupRecordsWithCompletion:
deleteCache
deleteConfirmExistingSecretFollowUp
deleteCreatePasscodeFollowUp
deleteKeychainItemsForDescriptor:error:
deleteRecoveryKey:
deleteRecoveryKeyWithContext:uiProvider:completion:
deleteSingleICSCBackupWithCompletion:
description
desiresAllRecords
device
deviceClass
deviceColor
deviceCount
deviceEnclosureColor
deviceEscrowRecordRecoverableWithContext:completion:
deviceEscrowRecordState
deviceMid
deviceModel
deviceModelClass
deviceModelVersion
deviceName
devicePlatform
dictionary
dictionaryToCDPRecordContext:
dictionaryToEscrowAuthenticationInfo:
dictionaryToEscrowRecord:
dictionaryWithObjects:forKeys:count:
didAttemptEscrowPreRecord
didChangeLocalSecret
didChangeStatus:error:
didChangeUserChoice:error:
didForceEscrowCache
didJoinCircleAfterRecovery:
didRemoveLocalSecret
didSilentEscrowRecordRepairSucceed
disableDataPrivacyWithCompletion:
disableRecoveryKey:
disableRecoveryKeyWithCompletion:
disableSecureBackupWithCompletion:
disableWithCompletionBlock:
disableWithError:
disableWithInfo:completionBlock:
disableWithInfo:error:
dismissFollowUpWithIdentifier:completion:
domain
dsid
duplexSession
enableBackupWithRecoveryKey:completion:
enableCDPWithCompletion:
enableDataPrivacyWithContext:completion:
enableSecureBackupWithContext:completion:
enableSecureBackupWithRecoveryKey:completion:
enableWithCompletionBlock:
enableWithError:
enableWithInfo:error:
enabledDataclasses
endpoint
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
error
errorByExtendingUserInfoWithDictionary:
errorProvider
errorWithDomain:code:userInfo:
escrowAuthInfo
escrowInformationMetadata
escrowRecordToDictionary:
escrowURL
escrowedSpki
eventHandler
eventReceived:eventInfo:
eventReceived:eventValue:
exchangePacket:complete:error:
failedAttempts
fakeNearlyDepletedRecords
fetchAccountSettings:
fetchAllEscrowRecords:error:
fetchAllEscrowRecords:forceFetch:error:
fetchAllEscrowRecords:source:error:
fetchAllEscrowRecordsWithOptionForceFetch:completion:
fetchEscrowRecordDevicesWithContext:usingCache:completion:
fetchEscrowRecords:error:
fetchEscrowRecords:forceFetch:error:
fetchEscrowRecords:source:error:
fetchEscrowRecordsWithOptionForceFetch:completion:
fetchRecoveryKeyFromCacheForAltDSID:
fetchTermsAcceptanceForAccount:completion:
fetchUserControllableViewsSyncingEnabled:
fileURLWithPath:
filteredArrayUsingPredicate:
findMyiPhoneUUID
finishCyrusFlowAfterTermsAgreementWithContext:uiProvider:completion:
finishDecoding
finishOfflineLocalSecretChangeWithCompletion:
finishOfflineLocalSecretChangeWithContext:uiProvider:completion:
firstObject
followUpItemForIdentifier:userInfo:
followUpItemWithContext:
followUpProvider
followUpType
force
generateEscrowRecordStatusReportForContext:usingCache:withCompletion:
generateEscrowRecordStatusReportUsingCache:withCompletion:
generateEscrowRecordStatusReportUsingFetchSource:withCompletion:
generateNewRecoveryKey:
generateNewRecoveryKeyWithContext:uiProvider:completion:
generateRandomRecoveryKey:
generateRandomRecoveryKeyWithContext:completion:
generateRecoveryKey:
generateRecoveryKeyWithInfo:error:
generateVerifierWithRecoveryKey:error:
getAcceptedTermsForAltDSID:reply:
getAccountInfoWithError:
getBackupRecordDevicesWithOptionForceFetch:completion:
getDevicesLosingAccountAccessWithCompletion:
globalHardLimitError
guestMode
handleCDPDevices:
handleCloudDataProtectionStateWithCompletion:
handleCloudDataProtectionStateWithContext:uiProvider:completion:
handleHardLimitError:completion:
handleSoftLimitError:completion:
hardLimitErrorForRecord:
hasDisabledKeychainExplicitly
hasFullCDPSupport
hasLocalSecret
hasLocalSecretWithCompletion:
hasNonViewAwarePeers
hasNumericSecret
hasPeersForRemoteApproval
hasPeersWithCDPBackupRecords
hasRecordViability
hash
iCloudEnv
icloudVersion
icscRepairRetryDelay
icscRepairTotalRetries
identifier
identifierForContext:
idmsMasterKeyRecovery
idmsRecovery
init
initForReadingFromData:error:
initWithAccount:cdpdAccount:securityProxy:pcsProxy:
initWithAccount:cdpdAccount:securityProxy:pcsProxy:accountStore:
initWithAltDSID:
initWithAuthKitInterface:appleAccountInterface:securityInterface:
initWithAuthenticationResults:
initWithBytes:length:encoding:
initWithChannel:dataProvider:circleProxy:
initWithCircleProxy:
initWithClientIdentifier:
initWithConnection:entitlements:clientType:
initWithContext:
initWithContext:authProvider:octagonTrustProxy:
initWithContext:circleProxy:
initWithContext:circleProxy:octagonTrustProxy:secureBackupProxy:
initWithContext:connection:
initWithContext:delegate:
initWithContext:delegate:octagonTrustProxy:
initWithContext:pcsProxy:
initWithContext:secureBackupProxy:octagonTrustProxy:
initWithContext:uiProvider:
initWithContext:uiProvider:authProvider:
initWithContext:uiProvider:authProvider:circleProxy:secureBackupProxy:octagonTrustProxy:pcsProxy:
initWithContext:uiProvider:delegate:
initWithContext:uiProvider:secureBackupController:circleProxy:octagonProxy:
initWithContextData:
initWithData:encoding:
initWithDefaultValues
initWithDescriptor:value:
initWithEntitlements:
initWithEntitlements:walrusController:
initWithEscrowRecord:
initWithEscrowRecordMetadata:
initWithEvent:
initWithIdentifier:
initWithLongLong:
initWithMachServiceName:
initWithPreRecordIdentifier:
initWithSecureBackupMetadataInfo:
initWithTemplate:
initWithURL:
initWithUiProvider:delegate:circleProxy:octagonTrustProxy:
initWithUserActivityLabel:
initWithValidatedSecret:secretType:
initialize:
initiatingPayload:
integerValue
internalAuthProvider
isAttemptingRecovery
isAuthKitUnableToPromptDueToNetworkError
isAuthKitUnableToPromptError
isAuthenticationError
isBeneficiaryAccount
isBoolSettingLockedDownByRestrictions:
isCloudProtectionEnabledLocally:
isCompanionInKeychainCircle:
isComplete
isDone
isEqual:
isEqualToString:
isFederatedAccount
isHSA2Account
isHSA2Enabled:
isICDPEnabledForDSID:checkWithServer:
isICDPEnabledForDSID:checkWithServer:completion:
isICSCInvalidError
isICSCRecoveryHardLimitError
isKindOfClass:
isLoginHardLimit
isLoginSoftLimit
isManateeAvailable:
isMemberOfClass:
isOTEnabledForContext:
isOTEnabledForContext:completion:
isPasscodeSet
isPiggybackingRecovery
isPrimaryAppleIDLoggedIn
isRecoveryKeyAvailableWithCompletion:
isRecoveryKeyAvailableWithError:
isRecoveryKeySet:error:
isRecoveryPETHardLimitError
isRecoveryPETSoftLimitError
isSilentEscrowRecordRepairEnabled
isSilentEscrowRecordViabilityRepairEnabled
isSimulateNonViableEscrowRecordEnabled
isTTSURecovery
isUserVisibleKeychainSyncEnabled
isUserVisibleKeychainSyncEnabledWithCompletion:
isUsingMultipleICSC
isUsingMultipleiCSC
isWalrusEnabledWithOptions:error:
joinCircle:
joinCircleIgnoringBackups:completion:
joinCircleWithCompletion:
joinMethod
keyChainSync
keyChainSyncWithProxy:
keychainCircleProxy
keychainItemForDescriptor:error:
laterDate:
length
listenForPayloadsWithHandler:
listener
listener:shouldAcceptNewConnection:
localSecret
localSecretChangedTo:secretType:completion:
localSecretChangedTo:secretType:context:uiProvider:completion:
localeWithLocaleIdentifier:
localizedName
localizedRecoveryOption
lock
lockWithError:
longLongValue
machineID
marketingModel
matchKeychainViewState:
maxDeviceRecoveryAttempts
maxRecoveryAttempts
metadata
modelClass
modelVersion
mutableBytes
mutableCopy
name
needsBackupRecovery
nextRetryInterval
nonViableRequiresRepair
notification
numberWithDouble:
numberWithInt:
numberWithInteger:
numberWithLongLong:
numberWithUnsignedInteger:
numericSecretLength
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
observeChangeToState:circleProxy:handler:
observeCircleStateWithCircleProxy:changeHandler:
octagonCapableRecordsExist
octagonProxy
octagonTrustProxy
pairingChannelAcceptor
pairingChannelInitiator
password
passwordEquivToken
pcsController
pcsIdentityCreateWithInfo:error:
pcsIdentityMigrateToiCDPWithInfo:error:
pcsIdentitySetCompanionInCircle:error:
pcsIdentitySetIsInICDPLocal:error:
pcsIdentitySetIsInICDPNetwork:options:error:
pcsKeysForService:error:
pcsKeysForServices:completion:
pcsProxy
pcsRestoreLocalBackup:error:
pcsSynchronizeKeysWithInfo:error:
peerDeviceNamesByPeerID
peerID
peerId
peeriCloudKeychainState
performCircleRequestWithContext:completion:
performEscrowRecovery:cdpContext:escrowRecord:error:
performEscrowRecoveryWithContextData:escrowArguments:error:
performEscrowRecoveryWithData:error:
performEscrowRecoveryWithRecoveryContext:completion:
performEscrowRecoveryWithRecoveryContext:error:
performRecoveryWithContext:uiProvider:authProvider:completion:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performSilentEscrowRecordRepairWithCompletion:
performSilentEscrowRecordRepairWithContext:completion:
performSilentEscrowRecovery:cdpContext:allRecords:error:
performSilentEscrowRecoveryWithCDPContext:error:
persistMasterKeyVerifier:context:completion:
platformSupportsSOS
populateUnderlyingErrorsStartingWithRootError:maxDepth:
populateWithInfo:
postConfirmExistingSecretFollowUp
postFollowUpItem:error:
postFollowUpItemForContext:error:
postFollowUpWithContext:completion:
postLocalSecretChangeFollowUp
postNotificationName:object:
postRepairFollowUp
preRecordUUID
predicateWithBlock:
preflightContext:
prepareCircleStateForRecovery
prevailingLocalSecretType
primaryAccountAltDSID
primaryAccountDSID
primaryAccountIsBeneficiary
primaryAccountSecurityLevel
primaryAccountStashedPRK
primaryAccountUsername
primaryAppleAccount
primaryAuthKitAccount
processIdentifier
processIncomingPayload:error:
processMessage:error:
processName
promptForAdoptionOfMultipleICSCWithCompletion:
promptForCredentials:
promptForLocalSecretWithCompletion:
propertyListWithData:options:format:error:
proxyWithSession:error:
reason
reauthenticateUserWithCompletion:
record
recordDate
recordID
recordId
recordInfo
recordIsEmpty:
recordNotFoundErrorWithUnderlyingError:
recordStatus
recoverAndSynchronizeKeysWithCompletion:
recoverAndSynchronizeStateWithServer:
recoverDataUsingMasterKeyWithCompletion:
recoverKeysWithCompletion:
recoverOctagonUsingCustodianInfo:completion:
recoverOctagonWithContext:inheritanceKey:completion:
recoverSecureBackupWithContext:completion:
recoverSquirrelWithContext:uiProvider:completion:
recoverState:
recoverWithError:
recoverWithInfo:error:
recoverWithRecoveryKey:recoveryKey:error:
recoveredInfo
recoveryAuthProvider
recoveryKey
recoveryKeyAvailabilityWithCompletion:
recoveryKeyDescriptor
recoveryKeyDescriptorForAltDSID:
recoveryKeyVerified
recoveryOptionIndex
recoverySecret
recoveryStatus
recoveryValidatorWithDevices:forMultipleICSC:withCompletionHandler:
registerCredentials
registerListener:
registerRequestID:options:handler:
remainingAttempts
remotePeeriCKState
remoteSecretValidator:applyToJoinCircleWithJoinHandler:
remoteSecretValidator:attemptCustodianRecoveryWithInfo:completion:
removeAllObjects
removeNonViewAwarePeers:
removeNonViewAwarePeersFromCircleWithCompletion:
removeNonViewAwarePeersFromCircleWithContext:completion:
removeObject:
removeObjectForKey:
removeObserverWithToken:
removeRecoveryKey:error:
removeThisDeviceFromCircle:
renewCredentialsForAccount:completion:
repairCloudDataProtectionStateWithCompletion:
repairCloudDataProtectionStateWithContext:uiProvider:completion:
repairType
repairWalrusStatusWithCompletion:
repairWalrusWithAccountIdentifier:options:error:
repairWalrusWithCompletion:
replyPayload
reportEscrowRecoveryStatus:recoveryInfo:error:
reportPreRecoveryWithInfo:
representationForAltDSID:
requestToJoinCircle:
requestToJoinCircleAfterRestore:
requestToResetProtectedData:
requiresEscrowRecordsFetch
requiresInitialSync
requiresMoreViewData
resetAccountCDPState
resetAccountCDPStateAndSetSecret:
resetAccountCDPStateWithCompletion:
resetCircleIncludingCloudKitData:cloudKitResetReasonDescription:withCompletion:
respondsToSelector:
resultParser
resultWithCloudDataProtectionEnabled:shouldCompleteSignIn:error:
resultWithCloudDataProtectionEnabled:shouldCompleteSignIn:peeriCloudKeychainState:error:
resultWithError:
resultsDictionaryFromRecoveryResult:error:
resume
resumeContext
retain
retainCount
retrieveInflatedDevices:
saveAccount:withCompletionHandler:
saveTermsAcceptance:reply:
saveVerifiedAccount:error:
secretType
secretValidator:didFailRecovery:withError:completion:
secretValidator:didFailRecoveryWithErrors:completion:
secretValidator:recoverSecureBackupWithContext:completion:
secretValidator:shouldAcceptRecoveryError:
secretValidator:shouldContinueValidationAfterError:
secretValidatorWillAttemptRecovery
secureBackupContext
secureBackupContextWithInfo:
secureBackupController
secureBackupMetadataTimestamp
secureBackupNumericPassphraseLength
secureBackupProxy
secureBackupTimestamp
secureBackupUsesMultipleIcscs
secureBackupUsesNumericPassphrase
secureChannelContextForController:
secureChannelProxy
securityInterface
securityLevelChanged:forAltDSID:
self
sendPayload:completion:
sendReport
sendRequestID:options:request:responseHandler:
serialNumber
serverFriendlyDescription
sessionWithCircleDelegate:session:error:
sessionWithConfiguration:
setAccount:
setAccountIdentifier:
setAccountProperty:forKey:
setAccountSetting:error:
setActions:
setActivateAction:
setAltDSID:
setAppleAccountInterface:
setAppleID:
setApproverBackupRecordsExist:
setAttemptedCDPEnable:
setAuthKitInterface:
setAuthenticationType:
setBackupActivity:
setByAddingObjectsFromArray:
setCachedAccountInfo:
setCachedLocalSecret:
setCachedLocalSecretType:
setCachedPassphraseMissing:
setCdpContext:
setCircleController:
setCircleJoinResult:
setCircleStatus:
setClientInfo:
setCloudDataProtectionEnabled:
setConfiguration:
setContext:
setCoolOffPeriod:
setDSID:
setDataPrivacyEnabled:completion:
setDataPrivacyStatusEnabled:completion:
setDateFormat:
setDelegate:
setDevice:
setDeviceEscrowRecordState:
setDevicesThatLoseAccountAccessOnEnable:
setDidForceEscrowCache:
setDidJoin:
setDidSilentEscrowRecordRepairSucceed:
setDisplayStyle:
setDsid:
setEnabled:
setEnabled:forDataclass:
setEndpoint:
setError:
setErrorProvider:
setEscrowAuth:
setEscrowDeviceCount:
setEscrowFetchSource:
setEventHandler:
setExportedInterface:
setExportedObject:
setExtensionIdentifier:
setFakeNearlyDepletedRecords:
setFirstNotificationDelay:
setFollowUpProvider:
setFrequency:
setGroupIdentifier:
setHasDisabledKeychainExplicitly:
setHasPeersForRemoteApproval:
setHasPeersWithCDPBackupRecords:
setHasRandomSecret:
setIcloudVersion:
setIcscRepairRetryDelay:
setIcscRepairTotalRetries:
setIdentifier:
setInformativeText:
setInternalAuthProvider:
setInvalidationHandler:
setInvisible:
setIsSimulateNonViableEscrowRecordEnabled:
setIsUsernameEditable:
setIsUsingMultipleICSC:
setIsWalrusEnabled:
setItemAccessible:
setItemClass:
setKeychainCircleProxy:
setKeychainManager:
setLabel:
setListener:
setLocalSecretType:
setLocale:
setLocalizedName:
setLocalizedRecoveryOption:
setMaxDeviceRecoveryAttempts:
setMaxRecoveryAttempts:
setMetadata:
setNeedsBackupRecovery:
setNonViableRequiresRepair:
setNotification:
setObject:forKey:
setObject:forKeyedSubscript:
setOctagonCapableRecordsExist:
setOctagonProxy:
setOctagonTrustProxy:
setOptions:
setOtProxy:
setPassword:
setPasswordEquivToken:
setPayload:
setPcsController:
setPcsProxy:
setPeeriCloudKeychainState:
setPreRecordUUID:
setPrevailingSecret:
setRecordDate:
setRecoveredClique:
setRecoveredInfo:
setRecoveryAuthProvider:
setRecoveryContext:
setRecoveryHandler:
setRecoveryKeyVerified:
setRecoveryOptionIndex:
setRecoveryRecords:
setRecoverySecret:
setRecoveryStatus:
setRemainingAttempts:
setRemotePeeriCKState:
setRepairType:
setRequiresEscrowRecordsFetch:
setRequiresInitialSync:
setResultParser:
setRpdProbationDuration:
setSbProxy:
setSecretType:
setSecureBackupController:
setSecureBackupProxy:
setSecureChannelProxy:
setSecurityInterface:
setService:
setSharingSession:
setShouldCompleteSignIn:
setSilentRecovery:
setSimulateEPThrottle:
setSupportedEscapeOfferMask:
setSupportsSkipSignIn:
setSynchronizable:
setSysBound:
setTargetBundleIdentifier:
setTimeZone:
setTitle:
setTotalRecoveryAttempts:
setType:
setUiProvider:
setUniqueIdentifier:
setUseDataProtection:
setUsePreviouslyCachedRecoveryKey:
setUsePreviouslyCachedSecret:
setUserControllableViewsSyncStatus:error:
setUserDidCancel:
setUserDidReset:
setUserInfo:
setUserVisibleKeychainSyncEnabled:withCompletion:
setUsername:
setValidEscrowDeviceCount:
setValidSecretHandler:
setValidator:
setValue:forHTTPHeaderField:
setVersion:
setWalrusEnabled:accountIdentifier:options:error:
setWalrusStateController:
setWalrusStatus:
setWalrusStatusEnabled:completion:
setWasSilentEscrowRecordRepairAttempted:
setWebAccess:
setWebAccessStatusEnabled:completion:
setWithArray:
set_alwaysCreateEscrowRecord:
set_appleIDContext:
set_authProvider:
set_supportsCustodianRecovery:
set_useSecureBackupCachedPassphrase:
setupDictionaryWithContext:
sharedConnection
sharedInstance
sharedObserver
sharingChannel
sharingSession
shouldAllowCDPEnrollment
shouldCompleteSignIn
shouldNotify
shouldPerformRepairForContext:forceFetch:completion:
shouldPerformRepairWithOptionForceFetch:completion:
shouldPerformSilentEscrowRecordRepairUsingCache:completion:
shouldPerformSilentEscrowRecordRepairWithContext:usingCache:completion:
silentAuthenticationForContext:withCompletion:
silentAuthenticationForPrimaryAccountWithClientAppName:clientAppBundleId:withCompletion:
silentAuthenticationForPrimaryAccountWithCompletion:
silentRecovery
simulateEPThrottle
sortedArrayUsingComparator:
sosViability
start
startCircleApplicationApprovalServerWithContext:completion:
startObservingNetwork
startSilentEscrowRecordRepairWithContext:completion:
statusCode
statusForDataPrivacyWithCompletion:
statusToSet
stringByAppendingString:
stringValue
stringWithFormat:
stringWithUTF8String:
stringWithValidatedFormat:validFormatSpecifiers:error:
successResult
superclass
supportedEscapeOfferMask
supportedEscapeOfferMaskCompletion:
supportsErrorPresentation
supportsInteractiveAuth
supportsMesa
supportsPearl
supportsRecoveryKeyWithError:
supportsSecureBackupRecovery
synchronizeCircleViews
synchronizeCircleViewsForSecureBackupContext:
synchronizeKeyValueStoreWithCompletion:
synchronizeKeychainViewSetWithOtherPeers:
synchronous
timeIntervalSinceNow
timeZoneForSecondsFromGMT:
tlkRecoverabilityForEscrow:record:error:
tlkRecoverabilityForEscrow:record:source:error:
tlkRecoverabilityForEscrowRecord:error:
tlkRecoveryViability
totalRecoveryAttempts
tryRegisteringCredentials
type
uiProvider
unarchivedObjectOfClass:fromData:error:
uncacheAllSecrets
uncachePassphrase
unlock
unlockScreenType
unlockScreenTypeWithOutSimplePasscodeType:
unsignedIntegerValue
updateDataPrivacyWithContext:completion:
updateLastSilentEscrowRecordRepairAttemptDate:context:completion:
updateLastSilentEscrowRecordRepairAttemptDate:error:
updateWalrusStatus:completion:
updateWebAccessStatus:completion:
updateWithAuthenticationResults:
updatedReportWithRecord:isDeviceRecord:
updatedReportWithViews:forDeviceRecord:
useCircleInfoToUpdateNameForDevices:
usePreviouslyCachedRecoveryKey
usePreviouslyCachedSecret
userAcceptedDevicesToLoseAccountAccess
userDidCancel
userDidReset
userInfo
validEscrowDeviceCount
validSecret
validSecretHandler
validateCustodianRecoveryInfo:withCompletion:
validateRecoveryKey:withCompletion:
validateSecret:devices:type:withCompletion:
validator
value
valueForEntitlement:
verficationFailedErrorwithUnderlyingError:
verifyRecoveryKey:
verifyRecoveryKeyWithContext:uiProvider:completion:
waitForUpdate
walrusStateController
walrusStatus
walrusStatusWithContext:completion:
walrusStatusWithContext:error:
wasSilentEscrowRecordRepairAttempted
webAccess
webAccessStatusWithCompletion:
zone
v32@0:8@16@?24
@24@0:8@16
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8r*16Q24
v32@0:8r*16@24
v32@0:8r*16@"NSDictionary"24
v16@0:8
r*16@0:8
v40@0:8Q16@24@?32
v24@0:8@16
@"NSObject<OS_dispatch_queue>"
@"NSMutableArray"
v24@0:8@?16
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v24@0:8@?<v@?@"NSString"@"NSError">16
@40@0:8@16@24@32
@"<CDPAuthProviderInternal>"
@"CDPContext"
@"<CDPDOctagonTrustProxy>"
@"NSDictionary"
@"NSString"
v40@0:8@16@24@?32
B32@0:8@16@24
B32@0:8@16^@24
v48@0:8@16@24@32@?40
v40@0:8@"CDPDDeviceSecretValidator"16@"CDPDSecureBackupContext"24@?<v@?@"CDPDRemoteSecretValidationResult"@"NSError">32
B32@0:8@"CDPDDeviceSecretValidator"16@"NSError"24
B32@0:8@"CDPDDeviceSecretValidator"16^@24
v40@0:8@"CDPDDeviceSecretValidator"16@"NSDictionary"24@?<v@?B@"NSError">32
v48@0:8@"CDPDDeviceSecretValidator"16@"CDPDevice"24@"NSError"32@?<v@?B@"NSError">40
@56@0:8@16@24@32@40@48
@36@0:8@16B24@?28
Q24@0:8@16
v36@0:8@16B24@28
@"<CDPRemoteDeviceSecretValidatorProtocol>"
@"CDPRecoveryFlowContext"
@"CDPDCircleController"
@"CDPDSecureBackupController"
@"<CDPStateUIProviderInternal>"
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
B24@0:8Q16
@"NSXPCListener"
v32@0:8@16@24
v24@0:8Q16
v20@0:8B16
@"CDPDevice"
@"CDPLocalSecret"
@"OTClique"
@32@0:8@16^@24
@"NSDictionary"32@0:8@"CDPDRemoteSecretValidationResult"16^@24
v32@0:8@"CDPDRemoteDeviceSecretValidator"16@?<v@?B@"NSError">24
v24@0:8@"CDPDRemoteDeviceSecretValidator"16
v40@0:8@"CDPDRemoteDeviceSecretValidator"16@"CDPCustodianRecoveryInfo"24@?<v@?B@"NSError">32
Q32@0:8@16B24B28
v40@0:8@16@24@32
@32@0:8Q16@24
@24@0:8@?16
v48@0:8@16@24q32@?40
@32@0:8@16@24
@24@0:8^@16
@"NSData"24@0:8^@16
@"NSData"32@0:8@"NSData"16^@24
@"KCJoiningRequestCircleSession"
@"KCJoiningRequestAccountCircleDelegate"
v28@0:8B16@?20
B24@0:8^@16
^{_PCSIdentitySetData=}24@0:8^@16
@24@0:8^{_PCSIdentityData=}16
@"<CDPProtectedCloudStorageProxy>"
@24@0:8@"CDPContext"16
@"NSDictionary"32@0:8@"NSDictionary"16^@24
B32@0:8@"NSDictionary"16^@24
v32@0:8@"NSDictionary"16@?<v@?@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSError">24
v24@0:8@?<v@?B@"NSError">16
v28@0:8B16@?<v@?@"NSError">20
v24@0:8@?<v@?Q@"NSError">16
@"CDPContext"16@0:8
v24@0:8@"CDPContext"16
B40@0:8@16@24^@32
@"AAFKeychainManager"
@36@0:8@16B24^@28
@40@0:8@16q24^@32
@40@0:8@16@24^@32
@48@0:8@16@24q32^@40
@"NSArray"36@0:8@"NSDictionary"16B24^@28
@"NSArray"40@0:8@"NSDictionary"16q24^@32
@"NSArray"40@0:8@"NSDictionary"16@"OTEscrowRecord"24^@32
@"NSArray"48@0:8@"NSDictionary"16@"OTEscrowRecord"24q32^@40
B32@0:8@"OTConfigurationContext"16^@24
B40@0:8@"NSString"16@"NSString"24^@32
q16@0:8
v24@0:8q16
v40@0:8@"CDPContext"16@"NSDictionary"24@?<v@?B@"NSError">32
v24@0:8@?<v@?@"NSArray"@"NSError">16
@?16@0:8
v28@0:8@16I24
d24@0:8Q16
@"NSMutableDictionary"
{mach_timebase_info="numer"I"denom"I}
v32@0:8@"NSData"16@?<v@?@"NSData"@"NSError">24
v24@0:8@?<v@?@"NSData"^@^@>16
@"CUMessageSession"
v40@0:8Q16@24@32
@24@0:8Q16
Vv32@0:8@16@?24
Vv24@0:8@?16
Vv32@0:8Q16@?24
@"CDPInternalWalrusStateController"
@"<CDPDBackupRecoveryResultsParser>"
@"<CDPDBackupRecoveryErrorProvider>"
@"NSArray"
v32@0:8@"CDPDCircleController"16@?<v@?BB@"NSError">24
@"CDPContext"24@0:8@"CDPDCircleController"16
@"CDPDSecureChannelContext"24@0:8@"CDPDCircleController"16
@"NSString"24@0:8@"CDPDSecureBackupController"16
B24@0:8@"CDPDSecureBackupContext"16
v24@0:8@?<v@?@"CDPLocalSecret"@"NSError">16
@48@0:8@16@24@32@40
v32@0:8q16@?24
v36@0:8@16B24@?28
v32@0:8Q16@?24
v40@0:8@16q24@?32
@44@0:8Q16Q24B32@36
Q28@0:8B16^@20
@"<CDPDCircleProxy>"
@"<CDPDSecureBackupProxy>"
v32@0:8Q16@24
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
v44@0:8@16@24B32@?36
v36@0:8B16@20@?28
v32@0:8@?16@?24
v40@0:8@16@?24@?32
@"CDPDCircleStateObserver"
@"NSObject<CDPDCircleDelegate>"
v40@0:8@16Q24@?32
v24@0:8B16B20
@"<CDPLocalSecretFollowUpProvider>"
@"NSString"32@0:8@"NSDictionary"16^@24
@72@0:8@16@24@32@40@48@56@64
@"CDPDPCSController"
@"<CDPDAuthProviderInternal>"
v48@0:8@16@24Q32@?40
v48@0:8@"NSString"16@"NSArray"24Q32@?<v@?BB@"NSError">40
v32@0:8@"NSString"16@?<v@?BB@"NSError">24
v24@0:8@"NSError"16
v24@0:8@"CDPLocalSecret"16
v24@0:8@?<v@?Q>16
v32@0:8@"CDPCustodianRecoveryInfo"16@?<v@?B@"NSError">24
v64@0:8@16@24Q32@40@48@?56
@"NSMutableSet"
@"<CDPDDeviceSecretValidatorDelegate>"
@"<CDPDRecoveryKeyValidatorInternalDelegate>"
@32@0:8Q16Q24
@"<CDPDSecureBackupDelegate>"
@"CDPDSecureBackupConfiguration"
B28@0:8@16B24
v28@0:8B16@20
v28@0:8B16@"NSString"20
@"FLFollowUpController"
@"CDPDFollowUpFactory"
B32@0:8@16@?24
@"<CDPAppleAccountProxy>"
v56@0:8@16Q24@32@40@?48
Vv36@0:8@16B24@?28
Vv40@0:8@16@24@?32
v40@0:8@"CDPContext"16@"<CDPStateUIProviderInternal>"24@?<v@?BB@"NSError">32
v32@0:8@"CDPContext"16@?<v@?B@"NSError">24
v40@0:8@"CDPContext"16@"<CDPStateUIProviderInternal>"24@?<v@?B@"NSError">32
v36@0:8@"CDPContext"16B24@?<v@?B@"NSError">28
v56@0:8@"NSString"16Q24@"CDPContext"32@"<CDPStateUIProviderInternal>"40@?<v@?B@"NSError">48
v40@0:8@"NSString"16@"CDPContext"24@?<v@?B@"NSError">32
v32@0:8@"CDPContext"16@?<v@?@"NSString"@"NSError">24
Vv24@0:8@?<v@?B@"NSError">16
v36@0:8@"NSString"16B24@?<v@?B>28
v24@0:8@?<v@?B>16
v28@0:8B16@?<v@?B@"NSError">20
v48@0:8@"CDPContext"16@"<CDPStateUIProviderInternal>"24@"<CDPAuthProviderInternal>"32@?<v@?@"NSDictionary"@"NSError">40
v32@0:8@"CDPFollowUpContext"16@?<v@?B@"NSError">24
Vv24@0:8@?<v@?Q@"NSError">16
Vv32@0:8@"CDPUpdateDataPrivacyContext"16@?<v@?@"CDPUpdateDataPrivacyContext"@"NSError">24
Vv36@0:8@"CDPContext"16B24@?<v@?@"NSArray"@"NSError">28
Vv32@0:8@"CDPContext"16@?<v@?@"NSError">24
Vv32@0:8@"CDPContext"16@?<v@?Q@"NSError">24
Vv24@0:8@?<v@?@"NSError">16
Vv32@0:8Q16@?<v@?@"NSError">24
Vv32@0:8@"NSArray"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"ACAccount"16@?<v@?@"NSDictionary"@"NSError">24
Vv36@0:8@"CDPContext"16B24@?<v@?B@"NSError">28
Vv32@0:8@"CDPContext"16@?<v@?B@"NSError">24
Vv40@0:8@"NSDate"16@"CDPContext"24@?<v@?B@"NSError">32
v36@0:8@"CDPContext"16B24@?<v@?@"CDPEscrowRecordReport"@"NSError">28
@40@0:8@16Q24Q32
v56@0:8@16@24Q32@40@?48
v72@0:8@16@24@32@40@48@56@?64
@"NSXPCConnection"
@"CDPWalrusDaemonService"
Q32@0:8@16^@24
Q24@0:8^@16
@40@0:8@16B24B28^@32
@32@0:8Q16^@24
v44@0:8B16@20@28@?36
@"<CDPWalrusSecurityProxy>"
@"CDPAccount"
@"CDPDAccount"
@"ACAccountStore"
v32@0:8B16B20@24
v52@0:8@16Q24B32@36@?44
@"CDPInheritanceTrustController"
@32@0:8B16B20@24
@40@0:8B16B20Q24@32
@"NSError"
@"<CDPKeychainCircleProxy>"
@"<CDPSecureChannelProxy>"
@"NSURLSession"
B20@0:8B16
@"CDPDCircleJoinResult"
@32@0:8@"CDPContext"16@"<CDPStateUIProviderInternal>"24
@"NSError"24@0:8@"NSError"16
@"NSError"16@0:8
@"NSError"24@0:8@"CDPDevice"16
v32@0:8@"NSError"16@?<v@?@"NSError">24
@"CDPDSecureChannelContext"
v20@0:8I16
@"NSLock"
^{__SCNetworkReachability=}
@"KCPairingChannel"
@(#)PROGRAM:CoreCDPInternal  PROJECT:CoreCDP-1
"Saving terms acceptance: %@"
"Fetched accepted terms with result: %@"
"Error fetching terms acceptance %@"
"Initialized %@"
"Deallocated %@"
"%@ started observing state"
"Error checking circle status (%@) after observing kSOSCCCircleChangedNotification - %@"
"Circle state is %@ after observing kSOSCCCircleChangedNotification (observer %p)"
"Circle observer ignoring: %s"
"%@ : Confirming recovery key"
"cached reovery key"
"failed to cache recovery key"
"%@ : recovery failed with error %@"
"Programming error detected! File a radar!"
"CDPDRecoveryFlowController deallocated"
"Recovery flow failed due to device inflation error. %@"
"We are unable to show UI as the UI provider is missing."
"%s Context Type: %@"
"%s Escape available: other devices"
"Requesting UI provider prompt for a remote device secret from one of %lu devices (offeringRemoteApproval=%i)"
"Interactive recovery with walrus status - %lu"
"Invoking cdpRecoveryFlowContext:promptForRemoteSecretWithDevices in CDPDRecoveryFlowController"
"Invoking cdpContext:promptForRemoteSecretWithDevices in CDPDRecoveryFlowController"
"Requesting UI provider prompt for an ICSC isNumeric=%i numericLength=%@"
"Fetching backup record devices"
"Failed to fetch backup record devices: %@"
"Received new connection %@, checking entitlements..."
"CDP client connection invalidated: %@"
"Accepting new connection %@ with entitlements mask %i"
"Denying new connection %@"
"Client is Buddy"
"Client is Preferences"
"Unknown client type with bundleID '%@'"
"Broadcasting notification: %@, with userInfo: %@"
"Parsed a MID"
"Parsed a PRK"
"Attempting silent re-authentication..."
"Renew request completed! Error: %@"
"Silently re-fetched recovery token"
"Silent re-authentication succeeded"
"Silent re-authentication failed: %@"
"Context Type: %@"
"Escape available: other devices"
"Escape available: account reset"
"Escape available: skip flow"
"Escape available: recovery key"
"_escapeOfferForDevices: Encountered error while checking RK support: %@"
"Escape available: Custodian Recovery"
"User attempted to sign in after burning out all recovery options, present hard limits"
"CDPDRemoteDeviceSecretValidatorDelegate applying to join circle"
"CDPDRemoteDeviceSecretValidatorDelegate cancelling application to join circle"
"Failed to recovery Octagon using custodian info with error: %@"
"Attempting to recover a record with context: %@"
"Recovered a clique: %@"
"clique recovery failed with error: %@"
"Non-terminating error detected, with retry option: %{BOOL}d"
"Starting handling hard limit error..."
"Starting handling soft limit error..."
"Attempting to fallback recovery options..."
"Creating recovery option: Recovery Key"
"Creating recovery option: Remote Approval"
"No fallback available"
"Creating recovery option: Skip"
"Creating recovery option: Reset"
"User elected to Reset Encrypted Data, confirming..."
"Creating recovery option: Cancel"
"Attempting to preset alert (using: %@) for error: %@"
"User responded to presented alert with option: %@"
"Prompting user for Reset confirmation"
"Reset confirmation prompt came back with: %@"
"Creating a piggybacking data provider with session: %@"
 enableTelemetry=YES 
BEGIN [%lld]: KCJoiningRequestProcessMessage  enableTelemetry=YES 
 Error=%{public,signpost.telemetry:number1,name=Error}d 
END [%lld] %fs: KCJoiningRequestProcessMessage  Error=%{public,signpost.telemetry:number1,name=Error}d 
KCJoiningRequestProcessMessage
END [%lld] %fs: KCJoiningRequestProcessMessage 
"Starting to recover PCS state"
"PCS State restored %{BOOL}d with error: %@"
"Starting to synchronize PCS state"
"PCS State synchronized %{BOOL}d with error: %@"
"Silent auth requested prior to checking CDP state"
"Checking iCDP State. Networked: %{BOOL}d"
"PCSIdentitySetIsICDPNetwork returned isEnabled=%i error=%@"
"Checking local iCDP state..."
"Checking companion circle state..."
"PCSIdentityCreate return NULL with error: %@"
"PCSIdentitySetup returned NULL with error: %@"
"PCS Identity fetched"
"Re-authenticating on error from enableCDPWithCompletion: %@"
"Checking PCS identities for service: %@"
"No service name provided, no key to fetch."
"Fetching keys for %@ is not allowed."
"No identities found for service: %@"
"Failed to create PCS identity set with error: %@"
BEGIN [%lld]: AccountInfoWithInfo  enableTelemetry=YES 
 error=%{public,signpost.telemetry:number1,name=error}d 
AccountInfoWithInfo
END [%lld] %fs: AccountInfoWithInfo  error=%{public,signpost.telemetry:number1,name=error}d 
EnableBackupWithInfo
BEGIN [%lld]: EnableBackupWithInfo  enableTelemetry=YES 
END [%lld] %fs: EnableBackupWithInfo  error=%{public,signpost.telemetry:number1,name=error}d 
"Failed to enable SecureBackup: %@"
"SecureBackup enabled"
BEGIN [%lld]: RecoverBackupWithInfo  enableTelemetry=YES 
RecoverBackupWithInfo
END [%lld] %fs: RecoverBackupWithInfo  error=%{public,signpost.telemetry:number1,name=error}d 
DisableBackupWithInfo
BEGIN [%lld]: DisableBackupWithInfo  enableTelemetry=YES 
END [%lld] %fs: DisableBackupWithInfo  error=%{public,signpost.telemetry:number1,name=error}d 
"Failed to disable SecureBackup with error %@"
"Disabled SecureBackup!"
 enableError=%{public,signpost.telemetry:number1,name=enableError}d 
END [%lld] %fs: DisableBackupWithInfo  enableError=%{public,signpost.telemetry:number1,name=enableError}d 
"Attempting to update recovery key cache..."
"Failed to cache recovery key with error: %@"
"Recovery key cache updated"
"Cached RK with error: %@"
"Failed to fetch RK from cache: %@"
"Cleared RK cache with error: %@"
BEGIN [%lld]: FetchEscrowRecords  enableTelemetry=YES 
 resultError=%{public,signpost.telemetry:number1,name=resultError}d 
FetchEscrowRecords
END [%lld] %fs: FetchEscrowRecords  resultError=%{public,signpost.telemetry:number1,name=resultError}d 
"Fetched escrow records: %@"
"Fetched escrow records error: %@"
"Fetched all escrow records: %@"
"fetchAllEscrowRecords failed, error: %@"
BEGIN [%lld]: TLKRecoverability  enableTelemetry=YES 
TLKRecoverability
END [%lld] %fs: TLKRecoverability  resultError=%{public,signpost.telemetry:number1,name=resultError}d 
"Checked for recoverability: %@"
"checkForRecoverability failed, error: %@"
"Attempting to persist verifier: %@ for %@"
"Managed config (%@) reports isPasscodeSet=%i"
"Already sent CDPCA event %@"
"Sending report %@ (time: %f), data - %@"
SecureChannelSendPayload
BEGIN [%lld]: SecureChannelSendPayload  enableTelemetry=YES 
"Response received: %@"
"Setting _approverBackupRecordsExist = %{BOOL}d"
"Setting _approveriCloudKeychainState = %ld"
END [%lld] %fs: SecureChannelSendPayload 
"Response does not contain a value for `CDPChannelTTSUPayloadKey`."
"Starting to listen for initiating payload..."
"Payload received from requestor: %@"
"Sending response to requestor: %@"
"Attempting to join the circle using remote approval..."
"Circle join was approved from another device"
"Ignoring circle state change because a recovery is in progress"
"Ignoring circle state change because we're not supposed to be waiting for remote approval"
"Failed to request circle join approval from another device - %@"
"Circle join was successfull with custodian recovery"
"Fetching decorated delegate: %@"
"resetAccountCDPState was called"
"resetAccountCDPStateAndSetSecret was called"
"Denying walrus access. Missing entitlement."
"Failed to fetch walrus status with error code: %zd, error: %@"
"Walrus status (%lu) fetched successfully."
"Denying walrus operation. Missing entitlement."
"Unknown walrus status. Can't update."
"Failed to update walrus status with error: %@"
"Walrus status updated successfully."
"Denying web access. Missing entitlement."
"Failed to fetch web access status with error: %@"
"Web access status (%lu) fetched successfully."
"Denying web access operation. Missing entitlement."
"Unknown web access status. Can't update."
"Failed to update web access status with error: %@"
"Web access status updated successfully."
"Unable to determine walrus status, abandoning pcs key fetch. error: %@"
"Walrus status (%lu) is not enabled, abandoning pcs key fetch."
"Unable to determine web access status, abandoning pcs key fetch. error: %@"
"Web access status (%lu) is not enabled, abandoning pcs key fetch."
"Error fetching key for service %@: %@"
"Failed to recover data dictionary: %@"
"Parsing recovered data: %@"
"Recovered data dictionary with keys: %@"
"%@: Failed to allocate security task (using framework-provided identifier)"
"%@: Failed to copy signing ID from task (%@) with error (%@)"
"%@: Failed to retrieve signing ID (using framework-provided identifier)"
"Expected valid context (%@) with non-null DSID and altDSID"
"%@: Attempting to update the last silent escrow record repair attempt date (%@)"
"%@: Unexpected request to remove last silent escrow record repair attempt date"
"%@: Determining if silent repair should be performed for state (%lu)"
"%@: Silent repair should not be performed due to rate limiting"
"%@: Silent repair should not be performed for unknown state"
"%@: Silent repair should not be performed for viable state"
"%@: Silent repair should be performed for not found state"
"%@: Silent repair can be perfomed for non viable state (%{BOOL}d)"
"%@: Proceeding with silent escrow record repair for state (%lu)"
"Failed to check all records with error: %{public}@"
"%{public}@: Processing escrow record with id: %{hash.mask}@ (name: '%@', serial: %@), is device record: %{BOOL}d"
"%{public}@: Record %{hash.mask}@ is invalid. Skipping update."
"%{public}@: No further view data needed, skipping view query"
"%{public}@: Record does not appear to be valid/viable, skipping view query: %@"
"%{public}@: Error fetching views for record (%{hash.mask}@): %{public}@"
"%@: Cannot silently repair escrow record without cached local secret"
"%@: Cannot silently repair escrow record due to rate limiting"
"%@: Double checking if silent escrow record repair should be performed (using network)"
"%@: Failed to fetch keychain value for last escrow repair attempt date with error (%@)"
"%@: Fetched last escrow repair attempt date (%@)"
"%@: Escrow record repair will not be allowed at this time"
"%@: Escrow record repair will be allowed at this time"
"%@: Could not find an existing keychain value for last escrow repair attempt date, allowing repair to proceed"
"%@: Cannot determine escrow record for unknown account with altDSID (%@)"
"%@: Will not determine escrow record state for device without local secret (not eligible)"
"%@: Cannot determine escrow record state for device not in circle (%lu)"
"%@: Cannot determine escrow record state for device not in circle (%lu) with error (%@)"
"%@: Cannot determine escrow record state due to server-side disablement"
"%@: Failed to determine if device already has escrow record with error (%@)"
"%@: Determed that current device has an existing escrow record (%@)"
"%@: Existing escrow record for current device could not be found"
"%@: Cannot silently repair escrow record for current device with nil peerID"
"%@: Checking all escrow records matching peerID (%@) from source (%ld)"
"%@: Checking if device (%@) is missing TLK recoverability using cache (%{BOOL}d)"
"%@: Checking TLK recoverability for escrow record (%@) exposed its non viableness (%@)"
"%@: Failed to check TLK recoverability for record with ID (%@)"
"%@: Simulating escrow record as non-viable record only for testing"
"%@: Checked TLK recoverability for escrow record (%@) and found views (%@)"
"%{public}@: Checking for recoverable TLK views in record (%{hash.mask}@) is missing TLK recoverability using cache (%{BOOL}d)"
"%@: Context is authenticated and has PET (%{mask.hash}@}"
"%@: Unable to continue silent escrow record repair due to auth error (%@)"
"%@: Context already has PET, auth is not necessary"
"%@: Context does not have a PET, attempting to perform silent auth"
"%@: Attempting to set the current date (%@) as last escrow repair attempt date"
"%@: Failed to set last escrow repair attempt date in keychain with error (%@)"
"%@: Successfully saved current date (%@) as last escrow repair attempt date, proceeding with silent repair attempt"
"%@: Failed to repair the non-viable escrow record as the request was dropped by escrow proxy with error (%@)"
"%@: Checking all escrow records for a device matching predicate (%@) with source (%ld)"
"Failed to check all records with error: %@"
"Found matching devices by checking all records, will return first: %@"
"%@: Fetching all escrow records from source (%ld) with account info (%@)"
"%@: Failed to fetch all escrow records with error (%@)"
"%@: Successfully fetched all escrow records (%@)"
"%@: Last escrow repair attempt date not found in keychain (%@)"
"%@: Failed to retrieve combined circle status using cache (%{BOOL}d) with error (%@)"
"%@: Retrieved combined circle status (%lu) using cache (%{BOOL}d)"
"%@: Prompting for local secret is not supported in this flow"
"Failed to generate random IV data. Can't perform encryption."
"Failed to encrypt data with status: %d"
"Failed to decrypt data with status: %d"
"Successfully fetched web access status (%{BOOL}d)"
"Failed to fetch existing account settings with error: %@"
"Successfully updated web access status (%{BOOL}d)."
"Failed to update web access status (%{BOOL}d) with error: %@"
"Circle status before attempting recovery is %@"
"Circle state changed to a state other than pending, proceeding with recovery"
"Attempting to reset to offering in SOS"
"Failed to reset to offering: %@"
"Successfully reset SOS circle to offering"
"Circle join requested, but we are already in circle!"
"CDP join status: %lu, Sharing channel: %@, Retry possible: %{BOOL}d"
"Circle resume failed, re-authentication requested!"
"Failed to resume session: %@, start to fall back..."
"Failed to resume session, no fallback. %@"
"Secure channel worked, we joined the circle..."
"Failed to initialized secure channel with error: %@, Custodian keys available attempting recovery"
"Failed to initialized secure channel with error: %@, starting to fall back..."
"Failed to initialized secure channel, no fallback. %@"
"scheduling join retry after %@ seconds as security says there is no CK account yet"
"Retrying circle join now!"
"Falling back to recovery based circle flows..."
"Can't join circle, failed to check for presence of secure backup records: %@"
"Circle status is CDPSyncingStatusAbsent and backups are NOT present... Trying to create and join the circle"
"Custodian CDP Recovery failed with error: %@"
"Custodian CDP Recovery succeeded"
"UI provider failed to perform interactive authentication for repair. Error: %@"
"Populating walrus status in context before attempting join"
"Error getting walrus status - %@"
"Walrus status [%lu] enabled %{BOOL}d"
"Attempting to reset and join new circle after recovery succeeded but resulted in a pending circle join..."
"Circle reset completed with success: %{BOOL}d, error: %@"
"Resetting circle after join attempt following recovery resulted in pending..."
"Attempt 1 - Failed to reset due to auth error, will retry: %@"
"Pending application state was resolved immediately after calling remove"
"Pending application state was not resolved immediately after calling remove... waiting to see state != Pending"
"Pending application state was resolved!"
"Updating device name for %@ to '%@' based on circle info"
"Requesting to join circle with handler"
"Request made, but we were already in circle, completing..."
"Successfully joined the circle"
"Failed to apply to circle: %@"
"MUM: CDPDLocalSecretFollowUpProviderImpl init'ed with altDSID %@"
"CDPDLocalSecretController dealloc"
"Updating context for local secret change"
"CDPDLocalSecretController: updated context with context type: %ld, appleID: %@, dsid: %@"
"Not in circle , trying repair"
"repair completed with result: %{BOOL}d error: %@"
"Have EscrowPreRecord, attempting to enable secure backup: %@"
"Have local secret, attempting to enable secure backup"
"Successfully updated local secret by re-enabling SecureBackup with context type: %ld"
"Failed to update local secret by re-enabling SecureBackup"
"No secret, no follow up"
"Failed to silently update local secret, starting repair"
"Creating new CDPContext with the auth results"
"Context type set to %ld"
@"Failed to reauthenticate before updating local secret"
"Refreshing context for input: (%@) - %{BOOL}d - %@"
"Enabling backup, but we are missing a PRK, force interaction to get one"
"Refreshing context with PET"
"Prompting user to enter local secret..."
"Got peer id: %@ from %@"
"Received Auth Notification %s, with userInfo %@"
"Detected security level change for %@"
"Auth observer ignoring %s, securityLevel %@"
"Auth observer ignoring: %s"
"Checking recovery key status from Secure Backup"
"Invalid context, assuming no primary account available"
"Recovery key verification UI flow completed with success: %{BOOL}d - %@"
"Recovery key UI flow completed with success %{BOOL}d - %@"
"Recovery Key verified!"
"Failed to persist RK verifier: %@"
"Failed to persist verifier: %@"
"Prompt for Recovery Key came back with success and recoveredInfo, attempting to cache with proxy %@"
"Recovery Key prompt came back with error: %@"
"SOS is turned off, returning YES"
"CDPDRecoveryKeyController %p deallocated"
"Multiple-ICSC secret is known to be bad, skipping validation"
"Recovery delegate rejected recovery with error. %@"
"Recovery key is known to be bad, skipping validation"
"Set _isAttemptingRecovery to suppress acting on change in circle state"
"Remaining attempts: %@"
"Depleted remaining attempts for multiple-iCSC entry (%@)"
"Un-set _isAttemptingRecovery to resume acting upon circle changes after failed multiple iCSC recovery"
"Redirecting error to the delegate"
"Delegate finished handling the error and returned: %@"
"Unsupported delegate"
"Reaching out to the delegate for error handling"
"cancelValidationWithError was called"
"Event handled, skipping call to valid secret handler"
"Un-set _isAttemptingRecovery to resume acting upon circle changes after failed single iCSC recovery"
"Exceeded maximum attempts for iCSC entry"
"Key mismatch detected"
"%@ : Generating recovery key"
"**** DEBUG **** Simulate non-viable records mode is ENABLED"
"**** DEBUG **** Simulate escrow proxy throttling mode is ENABLED"
"Fetching escrow records with %@"
"Re-authenticating after error calling fetchEscrowRecords: %@"
"Encountered error while re-authenticating: %@"
"Successfully re-authed after error calling fetchEscrowRecordsWithCompletion. Received non-cached escrow records: %@"
"Failed to re-auth after error calling fetchEscrowRecordsWithCompletion. Existing cached escrow records: %@"
"Encountered error while fetching escrow records: %@"
"Fetched Escrow Records %@"
"fetchEscrowRecordsWithCompletion: failed to fetch escrow records: %@"
"Fetching all escrow records with %@"
"Re-authenticating after error calling fetchAllEscrowRecords: %@"
"Successfully re-authed after error calling fetchAllEscrowRecords. Received non-cached escrow records: %@"
"Failed to re-auth after error calling fetchAllEscrowRecords. Existing cached escrow records: %@"
"Encountered error while fetching all escrow records: %@"
"Fetched All Escrow Records %@"
"fetchAllEscrowRecordsWithOptionForceFetch: failed to fetch escrow records: %@"
"Using cached SecureBackup account info %@"
"Re-authenticating after error calling accountInfoWithCompletion: %@"
"Successfully re-authed after error calling accountInfoWithCompletion. Received non-cached SecureBackup account info: %@"
"Failed to re-auth after error calling accountInfoWithCompletion. Existing cached SecureBackup account info: %@"
"error from accountInfoWithCompletion after re-auth: %@"
"Non-cached SecureBackup account info fetched %@"
"Clearing SecureBackup account info cache..."
"Fetching account info with %@"
"getBackupRecordDevicesWithOptionForceFetch: Failed to check for secure backup records: %@"
"getBackupRecordDevicesWithOptionForceFetch returned!"
"getBackupRecordDevicesWithOptionForceFetch fetched %lu records"
"getBackupRecordDevicesWithOptionForceFetch: Secure backup hasSingleICSCBackup=%{BOOL}d hasMultipleICSCBackups=%{BOOL}d"
"getBackupRecordDevicesWithOptionForceFetch fetched 0 records"
"**** DEBUG **** Setting fake remaining attempts value of 1 for %@"
"Disqualified device %@ because the remaining attempts is %lu"
"Backup record found for device %@ with date %@ (%@)"
"Backup record date %@ is later than the previously known newest record (%@), promoting %@ as newest device record"
"Finished parsing multiple-iCSC records and found the newest record to be %@"
"_getOctagonEscrowBackupRecordDevicesWithOptionForceFetch: called, fetching escrow records"
"fetch escrow records returned error %@"
"fetch all escrow records returned error %@"
"constructed 0 CDP devices after refetching records, possibly single-iCSC.. calling _getBackupRecordDevicesIncludingUnrecoverableRecords"
"there exists multiple icsc records and none of them will get the device into any trust system. Forcing a reset protected data"
"Finished parsing backup records, returning %lu devices and isUsingMultipleICSC=%i"
"_getBackupRecordDevicesIncludingUnrecoverableRecords: called, fetching account info from SecureBackup"
"SecureBackup returned error %@"
"Found a single-iCSC metadata record. Returning that as a faux-device using %@"
"No single-iCSC metadata record is present"
"Failed to get backup record devices with error: %@"
"Already using multiple ICSC, no need to prompt for adoption"
"Single ICSC record deleted, proceeding with enable of secure backup"
"Failed to delete single-ICSC backup while attempting to enable secure backup: %@"
"Single ICSC that is complex or random and not using multiple ICSC, prompting for adoption..."
"Accepted multiple ICSC, deleting old record..."
"Single ICSC that is NOT random or complex, deleting old record and enabling multiple-ICSC"
"Calling enable without delete due to existing record metadata being present"
"No existing backup record found, continuing with enable"
"Starting to check whether the account has any OT viable escrow record..."
"Failed to fetch escrow records for OT only viability check: %@"
"Completed the check for OT only viable escrow records with result: %@"
"Checking if the peer has a secure backup: %@"
"Check for existing backup failed with error: %@"
"Found %@ matching devices"
"Forcing recovery key support by preference (com.apple.corecdp: ForceRecoveryKeySupport)"
"isRecoveryKeySet threw error: %@"
"_enableSecureBackupWithContext called."
"_authenticatedEnableSecureBackupWithContext succeeded"
"_authenticatedEnableSecureBackupWithContext failed with error: %@"
"Re-authenticating after error... Retry number: %ld..."
"Will retry in %@ second(s)... Retry number: %ld"
"Re-authenticating results: reauthSuccess: %hhd reauthError: %@"
"_authenticatedEnableSecureBackupWithContext succeeded."
"Retry count has reached the maximum limit. Bubbling up previous retry error: %@"
"Posting followup for failed async SecureBackup path with error %@"
"Re-authenticating after error from authenticatedEnableSecureBackupWithRecoveryKey: %@"
"authenticatedEnableSecureBackupWithRecoveryKey received a nil recoveryKey"
"Attempting to enable SecureBackup with recovery key using info %@"
"cdp: Attempting to perform authenticated enable with context: %@"
"Forcing use of cached secret by preference (com.apple.corecdp: ForceUseCachedSecret)"
"Forcing purge of cached secret by preference (com.apple.corecdp: ForceCachedSecretPurge)"
"Using cached secret and managed config reports devicePasscodeIsSimple=%i"
"Using cached secret and managed config reports simplePasscodeLength=%li"
"Using cached secret with updated client metadata %@"
"Failed to escrow account recovery data due to missing MID"
"Failed to escrow account recovery data due to missing recovery token"
"Failed to enable SecureBackup because no cached secret was present when expected... prompting user to enter local secret"
"Attempt to enable Secure Backup again now that we have the local secret"
"Failed to get local secret"
"Failed to enable SecureBackup with error %@"
"Enabled SecureBackup!"
"Attempting to enable SecureBackup with validated local secret using info %@"
"Failed to enable due to existing record, disabling and trying again"
"Failed to fetch Anisette data! Error: %@"
"performEscrowRecoveryWithData: calling performEscrowRecoveryWithContextData"
"performEscrowRecoveryWithContextData: failed to recover: %@"
"performEscrowRecoveryWithContextData: success!"
"performSilentEscrowRecoveryWithCDPContext: invoked"
"performSilentEscrowRecoveryWithCDPContext: failed to fetch escrow records: %@"
"performSilentEscrowRecoveryWithCDPContext: fetched 0 escrow records"
"performSilentEscrowRecoveryWithCDPContext: single icsc"
"performSilentEscrowRecoveryWithCDPContext: fetched %lu multiple icsc records"
"performSilentEscrowRecoveryWithCDPContext: failed to fetch escrow records: %@, exiting"
"performSilentEscrowRecoveryWithCDPContext: cdp context does not support optimized recovery"
"performSilentEscrowRecoveryWithCDPContext: fetched 0 escrow records, exiting"
"performSilentEscrowRecoveryWithCDPContext: calling new recovery with %lu records"
"performSilentEscrowRecoveryWithCDPContext: performing silent restore now"
BEGIN [%lld]: OTCPerformSilentEscrowRecovery  enableTelemetry=YES 
OTCPerformSilentEscrowRecovery
END [%lld] %fs: OTCPerformSilentEscrowRecovery  Error=%{public,signpost.telemetry:number1,name=Error}d 
"performSilentEscrowRecoveryWithCDPContext: failed to perform silent burn and recover: %@"
"performEscrowRecoveryWithRecoveryContext: invoked"
"performEscrowRecoveryWithRecoveryContext: using recovery key from recoveryContext"
"performEscrowRecoveryWithRecoveryContext: fetching RK from the keychain"
"performEscrowRecoveryWithRecoveryContext: attempting recovery key recovery"
"performEscrowRecoveryWithRecoveryContext failed to join via recovery key: %@"
"performEscrowRecoveryWithRecoveryContext: joined via recovery key!"
"performEscrowRecoveryWithRecoveryContext: attempting silent burn"
"performEscrowRecoveryWithRecoveryContext: attempting remote restore"
"performEscrowRecoveryWithRecoveryContext: need to perform a single icsc restore, choosing old recovery SPI"
"performEscrowRecoveryWithRecoveryContext: chosen record is empty, aborting recovery"
"performEscrowRecoveryWithRecoveryContext: record checks out, continuing with restore"
BEGIN [%lld]: OTCPerformEscrowRecovery  enableTelemetry=YES 
OTCPerformEscrowRecovery
END [%lld] %fs: OTCPerformEscrowRecovery  Error=%{public,signpost.telemetry:number1,name=Error}d 
"performEscrowRecoveryWithRecoveryContext: failed to perform escrow recovery: %@"
"performEscrowRecoveryWithRecoveryContext: escrow recovery succeeded"
"Recovering SecureBackup failed - iCSC Invalid (silent burn failed). Trying again with cached recovery key."
"performEscrowRecoveryWithData: failed to recover via cached recovery key. error: %@"
"performEscrowRecoveryWithData: failed to recover via cached recovery key, but an error was not reported. There was also an error checking recovery key support: %@"
"Attempting to recover SecureBackup secret from device %@ using info %@"
"Recovery error had additional info: %@"
"Failed to recover SecureBackup with error %@"
"Recovered SecureBackup"
"Re-authenticating after error from _deleteAllBackupRecordsWithCompletion: %@"
"Attempting to delete all SecureBackup records with info %@"
"Error attempting to delete all backup records %@"
"Re-authenticating after error from _deleteSingleICSCBackupWithCompletion: %@"
"Deleting existing single-iCSC backup..."
"Failed to delete existing single-iCSC backup: %@"
"Existing single-iCSC backup deleted successfully"
"No existing single-iCSC backup found to delete"
"Failed to get account info while deleting single-iCSC backup: %@"
"Re-authenticating after error from _disableSecureBackupWithCompletion: %@"
"Attempting to disable SecureBackup with info %@"
"Failed to disable SecureBackup because no local peerID could be found"
"Re-authenticating after error from disableRecoveryKeyWithCompletion: %@"
"Removing recovery key"
"Removed recovery key result: %{BOOL}d, error: %@"
"User previously disabled iCK: %{BOOL}d"
"User disabled iCloud keychain: %{BOOL}d"
"Failed to set user preference for iCloud keychain disable: %@"
"Error calling PCSIdentitySetIsICDP: %@"
"Failed to call PCSIdentitySetIsICDP: %@"
"CDPDAccount failed to fetch clique status with error: %@"
"Beneficiary accounts can only post follow ups for repair."
"Beneficiary accounts with valid manatee states are not eligible to post repair followups."
"Device is not biometric auth capable or is already enrolled."
"Bio metric auth not enrolled..."
"Follow up factory manatee check returned an error for altDSID %@: %@"
"Follow up factory manatee check returned an error: %@"
"Internal Walrus error %@"
"Internal Walrus status %lu enabled %{BOOL}d"
"Starting to listen for XPC events..."
"Darwin XPC event stream handler called: %s"
"Error during notify_register_check for event - %s"
"Cannot get the state using invalid token for event - %s"
"Error during notify_get_state for token"
"XPC event value is: %llu"
"Notifying listener %@ of %s"
"Distributed XPC event stream handler called: %s"
"User Info: %@"
"Failed to add auth header"
"Processing request for context: %@"
"posting followup is not supported in current configuration"
"Clearing a follow up: (%@) - %@"
"Enabling data privacy on account"
"Disabling data privacy on account"
"No primary account available. Data Privacy cannot be enabled."
"Recovery key or custodian is not available. Data Privacy cannot be enabled."
"Recovery key is not available. Data Privacy cannot be enabled."
"Checking whether any previous device is available on account that will lose access."
"Error getting device list that will lose access. We cannot proceed further. Error - %@"
"There are devices that will lose access to the account. User needs to agree to drop these devices."
"Device check complete, moving on to enable data privacy on IdMS"
"Enabling data privacy failed on IdMS. Error - %@"
"Data privacy is enabled on IdMS. Moving on to roll the keys on Security."
"Enabling data privacy failed on Security. Error - %@"
"Keys are rolled on Security. Data Privacy should be enabled now."
"Denying access to data recovery, missing entitlements."
"Fetching escrow record devices..."
"Fetched escrow record devices with error: %@"
"Checking current device's escrow record for recoverability..."
"Failed to fetch escrow records with error: %@"
"Found one escrow record for current device that is recoverable!"
"Failed to find any escrow record for this device that is recoverable: %@"
"Denying access to state machine. Missing entitlement."
"Starting state machine..."
"Forcing _useSecureBackupCachedPassphrase=YES for iOS/watchOS Buddy on a device with a local secret present"
"Joined CDP without valid method. Please file report with sysdiagnose."
"Failed to join without an error. Please file report with sysdiagnose."
"Starting state repair..."
"Denying access to state repair. Missing entitlement."
"Starting accepting side server..."
"Approving TTSU attempted without primary iCloud account, failing..."
"CDP flow interrupted"
"Denying access to escrow record status (missing entitlements)."
"Checking whether repair should be performed on the CDP state..."
"State machine status check completed shouldRepair=%{BOOL}d error=%@"
"Denying access to state machine. Missing entitlements"
"Handing change in an attempt to escrow preRecord: %@..."
"State machine finished handling preRecord %@ change with didUpdate=%{BOOL}d error=%@"
"Handing change in local secret..."
"State machine finished handling local secret change with didUpdate=%{BOOL}d error=%@"
"Finishing offline local secret change..."
"Updated local secret after offline change"
"Failed to update local secret after offline change: %@"
"Finishing Cyrus terms flow by collecting passcode..."
"Created backup after terms agreement."
"Failed to create delayed backup: %@"
"Attempting to clear a follow up: %@"
"Denying access to cleraing follow ups. Missing entitlement."
"Attempting to post a follow up: %@"
"Denying access to posting follow ups. Missing entitlement."
"Calling out to controller to save terms."
"Client is not permitted to save terms."
"Calling out to controller to fetch terms."
"Client is not permitted to fetch terms."
"Initiating Account Recovery with UI provider: %@"
"Starting RK based Account Recovery flow"
"Initiating info recovery"
"Denying access to back up data. Missing entitlements"
"info recovery completed with error: %@"
"Denying access to check OT status operation. Missing entitlement."
"Denying access to recovery key operation. Missing entitlement."
"Denying access recovery key operation. Missing entitlement."
"Denying verify recovery key operation. Missing entitlement."
"Error geting data privacy status from security - %@"
"Returing (%lu) for data privacy status."
"Error updating data privacy status - %@"
"Update to data privacy status was successful."
"Denying access (missing entitlement)."
"Successfully performed silent escrow record repair in background!"
"Failed to perform silent escrow record repair in background with error: %@"
"Denying access to start repairing escrow record (missing entitlement)."
"Successfully performed silent escrow record repair!"
"Failed to perform silent escrow record repair with error: %@"
"Denying access to perform escrow record repair (missing entitlement)."
"Successfully updated last silent escrow record repair attempt date (%@)"
"Failed to update last silent escrow record repair attempt date (%@) with error: %@"
"Denying access to update last silent escrow record repair attempt date (missing entitlement)."
"Account not eligible, cannot fetch walrus status: %@"
"No eligible primary account found, cannot fetch walrus status: %@"
BEGIN [%lld]: FetchAccountCleanupStatus  enableTelemetry=YES 
FetchAccountCleanupStatus
END [%lld] %fs: FetchAccountCleanupStatus  Error=%{public,signpost.telemetry:number1,name=Error}d 
"Failed to fetch walrus status with error: %@"
"Successfully fetched walrus status: (%{BOOL}d)"
"No eligible primary account found, cannot update walrus status: %@"
"Repairing Walrus status for account %@, initiating silent auth."
"Failed to perform silent auth with error: %@"
"Silent auth completed, continuing walrus repair."
"Repair completed successfully"
"Repair completed with error: %@"
"Updating Walrus status for account %@, initiating silent auth."
"Silent auth completed, continuing walrus update."
"Account has no CloudKit account"
"No Primary account."
"Primary account has no CloudKit account"
"Primary account has no AuthKit account"
BEGIN [%lld]: UpdateAccountCleanupStatus  enableTelemetry=YES 
 isEnabled=%{public,signpost.telemetry:number1,name=isEnabled}d  Error=%{public,signpost.telemetry:number2,name=Error}d 
UpdateAccountCleanupStatus
END [%lld] %fs: UpdateAccountCleanupStatus  isEnabled=%{public,signpost.telemetry:number1,name=isEnabled}d  Error=%{public,signpost.telemetry:number2,name=Error}d 
"Walrus status change succeeded, notifying downstream systems..."
"After successfully updating walrus state, failed to update web access state with error: %@"
"After updating walrus state to %{BOOL}d, successfully updated web access status to %{BOOL}d"
"Renew credentials completed with result %tu, with error: %@"
"**** DEBUG **** Fake nearly depleted records mode is ENABLED"
"CDPDStateMachine %p deallocated"
"State machine not supported on simulator"
"Starting preflight of account for %{mask.hash}@"
"Skipping account preflight for %@ due to presence of beneficiary identifier: %{mask.hash}@"
"Preflight finished with shouldProceed=%i error=%@"
"Credential was provided, attempting to register..."
"Failed to register credentials with Security, lets try again..."
"Credential was not provided or we are not HSA2... moving on!"
"Checking iCDP status..."
"Finished checking iCDP status with isEnabled=%i error=%@"
"Prompting for access key for beneficiary trust."
"Successfully obtained access code. Trying to recover trust..."
"Failed to get the beneficiary access key. %@"
"Checking for circle status in order to put beneficiary account in trust, attempt #%lu."
"Beneficiary trust recovery was a %@."
"Failed to recover octagon with beneficiary access key. %@"
"Completing the beneficiary trust with results: %@"
"Scheduling to join beneficiary trust after %@ seconds as security says there isn't a CK account yet."
"Circle status is unexpected for beneficiary trust. Failing
"CDP Reset has been requested... hold on to your hats..."
"iCDP is enabled on HSA2 account, attempting to join circle..."
"Attempting to RECOVER backup"
"Finished recovering backup with didRecover=%i didRequestReset=%i error=%@"
"Resetting during sign in flow is illegal, operation will not be performed."
"Failed to join circle and recovery is not needed, aborting (error as %@)"
"iCDP is enabled, but the account is not HSA2 enabled. Used to roll back iCDP enrollment previously, but these days we don't..."
"Failed to disable recovery key with error: %@"
"Successfully disabled recovery key!"
"CDP reset succeeded, attempting to join/create the circle again"
"Joined circle after CDP reset. Attempting to disable RK..."
"Joined circle after CDP reset. Enabling secure backup..."
"Finished enabling secure backup after CDP reset with didEnable=%i error=%@..."
"Joined circle after CDP reset. Skipping secure backup because we don't have a secret"
"CDP reset failed, can not proceed: %@"
"Failed to check for existing records before enabling secure backup with error: %@"
"Enabling secure backup..."
"Finished enabling secure backup with didEnable=%i error=%@..."
"Device is in circle but has no local secret or already has a secure backup enabled, skipping secure backup enable"
"Checking for existing records before enabling secure backup..."
"Account preflight failed with error, aborting CDP state machine - %@"
"Attempting to enable iCDP..."
"Finished enabling iCDP with didEnable=%i error=%@"
"Not eligible for iCDP - %@"
"Enabling iCDP has already been attempted, but checking the status reports iCDP is still not enabled. Aborting."
"iCDP is not enabled, but the account is not HSA2 enabled"
"Context passed into %s was nil, and context for primary account is also nil. Aborting."
"non-HSA2 account detected, skipping validation"
"HSA2 account that is not in circle, suggesting repair needed: %@, %@"
"Local account is a beneficiary alias and is already in circle, repair not needed"
"Local device does not have local secret and is already in circle, repair not needed"
"Will not be able to fetch escrow record status report because escrow record is nil. Aborting."
"Using fetchSource (%lu) for escrow record controller (%@) in state machine (%@)"
"Found error while attempting to generate escrow status report: %@"
"Device octagonViability=(%lu), sosViability=(%lu)"
"Device is neither octagon viable nor SOS viable. Should repair."
"Found nil accountViability in escrow report. Should not prompt."
"Account octagonViability=(%lu), sosViability=(%lu)"
"Account needs to have at least one escrow record viable for Octagon and at least one for SOS. Should repair."
"Starting silent authentication for repair"
"_performSilentlyAuthenticatedRepair: set refreshedContext type to %ld"
"Failed to perform silent authentication for repair with error %@"
"UI provider failed to perform interactive authentication for repair with error %@"
"Refreshing with context"
"_refreshAndAuthenticateWithContext: context type: %ld, appleID: %@, dsid: %@"
"Failed to enable KVS with error %@"
"Account preflight failed - Primary account DSID (%@) does not match the DSID specified in the context (%@)"
"Account preflight failed - No primary account is present"
"Found primary account"
"Enabling KVS..."
"Finished enabling KVS with success=%i error=%{public}@"
"KVS is already enabled!"
"Enabling iCDP on sign-in is disabled"
"Attempting to recover backup using the cached local secret..."
"Finished recovery attempt using the cached local secret with didRecover=%i didRequestReset=%i error=%@"
"Finished recovery attempt using the secret provided by user. didRecover=%i didRequestReset=%i error=%@"
"Failed to recover SecureBackup because no UI provider is present to request the local and/or remote device secrets"
"Proceeding with backup recovery attempt now that the local secret is known..."
"Finished backup recovery attempt with the user-provided local secret with didRecover=%i error=%@"
"Failed to get a local device secret from the UI provider with error %@"
"Prompting for local secret before recovering backup"
"Proceeding with backup recovery attempt without a local device secret"
"Finished backup recovery attempt without local secret with didRecover=%i error=%@"
"_attemptBackupRecoveryWithLocalSecret: fetching RK from the keychain"
"_attemptBackupRecoveryWithLocalSecret: Encountered error while checking RK support: %@"
"Attempting SILENT recovery with the %@"
"Silent recovery failed, attempting to recover by prompting for remote secret. error=%@"
"Attempting to enable secure backup after successful SILENT recovery"
"Finished enabling secure backup after successful SILENT recovery with didEnable=%i error=%@"
"Local secret is not present, proceeding to recovery by prompting for remote secret"
"Attempting to enable secure backup after successful INTERACTIVE recovery with multiple-ICSC already in use"
"Finished enabling secure backup after successful INTERACTIVE recovery with didEnable=%i error=%@"
"Skipping enable of SecureBackup after successful INTERACTIVE recovery due to no local secret being present"
"User cancelled remote device secret entry"
"User requested reset of their CDP state!"
"User has W enabled, will show RPD completed alert"
"Reset completed confirmation alert was not shown due to: %@"
"User does not have W enabled, signaling completion"
"Error prompting user for remote device secret - %@"
@"_enableCustodianRecoveryIfAvailableForContext: returning %i"
"Disabling async secure backup enrollment for CDPContextType: %ld"
"Disabling async secure backup enrollment since context has no cached local secret."
"Context has disabled async secure backup enrollment"
"Pref to disable async enable was set..."
"_postRecoveryEnableSecureBackupWithContext called."
"Context hasPeersWithCDPBackupRecords and async mode is enabled."
"Finished asynchronous enabling Secure Backup"
"Calling upgradeICSCRecordsThenEnableSecureBackupWithContext"
"Attempting to enable secure backup using the cached secret"
"Finished enabling secure backup using the cached secret with didEnable=%i error=%@"
"Got a valid local secret, attempting to enable secure backup"
"User cancelled local device secret entry"
"Error prompting user for local device secret - %@"
"Asking the UI provider to prompt for the local device secret"
"Failed to enable SecureBackup because no UI provider is present to request the local device secret"
"Hold on to your hats. User has requested a CDP reset."
"Failed to delete all backup records with error: %@"
"Initial sync not required, skipping..."
"Failed to parse data: %@ - %@"
"Context already initialized, returning..."
"Initializing piggybacking channel"
"Initializing TTSU channel"
"Failed to initialize a channel %@"
"Secure channel proxy going away..."
"Creating SecureBackup auth info"
"Failed to fetch iCloud Env"
"Failed to fetch EP URL"
"iCloud Env missing, bad things to come..."
"Auth Token missing, bad things to come..."
"Base URL missing, bad things to come..."
"Requesting the server suppress filtering"
"Invalid configuration request detected"
"Attempting to fetch configuration using request: %@"
"Configuration Response: %@"
"Server Indicated that a retry attempt is needed"
"Failed to load configuraiton: %@"
"Configuration Fetched: %@"
"Older, non-view-aware peers are present therefore user visible keychain is implicitly enabled despite the state of views"
"The device is NOT in circle and so isUserVisibleKeychainSyncEnabled will return NO"
"CDP State repair is needed because the account is iCDP enabled but HSA2 silent auth failed with error %@"
"CDP State repair is needed because the account is iCDP enabled but not in circle"
"Calling setUserControllableViewsSyncStatus with enable=%@ returned success=%@ error: %@"
"Peers reported positive iCloud Keychain state, enabling..."
"Failed to synchronize keychain view state with error: %@"
"Creating initiating payload..."
"Found nil initiating payload"
"Sending initiating payload: %@"
"We completed, but ended up with error... %@"
@"Failed to send initiating message for resume: %@"
"Starting a CDP accepting server..."
"Starting server in dry move, we are not HSA2"
"Failed to process requestor payload on approver side with error: %@"
"Processing reply: %@"
"Failed to process reply with error: %@"
"Found nil response data"
"Secure channel request completed..."
"Sending response: %@"
"Failed to send response with error: %@"
"postLocalSecretChangeFollowUp: altDSID:%@"
"deleteLocalSecretChangeFollowUp: altDSID:%@"
"postConfirmExistingSecretFollowUp: altDSID:%@"
"deleteConfirmExistingSecretFollowUp: altDSID:%@"
"Sending payload over piggybacking channel"
BEGIN [%lld]: TTSUInitiatingPayload  enableTelemetry=YES 
"Creating an initiating pairing channel..."
"Creating initiating TTSU payload"
"Created initiating TTSU payload with error: %@"
TTSUInitiatingPayload
END [%lld] %fs: TTSUInitiatingPayload  Error=%{public,signpost.telemetry:number1,name=Error}d 
BEGIN [%lld]: TTSUProcessIncomingPayload  enableTelemetry=YES 
"Creating an accepting pairing channel..."
"Processing incoming TTSU payload"
"Processed incoming TTSU payload with error: %@"
"Processed incoming TTSU payload with result"
TTSUProcessIncomingPayload
END [%lld] %fs: TTSUProcessIncomingPayload  Error=%{public,signpost.telemetry:number1,name=Error}d 
"Pairing channel indicated initial sync requirement: %{BOOL}d"
v24@?0@"SecureBackupTermsInfo"8@"NSError"16
CDPDCircleStateObserver Event Queue
v12@?0i8
v16@?0Q8
v32@?0@8Q16^B24
-[CDPDAccountRecoveryValidator confirmRecoveryKey:completion:]
CDPDAccountRecoveryValidator.m
completion
_authProvider
v24@?0@"NSDictionary"8@"NSError"16
v28@?0B8@"NSArray"12@"NSError"20
-[CDPDRecoveryFlowController _escapeOfferForDevices:]
com.apple.cdpd.rk.keychain_service
com.apple.cdp.rk
com.apple.CoreCDP.EscrowRecoverabilty
escrowRecoveryDeviceCount
totalAttemptsCount
maxDeviceAttemptsCount
accountCleanupStatus
CDPDConnectionInvalidatedNotification
com.apple.purplebuddy
com.apple.Preferences
v8@?0
com.apple.cdp.daemon
com.apple.cdp.recovery
com.apple.authkit.client
com.apple.authkit.client.private
com.apple.authkit.client.internal
com.apple.authkit.client.owner
com.apple.cdp.statemachine
com.apple.cdp.utility
com.apple.cdp.followup
com.apple.cdp.recoverykey
com.apple.cdp.walrus
com.apple.cdp.walrus.pcskeys
com.apple.cdp.dataprivacy
v24@?0@"CDPContext"8@"NSError"16
v24@?0@"CDPDRemoteSecretValidationResult"8@"NSError"16
v12@?0B8
v16@?0@"NSError"8
-[CDPDRecoveryValidatedJoinFlowController secretValidator:didFailRecovery:withError:completion:]
CDPDRecoveryValidatedJoinFlowController.m
v20@?0B8@"NSError"12
REMOTE_SECRET_ENTRY_FORGOT_CODE_DIALOG_RK
REMOTE_SECRET_ENTRY_MULTIPLE_INCORRECT_BUTTON_APPROVE
REMOTE_SECRET_ENTRY_MULTIPLE_INCORRECT_BUTTON_OK
REMOTE_SECRET_ENTRY_MULTIPLE_INCORRECT_BUTTON_RESET
GENERIC_CANCEL_BUTTON
v16@?0q8
REMOTE_SECRET_ENTRY_MULTIPLE_INCORRECT_TITLE
REMOTE_SECRET_ENTRY_MULTIPLE_INCORRECT_MESSAGE_SIGNIN
REMOTE_SECRET_ENTRY_MULTIPLE_INCORRECT_MESSAGE_NO_RESET
REMOTE_SECRET_ENTRY_MULTIPLE_INCORRECT_MESSAGE_RESET
REMOTE_SECRET_ENTRY_GLOBAL_LIMIT
%@%@
RESET_CONFIRMATION_DIALOG_TITLE
RESET_CONFIRMATION_DIALOG_MESSAGE
RESET_CONFIRMATION_DIALOG_BUTTON_RESET
RESET_CONFIRMATION_DIALOG_TITLE_NO_RECOVERY
RESET_CONFIRMATION_DIALOG_MESSAGE_NO_RECOVERY
RESET_CONFIRMATION_DIALOG_BUTTON_RESET_NO_RECOVERY
type=%@; endpoint=%@; backupActivity=%@
Unknown
HandleCloudDataProtectionState
StartCircleApplicationApprovalServer
RepairCloudDataProtectionState
ShouldPerformRepairForContext
RecoverAndSynchronizeSquirrel
RecoverSquirrel
LocalSecretChangedTo
AttemptToEscrowPreRecord
FinishOfflineLocalSecretChange
VerifyRecoveryKey
FinishCyrusFlowAfterTermsAgreement
GenerateNewRecoveryKey
DeleteRecoveryKey
GenerateRandomRecoveryKey
IsRecoveryKeyAvailable
IsICDPEnabledForDSID
HasLocalSecret
IsUserVisibleKeychainSyncEnabled
SetUserVisibleKeychainSyncEnabled
RemoveNonViewAwarePeersFromCircle
PerformRecovery
ClearFollowUp
PostFollowUp
StatusForDataPrivacy
UpdateDataPrivacy
FetchEscrowRecordDevices
DeviceEscrowRecordRecoverable
SaveTermsAcceptance
FetchTermsAcceptanceForAccount
WalrusStatus
BroadcastWalrusStateChange
UpdateWalrusStatus
WebAccessStatus
UpdateWebAccessStatus
PcsKeysForServices
SynchronizeKeyValueStore
IsEligibleForCDP
BackupRecordsArePresent
GetBackupRecordDevicesWithOptionForceFetch
ClearAccountInfoCache
EnableSecureBackupWithRecoveryKey
EnableSecureBackup
UpgradeICSCRecordsThenEnableSecureBackup
CheckAndRemoveExistingThenEnableSecureBackupRecord
PerformEscrowRecoveryWithRecoveryContext
RecoverSecureBackup
DeleteAllBackupRecords
DisableSecureBackup
DisableRecoveryKey
CheckForExistingRecord
CheckForExistingRecordWithPeerId
CheckForExistingRecordMatchingPredicate
SupportsRecoveryKey
UncacheAllSecrets
com.apple.CoreCDP.EscrowPreRecord
preRecordIdentifier
EscrowPreRecordResult
didAttemptEscrowPreRecord
wasSuccess
errorDomain
errorCode
underlyingErrorDomain
underlyingErrorCode
version
duration
__OSINSTALL_ENVIRONMENT
__AKSYNCBUBBLE
%@%u
<%@: %p> EventName: [%@], ReportData: %@
CDPChannelTTSURequestID
CDPChannelTTSUPayloadKey
CDPChannelTTSUPayloadBackupRecordsExistKey
CDPChannelTTSUPayloadiCloudKeychainEnabledKey
v28@?0i8@"NSDictionary"12@"NSDictionary"20
v32@?0@"NSDictionary"8@"NSDictionary"16@?<v@?i@"NSDictionary"@"NSDictionary">24
com.apple.CoreCDP.EscrowRecovery
icscRecoveryDeviceCount
totalRemainingAttempts
icscRecoveryStatus
metadata
ClientMetadata
recordID
kSecureBackupEscrowedSPKIKey
SecureBackupMetadataTimestamp
v24@?0Q8@"NSError"16
B24@?0@"CDPDevice"8@"NSDictionary"16
v32@?0@"CDPDevice"8Q16^B24
v32@?0@"CDPDevice"8@"NSError"16^B24
unknown
UNKNOWN-%0000x
com.apple.cdpd.escrow-repair.svc
com.apple.cdpd.escrow-repair.label.last-attempt-date
v28@?0Q8B16@"NSError"20
com.apple.cdpd.silent-escrow-record-repair
v32@?0Q8B16B20@"NSError"24
q24@?0@"OTEscrowRecord"8@"OTEscrowRecord"16
v24@?0@"NSArray"8@"NSError"16
com.apple.security.trustedpeers.container
v24@?0@"CDPDevice"8@"NSError"16
v32@?0@"OTEscrowRecord"8Q16^B24
B24@?0@"CDPDevice"8@16
com.apple.CoreCDP.adp.statusChange
statusChange
com.apple.cdpd.circleRequestQueue
com.apple.cdpd.retryQueue
v24@?0@"CDPDCircleJoinResult"8@"NSError"16
v24@?0B8B12@"NSError"16
B16@?0^@8
v24@?0@"CDPLocalSecret"8@"NSError"16
v32@?0@"<CDPDAuthListener>"8Q16^B24
v24@?0@"NSString"8@"NSError"16
ICSC_ENTRY_MULTIPLE_INCORRECT_TITLE
ICSC_ENTRY_MULTIPLE_INCORRECT_MESSAGE
-[CDPDRecoveryKeyValidatorImpl confirmRecoveryKey:completion:]
CDPDRecoveryKeyValidatorImpl.m
device_name
device_model
device_model_version
device_model_class
device_color
device_enclosure_color
device_platform
device_mid
RetryCount
com.apple.corecdp
RetryDelay
SimulateNonViableEscrowRecord
SimulateEPThrottle
en_US_POSIX
dd-MM-yyyy HH:mm:ss
yyyy-MM-dd HH:mm:ss
B24@?0@"CDPDevice"8Q16
ForceRecoveryKeySupport
ForceUseCachedSecret
ForceCachedSecretPurge
-[CDPDSecureBackupController _authenticatedEnableSecureBackupWithContext:completion:]
CDPDSecureBackupController.m
unlockType == MCUnlockScreenSimple || simplePasscodeType == MCNotSimplePasscode
v24@?0@"AKAnisetteData"8@"NSError"16
DeviceColor
DeviceEnclosureColor
no escrow records found
chosen record is empty
< REDACTED >
< array with %lu items >
< dictionary with %lu keys >
userDisabledICK
Localizable-Walrus
OfflineLocalSecretChange
RepairCDPState
RegenerateCDPRecoveryKey
SecureTerms
ConfirmExistingSecret
com.apple.cdp.repair.continue
com.apple.cdp.repair.recoverykey
com.apple.cdp.offlinesecret.continue
com.apple.cdp.offlinesecretcreate.continue
com.apple.cdp.secureterms.continue
com.apple.cdp.confirmexistingsecret.continue
com.apple.cdp.dismissfollowup
com.apple.purplebuddy.revisitSkippedSteps
flowSkipIdentifiers
faceID
touchID
prefs:root=SETUP_FINISH&flow=%@
CONFIRM_NEW_SECRET_FOLLOWUP_ITEM_TITLE
CONFIRM_NEW_SECRET_FOLLOWUP_ITEM_INFORMATIVE
CONFIRM_NEW_SECRET_FOLLOWUP_NOTIFICATION_TITLE
CONFIRM_NEW_SECRET_FOLLOWUP_NOTIFICATION_INFORMATIVE
CONFIRM_NEW_SECRET_FOLLOWUP_NOTIFICATION_ACTIVATE_LABEL
SECURE_TERMS_FOLLOWUP_ITEM_TITLE
SECURE_TERMS_FOLLOWUP_ITEM_INFORMATIVE
SECURE_TERMS_FOLLOWUP_NOTIFICATION_INFORMATIVE
SECURE_TERMS_FOLLOWUP_NOTIFICATION_ACTIVATE_LABEL
FOLLOWUP_VERIFY_PASSCODE
CONFIRM_EXISTING_SECRET_FOLLOWUP_NOTIFICATION_ACTIVATE_LABEL
CONFIRM_EXISTING_SECRET_FOLLOWUP_ITEM_TITLE
CONFIRM_EXISTING_SECRET_FOLLOWUP_ITEM_INFORMATIVE
CONFIRM_EXISTING_SECRET_FOLLOWUP_NOTIFICATION_TITLE
CONFIRM_EXISTING_SECRET_FOLLOWUP_NOTIFICATION_INFORMATIVE
FOLLOWUP_VERIFY_PASSCODE_TITLE
FOLLOWUP_VERIFY_PASSCODE_MESSAGE
FOLLOWUP_VERIFY_PASSCODE_NOTIFICATION_TITLE
FOLLOWUP_VERIFY_PASSCODE_NOTIFICATION_MESSAGE
FOLLOWUP_CREATE_PASSCODE_TITLE
FOLLOWUP_CREATE_PASSCODE_MESSAGE
FOLLOWUP_CREATE_PASSCODE_NOTIFICATION_TITLE
FOLLOWUP_CREATE_PASSCODE_NOTIFICATION_MESSAGE
FOLLOWUP_CREATE_PASSCODE
FOLLOWUP_CREATE_PASSCODE_BUTTON_PRIMARY
FOLLOWUP_VERIFY_PASSCODE_BUTTON_DISMISS
TRUST_FOLLOWUP_ITEM_TITLE
TRUST_FOLLOWUP_NOTIFICATION_TITLE
TRUST_FOLLOWUP_ITEM_INFORMATIVE
TRUST_FOLLOWUP_NOTIFICATION_INFORMATIVE
SKIPPED_FOLLOWUP_ITEM_TITLE
SKIPPED_FOLLOWUP_ITEM_INFORMATIVE
SKIPPED_FOLLOWUP_NOTIFICATION_TITLE
SKIPPED_FOLLOWUP_NOTIFICATION_INFORMATIVE
FOLLOWUP_JOIN_CDP_TITLE
FOLLOWUP_JOIN_CDP_MESSAGE
FOLLOWUP_JOIN_CDP_NOTIFICATION_TITLE
FOLLOWUP_JOIN_CDP_NOTIFICATION_MESSAGE
FOLLOWUP_JOIN_CDP
TRUST_FOLLOWUP_NOTIFICATION_ACTIVATE_LABEL
RECOVERY_KEY_REPAIR_TITLE
RECOVERY_KEY_REPAIR_INFORMATIVE
RECOVERY_KEY_REPAIR_NOTIFICATION_TITLE
RECOVERY_KEY_REPAIR_FOLLOWUP_NOTIFICATION_INFORMATIVE
RECOVERY_KEY_REPAIR_FOLLOWUP_NOTIFICATION_ACTIVATE_LABEL
D2DENCRYPTION_FOLLOWUP_FACEID_TITLE
D2DENCRYPTION_FOLLOWUP_FACEID_INFOTEXT
D2DENCRYPTION_FOLLOWUP_TOUCHID_TITLE
D2DENCRYPTION_FOLLOWUP_TOUCHID_INFOTEXT
D2DENCRYPTION_FOLLOWUP_ACTION
com.apple.CoreCDPUI.CDPFollowUpExtension
LAContext
/System/Library/Frameworks/LocalAuthentication.framework/LocalAuthentication
com.apple.notifyd.matching
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.distnoted.matching
UserInfo
X-MMe-Client-Info
%@:%@
true
false
X-Apple-Account-Recovery
Basic %@
Authorization
ACCOUNT_RECOVERY_SOFT_LIMIT_REACHED_TITLE
ACCOUNT_RECOVERY_SOFT_LIMIT_REACHED_MESSAGE
GENERIC_ERROR_DEFAULT_BUTTON
ACCOUNT_RECOVERY_HARD_LIMIT_REACHED_TITLE
ACCOUNT_RECOVERY_HARD_LIMIT_REACHED_MESSAGE_GLOBAL
START_ACCOUNT_RECOVERY_BUTTON
ACCOUNT_RECOVERY_HARD_LIMIT_REACHED_MESSAGE_SINGLE
ACCOUNT_RECOVERY_HARD_LIMIT_REACHED_MESSAGE_MULTI
com.apple.cdp.cfu-dismiss
KEYCHAIN_FOLLOWUP_INTERNAL_BLAME
v16@?0@"NSNotification"8
v24@?0@"CDPUpdateDataPrivacyContext"8@"NSError"16
com.apple.cdp.walrus.status.repair
com.apple.cdp.walrus.status.update
com.apple.cdp.walrus.status.update.post-enable-actions
v24@?0q8@"NSError"16
FakeDepletedRecords
v16@?0@"CDPStateHandlerResult"8
v24@?0@"AKInheritanceAccessKey"8@"NSError"16
com.apple.cdpd.beneficiaryTrustQueue
failure
success
-[CDPDStateMachine shouldPerformRepairWithOptionForceFetch:completion:]
v24@?0@"CDPEscrowRecordReport"8@"NSError"16
personID
com.apple.cdp.escrowRecoverability.reporting
com.apple.cdp.escrowRecovery.reporting
recovery key...
local secret...
DisableAsyncEnable
com.apple.cdp.async-enable-post-recovery
com.apple.cdp.async-enable
CoreCDP-user-elected
root
com.apple.CoreCDP.LocalSecret
LocalSecretResult
didChangeLocalSecret
didRemoveLocalSecret
com.apple.CoreCDP.adp.userChoice
userChoice
https://setup.icloud.com/configurations/init?context=settings
urls
getRecoverySettings
escrowProxyUrl
iCloudEnv
com.apple.Dataclass.KeychainSync
com.apple.mobileme
CDPSecureBackupURLSession
en-us
Accept-Language
application/xml
Accept
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
<CDPDSecureBackupContext: local: %@ remote: %@ preRecord: %@>
REMOTE_SECRET_ENTRY_RECOVERY_ERROR_TITLE
GENERIC_ERROR_ICLOUD_CONNECTION_MESSAGE
com.apple.CoreCDP.EscrowRepair
context
wasSilentEscrowRecordRepairAttempted
didSilentEscrowRecordRepairSucceed
deviceEscrowRecordState
escrowRecordFetchSource
v24@?0@"NSData"8@"NSError"16
com.apple.cdpd._startListeningWithProxy
v32@?0@"NSData"8^@16^@24
v24@?0@"AKCircleRequestPayload"8@"NSError"16
com.apple.appleaccount.adp.row.show
com.apple.appleaccount.adp.row.tap
com.apple.appleaccount.adp.detail.action
accountCountryCode
accountCleanupState
cdpState
isPrimary
isRepairSuccessful
repairErrorCode
deviceRegionCode
fetchUserInfoErrorCode
8olRm6C1xqr7AJGpLRnpSw
HV7WDiidgMf7lwAu++Lk5w
CDPDNetworkObserver Event Queue
v32@?0@8@16^B24
com.apple.CoreCDP.BackupRecovery
backupRecoveryResult
backupRecoveryThroughRemoteSecretDidSucceed
backupRecoveryThroughRemoteSecretDidSucceedWithoutLocalSecret
backupRecoveryThroughRemoteSecretDidCancel
backupRecoveryThroughRemoteSecretDidReset
backupRecoveryThroughRemoteSecretDidFail
joinMethod
attemptedMethods
availableMethods
escrowDeviceCount
callingProcessBundleID
CDPDTermsInfoBackupController
CDPDCircleStateObserver
CDPDXPCEventListener
NSObject
CDPDAccountRecoveryValidator
CDPRecoveryKeyValidatorInternal
CDPDRecoveryFlowController
CDPDDeviceSecretValidatorDelegate
CDPKeychainItemDescriptor
CDPCAICSCRecoverabiltyReporter
CDPDXPCListener
NSXPCListenerDelegate
CDPBroadcaster
CDPDRemoteSecretValidationResult
CDPDBackupIDMSResultsParser
CDPDBackupRecoveryResultsParser
Daemon
CDPDRecoveryValidatedJoinFlowController
CDPDRemoteDeviceSecretValidatorDelegate
CDPPiggybackingPayloadProvider
CDPKeychainCircleProxy
CDPDPCSController
CDPAuthenticationHelper
CDPDSecureBackupProxyImpl
CDPDSecureBackupProxy
CDPRecoveryKeyCache
CDPCAEscrowReporter
CDPDOctagonTrustProxyImpl
CDPDOctagonTrustProxy
CDPCAEscrowRecoveryInfo
CDPDAuthProxyImpl
CDPDAuthProviderInternal
CDPDLocalDeviceSecretProxyImpl
CDPLocalDeviceSecretProxy
CDPDRecoveryOption
Authentication
SecureBackup
CDPDCircleJoinResult
CDPCAReporter
CDPTTSUChannel
CDPSecureChannelProxy
CDPSecureChannelApprovingProxy
CDPCAICSCRecoveryReporter
CDPDRemoteDeviceSecretValidator
CDPWalrusDaemonService
CDPDBackupInfoRecoveryFlowController
Metadata
CDPDEscrowRecordController
CDPDCircleDelegate
CDPDSecureBackupDelegate
Encryption
CDPCAWalrusReporter
CDPWalrusSecurityProxyImpl
CDPWalrusSecurityProxy
CDPDCircleController
CDPCAADPOnAppearReporter
CDPDLocalSecretController
CDPDAuthObserver
CDPDRecoveryKeyController
CDPDRecoveryKeyValidatorInternalDelegate
CDPDDeviceSecretValidator
CDPRemoteDeviceSecretValidatorProtocolInternal
CDPDataPrivacyAppleAccountProxy
CDPAppleAccountProxy
CDPDRecoveryKeyValidatorImpl
CDPDSecureBackupController
CDPDAccount
CDPDFollowUpFactory
CDPDXPCEventObserver
CDPDBackupFMIPResultsParser
CDPDBackupIDMSErrorProvider
CDPDFollowUpController
CDPDAuthListener
CDPInternalDataPrivacyController
CDPDClientHandler
CDPDaemonProtocol
CDPInternalWalrusStateController
CDPDStateMachine
CDPCACommonRecoveryReporter
CDPStateHandlerResult
CDPCAADPOnRowSelectReporter
Archive
CDPDSecureChannelContext
CDPCALocalSecretReporter
CDPCAWalrusUserChoiceReporter
CDPDSecureBackupConfiguration
CDPDLockAssertion
CDPDKeychainSync
CDPDSecureBackupContext
CDPCAADPDetailActionReporter
CDPDBackupErrorProviderImpl
CDPDBackupRecoveryErrorProvider
CDPCAEscrowRepairReporter
CDPDSecureChannelController
CDPDLocalSecretFollowUpProviderImpl
CDPLocalSecretFollowUpProvider
CDPPiggybackingChannel
CDPMobileGestaltWrapper
CDPDeviceCapabilityProvider
CDPDNetworkObserverClient
CDPDNetworkObserver
CDPCABackupRecoveryReporter
CDPTTSUPayloadProvider
T@"CDPContext",&,N,V_cdpContext
AESGCM256DecryptedDataWithSymmetricKey:
TB,V_requiresEscrowRecordsFetch
CDPRecordContextToDictionary:
_clique
T@"<CDPAppleAccountProxy>",&,N,V_appleAccountInterface
_device
T@"<CDPDAuthProviderInternal>",&,N,V_authKitInterface
_escrowProxyURL
T@"<CDPDBackupRecoveryErrorProvider>",&,N,V_errorProvider
_failedAttempts
T@"<CDPDCircleProxy>",&,N,V_circleProxy
_handleDelegateValidationError:
T@"<CDPDDeviceSecretValidatorDelegate>",W,N,V_delegate
_populateWalrusStatusOnContext:
T@"<CDPDOctagonTrustProxy>",&,N,V_octagonTrustProxy
_processAuthFailure:completion:
T@"<CDPDOctagonTrustProxy>",R,N,V_octagonTrustProxy
_recoverySecret
T@"<CDPDSecureBackupProxy>",&,N,V_sbProxy
_retryIntervals
T@"<CDPDSecureBackupProxy>",&,N,V_securityInterface
_shouldContinueAfterRecoveryOptionsCheckWithContext:completion:
T@"<CDPKeychainCircleProxy>",&,N,V_keychainCircleProxy
_supportsFaceID
T@"<CDPProtectedCloudStorageProxy>",&,N,V_pcsProxy
accountInfoFetchSetupDictionary
T@"<CDPSecureChannelProxy>",&,N,V_secureChannelProxy
allKeys
T@"<CDPStateUIProviderInternal>",R,N,V_uiProvider
appleID
T@"AAFKeychainManager",R,N,V_keychainManager
clearFollowUpWithContext:error:
T@"CDPContext",&,N,V_context
containsObject:
T@"CDPDCircleController",&,N,V_circleController
contextForConfirmExistingSecret
T@"CDPDCircleJoinResult",&,N,V_circleJoinResult
dataWithLength:
T@"CDPDSecureBackupConfiguration",&,N,V_configuration
dealloc
T@"CDPDSecureBackupController",R,N,V_secureBackupController
deviceViability
T@"CDPInternalWalrusStateController",&,N,V_walrusStateController
enableWithInfo:completionBlock:
T@"CDPRecoveryFlowContext",&,N,V_recoveryContext
globalHardLimitErrorWithRecord:
T@"NSArray",&,N,V_recoveryRecords
hasRecordStatus
T@"NSDictionary",C,N,V_recoveredInfo
initWithSecureBackupRecordInfo:
T@"NSError",&,V_error
isCoolDownError
T@"NSString",&,N,V_preRecordUUID
isEligibleForCDPWithCompletion:
T@"NSString",C,N,V_localizedRecoveryOption
isProxy
T@"NSString",C,N,V_recoverySecret
keychainManager
T@"NSString",R,C
localizedString
T@"NSXPCListener",&,N,V_listener
needInitialSync
T@?,C,N,V_recoveryHandler
options
T@?,C,V_eventHandler
payload
TB,N,V_attemptedCDPEnable
recordViability
TB,N,V_didSilentEscrowRecordRepairSucceed
recoveredClique
TB,N,V_isSimulateNonViableEscrowRecordEnabled
recoveryHandler
TB,N,V_nonViableRequiresRepair
release
TB,N,V_recoveryKeyVerified
saveTermsAcceptance:completion:
TB,N,V_simulateEPThrottle
TB,N,V_usePreviouslyCachedRecoveryKey
setApproveriCloudKeychainState:
TB,N,V_userDidCancel
setCircleProxy:
TB,N,V_wasSilentEscrowRecordRepairAttempted
setDeviceCount:
TB,V_didJoin
setRecoveryKey:
TB,V_hasPeersWithCDPBackupRecords
setUrl:
TB,V_requiresInitialSync
setWithObjects:
TQ,N
stopObservingCircleStatusChange
TQ,N,V_deviceEscrowRecordState
validatedSecret
TQ,N,V_secretType
.cxx_destruct
TB,V_cloudDataProtectionEnabled
AESGCM256EncryptedDataWithSymmetricKey:
_allowFollowUps
T#,R
_clock_timebase
T@"<CDPAuthProviderInternal>",&,N,V_recoveryAuthProvider
_entryLimitSignInBodyForDevice:
T@"<CDPDAuthProviderInternal>",&,N,V_internalAuthProvider
_eventListeners
T@"<CDPDBackupRecoveryResultsParser>",&,N,V_resultParser
_fetchConfigurationWithRequest:
T@"<CDPDCircleProxy>",R,N,V_circleProxy
_pairingChannel
T@"<CDPDOctagonTrustProxy>",&,N,V_octagonProxy
_predicateForRecordUpgradeCheck
T@"<CDPDOctagonTrustProxy>",&,N,V_otProxy
_recoveryErrors
T@"<CDPDSecureBackupDelegate>",W,N,V_delegate
_removeObserver
T@"<CDPDSecureBackupProxy>",&,N,V_secureBackupProxy
_sharingSession
T@"<CDPDSecureBackupProxy>",R,N,V_secureBackupProxy
_silentRecovery
T@"<CDPLocalSecretFollowUpProvider>",&,N,V_followUpProvider
_usePreviouslyCachedRecoveryKey
T@"<CDPRemoteDeviceSecretValidatorProtocol>",&,N,V_validator
addDeviceClass:
T@"<CDPStateUIProviderInternal>",&,N,V_uiProvider
altDSID
T@"AAFKeychainManager",&,N,V_keychainManager
backupRecoveryDidFailWithError:
T@"CDPContext",&,N
clientErrorCode
T@"CDPContext",R,N,V_context
context
T@"CDPDCircleController",R,N,V_circleController
contextForOfflinePasscodeChange
T@"CDPDPCSController",&,N,V_pcsController
dateFromString:
T@"CDPDSecureBackupController",&,N,V_secureBackupController
deleteLocalSecretChangeFollowUp
T@"CDPDevice",C,N,V_device
didJoin
T@"CDPLocalSecret",C,N,V_cachedSecretForReenrollment
enabled
T@"CUMessageSession",&,N,V_sharingSession
hasRandomSecret
T@"NSDictionary",&,N,V_cachedAccountInfo
informativeText
T@"NSError",&,N,V_error
initialMessage:
T@"NSObject<CDPDCircleDelegate>",W,N,V_delegate
isCurrentDevice
T@"NSString",C,N,V_localSecret
isInternalBuild
T@"NSString",C,N,V_recoveryKey
isWalrusEnabled
T@"NSString",C,N,V_validSecret
localSecretType
T@"NSString",R,C,N
machAbsoluteTimeToTimeInterval:
T@"OTClique",&,N,V_recoveredClique
numberWithBool:
T@?,C,N,V_validSecretHandler
otProxy
TB,N
pcsIdentitySetupWithInfo:error:
TB,N,V_didForceEscrowCache
recoverAndSynchronizeSquirrelWithContext:uiProvider:completion:
TB,N,V_fakeNearlyDepletedRecords
recoveryContext
TB,N,V_isUsingMultipleICSC
recoveryRecords
TB,N,V_octagonCapableRecordsExist
removeObserver:
TB,N,V_silentRecovery
sbProxy
TB,N,V_synchronous
setAccessGroup:
TB,N,V_usePreviouslyCachedSecret
setCachedSecretForReenrollment:
TB,N,V_userDidReset
setCountryCode:
TB,R,N
setLocalSecret:
TB,V_hasPeersForRemoteApproval
setSynchronous:
TB,V_needsBackupRecovery
setValidSecret:
TB,V_shouldCompleteSignIn
simplePublicKey
TQ,N,V_context
upgradeICSCRecordsThenEnableSecureBackupWithContext:completion:
TQ,N,V_localSecretType
version
TQ,N,V_walrusStatus
TQ,N,VsupportedEscapeOfferMask
TQ,R
TQ,R,N
TQ,V_circleStatus
TQ,V_peeriCloudKeychainState
TQ,V_remotePeeriCKState
TQ,V_walrusStatus
Tq,N,V_deviceCount
Tq,N,V_icscRepairRetryDelay
Tq,N,V_icscRepairTotalRetries
Tq,N,V_maxRecoveryAttempts
Tq,N,V_recoveryOptionIndex
Tq,N,V_totalRecoveryAttempts
URLWithString:
UTF8String
UUID
UUIDString
__eventNameForTesting
_accountInfo:
_accountResetRecoveryOptionWithCompletion:
_accountSettingsLock
_accountStore
_allowDataRecovery
_allowRecoveryKey
_allowStateMachineAccess
_allowUtilityAccess
_allowWalrusAccess
_allowWalrusPCSKeysAccess
_altDSID
_alwaysCreateEscrowRecord
_appleAccountInterface
_approverBackupRecordsExist
_approveriCloudKeychainState
_attemptBackupRecoveryByPromptingForRemoteSecretWithLocalSecret:localSecretType:useCachedSecret:circleJoinResult:completion:
_attemptBackupRecoveryWithLocalSecret:type:useCachedSecret:circleJoinResult:completion:
_attemptBeneficiaryTrustWithInheritanceKey:retryCount:completion:
_attemptCDPEnable:
_attemptCustodianBackupRecoveryWithInfo:result:ignoreBackups:completion:
_attemptToEscrowPreRecord:completion:
_attemptToRecoverDevice:withSecret:completion:
_attemptToRecoverWithRecoveryKey:completion:
_attemptedCDPEnable
_attemptedMethods
_authContextForContext:
_authContextFromCDPContext:
_authKitInterface
_authListeners
_authProvider
_authWithContext:completion:
_authenticatedEnableSecureBackupWithContext:completion:
_authenticatedRepairCloudDataProtectionStateWithCompletion:
_authenticatedShouldPerformRepairWithOptionForceFetch:completion:
_availableMethods
_backupController
_baseFollowUpItemWithContext:
_baseFollowUpNotificationWithContext:
_beginSilentEscrowRecordRepairWithState:completion:
_beneficiaryTrustQueue
_broadcastNotificationName:userInfo:
_buildSecureBackupTermsInfo:
_cachedAccountInfo
_cachedSecretForReenrollment
_cancelRecoveryOptionWithCompletion:
_cdpAccount
_cdpContext
_cdpDaemonAccount
_cdpErrorFromAuthKitError:
_cdpStateMachine
_checkAllRecordsForCurrentDeviceUsingCache:completion:
_checkAllRecordsForDeviceMatchingPredicate:source:completion:
_checkiCDPStatusNetwork:withCompletion:
_circleChangeToken
_circleController
_circleJoinObserver
_circleJoinResult
_circleObservers
_circleProxy
_circleStatus
_clearLastEscrowRepairAttemptDate:
_clientMetadataWithSecretType:length:
_clientType
_clientTypeForBundleID:
_clientTypeForConnection:
_clientsByUUID
_clientsLock
_cliqueStatusRetryCount
_cloudDataProtectionEnabled
_collectLocalSecretWithCompletion:
_combinedCircleStatusUsingCache:error:
_complete
_configuration
_configurationInfoURLRequest
_configurationRequestWithURLString:
_configurationURLs
_configureConfirmExistingSecretFollowUpItem:
_configureRepairFollowUpItem:
_configureWalrusConfirmExistingSecretFollowUpItem:
_configureWalrusRepairFollowUpItem:
_confirmCDPEligibilityWithCompletion:
_confirmExistingSecretFollowUpAction
_connection
_connection:hasEntitlement:
_context
_contextForPrimaryAccount
_contextForPrimaryAccountSilentAuth
_contextSetupDictionary
_continueSilentEscrowRecordRepairWithState:completion:
_createContextForSecret:withCompletion:
_createPasscodeDismissNoteFollowUpAction
_createPasscodeFollowUpAction
_createPasscodeNoteFollowUpAction
_currentAnisetteData
_currentDevice
_dateWithSecureBackupDateString:
_decoratedDelegate
_defaultUserVisibleViewSet
_delegate
_deleteAllBackupRecordsWithCompletion:
_deleteSingleICSCBackupWithCompletion:
_depletedRemainingAttempts
_determineEligibilityForSilentRepairWithCompletion:
_deviceCapabilityProvider
_deviceCheckForDataPrivacyDidCompleteWithContext:devicesLosingAccountAccess:deviceListFetchError:finalCompletion:
_deviceCount
_deviceEscrowRecordState
_deviceEscrowRecordStateUsingCache:completion:
_didEnableDataPrivacyOnAuthKitWithContext:enableError:finalCompletion:
_didEnableDataPrivacyOnSecurityWithContext:enableError:finalCompletion:
_didFinishCheckingForRecoveryOptionsWithContext:completion:
_didForceEscrowCache
_didJoin
_didSilentEscrowRecordRepairSucceed
_disableAsyncModeRequested
_disableAsyncSecureBackupEnrollment
_disableRecoveryKey:
_disableRecoveryKeyWithCompletion:
_disableSecureBackup:
_disableThenEnableWithInfo:error:
_eligibleAccountWithContext:checkWithServer:requireCKAccount:error:
_eligiblePrimaryAccountForFlow:error:
_enableCDPWithCompletion:
_enableCustodianRecoveryIfAvailableForContext:
_enableKVSForAccount:store:completion:
_enableSecureBackupWithCircleJoinResult:completion:
_enableSecureBackupWithContext:completion:
_enrollOrDisableCDPAfterEnabledStateVerified:
_entitlements
_entryLimitNoResetForRepairForDevice:
_entryLimitRecoveryKeyAvailableBodyForDevice:
_entryLimitResetAvailableBodyForDevice:
_entryLimitTitleForDevice:
_error
_errorProvider
_escapeOfferForDevices:
_escapeOfferForDevices:remoteApproval:forMultipleICSC:
_escrowConfigurationBag
_escrowConfigurationBagFull
_escrowConfigurationURLs
_escrowDeviceCount
_escrowProxyConfigurationURL
_escrowProxyConfigurationURLRequest
_escrowRecordStateForDevice:usingCache:completion:
_eventHandler
_eventName
_eventQueue
_failedRecoveryKeys
_failedSecrets
_failedSecretsForDevice:
_failedSingleICSCs
_fakeNearlyDepletedRecords
_fallbackRecoveryOptionWithCompletion:
_fetchAllEscrowRecordsFromSource:completion:
_fetchConfigurationDictionary
_fetchEscrowConfigurationBag
_fetchKeyForPCSIdentityRef:
_followUpActionForRecoveryKeyRepair
_followUpActionForRepair
_followUpController
_followUpControllerForContext:
_followUpFactory
_followUpForConfirmExistingSecretWithContext:
_followUpForOfflineSecretChangeWithContext:
_followUpForRecoveryKeyRepairWithContext:
_followUpForRepairWithContext:
_followUpForSecureTermsWithContext:
_followUpForSettingUpBiometricsWithContext:
_followUpItemForWalrusCreatePasscodeWithContext:
_followUpProvider
_forceReset
_getBackupRecordDevicesIncludingUnrecoverableRecords:
_getOctagonEscrowBackupRecordDevicesWithOptionForceFetch:completion:
_getOrSetupIdentitySetRef:
_handleBeneficiaryTrustWithCompletion:
_handleCloudDataProtectionStateWithCompletion:
_handleCompletionStatus:preRecord:
_handleHardLimitErrorForCurrentContextWithDevice:completion:
_handleInteractiveRecoveryFlowWithCircleJoinResult:completion:
_handleJoinResult:completion:
_handleLimit:forDevice:completion:
_handleMultiCSCRecoveryFailureForDevice:recoveryError:secret:
_handleMultiCSCRecoveryResults:clique:type:secret:device:completion:
_handlePreflightError:completion:
_handleRecoveryFailureForFinalDevice:completion:
_handleSoftLimitErrorForCurrentContextWithDevice:completion:
_handleiCDPStatusCheckError:completion:
_hardLimitErrorBodyWithDevice:
_hardLimitUserInfoForDevice:
_hasPeersForRemoteApproval
_hasPeersWithCDPBackupRecords
_iCloudEnvironment
_icscRepairRetryDelay
_icscRepairTotalRetries
_infoDictionaryWithTitle:andBody:
_inheritanceTrustController
_initTime
_internalAuthProvider
_isAttemptingRecovery
_isBiometricAuthEnrolled
_isBiometricCapable
_isEligibleForEscrowRecordOperationsWithError:
_isEscrowRecordRepairPermitted
_isFailedSecret:forDevice:
_isICDPEnabledForDSID:checkWithServerFirst:
_isICloudKeychainDisabledByManagementProfile
_isInvalidICSCError:
_isManateeAvailable
_isManateeAvailableForAltDSID:
_isObserving
_isSimulateNonViableEscrowRecordEnabled
_isThisDeviceInCircle
_isUsingMultipleICSC
_isWaitingForRemoteApproval
_isWalrusEnabled
_joinCircleFallbackWithResult:ignoreBackups:completion:
_joinCircleIgnoringBackups:completion:
_joinMethod
_keychainCircleProxy
_keychainManager
_lastEscrowRepairAttemptDate:
_lastEscrowRepairAttemptDateDescriptor
_listener
_localSecret
_localSecretChangedTo:secretType:completion:
_localSecretType
_localizedRecoveryOption
_localizedStringForKey:
_maxRecoveryAttempts
_needsBackupRecovery
_networkIsReachable
_networkReach
_networkReachabilityDidChangeWithFlags:
_nonViableRequiresRepair
_notificationName
_notificationObject
_octagonCapableRecordsExist
_octagonProxy
_octagonTrustProxy
_offlineSecretChangeFollowUpAction
_optionsWithContext:
_otProxy
_pcsController
_pcsProxy
_peerDeviceNamesByPeerID
_peeriCloudKeychainState
_performInteractivelyAuthenticatedRepair:
_performRecoveryWithContext:uiProvider:authProvider:errorProviuder:resultParser:secureBackUpController:completion:
_performSilentEscrowRecordRepairWithCompletion:
_performSilentlyAuthenticatedRepair:
_performSingleiCSCRecoveryWithSecret:type:completion:
_populateUserInfo:recoveryIndexHandlers:withRecoveryOption:
_postRecoveryEnableSecureBackupWithContext:completion:
_preRecordUUID
_predicateForRecordUpgradeCheckIgnoringBottled
_predicateForRecordWithPeerID:
_predicateForRepair
_preflightAccountStateWithContext:completion:
_preflightCircleStatusWithCompletion:
_prevailingSecret
_printableAccountInfo:
_processAndReplyWithMessage:completion:
_randomDataGeneratorWithNumberOfBytes:
_reauthenticateAndCheckiCDPStatusWithNetwork:completion:
_recoverBackupDictionaryWithContext:error:
_recoverSecureBackupWithCircleJoinResult:completion:
_recoveredClique
_recoveredInfo
_recoveryAuthProvider
_recoveryContext
_recoveryHandler
_recoveryInfoDictionaryFromContext:
_recoveryKey
_recoveryKeyVerified
_recoveryListFromDevices:
_recoveryOptionIndex
_recoveryRecords
_refreshAndAuthenticateWithContext:
_remotePeeriCKState
_repairWithStateMachine:completion:
_replyContextWithPakeData:
_reportCDPJoinMetricsWithContext:didJoin:withError:
_reportData
_reportEscrowRecoverabilityAnalytics
_reportEscrowRecoveryAnalyticsWithRecoveryState:resetState:didError:
_reporterWithContext:state:usingCache:error:
_requestCircleJoinWithObserver:requestBlock:completion:
_requestSynchronizationQueue
_requestToJoinAfterRestoreAndWaitForSuccessWithHandler:
_requestToJoinAndWaitForSuccessWithHandler:
_requestToJoinCompletion
_requestToJoinWithObserver:completion:
_requestToJoinWithRequestBlock:completion:
_requiresEscrowRecordsFetch
_requiresInitialSync
_resetAccountCDPStateWithCompletion:
_resetDataErrorForCurrentContextWithRecoveryIndexMap:
_resetProtectedDataErrorUnrecoverable
_resultParser
_retryQueue
_retryRepairWithContext:retryCount:completion:
_sanitizedInfoDictionary:
_sbProxy
_secretType
_secureBackupController
_secureBackupProxy
_secureChannelContext
_secureChannelProxy
_secureTermsFollowUpAction
_securityInterface
_securityProxy
_sentInitialResponse
_session
_setContextWithAuthResults:
_setKeychainSyncState:
_setLastEscrowRepairAttemptDate:error:
_setPassword:
_setProxiedAppBundleID:
_setProxiedAppName:
_setupConfigurationURLs
_setupDarwinListener
_setupDistributedListener
_shoudAllowKeyFetchForService:
_shouldAcceptNewConnectionWithEntitlements:
_shouldCompleteSignIn
_shouldContinueAfterPrimaryAccountCheckWithContext:completion:
_shouldPerformSilentEscrowRecordRepairUsingCache:completion:
_shouldPerformSilentRepairForEscrowRecordState:
_showAccountResetConfirmationWithCompletion:
_showAccountResetConfirmationWithoutRecovery:
_showEntryLimitError:withRecoveryOptionHandlers:defaultIndex:completion:
_silentReauthWithCompletion:
_simulateEPThrottle
_skipEscrowFetches
_skipSignInRecoveryOptionWithCompletion:
_softLimitErrorBodyForDevice:
_startListeningWithProxy:
_startObservingConnectionStateForRepairWithStateMachine:context:
_statusForError:
_supportsCustodianRecovery
_synchronous
_tlkRecoveryViewsForRecord:usingCache:completion:
_totalRecoveryAttempts
_uiProvider
_updateContext:withDevices:
_updateRecordRecoveryStatusForRecordDictionary:
_updateWalrusState:context:account:completion:
_usePreviouslyCachedSecret
_useSecureBackupCachedPassphrase
_userDidCancel
_userDidReset
_userInfoForLimit:withDevice:
_validSecret
_validSecretHandler
_validator
_walrusDaemonService
_walrusStateController
_walrusStatus
_walrusStatusForPrimaryAccountWithError:
_walrusStatusWithOptions:withError:
_wasSilentEscrowRecordRepairAttempted
aa_altDSID
aa_cloudKitAccount
aa_primaryAppleAccount
aaf_firstObjectPassingTest:
aaf_toBase64EncodedString
accountInfoWithCompletion:
accountInfoWithInfo:error:
accountProperties
accountPropertyForKey:
accountViability
activate
activityTypeString
addEntriesFromDictionary:
addNetworkObserverWithEventHandler:
addObject:
addObserverForName:object:queue:usingBlock:
addOrUpdateKeychainItem:error:
addSecretType:
altDSIDForPersonID:
analyticsReporter
anisetteDataWithCompletion:
anyPeerHasEnabledViewsInSet:error:
appleAccountForAltDSID:
appleAccountInterface
applyToJoinCircleWithJoinHandler:
approveFromAnotherDeviceWithCompletion:
approverBackupRecordsExist
approveriCloudKeychainState
archivedDataWithRootObject:requiringSecureCoding:error:
array
arrayWithCapacity:
arrayWithObjects:count:
attemptToEscrowPreRecord:completion:
attemptToEscrowPreRecord:context:completion:
attemptToEscrowPreRecord:preRecordUUID:secretType:context:completion:
attemptedCDPEnable
auditToken
augmentWithCredentialsFromContext:
authController
authKitAccountWithAltDSID:
authKitInterface
authToken
authenticateWithContext:completion:
authenticatedEnableSecureBackupWithRecoveryKey:error:
autorelease
backupActivity
backupRecordsArePresentWithCompletion:
backupRecoveryDidCancel
backupRecoveryDidReset
backupRecoveryDidSucceed
backupRecoveryDidSucceedWithoutLocalSecret
backupRecoverySetAttemptedMethod:
backupRecoverySetAvailableMethod:
backupRecoverySetJoinFromBundleID:
beginInteractiveRecoveryForDevices:isUsingMultipleICSC:usingValidator:
beginRecovery:
beginRecoveryWithCompletion:
beneficiaryIdentifier
boolValue
broadcastWalrusStateChange
broadcastWalrusStateChangeNotification
broadcastWebAccessStateChangeNotification
builderForKey:
builderForKey:inTable:
bundleID
bundleIdentifier
bundleWithURL:
bytes
cacheRecoveryKey:completionBlock:
cacheRecoveryKey:forAltDSID:error:
cacheRecoveryKeyWithCompletionBlock:
cachedAccountInfo
cachedCliqueStatus:
cachedLocalSecret
cachedLocalSecretType
cachedPassphraseMissing
cachedSecretForReenrollment
canEnableMultiUserManatee
canEvaluatePolicy:error:
canRetryCliqueStatus
canUpdateDataPrivacyStatusWithCompletion:
cancelApplicationToJoinCircle
cancelApproveFromAnotherDevice
cancelRemoteSecretValidatorApplicationToJoinCircle:
cancelValidationWithError:
cdpContext
cdpContext:beginRemoteApprovalWithValidator:completion:
cdpContext:performSilentRecoveryTokenRenewal:
cdpContext:persistMasterKeyVerifier:completion:
cdpContext:presentRecoveryKeyWithValidator:completion:
cdpContext:promptForAdoptionOfMultipleICSC:
cdpContext:promptForBeneficiaryAccessKeyWithCompletion:
cdpContext:promptForICSCWithIsNumeric:numericLength:isRandom:validator:
cdpContext:promptForInteractiveAuthenticationWithCompletion:
cdpContext:promptForLocalSecretWithCompletion:
cdpContext:promptForRecoveryKeyWithSecretValidator:completion:
cdpContext:promptForRecoveryKeyWithValidator:completion:
cdpContext:promptForRemoteSecretWithDevices:offeringRemoteApproval:validator:
cdpContext:showError:withCompletion:
cdpContext:showError:withDefaultIndex:withCompletion:
cdpContext:showResetCompletedAlertWithCompletion:
cdpContext:verifyMasterKey:completion:
cdpRecoveryFlowContext:promptForRemoteSecretWithDevices:validator:
cdp_addAuthHeaderWithContext:
cdp_addClientInfoHeader
cdp_errorWithCode:
cdp_errorWithCode:underlyingError:
cdp_errorWithCode:userInfo:
cdp_isCDPErrorWithCode:
cdp_isLoginHardLimit
cdp_isLoginSoftLimit
cdp_unarchivedRoot
checkAndRemoveExistingThenEnableSecureBackupRecordWithContext:completion:
checkForAnyOctagonRecord:
checkForExistingRecord:
checkForExistingRecordMatchingPredicate:forceFetch:completion:
checkForExistingRecordWithPeerId:completion:
checkIfAltDSIDIsBeneficiary:
checkiCDPStatusNetwork:withCompletion:
circleController
circleController:secureBackupRecordsArePresentWithCompletion:
circleJoinResult
circlePeerIDForSecureBackupController:
circleProxy
circleStatus
circleStatusChanged
circleViewStatusChanged
class
clearAccountInfoCache
clearFollowUpWithContext:completion:
clearPendingFollowUpItemsWithUniqueIdentifiers:error:
clientInfo
clientMetadata
cliqueConfiguration
cloudDataProtectionEnabled
code
combinedCachedCircleStatus:
combinedCircleStatus:
configuration
configurationWithContext:
configurationWithContext:andSession:
confirmRecoveryKey:completion:
conformsToProtocol:
contextForAccountWithAltDSID:
contextForController:
contextForPrimaryAccount
contextForStateRepair
contextForWalrusCreatePasscodeWithCDPContext:
contextToIdentifierMap
coolOffEnd
cooldownErrorWithUnderlyingError:
copy
count
countByEnumeratingWithState:objects:count:
countryCode
creationDate
currentConnection
currentDevice
custodianAvailableWithCompletion:
custodianEnabledForAccount:
custodianRecoveryInfo
dataPrivacyStatusWithCompletion:
dataTaskWithRequest:completionHandler:
dataUsingEncoding:
dataWithBytes:length:
date
dateByAddingTimeInterval:
dateWithTimeIntervalSince1970:
debugDescription
decodeObjectOfClasses:forKey:
defaultCenter
defaultSessionConfiguration
defaultStore
defaultWalrusStateController
delegate
deleteAllBackupRecordsWithCompletion:
deleteCache
deleteConfirmExistingSecretFollowUp
deleteCreatePasscodeFollowUp
deleteKeychainItemsForDescriptor:error:
deleteRecoveryKey:
deleteRecoveryKeyWithContext:uiProvider:completion:
deleteSingleICSCBackupWithCompletion:
description
desiresAllRecords
device
deviceClass
deviceColor
deviceCount
deviceEnclosureColor
deviceEscrowRecordRecoverableWithContext:completion:
deviceEscrowRecordState
deviceMid
deviceModel
deviceModelClass
deviceModelVersion
deviceName
devicePlatform
dictionary
dictionaryToCDPRecordContext:
dictionaryToEscrowAuthenticationInfo:
dictionaryToEscrowRecord:
dictionaryWithObjects:forKeys:count:
didAttemptEscrowPreRecord
didChangeLocalSecret
didChangeStatus:error:
didChangeUserChoice:error:
didForceEscrowCache
didJoinCircleAfterRecovery:
didRemoveLocalSecret
didSilentEscrowRecordRepairSucceed
disableDataPrivacyWithCompletion:
disableRecoveryKey:
disableRecoveryKeyWithCompletion:
disableSecureBackupWithCompletion:
disableWithCompletionBlock:
disableWithError:
disableWithInfo:completionBlock:
disableWithInfo:error:
dismissFollowUpWithIdentifier:completion:
domain
dsid
duplexSession
enableBackupWithRecoveryKey:completion:
enableCDPWithCompletion:
enableDataPrivacyWithContext:completion:
enableSecureBackupWithContext:completion:
enableSecureBackupWithRecoveryKey:completion:
enableWithCompletionBlock:
enableWithError:
enableWithInfo:error:
enabledDataclasses
endpoint
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
error
errorByExtendingUserInfoWithDictionary:
errorProvider
errorWithDomain:code:userInfo:
escrowAuthInfo
escrowInformationMetadata
escrowRecordToDictionary:
escrowURL
escrowedSpki
eventHandler
eventReceived:eventInfo:
eventReceived:eventValue:
exchangePacket:complete:error:
failedAttempts
fakeNearlyDepletedRecords
fetchAccountSettings:
fetchAllEscrowRecords:error:
fetchAllEscrowRecords:forceFetch:error:
fetchAllEscrowRecords:source:error:
fetchAllEscrowRecordsWithOptionForceFetch:completion:
fetchEscrowRecordDevicesWithContext:usingCache:completion:
fetchEscrowRecords:error:
fetchEscrowRecords:forceFetch:error:
fetchEscrowRecords:source:error:
fetchEscrowRecordsWithOptionForceFetch:completion:
fetchRecoveryKeyFromCacheForAltDSID:
fetchTermsAcceptanceForAccount:completion:
fetchUserControllableViewsSyncingEnabled:
fileURLWithPath:
filteredArrayUsingPredicate:
findMyiPhoneUUID
finishCyrusFlowAfterTermsAgreementWithContext:uiProvider:completion:
finishDecoding
finishOfflineLocalSecretChangeWithCompletion:
finishOfflineLocalSecretChangeWithContext:uiProvider:completion:
firstObject
followUpItemForIdentifier:userInfo:
followUpItemWithContext:
followUpProvider
followUpType
force
generateEscrowRecordStatusReportForContext:usingCache:withCompletion:
generateEscrowRecordStatusReportUsingCache:withCompletion:
generateEscrowRecordStatusReportUsingFetchSource:withCompletion:
generateNewRecoveryKey:
generateNewRecoveryKeyWithContext:uiProvider:completion:
generateRandomRecoveryKey:
generateRandomRecoveryKeyWithContext:completion:
generateRecoveryKey:
generateRecoveryKeyWithInfo:error:
generateVerifierWithRecoveryKey:error:
getAcceptedTermsForAltDSID:reply:
getAccountInfoWithError:
getBackupRecordDevicesWithOptionForceFetch:completion:
getDevicesLosingAccountAccessWithCompletion:
globalHardLimitError
guestMode
handleCDPDevices:
handleCloudDataProtectionStateWithCompletion:
handleCloudDataProtectionStateWithContext:uiProvider:completion:
handleHardLimitError:completion:
handleSoftLimitError:completion:
hardLimitErrorForRecord:
hasDisabledKeychainExplicitly
hasFullCDPSupport
hasLocalSecret
hasLocalSecretWithCompletion:
hasNonViewAwarePeers
hasNumericSecret
hasPeersForRemoteApproval
hasPeersWithCDPBackupRecords
hasRecordViability
hash
iCloudEnv
icloudVersion
icscRepairRetryDelay
icscRepairTotalRetries
identifier
identifierForContext:
idmsMasterKeyRecovery
idmsRecovery
init
initForReadingFromData:error:
initWithAccount:cdpdAccount:securityProxy:pcsProxy:
initWithAccount:cdpdAccount:securityProxy:pcsProxy:accountStore:
initWithAltDSID:
initWithAuthKitInterface:appleAccountInterface:securityInterface:
initWithAuthenticationResults:
initWithBytes:length:encoding:
initWithChannel:dataProvider:circleProxy:
initWithCircleProxy:
initWithClientIdentifier:
initWithConnection:entitlements:clientType:
initWithContext:
initWithContext:authProvider:octagonTrustProxy:
initWithContext:circleProxy:
initWithContext:circleProxy:octagonTrustProxy:secureBackupProxy:
initWithContext:connection:
initWithContext:delegate:
initWithContext:delegate:octagonTrustProxy:
initWithContext:pcsProxy:
initWithContext:secureBackupProxy:octagonTrustProxy:
initWithContext:uiProvider:
initWithContext:uiProvider:authProvider:
initWithContext:uiProvider:authProvider:circleProxy:secureBackupProxy:octagonTrustProxy:pcsProxy:
initWithContext:uiProvider:delegate:
initWithContext:uiProvider:secureBackupController:circleProxy:octagonProxy:
initWithContextData:
initWithData:encoding:
initWithDefaultValues
initWithDescriptor:value:
initWithEntitlements:
initWithEntitlements:walrusController:
initWithEscrowRecord:
initWithEscrowRecordMetadata:
initWithEvent:
initWithIdentifier:
initWithLongLong:
initWithMachServiceName:
initWithPreRecordIdentifier:
initWithSecureBackupMetadataInfo:
initWithTemplate:
initWithURL:
initWithUiProvider:delegate:circleProxy:octagonTrustProxy:
initWithUserActivityLabel:
initWithValidatedSecret:secretType:
initialize:
initiatingPayload:
integerValue
internalAuthProvider
isAttemptingRecovery
isAuthKitUnableToPromptDueToNetworkError
isAuthKitUnableToPromptError
isAuthenticationError
isBeneficiaryAccount
isBoolSettingLockedDownByRestrictions:
isCloudProtectionEnabledLocally:
isCompanionInKeychainCircle:
isComplete
isDone
isEqual:
isEqualToString:
isFederatedAccount
isHSA2Account
isHSA2Enabled:
isICDPEnabledForDSID:checkWithServer:
isICDPEnabledForDSID:checkWithServer:completion:
isICSCInvalidError
isICSCRecoveryHardLimitError
isKindOfClass:
isLoginHardLimit
isLoginSoftLimit
isManateeAvailable:
isMemberOfClass:
isOTEnabledForContext:
isOTEnabledForContext:completion:
isPasscodeSet
isPiggybackingRecovery
isPrimaryAppleIDLoggedIn
isRecoveryKeyAvailableWithCompletion:
isRecoveryKeyAvailableWithError:
isRecoveryKeySet:error:
isRecoveryPETHardLimitError
isRecoveryPETSoftLimitError
isSilentEscrowRecordRepairEnabled
isSilentEscrowRecordViabilityRepairEnabled
isSimulateNonViableEscrowRecordEnabled
isTTSURecovery
isUserVisibleKeychainSyncEnabled
isUserVisibleKeychainSyncEnabledWithCompletion:
isUsingMultipleICSC
isUsingMultipleiCSC
isWalrusEnabledWithOptions:error:
joinCircle:
joinCircleIgnoringBackups:completion:
joinCircleWithCompletion:
joinMethod
keyChainSync
keyChainSyncWithProxy:
keychainCircleProxy
keychainItemForDescriptor:error:
laterDate:
length
listenForPayloadsWithHandler:
listener
listener:shouldAcceptNewConnection:
localSecret
localSecretChangedTo:secretType:completion:
localSecretChangedTo:secretType:context:uiProvider:completion:
localeWithLocaleIdentifier:
localizedName
localizedRecoveryOption
lock
lockWithError:
longLongValue
machineID
marketingModel
matchKeychainViewState:
maxDeviceRecoveryAttempts
maxRecoveryAttempts
metadata
modelClass
modelVersion
mutableBytes
mutableCopy
name
needsBackupRecovery
nextRetryInterval
nonViableRequiresRepair
notification
numberWithDouble:
numberWithInt:
numberWithInteger:
numberWithLongLong:
numberWithUnsignedInteger:
numericSecretLength
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
observeChangeToState:circleProxy:handler:
observeCircleStateWithCircleProxy:changeHandler:
octagonCapableRecordsExist
octagonProxy
octagonTrustProxy
pairingChannelAcceptor
pairingChannelInitiator
password
passwordEquivToken
pcsController
pcsIdentityCreateWithInfo:error:
pcsIdentityMigrateToiCDPWithInfo:error:
pcsIdentitySetCompanionInCircle:error:
pcsIdentitySetIsInICDPLocal:error:
pcsIdentitySetIsInICDPNetwork:options:error:
pcsKeysForService:error:
pcsKeysForServices:completion:
pcsProxy
pcsRestoreLocalBackup:error:
pcsSynchronizeKeysWithInfo:error:
peerDeviceNamesByPeerID
peerID
peerId
peeriCloudKeychainState
performCircleRequestWithContext:completion:
performEscrowRecovery:cdpContext:escrowRecord:error:
performEscrowRecoveryWithContextData:escrowArguments:error:
performEscrowRecoveryWithData:error:
performEscrowRecoveryWithRecoveryContext:completion:
performEscrowRecoveryWithRecoveryContext:error:
performRecoveryWithContext:uiProvider:authProvider:completion:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performSilentEscrowRecordRepairWithCompletion:
performSilentEscrowRecordRepairWithContext:completion:
performSilentEscrowRecovery:cdpContext:allRecords:error:
performSilentEscrowRecoveryWithCDPContext:error:
persistMasterKeyVerifier:context:completion:
platformSupportsSOS
populateUnderlyingErrorsStartingWithRootError:maxDepth:
populateWithInfo:
postConfirmExistingSecretFollowUp
postFollowUpItem:error:
postFollowUpItemForContext:error:
postFollowUpWithContext:completion:
postLocalSecretChangeFollowUp
postNotificationName:object:
postRepairFollowUp
preRecordUUID
predicateWithBlock:
preflightContext:
prepareCircleStateForRecovery
prevailingLocalSecretType
primaryAccountAltDSID
primaryAccountDSID
primaryAccountIsBeneficiary
primaryAccountSecurityLevel
primaryAccountStashedPRK
primaryAccountUsername
primaryAppleAccount
primaryAuthKitAccount
processIdentifier
processIncomingPayload:error:
processMessage:error:
processName
promptForAdoptionOfMultipleICSCWithCompletion:
promptForCredentials:
promptForLocalSecretWithCompletion:
propertyListWithData:options:format:error:
proxyWithSession:error:
reason
reauthenticateUserWithCompletion:
record
recordDate
recordID
recordId
recordInfo
recordIsEmpty:
recordNotFoundErrorWithUnderlyingError:
recordStatus
recoverAndSynchronizeKeysWithCompletion:
recoverAndSynchronizeStateWithServer:
recoverDataUsingMasterKeyWithCompletion:
recoverKeysWithCompletion:
recoverOctagonUsingCustodianInfo:completion:
recoverOctagonWithContext:inheritanceKey:completion:
recoverSecureBackupWithContext:completion:
recoverSquirrelWithContext:uiProvider:completion:
recoverState:
recoverWithError:
recoverWithInfo:error:
recoverWithRecoveryKey:recoveryKey:error:
recoveredInfo
recoveryAuthProvider
recoveryKey
recoveryKeyAvailabilityWithCompletion:
recoveryKeyDescriptor
recoveryKeyDescriptorForAltDSID:
recoveryKeyVerified
recoveryOptionIndex
recoverySecret
recoveryStatus
recoveryValidatorWithDevices:forMultipleICSC:withCompletionHandler:
registerCredentials
registerListener:
registerRequestID:options:handler:
remainingAttempts
remotePeeriCKState
remoteSecretValidator:applyToJoinCircleWithJoinHandler:
remoteSecretValidator:attemptCustodianRecoveryWithInfo:completion:
removeAllObjects
removeNonViewAwarePeers:
removeNonViewAwarePeersFromCircleWithCompletion:
removeNonViewAwarePeersFromCircleWithContext:completion:
removeObject:
removeObjectForKey:
removeObserverWithToken:
removeRecoveryKey:error:
removeThisDeviceFromCircle:
renewCredentialsForAccount:completion:
repairCloudDataProtectionStateWithCompletion:
repairCloudDataProtectionStateWithContext:uiProvider:completion:
repairType
repairWalrusStatusWithCompletion:
repairWalrusWithAccountIdentifier:options:error:
repairWalrusWithCompletion:
replyPayload
reportEscrowRecoveryStatus:recoveryInfo:error:
reportPreRecoveryWithInfo:
representationForAltDSID:
requestToJoinCircle:
requestToJoinCircleAfterRestore:
requestToResetProtectedData:
requiresEscrowRecordsFetch
requiresInitialSync
requiresMoreViewData
resetAccountCDPState
resetAccountCDPStateAndSetSecret:
resetAccountCDPStateWithCompletion:
resetCircleIncludingCloudKitData:cloudKitResetReasonDescription:withCompletion:
respondsToSelector:
resultParser
resultWithCloudDataProtectionEnabled:shouldCompleteSignIn:error:
resultWithCloudDataProtectionEnabled:shouldCompleteSignIn:peeriCloudKeychainState:error:
resultWithError:
resultsDictionaryFromRecoveryResult:error:
resume
resumeContext
retain
retainCount
retrieveInflatedDevices:
saveAccount:withCompletionHandler:
saveTermsAcceptance:reply:
saveVerifiedAccount:error:
secretType
secretValidator:didFailRecovery:withError:completion:
secretValidator:didFailRecoveryWithErrors:completion:
secretValidator:recoverSecureBackupWithContext:completion:
secretValidator:shouldAcceptRecoveryError:
secretValidator:shouldContinueValidationAfterError:
secretValidatorWillAttemptRecovery
secureBackupContext
secureBackupContextWithInfo:
secureBackupController
secureBackupMetadataTimestamp
secureBackupNumericPassphraseLength
secureBackupProxy
secureBackupTimestamp
secureBackupUsesMultipleIcscs
secureBackupUsesNumericPassphrase
secureChannelContextForController:
secureChannelProxy
securityInterface
securityLevelChanged:forAltDSID:
self
sendPayload:completion:
sendReport
sendRequestID:options:request:responseHandler:
serialNumber
serverFriendlyDescription
sessionWithCircleDelegate:session:error:
sessionWithConfiguration:
setAccount:
setAccountIdentifier:
setAccountProperty:forKey:
setAccountSetting:error:
setActions:
setActivateAction:
setAltDSID:
setAppleAccountInterface:
setAppleID:
setApproverBackupRecordsExist:
setAttemptedCDPEnable:
setAuthKitInterface:
setAuthenticationType:
setBackupActivity:
setByAddingObjectsFromArray:
setCachedAccountInfo:
setCachedLocalSecret:
setCachedLocalSecretType:
setCachedPassphraseMissing:
setCdpContext:
setCircleController:
setCircleJoinResult:
setCircleStatus:
setClientInfo:
setCloudDataProtectionEnabled:
setConfiguration:
setContext:
setCoolOffPeriod:
setDSID:
setDataPrivacyEnabled:completion:
setDataPrivacyStatusEnabled:completion:
setDateFormat:
setDelegate:
setDevice:
setDeviceEscrowRecordState:
setDevicesThatLoseAccountAccessOnEnable:
setDidForceEscrowCache:
setDidJoin:
setDidSilentEscrowRecordRepairSucceed:
setDisplayStyle:
setDsid:
setEnabled:
setEnabled:forDataclass:
setEndpoint:
setError:
setErrorProvider:
setEscrowAuth:
setEscrowDeviceCount:
setEscrowFetchSource:
setEventHandler:
setExportedInterface:
setExportedObject:
setExtensionIdentifier:
setFakeNearlyDepletedRecords:
setFirstNotificationDelay:
setFollowUpProvider:
setFrequency:
setGroupIdentifier:
setHasDisabledKeychainExplicitly:
setHasPeersForRemoteApproval:
setHasPeersWithCDPBackupRecords:
setHasRandomSecret:
setIcloudVersion:
setIcscRepairRetryDelay:
setIcscRepairTotalRetries:
setIdentifier:
setInformativeText:
setInternalAuthProvider:
setInvalidationHandler:
setInvisible:
setIsSimulateNonViableEscrowRecordEnabled:
setIsUsernameEditable:
setIsUsingMultipleICSC:
setIsWalrusEnabled:
setItemAccessible:
setItemClass:
setKeychainCircleProxy:
setKeychainManager:
setLabel:
setListener:
setLocalSecretType:
setLocale:
setLocalizedName:
setLocalizedRecoveryOption:
setMaxDeviceRecoveryAttempts:
setMaxRecoveryAttempts:
setMetadata:
setNeedsBackupRecovery:
setNonViableRequiresRepair:
setNotification:
setObject:forKey:
setObject:forKeyedSubscript:
setOctagonCapableRecordsExist:
setOctagonProxy:
setOctagonTrustProxy:
setOptions:
setOtProxy:
setPassword:
setPasswordEquivToken:
setPayload:
setPcsController:
setPcsProxy:
setPeeriCloudKeychainState:
setPreRecordUUID:
setPrevailingSecret:
setRecordDate:
setRecoveredClique:
setRecoveredInfo:
setRecoveryAuthProvider:
setRecoveryContext:
setRecoveryHandler:
setRecoveryKeyVerified:
setRecoveryOptionIndex:
setRecoveryRecords:
setRecoverySecret:
setRecoveryStatus:
setRemainingAttempts:
setRemotePeeriCKState:
setRepairType:
setRequiresEscrowRecordsFetch:
setRequiresInitialSync:
setResultParser:
setRpdProbationDuration:
setSbProxy:
setSecretType:
setSecureBackupController:
setSecureBackupProxy:
setSecureChannelProxy:
setSecurityInterface:
setService:
setSharingSession:
setShouldCompleteSignIn:
setSilentRecovery:
setSimulateEPThrottle:
setSupportedEscapeOfferMask:
setSupportsSkipSignIn:
setSynchronizable:
setSysBound:
setTargetBundleIdentifier:
setTimeZone:
setTitle:
setTotalRecoveryAttempts:
setType:
setUiProvider:
setUniqueIdentifier:
setUseDataProtection:
setUsePreviouslyCachedRecoveryKey:
setUsePreviouslyCachedSecret:
setUserControllableViewsSyncStatus:error:
setUserDidCancel:
setUserDidReset:
setUserInfo:
setUserVisibleKeychainSyncEnabled:withCompletion:
setUsername:
setValidEscrowDeviceCount:
setValidSecretHandler:
setValidator:
setValue:forHTTPHeaderField:
setVersion:
setWalrusEnabled:accountIdentifier:options:error:
setWalrusStateController:
setWalrusStatus:
setWalrusStatusEnabled:completion:
setWasSilentEscrowRecordRepairAttempted:
setWebAccess:
setWebAccessStatusEnabled:completion:
setWithArray:
set_alwaysCreateEscrowRecord:
set_appleIDContext:
set_authProvider:
set_supportsCustodianRecovery:
set_useSecureBackupCachedPassphrase:
setupDictionaryWithContext:
sharedConnection
sharedInstance
sharedObserver
sharingChannel
sharingSession
shouldAllowCDPEnrollment
shouldCompleteSignIn
shouldNotify
shouldPerformRepairForContext:forceFetch:completion:
shouldPerformRepairWithOptionForceFetch:completion:
shouldPerformSilentEscrowRecordRepairUsingCache:completion:
shouldPerformSilentEscrowRecordRepairWithContext:usingCache:completion:
silentAuthenticationForContext:withCompletion:
silentAuthenticationForPrimaryAccountWithClientAppName:clientAppBundleId:withCompletion:
silentAuthenticationForPrimaryAccountWithCompletion:
silentRecovery
simulateEPThrottle
sortedArrayUsingComparator:
sosViability
start
startCircleApplicationApprovalServerWithContext:completion:
startObservingNetwork
startSilentEscrowRecordRepairWithContext:completion:
statusCode
statusForDataPrivacyWithCompletion:
statusToSet
stringByAppendingString:
stringValue
stringWithFormat:
stringWithUTF8String:
stringWithValidatedFormat:validFormatSpecifiers:error:
successResult
superclass
supportedEscapeOfferMask
supportedEscapeOfferMaskCompletion:
supportsErrorPresentation
supportsInteractiveAuth
supportsMesa
supportsPearl
supportsRecoveryKeyWithError:
supportsSecureBackupRecovery
synchronizeCircleViews
synchronizeCircleViewsForSecureBackupContext:
synchronizeKeyValueStoreWithCompletion:
synchronizeKeychainViewSetWithOtherPeers:
synchronous
timeIntervalSinceNow
timeZoneForSecondsFromGMT:
tlkRecoverabilityForEscrow:record:error:
tlkRecoverabilityForEscrow:record:source:error:
tlkRecoverabilityForEscrowRecord:error:
tlkRecoveryViability
totalRecoveryAttempts
tryRegisteringCredentials
type
uiProvider
unarchivedObjectOfClass:fromData:error:
uncacheAllSecrets
uncachePassphrase
unlock
unlockScreenType
unlockScreenTypeWithOutSimplePasscodeType:
unsignedIntegerValue
updateDataPrivacyWithContext:completion:
updateLastSilentEscrowRecordRepairAttemptDate:context:completion:
updateLastSilentEscrowRecordRepairAttemptDate:error:
updateWalrusStatus:completion:
updateWebAccessStatus:completion:
updateWithAuthenticationResults:
updatedReportWithRecord:isDeviceRecord:
updatedReportWithViews:forDeviceRecord:
useCircleInfoToUpdateNameForDevices:
usePreviouslyCachedRecoveryKey
usePreviouslyCachedSecret
userAcceptedDevicesToLoseAccountAccess
userDidCancel
userDidReset
userInfo
validEscrowDeviceCount
validSecret
validSecretHandler
validateCustodianRecoveryInfo:withCompletion:
validateRecoveryKey:withCompletion:
validateSecret:devices:type:withCompletion:
validator
value
valueForEntitlement:
verficationFailedErrorwithUnderlyingError:
verifyRecoveryKey:
verifyRecoveryKeyWithContext:uiProvider:completion:
waitForUpdate
walrusStateController
walrusStatus
walrusStatusWithContext:completion:
walrusStatusWithContext:error:
wasSilentEscrowRecordRepairAttempted
webAccess
webAccessStatusWithCompletion:
zone
v32@0:8@16@?24
@24@0:8@16
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8r*16Q24
v32@0:8r*16@24
v32@0:8r*16@"NSDictionary"24
v16@0:8
r*16@0:8
v40@0:8Q16@24@?32
v24@0:8@16
@"NSObject<OS_dispatch_queue>"
@"NSMutableArray"
v24@0:8@?16
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v24@0:8@?<v@?@"NSString"@"NSError">16
@40@0:8@16@24@32
@"<CDPAuthProviderInternal>"
@"CDPContext"
@"<CDPDOctagonTrustProxy>"
@"NSDictionary"
@"NSString"
v40@0:8@16@24@?32
B32@0:8@16@24
B32@0:8@16^@24
v48@0:8@16@24@32@?40
v40@0:8@"CDPDDeviceSecretValidator"16@"CDPDSecureBackupContext"24@?<v@?@"CDPDRemoteSecretValidationResult"@"NSError">32
B32@0:8@"CDPDDeviceSecretValidator"16@"NSError"24
B32@0:8@"CDPDDeviceSecretValidator"16^@24
v40@0:8@"CDPDDeviceSecretValidator"16@"NSDictionary"24@?<v@?B@"NSError">32
v48@0:8@"CDPDDeviceSecretValidator"16@"CDPDevice"24@"NSError"32@?<v@?B@"NSError">40
@56@0:8@16@24@32@40@48
@36@0:8@16B24@?28
Q24@0:8@16
v36@0:8@16B24@28
@"<CDPRemoteDeviceSecretValidatorProtocol>"
@"CDPRecoveryFlowContext"
@"CDPDCircleController"
@"CDPDSecureBackupController"
@"<CDPStateUIProviderInternal>"
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
B24@0:8Q16
@"NSXPCListener"
v32@0:8@16@24
v24@0:8Q16
v20@0:8B16
@"CDPDevice"
@"CDPLocalSecret"
@"OTClique"
@32@0:8@16^@24
@"NSDictionary"32@0:8@"CDPDRemoteSecretValidationResult"16^@24
v32@0:8@"CDPDRemoteDeviceSecretValidator"16@?<v@?B@"NSError">24
v24@0:8@"CDPDRemoteDeviceSecretValidator"16
v40@0:8@"CDPDRemoteDeviceSecretValidator"16@"CDPCustodianRecoveryInfo"24@?<v@?B@"NSError">32
Q32@0:8@16B24B28
v40@0:8@16@24@32
@32@0:8Q16@24
@24@0:8@?16
v48@0:8@16@24q32@?40
@32@0:8@16@24
@24@0:8^@16
@"NSData"24@0:8^@16
@"NSData"32@0:8@"NSData"16^@24
@"KCJoiningRequestCircleSession"
@"KCJoiningRequestAccountCircleDelegate"
v28@0:8B16@?20
B24@0:8^@16
^{_PCSIdentitySetData=}24@0:8^@16
@24@0:8^{_PCSIdentityData=}16
@"<CDPProtectedCloudStorageProxy>"
@24@0:8@"CDPContext"16
@"NSDictionary"32@0:8@"NSDictionary"16^@24
B32@0:8@"NSDictionary"16^@24
v32@0:8@"NSDictionary"16@?<v@?@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSError">24
v24@0:8@?<v@?B@"NSError">16
v28@0:8B16@?<v@?@"NSError">20
v24@0:8@?<v@?Q@"NSError">16
@"CDPContext"16@0:8
v24@0:8@"CDPContext"16
B40@0:8@16@24^@32
@"AAFKeychainManager"
@36@0:8@16B24^@28
@40@0:8@16q24^@32
@40@0:8@16@24^@32
@48@0:8@16@24q32^@40
@"NSArray"36@0:8@"NSDictionary"16B24^@28
@"NSArray"40@0:8@"NSDictionary"16q24^@32
@"NSArray"40@0:8@"NSDictionary"16@"OTEscrowRecord"24^@32
@"NSArray"48@0:8@"NSDictionary"16@"OTEscrowRecord"24q32^@40
B32@0:8@"OTConfigurationContext"16^@24
B40@0:8@"NSString"16@"NSString"24^@32
q16@0:8
v24@0:8q16
v40@0:8@"CDPContext"16@"NSDictionary"24@?<v@?B@"NSError">32
v24@0:8@?<v@?@"NSArray"@"NSError">16
@?16@0:8
v28@0:8@16I24
d24@0:8Q16
@"NSMutableDictionary"
{mach_timebase_info="numer"I"denom"I}
v32@0:8@"NSData"16@?<v@?@"NSData"@"NSError">24
v24@0:8@?<v@?@"NSData"^@^@>16
@"CUMessageSession"
v40@0:8Q16@24@32
@24@0:8Q16
Vv32@0:8@16@?24
Vv24@0:8@?16
Vv32@0:8Q16@?24
@"CDPInternalWalrusStateController"
@"<CDPDBackupRecoveryResultsParser>"
@"<CDPDBackupRecoveryErrorProvider>"
@"NSArray"
v32@0:8@"CDPDCircleController"16@?<v@?BB@"NSError">24
@"CDPContext"24@0:8@"CDPDCircleController"16
@"CDPDSecureChannelContext"24@0:8@"CDPDCircleController"16
@"NSString"24@0:8@"CDPDSecureBackupController"16
B24@0:8@"CDPDSecureBackupContext"16
v24@0:8@?<v@?@"CDPLocalSecret"@"NSError">16
@48@0:8@16@24@32@40
v32@0:8q16@?24
v36@0:8@16B24@?28
v32@0:8Q16@?24
v40@0:8@16q24@?32
@44@0:8Q16Q24B32@36
Q28@0:8B16^@20
@"<CDPDCircleProxy>"
@"<CDPDSecureBackupProxy>"
v32@0:8Q16@24
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
v44@0:8@16@24B32@?36
v36@0:8B16@20@?28
v32@0:8@?16@?24
v40@0:8@16@?24@?32
@"CDPDCircleStateObserver"
@"NSObject<CDPDCircleDelegate>"
v40@0:8@16Q24@?32
v24@0:8B16B20
@"<CDPLocalSecretFollowUpProvider>"
@"NSString"32@0:8@"NSDictionary"16^@24
@72@0:8@16@24@32@40@48@56@64
@"CDPDPCSController"
@"<CDPDAuthProviderInternal>"
v48@0:8@16@24Q32@?40
v48@0:8@"NSString"16@"NSArray"24Q32@?<v@?BB@"NSError">40
v32@0:8@"NSString"16@?<v@?BB@"NSError">24
v24@0:8@"NSError"16
v24@0:8@"CDPLocalSecret"16
v24@0:8@?<v@?Q>16
v32@0:8@"CDPCustodianRecoveryInfo"16@?<v@?B@"NSError">24
v64@0:8@16@24Q32@40@48@?56
@"NSMutableSet"
@"<CDPDDeviceSecretValidatorDelegate>"
@"<CDPDRecoveryKeyValidatorInternalDelegate>"
@32@0:8Q16Q24
@"<CDPDSecureBackupDelegate>"
@"CDPDSecureBackupConfiguration"
B28@0:8@16B24
v28@0:8B16@20
v28@0:8B16@"NSString"20
@"FLFollowUpController"
@"CDPDFollowUpFactory"
B32@0:8@16@?24
@"<CDPAppleAccountProxy>"
v56@0:8@16Q24@32@40@?48
Vv36@0:8@16B24@?28
Vv40@0:8@16@24@?32
v40@0:8@"CDPContext"16@"<CDPStateUIProviderInternal>"24@?<v@?BB@"NSError">32
v32@0:8@"CDPContext"16@?<v@?B@"NSError">24
v40@0:8@"CDPContext"16@"<CDPStateUIProviderInternal>"24@?<v@?B@"NSError">32
v36@0:8@"CDPContext"16B24@?<v@?B@"NSError">28
v56@0:8@"NSString"16Q24@"CDPContext"32@"<CDPStateUIProviderInternal>"40@?<v@?B@"NSError">48
v40@0:8@"NSString"16@"CDPContext"24@?<v@?B@"NSError">32
v32@0:8@"CDPContext"16@?<v@?@"NSString"@"NSError">24
Vv24@0:8@?<v@?B@"NSError">16
v36@0:8@"NSString"16B24@?<v@?B>28
v24@0:8@?<v@?B>16
v28@0:8B16@?<v@?B@"NSError">20
v48@0:8@"CDPContext"16@"<CDPStateUIProviderInternal>"24@"<CDPAuthProviderInternal>"32@?<v@?@"NSDictionary"@"NSError">40
v32@0:8@"CDPFollowUpContext"16@?<v@?B@"NSError">24
Vv24@0:8@?<v@?Q@"NSError">16
Vv32@0:8@"CDPUpdateDataPrivacyContext"16@?<v@?@"CDPUpdateDataPrivacyContext"@"NSError">24
Vv36@0:8@"CDPContext"16B24@?<v@?@"NSArray"@"NSError">28
Vv32@0:8@"CDPContext"16@?<v@?@"NSError">24
Vv32@0:8@"CDPContext"16@?<v@?Q@"NSError">24
Vv24@0:8@?<v@?@"NSError">16
Vv32@0:8Q16@?<v@?@"NSError">24
Vv32@0:8@"NSArray"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"ACAccount"16@?<v@?@"NSDictionary"@"NSError">24
Vv36@0:8@"CDPContext"16B24@?<v@?B@"NSError">28
Vv32@0:8@"CDPContext"16@?<v@?B@"NSError">24
Vv40@0:8@"NSDate"16@"CDPContext"24@?<v@?B@"NSError">32
v36@0:8@"CDPContext"16B24@?<v@?@"CDPEscrowRecordReport"@"NSError">28
@40@0:8@16Q24Q32
v56@0:8@16@24Q32@40@?48
v72@0:8@16@24@32@40@48@56@?64
@"NSXPCConnection"
@"CDPWalrusDaemonService"
Q32@0:8@16^@24
Q24@0:8^@16
@40@0:8@16B24B28^@32
@32@0:8Q16^@24
v44@0:8B16@20@28@?36
@"<CDPWalrusSecurityProxy>"
@"CDPAccount"
@"CDPDAccount"
@"ACAccountStore"
v32@0:8B16B20@24
v52@0:8@16Q24B32@36@?44
@"CDPInheritanceTrustController"
@32@0:8B16B20@24
@40@0:8B16B20Q24@32
@"NSError"
@"<CDPKeychainCircleProxy>"
@"<CDPSecureChannelProxy>"
@"NSURLSession"
B20@0:8B16
@"CDPDCircleJoinResult"
@32@0:8@"CDPContext"16@"<CDPStateUIProviderInternal>"24
@"NSError"24@0:8@"NSError"16
@"NSError"16@0:8
@"NSError"24@0:8@"CDPDevice"16
v32@0:8@"NSError"16@?<v@?@"NSError">24
@"CDPDSecureChannelContext"
v20@0:8I16
@"NSLock"
^{__SCNetworkReachability=}
@"KCPairingChannel"
