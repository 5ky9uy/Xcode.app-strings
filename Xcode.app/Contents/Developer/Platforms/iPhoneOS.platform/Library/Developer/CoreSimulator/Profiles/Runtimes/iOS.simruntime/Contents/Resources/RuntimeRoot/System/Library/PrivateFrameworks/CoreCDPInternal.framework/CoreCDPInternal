@(#)PROGRAM:CoreCDPInternal  PROJECT:CoreCDP-1
"Saving terms acceptance: %@"
"Fetched accepted terms with result: %@"
"Error fetching terms acceptance %@"
"Initialized %@"
"Deallocated %@"
"%@ started observing state"
"Error checking circle status (%@) after observing kSOSCCCircleChangedNotification - %@"
"Circle state is %@ after observing kSOSCCCircleChangedNotification (observer %p)"
"Circle observer ignoring: %s"
"%@ : Confirming recovery key"
"%@ : recovery failed with error %@"
"Programming error detected! File a radar!"
"CDPDRecoveryFlowController deallocated"
"Recovery flow failed due to device inflation error. %@"
"We are unable to show UI as the UI provider is missing."
"Requesting UI provider prompt for a remote device secret from one of %lu devices (offeringRemoteApproval=%i)"
"Requesting UI provider prompt for an ICSC isNumeric=%i numericLength=%@"
"Fetching backup record devices"
"Failed to fetch backup record devices: %@"
"Received new connection %@, checking entitlements..."
"CDP client connection invalidated: %@"
"Accepting new connection %@ with entitlements mask %i"
"Denying new connection %@"
"Client is Buddy"
"Client is Preferences"
"Unknown client type with bundleID '%@'"
"Broadcasting notification: %@, with userInfo: %@"
"Parsed a MID"
"Parsed a PRK"
"Attempting silent re-authentication..."
"Renew request completed! Error: %@"
"Silently re-fetched recovery token"
"Silent re-authentication succeeded"
"Silent re-authentication failed: %@"
"Context Type: %@"
"Escape available: other devices"
"Escape available: account reset"
"Escape available: skip flow"
"Escape available: recovery key"
"Escape available: Custodian Recovery"
"User attempted to sign in after burning out all recovery options, present hard limits"
"CDPDRemoteDeviceSecretValidatorDelegate applying to join circle"
"CDPDRemoteDeviceSecretValidatorDelegate cancelling application to join circle"
"Failed to recovery Octagon using custodian info with error: %@"
"Attempting to recover a record with context: %@"
"Recovered a clique: %@"
"clique recovery failed with error: %@"
"Non-terminating error detected, with retry option: %@"
"Starting handling hard limit error..."
"Starting handling soft limit error..."
"Attempting to fallback recovery options..."
"Creating recovery option: Recovery Key"
"Creating recovery option: Remote Approval"
"No fallback available"
"Creating recovery option: Skip"
"Creating recovery option: Reset"
"User elected to Reset Encrypted Data, confirming..."
"Creating recovery option: Cancel"
"Attempting to preset alert (using: %@) for error: %@"
"User responded to presented alert with option: %@"
"Prompting user for Reset confirmation"
"Reset confirmation prompt came back with: %@"
"Creating a piggybacking data provider with session: %@"
 enableTelemetry=YES 
BEGIN [%lld]: KCJoiningRequestProcessMessage  enableTelemetry=YES 
 Error=%{public,signpost.telemetry:number1,name=Error}d 
END [%lld] %fs: KCJoiningRequestProcessMessage  Error=%{public,signpost.telemetry:number1,name=Error}d 
KCJoiningRequestProcessMessage
END [%lld] %fs: KCJoiningRequestProcessMessage 
"Starting to recover PCS state"
"PCS State restored %@ with error: %@"
"Starting to synchronize PCS state"
"PCS State synchronized %@ with error: %@"
"Silent auth requested prior to checking CDP state"
"Checking iCDP State. Networked: %@"
"PCSIdentitySetIsICDPNetwork returned isEnabled=%i error=%@"
"Checking local iCDP state..."
"Checking companion circle state..."
"PCSIdentityCreate return NULL with error: %@"
"PCSIdentitySetup returned NULL with error: %@"
"PCS Identity fetched"
"Re-authenticating on error from enableCDPWithCompletion: %@"
"Re-authenticating on error from disableCDPWithCompletion:"
BEGIN [%lld]: AccountInfoWithInfo  enableTelemetry=YES 
 error=%{public,signpost.telemetry:number1,name=error}d 
AccountInfoWithInfo
END [%lld] %fs: AccountInfoWithInfo  error=%{public,signpost.telemetry:number1,name=error}d 
EnableBackupWithInfo
BEGIN [%lld]: EnableBackupWithInfo  enableTelemetry=YES 
END [%lld] %fs: EnableBackupWithInfo  error=%{public,signpost.telemetry:number1,name=error}d 
"Failed to enable SecureBackup: %@"
"SecureBackup enabled"
 enableError=%{public,signpost.telemetry:number1,name=enableError}d 
END [%lld] %fs: EnableBackupWithInfo  enableError=%{public,signpost.telemetry:number1,name=enableError}d 
BEGIN [%lld]: RecoverBackupWithInfo  enableTelemetry=YES 
RecoverBackupWithInfo
END [%lld] %fs: RecoverBackupWithInfo  enableError=%{public,signpost.telemetry:number1,name=enableError}d 
BEGIN [%lld]: DisableBackupWithInfo  enableTelemetry=YES 
"Failed to disable SecureBackup with error %@"
"Disabled SecureBackup!"
DisableBackupWithInfo
END [%lld] %fs: DisableBackupWithInfo  enableError=%{public,signpost.telemetry:number1,name=enableError}d 
"Attempting to update recovery key cache..."
"Failed to cache recovery key with error: %@"
"Recovery key cache updated"
BEGIN [%lld]: FetchEscrowRecords  enableTelemetry=YES 
 resultError=%{public,signpost.telemetry:number1,name=resultError}d 
FetchEscrowRecords
END [%lld] %fs: FetchEscrowRecords  resultError=%{public,signpost.telemetry:number1,name=resultError}d 
"Fetched escrow records: %@"
"Fetched escrow records error: %@"
"Fetched all escrow records: %@"
"fetchAllEscrowRecords failed, error: %@"
"Attempting to persist verifier: %@ for %@"
"Managed config (%@) reports isPasscodeSet=%i"
"Already sent CDPCA event %@"
"Sending report %@ (time: %f)"
SecureChannelSendPayload
BEGIN [%lld]: SecureChannelSendPayload  enableTelemetry=YES 
"Response received: %@"
END [%lld] %fs: SecureChannelSendPayload 
"Starting to listen for initiating payload..."
"Payload received from requestor: %@"
"Sending response to requestor: %@"
"Attempting to join the circle using remote approval..."
"Circle join was approved from another device"
"Ignoring circle state change because a recovery is in progress"
"Ignoring circle state change because we're not supposed to be waiting for remote approval"
"Failed to request circle join approval from another device - %@"
"Circle join was successfull with custodian recovery"
"Fetching decorated delegate: %@"
"resetAccountCDPState was called"
"Failed to recover data dictionary: %@"
"Parsing recovered data: %@"
"Recovered data dictionary with keys: %@"
"Circle status before attempting recovery is %@"
"Circle state changed to a state other than pending, proceeding with recovery"
"Attempting to reset to offering in SOS"
"Failed to reset to offering: %@"
"Successfully reset SOS circle to offering"
"Circle join requested, but we are already in circle!"
"Circle resume failed, re-authentication requested!"
"Failed to resume session: %@, start to fall back..."
"Failed to resume session, no fallback. %@"
"Secure channel worked, we joined the circle..."
"Failed to initialized secure channel with error: %@, Custodian keys available attempting recovery"
"Failed to initialized secure channel with error: %@, starting to fall back..."
"Failed to initialized secure channel, no fallback. %@"
"scheduling join retry after %@ seconds as security says there is no CK account yet"
"Falling back to recovery based circle flows..."
"Can't join circle, failed to check for presence of secure backup records: %@"
"Circle status is CDPSyncingStatusAbsent and backups are NOT present... Trying to create and join the circle"
"Custodian CDP Recovery failed with error: %@"
"Custodian CDP Recovery succeeded"
"UI provider failed to perform interactive authentication for repair with error %@"
"Attempting to reset and join new circle after recovery succeeded but resulted in a pending circle join..."
"Circle reset completed with success: %@, error: %@"
"Resetting circle after join attempt following recovery resulted in pending..."
"Attempt 1 - Failed to reset due to auth error, will retry: %@"
"Pending application state was resolved immediately after calling remove"
"Pending application state was not resolved immediately after calling remove... waiting to see state != Pending"
"Pending application state was resolved!"
"Updating device name for %@ to '%@' based on circle info"
"Requesting to join circle with handler"
"Request made, but we were already in circle, completing..."
"Successfully joined the circle"
"Failed to apply to circle: %@"
"CDPDLocalSecretController dealloc"
"Updating context for local secret change"
"Not in circle , trying repair"
"repair completed with result :%@ error :%@"
"Have EscrowPreRecord, attempting to enable secure backup: %@"
"Have local secret, attempting to enable secure backup"
"Successfully updated local secret by re-enabling SecureBackup"
"Failed to update local secret by re-enabling SecureBackup"
"No secret, no follow up"
"Failed to silently update local secret, starting repair"
@"Failed to reauthenticate before updating local secret"
"Refreshing context for input: (%@) - %@ - %@"
"Enabling backup, but we are missing a PRK, force interaction to get one"
"Refreshing context with PET"
"Prompting user to enter local secret..."
"Got peer id: %@ from %@"
"Detected security level change for %@"
"Auth observer ignoring non-primary account event"
"Auth observer ignoring: %s"
"Checking recovery key status from Secure Backup"
"Invalid context, assuming no primary account available"
"Recovery key UI flow completed with %d - %@"
"Recovery Key verified!"
"Failed to persist RK verifier: %@"
"Failed to persist verifier: %@"
"CDPDRecoveryKeyController %p deallocated"
"Multiple-ICSC secret is known to be bad, skipping validation"
"Recovery delegate rejected recovery with error. %@"
"Recovery key is known to be bad, skipping validation"
"Set _isAttemptingRecovery to suppress acting on change in circle state"
"Remaining attempts: %@"
"Depleted remaining attempts for multiple-iCSC entry (%@)"
"Un-set _isAttemptingRecovery to resume acting upon circle changes after failed multiple iCSC recovery"
"Redirecting error to the delegate"
"Delegate finished handling the error and returned: %@"
"Unsupported delegate"
"Reaching out to the delegate for error handling"
"cancelValidationWithError was called"
"Event handled, skipping call to valid secret handler"
"Un-set _isAttemptingRecovery to resume acting upon circle changes after failed single iCSC recovery"
"Exceeded maximum attempts for iCSC entry"
"Key mismatch detected"
"%@ : Generating recovery key"
"Fetching escrow records with %@"
"Re-authenticating after error calling fetchEscrowRecords: %@"
"Encountered error while re-authenticating: %@"
"Successfully re-authed after error calling fetchEscrowRecordsWithCompletion. Received non-cached escrow records: %@"
"Failed to re-auth after error calling fetchEscrowRecordsWithCompletion. Existing cached escrow records: %@"
"Encountered error while fetching escrow records: %@"
"Fetched Escrow Records %@"
"fetchEscrowRecordsWithCompletion: failed to fetch escrow records: %@"
"Fetching all escrow records with %@"
"Re-authenticating after error calling fetchAllEscrowRecords: %@"
"Successfully re-authed after error calling fetchAllEscrowRecords. Received non-cached escrow records: %@"
"Failed to re-auth after error calling fetchAllEscrowRecords. Existing cached escrow records: %@"
"Encountered error while fetching all escrow records: %@"
"Fetched All Escrow Records %@"
"fetchAllEscrowRecordsWithOptionForceFetch: failed to fetch escrow records: %@"
"Using cached SecureBackup account info %@"
"Re-authenticating after error calling accountInfoWithCompletion: %@"
"Successfully re-authed after error calling accountInfoWithCompletion. Received non-cached SecureBackup account info: %@"
"Failed to re-auth after error calling accountInfoWithCompletion. Existing cached SecureBackup account info: %@"
"error from accountInfoWithCompletion after re-auth: %@"
"Non-cached SecureBackup account info fetched %@"
"Clearing SecureBackup account info cache..."
"Fetching account info with %@"
"getBackupRecordDevicesWithOptionForceFetch: Failed to check for secure backup records: %@"
"getBackupRecordDevicesWithOptionForceFetch returned!"
"getBackupRecordDevicesWithOptionForceFetch fetched %lu records"
"getBackupRecordDevicesWithOptionForceFetch: Secure backup hasSingleICSCBackup=%@ hasMultipleICSCBackups=%@"
"getBackupRecordDevicesWithOptionForceFetch fetched 0 records"
"**** DEBUG **** Setting fake remaining attempts value of 1 for %@"
"Disqualified device %@ because the remaining attempts is %lu"
"Backup record found for device %@ with date %@ (%@)"
"Backup record date %@ is later than the previously known newest record (%@), promoting %@ as newest device record"
"Finished parsing multiple-iCSC records and found the newest record to be %@"
"_getOctagonEscrowBackupRecordDevicesWithOptionForceFetch: called, fetching escrow records"
"fetch escrow records returned error %@"
"fetch all escrow records returned error %@"
"constructed 0 CDP devices after refetching records, possibly single-iCSC.. calling _getBackupRecordDevicesIncludingUnrecoverableRecords"
"there exists multiple icsc records and none of them will get the device into any trust system. Forcing a reset protected data"
"Finished parsing backup records, returning %lu devices and isUsingMultipleICSC=%i"
"_getBackupRecordDevicesIncludingUnrecoverableRecords: called, fetching account info from SecureBackup"
"SecureBackup returned error %@"
"Found a single-iCSC metadata record. Returning that as a faux-device using %@"
"No single-iCSC metadata record is present"
"Already using multiple ICSC, no need to prompt for adoption"
"Single ICSC record deleted, proceeding with enable of secure backup"
"Failed to delete single-ICSC backup while attempting to enable secure backup: %@"
"Single ICSC that is complex or random and not using multiple ICSC, prompting for adoption..."
"Accepted multiple ICSC, deleting old record..."
"Single ICSC that is NOT random or complex, deleting old record and enabling multiple-ICSC"
"Calling enable without delete due to existing record metadata being present"
"No existing backup record found, continuing with enable"
"Checking if the peer has a secure backup: %@"
"Check for existing backup failed with error: %@"
"Found %@ matching devices"
"Forcing recovery key support by preference (com.apple.corecdp: ForceRecoveryKeySupport)"
"Re-authenticating after error from authenticatedEnableSecureBackupWithSecret: %@"
"Posting followup for failed async SecureBackup path with error %@"
"Re-authenticating after error from authenticatedEnableSecureBackupWithRecoveryKey: %@"
"Attempting to enable SecureBackup with recovery key using info %@"
"cdp: Attempting to perform authenticated enable with context: %@"
"Forcing use of cached secret by preference (com.apple.corecdp: ForceUseCachedSecret)"
"Forcing purge of cached secret by preference (com.apple.corecdp: ForceCachedSecretPurge)"
"Using cached secret and managed config reports devicePasscodeIsSimple=%i"
"Using cached secret and managed config reports simplePasscodeLength=%li"
"Using cached secret with updated client metadata %@"
"Failed to escrow account recovery data due to missing MID"
"Failed to escrow account recovery data due to missing recovery token"
"Failed to enable SecureBackup because no cached secret was present when expected... prompting user to enter local secret"
"Attempt to enable Secure Backup again now that we have the local secret"
"Failed to get local secret"
"Failed to enable SecureBackup with error %@"
"Enabled SecureBackup!"
"Attempting to enable SecureBackup with validated local secret using info %@"
"Failed to enable due to existing record, disabling and trying again"
"Failed to fetch Anisette data! Error: %@"
"performEscrowRecoveryWithData: calling performEscrowRecoveryWithContextData"
"performEscrowRecoveryWithContextData: failed to recover: %@"
"performEscrowRecoveryWithContextData: success!"
"performSilentEscrowRecoveryWithCDPContext: invoked"
"performSilentEscrowRecoveryWithCDPContext: failed to fetch escrow records: %@"
"performSilentEscrowRecoveryWithCDPContext: fetched 0 escrow records"
"performSilentEscrowRecoveryWithCDPContext: single icsc"
"performSilentEscrowRecoveryWithCDPContext: fetched %lu multiple icsc records"
"performSilentEscrowRecoveryWithCDPContext: failed to fetch escrow records: %@, exiting"
"performSilentEscrowRecoveryWithCDPContext: cdp context does not support optimized recovery"
"performSilentEscrowRecoveryWithCDPContext: fetched 0 escrow records, exiting"
"performSilentEscrowRecoveryWithCDPContext: calling new recovery with %lu records"
"performSilentEscrowRecoveryWithCDPContext: performing silent restore now"
BEGIN [%lld]: OTCPerformSilentEscrowRecovery  enableTelemetry=YES 
OTCPerformSilentEscrowRecovery
END [%lld] %fs: OTCPerformSilentEscrowRecovery  Error=%{public,signpost.telemetry:number1,name=Error}d 
"performSilentEscrowRecoveryWithCDPContext: failed to perform silent burn and recover: %@"
"performEscrowRecoveryWithRecoveryContext: invoked"
"performEscrowRecoveryWithRecoveryContext: attempting silent burn"
"performEscrowRecoveryWithRecoveryContext: attempting remote restore"
"performEscrowRecoveryWithRecoveryContext: need to perform a single icsc restore, choosing old recovery SPI"
"performEscrowRecoveryWithRecoveryContext: chosen record is empty, aborting recovery"
"performEscrowRecoveryWithRecoveryContext: record checks out, continuing with restore"
BEGIN [%lld]: OTCPerformEscrowRecovery  enableTelemetry=YES 
OTCPerformEscrowRecovery
END [%lld] %fs: OTCPerformEscrowRecovery  Error=%{public,signpost.telemetry:number1,name=Error}d 
"performEscrowRecoveryWithRecoveryContext: failed to perform escrow recovery: %@"
"performEscrowRecoveryWithRecoveryContext: escrow recovery succeeded"
"Recovering SecureBackup failed - iCSC Invalid (silent burn failed). Trying again with cached recovery key."
"Attempting to recover SecureBackup secret from device %@ using info %@"
"Recovery error had additional info: %@"
"Failed to recover SecureBackup with error %@"
"Recovered SecureBackup"
"Re-authenticating after error from _deleteAllBackupRecordsWithCompletion: %@"
"Attempting to delete all SecureBackup records with info %@"
"Error attempting to delete all backup records %@"
"Re-authenticating after error from _deleteSingleICSCBackupWithCompletion: %@"
"Deleting existing single-iCSC backup..."
"Failed to delete existing single-iCSC backup: %@"
"Existing single-iCSC backup deleted successfully"
"No existing single-iCSC backup found to delete"
"Failed to get account info while deleting single-iCSC backup: %@"
"Re-authenticating after error from _disableSecureBackupWithCompletion: %@"
"Attempting to disable SecureBackup with info %@"
"Failed to disable SecureBackup because no local peerID could be found"
"Re-authenticating after error from disableRecoveryKeyWithCompletion: %@"
"Attempting to disable recovery key with info %@"
"Disabled recovery key!"
"Failed to disable recovery key"
"User previously disabled iCK: %@"
"User disabled iCloud keychain: %@"
"Failed to set user preference for iCloud keychain disable: %@"
"Error calling PCSIdentitySetIsICDP: %@"
"Failed to call PCSIdentitySetIsICDP: %@"
"Device is not biometric auth capable or is already enrolled."
"Bio metric auth not enrolled..."
"Starting to listen for XPC events..."
"Darwin XPC event stream handler called: %s"
"Error during notify_register_check for event - %s"
"Cannot get the state using invalid token for event - %s"
"Error during notify_get_state for token"
"XPC event value is: %llu"
"Notifying listener %@ of %s"
"Distributed XPC event stream handler called: %s"
"User Info: %@"
"Failed to add auth header"
"Processing request for context: %@"
"posting followup is not supported in current configuration"
"Clearing a follow up: (%@) - %@"
"Enabling data privacy on account"
"Disabling data privacy on account"
"No primary account available. Data Privacy cannot be enabled."
"Recovery key or custodian is not available. Data Privacy cannot be enabled."
"Recovery key is not available. Data Privacy cannot be enabled."
"Checking whether any previous device is available on account that will lose access."
"Error getting device list that will lose access. We cannot proceed further. Error - %@"
"There are devices that will lose access to the account. User needs to agree to drop these devices."
"Device check complete, moving on to enable data privacy on IdMS"
"Enabling data privacy failed on IdMS. Error - %@"
"Data privacy is enabled on IdMS. Moving on to roll the keys on Security."
"Enabling data privacy failed on Security. Error - %@"
"Keys are rolled on Security. Data Privacy should be enabled now."
"Denying access to state machine. Missing entitlement."
"Starting state machine..."
"Forcing _useSecureBackupCachedPassphrase=YES for iOS/watchOS Buddy on a device with a local secret present"
"Starting state repair..."
"Denying access to state repair. Missing entitlement."
"Starting accepting side server..."
"Approving TTSU attempted without primary iCloud account, failing..."
"CDP flow interrupted"
"Checking whether repair should be performed on the CDP state..."
"State machine status check completed shouldRepair=%@ error=%@"
"Denying access to state machine. Missing entitlements"
"Handing change in an attempt to escrow preRecord: %@..."
"State machine finished handling preRecord %@ change with didUpdate=%@ error=%@"
"Handing change in local secret..."
"State machine finished handling local secret change with didUpdate=%@ error=%@"
"Finishing offline local secret change..."
"Updated local secret after offline change"
"Failed to update local secret after offline change: %@"
"Finishing Cyrus terms flow by collecting passcode..."
"Created backup after terms agreement."
"Failed to create delayed backup: %@"
"Attempting to clear a follow up: %@"
"Denying access to cleraing follow ups. Missing entitlement."
"Attempting to post a follow up: %@"
"Denying access to posting follow ups. Missing entitlement."
"Calling out to controller to save terms."
"Client is not permitted to save terms."
"Calling out to controller to fetch terms."
"Client is not permitted to fetch terms."
"Initiating info recovery"
"Denying access to back up data. Missing entitlements"
"info recovery completed with error: %@"
"Denying access to recovery key operation. Missing entitlement."
"Denying access recovery key operation. Missing entitlement."
"Error geting data privacy status from security - %@"
"Returing (%lu) for data privacy status."
"Error updating data privacy status - %@"
"Update to data privacy status was successful."
"**** DEBUG **** Fake nearly depleted records mode is ENABLED"
"CDPDStateMachine %p deallocated"
"State machine %@ is starting..."
"Ignoring lock assert errors"
"Successfully took device lock assertion or assertion already taken, proceeding with state machine"
"Reporting success to circle proxy"
"Reporting error to circle proxy %@"
"Uncaching all secrets after 30 seconds, fail safe..."
"State machine %@ finished"
"Make sure device is unlocked before calling handleCloudDataProtectionStateWithCompletion:"
"Starting preflight of account..."
"Preflight finished with shouldProceed=%i error=%@"
"Credential was provided, attempting to register..."
"Failed to register credentials with Security, lets try again..."
"Credential was not provided or we are not HSA2... moving on!"
"Checking iCDP status..."
"Finished checking iCDP status with isEnabled=%i error=%@"
"Prompting for access key for beneficiary trust."
"Successfully obtained access code. Trying to recover trust..."
"Trust recovery was a %@"
"Failed to recover octagon with beneficiary access key. %@"
"Completing the beneficiary trust with results: %@"
"Failed to get the beneficiary access key. %@"
"iCDP is enabled on HSA2 account, attempting to join circle..."
"Attempting to RECOVER backup"
"Finished recovering backup with didRecover=%i didRequestReset=%i error=%@"
"Failed to join circle and recovery is not needed, aborting (error as %@)"
"iCDP is enabled, but the account is not HSA2 enabled. Rolling back iCDP enrollment..."
"Failed to disable iCDP on non-HSA2 account. Disallowing sign-in: %@"
"Hold on to your hats. User has requested a CDP reset."
"CDP reset succeeded, attempting to join/create the circle again"
"Joined circle after CDP reset. Enabling secure backup..."
"Finished enabling secure backup after CDP reset with didEnable=%i error=%@..."
"Joined circle after CDP reset. Skipping secure backup because we don't have a secret"
"CDP reset failed, can not proceed: %@"
"Enabling secure backup..."
"Finished enabling secure backup with didEnable=%i error=%@..."
"Device is in circle but has no local secret or already has a secure backup enabled, skipping secure backup enable"
"Checking for existing records before enabling secure backup..."
"Account preflight failed with error, aborting CDP state machine - %@"
"Attempting to enable iCDP..."
"Finished enabling iCDP with didEnable=%i error=%@"
"Not eligible for iCDP - %@"
"Enabling iCDP has already been attempted, but checking the status reports iCDP is still not enabled. Aborting."
"iCDP is not enabled, but the account is not HSA2 enabled"
"**** DEBUG **** Fake that we must repair"
"Missing PET, starting to re-authenticate"
"Failed to refresh context: %@"
"non-HSA2 account detected, skipping validation"
"Escrow record present, but machine ID is missing"
"We are in circle and have secure backup with machine id and we are bottled, repair not needed"
"Device is eligible for escrow record, but its not present..."
"Local device does not have local secret and is already in circle, repair not needed"
"HSA2 account that is not in circle, suggesting repair needed: %@, %@"
"Attempt silent authentication as we do not have stashed PRK and we do have password."
"Starting silent authentication for repair"
"Failed to perform silent authentication for repair with error %@"
"Refreshing with context"
"Failed to enable KVS with error %@"
"Account preflight failed - Primary account DSID (%@) does not match the DSID specified in the context (%@)"
"Account preflight failed - No primary account is present"
"Found primary account"
"Enabling KVS..."
"Finished enabling KVS with success=%i error=%{public}@"
"KVS is already enabled!"
"Enabling iCDP on sign-in is disabled"
"Attempting to recover backup using the cached local secret..."
"Finished recovery attempt using the cached local secret with didRecover=%i didRequestReset=%i error=%@"
"Failed to recover SecureBackup because no UI provider is present to request the local and/or remote device secrets"
"Proceeding with backup recovery attempt now that the local secret is known..."
"Finished backup recovery attempt with the user-provided local secret with didRecover=%i error=%@"
"Failed to get a local device secret from the UI provider with error %@"
"Prompting for local secret before recovering backup"
"Proceeding with backup recovery attempt without a local device secret"
"Finished backup recovery attempt without local secret with didRecover=%i error=%@"
"Attempting SILENT recovery with the local secret..."
"Silent recovery failed, attempting to recover by prompting for remote secret. error=%@"
"Attempting to enable secure backup after successful SILENT recovery"
"Finished enabling secure backup after successful SILENT recovery with didEnable=%i error=%@"
"Local secret is not present, proceeding to recovery by prompting for remote secret"
"Attempting to enable secure backup after successful INTERACTIVE recovery with multiple-ICSC already in use"
"Finished enabling secure backup after successful INTERACTIVE recovery with didEnable=%i error=%@"
"Skipping enable of SecureBackup after successful INTERACTIVE recovery due to no local secret being present"
"User cancelled remote device secret entry"
"User requested reset of their CDP state!"
"Error prompting user for remote device secret - %@"
@"_enableCustodianRecoveryIfAvailableForContext: returning %i"
"Pref to disable async enable was set..."
"Finished asynchronous enabling Secure Backup"
"Attempting to enable secure backup using the cached secret"
"Finished enabling secure backup using the cached secret with didEnable=%i error=%@"
"Got a valid local secret, attempting to enable secure backup"
"User cancelled local device secret entry"
"Error prompting user for local device secret - %@"
"Asking the UI provider to prompt for the local device secret"
"Failed to enable SecureBackup because no UI provider is present to request the local device secret"
"Failed to delete all backup records with error %@"
"Disabling iCDP..."
"Disabled iCDP, proceeding with deleting all backup records"
"Deleted all backup records after rolling back from iCDP"
"Failed to delete all backup records after rolling back from iCDP: %@"
"Failed to disable iCDP at PCS level: %@"
"Initial sync not required, skipping..."
"Failed to parse data: %@ - %@"
"Context already initialized, returning..."
"Initializing piggybacking channel"
"Initializing TTSU channel"
"Failed to initialize a channel %@"
"Secure channel proxy going away..."
"Creating SecureBackup auth info"
"Failed to fetch iCloud Env"
"Failed to fetch EP URL"
"iCloud Env missing, bad things to come..."
"Auth Token missing, bad things to come..."
"Base URL missing, bad things to come..."
"Requesting the server suppress filtering"
"Invalid configuration request detected"
"Attempting to fetch configuration using request: %@"
"Configuration Response: %@"
"Server Indicated that a retry attempt is needed"
"Failed to load configuraiton: %@"
"Configuration Fetched: %@"
"Older, non-view-aware peers are present therefore user visible keychain is implicitly enabled despite the state of views"
"The device is NOT in circle and so isUserVisibleKeychainSyncEnabled will return NO"
"CDP State repair is needed because the account is iCDP enabled but HSA2 silent auth failed with error %@"
"CDP State repair is needed because the account is iCDP enabled but not in circle"
"Calling setUserControllableViewsSyncStatus with enable=%@ returned success=%@ error: %@"
"Peers reported positive iCloud Keychain state, enabling..."
"Failed to synchronize keychain view state with error: %@"
"Creating initiating payload..."
"Sending initiating payload: %@"
"We completed, but ended up with error... %@"
@"Failed to send initiating message for resume: %@"
"Starting a CDP accepting server..."
"Starting server in dry move, we are not HSA2"
"Failed to process requestor payload on approver side with error: %@"
"Processing reply: %@"
"Failed to process reply with error: %@"
"Secure channel request completed..."
"Sending response: %@"
"Failed to send response with error: %@"
"Sending payload over piggybacking channel"
BEGIN [%lld]: TTSUInitiatingPayload  enableTelemetry=YES 
"Creating an initiating pairing channel..."
"Creating initiating TTSU payload"
"Created initiating TTSU payload with error: %@"
TTSUInitiatingPayload
END [%lld] %fs: TTSUInitiatingPayload  Error=%{public,signpost.telemetry:number1,name=Error}d 
BEGIN [%lld]: TTSUProcessIncomingPayload  enableTelemetry=YES 
"Creating an accepting pairing channel..."
"Processing incoming TTSU payload"
"Processed incoming TTSU payload with error: %@"
"Processed incoming TTSU payload with result"
TTSUProcessIncomingPayload
END [%lld] %fs: TTSUProcessIncomingPayload  Error=%{public,signpost.telemetry:number1,name=Error}d 
"Pairing channel indicated initial sync requirement: %d"
v24@?0@"SecureBackupTermsInfo"8@"NSError"16
CDPDCircleStateObserver Event Queue
v12@?0i8
v16@?0Q8
v32@?0@8Q16^B24
-[CDPDAccountRecoveryValidator confirmRecoveryKey:completion:]
CDPDAccountRecoveryValidator.m
completion
_authProvider
v24@?0@"NSDictionary"8@"NSError"16
v28@?0B8@"NSArray"12@"NSError"20
CDPDConnectionInvalidatedNotification
v8@?0
com.apple.cdp.daemon
com.apple.cdp.recovery
com.apple.authkit.client
com.apple.authkit.client.private
com.apple.authkit.client.internal
com.apple.authkit.client.owner
com.apple.cdp.statemachine
com.apple.cdp.utility
com.apple.cdp.followup
com.apple.cdp.recoverykey
com.apple.cdp.dataprivacy
com.apple.cdp.walrus
com.apple.purplebuddy
com.apple.nanobuddy
com.apple.Preferences
com.apple.nanosystemsettings
v24@?0@"CDPContext"8@"NSError"16
v24@?0@"CDPDRemoteSecretValidationResult"8@"NSError"16
v12@?0B8
v16@?0@"NSError"8
-[CDPDRecoveryValidatedJoinFlowController secretValidator:didFailRecovery:withError:completion:]
CDPDRecoveryValidatedJoinFlowController.m
v20@?0B8@"NSError"12
REMOTE_SECRET_ENTRY_FORGOT_CODE_DIALOG_RK
REMOTE_SECRET_ENTRY_MULTIPLE_INCORRECT_BUTTON_APPROVE
REMOTE_SECRET_ENTRY_MULTIPLE_INCORRECT_BUTTON_OK
REMOTE_SECRET_ENTRY_MULTIPLE_INCORRECT_BUTTON_RESET
GENERIC_CANCEL_BUTTON
v16@?0q8
REMOTE_SECRET_ENTRY_MULTIPLE_INCORRECT_TITLE
REMOTE_SECRET_ENTRY_MULTIPLE_INCORRECT_MESSAGE_SIGNIN
REMOTE_SECRET_ENTRY_MULTIPLE_INCORRECT_MESSAGE_NO_RESET
REMOTE_SECRET_ENTRY_MULTIPLE_INCORRECT_MESSAGE_RESET
REMOTE_SECRET_ENTRY_GLOBAL_LIMIT
RESET_CONFIRMATION_DIALOG_TITLE
RESET_CONFIRMATION_DIALOG_MESSAGE
RESET_CONFIRMATION_DIALOG_BUTTON_RESET
RESET_CONFIRMATION_DIALOG_TITLE_NO_RECOVERY
RESET_CONFIRMATION_DIALOG_MESSAGE_NO_RECOVERY
RESET_CONFIRMATION_DIALOG_BUTTON_RESET_NO_RECOVERY
com.apple.CoreCDP.EscrowPreRecord
preRecordIdentifier
EscrowPreRecordResult
didAttemptEscrowPreRecord
wasSuccess
errorDomain
errorCode
duration
__OSINSTALL_ENVIRONMENT
__AKSYNCBUBBLE
CDPChannelTTSURequestID
CDPChannelTTSUPayloadKey
CDPChannelTTSUPayloadBackupRecordsExistKey
CDPChannelTTSUPayloadiCloudKeychainEnabledKey
v28@?0i8@"NSDictionary"12@"NSDictionary"20
v32@?0@"NSDictionary"8@"NSDictionary"16@?<v@?i@"NSDictionary"@"NSDictionary">24
metadata
ClientMetadata
recordID
kSecureBackupEscrowedSPKIKey
SecureBackupMetadataTimestamp
B24@?0@"CDPDevice"8@"NSDictionary"16
v32@?0@"CDPDevice"8Q16^B24
v32@?0@"CDPDevice"8@"NSError"16^B24
unknown
com.apple.cdpd.circleRequestQueue
com.apple.cdpd.retryQueue
v24@?0@"CDPDCircleJoinResult"8@"NSError"16
v24@?0B8B12@"NSError"16
B16@?0^@8
v24@?0@"CDPLocalSecret"8@"NSError"16
v32@?0@"<CDPDAuthListener>"8Q16^B24
v24@?0@"NSString"8@"NSError"16
ICSC_ENTRY_MULTIPLE_INCORRECT_TITLE
ICSC_ENTRY_MULTIPLE_INCORRECT_MESSAGE
-[CDPDRecoveryKeyValidatorImpl confirmRecoveryKey:completion:]
CDPDRecoveryKeyValidatorImpl.m
device_name
device_model
device_model_version
device_model_class
device_color
device_enclosure_color
device_platform
device_mid
v24@?0@"NSArray"8@"NSError"16
en_US_POSIX
dd-MM-yyyy HH:mm:ss
yyyy-MM-dd HH:mm:ss
v24@?0@"CDPDevice"8@"NSError"16
ForceRecoveryKeySupport
com.apple.corecdp
ForceUseCachedSecret
ForceCachedSecretPurge
-[CDPDSecureBackupController _authenticatedEnableSecureBackupWithContext:completion:]
CDPDSecureBackupController.m
unlockType == MCUnlockScreenSimple || simplePasscodeType == MCNotSimplePasscode
v24@?0@"AKAnisetteData"8@"NSError"16
DeviceColor
DeviceEnclosureColor
no escrow records found
chosen record is empty
< REDACTED >
< array with %lu items >
< dictionary with %lu keys >
userDisabledICK
OfflineLocalSecretChange
RepairCDPState
RegenerateCDPRecoveryKey
SecureTerms
ConfirmExistingSecret
com.apple.cdp.repair.continue
com.apple.cdp.repair.recoverykey
com.apple.cdp.offlinesecret.continue
com.apple.cdp.secureterms.continue
com.apple.cdp.confirmexistingsecret.continue
com.apple.purplebuddy.revisitSkippedSteps
flowSkipIdentifiers
faceID
touchID
prefs:root=SETUP_FINISH&flow=%@
CONFIRM_NEW_SECRET_FOLLOWUP_ITEM_TITLE
CONFIRM_NEW_SECRET_FOLLOWUP_ITEM_INFORMATIVE
CONFIRM_NEW_SECRET_FOLLOWUP_NOTIFICATION_TITLE
CONFIRM_NEW_SECRET_FOLLOWUP_NOTIFICATION_INFORMATIVE
CONFIRM_NEW_SECRET_FOLLOWUP_NOTIFICATION_ACTIVATE_LABEL
SECURE_TERMS_FOLLOWUP_ITEM_TITLE
SECURE_TERMS_FOLLOWUP_ITEM_INFORMATIVE
SECURE_TERMS_FOLLOWUP_NOTIFICATION_INFORMATIVE
SECURE_TERMS_FOLLOWUP_NOTIFICATION_ACTIVATE_LABEL
CONFIRM_EXISTING_SECRET_FOLLOWUP_ITEM_TITLE
CONFIRM_EXISTING_SECRET_FOLLOWUP_ITEM_INFORMATIVE
CONFIRM_EXISTING_SECRET_FOLLOWUP_NOTIFICATION_TITLE
CONFIRM_EXISTING_SECRET_FOLLOWUP_NOTIFICATION_INFORMATIVE
CONFIRM_EXISTING_SECRET_FOLLOWUP_NOTIFICATION_ACTIVATE_LABEL
TRUST_FOLLOWUP_ITEM_TITLE
TRUST_FOLLOWUP_NOTIFICATION_TITLE
TRUST_FOLLOWUP_ITEM_INFORMATIVE
TRUST_FOLLOWUP_NOTIFICATION_INFORMATIVE
SKIPPED_FOLLOWUP_ITEM_TITLE
SKIPPED_FOLLOWUP_ITEM_INFORMATIVE
SKIPPED_FOLLOWUP_NOTIFICATION_TITLE
SKIPPED_FOLLOWUP_NOTIFICATION_INFORMATIVE
TRUST_FOLLOWUP_NOTIFICATION_ACTIVATE_LABEL
RECOVERY_KEY_REPAIR_TITLE
RECOVERY_KEY_REPAIR_INFORMATIVE
RECOVERY_KEY_REPAIR_NOTIFICATION_TITLE
RECOVERY_KEY_REPAIR_FOLLOWUP_NOTIFICATION_INFORMATIVE
RECOVERY_KEY_REPAIR_FOLLOWUP_NOTIFICATION_ACTIVATE_LABEL
D2DENCRYPTION_FOLLOWUP_FACEID_TITLE
D2DENCRYPTION_FOLLOWUP_FACEID_INFOTEXT
D2DENCRYPTION_FOLLOWUP_TOUCHID_TITLE
D2DENCRYPTION_FOLLOWUP_TOUCHID_INFOTEXT
D2DENCRYPTION_FOLLOWUP_ACTION
com.apple.CoreCDPUI.CDPFollowUpExtension
LAContext
/System/Library/Frameworks/LocalAuthentication.framework/LocalAuthentication
BYCapabilities
/System/Library/PrivateFrameworks/SetupAssistant.framework/SetupAssistant
com.apple.notifyd.matching
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.distnoted.matching
UserInfo
X-MMe-Client-Info
%@:%@
true
false
X-Apple-Account-Recovery
Basic %@
Authorization
ACCOUNT_RECOVERY_SOFT_LIMIT_REACHED_TITLE
ACCOUNT_RECOVERY_SOFT_LIMIT_REACHED_MESSAGE
GENERIC_ERROR_DEFAULT_BUTTON
ACCOUNT_RECOVERY_HARD_LIMIT_REACHED_TITLE
ACCOUNT_RECOVERY_HARD_LIMIT_REACHED_MESSAGE_GLOBAL
START_ACCOUNT_RECOVERY_BUTTON
ACCOUNT_RECOVERY_HARD_LIMIT_REACHED_MESSAGE_SINGLE
ACCOUNT_RECOVERY_HARD_LIMIT_REACHED_MESSAGE_MULTI
com.apple.cdp.cfu-dismiss
KEYCHAIN_FOLLOWUP_INTERNAL_BLAME
v16@?0@"NSNotification"8
v24@?0Q8@"NSError"16
v24@?0@"CDPUpdateDataPrivacyContext"8@"NSError"16
FakeDepletedRecords
com.apple.cdp.async-clean-up
v16@?0@"CDPStateHandlerResult"8
failure
success
v24@?0@"AKInheritanceAccessKey"8@"NSError"16
FakeRepairStateRequired
personID
DisableAsyncEnable
com.apple.cdp.async-enable-post-recovery
com.apple.cdp.async-enable
CoreCDP-user-elected
root
com.apple.CoreCDP.LocalSecret
LocalSecretResult
didChangeLocalSecret
didRemoveLocalSecret
https://setup.icloud.com/configurations/init?context=settings
urls
getRecoverySettings
escrowProxyUrl
iCloudEnv
com.apple.Dataclass.KeychainSync
com.apple.mobileme
CDPSecureBackupURLSession
en-us
Accept-Language
application/xml
Accept
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
<CDPDSecureBackupContext: local: %@ remote: %@ preRecord: %@>
REMOTE_SECRET_ENTRY_RECOVERY_ERROR_TITLE
GENERIC_ERROR_ICLOUD_CONNECTION_MESSAGE
v24@?0@"NSData"8@"NSError"16
com.apple.cdpd._startListeningWithProxy
v32@?0@"NSData"8^@16^@24
v24@?0@"AKCircleRequestPayload"8@"NSError"16
CDPDNetworkObserver Event Queue
v32@?0@8@16^B24
com.apple.CoreCDP.BackupRecovery
backupRecoveryResult
backupRecoveryThroughRemoteSecretDidSucceed
backupRecoveryThroughRemoteSecretDidSucceedWithoutLocalSecret
backupRecoveryThroughRemoteSecretDidCancel
backupRecoveryThroughRemoteSecretDidReset
backupRecoveryThroughRemoteSecretDidFail
CDPDTermsInfoBackupController
CDPDCircleStateObserver
CDPDXPCEventListener
NSObject
CDPDAccountRecoveryValidator
CDPRecoveryKeyValidatorInternal
CDPDRecoveryFlowController
CDPDDeviceSecretValidatorDelegate
CDPDRecoveryFlowContext
CDPDXPCListener
NSXPCListenerDelegate
CDPBroadcaster
CDPDRemoteSecretValidationResult
CDPDBackupIDMSResultsParser
CDPDBackupRecoveryResultsParser
Daemon
CDPDRecoveryValidatedJoinFlowController
CDPDRemoteDeviceSecretValidatorDelegate
CDPPiggybackingPayloadProvider
CDPKeychainCircleProxy
CDPDPCSController
CDPAuthenticationHelper
CDPDSecureBackupProxyImpl
CDPDSecureBackupProxy
CDPCAEscrowReporter
CDPDOctagonTrustProxyImpl
CDPDOctagonTrustProxy
CDPDAuthProxyImpl
CDPDAuthProviderInternal
CDPDLocalDeviceSecretProxyImpl
CDPLocalDeviceSecretProxy
CDPDRecoveryOption
Authentication
SecureBackup
CDPDCircleJoinResult
CDPCAReporter
CDPTTSUChannel
CDPSecureChannelProxy
CDPSecureChannelApprovingProxy
CDPDRemoteDeviceSecretValidator
CDPDBackupInfoRecoveryFlowController
Metadata
CDPDCircleController
CDPDLocalSecretController
CDPDCircleDelegate
CDPDSecureBackupDelegate
CDPDAuthObserver
CDPDRecoveryKeyController
CDPDRecoveryKeyValidatorInternalDelegate
CDPDDeviceSecretValidator
CDPRemoteDeviceSecretValidatorProtocol
CDPDataPrivacyAppleAccountProxy
CDPAppleAccountProxy
CDPDRecoveryKeyValidatorImpl
CDPDSecureBackupController
CDPDAccount
CDPDFollowUpFactory
CDPDXPCEventObserver
CDPDBackupFMIPResultsParser
CDPDBackupIDMSErrorProvider
CDPDFollowUpController
CDPDAuthListener
CDPInternalDataPrivacyController
CDPDClientHandler
CDPDaemonProtocol
CDPDStateMachine
CDPStateHandlerResult
Archive
CDPDSecureChannelContext
CDPCALocalSecretReporter
CDPDSecureBackupConfiguration
CDPDLockAssertion
CDPDKeychainSync
CDPDSecureBackupContext
CDPDBackupErrorProviderImpl
CDPDBackupRecoveryErrorProvider
CDPDSecureChannelController
CDPDLocalSecretFollowUpProviderImpl
CDPLocalSecretFollowUpProvider
CDPPiggybackingChannel
CDPDNetworkObserverClient
CDPDNetworkObserver
CDPCABackupRecoveryReporter
CDPTTSUPayloadProvider
_buildSecureBackupTermsInfo:
saveTermsAcceptance:reply:
objectForKeyedSubscript:
setVersion:
setIcloudVersion:
setCountryCode:
setMetadata:
setAltDSID:
version
setObject:forKeyedSubscript:
icloudVersion
countryCode
metadata
altDSID
aa_altDSID
getAcceptedTermsForAltDSID:reply:
saveTermsAcceptance:completion:
fetchTermsAcceptanceForAccount:completion:
init
dealloc
_notificationName
circleStatus:
numberWithUnsignedInteger:
observeCircleStateWithCircleProxy:changeHandler:
addObject:
circleStatusChanged
enumerateObjectsUsingBlock:
circleViewStatusChanged
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
eventReceived:eventValue:
eventReceived:eventInfo:
observeChangeToState:circleProxy:handler:
stopObservingCircleStatusChange
registerListener:
.cxx_destruct
_circleChangeToken
_isObserving
_eventQueue
_circleObservers
setRecoveredInfo:
setRecoveryKey:
_cdpErrorFromAuthKitError:
cdpContext:verifyMasterKey:completion:
domain
isEqualToString:
code
confirmRecoveryKey:completion:
generateRecoveryKey:
initWithContext:authProvider:
recoveredInfo
recoveryKey
_authProvider
_context
_recoveredInfo
_recoveryKey
T@"NSDictionary",C,N,V_recoveredInfo
T@"NSString",C,N,V_recoveryKey
initWithUiProvider:delegate:circleProxy:
recoveryValidatorWithDevices:forMultipleICSC:withCompletionHandler:
beginInteractiveRecoveryForDevices:isUsingMultipleICSC:usingValidator:
retrieveInflatedDevices:
context
initWithContext:delegate:
setIsUsingMultipleICSC:
setValidSecretHandler:
count
setSupportedEscapeOfferMask:
hasPeersForRemoteApproval
copy
cdpContext:promptForRemoteSecretWithDevices:offeringRemoteApproval:validator:
objectAtIndexedSubscript:
hasNumericSecret
numericSecretLength
hasRandomSecret
cdpContext:promptForICSCWithIsNumeric:numericLength:isRandom:validator:
clearAccountInfoCache
useCircleInfoToUpdateNameForDevices:
getBackupRecordDevicesWithOptionForceFetch:completion:
recoverSecureBackupWithContext:completion:
secretValidator:recoverSecureBackupWithContext:completion:
secretValidator:shouldContinueValidationAfterError:
secretValidatorWillAttemptRecovery
secretValidator:shouldAcceptRecoveryError:
secretValidator:didFailRecoveryWithErrors:completion:
secretValidator:didFailRecovery:withError:completion:
initWithContext:uiProvider:secureBackupController:circleProxy:
beginRecovery:
validator
setValidator:
recoveryContext
setRecoveryContext:
circleController
setCircleController:
secureBackupController
setSecureBackupController:
uiProvider
setUiProvider:
_validator
_recoveryContext
_circleController
_secureBackupController
_uiProvider
T@"CDPDRecoveryFlowContext",&,N,V_recoveryContext
T@"CDPDCircleController",&,N,V_circleController
T@"CDPDSecureBackupController",&,N,V_secureBackupController
T@"<CDPStateUIProviderInternal>",&,N,V_uiProvider
T@"<CDPRemoteDeviceSecretValidatorProtocol>",&,N,V_validator
setContext:
setHasPeersForRemoteApproval:
_hasPeersForRemoteApproval
T@"CDPContext",&,N,V_context
TB,N,V_hasPeersForRemoteApproval
initWithMachServiceName:
setDelegate:
resume
_connection:hasEntitlement:
_clientTypeForConnection:
_shouldAcceptNewConnectionWithEntitlements:
initWithConnection:entitlements:clientType:
setExportedInterface:
setExportedObject:
defaultCenter
postNotificationName:object:
setInvalidationHandler:
valueForEntitlement:
boolValue
processIdentifier
initWithBytes:length:encoding:
fileURLWithPath:
bundleWithURL:
bundleIdentifier
sharedInstance
listener:shouldAcceptNewConnection:
start
listener
setListener:
_listener
T@"NSXPCListener",&,N,V_listener
_broadcastNotificationName:userInfo:
secretType
setSecretType:
userDidCancel
setUserDidCancel:
userDidReset
setUserDidReset:
device
setDevice:
validSecret
setValidSecret:
recoveredClique
setRecoveredClique:
_userDidCancel
_userDidReset
_secretType
_device
_validSecret
_recoveredClique
TQ,N,V_secretType
TB,N,V_userDidCancel
TB,N,V_userDidReset
T@"CDPDevice",C,N,V_device
T@"NSString",C,N,V_validSecret
T@"OTClique",&,N,V_recoveredClique
cdp_unarchivedRoot
machineID
dictionary
resultsDictionaryFromRecoveryResult:error:
idmsRecovery
passwordEquivToken
setPasswordEquivToken:
cdpContext:performSilentRecoveryTokenRenewal:
updateWithAuthenticationResults:
silentAuthenticationForContext:withCompletion:
reauthenticateUserWithCompletion:
_escapeOfferForDevices:remoteApproval:forMultipleICSC:
type
numberWithInteger:
supportsRecoveryKey
_supportsCustodianRecovery
supportedEscapeOfferMask
resetAccountCDPState
cancelValidationWithError:
_showAccountResetConfirmationWithoutRecovery:
applyToJoinCircleWithJoinHandler:
cancelApplicationToJoinCircle
circleProxy
recoverOctagonUsingCustodianInfo:completion:
prepareCircleStateForRecovery
performEscrowRecoveryWithRecoveryContext:completion:
isLoginHardLimit
cdp_isCDPErrorWithCode:
cdpContext:beginRemoteApprovalWithValidator:completion:
_handleHardLimitErrorForCurrentContextWithDevice:completion:
isLoginSoftLimit
_handleSoftLimitErrorForCurrentContextWithDevice:completion:
_handleLimit:forDevice:completion:
_userInfoForLimit:withDevice:
mutableCopy
_fallbackRecoveryOptionWithCompletion:
_cancelRecoveryOptionWithCompletion:
_populateUserInfo:recoveryIndexHandlers:withRecoveryOption:
_accountResetRecoveryOptionWithCompletion:
_skipSignInRecoveryOptionWithCompletion:
_showEntryLimitError:withRecoveryOptionHandlers:defaultIndex:completion:
array
localizedRecoveryOption
recoveryHandler
_softLimitErrorBodyForDevice:
_entryLimitTitleForDevice:
_infoDictionaryWithTitle:andBody:
_hardLimitErrorBodyWithDevice:
builderForKey:
localizedString
setLocalizedRecoveryOption:
setRecoveryHandler:
_showAccountResetConfirmationWithCompletion:
cdpContext:showError:withDefaultIndex:withCompletion:
_entryLimitRecoveryKeyAvailableBodyForDevice:
_entryLimitResetAvailableBodyForDevice:
_entryLimitSignInBodyForDevice:
_entryLimitNoResetForRepairForDevice:
localSecretType
addSecretType:
localizedName
stringWithFormat:
modelClass
addDeviceClass:
_resetDataErrorForCurrentContextWithRecoveryIndexMap:
arrayWithObjects:count:
_resetProtectedDataErrorUnrecoverable
remoteSecretValidator:applyToJoinCircleWithJoinHandler:
cancelRemoteSecretValidatorApplicationToJoinCircle:
remoteSecretValidator:attemptCustodianRecoveryWithInfo:completion:
_hardLimitUserInfoForDevice:
sessionWithCircleDelegate:session:error:
initialMessage:
processMessage:error:
isDone
proxyWithSession:error:
initiatingPayload:
processIncomingPayload:error:
isComplete
supportsInteractiveAuth
requiresInitialSync
_session
_delegate
_contextSetupDictionary
pcsRestoreLocalBackup:error:
checkiCDPStatusNetwork:withCompletion:
pcsSynchronizeKeysWithInfo:error:
_reauthenticateAndCheckiCDPStatusWithNetwork:completion:
isAuthenticationError
_checkiCDPStatusNetwork:withCompletion:
_getOrSetupIdentitySetRef:
pcsIdentitySetIsInICDPNetwork:options:error:
pcsIdentitySetIsInICDPLocal:error:
pcsIdentityCreateWithInfo:error:
pcsIdentitySetCompanionInCircle:error:
pcsIdentitySetupWithInfo:error:
_enableCDPWithCompletion:
pcsIdentityMigrateToiCDPWithInfo:error:
_disableCDPWithCompletion:
pcsIdentityMigrateToStingrayWithInfo:error:
setupDictionaryWithContext:
initWithContext:pcsProxy:
recoverKeysWithCompletion:
recoverAndSynchronizeKeysWithCompletion:
isCloudProtectionEnabledLocally:
isCompanionInKeychainCircle:
enableCDPWithCompletion:
disableCDPWithCompletion:
pcsProxy
setPcsProxy:
_pcsProxy
T@"<CDPProtectedCloudStorageProxy>",&,N,V_pcsProxy
_contextForPrimaryAccountSilentAuth
_authWithContext:completion:
_authContextForContext:
setAuthenticationType:
setIsUsernameEditable:
authenticateWithContext:completion:
_contextForPrimaryAccount
dsid
stringValue
setDSID:
appleID
setUsername:
password
_setPassword:
primaryAccountAltDSID
primaryAccountUsername
silentAuthenticationForPrimaryAccountWithCompletion:
_secureBackup
getAccountInfoWithInfo:completionBlockWithResults:
getAccountInfoWithInfo:results:
enableWithInfo:completionBlock:
enableWithInfo:
recoverWithInfo:completionBlockWithResults:
recoverWithInfo:results:
disableWithInfo:completionBlock:
disableWithInfo:
cacheRecoveryKeyWithCompletionBlock:
uncachePassphrase
initWithContext:
accountInfoWithInfo:error:
disableWithInfo:error:
enableWithInfo:error:
recoverWithInfo:error:
cacheRecoveryKey:completionBlock:
uncacheAllSecrets
recoveryKeyAvailabilityWithCompletion:
setDataPrivacyEnabled:completion:
dataPrivacyStatusWithCompletion:
canUpdateDataPrivacyStatusWithCompletion:
cdpContext
setCdpContext:
T@"CDPContext",&,N
_cdpContext
T@"CDPContext",&,N,V_cdpContext
initWithEvent:
sendReport
initWithPreRecordIdentifier:
didAttemptEscrowPreRecord
dictionaryToEscrowAuthenticationInfo:
setEscrowAuth:
setOverrideEscrowCache:
fetchEscrowRecords:error:
fetchAllEscrowRecords:error:
fetchEscrowRecords:forceFetch:error:
fetchAllEscrowRecords:forceFetch:error:
_authContextFromCDPContext:
persistMasterKeyVerifier:context:completion:
primaryAuthKitAccount
cdpContext:persistMasterKeyVerifier:completion:
isPrimaryAppleIDLoggedIn
getDevicesLosingAccountAccessWithCompletion:
setDataPrivacyStatusEnabled:completion:
sharedConnection
isPasscodeSet
hasLocalSecret
recoveryOptionIndex
setRecoveryOptionIndex:
_localizedRecoveryOption
_recoveryHandler
_recoveryOptionIndex
T@"NSString",C,N,V_localizedRecoveryOption
T@?,C,N,V_recoveryHandler
Tq,N,V_recoveryOptionIndex
isAuthKitUnableToPromptError
userInfo
isAuthKitUnableToPromptDueToNetworkError
TB,R,N
unsignedIntegerValue
cdp_isLoginHardLimit
cdp_isLoginSoftLimit
addEntriesFromDictionary:
errorWithDomain:code:userInfo:
isICSCRecoveryHardLimitError
isICSCInvalidError
isCoolDownError
isRecoveryPETHardLimitError
isRecoveryPETSoftLimitError
errorByExtendingUserInfoWithDictionary:
didJoin
setDidJoin:
needsBackupRecovery
setNeedsBackupRecovery:
hasPeersWithCDPBackupRecords
setHasPeersWithCDPBackupRecords:
requiresEscrowRecordsFetch
setRequiresEscrowRecordsFetch:
setRequiresInitialSync:
remotePeeriCKState
setRemotePeeriCKState:
circleStatus
setCircleStatus:
_didJoin
_needsBackupRecovery
_hasPeersWithCDPBackupRecords
_requiresEscrowRecordsFetch
_requiresInitialSync
_remotePeeriCKState
_circleStatus
TB,V_didJoin
TB,V_needsBackupRecovery
TB,V_hasPeersForRemoteApproval
TB,V_hasPeersWithCDPBackupRecords
TB,V_requiresEscrowRecordsFetch
TB,V_requiresInitialSync
TQ,V_remotePeeriCKState
TQ,V_circleStatus
machAbsoluteTimeToTimeInterval:
numberWithDouble:
_eventName
_reportData
_initTime
_clock_timebase
sharingChannel
initWithTemplate:
dictionaryWithObjects:forKeys:count:
integerValue
sendRequestID:options:request:responseHandler:
numberWithBool:
registerRequestID:options:handler:
activate
sendPayload:completion:
approverBackupRecordsExist
approveriCloudKeychainState
listenForPayloadsWithHandler:
setApproverBackupRecordsExist:
setApproveriCloudKeychainState:
_sharingSession
_approverBackupRecordsExist
_approveriCloudKeychainState
_sentInitialResponse
cancelApproveFromAnotherDevice
_decoratedDelegate
isAttemptingRecovery
validSecretHandler
delegate
approveFromAnotherDeviceWithCompletion:
validateCustodianRecoveryInfo:withCompletion:
supportedEscapeOfferMaskCompletion:
_requestToJoinCompletion
_isWaitingForRemoteApproval
initWithSecureBackupMetadataInfo:
serialNumber
setRecoveryStatus:
setCoolOffPeriod:
escrowInformationMetadata
initWithEscrowRecordMetadata:
recordId
secureBackupUsesMultipleIcscs
remainingAttempts
escrowRecordToDictionary:
recoveryStatus
coolOffEnd
initWithLongLong:
_dateWithSecureBackupDateString:
clientMetadata
deviceMid
escrowedSpki
deviceName
deviceModel
deviceModelVersion
deviceModelClass
devicePlatform
secureBackupUsesNumericPassphrase
secureBackupNumericPassphraseLength
secureBackupMetadataTimestamp
dateWithTimeIntervalSince1970:
deviceColor
deviceEnclosureColor
initWithSecureBackupRecordInfo:
initWithEscrowRecord:
resultParser
allKeys
errorProvider
prevailingLocalSecretType
setPrevailingSecret:
predicateWithBlock:
filteredArrayUsingPredicate:
recordNotFoundErrorWithUnderlyingError:
verficationFailedErrorwithUnderlyingError:
supportsErrorPresentation
cdpContext:showError:withCompletion:
_recoveryListFromDevices:
cooldownErrorWithUnderlyingError:
handleSoftLimitError:completion:
setRecoveryRecords:
globalHardLimitError
handleHardLimitError:completion:
_updateRecordRecoveryStatusForRecordDictionary:
recordID
containsObject:
firstObject
globalHardLimitErrorWithRecord:
hardLimitErrorForRecord:
enumerateKeysAndObjectsUsingBlock:
beginRecoveryWithCompletion:
setResultParser:
setErrorProvider:
recoveryRecords
_resultParser
_errorProvider
_recoveryRecords
T@"NSArray",&,N,V_recoveryRecords
T@"<CDPDBackupRecoveryResultsParser>",&,N,V_resultParser
T@"<CDPDBackupRecoveryErrorProvider>",&,N,V_errorProvider
stringWithUTF8String:
processName
T@"NSString",R,C,N
peerId
synchronizeCircleViews
joinCircleIgnoringBackups:completion:
_joinCircleIgnoringBackups:completion:
contextForController:
supportsSecureBackupRecovery
custodianRecoveryInfo
secureChannelContextForController:
initialize:
_joinCircleFallbackWithResult:ignoreBackups:completion:
promptForCredentials:
joinCircle:
_attemptCustodianBackupRecoveryWithInfo:result:ignoreBackups:completion:
canRetryCliqueStatus
nextRetryInterval
_requestToJoinAndWaitForSuccessWithHandler:
circleController:secureBackupRecordsArePresentWithCompletion:
registerCredentials
cdpContext:promptForInteractiveAuthenticationWithCompletion:
removeThisDeviceFromCircle:
requestToResetProtectedData:
_silentReauthWithCompletion:
_peerDeviceNamesByPeerID
countByEnumeratingWithState:objects:count:
objectForKey:
setLocalizedName:
peerDeviceNamesByPeerID
_requestToJoinWithObserver:completion:
requestToJoinCircle:
_requestCircleJoinWithObserver:requestBlock:completion:
_requestToJoinWithRequestBlock:completion:
requestToJoinCircleAfterRestore:
peerID
joinCircleWithCompletion:
resetCircleIncludingCloudKitData:cloudKitResetReasonDescription:withCompletion:
_requestToJoinAfterRestoreAndWaitForSuccessWithHandler:
setCircleProxy:
_circleJoinObserver
_requestSynchronizationQueue
_retryQueue
_cliqueStatusRetryCount
_retryIntervals
_circleProxy
T@"NSObject<CDPDCircleDelegate>",W,N,V_delegate
T@"<CDPDCircleProxy>",&,N,V_circleProxy
setAppleID:
primaryAccountDSID
longLongValue
numberWithLongLong:
setDsid:
initWithContext:uiProvider:delegate:
_handleCompletionStatus:preRecord:
_attemptToEscrowPreRecord:completion:
_createContextForSecret:withCompletion:
length
setCachedLocalSecret:
setCachedLocalSecretType:
initWithContext:uiProvider:
_repairWithStateMachine:completion:
_localSecretChangedTo:secretType:completion:
_cdpStateMachine
validatedSecret
_collectLocalSecretWithCompletion:
shouldPerformRepairWithOptionForceFetch:completion:
setPreRecordUUID:
lock
unlock
checkAndRemoveExistingThenEnableSecureBackupRecordWithContext:completion:
didChangeLocalSecret
setLocalSecret:
setLocalSecretType:
didRemoveLocalSecret
followUpProvider
deleteConfirmExistingSecretFollowUp
deleteLocalSecretChangeFollowUp
postConfirmExistingSecretFollowUp
postLocalSecretChangeFollowUp
set_alwaysCreateEscrowRecord:
repairCloudDataProtectionStateWithCompletion:
initWithAuthenticationResults:
setType:
_setContextWithAuthResults:
primaryAccountStashedPRK
cdpContext:promptForLocalSecretWithCompletion:
backupRecordsArePresentWithCompletion:
circlePeerIDForSecureBackupController:
synchronizeCircleViewsForSecureBackupContext:
promptForAdoptionOfMultipleICSCWithCompletion:
promptForLocalSecretWithCompletion:
attemptToEscrowPreRecord:completion:
localSecretChangedTo:secretType:completion:
finishOfflineLocalSecretChangeWithCompletion:
setFollowUpProvider:
_followUpProvider
T@"<CDPLocalSecretFollowUpProvider>",&,N,V_followUpProvider
UTF8String
securityLevelChanged:
_authListeners
initWithContext:uiProvider:authProvider:
initWithContext:uiProvider:authProvider:circleProxy:secureBackupProxy:octagonTrustProxy:pcsProxy:
initWithContext:secureBackupProxy:octagonTrustProxy:
recoveryKeyVerified
generateVerifierWithRecoveryKey:error:
cdpContext:presentRecoveryKeyWithValidator:completion:
disableRecoveryKeyWithCompletion:
cdpContext:promptForRecoveryKeyWithValidator:completion:
enableSecureBackupWithRecoveryKey:completion:
generateRecoveryKeyWithInfo:error:
enableBackupWithRecoveryKey:completion:
recoverState:
recoverAndSynchronizeStateWithServer:
isRecoveryKeyAvailable
generateNewRecoveryKey:
deleteRecoveryKey:
generateRandomRecoveryKey:
recoverDataUsingMasterKeyWithCompletion:
sbProxy
setSbProxy:
otProxy
setOtProxy:
recoveryAuthProvider
setRecoveryAuthProvider:
internalAuthProvider
setInternalAuthProvider:
_pcsController
_sbProxy
_otProxy
_recoveryAuthProvider
_internalAuthProvider
T@"<CDPDSecureBackupProxy>",&,N,V_sbProxy
T@"<CDPDOctagonTrustProxy>",&,N,V_otProxy
T@"<CDPAuthProviderInternal>",&,N,V_recoveryAuthProvider
T@"<CDPDAuthProviderInternal>",&,N,V_internalAuthProvider
_isFailedSecret:forDevice:
setRecoverySecret:
_handleMultiCSCRecoveryResults:clique:type:secret:device:completion:
_attemptToRecoverWithRecoveryKey:completion:
isUsingMultipleICSC
_handleMultiCSCRecoveryFailureForDevice:recoveryError:secret:
removeObject:
_handleRecoveryFailureForFinalDevice:completion:
validateSecret:devices:type:withCompletion:
_attemptToRecoverDevice:withSecret:completion:
_performSingleiCSCRecoveryWithSecret:type:completion:
findMyiPhoneUUID
cdp_errorWithCode:userInfo:
removeAllObjects
_handleDelegateValidationError:
_isInvalidICSCError:
setRemainingAttempts:
_failedSecretsForDevice:
setObject:forKey:
_failedSingleICSCs
cdp_errorWithCode:
validateRecoveryKey:withCompletion:
TQ,N
failedAttempts
_isAttemptingRecovery
_failedAttempts
_failedSecrets
_failedRecoveryKeys
_recoveryErrors
_depletedRemainingAttempts
_currentDevice
_isUsingMultipleICSC
_validSecretHandler
TB,N,V_isUsingMultipleICSC
T@?,C,N,V_validSecretHandler
T@"<CDPDDeviceSecretValidatorDelegate>",W,N,V_delegate
TQ,N,VsupportedEscapeOfferMask
custodianAvailableWithCompletion:
setRecoveryKeyVerified:
_recoveryKeyVerified
TB,N,V_recoveryKeyVerified
configurationWithContext:
accountInfoWithCompletion:
accountInfoFetchSetupDictionary
_sanitizedInfoDictionary:
_printableAccountInfo:
_accountInfo:
_getBackupRecordDevicesIncludingUnrecoverableRecords:
_getOctagonEscrowBackupRecordDevicesWithOptionForceFetch:completion:
fakeNearlyDepletedRecords
recordDate
laterDate:
handleCDPDevices:
fetchAllEscrowRecordsWithOptionForceFetch:completion:
fetchEscrowRecordsWithOptionForceFetch:completion:
desiresAllRecords
setRecordDate:
setHasRandomSecret:
localeWithLocaleIdentifier:
setLocale:
setDateFormat:
dateFromString:
timeZoneForSecondsFromGMT:
setTimeZone:
_enableSecureBackupWithContext:completion:
deleteSingleICSCBackupWithCompletion:
recordInfo
checkForExistingRecord:
checkForExistingRecordWithPeerId:completion:
checkForExistingRecordMatchingPredicate:forceFetch:completion:
_authenticatedEnableSecureBackupWithContext:completion:
circleJoinResult
contextForStateRepair
postFollowUpItemForContext:error:
authenticatedEnableSecureBackupWithRecoveryKey:error:
escrowAuthInfo
setUsePreviouslyCachedSecret:
localSecret
_clientMetadataWithSecretType:length:
usePreviouslyCachedSecret
unlockScreenType
numberWithInt:
unlockScreenTypeWithOutSimplePasscodeType:
removeObjectForKey:
preRecordUUID
_currentAnisetteData
archivedDataWithRootObject:requiringSecureCoding:error:
_disableThenEnableWithInfo:error:
_disableSecureBackup:
anisetteDataWithCompletion:
marketingModel
modelVersion
deviceClass
cliqueConfiguration
performEscrowRecoveryWithContextData:escrowArguments:error:
dictionaryToEscrowRecord:
CDPRecordContextToDictionary:
performEscrowRecoveryWithData:error:
performSilentEscrowRecovery:cdpContext:allRecords:error:
creationDate
secureBackupTimestamp
recordStatus
_recoveryInfoDictionaryFromContext:
dictionaryToCDPRecordContext:
silentRecovery
performSilentEscrowRecoveryWithCDPContext:error:
isUsingMultipleiCSC
recordIsEmpty:
performEscrowRecovery:cdpContext:escrowRecord:error:
performEscrowRecoveryWithRecoveryContext:error:
setUsePreviouslyCachedRecoveryKey:
_recoverBackupDictionaryWithContext:error:
recoverySecret
usePreviouslyCachedRecoveryKey
_deleteAllBackupRecordsWithCompletion:
_deleteSingleICSCBackupWithCompletion:
_disableRecoveryKey:
synchronizeKeyValueStoreWithCompletion:
isEligibleForCDPWithCompletion:
enableSecureBackupWithContext:completion:
upgradeICSCRecordsThenEnableSecureBackupWithContext:completion:
deleteAllBackupRecordsWithCompletion:
disableSecureBackupWithCompletion:
cachedAccountInfo
setCachedAccountInfo:
setFakeNearlyDepletedRecords:
secureBackupProxy
setSecureBackupProxy:
octagonTrustProxy
setOctagonTrustProxy:
configuration
setConfiguration:
_fakeNearlyDepletedRecords
_cachedAccountInfo
_secureBackupProxy
_octagonTrustProxy
_configuration
T@"NSDictionary",&,N,V_cachedAccountInfo
TB,N,V_fakeNearlyDepletedRecords
T@"<CDPDSecureBackupProxy>",&,N,V_secureBackupProxy
T@"<CDPDOctagonTrustProxy>",&,N,V_octagonTrustProxy
T@"<CDPDSecureBackupDelegate>",W,N,V_delegate
T@"CDPDSecureBackupConfiguration",&,N,V_configuration
T@"CDPContext",R,N,V_context
T@"<CDPStateUIProviderInternal>",R,N,V_uiProvider
primaryAppleAccount
accountPropertyForKey:
setAccountProperty:forKey:
defaultStore
saveVerifiedAccount:error:
isICDPEnabledForDSID:checkWithServer:
hasDisabledKeychainExplicitly
setHasDisabledKeychainExplicitly:
isICDPEnabledForDSID:
TB,N
followUpType
contextToIdentifierMap
_followUpForOfflineSecretChangeWithContext:
_followUpForRepairWithContext:
_followUpForRecoveryKeyRepairWithContext:
_followUpForSettingUpBiometricsWithContext:
_followUpForSecureTermsWithContext:
_followUpForConfirmExistingSecretWithContext:
_baseFollowUpItemWithContext:
_offlineSecretChangeFollowUpAction
setActions:
notification
setActivateAction:
setFirstNotificationDelay:
setTitle:
setInformativeText:
setLabel:
setIdentifier:
_secureTermsFollowUpAction
_confirmExistingSecretFollowUpAction
identifier
followUpItemForIdentifier:userInfo:
repairType
_followUpActionForRecoveryKeyRepair
_isBiometricCapable
_isBiometricAuthEnrolled
setGroupIdentifier:
setUniqueIdentifier:
setTargetBundleIdentifier:
_supportsFaceID
URLWithString:
setUrl:
setUserInfo:
setDisplayStyle:
setExtensionIdentifier:
shouldNotify
setFrequency:
force
setForceDelivery:
setNotification:
canEvaluatePolicy:error:
sharedCapabilities
supportsPearl
mgHasMesa
identifierForContext:
followUpItemWithContext:
_followUpActionForRepair
_localizedStringForKey:
_setupDarwinListener
_setupDistributedListener
sharedObserver
_eventListeners
setValue:forHTTPHeaderField:
dataUsingEncoding:
base64EncodedStringWithOptions:
currentDevice
serverFriendlyDescription
cdp_addAuthHeaderWithContext:
cdp_addClientInfoHeader
initWithClientIdentifier:
hasFullCDPSupport
isInternalBuild
informativeText
stringByAppendingString:
clearPendingFollowUpItemsWithUniqueIdentifiers:error:
_followUpControllerForContext:
postFollowUpItem:error:
dismissFollowUpWithIdentifier:completion:
currentConnection
setRepairType:
clearFollowUpWithContext:error:
_followUpController
_followUpFactory
statusToSet
enableDataPrivacyWithContext:completion:
disableDataPrivacyWithCompletion:
_shouldContinueAfterPrimaryAccountCheckWithContext:completion:
_shouldContinueAfterRecoveryOptionsCheckWithContext:completion:
cdp_errorWithCode:underlyingError:
_didFinishCheckingForRecoveryOptionsWithContext:completion:
userAcceptedDevicesToLoseAccountAccess
_deviceCheckForDataPrivacyDidCompleteWithContext:devicesLosingAccountAccess:deviceListFetchError:finalCompletion:
setDevicesThatLoseAccountAccessOnEnable:
_didEnableDataPrivacyOnAuthKitWithContext:enableError:finalCompletion:
_didEnableDataPrivacyOnSecurityWithContext:enableError:finalCompletion:
initWithAuthKitInterface:appleAccountInterface:securityInterface:
statusForDataPrivacyWithCompletion:
updateDataPrivacyWithContext:completion:
authKitInterface
setAuthKitInterface:
appleAccountInterface
setAppleAccountInterface:
securityInterface
setSecurityInterface:
_authKitInterface
_appleAccountInterface
_securityInterface
T@"<CDPDAuthProviderInternal>",&,N,V_authKitInterface
T@"<CDPAppleAccountProxy>",&,N,V_appleAccountInterface
T@"<CDPDSecureBackupProxy>",&,N,V_securityInterface
_allowStateMachineAccess
set_useSecureBackupCachedPassphrase:
setSupportsSkipSignIn:
_startObservingConnectionStateForRepairWithStateMachine:
_removeObserver
handleCloudDataProtectionStateWithCompletion:
preflightContext:
contextForPrimaryAccount
augmentWithCredentialsFromContext:
initWithContext:circleProxy:
startCircleApplicationApprovalServerWithContext:completion:
postFollowUpWithContext:completion:
addObserverForName:object:queue:usingBlock:
removeObserver:
attemptToEscrowPreRecord:context:completion:
_allowFollowUps
_allowDataRecovery
idmsMasterKeyRecovery
set_authProvider:
_performRecoveryWithContext:uiProvider:authProvider:errorProviuder:resultParser:secureBackUpController:completion:
keyChainSync
isUserVisibleKeychainSyncEnabled
setUserVisibleKeychainSyncEnabled:withCompletion:
keyChainSyncWithProxy:
removeNonViewAwarePeersFromCircleWithCompletion:
_allowRecoveryKey
handleCloudDataProtectionStateWithContext:uiProvider:completion:
repairCloudDataProtectionStateWithContext:uiProvider:completion:
shouldPerformRepairForContext:forceFetch:completion:
recoverAndSynchronizeSquirrelWithContext:uiProvider:completion:
recoverSquirrelWithContext:uiProvider:completion:
localSecretChangedTo:secretType:context:uiProvider:completion:
finishOfflineLocalSecretChangeWithContext:uiProvider:completion:
finishCyrusFlowAfterTermsAgreementWithContext:uiProvider:completion:
generateNewRecoveryKeyWithContext:uiProvider:completion:
deleteRecoveryKeyWithContext:uiProvider:completion:
generateRandomRecoveryKeyWithContext:completion:
isRecoveryKeyAvailableWithCompletion:
isICDPEnabledForDSID:checkWithServer:completion:
hasLocalSecretWithCompletion:
isUserVisibleKeychainSyncEnabledWithCompletion:
removeNonViewAwarePeersFromCircleWithContext:completion:
performRecoveryWithContext:uiProvider:authProvider:completion:
clearFollowUpWithContext:completion:
attemptToEscrowPreRecord:preRecordUUID:secretType:context:completion:
_allowUtilityAccess
_connection
_entitlements
_clientType
_notificationObject
lockWithError:
_ignoreLockAssertErrors
shouldCompleteSignIn
cloudDataProtectionEnabled
_isICloudKeychainDisabledByManagementProfile
peeriCloudKeychainState
synchronizeKeychainViewSetWithOtherPeers:
matchKeychainViewState:
postNotificationName:object:userInfo:deliverImmediately:
reportSuccess
error
reportFailure:
failSignInOnError
_handleCloudDataProtectionStateWithCompletion:
beneficiaryIdentifier
_handleBeneficiaryTrustWithCompletion:
isHSA2Account
tryRegisteringCredentials
waitForUpdate
_enrollOrDisableCDPAfterEnabledStateVerified:
_handleiCDPStatusCheckError:completion:
_attemptCDPEnable:
_handlePreflightError:completion:
_preflightAccountStateWithContext:completion:
resultWithError:
resultWithCloudDataProtectionEnabled:shouldCompleteSignIn:error:
recoverOctagonWithContext:inheritanceKey:completion:
cdpContext:promptForBeneficiaryAccessKeyWithCompletion:
_handleJoinResult:completion:
_handleRecoveryResetRequestWithCompletion:
_recoverSecureBackupWithCircleJoinResult:completion:
_disableCloudDataProtectionWithCompletion:
_enableSecureBackupWithCircleJoinResult:completion:
successResult
_resetAccountCDPStateWithCompletion:
resultWithCloudDataProtectionEnabled:shouldCompleteSignIn:peeriCloudKeychainState:error:
_predicateForRecordUpgradeCheckIgnoringBottled
_alwaysCreateEscrowRecord
isFederatedAccount
_confirmCDPEligibilityWithCompletion:
_refreshAndAuthenticateWithContext:
_authenticatedShouldPerformRepairWithOptionForceFetch:completion:
_predicateForRepair
simplePublicKey
_performSilentlyAuthenticatedRepair:
_authenticatedRepairCloudDataProtectionStateWithCompletion:
_performInteractivelyAuthenticatedRepair:
setPassword:
cachedLocalSecret
cachedLocalSecretType
isBoolSettingLockedDownByRestrictions:
aa_primaryAppleAccount
accountProperties
_enableKVSForAccount:store:completion:
enabledDataclasses
setEnabled:forDataclass:
saveAccount:withCompletionHandler:
shouldAllowCDPEnrollment
_useSecureBackupCachedPassphrase
_attemptBackupRecoveryWithLocalSecret:type:useCachedSecret:circleJoinResult:completion:
_handleInteractiveRecoveryFlowWithCircleJoinResult:completion:
setSilentRecovery:
setCircleJoinResult:
_attemptBackupRecoveryByPromptingForRemoteSecretWithLocalSecret:localSecretType:useCachedSecret:circleJoinResult:completion:
didJoinCircleAfterRecovery:
_postRecoveryEnableSecureBackupWithContext:completion:
_enableCustodianRecoveryIfAvailableForContext:
backupRecoveryDidSucceed
backupRecoveryDidSucceedWithoutLocalSecret
backupRecoveryDidCancel
backupRecoveryDidReset
backupRecoveryDidFailWithError:
authKitAccountWithAltDSID:
set_supportsCustodianRecovery:
custodianEnabledForAccount:
_disableAsyncModeRequested
cdpContext:promptForAdoptionOfMultipleICSC:
_predicateForRecordUpgradeCheck
pcsController
setPcsController:
attemptedCDPEnable
setAttemptedCDPEnable:
_inheritanceTrustController
_attemptedCDPEnable
T@"CDPDPCSController",&,N,V_pcsController
TB,N,V_attemptedCDPEnable
setCloudDataProtectionEnabled:
setShouldCompleteSignIn:
setPeeriCloudKeychainState:
setError:
_cloudDataProtectionEnabled
_shouldCompleteSignIn
_peeriCloudKeychainState
_error
TB,V_cloudDataProtectionEnabled
TB,V_shouldCompleteSignIn
TQ,V_peeriCloudKeychainState
T@"NSError",&,V_error
initForReadingFromData:error:
setWithObjects:
decodeObjectOfClasses:forKey:
name
reason
finishDecoding
duplexSession
resumeContext
initWithCircleProxy:
initWithChannel:dataProvider:circleProxy:
keychainCircleProxy
setKeychainCircleProxy:
secureChannelProxy
setSecureChannelProxy:
_keychainCircleProxy
_secureChannelProxy
T@"<CDPKeychainCircleProxy>",&,N,V_keychainCircleProxy
T@"<CDPSecureChannelProxy>",&,N,V_secureChannelProxy
configurationWithContext:andSession:
guestMode
_iCloudEnvironment
_escrowProxyURL
iCloudEnv
authToken
escrowURL
_escrowConfigurationBag
_setupConfigurationURLs
_escrowConfigurationBagFull
_fetchConfigurationDictionary
_fetchEscrowConfigurationBag
_escrowProxyConfigurationURL
_configurationRequestWithURLString:
initWithURL:
_escrowProxyConfigurationURLRequest
_fetchConfigurationWithRequest:
_configurationInfoURLRequest
statusCode
propertyListWithData:options:format:error:
dataTaskWithRequest:completionHandler:
_configurationURLs
_escrowConfigurationURLs
defaultSessionConfiguration
initWithIdentifier:
set_appleIDContext:
sessionWithConfiguration:
_isThisDeviceInCircle
hasNonViewAwarePeers
fetchUserControllableViewsSyncingEnabled:
cachedCircleStatus:
_setKeychainSyncState:
_preflightCircleStatusWithCompletion:
_processAuthFailure:completion:
setUserControllableViewsSyncStatus:error:
removeNonViewAwarePeers:
_defaultUserVisibleViewSet
anyPeerHasEnabledViewsInSet:error:
_silentRecovery
_usePreviouslyCachedRecoveryKey
_usePreviouslyCachedSecret
_localSecret
_localSecretType
_recoverySecret
_circleJoinResult
_preRecordUUID
T@"NSString",C,N,V_localSecret
TQ,N,V_localSecretType
T@"NSString",C,N,V_recoverySecret
TB,N,V_silentRecovery
TB,N,V_usePreviouslyCachedRecoveryKey
TB,N,V_usePreviouslyCachedSecret
T@"CDPDCircleJoinResult",&,N,V_circleJoinResult
T@"NSString",&,N,V_preRecordUUID
_prevailingSecret
_processAndReplyWithMessage:completion:
primaryAccountSecurityLevel
_skipEscrowFetches
_startListeningWithProxy:
_secureChannelContext
contextForOfflinePasscodeChange
contextForConfirmExistingSecret
postRepairFollowUp
_replyContextWithPakeData:
clientErrorCode
clientInfo
performCircleRequestWithContext:completion:
payload
replyPayload
setPayload:
setClientInfo:
eventHandler
setEventHandler:
_eventHandler
T@?,C,V_eventHandler
UUID
UUIDString
startObservingNetwork
_networkReachabilityDidChangeWithFlags:
addNetworkObserverWithEventHandler:
removeObserverWithToken:
_networkIsReachable
_clientsLock
_clientsByUUID
_networkReach
pairingChannelInitiator
exchangePacket:complete:error:
pairingChannelAcceptor
needInitialSync
_pairingChannel
_complete
v32@0:8@16@?24
@24@0:8@16
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8r*16Q24
v32@0:8r*16@24
v32@0:8r*16@"NSDictionary"24
v16@0:8
r*16@0:8
v40@0:8Q16@24@?32
v24@0:8@16
@"NSObject<OS_dispatch_queue>"
@"NSMutableArray"
v24@0:8@?16
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v24@0:8@?<v@?@"NSString"@"NSError">16
@32@0:8@16@24
@"<CDPAuthProviderInternal>"
@"CDPContext"
@"NSDictionary"
@"NSString"
v40@0:8@16@24@?32
B32@0:8@16@24
B32@0:8@16^@24
v48@0:8@16@24@32@?40
v40@0:8@"CDPDDeviceSecretValidator"16@"CDPDSecureBackupContext"24@?<v@?@"CDPDRemoteSecretValidationResult"@"NSError">32
B32@0:8@"CDPDDeviceSecretValidator"16@"NSError"24
B32@0:8@"CDPDDeviceSecretValidator"16^@24
v40@0:8@"CDPDDeviceSecretValidator"16@"NSDictionary"24@?<v@?B@"NSError">32
v48@0:8@"CDPDDeviceSecretValidator"16@"CDPDevice"24@"NSError"32@?<v@?B@"NSError">40
@48@0:8@16@24@32@40
@36@0:8@16B24@?28
v36@0:8@16B24@28
@"<CDPRemoteDeviceSecretValidatorProtocol>"
@"CDPDRecoveryFlowContext"
@"CDPDCircleController"
@"CDPDSecureBackupController"
@"<CDPStateUIProviderInternal>"
v20@0:8B16
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
B24@0:8Q16
Q24@0:8@16
@"NSXPCListener"
v32@0:8@16@24
v24@0:8Q16
@"CDPDevice"
@"OTClique"
@32@0:8@16^@24
@"NSDictionary"32@0:8@"CDPDRemoteSecretValidationResult"16^@24
v32@0:8@"CDPDRemoteDeviceSecretValidator"16@?<v@?B@"NSError">24
v24@0:8@"CDPDRemoteDeviceSecretValidator"16
v40@0:8@"CDPDRemoteDeviceSecretValidator"16@"CDPCustodianRecoveryInfo"24@?<v@?B@"NSError">32
Q32@0:8@16B24B28
v40@0:8@16@24@32
@32@0:8Q16@24
@24@0:8@?16
v48@0:8@16@24q32@?40
@24@0:8^@16
@"NSData"24@0:8^@16
@"NSData"32@0:8@"NSData"16^@24
@"KCJoiningRequestCircleSession"
@"KCJoiningRequestAccountCircleDelegate"
v28@0:8B16@?20
B24@0:8^@16
^{_PCSIdentitySetData=}24@0:8^@16
@"<CDPProtectedCloudStorageProxy>"
@24@0:8@"CDPContext"16
@"NSDictionary"32@0:8@"NSDictionary"16^@24
B32@0:8@"NSDictionary"16^@24
v32@0:8@"NSDictionary"16@?<v@?@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSError">24
v24@0:8@?<v@?B@"NSError">16
v28@0:8B16@?<v@?@"NSError">20
v24@0:8@?<v@?Q@"NSError">16
@"CDPContext"16@0:8
v24@0:8@"CDPContext"16
@36@0:8@16B24^@28
@"NSArray"36@0:8@"NSDictionary"16B24^@28
v40@0:8@"CDPContext"16@"NSDictionary"24@?<v@?B@"NSError">32
v24@0:8@?<v@?@"NSArray"@"NSError">16
@?16@0:8
q16@0:8
v24@0:8q16
d24@0:8Q16
@"NSMutableDictionary"
{mach_timebase_info="numer"I"denom"I}
v32@0:8@"NSData"16@?<v@?@"NSData"@"NSError">24
v24@0:8@?<v@?@"NSData"^@^@>16
@"CUMessageSession"
@"<CDPDBackupRecoveryResultsParser>"
@"<CDPDBackupRecoveryErrorProvider>"
@"NSArray"
@40@0:8@16@24@32
v36@0:8@16B24@?28
v44@0:8@16@24B32@?36
v36@0:8B16@20@?28
v32@0:8@?16@?24
v40@0:8@16@?24@?32
@"CDPDCircleStateObserver"
@"NSObject<CDPDCircleDelegate>"
@"<CDPDCircleProxy>"
v32@0:8@"CDPDCircleController"16@?<v@?BB@"NSError">24
@"CDPContext"24@0:8@"CDPDCircleController"16
@"CDPDSecureChannelContext"24@0:8@"CDPDCircleController"16
@"NSString"24@0:8@"CDPDSecureBackupController"16
B24@0:8@"CDPDSecureBackupContext"16
v24@0:8@?<v@?@"CDPLocalSecret"@"NSError">16
v40@0:8@16Q24@?32
v24@0:8B16B20
@"<CDPLocalSecretFollowUpProvider>"
@"NSString"32@0:8@"NSDictionary"16^@24
@72@0:8@16@24@32@40@48@56@64
@"CDPDPCSController"
@"<CDPDSecureBackupProxy>"
@"<CDPDOctagonTrustProxy>"
@"<CDPDAuthProviderInternal>"
v48@0:8@16@24Q32@?40
v48@0:8@"NSString"16@"NSArray"24Q32@?<v@?BB@"NSError">40
v32@0:8@"NSString"16@?<v@?BB@"NSError">24
v24@0:8@"NSError"16
v24@0:8@?<v@?Q>16
v32@0:8@"CDPCustodianRecoveryInfo"16@?<v@?B@"NSError">24
v64@0:8@16@24Q32@40@48@?56
@"NSMutableSet"
@"<CDPDDeviceSecretValidatorDelegate>"
@"<CDPDRecoveryKeyValidatorInternalDelegate>"
@32@0:8Q16Q24
@"<CDPDSecureBackupDelegate>"
@"CDPDSecureBackupConfiguration"
B28@0:8@16B24
@"FLFollowUpController"
@"CDPDFollowUpFactory"
B32@0:8@16@?24
@"<CDPAppleAccountProxy>"
v56@0:8@16Q24@32@40@?48
Vv24@0:8@?16
Vv32@0:8@16@?24
v40@0:8@"CDPContext"16@"<CDPStateUIProviderInternal>"24@?<v@?BB@"NSError">32
v32@0:8@"CDPContext"16@?<v@?B@"NSError">24
v40@0:8@"CDPContext"16@"<CDPStateUIProviderInternal>"24@?<v@?B@"NSError">32
v36@0:8@"CDPContext"16B24@?<v@?B@"NSError">28
v56@0:8@"NSString"16Q24@"CDPContext"32@"<CDPStateUIProviderInternal>"40@?<v@?B@"NSError">48
v40@0:8@"NSString"16@"CDPContext"24@?<v@?B@"NSError">32
v32@0:8@"CDPContext"16@?<v@?@"NSString"@"NSError">24
Vv24@0:8@?<v@?B@"NSError">16
v36@0:8@"NSString"16B24@?<v@?B>28
v24@0:8@?<v@?B>16
v28@0:8B16@?<v@?B@"NSError">20
v48@0:8@"CDPContext"16@"<CDPStateUIProviderInternal>"24@"<CDPAuthProviderInternal>"32@?<v@?@"NSDictionary"@"NSError">40
v32@0:8@"CDPFollowUpContext"16@?<v@?B@"NSError">24
Vv24@0:8@?<v@?Q@"NSError">16
Vv32@0:8@"CDPUpdateDataPrivacyContext"16@?<v@?@"CDPUpdateDataPrivacyContext"@"NSError">24
v32@0:8@"ACAccount"16@?<v@?@"NSDictionary"@"NSError">24
@40@0:8@16Q24Q32
v56@0:8@16@24Q32@40@?48
v72@0:8@16@24@32@40@48@56@?64
@"NSXPCConnection"
v52@0:8@16Q24B32@36@?44
@"CDPInheritanceTrustController"
@32@0:8B16B20@24
@40@0:8B16B20Q24@32
@"NSError"
@"<CDPKeychainCircleProxy>"
@"<CDPSecureChannelProxy>"
@"NSURLSession"
B20@0:8B16
@"CDPDCircleJoinResult"
@32@0:8@"CDPContext"16@"<CDPStateUIProviderInternal>"24
@"NSError"24@0:8@"NSError"16
@"NSError"16@0:8
@"NSError"24@0:8@"CDPDevice"16
v32@0:8@"NSError"16@?<v@?@"NSError">24
@"CDPDSecureChannelContext"
v20@0:8I16
@"NSLock"
^{__SCNetworkReachability=}
@"KCPairingChannel"
