@(#)PROGRAM:dyld  PROJECT:dyld-1066.8
33333
8oQS
')uB
lEd/
6 PQ
pCRF
Yg:a
JZJ{.
#FLR
_QS}
%s.%u
%s%s
v40@?0I8I12r^v16Q24^B32
__TEXT
v24@?0r^{SegmentInfo=QQQQQ*IIb1b1b1b1b12b16}8^B16
~Mapper
ProcessAtlas.cpp
_flatMapping == nullptr
((uint64_t)addr + size) <= mapping.address + mapping.size
unpin
_flatMapping != nullptr
__PAGEZERO
v28@?0r^{SectionInfo={SegmentInfo=QQQQQ*IIb1b1b1b1b12b16}QQ*IIIII}8B16^B20
SharedCache
_mapper
/System/Volumes/Preboot/Cryptexes/OS/System/Library/dyld/
/System/Volumes/Preboot/Cryptexes/OS/System/DriverKit/System/Library/dyld/
/private/preboot/Cryptexes/OS/System/Library/Caches/com.apple.dyld/
/private/preboot/Cryptexes/OS/System/DriverKit/System/Library/dyld/
/System/Cryptexes/OS/System/Library/Caches/com.apple.dyld/
/System/Cryptexes/OS/System/Library/dyld/
/System/Volumes/Preboot/Cryptexes/Incoming/OS/System/Library/dyld/
/System/Volumes/Preboot/Cryptexes/Incoming/OS/System/DriverKit/System/Library/dyld/
/private/preboot/Cryptexes/Incoming/OS/System/Library/Caches/com.apple.dyld/
/private/preboot/Cryptexes/Incoming/OS/System/DriverKit/System/Library/dyld/
/System/Cryptexes/Incoming/OS/System/Library/Caches/com.apple.dyld/
/System/Cryptexes/Incoming/OS/System/Library/dyld/
/System/Library/Caches/com.apple.dyld/
/System/DriverKit/System/Library/dyld/
/System/Library/dyld/
.development
.symbols
com.apple.dyld.introspection
v8@?0
task_dyld_process_info_notify_register
task_dyld_process_info_notify_deregister
setupNotifications
dispatch_get_current_queue() == _queue
kr != NULL
_state == Disconnected
teardownNotifications
_state == Connected
handle != 0
dyld: received unknown message id=0x%X, size=%d
v16@?0^v8
registerAtlasChangedEventHandler_block_invoke
registerEventHandler_block_invoke
unregisterEventHandler_block_invoke
i->second.block != NULL
deserialize
dyld_v1
children
BTree.h
!leaf() && "Leaf nodes do not contain children"
reserveExact
Vector.h
capacity() >= newCapacity
~UniquePtr
Allocator.h
metadata->type() == AllocationMetadata::UniquePtr
UniquePtr
metadata->type() == AllocationMetadata::NormalPtr
insert
size() != capacity()
index != capacity()
prepareForInsertion
_depth == _btree->_depth && "prepareForInsertion only works on iterators leaf nodes"
splitChild
!leaf() && "Leaf nodes do not have children to split"
size() < capacity() && "There must be room in this node for an additional child"
children()[index]->full() && "The child being split must be full"
!newChild->full() && !child->full() && "After split the child nodes should be full"
erase
i.currentNode()->leaf()
leaf()
size() > index
rebalanceFromErasure
_depth == _btree->_depth && "rebalanceFromErasure only works on iterators to leaf nodes"
_indexes[0] == 0
merge
!leaf() && "A leaf node does not have children to merge"
index < size() && "A node must have a successor node to merge with"
__DATA
x86_64
x86_64h
unknown
__AUTH_CONST
__AUTH
__DATA_DIRTY
__DATA_CONST
__LINKEDIT
dyld_process_snapshot_create_from_data
dyld_introspection.cpp
reserved1 == nullptr
reserved2 == 0
v32@?0Q8I16I20^B24
release
mach_vm_remap_new
mach_vm_remap
v24@?0^v8Q16
__OBJC
__OBJC_CONST
addWithOverflowOrReturnZero
dyld_process_info.cpp
!__builtin_add_overflow(a, b, &result)
v40@?0{mach_header_64=IiiIIIII}8
slice %d extends beyond end of file
cpu type in slice (0x%08X) does not match fat header (0x%08X)
cpu subtype in slice (0x%08X) does not match fat header (0x%08X)
!<arch>
file is static library
slice is not page aligned
fat header too large: %u entries
fat header malformed, architecture slices extend beyond end of file
%s, 
not a fat file
arm64 x86_64
arm64e
arm64
armv7k
armv7s
armv7
armv7m
armv7em
arm64_32
i386
armv6m
armv8m
v20@?0i8I12I16
/usr/lib/system/libsystem_kernel.dylib
/usr/lib/system/libsystem_platform.dylib
/usr/lib/system/libsystem_pthread.dylib
/usr/lib/system/libsystem_platform_debug.dylib
/usr/lib/system/libsystem_pthread_debug.dylib
/usr/lib/system/host/liblaunch_sim.dylib
v24@?0r^{load_command=II}8^B16
MachO header exceeds file length
file does not start with MH_MAGIC[_64]
load commands exceed length of first segment
file does not start with MH_MAGIC[_64]: 0x%08X 0x%08X
unknown mach-o filetype (%u)
malformed load command #%u of %u at %p with mh=%p, extends past sizeofcmds
malformed load command #%u of %u at %p with mh=%p, size (0x%X) too small
malformed load command #%u of %u at %p with mh=%p, size (0x%X) not multiple of 4
malformed load command #%u of %u at %p with mh=%p, size (0x%X) is too large, load commands end at %p
open
FileManager.cpp
_fd == -1
operator()
i != _fsUUIDMap->end()
allocate_buffer
Allocator.cpp
prefix == 16 || prefix == 0
(uintptr_t)_freeBuffer.address%16 == 0
Could not vm_allocate 0x
 bytes (kr: 0x
vm_allocate_bytes
0 && "vm_allocate failed"
_regionList
%lu @ 0x%lx
_freeSizeHash
_freeAddressHash
0x%lx: %lu
reserveRange
insert_op.second == true
reloadMagazine
newRegion.address != nullptr
_magazine[0].size != 0
refill
buffer.size > 0
(uintptr_t)buffer.address > 0
dyld_process_info_notify_base
dyld_process_info_notify.cpp
dyld: ~dyld_process_info_notify_base called while still connected
SIMULATOR_ARCHS
@(#)PROGRAM:dyld  PROJECT:dyld-1066.8
33333
8oQS
')uB
lEd/
6 PQ
pCRF
Yg:a
JZJ{.
#FLR
_QS}
%s.%u
%s%s
v40@?0I8I12r^v16Q24^B32
__TEXT
v24@?0r^{SegmentInfo=QQQQQ*IIb1b1b1b1b12b16}8^B16
~Mapper
ProcessAtlas.cpp
_flatMapping == nullptr
((uint64_t)addr + size) <= mapping.address + mapping.size
unpin
_flatMapping != nullptr
__PAGEZERO
v28@?0r^{SectionInfo={SegmentInfo=QQQQQ*IIb1b1b1b1b12b16}QQ*IIIII}8B16^B20
SharedCache
_mapper
/System/Volumes/Preboot/Cryptexes/OS/System/Library/dyld/
/System/Volumes/Preboot/Cryptexes/OS/System/DriverKit/System/Library/dyld/
/private/preboot/Cryptexes/OS/System/Library/Caches/com.apple.dyld/
/private/preboot/Cryptexes/OS/System/DriverKit/System/Library/dyld/
/System/Cryptexes/OS/System/Library/Caches/com.apple.dyld/
/System/Cryptexes/OS/System/Library/dyld/
/System/Volumes/Preboot/Cryptexes/Incoming/OS/System/Library/dyld/
/System/Volumes/Preboot/Cryptexes/Incoming/OS/System/DriverKit/System/Library/dyld/
/private/preboot/Cryptexes/Incoming/OS/System/Library/Caches/com.apple.dyld/
/private/preboot/Cryptexes/Incoming/OS/System/DriverKit/System/Library/dyld/
/System/Cryptexes/Incoming/OS/System/Library/Caches/com.apple.dyld/
/System/Cryptexes/Incoming/OS/System/Library/dyld/
/System/Library/Caches/com.apple.dyld/
/System/DriverKit/System/Library/dyld/
/System/Library/dyld/
.development
.symbols
com.apple.dyld.introspection
v8@?0
task_dyld_process_info_notify_register
task_dyld_process_info_notify_deregister
setupNotifications
dispatch_get_current_queue() == _queue
kr != NULL
_state == Disconnected
teardownNotifications
_state == Connected
handle != 0
dyld: received unknown message id=0x%X, size=%d
v16@?0^v8
registerAtlasChangedEventHandler_block_invoke
registerEventHandler_block_invoke
unregisterEventHandler_block_invoke
i->second.block != NULL
deserialize
dyld_v1
children
BTree.h
!leaf() && "Leaf nodes do not contain children"
reserveExact
Vector.h
capacity() >= newCapacity
~UniquePtr
Allocator.h
metadata->type() == AllocationMetadata::UniquePtr
UniquePtr
metadata->type() == AllocationMetadata::NormalPtr
insert
size() != capacity()
index != capacity()
prepareForInsertion
_depth == _btree->_depth && "prepareForInsertion only works on iterators leaf nodes"
splitChild
!leaf() && "Leaf nodes do not have children to split"
size() < capacity() && "There must be room in this node for an additional child"
children()[index]->full() && "The child being split must be full"
!newChild->full() && !child->full() && "After split the child nodes should be full"
erase
i.currentNode()->leaf()
leaf()
size() > index
rebalanceFromErasure
_depth == _btree->_depth && "rebalanceFromErasure only works on iterators to leaf nodes"
_indexes[0] == 0
merge
!leaf() && "A leaf node does not have children to merge"
index < size() && "A node must have a successor node to merge with"
__DATA
x86_64
x86_64h
unknown
__AUTH_CONST
__AUTH
__DATA_DIRTY
__DATA_CONST
__LINKEDIT
dyld_process_snapshot_create_from_data
dyld_introspection.cpp
reserved1 == nullptr
reserved2 == 0
v32@?0Q8I16I20^B24
release
mach_vm_remap_new
mach_vm_remap
v24@?0^v8Q16
__OBJC
__OBJC_CONST
addWithOverflowOrReturnZero
dyld_process_info.cpp
!__builtin_add_overflow(a, b, &result)
v40@?0{mach_header_64=IiiIIIII}8
/usr/lib/dyld
slice %d extends beyond end of file
cpu type in slice (0x%08X) does not match fat header (0x%08X)
cpu subtype in slice (0x%08X) does not match fat header (0x%08X)
!<arch>
file is static library
slice is not page aligned
fat header too large: %u entries
fat header malformed, architecture slices extend beyond end of file
%s, 
not a fat file
arm64 x86_64
arm64e
arm64
armv7k
armv7s
armv7
armv7m
armv7em
arm64_32
i386
armv6m
armv8m
v20@?0i8I12I16
/usr/lib/system/libsystem_kernel.dylib
/usr/lib/system/libsystem_platform.dylib
/usr/lib/system/libsystem_pthread.dylib
/usr/lib/system/libsystem_platform_debug.dylib
/usr/lib/system/libsystem_pthread_debug.dylib
/usr/lib/system/host/liblaunch_sim.dylib
v24@?0r^{load_command=II}8^B16
MachO header exceeds file length
file does not start with MH_MAGIC[_64]
load commands exceed length of first segment
file does not start with MH_MAGIC[_64]: 0x%08X 0x%08X
unknown mach-o filetype (%u)
malformed load command #%u of %u at %p with mh=%p, extends past sizeofcmds
malformed load command #%u of %u at %p with mh=%p, size (0x%X) too small
malformed load command #%u of %u at %p with mh=%p, size (0x%X) not multiple of 4
malformed load command #%u of %u at %p with mh=%p, size (0x%X) is too large, load commands end at %p
open
FileManager.cpp
_fd == -1
operator()
i != _fsUUIDMap->end()
allocate_buffer
Allocator.cpp
prefix == 16 || prefix == 0
(uintptr_t)_freeBuffer.address%16 == 0
Could not vm_allocate 0x
 bytes (kr: 0x
vm_allocate_bytes
0 && "vm_allocate failed"
_regionList
%lu @ 0x%lx
_freeSizeHash
_freeAddressHash
0x%lx: %lu
reserveRange
insert_op.second == true
reloadMagazine
newRegion.address != nullptr
_magazine[0].size != 0
refill
buffer.size > 0
(uintptr_t)buffer.address > 0
dyld_process_info_notify_base
dyld_process_info_notify.cpp
dyld: ~dyld_process_info_notify_base called while still connected
SIMULATOR_ARCHS
