@(#)PROGRAM:KeyboardArbiter  PROJECT:UIKit-1
Don't call %@.
-[UIDelayedAction init]
blurredScene
lastActiveScene
com.apple.Spotlight
com.apple.KeyboardArbiter.client.inputuihost
com.apple.KeyboardArbiter.client.debuginfo
com.apple.UIKit.remote-keyboard
com.apple.UIKit.keyboard-arbiter
v8@?0
invalid.remote-keyboards
v16@?0@"NSDictionary"8
scene data omitted;
disabler = %@;
lastEventSource = %ld;
current state = %@;
active handle = %@;
handles = %@>
Message
error
Type
Timestamp
v16@?0@"NSArray"8
v16@?0@?<v@?@"NSArray">8
v16@?0@?<v@?@>8
Description
v16@?0@8
Active
LastActivated
FocusRequested
Suspended
Process
Invalid response
Timed out/hung
v24@?0@"<_UIKeyboardArbitrationClient>"8@?<v@?>16
-[_UIKeyboardArbiter retrieveClientDebugInformationWithCompletion:]
v12@?0B8
v16@?0@"NSError"8
-[_UIKeyboardArbiter scheduleWindowTimeout]_block_invoke_2
-[_UIKeyboardArbiter updateKeyboardUIStatus:fromHandler:]_block_invoke
com.apple.springboard
-[_UIKeyboardArbiter updateKeyboardStatus:fromHandler:]_block_invoke
-[_UIKeyboardArbiter completeKeyboardStatusChangedFromHandler:]
v16@?0@"_UIKeyboardArbiterClientHandle"8
-[_UIKeyboardArbiter notifyHeightUpdated:]
v16@?0@"FBSMutableSceneSettings"8
-[_UIKeyboardArbiter updateSuppression:ofPID:active:]
-[_UIKeyboardArbiter processWithPID:foreground:suspended:]_block_invoke
-[_UIKeyboardArbiter transition:eventStage:withInfo:fromHandler:]
-[_UIKeyboardArbiter handlerRequestedFocus:shouldStealKeyboard:]
_UIKeyboardArbiter.m
Handler must have a remote scene identity: %@
-[_UIKeyboardArbiter handlerRequestedForcedClientSceneIdentityUpdate:]
v16@?0Q8
-[_UIKeyboardArbiter setKeyboardTotalDisable:withFence:fromHandler:completionHandler:]
-[_UIKeyboardArbiter signalEventSourceChanged:fromHandler:completionHandler:]
B32@?0@"_UIKeyboardArbiterClientHandle"8Q16^B24
com.apple.TapToRadar
com.apple.appleseed.FeedbackAssistant
com.ios.uikit.TestingHarness
-[_UIKeyboardArbiterClientHandle _deactivateScene]
Layer must exist for us to attach visibility to.
v16@?0@"<BSServiceConnectionEndpointInjectorConfiguring>"8
<%@: %p; PID %i: %@ <%@>%@; hosting PIDs %@; level %f; active %@ [wants %@]; suppression %i; iav %f; on screen %@; isAcquiringFocus: %@>
 (suspended)
com.apple.UIKit.KeyboardManagement.message
FBSceneManager
Class getFBSceneManagerClass(void)_block_invoke
Unable to find class %s
void *FrontBoardLibrary(void)
FBDisplayManager
Class getFBDisplayManagerClass(void)_block_invoke
DisableArbiterConnectionTimeout
com.apple.keyboard
com.apple.UIKit
KeyboardArbiter
com.apple.UIKit.keyboard-arbiter.debug
DisableKeyboardDebugInfo
Info
Debug
Error
_UISceneSessionRoleKeyboard
<%@; scene = %@>
_UIKeyboardArbiterHost.m
Expected a scene but did not find one.
FBLocalSynchronousSceneClientProvider
Class getFBLocalSynchronousSceneClientProviderClass(void)_block_invoke
Failed to connect - scheduling retry
runOperations: %s Failed to access %@ remote service: %@
runOperations: %s Failed to create proxy for %@
HW kbd: target process %d (%{public}@) scene:%{public}@
HW kbd: no change
HW kbd: Keyboard set successfully pid:%d (%{public}@) scene:%{public}@
HW kbd: Failed to set keyboard focus pid:%d (%{public}@) scene:%{public}@
[%@] Dropping %@
[%@] rejecting Spotlight's keyboardChange because %@ is active
[%@] _activeInputDestinationHandle is now %{public}@; information: %{public}@
Client %@ attempted to connect, but no scene
[%@] Rejecting attach for %@ (currently %@)
[%@] Attaching [%@] %@
[%@] Found no clients
[%@] Found several potential clients: %@
[%@] Found expected client: %@
[%@] Detaching [%@] %@
[%@] Updating focus context to %@ level %f
[%@] invoke didChangeKeyboardScenePresentationMode: %lu
[%@] Setting suppressed %@ on %@
NO HANDLE for NIL token 
NO HANDLE for %{public}@ -- choices:%{public}@ 
[%@] started running
[%@] abnormal state - resuming handle was already active
[%@] suspended
[%@] foregrounded
[%@] no longer foreground
Ignoring transition from %@ because it's not active
[%{public}@] Handler requested focus: %{public}@; steal keyboard: %{public}@
[%@] _focusRequestedHandle is now %{public}@; stole keyboard: %{public}@
[%{public}@] Handler requested forced scene identity update in the client: %{public}@
Advisor: No handle found for currently focused PID: %{public}d; sceneIdentity: %{public}@
Advisor: KeyboardFocus from _activeHandleForFocusEvaluation [%@]
Advisor: No active handle. Returning nil.
Advisor: KeyboardFocus from _previouslyActiveHandle [%@]
Advisor: KeyboardFocus from _recentlyActiveSceneIdentities [%@]
Advisor: KeyboardFocus from _clients [%@]
Advisor: Last resort, returning nil (FrontBoard decides)
Advisor: Scene focus update without advisor input enqueued on the main thread: generation: %lu; PID: %d; sceneIdentity: %@
Advisor: Scene focus update without advisor input: generation: %lu; PID: %d; sceneIdentity: %@
Advisor: Applying pending scene focus update from omniscient delegate: generation: %lu; PID: %d; sceneIdentity: %@
Advisor: Updating current keyboard focus to PID: %d; sceneIdentity: %@
Advisor: Skipping reevaluation as there is no change. Active PID: %d, activeHandleID: %@
Advisor: Triggering reevaluation. Active PID: %d, activeHandleID: %@
Advisor: Deliberation result: %@
Advisor: Stealing keyboard for handle: %@
[%@] Received new connection [%@]
[%@] Lost connection [%@]
%@ was not invalidated before release
[%@] %@: currentKeyboard: %@; focusContext: %@; pids: %@
[%@] %@ Rejecting update as the handle is currently acquiring focus and this update could lead to a loop: updated sceneIdentity: %@
[%@] %@ Clearing acquiring focus flags for update: sceneIdentity: %@
[%@] %@ sceneIdentity: %@
[%@] %@ focusContext: %@; %i/%@/%f
[%@] %@ Rejecting update as the handle or its hosted services are not on screen: sceneIdentity: %@
[%@] Releasing: %@
[%@] Created: %@
Keyboard attaching layer before removing prior layer...
[%@] %@: %@
[%@] %@
[%@] %@: %f
[%@] %@: %i/%@
[%@] %@: %@/%i/%@
[%@] denied debug information request
[%@] denied more debug information request
[%@] took process assertion
[%@] could not take process assertion
[%@] requested process assertion (count=%lu)
[%@] timed out with %lu assertions remaining, disconnecting
[%@] released process assertion (count=%lu)
[%@] Disabled keyboard disablement due to invalidation
[%@] denied focus request to bundle %@
[%@] %@ <%@> %{public}@
[%@] denied focus request to pid %ld
[%{public}@] %{public}@: remoteSceneIdentity: %{public}@; handle: %{public}@; stealKeyboard: %{public}@
[%@] %@: %@ (%@)
[%@] %@: %d
softlink:r:path:/System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard
softlink:r:path:/System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard
UIDelayedAction
UIHeldAction
_UIKBArbiterInputUIEventsProtocol
_UIKBArbiterInputDestinationProtocol
_UIKBArbiterInputEventsProtocol
NSObject
_UIKBArbiterDelegateInputDestination
_UIKBArbiterDelegateProtocol
_UIKeyboardArbiter
NSXPCListenerDelegate
_UIKeyboardArbiterAdvisor
_UIKeyboardArbiterClientHandle
_UIKeyboardArbitration
_UIKeyboardChangedInformationWithManualFence
_UIKeyboardArbiter_ForSpringBoard
_UIKeyboardArbiterDebug
_UIKeyboardArbiterDebugEntry
_UIKeyboardArbiterDebugEntryString
_UIKeyboardArbiterDebugEntryDictionaries
_UIKeyboardSceneSpecification
_UIKeyboardArbiterHost
_UIKeyboardArbiterLink
_acquiringFocus
T#,R
_activeHandleForFocusEvaluation
T@"<_UIKeyboardArbiterOmniscientDelegate>",W,N,V_omniscientDelegate
_hasDebugInformationEntitlement
T@"FBSCAContextSceneLayer",R,&,V_sceneLayer
_multipleScenes
T@"NSDate",R,Vm_startDate
_string
T@"NSString",R,C
activateHandle:
T@"NSXPCConnection",R,V_connection
attach:
T@"_UIKeyboardArbiter",W,N
dealloc
T@"_UIKeyboardArbiterClientHandle",R,W,V_activeInputDestinationHandle
isProxy
T@"_UIKeyboardArbiterClientHandle",W,N,V_keyboardUIHandle
m_delay
T@"_UIKeyboardChangedInformation",&,N,V_lastUpdate
release
T@,&,Vm_userInfo
serviceListener
TB,N,V_hasDebugInformationEntitlement
setArbiterHost:
TB,N,V_pause
setRequestedCorrectionOfClientSceneIdentityWhileAcquiringFocus:
TB,R
touchWithDelay:
TB,R,V_active
updateSuppression:ofPID:active:
.cxx_destruct
_active
T@"<_UIKeyboardArbiterLink>",R,N,V_sceneLink
_clientSettings
T@"<_UIKeyboardArbiterSceneDelegate>",W,N,V_sceneDelegate
_importantCount
T@"FBSSceneLayer",R
_pendingFocusLock_sceneIdentity
T@"NSString",R,&,V_bundleIdentifier
activateClients
T@"NSString",R,N
allKeys
T@"UIKBArbiterClientFocusContext",R,&,V_remoteFocusContext
containsObject:
T@"_UIKeyboardArbiter",W,N,Vowner
detach:
T@"_UIKeyboardArbiterClientHandle",R,W,V_focusRequestedHandle
isValid
T@"_UIKeyboardArbiterHost",&,N,V_arbiterHost
m_timer
T@,&,Vm_target
running
TB,N,GisAcquiringFocus,V_acquiringFocus
TB,N,V_inputUIHost
setInputUIHost:
TB,N,V_requestedCorrectionOfClientSceneIdentityWhileAcquiringFocus
tokenForString:
TB,R,N
transition:eventStage:withInfo:
TB,R,V_deactivating
TB,R,V_multipleScenes
TB,R,V_wantsFence
TB,R,Vm_canceled
TB,V_running
TQ,N,V_keyboardScenePresentationMode
TQ,R
TQ,R,V_wantedState
Td,R,V_iavHeight
Td,R,V_level
Ti,R
Ti,R,N
Ti,V_prevActiveIdentifier
Ti,V_suppressionCount
_activeInputDestinationHandle
_applyPendingSceneFocusUpdateFromOmniscientDelegateForGeneration:
_arbiterHost
_arbiterQueue_keyboardFocusDidChangeWithoutAdvisorInputForGeneration:pid:sceneIdentity:
_baseDelay
_bundleIdentifier
_cachedContext
_canceled
_checkingShowability
_childrenSuppressionCount
_clients
_configureDomain:notification:
_configureKey:domain:defaultValue:
_connection
_createSceneWithIdentifier:initialClientSettings:
_cullRecentlyActiveSceneIdentities
_currentFocusPID
_currentFocusSceneIdentity
_currentFocusedHandle
_deactivateScene
_deactivating
_descriptionWithScene:
_dictionaries
_disable
_disablingHandle
_endpointGrantInjector
_entries
_findForHandle:deepestHandleHandler:
_findForHandle:deepestHandleHandler:checklist:
_focusRequestedHandle
_holdBegan
_holding
_hostedPids
_iavHeight
_inputUIHost
_invalidated
_isKeyboardOnScreen:
_keyboardOnScreen
_keyboardScenePresentationMode
_keyboardUIHandle
_lastActivatedHandle
_lastEventSource
_lastUpdate
_level
_listener
_message
_omniscientDelegate
_owner
_pause
_pendingFocusLock
_pendingFocusLock_PID
_pendingFocusLock_generation
_prevActiveIdentifier
_previouslyActiveHandle
_queue
_recentlyActiveSceneIdentities
_reevaluateRemoteFocusContext:
_remoteFocusContext
_remoteKeepAliveAssertion
_remoteKeepAliveAssertionCount
_remoteKeepAliveTimerCount
_requestedCorrectionOfClientSceneIdentityWhileAcquiringFocus
_running
_scene
_sceneDelegate
_sceneLayer
_sceneLink
_setQueue:
_shouldRejectSceneIdentityUpdateCorrectingClientIfNeeded:fromSelector:
_startDate
_stateMonitor
_suppressionCount
_timeBalance
_timestamp
_trackRecentlyActiveArbiterHandle:
_type
_updateCounter
_updateCurrentKeyboardFocusToPID:sceneIdentity:
_wantedState
_wantsFence
_workspace
_xpcConnection
acquiringFocus
active
activeInputDestinationHandle
addAsynchronousData:
addEntriesFromDictionary:
addEntry:
addHostedPids:
addObject:
addObjectsFromArray:
addTimer:forMode:
allValues
animationFence
appendFormat:
appendString:
applicationShouldFocusWithBundle:onCompletion:
arbiterHost
array
arrayByAddingObjectsFromArray:
arrayWithCapacity:
arrayWithObjects:count:
attachLayer:
attemptConnection
autorelease
boolValue
bounds
bundleIdentifier
cacheWindowContext
cancel
captureStateForDebug
checkActivation:
checkHostingState
class
clearAcquiringFocusFlags
completeKeyboardStatusChangedFromHandler:
configureEncodedClassesForXPCConnection:
conformsToProtocol:
connectWithQueue:
connection
contextID
copy
copyWithoutFence
copyWithoutIAVKeyboardRect:
count
countByEnumeratingWithState:objects:count:
createSceneWithCompletion:
createSceneWithIdentifier:parameters:clientProvider:transitionContext:
currentHandler
currentRunLoop
date
dateByAddingTimeInterval:
deactivateHandle:
deactivating
debugDescription
debugWithMessage:
delay
deleteCharactersInRange:
description
destroyScene:withTransitionContext:
detachLayer:
dictionary
dictionaryWithObjects:forKeys:count:
didAttachLayer
didDetachLayer
displayConfiguration
doubleValue
entryWithDictionaries:
entryWithMessage:type:
enumerateContents:
errorWithDomain:code:userInfo:
errorWithMessage:
exportedInterface
fbsSceneForScene:
firstObject
focusApplicationWithProcessIdentifier:context:onCompletion:
focusApplicationWithProcessIdentifier:context:stealingKeyboard:onCompletion:
focusContext
focusContext:didChangeKeyboardScenePresentationMode:
focusContext:didChangeKeyboardScenePresentationStyle:
focusContextDidChange:
focusRequestedHandle
focusedSceneIdentityDidChange:
forwardingTargetForSelector:
getDebugInfoDictionariesWithCompletionHandler:
grantWithNamespace:sourceEnvironment:attributes:
handleFailureInFunction:file:lineNumber:description:
handleFailureInMethod:object:file:lineNumber:description:
handleUnexpectedDeallocForHandler:
handlerForBundleID:
handlerForPID:
handlerForToken:
handlerRequestedFocus:shouldStealKeyboard:
handlerRequestedForcedClientSceneIdentityUpdate:
handlerWithArbiter:forConnection:
hasDebugInformationEntitlement
hasHostedPids
hash
hold
hostBundleIdentifier
hostBundleIdentifierForHandle:hosts:
hostForHandle:hosts:
iavHeight
identifier
identityForIdentifier:
importance
indexOfObjectPassingTest:
infoWithMessage:
informationForKeyboardDown
init
initWithBundleIDs:states:elevatedPriority:
initWithCAContextID:level:
initWithFireDate:interval:target:selector:userInfo:repeats:
initWithLink:
initWithMachServiceName:
initWithPID:flags:reason:name:withHandler:
initWithTarget:action:userInfo:delay:
initWithTarget:action:userInfo:delay:mode:
initWithUTF8String:
injectorWithConfigurator:
inputUIHost
inputUIOOP
intValue
interfaceWithProtocol:
invalidate
isAcquiringFocus
isAvailable
isEqual:
isEqualToString:
isHandlerShowableWithHandler:
isHolding
isHostingPID:
isInternal
isKeyboardOnScreen
isKindOfClass:
isMainThread
isMemberOfClass:
keyboardArbiterAdvisor:requestedSceneFocusDeliberationForFocusedPid:
keyboardFocusDidChangeWithoutAdvisorInputToPid:sceneIdentity:
keyboardOnScreen
keyboardPosition
keyboardPositionWithIAV
keyboardScene
keyboardScenePresentationMode
keyboardUIHandle
lastActivatedHandle
lastObject
lastUpdate
launch
launchAdvisorWithOmniscientDelegate:
launchAdvisorWithOmniscientDelegate:sceneDelegate:
length
level
listener:shouldAcceptNewConnection:
m_action
m_canceled
m_runLoopMode
m_startDate
m_target
m_userInfo
mainBundle
mainConfiguration
multipleScenes
mutableCopy
newClientConnected:withExpectedState:onConnected:
newSceneIdentityTokenForIdentity:
notifyHeightUpdated:
notifyHostedPIDsOfSuppression:
notifyHostedPIDsOfSuppression:active:
notifyIAVHeight:
null
numberWithDouble:
numberWithInt:
numberWithUnsignedInt:
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
omniscientDelegate
orderedSet
owner
parametersForSpecification:
pause
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
popFence
preferredInterfaceOrientation
preferredLevel
preferredSceneIdentityForKeyboardFocusWithChangeInformation:
presentingKeyboardProcessIdentifier
prevActiveIdentifier
processIdentifier
processWithPID:foreground:suspended:
pushFence:
queue_activeProcessResignWithCompletion:
queue_getDebugInfoWithCompletion:
queue_keyboardChanged:onComplete:
queue_keyboardChangedWithCompletion:
queue_keyboardIAVChanged:onComplete:
queue_keyboardSuppressed:withCompletion:
queue_keyboardTransition:event:withInfo:onComplete:
queue_keyboardUIDidChange:onComplete:
queue_sceneBecameFocused:withCompletion:
queue_setKeyboardDisabled:withCompletion:
queue_setLastEventSource:withCompletion:
raise:format:
reevaluateFocusedSceneIdentityForKeyboardFocusWithChangeInformation:stealingKeyboardOnSuccess:
reevaluateHardwareKeyboardClientStealingKeyboardOnSuccess:
reevaluateSceneClientSettings
releaseProcessAssertion
remoteFocusContext
remoteObjectInterface
remoteObjectProxyWithErrorHandler:
removeLastObject
removeObject:
removeObjectAtIndex:
removeObjectsInRange:
requestedCorrectionOfClientSceneIdentityWhileAcquiringFocus
resetAnimationFencing
respondsToSelector:
resume
retain
retainCount
retrieveClientDebugInformationWithCompletion:
retrieveDebugInformation:
retrieveDebugInformationWithCompletion:
retrieveMoreDebugInformationWithCompletion:
reverseObjectEnumerator
runOperations:onHandler:fromFunction:
sceneDelegate
sceneFromIdentityToken:
sceneIdentity
sceneLayer
sceneLink
scheduleWindowTimeout
scheduled
self
serviceName
setAcquiringFocus:
setAdditionalAttributes:
setClasses:forSelector:argumentIndex:ofReply:
setClientFocusContext:
setClientSettings:
setDeactivating:
setDelegate:
setDisplayConfiguration:
setExportedInterface:
setExportedObject:
setFireDate:
setForeground:
setFrame:
setHandler:
setHasDebugInformationEntitlement:
setHostBundleIdentifier:
setHostProcessIdentifier:
setInheritingEnvironment:
setInterfaceOrientation:
setInvalidationHandler:
setIsLocal:
setKeyboardFocusApplicationPID:deferringToken:completion:
setKeyboardPositionWithRemoteIAV:
setKeyboardScene:
setKeyboardScenePresentationMode:
setKeyboardTotalDisable:withFence:completionHandler:
setKeyboardTotalDisable:withFence:fromHandler:completionHandler:
setKeyboardUIHandle:
setLastUpdate:
setLevel:
setObject:forKey:
setOmniscientDelegate:
setOwner:
setPause:
setPreferredLevel:
setPreferredSceneHostIdentity:
setPrevActiveIdentifier:
setRemoteObjectInterface:
setRunning:
setSceneDelegate:
setSourceSceneIdentityString:
setSuppressionCount:
setSuppressionCount:ofPIDs:
setTarget:
setUserInfo:
setWantsFencing:
setWindowContextID:focusContext:windowState:withLevel:
setWindowHostingPID:active:
setWithArray:
setWithObject:
settings
sharedInstance
sharedPreferencesController
sharedService
shouldKeyboardBeWindowSizedForHostWithIdentity:
signalEventSourceChanged:completionHandler:
signalEventSourceChanged:fromHandler:completionHandler:
signalKeyboardChangeComplete
signalKeyboardChanged:onCompletion:
signalKeyboardClientChanged:onCompletion:
signalKeyboardUIDidChange:onCompletion:
specification
startArbitrationWithExpectedState:focusContext:hostingPIDs:usingFence:withSuppression:onConnected:
startArbitrationWithExpectedState:hostingPIDs:usingFence:withSuppression:onConnected:
stringRepresentation
stringWithFormat:
stringWithUTF8String:
superclass
suppressionCount
takeProcessAssertionOnRemoteWithQueue:
target
targetWithPid:environmentIdentifier:
timeIntervalSinceDate:
timerFired:
touch
transition:eventStage:withInfo:fromHandler:
uiSceneSessionRole
uncacheWindowContext
unitTestEnvironment
unschedule
updateClientSettings:withTransitionContext:
updateInterestedBundleIDs
updateInterestedBundleIDs:
updateKeyboardSceneSettings
updateKeyboardStatus:fromHandler:
updateKeyboardUIStatus:fromHandler:
updateSceneClientSettings:
updateSceneSettings
updateSettingsWithBlock:
updateSuppression:ofPIDs:active:
updateSuspensionCountForPids:active:
useSystemService
userInfo
valueForEntitlement:
valueForPreferenceKey:
wantedState
wantsFence
zone
@16@0:8
@56@0:8@16:24@32d40@48
@48@0:8@16:24@32d40
v16@0:8
v24@0:8d16
B16@0:8
d16@0:8
v24@0:8@16
@"NSTimer"
@"NSString"
@"NSDate"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v56@0:8@16@24@32B40i44@?48
v20@0:8B16
v36@0:8B16@20@?28
v40@0:8@16Q24@32
v32@0:8q16@?24
v32@0:8@16@?24
v24@0:8i16B20
v24@0:8@?16
v56@0:8@"_UIKeyboardChangedInformation"16@"UIKBArbiterClientFocusContext"24@"NSArray"32B40i44@?<v@?@"_UIKeyboardChangedInformation"qB>48
v36@0:8B16@"BKSAnimationFenceHandle"20@?<v@?@"NSError">28
v40@0:8@"NSString"16Q24@"NSDictionary"32
v32@0:8q16@?<v@?>24
v32@0:8@"_UIKeyboardChangedInformation"16@?<v@?>24
v24@0:8@?<v@?@"NSString">16
v24@0:8@?<v@?@"NSArray">16
v44@0:8I16@20Q28d36
v36@0:8i16@20@?28
v40@0:8i16@20B28@?32
v44@0:8I16@"UIKBArbiterClientFocusContext"20Q28d36
v24@0:8@"UIKBArbiterClientFocusContext"16
v32@0:8@"NSString"16@?<v@?B>24
v36@0:8i16@"UIKBArbiterClientFocusContext"20@?<v@?B>28
v40@0:8i16@"UIKBArbiterClientFocusContext"20B28@?<v@?B>32
v32@0:8@"_UIKeyboardUIInformation"16@?<v@?>24
v32@0:8d16@?24
v48@0:8@16Q24@32@?40
v28@0:8B16@?20
v24@0:8@?<v@?>16
v32@0:8d16@?<v@?>24
v48@0:8@"NSString"16Q24@"NSDictionary"32@?<v@?>40
v28@0:8B16@?<v@?>20
v24@0:8@?<v@?@"NSDictionary">16
v32@0:8@"FBSSceneIdentityToken"16@?<v@?>24
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@24@0:8@16
v28@0:8i16@20
i16@0:8
@"FBSSceneIdentityToken"24@0:8@"NSDictionary"16
v28@0:8i16@"FBSSceneIdentityToken"20
@20@0:8B16
v40@0:8@?16@24r*32
@32@0:8@16@24
v32@0:8@16@24
v40@0:8@16@?24@32
v40@0:8@16@24@?32
v32@0:8B16@20B28
@20@0:8i16
v28@0:8i16B20B24
v48@0:8@16Q24@32@40
v28@0:8@16B24
v44@0:8B16@20@28@?36
v40@0:8q16@24@?32
v36@0:8Q16i24@28
v24@0:8Q16
@"NSObject<OS_dispatch_queue>"
@"NSXPCListener"
@"NSMutableArray"
@"_UIKeyboardArbiterClientHandle"
@"FBSSceneIdentityToken"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSMutableOrderedSet"
@"FBSWorkspace"
@"FBSScene"
@"BKSApplicationStateMonitor"
@"FBSSceneLayer"
@"<_UIKeyboardArbiterLink>"
@"<_UIKeyboardArbiterOmniscientDelegate>"
@"<_UIKeyboardArbiterSceneDelegate>"
@"_UIKeyboardChangedInformation"
v48@0:8@16@24B32i36@?40
v48@0:8@"_UIKeyboardChangedInformation"16@"NSArray"24B32i36@?<v@?@"_UIKeyboardChangedInformation"qB>40
B32@0:8@16:24
v24@0:8B16B20
B20@0:8i16
v20@0:8i16
@"_UIKeyboardArbiter"
@"FBSCAContextSceneLayer"
@"UIKBArbiterClientFocusContext"
@"NSMutableSet"
@"BKSProcessAssertion"
@"NSArray"
@"BSServiceConnectionEndpointInjector"
@"NSXPCConnection"
@"_UIKeyboardArbiterHost"
v24@0:8@"NSObject<OS_dispatch_queue>"16
v24@0:8@?<v@?B>16
v24@0:8@"FBSSceneLayer"16
@"_UIKeyboardArbiter"16@0:8
v24@0:8@"_UIKeyboardArbiter"16
@"FBSSceneClientSettings"
@(#)PROGRAM:KeyboardArbiter  PROJECT:UIKit-1
Don't call %@.
-[UIDelayedAction init]
blurredScene
lastActiveScene
com.apple.Spotlight
com.apple.KeyboardArbiter.client.inputuihost
com.apple.KeyboardArbiter.client.debuginfo
com.apple.UIKit.remote-keyboard
com.apple.UIKit.keyboard-arbiter
v8@?0
invalid.remote-keyboards
v16@?0@"NSDictionary"8
scene data omitted;
disabler = %@;
lastEventSource = %ld;
current state = %@;
active handle = %@;
handles = %@>
Message
error
Type
Timestamp
v16@?0@"NSArray"8
v16@?0@?<v@?@"NSArray">8
v16@?0@?<v@?@>8
Description
v16@?0@8
Active
LastActivated
FocusRequested
Suspended
Process
Invalid response
Timed out/hung
v24@?0@"<_UIKeyboardArbitrationClient>"8@?<v@?>16
-[_UIKeyboardArbiter retrieveClientDebugInformationWithCompletion:]
v12@?0B8
v16@?0@"NSError"8
-[_UIKeyboardArbiter scheduleWindowTimeout]_block_invoke_2
-[_UIKeyboardArbiter updateKeyboardUIStatus:fromHandler:]_block_invoke
com.apple.springboard
-[_UIKeyboardArbiter updateKeyboardStatus:fromHandler:]_block_invoke
-[_UIKeyboardArbiter completeKeyboardStatusChangedFromHandler:]
v16@?0@"_UIKeyboardArbiterClientHandle"8
-[_UIKeyboardArbiter notifyHeightUpdated:]
v16@?0@"FBSMutableSceneSettings"8
-[_UIKeyboardArbiter updateSuppression:ofPID:active:]
-[_UIKeyboardArbiter processWithPID:foreground:suspended:]_block_invoke_2
-[_UIKeyboardArbiter transition:eventStage:withInfo:fromHandler:]
-[_UIKeyboardArbiter handlerRequestedFocus:shouldStealKeyboard:]
_UIKeyboardArbiter.m
Handler must have a remote scene identity: %@
-[_UIKeyboardArbiter handlerRequestedForcedClientSceneIdentityUpdate:]
v16@?0Q8
-[_UIKeyboardArbiter setKeyboardTotalDisable:withFence:fromHandler:completionHandler:]
-[_UIKeyboardArbiter signalEventSourceChanged:fromHandler:completionHandler:]
B32@?0@"_UIKeyboardArbiterClientHandle"8Q16^B24
com.apple.TapToRadar
com.apple.appleseed.FeedbackAssistant
com.ios.uikit.TestingHarness
-[_UIKeyboardArbiterClientHandle _deactivateScene]
Layer must exist for us to attach visibility to.
v16@?0@"<BSServiceConnectionEndpointInjectorConfiguring>"8
<%@: %p; PID %i: %@ <%@>%@; hosting PIDs %@; level %f; active %@ [wants %@]; suppression %i; iav %f; on screen %@; isAcquiringFocus: %@>
 (suspended)
com.apple.UIKit.KeyboardManagement.message
FBSceneManager
Class getFBSceneManagerClass(void)_block_invoke
Unable to find class %s
void *FrontBoardLibrary(void)
FBDisplayManager
Class getFBDisplayManagerClass(void)_block_invoke
DisableArbiterConnectionTimeout
com.apple.keyboard
com.apple.UIKit
KeyboardArbiter
com.apple.UIKit.keyboard-arbiter.debug
DisableKeyboardDebugInfo
Info
Debug
Error
_UISceneSessionRoleKeyboard
<%@; scene = %@>
_UIKeyboardArbiterHost.m
Expected a scene but did not find one.
FBLocalSynchronousSceneClientProvider
Class getFBLocalSynchronousSceneClientProviderClass(void)_block_invoke
Failed to connect - scheduling retry
runOperations: %s Failed to access %@ remote service: %@
runOperations: %s Failed to create proxy for %@
HW kbd: target process %d (%{public}@) scene:%{public}@
HW kbd: no change
HW kbd: Keyboard set successfully pid:%d (%{public}@) scene:%{public}@
HW kbd: Failed to set keyboard focus pid:%d (%{public}@) scene:%{public}@
[%@] Dropping %@
[%@] rejecting Spotlight's keyboardChange because %@ is active
[%@] _activeInputDestinationHandle is now %{public}@; information: %{public}@
Client %@ attempted to connect, but no scene
[%@] Rejecting attach for %@ (currently %@)
[%@] Attaching [%@] %@
[%@] Found no clients
[%@] Found several potential clients: %@
[%@] Found expected client: %@
[%@] Detaching [%@] %@
[%@] Updating focus context to %@ level %f
[%@] invoke didChangeKeyboardScenePresentationMode: %lu
[%@] Setting suppressed %@ on %@
NO HANDLE for NIL token 
NO HANDLE for %{public}@ -- choices:%{public}@ 
[%@] started running
[%@] abnormal state - resuming handle was already active
[%@] suspended
[%@] foregrounded
[%@] no longer foreground
Ignoring transition from %@ because it's not active
[%{public}@] Handler requested focus: %{public}@; steal keyboard: %{public}@
[%@] _focusRequestedHandle is now %{public}@; stole keyboard: %{public}@
[%{public}@] Handler requested forced scene identity update in the client: %{public}@
Advisor: No handle found for currently focused PID: %{public}d; sceneIdentity: %{public}@
Advisor: KeyboardFocus from _activeHandleForFocusEvaluation [%@]
Advisor: No active handle. Returning nil.
Advisor: KeyboardFocus from _previouslyActiveHandle [%@]
Advisor: KeyboardFocus from _recentlyActiveSceneIdentities [%@]
Advisor: KeyboardFocus from _clients [%@]
Advisor: Last resort, returning nil (FrontBoard decides)
Advisor: Scene focus update without advisor input enqueued on the main thread: generation: %lu; PID: %d; sceneIdentity: %@
Advisor: Scene focus update without advisor input: generation: %lu; PID: %d; sceneIdentity: %@
Advisor: Applying pending scene focus update from omniscient delegate: generation: %lu; PID: %d; sceneIdentity: %@
Advisor: Updating current keyboard focus to PID: %d; sceneIdentity: %@
Advisor: Skipping reevaluation as there is no change. Active PID: %d, activeHandleID: %@
Advisor: Triggering reevaluation. Active PID: %d, activeHandleID: %@
Advisor: Deliberation result: %@
Advisor: Stealing keyboard for handle: %@
[%@] Received new connection [%@]
[%@] Lost connection [%@]
%@ was not invalidated before release
[%@] %@: currentKeyboard: %@; focusContext: %@; pids: %@
[%@] %@ Rejecting update as the handle is currently acquiring focus and this update could lead to a loop: updated sceneIdentity: %@
[%@] %@ Clearing acquiring focus flags for update: sceneIdentity: %@
[%@] %@ sceneIdentity: %@
[%@] %@ focusContext: %@; %i/%@/%f
[%@] %@ Rejecting update as the handle or its hosted services are not on screen: sceneIdentity: %@
[%@] Releasing: %@
[%@] Created: %@
Keyboard attaching layer before removing prior layer...
[%@] %@: %@
[%@] %@
[%@] %@: %f
[%@] %@: %i/%@
[%@] %@: %@/%i/%@
[%@] denied debug information request
[%@] denied more debug information request
[%@] took process assertion
[%@] could not take process assertion
[%@] requested process assertion (count=%lu)
[%@] timed out with %lu assertions remaining, disconnecting
[%@] released process assertion (count=%lu)
[%@] Disabled keyboard disablement due to invalidation
[%@] denied focus request to bundle %@
[%@] %@ <%@> %{public}@
[%@] denied focus request to pid %ld
[%{public}@] %{public}@: remoteSceneIdentity: %{public}@; handle: %{public}@; stealKeyboard: %{public}@
[%@] %@: %@ (%@)
[%@] %@: %d
softlink:r:path:/System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard
softlink:r:path:/System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard
UIDelayedAction
UIHeldAction
_UIKBArbiterInputUIEventsProtocol
_UIKBArbiterInputDestinationProtocol
_UIKBArbiterInputEventsProtocol
NSObject
_UIKBArbiterDelegateInputDestination
_UIKBArbiterDelegateProtocol
_UIKeyboardArbiter
NSXPCListenerDelegate
_UIKeyboardArbiterAdvisor
_UIKeyboardArbiterClientHandle
_UIKeyboardArbitration
_UIKeyboardChangedInformationWithManualFence
_UIKeyboardArbiter_ForSpringBoard
_UIKeyboardArbiterDebug
_UIKeyboardArbiterDebugEntry
_UIKeyboardArbiterDebugEntryString
_UIKeyboardArbiterDebugEntryDictionaries
_UIKeyboardSceneSpecification
_UIKeyboardArbiterHost
_UIKeyboardArbiterLink
_acquiringFocus
T#,R
_activeHandleForFocusEvaluation
T@"<_UIKeyboardArbiterOmniscientDelegate>",W,N,V_omniscientDelegate
_hasDebugInformationEntitlement
T@"FBSCAContextSceneLayer",R,&,V_sceneLayer
_multipleScenes
T@"NSDate",R,Vm_startDate
_string
T@"NSString",R,C
activateHandle:
T@"NSXPCConnection",R,V_connection
attach:
T@"_UIKeyboardArbiter",W,N
dealloc
T@"_UIKeyboardArbiterClientHandle",R,W,V_activeInputDestinationHandle
isProxy
T@"_UIKeyboardArbiterClientHandle",W,N,V_keyboardUIHandle
m_delay
T@"_UIKeyboardChangedInformation",&,N,V_lastUpdate
release
T@,&,Vm_userInfo
serviceListener
TB,N,V_hasDebugInformationEntitlement
setArbiterHost:
TB,N,V_pause
setRequestedCorrectionOfClientSceneIdentityWhileAcquiringFocus:
TB,R
touchWithDelay:
TB,R,V_active
updateSuppression:ofPID:active:
.cxx_destruct
_active
T@"<_UIKeyboardArbiterLink>",R,N,V_sceneLink
_clientSettings
T@"<_UIKeyboardArbiterSceneDelegate>",W,N,V_sceneDelegate
_importantCount
T@"FBSSceneLayer",R
_pendingFocusLock_sceneIdentity
T@"NSString",R,&,V_bundleIdentifier
activateClients
T@"NSString",R,N
allKeys
T@"UIKBArbiterClientFocusContext",R,&,V_remoteFocusContext
containsObject:
T@"_UIKeyboardArbiter",W,N,Vowner
detach:
T@"_UIKeyboardArbiterClientHandle",R,W,V_focusRequestedHandle
isValid
T@"_UIKeyboardArbiterHost",&,N,V_arbiterHost
m_timer
T@,&,Vm_target
running
TB,N,GisAcquiringFocus,V_acquiringFocus
TB,N,V_inputUIHost
setInputUIHost:
TB,N,V_requestedCorrectionOfClientSceneIdentityWhileAcquiringFocus
tokenForString:
TB,R,N
transition:eventStage:withInfo:
TB,R,V_deactivating
TB,R,V_multipleScenes
TB,R,V_wantsFence
TB,R,Vm_canceled
TB,V_running
TQ,N,V_keyboardScenePresentationMode
TQ,R
TQ,R,V_wantedState
Td,R,V_iavHeight
Td,R,V_level
Ti,R
Ti,R,N
Ti,V_prevActiveIdentifier
Ti,V_suppressionCount
_activeInputDestinationHandle
_applyPendingSceneFocusUpdateFromOmniscientDelegateForGeneration:
_arbiterHost
_arbiterQueue_keyboardFocusDidChangeWithoutAdvisorInputForGeneration:pid:sceneIdentity:
_baseDelay
_bundleIdentifier
_cachedContext
_canceled
_checkingShowability
_childrenSuppressionCount
_clients
_configureKey:domain:defaultValue:
_connection
_createSceneWithIdentifier:initialClientSettings:
_cullRecentlyActiveSceneIdentities
_currentFocusPID
_currentFocusSceneIdentity
_currentFocusedHandle
_deactivateScene
_deactivating
_descriptionWithScene:
_dictionaries
_disable
_disablingHandle
_endpointGrantInjector
_entries
_findForHandle:deepestHandleHandler:
_findForHandle:deepestHandleHandler:checklist:
_focusRequestedHandle
_holdBegan
_holding
_hostedPids
_iavHeight
_inputUIHost
_invalidated
_isKeyboardOnScreen:
_keyboardOnScreen
_keyboardScenePresentationMode
_keyboardUIHandle
_lastActivatedHandle
_lastEventSource
_lastUpdate
_level
_listener
_message
_omniscientDelegate
_owner
_pause
_pendingFocusLock
_pendingFocusLock_PID
_pendingFocusLock_generation
_prevActiveIdentifier
_previouslyActiveHandle
_queue
_recentlyActiveSceneIdentities
_reevaluateRemoteFocusContext:
_remoteFocusContext
_remoteKeepAliveAssertion
_remoteKeepAliveAssertionCount
_remoteKeepAliveTimerCount
_requestedCorrectionOfClientSceneIdentityWhileAcquiringFocus
_running
_scene
_sceneDelegate
_sceneLayer
_sceneLink
_setQueue:
_shouldRejectSceneIdentityUpdateCorrectingClientIfNeeded:fromSelector:
_startDate
_stateMonitor
_suppressionCount
_timeBalance
_timestamp
_trackRecentlyActiveArbiterHandle:
_type
_updateCounter
_updateCurrentKeyboardFocusToPID:sceneIdentity:
_wantedState
_wantsFence
_workspace
_xpcConnection
acquiringFocus
active
activeInputDestinationHandle
addAsynchronousData:
addEntriesFromDictionary:
addEntry:
addHostedPids:
addObject:
addObjectsFromArray:
addTimer:forMode:
allValues
animationFence
appendFormat:
appendString:
applicationShouldFocusWithBundle:onCompletion:
arbiterHost
array
arrayByAddingObjectsFromArray:
arrayWithCapacity:
arrayWithObjects:count:
attachLayer:
attemptConnection
autorelease
boolValue
bounds
bundleIdentifier
cacheWindowContext
cancel
captureStateForDebug
checkActivation:
checkHostingState
class
clearAcquiringFocusFlags
completeKeyboardStatusChangedFromHandler:
configureEncodedClassesForXPCConnection:
conformsToProtocol:
connectWithQueue:
connection
contextID
copy
copyWithoutFence
copyWithoutIAVKeyboardRect:
count
countByEnumeratingWithState:objects:count:
createSceneWithCompletion:
createSceneWithIdentifier:parameters:clientProvider:transitionContext:
currentHandler
currentRunLoop
date
dateByAddingTimeInterval:
deactivateHandle:
deactivating
debugDescription
debugWithMessage:
delay
deleteCharactersInRange:
description
destroyScene:withTransitionContext:
detachLayer:
dictionary
dictionaryWithObjects:forKeys:count:
didAttachLayer
didDetachLayer
displayConfiguration
doubleValue
entryWithDictionaries:
entryWithMessage:type:
enumerateContents:
errorWithDomain:code:userInfo:
errorWithMessage:
exportedInterface
fbsSceneForScene:
firstObject
focusApplicationWithProcessIdentifier:context:onCompletion:
focusApplicationWithProcessIdentifier:context:stealingKeyboard:onCompletion:
focusContext
focusContext:didChangeKeyboardScenePresentationMode:
focusContext:didChangeKeyboardScenePresentationStyle:
focusContextDidChange:
focusRequestedHandle
focusedSceneIdentityDidChange:
forwardingTargetForSelector:
getDebugInfoDictionariesWithCompletionHandler:
grantWithNamespace:sourceEnvironment:attributes:
handleFailureInFunction:file:lineNumber:description:
handleFailureInMethod:object:file:lineNumber:description:
handleUnexpectedDeallocForHandler:
handlerForBundleID:
handlerForPID:
handlerForToken:
handlerRequestedFocus:shouldStealKeyboard:
handlerRequestedForcedClientSceneIdentityUpdate:
handlerWithArbiter:forConnection:
hasDebugInformationEntitlement
hasHostedPids
hash
hold
hostBundleIdentifier
hostBundleIdentifierForHandle:hosts:
hostForHandle:hosts:
iavHeight
identifier
identityForIdentifier:
importance
indexOfObjectPassingTest:
infoWithMessage:
informationForKeyboardDown
init
initWithBundleIDs:states:elevatedPriority:
initWithCAContextID:level:
initWithFireDate:interval:target:selector:userInfo:repeats:
initWithLink:
initWithMachServiceName:
initWithPID:flags:reason:name:withHandler:
initWithTarget:action:userInfo:delay:
initWithTarget:action:userInfo:delay:mode:
initWithUTF8String:
injectorWithConfigurator:
inputUIHost
inputUIOOP
intValue
interfaceWithProtocol:
invalidate
isAcquiringFocus
isAvailable
isEqual:
isEqualToString:
isHandlerShowableWithHandler:
isHolding
isHostingPID:
isInternal
isKeyboardOnScreen
isKindOfClass:
isMainThread
isMemberOfClass:
keyboardArbiterAdvisor:requestedSceneFocusDeliberationForFocusedPid:
keyboardFocusDidChangeWithoutAdvisorInputToPid:sceneIdentity:
keyboardOnScreen
keyboardPosition
keyboardPositionWithIAV
keyboardScene
keyboardScenePresentationMode
keyboardUIHandle
lastActivatedHandle
lastObject
lastUpdate
launch
launchAdvisorWithOmniscientDelegate:
launchAdvisorWithOmniscientDelegate:sceneDelegate:
length
level
listener:shouldAcceptNewConnection:
m_action
m_canceled
m_runLoopMode
m_startDate
m_target
m_userInfo
mainBundle
mainConfiguration
multipleScenes
mutableCopy
newClientConnected:withExpectedState:onConnected:
newSceneIdentityTokenForIdentity:
notifyHeightUpdated:
notifyHostedPIDsOfSuppression:
notifyHostedPIDsOfSuppression:active:
notifyIAVHeight:
null
numberWithDouble:
numberWithInt:
numberWithUnsignedInt:
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
omniscientDelegate
orderedSet
owner
parametersForSpecification:
pause
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
popFence
preferredInterfaceOrientation
preferredLevel
preferredSceneIdentityForKeyboardFocusWithChangeInformation:
presentingKeyboardProcessIdentifier
prevActiveIdentifier
processIdentifier
processWithPID:foreground:suspended:
pushFence:
queue_activeProcessResignWithCompletion:
queue_getDebugInfoWithCompletion:
queue_keyboardChanged:onComplete:
queue_keyboardChangedWithCompletion:
queue_keyboardIAVChanged:onComplete:
queue_keyboardSuppressed:withCompletion:
queue_keyboardTransition:event:withInfo:onComplete:
queue_keyboardUIDidChange:onComplete:
queue_sceneBecameFocused:withCompletion:
queue_setKeyboardDisabled:withCompletion:
queue_setLastEventSource:withCompletion:
raise:format:
reevaluateFocusedSceneIdentityForKeyboardFocusWithChangeInformation:stealingKeyboardOnSuccess:
reevaluateHardwareKeyboardClientStealingKeyboardOnSuccess:
reevaluateSceneClientSettings
releaseProcessAssertion
remoteFocusContext
remoteObjectInterface
remoteObjectProxyWithErrorHandler:
removeLastObject
removeObject:
removeObjectAtIndex:
removeObjectsInRange:
requestedCorrectionOfClientSceneIdentityWhileAcquiringFocus
resetAnimationFencing
respondsToSelector:
resume
retain
retainCount
retrieveClientDebugInformationWithCompletion:
retrieveDebugInformation:
retrieveDebugInformationWithCompletion:
retrieveMoreDebugInformationWithCompletion:
reverseObjectEnumerator
runOperations:onHandler:fromFunction:
sceneDelegate
sceneFromIdentityToken:
sceneIdentity
sceneLayer
sceneLink
scheduleWindowTimeout
scheduled
self
serviceName
setAcquiringFocus:
setAdditionalAttributes:
setClasses:forSelector:argumentIndex:ofReply:
setClientFocusContext:
setClientSettings:
setDeactivating:
setDelegate:
setDisplayConfiguration:
setExportedInterface:
setExportedObject:
setFireDate:
setForeground:
setFrame:
setHandler:
setHasDebugInformationEntitlement:
setHostBundleIdentifier:
setHostProcessIdentifier:
setInheritingEnvironment:
setInterfaceOrientation:
setInvalidationHandler:
setIsLocal:
setKeyboardFocusApplicationPID:deferringToken:completion:
setKeyboardPositionWithRemoteIAV:
setKeyboardScene:
setKeyboardScenePresentationMode:
setKeyboardTotalDisable:withFence:completionHandler:
setKeyboardTotalDisable:withFence:fromHandler:completionHandler:
setKeyboardUIHandle:
setLastUpdate:
setLevel:
setObject:forKey:
setOmniscientDelegate:
setOwner:
setPause:
setPreferredLevel:
setPreferredSceneHostIdentity:
setPrevActiveIdentifier:
setRemoteObjectInterface:
setRunning:
setSceneDelegate:
setSourceSceneIdentityString:
setSuppressionCount:
setSuppressionCount:ofPIDs:
setTarget:
setUserInfo:
setWantsFencing:
setWindowContextID:focusContext:windowState:withLevel:
setWindowHostingPID:active:
setWithArray:
setWithObject:
settings
sharedInstance
sharedPreferencesController
sharedService
shouldKeyboardBeWindowSizedForHostWithIdentity:
signalEventSourceChanged:completionHandler:
signalEventSourceChanged:fromHandler:completionHandler:
signalKeyboardChangeComplete
signalKeyboardChanged:onCompletion:
signalKeyboardClientChanged:onCompletion:
signalKeyboardUIDidChange:onCompletion:
specification
startArbitrationWithExpectedState:focusContext:hostingPIDs:usingFence:withSuppression:onConnected:
startArbitrationWithExpectedState:hostingPIDs:usingFence:withSuppression:onConnected:
stringRepresentation
stringWithFormat:
stringWithUTF8String:
superclass
suppressionCount
takeProcessAssertionOnRemoteWithQueue:
target
targetWithPid:environmentIdentifier:
timeIntervalSinceDate:
timerFired:
touch
transition:eventStage:withInfo:fromHandler:
uiSceneSessionRole
uncacheWindowContext
unitTestEnvironment
unschedule
updateClientSettings:withTransitionContext:
updateInterestedBundleIDs
updateInterestedBundleIDs:
updateKeyboardSceneSettings
updateKeyboardStatus:fromHandler:
updateKeyboardUIStatus:fromHandler:
updateSceneClientSettings:
updateSceneSettings
updateSettingsWithBlock:
updateSuppression:ofPIDs:active:
updateSuspensionCountForPids:active:
useSystemService
userInfo
valueForEntitlement:
valueForPreferenceKey:
wantedState
wantsFence
zone
@16@0:8
@56@0:8@16:24@32d40@48
@48@0:8@16:24@32d40
v16@0:8
v24@0:8d16
B16@0:8
d16@0:8
v24@0:8@16
@"NSTimer"
@"NSString"
@"NSDate"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v56@0:8@16@24@32B40i44@?48
v20@0:8B16
v36@0:8B16@20@?28
v40@0:8@16Q24@32
v32@0:8q16@?24
v32@0:8@16@?24
v24@0:8i16B20
v24@0:8@?16
v56@0:8@"_UIKeyboardChangedInformation"16@"UIKBArbiterClientFocusContext"24@"NSArray"32B40i44@?<v@?@"_UIKeyboardChangedInformation"qB>48
v36@0:8B16@"BKSAnimationFenceHandle"20@?<v@?@"NSError">28
v40@0:8@"NSString"16Q24@"NSDictionary"32
v32@0:8q16@?<v@?>24
v32@0:8@"_UIKeyboardChangedInformation"16@?<v@?>24
v24@0:8@?<v@?@"NSString">16
v24@0:8@?<v@?@"NSArray">16
v44@0:8I16@20Q28d36
v36@0:8i16@20@?28
v40@0:8i16@20B28@?32
v44@0:8I16@"UIKBArbiterClientFocusContext"20Q28d36
v24@0:8@"UIKBArbiterClientFocusContext"16
v32@0:8@"NSString"16@?<v@?B>24
v36@0:8i16@"UIKBArbiterClientFocusContext"20@?<v@?B>28
v40@0:8i16@"UIKBArbiterClientFocusContext"20B28@?<v@?B>32
v32@0:8@"_UIKeyboardUIInformation"16@?<v@?>24
v32@0:8d16@?24
v48@0:8@16Q24@32@?40
v28@0:8B16@?20
v24@0:8@?<v@?>16
v32@0:8d16@?<v@?>24
v48@0:8@"NSString"16Q24@"NSDictionary"32@?<v@?>40
v28@0:8B16@?<v@?>20
v24@0:8@?<v@?@"NSDictionary">16
v32@0:8@"FBSSceneIdentityToken"16@?<v@?>24
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@24@0:8@16
v28@0:8i16@20
i16@0:8
@"FBSSceneIdentityToken"24@0:8@"NSDictionary"16
v28@0:8i16@"FBSSceneIdentityToken"20
@20@0:8B16
v40@0:8@?16@24r*32
@32@0:8@16@24
v32@0:8@16@24
v40@0:8@16@?24@32
v40@0:8@16@24@?32
v32@0:8B16@20B28
@20@0:8i16
v28@0:8i16B20B24
v48@0:8@16Q24@32@40
v28@0:8@16B24
v44@0:8B16@20@28@?36
v40@0:8q16@24@?32
v36@0:8Q16i24@28
v24@0:8Q16
@"NSObject<OS_dispatch_queue>"
@"NSXPCListener"
@"NSMutableArray"
@"_UIKeyboardArbiterClientHandle"
@"FBSSceneIdentityToken"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSMutableOrderedSet"
@"FBSWorkspace"
@"FBSScene"
@"BKSApplicationStateMonitor"
@"FBSSceneLayer"
@"<_UIKeyboardArbiterLink>"
@"<_UIKeyboardArbiterOmniscientDelegate>"
@"<_UIKeyboardArbiterSceneDelegate>"
@"_UIKeyboardChangedInformation"
v48@0:8@16@24B32i36@?40
v48@0:8@"_UIKeyboardChangedInformation"16@"NSArray"24B32i36@?<v@?@"_UIKeyboardChangedInformation"qB>40
B32@0:8@16:24
v24@0:8B16B20
B20@0:8i16
v20@0:8i16
@"_UIKeyboardArbiter"
@"FBSCAContextSceneLayer"
@"UIKBArbiterClientFocusContext"
@"NSMutableSet"
@"BKSProcessAssertion"
@"NSArray"
@"BSServiceConnectionEndpointInjector"
@"NSXPCConnection"
@"_UIKeyboardArbiterHost"
v24@0:8@"NSObject<OS_dispatch_queue>"16
v24@0:8@?<v@?B>16
v24@0:8@"FBSSceneLayer"16
@"_UIKeyboardArbiter"16@0:8
v24@0:8@"_UIKeyboardArbiter"16
@"FBSSceneClientSettings"
