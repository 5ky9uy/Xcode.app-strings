@(#)PROGRAM:CalendarNotification  PROJECT:CalendarNotification-1
Setting snooze update fire date for %{public}@ to %{public}@ with leeway = %f
Snooze update timer informed of significant time change; rescheduling
Snooze update timer fired
Refreshing notifications due for snooze update: %{public}@
No notifications need refreshing right now
Unscheduling snooze update (previous time = %{public}@, new time = nil)
Still no snooze updates scheduled
Rescheduling snooze update from %{public}@ to %{public}@ with leeway %lli
Snooze update still scheduled for %{public}@
Cannot record display of initial time to leave alert with travel advisory status = %{public}@, source client identifier = %{public}@
Could not get ttl event tracker alert type for travel advisory timeliness status = %{public}@, source client identifier = %{public}@
Cannot record display of initial time to leave alert because could not get event to compute required supporting metrics for source client identifier = %{public}@, alert type = %{public}@
Tracked pseudo event initial time to leave fired and logged event showed time to leave notification for source client identifier = %{public}@, unique key = %@
Cannot record display of initial time to leave alert because no hypothesis available to compute required supporting metrics for source client identifier = %{public}@, alert type = %{public}@
Tracked event fired ttl alert with source client identifier = %{public}@, alert type = %{public}@, transport type = %{public}@, eta type = %{public}@, travel state = %{public}@, has suggested location = %{public}@, is on shared calendar = %{public}@
Preparing to send feedback for posting notification with source client identifier = %{public}@, travel advisory timeliness status = %{public}@
Sent feedback for posting leave by notification for event with external URL = %{public}@
Sent feedback for posting leave now notification for event with external URL = %{public}@
Determined not to send feedback for added notification with source client identifier = %{public}@, travel advisory timeliness status = %{public}@
Could not get launch URL because unable to get event ID url for event ID = %{public}@
Applying diff to notification manager. Removed: %@, Modified: %@, Added: %@
Refreshed shared calendar invitation response notifications in response to database change. Found %{public}@ notifications for changed objects.
Refreshed shared calendar invitation response notifications. Found %{public}@ notifications.
Failed to get content for shared calendar invitation notification with sourceClientIdentifier = %{public}@
Fetched shared calendar invitation response notification with sourceClientIdentifier %{public}@. Content: %@
Received notification response for shared calendar invitation response %{public}@ with actionIdentifier = %{public}@
Could not unarchive hypothesis. error = %{public}@
Could not archive hypothesis. error = %{public}@
Failed to get notification info for sourceClientIdentifier (%{public}@)
Fetching event invitation notification content with sourceClientIdentifier %{public}@. InvitedBy: %@. StartDate: %@. Location: %@. EKCalendarNotificationType: %d. EventInvitationNotification: %@
Fetched event invitation notification with sourceClientIdentifier %{public}@. Content: %@
Refreshed event invitation notifications in response to database change. Found %{public}@ notifications for changed objects.
Refreshed event invitation notifications. Found %{public}@ notifications.
Received notification response for event invitation %{public}@ with actionIdentifier = %{public}@
Generating Notification Body For Notification Info. isModification: %d. timeChanged: %d, dateChanged: %d, titleChanged: %d, locationChanged: %d, videoConferenceChanged: %d, recurrenceChanged: %d
Error: _notificationBodyForNotificationInfo could not generate a body for notification because the modification type could not be determined.
Could not get event ID url to use for fetching triggered event notification info. source client identifier = %{public}@, event ID = %{public}@
Could not get event for source client identifier with protected data available. source client identifier = %{public}@, event ID = %{public}@. Could not get notification info as a result.
Fetched triggered event notification info with source client identifier: %{public}@. Triggered notification info: %@.
Failed to find event occurrence for sourceClientIdentifier %{public}@. Withdrawing notification.
Failed to find event occurrence for eventID = %{public}@. Should remove notification meta data.
Failed to find event occurrence for eventID = %{public}@. Should remove time to leave refresh timer.
Computed notification expiration date for event id = %{public}@, expiration date = %{public}@, event start date = %{public}@, event end date = %{public}@, alarm id = %{public}@, alarm date = %{public}@, alarm absolute date = %{public}@, is alarm absolute = %{public}@, alarm relative offset %{public}@
No event ID available to set up time to leave refresh timer. source client identifier = @{public}@, trigger date = %{public}@
No event ID available to remove time to leave refresh timer. source client identifier = %{public}@
Cancelled hypothesis refresh request for event ID = %{public}@
Requested hypothesis refresh date for event ID = %{public}@, requested hypothesis refresh date = %{public}@
Could not get event ID to cease route monitoring event for source client identifier = %{public}@
Ceased route monitoring for event ID = %{public}@
Acknowledging event with source client identifier: %{public}@, shouldMarkAsHavingReceivedLocation = %{public}@
Cannot mark as having received location because location alerts are not allowed, source client identifier = %{public}@
Snoozed event: %{public}@ until: %{public}@
Snoozed event: %{public}@ duration: %f
Handling directions action with source client identifier (%{public}@)
Handling mail organizer action with source client identifier (%{public}@)
Could not fetch event for event id = %{public}@. Suppressing received hypothesis trigger as a result, hypothesis = %@
Travel advice received. source client identifier = %{public}@, event external url = %{public}@, hypothesis = %@
No delegate to send travel advice received message. event external url = %{public}@
Travel engine event changed significantly. source client identifier = %{public}@, event external url = %{public}@
No delegate to send travel engine event significantly changed. event external url = %{public}@
No delegate to send travel engine authorization changed message. authorized = %{public}@
Could not fetch event for event id = %{public}@. Suppressing time to leave refresh timer trigger as a result.
Leave now refresh timer fired for source client identifier = %{public}@, event external url = %{public}@
No delegate to send time to leave refresh timer fired message. event external url = %{public}@
Preparing to send feedback for added notification with source client identifier = %{public}@
Could not get event ID for source client identifier = %{public}@
Received alarm engine notification without any fired alarms
Received alarm engine notification with %{public}d fired alerts
Filtered out %{public}d fired alerts that referenced the same event as other alerts firing at the same time
Should not trigger for fired alert. entity ID = %{public}@
No delegate available to send alert fired message. source client identifier = %{public}@
Should not trigger for fired alert info without scheme. entity ID = %{public}@
Should not trigger for fired alert with entity ID scheme = %{public}@
Should not trigger for acknowledged alert info. entity ID = %{public}@
Received a fired alert, but the alert info has no entity ID: %@
Failed to find alarm for sourceClientIdentifier %{public}@. Withdrawing notification.
Withdrawing notification for event (%{public}@) whose alarm is now in the future.
Computed fire date for event (%{public}@): %{public}@. Inspecting item's alarm acknowledged date to determine whether or not to withdraw notification. Events's alarm acknowledged date: %{public}@.
Withdrawing notification for event (%{public}@) whose alarm has been acknowledged (probably on another device).
Error acknowledging alarm (%{public}@) for event (%{public}@): %@
Could not get event ID url for event ID = %{public}@
Refreshed shared calendar invitation notifications in response to database change. Found %{public}@ notifications for changed objects.
Refreshed shared calendar invitation notifications. Found %{public}@ notifications.
Fetched shared calendar invitation notification with sourceClientIdentifier %{public}@. Content: %@
Received notification response for shared calendar invitation %{public}@ with actionIdentifier = %{public}@
Error adding notification request, error = %@, request identifier = %{public}@
Error replacing content for notification request, error = %@, identifier = %{public}@
Refreshing notifications in response to notifications loaded callback.
Not refreshing notifications in response to notifications loaded callback because there is no need to do so.
Received notification changed callback.
Blocking refresh of notifications because event notifications haven't finished loading yet.
Refreshing all notifications.
Refreshing notifications affected by changes to objects %@.
Finished refreshing notifications.
Withdrawing expired notification with sourceIdentifier %{public}@ and sourceClientIdentifier %{public}@
Requesting activation.
Cannot activate server since it is already active.
Activating.
Activated.
Requesting deactivation.
Cannot deactivate server since it is already inactive.
Deactivating.
Deactivated.
Setting notification sources: %{public}@
Did set notification sources: %{public}@
Getting notification categories from notification sources: %{public}@.
Requesting fetching records with source identifier: %@.
Fetching records with source identifier: %@.
Fetched records with source identifier: %{public}@. Fetched records: %@.
Adding record with source identifier = %{public}@, source client identifier = %{public}@
Error adding notification request. Source identifier = %{public}@, Source client identifier = %{public}@, error = %@, request = %@.
Added notification request, identifier = %{public}@, request = %@.
Updating record with source identifier = %{public}@, source client identifier = %{public}@
Error replacing notification request. Source identifier = %{public}@, Source client identifier = %{public}@, error = %@, request = %@.
Replaced notification request, identifier = %{public}@, request = %@.
Could not remove record because could not get notification identifier for source identifier = %{public}@, source client identifier = %{public}@
Removing record with source identifier = %{public}@, source client identifier = %{public}@
Error: Expected storage to contain only one record that has the same source identifier and source client identifier. Source identifier: %{public}@. Source client identifier: %{public}@. Fetched records: %@.
Received user notification center delegate will present notification message. User notification center: %@. Notification: %@.
Invoking callback with options: %{public}@.
Could not get record response from response. request identifier = %{public}@, response = %@
Transforming notification response to notification record response. request identifier = %{public}@, response = %@.
Could not get notification identifier from request identifier = %{public}@
Could not find notification record with notification identifier = %{public}@, records = %@
Transformed notification response to notification record response. Notification response: %@. Notification record response: %@.
Cannot add request to inactive user notification center. Request identifier = %{public}@, request = %@
Added notification record to storage. Notification record source identifier = %{public}@, source client identifier = %{public}@, record = %@
Could not add notification record to storage since notification record is nil. Notification request identifier = %{public}@, request = %@
Adding unNotificationRequest with identifier = %{public}@, request = %@
Added unNotificationRequest with identifier = %{public}@
Added updated notification record to storage. Notification record source identifier = %{public}@, source client identifier = %{public}@, record = %@
Could not add updated notification record to storage since notification record is nil. Notification request identifier = %{public}@
Replaced request with identifier = %{public}@, unNotificationContent = %@
Will present notification with identifier = %{public}@, notification = %@
Delegate is unexpectedly nil. Invoking callback with options = %{public}@, notification identifier = %{public}@, notification = %@
Invoking callback with options = %{public}@, notification identifier = %{public}@
Did receive notification response. identifier = %{public}@, response = %@
Delegate is unexpectedly nil. notification response identifier = %{public}@, response = %@
Updating record with date. Record source identifier = %{public}@, source client identifier = %{public}@, date = %{public}@, record = %@
Updated record. Source identifier = %{public}@, source client identifier = %{public}@, date = %{public}@, record = %@
Transforming notification record to notification request. Record: %@.
Transformed notification record to notification request. Record: %@. Request: %@.
Transforming notification request to notification record. Request: %@.
Cannot transform notification request to notification record since notification identifier is nil.
Transformed notification request to notification record. Request: %@. Record: %@.
Transforming notification record to notification. Record: %@.
Transformed notification record to notification. Record: %@. Notification: %@.
Fetched event canceled notification infos. Found %{public}@ notifications
Failed to get notification reference with sourceClientIdentifier %{public}@
Failed to get notification from notification reference. sourceClientIdentifier = %{public}@
Fetched event canceled notification info with sourceClientIdentifier: %{public}@ info: %@
Failed to get canceled event (%{public}@) when trying to delete it
Failed to delete canceled event (%{public}@): %@
Couldn't read existing persistent notification storage at path %{public}@. Will proceed anyway, which may mean contents will be overwritten. Error: %@
Persistent notification storage file loaded from path %{public}@.
Notification storage file did not exist at path = %{public}@. Creating a new file FAILED with error: %@
Notification storage file did not exist at path = %{public}@. Created a new file.
Loaded notification records, count = %lu
Error archiving notifications (%@). error = %@
Error writing archived notifications to path = %{public}@, error = %@
Could not get mailto url for event. Event does not have an organizer that is not the current user. In other words, there is no organizer for this event or the current user is the organizer. event external URL = %{public}@
Could not get mailto url because could not find organizer's email address. event external URL = %{public}@
Could not get mailto url because cannot send mail. event external URL = %{public}@
Constructing notification identifier string representation from components: %{public}@.
Cannot construct notification identifier string representation from components since source identifier is an empty string. Components: %{public}@.
Cannot construct notification identifier string representation from components since source client identifier is an empty string. Components: %{public}@.
Cannot construct notification identifier string representation from components since source identifier could not be encoded. Components: %{public}@.
Constructed notification identifier string representation from components. String representation: %{public}@. Components: %{public}@.
Deconstructing notification identifier string representation into components. String representation: %{public}@.
Cannot deconstruct notification identifier string representation into components since there are an unexpected number of encoded components. Expected encoded component count: %{public}@. Actual encoded component count: %{public}@. Encoded components: %{public}@. String representation: %{public}@.
Cannot deconstruct notification identifier string representation into components since source identifier is an empty string. String representation: %{public}@.
Cannot deconstruct notification identifier string representation into components since source client identifier is an empty string. String representation: %{public}@.
Deconstructed notification identifier string representation into components. String representation: %{public}@. Components: %{public}@.
Cannot initialize notification identifier with source client identifier and source client identifier because a string representation could not be constructed. Source identifier: %{public}@. Source Client identifier: %{public}@.
Cannot initialize notification identifier with string representation because string representation could not be deconstructed into components. String representation: %{public}@.
Refreshed event canceled notifications in response to database change. Found %{public}@ notifications for changed objects.
Refreshed event canceled notifications. Found %{public}@ notifications.
Fetched event canceled notification with sourceClientIdentifier %{public}@. Content: %@
Received notification response for event canceled %{public}@ with actionIdentifier = %{public}@
Cannot add record without alert content, source identifier = %{public}@, source client identifier = %{public}@
Cannot add record that should not be presented, source identifier = %{public}@, source client identifier = %{public}@
Cannot add record because notification identifier could not be created with record's source identifier and record's source client identifier. Record source identifier: %{public}@. Record source client identifier: %{public}@.
Added record, source identifier = %{public}@, source client identifier = %{public}@
Removed notification record with identifier = %{public}@
IconUpdater: IconIdentifierVersion out of date, updating all icon identifiers in storage first.
IconUpdater: Wiping icon cache directory to get rid of out dated icon files
IconUpdater: Regenerating icon files that are still in use in protectedStorage
IconUpdater: icon update complete, setting icon version to current version
IconUpdater: Updating iconIdentifiers in each notification storage entry, oldIdentifier:[%{public}@], newIdentifier:[%{public}@]
Failed to add icon to cache. IconIdentifier: %{public}@
Failed to remove icon file. Icon Identifier: %{public}@ . Error %{public}@
Icon does not exist and cannot be removed. Icon Identifier: %{public}@
Failed to generate icon with identifier %{public}@
Failed to save icon with identifier %{public}@ to path %{public}@. error = %{public}@
Error trying to create notifications icon cache directory: %{public}@
Received alarm but time to leave refresh monitor is not active. alarm name = %{public}@
Could not get event alarm object
Could not get alarm context url string from event alarm object
Could not get saved external url from alarm = %{public}s
Time to leave refresh monitor is not registered for alarms. Cannot set up refresh timer for event, event external url = %{public}@, refresh date = %{public}@
A refresh timer with the same trigger date of [%{public}@] has already been set up. Will not set up a new timer. Event external URL: [%{public}@].
Ignoring attempt to set refresh timer for [%{public}@] that would fire in the past [%{public}@].
Scheduled XPC alarm event: %s.
Set up refresh timer. event external url = %{public}@, trigger date = %{public}@, job name = %{public}s
Time to leave refresh monitor is not registered for alarms. Cannot remove refresh timer for event, event external url = %{public}@
There is no existing refresh timer to remove for event with external URL = %{public}@.
Removed refresh timer for event with external url = %{public}@
Refresh timer fired for event external url = %{public}@
No delegate available to message about fired refresh timer for event external url = %{public}@
Received notification but alarm engine monitor is not active. notification name = %{public}@
Alarm engine monitor received did register for alarms message but the alarm engine monitor is not active. Cannot send did register for alarms message to alarm engine.
Received alarm but alarm engine monitor is not active. alarm name = %{public}@
Notification with objectID %{public}@ has a calendar that is hidden by focus. Not including in the badge count
Received notification but inbox notification monitor is not active. notification name = %{public}@
Marking as heaving received location
Failed to create default calendar directory: %{public}@
Could not get start of leave now period for hypothesis = %@
Could not get start of running late period for hypothesis = %@
Failed to get notification infos for sourceClientIdentifier (%{public}@)
Fetched suggested event notification with sourceClientIdentifier %{public}@. Content: %@
Refreshed suggested event notifications in response to database change. Found %{public}@ notifications for changed objects.
Refreshed suggested event notifications. Found %{public}@ notifications.
Received notification response for suggested event notification with source client identifier = %{public}@, actionIdentifier = %{public}@
No arrival date provided for map item url launch options.
Could not get alarm ID for triggered alarm
Should not modify for alarm fired because old notification data is nil. source client identifier = %{public}@
Should not modify for alarm fired that is not offset from travel time start. source client identifier = %{public}@
Should not modify for alarm fired that is offset from travel time start because last time notification added is nil. source client identifier = %{public}@
Should modify for alarm fired that is offset from travel time start because last fire time of alert is within eight minutes. source client identifier = %{public}@
Should not add notification because no new travel advice received, source client identifier = %{public}@
We've detected that the user has arrived at the event's location, source client identifier = %{public}@
Should add notification because new travel advice received and no associated notification data exists already, source client identifier = %{public}@
Should not add notification because time to leave status has already been displayed. source client identifier = %{public}@
Should not add notification because notification recently fired due to a travel time alert. source client identifier = %{public}@
Should not add notification because an alert already fired for the event and the user is traveling to the destination. source client identifier = %{public}@
Should add notification because new travel advice received for existing alert. source client identifier = %{public}@
Should remove notification because the user has arrived and we've only shown pure 'Time to Leave' alerts and no manual alerts for this event. Source client identifier to remove = %{public}@
Could not compute transition for time to leave refresh timer fired because could not find existing notification data. source client identifier = %{public}@
Time to leave status already displayed based on travel advisory timeliness period: (%{public}@), period = %lu, hasDisplayedLeaveByMessage = (%{public}@), hasDisplayedLeaveNowMessage = (%{public}@), hasDisplayedRunningLateMessage = (%{public}@)
Tried to add hypothesis message to event representation with the wrong type: (%@)
Travel engine initialized: [%@]
The travel engine is already running.  Will not start engine: [%@]
Travel engine preparing to start: [%@]
Travel engine started: [%@]
The travel engine is not running.  Will not stop engine: [%@]
The travel engine is preparing to stop: [%@]
Travel engine stopped: [%@]
nil 'externalURL' given. Will not request hypothesis refresh at date: [%@] for any events.
Requesting hypothesis refresh at date: [%@] for event that has external URL: [%@]
Will not request hypothesis refresh at date: [%@] for event that has external URL: [%@] because is isn't being monitored
nil 'externalURL' given. Will not cancel a hypothesis refresh request for any events.
Canceling hypothesis refresh request for event that has external URL: [%@]
Will not cancel refresh request for event that has external URL: [%@] because it isn't being monitored.
nil 'externalURL' given.  Will not cease monitoring for any events.
Ceasing monitoring for event that has external URL: [%@]
Will not cease monitoring for event that has external URL: [%@] because it isn't being monitored.
Will search for travel agenda candidates between [%@] and [%@].  Calendars to search: [%@]
Location authorization status changed to [%@]
The location authorization state has changed.  self.authorizedInternal: [%@]
Received notification: [%@].
The state EventKit feature set was changed
The state of SuggestEventLocations was changed
The travel engine is yielding to sync already.  Ignoring notification.
The travel engine is not currently yielding to sync.  Ignoring notification.
Refreshing in response to significant time changed notification as the current time (%{public}@) is before the last time we refreshed (%{public}@)
NOT refreshing in response to significant time changed notification as the current time (%{public}@) is after the last time we refreshed (%{public}@)
Updating database encryption state.
Installing sync yield timer for travel engine: [%@].
Sync yield timer fired.  Overriding sync yield and refreshing if needed.
Installed sync yield timer with [%ld] second length for travel engine: [%@].
Uninstalling sync yield timer for travel engine: [%@].
Installing a periodic refresh timer for travel engine: [%@].  Timer interval: [%@].  Estimated fire date (based on system time): [%@].
Uninstalling the periodic refresh timer for travel engine: [%@].
Trimming entries before [%@] and after [%@].
Removing travel agenda entry that ends before the time window: [%@]
Removing travel agenda entry that starts after the time window: [%@]
Data does not need to be refreshed.  Will not refresh data for travel engine: [%@]
Cannot access data. Will not refresh data for travel engine: [%@]
Currently yielding to sync. Will not refresh data for travel engine: [%@]
Calendar system service is not authorized to use location
Refreshing data for travel engine: [%@]
The travel agenda time window interval is [%@] seconds.
Found [%lu] travel agenda candidates.
Inspecting travel agenda candidate event with title [%@], location [%@], start date [%@], and external URL [%@].
No external url for event: [%@].  Will not register as travel agenda item.
No location for event with external URL: [%@].  Will unregister as travel entry if it exists.
Unregistering event with external URL [%@] since it seems to have lost its location.
Event is or may be junk. Will not register as travel agenda item.
No routing method found on event with external URL [%@].  Defaulting to [%@].
Using routing method [%@] for event with external URL [%@].
Creating agenda entry because one does not exist for event with external URL: [%@]
Hypothesis updated for event with external URL: [%@].  Hypothesis: [%@]
Significant change encountered for event with external URL [%@].
The entry has been dismissed, but it's location has changed.  Clearing the dismissed flag for the entry for event with external URL: [%@]
The entry has been dismissed, but it's start date has changed.  Clearing the dismissed flag for the entry for event with external URL: [%@]
The entry has been dismissed.  Will not update the entry for event with external URL: [%@]
Unregistering event with external URL since it's not in the travel window: [%@]
Unregistering all agenda entries.
The periodic refresh timer fired for travel engine: [%@].
Installation of location manager requested.
Installation of location manager complete.  Location manager: [%@]
Uninstallation of location manager requested.
Uninstallation of location manager complete.
nil 'externalURL' given.  Will not send feedback for posting notification.
nil 'feedback' given.  Will not send feedback for posting notification.
Will not send feedback for posting notification for event that has external URL: [%@] because it isn't being monitored.
Creating the sentinel file was successful or the sentinel file already exists
Could not create sentinel file
Fetched (%lu) suggested event notifications
Failed to get notification from notification reference.
Failed to get suggested event notification reference with objectID %{public}@
Failed to get suggested event notification from notification reference. objectID = %{public}@
Fetched suggested event notification with objectID = %{public}@, notification info = %@
Could not get event. Cannot delete suggested event for source client identifier = %{public}@
Error deleting canceled suggested event: %@
Clearing suggested event notification with source client identifier = %{public}@
Clearing suggested event notification with object ID = %{public}@
Failed to get notification object from notification reference. Bailing. notification objectID = %@
Failed to get resource change for notification with objectID %{public}@
Failed to mark resource change as alerted for notification with objectID %{public}@, error = %@
Cleared suggested event notification with objectID %{public}@
Could not get event. Cannot acknowledge event for source client identifier = %{public}@
Unexpectedly found more than 1 event with extraction group identifier = %{public}@. Found (%lu) events
Cannot create notification info from notification without source client identifier, notification object ID = %{public}@
Opening url for response, source identifier = %{public}@, source client identifier = %{public}@, action identifier = %{public}@, url = %@
Opening url: %@
Could not open url, error = %@, url = %@
Unexpected number of topic identifiers. Expected: 1. Actual: %lu. Resolved section identifier: %{public}@. Topic identifiers: %{public}@.
Getting content for source client identifier = %{public}@
Using default title for notification content despite protected data being available, source client identifier = %{public}@
Category identifier for content = %{public}@, should include snooze action = (%{BOOL}d), should include directions action = (%{BOOL}d), should include conference call action = (%{BOOL}d), should include mail organizer action = (%{BOOL}d), source client identifier = %@, snoozeCategoryExpirationDate = %{public}@
Received notification response with action identifier = %{public}@, source client identifier = %{public}@
Triggered with source client identifier = %{public}@, trigger data = %{public}@
Could not get notification info for event (%{public}@).
Existing records = %@.
Existing record matching event for source client identifier = %{public}@, existing record source client identifier = %{public}@, existing record = %@
Existing notification data for source client identifier = %{public}@, existing notification data = %@
Determined that notification should trigger = %{public}@. source client identifier = %{public}@
Could not get notification content. source client identifier = %{public}@, source notification info = %@
Transition = %{public}@, source client identifier = %{public}@
No existing delivered notification to perform replace transition, source client identifier = %{public}@
Notification that should trigger cannot because we could not compute the transition type. source client identifier = %{public}@
Travel engine event changed significantly. Will reset 'Time to Leave' display state for existing record if it exists. source client identifier = %{public}@
Could not get existing record for source client identifier = %{public}@
Travel advisory authorization changed. authorized = %{public}@
Clearing travel advisory hypotheses
Updating refresh timer for source client identifier = %{public}@
Location alerts are not allowed. Will remove the associated refresh timer for source client identifier = %{public}@
There is no hypothesis. Will remove the associated refresh timer for source client identifier = %{public}@
Hypothesis indicates user has arrived. Will remove associated refresh timer for source client identifier = %{public}@
Will refresh at date: [%@] when the user needs to 'Leave Now' at %{public}@, source client identifier = %{public}@
Will refresh when the user will become late at %{public}@, source client identifier = %{public}@
Will set up a refresh timer with an adjusted refresh date of %{public}@. source client identifier = %{public}@
Not updating snooze options because there's only one option
Checking snooze options for %lu posted notifications
Refreshing notification %{public}@ because there's not enough information to determine if its snooze category is correct.
Refreshing notification %{public}@ because it should have snooze category "%{public}@" but has category "%{public}@.
Notification %{public}@ already has the correct snooze options.
Notification %{public}@ can't be snoozed so it doesn't need refreshing.
Refreshing notification with source client identifier = %{public}@
Removing notification meta data due to refresh for eventID = %{public}@
Notification meta data is expired for eventID = %{public}@. Should remove notification meta data.
Could not get an expiration date for notification meta data for eventID = %{public}@. Treating notification meta data as expired.
Time to leave refresh date is expired for eventID = %{public}@. Should remove time to leave refresh timer.
Getting content for notification with source client identifier = %{public}@, should clear hypothesis = %{public}@
Failed to get source notification info. source client identifier = %{public}@
Failed to get notification info for event (%{public}@). Returning nil content
Notification added with source client identifier = %{public}@, trigger = %{public}@
Error: Could not get launch URL for action. notification identifier = %{public}@, action identifier = %{public}@, response = %@
Updating stored notification data for source client identifier = %{public}@, transition = %{public}@
Could not get notification data for source client identifier = %{public}@
Adding notification data for source notification info. source client identifier = %{public}@, transition = %{public}@
No event ID to add notification data for source client identifier = %{public}@
Added notification data, source client identifier = %{public}@, event ID = %{public}@, notification data = %@
Resetting stored notification data time to leave display state for source client identifier = %{public}@
Cleared travel advisory from notification meta data for source client identifier = %{public}@
Storage migration: new storage is the same as existing storage; no work to be done
Storage migration: copying data for key %@
Storage migration: key %@ had existing data; adding merged data: %@
No content available to get notification response data. source client identifier = %{public}@
No user info available to get notification response data. source client identifier = %{public}@
No notification response data payload in user info. source client identifier = %{public}@
Source client identifiers refer to the same event. Source client identifier: %{public}@. Other source client identifier: %{public}@.
Source client identifiers do not refer to the same event. Source client identifier: %{public}@. Other source client identifier: %{public}@.
Stopping
Starting up. Last sequence was %{public}@, context is %@
Alarm engine handling did register for alarms message
Received alarm notification. XPC Alarm context: %s. XPC Alarm context date: %@.
Updated next fire date: %@.
Protected data now available.
Data protection enabled. Waiting for unlock before updating.
Sync running. Waiting for it to finish before updating.
Alarm table population not started.  Will wait until the end of an existing population action to retry.
Database changed.
Alarms may have changed: %s
Time zone changed.
Simulated offset changed.
%s - EKSideTableContext failed to be created, nothing will be stored
There were %lu alarms found which will occur in the next 15 days
Unable to save alarm side table: %@
Populating alarm table
Calendar TZ = %@; System TZ = %@; Time Zone Support = %@
Time Zone Support pref is suspect (%@)
Searching for alarms between [%@] and [%@]
Alarm Table populated in %f
Retrying alarm table population due to previous request to do so.
Rescheduling timer
No cache end date. This means we haven't populated the table. No timer will be set.
We're close to our cache end date. Going to attempt a rebuild.
No alarms found. Setting time to cache end date.
Set _nextFireDate to [%@]
Adjusted fire date from [%@] to [%@]
%s - refire date was nil and a new timer won't be scheduled, context was %@
Installing timer with fire date: [%@]
Formatted scheduled alarm trigger date: %@.
Notifying: %lu alarms fired.
Timer Fired.
Fire date suspiciously old. Resetting to one minute before now.
Looking for alarms between %@ and %@
Found %lu alarm(s)
Could not fetch event from sideAlarm object. Somehow got an alarm for a non-event. rowID: %@
Removing side alarm for junk or maybe junk event with rowID: %@
Side alarm has no Entity URI, will not fire. rowID: %@
Unable to save alarm side table when pruning side alarms: %@
Sync timer fired.
Sync started. Suppressing updates while it runs.
Sync done.
Significant time change.
Per-calendar notification suppression setting changed.
_globalAlarmPreferencesChanged called
Fetched event invitation notification infos. Found %{public}@ notifications
Fetched event invitation notification info with sourceClientIdentifier: %{public}@ info: %@
Failed to get event (%{public}@) when attempting to report as junk
Failed to get event (%{public}@) when attempting to set participant status to %{public}@
Failed to save event (%{public}@) when setting participant status (%{public}@): %@
Determining whether or not to trigger for source client identifier = %{public}@, trigger = %{public}@, source notification info = %@, old notification data = %@
Should trigger for alarm. source client identifier = %{public}@
Determining if notification source should trigger for source client identifier = %{public}@
Should not trigger because nil hypothesis received and no existing notification data, source client identifier = %{public}@
Should not trigger because nil hypothesis received and existing notification data has no travel advice, source client identifier = %{public}@
Should trigger because nil hypothesis received and notification data has existing travel advice for source client identifier = %{public}@
Should trigger because forcing display of new travel advisory hypotheses for source client identifier = %{public}@
Should not trigger because location alerts are disabled. source client identifier = %{public}@
We've detected that the user has arrived at the event's location. source client url = %{public}@, has existing notification data = %{public}@
Should trigger because notification has existing travel advice. source client identifier = %{public}@
Should not trigger because the user has not seen travel advisory information for this event yet and we've detected the user will not arrive until the event is over. Will not show travel advisory information. source client identifier = %{public}@ 
Aggressive travel time: [%{public}@] is after event end date: [%{public}@].
Conservative Travel time [%{public}@] does not satisfy the initial emission travel time requirement since it is more than the maximum allowable travel time: [%{public}@]. Will not emit hypothesis as a result.
Found existing notification data for event. source client identifier = %{public}@
Should not trigger because the predicated travel time is less than the minimum allowable travel time threshold so we can't provide a time to leave alert. source client identifier = %{public}@, predicated travel time = %{public}@, minimum allowable travel time threshold = %{public}@
Should not trigger because the event's start date is before now and we don't have any existing notification data. source client identifier = %{public}@
Should not trigger because the user is definitely traveling to the destination and we don't have any existing notification data for this event. source client identifier = %{public}@, travel state = %{public}@
Should not trigger because the user is traveling towards the destination, we don't have any existing notification data for this event and the event already has normal alarms on it, so the user will be alerted of this event at some point. source client identifier = %{public}@
Should trigger because new travel advice received and no existing notification data for this event exists already. source client identifier = %{public}@
Should trigger because notification recently fired due to a travel time alert. source client identifier = %{public}@
Should trigger because an alert was already fired for the event and the user is traveling to the destination. source client identifier = %{public}@
Should not trigger because new travel hypothesis received for event that does not satisfy minimum travel time threshold. source client identifier = %{public}@
Should not trigger for time to leave refresh timer fired because no existing notification data. source client identifier = %{public}@
Should not trigger for time to leave refresh timer fired because location alerts are disabled. source client identifier = %{public}@
Should trigger for time to leave refresh timer fired because we have no travel advice. source client identifier = %{public}@
Should trigger because the user is traveling to the destination or has arrived. source client identifier = %{public}@
Should not trigger for time to leave because an alert was already fired for this event and showed a 'Leave Now' message. source client identifier = %{public}@
Should trigger for time to leave because the user needs to see the 'Leave Now' alert. source client identifier = %{public}@
Update calendar app badge count to %{public}d
Could not get alarm ID for source client identifier = %{public}@
Invalid sourceClientIdentifier (%{public}@). Could not find at least one component.
Failed to construct URL from sourceClientIdentifier (%{public}@)
Failed to construct objectID from sourceClientIdentifier (%{public}@)
Failed to construct calendarURI for shared calendar invitation with sourceClientIdentifier = %{public}@
Failed to get objectID for notification of type %d with sourceClientIdentifier %{public}@
Failed to load notification reference for sourceClientIdentifier (%{public}@
Failed to construct eventURI with sourceClientIdentifier %{public}@
sourceClientIdentifier was nil. Bailing.
Failed to construct calendarURI for sourceClientIdentifier (%{public}@)
Failed to get calendar for sourceClientIdentifier (%{public}@).
Failed to hide calendar (%{public}@) from notification center: %@
Unexpected entity type %{public}@ when trying to get EKInviteReplyNotification with sourceClientIdentifier %{public}@
Failed to get invite reply notification with sourceClientIdentifier %{public}@
Failed to remove invite reply notification with sourceClientIdentifier %{public}@: %@
Failed to find event for notification using url (%{public}@)
Failed to get event (%{public}@) when attempting to clear invitation notification
Not clearing invitation status for sourceClientIdentifier %{public}@ because it is set to none
Failed to clear invitation status for event (%{public}@): %@
Creating notification server module
Missed refreshing EKEventStore in response to handling database change notification; continuing without refreshing.
Got a database changed notification and we have an EKEventStore. Letting the event store handle the notification first.
Not refreshing EKEventStore before handling database change notification because we don't have an EKEventStore right now.
Reloading notifications because locale changed from %{public}@ to %{public}@
Updating locale from %{public}@ to %{public}@
Reloaded triggered event notification data after first unlock
Already reloaded triggered event notification data after first unlock; not doing it again
Reloading calendar notifications after first unlock
Cannot reload notification with sourceClientIdentifier = %@. Failed to find notification source with sourceIdentifier = %{public}@.
Reloaded notification record with source identifier = %{public}@, source client identifier = %{public}@, title = %@
Migration is not required
Migration not required because folder %@ doesn't exist or isn't a directory.
Failed to remove old directory (%@): %@
Finished migrating notification files; removed old directory %@
Not attempting to migrate file %{public}@ because it already exists in the destination directory
Not attempting to migrate file %{public}@ because it doesn't exist in the source directory
Error moving file %{public}@: %@
Successfully moved file %{public}@
Throttle has been requested to tear down: [%@]
Travel engine throttle tear down: [%@]
No date given.  Tearing down emission timer.
'nil' emission timer given.  Uninstalling emission timer.
The given emission date %@ is before now %@.  Firing the emission block and uninstalling the timer.
The given emission date is the same as the existing emission date.  Will not update the emission timer.  Emission date: [%@]
Firing emission block for travel engine throttle: [%@]
Created a new emission timer that will fire on the emission date: [%@]
Uninstalling timer for travel engine throttle: [%@].
Emission timer fired
Cleared out the next emission date due to emission timer firing.
Cannot create route hypothesis body for notification without a hypothesis. source client identifier: %{public}@
Cannot create body with travel advisory for notification without travel advisory timeliness status. source client identifier = %{public}@
Cannot create route hypothesis body for notification because it was determined that it should not be included. source client identifier = %{public}@, Notification info: %@.
Could not convert travel advisory timeliness period none to a ttl description type number
Cannot set legacy identifier for calendar notification with no URL.
Refreshed calendar resource changed notifications in response to database change. Found %{public}@ notifications for changed objects.
Refreshed calendar resource changed notifications. Found %{public}@ notifications.
Failed to get content for calendar resource changed notification with sourceClientIdentifier = %{public}@
Fetched calendar resource changed notification with sourceClientIdentifier %{public}@. Content: %@
Received notification response for calendar resource changed %{public}@ with actionIdentifier = %{public}@
Couldn't read existing persistent time to leave refresh storage at path %{public}@. Will proceed anyway, which may mean contents will be overwritten. Error: %@
Time to Leave refresh storage file loaded from path %{public}@.
Time to leave refresh storage file did not exist at path = %{public}@. Creating a new file FAILED with error: %@
Time to Leave refresh storage file did not exist at path = %{public}@. Created a new file.
Could not save time to leave refresh date. error = %{public}@, identifier = %{public}@, data = %@
Could not save after removing time to leave refresh date. error = %{public}@, identifier = %{public}@
Could not save after removing time to leave refresh dates. error = %{public}@
Loaded time to leave refresh timer dates, count = %lu
Error archiving time to leave refresh dates (%@). error = %@
Error writing archived data to path = %{public}@, error = %@
Travel advisories are not supported. Will not start travel engine.
Travel advisories are not supported. Will not stop travel engine.
Received notification but travel engine is not active. notification name = %{public}@
Travel engine wrapper received did register for did register for alarms message but the travel engine wrapper is not active. Cannot start travel engine.
Travel engine wrapper received did register for did register for alarms message. Starting travel engine.
Received alarm but travel engine is not active. alarm name = %{public}@
No delegate exists to send travel advice received message
No delegate exists to send event significantly changed message
No delegate exists to send authorization changed message
Fetched event invitation response notification info with sourceClientIdentifier: %{public}@ info: %@
Failed to get event (%{public}@) when attempting to accept invitation response
Failed to get notification info for sourceClientIdentifier (%{public}@) when attempting to accept invitation response
Failed to get a proposer when attempting to accept and invitation response notification that should have been a proposed new time notification (%{public}@)
Error saving event store after accepting proposed new time for sourceClientIdentifier (%{public}@), error = %@
Failed to get event (%{public}@) when attempting to decline invitation response
Failed to get notification info for sourceClientIdentifier (%{public}@) when attempting to decline invitation response
Failed to get a proposer when attempting to decline an invitation response notification that should have been a proposed new time notification (%{public}@)
Error saving event store after declining proposed new time for sourceClientIdentifier (%{public}@), error = %@
Ignoring junk event
Could not get icon identifier from icon path = %{public}@, notification icon = %{public}@
Could not get icon path for icon identifier = %{public}@
Update with original event requested: [%@]. This checks if the event has changed enough to qualify generating another hypothesis.
Latest Hypothesis [%@]
There was no previous original event, so event has significantly changed. Should attempt to hypothesize.
There is no hypothesis, or non-functional hypothesizer. Regenerating a new hypothesizer. latestHypothesis:[%@] hypothesizer:[%@] hypothesizer state:[%ld]
Event has significantly changed: [%@].  Original event: [%@]
No equality check was performed.  Original event: [%@]
Will attempt to hypothesize.  Previous original event: [%@] Original event: [%@]
Firing request hypothesis refresh block in travel engine for [%@]
Firing cancel hypothesis request block in travel engine for [%@]
Firing emission block in travel engine for [%@]
Requesting refresh for hypothesizer, %@
Request hypothesis refresh timer fired
Emission hypothesis refresh timer fired
Ignoring attempt to set alarm named %{public}@ for a date in the past (%{public}@)
Created a new request refresh timer that will fire at: [%@] for entry: [%@]
Uninstalling request refresh timer for agenda entry: [%@].
Created a new emission refresh timer that will fire at: [%@] for entry: [%@]
Uninstalling emission refresh timer for agenda entry: [%@].
Sending UI feedback to the hypothesizer.  Notification type: [%@].  Original event: [%@]
Clearing all state in the agenda entry for original event: [%@]
A map handle already exists on the event.  Will not enhance location by geocoding the location string.  Original event: [%@]
A geolocation already exists on the event.  Will not enhance location by geocoding the location string.  Original event: [%@]
The location is a conference room without structured location information.  Will not proceed to monitor route.  Original event: [%@].
No map handle or geolocation exists on the event.  Will enhance location by geocoding the location string.  Original event: [%@]
Automatic geocoding is not allowed yet. We will not attempt to geocode for this event [%@]
Geocoding complete.  Elapsed time: [%@] ms.  Original event: [%@]
Encountered error while geocoding.  Will not proceed to monitor route.  Location string: [%@] Error: [%@].
No geocoding results found.  Will not proceed to monitor route.  Location string: [%@].
Map item found after geocoding.  Location string: [%@].  Map item: [%@]
No event external URL found.  Will not save geocoding result to the database. Original event: [%@].
'saveGeocodedLocationsInTravelEngine' set to 'NO.'  Will not save geocoding result to the database. Original event: [%@].
Saved geocoding result to the database successfully. Original event: [%@].
Failed to save the geocoding result to the database successfully. Original event: [%@].  Error: [%@]
Setting up route monitoring.  Original event: [%@]
No map handle or geolocation found.  Will not monitor routing for event.  Original event: [%@]
Found map handle.  Will use to generate destination.  Original event: [%@]
Found geolocation.  Will use for route monitoring.  Original event: [%@].  Geocoordinates - Latitude: [%@], Longitude: [%@]
Creating a synthetic hypothesis.  Original event: [%@]
Created a synthetic hypothesis: [%@]
Creating hypothesizer to monitor routing.  Destination: [%@] Original event: [%@] Hypothesizer: [%@]
Hypothesizer is gone.  Returning early.
Hypothesizer updated to state: [%@].  Original event: [%@]. Hypothesis: [%@]
Done hypothesizing for original event: [%@]
Analyzing hypothesis for original event: [%@]
Not updating the latestHypothesis because the hypothesis is nil.
Updating agenda entry with hypothesis: [%@]. Agenda entry: [%@].
Fetched shared calendar invitation notification infos. Found %{public}@ notifications
Fetched shared calendar invitation notification with sourceClientIdentifier = %{public}@. Info = %@
Failed to get notification object from notification reference. Bailing.
Fetched shared calendar invitation response notification infos. Found %{public}@ notifications
Fetched shared calendar invitation response notification with sourceClientIdentifier = %{public}@. Info = %@
Fetched calendar resource changed notification infos. Found %{public}@ notifications
Fetched calendar resource changed notification with sourceClientIdentifier = %{public}@. Info = %@
Failed to acknowledge resource change (%{public}@) for notification with sourceClientIdentifier %{public}@
Marked as having received location with effective bundle identifier = %{public}@
Couldn't read existing persistent triggered event notification storage at path %{public}@. Will proceed anyway, which may mean contents will be overwritten. Error: %@
Triggered event notification storage file loaded from path %{public}@.
Triggered event notification storage file did not exist at path = %{public}@. Creating a new file FAILED with error: %@
Triggered event notification
 storage file did not exist at path = %{public}@. Created a new file.
Could not save notification data. error = %{public}@, identifier = %{public}@, data = %@
Could not save after removing notification data. error = %{public}@, identifier = %{public}@
Loaded notification meta data, count = %lu
Error archiving notification data (%@). error = %@
Refreshed event invitation response notifications in response to database change. Found %{public}@ notifications for changed objects.
Refreshed event invitation response notifications. Found %{public}@ notifications.
Fetched event invitation response notification with sourceClientIdentifier %{public}@. Content: %@
Received notification response for event invitation response %{public}@ with actionIdentifier = %{public}@
v8@?0
com.apple.calendar.notification
SnoozeUpdateTimer
Snooze
clock
Snooze for 5 minutes
Snooze for 15 minutes
Snooze for 30 minutes
Snooze for 1 hour
Snooze until 30 minutes before
Snooze until 15 minutes before
Snooze until 5 minutes before
Snooze until start time
Snooze until end time
Directions
mappin.and.ellipse
Join Meeting
person.2
EventNotificationEmailSenderButton
Email Sender
person.crop.circle
?travel=true
<%@: %p>(
addedRecords = %@
removedRecords = %@
modifiedRecords = %@
v32@?0@"CALNNotificationIdentifier"8@"CALNNotificationRecord"16^B24
CALNNotificationIconIdentifierVersion
com.apple.mobilecal.bulletin-subsection.upcomingEvents
com.apple.mobilecal.bulletin-subsection.invitations
com.apple.mobilecal.bulletin-subsection.Responses
com.apple.mobilecal.bulletin-subsection.resourceChanges
com.apple.mobilecal.bulletin-subsection.suggestions
<%@: %p>(sourceClientIdentifier = %@, launchURL = %@, expirationDate = %@, eventInvitationNotification = %@, eventRepresentationDictionary = %@, isDelegate = %@, sourceTitle = %@, sourceIdentifier = %@)
None
Allow in CarPlay
Allow actions in CarPlay
Prevent automatic removal from recents
(%@)
CALNSharedInvitationResponseCategoryIdentifier
com.apple.calendar.notifications.SharedCalendarInvitationResponse
notification.hiddenPreviewsBodyPlaceholder.calendar.invitationResponse
Invitation Response
Shared Calendar Invitation
<%@: %p>(identifier = %@, actions = %@, options = %@, hiddenPreviewsBodyPlaceholder = %@, categorySummaryFormat = %@)
<%@: %p>(sourceClientIdentifier = %@, launchURL = %@, expirationDate = %@, conflictDetails = %@, eventInvitationNotification = %@, eventURI = %@, eventRepresentationDictionary = %@, isDelegate = %@, sourceTitle = %@, sourceIdentifier = %@)
com.apple.calendar.notifications.CALNTriggeredEventNotificationResponseDataHypothesisDataPayloadKey
com.apple.calendar.notifications.CALNTriggeredEventNotificationResponseDataLastFireTimeOfAlertOffsetFromTravelTimePayloadKey
v32@?0@"CALNNotificationAction"8Q16^B24
v32@?0@"UNNotificationAction"8Q16^B24
EventInvitation.CanRespond
EventInvitation.CouldBeJunk
CALNNotificationMaybeAction
com.apple.calendar.notifications.EventInvitation
notification.hiddenPreviewsBodyPlaceholder.event.invitation
Invitation
EventInvitationNotificationAcceptButton
Accept
EventInvitationNotificationDeclineButton
Decline
EventInvitationNotificationMaybeButton
Maybe
EventInvitationNotificationReportJunkButton
Report Junk
checkmark.circle
xmark.circle
questionmark.circle
bin.xmark
EventInvitationNotificationDefaultTitle
Time changed to %@
Date changed to %@
Title changed to %@
Location changed and Video Call updated
Location changed to %@
Location removed and Video Call updated
Location removed
Video Call updated
Repeat frequency or end date changed
Invitation updated
Invitation From %@
Unknown Sender
<%@: %p>(identifier = %@, title = %@, systemImage = %@, url = %@)
_CalDatabaseChangedNotification
v16@?0@"NSObject<OS_xpc_object>"8
notifications.PostedNotification
notifications.NotificationResponse
notificationType
actionIdentifier
x-apple-eventkit-alert-%@
v24@?0@"EKEvent"8@"EKAlarm"16
-[CALNTriggeredEventNotificationEKDataSource _alertsFired:]
<%@: %p>(title = %@, location = %@, startDate = %@, endDate = %@, isAllDay = %@, launchURL = %@, isLocationEvent = %@, eventID = %@, calendarIdentifier = %@, eventRepresentationDictionary = %@, legacyIdentifier = %@, mapItemURL = %@, conferenceURL = %@, mailtoURL = %@, hasSuggestedLocation = %@, eventHasAlarms = %@, alarmID = %@, isOffsetFromTravelTimeStart = %@, lastFireTimeOfAlertOffsetFromTravelTime = %@, allowsLocationAlerts = %@, hypothesis = %@, travelAdvisoryTimelinessPeriod = %@, forceDisplayOfNewTravelAdvisoryHypotheses = %@, locationWithoutPrediction = %@, preferredLocation = %@)
CALNSharedCalendarInvitationDefaultCategory
CALNSharedCalendarInvitationCouldBeJunkCategory
CALNSharedCalendarInvitationJoinActionIdentifier
com.apple.calendar.notifications.SharedCalendarInvitation
notification.hiddenPreviewsBodyPlaceholder.calendar.invitation
SharedCalendarInvitationJoinButton
Join
SharedCalendarInvitationDeclineButton
SharedCalendarInvitationReportJunkButton
Invitation to share a calendar with %@.
v16@?0@"NSError"8
com.apple.calendar.notification.NotificationSourceRefresher
stringRepresentation
<%@: %p>(notificationRecord = %@, actionIdentifier = %@, originIdentifier = %@, targetConnectionEndpoint = %@)
work
v32@?0@"<CALNNotificationSource>"8Q16^B24
B32@?0@"CALNNotificationRecord"8Q16^B24
<%@: %p>(sourceClientIdentifier = %@, suggestionNotification = %@, expirationDate = %@, launchURL = %@)
v32@?0@"UNNotification"8Q16^B24
<%@: %p>(identifier = %@, content = %@)
content
identifier
sourceIdentifier
sourceClientIdentifier
date
shouldPresentAlert
shouldPlaySound
<%@: %p>(sourceIdentifier = %@, sourceClientIdentifier = %@, content = %@, shouldPresentAlert = %@, shouldPlaySound = %@, hasAlertContent = %@)
CALNUNUserNotificationCenterErrorDomain
Could not add notification request.
User notification center is inactive.
Activate the user notification center before adding a notification request.
B16@?0@"CALNNotificationRecord"8
v16@?0Q8
CalendarNotificationsAuthorization
authorizationStatus
soundSetting
badgeSetting
alertSetting
notificationCenterSetting
lockScreenSetting
carPlaySetting
alertStyle
showPreviewsSetting
timeSensitiveSetting
v32@?0@"NSString"8@"UNNotificationSettings"16^B24
com.apple.mobilecal.bulletin-subsection.
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz_
notifications_%@_%@
<%@: %p>(title = %@, subtitle = %@, body = %@, categoryIdentifier = %@, sectionIdentifier = %@, date = %@, expirationDate = %@, defaultActionURL = %@, iconIdentifier = %@, shouldHideTime = %@, shouldSuppressSyncDismissalWhenRemoved = %@, peopleIdentifiers = %@, sound = %@, threadIdentifier = %@, summaryArgument = %@, summaryArgumentCount = %lu, interruptionLevel = %lu, filterCriteria = %@, userInfo = %@)
body
subtitle
title
categoryIdentifier
sectionIdentifier
expirationDate
defaultActionURL
iconIdentifier
shouldHideTime
shouldSuppressSyncDismissalWhenRemoved
peopleIdentifiers
sound
userInfo
threadIdentifier
summaryArgument
summaryArgumentCount
interruptionLevel
filterCriteria
v32@?0@"CALNNotification"8Q16^B24
Alert
Badge
Sound
Email sender unknown title
Event
/?&:$+,;=@
mailto:%@?subject=%@
<%@: %p>(sourceIdentifier = %@, sourceClientIdentifier = %@)
<%@: %p>(sourceIdentifier = %@, sourceClientIdentifier = %@, stringRepresentation = %@)
<%@: %p(date: %@, request: %@)
request
CALNNotificationDeleteActionIdentifier
com.apple.calendar.notifications.EventCanceled
EventCanceledDeleteButton
Delete
trash
Canceled by %@
v32@?0@"CALNNotificationRecord"8Q16^B24
com.apple.CALNNotificationDefaultActionIdentifier
com.apple.CALNNotificationDismissActionIdentifier
<%@: %p>(notification = %@, actionIdentifier = %@, originIdentifier = %@, targetConnectionEndpoint = %@)
CALNNotificationIconCacheQueue
Failed to add icon to cache.
Icon does not exist and cannot be removed.
NotificationIconCache
<%@: %p>(trigger = %@, alarmID = %@, isOffsetFromTravelTimeStart = %@, hypothesis = %@)
CalendarNotificationRefreshTimer-
%@-[%@]
com.apple.calaccessd.TTLRefreshMonitor.alarm.context.URLString
com.apple.calendar.notification.inMemoryTriggeredEventNotificationDataStorage.work
<%@: %p>(sourceClientIdentifier = %@, calendarNotification = %@, changeType = %@, date = %@, allDay = %@, timeZone = %@, expirationDate = %@, launchURL = %@, isDelegate = %@, sourceTitle = %@, sourceIdentifier = %@)
@"EKEventStore"8@?0
com.apple.calendar.notification.InboxNotificationMonitorCallback
Default
Calendar
AlarmEngine
SuggestedEvent.Default
SuggestedEvent.Coalesced
SuggestedEvent.Canceled
CALNNotificationConfirmAction
CALNNotificationIgnoreAction
CALNNotificationDeleteAction
com.apple.calendar.notifications.SuggestedEvent
Add to calendar button for a suggested event
Add to Calendar
Ignore button for a suggested event
Ignore
Delete button for a canceled suggested event
%@.%@
com.apple.navd.wakeUpForHypothesisUpdate
callback
v32@?0@8Q16^B24
v16@?0@"EKTravelEngineAgendaEntry"8
com.apple.calendar.LocationAuthDenied
periodicRefreshTimer
B32@?0@8@"EKTravelEngineAgendaEntry"16^B24
v24@?0@"NSString"8^B16
v32@?0@"EKEvent"8Q16^B24
v32@?0@"NSString"8@"EKTravelEngineAgendaEntry"16^B24
/tmp/CalNotificationsAvailable
B32@?0@"CALNSuggestedEventNotificationInfo"8Q16^B24
v24@?0@"CALNNotificationCategory"8^B16
v24@?0@"UNNotificationCategory"8^B16
-[CALNLaunchServicesURLHandler openURL:response:]
v24@?0@"NSDictionary"8@"NSError"16
upcomingEventsThread
com.apple.calendar.notification.CALNTriggeredEventNotificationResponseDataPayloadUserInfoKey
AlarmID
MapItemURL
ConferenceURL
IsLocation
mailto
allDay
endDate
snoozeCategoryExpirationDate
snoozeCategoryExpirationLeeway
com.apple.calendar.notifications.TimeTriggeredEvent
notification.hiddenPreviewsBodyPlaceholder.upcomingEvent
Upcoming Event
%u more upcoming events
Summaries
v32@?0@"NSString"8@"NSArray"16^B24
v32@?0@"NSString"8@"CALNTriggeredEventNotificationData"16^B24
v32@?0@"NSString"8@"NSDate"16^B24
EKAlarmEngineAlarmsDidFireNotification
EKAlarmEngineAlarmOccurrencesKey
com.apple.mobilecal.preference.notification.calendarsExcludedFromNotifications
com.apple.calendar.defaultAlarmChangedNotification
LastDBSequence
com.apple.calendar.notification.alarmengine
-[_EKAlarmEngine _updateWithForceForAlarmTable:]
v28@?0B8@"NSDictionary"12@"CADSequenceToken"20
-[_EKAlarmEngine _storeAlarms:nextScheduleLimit:eventStore:]
CacheEndDate
CalendarsExcludedFromNotifications
v16@?0@"NSArray"8
-[_EKAlarmEngine _rescheduleTimer]
yyyy-MM-dd HH:mm:ss.SSS
-[_EKAlarmEngine _timerFired]
com.apple.calaccessd.alarmEngine.alarm.name
com.apple.calaccessd.alarmEngine.alarm.context.date
com.apple.calendar.notification.inMemoryTimeToLeaveRefreshStorage.work
CALNBulletinReportProblemAction
Mail_identifier
CALNNotificationReportJunkEventAction
CALNNotificationReportJunkCalendarAction
CALNNotificationConferenceCallAction
CALNTriggeredEventNotificationSnoozeActionIdentifier
CALNTriggeredEventNotificationSnooze5MinutesActionIdentifier
CALNTriggeredEventNotificationSnooze15MinutesActionIdentifier
CALNTriggeredEventNotificationSnooze30MinutesActionIdentifier
CALNTriggeredEventNotificationSnooze1HourActionIdentifier
CALNTriggeredEventNotificationSnoozeUntil30MinutesBeforeActionIdentifier
CALNTriggeredEventNotificationSnoozeUntil15MinutesBeforeActionIdentifier
CALNTriggeredEventNotificationSnoozeUntil5MinutesBeforeActionIdentifier
CALNTriggeredEventNotificationSnoozeUntilStartActionIdentifier
CALNTriggeredEventNotificationSnoozeUntilEndActionIdentifier
CALNNotificationDirectionsAction
CALNNotificationDeclineAction
alarmID
isOffsetFromTravelTimeStart
lastFireTimeOfAlertOffsetFromTravelTime
hypothesis
hasDisplayedLeaveByMessage
hasDisplayedLeaveNowMessage
hasDisplayedRunningLateMessage
lastTimeNotificationAdded
<%@: %p>(alarmID = %@, isOffsetFromTravelTimeStart = %@, lastFireTimeOfAlertOffsetFromTravelTime = %@, hypothesis = %@, hasDisplayedLeaveByMessage = %@, hasDisplayedLeaveNowMessage = %@, hasDisplayedRunningLateMessage = %@, lastTimeNotificationAdded = %@)
<%@: %p>(alertType = %@, alertTopic = %@)
alertTopic
alertType
NotificationSourceClientIdentifierVersion
NotificationsLastLocale
com.apple.calendar.notification.snoozeRefresh
calendar
-[CALNNotificationServerModule receivedNotificationNamed:]
NotificationSettings
v16@?0@"NSMutableDictionary"8
com.apple.calendar.notifications.stateCaptureQ
[UserStateLog] System Notification Settings
@8@?0
-[CALNNotificationServerModule receivedAlarmNamed:]
-[CALNNotificationServerModule protectedDataDidBecomeAvailable]
Notifications.Calendar.Unprotected
Notifications.Calendar.Protected
Notifications.Calendar.TriggeredEvent.NotificationData.Unprotected
Notifications.Calendar.TriggeredEvent.NotificationData
Notifications.Calendar.TriggeredEvent.TimeToLeaveRefresh
Extras.db
Extras.db-wal
Extras.db-shm
com.apple.calendar.notifications.postFakeNotification
com.apple.calendar.notifications.FakeNotification.%@
com.apple.calendar.notifications.fakeNotificationSourceQ
Discrete
Private
Fake notification
nextEmissionDate
throttleQueue
%@-%@
eventExternalURL
startDate
locationString
B24@?0@"CLLocation"8@"CLLocation"16
<%@: %p>(lastFireTimeOfAlertOffsetFromTravelTime = %@, hypothesis = %@)
Suggested Location: %@
%@ <%p> {title = %@; date = %@; timeZone = %@}
BLTWatchLegacyMap
CALNResourceChangedCategoryIdentifier
com.apple.calendar.notifications.CalendarResourceChanged
notification.hiddenPreviewsBodyPlaceholder.resourceChange
Shared Event Change
Shared Calendar Change
%@ - Failed to create a valid persistent coordinator or store; context will be nil!
+[EKSideTableContext sideTableContext]
Alarm
fireTime > %@
fireTime
fireTime >= %@ and fireTime <= %@
Setting
key = %@
value
Unable to recover by deleting old database! %@, %@
SideTables
momd
Failed to load schema at %@
Error while importing %@, %@
Creating new database...
Created new database successfully.
Second Error while creating new database %@, %@
%@ - Unable to remove sqlite files
-[EKSideTableContext _persistentStoreCoordinator]
v24@?0@"NSString"8@"EKTravelEngineHypothesis"16
v16@?0@"NSString"8
v12@?0B8
For %@
DatabaseChangedFilterIdentifier
entityID
com.apple.calendar.notifications.TriggeredEvent
com.apple.calendar.notifications.TriggeredEvent.Snooze
com.apple.calendar.notifications.TriggeredEvent.Directions
com.apple.calendar.notifications.TriggeredEvent.ConferenceCall
com.apple.calendar.notifications.TriggeredEvent.MailOrganizer
com.apple.calendar.notifications.TriggeredEvent.Directions.Snooze
com.apple.calendar.notifications.TriggeredEvent.ConferenceCall.Snooze
com.apple.calendar.notifications.TriggeredEvent.MailOrganizer.Snooze
com.apple.calendar.notifications.TriggeredEvent.Directions.ConferenceCall
com.apple.calendar.notifications.TriggeredEvent.Directions.MailOrganizer
com.apple.calendar.notifications.TriggeredEvent.ConferenceCall.MailOrganizer
com.apple.calendar.notifications.TriggeredEvent.Directions.ConferenceCall.Snooze
com.apple.calendar.notifications.TriggeredEvent.Directions.ConferenceCall.MailOrganizer
com.apple.calendar.notifications.TriggeredEvent.Directions.MailOrganizer.Snooze
com.apple.calendar.notifications.TriggeredEvent.ConferenceCall.MailOrganizer.Snooze
com.apple.calendar.notifications.TriggeredEvent.Directions.ConferenceCall.MailOrganizer.Snooze
_30m_before
_15m_before
_5m_before
_before
_after
CALNNotificationAcceptAction
Replace
Remove
<%@: %p>(title = %@, location = %@, startDate = %@, endDate = %@, isAllDay = %@, eventID = %@, eventOccurrenceID = %@, calendarIdentifier = %@, eventRepresentationDictionary = %@, legacyIdentifier = %@, preferredLocation = %@, conferenceURL = %@, mailtoURL = %@, hasSuggestedLocation = %@, eventHasAlarms = %@, allowsLocationAlerts = %@, forceDisplayOfNewTravelAdvisoryHypotheses = %@, locationWithoutPrediction = %@)
<%@: %p>(sourceClientIdentifier = %@, calendarNotification = %@), isDelegate = %@, sourceTitle = %@, sourceIdentifier = %@)
v16@?0@"NSDate"8
travelEngine.geoCodedLocationEncountered
hypothesizerActivated
hypothesizerSentHypothesis
travelTimeThresholdExceededState
maximumTravelDurationEncountered
travelEngine.eligibleEvents
emi-%@-%@
travelEngine.enhanceLocation
hasLocationMapKitHandle
hasGeoLocation
locationIsAConferenceRoom
automaticGeocodingAllowed
gotError
gotResult
errorDomain
errorCode
v24@?0@"MKMapItem"8@"NSError"16
PreHypothesizing
Hypothesizing
UnableToHypothesizePermanently
UnableToHypothesizeTemporarily
DoneHypothesizing
(unknown: %lu)
<%@: %p>(sourceClientIdentifier = %@, calendarNotification = %@, isDelegate = %@, sourceTitle = %@, sourceIdentifier = %@)
com.apple.calendar.notifications.EventInvitationResponse
EventInvitationResponse.ProposedTime
notification.hiddenPreviewsBodyPlaceholder.event.invitationResponse
EventInvitationResponseNotificationAcceptButton
EventInvitationResponseNotificationDeclineButton
EventNotificationDefaultTitleAttendeeReply
Attendee Response
CALNSchedulingSnoozeUpdateTimer
CALNActivitySchedulerDelegate
CALNSnoozeUpdateTimer
NSObject
CALNNullIconProvider
CALNNotificationIconProvider
CALNCalendarIconIdentifierProvider
CalIconProvider
CALNTriggeredEventNotificationActionUtilities
CALNTriggeredEventNotificationFeedbackHelper
CALNTriggeredEventNotificationLaunchURLProvider
CALNNotificationRecordsDiff
CALNNotificationRecordsDiffer
CALNNotificationStorageWrapper
CALNNotificationStorage
CALNDefaultIconIdentifierVersionProvider
CALNIconIdentifierVersionProvider
CALNNotificationRecordsDiffApplier
CALNEventInvitationResponseNotificationInfo
CALNSharedCalendarInvitationResponseNotificationSource
CALNNotificationSource
CALNNotificationResponseDelegate
CALNTimeToLeaveEventTrackerUtilities
CALNNotificationCategory
NSCopying
CALNEventInvitationNotificationInfo
CALNEventRepresentationDataSourceUtils
CALNTriggeredEventNotificationResponseDataPayloadMapper
CALNUNNotificationActionMapper
CALNEventInvitationNotificationSource
UnitTesting
CALNFilteredNotificationManager
CALNNotificationManager
CALNNotificationAction
CALNTravelAdvisoryUtilities
CALNXPCActivityScheduler
CALNActivityScheduler
CALNDefaultTravelAdvisoryAuthority
CALNTravelAdvisoryAuthority
CALNCalAnalyticsHandler
CALNAnalyticsHandler
CALNTriggeredEventNotificationEKDataSource
CALNTravelEngineDelegate
CALNTimeToLeaveRefreshMonitorDelegate
CALNTriggeredEventNotificationDataSource
CALNSyntheticRouteHypothesizer
CALNSyntheticRouteHypothesizerProtocol
CALNRouteHypothesizer
CADSyntheticRouteHypothesizer
CALNTriggeredEventNotificationSourceNotificationInfo
CALNSharedCalendarInvitationNotificationSource
CALNUNDefaultUserNotificationCenter
CALNUNUserNotificationCenterProtocol
CALNNotificationSourceRefresher
CALNNotificationRecordResponse
CALNNotificationServer
CADModule
CalActivatable
CalDarwinNotificationReceiver
CalAlarmReceiver
CalDataProtectionObservable
CALNUserNotificationCenterDelegate
CALNUNNotificationResponseMapper
CALNSuggestedEventNotificationInfo
CALNEKTTLEventTracker
CALNTTLEventTracker
CALNUNNotificationMapper
CALNNotificationRequest
NSSecureCoding
NSCoding
CALNNotificationRecord
NSMutableCopying
CALNMutableNotificationRecord
CALNDateStringUtils
CALNGEORouteHypothesizer
CALNEventCanceledNotificationInfo
CALNUNUserNotificationCenter
UNUserNotificationCenterDelegate
CALNUserNotificationCenter
CALNNotificationContent
CALNMutableNotificationContent
CALNNullCoreLocationProvider
CALNCoreLocationProvider
CALNNotificationMapper
CALNEventCanceledNotificationEKDataSource
CALNEventCanceledNotificationDataSource
CALNPersistentNotificationStorage
CALNTriggeredEventNotificationMailtoURLProvider
CALNNotificationIdentifierComponents
CALNNotificationIdentifier
CALNNotification
CALNEventCanceledNotificationSource
CALNInMemoryNotificationStorage
CALNEventRepresentationSourceUtils
CALNSyntheticRouteHypothesizerProvider
CALNRouteHypothesizerProvider
CALNNotificationIconUpdater
CALNNotificationResponse
CALNNotificationIconCache
CALNIconCache
CALNTriggeredEventNotificationTriggerData
CALNDefaultTimeToLeaveRefreshMonitor
CALNTimeToLeaveRefreshMonitor
CALNEKAlarmEngineMonitor
CALNAlarmEngineMonitor
CALNInMemoryTriggeredEventNotificationDataStorage
CALNTriggeredEventNotificationDataStorage
UserInfoUtils
CALNNullRemoteMutator
CALNRemoteMutator
CALNDataAccessExpressSharedConnection
CALNDataAccessExpressConnection
CALNCUIKIconProvider
CALNCalendarResourceChangedNotificationInfo
CALNInboxNotificationMonitor
CALNInboxNotificationProvider
CALNCalendarCoreLocationManager
CALNGEORouteHypothesizerProvider
CALNLogSubsystem
CALNModuleProvider
CADModuleProvider
CALNEKTravelAdvisoryTimelinessAuthority
CALNTravelAdvisoryTimelinessAuthority
CALNSuggestedEventNotificationSource
CALNUNNotificationSoundMapper
CALNRemoteMutatorShared
CALNDefaultTriggeredEventNotificationMapItemURLProvider
CALNTriggeredEventNotificationMapItemURLProvider
CALNEKSuggestionsServiceLogger
CALNSuggestionsServiceLogger
CALNDefaultTriggeredEventNotificationTransitionProvider
CALNTriggeredEventNotificationTransitionProvider
CALNEKUIEventRepresentationProvider
CALNDataSourceEventRepresentationProvider
CALNSourceEventRepresentationProvider
CALNRouteHypothesisMapper
EKTravelEngine
CLLocationManagerDelegate
CALNNotificationUtilities
CALNSuggestedEventNotificationEKDataSource
CALNSuggestedEventNotificationDataSource
CALNUNNotificationCategoryMapper
CALNLaunchServicesURLHandler
CALNURLHandler
CALNUNNotificationContentMapper
CALNTriggeredEventNotificationSource
CALNTriggeredEventNotificationDataSourceDelegate
CALNSnoozeUpdateTimerDelegate
CALNEKFoundInAppsEventTracker
CALNFoundInAppsEventTracker
_EKAlarmEngine
CALNCUIKTravelAdvisoryDescriptionGenerator
CALNTravelAdvisoryDescriptionGenerator
CALNInMemoryTimeToLeaveRefreshStorage
CALNTimeToLeaveRefreshStorage
CALNEventInvitationNotificationEKDataSource
CALNEventInvitationNotificationDataSource
CALNDefaultTriggeredEventNotificationTriggerHelper
CALNTriggeredEventNotificationTriggerHelper
CALNCalendarAppBadgeUpdater
CALNUNNotificationPresentationOptionsMapper
CALNTriggeredEventNotificationSourceClientIdentifierUtilities
CALNResourceChangedNotificationDataSourceUtils
CALNTriggeredEventNotificationData
CALNMutableTriggeredEventNotificationData
CALNNotificationDataSourceUtils
CALNNullAlarmEngineMonitor
CALNEventInvitationNotificationDataSourceUtils
CALNNotificationSound
CALNMutableNotificationSound
CALNNotificationServerModule
CALNFakeNotificationSource
EKSideAlarm
EKTravelEngineThrottle
EKTravelEngineOriginalEvent
CALNTriggeredEventNotificationResponseData
CALNDefaultTriggeredEventNotificationBodyDescriptionProvider
CALNTriggeredEventNotificationBodyDescriptionProvider
EKCalendarItemAlertInfo
CALNEKDebugPreferences
CALNDebugPreferences
CALNNullTimeToLeaveRefreshMonitor
CALNNullTravelEngine
CALNTravelEngine
CALNLegacyIdentifierUtils
CALNUNUserNotificationCenterFactory
CALNUserNotificationCenterFactory
CALNBundle
CALNCalendarResourceChangedNotificationSource
CALNSnoozeCategory
CALNDefaultEKCalendarNotificationReferenceProvider
CALNEKCalendarNotificationReferenceProvider
CALNPersistentTimeToLeaveRefreshStorage
EKSideTableContext
CALNEKTravelEngine
CALNNotificationSourceUtils
CALNUNNotificationRequestMapper
CALNEventInvitationResponseNotificationEKDataSource
CALNEventInvitationResponseNotificationDataSource
CALNNotificationFilterUtils
CALNMSMailAccounts
CALNMailAccounts
CALNNotificationFilter
CALNTriggeredEventNotificationTransitionUtilities
CALNUNNotificationIconMapper
CALNTriggeredEventNotificationInfo
CALNSharedCalendarInvitationNotificationInfo
EKTravelEngineAgendaEntry
CALNSharedCalendarInvitationNotificationEKDataSource
CALNSharedCalendarInvitationNotificationDataSource
CALNSharedCalendarInvitationResponseNotificationInfo
CALNSharedCalendarInvitationResponseNotificationEKDataSource
CALNSharedCalendarInvitationResponseNotificationDataSource
CALNCalendarResourceChangedNotificationEKDataSource
CALNCalendarResourceChangedNotificationDataSource
CALNCLCoreLocationProvider
CALNPersistentTriggeredEventNotificationDataStorage
CALNEventInvitationResponseNotificationSource
CGImage
CalIsAfterOrSameAsDate:
T@"<CALNFoundInAppsEventTracker>",R,N,V_foundInAppsEventTracker
CalIsBeforeOrSameAsDate:
T@"<CALNTravelAdvisoryAuthority>",R,N,V_travelAdvisoryAuthority
T#,R
T@"CALNCalAnalyticsHandler",R,N
T@"<CALNActivitySchedulerDelegate>",W,N,V_delegate
T@"CALNInMemoryTimeToLeaveRefreshStorage",R,N,V_inMemoryStorage
T@"<CALNAnalyticsHandler>",R,N,V_analyticsHandler
T@"CALNNotificationSound",C,D,N
T@"<CALNCalendarResourceChangedNotificationDataSource>",R,N,V_dataSource
T@"NSArray",R,N
T@"<CALNDataAccessExpressConnection>",R,N,V_dataAccessExpressConnection
T@"NSString",R,C,N,V_identifier
T@"<CALNDebugPreferences>",R,N,V_debugPreferences
T@"NSURL",C,D,N
T@"<CALNEventCanceledNotificationDataSource>",R,N,V_dataSource
T@?,R,N
T@"<CALNEventInvitationResponseNotificationDataSource>",R,N,V_dataSource
TB,N,V_isProtectedDataAvailable
T@"<CALNIconIdentifierVersionProvider>",R,N,V_identifierVersionProvider
Td,R,N,V_leeway
T@"<CALNMailAccounts>",R,N,V_mailAccounts
_active
T@"<CALNNotificationManager>",R,N,V_notificationManager
_alertInfoAlarmIDFromSideAlarm:
T@"<CALNNotificationManager>",R,W,N,V_notificationManager
_allowedCharacterSetForEncodingNotificationIdentifierComponents
T@"<CALNNotificationStorage>",&,V_wrappedStorage
_enableTravelAdvisoriesForAutomaticBehaviorNotificationReceived
T@"<CALNNotificationStorage>",R,N,V_storage
_eventHasAlarms
T@"<CALNRouteHypothesizer>",&,N,V_hypothesizer
_expirationDate
T@"<CALNRouteHypothesizerProvider>",R,N,V_routeHypothesizerProvider
_filterCriteria
T@"<CALNSharedCalendarInvitationResponseNotificationDataSource>",R,N,V_dataSource
_hasDisplayedRunningLateMessage
T@"<CALNSnoozeUpdateTimerDelegate>",W,N
_lastCheckpoint
T@"<CALNSourceEventRepresentationProvider>",R,N,V_sourceEventRepresentationProvider
_locationString
T@"<CALNTTLEventTracker>",R,N,V_ttlEventTracker
_pendingChanges
T@"<CALNTimeToLeaveRefreshMonitorDelegate>",W,N
_refreshDateMap
T@"<CALNTimeToLeaveRefreshStorage>",R,N,V_storage
_resetSyncTimer
T@"<CALNTravelAdvisoryDescriptionGenerator>",R,N,V_travelAdvisoryDescriptionGenerator
_settingForKey:
T@"<CALNTravelEngine>",R,N,V_travelEngine
_suffix
T@"<CALNTravelEngineDelegate>",W,N,V_delegate
_travelAdvisoryTimelinessPeriod
T@"<CALNTriggeredEventNotificationDataSourceDelegate>",W,N
_updateLocaleReloadIfDifferent:
T@"<CALNTriggeredEventNotificationDataStorage>",R,N,V_notificationDataStorage
_validForAllDay
T@"<CALNTriggeredEventNotificationTransitionProvider>",R,N,V_transitionProvider
_yieldingToSync
T@"<CALNUNUserNotificationCenterProtocol>",R,N,V_userNotificationCenter
address
T@"<CALNUserNotificationCenter>",R,N,V_userNotificationCenter
alarmsBetweenStartDate:endDate:
T@"<CALNUserNotificationCenterDelegate>",W,N,V_delegate
appLink
T@"<CalIconProvider>",R,N
cancelEmissionHypothesisRefresh
T@"<EKEventStoreProvider>",R,N,V_eventStoreProvider
containsObject:
T@"<UNUserNotificationCenterDelegate>",W,N
contentForNotificationWithInfo:
T@"CADRouteHypothesis",&,N
dateWithTimeInterval:sinceDate:
T@"CADSyntheticRouteHypothesizerCache",R,N,V_syntheticRouteHypothesizerCache
dealloc
T@"CALNCUIKTravelAdvisoryDescriptionGenerator",R,N
deleteAllAlarms
T@"CALNCalendarCoreLocationManager",R,N,V_coreLocationManager
endDate
T@"CALNDefaultTravelAdvisoryAuthority",R,N
eventIdentifier
T@"CALNEKFoundInAppsEventTracker",R,N
handleMailOrganizerActionWithSourceClientIdentifier:hypothesis:
T@"CALNEKTTLEventTracker",R,N
inMemoryStorage
T@"CALNInMemoryNotificationStorage",R,N,V_inMemoryStorage
initWithNotificationIconMapper:
T@"CALNMSMailAccounts",R,N
initWithTrigger:alarmID:isOffsetFromTravelTimeStart:hypothesis:
T@"CALNNotificationAction",R,N
isEqualToSound:
T@"CALNNotificationContent",R,C,N,V_content
isProxy
T@"CALNNotificationIconCache",R,N,V_notificationIconCache
isTimeSensitive
T@"CALNNotificationRequest",R,C,N,V_request
locationChanged
T@"CALNNotificationSound",R,C,N,V_sound
locationStringWithoutPrediction
T@"CALNNullAlarmEngineMonitor",R,N
modules
T@"CALNNullRemoteMutator",R,N
T@"CALNNullTravelEngine",R,N
options
T@"CALNSyntheticRouteHypothesizerProvider",R,N
protectedDataDidBecomeAvailable
T@"CALNTriggeredEventNotificationSource",R,N,V_triggeredEventNotificationSource
removeAllDeliveredNotifications
T@"CALNUNNotificationIconMapper",R,N,V_notificationIconMapper
request
T@"CALNUNNotificationRequestMapper",R,N,V_notificationRequestMapper
routing
T@"CALNUNUserNotificationCenterFactory",R,N
running
T@"CalGeocoder",&,N,V_geocoder
setAdviceBlock:
T@"EKCalendarNotification",R,N,V_calendarNotification
setDay:
T@"EKCalendarSuggestionNotification",R,N,V_suggestionNotification
setHasDisplayedLeaveNowMessage:
T@"EKStructuredLocation",R,N,V_preferredLocation
setMergePolicy:
T@"EKTravelEngine",R,N,V_travelEngine
setTriggerType:
T@"EKTravelEngineHypothesis",C,D,N
setUpdateBlock:
T@"EKTravelEngineHypothesis",R,N
sharedGenerator
T@"EKTravelEngineOriginalEvent",&,N,V_originalEventInternal
shouldPlaySound
T@"EKTravelEngineThrottle",&,N,V_throttle
sources
T@"NSArray",C,D,N
stringByAppendingPathComponent:
T@"NSArray",R,C,N,V_addedRecords
stringByRemovingPercentEncoding
T@"NSArray",R,C,N,V_peopleIdentifiers
summaryArgument
T@"NSArray",R,N,V_actions
systemImageName
T@"NSArray<CALNNotificationSource>",R,C,N,V_sources
trigger
T@"NSData",&,N,V_mapKitHandle
updateIconsToNewVersionIfNeeded
T@"NSDate",&,N,V_endDate
weekday
.cxx_destruct
CalIsAfterDate:
CalIsBeforeDate:
T@"<CALNSuggestedEventNotificationDataSource>",R,N,V_dataSource
CalSimulatedDateForNow
T@"<CALNTriggeredEventNotificationDataSource>",R,N,V_dataSource
T@"<CALNActivitySchedulerDelegate>",W,N
T@"CALNDefaultTriggeredEventNotificationMapItemURLProvider",R,N
T@"<CALNAlarmEngineMonitor>",R,N,V_alarmEngineMonitor
T@"CALNInboxNotificationMonitor",R,N,V_inboxNotificationMonitor
T@"<CALNCalendarIconIdentifierProvider>",R,N,V_iconIdentifierProvider
T@"CALNNotificationStorageWrapper",R,N,V_calendarStorageWrapper
T@"<CALNCoreLocationProvider>",R,N,V_coreLocationProvider
T@"NSString",R,C,N,V_alertTopic
T@"<CALNDataSourceEventRepresentationProvider>",R,N,V_dataSourceEventRepresentationProvider
T@"NSTimeZone",R,C,N,V_timeZone
T@"<CALNEKCalendarNotificationReferenceProvider>",R,N,V_notificationReferenceProvider
T@"NSURL",R,C,N,V_conferenceURL
T@"<CALNEventInvitationNotificationDataSource>",R,N,V_dataSource
TB,N,V_geocodedEventEncountered
T@"<CALNIconCache>",R,N,V_iconCache
TB,R,N,V_allDay
T@"<CALNInboxNotificationProvider>",R,N,V_inboxNotificationProvider
T@"<CALNNotificationIconProvider><CALNCalendarIconIdentifierProvider><CalIconProvider>",R,N,V_iconProvider
_addRefreshDate:withIdentifier:
T@"<CALNNotificationManager>",R,N,V_wrappedNotificationManager
_allDay
T@"<CALNNotificationStorage>",&,N,V_storage
_bundle
T@"<CALNNotificationStorage>",R,N,V_protectedStorage
_entrySignificantlyChangedBlock
T@"<CALNRemoteMutator>",R,N,V_remoteMutator
_eventSignificantlyChangedBlock
T@"<CALNRouteHypothesizerProvider>",R,N,V_hypothesizerProvider
_filesToMigrate
T@"<CALNSharedCalendarInvitationNotificationDataSource>",R,N,V_dataSource
_handle
T@"<CALNSnoozeUpdateTimer>",R,N,V_snoozeUpdateTimer
_iconIdentifier
T@"<CALNSnoozeUpdateTimerDelegate>",W,N,V_delegate
_leeway
T@"<CALNSuggestionsServiceLogger>",R,N,V_suggestionsServiceLogger
_notificationRecordWithSourceIdentifier:sourceClientIdentifier:
T@"<CALNTimeToLeaveRefreshMonitor>",R,N,V_timeToLeaveRefreshMonitor
_performAnalyticsPostProcessing
T@"<CALNTimeToLeaveRefreshMonitorDelegate>",W,N,V_delegate
_removedRecords
T@"<CALNTimeToLeaveRefreshStorage>",R,N,V_timeToLeaveRefreshStorage
_routineManager
T@"<CALNTravelAdvisoryTimelinessAuthority>",R,N,V_travelAdvisoryTimelinessAuthority
_shouldHideTime
T@"<CALNTravelEngineDelegate>",W,N
_syncYieldTimer
T@"<CALNTriggeredEventNotificationBodyDescriptionProvider>",R,N,V_bodyDescriptionProvider
_travelAgendaTimeWindowInterval
T@"<CALNTriggeredEventNotificationDataSourceDelegate>",W,N,V_delegate
_updatedRecord:
T@"<CALNTriggeredEventNotificationMapItemURLProvider>",R,N,V_mapItemURLProvider
_wrappedStorage
T@"<CALNTriggeredEventNotificationTriggerHelper>",R,N,V_triggerHelper
actions
T@"<CALNURLHandler>",R,N,V_urlHandler
alarmID
T@"<CALNUserNotificationCenterDelegate>",W,N
alerted
T@"<CalDateProvider>",R,N,V_dateProvider
bundleForClass:
T@"<CalIconProvider>",R,N,V_iconProvider
conflictDetails
T@"<EKNotificationPreferences>",R,N,V_preferences
content
T@"BSServiceConnectionEndpoint",R,N,V_targetConnectionEndpoint
currentCalendar
T@"CADRouteHypothesis",&,N,VcurrentCADRouteHypothesis
T@"CALNCUIKIconProvider",R,N
defaultCategory
T@"CALNCalendarAppBadgeUpdater",R,N,V_calendarAppBadgeUpdater
descriptionText
T@"CALNDefaultEKCalendarNotificationReferenceProvider",R,N
eventID
T@"CALNEKDebugPreferences",R,N
fetchEventCanceledNotifications
T@"CALNEKSuggestionsServiceLogger",R,N
hasAlertContent
T@"CALNGEORouteHypothesizerProvider",R,N
initWithDateProvider:scheduler:
T@"CALNInMemoryTriggeredEventNotificationDataStorage",R,N,V_inMemoryStorage
initWithString:
T@"CALNNotification",R,N,V_notification
invitationNotificationsDisabled
T@"CALNNotificationContent",C,D,N
isLocationEvent
T@"CALNNotificationIconCache",R,N,V_iconCache
isSelfOrganized
T@"CALNNotificationRecord",R,N,V_notificationRecord
locationAddress
T@"CALNNotificationServer",R,N,V_calendarNotificationServer
locationManager:didEnterRegion:
T@"CALNNotificationSourceRefresher",R,N,V_notificationSourceRefresher
modifiedRecords
T@"CALNNullIconProvider",R,N
notificationDataWithIdentifier:
T@"CALNNullTimeToLeaveRefreshMonitor",R,N
numberWithBool:
T@"CALNSchedulingSnoozeUpdateTimer",R,N,V_snoozeUpdateTimer
ownerID
T@"CALNTriggeredEventNotificationMailtoURLProvider",R,N,V_mailtoURLProvider
release
T@"CALNUNNotificationContentMapper",R,N,V_notificationContentMapper
removeIconWithIdentifier:error:
T@"CALNUNNotificationMapper",R,N,V_notificationMapper
requestHypothesisRefreshAtDate:
T@"CALNUNNotificationResponseMapper",R,N,V_notificationResponseMapper
routingModeEnumForCalRouteType:
T@"CLLocation",&,N,V_geoLocation
T@"EKCalendarEventInvitationNotification",R,N,V_eventInvitationNotification
setArrivalDate:
T@"EKCalendarResourceChangeNotification",R,N,V_calendarNotification
setGeoLocation:
T@"EKConflictDetails",R,N,V_conflictDetails
setIsOffsetFromTravelTimeStart:
T@"EKTravelAdvisoryTimelinessAuthority",R,N,V_travelAdvisoryTimelinessAuthority
setTravelState:
T@"EKTravelEngineHypothesis",&,N,V_latestHypothesis
setUndoManager:
T@"EKTravelEngineHypothesis",R,C,N,V_hypothesis
setWithObjects:
T@"EKTravelEngineHypothesis",R,N,V_hypothesis
sharedOwnerName
T@"EKTravelEngineOriginalEvent",R,N
snoozeUntil5MinutesBeforeAction
T@"GEORouteHypothesizer",R,N,V_routeHypothesizer
storage
T@"NSArray",R,C,N,V_actions
stringByAppendingPathExtension:
T@"NSArray",R,C,N,V_modifiedRecords
stringFromDate:
T@"NSArray",R,C,N,V_removedRecords
syntheticRouteHypothesizerCache
T@"NSArray",R,N,V_modules
timeToLeaveRefreshMonitor:refreshTimerFiredForEventExternalURL:
T@"NSData",&,N,V_locationMapKitHandle
ttlEventTracker
T@"NSDate",&,D,N
T@"NSDate",&,N,V_fireDate
T@"NSDate",&,N,V_lastFireTimeOfAlertOffsetFromTravelTime
T@"NSDate",&,N,V_lastTimeBulletinAdded
T@"NSDate",&,N,V_nextEmissionDate
T@"NSDate",&,N,V_startDate
T@"NSDate",C,D,N
T@"NSDate",R,C,N,V_date
T@"NSDate",R,C,N,V_endDate
T@"NSDate",R,C,N,V_expirationDate
T@"NSDate",R,C,N,V_lastFireTimeOfAlertOffsetFromTravelTime
T@"NSDate",R,C,N,V_lastTimeNotificationAdded
T@"NSDate",R,C,N,V_startDate
T@"NSDate",R,N,V_endDate
T@"NSDate",R,N,V_eventDate
T@"NSDictionary",C,D,N
T@"NSDictionary",R,C,N,V_eventRepresentationDictionary
T@"NSDictionary",R,C,N,V_userInfo
T@"NSMutableDictionary",&,N,V_notificationSourceMap
T@"NSMutableDictionary",R,N,V_eventURLToObjectIDMap
T@"NSMutableDictionary",R,N,V_notificationDataMap
T@"NSMutableDictionary",R,N,V_recordMap
T@"NSMutableDictionary",R,N,V_refreshDateMap
T@"NSNotificationCenter",R,N,V_notificationCenter
T@"NSNumber",&,D,N
T@"NSObject<OS_dispatch_queue>",&,N,V_callbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_throttleQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_workQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
T@"NSObject<OS_dispatch_queue>",R,N,V_workQueue
T@"NSObject<OS_os_log>",R,N
T@"NSString",&,D,N
T@"NSString",&,N,V_agendaEntryIdentifier
T@"NSString",&,N,V_eventExternalURL
T@"NSString",&,N,V_locationAddress
T@"NSString",&,N,V_locationString
T@"NSString",&,N,V_locationStringWithoutPrediction
T@"NSString",&,N,V_organizerEmailAddress
T@"NSString",&,N,V_startLocationRouting
T@"NSString",&,N,V_throttleIdentifier
T@"NSString",&,V_eventExternalURL
T@"NSString",C,D,N
T@"NSString",R,C
T@"NSString",R,C,N,V_actionIdentifier
T@"NSString",R,C,N,V_alarmID
T@"NSString",R,C,N,V_body
T@"NSString",R,C,N,V_calendarIdentifier
T@"NSString",R,C,N,V_categoryIdentifier
T@"NSString",R,C,N,V_categorySummaryFormat
T@"NSString",R,C,N,V_eventID
T@"NSString",R,C,N,V_eventObjectID
T@"NSString",R,C,N,V_eventOccurrenceID
T@"NSString",R,C,N,V_eventURI
T@"NSString",R,C,N,V_filterCriteria
T@"NSString",R,C,N,V_hiddenPreviewsBodyPlaceholder
T@"NSString",R,C,N,V_iconIdentifier
T@"NSString",R,C,N,V_legacyIdentifier
T@"NSString",R,C,N,V_location
T@"NSString",R,C,N,V_locationWithoutPrediction
T@"NSString",R,C,N,V_originIdentifier
T@"NSString",R,C,N,V_path
T@"NSString",R,C,N,V_sectionIdentifier
T@"NSString",R,C,N,V_sourceClientIdentifier
T@"NSString",R,C,N,V_sourceIdentifier
T@"NSString",R,C,N,V_sourceTitle
T@"NSString",R,C,N,V_stringRepresentation
T@"NSString",R,C,N,V_subtitle
T@"NSString",R,C,N,V_summaryArgument
T@"NSString",R,C,N,V_systemImageName
T@"NSString",R,C,N,V_threadIdentifier
T@"NSString",R,C,N,V_title
T@"NSString",R,N
T@"NSString",R,N,V_alarmID
T@"NSString",R,N,V_dismissalID
T@"NSString",R,N,V_externalID
T@"NSString",R,N,V_location
T@"NSString",R,N,V_publisherBulletinID
T@"NSString",R,N,V_sourceIdentifier
T@"NSString",R,N,V_suffix
T@"NSString",R,N,V_title
T@"NSTimeZone",R,N,V_eventTimeZone
T@"NSURL",R,C,N,V_defaultActionURL
T@"NSURL",R,C,N,V_launchURL
T@"NSURL",R,C,N,V_mailtoURL
T@"NSURL",R,C,N,V_mapItemURL
T@"NSURL",R,C,N,V_url
T@"NSURL",R,N,V_entityID
T@"NSUserActivity",R,N,V_appLink
T@"UISApplicationState",R,N,V_applicationState
T@"UNUserNotificationCenter",R,N,V_userNotificationCenter
T@"_EKAlarmEngine",R,N,V_alarmEngine
T@"_EKNotificationMonitor",R,N,V_notificationMonitor
T@?,C,N,V_adviceBlock
T@?,C,N,V_authorizationChangedBlock
T@?,C,N,V_cancelHypothesisRequestRefreshBlock
T@?,C,N,V_emissionBlock
T@?,C,N,V_entrySignificantlyChangedBlock
T@?,C,N,V_eventSignificantlyChangedBlock
T@?,C,N,V_requestHypothesisRefreshBlock
T@?,C,N,V_updateBlock
T@?,C,N,V_updateHandler
T@?,R,N,V_predicate
TB,D,N
TB,N,GisActive,V_active
TB,N,GisRegisteredForAlarms,V_registeredForAlarms
TB,N,V_authorizedInternal
TB,N,V_automaticGeocodingAllowed
TB,N,V_dismissed
TB,N,V_hasDisplayedLeaveByMessage
TB,N,V_hasDisplayedLeaveNowMessage
TB,N,V_hasDisplayedRunningLateMessage
TB,N,V_hasGeoLocationCoordinates
TB,N,V_hasOrganizerThatIsNotCurrentUser
TB,N,V_hasPredictedLocation
TB,N,V_hypothesizerSentAtLeastOneHypothesis
TB,N,V_isOnSharedCalendar
TB,N,V_isSuggestedLocation
TB,N,V_locationIsAConferenceRoom
TB,N,V_running
TB,R
TB,R,N
TB,R,N,V_acknowledged
TB,R,N,V_allowsLocationAlerts
TB,R,N,V_eventHasAlarms
TB,R,N,V_forceDisplayOfNewTravelAdvisoryHypotheses
TB,R,N,V_hasDisplayedLeaveByMessage
TB,R,N,V_hasDisplayedLeaveNowMessage
TB,R,N,V_hasDisplayedRunningLateMessage
TB,R,N,V_hasSuggestedLocation
TB,R,N,V_isAllDay
TB,R,N,V_isDelegate
TB,R,N,V_isLocationEvent
TB,R,N,V_isOffsetFromTravelTimeStart
TB,R,N,V_isPseudoEvent
TB,R,N,V_isTimeSensitive
TB,R,N,V_refiring
TB,R,N,V_shouldHideTime
TB,R,N,V_shouldPlaySound
TB,R,N,V_shouldPresentAlert
TB,R,N,V_shouldSuppressSyncDismissalWhenRemoved
TB,R,N,V_tentative
TI,R,N,V_changeType
TQ,D,N
TQ,N,V_currentRouteHypothesizerNotificationType
TQ,R
TQ,R,N
TQ,R,N,V_interruptionLevel
TQ,R,N,V_options
TQ,R,N,V_summaryArgumentCount
TQ,R,N,V_travelAdvisoryTimelinessPeriod
TQ,R,N,V_trigger
Td,N,V_maximumTravelDurationEncountered
Td,R,N
Ti,N,V_transportTypeOverride
Ti,R,N,V_databaseID
Tq,N
Tq,N,V_travelTimeThresholdExceededState
Tq,N,V_triggerType
Tq,R,N
Tq,R,N,V_alertType
Tq,R,N,V_proximity
T{CLLocationCoordinate2D=dd},N,V_geoLocationCoordinates
URLFragmentAllowedCharacterSet
URLWithString:
UTF8String
_accountForGeocodedEventEncounter
_acknowledgeSuggestedEventWithSourceClientIdentifier:accept:
_acknowledged
_actionIdentifier
_actions
_activate
_activeSources
_activeSourcesQueue
_activityIdentifier
_addEventURL:mappingToEventObjectID:
_addIconWithIdentifier:toCacheAtPath:
_addNotificationData:forSourceClientIdentifier:
_addNotificationData:withIdentifier:
_addNotificationDataForSourceClientIdentifier:sourceNotificationInfo:existingNotificationData:transition:now:
_addNotificationRecord:
_addRecord:
_addRecord:sourceNotificationInfo:existingNotificationData:trigger:transition:now:
_addSettingName:value:toStatsPayload:forTopicIdentifier:
_addedRecords
_adviceBlock
_adviceReceivedBlock
_agendaEntryIdentifier
_alarmDateForAlarm:eventStartDate:
_alarmEngine
_alarmEngineMonitor
_alarmForEvent:withAlarmID:
_alarmID
_alarmsMatchingPredicate:
_alertFiredForAlertInfo:
_alertInfoAlarmIDFromEKAlarm:
_alertTopic
_alertType
_alertsFired:
_allDayFormatter
_allowsLocationAlerts
_analyticsHandler
_appLink
_applicationState
_authorizationChangedBlock
_authorizedInternal
_authorizedToAcquireLocation
_automaticGeocodingAllowed
_body
_bodyDescriptionProvider
_bodyWithTravelAdvisoryForSourceClientIdentifier:sourceNotificationInfo:
_bodyWithoutTravelAdvisoryForSourceClientIdentifier:sourceNotificationInfo:
_calDatabaseChangedNotificationReceived
_calSyncClientBeginningMultiSaveNotificationReceived
_calSyncClientFinishedMultiSaveNotificationReceived
_calendarAppBadgeUpdater
_calendarIdentifier
_calendarNotification
_calendarNotificationServer
_calendarNotificationSettingChanged
_calendarStorageWrapper
_callbackQueue
_calnNotificationActionFromUNNotificationAction:
_calnNotificationActionIdentifierFromUNNotificationActionIdentifier:
_calnNotificationCategoryFromUNNotificationCategory:
_calnNotificationCategoryOptionsFromUNNotificationCategoryOptions:
_calnNotificationFromUNNotification:
_calnNotificationSoundFromUNNotificationContent:
_calnTravelAdvisoryTimelinessPeriodFromEKTravelAvisoryTimelinessPeriod:
_cancelHypothesisRequestRefreshBlock
_categoryIdentifier
_categorySummaryFormat
_changeType
_characterSetForEncodingIdentifierComponents
_clearEverything
_clearSuggestedEventNotificationWithObjectID:
_clearTravelAdvisoryFromNotificationMetaDataForSourceClientIdentifier:
_clearTravelAdvisoryHypotheses
_commonHandleResponse:
_conferenceURL
_conferenceURLForNotification:
_conflictDetails
_constructNotificationIdentifierStringRepresentationFromComponents:
_content
_contentForNotificationWithSourceClientIdentifier:
_contentForNotificationWithSourceClientIdentifier:shouldClearHypothesis:
_coreLocationManager
_coreLocationProvider
_createCacheDirectoryIfNeeded
_createCalendarNotificationServerWithUserNotificationCenterFactory:storage:eventStoreProvider:alarmEngineMonitor:travelEngine:timeToLeaveRefreshMonitor:timeToLeaveRefreshStorage:
_createEmissionHypothesisRefreshTimerWithDate:
_createEmissionTimerWithDate:
_createHypothesisRequestRefreshTimerWithDate:
_createHypothesizerForDestination:
_createNotificationServerWithUserNotificationCenter:storage:eventStoreProvider:alarmEngineMonitor:travelEngine:timeToLeaveRefreshMonitor:timeToLeaveRefreshStorage:
_createNotificationSourcesWithNotificationManager:eventStoreProvider:inboxNotificationProvider:alarmEngineMonitor:travelEngine:timeToLeaveRefreshMonitor:timeToLeaveRefreshStorage:
_createNotificationStorageAtPath:protected:
_createSyntheticHypothesis
_createTimeToLeaveRefreshStorageAtPath:
_createTriggeredEventNotificationDataStorageAtPath:protected:
_currentRouteHypothesizerNotificationType
_dataAccessExpressConnection
_dataSource
_dataSourceEventRepresentationProvider
_databaseChanged
_databaseID
_databaseIsEncryptedAndUnreadable
_date
_dateFormatter
_dateProvider
_dateTimeFormatter
_deactivate
_debugPreferences
_deconstructNotificationIdentifierStringRepresentationIntoComponents:
_defaultActionURL
_delegate
_dequeueEventsDueBy:
_destroyPersistentStoreAtURL:withType:options:error:
_didReceiveResponse:
_didSetNotificationSources:
_didSetUpTimeToLeaveRefreshTimerForEventID:triggerDate:
_directionsModeForHypothesis:routing:
_directionsModeForLocationRoutingMode:
_directionsModeForRouting:
_directionsModeForTransportType:
_dismissalID
_dismissed
_dispatchQueue
_emissionBlock
_emissionHypothesisRefreshTimerFired
_emissionTimerFired
_endDate
_enhanceLocation
_entityID
_eventDate
_eventExternalURL
_eventExternalURLsToAgendaEntries
_eventForEventID:
_eventForSourceClientIdentifier:
_eventForSourceClientIdentifier:eventStore:
_eventID
_eventInvitationNotification
_eventKitFeatureSetChanged
_eventLocationFromStructuredLocation:
_eventObjectID
_eventOccurrenceID
_eventOccurrenceWithURI:
_eventRepresentationDictionary
_eventRepresentationDictionaryWithSourceNotificationInfo:hypothesisMessage:
_eventSignficantlyChangedBlock
_eventStore
_eventStoreProvider
_eventTimeZone
_eventURI
_eventURLToObjectIDMap
_eventWillEndBeforeUserArrivesForHypothesis:eventEndDate:
_eventWithURI:checkValid:
_exceededMaximumTravelTimeThresholdForHypothesis:
_existingNotificationDataMatchingEventForSourceClientIdentifier:
_existingRecordMatchingEventForSourceClientIdentifier:
_existingRecordMatchingEventForSourceClientIdentifier:existingRecords:
_externalID
_fetchRecordsWithSourceIdentifier:
_filterAlerts:
_fireDate
_fireDates
_fireEmissionBlock
_forceDisplayOfNewTravelAdvisoryHypotheses
_foundInAppsEventTracker
_generateDestination
_geoLocation
_geoLocationCoordinates
_geocodedEventEncountered
_geocoder
_globalAlarmPreferencesChanged
_handleConferenceCallActionWithResponse:
_handleDirectionsActionWithResponse:
_handleMailOrganizerActionWithResponse:
_handleNotificationActionForSourceClientIdentifier:acknowledgeAlarm:eventActions:
_hasDisplayedLeaveByMessage
_hasDisplayedLeaveNowMessage
_hasGeoLocationCoordinates
_hasOrganizerThatIsNotCurrentUser
_hasPredictedLocation
_hasSuggestedLocation
_haveAlarmsChanged:
_hiddenPreviewsBodyPlaceholder
_hypothesis
_hypothesisDataForNotificationData:
_hypothesisFromPayload:
_hypothesisRefreshTimerFired
_hypothesizer
_hypothesizerProvider
_hypothesizerSentAtLeastOneHypothesis
_iconCache
_iconCacheDirectory
_iconIdentifierFromUNNotificationContent:
_iconIdentifierProvider
_iconProvider
_identifier
_identifierEncodingAllowedCharacters
_identifierVersionProvider
_inMemoryStorage
_inboxNotificationMonitor
_inboxNotificationProvider
_initWithAlarmID:isOffsetFromTravelTimeStart:lastFireTimeOfAlertOffsetFromTravelTime:hypothesis:hasDisplayedLeaveByMessage:hasDisplayedLeaveNowMessage:hasDisplayedRunningLateMessage:lastTimeNotificationAdded:
_initWithAlertType:alertTopic:
_initWithIdentifier:content:
_initWithTitle:subtitle:body:categoryIdentifier:sectionIdentifier:date:expirationDate:defaultActionURL:iconIdentifier:shouldHideTime:shouldSuppressSyncDismissalWhenRemoved:peopleIdentifiers:sound:userInfo:threadIdentifier:summaryArgument:summaryArgumentCount:interruptionLevel:filterCriteria:
_installLocationManager
_installPeriodicRefreshTimer
_installSyncYieldTimer
_installTimerWithFireDate:
_interruptionLevel
_isAlarmAcknowledgedWithAcknowledgedDate:fireDate:
_isAllDay
_isDataProtected
_isDelegate
_isLocationEvent
_isNotificationMetaDataExpired:eventID:
_isOffsetFromTravelTimeStart
_isOnSharedCalendar
_isProtectedDataAvailable
_isPseudoEvent
_isSuggestedLocation
_isTimeSensitive
_itemWithEventID:affectedByChangesToObjects:
_killSyncTimer
_killTimer
_lastCreatedEventStore
_lastDBSequenceToken
_lastFireTimeOfAlertOffsetFromTravelTime
_lastFireTimeOfAlertOffsetFromTravelTimeFromPayload:
_lastRefreshDate
_lastTimeBulletinAdded
_lastTimeNotificationAdded
_latestHypothesis
_launchURL
_launchURLForEventID:hypothesis:isTravelLaunchURL:
_launchURLForResponse:
_legacyIdentifier
_loadDataWithError:
_loadNotificationsWithError:
_location
_locationAddress
_locationIsAConferenceRoom
_locationManager
_locationMapKitHandle
_locationStringWithoutPrediction
_locationWithoutPrediction
_lock
_mailAccounts
_mailtoURL
_mailtoURLForNotification:
_mailtoURLProvider
_managedObjectModel
_mapItemNameFromEventLocation:
_mapItemURL
_mapItemURLForEventLocation:eventStartDate:hypothesis:
_mapItemURLForNotification:
_mapItemURLLaunchOptionsForDirectionsMode:eventDate:isFromTimeToLeaveNotification:
_mapItemURLLaunchOptionsForHypothesis:routing:eventStartDate:
_mapItemURLProvider
_mapKitHandle
_maximumTravelDurationEncountered
_mayCeaseRouteMonitoringForExistingNotificationData:
_mergeDataFromUnprotectedStore:withDataInProtectedStore:
_migrateNotificationFiles
_migrateNotificationFilesFromDirectory:toDirectory:
_modifiedRecords
_modules
_needsAlarmTablePopulation
_needsRefresh
_needsRefreshOnNotificationsLoaded
_nextEmissionDate
_nextFireDate
_notification
_notificationAddedWithSourceClientIdentifier:sourceNotificationInfo:trigger:
_notificationBodyForNotificationInfo:contactIdentifier:summaryArgument:
_notificationCenter
_notificationContentMapper
_notificationDataForSourceNotificationInfo:existingNotificationData:transition:now:
_notificationDataMap
_notificationDataStorage
_notificationExpirationDateForAlarmDate:eventEndDate:
_notificationExpirationDateForNullableAlarmDate:eventEndDate:
_notificationIconCache
_notificationIconMapper
_notificationInfoFromNotification:
_notificationInfoFromNotification:inEventStore:
_notificationInfoFromNotificationReference:
_notificationManager
_notificationMapper
_notificationMonitor
_notificationRecord
_notificationRecordResponseFromNotificationResponse:
_notificationRecords
_notificationReferenceProvider
_notificationRequestMapper
_notificationResponseDataForRecord:
_notificationResponseDataForSourceNotificationInfo:
_notificationResponseMapper
_notificationSourceMap
_notificationSourceMapWithNotificationSources:
_notificationSourceRefresher
_notificationStoragePathWithName:
_notificationWithSourceClientIdentifier:affectedByChangesToObjects:
_notifyAlarmsFired:
_openApplicationOptionsForResponse:
_options
_organizerEmailAddress
_originIdentifier
_originalEventInternal
_otherCriteria
_overdueDates
_parseIconIdentifier:intoDateComponents:calendar:type:
_path
_pathForCachedIconWithIdentifier:
_pathForPersistentStore
_pathForSentinelFile
_peopleIdentifiers
_periodicRefreshInterval
_periodicRefreshTimerFired
_persistentStoreCoordinator
_populateAlarmTable:
_populateFinished
_populateStart
_populating
_predicate
_preferences
_preferredLocation
_protected
_protectedCalendarNotificationStorage
_protectedDataDidBecomeAvailable
_protectedStorage
_protectedTriggeredEventNotificationDataStorage
_proximity
_publisherBulletinID
_queue
_recordMap
_refiring
_refreshIfNeeded
_refreshNotification:
_refreshNotificationMetaData:eventID:
_refreshNotificationMetaDataWithObjectIDs:
_refreshNotificationRecordsWithObjectIDs:
_refreshNotifications:
_refreshQueue
_refreshTimeToLeaveRefreshTimerWithRefreshDate:eventID:
_refreshTimeToLeaveRefreshTimersWithObjectIDs:
_refreshTimerAlarmNameForEventExternalURL:
_refreshTimerFiredForEventExternalURL:
_registerForNotificationObservation
_registerSettingsCaptureHandlers
_registeredForAlarms
_relativeToEnd
_reloadNotificationRecords:forNotificationServer:
_reloadNotificationsAfterFirstUnlock
_reloadNotificationsFromUnprotectedStorage:intoProtectedStorage:withStorageWrapper:forNotificationServer:
_reloadTriggeredEventNotificationData
_remoteMutator
_removeData
_removeNotificationDataWithIdentifier:
_removeNotificationRecordsPassingTest:
_removeNotificationsFromUnprotectedStorage:
_removeRecordWithSourceIdentifier:sourceClientIdentifier:
_removeRefreshDateWithIdentifier:
_removeSqliteFiles
_removeStoredNotificationDataForEventWithEventID:
_request
_requestHypothesisRefreshBlock
_requestHypothesisRefreshInterval
_requestHypothesisRefreshTimerFired
_rescheduleTimer
_resetStoredNotificationDataTimeToLeaveDisplayStateForSourceClientIdentifier:
_resolvedSourceClientIdentifierForNewSourceClientIdentifier:oldSourceClientIdentifier:
_routeHypothesizer
_routeHypothesizerProvider
_running
_saveDataWithError:
_saveNotificationsWithError:
_scheduleTimer
_scheduledFireDate
_scheduledOverdueDate
_scheduler
_sectionIdentifier
_sectionIdentifierFromTopicIdentifiers:
_sendFeedbackForPostingNotificationForEventWithExternalURL:feedback:
_sendFeedbackToHypothesizerForPostingNotification:
_setBodyForUNMutableNotificationContent:usingCALNNotificationContent:
_setHypothesisDataFromNotificationData:inPayload:
_setInterruptionLevelForCALNMutableNotificationContent:usingUNNotificationContent:
_setInterruptionLevelForUNMutableNotificationContent:usingCALNNotificationContent:
_setLastFireTimeOfAlertOffsetFromTravelTimeFromNotificationData:inPayload:
_setNotificationResponseData:onNotificationContent:
_setParticipantStatus:withSourceClientIdentifier:
_setPeopleIdentifiersForUNMutableNotificationContent:usingCALNNotificationContent:
_setProtectedClassForStorageAtPath:
_setSoundForUNMutableNotificationContent:usingCALNNotificationContent:
_setSubtitleForUNMutableNotificationContent:usingCALNNotificationContent:
_setSummaryArgumentForUNMutableNotificationContent:usingCALNNotificationContent:
_setThreadIdentifierForUNMutableNotificationContent:usingCALNNotificationContent:
_setTitleForUNMutableNotificationContent:usingCALNNotificationContent:
_setTopicIdentifiersForUNMutableNotificationContent:usingCALNNotificationContent:
_setUpRouteMonitoring
_setUserInfoForUNMutableNotificationContent:usingCALNNotificationContent:
_shouldAddNotificationForTravelAdviceReceivedForSourceClientIdentifier:sourceNotificationInfo:oldNotificationData:
_shouldCeaseRouteMonitoringEventForSourceClientIdentifier:
_shouldModifyForAlarmFiredForSourceClientIdentifier:sourceNotificationInfo:oldNotificationData:
_shouldPlaySound
_shouldPresentAlert
_shouldRemoveNotificationForTravelAdviceReceivedForSourceClientIdentifier:sourceNotificationInfo:oldNotificationData:
_shouldRemoveNotificationMetaData:eventID:
_shouldRemoveStoredNotificationDataGivenShouldWithdrawNotification:hasExistingTravelInformation:mayCeaseRouteMonitoring:
_shouldRemoveTimeToLeaveRefreshTimerWithRefreshDate:eventID:
_shouldSuppressSyncDismissalWhenRemoved
_shouldTriggerForAlertInfo:
_shouldTriggerForTimeToLeaveRefreshForSourceClientIdentifier:sourceNotificationInfo:oldNotificationData:
_shouldTriggerForTimeToLeaveRefreshGivenImmediateDepartureTimelinessStatusForSourceClientIdentifier:oldNotificationData:
_shouldTriggerForTravelAdviceReceivedForSourceClientIdentifier:sourceNotificationInfo:oldNotificationData:
_shouldTriggerForTravelAdviceReceivedGivenHasExistingNotificationDataForSourceClientIdentifier:hypothesis:sourceNotificationInfo:oldNotificationData:hasExistingTravelAdvice:satisfiesMinimumTravelTimeThreshold:
_shouldUpdateStoredNotificationDataGivenTransition:
_shouldUpdateWithForceForAlarmTable
_shouldWithdrawNotificationWithSourceClientIdentifier:event:alarmID:
_significantTimeChangeNotificationReceived
_simulatedOffsetChanged:
_snoozeUpdateTimer
_sound
_sourceClientIdentifier
_sourceClientIdentifier:matchesEventForSourceClientIdentifier:
_sourceClientIdentifierForAlertInfo:
_sourceClientIdentifiersForObjectIDs:
_sourceEventRepresentationProvider
_sourceIdentifier
_sourceNotificationInfoForSourceClientIdentifier:notificationInfo:existingNotificationData:hypothesis:shouldClearHypothesis:isOffsetFromTravelTimeStart:isForContentCreation:
_sourceNotificationInfoForSourceClientIdentifier:shouldClearHypothesis:isForContentCreation:
_sourceTitle
_sources
_spanForNewStatusWithEvent:
_startDate
_startLocationRouting
_statsPayloadKeyForSettingName:topicIdentifier:
_stopInternal
_storage
_storeAlarms:nextScheduleLimit:eventStore:
_stringRepresentation
_subtitle
_suggestEventLocationsSettingChanged
_suggestionNotification
_suggestionsServiceLogger
_summaryArgument
_summaryArgumentCount
_syncDidEnd
_syncDidStart
_syncTimer
_syncTimerFired:
_syntheticRouteHypothesizerCache
_systemImageName
_targetConnectionEndpoint
_tentative
_threadIdentifier
_throttle
_throttleIdentifier
_throttleQueue
_timeDidChangeSignificantly
_timeToLeaveRefreshMonitor
_timeToLeaveRefreshStorage
_timeToLeaveRefreshStoragePathWithName:
_timeToLeaveStateAlreadyDisplayedBasedOnSourceNotificationInfo:oldNotificationData:
_timeZone
_timeZoneChanged:
_timedEventStorePurger
_timedExpirationInterval
_timerFired
_title
_tomorrow
_trackTTLCandidateEvent:
_transitionForAlarmFiredForSourceClientIdentifier:sourceNotificationInfo:oldNotificationData:
_transitionForTimeToLeaveRefreshTimerFiredForSourceClientIdentifier:sourceNotificationInfo:oldNotificationData:
_transitionForTravelAdviceReceivedForSourceClientIdentifier:sourceNotificationInfo:oldNotificationData:
_transitionProvider
_transportTypeOverride
_travelAdvisoryAuthority
_travelAdvisoryAuthorizationChanged:
_travelAdvisoryDescriptionGenerator
_travelAdvisoryTimelinessAuthority
_travelAdvisoryTimelinessPeriodForHypothesis:
_travelEngine
_travelEngineEventSignificantlyChangedWithSourceClientIdentifier:
_travelLaunchURLForEventID:hypothesis:
_travelTimeThresholdExceededState
_trigger
_triggerHelper
_triggerType
_triggeredEventNotificationDataStoragePathWithName:
_triggeredEventNotificationSource
_triggeredWithSourceClientIdentifier:triggerData:
_trimAgendaEntriesBeforeDate:andAfterDate:
_ttlDescriptionTypeNumberForTravelAdvisoryTimelinessPeriod:
_ttlEventTracker
_unNotificationActionFromCALNNotificationAction:
_unNotificationCategoryFromCALNNotificationCategory:
_unNotificationCategoryOptionsFromCALNNotificationCategoryOptions:
_unNotificationIconFromCALNNotificationContent:
_uninstallEmissionHypothesisRefreshTimer
_uninstallEmissionTimer
_uninstallLocationManager
_uninstallPeriodicRefreshTimer
_uninstallRequestHypothesisRefreshTimer
_uninstallSyncYieldTimer
_unprotectedCalendarNotificationStorage
_unprotectedTriggeredEventNotificationDataStorage
_unregisterAllAgendaEntries
_updateAllIconIdentifiersInStorage:
_updateBlock
_updateDatabaseEncryptionState
_updateEmissionDate:
_updateHandler
_updateNotification:shouldClearHypothesis:
_updateRecord:
_updateSnoozeOptionsForEvents:
_updateSourceClientIdentifiersIfNeeded
_updateStoredNotificationDataForSourceClientIdentifier:sourceNotificationInfo:existingNotificationData:transition:now:
_updateTimeToLeaveRefreshTimerForSourceClientIdentifier:
_updateTimeToLeaveRefreshTimerForSourceClientIdentifier:hypothesis:allowsLocationAlerts:
_updateTravelTimeExceededThresholdStateUsingExceededValue:
_updateWithForceForAlarmTable:
_updateWithHypothesis:
_updatedLastFireTimeOfAlertOffsetFromTravelTimeGivenIsOffsetFromTravelTime:
_updatedNotificationDataResettingTimeToLeaveDisplayState:
_updatedSourceNotificationInfoForContentCreation:
_url
_urlForLocation:address:label:options:
_urlForMapItemHandles:options:
_urlForPersistentStore
_urlHandler
_userActivityUserInfoForEvent:
_userInfo
_userNotificationCenter
_withdrawExpiredNotificationsForSource:
_workQueue
_wrappedNotificationManager
aboutToPostNotification:
absoluteDate
absoluteString
acceptActionIdentifier
acceptEventInvitationResponseWithSourceClientIdentifier:
acceptEventInvitationWithSourceClientIdentifier:
acceptProposedTimeNotificationFromAttendee:
acceptSuggestedEvent:
acknowledgeEventWithSourceClientIdentifier:shouldMarkAsHavingReceivedLocation:
acknowledgeWithEventStore:error:
acknowledged
acknowledgedDate
acquireCachedEventStoreOrCreate:
actionIdentifier
actionWithIdentifier:title:options:icon:
actionWithIdentifier:title:systemImageName:
actionWithIdentifier:title:systemImageName:url:
actionWithIdentifier:title:url:options:icon:
activate
active
activityRun
addAlarmsFiredObserver:selector:
addIconsWithIdentifiers:error:
addNotificationCountChangedObserver:selector:
addNotificationData:withIdentifier:
addNotificationRecord:
addNotificationRecords:
addNotificationRequest:error:
addNotificationRequest:withCompletionHandler:
addNotificationsChangedObserver:selector:
addNotificationsLoadedObserver:selector:
addObject:
addObjectsFromArray:
addObserver:selector:name:
addObserver:selector:name:object:
addPersistentStoreWithType:configuration:URL:options:error:
addRecord:
addRefreshDate:withIdentifier:
addSyntheticRouteHypothesizer:forEventExternalURL:
addTimer:forMode:
addedRecords
adviceBlock
agendaEntryIdentifier
aggressiveDepartureDate
aggressiveTravelTime
alarmEngine
alarmEngineMonitor
alarmIDForSourceClientIdentifier:
alarmName
alarmOccurrencesBetweenStartDate:endDate:inCalendars:completion:
alarmWithExternalID:
alertSetting
alertStyle
alertTopic
alertType
allAlarms
allDay
allDescriptionStringsWithOptions:
allObjects
allValues
allocWithZone:
allowsLocationAlerts
altitude
analyticsHandler
appendString:
applicationState
applyDiff:toNotificationManager:
archivedDataWithRootObject:requiringSecureCoding:error:
array
arrayByAddingObjectsFromArray:
arrayWithCapacity:
arrayWithObject:
arrayWithObjects:count:
attendees
authorizationChangedBlock
authorizationStatus
authorizationStatusAsString:
authorizationStatusForBundle:
authorizationStatusForBundleIdentifier:
authorized
authorizedInternal
automaticGeocodingAllowed
automaticLocationGeocodingAllowed
autorelease
autoupdatingCurrentLocale
badgeSetting
body
bodyDescriptionProvider
bodyForSourceClientIdentifier:sourceNotificationInfo:bodyContainsTravelAdvice:
boolValue
brandedOriginDescriptionStringWithAppName:
build
bundle
bundleIdentifier
cachedIconPathForIconIdentifier:
calendar
calendarAppBadgeUpdater
calendarIdentifier
calendarItem
calendarNotification
calendarNotificationServer
calendarPreferences
calendarStorageWrapper
calendarWithExternalURI:
calendarWithIdentifier:
calendarWithSourceClientIdentifier:inEventStore:
calendarsForEntityType:
callbackQueue
calnNotificationActionsFromUNNotificationActions:
calnNotificationCategoriesFromUNNotificationCategories:
calnNotificationContentFromUNNotificationContent:
calnNotificationFromUNNotification:
calnNotificationRequestFromUNNotificationRequest:
calnNotificationResponseFromUNNotificationResponse:
calnNotificationSoundFromUNNotificationSound:
calnNotificationsFromUNNotifications:
canSendMail
cancel
cancelHypothesisRefreshRequest
cancelHypothesisRefreshRequestForEventWithExternalURL:
cancelHypothesisRequestRefreshBlock
carPlaySetting
categories
categoryIdentifier
categoryIdentifierWithReportJunk
categoryIdentifierWithoutReportJunk
categorySummaryFormat
categoryWithIdentifier:actions:hiddenPreviewsBodyPlaceholder:options:
categoryWithIdentifier:actions:hiddenPreviewsBodyPlaceholder:options:categorySummaryFormat:
categoryWithIdentifier:actions:intentIdentifiers:hiddenPreviewsBodyPlaceholder:categorySummaryFormat:options:
ceaseMonitoringForEventWithExternalURL:
ceaseRouteMonitoringEventForSourceClientIdentifier:
ceaseRouteMonitoringEventWithEventID:
changeType
changesSinceSequenceToken:completion:
characterSetWithCharactersInString:
class
clearCalendarResourceChangedNotificationWithSourceClientIdentifier:
clearCanceledEventNotificationWithSourceClientIdentifier:
clearEventInvitationOfType:withSourceClientIdentifier:inEventStore:withNotificationReferenceProvider:
clearEventInvitationResponseWithSourceClientIdentifier:
clearEventInvitationWithSourceClientIdentifier:
clearSharedCalendarInvitationResponseWithSourceClientIdentifier:
clearSharedCalendarInvitationResponseWithSourceClientIdentifier:inEventStore:
clearSharedCalendarInvitationWithSourceClientIdentifier:
clearSuggestedEventNotificationWithSourceClientIdentifier:
coalescedInfoForSuggestionNotifications:
coalescedSuggestedEventCategoryIdentifier
code
collectSettingsStats:
compare:
compare:options:range:
components:fromDate:
componentsJoinedByString:
componentsSeparatedByString:
conferenceCallAction
conferenceCallActionIdentifier
conferenceURL
conferenceURLForDisplay
conferenceURLUserInfoKey
confirmActionIdentifier
confirmSuggestedEventWithSourceClientIdentifier:
conflictStringForConflictDetails:maxTitleLength:
conformsToProtocol:
conservativeDepartureDate
conservativeTravelTime
constraints
contentForNotificationWithSourceClientIdentifier:
contentForSourceClientIdentifier:sourceNotificationInfo:isProtectedDataAvailable:
coordinate
copy
copyWithZone:
coreLocationManager
coreLocationProvider
couldBeJunk
couldBeJunkCategoryIdentifier
count
countByEnumeratingWithState:objects:count:
createAlarmWithName:atDate:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
createFileAtPath:contents:attributes:
createSentinelFileIfNeeded
createdRouteHypothesizer:forEventExternalURL:
cuik_isTimeSensitive
cuik_shouldShowNotificationWithUnselectedCalendarsForFocus:
currentCADRouteHypothesis
currentHypothesis
currentLocale
currentRouteHypothesizerNotificationType
currentRunLoop
currentTrafficDensity
dataAccessExpressConnection
dataIsAccessible
dataSource
dataSource:travelAdvisoryAuthorizationChanged:
dataSource:travelEngineEventSignificantlyChangedWithSourceClientIdentifier:
dataSource:triggeredWithSourceClientIdentifier:triggerData:
dataSourceEventRepresentationProvider
dataWithContentsOfFile:
databaseID
date
date:representsApproachingDepartureDateForHypothesis:
date:representsLatenessForHypothesis:
dateByAddingDays:inCalendar:
dateByAddingTimeInterval:
dateBySubtractingCalSimulatedOffset
dateChanged
dateProvider
dateTimeStringForEventDate:alwaysIncludeDate:allDayEvent:dateProvider:
dateWithTimeIntervalSince1970:
dateWithTimeIntervalSinceNow:
dateWithTimeIntervalSinceReferenceDate:
deactivate
debugDescription
debugPreferences
declineActionIdentifier
declineEventInvitationResponseWithSourceClientIdentifier:
declineEventInvitationWithSourceClientIdentifier:
declineProposedTimeNotificationFromAttendee:
declineSharedCalendarWithSourceClientIdentifier:
decodeBoolForKey:
decodeIntegerForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
defaultActionURL
defaultCategoryIdentifier
defaultCenter
defaultManager
defaultSuggestedEventCategoryIdentifier
defaultWorkspace
delegate
deleteActionIdentifier
deleteCanceledEventWithSourceClientIdentifier:
deleteCanceledSuggestedEventWithSourceClientIdentifier:
deleteEvent:inEventStore:withSpan:usingRemoteMutator:error:
deleteEvent:withSpan:
deleteObject:
deleteSuggestedEvent:
deliveredNotifications
description
descriptionForTransition:
dictionary
dictionaryRepresentation
dictionaryWithCapacity:
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:count:
dictionaryWithObjectsAndKeys:
didDismissUINotification:forPlannedDestination:dismissalType:
didPostUINotification:
didReceiveResponse:
didRegisterForAlarms
diffOldRecords:withNewRecords:filteredBySourceClientIDs:
diffWithAddedRecords:removedRecords:modifiedRecords:
directionsAction
directionsActionIdentifier
dismissalID
dismissed
displayNameForJunkIdentity:
distanceFromLocation:
distantFuture
doesHypothesisSatisfyMinimumAllowableTravelTime:
doesHypothesisSatisfyMinimumAllowableTravelTime:minimumAllowableTravelTime:
domain
doubleValue
ekTravelEngineHypothesisFromCADRouteHypothesis:
ekTravelEngineHypothesisFromGEORouteHypothesis:
elapsedTimeAsNumber:
emailAddress
emissionBlock
emissionHypothesisRefreshAlarmName
emissionThresholdTimeInterval
emptyDiff
encodeBool:forKey:
encodeInteger:forKey:
encodeObject:forKey:
encodeWithCoder:
entityDate
entityForName:inManagedObjectContext:
entityID
entityTimeZone
entityType
entityURI
entrySignificantlyChangedBlock
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
errorWithDomain:code:userInfo:
estimatedTravelTime
eventDate
eventExternalURL
eventForEventInvitation:inEventStore:
eventForNotificationOfType:withSourceClientIdentifier:inEventStore:withNotificationReferenceProvider:
eventForObjectID:occurrenceDate:checkValid:
eventHasAlarms
eventID:andAlarmID:fromSourceClientIdentifier:
eventIDForSourceClientIdentifier:
eventInvitationNotification
eventNotificationCount
eventNotificationReferences
eventObjectID
eventObjectIDForEventID:
eventOccurrenceID
eventRepresentationDictionary
eventRepresentationDictionaryForInvitationNotification:event:date:endDate:timeZone:
eventRepresentationDictionaryForResourceChangeNotification:message:date:endDate:timeZone:
eventRepresentationDictionaryForResponseNotificationWithTitle:message:
eventRepresentationDictionaryForSharedCalendarInvitationNotificationWithTitle:message:
eventRepresentationDictionaryForUpcomingEvent:date:displayTimeZone:
eventSignificantlyChangedBlock
eventStore
eventStoreProvider
eventTimeZone
eventURI
eventURLToObjectIDMap
eventWithSourceClientIdentifier:inEventStore:
eventsMatchingPredicate:
executeFetchRequest:error:
expirationDate
expirationDateForEventInvitation:
expirationDateForEventWithStartDate:endDate:isAllDay:
expirationDateForNotification:
externalID
externalKey
externalURI
externalURL
fetchCalendarResourceChangedNotificationSourceClientIdentifiers:
fetchCalendarResourceChangedNotificationWithSourceClientIdentifier:
fetchCalendarResourceChangedNotifications
fetchEventCanceledNotificationSourceClientIdentifiers:
fetchEventCanceledNotificationWithSourceClientIdentifier:
fetchEventInvitationNotificationSourceClientIdentifiers:
fetchEventInvitationNotificationWithSourceClientIdentifier:
fetchEventInvitationNotifications
fetchEventInvitationResponseNotificationSourceClientIdentifiers:
fetchEventInvitationResponseNotificationWithSourceClientIdentifier:
fetchEventInvitationResponseNotifications
fetchRecordsWithSourceIdentifier:
fetchSharedCalendarInvitationNotificationSourceClientIdentifiers:
fetchSharedCalendarInvitationNotificationWithSourceClientIdentifier:
fetchSharedCalendarInvitationNotifications
fetchSharedCalendarInvitationResponseNotificationSourceClientIdentifiers:
fetchSharedCalendarInvitationResponseNotificationWithSourceClientIdentifier:
fetchSharedCalendarInvitationResponseNotifications
fetchSuggestedEventNotificationObjectIDs
fetchSuggestedEventNotificationWithObjectID:
fetchSuggestedEventNotifications
fetchSuggestedEventNotificationsWithSourceClientIdentifier:
fetchTriggeredEventNotificationInfoWithSourceClientIdentifier:isProtectedDataAvailable:
fileExistsAtPath:
fileExistsAtPath:isDirectory:
fileURLWithPath:
filterCriteria
filterIdentifierForNotificationContent:
filterIdentifierForNotificationRecord:
fireDate
fireTime
firstObject
focusModeConfigurationChangedName
forceDisplayOfNewTravelAdvisoryHypotheses
forceRemoveAllCachedIconsWithError:
formattedStringForPhoneNumber:
foundInAppsEventTracker
fuzzyMaximumInitialUpdateIntervalBeforeStartDate
geoLocation
geoLocationCoordinates
geoRouteHypothesisTravelStateForString:
geoTrafficDensityForString:
geoTransportTypeAsString:
geoTransportTypeForCalLocationRoutingMode:
geoTransportTypeForString:
geocodedEventEncountered
geocoder
handleConferenceCallActionWithSourceClientIdentifier:
handleDarwinNotification:
handleDirectionsActionWithSourceClientIdentifier:hypothesis:lastFireTimeOfAlertOffsetFromTravelTime:
handleExternalDatabaseChangeNotification:
handleNotificationsChangedNotification:
handleNotificationsLoadedNotification
hasAlarms
hasBeenUnlockedSinceBoot
hasDisplayedLeaveByMessage
hasDisplayedLeaveNowMessage
hasDisplayedRunningLateMessage
hasGeoLocationCoordinates
hasOrganizerThatIsNotCurrentUser
hasPredictedLocation
hasPrefix:
hasProposedStartDate
hasRecurrenceRules
hasSound
hasSuffix:
hasSuggestedLocation
hash
hashTableWithOptions:
hiddenFromNotificationCenter
hiddenPreviewsBodyPlaceholder
hideCalendarFromNotificationCenter:inEventStore:
hideCalendarsFromNotificationCenter:error:
hypothesis
hypothesizer
hypothesizerForPlannedDestination:
hypothesizerProvider
hypothesizerSentAtLeastOneHypothesis
icon
iconAtPath:
iconCache
iconCacheDirectory
iconIdentifier
iconIdentifierForCachedIconPath:
iconIdentifierFromUNNotificationIcon:
iconIdentifierProvider
iconIdentifierVersion
iconProvider
iconVersionToUpgradeTo
iconWithSystemImageName:
identifier
identifierForIconWithDate:inCalendar:
identifierVersionProvider
ignoreActionIdentifier
ignoreSuggestedEventWithSourceClientIdentifier:
imageForImageDescriptor:
imageName
imageWithCGImage:scale:orientation:
inboxNotificationMonitor
inboxNotificationProvider
indexOfObjectPassingTest:
indexesOfObjectsPassingTest:
init
initWithActivityIdentifier:otherCriteria:
initWithAddedRecords:removedRecords:modifiedRecords:
initWithAlarmEngine:notificationCenter:
initWithBundleIdentifier:
initWithBundleIdentifier:userNotificationCenterFactory:storage:notificationIconCache:
initWithCalendarIdentifier:
initWithCapacity:
initWithCoder:
initWithConcurrencyType:
initWithContentsOfURL:
initWithCoordinate:
initWithCoreLocationProvider:
initWithCreationBlock:
initWithDataSource:notificationManager:iconIdentifierProvider:
initWithDataSource:notificationManager:iconIdentifierProvider:dateProvider:
initWithDataSource:notificationManager:iconIdentifierProvider:sourceEventRepresentationProvider:
initWithDataSource:notificationManager:iconIdentifierProvider:sourceEventRepresentationProvider:dateProvider:
initWithDataSource:notificationManager:iconIdentifierProvider:sourceEventRepresentationProvider:triggerHelper:transitionProvider:bodyDescriptionProvider:travelAdvisoryTimelinessAuthority:dateProvider:notificationDataStorage:urlHandler:mapItemURLProvider:timeToLeaveRefreshStorage:snoozeUpdateTimer:
initWithDateComponents:calendar:format:forceNoTextEffects:
initWithDateProvider:
initWithDictionary:
initWithEKOptions:path:changeTrackingClientId:enablePropertyModificationLogging:allowDelegateSources:
initWithEffectiveBundle:delegate:onQueue:
initWithEffectiveBundleIdentifier:delegate:onQueue:
initWithEvent:view:forceLocal:
initWithEventStoreProvider:
initWithEventStoreProvider:inboxNotificationProvider:notificationReferenceProvider:
initWithEventStoreProvider:inboxNotificationProvider:notificationReferenceProvider:dataAccessExpressConnection:preferences:
initWithEventStoreProvider:inboxNotificationProvider:notificationReferenceProvider:dataSourceEventRepresentationProvider:preferences:
initWithEventStoreProvider:inboxNotificationProvider:notificationReferenceProvider:preferences:
initWithEventStoreProvider:inboxNotificationProvider:notificationReferenceProvider:remoteMutator:dataSourceEventRepresentationProvider:
initWithEventStoreProvider:inboxNotificationProvider:notificationReferenceProvider:remoteMutator:dataSourceEventRepresentationProvider:preferences:
initWithEventStoreProvider:remoteMutator:dataSourceEventRepresentationProvider:coreLocationProvider:ttlEventTracker:alarmEngineMonitor:travelEngine:foundInAppsEventTracker:suggestionsServiceLogger:routeHypothesizerProvider:timeToLeaveRefreshMonitor:debugPreferences:mailtoURLProvider:
initWithFireDate:interval:target:selector:userInfo:repeats:
initWithHypothesis:lastFireTimeOfAlertOffsetFromTravelTime:
initWithIconIdentifierVersionProvider:protectedNotificationStorage:iconCache:iconIdentifierProvider:notificationManager:
initWithIconProvider:
initWithIdentifier:actions:hiddenPreviewsBodyPlaceholder:options:categorySummaryFormat:
initWithIdentifier:title:systemImageName:url:
initWithInboxNotificationMonitor:
initWithLocationString:andCompletionBlock:
initWithMailAccounts:
initWithManagedObjectModel:
initWithMapItemHandle:
initWithNotification:actionIdentifier:originIdentifier:targetConnectionEndpoint:
initWithNotificationContentMapper:notificationIconMapper:
initWithNotificationIconCache:
initWithNotificationManager:iconIdentifierProvider:sourceIdentifierSuffix:
initWithNotificationMapper:
initWithNotificationRecord:actionIdentifier:originIdentifier:targetConnectionEndpoint:
initWithNotificationRequest:date:
initWithNotificationRequestMapper:
initWithOptions:eventStoreGetter:
initWithPath:
initWithPath:isProtectedStorage:
initWithRouteHypothesizer:
initWithRouteHypothesizerProvider:
initWithSerializedSequenceString:
initWithSize:scale:
initWithSourceClientIdentifier:calendarNotification:changeType:date:allDay:timeZone:expirationDate:launchURL:isDelegate:sourceTitle:sourceIdentifier:
initWithSourceClientIdentifier:calendarNotification:isDelegate:sourceTitle:sourceIdentifier:
initWithSourceClientIdentifier:launchURL:expirationDate:conflictDetails:eventInvitationNotification:eventRepresentationDictionary:eventURI:isDelegate:sourceTitle:sourceIdentifier:
initWithSourceClientIdentifier:launchURL:expirationDate:eventInvitationNotification:eventRepresentationDictionary:isDelegate:sourceTitle:sourceIdentifier:
initWithSourceClientIdentifier:launchURL:expirationDate:suggestionNotification:
initWithSourceIdentifier:sourceClientIdentifier:
initWithSourceIdentifier:sourceClientIdentifier:content:
initWithSourceIdentifier:sourceClientIdentifier:content:date:shouldPresentAlert:shouldPlaySound:
initWithSourceIdentifier:sourceClientIdentifier:stringRepresentation:
initWithSources:notificationMonitor:notificationManager:
initWithStorage:
initWithStringRepresentation:
initWithSuffix:timedExpirationInterval:leeway:relativeToEnd:validForAllDay:actions:
initWithSuperclassDescription:
initWithTitle:location:date:endDate:timeZone:allDay:tentative:publisherBulletinID:entityID:appLink:proximity:externalID:databaseID:acknowledged:dismissalID:alarmID:isOffsetFromTravelTimeStart:refiring:pseudoEvent:
initWithTitle:location:locationWithoutPrediction:preferredLocation:startDate:endDate:isAllDay:isTimeSensitive:launchURL:isLocationEvent:eventID:eventObjectID:calendarIdentifier:eventRepresentationDictionary:legacyIdentifier:mapItemURL:conferenceURL:mailtoURL:hasSuggestedLocation:eventHasAlarms:alarmID:isOffsetFromTravelTimeStart:lastFireTimeOfAlertOffsetFromTravelTime:allowsLocationAlerts:hypothesis:travelAdvisoryTimelinessPeriod:forceDisplayOfNewTravelAdvisoryHypotheses:
initWithTitle:location:locationWithoutPrediction:startDate:endDate:isAllDay:isTimeSensitive:eventID:eventOccurrenceID:eventObjectID:calendarIdentifier:eventRepresentationDictionary:legacyIdentifier:preferredLocation:conferenceURL:mailtoURL:hasSuggestedLocation:eventHasAlarms:allowsLocationAlerts:forceDisplayOfNewTravelAdvisoryHypotheses:
initWithTransportType:conservativeDepartureDate:conservativeTravelTime:suggestedDepartureDate:estimatedTravelTime:aggressiveDepartureDate:aggressiveTravelTime:routeName:supportsLiveTraffic:currentTrafficDensity:trafficDensityDescription:travelState:
initWithTravelAdvisoryAuthority:dateProvider:
initWithTravelAdvisoryDescriptionGenerator:dateProvider:
initWithTravelAdvisoryTimelinessAuthority:
initWithTravelEngine:
initWithType:objectID:date:eventStore:
initWithType:objectID:eventStore:
initWithUserNotificationCenter:storage:analyticsHandler:deviceLockObserver:
initWithWrappedNotificationManager:predicate:
initWithWrappedStorage:
insertNewAlarm
insertNewObjectForEntityForName:inManagedObjectContext:
insertObject:atIndex:
intValue
integerForKey:
integerValue
interruptionLevel
invalidate
invertedSet
invitationNotificationRepresentationWithNotification:event:date:endDate:timeZone:
invitationStatus
inviteReplyNotificationFromEventStore:
invitedBy
isAbsolute
isActive
isAfterDate:
isAllDay
isBeforeDate:
isBirthday
isCurrentUser
isCurrentUserInvitedAttendee
isDelayedProximityAlarm
isDelegate
isEqual:
isEqualForDiffingPurposesToContent:
isEqualToAction:
isEqualToCategory:
isEqualToContent:
isEqualToData:
isEqualToDate:
isEqualToNotification:
isEqualToNotificationData:
isEqualToNotificationIdentifier:
isEqualToOriginalEvent:
isEqualToRecord:
isEqualToRequest:
isEqualToResponse:
isEqualToString:
isFileURL
isIgnoringEventAlerts
isKindOfClass:
isLastFireTimeOfAlert:withinEightMinutesOfDate:
isLocationManagerStatusAuthorized:
isMemberOfClass:
isOffsetFromTravelTimeStart
isOnSharedCalendar
isPrediction
isProtectedDataAvailable
isPseudoEvent
isPurelyATimeToLeaveAlert
isRegisteredForAlarms
isSubscribed
isSuggestedEventCalendar
isSuggestedLocation
isTravelAdvisorySupported
joinActionIdentifier
joinSharedCalendarWithSourceClientIdentifier:
junkStatus
keysOfEntriesPassingTest:
lastFireTimeOfAlertOffsetFromTravelTime
lastObject
lastPathComponent
lastTimeBulletinAdded
lastTimeNotificationAdded
laterDate:
latestHypothesis
launchURL
launchURLForNotification:inEventStore:
launchURLForOptionalEventID:hypothesis:isTravelLaunchURL:
launchURLForOptionalEventOccurrenceID:
leeway
legacyIdentifier
length
locale
localeIdentifier
localeWithLocaleIdentifier:
localizedStringForKey:value:table:
localizedStringFromDate:dateStyle:timeStyle:
localizedStringWithFormat:
location
locationIsAConferenceRoom
locationManager:didChangeAuthorizationStatus:
locationManager:didDetermineState:forRegion:
locationManager:didExitRegion:
locationManager:didFailRangingBeaconsForConstraint:error:
locationManager:didFailWithError:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didRangeBeacons:inRegion:
locationManager:didRangeBeacons:satisfyingConstraint:
locationManager:didStartMonitoringForRegion:
locationManager:didUpdateHeading:
locationManager:didUpdateLocations:
locationManager:didUpdateToLocation:fromLocation:
locationManager:didVisit:
locationManager:monitoringDidFailForRegion:withError:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManagerDidChangeAuthorization:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManagerShouldDisplayHeadingCalibration:
locationMapKitHandle
locationString
locationStringForLocation:locationWithoutPrediction:preferredLocation:conferenceURL:options:
locationWithoutPrediction
locationsWithoutPrediction
lockScreenSetting
logEventConfirmedNotificationWithUniqueKey:
logEventRejectedNotificationWithUniqueKey:
logEventShowedTimeToLeaveNotificationWithUniqueKey:
mailAccounts
mailOrganizerAction
mailOrganizerActionIdentifier
mailToURLUserInfoKey
mailtoURL
mailtoURLForEvent:
mailtoURLProvider
mainScreen
mapItemURL
mapItemURLForOptionalEventLocation:eventStartDate:hypothesis:
mapItemURLProvider
mapItemURLUserInfoKey
mapKitHandle
markAsHavingReceivedLocation
markAsHavingReceivedLocationWithEffectiveBundleIdentifier:
markResourceChangeAlertedAndSave:error:
maximumAllowableTravelTime
maximumTravelDurationEncountered
maybeActionIdentifier
migrateToStorage:
minimumAllowableTravelTime
month
moveItemAtPath:toPath:error:
mutableCopy
mutableCopyWithZone:
name
needsAlert
nextAlarmFireTime
nextEmissionDate
notification
notificationCategories
notificationCenter
notificationCenterSetting
notificationContentMapper
notificationCount
notificationData
notificationDataFromPersistentStorageWithPath:error:
notificationDataMap
notificationDataStorage
notificationExpirationDateForEventID:alarmID:
notificationFromNotificationRecord:
notificationIconCache
notificationIconMapper
notificationManager
notificationMapper
notificationMonitor
notificationRecord
notificationRecordFromNotificationRequest:
notificationRecords
notificationRecordsFromNotifications:
notificationRecordsFromPersistentNotificationStorageWithPath:error:
notificationReferenceForObjectID:withType:date:inEventStore:
notificationReferenceForObjectID:withType:inEventStore:
notificationReferenceOfType:withSourceClientIdentifier:inEventStore:withNotificationReferenceProvider:
notificationReferenceProvider
notificationReferences
notificationRequestFromNotificationRecord:
notificationRequestMapper
notificationResponseDataForPayload:
notificationResponseMapper
notificationSettings
notificationSettingsForTopics
notificationSourceForSourceIdentifier:
notificationSourceMap
notificationSourceRefresher
notificationSources
notificationWithRequest:date:
notifyDelegateOfDueAlarmsAndRescheduleTimer
numberWithDouble:
numberWithInt:
numberWithInteger:
numberWithUnsignedInt:
numberWithUnsignedInteger:
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
objectID
objectIDWithEntityType:rowID:databaseID:
objectIDWithSourceClientIdentifier:
objectIDWithURL:
objectsAtIndexes:
openURL:configuration:completionHandler:
openURL:response:
organizer
organizerContactDictionary
organizerEmailAddress
origin
originAppName
originIdentifier
originalEvent
originalEventInternal
overriddenTravelAdvisoryHypothesisAggressiveTravelTime
overriddenTravelAdvisoryHypothesisConservativeTravelTime
overriddenTravelAdvisoryHypothesisCurrentTrafficDensity
overriddenTravelAdvisoryHypothesisEstimatedTravelTime
overriddenTravelAdvisoryHypothesisRouteName
overriddenTravelAdvisoryHypothesisSupportsLiveTraffic
overriddenTravelAdvisoryHypothesisTransportType
overriddenTravelAdvisoryHypothesisTravelState
overrideTravelAdvisoryHypothesis
owner
ownerDate
ownerTimeZone
ownerURI
participationStatus
path
pathExtension
pathForCachedIconWithIdentifier:
pathForResource:ofType:
payloadForNotificationResponseData:
peopleIdentifiers
performAgendaEntryEqualityChecksInTravelEngine
performBlockAndWait:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
period
periodForHypothesis:
persistentDomainForName:
persistentNotificationStorageWithPath:isProtectedStorage:
persistentStorageWithPath:
persistentStorageWithPath:isProtectedStorage:
persistentStoreCoordinator
persistentStores
phoneNumber
placemark
pngDataForIconWithIdentifier:
postFakeNotification
postNotificationName:object:
postNotificationName:object:userInfo:
postNotificationName:object:userInfo:deliverImmediately:
preciseLocationAuthorizedForBundle:
preciseLocationAuthorizedForBundleIdentifier:
predicate
predicateForEventsCreatedFromSuggestionWithExtractionGroupIdentifier:
predicateWithFormat:
preferences
preferredLocation
preferredLocationWithoutPrediction
preventMarkingTravelAdvisoryEntriesAsDismissed
proposedStartDate
protectedStorage
proximity
publicObjectWithObjectID:
publisherBulletinID
queue
receivedAlarmNamed:
receivedNotificationNamed:
recordDisplayOfInitialTimeToLeaveAlertForSourceClientIdentifier:event:hypothesis:travelAdvisoryTimelinessPeriod:foundInAppsEventTracker:suggestionsServiceLogger:ttlEventTracker:
recordID
recordMap
recordNotificationResponse:
recordPostedNotification:
recordRecentForContactWithName:emailAddress:phoneNumber:
recurrenceChanged
refiring
refreshDateMap
refreshDateWithIdentifier:
refreshDates
refreshEventStoreInResponseToDatabaseChangeNotification:
refreshNotificationManager:withNotificationRecords:forSourceWithIdentifier:filteredBySourceClientIDs:
refreshNotifications
refreshNotifications:
registeredForAlarms
relativeOffset
remoteMutator
removeAlarmWithName:
removeAlarmsFiredObserver:
removeAllNotificationRecords
removeAllObjects
removeAllPendingNotificationRequests
removeCharactersInString:
removeDeliveredNotificationsWithIdentifiers:
removeEvent:span:error:
removeInviteReplyNotification:error:
removeItemAtPath:error:
removeNotificationCountChangedObserver:selector:
removeNotificationData
removeNotificationDataWithIdentifier:
removeNotificationRecordsPassingTest:
removeNotificationsChangedObserver:
removeNotificationsLoadedObserver:selector:
removeObjectForKey:
removeObjectsForKeys:
removeObserver:name:object:
removeRecordWithSourceIdentifier:sourceClientIdentifier:
removeRefreshDateWithIdentifier:
removeRefreshDates
removeRefreshTimerForEventExternalURL:
removeSyntheticRouteHypothesizerForEventExternalURL:
removeTimeToLeaveRefreshTimerForEventID:
removeTimeToLeaveRefreshTimerForSourceClientIdentifier:
removedRecords
removedRouteHypothesizerForEventExternalURL:
replaceContentForRequestWithIdentifier:replacementContent:completionHandler:
replaceContentForRequestWithIdentifier:replacementContent:error:
replaceNotificationRequest:error:
reportEventInvitationAsJunkWithSourceClientIdentifier:
reportJunkActionIdentifier
reportSharedCalendarAsJunkWithSourceClientIdentifier:
reportSharedCalendarInvitationAsJunkWithSourceClientIdentifier:inEventStore:
reportSharedCalendarInviteAsJunkForCalendarWithID:accountID:queue:completionBlock:
requestHypothesisRefreshAlarmName
requestHypothesisRefreshAtDate:forEventWithExternalURL:
requestHypothesisRefreshBlock
requestRefresh
requestRefreshTimeInterval
requestWithIdentifier:content:
requestWithIdentifier:content:trigger:
requestedDarwinNotifications
reset
resetTimeToLeaveDisplayState
resourceChangeFromEventStore:
resourceChangeNotificationWithNotification:message:date:endDate:timeZone:
respondToSharedCalendarInvitationWithSourceClientIdentifier:inEventStore:withDataAccessExpressConnection:accept:
respondToSharedCalendarInvite:forCalendarWithID:accountID:queue:completionBlock:
respondsToSelector:
responseMustApplyToAll
responseNotificationWithTitle:message:
responseWithNotification:actionIdentifier:originIdentifier:targetConnectionEndpoint:
responseWithNotificationRecord:actionIdentifier:originIdentifier:targetConnectionEndpoint:
retain
retainCount
rootDirectory
routeHypothesizer
routeHypothesizerProvider
routeName
rowID
save:
saveEvent:span:error:
saveGeocodedLocationsInTravelEngine
scale
scanForConflicts
scheduleWithTimeInterval:gracePeriod:
scheme
sectionIdentifier
self
sendFeedbackForAddedLeaveNowNotificationWithSourceClientIdentifier:
sendFeedbackForAddedTravelAdvisoryNotificationWithSourceClientIdentifier:hypothesis:travelAdvisoryTimelinessPeriod:
sendFeedbackForPostingLeaveByNotification
sendFeedbackForPostingLeaveByNotificationForEventWithExternalURL:
sendFeedbackForPostingLeaveNowNotification
sendFeedbackForPostingLeaveNowNotificationForEventWithExternalURL:
sendFeedbackForPostingNotificationWithTravelAdvisoryTimelinessPeriod:sourceClientIdentifier:travelEngine:
sequenceToken
serializedSequenceString
setAcknowledgedDate:
setActive:
setAgendaEntryIdentifier:
setAlarmID:
setAlertTopic:
setAuthorizationChangedBlock:
setAuthorizedInternal:
setAutomaticGeocodingAllowed:
setBadgeValue:
setBody:
setCalendar:
setCallbackNotificationQueue:
setCallbackQueue:
setCancelHypothesisRequestRefreshBlock:
setCategoryIdentifier:
setContent:
setCreationBlock:
setCurrentCADRouteHypothesis:
setCurrentRouteHypothesizerNotificationType:
setCurrentTrafficDensity:
setDatabaseID:
setDate:
setDateFormat:
setDateStyle:
setDefaultActionURL:
setDelegate:
setDismissed:
setDoesRelativeDateFormatting:
setEmissionBlock:
setEndDate:
setEntity:
setEntityDate:
setEntityID:
setEntityTimeZone:
setEntityURI:
setEntrySignificantlyChangedBlock:
setEventExternalURL:
setEventRepresentationDictionary:onNotificationContent:
setEventSignificantlyChangedBlock:
setExpirationDate:
setExternalID:
setFetchLimit:
setFilterCriteria:
setFilterIdentifier:onNotificationContent:
setFilterIdentifierForEKCalendarNotification:onNotificationContent:
setFireDate:
setFireDate:leeway:forEventWithIdentifier:
setFireTime:
setFrontBoardOptions:
setGeoLocationCoordinates:
setGeocodedEventEncountered:
setGeocoder:
setHasDisplayedLeaveByMessage:
setHasDisplayedRunningLateMessage:
setHasGeoLocationCoordinates:
setHasOrganizerThatIsNotCurrentUser:
setHasPredictedLocation:
setHypothesis:
setHypothesizer:
setHypothesizerSentAtLeastOneHypothesis:
setIcon:
setIconIdentifier:
setIconIdentifierVersion:
setIncludesPendingChanges:
setInteger:forKey:
setInterruptionLevel:
setInvitationStatus:
setInvitationStatus:forEvent:error:
setIsJunk:
setIsJunk:shouldSave:
setIsOnSharedCalendar:
setIsProtectedDataAvailable:
setIsSuggestedLocation:
setKey:withDate:
setKey:withPointerAddress:
setKey:withString:
setLastFireTimeOfAlertOffsetFromTravelTime:
setLastTimeBulletinAdded:
setLastTimeNotificationAdded:
setLatestHypothesis:
setLegacyIdentifier:onNotificationContent:
setLegacyIdentifierForCalendarNotification:onNotificationContent:
setLocale:
setLocationAddress:
setLocationIsAConferenceRoom:
setLocationMapKitHandle:
setLocationString:
setLocationStringWithoutPrediction:
setMapKitHandle:
setMaximumTravelDurationEncountered:
setMonth:
setNextEmissionDate:
setNotificationCategories:
setNotificationSourceMap:
setNotificationSources:
setObject:forKey:
setObject:forKeyedSubscript:
setOrganizerEmailAddress:
setOrganizerForContactDictionary:
setOriginalEventInternal:
setParticipantStatus:span:event:
setParticipationStatus:
setPeopleIdentifiers:
setPersistentStoreCoordinator:
setPredicate:
setPurgingAllowed:
setRegisteredForAlarms:
setRequestHypothesisRefreshBlock:
setRouteName:
setRunning:
setSectionIdentifier:
setSensitive:
setSetting:forKey:
setShouldApplyMask:
setShouldBackgroundDefaultAction:
setShouldHideTime:
setShouldPlaySound:
setShouldPresentAlert:
setShouldSuppressSyncDismissalWhenRemoved:
setSnoozeTimeInterval:alarm:calendarItem:
setSortDescriptors:
setSound:
setSourceClientIdentifier:
setSourceIdentifier:
setStartDate:
setStartLocationRouting:
setStorage:
setSubtitle:
setSummaryArgument:
setSummaryArgumentCount:
setSupportsLiveTraffic:
setTargetConnectionEndpoint:
setThreadIdentifier:
setThrottle:
setThrottleIdentifier:
setThrottleQueue:
setTimeStyle:
setTimeZone:
setTimeout:
setTitle:
setTopicIdentifiers:
setTransportType:
setTransportTypeOverride:
setTravelTimeThresholdExceededState:
setUpRefreshTimerWithTriggerDate:eventExternalURL:
setUpTimeToLeaveRefreshTimerWithTriggerDate:eventID:
setUpTimeToLeaveRefreshTimerWithTriggerDate:sourceClientIdentifier:
setUpdateHandler:
setUserActivityUserInfo:
setUserInfo:
setUserInfoValue:forKey:
setValue:forKey:
setWantsNotificationResponsesDelivered
setWeekday:
setWithArray:
setWorkQueue:
setWrappedStorage:
settingForKey:
shared
sharedCalendarNotificationsDisabled
sharedConnection
sharedInstance
sharedOwnerEmail
sharedOwnerPhoneNumber
sharingStatus
shouldBehaveAsRestart
shouldBypassTravelEngineThrottle
shouldHideTime
shouldIgnoreNotificationForEvent:
shouldIncludeTravelAdvisoryDescription:
shouldPresentAlert
shouldRemoveNotificationMetaDataWithEventID:
shouldRemoveTimeToLeaveRefreshTimerWithRefreshDate:eventID:
shouldSuppressSyncDismissalWhenRemoved
shouldTriggerForSourceClientIdentifier:trigger:sourceNotificationInfo:oldNotificationData:
shouldWithdrawNotificationWithSourceClientIdentifier:
showPreviewsSetting
sideTableContext
significantTimeChange
snoozeAction
snoozeActionIdentifier
snoozeAlarm:untilTargetDate:
snoozeAlarm:withTimeIntervalFromNow:
snoozeCategories
snoozeCategoryForEventWithStartDate:endDate:now:isAllDay:
snoozeEventWithSourceClientIdentifier:snoozeType:
snoozeFor15MinutesAction
snoozeFor1HourAction
snoozeFor30MinutesAction
snoozeFor5MinutesAction
snoozeInterval
snoozeTimerFiredForEvents:
snoozeUntil15MinutesBeforeAction
snoozeUntil30MinutesBeforeAction
snoozeUntilEndTimeAction
snoozeUntilStartTimeAction
snoozeUpdateTimer
sortDescriptorWithKey:ascending:
sortUsingSelector:
sound
soundSetting
soundWithAlertType:
soundWithAlertType:alertTopic:
source
sourceClientIdentifier
sourceClientIdentifier:matchesEventForSourceClientIdentifier:
sourceClientIdentifierForEventID:alarmID:
sourceClientIdentifierForNotification:
sourceEventRepresentationProvider
sourceIdentifier
sourceTitle
standardUserDefaults
start
startAccessingSecurityScopedResource
startDate
startDateForNextOccurrence
startGeocoding
startHypothesizingWithUpdateHandler:
startLocationRouting
startOfLeaveNowPeriod
startOfLeaveNowPeriodForHypothesis:
startOfRunningLatePeriod
startOfRunningLatePeriodForHypothesis:
state
stateChangedNotificationName
status
statusesAreAccurate
stop
stopAccessingSecurityScopedResource
stopHypothesizing
string
stringByAddingPercentEncodingWithAllowedCharacters:
stringByAppendingString:
stringByDeletingLastPathComponent
stringByDeletingPathExtension
stringByReplacingCharactersInSet:withString:
stringByReplacingOccurrencesOfString:withString:
stringByTrimmingCharactersInSet:
stringRepresentation
stringValue
stringWithFormat:
stringWithUTF8String:
structuredLocation
substringFromIndex:
subtitle
suffix
suggestedDepartureDate
suggestedEvent
suggestedEventCanceledCategoryIdentifier
suggestionInfo
suggestionNotification
suggestionsServiceLogger
summaryArgumentCount
superclass
supportsAlarmAcknowledgedDate
supportsLiveTraffic
supportsSecureCoding
synchronize
syntheticHypothesisWithStartDate:conservativeTravelTime:estimatedTravelTime:aggressiveTravelTime:
syntheticTravelAdvisoriesEnabled
targetConnectionEndpoint
tearDown
tentative
tentativeAcceptEventInvitationWithSourceClientIdentifier:
threadIdentifier
throttle
throttleIdentifier
throttleQueue
timeChanged
timeIntervalSinceDate:
timeIntervalSinceNow
timeIntervalSinceReferenceDate
timeSensitiveSetting
timeToLeaveRefreshDataFromPersistentStorageWithPath:error:
timeToLeaveRefreshMonitor
timeToLeaveRefreshStorage
timeZone
timeZoneWithName:
title
titleChanged
topicIdentifiers
trackDirectionsEngagedForNotificationUsingTTLEventTracker:hypothesis:hasSuggestedLocation:isOnSharedCalendar:
trackDirectionsEngagedForTTLAlertWithTransportType:etaType:hasSuggestedLocation:isOnSharedCalendar:
trackEmailEngagedForNotificationUsingTTLEventTracker:hypothesis:hasSuggestedLocation:isOnSharedCalendar:
trackEmailEngagedForTTLAlertWithTransportType:etaType:hasSuggestedLocation:isOnSharedCalendar:
trackEventFiredTTLAlertWithAlertType:transportType:etaType:travelState:hasSuggestedLocation:isOnSharedCalendar:
trackPseudoEventInitialTimeToLeaveFired
trackTTLCandidateEventHasSuggestedLocation:isOnSharedCalendar:
trafficDensityDescription
transitionForSourceClientIdentifier:sourceNotificationInfo:oldNotificationData:trigger:
transitionProvider
transportType
transportTypeOverride
travelAdvisoryAuthority
travelAdvisoryDescriptionGenerator
travelAdvisoryDescriptionOfType:hypothesis:location:
travelAdvisoryTimelinessAuthority
travelAdvisoryTimelinessPeriod
travelEligibleEvents:fromStartDate:untilEndDate:
travelEligibleEventsInCalendars:startDate:endDate:
travelEligibleEventsInEventStore:
travelEngine
travelEngine:authorizationChanged:
travelEngine:eventSignificantlyChangedWithEventExternalURL:
travelEngine:receivedHypothesis:eventExternalURL:
travelStartLocation
travelState
travelStateIndicatesTravelingTowardDestination:
travelTime
travelTimeThresholdExceededState
triggerHelper
triggerType
triggeredEventNotificationSource
ttlEventTrackerAlertTypeForDate:hypothesis:
ttlEventTrackerAlertTypeForTravelAdvisoryTimelinessPeriod:
ttlEventTrackerETATypeForHypothesis:
ttlEventTrackerTransportTypeForGEOTransportType:
ttlEventTrackerTravelStateForHypothesisTravelState:
type
unNotificationActionsFromCALNNotificationActions:
unNotificationCategoriesFromCALNNotificationCategories:
unNotificationContentFromCALNNotificationContent:
unNotificationIconFromIconIdentifier:
unNotificationPresentationOptionsFromCALNNotificationPresentationOptions:
unNotificationRequestFromCALNNotificationRequest:
unNotificationSoundFromCALNNotificationSound:
unarchivedObjectOfClass:fromData:error:
unarchivedObjectOfClasses:fromData:error:
uniqueIdentifier
uniqueKey
unschedule
unselectedCalendarIdentifiersForFocusMode
unselectedCalendarsForFocusModeInEventStore:
unsignedIntegerValue
upcomingEventNotificationRepresentationWithEvent:date:displayTimeZone:
updateBlock
updateEventRepresentation:forEvent:
updateEventRepresentationDictionary:withHypothesisMessage:
updateHandler
updateHypothesizerIfNecessaryWithOriginalEvent:
updatePredictedDepartureDate:
updateRecord:
updateSnoozeOptionsForPostedNotifications
updateSubtitleAndThreadIdentifierOnNotificationContent:forDelegateSourceWithTitle:identifier:
updateUpcomingEventNotificationWithHypothesisMessage:
updateWithGeocodedMapItemAndSaveWithCommit:eventStore:error:
updateWithHypothesis:
urlHandler
urlWithAllowedScheme
userInfo
userNotificationCenter
userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:
userNotificationCenter:openSettingsForNotification:
userNotificationCenter:willPresentNotification:withCompletionHandler:
userNotificationCenterWithBundleIdentifier:
valueForKey:
videoConferenceChanged
virtualConference
whitespaceCharacterSet
willPostNotification:
workQueue
wrappedNotificationManager
wrappedStorage
writeToFile:options:error:
zone
v16@0:8
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8@16d24@32
v24@0:8@16
v40@0:8@"NSDate"16d24@"NSString"32
@"<CALNSnoozeUpdateTimerDelegate>"16@0:8
v24@0:8@"<CALNSnoozeUpdateTimerDelegate>"16
@32@0:8@16@24
@24@0:8@16
@"<CalDateProvider>"
@"<CALNActivityScheduler>"
@"NSDate"
@"NSMutableDictionary"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"<CALNSnoozeUpdateTimerDelegate>"
@"NSData"24@0:8@"NSString"16
@"NSString"32@0:8@"NSDate"16@"NSCalendar"24
@"<CalIconProvider>"16@0:8
v72@0:8@16@24@32Q40@48@56@64
v40@0:8Q16@24@32
@40@0:8@16@24^B32
@40@0:8@16@24@32
@"NSArray"
v24@0:8@?16
@"NSArray"16@0:8
v24@0:8@"CALNNotificationRecord"16
v24@0:8@"NSArray"16
v24@0:8@?<B@?@"CALNNotificationRecord">16
@"<CALNNotificationStorage>"
q16@0:8
v24@0:8q16
v32@0:8@16@24
v48@0:8@16@24@32@40
@76@0:8@16@24@32@40@48B56@60@68
@"NSString"
@"NSURL"
@"EKCalendarEventInvitationNotification"
@"NSDictionary"
v24@0:8@"CALNNotificationRecordResponse"16
v24@0:8@"NSSet"16
@"CALNNotificationContent"24@0:8@"NSString"16
@48@0:8@16@24@32@40
@"<CALNSharedCalendarInvitationResponseNotificationDataSource>"
@"<CALNNotificationManager>"
@"<CALNCalendarIconIdentifierProvider>"
@"<CALNSourceEventRepresentationProvider>"
Q32@0:8@16@24
Q20@0:8i16
Q24@0:8@16
Q24@0:8q16
@24@0:8Q16
v40@0:8@16@24B32B36
@48@0:8@16@24@32Q40
@56@0:8@16@24@32Q40@48
@24@0:8^{_NSZone=}16
@92@0:8@16@24@32@40@48@56@64B72@76@84
@"EKConflictDetails"
@40@0:8@16^@24^@32
@"<CALNEventInvitationNotificationDataSource>"
@"NSArray"24@0:8@"NSString"16
v32@0:8@"NSString"16@"NSString"24
@32@0:8@16@?24
@?16@0:8
B32@0:8@16@24
v32@0:8q16q24
@"<CALNActivitySchedulerDelegate>"16@0:8
v24@0:8@"<CALNActivitySchedulerDelegate>"16
@"NSObject<OS_xpc_object>"
@"<CALNActivitySchedulerDelegate>"
B24@0:8q16
d16@0:8
B24@0:8@"EKTravelEngineHypothesis"16
v40@0:8@16@24@32
v28@0:8@16B24
v40@0:8@"<CALNTravelEngine>"16@"EKTravelEngineHypothesis"24@"NSString"32
v32@0:8@"<CALNTravelEngine>"16@"NSString"24
v28@0:8@"<CALNTravelEngine>"16B24
v32@0:8@"<CALNTimeToLeaveRefreshMonitor>"16@"NSString"24
@28@0:8@16B24
v32@0:8@16Q24
v40@0:8@16@24Q32
v40@0:8Q16@24Q32
@"CALNTriggeredEventNotificationInfo"28@0:8@"NSString"16B24
B24@0:8@"NSString"16
B32@0:8@"NSDate"16@"NSString"24
@"NSDate"32@0:8@"NSString"16@"NSString"24
v28@0:8@"NSString"16B24
v32@0:8@"NSString"16Q24
v40@0:8@"NSString"16@"EKTravelEngineHypothesis"24@"NSDate"32
v24@0:8@"NSString"16
v32@0:8@"NSString"16@"EKTravelEngineHypothesis"24
@"NSString"24@0:8@"NSURL"16
v32@0:8@"NSDate"16@"NSString"24
v40@0:8@"NSString"16@"EKTravelEngineHypothesis"24Q32
v40@0:8Q16@"GEOPlannedDestination"24Q32
@"<CALNTriggeredEventNotificationDataSourceDelegate>"16@0:8
v24@0:8@"<CALNTriggeredEventNotificationDataSourceDelegate>"16
@120@0:8@16@24@32@40@48@56@64@72@80@88@96@104@112
B40@0:8@16@24@32
v36@0:8@16B24@?28
@"<CALNTriggeredEventNotificationDataSourceDelegate>"
@"<EKEventStoreProvider>"
@"<CALNRemoteMutator>"
@"<CALNDataSourceEventRepresentationProvider>"
@"CALNCalendarCoreLocationManager"
@"<CALNTTLEventTracker>"
@"<CALNAlarmEngineMonitor>"
@"<CALNTravelEngine>"
@"<CALNFoundInAppsEventTracker>"
@"<CALNSuggestionsServiceLogger>"
@"<CALNRouteHypothesizerProvider>"
@"<CALNTimeToLeaveRefreshMonitor>"
@"<CALNDebugPreferences>"
@"CALNTriggeredEventNotificationMailtoURLProvider"
@"CADRouteHypothesis"16@0:8
v24@0:8@"CADRouteHypothesis"16
@?<v@?>16@0:8
v24@0:8Q16
v24@0:8@?<v@?>16
@"EKTravelEngineHypothesis"16@0:8
@"CADRouteHypothesis"
@200@0:8@16@24@32@40@48@56B64B68@72B80@84@92@100@108@116@124@132@140B148B152@156B164@168B176@180Q188B196
@"EKStructuredLocation"
@"EKTravelEngineHypothesis"
@"<CALNSharedCalendarInvitationNotificationDataSource>"
B32@0:8@16^@24
B40@0:8@16@24^@32
@"NSSet"16@0:8
B32@0:8@"UNNotificationRequest"16^@24
B40@0:8@"NSString"16@"UNNotificationContent"24^@32
@"UNNotificationSettings"16@0:8
@"NSDictionary"16@0:8
@"<UNUserNotificationCenterDelegate>"16@0:8
v24@0:8@"<UNUserNotificationCenterDelegate>"16
@"UNUserNotificationCenter"
@"NSObject<OS_dispatch_queue>"
@"NSArray<CALNNotificationSource>"
@"CALNInboxNotificationMonitor"
@"CALNNotificationRecord"
@"BSServiceConnectionEndpoint"
v40@0:8@16@24@?32
v40@0:8@"<CALNUserNotificationCenter>"16@"CALNNotification"24@?<v@?Q>32
v40@0:8@"<CALNUserNotificationCenter>"16@"CALNNotificationResponse"24@?<v@?>32
v20@0:8B16
@"<CALNUserNotificationCenter>"
@"<CALNAnalyticsHandler>"
@"CALNUNNotificationMapper"
@"EKCalendarSuggestionNotification"
v56@0:8Q16Q24Q32Q40B48B52
v40@0:8Q16Q24B32B36
@"CALNUNNotificationRequestMapper"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"CALNNotificationContent"
@56@0:8@16@24@32@40B48B52
@40@0:8@16B24B28@32
@"GEORouteHypothesizer"
v40@0:8@"UNUserNotificationCenter"16@"UNNotification"24@?<v@?Q>32
v40@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24@?<v@?>32
v32@0:8@"UNUserNotificationCenter"16@"UNNotification"24
B32@0:8@"CALNNotificationRequest"16^@24
v24@0:8@"NSMutableDictionary"16
@"<CALNUserNotificationCenterDelegate>"16@0:8
v24@0:8@"<CALNUserNotificationCenterDelegate>"16
@"<CALNUserNotificationCenterDelegate>"
@"<CALNUNUserNotificationCenterProtocol>"
@"CALNUNNotificationContentMapper"
@"CALNUNNotificationResponseMapper"
@160@0:8@16@24@32@40@48@56@64@72@80B88B92@96@104@112@120@128Q136Q144@152
@"CALNNotificationSound"
i24@0:8@16
i24@0:8@"NSString"16
i24@0:8@"NSBundle"16
B24@0:8@"NSBundle"16
@"NSArray"24@0:8@"NSSet"16
@"CALNEventCanceledNotificationInfo"24@0:8@"NSString"16
@56@0:8@16@24@32@40@48
@"<CALNInboxNotificationProvider>"
@"<CALNEKCalendarNotificationReferenceProvider>"
@32@0:8@16^@24
B24@0:8^@16
@"CALNInMemoryNotificationStorage"
@"<CALNMailAccounts>"
@"CALNNotificationRequest"
@"<CALNEventCanceledNotificationDataSource>"
@"<CALNRouteHypothesizer>"24@0:8@"GEOPlannedDestination"16
v32@0:8@"<CALNRouteHypothesizer>"16@"NSString"24
@"CADSyntheticRouteHypothesizerCache"
@"<CALNIconIdentifierVersionProvider>"
@"<CALNIconCache>"
@"CALNNotification"
@"NSString"24@0:8@"NSString"16
B32@0:8@"NSArray"16^@24
B32@0:8@"NSString"16^@24
@"<CalIconProvider>"
@44@0:8Q16@24B32@36
@"<CALNTimeToLeaveRefreshMonitorDelegate>"16@0:8
v24@0:8@"<CALNTimeToLeaveRefreshMonitorDelegate>"16
@"<CALNTimeToLeaveRefreshMonitorDelegate>"
@"<CALNTimeToLeaveRefreshStorage>"
v32@0:8@16:24
@"NSNotificationCenter"
@"_EKAlarmEngine"
@"CALNTriggeredEventNotificationData"24@0:8@"NSString"16
v32@0:8@"CALNTriggeredEventNotificationData"16@"NSString"24
v40@0:8d16@24@32
v40@0:8q16q24@32
B32@0:8@16q24
v40@0:8d16@"EKAlarm"24@"EKCalendarItem"32
v40@0:8q16q24@"EKEvent"32
B32@0:8@"EKEvent"16q24
v56@0:8q16@24@32@40@?48
v48@0:8@16@24@32@?40
v56@0:8q16@"NSString"24@"NSString"32@"NSObject<OS_dispatch_queue>"40@?<v@?@"NSString"@"NSString"@"NSError">48
v48@0:8@"NSString"16@"NSString"24@"NSObject<OS_dispatch_queue>"32@?<v@?@"NSString"@"NSString"@"NSError">40
B48@0:8@16^@24^@32^q40
@92@0:8@16@24I32@36B44@48@56@64B72@76@84
I16@0:8
@"EKCalendarResourceChangeNotification"
@"NSTimeZone"
@"_EKNotificationMonitor"
@"<CALNCoreLocationProvider>"
Q24@0:8@"EKTravelEngineHypothesis"16
@"NSDate"24@0:8@"EKTravelEngineHypothesis"16
@"EKTravelAdvisoryTimelinessAuthority"
@"<CALNSuggestedEventNotificationDataSource>"
B56@0:8@16@24q32@40^@48
@36@0:8@16@24B32
@20@0:8i16
@24@0:8q16
@"NSURL"40@0:8@"EKStructuredLocation"16@"NSDate"24@"EKTravelEngineHypothesis"32
Q48@0:8@16@24@32Q40
Q48@0:8@"NSString"16@"CALNTriggeredEventNotificationSourceNotificationInfo"24@"CALNTriggeredEventNotificationData"32Q40
Q40@0:8@16@24@32
@"<CALNTravelAdvisoryAuthority>"
@"NSDictionary"40@0:8@"EKEvent"16@"NSDate"24@"NSTimeZone"32
@"NSDictionary"56@0:8@"EKCalendarEventInvitationNotification"16@"EKEvent"24@"NSDate"32@"NSDate"40@"NSTimeZone"48
@"NSDictionary"32@0:8@"NSString"16@"NSString"24
@"NSDictionary"56@0:8@"EKCalendarResourceChangeNotification"16@"NSString"24@"NSDate"32@"NSDate"40@"NSTimeZone"48
@"NSDictionary"32@0:8@"NSDictionary"16@"NSString"24
v40@0:8@16q24@32
v28@0:8@16i24
v40@0:8@"CLLocationManager"16@"CLLocation"24@"CLLocation"32
v32@0:8@"CLLocationManager"16@"NSArray"24
v32@0:8@"CLLocationManager"16@"CLHeading"24
B24@0:8@"CLLocationManager"16
v40@0:8@"CLLocationManager"16q24@"CLRegion"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconRegion"32
v40@0:8@"CLLocationManager"16@"CLBeaconRegion"24@"NSError"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconIdentityConstraint"32
v40@0:8@"CLLocationManager"16@"CLBeaconIdentityConstraint"24@"NSError"32
v32@0:8@"CLLocationManager"16@"CLRegion"24
v32@0:8@"CLLocationManager"16@"NSError"24
v40@0:8@"CLLocationManager"16@"CLRegion"24@"NSError"32
v28@0:8@"CLLocationManager"16i24
v24@0:8@"CLLocationManager"16
v32@0:8@"CLLocationManager"16@"CLVisit"24
B20@0:8i16
v32@0:8@16@?24
@"NSObject<OS_dispatch_source>"
@"CLLocationManager"
@"EKTimedEventStorePurger"
@"CALNSuggestedEventNotificationInfo"24@0:8@"NSString"16
Q24@0:8Q16
v32@0:8@"NSURL"16@"CALNNotificationRecordResponse"24
@"CALNUNNotificationIconMapper"
v40@0:8@"<CALNTriggeredEventNotificationDataSource>"16@"NSString"24@"CALNTriggeredEventNotificationTriggerData"32
v28@0:8@"<CALNTriggeredEventNotificationDataSource>"16B24
v32@0:8@"<CALNTriggeredEventNotificationDataSource>"16@"NSString"24
@128@0:8@16@24@32@40@48@56@64@72@80@88@96@104@112@120
v36@0:8@16@24B32
@32@0:8@16B24B28
@60@0:8@16@24@32@40B48B52B56
v64@0:8@16@24@32Q40Q48@56
@48@0:8@16@24Q32@40
v56@0:8@16@24@32Q40@48
B28@0:8B16B20B24
B24@0:8Q16
@20@0:8B16
@"<CALNTriggeredEventNotificationDataSource>"
@"<CALNTriggeredEventNotificationTriggerHelper>"
@"<CALNTriggeredEventNotificationTransitionProvider>"
@"<CALNTriggeredEventNotificationBodyDescriptionProvider>"
@"<CALNTravelAdvisoryTimelinessAuthority>"
@"<CALNTriggeredEventNotificationDataStorage>"
@"<CALNSnoozeUpdateTimer>"
@"<CALNURLHandler>"
@"<CALNTriggeredEventNotificationMapItemURLProvider>"
@"CADSequenceToken"
@"NSTimer"
@"NSDateFormatter"
@"RTRoutineManager"
@40@0:8Q16@24@32
@"NSString"40@0:8Q16@"EKTravelEngineHypothesis"24@"NSString"32
@"NSDate"24@0:8@"NSString"16
q24@0:8@16
@"CALNEventInvitationNotificationInfo"24@0:8@"NSString"16
@64@0:8@16@24@32@40@48@56
v32@0:8q16@24
@"<EKNotificationPreferences>"
B48@0:8@16Q24@32@40
B48@0:8@"NSString"16Q24@"CALNTriggeredEventNotificationSourceNotificationInfo"32@"CALNTriggeredEventNotificationData"40
B56@0:8@16@24@32@40B48B52
@"UISApplicationState"
v40@0:8^@16^@24@32
@64@0:8@16B24@28@36B44B48B52@56
@44@0:8i16@20@28@36
v44@0:8@16@24@32B40
v44@0:8i16@20@28@36
@32@0:8q16@24
@72@0:8@16@24@32@40@48@56@64
@"EKEphemeralCacheEventStoreProvider"
@"EKEventStore"
@"CALNNotificationServer"
@"CALNNotificationSourceRefresher"
@"CALNCalendarAppBadgeUpdater"
@"CALNNotificationStorageWrapper"
@"CALNTriggeredEventNotificationSource"
@"CALNNotificationIconCache"
@"CALNSchedulingSnoozeUpdateTimer"
@"<CALNNotificationIconProvider><CALNCalendarIconIdentifierProvider><CalIconProvider>"
i16@0:8
v20@0:8i16
@"CLLocation"
@"NSData"
@"NSString"40@0:8@"NSString"16@"CALNTriggeredEventNotificationSourceNotificationInfo"24^B32
@"<CALNTravelAdvisoryDescriptionGenerator>"
@140@0:8@16@24@32@40@48B56B60@64@72@80q88@96i104B108@112@120B128B132B136
{CLLocationCoordinate2D=dd}16@0:8
v32@0:8{CLLocationCoordinate2D=dd}16
@"NSUserActivity"
{CLLocationCoordinate2D="latitude"d"longitude"d}
@"<CALNTravelEngineDelegate>"16@0:8
v24@0:8@"<CALNTravelEngineDelegate>"16
@"<CALNTravelEngineDelegate>"
@"<CALNUNUserNotificationCenterProtocol>"24@0:8@"NSString"16
@"<CALNCalendarResourceChangedNotificationDataSource>"
@44@0:8@16@24@32B40
@56@0:8@16d24d32B40B44@48
@36@0:8@16i24@28
@44@0:8@16i24@28@36
@"EKCalendarNotificationReference"36@0:8@"EKObjectID"16i24@"EKEventStore"28
@"EKCalendarNotificationReference"44@0:8@"EKObjectID"16i24@"NSDate"28@"EKEventStore"36
@"CALNInMemoryTimeToLeaveRefreshStorage"
@"EKTravelEngine"
@"CALNEventInvitationResponseNotificationInfo"24@0:8@"NSString"16
@152@0:8@16@24@32@40@48B56B60@64@72@80@88@96@104@112@120@128B136B140B144B148
@52@0:8@16@24B32@36@44
@"EKCalendarNotification"
v24@0:8d16
@"EKTravelEngineOriginalEvent"
@"EKTravelEngineThrottle"
@"CalGeocoder"
@"<CALNRouteHypothesizer>"
@"CALNSharedCalendarInvitationNotificationInfo"24@0:8@"NSString"16
@"<CALNDataAccessExpressConnection>"
@"CALNSharedCalendarInvitationResponseNotificationInfo"24@0:8@"NSString"16
@"CALNCalendarResourceChangedNotificationInfo"24@0:8@"NSString"16
@"CALNInMemoryTriggeredEventNotificationDataStorage"
@"<CALNEventInvitationResponseNotificationDataSource>"
@(#)PROGRAM:CalendarNotification  PROJECT:CalendarNotification-1
Setting snooze update fire date for %{public}@ to %{public}@ with leeway = %f
Snooze update timer informed of significant time change; rescheduling
Snooze update timer fired
Refreshing notifications due for snooze update: %{public}@
No notifications need refreshing right now
Unscheduling snooze update (previous time = %{public}@, new time = nil)
Still no snooze updates scheduled
Rescheduling snooze update from %{public}@ to %{public}@ with leeway %lli
Snooze update still scheduled for %{public}@
Cannot record display of initial time to leave alert with travel advisory status = %{public}@, source client identifier = %{public}@
Could not get ttl event tracker alert type for travel advisory timeliness status = %{public}@, source client identifier = %{public}@
Cannot record display of initial time to leave alert because could not get event to compute required supporting metrics for source client identifier = %{public}@, alert type = %{public}@
Tracked pseudo event initial time to leave fired and logged event showed time to leave notification for source client identifier = %{public}@, unique key = %@
Cannot record display of initial time to leave alert because no hypothesis available to compute required supporting metrics for source client identifier = %{public}@, alert type = %{public}@
Tracked event fired ttl alert with source client identifier = %{public}@, alert type = %{public}@, transport type = %{public}@, eta type = %{public}@, travel state = %{public}@, has suggested location = %{public}@, is on shared calendar = %{public}@
Preparing to send feedback for posting notification with source client identifier = %{public}@, travel advisory timeliness status = %{public}@
Sent feedback for posting leave by notification for event with external URL = %{public}@
Sent feedback for posting leave now notification for event with external URL = %{public}@
Determined not to send feedback for added notification with source client identifier = %{public}@, travel advisory timeliness status = %{public}@
Could not get launch URL because unable to get event ID url for event ID = %{public}@
Applying diff to notification manager. Removed: %@, Modified: %@, Added: %@
Refreshed shared calendar invitation response notifications in response to database change. Found %{public}@ notifications for changed objects.
Refreshed shared calendar invitation response notifications. Found %{public}@ notifications.
Failed to get content for shared calendar invitation notification with sourceClientIdentifier = %{public}@
Fetched shared calendar invitation response notification with sourceClientIdentifier %{public}@. Content: %@
Received notification response for shared calendar invitation response %{public}@ with actionIdentifier = %{public}@
Could not unarchive hypothesis. error = %{public}@
Could not archive hypothesis. error = %{public}@
Failed to get notification info for sourceClientIdentifier (%{public}@)
Fetching event invitation notification content with sourceClientIdentifier %{public}@. InvitedBy: %@. StartDate: %@. Location: %@. EKCalendarNotificationType: %d. EventInvitationNotification: %@
Fetched event invitation notification with sourceClientIdentifier %{public}@. Content: %@
Refreshed event invitation notifications in response to database change. Found %{public}@ notifications for changed objects.
Refreshed event invitation notifications. Found %{public}@ notifications.
Received notification response for event invitation %{public}@ with actionIdentifier = %{public}@
Generating Notification Body For Notification Info. isModification: %d. timeChanged: %d, dateChanged: %d, titleChanged: %d, locationChanged: %d, videoConferenceChanged: %d, recurrenceChanged: %d
Error: _notificationBodyForNotificationInfo could not generate a body for notification because the modification type could not be determined.
Could not get event ID url to use for fetching triggered event notification info. source client identifier = %{public}@, event ID = %{public}@
Could not get event for source client identifier with protected data available. source client identifier = %{public}@, event ID = %{public}@. Could not get notification info as a result.
Fetched triggered event notification info with source client identifier: %{public}@. Triggered notification info: %@.
Failed to find event occurrence for sourceClientIdentifier %{public}@. Withdrawing notification.
Failed to find event occurrence for eventID = %{public}@. Should remove notification meta data.
Failed to find event occurrence for eventID = %{public}@. Should remove time to leave refresh timer.
Computed notification expiration date for event id = %{public}@, expiration date = %{public}@, event start date = %{public}@, event end date = %{public}@, alarm id = %{public}@, alarm date = %{public}@, alarm absolute date = %{public}@, is alarm absolute = %{public}@, alarm relative offset %{public}@
No event ID available to set up time to leave refresh timer. source client identifier = @{public}@, trigger date = %{public}@
No event ID available to remove time to leave refresh timer. source client identifier = %{public}@
Cancelled hypothesis refresh request for event ID = %{public}@
Requested hypothesis refresh date for event ID = %{public}@, requested hypothesis refresh date = %{public}@
Could not get event ID to cease route monitoring event for source client identifier = %{public}@
Ceased route monitoring for event ID = %{public}@
Acknowledging event with source client identifier: %{public}@, shouldMarkAsHavingReceivedLocation = %{public}@
Cannot mark as having received location because location alerts are not allowed, source client identifier = %{public}@
Snoozed event: %{public}@ until: %{public}@
Snoozed event: %{public}@ duration: %f
Handling directions action with source client identifier (%{public}@)
Handling mail organizer action with source client identifier (%{public}@)
Could not fetch event for event id = %{public}@. Suppressing received hypothesis trigger as a result, hypothesis = %@
Travel advice received. source client identifier = %{public}@, event external url = %{public}@, hypothesis = %@
No delegate to send travel advice received message. event external url = %{public}@
Travel engine event changed significantly. source client identifier = %{public}@, event external url = %{public}@
No delegate to send travel engine event significantly changed. event external url = %{public}@
No delegate to send travel engine authorization changed message. authorized = %{public}@
Could not fetch event for event id = %{public}@. Suppressing time to leave refresh timer trigger as a result.
Leave now refresh timer fired for source client identifier = %{public}@, event external url = %{public}@
No delegate to send time to leave refresh timer fired message. event external url = %{public}@
Preparing to send feedback for added notification with source client identifier = %{public}@
Could not get event ID for source client identifier = %{public}@
Received alarm engine notification without any fired alarms
Received alarm engine notification with %{public}d fired alerts
Filtered out %{public}d fired alerts that referenced the same event as other alerts firing at the same time
Should not trigger for fired alert. entity ID = %{public}@
No delegate available to send alert fired message. source client identifier = %{public}@
Should not trigger for fired alert info without scheme. entity ID = %{public}@
Should not trigger for fired alert with entity ID scheme = %{public}@
Should not trigger for acknowledged alert info. entity ID = %{public}@
Received a fired alert, but the alert info has no entity ID: %@
Failed to find alarm for sourceClientIdentifier %{public}@. Withdrawing notification.
Withdrawing notification for event (%{public}@) whose alarm is now in the future.
Computed fire date for event (%{public}@): %{public}@. Inspecting item's alarm acknowledged date to determine whether or not to withdraw notification. Events's alarm acknowledged date: %{public}@.
Withdrawing notification for event (%{public}@) whose alarm has been acknowledged (probably on another device).
Error acknowledging alarm (%{public}@) for event (%{public}@): %@
Could not get event ID url for event ID = %{public}@
Refreshed shared calendar invitation notifications in response to database change. Found %{public}@ notifications for changed objects.
Refreshed shared calendar invitation notifications. Found %{public}@ notifications.
Fetched shared calendar invitation notification with sourceClientIdentifier %{public}@. Content: %@
Received notification response for shared calendar invitation %{public}@ with actionIdentifier = %{public}@
Error adding notification request, error = %@, request identifier = %{public}@
Error replacing content for notification request, error = %@, identifier = %{public}@
Refreshing notifications in response to notifications loaded callback.
Not refreshing notifications in response to notifications loaded callback because there is no need to do so.
Received notification changed callback.
Blocking refresh of notifications because event notifications haven't finished loading yet.
Refreshing all notifications.
Refreshing notifications affected by changes to objects %@.
Finished refreshing notifications.
Withdrawing expired notification with sourceIdentifier %{public}@ and sourceClientIdentifier %{public}@
Requesting activation.
Cannot activate server since it is already active.
Activating.
Activated.
Requesting deactivation.
Cannot deactivate server since it is already inactive.
Deactivating.
Deactivated.
Setting notification sources: %{public}@
Did set notification sources: %{public}@
Getting notification categories from notification sources: %{public}@.
Requesting fetching records with source identifier: %@.
Fetching records with source identifier: %@.
Fetched records with source identifier: %{public}@. Fetched records: %@.
Adding record with source identifier = %{public}@, source client identifier = %{public}@
Error adding notification request. Source identifier = %{public}@, Source client identifier = %{public}@, error = %@, request = %@.
Added notification request, identifier = %{public}@, request = %@.
Updating record with source identifier = %{public}@, source client identifier = %{public}@
Error replacing notification request. Source identifier = %{public}@, Source client identifier = %{public}@, error = %@, request = %@.
Replaced notification request, identifier = %{public}@, request = %@.
Could not remove record because could not get notification identifier for source identifier = %{public}@, source client identifier = %{public}@
Removing record with source identifier = %{public}@, source client identifier = %{public}@
Error: Expected storage to contain only one record that has the same source identifier and source client identifier. Source identifier: %{public}@. Source client identifier: %{public}@. Fetched records: %@.
Received user notification center delegate will present notification message. User notification center: %@. Notification: %@.
Invoking callback with options: %{public}@.
Could not get record response from response. request identifier = %{public}@, response = %@
Transforming notification response to notification record response. request identifier = %{public}@, response = %@.
Could not get notification identifier from request identifier = %{public}@
Could not find notification record with notification identifier = %{public}@, records = %@
Transformed notification response to notification record response. Notification response: %@. Notification record response: %@.
Cannot add request to inactive user notification center. Request identifier = %{public}@, request = %@
Added notification record to storage. Notification record source identifier = %{public}@, source client identifier = %{public}@, record = %@
Could not add notification record to storage since notification record is nil. Notification request identifier = %{public}@, request = %@
Adding unNotificationRequest with identifier = %{public}@, request = %@
Added unNotificationRequest with identifier = %{public}@
Added updated notification record to storage. Notification record source identifier = %{public}@, source client identifier = %{public}@, record = %@
Could not add updated notification record to storage since notification record is nil. Notification request identifier = %{public}@
Replaced request with identifier = %{public}@, unNotificationContent = %@
Will present notification with identifier = %{public}@, notification = %@
Delegate is unexpectedly nil. Invoking callback with options = %{public}@, notification identifier = %{public}@, notification = %@
Invoking callback with options = %{public}@, notification identifier = %{public}@
Did receive notification response. identifier = %{public}@, response = %@
Delegate is unexpectedly nil. notification response identifier = %{public}@, response = %@
Updating record with date. Record source identifier = %{public}@, source client identifier = %{public}@, date = %{public}@, record = %@
Updated record. Source identifier = %{public}@, source client identifier = %{public}@, date = %{public}@, record = %@
Transforming notification record to notification request. Record: %@.
Transformed notification record to notification request. Record: %@. Request: %@.
Transforming notification request to notification record. Request: %@.
Cannot transform notification request to notification record since notification identifier is nil.
Transformed notification request to notification record. Request: %@. Record: %@.
Transforming notification record to notification. Record: %@.
Transformed notification record to notification. Record: %@. Notification: %@.
Fetched event canceled notification infos. Found %{public}@ notifications
Failed to get notification reference with sourceClientIdentifier %{public}@
Failed to get notification from notification reference. sourceClientIdentifier = %{public}@
Fetched event canceled notification info with sourceClientIdentifier: %{public}@ info: %@
Failed to get canceled event (%{public}@) when trying to delete it
Failed to delete canceled event (%{public}@): %@
Couldn't read existing persistent notification storage at path %{public}@. Will proceed anyway, which may mean contents will be overwritten. Error: %@
Persistent notification storage file loaded from path %{public}@.
Notification storage file did not exist at path = %{public}@. Creating a new file FAILED with error: %@
Notification storage file did not exist at path = %{public}@. Created a new file.
Loaded notification records, count = %lu
Error archiving notifications (%@). error = %@
Error writing archived notifications to path = %{public}@, error = %@
Could not get mailto url for event. Event does not have an organizer that is not the current user. In other words, there is no organizer for this event or the current user is the organizer. event external URL = %{public}@
Could not get mailto url because could not find organizer's email address. event external URL = %{public}@
Could not get mailto url because cannot send mail. event external URL = %{public}@
Constructing notification identifier string representation from components: %{public}@.
Cannot construct notification identifier string representation from components since source identifier is an empty string. Components: %{public}@.
Cannot construct notification identifier string representation from components since source client identifier is an empty string. Components: %{public}@.
Cannot construct notification identifier string representation from components since source identifier could not be encoded. Components: %{public}@.
Constructed notification identifier string representation from components. String representation: %{public}@. Components: %{public}@.
Deconstructing notification identifier string representation into components. String representation: %{public}@.
Cannot deconstruct notification identifier string representation into components since there are an unexpected number of encoded components. Expected encoded component count: %{public}@. Actual encoded component count: %{public}@. Encoded components: %{public}@. String representation: %{public}@.
Cannot deconstruct notification identifier string representation into components since source identifier is an empty string. String representation: %{public}@.
Cannot deconstruct notification identifier string representation into components since source client identifier is an empty string. String representation: %{public}@.
Deconstructed notification identifier string representation into components. String representation: %{public}@. Components: %{public}@.
Cannot initialize notification identifier with source client identifier and source client identifier because a string representation could not be constructed. Source identifier: %{public}@. Source Client identifier: %{public}@.
Cannot initialize notification identifier with string representation because string representation could not be deconstructed into components. String representation: %{public}@.
Refreshed event canceled notifications in response to database change. Found %{public}@ notifications for changed objects.
Refreshed event canceled notifications. Found %{public}@ notifications.
Fetched event canceled notification with sourceClientIdentifier %{public}@. Content: %@
Received notification response for event canceled %{public}@ with actionIdentifier = %{public}@
Cannot add record without alert content, source identifier = %{public}@, source client identifier = %{public}@
Cannot add record that should not be presented, source identifier = %{public}@, source client identifier = %{public}@
Cannot add record because notification identifier could not be created with record's source identifier and record's source client identifier. Record source identifier: %{public}@. Record source client identifier: %{public}@.
Added record, source identifier = %{public}@, source client identifier = %{public}@
Removed notification record with identifier = %{public}@
IconUpdater: IconIdentifierVersion out of date, updating all icon identifiers in storage first.
IconUpdater: Wiping icon cache directory to get rid of out dated icon files
IconUpdater: Regenerating icon files that are still in use in protectedStorage
IconUpdater: icon update complete, setting icon version to current version
IconUpdater: Updating iconIdentifiers in each notification storage entry, oldIdentifier:[%{public}@], newIdentifier:[%{public}@]
Failed to add icon to cache. IconIdentifier: %{public}@
Failed to remove icon file. Icon Identifier: %{public}@ . Error %{public}@
Icon does not exist and cannot be removed. Icon Identifier: %{public}@
Failed to generate icon with identifier %{public}@
Failed to save icon with identifier %{public}@ to path %{public}@. error = %{public}@
Error trying to create notifications icon cache directory: %{public}@
Received alarm but time to leave refresh monitor is not active. alarm name = %{public}@
Could not get event alarm object
Could not get alarm context url string from event alarm object
Could not get saved external url from alarm = %{public}s
Time to leave refresh monitor is not registered for alarms. Cannot set up refresh timer for event, event external url = %{public}@, refresh date = %{public}@
A refresh timer with the same trigger date of [%{public}@] has already been set up. Will not set up a new timer. Event external URL: [%{public}@].
Ignoring attempt to set refresh timer for [%{public}@] that would fire in the past [%{public}@].
Scheduled XPC alarm event: %s.
Set up refresh timer. event external url = %{public}@, trigger date = %{public}@, job name = %{public}s
Time to leave refresh monitor is not registered for alarms. Cannot remove refresh timer for event, event external url = %{public}@
There is no existing refresh timer to remove for event with external URL = %{public}@.
Removed refresh timer for event with external url = %{public}@
Refresh timer fired for event external url = %{public}@
No delegate available to message about fired refresh timer for event external url = %{public}@
Received notification but alarm engine monitor is not active. notification name = %{public}@
Alarm engine monitor received did register for alarms message but the alarm engine monitor is not active. Cannot send did register for alarms message to alarm engine.
Received alarm but alarm engine monitor is not active. alarm name = %{public}@
Notification with objectID %{public}@ has a calendar that is hidden by focus. Not including in the badge count
Received notification but inbox notification monitor is not active. notification name = %{public}@
Marking as heaving received location
Failed to create default calendar directory: %{public}@
Could not get start of leave now period for hypothesis = %@
Could not get start of running late period for hypothesis = %@
Failed to get notification infos for sourceClientIdentifier (%{public}@)
Fetched suggested event notification with sourceClientIdentifier %{public}@. Content: %@
Refreshed suggested event notifications in response to database change. Found %{public}@ notifications for changed objects.
Refreshed suggested event notifications. Found %{public}@ notifications.
Received notification response for suggested event notification with source client identifier = %{public}@, actionIdentifier = %{public}@
No arrival date provided for map item url launch options.
Could not get alarm ID for triggered alarm
Should not modify for alarm fired because old notification data is nil. source client identifier = %{public}@
Should not modify for alarm fired that is not offset from travel time start. source client identifier = %{public}@
Should not modify for alarm fired that is offset from travel time start because last time notification added is nil. source client identifier = %{public}@
Should modify for alarm fired that is offset from travel time start because last fire time of alert is within eight minutes. source client identifier = %{public}@
Should not add notification because no new travel advice received, source client identifier = %{public}@
We've detected that the user has arrived at the event's location, source client identifier = %{public}@
Should add notification because new travel advice received and no associated notification data exists already, source client identifier = %{public}@
Should not add notification because time to leave status has already been displayed. source client identifier = %{public}@
Should not add notification because notification recently fired due to a travel time alert. source client identifier = %{public}@
Should not add notification because an alert already fired for the event and the user is traveling to the destination. source client identifier = %{public}@
Should add notification because new travel advice received for existing alert. source client identifier = %{public}@
Should remove notification because the user has arrived and we've only shown pure 'Time to Leave' alerts and no manual alerts for this event. Source client identifier to remove = %{public}@
Could not compute transition for time to leave refresh timer fired because could not find existing notification data. source client identifier = %{public}@
Time to leave status already displayed based on travel advisory timeliness period: (%{public}@), period = %lu, hasDisplayedLeaveByMessage = (%{public}@), hasDisplayedLeaveNowMessage = (%{public}@), hasDisplayedRunningLateMessage = (%{public}@)
Tried to add hypothesis message to event representation with the wrong type: (%@)
Travel engine initialized: [%@]
The travel engine is already running.  Will not start engine: [%@]
Travel engine preparing to start: [%@]
Travel engine started: [%@]
The travel engine is not running.  Will not stop engine: [%@]
The travel engine is preparing to stop: [%@]
Travel engine stopped: [%@]
nil 'externalURL' given. Will not request hypothesis refresh at date: [%@] for any events.
Requesting hypothesis refresh at date: [%@] for event that has external URL: [%@]
Will not request hypothesis refresh at date: [%@] for event that has external URL: [%@] because is isn't being monitored
nil 'externalURL' given. Will not cancel a hypothesis refresh request for any events.
Canceling hypothesis refresh request for event that has external URL: [%@]
Will not cancel refresh request for event that has external URL: [%@] because it isn't being monitored.
nil 'externalURL' given.  Will not cease monitoring for any events.
Ceasing monitoring for event that has external URL: [%@]
Will not cease monitoring for event that has external URL: [%@] because it isn't being monitored.
Will search for travel agenda candidates between [%@] and [%@].  Calendars to search: [%@]
Location authorization status changed to [%@]
The location authorization state has changed.  self.authorizedInternal: [%@]
Received notification: [%@].
The state EventKit feature set was changed
The state of SuggestEventLocations was changed
The travel engine is yielding to sync already.  Ignoring notification.
The travel engine is not currently yielding to sync.  Ignoring notification.
Refreshing in response to significant time changed notification as the current time (%{public}@) is before the last time we refreshed (%{public}@)
NOT refreshing in response to significant time changed notification as the current time (%{public}@) is after the last time we refreshed (%{public}@)
Updating database encryption state.
Installing sync yield timer for travel engine: [%@].
Sync yield timer fired.  Overriding sync yield and refreshing if needed.
Installed sync yield timer with [%ld] second length for travel engine: [%@].
Uninstalling sync yield timer for travel engine: [%@].
Installing a periodic refresh timer for travel engine: [%@].  Timer interval: [%@].  Estimated fire date (based on system time): [%@].
Uninstalling the periodic refresh timer for travel engine: [%@].
Trimming entries before [%@] and after [%@].
Removing travel agenda entry that ends before the time window: [%@]
Removing travel agenda entry that starts after the time window: [%@]
Data does not need to be refreshed.  Will not refresh data for travel engine: [%@]
Cannot access data. Will not refresh data for travel engine: [%@]
Currently yielding to sync. Will not refresh data for travel engine: [%@]
Calendar system service is not authorized to use location
Refreshing data for travel engine: [%@]
The travel agenda time window interval is [%@] seconds.
Found [%lu] travel agenda candidates.
Inspecting travel agenda candidate event with title [%@], location [%@], start date [%@], and external URL [%@].
No external url for event: [%@].  Will not register as travel agenda item.
No location for event with external URL: [%@].  Will unregister as travel entry if it exists.
Unregistering event with external URL [%@] since it seems to have lost its location.
Event is or may be junk. Will not register as travel agenda item.
No routing method found on event with external URL [%@].  Defaulting to [%@].
Using routing method [%@] for event with external URL [%@].
Creating agenda entry because one does not exist for event with external URL: [%@]
Hypothesis updated for event with external URL: [%@].  Hypothesis: [%@]
Significant change encountered for event with external URL [%@].
The entry has been dismissed, but it's location has changed.  Clearing the dismissed flag for the entry for event with external URL: [%@]
The entry has been dismissed, but it's start date has changed.  Clearing the dismissed flag for the entry for event with external URL: [%@]
The entry has been dismissed.  Will not update the entry for event with external URL: [%@]
Unregistering event with external URL since it's not in the travel window: [%@]
Unregistering all agenda entries.
The periodic refresh timer fired for travel engine: [%@].
Installation of location manager requested.
Installation of location manager complete.  Location manager: [%@]
Uninstallation of location manager requested.
Uninstallation of location manager complete.
nil 'externalURL' given.  Will not send feedback for posting notification.
nil 'feedback' given.  Will not send feedback for posting notification.
Will not send feedback for posting notification for event that has external URL: [%@] because it isn't being monitored.
Creating the sentinel file was successful or the sentinel file already exists
Could not create sentinel file
Fetched (%lu) suggested event notifications
Failed to get notification from notification reference.
Failed to get suggested event notification reference with objectID %{public}@
Failed to get suggested event notification from notification reference. objectID = %{public}@
Fetched suggested event notification with objectID = %{public}@, notification info = %@
Could not get event. Cannot delete suggested event for source client identifier = %{public}@
Error deleting canceled suggested event: %@
Clearing suggested event notification with source client identifier = %{public}@
Clearing suggested event notification with object ID = %{public}@
Failed to get notification object from notification reference. Bailing. notification objectID = %@
Failed to get resource change for notification with objectID %{public}@
Failed to mark resource change as alerted for notification with objectID %{public}@, error = %@
Cleared suggested event notification with objectID %{public}@
Could not get event. Cannot acknowledge event for source client identifier = %{public}@
Unexpectedly found more than 1 event with extraction group identifier = %{public}@. Found (%lu) events
Cannot create notification info from notification without source client identifier, notification object ID = %{public}@
Opening url for response, source identifier = %{public}@, source client identifier = %{public}@, action identifier = %{public}@, url = %@
Opening url: %@
Could not open url, error = %@, url = %@
Unexpected number of topic identifiers. Expected: 1. Actual: %lu. Resolved section identifier: %{public}@. Topic identifiers: %{public}@.
Getting content for source client identifier = %{public}@
Using default title for notification content despite protected data being available, source client identifier = %{public}@
Category identifier for content = %{public}@, should include snooze action = (%{BOOL}d), should include directions action = (%{BOOL}d), should include conference call action = (%{BOOL}d), should include mail organizer action = (%{BOOL}d), source client identifier = %@, snoozeCategoryExpirationDate = %{public}@
Received notification response with action identifier = %{public}@, source client identifier = %{public}@
Triggered with source client identifier = %{public}@, trigger data = %{public}@
Could not get notification info for event (%{public}@).
Existing records = %@.
Existing record matching event for source client identifier = %{public}@, existing record source client identifier = %{public}@, existing record = %@
Existing notification data for source client identifier = %{public}@, existing notification data = %@
Determined that notification should trigger = %{public}@. source client identifier = %{public}@
Could not get notification content. source client identifier = %{public}@, source notification info = %@
Transition = %{public}@, source client identifier = %{public}@
No existing delivered notification to perform replace transition, source client identifier = %{public}@
Notification that should trigger cannot because we could not compute the transition type. source client identifier = %{public}@
Travel engine event changed significantly. Will reset 'Time to Leave' display state for existing record if it exists. source client identifier = %{public}@
Could not get existing record for source client identifier = %{public}@
Travel advisory authorization changed. authorized = %{public}@
Clearing travel advisory hypotheses
Updating refresh timer for source client identifier = %{public}@
Location alerts are not allowed. Will remove the associated refresh timer for source client identifier = %{public}@
There is no hypothesis. Will remove the associated refresh timer for source client identifier = %{public}@
Hypothesis indicates user has arrived. Will remove associated refresh timer for source client identifier = %{public}@
Will refresh at date: [%@] when the user needs to 'Leave Now' at %{public}@, source client identifier = %{public}@
Will refresh when the user will become late at %{public}@, source client identifier = %{public}@
Will set up a refresh timer with an adjusted refresh date of %{public}@. source client identifier = %{public}@
Not updating snooze options because there's only one option
Checking snooze options for %lu posted notifications
Refreshing notification %{public}@ because there's not enough information to determine if its snooze category is correct.
Refreshing notification %{public}@ because it should have snooze category "%{public}@" but has category "%{public}@.
Notification %{public}@ already has the correct snooze options.
Notification %{public}@ can't be snoozed so it doesn't need refreshing.
Refreshing notification with source client identifier = %{public}@
Removing notification meta data due to refresh for eventID = %{public}@
Notification meta data is expired for eventID = %{public}@. Should remove notification meta data.
Could not get an expiration date for notification meta data for eventID = %{public}@. Treating notification meta data as expired.
Time to leave refresh date is expired for eventID = %{public}@. Should remove time to leave refresh timer.
Getting content for notification with source client identifier = %{public}@, should clear hypothesis = %{public}@
Failed to get source notification info. source client identifier = %{public}@
Failed to get notification info for event (%{public}@). Returning nil content
Notification added with source client identifier = %{public}@, trigger = %{public}@
Error: Could not get launch URL for action. notification identifier = %{public}@, action identifier = %{public}@, response = %@
Updating stored notification data for source client identifier = %{public}@, transition = %{public}@
Could not get notification data for source client identifier = %{public}@
Adding notification data for source notification info. source client identifier = %{public}@, transition = %{public}@
No event ID to add notification data for source client identifier = %{public}@
Added notification data, source client identifier = %{public}@, event ID = %{public}@, notification data = %@
Resetting stored notification data time to leave display state for source client identifier = %{public}@
Cleared travel advisory from notification meta data for source client identifier = %{public}@
Storage migration: new storage is the same as existing storage; no work to be done
Storage migration: copying data for key %@
Storage migration: key %@ had existing data; adding merged data: %@
No content available to get notification response data. source client identifier = %{public}@
No user info available to get notification response data. source client identifier = %{public}@
No notification response data payload in user info. source client identifier = %{public}@
Source client identifiers refer to the same event. Source client identifier: %{public}@. Other source client identifier: %{public}@.
Source client identifiers do not refer to the same event. Source client identifier: %{public}@. Other source client identifier: %{public}@.
Stopping
Starting up. Last sequence was %{public}@, context is %@
Alarm engine handling did register for alarms message
Received alarm notification. XPC Alarm context: %s. XPC Alarm context date: %@.
Updated next fire date: %@.
Protected data now available.
Data protection enabled. Waiting for unlock before updating.
Sync running. Waiting for it to finish before updating.
Alarm table population not started.  Will wait until the end of an existing population action to retry.
Database changed.
Alarms may have changed: %s
Time zone changed.
Simulated offset changed.
%s - EKSideTableContext failed to be created, nothing will be stored
There were %lu alarms found which will occur in the next 15 days
Unable to save alarm side table: %@
Populating alarm table
Calendar TZ = %@; System TZ = %@; Time Zone Support = %@
Time Zone Support pref is suspect (%@)
Searching for alarms between [%@] and [%@]
Alarm Table populated in %f
Retrying alarm table population due to previous request to do so.
Rescheduling timer
No cache end date. This means we haven't populated the table. No timer will be set.
We're close to our cache end date. Going to attempt a rebuild.
No alarms found. Setting time to cache end date.
Set _nextFireDate to [%@]
Adjusted fire date from [%@] to [%@]
%s - refire date was nil and a new timer won't be scheduled, context was %@
Installing timer with fire date: [%@]
Formatted scheduled alarm trigger date: %@.
Notifying: %lu alarms fired.
Timer Fired.
Fire date suspiciously old. Resetting to one minute before now.
Looking for alarms between %@ and %@
Found %lu alarm(s)
Could not fetch event from sideAlarm object. Somehow got an alarm for a non-event. rowID: %@
Removing side alarm for junk or maybe junk event with rowID: %@
Side alarm has no Entity URI, will not fire. rowID: %@
Unable to save alarm side table when pruning side alarms: %@
Sync timer fired.
Sync started. Suppressing updates while it runs.
Sync done.
Significant time change.
Per-calendar notification suppression setting changed.
_globalAlarmPreferencesChanged called
Fetched event invitation notification infos. Found %{public}@ notifications
Fetched event invitation notification info with sourceClientIdentifier: %{public}@ info: %@
Failed to get event (%{public}@) when attempting to report as junk
Failed to get event (%{public}@) when attempting to set participant status to %{public}@
Failed to save event (%{public}@) when setting participant status (%{public}@): %@
Determining whether or not to trigger for source client identifier = %{public}@, trigger = %{public}@, source notification info = %@, old notification data = %@
Should trigger for alarm. source client identifier = %{public}@
Determining if notification source should trigger for source client identifier = %{public}@
Should not trigger because nil hypothesis received and no existing notification data, source client identifier = %{public}@
Should not trigger because nil hypothesis received and existing notification data has no travel advice, source client identifier = %{public}@
Should trigger because nil hypothesis received and notification data has existing travel advice for source client identifier = %{public}@
Should trigger because forcing display of new travel advisory hypotheses for source client identifier = %{public}@
Should not trigger because location alerts are disabled. source client identifier = %{public}@
We've detected that the user has arrived at the event's location. source client url = %{public}@, has existing notification data = %{public}@
Should trigger because notification has existing travel advice. source client identifier = %{public}@
Should not trigger because the user has not seen travel advisory information for this event yet and we've detected the user will not arrive until the event is over. Will not show travel advisory information. source client identifier = %{public}@ 
Aggressive travel time: [%{public}@] is after event end date: [%{public}@].
Conservative Travel time [%{public}@] does not satisfy the initial emission travel time requirement since it is more than the maximum allowable travel time: [%{public}@]. Will not emit hypothesis as a result.
Found existing notification data for event. source client identifier = %{public}@
Should not trigger because the predicated travel time is less than the minimum allowable travel time threshold so we can't provide a time to leave alert. source client identifier = %{public}@, predicated travel time = %{public}@, minimum allowable travel time threshold = %{public}@
Should not trigger because the event's start date is before now and we don't have any existing notification data. source client identifier = %{public}@
Should not trigger because the user is definitely traveling to the destination and we don't have any existing notification data for this event. source client identifier = %{public}@, travel state = %{public}@
Should not trigger because the user is traveling towards the destination, we don't have any existing notification data for this event and the event already has normal alarms on it, so the user will be alerted of this event at some point. source client identifier = %{public}@
Should trigger because new travel advice received and no existing notification data for this event exists already. source client identifier = %{public}@
Should trigger because notification recently fired due to a travel time alert. source client identifier = %{public}@
Should trigger because an alert was already fired for the event and the user is traveling to the destination. source client identifier = %{public}@
Should not trigger because new travel hypothesis received for event that does not satisfy minimum travel time threshold. source client identifier = %{public}@
Should not trigger for time to leave refresh timer fired because no existing notification data. source client identifier = %{public}@
Should not trigger for time to leave refresh timer fired because location alerts are disabled. source client identifier = %{public}@
Should trigger for time to leave refresh timer fired because we have no travel advice. source client identifier = %{public}@
Should trigger because the user is traveling to the destination or has arrived. source client identifier = %{public}@
Should not trigger for time to leave because an alert was already fired for this event and showed a 'Leave Now' message. source client identifier = %{public}@
Should trigger for time to leave because the user needs to see the 'Leave Now' alert. source client identifier = %{public}@
Update calendar app badge count to %{public}d
Could not get alarm ID for source client identifier = %{public}@
Invalid sourceClientIdentifier (%{public}@). Could not find at least one component.
Failed to construct URL from sourceClientIdentifier (%{public}@)
Failed to construct objectID from sourceClientIdentifier (%{public}@)
Failed to construct calendarURI for shared calendar invitation with sourceClientIdentifier = %{public}@
Failed to get objectID for notification of type %d with sourceClientIdentifier %{public}@
Failed to load notification reference for sourceClientIdentifier (%{public}@
Failed to construct eventURI with sourceClientIdentifier %{public}@
sourceClientIdentifier was nil. Bailing.
Failed to construct calendarURI for sourceClientIdentifier (%{public}@)
Failed to get calendar for sourceClientIdentifier (%{public}@).
Failed to hide calendar (%{public}@) from notification center: %@
Unexpected entity type %{public}@ when trying to get EKInviteReplyNotification with sourceClientIdentifier %{public}@
Failed to get invite reply notification with sourceClientIdentifier %{public}@
Failed to remove invite reply notification with sourceClientIdentifier %{public}@: %@
Failed to find event for notification using url (%{public}@)
Failed to get event (%{public}@) when attempting to clear invitation notification
Not clearing invitation status for sourceClientIdentifier %{public}@ because it is set to none
Failed to clear invitation status for event (%{public}@): %@
Creating notification server module
Missed refreshing EKEventStore in response to handling database change notification; continuing without refreshing.
Got a database changed notification and we have an EKEventStore. Letting the event store handle the notification first.
Not refreshing EKEventStore before handling database change notification because we don't have an EKEventStore right now.
Reloading notifications because locale changed from %{public}@ to %{public}@
Updating locale from %{public}@ to %{public}@
Reloaded triggered event notification data after first unlock
Already reloaded triggered event notification data after first unlock; not doing it again
Reloading calendar notifications after first unlock
Cannot reload notification with sourceClientIdentifier = %@. Failed to find notification source with sourceIdentifier = %{public}@.
Reloaded notification record with source identifier = %{public}@, source client identifier = %{public}@, title = %@
Migration is not required
Migration not required because folder %@ doesn't exist or isn't a directory.
Failed to remove old directory (%@): %@
Finished migrating notification files; removed old directory %@
Not attempting to migrate file %{public}@ because it already exists in the destination directory
Not attempting to migrate file %{public}@ because it doesn't exist in the source directory
Error moving file %{public}@: %@
Successfully moved file %{public}@
Throttle has been requested to tear down: [%@]
Travel engine throttle tear down: [%@]
No date given.  Tearing down emission timer.
'nil' emission timer given.  Uninstalling emission timer.
The given emission date %@ is before now %@.  Firing the emission block and uninstalling the timer.
The given emission date is the same as the existing emission date.  Will not update the emission timer.  Emission date: [%@]
Firing emission block for travel engine throttle: [%@]
Created a new emission timer that will fire on the emission date: [%@]
Uninstalling timer for travel engine throttle: [%@].
Emission timer fired
Cleared out the next emission date due to emission timer firing.
Cannot create route hypothesis body for notification without a hypothesis. source client identifier: %{public}@
Cannot create body with travel advisory for notification without travel advisory timeliness status. source client identifier = %{public}@
Cannot create route hypothesis body for notification because it was determined that it should not be included. source client identifier = %{public}@, Notification info: %@.
Could not convert travel advisory timeliness period none to a ttl description type number
Cannot set legacy identifier for calendar notification with no URL.
Refreshed calendar resource changed notifications in response to database change. Found %{public}@ notifications for changed objects.
Refreshed calendar resource changed notifications. Found %{public}@ notifications.
Failed to get content for calendar resource changed notification with sourceClientIdentifier = %{public}@
Fetched calendar resource changed notification with sourceClientIdentifier %{public}@. Content: %@
Received notification response for calendar resource changed %{public}@ with actionIdentifier = %{public}@
Couldn't read existing persistent time to leave refresh storage at path %{public}@. Will proceed anyway, which may mean contents will be overwritten. Error: %@
Time to Leave refresh storage file loaded from path %{public}@.
Time to leave refresh storage file did not exist at path = %{public}@. Creating a new file FAILED with error: %@
Time to Leave refresh storage file did not exist at path = %{public}@. Created a new file.
Could not save time to leave refresh date. error = %{public}@, identifier = %{public}@, data = %@
Could not save after removing time to leave refresh date. error = %{public}@, identifier = %{public}@
Could not save after removing time to leave refresh dates. error = %{public}@
Loaded time to leave refresh timer dates, count = %lu
Error archiving time to leave refresh dates (%@). error = %@
Error writing archived data to path = %{public}@, error = %@
Travel advisories are not supported. Will not start travel engine.
Travel advisories are not supported. Will not stop travel engine.
Received notification but travel engine is not active. notification name = %{public}@
Travel engine wrapper received did register for did register for alarms message but the travel engine wrapper is not active. Cannot start travel engine.
Travel engine wrapper received did register for did register for alarms message. Starting travel engine.
Received alarm but travel engine is not active. alarm name = %{public}@
No delegate exists to send travel advice received message
No delegate exists to send event significantly changed message
No delegate exists to send authorization changed message
Fetched event invitation response notification info with sourceClientIdentifier: %{public}@ info: %@
Failed to get event (%{public}@) when attempting to accept invitation response
Failed to get notification info for sourceClientIdentifier (%{public}@) when attempting to accept invitation response
Failed to get a proposer when attempting to accept and invitation response notification that should have been a proposed new time notification (%{public}@)
Error saving event store after accepting proposed new time for sourceClientIdentifier (%{public}@), error = %@
Failed to get event (%{public}@) when attempting to decline invitation response
Failed to get notification info for sourceClientIdentifier (%{public}@) when attempting to decline invitation response
Failed to get a proposer when attempting to decline an invitation response notification that should have been a proposed new time notification (%{public}@)
Error saving event store after declining proposed new time for sourceClientIdentifier (%{public}@), error = %@
Ignoring junk event
Could not get icon identifier from icon path = %{public}@, notification icon = %{public}@
Could not get icon path for icon identifier = %{public}@
Update with original event requested: [%@]. This checks if the event has changed enough to qualify generating another hypothesis.
Latest Hypothesis [%@]
There was no previous original event, so event has significantly changed. Should attempt to hypothesize.
There is no hypothesis, or non-functional hypothesizer. Regenerating a new hypothesizer. latestHypothesis:[%@] hypothesizer:[%@] hypothesizer state:[%ld]
Event has significantly changed: [%@].  Original event: [%@]
No equality check was performed.  Original event: [%@]
Will attempt to hypothesize.  Previous original event: [%@] Original event: [%@]
Firing request hypothesis refresh block in travel engine for [%@]
Firing cancel hypothesis request block in travel engine for [%@]
Firing emission block in travel engine for [%@]
Requesting refresh for hypothesizer, %@
Request hypothesis refresh timer fired
Emission hypothesis refresh timer fired
Ignoring attempt to set alarm named %{public}@ for a date in the past (%{public}@)
Created a new request refresh timer that will fire at: [%@] for entry: [%@]
Uninstalling request refresh timer for agenda entry: [%@].
Created a new emission refresh timer that will fire at: [%@] for entry: [%@]
Uninstalling emission refresh timer for agenda entry: [%@].
Sending UI feedback to the hypothesizer.  Notification type: [%@].  Original event: [%@]
Clearing all state in the agenda entry for original event: [%@]
A map handle already exists on the event.  Will not enhance location by geocoding the location string.  Original event: [%@]
A geolocation already exists on the event.  Will not enhance location by geocoding the location string.  Original event: [%@]
The location is a conference room without structured location information.  Will not proceed to monitor route.  Original event: [%@].
No map handle or geolocation exists on the event.  Will enhance location by geocoding the location string.  Original event: [%@]
Automatic geocoding is not allowed yet. We will not attempt to geocode for this event [%@]
Geocoding complete.  Elapsed time: [%@] ms.  Original event: [%@]
Encountered error while geocoding.  Will not proceed to monitor route.  Location string: [%@] Error: [%@].
No geocoding results found.  Will not proceed to monitor route.  Location string: [%@].
Map item found after geocoding.  Location string: [%@].  Map item: [%@]
No event external URL found.  Will not save geocoding result to the database. Original event: [%@].
'saveGeocodedLocationsInTravelEngine' set to 'NO.'  Will not save geocoding result to the database. Original event: [%@].
Saved geocoding result to the database successfully. Original event: [%@].
Failed to save the geocoding result to the database successfully. Original event: [%@].  Error: [%@]
Setting up route monitoring.  Original event: [%@]
No map handle or geolocation found.  Will not monitor routing for event.  Original event: [%@]
Found map handle.  Will use to generate destination.  Original event: [%@]
Found geolocation.  Will use for route monitoring.  Original event: [%@].  Geocoordinates - Latitude: [%@], Longitude: [%@]
Creating a synthetic hypothesis.  Original event: [%@]
Created a synthetic hypothesis: [%@]
Creating hypothesizer to monitor routing.  Destination: [%@] Original event: [%@] Hypothesizer: [%@]
Hypothesizer is gone.  Returning early.
Hypothesizer updated to state: [%@].  Original event: [%@]. Hypothesis: [%@]
Done hypothesizing for original event: [%@]
Analyzing hypothesis for original event: [%@]
Not updating the latestHypothesis because the hypothesis is nil.
Updating agenda entry with hypothesis: [%@]. Agenda entry: [%@].
Fetched shared calendar invitation notification infos. Found %{public}@ notifications
Fetched shared calendar invitation notification with sourceClientIdentifier = %{public}@. Info = %@
Failed to get notification object from notification reference. Bailing.
Fetched shared calendar invitation response notification infos. Found %{public}@ notifications
Fetched shared calendar invitation response notification with sourceClientIdentifier = %{public}@. Info = %@
Fetched calendar resource changed notification infos. Found %{public}@ notifications
Fetched calendar resource changed notification with sourceClientIdentifier = %{public}@. Info = %@
Failed to acknowledge resource change (%{public}@) for notification with sourceClientIdentifier %{public}@
Marked as having received location with effective bundle identifier = %{public}@
Couldn't read existing persistent triggered event notification storage at path %{public}@. Will proceed anyway, which may mean contents will be overwritten. Error: %@
Triggered event notification storage file loaded from path %{public}@.
Triggered event notification storage file did not exist at path = %{public}@. Creating a new file FAILED with error: %@
Triggered event notification
 storage file did not exist at path = %{public}@. Created a new file.
Could not save notification data. error = %{public}@, identifier = %{public}@, data = %@
Could not save after removing notification data. error = %{public}@, identifier = %{public}@
Loaded notification meta data, count = %lu
Error archiving notification data (%@). error = %@
Refreshed event invitation response notifications in response to database change. Found %{public}@ notifications for changed objects.
Refreshed event invitation response notifications. Found %{public}@ notifications.
Fetched event invitation response notification with sourceClientIdentifier %{public}@. Content: %@
Received notification response for event invitation response %{public}@ with actionIdentifier = %{public}@
v8@?0
com.apple.calendar.notification
SnoozeUpdateTimer
Snooze
clock
Snooze for 5 minutes
Snooze for 15 minutes
Snooze for 30 minutes
Snooze for 1 hour
Snooze until 30 minutes before
Snooze until 15 minutes before
Snooze until 5 minutes before
Snooze until start time
Snooze until end time
Directions
mappin.and.ellipse
Join Meeting
person.2
EventNotificationEmailSenderButton
Email Sender
person.crop.circle
?travel=true
<%@: %p>(
addedRecords = %@
removedRecords = %@
modifiedRecords = %@
v32@?0@"CALNNotificationIdentifier"8@"CALNNotificationRecord"16^B24
CALNNotificationIconIdentifierVersion
com.apple.mobilecal.bulletin-subsection.upcomingEvents
com.apple.mobilecal.bulletin-subsection.invitations
com.apple.mobilecal.bulletin-subsection.Responses
com.apple.mobilecal.bulletin-subsection.resourceChanges
com.apple.mobilecal.bulletin-subsection.suggestions
<%@: %p>(sourceClientIdentifier = %@, launchURL = %@, expirationDate = %@, eventInvitationNotification = %@, eventRepresentationDictionary = %@, isDelegate = %@, sourceTitle = %@, sourceIdentifier = %@)
None
Allow in CarPlay
Allow actions in CarPlay
Prevent automatic removal from recents
(%@)
CALNSharedInvitationResponseCategoryIdentifier
com.apple.calendar.notifications.SharedCalendarInvitationResponse
notification.hiddenPreviewsBodyPlaceholder.calendar.invitationResponse
Invitation Response
Shared Calendar Invitation
<%@: %p>(identifier = %@, actions = %@, options = %@, hiddenPreviewsBodyPlaceholder = %@, categorySummaryFormat = %@)
<%@: %p>(sourceClientIdentifier = %@, launchURL = %@, expirationDate = %@, conflictDetails = %@, eventInvitationNotification = %@, eventURI = %@, eventRepresentationDictionary = %@, isDelegate = %@, sourceTitle = %@, sourceIdentifier = %@)
com.apple.calendar.notifications.CALNTriggeredEventNotificationResponseDataHypothesisDataPayloadKey
com.apple.calendar.notifications.CALNTriggeredEventNotificationResponseDataLastFireTimeOfAlertOffsetFromTravelTimePayloadKey
v32@?0@"CALNNotificationAction"8Q16^B24
v32@?0@"UNNotificationAction"8Q16^B24
EventInvitation.CanRespond
EventInvitation.CouldBeJunk
CALNNotificationMaybeAction
com.apple.calendar.notifications.EventInvitation
notification.hiddenPreviewsBodyPlaceholder.event.invitation
Invitation
EventInvitationNotificationAcceptButton
Accept
EventInvitationNotificationDeclineButton
Decline
EventInvitationNotificationMaybeButton
Maybe
EventInvitationNotificationReportJunkButton
Report Junk
checkmark.circle
xmark.circle
questionmark.circle
bin.xmark
EventInvitationNotificationDefaultTitle
Time changed to %@
Date changed to %@
Title changed to %@
Location changed and Video Call updated
Location changed to %@
Location removed and Video Call updated
Location removed
Video Call updated
Repeat frequency or end date changed
Invitation updated
Invitation From %@
Unknown Sender
<%@: %p>(identifier = %@, title = %@, systemImage = %@, url = %@)
_CalDatabaseChangedNotification
v16@?0@"NSObject<OS_xpc_object>"8
notifications.PostedNotification
notifications.NotificationResponse
notificationType
actionIdentifier
x-apple-eventkit-alert-%@
v24@?0@"EKEvent"8@"EKAlarm"16
-[CALNTriggeredEventNotificationEKDataSource _alertsFired:]
<%@: %p>(title = %@, location = %@, startDate = %@, endDate = %@, isAllDay = %@, launchURL = %@, isLocationEvent = %@, eventID = %@, calendarIdentifier = %@, eventRepresentationDictionary = %@, legacyIdentifier = %@, mapItemURL = %@, conferenceURL = %@, mailtoURL = %@, hasSuggestedLocation = %@, eventHasAlarms = %@, alarmID = %@, isOffsetFromTravelTimeStart = %@, lastFireTimeOfAlertOffsetFromTravelTime = %@, allowsLocationAlerts = %@, hypothesis = %@, travelAdvisoryTimelinessPeriod = %@, forceDisplayOfNewTravelAdvisoryHypotheses = %@, locationWithoutPrediction = %@, preferredLocation = %@)
CALNSharedCalendarInvitationDefaultCategory
CALNSharedCalendarInvitationCouldBeJunkCategory
CALNSharedCalendarInvitationJoinActionIdentifier
com.apple.calendar.notifications.SharedCalendarInvitation
notification.hiddenPreviewsBodyPlaceholder.calendar.invitation
SharedCalendarInvitationJoinButton
Join
SharedCalendarInvitationDeclineButton
SharedCalendarInvitationReportJunkButton
Invitation to share a calendar with %@.
v16@?0@"NSError"8
com.apple.calendar.notification.NotificationSourceRefresher
stringRepresentation
<%@: %p>(notificationRecord = %@, actionIdentifier = %@, originIdentifier = %@, targetConnectionEndpoint = %@)
work
v32@?0@"<CALNNotificationSource>"8Q16^B24
B32@?0@"CALNNotificationRecord"8Q16^B24
<%@: %p>(sourceClientIdentifier = %@, suggestionNotification = %@, expirationDate = %@, launchURL = %@)
v32@?0@"UNNotification"8Q16^B24
<%@: %p>(identifier = %@, content = %@)
content
identifier
sourceIdentifier
sourceClientIdentifier
date
shouldPresentAlert
shouldPlaySound
<%@: %p>(sourceIdentifier = %@, sourceClientIdentifier = %@, content = %@, shouldPresentAlert = %@, shouldPlaySound = %@, hasAlertContent = %@)
CALNUNUserNotificationCenterErrorDomain
Could not add notification request.
User notification center is inactive.
Activate the user notification center before adding a notification request.
B16@?0@"CALNNotificationRecord"8
v16@?0Q8
CalendarNotificationsAuthorization
authorizationStatus
soundSetting
badgeSetting
alertSetting
notificationCenterSetting
lockScreenSetting
carPlaySetting
alertStyle
showPreviewsSetting
timeSensitiveSetting
v32@?0@"NSString"8@"UNNotificationSettings"16^B24
com.apple.mobilecal.bulletin-subsection.
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz_
notifications_%@_%@
<%@: %p>(title = %@, subtitle = %@, body = %@, categoryIdentifier = %@, sectionIdentifier = %@, date = %@, expirationDate = %@, defaultActionURL = %@, iconIdentifier = %@, shouldHideTime = %@, shouldSuppressSyncDismissalWhenRemoved = %@, peopleIdentifiers = %@, sound = %@, threadIdentifier = %@, summaryArgument = %@, summaryArgumentCount = %lu, interruptionLevel = %lu, filterCriteria = %@, userInfo = %@)
body
subtitle
title
categoryIdentifier
sectionIdentifier
expirationDate
defaultActionURL
iconIdentifier
shouldHideTime
shouldSuppressSyncDismissalWhenRemoved
peopleIdentifiers
sound
userInfo
threadIdentifier
summaryArgument
summaryArgumentCount
interruptionLevel
filterCriteria
v32@?0@"CALNNotification"8Q16^B24
Alert
Badge
Sound
Email sender unknown title
Event
/?&:$+,;=@
mailto:%@?subject=%@
<%@: %p>(sourceIdentifier = %@, sourceClientIdentifier = %@)
<%@: %p>(sourceIdentifier = %@, sourceClientIdentifier = %@, stringRepresentation = %@)
<%@: %p(date: %@, request: %@)
request
CALNNotificationDeleteActionIdentifier
com.apple.calendar.notifications.EventCanceled
EventCanceledDeleteButton
Delete
trash
Canceled by %@
v32@?0@"CALNNotificationRecord"8Q16^B24
com.apple.CALNNotificationDefaultActionIdentifier
com.apple.CALNNotificationDismissActionIdentifier
<%@: %p>(notification = %@, actionIdentifier = %@, originIdentifier = %@, targetConnectionEndpoint = %@)
CALNNotificationIconCacheQueue
Failed to add icon to cache.
Icon does not exist and cannot be removed.
NotificationIconCache
<%@: %p>(trigger = %@, alarmID = %@, isOffsetFromTravelTimeStart = %@, hypothesis = %@)
CalendarNotificationRefreshTimer-
%@-[%@]
com.apple.calaccessd.TTLRefreshMonitor.alarm.context.URLString
com.apple.calendar.notification.inMemoryTriggeredEventNotificationDataStorage.work
<%@: %p>(sourceClientIdentifier = %@, calendarNotification = %@, changeType = %@, date = %@, allDay = %@, timeZone = %@, expirationDate = %@, launchURL = %@, isDelegate = %@, sourceTitle = %@, sourceIdentifier = %@)
@"EKEventStore"8@?0
com.apple.calendar.notification.InboxNotificationMonitorCallback
Default
Calendar
AlarmEngine
SuggestedEvent.Default
SuggestedEvent.Coalesced
SuggestedEvent.Canceled
CALNNotificationConfirmAction
CALNNotificationIgnoreAction
CALNNotificationDeleteAction
com.apple.calendar.notifications.SuggestedEvent
Add to calendar button for a suggested event
Add to Calendar
Ignore button for a suggested event
Ignore
Delete button for a canceled suggested event
%@.%@
com.apple.navd.wakeUpForHypothesisUpdate
callback
v32@?0@8Q16^B24
v16@?0@"EKTravelEngineAgendaEntry"8
com.apple.calendar.LocationAuthDenied
periodicRefreshTimer
B32@?0@8@"EKTravelEngineAgendaEntry"16^B24
v24@?0@"NSString"8^B16
v32@?0@"EKEvent"8Q16^B24
v32@?0@"NSString"8@"EKTravelEngineAgendaEntry"16^B24
/tmp/CalNotificationsAvailable
B32@?0@"CALNSuggestedEventNotificationInfo"8Q16^B24
v24@?0@"CALNNotificationCategory"8^B16
v24@?0@"UNNotificationCategory"8^B16
-[CALNLaunchServicesURLHandler openURL:response:]
v24@?0@"NSDictionary"8@"NSError"16
upcomingEventsThread
com.apple.calendar.notification.CALNTriggeredEventNotificationResponseDataPayloadUserInfoKey
AlarmID
MapItemURL
ConferenceURL
IsLocation
mailto
allDay
endDate
snoozeCategoryExpirationDate
snoozeCategoryExpirationLeeway
com.apple.calendar.notifications.TimeTriggeredEvent
notification.hiddenPreviewsBodyPlaceholder.upcomingEvent
Upcoming Event
%u more upcoming events
Summaries
v32@?0@"NSString"8@"NSArray"16^B24
v32@?0@"NSString"8@"CALNTriggeredEventNotificationData"16^B24
v32@?0@"NSString"8@"NSDate"16^B24
EKAlarmEngineAlarmsDidFireNotification
EKAlarmEngineAlarmOccurrencesKey
com.apple.mobilecal.preference.notification.calendarsExcludedFromNotifications
com.apple.calendar.defaultAlarmChangedNotification
LastDBSequence
com.apple.calendar.notification.alarmengine
-[_EKAlarmEngine _updateWithForceForAlarmTable:]
v28@?0B8@"NSDictionary"12@"CADSequenceToken"20
-[_EKAlarmEngine _storeAlarms:nextScheduleLimit:eventStore:]
CacheEndDate
CalendarsExcludedFromNotifications
v16@?0@"NSArray"8
-[_EKAlarmEngine _rescheduleTimer]
yyyy-MM-dd HH:mm:ss.SSS
-[_EKAlarmEngine _timerFired]
com.apple.calaccessd.alarmEngine.alarm.name
com.apple.calaccessd.alarmEngine.alarm.context.date
com.apple.calendar.notification.inMemoryTimeToLeaveRefreshStorage.work
CALNBulletinReportProblemAction
Mail_identifier
CALNNotificationReportJunkEventAction
CALNNotificationReportJunkCalendarAction
CALNNotificationConferenceCallAction
CALNTriggeredEventNotificationSnoozeActionIdentifier
CALNTriggeredEventNotificationSnooze5MinutesActionIdentifier
CALNTriggeredEventNotificationSnooze15MinutesActionIdentifier
CALNTriggeredEventNotificationSnooze30MinutesActionIdentifier
CALNTriggeredEventNotificationSnooze1HourActionIdentifier
CALNTriggeredEventNotificationSnoozeUntil30MinutesBeforeActionIdentifier
CALNTriggeredEventNotificationSnoozeUntil15MinutesBeforeActionIdentifier
CALNTriggeredEventNotificationSnoozeUntil5MinutesBeforeActionIdentifier
CALNTriggeredEventNotificationSnoozeUntilStartActionIdentifier
CALNTriggeredEventNotificationSnoozeUntilEndActionIdentifier
CALNNotificationDirectionsAction
CALNNotificationDeclineAction
alarmID
isOffsetFromTravelTimeStart
lastFireTimeOfAlertOffsetFromTravelTime
hypothesis
hasDisplayedLeaveByMessage
hasDisplayedLeaveNowMessage
hasDisplayedRunningLateMessage
lastTimeNotificationAdded
<%@: %p>(alarmID = %@, isOffsetFromTravelTimeStart = %@, lastFireTimeOfAlertOffsetFromTravelTime = %@, hypothesis = %@, hasDisplayedLeaveByMessage = %@, hasDisplayedLeaveNowMessage = %@, hasDisplayedRunningLateMessage = %@, lastTimeNotificationAdded = %@)
<%@: %p>(alertType = %@, alertTopic = %@)
alertTopic
alertType
NotificationSourceClientIdentifierVersion
NotificationsLastLocale
com.apple.calendar.notification.snoozeRefresh
calendar
-[CALNNotificationServerModule receivedNotificationNamed:]
NotificationSettings
v16@?0@"NSMutableDictionary"8
com.apple.calendar.notifications.stateCaptureQ
[UserStateLog] System Notification Settings
@8@?0
-[CALNNotificationServerModule receivedAlarmNamed:]
-[CALNNotificationServerModule protectedDataDidBecomeAvailable]
Notifications.Calendar.Unprotected
Notifications.Calendar.Protected
Notifications.Calendar.TriggeredEvent.NotificationData.Unprotected
Notifications.Calendar.TriggeredEvent.NotificationData
Notifications.Calendar.TriggeredEvent.TimeToLeaveRefresh
Extras.db
Extras.db-wal
Extras.db-shm
com.apple.calendar.notifications.postFakeNotification
com.apple.calendar.notifications.FakeNotification.%@
com.apple.calendar.notifications.fakeNotificationSourceQ
Discrete
Private
Fake notification
nextEmissionDate
throttleQueue
%@-%@
eventExternalURL
startDate
locationString
B24@?0@"CLLocation"8@"CLLocation"16
<%@: %p>(lastFireTimeOfAlertOffsetFromTravelTime = %@, hypothesis = %@)
Suggested Location: %@
%@ <%p> {title = %@; date = %@; timeZone = %@}
BLTWatchLegacyMap
CALNResourceChangedCategoryIdentifier
com.apple.calendar.notifications.CalendarResourceChanged
notification.hiddenPreviewsBodyPlaceholder.resourceChange
Shared Event Change
Shared Calendar Change
%@ - Failed to create a valid persistent coordinator or store; context will be nil!
+[EKSideTableContext sideTableContext]
Alarm
fireTime > %@
fireTime
fireTime >= %@ and fireTime <= %@
Setting
key = %@
value
Unable to recover by deleting old database! %@, %@
SideTables
momd
Failed to load schema at %@
Error while importing %@, %@
Creating new database...
Created new database successfully.
Second Error while creating new database %@, %@
%@ - Unable to remove sqlite files
-[EKSideTableContext _persistentStoreCoordinator]
v24@?0@"NSString"8@"EKTravelEngineHypothesis"16
v16@?0@"NSString"8
v12@?0B8
For %@
DatabaseChangedFilterIdentifier
entityID
com.apple.calendar.notifications.TriggeredEvent
com.apple.calendar.notifications.TriggeredEvent.Snooze
com.apple.calendar.notifications.TriggeredEvent.Directions
com.apple.calendar.notifications.TriggeredEvent.ConferenceCall
com.apple.calendar.notifications.TriggeredEvent.MailOrganizer
com.apple.calendar.notifications.TriggeredEvent.Directions.Snooze
com.apple.calendar.notifications.TriggeredEvent.ConferenceCall.Snooze
com.apple.calendar.notifications.TriggeredEvent.MailOrganizer.Snooze
com.apple.calendar.notifications.TriggeredEvent.Directions.ConferenceCall
com.apple.calendar.notifications.TriggeredEvent.Directions.MailOrganizer
com.apple.calendar.notifications.TriggeredEvent.ConferenceCall.MailOrganizer
com.apple.calendar.notifications.TriggeredEvent.Directions.ConferenceCall.Snooze
com.apple.calendar.notifications.TriggeredEvent.Directions.ConferenceCall.MailOrganizer
com.apple.calendar.notifications.TriggeredEvent.Directions.MailOrganizer.Snooze
com.apple.calendar.notifications.TriggeredEvent.ConferenceCall.MailOrganizer.Snooze
com.apple.calendar.notifications.TriggeredEvent.Directions.ConferenceCall.MailOrganizer.Snooze
_30m_before
_15m_before
_5m_before
_before
_after
CALNNotificationAcceptAction
Replace
Remove
<%@: %p>(title = %@, location = %@, startDate = %@, endDate = %@, isAllDay = %@, eventID = %@, eventOccurrenceID = %@, calendarIdentifier = %@, eventRepresentationDictionary = %@, legacyIdentifier = %@, preferredLocation = %@, conferenceURL = %@, mailtoURL = %@, hasSuggestedLocation = %@, eventHasAlarms = %@, allowsLocationAlerts = %@, forceDisplayOfNewTravelAdvisoryHypotheses = %@, locationWithoutPrediction = %@)
<%@: %p>(sourceClientIdentifier = %@, calendarNotification = %@), isDelegate = %@, sourceTitle = %@, sourceIdentifier = %@)
v16@?0@"NSDate"8
travelEngine.geoCodedLocationEncountered
hypothesizerActivated
hypothesizerSentHypothesis
travelTimeThresholdExceededState
maximumTravelDurationEncountered
travelEngine.eligibleEvents
emi-%@-%@
travelEngine.enhanceLocation
hasLocationMapKitHandle
hasGeoLocation
locationIsAConferenceRoom
automaticGeocodingAllowed
gotError
gotResult
errorDomain
errorCode
v24@?0@"MKMapItem"8@"NSError"16
PreHypothesizing
Hypothesizing
UnableToHypothesizePermanently
UnableToHypothesizeTemporarily
DoneHypothesizing
(unknown: %lu)
<%@: %p>(sourceClientIdentifier = %@, calendarNotification = %@, isDelegate = %@, sourceTitle = %@, sourceIdentifier = %@)
com.apple.calendar.notifications.EventInvitationResponse
EventInvitationResponse.ProposedTime
notification.hiddenPreviewsBodyPlaceholder.event.invitationResponse
EventInvitationResponseNotificationAcceptButton
EventInvitationResponseNotificationDeclineButton
EventNotificationDefaultTitleAttendeeReply
Attendee Response
CALNSchedulingSnoozeUpdateTimer
CALNActivitySchedulerDelegate
CALNSnoozeUpdateTimer
NSObject
CALNNullIconProvider
CALNNotificationIconProvider
CALNCalendarIconIdentifierProvider
CalIconProvider
CALNTriggeredEventNotificationActionUtilities
CALNTriggeredEventNotificationFeedbackHelper
CALNTriggeredEventNotificationLaunchURLProvider
CALNNotificationRecordsDiff
CALNNotificationRecordsDiffer
CALNNotificationStorageWrapper
CALNNotificationStorage
CALNDefaultIconIdentifierVersionProvider
CALNIconIdentifierVersionProvider
CALNNotificationRecordsDiffApplier
CALNEventInvitationResponseNotificationInfo
CALNSharedCalendarInvitationResponseNotificationSource
CALNNotificationSource
CALNNotificationResponseDelegate
CALNTimeToLeaveEventTrackerUtilities
CALNNotificationCategory
NSCopying
CALNEventInvitationNotificationInfo
CALNEventRepresentationDataSourceUtils
CALNTriggeredEventNotificationResponseDataPayloadMapper
CALNUNNotificationActionMapper
CALNEventInvitationNotificationSource
UnitTesting
CALNFilteredNotificationManager
CALNNotificationManager
CALNNotificationAction
CALNTravelAdvisoryUtilities
CALNXPCActivityScheduler
CALNActivityScheduler
CALNDefaultTravelAdvisoryAuthority
CALNTravelAdvisoryAuthority
CALNCalAnalyticsHandler
CALNAnalyticsHandler
CALNTriggeredEventNotificationEKDataSource
CALNTravelEngineDelegate
CALNTimeToLeaveRefreshMonitorDelegate
CALNTriggeredEventNotificationDataSource
CALNSyntheticRouteHypothesizer
CALNSyntheticRouteHypothesizerProtocol
CALNRouteHypothesizer
CADSyntheticRouteHypothesizer
CALNTriggeredEventNotificationSourceNotificationInfo
CALNSharedCalendarInvitationNotificationSource
CALNUNDefaultUserNotificationCenter
CALNUNUserNotificationCenterProtocol
CALNNotificationSourceRefresher
CALNNotificationRecordResponse
CALNNotificationServer
CADModule
CalActivatable
CalDarwinNotificationReceiver
CalAlarmReceiver
CalDataProtectionObservable
CALNUserNotificationCenterDelegate
CALNUNNotificationResponseMapper
CALNSuggestedEventNotificationInfo
CALNEKTTLEventTracker
CALNTTLEventTracker
CALNUNNotificationMapper
CALNNotificationRequest
NSSecureCoding
NSCoding
CALNNotificationRecord
NSMutableCopying
CALNMutableNotificationRecord
CALNDateStringUtils
CALNGEORouteHypothesizer
CALNEventCanceledNotificationInfo
CALNUNUserNotificationCenter
UNUserNotificationCenterDelegate
CALNUserNotificationCenter
CALNNotificationContent
CALNMutableNotificationContent
CALNNullCoreLocationProvider
CALNCoreLocationProvider
CALNNotificationMapper
CALNEventCanceledNotificationEKDataSource
CALNEventCanceledNotificationDataSource
CALNPersistentNotificationStorage
CALNTriggeredEventNotificationMailtoURLProvider
CALNNotificationIdentifierComponents
CALNNotificationIdentifier
CALNNotification
CALNEventCanceledNotificationSource
CALNInMemoryNotificationStorage
CALNEventRepresentationSourceUtils
CALNSyntheticRouteHypothesizerProvider
CALNRouteHypothesizerProvider
CALNNotificationIconUpdater
CALNNotificationResponse
CALNNotificationIconCache
CALNIconCache
CALNTriggeredEventNotificationTriggerData
CALNDefaultTimeToLeaveRefreshMonitor
CALNTimeToLeaveRefreshMonitor
CALNEKAlarmEngineMonitor
CALNAlarmEngineMonitor
CALNInMemoryTriggeredEventNotificationDataStorage
CALNTriggeredEventNotificationDataStorage
UserInfoUtils
CALNNullRemoteMutator
CALNRemoteMutator
CALNDataAccessExpressSharedConnection
CALNDataAccessExpressConnection
CALNCUIKIconProvider
CALNCalendarResourceChangedNotificationInfo
CALNInboxNotificationMonitor
CALNInboxNotificationProvider
CALNCalendarCoreLocationManager
CALNGEORouteHypothesizerProvider
CALNLogSubsystem
CALNModuleProvider
CADModuleProvider
CALNEKTravelAdvisoryTimelinessAuthority
CALNTravelAdvisoryTimelinessAuthority
CALNSuggestedEventNotificationSource
CALNUNNotificationSoundMapper
CALNRemoteMutatorShared
CALNDefaultTriggeredEventNotificationMapItemURLProvider
CALNTriggeredEventNotificationMapItemURLProvider
CALNEKSuggestionsServiceLogger
CALNSuggestionsServiceLogger
CALNDefaultTriggeredEventNotificationTransitionProvider
CALNTriggeredEventNotificationTransitionProvider
CALNEKUIEventRepresentationProvider
CALNDataSourceEventRepresentationProvider
CALNSourceEventRepresentationProvider
CALNRouteHypothesisMapper
EKTravelEngine
CLLocationManagerDelegate
CALNNotificationUtilities
CALNSuggestedEventNotificationEKDataSource
CALNSuggestedEventNotificationDataSource
CALNUNNotificationCategoryMapper
CALNLaunchServicesURLHandler
CALNURLHandler
CALNUNNotificationContentMapper
CALNTriggeredEventNotificationSource
CALNTriggeredEventNotificationDataSourceDelegate
CALNSnoozeUpdateTimerDelegate
CALNEKFoundInAppsEventTracker
CALNFoundInAppsEventTracker
_EKAlarmEngine
CALNCUIKTravelAdvisoryDescriptionGenerator
CALNTravelAdvisoryDescriptionGenerator
CALNInMemoryTimeToLeaveRefreshStorage
CALNTimeToLeaveRefreshStorage
CALNEventInvitationNotificationEKDataSource
CALNEventInvitationNotificationDataSource
CALNDefaultTriggeredEventNotificationTriggerHelper
CALNTriggeredEventNotificationTriggerHelper
CALNCalendarAppBadgeUpdater
CALNUNNotificationPresentationOptionsMapper
CALNTriggeredEventNotificationSourceClientIdentifierUtilities
CALNResourceChangedNotificationDataSourceUtils
CALNTriggeredEventNotificationData
CALNMutableTriggeredEventNotificationData
CALNNotificationDataSourceUtils
CALNNullAlarmEngineMonitor
CALNEventInvitationNotificationDataSourceUtils
CALNNotificationSound
CALNMutableNotificationSound
CALNNotificationServerModule
CALNFakeNotificationSource
EKSideAlarm
EKTravelEngineThrottle
EKTravelEngineOriginalEvent
CALNTriggeredEventNotificationResponseData
CALNDefaultTriggeredEventNotificationBodyDescriptionProvider
CALNTriggeredEventNotificationBodyDescriptionProvider
EKCalendarItemAlertInfo
CALNEKDebugPreferences
CALNDebugPreferences
CALNNullTimeToLeaveRefreshMonitor
CALNNullTravelEngine
CALNTravelEngine
CALNLegacyIdentifierUtils
CALNUNUserNotificationCenterFactory
CALNUserNotificationCenterFactory
CALNBundle
CALNCalendarResourceChangedNotificationSource
CALNSnoozeCategory
CALNDefaultEKCalendarNotificationReferenceProvider
CALNEKCalendarNotificationReferenceProvider
CALNPersistentTimeToLeaveRefreshStorage
EKSideTableContext
CALNEKTravelEngine
CALNNotificationSourceUtils
CALNUNNotificationRequestMapper
CALNEventInvitationResponseNotificationEKDataSource
CALNEventInvitationResponseNotificationDataSource
CALNNotificationFilterUtils
CALNMSMailAccounts
CALNMailAccounts
CALNNotificationFilter
CALNTriggeredEventNotificationTransitionUtilities
CALNUNNotificationIconMapper
CALNTriggeredEventNotificationInfo
CALNSharedCalendarInvitationNotificationInfo
EKTravelEngineAgendaEntry
CALNSharedCalendarInvitationNotificationEKDataSource
CALNSharedCalendarInvitationNotificationDataSource
CALNSharedCalendarInvitationResponseNotificationInfo
CALNSharedCalendarInvitationResponseNotificationEKDataSource
CALNSharedCalendarInvitationResponseNotificationDataSource
CALNCalendarResourceChangedNotificationEKDataSource
CALNCalendarResourceChangedNotificationDataSource
CALNCLCoreLocationProvider
CALNPersistentTriggeredEventNotificationDataStorage
CALNEventInvitationResponseNotificationSource
CGImage
CalIsAfterOrSameAsDate:
T@"<CALNFoundInAppsEventTracker>",R,N,V_foundInAppsEventTracker
CalIsBeforeOrSameAsDate:
T@"<CALNTravelAdvisoryAuthority>",R,N,V_travelAdvisoryAuthority
T#,R
T@"CALNCalAnalyticsHandler",R,N
T@"<CALNActivitySchedulerDelegate>",W,N,V_delegate
T@"CALNInMemoryTimeToLeaveRefreshStorage",R,N,V_inMemoryStorage
T@"<CALNAnalyticsHandler>",R,N,V_analyticsHandler
T@"CALNNotificationSound",C,D,N
T@"<CALNCalendarResourceChangedNotificationDataSource>",R,N,V_dataSource
T@"NSArray",R,N
T@"<CALNDataAccessExpressConnection>",R,N,V_dataAccessExpressConnection
T@"NSString",R,C,N,V_identifier
T@"<CALNDebugPreferences>",R,N,V_debugPreferences
T@"NSURL",C,D,N
T@"<CALNEventCanceledNotificationDataSource>",R,N,V_dataSource
T@?,R,N
T@"<CALNEventInvitationResponseNotificationDataSource>",R,N,V_dataSource
TB,N,V_isProtectedDataAvailable
T@"<CALNIconIdentifierVersionProvider>",R,N,V_identifierVersionProvider
Td,R,N,V_leeway
T@"<CALNMailAccounts>",R,N,V_mailAccounts
_active
T@"<CALNNotificationManager>",R,N,V_notificationManager
_alertInfoAlarmIDFromSideAlarm:
T@"<CALNNotificationManager>",R,W,N,V_notificationManager
_allowedCharacterSetForEncodingNotificationIdentifierComponents
T@"<CALNNotificationStorage>",&,V_wrappedStorage
_enableTravelAdvisoriesForAutomaticBehaviorNotificationReceived
T@"<CALNNotificationStorage>",R,N,V_storage
_eventHasAlarms
T@"<CALNRouteHypothesizer>",&,N,V_hypothesizer
_expirationDate
T@"<CALNRouteHypothesizerProvider>",R,N,V_routeHypothesizerProvider
_filterCriteria
T@"<CALNSharedCalendarInvitationResponseNotificationDataSource>",R,N,V_dataSource
_hasDisplayedRunningLateMessage
T@"<CALNSnoozeUpdateTimerDelegate>",W,N
_lastCheckpoint
T@"<CALNSourceEventRepresentationProvider>",R,N,V_sourceEventRepresentationProvider
_locationString
T@"<CALNTTLEventTracker>",R,N,V_ttlEventTracker
_pendingChanges
T@"<CALNTimeToLeaveRefreshMonitorDelegate>",W,N
_refreshDateMap
T@"<CALNTimeToLeaveRefreshStorage>",R,N,V_storage
_resetSyncTimer
T@"<CALNTravelAdvisoryDescriptionGenerator>",R,N,V_travelAdvisoryDescriptionGenerator
_settingForKey:
T@"<CALNTravelEngine>",R,N,V_travelEngine
_suffix
T@"<CALNTravelEngineDelegate>",W,N,V_delegate
_travelAdvisoryTimelinessPeriod
T@"<CALNTriggeredEventNotificationDataSourceDelegate>",W,N
_updateLocaleReloadIfDifferent:
T@"<CALNTriggeredEventNotificationDataStorage>",R,N,V_notificationDataStorage
_validForAllDay
T@"<CALNTriggeredEventNotificationTransitionProvider>",R,N,V_transitionProvider
_yieldingToSync
T@"<CALNUNUserNotificationCenterProtocol>",R,N,V_userNotificationCenter
address
T@"<CALNUserNotificationCenter>",R,N,V_userNotificationCenter
alarmsBetweenStartDate:endDate:
T@"<CALNUserNotificationCenterDelegate>",W,N,V_delegate
appLink
T@"<CalIconProvider>",R,N
cancelEmissionHypothesisRefresh
T@"<EKEventStoreProvider>",R,N,V_eventStoreProvider
containsObject:
T@"<UNUserNotificationCenterDelegate>",W,N
contentForNotificationWithInfo:
T@"CADRouteHypothesis",&,N
dateWithTimeInterval:sinceDate:
T@"CADSyntheticRouteHypothesizerCache",R,N,V_syntheticRouteHypothesizerCache
dealloc
T@"CALNCUIKTravelAdvisoryDescriptionGenerator",R,N
deleteAllAlarms
T@"CALNCalendarCoreLocationManager",R,N,V_coreLocationManager
endDate
T@"CALNDefaultTravelAdvisoryAuthority",R,N
eventIdentifier
T@"CALNEKFoundInAppsEventTracker",R,N
handleMailOrganizerActionWithSourceClientIdentifier:hypothesis:
T@"CALNEKTTLEventTracker",R,N
inMemoryStorage
T@"CALNInMemoryNotificationStorage",R,N,V_inMemoryStorage
initWithNotificationIconMapper:
T@"CALNMSMailAccounts",R,N
initWithTrigger:alarmID:isOffsetFromTravelTimeStart:hypothesis:
T@"CALNNotificationAction",R,N
isEqualToSound:
T@"CALNNotificationContent",R,C,N,V_content
isProxy
T@"CALNNotificationIconCache",R,N,V_notificationIconCache
isTimeSensitive
T@"CALNNotificationRequest",R,C,N,V_request
locationChanged
T@"CALNNotificationSound",R,C,N,V_sound
locationStringWithoutPrediction
T@"CALNNullAlarmEngineMonitor",R,N
modules
T@"CALNNullRemoteMutator",R,N
T@"CALNNullTravelEngine",R,N
options
T@"CALNSyntheticRouteHypothesizerProvider",R,N
protectedDataDidBecomeAvailable
T@"CALNTriggeredEventNotificationSource",R,N,V_triggeredEventNotificationSource
removeAllDeliveredNotifications
T@"CALNUNNotificationIconMapper",R,N,V_notificationIconMapper
request
T@"CALNUNNotificationRequestMapper",R,N,V_notificationRequestMapper
routing
T@"CALNUNUserNotificationCenterFactory",R,N
running
T@"CalGeocoder",&,N,V_geocoder
setAdviceBlock:
T@"EKCalendarNotification",R,N,V_calendarNotification
setDay:
T@"EKCalendarSuggestionNotification",R,N,V_suggestionNotification
setHasDisplayedLeaveNowMessage:
T@"EKStructuredLocation",R,N,V_preferredLocation
setMergePolicy:
T@"EKTravelEngine",R,N,V_travelEngine
setTriggerType:
T@"EKTravelEngineHypothesis",C,D,N
setUpdateBlock:
T@"EKTravelEngineHypothesis",R,N
sharedGenerator
T@"EKTravelEngineOriginalEvent",&,N,V_originalEventInternal
shouldPlaySound
T@"EKTravelEngineThrottle",&,N,V_throttle
sources
T@"NSArray",C,D,N
stringByAppendingPathComponent:
T@"NSArray",R,C,N,V_addedRecords
stringByRemovingPercentEncoding
T@"NSArray",R,C,N,V_peopleIdentifiers
summaryArgument
T@"NSArray",R,N,V_actions
systemImageName
T@"NSArray<CALNNotificationSource>",R,C,N,V_sources
trigger
T@"NSData",&,N,V_mapKitHandle
updateIconsToNewVersionIfNeeded
T@"NSDate",&,N,V_endDate
weekday
.cxx_destruct
CalIsAfterDate:
CalIsBeforeDate:
T@"<CALNSuggestedEventNotificationDataSource>",R,N,V_dataSource
CalSimulatedDateForNow
T@"<CALNTriggeredEventNotificationDataSource>",R,N,V_dataSource
T@"<CALNActivitySchedulerDelegate>",W,N
T@"CALNDefaultTriggeredEventNotificationMapItemURLProvider",R,N
T@"<CALNAlarmEngineMonitor>",R,N,V_alarmEngineMonitor
T@"CALNInboxNotificationMonitor",R,N,V_inboxNotificationMonitor
T@"<CALNCalendarIconIdentifierProvider>",R,N,V_iconIdentifierProvider
T@"CALNNotificationStorageWrapper",R,N,V_calendarStorageWrapper
T@"<CALNCoreLocationProvider>",R,N,V_coreLocationProvider
T@"NSString",R,C,N,V_alertTopic
T@"<CALNDataSourceEventRepresentationProvider>",R,N,V_dataSourceEventRepresentationProvider
T@"NSTimeZone",R,C,N,V_timeZone
T@"<CALNEKCalendarNotificationReferenceProvider>",R,N,V_notificationReferenceProvider
T@"NSURL",R,C,N,V_conferenceURL
T@"<CALNEventInvitationNotificationDataSource>",R,N,V_dataSource
TB,N,V_geocodedEventEncountered
T@"<CALNIconCache>",R,N,V_iconCache
TB,R,N,V_allDay
T@"<CALNInboxNotificationProvider>",R,N,V_inboxNotificationProvider
T@"<CALNNotificationIconProvider><CALNCalendarIconIdentifierProvider><CalIconProvider>",R,N,V_iconProvider
_addRefreshDate:withIdentifier:
T@"<CALNNotificationManager>",R,N,V_wrappedNotificationManager
_allDay
T@"<CALNNotificationStorage>",&,N,V_storage
_bundle
T@"<CALNNotificationStorage>",R,N,V_protectedStorage
_entrySignificantlyChangedBlock
T@"<CALNRemoteMutator>",R,N,V_remoteMutator
_eventSignificantlyChangedBlock
T@"<CALNRouteHypothesizerProvider>",R,N,V_hypothesizerProvider
_filesToMigrate
T@"<CALNSharedCalendarInvitationNotificationDataSource>",R,N,V_dataSource
_handle
T@"<CALNSnoozeUpdateTimer>",R,N,V_snoozeUpdateTimer
_iconIdentifier
T@"<CALNSnoozeUpdateTimerDelegate>",W,N,V_delegate
_leeway
T@"<CALNSuggestionsServiceLogger>",R,N,V_suggestionsServiceLogger
_notificationRecordWithSourceIdentifier:sourceClientIdentifier:
T@"<CALNTimeToLeaveRefreshMonitor>",R,N,V_timeToLeaveRefreshMonitor
_performAnalyticsPostProcessing
T@"<CALNTimeToLeaveRefreshMonitorDelegate>",W,N,V_delegate
_removedRecords
T@"<CALNTimeToLeaveRefreshStorage>",R,N,V_timeToLeaveRefreshStorage
_routineManager
T@"<CALNTravelAdvisoryTimelinessAuthority>",R,N,V_travelAdvisoryTimelinessAuthority
_shouldHideTime
T@"<CALNTravelEngineDelegate>",W,N
_syncYieldTimer
T@"<CALNTriggeredEventNotificationBodyDescriptionProvider>",R,N,V_bodyDescriptionProvider
_travelAgendaTimeWindowInterval
T@"<CALNTriggeredEventNotificationDataSourceDelegate>",W,N,V_delegate
_updatedRecord:
T@"<CALNTriggeredEventNotificationMapItemURLProvider>",R,N,V_mapItemURLProvider
_wrappedStorage
T@"<CALNTriggeredEventNotificationTriggerHelper>",R,N,V_triggerHelper
actions
T@"<CALNURLHandler>",R,N,V_urlHandler
alarmID
T@"<CALNUserNotificationCenterDelegate>",W,N
alerted
T@"<CalDateProvider>",R,N,V_dateProvider
bundleForClass:
T@"<CalIconProvider>",R,N,V_iconProvider
conflictDetails
T@"<EKNotificationPreferences>",R,N,V_preferences
content
T@"BSServiceConnectionEndpoint",R,N,V_targetConnectionEndpoint
currentCalendar
T@"CADRouteHypothesis",&,N,VcurrentCADRouteHypothesis
T@"CALNCUIKIconProvider",R,N
defaultCategory
T@"CALNCalendarAppBadgeUpdater",R,N,V_calendarAppBadgeUpdater
descriptionText
T@"CALNDefaultEKCalendarNotificationReferenceProvider",R,N
eventID
T@"CALNEKDebugPreferences",R,N
fetchEventCanceledNotifications
T@"CALNEKSuggestionsServiceLogger",R,N
hasAlertContent
T@"CALNGEORouteHypothesizerProvider",R,N
initWithDateProvider:scheduler:
T@"CALNInMemoryTriggeredEventNotificationDataStorage",R,N,V_inMemoryStorage
initWithString:
T@"CALNNotification",R,N,V_notification
invitationNotificationsDisabled
T@"CALNNotificationContent",C,D,N
isLocationEvent
T@"CALNNotificationIconCache",R,N,V_iconCache
isSelfOrganized
T@"CALNNotificationRecord",R,N,V_notificationRecord
locationAddress
T@"CALNNotificationServer",R,N,V_calendarNotificationServer
locationManager:didEnterRegion:
T@"CALNNotificationSourceRefresher",R,N,V_notificationSourceRefresher
modifiedRecords
T@"CALNNullIconProvider",R,N
notificationDataWithIdentifier:
T@"CALNNullTimeToLeaveRefreshMonitor",R,N
numberWithBool:
T@"CALNSchedulingSnoozeUpdateTimer",R,N,V_snoozeUpdateTimer
ownerID
T@"CALNTriggeredEventNotificationMailtoURLProvider",R,N,V_mailtoURLProvider
release
T@"CALNUNNotificationContentMapper",R,N,V_notificationContentMapper
removeIconWithIdentifier:error:
T@"CALNUNNotificationMapper",R,N,V_notificationMapper
requestHypothesisRefreshAtDate:
T@"CALNUNNotificationResponseMapper",R,N,V_notificationResponseMapper
routingModeEnumForCalRouteType:
T@"CLLocation",&,N,V_geoLocation
T@"EKCalendarEventInvitationNotification",R,N,V_eventInvitationNotification
setArrivalDate:
T@"EKCalendarResourceChangeNotification",R,N,V_calendarNotification
setGeoLocation:
T@"EKConflictDetails",R,N,V_conflictDetails
setIsOffsetFromTravelTimeStart:
T@"EKTravelAdvisoryTimelinessAuthority",R,N,V_travelAdvisoryTimelinessAuthority
setTravelState:
T@"EKTravelEngineHypothesis",&,N,V_latestHypothesis
setUndoManager:
T@"EKTravelEngineHypothesis",R,C,N,V_hypothesis
setWithObjects:
T@"EKTravelEngineHypothesis",R,N,V_hypothesis
sharedOwnerName
T@"EKTravelEngineOriginalEvent",R,N
snoozeUntil5MinutesBeforeAction
T@"GEORouteHypothesizer",R,N,V_routeHypothesizer
storage
T@"NSArray",R,C,N,V_actions
stringByAppendingPathExtension:
T@"NSArray",R,C,N,V_modifiedRecords
stringFromDate:
T@"NSArray",R,C,N,V_removedRecords
syntheticRouteHypothesizerCache
T@"NSArray",R,N,V_modules
timeToLeaveRefreshMonitor:refreshTimerFiredForEventExternalURL:
T@"NSData",&,N,V_locationMapKitHandle
ttlEventTracker
T@"NSDate",&,D,N
T@"NSDate",&,N,V_fireDate
T@"NSDate",&,N,V_lastFireTimeOfAlertOffsetFromTravelTime
T@"NSDate",&,N,V_lastTimeBulletinAdded
T@"NSDate",&,N,V_nextEmissionDate
T@"NSDate",&,N,V_startDate
T@"NSDate",C,D,N
T@"NSDate",R,C,N,V_date
T@"NSDate",R,C,N,V_endDate
T@"NSDate",R,C,N,V_expirationDate
T@"NSDate",R,C,N,V_lastFireTimeOfAlertOffsetFromTravelTime
T@"NSDate",R,C,N,V_lastTimeNotificationAdded
T@"NSDate",R,C,N,V_startDate
T@"NSDate",R,N,V_endDate
T@"NSDate",R,N,V_eventDate
T@"NSDictionary",C,D,N
T@"NSDictionary",R,C,N,V_eventRepresentationDictionary
T@"NSDictionary",R,C,N,V_userInfo
T@"NSMutableDictionary",&,N,V_notificationSourceMap
T@"NSMutableDictionary",R,N,V_eventURLToObjectIDMap
T@"NSMutableDictionary",R,N,V_notificationDataMap
T@"NSMutableDictionary",R,N,V_recordMap
T@"NSMutableDictionary",R,N,V_refreshDateMap
T@"NSNotificationCenter",R,N,V_notificationCenter
T@"NSNumber",&,D,N
T@"NSObject<OS_dispatch_queue>",&,N,V_callbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_throttleQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_workQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
T@"NSObject<OS_dispatch_queue>",R,N,V_workQueue
T@"NSObject<OS_os_log>",R,N
T@"NSString",&,D,N
T@"NSString",&,N,V_agendaEntryIdentifier
T@"NSString",&,N,V_eventExternalURL
T@"NSString",&,N,V_locationAddress
T@"NSString",&,N,V_locationString
T@"NSString",&,N,V_locationStringWithoutPrediction
T@"NSString",&,N,V_organizerEmailAddress
T@"NSString",&,N,V_startLocationRouting
T@"NSString",&,N,V_throttleIdentifier
T@"NSString",&,V_eventExternalURL
T@"NSString",C,D,N
T@"NSString",R,C
T@"NSString",R,C,N,V_actionIdentifier
T@"NSString",R,C,N,V_alarmID
T@"NSString",R,C,N,V_body
T@"NSString",R,C,N,V_calendarIdentifier
T@"NSString",R,C,N,V_categoryIdentifier
T@"NSString",R,C,N,V_categorySummaryFormat
T@"NSString",R,C,N,V_eventID
T@"NSString",R,C,N,V_eventObjectID
T@"NSString",R,C,N,V_eventOccurrenceID
T@"NSString",R,C,N,V_eventURI
T@"NSString",R,C,N,V_filterCriteria
T@"NSString",R,C,N,V_hiddenPreviewsBodyPlaceholder
T@"NSString",R,C,N,V_iconIdentifier
T@"NSString",R,C,N,V_legacyIdentifier
T@"NSString",R,C,N,V_location
T@"NSString",R,C,N,V_locationWithoutPrediction
T@"NSString",R,C,N,V_originIdentifier
T@"NSString",R,C,N,V_path
T@"NSString",R,C,N,V_sectionIdentifier
T@"NSString",R,C,N,V_sourceClientIdentifier
T@"NSString",R,C,N,V_sourceIdentifier
T@"NSString",R,C,N,V_sourceTitle
T@"NSString",R,C,N,V_stringRepresentation
T@"NSString",R,C,N,V_subtitle
T@"NSString",R,C,N,V_summaryArgument
T@"NSString",R,C,N,V_systemImageName
T@"NSString",R,C,N,V_threadIdentifier
T@"NSString",R,C,N,V_title
T@"NSString",R,N
T@"NSString",R,N,V_alarmID
T@"NSString",R,N,V_dismissalID
T@"NSString",R,N,V_externalID
T@"NSString",R,N,V_location
T@"NSString",R,N,V_publisherBulletinID
T@"NSString",R,N,V_sourceIdentifier
T@"NSString",R,N,V_suffix
T@"NSString",R,N,V_title
T@"NSTimeZone",R,N,V_eventTimeZone
T@"NSURL",R,C,N,V_defaultActionURL
T@"NSURL",R,C,N,V_launchURL
T@"NSURL",R,C,N,V_mailtoURL
T@"NSURL",R,C,N,V_mapItemURL
T@"NSURL",R,C,N,V_url
T@"NSURL",R,N,V_entityID
T@"NSUserActivity",R,N,V_appLink
T@"UISApplicationState",R,N,V_applicationState
T@"UNUserNotificationCenter",R,N,V_userNotificationCenter
T@"_EKAlarmEngine",R,N,V_alarmEngine
T@"_EKNotificationMonitor",R,N,V_notificationMonitor
T@?,C,N,V_adviceBlock
T@?,C,N,V_authorizationChangedBlock
T@?,C,N,V_cancelHypothesisRequestRefreshBlock
T@?,C,N,V_emissionBlock
T@?,C,N,V_entrySignificantlyChangedBlock
T@?,C,N,V_eventSignificantlyChangedBlock
T@?,C,N,V_requestHypothesisRefreshBlock
T@?,C,N,V_updateBlock
T@?,C,N,V_updateHandler
T@?,R,N,V_predicate
TB,D,N
TB,N,GisActive,V_active
TB,N,GisRegisteredForAlarms,V_registeredForAlarms
TB,N,V_authorizedInternal
TB,N,V_automaticGeocodingAllowed
TB,N,V_dismissed
TB,N,V_hasDisplayedLeaveByMessage
TB,N,V_hasDisplayedLeaveNowMessage
TB,N,V_hasDisplayedRunningLateMessage
TB,N,V_hasGeoLocationCoordinates
TB,N,V_hasOrganizerThatIsNotCurrentUser
TB,N,V_hasPredictedLocation
TB,N,V_hypothesizerSentAtLeastOneHypothesis
TB,N,V_isOnSharedCalendar
TB,N,V_isSuggestedLocation
TB,N,V_locationIsAConferenceRoom
TB,N,V_running
TB,R
TB,R,N
TB,R,N,V_acknowledged
TB,R,N,V_allowsLocationAlerts
TB,R,N,V_eventHasAlarms
TB,R,N,V_forceDisplayOfNewTravelAdvisoryHypotheses
TB,R,N,V_hasDisplayedLeaveByMessage
TB,R,N,V_hasDisplayedLeaveNowMessage
TB,R,N,V_hasDisplayedRunningLateMessage
TB,R,N,V_hasSuggestedLocation
TB,R,N,V_isAllDay
TB,R,N,V_isDelegate
TB,R,N,V_isLocationEvent
TB,R,N,V_isOffsetFromTravelTimeStart
TB,R,N,V_isPseudoEvent
TB,R,N,V_isTimeSensitive
TB,R,N,V_refiring
TB,R,N,V_shouldHideTime
TB,R,N,V_shouldPlaySound
TB,R,N,V_shouldPresentAlert
TB,R,N,V_shouldSuppressSyncDismissalWhenRemoved
TB,R,N,V_tentative
TI,R,N,V_changeType
TQ,D,N
TQ,N,V_currentRouteHypothesizerNotificationType
TQ,R
TQ,R,N
TQ,R,N,V_interruptionLevel
TQ,R,N,V_options
TQ,R,N,V_summaryArgumentCount
TQ,R,N,V_travelAdvisoryTimelinessPeriod
TQ,R,N,V_trigger
Td,N,V_maximumTravelDurationEncountered
Td,R,N
Ti,N,V_transportTypeOverride
Ti,R,N,V_databaseID
Tq,N
Tq,N,V_travelTimeThresholdExceededState
Tq,N,V_triggerType
Tq,R,N
Tq,R,N,V_alertType
Tq,R,N,V_proximity
T{CLLocationCoordinate2D=dd},N,V_geoLocationCoordinates
URLFragmentAllowedCharacterSet
URLWithString:
UTF8String
_accountForGeocodedEventEncounter
_acknowledgeSuggestedEventWithSourceClientIdentifier:accept:
_acknowledged
_actionIdentifier
_actions
_activate
_activeSources
_activeSourcesQueue
_activityIdentifier
_addEventURL:mappingToEventObjectID:
_addIconWithIdentifier:toCacheAtPath:
_addNotificationData:forSourceClientIdentifier:
_addNotificationData:withIdentifier:
_addNotificationDataForSourceClientIdentifier:sourceNotificationInfo:existingNotificationData:transition:now:
_addNotificationRecord:
_addRecord:
_addRecord:sourceNotificationInfo:existingNotificationData:trigger:transition:now:
_addSettingName:value:toStatsPayload:forTopicIdentifier:
_addedRecords
_adviceBlock
_adviceReceivedBlock
_agendaEntryIdentifier
_alarmDateForAlarm:eventStartDate:
_alarmEngine
_alarmEngineMonitor
_alarmForEvent:withAlarmID:
_alarmID
_alarmsMatchingPredicate:
_alertFiredForAlertInfo:
_alertInfoAlarmIDFromEKAlarm:
_alertTopic
_alertType
_alertsFired:
_allDayFormatter
_allowsLocationAlerts
_analyticsHandler
_appLink
_applicationState
_authorizationChangedBlock
_authorizedInternal
_authorizedToAcquireLocation
_automaticGeocodingAllowed
_body
_bodyDescriptionProvider
_bodyWithTravelAdvisoryForSourceClientIdentifier:sourceNotificationInfo:
_bodyWithoutTravelAdvisoryForSourceClientIdentifier:sourceNotificationInfo:
_calDatabaseChangedNotificationReceived
_calSyncClientBeginningMultiSaveNotificationReceived
_calSyncClientFinishedMultiSaveNotificationReceived
_calendarAppBadgeUpdater
_calendarIdentifier
_calendarNotification
_calendarNotificationServer
_calendarNotificationSettingChanged
_calendarStorageWrapper
_callbackQueue
_calnNotificationActionFromUNNotificationAction:
_calnNotificationActionIdentifierFromUNNotificationActionIdentifier:
_calnNotificationCategoryFromUNNotificationCategory:
_calnNotificationCategoryOptionsFromUNNotificationCategoryOptions:
_calnNotificationFromUNNotification:
_calnNotificationSoundFromUNNotificationContent:
_calnTravelAdvisoryTimelinessPeriodFromEKTravelAvisoryTimelinessPeriod:
_cancelHypothesisRequestRefreshBlock
_categoryIdentifier
_categorySummaryFormat
_changeType
_characterSetForEncodingIdentifierComponents
_clearEverything
_clearSuggestedEventNotificationWithObjectID:
_clearTravelAdvisoryFromNotificationMetaDataForSourceClientIdentifier:
_clearTravelAdvisoryHypotheses
_commonHandleResponse:
_conferenceURL
_conferenceURLForNotification:
_conflictDetails
_constructNotificationIdentifierStringRepresentationFromComponents:
_content
_contentForNotificationWithSourceClientIdentifier:
_contentForNotificationWithSourceClientIdentifier:shouldClearHypothesis:
_coreLocationManager
_coreLocationProvider
_createCacheDirectoryIfNeeded
_createCalendarNotificationServerWithUserNotificationCenterFactory:storage:eventStoreProvider:alarmEngineMonitor:travelEngine:timeToLeaveRefreshMonitor:timeToLeaveRefreshStorage:
_createEmissionHypothesisRefreshTimerWithDate:
_createEmissionTimerWithDate:
_createHypothesisRequestRefreshTimerWithDate:
_createHypothesizerForDestination:
_createNotificationServerWithUserNotificationCenter:storage:eventStoreProvider:alarmEngineMonitor:travelEngine:timeToLeaveRefreshMonitor:timeToLeaveRefreshStorage:
_createNotificationSourcesWithNotificationManager:eventStoreProvider:inboxNotificationProvider:alarmEngineMonitor:travelEngine:timeToLeaveRefreshMonitor:timeToLeaveRefreshStorage:
_createNotificationStorageAtPath:protected:
_createSyntheticHypothesis
_createTimeToLeaveRefreshStorageAtPath:
_createTriggeredEventNotificationDataStorageAtPath:protected:
_currentRouteHypothesizerNotificationType
_dataAccessExpressConnection
_dataSource
_dataSourceEventRepresentationProvider
_databaseChanged
_databaseID
_databaseIsEncryptedAndUnreadable
_date
_dateFormatter
_dateProvider
_dateTimeFormatter
_deactivate
_debugPreferences
_deconstructNotificationIdentifierStringRepresentationIntoComponents:
_defaultActionURL
_delegate
_dequeueEventsDueBy:
_destroyPersistentStoreAtURL:withType:options:error:
_didReceiveResponse:
_didSetNotificationSources:
_didSetUpTimeToLeaveRefreshTimerForEventID:triggerDate:
_directionsModeForHypothesis:routing:
_directionsModeForLocationRoutingMode:
_directionsModeForRouting:
_directionsModeForTransportType:
_dismissalID
_dismissed
_dispatchQueue
_emissionBlock
_emissionHypothesisRefreshTimerFired
_emissionTimerFired
_endDate
_enhanceLocation
_entityID
_eventDate
_eventExternalURL
_eventExternalURLsToAgendaEntries
_eventForEventID:
_eventForSourceClientIdentifier:
_eventForSourceClientIdentifier:eventStore:
_eventID
_eventInvitationNotification
_eventKitFeatureSetChanged
_eventLocationFromStructuredLocation:
_eventObjectID
_eventOccurrenceID
_eventOccurrenceWithURI:
_eventRepresentationDictionary
_eventRepresentationDictionaryWithSourceNotificationInfo:hypothesisMessage:
_eventSignficantlyChangedBlock
_eventStore
_eventStoreProvider
_eventTimeZone
_eventURI
_eventURLToObjectIDMap
_eventWillEndBeforeUserArrivesForHypothesis:eventEndDate:
_eventWithURI:checkValid:
_exceededMaximumTravelTimeThresholdForHypothesis:
_existingNotificationDataMatchingEventForSourceClientIdentifier:
_existingRecordMatchingEventForSourceClientIdentifier:
_existingRecordMatchingEventForSourceClientIdentifier:existingRecords:
_externalID
_fetchRecordsWithSourceIdentifier:
_filterAlerts:
_fireDate
_fireDates
_fireEmissionBlock
_forceDisplayOfNewTravelAdvisoryHypotheses
_foundInAppsEventTracker
_generateDestination
_geoLocation
_geoLocationCoordinates
_geocodedEventEncountered
_geocoder
_globalAlarmPreferencesChanged
_handleConferenceCallActionWithResponse:
_handleDirectionsActionWithResponse:
_handleMailOrganizerActionWithResponse:
_handleNotificationActionForSourceClientIdentifier:acknowledgeAlarm:eventActions:
_hasDisplayedLeaveByMessage
_hasDisplayedLeaveNowMessage
_hasGeoLocationCoordinates
_hasOrganizerThatIsNotCurrentUser
_hasPredictedLocation
_hasSuggestedLocation
_haveAlarmsChanged:
_hiddenPreviewsBodyPlaceholder
_hypothesis
_hypothesisDataForNotificationData:
_hypothesisFromPayload:
_hypothesisRefreshTimerFired
_hypothesizer
_hypothesizerProvider
_hypothesizerSentAtLeastOneHypothesis
_iconCache
_iconCacheDirectory
_iconIdentifierFromUNNotificationContent:
_iconIdentifierProvider
_iconProvider
_identifier
_identifierEncodingAllowedCharacters
_identifierVersionProvider
_inMemoryStorage
_inboxNotificationMonitor
_inboxNotificationProvider
_initWithAlarmID:isOffsetFromTravelTimeStart:lastFireTimeOfAlertOffsetFromTravelTime:hypothesis:hasDisplayedLeaveByMessage:hasDisplayedLeaveNowMessage:hasDisplayedRunningLateMessage:lastTimeNotificationAdded:
_initWithAlertType:alertTopic:
_initWithIdentifier:content:
_initWithTitle:subtitle:body:categoryIdentifier:sectionIdentifier:date:expirationDate:defaultActionURL:iconIdentifier:shouldHideTime:shouldSuppressSyncDismissalWhenRemoved:peopleIdentifiers:sound:userInfo:threadIdentifier:summaryArgument:summaryArgumentCount:interruptionLevel:filterCriteria:
_installLocationManager
_installPeriodicRefreshTimer
_installSyncYieldTimer
_installTimerWithFireDate:
_interruptionLevel
_isAlarmAcknowledgedWithAcknowledgedDate:fireDate:
_isAllDay
_isDataProtected
_isDelegate
_isLocationEvent
_isNotificationMetaDataExpired:eventID:
_isOffsetFromTravelTimeStart
_isOnSharedCalendar
_isProtectedDataAvailable
_isPseudoEvent
_isSuggestedLocation
_isTimeSensitive
_itemWithEventID:affectedByChangesToObjects:
_killSyncTimer
_killTimer
_lastCreatedEventStore
_lastDBSequenceToken
_lastFireTimeOfAlertOffsetFromTravelTime
_lastFireTimeOfAlertOffsetFromTravelTimeFromPayload:
_lastRefreshDate
_lastTimeBulletinAdded
_lastTimeNotificationAdded
_latestHypothesis
_launchURL
_launchURLForEventID:hypothesis:isTravelLaunchURL:
_launchURLForResponse:
_legacyIdentifier
_loadDataWithError:
_loadNotificationsWithError:
_location
_locationAddress
_locationIsAConferenceRoom
_locationManager
_locationMapKitHandle
_locationStringWithoutPrediction
_locationWithoutPrediction
_lock
_mailAccounts
_mailtoURL
_mailtoURLForNotification:
_mailtoURLProvider
_managedObjectModel
_mapItemNameFromEventLocation:
_mapItemURL
_mapItemURLForEventLocation:eventStartDate:hypothesis:
_mapItemURLForNotification:
_mapItemURLLaunchOptionsForDirectionsMode:eventDate:isFromTimeToLeaveNotification:
_mapItemURLLaunchOptionsForHypothesis:routing:eventStartDate:
_mapItemURLProvider
_mapKitHandle
_maximumTravelDurationEncountered
_mayCeaseRouteMonitoringForExistingNotificationData:
_mergeDataFromUnprotectedStore:withDataInProtectedStore:
_migrateNotificationFiles
_migrateNotificationFilesFromDirectory:toDirectory:
_modifiedRecords
_modules
_needsAlarmTablePopulation
_needsRefresh
_needsRefreshOnNotificationsLoaded
_nextEmissionDate
_nextFireDate
_notification
_notificationAddedWithSourceClientIdentifier:sourceNotificationInfo:trigger:
_notificationBodyForNotificationInfo:contactIdentifier:summaryArgument:
_notificationCenter
_notificationContentMapper
_notificationDataForSourceNotificationInfo:existingNotificationData:transition:now:
_notificationDataMap
_notificationDataStorage
_notificationExpirationDateForAlarmDate:eventEndDate:
_notificationExpirationDateForNullableAlarmDate:eventEndDate:
_notificationIconCache
_notificationIconMapper
_notificationInfoFromNotification:
_notificationInfoFromNotification:inEventStore:
_notificationInfoFromNotificationReference:
_notificationManager
_notificationMapper
_notificationMonitor
_notificationRecord
_notificationRecordResponseFromNotificationResponse:
_notificationRecords
_notificationReferenceProvider
_notificationRequestMapper
_notificationResponseDataForRecord:
_notificationResponseDataForSourceNotificationInfo:
_notificationResponseMapper
_notificationSourceMap
_notificationSourceMapWithNotificationSources:
_notificationSourceRefresher
_notificationStoragePathWithName:
_notificationWithSourceClientIdentifier:affectedByChangesToObjects:
_notifyAlarmsFired:
_openApplicationOptionsForResponse:
_options
_organizerEmailAddress
_originIdentifier
_originalEventInternal
_otherCriteria
_overdueDates
_parseIconIdentifier:intoDateComponents:calendar:type:
_path
_pathForCachedIconWithIdentifier:
_pathForPersistentStore
_pathForSentinelFile
_peopleIdentifiers
_periodicRefreshInterval
_periodicRefreshTimerFired
_persistentStoreCoordinator
_populateAlarmTable:
_populateFinished
_populateStart
_populating
_predicate
_preferences
_preferredLocation
_protected
_protectedCalendarNotificationStorage
_protectedDataDidBecomeAvailable
_protectedStorage
_protectedTriggeredEventNotificationDataStorage
_proximity
_publisherBulletinID
_queue
_recordMap
_refiring
_refreshIfNeeded
_refreshNotification:
_refreshNotificationMetaData:eventID:
_refreshNotificationMetaDataWithObjectIDs:
_refreshNotificationRecordsWithObjectIDs:
_refreshNotifications:
_refreshQueue
_refreshTimeToLeaveRefreshTimerWithRefreshDate:eventID:
_refreshTimeToLeaveRefreshTimersWithObjectIDs:
_refreshTimerAlarmNameForEventExternalURL:
_refreshTimerFiredForEventExternalURL:
_registerForNotificationObservation
_registerSettingsCaptureHandlers
_registeredForAlarms
_relativeToEnd
_reloadNotificationRecords:forNotificationServer:
_reloadNotificationsAfterFirstUnlock
_reloadNotificationsFromUnprotectedStorage:intoProtectedStorage:withStorageWrapper:forNotificationServer:
_reloadTriggeredEventNotificationData
_remoteMutator
_removeData
_removeNotificationDataWithIdentifier:
_removeNotificationRecordsPassingTest:
_removeNotificationsFromUnprotectedStorage:
_removeRecordWithSourceIdentifier:sourceClientIdentifier:
_removeRefreshDateWithIdentifier:
_removeSqliteFiles
_removeStoredNotificationDataForEventWithEventID:
_request
_requestHypothesisRefreshBlock
_requestHypothesisRefreshInterval
_requestHypothesisRefreshTimerFired
_rescheduleTimer
_resetStoredNotificationDataTimeToLeaveDisplayStateForSourceClientIdentifier:
_resolvedSourceClientIdentifierForNewSourceClientIdentifier:oldSourceClientIdentifier:
_routeHypothesizer
_routeHypothesizerProvider
_running
_saveDataWithError:
_saveNotificationsWithError:
_scheduleTimer
_scheduledFireDate
_scheduledOverdueDate
_scheduler
_sectionIdentifier
_sectionIdentifierFromTopicIdentifiers:
_sendFeedbackForPostingNotificationForEventWithExternalURL:feedback:
_sendFeedbackToHypothesizerForPostingNotification:
_setBodyForUNMutableNotificationContent:usingCALNNotificationContent:
_setHypothesisDataFromNotificationData:inPayload:
_setInterruptionLevelForCALNMutableNotificationContent:usingUNNotificationContent:
_setInterruptionLevelForUNMutableNotificationContent:usingCALNNotificationContent:
_setLastFireTimeOfAlertOffsetFromTravelTimeFromNotificationData:inPayload:
_setNotificationResponseData:onNotificationContent:
_setParticipantStatus:withSourceClientIdentifier:
_setPeopleIdentifiersForUNMutableNotificationContent:usingCALNNotificationContent:
_setProtectedClassForStorageAtPath:
_setSoundForUNMutableNotificationContent:usingCALNNotificationContent:
_setSubtitleForUNMutableNotificationContent:usingCALNNotificationContent:
_setSummaryArgumentForUNMutableNotificationContent:usingCALNNotificationContent:
_setThreadIdentifierForUNMutableNotificationContent:usingCALNNotificationContent:
_setTitleForUNMutableNotificationContent:usingCALNNotificationContent:
_setTopicIdentifiersForUNMutableNotificationContent:usingCALNNotificationContent:
_setUpRouteMonitoring
_setUserInfoForUNMutableNotificationContent:usingCALNNotificationContent:
_shouldAddNotificationForTravelAdviceReceivedForSourceClientIdentifier:sourceNotificationInfo:oldNotificationData:
_shouldCeaseRouteMonitoringEventForSourceClientIdentifier:
_shouldModifyForAlarmFiredForSourceClientIdentifier:sourceNotificationInfo:oldNotificationData:
_shouldPlaySound
_shouldPresentAlert
_shouldRemoveNotificationForTravelAdviceReceivedForSourceClientIdentifier:sourceNotificationInfo:oldNotificationData:
_shouldRemoveNotificationMetaData:eventID:
_shouldRemoveStoredNotificationDataGivenShouldWithdrawNotification:hasExistingTravelInformation:mayCeaseRouteMonitoring:
_shouldRemoveTimeToLeaveRefreshTimerWithRefreshDate:eventID:
_shouldSuppressSyncDismissalWhenRemoved
_shouldTriggerForAlertInfo:
_shouldTriggerForTimeToLeaveRefreshForSourceClientIdentifier:sourceNotificationInfo:oldNotificationData:
_shouldTriggerForTimeToLeaveRefreshGivenImmediateDepartureTimelinessStatusForSourceClientIdentifier:oldNotificationData:
_shouldTriggerForTravelAdviceReceivedForSourceClientIdentifier:sourceNotificationInfo:oldNotificationData:
_shouldTriggerForTravelAdviceReceivedGivenHasExistingNotificationDataForSourceClientIdentifier:hypothesis:sourceNotificationInfo:oldNotificationData:hasExistingTravelAdvice:satisfiesMinimumTravelTimeThreshold:
_shouldUpdateStoredNotificationDataGivenTransition:
_shouldUpdateWithForceForAlarmTable
_shouldWithdrawNotificationWithSourceClientIdentifier:event:alarmID:
_significantTimeChangeNotificationReceived
_simulatedOffsetChanged:
_snoozeUpdateTimer
_sound
_sourceClientIdentifier
_sourceClientIdentifier:matchesEventForSourceClientIdentifier:
_sourceClientIdentifierForAlertInfo:
_sourceClientIdentifiersForObjectIDs:
_sourceEventRepresentationProvider
_sourceIdentifier
_sourceNotificationInfoForSourceClientIdentifier:notificationInfo:existingNotificationData:hypothesis:shouldClearHypothesis:isOffsetFromTravelTimeStart:isForContentCreation:
_sourceNotificationInfoForSourceClientIdentifier:shouldClearHypothesis:isForContentCreation:
_sourceTitle
_sources
_spanForNewStatusWithEvent:
_startDate
_startLocationRouting
_statsPayloadKeyForSettingName:topicIdentifier:
_stopInternal
_storage
_storeAlarms:nextScheduleLimit:eventStore:
_stringRepresentation
_subtitle
_suggestEventLocationsSettingChanged
_suggestionNotification
_suggestionsServiceLogger
_summaryArgument
_summaryArgumentCount
_syncDidEnd
_syncDidStart
_syncTimer
_syncTimerFired:
_syntheticRouteHypothesizerCache
_systemImageName
_targetConnectionEndpoint
_tentative
_threadIdentifier
_throttle
_throttleIdentifier
_throttleQueue
_timeDidChangeSignificantly
_timeToLeaveRefreshMonitor
_timeToLeaveRefreshStorage
_timeToLeaveRefreshStoragePathWithName:
_timeToLeaveStateAlreadyDisplayedBasedOnSourceNotificationInfo:oldNotificationData:
_timeZone
_timeZoneChanged:
_timedEventStorePurger
_timedExpirationInterval
_timerFired
_title
_tomorrow
_trackTTLCandidateEvent:
_transitionForAlarmFiredForSourceClientIdentifier:sourceNotificationInfo:oldNotificationData:
_transitionForTimeToLeaveRefreshTimerFiredForSourceClientIdentifier:sourceNotificationInfo:oldNotificationData:
_transitionForTravelAdviceReceivedForSourceClientIdentifier:sourceNotificationInfo:oldNotificationData:
_transitionProvider
_transportTypeOverride
_travelAdvisoryAuthority
_travelAdvisoryAuthorizationChanged:
_travelAdvisoryDescriptionGenerator
_travelAdvisoryTimelinessAuthority
_travelAdvisoryTimelinessPeriodForHypothesis:
_travelEngine
_travelEngineEventSignificantlyChangedWithSourceClientIdentifier:
_travelLaunchURLForEventID:hypothesis:
_travelTimeThresholdExceededState
_trigger
_triggerHelper
_triggerType
_triggeredEventNotificationDataStoragePathWithName:
_triggeredEventNotificationSource
_triggeredWithSourceClientIdentifier:triggerData:
_trimAgendaEntriesBeforeDate:andAfterDate:
_ttlDescriptionTypeNumberForTravelAdvisoryTimelinessPeriod:
_ttlEventTracker
_unNotificationActionFromCALNNotificationAction:
_unNotificationCategoryFromCALNNotificationCategory:
_unNotificationCategoryOptionsFromCALNNotificationCategoryOptions:
_unNotificationIconFromCALNNotificationContent:
_uninstallEmissionHypothesisRefreshTimer
_uninstallEmissionTimer
_uninstallLocationManager
_uninstallPeriodicRefreshTimer
_uninstallRequestHypothesisRefreshTimer
_uninstallSyncYieldTimer
_unprotectedCalendarNotificationStorage
_unprotectedTriggeredEventNotificationDataStorage
_unregisterAllAgendaEntries
_updateAllIconIdentifiersInStorage:
_updateBlock
_updateDatabaseEncryptionState
_updateEmissionDate:
_updateHandler
_updateNotification:shouldClearHypothesis:
_updateRecord:
_updateSnoozeOptionsForEvents:
_updateSourceClientIdentifiersIfNeeded
_updateStoredNotificationDataForSourceClientIdentifier:sourceNotificationInfo:existingNotificationData:transition:now:
_updateTimeToLeaveRefreshTimerForSourceClientIdentifier:
_updateTimeToLeaveRefreshTimerForSourceClientIdentifier:hypothesis:allowsLocationAlerts:
_updateTravelTimeExceededThresholdStateUsingExceededValue:
_updateWithForceForAlarmTable:
_updateWithHypothesis:
_updatedLastFireTimeOfAlertOffsetFromTravelTimeGivenIsOffsetFromTravelTime:
_updatedNotificationDataResettingTimeToLeaveDisplayState:
_updatedSourceNotificationInfoForContentCreation:
_url
_urlForLocation:address:label:options:
_urlForMapItemHandles:options:
_urlForPersistentStore
_urlHandler
_userActivityUserInfoForEvent:
_userInfo
_userNotificationCenter
_withdrawExpiredNotificationsForSource:
_workQueue
_wrappedNotificationManager
aboutToPostNotification:
absoluteDate
absoluteString
acceptActionIdentifier
acceptEventInvitationResponseWithSourceClientIdentifier:
acceptEventInvitationWithSourceClientIdentifier:
acceptProposedTimeNotificationFromAttendee:
acceptSuggestedEvent:
acknowledgeEventWithSourceClientIdentifier:shouldMarkAsHavingReceivedLocation:
acknowledgeWithEventStore:error:
acknowledged
acknowledgedDate
acquireCachedEventStoreOrCreate:
actionIdentifier
actionWithIdentifier:title:options:icon:
actionWithIdentifier:title:systemImageName:
actionWithIdentifier:title:systemImageName:url:
actionWithIdentifier:title:url:options:icon:
activate
active
activityRun
addAlarmsFiredObserver:selector:
addIconsWithIdentifiers:error:
addNotificationCountChangedObserver:selector:
addNotificationData:withIdentifier:
addNotificationRecord:
addNotificationRecords:
addNotificationRequest:error:
addNotificationRequest:withCompletionHandler:
addNotificationsChangedObserver:selector:
addNotificationsLoadedObserver:selector:
addObject:
addObjectsFromArray:
addObserver:selector:name:
addObserver:selector:name:object:
addPersistentStoreWithType:configuration:URL:options:error:
addRecord:
addRefreshDate:withIdentifier:
addSyntheticRouteHypothesizer:forEventExternalURL:
addTimer:forMode:
addedRecords
adviceBlock
agendaEntryIdentifier
aggressiveDepartureDate
aggressiveTravelTime
alarmEngine
alarmEngineMonitor
alarmIDForSourceClientIdentifier:
alarmName
alarmOccurrencesBetweenStartDate:endDate:inCalendars:completion:
alarmWithExternalID:
alertSetting
alertStyle
alertTopic
alertType
allAlarms
allDay
allDescriptionStringsWithOptions:
allObjects
allValues
allocWithZone:
allowsLocationAlerts
altitude
analyticsHandler
appendString:
applicationState
applyDiff:toNotificationManager:
archivedDataWithRootObject:requiringSecureCoding:error:
array
arrayByAddingObjectsFromArray:
arrayWithCapacity:
arrayWithObject:
arrayWithObjects:count:
attendees
authorizationChangedBlock
authorizationStatus
authorizationStatusAsString:
authorizationStatusForBundle:
authorizationStatusForBundleIdentifier:
authorized
authorizedInternal
automaticGeocodingAllowed
automaticLocationGeocodingAllowed
autorelease
autoupdatingCurrentLocale
badgeSetting
body
bodyDescriptionProvider
bodyForSourceClientIdentifier:sourceNotificationInfo:bodyContainsTravelAdvice:
boolValue
brandedOriginDescriptionStringWithAppName:
build
bundle
bundleIdentifier
cachedIconPathForIconIdentifier:
calendar
calendarAppBadgeUpdater
calendarIdentifier
calendarItem
calendarNotification
calendarNotificationServer
calendarPreferences
calendarStorageWrapper
calendarWithExternalURI:
calendarWithIdentifier:
calendarWithSourceClientIdentifier:inEventStore:
calendarsForEntityType:
callbackQueue
calnNotificationActionsFromUNNotificationActions:
calnNotificationCategoriesFromUNNotificationCategories:
calnNotificationContentFromUNNotificationContent:
calnNotificationFromUNNotification:
calnNotificationRequestFromUNNotificationRequest:
calnNotificationResponseFromUNNotificationResponse:
calnNotificationSoundFromUNNotificationSound:
calnNotificationsFromUNNotifications:
canSendMail
cancel
cancelHypothesisRefreshRequest
cancelHypothesisRefreshRequestForEventWithExternalURL:
cancelHypothesisRequestRefreshBlock
carPlaySetting
categories
categoryIdentifier
categoryIdentifierWithReportJunk
categoryIdentifierWithoutReportJunk
categorySummaryFormat
categoryWithIdentifier:actions:hiddenPreviewsBodyPlaceholder:options:
categoryWithIdentifier:actions:hiddenPreviewsBodyPlaceholder:options:categorySummaryFormat:
categoryWithIdentifier:actions:intentIdentifiers:hiddenPreviewsBodyPlaceholder:categorySummaryFormat:options:
ceaseMonitoringForEventWithExternalURL:
ceaseRouteMonitoringEventForSourceClientIdentifier:
ceaseRouteMonitoringEventWithEventID:
changeType
changesSinceSequenceToken:completion:
characterSetWithCharactersInString:
class
clearCalendarResourceChangedNotificationWithSourceClientIdentifier:
clearCanceledEventNotificationWithSourceClientIdentifier:
clearEventInvitationOfType:withSourceClientIdentifier:inEventStore:withNotificationReferenceProvider:
clearEventInvitationResponseWithSourceClientIdentifier:
clearEventInvitationWithSourceClientIdentifier:
clearSharedCalendarInvitationResponseWithSourceClientIdentifier:
clearSharedCalendarInvitationResponseWithSourceClientIdentifier:inEventStore:
clearSharedCalendarInvitationWithSourceClientIdentifier:
clearSuggestedEventNotificationWithSourceClientIdentifier:
coalescedInfoForSuggestionNotifications:
coalescedSuggestedEventCategoryIdentifier
code
collectSettingsStats:
compare:
compare:options:range:
components:fromDate:
componentsJoinedByString:
componentsSeparatedByString:
conferenceCallAction
conferenceCallActionIdentifier
conferenceURL
conferenceURLForDisplay
conferenceURLUserInfoKey
confirmActionIdentifier
confirmSuggestedEventWithSourceClientIdentifier:
conflictStringForConflictDetails:maxTitleLength:
conformsToProtocol:
conservativeDepartureDate
conservativeTravelTime
constraints
contentForNotificationWithSourceClientIdentifier:
contentForSourceClientIdentifier:sourceNotificationInfo:isProtectedDataAvailable:
coordinate
copy
copyWithZone:
coreLocationManager
coreLocationProvider
couldBeJunk
couldBeJunkCategoryIdentifier
count
countByEnumeratingWithState:objects:count:
createAlarmWithName:atDate:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
createFileAtPath:contents:attributes:
createSentinelFileIfNeeded
createdRouteHypothesizer:forEventExternalURL:
cuik_isTimeSensitive
cuik_shouldShowNotificationWithUnselectedCalendarsForFocus:
currentCADRouteHypothesis
currentHypothesis
currentLocale
currentRouteHypothesizerNotificationType
currentRunLoop
currentTrafficDensity
dataAccessExpressConnection
dataIsAccessible
dataSource
dataSource:travelAdvisoryAuthorizationChanged:
dataSource:travelEngineEventSignificantlyChangedWithSourceClientIdentifier:
dataSource:triggeredWithSourceClientIdentifier:triggerData:
dataSourceEventRepresentationProvider
dataWithContentsOfFile:
databaseID
date
date:representsApproachingDepartureDateForHypothesis:
date:representsLatenessForHypothesis:
dateByAddingDays:inCalendar:
dateByAddingTimeInterval:
dateBySubtractingCalSimulatedOffset
dateChanged
dateProvider
dateTimeStringForEventDate:alwaysIncludeDate:allDayEvent:dateProvider:
dateWithTimeIntervalSince1970:
dateWithTimeIntervalSinceNow:
dateWithTimeIntervalSinceReferenceDate:
deactivate
debugDescription
debugPreferences
declineActionIdentifier
declineEventInvitationResponseWithSourceClientIdentifier:
declineEventInvitationWithSourceClientIdentifier:
declineProposedTimeNotificationFromAttendee:
declineSharedCalendarWithSourceClientIdentifier:
decodeBoolForKey:
decodeIntegerForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
defaultActionURL
defaultCategoryIdentifier
defaultCenter
defaultManager
defaultSuggestedEventCategoryIdentifier
defaultWorkspace
delegate
deleteActionIdentifier
deleteCanceledEventWithSourceClientIdentifier:
deleteCanceledSuggestedEventWithSourceClientIdentifier:
deleteEvent:inEventStore:withSpan:usingRemoteMutator:error:
deleteEvent:withSpan:
deleteObject:
deleteSuggestedEvent:
deliveredNotifications
description
descriptionForTransition:
dictionary
dictionaryRepresentation
dictionaryWithCapacity:
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:count:
dictionaryWithObjectsAndKeys:
didDismissUINotification:forPlannedDestination:dismissalType:
didPostUINotification:
didReceiveResponse:
didRegisterForAlarms
diffOldRecords:withNewRecords:filteredBySourceClientIDs:
diffWithAddedRecords:removedRecords:modifiedRecords:
directionsAction
directionsActionIdentifier
dismissalID
dismissed
displayNameForJunkIdentity:
distanceFromLocation:
distantFuture
doesHypothesisSatisfyMinimumAllowableTravelTime:
doesHypothesisSatisfyMinimumAllowableTravelTime:minimumAllowableTravelTime:
domain
doubleValue
ekTravelEngineHypothesisFromCADRouteHypothesis:
ekTravelEngineHypothesisFromGEORouteHypothesis:
elapsedTimeAsNumber:
emailAddress
emissionBlock
emissionHypothesisRefreshAlarmName
emissionThresholdTimeInterval
emptyDiff
encodeBool:forKey:
encodeInteger:forKey:
encodeObject:forKey:
encodeWithCoder:
entityDate
entityForName:inManagedObjectContext:
entityID
entityTimeZone
entityType
entityURI
entrySignificantlyChangedBlock
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
errorWithDomain:code:userInfo:
estimatedTravelTime
eventDate
eventExternalURL
eventForEventInvitation:inEventStore:
eventForNotificationOfType:withSourceClientIdentifier:inEventStore:withNotificationReferenceProvider:
eventForObjectID:occurrenceDate:checkValid:
eventHasAlarms
eventID:andAlarmID:fromSourceClientIdentifier:
eventIDForSourceClientIdentifier:
eventInvitationNotification
eventNotificationCount
eventNotificationReferences
eventObjectID
eventObjectIDForEventID:
eventOccurrenceID
eventRepresentationDictionary
eventRepresentationDictionaryForInvitationNotification:event:date:endDate:timeZone:
eventRepresentationDictionaryForResourceChangeNotification:message:date:endDate:timeZone:
eventRepresentationDictionaryForResponseNotificationWithTitle:message:
eventRepresentationDictionaryForSharedCalendarInvitationNotificationWithTitle:message:
eventRepresentationDictionaryForUpcomingEvent:date:displayTimeZone:
eventSignificantlyChangedBlock
eventStore
eventStoreProvider
eventTimeZone
eventURI
eventURLToObjectIDMap
eventWithSourceClientIdentifier:inEventStore:
eventsMatchingPredicate:
executeFetchRequest:error:
expirationDate
expirationDateForEventInvitation:
expirationDateForEventWithStartDate:endDate:isAllDay:
expirationDateForNotification:
externalID
externalKey
externalURI
externalURL
fetchCalendarResourceChangedNotificationSourceClientIdentifiers:
fetchCalendarResourceChangedNotificationWithSourceClientIdentifier:
fetchCalendarResourceChangedNotifications
fetchEventCanceledNotificationSourceClientIdentifiers:
fetchEventCanceledNotificationWithSourceClientIdentifier:
fetchEventInvitationNotificationSourceClientIdentifiers:
fetchEventInvitationNotificationWithSourceClientIdentifier:
fetchEventInvitationNotifications
fetchEventInvitationResponseNotificationSourceClientIdentifiers:
fetchEventInvitationResponseNotificationWithSourceClientIdentifier:
fetchEventInvitationResponseNotifications
fetchRecordsWithSourceIdentifier:
fetchSharedCalendarInvitationNotificationSourceClientIdentifiers:
fetchSharedCalendarInvitationNotificationWithSourceClientIdentifier:
fetchSharedCalendarInvitationNotifications
fetchSharedCalendarInvitationResponseNotificationSourceClientIdentifiers:
fetchSharedCalendarInvitationResponseNotificationWithSourceClientIdentifier:
fetchSharedCalendarInvitationResponseNotifications
fetchSuggestedEventNotificationObjectIDs
fetchSuggestedEventNotificationWithObjectID:
fetchSuggestedEventNotifications
fetchSuggestedEventNotificationsWithSourceClientIdentifier:
fetchTriggeredEventNotificationInfoWithSourceClientIdentifier:isProtectedDataAvailable:
fileExistsAtPath:
fileExistsAtPath:isDirectory:
fileURLWithPath:
filterCriteria
filterIdentifierForNotificationContent:
filterIdentifierForNotificationRecord:
fireDate
fireTime
firstObject
focusModeConfigurationChangedName
forceDisplayOfNewTravelAdvisoryHypotheses
forceRemoveAllCachedIconsWithError:
formattedStringForPhoneNumber:
foundInAppsEventTracker
fuzzyMaximumInitialUpdateIntervalBeforeStartDate
geoLocation
geoLocationCoordinates
geoRouteHypothesisTravelStateForString:
geoTrafficDensityForString:
geoTransportTypeAsString:
geoTransportTypeForCalLocationRoutingMode:
geoTransportTypeForString:
geocodedEventEncountered
geocoder
handleConferenceCallActionWithSourceClientIdentifier:
handleDarwinNotification:
handleDirectionsActionWithSourceClientIdentifier:hypothesis:lastFireTimeOfAlertOffsetFromTravelTime:
handleExternalDatabaseChangeNotification:
handleNotificationsChangedNotification:
handleNotificationsLoadedNotification
hasAlarms
hasBeenUnlockedSinceBoot
hasDisplayedLeaveByMessage
hasDisplayedLeaveNowMessage
hasDisplayedRunningLateMessage
hasGeoLocationCoordinates
hasOrganizerThatIsNotCurrentUser
hasPredictedLocation
hasPrefix:
hasProposedStartDate
hasRecurrenceRules
hasSound
hasSuffix:
hasSuggestedLocation
hash
hashTableWithOptions:
hiddenFromNotificationCenter
hiddenPreviewsBodyPlaceholder
hideCalendarFromNotificationCenter:inEventStore:
hideCalendarsFromNotificationCenter:error:
hypothesis
hypothesizer
hypothesizerForPlannedDestination:
hypothesizerProvider
hypothesizerSentAtLeastOneHypothesis
icon
iconAtPath:
iconCache
iconCacheDirectory
iconIdentifier
iconIdentifierForCachedIconPath:
iconIdentifierFromUNNotificationIcon:
iconIdentifierProvider
iconIdentifierVersion
iconProvider
iconVersionToUpgradeTo
iconWithSystemImageName:
identifier
identifierForIconWithDate:inCalendar:
identifierVersionProvider
ignoreActionIdentifier
ignoreSuggestedEventWithSourceClientIdentifier:
imageForImageDescriptor:
imageName
imageWithCGImage:scale:orientation:
inboxNotificationMonitor
inboxNotificationProvider
indexOfObjectPassingTest:
indexesOfObjectsPassingTest:
init
initWithActivityIdentifier:otherCriteria:
initWithAddedRecords:removedRecords:modifiedRecords:
initWithAlarmEngine:notificationCenter:
initWithBundleIdentifier:
initWithBundleIdentifier:userNotificationCenterFactory:storage:notificationIconCache:
initWithCalendarIdentifier:
initWithCapacity:
initWithCoder:
initWithConcurrencyType:
initWithContentsOfURL:
initWithCoordinate:
initWithCoreLocationProvider:
initWithCreationBlock:
initWithDataSource:notificationManager:iconIdentifierProvider:
initWithDataSource:notificationManager:iconIdentifierProvider:dateProvider:
initWithDataSource:notificationManager:iconIdentifierProvider:sourceEventRepresentationProvider:
initWithDataSource:notificationManager:iconIdentifierProvider:sourceEventRepresentationProvider:dateProvider:
initWithDataSource:notificationManager:iconIdentifierProvider:sourceEventRepresentationProvider:triggerHelper:transitionProvider:bodyDescriptionProvider:travelAdvisoryTimelinessAuthority:dateProvider:notificationDataStorage:urlHandler:mapItemURLProvider:timeToLeaveRefreshStorage:snoozeUpdateTimer:
initWithDateComponents:calendar:format:forceNoTextEffects:
initWithDateProvider:
initWithDictionary:
initWithEKOptions:path:changeTrackingClientId:enablePropertyModificationLogging:allowDelegateSources:
initWithEffectiveBundle:delegate:onQueue:
initWithEffectiveBundleIdentifier:delegate:onQueue:
initWithEvent:view:forceLocal:
initWithEventStoreProvider:
initWithEventStoreProvider:inboxNotificationProvider:notificationReferenceProvider:
initWithEventStoreProvider:inboxNotificationProvider:notificationReferenceProvider:dataAccessExpressConnection:preferences:
initWithEventStoreProvider:inboxNotificationProvider:notificationReferenceProvider:dataSourceEventRepresentationProvider:preferences:
initWithEventStoreProvider:inboxNotificationProvider:notificationReferenceProvider:preferences:
initWithEventStoreProvider:inboxNotificationProvider:notificationReferenceProvider:remoteMutator:dataSourceEventRepresentationProvider:
initWithEventStoreProvider:inboxNotificationProvider:notificationReferenceProvider:remoteMutator:dataSourceEventRepresentationProvider:preferences:
initWithEventStoreProvider:remoteMutator:dataSourceEventRepresentationProvider:coreLocationProvider:ttlEventTracker:alarmEngineMonitor:travelEngine:foundInAppsEventTracker:suggestionsServiceLogger:routeHypothesizerProvider:timeToLeaveRefreshMonitor:debugPreferences:mailtoURLProvider:
initWithFireDate:interval:target:selector:userInfo:repeats:
initWithHypothesis:lastFireTimeOfAlertOffsetFromTravelTime:
initWithIconIdentifierVersionProvider:protectedNotificationStorage:iconCache:iconIdentifierProvider:notificationManager:
initWithIconProvider:
initWithIdentifier:actions:hiddenPreviewsBodyPlaceholder:options:categorySummaryFormat:
initWithIdentifier:title:systemImageName:url:
initWithInboxNotificationMonitor:
initWithLocationString:andCompletionBlock:
initWithMailAccounts:
initWithManagedObjectModel:
initWithMapItemHandle:
initWithNotification:actionIdentifier:originIdentifier:targetConnectionEndpoint:
initWithNotificationContentMapper:notificationIconMapper:
initWithNotificationIconCache:
initWithNotificationManager:iconIdentifierProvider:sourceIdentifierSuffix:
initWithNotificationMapper:
initWithNotificationRecord:actionIdentifier:originIdentifier:targetConnectionEndpoint:
initWithNotificationRequest:date:
initWithNotificationRequestMapper:
initWithOptions:eventStoreGetter:
initWithPath:
initWithPath:isProtectedStorage:
initWithRouteHypothesizer:
initWithRouteHypothesizerProvider:
initWithSerializedSequenceString:
initWithSize:scale:
initWithSourceClientIdentifier:calendarNotification:changeType:date:allDay:timeZone:expirationDate:launchURL:isDelegate:sourceTitle:sourceIdentifier:
initWithSourceClientIdentifier:calendarNotification:isDelegate:sourceTitle:sourceIdentifier:
initWithSourceClientIdentifier:launchURL:expirationDate:conflictDetails:eventInvitationNotification:eventRepresentationDictionary:eventURI:isDelegate:sourceTitle:sourceIdentifier:
initWithSourceClientIdentifier:launchURL:expirationDate:eventInvitationNotification:eventRepresentationDictionary:isDelegate:sourceTitle:sourceIdentifier:
initWithSourceClientIdentifier:launchURL:expirationDate:suggestionNotification:
initWithSourceIdentifier:sourceClientIdentifier:
initWithSourceIdentifier:sourceClientIdentifier:content:
initWithSourceIdentifier:sourceClientIdentifier:content:date:shouldPresentAlert:shouldPlaySound:
initWithSourceIdentifier:sourceClientIdentifier:stringRepresentation:
initWithSources:notificationMonitor:notificationManager:
initWithStorage:
initWithStringRepresentation:
initWithSuffix:timedExpirationInterval:leeway:relativeToEnd:validForAllDay:actions:
initWithSuperclassDescription:
initWithTitle:location:date:endDate:timeZone:allDay:tentative:publisherBulletinID:entityID:appLink:proximity:externalID:databaseID:acknowledged:dismissalID:alarmID:isOffsetFromTravelTimeStart:refiring:pseudoEvent:
initWithTitle:location:locationWithoutPrediction:preferredLocation:startDate:endDate:isAllDay:isTimeSensitive:launchURL:isLocationEvent:eventID:eventObjectID:calendarIdentifier:eventRepresentationDictionary:legacyIdentifier:mapItemURL:conferenceURL:mailtoURL:hasSuggestedLocation:eventHasAlarms:alarmID:isOffsetFromTravelTimeStart:lastFireTimeOfAlertOffsetFromTravelTime:allowsLocationAlerts:hypothesis:travelAdvisoryTimelinessPeriod:forceDisplayOfNewTravelAdvisoryHypotheses:
initWithTitle:location:locationWithoutPrediction:startDate:endDate:isAllDay:isTimeSensitive:eventID:eventOccurrenceID:eventObjectID:calendarIdentifier:eventRepresentationDictionary:legacyIdentifier:preferredLocation:conferenceURL:mailtoURL:hasSuggestedLocation:eventHasAlarms:allowsLocationAlerts:forceDisplayOfNewTravelAdvisoryHypotheses:
initWithTransportType:conservativeDepartureDate:conservativeTravelTime:suggestedDepartureDate:estimatedTravelTime:aggressiveDepartureDate:aggressiveTravelTime:routeName:supportsLiveTraffic:currentTrafficDensity:trafficDensityDescription:travelState:
initWithTravelAdvisoryAuthority:dateProvider:
initWithTravelAdvisoryDescriptionGenerator:dateProvider:
initWithTravelAdvisoryTimelinessAuthority:
initWithTravelEngine:
initWithType:objectID:date:eventStore:
initWithType:objectID:eventStore:
initWithUserNotificationCenter:storage:analyticsHandler:deviceLockObserver:
initWithWrappedNotificationManager:predicate:
initWithWrappedStorage:
insertNewAlarm
insertNewObjectForEntityForName:inManagedObjectContext:
insertObject:atIndex:
intValue
integerForKey:
integerValue
interruptionLevel
invalidate
invertedSet
invitationNotificationRepresentationWithNotification:event:date:endDate:timeZone:
invitationStatus
inviteReplyNotificationFromEventStore:
invitedBy
isAbsolute
isActive
isAfterDate:
isAllDay
isBeforeDate:
isBirthday
isCurrentUser
isCurrentUserInvitedAttendee
isDelayedProximityAlarm
isDelegate
isEqual:
isEqualForDiffingPurposesToContent:
isEqualToAction:
isEqualToCategory:
isEqualToContent:
isEqualToData:
isEqualToDate:
isEqualToNotification:
isEqualToNotificationData:
isEqualToNotificationIdentifier:
isEqualToOriginalEvent:
isEqualToRecord:
isEqualToRequest:
isEqualToResponse:
isEqualToString:
isFileURL
isIgnoringEventAlerts
isKindOfClass:
isLastFireTimeOfAlert:withinEightMinutesOfDate:
isLocationManagerStatusAuthorized:
isMemberOfClass:
isOffsetFromTravelTimeStart
isOnSharedCalendar
isPrediction
isProtectedDataAvailable
isPseudoEvent
isPurelyATimeToLeaveAlert
isRegisteredForAlarms
isSubscribed
isSuggestedEventCalendar
isSuggestedLocation
isTravelAdvisorySupported
joinActionIdentifier
joinSharedCalendarWithSourceClientIdentifier:
junkStatus
keysOfEntriesPassingTest:
lastFireTimeOfAlertOffsetFromTravelTime
lastObject
lastPathComponent
lastTimeBulletinAdded
lastTimeNotificationAdded
laterDate:
latestHypothesis
launchURL
launchURLForNotification:inEventStore:
launchURLForOptionalEventID:hypothesis:isTravelLaunchURL:
launchURLForOptionalEventOccurrenceID:
leeway
legacyIdentifier
length
locale
localeIdentifier
localeWithLocaleIdentifier:
localizedStringForKey:value:table:
localizedStringFromDate:dateStyle:timeStyle:
localizedStringWithFormat:
location
locationIsAConferenceRoom
locationManager:didChangeAuthorizationStatus:
locationManager:didDetermineState:forRegion:
locationManager:didExitRegion:
locationManager:didFailRangingBeaconsForConstraint:error:
locationManager:didFailWithError:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didRangeBeacons:inRegion:
locationManager:didRangeBeacons:satisfyingConstraint:
locationManager:didStartMonitoringForRegion:
locationManager:didUpdateHeading:
locationManager:didUpdateLocations:
locationManager:didUpdateToLocation:fromLocation:
locationManager:didVisit:
locationManager:monitoringDidFailForRegion:withError:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManagerDidChangeAuthorization:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManagerShouldDisplayHeadingCalibration:
locationMapKitHandle
locationString
locationStringForLocation:locationWithoutPrediction:preferredLocation:conferenceURL:options:
locationWithoutPrediction
locationsWithoutPrediction
lockScreenSetting
logEventConfirmedNotificationWithUniqueKey:
logEventRejectedNotificationWithUniqueKey:
logEventShowedTimeToLeaveNotificationWithUniqueKey:
mailAccounts
mailOrganizerAction
mailOrganizerActionIdentifier
mailToURLUserInfoKey
mailtoURL
mailtoURLForEvent:
mailtoURLProvider
mainScreen
mapItemURL
mapItemURLForOptionalEventLocation:eventStartDate:hypothesis:
mapItemURLProvider
mapItemURLUserInfoKey
mapKitHandle
markAsHavingReceivedLocation
markAsHavingReceivedLocationWithEffectiveBundleIdentifier:
markResourceChangeAlertedAndSave:error:
maximumAllowableTravelTime
maximumTravelDurationEncountered
maybeActionIdentifier
migrateToStorage:
minimumAllowableTravelTime
moveItemAtPath:toPath:error:
mutableCopy
mutableCopyWithZone:
name
needsAlert
nextAlarmFireTime
nextEmissionDate
notification
notificationCategories
notificationCenter
notificationCenterSetting
notificationContentMapper
notificationCount
notificationData
notificationDataFromPersistentStorageWithPath:error:
notificationDataMap
notificationDataStorage
notificationExpirationDateForEventID:alarmID:
notificationFromNotificationRecord:
notificationIconCache
notificationIconMapper
notificationManager
notificationMapper
notificationMonitor
notificationRecord
notificationRecordFromNotificationRequest:
notificationRecords
notificationRecordsFromNotifications:
notificationRecordsFromPersistentNotificationStorageWithPath:error:
notificationReferenceForObjectID:withType:date:inEventStore:
notificationReferenceForObjectID:withType:inEventStore:
notificationReferenceOfType:withSourceClientIdentifier:inEventStore:withNotificationReferenceProvider:
notificationReferenceProvider
notificationReferences
notificationRequestFromNotificationRecord:
notificationRequestMapper
notificationResponseDataForPayload:
notificationResponseMapper
notificationSettings
notificationSettingsForTopics
notificationSourceForSourceIdentifier:
notificationSourceMap
notificationSourceRefresher
notificationSources
notificationWithRequest:date:
notifyDelegateOfDueAlarmsAndRescheduleTimer
numberWithDouble:
numberWithInt:
numberWithInteger:
numberWithUnsignedInt:
numberWithUnsignedInteger:
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
objectID
objectIDWithEntityType:rowID:databaseID:
objectIDWithSourceClientIdentifier:
objectIDWithURL:
objectsAtIndexes:
openURL:configuration:completionHandler:
openURL:response:
organizer
organizerContactDictionary
organizerEmailAddress
origin
originAppName
originIdentifier
originalEvent
originalEventInternal
overriddenTravelAdvisoryHypothesisAggressiveTravelTime
overriddenTravelAdvisoryHypothesisConservativeTravelTime
overriddenTravelAdvisoryHypothesisCurrentTrafficDensity
overriddenTravelAdvisoryHypothesisEstimatedTravelTime
overriddenTravelAdvisoryHypothesisRouteName
overriddenTravelAdvisoryHypothesisSupportsLiveTraffic
overriddenTravelAdvisoryHypothesisTransportType
overriddenTravelAdvisoryHypothesisTravelState
overrideTravelAdvisoryHypothesis
owner
ownerDate
ownerTimeZone
ownerURI
participationStatus
path
pathExtension
pathForCachedIconWithIdentifier:
pathForResource:ofType:
payloadForNotificationResponseData:
peopleIdentifiers
performAgendaEntryEqualityChecksInTravelEngine
performBlockAndWait:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
period
periodForHypothesis:
persistentDomainForName:
persistentNotificationStorageWithPath:isProtectedStorage:
persistentStorageWithPath:
persistentStorageWithPath:isProtectedStorage:
persistentStoreCoordinator
persistentStores
phoneNumber
placemark
pngDataForIconWithIdentifier:
postFakeNotification
postNotificationName:object:
postNotificationName:object:userInfo:
postNotificationName:object:userInfo:deliverImmediately:
preciseLocationAuthorizedForBundle:
preciseLocationAuthorizedForBundleIdentifier:
predicate
predicateForEventsCreatedFromSuggestionWithExtractionGroupIdentifier:
predicateWithFormat:
preferences
preferredLocation
preferredLocationWithoutPrediction
preventMarkingTravelAdvisoryEntriesAsDismissed
proposedStartDate
protectedStorage
proximity
publicObjectWithObjectID:
publisherBulletinID
queue
receivedAlarmNamed:
receivedNotificationNamed:
recordDisplayOfInitialTimeToLeaveAlertForSourceClientIdentifier:event:hypothesis:travelAdvisoryTimelinessPeriod:foundInAppsEventTracker:suggestionsServiceLogger:ttlEventTracker:
recordID
recordMap
recordNotificationResponse:
recordPostedNotification:
recordRecentForContactWithName:emailAddress:phoneNumber:
recurrenceChanged
refiring
refreshDateMap
refreshDateWithIdentifier:
refreshDates
refreshEventStoreInResponseToDatabaseChangeNotification:
refreshNotificationManager:withNotificationRecords:forSourceWithIdentifier:filteredBySourceClientIDs:
refreshNotifications
refreshNotifications:
registeredForAlarms
relativeOffset
remoteMutator
removeAlarmWithName:
removeAlarmsFiredObserver:
removeAllNotificationRecords
removeAllObjects
removeAllPendingNotificationRequests
removeCharactersInString:
removeDeliveredNotificationsWithIdentifiers:
removeEvent:span:error:
removeInviteReplyNotification:error:
removeItemAtPath:error:
removeNotificationCountChangedObserver:selector:
removeNotificationData
removeNotificationDataWithIdentifier:
removeNotificationRecordsPassingTest:
removeNotificationsChangedObserver:
removeNotificationsLoadedObserver:selector:
removeObjectForKey:
removeObjectsForKeys:
removeObserver:name:object:
removeRecordWithSourceIdentifier:sourceClientIdentifier:
removeRefreshDateWithIdentifier:
removeRefreshDates
removeRefreshTimerForEventExternalURL:
removeSyntheticRouteHypothesizerForEventExternalURL:
removeTimeToLeaveRefreshTimerForEventID:
removeTimeToLeaveRefreshTimerForSourceClientIdentifier:
removedRecords
removedRouteHypothesizerForEventExternalURL:
replaceContentForRequestWithIdentifier:replacementContent:completionHandler:
replaceContentForRequestWithIdentifier:replacementContent:error:
replaceNotificationRequest:error:
reportEventInvitationAsJunkWithSourceClientIdentifier:
reportJunkActionIdentifier
reportSharedCalendarAsJunkWithSourceClientIdentifier:
reportSharedCalendarInvitationAsJunkWithSourceClientIdentifier:inEventStore:
reportSharedCalendarInviteAsJunkForCalendarWithID:accountID:queue:completionBlock:
requestHypothesisRefreshAlarmName
requestHypothesisRefreshAtDate:forEventWithExternalURL:
requestHypothesisRefreshBlock
requestRefresh
requestRefreshTimeInterval
requestWithIdentifier:content:
requestWithIdentifier:content:trigger:
requestedDarwinNotifications
reset
resetTimeToLeaveDisplayState
resourceChangeFromEventStore:
resourceChangeNotificationWithNotification:message:date:endDate:timeZone:
respondToSharedCalendarInvitationWithSourceClientIdentifier:inEventStore:withDataAccessExpressConnection:accept:
respondToSharedCalendarInvite:forCalendarWithID:accountID:queue:completionBlock:
respondsToSelector:
responseMustApplyToAll
responseNotificationWithTitle:message:
responseWithNotification:actionIdentifier:originIdentifier:targetConnectionEndpoint:
responseWithNotificationRecord:actionIdentifier:originIdentifier:targetConnectionEndpoint:
retain
retainCount
rootDirectory
routeHypothesizer
routeHypothesizerProvider
routeName
rowID
save:
saveEvent:span:error:
saveGeocodedLocationsInTravelEngine
scale
scanForConflicts
scheduleWithTimeInterval:gracePeriod:
scheme
sectionIdentifier
self
sendFeedbackForAddedLeaveNowNotificationWithSourceClientIdentifier:
sendFeedbackForAddedTravelAdvisoryNotificationWithSourceClientIdentifier:hypothesis:travelAdvisoryTimelinessPeriod:
sendFeedbackForPostingLeaveByNotification
sendFeedbackForPostingLeaveByNotificationForEventWithExternalURL:
sendFeedbackForPostingLeaveNowNotification
sendFeedbackForPostingLeaveNowNotificationForEventWithExternalURL:
sendFeedbackForPostingNotificationWithTravelAdvisoryTimelinessPeriod:sourceClientIdentifier:travelEngine:
sequenceToken
serializedSequenceString
setAcknowledgedDate:
setActive:
setAgendaEntryIdentifier:
setAlarmID:
setAlertTopic:
setAuthorizationChangedBlock:
setAuthorizedInternal:
setAutomaticGeocodingAllowed:
setBadgeValue:
setBody:
setCalendar:
setCallbackNotificationQueue:
setCallbackQueue:
setCancelHypothesisRequestRefreshBlock:
setCategoryIdentifier:
setContent:
setCreationBlock:
setCurrentCADRouteHypothesis:
setCurrentRouteHypothesizerNotificationType:
setCurrentTrafficDensity:
setDatabaseID:
setDate:
setDateFormat:
setDateStyle:
setDefaultActionURL:
setDelegate:
setDismissed:
setDoesRelativeDateFormatting:
setEmissionBlock:
setEndDate:
setEntity:
setEntityDate:
setEntityID:
setEntityTimeZone:
setEntityURI:
setEntrySignificantlyChangedBlock:
setEventExternalURL:
setEventRepresentationDictionary:onNotificationContent:
setEventSignificantlyChangedBlock:
setExpirationDate:
setExternalID:
setFetchLimit:
setFilterCriteria:
setFilterIdentifier:onNotificationContent:
setFilterIdentifierForEKCalendarNotification:onNotificationContent:
setFireDate:
setFireDate:leeway:forEventWithIdentifier:
setFireTime:
setFrontBoardOptions:
setGeoLocationCoordinates:
setGeocodedEventEncountered:
setGeocoder:
setHasDisplayedLeaveByMessage:
setHasDisplayedRunningLateMessage:
setHasGeoLocationCoordinates:
setHasOrganizerThatIsNotCurrentUser:
setHasPredictedLocation:
setHypothesis:
setHypothesizer:
setHypothesizerSentAtLeastOneHypothesis:
setIcon:
setIconIdentifier:
setIconIdentifierVersion:
setIncludesPendingChanges:
setInteger:forKey:
setInterruptionLevel:
setInvitationStatus:
setInvitationStatus:forEvent:error:
setIsJunk:
setIsJunk:shouldSave:
setIsOnSharedCalendar:
setIsProtectedDataAvailable:
setIsSuggestedLocation:
setKey:withDate:
setKey:withPointerAddress:
setKey:withString:
setLastFireTimeOfAlertOffsetFromTravelTime:
setLastTimeBulletinAdded:
setLastTimeNotificationAdded:
setLatestHypothesis:
setLegacyIdentifier:onNotificationContent:
setLegacyIdentifierForCalendarNotification:onNotificationContent:
setLocale:
setLocationAddress:
setLocationIsAConferenceRoom:
setLocationMapKitHandle:
setLocationString:
setLocationStringWithoutPrediction:
setMapKitHandle:
setMaximumTravelDurationEncountered:
setMonth:
setNextEmissionDate:
setNotificationCategories:
setNotificationSourceMap:
setNotificationSources:
setObject:forKey:
setObject:forKeyedSubscript:
setOrganizerEmailAddress:
setOrganizerForContactDictionary:
setOriginalEventInternal:
setParticipantStatus:span:event:
setParticipationStatus:
setPeopleIdentifiers:
setPersistentStoreCoordinator:
setPredicate:
setPurgingAllowed:
setRegisteredForAlarms:
setRequestHypothesisRefreshBlock:
setRouteName:
setRunning:
setSectionIdentifier:
setSensitive:
setSetting:forKey:
setShouldApplyMask:
setShouldBackgroundDefaultAction:
setShouldHideTime:
setShouldPlaySound:
setShouldPresentAlert:
setShouldSuppressSyncDismissalWhenRemoved:
setSnoozeTimeInterval:alarm:calendarItem:
setSortDescriptors:
setSound:
setSourceClientIdentifier:
setSourceIdentifier:
setStartDate:
setStartLocationRouting:
setStorage:
setSubtitle:
setSummaryArgument:
setSummaryArgumentCount:
setSupportsLiveTraffic:
setTargetConnectionEndpoint:
setThreadIdentifier:
setThrottle:
setThrottleIdentifier:
setThrottleQueue:
setTimeStyle:
setTimeZone:
setTimeout:
setTitle:
setTopicIdentifiers:
setTransportType:
setTransportTypeOverride:
setTravelTimeThresholdExceededState:
setUpRefreshTimerWithTriggerDate:eventExternalURL:
setUpTimeToLeaveRefreshTimerWithTriggerDate:eventID:
setUpTimeToLeaveRefreshTimerWithTriggerDate:sourceClientIdentifier:
setUpdateHandler:
setUserActivityUserInfo:
setUserInfo:
setUserInfoValue:forKey:
setValue:forKey:
setWantsNotificationResponsesDelivered
setWeekday:
setWithArray:
setWorkQueue:
setWrappedStorage:
settingForKey:
shared
sharedCalendarNotificationsDisabled
sharedConnection
sharedInstance
sharedOwnerEmail
sharedOwnerPhoneNumber
sharingStatus
shouldBehaveAsRestart
shouldBypassTravelEngineThrottle
shouldHideTime
shouldIgnoreNotificationForEvent:
shouldIncludeTravelAdvisoryDescription:
shouldPresentAlert
shouldRemoveNotificationMetaDataWithEventID:
shouldRemoveTimeToLeaveRefreshTimerWithRefreshDate:eventID:
shouldSuppressSyncDismissalWhenRemoved
shouldTriggerForSourceClientIdentifier:trigger:sourceNotificationInfo:oldNotificationData:
shouldWithdrawNotificationWithSourceClientIdentifier:
showPreviewsSetting
sideTableContext
significantTimeChange
snoozeAction
snoozeActionIdentifier
snoozeAlarm:untilTargetDate:
snoozeAlarm:withTimeIntervalFromNow:
snoozeCategories
snoozeCategoryForEventWithStartDate:endDate:now:isAllDay:
snoozeEventWithSourceClientIdentifier:snoozeType:
snoozeFor15MinutesAction
snoozeFor1HourAction
snoozeFor30MinutesAction
snoozeFor5MinutesAction
snoozeInterval
snoozeTimerFiredForEvents:
snoozeUntil15MinutesBeforeAction
snoozeUntil30MinutesBeforeAction
snoozeUntilEndTimeAction
snoozeUntilStartTimeAction
snoozeUpdateTimer
sortDescriptorWithKey:ascending:
sortUsingSelector:
sound
soundSetting
soundWithAlertType:
soundWithAlertType:alertTopic:
source
sourceClientIdentifier
sourceClientIdentifier:matchesEventForSourceClientIdentifier:
sourceClientIdentifierForEventID:alarmID:
sourceClientIdentifierForNotification:
sourceEventRepresentationProvider
sourceIdentifier
sourceTitle
standardUserDefaults
start
startAccessingSecurityScopedResource
startDate
startDateForNextOccurrence
startGeocoding
startHypothesizingWithUpdateHandler:
startLocationRouting
startOfLeaveNowPeriod
startOfLeaveNowPeriodForHypothesis:
startOfRunningLatePeriod
startOfRunningLatePeriodForHypothesis:
state
stateChangedNotificationName
status
statusesAreAccurate
stop
stopAccessingSecurityScopedResource
stopHypothesizing
string
stringByAddingPercentEncodingWithAllowedCharacters:
stringByAppendingString:
stringByDeletingLastPathComponent
stringByDeletingPathExtension
stringByReplacingCharactersInSet:withString:
stringByReplacingOccurrencesOfString:withString:
stringByTrimmingCharactersInSet:
stringRepresentation
stringValue
stringWithFormat:
stringWithUTF8String:
structuredLocation
substringFromIndex:
subtitle
suffix
suggestedDepartureDate
suggestedEvent
suggestedEventCanceledCategoryIdentifier
suggestionInfo
suggestionNotification
suggestionsServiceLogger
summaryArgumentCount
superclass
supportsAlarmAcknowledgedDate
supportsLiveTraffic
supportsSecureCoding
synchronize
syntheticHypothesisWithStartDate:conservativeTravelTime:estimatedTravelTime:aggressiveTravelTime:
syntheticTravelAdvisoriesEnabled
targetConnectionEndpoint
tearDown
tentative
tentativeAcceptEventInvitationWithSourceClientIdentifier:
threadIdentifier
throttle
throttleIdentifier
throttleQueue
timeChanged
timeIntervalSinceDate:
timeIntervalSinceNow
timeIntervalSinceReferenceDate
timeSensitiveSetting
timeToLeaveRefreshDataFromPersistentStorageWithPath:error:
timeToLeaveRefreshMonitor
timeToLeaveRefreshStorage
timeZone
timeZoneWithName:
title
titleChanged
topicIdentifiers
trackDirectionsEngagedForNotificationUsingTTLEventTracker:hypothesis:hasSuggestedLocation:isOnSharedCalendar:
trackDirectionsEngagedForTTLAlertWithTransportType:etaType:hasSuggestedLocation:isOnSharedCalendar:
trackEmailEngagedForNotificationUsingTTLEventTracker:hypothesis:hasSuggestedLocation:isOnSharedCalendar:
trackEmailEngagedForTTLAlertWithTransportType:etaType:hasSuggestedLocation:isOnSharedCalendar:
trackEventFiredTTLAlertWithAlertType:transportType:etaType:travelState:hasSuggestedLocation:isOnSharedCalendar:
trackPseudoEventInitialTimeToLeaveFired
trackTTLCandidateEventHasSuggestedLocation:isOnSharedCalendar:
trafficDensityDescription
transitionForSourceClientIdentifier:sourceNotificationInfo:oldNotificationData:trigger:
transitionProvider
transportType
transportTypeOverride
travelAdvisoryAuthority
travelAdvisoryDescriptionGenerator
travelAdvisoryDescriptionOfType:hypothesis:location:
travelAdvisoryTimelinessAuthority
travelAdvisoryTimelinessPeriod
travelEligibleEvents:fromStartDate:untilEndDate:
travelEligibleEventsInCalendars:startDate:endDate:
travelEligibleEventsInEventStore:
travelEngine
travelEngine:authorizationChanged:
travelEngine:eventSignificantlyChangedWithEventExternalURL:
travelEngine:receivedHypothesis:eventExternalURL:
travelStartLocation
travelState
travelStateIndicatesTravelingTowardDestination:
travelTime
travelTimeThresholdExceededState
triggerHelper
triggerType
triggeredEventNotificationSource
ttlEventTrackerAlertTypeForDate:hypothesis:
ttlEventTrackerAlertTypeForTravelAdvisoryTimelinessPeriod:
ttlEventTrackerETATypeForHypothesis:
ttlEventTrackerTransportTypeForGEOTransportType:
ttlEventTrackerTravelStateForHypothesisTravelState:
type
unNotificationActionsFromCALNNotificationActions:
unNotificationCategoriesFromCALNNotificationCategories:
unNotificationContentFromCALNNotificationContent:
unNotificationIconFromIconIdentifier:
unNotificationPresentationOptionsFromCALNNotificationPresentationOptions:
unNotificationRequestFromCALNNotificationRequest:
unNotificationSoundFromCALNNotificationSound:
unarchivedObjectOfClass:fromData:error:
unarchivedObjectOfClasses:fromData:error:
uniqueIdentifier
uniqueKey
unschedule
unselectedCalendarIdentifiersForFocusMode
unselectedCalendarsForFocusModeInEventStore:
unsignedIntegerValue
upcomingEventNotificationRepresentationWithEvent:date:displayTimeZone:
updateBlock
updateEventRepresentation:forEvent:
updateEventRepresentationDictionary:withHypothesisMessage:
updateHandler
updateHypothesizerIfNecessaryWithOriginalEvent:
updatePredictedDepartureDate:
updateRecord:
updateSnoozeOptionsForPostedNotifications
updateSubtitleAndThreadIdentifierOnNotificationContent:forDelegateSourceWithTitle:identifier:
updateUpcomingEventNotificationWithHypothesisMessage:
updateWithGeocodedMapItemAndSaveWithCommit:eventStore:error:
updateWithHypothesis:
urlHandler
urlWithAllowedScheme
userInfo
userNotificationCenter
userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:
userNotificationCenter:openSettingsForNotification:
userNotificationCenter:willPresentNotification:withCompletionHandler:
userNotificationCenterWithBundleIdentifier:
valueForKey:
videoConferenceChanged
virtualConference
whitespaceCharacterSet
willPostNotification:
workQueue
wrappedNotificationManager
wrappedStorage
writeToFile:options:error:
zone
v16@0:8
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8@16d24@32
v24@0:8@16
v40@0:8@"NSDate"16d24@"NSString"32
@"<CALNSnoozeUpdateTimerDelegate>"16@0:8
v24@0:8@"<CALNSnoozeUpdateTimerDelegate>"16
@32@0:8@16@24
@24@0:8@16
@"<CalDateProvider>"
@"<CALNActivityScheduler>"
@"NSDate"
@"NSMutableDictionary"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"<CALNSnoozeUpdateTimerDelegate>"
@"NSData"24@0:8@"NSString"16
@"NSString"32@0:8@"NSDate"16@"NSCalendar"24
@"<CalIconProvider>"16@0:8
v72@0:8@16@24@32Q40@48@56@64
v40@0:8Q16@24@32
@40@0:8@16@24^B32
@40@0:8@16@24@32
@"NSArray"
v24@0:8@?16
@"NSArray"16@0:8
v24@0:8@"CALNNotificationRecord"16
v24@0:8@"NSArray"16
v24@0:8@?<B@?@"CALNNotificationRecord">16
@"<CALNNotificationStorage>"
q16@0:8
v24@0:8q16
v32@0:8@16@24
v48@0:8@16@24@32@40
@76@0:8@16@24@32@40@48B56@60@68
@"NSString"
@"NSURL"
@"EKCalendarEventInvitationNotification"
@"NSDictionary"
v24@0:8@"CALNNotificationRecordResponse"16
v24@0:8@"NSSet"16
@"CALNNotificationContent"24@0:8@"NSString"16
@48@0:8@16@24@32@40
@"<CALNSharedCalendarInvitationResponseNotificationDataSource>"
@"<CALNNotificationManager>"
@"<CALNCalendarIconIdentifierProvider>"
@"<CALNSourceEventRepresentationProvider>"
Q32@0:8@16@24
Q20@0:8i16
Q24@0:8@16
Q24@0:8q16
@24@0:8Q16
v40@0:8@16@24B32B36
@48@0:8@16@24@32Q40
@56@0:8@16@24@32Q40@48
@24@0:8^{_NSZone=}16
@92@0:8@16@24@32@40@48@56@64B72@76@84
@"EKConflictDetails"
@40@0:8@16^@24^@32
@"<CALNEventInvitationNotificationDataSource>"
@"NSArray"24@0:8@"NSString"16
v32@0:8@"NSString"16@"NSString"24
@32@0:8@16@?24
@?16@0:8
B32@0:8@16@24
v32@0:8q16q24
@"<CALNActivitySchedulerDelegate>"16@0:8
v24@0:8@"<CALNActivitySchedulerDelegate>"16
@"NSObject<OS_xpc_object>"
@"<CALNActivitySchedulerDelegate>"
B24@0:8q16
d16@0:8
B24@0:8@"EKTravelEngineHypothesis"16
v40@0:8@16@24@32
v28@0:8@16B24
v40@0:8@"<CALNTravelEngine>"16@"EKTravelEngineHypothesis"24@"NSString"32
v32@0:8@"<CALNTravelEngine>"16@"NSString"24
v28@0:8@"<CALNTravelEngine>"16B24
v32@0:8@"<CALNTimeToLeaveRefreshMonitor>"16@"NSString"24
@28@0:8@16B24
v32@0:8@16Q24
v40@0:8@16@24Q32
v40@0:8Q16@24Q32
@"CALNTriggeredEventNotificationInfo"28@0:8@"NSString"16B24
B24@0:8@"NSString"16
B32@0:8@"NSDate"16@"NSString"24
@"NSDate"32@0:8@"NSString"16@"NSString"24
v28@0:8@"NSString"16B24
v32@0:8@"NSString"16Q24
v40@0:8@"NSString"16@"EKTravelEngineHypothesis"24@"NSDate"32
v24@0:8@"NSString"16
v32@0:8@"NSString"16@"EKTravelEngineHypothesis"24
@"NSString"24@0:8@"NSURL"16
v32@0:8@"NSDate"16@"NSString"24
v40@0:8@"NSString"16@"EKTravelEngineHypothesis"24Q32
v40@0:8Q16@"GEOPlannedDestination"24Q32
@"<CALNTriggeredEventNotificationDataSourceDelegate>"16@0:8
v24@0:8@"<CALNTriggeredEventNotificationDataSourceDelegate>"16
@120@0:8@16@24@32@40@48@56@64@72@80@88@96@104@112
B40@0:8@16@24@32
v36@0:8@16B24@?28
@"<CALNTriggeredEventNotificationDataSourceDelegate>"
@"<EKEventStoreProvider>"
@"<CALNRemoteMutator>"
@"<CALNDataSourceEventRepresentationProvider>"
@"CALNCalendarCoreLocationManager"
@"<CALNTTLEventTracker>"
@"<CALNAlarmEngineMonitor>"
@"<CALNTravelEngine>"
@"<CALNFoundInAppsEventTracker>"
@"<CALNSuggestionsServiceLogger>"
@"<CALNRouteHypothesizerProvider>"
@"<CALNTimeToLeaveRefreshMonitor>"
@"<CALNDebugPreferences>"
@"CALNTriggeredEventNotificationMailtoURLProvider"
@"CADRouteHypothesis"16@0:8
v24@0:8@"CADRouteHypothesis"16
@?<v@?>16@0:8
v24@0:8Q16
v24@0:8@?<v@?>16
@"EKTravelEngineHypothesis"16@0:8
@"CADRouteHypothesis"
@200@0:8@16@24@32@40@48@56B64B68@72B80@84@92@100@108@116@124@132@140B148B152@156B164@168B176@180Q188B196
@"EKStructuredLocation"
@"EKTravelEngineHypothesis"
@"<CALNSharedCalendarInvitationNotificationDataSource>"
B32@0:8@16^@24
B40@0:8@16@24^@32
@"NSSet"16@0:8
B32@0:8@"UNNotificationRequest"16^@24
B40@0:8@"NSString"16@"UNNotificationContent"24^@32
@"UNNotificationSettings"16@0:8
@"NSDictionary"16@0:8
@"<UNUserNotificationCenterDelegate>"16@0:8
v24@0:8@"<UNUserNotificationCenterDelegate>"16
@"UNUserNotificationCenter"
@"NSObject<OS_dispatch_queue>"
@"NSArray<CALNNotificationSource>"
@"CALNInboxNotificationMonitor"
@"CALNNotificationRecord"
@"BSServiceConnectionEndpoint"
v40@0:8@16@24@?32
v40@0:8@"<CALNUserNotificationCenter>"16@"CALNNotification"24@?<v@?Q>32
v40@0:8@"<CALNUserNotificationCenter>"16@"CALNNotificationResponse"24@?<v@?>32
v20@0:8B16
@"<CALNUserNotificationCenter>"
@"<CALNAnalyticsHandler>"
@"CALNUNNotificationMapper"
@"EKCalendarSuggestionNotification"
v56@0:8Q16Q24Q32Q40B48B52
v40@0:8Q16Q24B32B36
@"CALNUNNotificationRequestMapper"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"CALNNotificationContent"
@56@0:8@16@24@32@40B48B52
@40@0:8@16B24B28@32
@"GEORouteHypothesizer"
v40@0:8@"UNUserNotificationCenter"16@"UNNotification"24@?<v@?Q>32
v40@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24@?<v@?>32
v32@0:8@"UNUserNotificationCenter"16@"UNNotification"24
B32@0:8@"CALNNotificationRequest"16^@24
v24@0:8@"NSMutableDictionary"16
@"<CALNUserNotificationCenterDelegate>"16@0:8
v24@0:8@"<CALNUserNotificationCenterDelegate>"16
@"<CALNUserNotificationCenterDelegate>"
@"<CALNUNUserNotificationCenterProtocol>"
@"CALNUNNotificationContentMapper"
@"CALNUNNotificationResponseMapper"
@160@0:8@16@24@32@40@48@56@64@72@80B88B92@96@104@112@120@128Q136Q144@152
@"CALNNotificationSound"
i24@0:8@16
i24@0:8@"NSString"16
i24@0:8@"NSBundle"16
B24@0:8@"NSBundle"16
@"NSArray"24@0:8@"NSSet"16
@"CALNEventCanceledNotificationInfo"24@0:8@"NSString"16
@56@0:8@16@24@32@40@48
@"<CALNInboxNotificationProvider>"
@"<CALNEKCalendarNotificationReferenceProvider>"
@32@0:8@16^@24
B24@0:8^@16
@"CALNInMemoryNotificationStorage"
@"<CALNMailAccounts>"
@"CALNNotificationRequest"
@"<CALNEventCanceledNotificationDataSource>"
@"<CALNRouteHypothesizer>"24@0:8@"GEOPlannedDestination"16
v32@0:8@"<CALNRouteHypothesizer>"16@"NSString"24
@"CADSyntheticRouteHypothesizerCache"
@"<CALNIconIdentifierVersionProvider>"
@"<CALNIconCache>"
@"CALNNotification"
@"NSString"24@0:8@"NSString"16
B32@0:8@"NSArray"16^@24
B32@0:8@"NSString"16^@24
@"<CalIconProvider>"
@44@0:8Q16@24B32@36
@"<CALNTimeToLeaveRefreshMonitorDelegate>"16@0:8
v24@0:8@"<CALNTimeToLeaveRefreshMonitorDelegate>"16
@"<CALNTimeToLeaveRefreshMonitorDelegate>"
@"<CALNTimeToLeaveRefreshStorage>"
v32@0:8@16:24
@"NSNotificationCenter"
@"_EKAlarmEngine"
@"CALNTriggeredEventNotificationData"24@0:8@"NSString"16
v32@0:8@"CALNTriggeredEventNotificationData"16@"NSString"24
v40@0:8d16@24@32
v40@0:8q16q24@32
B32@0:8@16q24
v40@0:8d16@"EKAlarm"24@"EKCalendarItem"32
v40@0:8q16q24@"EKEvent"32
B32@0:8@"EKEvent"16q24
v56@0:8q16@24@32@40@?48
v48@0:8@16@24@32@?40
v56@0:8q16@"NSString"24@"NSString"32@"NSObject<OS_dispatch_queue>"40@?<v@?@"NSString"@"NSString"@"NSError">48
v48@0:8@"NSString"16@"NSString"24@"NSObject<OS_dispatch_queue>"32@?<v@?@"NSString"@"NSString"@"NSError">40
B48@0:8@16^@24^@32^q40
@92@0:8@16@24I32@36B44@48@56@64B72@76@84
I16@0:8
@"EKCalendarResourceChangeNotification"
@"NSTimeZone"
@"_EKNotificationMonitor"
@"<CALNCoreLocationProvider>"
Q24@0:8@"EKTravelEngineHypothesis"16
@"NSDate"24@0:8@"EKTravelEngineHypothesis"16
@"EKTravelAdvisoryTimelinessAuthority"
@"<CALNSuggestedEventNotificationDataSource>"
B56@0:8@16@24q32@40^@48
@36@0:8@16@24B32
@20@0:8i16
@24@0:8q16
@"NSURL"40@0:8@"EKStructuredLocation"16@"NSDate"24@"EKTravelEngineHypothesis"32
Q48@0:8@16@24@32Q40
Q48@0:8@"NSString"16@"CALNTriggeredEventNotificationSourceNotificationInfo"24@"CALNTriggeredEventNotificationData"32Q40
Q40@0:8@16@24@32
@"<CALNTravelAdvisoryAuthority>"
@"NSDictionary"40@0:8@"EKEvent"16@"NSDate"24@"NSTimeZone"32
@"NSDictionary"56@0:8@"EKCalendarEventInvitationNotification"16@"EKEvent"24@"NSDate"32@"NSDate"40@"NSTimeZone"48
@"NSDictionary"32@0:8@"NSString"16@"NSString"24
@"NSDictionary"56@0:8@"EKCalendarResourceChangeNotification"16@"NSString"24@"NSDate"32@"NSDate"40@"NSTimeZone"48
@"NSDictionary"32@0:8@"NSDictionary"16@"NSString"24
v40@0:8@16q24@32
v28@0:8@16i24
v40@0:8@"CLLocationManager"16@"CLLocation"24@"CLLocation"32
v32@0:8@"CLLocationManager"16@"NSArray"24
v32@0:8@"CLLocationManager"16@"CLHeading"24
B24@0:8@"CLLocationManager"16
v40@0:8@"CLLocationManager"16q24@"CLRegion"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconRegion"32
v40@0:8@"CLLocationManager"16@"CLBeaconRegion"24@"NSError"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconIdentityConstraint"32
v40@0:8@"CLLocationManager"16@"CLBeaconIdentityConstraint"24@"NSError"32
v32@0:8@"CLLocationManager"16@"CLRegion"24
v32@0:8@"CLLocationManager"16@"NSError"24
v40@0:8@"CLLocationManager"16@"CLRegion"24@"NSError"32
v28@0:8@"CLLocationManager"16i24
v24@0:8@"CLLocationManager"16
v32@0:8@"CLLocationManager"16@"CLVisit"24
B20@0:8i16
v32@0:8@16@?24
@"NSObject<OS_dispatch_source>"
@"CLLocationManager"
@"EKTimedEventStorePurger"
@"CALNSuggestedEventNotificationInfo"24@0:8@"NSString"16
Q24@0:8Q16
v32@0:8@"NSURL"16@"CALNNotificationRecordResponse"24
@"CALNUNNotificationIconMapper"
v40@0:8@"<CALNTriggeredEventNotificationDataSource>"16@"NSString"24@"CALNTriggeredEventNotificationTriggerData"32
v28@0:8@"<CALNTriggeredEventNotificationDataSource>"16B24
v32@0:8@"<CALNTriggeredEventNotificationDataSource>"16@"NSString"24
@128@0:8@16@24@32@40@48@56@64@72@80@88@96@104@112@120
v36@0:8@16@24B32
@32@0:8@16B24B28
@60@0:8@16@24@32@40B48B52B56
v64@0:8@16@24@32Q40Q48@56
@48@0:8@16@24Q32@40
v56@0:8@16@24@32Q40@48
B28@0:8B16B20B24
B24@0:8Q16
@20@0:8B16
@"<CALNTriggeredEventNotificationDataSource>"
@"<CALNTriggeredEventNotificationTriggerHelper>"
@"<CALNTriggeredEventNotificationTransitionProvider>"
@"<CALNTriggeredEventNotificationBodyDescriptionProvider>"
@"<CALNTravelAdvisoryTimelinessAuthority>"
@"<CALNTriggeredEventNotificationDataStorage>"
@"<CALNSnoozeUpdateTimer>"
@"<CALNURLHandler>"
@"<CALNTriggeredEventNotificationMapItemURLProvider>"
@"CADSequenceToken"
@"NSTimer"
@"NSDateFormatter"
@"RTRoutineManager"
@40@0:8Q16@24@32
@"NSString"40@0:8Q16@"EKTravelEngineHypothesis"24@"NSString"32
@"NSDate"24@0:8@"NSString"16
q24@0:8@16
@"CALNEventInvitationNotificationInfo"24@0:8@"NSString"16
@64@0:8@16@24@32@40@48@56
v32@0:8q16@24
@"<EKNotificationPreferences>"
B48@0:8@16Q24@32@40
B48@0:8@"NSString"16Q24@"CALNTriggeredEventNotificationSourceNotificationInfo"32@"CALNTriggeredEventNotificationData"40
B56@0:8@16@24@32@40B48B52
@"UISApplicationState"
v40@0:8^@16^@24@32
@64@0:8@16B24@28@36B44B48B52@56
@44@0:8i16@20@28@36
v44@0:8@16@24@32B40
v44@0:8i16@20@28@36
@32@0:8q16@24
@72@0:8@16@24@32@40@48@56@64
@"EKEphemeralCacheEventStoreProvider"
@"EKEventStore"
@"CALNNotificationServer"
@"CALNNotificationSourceRefresher"
@"CALNCalendarAppBadgeUpdater"
@"CALNNotificationStorageWrapper"
@"CALNTriggeredEventNotificationSource"
@"CALNNotificationIconCache"
@"CALNSchedulingSnoozeUpdateTimer"
@"<CALNNotificationIconProvider><CALNCalendarIconIdentifierProvider><CalIconProvider>"
i16@0:8
v20@0:8i16
@"CLLocation"
@"NSData"
@"NSString"40@0:8@"NSString"16@"CALNTriggeredEventNotificationSourceNotificationInfo"24^B32
@"<CALNTravelAdvisoryDescriptionGenerator>"
@140@0:8@16@24@32@40@48B56B60@64@72@80q88@96i104B108@112@120B128B132B136
{CLLocationCoordinate2D=dd}16@0:8
v32@0:8{CLLocationCoordinate2D=dd}16
@"NSUserActivity"
{CLLocationCoordinate2D="latitude"d"longitude"d}
@"<CALNTravelEngineDelegate>"16@0:8
v24@0:8@"<CALNTravelEngineDelegate>"16
@"<CALNTravelEngineDelegate>"
@"<CALNUNUserNotificationCenterProtocol>"24@0:8@"NSString"16
@"<CALNCalendarResourceChangedNotificationDataSource>"
@44@0:8@16@24@32B40
@56@0:8@16d24d32B40B44@48
@36@0:8@16i24@28
@44@0:8@16i24@28@36
@"EKCalendarNotificationReference"36@0:8@"EKObjectID"16i24@"EKEventStore"28
@"EKCalendarNotificationReference"44@0:8@"EKObjectID"16i24@"NSDate"28@"EKEventStore"36
@"CALNInMemoryTimeToLeaveRefreshStorage"
@"EKTravelEngine"
@"CALNEventInvitationResponseNotificationInfo"24@0:8@"NSString"16
@152@0:8@16@24@32@40@48B56B60@64@72@80@88@96@104@112@120@128B136B140B144B148
@52@0:8@16@24B32@36@44
@"EKCalendarNotification"
v24@0:8d16
@"EKTravelEngineOriginalEvent"
@"EKTravelEngineThrottle"
@"CalGeocoder"
@"<CALNRouteHypothesizer>"
@"CALNSharedCalendarInvitationNotificationInfo"24@0:8@"NSString"16
@"<CALNDataAccessExpressConnection>"
@"CALNSharedCalendarInvitationResponseNotificationInfo"24@0:8@"NSString"16
@"CALNCalendarResourceChangedNotificationInfo"24@0:8@"NSString"16
@"CALNInMemoryTriggeredEventNotificationDataStorage"
@"<CALNEventInvitationResponseNotificationDataSource>"
