@(#)PROGRAM:UserNotificationsUI  PROJECT:UserNotificationsUI-1
333333
%{public}s
Extension view service for notification request %{public}@ disconnected with error: %{public}@
Cancelling loaded extension for notification request %{public}@
Can't cancel extension request 
missing extension (%{public}@) or extension request ID (%{public}@) for notification request %{public}@
Not loading an extension because the notification has no category identifier
Starting notifications extensions discovery
Error matching extensions: %{public}@
Encountered error obtaining application extension record for extension %{public}@: %{public}@
Invalid value for %{public}@ in Info.plist
Extension %{public}@ requested a custom section identifier but it is not an internal extension
Sending action %{public}@ for notification %{public}@ to extension %{public}@
Received unexpected notification for section %{public}@ while displaying notification for extension %{public}@
Got an invalid type for the media button
Setting up extension view controller for notification %{public}@
Disconnecting extension view controller for notification %{public}@
Ending MediaSafetyNet exception in _teardownExtension:
Killing the process of a remote view controller that failed to load, %@
Loading host view controller from extension %{public}@ for notification request %{public}@
Loaded host view controller with extension request %{public}@ from extension %{public}@ for notification request %{public}@ (%.2fs)
Failed to load host view controller for extension %{public}@: %{public}@
Already have extension view controller for notification request %{public}@: %{public}@
Loaded extension %{public}@ failed: %{public}@
Loaded extension %{public}@ for categories [ %{public}@ ] with attributes: %{public}@
Could not find container bundle id for extension %{public}@
openURL: failed: %@
[%{public}@] Received notification %{public}@
Extension class %{public}@ does not implement selector didReceiveNotification:
[%{public}@] Received notification response %{public}@ for @%{public}@
Extension class %{public}@ does not implement selector didReceiveNotificationResponse:completionHandler:
[%{public}@] Extension called completion notification response %{public}@ for @%{public}@: %ld
Extension class %{public}@ does not implement selector mediaPause
Extension class %{public}@ does not implement selector mediaPlay
View controller %{public}@ in extension %{public}@ does not conform to protocol %{public}@
Unexpected extension context class: %{public}@
-[_UNNotificationContentExtensionHostViewController viewWillAppear:]
-[_UNNotificationContentExtensionHostViewController viewDidAppear:]
-[_UNNotificationContentExtensionHostViewController viewWillDisappear:]
-[_UNNotificationContentExtensionHostViewController viewDidDisappear:]
<%@: %p; notificationRequestID: %@; extensionID: %@; extensionRequestID: %@>
v8@?0
com.apple.usernotifications.content-extension
v24@?0@"NSArray"8@"NSError"16
UNNotificationExtensionCategory
UNNotificationExtensionCustomSectionIdentifier
UNNotificationExtensionDefaultContentHidden
UNNotificationExtensionInitialContentSizeRatio
UNNotificationExtensionOverridesDefaultTitle
UNNotificationExtensionUserInteractionEnabled
com.apple.
-[_UNNotificationContentExtensionHostContainerViewController viewWillAppear:]
-[_UNNotificationContentExtensionHostContainerViewController viewDidAppear:]
-[_UNNotificationContentExtensionHostContainerViewController viewWillDisappear:]
-[_UNNotificationContentExtensionHostContainerViewController viewDidDisappear:]
com.apple.UserNotificationsUIKit.DefaultUIExtension
notificationappex
v32@?0@"<NSCopying>"8@"UIViewController"16@"NSError"24
MSNMonitorEndException
MSNMonitorBeginException
com.apple.usernotificationsui.hostcontext.delegate
v32@?0@"NSData"8Q16^B24
Extensions
Extensions-host
Extensions-service
com.apple.UserNotificationsUI
UNAppLaunchOriginContentExtension
actions
com.apple.UserNotificationsUI.ExtensionVendorContext
v32@?0@"UNNotificationAction"8Q16^B24
v16@?0Q8
play.fill
pause.fill
MTMaterialView
Unable to find class %s
title
-[_UNNotificationContentExtensionVendorViewController viewWillAppear:]
-[_UNNotificationContentExtensionVendorViewController viewDidAppear:]
-[_UNNotificationContentExtensionVendorViewController viewWillDisappear:]
-[_UNNotificationContentExtensionVendorViewController viewDidDisappear:]
v16@?0@"<UIViewControllerTransitionCoordinatorContext>"8
_UNNotificationContentExtensionVendorContext
-[_UNNotificationContentExtensionVendorViewController _invalidateExtensionContext]
softlink:o:path:/System/Library/PrivateFrameworks/MediaSafetyNet.framework/MediaSafetyNet
softlink:r:path:/System/Library/PrivateFrameworks/MaterialKit.framework/MaterialKit
_UNNotificationContentExtensionHostViewController
_UNNotificationExtensionHostInterface
_UNNotificationExtensionVendorInterface
_UNBlockTouchesView
_UNNotificationContentExtensionManager
UserNotificationsUI
_UNNotificationContentExtensionHostContainerViewController
_UNNotificationContentExtensionHostContextDelegate
NSObject
_UNMaterialButton
MTVisualStylingRequiring
_UNNotificationContentExtensionHostContext
_UNNotificationContentExtensionCache
_UNNotificationContentExtensionVendorContext
_UNMediaPlayPauseButton
UNNotificationContentExtension
_UNNotificationContentExtensionVendorViewController
_UNNotificationContentExtensionVendorContainer
_UNNotificationContentExtensionVendorViewControllerView
UIScrollViewDelayedTouchesBeganGestureRecognizerClient
T@"NSExtension",&,N,V_extension
T#,R
TQ,N,V_playPauseMediaButtonType
T@"<_UNNotificationContentExtensionHostContainerViewControllerDelegate>",W,N,V_delegate
_button
T@"<_UNNotificationContentExtensionVendorContainer>",W,N,V_notificationExtensionContainer
_extensionAuxiliaryHostProtocol
T@"NSArray",C,N,V_actions
_notificationExtensionContainer
T@"NSArray",R,C,N
_updateSelected
T@"NSMutableDictionary",&,N,V_extensions
bundleForClass:
T@"NSMutableDictionary",&,N,V_styling
dealloc
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
extensionsCache
T@"NSString",R,C
invisibleButton
T@"UIButton",&,N,V_invisibleButton
isProxy
T@"UIColor",R,C,N
release
T@"UIViewController<UNNotificationContentExtension>",&,N,V_extensionViewController
setAdjustsImageWhenHighlighted:
T@"_UNMaterialButton",&,N,V_button
setHighlighted:
T@"_UNNotificationContentExtensionCache",&,N,V_extensionsCache
setWithObjects:
T@,&,N,V_extensionsDiscoveryToken
un_supportedCategoryIdentifiers
TB,N,GisDefaultTitleOverridden,V_defaultTitleOverridden
willMoveToParentViewController:
.cxx_destruct
T@"NSExtension",W,N,V_extension
T@"<NSCopying>",C,N,V_extensionRequestIdentifier
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_playPauseMediaButtonFrame
T@"<_UNNotificationContentExtensionHostContextDelegate>",W,N,V_delegate
_didCheckActionResponseDelegate
T@"MTMaterialView",&,N,V_backgroundCircle
_extensionRequestsDefaultAction
T@"NSArray",C,N,V_notificationActions
_resumeDelegateQueueIfNecessary
T@"NSMutableArray",&,N,V_queuedNotifications
actions
T@"NSMutableDictionary",&,N,V_imageViewStyling
containsObject:
T@"NSObject<OS_dispatch_queue>",&,N,V_delegateQueue
didReceiveNotificationResponse:
T@"NSString",C,N,V_notificationRequestIdentifier
initWithBundleIdentifier:error:
T@"NSString",R,C,N
isEqualToArray:
T@"UIColor",&,N,V_playPauseMediaButtonColor
isQueueInactive
T@"UIView",&,N,V_blockingView
request
T@"_UIRemoteViewController",&,N,V_extensionViewController
setContentMode:
T@"_UNMediaPlayPauseButton",&,N,V_mediaPlayPauseButton
setWantsToBecomeFirstResponder:
T@"_UNNotificationContentExtensionHostContext",&,N,V_extensionHostContext
styling
TB,N,GisDefaultContentHidden,V_defaultContentHidden
viewWillAppear:
TB,N,GisDelegateQueueSuspended,V_delegateQueueSuspended
TB,N,GisQueueInactive,V_queueInactive
TB,N,GisUserInteractionEnabled,V_userInteractionEnabled
TB,N,V_allowManualDismiss
TB,N,V_didCheckActionResponseDelegate
TB,N,V_shouldPlayMediaAfterPresented
TB,N,V_wantsToBecomeFirstResponder
TB,N,V_wantsToReceiveActionResponses
TB,R,N
TB,R,N,G_canScrollX
TB,R,N,G_canScrollY
TB,R,N,Gun_isDefaultContentHidden
TB,R,N,Gun_isDefaultTitleOverridden
TB,R,N,Gun_isUserInteractionEnabled
TQ,R
TQ,R,N
Td,N,V_contentSizeRatio
Td,R,N
Td,R,N,G_scrollHysteresis
Td,R,N,G_touchDelayForScrollDetection
Tq,N,V_type
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
_UUID
__shouldRemoteViewControllerFenceOperations
_actions
_activateQueueIfNecessary
_addExtension:
_addExtensionViewFromViewController:
_allowManualDismiss
_appearState
_applyButtonStyling
_applyImageViewStyling
_applyStyling
_auxiliaryConnection
_backgroundCircle
_beginMatchingExtensions
_blockingView
_buttonTouchUpInside:
_canScrollX
_canScrollY
_canShowWhileLocked
_cancelTouchesForCurrentEventInHostedContent
_contentHeightForWidth:
_contentSizeRatio
_defaultContentHidden
_defaultTitleOverridden
_delegate
_delegateQueue
_delegateQueueSuspended
_extension
_extensionAuxiliaryVendorProtocol
_extensionBundleIdentifier
_extensionContextForUUID:
_extensionDidCompleteNotificationResponse:withOption:
_extensionDidUpdateNotificationActions:
_extensionDidUpdatePlayPauseMediaButton
_extensionDidUpdateTitle:
_extensionHostContext
_extensionMediaPlayingPaused
_extensionMediaPlayingStarted
_extensionRequestIdentifier
_extensionRequestsDismiss
_extensionSetPlayPauseMediaButtonColor:
_extensionSetPlayPauseMediaButtonFrame:
_extensionSetPlayPauseMediaButtonType:
_extensionViewController
_extensionWantsMessagesFromHostDelivered
_extensionWantsToBecomeFirstResponder:
_extensionWantsToReceiveActionResponses:
_extensionWantsToUpdateMediaPlayPauseButton
_extensions
_extensionsCache
_extensionsDiscoveryToken
_flushQueuedRequests
_hostDidReceiveNotification:
_hostDidReceiveNotificationResponse:
_hostDidReceiveNotificationResponse:completionHandler:
_hostWantsMediaToPause
_hostWantsMediaToPlay
_hostWantsToPreserveInputViews
_hostWantsToRestoreInputViews
_hostWantsToUpdateMediaPlayPauseButton
_imageViewStyling
_invalidateExtensionContext
_invalidationOnceFlag
_invisibleButton
_isSecureForRemoteViewService
_kill:
_loadExtensionViewController
_matchingAttributes
_mediaPlayPauseButton
_mediaPlayPauseButtonTapped:
_notificationActions
_notificationExtension
_notificationRequestIdentifier
_pauseMediaIfPresented
_playMediaIfPresented
_playPauseMediaButtonColor
_playPauseMediaButtonFrame
_playPauseMediaButtonType
_preserveInputViewsWithId:animated:
_principalObject
_queue
_queueInactive
_queuedNotifications
_removeAllExtensions
_restoreInputViewsWithId:animated:
_scrollHysteresis
_setContinuousCornerRadius:
_setFlagsRelatedToState:to:
_setupExtensionViewController:
_setupMediaButton
_shouldForwardSystemLayoutFittingSizeChanges
_shouldPlayMediaAfterPresented
_sourceDictForSource:
_stopMatchingExtensions
_styling
_systemImageNamed:
_teardownExtension
_touchDelayForScrollDetection
_touchDelayGestureRecognizer
_type
_un_contentSizeRatio
_un_customSectionIdentifiers
_un_extensionContainerBundleIdentifier
_updateBackground
_updateBackgroundForAudioStyle
_updateBackgroundForMovieStyle
_updateMediaPlayPauseButton
_updateSelectedForAudioStyle
_updateSelectedForMovieStyle
_updateSize
_updateSizeForAudioStyle
_updateSizeForMovieStyle
_updateStyle
_updateStyleForAudioStyle
_updateStyleForMovieStyle
_updateType
_userInteractionEnabled
_visualStylingProvider
_wantsToBecomeFirstResponder
_wantsToReceiveActionResponses
_willAppearInRemoteViewController:
actionIdentifier
addChildViewController:
addGestureRecognizer:
addObject:
addObserver:forKeyPath:options:context:
addSubview:
addTarget:action:forControlEvents:
allowManualDismiss
animateAlongsideTransition:completion:
animateWithDuration:delay:options:animations:completion:
archivedDataWithRootObject:requiringSecureCoding:error:
array
arrayWithObjects:count:
attributes
automaticallyUpdateView:withStyle:
autorelease
backgroundCircle
becomeFirstResponder
beginAppearanceTransition:animated:
beginMatchingExtensionsWithAttributes:completion:
beginRequestWithExtensionContext:
blockingView
boolValue
bounds
bs_beginAppearanceTransition:animated:
bs_endAppearanceTransition:
bs_setSafeObject:forKey:
bundleIdentifier
button
canBecomeFirstResponder
canResignFirstResponder
canScrollX
canScrollY
cancelExtensionRequestWithIdentifier:
cancelTouchesForCurrentEventInExtension
class
clearColor
completeRequestReturningItems:completionHandler:
componentsJoinedByString:
conformsToProtocol:
containingBundleRecord
contentSizeRatio
copy
count
countByEnumeratingWithState:objects:count:
date
debugDescription
defaultContentHidden
defaultTitleOverridden
defaultWorkspace
delayed:
delaysContentTouches
delegate
delegateQueue
delegateQueueSuspended
description
dictionary
dictionaryWithObjects:forKeys:count:
didCheckActionResponseDelegate
didMoveToParentViewController:
didReceiveNotification:
didReceiveNotificationResponse:completionHandler:
disconnect
dismissNotificationContentExtension
endAppearanceTransition
endMatchingExtensions:
enumerateObjectsUsingBlock:
extension
extensionContext
extensionForNotificationSourceIdentifier:categoryIdentifier:
extensionHostContext
extensionIdentifier
extensionRequestIdentifier
extensionViewController
extensionViewControllerDidLoadExtension:
extensionViewControllerDidUpdateActions:
extensionViewControllerDidUpdateTitle:
extensionViewControllerRequestsDefaultAction:
extensionViewControllerRequestsDismiss:
extensionWantsToReceiveActionResponses
extensionWithIdentifier:error:
extensions
extensionsDiscoveryToken
firstObject
firstResponder
floatValue
hasPrefix:
hash
hitTestsAsOpaque
identifier
imageView
imageViewStyling
init
initWithExtension:notification:actions:
initWithFrame:
initWithFrame:type:
initWithInputItems:listenerEndpoint:contextUUID:
initWithNibName:bundle:
initWithObjects:
initWithTarget:action:
initialize
inputItems
insertSubview:belowSubview:
instantiateViewControllerWithInputItems:connectionHandler:
integerValue
interfaceWithProtocol:
isDefaultContentHidden
isDefaultTitleOverridden
isDelegateQueueSuspended
isEnabled
isEqual:
isEqualToString:
isHighlighted
isKindOfClass:
isMediaSafetyNetEnabled
isMemberOfClass:
isSelected
isUserInteractionEnabled
isViewLoaded
layer
layoutSubviews
length
loadView
localizedDescription
mainScreen
materialViewWithRecipe:
mediaPause
mediaPlay
mediaPlayPauseButton
mediaPlayPauseButtonFrame
mediaPlayPauseButtonTintColor
mediaPlayPauseButtonType
mediaPlayingPaused
mediaPlayingStarted
mt_removeAllVisualStyling
notification
notificationActions
notificationExtension:didUpdateNotificationActions:
notificationExtension:didUpdateTitle:
notificationExtension:extensionDidCompleteResponse:withOption:
notificationExtensionContainer
notificationExtensionDidUpdatePlayPauseMediaButton:
notificationExtensionMediaPlayingDidPause:
notificationExtensionMediaPlayingDidStart:
notificationExtensionRequestsDefaultAction:
notificationExtensionRequestsDismiss:
notificationExtensionVendorContext
notificationRequestIdentifier
numberWithInteger:
numberWithUnsignedInteger:
objectForKey:
objectForKeyedSubscript:
observeValueForKeyPath:ofObject:change:context:
openSensitiveURL:withOptions:error:
openURL:completionHandler:
parentViewController
pauseMedia
performNotificationDefaultAction
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
playMedia
playPauseMediaButtonColor
playPauseMediaButtonFrame
playPauseMediaButtonType
preferredContentSize
preferredContentSizeDidChangeForChildContentContainer:
preserveInputViews
queue
queueInactive
queuedNotifications
registerExtensions:
remoteObjectProxy
removeAllObjects
removeFromParentViewController
removeFromSuperview
removeObjectForKey:
removeObserver:forKeyPath:
requestDismiss
requiredVisualStyleCategories
resignFirstResponder
respondsToSelector:
restoreInputViews
retain
retainCount
scrollHysteresis
self
sendActionsForControlEvents:
sendSubviewToBack:
setActions:
setAdjustsImageWhenDisabled:
setAllowManualDismiss:
setAlpha:
setAutoresizingMask:
setBackgroundCircle:
setBackgroundColor:
setBlockingView:
setButton:
setContentEdgeInsets:
setContentHorizontalAlignment:
setContentSizeRatio:
setContentVerticalAlignment:
setDefaultContentHidden:
setDefaultTitleOverridden:
setDelaysTouchesBegan:
setDelegate:
setDelegateQueue:
setDelegateQueueSuspended:
setDidCheckActionResponseDelegate:
setEnabled:
setExtension:
setExtensionHostContext:
setExtensionRequestIdentifier:
setExtensionViewController:
setExtensions:
setExtensionsCache:
setExtensionsDiscoveryToken:
setFrame:
setHidden:
setHitTestsAsOpaque:
setImage:forState:
setImageViewStyle:forState:
setImageViewStyling:
setInheritsSecurity:
setInvisibleButton:
setMediaPlayPauseButton:
setNeedsLayout
setNotificationActions:
setNotificationExtensionContainer:
setNotificationRequestIdentifier:
setObject:forKey:
setObject:forKeyedSubscript:
setPlayPauseMediaButtonColor:
setPlayPauseMediaButtonFrame:
setPlayPauseMediaButtonType:
setPreferredContentSize:
setQueue:
setQueueInactive:
setQueuedNotifications:
setSelected:
setServiceViewShouldShareTouchesWithHost:
setShouldPlayMediaAfterPresented:
setShowsTouchWhenHighlighted:
setSize:
setStyle:forState:
setStyling:
setTintColor:
setTitle:
setType:
setUserInfo:
setUserInteractionEnabled:
setView:
setVisualStylingProvider:forCategory:
setWantsToReceiveActionResponses:
sharedInstance
shouldAutomaticallyForwardAppearanceMethods
shouldPlayMediaAfterPresented
size
sizeForChildContentContainer:withParentContainerSize:
sourceIdentifier
state
stopAutomaticallyUpdatingView:
stringWithFormat:
superclass
systemLayoutFittingSizeDidChangeForChildContentContainer:
systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:
timeIntervalSinceNow
tintColor
tintColorDidChange
title
touchDelayForScrollDetection
touchesShouldBegin:withEvent:inContentView:
type
un_allowedSourceIdentifiers
un_defaultContentHidden
un_defaultTitleOverridden
un_effectiveContentSizeRatio
un_isDefaultContentHidden
un_isDefaultTitleOverridden
un_isUserInteractionEnabled
un_logDigest
un_userInteractionEnabled
unarchivedObjectOfClass:fromData:error:
unarchivedObjectOfClasses:fromData:error:
updateMediaPlayPauseButton
userInfo
userInteractionEnabled
valueWithPointer:
view
viewDidAppear:
viewDidDisappear:
viewDidLoad
viewServiceDidTerminateWithError:
viewWillDisappear:
viewWillLayoutSubviews
viewWillTransitionToSize:withTransitionCoordinator:
visualStylingProviderForCategory:
wantsToBecomeFirstResponder
wantsToReceiveActionResponses
zone
@32@0:8@16@24
B16@0:8
v20@0:8B16
v24@0:8@16
v32@0:8{CGSize=dd}16
@16@0:8
v16@0:8
@"NSExtension"
@"<NSCopying>"
@"NSString"
v32@0:8@16Q24
v24@0:8Q16
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v32@0:8@"UNNotificationResponse"16Q24
v24@0:8@"UIColor"16
v24@0:8@"NSString"16
v24@0:8@"NSArray"16
v32@0:8@16@?24
v24@0:8@"UNNotification"16
v24@0:8@"UNNotificationResponse"16
v32@0:8@"UNNotificationResponse"16@?<v@?Q>24
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"_UNNotificationContentExtensionCache"
d16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v40@0:8@16@24Q32
v24@0:8@"_UNNotificationContentExtensionHostContext"16
v32@0:8@"_UNNotificationContentExtensionHostContext"16@"NSString"24
v32@0:8@"_UNNotificationContentExtensionHostContext"16@"NSArray"24
v40@0:8@"_UNNotificationContentExtensionHostContext"16@"UNNotificationResponse"24Q32
@40@0:8@16@24@32
{CGSize=dd}40@0:8@16{CGSize=dd}24
d24@0:8d16
v24@0:8d16
@"<_UNNotificationContentExtensionHostContainerViewControllerDelegate>"
@"NSArray"
@"_UIRemoteViewController"
@"_UNNotificationContentExtensionHostContext"
@"UIView"
@"_UNMediaPlayPauseButton"
@"NSMutableArray"
v32@0:8@16q24
v32@0:8@"MTVisualStylingProvider"16q24
@"NSArray"16@0:8
v32@0:8q16Q24
v28@0:8Q16B24
@24@0:8q16
@"MTVisualStylingProvider"
@"NSMutableDictionary"
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
@"UIColor"
@"<_UNNotificationContentExtensionHostContextDelegate>"
@"NSObject<OS_dispatch_queue>"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@24@0:8@16
@"<_UNNotificationContentExtensionVendorContainer>"
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48
v24@0:8q16
q16@0:8
@"_UNMaterialButton"
@"UIButton"
@"MTMaterialView"
@"UIColor"16@0:8
v40@0:8{CGSize=dd}16@32
v48@0:8@16@24@32^v40
{atomic_flag="_Value"AB}
@"UIScrollViewDelayedTouchesBeganGestureRecognizer"
@"UIViewController<UNNotificationContentExtension>"
B40@0:8@16@24@32
B40@0:8@"NSSet"16@"UIEvent"24@"UIView"32
@(#)PROGRAM:UserNotificationsUI  PROJECT:UserNotificationsUI-1
?333333
%{public}s
Extension view service for notification request %{public}@ disconnected with error: %{public}@
Cancelling loaded extension for notification request %{public}@
Can't cancel extension request 
missing extension (%{public}@) or extension request ID (%{public}@) for notification request %{public}@
Not loading an extension because the notification has no category identifier
Starting notifications extensions discovery
Error matching extensions: %{public}@
Encountered error obtaining application extension record for extension %{public}@: %{public}@
Invalid value for %{public}@ in Info.plist
Extension %{public}@ requested a custom section identifier but it is not an internal extension
Sending action %{public}@ for notification %{public}@ to extension %{public}@
Received unexpected notification for section %{public}@ while displaying notification for extension %{public}@
Got an invalid type for the media button
Setting up extension view controller for notification %{public}@
Disconnecting extension view controller for notification %{public}@
Ending MediaSafetyNet exception in _teardownExtension:
Killing the process of a remote view controller that failed to load, %@
Loading host view controller from extension %{public}@ for notification request %{public}@
Loaded host view controller with extension request %{public}@ from extension %{public}@ for notification request %{public}@ (%.2fs)
Failed to load host view controller for extension %{public}@: %{public}@
Already have extension view controller for notification request %{public}@: %{public}@
Loaded extension %{public}@ failed: %{public}@
Loaded extension %{public}@ for categories [ %{public}@ ] with attributes: %{public}@
Could not find container bundle id for extension %{public}@
openURL: failed: %@
[%{public}@] Received notification %{public}@
Extension class %{public}@ does not implement selector didReceiveNotification:
[%{public}@] Received notification response %{public}@ for @%{public}@
Extension class %{public}@ does not implement selector didReceiveNotificationResponse:completionHandler:
[%{public}@] Extension called completion notification response %{public}@ for @%{public}@: %ld
Extension class %{public}@ does not implement selector mediaPause
Extension class %{public}@ does not implement selector mediaPlay
View controller %{public}@ in extension %{public}@ does not conform to protocol %{public}@
Unexpected extension context class: %{public}@
-[_UNNotificationContentExtensionHostViewController viewWillAppear:]
-[_UNNotificationContentExtensionHostViewController viewDidAppear:]
-[_UNNotificationContentExtensionHostViewController viewWillDisappear:]
-[_UNNotificationContentExtensionHostViewController viewDidDisappear:]
<%@: %p; notificationRequestID: %@; extensionID: %@; extensionRequestID: %@>
v8@?0
com.apple.usernotifications.content-extension
v24@?0@"NSArray"8@"NSError"16
UNNotificationExtensionCategory
UNNotificationExtensionCustomSectionIdentifier
UNNotificationExtensionDefaultContentHidden
UNNotificationExtensionInitialContentSizeRatio
UNNotificationExtensionOverridesDefaultTitle
UNNotificationExtensionUserInteractionEnabled
com.apple.
-[_UNNotificationContentExtensionHostContainerViewController viewWillAppear:]
-[_UNNotificationContentExtensionHostContainerViewController viewDidAppear:]
-[_UNNotificationContentExtensionHostContainerViewController viewWillDisappear:]
-[_UNNotificationContentExtensionHostContainerViewController viewDidDisappear:]
com.apple.UserNotificationsUIKit.DefaultUIExtension
notificationappex
v32@?0@"<NSCopying>"8@"UIViewController"16@"NSError"24
MSNMonitorEndException
MSNMonitorBeginException
com.apple.usernotificationsui.hostcontext.delegate
v32@?0@"NSData"8Q16^B24
Extensions
Extensions-host
Extensions-service
com.apple.UserNotificationsUI
UNAppLaunchOriginContentExtension
actions
com.apple.UserNotificationsUI.ExtensionVendorContext
v32@?0@"UNNotificationAction"8Q16^B24
v16@?0Q8
play.fill
pause.fill
MTMaterialView
Unable to find class %s
title
-[_UNNotificationContentExtensionVendorViewController viewWillAppear:]
-[_UNNotificationContentExtensionVendorViewController viewDidAppear:]
-[_UNNotificationContentExtensionVendorViewController viewWillDisappear:]
-[_UNNotificationContentExtensionVendorViewController viewDidDisappear:]
v16@?0@"<UIViewControllerTransitionCoordinatorContext>"8
_UNNotificationContentExtensionVendorContext
-[_UNNotificationContentExtensionVendorViewController _invalidateExtensionContext]
softlink:o:path:/System/Library/PrivateFrameworks/MediaSafetyNet.framework/MediaSafetyNet
softlink:r:path:/System/Library/PrivateFrameworks/MaterialKit.framework/MaterialKit
_UNNotificationContentExtensionHostViewController
_UNNotificationExtensionHostInterface
_UNNotificationExtensionVendorInterface
_UNBlockTouchesView
_UNNotificationContentExtensionManager
UserNotificationsUI
_UNNotificationContentExtensionHostContainerViewController
_UNNotificationContentExtensionHostContextDelegate
NSObject
_UNMaterialButton
MTVisualStylingRequiring
_UNNotificationContentExtensionHostContext
_UNNotificationContentExtensionCache
_UNNotificationContentExtensionVendorContext
_UNMediaPlayPauseButton
UNNotificationContentExtension
_UNNotificationContentExtensionVendorViewController
_UNNotificationContentExtensionVendorContainer
_UNNotificationContentExtensionVendorViewControllerView
UIScrollViewDelayedTouchesBeganGestureRecognizerClient
T@"NSExtension",&,N,V_extension
T#,R
TQ,N,V_playPauseMediaButtonType
T@"<_UNNotificationContentExtensionHostContainerViewControllerDelegate>",W,N,V_delegate
_button
T@"<_UNNotificationContentExtensionVendorContainer>",W,N,V_notificationExtensionContainer
_extensionAuxiliaryHostProtocol
T@"NSArray",C,N,V_actions
_notificationExtensionContainer
T@"NSArray",R,C,N
_updateSelected
T@"NSMutableDictionary",&,N,V_extensions
bundleForClass:
T@"NSMutableDictionary",&,N,V_styling
dealloc
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
extensionsCache
T@"NSString",R,C
invisibleButton
T@"UIButton",&,N,V_invisibleButton
isProxy
T@"UIColor",R,C,N
release
T@"UIViewController<UNNotificationContentExtension>",&,N,V_extensionViewController
setAdjustsImageWhenHighlighted:
T@"_UNMaterialButton",&,N,V_button
setHighlighted:
T@"_UNNotificationContentExtensionCache",&,N,V_extensionsCache
setWithObjects:
T@,&,N,V_extensionsDiscoveryToken
un_supportedCategoryIdentifiers
TB,N,GisDefaultTitleOverridden,V_defaultTitleOverridden
willMoveToParentViewController:
.cxx_destruct
T@"NSExtension",W,N,V_extension
T@"<NSCopying>",C,N,V_extensionRequestIdentifier
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_playPauseMediaButtonFrame
T@"<_UNNotificationContentExtensionHostContextDelegate>",W,N,V_delegate
_didCheckActionResponseDelegate
T@"MTMaterialView",&,N,V_backgroundCircle
_extensionRequestsDefaultAction
T@"NSArray",C,N,V_notificationActions
_resumeDelegateQueueIfNecessary
T@"NSMutableArray",&,N,V_queuedNotifications
actions
T@"NSMutableDictionary",&,N,V_imageViewStyling
containsObject:
T@"NSObject<OS_dispatch_queue>",&,N,V_delegateQueue
didReceiveNotificationResponse:
T@"NSString",C,N,V_notificationRequestIdentifier
initWithBundleIdentifier:error:
T@"NSString",R,C,N
isEqualToArray:
T@"UIColor",&,N,V_playPauseMediaButtonColor
isQueueInactive
T@"UIView",&,N,V_blockingView
request
T@"_UIRemoteViewController",&,N,V_extensionViewController
setContentMode:
T@"_UNMediaPlayPauseButton",&,N,V_mediaPlayPauseButton
setWantsToBecomeFirstResponder:
T@"_UNNotificationContentExtensionHostContext",&,N,V_extensionHostContext
styling
TB,N,GisDefaultContentHidden,V_defaultContentHidden
viewWillAppear:
TB,N,GisDelegateQueueSuspended,V_delegateQueueSuspended
TB,N,GisQueueInactive,V_queueInactive
TB,N,GisUserInteractionEnabled,V_userInteractionEnabled
TB,N,V_allowManualDismiss
TB,N,V_didCheckActionResponseDelegate
TB,N,V_shouldPlayMediaAfterPresented
TB,N,V_wantsToBecomeFirstResponder
TB,N,V_wantsToReceiveActionResponses
TB,R,N
TB,R,N,G_canScrollX
TB,R,N,G_canScrollY
TB,R,N,Gun_isDefaultContentHidden
TB,R,N,Gun_isDefaultTitleOverridden
TB,R,N,Gun_isUserInteractionEnabled
TQ,R
TQ,R,N
Td,N,V_contentSizeRatio
Td,R,N
Td,R,N,G_scrollHysteresis
Td,R,N,G_touchDelayForScrollDetection
Tq,N,V_type
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
_UUID
__shouldRemoteViewControllerFenceOperations
_actions
_activateQueueIfNecessary
_addExtension:
_addExtensionViewFromViewController:
_allowManualDismiss
_appearState
_applyButtonStyling
_applyImageViewStyling
_applyStyling
_auxiliaryConnection
_backgroundCircle
_beginMatchingExtensions
_blockingView
_buttonTouchUpInside:
_canScrollX
_canScrollY
_canShowWhileLocked
_cancelTouchesForCurrentEventInHostedContent
_contentHeightForWidth:
_contentSizeRatio
_defaultContentHidden
_defaultTitleOverridden
_delegate
_delegateQueue
_delegateQueueSuspended
_extension
_extensionAuxiliaryVendorProtocol
_extensionBundleIdentifier
_extensionContextForUUID:
_extensionDidCompleteNotificationResponse:withOption:
_extensionDidUpdateNotificationActions:
_extensionDidUpdatePlayPauseMediaButton
_extensionDidUpdateTitle:
_extensionHostContext
_extensionMediaPlayingPaused
_extensionMediaPlayingStarted
_extensionRequestIdentifier
_extensionRequestsDismiss
_extensionSetPlayPauseMediaButtonColor:
_extensionSetPlayPauseMediaButtonFrame:
_extensionSetPlayPauseMediaButtonType:
_extensionViewController
_extensionWantsMessagesFromHostDelivered
_extensionWantsToBecomeFirstResponder:
_extensionWantsToReceiveActionResponses:
_extensionWantsToUpdateMediaPlayPauseButton
_extensions
_extensionsCache
_extensionsDiscoveryToken
_flushQueuedRequests
_hostDidReceiveNotification:
_hostDidReceiveNotificationResponse:
_hostDidReceiveNotificationResponse:completionHandler:
_hostWantsMediaToPause
_hostWantsMediaToPlay
_hostWantsToPreserveInputViews
_hostWantsToRestoreInputViews
_hostWantsToUpdateMediaPlayPauseButton
_imageViewStyling
_invalidateExtensionContext
_invalidationOnceFlag
_invisibleButton
_isSecureForRemoteViewService
_kill:
_loadExtensionViewController
_matchingAttributes
_mediaPlayPauseButton
_mediaPlayPauseButtonTapped:
_notificationActions
_notificationExtension
_notificationRequestIdentifier
_pauseMediaIfPresented
_playMediaIfPresented
_playPauseMediaButtonColor
_playPauseMediaButtonFrame
_playPauseMediaButtonType
_preserveInputViewsWithId:animated:
_principalObject
_queue
_queueInactive
_queuedNotifications
_removeAllExtensions
_restoreInputViewsWithId:animated:
_scrollHysteresis
_setContinuousCornerRadius:
_setFlagsRelatedToState:to:
_setupExtensionViewController:
_setupMediaButton
_shouldForwardSystemLayoutFittingSizeChanges
_shouldPlayMediaAfterPresented
_sourceDictForSource:
_stopMatchingExtensions
_styling
_systemImageNamed:
_teardownExtension
_touchDelayForScrollDetection
_touchDelayGestureRecognizer
_type
_un_contentSizeRatio
_un_customSectionIdentifiers
_un_extensionContainerBundleIdentifier
_updateBackground
_updateBackgroundForAudioStyle
_updateBackgroundForMovieStyle
_updateMediaPlayPauseButton
_updateSelectedForAudioStyle
_updateSelectedForMovieStyle
_updateSize
_updateSizeForAudioStyle
_updateSizeForMovieStyle
_updateStyle
_updateStyleForAudioStyle
_updateStyleForMovieStyle
_updateType
_userInteractionEnabled
_visualStylingProvider
_wantsToBecomeFirstResponder
_wantsToReceiveActionResponses
_willAppearInRemoteViewController:
actionIdentifier
addChildViewController:
addGestureRecognizer:
addObject:
addObserver:forKeyPath:options:context:
addSubview:
addTarget:action:forControlEvents:
allowManualDismiss
animateAlongsideTransition:completion:
animateWithDuration:delay:options:animations:completion:
archivedDataWithRootObject:requiringSecureCoding:error:
array
arrayWithObjects:count:
attributes
automaticallyUpdateView:withStyle:
autorelease
backgroundCircle
becomeFirstResponder
beginAppearanceTransition:animated:
beginMatchingExtensionsWithAttributes:completion:
beginRequestWithExtensionContext:
blockingView
boolValue
bounds
bs_beginAppearanceTransition:animated:
bs_endAppearanceTransition:
bs_setSafeObject:forKey:
bundleIdentifier
button
canBecomeFirstResponder
canResignFirstResponder
canScrollX
canScrollY
cancelExtensionRequestWithIdentifier:
cancelTouchesForCurrentEventInExtension
class
clearColor
completeRequestReturningItems:completionHandler:
componentsJoinedByString:
conformsToProtocol:
containingBundleRecord
contentSizeRatio
copy
count
countByEnumeratingWithState:objects:count:
date
debugDescription
defaultContentHidden
defaultTitleOverridden
defaultWorkspace
delayed:
delaysContentTouches
delegate
delegateQueue
delegateQueueSuspended
description
dictionary
dictionaryWithObjects:forKeys:count:
didCheckActionResponseDelegate
didMoveToParentViewController:
didReceiveNotification:
didReceiveNotificationResponse:completionHandler:
disconnect
dismissNotificationContentExtension
endAppearanceTransition
endMatchingExtensions:
enumerateObjectsUsingBlock:
extension
extensionContext
extensionForNotificationSourceIdentifier:categoryIdentifier:
extensionHostContext
extensionIdentifier
extensionRequestIdentifier
extensionViewController
extensionViewControllerDidLoadExtension:
extensionViewControllerDidUpdateActions:
extensionViewControllerDidUpdateTitle:
extensionViewControllerRequestsDefaultAction:
extensionViewControllerRequestsDismiss:
extensionWantsToReceiveActionResponses
extensionWithIdentifier:error:
extensions
extensionsDiscoveryToken
firstObject
firstResponder
floatValue
hasPrefix:
hash
hitTestsAsOpaque
identifier
imageView
imageViewStyling
init
initWithExtension:notification:actions:
initWithFrame:
initWithFrame:type:
initWithInputItems:listenerEndpoint:contextUUID:
initWithNibName:bundle:
initWithObjects:
initWithTarget:action:
initialize
inputItems
insertSubview:belowSubview:
instantiateViewControllerWithInputItems:connectionHandler:
integerValue
interfaceWithProtocol:
isDefaultContentHidden
isDefaultTitleOverridden
isDelegateQueueSuspended
isEnabled
isEqual:
isEqualToString:
isHighlighted
isKindOfClass:
isMediaSafetyNetEnabled
isMemberOfClass:
isSelected
isUserInteractionEnabled
isViewLoaded
layer
layoutSubviews
length
loadView
localizedDescription
mainScreen
materialViewWithRecipe:
mediaPause
mediaPlay
mediaPlayPauseButton
mediaPlayPauseButtonFrame
mediaPlayPauseButtonTintColor
mediaPlayPauseButtonType
mediaPlayingPaused
mediaPlayingStarted
mt_removeAllVisualStyling
notification
notificationActions
notificationExtension:didUpdateNotificationActions:
notificationExtension:didUpdateTitle:
notificationExtension:extensionDidCompleteResponse:withOption:
notificationExtensionContainer
notificationExtensionDidUpdatePlayPauseMediaButton:
notificationExtensionMediaPlayingDidPause:
notificationExtensionMediaPlayingDidStart:
notificationExtensionRequestsDefaultAction:
notificationExtensionRequestsDismiss:
notificationExtensionVendorContext
notificationRequestIdentifier
numberWithInteger:
numberWithUnsignedInteger:
objectForKey:
objectForKeyedSubscript:
observeValueForKeyPath:ofObject:change:context:
openSensitiveURL:withOptions:error:
openURL:completionHandler:
parentViewController
pauseMedia
performNotificationDefaultAction
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
playMedia
playPauseMediaButtonColor
playPauseMediaButtonFrame
playPauseMediaButtonType
preferredContentSize
preferredContentSizeDidChangeForChildContentContainer:
preserveInputViews
queue
queueInactive
queuedNotifications
registerExtensions:
remoteObjectProxy
removeAllObjects
removeFromParentViewController
removeFromSuperview
removeObjectForKey:
removeObserver:forKeyPath:
requestDismiss
requiredVisualStyleCategories
resignFirstResponder
respondsToSelector:
restoreInputViews
retain
retainCount
scrollHysteresis
self
sendActionsForControlEvents:
sendSubviewToBack:
setActions:
setAdjustsImageWhenDisabled:
setAllowManualDismiss:
setAlpha:
setAutoresizingMask:
setBackgroundCircle:
setBackgroundColor:
setBlockingView:
setButton:
setContentEdgeInsets:
setContentHorizontalAlignment:
setContentSizeRatio:
setContentVerticalAlignment:
setDefaultContentHidden:
setDefaultTitleOverridden:
setDelaysTouchesBegan:
setDelegate:
setDelegateQueue:
setDelegateQueueSuspended:
setDidCheckActionResponseDelegate:
setEnabled:
setExtension:
setExtensionHostContext:
setExtensionRequestIdentifier:
setExtensionViewController:
setExtensions:
setExtensionsCache:
setExtensionsDiscoveryToken:
setFrame:
setHidden:
setHitTestsAsOpaque:
setImage:forState:
setImageViewStyle:forState:
setImageViewStyling:
setInheritsSecurity:
setInvisibleButton:
setMediaPlayPauseButton:
setNeedsLayout
setNotificationActions:
setNotificationExtensionContainer:
setNotificationRequestIdentifier:
setObject:forKey:
setObject:forKeyedSubscript:
setPlayPauseMediaButtonColor:
setPlayPauseMediaButtonFrame:
setPlayPauseMediaButtonType:
setPreferredContentSize:
setQueue:
setQueueInactive:
setQueuedNotifications:
setSelected:
setServiceViewShouldShareTouchesWithHost:
setShouldPlayMediaAfterPresented:
setShowsTouchWhenHighlighted:
setSize:
setStyle:forState:
setStyling:
setTintColor:
setTitle:
setType:
setUserInfo:
setUserInteractionEnabled:
setView:
setVisualStylingProvider:forCategory:
setWantsToReceiveActionResponses:
sharedInstance
shouldAutomaticallyForwardAppearanceMethods
shouldPlayMediaAfterPresented
size
sizeForChildContentContainer:withParentContainerSize:
sourceIdentifier
state
stopAutomaticallyUpdatingView:
stringWithFormat:
superclass
systemLayoutFittingSizeDidChangeForChildContentContainer:
systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:
timeIntervalSinceNow
tintColor
tintColorDidChange
title
touchDelayForScrollDetection
touchesShouldBegin:withEvent:inContentView:
type
un_allowedSourceIdentifiers
un_defaultContentHidden
un_defaultTitleOverridden
un_effectiveContentSizeRatio
un_isDefaultContentHidden
un_isDefaultTitleOverridden
un_isUserInteractionEnabled
un_logDigest
un_userInteractionEnabled
unarchivedObjectOfClass:fromData:error:
unarchivedObjectOfClasses:fromData:error:
updateMediaPlayPauseButton
userInfo
userInteractionEnabled
valueWithPointer:
view
viewDidAppear:
viewDidDisappear:
viewDidLoad
viewServiceDidTerminateWithError:
viewWillDisappear:
viewWillLayoutSubviews
viewWillTransitionToSize:withTransitionCoordinator:
visualStylingProviderForCategory:
wantsToBecomeFirstResponder
wantsToReceiveActionResponses
zone
@32@0:8@16@24
B16@0:8
v20@0:8B16
v24@0:8@16
v32@0:8{CGSize=dd}16
@16@0:8
v16@0:8
@"NSExtension"
@"<NSCopying>"
@"NSString"
v32@0:8@16Q24
v24@0:8Q16
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v32@0:8@"UNNotificationResponse"16Q24
v24@0:8@"UIColor"16
v24@0:8@"NSString"16
v24@0:8@"NSArray"16
v32@0:8@16@?24
v24@0:8@"UNNotification"16
v24@0:8@"UNNotificationResponse"16
v32@0:8@"UNNotificationResponse"16@?<v@?Q>24
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"_UNNotificationContentExtensionCache"
d16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v40@0:8@16@24Q32
v24@0:8@"_UNNotificationContentExtensionHostContext"16
v32@0:8@"_UNNotificationContentExtensionHostContext"16@"NSString"24
v32@0:8@"_UNNotificationContentExtensionHostContext"16@"NSArray"24
v40@0:8@"_UNNotificationContentExtensionHostContext"16@"UNNotificationResponse"24Q32
@40@0:8@16@24@32
{CGSize=dd}40@0:8@16{CGSize=dd}24
d24@0:8d16
v24@0:8d16
@"<_UNNotificationContentExtensionHostContainerViewControllerDelegate>"
@"NSArray"
@"_UIRemoteViewController"
@"_UNNotificationContentExtensionHostContext"
@"UIView"
@"_UNMediaPlayPauseButton"
@"NSMutableArray"
v32@0:8@16q24
v32@0:8@"MTVisualStylingProvider"16q24
@"NSArray"16@0:8
v32@0:8q16Q24
v28@0:8Q16B24
@24@0:8q16
@"MTVisualStylingProvider"
@"NSMutableDictionary"
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
@"UIColor"
@"<_UNNotificationContentExtensionHostContextDelegate>"
@"NSObject<OS_dispatch_queue>"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@24@0:8@16
@"<_UNNotificationContentExtensionVendorContainer>"
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48
v24@0:8q16
q16@0:8
@"_UNMaterialButton"
@"UIButton"
@"MTMaterialView"
@"UIColor"16@0:8
v40@0:8{CGSize=dd}16@32
v48@0:8@16@24@32^v40
{atomic_flag="_Value"AB}
@"UIScrollViewDelayedTouchesBeganGestureRecognizer"
@"UIViewController<UNNotificationContentExtension>"
B40@0:8@16@24@32
B40@0:8@"NSSet"16@"UIEvent"24@"UIView"32
