@(#)PROGRAM:UserNotificationsUI  PROJECT:UserNotificationsUI-1
333333
v8@?0
com.apple.usernotificationsui.hostcontext.delegate
v32@?0@"NSData"8Q16^B24
delegateQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_delegateQueue
delegateQueueSuspended
TB,N,GisDelegateQueueSuspended,V_delegateQueueSuspended
wantsToBecomeFirstResponder
TB,N,V_wantsToBecomeFirstResponder
wantsToReceiveActionResponses
TB,N,V_wantsToReceiveActionResponses
playPauseMediaButtonType
TQ,N,V_playPauseMediaButtonType
playPauseMediaButtonFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_playPauseMediaButtonFrame
playPauseMediaButtonColor
T@"UIColor",&,N,V_playPauseMediaButtonColor
delegate
T@"<_UNNotificationContentExtensionHostContextDelegate>",W,N,V_delegate
Extensions
com.apple.UserNotificationsUI
UNAppLaunchOriginContentExtension
actions
com.apple.UserNotificationsUI.ExtensionVendorContext
v32@?0@"UNNotificationAction"8Q16^B24
v16@?0Q8
queue
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
queueInactive
TB,N,GisQueueInactive,V_queueInactive
didCheckActionResponseDelegate
TB,N,V_didCheckActionResponseDelegate
notificationActions
T@"NSArray",C,N,V_notificationActions
notificationExtensionContainer
T@"<_UNNotificationContentExtensionContainer>",W,N,V_notificationExtensionContainer
title
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
mediaPlayPauseButtonType
TQ,R,N
mediaPlayPauseButtonFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
mediaPlayPauseButtonTintColor
T@"UIColor",R,C,N
-[_UNNotificationContentExtensionViewController viewWillAppear:]
-[_UNNotificationContentExtensionViewController viewDidAppear:]
-[_UNNotificationContentExtensionViewController viewWillDisappear:]
-[_UNNotificationContentExtensionViewController viewDidDisappear:]
-[_UNNotificationContentExtensionViewController _invalidateExtensionContext]
extensionViewController
T@"UIViewController<UNNotificationContentExtension>",&,N,V_extensionViewController
delaysContentTouches
TB,R,N
touchDelayForScrollDetection
Td,R,N,G_touchDelayForScrollDetection
scrollHysteresis
Td,R,N,G_scrollHysteresis
canScrollX
TB,R,N,G_canScrollX
canScrollY
TB,R,N,G_canScrollY
openURL: failed: %@
[%{public}@] Received notification %{public}@
Extension class %{public}@ does not implement selector didReceiveNotification:
[%{public}@] Received notification response %{public}@ for @%{public}@
Extension class %{public}@ does not implement selector didReceiveNotificationResponse:completionHandler:
Extension class %{public}@ does not implement selector mediaPause
Extension class %{public}@ does not implement selector mediaPlay
View controller %{public}@ in extension %{public}@ does not conform to protocol %{public}@
%{public}s extension
Unexpected extension context class: %{public}@
_UNNotificationExtensionHostInterface
_UNNotificationExtensionVendorInterface
_UNNotificationContentExtensionHostContext
_UNNotificationContentExtensionVendorContext
UNNotificationContentExtension
NSObject
_UNNotificationContentExtensionViewController
_UNNotificationContentExtensionContainer
_UNNotificationContentExtensionViewControllerView
UIScrollViewDelayedTouchesBeganGestureRecognizerClient
_extensionWantsToReceiveActionResponses:
_extensionWantsToBecomeFirstResponder:
_extensionDidCompleteNotificationResponse:withOption:
_extensionSetPlayPauseMediaButtonType:
_extensionSetPlayPauseMediaButtonFrame:
_extensionSetPlayPauseMediaButtonColor:
_extensionMediaPlayingStarted
_extensionMediaPlayingPaused
_extensionDidUpdatePlayPauseMediaButton
_extensionRequestsDefaultAction
_extensionRequestsDismiss
_extensionDidUpdateTitle:
_extensionDidUpdateNotificationActions:
interfaceWithProtocol:
_hostDidReceiveNotification:
_hostDidReceiveNotificationResponse:
_hostWantsMediaToPlay
_hostWantsMediaToPause
_hostWantsToUpdateMediaPlayPauseButton
_hostWantsToPreserveInputViews
_hostWantsToRestoreInputViews
initWithInputItems:listenerEndpoint:contextUUID:
_resumeDelegateQueueIfNecessary
dealloc
_auxiliaryConnection
remoteObjectProxy
delegate
notificationExtensionDidUpdatePlayPauseMediaButton:
setWantsToReceiveActionResponses:
setWantsToBecomeFirstResponder:
setPlayPauseMediaButtonType:
setPlayPauseMediaButtonFrame:
setPlayPauseMediaButtonColor:
notificationExtension:extensionDidCompleteResponse:withOption:
notificationExtensionMediaPlayingDidStart:
notificationExtensionMediaPlayingDidPause:
notificationExtensionRequestsDefaultAction:
notificationExtensionRequestsDismiss:
notificationExtension:didUpdateTitle:
array
unarchivedObjectOfClass:fromData:error:
addObject:
enumerateObjectsUsingBlock:
notificationExtension:didUpdateNotificationActions:
_extensionAuxiliaryHostProtocol
_extensionAuxiliaryVendorProtocol
setDelegate:
didReceiveNotification:
didReceiveNotificationResponse:
mediaPause
mediaPlay
updateMediaPlayPauseButton
preserveInputViews
restoreInputViews
wantsToBecomeFirstResponder
wantsToReceiveActionResponses
playPauseMediaButtonType
playPauseMediaButtonFrame
playPauseMediaButtonColor
delegateQueue
setDelegateQueue:
isDelegateQueueSuspended
setDelegateQueueSuspended:
.cxx_destruct
_wantsToBecomeFirstResponder
_wantsToReceiveActionResponses
_delegateQueueSuspended
_playPauseMediaButtonType
_playPauseMediaButtonColor
_delegate
_delegateQueue
_playPauseMediaButtonFrame
inputItems
firstObject
userInfo
objectForKey:
setWithObjects:
unarchivedObjectOfClasses:fromData:error:
copy
_activateQueueIfNecessary
dictionaryWithObjects:forKeys:count:
defaultWorkspace
openSensitiveURL:withOptions:error:
archivedDataWithRootObject:requiringSecureCoding:error:
_updateMediaPlayPauseButton
notificationExtensionContainer
_notificationExtension
didCheckActionResponseDelegate
didReceiveNotificationResponse:completionHandler:
setDidCheckActionResponseDelegate:
_UUID
request
identifier
un_logDigest
notification
actionIdentifier
mediaPlayPauseButtonType
mediaPlayPauseButtonFrame
mediaPlayPauseButtonTintColor
_principalObject
mediaPlayingStarted
mediaPlayingPaused
openURL:completionHandler:
performNotificationDefaultAction
dismissNotificationContentExtension
requestDismiss
setNotificationActions:
_extensionWantsMessagesFromHostDelivered
_extensionWantsToUpdateMediaPlayPauseButton
notificationActions
setNotificationExtensionContainer:
queue
setQueue:
isQueueInactive
setQueueInactive:
_queueInactive
_didCheckActionResponseDelegate
_notificationActions
_notificationExtensionContainer
_queue
initWithNibName:bundle:
_invalidateExtensionContext
extensionViewController
removeObserver:forKeyPath:
notificationExtensionVendorContext
canBecomeFirstResponder
addChildViewController:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
_setupExtensionViewController:
_extensionBundleIdentifier
willMoveToParentViewController:
preferredContentSizeDidChangeForChildContentContainer:
mainScreen
bounds
initWithFrame:
setView:
viewDidLoad
delayed:
initWithTarget:action:
setDelaysTouchesBegan:
view
addGestureRecognizer:
viewWillLayoutSubviews
viewWillAppear:
bs_beginAppearanceTransition:animated:
viewDidAppear:
bs_endAppearanceTransition:
viewWillDisappear:
firstResponder
resignFirstResponder
viewDidDisappear:
preferredContentSize
setPreferredContentSize:
systemLayoutFittingSizeDidChangeForChildContentContainer:
systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:
beginRequestWithExtensionContext:
sharedInstance
valueWithPointer:
_preserveInputViewsWithId:animated:
_restoreInputViewsWithId:animated:
bundleForClass:
bundleIdentifier
extensionContext
setFrame:
setAutoresizingMask:
addSubview:
addObserver:forKeyPath:options:context:
completeRequestReturningItems:completionHandler:
isEqualToString:
objectForKeyedSubscript:
_isSecureForRemoteViewService
_shouldForwardSystemLayoutFittingSizeChanges
_willAppearInRemoteViewController:
loadView
shouldAutomaticallyForwardAppearanceMethods
observeValueForKeyPath:ofObject:change:context:
setExtensionViewController:
_invalidationOnceFlag
_touchDelayGestureRecognizer
_extensionViewController
touchesShouldBegin:withEvent:inContentView:
delaysContentTouches
_touchDelayForScrollDetection
_scrollHysteresis
_canScrollX
_canScrollY
v20@0:8B16
v32@0:8@16Q24
v24@0:8Q16
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v24@0:8@16
v16@0:8
v32@0:8@"UNNotificationResponse"16Q24
v24@0:8@"UIColor"16
v24@0:8@"NSString"16
v24@0:8@"NSArray"16
v24@0:8@"UNNotification"16
v24@0:8@"UNNotificationResponse"16
@16@0:8
@40@0:8@16@24@32
B16@0:8
Q16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
@"UIColor"
@"<_UNNotificationContentExtensionHostContextDelegate>"
@"NSObject<OS_dispatch_queue>"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
v32@0:8@16@?24
@"NSArray"
@"<_UNNotificationContentExtensionContainer>"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@"UNNotificationResponse"16@?<v@?Q>24
@"UIColor"16@0:8
@32@0:8@16@24
v32@0:8{CGSize=dd}16
v48@0:8@16@24@32^v40
{atomic_flag="_Value"AB}
@"UIScrollViewDelayedTouchesBeganGestureRecognizer"
@"UIViewController<UNNotificationContentExtension>"
B40@0:8@16@24@32
d16@0:8
B40@0:8@"NSSet"16@"UIEvent"24@"UIView"32
