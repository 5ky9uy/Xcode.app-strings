com.apple.carkit.DNDBuddy
DNDBuddyContainer
com.apple.CarKit.notifications
v16@?0@"NSError"8
v32@?0@"CRBulletin"8Q16^B24
v8@?0
v24@?0@"BSProcessHandle"8@"NSError"16
B32@?0@"CRBulletin"8Q16^B24
B32@?0@"UNNotificationAction"8Q16^B24
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
buddyAlertHandle
T@"SBSRemoteAlertHandle",&,N,V_buddyAlertHandle
presentedBulletins
T@"NSMutableArray",&,N,V_presentedBulletins
isFirstBuddyPresentation
TB,N,V_isFirstBuddyPresentation
notificationCenter
T@"UNUserNotificationCenter",R,N,V_notificationCenter
CARPLAY_LOCKSCREEN_TITLE
CarPlayNotificationIcon.png
v16@?0@"NSTimer"8
alertDismissTimer
T@"NSTimer",&,N,V_alertDismissTimer
alertAutoDismissed
TB,N,V_alertAutoDismissed
com.apple.private.carkit.fallbackNightModeChanged
SignificantTimeChangeNotification
/System/Library/LocationBundles/TimeZone.bundle
sessionStatus
T@"CARSessionStatus",&,N,V_sessionStatus
currentLocation
T@"CLLocation",&,N,V_currentLocation
initialTimerLocation
T@"CLLocation",&,N,V_initialTimerLocation
locationManager
T@"CLLocationManager",&,N,V_locationManager
almanac
T@"GEOAlmanac",&,N,V_almanac
nightMode
TB,N,V_nightMode
nightModeChangeNotificationToken
Ti,N,V_nightModeChangeNotificationToken
nextNightModeChangeTimer
T@"NSTimer",&,N,V_nextNightModeChangeTimer
com.apple.carplay.pairings
carplay-pairing
unpairedVehicleStorage
name
bluetoothAddress
carplayWiFiUUID
carPlayProtocols
supportsEnhancedIntegration
lastConnectedDate
vehicleModelName
internalNotes
pairings
CarPlay
v32@?0@"NSString"8@"NSDictionary"16^B24
cachedVehicles
T@"NSSet",C,N,V_cachedVehicles
CRVehicleStoreAvailabilityDidChangeNotification
DND_TITLE
DND_ALERT_OPT_IN_CALLOUT
[Internal] Do Not Disturb ended
[Internal] File Radar
internalText
T@"NSString",R,N,V_internalText
[Internal] Geofence entered
Entered geofence
[Internal] Geofence exited
Exited geofence
[Internal] Not Driving
What happened?
I'm a Passenger
I've Pulled Over
Incorrect Detection (File Radar)
Other
en_US
v24@?0@"AVAudioPCMBuffer"8@"AVAudioTime"16
CAREnableDictationInternal
com.apple.carplay.internal
recognitionTask
T@"SFSpeechRecognitionTask",&,N,V_recognitionTask
recognitionRequest
T@"SFSpeechAudioBufferRecognitionRequest",&,N,V_recognitionRequest
speechRecognizer
T@"SFSpeechRecognizer",&,N,V_speechRecognizer
audioEngine
T@"AVAudioEngine",&,N,V_audioEngine
currentlyRecording
TB,N,V_currentlyRecording
currentlyTranscribing
TB,N,V_currentlyTranscribing
transcription
T@"NSString",&,N,V_transcription
error
T@"NSError",&,N,V_error
recordingBlock
T@?,C,N,V_recordingBlock
dictationEnabled
TB,R,N
dictationAvailable
finishedTranscribing
TB,N,V_finishedTranscribing
SFSpeechRecognizer
Unable to find class %s
/System/Library/Frameworks/Speech.framework/Speech
AVAudioEngine
/System/Library/Frameworks/AVFoundation.framework/AVFoundation
AVAudioSession
AVAudioSessionCategoryPlayAndRecord
AVAudioSessionModeSpeechRecognition
SFSpeechAudioBufferRecognitionRequest
/System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices
AFPreferences
Vehicle State %@, device ID %@, Vehicular Hints: None: %@ Motion: %@ GPS: %@ Baseband: %@ WiFi: %@ Bluetooth: %@
vehicleState
vehicularHints
vehicleOperatorState
deviceID
vehicleStateDebugDescription
T@"NSString",R
TQ,N,V_vehicleState
TQ,N,V_vehicularHints
TQ,N,V_vehicleOperatorState
T@"NSString",C,N,V_deviceID
v12@?0i8
v24@?0@"RTScenarioTrigger"8@"NSError"16
com.apple.isp.frontcamerapower
com.apple.isp.backcamerapower
com.apple.isp.backtelecamerapower
connected
TB,N,V_connected
hasRecentlyActivatedVoiceOver
TB,N,V_hasRecentlyActivatedVoiceOver
isCaptureSessionRunning
TB,N,V_isCaptureSessionRunning
callObserver
T@"CXCallObserver",&,N,V_callObserver
vehicleStateCheckTimer
T@"NSTimer",&,N,V_vehicleStateCheckTimer
vehicleStateClass
T#,R,W,N,V_vehicleStateClass
radiosPreferences
T@"RadiosPreferences",R,N,V_radiosPreferences
routineManager
T@"RTRoutineManager",R,N,V_routineManager
delegate
T@"<CARDNDStateDelegate>",W,N,V_delegate
airplaneMode
TB,R,N,GisInAirplaneMode
lostMode
TB,R,N,GisInLostMode
idealTimeForBuddy
TB,R,N,GisIdealTimeForBuddy
mostRecentVehicleBTConnectionDate
T@"NSDate",R,N
voiceOverEnabled
TB,R,N,GisVoiceOverEnabled
region
T@"CLCircularRegion",&,N,V_region
regionState
Tq,N,V_regionState
Start Identifier
v24@?0@"NSArray"8@"NSError"16
didCreateGeofenceAroundStart
TB,N,V_didCreateGeofenceAroundStart
shouldCreateGeofenceAroundStart
TB,N,V_shouldCreateGeofenceAroundStart
isCurrentlyInsideGeofence
TB,N,V_isCurrentlyInsideGeofence
activelyMonitoringGeofences
TB,N,V_activelyMonitoringGeofences
T@"RTRoutineManager",&,N,V_routineManager
exitConfirmationActive
TB,N,V_exitConfirmationActive
locationServicesEnabled
TB,N,V_locationServicesEnabled
monitoredRegions
T@"NSArray",&,N,V_monitoredRegions
wiFiManager
T@"CRWiFiCarManager",&,N,V_wiFiManager
exitConfirmationOverride
TB,N,V_exitConfirmationOverride
currentlyInRegion
DNDActive
TB,N,GisDNDActive,V_DNDActive
T@"<CARDNDGeofencingObserverDelegate>",W,N,V_delegate
RTRoutineManager
/System/Library/PrivateFrameworks/CoreRoutine.framework/CoreRoutine
CarPlayCapabilities.plist
-[CRCarPlayCapabilitiesManager resovleCapabilitiesForSession:]_block_invoke
v24@?0@"CRCarPlayCapabilities"8@"NSError"16
-[CRCarPlayCapabilitiesManager persistCarCapabilitiesIfNeeded]
-[CRCarPlayCapabilitiesManager updateFromDefaults]
T@"CARSessionStatus",R,N,V_sessionStatus
session
T@"CARSession",R,N,V_session
stateMachine
T@"CRCarplayCapabilitiesStateMachine",R,N,V_stateMachine
carCapabilities
T@"CRCarPlayCapabilities",&,N,V_carCapabilities
carCapabilitiesURL
T@"NSURL",&,N,V_carCapabilitiesURL
com.apple.MobileAsset.CarExperienceAssets
CarPlayAppBlacklist.plist
com.apple.carkit.AssetQuery
-[CRCarPlayAppServiceAgent requestCarCapabilitiesUpdate]
com.apple.carkit.app.blacklist-changed
v16@?0q8
B24@?0@"MAAsset"8@"NSDictionary"16
com.apple.carkit.app
q24@?0@"MAAsset"8@"MAAsset"16
assetQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_assetQueue
assetQueryInProgress
TB,N,V_assetQueryInProgress
carCapabilitiesManager
T@"CRCarPlayCapabilitiesManager",&,N,V_carCapabilitiesManager
Logs/CrashReporter/DiagnosticLogs/CarPlay
%@%@
CarPlay-
/logs
airplayServer.XXXXX
AirPlayDiagnostics-server-mobility-info
airplay.log
/usr/local/bin/airplayutil show
Connected: Y
port=
HTTP/1.1
application/octet-stream
Prefer
respond-async
Retry-After
Location
%63s
AirPlayServer.tgz
Unknown
com.apple.carkit.serviceAgent
com.apple.private.carkit
v24@?0@"NSSet"8@"NSError"16
com.apple.carkit
B24@?0@"CRVehicle"8^B16
%ld accessories connected:
%ld accessory connected:
Notes: %@
Accessory Name: %@
Manufacturer: %@
Model Number: %@
Firmware Revision: %@
Hardware Revision: %@
Serial Number: %@
v24@?0@"CRVehicle"8@"CRVehicleAccessory"16
com.apple.carplay.allowed-changed
CARPLAY_UUID
com.apple.carplay.in-car
com.apple.carplay.out-of-car
B24@?0@"CRVehicleAccessory"8^B16
@"CRVehicle"24@?0@"CRVehicle"8@"CRVehicle"16
com.apple.carkit.WiFi
com.apple.carkit.vehicleApprovalAlert
v16@?0Q8
com.apple.carkit.wiredBTApprovalAlert
com.apple.carkit.wiredPairing
v20@?0B8@"NSData"12
com.apple.carkit.reconnectionEnableWiFi
com.apple.carkit.enhancedIntegrationAlert
serviceQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_serviceQueue
accessoryManager
T@"CRVehicleAccessoryManager",&,N,V_accessoryManager
preferencesManager
T@"CRCarPlayPreferences",&,N,V_preferencesManager
bluetoothManager
T@"CRBluetoothManager",&,N,V_bluetoothManager
clusterURLManager
T@"CRInstrumentClusterURLManager",&,N,V_clusterURLManager
wifiManager
T@"CRWiFiCarManager",&,N,V_wifiManager
assertionManager
T@"CRWirelessSessionAssertionManager",&,N,V_assertionManager
outstandingApprovalAlerts
T@"NSMutableArray",&,N,V_outstandingApprovalAlerts
outstandingPairingAlerts
T@"NSMutableArray",&,N,V_outstandingPairingAlerts
outstandingEnableWiFiAlerts
T@"NSMutableArray",&,N,V_outstandingEnableWiFiAlerts
outstandingEnhancedIntegrationAlerts
T@"NSMutableArray",&,N,V_outstandingEnhancedIntegrationAlerts
cachedCarPlayAllowedChangeValue
T@"NSNumber",N,V_cachedCarPlayAllowedChangeValue
serviceCountDuringAlertForBluetoothAddress
T@"NSMutableDictionary",&,N,V_serviceCountDuringAlertForBluetoothAddress
BTPowerAccessory
T@"CRVehicleAccessory",&,N,V_BTPowerAccessory
BTPowerVehicle
T@"CRVehicle",&,N,V_BTPowerVehicle
monitoringService
T@"CRCarKitMonitoringServiceAgent",W,N,V_monitoringService
vehicleStore
T@"CRVehicleStore",&,N,V_vehicleStore
actions
T@"NSArray",R,N
categoryIdentifier
T@"NSString",R,N
notificationCategory
T@"UNNotificationCategory",R,N
actionHandler
T@?,C,N,V_actionHandler
title
message
recordID
T@"NSString",R,N,V_recordID
notificationRequest
T@"UNNotificationRequest",R,N
features
vehicles
properties
nowPlayingAlbumArt
viewAreaInsets
dashboardRoundedCorners
userInterfaceStyle
Root
Ready
Loading
Searching
Done
Start
Finish
Fail
Reset
com.apple.carkitd.carcapabilities.statemachine
-[CRCarplayCapabilitiesStateMachine init]
-[CRCarplayCapabilitiesStateMachine setSession:]
q16@?0@"CUStateEvent"8
-[CRCarplayCapabilitiesStateMachine initializeStateMachine]_block_invoke
-[CRCarplayCapabilitiesStateMachine handleEvent:]
-[CRCarplayCapabilitiesStateMachine _transitionToState:forEvent:]
-[CRCarplayCapabilitiesStateMachine _ignoreEvent:]
-[CRCarplayCapabilitiesStateMachine nextMetadataKey]
-[CRCarplayCapabilitiesStateMachine performLookup:]
-[CRCarplayCapabilitiesStateMachine performDoneCaptureResult]
v32@?0@"NSString"8Q16^B24
responseBlock
T@?,C,N,V_responseBlock
workerQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_workerQueue
CARDNDAssertionStateKey
No active assertions.
Airplane Mode
CarPlay session
User-disabled until end of drive
8-minute hold
System-disabled until end of drive
Find My Device mode
Active assertions: %@
userDefaults
T@"NSUserDefaults",&,N,V_userDefaults
preferences
T@"CARAutomaticDNDStatus",R,W,N,V_preferences
T@"<CARDNDAssertionTrapDelegate>",W,N,V_delegate
active
TB,R,N,GisActive
activeAssertions
TQ,R,N,V_activeAssertions
activeAssertionsDebugString
CARPLAY_LOCKSCREEN_MESSAGE_IPHONE
vehicleAccessory
T@"CRVehicleAccessory",&,N,V_vehicleAccessory
REMEMBER_CARPLAY_ALERT_TITLE
REMEMBER_CARPLAY_ALERT_TITLE_GENERIC
REMEMBER_CARPLAY_ALERT_MESSAGE_IPHONE
REMEMBER_CARPLAY_ALERT_ACCEPT
REMEMBER_CARPLAY_ALERT_CANCEL
USE_CARPLAY_ALERT_TITLE
USE_CARPLAY_ALERT_TITLE_GENERIC
USE_CARPLAY_ALERT_MESSAGE_WIRELESS_IPHONE
USE_CARPLAY_ALERT_ACCEPT_WIFI_ON
USE_CARPLAY_ALERT_ACCEPT
USE_CARPLAY_ALERT_CANCEL
shouldEnableWiFi
TB,N,V_shouldEnableWiFi
PAIRING_CARPLAY_ALERT_TITLE
PAIRING_CARPLAY_ALERT_TITLE_GENERIC
PAIRING_CARPLAY_ALERT_MESSAGE_IPHONE
PAIRING_CARPLAY_ALERT_ACCEPT_BLUETOOTH_ON
PAIRING_CARPLAY_ALERT_ACCEPT
PAIRING_CARPLAY_ALERT_DECLINE
PAIRING_CARPLAY_ALERT_NOTNOW
PAIRING_CARPLAY_ALERT_DONTUSE
shouldEnableBluetooth
TB,N,V_shouldEnableBluetooth
declineType
TQ,N,V_declineType
RECONNECT_OFF_ALERT_TITLE_WIFI
RECONNECT_OFF_ALERT_ACCEPT_WIFI
RECONNECT_OFF_ALERT_CANCEL
vehicle
T@"CRVehicle",&,N,V_vehicle
ENHANCED_INTEGRATION_ALERT_TITLE
ENHANCED_INTEGRATION_ALERT_MESSAGE
ENHANCED_INTEGRATION_ALERT_ACCEPT
ENHANCED_INTEGRATION_ALERT_CANCEL
com.apple.Maps
<%@ %p; identifier: %@; connection: %@>
connection
T@"NSXPCConnection",&,N,V_connection
identifier
T@"NSString",C,N,V_identifier
v32@?0@"_CRAppStateNavigationOwner"8Q16^B24
nobody
owners
T@"NSMutableOrderedSet",&,N,V_owners
iAPRouteGuidanceSession
T@"CARRouteGuidanceiAPSession",&,N,V_iAPRouteGuidanceSession
cachedDoWeOwnNavigation
TB,N,V_cachedDoWeOwnNavigation
maximumConcurrentNavigationOwners
TQ,N,V_maximumConcurrentNavigationOwners
com.apple.private.carkit.app
com.apple.private.carkit.dnd
v12@?0B8
v24@?0Q8@"NSError"16
DND_AUTO_REPLY_DEFAULT_MESSAGE
status
T@"CARAutomaticDNDStatus",&,N,V_status
bannerMessage
T@"NSString",&,N,V_bannerMessage
timeoutInterval
Td,N,V_timeoutInterval
CarPlay Disconnected
You will be notified when sysdiagnose completes to file a radar.
Number of drafts scheduled: %ld
sysdiagnose in flight
draftsCount
TQ,N,V_draftsCount
Number of CarPlay Radar Drafts Created: %ld
Tap the button below to launch Tap-to-Radar.
CarPlay Diagnostics
Unlock your device to file a radar.
File radar
com.apple.carkitd.monitoring_transactions
com.apple.carkitd.monitoring
os-transaction
certificateSerial
connections
T@"NSMutableSet",&,N,V_connections
connectionsQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_connectionsQueue
com.apple.Siri
com.apple.Music
com.apple.iBooks
com.apple.podcasts
com.apple.mobilephone
com.apple.InCallService
com.apple.MobileSMS
com.apple.mobilecal
com.apple.CarPlaySettings
com.apple.internal.Neatline
Logs/CrashReporter/DiagnosticLogs/CarPlay/CarPlay-%@
CarPlayConfiguration.txt
DeviceScreenshot.png
CarPlayScreenshot.png
timestamp: %@, deviceURL: %@, carURL: %@, sysdiagnoseURL: %@, attachmentURLs: %@, configurationURL: %@, activeBundleID: %@, transcription: %@
timestamp
T@"NSString",&,N,V_timestamp
deviceScreenshotURL
T@"NSURL",&,N,V_deviceScreenshotURL
carScreenshotURL
T@"NSURL",&,N,V_carScreenshotURL
remoteLogsURL
T@"NSURL",&,N,V_remoteLogsURL
carplayLogsURL
T@"NSURL",&,N,V_carplayLogsURL
sysdiagnoseURL
T@"NSURL",&,N,V_sysdiagnoseURL
configurationURL
T@"NSURL",&,N,V_configurationURL
attachmentURLs
T@"NSArray",&,N,V_attachmentURLs
activeBundleIdentifier
T@"NSString",&,N,V_activeBundleIdentifier
siriInfo
T@"AFAccount",&,N,V_siriInfo
radarTitle
T@"NSString",&,N,V_radarTitle
locationDescription
T@"NSString",&,N,V_locationDescription
mapsActive
TB,N,GisMapsActive,V_mapsActive
com.apple.CarKit.DiagnosticsSerialQueue
carPlaySessionInfo
q24@?0@"AFAccount"8@"AFAccount"16
v24@?0@"NSError"8@"NSURL"16
v24@?0@"NSError"8@"NSString"16
Gathering CarPlay Diagnostics
Scheduling Diagnostics on Disconnect
Number of Drafts Scheduled: %ld
Coordinates: (%f, %f)
Source: %d (%@)
Time: %@
No location information
CARAlwaysEnableSysdiagnoseInternal
XCTestCase
testRemoteLogs
There once was a framework named CarKit,
It was trying to find something to transmit.
But instead what we got
was off by a long shot,
File a radar and click submit!
Tap to Dictate Issue
Dictation Not Available
Dictation in Progress. Tap to Stop
Error Starting Dictation
v24@?0@"NSString"8@"NSError"16
Diagnostics triggered by CarPlay
Intensity
VibePattern
Connected CarPlay Session
Session Configuration
Name: %@
Model Name: %@
Model Name (AirPlay): %@
Manufacturer: %@
Manufacturer (AirPlay): %@
Serial Number: %@
PPID: %@
Endpoint Identifier: %@
Transport types: %@
Night Mode Supported: %@
Limitable UI Types: %@
ETC Supported: %@
Right Hand Drive: %@
Capability - Album Art : %@
Capability - User Interface Style: %@
Capability - Safe Area Insets: {top = %f, left = %f, bottom = %f, right = %f}
Capability - Dashboard Rounded Corners: : {top = %f, left = %f, bottom = %f, right = %f}
Supports AC_BACK: %@
Supports Destination Sharing: %@
Supports Siri ZLL: %@
Supports Siri ZLL Button: %@
Supports Siri Mixable: %@
Voice Trigger Mode: %@
Manufacturer Icons
Icon Label: %@
Icon Visible: %@
Screens Information
Number of screens: %lu
Screen %d
Identifier: %@
Type: %@
Primary
Secondary
Available Interaction Models: %@
Primary Interaction Model: %@
Limited UI: %@
Night Mode: %@
Supports HiFi Touch: %@
Current session info
Night Mode Enabled (without fallbacks): %@
Night Mode Enabled (with fallbacks): %@
Limited UI Enabled: %@
ETC Enabled: %@
com.apple.Maps.DEMapsExtension
com.apple.CoreRoutine.RTDiagnosticExtension
com.apple.podcasts.DiagnosticExtension
com.apple.MediaPlayer.DiagnosticExtension
: [CarPlay: %@] 
[CarPlay: %@] 
701847
701850
701851
701852
701854
701855
1120451
1125497
1052527
492942
ComponentName
PEP CarPlay
ComponentVersion
ComponentID
498011
Platform
Keywords
Reproducibility
I Didn't Try
Title
ExtensionIdentifiers
Please provide a brief description of this radar.
Dictated description: %@
Screenshot
Active App: %@
Siri Server Hostname: %@
Timestamp: %@
Last known location (for Maps/location investigation):
AutoDiagnostics
Attachments
Description
tap-to-radar://new?
com.apple.carkit.diagnostics.transaction
shouldTriggerSysdiagnose
dictationComplete
TB,N,V_dictationComplete
sysdiagnoseInFlight
TB,N,V_sysdiagnoseInFlight
remoteLogsInFlight
TB,N,V_remoteLogsInFlight
triggeredInfoWhileCollecting
T@"NSArray",&,N,V_triggeredInfoWhileCollecting
pendingDiagnosticsData
T@"NSArray",&,N,V_pendingDiagnosticsData
diagnosticsSerialQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_diagnosticsSerialQueue
collectedDiagnosticsRadarURL
T@"NSURL",&,N,V_collectedDiagnosticsRadarURL
fileRadarAlert
T@"CRFileRadarAlert",&,N,V_fileRadarAlert
initiateLogsAlert
T@"CRInitiateLogsAlert",&,N,V_initiateLogsAlert
T@"CARSessionStatus",&,N,V_session
additionalDescription
T@"NSString",&,N,V_additionalDescription
sleepInterval
TI,N,V_sleepInterval
idleExitTransaction
T@"NSObject<OS_os_transaction>",&,N,V_idleExitTransaction
diagnosticsCompletionBlock
T@?,C,N,V_diagnosticsCompletionBlock
External NMEA
External Accessory
Apple WiFi
Skyhook
Cellular
Cellular LAC
Cellular MCC
GPS Coarse
Apple WiFi 2
Indoor Location
com.apple.carkitd.assertion-service
com.apple.carkit.dndmanager
v20@?0B8@"NSError"12
DNDWD
com.apple.donotdisturb.mode.driving
B8@?0
[Internal] %@
Passenger
Pulled Over
Incorrect Detection (Radar)
carkitd-buddy-locales
plist
CarKit
com.apple.carkit.dnd.transaction
userDisableTimer
T@"NSTimer",&,N,V_userDisableTimer
assertionService
T@"DNDModeAssertionService",&,N,V_assertionService
T@"CARDNDStateObserver",&,N,V_stateMachine
alertManager
T@"CARDNDAlerts",&,N,V_alertManager
T@"CARAutomaticDNDStatus",&,N,V_preferences
assertionTrap
T@"CARDNDAssertionTrap",&,N,V_assertionTrap
T@"CRVehicleStore",W,N,V_vehicleStore
CARDNDQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_CARDNDQueue
nextUnlockAction
TQ,N,V_nextUnlockAction
nextLockAction
TQ,N,V_nextLockAction
showsInternalAlerts
restrictionsEnabled
lastKnownVehicularState
TQ,N,V_lastKnownVehicularState
lastKnownVehicularHints
TQ,N,V_lastKnownVehicularHints
lastKnownReportTime
Td,N,V_lastKnownReportTime
firstRideVehicleHints
TQ,N,V_firstRideVehicleHints
geofencingObserver
T@"CARDNDGeofencingObserver",&,N,V_geofencingObserver
isCurrentlyInGeofencedRegion
expectedBuddyTermination
TB,N,V_expectedBuddyTermination
shouldOptIntoBluetooth
DNDValid
TB,R,N,GisDNDValid
CRInstrumentClusterURLsDidChangeNotification
CRInstrumentClusterSessionURLsDefaultsKey
altScreenSuggestUIURLs
urlStrings
T@"NSArray",&,N,V_urlStrings
sessionURLStrings
T@"NSArray",&,N,V_sessionURLStrings
instrumentClusterURLs
sessionInstrumentClusterURLs
com.apple.carkit.active-session.process
timeoutTimer
T@"NSTimer",&,N,V_timeoutTimer
processTransaction
T@"NSObject<OS_os_transaction>",&,N,V_processTransaction
com.apple.language.changed
com.apple.carkit.service
com.apple.carkit.monitoring.service
com.apple.carkit.app.service
com.apple.carkit.dnd.service
com.apple.carkit.navowners.service
com.apple.notifyd.matching
com.apple.carkit.carplay-attached
com.apple.vehiclePolicy.DNDMode
com.apple.carkit.capabilities-changed
v16@?0@"NSObject<OS_xpc_object>"8
B32@?0@"BluetoothDevice"8Q16^B24
T@"<CRBluetoothManagerDelegate>",W,N,V_delegate
powered
TB,N,GisPowered
Reason
ownerCount
DNDBuddyCompleted
DNDStarted
DNDEnded
DNDAutoReplyChanged
DNDTriggerMethodChanged
DNDInternalNotDrivingFeedback
concurrentNavigation
com.apple.carexperience.%@
driveStartTimeInterval
Td,N,V_driveStartTimeInterval
isCurrentlyDriving
TB,N,V_isCurrentlyDriving
Please describe what you were doing to trigger Do Not Disturb While Driving. 
Entered DNDWD at %@
Exited DNDWD at %@
Entered geofence at %@
Exited geofence at %@
com.apple.CarKit.CarDNDDiagnosticsExtension
com.apple.DiagnosticExtensions.Baseband
: [DNDWD]
[DNDWD]
Do Not Disturb While Driving
831192
814490
CRWiFiPowerChangedNotification
power
TB,N,V_power
init
notificationCenter
setDelegate:
setWantsNotificationResponsesDelivered
array
notificationCategory
setWithObject:
arrayWithObjects:count:
addObjectsFromArray:
setNotificationCategories:
initWithBundleIdentifier:
initWithNotificationCenter:
removeAllDeliveredNotifications
dealloc
presentedBulletins
addObject:
title
recordID
notificationRequest
addNotificationRequest:withCompletionHandler:
removeDeliveredNotificationsWithIdentifiers:
removePendingNotificationRequestsWithIdentifiers:
removeObject:
copy
dismissAlert:
enumerateObjectsUsingBlock:
alertForEnteringGeofence:
setActionHandler:
_showBulletin:
dismissAlertsOfClass:
initWithText:
buddyAlertHandle
isValid
initWithServiceName:viewControllerClassName:
setUserInfo:
newHandleWithDefinition:configurationContext:
setBuddyAlertHandle:
addObserver:
activateWithContext:
invalidate
objectForKeyedSubscript:
boolValue
setIsFirstBuddyPresentation:
numberWithBool:
dictionaryWithObjects:forKeys:count:
optionsWithDictionary:
openApplication:withOptions:completion:
request
actionIdentifier
notification
identifier
isEqualToString:
indexOfObjectPassingTest:
objectAtIndexedSubscript:
actionHandler
actions
numberWithInteger:
_tearDownAlertHandle
sharedManager
expectedBuddyTermination
isFirstBuddyPresentation
_resetDNDBuddyPresentation:
indexesOfObjectsPassingTest:
count
objectsAtIndexes:
removeObserver:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
remoteAlertHandleDidActivate:
remoteAlertHandleDidDeactivate:
remoteAlertHandle:didInvalidateWithError:
userNotificationCenter:willPresentNotification:withCompletionHandler:
userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:
userNotificationCenter:openSettingsForNotification:
showDNDEnterGeofenceWithCompletion:
showDNDExitGeofenceWithCompletion:
showDNDUnlockOptInAlert
showDNDEndNotificationWithText:completion:
showDNDNotDrivingAlertWithCompletion:
prewarmDNDMiniBuddyWithUserInfo:errorHandler:completion:
_alertsOfClass:
_injectAlert:
.cxx_destruct
setPresentedBulletins:
_isFirstBuddyPresentation
_notificationCenter
_buddyAlertHandle
_presentedBulletins
bundlePath
stringByAppendingPathComponent:
dictionary
setObject:forKeyedSubscript:
allowInCar
alertTitle
alertMessage
alertAcceptButtonTitle
alertDeclineButtonTitle
alertOtherButtonTitle
lockscreenMessage
lockscreenTitle
iconImagePath
alertAcceptedAnalyticsKey
alertDeclinedAnalyticsKey
alertOtherAnalyticsKey
setAlertAutoDismissed:
_alertContents
_setAlert:
alertAutoDismissed
alertDismissTimer
setAlertDismissTimer:
requiresUnlockedDevice
_isDeviceUnlocked
_recordAnalyticsForResponse:
alertDismissal
dismissAlert
scheduledTimerWithTimeInterval:repeats:block:
presentAlertWithCompletion:
_alert
_alertAutoDismissed
_alertDismissTimer
setSessionObserver:
_stop
configuration
nightModeSupported
_start
lastObject
_handleLocationUpdateToLocation:
fileURLWithPath:
initWithURL:
initWithEffectiveBundle:delegate:onQueue:
setDesiredAccuracy:
startUpdatingLocation
setAlmanac:
setLocationManager:
setCurrentLocation:
setInitialTimerLocation:
nextNightModeChangeTimer
setNextNightModeChangeTimer:
almanac
coordinate
calculateAstronomicalTimeForLocation:
isDayLight
_updateNightMode
currentLocation
_isNightForLocation:
setNightMode:
_shouldScheduleTimerForNextNightModeChange
_nextNightModeChangeDate
timeIntervalSinceNow
_updateNightModeForNextSunsetOrSunrise
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
horizontalAccuracy
distanceFromLocation:
initialTimerLocation
date
sunset
nextSunset
compare:
sunrise
nextSunrise
timeIntervalSinceDate:
locationManager:didUpdateToLocation:fromLocation:
locationManager:didUpdateLocations:
locationManager:didUpdateHeading:
locationManagerShouldDisplayHeadingCalibration:
locationManager:didDetermineState:forRegion:
locationManager:didRangeBeacons:inRegion:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManager:didRangeBeacons:satisfyingConstraint:
locationManager:didFailRangingBeaconsForConstraint:error:
locationManager:didEnterRegion:
locationManager:didExitRegion:
locationManager:didFailWithError:
locationManager:monitoringDidFailForRegion:withError:
locationManager:didChangeAuthorizationStatus:
locationManager:didStartMonitoringForRegion:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didVisit:
startedConnectionAttemptOnTransport:
cancelledConnectionAttemptOnTransport:
sessionDidConnect:
sessionDidDisconnect:
session:didUpdateConfiguration:
_timeDidChangeSignificantly
sessionStatus
setSessionStatus:
locationManager
nightMode
nightModeChangeNotificationToken
setNightModeChangeNotificationToken:
_nightMode
_nightModeChangeNotificationToken
_sessionStatus
_currentLocation
_initialTimerLocation
_locationManager
_almanac
_nextNightModeChangeTimer
setObject:forKey:
UUIDString
_itemClassKeychainAttributes
vehicleName
certificateSerialNumber
pairingStatus
dataWithBytes:length:
enhancedIntegrationStatus
appendBytes:length:
_identifyingKeychainAttributesForVehicle:
_addKeychainAttributesForVehicle:toDictionary:
_allKeychainAttributesForVehicle:
mutableCopy
_keychainAttributesMatchingQuery:
_updateKeychainAttributesForVehicle:
_creationKeychainAttributesForVehicle:
_allUnpairedVehicleStorage
dictionaryWithDictionary:
removeObjectForKey:
setPayload:forVehicleWithIdentifier:
bluetoothAddress
carplayWiFiUUID
accessoryProtocols
allObjects
supportsEnhancedIntegration
lastConnectedDate
vehicleModelName
internalNotes
objectForKey:
setVehicleName:
setBluetoothAddress:
setCarplayWiFiUUID:
setWithArray:
setAccessoryProtocols:
setSupportsEnhancedIntegration:
setLastConnectedDate:
setVehicleModelName:
setInternalNotes:
_preferencesAttributesForVehicle:
_allPreferencesPairings
_removePreferencesPairingForVehicleIdentifier:
defaultCenter
postNotificationName:object:
_invalidateCachedVehicles
handleAvailabilityDidChange:
addObserver:selector:name:object:
setCachedVehicles:
saveVehicle:withMergePolicy:
isVehicleStoreAvailable
allStoredVehicles
countByEnumeratingWithState:objects:count:
isEqualToData:
mergeAttributesFromVehicle:
_addPreferencesPairingForVehicle:
_addKeychainPairingForVehicle:
postPairingsDidChangeNotification
_removePreferencesPairingForVehicle:
_removeKeychainPairingForVehicle:
removePayloadForVehicleWithIdentifier:
cachedVehicles
_keychainItemAttributesForAllVehicles
getBytes:length:
length
getBytes:range:
initWithUUIDString:
initWithIdentifier:certificateSerial:
setPairingStatus:
setEnhancedIntegrationStatus:
_applyPreferencesAttributes:toVehicle:
_cleanupPreferencesForIncompleteVehicleIdentifier:name:
enumerateKeysAndObjectsUsingBlock:
payloadForVehicleWithIdentifier:
saveVehicle:
removeVehicle:
vehicleForBluetoothAddress:
_cachedVehicles
_updateUnlockedSinceBoot
registerForAvailabilityEvent
handleAvailabilityEvent
notifydEventName
message
internalText
TTRURLforEvent:
CARActionWithURL:title:
_internalText
doesNotRecognizeSelector:
CARActionWithTitle:
alloc
localeWithLocaleIdentifier:
initWithLocale:
recognitionTask
cancel
setRecognitionTask:
setTranscription:
sharedInstance
setCategory:error:
setMode:error:
setIAmTheAssistant:error:
setActive:error:
setError:
error
setRecognitionRequest:
recognitionRequest
setShouldReportPartialResults:
audioEngine
inputNode
speechRecognizer
recognitionTaskWithRequest:delegate:
removeTapOnBus:
inputFormatForBus:
appendAudioPCMBuffer:
installTapOnBus:bufferSize:format:block:
prepare
startAndReturnError:
_playEndDictationChime
setCurrentlyTranscribing:
setFinishedTranscribing:
_playStartDictationChimeWithCompletion:
setRecordingBlock:
_stopRecording
isRunning
stop
endAudio
finish
sharedPreferences
dictationIsEnabled
setActive:withOptions:error:
setCurrentlyRecording:
_endAudioSessionWithError:
bestTranscription
formattedString
finishedTranscribing
currentlyTranscribing
recordingBlock
transcription
speechRecognitionDidDetectSpeech:
speechRecognitionTask:didHypothesizeTranscription:
speechRecognitionTask:didFinishRecognition:
speechRecognitionTaskFinishedReadingAudio:
speechRecognitionTaskWasCancelled:
speechRecognitionTask:didFinishSuccessfully:
beginRecordingWithCompletion:
stopRecordingWithCompletion:
dictationEnabled
dictationAvailable
currentlyRecording
setSpeechRecognizer:
setAudioEngine:
_currentlyRecording
_currentlyTranscribing
_finishedTranscribing
_transcription
_error
_recognitionTask
_recognitionRequest
_speechRecognizer
_audioEngine
_recordingBlock
vehicleState
numberWithUnsignedInteger:
deviceID
vehicularHints
numberWithUnsignedLong:
stringWithFormat:
vehicleOperatorState
vehicleStateDebugDescription
setVehicleState:
setVehicularHints:
setVehicleOperatorState:
setDeviceID:
_vehicleState
_vehicularHints
_vehicleOperatorState
_deviceID
refresh
isVoiceOverEnabled
_observeCameraIrisNotifications
setShouldObserveDeviceUnlocks:
setShouldObserveIdealBuddyPresentationTimes:
vehicleStateCheckTimer
airplaneMode
lostModeIsActive
isManagedLostModeActive
callObserver
calls
isCaptureSessionRunning
hasRecentlyActivatedVoiceOver
vehicleStateClass
mostRecentVehicleConnection
timeRange
startDate
_deviceLockStateChangedWithToken:
routineManager
type
delegate
stateMachineDidObserveIdealBuddyPresentationTime:
startMonitoringScenarioTriggerOfType:withHandler:
stopMonitoringScenarioTriggerOfType:
setVehicleStateCheckTimer:
numberWithDouble:
_checkVehicleState
timerWithTimeInterval:target:selector:userInfo:repeats:
mainRunLoop
addTimer:forMode:
isInAirplaneMode
stateMachine:receivedAirplaneMode:
observesVehicularReports
vehicularState
vehicularOperatorState
connected
deviceId
stateMachine:receivedVehicleState:
stateMachine:didObserveLockStatusChange:
_cameraIrisStateChangedWithToken:
setIsCaptureSessionRunning:
airplaneModeChanged
initWithRadiosPreferences:vehicleStateClass:routineManager:
isInLostMode
isIdealTimeForBuddy
mostRecentVehicleBTConnectionDate
scheduleVehicleStateCheckWithDelay:
radiosPreferences
setConnected:
setHasRecentlyActivatedVoiceOver:
setCallObserver:
_screenLockNotifyToken
_cameraIrisFrontNotifyToken
_cameraIrisBackNotifyToken
_cameraIrisBackTeleNotifyToken
_connected
_hasRecentlyActivatedVoiceOver
_isCaptureSessionRunning
_vehicleStateClass
_radiosPreferences
_routineManager
_delegate
_callObserver
_vehicleStateCheckTimer
stateMachine:receivedFMDMode:
region
setRegion:
regionState
setRegionState:
_region
_regionState
initWithEffectiveBundle:
initWithRoutineManager:locationManager:wiFiManager:
setRoutineManager:
setWiFiManager:
_checkWiFiPowerForGeofences
stopMonitoringLOIs
_shouldCreateGeofences
_postNotificationForGeofence
setActivelyMonitoringGeofences:
setShouldCreateGeofenceAroundStart:
shouldCreateGeofenceAroundStart
didCreateGeofenceAroundStart
location
timestamp
_addCoordinatesToMonitoredRegion:identifier:radius:
setDidCreateGeofenceAroundStart:
setIsCurrentlyInsideGeofence:
_createGeofencesAroundPredictedLocationsFromLocation:
_createGeofencesAroundHomeAndWork
startMonitoringSignificantLocationChanges
monitoredRegions
stopMonitoringForRegion:
setMonitoredRegions:
stopMonitoringSignificantLocationChanges
stopUpdatingLocation
center
initWithCenter:radius:identifier:
arrayByAddingObject:
startMonitoringForRegion:
exitConfirmationOverride
isDNDActive
wiFiManager
power
locationServicesEnabled
activelyMonitoringGeofences
isCurrentlyInsideGeofence
setExitConfirmationActive:
geofencingObserver:didUpdateRegionState:
latitude
longitude
locationOfInterest
_createGeofenceForLOI:
fetchNextPredictedLocationsOfInterestFromLocation:startDate:timeInterval:withHandler:
fetchLocationsOfInterestOfType:withHandler:
setLocationServicesEnabled:
beginMonitoringLOIsWithStartingLocationGeofence:
_updateState:forRegion:
currentlyInRegion
setExitConfirmationOverride:
setDNDActive:
exitConfirmationActive
_DNDActive
_didCreateGeofenceAroundStart
_shouldCreateGeofenceAroundStart
_isCurrentlyInsideGeofence
_activelyMonitoringGeofences
_exitConfirmationActive
_locationServicesEnabled
_exitConfirmationOverride
_monitoredRegions
_wiFiManager
fetchCarCapabilities
initAndWaitUntilSessionUpdated
currentSession
setSession:
runStateMachineIfPossible
updateFromDefaults
persistCarCapabilitiesIfNeeded
session
resovleCapabilitiesForSession:
setCarCapabilities:
lookupCarcapabilitiesForSession:plistURL:completionHandler:
carCapabilities
persistCapabilitiesToGlobalDomain
postNotificationName:object:userInfo:
nowPlayingAlbumArt
value
integerValue
nowPlayingAlbumArtMode
setNowPlayingAlbumArtMode:
defaultValue
interfaceStyle
userInterfaceStyle
setUserInterfaceStyle:
setCarCapabilitiesURL:
carCapabilitiesURL
stateMachine
_observing
_carCapabilitiesURL
_carCapabilities
_session
_stateMachine
setAssetQueue:
setAssetQueryInProgress:
_queryForUpdatedAsset
_blacklistPreference
setAllowsCellularAccess:
startCatalogDownload:options:then:
assetQueryInProgress
assetQueue
initWithType:
returnTypes:
setDoNotBlockBeforeFirstUnlock:
queryMetaDataSync
_requestAssetCatalogDownload
lastFetchDate
results
state
predicateWithBlock:
filteredArrayUsingPredicate:
_mostRecentAssetForAssets:
_reloadWithAsset:
startDownload:then:
errorWithDomain:code:userInfo:
attributes
sortedArrayUsingComparator:
_sortAssets:
getLocalFileUrl
URLByAppendingPathComponent:
arrayWithContentsOfURL:
_parseBlacklistContent:error:
_setBlacklistPreference:
getResourceValue:forKey:error:
arrayWithArray:
listener:shouldAcceptNewConnection:
requestBlacklistUpdate
requestCarCapabilitiesUpdate
carCapabilitiesManager
setCarCapabilitiesManager:
_assetQueryInProgress
_assetQueue
_carCapabilitiesManager
defaultManager
URLsForDirectory:inDomains:
firstObject
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
temporaryDirectory
fileSystemRepresentation
stringWithUTF8String:
URLforCarPlayDiagnosticsFolderWithTimestamp:
stringWithCString:encoding:
componentsSeparatedByString:
rangeOfString:
characterSetWithCharactersInString:
stringByTrimmingCharactersInSet:
_connectedIPAddress
_fetchRemoteLogsForIPAddress:filepath:timestamp:
filePathForAirPlayLogsForTimestamp:error:
UTF8String
objectAtIndex:
setObject:atIndexedSubscript:
removeObjectAtIndex:
copyItemAtURL:toURL:error:
userInfo
initWithCapacity:
dictionaryWithObject:forKey:
setServiceQueue:
setAccessoryManager:
accessoryManager
setVehicleAccessoryDelegate:
setPreferencesManager:
preferencesManager
setPreferencesDelegate:
setBluetoothManager:
bluetoothManager
setClusterURLManager:
setWifiManager:
setOutstandingApprovalAlerts:
setOutstandingPairingAlerts:
setOutstandingEnableWiFiAlerts:
setOutstandingEnhancedIntegrationAlerts:
setServiceCountDuringAlertForBluetoothAddress:
setAssertionManager:
handleVehicleStoreAvailabiltyDidChange:
serviceQueue
vehicleStore
valueForEntitlement:
processIdentifier
saveVehicle:reply:
removeVehicle:reply:
fetchAllVehiclesWithReply:
hasVehiclesWithReply:
handleDidConnectBluetoothAddress:reply:
handleDidDisconnectBluetoothAddress:reply:
isBluetoothInCarWithReply:
saveWiFiCredentialsForAccessoryConnectionIdentifier:credentials:reply:
allowsConnectionsForWiFiUUID:reply:
allowsConnectionsForCertificateSerial:reply:
isPairedWithCertificateSerial:reply:
isEnhancedIntegrationEnabledWithCertificateSerial:reply:
handleCarPlayRestrictionChangedWithReply:
isCarPlayAllowedWithReply:
handleCarPlayDiagnosticsWithDeviceScreenshotURL:carScreenshotURL:attachmentURLs:activeBundleIdentifier:reply:
vehicleIdentifierForCertificateSerial:reply:
fetchInstrumentClusterURLsWithReply:
fetchSessionInstrumentClusterURLsWithReply:
interfaceWithProtocol:
setWithObjects:
setClasses:forSelector:argumentIndex:ofReply:
setExportedInterface:
setExportedObject:
serviceName
numberWithInt:
resume
wifiManager
removeNetworkCredentialsForCarPlayUUID:
unpairWithBluetoothAddress:
_isRestricted:
_dismissReconnectionEnableWiFiAlertExceptForVehicle:
_isVehicleActionable:
hasCredentialsForCarPlayUUID:
postInCarNotificationForVehicle:
connectedServicesCountForBluetoothAddress:
serviceCountDuringAlertForBluetoothAddress
unsignedIntegerValue
_presentedReconnectionEnableWiFiAlertForVehicle:
_presentReconnectionEnableWiFiAlertForVehicle:
_dismissReconnectionEnableWiFiAlertForVehicle:
pairedVehiclesConnectedOnBluetooth
anyObject
vehicleAccessoryForiAPConnectionIdentifier:
objectsPassingTest:
UUID
saveNetworkCredentials:forCarPlayUUID:
isBluetoothConnected
containsObject:
isPaired
_handleCarPlayAllowedDidChange
isCarPlayAllowed
string
connectedAccessories
connectedVehicleAccessories
appendFormat:
radarDescription
analyticsDescription
vehicleMatchingAccessory:inVehicles:
stringByAppendingFormat:
componentsJoinedByString:
appendString:
supportsCarPlay
accessoryRadarDescription:
collectDiagnosticsWithDeviceScreenshotURL:carScreenshotURL:attachmentURLs:accessoryDetails:accessoryDescription:activeBundleIdentifier:completionHandler:
clusterURLManager
instrumentClusterURLs
sessionInstrumentClusterURLs
name
manufacturer
modelNumber
firmwareRevision
hardwareRevision
serialNumber
handleCarPlayAttachedAccessories:
updateVehicle:usingAccessory:
enumerateVehiclesForAccessories:usingBlock:
_dismissApprovalAlertForVehicleAccessory:
_dismissPairingAlertForVehicleAccessory:
_dismissEnhancedIntegrationAlertForVehicleAccessory:
cachedCarPlayAllowedChangeValue
setCachedCarPlayAllowedChangeValue:
handleCarPlayAttached
_dismissApprovalAlerts
_dismissPairingAlerts
_dismissEnhancedIntegrationAlerts
monitoringService
handleUpdatedVehicle:enabled:completion:
attemptConnectionWithVehicles:
setInCar:carPlayUUID:
setWithCapacity:
_certificateSerialNumbersWithKnownPairing
updateIncompletePairingsMatchingAccessories:
sendDeviceIdentifierForVehicleAccesory:pairingStatus:
_shouldPromptEnhancedIntegrationForVehicle:accessory:
_presentEnhancedIntegrationAlertForVehicleAccessory:
_unknownPairingAccessoriesFromAccessories:
_presentApprovalAlertForVehicleAccessory:
requestWiFiCredentialsIfNecessaryForVehicleAccessories:
setCertificateSerialNumber:
isEqualToSet:
connectedBluetoothAddresses
supportsWirelessCarPlay
requestWiFiCredentials
connectWithBluetoothAddress:
sendDeviceTransportIdentifiers
initWithVehicleAccessory:
supportsUSBCarPlay
supportsWiredBluetoothPairing
_presentWiredBluetoothPairingAlertForVehicleAccessory:vehicle:
outstandingApprovalAlerts
vehicleAccessory
vehicleForVehicleAccessory:
_pairingIdentifierForVehicleAccessory:
_pairingDeclineCountForIdentifier:
isPowered
setShouldEnableBluetooth:
_declineTypeForOOBPairingVehicleAccessory:
setDeclineType:
outstandingPairingAlerts
setBTPowerAccessory:
setBTPowerVehicle:
setPowered:
_beginWiredPairingWithVehicleAccessory:vehicle:
addressStringForData:
beginWiredBluetoothPairing:
initWithVehicle:
outstandingEnableWiFiAlerts
setPower:
vehicle
data
outstandingEnhancedIntegrationAlerts
_vehicleEnhancedIntegrationUpdated:status:
BTPowerAccessory
BTPowerVehicle
accessoryManager:didConnectVehicleAccessory:
accessoryManager:didUpdateVehicleAccessory:
accessoryManager:didDisconnectVehicleAccessory:
handleCarPlayAllowedDidChange
bluetoothManager:didChangePowerState:
postOutOfCarNotificationForVehicle:
setMonitoringService:
setVehicleStore:
assertionManager
_monitoringService
_vehicleStore
_serviceQueue
_accessoryManager
_preferencesManager
_bluetoothManager
_clusterURLManager
_wifiManager
_assertionManager
_outstandingApprovalAlerts
_outstandingPairingAlerts
_outstandingEnableWiFiAlerts
_outstandingEnhancedIntegrationAlerts
_cachedCarPlayAllowedChangeValue
_serviceCountDuringAlertForBluetoothAddress
_BTPowerAccessory
_BTPowerVehicle
categoryIdentifier
initWithIdentifier:
setActions:
setOptions:
setTitle:
setBody:
setCategoryIdentifier:
setShouldIgnoreDoNotDisturb:
requestWithIdentifier:content:trigger:destinations:
uppercaseString
actionWithIdentifier:title:options:
actionWithIdentifier:title:url:
_actionHandler
_recordID
setResponseBlock:
workerQueue
initializeStateMachine
initWithName:userInfo:
dispatchEvent:
initWithName:parent:
setEventHandler:
_transitionToState:forEvent:
performEnterReadyState
_ignoreEvent:
enterState
performLoadingPlistData:
performLookup:
performPostResponseAndReleaseData
performDoneCaptureResult
setStates:
setInitialState:
start
transitionToState:
indexOfObject:
responseBlock
dictionaryWithContentsOfURL:error:
handleEvent:
valueForKey:
nextMetadataKey
allKeys
intersectSet:
assignCarCapabilities:valuesFromDictionary:
valueWithEdgeInsets:
setViewAreaInsets:
setDashboardRoundedCorners:
setWorkerQueue:
_underlyingStateMachine
_plistURL
_plistData
_configurationKeys
_configurationValues
_propertyValueLookupTable
_searchHitsByProperty
_stateForStateName
_currentState
_metadaKeyIndex
_responseBlock
_workerQueue
standardUserDefaults
userDefaults
integerForKey:
hasAssertion:
preferences
disableTimerTimestamp
calendarUnitsOfType:fromDate:toDate:
activeAssertions
setDisableTimerTimestamp:
_mutateAssertionsCallingDelegate:withBlock:
isActive
setInteger:forKey:
assertionTrap:didBecomeActive:
initWithPreferences:
takeAssertion:
releaseAssertion:
releaseAllAssertions
releaseAllTemporaryAssertions
activeAssertionsDebugString
setUserDefaults:
_preferences
_activeAssertions
_userDefaults
setVehicleAccessory:
_vehicleAccessory
shouldEnableWiFi
setShouldEnableWiFi:
_shouldEnableWiFi
shouldEnableBluetooth
declineType
_shouldEnableBluetooth
_declineType
setVehicle:
_vehicle
connection
isEqualToOwner:
setConnection:
setIdentifier:
_connection
_identifier
addNavigationOwnerWithIdentifier:
removeNavigationOwnerWithIdentifier:
fetchNavigationOwnerWithReply:
fetchNavigationIdentifierWithReply:
navigationOwnershipChangedTo:
setRemoteObjectInterface:
_removeOwnersForConnection:
setInterruptionHandler:
setInvalidationHandler:
_navigationOwnershipChangedFromCar:
_updateOwnershipToiOS
owners
_updateNavigationStateForRemoval
navigationOwner
_doWeHaveOwners
requestTurnByTurnOwnership
releaseTurnByTurnOwnership
setCachedDoWeOwnNavigation:
maximumConcurrentNavigationOwners
navigationOwnershipEndedWithMaximumConcurrentCount:
setMaximumConcurrentNavigationOwners:
remoteObjectProxy
currentConnection
_navigationOwnerExistsForIdentifier:
iAPRouteGuidanceSession
setCurrentNavigationOwnerIdentifier:
_updateRouteGuidanceToLastIdentifier
setOwners:
setIAPRouteGuidanceSession:
cachedDoWeOwnNavigation
_cachedDoWeOwnNavigation
_owners
_iAPRouteGuidanceSession
_maximumConcurrentNavigationOwners
synchronizeUserDefaultsDomain:keys:
_syncDomain
setAutomaticDNDStatus:
setAutoReplyAudience:
_detachObservers
isCarPlayAutomaticDNDActiveWithReply:
setCarPlayAutomaticDNDActive:withReply:
completeDNDBuddyWithOption:withReply:
resetAutomaticDNDPreferencesWithReply:
shouldDisplayExitConfirmationWithReply:
allowedAutoReplyAudienceWithReply:
setAllowedAutoReplyAudience:reply:
autoReplyMessageWithReply:
setAutoReplyMessage:reply:
fetchDNDTriggerModeWithReply:
setDNDTriggerMode:withReply:
disableDNDUntilEndOfDriveWithContext:reply:
internalAutoReplyWhitelistWithReply:
setInternalAutoReplyWhitelist:reply:
internalUtilityToolWithReply:
isDNDValid
status
setStartedFirstRidePreference:
setCompletedFirstRidePreference:
setActivateWithCarPlay:
_performCARPreferencesBlock:forReading:
CARDNDQueue
_setDNDActive:withStartingGeofence:completion:
setAutomaticDNDTriggeringMethod:
setOptedOutOfAutomaticDND:
setHasAdjustedTriggerMethod:
assertionTrap
setNextLockAction:
setNextUnlockAction:
setLastKnownReportTime:
_cancelUserDisabledTimer
isCurrentlyInGeofencedRegion
automaticDNDTriggeringMethod
setExpectedBuddyTermination:
hasOptedOutOfAutomaticDND
shouldOptIntoBluetooth
whitespaceAndNewlineCharacterSet
_disableDNDUntilEndOfDrive
outputFromRhodesUtility
setStatus:
_status
timeoutInterval
bannerMessage
setBannerMessage:
setTimeoutInterval:
_bannerMessage
_timeoutInterval
draftsCount
setDraftsCount:
_draftsCount
setConnections:
setConnectionsQueue:
startMonitoringCertificateSerial:reply:
stopMonitoringCertificateSerial:reply:
willEnableCertificateSerial:reply:
willDisableCertificateSerial:reply:
connectionsQueue
_removeConnection:
userInfoDictionaryForConnection:
_addConnection:forCertificateSerial:
connections
connection:isMonitoringSerial:
remoteObjectProxyWithErrorHandler:
removeAllObjects
_connections
_connectionsQueue
_createCarPlayDiagnosticsFolder
setCarplayLogsURL:
carplayLogsURL
configurationURL
moveItemAtURL:toURL:error:
setConfigurationURL:
deviceScreenshotURL
setDeviceScreenshotURL:
carScreenshotURL
setCarScreenshotURL:
attachmentURLs
lastPathComponent
setAttachmentURLs:
initWithDeviceScreenshot:carScreenshot:configuration:attachmentURLs:siriInfo:activeBundleID:radarTitle:
setTimestamp:
remoteLogsURL
setRemoteLogsURL:
sysdiagnoseURL
setSysdiagnoseURL:
activeBundleIdentifier
setActiveBundleIdentifier:
siriInfo
setSiriInfo:
radarTitle
setRadarTitle:
locationDescription
setLocationDescription:
isMapsActive
setMapsActive:
_mapsActive
_timestamp
_deviceScreenshotURL
_carScreenshotURL
_remoteLogsURL
_carplayLogsURL
_sysdiagnoseURL
_configurationURL
_attachmentURLs
_activeBundleIdentifier
_siriInfo
_radarTitle
_locationDescription
_init
descriptionForTransportType
_beginIdleExitTransaction
setDiagnosticsCompletionBlock:
setAdditionalDescription:
_collectCarConfiguration
accounts
_formattedLastLocation
remoteLogsInFlight
_processRemoteLogs:
diagnosticsSerialQueue
sysdiagnoseInFlight
dictationComplete
_completeLogging
_remoteLogsForTimestamp:withCompletion:
shouldTriggerSysdiagnose
_processSysdiagnose:
_sysdiagnoseWithCompletion:
triggeredInfoWhileCollecting
setTriggeredInfoWhileCollecting:
pendingDiagnosticsData
_presentDictationBanner
_presentCarAlertWithTitle:dismissTime:completion:
arrayByAddingObjectsFromArray:
setPendingDiagnosticsData:
_presentFileRadarAlert
setCollectedDiagnosticsRadarURL:
setDictationComplete:
diagnosticsCompletionBlock
_alwaysTakeSysdiagnoseEnabled
setSysdiagnoseInFlight:
setRemoteLogsInFlight:
sleepInterval
_beginDictation
_completeDictation
_stopDictation
assertionWithStatusBarStyleOverrides:forPID:exclusive:showsWhenForeground:
setStatusString:
acquireWithHandler:invalidationHandler:
numberWithFloat:
setInitiateLogsAlert:
initiateLogsAlert
fileRadarAlert
setFileRadarAlert:
radarURLFromAttachmentsForData:
defaultWorkspace
openSensitiveURL:withOptions:error:
_endIdleExitTransaction
stringByAppendingString:
modelName
vehicleManufacturer
manufacturerName
vehicleSerialNumber
PPID
endpointIdentifier
descriptionForLimitableUserInterfaces
supportsElectronicTollCollection
rightHandDrive
descriptionForCapability:
descriptionForUserInterfaceStyle:
viewAreaInsets
dashboardRoundedCorners
supportsACBack
vehicleSupportsDestinationSharing
supportsSiriZLL
supportsSiriZLLButton
supportsSiriMixable
descriptionForVoiceTriggerMode
manufacturerIconLabel
manufacturerIconVisible
screens
screenType
descriptionForAvailableInteractionModels
descriptionForPrimaryInteractionModel
isLimitedUI
isNightMode
supportsHighFidelityTouch
systemNightMode
limitUserInterfaces
electronicTollCollectionAvailable
relativePath
initWithObjectsAndKeys:
initWithObjects:
_extensionIdentifiersForDiagnosticsData:
_screenshotPathsForData:
hostname
additionalDescription
URLWithString:
idleExitTransaction
setIdleExitTransaction:
_presentDiagnosticsInFlightAlert
initWithSession:locationManager:sleepInterval:
_enableStatusBarColor
_disableStatusBarColor
_performVibrate
setDiagnosticsSerialQueue:
collectedDiagnosticsRadarURL
setSleepInterval:
_dictationComplete
_sysdiagnoseInFlight
_remoteLogsInFlight
_sleepInterval
_triggeredInfoWhileCollecting
_pendingDiagnosticsData
_diagnosticsSerialQueue
_collectedDiagnosticsRadarURL
_fileRadarAlert
_initiateLogsAlert
_additionalDescription
_idleExitTransaction
_diagnosticsCompletionBlock
serviceForClientIdentifier:
initWithAssertionService:vehicleState:alertManager:preferences:carSessionStatus:geoFencingObserver:assertionTrap:
assertionService
addAssertionUpdateListener:withCompletionHandler:
removeAssertionUpdateListener:
invalidateActiveModeAssertionWithError:
isAutomaticDNDInternalShowUserAlertsEnabledPreference
shouldActivateWithCarPlay
_setDNDActive:completion:
activeModeAssertionWithError:
geofencingObserver
sharedConnection
isDriverDoNotDisturbModificationsAllowed
_processVehicleState:
nextLockAction
alertManager
nextUnlockAction
_showDNDMiniBuddyNow
firstRideVehicleHints
_completedBTDriveWithinOnboardingWindow
showsInternalAlerts
isAutomaticDNDInternalShowGeofencingAlertsEnabledPreference
lastKnownVehicularHints
setLastKnownVehicularState:
detailsWithIdentifier:modeIdentifier:lifetime:
takeModeAssertionWithDetails:error:
_terminateDND
setFirstBuddyPresentationFirstMoment:
_userEligibleForDNDBuddy
lastKnownVehicularState
isAutomaticDNDInternalForceOverrideEnabledPreference
_firstRideStarted
_firstRideCompleted
_scheduleBuddyAtAnAppropriateTimeWithAction:
hasAdjustedTriggerMethod
firstBuddyPresentationFirstMoment
currentCalendar
isDate:inSameDayAsDate:
timeIntervalSinceReferenceDate
setLastKnownVehicularHints:
reason
userIndicatedNotDrivingWithReason:
restrictionsEnabled
pathForResource:ofType:
arrayWithContentsOfFile:
currentLocale
localeIdentifier
hasStartedFirstRidePreference
hasCompletedFirstRidePreference
isAutomaticDNDInternalExitConfirmationOverrideEnabledPreference
dateWithTimeIntervalSinceReferenceDate:
hasPrefix:
_scheduleVehicleQuery
hasPairedDeviceSupportingCarPlayWithAddress:
_scheduleUserDisabledTimerWithInterval:
lastKnownReportTime
_transitionToState:vehicularHints:operatorState:
userDisableTimer
setUserDisableTimer:
_userDisabledTimerFired:
_DNDAssertionInvalidated:
modeAssertionService:didUpdateActiveModeAssertion:
modeAssertionService:didReceiveModeAssertionInvalidation:
setAssertionService:
setStateMachine:
setAlertManager:
setPreferences:
setAssertionTrap:
setCARDNDQueue:
setFirstRideVehicleHints:
setGeofencingObserver:
_expectedDNDTermination
_vehicleQueryInitiatedTimestamp
_expectedBuddyTermination
_userDisableTimer
_assertionService
_alertManager
_assertionTrap
_CARDNDQueue
_nextUnlockAction
_nextLockAction
_lastKnownVehicularState
_lastKnownVehicularHints
_lastKnownReportTime
_firstRideVehicleHints
_geofencingObserver
setTimeStyle:
setDateStyle:
setLocale:
stringFromDate:
arrayForKey:
_bundlesToReadInfoKeys
applicationProxyForIdentifier:
appState
isInstalled
sharedConfiguration
currentCountrySupportsCarIntegration
carPlayInstrumentClusterURLSchemes
_notifyURLsDidChange
urlStrings
sessionURLStrings
APEndPointInfo
_applySessionURLs:
setSessionURLStrings:
setUrlStrings:
_urlStrings
_sessionURLStrings
setTimeoutTimer:
setProcessTransaction:
stopTimeoutTimer
timeoutTimer
handleTimeout:
transportType
stopWaitingForConnection
startWaitingForConnection
startTimeoutTimer
processTransaction
_timeoutTimer
_processTransaction
initWithMachServiceName:
bluetoothPowerStateChanged:
connectedDevices
address
connectingDevices
pairedDevices
_deviceForBluetoothAddress:
setDevicePairingEnabled:
unpair
connectedServicesCount
isServiceSupported:
connect
powered
sendEvent:withDictionary:
shouldRecordAnalyticsEvents
_CARCoreAnalyticsEventNameForEvent:
rangeOfUnit:startDate:interval:forDate:
components:fromDate:toDate:options:
second
minute
sendAggdEvent:withValue:forSetting:
sendAppleCareEvent:withExtras:
driveStartTimeInterval
setDriveStartTimeInterval:
isCurrentlyDriving
setIsCurrentlyDriving:
_isCurrentlyDriving
_driveStartTimeInterval
_radarURLForDiagnosticsAtTime:withEvent:
_radarURLForDiagnosticsAtTime:didStartRhodes:
_radarURLForDiagnosticsAtTime:didEnterRhodesGeofence:
_radarURLForDiagnosticsAndDescriptionText:
_power
[Rhodes] Requesting bulletin %@ %{public}@ %@
[Rhodes] Error presenting bulletin %@: %{public}@
[Rhodes] Successfully requested bulletin %@
[Rhodes] Dismissing banner %@ %@
[Rhodes] Internal: Presenting enter geofence notification
[Rhodes] Internal: Presenting exit geofence notification
[Rhodes] Presenting Rhodes Mini unlock to opt in alert.
[Rhodes] Internal: Presenting DND end notification
[Rhodes] Internal: Presenting Not Driving Feedback Alert
[Rhodes] Not showing Buddy - our handle is still valid.
[Rhodes] Presenting DND Mini Buddy
[Rhodes] Cancelling DND Mini Buddy launch.
[Rhodes] Failed pre-warming DNDBuddy: %@
[Rhodes] Finished pre-warming DNDBuddy.
[Rhodes] User opened settings for %@
[Rhodes] Will present notification %@
[Rhodes] Notification %@ response %{public}@
[Rhodes] No known presented bulletin matching identifier %@
[Rhodes] Bulletin has no action handler. Assuming this is a custom action.
[Rhodes] User dismissed bulletin.
[Rhodes] User selected default bulletin action.
[Rhodes] User selected custom action.
[Rhodes] No matching action for %{public}@ on bulletin %@
[Rhodes] Sending additional action at index %@
[Rhodes] DND Buddy did activate.
[Rhodes] DND Buddy did deactivate.
[Rhodes] DND Buddy did invalidate with error %@
[NightModeFallback] Posting notification with night mode: %@
[NightModeFallback] Observed session connect
[NightModeFallback] Session provides night mode values, not starting fallback
[NightModeFallback] Session does not provide night mode values, starting fallback
[NightModeFallback] Observed session disconnect, invalidating
[NightModeFallback] Failed to get a location with error: %@
[NightModeFallback] Starting fallback
[NightModeFallback] Initial fallback night mode value: %@
[NightModeFallback] Scheduling update because of sunset or sunrise event timer
[NightModeFallback] Scheduling timer for next night mode change
[NightModeFallback] Horizontal accuracy is negative, ignoring location update
[NightModeFallback] Comparing against previous location
[NightModeFallback] Distance change between previous location is less than 3km
[NightModeFallback] No previous location
[NightModeFallback] Updating fallback night mode
[NightModeFallback] Significant time change, resetting
[NightModeFallback] schedule timer for next sunset or sunrise: now(%@) today's sunset(%@), tmw's sunset(%@), today's sunrise(%@), tmw's sunrise(%@), target(%@), timeInterval=%lf
Found a queried keychain item: %@
No vehicle found for keychain query: %@ error: %i
Found queried keychain items: %@
No vehicles found for keychain query: %@ error: %i
Updated a keychain item: %@
Failed to update a keychain item: %@  error: %i
Created a keychain item: %@
Failed to create a keychain item: %@ error: %i
Deleted keychain items matching: %@
Failed to delete keychain items matching: %@ error: %i
Setting payload %@ for identifier %@
Removing payload for identifier %@
Failed to save unpaired vehicle storage
Failed to save vehicle preferences: %@ %@
Failed to remove vehicle preferences: %@ %@
No matching keychain item for %@ (%@)
Cleaned up preferences for missing keychain item %@ (%@)
Failed to cleaned up preferences for missing keychain item %@ (%@)
posting pairings changed
using cache with %lu vehicles
Failed to reconstruct vehicle with %@ (%@)
Failed to create vehicle identifier: %@
waiting for first unlock
completed first unlock
[Rhodes] Not fetching vehicle state - device does not support DNDWD.
[Rhodes] Not fetching vehicle state - device has not unlocked since boot.
[Rhodes] At least one call is active.
[Rhodes] Capture session is running.
[Rhodes] VoiceOver was recently active.
[Rhodes] VoiceOver is enabled.
[Rhodes] Unregistered for lock events.
[Rhodes] Registered for lock events.
[Rhodes] Failed to register for lock events.
[Rhodes] Error fetching settled: %@
[Rhodes] Scheduling vehicle state check after %@
[Rhodes] Airplane mode now active.
[Rhodes] Airplane mode now inactive.
[Rhodes] Fetched CM vehicle state: %@
[Rhodes] Ignoring unknown vehicular state.
[Rhodes] Generated vehicle state %{public}@
[Rhodes] Registered for front camera iris events.
[Rhodes] Failed to register for front camera iris events.
[Rhodes] Registered for back camera iris events.
[Rhodes] Failed to register for back camera iris events.
[Rhodes] Registered for back telecamera iris events.
[Rhodes] Failed to register for back telecamera iris events.
[Rhodes] Capture session: %@
[Rhodes] Device lost state is currently: %@
[Rhodes] Geofencing observer initialized
[Rhodes] Not setting up geofences; posting exit confirmation.
[Rhodes] Beginning to fetch LOIs for geofencing
[Rhodes] Creating geofence around start location using cached location
[Rhodes] No start location geofence created, location manager doesn't have cached location or accuracy does not qualify
[Rhodes] Stop fetching LOIs for geofencing
[Rhodes] Geofences cleared
[Rhodes] Currently in region with lat/long: {%f, %f}
[Rhodes] Not in any monitored regions
[Rhodes] Setting exit confirmation override %@
[Rhodes] Creating geofence around lat/long: {%f, %f}
[Rhodes] Creating geofence for [%@]
[Rhodes] Posting Exit Confirmation Enabled because of override.
[Rhodes] Posting Exit Confirmation Disabled because we are not in Car DND
[Rhodes] Posting Exit Confirmation Enabled because WiFi is powered off.
[Rhodes] Posting Exit Confirmation Enabled because Location Services are disabled
[Rhodes] Posting Exit Confirmation Disabled because we are not monitoring geofences
[Rhodes] Posting Exit Confirmation Disabled because we are in a geofence
[Rhodes] Posting Exit Confirmation Enabled because we are not in a geofence
[Rhodes] Updating region state for [%@] lat/long: {%f, %f}: %ld
[Rhodes] Updating region state for geofence [%@]: %ld
[Rhodes] Not creating geofence around {%f, %f} since we're at our maximum geofence count.
[Rhodes] Geofence already exists around lat/long: {%f, %f}
[Rhodes] Cancelling geofences for predicted locations - no longer actively monitoring.
[Rhodes] Fetching home LOI
[Rhodes] Cancelling geofences for home location - no longer actively monitoring.
[Rhodes] Creating fence for home
[Rhodes] Fetching work LOI
[Rhodes] Cancelling geofences for work location - no longer actively monitoring.
[Rhodes] Creating fence for work
[Rhodes] Deactivating geofences since location services are now disabled
[Rhodes] Activating geofences since location services are now enabled
[Rhodes] Received location update, but nil location
[Rhodes] Received location update, but no longer monitoring
[Rhodes] Received location update, but age is too old
[Rhodes] Creating start geofence around received location
[Rhodes] Begin monitoring for lat/long: {%f, %f}
[Rhodes] Begin monitoring for [%@]
[Rhodes] Entered region for lat/long: {%f, %f}
[Rhodes] Entered region for [%@]
[Rhodes] Exited region for lat/long: {%f, %f}
[Rhodes] Exited region for [%@]
[Rhodes] Determined state for [%@]: %ld
[Rhodes] Location manager failed for Geofencing: %@
[Rhodes] Location services are not enabled.
[Rhodes] WiFi is powered off.
%s: car carpabilities from state machine: %@
%s: sending CARSessionCarCapabilitiesUpdatedNotification signaling car capabilities change
%s: CarCapabilities using CARPrototypePref value overrride
%s: CarCapabilities using CARPrototypePref defaultValue overrride
Posting blacklist changed
Requesting CarPlay MobileAssets catalog download
CarPlay MobileAssets catalog downloaded
CarPlay MobileAssets catalog failed to download
CarPlay MobileAssets catalog not present
CarPlay MobileAssets catalog out of date
CarPlay MobileAssets asset exists but is not downloaded, requesting download
CarPlay MobileAssets asset download successful
CarPlay MobileAssets asset download failed
Failed to find CarPlay MobileAssets asset
Failed to query for CarPlay MobileAssets asset: %@, queryResult: %ld
Fetched CarPlay MobileAsset (blacklist): %@
Fetched CarPlay MobileAsset (carcapabilities) at %@
Failed to parse CarPlay MobileAssets file
Error creating CarPlay logging folder: %@
dnsName is nil: %@ or filePath is nil: %@
Output of airplayutil: %s
Could not find connected IP string
Error when getting remote logs
No IP address, not gathering remote logs
Fetching remote logs with command: %@
Parse Retry-After error
Retry %@ in %d seconds
Timer completed, fetching remote logs
Failed to move: %@
Timed out waiting for logging completion. Pending log count: %d.
Process %i does not have the %@ entitlement
Receiving CarKit service connection %@ to service %@ from %@
WiFi disabled for %@ (%@) with current services count %@, previous services count %@
Existing enable WiFi alert for %@, cancelling presentation
isBluetoothInCar %i
received WiFi credentials for connectionID %lu
Failed to find a connected accessory with connection ID: %lu
Ignoring WiFi credentials for vehicle %@
Failed to update vehicle %@
Failed to save WiFi credentials for vehicle %@
saved WiFi credentials for %@
not posting in-car notification, WiFi credentials were not received while Bluetooth connected
CarPlay restriction changed
Sending iAP in-car wifi notification %@
Sending iAP out-of-car wifi notification %@
vehicle %@ declares enhanced integration support
Handling CarPlay attach
CarPlay is not available
First accessory attach for %@, adding certificateSerial
Merging incomplete pairing %@ into pairing %@
BT connected vehicles: %@
Saved vehicle %@
Failed to save vehicle %@
Failed to remove WiFi credentials for vehicle %@
attemptConnectionForVehicles %@
attempting Bluetooth connection to %@
no WiFi credentials request necessary for %@
sendDeviceIdentifierForVehicleAccesory %@ pairingStatus %lu
approval alert cancelled
approval alert accepted
approval alert declined
OOB decline count: %@
Doesn't support wired BT pairing.
Supports USB - setting USB decline type.
Wired BT pairing alert declined
Incrementing OOB decline count from %{public}@
Wired BT pairing alert cancelled
Wired BT pairing alert accepted
Wired BT powering on
starting wired Bluetooth pairing with %@
wired pairing address: %@
vehicle did not have a Bluetooth address after pairing: %@
failed to complete Bluetooth pairing with %@
presenting alert to ask to turn on Wi-Fi
Enable Wi-Fi alert declined
Enable Wi-Fi alert cancelled
Enable Wi-Fi alert accepted, turning on Wi-Fi
Presenting enhanced integration alert
Enhanced integration alert declined
Enhanced integration alert cancelled
Enhanced integration alert accepted
%s: Created new state machine %@
%s: dispatchEvent %@
%s: root fall through for inEvent %@
%s: readyState event block inEvent %@
%s: loadingState event block inEvent %@
%s: searchingState event block inEvent %@
%s: doneState event block inEvent %@
%s: event = %@
%s: moving to state %@
%s: state = %@
%s: keyAtIndex (%ld) = %@
Founds values for search: %@
%s: lookup all keys searched
%s: %ld candidates
%s: matching vehicle for session/plist is: %@
%s: no matching vehicle for session/plist, using default values: %@
[Rhodes] Taking assertion trap for %@
[Rhodes] Releasing assertion trap for %@
[Rhodes] Clearing all assertion traps.
[Rhodes] Clearing all temporary assertions.
Receiving navigation ownership connection %@ to service %@ from %@
removing owners for connection: %@
removing navigation owner: %@
Owners: %@
iOS already has ownership
Requesting iOS ownership
Holding iOS ownership
Releasing iOS ownership
iOS does not have ownership
Received notification indicating ownership changed to %@
Informing navigation owner: %@
Adding navigation owner: %@
Sending app identifier after adding: %{public}@
Not modifying iAP route guidance after addition since Apple Maps is active
Informing navigation owners of new arrival: %@
Removing navigation owner: %@
Apple Maps ended route guidance
Not modifying iAP route guidance after removal since Apple Maps is active
Sending app identifier after removal: %{public}@
[Rhodes] Process %i has neither the %@ nor %@ entitlements
[Rhodes] Receiving connection %@ to service %@ from %@
[Rhodes] Ignoring Car DND toggle; we're already in that same state.
[Rhodes] Engaging DND from external activation.
[Rhodes] Disabling DND from external activation.
[Rhodes] Asked for DNDWD %{public}@, received %{public}@
[Rhodes] Should Display Exit Confirmation: %d
[Rhodes] Updated auto-reply audience to %@
[Rhodes] Disabling DND until end of drive.
[Rhodes] Ignoring disable DND until end of drive - DND was not valid.
Monitoring service connection interrupted or invalidated; removing connection.
Receiving monitoring service connection %@ to service %@ from %@
Creating a monitoring transaction for %@
start monitoring for %@
stop monitoring for %@
going to tell clients that %@ has enabled state %i
policy monitor sending vehicle update to process %d
failed to connect to monitoring client service %@
Removing connection %@
Connection %@ not being monitored by service agent
Creating CarPlay logging folder: %@
Failed to move configuration file: %@
Configuration file does not exist
Failed to move device screenshot: %@
Device screenshot does not exist
Failed to move car screenshot: %@
Car screenshot does not exist
Failed to move file: %@
Providing custom attachments
No custom attachments
Maps is frontmost or guidance is active, retreiving last location
Remote logs are already in flight
After gathering sysdiagnose, filepath was nil with error: %@
Not completing logging since remote logs are in flight or dictation is not complete yet
Need sysdiagnose, but sysdiagnose is already in flight
No need for sysdiagnose now
CarPlay diagnostics gathering started, starting a state capture
Presenting dictation banner since we already have scheduled diagnostics
Skipping sysdiagnose in testing context.
Gathering AirPlay remote side logs
Dictation is not available
Dictation is not enabled via user preference
Diagnostics dictation complete.
Dictation transcribed to %@
Dictation stopped without transcription.
Unable to acquire status bar assertion
Status bar assertion released
Initiating vibrate for sysdiagnose
Presenting diagnostics alert: %@
Presenting diagnostics in-flight alert.
Presenting File Radar alert on CarPlay disconnect
Launching Tap-to-Radar for launch URLs
Clearing pending radar data
No pending diagnostics data for Radar.
Beginning IE transaction for CarPlay diagnostics
Asked to take IE transaction, but we're already holding one
Releasing IE transaction for CarPlay diagnostics
Asked to release IE transaction, but we weren't holding an IE transaction
Session disconnect, sysdiagnose should be taken
Session disconnect, no need for sysdiagnose
Session disconnect, sysdiagnose already in flight
Session disconnect, but no pending drafts
[Rhodes] Failed adding assertion update listener: %@
[Rhodes] Added assertion update listener.
[Rhodes] Notifying clients to re-query.
[Rhodes] CarPlay session started, engaging DNDWD from preferences.
[Rhodes] CarPlay session started, disabling DNDWD from preferences.
[Rhodes] CarPlay session ended; leaving DNDWD active for auto-termination.
[Rhodes] CarPlay session ended; disabling DNDWD
[Rhodes] Failed fetching active assertion with %@
[Rhodes] Device locked; engaging DND.
[Rhodes] Observed routine presentation time.
[Rhodes] BT First Ride: %{public}@, cancel from BT: %{public}@, ideal presentation: %{public}@
[Rhodes] Cancelling Buddy - not an ideal time to display.
[Rhodes] DND temporarily disabled due to %@
[Rhodes] DND re-enabled after last temporary assertion released.
[Rhodes] We already have a DND assertion.
[Rhodes] Engaging DND.
[Rhodes] Failed to acquire DND assertion with %{public}@
[Rhodes] Received an unwanted assertion. Canceling.
[Rhodes] New assertion - posting CarKit DND status changed.
[Rhodes] Requested to disable DND, but we weren't holding an assertion.
[Rhodes] Resetting DNDBuddy presentation.
[Rhodes] Skipping opt-in because we should not show Buddy.
[Rhodes] Received a request for %@ at next unlock, but we already had scheduled %@. Ignoring.
[Rhodes] No unlock action - ignoring buddy request.
[Rhodes] Failed to launch Buddy with %@
[Rhodes] User is not operating.
[Rhodes] Ignoring non-vehicular report in CarPlay mode.
[Rhodes] Scheduling initial presentation of Buddy.
[Rhodes] Ended a drive, scheduling second Buddy presentation.
[Rhodes] Non-vehicular state with no valid first ride state.
[Rhodes] Not engaging DND due to active assertions: %{public}@
[Rhodes] DND while driving is set to Manually
[Rhodes] Starting first ride.
[Rhodes] In vehicle, but has not completed first ride. Ignoring.
[Rhodes] Scheduling DND start with next device lock.
[Rhodes] Cleaning up DND state.
[Rhodes] Assertion invalidated due to %{public}@
[Rhodes] Expected DND termination.
[Rhodes] Unexpected DND termination.
[Rhodes] Posting DND status changed.
[Rhodes] User indicated passenger.
[Rhodes] User indicated pulled over.
[Rhodes] User indicated incorrect vehicle detection.
[Rhodes] User indicated other.
[Rhodes] User indicated unknown not driving reason.
First BT drive days: %@
[Rhodes] Not showing DND Buddy because restriction is enabled
[Rhodes] Not showing DND Buddy because VoiceOver is enabled
[Rhodes] Not showing DND Buddy because region is not US, locale is: %@
[Rhodes] Override is set; forcing vehicle state ON.
[Rhodes] Skipping non-BT in-vehicle report received after BT in-vehicle report.
[Rhodes] Interpreted as BT disconnect.
[Rhodes] Ignoring vehicle state change because CarPlay session is active.
[Rhodes] Ignoring vehicle state change because AirPlane mode is active.
[Rhodes] Likely a CarPlay connection.
[Rhodes] CarPlay vehicle that isn't disabled.
[Rhodes] Marking report while user disabled.
[Rhodes] Ignoring vehicular report - user disabled and still within delay window.
[Rhodes] Vehicular report occurred after jitter interval.
[Rhodes] Beginning IE transaction.
[Rhodes] Releasing IE transaction.
[Rhodes] Scheduling user disabled timer after %@
[Rhodes] User disabled timer fired.
[Rhodes] Evaluating transition to Non-vehicular state.
[Rhodes] Evaluating transition to Vehicular state.
[Rhodes] Evaluating transition to Unknown state.
[Rhodes] Manual trigger mode.
[Rhodes] BT trigger mode.
[Rhodes] Automatic trigger mode.
Application %{public}@ is not installed for instrument cluster support.
Current country does not support car integration; skipping maps for instrument cluster.
Application %{public}@ declared instrument cluster URLs %{public}@
Application %{public}@ did not declare any instrument cluster URLs.
Instrument Cluster session URL %{public}@ is not on master list; dropping
Applying altScreenSuggestUIURLs URLs %{public}@
No altScreenSuggestUIURLs provided by accessory.
assertion manager starting re-evaluation timer
assertion manager timed out but there is an active session
assertion manager timed out
opening 'com.apple.carkit.active-session' transaction %@
closing 'com.apple.carkit.active-session' transaction
carkitd launching
Handling %@ notification
system language changed, exiting
BTDeviceGetAddressString(%@) failed with error %d.
connected addresses: %@
unpaired device: %@
failed to find the device (%@) to unpair
BT power state changed: %@
[Rhodes] Sending CA event %@
[Rhodes] Recording aggd event %@
Unknown analytics event: %@
Unsupported calendar unit type: %@
CARDNDAlerts
SBSRemoteAlertHandleObserver
NSObject
UNUserNotificationCenterDelegate
CRAlert
CRNightModeFallbackManager
CLLocationManagerDelegate
CARSessionObserving
CRVehicleStore
CRVehicleStoreAvailability
CRRhodesUnlockForDNDAlert
CRDNDEndAlert
CRDNDGeofenceAlert
CRDNDEnteredGeofenceAlert
CRDNDExitedGeofenceAlert
CRDNDNotDrivingAlert
CRDictationService
SFSpeechRecognitionTaskDelegate
_CARVehicleState
CARVehicleState
CARDNDStateObserver
RadiosPreferencesDelegate
_CARDNDRegion
CARDNDGeofencingObserver
CRCarPlayCapabilitiesManager
CRCarPlayAppServiceAgent
NSXPCListenerDelegate
CRCarPlayAppService
CRAirPlayDiagnosticsService
CRCarKitService
CRCarKitServiceAgent
CRVehicleAccessoryManagerDelegate
CRCarPlayPreferencesDelegate
CRBluetoothManagerDelegate
CRBulletin
CRCarplayCapabilitiesStateMachine
CARDNDAssertionTrap
CRVehicleAccessoryAlert
CROutstandingWiredVehicleApprovalAlert
CROutstandingWirelessVehicleApprovalAlert
CROutstandingVehiclePairingAlert
CRReconnectionEnableWiFiAlert
CRVehicleEnhancedIntegrationAlert
_CRAppStateNavigationOwner
CRCarPlayNavigationOwnersService
CRCarPlayNavigationOwnerClient
CRCarPlayNavigationOwnersServiceAgent
CARDNDWatchSyncManager
CRCarPlayDNDService
CARDNDServiceAgent
CRDiagnosticsAlert
CRInitiateLogsAlert
CRFileRadarAlert
CRCarKitMonitoringServerService
CRCarKitMonitoringClientService
CRCarKitMonitoringServiceAgent
CRDiagnosticsData
CRDiagnosticsService
CARDNDManager
CARDNDStateDelegate
CARDNDGeofencingObserverDelegate
CARDNDAssertionTrapDelegate
DNDModeAssertionUpdateListener
CRInstrumentClusterURLManager
CRWirelessSessionAssertionManager
CRBluetoothManager
CARAnalytics
CARDNDDiagnosticsService
CRWiFiCarManager
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@16
v32@0:8@16@24
v24@0:8@"SBSRemoteAlertHandle"16
v32@0:8@"SBSRemoteAlertHandle"16@"NSError"24
v40@0:8@16@24@?32
v40@0:8@"UNUserNotificationCenter"16@"UNNotification"24@?<v@?Q>32
v40@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24@?<v@?>32
v32@0:8@"UNUserNotificationCenter"16@"UNNotification"24
@24@0:8@16
v16@0:8
v24@0:8#16
v24@0:8@?16
v32@0:8@16@?24
v40@0:8@16@?24@?32
@24@0:8#16
v20@0:8B16
@"UNUserNotificationCenter"
@"SBSRemoteAlertHandle"
@"NSMutableArray"
v24@0:8^{__CFUserNotification=}16
d16@0:8
v24@0:8Q16
B24@0:8@?16
^{__CFUserNotification=}
@"NSTimer"
v40@0:8@16@24@32
v40@0:8@16q24@32
v28@0:8@16i24
v40@0:8@"CLLocationManager"16@"CLLocation"24@"CLLocation"32
v32@0:8@"CLLocationManager"16@"NSArray"24
v32@0:8@"CLLocationManager"16@"CLHeading"24
B24@0:8@"CLLocationManager"16
v40@0:8@"CLLocationManager"16q24@"CLRegion"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconRegion"32
v40@0:8@"CLLocationManager"16@"CLBeaconRegion"24@"NSError"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconIdentityConstraint"32
v40@0:8@"CLLocationManager"16@"CLBeaconIdentityConstraint"24@"NSError"32
v32@0:8@"CLLocationManager"16@"CLRegion"24
v32@0:8@"CLLocationManager"16@"NSError"24
v40@0:8@"CLLocationManager"16@"CLRegion"24@"NSError"32
v28@0:8@"CLLocationManager"16i24
v24@0:8@"CLLocationManager"16
v32@0:8@"CLLocationManager"16@"CLVisit"24
v24@0:8@"CARSession"16
v32@0:8@"CARSession"16@"CARSessionConfiguration"24
i16@0:8
v20@0:8i16
@"CARSessionStatus"
@"CLLocation"
@"CLLocationManager"
@"GEOAlmanac"
B32@0:8@16@24
@32@0:8@16@?24
@"NSSet"
@"NSString"
@20@0:8B16
v28@0:8@16B24
v24@0:8@"SFSpeechRecognitionTask"16
v32@0:8@"SFSpeechRecognitionTask"16@"SFTranscription"24
v32@0:8@"SFSpeechRecognitionTask"16@"SFSpeechRecognitionResult"24
v28@0:8@"SFSpeechRecognitionTask"16B24
@?16@0:8
@"NSError"
@"SFSpeechRecognitionTask"
@"SFSpeechAudioBufferRecognitionRequest"
@"SFSpeechRecognizer"
@"AVAudioEngine"
@40@0:8@16#24@32
v24@0:8d16
@"RadiosPreferences"
@"RTRoutineManager"
@"<CARDNDStateDelegate>"
@"CXCallObserver"
q16@0:8
v24@0:8q16
@"CLCircularRegion"
@40@0:8@16@24@32
@48@0:8{CLLocationCoordinate2D=dd}16@32Q40
v32@0:8q16@24
@"<CARDNDGeofencingObserverDelegate>"
@"NSArray"
@"CRWiFiCarManager"
@"NSURL"
@"CRCarPlayCapabilities"
@"CARSession"
@"CRCarplayCapabilitiesStateMachine"
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@32@0:8@16^@24
@"NSObject<OS_dispatch_queue>"
@"CRCarPlayCapabilitiesManager"
i40@0:8@16^@24@32
v40@0:8Q16@24@?32
v56@0:8@16@24@32@40@?48
v32@0:8@"CRVehicle"16@?<v@?@"CRVehicle"@"NSError">24
v32@0:8@"CRVehicle"16@?<v@?B@"NSError">24
v24@0:8@?<v@?@"NSSet"@"NSError">16
v24@0:8@?<v@?B@"NSError">16
v32@0:8@"NSString"16@?<v@?B@"NSString"@"NSError">24
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v24@0:8@?<v@?B@"NSString"@"NSError">16
v40@0:8Q16@"NSDictionary"24@?<v@?B@"NSString"@"NSError">32
v32@0:8@"NSData"16@?<v@?B@"NSError">24
v32@0:8@"NSData"16@?<v@?Q@"NSError">24
v24@0:8@?<v@?>16
v56@0:8@"NSURL"16@"NSURL"24@"NSArray"32@"NSString"40@?<v@?>48
v32@0:8@"NSData"16@?<v@?@"NSString"@"NSError">24
v24@0:8@?<v@?@"NSArray"@"NSError">16
Q24@0:8@16
v32@0:8@"CRVehicleAccessoryManager"16@"CRVehicleAccessory"24
v28@0:8@"CRBluetoothManager"16B24
B24@0:8^@16
@32@0:8@16@24
B32@0:8@16Q24
v32@0:8@16Q24
@"CRCarKitMonitoringServiceAgent"
@"CRVehicleStore"
@"CRVehicleAccessoryManager"
@"CRCarPlayPreferences"
@"CRBluetoothManager"
@"CRInstrumentClusterURLManager"
@"CRWirelessSessionAssertionManager"
@"NSNumber"
@"NSMutableDictionary"
@"CRVehicleAccessory"
@"CRVehicle"
v32@0:8q16q24
@"CUStateMachine"
@"NSDictionary"
B24@0:8Q16
v28@0:8B16@?20
@"CARAutomaticDNDStatus"
@"<CARDNDAssertionTrapDelegate>"
@"NSUserDefaults"
@"NSXPCConnection"
v24@0:8@"NSString"16
v24@0:8@?<v@?Q>16
v24@0:8@?<v@?@"NSString">16
@"NSMutableOrderedSet"
@"CARRouteGuidanceiAPSession"
v32@0:8Q16@?24
v24@0:8@?<v@?B>16
v28@0:8B16@?<v@?B@"NSError">20
v32@0:8Q16@?<v@?B@"NSError">24
v24@0:8@?<v@?Q@"NSError">16
v24@0:8@?<v@?@"NSString"@"NSError">16
v32@0:8@"NSArray"16@?<v@?B@"NSError">24
v32@0:8@"NSData"16@?<v@?>24
v36@0:8@16B24@?28
@"NSMutableSet"
@72@0:8@16@24@32@40@48@56@64
@"AFAccount"
@36@0:8@16@24I32
v72@0:8@16@24@32@40@48@56@?64
v40@0:8@16d24@?32
I16@0:8
v20@0:8I16
@"CRFileRadarAlert"
@"CRInitiateLogsAlert"
@"NSObject<OS_os_transaction>"
v32@0:8@"CARDNDStateObserver"16@"<CARVehicleState>"24
v28@0:8@"CARDNDStateObserver"16B24
v24@0:8@"CARDNDStateObserver"16
v32@0:8@16q24
v32@0:8@"CARDNDGeofencingObserver"16q24
v28@0:8@"CARDNDAssertionTrap"16B24
v32@0:8@"DNDModeAssertionService"16@"DNDModeAssertion"24
v32@0:8@"DNDModeAssertionService"16@"DNDModeAssertionInvalidation"24
v32@0:8B16B20@?24
v40@0:8Q16Q24Q32
@"DNDModeAssertionService"
@"CARDNDStateObserver"
@"CARDNDAlerts"
@"CARDNDAssertionTrap"
@"CARDNDGeofencingObserver"
@"<CRBluetoothManagerDelegate>"
q40@0:8Q16@24@32
v32@0:8Q16@24
v36@0:8@16q24B32
@24@0:8Q16
@32@0:8@16Q24
@28@0:8@16B24
v28@0:8B16@20
@(#)PROGRAM:carkitd  PROJECT:CarKit-1
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>18A391011</string>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
<key>CFBundleDevelopmentRegion</key>
<string>en</string>
<key>CFBundleExecutable</key>
<string>carkitd</string>
<key>CFBundleIdentifier</key>
<string>com.apple.internal.carkitd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>carkitd</string>
<key>CFBundlePackageType</key>
<string>BNDL</string>
<key>CFBundleShortVersionString</key>
<string>1.0</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>11L325i</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>13.0</string>
<key>DTSDKBuild</key>
<string>17A5508f</string>
<key>DTSDKName</key>
<string>iphonesimulator13.0.internal</string>
<key>DTXcode</key>
<string>1100</string>
<key>DTXcodeBuild</key>
<string>11L325i</string>
<key>MinimumOSVersion</key>
<string>13.0</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
<integer>2</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.CoreRoutine.LocationOfInterest</key>
<true/>
<key>com.apple.CoreRoutine.ScenarioTrigger</key>
<true/>
<key>com.apple.UIKit.status-bar-override-allow</key>
<true/>
<key>com.apple.assistant.dictation.prerecorded</key>
<true/>
<key>com.apple.assistant.settings</key>
<true/>
<key>com.apple.bluetooth.system</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.locationd.activity</key>
<true/>
<key>com.apple.locationd.effective_bundle</key>
<true/>
<key>com.apple.locationd.preauthorized</key>
<true/>
<key>com.apple.private.assets.accessible-asset-types</key>
<array>
<string>com.apple.MobileAsset.CarExperienceAssets</string>
</array>
<key>com.apple.private.carkit</key>
<true/>
<key>com.apple.private.carkit.app</key>
<true/>
<key>com.apple.private.carkit.dnd</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.donotdisturb.mode.assertion.client-identifiers</key>
<array>
<string>com.apple.carkitd.assertion-service</string>
</array>
<key>com.apple.private.externalaccessory.showallaccessories</key>
<true/>
<key>com.apple.private.sysdiagnose</key>
<true/>
<key>com.apple.private.system-keychain</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceMicrophone</string>
</array>
<key>com.apple.private.usernotifications.bundle-identifiers</key>
<array>
<string>com.apple.CarKit.notifications</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.routined.registration</string>
<string>com.apple.usernotifications.usernotificationservice</string>
<string>com.apple.CarPlayApp.service</string>
</array>
<key>com.apple.security.system-groups</key>
<array>
<string>systemgroup.com.apple.icloud.findmydevice.managed</string>
</array>
<key>com.apple.springboard.remote-alert</key>
<true/>
<key>com.apple.springboard.statusbarstyleoverrides</key>
<true/>
<key>com.apple.wifi.manager-access</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
<string>com.apple.carplay.pairings</string>
</array>
</dict>
</plist>
