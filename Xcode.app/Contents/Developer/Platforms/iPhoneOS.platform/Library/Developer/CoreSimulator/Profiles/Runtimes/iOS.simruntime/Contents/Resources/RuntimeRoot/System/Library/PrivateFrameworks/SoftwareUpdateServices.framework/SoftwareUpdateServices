SUAssetStateMatcher.m
Asset type must be non-nil for a matcher.
v32@?0@8Q16^B24
v8@?0
Ignoring unmet constraint: %@
Ignoring SU match due to personalization eligibility check: %@
Unable to find update due to ambiguous results: %@
Requesting PMV %@
Requesting delay period %lu
9.9.
9.9. replaced in currSecond. New version string: %@
Missing key %@ from asset map entry or type wasn't a string
Missing key %@ from asset map entry or type wasn't a string.
Mistyped key %@ from asset map entry (expected string)
Missing key %@ from asset map entry or type wasn't an array
Cannot have prerequisite version or build without it's sibling.
No version to search from
No build to search from
No product type to search for
SUAutoUpdatePasscodePolicy.m
Please use the sharedInstance.
com.apple.softwareupdateservices.passcodePolicy
com.apple.softwareupdateservices.passcodepolicy.observerCallout
Invalid passcode policy type: %d. Leaving policy as %@
Invalid parameter not satisfying: %@
observer
Not required
Required
Opportunistic
Unknown
forecast: %@
             agreementStatus: %d
             id: %@
forecast
agreementStatus
notify
userRequested
        SUPurgeOptions:
        notifyUser:%@
        userRequested:%@
Failed to find asset matching predicate: %@ in xml for asset type: %@, server url for asset type: %@
%K == %@
v32@?0@"NSString"8@16^B24
com.apple.MobileAsset.SoftwareUpdate
com.apple.MobileAsset.SoftwareUpdateDocumentation
com.apple.MobileAsset.MobileSoftwareUpdate.UpdateBrain
Build
OSVersion
ReleaseType
PrerequisiteBuild
PrerequisiteOSVersion
SupportedDevices
LastEmergencyBuild
LastEmergencyOSVersion
UniqueBuildID
SUProductSystemName
SUPublisher
AutomaticDownloadOver3G
AllowableOTA
AllowableOverCellular
SUDocumentationID
SupportedDeviceModels
ActualMinimumSystemPartition
SystemPartitionPadding
SEPDigest
RSEPDigest
SEPTBMDigests
RSEPTBMDigests
MDMDelayInterval
SetupCritical
SetupCriticalCellularOverride
SetupCriticalUpdateOutOfBoxOnly
SessionId
DeviceCheck
assetID
ComboAsset
__HideInstallAlert
ReleaseNotesSummaryFileName
ReleaseNotesFileName
LicenseAgreementFileName
SUSLAVersionRequired
Device
SUDisableSiriVoiceDeletion
SUDisableCDLevel4
SUDisableAppDemotion
SUInstallTonightEnabled
Ramp
AutoUpdate
default
mandatory
suggested
WifiOnly
WifiAndCellular
Unable to create descriptor from nil asset.
Unable to create descriptor from asset without attributes.
9.9. replaced. New version string: %@
yyyy-MM-dd
en_US_POSIX
Beta
queryMetaDataSync failed in _queue_cleanupAllInstalledAssetsOfType: %ld
purgeSync for asset:%@ failed in _queue_cleanupAllInstalledAssetsOfType: %ld
queryMetaDataSync failed in _cleanupAllAssetsOfType: %d
ProductType
BuildVersion
ProductVersion
HWModelStr
error setting filter for: %@
Failed to query matching assetID: %@ QueryResult: %d
Found SU asset matching assetID: %@
Failed to find asset matching assetID: %@
MobileAsset found %d installed build%s: assetIDs: %@
Failed to query for installed builds: %d
SUAssetSupport.m
Matcher must be non-nil for a query.
MobileAsset returned %d matching assets
Asset info: %@
asset query failed: %d
Asset query did not return posting date. Setting posting date to now
release date of update is %@
Found asset matching assetId:%@
Found %lu asset%s matching descriptor
ComboAsset value is not an array, skipping
ComboAsset array item is not a dictionary, skipping
Found %lu asset%s matching descriptor prerequisite build & version
Taking the first asset, assetId:%@
Could not find matching asset
SoftwareUpdateAsset must be non-nil to fetch documentation from.
Asset passed in must be a software update asset
%@:%@
v16@?0q8
Unable to cancel downloading asset: %d
Unable to purge asset: %d
Update download cancelled.
Failed to cancel download
Successfully purged asset
Failed to purge asset
Failed to purge. Asset not installed
downloadOnly
autoDownload
feeAgreementStatus
termsAgreementStatus
descriptor
policyType
allowUnrestrictedCellularDownload
com.apple.softwareupdateservicesd.downloadoptionsqueue
Settings downloadPolicy to: %@
            downloadOnly: %@
            autoDownoad: %@
            allowUnrestrictedCellularDownload: %@
            downloadFeeAgreementStatus: %@
            termsAndConditionsAgreementStatus: %@
            activeDownloadPolicyType: %@
            enabledForCellular: %@
            enabledForWifi: %@
            enabledOnBatteryPower: %@
            enabledForCellularRoaming: %@
            descriptor: %@
neededBytes
enableCachDelete
cachDeleteVolume
cacheDeleteUrgency
enableAppOffload
appOffloadVolume
appOffloadUrgency
/private/var
v24@?0@"SUSpaceCheckResults"8@"NSError"16
v20@?0B8@"NSError"12
identifier
forced
types
requestedPMV
MDMUseDelayPeriod
sessionID
            Identifier: %@
            Forced: %@
            Types: %@
            Requested PMV: %@
            SessionID: %@
            MDM use delay: %@
com.apple.springboard.pluggedin
BatteryCurrentCapacity
Current battery level: %lld
Failed to copy powerSources
Failed to copy powerSourcesList
Type
deviceType: %@
InternalBattery
Is Charging
Show Charging UI
FamilyCode
IsWireless
device connected to charger. Family code: %@ Wireless: %@
kIOPSFamilyCodeDisconnected
kIOPSFamilyCodeUnsupported
kIOPSFamilyCodeFirewire
kIOPSFamilyCodeUSBHost
kIOPSFamilyCodeUSBHostSuspended
kIOPSFamilyCodeUSBDevice
kIOPSFamilyCodeUSBAdapter
kIOPSFamilyCodeUSBChargingPortDedicated
kIOPSFamilyCodeUSBChargingPortDownstream
kIOPSFamilyCodeUSBChargingPort
kIOPSFamilyCodeUSBUnknown
kIOPSFamilyCodeUSBCBrick
kIOPSFamilyCodeUSBCTypeC
kIOPSFamilyCodeUSBCPD
kIOPSFamilyCodeAC
kIOPSFamilyCodeExternal
kIOPSFamilyCodeExternal2
kIOPSFamilyCodeExternal3
kIOPSFamilyCodeExternal4
kIOPSFamilyCodeExternal5
Unknown IOPSFamilyCode: %d
SUAutoInstallOperationCancelledNotification
SUAutoInstallOperationDidExpireNotification
SUAutoInstallOperationIsReadyToInstallNotification
SUAutoInstallOperationDidConsentNotification
SUAutoInstallOperation.m
client
uuid
[<SUAutoInstallOperation:%p> 
ID=%@, 
AcceptedAgreementStatus=%@, 
isExpired=%@, 
isScheduled=%@, 
isCancelled=%@, 
isValidForScheduling=%@, 
ForecastDetails=%@
__id
__expired
__cancelled
__agreementStatus
__forecast
phase
percentComplete
normalizedPercentComplete
timeRemaining
isDone
            
Phase: %@
            
PercentComplete: %@
            
NormalizedPercentComplete: %@
            
TimeRemaining: %@
com.apple.softwareupdateservices
Common
InstallationConstraints
SUBadging
SUFollowUp
SUAnalytics
com.apple.MobileSync.BackupAgent.RestoreStarted
v12@?0i8
com.apple.MobileSync.BackupAgent.kBackupAgentRestoreEnded
/Library/SoftwareUpdate/softwareupdateservicesd.plist
SULastDownload
SUPreferredLastScannedDescriptor
SUAlternateLastScannedDescriptor
SUFailedPatchDescriptorsKey
SUManualDownloadWifiPeriodEndTime
SUAutodownloadWifiPeriodEndTime
SUAutodownloadPolicyChangeTime
SULastScanDate
SUAutodownloadNeedsOneTimeRetry
SUStashbagIsPersisted
SULastProductVersionKey
SULastProductBuildKey
SULastProductTypeKey
SULastReleaseTypeKey
SULastAutoInstallOperationModel
SUUnlockCallbacksKey
SUManagedDeviceDelay
SUInstallPolicy
SUMandatorUpdateDict
SUSessionID
SULastDeletedSUAssetID
SULastAssetAudience
SUAppliedTime
SUUnderExclusiveControl
SUDiscoveryDates
SULastSplatRestoreVersion
%@%@
Failed to create state file path
com.apple.softwareupdateservicesd.stateQueue
LastDownload: %@            
preferredLastScannedDescriptor: %@            
preferredLastScannedCoreDescriptor: %@            
alternateLastScannedDescriptor: %@            
alternateLastScannedCoreDescriptor: %@            
FailedPatchDescriptors: %@            
ScheduledManualDownloadWifiPeriodEndTime: %@            
ScheduledAutoDownloadWifiPeriodEndTime: %@            
ScheduledAutoDownloadPolicyChangeTime: %@            
LastScanDate: %@            
NeedsOneTimeAutodownloadRetry: %@            
StashbagIsPersisted: %@            
LastProductVersion: %@            
LastProductBuild: %@            
LastProductType: %@            
LastReleaseType: %@            
LastSplatRestoreVersion: %@            
LastAutoInstallOperationModel: %@            
ManagedDeviceDelay: %@            
InstallPolicy: %@            
MandatoryUpdateDict: %@            
sessionID: %@            
lastDeletedAssetID: %@            
lastAssetAudience: %@            
appliedSate: %@            
underExclusiveControl: %@            
UpdateDiscoveryDates: %@
SUDownloadInterfaceReport
Skipping SUDownloadInterfaceReport in SUState (legacy).
SUInstallationConstraintObserver.m
Init is unsupported.  Please use -[SUInstallationConstraintObserver initWithDownload:] instead.
com.apple.softwareupdateservices.installationconstraints.bg
block
token
com.apple.softwareupdateservices.discoveryStateQueue
discoveryDateDictionary key is unexpected type. File a radar!
discoveryDateDictionary value is unexpected type. File a radar!
_descriptorArray and _discoveryDateArray are out of sync. File a radar!
com.apple.softwareupdateservices.mediaremote
v12@?0I8
clientName
skipsAllowed
type
autoUpdateEnabled
darkBootEnabled
Setting default install policy
Setting required install policy
Unknonw InstallPolicyType provided: %@
            clientName:%@
            type: %@
            skipsAllowed: %d
            autoUpdateEnabled: %@
            DarkBoot: %@
Default
SUInstallationConstraintMonitorBase.m
Please use the subclass version: -initOnQueue:withRepresentedInstallationConstraints:andDownload:
SUKeybagInterface.m
com.apple.softwareupdateservices.keybag
com.apple.softwareupdateservices.keybag.observerCallout
keybag is required
keybag is not required
secret
Unknown stash mode (%d)
passcode
keybagType
            descriptor: %@
            keybagType: %d
            passcode: %@
<PRESENT>
<NULL>
com.apple.softwareupdateservicesd
[<_SUAutoInstallForecastDateCache:%p> 
ForecastScheduleType=%@, 
startDate=%@, 
startDateRounded=%@, 
endDate=%@, 
endDateRounded=%@
Download instance is nil
download not class SUDownload
descriptor instance is nil
restoreVersion
productVersion
productBuildVersion
releaseType
SURollbackDescriptor:
              RestoreVersion: %@
              ProductVersion: %@
              ProductBuildVersion: %@
              ReleaseType: %@
Attempting to load plugin
Unable to load bundle with nil path
Unable to create bundle from bundle path: %@
Failed to load plugin bundle: %@ with error: %@
NSPrincipalClass
Unable to load plugin principalClassName: %@
plugin's principal class does not respond to awakeFromBundle: %@
%@ %@
Software Update
Apple, Inc.
notSpecified
incremental
full
emergency
unknown
publisher
productSystemName
prerequisiteBuild
prerequisiteOS
downloadSize
unarchiveSize
msuPrepareSize
installationSize
minimumSystemPartitionsize
updateType
documentation
autoDownloadAllowableForCellular
downloadableOverCellular
downloadable
streamingZipCapable
disableSiriVoiceDeletion
disableCDLevel4
disableAppDemotion
disableInstallTonight
rampEnabled
criticalOutOfBoxOnly
setupCritical
criticalDownloadPolicy
SEPTBMDigest
RSEPTBMDigest
releaseDate
hideInstallAlert
audienceType
preferenceType
upgradeType
promoteAlternateUpdate
isSplatOnly
systemPartitionPadding
%@/%@/%u/%u
            Publisher: %@
            HumanReadableUpdateName: %@
            ProductSystemName: %@
            ProductVersion: %@
            ProductBuildVersion: %@
            PrerequisiteBuild: %@
            PrerequisiteOS: %@
            ReleaseType: %@
            DownloadSize: %@
            UnarchiveSize: %@
            MSUPrepareSize: %@
            PreparationSize: %@
            InstallationSize: %@
            UpdateType: %@
            Downloadable: %@
            DownloadableOverCellular: %@
            AutoDownloadableOverCellular: %@
            AutoUpdateEnabled: %@
            StreamingZipCapable: %d
            TotalRequiredFreeSpace: %@
            Documentation: %@
            SiriVoiceDeletion: %d
            CDLevel4Deletion: %d
            appDemotionDisabled: %d
            installTonightDisabled: %d
            rampEnabled: %d
            setupCritical: %@
            criticalOutOfBoxOnly: %d
            criticalDownloadPolicy: %@
            releaseDate: %@
            mdmDelayInterval: %@
            assetID: %@
            hideInstallAlert %@
            audienceType %@
            preferenceType %@
            upgradeType %@
            promoteAlternateUpdate: %@
            isSplatOnly: %@
SUS-2.0
com.apple.softwareupdateservices.errors
SUInstallationConstraintsUnmet
SUMDMInstallationRequest
SUAutodownloadWillRetry
SUActivationServiceMessageType
SUActivationServiceMessage
SUActivationServiceAvailable
SUUserRequested
SUAdditionalSpaceRequired
SUAdditionalError
SoftwareUpdateConfigurationFlags
SUInstallOptionRequireUpdate
SUInstallOptionDarkBoot
SUDaemonStartedNotification
SUScanType
Background
Foreground
scanIdentifier
com.apple.softwareupdate.autoscan
com.apple.mdm
delayPeriod
RequestedPMV
SUDownloadPhaseStarting
SUDownloadPhaseBrainFetching
SUDownloadPhaseBrainFetchingQueuedLocal
SUDownloadPhaseBrainFetchingQueuedRemote
SUDownloadPhaseBrainFetchingStalled
SUDownloadPhaseBrainVerifying
SUDownloadPhaseBrainExtracting
SUDownloadPhaseFetching
SUDownloadPhaseFetchingStalled
SUDownloadPhaseFetchingPaused
SUDownloadPhaseFetchingQueuedLocal
SUDownloadPhaseFetchingQueuedRemote
SUDownloadPhaseVerifying
SUDownloadPhaseExtracting
SUDownloadPhasePreparingForInstallation
SUDownloadPhaseFetchingQueued
SUMDMSoftwareUpdatePathDefault
SUMDMSoftwareUpdatePathSlow
SUMDMSoftwareUpdatePathFast
Unknown SUMDMSoftwareUpdatePath value: %lu
High
Incremental
Full
Emergency
Splat
Not Specified
Unknonw OSUpdateType: %u
Accepted
Declined
Unanswered
Unknown Status
None
Wifi
v16@?0@"NSString"8
PhoneCall
SyncingData
BatteryTooLow
PasscodeLocked
NetworkRequired
RestoringFromICloud
RestoringFromITunes
InsufficientDiskSpace
InstallationKeybagRequired
CarplayConnected
MediaPlaying
Driving
v28@?0Q8i16^B20
DefaultWiFiOnly
DefaultRoamingRestricted
Auto
CellularOverride
Error
Warning
Unspecified
Alternate
NotPreferred
Preferred
Minor
Major
            isDownloadAllowableForCellular: %@
            hasEnoughDiskSpace: %@
            isDownloadable: %@
            isDownloadFreeForCellular: %@
            isDownloadAllowableForCellular2G: %@
            isDownloadAllowableForCellularRoaming: %@
            isDownloadAllowableForWiFi: %@
Client <%p>: setType: %@
Client <%p>: unable to set client type on connection: %@
v16@?0@"NSError"8
%s failed - connection interrupted: %@ error: %@
-[SUManagerClient _setClientType]_block_invoke
Client "%@" called %s
-[SUManagerClient isScanning:]
-[SUManagerClient isScanning:]_block_invoke
-[SUManagerClient scanForUpdates:withScanResults:]
-[SUManagerClient scanForUpdates:withScanResults:]_block_invoke
v24@?0@"SUScanResults"8@"NSError"16
-[SUManagerClient scanForUpdates:withResult:]
-[SUManagerClient scanForUpdates:withResult:]_block_invoke
-[SUManagerClient autoScanAndDownloadIfAvailable:]
-[SUManagerClient autoScanAndDownloadIfAvailable:]_block_invoke
-[SUManagerClient descriptors:]
-[SUManagerClient descriptors:]_block_invoke
-[SUManagerClient descriptor:]
-[SUManagerClient descriptor:]_block_invoke
v24@?0@"SUDescriptor"8@"NSError"16
-[SUManagerClient totalPurgeableSpace]
-[SUManagerClient isClearingSpaceForDownload:]
-[SUManagerClient isClearingSpaceForDownload:]_block_invoke
-[SUManagerClient getDocumentationDataForInstalledUpdateType:error:]
-[SUManagerClient isDownloading:]
-[SUManagerClient isDownloading:]_block_invoke
-[SUManagerClient startDownload:]
-[SUManagerClient startDownload:]_block_invoke
-[SUManagerClient startDownloadWithOptions:withResult:]
-[SUManagerClient startDownloadWithOptions:withResult:]_block_invoke
-[SUManagerClient startDownloadWithMetadata:withResult:]
-[SUManagerClient startDownloadWithMetadata:withResult:]_block_invoke
-[SUManagerClient cancelDownloadWithOptions:withResult:]
-[SUManagerClient cancelDownloadWithOptions:withResult:]_block_invoke
-[SUManagerClient cancelDownload:]
-[SUManagerClient cancelDownload:]_block_invoke
-[SUManagerClient pauseDownload:]
-[SUManagerClient pauseDownload:]_block_invoke
-[SUManagerClient resumeDownload:]
-[SUManagerClient resumeDownload:]_block_invoke
-[SUManagerClient updateDownloadOptions:withResult:]
-[SUManagerClient updateDownloadOptions:withResult:]_block_invoke
-[SUManagerClient updateDownloadMetadata:withResult:]
-[SUManagerClient updateDownloadMetadata:withResult:]_block_invoke
-[SUManagerClient purgeDownloadWithOptions:withResult:]
-[SUManagerClient purgeDownloadWithOptions:withResult:]_block_invoke
-[SUManagerClient purgeDownload:]
-[SUManagerClient purgeDownload:]_block_invoke
-[SUManagerClient download:]
v40@?0@"SUDownload"8@"SUInstallPolicy"16@"SUAutoInstallOperation"24@"NSError"32
-[SUManagerClient downloadAndInstallState:]
-[SUManagerClient downloadAndInstallState:]_block_invoke
v40@?0@"SUDownload"8@"SUInstallPolicy"16@"_SUAutoInstallOperationModel"24@"NSError"32
-[SUManagerClient updatesDownloadableWithOptions:alternateDownloadOptions:replyHandler:]
-[SUManagerClient updatesDownloadableWithOptions:alternateDownloadOptions:replyHandler:]_block_invoke
v32@?0B8B12@"NSError"16@"NSError"24
-[SUManagerClient areUpdatesDownloadableWithOptions:alternateUpdateOptions:preferredUpdateDownloadable:alternateUpdateDownloadable:preferredUpdateError:alternateUpdateError:]
-[SUManagerClient areUpdatesDownloadableWithOptions:alternateUpdateOptions:preferredUpdateDownloadable:alternateUpdateDownloadable:preferredUpdateError:alternateUpdateError:]_block_invoke
-[SUManagerClient deviceHasSufficientSpaceForDownloads:]
-[SUManagerClient deviceHasSufficientSpaceForDownloads:]_block_invoke
-[SUManagerClient deviceHasSufficientSpaceForDownload:]
-[SUManagerClient deviceHasSufficientSpaceForDownload:]_block_invoke
-[SUManagerClient extraSpaceNeededForDownloadWithoutAppPurging:]
-[SUManagerClient extraSpaceNeededForDownloadWithoutAppPurging:]_block_invoke
v24@?0@"NSNumber"8@"NSError"16
-[SUManagerClient currentAutoInstallOperation:withResult:]
-[SUManagerClient currentAutoInstallOperation:withResult:]_block_invoke
v24@?0@"_SUAutoInstallOperationModel"8@"NSError"16
-[SUManagerClient currentPasscodePolicy:]
-[SUManagerClient currentPasscodePolicy:]_block_invoke
v24@?0Q8@"NSError"16
-[SUManagerClient isAutoUpdateEnabled:]
-[SUManagerClient isAutoUpdateEnabled:]_block_invoke
-[SUManagerClient isAutoUpdateScheduled:]
-[SUManagerClient isAutoUpdateScheduled:]_block_invoke
-[SUManagerClient isAutoUpdateScheduled]
-[SUManagerClient isAutoUpdateScheduled]_block_invoke
-[SUManagerClient presentAutoUpdateBanner:]
-[SUManagerClient presentAutoUpdateBanner:]_block_invoke
-[SUManagerClient observeInstallationConstraintChangesForDownload:observer:]
Created installation constraint observer: %@: observers: %@
v32@?0Q8Q16@"NSError"24
-[SUManagerClient registerCSInstallPredicatesOnDate:]
-[SUManagerClient isUpdateReadyForInstallation:]
-[SUManagerClient isUpdateReadyForInstallation:]_block_invoke
-[SUManagerClient isUpdateReadyForInstallationWithOptions:withResult:]
-[SUManagerClient isUpdateReadyForInstallationWithOptions:withResult:]_block_invoke
-[SUManagerClient installUpdateWithInstallOptions:withResult:]
-[SUManagerClient installUpdateWithInstallOptions:withResult:]_block_invoke
-[SUManagerClient installUpdateWithOptions:withResult:]
-[SUManagerClient installUpdateWithOptions:withResult:]_block_invoke
-[SUManagerClient installUpdate:]
-[SUManagerClient installUpdate:]_block_invoke
-[SUManagerClient eligibleRollbackWithOptions:withResult:]
-[SUManagerClient eligibleRollbackWithOptions:withResult:]_block_invoke
v24@?0@"SURollbackDescriptor"8@"NSError"16
-[SUManagerClient rollbackUpdateWithOptions:withResult:]
-[SUManagerClient rollbackUpdateWithOptions:withResult:]_block_invoke
v28@?0B8@"SURollbackDescriptor"12@"NSError"20
-[SUManagerClient previousRollbackWithOptions:withResult:]
-[SUManagerClient previousRollbackWithOptions:withResult:]_block_invoke
-[SUManagerClient isRollingBack:]
-[SUManagerClient isRollingBack:]_block_invoke
-[SUManagerClient scheduleRollbackRebootForLater:]
-[SUManagerClient scheduleRollbackRebootForLater:]_block_invoke
-[SUManagerClient createInstallationKeybagWithOptions:]
-[SUManagerClient createInstallationKeybagWithOptions:]_block_invoke
Client <%p>: unable to create installation keybag: %@
-[SUManagerClient isInstallationKeybagRequired]
-[SUManagerClient isInstallationKeybagRequired]_block_invoke
-[SUManagerClient isInstallationKeybagRequiredForDescriptor:]
-[SUManagerClient isInstallationKeybagRequiredForDescriptor:]_block_invoke
-[SUManagerClient destroyInstallationKeybag]
-[SUManagerClient destroyInstallationKeybag]_block_invoke
-[SUManagerClient slaVersion:]
-[SUManagerClient slaVersion:]_block_invoke
-[SUManagerClient softwareUpdatePathRestriction:]
-[SUManagerClient softwareUpdatePathRestriction:]_block_invoke
-[SUManagerClient isDelayingUpdates:]
-[SUManagerClient isDelayingUpdates:]_block_invoke
-[SUManagerClient delayEndDate:]
-[SUManagerClient delayEndDate:]_block_invoke
v24@?0@"NSDate"8@"NSError"16
-[SUManagerClient setMandatorySoftwareUpdateDictionary:]
-[SUManagerClient setMandatorySoftwareUpdateDictionary:]_block_invoke
-[SUManagerClient getMandatorySoftwareUpdateDictionary:]
-[SUManagerClient getMandatorySoftwareUpdateDictionary:]_block_invoke
v24@?0@"NSDictionary"8@"NSError"16
-[SUManagerClient enableAutomaticUpdateV2:]
-[SUManagerClient enableAutomaticUpdateV2:]_block_invoke
-[SUManagerClient isAutomaticUpdateV2Enabled]
-[SUManagerClient isAutomaticUpdateV2Enabled]_block_invoke
-[SUManagerClient enableAutomaticDownload:]
-[SUManagerClient enableAutomaticDownload:]_block_invoke
-[SUManagerClient isAutomaticDownloadEnabled]
-[SUManagerClient isAutomaticDownloadEnabled]_block_invoke
-[SUManagerClient _registerAutoInstallOperationClientHandler:]
-[SUManagerClient _unregisterAutoInstallOperationClientHandler:]
-[SUManagerClient _consentAutoInstallOperation:withResult:]
-[SUManagerClient _consentAutoInstallOperation:withResult:]_block_invoke
-[SUManagerClient _cancelAutoInstallOperation:withResult:]
-[SUManagerClient _cancelAutoInstallOperation:withResult:]_block_invoke
-[SUManagerClient installServerConfiguration]
-[SUManagerClient installServerConfiguration]_block_invoke
-[SUManagerClient setExclusiveControl:]
-[SUManagerClient setExclusiveControl:]_block_invoke
-[SUManagerClient scheduleDateActivity:]
-[SUManagerClient scheduleDateActivity:]_block_invoke
-[SUManagerClient recordSUAnalyticsEvent:]
-[SUManagerClient submitSUAnalyticsEvent:]
-[SUManagerClient submitAllSUAnalyticsEvents]
-[SUManagerClient submitSUAnalyticsEventsWithName:]
SUManagerClient.m
installationConstraintObserverDidRemoveAllObserverBlocks: %@: observers: %@
Download changed
Client <%p>: establishing connection to softwareupdateservicesd.
Client <%p>: softwareupdateservicesd exit detected.
Client <%p>: connection established to softwareupdateservicesd.
Client <%p>: disconnected from softwareupdateservicesd.
softwareupdateservicesd launch detected.
com.apple.softwareupdateservices.operationTaskQueue
com.apple.softwareupdateservices.appDemotionSettingQueue
com.apple.softwareupdateservices.mainWorkQueue
com.apple.softwareupdateservices.fastWorkQueue
cellular-data
contains-cellular-radio
SerialNumber
DeviceClass
DeviceName
Internal
SigningFuse
UserVisible
time
scheduledby
Event is scheduled before provided time
Event name: %@
Event time:  %@
invalid arguments
com.apple.donotdisturb.server
PersistentConnectionMaintenance
com.apple.softwareupdateservicesd.activity
Alarm %@ is on AutoInstall alarm blacklist. Ignoring alarm
Unknown MAError code: %ld
EnableSso
com.apple.MobileSoftwareUpdate
mobile
Insufficient space for update. Please free up space on the device and try again.
There was a networking error during the update attempt. Please verify your device has a valid network connection.
Failed to find a SU documentation asset.
The device found a malformed Software Update asset on the asset server.
Failed to prepare update.
Failed to prepare the update because a root is installed. Please try downloading again. The device will automatically try downloading a full replacement asset, which has the ability to prepare when a root is installed.
SU asset is corrupted. Please delete the update from settings and try downloading again.
Installing an internal build on a production fused device requires AppleConnect for personalization. Enable AppleConnect from:
 Settings > Internal Settings > Mobile Software Update > check Use AppleConnect.
Personalization failed. This build might not be nominated for installation yet. Please try installing again later.
Failed to download the Software Update catalog from the internal asset server. Please verify that the device is connected to an internal network or VPN and try again.
Failed to query MobileAsset for Software Update asset. Please try again.
MobileAsset software update download failure.
MobileAsset XPC failure.
MobileAsset staging failure.
MobileAsset data processing failure.
MobileAsset unzip failure.
MobileAsset file move failure.
MobileAsset asset install failure.
mobileassetd exited.
StreamingZip extraction error.
Missing MobileAsset entitlement.
mobileassetd daemon not ready to download. Please try again in a moment.
Failed to load the update brain. Please try again.
Download not allowable.
Missing installation Keybag.
DAS failed to run auto install activity.
No update found.
Remote connection lost.
Unknown Error.
No Error.
client is not authorised, SoftwareUpdateServicesd is in exclusive mode
/System/Library/PrivateFrameworks/SoftwareUpdateServices.framework
SoftwareUpdateServices
failed to display notification: %ld
failed to get response from CFUserNotification: %ld
Unexpected response from CFUserNotification %d
Sytem partition growth = %llu bytes
OffloadUnusedApps
com.apple.appstored
addToDate:numberOfDays: unable to add %ld days to date: %f
System container path is %s
failed to exclude system container from backup
Error getting system container: %llu
/var/mobile/Library/SoftwareUpdate/susdKeepAlive
Successfully wrote keep alive file
Failed to write keep alive file
No keep alive file found
Successfully deleted keep alive file
Failed to delete keep alive file
Delete error: %@
queryAssetsForType(%@) - error %@
q24@?0@8@16
%@ IN %K OR %K == NULL
Deleting %@ from MAV1 path
com.apple.MobileAsset.VoiceServices.CustomVoice
com.apple.MobileAsset.VoiceServicesVocalizerVoice
com.apple.MobileAsset.VoiceServices.GryphonVoice
Disabling Splat due to MDM Preferences
Disabling Splat scan due to SUPreference value
Disabling Splat rollback due to MDM Preferences
Disabling Splat rollback due to SUPreference value
Splat-only update not installed. Unable to rollback update
Splat-only update installed, but new update available. Preventing rollback
Splat Rollback disabled by preferences
update_icon
update_fullWidth
images
baseDocumentationURL
releaseNotesSummaryFileName
releaseNotesFileName
licenseAgreementFileName
slaVersionNumber
iconImageName
Failed to load update icon bundle at URL: %@
PreferencesIcon
Failed to load update icon bundle with name: %@/%@
Successfully loaded update icon bundle with name: %@/%@
ReadMeSummary
ReadMe
License
            
hasReadMeSummary: %@
            
hasReadMe: %@
            
hasLicenseAgreement: %@
            
hasIconImageName: %@
            
hasIconImage: %@
            
humanReadableUpdateName: %@
documentation.strings
html
HumanReadableUpdateName
Failed to find file in documentation bundle: %@
__NULL__
progress
downloadOptions
            Descriptor: %@
            DownloadOptions: %@
            Progress: %@
cancelActiveUpdate
promptForConsent
promptForPasscode
        RollbackOptions:
            CancelCurrentUpdate:%@
                promptForConsent:%@
                promptForPasscode:%@
isAutoDownload
isDownloadOnly
activeDownloadPolicy
enabledFor2G
enabledFor3G
enabledFor4G
enabledForWifi
enabledOnBatteryPower
enforceWifiOnlyOverride
downloadFeeAgreementStatus
termsAndConditionsAgreementStatus
enabledForCellularRoaming
            
isAutoDownload: %@
            
isDownloadOnly: %@
            
activeDownloadPolicyType: %@
            
isEnabledFor2G: %@
            
isEnabledFor3G: %@
            
isEnabledFor4G: %@
            
isEnabledForCellularRoaming: %@
            
isEnabledForWifi: %@
            
isEnabledOnBatteryPower: %@
            
enforceWifiOnlyOverride: %@
            
DownloadFeeAgreementStatus: %d
            
TermsAndConditionsAgreementStatus: %d
com.apple.SoftwareUpdateServices.CTDataDelegate
%s: %@
-[CTDataDelegate getPreferredDataSubscriptionContext]_block_invoke
SoftwareUpdateOptInRequired
AllowDownloadOverCellular
AllowDownloadOver2G
DaysToWaitForCellularDownload
AllowAutomaticDownloadOverCellular
MaxBytesOverCellular
PeakStartTime
PeakEndTime
AllowEnhancedDownloadOnNRHDM
OTASoftwareUpdate
Failed to get preferred CTXPCServiceSubscriptionContext
SUDownloadPolicy <%p>:
            
isDownloadFree: %@
            
isDownloadAllowable: %@
            
isDownloadAllowableOver2G: %@
            
isAutoDownloadAllowable: %@
            
maximumDownloadSizeInBytes: %llu
            
numberOfDaysToWaitForCellularDownload: %lu
            
peakStartHour: %ld
            
peakEndHour: %ld
            
AllowEnhancedDownloadOnNRHDM: %@
InternalBuild
AUTO_SU_FAILED_BODY_DEFAULT
UNMET_CONSTRAINT_NO_NETWORK
UNMET_CONSTRAINT_INSUFFICIENT_SPACE
UNMET_CONSTRAINT_LOW_BATTERY
UNMET_CONSTRAINT_ICLOUD_RESTORE
UNMET_CONSTRAINT_KEYBAG_MISSING
UNMET_CONSTRAINT_DEVICE_LOCKED
DEVICE
SOFTWARE_UPDATE
AUTO_SU_FAILED_HEADER
AUTO_SU_FAILED_BODY_KEYBAG_COMMIT
AUTO_SU_FAILED_BODY_ALARM
AUTO_SU_FAILED_BODY_UNPLUGGED
AUTO_SU_FAILED_BODY_ERROR_CODE_AND_STRING
[Internal Only]
failed to create alert message header
failed to create alert message body
Posting install tonight failure notification with error: %@
com.apple.softwareupdateservices.coreTelephonyQueue
Initializing primary network type: %@
Initializing cellular type: %@
deallocating SUNetworkMonitor
Failed to get network path evaluator
SUNetworkMonitor.m
Network type changed from:%@ to:%@
Cellular type changed from:%@ to:%@
nodename
www.apple.com
ResolverBypass
Received _networkReachabilityCallback: %x
Refreshing network type with flags: %x
Refreshing cellular type
https://www.apple.com
Failed to create nw_endpoint_t
Failed to create nw_path_evaluator_t
Failed to create nw_path_t
CoreTelephony returned error from getDataStatus: %@
Attempting to reestablish connection and query current data type
CoreTelephony returned error from getDataStatus after reconnection: %@
getInternetDataStatusSync: returned nil CTDataStatus
Error getting internet data status: %@
Determining network type from cellular data indicator: %d
Unable to determine network type from cellular data indicator: %d
Error getting current data service descriptor: %@
Failed to get international data status: %@
Error copying data subscription context: %@
Error copying registration status: %@
Received delegate callback: %s:
-[SUNetworkMonitor displayStatusChanged:status:]_block_invoke
-[SUNetworkMonitor operatorBundleChange:]_block_invoke
-[SUNetworkMonitor carrierBundleChange:]_block_invoke
-[SUNetworkMonitor internetDataStatus:]_block_invoke
com.apple.SoftwareUpdate.EmbeddedSoftwareUpdateUsage
UserInteractionType
DaysSinceLastUpdate
PreferredPaneDownloadOnlyTapped
AlternatePaneDownloadOnlyTapped
PreferredPaneDownloadAndInstallTonightTapped
AlternatePaneDownloadAndInstallTonightTapped
PreferredPaneDownloadAndInstallNowTapped
AlternatePaneDownloadAndInstallNowTapped
PreferredPaneOpenStorageTapped
AlternatePaneOpenStorageTapped
PreferredPaneLearnMoreTapped
AlternatePaneLearnMoreTapped
PreferredPaneInstallNowTapped
AlternatePaneInstallNowTapped
PreferredPaneInstallLaterTapped
AlternatePaneInstallLaterTapped
AutoUpdateSwitchToggledOn
AutoUpdateSwitchToggledOff
CurrentAutoUpdateStatus
AutoInstallSystemDataFilesSwitchToggledOn
AutoInstallSystemDataFilesSwitchToggledOff
CurrentAutoInstallSystemDataFilesStatus
AutoDownloadSwitchToggledOn
AutoDownloadSwitchToggledOff
AutoUpdatesDisabledFromSheet
AutoUpdatesCanceledFromSheet
AutoUpdateSheetDismissed
UpdateDeletedFromUI
analyticsEventName
analyticsEventUUID
analyticsEventPayload
com.apple.SUServices.CoreAnalyticsEventQueue
invalid key passed to setEventPayloadEntry
invalid key/numberValue passed to setEventPayloadEntry
invalid key/stringValue passed to setEventPayloadEntry
invalid key passed to setEventPayloadEntrytoNull
invalid key passed to removePayloadEntry
EventName: %@ EventUUID: %@ EventPayload: %@
Carrier SU download policy: %@
<%@>
            
isDownloadable: %@
            
CellularDownloadFree: %@
            
CellularDownloadAllowable: %@
            
CellularDownloadAllowableOver2G: %@
            
CellularDownloadAllowableWhileRoaming: %@
            
WiFiDownloadAllowable: %@
Unable to create space options for null descriptor
Unable to determine sufficient space with null space options
Cellular download not allowable due to SU asset configuration
Cellular download not allowed because device is not cellular capable
Cellular download not allowed because cellular data not enabled for device
Cellular download not allowed because we have no carrier policy
Cellular download not allowed because carrier policy prevents cellular download
Cellular download not allowed because cellular fee agreement declined
Network type is inexpensive HDM. SU download allowed
Cellular download not allowed because wifi-only days unmet. Discovery date: %@ Current date: %@ DaysToWait: %lu
Cellular download not allowed because unknown update discovery date
Cellular download not allowed because update is larger than carrier maximum download size
%s preventing download on expensive network
-[SUDefaultDownloadPolicy _isDownloadableForNetworkType:error:cellularFeesApply:powerRequired:]
q24@?0q8q16
Device does not currently fall within 5G HDM policy: Network type: %@ NWPath isExpensive: %@
Tonight
TomorrowNight
Later
AutoInstallForecast <%p> :
            unlockStart = %@
            unlockEnd = %@
            suStart = %@
            suEnd = %@
            firstUnlock = %@
            _scheduleType = %@
UnlockStart
UnlockEnd
SUStart
SUEnd
firstUnlock
SUAutoDownloadWiFiPeriodDidEndNotification
Cellular download not allowable due to SUAutoDownloadPolicy
Expensive network download not allowable due to SUAutoDownloadPolicy
DISK_SPACE_HEADER
APP_DEMOTION_BODY
DISK_SPACE_DEFAULT
CANCEL_BUTTON
InstallOptions
darkBootKey
requiredKey
managedKey
skipActivationCheck
clientNameKey
ignorableConstraintsKey
            ClientName: %@
            DarkBoot: %@
            isManaged: %@
            skipActivationCheck: %@
            Installation required: %@
            IgnorableConstraints: %@
scanOptions
Delay window is outside of valid range. Setting MDM delay window to 0
Using override SUMDMSoftwareUpdatePath: %@
Using requestedPMV set in SUS defaults: %@
            RequestedProductMarketingVersion: %@
            UseDelayPeriod: %@
            Preferred Descriptor: %@
            Alternate Descriptor: %@
PreferredDescriptor
AlternateDescriptor
SUPreferencesChangedNotification
SUPreferencesChangedNotificationAutoUpdate
SUAutomaticUpdateV2Enabled
com.apple.softwareupdateservices.preferencesWorkLoop
SUUpdateRequiredFromFactory
Sets mandatory update dictionary value SUMandatoryUpdateRequiredFromFactory
SUCheckForUpdateFromFactory
Sets mandatory update dictionary value SUMandatoryUpdateCheckForUpdateFromFactory
SUUpdateRequiredOnErase
Sets mandatory update dictionary value SUMandatoryUpdateRequiredOnErase
SUCheckForUpdateOnErase
Sets mandatory update dictionary value SUMandatoryUpdateCheckForUpdateOnErase
SUDisableManagedRequest
Disables managed update requests
SUDisableUserWiFiOnlyPeriod
Disables wifi-only download period, allowing cellular download immediately
SUDisableBuildNumberComparison
Disables build version number comparison
SUAllowSameBuildUpdates
Allows device to update to the same build version as currently installed version
SUDisableAvailabilityAlerts
Disabled SU availability alerts
SUDisableAutoDownload
Disabled automatic downloads of software update assets
SUScanWeeklyInternally
Changes the auto scan interval to once a week for internal builds
SUForceFullReplacement
Forces the device to only return full replacement update assets
SUDisbaleFullReplacementFallback
Disabled full replacement fallback if prepare fails with patching error
SUUpdateDelayInterval
Sets the managed update delay period to specified number of days. Requires SUShouldDelayUpdates = true
SUDelayInMinutes
Sets the managed update delay period interval to be in minutes instead of days
SUShouldDelayUpdates
Enables managed update delay period
SUUnmetConstraints
Simulates unmet installation constraints
SURequestedPMV
Simulates an MDM administrator pushing a requested product marketing version
SUAutoUpdateForceOn
Forces the auto install setting ON for client option and asset attribute
SUAutoUpdateForceOff
Forces the auto install setting OFF for client option and asset attribute
SUAutoSUStartDelta
Sets automatic installation start time to N seconds after prepare completes.
SUAutoSUEndDelta
Sets automatic installation end time to N seconds after prepare completes
SUAutoSUUnlockStartDelta
Sets automatic installation unlock start time to N seconds after prepare completes
SUAutoSUUnlockEndDelta
Sets automatic installation unlock end time to N seconds after prepare completes
Enables/Disabled automatic update client setting
SUBannerDelay
Sets the delay value in seconds for presenting auto update banner (30 minutes by default)
SUAutoDownloadDeletedBuild
Enabled auto download of deleted builds
SUMDMSoftwareUpdatePath
Sets the MDM user initiated scan SU path
0 = Default
1 = slow lane
2 = fast lane
SUAnalyticsSubmissionInterval
Sets the time interval(in minutes) for the submission of Analytics events
SUQueryCustomerBuilds
If set to true, MobileAsset query for SU, brain and doc asset will have NULL ReleaseType
SUDisableRollback
Disabled Splat rollback
SUUseEmptyPatches
If set to true, MobileAsset query for SU, brain and doc asset will use "Empty" ReleaseType
SUAllowSplatUpdate
Allow Splat software updates
SUAllowSameSplatUpdate
Allow updating Splat to the same version as currently installed splat
SUSplatScanInterval
Auto-scan interval for splat updates
SUAutoInstallSystemDataFilesForceOn
Forces the auto install system and data files setting ON for client option and asset attribute
SUAutoInstallSystemDataFilesForceOff
Forces the auto install system and data files setting OFF for client option and asset attribute
SUAutoInstallSystemDataFiles
Auto install system and data files
Unknown SUPreferenceType for key: %@ type:%ld
%s: posting change notification... Key: %@: enabled: %@
-[SUPreferences _setBooleanPreferenceForKey:value:]
%s: posting change notification... Key: %@: Value: %@
-[SUPreferences _setObjectPreferenceForKey:value:]
Unable to enabled auto update while auto download is disabled
Setting auto install system and data files to %@
enabled
disabled
RegionCode
Failed to copy region code: %d
delay interval is outside 1-90 day range. Defaulting to %d day delay interval
isDelayed:%d delayedStartDate: %@ delayedEndDate: %@
isDelayedKey
delayedStartDateKey
delayedPeriod
Failed to create copy of SUManagedDeviceUpdateDelay
/System/Library/PrivateFrameworks/CarKit.framework/CarKit
Failed to open CarKit dylib
CARSessionStatus
Failed to get class CARSessionStatus
dynamically loaded CARSessionStatus class does not respond to selector initAndWaitUntilSessionUpdated
dynamically loaded CARSessionStatus class does not respond to selector alloc
Failed to dynamically load CARSessionStatus. Setting carplay enabled to NO
Cellular download not allowable due to SUDefaultWiFiOnlyDownloadPolicy
Expensive network download not allowable due to SUDefaultWiFiOnlyDownloadPolicy
Installation alert predicate conditions met
com.apple.softwareupdateservicesd.installAlert
self.%@.value >= %@
Failed to create battery level _CDContextualPredicate
Failed to create carplay _CDContextualPredicate
%@ - network constraint changed (satisfied? %@)
%@ - iTunes sync constraint changed (satisfied? %@)
%{public}@
%@ - iTunes restore constraint changed (satisfied? %@)
%@ - iCloud restore constraint changed (satisfied? %@)
%@ - is driving constraint changed (satisfied? %@)
[Token] Create: %@
[Token] Dealloc: %@
[Token] Invalidate: %@
[InstallationConstraintObserver] Create: %@ (unsatisfied constraints: %@)
[InstallationConstraintObserver] Dealloc: %@
[InstallationConstraintObserver] Invalidate: %@
%@ - unsatisfied constraints changed (unsatisfied? %@)
%@ - media playing constraint changed (satisfied? %@)
No KeybagInterface instance provided to SUInstallationConstraintMonitorForBatteryDiskAndKeybag initializer
%@ - timer scheduled for interval @ %f s
%@ - timer fired @ %f s
%@ - timer invalidated
%@ - evaluating constraints for disk/battery/passcode/keybag
%@ - exception caught: %@
%@ - battery constraint changed (satisfied? %@)
evaluateDisk: download: (%p)
%@ - disk constraint changed (satisfied? %@)
%@ - passcode constraint changed (satisfied? %@)
%@ - keybag constraint changed (satisfied? %@)
%@ - phone call constraint changed (satisfied? %@)
%@ - carplay constraint changed (satisfied? %@)
SUSFollowUpController
SUAssetStateMatcher
SUAssetMatcher
NSObject
SUSFollowUpUpdateAvailable
SUSFollowUpRollbackDetected
SUComposedInstallationConstraintMonitor
SUInstallationConstraintMonitorDelegate
SUInstallationConstraintMonitor
SUSoftwareUpdateAssetMatcher
SUAutoUpdatePasscodePolicy
_SUAutoInstallOperationModel
NSSecureCoding
NSCoding
NSCopying
SUPurgeOptions
SUManifestBuilder
SUDocumentationAssetMatcher
SUAssetSupport
SUDownloadOptions
SUDocumentationData
SUSpacePurgeOptions
SUInstallationConstraintMonitorNetwork
SUNetworkObserver
SUSFollowUp
SUOptionsBase
SUSpaceCheckResults
SUSpace
SUInstallationConstraintMonitorSync
SUScanOptions
SUAutoInstallOperation
SUAutoInstallOperationClientHandler
SUOperationProgress
SUInstallationConstraintMonitorRestoreFromITunes
SUInstallationConstraintMonitorRestoreFromICloud
SUEmptyObject
SUState
NSKeyedUnarchiverDelegate
SUInstallationConstraintMonitorDriving
_SUInstallationConstraintBlockObserverToken
SUInvalidatable
SUInstallationConstraintObserver
SUUpdateDiscoveryDateManager
SUInstallationConstraintMonitorMediaPlaying
SUSFollowUpAutoUpdate
SUInstallPolicy
SUInstallationConstraintMonitorBase
SUKeybagPreventLockAssertion
BSInvalidatable
SUKeybagInterface
SUKeybagOptions
_SUAutoInstallForecastDateCache
SUInstallationConstraintMonitorForBatteryDiskAndKeybag
SUKeybagInterfaceObserver
SURollbackDescriptor
SUPluginLoader
SUDescriptor
SUDefaultCellCarrierOverrideDownloadPolicy
SUManagerServerInterface
SUManagerClientInterface
SUManagerClient
SUInstallationConstraintObserverDelegate
SUPreferencesObserver
SUPreferenceEntry
SUUtility
SUDocumentation
SUDownload
SURollbackOptions
SUDownloadMetadata
NSMutableCopying
SUMutableDownloadMetadata
CTDataDelegate
CoreTelephonyClientDataDelegate
SUCarrierDownloadPolicyProperties
SUAutoInstallFailureNotification
SUNetworkMonitor
CoreTelephonyClientRegistrationDelegate
CoreTelephonyClientCarrierBundleDelegate
SUAnalyticsEvent
SUDownloadPolicy
SUDefaultDownloadPolicy
SUAutoInstallForecast
SUInstallationConstraintMonitorPhoneCalls
SUAutoDownloadPolicy
SUAppPurgingNotification
SUDownloadPolicyFactory
SUInstallOptions
SUMDMScanOptions
SUScanResults
SUSFollowUpBadgeOnly
SUPreferences
SUManagedDeviceUpdateDelay
SUInstallationConstraintMonitorCarplay
CARSessionObserving
SUDefaultWiFiOnlyDownloadPolicy
SUCSScheduler
SUDefaultRoamingRestrictedDownloadPolicy
init
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
copy
initWithArray:
_matchesFilterType:
addObject:
enumerateObjectsUsingBlock:
_findMatchFromCandidates:error:
_modifyMADownloadOptions:
count
objectAtIndex:
state
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
findMatchFromCandidates:error:
modifyMADownloadOptions:
assetType
matcherInfo
T@"NSString",R,N
T@"NSDictionary",R,N
initWithType:interestedStates:
interestedStates
_assetType
_interestedStates
_matcherInfo
T@"NSString",R,N,V_assetType
Ti,R,N,V_interestedStates
T@"NSDictionary",R,N,V_matcherInfo
countByEnumeratingWithState:objects:count:
representedConstraints
setDelegate:
dealloc
_queue_setDelegate:
_queue_unsatisfiedConstraints
_queue_unsatisfiedConstraintsWithIgnorableConstraints:
unsatisfiedConstraints
installationConstraintMonitor:constraintsDidChange:
_queue_noteInstallationConstraintMonitor:constraintsDidChange:
isSatisfied
unsatisfiedConstraintsWithIgnorableConstraints:
delegate
T@"<SUInstallationConstraintMonitorDelegate>",N
TQ,R,N
initWithInternalQueue:withInstallationConstraintMonitors:
_queue_delegate
_queue_clearDelegate
_queue_representedConstraints
_queue_invalidateChildConstraintMonitors
constraintMonitors
.cxx_destruct
_queue
_queue_installationConstraintMonitors
T@"NSSet",R,&,N,V_queue_installationConstraintMonitors
compare:options:
compareNumerically:
matcherForCurrentDeviceWithInterestedStates:
currentProductVersion
currentProductBuild
currentProductType
currentReleaseType
initWithVersion:build:productType:releaseType:interestedStates:matcherInfo:
sharedInstance
_isPossibleSoftwareUpdate:
_isDeviceEligibleForUpdate:
_copyMatchingAssetsAfterSortingAndFiltering:
assignError:withCode:
array
attributes
setTimeoutIntervalForResource:
setDiscretionary:
setAllowsCellularAccess:
setAllowsExpensiveAccess:
sharedConnection
isSupervised
setSupervised:
objectForKey:
setRequestedProductVersion:
longValue
setDelayPeriod:
additionalServerParams
dictionary
setAdditionalServerParams:
setObject:forKey:
length
rangeOfString:options:range:
stringByReplacingCharactersInRange:withString:
safeObjectForKey:ofClass:
compare:
_createCleanOSVersionString:
_getIndexOfHighestVersionedAsset:usingFirstKey:secondKey:
_filterPatchesIfNecessary:
_createSortedAndFilteredAssetResults:usingFirstKey:secondKey:
currentState
mutableCopy
disableFullReplacementFallback
failedPatchDescriptors
productBuildVersion
removeObject:
disableBuildNumberComparison
allowSameBuildUpdates
containsObject:
matcherForCurrentDevice
matcherForCurrentDeviceWithInfo:
fromBuild
fromVersion
fromProductType
fromReleaseType
compareWithTatsuForEligibility
setCompareWithTatsuForEligibility:
preferences
setPreferences:
_fromBuild
_fromVersion
_fromProductType
_fromReleaseType
_checkTatsu
_preferences
T@"SUPreferences",&,N,V_preferences
T@"NSString",R,N,V_fromVersion
T@"NSString",R,N,V_fromBuild
T@"NSString",R,N,V_fromProductType
T@"NSString",R,N,V_fromReleaseType
TB,N,V_checkTatsu
hashTableWithOptions:
setCurrentPolicyType:
_init
currentPolicyType
_isValidPasscodePolicyType:
allObjects
passcodePolicyInterface:passcodePolicyTypeChanged:
stringWithFormat:
stringForCurrentPolicy
addObserver:
removeObserver:
_queue_observers
_observerCalloutQueue
_stateChangedNotifyToken
_queue_currentPolicyType
UUID
UUIDString
decodeObjectOfClass:forKey:
setForecast:
decodeIntForKey:
setAgreementStatus:
setId:
forecast
encodeObject:forKey:
agreementStatus
encodeInt:forKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
copyWithZone:
_forecast
_agreementStatus
T@"NSUUID",&,N,V_id
T@"SUAutoInstallForecast",&,N,V_forecast
Ti,N,V_agreementStatus
decodeBoolForKey:
setNotifyUser:
setUserRequested:
notifyUser
encodeBool:forKey:
userRequested
_notifyUser
_userRequested
TB,N,V_notifyUser
TB,N,V_userRequested
manifestFromDescriptor:
initWithSoftwareUpdateAsset:limitingToStates:
initWithSoftwareUpdateAsset:
_sortedMatcherPredicatesFromSoftwareUpdateAsset:
evaluateWithObject:
predicateFormat
errorWithCode:
currentProductCategory
dictionaryWithObjectsAndKeys:
predicateWithFormat:
enumerateKeysAndObjectsUsingBlock:
andPredicateWithSubpredicates:
currentDeviceName
setValue:forKey:
_queryPredicateForProperties:
matcherForInstalledDocumentationFromAsset:
matcherDocumentationFromAsset:
_suAsset
assetId
setProductVersion:
setProductBuildVersion:
setProductSystemName:
setReleaseType:
setPublisher:
boolValue
setDownloadable:
setAutoDownloadAllowableForCellular:
setDownloadableOverCellular:
unsignedLongLongValue
setDownloadSize:
_setUnarchiveSize:
setMinimumSystemPartitionSize:
_setStreamingZipCapable:
_setDisableSiriVoiceDeletion:
_setDisableCDLevel4:
_setDisableAppDemotion:
_setDisableInstallTonight:
setRampEnabled:
setAutoUpdateEnabled:
setSystemPartitionPadding:
setSEPDigest:
setRSEPDigest:
setSEPTBMDigest:
initWithBase64EncodedString:options:
setRSEPTBMDigest:
setReleaseDate:
setDateFormat:
initWithLocaleIdentifier:
setLocale:
dateFromString:
setMdmDelayInterval:
setSetupCritical:
setCriticalDownloadPolicy:
setCriticalOutOfBoxOnly:
setPrerequisiteBuild:
setPrerequisiteOS:
setHideInstallAlert:
isEqualToString:
productVersion
updateIsPreCRelease:
setAssetID:
_setMsuPrepareSize:
setInstallationSize:
isEmergencyUpdate
setUpdateType:
getLocalUrl
setBaseDocumentationURL:
setReleaseNotesSummaryFileName:
setReleaseNotesFileName:
setLicenseAgreementFileName:
setSlaVersion:
initWithType:
returnTypes:
setDoNotBlockBeforeFirstUnlock:
queryMetaDataSync
results
purgeSync
taskQueue
_queue_cleanupAllInstalledAssetsOfType:
setSUFilters:
cleanupAsset
_cleanupAllAssetsOfType:
purgeV1SUAssets
findAssetWithMatcher:localSearch:releaseDate:error:
_gestaltValueForKey:
null
forceFullReplacement
arrayWithObjects:
arrayWithObject:
dictionaryWithObjects:forKeys:count:
allKeys
addKeyValueArray:with:
queryInstalledAssetIds
assetIds
requestCatalogDownload:
assignError:withError:translate:
augmentResultsWithState:
setAssetQueryFilters:
postedDate
date
assetProperty:
prerequisiteBuild
prerequisiteOS
valueForKey:
assetID
findExactMatchInAssets:forAssetId:
firstObject
releaseType
queryMetaDataOfType:WithFilter:installedOnly:error:
filterSuAssets:MatchingDescriptor:
copySuAssetInCatalogMatchingDescriptor:exactAssetIdMatch:installedOnly:
addKeyValuePair:with:
getLocalDefaultSoftwareUpdateAssetIfExistsWithReleaseDate:
findAssetWithMatcher:localSearch:error:
defaultAssetDownloadOptionsWithPriority:
numberWithBool:
isCellularDataRoamingEnabled
isEnabledForWifi
isEnabledFor2G
isEnabledFor3G
isEnabledFor4G
isEnabledOnBatteryPower
isEnabledForCellularRoaming
minorOSVersion:
OSVersionComponent:osVersion:
componentsSeparatedByString:
objectAtIndexedSubscript:
setNumberStyle:
numberFromString:
tryCreateDescriptorFromSoftwareUpdateAsset:withReleaseDate:
tryCreateDocumentationFromDocumentationAsset:
cleanupAllInstalledAssets:
cleanupAllSoftwareUpdateAssets
cleanupAllSoftwareUpdateAndRelatedAssets
copySUAssetForAssetID:
copyInstalledAssets
copySuAssetInCatalogMatchingDescriptor:
copySuAssetInstalledExactlyMatchingDescriptor:
purgeMSUUpdate:
getLocalDefaultSoftwareUpdateAssetIfExists
getInstalledDocumentationAssetFromSoftwareUpdateAssetIfExists:
assetDownloadOptionsForDocumentation
assetDownloadOptionsFromMetadata:descriptor:priority:forBrain:
refreshState
isDownloading
cancelDownload:
cancelDownloadIfNecessary
isInstalled
purge:
isDownloadingOrInstalled
cancelDownload
purge
initWithDescriptor:
isDownloadOnly
isAutoDownload
downloadFeeAgreementStatus
termsAndConditionsAgreementStatus
activeDownloadPolicyType
downloadPolicyForType:forDescriptor:
setCellularFeeAgreementStatus:
activeDownloadPolicy
downloadPolicyTypeForClass:
cellularFeeAgreementStatus
isDownloadAllowableForCellular
isDownloadFreeForCellular
is5GDownloadAllowed
allowExpensiveNetwork
allowCellular
isDownloadAllowableForCellularRoaming
isDownloadAllowableForWiFi
isPowerRequired
descriptor
cdLevel4Disabled
appDemotionDisabled
allowUnrestrictedCellularDownload
setDownloadOnly:
setAutoDownload:
setAllowUnrestrictedCellularDownload:
setDownloadFeeAgreementStatus:
setTermsAndConditionsAgreementStatus:
setDownloadDescriptor:
setActiveDownloadPolicyType:
allowsUnrestrictedCellularDownload
isEnabledForCellular
initWithMetadata:andDescriptor:
setActiveDownloadPolicy:
isEnabledForExpensiveNetwork
isCacheDeleteSpecialCaseEnabled
isAppOffloadEnabled
downloadDescriptor
_downloadOnly
_autoDownload
_allowUnrestrictedCellularDownload
_downloadFeeAgreementStatus
_termsAndConditionsAgreementStatus
_descriptor
_activeDownloadPolicyType
_stateQueue
_downloadDescriptor
T@"SUDescriptor",&,N,V_downloadDescriptor
downloadOnly
TB,N,GisDownloadOnly,V_downloadOnly
autoDownload
TB,N,GisAutoDownload,V_autoDownload
Ti,N,V_downloadFeeAgreementStatus
Ti,N,V_termsAndConditionsAgreementStatus
Ti,N
T@"<SUDownloadPolicy>",&,N
TB,N,V_allowUnrestrictedCellularDownload
T@"SUDescriptor",R,&,N,V_descriptor
enabledForCellular
TB,R,N,GisEnabledForCellular
enabledForWifi
TB,R,N,GisEnabledForWifi
enabledOnBatteryPower
TB,R,N,GisEnabledOnBatteryPower
enabledForCellularRoaming
TB,R,N,GisEnabledForCellularRoaming
enabledForExpensiveNetwork
TB,R,N,GisEnabledForExpensiveNetwork
cacheDeleteSpecialCaseEnabled
TB,R,N,GisCacheDeleteSpecialCaseEnabled
appOffloadEnabled
TB,R,N,GisAppOffloadEnabled
buildVersion
setBuildVersion:
humanReadableUpdateName
setHumanReadableUpdateName:
readme
setReadme:
readmeSummary
setReadmeSummary:
license
setLicense:
_buildVersion
_humanReadableUpdateName
_readme
_readmeSummary
_license
T@"NSString",&,N,V_buildVersion
T@"NSString",&,N,V_humanReadableUpdateName
T@"NSData",&,N,V_readme
T@"NSData",&,N,V_readmeSummary
T@"NSData",&,N,V_license
decodeInt64ForKey:
setNeededBytes:
setEnableCacheDelete:
setEnableAppOffload:
setCacheDeleteUrgency:
decodeIntegerForKey:
setAppOffloadUrgency:
setCacheDeleteVolume:
setAppOffloadVolume:
encodeInt64:forKey:
encodeInteger:forKey:
setCompletionQueue:
completionQueue
neededBytes
enableCacheDelete
enableAppOffload
cacheDeleteUrgency
appOffloadUrgency
cacheDeleteVolume
appOffloadVolume
_completionQueue
_neededBytes
_enableCacheDelete
_enableAppOffload
_cacheDeleteVolume
_appOffloadVolume
_cacheDeleteUrgency
_appOffloadUrgency
T@"NSObject<OS_dispatch_queue>",&,N,V_completionQueue
TQ,N,V_neededBytes
TB,N,V_enableCacheDelete
T@"NSString",&,N,V_cacheDeleteVolume
Ti,N,V_cacheDeleteUrgency
TB,N,V_enableAppOffload
T@"NSString",&,N,V_appOffloadVolume
Tq,N,V_appOffloadUrgency
initOnQueue:withDownload:networkMonitor:
initOnQueue:withRepresentedInstallationConstraints:andDownload:
_queue_networkDidChange
currentNetworkType
cellularChangedFromCellularType:toCellularType:
networkChangedFromNetworkType:toNetworkType:
cellularRoamingStatusChanged:
carrierBundleChanged
operatorBundleChanged
initOnQueue:withDownload:
_queue_networkMonitor
_queue_hasNetwork
hasSufficientFreeSpace
setHasSufficientFreeSpace:
needsCacheDelete
setNeedsCacheDelete:
needsAppOffload
setNeedsAppOffload:
additionalBytesRequired
setAdditionalBytesRequired:
_hasSufficientFreeSpace
_needsCacheDelete
_needsAppOffload
_additionalBytesRequired
TB,N,V_hasSufficientFreeSpace
TB,N,V_needsCacheDelete
TB,N,V_needsAppOffload
TQ,N,V_additionalBytesRequired
hasSufficientSpaceWithOptions:withCompletion:
makeRoomForUpdate:completion:
fileSystemRepresentation
hasSufficientSpaceWithOptions:error:
makeRoomForUpdate:error:
currentFreeSpaceForVolume:
_queue_setSyncing:
_queue_isSyncing
requestedPMV
setIdentifier:
setForced:
setWithObjects:
decodeObjectOfClasses:forKey:
setTypes:
setRequestedPMV:
setMDMUseDelayPeriod:
setSessionID:
types
numberWithInt:
containsType:
removeAllObjects
identifier
isForced
sessionID
MDMUseDelayPeriod
isSplatScan
addType:
removeType:
findsAnyUpdate
clearTypes
_identifier
_forced
_types
_requestedPMV
_MDMUseDelayPeriod
_sessionID
T@"NSSet",&,N,V_types
T@"NSString",&,N,V_identifier
forced
TB,N,GisForced,V_forced
T@"NSString",&,N,V_requestedPMV
TB,N,V_MDMUseDelayPeriod
T@"NSString",&,N,V_sessionID
longLongValue
intValue
_registerAutoInstallOperationClientHandler:
_initWithClient:clientOwned:id:forecast:agreementStatus:cancelled:expired:
invalidate
_consentAutoInstallOperation:withResult:
autoInstallOperationDidConsent:
_unregisterAutoInstallOperationClientHandler:
_cancelAutoInstallOperation:withResult:
autoInstallOperationWasCancelled:
appendString:
isExpired
_isEffectivelyScheduled
isCanceled
_isValidForScheduling
autoInstallOperationDidExpire:withError:
autoInstallOperationDidExpire:
autoInstallOperationIsReadyToInstall:withResponse:
errorWithDomain:code:userInfo:
autoInstallOperationPasscodePolicyDidChange:passcodePolicyType:
suEndDate
_isValidTillDate:
_isDateExpired:
laterDate:
uniqueIdentifier
_noteAutoInstallOperationWasCancelled
_noteAutoInstallOperationDidExpireWithError:
_noteAutoInstallOperationDidConsent
_noteAutoInstallOperationIsReadyToInstall:
_noteAutoInstallOperationPasscodePolicyChanged:
initWithAutoInstallOperationModel:client:
cancel
_client
_delegate
_canceled
_expired
_clientOwned
T@"<SUAutoInstallOperationDelegate>",N,V_delegate
T@"SUAutoInstallForecast",R,&,N,V_forecast
expired
TB,R,N,GisExpired,V_expired
canceled
TB,R,N,GisCanceled,V_canceled
T@"NSUUID",R,&,N,V_id
setPhase:
decodeFloatForKey:
setPercentComplete:
setNormalizedPercentComplete:
decodeDoubleForKey:
setTimeRemaining:
setIsDone:
phase
percentComplete
encodeFloat:forKey:
normalizedPercentComplete
timeRemaining
encodeDouble:forKey:
isDone
numberWithFloat:
localizedStringFromNumber:numberStyle:
_phase
_percentComplete
_normalizedPercentComplete
_timeRemaining
_isDone
T@"NSString",&,N,V_phase
Tf,N,V_percentComplete
Tf,N,V_normalizedPercentComplete
Td,N,V_timeRemaining
TB,N,V_isDone
initWithFormat:arguments:
UTF8String
_queue_beganRestoring
_queue_endedRestoring
_queue_setRestoring:
_queue_isRestoring
_queue_startNotifyToken
_queue_endNotifyToken
_queue_restoreStateChanged
_queue_restoreToken
systemContainerURL
path
load
setPreferredLastScannedDescriptor:
setAlternateLastScannedDescriptor:
setFailedPatchDescriptors:
setScheduledManualDownloadWifiPeriodEndTime:
setScheduledAutodownloadWifiPeriodEndTime:
setScheduledAutodownloadPolicyChangeTime:
setLastScanDate:
setAutodownloadNeedsOneTimeRetry:
setStashbagPersisted:
setLastDownload:
setLastAutoInstallOperationModel:
setUnlockCallbacks:
setMdmDelay:
setInstallPolicy:
setMandatoryUpdateDict:
setLastDeletedSUAssetID:
setLastAssetAudience:
setUpdateDiscoveryDates:
resetDownloadAndScanHistory
setLastProductVersion:
setLastProductBuild:
setLastProductType:
setLastReleaseType:
setAppliedTime:
setSafeObject:forKey:
lastDownload
preferredLastScannedDescriptor
alternateLastScannedDescriptor
scheduledManualDownloadWifiPeriodEndTime
localizedStringFromDate:dateStyle:timeStyle:
scheduledAutodownloadWifiPeriodEndTime
scheduledAutodownloadPolicyChangeTime
lastScanDate
autodownloadNeedsOneTimeRetry
stashbagPersisted
lastProductVersion
lastProductBuild
lastProductType
lastReleaseType
lastSplatRestoreVersion
lastAutoInstallOperationModel
mdmDelay
installPolicy
mandatoryUpdateDict
lastDeletedSUAssetID
lastAssetAudience
appliedTime
underExclusiveControl
updateDiscoveryDates
_queue_addFailedPatchDescriptor:
arrayWithArray:
removeObjectAtIndex:
dictionaryWithDictionary:
statePath
unarchiver:cannotDecodeObjectOfClassName:originalClasses:
unarchiver:didDecodeObject:
unarchiver:willReplaceObject:withObject:
unarchiverWillFinish:
unarchiverDidFinish:
resetAllHistory
_stateAsDictionary
save
persistFailedPatchDescriptors
loadPersistedFailedPatchDescriptors
lastScannedDescriptorScanOptions
addFailedPatchDescriptor:
unlockCallbacks
setUnderExclusiveControl:
setLastSplatRestoreVersion:
setLastScannedDescriptorScanOptions:
_lastDownload
_preferredLastScannedDescriptor
_alternateLastScannedDescriptor
_failedPatchDescriptors
_lastScannedDescriptorScanOptions
_scheduledManualDownloadWifiPeriodEndTime
_scheduledAutodownloadWifiPeriodEndTime
_scheduledAutodownloadPolicyChangeTime
_lastScanDate
_autodownloadNeedsOneTimeRetry
_stashbagPersisted
_lastProductVersion
_lastProductBuild
_lastProductType
_lastReleaseType
_lastSplatRestoreVersion
_unlockCallbacks
_mandatoryUpdateDict
_lastAutoInstallOperationModel
_mdmDelay
_installPolicy
_lastDeletedSUAssetID
_lastAssetAudience
_appliedTime
_updateDiscoveryDates
_underExclusiveControl
T@"_SUAutoInstallOperationModel",&,N,V_lastAutoInstallOperationModel
T@"SUDownload",C,N,V_lastDownload
T@"SUDescriptor",C,N,V_preferredLastScannedDescriptor
T@"SUDescriptor",C,N,V_alternateLastScannedDescriptor
T@"NSArray",C,N,V_failedPatchDescriptors
T@"SUScanOptions",&,N,V_lastScannedDescriptorScanOptions
T@"NSDate",&,N,V_scheduledManualDownloadWifiPeriodEndTime
T@"NSDate",&,N,V_scheduledAutodownloadWifiPeriodEndTime
T@"NSDate",&,N,V_scheduledAutodownloadPolicyChangeTime
T@"NSDate",&,N,V_lastScanDate
TB,N,V_autodownloadNeedsOneTimeRetry
TB,N,V_stashbagPersisted
T@"NSString",&,N,V_lastProductVersion
T@"NSString",&,N,V_lastProductBuild
T@"NSString",&,N,V_lastProductType
T@"NSString",&,N,V_lastReleaseType
T@"NSDictionary",&,N,V_unlockCallbacks
T@"NSDictionary",&,N,V_mandatoryUpdateDict
T@"SUManagedDeviceUpdateDelay",&,N,V_mdmDelay
T@"SUInstallPolicy",&,N,V_installPolicy
T@"NSString",&,N,V_lastDeletedSUAssetID
T@"NSString",&,N,V_lastAssetAudience
T@"NSDate",&,N,V_appliedTime
T@"NSDictionary",&,N,V_updateDiscoveryDates
TB,N,V_underExclusiveControl
T@"NSString",&,N,V_lastSplatRestoreVersion
isAvailable
defaultCenter
_handleVehicularStateChangeNotification:
addObserver:selector:name:object:
_queue_pollSatisfied
vehicularState
vehicularOperatorState
_queue_isDriving
_removeToken:
initWithObserver:
_observer
_invalidated
mainBundle
bundleIdentifier
currentAudioAndVideoCallCount
initOnQueue:withDownload:callCenter:inSpringBoard:onExistingPhoneCall:
initWithDownload:queue:constraints:
mapTableWithKeyOptions:valueOptions:
objectEnumerator
invalidateWithError:
installationConstraintObserverDidRemoveAllObserverBlocks:
initWithDownload:
registerObserverBlock:
monitorOfClass:
_hasAnyBlockObservers
download
_download
_queue_observerBlockTokens
_queue_invalidated
_queue_tokenCount
T@"<SUInstallationConstraintObserverDelegate>",D,N
T@"SUDownload",R,&,N,V_download
initWithDiscoveryDateDictionary:
objectForKeyedSubscript:
insertObject:atIndex:
removeLastObject
indexOfObject:
setDiscoveryDate:forBuildVersion:
discoveryDateforBuildVersion:
dictionaryRepresentation
containsBuildVersion:
_buildVersionArray
_discoveryDateArray
_handlePlaybackChangeNotification:
_queue_mediaPlaying
_mediaRemoteQueue
initWithInstallPolicyType:
_setType:
setSkipsAllowed:
numberWithUnsignedInteger:
clientName
type
autoUpdateEnabled
useDarkBoot
skipsAllowed
setClientName:
setType:
unsignedIntegerValue
_setAutoUpdateEnabled:
_setDarkBoolEnabled:
_setClientName:
_clientName
_skipsAllowed
_type
_autoUpdateEnabled
_useDarkBoot
T@"NSString",&,N,V_clientName
TQ,N,V_type
TQ,N,V_skipsAllowed
TB,R,N,V_autoUpdateEnabled
TB,R,N,V_useDarkBoot
_representedConstraints
T@"SUDownload",R,&,N
_queue_refreshState
hasPasscodeSet
_queue_fetchKeybagState
_queue_hasPasscodeSetFromLockState:
_queue_setHasPasscodeSet:
_queue_isPasscodeLockedFromLockState:
_queue_setIsPasscodeLocked:
keybagInterface:hasPasscodeSetDidChange:
keybagInterface:passcodeLockedStateDidChange:
isPasscodeLocked
hadFirstUnlock
installationKeybagStateForDescriptor:
createInstallationKeybagForDescriptor:withSecret:forUnattendedInstall:
persistKeybagStash
disableKeybagStash
createPreventLockAssertionWithDuration:
stringForStashMode:
_queue_hasPasscodeSet
_queue_isPasscodeLocked
TB,R,N
setPasscode:
setDescriptor:
setKeybagType:
keybagType
passcode
_passcode
_keybagType
T@"NSString",&,N,V_passcode
T@"SUDescriptor",&,N,V_descriptor
Ti,N,V_keybagType
autoupdatingCurrentCalendar
defaultTimeZone
setTimeZone:
_parseForecast
suStartDate
formatDateAsLongYMDHMSZPosixLocaleWithDate:
_componentsFromDate:
setMinute:
setSecond:
setNanosecond:
dateFromComponents:
minute
dateByAddingUnit:value:toDate:options:
timeIntervalSinceReferenceDate
isToday:
isTomorrow:
isAfterDate:
_computeTonightRangeRelativeToDate:extraDayOffset:outStart:outEnd:
_isStart:end:withinDateRange:end:
isBeforeDate:
setHour:
components:fromDate:
initWithForecast:
scheduleType
roundedStartTime
roundedEndTime
calendar
_scheduleType
_weak_forecast
_calendar
_roundedStartDate
_roundedEndDate
_parsed
Tq,R,N
T@"NSDate",R,N
T@"NSCalendar",R,N
initOnQueue:withDownload:pollDuration:keybag:
initWithFireInterval:repeatInterval:leewayInterval:queue:handler:
schedule
_queue_evaluateBattery
_queue_evaluateDisk
_queue_evaluateKeybag
_queue_evaluatePasscodeLocked
downloadOptions
metadata
installationSize
deltaSpaceNeeded
refreshConstraints
_queue_keybag
_queue_timer
_queue_deltaSpaceNeeded
_queue_diskSatisfied
_queue_keybagSatisfied
_queue_passcodeSatisfied
_queue_batterySatisfied
setRestoreVersion:
restoreVersion
_restoreVersion
_productVersion
_productBuildVersion
_releaseType
T@"NSString",&,N,V_restoreVersion
T@"NSString",&,N,V_productVersion
T@"NSString",&,N,V_productBuildVersion
T@"NSString",&,N,V_releaseType
bundleWithPath:
loadAndReturnError:
infoDictionary
awakeFromBundle
loadPlugin:
productSystemName
preparationSize
setDocumentation:
setAudienceType:
setPreferenceType:
setUpgradeType:
setPromoteAlternateUpdate:
setIsSplatOnly:
arrayWithObjects:count:
setWithArray:
publisher
downloadSize
numberWithUnsignedLongLong:
_unarchiveSize
_msuPrepareSize
minimumSystemPartitionSize
updateType
documentation
autoDownloadAllowableForCellular
isDownloadableOverCellular
isDownloadable
_isStreamingZipCapable
siriVoiceDeletionDisabled
installTonightDisabled
rampEnabled
criticalOutOfBoxOnly
setupCritical
criticalDownloadPolicy
systemPartitionPadding
sepDigest
rsepDigest
sepTBMDigest
rsepTBMDigest
releaseDate
mdmDelayInterval
hideInstallAlert
audienceType
preferenceType
upgradeType
promoteAlternateUpdate
isSplatOnly
_hasValue:
_buildCompareKey
totalRequiredFreeSpace
updateTypeName
isValidDescriptor
isEmergencyOrCritical
_documentation
_publisher
_productSystemName
_prerequisiteBuild
_prerequisiteOS
_downloadSize
_installationSize
_minimumSystemPartitionSize
_updateType
_autoDownloadAllowableForCellular
_downloadAllowableForCellular
_downloadable
_disableSiriVoiceDeletion
_disableCDLevel4
_disableAppDemotion
_disableIntallTonight
_rampEnabled
_criticalOutOfBoxOnly
_setupCritical
_systemPartitionPadding
_sepDigest
_rsepDigest
_sepTBMDigest
_rsepTBMDigest
_releaseDate
_mdmDelayInterval
_assetID
_hideInstallAlert
_audienceType
_preferenceType
_upgradeType
_promoteAlternateUpdate
_isSplatOnly
_downloadableOverCellular
_streamingZipCapable
_criticalDownloadPolicy
T@"SUDocumentation",&,N,V_documentation
T@"NSString",&,N,V_publisher
T@"NSString",&,N,V_productSystemName
T@"NSString",&,N,V_prerequisiteBuild
T@"NSString",&,N,V_prerequisiteOS
TQ,N,V_downloadSize
TQ,N,V_installationSize
TQ,N,V_minimumSystemPartitionSize
Ti,N,V_updateType
TB,N,V_autoDownloadAllowableForCellular
downloadable
TB,N,GisDownloadable,V_downloadable
downloadableOverCellular
TB,N,GisDownloadableOverCellular,V_downloadableOverCellular
disableSiriVoiceDeletion
TB,N,GsiriVoiceDeletionDisabled,S_setDisableSiriVoiceDeletion:,V_disableSiriVoiceDeletion
disableCDLevel4
TB,N,GcdLevel4Disabled,S_setDisableCDLevel4:,V_disableCDLevel4
disableAppDemotion
TB,N,GappDemotionDisabled,S_setDisableAppDemotion:,V_disableAppDemotion
disableInstallTonight
TB,N,GinstallTonightDisabled,S_setDisableInstallTonight:,V_disableIntallTonight
TB,N,V_rampEnabled
TB,N,V_criticalOutOfBoxOnly
TB,N,V_autoUpdateEnabled
T@"NSString",&,N,V_setupCritical
T@"NSString",&,N,V_criticalDownloadPolicy
T@"NSDictionary",&,N,V_systemPartitionPadding
T@"NSData",&,N,SsetSEPDigest:,V_sepDigest
T@"NSData",&,N,SsetRSEPDigest:,V_rsepDigest
T@"NSData",&,N,SsetSEPTBMDigest:,V_sepTBMDigest
T@"NSData",&,N,SsetRSEPTBMDigest:,V_rsepTBMDigest
T@"NSDate",&,N,V_releaseDate
TQ,N,V_mdmDelayInterval
T@"NSString",&,N,V_assetID
TB,N,V_hideInstallAlert
TQ,N,V_audienceType
TQ,N,V_preferenceType
TQ,N,V_upgradeType
TB,N,V_promoteAlternateUpdate
TB,N,V_isSplatOnly
unarchiveSize
TQ,N,G_unarchiveSize,S_setUnarchiveSize:,V_unarchiveSize
msuPrepareSize
TQ,N,G_msuPrepareSize,S_setMsuPrepareSize:,V_msuPrepareSize
streamingZipCapable
TB,N,G_isStreamingZipCapable,S_setStreamingZipCapable:,V_streamingZipCapable
stringByAppendingString:
hasEnoughDiskSpace
isDownloadAllowableForCellular2G
initWithDelegate:
initWithDelegate:clientType:
initWithDelegate:queue:clientType:
setQueue:
setClientType:
connectToServerIfNecessary
setObserver:
_invalidateConnection
queue
domain
code
_remoteInterfaceWithErrorHandler:connectIfNecessary:
setClientType:withResult:
_setClientType
_bundleIdentifier
_remoteInterfaceWithErrorHandler:
isScanning:
scanForUpdates:withResult:
latestUpdate
autoScanAndDownloadIfAvailable:
descriptors:
descriptor:
totalPurgeableSpace:
isClearingSpaceForDownload:
documentationDataForInstalledUpdateType:error:
isDownloading:
startDownload:
startDownloadWithOptions:withResult:
startDownloadWithMetadata:withResult:
cancelDownloadWithOptions:withResult:
pauseDownload:
resumeDownload:
updateDownloadOptions:withResult:
updateDownloadMetadata:withResult:
purgeDownloadWithOptions:withResult:
downloadAndInstallState:
_getExistingAutoInstallOperationFromModel:
updatesDownloadableWithOptions:alternateDownloadOptions:replyHandler:
_remoteSynchronousInterfaceWithErrorHandler:connectIfNecessary:
deviceHasSufficientSpaceForDownloads:
deviceHasSufficientSpaceForDownload:
extraSpaceNeededForDownloadWithoutAppPurging:
currentAutoInstallOperation:withResult:
currentPasscodePolicy:
isAutoUpdateEnabled:
isAutoUpdateScheduled:
presentAutoUpdateBanner:
progress
_remoteInterface
registerCSInstallPredicatesOnDate:
isUpdateReadyForInstallation:
isUpdateReadyForInstallationWithOptions:withResult:
installUpdateWithInstallOptions:withResult:
installUpdateWithOptions:withResult:
installUpdate:
eligibleRollbackWithOptions:withResult:
rollbackUpdateWithOptions:withResult:
previousRollback:withResult:
isRollingBack:
scheduleRollbackRebootForLater:
isSplatOnlyUpdateInstalled
isSplatOnlyUpdateRollbackAllowed:
createInstallationKeybag:withResult:
createInstallationKeybag:forUnattendedInstall:
createInstallationKeybagWithOptions:
isInstallationKeybagRequired:
isInstallationKeybagRequiredForDescriptor:result:
destroyInstallationKeybag
slaVersion:
softwareUpdatePathRestriction:
isDelayingUpdates:
delayEndDate:
setMandatorySoftwareUpdateDictionary:
getMandatorySoftwareUpdateDictionary:
enableAutomaticUpdateV2:
isAutomaticUpdateV2Enabled:
enableAutomaticDownload:
isAutomaticDownloadEnabled:
reload
disableAvailabilityAlerts
consentToAutoInstallOperation:withResult:
cancelAutoInstallOperation:withResult:
installServerConfiguration
setExclusiveControl:
scheduleDateActivity:
recordSUAnalyticsEvent:
submitSUAnalyticsEvent:
submitAllSUAnalyticsEvents
submitSUAnalyticsEventsWithName:
_invalidateConstraintObserver:withError:
automaticUpdateV2EnabledDidChange:
remoteObjectProxy
remoteObjectProxyWithErrorHandler:
synchronousRemoteObjectProxyWithErrorHandler:
setInvalidationHandler:
setInterruptionHandler:
initWithMachServiceName:options:
_setQueue:
interfaceWithProtocol:
setRemoteObjectInterface:
scanRequestDidStartForOptions:
scanRequestDidFinishForOptions:results:error:
scanDidCompleteForOptions:results:error:
downloadWasInvalidatedForNewUpdateAvailable:
downloadWasInvalidatedForNewUpdatesAvailable:
downloadDidStart:
downloadProgressDidChange:
downloadDidFail:withError:
downloadDidFinish:
downloadDidFinish:withInstallPolicy:
automaticDownloadDidFailToStartForNewUpdateAvailable:withError:
clearingSpaceForDownload:clearing:
installDidStart:
installDidFail:withError:
installDidFinish:
installPolicyDidChange:
deviceBootedAfterSplatUpdate
rollbackReadyToStart:options:completion:
rollbackDidStart:
rollbackDidFail:withError:
rollbackDidFinish:
rollbackReadyForReboot:
deviceBootedAfterRollback
managedInstallationRequested:
autoInstallOperationIsReadyToInstall:withResult:
autoInstallOperationPasscodePolicyChanged:passcodePolicyType:
installTonightScheduled:operationID:
scanRequestDidFinishForOptions:update:error:
scanDidCompleteWithNewUpdateAvailable:error:
setExportedInterface:
setExportedObject:
noteConnectionDropped
resume
client:scanRequestDidStartForOptions:
client:scanRequestDidFinishForOptions:results:error:
client:scanRequestDidFinishForOptions:update:error:
client:scanDidCompleteWithNewUpdateAvailable:error:
client:automaticDownloadDidFailToStartForNewUpdateAvailable:withError:
_invalidateAllInstallationConstraintObserversForDownload
client:downloadDidStart:
client:downloadProgressDidChange:
client:downloadDidFail:withError:
client:downloadDidFinish:
client:downloadDidFinish:withInstallPolicy:
client:downloadWasInvalidatedForNewUpdatesAvailable:
client:downloadWasInvalidatedForNewUpdateAvailable:
preferredDescriptor
client:clearingSpaceForDownload:clearingSpace:
setInstallDescriptor:
client:installDidStart:
client:installDidFail:withError:
client:installDidFinish:
client:installPolicyDidChange:
deviceBootedAfterSplatOnlyUpdate:
client:managedInstallationRequested:
client:rollbackReadyToStart:options:completion:
client:rollbackDidStart:
client:rollbackDidFail:withError:
client:rollbackDidFinish:
client:scheduledRollbackReadyForReboot:
deviceBootedAfterSplatOnlyRollback:
client:installTonightScheduled:operationID:
_shouldDisallowAvailabilityNotifications
preference:didChange:
initWithDelegate:andQueue:
scanForUpdates:withScanResults:
totalPurgeableSpace
getDocumentationDataForInstalledUpdateType:error:
purgeDownload:
download:
areUpdatesDownloadableWithOptions:alternateUpdateOptions:preferredUpdateDownloadable:alternateUpdateDownloadable:preferredUpdateError:alternateUpdateError:
isAutoUpdateScheduled
observeInstallationConstraintChangesForDownload:observer:
previousRollbackWithOptions:withResult:
createInstallationKeybag:
isInstallationKeybagRequired
isInstallationKeybagRequiredForDescriptor:
isAutomaticUpdateV2Enabled
isAutomaticDownloadEnabled
noteServerExiting
clientType
installDescriptor
scanDescriptor
setScanDescriptor:
_serverConnection
_connected
_serverIsExiting
_clientType
_installing
_installDescriptor
_scanDescriptor
_installOperationIDsToOperationHandler
_installationConstraintObservers
T@"SUDescriptor",&,N,V_installDescriptor
T@"SUDescriptor",&,N,V_scanDescriptor
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
T@"<SUManagerClientDelegate>",W,N,V_delegate
Ti,N,V_clientType
performSelectorOnMainThread:withObject:waitUntilDone:
initWithKey:type:description:
preferenceKey
_preferenceKey
_description
T@"NSString",R,&,N,V_preferenceKey
Tq,R,N,V_type
T@"NSString",R,&,N,V_description
stringByAppendingFormat:
containsString:
errorWithCode:originalError:
currentReleaseTypeIsInternal
internalRecoveryStringForErrorCode:
addEntriesFromDictionary:
userInfo
errorRemovingUserInfoKey:originalError:
setObject:forKeyedSubscript:
translateError:
translateError:withAddedUserInfo:
initWithDictionary:
translateErrorCodeFromError:
isProductionFused
localizedStringForKey:value:table:
devicePadding:
appDemotionSettingQueue
defaultManager
fileExistsAtPath:
initWithCalendarIdentifier:
systemTimeZone
gregorianCalendar
dateWithTimeIntervalSinceReferenceDate:
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
setResourceValue:forKey:error:
createFileAtPath:contents:attributes:
fileExistsAtPath:isDirectory:
removeItemAtPath:error:
sortedArrayUsingComparator:
initWithAssetType:
setQueriesLocalAssetInformationOnly:
setPredicate:
runQueryAndReturnError:
wasPurgeable
purgeAndReturnError:
arrayWithContentsOfFile:
addObjectsFromArray:
writeToFile:atomically:
dateWithTimeIntervalSince1970:
isRapidSecurityResponseInstallationAllowed
isRapidSecurityResponseRemovalAllowed
deviceIsSupervised
splatUpdateRestrictionEnabled
allowSplatUpdate
splatRollbackRestrictionEnabled
disableRollback
isSplatRollbackEnabled
mainWorkQueue
fastWorkQueue
setIsDaemon:
isDaemon
isWiFiCapable
isCellularDataCapable
hasCellularRadio
cellularDataIsEnabled
serialNumber
alarmSetBeforeDate:
randomIntWithMinVal:maxVal:
MADownloadErrorCodeToSUDownloadErrorCode:
autoDownloadExpiredError:
postAutoUpdateInformationalNotification:body:buttonText:altButtonText:withCompletion:
postFailureNotification:body:buttonText:altButtonText:
appDemoteableSpace
systemPartitionGrowth:
enableAppDemotion:
appDemotionIsEnabled
setCacheable:
URLIfFileExists:
addToDate:numberOfDays:
prettyPrintDate:
writeKeepAliveFile
deleteKeepAliveFile
bootTime
isSplatUpdateEnabled
setIconImageName:
baseDocumentationURL
bundleWithURL:
iconImageName
imageNamed:inBundle:withConfiguration:
_resetIfNecessary
_cachedDocumentationDataForURL:
releaseNotesSummaryURL
releaseNotesURL
licenseAgreementURL
iconImage
setLicenseAgreementURL:
setReleaseNotesSummaryURL:
setReleaseNotesURL:
_localizedResourceURLForDocumentationAsset:resource:
URLByDeletingLastPathComponent
localizedDocumentationStringFromBundle:key:
stringByAppendingPathExtension:
preferredLanguages
setPrimaryLanguage:
_clearTransientDocumentationData
localizedStringFromBundle:key:
releaseNotesSummaryFileName
localizedURLFromBundle:resource:
releaseNotesFileName
licenseAgreementFileName
dataWithContentsOfURL:
URLByAppendingPathComponent:
_getSUImage:
pngImageDataFromBundle:fileName:
initWithDocumentationURL:
releaseNotesSummary
releaseNotes
licenseAgreement
hasAnyDocumentation
getIconImage
getFullWidthImage
primaryLanguage
slaVersion
_baseDocumentationURL
_releaseNotesSummaryFileName
_releaseNotesFileName
_licenseAgreementFileName
_primaryLanguage
_slaVersion
_releaseNotesSummaryURL
_releaseNotesURL
_licenseAgreementURL
_cachedData
_iconImageName
T@"NSURL",&,N,V_baseDocumentationURL
T@"NSString",&,N,V_releaseNotesSummaryFileName
T@"NSString",&,N,V_licenseAgreementFileName
T@"NSString",&,N,V_releaseNotesFileName
T@"NSString",&,N,V_primaryLanguage
T@"NSNumber",&,N,V_slaVersion
T@"NSURL",&,N,V_releaseNotesSummaryURL
T@"NSURL",&,N,V_releaseNotesURL
T@"NSURL",&,N,V_licenseAgreementURL
T@"NSString",&,N,V_iconImageName
applyDownloadPolicy:
setProgress:
setDownloadOptions:
allowCellularDownload
totalSpaceConsumed
isValidDownload
setMetadata:
_progress
_downloadOptions
_metadata
T@"SUOperationProgress",&,N,V_progress
T@"SUDownloadOptions",&,N,V_downloadOptions
T@"SUDownloadMetadata",&,N,V_metadata
setCancelActiveUpdate:
setPromptForConsent:
setPromptForPasscode:
cancelActiveUpdate
promptForConsent
promptForPasscode
_cancelActiveUpdate
_promptForConsent
_promptForPasscode
TB,N,V_cancelActiveUpdate
TB,N
setEnabledFor2G:
setEnabledFor3G:
setEnabledFor4G:
setEnabledForWifi:
setEnabledOnBatteryPower:
setEnforceWifiOnlyOverride:
setEnabledForCellularRoaming:
enforceWifiOnlyOverride
activeDownloadPolicy:
userDownloadPolicyForDescriptor:existingPolicy:
isSamePolicy:
_stringForBool:
mutableCopyWithZone:
availableDownloadPolicyIfDifferentFromActive:
matchesDownloadPolicy:
isEnabledForNetworkType:
_enabledFor2G
_enabledFor3G
_enabledFor4G
_enabledForCellularRoaming
_enabledForWifi
_enabledOnBatteryPower
_enforceWifiOnlyOverride
Ti,N,V_activeDownloadPolicyType
enabledFor2G
TB,N,GisEnabledFor2G,V_enabledFor2G
enabledFor3G
TB,N,GisEnabledFor3G,V_enabledFor3G
enabledFor4G
TB,N,GisEnabledFor4G,V_enabledFor4G
TB,N,GisEnabledForWifi,V_enabledForWifi
TB,N,GisEnabledOnBatteryPower,V_enabledOnBatteryPower
TB,N,GisEnabledForCellularRoaming,V_enabledForCellularRoaming
TB,N,V_enforceWifiOnlyOverride
initWithMetadata:
Ti,D,N
TB,D,N
TB,N,GisAutoDownload
TB,N,GisDownloadOnly
initWithQueue:
_initCTClient
getPreferredDataSubscriptionContextSync:
connectionStateChanged:connection:dataConnectionStatusInfo:
connectionActivationError:connection:error:
anbrActivationState:enabled:
anbrBitrateRecommendation:bitrate:direction:
preferredDataSimChanged:
preferredDataServiceDescriptorChanged:
currentDataSimChanged:
currentDataServiceDescriptorChanged:
servingNetworkChanged:
connectionAvailability:availableConnections:
dataStatus:dataStatusInfo:
regDataModeChanged:dataMode:
dataSettingsChanged:
internetConnectionStateChanged:
internetConnectionActivationError:
internetDataStatusBasic:
internetDataStatus:
internetConnectionAvailability:
tetheringStatus:
tetheringStatus:connectionType:
serviceDisconnection:status:
dataRoamingSettingsChanged:status:
getCTClient
getPreferredDataSubscriptionContext
_initiationQueue
_subscriptionContext
initWithBundleType:
initWithObjects:
copyCarrierBundleValueWithDefault:keyHierarchy:bundleType:error:
_boolForKey:defaultValue:
_longLongForKey:defaultValue:
_integerForKey:defaultValue:
_isValidHour:
isDownloadFree
isDownloadAllowable
isDownloadAllowableOver2G
isAutoDownloadAllowable
maximumDownloadSizeInBytes
numberOfDaysToWaitForCellularDownload
peakStartHour
peakEndHour
allowInexpensiveHDMUnlimited
_numberForKey:
integerValue
_unsignedIntegerForKey:defaultValue:
_keyMap
postNotificationForError:withUpdateBuildNumber:
dismissNotification
postNotificationForError:
_notification
_resetCtClient
_queue_currentNetworkType
_queue_currentCellularType
_isCurrentlyRoaming
isNetworkTypeCellular:
isExpensive
_initNetworkObservation
_networkTypeFromFlags:
setCurrentNetworkType:
_networkTypeFromCurrentCellularDataRespectingWifiAssist:
setCurrentCellularType:
refreshNetworkAndCellularTypesWithFlags:
refreshNetworkTypeWithFlags:
refreshCellularType
_networkTypeFromCurrentCellularDataWithError:
usingWifi
telephonyClient
getInternetDataStatusSync:
indicator
getCurrentDataServiceDescriptorSync:
getInternationalDataAccessSync:error:
getCurrentDataSubscriptionContextSync:
copyRegistrationStatus:error:
setCellularRoaming:
_operatorBundleChanged
_carrierBundleChanged
holdsWiFiAssertion
setHoldsWiFiAssertion:
operatorNameChanged:name:
displayStatusChanged:status:
signalStrengthChanged:info:
rejectCauseCodeChanged:causeCode:
voiceLinkQualityChanged:metric:
enhancedVoiceLinkQualityChanged:metric:
enhancedDataLinkQualityChanged:metric:
imsRegistrationChanged:info:
cellChanged:cell:
cellMonitorUpdate:info:
networkListAvailable:list:
customerServiceProfileChanged:visible:
networkSelected:success:mode:
networkReselectionNeeded:
encryptionStatusChanged:info:
ratSelectionChanged:selection:
nrDisableStatusChanged:status:
plmnChanged:plmn:
carrierBundleChange:
operatorBundleChange:
defaultBundleChange
currentCellularType
isCurrentNetworkTypeCellular
isCurrentNetworkTypeExpensive
isCellularRoaming
_networkTypeFromCurrentCellularData
_reachability
_observers
_currentNetworkType
_currentCellularType
_roaming
_ctClient
_ctQueue
_pathEvaluator
decodeDictionaryWithKeysOfClasses:objectsOfClasses:forKey:
eventName
eventPayload
eventUUID
_queue_setEventPayloadEntry:boolValue:
_queue_setEventPayloadEntry:numberValue:
_queue_setEventPayloadEntry:stringValue:
_queue_setEventPayloadEntryToNull:
_queue_removeEventPayloadEntry:
initWithEventName:
setEventPayloadEntry:boolValue:
setEventPayloadEntry:numberValue:
setEventPayloadEntry:stringValue:
setEventPayloadEntryToNull:
removeEventPayloadEntry:
setEventUUID:
_eventName
_mutableEventPayload
_eventUUID
T@"NSString",R,&,N,V_eventName
T@"NSString",&,N,V_eventUUID
T@"NSDictionary",R,&,N
setNetworkMonitor:
_isCellularCapable
createSpaceOptions
isDownloadAllowableForCellularIncludingInexpensiveHDM:
_inexpensiveHDM
isDownloadableForCurrentNetworkConditions:cellularFeesApply:powerRequired:
networkMonitor
_isDownloadableForNetworkType:error:cellularFeesApply:powerRequired:
isEqualToDate:
cellularDownloadFeesApply
wifiOnlyPeriodInDays
isDownloadableForCurrentNetworkConditions:cellularFeesApply:
T@"SUDescriptor",&,N
carrierPolicy
setCarrierPolicy:
isCellularCapable
setCellularCapable:
_carrierPolicy
_networkMonitor
_cellularCapable
_cellularFeeAgreementStatus
T@"SUCarrierDownloadPolicyProperties",&,N,V_carrierPolicy
cellularCapable
TB,N,GisCellularCapable,V_cellularCapable
T@"SUNetworkMonitor",&,N,V_networkMonitor
Ti,N,V_cellularFeeAgreementStatus
setUnlockStartDate:
setUnlockEndDate:
setSuStartDate:
setSuEndDate:
setFirstUnlock:
_forecastDateCache
unlockStartDate
unlockEndDate
firstUnlock
_isForecastLogicallyExpired
_roundedStartTime
_roundedEndTime
_unlockStartDate
_unlockEndDate
_suStartDate
_suEndDate
_firstUnlock
_lazy_forecastDateCache
T@"NSDate",&,N,V_unlockStartDate
T@"NSDate",&,N,V_unlockEndDate
T@"NSDate",&,N,V_suStartDate
T@"NSDate",&,N,V_suEndDate
T@"NSDate",&,N,V_firstUnlock
callCenterWithQueue:
_callStatusChanged
_queue_noteOnExistingPhoneCallDidChange:
_queue_callCenter
_queue_satisfied
_inSpringBoard
computAutoDownloadEndDateFromDate:
computeTimeOfWifiOnlyPeriodEndFromDate:
postAppPurgingNotificationWithCompletion:
_userDownloadPolicyFromCurrentPolicy:descriptor:networkMonitor:allowCellularOverride:
userDownloadPolicyForDescriptor:existingPolicy:networkMonitor:allowCellularOverride:
userDownloadPolicyForDescriptor:existingPolicy:allowCellularOverride:
userDownloadPolicyForDescriptor:
disableManagedRequest
setDarkBoot:
setRequired:
setManaged:
setSkipActivationCheck:
setIgnorableConstraints:
isDarkBoot
isManaged
skipActivationCheck
isRequired
ignorableConstraints
_darkBoot
_required
_managed
_skipActivationCheck
_ignorableConstraints
managed
TB,N,GisManaged,V_managed
darkBoot
TB,N,GisDarkBoot,V_darkBoot
required
TB,N,GisRequired,V_required
TQ,N,V_ignorableConstraints
TB,N,V_skipActivationCheck
useDelayPeriod
enforcedSoftwareUpdateDelayInDays
softwareUpdatePath
MCPathToSUMDMPath:
MDMSoftwareUpdatePath
isSoftwareUpdateResisted
delayRestrictionEnabled
scanOptions
setScanOptions:
requestedProductMarketingVersion
initWithScanOption:
delayPeriodDays
_scanOptions
T@"SUScanOptions",&,N,V_scanOptions
T@"NSString",R,&,N
setPreferredDescriptor:
setAlternateDescriptor:
alternateDescriptor
initWithPreferredDescriptor:alternateDescriptor:
_preferredDescriptor
_alternateDescriptor
T@"SUDescriptor",&,N,V_preferredDescriptor
T@"SUDescriptor",&,N,V_alternateDescriptor
_loadPreferences
_setupAutomaticUpdateV2Enabled
_cachedBoolValueForKey:withDefaultValue:
_autoDownloadDisableDefaultValue
_cachedNumberValueForKey:
_mandatorySUFlagsForPreferences
_autoInstallSystemDataFilesDefaultValue
_cachedStringValueForKey:
_autoInstallDefaultValue
_setBooleanPreferenceForKey:value:
_setObjectPreferenceForKey:value:
allValues
isKeySetInPreferences:
_getValueOfKey:withType:
_getBooleanPreferenceForKey:withDefaultValue:
_copyNumberPreferenceForKey:
_copyStringPreferenceForKey:
_copyPreferenceForKey:ofType:
_cachedObjectForKey:ofClass:
disableAutoDownload
_setCachedBooleanPreferenceForKey:value:
autoInstallSystemAndDataFiles
disableUserWiFiOnlyPeriod
scanWeeklyInternally
shouldDelayUpdates
updateDelayInterval
shouldDelayInMinutes
unmetConstraints
mandatorySUFlags
allowSameRestoreVersionSplatUpdate
autoInstallSystemDataFilesForceOn
autoInstallSystemDataFilesForceOff
splatScanInterval
autoSUStartDelta
autoSUEndDelta
autoSUUnlockStartDelta
autoSUUnlockEndDelta
autoUpdateForceOn
autoUpdateForceOff
bannerDelay
autoDownloadDeletedBuild
analyticsSubmissionIntervalOverride
queryCustomerBuilds
useEmptyPatches
setPreference:toBool:
setPreference:toValue:
enableAutoInstallSystemAndDataFiles:
isAutoDownloadDisabled
observer
preferencesDefinitions
setPreferencesDefinitions:
cachedPreferences
setCachedPreferences:
isAutoSUDisabled
backgroundDLKnownBuilds
_preferencesWorkloop
_preferencesDefinitions
_cachedPreferences
_disableAutoSU
_backgroundDLKnownBuilds
T@"NSDictionary",&,N,V_preferencesDefinitions
T@"NSMutableDictionary",&,N,V_cachedPreferences
T@"<SUPreferencesObserver>",N,V_observer
TB,R,N,GisAutoDownloadDisabled
disableAutoSU
TB,R,N,GisAutoSUDisabled,V_disableAutoSU
T@"NSNumber",R,N
TB,R,N,V_backgroundDLKnownBuilds
TB,N,SenableAutomaticUpdateV2:
TB,N,SenableAutomaticDownload:
TB,N,SenableAutoInstallSystemAndDataFiles:
isDelayed
delayedStartDate
delayPeriod
delayUnit
dateByAddingTimeInterval:
delayEndDate
setIsDelayed:
setDelayedStartDate:
initWithDelay:
_isDelayed
_delayedStartDate
_delayPeriod
TB,N,V_isDelayed
T@"NSDate",&,N,V_delayedStartDate
TQ,N,V_delayPeriod
alloc
initAndWaitUntilSessionUpdated
setSessionObserver:
currentSession
_queue_carplayDidChange
startedConnectionAttemptOnTransport:
cancelledConnectionAttemptOnTransport:
sessionDidConnect:
sessionDidDisconnect:
session:didUpdateConfiguration:
_queue_CarplayConnected
_queue_carSessionStatus
wifiOnlyPeriodInDaysForUpdate:
userContext
unregisterInstallationAlertAction
batteryLevelPredicate:
phoneCallPredicate:
networkPredicate:
carplayPredicate:
evaluatePredicate:
localWakingRegistrationWithIdentifier:contextualPredicate:callback:
registerCallback:
deregisterCallback:
predicateForCellConnectionAvailability:
predicateForWiFiConnectionAvailability:
orPredicateWithSubpredicates:
keyPathForCallInProgressStatus
predicateForKeyPath:equalToValue:
keyPathForBatteryLevel
predicateForKeyPath:withFormat:
keyPathForCarplayConnectedStatus
_getIntForKeyPath:
_getBoolForKeyPath:
keyPathForWiFiConnectionQuality
keyPathForCellConnectionQuality
_batteryLevel
_callInProgress
_hasNetworkConnection
registerInstallAlertConditionsWithHandler:
_context
_registration
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@32@0:8@16^@24
v24@0:8@16
@"MAAsset"32@0:8@"NSArray"16^@24
v24@0:8@"MAMsuDownloadOptions"16
@"NSDictionary"16@0:8
@28@0:8@16i24
i16@0:8
@"NSString"
@"NSDictionary"
v32@0:8@16Q24
v32@0:8@"<SUInstallationConstraintMonitor>"16Q24
Q24@0:8Q16
@"<SUInstallationConstraintMonitorDelegate>"16@0:8
v24@0:8@"<SUInstallationConstraintMonitorDelegate>"16
@32@0:8@16@24
v16@0:8
@"NSObject<OS_dispatch_queue>"
@"NSSet"
@"<SUInstallationConstraintMonitorDelegate>"
q24@0:8@16
@20@0:8i16
@24@0:8@16
@60@0:8@16@24@32@40i48@52
Q40@0:8@16@24@32
@40@0:8@16@24@32
v20@0:8B16
@"SUPreferences"
B24@0:8Q16
v24@0:8Q16
@"NSHashTable"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^{_NSZone=}16
v20@0:8i16
@"NSUUID"
@"SUAutoInstallForecast"
@"MAAsset"
v24@0:8@?16
@24@0:8^{__CFString=}16
@36@0:8@16B24^@28
@44@0:8@16B24^@28^@36
@32@0:8@16B24B28
@44@0:8@16@24B32^@36
@24@0:8^@16
@40@0:8@16@24i32B36
@32@0:8Q16@24
@"SUDescriptor"
@"NSData"
q16@0:8
v24@0:8q16
v24@0:8i16i20
@"SUNetworkMonitor"
v32@0:8@16@?24
B32@0:8@16^@24
Q24@0:8@16
B20@0:8i16
@"NSMutableSet"
v24@0:8@"NSError"16
v24@0:8@?<v@?B@"NSError">16
@56@0:8@16B24@28@36i44B48B52
@"SUManagerClient"
@"<SUAutoInstallOperationDelegate>"
f16@0:8
v20@0:8f16
d16@0:8
v24@0:8d16
#40@0:8@16@24@32
v40@0:8@16@24@32
#40@0:8@"NSKeyedUnarchiver"16@"NSString"24@"NSArray"32
@32@0:8@"NSKeyedUnarchiver"16@24
v40@0:8@"NSKeyedUnarchiver"16@24@32
v24@0:8@"NSKeyedUnarchiver"16
@"SUDownload"
@"NSArray"
@"SUScanOptions"
@"NSDate"
@"_SUAutoInstallOperationModel"
@"SUManagedDeviceUpdateDelay"
@"SUInstallPolicy"
@"SUInstallationConstraintObserver"
@24@0:8@?16
@24@0:8#16
@"<SUInstallationConstraintObserverDelegate>"
@"NSMapTable"
v32@0:8@16@24
@"NSMutableArray"
@24@0:8Q16
@40@0:8@16Q24@32
i24@0:8@16
B36@0:8@16@24B32
@24@0:8d16
B48@0:8@16@24@32@40
v48@0:8@16q24^@32^@40
@"NSCalendar"
v28@0:8@16B24
v28@0:8@"SUKeybagInterface"16B24
@48@0:8@16@24d32@40
@"SUKeybagInterface"
@"BSTimer"
@"SUDocumentation"
v40@0:8@16@24@?32
v28@0:8B16@?20
v28@0:8i16@?20
v32@0:8@"SUScanOptions"16@?<v@?@"SUScanResults"@"NSError">24
v24@0:8@?<v@?@"SUScanResults"@"NSError">16
v24@0:8@?<v@?@"SUDescriptor"@"NSError">16
v32@0:8@"SUDownloadOptions"16@?<v@?B@"NSError">24
v32@0:8@"SUDownloadMetadata"16@?<v@?B@"NSError">24
v32@0:8@"SUPurgeOptions"16@?<v@?B@"NSError">24
v24@0:8@?<v@?@"SUDownload"@"SUInstallPolicy"@"_SUAutoInstallOperationModel"@"NSError">16
v40@0:8@"SUDownloadOptions"16@"SUDownloadOptions"24@?<v@?BB@"NSError"@"NSError">32
v24@0:8@?<v@?BB@"NSError"@"NSError">16
v24@0:8@?<v@?@"NSNumber"@"NSError">16
v32@0:8@"SURollbackOptions"16@?<v@?@"SURollbackDescriptor"@"NSError">24
v32@0:8@"SURollbackOptions"16@?<v@?B@"SURollbackDescriptor"@"NSError">24
v24@0:8@?<v@?B@"SURollbackDescriptor"@"NSError">16
v28@0:8B16@?<v@?@"_SUAutoInstallOperationModel"@"NSError">20
v32@0:8@"NSUUID"16@?<v@?B@"NSError">24
v24@0:8@?<v@?Q@"NSError">16
v32@0:8@"SUDescriptor"16@?<v@?B@"NSError">24
v32@0:8@"SUInstallOptions"16@?<v@?B@"NSError">24
v32@0:8@"NSArray"16@?<v@?B@"NSError">24
v28@0:8i16@?<v@?B@"NSError">20
v24@0:8@?<v@?@"NSDate"@"NSError">16
v24@0:8@"NSDictionary"16
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v32@0:8@"SUKeybagOptions"16@?<v@?B@"NSError">24
v24@0:8@"NSDate"16
v24@0:8@"SUAnalyticsEvent"16
v24@0:8@"NSString"16
v28@0:8B16@20
v24@0:8@"SUScanOptions"16
v40@0:8@"SUScanOptions"16@"SUScanResults"24@"NSError"32
v24@0:8@"SUDescriptor"16
v24@0:8@"SUScanResults"16
v24@0:8@"SUDownload"16
v32@0:8@"SUDownload"16@"NSError"24
v32@0:8@"SUDownload"16@"SUInstallPolicy"24
v32@0:8@"SUDescriptor"16@"NSError"24
v28@0:8@"SUDownload"16B24
v24@0:8@"SUInstallPolicy"16
v40@0:8@"SURollbackDescriptor"16@"SURollbackOptions"24@?<v@?B@"SURollbackDescriptor"@"NSError">32
v24@0:8@"SURollbackDescriptor"16
v32@0:8@"SURollbackDescriptor"16@"NSError"24
v24@0:8@"NSUUID"16
v32@0:8@"NSUUID"16@"NSError"24
v32@0:8@"NSUUID"16Q24
v28@0:8B16@"NSUUID"20
v40@0:8@"SUScanOptions"16@"SUDescriptor"24@"NSError"32
v24@0:8@"SUInstallationConstraintObserver"16
v32@0:8@"NSString"16@24
@36@0:8@16@24i32
@28@0:8i16^@20
v64@0:8@16@24^B32^B40^@48^@56
@32@0:8@16@?24
B24@0:8^@16
B28@0:8@16B24
@28@0:8@?16B24
@"NSXPCConnection"
@"<SUManagerClientDelegate>"
@"NSMutableDictionary"
@40@0:8@16q24@32
i24@0:8I16I20
@24@0:8q16
@32@0:8q16@24
v32@0:8^@16q24
v36@0:8^@16@24B32
q24@0:8q16
@20@0:8B16
v56@0:8@16@24@32@40@?48
v48@0:8@16@24@32@40
@32@0:8@16q24
@32@0:8^{__CFBundle=}16@24
@"NSURL"
@"NSNumber"
@"SUOperationProgress"
@"SUDownloadOptions"
@"SUDownloadMetadata"
v36@0:8@16i24@28
v32@0:8@16i24i28
v36@0:8@16@24i32
v28@0:8@16i24
v36@0:8@"CTXPCServiceSubscriptionContext"16i24@"CTDataConnectionStatus"28
v32@0:8@"CTXPCServiceSubscriptionContext"16i24i28
v28@0:8@"CTXPCServiceSubscriptionContext"16B24
v36@0:8@"CTXPCServiceSubscriptionContext"16@"NSNumber"24i32
v24@0:8@"CTXPCServiceSubscriptionContext"16
v24@0:8@"CTServiceDescriptor"16
v32@0:8@"CTXPCServiceSubscriptionContext"16@"NSArray"24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"CTDataStatus"24
v28@0:8@"CTXPCServiceSubscriptionContext"16i24
v24@0:8@"CTDataSettings"16
v24@0:8@"CTDataConnectionStatus"16
v24@0:8@"CTDataStatusBasic"16
v24@0:8@"CTDataStatus"16
v24@0:8@"CTTetheringStatus"16
v28@0:8@"CTTetheringStatus"16i24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"CTServiceDisconnectionStatus"24
v28@0:8@"CTServiceDescriptor"16B24
@"CTXPCServiceSubscriptionContext"
@"CoreTelephonyClient"
B24@0:8q16
q32@0:8@16q24
Q32@0:8@16q24
v32@0:8@"NSError"16@"NSString"24
^{__CFUserNotification=}
v36@0:8@16B24@28
v32@0:8@"CTXPCServiceSubscriptionContext"16@"NSString"24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"CTRegistrationDisplayStatus"24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"CTSignalStrengthInfo"24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"NSNumber"24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"CTVoiceLinkQualityMetric"24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"CTEnhancedLinkQualityMetric"24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"CTEnhancedDataLinkQualityMetric"24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"CTIMSRegistrationTransportInfo"24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"NSDictionary"24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"CTCellInfo"24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"CTNetworkList"24
v36@0:8@"CTXPCServiceSubscriptionContext"16B24@"NSString"28
v32@0:8@"CTServiceDescriptor"16@"CTEncryptionStatusInfo"24
v32@0:8@"CTServiceDescriptor"16@"CTRatSelection"24
v32@0:8@"CTServiceDescriptor"16@"CTNRStatus"24
v32@0:8@"CTServiceDescriptor"16@"CTPlmnInfo"24
v20@0:8I16
i20@0:8I16
i20@0:8B16
i24@0:8^@16
^{__SCNetworkReachability=}
@"NWPathEvaluator"
B32@0:8^q16^B24
B40@0:8^q16^B24^B32
@24@0:8@"SUDescriptor"16
B24@0:8@"<SUDownloadPolicy>"16
@"SUSpacePurgeOptions"16@0:8
@"SUDescriptor"16@0:8
B20@0:8B16
B44@0:8i16^q20^B28^B36
@"SUCarrierDownloadPolicyProperties"
@"_SUAutoInstallForecastDateCache"
@48@0:8@16@24@32B40B44
@"TUCallCenter"
v24@0:8@?<v@?B>16
@44@0:8@16@24@32B40
@36@0:8@16@24B32
@28@0:8i16@20
Q24@0:8q16
@32@0:8@16#24
^v32@0:8^{__CFString=}16Q24
@"<SUPreferencesObserver>"
@"NSObject<OS_dispatch_workloop>"
v24@0:8@"CARSession"16
v32@0:8@"CARSession"16@"CARSessionConfiguration"24
@"CARSessionStatus"
@"<_CDContext>"
@"_CDContextualChangeRegistration"
 #&),/258;
0369<
///!
GJMPSVY\_b
SUAssetStateMatcher.m
Asset type must be non-nil for a matcher.
v32@?0@8Q16^B24
v8@?0
Ignoring unmet constraint: %@
Ignoring SU match due to personalization eligibility check: %@
Unable to find update due to ambiguous results: %@
Requesting PMV %@
Requesting delay period %lu
9.9.
9.9. replaced in currSecond. New version string: %@
Missing key %@ from asset map entry or type wasn't a string
Missing key %@ from asset map entry or type wasn't a string.
Mistyped key %@ from asset map entry (expected string)
Missing key %@ from asset map entry or type wasn't an array
Cannot have prerequisite version or build without it's sibling.
No version to search from
No build to search from
No product type to search for
SUAutoUpdatePasscodePolicy.m
Please use the sharedInstance.
com.apple.softwareupdateservices.passcodePolicy
com.apple.softwareupdateservices.passcodepolicy.observerCallout
Invalid passcode policy type: %d. Leaving policy as %@
Invalid parameter not satisfying: %@
observer
Not required
Required
Opportunistic
Unknown
forecast: %@
             agreementStatus: %d
             id: %@
forecast
agreementStatus
notify
userRequested
        SUPurgeOptions:
        notifyUser:%@
        userRequested:%@
Failed to find asset matching predicate: %@ in xml for asset type: %@, server url for asset type: %@
%K == %@
v32@?0@"NSString"8@16^B24
com.apple.MobileAsset.SoftwareUpdate
com.apple.MobileAsset.SoftwareUpdateDocumentation
com.apple.MobileAsset.MobileSoftwareUpdate.UpdateBrain
Build
OSVersion
ReleaseType
PrerequisiteBuild
PrerequisiteOSVersion
SupportedDevices
LastEmergencyBuild
LastEmergencyOSVersion
UniqueBuildID
SUProductSystemName
SUPublisher
AutomaticDownloadOver3G
AllowableOTA
AllowableOverCellular
SUDocumentationID
SupportedDeviceModels
ActualMinimumSystemPartition
SystemPartitionPadding
SEPDigest
RSEPDigest
SEPTBMDigests
RSEPTBMDigests
MDMDelayInterval
SetupCritical
SetupCriticalCellularOverride
SetupCriticalUpdateOutOfBoxOnly
SessionId
DeviceCheck
assetID
ComboAsset
__HideInstallAlert
ReleaseNotesSummaryFileName
ReleaseNotesFileName
LicenseAgreementFileName
SUSLAVersionRequired
Device
SUDisableSiriVoiceDeletion
SUDisableCDLevel4
SUDisableAppDemotion
SUInstallTonightEnabled
Ramp
AutoUpdate
default
mandatory
suggested
WifiOnly
WifiAndCellular
Unable to create descriptor from nil asset.
Unable to create descriptor from asset without attributes.
9.9. replaced. New version string: %@
yyyy-MM-dd
en_US_POSIX
Beta
queryMetaDataSync failed in _queue_cleanupAllInstalledAssetsOfType: %ld
purgeSync for asset:%@ failed in _queue_cleanupAllInstalledAssetsOfType: %ld
queryMetaDataSync failed in _cleanupAllAssetsOfType: %d
ProductType
BuildVersion
ProductVersion
HWModelStr
error setting filter for: %@
Failed to query matching assetID: %@ QueryResult: %d
Found SU asset matching assetID: %@
Failed to find asset matching assetID: %@
MobileAsset found %d installed build%s: assetIDs: %@
Failed to query for installed builds: %d
SUAssetSupport.m
Matcher must be non-nil for a query.
MobileAsset returned %d matching assets
Asset info: %@
asset query failed: %d
Asset query did not return posting date. Setting posting date to now
release date of update is %@
Found asset matching assetId:%@
Found %lu asset%s matching descriptor
ComboAsset value is not an array, skipping
ComboAsset array item is not a dictionary, skipping
Found %lu asset%s matching descriptor prerequisite build & version
Taking the first asset, assetId:%@
Could not find matching asset
SoftwareUpdateAsset must be non-nil to fetch documentation from.
Asset passed in must be a software update asset
%@:%@
v16@?0q8
Unable to cancel downloading asset: %d
Unable to purge asset: %d
Update download cancelled.
Failed to cancel download
Successfully purged asset
Failed to purge asset
Failed to purge. Asset not installed
downloadOnly
autoDownload
feeAgreementStatus
termsAgreementStatus
descriptor
policyType
allowUnrestrictedCellularDownload
com.apple.softwareupdateservicesd.downloadoptionsqueue
Settings downloadPolicy to: %@
            downloadOnly: %@
            autoDownoad: %@
            allowUnrestrictedCellularDownload: %@
            downloadFeeAgreementStatus: %@
            termsAndConditionsAgreementStatus: %@
            activeDownloadPolicyType: %@
            enabledForCellular: %@
            enabledForWifi: %@
            enabledOnBatteryPower: %@
            enabledForCellularRoaming: %@
            descriptor: %@
neededBytes
enableCachDelete
cachDeleteVolume
cacheDeleteUrgency
enableAppOffload
appOffloadVolume
appOffloadUrgency
/private/var
v24@?0@"SUSpaceCheckResults"8@"NSError"16
v20@?0B8@"NSError"12
identifier
forced
types
requestedPMV
MDMUseDelayPeriod
sessionID
            Identifier: %@
            Forced: %@
            Types: %@
            Requested PMV: %@
            SessionID: %@
            MDM use delay: %@
com.apple.springboard.pluggedin
BatteryCurrentCapacity
Current battery level: %lld
Failed to copy powerSources
Failed to copy powerSourcesList
Type
deviceType: %@
InternalBattery
Is Charging
Show Charging UI
FamilyCode
IsWireless
device connected to charger. Family code: %@ Wireless: %@
kIOPSFamilyCodeDisconnected
kIOPSFamilyCodeUnsupported
kIOPSFamilyCodeFirewire
kIOPSFamilyCodeUSBHost
kIOPSFamilyCodeUSBHostSuspended
kIOPSFamilyCodeUSBDevice
kIOPSFamilyCodeUSBAdapter
kIOPSFamilyCodeUSBChargingPortDedicated
kIOPSFamilyCodeUSBChargingPortDownstream
kIOPSFamilyCodeUSBChargingPort
kIOPSFamilyCodeUSBUnknown
kIOPSFamilyCodeUSBCBrick
kIOPSFamilyCodeUSBCTypeC
kIOPSFamilyCodeUSBCPD
kIOPSFamilyCodeAC
kIOPSFamilyCodeExternal
kIOPSFamilyCodeExternal2
kIOPSFamilyCodeExternal3
kIOPSFamilyCodeExternal4
kIOPSFamilyCodeExternal5
Unknown IOPSFamilyCode: %d
SUAutoInstallOperationCancelledNotification
SUAutoInstallOperationDidExpireNotification
SUAutoInstallOperationIsReadyToInstallNotification
SUAutoInstallOperationDidConsentNotification
SUAutoInstallOperation.m
client
uuid
[<SUAutoInstallOperation:%p> 
ID=%@, 
AcceptedAgreementStatus=%@, 
isExpired=%@, 
isScheduled=%@, 
isCancelled=%@, 
isValidForScheduling=%@, 
ForecastDetails=%@
__id
__expired
__cancelled
__agreementStatus
__forecast
phase
percentComplete
normalizedPercentComplete
timeRemaining
isDone
            
Phase: %@
            
PercentComplete: %@
            
NormalizedPercentComplete: %@
            
TimeRemaining: %@
com.apple.softwareupdateservices
Common
InstallationConstraints
SUBadging
SUFollowUp
SUAnalytics
com.apple.MobileSync.BackupAgent.RestoreStarted
v12@?0i8
com.apple.MobileSync.BackupAgent.kBackupAgentRestoreEnded
/Library/SoftwareUpdate/softwareupdateservicesd.plist
SULastDownload
SUPreferredLastScannedDescriptor
SUAlternateLastScannedDescriptor
SUFailedPatchDescriptorsKey
SUManualDownloadWifiPeriodEndTime
SUAutodownloadWifiPeriodEndTime
SUAutodownloadPolicyChangeTime
SULastScanDate
SUAutodownloadNeedsOneTimeRetry
SUStashbagIsPersisted
SULastProductVersionKey
SULastProductBuildKey
SULastProductTypeKey
SULastReleaseTypeKey
SULastAutoInstallOperationModel
SUUnlockCallbacksKey
SUManagedDeviceDelay
SUInstallPolicy
SUMandatorUpdateDict
SUSessionID
SULastDeletedSUAssetID
SULastAssetAudience
SUAppliedTime
SUUnderExclusiveControl
SUDiscoveryDates
SULastSplatRestoreVersion
%@%@
Failed to create state file path
com.apple.softwareupdateservicesd.stateQueue
LastDownload: %@            
preferredLastScannedDescriptor: %@            
preferredLastScannedCoreDescriptor: %@            
alternateLastScannedDescriptor: %@            
alternateLastScannedCoreDescriptor: %@            
FailedPatchDescriptors: %@            
ScheduledManualDownloadWifiPeriodEndTime: %@            
ScheduledAutoDownloadWifiPeriodEndTime: %@            
ScheduledAutoDownloadPolicyChangeTime: %@            
LastScanDate: %@            
NeedsOneTimeAutodownloadRetry: %@            
StashbagIsPersisted: %@            
LastProductVersion: %@            
LastProductBuild: %@            
LastProductType: %@            
LastReleaseType: %@            
LastSplatRestoreVersion: %@            
LastAutoInstallOperationModel: %@            
ManagedDeviceDelay: %@            
InstallPolicy: %@            
MandatoryUpdateDict: %@            
sessionID: %@            
lastDeletedAssetID: %@            
lastAssetAudience: %@            
appliedSate: %@            
underExclusiveControl: %@            
UpdateDiscoveryDates: %@
SUDownloadInterfaceReport
Skipping SUDownloadInterfaceReport in SUState (legacy).
SUInstallationConstraintObserver.m
Init is unsupported.  Please use -[SUInstallationConstraintObserver initWithDownload:] instead.
com.apple.softwareupdateservices.installationconstraints.bg
block
token
com.apple.softwareupdateservices.discoveryStateQueue
discoveryDateDictionary key is unexpected type. File a radar!
discoveryDateDictionary value is unexpected type. File a radar!
_descriptorArray and _discoveryDateArray are out of sync. File a radar!
com.apple.softwareupdateservices.mediaremote
v12@?0I8
clientName
skipsAllowed
type
autoUpdateEnabled
darkBootEnabled
Setting default install policy
Setting required install policy
Unknonw InstallPolicyType provided: %@
            clientName:%@
            type: %@
            skipsAllowed: %d
            autoUpdateEnabled: %@
            DarkBoot: %@
Default
SUInstallationConstraintMonitorBase.m
Please use the subclass version: -initOnQueue:withRepresentedInstallationConstraints:andDownload:
SUKeybagInterface.m
com.apple.softwareupdateservices.keybag
com.apple.softwareupdateservices.keybag.observerCallout
keybag is required
keybag is not required
secret
Unknown stash mode (%d)
passcode
keybagType
            descriptor: %@
            keybagType: %d
            passcode: %@
<PRESENT>
<NULL>
com.apple.softwareupdateservicesd
[<_SUAutoInstallForecastDateCache:%p> 
ForecastScheduleType=%@, 
startDate=%@, 
startDateRounded=%@, 
endDate=%@, 
endDateRounded=%@
Download instance is nil
download not class SUDownload
descriptor instance is nil
restoreVersion
productVersion
productBuildVersion
releaseType
SURollbackDescriptor:
              RestoreVersion: %@
              ProductVersion: %@
              ProductBuildVersion: %@
              ReleaseType: %@
Attempting to load plugin
Unable to load bundle with nil path
Unable to create bundle from bundle path: %@
Failed to load plugin bundle: %@ with error: %@
NSPrincipalClass
Unable to load plugin principalClassName: %@
plugin's principal class does not respond to awakeFromBundle: %@
%@ %@
Software Update
Apple, Inc.
notSpecified
incremental
full
emergency
unknown
publisher
productSystemName
prerequisiteBuild
prerequisiteOS
downloadSize
unarchiveSize
msuPrepareSize
installationSize
minimumSystemPartitionsize
updateType
documentation
autoDownloadAllowableForCellular
downloadableOverCellular
downloadable
streamingZipCapable
disableSiriVoiceDeletion
disableCDLevel4
disableAppDemotion
disableInstallTonight
rampEnabled
criticalOutOfBoxOnly
setupCritical
criticalDownloadPolicy
SEPTBMDigest
RSEPTBMDigest
releaseDate
hideInstallAlert
audienceType
preferenceType
upgradeType
promoteAlternateUpdate
isSplatOnly
systemPartitionPadding
%@/%@/%u/%u
            Publisher: %@
            HumanReadableUpdateName: %@
            ProductSystemName: %@
            ProductVersion: %@
            ProductBuildVersion: %@
            PrerequisiteBuild: %@
            PrerequisiteOS: %@
            ReleaseType: %@
            DownloadSize: %@
            UnarchiveSize: %@
            MSUPrepareSize: %@
            PreparationSize: %@
            InstallationSize: %@
            UpdateType: %@
            Downloadable: %@
            DownloadableOverCellular: %@
            AutoDownloadableOverCellular: %@
            AutoUpdateEnabled: %@
            StreamingZipCapable: %d
            TotalRequiredFreeSpace: %@
            Documentation: %@
            SiriVoiceDeletion: %d
            CDLevel4Deletion: %d
            appDemotionDisabled: %d
            installTonightDisabled: %d
            rampEnabled: %d
            setupCritical: %@
            criticalOutOfBoxOnly: %d
            criticalDownloadPolicy: %@
            releaseDate: %@
            mdmDelayInterval: %@
            assetID: %@
            hideInstallAlert %@
            audienceType %@
            preferenceType %@
            upgradeType %@
            promoteAlternateUpdate: %@
            isSplatOnly: %@
SUS-2.0
com.apple.softwareupdateservices.errors
SUInstallationConstraintsUnmet
SUMDMInstallationRequest
SUAutodownloadWillRetry
SUActivationServiceMessageType
SUActivationServiceMessage
SUActivationServiceAvailable
SUUserRequested
SUAdditionalSpaceRequired
SUAdditionalError
SoftwareUpdateConfigurationFlags
SUInstallOptionRequireUpdate
SUInstallOptionDarkBoot
SUDaemonStartedNotification
SUScanType
Background
Foreground
scanIdentifier
com.apple.softwareupdate.autoscan
com.apple.mdm
delayPeriod
RequestedPMV
SUDownloadPhaseStarting
SUDownloadPhaseBrainFetching
SUDownloadPhaseBrainFetchingQueuedLocal
SUDownloadPhaseBrainFetchingQueuedRemote
SUDownloadPhaseBrainFetchingStalled
SUDownloadPhaseBrainVerifying
SUDownloadPhaseBrainExtracting
SUDownloadPhaseFetching
SUDownloadPhaseFetchingStalled
SUDownloadPhaseFetchingPaused
SUDownloadPhaseFetchingQueuedLocal
SUDownloadPhaseFetchingQueuedRemote
SUDownloadPhaseVerifying
SUDownloadPhaseExtracting
SUDownloadPhasePreparingForInstallation
SUDownloadPhaseFetchingQueued
SUMDMSoftwareUpdatePathDefault
SUMDMSoftwareUpdatePathSlow
SUMDMSoftwareUpdatePathFast
Unknown SUMDMSoftwareUpdatePath value: %lu
High
Incremental
Full
Emergency
Splat
Not Specified
Unknonw OSUpdateType: %u
Accepted
Declined
Unanswered
Unknown Status
None
Wifi
v16@?0@"NSString"8
PhoneCall
SyncingData
BatteryTooLow
PasscodeLocked
NetworkRequired
RestoringFromICloud
RestoringFromITunes
InsufficientDiskSpace
InstallationKeybagRequired
CarplayConnected
MediaPlaying
Driving
v28@?0Q8i16^B20
DefaultWiFiOnly
DefaultRoamingRestricted
Auto
CellularOverride
Error
Warning
Unspecified
Alternate
NotPreferred
Preferred
Minor
Major
            isDownloadAllowableForCellular: %@
            hasEnoughDiskSpace: %@
            isDownloadable: %@
            isDownloadFreeForCellular: %@
            isDownloadAllowableForCellular2G: %@
            isDownloadAllowableForCellularRoaming: %@
            isDownloadAllowableForWiFi: %@
Client <%p>: setType: %@
Client <%p>: unable to set client type on connection: %@
v16@?0@"NSError"8
%s failed - connection interrupted: %@ error: %@
-[SUManagerClient _setClientType]_block_invoke_2
Client "%@" called %s
-[SUManagerClient isScanning:]
-[SUManagerClient isScanning:]_block_invoke
-[SUManagerClient scanForUpdates:withScanResults:]
-[SUManagerClient scanForUpdates:withScanResults:]_block_invoke
v24@?0@"SUScanResults"8@"NSError"16
-[SUManagerClient scanForUpdates:withResult:]
-[SUManagerClient scanForUpdates:withResult:]_block_invoke
-[SUManagerClient autoScanAndDownloadIfAvailable:]
-[SUManagerClient autoScanAndDownloadIfAvailable:]_block_invoke
-[SUManagerClient descriptors:]
-[SUManagerClient descriptors:]_block_invoke
-[SUManagerClient descriptor:]
-[SUManagerClient descriptor:]_block_invoke
v24@?0@"SUDescriptor"8@"NSError"16
-[SUManagerClient totalPurgeableSpace]
-[SUManagerClient isClearingSpaceForDownload:]
-[SUManagerClient isClearingSpaceForDownload:]_block_invoke
-[SUManagerClient getDocumentationDataForInstalledUpdateType:error:]
-[SUManagerClient isDownloading:]
-[SUManagerClient isDownloading:]_block_invoke
-[SUManagerClient startDownload:]
-[SUManagerClient startDownload:]_block_invoke
-[SUManagerClient startDownloadWithOptions:withResult:]
-[SUManagerClient startDownloadWithOptions:withResult:]_block_invoke
-[SUManagerClient startDownloadWithMetadata:withResult:]
-[SUManagerClient startDownloadWithMetadata:withResult:]_block_invoke
-[SUManagerClient cancelDownloadWithOptions:withResult:]
-[SUManagerClient cancelDownloadWithOptions:withResult:]_block_invoke
-[SUManagerClient cancelDownload:]
-[SUManagerClient cancelDownload:]_block_invoke
-[SUManagerClient pauseDownload:]
-[SUManagerClient pauseDownload:]_block_invoke
-[SUManagerClient resumeDownload:]
-[SUManagerClient resumeDownload:]_block_invoke
-[SUManagerClient updateDownloadOptions:withResult:]
-[SUManagerClient updateDownloadOptions:withResult:]_block_invoke
-[SUManagerClient updateDownloadMetadata:withResult:]
-[SUManagerClient updateDownloadMetadata:withResult:]_block_invoke
-[SUManagerClient purgeDownloadWithOptions:withResult:]
-[SUManagerClient purgeDownloadWithOptions:withResult:]_block_invoke
-[SUManagerClient purgeDownload:]
-[SUManagerClient purgeDownload:]_block_invoke
-[SUManagerClient download:]
v40@?0@"SUDownload"8@"SUInstallPolicy"16@"SUAutoInstallOperation"24@"NSError"32
-[SUManagerClient downloadAndInstallState:]
-[SUManagerClient downloadAndInstallState:]_block_invoke
v40@?0@"SUDownload"8@"SUInstallPolicy"16@"_SUAutoInstallOperationModel"24@"NSError"32
-[SUManagerClient updatesDownloadableWithOptions:alternateDownloadOptions:replyHandler:]
-[SUManagerClient updatesDownloadableWithOptions:alternateDownloadOptions:replyHandler:]_block_invoke
v32@?0B8B12@"NSError"16@"NSError"24
-[SUManagerClient areUpdatesDownloadableWithOptions:alternateUpdateOptions:preferredUpdateDownloadable:alternateUpdateDownloadable:preferredUpdateError:alternateUpdateError:]
-[SUManagerClient areUpdatesDownloadableWithOptions:alternateUpdateOptions:preferredUpdateDownloadable:alternateUpdateDownloadable:preferredUpdateError:alternateUpdateError:]_block_invoke
-[SUManagerClient deviceHasSufficientSpaceForDownloads:]
-[SUManagerClient deviceHasSufficientSpaceForDownloads:]_block_invoke
-[SUManagerClient deviceHasSufficientSpaceForDownload:]
-[SUManagerClient deviceHasSufficientSpaceForDownload:]_block_invoke
-[SUManagerClient extraSpaceNeededForDownloadWithoutAppPurging:]
-[SUManagerClient extraSpaceNeededForDownloadWithoutAppPurging:]_block_invoke
v24@?0@"NSNumber"8@"NSError"16
-[SUManagerClient currentAutoInstallOperation:withResult:]
-[SUManagerClient currentAutoInstallOperation:withResult:]_block_invoke
v24@?0@"_SUAutoInstallOperationModel"8@"NSError"16
-[SUManagerClient currentPasscodePolicy:]
-[SUManagerClient currentPasscodePolicy:]_block_invoke
v24@?0Q8@"NSError"16
-[SUManagerClient isAutoUpdateEnabled:]
-[SUManagerClient isAutoUpdateEnabled:]_block_invoke
-[SUManagerClient isAutoUpdateScheduled:]
-[SUManagerClient isAutoUpdateScheduled:]_block_invoke
-[SUManagerClient isAutoUpdateScheduled]
-[SUManagerClient isAutoUpdateScheduled]_block_invoke
-[SUManagerClient presentAutoUpdateBanner:]
-[SUManagerClient presentAutoUpdateBanner:]_block_invoke
-[SUManagerClient observeInstallationConstraintChangesForDownload:observer:]
Created installation constraint observer: %@: observers: %@
v32@?0Q8Q16@"NSError"24
-[SUManagerClient registerCSInstallPredicatesOnDate:]
-[SUManagerClient isUpdateReadyForInstallation:]
-[SUManagerClient isUpdateReadyForInstallation:]_block_invoke
-[SUManagerClient isUpdateReadyForInstallationWithOptions:withResult:]
-[SUManagerClient isUpdateReadyForInstallationWithOptions:withResult:]_block_invoke
-[SUManagerClient installUpdateWithInstallOptions:withResult:]
-[SUManagerClient installUpdateWithInstallOptions:withResult:]_block_invoke
-[SUManagerClient installUpdateWithOptions:withResult:]
-[SUManagerClient installUpdateWithOptions:withResult:]_block_invoke
-[SUManagerClient installUpdate:]
-[SUManagerClient installUpdate:]_block_invoke
-[SUManagerClient eligibleRollbackWithOptions:withResult:]
-[SUManagerClient eligibleRollbackWithOptions:withResult:]_block_invoke
v24@?0@"SURollbackDescriptor"8@"NSError"16
-[SUManagerClient rollbackUpdateWithOptions:withResult:]
-[SUManagerClient rollbackUpdateWithOptions:withResult:]_block_invoke
v28@?0B8@"SURollbackDescriptor"12@"NSError"20
-[SUManagerClient previousRollbackWithOptions:withResult:]
-[SUManagerClient previousRollbackWithOptions:withResult:]_block_invoke
-[SUManagerClient isRollingBack:]
-[SUManagerClient isRollingBack:]_block_invoke
-[SUManagerClient scheduleRollbackRebootForLater:]
-[SUManagerClient scheduleRollbackRebootForLater:]_block_invoke
-[SUManagerClient createInstallationKeybagWithOptions:]
-[SUManagerClient createInstallationKeybagWithOptions:]_block_invoke
Client <%p>: unable to create installation keybag: %@
-[SUManagerClient isInstallationKeybagRequired]
-[SUManagerClient isInstallationKeybagRequired]_block_invoke
-[SUManagerClient isInstallationKeybagRequiredForDescriptor:]
-[SUManagerClient isInstallationKeybagRequiredForDescriptor:]_block_invoke
-[SUManagerClient destroyInstallationKeybag]
-[SUManagerClient destroyInstallationKeybag]_block_invoke
-[SUManagerClient slaVersion:]
-[SUManagerClient slaVersion:]_block_invoke
-[SUManagerClient softwareUpdatePathRestriction:]
-[SUManagerClient softwareUpdatePathRestriction:]_block_invoke
-[SUManagerClient isDelayingUpdates:]
-[SUManagerClient isDelayingUpdates:]_block_invoke
-[SUManagerClient delayEndDate:]
-[SUManagerClient delayEndDate:]_block_invoke
v24@?0@"NSDate"8@"NSError"16
-[SUManagerClient setMandatorySoftwareUpdateDictionary:]
-[SUManagerClient setMandatorySoftwareUpdateDictionary:]_block_invoke
-[SUManagerClient getMandatorySoftwareUpdateDictionary:]
-[SUManagerClient getMandatorySoftwareUpdateDictionary:]_block_invoke
v24@?0@"NSDictionary"8@"NSError"16
-[SUManagerClient enableAutomaticUpdateV2:]
-[SUManagerClient enableAutomaticUpdateV2:]_block_invoke
-[SUManagerClient isAutomaticUpdateV2Enabled]
-[SUManagerClient isAutomaticUpdateV2Enabled]_block_invoke
-[SUManagerClient enableAutomaticDownload:]
-[SUManagerClient enableAutomaticDownload:]_block_invoke
-[SUManagerClient isAutomaticDownloadEnabled]
-[SUManagerClient isAutomaticDownloadEnabled]_block_invoke
-[SUManagerClient _registerAutoInstallOperationClientHandler:]
-[SUManagerClient _unregisterAutoInstallOperationClientHandler:]
-[SUManagerClient _consentAutoInstallOperation:withResult:]
-[SUManagerClient _consentAutoInstallOperation:withResult:]_block_invoke
-[SUManagerClient _cancelAutoInstallOperation:withResult:]
-[SUManagerClient _cancelAutoInstallOperation:withResult:]_block_invoke
-[SUManagerClient installServerConfiguration]
-[SUManagerClient installServerConfiguration]_block_invoke
-[SUManagerClient setExclusiveControl:]
-[SUManagerClient setExclusiveControl:]_block_invoke
-[SUManagerClient scheduleDateActivity:]
-[SUManagerClient scheduleDateActivity:]_block_invoke
-[SUManagerClient recordSUAnalyticsEvent:]
-[SUManagerClient submitSUAnalyticsEvent:]
-[SUManagerClient submitAllSUAnalyticsEvents]
-[SUManagerClient submitSUAnalyticsEventsWithName:]
SUManagerClient.m
installationConstraintObserverDidRemoveAllObserverBlocks: %@: observers: %@
Download changed
Client <%p>: establishing connection to softwareupdateservicesd.
Client <%p>: softwareupdateservicesd exit detected.
Client <%p>: connection established to softwareupdateservicesd.
Client <%p>: disconnected from softwareupdateservicesd.
softwareupdateservicesd launch detected.
com.apple.softwareupdateservices.operationTaskQueue
com.apple.softwareupdateservices.appDemotionSettingQueue
com.apple.softwareupdateservices.mainWorkQueue
com.apple.softwareupdateservices.fastWorkQueue
cellular-data
contains-cellular-radio
SerialNumber
DeviceClass
DeviceName
Internal
SigningFuse
UserVisible
time
scheduledby
Event is scheduled before provided time
Event name: %@
Event time:  %@
invalid arguments
com.apple.donotdisturb.server
PersistentConnectionMaintenance
com.apple.softwareupdateservicesd.activity
Alarm %@ is on AutoInstall alarm blacklist. Ignoring alarm
Unknown MAError code: %ld
EnableSso
com.apple.MobileSoftwareUpdate
mobile
Insufficient space for update. Please free up space on the device and try again.
There was a networking error during the update attempt. Please verify your device has a valid network connection.
Failed to find a SU documentation asset.
The device found a malformed Software Update asset on the asset server.
Failed to prepare update.
Failed to prepare the update because a root is installed. Please try downloading again. The device will automatically try downloading a full replacement asset, which has the ability to prepare when a root is installed.
SU asset is corrupted. Please delete the update from settings and try downloading again.
Installing an internal build on a production fused device requires AppleConnect for personalization. Enable AppleConnect from:
 Settings > Internal Settings > Mobile Software Update > check Use AppleConnect.
Personalization failed. This build might not be nominated for installation yet. Please try installing again later.
Failed to download the Software Update catalog from the internal asset server. Please verify that the device is connected to an internal network or VPN and try again.
Failed to query MobileAsset for Software Update asset. Please try again.
MobileAsset software update download failure.
MobileAsset XPC failure.
MobileAsset staging failure.
MobileAsset data processing failure.
MobileAsset unzip failure.
MobileAsset file move failure.
MobileAsset asset install failure.
mobileassetd exited.
StreamingZip extraction error.
Missing MobileAsset entitlement.
mobileassetd daemon not ready to download. Please try again in a moment.
Failed to load the update brain. Please try again.
Download not allowable.
Missing installation Keybag.
DAS failed to run auto install activity.
No update found.
Remote connection lost.
Unknown Error.
No Error.
client is not authorised, SoftwareUpdateServicesd is in exclusive mode
/System/Library/PrivateFrameworks/SoftwareUpdateServices.framework
SoftwareUpdateServices
failed to display notification: %ld
failed to get response from CFUserNotification: %ld
Unexpected response from CFUserNotification %d
Sytem partition growth = %llu bytes
OffloadUnusedApps
com.apple.appstored
addToDate:numberOfDays: unable to add %ld days to date: %f
System container path is %s
failed to exclude system container from backup
Error getting system container: %llu
/var/mobile/Library/SoftwareUpdate/susdKeepAlive
Successfully wrote keep alive file
Failed to write keep alive file
No keep alive file found
Successfully deleted keep alive file
Failed to delete keep alive file
Delete error: %@
queryAssetsForType(%@) - error %@
q24@?0@8@16
%@ IN %K OR %K == NULL
Deleting %@ from MAV1 path
com.apple.MobileAsset.VoiceServices.CustomVoice
com.apple.MobileAsset.VoiceServicesVocalizerVoice
com.apple.MobileAsset.VoiceServices.GryphonVoice
Disabling Splat due to MDM Preferences
Disabling Splat scan due to SUPreference value
Disabling Splat rollback due to MDM Preferences
Disabling Splat rollback due to SUPreference value
Splat-only update not installed. Unable to rollback update
Splat-only update installed, but new update available. Preventing rollback
Splat Rollback disabled by preferences
update_icon
update_fullWidth
images
baseDocumentationURL
releaseNotesSummaryFileName
releaseNotesFileName
licenseAgreementFileName
slaVersionNumber
iconImageName
Failed to load update icon bundle at URL: %@
PreferencesIcon
Failed to load update icon bundle with name: %@/%@
Successfully loaded update icon bundle with name: %@/%@
ReadMeSummary
ReadMe
License
            
hasReadMeSummary: %@
            
hasReadMe: %@
            
hasLicenseAgreement: %@
            
hasIconImageName: %@
            
hasIconImage: %@
            
humanReadableUpdateName: %@
documentation.strings
html
HumanReadableUpdateName
Failed to find file in documentation bundle: %@
__NULL__
progress
downloadOptions
            Descriptor: %@
            DownloadOptions: %@
            Progress: %@
cancelActiveUpdate
promptForConsent
promptForPasscode
        RollbackOptions:
            CancelCurrentUpdate:%@
                promptForConsent:%@
                promptForPasscode:%@
isAutoDownload
isDownloadOnly
activeDownloadPolicy
enabledFor2G
enabledFor3G
enabledFor4G
enabledForWifi
enabledOnBatteryPower
enforceWifiOnlyOverride
downloadFeeAgreementStatus
termsAndConditionsAgreementStatus
enabledForCellularRoaming
            
isAutoDownload: %@
            
isDownloadOnly: %@
            
activeDownloadPolicyType: %@
            
isEnabledFor2G: %@
            
isEnabledFor3G: %@
            
isEnabledFor4G: %@
            
isEnabledForCellularRoaming: %@
            
isEnabledForWifi: %@
            
isEnabledOnBatteryPower: %@
            
enforceWifiOnlyOverride: %@
            
DownloadFeeAgreementStatus: %d
            
TermsAndConditionsAgreementStatus: %d
com.apple.SoftwareUpdateServices.CTDataDelegate
%s: %@
-[CTDataDelegate getPreferredDataSubscriptionContext]_block_invoke
SoftwareUpdateOptInRequired
AllowDownloadOverCellular
AllowDownloadOver2G
DaysToWaitForCellularDownload
AllowAutomaticDownloadOverCellular
MaxBytesOverCellular
PeakStartTime
PeakEndTime
AllowEnhancedDownloadOnNRHDM
OTASoftwareUpdate
Failed to get preferred CTXPCServiceSubscriptionContext
SUDownloadPolicy <%p>:
            
isDownloadFree: %@
            
isDownloadAllowable: %@
            
isDownloadAllowableOver2G: %@
            
isAutoDownloadAllowable: %@
            
maximumDownloadSizeInBytes: %llu
            
numberOfDaysToWaitForCellularDownload: %lu
            
peakStartHour: %ld
            
peakEndHour: %ld
            
AllowEnhancedDownloadOnNRHDM: %@
InternalBuild
AUTO_SU_FAILED_BODY_DEFAULT
UNMET_CONSTRAINT_NO_NETWORK
UNMET_CONSTRAINT_INSUFFICIENT_SPACE
UNMET_CONSTRAINT_LOW_BATTERY
UNMET_CONSTRAINT_ICLOUD_RESTORE
UNMET_CONSTRAINT_KEYBAG_MISSING
UNMET_CONSTRAINT_DEVICE_LOCKED
DEVICE
SOFTWARE_UPDATE
AUTO_SU_FAILED_HEADER
AUTO_SU_FAILED_BODY_KEYBAG_COMMIT
AUTO_SU_FAILED_BODY_ALARM
AUTO_SU_FAILED_BODY_UNPLUGGED
AUTO_SU_FAILED_BODY_ERROR_CODE_AND_STRING
[Internal Only]
failed to create alert message header
failed to create alert message body
Posting install tonight failure notification with error: %@
com.apple.softwareupdateservices.coreTelephonyQueue
Initializing primary network type: %@
Initializing cellular type: %@
deallocating SUNetworkMonitor
Failed to get network path evaluator
SUNetworkMonitor.m
Network type changed from:%@ to:%@
Cellular type changed from:%@ to:%@
nodename
www.apple.com
ResolverBypass
Received _networkReachabilityCallback: %x
Refreshing network type with flags: %x
Refreshing cellular type
https://www.apple.com
Failed to create nw_endpoint_t
Failed to create nw_path_evaluator_t
Failed to create nw_path_t
CoreTelephony returned error from getDataStatus: %@
Attempting to reestablish connection and query current data type
CoreTelephony returned error from getDataStatus after reconnection: %@
getInternetDataStatusSync: returned nil CTDataStatus
Error getting internet data status: %@
Determining network type from cellular data indicator: %d
Unable to determine network type from cellular data indicator: %d
Error getting current data service descriptor: %@
Failed to get international data status: %@
Error copying data subscription context: %@
Error copying registration status: %@
Received delegate callback: %s:
-[SUNetworkMonitor displayStatusChanged:status:]_block_invoke
-[SUNetworkMonitor operatorBundleChange:]_block_invoke
-[SUNetworkMonitor carrierBundleChange:]_block_invoke
-[SUNetworkMonitor internetDataStatus:]_block_invoke
com.apple.SoftwareUpdate.EmbeddedSoftwareUpdateUsage
UserInteractionType
DaysSinceLastUpdate
PreferredPaneDownloadOnlyTapped
AlternatePaneDownloadOnlyTapped
PreferredPaneDownloadAndInstallTonightTapped
AlternatePaneDownloadAndInstallTonightTapped
PreferredPaneDownloadAndInstallNowTapped
AlternatePaneDownloadAndInstallNowTapped
PreferredPaneOpenStorageTapped
AlternatePaneOpenStorageTapped
PreferredPaneLearnMoreTapped
AlternatePaneLearnMoreTapped
PreferredPaneInstallNowTapped
AlternatePaneInstallNowTapped
PreferredPaneInstallLaterTapped
AlternatePaneInstallLaterTapped
AutoUpdateSwitchToggledOn
AutoUpdateSwitchToggledOff
CurrentAutoUpdateStatus
AutoInstallSystemDataFilesSwitchToggledOn
AutoInstallSystemDataFilesSwitchToggledOff
CurrentAutoInstallSystemDataFilesStatus
AutoDownloadSwitchToggledOn
AutoDownloadSwitchToggledOff
AutoUpdatesDisabledFromSheet
AutoUpdatesCanceledFromSheet
AutoUpdateSheetDismissed
UpdateDeletedFromUI
analyticsEventName
analyticsEventUUID
analyticsEventPayload
com.apple.SUServices.CoreAnalyticsEventQueue
invalid key passed to setEventPayloadEntry
invalid key/numberValue passed to setEventPayloadEntry
invalid key/stringValue passed to setEventPayloadEntry
invalid key passed to setEventPayloadEntrytoNull
invalid key passed to removePayloadEntry
EventName: %@ EventUUID: %@ EventPayload: %@
Carrier SU download policy: %@
<%@>
            
isDownloadable: %@
            
CellularDownloadFree: %@
            
CellularDownloadAllowable: %@
            
CellularDownloadAllowableOver2G: %@
            
CellularDownloadAllowableWhileRoaming: %@
            
WiFiDownloadAllowable: %@
Unable to create space options for null descriptor
Unable to determine sufficient space with null space options
Cellular download not allowable due to SU asset configuration
Cellular download not allowed because device is not cellular capable
Cellular download not allowed because cellular data not enabled for device
Cellular download not allowed because we have no carrier policy
Cellular download not allowed because carrier policy prevents cellular download
Cellular download not allowed because cellular fee agreement declined
Network type is inexpensive HDM. SU download allowed
Cellular download not allowed because wifi-only days unmet. Discovery date: %@ Current date: %@ DaysToWait: %lu
Cellular download not allowed because unknown update discovery date
Cellular download not allowed because update is larger than carrier maximum download size
%s preventing download on expensive network
-[SUDefaultDownloadPolicy _isDownloadableForNetworkType:error:cellularFeesApply:powerRequired:]
q24@?0q8q16
Device does not currently fall within 5G HDM policy: Network type: %@ NWPath isExpensive: %@
Tonight
TomorrowNight
Later
AutoInstallForecast <%p> :
            unlockStart = %@
            unlockEnd = %@
            suStart = %@
            suEnd = %@
            firstUnlock = %@
            _scheduleType = %@
UnlockStart
UnlockEnd
SUStart
SUEnd
firstUnlock
SUAutoDownloadWiFiPeriodDidEndNotification
Cellular download not allowable due to SUAutoDownloadPolicy
Expensive network download not allowable due to SUAutoDownloadPolicy
DISK_SPACE_HEADER
APP_DEMOTION_BODY
DISK_SPACE_DEFAULT
CANCEL_BUTTON
InstallOptions
darkBootKey
requiredKey
managedKey
skipActivationCheck
clientNameKey
ignorableConstraintsKey
            ClientName: %@
            DarkBoot: %@
            isManaged: %@
            skipActivationCheck: %@
            Installation required: %@
            IgnorableConstraints: %@
scanOptions
Delay window is outside of valid range. Setting MDM delay window to 0
Using override SUMDMSoftwareUpdatePath: %@
Using requestedPMV set in SUS defaults: %@
            RequestedProductMarketingVersion: %@
            UseDelayPeriod: %@
            Preferred Descriptor: %@
            Alternate Descriptor: %@
PreferredDescriptor
AlternateDescriptor
SUPreferencesChangedNotification
SUPreferencesChangedNotificationAutoUpdate
SUAutomaticUpdateV2Enabled
com.apple.softwareupdateservices.preferencesWorkLoop
SUUpdateRequiredFromFactory
Sets mandatory update dictionary value SUMandatoryUpdateRequiredFromFactory
SUCheckForUpdateFromFactory
Sets mandatory update dictionary value SUMandatoryUpdateCheckForUpdateFromFactory
SUUpdateRequiredOnErase
Sets mandatory update dictionary value SUMandatoryUpdateRequiredOnErase
SUCheckForUpdateOnErase
Sets mandatory update dictionary value SUMandatoryUpdateCheckForUpdateOnErase
SUDisableManagedRequest
Disables managed update requests
SUDisableUserWiFiOnlyPeriod
Disables wifi-only download period, allowing cellular download immediately
SUDisableBuildNumberComparison
Disables build version number comparison
SUAllowSameBuildUpdates
Allows device to update to the same build version as currently installed version
SUDisableAvailabilityAlerts
Disabled SU availability alerts
SUDisableAutoDownload
Disabled automatic downloads of software update assets
SUScanWeeklyInternally
Changes the auto scan interval to once a week for internal builds
SUForceFullReplacement
Forces the device to only return full replacement update assets
SUDisbaleFullReplacementFallback
Disabled full replacement fallback if prepare fails with patching error
SUUpdateDelayInterval
Sets the managed update delay period to specified number of days. Requires SUShouldDelayUpdates = true
SUDelayInMinutes
Sets the managed update delay period interval to be in minutes instead of days
SUShouldDelayUpdates
Enables managed update delay period
SUUnmetConstraints
Simulates unmet installation constraints
SURequestedPMV
Simulates an MDM administrator pushing a requested product marketing version
SUAutoUpdateForceOn
Forces the auto install setting ON for client option and asset attribute
SUAutoUpdateForceOff
Forces the auto install setting OFF for client option and asset attribute
SUAutoSUStartDelta
Sets automatic installation start time to N seconds after prepare completes.
SUAutoSUEndDelta
Sets automatic installation end time to N seconds after prepare completes
SUAutoSUUnlockStartDelta
Sets automatic installation unlock start time to N seconds after prepare completes
SUAutoSUUnlockEndDelta
Sets automatic installation unlock end time to N seconds after prepare completes
Enables/Disabled automatic update client setting
SUBannerDelay
Sets the delay value in seconds for presenting auto update banner (30 minutes by default)
SUAutoDownloadDeletedBuild
Enabled auto download of deleted builds
SUMDMSoftwareUpdatePath
Sets the MDM user initiated scan SU path
0 = Default
1 = slow lane
2 = fast lane
SUAnalyticsSubmissionInterval
Sets the time interval(in minutes) for the submission of Analytics events
SUQueryCustomerBuilds
If set to true, MobileAsset query for SU, brain and doc asset will have NULL ReleaseType
SUDisableRollback
Disabled Splat rollback
SUUseEmptyPatches
If set to true, MobileAsset query for SU, brain and doc asset will use "Empty" ReleaseType
SUAllowSplatUpdate
Allow Splat software updates
SUAllowSameSplatUpdate
Allow updating Splat to the same version as currently installed splat
SUSplatScanInterval
Auto-scan interval for splat updates
SUAutoInstallSystemDataFilesForceOn
Forces the auto install system and data files setting ON for client option and asset attribute
SUAutoInstallSystemDataFilesForceOff
Forces the auto install system and data files setting OFF for client option and asset attribute
SUAutoInstallSystemDataFiles
Auto install system and data files
Unknown SUPreferenceType for key: %@ type:%ld
%s: posting change notification... Key: %@: enabled: %@
-[SUPreferences _setBooleanPreferenceForKey:value:]
%s: posting change notification... Key: %@: Value: %@
-[SUPreferences _setObjectPreferenceForKey:value:]
Unable to enabled auto update while auto download is disabled
Setting auto install system and data files to %@
enabled
disabled
RegionCode
Failed to copy region code: %d
delay interval is outside 1-90 day range. Defaulting to %d day delay interval
isDelayed:%d delayedStartDate: %@ delayedEndDate: %@
isDelayedKey
delayedStartDateKey
delayedPeriod
Failed to create copy of SUManagedDeviceUpdateDelay
/System/Library/PrivateFrameworks/CarKit.framework/CarKit
Failed to open CarKit dylib
CARSessionStatus
Failed to get class CARSessionStatus
dynamically loaded CARSessionStatus class does not respond to selector initAndWaitUntilSessionUpdated
dynamically loaded CARSessionStatus class does not respond to selector alloc
Failed to dynamically load CARSessionStatus. Setting carplay enabled to NO
Cellular download not allowable due to SUDefaultWiFiOnlyDownloadPolicy
Expensive network download not allowable due to SUDefaultWiFiOnlyDownloadPolicy
Installation alert predicate conditions met
com.apple.softwareupdateservicesd.installAlert
self.%@.value >= %@
Failed to create battery level _CDContextualPredicate
Failed to create carplay _CDContextualPredicate
%@ - network constraint changed (satisfied? %@)
%@ - iTunes sync constraint changed (satisfied? %@)
%{public}@
%@ - iTunes restore constraint changed (satisfied? %@)
%@ - iCloud restore constraint changed (satisfied? %@)
%@ - is driving constraint changed (satisfied? %@)
[Token] Create: %@
[Token] Dealloc: %@
[Token] Invalidate: %@
[InstallationConstraintObserver] Create: %@ (unsatisfied constraints: %@)
[InstallationConstraintObserver] Dealloc: %@
[InstallationConstraintObserver] Invalidate: %@
%@ - unsatisfied constraints changed (unsatisfied? %@)
%@ - media playing constraint changed (satisfied? %@)
No KeybagInterface instance provided to SUInstallationConstraintMonitorForBatteryDiskAndKeybag initializer
%@ - timer scheduled for interval @ %f s
%@ - timer fired @ %f s
%@ - timer invalidated
%@ - evaluating constraints for disk/battery/passcode/keybag
%@ - exception caught: %@
%@ - battery constraint changed (satisfied? %@)
evaluateDisk: download: (%p)
%@ - disk constraint changed (satisfied? %@)
%@ - passcode constraint changed (satisfied? %@)
%@ - keybag constraint changed (satisfied? %@)
%@ - phone call constraint changed (satisfied? %@)
%@ - carplay constraint changed (satisfied? %@)
SUSFollowUpController
SUAssetStateMatcher
SUAssetMatcher
NSObject
SUSFollowUpUpdateAvailable
SUSFollowUpRollbackDetected
SUComposedInstallationConstraintMonitor
SUInstallationConstraintMonitorDelegate
SUInstallationConstraintMonitor
SUSoftwareUpdateAssetMatcher
SUAutoUpdatePasscodePolicy
_SUAutoInstallOperationModel
NSSecureCoding
NSCoding
NSCopying
SUPurgeOptions
SUManifestBuilder
SUDocumentationAssetMatcher
SUAssetSupport
SUDownloadOptions
SUDocumentationData
SUSpacePurgeOptions
SUInstallationConstraintMonitorNetwork
SUNetworkObserver
SUSFollowUp
SUOptionsBase
SUSpaceCheckResults
SUSpace
SUInstallationConstraintMonitorSync
SUScanOptions
SUAutoInstallOperation
SUAutoInstallOperationClientHandler
SUOperationProgress
SUInstallationConstraintMonitorRestoreFromITunes
SUInstallationConstraintMonitorRestoreFromICloud
SUEmptyObject
SUState
NSKeyedUnarchiverDelegate
SUInstallationConstraintMonitorDriving
_SUInstallationConstraintBlockObserverToken
SUInvalidatable
SUInstallationConstraintObserver
SUUpdateDiscoveryDateManager
SUInstallationConstraintMonitorMediaPlaying
SUSFollowUpAutoUpdate
SUInstallPolicy
SUInstallationConstraintMonitorBase
SUKeybagPreventLockAssertion
BSInvalidatable
SUKeybagInterface
SUKeybagOptions
_SUAutoInstallForecastDateCache
SUInstallationConstraintMonitorForBatteryDiskAndKeybag
SUKeybagInterfaceObserver
SURollbackDescriptor
SUPluginLoader
SUDescriptor
SUDefaultCellCarrierOverrideDownloadPolicy
SUManagerServerInterface
SUManagerClientInterface
SUManagerClient
SUInstallationConstraintObserverDelegate
SUPreferencesObserver
SUPreferenceEntry
SUUtility
SUDocumentation
SUDownload
SURollbackOptions
SUDownloadMetadata
NSMutableCopying
SUMutableDownloadMetadata
CTDataDelegate
CoreTelephonyClientDataDelegate
SUCarrierDownloadPolicyProperties
SUAutoInstallFailureNotification
SUNetworkMonitor
CoreTelephonyClientRegistrationDelegate
CoreTelephonyClientCarrierBundleDelegate
SUAnalyticsEvent
SUDownloadPolicy
SUDefaultDownloadPolicy
SUAutoInstallForecast
SUInstallationConstraintMonitorPhoneCalls
SUAutoDownloadPolicy
SUAppPurgingNotification
SUDownloadPolicyFactory
SUInstallOptions
SUMDMScanOptions
SUScanResults
SUSFollowUpBadgeOnly
SUPreferences
SUManagedDeviceUpdateDelay
SUInstallationConstraintMonitorCarplay
CARSessionObserving
SUDefaultWiFiOnlyDownloadPolicy
SUCSScheduler
SUDefaultRoamingRestrictedDownloadPolicy
copyCarrierBundleValueWithDefault:keyHierarchy:bundleType:error:
assetId
getCurrentDataServiceDescriptorSync:
removeAllObjects
copyRegistrationStatus:error:
getCurrentDataSubscriptionContextSync:
assetIds
decodeObjectOfClasses:forKey:
isEqualToDate:
null
removeItemAtPath:error:
isEqualToString:
setLocale:
assetProperty:
getInternationalDataAccessSync:error:
numberFromString:
removeLastObject
count
setValue:forKey:
UTF8String
isExpensive
removeObject:
getInternetDataStatusSync:
defaultCenter
initWithDictionary:
countByEnumeratingWithState:objects:count:
setWithArray:
removeObjectAtIndex:
numberWithBool:
defaultManager
getLocalUrl
setWithObjects:
createFileAtPath:contents:attributes:
defaultTimeZone
encodeBool:forKey:
numberWithFloat:
attributes
numberWithInt:
encodeDouble:forKey:
isAvailable
setRemoteObjectInterface:
sharedConnection
addEntriesFromDictionary:
initWithFireInterval:repeatInterval:leewayInterval:queue:handler:
encodeFloat:forKey:
numberWithUnsignedInteger:
isBeforeDate:
addKeyValueArray:with:
augmentResultsWithState:
laterDate:
getPreferredDataSubscriptionContextSync:
setRequestedProductVersion:
encodeInt64:forKey:
numberWithUnsignedLongLong:
addKeyValuePair:with:
initWithFormat:arguments:
encodeInt:forKey:
objectAtIndex:
handleFailureInMethod:object:file:lineNumber:description:
addObject:
length
setMinute:
encodeInteger:forKey:
objectAtIndexedSubscript:
setResourceValue:forKey:error:
setNanosecond:
encodeObject:forKey:
objectEnumerator
currentAudioAndVideoCallCount
setExportedInterface:
initWithLocaleIdentifier:
results
objectForKey:
addObserver:selector:name:object:
resume
initWithMachServiceName:options:
setExportedObject:
objectForKeyedSubscript:
deregisterCallback:
purge:
enforcedSoftwareUpdateDelayInDays
unsignedIntegerValue
loadAndReturnError:
softwareUpdatePath
enumerateKeysAndObjectsUsingBlock:
initWithObjects:
purgeAndReturnError:
unsignedLongLongValue
returnTypes:
isRapidSecurityResponseInstallationAllowed
enumerateObjectsUsingBlock:
localWakingRegistrationWithIdentifier:contextualPredicate:callback:
currentHandler
additionalServerParams
setNumberStyle:
sortedArrayUsingComparator:
isRapidSecurityResponseRemovalAllowed
initWithQueue:
orPredicateWithSubpredicates:
setObject:forKey:
localizedStringForKey:value:table:
hashTableWithOptions:
purgeSync
allKeys
setObject:forKeyedSubscript:
allObjects
setHour:
initWithType:
localizedStringFromDate:dateStyle:timeStyle:
errorWithDomain:code:userInfo:
path
queryInstalledAssetIds
allValues
localizedStringFromNumber:numberStyle:
setSecond:
evaluatePredicate:
runQueryAndReturnError:
isSoftwareUpdateResisted
insertObject:atIndex:
evaluateWithObject:
autoupdatingCurrentCalendar
queryMetaDataSync
longLongValue
UUID
state
setSessionObserver:
longValue
setPredicate:
stringByAppendingFormat:
dictionary
mainBundle
performSelectorOnMainThread:withObject:waitUntilDone:
rangeOfString:options:range:
stringByAppendingPathExtension:
boolValue
dictionaryWithDictionary:
schedule
userContext
isSupervised
stringByAppendingString:
dictionaryWithObjects:forKeys:count:
imageNamed:inBundle:withConfiguration:
bundleIdentifier
currentSession
stringByReplacingCharactersInRange:withString:
indexOfObject:
isToday:
dictionaryWithObjectsAndKeys:
mapTableWithKeyOptions:valueOptions:
bundleWithPath:
fileExistsAtPath:
stringWithFormat:
isTomorrow:
setInterruptionHandler:
dataWithContentsOfURL:
indicator
userInfo
bundleWithURL:
code
fileExistsAtPath:isDirectory:
URLByAppendingPathComponent:
date
infoDictionary
setInvalidationHandler:
compare:
setDateFormat:
postedDate
fileSystemRepresentation
andPredicateWithSubpredicates:
refreshState
dateByAddingTimeInterval:
setSupervised:
compare:options:
callCenterWithQueue:
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
predicateForCellConnectionAvailability:
dateByAddingUnit:value:toDate:options:
valueForKey:
UUIDString
dateFromComponents:
predicateForKeyPath:equalToValue:
vehicularOperatorState
URLByDeletingLastPathComponent
registerCallback:
dateFromString:
appendString:
predicateForKeyPath:withFormat:
intValue
vehicularState
keyPathForBatteryLevel
components:fromDate:
predicateForWiFiConnectionAvailability:
synchronousRemoteObjectProxyWithErrorHandler:
dateWithTimeIntervalSince1970:
keyPathForCallInProgressStatus
setDiscretionary:
predicateFormat
integerValue
componentsSeparatedByString:
setTimeZone:
dateWithTimeIntervalSinceReferenceDate:
keyPathForCarplayConnectedStatus
interfaceWithProtocol:
setTimeoutIntervalForResource:
predicateWithFormat:
setDoNotBlockBeforeFirstUnlock:
decodeBoolForKey:
array
initWithArray:
minute
domain
keyPathForCellConnectionQuality
firstObject
_setQueue:
arrayWithArray:
initWithAssetType:
mutableCopy
setAdditionalServerParams:
decodeDictionaryWithKeysOfClasses:objectsOfClasses:forKey:
keyPathForWiFiConnectionQuality
decodeDoubleForKey:
systemTimeZone
setQueriesLocalAssetInformationOnly:
containsObject:
initWithBase64EncodedString:options:
arrayWithObject:
decodeFloatForKey:
containsString:
arrayWithObjects:
decodeInt64ForKey:
initWithBundleType:
setAllowsCellularAccess:
isAfterDate:
formatDateAsLongYMDHMSZPosixLocaleWithDate:
preferredLanguages
initWithCalendarIdentifier:
decodeIntForKey:
setAllowsExpensiveAccess:
arrayWithObjects:count:
remoteObjectProxy
copy
remoteObjectProxyWithErrorHandler:
decodeIntegerForKey:
timeIntervalSinceReferenceDate
decodeObjectOfClass:forKey:
init
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
findMatchFromCandidates:error:
modifyMADownloadOptions:
assetType
matcherInfo
T@"NSString",R,N
T@"NSDictionary",R,N
initWithType:interestedStates:
_findMatchFromCandidates:error:
_modifyMADownloadOptions:
_matchesFilterType:
interestedStates
_assetType
_interestedStates
_matcherInfo
T@"NSString",R,N,V_assetType
Ti,R,N,V_interestedStates
T@"NSDictionary",R,N,V_matcherInfo
dealloc
installationConstraintMonitor:constraintsDidChange:
isSatisfied
unsatisfiedConstraintsWithIgnorableConstraints:
delegate
setDelegate:
representedConstraints
unsatisfiedConstraints
T@"<SUInstallationConstraintMonitorDelegate>",N
TQ,R,N
initWithInternalQueue:withInstallationConstraintMonitors:
_queue_noteInstallationConstraintMonitor:constraintsDidChange:
_queue_delegate
_queue_clearDelegate
_queue_representedConstraints
_queue_unsatisfiedConstraints
_queue_unsatisfiedConstraintsWithIgnorableConstraints:
_queue_invalidateChildConstraintMonitors
_queue_setDelegate:
constraintMonitors
.cxx_destruct
_queue
_queue_installationConstraintMonitors
T@"NSSet",R,&,N,V_queue_installationConstraintMonitors
compareNumerically:
matcherForCurrentDevice
matcherForCurrentDeviceWithInterestedStates:
matcherForCurrentDeviceWithInfo:
initWithVersion:build:productType:releaseType:interestedStates:matcherInfo:
_createCleanOSVersionString:
_getIndexOfHighestVersionedAsset:usingFirstKey:secondKey:
_createSortedAndFilteredAssetResults:usingFirstKey:secondKey:
_copyMatchingAssetsAfterSortingAndFiltering:
_filterPatchesIfNecessary:
_isDeviceEligibleForUpdate:
_isPossibleSoftwareUpdate:
fromBuild
fromVersion
fromProductType
fromReleaseType
compareWithTatsuForEligibility
setCompareWithTatsuForEligibility:
preferences
setPreferences:
_fromBuild
_fromVersion
_fromProductType
_fromReleaseType
_checkTatsu
_preferences
T@"SUPreferences",&,N,V_preferences
T@"NSString",R,N,V_fromVersion
T@"NSString",R,N,V_fromBuild
T@"NSString",R,N,V_fromProductType
T@"NSString",R,N,V_fromReleaseType
TB,N,V_checkTatsu
passcodePolicyInterface:passcodePolicyTypeChanged:
sharedInstance
_init
currentPolicyType
_isValidPasscodePolicyType:
stringForCurrentPolicy
setCurrentPolicyType:
addObserver:
removeObserver:
_queue_observers
_observerCalloutQueue
_stateChangedNotifyToken
_queue_currentPolicyType
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
copyWithZone:
forecast
setForecast:
agreementStatus
setAgreementStatus:
setId:
_forecast
_agreementStatus
T@"NSUUID",&,N,V_id
T@"SUAutoInstallForecast",&,N,V_forecast
Ti,N,V_agreementStatus
notifyUser
setNotifyUser:
userRequested
setUserRequested:
_notifyUser
_userRequested
TB,N,V_notifyUser
TB,N,V_userRequested
manifestFromDescriptor:
matcherForInstalledDocumentationFromAsset:
matcherDocumentationFromAsset:
initWithSoftwareUpdateAsset:
initWithSoftwareUpdateAsset:limitingToStates:
_queryPredicateForProperties:
_sortedMatcherPredicatesFromSoftwareUpdateAsset:
_suAsset
tryCreateDescriptorFromSoftwareUpdateAsset:withReleaseDate:
tryCreateDocumentationFromDocumentationAsset:
_queue_cleanupAllInstalledAssetsOfType:
cleanupAllInstalledAssets:
_cleanupAllAssetsOfType:
cleanupAllSoftwareUpdateAssets
cleanupAllSoftwareUpdateAndRelatedAssets
requestCatalogDownload:
_gestaltValueForKey:
findAssetWithMatcher:localSearch:error:
setAssetQueryFilters:
setSUFilters:
copySUAssetForAssetID:
copyInstalledAssets
findAssetWithMatcher:localSearch:releaseDate:error:
findExactMatchInAssets:forAssetId:
filterSuAssets:MatchingDescriptor:
copySuAssetInCatalogMatchingDescriptor:exactAssetIdMatch:installedOnly:
copySuAssetInCatalogMatchingDescriptor:
copySuAssetInstalledExactlyMatchingDescriptor:
queryMetaDataOfType:WithFilter:installedOnly:error:
purgeMSUUpdate:
getLocalDefaultSoftwareUpdateAssetIfExists
getLocalDefaultSoftwareUpdateAssetIfExistsWithReleaseDate:
getInstalledDocumentationAssetFromSoftwareUpdateAssetIfExists:
defaultAssetDownloadOptionsWithPriority:
assetDownloadOptionsForDocumentation
assetDownloadOptionsFromMetadata:descriptor:priority:forBrain:
updateIsPreCRelease:
minorOSVersion:
OSVersionComponent:osVersion:
isDownloadingOrInstalled
isDownloading
isInstalled
isEmergencyUpdate
cancelDownloadIfNecessary
cleanupAsset
cancelDownload
purge
initWithDescriptor:
initWithMetadata:andDescriptor:
setActiveDownloadPolicyType:
activeDownloadPolicyType
setDownloadFeeAgreementStatus:
activeDownloadPolicy
setActiveDownloadPolicy:
setAllowUnrestrictedCellularDownload:
allowsUnrestrictedCellularDownload
allowCellular
allowExpensiveNetwork
isEnabledForExpensiveNetwork
isEnabledForCellularRoaming
isEnabledForCellular
isEnabledForWifi
isEnabledOnBatteryPower
isCacheDeleteSpecialCaseEnabled
isAppOffloadEnabled
isDownloadOnly
setDownloadOnly:
isAutoDownload
setAutoDownload:
allowUnrestrictedCellularDownload
downloadFeeAgreementStatus
termsAndConditionsAgreementStatus
setTermsAndConditionsAgreementStatus:
descriptor
downloadDescriptor
setDownloadDescriptor:
_downloadOnly
_autoDownload
_allowUnrestrictedCellularDownload
_downloadFeeAgreementStatus
_termsAndConditionsAgreementStatus
_descriptor
_activeDownloadPolicyType
_stateQueue
_downloadDescriptor
T@"SUDescriptor",&,N,V_downloadDescriptor
downloadOnly
TB,N,GisDownloadOnly,V_downloadOnly
autoDownload
TB,N,GisAutoDownload,V_autoDownload
Ti,N,V_downloadFeeAgreementStatus
Ti,N,V_termsAndConditionsAgreementStatus
Ti,N
T@"<SUDownloadPolicy>",&,N
TB,N,V_allowUnrestrictedCellularDownload
T@"SUDescriptor",R,&,N,V_descriptor
enabledForCellular
TB,R,N,GisEnabledForCellular
enabledForWifi
TB,R,N,GisEnabledForWifi
enabledOnBatteryPower
TB,R,N,GisEnabledOnBatteryPower
enabledForCellularRoaming
TB,R,N,GisEnabledForCellularRoaming
enabledForExpensiveNetwork
TB,R,N,GisEnabledForExpensiveNetwork
cacheDeleteSpecialCaseEnabled
TB,R,N,GisCacheDeleteSpecialCaseEnabled
appOffloadEnabled
TB,R,N,GisAppOffloadEnabled
buildVersion
setBuildVersion:
humanReadableUpdateName
setHumanReadableUpdateName:
readme
setReadme:
readmeSummary
setReadmeSummary:
license
setLicense:
_buildVersion
_humanReadableUpdateName
_readme
_readmeSummary
_license
T@"NSString",&,N,V_buildVersion
T@"NSString",&,N,V_humanReadableUpdateName
T@"NSData",&,N,V_readme
T@"NSData",&,N,V_readmeSummary
T@"NSData",&,N,V_license
completionQueue
setCompletionQueue:
neededBytes
setNeededBytes:
enableCacheDelete
setEnableCacheDelete:
enableAppOffload
setEnableAppOffload:
cacheDeleteUrgency
setCacheDeleteUrgency:
appOffloadUrgency
setAppOffloadUrgency:
cacheDeleteVolume
setCacheDeleteVolume:
appOffloadVolume
setAppOffloadVolume:
_completionQueue
_neededBytes
_enableCacheDelete
_enableAppOffload
_cacheDeleteVolume
_appOffloadVolume
_cacheDeleteUrgency
_appOffloadUrgency
T@"NSObject<OS_dispatch_queue>",&,N,V_completionQueue
TQ,N,V_neededBytes
TB,N,V_enableCacheDelete
T@"NSString",&,N,V_cacheDeleteVolume
Ti,N,V_cacheDeleteUrgency
TB,N,V_enableAppOffload
T@"NSString",&,N,V_appOffloadVolume
Tq,N,V_appOffloadUrgency
initOnQueue:withRepresentedInstallationConstraints:andDownload:
cellularChangedFromCellularType:toCellularType:
networkChangedFromNetworkType:toNetworkType:
cellularRoamingStatusChanged:
carrierBundleChanged
operatorBundleChanged
initOnQueue:withDownload:
initOnQueue:withDownload:networkMonitor:
_queue_networkDidChange
_queue_networkMonitor
_queue_hasNetwork
hasSufficientFreeSpace
setHasSufficientFreeSpace:
needsCacheDelete
setNeedsCacheDelete:
needsAppOffload
setNeedsAppOffload:
additionalBytesRequired
setAdditionalBytesRequired:
_hasSufficientFreeSpace
_needsCacheDelete
_needsAppOffload
_additionalBytesRequired
TB,N,V_hasSufficientFreeSpace
TB,N,V_needsCacheDelete
TB,N,V_needsAppOffload
TQ,N,V_additionalBytesRequired
hasSufficientSpaceWithOptions:error:
hasSufficientSpaceWithOptions:withCompletion:
makeRoomForUpdate:error:
makeRoomForUpdate:completion:
currentFreeSpaceForVolume:
_queue_setSyncing:
_queue_isSyncing
isSplatScan
addType:
removeType:
containsType:
findsAnyUpdate
clearTypes
identifier
setIdentifier:
isForced
setForced:
types
setTypes:
requestedPMV
setRequestedPMV:
MDMUseDelayPeriod
setMDMUseDelayPeriod:
sessionID
setSessionID:
_identifier
_forced
_types
_requestedPMV
_MDMUseDelayPeriod
_sessionID
T@"NSSet",&,N,V_types
T@"NSString",&,N,V_identifier
forced
TB,N,GisForced,V_forced
T@"NSString",&,N,V_requestedPMV
TB,N,V_MDMUseDelayPeriod
T@"NSString",&,N,V_sessionID
autoInstallOperationWasCancelled:
autoInstallOperationDidExpire:withError:
autoInstallOperationDidExpire:
autoInstallOperationIsReadyToInstall:withResponse:
autoInstallOperationPasscodePolicyDidChange:passcodePolicyType:
uniqueIdentifier
_noteAutoInstallOperationWasCancelled
_noteAutoInstallOperationDidExpireWithError:
_noteAutoInstallOperationDidConsent
_noteAutoInstallOperationIsReadyToInstall:
_noteAutoInstallOperationPasscodePolicyChanged:
_initWithClient:clientOwned:id:forecast:agreementStatus:cancelled:expired:
initWithAutoInstallOperationModel:client:
cancel
isExpired
_isEffectivelyScheduled
_isValidForScheduling
_isValidTillDate:
_isDateExpired:
isCanceled
_client
_delegate
_canceled
_expired
_clientOwned
T@"<SUAutoInstallOperationDelegate>",N,V_delegate
T@"SUAutoInstallForecast",R,&,N,V_forecast
expired
TB,R,N,GisExpired,V_expired
canceled
TB,R,N,GisCanceled,V_canceled
T@"NSUUID",R,&,N,V_id
phase
setPhase:
percentComplete
setPercentComplete:
normalizedPercentComplete
setNormalizedPercentComplete:
timeRemaining
setTimeRemaining:
isDone
setIsDone:
_phase
_percentComplete
_normalizedPercentComplete
_timeRemaining
_isDone
T@"NSString",&,N,V_phase
Tf,N,V_percentComplete
Tf,N,V_normalizedPercentComplete
Td,N,V_timeRemaining
TB,N,V_isDone
_queue_beganRestoring
_queue_endedRestoring
_queue_setRestoring:
_queue_isRestoring
_queue_startNotifyToken
_queue_endNotifyToken
_queue_restoreStateChanged
_queue_restoreToken
statePath
currentState
unarchiver:cannotDecodeObjectOfClassName:originalClasses:
unarchiver:didDecodeObject:
unarchiver:willReplaceObject:withObject:
unarchiverWillFinish:
unarchiverDidFinish:
resetDownloadAndScanHistory
resetAllHistory
_stateAsDictionary
load
save
persistFailedPatchDescriptors
loadPersistedFailedPatchDescriptors
setLastDownload:
lastDownload
setPreferredLastScannedDescriptor:
preferredLastScannedDescriptor
setAlternateLastScannedDescriptor:
alternateLastScannedDescriptor
setUpdateDiscoveryDates:
updateDiscoveryDates
lastScannedDescriptorScanOptions
addFailedPatchDescriptor:
_queue_addFailedPatchDescriptor:
setFailedPatchDescriptors:
failedPatchDescriptors
setScheduledManualDownloadWifiPeriodEndTime:
scheduledManualDownloadWifiPeriodEndTime
setScheduledAutodownloadWifiPeriodEndTime:
scheduledAutodownloadWifiPeriodEndTime
setScheduledAutodownloadPolicyChangeTime:
scheduledAutodownloadPolicyChangeTime
setLastScanDate:
lastScanDate
setAutodownloadNeedsOneTimeRetry:
autodownloadNeedsOneTimeRetry
setStashbagPersisted:
stashbagPersisted
setLastProductVersion:
lastProductVersion
setLastProductBuild:
lastProductBuild
setLastProductType:
lastProductType
setLastReleaseType:
lastReleaseType
setUnlockCallbacks:
unlockCallbacks
setMandatoryUpdateDict:
mandatoryUpdateDict
setLastAutoInstallOperationModel:
lastAutoInstallOperationModel
setMdmDelay:
mdmDelay
setInstallPolicy:
installPolicy
setLastDeletedSUAssetID:
lastDeletedSUAssetID
setLastAssetAudience:
lastAssetAudience
setAppliedTime:
appliedTime
setUnderExclusiveControl:
underExclusiveControl
setLastSplatRestoreVersion:
lastSplatRestoreVersion
setLastScannedDescriptorScanOptions:
_lastDownload
_preferredLastScannedDescriptor
_alternateLastScannedDescriptor
_failedPatchDescriptors
_lastScannedDescriptorScanOptions
_scheduledManualDownloadWifiPeriodEndTime
_scheduledAutodownloadWifiPeriodEndTime
_scheduledAutodownloadPolicyChangeTime
_lastScanDate
_autodownloadNeedsOneTimeRetry
_stashbagPersisted
_lastProductVersion
_lastProductBuild
_lastProductType
_lastReleaseType
_lastSplatRestoreVersion
_unlockCallbacks
_mandatoryUpdateDict
_lastAutoInstallOperationModel
_mdmDelay
_installPolicy
_lastDeletedSUAssetID
_lastAssetAudience
_appliedTime
_updateDiscoveryDates
_underExclusiveControl
T@"_SUAutoInstallOperationModel",&,N,V_lastAutoInstallOperationModel
T@"SUDownload",C,N,V_lastDownload
T@"SUDescriptor",C,N,V_preferredLastScannedDescriptor
T@"SUDescriptor",C,N,V_alternateLastScannedDescriptor
T@"NSArray",C,N,V_failedPatchDescriptors
T@"SUScanOptions",&,N,V_lastScannedDescriptorScanOptions
T@"NSDate",&,N,V_scheduledManualDownloadWifiPeriodEndTime
T@"NSDate",&,N,V_scheduledAutodownloadWifiPeriodEndTime
T@"NSDate",&,N,V_scheduledAutodownloadPolicyChangeTime
T@"NSDate",&,N,V_lastScanDate
TB,N,V_autodownloadNeedsOneTimeRetry
TB,N,V_stashbagPersisted
T@"NSString",&,N,V_lastProductVersion
T@"NSString",&,N,V_lastProductBuild
T@"NSString",&,N,V_lastProductType
T@"NSString",&,N,V_lastReleaseType
T@"NSDictionary",&,N,V_unlockCallbacks
T@"NSDictionary",&,N,V_mandatoryUpdateDict
T@"SUManagedDeviceUpdateDelay",&,N,V_mdmDelay
T@"SUInstallPolicy",&,N,V_installPolicy
T@"NSString",&,N,V_lastDeletedSUAssetID
T@"NSString",&,N,V_lastAssetAudience
T@"NSDate",&,N,V_appliedTime
T@"NSDictionary",&,N,V_updateDiscoveryDates
TB,N,V_underExclusiveControl
T@"NSString",&,N,V_lastSplatRestoreVersion
_handleVehicularStateChangeNotification:
_queue_pollSatisfied
_queue_isDriving
invalidate
initWithObserver:
_observer
_invalidated
initWithDownload:
initWithDownload:queue:constraints:
registerObserverBlock:
invalidateWithError:
monitorOfClass:
_removeToken:
_hasAnyBlockObservers
download
_download
_queue_observerBlockTokens
_queue_invalidated
_queue_tokenCount
T@"<SUInstallationConstraintObserverDelegate>",D,N
T@"SUDownload",R,&,N,V_download
initWithDiscoveryDateDictionary:
setDiscoveryDate:forBuildVersion:
discoveryDateforBuildVersion:
dictionaryRepresentation
containsBuildVersion:
_buildVersionArray
_discoveryDateArray
_handlePlaybackChangeNotification:
_queue_mediaPlaying
_mediaRemoteQueue
initWithInstallPolicyType:
_setClientName:
_setType:
_setAutoUpdateEnabled:
_setDarkBoolEnabled:
clientName
setClientName:
skipsAllowed
setSkipsAllowed:
type
setType:
autoUpdateEnabled
useDarkBoot
_clientName
_skipsAllowed
_type
_autoUpdateEnabled
_useDarkBoot
T@"NSString",&,N,V_clientName
TQ,N,V_type
TQ,N,V_skipsAllowed
TB,R,N,V_autoUpdateEnabled
TB,R,N,V_useDarkBoot
_representedConstraints
T@"SUDownload",R,&,N
keybagInterface:hasPasscodeSetDidChange:
keybagInterface:passcodeLockedStateDidChange:
hasPasscodeSet
isPasscodeLocked
hadFirstUnlock
installationKeybagStateForDescriptor:
createInstallationKeybagForDescriptor:withSecret:forUnattendedInstall:
persistKeybagStash
disableKeybagStash
createPreventLockAssertionWithDuration:
stringForStashMode:
_queue_refreshState
_queue_fetchKeybagState
_queue_isPasscodeLockedFromLockState:
_queue_hasPasscodeSetFromLockState:
_queue_setHasPasscodeSet:
_queue_setIsPasscodeLocked:
_queue_hasPasscodeSet
_queue_isPasscodeLocked
TB,R,N
passcode
setPasscode:
setDescriptor:
keybagType
setKeybagType:
_passcode
_keybagType
T@"NSString",&,N,V_passcode
T@"SUDescriptor",&,N,V_descriptor
Ti,N,V_keybagType
initWithForecast:
scheduleType
roundedStartTime
roundedEndTime
calendar
_parseForecast
_isStart:end:withinDateRange:end:
_computeTonightRangeRelativeToDate:extraDayOffset:outStart:outEnd:
_componentsFromDate:
_scheduleType
_weak_forecast
_calendar
_roundedStartDate
_roundedEndDate
_parsed
Tq,R,N
T@"NSDate",R,N
T@"NSCalendar",R,N
initOnQueue:withDownload:pollDuration:keybag:
deltaSpaceNeeded
refreshConstraints
_queue_evaluateBattery
_queue_evaluateDisk
_queue_evaluatePasscodeLocked
_queue_evaluateKeybag
_queue_keybag
_queue_timer
_queue_deltaSpaceNeeded
_queue_diskSatisfied
_queue_keybagSatisfied
_queue_passcodeSatisfied
_queue_batterySatisfied
restoreVersion
setRestoreVersion:
productVersion
setProductVersion:
productBuildVersion
setProductBuildVersion:
releaseType
setReleaseType:
_restoreVersion
_productVersion
_productBuildVersion
_releaseType
T@"NSString",&,N,V_restoreVersion
T@"NSString",&,N,V_productVersion
T@"NSString",&,N,V_productBuildVersion
T@"NSString",&,N,V_releaseType
awakeFromBundle
loadPlugin:
publisher
productSystemName
preparationSize
totalRequiredFreeSpace
updateTypeName
isValidDescriptor
_hasValue:
_buildCompareKey
isEmergencyOrCritical
setPublisher:
setProductSystemName:
prerequisiteBuild
setPrerequisiteBuild:
prerequisiteOS
setPrerequisiteOS:
downloadSize
setDownloadSize:
installationSize
setInstallationSize:
_unarchiveSize
_setUnarchiveSize:
minimumSystemPartitionSize
setMinimumSystemPartitionSize:
_msuPrepareSize
_setMsuPrepareSize:
updateType
setUpdateType:
documentation
setDocumentation:
autoDownloadAllowableForCellular
setAutoDownloadAllowableForCellular:
isDownloadable
setDownloadable:
isDownloadableOverCellular
setDownloadableOverCellular:
_isStreamingZipCapable
_setStreamingZipCapable:
siriVoiceDeletionDisabled
_setDisableSiriVoiceDeletion:
cdLevel4Disabled
_setDisableCDLevel4:
appDemotionDisabled
_setDisableAppDemotion:
installTonightDisabled
_setDisableInstallTonight:
rampEnabled
setRampEnabled:
setupCritical
setSetupCritical:
criticalOutOfBoxOnly
setCriticalOutOfBoxOnly:
setAutoUpdateEnabled:
criticalDownloadPolicy
setCriticalDownloadPolicy:
systemPartitionPadding
setSystemPartitionPadding:
sepDigest
setSEPDigest:
rsepDigest
setRSEPDigest:
sepTBMDigest
setSEPTBMDigest:
rsepTBMDigest
setRSEPTBMDigest:
releaseDate
setReleaseDate:
mdmDelayInterval
setMdmDelayInterval:
assetID
setAssetID:
hideInstallAlert
setHideInstallAlert:
audienceType
setAudienceType:
preferenceType
setPreferenceType:
upgradeType
setUpgradeType:
promoteAlternateUpdate
setPromoteAlternateUpdate:
isSplatOnly
setIsSplatOnly:
_documentation
_publisher
_productSystemName
_prerequisiteBuild
_prerequisiteOS
_downloadSize
_installationSize
_minimumSystemPartitionSize
_updateType
_autoDownloadAllowableForCellular
_downloadAllowableForCellular
_downloadable
_disableSiriVoiceDeletion
_disableCDLevel4
_disableAppDemotion
_disableIntallTonight
_rampEnabled
_criticalOutOfBoxOnly
_setupCritical
_systemPartitionPadding
_sepDigest
_rsepDigest
_sepTBMDigest
_rsepTBMDigest
_releaseDate
_mdmDelayInterval
_assetID
_hideInstallAlert
_audienceType
_preferenceType
_upgradeType
_promoteAlternateUpdate
_isSplatOnly
_downloadableOverCellular
_streamingZipCapable
_criticalDownloadPolicy
T@"SUDocumentation",&,N,V_documentation
T@"NSString",&,N,V_publisher
T@"NSString",&,N,V_productSystemName
T@"NSString",&,N,V_prerequisiteBuild
T@"NSString",&,N,V_prerequisiteOS
TQ,N,V_downloadSize
TQ,N,V_installationSize
TQ,N,V_minimumSystemPartitionSize
Ti,N,V_updateType
TB,N,V_autoDownloadAllowableForCellular
downloadable
TB,N,GisDownloadable,V_downloadable
downloadableOverCellular
TB,N,GisDownloadableOverCellular,V_downloadableOverCellular
disableSiriVoiceDeletion
TB,N,GsiriVoiceDeletionDisabled,S_setDisableSiriVoiceDeletion:,V_disableSiriVoiceDeletion
disableCDLevel4
TB,N,GcdLevel4Disabled,S_setDisableCDLevel4:,V_disableCDLevel4
disableAppDemotion
TB,N,GappDemotionDisabled,S_setDisableAppDemotion:,V_disableAppDemotion
disableInstallTonight
TB,N,GinstallTonightDisabled,S_setDisableInstallTonight:,V_disableIntallTonight
TB,N,V_rampEnabled
TB,N,V_criticalOutOfBoxOnly
TB,N,V_autoUpdateEnabled
T@"NSString",&,N,V_setupCritical
T@"NSString",&,N,V_criticalDownloadPolicy
T@"NSDictionary",&,N,V_systemPartitionPadding
T@"NSData",&,N,SsetSEPDigest:,V_sepDigest
T@"NSData",&,N,SsetRSEPDigest:,V_rsepDigest
T@"NSData",&,N,SsetSEPTBMDigest:,V_sepTBMDigest
T@"NSData",&,N,SsetRSEPTBMDigest:,V_rsepTBMDigest
T@"NSDate",&,N,V_releaseDate
TQ,N,V_mdmDelayInterval
T@"NSString",&,N,V_assetID
TB,N,V_hideInstallAlert
TQ,N,V_audienceType
TQ,N,V_preferenceType
TQ,N,V_upgradeType
TB,N,V_promoteAlternateUpdate
TB,N,V_isSplatOnly
unarchiveSize
TQ,N,G_unarchiveSize,S_setUnarchiveSize:,V_unarchiveSize
msuPrepareSize
TQ,N,G_msuPrepareSize,S_setMsuPrepareSize:,V_msuPrepareSize
streamingZipCapable
TB,N,G_isStreamingZipCapable,S_setStreamingZipCapable:,V_streamingZipCapable
isDownloadAllowableForCellular
automaticUpdateV2EnabledDidChange:
isScanning:
scanForUpdates:withResult:
autoScanAndDownloadIfAvailable:
descriptor:
descriptors:
isClearingSpaceForDownload:
isDownloading:
startDownload:
startDownloadWithOptions:withResult:
startDownloadWithMetadata:withResult:
cancelDownloadWithOptions:withResult:
purgeDownloadWithOptions:withResult:
pauseDownload:
resumeDownload:
updateDownloadMetadata:withResult:
updateDownloadOptions:withResult:
downloadAndInstallState:
updatesDownloadableWithOptions:alternateDownloadOptions:replyHandler:
deviceHasSufficientSpaceForDownloads:
deviceHasSufficientSpaceForDownload:
extraSpaceNeededForDownloadWithoutAppPurging:
eligibleRollbackWithOptions:withResult:
rollbackUpdateWithOptions:withResult:
previousRollback:withResult:
isRollingBack:
scheduleRollbackRebootForLater:
currentAutoInstallOperation:withResult:
cancelAutoInstallOperation:withResult:
consentToAutoInstallOperation:withResult:
currentPasscodePolicy:
isAutoUpdateEnabled:
isAutoUpdateScheduled:
presentAutoUpdateBanner:
isInstallationKeybagRequired:
isInstallationKeybagRequiredForDescriptor:result:
isUpdateReadyForInstallation:
isUpdateReadyForInstallationWithOptions:withResult:
installUpdate:
installUpdateWithInstallOptions:withResult:
installUpdateWithOptions:withResult:
setClientType:withResult:
slaVersion:
softwareUpdatePathRestriction:
isDelayingUpdates:
delayEndDate:
setMandatorySoftwareUpdateDictionary:
getMandatorySoftwareUpdateDictionary:
createInstallationKeybag:withResult:
destroyInstallationKeybag
enableAutomaticUpdateV2:
isAutomaticUpdateV2Enabled:
enableAutomaticDownload:
isAutomaticDownloadEnabled:
registerCSInstallPredicatesOnDate:
installServerConfiguration
setExclusiveControl:
recordSUAnalyticsEvent:
submitSUAnalyticsEvent:
submitAllSUAnalyticsEvents
submitSUAnalyticsEventsWithName:
scanRequestDidStartForOptions:
scanRequestDidFinishForOptions:results:error:
scanDidCompleteForOptions:results:error:
downloadWasInvalidatedForNewUpdateAvailable:
downloadWasInvalidatedForNewUpdatesAvailable:
downloadDidStart:
downloadProgressDidChange:
downloadDidFail:withError:
downloadDidFinish:
downloadDidFinish:withInstallPolicy:
automaticDownloadDidFailToStartForNewUpdateAvailable:withError:
clearingSpaceForDownload:clearing:
installDidStart:
installDidFail:withError:
installDidFinish:
installPolicyDidChange:
deviceBootedAfterSplatUpdate
rollbackReadyToStart:options:completion:
rollbackDidStart:
rollbackDidFail:withError:
rollbackDidFinish:
rollbackReadyForReboot:
deviceBootedAfterRollback
managedInstallationRequested:
autoInstallOperationDidConsent:
autoInstallOperationIsReadyToInstall:withResult:
autoInstallOperationPasscodePolicyChanged:passcodePolicyType:
installTonightScheduled:operationID:
scanRequestDidFinishForOptions:update:error:
scanDidCompleteWithNewUpdateAvailable:error:
client:scanRequestDidStartForOptions:
client:scanRequestDidFinishForOptions:results:error:
client:scanRequestDidFinishForOptions:update:error:
client:scanDidCompleteWithNewUpdateAvailable:error:
client:automaticDownloadDidFailToStartForNewUpdateAvailable:withError:
client:downloadDidStart:
client:downloadProgressDidChange:
client:downloadDidFail:withError:
client:downloadDidFinish:
client:downloadDidFinish:withInstallPolicy:
client:downloadWasInvalidatedForNewUpdatesAvailable:
client:downloadWasInvalidatedForNewUpdateAvailable:
client:clearingSpaceForDownload:clearingSpace:
client:installDidStart:
client:installDidFail:withError:
client:installDidFinish:
client:installPolicyDidChange:
deviceBootedAfterSplatOnlyUpdate:
client:managedInstallationRequested:
client:rollbackReadyToStart:options:completion:
client:rollbackDidStart:
client:rollbackDidFail:withError:
client:rollbackDidFinish:
client:scheduledRollbackReadyForReboot:
deviceBootedAfterSplatOnlyRollback:
client:installTonightScheduled:operationID:
_shouldDisallowAvailabilityNotifications
installationConstraintObserverDidRemoveAllObserverBlocks:
preference:didChange:
initWithDelegate:
initWithDelegate:andQueue:
initWithDelegate:clientType:
initWithDelegate:queue:clientType:
_setClientType
setClientType:
scanForUpdates:withScanResults:
totalPurgeableSpace
getDocumentationDataForInstalledUpdateType:error:
cancelDownload:
purgeDownload:
download:
areUpdatesDownloadableWithOptions:alternateUpdateOptions:preferredUpdateDownloadable:alternateUpdateDownloadable:preferredUpdateError:alternateUpdateError:
isAutoUpdateScheduled
_getExistingAutoInstallOperationFromModel:
observeInstallationConstraintChangesForDownload:observer:
previousRollbackWithOptions:withResult:
isSplatOnlyUpdateInstalled
isSplatOnlyUpdateRollbackAllowed:
createInstallationKeybagWithOptions:
createInstallationKeybag:
createInstallationKeybag:forUnattendedInstall:
isInstallationKeybagRequired
isInstallationKeybagRequiredForDescriptor:
isAutomaticUpdateV2Enabled
isAutomaticDownloadEnabled
_registerAutoInstallOperationClientHandler:
_unregisterAutoInstallOperationClientHandler:
_consentAutoInstallOperation:withResult:
_cancelAutoInstallOperation:withResult:
scheduleDateActivity:
_invalidateAllInstallationConstraintObserversForDownload
_invalidateConstraintObserver:withError:
_bundleIdentifier
_remoteInterface
_remoteInterfaceWithErrorHandler:
_remoteInterfaceWithErrorHandler:connectIfNecessary:
_remoteSynchronousInterfaceWithErrorHandler:connectIfNecessary:
_invalidateConnection
connectToServerIfNecessary
noteConnectionDropped
noteServerExiting
clientType
installDescriptor
setInstallDescriptor:
scanDescriptor
setScanDescriptor:
queue
setQueue:
_serverConnection
_connected
_serverIsExiting
_clientType
_installing
_installDescriptor
_scanDescriptor
_installOperationIDsToOperationHandler
_installationConstraintObservers
T@"SUDescriptor",&,N,V_installDescriptor
T@"SUDescriptor",&,N,V_scanDescriptor
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
T@"<SUManagerClientDelegate>",W,N,V_delegate
Ti,N,V_clientType
initWithKey:type:description:
preferenceKey
_preferenceKey
_description
T@"NSString",R,&,N,V_preferenceKey
Tq,R,N,V_type
T@"NSString",R,&,N,V_description
taskQueue
appDemotionSettingQueue
mainWorkQueue
fastWorkQueue
setIsDaemon:
isDaemon
isWiFiCapable
isCellularDataCapable
hasCellularRadio
cellularDataIsEnabled
serialNumber
currentProductCategory
currentDeviceName
currentProductType
currentProductVersion
currentProductBuild
currentReleaseType
currentReleaseTypeIsInternal
isProductionFused
alarmSetBeforeDate:
randomIntWithMinVal:maxVal:
errorWithCode:
errorWithCode:originalError:
errorRemovingUserInfoKey:originalError:
assignError:withCode:
assignError:withError:translate:
translateError:
translateError:withAddedUserInfo:
translateErrorCodeFromError:
MADownloadErrorCodeToSUDownloadErrorCode:
autoDownloadExpiredError:
internalRecoveryStringForErrorCode:
postAutoUpdateInformationalNotification:body:buttonText:altButtonText:withCompletion:
postFailureNotification:body:buttonText:altButtonText:
appDemoteableSpace
totalPurgeableSpace:
systemPartitionGrowth:
enableAppDemotion:
appDemotionIsEnabled
devicePadding:
purgeV1SUAssets
setCacheable:
URLIfFileExists:
gregorianCalendar
addToDate:numberOfDays:
prettyPrintDate:
systemContainerURL
writeKeepAliveFile
deleteKeepAliveFile
bootTime
deviceIsSupervised
splatUpdateRestrictionEnabled
splatRollbackRestrictionEnabled
isSplatUpdateEnabled
isSplatRollbackEnabled
documentationDataForInstalledUpdateType:error:
initWithDocumentationURL:
iconImage
releaseNotesSummaryFileName
releaseNotesSummary
releaseNotesFileName
releaseNotes
licenseAgreementFileName
licenseAgreement
hasAnyDocumentation
_clearTransientDocumentationData
localizedStringFromBundle:key:
localizedURLFromBundle:resource:
_resetIfNecessary
_cachedDocumentationDataForURL:
_localizedResourceURLForDocumentationAsset:resource:
localizedDocumentationStringFromBundle:key:
getIconImage
getFullWidthImage
_getSUImage:
pngImageDataFromBundle:fileName:
baseDocumentationURL
setBaseDocumentationURL:
setReleaseNotesFileName:
releaseNotesURL
setReleaseNotesURL:
setReleaseNotesSummaryFileName:
releaseNotesSummaryURL
setReleaseNotesSummaryURL:
setLicenseAgreementFileName:
licenseAgreementURL
setLicenseAgreementURL:
primaryLanguage
setPrimaryLanguage:
slaVersion
setSlaVersion:
iconImageName
setIconImageName:
_baseDocumentationURL
_releaseNotesSummaryFileName
_releaseNotesFileName
_licenseAgreementFileName
_primaryLanguage
_slaVersion
_releaseNotesSummaryURL
_releaseNotesURL
_licenseAgreementURL
_cachedData
_iconImageName
T@"NSURL",&,N,V_baseDocumentationURL
T@"NSString",&,N,V_releaseNotesSummaryFileName
T@"NSString",&,N,V_licenseAgreementFileName
T@"NSString",&,N,V_releaseNotesFileName
T@"NSString",&,N,V_primaryLanguage
T@"NSNumber",&,N,V_slaVersion
T@"NSURL",&,N,V_releaseNotesSummaryURL
T@"NSURL",&,N,V_releaseNotesURL
T@"NSURL",&,N,V_licenseAgreementURL
T@"NSString",&,N,V_iconImageName
metadata
allowCellularDownload
totalSpaceConsumed
isValidDownload
progress
setProgress:
downloadOptions
setDownloadOptions:
setMetadata:
_progress
_downloadOptions
_metadata
T@"SUOperationProgress",&,N,V_progress
T@"SUDownloadOptions",&,N,V_downloadOptions
T@"SUDownloadMetadata",&,N,V_metadata
setCancelActiveUpdate:
cancelActiveUpdate
setPromptForConsent:
promptForConsent
setPromptForPasscode:
promptForPasscode
_cancelActiveUpdate
_promptForConsent
_promptForPasscode
TB,N,V_cancelActiveUpdate
TB,N
mutableCopyWithZone:
applyDownloadPolicy:
activeDownloadPolicy:
availableDownloadPolicyIfDifferentFromActive:
matchesDownloadPolicy:
isEnabledForNetworkType:
_stringForBool:
isEnabledFor2G
setEnabledFor2G:
isEnabledFor3G
setEnabledFor3G:
isEnabledFor4G
setEnabledFor4G:
setEnabledForWifi:
setEnabledForCellularRoaming:
setEnabledOnBatteryPower:
enforceWifiOnlyOverride
setEnforceWifiOnlyOverride:
_enabledFor2G
_enabledFor3G
_enabledFor4G
_enabledForCellularRoaming
_enabledForWifi
_enabledOnBatteryPower
_enforceWifiOnlyOverride
Ti,N,V_activeDownloadPolicyType
enabledFor2G
TB,N,GisEnabledFor2G,V_enabledFor2G
enabledFor3G
TB,N,GisEnabledFor3G,V_enabledFor3G
enabledFor4G
TB,N,GisEnabledFor4G,V_enabledFor4G
TB,N,GisEnabledForWifi,V_enabledForWifi
TB,N,GisEnabledOnBatteryPower,V_enabledOnBatteryPower
TB,N,GisEnabledForCellularRoaming,V_enabledForCellularRoaming
TB,N,V_enforceWifiOnlyOverride
initWithMetadata:
Ti,D,N
TB,D,N
TB,N,GisAutoDownload
TB,N,GisDownloadOnly
connectionStateChanged:connection:dataConnectionStatusInfo:
connectionActivationError:connection:error:
anbrActivationState:enabled:
anbrBitrateRecommendation:bitrate:direction:
preferredDataSimChanged:
preferredDataServiceDescriptorChanged:
currentDataSimChanged:
currentDataServiceDescriptorChanged:
servingNetworkChanged:
connectionAvailability:availableConnections:
dataStatus:dataStatusInfo:
regDataModeChanged:dataMode:
dataSettingsChanged:
internetConnectionStateChanged:
internetConnectionActivationError:
internetDataStatusBasic:
internetDataStatus:
internetConnectionAvailability:
tetheringStatus:
tetheringStatus:connectionType:
serviceDisconnection:status:
dataRoamingSettingsChanged:status:
_initCTClient
getCTClient
getPreferredDataSubscriptionContext
_initiationQueue
_subscriptionContext
isDownloadFree
isDownloadAllowable
isDownloadAllowableOver2G
isAutoDownloadAllowable
maximumDownloadSizeInBytes
numberOfDaysToWaitForCellularDownload
peakStartHour
peakEndHour
allowInexpensiveHDMUnlimited
_isValidHour:
_boolForKey:defaultValue:
_longLongForKey:defaultValue:
_unsignedIntegerForKey:defaultValue:
_integerForKey:defaultValue:
_numberForKey:
_keyMap
dismissNotification
postNotificationForError:
postNotificationForError:withUpdateBuildNumber:
_notification
holdsWiFiAssertion
setHoldsWiFiAssertion:
operatorNameChanged:name:
displayStatusChanged:status:
signalStrengthChanged:info:
rejectCauseCodeChanged:causeCode:
voiceLinkQualityChanged:metric:
enhancedVoiceLinkQualityChanged:metric:
enhancedDataLinkQualityChanged:metric:
imsRegistrationChanged:info:
cellChanged:cell:
cellMonitorUpdate:info:
networkListAvailable:list:
customerServiceProfileChanged:visible:
networkSelected:success:mode:
networkReselectionNeeded:
encryptionStatusChanged:info:
ratSelectionChanged:selection:
nrDisableStatusChanged:status:
plmnChanged:plmn:
carrierBundleChange:
operatorBundleChange:
defaultBundleChange
currentNetworkType
currentCellularType
isCurrentNetworkTypeCellular
isCurrentNetworkTypeExpensive
isNetworkTypeCellular:
isCellularRoaming
setCurrentNetworkType:
setCurrentCellularType:
_queue_currentNetworkType
_queue_currentCellularType
_initNetworkObservation
telephonyClient
_resetCtClient
refreshNetworkAndCellularTypesWithFlags:
refreshNetworkTypeWithFlags:
refreshCellularType
_networkTypeFromFlags:
usingWifi
_networkTypeFromCurrentCellularData
_networkTypeFromCurrentCellularDataRespectingWifiAssist:
_networkTypeFromCurrentCellularDataWithError:
setCellularRoaming:
isCellularDataRoamingEnabled
_isCurrentlyRoaming
_carrierBundleChanged
_operatorBundleChanged
_reachability
_observers
_currentNetworkType
_currentCellularType
_roaming
_ctClient
_ctQueue
_pathEvaluator
initWithEventName:
eventPayload
setEventPayloadEntry:boolValue:
setEventPayloadEntry:numberValue:
setEventPayloadEntry:stringValue:
setEventPayloadEntryToNull:
removeEventPayloadEntry:
_queue_setEventPayloadEntry:boolValue:
_queue_setEventPayloadEntry:numberValue:
_queue_setEventPayloadEntry:stringValue:
_queue_setEventPayloadEntryToNull:
_queue_removeEventPayloadEntry:
eventName
eventUUID
setEventUUID:
_eventName
_mutableEventPayload
_eventUUID
T@"NSString",R,&,N,V_eventName
T@"NSString",&,N,V_eventUUID
T@"NSDictionary",R,&,N
isSamePolicy:
hasEnoughDiskSpace
isPowerRequired
isDownloadFreeForCellular
isDownloadAllowableForCellular2G
isDownloadAllowableForCellularRoaming
isDownloadAllowableForWiFi
is5GDownloadAllowed
wifiOnlyPeriodInDays
createSpaceOptions
isDownloadableForCurrentNetworkConditions:cellularFeesApply:
isDownloadableForCurrentNetworkConditions:cellularFeesApply:powerRequired:
cellularFeeAgreementStatus
setCellularFeeAgreementStatus:
T@"SUDescriptor",&,N
_isCellularCapable
isDownloadAllowableForCellularIncludingInexpensiveHDM:
cellularDownloadFeesApply
_isDownloadableForNetworkType:error:cellularFeesApply:powerRequired:
_inexpensiveHDM
carrierPolicy
setCarrierPolicy:
isCellularCapable
setCellularCapable:
networkMonitor
setNetworkMonitor:
_carrierPolicy
_networkMonitor
_cellularCapable
_cellularFeeAgreementStatus
T@"SUCarrierDownloadPolicyProperties",&,N,V_carrierPolicy
cellularCapable
TB,N,GisCellularCapable,V_cellularCapable
T@"SUNetworkMonitor",&,N,V_networkMonitor
Ti,N,V_cellularFeeAgreementStatus
_isForecastLogicallyExpired
_roundedStartTime
_roundedEndTime
_forecastDateCache
unlockStartDate
setUnlockStartDate:
unlockEndDate
setUnlockEndDate:
suStartDate
setSuStartDate:
suEndDate
setSuEndDate:
firstUnlock
setFirstUnlock:
_unlockStartDate
_unlockEndDate
_suStartDate
_suEndDate
_firstUnlock
_lazy_forecastDateCache
T@"NSDate",&,N,V_unlockStartDate
T@"NSDate",&,N,V_unlockEndDate
T@"NSDate",&,N,V_suStartDate
T@"NSDate",&,N,V_suEndDate
T@"NSDate",&,N,V_firstUnlock
_callStatusChanged
initOnQueue:withDownload:callCenter:inSpringBoard:onExistingPhoneCall:
_queue_noteOnExistingPhoneCallDidChange:
_queue_callCenter
_queue_satisfied
_inSpringBoard
computAutoDownloadEndDateFromDate:
computeTimeOfWifiOnlyPeriodEndFromDate:
postAppPurgingNotificationWithCompletion:
_userDownloadPolicyFromCurrentPolicy:descriptor:networkMonitor:allowCellularOverride:
userDownloadPolicyForDescriptor:existingPolicy:networkMonitor:allowCellularOverride:
userDownloadPolicyForDescriptor:existingPolicy:allowCellularOverride:
userDownloadPolicyForDescriptor:existingPolicy:
userDownloadPolicyForDescriptor:
downloadPolicyForType:forDescriptor:
downloadPolicyTypeForClass:
isDarkBoot
setDarkBoot:
isRequired
setRequired:
isManaged
setManaged:
skipActivationCheck
setSkipActivationCheck:
ignorableConstraints
setIgnorableConstraints:
_darkBoot
_required
_managed
_skipActivationCheck
_ignorableConstraints
managed
TB,N,GisManaged,V_managed
darkBoot
TB,N,GisDarkBoot,V_darkBoot
required
TB,N,GisRequired,V_required
TQ,N,V_ignorableConstraints
TB,N,V_skipActivationCheck
initWithScanOption:
delayPeriodDays
MDMSoftwareUpdatePath
MCPathToSUMDMPath:
delayRestrictionEnabled
useDelayPeriod
requestedProductMarketingVersion
scanOptions
setScanOptions:
_scanOptions
T@"SUScanOptions",&,N,V_scanOptions
T@"NSString",R,&,N
safeObjectForKey:ofClass:
setSafeObject:forKey:
initWithPreferredDescriptor:alternateDescriptor:
latestUpdate
preferredDescriptor
setPreferredDescriptor:
alternateDescriptor
setAlternateDescriptor:
_preferredDescriptor
_alternateDescriptor
T@"SUDescriptor",&,N,V_preferredDescriptor
T@"SUDescriptor",&,N,V_alternateDescriptor
disableManagedRequest
disableUserWiFiOnlyPeriod
disableBuildNumberComparison
allowSameBuildUpdates
disableAvailabilityAlerts
disableAutoDownload
scanWeeklyInternally
forceFullReplacement
disableFullReplacementFallback
shouldDelayUpdates
updateDelayInterval
shouldDelayInMinutes
unmetConstraints
mandatorySUFlags
allowSplatUpdate
allowSameRestoreVersionSplatUpdate
autoInstallSystemDataFilesForceOn
autoInstallSystemDataFilesForceOff
autoInstallSystemAndDataFiles
splatScanInterval
autoSUStartDelta
autoSUEndDelta
autoSUUnlockStartDelta
autoSUUnlockEndDelta
autoUpdateForceOn
autoUpdateForceOff
bannerDelay
autoDownloadDeletedBuild
analyticsSubmissionIntervalOverride
queryCustomerBuilds
disableRollback
useEmptyPatches
reload
setPreference:toBool:
setPreference:toValue:
_loadPreferences
_mandatorySUFlagsForPreferences
_getValueOfKey:withType:
_getBooleanPreferenceForKey:withDefaultValue:
_setCachedBooleanPreferenceForKey:value:
_cachedObjectForKey:ofClass:
_cachedBoolValueForKey:withDefaultValue:
_cachedStringValueForKey:
_cachedNumberValueForKey:
_setBooleanPreferenceForKey:value:
_setObjectPreferenceForKey:value:
_copyStringPreferenceForKey:
_copyNumberPreferenceForKey:
_copyPreferenceForKey:ofType:
setObserver:
enableAutoInstallSystemAndDataFiles:
isAutoDownloadDisabled
_autoDownloadDisableDefaultValue
_autoInstallDefaultValue
_autoInstallSystemDataFilesDefaultValue
isKeySetInPreferences:
_setupAutomaticUpdateV2Enabled
observer
preferencesDefinitions
setPreferencesDefinitions:
cachedPreferences
setCachedPreferences:
isAutoSUDisabled
backgroundDLKnownBuilds
_preferencesWorkloop
_preferencesDefinitions
_cachedPreferences
_disableAutoSU
_backgroundDLKnownBuilds
T@"NSDictionary",&,N,V_preferencesDefinitions
T@"NSMutableDictionary",&,N,V_cachedPreferences
T@"<SUPreferencesObserver>",N,V_observer
TB,R,N,GisAutoDownloadDisabled
disableAutoSU
TB,R,N,GisAutoSUDisabled,V_disableAutoSU
T@"NSNumber",R,N
TB,R,N,V_backgroundDLKnownBuilds
TB,N,SenableAutomaticUpdateV2:
TB,N,SenableAutomaticDownload:
TB,N,SenableAutoInstallSystemAndDataFiles:
initWithDelay:
delayEndDate
delayUnit
isDelayed
setIsDelayed:
delayedStartDate
setDelayedStartDate:
delayPeriod
setDelayPeriod:
_isDelayed
_delayedStartDate
_delayPeriod
TB,N,V_isDelayed
T@"NSDate",&,N,V_delayedStartDate
TQ,N,V_delayPeriod
alloc
initAndWaitUntilSessionUpdated
startedConnectionAttemptOnTransport:
cancelledConnectionAttemptOnTransport:
sessionDidConnect:
sessionDidDisconnect:
session:didUpdateConfiguration:
_queue_carplayDidChange
_queue_CarplayConnected
_queue_carSessionStatus
wifiOnlyPeriodInDaysForUpdate:
networkPredicate:
phoneCallPredicate:
batteryLevelPredicate:
carplayPredicate:
_getBoolForKeyPath:
_getIntForKeyPath:
_batteryLevel
_callInProgress
_hasNetworkConnection
registerInstallAlertConditionsWithHandler:
unregisterInstallationAlertAction
_context
_registration
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@32@0:8@16^@24
v24@0:8@16
@"MAAsset"32@0:8@"NSArray"16^@24
v24@0:8@"MAMsuDownloadOptions"16
@"NSDictionary"16@0:8
@28@0:8@16i24
i16@0:8
@"NSString"
@"NSDictionary"
v32@0:8@16Q24
v32@0:8@"<SUInstallationConstraintMonitor>"16Q24
Q24@0:8Q16
@"<SUInstallationConstraintMonitorDelegate>"16@0:8
v24@0:8@"<SUInstallationConstraintMonitorDelegate>"16
@32@0:8@16@24
v16@0:8
@"NSObject<OS_dispatch_queue>"
@"NSSet"
@"<SUInstallationConstraintMonitorDelegate>"
q24@0:8@16
@20@0:8i16
@24@0:8@16
@60@0:8@16@24@32@40i48@52
Q40@0:8@16@24@32
@40@0:8@16@24@32
v20@0:8B16
@"SUPreferences"
B24@0:8Q16
v24@0:8Q16
@"NSHashTable"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^{_NSZone=}16
v20@0:8i16
@"NSUUID"
@"SUAutoInstallForecast"
@"MAAsset"
v24@0:8@?16
@24@0:8^{__CFString=}16
@36@0:8@16B24^@28
@44@0:8@16B24^@28^@36
@32@0:8@16B24B28
@44@0:8@16@24B32^@36
@24@0:8^@16
@40@0:8@16@24i32B36
@32@0:8Q16@24
@"SUDescriptor"
@"NSData"
q16@0:8
v24@0:8q16
v24@0:8i16i20
@"SUNetworkMonitor"
v32@0:8@16@?24
B32@0:8@16^@24
Q24@0:8@16
B20@0:8i16
@"NSMutableSet"
v24@0:8@"NSError"16
v24@0:8@?<v@?B@"NSError">16
@56@0:8@16B24@28@36i44B48B52
@"SUManagerClient"
@"<SUAutoInstallOperationDelegate>"
f16@0:8
v20@0:8f16
d16@0:8
v24@0:8d16
#40@0:8@16@24@32
v40@0:8@16@24@32
#40@0:8@"NSKeyedUnarchiver"16@"NSString"24@"NSArray"32
@32@0:8@"NSKeyedUnarchiver"16@24
v40@0:8@"NSKeyedUnarchiver"16@24@32
v24@0:8@"NSKeyedUnarchiver"16
@"SUDownload"
@"NSArray"
@"SUScanOptions"
@"NSDate"
@"_SUAutoInstallOperationModel"
@"SUManagedDeviceUpdateDelay"
@"SUInstallPolicy"
@"SUInstallationConstraintObserver"
@24@0:8@?16
@24@0:8#16
@"<SUInstallationConstraintObserverDelegate>"
@"NSMapTable"
v32@0:8@16@24
@"NSMutableArray"
@24@0:8Q16
@40@0:8@16Q24@32
i24@0:8@16
B36@0:8@16@24B32
@24@0:8d16
B48@0:8@16@24@32@40
v48@0:8@16q24^@32^@40
@"NSCalendar"
v28@0:8@16B24
v28@0:8@"SUKeybagInterface"16B24
@48@0:8@16@24d32@40
@"SUKeybagInterface"
@"BSTimer"
@"SUDocumentation"
v40@0:8@16@24@?32
v28@0:8B16@?20
v28@0:8i16@?20
v32@0:8@"SUScanOptions"16@?<v@?@"SUScanResults"@"NSError">24
v24@0:8@?<v@?@"SUScanResults"@"NSError">16
v24@0:8@?<v@?@"SUDescriptor"@"NSError">16
v32@0:8@"SUDownloadOptions"16@?<v@?B@"NSError">24
v32@0:8@"SUDownloadMetadata"16@?<v@?B@"NSError">24
v32@0:8@"SUPurgeOptions"16@?<v@?B@"NSError">24
v24@0:8@?<v@?@"SUDownload"@"SUInstallPolicy"@"_SUAutoInstallOperationModel"@"NSError">16
v40@0:8@"SUDownloadOptions"16@"SUDownloadOptions"24@?<v@?BB@"NSError"@"NSError">32
v24@0:8@?<v@?BB@"NSError"@"NSError">16
v24@0:8@?<v@?@"NSNumber"@"NSError">16
v32@0:8@"SURollbackOptions"16@?<v@?@"SURollbackDescriptor"@"NSError">24
v32@0:8@"SURollbackOptions"16@?<v@?B@"SURollbackDescriptor"@"NSError">24
v24@0:8@?<v@?B@"SURollbackDescriptor"@"NSError">16
v28@0:8B16@?<v@?@"_SUAutoInstallOperationModel"@"NSError">20
v32@0:8@"NSUUID"16@?<v@?B@"NSError">24
v24@0:8@?<v@?Q@"NSError">16
v32@0:8@"SUDescriptor"16@?<v@?B@"NSError">24
v32@0:8@"SUInstallOptions"16@?<v@?B@"NSError">24
v32@0:8@"NSArray"16@?<v@?B@"NSError">24
v28@0:8i16@?<v@?B@"NSError">20
v24@0:8@?<v@?@"NSDate"@"NSError">16
v24@0:8@"NSDictionary"16
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v32@0:8@"SUKeybagOptions"16@?<v@?B@"NSError">24
v24@0:8@"NSDate"16
v24@0:8@"SUAnalyticsEvent"16
v24@0:8@"NSString"16
v28@0:8B16@20
v24@0:8@"SUScanOptions"16
v40@0:8@"SUScanOptions"16@"SUScanResults"24@"NSError"32
v24@0:8@"SUDescriptor"16
v24@0:8@"SUScanResults"16
v24@0:8@"SUDownload"16
v32@0:8@"SUDownload"16@"NSError"24
v32@0:8@"SUDownload"16@"SUInstallPolicy"24
v32@0:8@"SUDescriptor"16@"NSError"24
v28@0:8@"SUDownload"16B24
v24@0:8@"SUInstallPolicy"16
v40@0:8@"SURollbackDescriptor"16@"SURollbackOptions"24@?<v@?B@"SURollbackDescriptor"@"NSError">32
v24@0:8@"SURollbackDescriptor"16
v32@0:8@"SURollbackDescriptor"16@"NSError"24
v24@0:8@"NSUUID"16
v32@0:8@"NSUUID"16@"NSError"24
v32@0:8@"NSUUID"16Q24
v28@0:8B16@"NSUUID"20
v40@0:8@"SUScanOptions"16@"SUDescriptor"24@"NSError"32
v24@0:8@"SUInstallationConstraintObserver"16
v32@0:8@"NSString"16@24
@36@0:8@16@24i32
@28@0:8i16^@20
v64@0:8@16@24^B32^B40^@48^@56
@32@0:8@16@?24
B24@0:8^@16
B28@0:8@16B24
@28@0:8@?16B24
@"NSXPCConnection"
@"<SUManagerClientDelegate>"
@"NSMutableDictionary"
@40@0:8@16q24@32
i24@0:8I16I20
@24@0:8q16
@32@0:8q16@24
v32@0:8^@16q24
v36@0:8^@16@24B32
q24@0:8q16
@20@0:8B16
v56@0:8@16@24@32@40@?48
v48@0:8@16@24@32@40
@32@0:8@16q24
@32@0:8^{__CFBundle=}16@24
@"NSURL"
@"NSNumber"
@"SUOperationProgress"
@"SUDownloadOptions"
@"SUDownloadMetadata"
v36@0:8@16i24@28
v32@0:8@16i24i28
v36@0:8@16@24i32
v28@0:8@16i24
v36@0:8@"CTXPCServiceSubscriptionContext"16i24@"CTDataConnectionStatus"28
v32@0:8@"CTXPCServiceSubscriptionContext"16i24i28
v28@0:8@"CTXPCServiceSubscriptionContext"16B24
v36@0:8@"CTXPCServiceSubscriptionContext"16@"NSNumber"24i32
v24@0:8@"CTXPCServiceSubscriptionContext"16
v24@0:8@"CTServiceDescriptor"16
v32@0:8@"CTXPCServiceSubscriptionContext"16@"NSArray"24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"CTDataStatus"24
v28@0:8@"CTXPCServiceSubscriptionContext"16i24
v24@0:8@"CTDataSettings"16
v24@0:8@"CTDataConnectionStatus"16
v24@0:8@"CTDataStatusBasic"16
v24@0:8@"CTDataStatus"16
v24@0:8@"CTTetheringStatus"16
v28@0:8@"CTTetheringStatus"16i24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"CTServiceDisconnectionStatus"24
v28@0:8@"CTServiceDescriptor"16B24
@"CTXPCServiceSubscriptionContext"
@"CoreTelephonyClient"
B24@0:8q16
q32@0:8@16q24
Q32@0:8@16q24
v32@0:8@"NSError"16@"NSString"24
^{__CFUserNotification=}
v36@0:8@16B24@28
v32@0:8@"CTXPCServiceSubscriptionContext"16@"NSString"24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"CTRegistrationDisplayStatus"24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"CTSignalStrengthInfo"24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"NSNumber"24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"CTVoiceLinkQualityMetric"24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"CTEnhancedLinkQualityMetric"24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"CTEnhancedDataLinkQualityMetric"24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"CTIMSRegistrationTransportInfo"24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"NSDictionary"24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"CTCellInfo"24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"CTNetworkList"24
v36@0:8@"CTXPCServiceSubscriptionContext"16B24@"NSString"28
v32@0:8@"CTServiceDescriptor"16@"CTEncryptionStatusInfo"24
v32@0:8@"CTServiceDescriptor"16@"CTRatSelection"24
v32@0:8@"CTServiceDescriptor"16@"CTNRStatus"24
v32@0:8@"CTServiceDescriptor"16@"CTPlmnInfo"24
v20@0:8I16
i20@0:8I16
i20@0:8B16
i24@0:8^@16
^{__SCNetworkReachability=}
@"NWPathEvaluator"
B32@0:8^q16^B24
B40@0:8^q16^B24^B32
@24@0:8@"SUDescriptor"16
B24@0:8@"<SUDownloadPolicy>"16
@"SUSpacePurgeOptions"16@0:8
@"SUDescriptor"16@0:8
B20@0:8B16
B44@0:8i16^q20^B28^B36
@"SUCarrierDownloadPolicyProperties"
@"_SUAutoInstallForecastDateCache"
@48@0:8@16@24@32B40B44
@"TUCallCenter"
v24@0:8@?<v@?B>16
@44@0:8@16@24@32B40
@36@0:8@16@24B32
@28@0:8i16@20
Q24@0:8q16
@32@0:8@16#24
^v32@0:8^{__CFString=}16Q24
@"<SUPreferencesObserver>"
@"NSObject<OS_dispatch_workloop>"
v24@0:8@"CARSession"16
v32@0:8@"CARSession"16@"CARSessionConfiguration"24
@"CARSessionStatus"
@"<_CDContext>"
@"_CDContextualChangeRegistration"
