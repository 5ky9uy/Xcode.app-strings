@(#)PROGRAM:AssetCacheLocatorService  PROJECT:AssetCacheServices-117
com.apple.private.AssetCacheServices.test
com.apple.private.AssetCache.import
more
prs=
fss=
prn=
fsn=
class
mandatory
template
-[ACLSTypeVerifier verify:name:withTemplate:tag:]
ACLSTypeVerifier.m
template != nil && [template isKindOfClass:[NSDictionary class]]
class != nil
[%ld]
v32@?0@8Q16^B24
v32@?0@8@"NSDictionary"16^B24
digest
{IP Address = %@, BSD Name = %@, Device ID = %@, User Readable = %@, IO Path Location = %#x, Wired = %@, Interface Type = %@, NCM = %@, Speed = %.1f Mbps}
%@-%@
AssetCacheTetherator
service[%d] %@
, if %@
, bn %@
, lk %@
, ds %d
, li %d
, la %@ %d
, 4p %d
, 4c %d
, 4m %@
, 4g %@
, 4d %d
, !4d %@
, !4l %@
, !4c %@, !4p %@
, 6p %d
, 6c %d
, 6m %@
, 6g %@
, 6d %d
, !6d %@
, !6l %@
, !6c %@, !6p %@
, !li %@
, !ds %@
, network service disabled %@
IOService
locationID
AppleUSBDeviceNCMData
/Network/Service/
%02x:%02x:%02x:%02x:%02x:%02x
<type=%#x>
<unknown>
%.*s
%02x
(family=%u)
sa_family=%d, rtm_addrs=%#x, rtm_flags=%#x
, skipping %s (sa=%p + len=%d = %p, lim=%p, msg=%p)
, %s=[%u]%@
ifa_name=%s, ifa_flags=%#x, ifa_addr=%@
, ifa_netmask=%@
, ifa_dstaddr=%@
RTAX_DST
RTAX_GATEWAY
RTAX_NETMASK
RTAX_GENMASK
RTAX_IFP
RTAX_IFA
RTAX_AUTHOR
RTAX_BRD
HTTP response %d from server
bad response from server
v8@?0
systemgroup.com.apple.AssetCacheServices.diskCache
Library/Caches/com.apple.AssetCacheLocatorService
diskCache.plist
AffinityQueryTimeout
ConcurrentDNSResolutions
DNSResolutionTimeout
LocateTimeout
LocateURL
RedactLogs
RefreshValidityInterval
SkipEVCheck
ac-power
cache-size
cache
connectTimeout
details
dnsResults
failureCount
favoredServerRanges
first
is-portable
last
localAddressAndPort
local-network
more
networkIdentifiers
publicAddressRanges
query-parameters
serversRecentlySeen
source
speed
validUntil
version
wired
https://lcdn-locator.apple.com/lcdn/locate
_aaplcache%@._tcp
com.apple.AssetCacheServices
Daemon
/var/mobile/Library/Caches/com.apple.AssetCacheLocatorService
a number
a string
%@/%@
localhost
127.0.0.1
AssetCacheLocatorService.queue
-[AssetCacheLocatorService init]_block_invoke
AssetCacheLocatorService.m
self.singleLocateTag == 0
AssetCacheLocatorService.cacheRefreshQueue
errorDomain
errorCode
errorDescription
error
%s: %s
B24@?0Q8@"NSObject<OS_xpc_object>"16
B24@?0r*8@"NSObject<OS_xpc_object>"16
v32@?0@"NSString"8@16^B24
-[AssetCacheLocatorService choose:fromArray:sorted:other:tag:]
AssetCacheLocatorService
com.apple.AssetCacheLocatorService
v16@?0@"NSObject<OS_xpc_object>"8
command
locate
recentlySeen
updateHealth
import
introspect
setTestFlags
quantity
x-apple-persistent-identifier
capabilities
namespaces
personalCaching
queryParameters
sizeHint
autoRefresh
quickMiss
forceMiss
hostport
guid
healthy
favored
supportsUrgency
timeout
rank
servers
validityInterval
v44@?0@"NSArray"8B16@"NSArray"20d28@"NSError"36
v20@?0B8@"NSError"12
success
method
POST
sourcePath
sourceOffset
sourceLength
sourceFd
headers
importStrategies
missing or invalid arguments
introspection
-[AssetCacheLocatorService handleIntrospectEvent:forConnection:tag:]_block_invoke
[self amRunningOnMyQueue]
v40@?0@"NSArray"8@"NSArray"16d24@"NSError"32
flags
/System/Library/CoreServices/SystemVersion.plist
ProductName
ProductVersion
ProductBuildVersion
type
system
name
build
CFBundleIdentifier
CFBundleName
CFBundleShortVersionString
bundle
executable
com.apple.AssetCacheLocatorService.network-watcher
simulatedCurrentNetwork
local network
localAddresses
gatewayIdentifiers
%%%02x
invalid range in %@ %s: %@
invalid range in %@ %s at index %ld
simulatedDNSResponses
resolv
initResult
initialSize
hErrno
answer
delay
response
simulated timeout
simulated error
%@: out of memory for %d byte DNS buffer
unable to parse DNS TXT record %@ (a=%d, n=%d, c=%d, i=%d, e=%d, b=%d, u=%d)
%@: cannot parse DNS response: %s
%@: DNS error %d: %s
%@: res_ninit() failed
AssetCacheLocatorService.resolve.resultsQueue
v44@?0@"NSArray"8@"NSArray"16d24B32@"NSError"36
%@ through %@
timed out waiting for concurrent DNS resolution of %@
too many chained DNS records, max %d
timed out before getting to DNS resolution of %@
-[AssetCacheLocatorService loadDiskCacheWithTag:]
not a dictionary
diskCache
expired
invalid
-[AssetCacheLocatorService saveDiskCacheWithTag:]
[self amRunningInMySingleLocate:tag]
[self.diskCacheVerifier verify:self.diskCache name:@"diskCache" tag:tag]
-[AssetCacheLocatorService updateDiskCacheRefreshTimerWithTag:]
nextDiskCacheRefreshDate
Servers
-[AssetCacheLocatorService cachedEntryCalled:withKey:forNetworkIdentifiers:validityInterval:tag:]
-[AssetCacheLocatorService cacheServers:forNetworkIdentifiers:validityInterval:tag:]
-[AssetCacheLocatorService uncacheEntriesCalled:withKey:forNetworkIdentifiers:tag:]
-[AssetCacheLocatorService anyCachedServersWithTag:]
-[AssetCacheLocatorService uncacheAllServersWithTag:]
DNSResults
-[AssetCacheLocatorService cacheDNSPublicAddressRanges:andFavoredServerRanges:forNetworkIdentifiers:validityInterval:tag:]
RecentlySeen
-[AssetCacheLocatorService cacheRecentlySeen:forNetworkIdentifiers:validityInterval:tag:]
-[AssetCacheLocatorService uncacheAllRecentlySeenWithTag:]
[%@]
tethered.Capabilities
%@:%hu
-[AssetCacheLocatorService locateLocalCachingServersWithHeaders:body:timeout:favoredServerRanges:callback:callbackQueue:tag:]
https
preference %@ must use https: %@
v32@?0@8@16^B24
self.locateCallback == nil
self.locateSession == nil
simulatedLocateResponses
local
status
NO_LOCAL_SERVER
HTTP/1.1
v16@?0q8
-[AssetCacheLocatorService locateLocalCachingServersWithHeaders:body:timeout:favoredServerRanges:callback:callbackQueue:tag:]_block_invoke_3
disposition == ACSURLSessionResponseAllow
connect-timeout
address
port
servers[%ld].details
%@:%@
v32@?0@"NSDictionary"8Q16^B24
unable to parse any servers in response from %@
response from %@ has missing or invalid servers: %@
validity-interval
response body from %@ not a dictionary
-[AssetCacheLocatorService locateLocalCachingServersWithTimeout:localAddresses:gatewayIdentifiers:configurationProfiles:forceDNSRefresh:callback:callbackQueue:tag:]
v24@?0@"NSDictionary"8@"NSDictionary"16
close
Connection
application/json
Content-Type
X-Protocol-Version
locator-software
#%08x
locator-tag
local-addresses
public-address-ranges
ranked-results
@8@?0
-[AssetCacheLocatorService locateLocalCachingServersWithTimeout:localAddresses:gatewayIdentifiers:configurationProfiles:forceDNSRefresh:callback:callbackQueue:tag:]_block_invoke
q24@?0@"NSDictionary"8@"NSDictionary"16
-[AssetCacheLocatorService cachedServers:forAffinityID:tag:]
-[AssetCacheLocatorService cacheServers:forAffinityID:tag:]
AssetCacheLocatorService.queryQueue
http://%@/%@
affinity
X-Apple-Locator-Tag
Max-Forwards
unhealthy
nonfavored
lastSaved
server
-[AssetCacheLocatorService queryServersFromArray:forReachabilityOrAffinityID:withTimeout:callbackWithServers:callbackQueue:tag:]_block_invoke
serverIsHealthy
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
simulatedAffinityResponses
reachability
-[AssetCacheLocatorService uncacheAllAffinitiesWithTag:]
-[AssetCacheLocatorService probeCacheForType:withLabel:networkIdentifiers:hitServers:hitValidityInterval:tag:]
-[AssetCacheLocatorService probeCacheWithLabel:capabilities:affinityID:hitServers:hitServersAreSorted:hitOtherServers:hitValidityInterval:tag:]
early
-[AssetCacheLocatorService locateCachingServersWithTimeout:capabilities:affinityID:autoRefresh:quickMiss:forceMiss:callback:callbackQueue:tag:]_block_invoke
affinityID != nil
quick miss requested
-[AssetCacheLocatorService relocateCachingServersWithTimeout:capabilities:affinityID:forceRefresh:tag:]_block_invoke
self.cacheRefreshInProgress
-[AssetCacheLocatorService slowcateCachingServerWithTimeout:capabilities:affinityID:forceRefresh:forceDNSRefresh:callback:tag:]
-[AssetCacheLocatorService slowcateCachingServerWithTimeout:capabilities:affinityID:forceRefresh:forceDNSRefresh:callback:tag:]_block_invoke
self.singleLocateTag == tag
standard
v20@?0@"NSArray"8B16
timed out waiting for singleLocate sema
no caching servers
%d caching server%@: 
 unhealthy
 incapable
 [plus %d more of other ranks]
health-update
%llu
Content-Length
-[AssetCacheLocatorService URLSession:didReceiveChallenge:completionHandler:]
Apple Inc.
without
with
-[AssetCacheLocatorService URLSession:task:didCompleteWithError:]_block_invoke
unable to validate server for %@
no data from server
HTTP error %u from %@, body: %@
-[AssetCacheLocatorService URLSession:dataTask:didReceiveResponse:completionHandler:]_block_invoke
-[AssetCacheLocatorService URLSession:dataTask:didReceiveData:]_block_invoke
too much data in response from %@ (max %lu)
@"NSString"16@?0@"NSString"8
[redacted]
com.apple.AssetCacheTetherator
com.apple.AssetCacheLocatorService.tag
XPC_ERROR_CONNECTION_INTERRUPTED
XPC_ERROR_CONNECTION_INVALID
XPC_ERROR_TERMINATION_IMMINENT
defunct
init
setTemplate:
template
verify:name:withTemplate:tag:
sanitize:withTemplate:tag:
objectForKey:
boolValue
stringByAppendingFormat:
enumerateObjectsUsingBlock:
enumerateKeysAndObjectsUsingBlock:
count
arrayWithCapacity:
addObject:
dictionaryWithCapacity:
setObject:forKey:
initWithTemplate:
verify:name:tag:
sanitize:tag:
.cxx_destruct
_template
T@"NSDictionary",&,V_template
ipAddress
bsdName
deviceID
userReadable
locationID
unsignedIntValue
wired
interfaceType
isNCM
speed
stringWithFormat:
description
setIpAddress:
setBsdName:
setDeviceID:
setUserReadable:
setLocationID:
setWired:
setSpeed:
setInterfaceType:
setIsNCM:
shareable
setShareable:
useful
setUseful:
_wired
_isNCM
_shareable
_useful
_ipAddress
_bsdName
_deviceID
_userReadable
_locationID
_speed
_interfaceType
T@"NSString",&,V_ipAddress
T@"NSString",&,V_bsdName
T@"NSString",&,V_deviceID
T@"NSString",&,V_userReadable
T@"NSNumber",&,V_locationID
TB,V_wired
T@"NSString",&,V_interfaceType
TB,V_isNCM
Td,V_speed
TB,V_shareable
TB,V_useful
setFirst:
setLast:
stringFromInaddr4:
initWithFirst:andLast:
containsAddress:
first
last
_first
_last
T{in_addr=I},V_first
T{in_addr=I},V_last
stringFromInaddr6:
T{in6_addr=(?=[16C][8S][4I])},V_first
T{in6_addr=(?=[16C][8S][4I])},V_last
allActiveNetworkInterfaces
countByEnumeratingWithState:objects:count:
UTF8String
stringWithUTF8String:
appendFormat:
isManualConfigMethod4:
createNetworkInterface:service:configInfo:
isAutomaticConfigMethod4:
serviceIDFromKey:
isEqualToString:
isManualConfigMethod6:
isAutomaticConfigMethod6:
doubleValue
isWiredNetworkInterfaceType:
numberWithUnsignedInt:
speedFromEthernetMediaSubType:
lastObject
length
isShareableSockaddr4:
isUsefulSockaddr4:
isShareableSockaddr6:
isUsefulSockaddr6:
isShareableInaddr4:
isShareableInaddr6:
isUsefulInaddr4:
isUsefulInaddr6:
setWithObjects:
containsObject:
arrayWithObjects:count:
scannerWithString:
characterSetWithCharactersInString:
scanUpToString:intoString:
scanString:intoString:
scanUpToCharactersFromSet:intoString:
stringFromMacAddr:
appendString:
stringFromSockaddr4:
stringFromSockaddr6:
stringFromSockaddrDL:
stringFromSockaddrStorage:
setWithCapacity:
addObjectsFromArray:
copy
dataWithBytes:length:
bytes
dictionaryWithObjects:forKeys:count:
digestIdentifier:tag:
objectAtIndex:
isDigestedIdentifier:equalToCleartextIdentifier:tag:
hasUsefulUSBEthernetInterface
netmask4ContainingStartAddress:endAddress:
makeLocalAddresses:andGatewayIdentifiers:tag:
digestIdentifiers:tag:
areDigestedIdentifiers:equalToCleartextIdentifiers:tag:
setFileHandle:
setFileOffset:
setLength:
setCallback:
setCallbackQueue:
setTag:
fileHandle
fileOffset
initWithFileHandle:fileOffset:length:
responseCode
callbackQueue
callback
finishTasksAndInvalidate
statusCode
setResponseCode:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:task:willUseCachingServer:newRequest:completionHandler:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
initWithFileHandle:fileOffset:length:callback:callbackQueue:tag:
_tag
_responseCode
_fileHandle
_fileOffset
_length
_callback
_callbackQueue
T@"NSFileHandle",&,V_fileHandle
TQ,V_fileOffset
TQ,V_length
T@?,C,V_callback
T@"NSObject<OS_dispatch_queue>",&,V_callbackQueue
TI,V_tag
Ti,V_responseCode
start
hasBytesAvailable
fileDescriptor
open
close
streamStatus
streamError
_scheduleInCFRunLoop:forMode:
_setCFClientFlags:callback:context:
_unscheduleFromCFRunLoop:forMode:
read:maxLength:
getBuffer:length:
fileEndOffset
setFileEndOffset:
status
setStatus:
_fileEndOffset
_status
Tq,V_fileOffset
Tq,V_fileEndOffset
TQ,V_status
defaultManager
removeItemAtPath:error:
systemGroupContainerPathWithGroupIdentifier:
setCacheDirPath:
cacheDirPath
setAffinityQueryTimeout:
affinityQueryTimeout
setConcurrentDNSResolutions:
intValue
concurrentDNSResolutions
setLocateTimeout:
locateTimeout
setDnsResolutionTimeout:
dnsResolutionTimeout
setRefreshValidityInterval:
refreshValidityInterval
URLWithString:
setLocateURL:
locateURL
setRedactLogs:
setSkipEVCheck:
fileExistsAtPath:isDirectory:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
localizedDescription
setDiskCachePlistPath:
setLocalhostAddresses:
setServerCapabilitiesTemplate:
serverCapabilitiesTemplate
setServerCapabilitiesVerifier:
setServerDetailsTemplate:
serverDetailsTemplate
setServerDetailsVerifier:
setDiskCacheTemplate:
diskCacheTemplate
setDiskCacheVerifier:
makeSoftwareVersions
setSoftwareVersions:
makeBootTimeWithTag:
setBootTime:
setQueue:
queue
setDiskCacheRefreshTimer:
diskCacheRefreshTimer
singleLocate
singleLocateTag
loadDiskCacheWithTag:
setDiskCacheRefreshTimerResumed:
setSingleLocate:
setLocateOpQueue:
locateOpQueue
setMaxConcurrentOperationCount:
setCacheRefreshQueue:
cacheRefreshQueue
dictionary
setAffinityCache:
initWithMemoryCapacity:diskCapacity:diskPath:
removeAllCachedResponses
setSharedURLCache:
ephemeralSessionConfiguration
setLocateSessionConfig:
locateSessionConfig
setAllowsCellularAccess:
setHTTPCookieStorage:
setURLCredentialStorage:
setURLCache:
setImportSessionConfig:
setQuerySessionConfig:
domain
code
numberWithBool:
numberWithLongLong:
numberWithUnsignedLongLong:
numberWithDouble:
array
NSObjectFromXPCObject:tag:
unsignedLongLongValue
XPCObjectFromNSObject:tag:
arrayByAddingObjectsFromArray:
servers:byAppendingServers:
objectForKeyedSubscript:
unsignedIntegerValue
redactObject:
watchForNetworkChanges
setListenerConnection:
listenerConnection
handleConnection:
currentRunLoop
handleEvent:forConnection:
testFlags
doesConnection:haveEntitlement:
handleLocateEvent:forConnection:tag:
handleRecentlySeenEvent:forConnection:tag:
handleUpdateHealthEvent:forConnection:tag:
handleImportEvent:forConnection:tag:
handleIntrospectEvent:forConnection:tag:
handleSetTestFlagsEvent:forConnection:tag:
date
choose:fromArray:sorted:other:tag:
timeIntervalSinceNow
firstObject
objectWithError:
relocateCachingServersWithTimeout:capabilities:affinityID:forceRefresh:tag:
dateWithTimeIntervalSinceNow:
locateCachingServersWithTimeout:capabilities:affinityID:autoRefresh:quickMiss:forceMiss:callback:callbackQueue:tag:
recentlySeenCachingServerWithAutoRefresh:callback:callbackQueue:tag:
updateHealthOfCachingServerWithHostport:healthy:override:callback:callbackQueue:tag:
initWithFileDescriptor:closeOnDealloc:
importToCachingServerAsURL:sourcePath:sourceFileHandle:sourceOffset:sourceLength:method:headers:importStrategies:entitled:callback:callbackQueue:tag:
localAddresses
gatewayIdentifiers
setLocalAddresses:
setGatewayIdentifiers:
cachedDNSPublicAddressRanges:andFavoredServerRanges:forNetworkIdentifiers:tag:
amRunningOnMyQueue
resolveDNSRecordsWithTimeout:callback:callbackQueue:tag:
setTestFlags:
dictionaryWithContentsOfFile:
mainBundle
objectForInfoDictionaryKey:
executablePath
componentsSeparatedByString:
uncacheAllAffinitiesWithTag:
diskCache
string
safeString:length:forceHex:
dataUsingEncoding:
makeRangesFromDNSRecordNamed:withType:data:length:more:error:tag:
resolveDNSRecordNamed:withTimeout:errorIfNotFound:callback:callbackQueue:tag:
numberWithInt:
dictionaryWithObjectsAndKeys:
dateWithTimeIntervalSince1970:
diskCachePlistPath
stringByResolvingSymlinksInPath
attributesOfItemAtPath:error:
bootTime
compare:
dataWithContentsOfFile:options:error:
propertyListWithData:options:format:error:
diskCacheVerifier
removeObjectAtIndex:
sanitizeRanges:fromSource:tag:
isEqualToArray:
transferVolatileStateFromDiskCache:toDiskCache:tag:
setDiskCache:
saveDiskCacheWithTag:
updateDiskCacheRefreshTimerWithTag:
setObject:forKeyedSubscript:
removeObjectForKey:
amRunningInMySingleLocate:
writeToFile:atomically:
setAttributes:ofItemAtPath:error:
fileURLWithPath:
setResourceValue:forKey:error:
diskCacheRefreshTimerResumed
cachedEntryCalled:withKey:forNetworkIdentifiers:validityInterval:tag:
mutableCopy
uncacheEntriesCalled:withKey:forNetworkIdentifiers:tag:
cachedRecentlySeen:forNetworkIdentifiers:validityInterval:tag:
uncacheRecentlySeenForNetworkIdentifiers:tag:
cacheRecentlySeen:forNetworkIdentifiers:validityInterval:tag:
containsString:
hasPrefix:
unsignedShortValue
serverCapabilitiesVerifier
initWithUUIDString:
scheme
caseInsensitiveCompare:
dataWithJSONObject:options:error:
absoluteString
requestWithURL:cachePolicy:timeoutInterval:
setHTTPMethod:
setHTTPShouldHandleCookies:
setValue:forHTTPHeaderField:
setHTTPBody:
locateCallback
locateSession
setLocateTag:
setLocateCallback:
setLocateCallbackQueue:
setLocateFavoredServerRanges:
setLocateResponseCode:
setLocateResponseData:
sessionWithConfiguration:canUseCachingServer:locateOptions:delegate:delegateQueue:
setLocateSession:
integerValue
null
initWithURL:statusCode:HTTPVersion:headerFields:
setLocateServerValidated:
subdataWithRange:
addOperationWithBlock:
dataTaskWithRequest:
resume
compileRanges:tag:
JSONObjectWithData:options:error:
serverDetailsVerifier
isAddress:inCompiledRanges:tag:
locateLocalCachingServersWithHeaders:body:timeout:favoredServerRanges:callback:callbackQueue:tag:
softwareVersions
uncacheDNSPublicAddressRangesAndFavoredServerRangesForNetworkIdentifiers:tag:
cacheDNSPublicAddressRanges:andFavoredServerRanges:forNetworkIdentifiers:validityInterval:tag:
longLongValue
doesServer:haveCapabilities:tag:
sortedArrayWithOptions:usingComparator:
isEqualToNumber:
subarrayWithRange:
affinityCache
querySessionConfig
sessionWithConfiguration:canUseCachingServer:locateOptions:
distantPast
sortUsingComparator:
invalidateAndCancel
dataWithPropertyList:format:options:error:
dataTaskWithRequest:completionHandler:
removeAllObjects
cachedServers:forNetworkIdentifiers:validityInterval:tag:
localhostAddresses
probeCacheForType:withLabel:networkIdentifiers:hitServers:hitValidityInterval:tag:
refineServers:intoBest:andOther:tag:
serversFromArray:withCapabilities:tag:
describeCapableServers:fromAvailableServers:withOtherServers:
cachedServers:forAffinityID:tag:
lastLocateDate
dateWithTimeInterval:sinceDate:
probeCacheWithLabel:capabilities:affinityID:hitServers:hitServersAreSorted:hitOtherServers:hitValidityInterval:tag:
slowcateCachingServerWithTimeout:capabilities:affinityID:forceRefresh:forceDNSRefresh:callback:tag:
cacheRefreshInProgress
setCacheRefreshInProgress:
setSingleLocateTag:
cacheServers:forAffinityID:tag:
queryServersFromArray:forReachabilityOrAffinityID:withTimeout:callbackWithServers:callbackQueue:tag:
uncacheAllServersWithTag:
cacheServers:forNetworkIdentifiers:validityInterval:tag:
uncacheAllRecentlySeenWithTag:
uncacheServersForNetworkIdentifiers:tag:
cacheNotRecentlySeenForNetworkIdentifiers:tag:
locateTetheredCachingServersWithTag:
locateLocalCachingServersWithTimeout:localAddresses:gatewayIdentifiers:configurationProfiles:forceDNSRefresh:callback:callbackQueue:tag:
rangeOfString:options:
substringToIndex:
hasSuffix:
substringWithRange:
numberWithUnsignedInteger:
importSessionConfig
uploadTaskWithStreamedRequest:
seekToEndOfFile
offsetInFile
importToLocalCachingServerAsURL:sourceFileHandle:sourceOffset:sourceLength:method:headers:callback:callbackQueue:tag:
locateTag
protectionSpace
authenticationMethod
serverTrust
skipEVCheck
credentialForTrust:
errorWithDomain:code:userInfo:
locateCallbackQueue
locateFavoredServerRanges
locateServerValidated
locateResponseCode
locateResponseData
setLastLocateDate:
parseLocateResponse:withFavoredServerRanges:intoServers:validityInterval:error:tag:
initWithData:encoding:
appendData:
redactLogs
redactStringsFromObject:usingBlock:
errorWithObject:fromService:tag:
networkChanged
anyCachedServersWithTag:
_redactLogs
_skipEVCheck
_diskCacheRefreshTimerResumed
_cacheRefreshInProgress
_locateServerValidated
_concurrentDNSResolutions
_singleLocateTag
_locateTag
_affinityQueryTimeout
_locateTimeout
_dnsResolutionTimeout
_locateURL
_refreshValidityInterval
_cacheDirPath
_diskCachePlistPath
_localhostAddresses
_serverCapabilitiesTemplate
_serverCapabilitiesVerifier
_serverDetailsTemplate
_serverDetailsVerifier
_diskCacheTemplate
_diskCacheVerifier
_softwareVersions
_bootTime
_locateSessionConfig
_importSessionConfig
_querySessionConfig
_queue
_listenerConnection
_diskCache
_diskCacheRefreshTimer
_singleLocate
_locateOpQueue
_localAddresses
_gatewayIdentifiers
_cacheRefreshQueue
_affinityCache
_testFlags
_locateCallback
_locateCallbackQueue
_locateFavoredServerRanges
_locateSession
_locateResponseCode
_locateResponseData
_lastLocateDate
Td,V_affinityQueryTimeout
Ti,V_concurrentDNSResolutions
Td,V_locateTimeout
Td,V_dnsResolutionTimeout
T@"NSURL",&,V_locateURL
TB,V_redactLogs
Td,V_refreshValidityInterval
TB,V_skipEVCheck
T@"NSString",&,V_cacheDirPath
T@"NSString",&,V_diskCachePlistPath
T@"NSArray",&,V_localhostAddresses
T@"NSDictionary",&,V_serverCapabilitiesTemplate
T@"ACLSTypeVerifier",&,V_serverCapabilitiesVerifier
T@"NSDictionary",&,V_serverDetailsTemplate
T@"ACLSTypeVerifier",&,V_serverDetailsVerifier
T@"NSDictionary",&,V_diskCacheTemplate
T@"ACLSTypeVerifier",&,V_diskCacheVerifier
T@"NSArray",&,V_softwareVersions
T@"NSDate",&,V_bootTime
T@"NSURLSessionConfiguration",&,V_locateSessionConfig
T@"NSURLSessionConfiguration",&,V_importSessionConfig
T@"NSURLSessionConfiguration",&,V_querySessionConfig
T@"NSObject<OS_dispatch_queue>",&,V_queue
T@"NSObject<OS_xpc_object>",&,V_listenerConnection
T@"NSMutableDictionary",&,V_diskCache
T@"NSObject<OS_dispatch_source>",&,V_diskCacheRefreshTimer
TB,V_diskCacheRefreshTimerResumed
T@"NSObject<OS_dispatch_semaphore>",&,V_singleLocate
TI,V_singleLocateTag
T@"NSOperationQueue",&,V_locateOpQueue
T@"NSArray",&,V_localAddresses
T@"NSArray",&,V_gatewayIdentifiers
T@"NSObject<OS_dispatch_queue>",&,V_cacheRefreshQueue
TB,V_cacheRefreshInProgress
T@"NSMutableDictionary",&,V_affinityCache
TQ,V_testFlags
TI,V_locateTag
T@?,C,V_locateCallback
T@"NSObject<OS_dispatch_queue>",&,V_locateCallbackQueue
T@"NSArray",&,V_locateFavoredServerRanges
T@"ACSURLSession",&,V_locateSession
TB,V_locateServerValidated
TQ,V_locateResponseCode
T@"NSMutableData",&,V_locateResponseData
T@"NSDate",&,V_lastLocateDate
#%08x [%s] verify %@
#%08x [%s] %@ is missing
#%08x [%s] %@ has wrong type: %@; expected %@: %{private}@
#%08x [%s] allActiveNetworkInterfaces %d %@
#%08x [%s] makeLocalAddresses
#%08x [%s] makeLocalAddresses: %{private}@
#%08x [%s] makeLocalAddresses: defaultAddresses[%ld]: ifindex=%d gwaddr=%{private}@
#%08x [%s] makeLocalAddresses: denied access to MAC address
#%08x [%s] makeLocalAddresses: defaultAddresses[%d]: gwmac=%{private}@
#%08x [%s] makeLocalAddresses: %@
#%08x [%s] makeLocalAddresses: defaultAddresses[%d]: ifaddr=%@
#%08x [%s] makeLocalAddresses -> localAddresses=%@ gatewayIdentifiers=[%ld]%{private}@
#%08x [%s] digestIdentifier:%{private}@ -> %@=%.*P, %@=%.*P
#%08x [%s] isDigestedIdentifier:%@=%.*P,%@=%.*P equalToCleartextIdentifier:%{private}@ -> %{BOOL}d
#%08x [%s] areDigestedIdentifiers:%@ equalToCleartextIdentifiers:[%ld]%{private}@
#%08x [%s] areDigestedIdentifiers:equalToCleartextIdentifiers: -> %{BOOL}d
#%08x [%s] URLSession:%@ didReceiveChallenge:%@
#%08x [%s] URLSession:%@ task:%@ didReceiveChallenge:%@
#%08x [%s] URLSession:%@ task:%@ needNewBodyStream
#%08x [%s] URLSession:%@ task:%@ didCompleteWithError:%@
#%08x [%s] URLSession:%@ dataTask:%@ didReceiveResponse:%@
#%08x [%s] cache directory = %@
#%08x [%s] bad type for preference %@; expected %@
#%08x [%s] unable to create directory %@: %@
#%08x [%s] automatic disk cache refresh
#%08x [%s] Error getting system group container for identifier %@: %llu
#%08x [%s] NSObjectFromXPCObject: unhandled XPC object %@
#%08x [%s] XPCObjectFromNSObject: unhandled NS object %@
#%08x [%s] choose:%d fromArray:%@ sorted:%{BOOL}d other:%@ -> %@
#%08x [%s] %s starting for user %d
#%08x [%s] xpc_connection_create(%s) failed
#%08x [%s] XPC listener received event %@
#%08x [%s] %s exiting:  XPC listener gone and no more XPC connections
#%08x [%s] XPC connection from pid %d uid %d
#%08x [%s] XPC connection from pid %d uid %d received event %@
#%08x [%s] handleEvent:%@ forConnection:%@
#%08x [%s] rejecting civilian XPC request from pid %d uid %d: %s
#%08x [%s] XPC request from pid %d uid %d: %s
#%08x [%s] XPC connection from pid %d uid %d received unknown %s: %s
#%08x [%s] XPC connection from pid %d uid %d received invalid %s: #%08x
#%08x [%s] handleLocateEvent callback(servers=%@, sorted=%{BOOL}d, other=%@, validityInterval=%.3f, error=%@)
#%08x [%s] XPC response to pid %d uid %d: success: servers=%@ validityInterval=%.3f elapsed=%.3f
#%08x [%s] XPC response to pid %d uid %d: error: %@, elapsed=%.3f
#%08x [%s] handleRecentlySeenEvent callback(recentlySeen=%{BOOL}d, error=%@)
#%08x [%s] XPC response to pid %d uid %d: recentlySeen=%{BOOL}d, elapsed=%.3f
#%08x [%s] handleImportEvent callback(success=%{BOOL}d, error=%@)
#%08x [%s] XPC response to pid %d uid %d: success=%{BOOL}d, elapsed=%.3f
#%08x [%s] XPC response to pid %d uid %d: introspection=%{private}@
#%08x [%s] handleIntrospectEvent callback(dnsPublicAddressRanges=[%ld]%{private}@ dnsFavoredServerRanges=[%ld]%@ dnsValidityInterval=%.3f dnsError=%@)
#%08x [%s] network configuration changed; invalidating saved local address info
#%08x [%s] watchForNetworkChanges
#%08x [%s] using %@ for %@
#%08x [%s] makeRangesFromDNSRecordNamed:%@ withType:%d data:[%ld]%{private}@
#%08x [%s] makeRangesFromDNSRecordWithType -> [%ld]%{private}@, more %{BOOL}d, error %@
#%08x [%s] resolveDNSRecordNamed:%@
#%08x [%s] resolveDNSRecordNamed:%@ res_nsearch -> %d/%d, errno %{darwin.errno}d, h_errno %d
#%08x [%s] resolveDNSRecordNamed:%@ %d/%d: s=%d d=%d l=%d e=%d
#%08x [%s] resolveDNSRecordNamed:%@ %d/%d: type=%@
#%08x [%s] ignoring DNS error: %@
#%08x [%s] resolveDNSRecordsWithTimeout:%.3f callback:%p callbackQueue:%s
#%08x [%s] resolveDNSRecords: %@ callback(publicAddressRanges=[%ld]%{private}@, favoredServerRanges=[%ld]%@, validityInterval=%.3f, more=%{BOOL}d, error=%@)
#%08x [%s] waiting up to %.3f sec for concurrent DNS resolution of %@
#%08x [%s] resolveDNSRecords: %@: result=%{private}@
#%08x [%s] resolveDNSRecords -> public addresses: [%ld]%{private}@, favored servers: [%ld]%@, validityInterval %.f
#%08x [%s] resolveDNSRecords -> %@
#%08x [%s] sanitizeRanges:[%ld]%{private}@ fromSource:%@
#%08x [%s] sanitizeRanges: bad entry %lu/%lu in %@
#%08x [%s] sanitizeRanges -> [%ld]%{private}@
#%08x [%s] makeBootTime
#%08x [%s] makeBootTime -> %{private}@
#%08x [%s] loadDiskCache
#%08x [%s] loadDiskCache: discarding disk cache after system reboot
#%08x [%s] loadDiskCache: failed to load %@: %@
#%08x [%s] loadDiskCache: discarding version %@ disk cache
#%08x [%s] loadDiskCache: discarding %@ %@ entry %{private}@
#%08x [%s] loadDiskCache: discarding %@ %@ entry %@
#%08x [%s] loadDiskCache -> %{private}@
#%08x [%s] transferVolatileState
#%08x [%s] transfer diskCache[%@][%@].%@ %@ (override %@)
#%08x [%s] saveDiskCache diskCache=%{private}@
#%08x [%s] unable to write disk cache to %@: %{darwin.errno}d
#%08x [%s] failed to set attributes of %@: %@
#%08x [%s] failed to exclude %@ from backups: %@
#%08x [%s] updateDiskCacheRefreshTimer
#%08x [%s] next automatic disk cache refresh at or after %@ (%@ + %.f sec)
#%08x [%s] automatic disk cache refreshes suspended
#%08x [%s] cached%@ForNetworkIdentifiers:[%ld]%{private}@
#%08x [%s] cached%@ForNetworkIdentifiers -> %@ validityInterval=%.3f
#%08x [%s] cached%@ForNetworkIdentifiers -> %@
#%08x [%s] cacheServers:%@ forNetworkIdentifiers:[%ld]%{private}@ validityInterval:%.3f
#%08x [%s] after cacheServers diskCache=%{private}@
#%08x [%s] uncache%@ForNetworkIdentifiers:[%ld]%{private}@
#%08x [%s] after uncache%@ diskCache=%{private}@
#%08x [%s] uncacheAllServers
#%08x [%s] cacheDNSPublicAddressRanges:[%ld]%{private}@ andFavoredServerRanges:[%ld]%@ forNetworkIdentifiers:[%ld]%{private}@ validityInterval:%.3f
#%08x [%s] after cacheDNSPublicAddressRanges diskCache=%{private}@
#%08x [%s] cacheRecentlySeen:%{BOOL}d forNetworkIdentifiers:[%ld]%{private}@ validityInterval:%.3f
#%08x [%s] after cacheRecentlySeen diskCache=%{private}@
#%08x [%s] uncacheAllRecentlySeen
#%08x [%s] locateTetheredCachingServers: tethered=%{BOOL}d
#%08x [%s] locateTetheredCachingServers failed to synchronize user preferences
#%08x [%s] locateTetheredCachingServers: CFPreferencesCopyValue(%@, %@) returned unexpected value %@
#%08x [%s] locateTetheredCachingServers -> %@
#%08x [%s] locateLocalCachingServersWithHeaders:%@ body:%@ timeout:%.3f favoredServerRanges:%@ callback:%p callbackQueue:%s
#%08x [%s] sending POST [%d]%.*s to %@
#%08x [%s] parseLocateResponse:%{private}@ withFavoredServerRanges:%@
#%08x [%s] parseLocateResponse response=%@
#%08x [%s] in response from %@, server entry is invalid: %@
#%08x [%s] parseLocateResponse -> servers=%@, validityInterval=%.3f, error=%@
#%08x [%s] locateLocalCachingServersWithTimeout:%.3f localAddresses:%@ gatewayIdentifiers:[%ld]%{private}@ configurationProfiles:%{private}@ forceDNSRefresh:%{BOOL}d callback:%p callbackQueue:%s
#%08x [%s] locateLocalCachingServers callback(locateServers=%@, sorted=%{BOOL}d, other=%@, locateValidityInterval=%.3f, locateError=%@)
#%08x [%s] locateLocalCachingServers callback(dnsPublicAddressRanges=[%ld]%{private}@ dnsFavoredServerRanges=[%ld]%@ dnsValidityInterval=%.3f dnsError=%@)
#%08x [%s] doesServer:%@ haveCapabilities:%@
#%08x [%s] doesServerHaveCapabilities -> %{BOOL}d
#%08x [%s] serversFromArray:%@ withCapabilities:%@
#%08x [%s] serversFromArray -> %@
#%08x [%s] refineServers:%@
#%08x [%s] refineServers -> best=%@ other=%@
#%08x [%s] cachedServers:%@ forAffinityID:%@ hostports=%@ -> %@
#%08x [%s] cacheServers:%@ forAffinityID:%@ hostports=%@
#%08x [%s] queryServersFromArray:%@ forReachabilityOrAffinityID:%@ withTimeout:%.3f
#%08x [%s] sending GET to %@
#%08x [%s] Error sending %@: %@
#%08x [%s] %@ lastSaved %@
#%08x [%s] Invalid response from %@: %@ (%@)
#%08x [%s] Invalid response from %@: %ld bytes
#%08x [%s] No affinity from %@
#%08x [%s] Error response from %@: %d
#%08x [%s] Invalid response from %@: %@
#%08x [%s] skipping %@ server %@
#%08x [%s] uncacheAllAffinities
#%08x [%s] probeCacheForType:%@ withLabel:%@ networkIdentifiers:%@
#%08x [%s] %@ cached servers=%@ %@ hit=%{BOOL}d
#%08x [%s] probeCacheForType -> hit: servers=%@ validityInterval=%.3f
#%08x [%s] probeCacheForType -> miss
#%08x [%s] probeCacheWithLabel:%@ capabilities:%@ affinityID:%@
#%08x [%s] %@ hit: %@
#%08x [%s] locateCachingServersWithTimeout:%.3f capabilities:%@ affinityID:%@ autoRefresh:%{BOOL}d quickMiss:%{BOOL}d forceMiss:%{BOOL}d callback:%p callbackQueue:%s
#%08x [%s] ignoring forceMiss so soon after locate; next allowed %@
#%08x [%s] quick miss
#%08x [%s] relocateCachingServersWithTimeout:%.3f capabilities:%@ affinityID:%@ forceRefresh:%{BOOL}d
#%08x [%s] starting proactive cache refresh
#%08x [%s] cache refresh finished (servers=%@, sorted=%{BOOL}d, other=%@, validityInterval=%.3f, error=%@)
#%08x [%s] slowcateCachingServerWithTimeout:%.3f capabilities:%@ affinityID:%@ forceRefresh:%{BOOL}d forceDNSRefresh:%{BOOL}d callback:%p
#%08x [%s] slowcateCachingServer finishSingleLocateAndCallBackWithServers(servers=%@, sorted=%{BOOL}d, other=%@, validityInterval=%.3f, error=%@)
#%08x [%s] slowcateCachingServer callback(localhostServers=%@, sorted=%{BOOL}d, other=%@, localhostValidityInterval=%.3f, localhostError=%@)
#%08x [%s] found %@
#%08x [%s] checking for caching servers on local network
#%08x [%s] slowcateCachingServer callback(localServers=%@, sorted=%{BOOL}d, other=%@, localValidityInterval=%.3f, localError=%@)
#%08x [%s] found %@, sorted=%{BOOL}d
#%08x [%s] no local network
#%08x [%s] slowcateCachingServer -> %@
#%08x [%s] compileRanges:%@ -> %@
#%08x [%s] isAddress:%@ inCompiledRanges:%@ -> %{BOOL}d
#%08x [%s] recentlySeenCachingServerWithAutoRefresh:%{BOOL}d callback:%p callbackQueue:%s
#%08x [%s] updateHealthOfCachingServerWithHostport:%@ healthy:%{BOOL}d override:%{BOOL}d
#%08x [%s] health update invalid
#%08x [%s] caching server %@ is healthy again
#%08x [%s] caching server %@ is now unhealthy
#%08x [%s] importToLocalCachingServerAsURL:%@ sourceFileHandle:%@ sourceOffset:%llu sourceLength:%llu method:%@ headers:%@ callback:%p callbackQueue:%s
#%08x [%s] importToCachingServerAsURL:%@ sourcePath:%@ sourceFileHandle:%@ sourceOffset:%llu sourceLength:%llu method:%@ headers:%@ importStrategies:%@ entitled:%{BOOL}d callback:%p callbackQueue:%s
#%08x [%s] URLSession:%@ didReceiveChallenge:%@ [protection space %@]
#%08x [%s] LocateURL %@ untrusted: EV=%@ organization=%@
#%08x [%s] LocateURL %@ untrusted: no EV result
#%08x [%s] LocateURL %@ trusted %@ EV, credential=%@
#%08x [%s] LocateURL %@ untrusted: error=%@
#%08x [%s] NO_LOCAL_SERVER
#%08x [%s] URLSession:%@ dataTask:%@ didReceiveData:[%ld bytes]
ACLSTypeVerifier
ACLSNetworkInterface
ACLSIPv4Range
ACLSIPv6Range
ACLSNetworkUtilities
ACLSImportDelegate
ACSURLSessionDataDelegate
ACSURLSessionTaskDelegate
ACSURLSessionDelegate
NSObject
ACLSFileHandleInputStream
AssetCacheLocatorService
@24@0:8@16
B36@0:8@16@24I32
@28@0:8@16I24
B44@0:8@16@24@32I40
@36@0:8@16@24I32
@16@0:8
v24@0:8@16
v16@0:8
@"NSDictionary"
B16@0:8
v20@0:8B16
d16@0:8
v24@0:8d16
@"NSString"
@"NSNumber"
@32@0:8r^{in_addr=I}16r^{in_addr=I}24
B24@0:8r^{in_addr=I}16
{in_addr=I}16@0:8
v20@0:8{in_addr=I}16
{in_addr="s_addr"I}
@32@0:8r^{in6_addr=(?=[16C][8S][4I])}16r^{in6_addr=(?=[16C][8S][4I])}24
B24@0:8r^{in6_addr=(?=[16C][8S][4I])}16
{in6_addr=(?=[16C][8S][4I])}16@0:8
v32@0:8{in6_addr=(?=[16C][8S][4I])}16
{in6_addr="__u6_addr"(?="__u6_addr8"[16C]"__u6_addr16"[8S]"__u6_addr32"[4I])}
@32@0:8@16@24
d24@0:8@16
@40@0:8^{__SCNetworkInterface=}16^{__SCNetworkService=}24@32
B24@0:8r^{sockaddr_in=CCS{in_addr=I}[8c]}16
B24@0:8r^{sockaddr_in6=CCSI{in6_addr=(?=[16C][8S][4I])}I}16
B24@0:8@16
@24@0:8r^{in_addr=I}16
@24@0:8r^{in6_addr=(?=[16C][8S][4I])}16
@24@0:8*16
@24@0:8r^{sockaddr_in=CCS{in_addr=I}[8c]}16
@24@0:8r^{sockaddr_in6=CCSI{in6_addr=(?=[16C][8S][4I])}I}16
@24@0:8r^{sockaddr_dl=CCSCCCC[12c]}16
@24@0:8r^{sockaddr_storage=CC[6c]q[112c]}16
B36@0:8^@16^@24I32
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v40@0:8@16@24@?32
v32@0:8@"ACSURLSession"16@"NSError"24
v40@0:8@"ACSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v56@0:8@16@24@32@40@?48
v48@0:8@16@24@32@?40
v56@0:8@16@24q32q40q48
v40@0:8@16@24@32
v52@0:8@16@24B32@36@?44
v32@0:8@"ACSURLSession"16@"ACSURLSessionTask"24
v56@0:8@"ACSURLSession"16@"ACSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"ACSURLSession"16@"ACSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"ACSURLSession"16@"ACSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"ACSURLSession"16@"ACSURLSessionTask"24q32q40q48
v40@0:8@"ACSURLSession"16@"ACSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"ACSURLSession"16@"ACSURLSessionTask"24@"NSError"32
v52@0:8@"ACSURLSession"16@"ACSURLSessionTask"24B32@"NSURLRequest"36@?<v@?@"NSURLRequest">44
v48@0:8@"ACSURLSession"16@"ACSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"ACSURLSession"16@"ACSURLSessionDataTask"24@"ACSURLSessionDownloadTask"32
v40@0:8@"ACSURLSession"16@"ACSURLSessionDataTask"24@"NSData"32
v48@0:8@"ACSURLSession"16@"ACSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
@60@0:8@16Q24Q32@?40@48I56
v24@0:8Q16
@?16@0:8
v24@0:8@?16
I16@0:8
v20@0:8I16
i16@0:8
v20@0:8i16
@"NSFileHandle"
@"NSObject<OS_dispatch_queue>"
@40@0:8@16q24q32
v32@0:8^{__CFRunLoop=}16^{__CFString=}24
B40@0:8Q16^?24^{?=q^v^?^?^?}32
q32@0:8*16Q24
B32@0:8^*16^Q24
q16@0:8
v24@0:8q16
B20@0:8I16
@36@0:8@16r*24I32
@44@0:8i16@20B28@32I40
B32@0:8@16@24
B32@0:8@16r*24
@36@0:8r*16Q24B32
@64@0:8@16i24r*28Q36^B44^@52I60
v56@0:8@16d24B32@?36@44I52
v44@0:8d16@?24@32I40
@20@0:8I16
v44@0:8^@16@24^d32I40
@52@0:8@16@24@32^d40I48
v44@0:8@16@24d32I40
v28@0:8@16I24
v44@0:8@16@24@32I40
v44@0:8^@16^@24@32I40
v52@0:8@16@24@32d40I48
v40@0:8B16@20d28I36
v68@0:8@16@24d32@40@?48@56I64
B60@0:8@16@24^@32^d40^@48I56
v72@0:8d16@24@32@40B48@?52@60I68
v44@0:8@16^@24^@32I40
v36@0:8@16@24I32
v60@0:8@16@24d32@?40@48I56
B60@0:8@16@24@32^@40^d48I56
i76@0:8@16@24@32^@40^B48^@56^d64I72
v72@0:8d16@24@32B40B44B48@?52@60I68
v48@0:8d16@24@32B40I44
v60@0:8d16@24@32B40B44@?48I56
@40@0:8@16@24@32
v40@0:8B16@?20@28I36
v52@0:8@16B24B28@?32@40I48
v84@0:8@16@24q32q40@48@56@?64@72I80
v104@0:8@16@24@32q40q48@56@64@72B80@?84@92I100
@32@0:8@16@?24
@"NSURL"
@"NSArray"
@"ACLSTypeVerifier"
@"NSDate"
@"NSURLSessionConfiguration"
@"NSObject<OS_xpc_object>"
@"NSMutableDictionary"
@"NSObject<OS_dispatch_source>"
@"NSObject<OS_dispatch_semaphore>"
@"NSOperationQueue"
@"ACSURLSession"
@"NSMutableData"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.private.AssetCache.import</key>
<true/>
<key>com.apple.security.system-groups</key>
<array>
<string>systemgroup.com.apple.AssetCacheServices.diskCache</string>
</array>
<key>seatbelt-profiles</key>
<array>
<string>com.apple.AssetCacheLocatorService</string>
</array>
</dict>
</plist>
@(#)PROGRAM:AssetCacheLocatorService  PROJECT:AssetCacheServices-117
u"Acom.apple.private.AssetCacheServices.test
com.apple.private.AssetCache.import
more
prs=
fss=
prn=
fsn=
class
mandatory
template
-[ACLSTypeVerifier verify:name:withTemplate:tag:]
ACLSTypeVerifier.m
template != nil && [template isKindOfClass:[NSDictionary class]]
class != nil
[%ld]
v32@?0@8Q16^B24
v32@?0@8@"NSDictionary"16^B24
digest
{IP Address = %@, BSD Name = %@, Device ID = %@, User Readable = %@, IO Path Location = %#x, Wired = %@, Interface Type = %@, NCM = %@, Speed = %.1f Mbps}
%@-%@
AssetCacheTetherator
service[%d] %@
, if %@
, bn %@
, lk %@
, ds %d
, li %d
, la %@ %d
, 4p %d
, 4c %d
, 4m %@
, 4g %@
, 4d %d
, !4d %@
, !4l %@
, !4c %@, !4p %@
, 6p %d
, 6c %d
, 6m %@
, 6g %@
, 6d %d
, !6d %@
, !6l %@
, !6c %@, !6p %@
, !li %@
, !ds %@
, network service disabled %@
IOService
locationID
AppleUSBDeviceNCMData
/Network/Service/
%02x:%02x:%02x:%02x:%02x:%02x
<type=%#x>
<unknown>
%.*s
%02x
(family=%u)
sa_family=%d, rtm_addrs=%#x, rtm_flags=%#x
, skipping %s (sa=%p + len=%d = %p, lim=%p, msg=%p)
, %s=[%u]%@
ifa_name=%s, ifa_flags=%#x, ifa_addr=%@
, ifa_netmask=%@
, ifa_dstaddr=%@
RTAX_DST
RTAX_GATEWAY
RTAX_NETMASK
RTAX_GENMASK
RTAX_IFP
RTAX_IFA
RTAX_AUTHOR
RTAX_BRD
HTTP response %d from server
bad response from server
v8@?0
systemgroup.com.apple.AssetCacheServices.diskCache
Library/Caches/com.apple.AssetCacheLocatorService
diskCache.plist
AffinityQueryTimeout
ConcurrentDNSResolutions
DNSResolutionTimeout
LocateTimeout
LocateURL
RedactLogs
RefreshValidityInterval
SkipEVCheck
ac-power
cache-size
cache
connectTimeout
details
dnsResults
failureCount
favoredServerRanges
first
is-portable
last
localAddressAndPort
local-network
more
networkIdentifiers
publicAddressRanges
query-parameters
serversRecentlySeen
source
speed
validUntil
version
wired
https://lcdn-locator.apple.com/lcdn/locate
_aaplcache%@._tcp
com.apple.AssetCacheServices
Daemon
/var/mobile/Library/Caches/com.apple.AssetCacheLocatorService
a number
a string
%@/%@
localhost
127.0.0.1
AssetCacheLocatorService.queue
-[AssetCacheLocatorService init]_block_invoke
AssetCacheLocatorService.m
self.singleLocateTag == 0
AssetCacheLocatorService.cacheRefreshQueue
errorDomain
errorCode
errorDescription
error
%s: %s
B24@?0Q8@"NSObject<OS_xpc_object>"16
B24@?0r*8@"NSObject<OS_xpc_object>"16
v32@?0@"NSString"8@16^B24
-[AssetCacheLocatorService choose:fromArray:sorted:other:tag:]
AssetCacheLocatorService
com.apple.AssetCacheLocatorService
v16@?0@"NSObject<OS_xpc_object>"8
command
locate
recentlySeen
updateHealth
import
introspect
setTestFlags
quantity
x-apple-persistent-identifier
capabilities
namespaces
personalCaching
queryParameters
sizeHint
autoRefresh
quickMiss
forceMiss
hostport
guid
healthy
favored
supportsUrgency
timeout
rank
servers
validityInterval
v44@?0@"NSArray"8B16@"NSArray"20d28@"NSError"36
v20@?0B8@"NSError"12
success
method
POST
sourcePath
sourceOffset
sourceLength
sourceFd
headers
importStrategies
missing or invalid arguments
introspection
-[AssetCacheLocatorService handleIntrospectEvent:forConnection:tag:]_block_invoke
[self amRunningOnMyQueue]
v40@?0@"NSArray"8@"NSArray"16d24@"NSError"32
flags
/System/Library/CoreServices/SystemVersion.plist
ProductName
ProductVersion
ProductBuildVersion
type
system
name
build
CFBundleIdentifier
CFBundleName
CFBundleShortVersionString
bundle
executable
com.apple.AssetCacheLocatorService.network-watcher
simulatedCurrentNetwork
local network
localAddresses
gatewayIdentifiers
%%%02x
invalid range in %@ %s: %@
invalid range in %@ %s at index %ld
simulatedDNSResponses
resolv
initResult
initialSize
hErrno
answer
delay
response
simulated timeout
simulated error
%@: out of memory for %d byte DNS buffer
unable to parse DNS TXT record %@ (a=%d, n=%d, c=%d, i=%d, e=%d, b=%d, u=%d)
%@: cannot parse DNS response: %s
%@: DNS error %d: %s
%@: res_ninit() failed
AssetCacheLocatorService.resolve.resultsQueue
v44@?0@"NSArray"8@"NSArray"16d24B32@"NSError"36
%@ through %@
timed out waiting for concurrent DNS resolution of %@
too many chained DNS records, max %d
timed out before getting to DNS resolution of %@
-[AssetCacheLocatorService loadDiskCacheWithTag:]
not a dictionary
diskCache
expired
invalid
-[AssetCacheLocatorService saveDiskCacheWithTag:]
[self amRunningInMySingleLocate:tag]
[self.diskCacheVerifier verify:self.diskCache name:@"diskCache" tag:tag]
-[AssetCacheLocatorService updateDiskCacheRefreshTimerWithTag:]
nextDiskCacheRefreshDate
Servers
-[AssetCacheLocatorService cachedEntryCalled:withKey:forNetworkIdentifiers:validityInterval:tag:]
-[AssetCacheLocatorService cacheServers:forNetworkIdentifiers:validityInterval:tag:]
-[AssetCacheLocatorService uncacheEntriesCalled:withKey:forNetworkIdentifiers:tag:]
-[AssetCacheLocatorService anyCachedServersWithTag:]
-[AssetCacheLocatorService uncacheAllServersWithTag:]
DNSResults
-[AssetCacheLocatorService cacheDNSPublicAddressRanges:andFavoredServerRanges:forNetworkIdentifiers:validityInterval:tag:]
RecentlySeen
-[AssetCacheLocatorService cacheRecentlySeen:forNetworkIdentifiers:validityInterval:tag:]
-[AssetCacheLocatorService uncacheAllRecentlySeenWithTag:]
[%@]
tethered.Capabilities
%@:%hu
-[AssetCacheLocatorService locateLocalCachingServersWithHeaders:body:timeout:favoredServerRanges:callback:callbackQueue:tag:]
https
preference %@ must use https: %@
v32@?0@8@16^B24
self.locateCallback == nil
self.locateSession == nil
simulatedLocateResponses
local
status
NO_LOCAL_SERVER
HTTP/1.1
v16@?0q8
-[AssetCacheLocatorService locateLocalCachingServersWithHeaders:body:timeout:favoredServerRanges:callback:callbackQueue:tag:]_block_invoke_3
disposition == ACSURLSessionResponseAllow
connect-timeout
address
port
servers[%ld].details
%@:%@
v32@?0@"NSDictionary"8Q16^B24
unable to parse any servers in response from %@
response from %@ has missing or invalid servers: %@
validity-interval
response body from %@ not a dictionary
-[AssetCacheLocatorService locateLocalCachingServersWithTimeout:localAddresses:gatewayIdentifiers:configurationProfiles:forceDNSRefresh:callback:callbackQueue:tag:]
v24@?0@"NSDictionary"8@"NSDictionary"16
close
Connection
application/json
Content-Type
X-Protocol-Version
locator-software
#%08x
locator-tag
local-addresses
public-address-ranges
ranked-results
@8@?0
-[AssetCacheLocatorService locateLocalCachingServersWithTimeout:localAddresses:gatewayIdentifiers:configurationProfiles:forceDNSRefresh:callback:callbackQueue:tag:]_block_invoke
q24@?0@"NSDictionary"8@"NSDictionary"16
-[AssetCacheLocatorService cachedServers:forAffinityID:tag:]
-[AssetCacheLocatorService cacheServers:forAffinityID:tag:]
AssetCacheLocatorService.queryQueue
http://%@/%@
affinity
X-Apple-Locator-Tag
Max-Forwards
unhealthy
nonfavored
lastSaved
server
-[AssetCacheLocatorService queryServersFromArray:forReachabilityOrAffinityID:withTimeout:callbackWithServers:callbackQueue:tag:]_block_invoke
serverIsHealthy
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
simulatedAffinityResponses
reachability
-[AssetCacheLocatorService uncacheAllAffinitiesWithTag:]
-[AssetCacheLocatorService probeCacheForType:withLabel:networkIdentifiers:hitServers:hitValidityInterval:tag:]
-[AssetCacheLocatorService probeCacheWithLabel:capabilities:affinityID:hitServers:hitServersAreSorted:hitOtherServers:hitValidityInterval:tag:]
early
-[AssetCacheLocatorService locateCachingServersWithTimeout:capabilities:affinityID:autoRefresh:quickMiss:forceMiss:callback:callbackQueue:tag:]_block_invoke
affinityID != nil
quick miss requested
-[AssetCacheLocatorService relocateCachingServersWithTimeout:capabilities:affinityID:forceRefresh:tag:]_block_invoke
self.cacheRefreshInProgress
-[AssetCacheLocatorService slowcateCachingServerWithTimeout:capabilities:affinityID:forceRefresh:forceDNSRefresh:callback:tag:]
-[AssetCacheLocatorService slowcateCachingServerWithTimeout:capabilities:affinityID:forceRefresh:forceDNSRefresh:callback:tag:]_block_invoke
self.singleLocateTag == tag
standard
v20@?0@"NSArray"8B16
timed out waiting for singleLocate sema
no caching servers
%d caching server%@: 
 unhealthy
 incapable
 [plus %d more of other ranks]
health-update
%llu
Content-Length
-[AssetCacheLocatorService URLSession:didReceiveChallenge:completionHandler:]
Apple Inc.
without
with
-[AssetCacheLocatorService URLSession:task:didCompleteWithError:]_block_invoke
unable to validate server for %@
no data from server
HTTP error %u from %@, body: %@
-[AssetCacheLocatorService URLSession:dataTask:didReceiveResponse:completionHandler:]_block_invoke
-[AssetCacheLocatorService URLSession:dataTask:didReceiveData:]_block_invoke
too much data in response from %@ (max %lu)
@"NSString"16@?0@"NSString"8
[redacted]
com.apple.AssetCacheTetherator
com.apple.AssetCacheLocatorService.tag
XPC_ERROR_CONNECTION_INTERRUPTED
XPC_ERROR_CONNECTION_INVALID
XPC_ERROR_TERMINATION_IMMINENT
defunct
init
setTemplate:
template
verify:name:withTemplate:tag:
sanitize:withTemplate:tag:
objectForKey:
boolValue
stringByAppendingFormat:
enumerateObjectsUsingBlock:
enumerateKeysAndObjectsUsingBlock:
count
arrayWithCapacity:
addObject:
dictionaryWithCapacity:
setObject:forKey:
initWithTemplate:
verify:name:tag:
sanitize:tag:
.cxx_destruct
_template
T@"NSDictionary",&,V_template
ipAddress
bsdName
deviceID
userReadable
locationID
unsignedIntValue
wired
interfaceType
isNCM
speed
stringWithFormat:
description
setIpAddress:
setBsdName:
setDeviceID:
setUserReadable:
setLocationID:
setWired:
setSpeed:
setInterfaceType:
setIsNCM:
shareable
setShareable:
useful
setUseful:
_wired
_isNCM
_shareable
_useful
_ipAddress
_bsdName
_deviceID
_userReadable
_locationID
_speed
_interfaceType
T@"NSString",&,V_ipAddress
T@"NSString",&,V_bsdName
T@"NSString",&,V_deviceID
T@"NSString",&,V_userReadable
T@"NSNumber",&,V_locationID
TB,V_wired
T@"NSString",&,V_interfaceType
TB,V_isNCM
Td,V_speed
TB,V_shareable
TB,V_useful
setFirst:
setLast:
stringFromInaddr4:
initWithFirst:andLast:
containsAddress:
first
last
_first
_last
T{in_addr=I},V_first
T{in_addr=I},V_last
stringFromInaddr6:
T{in6_addr=(?=[16C][8S][4I])},V_first
T{in6_addr=(?=[16C][8S][4I])},V_last
allActiveNetworkInterfaces
countByEnumeratingWithState:objects:count:
UTF8String
stringWithUTF8String:
appendFormat:
isManualConfigMethod4:
createNetworkInterface:service:configInfo:
isAutomaticConfigMethod4:
serviceIDFromKey:
isEqualToString:
isManualConfigMethod6:
isAutomaticConfigMethod6:
doubleValue
isWiredNetworkInterfaceType:
numberWithUnsignedInt:
speedFromEthernetMediaSubType:
lastObject
length
isShareableSockaddr4:
isUsefulSockaddr4:
isShareableSockaddr6:
isUsefulSockaddr6:
isShareableInaddr4:
isShareableInaddr6:
isUsefulInaddr4:
isUsefulInaddr6:
setWithObjects:
containsObject:
arrayWithObjects:count:
scannerWithString:
characterSetWithCharactersInString:
scanUpToString:intoString:
scanString:intoString:
scanUpToCharactersFromSet:intoString:
stringFromMacAddr:
appendString:
stringFromSockaddr4:
stringFromSockaddr6:
stringFromSockaddrDL:
stringFromSockaddrStorage:
setWithCapacity:
addObjectsFromArray:
copy
dataWithBytes:length:
bytes
dictionaryWithObjects:forKeys:count:
digestIdentifier:tag:
objectAtIndex:
isDigestedIdentifier:equalToCleartextIdentifier:tag:
hasUsefulUSBEthernetInterface
netmask4ContainingStartAddress:endAddress:
makeLocalAddresses:andGatewayIdentifiers:tag:
digestIdentifiers:tag:
areDigestedIdentifiers:equalToCleartextIdentifiers:tag:
setFileHandle:
setFileOffset:
setLength:
setCallback:
setCallbackQueue:
setTag:
fileHandle
fileOffset
initWithFileHandle:fileOffset:length:
responseCode
callbackQueue
callback
finishTasksAndInvalidate
statusCode
setResponseCode:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:task:willUseCachingServer:newRequest:completionHandler:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
initWithFileHandle:fileOffset:length:callback:callbackQueue:tag:
_tag
_responseCode
_fileHandle
_fileOffset
_length
_callback
_callbackQueue
T@"NSFileHandle",&,V_fileHandle
TQ,V_fileOffset
TQ,V_length
T@?,C,V_callback
T@"NSObject<OS_dispatch_queue>",&,V_callbackQueue
TI,V_tag
Ti,V_responseCode
start
hasBytesAvailable
fileDescriptor
open
close
streamStatus
streamError
_scheduleInCFRunLoop:forMode:
_setCFClientFlags:callback:context:
_unscheduleFromCFRunLoop:forMode:
read:maxLength:
getBuffer:length:
fileEndOffset
setFileEndOffset:
status
setStatus:
_fileEndOffset
_status
Tq,V_fileOffset
Tq,V_fileEndOffset
TQ,V_status
defaultManager
removeItemAtPath:error:
systemGroupContainerPathWithGroupIdentifier:
setCacheDirPath:
cacheDirPath
setAffinityQueryTimeout:
affinityQueryTimeout
setConcurrentDNSResolutions:
intValue
concurrentDNSResolutions
setLocateTimeout:
locateTimeout
setDnsResolutionTimeout:
dnsResolutionTimeout
setRefreshValidityInterval:
refreshValidityInterval
URLWithString:
setLocateURL:
locateURL
setRedactLogs:
setSkipEVCheck:
fileExistsAtPath:isDirectory:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
localizedDescription
setDiskCachePlistPath:
setLocalhostAddresses:
setServerCapabilitiesTemplate:
serverCapabilitiesTemplate
setServerCapabilitiesVerifier:
setServerDetailsTemplate:
serverDetailsTemplate
setServerDetailsVerifier:
setDiskCacheTemplate:
diskCacheTemplate
setDiskCacheVerifier:
makeSoftwareVersions
setSoftwareVersions:
makeBootTimeWithTag:
setBootTime:
setQueue:
queue
setDiskCacheRefreshTimer:
diskCacheRefreshTimer
singleLocate
singleLocateTag
loadDiskCacheWithTag:
setDiskCacheRefreshTimerResumed:
setSingleLocate:
setLocateOpQueue:
locateOpQueue
setMaxConcurrentOperationCount:
setCacheRefreshQueue:
cacheRefreshQueue
dictionary
setAffinityCache:
initWithMemoryCapacity:diskCapacity:diskPath:
removeAllCachedResponses
setSharedURLCache:
ephemeralSessionConfiguration
setLocateSessionConfig:
locateSessionConfig
setAllowsCellularAccess:
setHTTPCookieStorage:
setURLCredentialStorage:
setURLCache:
setImportSessionConfig:
setQuerySessionConfig:
domain
code
numberWithBool:
numberWithLongLong:
numberWithUnsignedLongLong:
numberWithDouble:
array
NSObjectFromXPCObject:tag:
unsignedLongLongValue
XPCObjectFromNSObject:tag:
arrayByAddingObjectsFromArray:
servers:byAppendingServers:
objectForKeyedSubscript:
unsignedIntegerValue
redactObject:
watchForNetworkChanges
setListenerConnection:
listenerConnection
handleConnection:
currentRunLoop
handleEvent:forConnection:
testFlags
doesConnection:haveEntitlement:
handleLocateEvent:forConnection:tag:
handleRecentlySeenEvent:forConnection:tag:
handleUpdateHealthEvent:forConnection:tag:
handleImportEvent:forConnection:tag:
handleIntrospectEvent:forConnection:tag:
handleSetTestFlagsEvent:forConnection:tag:
date
choose:fromArray:sorted:other:tag:
timeIntervalSinceNow
firstObject
objectWithError:
relocateCachingServersWithTimeout:capabilities:affinityID:forceRefresh:tag:
dateWithTimeIntervalSinceNow:
locateCachingServersWithTimeout:capabilities:affinityID:autoRefresh:quickMiss:forceMiss:callback:callbackQueue:tag:
recentlySeenCachingServerWithAutoRefresh:callback:callbackQueue:tag:
updateHealthOfCachingServerWithHostport:healthy:override:callback:callbackQueue:tag:
initWithFileDescriptor:closeOnDealloc:
importToCachingServerAsURL:sourcePath:sourceFileHandle:sourceOffset:sourceLength:method:headers:importStrategies:entitled:callback:callbackQueue:tag:
localAddresses
gatewayIdentifiers
setLocalAddresses:
setGatewayIdentifiers:
cachedDNSPublicAddressRanges:andFavoredServerRanges:forNetworkIdentifiers:tag:
amRunningOnMyQueue
resolveDNSRecordsWithTimeout:callback:callbackQueue:tag:
setTestFlags:
dictionaryWithContentsOfFile:
mainBundle
objectForInfoDictionaryKey:
executablePath
componentsSeparatedByString:
uncacheAllAffinitiesWithTag:
diskCache
string
safeString:length:forceHex:
dataUsingEncoding:
makeRangesFromDNSRecordNamed:withType:data:length:more:error:tag:
resolveDNSRecordNamed:withTimeout:errorIfNotFound:callback:callbackQueue:tag:
numberWithInt:
dictionaryWithObjectsAndKeys:
dateWithTimeIntervalSince1970:
diskCachePlistPath
stringByResolvingSymlinksInPath
attributesOfItemAtPath:error:
bootTime
compare:
dataWithContentsOfFile:options:error:
propertyListWithData:options:format:error:
diskCacheVerifier
removeObjectAtIndex:
sanitizeRanges:fromSource:tag:
isEqualToArray:
transferVolatileStateFromDiskCache:toDiskCache:tag:
setDiskCache:
saveDiskCacheWithTag:
updateDiskCacheRefreshTimerWithTag:
setObject:forKeyedSubscript:
removeObjectForKey:
amRunningInMySingleLocate:
writeToFile:atomically:
setAttributes:ofItemAtPath:error:
fileURLWithPath:
setResourceValue:forKey:error:
diskCacheRefreshTimerResumed
cachedEntryCalled:withKey:forNetworkIdentifiers:validityInterval:tag:
mutableCopy
uncacheEntriesCalled:withKey:forNetworkIdentifiers:tag:
cachedRecentlySeen:forNetworkIdentifiers:validityInterval:tag:
uncacheRecentlySeenForNetworkIdentifiers:tag:
cacheRecentlySeen:forNetworkIdentifiers:validityInterval:tag:
containsString:
hasPrefix:
unsignedShortValue
serverCapabilitiesVerifier
initWithUUIDString:
scheme
caseInsensitiveCompare:
dataWithJSONObject:options:error:
absoluteString
requestWithURL:cachePolicy:timeoutInterval:
setHTTPMethod:
setHTTPShouldHandleCookies:
setValue:forHTTPHeaderField:
setHTTPBody:
locateCallback
locateSession
setLocateTag:
setLocateCallback:
setLocateCallbackQueue:
setLocateFavoredServerRanges:
setLocateResponseCode:
setLocateResponseData:
sessionWithConfiguration:canUseCachingServer:locateOptions:delegate:delegateQueue:
setLocateSession:
integerValue
null
initWithURL:statusCode:HTTPVersion:headerFields:
setLocateServerValidated:
subdataWithRange:
addOperationWithBlock:
dataTaskWithRequest:
resume
compileRanges:tag:
JSONObjectWithData:options:error:
serverDetailsVerifier
isAddress:inCompiledRanges:tag:
locateLocalCachingServersWithHeaders:body:timeout:favoredServerRanges:callback:callbackQueue:tag:
softwareVersions
uncacheDNSPublicAddressRangesAndFavoredServerRangesForNetworkIdentifiers:tag:
cacheDNSPublicAddressRanges:andFavoredServerRanges:forNetworkIdentifiers:validityInterval:tag:
longLongValue
doesServer:haveCapabilities:tag:
sortedArrayWithOptions:usingComparator:
isEqualToNumber:
subarrayWithRange:
affinityCache
querySessionConfig
sessionWithConfiguration:canUseCachingServer:locateOptions:
distantPast
sortUsingComparator:
invalidateAndCancel
dataWithPropertyList:format:options:error:
dataTaskWithRequest:completionHandler:
removeAllObjects
cachedServers:forNetworkIdentifiers:validityInterval:tag:
localhostAddresses
probeCacheForType:withLabel:networkIdentifiers:hitServers:hitValidityInterval:tag:
refineServers:intoBest:andOther:tag:
serversFromArray:withCapabilities:tag:
describeCapableServers:fromAvailableServers:withOtherServers:
cachedServers:forAffinityID:tag:
lastLocateDate
dateWithTimeInterval:sinceDate:
probeCacheWithLabel:capabilities:affinityID:hitServers:hitServersAreSorted:hitOtherServers:hitValidityInterval:tag:
slowcateCachingServerWithTimeout:capabilities:affinityID:forceRefresh:forceDNSRefresh:callback:tag:
cacheRefreshInProgress
setCacheRefreshInProgress:
setSingleLocateTag:
cacheServers:forAffinityID:tag:
queryServersFromArray:forReachabilityOrAffinityID:withTimeout:callbackWithServers:callbackQueue:tag:
uncacheAllServersWithTag:
cacheServers:forNetworkIdentifiers:validityInterval:tag:
uncacheAllRecentlySeenWithTag:
uncacheServersForNetworkIdentifiers:tag:
cacheNotRecentlySeenForNetworkIdentifiers:tag:
locateTetheredCachingServersWithTag:
locateLocalCachingServersWithTimeout:localAddresses:gatewayIdentifiers:configurationProfiles:forceDNSRefresh:callback:callbackQueue:tag:
rangeOfString:options:
substringToIndex:
hasSuffix:
substringWithRange:
numberWithUnsignedInteger:
importSessionConfig
uploadTaskWithStreamedRequest:
seekToEndOfFile
offsetInFile
importToLocalCachingServerAsURL:sourceFileHandle:sourceOffset:sourceLength:method:headers:callback:callbackQueue:tag:
locateTag
protectionSpace
authenticationMethod
serverTrust
skipEVCheck
credentialForTrust:
errorWithDomain:code:userInfo:
locateCallbackQueue
locateFavoredServerRanges
locateServerValidated
locateResponseCode
locateResponseData
setLastLocateDate:
parseLocateResponse:withFavoredServerRanges:intoServers:validityInterval:error:tag:
initWithData:encoding:
appendData:
redactLogs
redactStringsFromObject:usingBlock:
errorWithObject:fromService:tag:
networkChanged
anyCachedServersWithTag:
_redactLogs
_skipEVCheck
_diskCacheRefreshTimerResumed
_cacheRefreshInProgress
_locateServerValidated
_concurrentDNSResolutions
_singleLocateTag
_locateTag
_affinityQueryTimeout
_locateTimeout
_dnsResolutionTimeout
_locateURL
_refreshValidityInterval
_cacheDirPath
_diskCachePlistPath
_localhostAddresses
_serverCapabilitiesTemplate
_serverCapabilitiesVerifier
_serverDetailsTemplate
_serverDetailsVerifier
_diskCacheTemplate
_diskCacheVerifier
_softwareVersions
_bootTime
_locateSessionConfig
_importSessionConfig
_querySessionConfig
_queue
_listenerConnection
_diskCache
_diskCacheRefreshTimer
_singleLocate
_locateOpQueue
_localAddresses
_gatewayIdentifiers
_cacheRefreshQueue
_affinityCache
_testFlags
_locateCallback
_locateCallbackQueue
_locateFavoredServerRanges
_locateSession
_locateResponseCode
_locateResponseData
_lastLocateDate
Td,V_affinityQueryTimeout
Ti,V_concurrentDNSResolutions
Td,V_locateTimeout
Td,V_dnsResolutionTimeout
T@"NSURL",&,V_locateURL
TB,V_redactLogs
Td,V_refreshValidityInterval
TB,V_skipEVCheck
T@"NSString",&,V_cacheDirPath
T@"NSString",&,V_diskCachePlistPath
T@"NSArray",&,V_localhostAddresses
T@"NSDictionary",&,V_serverCapabilitiesTemplate
T@"ACLSTypeVerifier",&,V_serverCapabilitiesVerifier
T@"NSDictionary",&,V_serverDetailsTemplate
T@"ACLSTypeVerifier",&,V_serverDetailsVerifier
T@"NSDictionary",&,V_diskCacheTemplate
T@"ACLSTypeVerifier",&,V_diskCacheVerifier
T@"NSArray",&,V_softwareVersions
T@"NSDate",&,V_bootTime
T@"NSURLSessionConfiguration",&,V_locateSessionConfig
T@"NSURLSessionConfiguration",&,V_importSessionConfig
T@"NSURLSessionConfiguration",&,V_querySessionConfig
T@"NSObject<OS_dispatch_queue>",&,V_queue
T@"NSObject<OS_xpc_object>",&,V_listenerConnection
T@"NSMutableDictionary",&,V_diskCache
T@"NSObject<OS_dispatch_source>",&,V_diskCacheRefreshTimer
TB,V_diskCacheRefreshTimerResumed
T@"NSObject<OS_dispatch_semaphore>",&,V_singleLocate
TI,V_singleLocateTag
T@"NSOperationQueue",&,V_locateOpQueue
T@"NSArray",&,V_localAddresses
T@"NSArray",&,V_gatewayIdentifiers
T@"NSObject<OS_dispatch_queue>",&,V_cacheRefreshQueue
TB,V_cacheRefreshInProgress
T@"NSMutableDictionary",&,V_affinityCache
TQ,V_testFlags
TI,V_locateTag
T@?,C,V_locateCallback
T@"NSObject<OS_dispatch_queue>",&,V_locateCallbackQueue
T@"NSArray",&,V_locateFavoredServerRanges
T@"ACSURLSession",&,V_locateSession
TB,V_locateServerValidated
TQ,V_locateResponseCode
T@"NSMutableData",&,V_locateResponseData
T@"NSDate",&,V_lastLocateDate
#%08x [%s] verify %@
#%08x [%s] %@ is missing
#%08x [%s] %@ has wrong type: %@; expected %@: %{private}@
#%08x [%s] allActiveNetworkInterfaces %d %@
#%08x [%s] makeLocalAddresses
#%08x [%s] makeLocalAddresses: %{private}@
#%08x [%s] makeLocalAddresses: defaultAddresses[%ld]: ifindex=%d gwaddr=%{private}@
#%08x [%s] makeLocalAddresses: denied access to MAC address
#%08x [%s] makeLocalAddresses: defaultAddresses[%d]: gwmac=%{private}@
#%08x [%s] makeLocalAddresses: %@
#%08x [%s] makeLocalAddresses: defaultAddresses[%d]: ifaddr=%@
#%08x [%s] makeLocalAddresses -> localAddresses=%@ gatewayIdentifiers=[%ld]%{private}@
#%08x [%s] digestIdentifier:%{private}@ -> %@=%.*P, %@=%.*P
#%08x [%s] isDigestedIdentifier:%@=%.*P,%@=%.*P equalToCleartextIdentifier:%{private}@ -> %{BOOL}d
#%08x [%s] areDigestedIdentifiers:%@ equalToCleartextIdentifiers:[%ld]%{private}@
#%08x [%s] areDigestedIdentifiers:equalToCleartextIdentifiers: -> %{BOOL}d
#%08x [%s] URLSession:%@ didReceiveChallenge:%@
#%08x [%s] URLSession:%@ task:%@ didReceiveChallenge:%@
#%08x [%s] URLSession:%@ task:%@ needNewBodyStream
#%08x [%s] URLSession:%@ task:%@ didCompleteWithError:%@
#%08x [%s] URLSession:%@ dataTask:%@ didReceiveResponse:%@
#%08x [%s] cache directory = %@
#%08x [%s] bad type for preference %@; expected %@
#%08x [%s] unable to create directory %@: %@
#%08x [%s] automatic disk cache refresh
#%08x [%s] Error getting system group container for identifier %@: %llu
#%08x [%s] NSObjectFromXPCObject: unhandled XPC object %@
#%08x [%s] XPCObjectFromNSObject: unhandled NS object %@
#%08x [%s] choose:%d fromArray:%@ sorted:%{BOOL}d other:%@ -> %@
#%08x [%s] %s starting for user %d
#%08x [%s] xpc_connection_create(%s) failed
#%08x [%s] XPC listener received event %@
#%08x [%s] %s exiting:  XPC listener gone and no more XPC connections
#%08x [%s] XPC connection from pid %d uid %d
#%08x [%s] XPC connection from pid %d uid %d received event %@
#%08x [%s] handleEvent:%@ forConnection:%@
#%08x [%s] rejecting civilian XPC request from pid %d uid %d: %s
#%08x [%s] XPC request from pid %d uid %d: %s
#%08x [%s] XPC connection from pid %d uid %d received unknown %s: %s
#%08x [%s] XPC connection from pid %d uid %d received invalid %s: #%08x
#%08x [%s] handleLocateEvent callback(servers=%@, sorted=%{BOOL}d, other=%@, validityInterval=%.3f, error=%@)
#%08x [%s] XPC response to pid %d uid %d: success: servers=%@ validityInterval=%.3f elapsed=%.3f
#%08x [%s] XPC response to pid %d uid %d: error: %@, elapsed=%.3f
#%08x [%s] handleRecentlySeenEvent callback(recentlySeen=%{BOOL}d, error=%@)
#%08x [%s] XPC response to pid %d uid %d: recentlySeen=%{BOOL}d, elapsed=%.3f
#%08x [%s] handleImportEvent callback(success=%{BOOL}d, error=%@)
#%08x [%s] XPC response to pid %d uid %d: success=%{BOOL}d, elapsed=%.3f
#%08x [%s] XPC response to pid %d uid %d: introspection=%{private}@
#%08x [%s] handleIntrospectEvent callback(dnsPublicAddressRanges=[%ld]%{private}@ dnsFavoredServerRanges=[%ld]%@ dnsValidityInterval=%.3f dnsError=%@)
#%08x [%s] network configuration changed; invalidating saved local address info
#%08x [%s] watchForNetworkChanges
#%08x [%s] using %@ for %@
#%08x [%s] makeRangesFromDNSRecordNamed:%@ withType:%d data:[%ld]%{private}@
#%08x [%s] makeRangesFromDNSRecordWithType -> [%ld]%{private}@, more %{BOOL}d, error %@
#%08x [%s] resolveDNSRecordNamed:%@
#%08x [%s] resolveDNSRecordNamed:%@ res_nsearch -> %d/%d, errno %{darwin.errno}d, h_errno %d
#%08x [%s] resolveDNSRecordNamed:%@ %d/%d: s=%d d=%d l=%d e=%d
#%08x [%s] resolveDNSRecordNamed:%@ %d/%d: type=%@
#%08x [%s] ignoring DNS error: %@
#%08x [%s] resolveDNSRecordsWithTimeout:%.3f callback:%p callbackQueue:%s
#%08x [%s] resolveDNSRecords: %@ callback(publicAddressRanges=[%ld]%{private}@, favoredServerRanges=[%ld]%@, validityInterval=%.3f, more=%{BOOL}d, error=%@)
#%08x [%s] waiting up to %.3f sec for concurrent DNS resolution of %@
#%08x [%s] resolveDNSRecords: %@: result=%{private}@
#%08x [%s] resolveDNSRecords -> public addresses: [%ld]%{private}@, favored servers: [%ld]%@, validityInterval %.f
#%08x [%s] resolveDNSRecords -> %@
#%08x [%s] sanitizeRanges:[%ld]%{private}@ fromSource:%@
#%08x [%s] sanitizeRanges: bad entry %lu/%lu in %@
#%08x [%s] sanitizeRanges -> [%ld]%{private}@
#%08x [%s] makeBootTime
#%08x [%s] makeBootTime -> %{private}@
#%08x [%s] loadDiskCache
#%08x [%s] loadDiskCache: discarding disk cache after system reboot
#%08x [%s] loadDiskCache: failed to load %@: %@
#%08x [%s] loadDiskCache: discarding version %@ disk cache
#%08x [%s] loadDiskCache: discarding %@ %@ entry %{private}@
#%08x [%s] loadDiskCache: discarding %@ %@ entry %@
#%08x [%s] loadDiskCache -> %{private}@
#%08x [%s] transferVolatileState
#%08x [%s] transfer diskCache[%@][%@].%@ %@ (override %@)
#%08x [%s] saveDiskCache diskCache=%{private}@
#%08x [%s] unable to write disk cache to %@: %{darwin.errno}d
#%08x [%s] failed to set attributes of %@: %@
#%08x [%s] failed to exclude %@ from backups: %@
#%08x [%s] updateDiskCacheRefreshTimer
#%08x [%s] next automatic disk cache refresh at or after %@ (%@ + %.f sec)
#%08x [%s] automatic disk cache refreshes suspended
#%08x [%s] cached%@ForNetworkIdentifiers:[%ld]%{private}@
#%08x [%s] cached%@ForNetworkIdentifiers -> %@ validityInterval=%.3f
#%08x [%s] cached%@ForNetworkIdentifiers -> %@
#%08x [%s] cacheServers:%@ forNetworkIdentifiers:[%ld]%{private}@ validityInterval:%.3f
#%08x [%s] after cacheServers diskCache=%{private}@
#%08x [%s] uncache%@ForNetworkIdentifiers:[%ld]%{private}@
#%08x [%s] after uncache%@ diskCache=%{private}@
#%08x [%s] uncacheAllServers
#%08x [%s] cacheDNSPublicAddressRanges:[%ld]%{private}@ andFavoredServerRanges:[%ld]%@ forNetworkIdentifiers:[%ld]%{private}@ validityInterval:%.3f
#%08x [%s] after cacheDNSPublicAddressRanges diskCache=%{private}@
#%08x [%s] cacheRecentlySeen:%{BOOL}d forNetworkIdentifiers:[%ld]%{private}@ validityInterval:%.3f
#%08x [%s] after cacheRecentlySeen diskCache=%{private}@
#%08x [%s] uncacheAllRecentlySeen
#%08x [%s] locateTetheredCachingServers: tethered=%{BOOL}d
#%08x [%s] locateTetheredCachingServers failed to synchronize user preferences
#%08x [%s] locateTetheredCachingServers: CFPreferencesCopyValue(%@, %@) returned unexpected value %@
#%08x [%s] locateTetheredCachingServers -> %@
#%08x [%s] locateLocalCachingServersWithHeaders:%@ body:%@ timeout:%.3f favoredServerRanges:%@ callback:%p callbackQueue:%s
#%08x [%s] sending POST [%d]%.*s to %@
#%08x [%s] parseLocateResponse:%{private}@ withFavoredServerRanges:%@
#%08x [%s] parseLocateResponse response=%@
#%08x [%s] in response from %@, server entry is invalid: %@
#%08x [%s] parseLocateResponse -> servers=%@, validityInterval=%.3f, error=%@
#%08x [%s] locateLocalCachingServersWithTimeout:%.3f localAddresses:%@ gatewayIdentifiers:[%ld]%{private}@ configurationProfiles:%{private}@ forceDNSRefresh:%{BOOL}d callback:%p callbackQueue:%s
#%08x [%s] locateLocalCachingServers callback(locateServers=%@, sorted=%{BOOL}d, other=%@, locateValidityInterval=%.3f, locateError=%@)
#%08x [%s] locateLocalCachingServers callback(dnsPublicAddressRanges=[%ld]%{private}@ dnsFavoredServerRanges=[%ld]%@ dnsValidityInterval=%.3f dnsError=%@)
#%08x [%s] doesServer:%@ haveCapabilities:%@
#%08x [%s] doesServerHaveCapabilities -> %{BOOL}d
#%08x [%s] serversFromArray:%@ withCapabilities:%@
#%08x [%s] serversFromArray -> %@
#%08x [%s] refineServers:%@
#%08x [%s] refineServers -> best=%@ other=%@
#%08x [%s] cachedServers:%@ forAffinityID:%@ hostports=%@ -> %@
#%08x [%s] cacheServers:%@ forAffinityID:%@ hostports=%@
#%08x [%s] queryServersFromArray:%@ forReachabilityOrAffinityID:%@ withTimeout:%.3f
#%08x [%s] sending GET to %@
#%08x [%s] Error sending %@: %@
#%08x [%s] %@ lastSaved %@
#%08x [%s] Invalid response from %@: %@ (%@)
#%08x [%s] Invalid response from %@: %ld bytes
#%08x [%s] No affinity from %@
#%08x [%s] Error response from %@: %d
#%08x [%s] Invalid response from %@: %@
#%08x [%s] skipping %@ server %@
#%08x [%s] uncacheAllAffinities
#%08x [%s] probeCacheForType:%@ withLabel:%@ networkIdentifiers:%@
#%08x [%s] %@ cached servers=%@ %@ hit=%{BOOL}d
#%08x [%s] probeCacheForType -> hit: servers=%@ validityInterval=%.3f
#%08x [%s] probeCacheForType -> miss
#%08x [%s] probeCacheWithLabel:%@ capabilities:%@ affinityID:%@
#%08x [%s] %@ hit: %@
#%08x [%s] locateCachingServersWithTimeout:%.3f capabilities:%@ affinityID:%@ autoRefresh:%{BOOL}d quickMiss:%{BOOL}d forceMiss:%{BOOL}d callback:%p callbackQueue:%s
#%08x [%s] ignoring forceMiss so soon after locate; next allowed %@
#%08x [%s] quick miss
#%08x [%s] relocateCachingServersWithTimeout:%.3f capabilities:%@ affinityID:%@ forceRefresh:%{BOOL}d
#%08x [%s] starting proactive cache refresh
#%08x [%s] cache refresh finished (servers=%@, sorted=%{BOOL}d, other=%@, validityInterval=%.3f, error=%@)
#%08x [%s] slowcateCachingServerWithTimeout:%.3f capabilities:%@ affinityID:%@ forceRefresh:%{BOOL}d forceDNSRefresh:%{BOOL}d callback:%p
#%08x [%s] slowcateCachingServer finishSingleLocateAndCallBackWithServers(servers=%@, sorted=%{BOOL}d, other=%@, validityInterval=%.3f, error=%@)
#%08x [%s] slowcateCachingServer callback(localhostServers=%@, sorted=%{BOOL}d, other=%@, localhostValidityInterval=%.3f, localhostError=%@)
#%08x [%s] found %@
#%08x [%s] checking for caching servers on local network
#%08x [%s] slowcateCachingServer callback(localServers=%@, sorted=%{BOOL}d, other=%@, localValidityInterval=%.3f, localError=%@)
#%08x [%s] found %@, sorted=%{BOOL}d
#%08x [%s] no local network
#%08x [%s] slowcateCachingServer -> %@
#%08x [%s] compileRanges:%@ -> %@
#%08x [%s] isAddress:%@ inCompiledRanges:%@ -> %{BOOL}d
#%08x [%s] recentlySeenCachingServerWithAutoRefresh:%{BOOL}d callback:%p callbackQueue:%s
#%08x [%s] updateHealthOfCachingServerWithHostport:%@ healthy:%{BOOL}d override:%{BOOL}d
#%08x [%s] health update invalid
#%08x [%s] caching server %@ is healthy again
#%08x [%s] caching server %@ is now unhealthy
#%08x [%s] importToLocalCachingServerAsURL:%@ sourceFileHandle:%@ sourceOffset:%llu sourceLength:%llu method:%@ headers:%@ callback:%p callbackQueue:%s
#%08x [%s] importToCachingServerAsURL:%@ sourcePath:%@ sourceFileHandle:%@ sourceOffset:%llu sourceLength:%llu method:%@ headers:%@ importStrategies:%@ entitled:%{BOOL}d callback:%p callbackQueue:%s
#%08x [%s] URLSession:%@ didReceiveChallenge:%@ [protection space %@]
#%08x [%s] LocateURL %@ untrusted: EV=%@ organization=%@
#%08x [%s] LocateURL %@ untrusted: no EV result
#%08x [%s] LocateURL %@ trusted %@ EV, credential=%@
#%08x [%s] LocateURL %@ untrusted: error=%@
#%08x [%s] NO_LOCAL_SERVER
#%08x [%s] URLSession:%@ dataTask:%@ didReceiveData:[%ld bytes]
ACLSTypeVerifier
ACLSNetworkInterface
ACLSIPv4Range
ACLSIPv6Range
ACLSNetworkUtilities
ACLSImportDelegate
ACSURLSessionDataDelegate
ACSURLSessionTaskDelegate
ACSURLSessionDelegate
NSObject
ACLSFileHandleInputStream
AssetCacheLocatorService
@24@0:8@16
B36@0:8@16@24I32
@28@0:8@16I24
B44@0:8@16@24@32I40
@36@0:8@16@24I32
@16@0:8
v24@0:8@16
v16@0:8
@"NSDictionary"
B16@0:8
v20@0:8B16
d16@0:8
v24@0:8d16
@"NSString"
@"NSNumber"
@32@0:8r^{in_addr=I}16r^{in_addr=I}24
B24@0:8r^{in_addr=I}16
{in_addr=I}16@0:8
v20@0:8{in_addr=I}16
{in_addr="s_addr"I}
@32@0:8r^{in6_addr=(?=[16C][8S][4I])}16r^{in6_addr=(?=[16C][8S][4I])}24
B24@0:8r^{in6_addr=(?=[16C][8S][4I])}16
{in6_addr=(?=[16C][8S][4I])}16@0:8
v32@0:8{in6_addr=(?=[16C][8S][4I])}16
{in6_addr="__u6_addr"(?="__u6_addr8"[16C]"__u6_addr16"[8S]"__u6_addr32"[4I])}
@32@0:8@16@24
d24@0:8@16
@40@0:8^{__SCNetworkInterface=}16^{__SCNetworkService=}24@32
B24@0:8r^{sockaddr_in=CCS{in_addr=I}[8c]}16
B24@0:8r^{sockaddr_in6=CCSI{in6_addr=(?=[16C][8S][4I])}I}16
B24@0:8@16
@24@0:8r^{in_addr=I}16
@24@0:8r^{in6_addr=(?=[16C][8S][4I])}16
@24@0:8*16
@24@0:8r^{sockaddr_in=CCS{in_addr=I}[8c]}16
@24@0:8r^{sockaddr_in6=CCSI{in6_addr=(?=[16C][8S][4I])}I}16
@24@0:8r^{sockaddr_dl=CCSCCCC[12c]}16
@24@0:8r^{sockaddr_storage=CC[6c]q[112c]}16
B36@0:8^@16^@24I32
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v40@0:8@16@24@?32
v32@0:8@"ACSURLSession"16@"NSError"24
v40@0:8@"ACSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v56@0:8@16@24@32@40@?48
v48@0:8@16@24@32@?40
v56@0:8@16@24q32q40q48
v40@0:8@16@24@32
v52@0:8@16@24B32@36@?44
v32@0:8@"ACSURLSession"16@"ACSURLSessionTask"24
v56@0:8@"ACSURLSession"16@"ACSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"ACSURLSession"16@"ACSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"ACSURLSession"16@"ACSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"ACSURLSession"16@"ACSURLSessionTask"24q32q40q48
v40@0:8@"ACSURLSession"16@"ACSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"ACSURLSession"16@"ACSURLSessionTask"24@"NSError"32
v52@0:8@"ACSURLSession"16@"ACSURLSessionTask"24B32@"NSURLRequest"36@?<v@?@"NSURLRequest">44
v48@0:8@"ACSURLSession"16@"ACSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"ACSURLSession"16@"ACSURLSessionDataTask"24@"ACSURLSessionDownloadTask"32
v40@0:8@"ACSURLSession"16@"ACSURLSessionDataTask"24@"NSData"32
v48@0:8@"ACSURLSession"16@"ACSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
@60@0:8@16Q24Q32@?40@48I56
v24@0:8Q16
@?16@0:8
v24@0:8@?16
I16@0:8
v20@0:8I16
i16@0:8
v20@0:8i16
@"NSFileHandle"
@"NSObject<OS_dispatch_queue>"
@40@0:8@16q24q32
v32@0:8^{__CFRunLoop=}16^{__CFString=}24
B40@0:8Q16^?24^{?=q^v^?^?^?}32
q32@0:8*16Q24
B32@0:8^*16^Q24
q16@0:8
v24@0:8q16
B20@0:8I16
@36@0:8@16r*24I32
@44@0:8i16@20B28@32I40
B32@0:8@16@24
B32@0:8@16r*24
@36@0:8r*16Q24B32
@64@0:8@16i24r*28Q36^B44^@52I60
v56@0:8@16d24B32@?36@44I52
v44@0:8d16@?24@32I40
@20@0:8I16
v44@0:8^@16@24^d32I40
@52@0:8@16@24@32^d40I48
v44@0:8@16@24d32I40
v28@0:8@16I24
v44@0:8@16@24@32I40
v44@0:8^@16^@24@32I40
v52@0:8@16@24@32d40I48
v40@0:8B16@20d28I36
v68@0:8@16@24d32@40@?48@56I64
B60@0:8@16@24^@32^d40^@48I56
v72@0:8d16@24@32@40B48@?52@60I68
v44@0:8@16^@24^@32I40
v36@0:8@16@24I32
v60@0:8@16@24d32@?40@48I56
B60@0:8@16@24@32^@40^d48I56
i76@0:8@16@24@32^@40^B48^@56^d64I72
v72@0:8d16@24@32B40B44B48@?52@60I68
v48@0:8d16@24@32B40I44
v60@0:8d16@24@32B40B44@?48I56
@40@0:8@16@24@32
v40@0:8B16@?20@28I36
v52@0:8@16B24B28@?32@40I48
v84@0:8@16@24q32q40@48@56@?64@72I80
v104@0:8@16@24@32q40q48@56@64@72B80@?84@92I100
@32@0:8@16@?24
@"NSURL"
@"NSArray"
@"ACLSTypeVerifier"
@"NSDate"
@"NSURLSessionConfiguration"
@"NSObject<OS_xpc_object>"
@"NSMutableDictionary"
@"NSObject<OS_dispatch_source>"
@"NSObject<OS_dispatch_semaphore>"
@"NSOperationQueue"
@"ACSURLSession"
@"NSMutableData"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.private.AssetCache.import</key>
<true/>
<key>com.apple.security.system-groups</key>
<array>
<string>systemgroup.com.apple.AssetCacheServices.diskCache</string>
</array>
<key>seatbelt-profiles</key>
<array>
<string>com.apple.AssetCacheLocatorService</string>
</array>
</dict>
</plist>
