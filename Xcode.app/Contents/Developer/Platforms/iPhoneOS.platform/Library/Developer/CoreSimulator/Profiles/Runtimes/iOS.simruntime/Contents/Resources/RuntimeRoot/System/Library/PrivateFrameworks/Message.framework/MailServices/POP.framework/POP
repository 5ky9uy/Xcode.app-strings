MESSAGE_AUTH_APOP
Authenticated POP (APOP)
Delayed
FAILED_LOGIN
FAILED_FETCH_TITLE
Cannot Get Mail
AUTH_NOT_SUPPORTED_FORMAT
multipart
+[MFPOP3Fetcher _fetchWithAccount:intoQueue:newMessages:oldMessages:preservingUID:withStore:]
MFPOP3Fetcher.m
[library isKindOfClass:[MFMailMessageLibrary class]]
Missing Message-ID
com.apple.email
v8@?0
SASL
POP_BAD_USERNAME_FORMAT
Success
Failed
q24@?0@"NSNumber"8@"NSNumber"16
x-apple-content-length
POP3MaximumNumberToFetch
DOWNLOADING_STATUS_FORMAT
Downloading %@ of %@
STLS
TLS_NOT_SUPPORTED_FORMAT
TLS_FAILED_FORMAT
LOGIN-DELAY
IN-USE
SYS/PERM
SYS/TEMP
POP3Response
%02x
MFDeletePOPMessagesStarted
MFDeletePOPMessagesCompleted
DeleteMessagesOnServerInterval
DeletionPolicy
Never
RightAway
AfterInterval
WhenTransferredOutOfInbox
connectionActivityLock
sharedConnection
pop3
pop3s
mbox
-[POPAccount _deleteHook]
POPAccount.m
[[self library] isKindOfClass:[MFMailMessageLibrary class]]
-[POPAccount closeConnection:andSaveUIDs:]
CAPA
-ERR
QUIT
STAT
LIST
UIDL
RETR
DELE
STLS
PASS
APOP
USER
AUTH
%@: "Connecting..." starting
%@: "Connecting..." completed
<Account:%{public}@> Successful CAPA response %{public}@
<Account:%{public}@> Received CAPA error %{public}@
<Account:%{public}@> Successful Connection Established: %{public}@
<Account:%{public}@> Account loggedIn: %{public}@
<Account:%{public}@> Login Successful. Setting AuthScheme to ECAuthenticationSchemeAPOP
<Account:%{public}@> Login attempt %d
<Account:%{public}@> Login Failure %@
<Account:%{public}@> Login %@
#Power [New Message] subject=%@;
failed: %{public}@
POP fetch failed because INBOX store could not be created
Exception raised while fetching in account %@: %@
MFAPOPAuthScheme
MFAPOPConnection
MFLibraryPOPStore
MFPOPDownloadQueue
MFPOP3Fetcher
MFPOPMessage
MFPOP3Connection
POPAccount
schemeWithName:
registerSchemeClass:
isEqualToString:
saslProfileName
canAuthenticateAccountClass:connection:
supportsAPOP
initialize
supportsAccountType:
connectionClassForAccountClass:
authenticatorClass
hasEncryption
requiresPassword
name
humanReadableName
username
password
dataUsingEncoding:
_apopWithUsername:password:
hostname
stringWithFormat:
errorWithDomain:code:localizedDescription:title:userInfo:
accountTypeString
preferredAuthScheme
errorWithDomain:code:localizedDescription:
currentMonitor
setError:
authenticateUsingAccount:
initWithMailbox:readOnly:
mimeBody
message
topLevelPart
type
bodyDataForMessage:isComplete:isPartial:downloadIfNecessary:
_cachedBodyDataContainerForMessage:valueIfNotPresent:
length
range
mf_subdataWithRange:
fullBodyDataForMessage:andHeaderDataIfReadilyAvailable:isComplete:downloadIfNecessary:usePartDatas:didDownload:
dataForMimePart:inRange:isComplete:downloadIfNecessary:didDownload:
appendData:
contentType
lowercaseString
_fetchHeaderDataForMessage:downloadIfNecessary:
remoteID
account
authenticatedConnection
isValid
getMessageNumbers:messageIdsByNumber:numbersByMessageId:
sharedInstance
transportType
recordTransportType:
objectForKeyedSubscript:
unsignedLongValue
copyMessageHeaderForMessageNumber:
headerData
checkInConnection:currentUIDs:
_fetchBodyDataForMessage:andHeaderDataIfReadilyAvailable:downloadIfNecessary:partial:
library
dataConsumerForMessage:part:incomplete:
retr:dataConsumer:
data
mf_rangeOfRFC822HeaderData
storeRemoteContentLinksFromHeaderData:bodyData:forMessage:
compactMessages:permanently:
mailbox
setMailbox:
fetchNumNewMessages:oldMessages:preservingUID:withStore:
purgeMessagesBeyondLimit:
messageForRemoteID:inMailbox:
URLString
messageWithRemoteID:inRemoteMailbox:
setMessageStore:
countByEnumeratingWithState:objects:count:
deletePOPUID:inMailbox:
_handleFlagsChangedForMessages:flags:oldFlagsByMessage:
mf_lock
objectForKey:
intValue
messageFlags
mf_unlock
setServerUnreadOnlyOnServerCount:forMailbox:
openSynchronouslyUpdatingMetadata:
dataForMimePart:inRange:isComplete:withConsumer:downloadIfNecessary:didDownload:
bodyFetchRequiresNetworkActivity
purgeMessages:
fetchNumMessages:preservingUID:options:
messageForRemoteID:
messagesWereDeleted:
setServerMessageCount:
serverMessageCount
serverUnreadOnlyOnServerCount
setServerUnreadOnlyOnServerCount:
.cxx_destruct
_connection
_serverMessageCount
nonDeletedCountForMailbox:
initWithMaximumSize:latency:
dateReceived
compare:
flush
store
messageID
flagsForUID:
setMessageFlags:
addItem:
persistence
hookRegistry
persistenceWillBeginUpdates
addMessages:withMailbox:newMessagesByOldMessage:remoteIDs:setFlags:addPOPUIDs:dataSectionsByMessage:generationWindow:
count
persistenceDidAddMessages:generationWindow:
messageChangeManager
didReflectNewMessages:
persistenceDidFinishUpdates
gotNewMessagesState
dateWithTimeIntervalSinceNow:
timeIntervalSince1970
dateReceivedAsTimeIntervalSince1970
conversationFlags
setGotNewMessagesState:
messageSize
init
handleItems:
sizeForItem:
_uidStore
_library
_mailbox
startDate
initWithLibrary:URLString:
releaseAllConnections
setIsFetching:
messagesAvailable
doStat
numberOfMessagesAvailable
numberOfKnownUIDs
numberOfMessageIDs
setNumberOfKnownUIDs:
idForMessageNumber:
oldestKnownMessageUID
setWithObject:
knownMessageIDsFromSet:
anyObject
setOldestKnownMessageUID:
isEqual:
newestKnownMessageUID
setNewestKnownMessageUID:
getMessageNumbers:andMessageIdsByNumber:
setWithCapacity:
hiddenPOPUIDsInMailbox:
setWithArray:
allUIDsInMailbox:
objectAtIndexedSubscript:
addObject:
setWithSet:
unionSet:
minusSet:
setSet:
messageDeletionPolicy
delayedMessageDeletionInterval
timeIntervalSinceReferenceDate
messageIDsAddedBeforeDate:
UIDsToDeleteInMailbox:
initWithCapacity:
firstHeaderForKey:
containsObject:
setWithObjects:
setObject:forKeyedSubscript:
fetchMessages:intoQueue:serverIDsByNumber:
quit
deleteMessagesOnServer:
removeObjectForKey:
allValues
deleteUIDsNotInArray:
numberWithUnsignedInteger:
primaryMailboxUid
_fetchWithAccount:intoQueue:newMessages:oldMessages:preservingUID:withStore:
fetchWithAccount:newMessages:oldMessages:preservingUID:withStore:
messageData:messageSize:isComplete:downloadIfNecessary:
setMessageData:isComplete:
dataHolderWithData:
messageDataHolder:messageSize:isComplete:downloadIfNecessary:
messageData
remoteMailboxURL
messageDataIsComplete:downloadIfNecessary:
preferredEncoding
initWithHeaderData:encoding:
headers
copy
setMessageData:
messageDataHolder
setMessageSize:
originalMailboxURL
headersIfAvailable
setAccountURL:
messageNumber
setMessageNumber:
setMessageID:
_messageData
_messageDataIsComplete
_size
_accountURL
_messageNumber
_messageID
Tq,N,V_messageNumber
T@"NSData",&,N
T@"NSString",C,N,V_messageID
UTF8String
_sendCommand:withArguments:
_getStatusFromReply
accountLogString
copyReplyLineData
bytes
initWithBytes:length:encoding:
uppercaseString
error
ef_publicDescription
capabilities
subarrayWithRange:
mutableCopyWithZone:
replaceObjectsInRange:withObjectsFromArray:range:
connectUsingAccount:
mf_rangeOfCString:options:
mf_rangeOfCString:options:range:
initWithBytes:length:
credentialAccessibility
inaccessiblePasswordErrorWithTitle:
missingPasswordErrorWithTitle:
_doBasicConnectionWithAccount:
usesSSL
securityProtocol
startTLSForAccount:
clientCertificates
setClientCertificates:
enableSSL
shouldAttemptAPOP
setShouldAttemptAPOP:
setPreferredAuthScheme:
savePersistentAccount
shouldCancel
_user:
_pass:
domain
code
disconnect
saslName
setAuthenticationState:
authenticationState
mf_decodeBase64
responseForServerData:
mf_encodeBase64WithoutLineBreaks
justSentPlainTextPassword
numberWithUnsignedLong:
_getUidlResults
_getListResults
allKeys
mutableCopy
sortUsingComparator:
numberWithInteger:
_readMultilineResponseWithMaxSize:consumer:
sizeOfMessageNumber:
getTop:ofMessageNumber:intoMutableData:
_retrieveMessage:ofSize:consumer:
setHeader:forKey:
encodedHeaders
subject
retr:consumer:intoQueue:idsByNumber:allowIncomplete:queueStatus:
getTopOfMessageNumber:intoMutableData:
standardUserDefaults
integerForKey:
setDisplayName:maxCount:
setCurrentCount:
dele:
setPercentDone:
indexOfObject:
portNumber
mf_convertNetworkLineEndingsToUnix
readLineIntoData:
done
dataWithBytesNoCopy:length:freeWhenDone:
setLength:
mf_appendCString:
appendBytes:length:
description
writeData:dontLogBytesInRange:
authenticationMechanisms
authenticateUsingAccount:authenticator:
disableAPOP
list:
retr:data:
fetchMessages:
_sendBuffer
_listResults
_messageIdsByNumber
_numbersByMessageId
_apopTimeStamp
_numberOfMessagesAvailable
_state
_hidingPassword
initWithBytesNoCopy:length:freeWhenDone:
mf_isUserCancelledError
numberWithInt:
setUserInfoObject:forKey:
initWithLibrary:persistentAccount:
initWithName:andDelegate:
initWithName:condition:andDelegate:
reset
closeCachedConnection
closeCachedConnectionForcedOnly:
releaseAllForcedConnections
connectionClass
setAccountProperty:forKey:
_queueAccountInfoDidChange
accountPropertyForKey:
deleteAllUIDs
_getCachedConnection
_createNewConnection
lockWhenCondition:
unlock
lock
unlockWithCondition:
isFatPipe
isCellularConnection
scheduleDisconnect
mailboxUidOfType:createIfNeeded:
saveState
cancelPreviousPerformRequestsWithTarget:selector:object:
performSelector:withObject:afterDelay:
isFetching
autofetchAccount:mailboxUid:
isMainThread
sharedInvocationQueue
closeConnection:andSaveUIDs:
mf_invocationWithSelector:target:object1:object2:
addInvocation:
accountTypeIdentifier
csAccountTypeString
legacyKeychainProtocol
defaultPortNumber
defaultSecurePortNumber
certUIService
statisticsKind
canGoOffline
supportsPurge
serviceName
secureServiceName
requiresAuthentication
storeClass
storeClassForMailbox:
mailboxPathExtension
canCreateNewMailboxes
supportsSyncingReadState
canMailboxBeRenamed:
setMessageDeletionPolicy:
setDelayedMessageDeletionInterval:
_URLScheme
_deleteHook
connectionsInUse
shouldRestoreMessagesAfterFailedDelete
_fetchMonitor
_sharedConnectionCondition
_connectionsInUse
_currentUIDs
_connectionActivityLock
_connectionTimeout
_fetcherNeedsReset
_hasDoneBackgroundSynchronization
_shouldAttemptAPOP
_oldestMessageUID
_newestMessageUID
_numberOfKnownUIDs
mainThreadScheduler
performSyncBlock:
performBlock:
v16@0:8
B24@0:8@16
#24@0:8#16
#16@0:8
B16@0:8
@16@0:8
B32@0:8#16@24
@28@0:8@16B24
v20@0:8B16
@60@0:8@16{_NSRange=QQ}24^B40B48^B52
B68@0:8@16{_NSRange=QQ}24^B40@48B56^B60
@44@0:8@16^B24^B32B40
@56@0:8@16^@24^B32B40B44^B48
@44@0:8@16^@24B32^B36
v24@0:8@16
q40@0:8Q16@24Q32
@24@0:8@16
@32@0:8@16@24
v40@0:8@16@24@32
v24@0:8Q16
Q16@0:8
@"MFPOP3Connection"
Q24@0:8@16
@"MFSqliteMessageIDStore"
@"MFMailMessageLibrary"
@"MFMailboxUid"
@"NSDate"
q64@0:8@16@24Q32Q40@48@56
q56@0:8@16Q24Q32@40@48
v28@0:8@16B24
B44@0:8^@16^Q24^B32B40
q16@0:8
v24@0:8q16
@"NSData"
@"NSString"
B32@0:8@16@24
i16@0:8
i20@0:8i16
i40@0:8^@16^@24^@32
i32@0:8^@16^@24
@24@0:8q16
i40@0:8Q16Q24@32
i60@0:8Q16@24@32@40B48^B52
i32@0:8Q16^@24
i32@0:8Q16@24
i24@0:8Q16
@24@0:8Q16
Q24@0:8Q16
i40@0:8@16@24@32
i24@0:8@16
i36@0:8i16Q20@28
i32@0:8r*16@24
i32@0:8@16@24
@"NSMutableData"
@"NSMutableDictionary"
^v16@0:8
I16@0:8
q48@0:8Q16Q24@32@40
#24@0:8@16
v20@0:8i16
v20@0:8I16
v32@0:8@16@24
@24@0:8i16B20
@"MFActivityMonitor"
@"NSConditionLock"
@"NSArray"
@"MFLock"
MESSAGE_AUTH_APOP
Authenticated POP (APOP)
Delayed
FAILED_LOGIN
FAILED_FETCH_TITLE
Cannot Get Mail
AUTH_NOT_SUPPORTED_FORMAT
multipart
+[MFPOP3Fetcher _fetchWithAccount:intoQueue:newMessages:oldMessages:preservingUID:withStore:]
MFPOP3Fetcher.m
[library isKindOfClass:[MFMailMessageLibrary class]]
Missing Message-ID
com.apple.email
v8@?0
SASL
POP_BAD_USERNAME_FORMAT
Success
Failed
q24@?0@"NSNumber"8@"NSNumber"16
x-apple-content-length
POP3MaximumNumberToFetch
DOWNLOADING_STATUS_FORMAT
Downloading %@ of %@
STLS
TLS_NOT_SUPPORTED_FORMAT
TLS_FAILED_FORMAT
LOGIN-DELAY
IN-USE
SYS/PERM
SYS/TEMP
POP3Response
%02x
MFDeletePOPMessagesStarted
MFDeletePOPMessagesCompleted
DeleteMessagesOnServerInterval
DeletionPolicy
Never
RightAway
AfterInterval
WhenTransferredOutOfInbox
connectionActivityLock
sharedConnection
pop3
pop3s
mbox
-[POPAccount _deleteHook]
POPAccount.m
[[self library] isKindOfClass:[MFMailMessageLibrary class]]
-[POPAccount closeConnection:andSaveUIDs:]
CAPA
-ERR
QUIT
STAT
LIST
UIDL
RETR
DELE
STLS
PASS
APOP
USER
AUTH
%@: "Connecting..." starting
%@: "Connecting..." completed
<Account:%{public}@> Successful CAPA response %{public}@
<Account:%{public}@> Received CAPA error %{public}@
<Account:%{public}@> Successful Connection Established: %{public}@
<Account:%{public}@> Account loggedIn: %{public}@
<Account:%{public}@> Login Successful. Setting AuthScheme to ECAuthenticationSchemeAPOP
<Account:%{public}@> Login attempt %d
<Account:%{public}@> Login Failure %@
<Account:%{public}@> Login %@
#Power [New Message] subject=%@;
failed: %{public}@
POP fetch failed because INBOX store could not be created
Exception raised while fetching in account %@: %@
MFAPOPAuthScheme
MFAPOPConnection
MFLibraryPOPStore
MFPOPDownloadQueue
MFPOP3Fetcher
MFPOPMessage
MFPOP3Connection
POPAccount
persistenceDidFinishUpdates
recordTransportType:
gotNewMessagesState
dateReceived
missingPasswordErrorWithTitle:
mf_encodeBase64WithoutLineBreaks
setPercentDone:
setWithObjects:
numberWithInteger:
readLineIntoData:
persistenceDidAddMessages:generationWindow:
dataWithBytesNoCopy:length:freeWhenDone:
unionSet:
didReflectNewMessages:
minusSet:
accountPropertyForKey:
setMailbox:
URLString
setAccountProperty:forKey:
library
appendData:
store
integerForKey:
numberWithInt:
mf_decodeBase64
setWithObject:
description
persistence
errorWithDomain:code:localizedDescription:title:userInfo:
indexOfObject:
appendBytes:length:
setLength:
messageDataIsComplete:downloadIfNecessary:
type
performSelector:withObject:afterDelay:
mimeBody
mf_convertNetworkLineEndingsToUnix
length
range
dataUsingEncoding:
accountLogString
responseForServerData:
copy
inaccessiblePasswordErrorWithTitle:
setWithCapacity:
intValue
errorWithDomain:code:localizedDescription:
clientCertificates
standardUserDefaults
dataHolderWithData:
deleteUIDsNotInArray:
setObject:forKeyedSubscript:
transportType
anyObject
performBlock:
setIsFetching:
knownMessageIDsFromSet:
initWithName:condition:andDelegate:
reset
mf_unlock
mf_appendCString:
error
numberOfMessageIDs
setWithArray:
conversationFlags
account
setHeader:forKey:
sortUsingComparator:
initWithName:andDelegate:
topLevelPart
messageChangeManager
deletePOPUID:inMailbox:
justSentPlainTextPassword
setUserInfoObject:forKey:
allValues
writeData:dontLogBytesInRange:
purgeMessagesBeyondLimit:
mf_subdataWithRange:
encodedHeaders
securityProtocol
replaceObjectsInRange:withObjectsFromArray:range:
password
contentType
timeIntervalSinceReferenceDate
primaryMailboxUid
message
allUIDsInMailbox:
schemeWithName:
setGotNewMessagesState:
dataConsumerForMessage:part:incomplete:
usesSSL
cancelPreviousPerformRequestsWithTarget:selector:object:
mf_rangeOfRFC822HeaderData
isValid
enableSSL
mainThreadScheduler
initWithLibrary:URLString:
containsObject:
messageWithRemoteID:inRemoteMailbox:
deleteAllUIDs
isMainThread
setMessageStore:
nonDeletedCountForMailbox:
allKeys
hostname
timeIntervalSince1970
removeObjectForKey:
preferredEncoding
flush
data
initWithHeaderData:encoding:
setError:
shouldCancel
mf_rangeOfCString:options:range:
setSet:
objectForKeyedSubscript:
username
bytes
ef_publicDescription
saveState
isFetching
hookRegistry
setDisplayName:maxCount:
done
mailbox
_cachedBodyDataContainerForMessage:valueIfNotPresent:
mf_rangeOfCString:options:
addObject:
uppercaseString
flagsForUID:
preferredAuthScheme
currentMonitor
UIDsToDeleteInMailbox:
messageIDsAddedBeforeDate:
initWithCapacity:
subject
compare:
setServerUnreadOnlyOnServerCount:forMailbox:
objectForKey:
hiddenPOPUIDsInMailbox:
sharedInvocationQueue
lowercaseString
isFatPipe
_queueAccountInfoDidChange
remoteID
portNumber
initWithBytesNoCopy:length:freeWhenDone:
setCurrentCount:
credentialAccessibility
domain
autofetchAccount:mailboxUid:
firstHeaderForKey:
addMessages:withMailbox:newMessagesByOldMessage:remoteIDs:setFlags:addPOPUIDs:dataSectionsByMessage:generationWindow:
mf_lock
savePersistentAccount
objectAtIndexedSubscript:
subarrayWithRange:
compactMessages:permanently:
unsignedLongValue
mutableCopyWithZone:
UTF8String
mf_isUserCancelledError
unlockWithCondition:
dateWithTimeIntervalSinceNow:
numberWithUnsignedLong:
setClientCertificates:
countByEnumeratingWithState:objects:count:
isEqualToString:
sharedInstance
persistenceWillBeginUpdates
code
lockWhenCondition:
initWithBytes:length:encoding:
mutableCopy
authenticationState
mf_invocationWithSelector:target:object1:object2:
dateReceivedAsTimeIntervalSince1970
setMessageFlags:
messageFlags
numberWithUnsignedInteger:
initWithBytes:length:
storeRemoteContentLinksFromHeaderData:bodyData:forMessage:
disconnect
lock
saslName
count
isCellularConnection
isEqual:
setWithSet:
unlock
setAuthenticationState:
headerData
registerSchemeClass:
stringWithFormat:
addInvocation:
canAuthenticateAccountClass:connection:
initialize
supportsAccountType:
connectionClassForAccountClass:
authenticatorClass
hasEncryption
requiresPassword
name
humanReadableName
authenticateUsingAccount:
initWithMailbox:readOnly:
bodyDataForMessage:isComplete:isPartial:downloadIfNecessary:
_fetchHeaderDataForMessage:downloadIfNecessary:
_fetchBodyDataForMessage:andHeaderDataIfReadilyAvailable:downloadIfNecessary:partial:
_handleFlagsChangedForMessages:flags:oldFlagsByMessage:
openSynchronouslyUpdatingMetadata:
dataForMimePart:inRange:isComplete:downloadIfNecessary:didDownload:
dataForMimePart:inRange:isComplete:withConsumer:downloadIfNecessary:didDownload:
fullBodyDataForMessage:andHeaderDataIfReadilyAvailable:isComplete:downloadIfNecessary:usePartDatas:didDownload:
bodyFetchRequiresNetworkActivity
purgeMessages:
fetchNumMessages:preservingUID:options:
messageForRemoteID:
messageForRemoteID:inMailbox:
messagesWereDeleted:
setServerMessageCount:
serverMessageCount
serverUnreadOnlyOnServerCount
setServerUnreadOnlyOnServerCount:
.cxx_destruct
_connection
_serverMessageCount
initWithMaximumSize:latency:
addItem:
init
handleItems:
sizeForItem:
_uidStore
_library
_mailbox
startDate
_fetchWithAccount:intoQueue:newMessages:oldMessages:preservingUID:withStore:
fetchWithAccount:newMessages:oldMessages:preservingUID:withStore:
messageData:messageSize:isComplete:downloadIfNecessary:
messageDataHolder:messageSize:isComplete:downloadIfNecessary:
headers
messageData
setMessageData:
setMessageData:isComplete:
messageDataHolder
messageSize
setMessageSize:
remoteMailboxURL
originalMailboxURL
headersIfAvailable
setAccountURL:
messageNumber
setMessageNumber:
messageID
setMessageID:
_messageData
_messageDataIsComplete
_size
_accountURL
_messageNumber
_messageID
Tq,N,V_messageNumber
T@"NSData",&,N
T@"NSString",C,N,V_messageID
connectUsingAccount:
capabilities
authenticationMechanisms
_doBasicConnectionWithAccount:
authenticateUsingAccount:authenticator:
quit
supportsAPOP
disableAPOP
doStat
list:
_getListResults
_getUidlResults
getMessageNumbers:messageIdsByNumber:numbersByMessageId:
getMessageNumbers:andMessageIdsByNumber:
idForMessageNumber:
_retrieveMessage:ofSize:consumer:
retr:consumer:intoQueue:idsByNumber:allowIncomplete:queueStatus:
retr:data:
retr:dataConsumer:
dele:
copyMessageHeaderForMessageNumber:
getTopOfMessageNumber:intoMutableData:
sizeOfMessageNumber:
messagesAvailable
numberOfMessagesAvailable
fetchMessages:intoQueue:serverIDsByNumber:
fetchMessages:
deleteMessagesOnServer:
startTLSForAccount:
getTop:ofMessageNumber:intoMutableData:
_readMultilineResponseWithMaxSize:consumer:
_sendCommand:withArguments:
copyReplyLineData
_getStatusFromReply
_apopWithUsername:password:
_user:
_pass:
_sendBuffer
_listResults
_messageIdsByNumber
_numbersByMessageId
_apopTimeStamp
_numberOfMessagesAvailable
_state
_hidingPassword
initWithLibrary:persistentAccount:
releaseAllConnections
releaseAllForcedConnections
connectionClass
setPreferredAuthScheme:
authenticatedConnection
mailboxUidOfType:createIfNeeded:
closeCachedConnection
closeConnection:andSaveUIDs:
accountTypeIdentifier
accountTypeString
csAccountTypeString
legacyKeychainProtocol
defaultPortNumber
defaultSecurePortNumber
saslProfileName
fetchNumNewMessages:oldMessages:preservingUID:withStore:
certUIService
statisticsKind
canGoOffline
supportsPurge
serviceName
secureServiceName
requiresAuthentication
storeClass
storeClassForMailbox:
mailboxPathExtension
canCreateNewMailboxes
supportsSyncingReadState
canMailboxBeRenamed:
shouldAttemptAPOP
setShouldAttemptAPOP:
setMessageDeletionPolicy:
setDelayedMessageDeletionInterval:
messageDeletionPolicy
delayedMessageDeletionInterval
_URLScheme
setOldestKnownMessageUID:
setNewestKnownMessageUID:
oldestKnownMessageUID
newestKnownMessageUID
setNumberOfKnownUIDs:
numberOfKnownUIDs
_deleteHook
connectionsInUse
_getCachedConnection
_createNewConnection
checkInConnection:currentUIDs:
scheduleDisconnect
closeCachedConnectionForcedOnly:
shouldRestoreMessagesAfterFailedDelete
_fetchMonitor
_sharedConnectionCondition
_connectionsInUse
_currentUIDs
_connectionActivityLock
_connectionTimeout
_fetcherNeedsReset
_hasDoneBackgroundSynchronization
_shouldAttemptAPOP
_oldestMessageUID
_newestMessageUID
_numberOfKnownUIDs
v16@0:8
B24@0:8@16
#24@0:8#16
#16@0:8
B16@0:8
@16@0:8
B32@0:8#16@24
@28@0:8@16B24
v20@0:8B16
@60@0:8@16{_NSRange=QQ}24^B40B48^B52
B68@0:8@16{_NSRange=QQ}24^B40@48B56^B60
@44@0:8@16^B24^B32B40
@56@0:8@16^@24^B32B40B44^B48
@44@0:8@16^@24B32^B36
v24@0:8@16
q40@0:8Q16@24Q32
@24@0:8@16
@32@0:8@16@24
v40@0:8@16@24@32
v24@0:8Q16
Q16@0:8
@"MFPOP3Connection"
Q24@0:8@16
@"MFSqliteMessageIDStore"
@"MFMailMessageLibrary"
@"MFMailboxUid"
@"NSDate"
q64@0:8@16@24Q32Q40@48@56
q56@0:8@16Q24Q32@40@48
v28@0:8@16B24
B44@0:8^@16^Q24^B32B40
q16@0:8
v24@0:8q16
@"NSData"
@"NSString"
B32@0:8@16@24
i16@0:8
i20@0:8i16
i40@0:8^@16^@24^@32
i32@0:8^@16^@24
@24@0:8q16
i40@0:8Q16Q24@32
i60@0:8Q16@24@32@40B48^B52
i32@0:8Q16^@24
i32@0:8Q16@24
i24@0:8Q16
@24@0:8Q16
Q24@0:8Q16
i40@0:8@16@24@32
i24@0:8@16
i36@0:8i16Q20@28
i32@0:8r*16@24
i32@0:8@16@24
@"NSMutableData"
@"NSMutableDictionary"
^v16@0:8
I16@0:8
q48@0:8Q16Q24@32@40
#24@0:8@16
v20@0:8i16
v20@0:8I16
v32@0:8@16@24
@24@0:8i16B20
@"MFActivityMonitor"
@"NSConditionLock"
@"NSArray"
@"MFLock"
