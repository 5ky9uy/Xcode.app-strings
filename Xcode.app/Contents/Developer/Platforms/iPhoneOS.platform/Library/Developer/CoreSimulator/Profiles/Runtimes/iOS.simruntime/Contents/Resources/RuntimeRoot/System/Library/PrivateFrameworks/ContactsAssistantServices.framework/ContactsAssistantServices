v32@?0@8Q16^B24
v24@?0@"CNContact"8^B16
%@=%d
recordID
%@=%@
databaseID
identifier
%@://%@
com.apple.contacts
contact
container
group
com.apple.contacts://externalPerson?externalIdentifier=%@
externalIdentifier
B16@?0@"CNLabeledValue"8
@"SAEmail"16@?0@"CNLabeledValue"8
@"SAPhone"16@?0@"CNLabeledValue"8
@"SALocation"16@?0@"CNLabeledValue"8
@"SARelatedName"16@?0@"CNLabeledValue"8
@"SASocialProfile"16@?0@"CNLabeledValue"8
@"CNLabeledValue"16@?0@"SALocation"8
@"CNLabeledValue"16@?0@"SAEmail"8
@"CNLabeledValue"16@?0@"SAPhone"8
@"CNLabeledValue"16@?0@"SARelatedName"8
com.apple.ContactsAssistantServices
Error updating contact, failure to fetch:%@
MapAndFilter
CASAdditions
CNAssistantID
CNAssistantConversion
count
arrayWithCapacity:
addObject:
enumerateObjectsUsingBlock:
mapUsingBlock:
filterUsingBlock:
initWithKeysToFetch:
setUnifyResults:
arrayWithObjects:count:
predicateForContactsWithIdentifiers:
setPredicate:
enumerateContactsWithFetchRequest:error:usingBlock:
contactWithIdentifier:keysToFetch:error:
array
stringWithFormat:
length
componentsJoinedByString:
stringByAppendingString:
URLWithString:
identifierWithError:
databaseID
unifiedContactWithIdentifier:keysToFetch:error:
iOSLegacyIdentifier
assistantIDOfType:recordID:databaseID:identifier:
isKeyAvailable:
identifier
scheme
isEqualToString:
host
objectForKeyedSubscript:
assistantIDFromContactID:
assistantIDFromContact:
assistantIDFromContainer:
assistantIDFromGroup:
contactIDFromAssistantID:
containerIDFromAssistantID:
groupIDFromAssistantID:
assistantIDFromExternalIdentifier:
externalIdentifierFromAssistantID:
query
componentsSeparatedByString:
dictionaryWithCapacity:
countByEnumeratingWithState:objects:count:
objectAtIndexedSubscript:
setObject:forKeyedSubscript:
descriptorForRequiredKeysForStyle:
descriptorsForRequiredKeysForConversionType:
areKeysAvailable:
setMe:
givenName
setFirstName:
nickname
setNickName:
phoneticGivenName
setFirstNamePhonetic:
setIdentifier:
relationsFromContact:
setRelatedNames:
phonemeData
setPhonemeData:
setInternalGUID:
familyName
organizationName
setLastName:
setCompany:
phoneticFamilyName
setLastNamePhonetic:
emailAddressesForSyncFromContact:
setEmails:
phoneNumbersForSyncFromContact:
setPhones:
addressesForSyncFromContact:
setAddresses:
relationsForSyncFromContact:
middleName
setMiddleName:
birthday
year
setYear:
timeZone
timeZoneWithName:
setTimeZone:
calendarWithIdentifier:
dateFromComponents:
setBirthday:
namePrefix
setPrefix:
nameSuffix
setSuffix:
emailAddressesFromContact:
phoneNumbersFromContact:
addressesFromContact:
stringFromContact:style:
setFullName:
personFromContact:useABPerson:
verifyContact:hasDescriptorsForRequiredKeys:
personFromMeContact:
personForSyncFromContact:
personFromContact:
createSAPersonFromCNContact:conversionType:
predicateForContactsMatchingFullTextSearch:containerIdentifiers:groupIdentifiers:
unifiedContactsMatchingPredicate:keysToFetch:error:
firstObject
createSAPersonFromCNContact:
setDomainIdentifier:
type
numberWithBool:
setRemote:
label
containsObject:
sharedInstance
entriesForContact:propertyKey:labeledValueIdentifier:actionType:bundleIdentifier:
actionType
contactProperty
emailAddresses
filterLabeledValues:droppingEmptyLabels:droppingDuplicates:
value
setEmailAddress:
setLabel:
setFavoriteFacetimeAudio:
setFavoriteFacetime:
bundleIdentifier
phoneNumbers
formattedInternationalStringValue
setNumber:
setFavoriteVoice:
postalAddresses
street
setStreet:
city
setCity:
state
setStateCode:
postalCode
setPostalCode:
ISOCountryCode
setCountryCode:
contactRelations
name
setName:
socialProfiles
service
setServiceType:
urlString
setUrl:
username
setUserName:
_crossPlatformUnifiedMeContactWithKeysToFetch:error:
internalGUID
firstName
lastName
nickName
prefix
suffix
company
addresses
emails
phones
relatedNames
stateCode
setState:
countryCode
setISOCountryCode:
labeledValueWithLabel:value:
emailAddress
number
phoneNumberWithStringValue:
contactRelationWithName:
keysFromPerson:
arrayByAddingObjectsFromArray:
mutableCopy
addressesFromPerson:
setPostalAddresses:
emailAddressesFromPerson:
setEmailAddresses:
phoneNumbersFromPerson:
setPhoneNumbers:
relationsFromPerson:
setContactRelations:
updateContact:
setGivenName:
setFamilyName:
setNickname:
setNamePrefix:
setNameSuffix:
setOrganizationName:
currentCalendar
components:fromDate:
addFields
addFieldsFromPerson:toContactWithIdentifier:usingStore:saveRequest:
setFields
setFieldsFromPerson:toContactWithIdentifier:usingStore:saveRequest:
boolValue
removeFields
removeFieldsFromPerson:toContactWithIdentifier:usingStore:saveRequest:
descriptorsForRequiredKeys
createSAPersonFromCNContactWithExternalIdentifier:
createSASourceFromCNContainer:
socialProfilesFromContact:
markMeContactInPeople:usingStore:
applyUpdate:toContactWithIdentifier:usingStore:saveRequest:
T@"NSArray",R,N
@24@0:8@?16
@40@0:8@16@24^@32
@44@0:8@16i24@28@36
@16@0:8
@24@0:8@16
@24@0:8q16
@28@0:8@16B24
@32@0:8@16q24
@32@0:8@16B24B28
@32@0:8@16@24
v32@0:8@16@24
v48@0:8@16@24@32@40
v32@?0@8Q16^B24
v24@?0@"CNContact"8^B16
%@=%d
recordID
%@=%@
databaseID
identifier
%@://%@
com.apple.contacts
contact
container
group
com.apple.contacts://externalPerson?externalIdentifier=%@
externalIdentifier
B16@?0@"CNLabeledValue"8
@"SAEmail"16@?0@"CNLabeledValue"8
@"SAPhone"16@?0@"CNLabeledValue"8
@"SALocation"16@?0@"CNLabeledValue"8
@"SARelatedName"16@?0@"CNLabeledValue"8
@"SASocialProfile"16@?0@"CNLabeledValue"8
@"CNLabeledValue"16@?0@"SALocation"8
@"CNLabeledValue"16@?0@"SAEmail"8
@"CNLabeledValue"16@?0@"SAPhone"8
@"CNLabeledValue"16@?0@"SARelatedName"8
com.apple.ContactsAssistantServices
Error updating contact, failure to fetch:%@
MapAndFilter
CASAdditions
CNAssistantID
CNAssistantConversion
service
setFavoriteFacetimeAudio:
removeFields
emailAddresses
setFirstNamePhonetic:
setDomainIdentifier:
label
setNickname:
stringByAppendingString:
setRemote:
objectAtIndexedSubscript:
setYear:
countByEnumeratingWithState:objects:count:
addresses
timeZoneWithName:
nameSuffix
emailAddress
setBirthday:
currentCalendar
setSuffix:
setPhones:
emails
street
updateContact:
setInternalGUID:
setFavoriteFacetime:
setStreet:
identifierWithError:
setFamilyName:
query
contactProperty
prefix
setMiddleName:
setUserName:
setRelatedNames:
array
addObject:
numberWithBool:
stateCode
setCountryCode:
timeZone
setAddresses:
actionType
phoneticGivenName
setPhoneNumbers:
count
initWithKeysToFetch:
dateFromComponents:
entriesForContact:propertyKey:labeledValueIdentifier:actionType:bundleIdentifier:
contactRelationWithName:
sharedInstance
city
setLabel:
arrayByAddingObjectsFromArray:
setNumber:
setEmailAddress:
birthday
enumerateContactsWithFetchRequest:error:usingBlock:
urlString
givenName
username
objectForKeyedSubscript:
formattedInternationalStringValue
middleName
relatedNames
setObject:forKeyedSubscript:
arrayWithCapacity:
URLWithString:
postalAddresses
phonemeData
company
setFullName:
scheme
nickName
stringFromContact:style:
nickname
descriptorForRequiredKeysForStyle:
setTimeZone:
setFavoriteVoice:
setLastName:
firstName
firstObject
contactRelations
type
value
predicateForContactsMatchingFullTextSearch:containerIdentifiers:groupIdentifiers:
setPostalAddresses:
enumerateObjectsUsingBlock:
setServiceType:
setPostalCode:
unifiedContactWithIdentifier:keysToFetch:error:
postalCode
setUnifyResults:
socialProfiles
labeledValueWithLabel:value:
host
arrayWithObjects:count:
stringWithFormat:
setCity:
internalGUID
setCompany:
setName:
setNamePrefix:
phones
organizationName
phoneNumberWithStringValue:
countryCode
lastName
setEmails:
setLastNamePhonetic:
ISOCountryCode
setState:
setEmailAddresses:
_crossPlatformUnifiedMeContactWithKeysToFetch:error:
componentsJoinedByString:
unifiedContactsMatchingPredicate:keysToFetch:error:
iOSLegacyIdentifier
components:fromDate:
predicateForContactsWithIdentifiers:
setNameSuffix:
setPredicate:
familyName
isEqualToString:
setFields
length
setNickName:
mutableCopy
phoneticFamilyName
phoneNumbers
bundleIdentifier
addFields
containsObject:
name
state
setOrganizationName:
isKeyAvailable:
componentsSeparatedByString:
dictionaryWithCapacity:
setUrl:
setStateCode:
setMe:
number
areKeysAvailable:
setGivenName:
suffix
setISOCountryCode:
setIdentifier:
setPhonemeData:
identifier
setPrefix:
namePrefix
setContactRelations:
boolValue
calendarWithIdentifier:
year
setFirstName:
mapUsingBlock:
filterUsingBlock:
contactWithIdentifier:keysToFetch:error:
assistantIDOfType:recordID:databaseID:identifier:
databaseID
assistantIDFromContactID:
assistantIDFromContact:
assistantIDFromContainer:
assistantIDFromGroup:
contactIDFromAssistantID:
containerIDFromAssistantID:
groupIDFromAssistantID:
assistantIDFromExternalIdentifier:
externalIdentifierFromAssistantID:
descriptorsForRequiredKeysForConversionType:
descriptorsForRequiredKeys
personFromMeContact:
personForSyncFromContact:
personFromContact:useABPerson:
personFromContact:
createSAPersonFromCNContact:conversionType:
createSAPersonFromCNContact:
createSAPersonFromCNContactWithExternalIdentifier:
createSASourceFromCNContainer:
filterLabeledValues:droppingEmptyLabels:droppingDuplicates:
emailAddressesFromContact:
emailAddressesForSyncFromContact:
phoneNumbersFromContact:
phoneNumbersForSyncFromContact:
addressesFromContact:
addressesForSyncFromContact:
relationsFromContact:
relationsForSyncFromContact:
socialProfilesFromContact:
verifyContact:hasDescriptorsForRequiredKeys:
markMeContactInPeople:usingStore:
keysFromPerson:
addressesFromPerson:
emailAddressesFromPerson:
phoneNumbersFromPerson:
relationsFromPerson:
addFieldsFromPerson:toContactWithIdentifier:usingStore:saveRequest:
setFieldsFromPerson:toContactWithIdentifier:usingStore:saveRequest:
removeFieldsFromPerson:toContactWithIdentifier:usingStore:saveRequest:
applyUpdate:toContactWithIdentifier:usingStore:saveRequest:
T@"NSArray",R,N
@24@0:8@?16
@40@0:8@16@24^@32
@44@0:8@16i24@28@36
@16@0:8
@24@0:8@16
@24@0:8q16
@28@0:8@16B24
@32@0:8@16q24
@32@0:8@16B24B28
@32@0:8@16@24
v32@0:8@16@24
v48@0:8@16@24@32@40
