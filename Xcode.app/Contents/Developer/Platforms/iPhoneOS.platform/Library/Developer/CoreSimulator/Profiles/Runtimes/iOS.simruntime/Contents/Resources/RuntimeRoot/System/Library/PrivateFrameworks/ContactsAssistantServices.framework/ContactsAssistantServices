v32@?0@8Q16^B24
v24@?0@"CNContact"8^B16
%@=%d
recordID
%@=%@
databaseID
identifier
%@://%@
com.apple.contacts
contact
container
group
com.apple.contacts://externalPerson?externalIdentifier=%@
externalIdentifier
B16@?0@"CNLabeledValue"8
@"SAEmail"16@?0@"CNLabeledValue"8
@"SAPhone"16@?0@"CNLabeledValue"8
@"SALocation"16@?0@"CNLabeledValue"8
@"SARelatedName"16@?0@"CNLabeledValue"8
@"SASocialProfile"16@?0@"CNLabeledValue"8
@"CNLabeledValue"16@?0@"SALocation"8
@"CNLabeledValue"16@?0@"SAEmail"8
@"CNLabeledValue"16@?0@"SAPhone"8
@"CNLabeledValue"16@?0@"SARelatedName"8
com.apple.ContactsAssistantServices
Error updating contact, failure to fetch:%@
MapAndFilter
CASAdditions
CNAssistantID
CNAssistantConversion
count
arrayWithCapacity:
addObject:
enumerateObjectsUsingBlock:
mapUsingBlock:
filterUsingBlock:
initWithKeysToFetch:
setUnifyResults:
arrayWithObjects:count:
predicateForContactsWithIdentifiers:
setPredicate:
enumerateContactsWithFetchRequest:error:usingBlock:
contactWithIdentifier:keysToFetch:error:
array
stringWithFormat:
length
componentsJoinedByString:
stringByAppendingString:
URLWithString:
identifierWithError:
databaseID
unifiedContactWithIdentifier:keysToFetch:error:
iOSLegacyIdentifier
assistantIDOfType:recordID:databaseID:identifier:
isKeyAvailable:
identifier
scheme
isEqualToString:
host
objectForKeyedSubscript:
assistantIDFromContactID:
assistantIDFromContact:
assistantIDFromContainer:
assistantIDFromGroup:
contactIDFromAssistantID:
containerIDFromAssistantID:
groupIDFromAssistantID:
assistantIDFromExternalIdentifier:
externalIdentifierFromAssistantID:
query
componentsSeparatedByString:
dictionaryWithCapacity:
countByEnumeratingWithState:objects:count:
objectAtIndexedSubscript:
setObject:forKeyedSubscript:
descriptorForRequiredKeysForStyle:
descriptorsForRequiredKeysForConversionType:
areKeysAvailable:
setMe:
givenName
setFirstName:
nickname
setNickName:
phoneticGivenName
setFirstNamePhonetic:
setIdentifier:
relationsFromContact:
setRelatedNames:
phonemeData
setPhonemeData:
setInternalGUID:
familyName
organizationName
setLastName:
setCompany:
phoneticFamilyName
setLastNamePhonetic:
emailAddressesForSyncFromContact:
setEmails:
phoneNumbersForSyncFromContact:
setPhones:
addressesForSyncFromContact:
setAddresses:
relationsForSyncFromContact:
middleName
setMiddleName:
birthday
year
setYear:
timeZone
timeZoneWithName:
setTimeZone:
calendarWithIdentifier:
dateFromComponents:
setBirthday:
namePrefix
setPrefix:
nameSuffix
setSuffix:
emailAddressesFromContact:
phoneNumbersFromContact:
addressesFromContact:
stringFromContact:style:
setFullName:
personFromContact:useABPerson:
verifyContact:hasDescriptorsForRequiredKeys:
personFromMeContact:
personForSyncFromContact:
personFromContact:
createSAPersonFromCNContact:conversionType:
predicateForContactsMatchingFullTextSearch:containerIdentifiers:groupIdentifiers:
unifiedContactsMatchingPredicate:keysToFetch:error:
firstObject
createSAPersonFromCNContact:
setDomainIdentifier:
type
numberWithBool:
setRemote:
label
containsObject:
sharedInstance
entriesForContact:propertyKey:labeledValueIdentifier:actionType:bundleIdentifier:
actionType
contactProperty
emailAddresses
filterLabeledValues:droppingEmptyLabels:droppingDuplicates:
value
setEmailAddress:
setLabel:
setFavoriteFacetimeAudio:
setFavoriteFacetime:
bundleIdentifier
phoneNumbers
formattedInternationalStringValue
setNumber:
setFavoriteVoice:
postalAddresses
street
setStreet:
city
setCity:
state
setStateCode:
postalCode
setPostalCode:
ISOCountryCode
setCountryCode:
contactRelations
name
setName:
socialProfiles
service
setServiceType:
urlString
setUrl:
username
setUserName:
_crossPlatformUnifiedMeContactWithKeysToFetch:error:
internalGUID
firstName
lastName
nickName
prefix
suffix
company
addresses
emails
phones
relatedNames
stateCode
setState:
countryCode
setISOCountryCode:
labeledValueWithLabel:value:
emailAddress
number
phoneNumberWithStringValue:
contactRelationWithName:
keysFromPerson:
arrayByAddingObjectsFromArray:
mutableCopy
addressesFromPerson:
setPostalAddresses:
emailAddressesFromPerson:
setEmailAddresses:
phoneNumbersFromPerson:
setPhoneNumbers:
relationsFromPerson:
setContactRelations:
updateContact:
setGivenName:
setFamilyName:
setNickname:
setNamePrefix:
setNameSuffix:
setOrganizationName:
currentCalendar
components:fromDate:
addFields
addFieldsFromPerson:toContactWithIdentifier:usingStore:saveRequest:
setFields
setFieldsFromPerson:toContactWithIdentifier:usingStore:saveRequest:
boolValue
removeFields
removeFieldsFromPerson:toContactWithIdentifier:usingStore:saveRequest:
descriptorsForRequiredKeys
createSAPersonFromCNContactWithExternalIdentifier:
createSASourceFromCNContainer:
socialProfilesFromContact:
markMeContactInPeople:usingStore:
applyUpdate:toContactWithIdentifier:usingStore:saveRequest:
T@"NSArray",R,N
@24@0:8@?16
@40@0:8@16@24^@32
@44@0:8@16i24@28@36
@16@0:8
@24@0:8@16
@24@0:8q16
@28@0:8@16B24
@32@0:8@16q24
@32@0:8@16B24B28
@32@0:8@16@24
v32@0:8@16@24
v48@0:8@16@24@32@40
v32@?0@8Q16^B24
v24@?0@"CNContact"8^B16
%@=%d
recordID
%@=%@
databaseID
identifier
%@://%@
com.apple.contacts
contact
container
group
com.apple.contacts://externalPerson?externalIdentifier=%@
externalIdentifier
B16@?0@"CNLabeledValue"8
@"SAEmail"16@?0@"CNLabeledValue"8
@"SAPhone"16@?0@"CNLabeledValue"8
@"SALocation"16@?0@"CNLabeledValue"8
@"SARelatedName"16@?0@"CNLabeledValue"8
@"SASocialProfile"16@?0@"CNLabeledValue"8
@"CNLabeledValue"16@?0@"SALocation"8
@"CNLabeledValue"16@?0@"SAEmail"8
@"CNLabeledValue"16@?0@"SAPhone"8
@"CNLabeledValue"16@?0@"SARelatedName"8
com.apple.ContactsAssistantServices
Error updating contact, failure to fetch:%@
MapAndFilter
CASAdditions
CNAssistantID
CNAssistantConversion
namePrefix
emailAddress
emails
setPredicate:
phoneNumberWithStringValue:
phones
labeledValueWithLabel:value:
setNamePrefix:
setLastNamePhonetic:
setEmails:
internalGUID
socialProfiles
contactProperty
service
currentCalendar
city
setPostalCode:
stringWithFormat:
setCity:
nickname
organizationName
value
setCompany:
postalCode
array
nickName
setUnifyResults:
unifiedContactWithIdentifier:keysToFetch:error:
predicateForContactsMatchingFullTextSearch:containerIdentifiers:groupIdentifiers:
setLastName:
label
setServiceType:
setPostalAddresses:
givenName
setFavoriteVoice:
type
URLWithString:
count
middleName
calendarWithIdentifier:
relatedNames
setTimeZone:
stringFromContact:style:
initWithKeysToFetch:
setFullName:
predicateForContactsWithIdentifiers:
setEmailAddresses:
unifiedContactsMatchingPredicate:keysToFetch:error:
addresses
countByEnumeratingWithState:objects:count:
setOrganizationName:
emailAddresses
setState:
setUrl:
isEqualToString:
setNickName:
setGivenName:
phoneNumbers
lastName
phoneticFamilyName
setNameSuffix:
dateFromComponents:
setISOCountryCode:
state
iOSLegacyIdentifier
setMe:
setFields
contactRelationWithName:
entriesForContact:propertyKey:labeledValueIdentifier:actionType:bundleIdentifier:
setPrefix:
_crossPlatformUnifiedMeContactWithKeysToFetch:error:
year
setStateCode:
setContactRelations:
birthday
setPhonemeData:
length
mutableCopy
arrayWithCapacity:
company
actionType
setIdentifier:
arrayByAddingObjectsFromArray:
name
suffix
timeZone
setPhoneNumbers:
numberWithBool:
countryCode
setCountryCode:
enumerateContactsWithFetchRequest:error:usingBlock:
number
isKeyAvailable:
contactRelations
stateCode
descriptorForRequiredKeysForStyle:
identifier
setRelatedNames:
setUserName:
phoneticGivenName
host
setFirstName:
prefix
setMiddleName:
firstObject
setFamilyName:
query
setAddresses:
setFavoriteFacetime:
setInternalGUID:
firstName
arrayWithObjects:count:
street
setStreet:
setPhones:
componentsJoinedByString:
objectAtIndexedSubscript:
updateContact:
enumerateObjectsUsingBlock:
removeFields
setYear:
components:fromDate:
setSuffix:
setDomainIdentifier:
boolValue
setBirthday:
stringByAppendingString:
identifierWithError:
setNickname:
timeZoneWithName:
nameSuffix
addFields
setFirstNamePhonetic:
urlString
setRemote:
containsObject:
setNumber:
setFavoriteFacetimeAudio:
sharedInstance
setLabel:
bundleIdentifier
postalAddresses
setEmailAddress:
objectForKeyedSubscript:
setObject:forKeyedSubscript:
componentsSeparatedByString:
setName:
formattedInternationalStringValue
dictionaryWithCapacity:
areKeysAvailable:
ISOCountryCode
familyName
phonemeData
scheme
addObject:
username
mapUsingBlock:
filterUsingBlock:
contactWithIdentifier:keysToFetch:error:
assistantIDOfType:recordID:databaseID:identifier:
databaseID
assistantIDFromContactID:
assistantIDFromContact:
assistantIDFromContainer:
assistantIDFromGroup:
contactIDFromAssistantID:
containerIDFromAssistantID:
groupIDFromAssistantID:
assistantIDFromExternalIdentifier:
externalIdentifierFromAssistantID:
descriptorsForRequiredKeysForConversionType:
descriptorsForRequiredKeys
personFromMeContact:
personForSyncFromContact:
personFromContact:useABPerson:
personFromContact:
createSAPersonFromCNContact:conversionType:
createSAPersonFromCNContact:
createSAPersonFromCNContactWithExternalIdentifier:
createSASourceFromCNContainer:
filterLabeledValues:droppingEmptyLabels:droppingDuplicates:
emailAddressesFromContact:
emailAddressesForSyncFromContact:
phoneNumbersFromContact:
phoneNumbersForSyncFromContact:
addressesFromContact:
addressesForSyncFromContact:
relationsFromContact:
relationsForSyncFromContact:
socialProfilesFromContact:
verifyContact:hasDescriptorsForRequiredKeys:
markMeContactInPeople:usingStore:
keysFromPerson:
addressesFromPerson:
emailAddressesFromPerson:
phoneNumbersFromPerson:
relationsFromPerson:
addFieldsFromPerson:toContactWithIdentifier:usingStore:saveRequest:
setFieldsFromPerson:toContactWithIdentifier:usingStore:saveRequest:
removeFieldsFromPerson:toContactWithIdentifier:usingStore:saveRequest:
applyUpdate:toContactWithIdentifier:usingStore:saveRequest:
T@"NSArray",R,N
@24@0:8@?16
@40@0:8@16@24^@32
@44@0:8@16i24@28@36
@16@0:8
@24@0:8@16
@24@0:8q16
@28@0:8@16B24
@32@0:8@16q24
@32@0:8@16B24B28
@32@0:8@16@24
v32@0:8@16@24
v48@0:8@16@24@32@40
