v32@?0@8Q16^B24
v24@?0@"CNContact"8^B16
%@=%d
recordID
%@=%@
databaseID
identifier
%@://%@
com.apple.contacts
contact
container
group
com.apple.contacts://externalPerson?externalIdentifier=%@
externalIdentifier
B16@?0@"CNLabeledValue"8
@"SAEmail"16@?0@"CNLabeledValue"8
@"SAPhone"16@?0@"CNLabeledValue"8
@"SALocation"16@?0@"CNLabeledValue"8
@"SARelatedName"16@?0@"CNLabeledValue"8
@"SASocialProfile"16@?0@"CNLabeledValue"8
@"CNLabeledValue"16@?0@"SALocation"8
@"CNLabeledValue"16@?0@"SAEmail"8
@"CNLabeledValue"16@?0@"SAPhone"8
@"CNLabeledValue"16@?0@"SARelatedName"8
com.apple.ContactsAssistantServices
Error updating contact, failure to fetch:%@
MapAndFilter
CASAdditions
CNAssistantID
CNAssistantConversion
T@"NSArray",R,N
URLWithString:
contactProperty
actionType
currentCalendar
addFieldsFromPerson:toContactWithIdentifier:usingStore:saveRequest:
keysFromPerson:
addresses
phoneNumbersForSyncFromContact:
addressesFromContact:
service
applyUpdate:toContactWithIdentifier:usingStore:saveRequest:
setCountryCode:
array
setServiceType:
arrayWithCapacity:
ISOCountryCode
company
_crossPlatformUnifiedMeContactWithKeysToFetch:error:
containsObject:
addFields
isKeyAvailable:
addObject:
numberWithBool:
addressesForSyncFromContact:
postalAddresses
addressesFromPerson:
areKeysAvailable:
setPhonemeData:
arrayByAddingObjectsFromArray:
setUrl:
arrayWithObjects:count:
assistantIDFromContact:
assistantIDFromContactID:
assistantIDFromContainer:
assistantIDFromExternalIdentifier:
assistantIDFromGroup:
assistantIDOfType:recordID:databaseID:identifier:
birthday
boolValue
bundleIdentifier
calendarWithIdentifier:
city
components:fromDate:
componentsJoinedByString:
componentsSeparatedByString:
contactIDFromAssistantID:
contactRelationWithName:
contactRelations
contactWithIdentifier:keysToFetch:error:
containerIDFromAssistantID:
count
countByEnumeratingWithState:objects:count:
countryCode
createSAPersonFromCNContact:
createSAPersonFromCNContact:conversionType:
createSAPersonFromCNContactWithExternalIdentifier:
createSASourceFromCNContainer:
databaseID
dateFromComponents:
descriptorForRequiredKeysForStyle:
descriptorsForRequiredKeys
descriptorsForRequiredKeysForConversionType:
dictionaryWithCapacity:
emailAddress
emailAddresses
emailAddressesForSyncFromContact:
emailAddressesFromContact:
emailAddressesFromPerson:
emails
entriesForContact:propertyKey:labeledValueIdentifier:actionType:bundleIdentifier:
enumerateContactsWithFetchRequest:error:usingBlock:
enumerateObjectsUsingBlock:
externalIdentifierFromAssistantID:
familyName
filterLabeledValues:droppingEmptyLabels:droppingDuplicates:
filterUsingBlock:
firstName
firstObject
formattedInternationalStringValue
givenName
groupIDFromAssistantID:
host
iOSLegacyIdentifier
identifier
identifierWithError:
initWithKeysToFetch:
internalGUID
isEqualToString:
label
labeledValueWithLabel:value:
lastName
length
mapUsingBlock:
markMeContactInPeople:usingStore:
middleName
mutableCopy
name
namePrefix
nameSuffix
nickName
nickname
number
objectAtIndexedSubscript:
objectForKeyedSubscript:
organizationName
personForSyncFromContact:
personFromContact:
personFromContact:useABPerson:
personFromMeContact:
phoneNumberWithStringValue:
phoneNumbers
phoneNumbersFromContact:
phoneNumbersFromPerson:
phonemeData
phones
phoneticFamilyName
phoneticGivenName
postalCode
predicateForContactsMatchingFullTextSearch:containerIdentifiers:groupIdentifiers:
predicateForContactsWithIdentifiers:
prefix
query
relatedNames
relationsForSyncFromContact:
relationsFromContact:
relationsFromPerson:
removeFields
removeFieldsFromPerson:toContactWithIdentifier:usingStore:saveRequest:
scheme
setAddresses:
setBirthday:
setCity:
setCompany:
setContactRelations:
setDomainIdentifier:
setEmailAddress:
setEmailAddresses:
setEmails:
setFamilyName:
setFavoriteFacetime:
setFavoriteFacetimeAudio:
setFavoriteVoice:
setFields
setFieldsFromPerson:toContactWithIdentifier:usingStore:saveRequest:
setFirstName:
setFirstNamePhonetic:
setFullName:
setGivenName:
setISOCountryCode:
setIdentifier:
setInternalGUID:
setLabel:
setLastName:
setLastNamePhonetic:
setMe:
setMiddleName:
setName:
setNamePrefix:
setNameSuffix:
setNickName:
setNickname:
setNumber:
setObject:forKeyedSubscript:
setOrganizationName:
setPhoneNumbers:
setPhones:
setPostalAddresses:
setPostalCode:
setPredicate:
setPrefix:
setRelatedNames:
setRemote:
setState:
setStateCode:
setStreet:
setSuffix:
setTimeZone:
setUnifyResults:
setUserName:
setYear:
sharedInstance
socialProfiles
socialProfilesFromContact:
state
stateCode
street
stringByAppendingString:
stringFromContact:style:
stringWithFormat:
suffix
timeZone
timeZoneWithName:
type
unifiedContactWithIdentifier:keysToFetch:error:
unifiedContactsMatchingPredicate:keysToFetch:error:
updateContact:
urlString
username
value
verifyContact:hasDescriptorsForRequiredKeys:
year
@24@0:8@?16
@40@0:8@16@24^@32
@44@0:8@16i24@28@36
@16@0:8
@24@0:8@16
@24@0:8q16
@28@0:8@16B24
@32@0:8@16q24
@32@0:8@16B24B28
@32@0:8@16@24
v32@0:8@16@24
v48@0:8@16@24@32@40
v32@?0@8Q16^B24
v24@?0@"CNContact"8^B16
%@=%d
recordID
%@=%@
databaseID
identifier
%@://%@
com.apple.contacts
contact
container
group
com.apple.contacts://externalPerson?externalIdentifier=%@
externalIdentifier
B16@?0@"CNLabeledValue"8
@"SAEmail"16@?0@"CNLabeledValue"8
@"SAPhone"16@?0@"CNLabeledValue"8
@"SALocation"16@?0@"CNLabeledValue"8
@"SARelatedName"16@?0@"CNLabeledValue"8
@"SASocialProfile"16@?0@"CNLabeledValue"8
@"CNLabeledValue"16@?0@"SALocation"8
@"CNLabeledValue"16@?0@"SAEmail"8
@"CNLabeledValue"16@?0@"SAPhone"8
@"CNLabeledValue"16@?0@"SARelatedName"8
com.apple.ContactsAssistantServices
Error updating contact, failure to fetch:%@
MapAndFilter
CASAdditions
CNAssistantID
CNAssistantConversion
T@"NSArray",R,N
URLWithString:
contactProperty
actionType
currentCalendar
addFieldsFromPerson:toContactWithIdentifier:usingStore:saveRequest:
keysFromPerson:
addresses
phoneNumbersForSyncFromContact:
addressesFromContact:
service
applyUpdate:toContactWithIdentifier:usingStore:saveRequest:
setCountryCode:
array
setServiceType:
arrayWithCapacity:
ISOCountryCode
company
_crossPlatformUnifiedMeContactWithKeysToFetch:error:
containsObject:
addFields
isKeyAvailable:
addObject:
numberWithBool:
addressesForSyncFromContact:
postalAddresses
addressesFromPerson:
areKeysAvailable:
setPhonemeData:
arrayByAddingObjectsFromArray:
setUrl:
arrayWithObjects:count:
assistantIDFromContact:
assistantIDFromContactID:
assistantIDFromContainer:
assistantIDFromExternalIdentifier:
assistantIDFromGroup:
assistantIDOfType:recordID:databaseID:identifier:
birthday
boolValue
bundleIdentifier
calendarWithIdentifier:
city
components:fromDate:
componentsJoinedByString:
componentsSeparatedByString:
contactIDFromAssistantID:
contactRelationWithName:
contactRelations
contactWithIdentifier:keysToFetch:error:
containerIDFromAssistantID:
count
countByEnumeratingWithState:objects:count:
countryCode
createSAPersonFromCNContact:
createSAPersonFromCNContact:conversionType:
createSAPersonFromCNContactWithExternalIdentifier:
createSASourceFromCNContainer:
databaseID
dateFromComponents:
descriptorForRequiredKeysForStyle:
descriptorsForRequiredKeys
descriptorsForRequiredKeysForConversionType:
dictionaryWithCapacity:
emailAddress
emailAddresses
emailAddressesForSyncFromContact:
emailAddressesFromContact:
emailAddressesFromPerson:
emails
entriesForContact:propertyKey:labeledValueIdentifier:actionType:bundleIdentifier:
enumerateContactsWithFetchRequest:error:usingBlock:
enumerateObjectsUsingBlock:
externalIdentifierFromAssistantID:
familyName
filterLabeledValues:droppingEmptyLabels:droppingDuplicates:
filterUsingBlock:
firstName
firstObject
formattedInternationalStringValue
givenName
groupIDFromAssistantID:
host
iOSLegacyIdentifier
identifier
identifierWithError:
initWithKeysToFetch:
internalGUID
isEqualToString:
label
labeledValueWithLabel:value:
lastName
length
mapUsingBlock:
markMeContactInPeople:usingStore:
middleName
mutableCopy
name
namePrefix
nameSuffix
nickName
nickname
number
objectAtIndexedSubscript:
objectForKeyedSubscript:
organizationName
personForSyncFromContact:
personFromContact:
personFromContact:useABPerson:
personFromMeContact:
phoneNumberWithStringValue:
phoneNumbers
phoneNumbersFromContact:
phoneNumbersFromPerson:
phonemeData
phones
phoneticFamilyName
phoneticGivenName
postalCode
predicateForContactsMatchingFullTextSearch:containerIdentifiers:groupIdentifiers:
predicateForContactsWithIdentifiers:
prefix
query
relatedNames
relationsForSyncFromContact:
relationsFromContact:
relationsFromPerson:
removeFields
removeFieldsFromPerson:toContactWithIdentifier:usingStore:saveRequest:
scheme
setAddresses:
setBirthday:
setCity:
setCompany:
setContactRelations:
setDomainIdentifier:
setEmailAddress:
setEmailAddresses:
setEmails:
setFamilyName:
setFavoriteFacetime:
setFavoriteFacetimeAudio:
setFavoriteVoice:
setFields
setFieldsFromPerson:toContactWithIdentifier:usingStore:saveRequest:
setFirstName:
setFirstNamePhonetic:
setFullName:
setGivenName:
setISOCountryCode:
setIdentifier:
setInternalGUID:
setLabel:
setLastName:
setLastNamePhonetic:
setMe:
setMiddleName:
setName:
setNamePrefix:
setNameSuffix:
setNickName:
setNickname:
setNumber:
setObject:forKeyedSubscript:
setOrganizationName:
setPhoneNumbers:
setPhones:
setPostalAddresses:
setPostalCode:
setPredicate:
setPrefix:
setRelatedNames:
setRemote:
setState:
setStateCode:
setStreet:
setSuffix:
setTimeZone:
setUnifyResults:
setUserName:
setYear:
sharedInstance
socialProfiles
socialProfilesFromContact:
state
stateCode
street
stringByAppendingString:
stringFromContact:style:
stringWithFormat:
suffix
timeZone
timeZoneWithName:
type
unifiedContactWithIdentifier:keysToFetch:error:
unifiedContactsMatchingPredicate:keysToFetch:error:
updateContact:
urlString
username
value
verifyContact:hasDescriptorsForRequiredKeys:
year
@24@0:8@?16
@40@0:8@16@24^@32
@44@0:8@16i24@28@36
@16@0:8
@24@0:8@16
@24@0:8q16
@28@0:8@16B24
@32@0:8@16q24
@32@0:8@16B24B28
@32@0:8@16@24
v32@0:8@16@24
v48@0:8@16@24@32@40
