@(#)PROGRAM:SoundAnalysis  PROJECT:SoundAnalysis-1
@N8DSPGraph9ExceptionE
St9exception
St13runtime_error
ESt11logic_error
xfuapraexoba
xfuapargxoba
MbP?NSt3__117bad_function_callE
?xfuamlpslppa
xfualmrcxoba
xfuaxtncxoba
xfuadgisxoba
xfuaftmlxoba
xfuarfmtxoba
Mb`?
xfuamusaxoba
xfuafidaxoba
xfuanimaxoba
xfualumaxoba
nguatpnixoba
xfuatpuoxoba
mcpl)
xfuayledxoba
xfuaniagxoba
xfuangbdxoba
xfuatsetxoba
xfuaypocxoba
xfuangcvxoba
xfuammusxoba
xmuaxximxoba
xfuanjhcxoba
xfuapshcxoba
xfuapchcxoba
xfuadaedxoba
xfuatsncxoba
ltnctcbdxoba
xfuaclrsxoba
xfuapnfnxoba
cfuaccrsxoba
@`@cfualberxoba
cfuacrsfxoba
ltncvrucxoba
p?UL
+Hub?
Y@q=
^@ffffff
?fffff6t@\
St12length_error
St18bad_variant_access
-__pn__p&&_p||_p!__p&&_v||_v!__v==_v=!_v
St9bad_alloc
St12out_of_range
St16invalid_argument
N8minijson6detail18number_parse_errorE
N8minijson6detail14encoding_errorE
N8minijson11parse_errorE
?/';
 9j*
!H"H
VrH-
GRty
]kK"
Z?Lq
12CAXException
St8bad_cast
timeRange
decibelLevel
supportsSecureCoding
TB,R
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
T{?={?=qiIq}{?=qiIq}},R,N
T{?={?=qiIq}{?=qiIq}},N
Tf,N,V_decibelLevel
T{?={?=qiIq}{?=qiIq}},N,V_timeRange
mood
valence
arousal
dominance
confidence
%@ Mood: %.2f Valence: %.2f Arousal: %.2f Dominance: %.2f Confidence: %.2f %@
Td,R,N
Td,N
Td,V_mood
Td,V_valence
Td,V_arousal
Td,V_dominance
Td,N,V_confidence
spatialSpectrum
T@"NSArray",R,N,V_spatialSpectrum
Failed to create DSPGraph
graph
T{shared_ptr<DSPGraph::Graph>=^{Graph}^{__shared_weak_count}},R,N
resultsBox
T^{Box=^^?^{Graph}^{IsoGroup}^{Subset}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}q{vector<DSPGraph::InputPort, std::__1::allocator<DSPGraph::InputPort> >=^{InputPort}^{InputPort}{__compressed_pair<DSPGraph::InputPort *, std::__1::allocator<DSPGraph::InputPort> >=^{InputPort}}}{vector<DSPGraph::OutputPort, std::__1::allocator<DSPGraph::OutputPort> >=^{OutputPort}^{OutputPort}{__compressed_pair<DSPGraph::OutputPort *, std::__1::allocator<DSPGraph::OutputPort> >=^{OutputPort}}}{unordered_set<DSPGraph::Box *, std::__1::hash<DSPGraph::Box *>, std::__1::equal_to<DSPGraph::Box *>, std::__1::allocator<DSPGraph::Box *> >={__hash_table<DSPGraph::Box *, std::__1::hash<DSPGraph::Box *>, std::__1::equal_to<DSPGraph::Box *>, std::__1::allocator<DSPGraph::Box *> >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>, std::__1::allocator<std::__1::__hash_node<DSPGraph::Box *, void *> > >={__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>=^{__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>}}}{__compressed_pair<unsigned long, std::__1::hash<DSPGraph::Box *> >=Q}{__compressed_pair<float, std::__1::equal_to<DSPGraph::Box *> >=f}}}{vector<DSPGraph::ParameterTap, std::__1::allocator<DSPGraph::ParameterTap> >=^{ParameterTap}^{ParameterTap}{__compressed_pair<DSPGraph::ParameterTap *, std::__1::allocator<DSPGraph::ParameterTap> >=^{ParameterTap}}}{vector<DSPGraph::PropertyTap, std::__1::allocator<DSPGraph::PropertyTap> >=^{PropertyTap}^{PropertyTap}{__compressed_pair<DSPGraph::PropertyTap *, std::__1::allocator<DSPGraph::PropertyTap> >=^{PropertyTap}}}{vector<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> >, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> > > >=^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> >}^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> >}{__compressed_pair<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> > *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> > > >=^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> >}}}{vector<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> >, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> > > >=^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> >}^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> >}{__compressed_pair<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> > *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> > > >=^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> >}}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{vector<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> >, std::__1::allocator<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> > > >=^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> >}^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> >}{__compressed_pair<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> > *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> > > >=^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> >}}}{Set<DSPGraph::Analyzer *>=^{Member}Q}{map<std::__1::pair<unsigned int, int>, long long, std::__1::less<std::__1::pair<unsigned int, int> >, std::__1::allocator<std::__1::pair<const std::__1::pair<unsigned int, int>, long long> > >={__tree<std::__1::__value_type<std::__1::pair<unsigned int, int>, long long>, std::__1::__map_value_compare<std::__1::pair<unsigned int, int>, std::__1::__value_type<std::__1::pair<unsigned int, int>, long long>, std::__1::less<std::__1::pair<unsigned int, int> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<unsigned int, int>, long long> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<unsigned int, int>, long long>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<unsigned int, int>, std::__1::__value_type<std::__1::pair<unsigned int, int>, long long>, std::__1::less<std::__1::pair<unsigned int, int> >, true> >=Q}}}{function<void (double)>={__value_func<void (double)>={type=[32C]}^{__base<void (double)>}}}{function<void (DSPGraph::Box *, int)>={__value_func<void (DSPGraph::Box *, int)>={type=[32C]}^{__base<void (DSPGraph::Box *, int)>}}}{function<void (DSPGraph::Box *, int)>={__value_func<void (DSPGraph::Box *, int)>={type=[32C]}^{__base<void (DSPGraph::Box *, int)>}}}BBBBq},R,N
azimuth
Tf,R,N
T@"NSArray",R,N
CoreAudioUtility/Source/CADSP/DSPGraph/DSPGraph_Box.h
Box::out inIndex out of range! box %s has %lu outputs but input %d was requested
Box::in inIndex out of range! box %s has %lu inputs but input %d was requested
Type
DSPGraph
Path
b238a_mic_voice_recognition_bf.dspg
PropertyStrip
b238a_mic_voice_recognition_bf.propstrip
AUStrip
b238a_mic_voice_recognition_bf.austrip
Failed to create graph
featurePrintType
overlapFactor
SNCreateFeaturePrintRequest.mm
Invalid parameter not satisfying: %@
overlapFactor >= 0.f
overlapFactor < 1.f
Tq,N,V_featurePrintType
Tf,N,V_overlapFactor
LogMelSpectrogram
context
logMelSpectrogram
deadEnd
-[SNFeaturePrintExtractor updateGraph]
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-64/Framework/Internal/Requests/SoundDetectors/SNCreateFeaturePrintRequest.mm
_overlapFactor >= 0.0
_overlapFactor < 1.0
Feature extractor should have only one output feature
Feature extractor should only use MultiArray features
-[SNFeaturePrintExtractor resultsFromBox:renderedWithFrameCount:]
-[SNFeaturePrintExtractor resultsBox]
embeddingExtractor
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
com.apple.SoundAnalysis.EARAudioProcessor
initialize
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-64/Framework/Internal/Core/DSPGraph/DSPGraph_EARAudioProcessorBox.mm
in(0).format().mSampleRate == 16000
in(0).format().mChannelsPerFrame == 1
in(0).format().mBytesPerFrame == 2
config
inputs must be 16kHz
EARAudioProcessorBox
DIST
b238a_distance_estimation.dspg
b238a_distance_estimation.propstrip
b238a_distance_estimation.austrip
serverInfo
T@"SNFileServerInfo",&,N,V_serverInfo
state
TQ,N,V_state
FormatMatchingNode
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-64/Framework/Internal/Core/ProcessingTree/SoundAnalysis_FormatMatchingNode.cpp
upstreamFormat.mBlockSize == 1
downstreamFormat.mBlockSize == 1
setUpstreamFormat
formatMatchingGraph
input
channelMapper
output
v8@?0
illegal call to unavailable init selector: %s
-[SNSystemAudioAnalyzerXPCPublisher init]
v16@?0@"NSError"8
creationFlags
TI,V_creationFlags
configureAudioQueue
T@?,C,V_configureAudioQueue
v16@?0^{OpaqueAudioQueue=}8
audioQueueConfiguration
T@"SNAudioQueueConfiguration",R
fileName
T@"NSString",&,N,V_fileName
error
T@"NSError",&,N,V_error
Applause
Babble
Cheering
Laughter
Music
Speech
Distressed Baby
Smoke Alarm
Fire Alarm
Doorbell
Buzzer
Beep
Ding Bell
Dog Bark
Cat Meow
Door Knock
Shouting
com.apple.SoundAnalysis.System
Unknown request of type %@
requests
T@"NSMutableArray",&,N,V_requests
taskCompletionMap
T@"NSMutableDictionary",&,N,V_taskCompletionMap
queue
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
processBuffer
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-64/Framework/Internal/Core/ProcessingTree/SoundAnalysis_ProcessingTree.cpp
inputBuffer.mNumFrames == expectedNumberOfFrames
treeGraph
addProcessingContext
!findAnalyzerNodeForContext(processingContext)
setProcessingContexts
format().mBlockSize > 0
removeNodeRecursively
node
removeProcessingContext
requestProcessingNode
MultiRateGraphBox
SingleRateGraphBox
getCurrentInputSampleFromGraphBox
false
convertSampleTimeToRootSampleTime
Couldn't find GraphBox containing graph
Processing tree graph is null
.dot
buildTreeGraphRecursively
downstreamNode->upstreamNode()
formatsAreEquivalent(downstreamNode->upstreamFB(), downstreamNode->upstreamNode()->downstreamFB())
GraphBoxCommon
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-64/Framework/Internal/Core/DSPGraph/DSPGraph_GraphBox.h
inGraph
%s %s graph must have at least one input bus.
%s %s graph must have the same sample rate for all input busses to be used in a GraphBox
%s %s graph must have the same sample rate for all output busses to be used in a GraphBox
innerGraph %p
setParameter
DSPGraph parameters must have global scope and master element.
getParameter
getParameterInfo
DSPGraph parameters must have global scope.
process
isIntegral(numPacketsToWrite)
prepareGraphIOData
mGraphIODataIn.at(0).mNumFrames == inNumFrames
isIntegral(numPacketsOut)
outNumBytes <= mOutBufferList->GetCapacityBytes()
findGraphBoxContainingBox
Tick delta too large
sampleRate
blockSize
magnitudeThreshold
Td,N,V_sampleRate
TI,N,V_blockSize
Td,N,V_magnitudeThreshold
-[SNDetectSignalThresholdRequestImpl resultsFromBox:renderedWithFrameCount:]
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-64/Framework/Internal/Requests/SignalDetector/SNDetectSignalThresholdRequest.mm
allBussesSignalRanges.size() == 1
allBussesSignalRanges.at(0).size() == 1
detectorEndPosition >= detectorStartPosition
signalDetector
com.apple.SoundAnalysis
%@ azmimuth: %f
Tf,N,V_azimuth
T@"NSArray",&,N,V_spatialSpectrum
_SNVGGishFeatureEmbeddingCustomModel
Couldn't load VGGish model
SNCorrelateAudioRequest.mm
Td,V_overlapFactor
CrossCorrelator
Td,R,V_overlapFactor
Failed to set properties and parameters on graph
(            
graphName "AudioCorrelator"                        
[def procSampleRate %d]            
[def blockSize %d]            
[def numChannels %d]            
[def numBuses %d]                        
in input                        
box CrossCorrelator (aufx xcor appl) [numBuses] [numBuses]            
box dead dead [numBuses] [numBuses]                        
wire input  CrossCorrelator ([procSampleRate] [numChannels] [blockSize])            
wire CrossCorrelator dead ([procSampleRate] [numChannels] [blockSize]))
Text
CoreAudioUtility/Source/PublicUtility/CABufferList.h
CopyDataFrom
com.apple.soundanalysisd
-[SNAnalysisServer init]
com.apple.SoundAnalysis.client
-[SNAnalysisClient init]
@"NSXPCConnection"24@?0@?<v@?>8@"NSObject<OS_dispatch_queue>"16
logMelContext
melTransform
com.apple.SNFileSharing
FileSharingVersion
FileTransferRequest
FileTransferComplete
FileTransferDeleteFile
targetPublicKey
targetID
basePath
filePaths
currentFrameValue
meanValue
standardDeviation
%@ mean distance (meters): %f
Td,N,V_currentFrameValue
Td,N,V_meanValue
Td,N,V_standardDeviation
enable_second_pass_recording_in_daemon
daemon_recording_path
recording_directory_maximum_size_bytes
recording_time_to_live_seconds
delete_recordings_without_detection
enable_file_server
file_server_root_directory
built_in_microphone_analysis_channel_number
/tmp/AudioCaptures/SoundAnalysis
enableSecondPassRecordingInDaemon
daemonRecordingPath
T@"NSString",R
recordingDirectoryMaximumSizeBytes
Tq,R
recordingTimeToLiveSeconds
Td,R
deleteRecordingsWithoutDetection
enableFileServer
fileServerRootDirectory
builtInMicrophoneAnalysisChannelNumber
T@"NSNumber",R
userDefaults
T@"NSUserDefaults",&,N,V_userDefaults
v32@?0@"NSDictionary"8@"NSDictionary"16@"NSError"24
files
T@"NSArray",&,N,V_files
serverBasePath
T@"NSString",&,N,V_serverBasePath
modelDescription
T@"MLModelDescription",R
T@"MLModelDescription",R,V_modelDescription
Confidence
Detected
%@ Detector
SNDetectorHead.mm
Couldn't find output feature
Detectors must use multi-array feature type
Only double and float32 multiArray feature types are currently supported
Detectors should only have one output dimension
Detector output should only have one value
-[SNResourceCoordinatorXPCSubscriber init]
identifier
detected
%@: %@ detected with confidence %f at %@
TB,N,V_detected
T@"NSString",R,N,V_identifier
twoPassConfiguration
T@"SNTwoPassConfiguration",R
analysisPassStrategy
Tq,R,N
T@"SNTwoPassConfiguration",R,V_twoPassConfiguration
%@ detected: %@
IncludePaths
Substitutions
path
T@"NSString",&,N,V_path
text
T@"NSString",&,N,V_text
includePaths
T@"NSArray",&,N,V_includePaths
substitutions
T@"NSDictionary",&,N,V_substitutions
Value
T@"NSString",R,N,V_path
value
T@"NSDictionary",R,N,V_value
resourcePath
T@"NSString",R,N,V_resourcePath
dspItems
T@"NSArray",&,N,V_dspItems
-[SNResultsXPCSubscriber init]
failed to initialize instance of class %@
com.apple.SoundAnalysis.remoteanalyzer
fileItems
T@"NSArray",&,N,V_fileItems
Server connection lost
-[SNSystemAudioAnalyzerRemote init]
@"<SNSystemAudioAnalyzerProtocol>"24@?0@?<v@?>8@"NSObject<OS_dispatch_queue>"16
analyzerProcessingGraph should be non-null
ProcessingContext
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-64/Framework/Internal/Core/ProcessingTree/SoundAnalysis_ProcessingContext.cpp
requestProcessingGraph->configured()
sharedProcessingGraph->configured()
T@"NSString",&,N,V_identifier
idsDeviceID
T@"NSString",&,N,V_idsDeviceID
model
T@"NSString",&,N,V_model
name
T@"NSString",&,N,V_name
config-model-epoch-mvn-60.json
floatToFixedConverter
speechEmotionAnalyzer
%f, %d
channelCount
TI,N,V_channelCount
Invalid model, userSuppliedInputFeatureNames.count = %lu
Invalid model, input feature must be a multi-array
Invalid model, input feature must be one dimensional
Invalid model, classification models must have 'predictedProbabilitesName' and 'predictedFeaturesKey' properties
-init is not a valid initializer for the class SNClassifySoundRequest
+new is not a valid class method for the class SNClassifySoundRequest
q24@?0@8@16
SNClassifySoundRequest.mm
cannot copy MLModel
cannot encode MLModel
Classifier
createGraphWithModel
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-64/Framework/Internal/Requests/ClassifySound/SNClassifySoundRequest.mm
overlapFactor >= 0.0
overlapFactor < 1.0
Couldn't open audio file %@
com.apple.SoundAnalysis.FileAnalyzer
-[SNAudioFileAnalyzer analyze]
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-64/Framework/Internal/Core/SNAudioFileAnalyzer.mm
self->_audioFile.length > self->_audioFile.framePosition
Couldn't read audio into buffer
requestType
Tq,R,V_requestType
decisionDelay
AUNeuralNetVAD.dspg
AUNeuralNetVAD_SiriEndpointer.propstrip
AUNeuralNetVAD_Siri.austrip
NNVAD
hardVAD
TB,R,N
-[SNAnalyzerHost adaptToSystemConfiguration:error:]
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-64/Framework/Internal/Core/SNAnalyzerHost.mm
+[SNAnalyzerHost convertTimeRange:fromBox:usingConverter:]
clientSampleTimeEnd >= clientSampleTimeStart
timeConversionDictionary
T@"NSDictionary",R
sharedProcessorConfiguration
T@,R,N
requestState
Tq,N,V_requestState
soundIdentifier
SNDetectSoundRequest.mm
Multi-pass requests should have the twoPassConfiguration property queried, since creating a single analyzer isn't sufficient.
d16@?0@"SNDetectionResult"8
%@ identifier: %@
allValidSoundIdentifiers
T@"NSArray",R,D,N
T@"NSString",R,N,V_soundIdentifier
Tq,R,N,V_analysisPassStrategy
Can't create a detector for a multi-pass strategy
T{shared_ptr<DSPGraph::Graph>=},R,N
T^{Box=},R,N
Do not call %@
-[SNDSPGraphBox init]
SNDSPGraphBox.mm
T^{Box=^^?^{Graph}^{IsoGroup}^{Subset}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}q{vector<DSPGraph::InputPort, std::__1::allocator<DSPGraph::InputPort> >=^{InputPort}^{InputPort}{__compressed_pair<DSPGraph::InputPort *, std::__1::allocator<DSPGraph::InputPort> >=^{InputPort}}}{vector<DSPGraph::OutputPort, std::__1::allocator<DSPGraph::OutputPort> >=^{OutputPort}^{OutputPort}{__compressed_pair<DSPGraph::OutputPort *, std::__1::allocator<DSPGraph::OutputPort> >=^{OutputPort}}}{unordered_set<DSPGraph::Box *, std::__1::hash<DSPGraph::Box *>, std::__1::equal_to<DSPGraph::Box *>, std::__1::allocator<DSPGraph::Box *> >={__hash_table<DSPGraph::Box *, std::__1::hash<DSPGraph::Box *>, std::__1::equal_to<DSPGraph::Box *>, std::__1::allocator<DSPGraph::Box *> >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>, std::__1::allocator<std::__1::__hash_node<DSPGraph::Box *, void *> > >={__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>=^{__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>}}}{__compressed_pair<unsigned long, std::__1::hash<DSPGraph::Box *> >=Q}{__compressed_pair<float, std::__1::equal_to<DSPGraph::Box *> >=f}}}{vector<DSPGraph::ParameterTap, std::__1::allocator<DSPGraph::ParameterTap> >=^{ParameterTap}^{ParameterTap}{__compressed_pair<DSPGraph::ParameterTap *, std::__1::allocator<DSPGraph::ParameterTap> >=^{ParameterTap}}}{vector<DSPGraph::PropertyTap, std::__1::allocator<DSPGraph::PropertyTap> >=^{PropertyTap}^{PropertyTap}{__compressed_pair<DSPGraph::PropertyTap *, std::__1::allocator<DSPGraph::PropertyTap> >=^{PropertyTap}}}{vector<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> >, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> > > >=^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> >}^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> >}{__compressed_pair<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> > *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> > > >=^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> >}}}{vector<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> >, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> > > >=^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> >}^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> >}{__compressed_pair<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> > *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> > > >=^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> >}}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{vector<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> >, std::__1::allocator<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> > > >=^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> >}^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> >}{__compressed_pair<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> > *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> > > >=^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> >}}}{Set<DSPGraph::Analyzer *>=^{Member}Q}{map<std::__1::pair<unsigned int, int>, long long, std::__1::less<std::__1::pair<unsigned int, int> >, std::__1::allocator<std::__1::pair<const std::__1::pair<unsigned int, int>, long long> > >={__tree<std::__1::__value_type<std::__1::pair<unsigned int, int>, long long>, std::__1::__map_value_compare<std::__1::pair<unsigned int, int>, std::__1::__value_type<std::__1::pair<unsigned int, int>, long long>, std::__1::less<std::__1::pair<unsigned int, int> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<unsigned int, int>, long long> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<unsigned int, int>, long long>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<unsigned int, int>, std::__1::__value_type<std::__1::pair<unsigned int, int>, long long>, std::__1::less<std::__1::pair<unsigned int, int> >, true> >=Q}}}{function<void (double)>={__value_func<void (double)>={type=[32C]}^{__base<void (double)>}}}{function<void (DSPGraph::Box *, int)>={__value_func<void (DSPGraph::Box *, int)>={type=[32C]}^{__base<void (DSPGraph::Box *, int)>}}}{function<void (DSPGraph::Box *, int)>={__value_func<void (DSPGraph::Box *, int)>={type=[32C]}^{__base<void (DSPGraph::Box *, int)>}}}BBBBq},R,N,V_box
numInputs
numOutputs
T@"NSString",R,N
com.apple.soundanalysis
companion service connection interrupted
v16@?0@"RPCompanionLinkDevice"8
version
v20@?0@"RPCompanionLinkDevice"8I16
com.apple.SoundAnalysis.CanHostDaemon
SNLogMelBasedFeatureExtractorConfiguration.mm
approximateOverlapFactor >= 0.0 && approximateOverlapFactor < 1.0
T@"<SNMLModel>",R,V_model
Td,R,V_sampleRate
windowLengthFrames
TI,R,V_windowLengthFrames
stepSizeFrames
TI,R,V_stepSizeFrames
logMelStepSize
TI,R,V_logMelStepSize
outputFeatureSize
Ti,R,V_outputFeatureSize
@"MLModel"8@?0
featureVector
cannot copy MLMultiArray
cannot hash MLMultiArray
cannot encode MLMultiArray
Tq,R,N,V_featurePrintType
T@"MLMultiArray",R,N,V_featureVector
operator()
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-64/Framework/Internal/Requests/SoundDetectors/SNFeaturePrint.mm
request
T@"<SNAnalyzerCreating>",&,N,V_request
resultsHandler
T@?,C,N,V_resultsHandler
completionHandler
T@?,C,N,V_completionHandler
analyzerHost
T@"SNAnalyzerHost",&,N,V_analyzerHost
sharedProcessor
T@"<SNProcessing>",&,N,V_sharedProcessor
configured
TB,N,V_configured
configurationError
T@"NSError",&,N,V_configurationError
SNForwardPassAudioStreamAnalyzer.mm
Audio format must be PCM
v16@?0@"<SNResult>"8
Error creating analyzer
Error configuring analyzer
Error updating tree format
Audio format changed mid-stream from %@ to %@. Please configure a new analyzer if the stream format changes.
Error configuring analysis tree
Unexpected error during analysis
yyyy-MM-dd-HHmmss
%@_%@
yyyy-MM-dd HH:mm:ss
clientSampleRate
levelMeasurer
inputSensitivity
Tf,R,N,V_inputSensitivity
dead
v24@?0@"CUFileResponse"8@"NSError"16
queryPath
T@"NSString",&,N,V_queryPath
+[SNUtils copyAudioBufferList:to:frameCount:bytesPerFrame:]
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-64/Framework/Internal/Core/SNUtils.mm
sourceBufferList->mNumberBuffers > 0
sourceBufferList->mNumberBuffers == destinationBufferList->mNumberBuffers
sourceBufferList->mBuffers[bufferIdx].mNumberChannels > 0
frameCount*bytesPerFrame <= sourceBufferList->mBuffers[bufferIdx].mDataByteSize
frameCount*bytesPerFrame <= destinationBufferList->mBuffers[bufferIdx].mDataByteSize
MultiArrayInput
MultiArrayOutput
MLModelCreatorDefinedKey
feedback_connections
soundanalysisd
InternalBuild
SELF endswith[c] '.wav'
q24@?0@"NSString"8@"NSString"16
unable to read entitlement
failed to acquire task
results
errors
completeCount
Tq,R,N,V_completeCount
sourceFeatureName
T@"NSString",R,V_sourceFeatureName
destinationFeatureName
T@"NSString",R,V_destinationFeatureName
copyRecentFramesOfAudioRingBufferToAVAudioBuffer
sourceBufferStartTime <= sourceBufferEndTime
copyRecentFrames
unownedViewOfRecentFrames
numberOfRecentFrames <= sourceBuffer.frameLength
VerifyNotTrashingOwnedBuffer
-[SNResourceCoordinatorXPCPublisher init]
v16@?0@"<SNSystemAudioAnalyzerXPCProtocol>"8
-[SNDSPGraph init]
SNDSPGraph.mm
@"SNDSPGraphBox"8@?0
@"NSMutableSet"8@?0
@"NSString"8@?0
T{shared_ptr<DSPGraph::Graph>=^{Graph}^{__shared_weak_count}},R,N,V_graph
T@"NSString",C,N
numberOfInputs
numberOfOutputs
sliceDurationInSamples
initialized
boxes
T@"NSSet",R,N
addDownstreamNodes
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-64/Framework/Internal/Core/ProcessingTree/SoundAnalysis_ProcessingNode.cpp
!elementFoundInList(node, mDownstreamNodes)
CAStreamBasicDescription::IsEquivalent(node->upstreamFB().mFormat, downstreamFB().mFormat)
removeDownstreamNodes
elementFoundInList(node, mDownstreamNodes)
processingBox
mProcessingBox
Model must have MLMultiArray features
Error allocating MLMultiArray
featureNames
T@"MLMultiArray",&,N,V_input
T@"<SNMLModel>",&,N,V_model
feedbackConnections
T@"NSArray",&,N,V_feedbackConnections
inputProvider
T@"DSPGMLInputProvider",&,N,V_inputProvider
outputProvider
T@"<MLFeatureProvider>",&,N,V_outputProvider
Unable to compile model at @% with error %@
MLModel successfully loaded!
No CoreML model set: %@
MLModel must have at least one feature in and one feature out
MLModel must have only one user defined input. Has %@
Error creating input provider
Entering single sample mode, setting delay line to %d samples
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-64/Framework/Internal/Core/DSPGraph/DSPGraph_CoreMLBox.mm
only supports 1 bus in 1 bus out
input must be single channel
output must be single channel
input and output sample rates must match
No CoreML model given. Bypassing.
No MLModel, bypassing this process call
inABL
outABL
inABL->mBuffers[0].mDataByteSize == mInputNumBytes
input data must be Float32
Error: Model input size (
 bytes) doesn't match audio input size (
 bytes)
prediction failed
MLModel output must have only one feature (MLMultiArray)
MLModel output must be an MLMultiArray
Error: Model output size (
unsupported CoreML data type
Audio is already running. Model will be loaded next time audio is restarted
Set CoreMLModel URL at path %@
Error creating URL from path: %@
CoreMLBox
filename
T@"NSString",&,N,V_filename
fileSize
Tq,N,V_fileSize
itemURL
T@"NSURL",&,N,V_itemURL
offset
%@ offset: %f
Td,N,V_offset
v32@?0@"NSDictionary"8@"NSDictionary"16@?<v@?@"NSDictionary"@"NSDictionary"@"NSError">24
v24@?0@"NSArray"8@"NSError"16
-[SNCopyFilesRequest launchTaskWithQueue:completionHandler:resultsHandler:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-64/Framework/Internal/FileServer/Copy/SNCopyFilesRequest.m
error == nil
v24@?0@"RPFileTransferItem"8@?<v@?@"NSError">16
serverFilePaths
T@"NSArray",&,N,V_serverFilePaths
localDestinationPath
T@"NSString",&,N,V_localDestinationPath
firstPassRequest
T@"<SNRequest>",R,V_firstPassRequest
secondPassRequest
T@"<SNRequest>",R,V_secondPassRequest
historicalDataAmount
Td,R,V_historicalDataAmount
com.apple.SoundAnalysis.AnalysisInProgress
Unexpected MultiArray size %ld
Unexpected error processing model
Must only have one input audio feature
SNVGGishFrontEndProcessingCustomModel.mm
Model needs an input constraint
Must allow %@ shaped vector as input
Must only have one output multiarray feature
Model needs an output constraint
Must allow %@ shaped vector as output
preProcessCallback
T@?,C,N,V_preProcessCallback
_SNVGGishFrontEndProcessingCustomModel
adjustSingleChannelIODataAhead
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-64/Framework/Internal/CustomModels/SNVGGishFrontEndProcessingCustomModel.mm
data.mBufferList->mBuffers[0].mDataByteSize >= framesToAdjust * sizeof(float)
v24@?0^{Graph=^^?{unordered_set<std::__1::unique_ptr<DSPGraph::Box, std::__1::default_delete<DSPGraph::Box> >, std::__1::hash<std::__1::unique_ptr<DSPGraph::Box, std::__1::default_delete<DSPGraph::Box> > >, std::__1::equal_to<std::__1::unique_ptr<DSPGraph::Box, std::__1::default_delete<DSPGraph::Box> > >, std::__1::allocator<std::__1::unique_ptr<DSPGraph::Box, std::__1::default_delete<DSPGraph::Box> > > >={__hash_table<std::__1::unique_ptr<DSPGraph::Box, std::__1::default_delete<DSPGraph::Box> >, std::__1::hash<std::__1::unique_ptr<DSPGraph::Box, std::__1::default_delete<DSPGraph::Box> > >, std::__1::equal_to<std::__1::unique_ptr<DSPGraph::Box, std::__1::default_delete<DSPGraph::Box> > >, std::__1::allocator<std::__1::unique_ptr<DSPGraph::Box, std::__1::default_delete<DSPGraph::Box> > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::unique_ptr<DSPGraph::Box, std::__1::default_delete<DSPGraph::Box> >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::unique_ptr<DSPGraph::Box, std::__1::default_delete<DSPGraph::Box> >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::unique_ptr<DSPGraph::Box, std::__1::default_delete<DSPGraph::Box> >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::unique_ptr<DSPGraph::Box, std::__1::default_delete<DSPGraph::Box> >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::unique_ptr<DSPGraph::Box, std::__1::default_delete<DSPGraph::Box> >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::unique_ptr<DSPGraph::Box, std::__1::default_delete<DSPGraph::Box> >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::unique_ptr<DSPGraph::Box, std::__1::default_delete<DSPGraph::Box> >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::unique_ptr<DSPGraph::Box, std::__1::default_delete<DSPGraph::Box> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::unique_ptr<DSPGraph::Box, std::__1::default_delete<DSPGraph::Box> >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::unique_ptr<DSPGraph::Box, std::__1::default_delete<DSPGraph::Box> >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::unique_ptr<DSPGraph::Box, std::__1::default_delete<DSPGraph::Box> >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::hash<std::__1::unique_ptr<DSPGraph::Box, std::__1::default_delete<DSPGraph::Box> > > >=Q}{__compressed_pair<float, std::__1::equal_to<std::__1::unique_ptr<DSPGraph::Box, std::__1::default_delete<DSPGraph::Box> > > >=f}}}{unordered_set<DSPGraph::Wire *, std::__1::hash<DSPGraph::Wire *>, std::__1::equal_to<DSPGraph::Wire *>, std::__1::allocator<DSPGraph::Wire *> >={__hash_table<DSPGraph::Wire *, std::__1::hash<DSPGraph::Wire *>, std::__1::equal_to<DSPGraph::Wire *>, std::__1::allocator<DSPGraph::Wire *> >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Wire *, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Wire *, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Wire *, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Wire *, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<DSPGraph::Wire *, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Wire *, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Wire *, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Wire *, void *> *>, std::__1::allocator<std::__1::__hash_node<DSPGraph::Wire *, void *> > >={__hash_node_base<std::__1::__hash_node<DSPGraph::Wire *, void *> *>=^{__hash_node_base<std::__1::__hash_node<DSPGraph::Wire *, void *> *>}}}{__compressed_pair<unsigned long, std::__1::hash<DSPGraph::Wire *> >=Q}{__compressed_pair<float, std::__1::equal_to<DSPGraph::Wire *> >=f}}}{unordered_set<DSPGraph::Analyzer *, std::__1::hash<DSPGraph::Analyzer *>, std::__1::equal_to<DSPGraph::Analyzer *>, std::__1::allocator<DSPGraph::Analyzer *> >={__hash_table<DSPGraph::Analyzer *, std::__1::hash<DSPGraph::Analyzer *>, std::__1::equal_to<DSPGraph::Analyzer *>, std::__1::allocator<DSPGraph::Analyzer *> >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Analyzer *, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Analyzer *, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Analyzer *, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Analyzer *, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<DSPGraph::Analyzer *, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Analyzer *, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Analyzer *, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Analyzer *, void *> *>, std::__1::allocator<std::__1::__hash_node<DSPGraph::Analyzer *, void *> > >={__hash_node_base<std::__1::__hash_node<DSPGraph::Analyzer *, void *> *>=^{__hash_node_base<std::__1::__hash_node<DSPGraph::Analyzer *, void *> *>}}}{__compressed_pair<unsigned long, std::__1::hash<DSPGraph::Analyzer *> >=Q}{__compressed_pair<float, std::__1::equal_to<DSPGraph::Analyzer *> >=f}}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{vector<std::__1::unique_ptr<DSPGraph::InternalBuffer, std::__1::default_delete<DSPGraph::InternalBuffer> >, std::__1::allocator<std::__1::unique_ptr<DSPGraph::InternalBuffer, std::__1::default_delete<DSPGraph::InternalBuffer> > > >=^{unique_ptr<DSPGraph::InternalBuffer, std::__1::default_delete<DSPGraph::InternalBuffer> >}^{unique_ptr<DSPGraph::InternalBuffer, std::__1::default_delete<DSPGraph::InternalBuffer> >}{__compressed_pair<std::__1::unique_ptr<DSPGraph::InternalBuffer, std::__1::default_delete<DSPGraph::InternalBuffer> > *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::InternalBuffer, std::__1::default_delete<DSPGraph::InternalBuffer> > > >=^{unique_ptr<DSPGraph::InternalBuffer, std::__1::default_delete<DSPGraph::InternalBuffer> >}}}{unordered_set<std::__1::unique_ptr<DSPGraph::IsoGroup, std::__1::default_delete<DSPGraph::IsoGroup> >, std::__1::hash<std::__1::unique_ptr<DSPGraph::IsoGroup, std::__1::default_delete<DSPGraph::IsoGroup> > >, std::__1::equal_to<std::__1::unique_ptr<DSPGraph::IsoGroup, std::__1::default_delete<DSPGraph::IsoGroup> > >, std::__1::allocator<std::__1::unique_ptr<DSPGraph::IsoGroup, std::__1::default_delete<DSPGraph::IsoGroup> > > >={__hash_table<std::__1::unique_ptr<DSPGraph::IsoGroup, std::__1::default_delete<DSPGraph::IsoGroup> >, std::__1::hash<std::__1::unique_ptr<DSPGraph::IsoGroup, std::__1::default_delete<DSPGraph::IsoGroup> > >, std::__1::equal_to<std::__1::unique_ptr<DSPGraph::IsoGroup, std::__1::default_delete<DSPGraph::IsoGroup> > >, std::__1::allocator<std::__1::unique_ptr<DSPGraph::IsoGroup, std::__1::default_delete<DSPGraph::IsoGroup> > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::unique_ptr<DSPGraph::IsoGroup, std::__1::default_delete<DSPGraph::IsoGroup> >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::unique_ptr<DSPGraph::IsoGroup, std::__1::default_delete<DSPGraph::IsoGroup> >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::unique_ptr<DSPGraph::IsoGroup, std::__1::default_delete<DSPGraph::IsoGroup> >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::unique_ptr<DSPGraph::IsoGroup, std::__1::default_delete<DSPGraph::IsoGroup> >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::unique_ptr<DSPGraph::IsoGroup, std::__1::default_delete<DSPGraph::IsoGroup> >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::unique_ptr<DSPGraph::IsoGroup, std::__1::default_delete<DSPGraph::IsoGroup> >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::unique_ptr<DSPGraph::IsoGroup, std::__1::default_delete<DSPGraph::IsoGroup> >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::unique_ptr<DSPGraph::IsoGroup, std::__1::default_delete<DSPGraph::IsoGroup> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::unique_ptr<DSPGraph::IsoGroup, std::__1::default_delete<DSPGraph::IsoGroup> >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::unique_ptr<DSPGraph::IsoGroup, std::__1::default_delete<DSPGraph::IsoGroup> >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::unique_ptr<DSPGraph::IsoGroup, std::__1::default_delete<DSPGraph::IsoGroup> >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::hash<std::__1::unique_ptr<DSPGraph::IsoGroup, std::__1::default_delete<DSPGraph::IsoGroup> > > >=Q}{__compressed_pair<float, std::__1::equal_to<std::__1::unique_ptr<DSPGraph::IsoGroup, std::__1::default_delete<DSPGraph::IsoGroup> > > >=f}}}{vector<DSPGraph::IsoGroup *, std::__1::allocator<DSPGraph::IsoGroup *> >=^^{IsoGroup}^^{IsoGroup}{__compressed_pair<DSPGraph::IsoGroup **, std::__1::allocator<DSPGraph::IsoGroup *> >=^^{IsoGroup}}}{vector<DSPGraph::GraphInput *, std::__1::allocator<DSPGraph::GraphInput *> >=^^{GraphInput}^^{GraphInput}{__compressed_pair<DSPGraph::GraphInput **, std::__1::allocator<DSPGraph::GraphInput *> >=^^{GraphInput}}}{vector<DSPGraph::GraphOutput *, std::__1::allocator<DSPGraph::GraphOutput *> >=^^{GraphOutput}^^{GraphOutput}{__compressed_pair<DSPGraph::GraphOutput **, std::__1::allocator<DSPGraph::GraphOutput *> >=^^{GraphOutput}}}{unordered_set<DSPGraph::Box *, std::__1::hash<DSPGraph::Box *>, std::__1::equal_to<DSPGraph::Box *>, std::__1::allocator<DSPGraph::Box *> >={__hash_table<DSPGraph::Box *, std::__1::hash<DSPGraph::Box *>, std::__1::equal_to<DSPGraph::Box *>, std::__1::allocator<DSPGraph::Box *> >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>, std::__1::allocator<std::__1::__hash_node<DSPGraph::Box *, void *> > >={__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>=^{__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>}}}{__compressed_pair<unsigned long, std::__1::hash<DSPGraph::Box *> >=Q}{__compressed_pair<float, std::__1::equal_to<DSPGraph::Box *> >=f}}}{unordered_set<DSPGraph::FCBox *, std::__1::hash<DSPGraph::FCBox *>, std::__1::equal_to<DSPGraph::FCBox *>, std::__1::allocator<DSPGraph::FCBox *> >={__hash_table<DSPGraph::FCBox *, std::__1::hash<DSPGraph::FCBox *>, std::__1::equal_to<DSPGraph::FCBox *>, std::__1::allocator<DSPGraph::FCBox *> >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::FCBox *, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::FCBox *, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::FCBox *, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::FCBox *, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<DSPGraph::FCBox *, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::FCBox *, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::FCBox *, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::FCBox *, void *> *>, std::__1::allocator<std::__1::__hash_node<DSPGraph::FCBox *, void *> > >={__hash_node_base<std::__1::__hash_node<DSPGraph::FCBox *, void *> *>=^{__hash_node_base<std::__1::__hash_node<DSPGraph::FCBox *, void *> *>}}}{__compressed_pair<unsigned long, std::__1::hash<DSPGraph::FCBox *> >=Q}{__compressed_pair<float, std::__1::equal_to<DSPGraph::FCBox *> >=f}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}Q{vector<DSPGraph::Graph::ParameterConnection, std::__1::allocator<DSPGraph::Graph::ParameterConnection> >=^{ParameterConnection}^{ParameterConnection}{__compressed_pair<DSPGraph::Graph::ParameterConnection *, std::__1::allocator<DSPGraph::Graph::ParameterConnection> >=^{ParameterConnection}}}{vector<DSPGraph::Graph::PropertyConnection, std::__1::allocator<DSPGraph::Graph::PropertyConnection> >=^{PropertyConnection}^{PropertyConnection}{__compressed_pair<DSPGraph::Graph::PropertyConnection *, std::__1::allocator<DSPGraph::Graph::PropertyConnection> >=^{PropertyConnection}}}{unordered_map<unsigned int, DSPGraph::Graph::GraphParameter, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, DSPGraph::Graph::GraphParameter> > >={__hash_table<std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphParameter>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphParameter>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphParameter>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphParameter> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphParameter>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphParameter>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphParameter>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphParameter>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphParameter>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphParameter>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphParameter>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphParameter>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphParameter>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphParameter>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphParameter>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphParameter>, std::__1::hash<unsigned int>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphParameter>, std::__1::equal_to<unsigned int>, true> >=f}}}{unordered_map<unsigned int, DSPGraph::Graph::GraphProperty, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, DSPGraph::Graph::GraphProperty> > >={__hash_table<std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphProperty>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphProperty>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphProperty>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphProperty> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphProperty>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphProperty>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphProperty>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphProperty>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphProperty>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphProperty>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphProperty>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphProperty>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphProperty>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphProperty>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphProperty>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphProperty>, std::__1::hash<unsigned int>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphProperty>, std::__1::equal_to<unsigned int>, true> >=f}}}{unordered_map<std::__1::basic_string<char>, DSPGraph::FormatAndBlockSize, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, DSPGraph::FormatAndBlockSize> > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::FormatAndBlockSize>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::FormatAndBlockSize>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::FormatAndBlockSize>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::FormatAndBlockSize> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::FormatAndBlockSize>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::FormatAndBlockSize>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::FormatAndBlockSize>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::FormatAndBlockSize>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::FormatAndBlockSize>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::FormatAndBlockSize>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::FormatAndBlockSize>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::FormatAndBlockSize>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::FormatAndBlockSize>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::FormatAndBlockSize>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::FormatAndBlockSize>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::FormatAndBlockSize>, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::FormatAndBlockSize>, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}{unordered_map<std::__1::basic_string<char>, DSPGraph::Jack, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, DSPGraph::Jack> > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::Jack>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::Jack>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::Jack>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::Jack> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::Jack>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::Jack>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::Jack>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::Jack>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::Jack>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::Jack>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::Jack>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::Jack>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::Jack>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::Jack>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::Jack>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::Jack>, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::Jack>, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}iiqqqqqqqdBBBBBBBBq^{VPTimeFreqConverterSetup}{unordered_map<std::__1::basic_string<char>, DSPGraph::Box *, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, DSPGraph::Box *> > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::Box *>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::Box *>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::Box *>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::Box *> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::Box *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::Box *>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::Box *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::Box *>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::Box *>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::Box *>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::Box *>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::Box *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::Box *>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::Box *>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::Box *>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::Box *>, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::Box *>, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}{unordered_map<long long, DSPGraph::Box *, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, DSPGraph::Box *> > >={__hash_table<std::__1::__hash_value_type<long long, DSPGraph::Box *>, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, DSPGraph::Box *>, std::__1::hash<long long>, true>, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, DSPGraph::Box *>, std::__1::equal_to<long long>, true>, std::__1::allocator<std::__1::__hash_value_type<long long, DSPGraph::Box *> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, DSPGraph::Box *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, DSPGraph::Box *>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, DSPGraph::Box *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, DSPGraph::Box *>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, DSPGraph::Box *>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, DSPGraph::Box *>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, DSPGraph::Box *>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, DSPGraph::Box *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, DSPGraph::Box *>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, DSPGraph::Box *>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, DSPGraph::Box *>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, DSPGraph::Box *>, std::__1::hash<long long>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, DSPGraph::Box *>, std::__1::equal_to<long long>, true> >=f}}}{unordered_map<long long, DSPGraph::Analyzer *, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, DSPGraph::Analyzer *> > >={__hash_table<std::__1::__hash_value_type<long long, DSPGraph::Analyzer *>, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, DSPGraph::Analyzer *>, std::__1::hash<long long>, true>, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, DSPGraph::Analyzer *>, std::__1::equal_to<long long>, true>, std::__1::allocator<std::__1::__hash_value_type<long long, DSPGraph::Analyzer *> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, DSPGraph::Analyzer *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, DSPGraph::Analyzer *>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, DSPGraph::Analyzer *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, DSPGraph::Analyzer *>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, DSPGraph::Analyzer *>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, DSPGraph::Analyzer *>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, DSPGraph::Analyzer *>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, DSPGraph::Analyzer *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, DSPGraph::Analyzer *>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, DSPGraph::Analyzer *>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, DSPGraph::Analyzer *>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, DSPGraph::Analyzer *>, std::__1::hash<long long>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, DSPGraph::Analyzer *>, std::__1::equal_to<long long>, true> >=f}}}{vector<std::__1::unique_ptr<DSPGraph::Subset, std::__1::default_delete<DSPGraph::Subset> >, std::__1::allocator<std::__1::unique_ptr<DSPGraph::Subset, std::__1::default_delete<DSPGraph::Subset> > > >=^{unique_ptr<DSPGraph::Subset, std::__1::default_delete<DSPGraph::Subset> >}^{unique_ptr<DSPGraph::Subset, std::__1::default_delete<DSPGraph::Subset> >}{__compressed_pair<std::__1::unique_ptr<DSPGraph::Subset, std::__1::default_delete<DSPGraph::Subset> > *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::Subset, std::__1::default_delete<DSPGraph::Subset> > > >=^{unique_ptr<DSPGraph::Subset, std::__1::default_delete<DSPGraph::Subset> >}}}iiBI{AnalyzerBuilder=^^?{unordered_map<unsigned int, DSPGraph::AnalyzerBuilder::Info, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, DSPGraph::AnalyzerBuilder::Info> > >={__hash_table<std::__1::__hash_value_type<unsigned int, DSPGraph::AnalyzerBuilder::Info>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, DSPGraph::AnalyzerBuilder::Info>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, DSPGraph::AnalyzerBuilder::Info>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, DSPGraph::AnalyzerBuilder::Info> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::AnalyzerBuilder::Info>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::AnalyzerBuilder::Info>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::AnalyzerBuilder::Info>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::AnalyzerBuilder::Info>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::AnalyzerBuilder::Info>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::AnalyzerBuilder::Info>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::AnalyzerBuilder::Info>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::AnalyzerBuilder::Info>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::AnalyzerBuilder::Info>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::AnalyzerBuilder::Info>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::AnalyzerBuilder::Info>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, DSPGraph::AnalyzerBuilder::Info>, std::__1::hash<unsigned int>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, DSPGraph::AnalyzerBuilder::Info>, std::__1::equal_to<unsigned int>, true> >=f}}}}{vector<DSPGraph::Graph::GraphBridge, std::__1::allocator<DSPGraph::Graph::GraphBridge> >=^{GraphBridge}^{GraphBridge}{__compressed_pair<DSPGraph::Graph::GraphBridge *, std::__1::allocator<DSPGraph::Graph::GraphBridge> >=^{GraphBridge}}}{unique_ptr<DSPGraph::Graph::profiler_t, std::__1::default_delete<DSPGraph::Graph::profiler_t> >={__compressed_pair<DSPGraph::Graph::profiler_t *, std::__1::default_delete<DSPGraph::Graph::profiler_t> >=^{profiler_t}}}{function<void (double)>={__value_func<void (double)>={type=[32C]}^{__base<void (double)>}}}{unordered_map<std::__1::basic_string<char>, DSPGraph::Graph::profiler_t, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, DSPGraph::Graph::profiler_t> > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::Graph::profiler_t>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::Graph::profiler_t>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::Graph::profiler_t>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::Graph::profiler_t> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::Graph::profiler_t>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::Graph::profiler_t>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::Graph::profiler_t>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::Graph::profiler_t>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::Graph::profiler_t>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::Graph::profiler_t>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::Graph::profiler_t>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::Graph::profiler_t>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::Graph::profiler_t>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::Graph::profiler_t>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::Graph::profiler_t>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::Graph::profiler_t>, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, DSPGraph::Graph::profiler_t>, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}}8^{GraphIOData=iI{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}^{AudioBufferList}}16
scratchFloatSpace.size() >= multiArray.count
InvalidFormatException
com.apple.SoundAnalysis.AnalyzerQueue
BuildVersion
buildVersion
listenType
audioStringDate
confidenceValues
userFeedback
numberOfSamples
timestamp
directoryPath
T@"NSString",R,V_directoryPath
fileNameWithoutExtension
T@"NSString",R,V_fileNameWithoutExtension
detectionResults
T@"NSArray",R,V_detectionResults
SNLogMelBasedFeatureExtractor.mm
-[SNLogMelBasedFeatureExtractor resultsFromBox:renderedWithFrameCount:]
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-64/Framework/Internal/Requests/SoundDetectors/SNLogMelBasedFeatureExtractor.mm
-[SNLogMelBasedFeatureExtractor resultsBox]
melContext
createGraph
configuration.stepSizeFrames > 0 && configuration.stepSizeFrames <= configuration.windowLengthFrames
classifierContext
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-64/Framework/Internal/Core/DSPGraph/DSPGraph_ContextBox.cpp
validateFormats
Context box can't produce variable output frames.
input and output channel counts don't match
ContextBox has no inputs
mMaxFrames > 1
number of context frames must be greater than block size
isIntegral(mOutputHopSize)
inNumFrames <= mMaxFrames
inNumFrames == mMaxFrames
selfLatencyInTicks
setHistoricalBuffer
historical buffer size must match ring buffer readAvail
RPFTSource
v16@?0@"RPFileTransferProgress"8
Message transmitted!: %@
server
T@"CUFileServer",&,N,V_server
link
T@"RPCompanionLinkClient",&,N,V_link
rootDirectory
T@"NSString",&,N,V_rootDirectory
boxName
T@"NSString",&,V_boxName
busIndex
Tq,V_busIndex
T@"NSString",&,V_fileName
%@_%@_bus%ld_%@.caf
%@ startRecordingPort was unsuccessful
SNDSPGraphUtilities
computationalDutyCycle
graphIsDeadEnded
shouldThrowException
Td,N,V_computationalDutyCycle
TB,N,V_graphIsDeadEnded
TB,N,V_shouldThrowException
Throwing a fake exception to aid in unit testing
com.apple.soundanalysis.SystemAudioAnalyzer
v24@?0@"AVAudioBuffer"8@"AVAudioTime"16
Audio stream interrupted
B8@?0
@"SNDSPGraph"8@?0
LEC5
Td,R,N,V_offset
minimumObservableOffset
Td,N,V_minimumObservableOffset
maximumObservableOffset
Td,N,V_maximumObservableOffset
audio_offset_estimator.dspg
audio_offset_estimator.austrip
classifications
-init is not a valid initializer for the class SNClassificationResult
+new is not a valid class method for the class SNClassificationResult
T@"NSArray",C,N,V_classifications
-init is not a valid initializer for the class SNClassification
+new is not a valid class method for the class SNClassification
T@"NSString",C,N,V_identifier
/System/Library/Frameworks/AudioToolbox.framework/libAudioDSP.dylib
RegisterAudioUnits_InternalUnsearchable
SNThresholdBasedSecondPassController.m
secondPassHangoverPeriod >= 0.0
beginSecondPassHandler
T@?,C
endSecondPassHandler
T@?,C,V_beginSecondPassHandler
T@?,C,V_endSecondPassHandler
featureExtractorConfiguration
T@"<SNProcessorCreating>",R,N,V_featureExtractorConfiguration
T@"<SNMLModel>",R,N,V_model
outputLabel
T@"NSString",R,N,V_outputLabel
Td,R,N,V_sampleRate
TI,R,N,V_windowLengthFrames
TI,R,N,V_stepSizeFrames
floatFormatWithContext
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-64/Framework/Internal/Core/SNDSPGraphUtils.mm
sampleRate > 0 && blockSize > 0 && contextSize > 0
floatFormat
sampleRate > 0 && blockSize > 0
peakValue
Td,N,V_peakValue
peakTime
T{?=qiIq},N,V_peakTime
channelIndex
Tq,N,V_channelIndex
T{?={?=qiIq}{?=qiIq}},N,VtimeRange
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-64/Framework/Internal/Core/DSPGraph/DSPGraph_SignalDetectorBox.cpp
inputs must be LPCM
mInputSignalRanges.at(busIdx).at(channelIdx).capacity() >= inNumFrames
SignalDetectorBox
-[SNResultsXPCPublisher init]
failed to initialize instance of class %s
-[SNResultsXPCPublisher initWithSubscriber:]
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-64/Framework/Internal/Core/DSPGraph/DSPGraph_LogMelTransformBox.cpp
LogMelTransformBox
-[SNSystemAudioAnalyzerXPCSubscriber init]
expected NSXPC to pass a proxy object for argument `observer`
could not add request; unknown error
soundprint/Placeholder
soundprint_Placeholder
T@"MLMultiArray",&,N,V_soundprint_Placeholder
Sigmoid
T@"MLMultiArray",&,N,V_Sigmoid
SNSoundPrint100kCatMeowModel
mlmodelc
v24@?0@"MLModel"8@"NSError"16
T@"MLModel",R,N,V_model
input1
stateIn
detectedHistoryIn
T@"MLMultiArray",&,N,V_input1
T@"MLMultiArray",&,N,V_stateIn
T@"MLMultiArray",&,N,V_detectedHistoryIn
input_1
detectedHistoryOut
T@"MLMultiArray",&,N,V_input_1
T@"MLMultiArray",&,N,V_Confidence
T@"MLMultiArray",&,N,V_Detected
T@"MLMultiArray",&,N,V_detectedHistoryOut
SNVGGishDoorbellModel
SNVGGishDistressedBabyModel
SNVGGishDingBellModel
output1
T@"MLMultiArray",&,N,V_output1
SNVGGishLaughterModel
SNSoundPrint100kBuzzerModel
SNSoundPrint100kEmbeddingModel
SNVGGishApplauseModel
SNVGGishFireAlarmModel
SNSoundPrint100kShoutingModel
SNVGGishEmbeddingModel
SNSoundPrint100kFireAlarmModel
SNSoundPrint100kBeepModel
SNVGGishDoorKnockModel
SNVGGishBabbleModel
SNVGGishDogBarkModel
SNSoundPrint100kDogBarkModel
SNVGGishBeepModel
SNSoundPrint100kDistressedBabyModel
SNSoundPrint100kDoorbellModel
SNSoundPrint100kSmokeAlarmModel
SNVGGishShoutingModel
SNVGGishSpeechModel
SNVGGishCatMeowModel
SNVGGishSmokeAlarmModel
SNVGGishMusicModel
SNSoundPrint100kDingBellModel
SNVGGishBuzzerModel
SNVGGishCheeringModel
SNSoundPrint100kDoorKnockModel
block size %d
buffer %p
source port %p box %p %s
format %s
num dests %d
%3d dest %p, box name %s
Wire
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-64/CoreAudioUtility/Source/CADSP/DSPGraph/DSPGraph_Wire.cpp
wire already has a source: %s %s output %d
output port already has a wire: %s %s output %d
box %s %s output %d is not connected
no format was ever set on the wire from box %s %s output %d
Wire from box %s: format
%s, %d block size
does not match the one previously set
%s, %d block size
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-64/CoreAudioUtility/Source/CADSP/DSPGraph/Boxes/DSPGraph_CalculationBox.cpp
CalculationBox doesn't support parameter ID 
 in scope 
CalculationBox can't get input scope element 
 with parameter ID 
CalculationBox can't get output scope element 
CalculationBox can't get parameter in scope 
CalculationBox can't set input scope element 
CalculationBox can't set parameter in scope 
Resampler2 bad sample rate(s) : %11.2f %11.2f
Someone is deleting a Resampler while it is in use.
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-64/CoreAudioUtility/Source/CADSP/DSPGraph/DSPGraph_TimeFreqBox.cpp
buffer list number of buffers doesn't match format channel count.
index %d
Port
OutputPort
InputPort
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-64/CoreAudioUtility/Source/CADSP/DSPGraph/DSPGraph_Interpreter.cpp
expected name in 'box' command: %s
expected class name or component description in 'box' command: %s
box : box type '
' not found
expected ')' at end of component description, got '%c' %d
()[]{}";
NewBoxRegistry registered boxes:
NewBoxRegistry
parameter_add
parameter_subtract
parameter_negate
parameter_logical_and
parameter_logical_or
parameter_logical_not
property_logical_or
property_logical_and
property_not
property_equal
property_not_equal
wrong number of inputs for SingleRateLPCMConverterBox. must be 1.
wrong number of outputs for SingleRateLPCMConverterBox. must be 1.
There must be two inputs and one output, instead of %i and %i.
The inputs must have the same channel count, but have %i and %i.
The inputs and output must have the same channel count, but have %i and %i.
The buffer passed for input 0 should be sized to %i bytes, but is %i.
The buffer passed for input 1 should be sized to %i bytes, but is %i.
asum
wrong number of outputs for arithmetic difference box. Must be 1.
adif
amin
amul
cannot open file %s
parsing exception at line %u
param
property
wire
wireParam
wireProperty
wireGraphParam
wireGraphProperty
order
beginSubset
endSubset
graphName
componentName
format
jack
record
analysis
analysisDefine
unknown command name '%s'
expected name in 'analysisDefine' command: %s
expected class name or component description in 'analysisDefine' command: %s
expected ')' at end of port description, got '%c' %d
TMPDIR
/tmp/
-@/#,
constant bit rate formats must have a block size and bytes per packet.
expected ')' at end of format, got '%c' %d
sliceDuration
variableSliceDuration
performADryRun
recordFileType
unknown value name '%s' in 'set' command
expected ')' at end of property endpoint, got '%c' %d
global
group
part
parameter endpoint : box not found: 
expected ')' at end of param endpoint, got '%c' %d
source port description parse failed. {%s}
wire : source "
" index 
 not found
wire : destination "
GraphInput
out 
GraphOutput
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-64/CoreAudioUtility/Source/CADSP/DSPGraph/DSPGraph_Analyzers.cpp
analysis %p
Analyzer
%s%s %s
AudioStreamBasicDescription:
AudioUnitInitialize %s
AUAnalyzer
TestAnalyzer
AnalyzerBuilder
%s %p
strips
effects
aupreset
displayname
bypass
data
classname
type
subtype
manufacturer
                                                                
\x%02x
%2d ch, %6.0f Hz, 
 (0x%08X) 
(freq 
0123456789ABCDEF
_-+=|./:!@#$%^&*<>?~
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-64/CoreAudioUtility/Source/CADSP/DSPGraph/DSPGraph_Utils.cpp
file too large to read into memory
mABL->mNumberBuffers (%u) != toABL->mNumberBuffers (%u)
fromBytePos (%u) + numBytesToCopy (%u) > mABL->mBuffers[%u].mDataByteSize (%u)
toBytePos (%u) + numBytesToCopy (%u) > toABL->mBuffers[%u].mDataByteSize (%u)
numZeroes is greater than buffer capacity %d > %d
DSPGraph assertion failure: RingBuffer::write advancing write by more packets than provided with %d > %d
DSPGraph assertion failure: RingBuffer::write overflow %d > %d (capacity = %d, readAvail = %d, readPos = %d, writePos = %d)
DSPGraph assertion failure: RingBuffer::read underflow %d > %d (capacity = %d, readPos = %d, writePos = %d)
num buffers %d
flags %x
ABL %p
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-64/CoreAudioUtility/Source/CADSP/DSPGraph/DSPGraph_Buffer.cpp
Buffer::copyFrom, fromABL->mNumberBuffers != toABL->mNumberBuffers
Buffer::copyFrom, fromABL->mBuffers[i].mDataByteSize > mByteCapacity
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-64/CoreAudioUtility/Source/CADSP/DSPGraph/DSPGraph_Box.cpp
frequency data is passed through a No Frequency Safe Box-> %s %s
analysis %qd
(%s %d)
analysis 
 (%s %d)
order %s %s
true
wireProperty (%s %d %d %d) (%s %d %d %d) %s
wireParam (%s %d %d %d) (%s %d %d %d) %s
wire 
(%s %d) 
box %qd %s 
 %d %d
componentName %s %s
box %s 
B%qd -> B%qd
 [label="
B%qd [shape=box, label="%s\n
latency %f (%f)
Box::topologicalSort, There is a cycle in the graph. The graph must be acyclic.
Latency compensation of %d samples required at frequency-domain wire : %s -> %s
-latency-delay-
delay samples
DelayBox
parameters
This line should never be reached, please file a bug report
null
Unknown parse error
Expected opening quote
Expected UTF-16 low surrogate
Invalid escape sequence
Invalid UTF-16 character
Expected closing quote
Invalid value
Unterminated value
Expected opening bracket
Expected colon
Expected comma or closing bracket
Nested object or array not parsed
Exceeded nesting limit (32)
AudioComponentDescription
%s '%s' %qd %p 
graph %p
num inputs %d
num outputs %d
AudioUnitUninitialize in 
AudioUnitInitialize in 
AudioComponentInstanceDispose in 
AudioComponentFindNext in 
AudioComponentInstanceNew in 
AudioUnitProcess error in 
AudioUnitProcessMultiple in 
AUBox::setFormatOnUnit %s %s : %s
enabled %d
AU %p
num param taps %d
ParameterTap
source %p
source      %p scope %d   element %d   ID %d
destination %p scope %d   element %d   ID %d
AUBox
GainBox input and output formats don't match (
 != 
mute
gain
dbgain
test
copy
There must be one input and output, instead of %i and %i.
The input and output ports must have the same number of channels, but have %i and %i.
freq
time
The input and output must both be frequency-domain, but are '%s' and '%s'
VectorGainBox
SumBox output channel count must be mono or matched when input is single-bus
ChannelJoinerBox output format must be 32-bit floating-point PCM or 'freq'
ChannelJoinerBox input format must be 32-bit floating-point PCM or 'freq'
ChannelJoinerBox channel mismatch: can't join %d input channels into %d output channels
outBufferIndex < outABL->mNumberBuffers
ChannelJoiner
ChannelSplitterBox channel mismatch: in has %d channels, but only has %d outs
ChannelSplitterBox output format must be non-interleaved float or 'freq' 
ChannelSplitterBox outputs must be mono 
ChannelSplitterBox output is in time-domain but input is in frequency-domain 
ChannelSplitterBox output is in frequency-domain but input is in time-domain 
ChannelSplitter
ChannelCopierBox input format must be mono, non-interleaved float
ChannelCopierBox output format must be non-interleaved float 
ChannelCopier
DeadEndBox
ConstantSourceBox output format must be non-interleaved float or 'freq'
imag value (freq domain only)
real value
ConstantSourceBox
DBValue
LinearValue
DecibelControlBox
SingleRateLPCMConverterBox input must have a non-zero number of channels
SingleRateLPCMConverterBox output format must be non-interleaved float
SingleRateLPCMConverterBox output must have a non-zero number of channels
SingleRateLPCMConverterBox input and output sample rates must match
SingleRateLPCMConverterBox
unordered_map::at: key not found
ParameterEndpoint
box %p
parameterID %u
scope %u
element %u
PropertyEndpoint
propertyID %u
min() cannot be computed with a complex LHS.
min() cannot be computed with a complex RHS.
min() cannot be computed with complex arguments.
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-64/CoreAudioUtility/Source/CADSP/VP/Utility/vpTimeFreqConverter.cpp
Analyze
Synthesize
: Encountered total 
 frames with Non finite sample <nan> or <inf> in one audio start/stop cycle!
 frames with loud input signal (over 
 dB) in one audio start/stop cycle!
Source/CADSP/DSPGraph/Boxes/DSPGraph_NonFiniteProtectionBox.h
print
NonFiniteProtection
com.apple.coreaudio
nfnp_key
%Y-%m-%d %H:%M:%S
%s.%d
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-64/CoreAudioUtility/Source/CADSP/DSPGraph/DSPGraph_Box.h
: Encountered Non finite sample <nan> or <inf> in 
 frames!
: Encountered loud signal in 
NonFiniteProtectionBox
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-64/CoreAudioUtility/Source/CADSP/DSPGraph/DSPGraph_IsoGroup.cpp
number of blocks to process is out of range  %d   %d %d
IsoGroup::topologicalSort, There is a cycle in the graph. The graph must be acyclic.
sample rates in group do not match  %d %d %s
block sizes in group do not match  %d %d %s
RamstadSRC::processMono, wrong channel count
RamstadSRC process called without preflight and arguments don't match preflight.
RamstadSRC process called for different number of output samples than preflight.
RamstadSRC process called for number of input samples than outside range of preflight.
RamstadSRC::processStereo, wrong channel count
RamstadSRC::processStereoFrac preflight prediction failed.
wire %p
file data pos %d
FileInjector
FileRecorder
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-64/CoreAudioUtility/Source/CADSP/DSPGraph/DSPGraph_Files.cpp
allocateFileData
totalFrames * mBytesPerFrame overflows 32 bits
0x%x
ExtAudioFileGetProperty
ExtAudioFileSetProperty
ExtAudioFileRead
ExtAudioFileClose
Source/PublicUtility/CAExtAudioFile.h
Open
couldn't convert path to CFURLRef
ExtAudioFileOpenURL
%s ('%s') failed
%s failed
inject
NewAudioCapturerImpl
/usr/local/lib/libAudioDiagnostics.dylib
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-64/CoreAudioUtility/Source/CADSP/DSPGraph/DSPGraph_Preprocessor.cpp
preprocessor error: recursive call to macro %s.
preprocessor error: macro %s: wrong number of arguments expected %d. got %d
WARNING: Preprocessor: redefining macro '%s'
undef
counter
letCounter
localCounter
defined
ifdef
ifset
include
preprocessor error: cannot open include file '%s'
preprocessor error: cannot find include file '%s'
preprocessor error: macro %s not found.
;()[]{}`'";\
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-64/CoreAudioUtility/Source/CADSP/DSPGraph/DSPGraph_Graph.cpp
initialized %d
can process in place %d
num boxes %d
num wires %d
num internal buffers %d
num sorted groups %d
num graph inputs %d
num graph outputs %d
BOXES
WIRES
INTERNAL BUFFERS
GRAPH INPUTS
%3d box 
GRAPH OUTPUTS
GRAPH SINKS
GRAPH PARAMETERS
%3d %u %f %s
GRAPH PROPERTIES
%3d %u %s
Graph
InternalBuffer
box %s %s input port is not connected.
%s %s box not connected
input and output data are identical, but graph cannot process in-place
preflight slice duration is greater than the graph's maximum slice duration.
the slice duration cannot vary, yet a different duration was supplied to preflight.
input %d packet count %d is inconsistent with preflight %d
output %d frame count %d is inconsistent with preflight %d
number of frames are different in different ports though the sample rates are the same. %d %d
AudioBufferList mDataByteSize is too small for the number of packets for input %d.  mDataByteSize %d   expectedByteSize %d
AudioBufferList mDataByteSize is too small for the number of frames for output %d.  mDataByteSize %d   expectedByteSize %d
boxes within a group have different sample rates! group has sample rate %d, but box %s has sample rate %d on one of its input ports
boxes within a group have different block sizes! group has block sizes %d, but box %s has block sizes %d on one of its input ports
box %s %s output port is not connected.
boxes within a group have different sample rates! group has sample rate %d, but box %s %s has sample rate %d on one of its output ports
boxes within a group have different block sizes! group has block sizes %d, but box %s has block sizes %d on one of its output ports
IsoGroup
input port 
 on '
' box is not connected to anything
output port 
Box::in inIndex out of range! negative input %d was requested for box %s
Box::out inIndex out of range! negative output %d was requested for box %s
couldn't open file '%s'
digraph 
Box %s not found
%s setProperty %d %d %d failed with error %d
%s setProperty %d %d %d to %u failed with error %d
%s setProperty %d %d %d to %Lu failed with error %d
%s setProperty %d %d %d to %f failed with error %d
%s setProperty %d %d %d to %lf failed with error %d
Couldn't load plist from path '%s'. CFURLCreateWithFileSystemPath failed.
Must pass property strip's resource path if plist path is relative
Couldn't create resource URL from path '%s'.
Couldn't load plist from path '%s'. CFReadStreamCreateWithFile failed.
Couldn't load plist from path '%s'. CFPropertyListCreateWithStream failed.
Must provide either a 'Value', 'Path', 'Data', or a recognized number type for properties
Float64
Float32
UInt64
UInt32
Data
Element
Scope
Number
PropertyID
Properties
Name
Boxes
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-64/CoreAudioUtility/Source/CADSP/DSPGraph/DSPGraph_SRCBox.cpp
ResamplerSRCKernel
RamstadSRCKernel
reblocker
FreqSRCBox I/O sample rates and block sizes invalid  %d / %d <> %d /%d
isValidFreqSRCBoxConnection()
inBuf->mNumberBuffers == outBuf->mNumberBuffers
freqsrc
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-64/CoreAudioUtility/Source/CADSP/DSPGraph/Boxes/DSPGraph_VolumeCurveBox.cpp
Decibel gain
Mapped slider value
Raw slider value
Maximum volume
Minimum volume
Transfer function
VolumeCurveBox
CA_NoVector
CA_NoVector set; Vector unit optimized routines will be bypassed
hw.optional.avx512f
hw.optional.avx2_0
hw.optional.avx1_0
hw.optional.sse4_2
hw.optional.sse4_1
hw.optional.sse3
hw.optional.sse2
spew
minutiae
details
info
notice
note
warning
%02X
%2d ch, %6.0f Hz, %s (0x%08X) 
 little-endian
 big-endian
 unsigned
 signed
integer
float
packed in %d bytes
unpacked in %d bytes
, deinterleaved
 low-aligned
 high-aligned
%d.%d
%s-bit%s%s %s%s%s%s%s
from %d-bit source, 
from UNKNOWN source bit depth, 
%d frames/packet
%d bits/channel, %d bytes/packet, %d frames/packet, %d bytes/frame
-@/#
Expected fractional bits following '.'
non-interleaved flag invalid for non-PCM formats
extra characters at end of format string: %s
Invalid format string: %s
Syntax of format strings is: 
(SNSystemAudioAnalyzerXPCPublisher:%@) addRequest:%@ withObserver:%@
(SNSystemAudioAnalyzerXPCPublisher:%@) removeRequest:%@
(SNSystemAudioAnalyzerXPCPublisher:%@) removeAllRequests
(SNSystemAudioAnalyzerXPCPublisher:%@) start
(SNSystemAudioAnalyzerXPCPublisher:%@) stop
Couldn't obtain the built-in mic UID. Skipping setting of the AQ channel assignments
Set audio queue channel assignment %u with result %d
Could register audio units. Returning nil for %@
%s:%d:%s: ASSERTION FAILURE [(mBufferCapacity == 0 || other.mBuffers[i].mDataByteSize <= mBufferCapacity) != 0 is false]: 
Detector model must contain one user supplied feature. Model contains %@
Detector model must contain one user supplied output feature, or two output features named %@ and %@. Model contains %@
IncludePaths parse failed
Substitutions parse failed
SNDSPConfiguration parse failed
Applying AUStrip %@ to graph %@ failed
Error applying AUStrip. DSPGraph must be the first item in a DSPConfiguration.
Applying PropertyStrip %@ to graph %@ failed
Error applying PropertyStrip. DSPGraph must be the first item in a DSPConfiguration.
DSPGraphInfo doesn't specify either text or path
AUStripInfo doesn't specify either value or path
PropertyStripInfo doesn't specify either value or path
Instantiating SNSystemAudioAnalyzer with In-Process Computation
Instantiating SNSystemAudioAnalyzer in Daemon
(SNSystemAudioAnalyzer:%@) addRequest:%@ withObserver:%@
(SNSystemAudioAnalyzer:%@) addRequestInBackground:%@ withObserver:%@
(SNSystemAudioAnalyzer:%@) removeRequest:%@
(SNSystemAudioAnalyzer:%@) removeAllRequests
(SNSystemAudioAnalyzer:%@) start
(SNSystemAudioAnalyzer:%@) stop
(SNSystemAudioAnalyzerRemote: %@) remote analyzer invalidated: %@
(SNSystemAudioAnalyzerRemote: %@) remote analyzer invalidation attempted; stalling further activity
(SNSystemAudioAnalyzerRemote: %@) finished stalling after analyzer invalidation attempt
(SNSystemAudioAnalyzerRemote:%@) addRequest:%@ withObserver:%@
(SNSystemAudioAnalyzerRemote:%@) removeRequest:%@
(SNSystemAudioAnalyzerRemote:%@) removeAllRequests
(SNSystemAudioAnalyzerRemote:%@) start
(SNSystemAudioAnalyzerRemote:%@) stop
EAR framework returned %lu bytes instead of %d float elements
Couldn't find SoundPrint first pass model for sound identifier named %@. Using VGGish instead.
Unknown exception caught!
Caught OSStatus exception %d %4.4s
std::exception caught: %s.
Caught graph exception %d %4.4s %s in %s:%i
Companion service connection invalidated
Could not contact remote SNFileServer to query version (this may not be an issue; not all devices are expected to host SNFileServers); reason: %@
Device found %@
Version check messaged failed with error %@
Version %@
device updated: %@ with changes: %ld
Link failed to activate with error %@
error querying entitlement %@: %@
inadequate entitlements to host daemon
Activated file server with error %@
SNLogMelBasedFeatureExtractor models must have one input feature
SNLogMelBasedFeatureExtractor model has input feature size %@, expected %@
SNLogMelBasedFeatureExtractor models must have one output feature
SNLogMelBasedFeatureExtractor model has output feature size %@, expected a 1-d multi array
Creating model of class %@
Couldn't find model class for sound identifier named %@
for handler %p: result (%@) produced by request %@
for handler %p: termination (%@) received from request %@
Required shared request not found with configuration %@
request failed to adapt to system configuration %@ with error %@
failed to set processing contexts
Unknown error
Unimplemented
Unknown error processing tree
Removing %@, since it doesn't contain any detections
Failed to write results log file with error %@
Started recording graph
Failed to start recording graph
No sample rate metadata provided in model. Defaulting to %d
Feedback connection destination %@ not present in model
Feedback connection source %@ not present in model
Couldn't parse feedback connection. Should be 'source -> destination'
Failed to get files list. Giving up on directory size reduction. Error: %@
Sorting files by date failed; continuing but may have unpredictable results.
No SoundAnalysis file removal needed. Directory size approx: %lld kb.
Deleting these sound files + their associated metadata files: %@
Failed to delete audio file %@. Error: %@
Failed to delete text file %@. Error: %@
Failed to open audio file %@ with error %@
%@ didProduce %@
%@ didFailWith %@
%@ didComplete
%s:%d:%s: ASSERTION FAILURE [(mBufferMemory == __null) != 0 is false]: 
AUStrip is nil
PropertyStrip is nil
Transfer completed
Fetched local device identity
Fetched server device identity %@
File sharing messaged failed with error %@
Received a file sharing request response %@
Received a file item %@
Queue already running
Failed to create audio queue
Starting audio queue
Stopping audio queue
Completed first pass for request %@ with error %@
Resizing historical ring buffer from %d to %d frames after adding %@
Beginning second pass for request %@
Couldn't begin second pass recording with error %@
Couldn't begin recording, no path set
Completed second pass for request %@ with error %@
Beginning %f seconds of historical data catch-up for request %@
Ended historical data catch-up for request %@
Ending second pass for request %@
Resizing historical ring buffer from %d to %d frames after removing %@
Wrote file %@ at %@ with result %d.
Received version request
Received file transfer request
Progressing %@
Finished transferring files with error %@
Skipping transferring of file %@
Requested file path %@
Received file deletion request on server for file path: %@
File deletion request failed on the server: %@
Box %s doesn't exist in graph
(SNSystemAudioAnalyzerLocal:%@) addRequest:%@ withObserver:%@
(SNSystemAudioAnalyzerLocal:%@) removeRequest:%@
(SNSystemAudioAnalyzerLocal:%@) removeAllRequests
(SNSystemAudioAnalyzerLocal:%@) start
(SNSystemAudioAnalyzerLocal:%@) stop
Audio failed to start. Retrying in %d seconds
AVAudioSession interrupted %@
AVAudioSession route change %@
AVAudioSession media services lost %@
AVAudioSession media services reset %@
Graph %@ couldn't be compiled
Graph couldn't be compiled from text
Error: Unable to call RegisterAudioUnits_InternalUnsearchable from libAudioDSP.dylib.
Processor not found with configuration %@
(SNSystemAudioAnalyzerXPCSubscriber:%@) addRequest:%@ withObserver:%@
(SNSystemAudioAnalyzerXPCSubscriber:%@) removeRequest:%@
(SNSystemAudioAnalyzerXPCSubscriber:%@) removeAllRequests
(SNSystemAudioAnalyzerXPCSubscriber:%@) start
(SNSystemAudioAnalyzerXPCSubscriber:%@) stop
Could not load SNSoundPrint100kCatMeowModel.mlmodelc in the bundle resource
Could not load SNVGGishDoorbellModel.mlmodelc in the bundle resource
Could not load SNVGGishDistressedBabyModel.mlmodelc in the bundle resource
Could not load SNVGGishDingBellModel.mlmodelc in the bundle resource
Could not load SNVGGishLaughterModel.mlmodelc in the bundle resource
Could not load SNSoundPrint100kBuzzerModel.mlmodelc in the bundle resource
Could not load SNSoundPrint100kEmbeddingModel.mlmodelc in the bundle resource
Could not load SNVGGishApplauseModel.mlmodelc in the bundle resource
Could not load SNVGGishFireAlarmModel.mlmodelc in the bundle resource
Could not load SNSoundPrint100kShoutingModel.mlmodelc in the bundle resource
Could not load SNVGGishEmbeddingModel.mlmodelc in the bundle resource
Could not load SNSoundPrint100kFireAlarmModel.mlmodelc in the bundle resource
Could not load SNSoundPrint100kBeepModel.mlmodelc in the bundle resource
Could not load SNVGGishDoorKnockModel.mlmodelc in the bundle resource
Could not load SNVGGishBabbleModel.mlmodelc in the bundle resource
Could not load SNVGGishDogBarkModel.mlmodelc in the bundle resource
Could not load SNSoundPrint100kDogBarkModel.mlmodelc in the bundle resource
Could not load SNVGGishBeepModel.mlmodelc in the bundle resource
Could not load SNSoundPrint100kDistressedBabyModel.mlmodelc in the bundle resource
Could not load SNSoundPrint100kDoorbellModel.mlmodelc in the bundle resource
Could not load SNSoundPrint100kSmokeAlarmModel.mlmodelc in the bundle resource
Could not load SNVGGishShoutingModel.mlmodelc in the bundle resource
Could not load SNVGGishSpeechModel.mlmodelc in the bundle resource
Could not load SNVGGishCatMeowModel.mlmodelc in the bundle resource
Could not load SNVGGishSmokeAlarmModel.mlmodelc in the bundle resource
Could not load SNVGGishMusicModel.mlmodelc in the bundle resource
Could not load SNSoundPrint100kDingBellModel.mlmodelc in the bundle resource
Could not load SNVGGishBuzzerModel.mlmodelc in the bundle resource
Could not load SNVGGishCheeringModel.mlmodelc in the bundle resource
Could not load SNSoundPrint100kDoorKnockModel.mlmodelc in the bundle resource
Base16 decoding: invalid argument exception (%s)
Base16 decoding: out of range exception (%s)
Base16 decoding: unexpected exception.
DSPGraph assertion failure: RingBuffer::write advancing write by more packets than provided with %d > %d
DSPGraph assertion failure: RingBuffer::write overflow %d > %d (capacity = %d, readAvail = %d, readPos = %d, writePos = %d)
DSPGraph assertion failure: RingBuffer::read underflow %d > %d (capacity = %d, readPos = %d, writePos = %d)
%s:%d:%s: _vp: vptimefreqconverter::analyze: not configured for conversion
%s:%d:%s: _vp: vptimefreqconverter::analyze: not configured for analysis
%s:%d:%s: _vp: vptimefreqconverter::synthesize: not configured for conversion
%s:%d:%s: _vp: vptimefreqconverter::synthesize: not configured for synthesis
%s:%d:%s: %s
%s:%d:%s: about to throw %s: %s
 PackednessIsSignificant only applies for PCM
SNLKFSResult
NSCopying
NSSecureCoding
NSCoding
SNTimeRangeProvidingWritable
SNTimeRangeProviding
NSObject
SNSpeechEmotionResult
SNConfidenceProvidingWritable
SNConfidenceProviding
SNResult
SNEstimateDirectionOfArrivalRequest
SNAnalyzerCreating
SNRequest
SNDirectionOfArrivalEstimator
SNAnalyzing
SNProcessing
SNCreateFeaturePrintRequest
SNFeaturePrintExtractor
SNEstimateSpeechDistanceRequest
SNDistanceEstimator
SNFileServerDiscoveryResult
SNResultsObservingXPCProtocol
SNSystemAudioAnalyzerXPCPublisher
SNSystemAudioAnalyzerProtocol
SNAudioQueueConfiguration
SNAudioDataSourceUtilities
SNFileDeletionResult
AllValidSoundIdentifiers
SNTaskCreating
SNFileSystem
SNDetectSignalThresholdRequest
SNDetectSignalThresholdRequestImpl
SNError
SNDirectionOfArrivalResult
_SNVGGishFeatureEmbeddingCustomModel
MLCustomModel
SNCorrelateAudioRequest
SNAudioCorrelator
SNSystemServiceResourceCoordinator
SNResourceCoordinatorProtocol
SNAnalysisServer
NSXPCListenerDelegate
SNAnalysisClient
SNSpeechDistanceResult
SNUserDefaults
SNDeleteFilesRequest
SNMLCustomModel
SNMLModel
SNMLLockedModel
SNDetectorHead
SNResourceCoordinatorXPCSubscriber
SNResourceCoordinatorXPCProtocol
SNDetectionResult
SNCustomTwoPassRequest
SNTwoPassRequest
SNAnalysisPassStrategyProviding
SNSpeechUtteranceResult
SNDSPItemInfo
SNDSPGraphInfo
SNAUStripInfo
SNPropertyStripInfo
SNDSPConfiguration
SNDSPGraphLoader
SNDictionaryAdditions
SNResultsXPCSubscriber
SNResultsObserving
SNSystemAudioAnalyzer
SNFileListingResult
SNSystemAudioAnalyzerRemote
SNFileServerInfo
SNEstimateSpeechEmotionRequest
SNSpeechEmotionEstimator
EARSyncPSRAudioProcessorDelegate
SNSystemConfiguration
SNSoundClassifier
SNClassifySoundRequest
SNAudioFileAnalyzer
SNDetectSpeechUtteranceRequest
SNSpeechUtteranceDetector
SNTimeConversionDictionaryProviding
SNAnalyzerHost
SNDetectSoundRequest
SNSoundDetector
SNDSPGraphBox
SNDiscoverFileServerRequest
SNDaemon
SNLogMelBasedFeatureExtractorConfiguration
SNProcessorCreating
SNLockedMLModelFactory
SNMLModelFactory
SNFeaturePrint
SNAnalyzerInfo
SNForwardPassAudioStreamAnalyzer
SNTimeConverting
SNMeasureLKFSRequest
SNAudioLevelMeasurer
SNListFilesRequest
SNUtils
SNResultsCollector
SNResultsPrinter
SNResultsForwarder
SNModelFeatureConnection
SNResourceCoordinatorXPCPublisher
SNDSPGraph
DSPGMLInputProvider
MLFeatureProvider
DSPGCoreMLInfo
SNFileCopyingResult
SNAudioOffsetResult
SNCopyFilesRequest
SNTwoPassConfiguration
SNAudioRecordingQueue
SNDSPGraphCustomModel
_SNVGGishFrontEndProcessingCustomModel
SNAudioStreamAnalyzer
SNUltronResultsLogger
SNLogMelBasedFeatureExtractor
SNFileServer
SNBoxRecordingInfo
SNDSPGraphUtilities
SNSystemAudioAnalyzerXPCProtocol
SNNullRequest
SNNullDetector
SNSystemAudioAnalyzerLocal
SNDSPGraphInterpreter
SNEstimateAudioOffsetRequest
SNAudioOffsetEstimator
SNClassificationResult
SNClassification
SNSignalThresholdResult
SNAudioUnitRegistration
SNThresholdBasedSecondPassController
SNSecondPassController
SNDetectorHeadConfiguration
SNAudioProcessorCache
SNNullResult
SNAudioCorrelationResult
SNResultsXPCPublisher
NSXPCProxyCreating
SNSystemAudioAnalyzerXPCSubscriber
SNSoundPrint100kCatMeowModelInput
SNSoundPrint100kCatMeowModelOutput
SNSoundPrint100kCatMeowModel
SNVGGishDoorbellModelInput
SNVGGishDoorbellModelOutput
SNVGGishDoorbellModel
SNVGGishDistressedBabyModelInput
SNVGGishDistressedBabyModelOutput
SNVGGishDistressedBabyModel
SNVGGishDingBellModelInput
SNVGGishDingBellModelOutput
SNVGGishDingBellModel
SNVGGishLaughterModelInput
SNVGGishLaughterModelOutput
SNVGGishLaughterModel
SNSoundPrint100kBuzzerModelInput
SNSoundPrint100kBuzzerModelOutput
SNSoundPrint100kBuzzerModel
SNSoundPrint100kEmbeddingModelInput
SNSoundPrint100kEmbeddingModelOutput
SNSoundPrint100kEmbeddingModel
SNVGGishApplauseModelInput
SNVGGishApplauseModelOutput
SNVGGishApplauseModel
SNVGGishFireAlarmModelInput
SNVGGishFireAlarmModelOutput
SNVGGishFireAlarmModel
SNSoundPrint100kShoutingModelInput
SNSoundPrint100kShoutingModelOutput
SNSoundPrint100kShoutingModel
SNVGGishEmbeddingModelInput
SNVGGishEmbeddingModelOutput
SNVGGishEmbeddingModel
SNSoundPrint100kFireAlarmModelInput
SNSoundPrint100kFireAlarmModelOutput
SNSoundPrint100kFireAlarmModel
SNSoundPrint100kBeepModelInput
SNSoundPrint100kBeepModelOutput
SNSoundPrint100kBeepModel
SNVGGishDoorKnockModelInput
SNVGGishDoorKnockModelOutput
SNVGGishDoorKnockModel
SNVGGishBabbleModelInput
SNVGGishBabbleModelOutput
SNVGGishBabbleModel
SNVGGishDogBarkModelInput
SNVGGishDogBarkModelOutput
SNVGGishDogBarkModel
SNSoundPrint100kDogBarkModelInput
SNSoundPrint100kDogBarkModelOutput
SNSoundPrint100kDogBarkModel
SNVGGishBeepModelInput
SNVGGishBeepModelOutput
SNVGGishBeepModel
SNSoundPrint100kDistressedBabyModelInput
SNSoundPrint100kDistressedBabyModelOutput
SNSoundPrint100kDistressedBabyModel
SNSoundPrint100kDoorbellModelInput
SNSoundPrint100kDoorbellModelOutput
SNSoundPrint100kDoorbellModel
SNSoundPrint100kSmokeAlarmModelInput
SNSoundPrint100kSmokeAlarmModelOutput
SNSoundPrint100kSmokeAlarmModel
SNVGGishShoutingModelInput
SNVGGishShoutingModelOutput
SNVGGishShoutingModel
SNVGGishSpeechModelInput
SNVGGishSpeechModelOutput
SNVGGishSpeechModel
SNVGGishCatMeowModelInput
SNVGGishCatMeowModelOutput
SNVGGishCatMeowModel
SNVGGishSmokeAlarmModelInput
SNVGGishSmokeAlarmModelOutput
SNVGGishSmokeAlarmModel
SNVGGishMusicModelInput
SNVGGishMusicModelOutput
SNVGGishMusicModel
SNSoundPrint100kDingBellModelInput
SNSoundPrint100kDingBellModelOutput
SNSoundPrint100kDingBellModel
SNVGGishBuzzerModelInput
SNVGGishBuzzerModelOutput
SNVGGishBuzzerModel
SNVGGishCheeringModelInput
SNVGGishCheeringModelOutput
SNVGGishCheeringModel
SNSoundPrint100kDoorKnockModelInput
SNSoundPrint100kDoorKnockModelOutput
SNSoundPrint100kDoorKnockModel
allocWithZone:
init
timeRange
setTimeRange:
decibelLevel
setDecibelLevel:
isEqualToLKFSResult:
valueWithCMTimeRange:
isEqual:
hash
numberWithFloat:
decodeObjectOfClass:forKey:
decodeDoubleForKey:
CMTimeRangeValue
encodeObject:forKey:
encodeDouble:forKey:
supportsSecureCoding
copyWithZone:
encodeWithCoder:
initWithCoder:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
description
debugDescription
_decibelLevel
_timeRange
mood
valence
arousal
dominance
confidence
stringWithFormat:
setMood:
setValence:
setArousal:
setDominance:
setConfidence:
isEqualToSpeechEmotionResult:
numberWithDouble:
_confidence
_mood
_valence
_arousal
_dominance
isEqualToEstimateDirectionOfArrivalRequest:
createAnalyzerWithError:
spatialSpectrum
.cxx_destruct
_spatialSpectrum
setAzimuth:
setSpatialSpectrum:
arrayWithObjects:count:
bundleForClass:
resourcePath
populateClientError:withCode:underlyingError:message:
stringWithUTF8String:
resultsBox
adaptToSystemConfiguration:error:
graph
resultsFromBox:renderedWithFrameCount:
sharedProcessorConfiguration
primeGraph
azimuth
.cxx_construct
_graph
initWithArray:resourcePath:
graphWithConfiguration:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
initWithFeaturePrintType:overlapFactor:
isEqualToCreateFeaturePrintRequest:
featurePrintType
setFeaturePrintType:
overlapFactor
setOverlapFactor:
numberWithInteger:
decodeIntegerForKey:
decodeFloatForKey:
encodeInteger:forKey:
encodeFloat:forKey:
_overlapFactor
_featurePrintType
updateGraph
logMelSpectrogramModel
logMelSpectrogramModelDescription
initWithMLCustomModel:modelDescription:
embeddingModel
modelSampleRate:orDefaultRate:
modelBlockSize:
vggishFeatureEmbeddingInputShape
numberOfElements:
vggishFeatureEmbeddingOutputShape
vggishFrontEndProcessingModelDescription
initWithModelDescription:parameterDictionary:error:
model
inputProvider
input
outputProvider
featureNames
count
allObjects
firstObject
featureValueForName:
type
multiArrayValue
initWithFeaturePrintType:featureVector:
_logMelSpectrogramModel
_logMelSpectrogramModelDescription
_featureEmbeddingModel
_systemConfiguration
_timeDomainBlockSize
_resultsToDiscardCount
dataWithBytes:length:
addAudio:
endAudio
getLatestSuperVector
initWithConfigFile:configRoot:sampleRate:delegate:queue:
resetForNewRequest
isEqualToSpeechDistanceRequest:
setCurrentFrameValue:
setMeanValue:
setStandardDeviation:
setServerInfo:
setState:
initWithServerInfo:state:
serverInfo
state
_serverInfo
_state
xpcRequest:didProduceResult:completionHandler:
xpcRequest:didFailWithError:completionHandler:
xpcRequestDidComplete:completionHandler:
interfaceWithProtocol:
setClasses:forSelector:argumentIndex:ofReply:
raise:format:
initWithReceiver:
synchronousRemoteObjectProxyWithErrorHandler:
xpcAddRequest:withObserver:completionHandler:
xpcRemoveRequest:completionHandler:
xpcRemoveAllRequestsWithCompletionHandler:
xpcStartWithCompletionHandler:
xpcStopWithCompletionHandler:
addRequest:withObserver:error:
removeRequest:
removeAllRequests
start
stop
initWithSubscriber:
_subscriber
creationFlags
setCreationFlags:
configureAudioQueue
setConfigureAudioQueue:
_creationFlags
_configureAudioQueue
enableAlwaysOnAudioRouting:
setChannelAssignment:onQueue:
builtInMicrophoneAnalysisChannelNumberOrDefault:
createDefaultAudioQueueConfigurationUsingChannelNumber:
sharedInstance
availableInputs
countByEnumeratingWithState:objects:count:
portType
isEqualToString:
builtInMicrophoneDeviceUID
createSiriAudioQueueConfigurationUsingChannelNumber:
audioQueueConfiguration
setFileName:
setError:
initWithFileName:error:
fileName
error
_fileName
_error
allValidSoundIdentifiers
queue
launchTaskWithQueue:completionHandler:resultsHandler:
errorWithCode:underlyingError:message:
_removeRequest:error:
taskCompletionMap
valueWithPointer:
setObject:forKeyedSubscript:
objectForKey:
removeObjectForKey:
requests
addRequest:completionHandler:resultsHandler:
setRequests:
setTaskCompletionMap:
setQueue:
_requests
_taskCompletionMap
_queue
initWithSampleRate:blockSize:magnitudeThreshold:
sampleRate
setSampleRate:
blockSize
setBlockSize:
magnitudeThreshold
setMagnitudeThreshold:
isEqualToDetectSignalThresholdRequest:
numberWithUnsignedInt:
_detector
_blockSize
_sampleRate
_magnitudeThreshold
array
addObject:
UTF8String
dictionaryWithObjectsAndKeys:
errorWithDomain:code:userInfo:
isEqualToDirectionOfArrivalResult:
setWithArray:
decodeObjectOfClasses:forKey:
_azimuth
inputDescriptionsByName
allKeys
objectAtIndexedSubscript:
modelDescription
dictionaryWithObjects:forKeys:count:
initWithDictionary:error:
predictionFromFeatures:options:error:
outputDescriptionsByName
predictionsFromBatch:options:error:
_modelDescription
_model
registerAudioUnits
initWithAudioFile:overlapFactor:
initWithAudioFile:
_referenceAudioFile
processingFormat
length
setChannelIndex:
setPeakValue:
setPeakTime:
channelCount
_referenceSampleRate
_channelCount
_framesProcessed
initWithDictionary:resourcePath:
graphWithGraphInfo:
initWithPCMFormat:frameCapacity:
setFramePosition:
readIntoBuffer:error:
streamDescription
audioBufferList
createSystemAudioAnalyzer
setDelegate:
resume
endpoint
initWithListenerEndpoint:
setExportedInterface:
setExportedObject:
launchAsMachServiceWithName:
initWithMachServiceName:
launchWithResourceCoordinator:onXPCListener:
initWithResourceCoordinator:onListener:
launchDefaultServer
listener:shouldAcceptNewConnection:
connectLocally
_listener
_coordinator
initToConnectToMachServiceWithName:queue:
initWithMachServiceName:options:
setInterruptionHandler:
setInvalidationHandler:
newConnectionToMachServiceWithName:lostConnectionHandler:queue:
initWithConnectionGenerator:queue:
_handleLostConnection
setRemoteObjectInterface:
_connectionToServerWithInvalidationHandler:queue:
remoteObjectProxy
_remoteResourceCoordinatorWithInvalidationHandler:queue:
_createRemoteSystemAudioAnalyzerWithInvalidationHandler:queue:
defaultClient
createRemoteSystemAudioAnalyzerWithInvalidationHandler:queue:
_connectionToServerGenerator
_xpcConnectionToServer
_pendingInvalidationHandlers
meanValue
currentFrameValue
standardDeviation
isEqualToSpeechDistanceResult:
_currentFrameValue
_meanValue
_standardDeviation
userDefaults
boolForKey:
stringForKey:
integerForKey:
doubleForKey:
intValue
numberWithInt:
builtInMicrophoneAnalysisChannelNumber
instance
initWithSuiteName:
setUserDefaults:
registerDefaults:
enableSecondPassRecordingInDaemon
daemonRecordingPath
recordingDirectoryMaximumSizeBytes
recordingTimeToLiveSeconds
deleteRecordingsWithoutDetection
enableFileServer
fileServerRootDirectory
_userDefaults
setFiles:
setServerBasePath:
setDispatchQueue:
files
serverBasePath
identifier
sendRequestID:request:destinationID:options:responseHandler:
activateWithCompletion:
invalidate
initWithFiles:serverBasePath:serverInfo:
_files
_serverBasePath
_customModel
initWithModel:
_lock
userSuppliedInputFeatureNames:
userSuppliedOutputFeatureNames:
containsObject:
outputLabel
dataType
initWithIdentifier:
windowLengthFrames
completeTimingInfoInResult:windowLengthFrames:usingBox:
floatValue
setDetected:
featureExtractorConfiguration
initWithConfiguration:
_configuration
_detectorBoxName
_inputFeatureName
_outputConfidenceFeatureName
_outputDetectedFeatureName
objectForKeyedSubscript:
multiArrayConstraint
shape
stepSizeFrames
xpcCreateSystemAudioAnalyzerWithCompletionHandler:
_receiver
detected
isEqualToDetectionResult:
numberWithBool:
decodeBoolForKey:
encodeBool:forKey:
_detected
_identifier
createSecondPassController
twoPassConfiguration
analysisPassStrategy
initWithTwoPassConfiguration:createSecondPassControllerFunction:
_createSecondPassControllerFunction
_twoPassConfiguration
isEqualToSpeechUtteranceResult:
stringByAppendingPathComponent:
path
text
includePaths
substitutions
setPath:
setText:
setIncludePaths:
setSubstitutions:
_path
_text
_includePaths
_substitutions
value
containsOnlyAUStrips:
_value
_resourcePath
dspItems
setDspItems:
_dspItems
applyAUStrip:toGraph:
name
applyPropertyStrip:toGraph:
compileText:withSubstitutions:includingPaths:
compileFile:withSubstitutions:includingPaths:
setAUStrip:
dictionaryWithContentsOfFile:
setPropertyStrip:withResourcePath:
null
setObject:forKey:
sn_setSafeObject:forKey:
request:didProduceResult:
request:didFailWithError:
requestDidComplete:
initWithClient:queue:
selectAppropriateImplForThisProcess
initWithImpl:
configureNewAnalyzersToComputeInThisProcess:
addRequestInBackground:withObserver:
_impl
setFileItems:
initWithFileItems:
fileItems
_fileItems
dictionary
initWithRemoteAnalyzerGenerator:queue:
_invalidateAnalyzer:
_invalidateActiveAnalyzer
copy
_removeAllRequests
connectionLostError
sleepForTimeInterval:
_acquireSystemAudioAnalyzer
removeAllObjects
_addRequest:withObserver:
_removeRequest:
invalidateActiveAnalyzer
_registeredRequests
_analyzer
_generator
setIdentifier:
setIdsDeviceID:
setModel:
setName:
initWithIdentifier:idsDeviceID:model:name:
idsDeviceID
_idsDeviceID
_name
isEqualToSpeechEmotionRequest:
bytes
psrAudioProcessor:hasSpeakerVector:speakerVectorSize:processedAudioDurationMs:
psrAudioProcessor:finishedWithFinalSpeakerVector:speakerVectorSize:processedAudioDurationMs:
pathWithComponents:
initWithSampleRate:channelCount:
initWithDouble:
initWithUnsignedInt:
setChannelCount:
predictedProbabilitiesName
predictedFeatureName
exceptionWithName:reason:userInfo:
feedbackConnections:
dictionaryValue
arrayWithCapacity:
_init
doubleValue
compare:
sortedArrayUsingComparator:
subarrayWithRange:
setClassifications:
completeTimingInfoInResult:usingBox:modelBlockSize:
initWithMLModel:overlapFactor:error:
_modelBlockSize
_feedbackConnections
initWithMLModel:error:
isEqualToClassifySoundRequest:
initForReading:commonFormat:interleaved:error:
initWithFormat:
framePosition
readIntoBuffer:frameCount:error:
sendErrorToAllRequests:
analyzeAudioBuffer:atAudioFramePosition:
frameLength
completeAnalysis
analyze
detailedDescription
initWithURL:error:
analyzeWithCompletionHandler:
cancelAnalysis
_audioFile
_streamAnalyzer
_wasCancelled
initWithRequestType:
decisionDelay
requestType
isEqualToDetectSpeechUtteranceRequest:
_requestType
softVAD
hardVAD
clientResultsFromProcessorResults:
clientSampleTimeFromSampleTime:fromBox:
clientSampleRate
dictionaryWithCapacity:
timeConversionDictionary
addEntriesFromDictionary:
valueForKey:
CMTimeValue
convertTime:fromBox:usingConverter:
valueWithCMTime:
setValue:forKey:
convertTimeRange:fromBox:usingConverter:
initWithAnalyzer:completionHandler:resultsHandler:timeConverter:
handleDSPGraphPostRenderCallbackFromBox:numFrames:
handleAnalyzerCompletion
handleAnalyzerError:
requestDidReturnError:
primeAnalyzerGraph
requestState
setRequestState:
_timeConverter
_resultsHandler
_completionHandler
_requestState
initWithSoundIdentifier:shouldUseTwoPassDetection:
initWithSoundIdentifier:analysisPassStrategy:
createTwoPassConfigurationWithSoundIdentifier:
initWithVGGishBasedMLModel:soundIdentifier:
initWithFirstPassRequest:secondPassRequest:historicalDataAmount:
initWithSecondPassBeginThreshold:secondPassEndThreshold:secondPassHangoverPeriod:firstPassResultToComparableFunction:secondPassResultToComparableFunction:
soundIdentifier
isEqualToDetectSoundRequest:
initWithSoundIdentifier:
_soundIdentifier
_analysisPassStrategy
sharedLockedVGGishFeatureExtractor
sharedLockedVGGishNeuralNetDetectorHeadWithSoundIdentifier:
detectorConfigurationWithLogMelBasedFeatureExtractor:detectorHead:soundIdentifier:
sharedLockedSoundPrint100kFeatureExtractor
sharedLockedSoundPrint100kNeuralNetDetectorHeadWithSoundIdentifier:
initWithModel:approximateOverlapFactor:
initWithMLModel:outputLabel:sampleRate:windowLengthFrames:stepSizeFrames:featureExtractorConfiguration:
vggishDetectorConfigurationWithSoundIdentifier:
soundPrint100kDetectorConfigurationWithSoundIdentifier:
detectorHeadConfigurationForSoundIdentifier:analysisPassStrategy:
initWithBox:fromGraph:
startRecordingPort:toFile:
stopRecordingPort:
startInjectingPort:toFile:shouldLoop:
stopInjectingPort:
numInputs
numOutputs
getParameterList:numParameterIDs:inScope:
getParameterInfo:forID:inScope:
getParameter:forID:scope:element:
hasParameter:scope:element:
setParameter:forID:scope:element:bufferOffset:
_box
idsDeviceIdentifier
setLocalDeviceUpdatedHandler:
setDeviceLostHandler:
setDeviceFoundHandler:
setDeviceChangedHandler:
valueForEntitlement:error:
boolValue
isCurrentProcessEntitledToHostDaemon
createFileServer
currentRunLoop
isInternalBuild
initWithRootDirectory:
_fileServer
allValues
isEqualToArray:
modelOutputBlockSize:
isEqualToLogMelBasedFeatureExtractorConfiguration:
createProcessorWithError:
logMelStepSize
outputFeatureSize
_windowLengthFrames
_stepSizeFrames
_logMelStepSize
_outputFeatureSize
setInterface:forSelector:argumentIndex:ofReply:
strongToWeakObjectsMapTable
sharedLockedModelWithKey:orCreateNewModelWithWithFunction:
_vendedModels
createModelOfClass:
vggishFeatureExtractorModelClass
sharedLockedModelOfClass:
vggishModelClassForSoundIdentifier:
soundPrint100kFeatureExtractorModelClass
soundprint100kModelClassForSoundIdentifier:
createVGGishFeatureExtractor
createVGGishNeuralNetDetectorHeadWithSoundIdentifier:
createSoundPrint100kFeatureExtractor
createSoundPrint100kNeuralNetDetectorHeadWithSoundIdentifier:
featureVector
isEqualToFeaturePrint:
_featureVector
initWithShape:dataType:error:
dataPointer
request
setRequest:
resultsHandler
setResultsHandler:
completionHandler
setCompletionHandler:
analyzerHost
setAnalyzerHost:
sharedProcessor
setSharedProcessor:
configured
setConfigured:
configurationError
setConfigurationError:
_configured
_request
_analyzerHost
_sharedProcessor
_configurationError
isFormatPCM:
updateProcessingTreeFormat:
stopRecording
dealloc
removeObject:
addRequest:completionHandler:resultsHandler:error:
addResult:
indexOfObjectIdenticalTo:
completionHandlerWithClientCompletionHandler:forRequest:
resultsHandlerWithClientResultsHandler:forRequest:
createAnalyzerInfoForRequest:completionHandler:resultsHandler:error:
configureAnalyzer:withFormat:
arrayByAddingObject:
arrayWithArray:
removeObjectAtIndex:
removeAnalyzerInfoForRequest:
configureAnalysisTreeWithFormat:
sharedProcessorWithConfiguration:
updateTreeProcessingContexts
format
splitBuffer:intoBuffersWithFrameCount:
handleAnalyzeAudioBufferError
date
setDateFormat:
stringFromDate:
stringByAppendingPathExtension:
initWithDirectoryPath:fileNameWithoutExtension:dateString:soundIdentifier:
initWithDSPGraph:
stopRecordingBoxesInGraph:
directoryPath
fileNameWithoutExtension
audioFileFrameCount:
detectionResults
detectionCountInResults:
defaultManager
removeItemAtPath:error:
writeResultsToFileWithAudioFrameCount:error:
analyzerInfoForRequest:
analyzeAudioBufferList:withAudioFrameCount:atAudioFramePosition:
writeDSPGraphDotFilesToDirectory:
startRecordingToDirectory:requestDescription:error:
_processorCache
_processingContexts
_processingTree
_currentFormat
_analyzerInfos
_resultsLogger
_shouldRebuildProcessingTree
startRecordingFirstBoxInGraph:toDirectory:withFileName:error:
initWithInputSensitivity:
isEqualToMeasureLKFSRequest:
inputSensitivity
_inputSensitivity
setQueryPath:
setServiceType:
setDestinationID:
queryPath
performQuery:
initWithServerInfo:queryPath:
_queryPath
mutableAudioBufferList
setFrameLength:
frameCapacity
vggishFrontEndProcessingInputShape
vggishFrontEndProcessingOutputShape
constraintWithShape:dataType:
featureDescriptionWithName:type:optional:constraints:
initWithInputDescriptions:outputDescriptions:predictedFeatureName:predictedProbabilitiesName:metadata:
metadata
parseFeedbackConnectionsString:
destinationFeatureName
sourceFeatureName
userSuppliedFeatureNames:direction:
subtractSet:from:
minusSet:
whitespaceAndNewlineCharacterSet
componentsSeparatedByCharactersInSet:
componentsJoinedByString:
componentsSeparatedByString:
initWithSourceFeatureName:destinationFeatureName:
processInfo
processName
stringByReplacingOccurrencesOfString:withString:
stringByAppendingString:
_deleteWAVAndTextFilesInDirectory:createdBeforeDate:withRemainingDirectoryByteSizeLessThan:
contentsOfDirectoryAtPath:error:
mutableCopy
predicateWithFormat:
filterUsingPredicate:
fileCreationDate:
sortUsingComparator:
diskSpaceRemainingBytesContainingDirectory:
unsignedLongLongValue
fileSizeBytes:
stringByDeletingPathExtension
attributesOfItemAtPath:error:
attributesOfFileSystemForPath:error:
fileURLWithPath:
initForReading:error:
valueForEntitlement:fromTask:error:
silenceUnfilledFramesInBuffer:
copyAudioBufferList:to:frameCount:bytesPerFrame:
modelInputBlockSize:
isRunningInDaemon
loggingPrefixForRequest:
deleteWAVAndTextFilesInDirectory:createdBeforeDate:withRemainingDirectoryByteSizeLessThan:
automaticallyNotifiesObserversForKey:
willChangeValueForKey:
didChangeValueForKey:
results
clearResults
errors
clearErrors
clearCompleteCount
completeCount
_results
_errors
_completeCount
initWithCompletionHandler:resultsHandler:
_sourceFeatureName
_destinationFeatureName
initWithStreamDescription:
setVariableSliceDuration:forSampleRate:
sliceDurationInSamples
initialized
configure
unconfigure
initialize
uninitialize
reset
getParameter:forID:
hasParameter:
setParameter:forID:
getPropertySize:isWritable:forID:
getProperty:withSize:forID:
setProperty:withSize:forID:
boxWithName:
boxes
numberOfInputs
numberOfOutputs
writeDotFileToPath:
featureValueWithMultiArray:
initWithFeatureDescription:allInputFeatureNames:
setFeatureValue:forFeatureName:
setInput:
_featureDescription
_featureCache
_allInputFeatureNames
_input
feedbackConnections
setFeedbackConnections:
setInputProvider:
setOutputProvider:
_inputProvider
_outputProvider
compileModelAtURL:error:
modelWithContentsOfURL:error:
filename
setFilename:
fileSize
setFileSize:
itemURL
setItemURL:
initWithFileItem:
_filename
_fileSize
_itemURL
offset
setOffset:
isEqualToAudioOffsetResult:
_offset
setServerFilePaths:
setLocalDestinationPath:
deregisterRequestID:
registerRequestID:options:handler:
getIdentitiesWithCompletion:
edPKData
serverFilePaths
flags
setFlags:
prepareTemplateAndReturnError:
localDestinationPath
fileURLWithPath:isDirectory:
setTemporaryDirectoryURL:
setReceivedItemHandler:
setPeerPublicKey:
setTargetID:
activate
initWithServerInfo:serverBasePath:serverFilePaths:localDestinationPath:
_serverFilePaths
_localDestinationPath
firstPassRequest
secondPassRequest
historicalDataAmount
_firstPassRequest
_secondPassRequest
_historicalDataAmount
handleAudioBufferCallbackForQueue:buffer:startTime:numberPacketDescriptions:packetDescriptions:
_stop
floatChannelData
initWithAudioTimeStamp:sampleRate:
initWithFormat:audioQueueConfiguration:
startWithBufferHandler:
_audioQueue
_recordFormat
_running
_audioQueueConfiguration
_clientBufferHandler
_transaction
anyObject
isAllowedShape:error:
preProcessCallback
initWithModelDescription:expectedInputShape:expectedOutputShape:graph:error:
setPreProcessCallback:
_inputConstraint
_outputConstraint
_scratchFloatSpace
_modelOutput
_preProcessCallback
removeRequestAsync:
_addRequest:completionHandler:resultsHandler:error:
_addTwoPassRequest:completionHandler:resultsHandler:error:
_addSinglePassRequest:completionHandler:resultsHandler:error:
handleBeginSecondPassForRequest:secondPassController:completionHandler:resultsHandler:
setBeginSecondPassHandler:
handleEndSecondPassForRequest:
setEndSecondPassHandler:
firstPassDidProduceResult:
dateByAddingTimeInterval:
valueWithNonretainedObject:
shouldRecordSecondPass
secondPassRecordingPath
deleteWAVAndTextFilesCreatedBeforeLastWeekInDirectory:
secondPassDidProduceResult:
_removeTwoPassRequest:
_removeSinglePassRequest:
_analyzeAudioBuffer:atAudioFramePosition:
string
appendString:
_analyzerQueue
_firstPassAnalyzer
_secondPassAnalyzers
_ringBuffer
_ringBufferWriteBufferList
createUltronResultsDictionaryFromDetectionResults:
createUltronFinalDictionaryWithDetectionResults:dateString:fileNameWithoutExtension:soundIdenfifier:frameCount:
writeDictionaryAsJSON:fileNameWithoutExtension:directoryPath:error:
numberWithLongLong:
dataWithJSONObject:options:error:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
writeToFile:options:error:
_dateString
_wroteResults
_startingTime
_detectionResults
_directoryPath
_fileNameWithoutExtension
setLink:
link
setProgressHandler:
rootDirectory
addItem:
finish
server
createDefaultServer
setServer:
setRootDirectory:
_server
_link
_rootDirectory
setRootDirectoryURL:
pathExtension
boxName
setBoxName:
busIndex
setBusIndex:
_boxName
_busIndex
startRecordingWithBoxRecordingInfos:inGraph:toDirectory:error:
startRecordingBoxes:inGraph:toDirectory:error:
startInjectingBoxes:inGraph:error:
stopInjectingBoxesInGraph:
initWithSampleRate:blockSize:computationalDutyCycle:graphIsDeadEnded:shouldThrowException:
computationalDutyCycle
setComputationalDutyCycle:
graphIsDeadEnded
setGraphIsDeadEnded:
shouldThrowException
setShouldThrowException:
isEqualToNullRequest:
_graphIsDeadEnded
_shouldThrowException
_computationalDutyCycle
initWithCommonFormat:sampleRate:channels:interleaved:
defaultCenter
handleAVAudioSessionInterruption:
addObserver:selector:name:object:
handleAVAudioSessionRouteChange:
handleAVAudioSessionMediaServicesLost:
handleAVAudioSessionMediaServicesReset:
_addRequest:withObserver:error:
indexOfObject:
startAudio
stopAudio
sampleTime
handleAudioStreamInterrupted
_dispatchQueue
_recordingQueue
_recordingState
_clientStartedAnalysis
stringMapFromStringDictionary:
stringVectorFromStringArray:
_interpreter
isEqualToEstimateAudioOffsetRequest:
updateMinMaxDelayWithSampleRate:micDelay:refDelay:eclen:
setMinimumObservableOffset:
minimumObservableOffset
setMaximumObservableOffset:
maximumObservableOffset
_minimumObservableOffset
_maximumObservableOffset
classifications
isEqualToClassificationResult:
_classifications
isEqualToClassification:
isEqualToSignalThresholdResult:
beginSecondPassHandler
endSecondPassHandler
_secondPassBeginThreshold
_secondPassEndThreshold
_secondPassHangoverPeriod
_secondPassTriggerTime
_firstResultBelowEndThresholdStartTime
_secondPassIsActive
_firstPassResultToComparableFunction
_secondPassResultToComparableFunction
_beginSecondPassHandler
_endSecondPassHandler
_featureExtractorConfiguration
_outputLabel
audioProcessorWithConfiguration:
createAudioProcessorWithConfiguration:
_activeProcessorsCache
isEqualToNullResult:
peakTime
peakValue
channelIndex
_peakValue
_channelIndex
_peakTime
remoteObjectProxyWithErrorHandler:
_remoteObservers
initWithSoundprint_Placeholder:
soundprint_Placeholder
setSoundprint_Placeholder:
_soundprint_Placeholder
initWithSigmoid:
Sigmoid
setSigmoid:
_Sigmoid
pathForResource:ofType:
URLOfModelInThisBundle
initWithContentsOfURL:error:
initWithContentsOfURL:configuration:error:
modelWithContentsOfURL:configuration:error:
initWithMLModel:
loadContentsOfURL:configuration:completionHandler:
predictionFromFeatures:error:
initWithFeatureProviderArray:
featuresAtIndex:
loadWithConfiguration:completionHandler:
initWithConfiguration:error:
predictionFromSoundprint_Placeholder:error:
predictionsFromInputs:options:error:
initWithInput1:stateIn:detectedHistoryIn:
initWithInput1:
input1
setInput1:
stateIn
setStateIn:
detectedHistoryIn
setDetectedHistoryIn:
_input1
_stateIn
_detectedHistoryIn
initWithInput_1:Confidence:Detected:detectedHistoryOut:
input_1
setInput_1:
Confidence
Detected
detectedHistoryOut
setDetectedHistoryOut:
_input_1
_Confidence
_Detected
_detectedHistoryOut
predictionFromInput1:stateIn:detectedHistoryIn:error:
initWithOutput1:
output1
setOutput1:
_output1
predictionFromInput1:error:
B16@0:8
@24@0:8^{_NSZone=}16
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
{?={?=qiIq}{?=qiIq}}16@0:8
v64@0:8{?={?=qiIq}{?=qiIq}}16
f16@0:8
v20@0:8f16
{?="start"{?="value"q"timescale"i"flags"I"epoch"q}"duration"{?="value"q"timescale"i"flags"I"epoch"q}}
d16@0:8
v24@0:8d16
@24@0:8^@16
@"<SNAnalyzing>"24@0:8^@16
v16@0:8
@"NSArray"
B32@0:8@16^@24
{shared_ptr<DSPGraph::Graph>=^{Graph}^{__shared_weak_count}}16@0:8
B32@0:8@"SNSystemConfiguration"16^@24
@28@0:8^{Box=^^?^{Graph}^{IsoGroup}^{Subset}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}q{vector<DSPGraph::InputPort, std::__1::allocator<DSPGraph::InputPort> >=^{InputPort}^{InputPort}{__compressed_pair<DSPGraph::InputPort *, std::__1::allocator<DSPGraph::InputPort> >=^{InputPort}}}{vector<DSPGraph::OutputPort, std::__1::allocator<DSPGraph::OutputPort> >=^{OutputPort}^{OutputPort}{__compressed_pair<DSPGraph::OutputPort *, std::__1::allocator<DSPGraph::OutputPort> >=^{OutputPort}}}{unordered_set<DSPGraph::Box *, std::__1::hash<DSPGraph::Box *>, std::__1::equal_to<DSPGraph::Box *>, std::__1::allocator<DSPGraph::Box *> >={__hash_table<DSPGraph::Box *, std::__1::hash<DSPGraph::Box *>, std::__1::equal_to<DSPGraph::Box *>, std::__1::allocator<DSPGraph::Box *> >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>, std::__1::allocator<std::__1::__hash_node<DSPGraph::Box *, void *> > >={__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>=^{__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>}}}{__compressed_pair<unsigned long, std::__1::hash<DSPGraph::Box *> >=Q}{__compressed_pair<float, std::__1::equal_to<DSPGraph::Box *> >=f}}}{vector<DSPGraph::ParameterTap, std::__1::allocator<DSPGraph::ParameterTap> >=^{ParameterTap}^{ParameterTap}{__compressed_pair<DSPGraph::ParameterTap *, std::__1::allocator<DSPGraph::ParameterTap> >=^{ParameterTap}}}{vector<DSPGraph::PropertyTap, std::__1::allocator<DSPGraph::PropertyTap> >=^{PropertyTap}^{PropertyTap}{__compressed_pair<DSPGraph::PropertyTap *, std::__1::allocator<DSPGraph::PropertyTap> >=^{PropertyTap}}}{vector<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> >, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> > > >=^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> >}^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> >}{__compressed_pair<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> > *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> > > >=^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> >}}}{vector<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> >, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> > > >=^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> >}^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> >}{__compressed_pair<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> > *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> > > >=^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> >}}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{vector<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> >, std::__1::allocator<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> > > >=^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> >}^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> >}{__compressed_pair<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> > *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> > > >=^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> >}}}{Set<DSPGraph::Analyzer *>=^{Member}Q}{map<std::__1::pair<unsigned int, int>, long long, std::__1::less<std::__1::pair<unsigned int, int> >, std::__1::allocator<std::__1::pair<const std::__1::pair<unsigned int, int>, long long> > >={__tree<std::__1::__value_type<std::__1::pair<unsigned int, int>, long long>, std::__1::__map_value_compare<std::__1::pair<unsigned int, int>, std::__1::__value_type<std::__1::pair<unsigned int, int>, long long>, std::__1::less<std::__1::pair<unsigned int, int> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<unsigned int, int>, long long> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<unsigned int, int>, long long>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<unsigned int, int>, std::__1::__value_type<std::__1::pair<unsigned int, int>, long long>, std::__1::less<std::__1::pair<unsigned int, int> >, true> >=Q}}}{function<void (double)>={__value_func<void (double)>={type=[32C]}^{__base<void (double)>}}}{function<void (DSPGraph::Box *, int)>={__value_func<void (DSPGraph::Box *, int)>={type=[32C]}^{__base<void (DSPGraph::Box *, int)>}}}{function<void (DSPGraph::Box *, int)>={__value_func<void (DSPGraph::Box *, int)>={type=[32C]}^{__base<void (DSPGraph::Box *, int)>}}}BBBBq}16i24
^{Box=^^?^{Graph}^{IsoGroup}^{Subset}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}q{vector<DSPGraph::InputPort, std::__1::allocator<DSPGraph::InputPort> >=^{InputPort}^{InputPort}{__compressed_pair<DSPGraph::InputPort *, std::__1::allocator<DSPGraph::InputPort> >=^{InputPort}}}{vector<DSPGraph::OutputPort, std::__1::allocator<DSPGraph::OutputPort> >=^{OutputPort}^{OutputPort}{__compressed_pair<DSPGraph::OutputPort *, std::__1::allocator<DSPGraph::OutputPort> >=^{OutputPort}}}{unordered_set<DSPGraph::Box *, std::__1::hash<DSPGraph::Box *>, std::__1::equal_to<DSPGraph::Box *>, std::__1::allocator<DSPGraph::Box *> >={__hash_table<DSPGraph::Box *, std::__1::hash<DSPGraph::Box *>, std::__1::equal_to<DSPGraph::Box *>, std::__1::allocator<DSPGraph::Box *> >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>, std::__1::allocator<std::__1::__hash_node<DSPGraph::Box *, void *> > >={__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>=^{__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>}}}{__compressed_pair<unsigned long, std::__1::hash<DSPGraph::Box *> >=Q}{__compressed_pair<float, std::__1::equal_to<DSPGraph::Box *> >=f}}}{vector<DSPGraph::ParameterTap, std::__1::allocator<DSPGraph::ParameterTap> >=^{ParameterTap}^{ParameterTap}{__compressed_pair<DSPGraph::ParameterTap *, std::__1::allocator<DSPGraph::ParameterTap> >=^{ParameterTap}}}{vector<DSPGraph::PropertyTap, std::__1::allocator<DSPGraph::PropertyTap> >=^{PropertyTap}^{PropertyTap}{__compressed_pair<DSPGraph::PropertyTap *, std::__1::allocator<DSPGraph::PropertyTap> >=^{PropertyTap}}}{vector<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> >, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> > > >=^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> >}^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> >}{__compressed_pair<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> > *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> > > >=^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> >}}}{vector<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> >, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> > > >=^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> >}^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> >}{__compressed_pair<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> > *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> > > >=^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> >}}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{vector<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> >, std::__1::allocator<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> > > >=^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> >}^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> >}{__compressed_pair<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> > *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> > > >=^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> >}}}{Set<DSPGraph::Analyzer *>=^{Member}Q}{map<std::__1::pair<unsigned int, int>, long long, std::__1::less<std::__1::pair<unsigned int, int> >, std::__1::allocator<std::__1::pair<const std::__1::pair<unsigned int, int>, long long> > >={__tree<std::__1::__value_type<std::__1::pair<unsigned int, int>, long long>, std::__1::__map_value_compare<std::__1::pair<unsigned int, int>, std::__1::__value_type<std::__1::pair<unsigned int, int>, long long>, std::__1::less<std::__1::pair<unsigned int, int> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<unsigned int, int>, long long> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<unsigned int, int>, long long>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<unsigned int, int>, std::__1::__value_type<std::__1::pair<unsigned int, int>, long long>, std::__1::less<std::__1::pair<unsigned int, int> >, true> >=Q}}}{function<void (double)>={__value_func<void (double)>={type=[32C]}^{__base<void (double)>}}}{function<void (DSPGraph::Box *, int)>={__value_func<void (DSPGraph::Box *, int)>={type=[32C]}^{__base<void (DSPGraph::Box *, int)>}}}{function<void (DSPGraph::Box *, int)>={__value_func<void (DSPGraph::Box *, int)>={type=[32C]}^{__base<void (DSPGraph::Box *, int)>}}}BBBBq}16@0:8
@"NSArray"28@0:8^{Box=^^?^{Graph}^{IsoGroup}^{Subset}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}q{vector<DSPGraph::InputPort, std::__1::allocator<DSPGraph::InputPort> >=^{InputPort}^{InputPort}{__compressed_pair<DSPGraph::InputPort *, std::__1::allocator<DSPGraph::InputPort> >=^{InputPort}}}{vector<DSPGraph::OutputPort, std::__1::allocator<DSPGraph::OutputPort> >=^{OutputPort}^{OutputPort}{__compressed_pair<DSPGraph::OutputPort *, std::__1::allocator<DSPGraph::OutputPort> >=^{OutputPort}}}{unordered_set<DSPGraph::Box *, std::__1::hash<DSPGraph::Box *>, std::__1::equal_to<DSPGraph::Box *>, std::__1::allocator<DSPGraph::Box *> >={__hash_table<DSPGraph::Box *, std::__1::hash<DSPGraph::Box *>, std::__1::equal_to<DSPGraph::Box *>, std::__1::allocator<DSPGraph::Box *> >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>, std::__1::allocator<std::__1::__hash_node<DSPGraph::Box *, void *> > >={__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>=^{__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>}}}{__compressed_pair<unsigned long, std::__1::hash<DSPGraph::Box *> >=Q}{__compressed_pair<float, std::__1::equal_to<DSPGraph::Box *> >=f}}}{vector<DSPGraph::ParameterTap, std::__1::allocator<DSPGraph::ParameterTap> >=^{ParameterTap}^{ParameterTap}{__compressed_pair<DSPGraph::ParameterTap *, std::__1::allocator<DSPGraph::ParameterTap> >=^{ParameterTap}}}{vector<DSPGraph::PropertyTap, std::__1::allocator<DSPGraph::PropertyTap> >=^{PropertyTap}^{PropertyTap}{__compressed_pair<DSPGraph::PropertyTap *, std::__1::allocator<DSPGraph::PropertyTap> >=^{PropertyTap}}}{vector<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> >, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> > > >=^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> >}^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> >}{__compressed_pair<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> > *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> > > >=^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> >}}}{vector<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> >, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> > > >=^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> >}^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> >}{__compressed_pair<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> > *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> > > >=^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> >}}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{vector<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> >, std::__1::allocator<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> > > >=^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> >}^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> >}{__compressed_pair<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> > *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> > > >=^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> >}}}{Set<DSPGraph::Analyzer *>=^{Member}Q}{map<std::__1::pair<unsigned int, int>, long long, std::__1::less<std::__1::pair<unsigned int, int> >, std::__1::allocator<std::__1::pair<const std::__1::pair<unsigned int, int>, long long> > >={__tree<std::__1::__value_type<std::__1::pair<unsigned int, int>, long long>, std::__1::__map_value_compare<std::__1::pair<unsigned int, int>, std::__1::__value_type<std::__1::pair<unsigned int, int>, long long>, std::__1::less<std::__1::pair<unsigned int, int> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<unsigned int, int>, long long> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<unsigned int, int>, long long>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<unsigned int, int>, std::__1::__value_type<std::__1::pair<unsigned int, int>, long long>, std::__1::less<std::__1::pair<unsigned int, int> >, true> >=Q}}}{function<void (double)>={__value_func<void (double)>={type=[32C]}^{__base<void (double)>}}}{function<void (DSPGraph::Box *, int)>={__value_func<void (DSPGraph::Box *, int)>={type=[32C]}^{__base<void (DSPGraph::Box *, int)>}}}{function<void (DSPGraph::Box *, int)>={__value_func<void (DSPGraph::Box *, int)>={type=[32C]}^{__base<void (DSPGraph::Box *, int)>}}}BBBBq}16i24
{shared_ptr<DSPGraph::Graph>="__ptr_"^{Graph}"__cntrl_"^{__shared_weak_count}}
q16@0:8
v24@0:8q16
@28@0:8q16f24
@"<MLCustomModel>"
@"MLModelDescription"
@"MLModel"
@"SNSystemConfiguration"
@32@0:8@16Q24
v24@0:8Q16
@"SNFileServerInfo"
v40@0:8@16@24@?32
v32@0:8@16@?24
v40@0:8@"<SNRequest>"16@"<SNResult>"24@?<v@?>32
v40@0:8@"<SNRequest>"16@"NSError"24@?<v@?>32
v32@0:8@"<SNRequest>"16@?<v@?>24
B40@0:8@16@24^@32
B40@0:8@"<SNRequest>"16@"<SNResultsObserving>"24^@32
v24@0:8@"<SNRequest>"16
@"<SNSystemAudioAnalyzerXPCProtocol><NSXPCProxyCreating>"
I16@0:8
v20@0:8I16
@?16@0:8
v24@0:8@?16
@20@0:8I16
v24@0:8^{OpaqueAudioQueue=}16
v28@0:8I16^{OpaqueAudioQueue=}20
@32@0:8@16@24
@"NSString"
@"NSError"
@?40@0:8@16@?24@?32
@?<v@?>40@0:8@"NSObject<OS_dispatch_queue>"16@?<v@?@"NSError">24@?<v@?@"<SNResult>">32
v40@0:8@16@?24@?32
v32@0:8@16@24
@"NSMutableArray"
@"NSMutableDictionary"
@"NSObject<OS_dispatch_queue>"
@"SNDetectSignalThresholdRequestImpl"
@36@0:8d16i24d28
@40@0:8q16@24@32
v48@0:8^@16q24@32@40
@40@0:8@16@24^@32
@40@0:8@"MLModelDescription"16@"NSDictionary"24^@32
@"<MLFeatureProvider>"40@0:8@"<MLFeatureProvider>"16@"MLPredictionOptions"24^@32
@"<MLBatchProvider>"40@0:8@"<MLBatchProvider>"16@"MLPredictionOptions"24^@32
@"AVAudioFile"
@32@0:8@16d24
@"<SNSystemAudioAnalyzerProtocol>"16@0:8
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"NSXPCListener"
@"SNSystemServiceResourceCoordinator"
@40@0:8@16@?24@32
@32@0:8@?16@24
@"NSXPCConnection"
I20@0:8I16
@"NSUserDefaults"
@40@0:8@16@24@32
@"MLModelDescription"16@0:8
@"<SNMLModel>"
{mutex="__m_"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}}
v36@0:8@16I24^{Box=^^?^{Graph}^{IsoGroup}^{Subset}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}q{vector<DSPGraph::InputPort, std::__1::allocator<DSPGraph::InputPort> >=^{InputPort}^{InputPort}{__compressed_pair<DSPGraph::InputPort *, std::__1::allocator<DSPGraph::InputPort> >=^{InputPort}}}{vector<DSPGraph::OutputPort, std::__1::allocator<DSPGraph::OutputPort> >=^{OutputPort}^{OutputPort}{__compressed_pair<DSPGraph::OutputPort *, std::__1::allocator<DSPGraph::OutputPort> >=^{OutputPort}}}{unordered_set<DSPGraph::Box *, std::__1::hash<DSPGraph::Box *>, std::__1::equal_to<DSPGraph::Box *>, std::__1::allocator<DSPGraph::Box *> >={__hash_table<DSPGraph::Box *, std::__1::hash<DSPGraph::Box *>, std::__1::equal_to<DSPGraph::Box *>, std::__1::allocator<DSPGraph::Box *> >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>, std::__1::allocator<std::__1::__hash_node<DSPGraph::Box *, void *> > >={__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>=^{__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>}}}{__compressed_pair<unsigned long, std::__1::hash<DSPGraph::Box *> >=Q}{__compressed_pair<float, std::__1::equal_to<DSPGraph::Box *> >=f}}}{vector<DSPGraph::ParameterTap, std::__1::allocator<DSPGraph::ParameterTap> >=^{ParameterTap}^{ParameterTap}{__compressed_pair<DSPGraph::ParameterTap *, std::__1::allocator<DSPGraph::ParameterTap> >=^{ParameterTap}}}{vector<DSPGraph::PropertyTap, std::__1::allocator<DSPGraph::PropertyTap> >=^{PropertyTap}^{PropertyTap}{__compressed_pair<DSPGraph::PropertyTap *, std::__1::allocator<DSPGraph::PropertyTap> >=^{PropertyTap}}}{vector<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> >, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> > > >=^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> >}^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> >}{__compressed_pair<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> > *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> > > >=^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> >}}}{vector<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> >, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> > > >=^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> >}^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> >}{__compressed_pair<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> > *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> > > >=^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> >}}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{vector<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> >, std::__1::allocator<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> > > >=^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> >}^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> >}{__compressed_pair<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> > *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> > > >=^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> >}}}{Set<DSPGraph::Analyzer *>=^{Member}Q}{map<std::__1::pair<unsigned int, int>, long long, std::__1::less<std::__1::pair<unsigned int, int> >, std::__1::allocator<std::__1::pair<const std::__1::pair<unsigned int, int>, long long> > >={__tree<std::__1::__value_type<std::__1::pair<unsigned int, int>, long long>, std::__1::__map_value_compare<std::__1::pair<unsigned int, int>, std::__1::__value_type<std::__1::pair<unsigned int, int>, long long>, std::__1::less<std::__1::pair<unsigned int, int> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<unsigned int, int>, long long> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<unsigned int, int>, long long>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<unsigned int, int>, std::__1::__value_type<std::__1::pair<unsigned int, int>, long long>, std::__1::less<std::__1::pair<unsigned int, int> >, true> >=Q}}}{function<void (double)>={__value_func<void (double)>={type=[32C]}^{__base<void (double)>}}}{function<void (DSPGraph::Box *, int)>={__value_func<void (DSPGraph::Box *, int)>={type=[32C]}^{__base<void (DSPGraph::Box *, int)>}}}{function<void (DSPGraph::Box *, int)>={__value_func<void (DSPGraph::Box *, int)>={type=[32C]}^{__base<void (DSPGraph::Box *, int)>}}}BBBBq}28
@"SNDetectorHeadConfiguration"
v24@0:8@?<v@?@"<SNSystemAudioAnalyzerXPCProtocol>">16
@"<SNResourceCoordinatorProtocol>"
v20@0:8B16
@"<SNSecondPassController>"16@0:8
@"SNTwoPassConfiguration"16@0:8
@32@0:8@16@?24
@"SNTwoPassConfiguration"
@"NSDictionary"
v32@0:8@"<SNRequest>"16@"<SNResult>"24
v32@0:8@"<SNRequest>"16@"NSError"24
@"<SNResultsObserving>"
@"<SNSystemAudioAnalyzerProtocol>"
@48@0:8@16@24@32@40
v48@0:8@16@24Q32Q40
v48@0:8@"EARSyncPSRAudioProcessor"16@"NSData"24Q32Q40
@28@0:8d16I24
v40@0:8@16^{Box=^^?^{Graph}^{IsoGroup}^{Subset}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}q{vector<DSPGraph::InputPort, std::__1::allocator<DSPGraph::InputPort> >=^{InputPort}^{InputPort}{__compressed_pair<DSPGraph::InputPort *, std::__1::allocator<DSPGraph::InputPort> >=^{InputPort}}}{vector<DSPGraph::OutputPort, std::__1::allocator<DSPGraph::OutputPort> >=^{OutputPort}^{OutputPort}{__compressed_pair<DSPGraph::OutputPort *, std::__1::allocator<DSPGraph::OutputPort> >=^{OutputPort}}}{unordered_set<DSPGraph::Box *, std::__1::hash<DSPGraph::Box *>, std::__1::equal_to<DSPGraph::Box *>, std::__1::allocator<DSPGraph::Box *> >={__hash_table<DSPGraph::Box *, std::__1::hash<DSPGraph::Box *>, std::__1::equal_to<DSPGraph::Box *>, std::__1::allocator<DSPGraph::Box *> >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>, std::__1::allocator<std::__1::__hash_node<DSPGraph::Box *, void *> > >={__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>=^{__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>}}}{__compressed_pair<unsigned long, std::__1::hash<DSPGraph::Box *> >=Q}{__compressed_pair<float, std::__1::equal_to<DSPGraph::Box *> >=f}}}{vector<DSPGraph::ParameterTap, std::__1::allocator<DSPGraph::ParameterTap> >=^{ParameterTap}^{ParameterTap}{__compressed_pair<DSPGraph::ParameterTap *, std::__1::allocator<DSPGraph::ParameterTap> >=^{ParameterTap}}}{vector<DSPGraph::PropertyTap, std::__1::allocator<DSPGraph::PropertyTap> >=^{PropertyTap}^{PropertyTap}{__compressed_pair<DSPGraph::PropertyTap *, std::__1::allocator<DSPGraph::PropertyTap> >=^{PropertyTap}}}{vector<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> >, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> > > >=^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> >}^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> >}{__compressed_pair<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> > *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> > > >=^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> >}}}{vector<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> >, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> > > >=^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> >}^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> >}{__compressed_pair<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> > *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> > > >=^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> >}}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{vector<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> >, std::__1::allocator<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> > > >=^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> >}^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> >}{__compressed_pair<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> > *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> > > >=^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> >}}}{Set<DSPGraph::Analyzer *>=^{Member}Q}{map<std::__1::pair<unsigned int, int>, long long, std::__1::less<std::__1::pair<unsigned int, int> >, std::__1::allocator<std::__1::pair<const std::__1::pair<unsigned int, int>, long long> > >={__tree<std::__1::__value_type<std::__1::pair<unsigned int, int>, long long>, std::__1::__map_value_compare<std::__1::pair<unsigned int, int>, std::__1::__value_type<std::__1::pair<unsigned int, int>, long long>, std::__1::less<std::__1::pair<unsigned int, int> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<unsigned int, int>, long long> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<unsigned int, int>, long long>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<unsigned int, int>, std::__1::__value_type<std::__1::pair<unsigned int, int>, long long>, std::__1::less<std::__1::pair<unsigned int, int> >, true> >=Q}}}{function<void (double)>={__value_func<void (double)>={type=[32C]}^{__base<void (double)>}}}{function<void (DSPGraph::Box *, int)>={__value_func<void (DSPGraph::Box *, int)>={type=[32C]}^{__base<void (DSPGraph::Box *, int)>}}}{function<void (DSPGraph::Box *, int)>={__value_func<void (DSPGraph::Box *, int)>={type=[32C]}^{__base<void (DSPGraph::Box *, int)>}}}BBBBq}24q32
@40@0:8@16d24^@32
@32@0:8@16^@24
@"SNAudioStreamAnalyzer"
@24@0:8q16
@"NSDictionary"16@0:8
{?=qiIq}56@0:8{?=qiIq}16^{Box=^^?^{Graph}^{IsoGroup}^{Subset}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}q{vector<DSPGraph::InputPort, std::__1::allocator<DSPGraph::InputPort> >=^{InputPort}^{InputPort}{__compressed_pair<DSPGraph::InputPort *, std::__1::allocator<DSPGraph::InputPort> >=^{InputPort}}}{vector<DSPGraph::OutputPort, std::__1::allocator<DSPGraph::OutputPort> >=^{OutputPort}^{OutputPort}{__compressed_pair<DSPGraph::OutputPort *, std::__1::allocator<DSPGraph::OutputPort> >=^{OutputPort}}}{unordered_set<DSPGraph::Box *, std::__1::hash<DSPGraph::Box *>, std::__1::equal_to<DSPGraph::Box *>, std::__1::allocator<DSPGraph::Box *> >={__hash_table<DSPGraph::Box *, std::__1::hash<DSPGraph::Box *>, std::__1::equal_to<DSPGraph::Box *>, std::__1::allocator<DSPGraph::Box *> >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>, std::__1::allocator<std::__1::__hash_node<DSPGraph::Box *, void *> > >={__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>=^{__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>}}}{__compressed_pair<unsigned long, std::__1::hash<DSPGraph::Box *> >=Q}{__compressed_pair<float, std::__1::equal_to<DSPGraph::Box *> >=f}}}{vector<DSPGraph::ParameterTap, std::__1::allocator<DSPGraph::ParameterTap> >=^{ParameterTap}^{ParameterTap}{__compressed_pair<DSPGraph::ParameterTap *, std::__1::allocator<DSPGraph::ParameterTap> >=^{ParameterTap}}}{vector<DSPGraph::PropertyTap, std::__1::allocator<DSPGraph::PropertyTap> >=^{PropertyTap}^{PropertyTap}{__compressed_pair<DSPGraph::PropertyTap *, std::__1::allocator<DSPGraph::PropertyTap> >=^{PropertyTap}}}{vector<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> >, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> > > >=^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> >}^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> >}{__compressed_pair<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> > *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> > > >=^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> >}}}{vector<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> >, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> > > >=^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> >}^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> >}{__compressed_pair<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> > *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> > > >=^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> >}}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{vector<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> >, std::__1::allocator<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> > > >=^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> >}^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> >}{__compressed_pair<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> > *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> > > >=^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> >}}}{Set<DSPGraph::Analyzer *>=^{Member}Q}{map<std::__1::pair<unsigned int, int>, long long, std::__1::less<std::__1::pair<unsigned int, int> >, std::__1::allocator<std::__1::pair<const std::__1::pair<unsigned int, int>, long long> > >={__tree<std::__1::__value_type<std::__1::pair<unsigned int, int>, long long>, std::__1::__map_value_compare<std::__1::pair<unsigned int, int>, std::__1::__value_type<std::__1::pair<unsigned int, int>, long long>, std::__1::less<std::__1::pair<unsigned int, int> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<unsigned int, int>, long long> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<unsigned int, int>, long long>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<unsigned int, int>, std::__1::__value_type<std::__1::pair<unsigned int, int>, long long>, std::__1::less<std::__1::pair<unsigned int, int> >, true> >=Q}}}{function<void (double)>={__value_func<void (double)>={type=[32C]}^{__base<void (double)>}}}{function<void (DSPGraph::Box *, int)>={__value_func<void (DSPGraph::Box *, int)>={type=[32C]}^{__base<void (DSPGraph::Box *, int)>}}}{function<void (DSPGraph::Box *, int)>={__value_func<void (DSPGraph::Box *, int)>={type=[32C]}^{__base<void (DSPGraph::Box *, int)>}}}BBBBq}40@48
{?={?=qiIq}{?=qiIq}}80@0:8{?={?=qiIq}{?=qiIq}}16^{Box=^^?^{Graph}^{IsoGroup}^{Subset}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}q{vector<DSPGraph::InputPort, std::__1::allocator<DSPGraph::InputPort> >=^{InputPort}^{InputPort}{__compressed_pair<DSPGraph::InputPort *, std::__1::allocator<DSPGraph::InputPort> >=^{InputPort}}}{vector<DSPGraph::OutputPort, std::__1::allocator<DSPGraph::OutputPort> >=^{OutputPort}^{OutputPort}{__compressed_pair<DSPGraph::OutputPort *, std::__1::allocator<DSPGraph::OutputPort> >=^{OutputPort}}}{unordered_set<DSPGraph::Box *, std::__1::hash<DSPGraph::Box *>, std::__1::equal_to<DSPGraph::Box *>, std::__1::allocator<DSPGraph::Box *> >={__hash_table<DSPGraph::Box *, std::__1::hash<DSPGraph::Box *>, std::__1::equal_to<DSPGraph::Box *>, std::__1::allocator<DSPGraph::Box *> >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>, std::__1::allocator<std::__1::__hash_node<DSPGraph::Box *, void *> > >={__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>=^{__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>}}}{__compressed_pair<unsigned long, std::__1::hash<DSPGraph::Box *> >=Q}{__compressed_pair<float, std::__1::equal_to<DSPGraph::Box *> >=f}}}{vector<DSPGraph::ParameterTap, std::__1::allocator<DSPGraph::ParameterTap> >=^{ParameterTap}^{ParameterTap}{__compressed_pair<DSPGraph::ParameterTap *, std::__1::allocator<DSPGraph::ParameterTap> >=^{ParameterTap}}}{vector<DSPGraph::PropertyTap, std::__1::allocator<DSPGraph::PropertyTap> >=^{PropertyTap}^{PropertyTap}{__compressed_pair<DSPGraph::PropertyTap *, std::__1::allocator<DSPGraph::PropertyTap> >=^{PropertyTap}}}{vector<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> >, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> > > >=^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> >}^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> >}{__compressed_pair<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> > *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> > > >=^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> >}}}{vector<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> >, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> > > >=^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> >}^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> >}{__compressed_pair<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> > *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> > > >=^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> >}}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{vector<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> >, std::__1::allocator<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> > > >=^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> >}^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> >}{__compressed_pair<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> > *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> > > >=^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> >}}}{Set<DSPGraph::Analyzer *>=^{Member}Q}{map<std::__1::pair<unsigned int, int>, long long, std::__1::less<std::__1::pair<unsigned int, int> >, std::__1::allocator<std::__1::pair<const std::__1::pair<unsigned int, int>, long long> > >={__tree<std::__1::__value_type<std::__1::pair<unsigned int, int>, long long>, std::__1::__map_value_compare<std::__1::pair<unsigned int, int>, std::__1::__value_type<std::__1::pair<unsigned int, int>, long long>, std::__1::less<std::__1::pair<unsigned int, int> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<unsigned int, int>, long long> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<unsigned int, int>, long long>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<unsigned int, int>, std::__1::__value_type<std::__1::pair<unsigned int, int>, long long>, std::__1::less<std::__1::pair<unsigned int, int> >, true> >=Q}}}{function<void (double)>={__value_func<void (double)>={type=[32C]}^{__base<void (double)>}}}{function<void (DSPGraph::Box *, int)>={__value_func<void (DSPGraph::Box *, int)>={type=[32C]}^{__base<void (DSPGraph::Box *, int)>}}}{function<void (DSPGraph::Box *, int)>={__value_func<void (DSPGraph::Box *, int)>={type=[32C]}^{__base<void (DSPGraph::Box *, int)>}}}BBBBq}64@72
@48@0:8@16@?24@?32@40
v28@0:8^{Box=^^?^{Graph}^{IsoGroup}^{Subset}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}q{vector<DSPGraph::InputPort, std::__1::allocator<DSPGraph::InputPort> >=^{InputPort}^{InputPort}{__compressed_pair<DSPGraph::InputPort *, std::__1::allocator<DSPGraph::InputPort> >=^{InputPort}}}{vector<DSPGraph::OutputPort, std::__1::allocator<DSPGraph::OutputPort> >=^{OutputPort}^{OutputPort}{__compressed_pair<DSPGraph::OutputPort *, std::__1::allocator<DSPGraph::OutputPort> >=^{OutputPort}}}{unordered_set<DSPGraph::Box *, std::__1::hash<DSPGraph::Box *>, std::__1::equal_to<DSPGraph::Box *>, std::__1::allocator<DSPGraph::Box *> >={__hash_table<DSPGraph::Box *, std::__1::hash<DSPGraph::Box *>, std::__1::equal_to<DSPGraph::Box *>, std::__1::allocator<DSPGraph::Box *> >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>, std::__1::allocator<std::__1::__hash_node<DSPGraph::Box *, void *> > >={__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>=^{__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>}}}{__compressed_pair<unsigned long, std::__1::hash<DSPGraph::Box *> >=Q}{__compressed_pair<float, std::__1::equal_to<DSPGraph::Box *> >=f}}}{vector<DSPGraph::ParameterTap, std::__1::allocator<DSPGraph::ParameterTap> >=^{ParameterTap}^{ParameterTap}{__compressed_pair<DSPGraph::ParameterTap *, std::__1::allocator<DSPGraph::ParameterTap> >=^{ParameterTap}}}{vector<DSPGraph::PropertyTap, std::__1::allocator<DSPGraph::PropertyTap> >=^{PropertyTap}^{PropertyTap}{__compressed_pair<DSPGraph::PropertyTap *, std::__1::allocator<DSPGraph::PropertyTap> >=^{PropertyTap}}}{vector<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> >, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> > > >=^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> >}^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> >}{__compressed_pair<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> > *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> > > >=^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> >}}}{vector<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> >, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> > > >=^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> >}^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> >}{__compressed_pair<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> > *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> > > >=^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> >}}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{vector<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> >, std::__1::allocator<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> > > >=^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> >}^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> >}{__compressed_pair<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> > *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> > > >=^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> >}}}{Set<DSPGraph::Analyzer *>=^{Member}Q}{map<std::__1::pair<unsigned int, int>, long long, std::__1::less<std::__1::pair<unsigned int, int> >, std::__1::allocator<std::__1::pair<const std::__1::pair<unsigned int, int>, long long> > >={__tree<std::__1::__value_type<std::__1::pair<unsigned int, int>, long long>, std::__1::__map_value_compare<std::__1::pair<unsigned int, int>, std::__1::__value_type<std::__1::pair<unsigned int, int>, long long>, std::__1::less<std::__1::pair<unsigned int, int> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<unsigned int, int>, long long> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<unsigned int, int>, long long>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<unsigned int, int>, std::__1::__value_type<std::__1::pair<unsigned int, int>, long long>, std::__1::less<std::__1::pair<unsigned int, int> >, true> >=Q}}}{function<void (double)>={__value_func<void (double)>={type=[32C]}^{__base<void (double)>}}}{function<void (DSPGraph::Box *, int)>={__value_func<void (DSPGraph::Box *, int)>={type=[32C]}^{__base<void (DSPGraph::Box *, int)>}}}{function<void (DSPGraph::Box *, int)>={__value_func<void (DSPGraph::Box *, int)>={type=[32C]}^{__base<void (DSPGraph::Box *, int)>}}}BBBBq}16i24
@"<SNAnalyzing>"
@"<SNTimeConverting>"
@28@0:8@16B24
@32@0:8@16q24
@40@0:8^{Box=^^?^{Graph}^{IsoGroup}^{Subset}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}q{vector<DSPGraph::InputPort, std::__1::allocator<DSPGraph::InputPort> >=^{InputPort}^{InputPort}{__compressed_pair<DSPGraph::InputPort *, std::__1::allocator<DSPGraph::InputPort> >=^{InputPort}}}{vector<DSPGraph::OutputPort, std::__1::allocator<DSPGraph::OutputPort> >=^{OutputPort}^{OutputPort}{__compressed_pair<DSPGraph::OutputPort *, std::__1::allocator<DSPGraph::OutputPort> >=^{OutputPort}}}{unordered_set<DSPGraph::Box *, std::__1::hash<DSPGraph::Box *>, std::__1::equal_to<DSPGraph::Box *>, std::__1::allocator<DSPGraph::Box *> >={__hash_table<DSPGraph::Box *, std::__1::hash<DSPGraph::Box *>, std::__1::equal_to<DSPGraph::Box *>, std::__1::allocator<DSPGraph::Box *> >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>, std::__1::allocator<std::__1::__hash_node<DSPGraph::Box *, void *> > >={__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>=^{__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>}}}{__compressed_pair<unsigned long, std::__1::hash<DSPGraph::Box *> >=Q}{__compressed_pair<float, std::__1::equal_to<DSPGraph::Box *> >=f}}}{vector<DSPGraph::ParameterTap, std::__1::allocator<DSPGraph::ParameterTap> >=^{ParameterTap}^{ParameterTap}{__compressed_pair<DSPGraph::ParameterTap *, std::__1::allocator<DSPGraph::ParameterTap> >=^{ParameterTap}}}{vector<DSPGraph::PropertyTap, std::__1::allocator<DSPGraph::PropertyTap> >=^{PropertyTap}^{PropertyTap}{__compressed_pair<DSPGraph::PropertyTap *, std::__1::allocator<DSPGraph::PropertyTap> >=^{PropertyTap}}}{vector<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> >, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> > > >=^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> >}^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> >}{__compressed_pair<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> > *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> > > >=^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> >}}}{vector<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> >, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> > > >=^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> >}^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> >}{__compressed_pair<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> > *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> > > >=^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> >}}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{vector<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> >, std::__1::allocator<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> > > >=^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> >}^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> >}{__compressed_pair<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> > *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> > > >=^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> >}}}{Set<DSPGraph::Analyzer *>=^{Member}Q}{map<std::__1::pair<unsigned int, int>, long long, std::__1::less<std::__1::pair<unsigned int, int> >, std::__1::allocator<std::__1::pair<const std::__1::pair<unsigned int, int>, long long> > >={__tree<std::__1::__value_type<std::__1::pair<unsigned int, int>, long long>, std::__1::__map_value_compare<std::__1::pair<unsigned int, int>, std::__1::__value_type<std::__1::pair<unsigned int, int>, long long>, std::__1::less<std::__1::pair<unsigned int, int> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<unsigned int, int>, long long> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<unsigned int, int>, long long>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<unsigned int, int>, std::__1::__value_type<std::__1::pair<unsigned int, int>, long long>, std::__1::less<std::__1::pair<unsigned int, int> >, true> >=Q}}}{function<void (double)>={__value_func<void (double)>={type=[32C]}^{__base<void (double)>}}}{function<void (DSPGraph::Box *, int)>={__value_func<void (DSPGraph::Box *, int)>={type=[32C]}^{__base<void (DSPGraph::Box *, int)>}}}{function<void (DSPGraph::Box *, int)>={__value_func<void (DSPGraph::Box *, int)>={type=[32C]}^{__base<void (DSPGraph::Box *, int)>}}}BBBBq}16{shared_ptr<DSPGraph::Graph>=^{Graph}^{__shared_weak_count}}24
B32@0:8q16@24
B24@0:8q16
B36@0:8q16@24B32
B36@0:8^I16^q24I32
B32@0:8^{AudioUnitParameterInfo=[52c]^{__CFString}I^{__CFString}IfffI}16I24I28
B36@0:8^f16I24I28I32
B28@0:8I16I20I24
B40@0:8f16I20I24I28q32
^{Box=^^?^{Graph}^{IsoGroup}^{Subset}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}q{vector<DSPGraph::InputPort, std::__1::allocator<DSPGraph::InputPort> >=^{InputPort}^{InputPort}{__compressed_pair<DSPGraph::InputPort *, std::__1::allocator<DSPGraph::InputPort> >=^{InputPort}}}{vector<DSPGraph::OutputPort, std::__1::allocator<DSPGraph::OutputPort> >=^{OutputPort}^{OutputPort}{__compressed_pair<DSPGraph::OutputPort *, std::__1::allocator<DSPGraph::OutputPort> >=^{OutputPort}}}{unordered_set<DSPGraph::Box *, std::__1::hash<DSPGraph::Box *>, std::__1::equal_to<DSPGraph::Box *>, std::__1::allocator<DSPGraph::Box *> >={__hash_table<DSPGraph::Box *, std::__1::hash<DSPGraph::Box *>, std::__1::equal_to<DSPGraph::Box *>, std::__1::allocator<DSPGraph::Box *> >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>, std::__1::allocator<std::__1::__hash_node<DSPGraph::Box *, void *> > >={__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>=^{__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>}}}{__compressed_pair<unsigned long, std::__1::hash<DSPGraph::Box *> >=Q}{__compressed_pair<float, std::__1::equal_to<DSPGraph::Box *> >=f}}}{vector<DSPGraph::ParameterTap, std::__1::allocator<DSPGraph::ParameterTap> >=^{ParameterTap}^{ParameterTap}{__compressed_pair<DSPGraph::ParameterTap *, std::__1::allocator<DSPGraph::ParameterTap> >=^{ParameterTap}}}{vector<DSPGraph::PropertyTap, std::__1::allocator<DSPGraph::PropertyTap> >=^{PropertyTap}^{PropertyTap}{__compressed_pair<DSPGraph::PropertyTap *, std::__1::allocator<DSPGraph::PropertyTap> >=^{PropertyTap}}}{vector<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> >, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> > > >=^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> >}^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> >}{__compressed_pair<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> > *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> > > >=^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> >}}}{vector<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> >, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> > > >=^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> >}^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> >}{__compressed_pair<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> > *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> > > >=^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> >}}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{vector<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> >, std::__1::allocator<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> > > >=^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> >}^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> >}{__compressed_pair<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> > *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> > > >=^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> >}}}{Set<DSPGraph::Analyzer *>=^{Member}Q}{map<std::__1::pair<unsigned int, int>, long long, std::__1::less<std::__1::pair<unsigned int, int> >, std::__1::allocator<std::__1::pair<const std::__1::pair<unsigned int, int>, long long> > >={__tree<std::__1::__value_type<std::__1::pair<unsigned int, int>, long long>, std::__1::__map_value_compare<std::__1::pair<unsigned int, int>, std::__1::__value_type<std::__1::pair<unsigned int, int>, long long>, std::__1::less<std::__1::pair<unsigned int, int> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<unsigned int, int>, long long> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<unsigned int, int>, long long>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<unsigned int, int>, std::__1::__value_type<std::__1::pair<unsigned int, int>, long long>, std::__1::less<std::__1::pair<unsigned int, int> >, true> >=Q}}}{function<void (double)>={__value_func<void (double)>={type=[32C]}^{__base<void (double)>}}}{function<void (DSPGraph::Box *, int)>={__value_func<void (DSPGraph::Box *, int)>={type=[32C]}^{__base<void (DSPGraph::Box *, int)>}}}{function<void (DSPGraph::Box *, int)>={__value_func<void (DSPGraph::Box *, int)>={type=[32C]}^{__base<void (DSPGraph::Box *, int)>}}}BBBBq}
@"SNFileServer"
@"<SNProcessing>"24@0:8^@16
i16@0:8
@"NSMapTable"
@24@0:8#16
#24@0:8@16
@32@0:8q16@24
@"MLMultiArray"
@"<SNAnalyzerCreating>"
@"SNAnalyzerHost"
@"<SNProcessing>"
q32@0:8q16^{Box=^^?^{Graph}^{IsoGroup}^{Subset}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}q{vector<DSPGraph::InputPort, std::__1::allocator<DSPGraph::InputPort> >=^{InputPort}^{InputPort}{__compressed_pair<DSPGraph::InputPort *, std::__1::allocator<DSPGraph::InputPort> >=^{InputPort}}}{vector<DSPGraph::OutputPort, std::__1::allocator<DSPGraph::OutputPort> >=^{OutputPort}^{OutputPort}{__compressed_pair<DSPGraph::OutputPort *, std::__1::allocator<DSPGraph::OutputPort> >=^{OutputPort}}}{unordered_set<DSPGraph::Box *, std::__1::hash<DSPGraph::Box *>, std::__1::equal_to<DSPGraph::Box *>, std::__1::allocator<DSPGraph::Box *> >={__hash_table<DSPGraph::Box *, std::__1::hash<DSPGraph::Box *>, std::__1::equal_to<DSPGraph::Box *>, std::__1::allocator<DSPGraph::Box *> >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>, std::__1::allocator<std::__1::__hash_node<DSPGraph::Box *, void *> > >={__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>=^{__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>}}}{__compressed_pair<unsigned long, std::__1::hash<DSPGraph::Box *> >=Q}{__compressed_pair<float, std::__1::equal_to<DSPGraph::Box *> >=f}}}{vector<DSPGraph::ParameterTap, std::__1::allocator<DSPGraph::ParameterTap> >=^{ParameterTap}^{ParameterTap}{__compressed_pair<DSPGraph::ParameterTap *, std::__1::allocator<DSPGraph::ParameterTap> >=^{ParameterTap}}}{vector<DSPGraph::PropertyTap, std::__1::allocator<DSPGraph::PropertyTap> >=^{PropertyTap}^{PropertyTap}{__compressed_pair<DSPGraph::PropertyTap *, std::__1::allocator<DSPGraph::PropertyTap> >=^{PropertyTap}}}{vector<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> >, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> > > >=^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> >}^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> >}{__compressed_pair<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> > *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> > > >=^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder> >}}}{vector<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> >, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> > > >=^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> >}^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> >}{__compressed_pair<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> > *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> > > >=^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector> >}}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{vector<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> >, std::__1::allocator<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> > > >=^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> >}^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> >}{__compressed_pair<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> > *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> > > >=^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer> >}}}{Set<DSPGraph::Analyzer *>=^{Member}Q}{map<std::__1::pair<unsigned int, int>, long long, std::__1::less<std::__1::pair<unsigned int, int> >, std::__1::allocator<std::__1::pair<const std::__1::pair<unsigned int, int>, long long> > >={__tree<std::__1::__value_type<std::__1::pair<unsigned int, int>, long long>, std::__1::__map_value_compare<std::__1::pair<unsigned int, int>, std::__1::__value_type<std::__1::pair<unsigned int, int>, long long>, std::__1::less<std::__1::pair<unsigned int, int> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<unsigned int, int>, long long> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<unsigned int, int>, long long>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<unsigned int, int>, std::__1::__value_type<std::__1::pair<unsigned int, int>, long long>, std::__1::less<std::__1::pair<unsigned int, int> >, true> >=Q}}}{function<void (double)>={__value_func<void (double)>={type=[32C]}^{__base<void (double)>}}}{function<void (DSPGraph::Box *, int)>={__value_func<void (DSPGraph::Box *, int)>={type=[32C]}^{__base<void (DSPGraph::Box *, int)>}}}{function<void (DSPGraph::Box *, int)>={__value_func<void (DSPGraph::Box *, int)>={type=[32C]}^{__base<void (DSPGraph::Box *, int)>}}}BBBBq}24
@48@0:8@16@?24@?32^@40
@?32@0:8@?16@24
B48@0:8@16@?24@?32^@40
v36@0:8^{AudioBufferList=I[1{AudioBuffer=II^v}]}16I24q28
v32@0:8@16q24
@"SNAudioProcessorCache"
{list<SoundAnalysis::ProcessingContext, std::__1::allocator<SoundAnalysis::ProcessingContext> >="__end_"{__list_node_base<SoundAnalysis::ProcessingContext, void *>="__prev_"^{__list_node_base<SoundAnalysis::ProcessingContext, void *>}"__next_"^{__list_node_base<SoundAnalysis::ProcessingContext, void *>}}"__size_alloc_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<SoundAnalysis::ProcessingContext, void *> > >="__value_"Q}}
{ProcessingTree="mGraph"{shared_ptr<DSPGraph::Graph>="__ptr_"^{Graph}"__cntrl_"^{__shared_weak_count}}"mProcessingContexts"{list<SoundAnalysis::ProcessingContext, std::__1::allocator<SoundAnalysis::ProcessingContext> >="__end_"{__list_node_base<SoundAnalysis::ProcessingContext, void *>="__prev_"^{__list_node_base<SoundAnalysis::ProcessingContext, void *>}"__next_"^{__list_node_base<SoundAnalysis::ProcessingContext, void *>}}"__size_alloc_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<SoundAnalysis::ProcessingContext, void *> > >="__value_"Q}}"mFormatMatchingNodes"{list<SoundAnalysis::FormatMatchingNode, std::__1::allocator<SoundAnalysis::FormatMatchingNode> >="__end_"{__list_node_base<SoundAnalysis::FormatMatchingNode, void *>="__prev_"^{__list_node_base<SoundAnalysis::FormatMatchingNode, void *>}"__next_"^{__list_node_base<SoundAnalysis::FormatMatchingNode, void *>}}"__size_alloc_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<SoundAnalysis::FormatMatchingNode, void *> > >="__value_"Q}}"mSharedProcessingNodes"{list<SoundAnalysis::SharedProcessingNode, std::__1::allocator<SoundAnalysis::SharedProcessingNode> >="__end_"{__list_node_base<SoundAnalysis::SharedProcessingNode, void *>="__prev_"^{__list_node_base<SoundAnalysis::SharedProcessingNode, void *>}"__next_"^{__list_node_base<SoundAnalysis::SharedProcessingNode, void *>}}"__size_alloc_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<SoundAnalysis::SharedProcessingNode, void *> > >="__value_"Q}}"mAnalyzerNodes"{list<SoundAnalysis::AnalyzerNode, std::__1::allocator<SoundAnalysis::AnalyzerNode> >="__end_"{__list_node_base<SoundAnalysis::AnalyzerNode, void *>="__prev_"^{__list_node_base<SoundAnalysis::AnalyzerNode, void *>}"__next_"^{__list_node_base<SoundAnalysis::AnalyzerNode, void *>}}"__size_alloc_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<SoundAnalysis::AnalyzerNode, void *> > >="__value_"Q}}"mRootNode"{RootNode="_vptr$ProcessingNode"^^?"mUpstreamNode"^{ProcessingNode}"mDownstreamNodes"{list<SoundAnalysis::ProcessingNode *, std::__1::allocator<SoundAnalysis::ProcessingNode *> >="__end_"{__list_node_base<SoundAnalysis::ProcessingNode *, void *>="__prev_"^{__list_node_base<SoundAnalysis::ProcessingNode *, void *>}"__next_"^{__list_node_base<SoundAnalysis::ProcessingNode *, void *>}}"__size_alloc_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<SoundAnalysis::ProcessingNode *, void *> > >="__value_"Q}}"mProcessingBox"^{Box}"mUpstreamFormat"{FormatAndBlockSize="mFormat"{AudioStreamBasicDescription="mSampleRate"d"mFormatID"I"mFormatFlags"I"mBytesPerPacket"I"mFramesPerPacket"I"mBytesPerFrame"I"mChannelsPerFrame"I"mBitsPerChannel"I"mReserved"I}"mBlockSize"i}"mDownstreamFormat"{FormatAndBlockSize="mFormat"{AudioStreamBasicDescription="mSampleRate"d"mFormatID"I"mFormatFlags"I"mBytesPerPacket"I"mFramesPerPacket"I"mBytesPerFrame"I"mChannelsPerFrame"I"mBitsPerChannel"I"mReserved"I}"mBlockSize"i}}"mMaxFramesPerSlice"i"mWillInitializeCallback"{function<void (std::__1::shared_ptr<DSPGraph::Graph>, unsigned long)>="__f_"{__value_func<void (std::__1::shared_ptr<DSPGraph::Graph>, unsigned long)>="__buf_"{type="__lx"[32C]}"__f_"^{__base<void (std::__1::shared_ptr<DSPGraph::Graph>, unsigned long)>}}}"mCurrentInputSampleTime"i}
@"AVAudioFormat"
@"SNUltronResultsLogger"
@20@0:8f16
@28@0:8@16I24
v40@0:8^{AudioBufferList=I[1{AudioBuffer=II^v}]}16^{AudioBufferList=I[1{AudioBuffer=II^v}]}24I32I36
i24@0:8@16
i28@0:8@16i24
v40@0:8@16@24q32
q24@0:8@16
@40@0:8@16^{__SecTask=}24^@32
@32@0:8@?16@?24
@"<SNResourceCoordinatorXPCProtocol><NSXPCProxyCreating>"
@32@0:8{shared_ptr<DSPGraph::Graph>=^{Graph}^{__shared_weak_count}}16
B32@0:8q16q24
B28@0:8^f16I24
B20@0:8I16
B24@0:8f16I20
B36@0:8^I16^B24I32
B36@0:8^v16^I24I32
B32@0:8r^v16I24I28
@"MLFeatureValue"24@0:8@"NSString"16
@"NSSet"16@0:8
@"MLFeatureDescription"
@"DSPGMLInputProvider"
@"<MLFeatureProvider>"
@"NSURL"
@40@0:8@16@24d32
@"<SNRequest>"
v52@0:8^{OpaqueAudioQueue=}16^{AudioQueueBuffer=I^vI^vI^{AudioStreamPacketDescription}I}24r^{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}32I40r^{AudioStreamPacketDescription=qII}44
B24@0:8@?16
^{OpaqueAudioQueue=}
@"SNAudioQueueConfiguration"
@"NSObject<OS_os_transaction>"
@56@0:8@16@24@32{unique_ptr<DSPGraph::Graph, std::__1::default_delete<DSPGraph::Graph> >={__compressed_pair<DSPGraph::Graph *, std::__1::default_delete<DSPGraph::Graph> >=^{Graph}}}40^@48
@"MLMultiArrayConstraint"
{unique_ptr<DSPGraph::Graph, std::__1::default_delete<DSPGraph::Graph> >="__ptr_"{__compressed_pair<DSPGraph::Graph *, std::__1::default_delete<DSPGraph::Graph> >="__value_"^{Graph}}}
{vector<float, std::__1::allocator<float> >="__begin_"^f"__end_"^f"__end_cap_"{__compressed_pair<float *, std::__1::allocator<float> >="__value_"^f}}
@"SNDSPGraphCustomModel"
v48@0:8@16@24@?32@?40
@"SNForwardPassAudioStreamAnalyzer"
{unique_ptr<AudioRingBuffer, std::__1::default_delete<AudioRingBuffer> >="__ptr_"{__compressed_pair<AudioRingBuffer *, std::__1::default_delete<AudioRingBuffer> >="__value_"^{AudioRingBuffer}}}
{unique_ptr<CABufferList, std::__1::default_delete<CABufferList> >="__ptr_"{__compressed_pair<CABufferList *, std::__1::default_delete<CABufferList> >="__value_"^{CABufferList}}}
@56@0:8@16@24@32@40q48
B48@0:8@16@24@32^@40
B32@0:8q16^@24
{?="value"q"timescale"i"flags"I"epoch"q}
@"SNLogMelBasedFeatureExtractorConfiguration"
@"CUFileServer"
@"RPCompanionLinkClient"
v40@0:8@"<SNRequest>"16@"<SNResultsObservingXPCProtocol>"24@?<v@?@"NSError">32
v24@0:8@?<v@?>16
@"SNNullDetector"
@44@0:8d16I24d28B36B40
@"SNAudioRecordingQueue"
{unordered_map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}24@0:8@16
{vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}}24@0:8@16
{unique_ptr<DSPGraph::Interpreter, std::__1::default_delete<DSPGraph::Interpreter> >="__ptr_"{__compressed_pair<DSPGraph::Interpreter *, std::__1::default_delete<DSPGraph::Interpreter> >="__value_"^{Interpreter}}}
@"SNAudioOffsetEstimator"
v32@0:8f16f20f24f28
v24@0:8@"<SNResult>"16
@?<v@?>16@0:8
@56@0:8d16d24d32@?40@?48
@56@0:8@16@24d32I40I44@48
@"<SNProcessorCreating>"
{?=qiIq}16@0:8
v40@0:8{?=qiIq}16
@"<SNResultsObservingXPCProtocol><NSXPCProxyCreating>"
@24@0:8@?16
@24@0:8@?<v@?@"NSError">16
@48@0:8@16@24@32^@40
