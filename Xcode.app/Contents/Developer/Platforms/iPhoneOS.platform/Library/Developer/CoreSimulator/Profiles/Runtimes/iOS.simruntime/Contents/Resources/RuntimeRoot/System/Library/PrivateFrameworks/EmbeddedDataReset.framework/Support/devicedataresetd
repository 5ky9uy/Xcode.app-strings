Td,N,V_progress
T#,R
_reason
T@"<DDRObserverServerDelegate>",W,N,V_delegate
connect
T@"DDRObserverServer",&,N,V_observerServer
initWithReason:
T@"NSMutableArray",&,N,V_clients
manager
T@"NSObject<OS_dispatch_queue>",&,N,V_serverQueue
release
T@"NSString",R,C
setServerQueue:
T@"NSXPCConnection",&,N,V_dataResetWorkerConnection
setWithObjects:
.cxx_destruct
_observerServer
T@"<DDRManagerDelegate>",W,N,V_delegate
clients
T@"DDRManager",&,N,V_manager
hasEntitlement:
T@"DDRUIPresenter",&,N,V_uiPresenter
isProxy
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
options
T@"NSString",&,N,V_reason
resetConnection
T@"NSXPCConnection",&,N,V_completionClient
setUiPresenter:
T@"NSXPCListener",&,N,V_listener
T@"PUIProgressWindow",&,N,V_resetProgressWindow
T@?,C,N,V_completion
TB,N,V_disallowProximitySetup
TB,N,V_progressBarVisible
TQ,R
Tq,N,V_currentResetMode
Tq,N,V_currentResetState
Tq,N,V_mode
_clients
_completion
_completionClient
_currentResetMode
_currentResetState
_dataResetWorkerConnection
_delegate
_disallowProximitySetup
_listener
_manager
_mode
_obliterateAndBrickDevice:
_progress
_progressBarVisible
_queue
_resetProgressWindow
_serverQueue
_setQueue:
_uiPresenter
_xpcConnection
addObject:
autorelease
begin
class
commit
completion
completionClient
conformsToProtocol:
connectionHasRequiredEntitlements:
countByEnumeratingWithState:objects:count:
currentConnection
currentResetMode
currentResetState
dataResetWorkerConnection
debugDescription
delegate
description
didAddObserverClientWithXPCConnection:
didBeginDataResetWithMode:
didCompleteDataResetMode:withError:completion:
disallowProximitySetup
doObliterateWithType:showingProgress:options:
enumerateObserverConnections:
errorWithDomain:code:userInfo:
finishResetOfMode:withError:
hasRequiredEntitlements:
hash
hideProgress
init
initWithMachServiceName:
initWithProgressBarVisibility:
initWithQueue:
initWithServiceName:
interfaceWithProtocol:
invalidate
isEqual:
isKindOfClass:
isMemberOfClass:
listener
listener:shouldAcceptNewConnection:
mode
observerServer
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
progress
progressBarVisible
queue
reason
remoteObjectProxy
remoteObjectProxyWithErrorHandler:
removeObject:
resetDataWithRequest:completion:
resetProgressWindow
resetWithMode:didUpdateWithProgress:
resetWithModeDidBegin:
resetWithModeDidFinish:error:
resetWithModeWillBegin:
respondsToSelector:
resume
retain
retainCount
self
serverQueue
setClasses:forSelector:argumentIndex:ofReply:
setClients:
setCompletion:
setCompletionClient:
setCurrentResetMode:
setCurrentResetState:
setDataResetWorkerConnection:
setDelegate:
setDisallowProximitySetup:
setExportedInterface:
setExportedObject:
setInterruptionHandler:
setInvalidationHandler:
setListener:
setManager:
setMode:
setObserverServer:
setObserving:
setProgress:
setProgressBarVisible:
setProgressValue:
setQueue:
setReason:
setRebootType:
setRemoteObjectInterface:
setResetProgressWindow:
setSource:
setVisible:
sharedService
show
shutdownWithOptions:
start
superclass
sync
synchronousRemoteObjectProxyWithErrorHandler:
tokenFromNSXPCConnection:
uiPresenter
willBeginDataResetWithMode:
zone
Setting progress bar visible: %d
Show progress UI
got progress here: %lf, self.progress: %lf
Daemon server start
connection does not have new entitlement
connection does not have frontboard entitlement
connection does not have springboard entitlement
got incomming connection in devicedataresetd
Invalidating connection in daemon
Interrupting connection in daemon
Adding client complete in devicedataresetd
Setting current connection to observe data reset flow, currentState = %ld
Client with connection:%@ register as observer
Connection: %@ missed the willBeginDataResetWithMode broadcast, send it now.
Connection: %@ missed the both broadcast, send them now.
Calling reset data in devicedataresetd server
Now proceed with reset in daemon
Reset finished in daemon with error: %@
resetWithModeWillBegin in DDRServer
Broadcast resetWithModeWillBegin to client connection: %@
resetWithModeDidBegin in DDRServer
Broad cast resetWithModeDidBegin to client connection: %@
resetWithModeDidFinish in DDRServer
device data reset daemon got response from worker: %@
No error, reboot
increament observer to: %d
decrement observer to: %d
Observer count is zero reboot!
reboot directly because no observer anymore.
5s elapsed to reboot.
observer 0, ok to reboot
create data reset worker xpc
DeviceDataResetWorker connection interrupted
DeviceDataResetWorker connection invalidated
Notifying clients of failed reset in devicedataresetd
calling data reset in daemon
Data reset failed with error: %@
data reset manager got call back:%@
Update progress:%lf
Data reset manager calling delegate resetWithModeDidBegin
Starting up DDRObserverServer
Checking incoming connection: %@ to DDRObserverServer
Invalidating connection in DDRObserverServer
Interrupting connection in DDRObserverServer
Adding client complete in DDRObserverServer, listener: %@, connection: %@
Incoming connection called connect
v8@?0
com.apple.devicedataresetd
com.apple.devicedatareset.workerqueue
com.apple.devicedatareset.DeviceDataResetService
com.apple.wipedevice
com.apple.frontboard.wipedevice
com.apple.springboard.wipedevice
v16@?0@"NSError"8
v16@?0@"NSXPCConnection"8
ResetOrRestoreComplete
DDRLogForCategory
DDRLogging.m
category < DDRLoggingCategoryCount
DeviceDataResetDefault
DeviceDataResetProgress
DeviceDataResetDaemon
DeviceDataResetFramework
com.apple.devicedatareset.xpcserviceworker
com.apple.devicedatareset.daemon
com.apple.devicedatareset.framework
com.apple.devicedatareset.manager
com.apple.devicedatareset.devicedataresetxpcserviceworker
com.apple.devicedatareset.DeviceDataResetObservationService.NonLaunching
DDRUIPresenter
DDRServerProtocol
NSObject
DDRClientResetProtocol
DDRServer
NSXPCListenerDelegate
DDRManagerDelegate
DDRObserverServerDelegate
DDRWorkerServerProtocol
DDRWorkerClientProtocol
DDRManager
DDRServerObserverProtocol
DDRClientObserverProtocol
DDRObserverServer
@16@0:8
v20@0:8B16
v16@0:8
v24@0:8d16
B16@0:8
d16@0:8
v24@0:8@16
@"PUIProgressWindow"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@?24
v32@0:8@"DDRResetRequest"16@?<v@?@"NSError">24
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v24@0:8q16
v32@0:8q16d24
v32@0:8q16@24
v32@0:8q16@"NSError"24
B24@0:8@"BSAuditToken"16
v24@0:8@"NSXPCConnection"16
q16@0:8
@?16@0:8
v24@0:8@?16
@"NSXPCListener"
@"DDRObserverServer"
@"NSMutableArray"
@"NSObject<OS_dispatch_queue>"
@"DDRManager"
@"NSXPCConnection"
v36@0:8^{__CFString=}16B24@28
@"<DDRManagerDelegate>"
@"DDRUIPresenter"
@"NSString"
v40@0:8q16@24@?32
v40@0:8q16@"NSError"24@?<v@?>32
@24@0:8@16
@"<DDRObserverServerDelegate>"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>22A380007</string>
<key>CFBundleDevelopmentRegion</key>
<string>en</string>
<key>CFBundleDisplayName</key>
<string>DeviceDataResetd</string>
<key>CFBundleExecutable</key>
<string>devicedataresetd</string>
<key>CFBundleIdentifier</key>
<string>com.apple.devicedatareset.devicedataresetd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>devicedataresetd</string>
<key>CFBundleShortVersionString</key>
<string>1.0</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>14E6097d</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.4</string>
<key>DTSDKBuild</key>
<string>20E5212d</string>
<key>DTSDKName</key>
<string>iphonesimulator16.4.internal</string>
<key>DTXcode</key>
<string>1430</string>
<key>DTXcodeBuild</key>
<string>14E6097d</string>
<key>MinimumOSVersion</key>
<string>16.4</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
<integer>2</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>allow-obliterate-device</key>
<true/>
<key>com.apple.QuartzCore.displayable-context</key>
<true/>
<key>com.apple.QuartzCore.secure-mode</key>
<true/>
<key>com.apple.dataresetworker.access</key>
<true/>
<key>com.apple.frontboard.shutdown</key>
<true/>
<key>com.apple.nfcd.hwmanager</key>
<true/>
<key>com.apple.nfcd.seshat</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.devicedatareset.devicedataresetxpcserviceworker</string>
</array>
<key>com.apple.security.temporary-exception.mach-lookup.global-name</key>
<array>
<string>com.apple.devicedatareset.devicedataresetxpcserviceworker</string>
</array>
<key>platform-application</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>devicedataresetd</string>
</array>
</dict>
</plist>
allow-obliterate-device
0-(com.apple.QuartzCore.displayable-context
0% com.apple.QuartzCore.secure-mode
0% com.apple.dataresetworker.access
com.apple.frontboard.shutdown
com.apple.nfcd.hwmanager
com.apple.nfcd.seshat
0>*com.apple.private.sandbox.profile:embedded
devicedataresetd0q:com.apple.security.exception.files.absolute-path.read-only031/private/var/preferences/com.apple.networkd.plist0
@com.apple.security.exception.files.home-relative-path.read-write0<:Library/Caches/com.apple.devicedatareset.devicedataresetd/0f4com.apple.security.exception.iokit-user-client-class0.
AGXDeviceUserClient
IOSurfaceRootUserClient0
4com.apple.security.exception.mach-lookup.global-name0
 com.apple.audio.AURemoteIOServer'com.apple.audio.AudioComponentRegistrar
com.apple.audio.AudioSession9com.apple.devicedatareset.devicedataresetxpcserviceworker0b8com.apple.security.exception.shared-preference.read-only0&
com.apple.UIKit
com.apple.coreaudio0}>com.apple.security.temporary-exception.mach-lookup.global-name0;9com.apple.devicedatareset.devicedataresetxpcserviceworker0
platform-application
seatbelt-profiles0
devicedataresetd
Td,N,V_progress
T#,R
_reason
T@"<DDRObserverServerDelegate>",W,N,V_delegate
connect
T@"DDRObserverServer",&,N,V_observerServer
initWithReason:
T@"NSMutableArray",&,N,V_clients
manager
T@"NSObject<OS_dispatch_queue>",&,N,V_serverQueue
release
T@"NSString",R,C
setServerQueue:
T@"NSXPCConnection",&,N,V_dataResetWorkerConnection
setWithObjects:
.cxx_destruct
_observerServer
T@"<DDRManagerDelegate>",W,N,V_delegate
clients
T@"DDRManager",&,N,V_manager
hasEntitlement:
T@"DDRUIPresenter",&,N,V_uiPresenter
isProxy
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
options
T@"NSString",&,N,V_reason
resetConnection
T@"NSXPCConnection",&,N,V_completionClient
setUiPresenter:
T@"NSXPCListener",&,N,V_listener
T@"PUIProgressWindow",&,N,V_resetProgressWindow
T@?,C,N,V_completion
TB,N,V_disallowProximitySetup
TB,N,V_progressBarVisible
TQ,R
Tq,N,V_currentResetMode
Tq,N,V_currentResetState
Tq,N,V_mode
_clients
_completion
_completionClient
_currentResetMode
_currentResetState
_dataResetWorkerConnection
_delegate
_disallowProximitySetup
_listener
_manager
_mode
_obliterateAndBrickDevice:
_progress
_progressBarVisible
_queue
_resetProgressWindow
_serverQueue
_setQueue:
_uiPresenter
_xpcConnection
addObject:
autorelease
begin
class
commit
completion
completionClient
conformsToProtocol:
connectionHasRequiredEntitlements:
countByEnumeratingWithState:objects:count:
currentConnection
currentResetMode
currentResetState
dataResetWorkerConnection
debugDescription
delegate
description
didAddObserverClientWithXPCConnection:
didBeginDataResetWithMode:
didCompleteDataResetMode:withError:completion:
disallowProximitySetup
doObliterateWithType:showingProgress:options:
enumerateObserverConnections:
errorWithDomain:code:userInfo:
finishResetOfMode:withError:
hasRequiredEntitlements:
hash
hideProgress
init
initWithMachServiceName:
initWithProgressBarVisibility:
initWithQueue:
initWithServiceName:
interfaceWithProtocol:
invalidate
isEqual:
isKindOfClass:
isMemberOfClass:
listener
listener:shouldAcceptNewConnection:
mode
observerServer
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
progress
progressBarVisible
queue
reason
remoteObjectProxy
remoteObjectProxyWithErrorHandler:
removeObject:
resetDataWithRequest:completion:
resetProgressWindow
resetWithMode:didUpdateWithProgress:
resetWithModeDidBegin:
resetWithModeDidFinish:error:
resetWithModeWillBegin:
respondsToSelector:
resume
retain
retainCount
self
serverQueue
setClasses:forSelector:argumentIndex:ofReply:
setClients:
setCompletion:
setCompletionClient:
setCurrentResetMode:
setCurrentResetState:
setDataResetWorkerConnection:
setDelegate:
setDisallowProximitySetup:
setExportedInterface:
setExportedObject:
setInterruptionHandler:
setInvalidationHandler:
setListener:
setManager:
setMode:
setObserverServer:
setObserving:
setProgress:
setProgressBarVisible:
setProgressValue:
setQueue:
setReason:
setRebootType:
setRemoteObjectInterface:
setResetProgressWindow:
setSource:
setVisible:
sharedService
show
shutdownWithOptions:
start
superclass
sync
synchronousRemoteObjectProxyWithErrorHandler:
tokenFromNSXPCConnection:
uiPresenter
willBeginDataResetWithMode:
zone
Setting progress bar visible: %d
Show progress UI
got progress here: %lf, self.progress: %lf
Daemon server start
connection does not have new entitlement
connection does not have frontboard entitlement
connection does not have springboard entitlement
got incomming connection in devicedataresetd
Invalidating connection in daemon
Interrupting connection in daemon
Adding client complete in devicedataresetd
Setting current connection to observe data reset flow, currentState = %ld
Client with connection:%@ register as observer
Connection: %@ missed the willBeginDataResetWithMode broadcast, send it now.
Connection: %@ missed the both broadcast, send them now.
Calling reset data in devicedataresetd server
Now proceed with reset in daemon
Reset finished in daemon with error: %@
resetWithModeWillBegin in DDRServer
Broadcast resetWithModeWillBegin to client connection: %@
resetWithModeDidBegin in DDRServer
Broad cast resetWithModeDidBegin to client connection: %@
resetWithModeDidFinish in DDRServer
device data reset daemon got response from worker: %@
No error, reboot
increament observer to: %d
decrement observer to: %d
Observer count is zero reboot!
reboot directly because no observer anymore.
5s elapsed to reboot.
observer 0, ok to reboot
create data reset worker xpc
DeviceDataResetWorker connection interrupted
DeviceDataResetWorker connection invalidated
Notifying clients of failed reset in devicedataresetd
calling data reset in daemon
Data reset failed with error: %@
data reset manager got call back:%@
Update progress:%lf
Data reset manager calling delegate resetWithModeDidBegin
Starting up DDRObserverServer
Checking incoming connection: %@ to DDRObserverServer
Invalidating connection in DDRObserverServer
Interrupting connection in DDRObserverServer
Adding client complete in DDRObserverServer, listener: %@, connection: %@
Incoming connection called connect
v8@?0
com.apple.devicedataresetd
com.apple.devicedatareset.workerqueue
com.apple.devicedatareset.DeviceDataResetService
com.apple.wipedevice
com.apple.frontboard.wipedevice
com.apple.springboard.wipedevice
v16@?0@"NSError"8
v16@?0@"NSXPCConnection"8
ResetOrRestoreComplete
DDRLogForCategory
DDRLogging.m
category < DDRLoggingCategoryCount
DeviceDataResetDefault
DeviceDataResetProgress
DeviceDataResetDaemon
DeviceDataResetFramework
com.apple.devicedatareset.xpcserviceworker
com.apple.devicedatareset.daemon
com.apple.devicedatareset.framework
com.apple.devicedatareset.manager
com.apple.devicedatareset.devicedataresetxpcserviceworker
com.apple.devicedatareset.DeviceDataResetObservationService.NonLaunching
DDRUIPresenter
DDRServerProtocol
NSObject
DDRClientResetProtocol
DDRServer
NSXPCListenerDelegate
DDRManagerDelegate
DDRObserverServerDelegate
DDRWorkerServerProtocol
DDRWorkerClientProtocol
DDRManager
DDRServerObserverProtocol
DDRClientObserverProtocol
DDRObserverServer
@16@0:8
v20@0:8B16
v16@0:8
v24@0:8d16
B16@0:8
d16@0:8
v24@0:8@16
@"PUIProgressWindow"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@?24
v32@0:8@"DDRResetRequest"16@?<v@?@"NSError">24
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v24@0:8q16
v32@0:8q16d24
v32@0:8q16@24
v32@0:8q16@"NSError"24
B24@0:8@"BSAuditToken"16
v24@0:8@"NSXPCConnection"16
q16@0:8
@?16@0:8
v24@0:8@?16
@"NSXPCListener"
@"DDRObserverServer"
@"NSMutableArray"
@"NSObject<OS_dispatch_queue>"
@"DDRManager"
@"NSXPCConnection"
v36@0:8^{__CFString=}16B24@28
@"<DDRManagerDelegate>"
@"DDRUIPresenter"
@"NSString"
v40@0:8q16@24@?32
v40@0:8q16@"NSError"24@?<v@?>32
@24@0:8@16
@"<DDRObserverServerDelegate>"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>22A380007</string>
<key>CFBundleDevelopmentRegion</key>
<string>en</string>
<key>CFBundleDisplayName</key>
<string>DeviceDataResetd</string>
<key>CFBundleExecutable</key>
<string>devicedataresetd</string>
<key>CFBundleIdentifier</key>
<string>com.apple.devicedatareset.devicedataresetd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>devicedataresetd</string>
<key>CFBundleShortVersionString</key>
<string>1.0</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>14E6097d</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.4</string>
<key>DTSDKBuild</key>
<string>20E5212d</string>
<key>DTSDKName</key>
<string>iphonesimulator16.4.internal</string>
<key>DTXcode</key>
<string>1430</string>
<key>DTXcodeBuild</key>
<string>14E6097d</string>
<key>MinimumOSVersion</key>
<string>16.4</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
<integer>2</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>allow-obliterate-device</key>
<true/>
<key>com.apple.QuartzCore.displayable-context</key>
<true/>
<key>com.apple.QuartzCore.secure-mode</key>
<true/>
<key>com.apple.dataresetworker.access</key>
<true/>
<key>com.apple.frontboard.shutdown</key>
<true/>
<key>com.apple.nfcd.hwmanager</key>
<true/>
<key>com.apple.nfcd.seshat</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.devicedatareset.devicedataresetxpcserviceworker</string>
</array>
<key>com.apple.security.temporary-exception.mach-lookup.global-name</key>
<array>
<string>com.apple.devicedatareset.devicedataresetxpcserviceworker</string>
</array>
<key>platform-application</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>devicedataresetd</string>
</array>
</dict>
</plist>
allow-obliterate-device
0-(com.apple.QuartzCore.displayable-context
0% com.apple.QuartzCore.secure-mode
0% com.apple.dataresetworker.access
com.apple.frontboard.shutdown
com.apple.nfcd.hwmanager
com.apple.nfcd.seshat
0>*com.apple.private.sandbox.profile:embedded
devicedataresetd0q:com.apple.security.exception.files.absolute-path.read-only031/private/var/preferences/com.apple.networkd.plist0
@com.apple.security.exception.files.home-relative-path.read-write0<:Library/Caches/com.apple.devicedatareset.devicedataresetd/0f4com.apple.security.exception.iokit-user-client-class0.
AGXDeviceUserClient
IOSurfaceRootUserClient0
4com.apple.security.exception.mach-lookup.global-name0
 com.apple.audio.AURemoteIOServer'com.apple.audio.AudioComponentRegistrar
com.apple.audio.AudioSession9com.apple.devicedatareset.devicedataresetxpcserviceworker0b8com.apple.security.exception.shared-preference.read-only0&
com.apple.UIKit
com.apple.coreaudio0}>com.apple.security.temporary-exception.mach-lookup.global-name0;9com.apple.devicedatareset.devicedataresetxpcserviceworker0
platform-application
seatbelt-profiles0
devicedataresetd
