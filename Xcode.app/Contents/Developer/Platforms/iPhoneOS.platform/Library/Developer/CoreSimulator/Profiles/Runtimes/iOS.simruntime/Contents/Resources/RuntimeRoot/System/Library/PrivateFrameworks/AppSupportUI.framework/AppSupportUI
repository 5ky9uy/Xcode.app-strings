MbP?
MbP?
MbP?
Invalid edge %lu
<%@ %p size cache:
%@ : %@
containerViewInfoKey
v8@?0
Arranged subview %@ wants autolayout. It must be wrapped in a _UIConstraintBasedLayoutHostingView or override _layoutSizeThatFits:fixedAxes:.
com.apple.AppSupportUI
v48@?0@"<NUIArrangementItem>"8{CGRect={CGPoint=dd}{CGSize=dd}}16
item
{CGSize=dd}
size
baselines
_NUIFlowArrangement
class
maxBaselines
rowSpacing
itemSpacing
cells
topOffset
bottomOffset
-[%@ %@] not implemented.
v24@?0^{_NUIGridArrangementCell=@{?=ff}{?=ff}{CGSize=dd}{CGSize=dd}{_NSRange=QQ}{_NSRange=QQ}{?=dd}b8b8}8Q16
column
span
index
length
spacingAfter
hugging
compression
priorities
_NUIGridArrangement
baselineRelative
horizontal
vertical
distributions
columns
rows
arrangement
v32@?0^{_NUIGridArrangementCell=@{?=ff}{?=ff}{CGSize=dd}{CGSize=dd}{_NSRange=QQ}{_NSRange=QQ}{?=dd}b8b8}8{_NSRange=QQ}16
Default
Fill
FillEqual
FillProp
EqualSpacing
EqualCentering
EqualGrouping
StackLeading
StackCenter
StackTrailing
Unknown(%ld)
NUIContainerView
NUIContainerViewDebug
-%@ %@ not yet supported.
View is not a subview: %@
View is represented %lu times: %@
v32@?0@"UIView"8Q16^B24
B24@?0@"UIView"8@"NSDictionary"16
/Library/Caches/com.apple.xbs/Sources/AppSupportUI_Sim/AppSupportUI/NUIContainerView.mm
<Unknown File>
Mismatching visible arranged subviews count
Cannot nest more than 15 calls to performBatchUpdates:
Invalid parameter not satisfying: %@
view != nil
Hidden count mismatch
Info count mismatch
stackIndex <= _arrangedSubviews.count
Info caount mismatch
newView != nil
index < _arrangedSubviews.count
View is not an arranged subviews %@.
effectiveLayoutSizeFittingSize: is not reentrant
hidden
arrangedSubviews = %lu[%lu];
arrangedSubviews = %lu[-];
 %@>
%@ called while in a layout or measurement pass.
visibleArrangedSubviews
arrangedSubviewsWantingAutolayout
cachedSizes
{UIEdgeInsets=dddd}
baselineLayoutMargins
layoutMargins
delegate
respondsTo
self
batchDepth
flags
cachedFirstBaselineView
firstBaselineView
cachedLastBaselineView
lastBaselineView
invalidConsistency
 layoutMarginsRelative = {%f, %f, %f, %f};
 baselineRelative = YES;
AppSupportUI-42.1 (UIKit)
view
horizonral
alignment
leading
bottom
trailing
minimumSpacing
debugBoundingBoxes
delayedInvalidation
inLayoutPass
inMeasurementPass
mustRestartMeasurement
Top/Lead
FirstBL
Center
Bottom/Trail
LastBL
/Library/Caches/com.apple.xbs/Sources/AppSupportUI_Sim/AppSupportUI/NUIContainerGridView.mm
Use -[%@ initWithArrangedSubviewRows:] or -[%@ init]
Views managed by grid missing from arranged subviews: %@
Arranged subviews not being managed by grid: %@
Row count mismatch
Column count mismatch
column < _columns.count
row < _rows.count
colRangeOut != NULL || rowRangeOut != NULL
findView != nil
row <= _rows.count
arrangedViews.count > 0
numberOfColumns == 0 || numberOfColumns == copy.count
fromRow < _rows.count
toRow < _rows.count
column <= _columns.count
numberOfRows == 0 || numberOfRows == copy.count
v32@?0@"NSMutableArray"8Q16^B24
fromCol < _columns.count
toCol < _columns.count
%@ size = {%ld, %ld} cells = 
[%@:%@]
(%@|%@)
v16@?0r^{_NUIGridArrangementCell=@{?=ff}{?=ff}{CGSize=dd}{CGSize=dd}{_NSRange=QQ}{_NSRange=QQ}{?=dd}b8b8}8
-[%1$@ insertArrangedSubview:atIndex:] not supported, use -[%1$@ insert{Row|Column}AtIndex:withArrangedSubviews:] to insert arranged subviews.
-[%1$@ removeArrangedSubview:] not supported, use -[%1$@ remove{Row|Column}AtIndex:] to remove arranged subviews.
Invalid system spacing
%lu-%lu
%@ no longer attached to grid view <%p>.
%@ axis = %@: distribution = %@; alignments = 
Horz
Vert
[%@]
axis
distribution
spacing
/Library/Caches/com.apple.xbs/Sources/AppSupportUI_Sim/AppSupportUI/NUIBoxArrangement.mm
container != nil
dataSource != nil
v24@?0^{_NUIBoxArrangementCell=@{CGSize=dd}{CGSize=dd}{?=dd}b8b8}8Q16
_NUIBoxArrangement
%@ alignments = 
[%@|%@]
alignmnets
/Library/Caches/com.apple.xbs/Sources/AppSupportUI_Sim/AppSupportUI/NUIContentScrollView.m
Invalid horizontal alignment %ld.
Invalid vertical alignment %ld.
/Library/Caches/com.apple.xbs/Sources/AppSupportUI_Sim/AppSupportUI/NUIGridArrangement.mm
A container %@ has an invalid rect %@ for item %@. Break on _NUIArrangementInvalidRect to debug.
An item %@ returned an invalid size %@. Break on _NUIArrangementInvalidSize to debug.
Grid arrangement does not have valid measurement for %@
Skipping layout in size %@ for view: %@
View is not an arranged subviews %@.
Box arrangement does not have valid measurement for %@
Non default minimum spacing adjecent to arranged subview is not yet supported by NUIContainerFlowView.
_NUIViewContainerViewInfo
NUIContainerView
_NUISizeCache
NUISubclassHelpers
NUIPrivate
NUIClassCheck
_NUIFlowRowContainer
_NUIGridArrangementContainer
NUIArrangementContainer
NSObject
NUIArrangementItem
_NUIFlowFillEuallyDummyItem
_NUIFlowContainer
NUITableViewContainerCell
NUICollectionViewContainerCell
_NUIGridArrangement
NUIContainerViewHack
_UIMultilineTextContentSizing
NUIAccessibilitySupport
NUISubclassing
NUIDebug
NUIDebugPrivate
NUIContainerGridView
NUIGridDimension
NUIContainerStackView
NUIBoxArrangement
_NUIBoxArrangementContainer
NUIContainerFlowView
_NUIFlowArrangementContainer
NUIContainerBoxView
NUIContentScrollView
NUITestExtras
NUISizeCache
NUIGridArrangement
CGColor
.cxx_destruct
T@"NSArray",R,N
T#,R,N
_containerFlags
T@"<NUIBoxArrangementDataSource>",R,W,N
_length
T@"<NUIGridArrangementDataSource>",R,W,N
arrayWithArray:
T@"NSString",R,C
canScrollDocumentViewVertically
T@"UIView",&,N
containsObject:
TB,N
dealloc
TB,N,GisBaselineRelativeArrangement
distributionForRowAtIndex:ofTotalRowCount:withArrangedSubviews:
TB,N,GisHidden
invalidateCache
TB,N,V_canScrollDocumentViewHorizontally
isProxy
TQ,R
layoutArrangedSubviewsInBounds:
Td,N,V_columnWidth
numberOfItemsInGridArrangement:
Td,N,V_spacing
release
Tq,N,V_horizontalAlignment
Tq,R,N
setBorderColor:
T{UIEdgeInsets=dddd},N
setColumnWidth:
_arrangedSubviewInfo
setContentView:
_arrangement
spacing
_autolayoutSpacingAtEdge:forAttribute:nextToNeighbor:edge:attribute:multiplier:
.cxx_construct
T@"NSArray",C,N
T#,R
_bounds
T@"<NUIArrangementContainer>",R,W,N
_customSpacings
T@"<NUIContainerViewDelegate>",W,N
_stackViewFlags
T@"NSArray",C,D,N
calculateLayoutSizeFittingSize:
T@"NUIContainerView",R,N,V_containerView
containerView:willMeasureArrangedSubviewsFittingSize:forReason:
T@"UIView",&,N,V_documentView
countForObject:
TB,N,GhasBaselineRelativeLayoutMarginsForArrangement
debugDictionary
TB,N,GisDebugBoundingBoxesEnabled
effectiveLayoutSizeFittingSize:
TB,N,GisLayoutMarginsRelativeArrangement
isInBatchUpdate
TB,N,V_canScrollDocumentViewVertically
isScrollEnabled
Td,N
numberOfColumns
Td,N,V_rowHeight
numberWithBool:
Tq,N
replaceArrangedSubview:atIndex:
Tq,N,V_verticalAlignment
setBaselineRelativeArrangement:
T{CGSize=dd},N
setBorderWidth:
_alignmentInsets
setContentSize:
_arrangedSubviews
setItemSpacing:
_autolayoutSpacingAtEdge:forAttribute:inContainer:isGuide:
valueWithRange:
_axesForDerivingIntrinsicContentSizeFromLayoutSize
_baselineOffsetsAtSize:
_baselines
_boxFlags
_cachedAlignmentInsets
_canScrollDocumentViewHorizontally
_canScrollDocumentViewVertically
_columnWidth
_columns
_container
_containerView
_contentViewClass
_currentScreenScale
_dataSource
_debugBoundingBoxLayers
_delegate
_didInvalidateIntrinsicContentSize
_documentView
_dummyItem
_effectiveLayoutMargins
_finalSizeForTargetSize:resultSize:insets:
_firstBaselineView
_flags
_flowArrangement
_flowFlags
_fontInfoForBaselineSpacing
_gridArrangement
_gridView
_gridViewFlags
_hasFontInfoForVerticalBaselineSpacing
_horizontalAlignment
_inSecondConstraintsPass
_intrinsicContentSizeInvalidatedForChildView:
_intrinsicSizeWithinSize:
_isContainerView
_isRTL
_lastBaselineView
_layoutHeightDependsOnWidth
_layoutSizeThatFits:fixedAxes:
_maxSize
_measureSizeForTargetSize:insets:
_minSize
_nui_baselineViewType
_nui_isAccessibilityEnabled
_prepareForFirstIntrinsicContentSizeCalculation
_prepareForSecondIntrinsicContentSizeCalculationWithLayoutEngineBounds:
_range
_resetToBeginningOfDoublePass
_rowContainer
_rowHeight
_rows
_scale
_setHostsLayoutEngine:
_setInSecondConstraintsPass:
_sizeCache
_spacing
_threadSafe
_verticalAlignment
_viewRanges
_viewRows
_visibleArrangedSubviews
_visibleCount
_wantsAutolayout
_wantsConstraintBasedLayout
addArrangedSubview:
addColumnWithArrangedSubviews:
addObject:
addObjectsFromArray:
addObserver:forKeyPath:options:context:
addRowWithArrangedSubviews:
addSubview:
alignment
alignmentForView:inAxis:
alignmentRectForFrame:
alignmentRectInsets
anchorPoint
appendFormat:
appendString:
arrangedDebugDescription
arrangedSubviewAdditionPolicy
arrangedSubviewInColumnAtIndex:rowAtIndex:
arrangedSubviewRemovalPolicy
arrangedSubviewRows
arrangedSubviews
array
arrayWithCapacity:
arrayWithObjects:count:
ascender
assertNotInLayoutPass:
autorelease
axis
baselineRelativeArrangement
baselineRelativeLayoutMarginsForArrangement
boolValue
bounds
boxArrangement:itemAtIndex:horizontalAlignment:verticalAlignment:
brownColor
calculateArrangedSizeFittingSize:
calculateViewForFirstBaselineLayout
calculateViewForLastBaselineLayout
callStackSymbols
canCancelMeasurementForCompression
canScrollDocumentViewHorizontally
canUseFastLayoutSizeCalulation
capHeight
class
colorWithAlphaComponent:
columnAtIndex:
columnIndexForArrangedSubview:
columnSpacing
columnWidth
conformsToProtocol:
container
containerBoxViewWithArrangedSubviews:
containerFlowViewWithArrangedSubviews:
containerGridViewWithArrangedSubviewRows:
containerStackViewWithAxis:arrangedSubviews:
containerView
containerView:layoutFrameForArrangedSubview:withProposedFrame:
containerView:shouldRestartMeasurementDueToCompressionInAxis:forReason:
containerView:systemLayoutSizeFittingSize:forArrangedSubview:
containerViewClass
containerViewDidLayoutArrangedSubviews:
containerViewDidLoad
contentCompressionResistancePriorityForAxis:
contentHuggingPriorityForAxis:
contentInset
contentLayoutSizeCacheDescription
contentLayoutSizeFittingSize:forArrangedSubview:
contentView
copy
count
countByEnumeratingWithState:objects:count:
currentHandler
customAlignmentRectInsets
customBaselineOffsetFromBottom
customFirstBaselineOffsetFromTop
customSpacingAfterView:
dataSource
debugBoundingBoxesEnabled
debugDescription
debugDictionaryForVisibleArrangedSubview:
debugSetDelegateRespondsToSelectors
debugSetEnabledFlags
debugSizeCache
debugSizeCacheDict
debugVersion
delegate
descender
description
dictionary
dictionaryWithDictionary:
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:count:
didInsertArrangedSubview:atIndex:
didRemoveArrangedSubview:atIndex:
displayScale
distribution
distributionForRowAtIndex:ofTotalRowCount:withCells:
documentView
effectiveAlignmentRectInsets
effectiveBaselineOffsetFromBottom
effectiveBaselineOffsetFromContentBottom
effectiveFirstBaselineOffsetFromContentTop
effectiveFirstBaselineOffsetFromTop
effectiveLayoutBounds
effectiveLayoutMargins
effectiveScreenScale
effectiveSeparatorHeight
effectiveUserInterfaceLayoutDirection
enableAPIMisuseAssertions
ensureArrangedSubviewsAreValid
enumerateObjectsUsingBlock:
environment
filteredArrayUsingPredicate:
firstObject
fittingSizeForCell:withProposedSize:
fittingSizeForFlowPositioningOfArrangedSubview:withProposedSize:
frame
frameForColumns:rows:inBounds:
getColumnRange:rowRange:forArrangedSubview:
getSize:forTargetSize:isSizeDependentOnPerpendicularAxis:
gridArrangement:heightOfRowAtIndex:spacingAfter:
gridArrangement:itemAtIndex:columns:rows:horizontalAlignment:verticalAlignment:
gridArrangement:widthOfColumnAtIndex:spacingAfter:
handleFailureInMethod:object:file:lineNumber:description:
hasBaselineRelativeLayoutMarginsForArrangement
hash
hidden
horizontalAlignment
horizontalContainerStackViewWithArrangedSubviews:
horizontalDistribution
imageViewWithImage:
indexOfArrangedSubview:
indexOfObject:
indexOfObject:inRange:
init
initForAsynchronousAccess:
initWithArrangedSubviewRows:
initWithArrangedSubviews:
initWithCoder:
initWithContainer:dataSource:
initWithContentView:
initWithDocumentView:
initWithFlowArrangement:
initWithFlowArrangement:cellRange:
initWithFrame:
initWithImage:
initWithObjectsAndKeys:
initWithRowContainer:
initWithStyle:reuseIdentifier:
initialize
insertArrangedSubview:atIndex:
insertColumnAtIndex:withArrangedSubviews:
insertObject:atIndex:
insertRowAtIndex:withArrangedSubviews:
insertSize:forTargetSize:
insertSublayer:above:
insertSublayer:atIndex:
insertSublayer:below:
instanceMethodForSelector:
intValue
intrinsicContentSizeDidInvalidateForArrangedSubview:
invalidateInternalStateForInvalidation:
invalidateIntrinsicContentSize
invalidatingIntrinsicContentSizeAlsoInvalidatesSuperview
isBaselineRelativeArrangement
isDebugBoundingBoxesEnabled
isEqual:
isEqualToSet:
isEqualToString:
isHidden
isKindOfClass:
isLayoutMarginsRelativeArrangement
isLayoutSizeDependentOnPerpendicularAxis
isMemberOfClass:
itemSpacing
itemWidth
labelWithString:
lastObject
layer
layerClass
layoutFrameForArrangedSubview:withProposedContentFrame:
layoutIfNeeded
layoutMargins
layoutMarginsDidChange
layoutMarginsRelativeArrangement
layoutSizeFittingSize:
layoutSubviews
length
lineHeight
mainScreen
makeObjectsPerformSelector:
maximumLayoutSize
methodForSelector:
minimumLayoutSize
minimumSpacingAdjacentToView:
minusSet:
moveColumnAtIndex:toIndex:
moveRowAtIndex:toIndex:
mustRestartMeasurement
mutableCopy
needsBaselineDebugBoundingBoxesForArrangedSubview:
neverCacheEffectiveLayoutSize
nukeContentLayoutSizeCacheFromOrbit
numberOfItemsInBoxArrangement:
numberOfLines
numberOfRows
numberWithDouble:
numberWithFloat:
numberWithInteger:
numberWithUnsignedInt:
numberWithUnsignedInteger:
objectAtIndex:
objectAtIndexedSubscript:
objectForKeyedSubscript:
observeValueForKeyPath:ofObject:change:context:
orangeColor
orderedSetWithArray:
orderedSetWithCapacity:
performBatchUpdates:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
populateBoxArrangementCells:
populateFlowArrangementCells:
populateGridArrangementCells:
populateGridArrangementDimension:withCells:axis:
positionAdjustmentOffsetForView:
positionItemsInBounds:block:
positionItemsInColumns:rows:inBounds:block:
predicateWithBlock:
preferredContentSizeCategory
processInfo
purpleColor
raise:format:
redColor
reloadData
removeAllObjects
removeArrangedSubview:
removeColumnAtIndex:
removeFromSuperlayer
removeFromSuperview
removeObjectAtIndex:
removeObserver:forKeyPath:
removeRowAtIndex:
replaceArrangedSubview:inColumnAtIndex:rowAtIndex:
replaceArrangedSubviewAtIndex:withView:
replaceObjectAtIndex:withObject:
requiresConstraintBasedLayout
respondsToSelector:
retain
retainCount
reverseObjectEnumerator
rowAtIndex:
rowHeight
rowIndexForArrangedSubview:
rowSpacing
scale
self
setAlignment:
setAlignment:forView:inAxis:
setArrangedSubviewAdditionPolicy:
setArrangedSubviewRemovalPolicy:
setArrangedSubviewRows:
setArrangedSubviews:
setAutoresizingMask:
setAxis:
setBaselineRelativeLayoutMarginsForArrangement:
setBounds:
setCanScrollDocumentViewHorizontally:
setCanScrollDocumentViewVertically:
setCenter:
setColumnSpacing:
setContentCompressionResistancePriority:forAxis:
setContentHuggingPriority:forAxis:
setCurrentEffectiveLayoutSizeFittingSizeShouldNotBeCached
setCustomAlignmentRectInsets:
setCustomBaselineOffsetFromBottom:
setCustomFirstBaselineOffsetFromTop:
setCustomSpacing:afterView:
setDebugBoundingBoxesEnabled:
setDelegate:
setDistribution:
setDocumentView:
setEnableAPIMisuseAssertions:
setFrame:
setHidden:
setHorizontalAlignment:
setHorizontalDistribution:
setInvalidatingIntrinsicContentSizeAlsoInvalidatesSuperview:
setItemWidth:
setLayoutMarginsRelativeArrangement:
setLayoutSize:withContentPriority:
setLayoutSize:withHorizontalContentPriority:verticalContentPriority:
setLength:
setMaximumLayoutSize:
setMinimumLayoutSize:
setMinimumSpacing:adjacentToView:
setNeedsInvalidation:
setNeedsLayout
setNeverCacheEffectiveLayoutSize:
setNumberOfColumns:
setNumberOfLines:
setObject:forKey:
setObject:forKeyedSubscript:
setPositionAdjustmentOffset:forView:
setPreservesSuperviewLayoutMargins:
setRowHeight:
setRowSpacing:
setSpacing:
setSpacing:afterArrangedSubviewAtIndex:
setSpacingAfter:
setText:
setUntransformedFrame:
setVerticalAlignment:
setVerticalDistribution:
setWithArray:
sharedApplication
shouldCancelMeasurementForCompressionInAxis:
sizeThatFits:
sizeToBestFitAndLayoutIfNeeded
sortDescriptorWithKey:ascending:
sortedArrayUsingDescriptors:
spacingAfter
string
stringByAppendingFormat:
stringByAppendingString:
stringWithFormat:
stringWithUTF8String:
substringToIndex:
subviews
superclass
superview
systemLayoutSizeFittingSize:
systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:
systemSpacingToAdjecentSiblingView:axis:baselineRelative:multiplier:
systemSpacingToSuperView:edge:baselineRelative:multiplier:
testableEffectiveLayoutSizeFittingSize:
testableSizeThatFits:
transform
unionFrameForItemsInColumns:rows:inBounds:
value:withObjCType:
valueWithCGSize:
verticalAlignment
verticalContainerStackViewWithArrangedSubviews:
verticalDistribution
viewForFirstBaselineLayout
viewForFirstBaselineLayoutInRowAtIndex:
viewForLastBaselineLayout
viewForLastBaselineLayoutInRowAtIndex:
visibilityDidChangeForArrangedSubview:
visibleArrangedSubviews
weakObjectsHashTable
willRemoveSubview:
wrappingLabelWithString:
zone
@16@0:8
v16@0:8
{nui_size_cache="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::pair<CGSize, CGSize> *, std::allocator<std::pair<CGSize, CGSize>>>="__value_"^v}}
{CGSize="width"d"height"d}
{UIEdgeInsets="top"d"left"d"bottom"d"right"d}
{?="baseLineFromTop"d"baseLineFromBottom"d}
{?="neverCacheLayoutSize"b1"shouldCacheLayoutSize"b1"alsoInvalidateSuperview"b1"cachedAlignmentInsetsAreValid"b1"topBaselineIsCustom"b1"bottomBaselineIsCustom"b1}
{CGSize=dd}32@0:8{CGSize=dd}16
d16@0:8
B16@0:8
v20@0:8B16
v32@0:8{CGSize=dd}16
{CGSize=dd}16@0:8
v36@0:8{CGSize=dd}16f32
v40@0:8{CGSize=dd}16f32f36
v48@0:8{UIEdgeInsets=dddd}16
{UIEdgeInsets=dddd}16@0:8
v24@0:8d16
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
d44@0:8@16q24B32d36
d44@0:8@16Q24B32d36
q16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
{CGSize=dd}40@0:8{CGSize=dd}16@32
{CGRect={CGPoint=dd}{CGSize=dd}}56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
{CGSize=dd}40@0:8{CGSize=dd}16@"<NUIArrangementItem>"32
{CGRect={CGPoint=dd}{CGSize=dd}}56@0:8@"<NUIArrangementItem>"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v24@0:8^v16
v40@0:8^v16r^v24q32
B24@0:8q16
f24@0:8q16
@40@0:8r^v16{_NSRange=QQ}24
{_NUIGridArrangement="container"@"<_NUIGridArrangementContainer>""horzDist"b8"vertDist"b8"baselineRelative"B"hasValidMeasurement"B"cells"{vector<_NUIGridArrangementCell, std::allocator<_NUIGridArrangementCell>>="__begin_"^{_NUIGridArrangementCell}"__end_"^{_NUIGridArrangementCell}"__end_cap_"{__compressed_pair<_NUIGridArrangementCell *, std::allocator<_NUIGridArrangementCell>>="__value_"^{_NUIGridArrangementCell}}}"columns"{vector<_NUIGridArrangementDimension, std::allocator<_NUIGridArrangementDimension>>="__begin_"^{_NUIGridArrangementDimension}"__end_"^{_NUIGridArrangementDimension}"__end_cap_"{__compressed_pair<_NUIGridArrangementDimension *, std::allocator<_NUIGridArrangementDimension>>="__value_"^{_NUIGridArrangementDimension}}}"rows"{vector<_NUIGridArrangementDimension, std::allocator<_NUIGridArrangementDimension>>="__begin_"^{_NUIGridArrangementDimension}"__end_"^{_NUIGridArrangementDimension}"__end_cap_"{__compressed_pair<_NUIGridArrangementDimension *, std::allocator<_NUIGridArrangementDimension>>="__value_"^{_NUIGridArrangementDimension}}}"viewFrames"{vector<CGRect, std::allocator<CGRect>>="__begin_"^{CGRect}"__end_"^{CGRect}"__end_cap_"{__compressed_pair<CGRect *, std::allocator<CGRect>>="__value_"^{CGRect}}}}
{_NSRange="location"Q"length"Q}
@"_NUIFlowFillEuallyDummyItem"
@24@0:8@16
@"_NUIFlowRowContainer"
@24@0:8r^v16
@32@0:8q16@24
{CGSize=dd}40@0:8{CGSize=dd}16f32f36
@"NUIContainerView"
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v24@0:8@16
v24@0:8q16
v24@0:8@?16
v32@0:8@16Q24
v32@0:8Q16@24
Q24@0:8@16
q32@0:8@16q24
v40@0:8q16@24q32
{CGPoint=dd}24@0:8@16
v40@0:8{CGPoint=dd}16@32
{NSDirectionalEdgeInsets=dddd}24@0:8@16
v56@0:8{NSDirectionalEdgeInsets=dddd}16@48
{CGSize=dd}40@0:8{CGSize=dd}16Q32
v48@0:8@16@24@32^v40
@"<NUIContainerViewDelegate>"
{map<UIView *, _NUIContainerViewArrangedSubview, std::less<UIView *>, std::allocator<std::pair<UIView *const, _NUIContainerViewArrangedSubview>>>="__tree_"{__tree<std::__value_type<UIView *, _NUIContainerViewArrangedSubview>, std::__map_value_compare<UIView *, std::__value_type<UIView *, _NUIContainerViewArrangedSubview>, std::less<UIView *>, true>, std::allocator<std::__value_type<UIView *, _NUIContainerViewArrangedSubview>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<UIView *, _NUIContainerViewArrangedSubview>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<UIView *, std::__value_type<UIView *, _NUIContainerViewArrangedSubview>, std::less<UIView *>, true>>="__value_"Q}}}
@"NSMutableArray"
@"NSArray"
@"UIView"
{vector<CALayer *, std::allocator<CALayer *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<CALayer **, std::allocator<CALayer *>>="__value_"^@}}
{?="hiddenArrangedSubviewCount"b16"delaydInvalidation"b8"batchDepth"b4"inLayoutPass"b2"inMeasurementPass"b2"layoutDependency"b2"removalPolicy"b2"removalPolicyHasBeenSet"b1"additionPolicy"b1"inEnsureArranged"b1"inEffectiveSize"b1"hasMargins"b1"debugBoundingBoxes"b1"baselineRelative"b1"layoutMarginsRelative"b1"baselineLayoutMargins"b1"mustRestart"b1"delegateSystemLayoutSizeFittingSizeForArrangedSubview"b1"delegateLayoutFrameForArrangedSubview"b1"delegateWillMeasureFitting"b1"delegateShouldRestart"b1"delegateDidLayout"b1}
{?=dd}32@0:8{CGSize=dd}16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v32@0:8@16q24
@32@0:8q16q24
v40@0:8^{_NSRange=QQ}16^{_NSRange=QQ}24@32
q24@0:8@16
@24@0:8q16
v32@0:8q16q24
v40@0:8@16q24q32
{?="width"S"height"S}
{map<UIView *, const std::pair<_NSRange, _NSRange>, std::less<UIView *>, std::allocator<std::pair<UIView *const, const std::pair<_NSRange, _NSRange>>>>="__tree_"{__tree<std::__value_type<UIView *, const std::pair<_NSRange, _NSRange>>, std::__map_value_compare<UIView *, std::__value_type<UIView *, const std::pair<_NSRange, _NSRange>>, std::less<UIView *>, true>, std::allocator<std::__value_type<UIView *, const std::pair<_NSRange, _NSRange>>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<UIView *, const std::pair<_NSRange, _NSRange>>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<UIView *, std::__value_type<UIView *, const std::pair<_NSRange, _NSRange>>, std::less<UIView *>, true>>="__value_"Q}}}
{?="horzAlign"b8"vertAlign"b8"inInsertOrRemove"b1"hasMutations"b1}
@"NSArray"16@0:8
v24@0:8@"NSArray"16
@"NUIContainerGridView"
{?="align"b8"isRow"b1"hidden"b1"wasDetached"b1}
d24@0:8@16
v32@0:8d16@24
v32@0:8d16q24
{map<UIView *, double, std::less<UIView *>, std::allocator<std::pair<UIView *const, double>>>="__tree_"{__tree<std::__value_type<UIView *, double>, std::__map_value_compare<UIView *, std::__value_type<UIView *, double>, std::less<UIView *>, true>, std::allocator<std::__value_type<UIView *, double>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<UIView *, double>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<UIView *, std::__value_type<UIView *, double>, std::less<UIView *>, true>>="__value_"Q}}}
{?="alignment"b8"distribution"b8"axis"b4}
@32@0:8@16@24
v56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@?48
{_NUIBoxArrangement="container"@"<_NUIBoxArrangementContainer>""horzDist"q"vertDist"q"hasValidMeasurement"B"cells"{vector<_NUIBoxArrangementCell, std::allocator<_NUIBoxArrangementCell>>="__begin_"^{_NUIBoxArrangementCell}"__end_"^{_NUIBoxArrangementCell}"__end_cap_"{__compressed_pair<_NUIBoxArrangementCell *, std::allocator<_NUIBoxArrangementCell>>="__value_"^{_NUIBoxArrangementCell}}}"measureSize"{CGSize="width"d"height"d}"viewFrames"{vector<CGRect, std::allocator<CGRect>>="__begin_"^{CGRect}"__end_"^{CGRect}"__end_cap_"{__compressed_pair<CGRect *, std::allocator<CGRect>>="__value_"^{CGRect}}}"maxBaseLinePair"{?="baseLineFromTop"d"baseLineFromBottom"d}}
@"<NUIArrangementContainer>"
@"<NUIBoxArrangementDataSource>"
{?="containerDirection"b1}
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
{CGSize=dd}40@0:8r^{_NUIFlowArrangementCell=@{CGSize=dd}{CGSize=dd}{?=dd}b8b8}16{CGSize=dd}24
q40@0:8q16q24r^v32
{CGSize=dd}40@0:8@16{CGSize=dd}24
q40@0:8q16q24@32
{_NUIFlowArrangement="container"@"<_NUIFlowArrangementContainer>""horzDist"b8"vertDist"b8"baselineRelative"B"columns"Q"rowSpacing"d"itemSpacing"d"rowHeight"d"itemWidth"d"cells"{vector<_NUIFlowArrangementCell, std::allocator<_NUIFlowArrangementCell>>="__begin_"^{_NUIFlowArrangementCell}"__end_"^{_NUIFlowArrangementCell}"__end_cap_"{__compressed_pair<_NUIFlowArrangementCell *, std::allocator<_NUIFlowArrangementCell>>="__value_"^{_NUIFlowArrangementCell}}}"rows"{vector<_NUIFlowRowContainer *, std::allocator<_NUIFlowRowContainer *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<_NUIFlowRowContainer **, std::allocator<_NUIFlowRowContainer *>>="__value_"^@}}"flowContainer"@"_NUIFlowContainer""measuredWidth"d"viewFrames"{vector<CGRect, std::allocator<CGRect>>="__begin_"^{CGRect}"__end_"^{CGRect}"__end_cap_"{__compressed_pair<CGRect *, std::allocator<CGRect>>="__value_"^{CGRect}}}"maxBaseLinePair"{?="baseLineFromTop"d"baseLineFromBottom"d}}
{?="horzAlign"b8"vertAlign"b8}
{CGSize=dd}64@0:8{CGSize=dd}16{UIEdgeInsets=dddd}32
{CGSize=dd}80@0:8{CGSize=dd}16{CGSize=dd}32{UIEdgeInsets=dddd}48
@20@0:8B16
B44@0:8^{CGSize=dd}16{CGSize=dd}24B40
v48@0:8{CGSize=dd}16{CGSize=dd}32
v88@0:8{_NSRange=QQ}16{_NSRange=QQ}32{CGRect={CGPoint=dd}{CGSize=dd}}48@?80
{CGRect={CGPoint=dd}{CGSize=dd}}80@0:8{_NSRange=QQ}16{_NSRange=QQ}32{CGRect={CGPoint=dd}{CGSize=dd}}48
@"<NUIGridArrangementDataSource>"
{?="delegateWidth"b1"delegateHeight"b1"containerDirection"b1}
MbP?
Invalid edge %lu
<%@ %p size cache:
%@ : %@
containerViewInfoKey
v8@?0
Arranged subview %@ wants autolayout. It must be wrapped in a _UIConstraintBasedLayoutHostingView or override _layoutSizeThatFits:fixedAxes:.
com.apple.AppSupportUI
v48@?0@"<NUIArrangementItem>"8{CGRect={CGPoint=dd}{CGSize=dd}}16
item
{CGSize=dd}
size
baselines
_NUIFlowArrangement
class
maxBaselines
rowSpacing
itemSpacing
cells
topOffset
bottomOffset
-[%@ %@] not implemented.
v24@?0^{_NUIGridArrangementCell=@{?=ff}{?=ff}{CGSize=dd}{CGSize=dd}{_NSRange=QQ}{_NSRange=QQ}{?=dd}b8b8}8Q16
column
span
index
length
spacingAfter
hugging
compression
priorities
_NUIGridArrangement
baselineRelative
horizontal
vertical
distributions
columns
rows
arrangement
v32@?0^{_NUIGridArrangementCell=@{?=ff}{?=ff}{CGSize=dd}{CGSize=dd}{_NSRange=QQ}{_NSRange=QQ}{?=dd}b8b8}8{_NSRange=QQ}16
Default
Fill
FillEqual
FillProp
EqualSpacing
EqualCentering
EqualGrouping
StackLeading
StackCenter
StackTrailing
Unknown(%ld)
NUIContainerView
NUIContainerViewDebug
-%@ %@ not yet supported.
View is not a subview: %@
View is represented %lu times: %@
v32@?0@"UIView"8Q16^B24
B24@?0@"UIView"8@"NSDictionary"16
/Library/Caches/com.apple.xbs/Sources/AppSupportUI_Sim/AppSupportUI/NUIContainerView.mm
<Unknown File>
Mismatching visible arranged subviews count
Cannot nest more than 15 calls to performBatchUpdates:
Invalid parameter not satisfying: %@
view != nil
Hidden count mismatch
Info count mismatch
stackIndex <= _arrangedSubviews.count
Info caount mismatch
newView != nil
index < _arrangedSubviews.count
View is not an arranged subviews %@.
effectiveLayoutSizeFittingSize: is not reentrant
hidden
arrangedSubviews = %lu[%lu];
arrangedSubviews = %lu[-];
 %@>
%@ called while in a layout or measurement pass.
visibleArrangedSubviews
arrangedSubviewsWantingAutolayout
cachedSizes
{UIEdgeInsets=dddd}
baselineLayoutMargins
layoutMargins
delegate
respondsTo
self
batchDepth
flags
cachedFirstBaselineView
firstBaselineView
cachedLastBaselineView
lastBaselineView
invalidConsistency
 layoutMarginsRelative = {%f, %f, %f, %f};
 baselineRelative = YES;
AppSupportUI-42.1 (UIKit)
view
horizonral
alignment
leading
bottom
trailing
minimumSpacing
debugBoundingBoxes
delayedInvalidation
inLayoutPass
inMeasurementPass
mustRestartMeasurement
Top/Lead
FirstBL
Center
Bottom/Trail
LastBL
/Library/Caches/com.apple.xbs/Sources/AppSupportUI_Sim/AppSupportUI/NUIContainerGridView.mm
Use -[%@ initWithArrangedSubviewRows:] or -[%@ init]
Views managed by grid missing from arranged subviews: %@
Arranged subviews not being managed by grid: %@
Row count mismatch
Column count mismatch
column < _columns.count
row < _rows.count
colRangeOut != NULL || rowRangeOut != NULL
findView != nil
row <= _rows.count
arrangedViews.count > 0
numberOfColumns == 0 || numberOfColumns == copy.count
fromRow < _rows.count
toRow < _rows.count
column <= _columns.count
numberOfRows == 0 || numberOfRows == copy.count
v32@?0@"NSMutableArray"8Q16^B24
fromCol < _columns.count
toCol < _columns.count
%@ size = {%ld, %ld} cells = 
[%@:%@]
(%@|%@)
v16@?0r^{_NUIGridArrangementCell=@{?=ff}{?=ff}{CGSize=dd}{CGSize=dd}{_NSRange=QQ}{_NSRange=QQ}{?=dd}b8b8}8
-[%1$@ insertArrangedSubview:atIndex:] not supported, use -[%1$@ insert{Row|Column}AtIndex:withArrangedSubviews:] to insert arranged subviews.
-[%1$@ removeArrangedSubview:] not supported, use -[%1$@ remove{Row|Column}AtIndex:] to remove arranged subviews.
Invalid system spacing
%lu-%lu
%@ no longer attached to grid view <%p>.
%@ axis = %@: distribution = %@; alignments = 
Horz
Vert
[%@]
axis
distribution
spacing
/Library/Caches/com.apple.xbs/Sources/AppSupportUI_Sim/AppSupportUI/NUIBoxArrangement.mm
container != nil
dataSource != nil
v24@?0^{_NUIBoxArrangementCell=@{CGSize=dd}{CGSize=dd}{?=dd}b8b8}8Q16
_NUIBoxArrangement
%@ alignments = 
[%@|%@]
alignmnets
/Library/Caches/com.apple.xbs/Sources/AppSupportUI_Sim/AppSupportUI/NUIContentScrollView.m
Invalid horizontal alignment %ld.
Invalid vertical alignment %ld.
/Library/Caches/com.apple.xbs/Sources/AppSupportUI_Sim/AppSupportUI/NUIGridArrangement.mm
A container %@ has an invalid rect %@ for item %@. Break on _NUIArrangementInvalidRect to debug.
An item %@ returned an invalid size %@. Break on _NUIArrangementInvalidSize to debug.
Grid arrangement does not have valid measurement for %@
Skipping layout in size %@ for view: %@
View is not an arranged subviews %@.
Box arrangement does not have valid measurement for %@
Non default minimum spacing adjecent to arranged subview is not yet supported by NUIContainerFlowView.
_NUIViewContainerViewInfo
NUIContainerView
_NUISizeCache
NUISubclassHelpers
NUIPrivate
NUIClassCheck
_NUIFlowRowContainer
_NUIGridArrangementContainer
NUIArrangementContainer
NSObject
NUIArrangementItem
_NUIFlowFillEuallyDummyItem
_NUIFlowContainer
NUITableViewContainerCell
NUICollectionViewContainerCell
_NUIGridArrangement
NUIContainerViewHack
_UIMultilineTextContentSizing
NUIAccessibilitySupport
NUISubclassing
NUIDebug
NUIDebugPrivate
NUIContainerGridView
NUIGridDimension
NUIContainerStackView
NUIBoxArrangement
_NUIBoxArrangementContainer
NUIContainerFlowView
_NUIFlowArrangementContainer
NUIContainerBoxView
NUIContentScrollView
NUITestExtras
NUISizeCache
NUIGridArrangement
CGColor
.cxx_destruct
T@"NSArray",R,N
T#,R,N
_containerFlags
T@"<NUIBoxArrangementDataSource>",R,W,N
_length
T@"<NUIGridArrangementDataSource>",R,W,N
arrayWithArray:
T@"NSString",R,C
canScrollDocumentViewVertically
T@"UIView",&,N
containsObject:
TB,N
dealloc
TB,N,GisBaselineRelativeArrangement
distributionForRowAtIndex:ofTotalRowCount:withArrangedSubviews:
TB,N,GisHidden
invalidateCache
TB,N,V_canScrollDocumentViewHorizontally
isProxy
TQ,R
layoutArrangedSubviewsInBounds:
Td,N,V_columnWidth
numberOfItemsInGridArrangement:
Td,N,V_spacing
release
Tq,N,V_horizontalAlignment
Tq,R,N
setBorderColor:
T{UIEdgeInsets=dddd},N
setColumnWidth:
_arrangedSubviewInfo
setContentView:
_arrangement
spacing
_autolayoutSpacingAtEdge:forAttribute:nextToNeighbor:edge:attribute:multiplier:
.cxx_construct
T@"NSArray",C,N
T#,R
_bounds
T@"<NUIArrangementContainer>",R,W,N
_customSpacings
T@"<NUIContainerViewDelegate>",W,N
_stackViewFlags
T@"NSArray",C,D,N
calculateLayoutSizeFittingSize:
T@"NUIContainerView",R,N,V_containerView
containerView:willMeasureArrangedSubviewsFittingSize:forReason:
T@"UIView",&,N,V_documentView
countForObject:
TB,N,GhasBaselineRelativeLayoutMarginsForArrangement
debugDictionary
TB,N,GisDebugBoundingBoxesEnabled
effectiveLayoutSizeFittingSize:
TB,N,GisLayoutMarginsRelativeArrangement
isInBatchUpdate
TB,N,V_canScrollDocumentViewVertically
isScrollEnabled
Td,N
numberOfColumns
Td,N,V_rowHeight
numberWithBool:
Tq,N
replaceArrangedSubview:atIndex:
Tq,N,V_verticalAlignment
setBaselineRelativeArrangement:
T{CGSize=dd},N
setBorderWidth:
_alignmentInsets
setContentSize:
_arrangedSubviews
setItemSpacing:
_autolayoutSpacingAtEdge:forAttribute:inContainer:isGuide:
valueWithRange:
_axesForDerivingIntrinsicContentSizeFromLayoutSize
_baselineOffsetsAtSize:
_baselines
_boxFlags
_cachedAlignmentInsets
_canScrollDocumentViewHorizontally
_canScrollDocumentViewVertically
_columnWidth
_columns
_container
_containerView
_contentViewClass
_currentScreenScale
_dataSource
_debugBoundingBoxLayers
_delegate
_didInvalidateIntrinsicContentSize
_documentView
_dummyItem
_effectiveLayoutMargins
_finalSizeForTargetSize:resultSize:insets:
_firstBaselineView
_flags
_flowArrangement
_flowFlags
_fontInfoForBaselineSpacing
_gridArrangement
_gridView
_gridViewFlags
_hasFontInfoForVerticalBaselineSpacing
_horizontalAlignment
_inSecondConstraintsPass
_intrinsicContentSizeInvalidatedForChildView:
_intrinsicSizeWithinSize:
_isContainerView
_isRTL
_lastBaselineView
_layoutHeightDependsOnWidth
_layoutSizeThatFits:fixedAxes:
_maxSize
_measureSizeForTargetSize:insets:
_minSize
_nui_baselineViewType
_nui_isAccessibilityEnabled
_prepareForFirstIntrinsicContentSizeCalculation
_prepareForSecondIntrinsicContentSizeCalculationWithLayoutEngineBounds:
_range
_resetToBeginningOfDoublePass
_rowContainer
_rowHeight
_rows
_scale
_setHostsLayoutEngine:
_setInSecondConstraintsPass:
_sizeCache
_spacing
_threadSafe
_verticalAlignment
_viewRanges
_viewRows
_visibleArrangedSubviews
_visibleCount
_wantsAutolayout
_wantsConstraintBasedLayout
addArrangedSubview:
addColumnWithArrangedSubviews:
addObject:
addObjectsFromArray:
addObserver:forKeyPath:options:context:
addRowWithArrangedSubviews:
addSubview:
alignment
alignmentForView:inAxis:
alignmentRectForFrame:
alignmentRectInsets
anchorPoint
appendFormat:
appendString:
arrangedDebugDescription
arrangedSubviewAdditionPolicy
arrangedSubviewInColumnAtIndex:rowAtIndex:
arrangedSubviewRemovalPolicy
arrangedSubviewRows
arrangedSubviews
array
arrayWithCapacity:
arrayWithObjects:count:
ascender
assertNotInLayoutPass:
autorelease
axis
baselineRelativeArrangement
baselineRelativeLayoutMarginsForArrangement
boolValue
bounds
boxArrangement:itemAtIndex:horizontalAlignment:verticalAlignment:
brownColor
calculateArrangedSizeFittingSize:
calculateViewForFirstBaselineLayout
calculateViewForLastBaselineLayout
callStackSymbols
canCancelMeasurementForCompression
canScrollDocumentViewHorizontally
canUseFastLayoutSizeCalulation
capHeight
class
colorWithAlphaComponent:
columnAtIndex:
columnIndexForArrangedSubview:
columnSpacing
columnWidth
conformsToProtocol:
container
containerBoxViewWithArrangedSubviews:
containerFlowViewWithArrangedSubviews:
containerGridViewWithArrangedSubviewRows:
containerStackViewWithAxis:arrangedSubviews:
containerView
containerView:layoutFrameForArrangedSubview:withProposedFrame:
containerView:shouldRestartMeasurementDueToCompressionInAxis:forReason:
containerView:systemLayoutSizeFittingSize:forArrangedSubview:
containerViewClass
containerViewDidLayoutArrangedSubviews:
containerViewDidLoad
contentCompressionResistancePriorityForAxis:
contentHuggingPriorityForAxis:
contentInset
contentLayoutSizeCacheDescription
contentLayoutSizeFittingSize:forArrangedSubview:
contentView
copy
count
countByEnumeratingWithState:objects:count:
currentHandler
customAlignmentRectInsets
customBaselineOffsetFromBottom
customFirstBaselineOffsetFromTop
customSpacingAfterView:
dataSource
debugBoundingBoxesEnabled
debugDescription
debugDictionaryForVisibleArrangedSubview:
debugSetDelegateRespondsToSelectors
debugSetEnabledFlags
debugSizeCache
debugSizeCacheDict
debugVersion
delegate
descender
description
dictionary
dictionaryWithDictionary:
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:count:
didInsertArrangedSubview:atIndex:
didRemoveArrangedSubview:atIndex:
displayScale
distribution
distributionForRowAtIndex:ofTotalRowCount:withCells:
documentView
effectiveAlignmentRectInsets
effectiveBaselineOffsetFromBottom
effectiveBaselineOffsetFromContentBottom
effectiveFirstBaselineOffsetFromContentTop
effectiveFirstBaselineOffsetFromTop
effectiveLayoutBounds
effectiveLayoutMargins
effectiveScreenScale
effectiveSeparatorHeight
effectiveUserInterfaceLayoutDirection
enableAPIMisuseAssertions
ensureArrangedSubviewsAreValid
enumerateObjectsUsingBlock:
environment
filteredArrayUsingPredicate:
firstObject
fittingSizeForCell:withProposedSize:
fittingSizeForFlowPositioningOfArrangedSubview:withProposedSize:
frame
frameForColumns:rows:inBounds:
getColumnRange:rowRange:forArrangedSubview:
getSize:forTargetSize:isSizeDependentOnPerpendicularAxis:
gridArrangement:heightOfRowAtIndex:spacingAfter:
gridArrangement:itemAtIndex:columns:rows:horizontalAlignment:verticalAlignment:
gridArrangement:widthOfColumnAtIndex:spacingAfter:
handleFailureInMethod:object:file:lineNumber:description:
hasBaselineRelativeLayoutMarginsForArrangement
hash
hidden
horizontalAlignment
horizontalContainerStackViewWithArrangedSubviews:
horizontalDistribution
imageViewWithImage:
indexOfArrangedSubview:
indexOfObject:
indexOfObject:inRange:
init
initForAsynchronousAccess:
initWithArrangedSubviewRows:
initWithArrangedSubviews:
initWithCoder:
initWithContainer:dataSource:
initWithContentView:
initWithDocumentView:
initWithFlowArrangement:
initWithFlowArrangement:cellRange:
initWithFrame:
initWithImage:
initWithObjectsAndKeys:
initWithRowContainer:
initWithStyle:reuseIdentifier:
initialize
insertArrangedSubview:atIndex:
insertColumnAtIndex:withArrangedSubviews:
insertObject:atIndex:
insertRowAtIndex:withArrangedSubviews:
insertSize:forTargetSize:
insertSublayer:above:
insertSublayer:atIndex:
insertSublayer:below:
instanceMethodForSelector:
intValue
intrinsicContentSizeDidInvalidateForArrangedSubview:
invalidateInternalStateForInvalidation:
invalidateIntrinsicContentSize
invalidatingIntrinsicContentSizeAlsoInvalidatesSuperview
isBaselineRelativeArrangement
isDebugBoundingBoxesEnabled
isEqual:
isEqualToSet:
isEqualToString:
isHidden
isKindOfClass:
isLayoutMarginsRelativeArrangement
isLayoutSizeDependentOnPerpendicularAxis
isMemberOfClass:
itemSpacing
itemWidth
labelWithString:
lastObject
layer
layerClass
layoutFrameForArrangedSubview:withProposedContentFrame:
layoutIfNeeded
layoutMargins
layoutMarginsDidChange
layoutMarginsRelativeArrangement
layoutSizeFittingSize:
layoutSubviews
length
lineHeight
mainScreen
makeObjectsPerformSelector:
maximumLayoutSize
methodForSelector:
minimumLayoutSize
minimumSpacingAdjacentToView:
minusSet:
moveColumnAtIndex:toIndex:
moveRowAtIndex:toIndex:
mustRestartMeasurement
mutableCopy
needsBaselineDebugBoundingBoxesForArrangedSubview:
neverCacheEffectiveLayoutSize
nukeContentLayoutSizeCacheFromOrbit
numberOfItemsInBoxArrangement:
numberOfLines
numberOfRows
numberWithDouble:
numberWithFloat:
numberWithInteger:
numberWithUnsignedInt:
numberWithUnsignedInteger:
objectAtIndex:
objectAtIndexedSubscript:
objectForKeyedSubscript:
observeValueForKeyPath:ofObject:change:context:
orangeColor
orderedSetWithArray:
orderedSetWithCapacity:
performBatchUpdates:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
populateBoxArrangementCells:
populateFlowArrangementCells:
populateGridArrangementCells:
populateGridArrangementDimension:withCells:axis:
positionAdjustmentOffsetForView:
positionItemsInBounds:block:
positionItemsInColumns:rows:inBounds:block:
predicateWithBlock:
preferredContentSizeCategory
processInfo
purpleColor
raise:format:
redColor
reloadData
removeAllObjects
removeArrangedSubview:
removeColumnAtIndex:
removeFromSuperlayer
removeFromSuperview
removeObjectAtIndex:
removeObserver:forKeyPath:
removeRowAtIndex:
replaceArrangedSubview:inColumnAtIndex:rowAtIndex:
replaceArrangedSubviewAtIndex:withView:
replaceObjectAtIndex:withObject:
requiresConstraintBasedLayout
respondsToSelector:
retain
retainCount
reverseObjectEnumerator
rowAtIndex:
rowHeight
rowIndexForArrangedSubview:
rowSpacing
scale
self
setAlignment:
setAlignment:forView:inAxis:
setArrangedSubviewAdditionPolicy:
setArrangedSubviewRemovalPolicy:
setArrangedSubviewRows:
setArrangedSubviews:
setAutoresizingMask:
setAxis:
setBaselineRelativeLayoutMarginsForArrangement:
setBounds:
setCanScrollDocumentViewHorizontally:
setCanScrollDocumentViewVertically:
setCenter:
setColumnSpacing:
setContentCompressionResistancePriority:forAxis:
setContentHuggingPriority:forAxis:
setCurrentEffectiveLayoutSizeFittingSizeShouldNotBeCached
setCustomAlignmentRectInsets:
setCustomBaselineOffsetFromBottom:
setCustomFirstBaselineOffsetFromTop:
setCustomSpacing:afterView:
setDebugBoundingBoxesEnabled:
setDelegate:
setDistribution:
setDocumentView:
setEnableAPIMisuseAssertions:
setFrame:
setHidden:
setHorizontalAlignment:
setHorizontalDistribution:
setInvalidatingIntrinsicContentSizeAlsoInvalidatesSuperview:
setItemWidth:
setLayoutMarginsRelativeArrangement:
setLayoutSize:withContentPriority:
setLayoutSize:withHorizontalContentPriority:verticalContentPriority:
setLength:
setMaximumLayoutSize:
setMinimumLayoutSize:
setMinimumSpacing:adjacentToView:
setNeedsInvalidation:
setNeedsLayout
setNeverCacheEffectiveLayoutSize:
setNumberOfColumns:
setNumberOfLines:
setObject:forKey:
setObject:forKeyedSubscript:
setPositionAdjustmentOffset:forView:
setPreservesSuperviewLayoutMargins:
setRowHeight:
setRowSpacing:
setSpacing:
setSpacing:afterArrangedSubviewAtIndex:
setSpacingAfter:
setText:
setUntransformedFrame:
setVerticalAlignment:
setVerticalDistribution:
setWithArray:
sharedApplication
shouldCancelMeasurementForCompressionInAxis:
sizeThatFits:
sizeToBestFitAndLayoutIfNeeded
sortDescriptorWithKey:ascending:
sortedArrayUsingDescriptors:
spacingAfter
string
stringByAppendingFormat:
stringByAppendingString:
stringWithFormat:
stringWithUTF8String:
substringToIndex:
subviews
superclass
superview
systemLayoutSizeFittingSize:
systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:
systemSpacingToAdjecentSiblingView:axis:baselineRelative:multiplier:
systemSpacingToSuperView:edge:baselineRelative:multiplier:
testableEffectiveLayoutSizeFittingSize:
testableSizeThatFits:
transform
unionFrameForItemsInColumns:rows:inBounds:
value:withObjCType:
valueWithCGSize:
verticalAlignment
verticalContainerStackViewWithArrangedSubviews:
verticalDistribution
viewForFirstBaselineLayout
viewForFirstBaselineLayoutInRowAtIndex:
viewForLastBaselineLayout
viewForLastBaselineLayoutInRowAtIndex:
visibilityDidChangeForArrangedSubview:
visibleArrangedSubviews
weakObjectsHashTable
willRemoveSubview:
wrappingLabelWithString:
zone
@16@0:8
v16@0:8
{nui_size_cache="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::pair<CGSize, CGSize> *, std::allocator<std::pair<CGSize, CGSize>>>="__value_"^v}}
{CGSize="width"d"height"d}
{UIEdgeInsets="top"d"left"d"bottom"d"right"d}
{?="baseLineFromTop"d"baseLineFromBottom"d}
{?="neverCacheLayoutSize"b1"shouldCacheLayoutSize"b1"alsoInvalidateSuperview"b1"cachedAlignmentInsetsAreValid"b1"topBaselineIsCustom"b1"bottomBaselineIsCustom"b1}
{CGSize=dd}32@0:8{CGSize=dd}16
d16@0:8
B16@0:8
v20@0:8B16
v32@0:8{CGSize=dd}16
{CGSize=dd}16@0:8
v36@0:8{CGSize=dd}16f32
v40@0:8{CGSize=dd}16f32f36
v48@0:8{UIEdgeInsets=dddd}16
{UIEdgeInsets=dddd}16@0:8
v24@0:8d16
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
d44@0:8@16q24B32d36
d44@0:8@16Q24B32d36
q16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
{CGSize=dd}40@0:8{CGSize=dd}16@32
{CGRect={CGPoint=dd}{CGSize=dd}}56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
{CGSize=dd}40@0:8{CGSize=dd}16@"<NUIArrangementItem>"32
{CGRect={CGPoint=dd}{CGSize=dd}}56@0:8@"<NUIArrangementItem>"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v24@0:8^v16
v40@0:8^v16r^v24q32
B24@0:8q16
f24@0:8q16
@40@0:8r^v16{_NSRange=QQ}24
{_NUIGridArrangement="container"@"<_NUIGridArrangementContainer>""horzDist"b8"vertDist"b8"baselineRelative"B"hasValidMeasurement"B"cells"{vector<_NUIGridArrangementCell, std::allocator<_NUIGridArrangementCell>>="__begin_"^{_NUIGridArrangementCell}"__end_"^{_NUIGridArrangementCell}"__end_cap_"{__compressed_pair<_NUIGridArrangementCell *, std::allocator<_NUIGridArrangementCell>>="__value_"^{_NUIGridArrangementCell}}}"columns"{vector<_NUIGridArrangementDimension, std::allocator<_NUIGridArrangementDimension>>="__begin_"^{_NUIGridArrangementDimension}"__end_"^{_NUIGridArrangementDimension}"__end_cap_"{__compressed_pair<_NUIGridArrangementDimension *, std::allocator<_NUIGridArrangementDimension>>="__value_"^{_NUIGridArrangementDimension}}}"rows"{vector<_NUIGridArrangementDimension, std::allocator<_NUIGridArrangementDimension>>="__begin_"^{_NUIGridArrangementDimension}"__end_"^{_NUIGridArrangementDimension}"__end_cap_"{__compressed_pair<_NUIGridArrangementDimension *, std::allocator<_NUIGridArrangementDimension>>="__value_"^{_NUIGridArrangementDimension}}}"viewFrames"{vector<CGRect, std::allocator<CGRect>>="__begin_"^{CGRect}"__end_"^{CGRect}"__end_cap_"{__compressed_pair<CGRect *, std::allocator<CGRect>>="__value_"^{CGRect}}}}
{_NSRange="location"Q"length"Q}
@"_NUIFlowFillEuallyDummyItem"
@24@0:8@16
@"_NUIFlowRowContainer"
@24@0:8r^v16
@32@0:8q16@24
{CGSize=dd}40@0:8{CGSize=dd}16f32f36
@"NUIContainerView"
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v24@0:8@16
v24@0:8q16
v24@0:8@?16
v32@0:8@16Q24
v32@0:8Q16@24
Q24@0:8@16
q32@0:8@16q24
v40@0:8q16@24q32
{CGPoint=dd}24@0:8@16
v40@0:8{CGPoint=dd}16@32
{NSDirectionalEdgeInsets=dddd}24@0:8@16
v56@0:8{NSDirectionalEdgeInsets=dddd}16@48
{CGSize=dd}40@0:8{CGSize=dd}16Q32
v48@0:8@16@24@32^v40
@"<NUIContainerViewDelegate>"
{map<UIView *, _NUIContainerViewArrangedSubview, std::less<UIView *>, std::allocator<std::pair<UIView *const, _NUIContainerViewArrangedSubview>>>="__tree_"{__tree<std::__value_type<UIView *, _NUIContainerViewArrangedSubview>, std::__map_value_compare<UIView *, std::__value_type<UIView *, _NUIContainerViewArrangedSubview>, std::less<UIView *>, true>, std::allocator<std::__value_type<UIView *, _NUIContainerViewArrangedSubview>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<UIView *, _NUIContainerViewArrangedSubview>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<UIView *, std::__value_type<UIView *, _NUIContainerViewArrangedSubview>, std::less<UIView *>, true>>="__value_"Q}}}
@"NSMutableArray"
@"NSArray"
@"UIView"
{vector<CALayer *, std::allocator<CALayer *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<CALayer **, std::allocator<CALayer *>>="__value_"^@}}
{?="hiddenArrangedSubviewCount"b16"delaydInvalidation"b8"batchDepth"b4"inLayoutPass"b2"inMeasurementPass"b2"layoutDependency"b2"removalPolicy"b2"removalPolicyHasBeenSet"b1"additionPolicy"b1"inEnsureArranged"b1"inEffectiveSize"b1"hasMargins"b1"debugBoundingBoxes"b1"baselineRelative"b1"layoutMarginsRelative"b1"baselineLayoutMargins"b1"mustRestart"b1"delegateSystemLayoutSizeFittingSizeForArrangedSubview"b1"delegateLayoutFrameForArrangedSubview"b1"delegateWillMeasureFitting"b1"delegateShouldRestart"b1"delegateDidLayout"b1}
{?=dd}32@0:8{CGSize=dd}16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v32@0:8@16q24
@32@0:8q16q24
v40@0:8^{_NSRange=QQ}16^{_NSRange=QQ}24@32
q24@0:8@16
@24@0:8q16
v32@0:8q16q24
v40@0:8@16q24q32
{?="width"S"height"S}
{map<UIView *, const std::pair<_NSRange, _NSRange>, std::less<UIView *>, std::allocator<std::pair<UIView *const, const std::pair<_NSRange, _NSRange>>>>="__tree_"{__tree<std::__value_type<UIView *, const std::pair<_NSRange, _NSRange>>, std::__map_value_compare<UIView *, std::__value_type<UIView *, const std::pair<_NSRange, _NSRange>>, std::less<UIView *>, true>, std::allocator<std::__value_type<UIView *, const std::pair<_NSRange, _NSRange>>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<UIView *, const std::pair<_NSRange, _NSRange>>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<UIView *, std::__value_type<UIView *, const std::pair<_NSRange, _NSRange>>, std::less<UIView *>, true>>="__value_"Q}}}
{?="horzAlign"b8"vertAlign"b8"inInsertOrRemove"b1"hasMutations"b1}
@"NSArray"16@0:8
v24@0:8@"NSArray"16
@"NUIContainerGridView"
{?="align"b8"isRow"b1"hidden"b1"wasDetached"b1}
d24@0:8@16
v32@0:8d16@24
v32@0:8d16q24
{map<UIView *, double, std::less<UIView *>, std::allocator<std::pair<UIView *const, double>>>="__tree_"{__tree<std::__value_type<UIView *, double>, std::__map_value_compare<UIView *, std::__value_type<UIView *, double>, std::less<UIView *>, true>, std::allocator<std::__value_type<UIView *, double>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<UIView *, double>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<UIView *, std::__value_type<UIView *, double>, std::less<UIView *>, true>>="__value_"Q}}}
{?="alignment"b8"distribution"b8"axis"b4}
@32@0:8@16@24
v56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@?48
{_NUIBoxArrangement="container"@"<_NUIBoxArrangementContainer>""horzDist"q"vertDist"q"hasValidMeasurement"B"cells"{vector<_NUIBoxArrangementCell, std::allocator<_NUIBoxArrangementCell>>="__begin_"^{_NUIBoxArrangementCell}"__end_"^{_NUIBoxArrangementCell}"__end_cap_"{__compressed_pair<_NUIBoxArrangementCell *, std::allocator<_NUIBoxArrangementCell>>="__value_"^{_NUIBoxArrangementCell}}}"measureSize"{CGSize="width"d"height"d}"viewFrames"{vector<CGRect, std::allocator<CGRect>>="__begin_"^{CGRect}"__end_"^{CGRect}"__end_cap_"{__compressed_pair<CGRect *, std::allocator<CGRect>>="__value_"^{CGRect}}}"maxBaseLinePair"{?="baseLineFromTop"d"baseLineFromBottom"d}}
@"<NUIArrangementContainer>"
@"<NUIBoxArrangementDataSource>"
{?="containerDirection"b1}
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
{CGSize=dd}40@0:8r^{_NUIFlowArrangementCell=@{CGSize=dd}{CGSize=dd}{?=dd}b8b8}16{CGSize=dd}24
q40@0:8q16q24r^v32
{CGSize=dd}40@0:8@16{CGSize=dd}24
q40@0:8q16q24@32
{_NUIFlowArrangement="container"@"<_NUIFlowArrangementContainer>""horzDist"b8"vertDist"b8"baselineRelative"B"columns"Q"rowSpacing"d"itemSpacing"d"rowHeight"d"itemWidth"d"cells"{vector<_NUIFlowArrangementCell, std::allocator<_NUIFlowArrangementCell>>="__begin_"^{_NUIFlowArrangementCell}"__end_"^{_NUIFlowArrangementCell}"__end_cap_"{__compressed_pair<_NUIFlowArrangementCell *, std::allocator<_NUIFlowArrangementCell>>="__value_"^{_NUIFlowArrangementCell}}}"rows"{vector<_NUIFlowRowContainer *, std::allocator<_NUIFlowRowContainer *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<_NUIFlowRowContainer **, std::allocator<_NUIFlowRowContainer *>>="__value_"^@}}"flowContainer"@"_NUIFlowContainer""measuredWidth"d"viewFrames"{vector<CGRect, std::allocator<CGRect>>="__begin_"^{CGRect}"__end_"^{CGRect}"__end_cap_"{__compressed_pair<CGRect *, std::allocator<CGRect>>="__value_"^{CGRect}}}"maxBaseLinePair"{?="baseLineFromTop"d"baseLineFromBottom"d}}
{?="horzAlign"b8"vertAlign"b8}
{CGSize=dd}64@0:8{CGSize=dd}16{UIEdgeInsets=dddd}32
{CGSize=dd}80@0:8{CGSize=dd}16{CGSize=dd}32{UIEdgeInsets=dddd}48
@20@0:8B16
B44@0:8^{CGSize=dd}16{CGSize=dd}24B40
v48@0:8{CGSize=dd}16{CGSize=dd}32
v88@0:8{_NSRange=QQ}16{_NSRange=QQ}32{CGRect={CGPoint=dd}{CGSize=dd}}48@?80
{CGRect={CGPoint=dd}{CGSize=dd}}80@0:8{_NSRange=QQ}16{_NSRange=QQ}32{CGRect={CGPoint=dd}{CGSize=dd}}48
@"<NUIGridArrangementDataSource>"
{?="delegateWidth"b1"delegateHeight"b1"containerDirection"b1}
