CGRect
UIContentSizeCategory
HKSPSleepLockScreenState
_NSRange
NNSAttributedStringKey
CLAuthorizationStatus
CGSize
CGPoint
Foundation
?SleepLockScreen
LockScreenShortcutDelegate
LockScreenShortcut
LockScreenShortcutState
fractionCompleted
AlarmProvider
LockScreenContentModel
DetailTextType
ContentAppearenceProvider
SleepLockScreen
LockScreenShortcutStoreDelegate
LockScreenShortcutStore
8@333333
LockScreenContentViewDelegate
LockScreenContentView
?ffffff
?ffffff
?ActionButton
SleepLockScreen
LocationModel
WeatherModel
Alarm
LockScreenContentState
S@WeatherView
SecureHostingController
LockScreenViewController
DaemonConnectionWrapper
LockScreenClient
So8NSStringC
$sSY
$ss21_ObjectiveCBridgeableP
$s15SleepLockScreen0bC16ShortcutDelegateP
So8NSObjectC
SSSg
So7UIImageC
So18HKSPAnalyticsStoreC
_pSgXw
So25VCConfiguredSleepWorkflowC
So27WFSleepWorkflowRunnerClientCSg
So10NSProgressCSg
So7NSTimerCSg
Sd16progressFraction_t
_pSg
So10NSProgressC
SgXw
So14MTAlarmManagerC
XDXMT
So7MTAlarmCSg
So14HKSPSleepStoreC
ySay
ySiSgG
ySo15BCBatteryDeviceCSgG
So25BCBatteryDeviceControllerCSg
So17NSNumberFormatterCSg
So22HKSPSleepScheduleModelCSg
SbSg
SdSg
$s7Combine16ObservableObjectP
SgXw
So22HKSPSleepScheduleModelC
So15BCBatteryDeviceCSg
XDXMT
SiSg
So23FBSDisplayLayoutMonitorCSg
ySbG
SgXw
SgXwz_Xx
So16FBSDisplayLayoutCSg
$s15SleepLockScreen0bC21ShortcutStoreDelegateP
_pSgXw
So23WFObservableArrayResultCySo25VCConfiguredSleepWorkflowCGSg
SaySo25VCConfiguredSleepWorkflowCG
XDXMT
SgXw
SgXwz_Xx
$s15SleepLockScreen0bC19ContentViewDelegateP
So6UIViewC
So7UILabelC
So18UIVisualEffectViewC
So6UIViewCSg
_pSgXw
So13UILayoutGuideCSg
So18NSLayoutConstraintCSg
So18NSAttributedStringCSg
So8UIButtonC
So18UIVisualEffectViewCSg
So17CLLocationManagerCSg
ySo10CLLocationCSgG
So16CLInUseAssertionCSg
So10CLLocationCSg
So10CLLocationC
ytIeghHr_
SgXw
So7MTAlarmC
So14MTAlarmManagerCXDXMT
7bedtime_t
Sg5alarm_Sb15allowsShortcutsSb11nearBedtimet
So11UIImageViewCSg
So7UILabelCSg
XDXMT
So16UIViewControllerC
So14MTAlarmManagerCSg
So27SBSRemoteContentPreferencesCSg
So15NSXPCConnectionC
_SDy
ypGSgtG
SDySSypGSg
_SDy
ypGSgt
GSpySo8NSObjectCSgGSgSpyypGSgytIeglllr_
SgXw
ypGSgIegyg_
So27SBSRemoteContentAlertActionC
SgXwz_Xx
SgXw
_rawValue
origin
size
RawValue
_ObjectiveCType
width
height
location
length
title
subtitle
icon
$__lazy_storage_$_gregorianCalendar
analyticsStore
delegate
workflow
localizedAppName
runnerClient
progressObservation
progress
completedResetTimer
state
running
notStarted
completed
alarmChangeHandler
alarm
alarmManager
debugIdentifier
stateDidChange
_state
sleepStore
alarmProvider
alarmSubscriber
shortcutsStore
shortcutsSubscriber
$__lazy_storage_$_gregorianCalendar
weatherModel
weatherForecastSubcriber
contentAppearanceProvider
contentAppearanceSubscriber
visible
_detailTextTypes
_detailTextTypeIndex
hasShownDoNotDisturb
detailTextTimer
_watchBattery
$__lazy_storage_$_batteryDeviceController
isObservingBattery
$__lazy_storage_$_percentFormatter
lockScreenState
sleepScheduleModel
overrideAllowShortcuts
overrideWatchBatteryLevel
demoState
doNotDisturb
watchCharge
schedule
RawValue
ObjectWillChangePublisher
debugIdentifier
layoutMonitor
_visible
delegate
workflowsArrayObservable
shortcuts
analyticsStore
debugIdentifier
headingContainerView
headingLabel
detailLabelEffectView
detailLabel
detailOverlayLabel
spacerLabel
contentSizeCategory
visibleContentFrame
actionsButton
weatherView
shortWeatherView
debugSafeContentBoundsView
debugActualContentBoundsView
model
modelSubscriber
delegate
$__lazy_storage_$_screenBounds
safeContentBounds
contentAreaGuide
contentTopConstraint
contentBottomConstraint
headingCenteringSpacingConstraint
shortWeatherViewTopConstraint
shortWeatherViewHiddenHeightConstraint
detailTextType
detailTextState
effectView
highlightedView
debugIdentifier
locationManager
_currentLocation
inUseAssertion
ObjectWillChangePublisher
debugIdentifier
weatherService
_currentWeather
hourlyForecast
dailyForecast
locationModel
currentLocationSubscriber
ObjectWillChangePublisher
fireDate
mtAlarm
windDown
bedtime
loading
wakeUpGreeting
conditionsImageView
temperatureLabel
conditionsImageHeightConstraint
conditionsImageWidthConstraint
contentSizeCategory
debugIdentifier
model
contentView
lockScreenStateObserver
contentStateObserver
$__lazy_storage_$_alarmManager
isAlertVisible
didConfigureHostConnection
contentPreferences
daemonConnection
connection
_state
HKSPSleepLockScreenServer
v24@0:8q16
SBSRemoteContentHostInterface
v24@0:8@?16
v32@0:8@16@?24
v24@0:8@?<v@?@"NSObject<OS_xpc_object>">16
v32@0:8@"SBSRemoteContentAlert"16@?<v@?@"SBSRemoteContentAlertAction">24
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
hash
Tq,N,R
superclass
T#,N,R
description
T@"NSString",N,R
debugDescription
B24@0:8@"Protocol"16
@"NSString"16@0:8
_TtC15SleepLockScreen18LockScreenShortcut
v36@0:8@16@24B32
title
subtitle
icon
$__lazy_storage_$_gregorianCalendar
analyticsStore
delegate
workflow
localizedAppName
runnerClient
progressObservation
progress
completedResetTimer
state
com.apple.shortcuts
SleepLockScreen.LockScreenShortcut
[%{public}s] did finish running with error: %{public}s, cancelled: %{public}s
v16@?0@"NSTimer"8
[%{public}s] set state: %{public}s
[%{public}s] set progress: %{public}s
[%{public}s] ignoring progress update for shortcut in state: %{public}s
[%{public}s] did start running with progress: %{public}s
WFWorkflowRunnerClientDelegate
v32@0:8@"WFWorkflowRunnerClient"16@"NSProgress"24
v36@0:8@"WFWorkflowRunnerClient"16@"NSError"24B32
NSObject
q16@0:8
#16@0:8
@24@0:8:16
_TtC15SleepLockScreen13AlarmProvider
alarmChangeHandler
alarm
alarmManager
[%{public}s] init
v24@?0@"MTAlarm"8@"NSError"16
[%{public}s] update
v8@?0
[%{public}s] next alarm: %{public}s
[%{public}s] error retrieving upcoming alarm: %{public}s
[%{public}s] upcoming alarm did change: %{public}s
[%{public}s] received alarm notification: %s, privacy: .public)
[%{public}s] deinit
_TtC15SleepLockScreen22LockScreenContentModel
stateDidChange
sleepStore
alarmProvider
alarmSubscriber
shortcutsStore
shortcutsSubscriber
weatherModel
weatherForecastSubcriber
contentAppearanceProvider
contentAppearanceSubscriber
visible
_detailTextTypes
_detailTextTypeIndex
hasShownDoNotDisturb
detailTextTimer
_watchBattery
$__lazy_storage_$_batteryDeviceController
isObservingBattery
$__lazy_storage_$_percentFormatter
lockScreenState
sleepScheduleModel
overrideAllowShortcuts
overrideWatchBatteryLevel
demoState
[%{public}s] set override watch battery level: %{public}s
[%{public}s] set override allow shortcuts: %{public}s
[%{public}s] failed to dismiss wake up greeting: %{public}s
[%{public}s] dismissed wake up greeting
[%{public}s] failed to dismiss sleep lock: %{public}s
[%{public}s] dismissed sleep lock
[%{public}s] updated state: %{public}s
v24@?0@"HKSPSleepScheduleModel"8@"NSError"16
[%{public}s] failed to retrieve sleep schedule model: %{public}s
[%{public}s] updated visible: %{public}s
alarm allowsShortcuts nearBedtime 
[%{public}s] updated alarm: %{public}s
[%{public}s] updated demo state: %{public}s
SleepLockScreen/LockScreenContentModel.swift
WATCH_CHARGE_FORMAT
WATCH_CHARGE_SHORT_FORMAT
[%{public}s] invalid devices: %{public}s
[%{public}s] first watch is not charging: %{public}s
[%{public}s] first watch is charging: %{public}s
[%{public}s] found %{public}s watch devices: %{public}s
[%{public}s] fetching watch battery
[%{public}s] stop observing watch battery
[%{public}s] fetching watch battery once on start
[%{public}s] start observing watch battery
v20@?0B8@"NSError"12
[%{public}s] skip upcoming alarm
[%{public}s] failed to skip upcoming alarm: %{public}s
[%{public}s] stopping detail text timer
[%{public}s] starting detail text timer with interval: %{public}s
[%{public}s] detail text timer already running with interval: %{public}s
[%{public}s] detail text timer fired
[%{public}s] updated detail text: %{public}s
[%{public}s] updated detail text types: %{public}s
[%{public}s] reset detail text types shown
SleepLockScreen.LockScreenContentModel
[%{public}s] updated sleep schedule model: %{public}s
[%{public}s] fetching watch battery due to connected device change
HKSPSleepStorePrivateObserver
v32@0:8@"HKSPSleepStore"16@"HKSPSleepEventRecord"24
v32@0:8@"HKSPSleepStore"16@"HKSPSleepScheduleModel"24
v32@0:8@"HKSPSleepStore"16@"HKSPSleepFocusConfiguration"24
BCBatteryDeviceObserving
v24@0:8@"NSArray"16
HKSPSleepStoreObserver
v32@0:8@16Q24
v28@0:8@16B24
v32@0:8@"HKSPSleepStore"16@"HKSPSleepSchedule"24
v32@0:8@"HKSPSleepStore"16@"HKSPSleepSettings"24
v32@0:8@"HKSPSleepStore"16@"HKSPSleepEvent"24
v32@0:8@"HKSPSleepStore"16Q24
v28@0:8@"HKSPSleepStore"16B24
ALARM_ALERT_CHANGE
v16@?0@"UIAlertAction"8
ALARM_ALERT_CANCEL
ALARM_ALERT_SKIP
ALARM_ALERT_STOP
[%{public}s] creating action sheet for alarm: %{public}@, is sleep: %{bool,public}d, is snoozed: %{bool,public}d, is firing: %{bool,public}d
_TtC15SleepLockScreen25ContentAppearenceProvider
layoutMonitor
_visible
v32@?0@"FBSDisplayLayoutMonitor"8@"FBSDisplayLayout"16@"FBSDisplayLayoutTransitionContext"24
[%{public}s] updated layout, contains SleepLockScreen: %{public}s, display on: %{public}s
[%{public}s] updated layout: %{public}s
com.apple.SleepLockScreen
_TtC15SleepLockScreen23LockScreenShortcutStore
workflowsArrayObservable
shortcuts
[%{public}s] found results that we were not listening for: %{public}@
[%{public}s] loaded %{public}s shortcuts
[%{public}s] caching has shortcuts: %{bool}d
[%{public}s] ignoring invalid workflow: %{public}s
[%{public}s] failed to create app record for %{public}s
[%{public}s] found uninstalled app for %{public}s
[%{public}s] failed to create icon for %{public}s
[%{public}s] %{public}s
[%{public}s] loaded %{public}s wind down workflows:
v24@?0@8@"NSError"16
[%{public}s] observing wind down workflows
[%{public}s] found an empty workflow array observable
SleepLockScreen.LockScreenShortcutStore
init()
WFObservableResultObserver
v24@0:8@"WFObservableResult"16
B24@0:8@16
_TtC15SleepLockScreen21LockScreenContentView
v24@0:8@16
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
headingContainerView
headingLabel
detailLabelEffectView
detailLabel
detailOverlayLabel
spacerLabel
contentSizeCategory
visibleContentFrame
actionsButton
weatherView
shortWeatherView
debugSafeContentBoundsView
debugActualContentBoundsView
model
modelSubscriber
$__lazy_storage_$_screenBounds
safeContentBounds
contentAreaGuide
contentTopConstraint
contentBottomConstraint
headingCenteringSpacingConstraint
shortWeatherViewTopConstraint
shortWeatherViewHiddenHeightConstraint
detailTextType
detailTextState
v12@?0B8
[%{public}s] computeFrameThatFitsVisibleContent: %s
[%{public}s] updateVisibleContentFrame
[%{public}s] Calculated new visible content frame %s
[%{public}s] No layout guide for content size calculations
[%{public}s] Applying new content size category %s
[%{public}s] Calculating content size for strings: %s, availableHeight: %s, availableWidth: %s
SleepLockScreen.LockScreenContentView
init(frame:)
[%{public}s] traitCollectionDidChange
[%{public}s] layoutSubviews
SleepLockScreen/LockScreenContentView.swift
Fatal error
init(coder:) has not been implemented
_TtC15SleepLockScreen12ActionButton
d16@0:8
v24@0:8d16
effectView
highlightedView
_continuousCornerRadius
Td,N
UICoverSheetButtonLuminanceMap
SleepLockScreen/ActionButton.swift
_TtC15SleepLockScreen13LocationModel
locationManager
_currentLocation
inUseAssertion
v32@0:8@16@24
[%{public}s] fetched current location: %{public}s
Down-casted Array element failed to match the target type
Expected 
NSArray element failed to match the Swift Array Element type
Expected 
[%{public}s] error fetching current location: %{public}s
[%{public}s] doesn't have location permissions
[%{public}s] status: %{public}s, should request: %s
[%{public}s] stopping
com.apple.weather
Sleep.WakeUpGreeting
[%{public}s] starting
SleepLockScreen.LocationModel
LockScreenShortcut
CLLocationManagerDelegate
v40@0:8@16@24@32
v40@0:8@16q24@32
v28@0:8@16i24
v40@0:8@"CLLocationManager"16@"CLLocation"24@"CLLocation"32
v32@0:8@"CLLocationManager"16@"NSArray"24
v32@0:8@"CLLocationManager"16@"CLHeading"24
B24@0:8@"CLLocationManager"16
v40@0:8@"CLLocationManager"16q24@"CLRegion"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconRegion"32
v40@0:8@"CLLocationManager"16@"CLBeaconRegion"24@"NSError"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconIdentityConstraint"32
v40@0:8@"CLLocationManager"16@"CLBeaconIdentityConstraint"24@"NSError"32
v32@0:8@"CLLocationManager"16@"CLRegion"24
v32@0:8@"CLLocationManager"16@"NSError"24
v40@0:8@"CLLocationManager"16@"CLRegion"24@"NSError"32
v28@0:8@"CLLocationManager"16i24
v24@0:8@"CLLocationManager"16
v32@0:8@"CLLocationManager"16@"CLVisit"24
_TtC15SleepLockScreen12WeatherModel
debugIdentifier
weatherService
_currentWeather
hourlyForecast
dailyForecast
locationModel
currentLocationSubscriber
WEATHER_SHORT_FORMAT
[%{public}s] fetching current weather for location: %{public}s
[%{public}s] weatherService is nil
[%{public}s] error fetching current weather: %{public}s
[%{public}s] fetched current weather: %{public}s, hourly forecast: %{public}s, daily forecast: %{public}s
SleepLockScreen.WeatherModel
com.apple.mobiletimer
[%{public}s] attempting to dismiss inactive alarm: %{public}@
v24@?0@"NSNull"8@"NSError"16
[%{public}s] dismissing active alarm: %{public}@
[%{public}s] dismissed active alarm: %{public}@
[%{public}s] failed to dismiss active alarm with error: %{public}s
UPCOMING_ALARM_ON
UPCOMING_ALARM_FORMAT
UPCOMING_ALARM_SHORT_FORMAT
UPCOMING_ALARM_SNOOZED_FORMAT
[%{public}s] ignoring nil alarm
[%{public}s] ignoring alarm of wrong class
[%{public}s] ignoring disabled alarm
[%{public}s] ignoring alarm with no fire date
[%{public}s] ignoring alarm with fire date: %{public}s (%{public}fs from now)
UPCOMING_BEDTIME_FORMAT
UPCOMING_BEDTIME_SHORT_FORMAT
BEDTIME_GREETING_SNOOZING
SleepLockScreen/LockScreenContentState.swift
WIND_DOWN_GREETING_EVENING
WIND_DOWN_GREETING_AFTERNOON
WIND_DOWN_GREETING_MORNING
WIND_DOWN_GREETING_EARLY_MORNING
BEDTIME_GREETING_EVENING
BEDTIME_GREETING_AFTERNOON
BEDTIME_GREETING_MORNING
BEDTIME_GREETING_EARLY_MORNING
WAKE_UP_GREETING_EVENING
WAKE_UP_GREETING_AFTERNOON
WAKE_UP_GREETING_MORNING
WAKE_UP_GREETING_EARLY_MORNING
_TtC15SleepLockScreen11WeatherView
v16@0:8
conditionsImageView
temperatureLabel
conditionsImageHeightConstraint
conditionsImageWidthConstraint
[%{public}s] Error trying to open Weather app
[%{public}s] Error trying to open Weather app: %{public}s
SleepLockScreen/WeatherView.swift
B16@0:8
@24@0:8@16
_TtC15SleepLockScreen24LockScreenViewController
@16@0:8
v20@0:8B16
@32@0:8@16@24
contentView
lockScreenStateObserver
contentStateObserver
$__lazy_storage_$_alarmManager
isAlertVisible
didConfigureHostConnection
contentPreferences
daemonConnection
prefersStatusBarHidden
TB,N,R
supportedInterfaceOrientations
TQ,N,R
_TtCC15SleepLockScreen24LockScreenViewControllerP33_DB83B3820BCB06A68353D0742C4D0FC923DaemonConnectionWrapper
connection
_TtC15SleepLockScreen16LockScreenClient
v32@0:8q16@24
_state
[%{public}s] requested remote server proxy before starting sleepd connection
v16@?0@"NSError"8
[%{public}s] error acquiring remote server proxy: %{public}s
[%{public}s] requested connect
[%{public}s] invalidation handler called
[%{public}s] interruption handler called
[%{public}s] update to state: %{public}s, user info: %{public}s
[%{public}s] did dismiss, type: %{public}s
SleepLockScreen/LockScreenViewController.swift
[%{public}s] updating content preferences %{public}s, dateTime: %{public}s, background: %{public}s, reduceWhitePoint: %{public}s, homeGestureMode: %{public}s, suppressNotifications: %{public}s, suppressBottomEdgeContent: %{public}s, presentInline: %{public}s, dismissOnTap: %{public}s, preferredNotificationListMode: %{public}s
[%{public}s] skipping updating content preferences while in loading state
v16@?0@"<OS_xpc_object>"8
[%{public}s] didChangeContentBounds called, requesting content bounds
bounds
[%{public}s] received new bounds: %{public}s
[%{public}s] cannot connect to sleepd due to nil endpoint
[%{public}s] configure with userInfo: %{public}s, bounds: %{public}s endpoint: %{public}s
[%{public}s] requested remote content host proxy before configuring connection
[%{public}s] error acquiring remote content host proxy: %{public}s
[%{public}s] opening %{public}s, success: %{public}s
clock-alarm:default
clock-sleep-alarm:edit
v16@?0@"SBSRemoteContentAlertAction"8
[%{public}s] creating remote alert alarm: %{public}@, is sleep: %{bool,public}d, is snoozed: %{bool,public}d, is firing: %{bool,public}d
[%{public}s] contentSizeDidChange
com.apple.sleep.controlcenter.sleepmode
[%{public}s] open shortcuts menu
[%{public}s] requested module with success: %{public}s, error: %{public}s
[%{public}s] updated content state: %{public}s
[%{public}s] update layout with safe bounds: %{public}s
SleepLockScreen.LockScreenViewController
init(nibName:bundle:)
frame
[%{public}s] frame: %{public}s
[%{public}s] getInlinePresentationContentFrame called, returning content size
[%{public}s] view did disappear
[%{public}s] view did appear
SleepLockScreenContentView
SleepLockScreenView
[%{public}s] view did load
HKSPSleepScreenDemoMode
SBSRemoteContentServiceInterface
v40@0:8@"NSDictionary"16@"NSObject<OS_xpc_object>"24@"NSObject<OS_xpc_object>"32
v24@0:8@?<v@?@"SBSRemoteContentPreferences">16
HKSPSleepLockScreenClient
v32@0:8q16@"NSDictionary"24
OS_xpc_object
connect
didDismissWithReason:
didChangeStyle
getContentBoundsWithReplyBlock:
presentAlert:replyBlock:
isEqual:
hash
superclass
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
description
debugDescription
workflowRunnerClient:didStartRunningWorkflowWithProgress:
workflowRunnerClient:didFinishRunningWorkflowWithError:cancelled:
init
.cxx_destruct
bundleIdentifierForDisplay
mainScreen
scale
_applicationIconImageForBundleIdentifier:format:scale:
iconImage
iconScale
initWithCGImage:scale:orientation:
identifier
invalidate
scheduledTimerWithTimeInterval:repeats:block:
fractionCompleted
dealloc
handleAlarmChangeWithNotification:
defaultCenter
addObserver:selector:name:object:
nextAlarm
addCompletionBlock:
removeObserver:
connectedDevicesDidChange:
sleepStore:sleepScheduleModelDidChange:
chargingRemindersEnabled
initWithIdentifier:healthStore:
sharedBehavior
features
autobahn
analyticsManager
analyticsStore
addObserver:
sleepScheduleModelWithCompletion:
hk_morningIndexWithCalendar:
initWithWindDownAction:wasUsed:identifier:
updateWindDownActions:onMorningIndex:
setBaselineForWindDownActions:onMorningIndex:
alarmIDString
nextEventWithIdentifier:dueAfterDate:
currentTraitCollection
preferredContentSizeCategory
bundleForClass:
name
percentCharge
initWithDouble:
stringFromNumber:
setNumberStyle:
connectedDevices
accessoryCategory
isCharging
removeBatteryDeviceObserver:
addBatteryDeviceObserver:queue:
skipUpcomingWakeUpAlarmForDate:completion:
timeInterval
standardUserDefaults
boolForKey:
sleepStore:sleepEventRecordDidChange:
sleepStore:sleepFocusConfigurationDidUpdate:
sleepStore:sleepScheduleDidChange:
sleepStore:sleepSettingsDidChange:
sleepStore:sleepEventDidOccur:
sleepStore:sleepScheduleStateDidChange:
sleepStore:sleepModeOnDidChange:
alertControllerWithTitle:message:preferredStyle:
actionWithTitle:style:handler:
addAction:
isFiring
isSnoozed
isSleepAlarm
configurationForDefaultMainDisplayMonitor
setNeedsUserInteractivePriority:
setTransitionHandler:
monitorWithConfiguration:
currentLayout
displayBacklightLevel
elements
bundleIdentifier
observableResultDidChange:
values
setBool:forKey:
applicationState
isInstalled
summaryString
standardClient
getSleepWorkflowsWithCompletion:
addResultObserver:
removeResultObserver:
initWithCoder:
layoutSubviews
traitCollectionDidChange:
didTapActionsButton
didPan:
accessibilityAlarmOptionsButton
accessibilityHeadingLabel
accessibilityShouldHideHeader
accessibilityIsShowingFocusState
accessibilityDetailLabel
initWithFrame:
setConstant:
setFrame:
effectWithStyle:
effectForBlurEffect:style:
state
translationInView:
setAttributedText:
attributedText
animateWithDuration:animations:completion:
animateWithDuration:animations:
setAlpha:
setHidden:
setAttributedTitle:forState:
isHidden
setActive:
traitCollectionWithPreferredContentSizeCategory:
_preferredFontForTextStyle:design:variant:compatibleWithTraitCollection:
initWithString:attributes:
setImage:
setText:
sharedInstance
formatDateAsTimeStyle:
string
_containsEmoji
layoutFrame
frame
initWithAttributedString:
clearColor
length
addAttribute:value:range:
_emojiCharacterSet
removeAttribute:range:
rangeOfCharacterFromSet:options:range:
copy
addLayoutGuide:
_referenceBounds
topAnchor
constraintEqualToAnchor:
bottomAnchor
leadingAnchor
constraintEqualToAnchor:constant:
trailingAnchor
activateConstraints:
lastBaselineAnchor
_preferredFontForTextStyle:maximumContentSizeCategory:
_scaledValueForValue:
centerYAnchor
setPriority:
constraintGreaterThanOrEqualToAnchor:constant:
widthAnchor
constraintLessThanOrEqualToAnchor:
centerXAnchor
heightAnchor
constraintEqualToConstant:
constraintLessThanOrEqualToAnchor:constant:
constraintGreaterThanOrEqualToConstant:
contentView
setFont:
attributedTitleForState:
titleLabel
_setContinuousCornerRadius:
setTranslatesAutoresizingMaskIntoConstraints:
setBackgroundColor:
addSubview:
setNumberOfLines:
setTextAlignment:
setLineBreakMode:
whiteColor
setTextColor:
setClipsToBounds:
setAccessibilityElementsHidden:
addTarget:action:forControlEvents:
setContentEdgeInsets:
layer
blueColor
colorWithAlphaComponent:
CGColor
sendSubviewToBack:
greenColor
setAdjustsFontSizeToFitWidth:
_continuousCornerRadius
buttonPressed:
buttonReleased:
setAutoresizingMask:
setAllowsHitTesting:
setUserInteractionEnabled:
effectWithBlurRadius:
blackColor
effectCompositingColor:withMode:alpha:
kitImageNamed:
colorEffectLuminanceMap:blendingAmount:
colorEffectSaturate:
colorEffectBrightness:
setBackgroundEffects:
removeFromSuperview
bounds
setHitTestsAsOpaque:
initWithRed:green:blue:alpha:
setBaselineAdjustment:
locationManager:didFailWithError:
locationManager:didUpdateLocations:
locationManagerDidChangeAuthorization:
authorizationStatus
requestWhenInUseAuthorization
requestLocation
initWithEffectiveBundleIdentifier:delegate:onQueue:
setDesiredAccuracy:
newAssertionForBundleIdentifier:withReason:level:
locationManager:didUpdateToLocation:fromLocation:
locationManager:didUpdateHeading:
locationManagerShouldDisplayHeadingCalibration:
locationManager:didDetermineState:forRegion:
locationManager:didRangeBeacons:inRegion:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManager:didRangeBeacons:satisfyingConstraint:
locationManager:didFailRangingBeaconsForConstraint:error:
locationManager:didEnterRegion:
locationManager:didExitRegion:
locationManager:monitoringDidFailForRegion:withError:
locationManager:didChangeAuthorizationStatus:
locationManager:didStartMonitoringForRegion:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didVisit:
systemImageNamed:
imageWithRenderingMode:
setSourceBundleIdentifier:
resume
dismissAlarmWithIdentifier:dismissAction:
stringFromTimeInterval:
setAllowedUnits:
setUnitsStyle:
setIncludesTimeRemainingPhrase:
isEnabled
nextFireDate
hksp_dayPeriodForDate:locale:options:
didTapContent:
setContentMode:
systemFontOfSize:weight:
initWithTarget:action:
addGestureRecognizer:
_shouldRemoveViewFromHierarchyOnDisappear
_canShowWhileLocked
_isSecureForRemoteViewService
_remoteViewControllerInterface
_exportedInterface
viewDidLoad
viewDidAppear:
viewDidDisappear:
prefersStatusBarHidden
supportedInterfaceOrientations
configureWithUserInfo:contentBounds:endpoint:
didChangeContentBounds
getInlinePresentationContentFrameWithReplyBlock:
getContentPreferencesWithReplyBlock:
didDismissForDismissType:
initWithNibName:bundle:
setLockScreenState:userInfo:
remoteObjectProxyWithErrorHandler:
_setEndpoint:
initWithListenerEndpoint:
setExportedInterface:
setExportedObject:
setRemoteObjectInterface:
setInterruptionHandler:
setInvalidationHandler:
doubleValue
boolValue
dismissSleepLockWithCompletion:
dismissGoodMorningWithCompletion:
sleepSettings
initWithConfiguration:
sleepModeOptions
_remoteViewControllerProxyWithErrorHandler:
defaultWorkspace
openSensitiveURL:withOptions:
initWithBundleIdentifier:allowPlaceholder:error:
initWithTitle:message:preferredStyle:
initWithTitle:style:
title
presentViewController:animated:completion:
alarmID
defaultOptions
presentModuleWithIdentifier:options:completionHandler:
setAccessibilityIdentifier:
view
initWithEffect:
hksp_internalUserDefaults
hksp_lockScreenDebugMode
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.QuartzCore.secure-mode</key>
<true/>
<key>com.apple.UIKit.vends-view-services</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.frontboardservices.display-layout-monitor</key>
<true/>
<key>com.apple.locationd.effective_bundle</key>
<true/>
<key>com.apple.locationd.prompt_from_background</key>
<true/>
<key>com.apple.locationd.usage_oracle</key>
<true/>
<key>com.apple.nano.nanoregistry.generalaccess</key>
<true/>
<key>com.apple.private.controlcenter.service.moduleidentifiers</key>
<array>
<string>com.apple.sleep.controlcenter.sleepmode</string>
</array>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.healthkit</key>
<true/>
<key>com.apple.private.healthkit.authorization_bypass</key>
<true/>
<key>com.apple.private.healthkit.source.identities</key>
<array>
<string>com.apple.mobiletimer</string>
</array>
<key>com.apple.private.mobiletimerd</key>
<true/>
<key>com.apple.private.sleepd</key>
<true/>
<key>com.apple.private.ubiquity-kvstore-access</key>
<array>
<string>com.apple.weather</string>
</array>
<key>com.apple.security.application-groups</key>
<array>
<string>group.com.apple.weather</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.MobileTimer.alarmserver</string>
<string>com.apple.sleepd.sleepserver</string>
<string>com.apple.controlcenter.remoteservice</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.internal.sleep</string>
<string>com.apple.sleep.analytics</string>
</array>
<key>com.apple.shortcuts.health-access</key>
<true/>
<key>com.apple.siri.VoiceShortcuts.xpc</key>
<true/>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>fairplay-client</key>
<string>511712240</string>
</dict>
</plist>
CGRect
UIContentSizeCategory
HKSPSleepLockScreenState
_NSRange
NNSAttributedStringKey
CLAuthorizationStatus
CGSize
CGPoint
Foundation
SleepLockScreen
LockScreenShortcutDelegate
LockScreenShortcut
LockScreenShortcutState
fractionCompleted
AlarmProvider
LockScreenContentModel
DetailTextType
ContentAppearenceProvider
SleepLockScreen
LockScreenShortcutStoreDelegate
LockScreenShortcutStore
LockScreenContentViewDelegate
LockScreenContentView
?ActionButton
SleepLockScreen
LocationModel
WeatherModel
Alarm
LockScreenContentState
WeatherView
SecureHostingController
LockScreenViewController
DaemonConnectionWrapper
LockScreenClient
So8NSStringC
$sSY
$ss21_ObjectiveCBridgeableP
$s15SleepLockScreen0bC16ShortcutDelegateP
So8NSObjectC
SSSg
So7UIImageC
So18HKSPAnalyticsStoreC
_pSgXw
So25VCConfiguredSleepWorkflowC
So27WFSleepWorkflowRunnerClientCSg
So10NSProgressCSg
So7NSTimerCSg
Sd16progressFraction_t
_pSg
So10NSProgressC
SgXw
So14MTAlarmManagerC
XDXMT
So7MTAlarmCSg
So14HKSPSleepStoreC
ySay
ySiSgG
ySo15BCBatteryDeviceCSgG
So25BCBatteryDeviceControllerCSg
So17NSNumberFormatterCSg
So22HKSPSleepScheduleModelCSg
SbSg
SdSg
$s7Combine16ObservableObjectP
SgXw
So22HKSPSleepScheduleModelC
So15BCBatteryDeviceCSg
XDXMT
SiSg
So23FBSDisplayLayoutMonitorCSg
ySbG
SgXw
SgXwz_Xx
So16FBSDisplayLayoutCSg
$s15SleepLockScreen0bC21ShortcutStoreDelegateP
_pSgXw
So23WFObservableArrayResultCySo25VCConfiguredSleepWorkflowCGSg
SaySo25VCConfiguredSleepWorkflowCG
XDXMT
SgXw
SgXwz_Xx
$s15SleepLockScreen0bC19ContentViewDelegateP
So6UIViewC
So7UILabelC
So18UIVisualEffectViewC
So6UIViewCSg
_pSgXw
So13UILayoutGuideCSg
So18NSLayoutConstraintCSg
So18NSAttributedStringCSg
So8UIButtonC
So18UIVisualEffectViewCSg
So17CLLocationManagerCSg
ySo10CLLocationCSgG
So16CLInUseAssertionCSg
So10CLLocationCSg
So10CLLocationC
ytIeghHr_
SgXw
So7MTAlarmC
So14MTAlarmManagerCXDXMT
7bedtime_t
Sg5alarm_Sb15allowsShortcutsSb11nearBedtimet
So11UIImageViewCSg
So7UILabelCSg
XDXMT
So16UIViewControllerC
So14MTAlarmManagerCSg
So27SBSRemoteContentPreferencesCSg
So15NSXPCConnectionC
_SDy
ypGSgtG
SDySSypGSg
_SDy
ypGSgt
GSpySo8NSObjectCSgGSgSpyypGSgytIeglllr_
SgXw
ypGSgIegyg_
So27SBSRemoteContentAlertActionC
SgXwz_Xx
SgXw
_rawValue
origin
size
RawValue
_ObjectiveCType
width
height
location
length
title
subtitle
icon
$__lazy_storage_$_gregorianCalendar
analyticsStore
delegate
workflow
localizedAppName
runnerClient
progressObservation
progress
completedResetTimer
state
running
notStarted
completed
alarmChangeHandler
alarm
alarmManager
debugIdentifier
stateDidChange
_state
sleepStore
alarmProvider
alarmSubscriber
shortcutsStore
shortcutsSubscriber
$__lazy_storage_$_gregorianCalendar
weatherModel
weatherForecastSubcriber
contentAppearanceProvider
contentAppearanceSubscriber
visible
_detailTextTypes
_detailTextTypeIndex
hasShownDoNotDisturb
detailTextTimer
_watchBattery
$__lazy_storage_$_batteryDeviceController
isObservingBattery
$__lazy_storage_$_percentFormatter
lockScreenState
sleepScheduleModel
overrideAllowShortcuts
overrideWatchBatteryLevel
demoState
doNotDisturb
watchCharge
schedule
RawValue
ObjectWillChangePublisher
debugIdentifier
layoutMonitor
_visible
delegate
workflowsArrayObservable
shortcuts
analyticsStore
debugIdentifier
headingContainerView
headingLabel
detailLabelEffectView
detailLabel
detailOverlayLabel
spacerLabel
contentSizeCategory
visibleContentFrame
actionsButton
weatherView
shortWeatherView
debugSafeContentBoundsView
debugActualContentBoundsView
model
modelSubscriber
delegate
$__lazy_storage_$_screenBounds
safeContentBounds
contentAreaGuide
contentTopConstraint
contentBottomConstraint
headingCenteringSpacingConstraint
shortWeatherViewTopConstraint
shortWeatherViewHiddenHeightConstraint
detailTextType
detailTextState
effectView
highlightedView
debugIdentifier
locationManager
_currentLocation
inUseAssertion
ObjectWillChangePublisher
debugIdentifier
weatherService
_currentWeather
hourlyForecast
dailyForecast
locationModel
currentLocationSubscriber
ObjectWillChangePublisher
fireDate
mtAlarm
windDown
bedtime
loading
wakeUpGreeting
conditionsImageView
temperatureLabel
conditionsImageHeightConstraint
conditionsImageWidthConstraint
contentSizeCategory
debugIdentifier
model
contentView
lockScreenStateObserver
contentStateObserver
$__lazy_storage_$_alarmManager
isAlertVisible
didConfigureHostConnection
contentPreferences
daemonConnection
connection
_state
HKSPSleepLockScreenServer
v24@0:8q16
SBSRemoteContentHostInterface
v24@0:8@?16
v32@0:8@16@?24
v24@0:8@?<v@?@"NSObject<OS_xpc_object>">16
v32@0:8@"SBSRemoteContentAlert"16@?<v@?@"SBSRemoteContentAlertAction">24
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
hash
Tq,N,R
superclass
T#,N,R
description
T@"NSString",N,R
debugDescription
B24@0:8@"Protocol"16
@"NSString"16@0:8
_TtC15SleepLockScreen18LockScreenShortcut
v36@0:8@16@24B32
title
subtitle
icon
$__lazy_storage_$_gregorianCalendar
analyticsStore
delegate
workflow
localizedAppName
runnerClient
progressObservation
progress
completedResetTimer
state
com.apple.shortcuts
SleepLockScreen.LockScreenShortcut
[%{public}s] did finish running with error: %{public}s, cancelled: %{public}s
v16@?0@"NSTimer"8
[%{public}s] set state: %{public}s
[%{public}s] set progress: %{public}s
[%{public}s] ignoring progress update for shortcut in state: %{public}s
[%{public}s] did start running with progress: %{public}s
WFWorkflowRunnerClientDelegate
v32@0:8@"WFWorkflowRunnerClient"16@"NSProgress"24
v36@0:8@"WFWorkflowRunnerClient"16@"NSError"24B32
NSObject
q16@0:8
#16@0:8
@24@0:8:16
_TtC15SleepLockScreen13AlarmProvider
alarmChangeHandler
alarm
alarmManager
[%{public}s] init
v24@?0@"MTAlarm"8@"NSError"16
[%{public}s] update
v8@?0
[%{public}s] next alarm: %{public}s
[%{public}s] error retrieving upcoming alarm: %{public}s
[%{public}s] upcoming alarm did change: %{public}s
[%{public}s] received alarm notification: %s, privacy: .public)
[%{public}s] deinit
_TtC15SleepLockScreen22LockScreenContentModel
stateDidChange
sleepStore
alarmProvider
alarmSubscriber
shortcutsStore
shortcutsSubscriber
weatherModel
weatherForecastSubcriber
contentAppearanceProvider
contentAppearanceSubscriber
visible
_detailTextTypes
_detailTextTypeIndex
hasShownDoNotDisturb
detailTextTimer
_watchBattery
$__lazy_storage_$_batteryDeviceController
isObservingBattery
$__lazy_storage_$_percentFormatter
lockScreenState
sleepScheduleModel
overrideAllowShortcuts
overrideWatchBatteryLevel
demoState
[%{public}s] set override watch battery level: %{public}s
[%{public}s] set override allow shortcuts: %{public}s
[%{public}s] failed to dismiss wake up greeting: %{public}s
[%{public}s] dismissed wake up greeting
[%{public}s] failed to dismiss sleep lock: %{public}s
[%{public}s] dismissed sleep lock
[%{public}s] updated state: %{public}s
v24@?0@"HKSPSleepScheduleModel"8@"NSError"16
[%{public}s] failed to retrieve sleep schedule model: %{public}s
[%{public}s] updated visible: %{public}s
alarm allowsShortcuts nearBedtime 
[%{public}s] updated alarm: %{public}s
[%{public}s] updated demo state: %{public}s
SleepLockScreen/LockScreenContentModel.swift
WATCH_CHARGE_FORMAT
WATCH_CHARGE_SHORT_FORMAT
[%{public}s] invalid devices: %{public}s
[%{public}s] first watch is not charging: %{public}s
[%{public}s] first watch is charging: %{public}s
[%{public}s] found %{public}s watch devices: %{public}s
[%{public}s] fetching watch battery
[%{public}s] stop observing watch battery
[%{public}s] fetching watch battery once on start
[%{public}s] start observing watch battery
v20@?0B8@"NSError"12
[%{public}s] skip upcoming alarm
[%{public}s] failed to skip upcoming alarm: %{public}s
[%{public}s] stopping detail text timer
[%{public}s] starting detail text timer with interval: %{public}s
[%{public}s] detail text timer already running with interval: %{public}s
[%{public}s] detail text timer fired
[%{public}s] updated detail text: %{public}s
[%{public}s] updated detail text types: %{public}s
[%{public}s] reset detail text types shown
SleepLockScreen.LockScreenContentModel
[%{public}s] updated sleep schedule model: %{public}s
[%{public}s] fetching watch battery due to connected device change
HKSPSleepStorePrivateObserver
v32@0:8@"HKSPSleepStore"16@"HKSPSleepEventRecord"24
v32@0:8@"HKSPSleepStore"16@"HKSPSleepScheduleModel"24
v32@0:8@"HKSPSleepStore"16@"HKSPSleepFocusConfiguration"24
BCBatteryDeviceObserving
v24@0:8@"NSArray"16
HKSPSleepStoreObserver
v32@0:8@16Q24
v28@0:8@16B24
v32@0:8@"HKSPSleepStore"16@"HKSPSleepSchedule"24
v32@0:8@"HKSPSleepStore"16@"HKSPSleepSettings"24
v32@0:8@"HKSPSleepStore"16@"HKSPSleepEvent"24
v32@0:8@"HKSPSleepStore"16Q24
v28@0:8@"HKSPSleepStore"16B24
ALARM_ALERT_CHANGE
v16@?0@"UIAlertAction"8
ALARM_ALERT_CANCEL
ALARM_ALERT_SKIP
ALARM_ALERT_STOP
[%{public}s] creating action sheet for alarm: %{public}@, is sleep: %{bool,public}d, is snoozed: %{bool,public}d, is firing: %{bool,public}d
_TtC15SleepLockScreen25ContentAppearenceProvider
layoutMonitor
_visible
v32@?0@"FBSDisplayLayoutMonitor"8@"FBSDisplayLayout"16@"FBSDisplayLayoutTransitionContext"24
[%{public}s] updated layout, contains SleepLockScreen: %{public}s, display on: %{public}s
[%{public}s] updated layout: %{public}s
com.apple.SleepLockScreen
_TtC15SleepLockScreen23LockScreenShortcutStore
workflowsArrayObservable
shortcuts
[%{public}s] found results that we were not listening for: %{public}@
[%{public}s] loaded %{public}s shortcuts
[%{public}s] caching has shortcuts: %{bool}d
[%{public}s] ignoring invalid workflow: %{public}s
[%{public}s] failed to create app record for %{public}s
[%{public}s] found uninstalled app for %{public}s
[%{public}s] failed to create icon for %{public}s
[%{public}s] %{public}s
[%{public}s] loaded %{public}s wind down workflows:
v24@?0@8@"NSError"16
[%{public}s] observing wind down workflows
[%{public}s] found an empty workflow array observable
SleepLockScreen.LockScreenShortcutStore
init()
WFObservableResultObserver
v24@0:8@"WFObservableResult"16
B24@0:8@16
_TtC15SleepLockScreen21LockScreenContentView
v24@0:8@16
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
headingContainerView
headingLabel
detailLabelEffectView
detailLabel
detailOverlayLabel
spacerLabel
contentSizeCategory
visibleContentFrame
actionsButton
weatherView
shortWeatherView
debugSafeContentBoundsView
debugActualContentBoundsView
model
modelSubscriber
$__lazy_storage_$_screenBounds
safeContentBounds
contentAreaGuide
contentTopConstraint
contentBottomConstraint
headingCenteringSpacingConstraint
shortWeatherViewTopConstraint
shortWeatherViewHiddenHeightConstraint
detailTextType
detailTextState
v12@?0B8
[%{public}s] computeFrameThatFitsVisibleContent: %s
[%{public}s] updateVisibleContentFrame
[%{public}s] Calculated new visible content frame %s
[%{public}s] No layout guide for content size calculations
[%{public}s] Applying new content size category %s
[%{public}s] Calculating content size for strings: %s, availableHeight: %s, availableWidth: %s
SleepLockScreen.LockScreenContentView
init(frame:)
[%{public}s] traitCollectionDidChange
[%{public}s] layoutSubviews
SleepLockScreen/LockScreenContentView.swift
Fatal error
init(coder:) has not been implemented
_TtC15SleepLockScreen12ActionButton
d16@0:8
v24@0:8d16
effectView
highlightedView
_continuousCornerRadius
Td,N
UICoverSheetButtonLuminanceMap
SleepLockScreen/ActionButton.swift
_TtC15SleepLockScreen13LocationModel
locationManager
_currentLocation
inUseAssertion
v32@0:8@16@24
[%{public}s] fetched current location: %{public}s
Down-casted Array element failed to match the target type
Expected 
NSArray element failed to match the Swift Array Element type
Expected 
[%{public}s] error fetching current location: %{public}s
[%{public}s] doesn't have location permissions
[%{public}s] status: %{public}s, should request: %s
[%{public}s] stopping
com.apple.weather
Sleep.WakeUpGreeting
[%{public}s] starting
SleepLockScreen.LocationModel
LockScreenShortcut
CLLocationManagerDelegate
v40@0:8@16@24@32
v40@0:8@16q24@32
v28@0:8@16i24
v40@0:8@"CLLocationManager"16@"CLLocation"24@"CLLocation"32
v32@0:8@"CLLocationManager"16@"NSArray"24
v32@0:8@"CLLocationManager"16@"CLHeading"24
B24@0:8@"CLLocationManager"16
v40@0:8@"CLLocationManager"16q24@"CLRegion"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconRegion"32
v40@0:8@"CLLocationManager"16@"CLBeaconRegion"24@"NSError"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconIdentityConstraint"32
v40@0:8@"CLLocationManager"16@"CLBeaconIdentityConstraint"24@"NSError"32
v32@0:8@"CLLocationManager"16@"CLRegion"24
v32@0:8@"CLLocationManager"16@"NSError"24
v40@0:8@"CLLocationManager"16@"CLRegion"24@"NSError"32
v28@0:8@"CLLocationManager"16i24
v24@0:8@"CLLocationManager"16
v32@0:8@"CLLocationManager"16@"CLVisit"24
_TtC15SleepLockScreen12WeatherModel
debugIdentifier
weatherService
_currentWeather
hourlyForecast
dailyForecast
locationModel
currentLocationSubscriber
WEATHER_SHORT_FORMAT
[%{public}s] fetching current weather for location: %{public}s
[%{public}s] weatherService is nil
[%{public}s] error fetching current weather: %{public}s
[%{public}s] fetched current weather: %{public}s, hourly forecast: %{public}s, daily forecast: %{public}s
SleepLockScreen.WeatherModel
com.apple.mobiletimer
[%{public}s] attempting to dismiss inactive alarm: %{public}@
v24@?0@"NSNull"8@"NSError"16
[%{public}s] dismissing active alarm: %{public}@
[%{public}s] dismissed active alarm: %{public}@
[%{public}s] failed to dismiss active alarm with error: %{public}s
UPCOMING_ALARM_ON
UPCOMING_ALARM_FORMAT
UPCOMING_ALARM_SHORT_FORMAT
UPCOMING_ALARM_SNOOZED_FORMAT
[%{public}s] ignoring nil alarm
[%{public}s] ignoring alarm of wrong class
[%{public}s] ignoring disabled alarm
[%{public}s] ignoring alarm with no fire date
[%{public}s] ignoring alarm with fire date: %{public}s (%{public}fs from now)
UPCOMING_BEDTIME_FORMAT
UPCOMING_BEDTIME_SHORT_FORMAT
BEDTIME_GREETING_SNOOZING
SleepLockScreen/LockScreenContentState.swift
WIND_DOWN_GREETING_EVENING
WIND_DOWN_GREETING_AFTERNOON
WIND_DOWN_GREETING_MORNING
WIND_DOWN_GREETING_EARLY_MORNING
BEDTIME_GREETING_EVENING
BEDTIME_GREETING_AFTERNOON
BEDTIME_GREETING_MORNING
BEDTIME_GREETING_EARLY_MORNING
WAKE_UP_GREETING_EVENING
WAKE_UP_GREETING_AFTERNOON
WAKE_UP_GREETING_MORNING
WAKE_UP_GREETING_EARLY_MORNING
_TtC15SleepLockScreen11WeatherView
v16@0:8
conditionsImageView
temperatureLabel
conditionsImageHeightConstraint
conditionsImageWidthConstraint
[%{public}s] Error trying to open Weather app
[%{public}s] Error trying to open Weather app: %{public}s
SleepLockScreen/WeatherView.swift
B16@0:8
@24@0:8@16
_TtC15SleepLockScreen24LockScreenViewController
@16@0:8
v20@0:8B16
@32@0:8@16@24
contentView
lockScreenStateObserver
contentStateObserver
$__lazy_storage_$_alarmManager
isAlertVisible
didConfigureHostConnection
contentPreferences
daemonConnection
prefersStatusBarHidden
TB,N,R
supportedInterfaceOrientations
TQ,N,R
_TtCC15SleepLockScreen24LockScreenViewControllerP33_DB83B3820BCB06A68353D0742C4D0FC923DaemonConnectionWrapper
connection
_TtC15SleepLockScreen16LockScreenClient
v32@0:8q16@24
_state
[%{public}s] requested remote server proxy before starting sleepd connection
v16@?0@"NSError"8
[%{public}s] error acquiring remote server proxy: %{public}s
[%{public}s] requested connect
[%{public}s] invalidation handler called
[%{public}s] interruption handler called
[%{public}s] update to state: %{public}s, user info: %{public}s
[%{public}s] did dismiss, type: %{public}s
SleepLockScreen/LockScreenViewController.swift
[%{public}s] updating content preferences %{public}s, dateTime: %{public}s, background: %{public}s, reduceWhitePoint: %{public}s, homeGestureMode: %{public}s, suppressNotifications: %{public}s, suppressBottomEdgeContent: %{public}s, presentInline: %{public}s, dismissOnTap: %{public}s, preferredNotificationListMode: %{public}s
[%{public}s] skipping updating content preferences while in loading state
v16@?0@"<OS_xpc_object>"8
[%{public}s] didChangeContentBounds called, requesting content bounds
bounds
[%{public}s] received new bounds: %{public}s
[%{public}s] cannot connect to sleepd due to nil endpoint
[%{public}s] configure with userInfo: %{public}s, bounds: %{public}s endpoint: %{public}s
[%{public}s] requested remote content host proxy before configuring connection
[%{public}s] error acquiring remote content host proxy: %{public}s
[%{public}s] opening %{public}s, success: %{public}s
clock-alarm:default
clock-sleep-alarm:edit
v16@?0@"SBSRemoteContentAlertAction"8
[%{public}s] creating remote alert alarm: %{public}@, is sleep: %{bool,public}d, is snoozed: %{bool,public}d, is firing: %{bool,public}d
[%{public}s] contentSizeDidChange
com.apple.sleep.controlcenter.sleepmode
[%{public}s] open shortcuts menu
[%{public}s] requested module with success: %{public}s, error: %{public}s
[%{public}s] updated content state: %{public}s
[%{public}s] update layout with safe bounds: %{public}s
SleepLockScreen.LockScreenViewController
init(nibName:bundle:)
frame
[%{public}s] frame: %{public}s
[%{public}s] getInlinePresentationContentFrame called, returning content size
[%{public}s] view did disappear
[%{public}s] view did appear
SleepLockScreenContentView
SleepLockScreenView
[%{public}s] view did load
HKSPSleepScreenDemoMode
SBSRemoteContentServiceInterface
v40@0:8@"NSDictionary"16@"NSObject<OS_xpc_object>"24@"NSObject<OS_xpc_object>"32
v24@0:8@?<v@?@"SBSRemoteContentPreferences">16
HKSPSleepLockScreenClient
v32@0:8q16@"NSDictionary"24
OS_xpc_object
connect
didDismissWithReason:
didChangeStyle
getContentBoundsWithReplyBlock:
presentAlert:replyBlock:
isEqual:
hash
superclass
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
description
debugDescription
workflowRunnerClient:didStartRunningWorkflowWithProgress:
workflowRunnerClient:didFinishRunningWorkflowWithError:cancelled:
init
.cxx_destruct
bundleIdentifierForDisplay
mainScreen
scale
_applicationIconImageForBundleIdentifier:format:scale:
iconImage
iconScale
initWithCGImage:scale:orientation:
identifier
invalidate
scheduledTimerWithTimeInterval:repeats:block:
fractionCompleted
dealloc
handleAlarmChangeWithNotification:
defaultCenter
addObserver:selector:name:object:
nextAlarm
addCompletionBlock:
removeObserver:
connectedDevicesDidChange:
sleepStore:sleepScheduleModelDidChange:
chargingRemindersEnabled
initWithIdentifier:healthStore:
sharedBehavior
features
autobahn
analyticsManager
analyticsStore
addObserver:
sleepScheduleModelWithCompletion:
hk_morningIndexWithCalendar:
initWithWindDownAction:wasUsed:identifier:
updateWindDownActions:onMorningIndex:
setBaselineForWindDownActions:onMorningIndex:
alarmIDString
nextEventWithIdentifier:dueAfterDate:
currentTraitCollection
preferredContentSizeCategory
bundleForClass:
name
percentCharge
initWithDouble:
stringFromNumber:
setNumberStyle:
connectedDevices
accessoryCategory
isCharging
removeBatteryDeviceObserver:
addBatteryDeviceObserver:queue:
skipUpcomingWakeUpAlarmForDate:completion:
timeInterval
standardUserDefaults
boolForKey:
sleepStore:sleepEventRecordDidChange:
sleepStore:sleepFocusConfigurationDidUpdate:
sleepStore:sleepScheduleDidChange:
sleepStore:sleepSettingsDidChange:
sleepStore:sleepEventDidOccur:
sleepStore:sleepScheduleStateDidChange:
sleepStore:sleepModeOnDidChange:
alertControllerWithTitle:message:preferredStyle:
actionWithTitle:style:handler:
addAction:
isFiring
isSnoozed
isSleepAlarm
configurationForDefaultMainDisplayMonitor
setNeedsUserInteractivePriority:
setTransitionHandler:
monitorWithConfiguration:
currentLayout
displayBacklightLevel
elements
bundleIdentifier
observableResultDidChange:
values
setBool:forKey:
applicationState
isInstalled
summaryString
standardClient
getSleepWorkflowsWithCompletion:
addResultObserver:
removeResultObserver:
initWithCoder:
layoutSubviews
traitCollectionDidChange:
didTapActionsButton
didPan:
accessibilityAlarmOptionsButton
accessibilityHeadingLabel
accessibilityShouldHideHeader
accessibilityIsShowingFocusState
accessibilityDetailLabel
initWithFrame:
setConstant:
setFrame:
effectWithStyle:
effectForBlurEffect:style:
state
translationInView:
setAttributedText:
attributedText
animateWithDuration:animations:completion:
animateWithDuration:animations:
setAlpha:
setHidden:
setAttributedTitle:forState:
isHidden
setActive:
traitCollectionWithPreferredContentSizeCategory:
_preferredFontForTextStyle:design:variant:compatibleWithTraitCollection:
initWithString:attributes:
setImage:
setText:
sharedInstance
formatDateAsTimeStyle:
string
_containsEmoji
layoutFrame
frame
initWithAttributedString:
clearColor
length
addAttribute:value:range:
_emojiCharacterSet
removeAttribute:range:
rangeOfCharacterFromSet:options:range:
copy
addLayoutGuide:
_referenceBounds
topAnchor
constraintEqualToAnchor:
bottomAnchor
leadingAnchor
constraintEqualToAnchor:constant:
trailingAnchor
activateConstraints:
lastBaselineAnchor
_preferredFontForTextStyle:maximumContentSizeCategory:
_scaledValueForValue:
centerYAnchor
setPriority:
constraintGreaterThanOrEqualToAnchor:constant:
widthAnchor
constraintLessThanOrEqualToAnchor:
centerXAnchor
heightAnchor
constraintEqualToConstant:
constraintLessThanOrEqualToAnchor:constant:
constraintGreaterThanOrEqualToConstant:
contentView
setFont:
attributedTitleForState:
titleLabel
_setContinuousCornerRadius:
setTranslatesAutoresizingMaskIntoConstraints:
setBackgroundColor:
addSubview:
setNumberOfLines:
setTextAlignment:
setLineBreakMode:
whiteColor
setTextColor:
setClipsToBounds:
setAccessibilityElementsHidden:
addTarget:action:forControlEvents:
setContentEdgeInsets:
layer
blueColor
colorWithAlphaComponent:
CGColor
sendSubviewToBack:
greenColor
setAdjustsFontSizeToFitWidth:
_continuousCornerRadius
buttonPressed:
buttonReleased:
setAutoresizingMask:
setAllowsHitTesting:
setUserInteractionEnabled:
effectWithBlurRadius:
blackColor
effectCompositingColor:withMode:alpha:
kitImageNamed:
colorEffectLuminanceMap:blendingAmount:
colorEffectSaturate:
colorEffectBrightness:
setBackgroundEffects:
removeFromSuperview
bounds
setHitTestsAsOpaque:
initWithRed:green:blue:alpha:
setBaselineAdjustment:
locationManager:didFailWithError:
locationManager:didUpdateLocations:
locationManagerDidChangeAuthorization:
authorizationStatus
requestWhenInUseAuthorization
requestLocation
initWithEffectiveBundleIdentifier:delegate:onQueue:
setDesiredAccuracy:
newAssertionForBundleIdentifier:withReason:level:
locationManager:didUpdateToLocation:fromLocation:
locationManager:didUpdateHeading:
locationManagerShouldDisplayHeadingCalibration:
locationManager:didDetermineState:forRegion:
locationManager:didRangeBeacons:inRegion:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManager:didRangeBeacons:satisfyingConstraint:
locationManager:didFailRangingBeaconsForConstraint:error:
locationManager:didEnterRegion:
locationManager:didExitRegion:
locationManager:monitoringDidFailForRegion:withError:
locationManager:didChangeAuthorizationStatus:
locationManager:didStartMonitoringForRegion:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didVisit:
systemImageNamed:
imageWithRenderingMode:
setSourceBundleIdentifier:
resume
dismissAlarmWithIdentifier:dismissAction:
stringFromTimeInterval:
setAllowedUnits:
setUnitsStyle:
setIncludesTimeRemainingPhrase:
isEnabled
nextFireDate
hksp_dayPeriodForDate:locale:options:
didTapContent:
setContentMode:
systemFontOfSize:weight:
initWithTarget:action:
addGestureRecognizer:
_shouldRemoveViewFromHierarchyOnDisappear
_canShowWhileLocked
_isSecureForRemoteViewService
_remoteViewControllerInterface
_exportedInterface
viewDidLoad
viewDidAppear:
viewDidDisappear:
prefersStatusBarHidden
supportedInterfaceOrientations
configureWithUserInfo:contentBounds:endpoint:
didChangeContentBounds
getInlinePresentationContentFrameWithReplyBlock:
getContentPreferencesWithReplyBlock:
didDismissForDismissType:
initWithNibName:bundle:
setLockScreenState:userInfo:
remoteObjectProxyWithErrorHandler:
_setEndpoint:
initWithListenerEndpoint:
setExportedInterface:
setExportedObject:
setRemoteObjectInterface:
setInterruptionHandler:
setInvalidationHandler:
doubleValue
boolValue
dismissSleepLockWithCompletion:
dismissGoodMorningWithCompletion:
sleepSettings
initWithConfiguration:
sleepModeOptions
_remoteViewControllerProxyWithErrorHandler:
defaultWorkspace
openSensitiveURL:withOptions:
initWithBundleIdentifier:allowPlaceholder:error:
initWithTitle:message:preferredStyle:
initWithTitle:style:
title
presentViewController:animated:completion:
alarmID
defaultOptions
presentModuleWithIdentifier:options:completionHandler:
setAccessibilityIdentifier:
view
initWithEffect:
hksp_internalUserDefaults
hksp_lockScreenDebugMode
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.QuartzCore.secure-mode</key>
<true/>
<key>com.apple.UIKit.vends-view-services</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.frontboardservices.display-layout-monitor</key>
<true/>
<key>com.apple.locationd.effective_bundle</key>
<true/>
<key>com.apple.locationd.prompt_from_background</key>
<true/>
<key>com.apple.locationd.usage_oracle</key>
<true/>
<key>com.apple.nano.nanoregistry.generalaccess</key>
<true/>
<key>com.apple.private.controlcenter.service.moduleidentifiers</key>
<array>
<string>com.apple.sleep.controlcenter.sleepmode</string>
</array>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.healthkit</key>
<true/>
<key>com.apple.private.healthkit.authorization_bypass</key>
<true/>
<key>com.apple.private.healthkit.source.identities</key>
<array>
<string>com.apple.mobiletimer</string>
</array>
<key>com.apple.private.mobiletimerd</key>
<true/>
<key>com.apple.private.sleepd</key>
<true/>
<key>com.apple.private.ubiquity-kvstore-access</key>
<array>
<string>com.apple.weather</string>
</array>
<key>com.apple.security.application-groups</key>
<array>
<string>group.com.apple.weather</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.MobileTimer.alarmserver</string>
<string>com.apple.sleepd.sleepserver</string>
<string>com.apple.controlcenter.remoteservice</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.internal.sleep</string>
<string>com.apple.sleep.analytics</string>
</array>
<key>com.apple.shortcuts.health-access</key>
<true/>
<key>com.apple.siri.VoiceShortcuts.xpc</key>
<true/>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>fairplay-client</key>
<string>511712240</string>
</dict>
</plist>
