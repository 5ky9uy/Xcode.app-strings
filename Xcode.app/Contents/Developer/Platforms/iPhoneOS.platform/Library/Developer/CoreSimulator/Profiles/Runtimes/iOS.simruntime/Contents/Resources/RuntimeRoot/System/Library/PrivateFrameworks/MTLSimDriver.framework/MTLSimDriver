v16@?0@"<MTLSerializerAllocator>"8
v24@?0r^v8Q16
messageType
command
replyData
v8@?0
ObjectRef generation queue
index creation queue
UseSimulatorSharedTextures
com.apple.Metal
-[MTLSerializer newSharedTextureWithDescriptor:allocator:]
Shared texture feature not available in simulator
-[MTLSerializer newSharedTextureWithHandle:]
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
This object may only be decoded by an NSXPCCoder.
label
This object may only be encoded by an NSXPCCoder.
eventRef
error
eventPort
labelTraceID
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.MTLSimDriver
-[MTLSerializerBlitCommandEncoder copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:]_block_invoke
Unable to load Simulator decoder Metal library: %@
pvrtc2
pvrtc4
DecodeEAC_R11Unorm
DecodeEAC_R11Snorm
DecodeEAC_RG11Unorm
DecodeEAC_RG11Snorm
DecodeEAC_RGBA8
DecodeETC2_RGB8
DecodeETC2_RGB8A1
DecodeBGRA_XR10
DecodeBGR_XR10
astc
Error creating kernel '%@': %@
Error creating pipeline state %@ from %@
v16@?0@"<MTLCommandBuffer>"8
-[MTLSerializerBlitCommandEncoder getTextureAccessCounters:region:mipLevel:slice:resetCounters:countersBuffer:countersBufferOffset:]
Not supported
-[MTLSerializerBlitCommandEncoder resetTextureAccessCounters:region:mipLevel:slice:]
-[MTLSerializerComputeCommandEncoder executeCommandsInBuffer:indirectBuffer:indirectBufferOffset:]
-[MTLSerializerComputeCommandEncoder executeCommandsInBuffer:withRange:]
-[MTLSerializerComputeCommandEncoder setAccelerationStructure:atBufferIndex:]
Not implemented
-[MTLSerializerComputeCommandEncoder setVisibleFunctionTable:atBufferIndex:]
-[MTLSerializerComputeCommandEncoder setVisibleFunctionTables:withBufferRange:]
-[MTLSerializerComputeCommandEncoder setIntersectionFunctionTable:atBufferIndex:]
-[MTLSerializerComputeCommandEncoder setIntersectionFunctionTables:withBufferRange:]
-[MTLSerializerRenderCommandEncoder setPrimitiveRestartEnabled:]
setPrimitiveRestartEnabled is not supported in the simulator
-[MTLSerializerRenderCommandEncoder setVertexVisibleFunctionTable:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setVertexVisibleFunctionTables:withBufferRange:]
-[MTLSerializerRenderCommandEncoder setFragmentVisibleFunctionTable:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setFragmentVisibleFunctionTables:withBufferRange:]
-[MTLSerializerRenderCommandEncoder setTileVisibleFunctionTable:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setTileVisibleFunctionTables:withBufferRange:]
-[MTLSerializerRenderCommandEncoder setVertexIntersectionFunctionTable:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setVertexIntersectionFunctionTables:withBufferRange:]
-[MTLSerializerRenderCommandEncoder setFragmentIntersectionFunctionTable:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setFragmentIntersectionFunctionTables:withBufferRange:]
-[MTLSerializerRenderCommandEncoder setTileIntersectionFunctionTable:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setTileIntersectionFunctionTables:withBufferRange:]
-[MTLSerializerRenderCommandEncoder setVertexAccelerationStructure:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setFragmentAccelerationStructure:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setTileAccelerationStructure:atBufferIndex:]
com.apple.metal.simulator
status
commandBufferRef
startTime
endTime
notificationRef
command buffers
Nov  6 2021
01:29:06
simulatorDummyPlugin
-[MTLSimDevice sparseTileSizeWithTextureType:pixelFormat:sampleCount:]
not supported in the simulator
v24@?0^v8Q16
length
options
bufferIndex
sharedMem
bufferRef
-[MTLSimDevice newHeapWithDescriptor:]
MTLStorageModePrivate is required for heaps
-[MTLSimDevice newIndirectCommandBufferWithDescriptor:maxCommandCount:options:]
-[MTLSimDevice newTextureWithDescriptor:]
texture rotation is not supported in the simulator
-[MTLSimDevice newTextureWithDescriptor:iosurface:plane:]
iosurface
-[MTLSimDevice wrapRenderState:descriptor:]
functionIR
-[MTLSimDevice wrapComputeState:descriptor:]
-[MTLSimDevice newIndirectCommandBufferWithDescriptor:maxCount:options:]
-[MTLSimDevice newIndirectComputeCommandEncoderWithBuffer:]
-[MTLSimDevice newIndirectRenderCommandEncoderWithBuffer:]
-[MTLSimDevice newTiledTextureWithBytesNoCopy:length:deallocator:descriptor:offset:bytesPerRow:]
-[MTLSimDevice newTiledTextureWithBytesNoCopy:length:descriptor:offset:bytesPerRow:]
simulator
Apple
-[MTLSimDevice newCommandQueueWithDescriptor:]
Descriptor cannot be nil
maxCommandBufferCount
commandQueueRef
-[MTLSimDevice newBufferWithIOSurface:]
-[MTLSimDevice minimumLinearTextureAlignmentForPixelFormat:]
%s is not supported on this device.
Linear textures do not support compressed pixel formats
Linear textures do not support depth/stencil pixel formats
-[MTLSimDevice minimumTextureBufferAlignmentForPixelFormat:]
-[MTLSimDevice newRenderPipelineStateWithTileDescriptor:options:completionHandler:]
-[MTLSimDevice newRenderPipelineStateWithTileDescriptor:options:reflection:error:]
EnableSimApple5
fatalError
XPCReplyCheck
connection Queue
connectionType
processRef
version
registryID
UNKNOWN XPC_TYPE_ERROR
XPC_ERROR_TERMINATION_IMMINENT
XPC_ERROR_CONNECTION_INVALID
XPC_ERROR_CONNECTION_INTERRUPTED
function variant
-[MTLSimBuffer initWithDevice:bufferRef:content:pointer:length:options:heap:deallocator:]
storageModePrivate incompatible with ...WithBytes variant of newBuffer
Invalid cacheMode %u
Invalid storageMode %u
%@%@
label =
<none>
length =
cpuCacheMode =
storageMode =
hazardTrackingMode =
resourceOptions =
purgeableState =
-[MTLSimBuffer newTextureWithDescriptor:offset:bytesPerRow:]
Linear texture can only be created on buffers with MTLStorageModePrivate in the simulator
Linear textures from XR10 is not supported in the simulator
-[MTLSimCommandBuffer resourceStateCommandEncoderWithDescriptor:]
-[MTLSimCommandBuffer resourceStateCommandEncoder]
-[MTLSimCommandBuffer setProtectionOptions:]
setProtectionOptions: with uncommitted encoder
commandQueue
segments
-[MTLSimTexture initWithTextureInternal:pixelFormat:decompressedPixelFormat:textureType:levels:slices:swizzle:compressedView:textureRef:isInternalTextureView:]
Device does not support texture swizzle.
Pixel format views involving XR10 are not supported in the simulator
-[MTLSimTexture initWithDescriptor:decompressedPixelFormat:iosurface:plane:textureRef:heap:device:]
IOSurface backed XR10 textures are not supported in the simulator
-[MTLSimTexture initWithDescriptor:decompressedPixelFormat:iosurface:plane:textureRef:heap:device:shareable:]
textureType =
pixelFormat =
decompressedPixelFormat =
width =
height =
depth =
arrayLength =
mipmapLevelCount =
sampleCount =
usage =
shareable =
framebufferOnly =
swizzle =
parentTexture =
<null>
parentRelativeLevel =
parentRelativeSlice =
buffer =
bufferOffset =
bufferBytesPerRow =
allowGPUOptimizedContents =
-[MTLSimTexture newTextureViewWithPixelFormat:textureType:levels:slices:swizzle:]
Ga==
@0`@
?0`@
event notification reference not found
Compiler failed to build request
Compiler failed with XPC_ERROR_CONNECTION_INTERRUPTED
Compiler failed with XPC_ERROR_CONNECTION_INVALID
Compiler failed with XPC_ERROR_TERMINATION_IMMINENT
Compiler failed with unknown XPC error
Decompression failure: unable to allocate decoder from at_encoder_create()
Decompression failure: error %ld returned from at_encoder_decompress_texels()
MTLSimIndirectArgumentBufferLayout
MTLSimArgumentEncoder
MTLArgumentEncoder
NSObject
MTLSimOperation
MTLSerializerAllocator
DefaultObjectRefAllocator
MTLSerializerObjectRefAllocator
MTLSerializer
MTLSimSharedEventHandle
NSSecureCoding
NSCoding
MTLSimSharedEvent
MTLSimEvent
MTLEvent
MTLSerializerEvent
MTLSerializerState
MTLSharedEvent
MTLSerializerBlitCommandEncoder
MTLBlitCommandEncoderSPI
MTLBlitCommandEncoder
MTLCommandEncoder
MTLSerializerCommandEncoder
MTLSerializerComputeCommandEncoder
MTLComputeCommandEncoderSPI
MTLComputeCommandEncoder
MTLSerializerRenderCommandEncoder
MTLRenderCommandEncoderSPI
MTLRenderCommandEncoder
MTLSimDevice
MTLDeviceSPI
MTLDevice
MTLSimFunction
MTLFunction
MTLSimFunctionVariant
MTLSimFence
MTLFence
MTLSerializerFence
MTLSerializerParallelRenderCommandEncoder
MTLParallelRenderCommandEncoderSPI
MTLParallelRenderCommandEncoder
MTLSimBuffer
MTLSerializerBuffer
MTLSerializerResource
MTLBufferSPI
MTLResourceSPI
MTLResource
MTLBuffer
MTLSimBufferStoragePool
MTLSimHeap
MTLHeap
MTLSerializerHeap
MTLSimCommandBuffer
MTLCommandBufferSPI
MTLCommandBuffer
MTLSerializerCommandStream
MTLSimCommandQueue
MTLCommandQueueSPI
MTLCommandQueue
MTLSimCommandStoragePool
MTLSimComputePipelineState
MTLComputePipelineState
MTLSerializerComputePipelineState
MTLSimDepthStencilState
MTLDepthStencilStateSPI
MTLDepthStencilState
MTLSerializerDepthStencilState
MTLSimRenderPipelineState
MTLRenderPipelineStateSPI
MTLRenderPipelineState
MTLPipelineStateWithProgramAddressTable
MTLSerializerRenderPipelineState
MTLSimResource
MTLSimSamplerState
MTLSamplerStateSPI
MTLSamplerState
MTLSerializerSamplerState
MTLSimTexture
MTLSerializerTexture
MTLTexture
MTLTextureImplementation
MTLTextureSPI
init
serializer
deleteArgumentBufferLayoutRef:allocator:
dealloc
argumentBufferLayoutConstantAtIndex:layoutRef:allocator:
resourceConnection
data
initWithDevice:reference:data:
bufferLayoutMatchesFrontEndLayout
encodedLength
alignment
constantOffsetAtIndex:
argumentBufferLayoutRef
_reference
_device
_bufferLayoutMatchesFrontEndLayout
_encodedLength
_alignment
TI,R,D
deleteArgumentEncoderRef:allocator:
argumentEncoderSetArgumentBuffer:offset:encoderRef:allocator:
doesNotRecognizeSelector:
setBuffers:offsets:withRange:
argumentEncoderSetBuffers:offsets:withRange:encoderRef:allocator:
setTextures:withRange:
argumentEncoderSetTextures:withRange:encoderRef:allocator:
setSamplerStates:withRange:
argumentEncoderSetSamplerStates:withRange:encoderRef:allocator:
bufferRef
argumentEncoderConstantAtIndex:encoderRef:bufferRef:allocator:
contents
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
setArgumentBuffer:offset:
setArgumentBuffer:startOffset:arrayElement:
setBuffer:offset:atIndex:
setTexture:atIndex:
setSamplerState:atIndex:
constantDataAtIndex:
setRenderPipelineState:atIndex:
setRenderPipelineStates:withRange:
setComputePipelineState:atIndex:
setComputePipelineStates:withRange:
setIndirectCommandBuffer:atIndex:
setIndirectCommandBuffers:withRange:
setAccelerationStructure:atIndex:
newArgumentEncoderForBufferAtIndex:
setVisibleFunctionTable:atIndex:
setVisibleFunctionTables:withRange:
setIntersectionFunctionTable:atIndex:
setIntersectionFunctionTables:withRange:
device
label
setLabel:
T@"<MTLDevice>",R
T@"NSString",C
initWithDevice:reference:layout:data:
argumentEncoderRef
setFunctionPointer:atIndex:
setFunctionPointers:withRange:
setVisibleFunctionTable:atBufferIndex:
setVisibleFunctionTables:withBufferRange:
setIntersectionFunctionTable:atBufferIndex:
setIntersectionFunctionTables:withBufferRange:
_layout
_argumentBuffer
_offset
allocateOperationBytes:
_data
T@"NSObject<OS_dispatch_data>",R,V_data
allocateObjectRef
releaseObjectRef:
_generator
_serialQueue
initWithDevice:objectRefAllocator:deserializerGeneratesResourceRefs:
newTextureRef
newSamplerStateRef
newDepthStencilStateRef
pixelFormat
textureRef
decompressedPixelFormat
decompressPlaceholder:expandedTex:srcFormat:destFormat:width:height:destRowBytes:srcRowBytes:
heapRef
newBufferRef
newFenceRef
newEventRef
serializeStructType:version:
newArgumentBufferLayoutRef
newArgumentEncoderRef
samplerRef
pipelineRef
newNotificationRef
serializerResourceRef
newFunctionRef
newRenderPipelineStateRef
newComputePipelineStateRef
newHeapRef
descriptorPrivate
stringWithUTF8String:
handleNewObjectReplyData:replyDataSize:errorMessage:
initWithDevice:deserializerGeneratesResourceRefs:
initWithDevice:
releaseBufferRef:
deleteBufferRef:allocator:
releaseTextureRef:
deleteTextureRef:allocator:
releaseDepthStencilStateRef:
deleteDepthStencilStateRef:allocator:
releaseSamplerStateRef:
deleteSamplerStateRef:allocator:
releaseFunctionRef:
deleteFunctionRef:allocator:
releaseComputePipelineStateRef:
deleteComputePipelineStateRef:allocator:
releaseRenderPipelineStateRef:
deleteRenderPipelineStateRef:allocator:
releaseFenceRef:
deleteFenceRef:allocator:
releaseArgumentBufferLayoutRef:
releaseArgumentEncoderRef:
releaseHeapRef:
deleteHeapRef:allocator:
releaseEventRef:
deleteEventRef:allocator:
newCommandQueueRef
releaseCommandQueueRef:
deleteCommandQueueRef:allocator:
newCommandBufferRef
releaseCommandBufferRef:
releaseNotificationRef:
newTextureWithDescriptor:
newSamplerStateWithDescriptor:
newDepthStencilStateWithDescriptor:
copyImageBytesFromSource:toDestination:dataSize:region:bytesPerRow:bytesPerImage:mipmapLevel:slice:texture:
getBytesFromRegion:bytesPerRow:bytesPerImage:mipmapLevel:slice:texture:outDataSize:
replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:texture:allocator:
newTextureViewWithPixelFormat:baseTexture:allocator:
newTextureWithDescriptor:heap:offset:useOffset:allocator:
newBufferWithLength:options:heap:offset:useOffset:allocator:
newTextureViewWithPixelFormat:textureType:levels:slices:baseTexture:allocator:
newTextureViewWithPixelFormat:textureType:levels:slices:swizzle:baseTexture:allocator:
newFenceWithAllocator:
newSharedEventWithAllocator:
newSharedEventWithHandle:allocator:
newSharedEventWithMachPort:allocator:
newArgumentBufferLayoutWithStructType:allocator:
newArgumentEncoderWithLayout:allocator:
sizeInfoForHeap:allocator:
minimumLinearTextureAlignmentForPixelFormat:allocator:
minimumTextureBufferAlignmentForPixelFormat:allocator:
getComputeInfoWithAllocator:
maxAvailableSizeWithAlignment:heap:allocator:
bufferGPUAddress:allocator:
uniqueIdentifierForTexture:allocator:
uniqueIdentifierForSamplerState:allocator:
uniqueIdentifierForRenderPipelineState:allocator:
uniqueIdentifierForComputePipelineState:allocator:
notifyListenerForEventRef:atValue:allocator:
sharedEventSignaledValueForEventRef:allocator:
sharedEventSetSignaledValue:eventRef:allocator:
sharedEventWaitSignaledValue:timeoutMS:eventRef:allocator:
heapTextureSizeAndAlignWithDescriptor:allocator:
heapBufferSizeAndAlignWithLength:options:allocator:
makeAliasableResource:allocator:
doesAliasResources:count:all:resource:allocator:
newTextureWithBuffer:descriptor:offset:bytesPerRow:allocator:
newTiledTextureWithBuffer:descriptor:offset:bytesPerRow:allocator:
newSharedTextureWithDescriptor:allocator:
newSharedTextureWithHandle:
newFunctionWithIR:
newRenderPipelineStateWithSerializedDescriptor:allocator:
newComputePipelineStateWithSerializedDescriptor:allocator:
newIOSurfaceTextureWithDescriptor:plane:allocator:
newTextureWithDescriptor:allocator:
newDepthStencilStateWithDescriptor:allocator:
newSamplerStateWithDescriptor:allocator:
newHeapWithDescriptor:allocator:
handleNewObjectReplyData:replyDataSize:
computePipelineWithReplyData:replyDataSize:pipelineInfo:errorMessage:
payloadFromReplyData:replyDataSize:
deserializerGeneratesResourceRefs
reflectionSerializationVersion
setReflectionSerializationVersion:
_objectIndex
_commandBufferIndex
_eventNotifications
_deserializerGeneratesResourceRefs
_reflectionSerializationVersion
TB,R,N,V_deserializerGeneratesResourceRefs
TQ,V_reflectionSerializationVersion
calculateOffsetToRegion:level:slice:
width
height
depth
length
depthStencilPrivate
stencilPrivate
copy
raise:format:
decodeXPCObjectOfType:forKey:
decodeObjectOfClass:forKey:
decodeIntegerForKey:
encodeXPCObject:forKey:
encodeObject:forKey:
encodeInteger:forKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
initWithEventPort:labelTraceID:label:
deserializerSupportsSharedEvents
registerEventNotification:listener:event:value:block:
mainConnection
eventRef
notifyListener:atValue:block:
newSharedEventHandle
signaledValue
setSignaledValue:
initWithDevice:reference:
waitSignaledValue:timeoutMS:
_signaledValue
TQ,D
initWithCommandBuffer:
writeSegmentHeader:continuation:
copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:
backingBuffer
copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:
endEncoding
commandBuffer
computeCommandEncoder
bundleWithIdentifier:
newDefaultLibraryWithBundle:error:
newFunctionWithName:constantValues:error:
newComputePipelineStateWithFunction:error:
setComputePipelineState:
newBufferWithLength:options:
decompressedTextureView
textureType
newTextureViewWithPixelFormat:textureType:levels:slices:
threadExecutionWidth
maxTotalThreadsPerThreadgroup
addResourceReference:isWrite:
setBytes:length:atIndex:
dispatchThreads:threadsPerThreadgroup:
hazardTrackingMode
newEvent
encodeSignalEvent:value:
encodeWaitForEvent:value:
addCompletedHandler:
getCommandBytes:forCommand:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:options:
indirectCommandBufferRef
optimize:withCommand:
optimize:slice:level:withCommand:
optimizeReset:withRange:withCommand:
addStateReference:
fenceRef
mipmapLevelCount
arrayLength
copyFromTexture:sourceSlice:sourceLevel:toTexture:destinationSlice:destinationLevel:sliceCount:levelCount:
insertDebugSignpost:
pushDebugGroup:
popDebugGroup
synchronizeResource:
synchronizeTexture:slice:level:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:
copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:
generateMipmapsForTexture:
fillBuffer:range:value:
copyFromTexture:toTexture:
updateFence:
waitForFence:
getTextureAccessCounters:region:mipLevel:slice:resetCounters:countersBuffer:countersBufferOffset:
resetTextureAccessCounters:region:mipLevel:slice:
optimizeContentsForGPUAccess:
optimizeContentsForGPUAccess:slice:level:
optimizeContentsForCPUAccess:
optimizeContentsForCPUAccess:slice:level:
resetCommandsInBuffer:withRange:
copyIndirectCommandBuffer:sourceRange:destination:destinationIndex:
optimizeIndirectCommandBuffer:withRange:
sampleCountersInBuffer:atSampleIndex:withBarrier:
resolveCounters:inRange:destinationBuffer:destinationOffset:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:
invalidateCompressedTexture:
invalidateCompressedTexture:slice:level:
fillBuffer:range:pattern4:
fillTexture:level:slice:region:bytes:length:
fillTexture:level:slice:region:color:
fillTexture:level:slice:region:color:pixelFormat:
beginSegment:
getType
getBufferBytes:alignment:buffer:offset:
setBuffers:offsets:withRange:withCommand:array:rangeMax:
useHeaps:count:
useResources:count:usage:
setSplitHandler:
getCommandBufferBytes:
beginContinuation
setBytes:length:atIndex:withCommand:array:rangeMax:
setSamplerStates:withRange:withCommand:array:rangeMax:
setSamplerStates:lodMinClamps:lodMaxClamps:withRange:withCommand:array:rangeMax:
setTextures:withRange:withCommand:array:rangeMax:
useHeap:
useResource:usage:
getCommandBytesRetry:forCommand:
stream
split
getWritableInfo:buffers:texturesArrayLength:textures:
handleSplits
flushWrites
memoryBarrierNotificationWithResources:count:
memoryBarrierNotificationWithScope:
setBufferOffset:atIndex:
setAccelerationStructure:atBufferIndex:
setSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setSamplerStates:lodMinClamps:lodMaxClamps:withRange:
setThreadgroupMemoryLength:atIndex:
setImageblockWidth:height:
setStageInRegion:
setStageInRegionWithIndirectBuffer:indirectBufferOffset:
dispatchThreadgroups:threadsPerThreadgroup:
dispatchThreadgroupsWithIndirectBuffer:indirectBufferOffset:threadsPerThreadgroup:
executeCommandsInBuffer:withRange:
executeCommandsInBuffer:indirectBuffer:indirectBufferOffset:
memoryBarrierWithScope:
memoryBarrierWithResources:count:
dispatchType
newKernelDebugInfo
dispatchThreadsWithIndirectBuffer:indirectBufferOffset:
enableNullBufferBinds:
useResourceGroup:usage:
encodeStartDoWhile
encodeEndDoWhile:offset:comparison:referenceValue:
encodeStartWhile:offset:comparison:referenceValue:
encodeEndWhile
encodeStartIf:offset:comparison:referenceValue:
encodeStartElse
encodeEndIf
initWithCommandBuffer:dispatchType:
needsWrites
setNeedsWrites:
hadSplit
buffers
textures
samplers
pipelineState
_resourcesDirty
TB,VneedsWrites
countByEnumeratingWithState:objects:count:
writeDescriptor
addRenderTargetReferences
depthAttachment
texture
resolveTexture
level
slice
depthPlane
resolveLevel
resolveSlice
resolveDepthPlane
loadAction
storeAction
storeActionOptions
clearDepth
depthResolveFilter
stencilAttachment
clearStencil
stencilResolveFilter
colorAttachments
objectAtIndexedSubscript:
clearColor
visibilityResultBuffer
renderTargetArrayLength
renderTargetWidth
renderTargetHeight
getWritableInfo:vtxBuffers:vtxTexturesArrayLength:vtxTextures:frgBuffersLength:frgBuffers:frgTexturesArrayLength:frgTextures:
depthStencilRef
setStencilFrontReferenceValue:backReferenceValue:
setFragmentTexture:atIndex:
setFragmentSamplerState:atIndex:
useHeaps:count:stages:
useResources:count:usage:stages:
forceStoreActionsForPosition:
forceLoadActions
setRenderPipelineState:
setVertexBytes:length:atIndex:
setVertexBuffer:offset:atIndex:
setVertexBufferOffset:atIndex:
setVertexBuffers:offsets:withRange:
setVertexTexture:atIndex:
setVertexTextures:withRange:
setVertexSamplerState:atIndex:
setVertexSamplerStates:withRange:
setVertexSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setVertexSamplerStates:lodMinClamps:lodMaxClamps:withRange:
setVertexVisibleFunctionTable:atBufferIndex:
setVertexVisibleFunctionTables:withBufferRange:
setVertexIntersectionFunctionTable:atBufferIndex:
setVertexIntersectionFunctionTables:withBufferRange:
setVertexAccelerationStructure:atBufferIndex:
setViewport:
setViewports:count:
setFrontFacingWinding:
setVertexAmplificationCount:viewMappings:
setCullMode:
setDepthClipMode:
setDepthBias:slopeScale:clamp:
setScissorRect:
setScissorRects:count:
setTriangleFillMode:
setFragmentBytes:length:atIndex:
setFragmentBuffer:offset:atIndex:
setFragmentBufferOffset:atIndex:
setFragmentBuffers:offsets:withRange:
setFragmentTextures:withRange:
setFragmentSamplerStates:withRange:
setFragmentSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setFragmentSamplerStates:lodMinClamps:lodMaxClamps:withRange:
setFragmentVisibleFunctionTable:atBufferIndex:
setFragmentVisibleFunctionTables:withBufferRange:
setFragmentIntersectionFunctionTable:atBufferIndex:
setFragmentIntersectionFunctionTables:withBufferRange:
setFragmentAccelerationStructure:atBufferIndex:
setBlendColorRed:green:blue:alpha:
setDepthStencilState:
setStencilReferenceValue:
setVisibilityResultMode:offset:
setColorStoreAction:atIndex:
setDepthStoreAction:
setStencilStoreAction:
setColorStoreActionOptions:atIndex:
setDepthStoreActionOptions:
setStencilStoreActionOptions:
drawPrimitives:vertexStart:vertexCount:instanceCount:
drawPrimitives:vertexStart:vertexCount:
drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:
drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:
drawPrimitives:vertexStart:vertexCount:instanceCount:baseInstance:
drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:baseVertex:baseInstance:
drawPrimitives:indirectBuffer:indirectBufferOffset:
drawIndexedPrimitives:indexType:indexBuffer:indexBufferOffset:indirectBuffer:indirectBufferOffset:
textureBarrier
updateFence:afterStages:
waitForFence:beforeStages:
setTessellationFactorBuffer:offset:instanceStride:
setTessellationFactorScale:
drawPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:instanceCount:baseInstance:
drawPatches:patchIndexBuffer:patchIndexBufferOffset:indirectBuffer:indirectBufferOffset:
drawIndexedPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:instanceCount:baseInstance:
drawIndexedPatches:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:indirectBuffer:indirectBufferOffset:
setTileBytes:length:atIndex:
setTileBuffer:offset:atIndex:
setTileBufferOffset:atIndex:
setTileBuffers:offsets:withRange:
setTileTexture:atIndex:
setTileTextures:withRange:
setTileSamplerState:atIndex:
setTileSamplerStates:withRange:
setTileSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setTileSamplerStates:lodMinClamps:lodMaxClamps:withRange:
setTileVisibleFunctionTable:atBufferIndex:
setTileVisibleFunctionTables:withBufferRange:
setTileIntersectionFunctionTable:atBufferIndex:
setTileIntersectionFunctionTables:withBufferRange:
setTileAccelerationStructure:atBufferIndex:
dispatchThreadsPerTile:
setThreadgroupMemoryLength:offset:atIndex:
useResource:usage:stages:
useHeap:stages:
memoryBarrierWithScope:afterStages:beforeStages:
memoryBarrierWithResources:count:afterStages:beforeStages:
tileWidth
tileHeight
setDepthClipModeSPI:
setLineWidth:
addSplitHandler:
isMemorylessRender
setFragmentTexture:atTextureIndex:samplerState:atSamplerIndex:
setVertexAmplificationMode:value:
setCommandDataCorruptModeSPI:
setAlphaTestReferenceValue:
setPointSize:
setClipPlane:p2:p3:p4:atIndex:
setVertexSamplerState:lodMinClamp:lodMaxClamp:lodBias:atIndex:
setFragmentSamplerState:lodMinClamp:lodMaxClamp:lodBias:atIndex:
setViewportTransformEnabled:
setProvokingVertexMode:
setPrimitiveRestartEnabled:
setPrimitiveRestartEnabled:index:
setTriangleFrontFillMode:backFillMode:
setTransformFeedbackState:
setDepthCleared
setStencilCleared
setColorResolveTexture:slice:depthPlane:level:atIndex:
setColorResolveTexture:slice:depthPlane:level:yInvert:atIndex:
setDepthResolveTexture:slice:depthPlane:level:
setDepthResolveTexture:slice:depthPlane:level:yInvert:
setStencilResolveTexture:slice:depthPlane:level:
setStencilResolveTexture:slice:depthPlane:level:yInvert:
dispatchThreadsPerTile:inRegion:
useResourceGroup:usage:stages:
initWithCommandBuffer:descriptor:
fixStoreActions:
setEncoderPosition:
splitHandlers
renderPassDescriptor
depthStencilState
fragmentBuffers
fragmentTextures
fragmentSamplers
vertexBuffers
vertexTextures
vertexSamplers
tessellationFactorBuffer
renderPassCommand
TQ,R,VtileWidth
TQ,R,VtileHeight
initWithDomain:code:userInfo:
commandBufferForReference:
didScheduleWithStartTime:endTime:error:
commandQueue
commandBufferDidComplete:startTime:completionTime:error:
dispatchNotificationWithReference:
getNewResourceID
initWithResourceListCapacity:
_deviceWrapper
initWithTargetData:cacheUUID:pluginPath:device:compilerFlags:
validateWithDevice:
getDecompressedFormat:
setPixelFormat:
usage
setUsage:
initWithDevice:bufferRef:content:pointer:length:options:heap:deallocator:
newBufferWithLength:options:pointer:copyBytes:deallocator:
initWithDescriptor:reference:device:
initWithDevice:fenceRef:
storageMode
initWithDescriptor:device:heapRef:
dispatchQueue
setStorageMode:
rotation
initWithDescriptor:decompressedPixelFormat:iosurface:plane:textureRef:heap:device:
initWithUTF8String:
initWithDevice:functionType:functionRef:
initWithFunction:compilerOutput:
newFunctionVariantWithCompilerOutput:functionType:
vertexFunction
function
setVertexFunction:
fragmentFunction
setFragmentFunction:
serializeRenderPipelineDescriptor:
compilerConnection
initWithDevice:pipelineRef:descriptor:
dictionaryWithObjects:forKeys:count:
setObject:forKeyedSubscript:
computeFunction
setComputeFunction:
serializeComputePipelineDescriptor:
maxTotalComputeThreadsPerThreadgroup
setMaxTotalThreadsPerThreadgroup:
setStaticThreadgroupMemoryLength:
setThreadExecutionWidth:
setSupportIndirectCommandBuffers:
maxCommandBufferCount
initWithDevice:commandQueueRef:descriptor:
preprocessorMacros
count
objectForKey:
stringValue
UTF8String
fastMathEnabled
languageVersion
debuggingEnabled
newSharedEvent
eventPort
registerDevices
newCommandQueue
newCommandQueueWithMaxCommandBufferCount:
heapTextureSizeAndAlignWithDescriptor:
heapBufferSizeAndAlignWithLength:options:
newHeapWithDescriptor:
newBufferWithBytes:length:options:
newBufferWithBytesNoCopy:length:options:deallocator:
newTextureWithDescriptor:iosurface:plane:
newDefaultLibrary
newLibraryWithFile:error:
newLibraryWithURL:error:
newLibraryWithData:error:
newLibraryWithSource:options:error:
newLibraryWithSource:options:completionHandler:
newLibraryWithStitchedDescriptor:error:
newLibraryWithStitchedDescriptor:completionHandler:
newRenderPipelineStateWithDescriptor:error:
newRenderPipelineStateWithDescriptor:options:reflection:error:
newRenderPipelineStateWithDescriptor:completionHandler:
newRenderPipelineStateWithDescriptor:options:completionHandler:
newComputePipelineStateWithFunction:options:reflection:error:
newComputePipelineStateWithFunction:completionHandler:
newComputePipelineStateWithFunction:options:completionHandler:
newComputePipelineStateWithDescriptor:options:reflection:error:
newComputePipelineStateWithDescriptor:options:completionHandler:
newFence
supportsFeatureSet:
supportsFamily:
supportsTextureSampleCount:
minimumLinearTextureAlignmentForPixelFormat:
minimumTextureBufferAlignmentForPixelFormat:
newRenderPipelineStateWithTileDescriptor:options:reflection:error:
newRenderPipelineStateWithTileDescriptor:options:completionHandler:
getDefaultSamplePositions:count:
newArgumentEncoderWithArguments:
supportsRasterizationRateMapWithLayerCount:
newRasterizationRateMapWithDescriptor:
newIndirectCommandBufferWithDescriptor:maxCommandCount:options:
newSharedEventWithHandle:
sparseTileSizeWithTextureType:pixelFormat:sampleCount:
newCounterSampleBufferWithDescriptor:error:
sampleTimestamps:gpuTimestamp:
supportsCounterSampling:
supportsVertexAmplificationCount:
newDynamicLibrary:error:
newDynamicLibraryWithURL:error:
newBinaryArchiveWithDescriptor:error:
accelerationStructureSizesWithDescriptor:
newAccelerationStructureWithSize:
newAccelerationStructureWithDescriptor:
name
registryID
maxThreadsPerThreadgroup
isLowPower
isHeadless
isRemovable
hasUnifiedMemory
recommendedMaxWorkingSetSize
isDepth24Stencil8PixelFormatSupported
readWriteTextureSupport
argumentBuffersSupport
areRasterOrderGroupsSupported
supports32BitFloatFiltering
supports32BitMSAA
supportsQueryTextureLOD
supportsBCTextureCompression
supportsPullModelInterpolation
areBarycentricCoordsSupported
supportsShaderBarycentricCoordinates
currentAllocatedSize
maxThreadgroupMemoryLength
maxArgumentBufferSamplerCount
areProgrammableSamplePositionsSupported
sparseTileSizeInBytes
maxBufferLength
counterSets
supportsDynamicLibraries
supportsRenderDynamicLibraries
supportsRaytracing
supportsFunctionPointers
supportsFunctionPointersFromRender
supportsRaytracingFromRender
supportsPrimitiveMotionBlur
convertSparsePixelRegions:toTileRegions:withTileSize:alignmentMode:numRegions:
convertSparseTileRegions:toPixelRegions:withTileSize:numRegions:
T@"NSString",R
T{?=QQQ},R
lowPower
TB,R,GisLowPower
headless
TB,R,GisHeadless
removable
TB,R,GisRemovable
depth24Stencil8PixelFormatSupported
TB,R,GisDepth24Stencil8PixelFormatSupported
rasterOrderGroupsSupported
TB,R,GareRasterOrderGroupsSupported
barycentricCoordsSupported
TB,R,GareBarycentricCoordsSupported
programmableSamplePositionsSupported
TB,R,GareProgrammableSamplePositionsSupported
T@"NSArray",R
reportLeaks
allowLibrariesFromOtherPlatforms
vendorName
familyName
productName
compilerPropagatesThreadPriority:
_setDeviceWrapper:
deviceSupportsFeatureSet:
deviceOrFeatureProfileSupportsFeatureSet:
minLinearTextureAlignmentForPixelFormat:
newBufferWithIOSurface:
unloadShaderCaches
libraryCacheStats
pipelineCacheStats
copyShaderCacheToPath:
supportsSampleCount:
newCommandQueueWithDescriptor:
newIndirectArgumentBufferLayoutWithStructType:
newArgumentEncoderWithLayout:
supportsTextureWriteRoundingMode:
newIndirectCommandBufferWithDescriptor:maxCount:options:
newIndirectRenderCommandEncoderWithBuffer:
newIndirectComputeCommandEncoderWithBuffer:
newSharedEventWithMachPort:
setResourcesPurgeableState:newState:oldState:count:
newAccelerationStructureWithSize:resourceIndex:
isCompatibleWithAccelerationStructure:
newAccelerationStructureWithBuffer:offset:
newDynamicLibrary:computeDescriptor:error:
newDynamicLibraryWithURL:options:error:
newDynamicLibraryFromURL:error:
loadDynamicLibrariesForComputeDescriptor:error:
loadDynamicLibrariesForComputeDescriptor:options:error:
loadDynamicLibrariesForFunction:insertLibraries:error:
loadDynamicLibrariesForFunction:insertLibraries:options:error:
validateDynamicLibrary:state:error:
validateDynamicLibraryURL:error:
newBinaryLibraryWithOptions:url:error:
newVisibleFunctionTableWithDescriptor:
newIntersectionFunctionTableWithDescriptor:
supportsBufferlessClientStorageTexture
supportsComputeMemoryBarrier
supportsRenderMemoryBarrier
supportsArgumentBuffersTier2
supportsReadWriteTextureArgumentsTier2
supportsStreamingCodecSignaling
supportsProgrammableSamplePositions
supportsLargeFramebufferConfigs
supportsCustomBorderColor
supportsSamplerAddressModeClampToHalfBorder
supports3DBCTextures
supportsRGBA10A2Gamma
supportsPrimitiveRestartOverride
supportsGlobalVariableRelocation
supportsGlobalVariableRelocationRender
supportsGlobalVariableRelocationCompute
supportsTLS
supports32bpcMSAATextures
supportsVertexAmplification
supportsPlacementHeaps
supportsOpenCLTextureWriteSwizzles
supportsInt64
supportsFixedLinePointFillDepthGradient
supportsLateEvalEvent
supportsNonZeroTextureWriteLOD
supportsSharedTextureHandles
supportsBufferPrefetchStatistics
supportsLimitedYUVFormats
supportsNonPrivateDepthStencilTextures
supportsNonPrivateMSAATextures
supportsSharedStorageHeapResources
supportsSharedStorageTextures
supportsLinearTextureFromSharedBuffer
supportsPipelineLibraries
supportsFragmentOnlyEncoders
supportsBufferWithIOSurface
supportsProgrammableBlending
supportsRenderToLinearTextures
supportsMemorylessRenderTargets
supportsFastMathInfNaNPropagation
supportsInvariantVertexPosition
supportsShaderLODAverage
supportsRelaxedTextureViewRequirements
supportsSeparateDepthStencil
supportsGPUStatistics
supportsCompressedTextureViewSPI
supportsRenderTargetTextureRotation
supportsDynamicControlPointCount
supportsIABHashForTools
supportsBinaryArchives
supportsBinaryLibraries
supportsASTCTextureCompression
supportsExtendedYUVFormats
supportsPublicXR10Formats
supportsSRGBwrites
supportsDepthClipMode
supportsPacked32TextureBufferWrites
supports3DASTCTextures
supportsExtendedXR10Formats
supportsFragmentBufferWrites
supportsCountingOcclusionQuery
supportsBaseVertexInstanceDrawing
supportsIndirectDrawAndDispatch
supportsTessellation
supportsReadWriteBufferArguments
supportsArrayOfTextures
supportsArrayOfSamplers
supportsCombinedMSAAStoreAndResolveAction
supportsMutableTier1ArgumentBuffers
supportsSamplerCompareFunction
supportsMSAADepthResolve
supportsMSAAStencilResolve
supportsMSAADepthResolveFilter
supportsGFXIndirectCommandBuffers
supportsCMPIndirectCommandBuffers
supportsIndirectStageInRegion
supportsIndirectTextures
supportsNorm16BCubicFiltering
supportsTextureOutOfBoundsReads
supportsTextureSwizzle
supportsAlphaYUVFormats
supportsMemoryOrderAtomics
supportsQuadGroup
supportsRenderTextureWrites
supportsImageBlocks
supportsTileShaders
supportsImageBlockSampleCoverageControl
supportsNativeHardwareFP16
supportsPostDepthCoverage
supportsMipLevelsSmallerThanBlockSize
supportsNonUniformThreadgroupSize
supportsReadWriteTextureArguments
supportsReadWriteTextureCubeArguments
supportsTextureCubeArray
supportsQuadShufflesAndBroadcast
supportsConcurrentComputeDispatch
supportsRenderPassWithoutRenderTarget
supportsRasterOrderGroups
supportsRasterOrderGroupsColorAttachment
supportsLinearTexture2DArray
supportsNonSquareTileShaders
supportsSeparateVisibilityAndShadingRate
supports2DLinearTexArraySPI
supportsLayeredRendering
supportsViewportAndScissorArray
supportsIndirectTessellation
supportsMSAAStencilResolveFilter
supportsStencilFeedback
supportsFP32TessFactors
supportsUnalignedVertexFetch
supportsSIMDGroup
supportsShaderMinLODClamp
supportsSIMDShufflesAndBroadcast
supportsWritableArrayOfTextures
supportsVariableRateRasterization
supportsYCBCRFormats
supportsYCBCRFormatsPQ
supportsYCBCRFormats12
supportsYCBCRFormatsXR
supportsASTCHDRTextureCompression
supportsSparseTextures
supportsSparseHeaps
supportsIndirectWritableTextures
supportsStatefulDynamicLibraries
supportsSharedFunctionTables
supportsBlackOrWhiteSamplerBorderColors
supportsMirrorClampToEdgeSamplerMode
supportsSIMDReduction
supportsDepthClipModeClampExtended
supportsTexture2DMultisampleArray
supportsForceSeamsOnCubemaps
supportsFloat16BCubicFiltering
supportsFloat16InfNanFiltering
supportsRTZRounding
supportsAnisoSampleFix
supportsYCBCRPackedFormatsPQ
supportsYCBCRPackedFormats12
supportsYCBCRPackedFormatsXR
supportsBufferBoundsChecking
supportsForkJoin
supportsDevicePartitioning
supportsComputeCompressedTextureWrite
supportsSIMDGroupMatrix
supportsInterchangeTiled
supportsQuadReduction
supportsSIMDShuffleAndFill
supportsBfloat16Format
supportsSparseDepthAttachments
supportsAtomicUlongVoidMinMax
supportsLossyCompression
supportsCommandBufferJump
supportsStackOverflowErrorCode
deviceCreationFlags
areGPUAssertionsEnabled
setGPUAssertionsEnabled:
commandBufferErrorOptions
setCommandBufferErrorOptions:
isBCTextureCompressionSupported
targetDeviceInfo
targetDeviceArchitecture
halfFPConfig
singleFPConfig
doubleFPConfig
metalAssertionsEnabled
setMetalAssertionsEnabled:
featureProfile
limits
maxFramebufferStorageBits
linearTextureArrayAlignmentBytes
linearTextureArrayAlignmentSlice
maxTileBuffers
maxTileTextures
maxTileSamplers
maxTileInlineDataSize
minTilePixels
maxColorAttachments
maxVertexAttributes
maxVertexBuffers
maxVertexTextures
maxVertexSamplers
maxVertexInlineDataSize
maxInterpolants
maxFragmentBuffers
maxFragmentTextures
maxFragmentSamplers
maxFragmentInlineDataSize
maxComputeBuffers
maxComputeTextures
maxComputeSamplers
maxComputeInlineDataSize
maxComputeLocalMemorySizes
maxComputeThreadgroupMemory
maxLineWidth
maxPointSize
maxVisibilityQueryOffset
minConstantBufferAlignmentBytes
minBufferNoCopyAlignmentBytes
maxTextureWidth1D
maxTextureWidth2D
maxTextureHeight2D
maxTextureWidth3D
maxTextureHeight3D
maxTextureDepth3D
maxTextureDimensionCube
maxTextureLayers
linearTextureAlignmentBytes
iosurfaceTextureAlignmentBytes
iosurfaceReadOnlyTextureAlignmentBytes
deviceLinearTextureAlignmentBytes
deviceLinearReadOnlyTextureAlignmentBytes
maxFunctionConstantIndices
maxComputeThreadgroupMemoryAlignmentBytes
maxInterpolatedComponents
maxTessellationFactor
maxIndirectBuffers
maxIndirectTextures
maxIndirectSamplers
maxIndirectSamplersPerDevice
maxFenceInstances
maxViewportCount
maxCustomSamplePositions
maxVertexAmplificationFactor
maxVertexAmplificationCount
maxTextureBufferWidth
maxComputeAttributes
maxPredicatedNestingDepth
maxConstantBufferArguments
supportPriorityBand
sharedMemorySize
dedicatedMemorySize
indirectArgumentBufferCapabilities
isFloat32FilteringSupported
isMsaa32bSupported
isRTZRoundingSupported
defaultTextureWriteRoundingMode
isAnisoSampleFixSupported
isFixedLinePointFillDepthGradientSupported
isLargeMRTSupported
maxRasterizationRateLayerCount
isPlacementHeapSupported
GPUBVHBuilder
requiresRaytracingEmulation
pluginData
setPluginData:
supportsPrimitiveType:
indirectArgumentBufferDecodingData
setIndirectArgumentBufferDecodingData:
setupMPSFunctionTable:
resourcePatchingTypeForResourceType:
reserveResourceIndicesForResourceType:indices:indexCount:
reserveGPUAddressRange:
newBufferWithLength:options:gpuAddress:
newBufferWithBytes:length:options:gpuAddress:
newBufferWithBytesNoCopy:length:options:gpuAddress:deallocator:
newBufferWithDescriptor:
newLateEvalEvent
mapShaderSampleBufferWithBuffer:capacity:size:
unmapShaderSampleBuffer
newComputePipelineStateWithDescriptor:error:
newComputePipelineStateWithDescriptor:completionHandler:
newRenderPipelineStateWithTileDescriptor:error:
newRenderPipelineStateWithTileDescriptor:completionHandler:
newFunctionWithGLCoreIR:functionType:
newFunctionWithGLCoreIR:inputsDescription:functionType:
newFunctionWithGLESIR:functionType:
newFunctionWithGLESIR:inputsDescription:functionType:
newFunctionWithGLIR:functionType:
newFunctionWithGLIR:inputsDescription:functionType:
getShaderCacheKeys
getBVHBuilderLock
getRawBVHBuilderPtr
setRawBVHBuilderPtr:
newIndirectArgumentEncoderWithArguments:
newComputePipelineStateWithImageFilterFunctionsSPI:imageFilterFunctionInfo:error:
newLibraryWithDAG:functions:error:
newLibraryWithGraphs:functions:error:
newLibraryWithGraphsSPI:functions:error:
newLibraryWithStitchedDescriptorSPI:error:
newLibraryWithDescriptor:error:
newLibraryWithDescriptor:completionHandler:
newLibraryWithDescriptorSPI:error:
newDagStringWithGraphs:
newLibraryWithImageFilterFunctionsSPI:imageFilterFunctionInfo:error:
newLibraryWithCIFilters:imageFilterFunctionInfo:error:
newLibraryWithCIFiltersForComputePipeline:imageFilterFunctionInfo:error:
newPipelineLibraryWithFilePath:error:
startCollectingPipelineDescriptors
startCollectingPipelineDescriptorsUsingPrefixForNames:
endCollectingPipelineDescriptors
newRenderPipelineDescriptorWithSerializedData:deserializationContext:
newComputePipelineDescriptorWithSerializedData:deserializationContext:
serializeStructType:
newTextureWithBytesNoCopy:length:descriptor:deallocator:
newTextureLayoutWithDescriptor:isHeapOrBufferBacked:
newIndirectArgumentEncoderWithLayout:
tileSizeWithSparsePageSize:textureType:pixelFormat:sampleCount:
compileVisibleFunction:withDescriptor:destinationBinaryArchive:error:
compileVisibleFunction:withDescriptor:error:
compileVisibleFunction:withDescriptor:completionHandler:
newResourceGroupFromResources:count:
deserializeCompileTimeStats:addToDictionary:
shaderDebugInfoCaching
setShaderDebugInfoCaching:
isQuadDataSharingSupported
sparseTexturesSupport
isRGB10A2GammaSupported
isCustomBorderColorSupported
isClampToHalfBorderSupported
TB,R,N
gpuAssertionsEnabled
TB,GareGPUAssertionsEnabled,SsetGPUAssertionsEnabled:
TQ,N
BCTextureCompressionSupported
TB,R,GisBCTextureCompressionSupported
Tr^{MTLTargetDeviceArch=QI*},R
T@"MTLTargetDeviceArchitecture",R
TB,N
Tr^{?=IIIIIIIIIIIIIIIIIIIIIIIIIIffIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIQ},R
Tf,R
T{IndirectArgumentBufferCapabilities=b1b1b1b29},R
quadDataSharingSupported
TB,R,GisQuadDataSharingSupported
float32FilteringSupported
TB,R,GisFloat32FilteringSupported
msaa32bSupported
TB,R,GisMsaa32bSupported
RTZRoundingSupported
TB,R,GisRTZRoundingSupported
Tq,R
AnisoSampleFixSupported
TB,R,GisAnisoSampleFixSupported
FixedLinePointFillDepthGradientSupported
TB,R,GisFixedLinePointFillDepthGradientSupported
largeMRTSupported
TB,R,GisLargeMRTSupported
RGB10A2GammaSupported
TB,R,GisRGB10A2GammaSupported
CustomBorderColorSupported
TB,R,GisCustomBorderColorSupported
ClampToHalfBorderSupported
TB,R,GisClampToHalfBorderSupported
placementHeapSupported
TB,R,GisPlacementHeapSupported
T@"MTLGPUBVHBuilder",R
T@"NSDictionary",C,N
compiler
registerCommandBuffer:
deserializerSupportsSharedTextures
registerViewTexture:baseTextureView:
wrapRenderState:descriptor:
fragmentFunctionKeyWithRenderPipelineDescriptor:options:previousStateVariant:fragmentKeySize:
vertexFunctionKeyWithRenderPipelineDescriptor:options:nextStageVariant:vertexKeySize:
freeFragmentFunctionKey:fragmentKeySize:
freeVertexFunctionKey:vertexKeySize:
newFragmentVariantWithCompilerOutput:pipelineStatisticsOutput:
newVertexVariantWithCompilerOutput:pipelineStatisticsOutput:
newRenderPipelineWithDescriptor:vertexVariant:fragmentVariant:errorMessage:
pipelineFlagsWithVertexVariant:fragmentVariant:
pipelinePerformanceStatisticsWithVertexVariant:fragmentVariant:vertexCompileTimeOutput:fragmentCompileTimeOutput:
pipelinePerformanceStatisticsWithComputeVariant:compileTimeOutput:
wrapComputeState:descriptor:
newComputeVariantWithCompilerOutput:pipelineStatisticsOutput:
newComputePipelineWithDescriptor:variant:errorMessage:
newTiledTextureWithBytesNoCopy:length:deallocator:descriptor:offset:bytesPerRow:
newTiledTextureWithBytesNoCopy:length:descriptor:offset:bytesPerRow:
resourceListPool
.cxx_destruct
.cxx_construct
_mainConnection
_resourceConnection
_compilerConnection
_serializer
_processRef
_deserializerVersion
_registryID
_commandBufferQueue
_commandBuffers
_resourceListPool
_notificationMutex
_notifications
_maxThreadsPerThreadgroup
_maxThreadgroupMemoryLength
T@"NSObject<OS_xpc_object>",R
T@"MTLSerializer",R,V_serializer
T@"MTLResourceListPool",R,V_resourceListPool
TQ,R,VhalfFPConfig
TQ,R,VsingleFPConfig
TQ,R,VdoubleFPConfig
TB,N,VmetalAssertionsEnabled
TB,R,VsupportPriorityBand
TQ,R,VsharedMemorySize
TQ,R,VdedicatedMemorySize
TQ,R,V_registryID
TB,R,GisLowPower,VlowPower
TB,R,GisHeadless,Vheadless
TB,R,GisRemovable,Vremovable
TB,R,VhasUnifiedMemory
TQ,R,VrecommendedMaxWorkingSetSize
TB,R,GisDepth24Stencil8PixelFormatSupported,Vdepth24Stencil8PixelFormatSupported
TQ,R,VcurrentAllocatedSize
TB,R,GareProgrammableSamplePositionsSupported,VprogrammableSamplePositionsSupported
newArgumentEncoderWithBufferIndex:
newArgumentEncoderWithBufferIndex:reflection:
functionType
patchType
patchControlPointCount
vertexAttributes
stageInputAttributes
functionConstantsDictionary
options
T@"NSDictionary",R
functionRef
formattedDescription:
_functionRef
_functionType
TI,R
T@"NSString",C,Vlabel
T@"<MTLDevice>",R,V_device
TQ,R,V_functionType
TQ,R,VpatchType
Tq,R,VpatchControlPointCount
T@"NSArray",R,VvertexAttributes
T@"NSArray",R,VstageInputAttributes
T@"NSString",R,Vname
T@"NSDictionary",R,VfunctionConstantsDictionary
initWithCompilerOutput:
_function
T@"MTLSimFunction",R
_fenceRef
initWithCommandBuffer:renderPassDescriptor:
merge:
renderCommandEncoder
setStoreAction:
setStoreActionOptions:
separateCommits
setSeparateCommits:
sampledRenderCommandEncoderWithProgramInfoBuffer:capacity:
_encodersSize
_encodersCount
_encoders
TB,VseparateCommits
initWithResourceRef:options:device:heap:
stringByPaddingToLength:withString:startingAtIndex:
retainedLabel
numberWithUnsignedLongLong:
cpuCacheMode
resourceOptions
arrayWithObjects:count:
componentsJoinedByString:
stringWithFormat:
initWithBuffer:offset:bytesPerRow:descriptor:textureRef:
newTextureWithDescriptor:offset:bytesPerRow:
setPurgeableState:
makeAliasable
isAliasable
heap
heapOffset
allocatedSize
T@"<MTLHeap>",R
isPurgeable
isComplete
waitUntilComplete
doesAliasResource:
doesAliasAllResources:count:
doesAliasAnyResources:count:
responsibleProcess
setResponsibleProcess:
allocationID
protectionOptions
unfilteredResourceOptions
setOwnerWithIdentity:
didModifyRange:
addDebugMarker:range:
removeAllDebugMarkers
newLinearTextureWithDescriptor:offset:bytesPerRow:bytesPerImage:
iosurface
gpuAddress
resourceIndex
parentGPUAddress
setParentGPUAddress:
parentGPUSize
setParentGPUSize:
T^{__IOSurface=},R
TQ,R,N
newRemoteBufferViewForDevice:
_bufferRef
_content
_pointer
_deallocator
_length
_iosurface
_gpuAddress
T^{__IOSurface=},R,V_iosurface
TQ,R,N,V_gpuAddress
TQ,R,D
allocStorage
initWithEntrySize:device:
getStorage
returnStorage:
head
tail
storageSize
semaphore
type
initWithType:options:
getSizeInfo
setHeapOffset:
newBufferWithLength:options:offset:useOffset:
newTextureWithDescriptor:offset:useOffset:
maxAvailableSizeWithAlignment:
newBufferWithLength:options:offset:
newTextureWithDescriptor:offset:
size
usedSize
_heapRef
_purgeableState
initWithQueue:retainedReferences:
returnCommandBufferStorage:
returnBufferStorage:
commitAndWaitUntilSubmitted
bufferStorageByteCount
getBufferStorage
getCommandBufferStorage
enqueue
commit
addScheduledHandler:
presentDrawable:
presentDrawable:atTime:
waitUntilScheduled
waitUntilCompleted
blitCommandEncoder
renderCommandEncoderWithDescriptor:
computeCommandEncoderWithDescriptor:
blitCommandEncoderWithDescriptor:
computeCommandEncoderWithDispatchType:
parallelRenderCommandEncoderWithDescriptor:
resourceStateCommandEncoder
resourceStateCommandEncoderWithDescriptor:
accelerationStructureCommandEncoder
retainedReferences
errorOptions
kernelStartTime
kernelEndTime
logs
GPUStartTime
GPUEndTime
status
error
T@"<MTLCommandQueue>",R
Td,R
T@"<MTLLogContainer>",R
T@"NSError",R
encodeDashboardTagForResourceGroup:
encodeDashboardFinalizeForResourceGroup:dashboard:value:forIndex:
encodeDashboardFinalizeForResourceGroup:dashboard:values:indices:count:
addPurgedResource:
addPurgedHeap:
isProfilingEnabled
setProfilingEnabled:
profilingResults
userDictionary
debugBufferContentsWithLength:
sampledRenderCommandEncoderWithDescriptor:programInfoBuffer:capacity:
sampledComputeCommandEncoderWithProgramInfoBuffer:capacity:
sampledComputeCommandEncoderWithDispatchType:programInfoBuffer:capacity:
sampledComputeCommandEncoderWithDescriptor:programInfoBuffer:capacity:
debugCommandEncoder
commitAndHold
setProtectionOptions:
encodeWaitForEvent:value:timeout:
setResourceGroups:count:
dropResourceGroups:count:
encodeCacheHintTag:resourceGroups:count:
encodeCacheHintFinalize:resourceGroups:count:
getListIndex
globalTraceObjectID
listIndex
TQ,R,N,GgetListIndex
profilingEnabled
TB,GisProfilingEnabled
T@"NSMutableDictionary",R,N
splitHandler
T@?,C
commandBufferRef
commandHead
bufferHead
segmentCount
commandCurrentStorage
commandTail
commandPrevious
bufferCurrentStorage
currentStorageOffset
continuation
_protectionOptions
_resourceList
T@"<MTLDevice>",R,Vdevice
T@?,C,VsplitHandler
initWithDevice:maxCommandBufferCount:
initWithEntrySize:
initWithDevice:descriptor:
setErrorOptions:
commandBufferWithDescriptor:
commandBufferWithUnretainedReferences
insertDebugCaptureBoundary
getGPUPriority
setGPUPriority:
setGPUPriority:offset:
getBackgroundGPUPriority
setBackgroundGPUPriority:
setBackgroundGPUPriority:offset:
setSubmissionQueue:
setCompletionQueue:
finish
backgroundTrackingPID
setBackgroundTrackingPID:
qosLevel
commitQueue
commitSynchronously
completionQueue
disableCrossQueueHazardTracking
skipRender
setSkipRender:
executionEnabled
setExecutionEnabled:
isOpenGLQueue
getSPIStats
availableCounters
availableCountersAndDict
requestCounters:
requestCounters:withIndex:
getRequestedCounters
subdivideCounterList:
addPerfSampleHandler:
counterInfo
isStatEnabled
setStatEnabled:
getStatOptions
setStatOptions:
getStatLocations
setStatLocations:
T@"NSObject<OS_dispatch_queue>",R
StatEnabled
TB,N,GisStatEnabled
StatOptions
TQ,N,GgetStatOptions
StatLocations
TQ,N,GgetStatLocations
submitCommandBuffers:count:
commandPool
bufferPool
_commandQueueRef
TQ,R,VbufferStorageByteCount
initWithDevice:pipelineStateDescriptor:
imageblockMemoryLengthForDimensions:
functionHandleWithFunction:
newComputePipelineStateWithAdditionalBinaryFunctions:error:
staticThreadgroupMemoryLength
supportIndirectCommandBuffers
uniqueIdentifier
_pipelineRef
_uniqueIdentifier
TQ,N,VmaxTotalThreadsPerThreadgroup
TQ,N,VthreadExecutionWidth
TQ,N,VstaticThreadgroupMemoryLength
TB,N,VsupportIndirectCommandBuffers
initWithDevice:depthStencilDescriptor:
readsDepth
writesDepth
readsStencil
writesStencil
functionHandleWithFunction:stage:
newVisibleFunctionTableWithDescriptor:stage:
newIntersectionFunctionTableWithDescriptor:stage:
newRenderPipelineStateWithAdditionalBinaryFunctions:error:
threadgroupSizeMatchesTileSize
imageblockSampleLength
pipelineBinaries
newVertexShaderDebugInfo
newFragmentShaderDebugInfo
vertexFunctionHandleWithFunction:
fragmentFunctionHandleWithFunction:
tileFunctionHandleWithFunction:
newVisibleFunctionTableFromVertexStageWithDescriptor:
newVisibleFunctionTableFromFragmentStageWithDescriptor:
newVisibleFunctionTableFromTileStageWithDescriptor:
newRenderPipelineStateWithAdditionalBinaryFunctions:fragmentAdditionalBinaryFunctions:error:
newTileRenderPipelineStateWithAdditionalBinaryFunctions:error:
newVertexIntersectionFunctionTableWithDescriptor:
newFragmentIntersectionFunctionTableWithDescriptor:
newTileIntersectionFunctionTableWithDescriptor:
textureWriteRoundingMode
vertexDebugInstrumentationData
fragmentDebugInstrumentationData
tileDebugInstrumentationData
T@"MTLDebugInstrumentationData",R,&,N
getFragmentShaderTelemetryID
getVertexShaderTelemetryID
TQ,R,V_uniqueIdentifier
doesAliasResources:count:all:
_heap
_heapOffset
_resourceRef
_options
_cpuCacheMode
_storageMode
_label
_labelLock
_hazardTrackingMode
_isAliasable
Ti,VresponsibleProcess
TQ,R,VallocationID
TQ,R,VprotectionOptions
T@"NSString",C,D
T@"<MTLDevice>",R,D
TQ,R,V_cpuCacheMode
TQ,R,V_storageMode
T@"<MTLHeap>",R,D
TQ,R,VallocatedSize
TI,R,V_resourceRef
initWithDevice:samplerDescriptor:
decompress:expandedTex:srcFormat:destFormat:width:height:destRowBytes:srcRowBytes:
buffer
bufferOffset
bufferBytesPerRow
initWithTextureInternal:pixelFormat:decompressedPixelFormat:textureType:levels:slices:swizzle:compressedView:textureRef:isInternalTextureView:
swizzle
newTextureViewWithPixelFormatInternal:isInternalTextureView:
numberWithUnsignedInteger:
numberWithBool:
null
getBytes:bytesPerRow:bytesPerImage:fromRegion:mipmapLevel:slice:
initWithTexture:pixelFormat:decompressedPixelFormat:textureRef:isInternalTextureView:
initWithTexture:pixelFormat:decompressedPixelFormat:textureType:levels:slices:swizzle:textureRef:isInternalTextureView:
replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:
T@"<MTLBuffer>",R
T@"<MTLTexture>",R
getBytes:bytesPerRow:fromRegion:mipmapLevel:
replaceRegion:mipmapLevel:withBytes:bytesPerRow:
newTextureViewWithPixelFormat:
newTextureViewWithPixelFormat:textureType:levels:slices:swizzle:
rootResource
parentTexture
parentRelativeLevel
parentRelativeSlice
iosurfacePlane
sampleCount
isFramebufferOnly
firstMipmapInTail
tailSizeInBytes
isSparse
allowGPUOptimizedContents
compressionType
T@"<MTLResource>",R
framebufferOnly
TB,R,GisFramebufferOnly
T{?=CCCC},R,N
isCompressed
compressionFeedback
swizzleKey
numFaces
isDrawable
compressionFootprint
newCompressedTextureViewWithPixelFormat:textureType:level:slice:
canGenerateMipmapLevels
generateMipmapLevel:slice:
newTextureViewWithPixelFormat:resourceIndex:
newTextureViewWithPixelFormat:textureType:levels:slices:resourceIndex:
newTextureViewWithPixelFormat:textureType:levels:slices:swizzle:resourceIndex:
sparseSurfaceDefaultValue
initWithDescriptor:decompressedPixelFormat:iosurface:plane:textureRef:heap:device:shareable:
initWithTexture:device:
newRemoteTextureViewForDevice:
didModifyData
isShareable
_parentTexture
_parentRelativeLevel
_parentRelativeSlice
_buffer
_textureType
_pixelFormat
_decompressedPixelFormat
_usage
_backingBuffer
_backingBufferSize
_decompressedTextureView
_width
_height
_depth
_mipmapLevelCount
_sampleCount
_arrayLength
_numFaces
_iosurfacePlane
_bufferOffset
_bufferBytesPerRow
_allowGPUOptimizedContents
_framebufferOnly
_swizzle
_isInternalTextureView
_firstMipmapInTail
_tailSizeInBytes
_isDrawable
_shareable
shareable
TB,R,GisShareable,V_shareable
T@"<MTLResource>",R,VrootResource
T@"<MTLTexture>",R,D
TQ,R,V_parentRelativeLevel
TQ,R,VparentRelativeSlice
T@"<MTLBuffer>",R,D
TQ,R,ViosurfacePlane
TQ,R,V_usage
TB,R,GisFramebufferOnly,V_framebufferOnly
TQ,R,V_firstMipmapInTail
TQ,R,V_tailSizeInBytes
TB,R,V_allowGPUOptimizedContents
T{?=CCCC},R,D,N
TQ,R,Vrotation
TB,R,VisCompressed
Tq,R,D
TI,R,V_swizzle
TB,R,V_isDrawable
@36@0:8@16I24^{?=Ssi}28
v16@0:8
B16@0:8
Q16@0:8
Q24@0:8Q16
I16@0:8
@"MTLSimDevice"
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16Q24
v40@0:8@16Q24Q32
v48@0:8r^@16r^Q24{_NSRange=QQ}32
v40@0:8r^@16{_NSRange=QQ}24
^v24@0:8Q16
@24@0:8Q16
v24@0:8@16
v32@0:8@"<MTLBuffer>"16Q24
v40@0:8@"<MTLBuffer>"16Q24Q32
v32@0:8@"<MTLTexture>"16Q24
v32@0:8@"<MTLSamplerState>"16Q24
v32@0:8@"<MTLRenderPipelineState>"16Q24
v32@0:8@"<MTLComputePipelineState>"16Q24
v32@0:8@"<MTLIndirectCommandBuffer>"16Q24
v32@0:8@"<MTLAccelerationStructure>"16Q24
@"<MTLArgumentEncoder>"24@0:8Q16
v32@0:8@"<MTLVisibleFunctionTable>"16Q24
v32@0:8@"<MTLIntersectionFunctionTable>"16Q24
@"<MTLDevice>"16@0:8
v24@0:8@"NSString"16
@44@0:8@16I24@28^{?=SI}36
@"MTLSimIndirectArgumentBufferLayout"
@"MTLSimBuffer"
*24@0:8Q16
@"NSObject<OS_dispatch_data>"
v20@0:8I16
@"NSObject<OS_dispatch_queue>"
@36@0:8@16@24B32
@28@0:8@16B24
@24@0:8@16
v28@0:8I16@20
v128@0:8*16*24Q32{?={?=QQQ}{?=QQQ}}40Q88Q96Q104Q112@120
@112@0:8{?={?=QQQ}{?=QQQ}}16Q64Q72Q80Q88@96^Q104
v120@0:8{?={?=QQQ}{?=QQQ}}16Q64Q72r^v80Q88Q96@104@112
I40@0:8Q16@24@32
I52@0:8@16@24Q32B40@44
I60@0:8Q16Q24@32Q40B48@52
I80@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48@64@72
I84@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48{?=CCCC}64@68@76
I24@0:8@16
I32@0:8@16@24
I28@0:8I16@20
v36@0:8Q16I24@28
v40@0:8Q16I24I28@32
v32@0:8@16@24
v32@0:8Q16@24
v40@0:8Q16@24@32
v44@0:8@16Q24I32@36
v60@0:8r^@16r^Q24{_NSRange=QQ}32I48@52
I36@0:8I16Q20@28
v44@0:8Q16Q24I32@36
v52@0:8r^@16{_NSRange=QQ}24I40@44
v40@0:8Q16Q24@32
v52@0:8r^@16Q24B32@36@44
I56@0:8@16@24Q32Q40@48
I40@0:8@16Q24@32
I40@0:8r^v16Q24^@32
I32@0:8r^v16Q24
I48@0:8r^v16Q24^{?=SIQ}32^@40
r*32@0:8r*16Q24
v24@0:8Q16
@"<MTLDevice>"
@"<MTLSerializerObjectRefAllocator>"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@36@0:8I16Q20@28
v40@0:8@16Q24@?32
v40@0:8@"MTLSharedEventListener"16Q24@?<v@?@"<MTLSharedEvent>"Q>32
@"MTLSharedEventHandle"16@0:8
@28@0:8@16I24
B32@0:8Q16Q24
v136@0:8@16Q24Q32{?=QQQ}40{?=QQQ}64@88Q96Q104{?=QQQ}112
v120@0:8@16Q24Q32Q40{?=QQQ}48@72Q80Q88{?=QQQ}96
v128@0:8@16Q24Q32Q40{?=QQQ}48@72Q80Q88{?=QQQ}96Q120
v120@0:8@16Q24Q32{?=QQQ}40{?=QQQ}64@88Q96Q104Q112
v128@0:8@16Q24Q32{?=QQQ}40{?=QQQ}64@88Q96Q104Q112Q120
v44@0:8@16{_NSRange=QQ}24C40
v80@0:8@16Q24Q32@40Q48Q56Q64Q72
v56@0:8@16Q24@32Q40Q48
v108@0:8@16{?={?=QQQ}{?=QQQ}}24Q72Q80B88@92Q100
v88@0:8@16{?={?=QQQ}{?=QQQ}}24Q72Q80
v40@0:8@16{_NSRange=QQ}24
v56@0:8@16{_NSRange=QQ}24@40Q48
v36@0:8@16Q24B32
v24@0:8@"<MTLResource>"16
v40@0:8@"<MTLTexture>"16Q24Q32
v136@0:8@"<MTLTexture>"16Q24Q32{?=QQQ}40{?=QQQ}64@"<MTLTexture>"88Q96Q104{?=QQQ}112
v120@0:8@"<MTLBuffer>"16Q24Q32Q40{?=QQQ}48@"<MTLTexture>"72Q80Q88{?=QQQ}96
v128@0:8@"<MTLBuffer>"16Q24Q32Q40{?=QQQ}48@"<MTLTexture>"72Q80Q88{?=QQQ}96Q120
v120@0:8@"<MTLTexture>"16Q24Q32{?=QQQ}40{?=QQQ}64@"<MTLBuffer>"88Q96Q104Q112
v128@0:8@"<MTLTexture>"16Q24Q32{?=QQQ}40{?=QQQ}64@"<MTLBuffer>"88Q96Q104Q112Q120
v24@0:8@"<MTLTexture>"16
v44@0:8@"<MTLBuffer>"16{_NSRange=QQ}24C40
v80@0:8@"<MTLTexture>"16Q24Q32@"<MTLTexture>"40Q48Q56Q64Q72
v32@0:8@"<MTLTexture>"16@"<MTLTexture>"24
v56@0:8@"<MTLBuffer>"16Q24@"<MTLBuffer>"32Q40Q48
v24@0:8@"<MTLFence>"16
v108@0:8@"<MTLTexture>"16{?={?=QQQ}{?=QQQ}}24Q72Q80B88@"<MTLBuffer>"92Q100
v88@0:8@"<MTLTexture>"16{?={?=QQQ}{?=QQQ}}24Q72Q80
v40@0:8@"<MTLIndirectCommandBuffer>"16{_NSRange=QQ}24
v56@0:8@"<MTLIndirectCommandBuffer>"16{_NSRange=QQ}24@"<MTLIndirectCommandBuffer>"40Q48
v36@0:8@"<MTLCounterSampleBuffer>"16Q24B32
v56@0:8@"<MTLCounterSampleBuffer>"16{_NSRange=QQ}24@"<MTLBuffer>"40Q48
v144@0:8@16Q24Q32{?=QQQ}40{?=QQQ}64@88Q96Q104{?=QQQ}112Q136
v44@0:8@16{_NSRange=QQ}24I40
v104@0:8@16Q24Q32{?={?=QQQ}{?=QQQ}}40r^v88Q96
v120@0:8@16Q24Q32{?={?=QQQ}{?=QQQ}}40{?=dddd}88
v128@0:8@16Q24Q32{?={?=QQQ}{?=QQQ}}40{?=dddd}88Q120
v144@0:8@"<MTLTexture>"16Q24Q32{?=QQQ}40{?=QQQ}64@"<MTLTexture>"88Q96Q104{?=QQQ}112Q136
v44@0:8@"<MTLBuffer>"16{_NSRange=QQ}24I40
v104@0:8@"<MTLTexture>"16Q24Q32{?={?=QQQ}{?=QQQ}}40r^v88Q96
v120@0:8@"<MTLTexture>"16Q24Q32{?={?=QQQ}{?=QQQ}}40{?=dddd}88
v128@0:8@"<MTLTexture>"16Q24Q32{?={?=QQQ}{?=QQQ}}40{?=dddd}88Q120
v20@0:8B16
v28@0:8@16I24
v44@0:8@16Q24Q32I40
v64@0:8r^@16r^Q24{_NSRange=QQ}32I48^@52I60
v56@0:8r^v16Q24Q32I40^@44I52
v56@0:8r^@16{_NSRange=QQ}24I40^@44I52
v72@0:8r^@16r^f24r^f32{_NSRange=QQ}40I56^@60I68
v32@0:8r^@16Q24
v40@0:8r^@16Q24Q32
v24@0:8C16B20
^v28@0:8Q16I24
@"<MTLSerializerCommandStream>"
v40@0:8r^v16Q24Q32
v32@0:8Q16Q24
v40@0:8@16f24f28Q32
v56@0:8r^@16r^f24r^f32{_NSRange=QQ}40
v64@0:8{?={?=QQQ}{?=QQQ}}16
v64@0:8{?=QQQ}16{?=QQQ}40
v56@0:8@16Q24{?=QQQ}32
v40@0:8@16@24Q32
v24@0:8@"<MTLComputePipelineState>"16
v40@0:8@"<MTLSamplerState>"16f24f28Q32
v56@0:8@"<MTLBuffer>"16Q24{?=QQQ}32
v32@0:8@"<MTLResource>"16Q24
v24@0:8@"<MTLHeap>"16
v40@0:8@"<MTLIndirectCommandBuffer>"16@"<MTLBuffer>"24Q32
B44@0:8@16Q24Q32I40
@"NSData"16@0:8
v32@0:8@"<MTLResourceGroupSPI>"16Q24
B44@0:8@"<MTLBuffer>"16Q24Q32I40
v44@0:8@"<MTLBuffer>"16Q24Q32I40
@32@0:8@16Q24
[31@"<MTLSerializerBuffer>"]
[128@"<MTLSerializerTexture>"]
[16@"<MTLSerializerSamplerState>"]
@"<MTLSerializerComputePipelineState>"
v64@0:8{?=dddddd}16
v32@0:8r^{?=dddddd}16Q24
v32@0:8Q16r^{?=II}24
v28@0:8f16f20f24
v48@0:8{?=QQQQ}16
v32@0:8r^{?=QQQQ}16Q24
v32@0:8f16f20f24f28
v24@0:8I16I20
v48@0:8Q16Q24Q32Q40
v40@0:8Q16Q24Q32
v64@0:8Q16Q24Q32@40Q48Q56
v56@0:8Q16Q24Q32@40Q48
v56@0:8Q16Q24Q32Q40Q48
v80@0:8Q16Q24Q32@40Q48Q56q64Q72
v40@0:8Q16@24Q32
v64@0:8Q16Q24@32Q40@48Q56
v20@0:8f16
v72@0:8Q16Q24Q32@40Q48Q56Q64
v56@0:8Q16@24Q32@40Q48
v88@0:8Q16Q24Q32@40Q48@56Q64Q72Q80
v72@0:8Q16@24Q32@40Q48@56Q64
v40@0:8{?=QQQ}16
v48@0:8r^@16Q24Q32Q40
v24@0:8@"<MTLRenderPipelineState>"16
v24@0:8@"<MTLDepthStencilState>"16
v64@0:8Q16Q24Q32@"<MTLBuffer>"40Q48Q56
v56@0:8Q16Q24Q32@"<MTLBuffer>"40Q48
v80@0:8Q16Q24Q32@"<MTLBuffer>"40Q48Q56q64Q72
v40@0:8Q16@"<MTLBuffer>"24Q32
v64@0:8Q16Q24@"<MTLBuffer>"32Q40@"<MTLBuffer>"48Q56
v32@0:8@"<MTLFence>"16Q24
v72@0:8Q16Q24Q32@"<MTLBuffer>"40Q48Q56Q64
v56@0:8Q16@"<MTLBuffer>"24Q32@"<MTLBuffer>"40Q48
v88@0:8Q16Q24Q32@"<MTLBuffer>"40Q48@"<MTLBuffer>"56Q64Q72Q80
v72@0:8Q16@"<MTLBuffer>"24Q32@"<MTLBuffer>"40Q48@"<MTLBuffer>"56Q64
v40@0:8@"<MTLResource>"16Q24Q32
v32@0:8@"<MTLHeap>"16Q24
v24@0:8@?16
v48@0:8@16Q24@32Q40
v40@0:8f16f20f24f28Q32
v44@0:8@16f24f28f32Q36
v28@0:8B16Q20
v56@0:8@16Q24Q32Q40Q48
v60@0:8@16Q24Q32Q40B48Q52
v48@0:8@16Q24Q32Q40
v52@0:8@16Q24Q32Q40B48
v88@0:8{?=QQQ}16{?={?=QQQ}{?=QQQ}}40
v24@0:8@?<v@?@"<MTLRenderCommandEncoderSPI>"Q>16
v48@0:8@"<MTLTexture>"16Q24@"<MTLSamplerState>"32Q40
v44@0:8@"<MTLSamplerState>"16f24f28f32Q36
v56@0:8@"<MTLTexture>"16Q24Q32Q40Q48
v60@0:8@"<MTLTexture>"16Q24Q32Q40B48Q52
v48@0:8@"<MTLTexture>"16Q24Q32Q40
v52@0:8@"<MTLTexture>"16Q24Q32Q40B48
v40@0:8@"<MTLResourceGroupSPI>"16Q24Q32
@32@0:8@16@24
@"NSMutableArray"
@"MTLRenderPassDescriptor"
@"<MTLSerializerRenderPipelineState>"
@"<MTLSerializerDepthStencilState>"
@"<MTLSerializerBuffer>"
{?=QQ}24@0:8@16
{?=QQ}32@0:8Q16Q24
@32@0:8Q16Q24
@40@0:8r^v16Q24Q32
@48@0:8^v16Q24Q32@?40
@40@0:8@16^{__IOSurface=}24Q32
@32@0:8@16^@24
@40@0:8@16@24^@32
v40@0:8@16@24@?32
v32@0:8@16@?24
@48@0:8@16Q24^@32^@40
B24@0:8Q16
B24@0:8q16
v32@0:8^{?=ff}16Q24
@40@0:8@16Q24Q32
{?=QQQ}40@0:8Q16Q24Q32
v32@0:8^Q16^Q24
{?=QQQ}24@0:8@16
{?=QQQ}16@0:8
v72@0:8r^{?={?=QQQ}{?=QQQ}}16^{?={?=QQQ}{?=QQQ}}24{?=QQQ}32Q56Q64
v64@0:8r^{?={?=QQQ}{?=QQQ}}16^{?={?=QQQ}{?=QQQ}}24{?=QQQ}32Q56
@"<MTLCommandQueue>"16@0:8
@"<MTLCommandQueue>"24@0:8Q16
{?=QQ}24@0:8@"MTLTextureDescriptor"16
@"<MTLHeap>"24@0:8@"MTLHeapDescriptor"16
@"<MTLBuffer>"32@0:8Q16Q24
@"<MTLBuffer>"40@0:8r^v16Q24Q32
@"<MTLBuffer>"48@0:8^v16Q24Q32@?<v@?^vQ>40
@"<MTLDepthStencilState>"24@0:8@"MTLDepthStencilDescriptor"16
@"<MTLTexture>"24@0:8@"MTLTextureDescriptor"16
@"<MTLTexture>"40@0:8@"MTLTextureDescriptor"16^{__IOSurface=}24Q32
@"<MTLSamplerState>"24@0:8@"MTLSamplerDescriptor"16
@"<MTLLibrary>"16@0:8
@"<MTLLibrary>"32@0:8@"NSBundle"16^@24
@"<MTLLibrary>"32@0:8@"NSString"16^@24
@"<MTLLibrary>"32@0:8@"NSURL"16^@24
@"<MTLLibrary>"32@0:8@"NSObject<OS_dispatch_data>"16^@24
@"<MTLLibrary>"40@0:8@"NSString"16@"MTLCompileOptions"24^@32
v40@0:8@"NSString"16@"MTLCompileOptions"24@?<v@?@"<MTLLibrary>"@"NSError">32
@"<MTLLibrary>"32@0:8@"MTLStitchedLibraryDescriptor"16^@24
v32@0:8@"MTLStitchedLibraryDescriptor"16@?<v@?@"<MTLLibrary>"@"NSError">24
@"<MTLRenderPipelineState>"32@0:8@"MTLRenderPipelineDescriptor"16^@24
@"<MTLRenderPipelineState>"48@0:8@"MTLRenderPipelineDescriptor"16Q24^@32^@40
v32@0:8@"MTLRenderPipelineDescriptor"16@?<v@?@"<MTLRenderPipelineState>"@"NSError">24
v40@0:8@"MTLRenderPipelineDescriptor"16Q24@?<v@?@"<MTLRenderPipelineState>"@"MTLRenderPipelineReflection"@"NSError">32
@"<MTLComputePipelineState>"32@0:8@"<MTLFunction>"16^@24
@"<MTLComputePipelineState>"48@0:8@"<MTLFunction>"16Q24^@32^@40
v32@0:8@"<MTLFunction>"16@?<v@?@"<MTLComputePipelineState>"@"NSError">24
v40@0:8@"<MTLFunction>"16Q24@?<v@?@"<MTLComputePipelineState>"@"MTLComputePipelineReflection"@"NSError">32
@"<MTLComputePipelineState>"48@0:8@"MTLComputePipelineDescriptor"16Q24^@32^@40
v40@0:8@"MTLComputePipelineDescriptor"16Q24@?<v@?@"<MTLComputePipelineState>"@"MTLComputePipelineReflection"@"NSError">32
@"<MTLFence>"16@0:8
@"<MTLRenderPipelineState>"48@0:8@"MTLTileRenderPipelineDescriptor"16Q24^@32^@40
v40@0:8@"MTLTileRenderPipelineDescriptor"16Q24@?<v@?@"<MTLRenderPipelineState>"@"MTLRenderPipelineReflection"@"NSError">32
@"<MTLArgumentEncoder>"24@0:8@"NSArray"16
@"<MTLRasterizationRateMap>"24@0:8@"MTLRasterizationRateMapDescriptor"16
@"<MTLIndirectCommandBuffer>"40@0:8@"MTLIndirectCommandBufferDescriptor"16Q24Q32
@"<MTLEvent>"16@0:8
@"<MTLSharedEvent>"16@0:8
@"<MTLSharedEvent>"24@0:8@"MTLSharedEventHandle"16
@"<MTLCounterSampleBuffer>"32@0:8@"MTLCounterSampleBufferDescriptor"16^@24
@"<MTLDynamicLibrary>"32@0:8@"<MTLLibrary>"16^@24
@"<MTLDynamicLibrary>"32@0:8@"NSURL"16^@24
@"<MTLBinaryArchive>"32@0:8@"MTLBinaryArchiveDescriptor"16^@24
{?=QQQ}24@0:8@"MTLAccelerationStructureDescriptor"16
@"<MTLAccelerationStructure>"24@0:8Q16
@"<MTLAccelerationStructure>"24@0:8@"MTLAccelerationStructureDescriptor"16
@"NSArray"16@0:8
@24@0:8^{__IOSurface=}16
{?=II}16@0:8
@20@0:8I16
B44@0:8^@16Q24^Q32i40
B24@0:8{?=II}16
@40@0:8@16Q24^@32
@48@0:8@16@24Q32^@40
B36@0:8@16B24^@28
B32@0:8@16^@24
@40@0:8Q16@24^@32
r^{MTLTargetDeviceArch=QI*}16@0:8
r^{?=IIIIIIIIIIIIIIIIIIIIIIIIIIffIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIQ}16@0:8
f16@0:8
{IndirectArgumentBufferCapabilities=b1b1b1b29}16@0:8
q16@0:8
v24@0:8^{MPSFunctionTable=}16
v40@0:8Q16^Q24Q32
B32@0:8{_NSRange=QQ}16
@40@0:8Q16Q24Q32
@48@0:8r^v16Q24Q32Q40
@56@0:8^v16Q24Q32Q40@?48
B40@0:8^{?=III}16Q24Q32
@32@0:8^v16Q24
@40@0:8^v16@24Q32
^v16@0:8
^{os_unfair_lock_s=I}16@0:8
@40@0:8@16r^{?=BQ^{?}}24^@32
@48@0:8^v16Q24@32@?40
{?=QQQ}48@0:8Q16Q24Q32Q40
v48@0:8@16@24@32^@40
v40@0:8@16@24^@32
@32@0:8r^@16Q24
v24@0:8@"<MTLDeviceSPI>"16
@"<MTLBuffer>"24@0:8^{__IOSurface=}16
B24@0:8@"NSString"16
@"<MTLCommandQueue>"24@0:8@"MTLCommandQueueDescriptor"16
@"_MTLIndirectArgumentBufferLayout"24@0:8@"MTLStructType"16
@"<MTLArgumentEncoder>"24@0:8@"_MTLIndirectArgumentBufferLayout"16
@"<MTLBuffer>"40@0:8@"MTLIndirectCommandBufferDescriptor"16Q24Q32
@"<MTLIndirectRenderCommandEncoder>"24@0:8@"<MTLBuffer>"16
@"<MTLIndirectComputeCommandEncoder>"24@0:8@"<MTLBuffer>"16
@"<MTLSharedEvent>"20@0:8I16
@"<MTLAccelerationStructure>"32@0:8Q16Q24
@"<MTLAccelerationStructure>"32@0:8@"<MTLBuffer>"16Q24
@"<MTLDynamicLibrary>"40@0:8@"<MTLLibrary>"16@"MTLComputePipelineDescriptor"24^@32
@"<MTLDynamicLibrary>"40@0:8@"NSURL"16Q24^@32
@"NSArray"32@0:8@"MTLComputePipelineDescriptor"16^@24
@"NSArray"40@0:8@"MTLComputePipelineDescriptor"16Q24^@32
@"NSArray"40@0:8@"MTLFunction"16@"NSArray"24^@32
@"NSArray"48@0:8@"MTLFunction"16@"NSArray"24Q32^@40
B36@0:8@"<MTLLibrary>"16B24^@28
B32@0:8@"NSURL"16^@24
@"<MTLBinaryArchive>"40@0:8Q16@"NSURL"24^@32
@"<MTLVisibleFunctionTable>"24@0:8@"MTLVisibleFunctionTableDescriptor"16
@"<MTLIntersectionFunctionTable>"24@0:8@"MTLIntersectionFunctionTableDescriptor"16
@"MTLTargetDeviceArchitecture"16@0:8
@"MTLGPUBVHBuilder"16@0:8
@"NSDictionary"16@0:8
v24@0:8@"NSDictionary"16
@"NSObject<OS_dispatch_data>"16@0:8
v24@0:8@"NSObject<OS_dispatch_data>"16
@"<MTLBuffer>"40@0:8Q16Q24Q32
@"<MTLBuffer>"48@0:8r^v16Q24Q32Q40
@"<MTLBuffer>"56@0:8^v16Q24Q32Q40@?<v@?^vQ>48
@"<MTLBuffer>"24@0:8@"MTLBufferDescriptor"16
@"<MTLLateEvalEvent>"16@0:8
@"<MTLComputePipelineState>"32@0:8@"MTLComputePipelineDescriptor"16^@24
v32@0:8@"MTLComputePipelineDescriptor"16@?<v@?@"<MTLComputePipelineState>"@"NSError">24
@"<MTLRenderPipelineState>"32@0:8@"MTLTileRenderPipelineDescriptor"16^@24
v32@0:8@"MTLTileRenderPipelineDescriptor"16@?<v@?@"<MTLRenderPipelineState>"@"NSError">24
@"<MTLFunction>"32@0:8^v16Q24
@"<MTLFunction>"40@0:8^v16@"NSObject<OS_dispatch_data>"24Q32
v24@0:8@"MTLGPUBVHBuilder"16
@"<MTLIndirectArgumentEncoder>"24@0:8@"NSArray"16
@"<MTLComputePipelineState>"40@0:8@"NSArray"16r^{?=BQ^{?}}24^@32
@"<MTLLibrary>"40@0:8@"NSString"16@"NSArray"24^@32
@"<MTLLibrary>"40@0:8@"NSArray"16@"NSArray"24^@32
@"<MTLLibrary>"32@0:8@"MTLStitchedLibraryDescriptorSPI"16^@24
@"NSString"24@0:8@"NSArray"16
@"<MTLLibrary>"40@0:8@"NSArray"16r^{?=BQ^{?}}24^@32
@"<MTLPipelineLibrarySPI>"32@0:8@"NSString"16^@24
@"NSObject<OS_dispatch_data>"24@0:8@"MTLRenderPipelineDescriptor"16
@"NSObject<OS_dispatch_data>"24@0:8@"MTLComputePipelineDescriptor"16
@"MTLRenderPipelineDescriptor"32@0:8@"NSObject<OS_dispatch_data>"16@"<MTLDeserializationContext>"24
@"MTLComputePipelineDescriptor"32@0:8@"NSObject<OS_dispatch_data>"16@"<MTLDeserializationContext>"24
@"NSObject<OS_dispatch_data>"24@0:8@"MTLStructType"16
@"NSObject<OS_dispatch_data>"28@0:8@"MTLStructType"16I24
@"<MTLTexture>"48@0:8^v16Q24@"MTLTextureDescriptor"32@?<v@?^vQ>40
@"<MTLTextureLayout>"28@0:8@"MTLTextureDescriptor"16B24
@"<MTLIndirectArgumentEncoder>"24@0:8@"_MTLIndirectArgumentBufferLayout"16
v48@0:8@"<MTLFunction>"16@"MTLFunctionDescriptor"24@"<MTLBinaryArchive>"32^@40
v40@0:8@"<MTLFunction>"16@"MTLFunctionDescriptor"24^@32
v40@0:8@"<MTLFunction>"16@"MTLFunctionDescriptor"24@?<v@?@"NSError">32
@"<MTLResourceGroupSPI>"32@0:8r^@16Q24
v32@0:8@"NSObject<OS_dispatch_data>"16@"NSMutableDictionary"24
@52@0:8Q16Q24^v32B40@?44
v52@0:8I16@20@28Q36@?44
^v48@0:8@16Q24@32^Q40
v32@0:8^v16Q24
@48@0:8@16@24@32^@40
{?=b1b1b1b1b1b1b1b1b1b55}32@0:8@16@24
@48@0:8@16@24@32@40
@64@0:8^v16Q24@?32@40Q48Q56
@56@0:8^v16Q24@32Q40Q48
{MTLSimConnection="_connection"@"NSObject<OS_xpc_object>""_serialQueue"@"NSObject<OS_dispatch_queue>"}
@"MTLSerializer"
{unordered_map<unsigned int, MTLSimCommandBuffer *, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<const unsigned int, MTLSimCommandBuffer *>>>="__table_"{__hash_table<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>, std::allocator<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>>="__value_"f}}}
@"MTLResourceListPool"
@"<MTLDeviceSPI>"
{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}
{?="width"Q"height"Q"depth"Q}
@32@0:8Q16^@24
@"<MTLArgumentEncoder>"32@0:8Q16^@24
@36@0:8@16Q24I32
@"NSString"
@"NSArray"
@"NSDictionary"
@"MTLSimFunction"
@"<MTLRenderCommandEncoder>"16@0:8
@32@0:8^(?={?=b8b24IQQ}{?=b8b24IQQ})16Q24
@"<MTLRenderCommandEncoder>"32@0:8^(?={?=b8b24IQQ}{?=b8b24IQQ})16Q24
@"<MTLHeap>"16@0:8
B32@0:8r^@16Q24
i16@0:8
v20@0:8i16
i20@0:8I16
B24@0:8@"<MTLResource>"16
v32@0:8{_NSRange=QQ}16
@"<MTLTexture>"40@0:8@"MTLTextureDescriptor"16Q24Q32
v40@0:8@"NSString"16{_NSRange=QQ}24
@48@0:8@16Q24Q32Q40
^{__IOSurface=}16@0:8
@"<MTLTexture>"48@0:8@"MTLTextureDescriptor"16Q24Q32Q40
@76@0:8@16I24^v28^v36Q44Q52@60@?68
^{__IOSurface=}
@32@0:8Q16@24
^{BufferStorageEntry=@Q^{BufferStorageEntry}}16@0:8
v24@0:8^{BufferStorageEntry=@Q^{BufferStorageEntry}}16
^{BufferStorageEntry=@Q^{BufferStorageEntry}}
@"NSObject<OS_dispatch_semaphore>"
@"<MTLTexture>"32@0:8@"MTLTextureDescriptor"16Q24
@36@0:8@16@24I32
@44@0:8Q16Q24Q32B40
@36@0:8@16Q24B32
v32@0:8@16d24
d16@0:8
v24@0:8@?<v@?@"<MTLCommandBuffer>">16
v24@0:8@"<MTLDrawable>"16
v32@0:8@"<MTLDrawable>"16d24
@"<MTLBlitCommandEncoder>"16@0:8
@"<MTLRenderCommandEncoder>"24@0:8@"MTLRenderPassDescriptor"16
@"<MTLComputeCommandEncoder>"24@0:8@"MTLComputePassDescriptor"16
@"<MTLBlitCommandEncoder>"24@0:8@"MTLBlitPassDescriptor"16
@"<MTLComputeCommandEncoder>"16@0:8
@"<MTLComputeCommandEncoder>"24@0:8Q16
v32@0:8@"<MTLEvent>"16Q24
@"<MTLParallelRenderCommandEncoder>"24@0:8@"MTLRenderPassDescriptor"16
@"<MTLResourceStateCommandEncoder>"16@0:8
@"<MTLResourceStateCommandEncoder>"24@0:8@"MTLResourceStatePassDescriptor"16
@"<MTLAccelerationStructureCommandEncoder>"16@0:8
@"<MTLLogContainer>"16@0:8
@"NSError"16@0:8
v56@0:8@16Q24r^Q32r^Q40Q48
^v24@0:8^Q16
@40@0:8@16^(?={?=b8b24IQQ}{?=b8b24IQQ})24Q32
@40@0:8Q16^(?={?=b8b24IQQ}{?=b8b24IQQ})24Q32
v36@0:8@16Q24I32
v40@0:8Q16r^@24Q32
v24@0:8@"<MTLResourceGroupSPI>"16
v48@0:8@"<MTLResourceGroupSPI>"16Q24Q32Q40
v56@0:8@"<MTLResourceGroupSPI>"16Q24r^Q32r^Q40Q48
@"NSMutableDictionary"16@0:8
@"<MTLRenderCommandEncoder>"40@0:8@"MTLRenderPassDescriptor"16^(?={?=b8b24IQQ}{?=b8b24IQQ})24Q32
@"<MTLComputeCommandEncoder>"32@0:8^(?={?=b8b24IQQ}{?=b8b24IQQ})16Q24
@"<MTLComputeCommandEncoder>"40@0:8Q16^(?={?=b8b24IQQ}{?=b8b24IQQ})24Q32
@"<MTLComputeCommandEncoder>"40@0:8@"MTLComputePassDescriptor"16^(?={?=b8b24IQQ}{?=b8b24IQQ})24Q32
@"<MTLDebugCommandEncoder>"16@0:8
v36@0:8@"<MTLEvent>"16Q24I32
B28@0:8@16B24
^v48@0:8Q16Q24^@32^Q40
@?16@0:8
B28@0:8@"<MTLSerializerResource>"16B24
B24@0:8@"<MTLSerializerState>"16
@?<v@?>16@0:8
v24@0:8@?<v@?>16
v24@0:8@"<MTLSerializerCommandStream>"16
^{StorageEntry=Q^v@^{StorageEntry}}
@"MTLResourceList"
@"<MTLCommandBuffer>"16@0:8
@"<MTLCommandBuffer>"24@0:8@"MTLCommandBufferDescriptor"16
B28@0:8Q16S24
i24@0:8@16
i32@0:8@16Q24
v24@0:8@"NSObject<OS_dispatch_queue>"16
@"NSObject<OS_dispatch_queue>"16@0:8
@"MTLCommandQueueSPIStats"16@0:8
i24@0:8@"NSArray"16
i32@0:8@"NSArray"16Q24
@"NSArray"24@0:8@"NSArray"16
v24@0:8@?<v@?@"<MTLCommandBuffer>"@"NSData"Q>16
@36@0:8@16I24@28
^{StorageEntry=Q^v@^{StorageEntry}}16@0:8
v24@0:8^{StorageEntry=Q^v@^{StorageEntry}}16
@"MTLSimCommandStoragePool"
@"MTLSimBufferStoragePool"
Q40@0:8{?=QQQ}16
@"<MTLFunctionHandle>"24@0:8@"<MTLFunction>"16
@"<MTLComputePipelineState>"32@0:8@"NSArray"16^@24
v40@0:8I16^I20I28^I32
@"<MTLFunctionHandle>"32@0:8@"<MTLFunction>"16Q24
@"<MTLVisibleFunctionTable>"32@0:8@"MTLVisibleFunctionTableDescriptor"16Q24
@"<MTLIntersectionFunctionTable>"32@0:8@"MTLIntersectionFunctionTableDescriptor"16Q24
@"<MTLRenderPipelineState>"32@0:8@"MTLRenderPipelineFunctionsDescriptor"16^@24
@"<MTLRenderPipelineState>"40@0:8@"NSArray"16@"NSArray"24^@32
@"<MTLRenderPipelineState>"32@0:8@"NSArray"16^@24
@"MTLDebugInstrumentationData"16@0:8
v64@0:8I16^I20I28^I32I40^I44I52^I56
@44@0:8I16Q20@28@36
B36@0:8r^@16Q24B32
@"MTLSimHeap"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
v80@0:8r*16*24Q32Q40Q48Q56Q64Q72
Q80@0:8{?={?=QQQ}{?=QQQ}}16Q64Q72
@"<MTLBuffer>"16@0:8
@"<MTLTexture>"16@0:8
v104@0:8^v16Q24Q32{?={?=QQQ}{?=QQQ}}40Q88Q96
v104@0:8{?={?=QQQ}{?=QQQ}}16Q64Q72r^v80Q88Q96
v88@0:8^v16Q24{?={?=QQQ}{?=QQQ}}32Q80
v88@0:8{?={?=QQQ}{?=QQQ}}16Q64r^v72Q80
@64@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48
@68@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48{?=CCCC}64
{?=CCCC}16@0:8
@"<MTLTexture>"24@0:8Q16
@"<MTLTexture>"64@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48
@"<MTLTexture>"68@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48{?=CCCC}64
@"<MTLResource>"16@0:8
@48@0:8Q16Q24Q32Q40
@72@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48Q64
@76@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48{?=CCCC}64Q68
@"<MTLTexture>"48@0:8Q16Q24Q32Q40
@"<MTLTexture>"32@0:8Q16Q24
@"<MTLTexture>"72@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48Q64
@"<MTLTexture>"76@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48{?=CCCC}64Q68
@"NSString"24@0:8Q16
@96@0:8@16Q24Q32Q40{_NSRange=QQ}48{_NSRange=QQ}64{?=CCCC}80B84I88B92
@92@0:8@16Q24Q32Q40{_NSRange=QQ}48{_NSRange=QQ}64{?=CCCC}80I84B88
@48@0:8@16Q24Q32I40B44
@52@0:8@16Q24Q32@40I48
@68@0:8@16Q24^{__IOSurface=}32Q40I48@52@60
@72@0:8@16Q24^{__IOSurface=}32Q40I48@52@60B68
@28@0:8Q16B24
@"MTLSimTexture"
@"<MTLTexture>"
@"<MTLResource>"
?0`@
"%(+.1
47:=@
CFILORUX[
_behk
nqtwz}
FMYaiq
v16@?0@"<MTLSerializerAllocator>"8
v24@?0r^v8Q16
messageType
command
replyData
v8@?0
ObjectRef generation queue
index creation queue
UseSimulatorSharedTextures
com.apple.Metal
-[MTLSerializer newSharedTextureWithDescriptor:allocator:]
Shared texture feature not available in simulator
-[MTLSerializer newSharedTextureWithHandle:]
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
This object may only be decoded by an NSXPCCoder.
label
This object may only be encoded by an NSXPCCoder.
eventRef
error
eventPort
labelTraceID
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.MTLSimDriver
-[MTLSerializerBlitCommandEncoder copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:]_block_invoke
Unable to load Simulator decoder Metal library: %@
pvrtc2
pvrtc4
DecodeEAC_R11Unorm
DecodeEAC_R11Snorm
DecodeEAC_RG11Unorm
DecodeEAC_RG11Snorm
DecodeEAC_RGBA8
DecodeETC2_RGB8
DecodeETC2_RGB8A1
DecodeBGRA_XR10
DecodeBGR_XR10
astc
Error creating kernel '%@': %@
Error creating pipeline state %@ from %@
v16@?0@"<MTLCommandBuffer>"8
-[MTLSerializerBlitCommandEncoder getTextureAccessCounters:region:mipLevel:slice:resetCounters:countersBuffer:countersBufferOffset:]
Not supported
-[MTLSerializerBlitCommandEncoder resetTextureAccessCounters:region:mipLevel:slice:]
-[MTLSerializerComputeCommandEncoder executeCommandsInBuffer:indirectBuffer:indirectBufferOffset:]
-[MTLSerializerComputeCommandEncoder executeCommandsInBuffer:withRange:]
-[MTLSerializerComputeCommandEncoder setAccelerationStructure:atBufferIndex:]
Not implemented
-[MTLSerializerComputeCommandEncoder setVisibleFunctionTable:atBufferIndex:]
-[MTLSerializerComputeCommandEncoder setVisibleFunctionTables:withBufferRange:]
-[MTLSerializerComputeCommandEncoder setIntersectionFunctionTable:atBufferIndex:]
-[MTLSerializerComputeCommandEncoder setIntersectionFunctionTables:withBufferRange:]
-[MTLSerializerRenderCommandEncoder setPrimitiveRestartEnabled:]
setPrimitiveRestartEnabled is not supported in the simulator
-[MTLSerializerRenderCommandEncoder setVertexVisibleFunctionTable:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setVertexVisibleFunctionTables:withBufferRange:]
-[MTLSerializerRenderCommandEncoder setFragmentVisibleFunctionTable:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setFragmentVisibleFunctionTables:withBufferRange:]
-[MTLSerializerRenderCommandEncoder setTileVisibleFunctionTable:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setTileVisibleFunctionTables:withBufferRange:]
-[MTLSerializerRenderCommandEncoder setVertexIntersectionFunctionTable:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setVertexIntersectionFunctionTables:withBufferRange:]
-[MTLSerializerRenderCommandEncoder setFragmentIntersectionFunctionTable:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setFragmentIntersectionFunctionTables:withBufferRange:]
-[MTLSerializerRenderCommandEncoder setTileIntersectionFunctionTable:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setTileIntersectionFunctionTables:withBufferRange:]
-[MTLSerializerRenderCommandEncoder setVertexAccelerationStructure:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setFragmentAccelerationStructure:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setTileAccelerationStructure:atBufferIndex:]
com.apple.metal.simulator
status
commandBufferRef
startTime
endTime
notificationRef
command buffers
Nov  6 2021
01:29:08
simulatorDummyPlugin
-[MTLSimDevice sparseTileSizeWithTextureType:pixelFormat:sampleCount:]
not supported in the simulator
v24@?0^v8Q16
length
options
bufferIndex
sharedMem
bufferRef
-[MTLSimDevice newHeapWithDescriptor:]
MTLStorageModePrivate is required for heaps
-[MTLSimDevice newIndirectCommandBufferWithDescriptor:maxCommandCount:options:]
-[MTLSimDevice newTextureWithDescriptor:]
texture rotation is not supported in the simulator
-[MTLSimDevice newTextureWithDescriptor:iosurface:plane:]
iosurface
-[MTLSimDevice wrapRenderState:descriptor:]
functionIR
-[MTLSimDevice wrapComputeState:descriptor:]
-[MTLSimDevice newIndirectCommandBufferWithDescriptor:maxCount:options:]
-[MTLSimDevice newIndirectComputeCommandEncoderWithBuffer:]
-[MTLSimDevice newIndirectRenderCommandEncoderWithBuffer:]
-[MTLSimDevice newTiledTextureWithBytesNoCopy:length:deallocator:descriptor:offset:bytesPerRow:]
-[MTLSimDevice newTiledTextureWithBytesNoCopy:length:descriptor:offset:bytesPerRow:]
simulator
Apple
-[MTLSimDevice newCommandQueueWithDescriptor:]
Descriptor cannot be nil
maxCommandBufferCount
commandQueueRef
-[MTLSimDevice newBufferWithIOSurface:]
-[MTLSimDevice minimumLinearTextureAlignmentForPixelFormat:]
%s is not supported on this device.
Linear textures do not support compressed pixel formats
Linear textures do not support depth/stencil pixel formats
-[MTLSimDevice minimumTextureBufferAlignmentForPixelFormat:]
-[MTLSimDevice newRenderPipelineStateWithTileDescriptor:options:completionHandler:]
-[MTLSimDevice newRenderPipelineStateWithTileDescriptor:options:reflection:error:]
EnableSimApple5
fatalError
XPCReplyCheck
connection Queue
connectionType
processRef
version
registryID
UNKNOWN XPC_TYPE_ERROR
XPC_ERROR_TERMINATION_IMMINENT
XPC_ERROR_CONNECTION_INVALID
XPC_ERROR_CONNECTION_INTERRUPTED
function variant
-[MTLSimBuffer initWithDevice:bufferRef:content:pointer:length:options:heap:deallocator:]
storageModePrivate incompatible with ...WithBytes variant of newBuffer
Invalid cacheMode %u
Invalid storageMode %u
%@%@
label =
<none>
length =
cpuCacheMode =
storageMode =
hazardTrackingMode =
resourceOptions =
purgeableState =
-[MTLSimBuffer newTextureWithDescriptor:offset:bytesPerRow:]
Linear texture can only be created on buffers with MTLStorageModePrivate in the simulator
Linear textures from XR10 is not supported in the simulator
-[MTLSimCommandBuffer resourceStateCommandEncoderWithDescriptor:]
-[MTLSimCommandBuffer resourceStateCommandEncoder]
-[MTLSimCommandBuffer setProtectionOptions:]
setProtectionOptions: with uncommitted encoder
commandQueue
segments
-[MTLSimTexture initWithTextureInternal:pixelFormat:decompressedPixelFormat:textureType:levels:slices:swizzle:compressedView:textureRef:isInternalTextureView:]
Device does not support texture swizzle.
Pixel format views involving XR10 are not supported in the simulator
-[MTLSimTexture initWithDescriptor:decompressedPixelFormat:iosurface:plane:textureRef:heap:device:]
IOSurface backed XR10 textures are not supported in the simulator
-[MTLSimTexture initWithDescriptor:decompressedPixelFormat:iosurface:plane:textureRef:heap:device:shareable:]
textureType =
pixelFormat =
decompressedPixelFormat =
width =
height =
depth =
arrayLength =
mipmapLevelCount =
sampleCount =
usage =
shareable =
framebufferOnly =
swizzle =
parentTexture =
<null>
parentRelativeLevel =
parentRelativeSlice =
buffer =
bufferOffset =
bufferBytesPerRow =
allowGPUOptimizedContents =
-[MTLSimTexture newTextureViewWithPixelFormat:textureType:levels:slices:swizzle:]
event notification reference not found
Compiler failed to build request
Compiler failed with XPC_ERROR_CONNECTION_INTERRUPTED
Compiler failed with XPC_ERROR_CONNECTION_INVALID
Compiler failed with XPC_ERROR_TERMINATION_IMMINENT
Compiler failed with unknown XPC error
Decompression failure: unable to allocate decoder from at_encoder_create()
Decompression failure: error %ld returned from at_encoder_decompress_texels()
MTLSimIndirectArgumentBufferLayout
MTLSimArgumentEncoder
MTLArgumentEncoder
NSObject
MTLSimOperation
MTLSerializerAllocator
DefaultObjectRefAllocator
MTLSerializerObjectRefAllocator
MTLSerializer
MTLSimSharedEventHandle
NSSecureCoding
NSCoding
MTLSimSharedEvent
MTLSimEvent
MTLEvent
MTLSerializerEvent
MTLSerializerState
MTLSharedEvent
MTLSerializerBlitCommandEncoder
MTLBlitCommandEncoderSPI
MTLBlitCommandEncoder
MTLCommandEncoder
MTLSerializerCommandEncoder
MTLSerializerComputeCommandEncoder
MTLComputeCommandEncoderSPI
MTLComputeCommandEncoder
MTLSerializerRenderCommandEncoder
MTLRenderCommandEncoderSPI
MTLRenderCommandEncoder
MTLSimDevice
MTLDeviceSPI
MTLDevice
MTLSimFunction
MTLFunction
MTLSimFunctionVariant
MTLSimFence
MTLFence
MTLSerializerFence
MTLSerializerParallelRenderCommandEncoder
MTLParallelRenderCommandEncoderSPI
MTLParallelRenderCommandEncoder
MTLSimBuffer
MTLSerializerBuffer
MTLSerializerResource
MTLBufferSPI
MTLResourceSPI
MTLResource
MTLBuffer
MTLSimBufferStoragePool
MTLSimHeap
MTLHeap
MTLSerializerHeap
MTLSimCommandBuffer
MTLCommandBufferSPI
MTLCommandBuffer
MTLSerializerCommandStream
MTLSimCommandQueue
MTLCommandQueueSPI
MTLCommandQueue
MTLSimCommandStoragePool
MTLSimComputePipelineState
MTLComputePipelineState
MTLSerializerComputePipelineState
MTLSimDepthStencilState
MTLDepthStencilStateSPI
MTLDepthStencilState
MTLSerializerDepthStencilState
MTLSimRenderPipelineState
MTLRenderPipelineStateSPI
MTLRenderPipelineState
MTLPipelineStateWithProgramAddressTable
MTLSerializerRenderPipelineState
MTLSimResource
MTLSimSamplerState
MTLSamplerStateSPI
MTLSamplerState
MTLSerializerSamplerState
MTLSimTexture
MTLSerializerTexture
MTLTexture
MTLTextureImplementation
MTLTextureSPI
init
serializer
deleteArgumentBufferLayoutRef:allocator:
dealloc
argumentBufferLayoutConstantAtIndex:layoutRef:allocator:
resourceConnection
data
initWithDevice:reference:data:
bufferLayoutMatchesFrontEndLayout
encodedLength
alignment
constantOffsetAtIndex:
argumentBufferLayoutRef
_reference
_device
_bufferLayoutMatchesFrontEndLayout
_encodedLength
_alignment
TI,R,D
deleteArgumentEncoderRef:allocator:
argumentEncoderSetArgumentBuffer:offset:encoderRef:allocator:
doesNotRecognizeSelector:
setBuffers:offsets:withRange:
argumentEncoderSetBuffers:offsets:withRange:encoderRef:allocator:
setTextures:withRange:
argumentEncoderSetTextures:withRange:encoderRef:allocator:
setSamplerStates:withRange:
argumentEncoderSetSamplerStates:withRange:encoderRef:allocator:
bufferRef
argumentEncoderConstantAtIndex:encoderRef:bufferRef:allocator:
contents
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
setArgumentBuffer:offset:
setArgumentBuffer:startOffset:arrayElement:
setBuffer:offset:atIndex:
setTexture:atIndex:
setSamplerState:atIndex:
constantDataAtIndex:
setRenderPipelineState:atIndex:
setRenderPipelineStates:withRange:
setComputePipelineState:atIndex:
setComputePipelineStates:withRange:
setIndirectCommandBuffer:atIndex:
setIndirectCommandBuffers:withRange:
setAccelerationStructure:atIndex:
newArgumentEncoderForBufferAtIndex:
setVisibleFunctionTable:atIndex:
setVisibleFunctionTables:withRange:
setIntersectionFunctionTable:atIndex:
setIntersectionFunctionTables:withRange:
device
label
setLabel:
T@"<MTLDevice>",R
T@"NSString",C
initWithDevice:reference:layout:data:
argumentEncoderRef
setFunctionPointer:atIndex:
setFunctionPointers:withRange:
setVisibleFunctionTable:atBufferIndex:
setVisibleFunctionTables:withBufferRange:
setIntersectionFunctionTable:atBufferIndex:
setIntersectionFunctionTables:withBufferRange:
_layout
_argumentBuffer
_offset
allocateOperationBytes:
_data
T@"NSObject<OS_dispatch_data>",R,V_data
allocateObjectRef
releaseObjectRef:
_generator
_serialQueue
initWithDevice:objectRefAllocator:deserializerGeneratesResourceRefs:
newTextureRef
newSamplerStateRef
newDepthStencilStateRef
pixelFormat
textureRef
decompressedPixelFormat
decompressPlaceholder:expandedTex:srcFormat:destFormat:width:height:destRowBytes:srcRowBytes:
heapRef
newBufferRef
newFenceRef
newEventRef
serializeStructType:version:
newArgumentBufferLayoutRef
newArgumentEncoderRef
samplerRef
pipelineRef
newNotificationRef
serializerResourceRef
newFunctionRef
newRenderPipelineStateRef
newComputePipelineStateRef
newHeapRef
descriptorPrivate
stringWithUTF8String:
handleNewObjectReplyData:replyDataSize:errorMessage:
initWithDevice:deserializerGeneratesResourceRefs:
initWithDevice:
releaseBufferRef:
deleteBufferRef:allocator:
releaseTextureRef:
deleteTextureRef:allocator:
releaseDepthStencilStateRef:
deleteDepthStencilStateRef:allocator:
releaseSamplerStateRef:
deleteSamplerStateRef:allocator:
releaseFunctionRef:
deleteFunctionRef:allocator:
releaseComputePipelineStateRef:
deleteComputePipelineStateRef:allocator:
releaseRenderPipelineStateRef:
deleteRenderPipelineStateRef:allocator:
releaseFenceRef:
deleteFenceRef:allocator:
releaseArgumentBufferLayoutRef:
releaseArgumentEncoderRef:
releaseHeapRef:
deleteHeapRef:allocator:
releaseEventRef:
deleteEventRef:allocator:
newCommandQueueRef
releaseCommandQueueRef:
deleteCommandQueueRef:allocator:
newCommandBufferRef
releaseCommandBufferRef:
releaseNotificationRef:
newTextureWithDescriptor:
newSamplerStateWithDescriptor:
newDepthStencilStateWithDescriptor:
copyImageBytesFromSource:toDestination:dataSize:region:bytesPerRow:bytesPerImage:mipmapLevel:slice:texture:
getBytesFromRegion:bytesPerRow:bytesPerImage:mipmapLevel:slice:texture:outDataSize:
replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:texture:allocator:
newTextureViewWithPixelFormat:baseTexture:allocator:
newTextureWithDescriptor:heap:offset:useOffset:allocator:
newBufferWithLength:options:heap:offset:useOffset:allocator:
newTextureViewWithPixelFormat:textureType:levels:slices:baseTexture:allocator:
newTextureViewWithPixelFormat:textureType:levels:slices:swizzle:baseTexture:allocator:
newFenceWithAllocator:
newSharedEventWithAllocator:
newSharedEventWithHandle:allocator:
newSharedEventWithMachPort:allocator:
newArgumentBufferLayoutWithStructType:allocator:
newArgumentEncoderWithLayout:allocator:
sizeInfoForHeap:allocator:
minimumLinearTextureAlignmentForPixelFormat:allocator:
minimumTextureBufferAlignmentForPixelFormat:allocator:
getComputeInfoWithAllocator:
maxAvailableSizeWithAlignment:heap:allocator:
bufferGPUAddress:allocator:
uniqueIdentifierForTexture:allocator:
uniqueIdentifierForSamplerState:allocator:
uniqueIdentifierForRenderPipelineState:allocator:
uniqueIdentifierForComputePipelineState:allocator:
notifyListenerForEventRef:atValue:allocator:
sharedEventSignaledValueForEventRef:allocator:
sharedEventSetSignaledValue:eventRef:allocator:
sharedEventWaitSignaledValue:timeoutMS:eventRef:allocator:
heapTextureSizeAndAlignWithDescriptor:allocator:
heapBufferSizeAndAlignWithLength:options:allocator:
makeAliasableResource:allocator:
doesAliasResources:count:all:resource:allocator:
newTextureWithBuffer:descriptor:offset:bytesPerRow:allocator:
newTiledTextureWithBuffer:descriptor:offset:bytesPerRow:allocator:
newSharedTextureWithDescriptor:allocator:
newSharedTextureWithHandle:
newFunctionWithIR:
newRenderPipelineStateWithSerializedDescriptor:allocator:
newComputePipelineStateWithSerializedDescriptor:allocator:
newIOSurfaceTextureWithDescriptor:plane:allocator:
newTextureWithDescriptor:allocator:
newDepthStencilStateWithDescriptor:allocator:
newSamplerStateWithDescriptor:allocator:
newHeapWithDescriptor:allocator:
handleNewObjectReplyData:replyDataSize:
computePipelineWithReplyData:replyDataSize:pipelineInfo:errorMessage:
payloadFromReplyData:replyDataSize:
deserializerGeneratesResourceRefs
reflectionSerializationVersion
setReflectionSerializationVersion:
_objectIndex
_commandBufferIndex
_eventNotifications
_deserializerGeneratesResourceRefs
_reflectionSerializationVersion
TB,R,N,V_deserializerGeneratesResourceRefs
TQ,V_reflectionSerializationVersion
calculateOffsetToRegion:level:slice:
width
height
depth
length
depthStencilPrivate
stencilPrivate
copy
raise:format:
decodeXPCObjectOfType:forKey:
decodeObjectOfClass:forKey:
decodeIntegerForKey:
encodeXPCObject:forKey:
encodeObject:forKey:
encodeInteger:forKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
initWithEventPort:labelTraceID:label:
deserializerSupportsSharedEvents
registerEventNotification:listener:event:value:block:
mainConnection
eventRef
notifyListener:atValue:block:
newSharedEventHandle
signaledValue
setSignaledValue:
initWithDevice:reference:
waitSignaledValue:timeoutMS:
_signaledValue
TQ,D
initWithCommandBuffer:
writeSegmentHeader:continuation:
copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:
backingBuffer
copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:
endEncoding
commandBuffer
computeCommandEncoder
bundleWithIdentifier:
newDefaultLibraryWithBundle:error:
newFunctionWithName:constantValues:error:
newComputePipelineStateWithFunction:error:
setComputePipelineState:
newBufferWithLength:options:
decompressedTextureView
textureType
newTextureViewWithPixelFormat:textureType:levels:slices:
threadExecutionWidth
maxTotalThreadsPerThreadgroup
addResourceReference:isWrite:
setBytes:length:atIndex:
dispatchThreads:threadsPerThreadgroup:
hazardTrackingMode
newEvent
encodeSignalEvent:value:
encodeWaitForEvent:value:
addCompletedHandler:
getCommandBytes:forCommand:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:options:
indirectCommandBufferRef
optimize:withCommand:
optimize:slice:level:withCommand:
optimizeReset:withRange:withCommand:
addStateReference:
fenceRef
mipmapLevelCount
arrayLength
copyFromTexture:sourceSlice:sourceLevel:toTexture:destinationSlice:destinationLevel:sliceCount:levelCount:
insertDebugSignpost:
pushDebugGroup:
popDebugGroup
synchronizeResource:
synchronizeTexture:slice:level:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:
copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:
generateMipmapsForTexture:
fillBuffer:range:value:
copyFromTexture:toTexture:
updateFence:
waitForFence:
getTextureAccessCounters:region:mipLevel:slice:resetCounters:countersBuffer:countersBufferOffset:
resetTextureAccessCounters:region:mipLevel:slice:
optimizeContentsForGPUAccess:
optimizeContentsForGPUAccess:slice:level:
optimizeContentsForCPUAccess:
optimizeContentsForCPUAccess:slice:level:
resetCommandsInBuffer:withRange:
copyIndirectCommandBuffer:sourceRange:destination:destinationIndex:
optimizeIndirectCommandBuffer:withRange:
sampleCountersInBuffer:atSampleIndex:withBarrier:
resolveCounters:inRange:destinationBuffer:destinationOffset:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:
invalidateCompressedTexture:
invalidateCompressedTexture:slice:level:
fillBuffer:range:pattern4:
fillTexture:level:slice:region:bytes:length:
fillTexture:level:slice:region:color:
fillTexture:level:slice:region:color:pixelFormat:
beginSegment:
getType
getBufferBytes:alignment:buffer:offset:
setBuffers:offsets:withRange:withCommand:array:rangeMax:
useHeaps:count:
useResources:count:usage:
setSplitHandler:
getCommandBufferBytes:
beginContinuation
setBytes:length:atIndex:withCommand:array:rangeMax:
setSamplerStates:withRange:withCommand:array:rangeMax:
setSamplerStates:lodMinClamps:lodMaxClamps:withRange:withCommand:array:rangeMax:
setTextures:withRange:withCommand:array:rangeMax:
useHeap:
useResource:usage:
getCommandBytesRetry:forCommand:
stream
split
getWritableInfo:buffers:texturesArrayLength:textures:
handleSplits
flushWrites
memoryBarrierNotificationWithResources:count:
memoryBarrierNotificationWithScope:
setBufferOffset:atIndex:
setAccelerationStructure:atBufferIndex:
setSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setSamplerStates:lodMinClamps:lodMaxClamps:withRange:
setThreadgroupMemoryLength:atIndex:
setImageblockWidth:height:
setStageInRegion:
setStageInRegionWithIndirectBuffer:indirectBufferOffset:
dispatchThreadgroups:threadsPerThreadgroup:
dispatchThreadgroupsWithIndirectBuffer:indirectBufferOffset:threadsPerThreadgroup:
executeCommandsInBuffer:withRange:
executeCommandsInBuffer:indirectBuffer:indirectBufferOffset:
memoryBarrierWithScope:
memoryBarrierWithResources:count:
dispatchType
newKernelDebugInfo
dispatchThreadsWithIndirectBuffer:indirectBufferOffset:
enableNullBufferBinds:
useResourceGroup:usage:
encodeStartDoWhile
encodeEndDoWhile:offset:comparison:referenceValue:
encodeStartWhile:offset:comparison:referenceValue:
encodeEndWhile
encodeStartIf:offset:comparison:referenceValue:
encodeStartElse
encodeEndIf
initWithCommandBuffer:dispatchType:
needsWrites
setNeedsWrites:
hadSplit
buffers
textures
samplers
pipelineState
_resourcesDirty
TB,VneedsWrites
countByEnumeratingWithState:objects:count:
writeDescriptor
addRenderTargetReferences
depthAttachment
texture
resolveTexture
level
slice
depthPlane
resolveLevel
resolveSlice
resolveDepthPlane
loadAction
storeAction
storeActionOptions
clearDepth
depthResolveFilter
stencilAttachment
clearStencil
stencilResolveFilter
colorAttachments
objectAtIndexedSubscript:
clearColor
visibilityResultBuffer
renderTargetArrayLength
renderTargetWidth
renderTargetHeight
getWritableInfo:vtxBuffers:vtxTexturesArrayLength:vtxTextures:frgBuffersLength:frgBuffers:frgTexturesArrayLength:frgTextures:
depthStencilRef
setStencilFrontReferenceValue:backReferenceValue:
setFragmentTexture:atIndex:
setFragmentSamplerState:atIndex:
useHeaps:count:stages:
useResources:count:usage:stages:
forceStoreActionsForPosition:
forceLoadActions
setRenderPipelineState:
setVertexBytes:length:atIndex:
setVertexBuffer:offset:atIndex:
setVertexBufferOffset:atIndex:
setVertexBuffers:offsets:withRange:
setVertexTexture:atIndex:
setVertexTextures:withRange:
setVertexSamplerState:atIndex:
setVertexSamplerStates:withRange:
setVertexSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setVertexSamplerStates:lodMinClamps:lodMaxClamps:withRange:
setVertexVisibleFunctionTable:atBufferIndex:
setVertexVisibleFunctionTables:withBufferRange:
setVertexIntersectionFunctionTable:atBufferIndex:
setVertexIntersectionFunctionTables:withBufferRange:
setVertexAccelerationStructure:atBufferIndex:
setViewport:
setViewports:count:
setFrontFacingWinding:
setVertexAmplificationCount:viewMappings:
setCullMode:
setDepthClipMode:
setDepthBias:slopeScale:clamp:
setScissorRect:
setScissorRects:count:
setTriangleFillMode:
setFragmentBytes:length:atIndex:
setFragmentBuffer:offset:atIndex:
setFragmentBufferOffset:atIndex:
setFragmentBuffers:offsets:withRange:
setFragmentTextures:withRange:
setFragmentSamplerStates:withRange:
setFragmentSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setFragmentSamplerStates:lodMinClamps:lodMaxClamps:withRange:
setFragmentVisibleFunctionTable:atBufferIndex:
setFragmentVisibleFunctionTables:withBufferRange:
setFragmentIntersectionFunctionTable:atBufferIndex:
setFragmentIntersectionFunctionTables:withBufferRange:
setFragmentAccelerationStructure:atBufferIndex:
setBlendColorRed:green:blue:alpha:
setDepthStencilState:
setStencilReferenceValue:
setVisibilityResultMode:offset:
setColorStoreAction:atIndex:
setDepthStoreAction:
setStencilStoreAction:
setColorStoreActionOptions:atIndex:
setDepthStoreActionOptions:
setStencilStoreActionOptions:
drawPrimitives:vertexStart:vertexCount:instanceCount:
drawPrimitives:vertexStart:vertexCount:
drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:
drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:
drawPrimitives:vertexStart:vertexCount:instanceCount:baseInstance:
drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:baseVertex:baseInstance:
drawPrimitives:indirectBuffer:indirectBufferOffset:
drawIndexedPrimitives:indexType:indexBuffer:indexBufferOffset:indirectBuffer:indirectBufferOffset:
textureBarrier
updateFence:afterStages:
waitForFence:beforeStages:
setTessellationFactorBuffer:offset:instanceStride:
setTessellationFactorScale:
drawPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:instanceCount:baseInstance:
drawPatches:patchIndexBuffer:patchIndexBufferOffset:indirectBuffer:indirectBufferOffset:
drawIndexedPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:instanceCount:baseInstance:
drawIndexedPatches:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:indirectBuffer:indirectBufferOffset:
setTileBytes:length:atIndex:
setTileBuffer:offset:atIndex:
setTileBufferOffset:atIndex:
setTileBuffers:offsets:withRange:
setTileTexture:atIndex:
setTileTextures:withRange:
setTileSamplerState:atIndex:
setTileSamplerStates:withRange:
setTileSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setTileSamplerStates:lodMinClamps:lodMaxClamps:withRange:
setTileVisibleFunctionTable:atBufferIndex:
setTileVisibleFunctionTables:withBufferRange:
setTileIntersectionFunctionTable:atBufferIndex:
setTileIntersectionFunctionTables:withBufferRange:
setTileAccelerationStructure:atBufferIndex:
dispatchThreadsPerTile:
setThreadgroupMemoryLength:offset:atIndex:
useResource:usage:stages:
useHeap:stages:
memoryBarrierWithScope:afterStages:beforeStages:
memoryBarrierWithResources:count:afterStages:beforeStages:
tileWidth
tileHeight
setDepthClipModeSPI:
setLineWidth:
addSplitHandler:
isMemorylessRender
setFragmentTexture:atTextureIndex:samplerState:atSamplerIndex:
setVertexAmplificationMode:value:
setCommandDataCorruptModeSPI:
setAlphaTestReferenceValue:
setPointSize:
setClipPlane:p2:p3:p4:atIndex:
setVertexSamplerState:lodMinClamp:lodMaxClamp:lodBias:atIndex:
setFragmentSamplerState:lodMinClamp:lodMaxClamp:lodBias:atIndex:
setViewportTransformEnabled:
setProvokingVertexMode:
setPrimitiveRestartEnabled:
setPrimitiveRestartEnabled:index:
setTriangleFrontFillMode:backFillMode:
setTransformFeedbackState:
setDepthCleared
setStencilCleared
setColorResolveTexture:slice:depthPlane:level:atIndex:
setColorResolveTexture:slice:depthPlane:level:yInvert:atIndex:
setDepthResolveTexture:slice:depthPlane:level:
setDepthResolveTexture:slice:depthPlane:level:yInvert:
setStencilResolveTexture:slice:depthPlane:level:
setStencilResolveTexture:slice:depthPlane:level:yInvert:
dispatchThreadsPerTile:inRegion:
useResourceGroup:usage:stages:
initWithCommandBuffer:descriptor:
fixStoreActions:
setEncoderPosition:
splitHandlers
renderPassDescriptor
depthStencilState
fragmentBuffers
fragmentTextures
fragmentSamplers
vertexBuffers
vertexTextures
vertexSamplers
tessellationFactorBuffer
renderPassCommand
TQ,R,VtileWidth
TQ,R,VtileHeight
initWithDomain:code:userInfo:
commandBufferForReference:
didScheduleWithStartTime:endTime:error:
commandQueue
commandBufferDidComplete:startTime:completionTime:error:
dispatchNotificationWithReference:
getNewResourceID
initWithResourceListCapacity:
_deviceWrapper
initWithTargetData:cacheUUID:pluginPath:device:compilerFlags:
validateWithDevice:
getDecompressedFormat:
setPixelFormat:
usage
setUsage:
initWithDevice:bufferRef:content:pointer:length:options:heap:deallocator:
newBufferWithLength:options:pointer:copyBytes:deallocator:
initWithDescriptor:reference:device:
initWithDevice:fenceRef:
storageMode
initWithDescriptor:device:heapRef:
dispatchQueue
setStorageMode:
rotation
initWithDescriptor:decompressedPixelFormat:iosurface:plane:textureRef:heap:device:
initWithUTF8String:
initWithDevice:functionType:functionRef:
initWithFunction:compilerOutput:
newFunctionVariantWithCompilerOutput:functionType:
vertexFunction
function
setVertexFunction:
fragmentFunction
setFragmentFunction:
serializeRenderPipelineDescriptor:
compilerConnection
initWithDevice:pipelineRef:descriptor:
dictionaryWithObjects:forKeys:count:
setObject:forKeyedSubscript:
computeFunction
setComputeFunction:
serializeComputePipelineDescriptor:
maxTotalComputeThreadsPerThreadgroup
setMaxTotalThreadsPerThreadgroup:
setStaticThreadgroupMemoryLength:
setThreadExecutionWidth:
setSupportIndirectCommandBuffers:
maxCommandBufferCount
initWithDevice:commandQueueRef:descriptor:
preprocessorMacros
count
objectForKey:
stringValue
UTF8String
fastMathEnabled
languageVersion
debuggingEnabled
newSharedEvent
eventPort
registerDevices
newCommandQueue
newCommandQueueWithMaxCommandBufferCount:
heapTextureSizeAndAlignWithDescriptor:
heapBufferSizeAndAlignWithLength:options:
newHeapWithDescriptor:
newBufferWithBytes:length:options:
newBufferWithBytesNoCopy:length:options:deallocator:
newTextureWithDescriptor:iosurface:plane:
newDefaultLibrary
newLibraryWithFile:error:
newLibraryWithURL:error:
newLibraryWithData:error:
newLibraryWithSource:options:error:
newLibraryWithSource:options:completionHandler:
newLibraryWithStitchedDescriptor:error:
newLibraryWithStitchedDescriptor:completionHandler:
newRenderPipelineStateWithDescriptor:error:
newRenderPipelineStateWithDescriptor:options:reflection:error:
newRenderPipelineStateWithDescriptor:completionHandler:
newRenderPipelineStateWithDescriptor:options:completionHandler:
newComputePipelineStateWithFunction:options:reflection:error:
newComputePipelineStateWithFunction:completionHandler:
newComputePipelineStateWithFunction:options:completionHandler:
newComputePipelineStateWithDescriptor:options:reflection:error:
newComputePipelineStateWithDescriptor:options:completionHandler:
newFence
supportsFeatureSet:
supportsFamily:
supportsTextureSampleCount:
minimumLinearTextureAlignmentForPixelFormat:
minimumTextureBufferAlignmentForPixelFormat:
newRenderPipelineStateWithTileDescriptor:options:reflection:error:
newRenderPipelineStateWithTileDescriptor:options:completionHandler:
getDefaultSamplePositions:count:
newArgumentEncoderWithArguments:
supportsRasterizationRateMapWithLayerCount:
newRasterizationRateMapWithDescriptor:
newIndirectCommandBufferWithDescriptor:maxCommandCount:options:
newSharedEventWithHandle:
sparseTileSizeWithTextureType:pixelFormat:sampleCount:
newCounterSampleBufferWithDescriptor:error:
sampleTimestamps:gpuTimestamp:
supportsCounterSampling:
supportsVertexAmplificationCount:
newDynamicLibrary:error:
newDynamicLibraryWithURL:error:
newBinaryArchiveWithDescriptor:error:
accelerationStructureSizesWithDescriptor:
newAccelerationStructureWithSize:
newAccelerationStructureWithDescriptor:
name
registryID
maxThreadsPerThreadgroup
isLowPower
isHeadless
isRemovable
hasUnifiedMemory
recommendedMaxWorkingSetSize
isDepth24Stencil8PixelFormatSupported
readWriteTextureSupport
argumentBuffersSupport
areRasterOrderGroupsSupported
supports32BitFloatFiltering
supports32BitMSAA
supportsQueryTextureLOD
supportsBCTextureCompression
supportsPullModelInterpolation
areBarycentricCoordsSupported
supportsShaderBarycentricCoordinates
currentAllocatedSize
maxThreadgroupMemoryLength
maxArgumentBufferSamplerCount
areProgrammableSamplePositionsSupported
sparseTileSizeInBytes
maxBufferLength
counterSets
supportsDynamicLibraries
supportsRenderDynamicLibraries
supportsRaytracing
supportsFunctionPointers
supportsFunctionPointersFromRender
supportsRaytracingFromRender
supportsPrimitiveMotionBlur
convertSparsePixelRegions:toTileRegions:withTileSize:alignmentMode:numRegions:
convertSparseTileRegions:toPixelRegions:withTileSize:numRegions:
T@"NSString",R
T{?=QQQ},R
lowPower
TB,R,GisLowPower
headless
TB,R,GisHeadless
removable
TB,R,GisRemovable
depth24Stencil8PixelFormatSupported
TB,R,GisDepth24Stencil8PixelFormatSupported
rasterOrderGroupsSupported
TB,R,GareRasterOrderGroupsSupported
barycentricCoordsSupported
TB,R,GareBarycentricCoordsSupported
programmableSamplePositionsSupported
TB,R,GareProgrammableSamplePositionsSupported
T@"NSArray",R
reportLeaks
allowLibrariesFromOtherPlatforms
vendorName
familyName
productName
compilerPropagatesThreadPriority:
_setDeviceWrapper:
deviceSupportsFeatureSet:
deviceOrFeatureProfileSupportsFeatureSet:
minLinearTextureAlignmentForPixelFormat:
newBufferWithIOSurface:
unloadShaderCaches
libraryCacheStats
pipelineCacheStats
copyShaderCacheToPath:
supportsSampleCount:
newCommandQueueWithDescriptor:
newIndirectArgumentBufferLayoutWithStructType:
newArgumentEncoderWithLayout:
supportsTextureWriteRoundingMode:
newIndirectCommandBufferWithDescriptor:maxCount:options:
newIndirectRenderCommandEncoderWithBuffer:
newIndirectComputeCommandEncoderWithBuffer:
newSharedEventWithMachPort:
setResourcesPurgeableState:newState:oldState:count:
newAccelerationStructureWithSize:resourceIndex:
isCompatibleWithAccelerationStructure:
newAccelerationStructureWithBuffer:offset:
newDynamicLibrary:computeDescriptor:error:
newDynamicLibraryWithURL:options:error:
newDynamicLibraryFromURL:error:
loadDynamicLibrariesForComputeDescriptor:error:
loadDynamicLibrariesForComputeDescriptor:options:error:
loadDynamicLibrariesForFunction:insertLibraries:error:
loadDynamicLibrariesForFunction:insertLibraries:options:error:
validateDynamicLibrary:state:error:
validateDynamicLibraryURL:error:
newBinaryLibraryWithOptions:url:error:
newVisibleFunctionTableWithDescriptor:
newIntersectionFunctionTableWithDescriptor:
supportsBufferlessClientStorageTexture
supportsComputeMemoryBarrier
supportsRenderMemoryBarrier
supportsArgumentBuffersTier2
supportsReadWriteTextureArgumentsTier2
supportsStreamingCodecSignaling
supportsProgrammableSamplePositions
supportsLargeFramebufferConfigs
supportsCustomBorderColor
supportsSamplerAddressModeClampToHalfBorder
supports3DBCTextures
supportsRGBA10A2Gamma
supportsPrimitiveRestartOverride
supportsGlobalVariableRelocation
supportsGlobalVariableRelocationRender
supportsGlobalVariableRelocationCompute
supportsTLS
supports32bpcMSAATextures
supportsVertexAmplification
supportsPlacementHeaps
supportsOpenCLTextureWriteSwizzles
supportsInt64
supportsFixedLinePointFillDepthGradient
supportsLateEvalEvent
supportsNonZeroTextureWriteLOD
supportsSharedTextureHandles
supportsBufferPrefetchStatistics
supportsLimitedYUVFormats
supportsNonPrivateDepthStencilTextures
supportsNonPrivateMSAATextures
supportsSharedStorageHeapResources
supportsSharedStorageTextures
supportsLinearTextureFromSharedBuffer
supportsPipelineLibraries
supportsFragmentOnlyEncoders
supportsBufferWithIOSurface
supportsProgrammableBlending
supportsRenderToLinearTextures
supportsMemorylessRenderTargets
supportsFastMathInfNaNPropagation
supportsInvariantVertexPosition
supportsShaderLODAverage
supportsRelaxedTextureViewRequirements
supportsSeparateDepthStencil
supportsGPUStatistics
supportsCompressedTextureViewSPI
supportsRenderTargetTextureRotation
supportsDynamicControlPointCount
supportsIABHashForTools
supportsBinaryArchives
supportsBinaryLibraries
supportsASTCTextureCompression
supportsExtendedYUVFormats
supportsPublicXR10Formats
supportsSRGBwrites
supportsDepthClipMode
supportsPacked32TextureBufferWrites
supports3DASTCTextures
supportsExtendedXR10Formats
supportsFragmentBufferWrites
supportsCountingOcclusionQuery
supportsBaseVertexInstanceDrawing
supportsIndirectDrawAndDispatch
supportsTessellation
supportsReadWriteBufferArguments
supportsArrayOfTextures
supportsArrayOfSamplers
supportsCombinedMSAAStoreAndResolveAction
supportsMutableTier1ArgumentBuffers
supportsSamplerCompareFunction
supportsMSAADepthResolve
supportsMSAAStencilResolve
supportsMSAADepthResolveFilter
supportsGFXIndirectCommandBuffers
supportsCMPIndirectCommandBuffers
supportsIndirectStageInRegion
supportsIndirectTextures
supportsNorm16BCubicFiltering
supportsTextureOutOfBoundsReads
supportsTextureSwizzle
supportsAlphaYUVFormats
supportsMemoryOrderAtomics
supportsQuadGroup
supportsRenderTextureWrites
supportsImageBlocks
supportsTileShaders
supportsImageBlockSampleCoverageControl
supportsNativeHardwareFP16
supportsPostDepthCoverage
supportsMipLevelsSmallerThanBlockSize
supportsNonUniformThreadgroupSize
supportsReadWriteTextureArguments
supportsReadWriteTextureCubeArguments
supportsTextureCubeArray
supportsQuadShufflesAndBroadcast
supportsConcurrentComputeDispatch
supportsRenderPassWithoutRenderTarget
supportsRasterOrderGroups
supportsRasterOrderGroupsColorAttachment
supportsLinearTexture2DArray
supportsNonSquareTileShaders
supportsSeparateVisibilityAndShadingRate
supports2DLinearTexArraySPI
supportsLayeredRendering
supportsViewportAndScissorArray
supportsIndirectTessellation
supportsMSAAStencilResolveFilter
supportsStencilFeedback
supportsFP32TessFactors
supportsUnalignedVertexFetch
supportsSIMDGroup
supportsShaderMinLODClamp
supportsSIMDShufflesAndBroadcast
supportsWritableArrayOfTextures
supportsVariableRateRasterization
supportsYCBCRFormats
supportsYCBCRFormatsPQ
supportsYCBCRFormats12
supportsYCBCRFormatsXR
supportsASTCHDRTextureCompression
supportsSparseTextures
supportsSparseHeaps
supportsIndirectWritableTextures
supportsStatefulDynamicLibraries
supportsSharedFunctionTables
supportsBlackOrWhiteSamplerBorderColors
supportsMirrorClampToEdgeSamplerMode
supportsSIMDReduction
supportsDepthClipModeClampExtended
supportsTexture2DMultisampleArray
supportsForceSeamsOnCubemaps
supportsFloat16BCubicFiltering
supportsFloat16InfNanFiltering
supportsRTZRounding
supportsAnisoSampleFix
supportsYCBCRPackedFormatsPQ
supportsYCBCRPackedFormats12
supportsYCBCRPackedFormatsXR
supportsBufferBoundsChecking
supportsForkJoin
supportsDevicePartitioning
supportsComputeCompressedTextureWrite
supportsSIMDGroupMatrix
supportsInterchangeTiled
supportsQuadReduction
supportsSIMDShuffleAndFill
supportsBfloat16Format
supportsSparseDepthAttachments
supportsAtomicUlongVoidMinMax
supportsLossyCompression
supportsCommandBufferJump
supportsStackOverflowErrorCode
deviceCreationFlags
areGPUAssertionsEnabled
setGPUAssertionsEnabled:
commandBufferErrorOptions
setCommandBufferErrorOptions:
isBCTextureCompressionSupported
targetDeviceInfo
targetDeviceArchitecture
halfFPConfig
singleFPConfig
doubleFPConfig
metalAssertionsEnabled
setMetalAssertionsEnabled:
featureProfile
limits
maxFramebufferStorageBits
linearTextureArrayAlignmentBytes
linearTextureArrayAlignmentSlice
maxTileBuffers
maxTileTextures
maxTileSamplers
maxTileInlineDataSize
minTilePixels
maxColorAttachments
maxVertexAttributes
maxVertexBuffers
maxVertexTextures
maxVertexSamplers
maxVertexInlineDataSize
maxInterpolants
maxFragmentBuffers
maxFragmentTextures
maxFragmentSamplers
maxFragmentInlineDataSize
maxComputeBuffers
maxComputeTextures
maxComputeSamplers
maxComputeInlineDataSize
maxComputeLocalMemorySizes
maxComputeThreadgroupMemory
maxLineWidth
maxPointSize
maxVisibilityQueryOffset
minConstantBufferAlignmentBytes
minBufferNoCopyAlignmentBytes
maxTextureWidth1D
maxTextureWidth2D
maxTextureHeight2D
maxTextureWidth3D
maxTextureHeight3D
maxTextureDepth3D
maxTextureDimensionCube
maxTextureLayers
linearTextureAlignmentBytes
iosurfaceTextureAlignmentBytes
iosurfaceReadOnlyTextureAlignmentBytes
deviceLinearTextureAlignmentBytes
deviceLinearReadOnlyTextureAlignmentBytes
maxFunctionConstantIndices
maxComputeThreadgroupMemoryAlignmentBytes
maxInterpolatedComponents
maxTessellationFactor
maxIndirectBuffers
maxIndirectTextures
maxIndirectSamplers
maxIndirectSamplersPerDevice
maxFenceInstances
maxViewportCount
maxCustomSamplePositions
maxVertexAmplificationFactor
maxVertexAmplificationCount
maxTextureBufferWidth
maxComputeAttributes
maxPredicatedNestingDepth
maxConstantBufferArguments
supportPriorityBand
sharedMemorySize
dedicatedMemorySize
indirectArgumentBufferCapabilities
isFloat32FilteringSupported
isMsaa32bSupported
isRTZRoundingSupported
defaultTextureWriteRoundingMode
isAnisoSampleFixSupported
isFixedLinePointFillDepthGradientSupported
isLargeMRTSupported
maxRasterizationRateLayerCount
isPlacementHeapSupported
GPUBVHBuilder
requiresRaytracingEmulation
pluginData
setPluginData:
supportsPrimitiveType:
indirectArgumentBufferDecodingData
setIndirectArgumentBufferDecodingData:
setupMPSFunctionTable:
resourcePatchingTypeForResourceType:
reserveResourceIndicesForResourceType:indices:indexCount:
reserveGPUAddressRange:
newBufferWithLength:options:gpuAddress:
newBufferWithBytes:length:options:gpuAddress:
newBufferWithBytesNoCopy:length:options:gpuAddress:deallocator:
newBufferWithDescriptor:
newLateEvalEvent
mapShaderSampleBufferWithBuffer:capacity:size:
unmapShaderSampleBuffer
newComputePipelineStateWithDescriptor:error:
newComputePipelineStateWithDescriptor:completionHandler:
newRenderPipelineStateWithTileDescriptor:error:
newRenderPipelineStateWithTileDescriptor:completionHandler:
newFunctionWithGLCoreIR:functionType:
newFunctionWithGLCoreIR:inputsDescription:functionType:
newFunctionWithGLESIR:functionType:
newFunctionWithGLESIR:inputsDescription:functionType:
newFunctionWithGLIR:functionType:
newFunctionWithGLIR:inputsDescription:functionType:
getShaderCacheKeys
getBVHBuilderLock
getRawBVHBuilderPtr
setRawBVHBuilderPtr:
newIndirectArgumentEncoderWithArguments:
newComputePipelineStateWithImageFilterFunctionsSPI:imageFilterFunctionInfo:error:
newLibraryWithDAG:functions:error:
newLibraryWithGraphs:functions:error:
newLibraryWithGraphsSPI:functions:error:
newLibraryWithStitchedDescriptorSPI:error:
newLibraryWithDescriptor:error:
newLibraryWithDescriptor:completionHandler:
newLibraryWithDescriptorSPI:error:
newDagStringWithGraphs:
newLibraryWithImageFilterFunctionsSPI:imageFilterFunctionInfo:error:
newLibraryWithCIFilters:imageFilterFunctionInfo:error:
newLibraryWithCIFiltersForComputePipeline:imageFilterFunctionInfo:error:
newPipelineLibraryWithFilePath:error:
startCollectingPipelineDescriptors
startCollectingPipelineDescriptorsUsingPrefixForNames:
endCollectingPipelineDescriptors
newRenderPipelineDescriptorWithSerializedData:deserializationContext:
newComputePipelineDescriptorWithSerializedData:deserializationContext:
serializeStructType:
newTextureWithBytesNoCopy:length:descriptor:deallocator:
newTextureLayoutWithDescriptor:isHeapOrBufferBacked:
newIndirectArgumentEncoderWithLayout:
tileSizeWithSparsePageSize:textureType:pixelFormat:sampleCount:
compileVisibleFunction:withDescriptor:destinationBinaryArchive:error:
compileVisibleFunction:withDescriptor:error:
compileVisibleFunction:withDescriptor:completionHandler:
newResourceGroupFromResources:count:
deserializeCompileTimeStats:addToDictionary:
shaderDebugInfoCaching
setShaderDebugInfoCaching:
isQuadDataSharingSupported
sparseTexturesSupport
isRGB10A2GammaSupported
isCustomBorderColorSupported
isClampToHalfBorderSupported
TB,R,N
gpuAssertionsEnabled
TB,GareGPUAssertionsEnabled,SsetGPUAssertionsEnabled:
TQ,N
BCTextureCompressionSupported
TB,R,GisBCTextureCompressionSupported
Tr^{MTLTargetDeviceArch=QI*},R
T@"MTLTargetDeviceArchitecture",R
TB,N
Tr^{?=IIIIIIIIIIIIIIIIIIIIIIIIIIffIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIQ},R
Tf,R
T{IndirectArgumentBufferCapabilities=b1b1b1b29},R
quadDataSharingSupported
TB,R,GisQuadDataSharingSupported
float32FilteringSupported
TB,R,GisFloat32FilteringSupported
msaa32bSupported
TB,R,GisMsaa32bSupported
RTZRoundingSupported
TB,R,GisRTZRoundingSupported
Tq,R
AnisoSampleFixSupported
TB,R,GisAnisoSampleFixSupported
FixedLinePointFillDepthGradientSupported
TB,R,GisFixedLinePointFillDepthGradientSupported
largeMRTSupported
TB,R,GisLargeMRTSupported
RGB10A2GammaSupported
TB,R,GisRGB10A2GammaSupported
CustomBorderColorSupported
TB,R,GisCustomBorderColorSupported
ClampToHalfBorderSupported
TB,R,GisClampToHalfBorderSupported
placementHeapSupported
TB,R,GisPlacementHeapSupported
T@"MTLGPUBVHBuilder",R
T@"NSDictionary",C,N
compiler
registerCommandBuffer:
deserializerSupportsSharedTextures
registerViewTexture:baseTextureView:
wrapRenderState:descriptor:
fragmentFunctionKeyWithRenderPipelineDescriptor:options:previousStateVariant:fragmentKeySize:
vertexFunctionKeyWithRenderPipelineDescriptor:options:nextStageVariant:vertexKeySize:
freeFragmentFunctionKey:fragmentKeySize:
freeVertexFunctionKey:vertexKeySize:
newFragmentVariantWithCompilerOutput:pipelineStatisticsOutput:
newVertexVariantWithCompilerOutput:pipelineStatisticsOutput:
newRenderPipelineWithDescriptor:vertexVariant:fragmentVariant:errorMessage:
pipelineFlagsWithVertexVariant:fragmentVariant:
pipelinePerformanceStatisticsWithVertexVariant:fragmentVariant:vertexCompileTimeOutput:fragmentCompileTimeOutput:
pipelinePerformanceStatisticsWithComputeVariant:compileTimeOutput:
wrapComputeState:descriptor:
newComputeVariantWithCompilerOutput:pipelineStatisticsOutput:
newComputePipelineWithDescriptor:variant:errorMessage:
newTiledTextureWithBytesNoCopy:length:deallocator:descriptor:offset:bytesPerRow:
newTiledTextureWithBytesNoCopy:length:descriptor:offset:bytesPerRow:
resourceListPool
.cxx_destruct
.cxx_construct
_mainConnection
_resourceConnection
_compilerConnection
_serializer
_processRef
_deserializerVersion
_registryID
_commandBufferQueue
_commandBuffers
_resourceListPool
_notificationMutex
_notifications
_maxThreadsPerThreadgroup
_maxThreadgroupMemoryLength
T@"NSObject<OS_xpc_object>",R
T@"MTLSerializer",R,V_serializer
T@"MTLResourceListPool",R,V_resourceListPool
TQ,R,VhalfFPConfig
TQ,R,VsingleFPConfig
TQ,R,VdoubleFPConfig
TB,N,VmetalAssertionsEnabled
TB,R,VsupportPriorityBand
TQ,R,VsharedMemorySize
TQ,R,VdedicatedMemorySize
TQ,R,V_registryID
TB,R,GisLowPower,VlowPower
TB,R,GisHeadless,Vheadless
TB,R,GisRemovable,Vremovable
TB,R,VhasUnifiedMemory
TQ,R,VrecommendedMaxWorkingSetSize
TB,R,GisDepth24Stencil8PixelFormatSupported,Vdepth24Stencil8PixelFormatSupported
TQ,R,VcurrentAllocatedSize
TB,R,GareProgrammableSamplePositionsSupported,VprogrammableSamplePositionsSupported
newArgumentEncoderWithBufferIndex:
newArgumentEncoderWithBufferIndex:reflection:
functionType
patchType
patchControlPointCount
vertexAttributes
stageInputAttributes
functionConstantsDictionary
options
T@"NSDictionary",R
functionRef
formattedDescription:
_functionRef
_functionType
TI,R
T@"NSString",C,Vlabel
T@"<MTLDevice>",R,V_device
TQ,R,V_functionType
TQ,R,VpatchType
Tq,R,VpatchControlPointCount
T@"NSArray",R,VvertexAttributes
T@"NSArray",R,VstageInputAttributes
T@"NSString",R,Vname
T@"NSDictionary",R,VfunctionConstantsDictionary
initWithCompilerOutput:
_function
T@"MTLSimFunction",R
_fenceRef
initWithCommandBuffer:renderPassDescriptor:
merge:
renderCommandEncoder
setStoreAction:
setStoreActionOptions:
separateCommits
setSeparateCommits:
sampledRenderCommandEncoderWithProgramInfoBuffer:capacity:
_encodersSize
_encodersCount
_encoders
TB,VseparateCommits
initWithResourceRef:options:device:heap:
stringByPaddingToLength:withString:startingAtIndex:
retainedLabel
numberWithUnsignedLongLong:
cpuCacheMode
resourceOptions
arrayWithObjects:count:
componentsJoinedByString:
stringWithFormat:
initWithBuffer:offset:bytesPerRow:descriptor:textureRef:
newTextureWithDescriptor:offset:bytesPerRow:
setPurgeableState:
makeAliasable
isAliasable
heap
heapOffset
allocatedSize
T@"<MTLHeap>",R
isPurgeable
isComplete
waitUntilComplete
doesAliasResource:
doesAliasAllResources:count:
doesAliasAnyResources:count:
responsibleProcess
setResponsibleProcess:
allocationID
protectionOptions
unfilteredResourceOptions
setOwnerWithIdentity:
didModifyRange:
addDebugMarker:range:
removeAllDebugMarkers
newLinearTextureWithDescriptor:offset:bytesPerRow:bytesPerImage:
iosurface
gpuAddress
resourceIndex
parentGPUAddress
setParentGPUAddress:
parentGPUSize
setParentGPUSize:
T^{__IOSurface=},R
TQ,R,N
newRemoteBufferViewForDevice:
_bufferRef
_content
_pointer
_deallocator
_length
_iosurface
_gpuAddress
T^{__IOSurface=},R,V_iosurface
TQ,R,N,V_gpuAddress
TQ,R,D
allocStorage
initWithEntrySize:device:
getStorage
returnStorage:
head
tail
storageSize
semaphore
type
initWithType:options:
getSizeInfo
setHeapOffset:
newBufferWithLength:options:offset:useOffset:
newTextureWithDescriptor:offset:useOffset:
maxAvailableSizeWithAlignment:
newBufferWithLength:options:offset:
newTextureWithDescriptor:offset:
size
usedSize
_heapRef
_purgeableState
initWithQueue:retainedReferences:
returnCommandBufferStorage:
returnBufferStorage:
commitAndWaitUntilSubmitted
bufferStorageByteCount
getBufferStorage
getCommandBufferStorage
enqueue
commit
addScheduledHandler:
presentDrawable:
presentDrawable:atTime:
waitUntilScheduled
waitUntilCompleted
blitCommandEncoder
renderCommandEncoderWithDescriptor:
computeCommandEncoderWithDescriptor:
blitCommandEncoderWithDescriptor:
computeCommandEncoderWithDispatchType:
parallelRenderCommandEncoderWithDescriptor:
resourceStateCommandEncoder
resourceStateCommandEncoderWithDescriptor:
accelerationStructureCommandEncoder
retainedReferences
errorOptions
kernelStartTime
kernelEndTime
logs
GPUStartTime
GPUEndTime
status
error
T@"<MTLCommandQueue>",R
Td,R
T@"<MTLLogContainer>",R
T@"NSError",R
encodeDashboardTagForResourceGroup:
encodeDashboardFinalizeForResourceGroup:dashboard:value:forIndex:
encodeDashboardFinalizeForResourceGroup:dashboard:values:indices:count:
addPurgedResource:
addPurgedHeap:
isProfilingEnabled
setProfilingEnabled:
profilingResults
userDictionary
debugBufferContentsWithLength:
sampledRenderCommandEncoderWithDescriptor:programInfoBuffer:capacity:
sampledComputeCommandEncoderWithProgramInfoBuffer:capacity:
sampledComputeCommandEncoderWithDispatchType:programInfoBuffer:capacity:
sampledComputeCommandEncoderWithDescriptor:programInfoBuffer:capacity:
debugCommandEncoder
commitAndHold
setProtectionOptions:
encodeWaitForEvent:value:timeout:
setResourceGroups:count:
dropResourceGroups:count:
encodeCacheHintTag:resourceGroups:count:
encodeCacheHintFinalize:resourceGroups:count:
getListIndex
globalTraceObjectID
listIndex
TQ,R,N,GgetListIndex
profilingEnabled
TB,GisProfilingEnabled
T@"NSMutableDictionary",R,N
splitHandler
T@?,C
commandBufferRef
commandHead
bufferHead
segmentCount
commandCurrentStorage
commandTail
commandPrevious
bufferCurrentStorage
currentStorageOffset
continuation
_protectionOptions
_resourceList
T@"<MTLDevice>",R,Vdevice
T@?,C,VsplitHandler
initWithDevice:maxCommandBufferCount:
initWithEntrySize:
initWithDevice:descriptor:
setErrorOptions:
commandBufferWithDescriptor:
commandBufferWithUnretainedReferences
insertDebugCaptureBoundary
getGPUPriority
setGPUPriority:
setGPUPriority:offset:
getBackgroundGPUPriority
setBackgroundGPUPriority:
setBackgroundGPUPriority:offset:
setSubmissionQueue:
setCompletionQueue:
finish
backgroundTrackingPID
setBackgroundTrackingPID:
qosLevel
commitQueue
commitSynchronously
completionQueue
disableCrossQueueHazardTracking
skipRender
setSkipRender:
executionEnabled
setExecutionEnabled:
isOpenGLQueue
getSPIStats
availableCounters
availableCountersAndDict
requestCounters:
requestCounters:withIndex:
getRequestedCounters
subdivideCounterList:
addPerfSampleHandler:
counterInfo
isStatEnabled
setStatEnabled:
getStatOptions
setStatOptions:
getStatLocations
setStatLocations:
T@"NSObject<OS_dispatch_queue>",R
StatEnabled
TB,N,GisStatEnabled
StatOptions
TQ,N,GgetStatOptions
StatLocations
TQ,N,GgetStatLocations
submitCommandBuffers:count:
commandPool
bufferPool
_commandQueueRef
TQ,R,VbufferStorageByteCount
initWithDevice:pipelineStateDescriptor:
imageblockMemoryLengthForDimensions:
functionHandleWithFunction:
newComputePipelineStateWithAdditionalBinaryFunctions:error:
staticThreadgroupMemoryLength
supportIndirectCommandBuffers
uniqueIdentifier
_pipelineRef
_uniqueIdentifier
TQ,N,VmaxTotalThreadsPerThreadgroup
TQ,N,VthreadExecutionWidth
TQ,N,VstaticThreadgroupMemoryLength
TB,N,VsupportIndirectCommandBuffers
initWithDevice:depthStencilDescriptor:
readsDepth
writesDepth
readsStencil
writesStencil
functionHandleWithFunction:stage:
newVisibleFunctionTableWithDescriptor:stage:
newIntersectionFunctionTableWithDescriptor:stage:
newRenderPipelineStateWithAdditionalBinaryFunctions:error:
threadgroupSizeMatchesTileSize
imageblockSampleLength
pipelineBinaries
newVertexShaderDebugInfo
newFragmentShaderDebugInfo
vertexFunctionHandleWithFunction:
fragmentFunctionHandleWithFunction:
tileFunctionHandleWithFunction:
newVisibleFunctionTableFromVertexStageWithDescriptor:
newVisibleFunctionTableFromFragmentStageWithDescriptor:
newVisibleFunctionTableFromTileStageWithDescriptor:
newRenderPipelineStateWithAdditionalBinaryFunctions:fragmentAdditionalBinaryFunctions:error:
newTileRenderPipelineStateWithAdditionalBinaryFunctions:error:
newVertexIntersectionFunctionTableWithDescriptor:
newFragmentIntersectionFunctionTableWithDescriptor:
newTileIntersectionFunctionTableWithDescriptor:
textureWriteRoundingMode
vertexDebugInstrumentationData
fragmentDebugInstrumentationData
tileDebugInstrumentationData
T@"MTLDebugInstrumentationData",R,&,N
getFragmentShaderTelemetryID
getVertexShaderTelemetryID
TQ,R,V_uniqueIdentifier
doesAliasResources:count:all:
_heap
_heapOffset
_resourceRef
_options
_cpuCacheMode
_storageMode
_label
_labelLock
_hazardTrackingMode
_isAliasable
Ti,VresponsibleProcess
TQ,R,VallocationID
TQ,R,VprotectionOptions
T@"NSString",C,D
T@"<MTLDevice>",R,D
TQ,R,V_cpuCacheMode
TQ,R,V_storageMode
T@"<MTLHeap>",R,D
TQ,R,VallocatedSize
TI,R,V_resourceRef
initWithDevice:samplerDescriptor:
decompress:expandedTex:srcFormat:destFormat:width:height:destRowBytes:srcRowBytes:
buffer
bufferOffset
bufferBytesPerRow
initWithTextureInternal:pixelFormat:decompressedPixelFormat:textureType:levels:slices:swizzle:compressedView:textureRef:isInternalTextureView:
swizzle
newTextureViewWithPixelFormatInternal:isInternalTextureView:
numberWithUnsignedInteger:
numberWithBool:
null
getBytes:bytesPerRow:bytesPerImage:fromRegion:mipmapLevel:slice:
initWithTexture:pixelFormat:decompressedPixelFormat:textureRef:isInternalTextureView:
initWithTexture:pixelFormat:decompressedPixelFormat:textureType:levels:slices:swizzle:textureRef:isInternalTextureView:
replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:
T@"<MTLBuffer>",R
T@"<MTLTexture>",R
getBytes:bytesPerRow:fromRegion:mipmapLevel:
replaceRegion:mipmapLevel:withBytes:bytesPerRow:
newTextureViewWithPixelFormat:
newTextureViewWithPixelFormat:textureType:levels:slices:swizzle:
rootResource
parentTexture
parentRelativeLevel
parentRelativeSlice
iosurfacePlane
sampleCount
isFramebufferOnly
firstMipmapInTail
tailSizeInBytes
isSparse
allowGPUOptimizedContents
compressionType
T@"<MTLResource>",R
framebufferOnly
TB,R,GisFramebufferOnly
T{?=CCCC},R,N
isCompressed
compressionFeedback
swizzleKey
numFaces
isDrawable
compressionFootprint
newCompressedTextureViewWithPixelFormat:textureType:level:slice:
canGenerateMipmapLevels
generateMipmapLevel:slice:
newTextureViewWithPixelFormat:resourceIndex:
newTextureViewWithPixelFormat:textureType:levels:slices:resourceIndex:
newTextureViewWithPixelFormat:textureType:levels:slices:swizzle:resourceIndex:
sparseSurfaceDefaultValue
initWithDescriptor:decompressedPixelFormat:iosurface:plane:textureRef:heap:device:shareable:
initWithTexture:device:
newRemoteTextureViewForDevice:
didModifyData
isShareable
_parentTexture
_parentRelativeLevel
_parentRelativeSlice
_buffer
_textureType
_pixelFormat
_decompressedPixelFormat
_usage
_backingBuffer
_backingBufferSize
_decompressedTextureView
_width
_height
_depth
_mipmapLevelCount
_sampleCount
_arrayLength
_numFaces
_iosurfacePlane
_bufferOffset
_bufferBytesPerRow
_allowGPUOptimizedContents
_framebufferOnly
_swizzle
_isInternalTextureView
_firstMipmapInTail
_tailSizeInBytes
_isDrawable
_shareable
shareable
TB,R,GisShareable,V_shareable
T@"<MTLResource>",R,VrootResource
T@"<MTLTexture>",R,D
TQ,R,V_parentRelativeLevel
TQ,R,VparentRelativeSlice
T@"<MTLBuffer>",R,D
TQ,R,ViosurfacePlane
TQ,R,V_usage
TB,R,GisFramebufferOnly,V_framebufferOnly
TQ,R,V_firstMipmapInTail
TQ,R,V_tailSizeInBytes
TB,R,V_allowGPUOptimizedContents
T{?=CCCC},R,D,N
TQ,R,Vrotation
TB,R,VisCompressed
Tq,R,D
TI,R,V_swizzle
TB,R,V_isDrawable
@36@0:8@16I24^{?=Ssi}28
v16@0:8
B16@0:8
Q16@0:8
Q24@0:8Q16
I16@0:8
@"MTLSimDevice"
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16Q24
v40@0:8@16Q24Q32
v48@0:8r^@16r^Q24{_NSRange=QQ}32
v40@0:8r^@16{_NSRange=QQ}24
^v24@0:8Q16
@24@0:8Q16
v24@0:8@16
v32@0:8@"<MTLBuffer>"16Q24
v40@0:8@"<MTLBuffer>"16Q24Q32
v32@0:8@"<MTLTexture>"16Q24
v32@0:8@"<MTLSamplerState>"16Q24
v32@0:8@"<MTLRenderPipelineState>"16Q24
v32@0:8@"<MTLComputePipelineState>"16Q24
v32@0:8@"<MTLIndirectCommandBuffer>"16Q24
v32@0:8@"<MTLAccelerationStructure>"16Q24
@"<MTLArgumentEncoder>"24@0:8Q16
v32@0:8@"<MTLVisibleFunctionTable>"16Q24
v32@0:8@"<MTLIntersectionFunctionTable>"16Q24
@"<MTLDevice>"16@0:8
v24@0:8@"NSString"16
@44@0:8@16I24@28^{?=SI}36
@"MTLSimIndirectArgumentBufferLayout"
@"MTLSimBuffer"
*24@0:8Q16
@"NSObject<OS_dispatch_data>"
v20@0:8I16
@"NSObject<OS_dispatch_queue>"
@36@0:8@16@24B32
@28@0:8@16B24
@24@0:8@16
v28@0:8I16@20
v128@0:8*16*24Q32{?={?=QQQ}{?=QQQ}}40Q88Q96Q104Q112@120
@112@0:8{?={?=QQQ}{?=QQQ}}16Q64Q72Q80Q88@96^Q104
v120@0:8{?={?=QQQ}{?=QQQ}}16Q64Q72r^v80Q88Q96@104@112
I40@0:8Q16@24@32
I52@0:8@16@24Q32B40@44
I60@0:8Q16Q24@32Q40B48@52
I80@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48@64@72
I84@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48{?=CCCC}64@68@76
I24@0:8@16
I32@0:8@16@24
I28@0:8I16@20
v36@0:8Q16I24@28
v40@0:8Q16I24I28@32
v32@0:8@16@24
v32@0:8Q16@24
v40@0:8Q16@24@32
v44@0:8@16Q24I32@36
v60@0:8r^@16r^Q24{_NSRange=QQ}32I48@52
I36@0:8I16Q20@28
v44@0:8Q16Q24I32@36
v52@0:8r^@16{_NSRange=QQ}24I40@44
v40@0:8Q16Q24@32
v52@0:8r^@16Q24B32@36@44
I56@0:8@16@24Q32Q40@48
I40@0:8@16Q24@32
I40@0:8r^v16Q24^@32
I32@0:8r^v16Q24
I48@0:8r^v16Q24^{?=SIQ}32^@40
r*32@0:8r*16Q24
v24@0:8Q16
@"<MTLDevice>"
@"<MTLSerializerObjectRefAllocator>"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@36@0:8I16Q20@28
v40@0:8@16Q24@?32
v40@0:8@"MTLSharedEventListener"16Q24@?<v@?@"<MTLSharedEvent>"Q>32
@"MTLSharedEventHandle"16@0:8
@28@0:8@16I24
B32@0:8Q16Q24
v136@0:8@16Q24Q32{?=QQQ}40{?=QQQ}64@88Q96Q104{?=QQQ}112
v120@0:8@16Q24Q32Q40{?=QQQ}48@72Q80Q88{?=QQQ}96
v128@0:8@16Q24Q32Q40{?=QQQ}48@72Q80Q88{?=QQQ}96Q120
v120@0:8@16Q24Q32{?=QQQ}40{?=QQQ}64@88Q96Q104Q112
v128@0:8@16Q24Q32{?=QQQ}40{?=QQQ}64@88Q96Q104Q112Q120
v44@0:8@16{_NSRange=QQ}24C40
v80@0:8@16Q24Q32@40Q48Q56Q64Q72
v56@0:8@16Q24@32Q40Q48
v108@0:8@16{?={?=QQQ}{?=QQQ}}24Q72Q80B88@92Q100
v88@0:8@16{?={?=QQQ}{?=QQQ}}24Q72Q80
v40@0:8@16{_NSRange=QQ}24
v56@0:8@16{_NSRange=QQ}24@40Q48
v36@0:8@16Q24B32
v24@0:8@"<MTLResource>"16
v40@0:8@"<MTLTexture>"16Q24Q32
v136@0:8@"<MTLTexture>"16Q24Q32{?=QQQ}40{?=QQQ}64@"<MTLTexture>"88Q96Q104{?=QQQ}112
v120@0:8@"<MTLBuffer>"16Q24Q32Q40{?=QQQ}48@"<MTLTexture>"72Q80Q88{?=QQQ}96
v128@0:8@"<MTLBuffer>"16Q24Q32Q40{?=QQQ}48@"<MTLTexture>"72Q80Q88{?=QQQ}96Q120
v120@0:8@"<MTLTexture>"16Q24Q32{?=QQQ}40{?=QQQ}64@"<MTLBuffer>"88Q96Q104Q112
v128@0:8@"<MTLTexture>"16Q24Q32{?=QQQ}40{?=QQQ}64@"<MTLBuffer>"88Q96Q104Q112Q120
v24@0:8@"<MTLTexture>"16
v44@0:8@"<MTLBuffer>"16{_NSRange=QQ}24C40
v80@0:8@"<MTLTexture>"16Q24Q32@"<MTLTexture>"40Q48Q56Q64Q72
v32@0:8@"<MTLTexture>"16@"<MTLTexture>"24
v56@0:8@"<MTLBuffer>"16Q24@"<MTLBuffer>"32Q40Q48
v24@0:8@"<MTLFence>"16
v108@0:8@"<MTLTexture>"16{?={?=QQQ}{?=QQQ}}24Q72Q80B88@"<MTLBuffer>"92Q100
v88@0:8@"<MTLTexture>"16{?={?=QQQ}{?=QQQ}}24Q72Q80
v40@0:8@"<MTLIndirectCommandBuffer>"16{_NSRange=QQ}24
v56@0:8@"<MTLIndirectCommandBuffer>"16{_NSRange=QQ}24@"<MTLIndirectCommandBuffer>"40Q48
v36@0:8@"<MTLCounterSampleBuffer>"16Q24B32
v56@0:8@"<MTLCounterSampleBuffer>"16{_NSRange=QQ}24@"<MTLBuffer>"40Q48
v144@0:8@16Q24Q32{?=QQQ}40{?=QQQ}64@88Q96Q104{?=QQQ}112Q136
v44@0:8@16{_NSRange=QQ}24I40
v104@0:8@16Q24Q32{?={?=QQQ}{?=QQQ}}40r^v88Q96
v120@0:8@16Q24Q32{?={?=QQQ}{?=QQQ}}40{?=dddd}88
v128@0:8@16Q24Q32{?={?=QQQ}{?=QQQ}}40{?=dddd}88Q120
v144@0:8@"<MTLTexture>"16Q24Q32{?=QQQ}40{?=QQQ}64@"<MTLTexture>"88Q96Q104{?=QQQ}112Q136
v44@0:8@"<MTLBuffer>"16{_NSRange=QQ}24I40
v104@0:8@"<MTLTexture>"16Q24Q32{?={?=QQQ}{?=QQQ}}40r^v88Q96
v120@0:8@"<MTLTexture>"16Q24Q32{?={?=QQQ}{?=QQQ}}40{?=dddd}88
v128@0:8@"<MTLTexture>"16Q24Q32{?={?=QQQ}{?=QQQ}}40{?=dddd}88Q120
v20@0:8B16
v28@0:8@16I24
v44@0:8@16Q24Q32I40
v64@0:8r^@16r^Q24{_NSRange=QQ}32I48^@52I60
v56@0:8r^v16Q24Q32I40^@44I52
v56@0:8r^@16{_NSRange=QQ}24I40^@44I52
v72@0:8r^@16r^f24r^f32{_NSRange=QQ}40I56^@60I68
v32@0:8r^@16Q24
v40@0:8r^@16Q24Q32
v24@0:8C16B20
^v28@0:8Q16I24
@"<MTLSerializerCommandStream>"
v40@0:8r^v16Q24Q32
v32@0:8Q16Q24
v40@0:8@16f24f28Q32
v56@0:8r^@16r^f24r^f32{_NSRange=QQ}40
v64@0:8{?={?=QQQ}{?=QQQ}}16
v64@0:8{?=QQQ}16{?=QQQ}40
v56@0:8@16Q24{?=QQQ}32
v40@0:8@16@24Q32
v24@0:8@"<MTLComputePipelineState>"16
v40@0:8@"<MTLSamplerState>"16f24f28Q32
v56@0:8@"<MTLBuffer>"16Q24{?=QQQ}32
v32@0:8@"<MTLResource>"16Q24
v24@0:8@"<MTLHeap>"16
v40@0:8@"<MTLIndirectCommandBuffer>"16@"<MTLBuffer>"24Q32
B44@0:8@16Q24Q32I40
@"NSData"16@0:8
v32@0:8@"<MTLResourceGroupSPI>"16Q24
B44@0:8@"<MTLBuffer>"16Q24Q32I40
v44@0:8@"<MTLBuffer>"16Q24Q32I40
@32@0:8@16Q24
[31@"<MTLSerializerBuffer>"]
[128@"<MTLSerializerTexture>"]
[16@"<MTLSerializerSamplerState>"]
@"<MTLSerializerComputePipelineState>"
v64@0:8{?=dddddd}16
v32@0:8r^{?=dddddd}16Q24
v32@0:8Q16r^{?=II}24
v28@0:8f16f20f24
v48@0:8{?=QQQQ}16
v32@0:8r^{?=QQQQ}16Q24
v32@0:8f16f20f24f28
v24@0:8I16I20
v48@0:8Q16Q24Q32Q40
v40@0:8Q16Q24Q32
v64@0:8Q16Q24Q32@40Q48Q56
v56@0:8Q16Q24Q32@40Q48
v56@0:8Q16Q24Q32Q40Q48
v80@0:8Q16Q24Q32@40Q48Q56q64Q72
v40@0:8Q16@24Q32
v64@0:8Q16Q24@32Q40@48Q56
v20@0:8f16
v72@0:8Q16Q24Q32@40Q48Q56Q64
v56@0:8Q16@24Q32@40Q48
v88@0:8Q16Q24Q32@40Q48@56Q64Q72Q80
v72@0:8Q16@24Q32@40Q48@56Q64
v40@0:8{?=QQQ}16
v48@0:8r^@16Q24Q32Q40
v24@0:8@"<MTLRenderPipelineState>"16
v24@0:8@"<MTLDepthStencilState>"16
v64@0:8Q16Q24Q32@"<MTLBuffer>"40Q48Q56
v56@0:8Q16Q24Q32@"<MTLBuffer>"40Q48
v80@0:8Q16Q24Q32@"<MTLBuffer>"40Q48Q56q64Q72
v40@0:8Q16@"<MTLBuffer>"24Q32
v64@0:8Q16Q24@"<MTLBuffer>"32Q40@"<MTLBuffer>"48Q56
v32@0:8@"<MTLFence>"16Q24
v72@0:8Q16Q24Q32@"<MTLBuffer>"40Q48Q56Q64
v56@0:8Q16@"<MTLBuffer>"24Q32@"<MTLBuffer>"40Q48
v88@0:8Q16Q24Q32@"<MTLBuffer>"40Q48@"<MTLBuffer>"56Q64Q72Q80
v72@0:8Q16@"<MTLBuffer>"24Q32@"<MTLBuffer>"40Q48@"<MTLBuffer>"56Q64
v40@0:8@"<MTLResource>"16Q24Q32
v32@0:8@"<MTLHeap>"16Q24
v24@0:8@?16
v48@0:8@16Q24@32Q40
v40@0:8f16f20f24f28Q32
v44@0:8@16f24f28f32Q36
v28@0:8B16Q20
v56@0:8@16Q24Q32Q40Q48
v60@0:8@16Q24Q32Q40B48Q52
v48@0:8@16Q24Q32Q40
v52@0:8@16Q24Q32Q40B48
v88@0:8{?=QQQ}16{?={?=QQQ}{?=QQQ}}40
v24@0:8@?<v@?@"<MTLRenderCommandEncoderSPI>"Q>16
v48@0:8@"<MTLTexture>"16Q24@"<MTLSamplerState>"32Q40
v44@0:8@"<MTLSamplerState>"16f24f28f32Q36
v56@0:8@"<MTLTexture>"16Q24Q32Q40Q48
v60@0:8@"<MTLTexture>"16Q24Q32Q40B48Q52
v48@0:8@"<MTLTexture>"16Q24Q32Q40
v52@0:8@"<MTLTexture>"16Q24Q32Q40B48
v40@0:8@"<MTLResourceGroupSPI>"16Q24Q32
@32@0:8@16@24
@"NSMutableArray"
@"MTLRenderPassDescriptor"
@"<MTLSerializerRenderPipelineState>"
@"<MTLSerializerDepthStencilState>"
@"<MTLSerializerBuffer>"
{?=QQ}24@0:8@16
{?=QQ}32@0:8Q16Q24
@32@0:8Q16Q24
@40@0:8r^v16Q24Q32
@48@0:8^v16Q24Q32@?40
@40@0:8@16^{__IOSurface=}24Q32
@32@0:8@16^@24
@40@0:8@16@24^@32
v40@0:8@16@24@?32
v32@0:8@16@?24
@48@0:8@16Q24^@32^@40
B24@0:8Q16
B24@0:8q16
v32@0:8^{?=ff}16Q24
@40@0:8@16Q24Q32
{?=QQQ}40@0:8Q16Q24Q32
v32@0:8^Q16^Q24
{?=QQQ}24@0:8@16
{?=QQQ}16@0:8
v72@0:8r^{?={?=QQQ}{?=QQQ}}16^{?={?=QQQ}{?=QQQ}}24{?=QQQ}32Q56Q64
v64@0:8r^{?={?=QQQ}{?=QQQ}}16^{?={?=QQQ}{?=QQQ}}24{?=QQQ}32Q56
@"<MTLCommandQueue>"16@0:8
@"<MTLCommandQueue>"24@0:8Q16
{?=QQ}24@0:8@"MTLTextureDescriptor"16
@"<MTLHeap>"24@0:8@"MTLHeapDescriptor"16
@"<MTLBuffer>"32@0:8Q16Q24
@"<MTLBuffer>"40@0:8r^v16Q24Q32
@"<MTLBuffer>"48@0:8^v16Q24Q32@?<v@?^vQ>40
@"<MTLDepthStencilState>"24@0:8@"MTLDepthStencilDescriptor"16
@"<MTLTexture>"24@0:8@"MTLTextureDescriptor"16
@"<MTLTexture>"40@0:8@"MTLTextureDescriptor"16^{__IOSurface=}24Q32
@"<MTLSamplerState>"24@0:8@"MTLSamplerDescriptor"16
@"<MTLLibrary>"16@0:8
@"<MTLLibrary>"32@0:8@"NSBundle"16^@24
@"<MTLLibrary>"32@0:8@"NSString"16^@24
@"<MTLLibrary>"32@0:8@"NSURL"16^@24
@"<MTLLibrary>"32@0:8@"NSObject<OS_dispatch_data>"16^@24
@"<MTLLibrary>"40@0:8@"NSString"16@"MTLCompileOptions"24^@32
v40@0:8@"NSString"16@"MTLCompileOptions"24@?<v@?@"<MTLLibrary>"@"NSError">32
@"<MTLLibrary>"32@0:8@"MTLStitchedLibraryDescriptor"16^@24
v32@0:8@"MTLStitchedLibraryDescriptor"16@?<v@?@"<MTLLibrary>"@"NSError">24
@"<MTLRenderPipelineState>"32@0:8@"MTLRenderPipelineDescriptor"16^@24
@"<MTLRenderPipelineState>"48@0:8@"MTLRenderPipelineDescriptor"16Q24^@32^@40
v32@0:8@"MTLRenderPipelineDescriptor"16@?<v@?@"<MTLRenderPipelineState>"@"NSError">24
v40@0:8@"MTLRenderPipelineDescriptor"16Q24@?<v@?@"<MTLRenderPipelineState>"@"MTLRenderPipelineReflection"@"NSError">32
@"<MTLComputePipelineState>"32@0:8@"<MTLFunction>"16^@24
@"<MTLComputePipelineState>"48@0:8@"<MTLFunction>"16Q24^@32^@40
v32@0:8@"<MTLFunction>"16@?<v@?@"<MTLComputePipelineState>"@"NSError">24
v40@0:8@"<MTLFunction>"16Q24@?<v@?@"<MTLComputePipelineState>"@"MTLComputePipelineReflection"@"NSError">32
@"<MTLComputePipelineState>"48@0:8@"MTLComputePipelineDescriptor"16Q24^@32^@40
v40@0:8@"MTLComputePipelineDescriptor"16Q24@?<v@?@"<MTLComputePipelineState>"@"MTLComputePipelineReflection"@"NSError">32
@"<MTLFence>"16@0:8
@"<MTLRenderPipelineState>"48@0:8@"MTLTileRenderPipelineDescriptor"16Q24^@32^@40
v40@0:8@"MTLTileRenderPipelineDescriptor"16Q24@?<v@?@"<MTLRenderPipelineState>"@"MTLRenderPipelineReflection"@"NSError">32
@"<MTLArgumentEncoder>"24@0:8@"NSArray"16
@"<MTLRasterizationRateMap>"24@0:8@"MTLRasterizationRateMapDescriptor"16
@"<MTLIndirectCommandBuffer>"40@0:8@"MTLIndirectCommandBufferDescriptor"16Q24Q32
@"<MTLEvent>"16@0:8
@"<MTLSharedEvent>"16@0:8
@"<MTLSharedEvent>"24@0:8@"MTLSharedEventHandle"16
@"<MTLCounterSampleBuffer>"32@0:8@"MTLCounterSampleBufferDescriptor"16^@24
@"<MTLDynamicLibrary>"32@0:8@"<MTLLibrary>"16^@24
@"<MTLDynamicLibrary>"32@0:8@"NSURL"16^@24
@"<MTLBinaryArchive>"32@0:8@"MTLBinaryArchiveDescriptor"16^@24
{?=QQQ}24@0:8@"MTLAccelerationStructureDescriptor"16
@"<MTLAccelerationStructure>"24@0:8Q16
@"<MTLAccelerationStructure>"24@0:8@"MTLAccelerationStructureDescriptor"16
@"NSArray"16@0:8
@24@0:8^{__IOSurface=}16
{?=II}16@0:8
@20@0:8I16
B44@0:8^@16Q24^Q32i40
B24@0:8{?=II}16
@40@0:8@16Q24^@32
@48@0:8@16@24Q32^@40
B36@0:8@16B24^@28
B32@0:8@16^@24
@40@0:8Q16@24^@32
r^{MTLTargetDeviceArch=QI*}16@0:8
r^{?=IIIIIIIIIIIIIIIIIIIIIIIIIIffIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIQ}16@0:8
f16@0:8
{IndirectArgumentBufferCapabilities=b1b1b1b29}16@0:8
q16@0:8
v24@0:8^{MPSFunctionTable=}16
v40@0:8Q16^Q24Q32
B32@0:8{_NSRange=QQ}16
@40@0:8Q16Q24Q32
@48@0:8r^v16Q24Q32Q40
@56@0:8^v16Q24Q32Q40@?48
B40@0:8^{?=III}16Q24Q32
@32@0:8^v16Q24
@40@0:8^v16@24Q32
^v16@0:8
^{os_unfair_lock_s=I}16@0:8
@40@0:8@16r^{?=BQ^{?}}24^@32
@48@0:8^v16Q24@32@?40
{?=QQQ}48@0:8Q16Q24Q32Q40
v48@0:8@16@24@32^@40
v40@0:8@16@24^@32
@32@0:8r^@16Q24
v24@0:8@"<MTLDeviceSPI>"16
@"<MTLBuffer>"24@0:8^{__IOSurface=}16
B24@0:8@"NSString"16
@"<MTLCommandQueue>"24@0:8@"MTLCommandQueueDescriptor"16
@"_MTLIndirectArgumentBufferLayout"24@0:8@"MTLStructType"16
@"<MTLArgumentEncoder>"24@0:8@"_MTLIndirectArgumentBufferLayout"16
@"<MTLBuffer>"40@0:8@"MTLIndirectCommandBufferDescriptor"16Q24Q32
@"<MTLIndirectRenderCommandEncoder>"24@0:8@"<MTLBuffer>"16
@"<MTLIndirectComputeCommandEncoder>"24@0:8@"<MTLBuffer>"16
@"<MTLSharedEvent>"20@0:8I16
@"<MTLAccelerationStructure>"32@0:8Q16Q24
@"<MTLAccelerationStructure>"32@0:8@"<MTLBuffer>"16Q24
@"<MTLDynamicLibrary>"40@0:8@"<MTLLibrary>"16@"MTLComputePipelineDescriptor"24^@32
@"<MTLDynamicLibrary>"40@0:8@"NSURL"16Q24^@32
@"NSArray"32@0:8@"MTLComputePipelineDescriptor"16^@24
@"NSArray"40@0:8@"MTLComputePipelineDescriptor"16Q24^@32
@"NSArray"40@0:8@"MTLFunction"16@"NSArray"24^@32
@"NSArray"48@0:8@"MTLFunction"16@"NSArray"24Q32^@40
B36@0:8@"<MTLLibrary>"16B24^@28
B32@0:8@"NSURL"16^@24
@"<MTLBinaryArchive>"40@0:8Q16@"NSURL"24^@32
@"<MTLVisibleFunctionTable>"24@0:8@"MTLVisibleFunctionTableDescriptor"16
@"<MTLIntersectionFunctionTable>"24@0:8@"MTLIntersectionFunctionTableDescriptor"16
@"MTLTargetDeviceArchitecture"16@0:8
@"MTLGPUBVHBuilder"16@0:8
@"NSDictionary"16@0:8
v24@0:8@"NSDictionary"16
@"NSObject<OS_dispatch_data>"16@0:8
v24@0:8@"NSObject<OS_dispatch_data>"16
@"<MTLBuffer>"40@0:8Q16Q24Q32
@"<MTLBuffer>"48@0:8r^v16Q24Q32Q40
@"<MTLBuffer>"56@0:8^v16Q24Q32Q40@?<v@?^vQ>48
@"<MTLBuffer>"24@0:8@"MTLBufferDescriptor"16
@"<MTLLateEvalEvent>"16@0:8
@"<MTLComputePipelineState>"32@0:8@"MTLComputePipelineDescriptor"16^@24
v32@0:8@"MTLComputePipelineDescriptor"16@?<v@?@"<MTLComputePipelineState>"@"NSError">24
@"<MTLRenderPipelineState>"32@0:8@"MTLTileRenderPipelineDescriptor"16^@24
v32@0:8@"MTLTileRenderPipelineDescriptor"16@?<v@?@"<MTLRenderPipelineState>"@"NSError">24
@"<MTLFunction>"32@0:8^v16Q24
@"<MTLFunction>"40@0:8^v16@"NSObject<OS_dispatch_data>"24Q32
v24@0:8@"MTLGPUBVHBuilder"16
@"<MTLIndirectArgumentEncoder>"24@0:8@"NSArray"16
@"<MTLComputePipelineState>"40@0:8@"NSArray"16r^{?=BQ^{?}}24^@32
@"<MTLLibrary>"40@0:8@"NSString"16@"NSArray"24^@32
@"<MTLLibrary>"40@0:8@"NSArray"16@"NSArray"24^@32
@"<MTLLibrary>"32@0:8@"MTLStitchedLibraryDescriptorSPI"16^@24
@"NSString"24@0:8@"NSArray"16
@"<MTLLibrary>"40@0:8@"NSArray"16r^{?=BQ^{?}}24^@32
@"<MTLPipelineLibrarySPI>"32@0:8@"NSString"16^@24
@"NSObject<OS_dispatch_data>"24@0:8@"MTLRenderPipelineDescriptor"16
@"NSObject<OS_dispatch_data>"24@0:8@"MTLComputePipelineDescriptor"16
@"MTLRenderPipelineDescriptor"32@0:8@"NSObject<OS_dispatch_data>"16@"<MTLDeserializationContext>"24
@"MTLComputePipelineDescriptor"32@0:8@"NSObject<OS_dispatch_data>"16@"<MTLDeserializationContext>"24
@"NSObject<OS_dispatch_data>"24@0:8@"MTLStructType"16
@"NSObject<OS_dispatch_data>"28@0:8@"MTLStructType"16I24
@"<MTLTexture>"48@0:8^v16Q24@"MTLTextureDescriptor"32@?<v@?^vQ>40
@"<MTLTextureLayout>"28@0:8@"MTLTextureDescriptor"16B24
@"<MTLIndirectArgumentEncoder>"24@0:8@"_MTLIndirectArgumentBufferLayout"16
v48@0:8@"<MTLFunction>"16@"MTLFunctionDescriptor"24@"<MTLBinaryArchive>"32^@40
v40@0:8@"<MTLFunction>"16@"MTLFunctionDescriptor"24^@32
v40@0:8@"<MTLFunction>"16@"MTLFunctionDescriptor"24@?<v@?@"NSError">32
@"<MTLResourceGroupSPI>"32@0:8r^@16Q24
v32@0:8@"NSObject<OS_dispatch_data>"16@"NSMutableDictionary"24
@52@0:8Q16Q24^v32B40@?44
v52@0:8I16@20@28Q36@?44
^v48@0:8@16Q24@32^Q40
v32@0:8^v16Q24
@48@0:8@16@24@32^@40
{?=b1b1b1b1b1b1b1b1b1b55}32@0:8@16@24
@48@0:8@16@24@32@40
@64@0:8^v16Q24@?32@40Q48Q56
@56@0:8^v16Q24@32Q40Q48
{MTLSimConnection="_connection"@"NSObject<OS_xpc_object>""_serialQueue"@"NSObject<OS_dispatch_queue>"}
@"MTLSerializer"
{unordered_map<unsigned int, MTLSimCommandBuffer *, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<const unsigned int, MTLSimCommandBuffer *>>>="__table_"{__hash_table<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>, std::allocator<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>>="__value_"f}}}
@"MTLResourceListPool"
@"<MTLDeviceSPI>"
{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}
{?="width"Q"height"Q"depth"Q}
@32@0:8Q16^@24
@"<MTLArgumentEncoder>"32@0:8Q16^@24
@36@0:8@16Q24I32
@"NSString"
@"NSArray"
@"NSDictionary"
@"MTLSimFunction"
@"<MTLRenderCommandEncoder>"16@0:8
@32@0:8^(?={?=b8b24IQQ}{?=b8b24IQQ})16Q24
@"<MTLRenderCommandEncoder>"32@0:8^(?={?=b8b24IQQ}{?=b8b24IQQ})16Q24
@"<MTLHeap>"16@0:8
B32@0:8r^@16Q24
i16@0:8
v20@0:8i16
i20@0:8I16
B24@0:8@"<MTLResource>"16
v32@0:8{_NSRange=QQ}16
@"<MTLTexture>"40@0:8@"MTLTextureDescriptor"16Q24Q32
v40@0:8@"NSString"16{_NSRange=QQ}24
@48@0:8@16Q24Q32Q40
^{__IOSurface=}16@0:8
@"<MTLTexture>"48@0:8@"MTLTextureDescriptor"16Q24Q32Q40
@76@0:8@16I24^v28^v36Q44Q52@60@?68
^{__IOSurface=}
@32@0:8Q16@24
^{BufferStorageEntry=@Q^{BufferStorageEntry}}16@0:8
v24@0:8^{BufferStorageEntry=@Q^{BufferStorageEntry}}16
^{BufferStorageEntry=@Q^{BufferStorageEntry}}
@"NSObject<OS_dispatch_semaphore>"
@"<MTLTexture>"32@0:8@"MTLTextureDescriptor"16Q24
@36@0:8@16@24I32
@44@0:8Q16Q24Q32B40
@36@0:8@16Q24B32
v32@0:8@16d24
d16@0:8
v24@0:8@?<v@?@"<MTLCommandBuffer>">16
v24@0:8@"<MTLDrawable>"16
v32@0:8@"<MTLDrawable>"16d24
@"<MTLBlitCommandEncoder>"16@0:8
@"<MTLRenderCommandEncoder>"24@0:8@"MTLRenderPassDescriptor"16
@"<MTLComputeCommandEncoder>"24@0:8@"MTLComputePassDescriptor"16
@"<MTLBlitCommandEncoder>"24@0:8@"MTLBlitPassDescriptor"16
@"<MTLComputeCommandEncoder>"16@0:8
@"<MTLComputeCommandEncoder>"24@0:8Q16
v32@0:8@"<MTLEvent>"16Q24
@"<MTLParallelRenderCommandEncoder>"24@0:8@"MTLRenderPassDescriptor"16
@"<MTLResourceStateCommandEncoder>"16@0:8
@"<MTLResourceStateCommandEncoder>"24@0:8@"MTLResourceStatePassDescriptor"16
@"<MTLAccelerationStructureCommandEncoder>"16@0:8
@"<MTLLogContainer>"16@0:8
@"NSError"16@0:8
v56@0:8@16Q24r^Q32r^Q40Q48
^v24@0:8^Q16
@40@0:8@16^(?={?=b8b24IQQ}{?=b8b24IQQ})24Q32
@40@0:8Q16^(?={?=b8b24IQQ}{?=b8b24IQQ})24Q32
v36@0:8@16Q24I32
v40@0:8Q16r^@24Q32
v24@0:8@"<MTLResourceGroupSPI>"16
v48@0:8@"<MTLResourceGroupSPI>"16Q24Q32Q40
v56@0:8@"<MTLResourceGroupSPI>"16Q24r^Q32r^Q40Q48
@"NSMutableDictionary"16@0:8
@"<MTLRenderCommandEncoder>"40@0:8@"MTLRenderPassDescriptor"16^(?={?=b8b24IQQ}{?=b8b24IQQ})24Q32
@"<MTLComputeCommandEncoder>"32@0:8^(?={?=b8b24IQQ}{?=b8b24IQQ})16Q24
@"<MTLComputeCommandEncoder>"40@0:8Q16^(?={?=b8b24IQQ}{?=b8b24IQQ})24Q32
@"<MTLComputeCommandEncoder>"40@0:8@"MTLComputePassDescriptor"16^(?={?=b8b24IQQ}{?=b8b24IQQ})24Q32
@"<MTLDebugCommandEncoder>"16@0:8
v36@0:8@"<MTLEvent>"16Q24I32
B28@0:8@16B24
^v48@0:8Q16Q24^@32^Q40
@?16@0:8
B28@0:8@"<MTLSerializerResource>"16B24
B24@0:8@"<MTLSerializerState>"16
@?<v@?>16@0:8
v24@0:8@?<v@?>16
v24@0:8@"<MTLSerializerCommandStream>"16
^{StorageEntry=Q^v@^{StorageEntry}}
@"MTLResourceList"
@"<MTLCommandBuffer>"16@0:8
@"<MTLCommandBuffer>"24@0:8@"MTLCommandBufferDescriptor"16
B28@0:8Q16S24
i24@0:8@16
i32@0:8@16Q24
v24@0:8@"NSObject<OS_dispatch_queue>"16
@"NSObject<OS_dispatch_queue>"16@0:8
@"MTLCommandQueueSPIStats"16@0:8
i24@0:8@"NSArray"16
i32@0:8@"NSArray"16Q24
@"NSArray"24@0:8@"NSArray"16
v24@0:8@?<v@?@"<MTLCommandBuffer>"@"NSData"Q>16
@36@0:8@16I24@28
^{StorageEntry=Q^v@^{StorageEntry}}16@0:8
v24@0:8^{StorageEntry=Q^v@^{StorageEntry}}16
@"MTLSimCommandStoragePool"
@"MTLSimBufferStoragePool"
Q40@0:8{?=QQQ}16
@"<MTLFunctionHandle>"24@0:8@"<MTLFunction>"16
@"<MTLComputePipelineState>"32@0:8@"NSArray"16^@24
v40@0:8I16^I20I28^I32
@"<MTLFunctionHandle>"32@0:8@"<MTLFunction>"16Q24
@"<MTLVisibleFunctionTable>"32@0:8@"MTLVisibleFunctionTableDescriptor"16Q24
@"<MTLIntersectionFunctionTable>"32@0:8@"MTLIntersectionFunctionTableDescriptor"16Q24
@"<MTLRenderPipelineState>"32@0:8@"MTLRenderPipelineFunctionsDescriptor"16^@24
@"<MTLRenderPipelineState>"40@0:8@"NSArray"16@"NSArray"24^@32
@"<MTLRenderPipelineState>"32@0:8@"NSArray"16^@24
@"MTLDebugInstrumentationData"16@0:8
v64@0:8I16^I20I28^I32I40^I44I52^I56
@44@0:8I16Q20@28@36
B36@0:8r^@16Q24B32
@"MTLSimHeap"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
v80@0:8r*16*24Q32Q40Q48Q56Q64Q72
Q80@0:8{?={?=QQQ}{?=QQQ}}16Q64Q72
@"<MTLBuffer>"16@0:8
@"<MTLTexture>"16@0:8
v104@0:8^v16Q24Q32{?={?=QQQ}{?=QQQ}}40Q88Q96
v104@0:8{?={?=QQQ}{?=QQQ}}16Q64Q72r^v80Q88Q96
v88@0:8^v16Q24{?={?=QQQ}{?=QQQ}}32Q80
v88@0:8{?={?=QQQ}{?=QQQ}}16Q64r^v72Q80
@64@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48
@68@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48{?=CCCC}64
{?=CCCC}16@0:8
@"<MTLTexture>"24@0:8Q16
@"<MTLTexture>"64@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48
@"<MTLTexture>"68@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48{?=CCCC}64
@"<MTLResource>"16@0:8
@48@0:8Q16Q24Q32Q40
@72@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48Q64
@76@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48{?=CCCC}64Q68
@"<MTLTexture>"48@0:8Q16Q24Q32Q40
@"<MTLTexture>"32@0:8Q16Q24
@"<MTLTexture>"72@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48Q64
@"<MTLTexture>"76@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48{?=CCCC}64Q68
@"NSString"24@0:8Q16
@96@0:8@16Q24Q32Q40{_NSRange=QQ}48{_NSRange=QQ}64{?=CCCC}80B84I88B92
@92@0:8@16Q24Q32Q40{_NSRange=QQ}48{_NSRange=QQ}64{?=CCCC}80I84B88
@48@0:8@16Q24Q32I40B44
@52@0:8@16Q24Q32@40I48
@68@0:8@16Q24^{__IOSurface=}32Q40I48@52@60
@72@0:8@16Q24^{__IOSurface=}32Q40I48@52@60B68
@28@0:8Q16B24
@"MTLSimTexture"
@"<MTLTexture>"
@"<MTLResource>"
