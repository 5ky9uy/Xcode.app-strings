v16@?0@"<MTLSerializerAllocator>"8
v24@?0r^v8Q16
messageType
command
replyData
This object may only be decoded by an NSXPCCoder.
label
This object may only be encoded by an NSXPCCoder.
eventRef
error
eventPort
labelTraceID
v16@?0@"NSObject<OS_xpc_object>"8
status
commandBufferRef
startTime
endTime
notificationRef
command buffers
Nov  5 2022
04:51:29
simulatorDummyPlugin
v8@?0
-[MTLSimDevice sparseTileSizeWithTextureType:pixelFormat:sampleCount:]
not supported in the simulator
v24@?0^v8Q16
length
options
bufferIndex
sharedMem
bufferRef
-[MTLSimDevice newHeapWithDescriptor:]
MTLStorageModePrivate is required for heaps
-[MTLSimDevice newIndirectCommandBufferWithDescriptor:maxCommandCount:options:]
-[MTLSimDevice newTextureWithDescriptor:]
texture rotation is not supported in the simulator
-[MTLSimDevice newTextureWithDescriptor:iosurface:plane:]
iosurface
UseSimulatorSharedTextures
com.apple.Metal
-[MTLSimDevice wrapRenderState:descriptor:]
functionIR
-[MTLSimDevice wrapComputeState:descriptor:]
-[MTLSimDevice newIndirectCommandBufferWithDescriptor:maxCount:options:]
-[MTLSimDevice newIndirectComputeCommandEncoderWithBuffer:]
-[MTLSimDevice newIndirectRenderCommandEncoderWithBuffer:]
-[MTLSimDevice newTiledTextureWithBytesNoCopy:length:deallocator:descriptor:offset:bytesPerRow:]
-[MTLSimDevice newTiledTextureWithBytesNoCopy:length:descriptor:offset:bytesPerRow:]
simulator
Apple
-[MTLSimDevice newCommandQueueWithDescriptor:]
Descriptor cannot be nil
maxCommandBufferCount
commandQueueRef
-[MTLSimDevice newBufferWithIOSurface:]
-[MTLSimDevice minimumLinearTextureAlignmentForPixelFormat:]
%s is not supported on this device.
Linear textures do not support compressed pixel formats
Linear textures do not support depth/stencil pixel formats
-[MTLSimDevice minimumTextureBufferAlignmentForPixelFormat:]
-[MTLSimDevice newRenderPipelineStateWithTileDescriptor:options:completionHandler:]
-[MTLSimDevice newRenderPipelineStateWithTileDescriptor:options:reflection:error:]
-[MTLSimDevice newRenderPipelineStateWithMeshDescriptor:error:]
-[MTLSimDevice newRenderPipelineStateWithMeshDescriptor:options:reflection:error:]
-[MTLSimDevice newRenderPipelineStateWithMeshDescriptor:completionHandler:]
-[MTLSimDevice newRenderPipelineStateWithMeshDescriptor:options:completionHandler:]
EnableSimApple5
fatalError
XPCReplyCheck
connection Queue
connectionType
processRef
version
registryID
hostFeatureProfile
com.apple.metal.simulator
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
UNKNOWN XPC_TYPE_ERROR
XPC_ERROR_TERMINATION_IMMINENT
XPC_ERROR_CONNECTION_INVALID
XPC_ERROR_CONNECTION_INTERRUPTED
function variant
-[MTLSimBuffer initWithDevice:bufferRef:content:pointer:length:options:heap:deallocator:]
storageModePrivate incompatible with ...WithBytes variant of newBuffer
Invalid cacheMode %u
Invalid storageMode %u
%@%@
label =
<none>
length =
cpuCacheMode =
storageMode =
hazardTrackingMode =
resourceOptions =
purgeableState =
-[MTLSimBuffer newTextureWithDescriptor:offset:bytesPerRow:]
Linear texture can only be created on buffers with MTLStorageModePrivate in the simulator
Linear textures from XR10 is not supported in the simulator
-[MTLSimRenderCommandEncoder setPrimitiveRestartEnabled:]
setPrimitiveRestartEnabled is not supported in the simulator
-[MTLSimCommandBuffer resourceStateCommandEncoderWithDescriptor:]
-[MTLSimCommandBuffer resourceStateCommandEncoder]
-[MTLSimCommandBuffer setProtectionOptions:]
setProtectionOptions: with uncommitted encoder
commandQueue
segments
com.apple.MTLSimDriver
-[MTLSimBlitCommandEncoder copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:]_block_invoke
Unable to load Simulator decoder Metal library: %@
pvrtc2
pvrtc4
DecodeEAC_R11Unorm
DecodeEAC_R11Snorm
DecodeEAC_RG11Unorm
DecodeEAC_RG11Snorm
DecodeEAC_RGBA8
DecodeETC2_RGB8
DecodeETC2_RGB8A1
DecodeBGRA_XR10
DecodeBGR_XR10
astc
Error creating kernel '%@': %@
Error creating pipeline state %@ from %@
v16@?0@"<MTLCommandBuffer>"8
-[MTLSimTexture initWithTextureInternal:pixelFormat:decompressedPixelFormat:textureType:levels:slices:swizzle:compressedView:textureRef:isInternalTextureView:]
Device does not support texture swizzle.
Pixel format views involving XR10 are not supported in the simulator
-[MTLSimTexture initWithDescriptor:decompressedPixelFormat:iosurface:plane:textureRef:heap:device:]
IOSurface backed XR10 textures are not supported in the simulator
-[MTLSimTexture initWithDescriptor:decompressedPixelFormat:iosurface:plane:textureRef:heap:device:shareable:]
Shared texture feature not available in simulator
textureType =
pixelFormat =
decompressedPixelFormat =
width =
height =
depth =
arrayLength =
mipmapLevelCount =
sampleCount =
usage =
shareable =
framebufferOnly =
swizzle =
parentTexture =
<null>
parentRelativeLevel =
parentRelativeSlice =
buffer =
bufferOffset =
bufferBytesPerRow =
allowGPUOptimizedContents =
-[MTLSimTexture newTextureViewWithPixelFormat:textureType:levels:slices:swizzle:]
Ga==
@0`@
?0`@
event notification reference not found
Compiler failed to build request
Compiler failed with XPC_ERROR_CONNECTION_INTERRUPTED
Compiler failed with XPC_ERROR_CONNECTION_INVALID
Compiler failed with XPC_ERROR_TERMINATION_IMMINENT
Compiler failed with unknown XPC error
Decompression failure: unable to allocate decoder from at_encoder_create()
Decompression failure: error %ld returned from at_encoder_decompress_texels()
MTLSimIndirectArgumentBufferLayout
MTLSimArgumentEncoder
MTLArgumentEncoderSPI
MTLArgumentEncoder
NSObject
MTLSimOperation
MTLSerializerAllocator
MTLSimSharedEventHandle
NSSecureCoding
NSCoding
MTLSimSharedEvent
MTLSimEvent
MTLEvent
MTLSerializerEvent
MTLSerializerState
MTLSharedEvent
MTLSimDevice
MTLDeviceSPI
MTLDevice
MTLSimFunction
MTLFunction
MTLSimFunctionVariant
MTLSimFence
MTLFence
MTLSerializerFence
MTLSimBuffer
MTLSerializerBuffer
MTLSerializerResource
MTLBufferSPI
MTLResourceSPI
MTLResource
MTLBuffer
MTLSimBufferStoragePool
MTLSimRenderCommandEncoder
MTLSimHeap
MTLHeapSPI
MTLHeap
MTLSerializerHeap
MTLSimCommandBuffer
MTLCommandBufferSPI
MTLCommandBuffer
MTLSerializerCommandStream
MTLSimCommandQueue
MTLCommandQueueSPI
MTLCommandQueue
MTLSimBlitCommandEncoder
MTLSimCommandStoragePool
MTLSimComputePipelineState
MTLComputePipelineStateSPI
MTLComputePipelineState
MTLPipelineStateWithProgramAddressTable
MTLSerializerComputePipelineState
MTLSimDepthStencilState
MTLDepthStencilStateSPI
MTLDepthStencilState
MTLSerializerDepthStencilState
MTLSimRenderPipelineState
MTLRenderPipelineStateSPI
MTLRenderPipelineState
MTLSerializerRenderPipelineState
MTLSimResource
MTLSimSamplerState
MTLSamplerStateSPI
MTLSamplerState
MTLSerializerSamplerState
MTLSimTexture
MTLSerializerTexture
MTLTextureSPI
MTLTexture
MTLTextureImplementation
init
serializer
deleteArgumentBufferLayoutRef:allocator:
dealloc
argumentBufferLayoutConstantAtIndex:layoutRef:allocator:
resourceConnection
data
initWithDevice:reference:data:
bufferLayoutMatchesFrontEndLayout
encodedLength
alignment
constantOffsetAtIndex:
argumentBufferLayoutRef
_reference
_device
_bufferLayoutMatchesFrontEndLayout
_encodedLength
_alignment
TI,R,D
deleteArgumentEncoderRef:allocator:
argumentEncoderSetArgumentBuffer:offset:encoderRef:allocator:
doesNotRecognizeSelector:
setBuffers:offsets:withRange:
argumentEncoderSetBuffers:offsets:withRange:encoderRef:allocator:
setTextures:withRange:
argumentEncoderSetTextures:withRange:encoderRef:allocator:
setSamplerStates:withRange:
argumentEncoderSetSamplerStates:withRange:encoderRef:allocator:
bufferRef
argumentEncoderConstantAtIndex:encoderRef:bufferRef:allocator:
contents
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
setArgumentBuffer:offset:
setArgumentBuffer:startOffset:arrayElement:
setBuffer:offset:atIndex:
setTexture:atIndex:
setSamplerState:atIndex:
constantDataAtIndex:
setRenderPipelineState:atIndex:
setRenderPipelineStates:withRange:
setComputePipelineState:atIndex:
setComputePipelineStates:withRange:
setIndirectCommandBuffer:atIndex:
setIndirectCommandBuffers:withRange:
setAccelerationStructure:atIndex:
newArgumentEncoderForBufferAtIndex:
setVisibleFunctionTable:atIndex:
setVisibleFunctionTables:withRange:
setIntersectionFunctionTable:atIndex:
setIntersectionFunctionTables:withRange:
device
label
setLabel:
T@"<MTLDevice>",R
T@"NSString",C
layout
T@"_MTLIndirectArgumentBufferLayout",R,N
initWithDevice:reference:layout:data:
argumentEncoderRef
setVisibleFunctionTable:atBufferIndex:
setVisibleFunctionTables:withBufferRange:
setIntersectionFunctionTable:atBufferIndex:
setIntersectionFunctionTables:withBufferRange:
_layout
_argumentBuffer
_offset
allocateOperationBytes:
_data
T@"NSObject<OS_dispatch_data>",R,V_data
copy
raise:format:
decodeXPCObjectOfType:forKey:
decodeObjectOfClass:forKey:
decodeIntegerForKey:
encodeXPCObject:forKey:
encodeObject:forKey:
encodeInteger:forKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
initWithEventPort:labelTraceID:label:
deleteEventRef:allocator:
deserializerSupportsSharedEvents
notifyListenerForEventRef:atValue:allocator:
registerEventNotification:listener:event:value:block:
mainConnection
sharedEventSignaledValueForEventRef:allocator:
sharedEventSetSignaledValue:eventRef:allocator:
sharedEventWaitSignaledValue:timeoutMS:eventRef:allocator:
eventRef
notifyListener:atValue:block:
newSharedEventHandle
signaledValue
setSignaledValue:
initWithDevice:reference:
waitSignaledValue:timeoutMS:
_signaledValue
TQ,D
initWithDomain:code:userInfo:
commandBufferForReference:
didScheduleWithStartTime:endTime:error:
commandQueue
commandBufferDidComplete:startTime:completionTime:error:
dispatchNotificationWithReference:
getNewResourceID
initWithResourceListCapacity:
initWithDevice:deserializerGeneratesResourceRefs:deserializerVersion:
featureProfile
setReflectionSerializationVersion:
getComputeInfoWithAllocator:
_deviceWrapper
initWithTargetData:cacheUUID:pluginPath:device:compilerFlags:
heapBufferSizeAndAlignWithLength:options:allocator:
validateWithDevice:
pixelFormat
getDecompressedFormat:
setPixelFormat:
usage
setUsage:
heapTextureSizeAndAlignWithDescriptor:allocator:
newCommandBufferRef
releaseCommandBufferRef:
newBufferRef
releaseBufferRef:
deserializerGeneratesResourceRefs
initWithDevice:bufferRef:content:pointer:length:options:heap:deallocator:
newBufferWithLength:options:pointer:copyBytes:deallocator:
newDepthStencilStateWithDescriptor:
initWithDescriptor:reference:device:
newFenceWithAllocator:
handleNewObjectReplyData:replyDataSize:
initWithDevice:fenceRef:
releaseFenceRef:
storageMode
newHeapWithDescriptor:allocator:
initWithDescriptor:device:heapRef:
releaseHeapRef:
dispatchQueue
newSamplerStateWithDescriptor:
setStorageMode:
rotation
newTextureWithDescriptor:
initWithDescriptor:decompressedPixelFormat:iosurface:plane:textureRef:heap:device:
width
newIOSurfaceTextureWithDescriptor:plane:allocator:
releaseTextureRef:
initWithUTF8String:
newFunctionWithIR:
initWithDevice:functionType:functionRef:
initWithFunction:compilerOutput:
newFunctionVariantWithCompilerOutput:functionType:
vertexFunction
function
setVertexFunction:
fragmentFunction
setFragmentFunction:
serializeRenderPipelineDescriptor:
newRenderPipelineStateWithSerializedDescriptor:allocator:
compilerConnection
handleNewObjectReplyData:replyDataSize:errorMessage:
initWithDevice:pipelineRef:descriptor:
releaseRenderPipelineStateRef:
dictionaryWithObjects:forKeys:count:
setObject:forKeyedSubscript:
computeFunction
setComputeFunction:
serializeComputePipelineDescriptor:
newComputePipelineStateWithSerializedDescriptor:allocator:
computePipelineWithReplyData:replyDataSize:pipelineInfo:errorMessage:
maxTotalComputeThreadsPerThreadgroup
setMaxTotalThreadsPerThreadgroup:
setStaticThreadgroupMemoryLength:
setThreadExecutionWidth:
setSupportIndirectCommandBuffers:
releaseComputePipelineStateRef:
newArgumentBufferLayoutWithStructType:allocator:
payloadFromReplyData:replyDataSize:
releaseArgumentBufferLayoutRef:
newArgumentEncoderWithLayout:allocator:
releaseArgumentEncoderRef:
newCommandQueueRef
maxCommandBufferCount
initWithDevice:commandQueueRef:descriptor:
releaseCommandQueueRef:
preprocessorMacros
count
countByEnumeratingWithState:objects:count:
objectForKey:
stringValue
UTF8String
fastMathEnabled
languageVersion
debuggingEnabled
optimizationLevel
minimumLinearTextureAlignmentForPixelFormat:allocator:
minimumTextureBufferAlignmentForPixelFormat:allocator:
newSharedEvent
newSharedEventWithAllocator:
releaseEventRef:
newSharedEventWithHandle:allocator:
eventPort
newSharedEventWithMachPort:allocator:
registerDevices
newCommandQueue
newCommandQueueWithMaxCommandBufferCount:
heapTextureSizeAndAlignWithDescriptor:
heapBufferSizeAndAlignWithLength:options:
newHeapWithDescriptor:
newBufferWithLength:options:
newBufferWithBytes:length:options:
newBufferWithBytesNoCopy:length:options:deallocator:
newTextureWithDescriptor:iosurface:plane:
newDefaultLibrary
newDefaultLibraryWithBundle:error:
newLibraryWithFile:error:
newLibraryWithURL:error:
newLibraryWithData:error:
newLibraryWithSource:options:error:
newLibraryWithSource:options:completionHandler:
newLibraryWithStitchedDescriptor:error:
newLibraryWithStitchedDescriptor:completionHandler:
newRenderPipelineStateWithDescriptor:error:
newRenderPipelineStateWithDescriptor:options:reflection:error:
newRenderPipelineStateWithDescriptor:completionHandler:
newRenderPipelineStateWithDescriptor:options:completionHandler:
newComputePipelineStateWithFunction:error:
newComputePipelineStateWithFunction:options:reflection:error:
newComputePipelineStateWithFunction:completionHandler:
newComputePipelineStateWithFunction:options:completionHandler:
newComputePipelineStateWithDescriptor:options:reflection:error:
newComputePipelineStateWithDescriptor:options:completionHandler:
newFence
supportsFeatureSet:
supportsFamily:
supportsTextureSampleCount:
minimumLinearTextureAlignmentForPixelFormat:
minimumTextureBufferAlignmentForPixelFormat:
newRenderPipelineStateWithTileDescriptor:options:reflection:error:
newRenderPipelineStateWithTileDescriptor:options:completionHandler:
newRenderPipelineStateWithMeshDescriptor:options:reflection:error:
newRenderPipelineStateWithMeshDescriptor:options:completionHandler:
getDefaultSamplePositions:count:
newArgumentEncoderWithArguments:
supportsRasterizationRateMapWithLayerCount:
newRasterizationRateMapWithDescriptor:
newIndirectCommandBufferWithDescriptor:maxCommandCount:options:
newEvent
newSharedEventWithHandle:
newIOHandleWithURL:error:
newIOCommandQueueWithDescriptor:error:
newIOHandleWithURL:compressionMethod:error:
sparseTileSizeWithTextureType:pixelFormat:sampleCount:
sparseTileSizeInBytesForSparsePageSize:
sparseTileSizeWithTextureType:pixelFormat:sampleCount:sparsePageSize:
newCounterSampleBufferWithDescriptor:error:
sampleTimestamps:gpuTimestamp:
newArgumentEncoderWithBufferBinding:
supportsCounterSampling:
supportsVertexAmplificationCount:
newDynamicLibrary:error:
newDynamicLibraryWithURL:error:
newBinaryArchiveWithDescriptor:error:
accelerationStructureSizesWithDescriptor:
newAccelerationStructureWithSize:
newAccelerationStructureWithDescriptor:
heapAccelerationStructureSizeAndAlignWithSize:
heapAccelerationStructureSizeAndAlignWithDescriptor:
name
registryID
maxThreadsPerThreadgroup
isLowPower
isHeadless
isRemovable
hasUnifiedMemory
recommendedMaxWorkingSetSize
isDepth24Stencil8PixelFormatSupported
readWriteTextureSupport
argumentBuffersSupport
areRasterOrderGroupsSupported
supports32BitFloatFiltering
supports32BitMSAA
supportsQueryTextureLOD
supportsBCTextureCompression
supportsPullModelInterpolation
areBarycentricCoordsSupported
supportsShaderBarycentricCoordinates
currentAllocatedSize
maxThreadgroupMemoryLength
maxArgumentBufferSamplerCount
areProgrammableSamplePositionsSupported
sparseTileSizeInBytes
maxBufferLength
counterSets
supportsDynamicLibraries
supportsRenderDynamicLibraries
supportsRaytracing
supportsFunctionPointers
supportsFunctionPointersFromRender
supportsRaytracingFromRender
supportsPrimitiveMotionBlur
convertSparsePixelRegions:toTileRegions:withTileSize:alignmentMode:numRegions:
convertSparseTileRegions:toPixelRegions:withTileSize:numRegions:
T@"NSString",R
T{?=QQQ},R
lowPower
TB,R,GisLowPower
headless
TB,R,GisHeadless
removable
TB,R,GisRemovable
depth24Stencil8PixelFormatSupported
TB,R,GisDepth24Stencil8PixelFormatSupported
rasterOrderGroupsSupported
TB,R,GareRasterOrderGroupsSupported
barycentricCoordsSupported
TB,R,GareBarycentricCoordsSupported
programmableSamplePositionsSupported
TB,R,GareProgrammableSamplePositionsSupported
T@"NSArray",R
reportLeaks
allowLibrariesFromOtherPlatforms
vendorName
familyName
productName
getMostCompatibleArchitecture:
compilerPropagatesThreadPriority:
_setDeviceWrapper:
deviceSupportsFeatureSet:
deviceOrFeatureProfileSupportsFeatureSet:
minLinearTextureAlignmentForPixelFormat:
newBufferWithIOSurface:
unloadShaderCaches
libraryCacheStats
pipelineCacheStats
copyShaderCacheToPath:
supportsSampleCount:
newCommandQueueWithDescriptor:
newIndirectArgumentBufferLayoutWithStructType:
newArgumentEncoderWithLayout:
supportsTextureWriteRoundingMode:
newIndirectCommandBufferWithDescriptor:maxCount:options:
newIndirectRenderCommandEncoderWithBuffer:
newIndirectComputeCommandEncoderWithBuffer:
newSharedEventWithMachPort:
setResourcesPurgeableState:newState:oldState:count:
newAccelerationStructureWithSize:resourceIndex:
isCompatibleWithAccelerationStructure:
newAccelerationStructureWithBuffer:offset:
newAccelerationStructureWithBuffer:offset:resourceIndex:
deserializePrimitiveAccelerationStructureFromBytes:withDescriptor:
deserializeInstanceAccelerationStructureFromBytes:primitiveAccelerationStructures:withDescriptor:
newAccelerationStructureWithSize:withDescriptor:
deserializePrimitiveAccelerationStructure:fromBytes:withDescriptor:
deserializeInstanceAccelerationStructure:fromBytes:primitiveAccelerationStructures:withDescriptor:
newDynamicLibrary:computeDescriptor:error:
validateDynamicLibraryDescriptor:error:
newDynamicLibraryWithDescriptor:error:
newDynamicLibraryWithURL:options:error:
newDynamicLibraryFromURL:error:
loadDynamicLibrariesForComputeDescriptor:error:
loadDynamicLibrariesForComputeDescriptor:options:error:
loadDynamicLibrariesForFunction:insertLibraries:error:
loadDynamicLibrariesForFunction:insertLibraries:options:error:
validateDynamicLibrary:state:error:
validateDynamicLibraryURL:error:
newBinaryLibraryWithOptions:url:error:
newVisibleFunctionTableWithDescriptor:
newIntersectionFunctionTableWithDescriptor:
newRenderPipelineStateWithMeshDescriptor:error:
newRenderPipelineStateWithMeshDescriptor:completionHandler:
newProfileWithExecutionSize:
supportsBufferlessClientStorageTexture
supportsComputeMemoryBarrier
supportsRenderMemoryBarrier
supportsArgumentBuffersTier2
supportsReadWriteTextureArgumentsTier2
supportsStreamingCodecSignaling
supportsProgrammableSamplePositions
supportsLargeFramebufferConfigs
supportsCustomBorderColor
supportsSamplerAddressModeClampToHalfBorder
supports3DBCTextures
supportsRGBA10A2Gamma
supportsBGR10A2
supportsPrimitiveRestartOverride
supportsGlobalVariableRelocation
supportsGlobalVariableRelocationRender
supportsGlobalVariableRelocationCompute
supportsTLS
supports32bpcMSAATextures
supportsVertexAmplification
supportsPlacementHeaps
supportsOpenCLTextureWriteSwizzles
supportsInt64
supportsFixedLinePointFillDepthGradient
supportsLateEvalEvent
supportsNonZeroTextureWriteLOD
supportsSharedTextureHandles
supportsBufferPrefetchStatistics
supportsLimitedYUVFormats
supportsNonPrivateDepthStencilTextures
supportsNonPrivateMSAATextures
supportsSharedStorageHeapResources
supportsSharedStorageTextures
supportsLinearTextureFromSharedBuffer
supportsPipelineLibraries
supportsFragmentOnlyEncoders
supportsBufferWithIOSurface
supportsProgrammableBlending
supportsRenderToLinearTextures
supportsMemorylessRenderTargets
supportsFastMathInfNaNPropagation
supportsInvariantVertexPosition
supportsShaderLODAverage
supportsRelaxedTextureViewRequirements
supportsSeparateDepthStencil
supportsGPUStatistics
supportsCompressedTextureViewSPI
supportsRenderTargetTextureRotation
supportsDynamicControlPointCount
supportsIABHashForTools
supportsBinaryArchives
supportsBinaryLibraries
supportsDeadlineProfile
supportsFillTexture
supportsSetThreadgroupPackingDisabled
supportsASTCTextureCompression
supportsExtendedYUVFormats
supportsPublicXR10Formats
supportsSRGBwrites
supportsDepthClipMode
supportsPacked32TextureBufferWrites
supports3DASTCTextures
supportsExtendedXR10Formats
supportsFragmentBufferWrites
supportsCountingOcclusionQuery
supportsBaseVertexInstanceDrawing
supportsIndirectDrawAndDispatch
supportsTessellation
supportsReadWriteBufferArguments
supportsArrayOfTextures
supportsArrayOfSamplers
supportsCombinedMSAAStoreAndResolveAction
supportsMutableTier1ArgumentBuffers
supportsSamplerCompareFunction
supportsMSAADepthResolve
supportsMSAAStencilResolve
supportsMSAADepthResolveFilter
supportsGFXIndirectCommandBuffers
supportsCMPIndirectCommandBuffers
supportsIndirectStageInRegion
supportsIndirectTextures
supportsNorm16BCubicFiltering
supportsTextureOutOfBoundsReads
supportsTextureSwizzle
supportsAlphaYUVFormats
supportsMemoryOrderAtomics
supportsQuadGroup
supportsRenderTextureWrites
supportsImageBlocks
supportsTileShaders
supportsImageBlockSampleCoverageControl
supportsNativeHardwareFP16
supportsPostDepthCoverage
supportsMipLevelsSmallerThanBlockSize
supportsNonUniformThreadgroupSize
supportsReadWriteTextureArguments
supportsReadWriteTextureCubeArguments
supportsTextureCubeArray
supportsQuadShufflesAndBroadcast
supportsConcurrentComputeDispatch
supportsRenderPassWithoutRenderTarget
supportsRasterOrderGroups
supportsRasterOrderGroupsColorAttachment
supportsLinearTexture2DArray
supportsNonSquareTileShaders
supportsSeparateVisibilityAndShadingRate
supports2DLinearTexArraySPI
supportsLayeredRendering
supportsViewportAndScissorArray
supportsIndirectTessellation
supportsMSAAStencilResolveFilter
supportsStencilFeedback
supportsFP32TessFactors
supportsUnalignedVertexFetch
supportsSIMDGroup
supportsShaderMinLODClamp
supportsSIMDShufflesAndBroadcast
supportsWritableArrayOfTextures
supportsVariableRateRasterization
supportsYCBCRFormats
supportsYCBCRFormatsPQ
supportsYCBCRFormats12
supportsYCBCRFormatsXR
supportsASTCHDRTextureCompression
supportsSparseTextures
supportsSparseHeaps
supportsIndirectWritableTextures
supportsStatefulDynamicLibraries
supportsSharedFunctionTables
supportsRayTracingExtendedVertexFormats
supportsHeapAccelerationStructureAllocation
supportsRayTracingPerPrimitiveData
supportsRayTracingBuffersFromTables
supportsRayTracingAccelerationStructureCPUDeserialization
supportsBlackOrWhiteSamplerBorderColors
supportsMirrorClampToEdgeSamplerMode
supportsSIMDReduction
supportsDepthClipModeClampExtended
supportsTexture2DMultisampleArray
supportsForceSeamsOnCubemaps
supportsFloat16BCubicFiltering
supportsFloat16InfNanFiltering
supportsRTZRounding
supportsAnisoSampleFix
supportsYCBCRPackedFormatsPQ
supportsYCBCRPackedFormats12
supportsYCBCRPackedFormatsXR
supportsBufferBoundsChecking
supportsForkJoin
supportsDevicePartitioning
supportsComputeCompressedTextureWrite
supportsSIMDGroupMatrix
supportsInterchangeTiled
supportsQuadReduction
supportsSIMDShuffleAndFill
supportsBfloat16Format
supportsSparseDepthAttachments
supportsAtomicUlongVoidMinMax
supportsLossyCompression
supportsMeshShaders
supportsFunctionPointersFromMesh
supportsMeshShadersInICB
supportsCommandBufferJump
supportsStackOverflowErrorCode
supportsRayTracingICBs
supportsExplicitVisibilityGroups
bufferRobustnessSupport
deviceCreationFlags
areGPUAssertionsEnabled
setGPUAssertionsEnabled:
commandBufferErrorOptions
setCommandBufferErrorOptions:
isBCTextureCompressionSupported
targetDeviceInfo
targetDeviceArchitecture
architecture
halfFPConfig
singleFPConfig
doubleFPConfig
metalAssertionsEnabled
setMetalAssertionsEnabled:
simulatorHostFeatureProfile
limits
maxFramebufferStorageBits
linearTextureArrayAlignmentBytes
linearTextureArrayAlignmentSlice
maxTileBuffers
maxTileTextures
maxTileSamplers
maxTileInlineDataSize
minTilePixels
maxColorAttachments
maxVertexAttributes
maxVertexBuffers
maxVertexTextures
maxVertexSamplers
maxVertexInlineDataSize
maxInterpolants
maxFragmentBuffers
maxFragmentTextures
maxFragmentSamplers
maxFragmentInlineDataSize
maxComputeBuffers
maxComputeTextures
maxComputeSamplers
maxComputeInlineDataSize
maxComputeLocalMemorySizes
maxComputeThreadgroupMemory
maxLineWidth
maxPointSize
maxVisibilityQueryOffset
minConstantBufferAlignmentBytes
minBufferNoCopyAlignmentBytes
maxTextureWidth1D
maxTextureWidth2D
maxTextureHeight2D
maxTextureWidth3D
maxTextureHeight3D
maxTextureDepth3D
maxTextureDimensionCube
maxTextureLayers
linearTextureAlignmentBytes
iosurfaceTextureAlignmentBytes
iosurfaceReadOnlyTextureAlignmentBytes
deviceLinearTextureAlignmentBytes
deviceLinearReadOnlyTextureAlignmentBytes
maxFunctionConstantIndices
maxComputeThreadgroupMemoryAlignmentBytes
maxInterpolatedComponents
maxTessellationFactor
maxIndirectBuffers
maxIndirectTextures
maxIndirectSamplers
maxIndirectSamplersPerDevice
maxFenceInstances
maxViewportCount
maxCustomSamplePositions
maxVertexAmplificationFactor
maxVertexAmplificationCount
maxTextureBufferWidth
maxComputeAttributes
maxIOCommandsInFlight
maxPredicatedNestingDepth
maxConstantBufferArguments
supportPriorityBand
sharedMemorySize
dedicatedMemorySize
indirectArgumentBufferCapabilities
isFloat32FilteringSupported
isMsaa32bSupported
isRTZRoundingSupported
defaultTextureWriteRoundingMode
isAnisoSampleFixSupported
isFixedLinePointFillDepthGradientSupported
isLargeMRTSupported
maxRasterizationRateLayerCount
isPlacementHeapSupported
GPUBVHBuilder
requiresRaytracingEmulation
pluginData
setPluginData:
supportsPrimitiveType:
indirectArgumentBufferDecodingData
setIndirectArgumentBufferDecodingData:
setupMPSFunctionTable:
resourcePatchingTypeForResourceType:
reserveResourceIndicesForResourceType:indices:indexCount:
reserveGPUAddressRange:
newBufferWithLength:options:gpuAddress:
newBufferWithBytes:length:options:gpuAddress:
newBufferWithBytesNoCopy:length:options:gpuAddress:deallocator:
newBufferWithDescriptor:
newLateEvalEvent
mapShaderSampleBufferWithBuffer:capacity:size:
unmapShaderSampleBuffer
newComputePipelineStateWithDescriptor:error:
newComputePipelineStateWithDescriptor:completionHandler:
newRenderPipelineStateWithTileDescriptor:error:
newRenderPipelineStateWithTileDescriptor:completionHandler:
newFunctionWithGLCoreIR:functionType:
newFunctionWithGLCoreIR:inputsDescription:functionType:
newFunctionWithGLESIR:functionType:
newFunctionWithGLESIR:inputsDescription:functionType:
newFunctionWithGLIR:functionType:
newFunctionWithGLIR:inputsDescription:functionType:
getShaderCacheKeys
getBVHBuilderLock
getRawBVHBuilderPtr
setRawBVHBuilderPtr:
newIndirectArgumentEncoderWithArguments:
newComputePipelineStateWithImageFilterFunctionsSPI:imageFilterFunctionInfo:error:
newLibraryWithDAG:functions:error:
newLibraryWithGraphs:functions:error:
newLibraryWithGraphsSPI:functions:error:
newLibraryWithStitchedDescriptorSPI:error:
newLibraryWithDescriptor:error:
newLibraryWithDescriptor:completionHandler:
newLibraryWithDescriptorSPI:error:
newDagStringWithGraphs:
newLibraryWithImageFilterFunctionsSPI:imageFilterFunctionInfo:error:
newLibraryWithCIFilters:imageFilterFunctionInfo:error:
newLibraryWithCIFiltersForComputePipeline:imageFilterFunctionInfo:error:
newPipelineLibraryWithFilePath:error:
startCollectingPipelineDescriptors
startCollectingPipelineDescriptorsUsingPrefixForNames:
endCollectingPipelineDescriptors
newRenderPipelineDescriptorWithSerializedData:deserializationContext:
newComputePipelineDescriptorWithSerializedData:deserializationContext:
serializeStructType:
serializeStructType:version:
newStructTypeWithSerializedData:
newTextureWithBytesNoCopy:length:descriptor:deallocator:
newTextureLayoutWithDescriptor:isHeapOrBufferBacked:
newIndirectArgumentEncoderWithLayout:
tileSizeWithSparsePageSize:textureType:pixelFormat:sampleCount:
compileVisibleFunction:withDescriptor:destinationBinaryArchive:error:
compileVisibleFunction:withDescriptor:error:
compileVisibleFunction:withDescriptor:completionHandler:
newResourceGroupFromResources:count:
deserializeCompileTimeStats:addToDictionary:
shaderDebugInfoCaching
setShaderDebugInfoCaching:
isQuadDataSharingSupported
sparseTexturesSupport
isRGB10A2GammaSupported
isCustomBorderColorSupported
isClampToHalfBorderSupported
TB,R,N
gpuAssertionsEnabled
TB,GareGPUAssertionsEnabled,SsetGPUAssertionsEnabled:
TQ,N
BCTextureCompressionSupported
TB,R,GisBCTextureCompressionSupported
Tr^{MTLTargetDeviceArch=QI*},R
T@"MTLTargetDeviceArchitecture",R
T@"MTLArchitecture",R
TB,N
Tr^{?=IIIIIIIIIIIIIIIIIIIIIIIIIIffIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIQ},R
Tf,R
T{IndirectArgumentBufferCapabilities=b1b1b1b29},R
quadDataSharingSupported
TB,R,GisQuadDataSharingSupported
float32FilteringSupported
TB,R,GisFloat32FilteringSupported
msaa32bSupported
TB,R,GisMsaa32bSupported
RTZRoundingSupported
TB,R,GisRTZRoundingSupported
Tq,R
AnisoSampleFixSupported
TB,R,GisAnisoSampleFixSupported
FixedLinePointFillDepthGradientSupported
TB,R,GisFixedLinePointFillDepthGradientSupported
largeMRTSupported
TB,R,GisLargeMRTSupported
RGB10A2GammaSupported
TB,R,GisRGB10A2GammaSupported
CustomBorderColorSupported
TB,R,GisCustomBorderColorSupported
ClampToHalfBorderSupported
TB,R,GisClampToHalfBorderSupported
placementHeapSupported
TB,R,GisPlacementHeapSupported
T@"MTLGPUBVHBuilder",R
T@"NSDictionary",C,N
compiler
registerCommandBuffer:
deserializerSupportsSharedTextures
registerViewTexture:baseTextureView:
wrapRenderState:descriptor:
fragmentFunctionKeyWithRenderPipelineDescriptor:options:previousStateVariant:fragmentKeySize:
vertexFunctionKeyWithRenderPipelineDescriptor:options:nextStageVariant:vertexKeySize:
freeFragmentFunctionKey:fragmentKeySize:
freeVertexFunctionKey:vertexKeySize:
newFragmentVariantWithCompilerOutput:pipelineStatisticsOutput:
newVertexVariantWithCompilerOutput:pipelineStatisticsOutput:
newRenderPipelineWithDescriptor:vertexVariant:fragmentVariant:errorMessage:
pipelineFlagsWithVertexVariant:fragmentVariant:
pipelinePerformanceStatisticsWithVertexVariant:fragmentVariant:vertexCompileTimeOutput:fragmentCompileTimeOutput:
pipelinePerformanceStatisticsWithComputeVariant:compileTimeOutput:
wrapComputeState:descriptor:
newComputeVariantWithCompilerOutput:pipelineStatisticsOutput:
newComputePipelineWithDescriptor:variant:errorMessage:
newTiledTextureWithBytesNoCopy:length:deallocator:descriptor:offset:bytesPerRow:
newTiledTextureWithBytesNoCopy:length:descriptor:offset:bytesPerRow:
llvmVersion
resourceListPool
.cxx_destruct
.cxx_construct
_mainConnection
_resourceConnection
_compilerConnection
_serializer
_processRef
_deserializerVersion
_registryID
_commandBufferQueue
_commandBuffers
_resourceListPool
_notificationMutex
_notifications
_maxThreadsPerThreadgroup
_maxThreadgroupMemoryLength
_hostFeatureProfile
T@"NSObject<OS_xpc_object>",R
T@"MTLSerializer",R,V_serializer
T@"MTLResourceListPool",R,V_resourceListPool
TQ,R,V_hostFeatureProfile
TQ,R,V_registryID
TB,R,GisLowPower,VlowPower
TB,R,GisHeadless,Vheadless
TB,R,GisRemovable,Vremovable
TB,R,VhasUnifiedMemory
TB,R,GisDepth24Stencil8PixelFormatSupported,Vdepth24Stencil8PixelFormatSupported
TQ,R,VcurrentAllocatedSize
TB,R,GareProgrammableSamplePositionsSupported,VprogrammableSamplePositionsSupported
stringWithUTF8String:
deleteFunctionRef:allocator:
newArgumentEncoderWithBufferIndex:
newArgumentEncoderWithBufferIndex:reflection:
functionType
patchType
patchControlPointCount
vertexAttributes
stageInputAttributes
functionConstantsDictionary
options
T@"NSDictionary",R
functionRef
formattedDescription:
_functionRef
_functionType
TI,R
T@"NSString",C,Vlabel
T@"<MTLDevice>",R,V_device
TQ,R,V_functionType
TQ,R,VpatchType
Tq,R,VpatchControlPointCount
T@"NSArray",R,VvertexAttributes
T@"NSArray",R,VstageInputAttributes
T@"NSString",R,Vname
T@"NSDictionary",R,VfunctionConstantsDictionary
initWithCompilerOutput:
_function
T@"MTLSimFunction",R
deleteFenceRef:allocator:
fenceRef
_fenceRef
initWithResourceRef:options:device:heap:
deleteBufferRef:allocator:
stringByPaddingToLength:withString:startingAtIndex:
retainedLabel
numberWithUnsignedLongLong:
cpuCacheMode
hazardTrackingMode
resourceOptions
arrayWithObjects:count:
componentsJoinedByString:
stringWithFormat:
bufferGPUAddress:allocator:
newTextureWithBuffer:descriptor:offset:bytesPerRow:allocator:
initWithBuffer:offset:bytesPerRow:descriptor:textureRef:
newTextureWithDescriptor:offset:bytesPerRow:
serializerResourceRef
setPurgeableState:
makeAliasable
isAliasable
heap
heapOffset
allocatedSize
T@"<MTLHeap>",R
isPurgeable
isComplete
waitUntilComplete
doesAliasResource:
doesAliasAllResources:count:
doesAliasAnyResources:count:
responsibleProcess
setResponsibleProcess:
allocationID
protectionOptions
unfilteredResourceOptions
setOwnerWithIdentity:
didModifyRange:
addDebugMarker:range:
removeAllDebugMarkers
length
gpuAddress
newLinearTextureWithDescriptor:offset:bytesPerRow:bytesPerImage:
_aneIOSurface
iosurface
resourceIndex
parentGPUAddress
setParentGPUAddress:
parentGPUSize
setParentGPUSize:
T^{__IOSurface=},R
TQ,R,N
newRemoteBufferViewForDevice:
_bufferRef
_content
_pointer
_deallocator
_length
_iosurface
_gpuAddress
T^{__IOSurface=},R,V_iosurface
TQ,R,D
TQ,R,V_gpuAddress
allocStorage
initWithEntrySize:device:
getStorage
returnStorage:
head
tail
storageSize
semaphore
setPrimitiveRestartEnabled:
type
initWithType:options:
deleteHeapRef:allocator:
sizeInfoForHeap:allocator:
getSizeInfo
maxAvailableSizeWithAlignment:heap:allocator:
newBufferWithLength:options:heap:offset:useOffset:allocator:
setHeapOffset:
newTextureWithDescriptor:heap:offset:useOffset:allocator:
newBufferWithLength:options:offset:useOffset:
newTextureWithDescriptor:offset:useOffset:
maxAvailableSizeWithAlignment:
newBufferWithLength:options:offset:
newTextureWithDescriptor:offset:
newAccelerationStructureWithSize:offset:
newAccelerationStructureWithDescriptor:offset:
size
usedSize
newAccelerationStructureWithSize:offset:resourceIndex:
heapRef
_heapRef
_purgeableState
initWithQueue:retainedReferences:
returnCommandBufferStorage:
returnBufferStorage:
commitAndWaitUntilSubmitted
initWithCommandBuffer:descriptor:serializer:
setDispatchType:
initWithCommandBuffer:renderPassDescriptor:serializer:
getCommandBufferBytes:
addStateReference:
getCommandBytes:forCommand:
endEncoding
bufferStorageByteCount
getBufferStorage
getCommandBufferStorage
split
beginSegment:
enqueue
commit
addScheduledHandler:
presentDrawable:
presentDrawable:atTime:
waitUntilScheduled
addCompletedHandler:
waitUntilCompleted
blitCommandEncoder
renderCommandEncoderWithDescriptor:
computeCommandEncoderWithDescriptor:
blitCommandEncoderWithDescriptor:
computeCommandEncoder
computeCommandEncoderWithDispatchType:
encodeWaitForEvent:value:
encodeSignalEvent:value:
parallelRenderCommandEncoderWithDescriptor:
resourceStateCommandEncoder
resourceStateCommandEncoderWithDescriptor:
accelerationStructureCommandEncoder
accelerationStructureCommandEncoderWithDescriptor:
pushDebugGroup:
popDebugGroup
retainedReferences
errorOptions
kernelStartTime
kernelEndTime
logs
GPUStartTime
GPUEndTime
status
error
T@"<MTLCommandQueue>",R
Td,R
T@"<MTLLogContainer>",R
T@"NSError",R
encodeDashboardTagForResourceGroup:
encodeDashboardFinalizeForResourceGroup:dashboard:value:forIndex:
encodeDashboardFinalizeForResourceGroup:dashboard:values:indices:count:
addPurgedResource:
addPurgedHeap:
commitWithDeadline:
commitAndWaitUntilSubmittedWithDeadline:
setLogs:
presentDrawable:options:
isProfilingEnabled
setProfilingEnabled:
profilingResults
userDictionary
deadlineProfile
debugBufferContentsWithLength:
sampledRenderCommandEncoderWithDescriptor:programInfoBuffer:capacity:
sampledComputeCommandEncoderWithProgramInfoBuffer:capacity:
sampledComputeCommandEncoderWithDispatchType:programInfoBuffer:capacity:
sampledComputeCommandEncoderWithDescriptor:programInfoBuffer:capacity:
debugCommandEncoder
commitAndHold
setProtectionOptions:
encodeWaitForEvent:value:timeout:
setResourceGroups:count:
dropResourceGroups:count:
encodeCacheHintTag:resourceGroups:count:
encodeCacheHintFinalize:resourceGroups:count:
getListIndex
globalTraceObjectID
listIndex
TQ,R,N,GgetListIndex
profilingEnabled
TB,GisProfilingEnabled
T@"NSMutableDictionary",R,N
T@"<MTLDeadlineProfile>",R,&
addResourceReference:isWrite:
getBufferBytes:alignment:buffer:offset:
beginContinuation
splitHandler
setSplitHandler:
merge:
T@?,C
commandBufferRef
commandHead
bufferHead
segmentCount
commandCurrentStorage
commandTail
commandPrevious
bufferCurrentStorage
currentStorageOffset
continuation
_protectionOptions
_resourceList
T@"<MTLDevice>",R,Vdevice
T@?,C,VsplitHandler
initWithDevice:maxCommandBufferCount:
initWithEntrySize:
initWithDevice:descriptor:
deleteCommandQueueRef:allocator:
setErrorOptions:
commandBuffer
commandBufferWithDescriptor:
commandBufferWithUnretainedReferences
insertDebugCaptureBoundary
getGPUPriority
setGPUPriority:
setGPUPriority:offset:
getBackgroundGPUPriority
setBackgroundGPUPriority:
setBackgroundGPUPriority:offset:
setSubmissionQueue:
setCompletionQueue:
finish
backgroundTrackingPID
setBackgroundTrackingPID:
qosLevel
commitQueue
commitSynchronously
completionQueue
disableCrossQueueHazardTracking
skipRender
setSkipRender:
executionEnabled
setExecutionEnabled:
isOpenGLQueue
getSPIStats
availableCounters
availableCountersAndDict
requestCounters:
requestCounters:withIndex:
getRequestedCounters
subdivideCounterList:
addPerfSampleHandler:
counterInfo
dispatchAvailableCompletionNotifications
isStatEnabled
setStatEnabled:
getStatOptions
setStatOptions:
getStatLocations
setStatLocations:
T@"NSObject<OS_dispatch_queue>",R
StatEnabled
TB,N,GisStatEnabled
StatOptions
TQ,N,GgetStatOptions
StatLocations
TQ,N,GgetStatLocations
submitCommandBuffers:count:
commandPool
bufferPool
_commandQueueRef
TQ,R,VbufferStorageByteCount
height
depth
copyFromTexture:sourceSlice:sourceLevel:toTexture:destinationSlice:destinationLevel:sliceCount:levelCount:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:
decompressedPixelFormat
backingBuffer
copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:options:
bundleWithIdentifier:
newFunctionWithName:constantValues:error:
setComputePipelineState:
decompressedTextureView
textureType
newTextureViewWithPixelFormat:textureType:levels:slices:
threadExecutionWidth
maxTotalThreadsPerThreadgroup
setBytes:length:atIndex:
dispatchThreads:threadsPerThreadgroup:
initWithCommandBuffer:
copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:
calculateOffsetToRegion:level:slice:
initWithDevice:pipelineStateDescriptor:
uniqueIdentifierForComputePipelineState:allocator:
deleteComputePipelineStateRef:allocator:
imageblockMemoryLengthForDimensions:
functionHandleWithFunction:
newComputePipelineStateWithAdditionalBinaryFunctions:error:
staticThreadgroupMemoryLength
supportIndirectCommandBuffers
gpuResourceID
T{MTLResourceID=Q},R
pipelineBinaries
textureWriteRoundingMode
uniqueIdentifier
debugInstrumentationData
gpuHandle
T@"MTLDebugInstrumentationData",R,&,N
pipelineRef
getWritableInfo:buffers:texturesArrayLength:textures:
_pipelineRef
_uniqueIdentifier
TQ,N,VmaxTotalThreadsPerThreadgroup
TQ,N,VthreadExecutionWidth
TQ,N,VstaticThreadgroupMemoryLength
TB,N,VsupportIndirectCommandBuffers
TQ,R,V_uniqueIdentifier
initWithDevice:depthStencilDescriptor:
deleteDepthStencilStateRef:allocator:
readsDepth
writesDepth
readsStencil
writesStencil
depthStencilRef
deleteRenderPipelineStateRef:allocator:
uniqueIdentifierForRenderPipelineState:allocator:
functionHandleWithFunction:stage:
newVisibleFunctionTableWithDescriptor:stage:
newIntersectionFunctionTableWithDescriptor:stage:
newRenderPipelineStateWithAdditionalBinaryFunctions:error:
threadgroupSizeMatchesTileSize
imageblockSampleLength
maxTotalThreadsPerObjectThreadgroup
maxTotalThreadsPerMeshThreadgroup
objectThreadExecutionWidth
meshThreadExecutionWidth
maxTotalThreadgroupsPerMeshGrid
newVertexShaderDebugInfo
newFragmentShaderDebugInfo
vertexFunctionHandleWithFunction:
fragmentFunctionHandleWithFunction:
tileFunctionHandleWithFunction:
objectFunctionHandleWithFunction:
meshFunctionHandleWithFunction:
newVisibleFunctionTableFromVertexStageWithDescriptor:
newVisibleFunctionTableFromFragmentStageWithDescriptor:
newVisibleFunctionTableFromTileStageWithDescriptor:
newVisibleFunctionTableFromObjectStageWithDescriptor:
newVisibleFunctionTableFromMeshStageWithDescriptor:
newRenderPipelineStateWithAdditionalBinaryFunctions:fragmentAdditionalBinaryFunctions:error:
newTileRenderPipelineStateWithAdditionalBinaryFunctions:error:
newVertexIntersectionFunctionTableWithDescriptor:
newFragmentIntersectionFunctionTableWithDescriptor:
newTileIntersectionFunctionTableWithDescriptor:
vertexDebugInstrumentationData
fragmentDebugInstrumentationData
tileDebugInstrumentationData
objectDebugInstrumentationData
meshDebugInstrumentationData
newObjectIntersectionFunctionTableWithDescriptor:
newMeshIntersectionFunctionTableWithDescriptor:
explicitVisibilityGroupID
TI,R,N
getWritableInfo:vtxBuffers:vtxTexturesArrayLength:vtxTextures:frgBuffersLength:frgBuffers:frgTexturesArrayLength:frgTextures:
getFragmentShaderTelemetryID
getVertexShaderTelemetryID
makeAliasableResource:allocator:
doesAliasResources:count:all:resource:allocator:
doesAliasResources:count:all:
_heap
_heapOffset
_resourceRef
_options
_cpuCacheMode
_storageMode
_label
_labelLock
_hazardTrackingMode
_isAliasable
Ti,VresponsibleProcess
TQ,R,VallocationID
TQ,R,VprotectionOptions
T@"NSString",C,D
T@"<MTLDevice>",R,D
TQ,R,V_cpuCacheMode
TQ,R,V_storageMode
T@"<MTLHeap>",R,D
TQ,R,VallocatedSize
TI,R,V_resourceRef
initWithDevice:samplerDescriptor:
deleteSamplerStateRef:allocator:
uniqueIdentifierForSamplerState:allocator:
samplerRef
uniqueIdentifierForTexture:allocator:
decompress:expandedTex:srcFormat:destFormat:width:height:destRowBytes:srcRowBytes:
buffer
bufferOffset
bufferBytesPerRow
initWithTextureInternal:pixelFormat:decompressedPixelFormat:textureType:levels:slices:swizzle:compressedView:textureRef:isInternalTextureView:
swizzle
descriptorPrivate
newTextureViewWithPixelFormatInternal:isInternalTextureView:
textureRef
deleteTextureRef:allocator:
numberWithUnsignedInteger:
numberWithBool:
null
getBytes:bytesPerRow:bytesPerImage:fromRegion:mipmapLevel:slice:
getBytesFromRegion:bytesPerRow:bytesPerImage:mipmapLevel:slice:texture:outDataSize:
copyImageBytesFromSource:toDestination:dataSize:region:bytesPerRow:bytesPerImage:mipmapLevel:slice:texture:
newTextureViewWithPixelFormat:baseTexture:allocator:
initWithTexture:pixelFormat:decompressedPixelFormat:textureRef:isInternalTextureView:
mipmapLevelCount
newTextureViewWithPixelFormat:textureType:levels:slices:baseTexture:allocator:
initWithTexture:pixelFormat:decompressedPixelFormat:textureType:levels:slices:swizzle:textureRef:isInternalTextureView:
replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:
dataSizeForRegion:pixelFormat:bytesPerRow:bytesPerImage:
replaceRegion:mipmapLevel:slice:dataSize:bytesPerRow:bytesPerImage:texture:allocator:
newTextureViewWithPixelFormat:textureType:levels:slices:swizzle:baseTexture:allocator:
getBytes:bytesPerRow:fromRegion:mipmapLevel:
replaceRegion:mipmapLevel:withBytes:bytesPerRow:
newTextureViewWithPixelFormat:
newTextureViewWithPixelFormat:textureType:levels:slices:swizzle:
rootResource
parentTexture
parentRelativeLevel
parentRelativeSlice
iosurfacePlane
sampleCount
arrayLength
isFramebufferOnly
firstMipmapInTail
tailSizeInBytes
isSparse
allowGPUOptimizedContents
compressionType
T@"<MTLResource>",R
T@"<MTLTexture>",R
T@"<MTLBuffer>",R
framebufferOnly
TB,R,GisFramebufferOnly
T{?=CCCC},R,N
isCompressed
compressionFeedback
swizzleKey
numFaces
isDrawable
compressionFootprint
newCompressedTextureViewWithPixelFormat:textureType:level:slice:
canGenerateMipmapLevels
generateMipmapLevel:slice:
newTextureViewWithPixelFormat:resourceIndex:
newTextureViewWithPixelFormat:textureType:levels:slices:resourceIndex:
newTextureViewWithPixelFormat:textureType:levels:slices:swizzle:resourceIndex:
sparseSurfaceDefaultValue
decompressPlaceholder:expandedTex:srcFormat:destFormat:width:height:destRowBytes:srcRowBytes:
initWithDescriptor:decompressedPixelFormat:iosurface:plane:textureRef:heap:device:shareable:
initWithTexture:device:
newRemoteTextureViewForDevice:
didModifyData
isShareable
_parentTexture
_parentRelativeLevel
_parentRelativeSlice
_buffer
_textureType
_pixelFormat
_decompressedPixelFormat
_usage
_backingBuffer
_backingBufferSize
_decompressedTextureView
_width
_height
_depth
_mipmapLevelCount
_sampleCount
_arrayLength
_numFaces
_iosurfacePlane
_bufferOffset
_bufferBytesPerRow
_allowGPUOptimizedContents
_framebufferOnly
_swizzle
_isInternalTextureView
_firstMipmapInTail
_tailSizeInBytes
_isDrawable
_shareable
shareable
TB,R,GisShareable,V_shareable
TQ,R,ViosurfacePlane
TQ,R,Vrotation
Tq,R,D
TI,R,V_swizzle
TB,R,V_isDrawable
T@"<MTLResource>",R,VrootResource
T@"<MTLTexture>",R,D
TQ,R,V_parentRelativeLevel
TQ,R,VparentRelativeSlice
T@"<MTLBuffer>",R,D
TQ,R,V_usage
TB,R,GisFramebufferOnly,V_framebufferOnly
TQ,R,V_firstMipmapInTail
TQ,R,V_tailSizeInBytes
TB,R,V_allowGPUOptimizedContents
T{?=CCCC},R,D,N
@36@0:8@16I24^{?=Ssi}28
v16@0:8
B16@0:8
Q16@0:8
Q24@0:8Q16
I16@0:8
@"MTLSimDevice"
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16Q24
v40@0:8@16Q24Q32
v48@0:8r^@16r^Q24{_NSRange=QQ}32
v40@0:8r^@16{_NSRange=QQ}24
^v24@0:8Q16
@24@0:8Q16
v24@0:8@16
v32@0:8@"<MTLBuffer>"16Q24
v40@0:8@"<MTLBuffer>"16Q24Q32
v32@0:8@"<MTLTexture>"16Q24
v32@0:8@"<MTLSamplerState>"16Q24
v32@0:8@"<MTLRenderPipelineState>"16Q24
v32@0:8@"<MTLComputePipelineState>"16Q24
v32@0:8@"<MTLIndirectCommandBuffer>"16Q24
v32@0:8@"<MTLAccelerationStructure>"16Q24
@"<MTLArgumentEncoder>"24@0:8Q16
v32@0:8@"<MTLVisibleFunctionTable>"16Q24
v32@0:8@"<MTLIntersectionFunctionTable>"16Q24
@"<MTLDevice>"16@0:8
v24@0:8@"NSString"16
@"_MTLIndirectArgumentBufferLayout"16@0:8
@44@0:8@16I24@28^{?=SI}36
@"MTLSimIndirectArgumentBufferLayout"
@"MTLSimBuffer"
*24@0:8Q16
@"NSObject<OS_dispatch_data>"
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@36@0:8I16Q20@28
v40@0:8@16Q24@?32
v24@0:8Q16
v40@0:8@"MTLSharedEventListener"16Q24@?<v@?@"<MTLSharedEvent>"Q>32
@"MTLSharedEventHandle"16@0:8
@28@0:8@16I24
B32@0:8Q16Q24
{?=QQ}24@0:8@16
{?=QQ}32@0:8Q16Q24
@32@0:8Q16Q24
@40@0:8r^v16Q24Q32
@48@0:8^v16Q24Q32@?40
@40@0:8@16^{__IOSurface=}24Q32
@32@0:8@16^@24
@40@0:8@16@24^@32
v40@0:8@16@24@?32
v32@0:8@16@?24
@48@0:8@16Q24^@32^@40
B24@0:8Q16
B24@0:8q16
v32@0:8^{?=ff}16Q24
@40@0:8@16Q24Q32
@40@0:8@16q24^@32
{?=QQQ}40@0:8Q16Q24Q32
Q24@0:8q16
{?=QQQ}48@0:8Q16Q24Q32q40
v32@0:8^Q16^Q24
{?=QQQ}24@0:8@16
{?=QQ}24@0:8Q16
{?=QQQ}16@0:8
v72@0:8r^{?={?=QQQ}{?=QQQ}}16^{?={?=QQQ}{?=QQQ}}24{?=QQQ}32Q56Q64
v64@0:8r^{?={?=QQQ}{?=QQQ}}16^{?={?=QQQ}{?=QQQ}}24{?=QQQ}32Q56
@"<MTLCommandQueue>"16@0:8
@"<MTLCommandQueue>"24@0:8Q16
{?=QQ}24@0:8@"MTLTextureDescriptor"16
@"<MTLHeap>"24@0:8@"MTLHeapDescriptor"16
@"<MTLBuffer>"32@0:8Q16Q24
@"<MTLBuffer>"40@0:8r^v16Q24Q32
@"<MTLBuffer>"48@0:8^v16Q24Q32@?<v@?^vQ>40
@"<MTLDepthStencilState>"24@0:8@"MTLDepthStencilDescriptor"16
@"<MTLTexture>"24@0:8@"MTLTextureDescriptor"16
@"<MTLTexture>"40@0:8@"MTLTextureDescriptor"16^{__IOSurface=}24Q32
@"<MTLSamplerState>"24@0:8@"MTLSamplerDescriptor"16
@"<MTLLibrary>"16@0:8
@"<MTLLibrary>"32@0:8@"NSBundle"16^@24
@"<MTLLibrary>"32@0:8@"NSString"16^@24
@"<MTLLibrary>"32@0:8@"NSURL"16^@24
@"<MTLLibrary>"32@0:8@"NSObject<OS_dispatch_data>"16^@24
@"<MTLLibrary>"40@0:8@"NSString"16@"MTLCompileOptions"24^@32
v40@0:8@"NSString"16@"MTLCompileOptions"24@?<v@?@"<MTLLibrary>"@"NSError">32
@"<MTLLibrary>"32@0:8@"MTLStitchedLibraryDescriptor"16^@24
v32@0:8@"MTLStitchedLibraryDescriptor"16@?<v@?@"<MTLLibrary>"@"NSError">24
@"<MTLRenderPipelineState>"32@0:8@"MTLRenderPipelineDescriptor"16^@24
@"<MTLRenderPipelineState>"48@0:8@"MTLRenderPipelineDescriptor"16Q24^@32^@40
v32@0:8@"MTLRenderPipelineDescriptor"16@?<v@?@"<MTLRenderPipelineState>"@"NSError">24
v40@0:8@"MTLRenderPipelineDescriptor"16Q24@?<v@?@"<MTLRenderPipelineState>"@"MTLRenderPipelineReflection"@"NSError">32
@"<MTLComputePipelineState>"32@0:8@"<MTLFunction>"16^@24
@"<MTLComputePipelineState>"48@0:8@"<MTLFunction>"16Q24^@32^@40
v32@0:8@"<MTLFunction>"16@?<v@?@"<MTLComputePipelineState>"@"NSError">24
v40@0:8@"<MTLFunction>"16Q24@?<v@?@"<MTLComputePipelineState>"@"MTLComputePipelineReflection"@"NSError">32
@"<MTLComputePipelineState>"48@0:8@"MTLComputePipelineDescriptor"16Q24^@32^@40
v40@0:8@"MTLComputePipelineDescriptor"16Q24@?<v@?@"<MTLComputePipelineState>"@"MTLComputePipelineReflection"@"NSError">32
@"<MTLFence>"16@0:8
@"<MTLRenderPipelineState>"48@0:8@"MTLTileRenderPipelineDescriptor"16Q24^@32^@40
v40@0:8@"MTLTileRenderPipelineDescriptor"16Q24@?<v@?@"<MTLRenderPipelineState>"@"MTLRenderPipelineReflection"@"NSError">32
@"<MTLRenderPipelineState>"48@0:8@"MTLMeshRenderPipelineDescriptor"16Q24^@32^@40
v40@0:8@"MTLMeshRenderPipelineDescriptor"16Q24@?<v@?@"<MTLRenderPipelineState>"@"MTLRenderPipelineReflection"@"NSError">32
@"<MTLArgumentEncoder>"24@0:8@"NSArray"16
@"<MTLRasterizationRateMap>"24@0:8@"MTLRasterizationRateMapDescriptor"16
@"<MTLIndirectCommandBuffer>"40@0:8@"MTLIndirectCommandBufferDescriptor"16Q24Q32
@"<MTLEvent>"16@0:8
@"<MTLSharedEvent>"16@0:8
@"<MTLSharedEvent>"24@0:8@"MTLSharedEventHandle"16
@"<MTLIOFileHandle>"32@0:8@"NSURL"16^@24
@"<MTLIOCommandQueue>"32@0:8@"MTLIOCommandQueueDescriptor"16^@24
@"<MTLIOFileHandle>"40@0:8@"NSURL"16q24^@32
@"<MTLCounterSampleBuffer>"32@0:8@"MTLCounterSampleBufferDescriptor"16^@24
@"<MTLArgumentEncoder>"24@0:8@"<MTLBufferBinding>"16
@"<MTLDynamicLibrary>"32@0:8@"<MTLLibrary>"16^@24
@"<MTLDynamicLibrary>"32@0:8@"NSURL"16^@24
@"<MTLBinaryArchive>"32@0:8@"MTLBinaryArchiveDescriptor"16^@24
{?=QQQ}24@0:8@"MTLAccelerationStructureDescriptor"16
@"<MTLAccelerationStructure>"24@0:8Q16
@"<MTLAccelerationStructure>"24@0:8@"MTLAccelerationStructureDescriptor"16
{?=QQ}24@0:8@"MTLAccelerationStructureDescriptor"16
@"NSArray"16@0:8
v20@0:8B16
@24@0:8^{__IOSurface=}16
{?=II}16@0:8
@20@0:8I16
B44@0:8^@16Q24^Q32i40
B24@0:8{?=II}16
@32@0:8@16Q24
@32@0:8^v16@24
@40@0:8^v16@24@32
@32@0:8Q16@24
v40@0:8@16r^v24@32
v48@0:8@16r^v24@32@40
B32@0:8@16^@24
@40@0:8@16Q24^@32
@48@0:8@16@24Q32^@40
B36@0:8@16B24^@28
@40@0:8Q16@24^@32
r^{MTLTargetDeviceArch=QI*}16@0:8
r^{?=IIIIIIIIIIIIIIIIIIIIIIIIIIffIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIQ}16@0:8
f16@0:8
{IndirectArgumentBufferCapabilities=b1b1b1b29}16@0:8
q16@0:8
v24@0:8^{MPSFunctionTable=}16
v40@0:8Q16^Q24Q32
B32@0:8{_NSRange=QQ}16
@40@0:8Q16Q24Q32
@48@0:8r^v16Q24Q32Q40
@56@0:8^v16Q24Q32Q40@?48
B40@0:8^{?=III}16Q24Q32
@32@0:8^v16Q24
@40@0:8^v16@24Q32
^v16@0:8
^{os_unfair_lock_s=I}16@0:8
@40@0:8@16r^{?=BQ^{?}}24^@32
@32@0:8@16@24
@48@0:8^v16Q24@32@?40
@28@0:8@16B24
{?=QQQ}48@0:8q16Q24Q32Q40
v48@0:8@16@24@32^@40
v40@0:8@16@24^@32
@32@0:8r^@16Q24
v32@0:8@16@24
@"MTLArchitecture"24@0:8@"NSArray"16
v24@0:8@"<MTLDeviceSPI>"16
@"<MTLBuffer>"24@0:8^{__IOSurface=}16
B24@0:8@"NSString"16
@"<MTLCommandQueue>"24@0:8@"MTLCommandQueueDescriptor"16
@"_MTLIndirectArgumentBufferLayout"24@0:8@"MTLStructType"16
@"<MTLArgumentEncoder>"24@0:8@"_MTLIndirectArgumentBufferLayout"16
@"<MTLBuffer>"40@0:8@"MTLIndirectCommandBufferDescriptor"16Q24Q32
@"<MTLIndirectRenderCommandEncoder>"24@0:8@"<MTLBuffer>"16
@"<MTLIndirectComputeCommandEncoder>"24@0:8@"<MTLBuffer>"16
@"<MTLSharedEvent>"20@0:8I16
@"<MTLAccelerationStructure>"32@0:8Q16Q24
@"<MTLAccelerationStructure>"32@0:8@"<MTLBuffer>"16Q24
@"<MTLAccelerationStructure>"40@0:8@"<MTLBuffer>"16Q24Q32
@"<MTLAccelerationStructure>"32@0:8^v16@"MTLAccelerationStructureDescriptor"24
@"<MTLAccelerationStructure>"40@0:8^v16@"NSArray"24@"MTLAccelerationStructureDescriptor"32
@"<MTLAccelerationStructure>"32@0:8Q16@"MTLAccelerationStructureAllocationDescriptor"24
v40@0:8@"<MTLAccelerationStructure>"16r^v24@"MTLAccelerationStructureDescriptor"32
v48@0:8@"<MTLAccelerationStructure>"16r^v24@"NSArray"32@"MTLAccelerationStructureDescriptor"40
@"<MTLDynamicLibrary>"40@0:8@"<MTLLibrary>"16@"MTLComputePipelineDescriptor"24^@32
B32@0:8@"MTLDynamicLibraryDescriptorSPI"16^@24
@"<MTLDynamicLibrary>"32@0:8@"MTLDynamicLibraryDescriptorSPI"16^@24
@"<MTLDynamicLibrary>"40@0:8@"NSURL"16Q24^@32
@"NSArray"32@0:8@"MTLComputePipelineDescriptor"16^@24
@"NSArray"40@0:8@"MTLComputePipelineDescriptor"16Q24^@32
@"NSArray"40@0:8@"MTLFunction"16@"NSArray"24^@32
@"NSArray"48@0:8@"MTLFunction"16@"NSArray"24Q32^@40
B36@0:8@"<MTLLibrary>"16B24^@28
B32@0:8@"NSURL"16^@24
@"<MTLBinaryArchive>"40@0:8Q16@"NSURL"24^@32
@"<MTLVisibleFunctionTable>"24@0:8@"MTLVisibleFunctionTableDescriptor"16
@"<MTLIntersectionFunctionTable>"24@0:8@"MTLIntersectionFunctionTableDescriptor"16
@"<MTLRenderPipelineState>"32@0:8@"MTLMeshRenderPipelineDescriptor"16^@24
v32@0:8@"MTLMeshRenderPipelineDescriptor"16@?<v@?@"<MTLRenderPipelineState>"@"NSError">24
@"<MTLDeadlineProfile>"24@0:8Q16
@"MTLTargetDeviceArchitecture"16@0:8
@"MTLArchitecture"16@0:8
@"MTLGPUBVHBuilder"16@0:8
@"NSDictionary"16@0:8
v24@0:8@"NSDictionary"16
@"NSObject<OS_dispatch_data>"16@0:8
v24@0:8@"NSObject<OS_dispatch_data>"16
@"<MTLBuffer>"40@0:8Q16Q24Q32
@"<MTLBuffer>"48@0:8r^v16Q24Q32Q40
@"<MTLBuffer>"56@0:8^v16Q24Q32Q40@?<v@?^vQ>48
@"<MTLBuffer>"24@0:8@"MTLBufferDescriptor"16
@"<MTLLateEvalEvent>"16@0:8
@"<MTLComputePipelineState>"32@0:8@"MTLComputePipelineDescriptor"16^@24
v32@0:8@"MTLComputePipelineDescriptor"16@?<v@?@"<MTLComputePipelineState>"@"NSError">24
@"<MTLRenderPipelineState>"32@0:8@"MTLTileRenderPipelineDescriptor"16^@24
v32@0:8@"MTLTileRenderPipelineDescriptor"16@?<v@?@"<MTLRenderPipelineState>"@"NSError">24
@"<MTLFunction>"32@0:8^v16Q24
@"<MTLFunction>"40@0:8^v16@"NSObject<OS_dispatch_data>"24Q32
v24@0:8@"MTLGPUBVHBuilder"16
@"<MTLIndirectArgumentEncoder>"24@0:8@"NSArray"16
@"<MTLComputePipelineState>"40@0:8@"NSArray"16r^{?=BQ^{?}}24^@32
@"<MTLLibrary>"40@0:8@"NSString"16@"NSArray"24^@32
@"<MTLLibrary>"40@0:8@"NSArray"16@"NSArray"24^@32
@"<MTLLibrary>"32@0:8@"MTLStitchedLibraryDescriptorSPI"16^@24
@"NSString"24@0:8@"NSArray"16
@"<MTLLibrary>"40@0:8@"NSArray"16r^{?=BQ^{?}}24^@32
@"<MTLPipelineLibrarySPI>"32@0:8@"NSString"16^@24
@"NSData"16@0:8
@"NSObject<OS_dispatch_data>"24@0:8@"MTLRenderPipelineDescriptor"16
@"NSObject<OS_dispatch_data>"24@0:8@"MTLComputePipelineDescriptor"16
@"MTLRenderPipelineDescriptor"32@0:8@"NSObject<OS_dispatch_data>"16@"<MTLDeserializationContext>"24
@"MTLComputePipelineDescriptor"32@0:8@"NSObject<OS_dispatch_data>"16@"<MTLDeserializationContext>"24
@"NSObject<OS_dispatch_data>"24@0:8@"MTLStructType"16
@"NSObject<OS_dispatch_data>"28@0:8@"MTLStructType"16I24
@"MTLStructType"24@0:8@"NSObject<OS_dispatch_data>"16
@"<MTLTexture>"48@0:8^v16Q24@"MTLTextureDescriptor"32@?<v@?^vQ>40
@"<MTLTextureLayout>"28@0:8@"MTLTextureDescriptor"16B24
@"<MTLIndirectArgumentEncoder>"24@0:8@"_MTLIndirectArgumentBufferLayout"16
v48@0:8@"<MTLFunction>"16@"MTLFunctionDescriptor"24@"<MTLBinaryArchive>"32^@40
v40@0:8@"<MTLFunction>"16@"MTLFunctionDescriptor"24^@32
v40@0:8@"<MTLFunction>"16@"MTLFunctionDescriptor"24@?<v@?@"NSError">32
@"<MTLResourceGroupSPI>"32@0:8r^@16Q24
v32@0:8@"NSObject<OS_dispatch_data>"16@"NSMutableDictionary"24
I24@0:8@16
v20@0:8I16
@52@0:8Q16Q24^v32B40@?44
v52@0:8I16@20@28Q36@?44
^v48@0:8@16Q24@32^Q40
v32@0:8^v16Q24
@48@0:8@16@24@32^@40
{?=b1b1b1b1b1b1b1b1b1b55}32@0:8@16@24
@48@0:8@16@24@32@40
@64@0:8^v16Q24@?32@40Q48Q56
@56@0:8^v16Q24@32Q40Q48
i16@0:8
{MTLSimConnection="_connection"@"NSObject<OS_xpc_object>""_serialQueue"@"NSObject<OS_dispatch_queue>"}
@"MTLSerializer"
@"NSObject<OS_dispatch_queue>"
{unordered_map<unsigned int, MTLSimCommandBuffer *, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<const unsigned int, MTLSimCommandBuffer *>>>="__table_"{__hash_table<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>, std::allocator<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>>="__value_"f}}}
@"MTLResourceListPool"
@"<MTLDeviceSPI>"
{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}
{?="width"Q"height"Q"depth"Q}
@32@0:8Q16^@24
@"<MTLArgumentEncoder>"32@0:8Q16^@24
@36@0:8@16Q24I32
@"<MTLDevice>"
@"NSString"
@"NSArray"
@"NSDictionary"
@"MTLSimFunction"
@"<MTLHeap>"16@0:8
B32@0:8r^@16Q24
v20@0:8i16
i20@0:8I16
B24@0:8@"<MTLResource>"16
v32@0:8{_NSRange=QQ}16
v40@0:8@16{_NSRange=QQ}24
@"<MTLTexture>"40@0:8@"MTLTextureDescriptor"16Q24Q32
v40@0:8@"NSString"16{_NSRange=QQ}24
@48@0:8@16Q24Q32Q40
^{__IOSurface=}16@0:8
@"<MTLTexture>"48@0:8@"MTLTextureDescriptor"16Q24Q32Q40
@76@0:8@16I24^v28^v36Q44Q52@60@?68
^{__IOSurface=}
^{BufferStorageEntry=@Q^{BufferStorageEntry}}16@0:8
v24@0:8^{BufferStorageEntry=@Q^{BufferStorageEntry}}16
^{BufferStorageEntry=@Q^{BufferStorageEntry}}
@"NSObject<OS_dispatch_semaphore>"
@"<MTLTexture>"32@0:8@"MTLTextureDescriptor"16Q24
@"<MTLAccelerationStructure>"32@0:8@"MTLAccelerationStructureDescriptor"16Q24
@"NSString"24@0:8Q16
@"<MTLAccelerationStructure>"40@0:8Q16Q24Q32
@36@0:8@16@24I32
@44@0:8Q16Q24Q32B40
@36@0:8@16Q24B32
v24@0:8@?16
v32@0:8@16d24
d16@0:8
v24@0:8@?<v@?@"<MTLCommandBuffer>">16
v24@0:8@"<MTLDrawable>"16
v32@0:8@"<MTLDrawable>"16d24
@"<MTLBlitCommandEncoder>"16@0:8
@"<MTLRenderCommandEncoder>"24@0:8@"MTLRenderPassDescriptor"16
@"<MTLComputeCommandEncoder>"24@0:8@"MTLComputePassDescriptor"16
@"<MTLBlitCommandEncoder>"24@0:8@"MTLBlitPassDescriptor"16
@"<MTLComputeCommandEncoder>"16@0:8
@"<MTLComputeCommandEncoder>"24@0:8Q16
v32@0:8@"<MTLEvent>"16Q24
@"<MTLParallelRenderCommandEncoder>"24@0:8@"MTLRenderPassDescriptor"16
@"<MTLResourceStateCommandEncoder>"16@0:8
@"<MTLResourceStateCommandEncoder>"24@0:8@"MTLResourceStatePassDescriptor"16
@"<MTLAccelerationStructureCommandEncoder>"16@0:8
@"<MTLAccelerationStructureCommandEncoder>"24@0:8@"MTLAccelerationStructurePassDescriptor"16
@"<MTLLogContainer>"16@0:8
@"NSError"16@0:8
v48@0:8@16Q24Q32Q40
v56@0:8@16Q24r^Q32r^Q40Q48
^v24@0:8^Q16
@40@0:8@16^(?={?=b8b24IQQ}{?=b8b24IQQ})24Q32
@32@0:8^(?={?=b8b24IQQ}{?=b8b24IQQ})16Q24
@40@0:8Q16^(?={?=b8b24IQQ}{?=b8b24IQQ})24Q32
v36@0:8@16Q24I32
v32@0:8r^@16Q24
v40@0:8Q16r^@24Q32
v24@0:8@"<MTLResourceGroupSPI>"16
v48@0:8@"<MTLResourceGroupSPI>"16Q24Q32Q40
v56@0:8@"<MTLResourceGroupSPI>"16Q24r^Q32r^Q40Q48
v24@0:8@"<MTLResource>"16
v24@0:8@"<MTLHeap>"16
v24@0:8@"NSArray"16
v32@0:8@"<MTLDrawable>"16@"NSDictionary"24
@"NSMutableDictionary"16@0:8
@"<MTLDeadlineProfile>"16@0:8
@"<MTLRenderCommandEncoder>"40@0:8@"MTLRenderPassDescriptor"16^(?={?=b8b24IQQ}{?=b8b24IQQ})24Q32
@"<MTLComputeCommandEncoder>"32@0:8^(?={?=b8b24IQQ}{?=b8b24IQQ})16Q24
@"<MTLComputeCommandEncoder>"40@0:8Q16^(?={?=b8b24IQQ}{?=b8b24IQQ})24Q32
@"<MTLComputeCommandEncoder>"40@0:8@"MTLComputePassDescriptor"16^(?={?=b8b24IQQ}{?=b8b24IQQ})24Q32
@"<MTLDebugCommandEncoder>"16@0:8
v36@0:8@"<MTLEvent>"16Q24I32
B28@0:8@16B24
^v48@0:8Q16Q24^@32^Q40
@?16@0:8
B28@0:8@"<MTLSerializerResource>"16B24
B24@0:8@"<MTLSerializerState>"16
@?<v@?>16@0:8
v24@0:8@?<v@?>16
v24@0:8@"<MTLSerializerCommandStream>"16
^v28@0:8Q16I24
^{StorageEntry=Q^v@^{StorageEntry}}
@"MTLResourceList"
@"<MTLCommandBuffer>"16@0:8
@"<MTLCommandBuffer>"24@0:8@"MTLCommandBufferDescriptor"16
B28@0:8Q16S24
i24@0:8@16
i32@0:8@16Q24
v24@0:8@"NSObject<OS_dispatch_queue>"16
@"NSObject<OS_dispatch_queue>"16@0:8
@"MTLCommandQueueSPIStats"16@0:8
i24@0:8@"NSArray"16
i32@0:8@"NSArray"16Q24
@"NSArray"24@0:8@"NSArray"16
v24@0:8@?<v@?@"<MTLCommandBuffer>"@"NSData"Q>16
@36@0:8@16I24@28
^{StorageEntry=Q^v@^{StorageEntry}}16@0:8
v24@0:8^{StorageEntry=Q^v@^{StorageEntry}}16
@"MTLSimCommandStoragePool"
@"MTLSimBufferStoragePool"
v80@0:8@16Q24Q32@40Q48Q56Q64Q72
v144@0:8@16Q24Q32{?=QQQ}40{?=QQQ}64@88Q96Q104{?=QQQ}112Q136
v128@0:8@16Q24Q32{?=QQQ}40{?=QQQ}64@88Q96Q104Q112Q120
v128@0:8@16Q24Q32Q40{?=QQQ}48@72Q80Q88{?=QQQ}96Q120
Q40@0:8{?=QQQ}16
{MTLResourceID=Q}16@0:8
@"<MTLFunctionHandle>"24@0:8@"<MTLFunction>"16
@"<MTLComputePipelineState>"32@0:8@"NSArray"16^@24
@"MTLDebugInstrumentationData"16@0:8
v40@0:8I16^I20I28^I32
@"<MTLFunctionHandle>"32@0:8@"<MTLFunction>"16Q24
@"<MTLVisibleFunctionTable>"32@0:8@"MTLVisibleFunctionTableDescriptor"16Q24
@"<MTLIntersectionFunctionTable>"32@0:8@"MTLIntersectionFunctionTableDescriptor"16Q24
@"<MTLRenderPipelineState>"32@0:8@"MTLRenderPipelineFunctionsDescriptor"16^@24
@"<MTLRenderPipelineState>"40@0:8@"NSArray"16@"NSArray"24^@32
@"<MTLRenderPipelineState>"32@0:8@"NSArray"16^@24
v64@0:8I16^I20I28^I32I40^I44I52^I56
@44@0:8I16Q20@28@36
B36@0:8r^@16Q24B32
@"MTLSimHeap"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
v80@0:8r*16*24Q32Q40Q48Q56Q64Q72
v104@0:8^v16Q24Q32{?={?=QQQ}{?=QQQ}}40Q88Q96
v104@0:8{?={?=QQQ}{?=QQQ}}16Q64Q72r^v80Q88Q96
v88@0:8^v16Q24{?={?=QQQ}{?=QQQ}}32Q80
v88@0:8{?={?=QQQ}{?=QQQ}}16Q64r^v72Q80
@64@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48
@68@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48{?=CCCC}64
{?=CCCC}16@0:8
@"<MTLTexture>"24@0:8Q16
@"<MTLTexture>"64@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48
@"<MTLTexture>"68@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48{?=CCCC}64
@"<MTLResource>"16@0:8
@"<MTLTexture>"16@0:8
@"<MTLBuffer>"16@0:8
@48@0:8Q16Q24Q32Q40
v32@0:8Q16Q24
@72@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48Q64
@76@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48{?=CCCC}64Q68
@"<MTLTexture>"48@0:8Q16Q24Q32Q40
@"<MTLTexture>"32@0:8Q16Q24
@"<MTLTexture>"72@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48Q64
@"<MTLTexture>"76@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48{?=CCCC}64Q68
Q80@0:8{?={?=QQQ}{?=QQQ}}16Q64Q72
@96@0:8@16Q24Q32Q40{_NSRange=QQ}48{_NSRange=QQ}64{?=CCCC}80B84I88B92
@92@0:8@16Q24Q32Q40{_NSRange=QQ}48{_NSRange=QQ}64{?=CCCC}80I84B88
@48@0:8@16Q24Q32I40B44
@52@0:8@16Q24Q32@40I48
@68@0:8@16Q24^{__IOSurface=}32Q40I48@52@60
@72@0:8@16Q24^{__IOSurface=}32Q40I48@52@60B68
@28@0:8Q16B24
@"MTLSimTexture"
@"<MTLTexture>"
@"<MTLResource>"
?0`@
"%(+.1
47:=@
CFILORUX[
_behk
nqtwz}
BIU]em
v16@?0@"<MTLSerializerAllocator>"8
v24@?0r^v8Q16
messageType
command
replyData
This object may only be decoded by an NSXPCCoder.
label
This object may only be encoded by an NSXPCCoder.
eventRef
error
eventPort
labelTraceID
v16@?0@"NSObject<OS_xpc_object>"8
status
commandBufferRef
startTime
endTime
notificationRef
command buffers
Nov  5 2022
04:51:43
simulatorDummyPlugin
v8@?0
-[MTLSimDevice sparseTileSizeWithTextureType:pixelFormat:sampleCount:]
not supported in the simulator
v24@?0^v8Q16
length
options
bufferIndex
sharedMem
bufferRef
-[MTLSimDevice newHeapWithDescriptor:]
MTLStorageModePrivate is required for heaps
-[MTLSimDevice newIndirectCommandBufferWithDescriptor:maxCommandCount:options:]
-[MTLSimDevice newTextureWithDescriptor:]
texture rotation is not supported in the simulator
-[MTLSimDevice newTextureWithDescriptor:iosurface:plane:]
iosurface
UseSimulatorSharedTextures
com.apple.Metal
-[MTLSimDevice wrapRenderState:descriptor:]
functionIR
-[MTLSimDevice wrapComputeState:descriptor:]
-[MTLSimDevice newIndirectCommandBufferWithDescriptor:maxCount:options:]
-[MTLSimDevice newIndirectComputeCommandEncoderWithBuffer:]
-[MTLSimDevice newIndirectRenderCommandEncoderWithBuffer:]
-[MTLSimDevice newTiledTextureWithBytesNoCopy:length:deallocator:descriptor:offset:bytesPerRow:]
-[MTLSimDevice newTiledTextureWithBytesNoCopy:length:descriptor:offset:bytesPerRow:]
simulator
Apple
-[MTLSimDevice newCommandQueueWithDescriptor:]
Descriptor cannot be nil
maxCommandBufferCount
commandQueueRef
-[MTLSimDevice newBufferWithIOSurface:]
-[MTLSimDevice minimumLinearTextureAlignmentForPixelFormat:]
%s is not supported on this device.
Linear textures do not support compressed pixel formats
Linear textures do not support depth/stencil pixel formats
-[MTLSimDevice minimumTextureBufferAlignmentForPixelFormat:]
-[MTLSimDevice newRenderPipelineStateWithTileDescriptor:options:completionHandler:]
-[MTLSimDevice newRenderPipelineStateWithTileDescriptor:options:reflection:error:]
-[MTLSimDevice newRenderPipelineStateWithMeshDescriptor:error:]
-[MTLSimDevice newRenderPipelineStateWithMeshDescriptor:options:reflection:error:]
-[MTLSimDevice newRenderPipelineStateWithMeshDescriptor:completionHandler:]
-[MTLSimDevice newRenderPipelineStateWithMeshDescriptor:options:completionHandler:]
EnableSimApple5
fatalError
XPCReplyCheck
connection Queue
connectionType
processRef
version
registryID
hostFeatureProfile
com.apple.metal.simulator
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
UNKNOWN XPC_TYPE_ERROR
XPC_ERROR_TERMINATION_IMMINENT
XPC_ERROR_CONNECTION_INVALID
XPC_ERROR_CONNECTION_INTERRUPTED
function variant
-[MTLSimBuffer initWithDevice:bufferRef:content:pointer:length:options:heap:deallocator:]
storageModePrivate incompatible with ...WithBytes variant of newBuffer
Invalid cacheMode %u
Invalid storageMode %u
%@%@
label =
<none>
length =
cpuCacheMode =
storageMode =
hazardTrackingMode =
resourceOptions =
purgeableState =
-[MTLSimBuffer newTextureWithDescriptor:offset:bytesPerRow:]
Linear texture can only be created on buffers with MTLStorageModePrivate in the simulator
Linear textures from XR10 is not supported in the simulator
-[MTLSimRenderCommandEncoder setPrimitiveRestartEnabled:]
setPrimitiveRestartEnabled is not supported in the simulator
-[MTLSimCommandBuffer resourceStateCommandEncoderWithDescriptor:]
-[MTLSimCommandBuffer resourceStateCommandEncoder]
-[MTLSimCommandBuffer setProtectionOptions:]
setProtectionOptions: with uncommitted encoder
commandQueue
segments
com.apple.MTLSimDriver
-[MTLSimBlitCommandEncoder copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:]_block_invoke
Unable to load Simulator decoder Metal library: %@
pvrtc2
pvrtc4
DecodeEAC_R11Unorm
DecodeEAC_R11Snorm
DecodeEAC_RG11Unorm
DecodeEAC_RG11Snorm
DecodeEAC_RGBA8
DecodeETC2_RGB8
DecodeETC2_RGB8A1
DecodeBGRA_XR10
DecodeBGR_XR10
astc
-[MTLSimBlitCommandEncoder copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:]_block_invoke_2
Error creating kernel '%@': %@
Error creating pipeline state %@ from %@
v16@?0@"<MTLCommandBuffer>"8
-[MTLSimTexture initWithTextureInternal:pixelFormat:decompressedPixelFormat:textureType:levels:slices:swizzle:compressedView:textureRef:isInternalTextureView:]
Device does not support texture swizzle.
Pixel format views involving XR10 are not supported in the simulator
-[MTLSimTexture initWithDescriptor:decompressedPixelFormat:iosurface:plane:textureRef:heap:device:]
IOSurface backed XR10 textures are not supported in the simulator
-[MTLSimTexture initWithDescriptor:decompressedPixelFormat:iosurface:plane:textureRef:heap:device:shareable:]
Shared texture feature not available in simulator
textureType =
pixelFormat =
decompressedPixelFormat =
width =
height =
depth =
arrayLength =
mipmapLevelCount =
sampleCount =
usage =
shareable =
framebufferOnly =
swizzle =
parentTexture =
<null>
parentRelativeLevel =
parentRelativeSlice =
buffer =
bufferOffset =
bufferBytesPerRow =
allowGPUOptimizedContents =
-[MTLSimTexture newTextureViewWithPixelFormat:textureType:levels:slices:swizzle:]
event notification reference not found
Compiler failed to build request
Compiler failed with XPC_ERROR_CONNECTION_INTERRUPTED
Compiler failed with XPC_ERROR_CONNECTION_INVALID
Compiler failed with XPC_ERROR_TERMINATION_IMMINENT
Compiler failed with unknown XPC error
Decompression failure: unable to allocate decoder from at_encoder_create()
Decompression failure: error %ld returned from at_encoder_decompress_texels()
MTLSimIndirectArgumentBufferLayout
MTLSimArgumentEncoder
MTLArgumentEncoderSPI
MTLArgumentEncoder
NSObject
MTLSimOperation
MTLSerializerAllocator
MTLSimSharedEventHandle
NSSecureCoding
NSCoding
MTLSimSharedEvent
MTLSimEvent
MTLEvent
MTLSerializerEvent
MTLSerializerState
MTLSharedEvent
MTLSimDevice
MTLDeviceSPI
MTLDevice
MTLSimFunction
MTLFunction
MTLSimFunctionVariant
MTLSimFence
MTLFence
MTLSerializerFence
MTLSimBuffer
MTLSerializerBuffer
MTLSerializerResource
MTLBufferSPI
MTLResourceSPI
MTLResource
MTLBuffer
MTLSimBufferStoragePool
MTLSimRenderCommandEncoder
MTLSimHeap
MTLHeapSPI
MTLHeap
MTLSerializerHeap
MTLSimCommandBuffer
MTLCommandBufferSPI
MTLCommandBuffer
MTLSerializerCommandStream
MTLSimCommandQueue
MTLCommandQueueSPI
MTLCommandQueue
MTLSimBlitCommandEncoder
MTLSimCommandStoragePool
MTLSimComputePipelineState
MTLComputePipelineStateSPI
MTLComputePipelineState
MTLPipelineStateWithProgramAddressTable
MTLSerializerComputePipelineState
MTLSimDepthStencilState
MTLDepthStencilStateSPI
MTLDepthStencilState
MTLSerializerDepthStencilState
MTLSimRenderPipelineState
MTLRenderPipelineStateSPI
MTLRenderPipelineState
MTLSerializerRenderPipelineState
MTLSimResource
MTLSimSamplerState
MTLSamplerStateSPI
MTLSamplerState
MTLSerializerSamplerState
MTLSimTexture
MTLSerializerTexture
MTLTextureSPI
MTLTexture
MTLTextureImplementation
copy
encodeObject:forKey:
setPixelFormat:
releaseEventRef:
commandBufferDidComplete:startTime:completionTime:error:
sharedEventSetSignaledValue:eventRef:allocator:
newBufferRef
newSharedEventWithAllocator:
fragmentFunction
deleteFenceRef:allocator:
initWithCommandBuffer:
copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:
setReflectionSerializationVersion:
validateWithDevice:
releaseFenceRef:
setBytes:length:atIndex:
newSharedEventWithHandle:allocator:
initWithCommandBuffer:descriptor:serializer:
beginSegment:
sharedEventSignaledValueForEventRef:allocator:
deleteFunctionRef:allocator:
makeAliasableResource:allocator:
raise:format:
initWithTargetData:cacheUUID:pluginPath:device:compilerFlags:
newFenceWithAllocator:
dictionaryWithObjects:forKeys:count:
setComputeFunction:
releaseHeapRef:
vertexFunction
newSharedEventWithMachPort:allocator:
maxAvailableSizeWithAlignment:heap:allocator:
initWithCommandBuffer:renderPassDescriptor:serializer:
sharedEventWaitSignaledValue:timeoutMS:eventRef:allocator:
notifyListenerForEventRef:atValue:allocator:
copyImageBytesFromSource:toDestination:dataSize:region:bytesPerRow:bytesPerImage:mipmapLevel:slice:texture:
deleteHeapRef:allocator:
newBufferWithLength:options:heap:offset:useOffset:allocator:
didScheduleWithStartTime:endTime:error:
argumentBufferLayoutConstantAtIndex:layoutRef:allocator:
handleNewObjectReplyData:replyDataSize:
encodeXPCObject:forKey:
setComputePipelineState:
releaseRenderPipelineStateRef:
sizeInfoForHeap:allocator:
deleteRenderPipelineStateRef:allocator:
newFunctionWithIR:
newTextureViewWithPixelFormat:baseTexture:allocator:
null
handleNewObjectReplyData:replyDataSize:errorMessage:
setDispatchType:
setStorageMode:
releaseTextureRef:
deleteArgumentBufferLayoutRef:allocator:
initWithDomain:code:userInfo:
bufferGPUAddress:allocator:
deleteSamplerStateRef:allocator:
setErrorOptions:
numberWithBool:
argumentEncoderConstantAtIndex:encoderRef:bufferRef:allocator:
dispatchQueue
getBytesFromRegion:bytesPerRow:bytesPerImage:mipmapLevel:slice:texture:outDataSize:
releaseArgumentBufferLayoutRef:
deleteArgumentEncoderRef:allocator:
newFunctionWithName:constantValues:error:
newCommandBufferRef
componentsJoinedByString:
newTextureViewWithPixelFormat:textureType:levels:slices:baseTexture:allocator:
argumentEncoderSetArgumentBuffer:offset:encoderRef:allocator:
newHeapWithDescriptor:allocator:
replaceRegion:mipmapLevel:slice:dataSize:bytesPerRow:bytesPerImage:texture:allocator:
initWithUTF8String:
setFragmentFunction:
deleteTextureRef:allocator:
releaseArgumentEncoderRef:
minimumLinearTextureAlignmentForPixelFormat:allocator:
numberWithUnsignedInteger:
dispatchThreads:threadsPerThreadgroup:
eventPort
deleteBufferRef:allocator:
newCommandQueueRef
UTF8String
numberWithUnsignedLongLong:
stringByPaddingToLength:withString:startingAtIndex:
newTextureViewWithPixelFormat:textureType:levels:slices:swizzle:baseTexture:allocator:
newIOSurfaceTextureWithDescriptor:plane:allocator:
argumentEncoderSetBuffers:offsets:withRange:encoderRef:allocator:
heapBufferSizeAndAlignWithLength:options:allocator:
releaseBufferRef:
uniqueIdentifierForComputePipelineState:allocator:
minimumTextureBufferAlignmentForPixelFormat:allocator:
computeFunction
dataSizeForRegion:pixelFormat:bytesPerRow:bytesPerImage:
deleteCommandQueueRef:allocator:
descriptorPrivate
heapTextureSizeAndAlignWithDescriptor:allocator:
newRenderPipelineStateWithSerializedDescriptor:allocator:
argumentEncoderSetSamplerStates:withRange:encoderRef:allocator:
uniqueIdentifierForRenderPipelineState:allocator:
initWithDevice:deserializerGeneratesResourceRefs:deserializerVersion:
newTextureWithBuffer:descriptor:offset:bytesPerRow:allocator:
doesAliasResources:count:all:resource:allocator:
bundleWithIdentifier:
deleteComputePipelineStateRef:allocator:
getComputeInfoWithAllocator:
deserializerGeneratesResourceRefs
newComputePipelineStateWithSerializedDescriptor:allocator:
computePipelineWithReplyData:replyDataSize:pipelineInfo:errorMessage:
stringWithFormat:
doesNotRecognizeSelector:
argumentEncoderSetTextures:withRange:encoderRef:allocator:
decodeIntegerForKey:
releaseCommandQueueRef:
setUsage:
newArgumentBufferLayoutWithStructType:allocator:
uniqueIdentifierForSamplerState:allocator:
stringWithUTF8String:
deleteDepthStencilStateRef:allocator:
payloadFromReplyData:replyDataSize:
arrayWithObjects:count:
encodeInteger:forKey:
decodeObjectOfClass:forKey:
setObject:forKeyedSubscript:
releaseComputePipelineStateRef:
newTextureWithDescriptor:heap:offset:useOffset:allocator:
deleteEventRef:allocator:
setVertexFunction:
initWithResourceListCapacity:
uniqueIdentifierForTexture:allocator:
newArgumentEncoderWithLayout:allocator:
decodeXPCObjectOfType:forKey:
init
dealloc
initWithDevice:reference:data:
bufferLayoutMatchesFrontEndLayout
encodedLength
alignment
constantOffsetAtIndex:
argumentBufferLayoutRef
_reference
_device
_bufferLayoutMatchesFrontEndLayout
_encodedLength
_alignment
TI,R,D
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
setArgumentBuffer:offset:
setArgumentBuffer:startOffset:arrayElement:
setBuffer:offset:atIndex:
setBuffers:offsets:withRange:
setTexture:atIndex:
setTextures:withRange:
setSamplerState:atIndex:
setSamplerStates:withRange:
constantDataAtIndex:
setRenderPipelineState:atIndex:
setRenderPipelineStates:withRange:
setComputePipelineState:atIndex:
setComputePipelineStates:withRange:
setIndirectCommandBuffer:atIndex:
setIndirectCommandBuffers:withRange:
setAccelerationStructure:atIndex:
newArgumentEncoderForBufferAtIndex:
setVisibleFunctionTable:atIndex:
setVisibleFunctionTables:withRange:
setIntersectionFunctionTable:atIndex:
setIntersectionFunctionTables:withRange:
device
label
setLabel:
T@"<MTLDevice>",R
T@"NSString",C
layout
T@"_MTLIndirectArgumentBufferLayout",R,N
initWithDevice:reference:layout:data:
argumentEncoderRef
setVisibleFunctionTable:atBufferIndex:
setVisibleFunctionTables:withBufferRange:
setIntersectionFunctionTable:atBufferIndex:
setIntersectionFunctionTables:withBufferRange:
_layout
_argumentBuffer
_offset
allocateOperationBytes:
data
_data
T@"NSObject<OS_dispatch_data>",R,V_data
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
initWithEventPort:labelTraceID:label:
eventRef
notifyListener:atValue:block:
newSharedEventHandle
signaledValue
setSignaledValue:
initWithDevice:reference:
waitSignaledValue:timeoutMS:
_signaledValue
TQ,D
registerDevices
newCommandQueue
newCommandQueueWithMaxCommandBufferCount:
heapTextureSizeAndAlignWithDescriptor:
heapBufferSizeAndAlignWithLength:options:
newHeapWithDescriptor:
newBufferWithLength:options:
newBufferWithBytes:length:options:
newBufferWithBytesNoCopy:length:options:deallocator:
newDepthStencilStateWithDescriptor:
newTextureWithDescriptor:
newTextureWithDescriptor:iosurface:plane:
newSamplerStateWithDescriptor:
newDefaultLibrary
newDefaultLibraryWithBundle:error:
newLibraryWithFile:error:
newLibraryWithURL:error:
newLibraryWithData:error:
newLibraryWithSource:options:error:
newLibraryWithSource:options:completionHandler:
newLibraryWithStitchedDescriptor:error:
newLibraryWithStitchedDescriptor:completionHandler:
newRenderPipelineStateWithDescriptor:error:
newRenderPipelineStateWithDescriptor:options:reflection:error:
newRenderPipelineStateWithDescriptor:completionHandler:
newRenderPipelineStateWithDescriptor:options:completionHandler:
newComputePipelineStateWithFunction:error:
newComputePipelineStateWithFunction:options:reflection:error:
newComputePipelineStateWithFunction:completionHandler:
newComputePipelineStateWithFunction:options:completionHandler:
newComputePipelineStateWithDescriptor:options:reflection:error:
newComputePipelineStateWithDescriptor:options:completionHandler:
newFence
supportsFeatureSet:
supportsFamily:
supportsTextureSampleCount:
minimumLinearTextureAlignmentForPixelFormat:
minimumTextureBufferAlignmentForPixelFormat:
newRenderPipelineStateWithTileDescriptor:options:reflection:error:
newRenderPipelineStateWithTileDescriptor:options:completionHandler:
newRenderPipelineStateWithMeshDescriptor:options:reflection:error:
newRenderPipelineStateWithMeshDescriptor:options:completionHandler:
getDefaultSamplePositions:count:
newArgumentEncoderWithArguments:
supportsRasterizationRateMapWithLayerCount:
newRasterizationRateMapWithDescriptor:
newIndirectCommandBufferWithDescriptor:maxCommandCount:options:
newEvent
newSharedEvent
newSharedEventWithHandle:
newIOHandleWithURL:error:
newIOCommandQueueWithDescriptor:error:
newIOHandleWithURL:compressionMethod:error:
sparseTileSizeWithTextureType:pixelFormat:sampleCount:
sparseTileSizeInBytesForSparsePageSize:
sparseTileSizeWithTextureType:pixelFormat:sampleCount:sparsePageSize:
newCounterSampleBufferWithDescriptor:error:
sampleTimestamps:gpuTimestamp:
newArgumentEncoderWithBufferBinding:
supportsCounterSampling:
supportsVertexAmplificationCount:
newDynamicLibrary:error:
newDynamicLibraryWithURL:error:
newBinaryArchiveWithDescriptor:error:
accelerationStructureSizesWithDescriptor:
newAccelerationStructureWithSize:
newAccelerationStructureWithDescriptor:
heapAccelerationStructureSizeAndAlignWithSize:
heapAccelerationStructureSizeAndAlignWithDescriptor:
name
registryID
maxThreadsPerThreadgroup
isLowPower
isHeadless
isRemovable
hasUnifiedMemory
recommendedMaxWorkingSetSize
isDepth24Stencil8PixelFormatSupported
readWriteTextureSupport
argumentBuffersSupport
areRasterOrderGroupsSupported
supports32BitFloatFiltering
supports32BitMSAA
supportsQueryTextureLOD
supportsBCTextureCompression
supportsPullModelInterpolation
areBarycentricCoordsSupported
supportsShaderBarycentricCoordinates
currentAllocatedSize
maxThreadgroupMemoryLength
maxArgumentBufferSamplerCount
areProgrammableSamplePositionsSupported
sparseTileSizeInBytes
maxBufferLength
counterSets
supportsDynamicLibraries
supportsRenderDynamicLibraries
supportsRaytracing
supportsFunctionPointers
supportsFunctionPointersFromRender
supportsRaytracingFromRender
supportsPrimitiveMotionBlur
convertSparsePixelRegions:toTileRegions:withTileSize:alignmentMode:numRegions:
convertSparseTileRegions:toPixelRegions:withTileSize:numRegions:
T@"NSString",R
T{?=QQQ},R
lowPower
TB,R,GisLowPower
headless
TB,R,GisHeadless
removable
TB,R,GisRemovable
depth24Stencil8PixelFormatSupported
TB,R,GisDepth24Stencil8PixelFormatSupported
rasterOrderGroupsSupported
TB,R,GareRasterOrderGroupsSupported
barycentricCoordsSupported
TB,R,GareBarycentricCoordsSupported
programmableSamplePositionsSupported
TB,R,GareProgrammableSamplePositionsSupported
T@"NSArray",R
reportLeaks
allowLibrariesFromOtherPlatforms
vendorName
familyName
productName
getMostCompatibleArchitecture:
compilerPropagatesThreadPriority:
_setDeviceWrapper:
_deviceWrapper
deviceSupportsFeatureSet:
deviceOrFeatureProfileSupportsFeatureSet:
minLinearTextureAlignmentForPixelFormat:
newBufferWithIOSurface:
unloadShaderCaches
libraryCacheStats
pipelineCacheStats
copyShaderCacheToPath:
supportsSampleCount:
newCommandQueueWithDescriptor:
newIndirectArgumentBufferLayoutWithStructType:
newArgumentEncoderWithLayout:
supportsTextureWriteRoundingMode:
newIndirectCommandBufferWithDescriptor:maxCount:options:
newIndirectRenderCommandEncoderWithBuffer:
newIndirectComputeCommandEncoderWithBuffer:
newSharedEventWithMachPort:
setResourcesPurgeableState:newState:oldState:count:
newAccelerationStructureWithSize:resourceIndex:
isCompatibleWithAccelerationStructure:
newAccelerationStructureWithBuffer:offset:
newAccelerationStructureWithBuffer:offset:resourceIndex:
deserializePrimitiveAccelerationStructureFromBytes:withDescriptor:
deserializeInstanceAccelerationStructureFromBytes:primitiveAccelerationStructures:withDescriptor:
newAccelerationStructureWithSize:withDescriptor:
deserializePrimitiveAccelerationStructure:fromBytes:withDescriptor:
deserializeInstanceAccelerationStructure:fromBytes:primitiveAccelerationStructures:withDescriptor:
newDynamicLibrary:computeDescriptor:error:
validateDynamicLibraryDescriptor:error:
newDynamicLibraryWithDescriptor:error:
newDynamicLibraryWithURL:options:error:
newDynamicLibraryFromURL:error:
loadDynamicLibrariesForComputeDescriptor:error:
loadDynamicLibrariesForComputeDescriptor:options:error:
loadDynamicLibrariesForFunction:insertLibraries:error:
loadDynamicLibrariesForFunction:insertLibraries:options:error:
validateDynamicLibrary:state:error:
validateDynamicLibraryURL:error:
newBinaryLibraryWithOptions:url:error:
newVisibleFunctionTableWithDescriptor:
newIntersectionFunctionTableWithDescriptor:
newRenderPipelineStateWithMeshDescriptor:error:
newRenderPipelineStateWithMeshDescriptor:completionHandler:
newProfileWithExecutionSize:
supportsBufferlessClientStorageTexture
supportsComputeMemoryBarrier
supportsRenderMemoryBarrier
supportsArgumentBuffersTier2
supportsReadWriteTextureArgumentsTier2
supportsStreamingCodecSignaling
supportsProgrammableSamplePositions
supportsLargeFramebufferConfigs
supportsCustomBorderColor
supportsSamplerAddressModeClampToHalfBorder
supports3DBCTextures
supportsRGBA10A2Gamma
supportsBGR10A2
supportsPrimitiveRestartOverride
supportsGlobalVariableRelocation
supportsGlobalVariableRelocationRender
supportsGlobalVariableRelocationCompute
supportsTLS
supports32bpcMSAATextures
supportsVertexAmplification
supportsPlacementHeaps
supportsOpenCLTextureWriteSwizzles
supportsInt64
supportsFixedLinePointFillDepthGradient
supportsLateEvalEvent
supportsNonZeroTextureWriteLOD
supportsSharedTextureHandles
supportsBufferPrefetchStatistics
supportsLimitedYUVFormats
supportsNonPrivateDepthStencilTextures
supportsNonPrivateMSAATextures
supportsSharedStorageHeapResources
supportsSharedStorageTextures
supportsLinearTextureFromSharedBuffer
supportsPipelineLibraries
supportsFragmentOnlyEncoders
supportsBufferWithIOSurface
supportsProgrammableBlending
supportsRenderToLinearTextures
supportsMemorylessRenderTargets
supportsFastMathInfNaNPropagation
supportsInvariantVertexPosition
supportsShaderLODAverage
supportsRelaxedTextureViewRequirements
supportsSeparateDepthStencil
supportsGPUStatistics
supportsCompressedTextureViewSPI
supportsRenderTargetTextureRotation
supportsDynamicControlPointCount
supportsIABHashForTools
supportsBinaryArchives
supportsBinaryLibraries
supportsDeadlineProfile
supportsFillTexture
supportsSetThreadgroupPackingDisabled
supportsASTCTextureCompression
supportsExtendedYUVFormats
supportsPublicXR10Formats
supportsSRGBwrites
supportsDepthClipMode
supportsPacked32TextureBufferWrites
supports3DASTCTextures
supportsExtendedXR10Formats
supportsFragmentBufferWrites
supportsCountingOcclusionQuery
supportsBaseVertexInstanceDrawing
supportsIndirectDrawAndDispatch
supportsTessellation
supportsReadWriteBufferArguments
supportsArrayOfTextures
supportsArrayOfSamplers
supportsCombinedMSAAStoreAndResolveAction
supportsMutableTier1ArgumentBuffers
supportsSamplerCompareFunction
supportsMSAADepthResolve
supportsMSAAStencilResolve
supportsMSAADepthResolveFilter
supportsGFXIndirectCommandBuffers
supportsCMPIndirectCommandBuffers
supportsIndirectStageInRegion
supportsIndirectTextures
supportsNorm16BCubicFiltering
supportsTextureOutOfBoundsReads
supportsTextureSwizzle
supportsAlphaYUVFormats
supportsMemoryOrderAtomics
supportsQuadGroup
supportsRenderTextureWrites
supportsImageBlocks
supportsTileShaders
supportsImageBlockSampleCoverageControl
supportsNativeHardwareFP16
supportsPostDepthCoverage
supportsMipLevelsSmallerThanBlockSize
supportsNonUniformThreadgroupSize
supportsReadWriteTextureArguments
supportsReadWriteTextureCubeArguments
supportsTextureCubeArray
supportsQuadShufflesAndBroadcast
supportsConcurrentComputeDispatch
supportsRenderPassWithoutRenderTarget
supportsRasterOrderGroups
supportsRasterOrderGroupsColorAttachment
supportsLinearTexture2DArray
supportsNonSquareTileShaders
supportsSeparateVisibilityAndShadingRate
supports2DLinearTexArraySPI
supportsLayeredRendering
supportsViewportAndScissorArray
supportsIndirectTessellation
supportsMSAAStencilResolveFilter
supportsStencilFeedback
supportsFP32TessFactors
supportsUnalignedVertexFetch
supportsSIMDGroup
supportsShaderMinLODClamp
supportsSIMDShufflesAndBroadcast
supportsWritableArrayOfTextures
supportsVariableRateRasterization
supportsYCBCRFormats
supportsYCBCRFormatsPQ
supportsYCBCRFormats12
supportsYCBCRFormatsXR
supportsASTCHDRTextureCompression
supportsSparseTextures
supportsSparseHeaps
supportsIndirectWritableTextures
supportsStatefulDynamicLibraries
supportsSharedFunctionTables
supportsRayTracingExtendedVertexFormats
supportsHeapAccelerationStructureAllocation
supportsRayTracingPerPrimitiveData
supportsRayTracingBuffersFromTables
supportsRayTracingAccelerationStructureCPUDeserialization
supportsBlackOrWhiteSamplerBorderColors
supportsMirrorClampToEdgeSamplerMode
supportsSIMDReduction
supportsDepthClipModeClampExtended
supportsTexture2DMultisampleArray
supportsForceSeamsOnCubemaps
supportsFloat16BCubicFiltering
supportsFloat16InfNanFiltering
supportsRTZRounding
supportsAnisoSampleFix
supportsYCBCRPackedFormatsPQ
supportsYCBCRPackedFormats12
supportsYCBCRPackedFormatsXR
supportsBufferBoundsChecking
supportsForkJoin
supportsDevicePartitioning
supportsComputeCompressedTextureWrite
supportsSIMDGroupMatrix
supportsInterchangeTiled
supportsQuadReduction
supportsSIMDShuffleAndFill
supportsBfloat16Format
supportsSparseDepthAttachments
supportsAtomicUlongVoidMinMax
supportsLossyCompression
supportsMeshShaders
supportsFunctionPointersFromMesh
supportsMeshShadersInICB
supportsCommandBufferJump
supportsStackOverflowErrorCode
supportsRayTracingICBs
supportsExplicitVisibilityGroups
bufferRobustnessSupport
deviceCreationFlags
areGPUAssertionsEnabled
setGPUAssertionsEnabled:
commandBufferErrorOptions
setCommandBufferErrorOptions:
isBCTextureCompressionSupported
targetDeviceInfo
targetDeviceArchitecture
architecture
halfFPConfig
singleFPConfig
doubleFPConfig
metalAssertionsEnabled
setMetalAssertionsEnabled:
featureProfile
simulatorHostFeatureProfile
limits
maxFramebufferStorageBits
linearTextureArrayAlignmentBytes
linearTextureArrayAlignmentSlice
maxTileBuffers
maxTileTextures
maxTileSamplers
maxTileInlineDataSize
minTilePixels
maxColorAttachments
maxVertexAttributes
maxVertexBuffers
maxVertexTextures
maxVertexSamplers
maxVertexInlineDataSize
maxInterpolants
maxFragmentBuffers
maxFragmentTextures
maxFragmentSamplers
maxFragmentInlineDataSize
maxComputeBuffers
maxComputeTextures
maxComputeSamplers
maxComputeInlineDataSize
maxComputeLocalMemorySizes
maxTotalComputeThreadsPerThreadgroup
maxComputeThreadgroupMemory
maxLineWidth
maxPointSize
maxVisibilityQueryOffset
minConstantBufferAlignmentBytes
minBufferNoCopyAlignmentBytes
maxTextureWidth1D
maxTextureWidth2D
maxTextureHeight2D
maxTextureWidth3D
maxTextureHeight3D
maxTextureDepth3D
maxTextureDimensionCube
maxTextureLayers
linearTextureAlignmentBytes
iosurfaceTextureAlignmentBytes
iosurfaceReadOnlyTextureAlignmentBytes
deviceLinearTextureAlignmentBytes
deviceLinearReadOnlyTextureAlignmentBytes
maxFunctionConstantIndices
maxComputeThreadgroupMemoryAlignmentBytes
maxInterpolatedComponents
maxTessellationFactor
maxIndirectBuffers
maxIndirectTextures
maxIndirectSamplers
maxIndirectSamplersPerDevice
maxFenceInstances
maxViewportCount
maxCustomSamplePositions
maxVertexAmplificationFactor
maxVertexAmplificationCount
maxTextureBufferWidth
maxComputeAttributes
maxIOCommandsInFlight
maxPredicatedNestingDepth
maxConstantBufferArguments
supportPriorityBand
sharedMemorySize
dedicatedMemorySize
indirectArgumentBufferCapabilities
isFloat32FilteringSupported
isMsaa32bSupported
isRTZRoundingSupported
defaultTextureWriteRoundingMode
isAnisoSampleFixSupported
isFixedLinePointFillDepthGradientSupported
isLargeMRTSupported
maxRasterizationRateLayerCount
isPlacementHeapSupported
GPUBVHBuilder
requiresRaytracingEmulation
pluginData
setPluginData:
supportsPrimitiveType:
indirectArgumentBufferDecodingData
setIndirectArgumentBufferDecodingData:
setupMPSFunctionTable:
resourcePatchingTypeForResourceType:
reserveResourceIndicesForResourceType:indices:indexCount:
reserveGPUAddressRange:
newBufferWithLength:options:gpuAddress:
newBufferWithBytes:length:options:gpuAddress:
newBufferWithBytesNoCopy:length:options:gpuAddress:deallocator:
newBufferWithDescriptor:
newLateEvalEvent
mapShaderSampleBufferWithBuffer:capacity:size:
unmapShaderSampleBuffer
newComputePipelineStateWithDescriptor:error:
newComputePipelineStateWithDescriptor:completionHandler:
newRenderPipelineStateWithTileDescriptor:error:
newRenderPipelineStateWithTileDescriptor:completionHandler:
newFunctionWithGLCoreIR:functionType:
newFunctionWithGLCoreIR:inputsDescription:functionType:
newFunctionWithGLESIR:functionType:
newFunctionWithGLESIR:inputsDescription:functionType:
newFunctionWithGLIR:functionType:
newFunctionWithGLIR:inputsDescription:functionType:
getShaderCacheKeys
getBVHBuilderLock
getRawBVHBuilderPtr
setRawBVHBuilderPtr:
newIndirectArgumentEncoderWithArguments:
newComputePipelineStateWithImageFilterFunctionsSPI:imageFilterFunctionInfo:error:
newLibraryWithDAG:functions:error:
newLibraryWithGraphs:functions:error:
newLibraryWithGraphsSPI:functions:error:
newLibraryWithStitchedDescriptorSPI:error:
newLibraryWithDescriptor:error:
newLibraryWithDescriptor:completionHandler:
newLibraryWithDescriptorSPI:error:
newDagStringWithGraphs:
newLibraryWithImageFilterFunctionsSPI:imageFilterFunctionInfo:error:
newLibraryWithCIFilters:imageFilterFunctionInfo:error:
newLibraryWithCIFiltersForComputePipeline:imageFilterFunctionInfo:error:
newPipelineLibraryWithFilePath:error:
startCollectingPipelineDescriptors
startCollectingPipelineDescriptorsUsingPrefixForNames:
endCollectingPipelineDescriptors
serializeRenderPipelineDescriptor:
serializeComputePipelineDescriptor:
newRenderPipelineDescriptorWithSerializedData:deserializationContext:
newComputePipelineDescriptorWithSerializedData:deserializationContext:
serializeStructType:
serializeStructType:version:
newStructTypeWithSerializedData:
newTextureWithBytesNoCopy:length:descriptor:deallocator:
newTextureLayoutWithDescriptor:isHeapOrBufferBacked:
newIndirectArgumentEncoderWithLayout:
tileSizeWithSparsePageSize:textureType:pixelFormat:sampleCount:
compileVisibleFunction:withDescriptor:destinationBinaryArchive:error:
compileVisibleFunction:withDescriptor:error:
compileVisibleFunction:withDescriptor:completionHandler:
newResourceGroupFromResources:count:
deserializeCompileTimeStats:addToDictionary:
shaderDebugInfoCaching
setShaderDebugInfoCaching:
isQuadDataSharingSupported
sparseTexturesSupport
isRGB10A2GammaSupported
isCustomBorderColorSupported
isClampToHalfBorderSupported
TB,R,N
gpuAssertionsEnabled
TB,GareGPUAssertionsEnabled,SsetGPUAssertionsEnabled:
TQ,N
BCTextureCompressionSupported
TB,R,GisBCTextureCompressionSupported
Tr^{MTLTargetDeviceArch=QI*},R
T@"MTLTargetDeviceArchitecture",R
T@"MTLArchitecture",R
TB,N
Tr^{?=IIIIIIIIIIIIIIIIIIIIIIIIIIffIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIQ},R
Tf,R
T{IndirectArgumentBufferCapabilities=b1b1b1b29},R
quadDataSharingSupported
TB,R,GisQuadDataSharingSupported
float32FilteringSupported
TB,R,GisFloat32FilteringSupported
msaa32bSupported
TB,R,GisMsaa32bSupported
RTZRoundingSupported
TB,R,GisRTZRoundingSupported
Tq,R
AnisoSampleFixSupported
TB,R,GisAnisoSampleFixSupported
FixedLinePointFillDepthGradientSupported
TB,R,GisFixedLinePointFillDepthGradientSupported
largeMRTSupported
TB,R,GisLargeMRTSupported
RGB10A2GammaSupported
TB,R,GisRGB10A2GammaSupported
CustomBorderColorSupported
TB,R,GisCustomBorderColorSupported
ClampToHalfBorderSupported
TB,R,GisClampToHalfBorderSupported
placementHeapSupported
TB,R,GisPlacementHeapSupported
T@"MTLGPUBVHBuilder",R
T@"NSDictionary",C,N
mainConnection
resourceConnection
compilerConnection
compiler
getNewResourceID
commandBufferForReference:
registerCommandBuffer:
releaseCommandBufferRef:
newBufferWithLength:options:pointer:copyBytes:deallocator:
registerEventNotification:listener:event:value:block:
dispatchNotificationWithReference:
deserializerSupportsSharedTextures
registerViewTexture:baseTextureView:
wrapRenderState:descriptor:
fragmentFunctionKeyWithRenderPipelineDescriptor:options:previousStateVariant:fragmentKeySize:
vertexFunctionKeyWithRenderPipelineDescriptor:options:nextStageVariant:vertexKeySize:
freeFragmentFunctionKey:fragmentKeySize:
freeVertexFunctionKey:vertexKeySize:
newFunctionVariantWithCompilerOutput:functionType:
newFragmentVariantWithCompilerOutput:pipelineStatisticsOutput:
newVertexVariantWithCompilerOutput:pipelineStatisticsOutput:
newRenderPipelineWithDescriptor:vertexVariant:fragmentVariant:errorMessage:
pipelineFlagsWithVertexVariant:fragmentVariant:
pipelinePerformanceStatisticsWithVertexVariant:fragmentVariant:vertexCompileTimeOutput:fragmentCompileTimeOutput:
pipelinePerformanceStatisticsWithComputeVariant:compileTimeOutput:
wrapComputeState:descriptor:
newComputeVariantWithCompilerOutput:pipelineStatisticsOutput:
newComputePipelineWithDescriptor:variant:errorMessage:
newTiledTextureWithBytesNoCopy:length:deallocator:descriptor:offset:bytesPerRow:
newTiledTextureWithBytesNoCopy:length:descriptor:offset:bytesPerRow:
llvmVersion
deserializerSupportsSharedEvents
serializer
resourceListPool
.cxx_destruct
.cxx_construct
_mainConnection
_resourceConnection
_compilerConnection
_serializer
_processRef
_deserializerVersion
_registryID
_commandBufferQueue
_commandBuffers
_resourceListPool
_notificationMutex
_notifications
_maxThreadsPerThreadgroup
_maxThreadgroupMemoryLength
_hostFeatureProfile
T@"NSObject<OS_xpc_object>",R
T@"MTLSerializer",R,V_serializer
T@"MTLResourceListPool",R,V_resourceListPool
TQ,R,V_hostFeatureProfile
TQ,R,V_registryID
TB,R,GisLowPower,VlowPower
TB,R,GisHeadless,Vheadless
TB,R,GisRemovable,Vremovable
TB,R,VhasUnifiedMemory
TB,R,GisDepth24Stencil8PixelFormatSupported,Vdepth24Stencil8PixelFormatSupported
TQ,R,VcurrentAllocatedSize
TB,R,GareProgrammableSamplePositionsSupported,VprogrammableSamplePositionsSupported
newArgumentEncoderWithBufferIndex:
newArgumentEncoderWithBufferIndex:reflection:
functionType
patchType
patchControlPointCount
vertexAttributes
stageInputAttributes
functionConstantsDictionary
options
T@"NSDictionary",R
initWithDevice:functionType:functionRef:
functionRef
formattedDescription:
_functionRef
_functionType
TI,R
T@"NSString",C,Vlabel
T@"<MTLDevice>",R,V_device
TQ,R,V_functionType
TQ,R,VpatchType
Tq,R,VpatchControlPointCount
T@"NSArray",R,VvertexAttributes
T@"NSArray",R,VstageInputAttributes
T@"NSString",R,Vname
T@"NSDictionary",R,VfunctionConstantsDictionary
initWithCompilerOutput:
function
initWithFunction:compilerOutput:
_function
T@"MTLSimFunction",R
fenceRef
initWithDevice:fenceRef:
_fenceRef
serializerResourceRef
bufferRef
setPurgeableState:
makeAliasable
isAliasable
cpuCacheMode
storageMode
hazardTrackingMode
resourceOptions
heap
heapOffset
allocatedSize
T@"<MTLHeap>",R
isPurgeable
isComplete
waitUntilComplete
doesAliasResource:
doesAliasAllResources:count:
doesAliasAnyResources:count:
responsibleProcess
setResponsibleProcess:
allocationID
protectionOptions
unfilteredResourceOptions
setOwnerWithIdentity:
contents
didModifyRange:
newTextureWithDescriptor:offset:bytesPerRow:
addDebugMarker:range:
removeAllDebugMarkers
length
gpuAddress
newLinearTextureWithDescriptor:offset:bytesPerRow:bytesPerImage:
_aneIOSurface
iosurface
resourceIndex
parentGPUAddress
setParentGPUAddress:
parentGPUSize
setParentGPUSize:
T^{__IOSurface=},R
TQ,R,N
initWithDevice:bufferRef:content:pointer:length:options:heap:deallocator:
newRemoteBufferViewForDevice:
_bufferRef
_content
_pointer
_deallocator
_length
_iosurface
_gpuAddress
T^{__IOSurface=},R,V_iosurface
TQ,R,D
TQ,R,V_gpuAddress
initWithEntrySize:device:
allocStorage
getStorage
returnStorage:
head
tail
storageSize
semaphore
setPrimitiveRestartEnabled:
initWithType:options:
maxAvailableSizeWithAlignment:
newBufferWithLength:options:offset:
newTextureWithDescriptor:offset:
newAccelerationStructureWithSize:offset:
newAccelerationStructureWithDescriptor:offset:
size
usedSize
type
newAccelerationStructureWithSize:offset:resourceIndex:
heapRef
initWithDescriptor:device:heapRef:
getSizeInfo
newBufferWithLength:options:offset:useOffset:
newTextureWithDescriptor:offset:useOffset:
_heapRef
_purgeableState
initWithQueue:retainedReferences:
commitAndWaitUntilSubmitted
enqueue
commit
addScheduledHandler:
presentDrawable:
presentDrawable:atTime:
waitUntilScheduled
addCompletedHandler:
waitUntilCompleted
blitCommandEncoder
renderCommandEncoderWithDescriptor:
computeCommandEncoderWithDescriptor:
blitCommandEncoderWithDescriptor:
computeCommandEncoder
computeCommandEncoderWithDispatchType:
encodeWaitForEvent:value:
encodeSignalEvent:value:
parallelRenderCommandEncoderWithDescriptor:
resourceStateCommandEncoder
resourceStateCommandEncoderWithDescriptor:
accelerationStructureCommandEncoder
accelerationStructureCommandEncoderWithDescriptor:
pushDebugGroup:
popDebugGroup
commandQueue
retainedReferences
errorOptions
kernelStartTime
kernelEndTime
logs
GPUStartTime
GPUEndTime
status
error
T@"<MTLCommandQueue>",R
Td,R
T@"<MTLLogContainer>",R
T@"NSError",R
encodeDashboardTagForResourceGroup:
encodeDashboardFinalizeForResourceGroup:dashboard:value:forIndex:
encodeDashboardFinalizeForResourceGroup:dashboard:values:indices:count:
addPurgedResource:
addPurgedHeap:
commitWithDeadline:
commitAndWaitUntilSubmittedWithDeadline:
setLogs:
presentDrawable:options:
isProfilingEnabled
setProfilingEnabled:
profilingResults
userDictionary
deadlineProfile
debugBufferContentsWithLength:
sampledRenderCommandEncoderWithDescriptor:programInfoBuffer:capacity:
sampledComputeCommandEncoderWithProgramInfoBuffer:capacity:
sampledComputeCommandEncoderWithDispatchType:programInfoBuffer:capacity:
sampledComputeCommandEncoderWithDescriptor:programInfoBuffer:capacity:
debugCommandEncoder
commitAndHold
setProtectionOptions:
encodeWaitForEvent:value:timeout:
setResourceGroups:count:
dropResourceGroups:count:
encodeCacheHintTag:resourceGroups:count:
encodeCacheHintFinalize:resourceGroups:count:
getListIndex
globalTraceObjectID
listIndex
TQ,R,N,GgetListIndex
profilingEnabled
TB,GisProfilingEnabled
T@"NSMutableDictionary",R,N
T@"<MTLDeadlineProfile>",R,&
getCommandBufferBytes:
addResourceReference:isWrite:
addStateReference:
getBufferBytes:alignment:buffer:offset:
endEncoding
beginContinuation
splitHandler
setSplitHandler:
merge:
T@?,C
commandBufferRef
getCommandBytes:forCommand:
split
commandHead
bufferHead
segmentCount
commandCurrentStorage
commandTail
commandPrevious
bufferCurrentStorage
currentStorageOffset
continuation
_protectionOptions
_resourceList
T@"<MTLDevice>",R,Vdevice
T@?,C,VsplitHandler
initWithDevice:maxCommandBufferCount:
initWithDevice:descriptor:
commandBuffer
commandBufferWithDescriptor:
commandBufferWithUnretainedReferences
insertDebugCaptureBoundary
getGPUPriority
setGPUPriority:
setGPUPriority:offset:
getBackgroundGPUPriority
setBackgroundGPUPriority:
setBackgroundGPUPriority:offset:
setSubmissionQueue:
setCompletionQueue:
finish
backgroundTrackingPID
setBackgroundTrackingPID:
maxCommandBufferCount
qosLevel
commitQueue
commitSynchronously
completionQueue
disableCrossQueueHazardTracking
skipRender
setSkipRender:
executionEnabled
setExecutionEnabled:
isOpenGLQueue
getSPIStats
availableCounters
availableCountersAndDict
requestCounters:
requestCounters:withIndex:
getRequestedCounters
subdivideCounterList:
addPerfSampleHandler:
counterInfo
dispatchAvailableCompletionNotifications
isStatEnabled
setStatEnabled:
getStatOptions
setStatOptions:
getStatLocations
setStatLocations:
T@"NSObject<OS_dispatch_queue>",R
StatEnabled
TB,N,GisStatEnabled
StatOptions
TQ,N,GgetStatOptions
StatLocations
TQ,N,GgetStatLocations
initWithDevice:commandQueueRef:descriptor:
submitCommandBuffers:count:
getCommandBufferStorage
returnCommandBufferStorage:
getBufferStorage
returnBufferStorage:
bufferStorageByteCount
commandPool
bufferPool
_commandQueueRef
TQ,R,VbufferStorageByteCount
copyFromTexture:sourceSlice:sourceLevel:toTexture:destinationSlice:destinationLevel:sliceCount:levelCount:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:options:
copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:
initWithEntrySize:
initWithDevice:pipelineStateDescriptor:
imageblockMemoryLengthForDimensions:
functionHandleWithFunction:
newComputePipelineStateWithAdditionalBinaryFunctions:error:
maxTotalThreadsPerThreadgroup
threadExecutionWidth
staticThreadgroupMemoryLength
supportIndirectCommandBuffers
gpuResourceID
T{MTLResourceID=Q},R
pipelineBinaries
textureWriteRoundingMode
uniqueIdentifier
debugInstrumentationData
gpuHandle
T@"MTLDebugInstrumentationData",R,&,N
pipelineRef
getWritableInfo:buffers:texturesArrayLength:textures:
initWithDevice:pipelineRef:descriptor:
setMaxTotalThreadsPerThreadgroup:
setThreadExecutionWidth:
setStaticThreadgroupMemoryLength:
setSupportIndirectCommandBuffers:
_pipelineRef
_uniqueIdentifier
TQ,N,VmaxTotalThreadsPerThreadgroup
TQ,N,VthreadExecutionWidth
TQ,N,VstaticThreadgroupMemoryLength
TB,N,VsupportIndirectCommandBuffers
TQ,R,V_uniqueIdentifier
initWithDevice:depthStencilDescriptor:
readsDepth
writesDepth
readsStencil
writesStencil
depthStencilRef
initWithDescriptor:reference:device:
functionHandleWithFunction:stage:
newVisibleFunctionTableWithDescriptor:stage:
newIntersectionFunctionTableWithDescriptor:stage:
newRenderPipelineStateWithAdditionalBinaryFunctions:error:
threadgroupSizeMatchesTileSize
imageblockSampleLength
maxTotalThreadsPerObjectThreadgroup
maxTotalThreadsPerMeshThreadgroup
objectThreadExecutionWidth
meshThreadExecutionWidth
maxTotalThreadgroupsPerMeshGrid
newVertexShaderDebugInfo
newFragmentShaderDebugInfo
vertexFunctionHandleWithFunction:
fragmentFunctionHandleWithFunction:
tileFunctionHandleWithFunction:
objectFunctionHandleWithFunction:
meshFunctionHandleWithFunction:
newVisibleFunctionTableFromVertexStageWithDescriptor:
newVisibleFunctionTableFromFragmentStageWithDescriptor:
newVisibleFunctionTableFromTileStageWithDescriptor:
newVisibleFunctionTableFromObjectStageWithDescriptor:
newVisibleFunctionTableFromMeshStageWithDescriptor:
newRenderPipelineStateWithAdditionalBinaryFunctions:fragmentAdditionalBinaryFunctions:error:
newTileRenderPipelineStateWithAdditionalBinaryFunctions:error:
newVertexIntersectionFunctionTableWithDescriptor:
newFragmentIntersectionFunctionTableWithDescriptor:
newTileIntersectionFunctionTableWithDescriptor:
vertexDebugInstrumentationData
fragmentDebugInstrumentationData
tileDebugInstrumentationData
objectDebugInstrumentationData
meshDebugInstrumentationData
newObjectIntersectionFunctionTableWithDescriptor:
newMeshIntersectionFunctionTableWithDescriptor:
explicitVisibilityGroupID
TI,R,N
getWritableInfo:vtxBuffers:vtxTexturesArrayLength:vtxTextures:frgBuffersLength:frgBuffers:frgTexturesArrayLength:frgTextures:
getFragmentShaderTelemetryID
getVertexShaderTelemetryID
initWithResourceRef:options:device:heap:
retainedLabel
doesAliasResources:count:all:
setHeapOffset:
_heap
_heapOffset
_resourceRef
_options
_cpuCacheMode
_storageMode
_label
_labelLock
_hazardTrackingMode
_isAliasable
Ti,VresponsibleProcess
TQ,R,VallocationID
TQ,R,VprotectionOptions
T@"NSString",C,D
T@"<MTLDevice>",R,D
TQ,R,V_cpuCacheMode
TQ,R,V_storageMode
T@"<MTLHeap>",R,D
TQ,R,VallocatedSize
TI,R,V_resourceRef
initWithDevice:samplerDescriptor:
pixelFormat
samplerRef
getDecompressedFormat:
decompress:expandedTex:srcFormat:destFormat:width:height:destRowBytes:srcRowBytes:
textureRef
getBytes:bytesPerRow:bytesPerImage:fromRegion:mipmapLevel:slice:
replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:
getBytes:bytesPerRow:fromRegion:mipmapLevel:
replaceRegion:mipmapLevel:withBytes:bytesPerRow:
newTextureViewWithPixelFormat:
newTextureViewWithPixelFormat:textureType:levels:slices:
newTextureViewWithPixelFormat:textureType:levels:slices:swizzle:
rootResource
parentTexture
parentRelativeLevel
parentRelativeSlice
buffer
bufferOffset
bufferBytesPerRow
iosurfacePlane
textureType
width
height
depth
mipmapLevelCount
sampleCount
arrayLength
usage
isFramebufferOnly
firstMipmapInTail
tailSizeInBytes
isSparse
allowGPUOptimizedContents
compressionType
swizzle
T@"<MTLResource>",R
T@"<MTLTexture>",R
T@"<MTLBuffer>",R
framebufferOnly
TB,R,GisFramebufferOnly
T{?=CCCC},R,N
rotation
isCompressed
compressionFeedback
swizzleKey
numFaces
isDrawable
compressionFootprint
newCompressedTextureViewWithPixelFormat:textureType:level:slice:
canGenerateMipmapLevels
generateMipmapLevel:slice:
newTextureViewWithPixelFormat:resourceIndex:
newTextureViewWithPixelFormat:textureType:levels:slices:resourceIndex:
newTextureViewWithPixelFormat:textureType:levels:slices:swizzle:resourceIndex:
sparseSurfaceDefaultValue
backingBuffer
decompressedTextureView
decompressPlaceholder:expandedTex:srcFormat:destFormat:width:height:destRowBytes:srcRowBytes:
calculateOffsetToRegion:level:slice:
initWithTextureInternal:pixelFormat:decompressedPixelFormat:textureType:levels:slices:swizzle:compressedView:textureRef:isInternalTextureView:
initWithTexture:pixelFormat:decompressedPixelFormat:textureType:levels:slices:swizzle:textureRef:isInternalTextureView:
initWithTexture:pixelFormat:decompressedPixelFormat:textureRef:isInternalTextureView:
initWithBuffer:offset:bytesPerRow:descriptor:textureRef:
initWithDescriptor:decompressedPixelFormat:iosurface:plane:textureRef:heap:device:
initWithDescriptor:decompressedPixelFormat:iosurface:plane:textureRef:heap:device:shareable:
initWithTexture:device:
newRemoteTextureViewForDevice:
newTextureViewWithPixelFormatInternal:isInternalTextureView:
didModifyData
decompressedPixelFormat
isShareable
_parentTexture
_parentRelativeLevel
_parentRelativeSlice
_buffer
_textureType
_pixelFormat
_decompressedPixelFormat
_usage
_backingBuffer
_backingBufferSize
_decompressedTextureView
_width
_height
_depth
_mipmapLevelCount
_sampleCount
_arrayLength
_numFaces
_iosurfacePlane
_bufferOffset
_bufferBytesPerRow
_allowGPUOptimizedContents
_framebufferOnly
_swizzle
_isInternalTextureView
_firstMipmapInTail
_tailSizeInBytes
_isDrawable
_shareable
shareable
TB,R,GisShareable,V_shareable
TQ,R,ViosurfacePlane
TQ,R,Vrotation
Tq,R,D
TI,R,V_swizzle
TB,R,V_isDrawable
T@"<MTLResource>",R,VrootResource
T@"<MTLTexture>",R,D
TQ,R,V_parentRelativeLevel
TQ,R,VparentRelativeSlice
T@"<MTLBuffer>",R,D
TQ,R,V_usage
TB,R,GisFramebufferOnly,V_framebufferOnly
TQ,R,V_firstMipmapInTail
TQ,R,V_tailSizeInBytes
TB,R,V_allowGPUOptimizedContents
T{?=CCCC},R,D,N
@36@0:8@16I24^{?=Ssi}28
v16@0:8
B16@0:8
Q16@0:8
Q24@0:8Q16
I16@0:8
@"MTLSimDevice"
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16Q24
v40@0:8@16Q24Q32
v48@0:8r^@16r^Q24{_NSRange=QQ}32
v40@0:8r^@16{_NSRange=QQ}24
^v24@0:8Q16
@24@0:8Q16
v24@0:8@16
v32@0:8@"<MTLBuffer>"16Q24
v40@0:8@"<MTLBuffer>"16Q24Q32
v32@0:8@"<MTLTexture>"16Q24
v32@0:8@"<MTLSamplerState>"16Q24
v32@0:8@"<MTLRenderPipelineState>"16Q24
v32@0:8@"<MTLComputePipelineState>"16Q24
v32@0:8@"<MTLIndirectCommandBuffer>"16Q24
v32@0:8@"<MTLAccelerationStructure>"16Q24
@"<MTLArgumentEncoder>"24@0:8Q16
v32@0:8@"<MTLVisibleFunctionTable>"16Q24
v32@0:8@"<MTLIntersectionFunctionTable>"16Q24
@"<MTLDevice>"16@0:8
v24@0:8@"NSString"16
@"_MTLIndirectArgumentBufferLayout"16@0:8
@44@0:8@16I24@28^{?=SI}36
@"MTLSimIndirectArgumentBufferLayout"
@"MTLSimBuffer"
*24@0:8Q16
@"NSObject<OS_dispatch_data>"
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@36@0:8I16Q20@28
v40@0:8@16Q24@?32
v24@0:8Q16
v40@0:8@"MTLSharedEventListener"16Q24@?<v@?@"<MTLSharedEvent>"Q>32
@"MTLSharedEventHandle"16@0:8
@28@0:8@16I24
B32@0:8Q16Q24
{?=QQ}24@0:8@16
{?=QQ}32@0:8Q16Q24
@32@0:8Q16Q24
@40@0:8r^v16Q24Q32
@48@0:8^v16Q24Q32@?40
@40@0:8@16^{__IOSurface=}24Q32
@32@0:8@16^@24
@40@0:8@16@24^@32
v40@0:8@16@24@?32
v32@0:8@16@?24
@48@0:8@16Q24^@32^@40
B24@0:8Q16
B24@0:8q16
v32@0:8^{?=ff}16Q24
@40@0:8@16Q24Q32
@40@0:8@16q24^@32
{?=QQQ}40@0:8Q16Q24Q32
Q24@0:8q16
{?=QQQ}48@0:8Q16Q24Q32q40
v32@0:8^Q16^Q24
{?=QQQ}24@0:8@16
{?=QQ}24@0:8Q16
{?=QQQ}16@0:8
v72@0:8r^{?={?=QQQ}{?=QQQ}}16^{?={?=QQQ}{?=QQQ}}24{?=QQQ}32Q56Q64
v64@0:8r^{?={?=QQQ}{?=QQQ}}16^{?={?=QQQ}{?=QQQ}}24{?=QQQ}32Q56
@"<MTLCommandQueue>"16@0:8
@"<MTLCommandQueue>"24@0:8Q16
{?=QQ}24@0:8@"MTLTextureDescriptor"16
@"<MTLHeap>"24@0:8@"MTLHeapDescriptor"16
@"<MTLBuffer>"32@0:8Q16Q24
@"<MTLBuffer>"40@0:8r^v16Q24Q32
@"<MTLBuffer>"48@0:8^v16Q24Q32@?<v@?^vQ>40
@"<MTLDepthStencilState>"24@0:8@"MTLDepthStencilDescriptor"16
@"<MTLTexture>"24@0:8@"MTLTextureDescriptor"16
@"<MTLTexture>"40@0:8@"MTLTextureDescriptor"16^{__IOSurface=}24Q32
@"<MTLSamplerState>"24@0:8@"MTLSamplerDescriptor"16
@"<MTLLibrary>"16@0:8
@"<MTLLibrary>"32@0:8@"NSBundle"16^@24
@"<MTLLibrary>"32@0:8@"NSString"16^@24
@"<MTLLibrary>"32@0:8@"NSURL"16^@24
@"<MTLLibrary>"32@0:8@"NSObject<OS_dispatch_data>"16^@24
@"<MTLLibrary>"40@0:8@"NSString"16@"MTLCompileOptions"24^@32
v40@0:8@"NSString"16@"MTLCompileOptions"24@?<v@?@"<MTLLibrary>"@"NSError">32
@"<MTLLibrary>"32@0:8@"MTLStitchedLibraryDescriptor"16^@24
v32@0:8@"MTLStitchedLibraryDescriptor"16@?<v@?@"<MTLLibrary>"@"NSError">24
@"<MTLRenderPipelineState>"32@0:8@"MTLRenderPipelineDescriptor"16^@24
@"<MTLRenderPipelineState>"48@0:8@"MTLRenderPipelineDescriptor"16Q24^@32^@40
v32@0:8@"MTLRenderPipelineDescriptor"16@?<v@?@"<MTLRenderPipelineState>"@"NSError">24
v40@0:8@"MTLRenderPipelineDescriptor"16Q24@?<v@?@"<MTLRenderPipelineState>"@"MTLRenderPipelineReflection"@"NSError">32
@"<MTLComputePipelineState>"32@0:8@"<MTLFunction>"16^@24
@"<MTLComputePipelineState>"48@0:8@"<MTLFunction>"16Q24^@32^@40
v32@0:8@"<MTLFunction>"16@?<v@?@"<MTLComputePipelineState>"@"NSError">24
v40@0:8@"<MTLFunction>"16Q24@?<v@?@"<MTLComputePipelineState>"@"MTLComputePipelineReflection"@"NSError">32
@"<MTLComputePipelineState>"48@0:8@"MTLComputePipelineDescriptor"16Q24^@32^@40
v40@0:8@"MTLComputePipelineDescriptor"16Q24@?<v@?@"<MTLComputePipelineState>"@"MTLComputePipelineReflection"@"NSError">32
@"<MTLFence>"16@0:8
@"<MTLRenderPipelineState>"48@0:8@"MTLTileRenderPipelineDescriptor"16Q24^@32^@40
v40@0:8@"MTLTileRenderPipelineDescriptor"16Q24@?<v@?@"<MTLRenderPipelineState>"@"MTLRenderPipelineReflection"@"NSError">32
@"<MTLRenderPipelineState>"48@0:8@"MTLMeshRenderPipelineDescriptor"16Q24^@32^@40
v40@0:8@"MTLMeshRenderPipelineDescriptor"16Q24@?<v@?@"<MTLRenderPipelineState>"@"MTLRenderPipelineReflection"@"NSError">32
@"<MTLArgumentEncoder>"24@0:8@"NSArray"16
@"<MTLRasterizationRateMap>"24@0:8@"MTLRasterizationRateMapDescriptor"16
@"<MTLIndirectCommandBuffer>"40@0:8@"MTLIndirectCommandBufferDescriptor"16Q24Q32
@"<MTLEvent>"16@0:8
@"<MTLSharedEvent>"16@0:8
@"<MTLSharedEvent>"24@0:8@"MTLSharedEventHandle"16
@"<MTLIOFileHandle>"32@0:8@"NSURL"16^@24
@"<MTLIOCommandQueue>"32@0:8@"MTLIOCommandQueueDescriptor"16^@24
@"<MTLIOFileHandle>"40@0:8@"NSURL"16q24^@32
@"<MTLCounterSampleBuffer>"32@0:8@"MTLCounterSampleBufferDescriptor"16^@24
@"<MTLArgumentEncoder>"24@0:8@"<MTLBufferBinding>"16
@"<MTLDynamicLibrary>"32@0:8@"<MTLLibrary>"16^@24
@"<MTLDynamicLibrary>"32@0:8@"NSURL"16^@24
@"<MTLBinaryArchive>"32@0:8@"MTLBinaryArchiveDescriptor"16^@24
{?=QQQ}24@0:8@"MTLAccelerationStructureDescriptor"16
@"<MTLAccelerationStructure>"24@0:8Q16
@"<MTLAccelerationStructure>"24@0:8@"MTLAccelerationStructureDescriptor"16
{?=QQ}24@0:8@"MTLAccelerationStructureDescriptor"16
@"NSArray"16@0:8
v20@0:8B16
@24@0:8^{__IOSurface=}16
{?=II}16@0:8
@20@0:8I16
B44@0:8^@16Q24^Q32i40
B24@0:8{?=II}16
@32@0:8@16Q24
@32@0:8^v16@24
@40@0:8^v16@24@32
@32@0:8Q16@24
v40@0:8@16r^v24@32
v48@0:8@16r^v24@32@40
B32@0:8@16^@24
@40@0:8@16Q24^@32
@48@0:8@16@24Q32^@40
B36@0:8@16B24^@28
@40@0:8Q16@24^@32
r^{MTLTargetDeviceArch=QI*}16@0:8
r^{?=IIIIIIIIIIIIIIIIIIIIIIIIIIffIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIQ}16@0:8
f16@0:8
{IndirectArgumentBufferCapabilities=b1b1b1b29}16@0:8
q16@0:8
v24@0:8^{MPSFunctionTable=}16
v40@0:8Q16^Q24Q32
B32@0:8{_NSRange=QQ}16
@40@0:8Q16Q24Q32
@48@0:8r^v16Q24Q32Q40
@56@0:8^v16Q24Q32Q40@?48
B40@0:8^{?=III}16Q24Q32
@32@0:8^v16Q24
@40@0:8^v16@24Q32
^v16@0:8
^{os_unfair_lock_s=I}16@0:8
@40@0:8@16r^{?=BQ^{?}}24^@32
@32@0:8@16@24
@48@0:8^v16Q24@32@?40
@28@0:8@16B24
{?=QQQ}48@0:8q16Q24Q32Q40
v48@0:8@16@24@32^@40
v40@0:8@16@24^@32
@32@0:8r^@16Q24
v32@0:8@16@24
@"MTLArchitecture"24@0:8@"NSArray"16
v24@0:8@"<MTLDeviceSPI>"16
@"<MTLBuffer>"24@0:8^{__IOSurface=}16
B24@0:8@"NSString"16
@"<MTLCommandQueue>"24@0:8@"MTLCommandQueueDescriptor"16
@"_MTLIndirectArgumentBufferLayout"24@0:8@"MTLStructType"16
@"<MTLArgumentEncoder>"24@0:8@"_MTLIndirectArgumentBufferLayout"16
@"<MTLBuffer>"40@0:8@"MTLIndirectCommandBufferDescriptor"16Q24Q32
@"<MTLIndirectRenderCommandEncoder>"24@0:8@"<MTLBuffer>"16
@"<MTLIndirectComputeCommandEncoder>"24@0:8@"<MTLBuffer>"16
@"<MTLSharedEvent>"20@0:8I16
@"<MTLAccelerationStructure>"32@0:8Q16Q24
@"<MTLAccelerationStructure>"32@0:8@"<MTLBuffer>"16Q24
@"<MTLAccelerationStructure>"40@0:8@"<MTLBuffer>"16Q24Q32
@"<MTLAccelerationStructure>"32@0:8^v16@"MTLAccelerationStructureDescriptor"24
@"<MTLAccelerationStructure>"40@0:8^v16@"NSArray"24@"MTLAccelerationStructureDescriptor"32
@"<MTLAccelerationStructure>"32@0:8Q16@"MTLAccelerationStructureAllocationDescriptor"24
v40@0:8@"<MTLAccelerationStructure>"16r^v24@"MTLAccelerationStructureDescriptor"32
v48@0:8@"<MTLAccelerationStructure>"16r^v24@"NSArray"32@"MTLAccelerationStructureDescriptor"40
@"<MTLDynamicLibrary>"40@0:8@"<MTLLibrary>"16@"MTLComputePipelineDescriptor"24^@32
B32@0:8@"MTLDynamicLibraryDescriptorSPI"16^@24
@"<MTLDynamicLibrary>"32@0:8@"MTLDynamicLibraryDescriptorSPI"16^@24
@"<MTLDynamicLibrary>"40@0:8@"NSURL"16Q24^@32
@"NSArray"32@0:8@"MTLComputePipelineDescriptor"16^@24
@"NSArray"40@0:8@"MTLComputePipelineDescriptor"16Q24^@32
@"NSArray"40@0:8@"MTLFunction"16@"NSArray"24^@32
@"NSArray"48@0:8@"MTLFunction"16@"NSArray"24Q32^@40
B36@0:8@"<MTLLibrary>"16B24^@28
B32@0:8@"NSURL"16^@24
@"<MTLBinaryArchive>"40@0:8Q16@"NSURL"24^@32
@"<MTLVisibleFunctionTable>"24@0:8@"MTLVisibleFunctionTableDescriptor"16
@"<MTLIntersectionFunctionTable>"24@0:8@"MTLIntersectionFunctionTableDescriptor"16
@"<MTLRenderPipelineState>"32@0:8@"MTLMeshRenderPipelineDescriptor"16^@24
v32@0:8@"MTLMeshRenderPipelineDescriptor"16@?<v@?@"<MTLRenderPipelineState>"@"NSError">24
@"<MTLDeadlineProfile>"24@0:8Q16
@"MTLTargetDeviceArchitecture"16@0:8
@"MTLArchitecture"16@0:8
@"MTLGPUBVHBuilder"16@0:8
@"NSDictionary"16@0:8
v24@0:8@"NSDictionary"16
@"NSObject<OS_dispatch_data>"16@0:8
v24@0:8@"NSObject<OS_dispatch_data>"16
@"<MTLBuffer>"40@0:8Q16Q24Q32
@"<MTLBuffer>"48@0:8r^v16Q24Q32Q40
@"<MTLBuffer>"56@0:8^v16Q24Q32Q40@?<v@?^vQ>48
@"<MTLBuffer>"24@0:8@"MTLBufferDescriptor"16
@"<MTLLateEvalEvent>"16@0:8
@"<MTLComputePipelineState>"32@0:8@"MTLComputePipelineDescriptor"16^@24
v32@0:8@"MTLComputePipelineDescriptor"16@?<v@?@"<MTLComputePipelineState>"@"NSError">24
@"<MTLRenderPipelineState>"32@0:8@"MTLTileRenderPipelineDescriptor"16^@24
v32@0:8@"MTLTileRenderPipelineDescriptor"16@?<v@?@"<MTLRenderPipelineState>"@"NSError">24
@"<MTLFunction>"32@0:8^v16Q24
@"<MTLFunction>"40@0:8^v16@"NSObject<OS_dispatch_data>"24Q32
v24@0:8@"MTLGPUBVHBuilder"16
@"<MTLIndirectArgumentEncoder>"24@0:8@"NSArray"16
@"<MTLComputePipelineState>"40@0:8@"NSArray"16r^{?=BQ^{?}}24^@32
@"<MTLLibrary>"40@0:8@"NSString"16@"NSArray"24^@32
@"<MTLLibrary>"40@0:8@"NSArray"16@"NSArray"24^@32
@"<MTLLibrary>"32@0:8@"MTLStitchedLibraryDescriptorSPI"16^@24
@"NSString"24@0:8@"NSArray"16
@"<MTLLibrary>"40@0:8@"NSArray"16r^{?=BQ^{?}}24^@32
@"<MTLPipelineLibrarySPI>"32@0:8@"NSString"16^@24
@"NSData"16@0:8
@"NSObject<OS_dispatch_data>"24@0:8@"MTLRenderPipelineDescriptor"16
@"NSObject<OS_dispatch_data>"24@0:8@"MTLComputePipelineDescriptor"16
@"MTLRenderPipelineDescriptor"32@0:8@"NSObject<OS_dispatch_data>"16@"<MTLDeserializationContext>"24
@"MTLComputePipelineDescriptor"32@0:8@"NSObject<OS_dispatch_data>"16@"<MTLDeserializationContext>"24
@"NSObject<OS_dispatch_data>"24@0:8@"MTLStructType"16
@"NSObject<OS_dispatch_data>"28@0:8@"MTLStructType"16I24
@"MTLStructType"24@0:8@"NSObject<OS_dispatch_data>"16
@"<MTLTexture>"48@0:8^v16Q24@"MTLTextureDescriptor"32@?<v@?^vQ>40
@"<MTLTextureLayout>"28@0:8@"MTLTextureDescriptor"16B24
@"<MTLIndirectArgumentEncoder>"24@0:8@"_MTLIndirectArgumentBufferLayout"16
v48@0:8@"<MTLFunction>"16@"MTLFunctionDescriptor"24@"<MTLBinaryArchive>"32^@40
v40@0:8@"<MTLFunction>"16@"MTLFunctionDescriptor"24^@32
v40@0:8@"<MTLFunction>"16@"MTLFunctionDescriptor"24@?<v@?@"NSError">32
@"<MTLResourceGroupSPI>"32@0:8r^@16Q24
v32@0:8@"NSObject<OS_dispatch_data>"16@"NSMutableDictionary"24
I24@0:8@16
v20@0:8I16
@52@0:8Q16Q24^v32B40@?44
v52@0:8I16@20@28Q36@?44
^v48@0:8@16Q24@32^Q40
v32@0:8^v16Q24
@48@0:8@16@24@32^@40
{?=b1b1b1b1b1b1b1b1b1b55}32@0:8@16@24
@48@0:8@16@24@32@40
@64@0:8^v16Q24@?32@40Q48Q56
@56@0:8^v16Q24@32Q40Q48
i16@0:8
{MTLSimConnection="_connection"@"NSObject<OS_xpc_object>""_serialQueue"@"NSObject<OS_dispatch_queue>"}
@"MTLSerializer"
@"NSObject<OS_dispatch_queue>"
{unordered_map<unsigned int, MTLSimCommandBuffer *, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<const unsigned int, MTLSimCommandBuffer *>>>="__table_"{__hash_table<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>, std::allocator<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>>="__value_"f}}}
@"MTLResourceListPool"
@"<MTLDeviceSPI>"
{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}
{?="width"Q"height"Q"depth"Q}
@32@0:8Q16^@24
@"<MTLArgumentEncoder>"32@0:8Q16^@24
@36@0:8@16Q24I32
@"<MTLDevice>"
@"NSString"
@"NSArray"
@"NSDictionary"
@"MTLSimFunction"
@"<MTLHeap>"16@0:8
B32@0:8r^@16Q24
v20@0:8i16
i20@0:8I16
B24@0:8@"<MTLResource>"16
v32@0:8{_NSRange=QQ}16
v40@0:8@16{_NSRange=QQ}24
@"<MTLTexture>"40@0:8@"MTLTextureDescriptor"16Q24Q32
v40@0:8@"NSString"16{_NSRange=QQ}24
@48@0:8@16Q24Q32Q40
^{__IOSurface=}16@0:8
@"<MTLTexture>"48@0:8@"MTLTextureDescriptor"16Q24Q32Q40
@76@0:8@16I24^v28^v36Q44Q52@60@?68
^{__IOSurface=}
^{BufferStorageEntry=@Q^{BufferStorageEntry}}16@0:8
v24@0:8^{BufferStorageEntry=@Q^{BufferStorageEntry}}16
^{BufferStorageEntry=@Q^{BufferStorageEntry}}
@"NSObject<OS_dispatch_semaphore>"
@"<MTLTexture>"32@0:8@"MTLTextureDescriptor"16Q24
@"<MTLAccelerationStructure>"32@0:8@"MTLAccelerationStructureDescriptor"16Q24
@"NSString"24@0:8Q16
@"<MTLAccelerationStructure>"40@0:8Q16Q24Q32
@36@0:8@16@24I32
@44@0:8Q16Q24Q32B40
@36@0:8@16Q24B32
v24@0:8@?16
v32@0:8@16d24
d16@0:8
v24@0:8@?<v@?@"<MTLCommandBuffer>">16
v24@0:8@"<MTLDrawable>"16
v32@0:8@"<MTLDrawable>"16d24
@"<MTLBlitCommandEncoder>"16@0:8
@"<MTLRenderCommandEncoder>"24@0:8@"MTLRenderPassDescriptor"16
@"<MTLComputeCommandEncoder>"24@0:8@"MTLComputePassDescriptor"16
@"<MTLBlitCommandEncoder>"24@0:8@"MTLBlitPassDescriptor"16
@"<MTLComputeCommandEncoder>"16@0:8
@"<MTLComputeCommandEncoder>"24@0:8Q16
v32@0:8@"<MTLEvent>"16Q24
@"<MTLParallelRenderCommandEncoder>"24@0:8@"MTLRenderPassDescriptor"16
@"<MTLResourceStateCommandEncoder>"16@0:8
@"<MTLResourceStateCommandEncoder>"24@0:8@"MTLResourceStatePassDescriptor"16
@"<MTLAccelerationStructureCommandEncoder>"16@0:8
@"<MTLAccelerationStructureCommandEncoder>"24@0:8@"MTLAccelerationStructurePassDescriptor"16
@"<MTLLogContainer>"16@0:8
@"NSError"16@0:8
v48@0:8@16Q24Q32Q40
v56@0:8@16Q24r^Q32r^Q40Q48
^v24@0:8^Q16
@40@0:8@16^(?={?=b8b24IQQ}{?=b8b24IQQ})24Q32
@32@0:8^(?={?=b8b24IQQ}{?=b8b24IQQ})16Q24
@40@0:8Q16^(?={?=b8b24IQQ}{?=b8b24IQQ})24Q32
v36@0:8@16Q24I32
v32@0:8r^@16Q24
v40@0:8Q16r^@24Q32
v24@0:8@"<MTLResourceGroupSPI>"16
v48@0:8@"<MTLResourceGroupSPI>"16Q24Q32Q40
v56@0:8@"<MTLResourceGroupSPI>"16Q24r^Q32r^Q40Q48
v24@0:8@"<MTLResource>"16
v24@0:8@"<MTLHeap>"16
v24@0:8@"NSArray"16
v32@0:8@"<MTLDrawable>"16@"NSDictionary"24
@"NSMutableDictionary"16@0:8
@"<MTLDeadlineProfile>"16@0:8
@"<MTLRenderCommandEncoder>"40@0:8@"MTLRenderPassDescriptor"16^(?={?=b8b24IQQ}{?=b8b24IQQ})24Q32
@"<MTLComputeCommandEncoder>"32@0:8^(?={?=b8b24IQQ}{?=b8b24IQQ})16Q24
@"<MTLComputeCommandEncoder>"40@0:8Q16^(?={?=b8b24IQQ}{?=b8b24IQQ})24Q32
@"<MTLComputeCommandEncoder>"40@0:8@"MTLComputePassDescriptor"16^(?={?=b8b24IQQ}{?=b8b24IQQ})24Q32
@"<MTLDebugCommandEncoder>"16@0:8
v36@0:8@"<MTLEvent>"16Q24I32
B28@0:8@16B24
^v48@0:8Q16Q24^@32^Q40
@?16@0:8
B28@0:8@"<MTLSerializerResource>"16B24
B24@0:8@"<MTLSerializerState>"16
@?<v@?>16@0:8
v24@0:8@?<v@?>16
v24@0:8@"<MTLSerializerCommandStream>"16
^v28@0:8Q16I24
^{StorageEntry=Q^v@^{StorageEntry}}
@"MTLResourceList"
@"<MTLCommandBuffer>"16@0:8
@"<MTLCommandBuffer>"24@0:8@"MTLCommandBufferDescriptor"16
B28@0:8Q16S24
i24@0:8@16
i32@0:8@16Q24
v24@0:8@"NSObject<OS_dispatch_queue>"16
@"NSObject<OS_dispatch_queue>"16@0:8
@"MTLCommandQueueSPIStats"16@0:8
i24@0:8@"NSArray"16
i32@0:8@"NSArray"16Q24
@"NSArray"24@0:8@"NSArray"16
v24@0:8@?<v@?@"<MTLCommandBuffer>"@"NSData"Q>16
@36@0:8@16I24@28
^{StorageEntry=Q^v@^{StorageEntry}}16@0:8
v24@0:8^{StorageEntry=Q^v@^{StorageEntry}}16
@"MTLSimCommandStoragePool"
@"MTLSimBufferStoragePool"
v80@0:8@16Q24Q32@40Q48Q56Q64Q72
v144@0:8@16Q24Q32{?=QQQ}40{?=QQQ}64@88Q96Q104{?=QQQ}112Q136
v128@0:8@16Q24Q32{?=QQQ}40{?=QQQ}64@88Q96Q104Q112Q120
v128@0:8@16Q24Q32Q40{?=QQQ}48@72Q80Q88{?=QQQ}96Q120
Q40@0:8{?=QQQ}16
{MTLResourceID=Q}16@0:8
@"<MTLFunctionHandle>"24@0:8@"<MTLFunction>"16
@"<MTLComputePipelineState>"32@0:8@"NSArray"16^@24
@"MTLDebugInstrumentationData"16@0:8
v40@0:8I16^I20I28^I32
@"<MTLFunctionHandle>"32@0:8@"<MTLFunction>"16Q24
@"<MTLVisibleFunctionTable>"32@0:8@"MTLVisibleFunctionTableDescriptor"16Q24
@"<MTLIntersectionFunctionTable>"32@0:8@"MTLIntersectionFunctionTableDescriptor"16Q24
@"<MTLRenderPipelineState>"32@0:8@"MTLRenderPipelineFunctionsDescriptor"16^@24
@"<MTLRenderPipelineState>"40@0:8@"NSArray"16@"NSArray"24^@32
@"<MTLRenderPipelineState>"32@0:8@"NSArray"16^@24
v64@0:8I16^I20I28^I32I40^I44I52^I56
@44@0:8I16Q20@28@36
B36@0:8r^@16Q24B32
@"MTLSimHeap"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
v80@0:8r*16*24Q32Q40Q48Q56Q64Q72
v104@0:8^v16Q24Q32{?={?=QQQ}{?=QQQ}}40Q88Q96
v104@0:8{?={?=QQQ}{?=QQQ}}16Q64Q72r^v80Q88Q96
v88@0:8^v16Q24{?={?=QQQ}{?=QQQ}}32Q80
v88@0:8{?={?=QQQ}{?=QQQ}}16Q64r^v72Q80
@64@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48
@68@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48{?=CCCC}64
{?=CCCC}16@0:8
@"<MTLTexture>"24@0:8Q16
@"<MTLTexture>"64@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48
@"<MTLTexture>"68@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48{?=CCCC}64
@"<MTLResource>"16@0:8
@"<MTLTexture>"16@0:8
@"<MTLBuffer>"16@0:8
@48@0:8Q16Q24Q32Q40
v32@0:8Q16Q24
@72@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48Q64
@76@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48{?=CCCC}64Q68
@"<MTLTexture>"48@0:8Q16Q24Q32Q40
@"<MTLTexture>"32@0:8Q16Q24
@"<MTLTexture>"72@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48Q64
@"<MTLTexture>"76@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48{?=CCCC}64Q68
Q80@0:8{?={?=QQQ}{?=QQQ}}16Q64Q72
@96@0:8@16Q24Q32Q40{_NSRange=QQ}48{_NSRange=QQ}64{?=CCCC}80B84I88B92
@92@0:8@16Q24Q32Q40{_NSRange=QQ}48{_NSRange=QQ}64{?=CCCC}80I84B88
@48@0:8@16Q24Q32I40B44
@52@0:8@16Q24Q32@40I48
@68@0:8@16Q24^{__IOSurface=}32Q40I48@52@60
@72@0:8@16Q24^{__IOSurface=}32Q40I48@52@60B68
@28@0:8Q16B24
@"MTLSimTexture"
@"<MTLTexture>"
@"<MTLResource>"
