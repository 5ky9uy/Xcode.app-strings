v16@?0@"<MTLSerializerAllocator>"8
v24@?0r^v8Q16
messageType
command
replyData
This object may only be decoded by an NSXPCCoder.
label
This object may only be encoded by an NSXPCCoder.
eventRef
error
eventPort
labelTraceID
v16@?0@"NSObject<OS_xpc_object>"8
status
commandBufferRef
startTime
endTime
notificationRef
command buffers
Mar  4 2023
17:04:47
simulatorDummyPlugin
v8@?0
-[MTLSimDevice sparseTileSizeWithTextureType:pixelFormat:sampleCount:]
not supported in the simulator
v24@?0^v8Q16
length
options
bufferIndex
sharedMem
bufferRef
-[MTLSimDevice newHeapWithDescriptor:]
MTLStorageModePrivate is required for heaps
-[MTLSimDevice newIndirectCommandBufferWithDescriptor:maxCommandCount:options:]
-[MTLSimDevice newTextureWithDescriptor:]
texture rotation is not supported in the simulator
-[MTLSimDevice newTextureWithDescriptor:iosurface:plane:]
iosurface
UseSimulatorSharedTextures
com.apple.Metal
-[MTLSimDevice wrapRenderState:descriptor:]
functionIR
-[MTLSimDevice wrapComputeState:descriptor:]
-[MTLSimDevice newIndirectCommandBufferWithDescriptor:maxCount:options:]
-[MTLSimDevice newIndirectComputeCommandEncoderWithBuffer:]
-[MTLSimDevice newIndirectRenderCommandEncoderWithBuffer:]
-[MTLSimDevice newTiledTextureWithBytesNoCopy:length:deallocator:descriptor:offset:bytesPerRow:]
-[MTLSimDevice newTiledTextureWithBytesNoCopy:length:descriptor:offset:bytesPerRow:]
simulator
Apple
-[MTLSimDevice newCommandQueueWithDescriptor:]
Descriptor cannot be nil
maxCommandBufferCount
commandQueueRef
-[MTLSimDevice newBufferWithIOSurface:]
-[MTLSimDevice minimumLinearTextureAlignmentForPixelFormat:]
%s is not supported on this device.
Linear textures do not support compressed pixel formats
Linear textures do not support depth/stencil pixel formats
-[MTLSimDevice minimumTextureBufferAlignmentForPixelFormat:]
-[MTLSimDevice newRenderPipelineStateWithTileDescriptor:options:completionHandler:]
-[MTLSimDevice newRenderPipelineStateWithTileDescriptor:options:reflection:error:]
-[MTLSimDevice newRenderPipelineStateWithMeshDescriptor:error:]
-[MTLSimDevice newRenderPipelineStateWithMeshDescriptor:options:reflection:error:]
-[MTLSimDevice newRenderPipelineStateWithMeshDescriptor:completionHandler:]
-[MTLSimDevice newRenderPipelineStateWithMeshDescriptor:options:completionHandler:]
EnableSimApple5
fatalError
XPCReplyCheck
connection Queue
connectionType
processRef
version
registryID
hostFeatureProfile
com.apple.metal.simulator
basic_string
UNKNOWN XPC_TYPE_ERROR
XPC_ERROR_TERMINATION_IMMINENT
XPC_ERROR_CONNECTION_INVALID
XPC_ERROR_CONNECTION_INTERRUPTED
function variant
-[MTLSimBuffer initWithDevice:bufferRef:content:pointer:length:options:heap:deallocator:]
storageModePrivate incompatible with ...WithBytes variant of newBuffer
Invalid cacheMode %u
Invalid storageMode %u
%@%@
label =
<none>
length =
cpuCacheMode =
storageMode =
hazardTrackingMode =
resourceOptions =
purgeableState =
-[MTLSimBuffer newTextureWithDescriptor:offset:bytesPerRow:]
Linear texture can only be created on buffers with MTLStorageModePrivate in the simulator
Linear textures from XR10 is not supported in the simulator
-[MTLSimRenderCommandEncoder setPrimitiveRestartEnabled:]
setPrimitiveRestartEnabled is not supported in the simulator
-[MTLSimCommandBuffer resourceStateCommandEncoderWithDescriptor:]
-[MTLSimCommandBuffer resourceStateCommandEncoder]
-[MTLSimCommandBuffer setProtectionOptions:]
setProtectionOptions: with uncommitted encoder
commandQueue
segments
com.apple.MTLSimDriver
-[MTLSimBlitCommandEncoder copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:]_block_invoke
Unable to load Simulator decoder Metal library: %@
pvrtc2
pvrtc4
DecodeEAC_R11Unorm
DecodeEAC_R11Snorm
DecodeEAC_RG11Unorm
DecodeEAC_RG11Snorm
DecodeEAC_RGBA8
DecodeETC2_RGB8
DecodeETC2_RGB8A1
DecodeBGRA_XR10
DecodeBGR_XR10
astc
Error creating kernel '%@': %@
Error creating pipeline state %@ from %@
v16@?0@"<MTLCommandBuffer>"8
-[MTLSimTexture initWithTextureInternal:pixelFormat:decompressedPixelFormat:textureType:levels:slices:swizzle:compressedView:textureRef:isInternalTextureView:]
Device does not support texture swizzle.
Pixel format views involving XR10 are not supported in the simulator
-[MTLSimTexture initWithDescriptor:decompressedPixelFormat:iosurface:plane:textureRef:heap:device:]
IOSurface backed XR10 textures are not supported in the simulator
-[MTLSimTexture initWithDescriptor:decompressedPixelFormat:iosurface:plane:textureRef:heap:device:shareable:]
Shared texture feature not available in simulator
textureType =
pixelFormat =
decompressedPixelFormat =
width =
height =
depth =
arrayLength =
mipmapLevelCount =
sampleCount =
usage =
shareable =
framebufferOnly =
swizzle =
parentTexture =
<null>
parentRelativeLevel =
parentRelativeSlice =
buffer =
bufferOffset =
bufferBytesPerRow =
allowGPUOptimizedContents =
-[MTLSimTexture newTextureViewWithPixelFormat:textureType:levels:slices:swizzle:]
Ga==
@0`@
?0`@
event notification reference not found
Compiler failed to build request
Compiler failed with XPC_ERROR_CONNECTION_INTERRUPTED
Compiler failed with XPC_ERROR_CONNECTION_INVALID
Compiler failed with XPC_ERROR_TERMINATION_IMMINENT
Compiler failed with unknown XPC error
Decompression failure: unable to allocate decoder from at_encoder_create()
Decompression failure: error %ld returned from at_encoder_decompress_texels()
MTLSimIndirectArgumentBufferLayout
MTLSimArgumentEncoder
MTLArgumentEncoderSPI
MTLArgumentEncoder
NSObject
MTLSimOperation
MTLSerializerAllocator
MTLSimSharedEventHandle
NSSecureCoding
NSCoding
MTLSimSharedEvent
MTLSimEvent
MTLEvent
MTLSerializerEvent
MTLSerializerState
MTLSharedEvent
MTLSimDevice
MTLDeviceSPI
MTLDevice
MTLSimFunction
MTLFunction
MTLSimFunctionVariant
MTLSimFence
MTLFence
MTLSerializerFence
MTLSimBuffer
MTLSerializerBuffer
MTLSerializerResource
MTLBufferSPI
MTLResourceSPI
MTLResource
MTLBuffer
MTLSimBufferStoragePool
MTLSimRenderCommandEncoder
MTLSimHeap
MTLHeapSPI
MTLHeap
MTLSerializerHeap
MTLSimCommandBuffer
MTLCommandBufferSPI
MTLCommandBuffer
MTLSerializerCommandStream
MTLSimCommandQueue
MTLCommandQueueSPI
MTLCommandQueue
MTLSimBlitCommandEncoder
MTLSimCommandStoragePool
MTLSimComputePipelineState
MTLComputePipelineStateSPI
MTLComputePipelineState
MTLPipelineStateWithProgramAddressTable
MTLSerializerComputePipelineState
MTLSimDepthStencilState
MTLDepthStencilStateSPI
MTLDepthStencilState
MTLSerializerDepthStencilState
MTLSimRenderPipelineState
MTLRenderPipelineStateSPI
MTLRenderPipelineState
MTLSerializerRenderPipelineState
MTLSimResource
MTLSimSamplerState
MTLSamplerStateSPI
MTLSamplerState
MTLSerializerSamplerState
MTLSimTexture
MTLSerializerTexture
MTLTextureSPI
MTLTexture
MTLTextureImplementation
T@"<MTLHeap>",R
.cxx_destruct
TB,R,GisAnisoSampleFixSupported
BCTextureCompressionSupported
T{?=CCCC},R,D,N
CustomBorderColorSupported
_buffer
GPUBVHBuilder
_device
GPUStartTime
_iosurfacePlane
RTZRoundingSupported
_length
StatLocations
_offset
T#,R
argumentEncoderSetSamplerStates:withRange:encoderRef:allocator:
T@"<MTLBuffer>",R,D
completionQueue
T@"<MTLDeadlineProfile>",R,&
computeFunction
T@"<MTLDevice>",R,D
dealloc
T@"<MTLDevice>",R,Vdevice
depthStencilRef
T@"<MTLLogContainer>",R
disableCrossQueueHazardTracking
T@"<MTLResource>",R,VrootResource
fastMathEnabled
T@"<MTLTexture>",R,D
heapRef
T@"MTLDebugInstrumentationData",R,&,N
isProxy
T@"MTLResourceListPool",R,V_resourceListPool
languageVersion
T@"MTLSimFunction",R
maxInterpolants
T@"NSArray",R
maxTileTextures
T@"NSDictionary",C,N
meshFunctionHandleWithFunction:
T@"NSDictionary",R,VfunctionConstantsDictionary
newBufferWithBytesNoCopy:length:options:gpuAddress:deallocator:
T@"NSMutableDictionary",R,N
newComputePipelineStateWithDescriptor:options:reflection:error:
T@"NSObject<OS_dispatch_queue>",R
newDynamicLibraryWithURL:error:
T@"NSString",C
newLibraryWithDescriptor:error:
T@"NSString",C,Vlabel
numberWithBool:
T@"NSString",R,C
pushDebugGroup:
T@"_MTLIndirectArgumentBufferLayout",R,N
releaseArgumentBufferLayoutRef:
T@?,C,VsplitHandler
releaseHeapRef:
TB,GareGPUAssertionsEnabled,SsetGPUAssertionsEnabled:
setGPUPriority:
TB,N
setRenderPipelineState:atIndex:
TB,N,VsupportIndirectCommandBuffers
setStatOptions:
TB,R,GareBarycentricCoordsSupported
supportsBGR10A2
TB,R,GareProgrammableSamplePositionsSupported,VprogrammableSamplePositionsSupported
supportsIndirectDrawAndDispatch
TB,R,GisBCTextureCompressionSupported
supportsLargeFramebufferConfigs
TB,R,GisCustomBorderColorSupported
supportsStreamingCodecSignaling
TB,R,GisDepth24Stencil8PixelFormatSupported,Vdepth24Stencil8PixelFormatSupported
supportsViewportAndScissorArray
TB,R,GisFloat32FilteringSupported
swizzle
TB,R,GisFramebufferOnly,V_framebufferOnly
tileFunctionHandleWithFunction:
TB,R,GisHeadless,Vheadless
.cxx_construct
T@"NSArray",R,VvertexAttributes
AnisoSampleFixSupported
TQ,R,VpatchType
ClampToHalfBorderSupported
_argumentBuffer
FixedLinePointFillDepthGradientSupported
_commandBuffers
GPUEndTime
_height
RGB10A2GammaSupported
_layout
StatEnabled
_mainConnection
StatOptions
_purgeableState
T@"<MTLBuffer>",R
commandPrevious
T@"<MTLCommandQueue>",R
compressionType
T@"<MTLDevice>",R
deadlineProfile
T@"<MTLDevice>",R,V_device
defaultTextureWriteRoundingMode
T@"<MTLHeap>",R,D
didModifyRange:
T@"<MTLResource>",R
enqueue
T@"<MTLTexture>",R
framebufferOnly
T@"MTLArchitecture",R
isBCTextureCompressionSupported
T@"MTLGPUBVHBuilder",R
kernelStartTime
T@"MTLSerializer",R,V_serializer
maxBufferLength
T@"MTLTargetDeviceArchitecture",R
maxTileSamplers
T@"NSArray",R,VstageInputAttributes
maxTotalThreadgroupsPerMeshGrid
T@"NSDictionary",R
minConstantBufferAlignmentBytes
T@"NSError",R
newCommandQueue
T@"NSObject<OS_dispatch_data>",R,V_data
newDynamicLibraryFromURL:error:
T@"NSObject<OS_xpc_object>",R
newIndirectCommandBufferWithDescriptor:maxCommandCount:options:
T@"NSString",C,D
newRenderPipelineStateWithDescriptor:options:completionHandler:
T@"NSString",R
options
T@"NSString",R,Vname
release
T@?,C
releaseComputePipelineStateRef:
resourceOptions
TB,GisProfilingEnabled
setPixelFormat:
TB,N,GisStatEnabled
setStatEnabled:
TB,R
setStorageMode:
TB,R,GareProgrammableSamplePositionsSupported
supportsFamily:
TB,R,GareRasterOrderGroupsSupported
supportsInvariantVertexPosition
TB,R,GisClampToHalfBorderSupported
supportsMemorylessRenderTargets
TB,R,GisDepth24Stencil8PixelFormatSupported
supportsTextureOutOfBoundsReads
TB,R,GisFixedLinePointFillDepthGradientSupported
supportsWritableArrayOfTextures
TB,R,GisFramebufferOnly
tailSizeInBytes
TB,R,GisHeadless
tileSizeWithSparsePageSize:textureType:pixelFormat:sampleCount:
TB,R,GisLargeMRTSupported
TB,R,GisLowPower
TB,R,GisLowPower,VlowPower
TB,R,GisMsaa32bSupported
TB,R,GisPlacementHeapSupported
TB,R,GisQuadDataSharingSupported
TB,R,GisRGB10A2GammaSupported
TB,R,GisRTZRoundingSupported
TB,R,GisRemovable
TB,R,GisRemovable,Vremovable
TB,R,GisShareable,V_shareable
TB,R,N
TB,R,V_allowGPUOptimizedContents
TB,R,V_isDrawable
TB,R,VhasUnifiedMemory
TI,R
TI,R,D
TI,R,N
TI,R,V_resourceRef
TI,R,V_swizzle
TQ,D
TQ,N
TQ,N,GgetStatLocations
TQ,N,GgetStatOptions
TQ,N,VmaxTotalThreadsPerThreadgroup
TQ,N,VstaticThreadgroupMemoryLength
TQ,N,VthreadExecutionWidth
TQ,R
TQ,R,D
TQ,R,N
TQ,R,N,GgetListIndex
TQ,R,V_cpuCacheMode
TQ,R,V_firstMipmapInTail
TQ,R,V_functionType
TQ,R,V_gpuAddress
TQ,R,V_hostFeatureProfile
TQ,R,V_parentRelativeLevel
TQ,R,V_registryID
TQ,R,V_storageMode
TQ,R,V_tailSizeInBytes
TQ,R,V_uniqueIdentifier
TQ,R,V_usage
TQ,R,VallocatedSize
TQ,R,VallocationID
TQ,R,VbufferStorageByteCount
TQ,R,VcurrentAllocatedSize
TQ,R,ViosurfacePlane
TQ,R,VparentRelativeSlice
TQ,R,VprotectionOptions
TQ,R,Vrotation
T^{__IOSurface=},R
T^{__IOSurface=},R,V_iosurface
Td,R
Tf,R
Ti,VresponsibleProcess
Tq,R
Tq,R,D
Tq,R,VpatchControlPointCount
Tr^{?=IIIIIIIIIIIIIIIIIIIIIIIIIIffIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIQ},R
Tr^{MTLTargetDeviceArch=QI*},R
T{?=CCCC},R,N
T{?=QQQ},R
T{IndirectArgumentBufferCapabilities=b1b1b1b29},R
T{MTLResourceID=Q},R
UTF8String
_alignment
_allowGPUOptimizedContents
_aneIOSurface
_arrayLength
_backingBuffer
_backingBufferSize
_bufferBytesPerRow
_bufferLayoutMatchesFrontEndLayout
_bufferOffset
_bufferRef
_commandBufferQueue
_commandQueueRef
_compilerConnection
_content
_cpuCacheMode
_data
_deallocator
_decompressedPixelFormat
_decompressedTextureView
_depth
_deserializerVersion
_deviceWrapper
_encodedLength
_fenceRef
_firstMipmapInTail
_framebufferOnly
_function
_functionRef
_functionType
_gpuAddress
_hazardTrackingMode
_heap
_heapOffset
_heapRef
_hostFeatureProfile
_iosurface
_isAliasable
_isDrawable
_isInternalTextureView
_label
_labelLock
_maxThreadgroupMemoryLength
_maxThreadsPerThreadgroup
_mipmapLevelCount
_notificationMutex
_notifications
_numFaces
_options
_parentRelativeLevel
_parentRelativeSlice
_parentTexture
_pipelineRef
_pixelFormat
_pointer
_processRef
_protectionOptions
_reference
_registryID
_resourceConnection
_resourceList
_resourceListPool
_resourceRef
_sampleCount
_serializer
_setDeviceWrapper:
_shareable
_signaledValue
_storageMode
_swizzle
_tailSizeInBytes
_textureType
_uniqueIdentifier
_usage
_width
accelerationStructureCommandEncoder
accelerationStructureCommandEncoderWithDescriptor:
accelerationStructureSizesWithDescriptor:
addCompletedHandler:
addDebugMarker:range:
addPerfSampleHandler:
addPurgedHeap:
addPurgedResource:
addResourceReference:isWrite:
addScheduledHandler:
addStateReference:
alignment
allocStorage
allocateOperationBytes:
allocatedSize
allocationID
allowGPUOptimizedContents
allowLibrariesFromOtherPlatforms
allowReferencingUndefinedSymbols
architecture
areBarycentricCoordsSupported
areGPUAssertionsEnabled
areProgrammableSamplePositionsSupported
areRasterOrderGroupsSupported
argumentBufferLayoutConstantAtIndex:layoutRef:allocator:
argumentBufferLayoutRef
argumentBuffersSupport
argumentEncoderConstantAtIndex:encoderRef:bufferRef:allocator:
argumentEncoderRef
argumentEncoderSetArgumentBuffer:offset:encoderRef:allocator:
argumentEncoderSetBuffers:offsets:withRange:encoderRef:allocator:
argumentEncoderSetTextures:withRange:encoderRef:allocator:
arrayLength
arrayWithObjects:count:
autorelease
availableCounters
availableCountersAndDict
backgroundTrackingPID
backingBuffer
barycentricCoordsSupported
beginContinuation
beginSegment:
blitCommandEncoder
blitCommandEncoderWithDescriptor:
buffer
bufferBytesPerRow
bufferCurrentStorage
bufferGPUAddress:allocator:
bufferHead
bufferLayoutMatchesFrontEndLayout
bufferOffset
bufferPool
bufferRef
bufferRobustnessSupport
bufferStorageByteCount
bundleWithIdentifier:
calculateOffsetToRegion:level:slice:
canGenerateMipmapLevels
class
commandBuffer
commandBufferDidComplete:startTime:completionTime:error:
commandBufferErrorOptions
commandBufferForReference:
commandBufferRef
commandBufferWithDescriptor:
commandBufferWithUnretainedReferences
commandCurrentStorage
commandHead
commandPool
commandQueue
commandTail
commit
commitAndHold
commitAndWaitUntilSubmitted
commitAndWaitUntilSubmittedWithDeadline:
commitQueue
commitSynchronously
commitWithDeadline:
compileSymbolVisibility
compileVisibleFunction:withDescriptor:completionHandler:
compileVisibleFunction:withDescriptor:destinationBinaryArchive:error:
compileVisibleFunction:withDescriptor:error:
compiler
compilerConnection
compilerPropagatesThreadPriority:
componentsJoinedByString:
compressionFeedback
compressionFootprint
computeCommandEncoder
computeCommandEncoderWithDescriptor:
computeCommandEncoderWithDispatchType:
computePipelineWithReplyData:replyDataSize:pipelineInfo:errorMessage:
conformsToProtocol:
constantDataAtIndex:
constantOffsetAtIndex:
contents
continuation
convertSparsePixelRegions:toTileRegions:withTileSize:alignmentMode:numRegions:
convertSparseTileRegions:toPixelRegions:withTileSize:numRegions:
copy
copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:
copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:options:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:
copyFromTexture:sourceSlice:sourceLevel:toTexture:destinationSlice:destinationLevel:sliceCount:levelCount:
copyImageBytesFromSource:toDestination:dataSize:region:bytesPerRow:bytesPerImage:mipmapLevel:slice:texture:
copyShaderCacheToPath:
count
countByEnumeratingWithState:objects:count:
counterInfo
counterSets
cpuCacheMode
currentAllocatedSize
currentStorageOffset
data
dataSizeForRegion:pixelFormat:bytesPerRow:bytesPerImage:
debugBufferContentsWithLength:
debugCommandEncoder
debugDescription
debugInstrumentationData
debuggingEnabled
decodeIntegerForKey:
decodeObjectOfClass:forKey:
decodeXPCObjectOfType:forKey:
decompress:expandedTex:srcFormat:destFormat:width:height:destRowBytes:srcRowBytes:
decompressPlaceholder:expandedTex:srcFormat:destFormat:width:height:destRowBytes:srcRowBytes:
decompressedPixelFormat
decompressedTextureView
dedicatedMemorySize
deleteArgumentBufferLayoutRef:allocator:
deleteArgumentEncoderRef:allocator:
deleteBufferRef:allocator:
deleteCommandQueueRef:allocator:
deleteComputePipelineStateRef:allocator:
deleteDepthStencilStateRef:allocator:
deleteEventRef:allocator:
deleteFenceRef:allocator:
deleteFunctionRef:allocator:
deleteHeapRef:allocator:
deleteRenderPipelineStateRef:allocator:
deleteSamplerStateRef:allocator:
deleteTextureRef:allocator:
depth
depth24Stencil8PixelFormatSupported
description
descriptorPrivate
deserializeCompileTimeStats:addToDictionary:
deserializeInstanceAccelerationStructure:fromBytes:primitiveAccelerationStructures:withDescriptor:
deserializeInstanceAccelerationStructureFromBytes:primitiveAccelerationStructures:withDescriptor:
deserializePrimitiveAccelerationStructure:fromBytes:withDescriptor:
deserializePrimitiveAccelerationStructureFromBytes:withDescriptor:
deserializerGeneratesResourceRefs
deserializerSupportsSharedEvents
deserializerSupportsSharedTextures
device
deviceCreationFlags
deviceLinearReadOnlyTextureAlignmentBytes
deviceLinearTextureAlignmentBytes
deviceOrFeatureProfileSupportsFeatureSet:
deviceSupportsFeatureSet:
dictionaryWithObjects:forKeys:count:
didModifyData
didScheduleWithStartTime:endTime:error:
dispatchAvailableCompletionNotifications
dispatchNotificationWithReference:
dispatchQueue
dispatchThreads:threadsPerThreadgroup:
doesAliasAllResources:count:
doesAliasAnyResources:count:
doesAliasResource:
doesAliasResources:count:all:
doesAliasResources:count:all:resource:allocator:
doesNotRecognizeSelector:
doubleFPConfig
dropResourceGroups:count:
encodeCacheHintFinalize:resourceGroups:count:
encodeCacheHintTag:resourceGroups:count:
encodeDashboardFinalizeForResourceGroup:dashboard:value:forIndex:
encodeDashboardFinalizeForResourceGroup:dashboard:values:indices:count:
encodeDashboardTagForResourceGroup:
encodeInteger:forKey:
encodeObject:forKey:
encodeSignalEvent:value:
encodeWaitForEvent:value:
encodeWaitForEvent:value:timeout:
encodeWithCoder:
encodeXPCObject:forKey:
encodedLength
endCollectingPipelineDescriptors
endEncoding
error
errorOptions
eventPort
eventRef
executionEnabled
explicitVisibilityGroupID
familyName
featureProfile
fenceRef
finish
firstMipmapInTail
float32FilteringSupported
formattedDescription:
fragmentDebugInstrumentationData
fragmentFunction
fragmentFunctionHandleWithFunction:
fragmentFunctionKeyWithRenderPipelineDescriptor:options:previousStateVariant:fragmentKeySize:
freeFragmentFunctionKey:fragmentKeySize:
freeVertexFunctionKey:vertexKeySize:
function
functionConstantsDictionary
functionHandleWithFunction:
functionHandleWithFunction:stage:
functionRef
functionType
generateMipmapLevel:slice:
getBVHBuilderLock
getBackgroundGPUPriority
getBufferBytes:alignment:buffer:offset:
getBufferStorage
getBytes:bytesPerRow:bytesPerImage:fromRegion:mipmapLevel:slice:
getBytes:bytesPerRow:fromRegion:mipmapLevel:
getBytesFromRegion:bytesPerRow:bytesPerImage:mipmapLevel:slice:texture:outDataSize:
getCommandBufferBytes:
getCommandBufferStorage
getCommandBytes:forCommand:
getCompilerConnectionManager:
getComputeInfoWithAllocator:
getDecompressedFormat:
getDefaultSamplePositions:count:
getFragmentShaderTelemetryID
getGPUPriority
getListIndex
getMostCompatibleArchitecture:
getNewResourceID
getRawBVHBuilderPtr
getRequestedCounters
getSPIStats
getShaderCacheKeys
getSizeInfo
getStatLocations
getStatOptions
getStorage
getVertexShaderTelemetryID
getWritableInfo:buffers:texturesArrayLength:textures:
getWritableInfo:vtxBuffers:vtxTexturesArrayLength:vtxTextures:frgBuffersLength:frgBuffers:frgTexturesArrayLength:frgTextures:
globalTraceObjectID
gpuAddress
gpuAssertionsEnabled
gpuHandle
gpuResourceID
halfFPConfig
handleNewObjectReplyData:replyDataSize:
handleNewObjectReplyData:replyDataSize:errorMessage:
hasUnifiedMemory
hash
hazardTrackingMode
head
headless
heap
heapAccelerationStructureSizeAndAlignWithDescriptor:
heapAccelerationStructureSizeAndAlignWithSize:
heapBufferSizeAndAlignWithLength:options:
heapBufferSizeAndAlignWithLength:options:allocator:
heapOffset
heapTextureSizeAndAlignWithDescriptor:
heapTextureSizeAndAlignWithDescriptor:allocator:
height
imageblockMemoryLengthForDimensions:
imageblockSampleLength
indirectArgumentBufferCapabilities
indirectArgumentBufferDecodingData
init
initWithBuffer:offset:bytesPerRow:descriptor:textureRef:
initWithCoder:
initWithCommandBuffer:
initWithCommandBuffer:descriptor:serializer:
initWithCommandBuffer:renderPassDescriptor:serializer:
initWithCompilerOutput:
initWithDescriptor:decompressedPixelFormat:iosurface:plane:textureRef:heap:device:
initWithDescriptor:decompressedPixelFormat:iosurface:plane:textureRef:heap:device:shareable:
initWithDescriptor:device:heapRef:
initWithDescriptor:reference:device:
initWithDevice:bufferRef:content:pointer:length:options:heap:deallocator:
initWithDevice:commandQueueRef:descriptor:
initWithDevice:depthStencilDescriptor:
initWithDevice:descriptor:
initWithDevice:deserializerGeneratesResourceRefs:deserializerVersion:
initWithDevice:fenceRef:
initWithDevice:functionType:functionRef:
initWithDevice:maxCommandBufferCount:
initWithDevice:pipelineRef:descriptor:
initWithDevice:pipelineStateDescriptor:
initWithDevice:reference:
initWithDevice:reference:data:
initWithDevice:reference:layout:data:
initWithDevice:samplerDescriptor:
initWithDomain:code:userInfo:
initWithEntrySize:
initWithEntrySize:device:
initWithEventPort:labelTraceID:label:
initWithFunction:compilerOutput:
initWithQueue:retainedReferences:
initWithResourceListCapacity:
initWithResourceRef:options:device:heap:
initWithTargetData:cacheUUID:pluginPath:device:compilerFlags:
initWithTexture:device:
initWithTexture:pixelFormat:decompressedPixelFormat:textureRef:isInternalTextureView:
initWithTexture:pixelFormat:decompressedPixelFormat:textureType:levels:slices:swizzle:textureRef:isInternalTextureView:
initWithTextureInternal:pixelFormat:decompressedPixelFormat:textureType:levels:slices:swizzle:compressedView:textureRef:isInternalTextureView:
initWithType:options:
initWithUTF8String:
insertDebugCaptureBoundary
iosurface
iosurfacePlane
iosurfaceReadOnlyTextureAlignmentBytes
iosurfaceTextureAlignmentBytes
isAliasable
isAnisoSampleFixSupported
isClampToHalfBorderSupported
isCompatibleWithAccelerationStructure:
isComplete
isCompressed
isCustomBorderColorSupported
isDepth24Stencil8PixelFormatSupported
isDrawable
isEqual:
isFixedLinePointFillDepthGradientSupported
isFloat32FilteringSupported
isFramebufferOnly
isHeadless
isKindOfClass:
isLargeMRTSupported
isLowPower
isMemberOfClass:
isMsaa32bSupported
isOpenGLQueue
isPlacementHeapSupported
isProfilingEnabled
isPurgeable
isQuadDataSharingSupported
isRGB10A2GammaSupported
isRTZRoundingSupported
isRemovable
isShareable
isSparse
isStatEnabled
kernelEndTime
label
largeMRTSupported
layout
length
libraryCacheStats
limits
linearTextureAlignmentBytes
linearTextureArrayAlignmentBytes
linearTextureArrayAlignmentSlice
listIndex
llvmVersion
loadDynamicLibrariesForComputeDescriptor:error:
loadDynamicLibrariesForComputeDescriptor:options:error:
loadDynamicLibrariesForFunction:insertLibraries:error:
loadDynamicLibrariesForFunction:insertLibraries:options:error:
logs
lowPower
mainConnection
makeAliasable
makeAliasableResource:allocator:
mapShaderSampleBufferWithBuffer:capacity:size:
maxArgumentBufferSamplerCount
maxAvailableSizeWithAlignment:
maxAvailableSizeWithAlignment:heap:allocator:
maxColorAttachments
maxCommandBufferCount
maxComputeAttributes
maxComputeBuffers
maxComputeInlineDataSize
maxComputeLocalMemorySizes
maxComputeSamplers
maxComputeTextures
maxComputeThreadgroupMemory
maxComputeThreadgroupMemoryAlignmentBytes
maxConcurrentExecutingCompilationTasks
maxConstantBufferArguments
maxCustomSamplePositions
maxFenceInstances
maxFragmentBuffers
maxFragmentInlineDataSize
maxFragmentSamplers
maxFragmentTextures
maxFramebufferStorageBits
maxFunctionConstantIndices
maxIndirectBuffers
maxIndirectSamplers
maxIndirectSamplersPerDevice
maxIndirectTextures
maxInterpolatedComponents
maxLineWidth
maxPointSize
maxPredicatedNestingDepth
maxRasterizationRateLayerCount
maxTessellationFactor
maxTextureBufferWidth
maxTextureDepth3D
maxTextureDimensionCube
maxTextureHeight2D
maxTextureHeight3D
maxTextureLayers
maxTextureWidth1D
maxTextureWidth2D
maxTextureWidth3D
maxThreadgroupMemoryLength
maxThreadsPerThreadgroup
maxTileBuffers
maxTileInlineDataSize
maxTotalComputeThreadsPerThreadgroup
maxTotalThreadsPerMeshThreadgroup
maxTotalThreadsPerObjectThreadgroup
maxTotalThreadsPerThreadgroup
maxVertexAmplificationCount
maxVertexAmplificationFactor
maxVertexAttributes
maxVertexBuffers
maxVertexInlineDataSize
maxVertexSamplers
maxVertexTextures
maxViewportCount
maxVisibilityQueryOffset
merge:
meshDebugInstrumentationData
meshThreadExecutionWidth
metalAssertionsEnabled
minBufferNoCopyAlignmentBytes
minLinearTextureAlignmentForPixelFormat:
minTilePixels
minimumLinearTextureAlignmentForPixelFormat:
minimumLinearTextureAlignmentForPixelFormat:allocator:
minimumTextureBufferAlignmentForPixelFormat:
minimumTextureBufferAlignmentForPixelFormat:allocator:
mipmapLevelCount
msaa32bSupported
name
newAccelerationStructureWithBuffer:offset:
newAccelerationStructureWithBuffer:offset:resourceIndex:
newAccelerationStructureWithDescriptor:
newAccelerationStructureWithDescriptor:offset:
newAccelerationStructureWithSize:
newAccelerationStructureWithSize:offset:
newAccelerationStructureWithSize:offset:resourceIndex:
newAccelerationStructureWithSize:resourceIndex:
newAccelerationStructureWithSize:withDescriptor:
newArgumentBufferLayoutWithStructType:allocator:
newArgumentEncoderForBufferAtIndex:
newArgumentEncoderWithArguments:
newArgumentEncoderWithBufferBinding:
newArgumentEncoderWithBufferIndex:
newArgumentEncoderWithBufferIndex:reflection:
newArgumentEncoderWithLayout:
newArgumentEncoderWithLayout:allocator:
newBinaryArchiveWithDescriptor:error:
newBinaryLibraryWithOptions:url:error:
newBufferRef
newBufferWithBytes:length:options:
newBufferWithBytes:length:options:gpuAddress:
newBufferWithBytesNoCopy:length:options:deallocator:
newBufferWithDescriptor:
newBufferWithIOSurface:
newBufferWithLength:options:
newBufferWithLength:options:gpuAddress:
newBufferWithLength:options:heap:offset:useOffset:allocator:
newBufferWithLength:options:offset:
newBufferWithLength:options:offset:useOffset:
newBufferWithLength:options:pointer:copyBytes:deallocator:
newCommandBufferRef
newCommandQueueRef
newCommandQueueWithDescriptor:
newCommandQueueWithMaxCommandBufferCount:
newCompressedTextureViewWithPixelFormat:textureType:level:slice:
newComputePipelineDescriptorWithSerializedData:deserializationContext:
newComputePipelineStateWithAdditionalBinaryFunctions:error:
newComputePipelineStateWithDescriptor:completionHandler:
newComputePipelineStateWithDescriptor:error:
newComputePipelineStateWithDescriptor:options:completionHandler:
newComputePipelineStateWithFunction:completionHandler:
newComputePipelineStateWithFunction:error:
newComputePipelineStateWithFunction:options:completionHandler:
newComputePipelineStateWithFunction:options:reflection:error:
newComputePipelineStateWithImageFilterFunctionsSPI:imageFilterFunctionInfo:error:
newComputePipelineStateWithSerializedDescriptor:allocator:
newComputePipelineWithDescriptor:variant:errorMessage:
newComputeVariantWithCompilerOutput:pipelineStatisticsOutput:
newCounterSampleBufferWithDescriptor:error:
newDagStringWithGraphs:
newDefaultLibrary
newDefaultLibraryWithBundle:error:
newDepthStencilStateWithDescriptor:
newDynamicLibrary:computeDescriptor:error:
newDynamicLibrary:error:
newDynamicLibraryWithDescriptor:error:
newDynamicLibraryWithURL:options:error:
newEvent
newFence
newFenceWithAllocator:
newFragmentIntersectionFunctionTableWithDescriptor:
newFragmentShaderDebugInfo
newFragmentVariantWithCompilerOutput:pipelineStatisticsOutput:
newFunctionVariantWithCompilerOutput:functionType:
newFunctionWithGLCoreIR:functionType:
newFunctionWithGLCoreIR:inputsDescription:functionType:
newFunctionWithGLESIR:functionType:
newFunctionWithGLESIR:inputsDescription:functionType:
newFunctionWithGLIR:functionType:
newFunctionWithGLIR:inputsDescription:functionType:
newFunctionWithIR:
newFunctionWithName:constantValues:error:
newHeapWithDescriptor:
newHeapWithDescriptor:allocator:
newIOSurfaceTextureWithDescriptor:plane:allocator:
newIndirectArgumentBufferLayoutWithStructType:
newIndirectArgumentEncoderWithArguments:
newIndirectArgumentEncoderWithLayout:
newIndirectCommandBufferWithDescriptor:maxCount:options:
newIndirectComputeCommandEncoderWithBuffer:
newIndirectRenderCommandEncoderWithBuffer:
newIntersectionFunctionTableWithDescriptor:
newIntersectionFunctionTableWithDescriptor:stage:
newLateEvalEvent
newLibraryWithCIFilters:imageFilterFunctionInfo:error:
newLibraryWithCIFiltersForComputePipeline:imageFilterFunctionInfo:error:
newLibraryWithDAG:functions:error:
newLibraryWithData:error:
newLibraryWithDescriptor:completionHandler:
newLibraryWithDescriptorSPI:error:
newLibraryWithFile:error:
newLibraryWithGraphs:functions:error:
newLibraryWithGraphsSPI:functions:error:
newLibraryWithImageFilterFunctionsSPI:imageFilterFunctionInfo:error:
newLibraryWithSource:options:completionHandler:
newLibraryWithSource:options:error:
newLibraryWithStitchedDescriptor:completionHandler:
newLibraryWithStitchedDescriptor:error:
newLibraryWithStitchedDescriptorSPI:error:
newLibraryWithURL:error:
newLinearTextureWithDescriptor:offset:bytesPerRow:bytesPerImage:
newMeshIntersectionFunctionTableWithDescriptor:
newObjectIntersectionFunctionTableWithDescriptor:
newPipelineLibraryWithFilePath:error:
newProfileWithExecutionSize:
newRasterizationRateMapWithDescriptor:
newRemoteBufferViewForDevice:
newRemoteTextureViewForDevice:
newRenderPipelineDescriptorWithSerializedData:deserializationContext:
newRenderPipelineStateWithAdditionalBinaryFunctions:error:
newRenderPipelineStateWithAdditionalBinaryFunctions:fragmentAdditionalBinaryFunctions:error:
newRenderPipelineStateWithDescriptor:completionHandler:
newRenderPipelineStateWithDescriptor:error:
newRenderPipelineStateWithDescriptor:options:reflection:error:
newRenderPipelineStateWithMeshDescriptor:completionHandler:
newRenderPipelineStateWithMeshDescriptor:error:
newRenderPipelineStateWithMeshDescriptor:options:completionHandler:
newRenderPipelineStateWithMeshDescriptor:options:reflection:error:
newRenderPipelineStateWithSerializedDescriptor:allocator:
newRenderPipelineStateWithTileDescriptor:completionHandler:
newRenderPipelineStateWithTileDescriptor:error:
newRenderPipelineStateWithTileDescriptor:options:completionHandler:
newRenderPipelineStateWithTileDescriptor:options:reflection:error:
newRenderPipelineWithDescriptor:vertexVariant:fragmentVariant:errorMessage:
newResourceGroupFromResources:count:
newSamplerStateWithDescriptor:
newSharedEvent
newSharedEventHandle
newSharedEventWithAllocator:
newSharedEventWithHandle:
newSharedEventWithHandle:allocator:
newSharedEventWithMachPort:
newSharedEventWithMachPort:allocator:
newStructTypeWithSerializedData:
newTextureLayoutWithDescriptor:isHeapOrBufferBacked:
newTextureViewWithPixelFormat:
newTextureViewWithPixelFormat:baseTexture:allocator:
newTextureViewWithPixelFormat:resourceIndex:
newTextureViewWithPixelFormat:textureType:levels:slices:
newTextureViewWithPixelFormat:textureType:levels:slices:baseTexture:allocator:
newTextureViewWithPixelFormat:textureType:levels:slices:resourceIndex:
newTextureViewWithPixelFormat:textureType:levels:slices:swizzle:
newTextureViewWithPixelFormat:textureType:levels:slices:swizzle:baseTexture:allocator:
newTextureViewWithPixelFormat:textureType:levels:slices:swizzle:resourceIndex:
newTextureViewWithPixelFormatInternal:isInternalTextureView:
newTextureWithBuffer:descriptor:offset:bytesPerRow:allocator:
newTextureWithBytesNoCopy:length:descriptor:deallocator:
newTextureWithDescriptor:
newTextureWithDescriptor:heap:offset:useOffset:allocator:
newTextureWithDescriptor:iosurface:plane:
newTextureWithDescriptor:offset:
newTextureWithDescriptor:offset:bytesPerRow:
newTextureWithDescriptor:offset:useOffset:
newTileIntersectionFunctionTableWithDescriptor:
newTileRenderPipelineStateWithAdditionalBinaryFunctions:error:
newTiledTextureWithBytesNoCopy:length:deallocator:descriptor:offset:bytesPerRow:
newTiledTextureWithBytesNoCopy:length:descriptor:offset:bytesPerRow:
newVertexIntersectionFunctionTableWithDescriptor:
newVertexShaderDebugInfo
newVertexVariantWithCompilerOutput:pipelineStatisticsOutput:
newVisibleFunctionTableFromFragmentStageWithDescriptor:
newVisibleFunctionTableFromMeshStageWithDescriptor:
newVisibleFunctionTableFromObjectStageWithDescriptor:
newVisibleFunctionTableFromTileStageWithDescriptor:
newVisibleFunctionTableFromVertexStageWithDescriptor:
newVisibleFunctionTableWithDescriptor:
newVisibleFunctionTableWithDescriptor:stage:
notifyListener:atValue:block:
notifyListenerForEventRef:atValue:allocator:
null
numFaces
numberWithUnsignedInteger:
numberWithUnsignedLongLong:
objectDebugInstrumentationData
objectForKey:
objectFunctionHandleWithFunction:
objectThreadExecutionWidth
optimizationLevel
parallelRenderCommandEncoderWithDescriptor:
parentGPUAddress
parentGPUSize
parentRelativeLevel
parentRelativeSlice
parentTexture
patchControlPointCount
patchType
payloadFromReplyData:replyDataSize:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
pipelineBinaries
pipelineCacheStats
pipelineFlagsWithVertexVariant:fragmentVariant:
pipelinePerformanceStatisticsWithComputeVariant:compileTimeOutput:
pipelinePerformanceStatisticsWithVertexVariant:fragmentVariant:vertexCompileTimeOutput:fragmentCompileTimeOutput:
pipelineRef
pixelFormat
placementHeapSupported
pluginData
popDebugGroup
preprocessorMacros
presentDrawable:
presentDrawable:atTime:
presentDrawable:options:
productName
profilingEnabled
profilingResults
programmableSamplePositionsSupported
protectionOptions
qosLevel
quadDataSharingSupported
raise:format:
rasterOrderGroupsSupported
readWriteTextureSupport
readsDepth
readsStencil
recommendedMaxWorkingSetSize
registerCommandBuffer:
registerEventNotification:listener:event:value:block:
registerViewTexture:baseTextureView:
registryID
releaseArgumentEncoderRef:
releaseBufferRef:
releaseCommandBufferRef:
releaseCommandQueueRef:
releaseEventRef:
releaseFenceRef:
releaseRenderPipelineStateRef:
releaseTextureRef:
removable
removeAllDebugMarkers
renderCommandEncoderWithDescriptor:
replaceRegion:mipmapLevel:slice:dataSize:bytesPerRow:bytesPerImage:texture:allocator:
replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:
replaceRegion:mipmapLevel:withBytes:bytesPerRow:
reportLeaks
requestCounters:
requestCounters:withIndex:
requiresRaytracingEmulation
reserveGPUAddressRange:
reserveResourceIndicesForResourceType:indices:indexCount:
resourceConnection
resourceIndex
resourceListPool
resourcePatchingTypeForResourceType:
resourceStateCommandEncoder
resourceStateCommandEncoderWithDescriptor:
respondsToSelector:
responsibleProcess
retain
retainCount
retainedLabel
retainedReferences
returnBufferStorage:
returnCommandBufferStorage:
returnStorage:
rootResource
rotation
sampleCount
sampleTimestamps:gpuTimestamp:
sampledComputeCommandEncoderWithDescriptor:programInfoBuffer:capacity:
sampledComputeCommandEncoderWithDispatchType:programInfoBuffer:capacity:
sampledComputeCommandEncoderWithProgramInfoBuffer:capacity:
sampledRenderCommandEncoderWithDescriptor:programInfoBuffer:capacity:
samplerRef
segmentCount
self
semaphore
serializeComputePipelineDescriptor:
serializeRenderPipelineDescriptor:
serializeStructType:
serializeStructType:version:
serializer
serializerResourceRef
setAccelerationStructure:atIndex:
setArgumentBuffer:offset:
setArgumentBuffer:startOffset:arrayElement:
setBackgroundGPUPriority:
setBackgroundGPUPriority:offset:
setBackgroundTrackingPID:
setBuffer:offset:atIndex:
setBuffers:offsets:withRange:
setBytes:length:atIndex:
setCommandBufferErrorOptions:
setCompilerProcessesCount:
setCompletionQueue:
setComputeFunction:
setComputePipelineState:
setComputePipelineState:atIndex:
setComputePipelineStates:withRange:
setDispatchType:
setErrorOptions:
setExecutionEnabled:
setFragmentFunction:
setGPUAssertionsEnabled:
setGPUPriority:offset:
setHeapOffset:
setIndirectArgumentBufferDecodingData:
setIndirectCommandBuffer:atIndex:
setIndirectCommandBuffers:withRange:
setIntersectionFunctionTable:atBufferIndex:
setIntersectionFunctionTable:atIndex:
setIntersectionFunctionTables:withBufferRange:
setIntersectionFunctionTables:withRange:
setLabel:
setLogs:
setMaxTotalThreadsPerThreadgroup:
setMetalAssertionsEnabled:
setObject:forKeyedSubscript:
setOwnerWithIdentity:
setParentGPUAddress:
setParentGPUSize:
setPluginData:
setPrimitiveRestartEnabled:
setProfilingEnabled:
setProtectionOptions:
setPurgeableState:
setRawBVHBuilderPtr:
setReflectionSerializationVersion:
setRenderPipelineStates:withRange:
setResourceGroups:count:
setResourcesPurgeableState:newState:oldState:count:
setResponsibleProcess:
setSamplerState:atIndex:
setSamplerStates:withRange:
setShaderDebugInfoCaching:
setSignaledValue:
setSkipRender:
setSplitHandler:
setStatLocations:
setStaticThreadgroupMemoryLength:
setSubmissionQueue:
setSupportIndirectCommandBuffers:
setTexture:atIndex:
setTextures:withRange:
setThreadExecutionWidth:
setUsage:
setVertexFunction:
setVisibleFunctionTable:atBufferIndex:
setVisibleFunctionTable:atIndex:
setVisibleFunctionTables:withBufferRange:
setVisibleFunctionTables:withRange:
setupMPSFunctionTable:
shaderDebugInfoCaching
shareable
sharedEventSetSignaledValue:eventRef:allocator:
sharedEventSignaledValueForEventRef:allocator:
sharedEventWaitSignaledValue:timeoutMS:eventRef:allocator:
sharedMemorySize
signaledValue
simulatorHostFeatureProfile
singleFPConfig
size
sizeInfoForHeap:allocator:
skipRender
sparseSurfaceDefaultValue
sparseTexturesSupport
sparseTileSizeInBytes
sparseTileSizeInBytesForSparsePageSize:
sparseTileSizeWithTextureType:pixelFormat:sampleCount:
sparseTileSizeWithTextureType:pixelFormat:sampleCount:sparsePageSize:
split
splitHandler
stageInputAttributes
startCollectingPipelineDescriptors
startCollectingPipelineDescriptorsUsingPrefixForNames:
staticThreadgroupMemoryLength
status
storageMode
storageSize
stringByPaddingToLength:withString:startingAtIndex:
stringValue
stringWithFormat:
stringWithUTF8String:
subdivideCounterList:
submitCommandBuffers:count:
superclass
supportIndirectCommandBuffers
supportPriorityBand
supports2DLinearTexArraySPI
supports32BitFloatFiltering
supports32BitMSAA
supports32bpcMSAATextures
supports3DASTCTextures
supports3DBCTextures
supportsASTCHDRTextureCompression
supportsASTCTextureCompression
supportsAlphaYUVFormats
supportsAnisoSampleFix
supportsArgumentBuffersTier2
supportsArrayOfSamplers
supportsArrayOfTextures
supportsAtomicUlongVoidMinMax
supportsBCTextureCompression
supportsBaseVertexInstanceDrawing
supportsBfloat16Format
supportsBinaryArchives
supportsBinaryLibraries
supportsBlackOrWhiteSamplerBorderColors
supportsBufferBoundsChecking
supportsBufferPrefetchStatistics
supportsBufferWithIOSurface
supportsBufferlessClientStorageTexture
supportsCMPIndirectCommandBuffers
supportsCombinedMSAAStoreAndResolveAction
supportsCommandBufferJump
supportsCompressedTextureViewSPI
supportsComputeCompressedTextureWrite
supportsComputeMemoryBarrier
supportsConcurrentComputeDispatch
supportsCounterSampling:
supportsCountingOcclusionQuery
supportsCustomBorderColor
supportsDeadlineProfile
supportsDepthClipMode
supportsDepthClipModeClampExtended
supportsDevicePartitioning
supportsDynamicControlPointCount
supportsDynamicLibraries
supportsExplicitVisibilityGroups
supportsExtendedVertexFormats
supportsExtendedXR10Formats
supportsExtendedYUVFormats
supportsFP32TessFactors
supportsFastMathInfNaNPropagation
supportsFeatureSet:
supportsFillTexture
supportsFixedLinePointFillDepthGradient
supportsFloat16BCubicFiltering
supportsFloat16InfNanFiltering
supportsForceSeamsOnCubemaps
supportsForkJoin
supportsFragmentBufferWrites
supportsFragmentOnlyEncoders
supportsFunctionPointers
supportsFunctionPointersFromMesh
supportsFunctionPointersFromRender
supportsGFXIndirectCommandBuffers
supportsGPUStatistics
supportsGlobalVariableRelocation
supportsGlobalVariableRelocationCompute
supportsGlobalVariableRelocationRender
supportsHeapAccelerationStructureAllocation
supportsIABHashForTools
supportsImageBlockSampleCoverageControl
supportsImageBlocks
supportsIndirectStageInRegion
supportsIndirectTessellation
supportsIndirectTextures
supportsIndirectWritableTextures
supportsInt64
supportsInterchangeTiled
supportsLateEvalEvent
supportsLayeredRendering
supportsLimitedYUVFormats
supportsLinearTexture2DArray
supportsLinearTextureFromSharedBuffer
supportsLossyCompression
supportsMSAADepthResolve
supportsMSAADepthResolveFilter
supportsMSAAStencilResolve
supportsMSAAStencilResolveFilter
supportsMemoryOrderAtomics
supportsMeshShaders
supportsMeshShadersInICB
supportsMipLevelsSmallerThanBlockSize
supportsMirrorClampToEdgeSamplerMode
supportsMutableTier1ArgumentBuffers
supportsNativeHardwareFP16
supportsNonPrivateDepthStencilTextures
supportsNonPrivateMSAATextures
supportsNonSquareTileShaders
supportsNonUniformThreadgroupSize
supportsNonZeroTextureWriteLOD
supportsNorm16BCubicFiltering
supportsOpenCLTextureWriteSwizzles
supportsPacked32TextureBufferWrites
supportsPipelineLibraries
supportsPlacementHeaps
supportsPostDepthCoverage
supportsPrimitiveMotionBlur
supportsPrimitiveRestartOverride
supportsPrimitiveType:
supportsProgrammableBlending
supportsProgrammableSamplePositions
supportsPublicXR10Formats
supportsPullModelInterpolation
supportsQuadGroup
supportsQuadReduction
supportsQuadShufflesAndBroadcast
supportsQueryTextureLOD
supportsRGBA10A2Gamma
supportsRTZRounding
supportsRasterOrderGroups
supportsRasterOrderGroupsColorAttachment
supportsRasterizationRateMapWithLayerCount:
supportsRayTracingAccelerationStructureCPUDeserialization
supportsRayTracingBuffersFromTables
supportsRayTracingExtendedVertexFormats
supportsRayTracingICBs
supportsRayTracingPerPrimitiveData
supportsRaytracing
supportsRaytracingFromRender
supportsReadWriteBufferArguments
supportsReadWriteTextureArguments
supportsReadWriteTextureArgumentsTier2
supportsReadWriteTextureCubeArguments
supportsRelaxedTextureViewRequirements
supportsRenderDynamicLibraries
supportsRenderMemoryBarrier
supportsRenderPassWithoutRenderTarget
supportsRenderTargetTextureRotation
supportsRenderTextureWrites
supportsRenderToLinearTextures
supportsSIMDGroup
supportsSIMDGroupMatrix
supportsSIMDReduction
supportsSIMDShuffleAndFill
supportsSIMDShufflesAndBroadcast
supportsSRGBwrites
supportsSampleCount:
supportsSamplerAddressModeClampToHalfBorder
supportsSamplerCompareFunction
supportsSecureCoding
supportsSeparateDepthStencil
supportsSeparateVisibilityAndShadingRate
supportsSetThreadgroupPackingDisabled
supportsShaderBarycentricCoordinates
supportsShaderLODAverage
supportsShaderMinLODClamp
supportsSharedFunctionTables
supportsSharedStorageHeapResources
supportsSharedStorageTextures
supportsSharedTextureHandles
supportsSparseDepthAttachments
supportsSparseHeaps
supportsSparseTextures
supportsStackOverflowErrorCode
supportsStatefulDynamicLibraries
supportsStencilFeedback
supportsTLS
supportsTessellation
supportsTexture2DMultisampleArray
supportsTextureCubeArray
supportsTextureSampleCount:
supportsTextureSwizzle
supportsTextureWriteRoundingMode:
supportsTileShaders
supportsUnalignedVertexFetch
supportsVariableRateRasterization
supportsVertexAmplification
supportsVertexAmplificationCount:
supportsYCBCRFormats
supportsYCBCRFormats12
supportsYCBCRFormatsPQ
supportsYCBCRFormatsXR
supportsYCBCRPackedFormats12
supportsYCBCRPackedFormatsPQ
supportsYCBCRPackedFormatsXR
swizzleKey
tail
targetDeviceArchitecture
targetDeviceInfo
textureRef
textureType
textureWriteRoundingMode
threadExecutionWidth
threadgroupSizeMatchesTileSize
tileDebugInstrumentationData
type
unfilteredResourceOptions
uniqueIdentifier
uniqueIdentifierForComputePipelineState:allocator:
uniqueIdentifierForRenderPipelineState:allocator:
uniqueIdentifierForSamplerState:allocator:
uniqueIdentifierForTexture:allocator:
unloadShaderCaches
unmapShaderSampleBuffer
usage
usedSize
userDictionary
validateDynamicLibrary:state:error:
validateDynamicLibraryDescriptor:error:
validateDynamicLibraryURL:error:
validateWithDevice:
vendorName
vertexAttributes
vertexDebugInstrumentationData
vertexFunction
vertexFunctionHandleWithFunction:
vertexFunctionKeyWithRenderPipelineDescriptor:options:nextStageVariant:vertexKeySize:
waitSignaledValue:timeoutMS:
waitUntilComplete
waitUntilCompleted
waitUntilScheduled
width
wrapComputeState:descriptor:
wrapRenderState:descriptor:
writesDepth
writesStencil
zone
@36@0:8@16I24^{?=Ssi}28
v16@0:8
B16@0:8
Q16@0:8
Q24@0:8Q16
I16@0:8
@"MTLSimDevice"
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16Q24
v40@0:8@16Q24Q32
v48@0:8r^@16r^Q24{_NSRange=QQ}32
v40@0:8r^@16{_NSRange=QQ}24
^v24@0:8Q16
@24@0:8Q16
v24@0:8@16
v32@0:8@"<MTLBuffer>"16Q24
v40@0:8@"<MTLBuffer>"16Q24Q32
v32@0:8@"<MTLTexture>"16Q24
v32@0:8@"<MTLSamplerState>"16Q24
v32@0:8@"<MTLRenderPipelineState>"16Q24
v32@0:8@"<MTLComputePipelineState>"16Q24
v32@0:8@"<MTLIndirectCommandBuffer>"16Q24
v32@0:8@"<MTLAccelerationStructure>"16Q24
@"<MTLArgumentEncoder>"24@0:8Q16
v32@0:8@"<MTLVisibleFunctionTable>"16Q24
v32@0:8@"<MTLIntersectionFunctionTable>"16Q24
@"<MTLDevice>"16@0:8
v24@0:8@"NSString"16
@"_MTLIndirectArgumentBufferLayout"16@0:8
@44@0:8@16I24@28^{?=SI}36
@"MTLSimIndirectArgumentBufferLayout"
@"MTLSimBuffer"
*24@0:8Q16
@"NSObject<OS_dispatch_data>"
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@36@0:8I16Q20@28
v40@0:8@16Q24@?32
v24@0:8Q16
v40@0:8@"MTLSharedEventListener"16Q24@?<v@?@"<MTLSharedEvent>"Q>32
@"MTLSharedEventHandle"16@0:8
@28@0:8@16I24
B32@0:8Q16Q24
{?=QQ}24@0:8@16
{?=QQ}32@0:8Q16Q24
@32@0:8Q16Q24
@40@0:8r^v16Q24Q32
@48@0:8^v16Q24Q32@?40
@40@0:8@16^{__IOSurface=}24Q32
@32@0:8@16^@24
@40@0:8@16@24^@32
v40@0:8@16@24@?32
v32@0:8@16@?24
@48@0:8@16Q24^@32^@40
B24@0:8Q16
B24@0:8q16
v32@0:8^{?=ff}16Q24
@40@0:8@16Q24Q32
{?=QQQ}40@0:8Q16Q24Q32
Q24@0:8q16
{?=QQQ}48@0:8Q16Q24Q32q40
v32@0:8^Q16^Q24
{?=QQQ}24@0:8@16
{?=QQ}24@0:8Q16
{?=QQQ}16@0:8
v72@0:8r^{?={?=QQQ}{?=QQQ}}16^{?={?=QQQ}{?=QQQ}}24{?=QQQ}32Q56Q64
v64@0:8r^{?={?=QQQ}{?=QQQ}}16^{?={?=QQQ}{?=QQQ}}24{?=QQQ}32Q56
@"<MTLCommandQueue>"16@0:8
@"<MTLCommandQueue>"24@0:8Q16
{?=QQ}24@0:8@"MTLTextureDescriptor"16
@"<MTLHeap>"24@0:8@"MTLHeapDescriptor"16
@"<MTLBuffer>"32@0:8Q16Q24
@"<MTLBuffer>"40@0:8r^v16Q24Q32
@"<MTLBuffer>"48@0:8^v16Q24Q32@?<v@?^vQ>40
@"<MTLDepthStencilState>"24@0:8@"MTLDepthStencilDescriptor"16
@"<MTLTexture>"24@0:8@"MTLTextureDescriptor"16
@"<MTLTexture>"40@0:8@"MTLTextureDescriptor"16^{__IOSurface=}24Q32
@"<MTLSamplerState>"24@0:8@"MTLSamplerDescriptor"16
@"<MTLLibrary>"16@0:8
@"<MTLLibrary>"32@0:8@"NSBundle"16^@24
@"<MTLLibrary>"32@0:8@"NSString"16^@24
@"<MTLLibrary>"32@0:8@"NSURL"16^@24
@"<MTLLibrary>"32@0:8@"NSObject<OS_dispatch_data>"16^@24
@"<MTLLibrary>"40@0:8@"NSString"16@"MTLCompileOptions"24^@32
v40@0:8@"NSString"16@"MTLCompileOptions"24@?<v@?@"<MTLLibrary>"@"NSError">32
@"<MTLLibrary>"32@0:8@"MTLStitchedLibraryDescriptor"16^@24
v32@0:8@"MTLStitchedLibraryDescriptor"16@?<v@?@"<MTLLibrary>"@"NSError">24
@"<MTLRenderPipelineState>"32@0:8@"MTLRenderPipelineDescriptor"16^@24
@"<MTLRenderPipelineState>"48@0:8@"MTLRenderPipelineDescriptor"16Q24^@32^@40
v32@0:8@"MTLRenderPipelineDescriptor"16@?<v@?@"<MTLRenderPipelineState>"@"NSError">24
v40@0:8@"MTLRenderPipelineDescriptor"16Q24@?<v@?@"<MTLRenderPipelineState>"@"MTLRenderPipelineReflection"@"NSError">32
@"<MTLComputePipelineState>"32@0:8@"<MTLFunction>"16^@24
@"<MTLComputePipelineState>"48@0:8@"<MTLFunction>"16Q24^@32^@40
v32@0:8@"<MTLFunction>"16@?<v@?@"<MTLComputePipelineState>"@"NSError">24
v40@0:8@"<MTLFunction>"16Q24@?<v@?@"<MTLComputePipelineState>"@"MTLComputePipelineReflection"@"NSError">32
@"<MTLComputePipelineState>"48@0:8@"MTLComputePipelineDescriptor"16Q24^@32^@40
v40@0:8@"MTLComputePipelineDescriptor"16Q24@?<v@?@"<MTLComputePipelineState>"@"MTLComputePipelineReflection"@"NSError">32
@"<MTLFence>"16@0:8
@"<MTLRenderPipelineState>"48@0:8@"MTLTileRenderPipelineDescriptor"16Q24^@32^@40
v40@0:8@"MTLTileRenderPipelineDescriptor"16Q24@?<v@?@"<MTLRenderPipelineState>"@"MTLRenderPipelineReflection"@"NSError">32
@"<MTLRenderPipelineState>"48@0:8@"MTLMeshRenderPipelineDescriptor"16Q24^@32^@40
v40@0:8@"MTLMeshRenderPipelineDescriptor"16Q24@?<v@?@"<MTLRenderPipelineState>"@"MTLRenderPipelineReflection"@"NSError">32
@"<MTLArgumentEncoder>"24@0:8@"NSArray"16
@"<MTLRasterizationRateMap>"24@0:8@"MTLRasterizationRateMapDescriptor"16
@"<MTLIndirectCommandBuffer>"40@0:8@"MTLIndirectCommandBufferDescriptor"16Q24Q32
@"<MTLEvent>"16@0:8
@"<MTLSharedEvent>"16@0:8
@"<MTLSharedEvent>"24@0:8@"MTLSharedEventHandle"16
@"<MTLCounterSampleBuffer>"32@0:8@"MTLCounterSampleBufferDescriptor"16^@24
@"<MTLArgumentEncoder>"24@0:8@"<MTLBufferBinding>"16
@"<MTLDynamicLibrary>"32@0:8@"<MTLLibrary>"16^@24
@"<MTLDynamicLibrary>"32@0:8@"NSURL"16^@24
@"<MTLBinaryArchive>"32@0:8@"MTLBinaryArchiveDescriptor"16^@24
{?=QQQ}24@0:8@"MTLAccelerationStructureDescriptor"16
@"<MTLAccelerationStructure>"24@0:8Q16
@"<MTLAccelerationStructure>"24@0:8@"MTLAccelerationStructureDescriptor"16
{?=QQ}24@0:8@"MTLAccelerationStructureDescriptor"16
@"NSArray"16@0:8
v20@0:8B16
@24@0:8^{__IOSurface=}16
{?=II}16@0:8
@20@0:8I16
B24@0:8{?=II}16
@32@0:8@16Q24
@32@0:8^v16@24
@40@0:8^v16@24@32
@32@0:8Q16@24
v40@0:8@16r^v24@32
v48@0:8@16r^v24@32@40
B32@0:8@16^@24
@40@0:8@16Q24^@32
@48@0:8@16@24Q32^@40
B36@0:8@16B24^@28
@40@0:8Q16@24^@32
^{MTLCompilerConnectionManager=}20@0:8i16
B20@0:8i16
r^{MTLTargetDeviceArch=QI*}16@0:8
r^{?=IIIIIIIIIIIIIIIIIIIIIIIIIIffIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIQ}16@0:8
f16@0:8
{IndirectArgumentBufferCapabilities=b1b1b1b29}16@0:8
q16@0:8
v24@0:8^{MPSFunctionTable=}16
v40@0:8Q16^Q24Q32
B32@0:8{_NSRange=QQ}16
@40@0:8Q16Q24Q32
@48@0:8r^v16Q24Q32Q40
@56@0:8^v16Q24Q32Q40@?48
B40@0:8^{?=III}16Q24Q32
@32@0:8^v16Q24
@40@0:8^v16@24Q32
^v16@0:8
^{os_unfair_lock_s=I}16@0:8
@40@0:8@16r^{?=BQ^{?}}24^@32
@32@0:8@16@24
@48@0:8^v16Q24@32@?40
@28@0:8@16B24
{?=QQQ}48@0:8q16Q24Q32Q40
v48@0:8@16@24@32^@40
v40@0:8@16@24^@32
@32@0:8r^@16Q24
v32@0:8@16@24
@"MTLArchitecture"24@0:8@"NSArray"16
v24@0:8@"<MTLDeviceSPI>"16
@"<MTLBuffer>"24@0:8^{__IOSurface=}16
B24@0:8@"NSString"16
@"<MTLCommandQueue>"24@0:8@"MTLCommandQueueDescriptor"16
@"_MTLIndirectArgumentBufferLayout"24@0:8@"MTLStructType"16
@"<MTLArgumentEncoder>"24@0:8@"_MTLIndirectArgumentBufferLayout"16
@"<MTLBuffer>"40@0:8@"MTLIndirectCommandBufferDescriptor"16Q24Q32
@"<MTLIndirectRenderCommandEncoder>"24@0:8@"<MTLBuffer>"16
@"<MTLIndirectComputeCommandEncoder>"24@0:8@"<MTLBuffer>"16
@"<MTLSharedEvent>"20@0:8I16
@"<MTLAccelerationStructure>"32@0:8Q16Q24
@"<MTLAccelerationStructure>"32@0:8@"<MTLBuffer>"16Q24
@"<MTLAccelerationStructure>"40@0:8@"<MTLBuffer>"16Q24Q32
@"<MTLAccelerationStructure>"32@0:8^v16@"MTLAccelerationStructureDescriptor"24
@"<MTLAccelerationStructure>"40@0:8^v16@"NSArray"24@"MTLAccelerationStructureDescriptor"32
@"<MTLAccelerationStructure>"32@0:8Q16@"MTLAccelerationStructureAllocationDescriptor"24
v40@0:8@"<MTLAccelerationStructure>"16r^v24@"MTLAccelerationStructureDescriptor"32
v48@0:8@"<MTLAccelerationStructure>"16r^v24@"NSArray"32@"MTLAccelerationStructureDescriptor"40
@"<MTLDynamicLibrary>"40@0:8@"<MTLLibrary>"16@"MTLComputePipelineDescriptor"24^@32
B32@0:8@"MTLDynamicLibraryDescriptorSPI"16^@24
@"<MTLDynamicLibrary>"32@0:8@"MTLDynamicLibraryDescriptorSPI"16^@24
@"<MTLDynamicLibrary>"40@0:8@"NSURL"16Q24^@32
@"NSArray"32@0:8@"MTLComputePipelineDescriptor"16^@24
@"NSArray"40@0:8@"MTLComputePipelineDescriptor"16Q24^@32
@"NSArray"40@0:8@"MTLFunction"16@"NSArray"24^@32
@"NSArray"48@0:8@"MTLFunction"16@"NSArray"24Q32^@40
B36@0:8@"<MTLLibrary>"16B24^@28
B32@0:8@"NSURL"16^@24
@"<MTLBinaryArchive>"40@0:8Q16@"NSURL"24^@32
@"<MTLVisibleFunctionTable>"24@0:8@"MTLVisibleFunctionTableDescriptor"16
@"<MTLIntersectionFunctionTable>"24@0:8@"MTLIntersectionFunctionTableDescriptor"16
@"<MTLRenderPipelineState>"32@0:8@"MTLMeshRenderPipelineDescriptor"16^@24
v32@0:8@"MTLMeshRenderPipelineDescriptor"16@?<v@?@"<MTLRenderPipelineState>"@"NSError">24
@"<MTLDeadlineProfile>"24@0:8Q16
@"MTLTargetDeviceArchitecture"16@0:8
@"MTLArchitecture"16@0:8
@"MTLGPUBVHBuilder"16@0:8
@"NSDictionary"16@0:8
v24@0:8@"NSDictionary"16
@"NSObject<OS_dispatch_data>"16@0:8
v24@0:8@"NSObject<OS_dispatch_data>"16
@"<MTLBuffer>"40@0:8Q16Q24Q32
@"<MTLBuffer>"48@0:8r^v16Q24Q32Q40
@"<MTLBuffer>"56@0:8^v16Q24Q32Q40@?<v@?^vQ>48
@"<MTLBuffer>"24@0:8@"MTLBufferDescriptor"16
@"<MTLLateEvalEvent>"16@0:8
@"<MTLComputePipelineState>"32@0:8@"MTLComputePipelineDescriptor"16^@24
v32@0:8@"MTLComputePipelineDescriptor"16@?<v@?@"<MTLComputePipelineState>"@"NSError">24
@"<MTLRenderPipelineState>"32@0:8@"MTLTileRenderPipelineDescriptor"16^@24
v32@0:8@"MTLTileRenderPipelineDescriptor"16@?<v@?@"<MTLRenderPipelineState>"@"NSError">24
@"<MTLFunction>"32@0:8^v16Q24
@"<MTLFunction>"40@0:8^v16@"NSObject<OS_dispatch_data>"24Q32
v24@0:8@"MTLGPUBVHBuilder"16
@"<MTLIndirectArgumentEncoder>"24@0:8@"NSArray"16
@"<MTLComputePipelineState>"40@0:8@"NSArray"16r^{?=BQ^{?}}24^@32
@"<MTLLibrary>"40@0:8@"NSString"16@"NSArray"24^@32
@"<MTLLibrary>"40@0:8@"NSArray"16@"NSArray"24^@32
@"<MTLLibrary>"32@0:8@"MTLStitchedLibraryDescriptorSPI"16^@24
@"NSString"24@0:8@"NSArray"16
@"<MTLLibrary>"40@0:8@"NSArray"16r^{?=BQ^{?}}24^@32
@"<MTLPipelineLibrarySPI>"32@0:8@"NSString"16^@24
@"NSData"16@0:8
@"NSObject<OS_dispatch_data>"24@0:8@"MTLRenderPipelineDescriptor"16
@"NSObject<OS_dispatch_data>"24@0:8@"MTLComputePipelineDescriptor"16
@"MTLRenderPipelineDescriptor"32@0:8@"NSObject<OS_dispatch_data>"16@"<MTLDeserializationContext>"24
@"MTLComputePipelineDescriptor"32@0:8@"NSObject<OS_dispatch_data>"16@"<MTLDeserializationContext>"24
@"NSObject<OS_dispatch_data>"24@0:8@"MTLStructType"16
@"NSObject<OS_dispatch_data>"28@0:8@"MTLStructType"16I24
@"MTLStructType"24@0:8@"NSObject<OS_dispatch_data>"16
@"<MTLTexture>"48@0:8^v16Q24@"MTLTextureDescriptor"32@?<v@?^vQ>40
@"<MTLTextureLayout>"28@0:8@"MTLTextureDescriptor"16B24
@"<MTLIndirectArgumentEncoder>"24@0:8@"_MTLIndirectArgumentBufferLayout"16
v48@0:8@"<MTLFunction>"16@"MTLFunctionDescriptor"24@"<MTLBinaryArchive>"32^@40
v40@0:8@"<MTLFunction>"16@"MTLFunctionDescriptor"24^@32
v40@0:8@"<MTLFunction>"16@"MTLFunctionDescriptor"24@?<v@?@"NSError">32
@"<MTLResourceGroupSPI>"32@0:8r^@16Q24
v32@0:8@"NSObject<OS_dispatch_data>"16@"NSMutableDictionary"24
I24@0:8@16
v20@0:8I16
@52@0:8Q16Q24^v32B40@?44
v52@0:8I16@20@28Q36@?44
^v48@0:8@16Q24@32^Q40
v32@0:8^v16Q24
@48@0:8@16@24@32^@40
{?=b1b1b1b1b1b1b1b1b1b55}32@0:8@16@24
@48@0:8@16@24@32@40
@64@0:8^v16Q24@?32@40Q48Q56
@56@0:8^v16Q24@32Q40Q48
i16@0:8
B44@0:8^@16Q24^Q32i40
{MTLSimConnection="_connection"@"NSObject<OS_xpc_object>""_serialQueue"@"NSObject<OS_dispatch_queue>"}
@"MTLSerializer"
@"NSObject<OS_dispatch_queue>"
{unordered_map<unsigned int, MTLSimCommandBuffer *, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<const unsigned int, MTLSimCommandBuffer *>>>="__table_"{__hash_table<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>, std::allocator<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>>="__value_"f}}}
@"MTLResourceListPool"
@"<MTLDeviceSPI>"
{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}
{?="width"Q"height"Q"depth"Q}
@32@0:8Q16^@24
@"<MTLArgumentEncoder>"32@0:8Q16^@24
@36@0:8@16Q24I32
@"<MTLDevice>"
@"NSString"
@"NSArray"
@"NSDictionary"
@"MTLSimFunction"
@"<MTLHeap>"16@0:8
B32@0:8r^@16Q24
v20@0:8i16
i20@0:8I16
B24@0:8@"<MTLResource>"16
v32@0:8{_NSRange=QQ}16
v40@0:8@16{_NSRange=QQ}24
@"<MTLTexture>"40@0:8@"MTLTextureDescriptor"16Q24Q32
v40@0:8@"NSString"16{_NSRange=QQ}24
@48@0:8@16Q24Q32Q40
^{__IOSurface=}16@0:8
@"<MTLTexture>"48@0:8@"MTLTextureDescriptor"16Q24Q32Q40
@76@0:8@16I24^v28^v36Q44Q52@60@?68
^{__IOSurface=}
^{BufferStorageEntry=@Q^{BufferStorageEntry}}16@0:8
v24@0:8^{BufferStorageEntry=@Q^{BufferStorageEntry}}16
^{BufferStorageEntry=@Q^{BufferStorageEntry}}
@"NSObject<OS_dispatch_semaphore>"
@"<MTLTexture>"32@0:8@"MTLTextureDescriptor"16Q24
@"<MTLAccelerationStructure>"32@0:8@"MTLAccelerationStructureDescriptor"16Q24
@"NSString"24@0:8Q16
@"<MTLAccelerationStructure>"40@0:8Q16Q24Q32
@36@0:8@16@24I32
@44@0:8Q16Q24Q32B40
@36@0:8@16Q24B32
v24@0:8@?16
v32@0:8@16d24
d16@0:8
v24@0:8@?<v@?@"<MTLCommandBuffer>">16
v24@0:8@"<MTLDrawable>"16
v32@0:8@"<MTLDrawable>"16d24
@"<MTLBlitCommandEncoder>"16@0:8
@"<MTLRenderCommandEncoder>"24@0:8@"MTLRenderPassDescriptor"16
@"<MTLComputeCommandEncoder>"24@0:8@"MTLComputePassDescriptor"16
@"<MTLBlitCommandEncoder>"24@0:8@"MTLBlitPassDescriptor"16
@"<MTLComputeCommandEncoder>"16@0:8
@"<MTLComputeCommandEncoder>"24@0:8Q16
v32@0:8@"<MTLEvent>"16Q24
@"<MTLParallelRenderCommandEncoder>"24@0:8@"MTLRenderPassDescriptor"16
@"<MTLResourceStateCommandEncoder>"16@0:8
@"<MTLResourceStateCommandEncoder>"24@0:8@"MTLResourceStatePassDescriptor"16
@"<MTLAccelerationStructureCommandEncoder>"16@0:8
@"<MTLAccelerationStructureCommandEncoder>"24@0:8@"MTLAccelerationStructurePassDescriptor"16
@"<MTLLogContainer>"16@0:8
@"NSError"16@0:8
v48@0:8@16Q24Q32Q40
v56@0:8@16Q24r^Q32r^Q40Q48
^v24@0:8^Q16
@40@0:8@16^(?={?=b8b24IQQ}{?=b8b24IQQ})24Q32
@32@0:8^(?={?=b8b24IQQ}{?=b8b24IQQ})16Q24
@40@0:8Q16^(?={?=b8b24IQQ}{?=b8b24IQQ})24Q32
v36@0:8@16Q24I32
v32@0:8r^@16Q24
v40@0:8Q16r^@24Q32
v24@0:8@"<MTLResourceGroupSPI>"16
v48@0:8@"<MTLResourceGroupSPI>"16Q24Q32Q40
v56@0:8@"<MTLResourceGroupSPI>"16Q24r^Q32r^Q40Q48
v24@0:8@"<MTLResource>"16
v24@0:8@"<MTLHeap>"16
v24@0:8@"NSArray"16
v32@0:8@"<MTLDrawable>"16@"NSDictionary"24
@"NSMutableDictionary"16@0:8
@"<MTLDeadlineProfile>"16@0:8
@"<MTLRenderCommandEncoder>"40@0:8@"MTLRenderPassDescriptor"16^(?={?=b8b24IQQ}{?=b8b24IQQ})24Q32
@"<MTLComputeCommandEncoder>"32@0:8^(?={?=b8b24IQQ}{?=b8b24IQQ})16Q24
@"<MTLComputeCommandEncoder>"40@0:8Q16^(?={?=b8b24IQQ}{?=b8b24IQQ})24Q32
@"<MTLComputeCommandEncoder>"40@0:8@"MTLComputePassDescriptor"16^(?={?=b8b24IQQ}{?=b8b24IQQ})24Q32
@"<MTLDebugCommandEncoder>"16@0:8
v36@0:8@"<MTLEvent>"16Q24I32
B28@0:8@16B24
^v48@0:8Q16Q24^@32^Q40
@?16@0:8
B28@0:8@"<MTLSerializerResource>"16B24
B24@0:8@"<MTLSerializerState>"16
@?<v@?>16@0:8
v24@0:8@?<v@?>16
v24@0:8@"<MTLSerializerCommandStream>"16
^v28@0:8Q16I24
^{StorageEntry=Q^v@^{StorageEntry}}
@"MTLResourceList"
@"<MTLCommandBuffer>"16@0:8
@"<MTLCommandBuffer>"24@0:8@"MTLCommandBufferDescriptor"16
B28@0:8Q16S24
i24@0:8@16
i32@0:8@16Q24
v24@0:8@"NSObject<OS_dispatch_queue>"16
@"NSObject<OS_dispatch_queue>"16@0:8
@"MTLCommandQueueSPIStats"16@0:8
i24@0:8@"NSArray"16
i32@0:8@"NSArray"16Q24
@"NSArray"24@0:8@"NSArray"16
v24@0:8@?<v@?@"<MTLCommandBuffer>"@"NSData"Q>16
@36@0:8@16I24@28
^{StorageEntry=Q^v@^{StorageEntry}}16@0:8
v24@0:8^{StorageEntry=Q^v@^{StorageEntry}}16
@"MTLSimCommandStoragePool"
@"MTLSimBufferStoragePool"
v80@0:8@16Q24Q32@40Q48Q56Q64Q72
v144@0:8@16Q24Q32{?=QQQ}40{?=QQQ}64@88Q96Q104{?=QQQ}112Q136
v128@0:8@16Q24Q32{?=QQQ}40{?=QQQ}64@88Q96Q104Q112Q120
v128@0:8@16Q24Q32Q40{?=QQQ}48@72Q80Q88{?=QQQ}96Q120
Q40@0:8{?=QQQ}16
{MTLResourceID=Q}16@0:8
@"<MTLFunctionHandle>"24@0:8@"<MTLFunction>"16
@"<MTLComputePipelineState>"32@0:8@"NSArray"16^@24
@"MTLDebugInstrumentationData"16@0:8
v40@0:8I16^I20I28^I32
@"<MTLFunctionHandle>"32@0:8@"<MTLFunction>"16Q24
@"<MTLVisibleFunctionTable>"32@0:8@"MTLVisibleFunctionTableDescriptor"16Q24
@"<MTLIntersectionFunctionTable>"32@0:8@"MTLIntersectionFunctionTableDescriptor"16Q24
@"<MTLRenderPipelineState>"32@0:8@"MTLRenderPipelineFunctionsDescriptor"16^@24
@"<MTLRenderPipelineState>"40@0:8@"NSArray"16@"NSArray"24^@32
@"<MTLRenderPipelineState>"32@0:8@"NSArray"16^@24
v64@0:8I16^I20I28^I32I40^I44I52^I56
@44@0:8I16Q20@28@36
B36@0:8r^@16Q24B32
@"MTLSimHeap"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
v80@0:8r*16*24Q32Q40Q48Q56Q64Q72
v104@0:8^v16Q24Q32{?={?=QQQ}{?=QQQ}}40Q88Q96
v104@0:8{?={?=QQQ}{?=QQQ}}16Q64Q72r^v80Q88Q96
v88@0:8^v16Q24{?={?=QQQ}{?=QQQ}}32Q80
v88@0:8{?={?=QQQ}{?=QQQ}}16Q64r^v72Q80
@64@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48
@68@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48{?=CCCC}64
{?=CCCC}16@0:8
@"<MTLTexture>"24@0:8Q16
@"<MTLTexture>"64@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48
@"<MTLTexture>"68@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48{?=CCCC}64
@"<MTLResource>"16@0:8
@"<MTLTexture>"16@0:8
@"<MTLBuffer>"16@0:8
@48@0:8Q16Q24Q32Q40
v32@0:8Q16Q24
@72@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48Q64
@76@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48{?=CCCC}64Q68
@"<MTLTexture>"48@0:8Q16Q24Q32Q40
@"<MTLTexture>"32@0:8Q16Q24
@"<MTLTexture>"72@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48Q64
@"<MTLTexture>"76@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48{?=CCCC}64Q68
Q80@0:8{?={?=QQQ}{?=QQQ}}16Q64Q72
@96@0:8@16Q24Q32Q40{_NSRange=QQ}48{_NSRange=QQ}64{?=CCCC}80B84I88B92
@92@0:8@16Q24Q32Q40{_NSRange=QQ}48{_NSRange=QQ}64{?=CCCC}80I84B88
@48@0:8@16Q24Q32I40B44
@52@0:8@16Q24Q32@40I48
@68@0:8@16Q24^{__IOSurface=}32Q40I48@52@60
@72@0:8@16Q24^{__IOSurface=}32Q40I48@52@60B68
@28@0:8Q16B24
@"MTLSimTexture"
@"<MTLTexture>"
@"<MTLResource>"
?0`@
"%(+.1
47:=@
CFILORUX[
_behk
nqtwz}
BIU]em
v16@?0@"<MTLSerializerAllocator>"8
v24@?0r^v8Q16
messageType
command
replyData
This object may only be decoded by an NSXPCCoder.
label
This object may only be encoded by an NSXPCCoder.
eventRef
error
eventPort
labelTraceID
v16@?0@"NSObject<OS_xpc_object>"8
status
commandBufferRef
startTime
endTime
notificationRef
command buffers
Mar  4 2023
17:04:57
simulatorDummyPlugin
v8@?0
-[MTLSimDevice sparseTileSizeWithTextureType:pixelFormat:sampleCount:]
not supported in the simulator
v24@?0^v8Q16
length
options
bufferIndex
sharedMem
bufferRef
-[MTLSimDevice newHeapWithDescriptor:]
MTLStorageModePrivate is required for heaps
-[MTLSimDevice newIndirectCommandBufferWithDescriptor:maxCommandCount:options:]
-[MTLSimDevice newTextureWithDescriptor:]
texture rotation is not supported in the simulator
-[MTLSimDevice newTextureWithDescriptor:iosurface:plane:]
iosurface
UseSimulatorSharedTextures
com.apple.Metal
-[MTLSimDevice wrapRenderState:descriptor:]
functionIR
-[MTLSimDevice wrapComputeState:descriptor:]
-[MTLSimDevice newIndirectCommandBufferWithDescriptor:maxCount:options:]
-[MTLSimDevice newIndirectComputeCommandEncoderWithBuffer:]
-[MTLSimDevice newIndirectRenderCommandEncoderWithBuffer:]
-[MTLSimDevice newTiledTextureWithBytesNoCopy:length:deallocator:descriptor:offset:bytesPerRow:]
-[MTLSimDevice newTiledTextureWithBytesNoCopy:length:descriptor:offset:bytesPerRow:]
simulator
Apple
-[MTLSimDevice newCommandQueueWithDescriptor:]
Descriptor cannot be nil
maxCommandBufferCount
commandQueueRef
-[MTLSimDevice newBufferWithIOSurface:]
-[MTLSimDevice minimumLinearTextureAlignmentForPixelFormat:]
%s is not supported on this device.
Linear textures do not support compressed pixel formats
Linear textures do not support depth/stencil pixel formats
-[MTLSimDevice minimumTextureBufferAlignmentForPixelFormat:]
-[MTLSimDevice newRenderPipelineStateWithTileDescriptor:options:completionHandler:]
-[MTLSimDevice newRenderPipelineStateWithTileDescriptor:options:reflection:error:]
-[MTLSimDevice newRenderPipelineStateWithMeshDescriptor:error:]
-[MTLSimDevice newRenderPipelineStateWithMeshDescriptor:options:reflection:error:]
-[MTLSimDevice newRenderPipelineStateWithMeshDescriptor:completionHandler:]
-[MTLSimDevice newRenderPipelineStateWithMeshDescriptor:options:completionHandler:]
EnableSimApple5
fatalError
XPCReplyCheck
connection Queue
connectionType
processRef
version
registryID
hostFeatureProfile
com.apple.metal.simulator
basic_string
UNKNOWN XPC_TYPE_ERROR
XPC_ERROR_TERMINATION_IMMINENT
XPC_ERROR_CONNECTION_INVALID
XPC_ERROR_CONNECTION_INTERRUPTED
function variant
-[MTLSimBuffer initWithDevice:bufferRef:content:pointer:length:options:heap:deallocator:]
storageModePrivate incompatible with ...WithBytes variant of newBuffer
Invalid cacheMode %u
Invalid storageMode %u
%@%@
label =
<none>
length =
cpuCacheMode =
storageMode =
hazardTrackingMode =
resourceOptions =
purgeableState =
-[MTLSimBuffer newTextureWithDescriptor:offset:bytesPerRow:]
Linear texture can only be created on buffers with MTLStorageModePrivate in the simulator
Linear textures from XR10 is not supported in the simulator
-[MTLSimRenderCommandEncoder setPrimitiveRestartEnabled:]
setPrimitiveRestartEnabled is not supported in the simulator
-[MTLSimCommandBuffer resourceStateCommandEncoderWithDescriptor:]
-[MTLSimCommandBuffer resourceStateCommandEncoder]
-[MTLSimCommandBuffer setProtectionOptions:]
setProtectionOptions: with uncommitted encoder
commandQueue
segments
com.apple.MTLSimDriver
-[MTLSimBlitCommandEncoder copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:]_block_invoke
Unable to load Simulator decoder Metal library: %@
pvrtc2
pvrtc4
DecodeEAC_R11Unorm
DecodeEAC_R11Snorm
DecodeEAC_RG11Unorm
DecodeEAC_RG11Snorm
DecodeEAC_RGBA8
DecodeETC2_RGB8
DecodeETC2_RGB8A1
DecodeBGRA_XR10
DecodeBGR_XR10
astc
-[MTLSimBlitCommandEncoder copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:]_block_invoke_2
Error creating kernel '%@': %@
Error creating pipeline state %@ from %@
v16@?0@"<MTLCommandBuffer>"8
-[MTLSimTexture initWithTextureInternal:pixelFormat:decompressedPixelFormat:textureType:levels:slices:swizzle:compressedView:textureRef:isInternalTextureView:]
Device does not support texture swizzle.
Pixel format views involving XR10 are not supported in the simulator
-[MTLSimTexture initWithDescriptor:decompressedPixelFormat:iosurface:plane:textureRef:heap:device:]
IOSurface backed XR10 textures are not supported in the simulator
-[MTLSimTexture initWithDescriptor:decompressedPixelFormat:iosurface:plane:textureRef:heap:device:shareable:]
Shared texture feature not available in simulator
textureType =
pixelFormat =
decompressedPixelFormat =
width =
height =
depth =
arrayLength =
mipmapLevelCount =
sampleCount =
usage =
shareable =
framebufferOnly =
swizzle =
parentTexture =
<null>
parentRelativeLevel =
parentRelativeSlice =
buffer =
bufferOffset =
bufferBytesPerRow =
allowGPUOptimizedContents =
-[MTLSimTexture newTextureViewWithPixelFormat:textureType:levels:slices:swizzle:]
event notification reference not found
Compiler failed to build request
Compiler failed with XPC_ERROR_CONNECTION_INTERRUPTED
Compiler failed with XPC_ERROR_CONNECTION_INVALID
Compiler failed with XPC_ERROR_TERMINATION_IMMINENT
Compiler failed with unknown XPC error
Decompression failure: unable to allocate decoder from at_encoder_create()
Decompression failure: error %ld returned from at_encoder_decompress_texels()
MTLSimIndirectArgumentBufferLayout
MTLSimArgumentEncoder
MTLArgumentEncoderSPI
MTLArgumentEncoder
NSObject
MTLSimOperation
MTLSerializerAllocator
MTLSimSharedEventHandle
NSSecureCoding
NSCoding
MTLSimSharedEvent
MTLSimEvent
MTLEvent
MTLSerializerEvent
MTLSerializerState
MTLSharedEvent
MTLSimDevice
MTLDeviceSPI
MTLDevice
MTLSimFunction
MTLFunction
MTLSimFunctionVariant
MTLSimFence
MTLFence
MTLSerializerFence
MTLSimBuffer
MTLSerializerBuffer
MTLSerializerResource
MTLBufferSPI
MTLResourceSPI
MTLResource
MTLBuffer
MTLSimBufferStoragePool
MTLSimRenderCommandEncoder
MTLSimHeap
MTLHeapSPI
MTLHeap
MTLSerializerHeap
MTLSimCommandBuffer
MTLCommandBufferSPI
MTLCommandBuffer
MTLSerializerCommandStream
MTLSimCommandQueue
MTLCommandQueueSPI
MTLCommandQueue
MTLSimBlitCommandEncoder
MTLSimCommandStoragePool
MTLSimComputePipelineState
MTLComputePipelineStateSPI
MTLComputePipelineState
MTLPipelineStateWithProgramAddressTable
MTLSerializerComputePipelineState
MTLSimDepthStencilState
MTLDepthStencilStateSPI
MTLDepthStencilState
MTLSerializerDepthStencilState
MTLSimRenderPipelineState
MTLRenderPipelineStateSPI
MTLRenderPipelineState
MTLSerializerRenderPipelineState
MTLSimResource
MTLSimSamplerState
MTLSamplerStateSPI
MTLSamplerState
MTLSerializerSamplerState
MTLSimTexture
MTLSerializerTexture
MTLTextureSPI
MTLTexture
MTLTextureImplementation
T@"<MTLHeap>",R
.cxx_destruct
TB,R,GisAnisoSampleFixSupported
BCTextureCompressionSupported
T{?=CCCC},R,D,N
CustomBorderColorSupported
_buffer
GPUBVHBuilder
_device
GPUStartTime
_iosurfacePlane
RTZRoundingSupported
_length
StatLocations
_offset
T#,R
argumentEncoderSetSamplerStates:withRange:encoderRef:allocator:
T@"<MTLBuffer>",R,D
completionQueue
T@"<MTLDeadlineProfile>",R,&
computeFunction
T@"<MTLDevice>",R,D
dealloc
T@"<MTLDevice>",R,Vdevice
depthStencilRef
T@"<MTLLogContainer>",R
disableCrossQueueHazardTracking
T@"<MTLResource>",R,VrootResource
framebufferOnly
T@"<MTLTexture>",R,D
isBCTextureCompressionSupported
T@"MTLDebugInstrumentationData",R,&,N
kernelStartTime
T@"MTLResourceListPool",R,V_resourceListPool
maxInterpolants
T@"MTLSimFunction",R
maxTileTextures
T@"NSArray",R
meshFunctionHandleWithFunction:
T@"NSDictionary",C,N
newBufferWithBytesNoCopy:length:options:gpuAddress:deallocator:
T@"NSDictionary",R,VfunctionConstantsDictionary
newComputePipelineStateWithDescriptor:options:reflection:error:
T@"NSMutableDictionary",R,N
newDynamicLibraryWithURL:error:
T@"NSObject<OS_dispatch_queue>",R
newLibraryWithDescriptor:error:
T@"NSString",C
numberWithBool:
T@"NSString",C,Vlabel
pushDebugGroup:
T@"NSString",R,C
releaseArgumentBufferLayoutRef:
T@"_MTLIndirectArgumentBufferLayout",R,N
releaseHeapRef:
T@?,C,VsplitHandler
setGPUPriority:
TB,GareGPUAssertionsEnabled,SsetGPUAssertionsEnabled:
setRenderPipelineState:atIndex:
TB,N
setStatOptions:
TB,N,VsupportIndirectCommandBuffers
supportsBGR10A2
TB,R,GareBarycentricCoordsSupported
supportsIndirectDrawAndDispatch
TB,R,GareProgrammableSamplePositionsSupported,VprogrammableSamplePositionsSupported
supportsLargeFramebufferConfigs
TB,R,GisBCTextureCompressionSupported
supportsStreamingCodecSignaling
TB,R,GisCustomBorderColorSupported
supportsViewportAndScissorArray
TB,R,GisDepth24Stencil8PixelFormatSupported,Vdepth24Stencil8PixelFormatSupported
swizzle
TB,R,GisFloat32FilteringSupported
tileFunctionHandleWithFunction:
TB,R,GisFramebufferOnly,V_framebufferOnly
.cxx_construct
T@"NSArray",R,VvertexAttributes
AnisoSampleFixSupported
TQ,R,VpatchType
ClampToHalfBorderSupported
_argumentBuffer
FixedLinePointFillDepthGradientSupported
_commandBuffers
GPUEndTime
_height
RGB10A2GammaSupported
_layout
StatEnabled
_mainConnection
StatOptions
_purgeableState
T@"<MTLBuffer>",R
commandPrevious
T@"<MTLCommandQueue>",R
compressionType
T@"<MTLDevice>",R
deadlineProfile
T@"<MTLDevice>",R,V_device
defaultTextureWriteRoundingMode
T@"<MTLHeap>",R,D
didModifyRange:
T@"<MTLResource>",R
enqueue
T@"<MTLTexture>",R
heapRef
T@"MTLArchitecture",R
isProxy
T@"MTLGPUBVHBuilder",R
maxBufferLength
T@"MTLSerializer",R,V_serializer
maxTileSamplers
T@"MTLTargetDeviceArchitecture",R
maxTotalThreadgroupsPerMeshGrid
T@"NSArray",R,VstageInputAttributes
minConstantBufferAlignmentBytes
T@"NSDictionary",R
newCommandQueue
T@"NSError",R
newDynamicLibraryFromURL:error:
T@"NSObject<OS_dispatch_data>",R,V_data
newIndirectCommandBufferWithDescriptor:maxCommandCount:options:
T@"NSObject<OS_xpc_object>",R
newRenderPipelineStateWithDescriptor:options:completionHandler:
T@"NSString",C,D
options
T@"NSString",R
release
T@"NSString",R,Vname
releaseComputePipelineStateRef:
T@?,C
resourceOptions
setPixelFormat:
TB,GisProfilingEnabled
setStatEnabled:
TB,N,GisStatEnabled
setStorageMode:
TB,R
supportsFamily:
TB,R,GareProgrammableSamplePositionsSupported
supportsInvariantVertexPosition
TB,R,GareRasterOrderGroupsSupported
supportsMemorylessRenderTargets
TB,R,GisClampToHalfBorderSupported
supportsTextureOutOfBoundsReads
TB,R,GisDepth24Stencil8PixelFormatSupported
supportsWritableArrayOfTextures
TB,R,GisFixedLinePointFillDepthGradientSupported
tailSizeInBytes
TB,R,GisFramebufferOnly
tileSizeWithSparsePageSize:textureType:pixelFormat:sampleCount:
TB,R,GisHeadless
TB,R,GisHeadless,Vheadless
TB,R,GisLargeMRTSupported
TB,R,GisLowPower
TB,R,GisLowPower,VlowPower
TB,R,GisMsaa32bSupported
TB,R,GisPlacementHeapSupported
TB,R,GisQuadDataSharingSupported
TB,R,GisRGB10A2GammaSupported
TB,R,GisRTZRoundingSupported
TB,R,GisRemovable
TB,R,GisRemovable,Vremovable
TB,R,GisShareable,V_shareable
TB,R,N
TB,R,V_allowGPUOptimizedContents
TB,R,V_isDrawable
TB,R,VhasUnifiedMemory
TI,R
TI,R,D
TI,R,N
TI,R,V_resourceRef
TI,R,V_swizzle
TQ,D
TQ,N
TQ,N,GgetStatLocations
TQ,N,GgetStatOptions
TQ,N,VmaxTotalThreadsPerThreadgroup
TQ,N,VstaticThreadgroupMemoryLength
TQ,N,VthreadExecutionWidth
TQ,R
TQ,R,D
TQ,R,N
TQ,R,N,GgetListIndex
TQ,R,V_cpuCacheMode
TQ,R,V_firstMipmapInTail
TQ,R,V_functionType
TQ,R,V_gpuAddress
TQ,R,V_hostFeatureProfile
TQ,R,V_parentRelativeLevel
TQ,R,V_registryID
TQ,R,V_storageMode
TQ,R,V_tailSizeInBytes
TQ,R,V_uniqueIdentifier
TQ,R,V_usage
TQ,R,VallocatedSize
TQ,R,VallocationID
TQ,R,VbufferStorageByteCount
TQ,R,VcurrentAllocatedSize
TQ,R,ViosurfacePlane
TQ,R,VparentRelativeSlice
TQ,R,VprotectionOptions
TQ,R,Vrotation
T^{__IOSurface=},R
T^{__IOSurface=},R,V_iosurface
Td,R
Tf,R
Ti,VresponsibleProcess
Tq,R
Tq,R,D
Tq,R,VpatchControlPointCount
Tr^{?=IIIIIIIIIIIIIIIIIIIIIIIIIIffIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIQ},R
Tr^{MTLTargetDeviceArch=QI*},R
T{?=CCCC},R,N
T{?=QQQ},R
T{IndirectArgumentBufferCapabilities=b1b1b1b29},R
T{MTLResourceID=Q},R
UTF8String
_alignment
_allowGPUOptimizedContents
_aneIOSurface
_arrayLength
_backingBuffer
_backingBufferSize
_bufferBytesPerRow
_bufferLayoutMatchesFrontEndLayout
_bufferOffset
_bufferRef
_commandBufferQueue
_commandQueueRef
_compilerConnection
_content
_cpuCacheMode
_data
_deallocator
_decompressedPixelFormat
_decompressedTextureView
_depth
_deserializerVersion
_deviceWrapper
_encodedLength
_fenceRef
_firstMipmapInTail
_framebufferOnly
_function
_functionRef
_functionType
_gpuAddress
_hazardTrackingMode
_heap
_heapOffset
_heapRef
_hostFeatureProfile
_iosurface
_isAliasable
_isDrawable
_isInternalTextureView
_label
_labelLock
_maxThreadgroupMemoryLength
_maxThreadsPerThreadgroup
_mipmapLevelCount
_notificationMutex
_notifications
_numFaces
_options
_parentRelativeLevel
_parentRelativeSlice
_parentTexture
_pipelineRef
_pixelFormat
_pointer
_processRef
_protectionOptions
_reference
_registryID
_resourceConnection
_resourceList
_resourceListPool
_resourceRef
_sampleCount
_serializer
_setDeviceWrapper:
_shareable
_signaledValue
_storageMode
_swizzle
_tailSizeInBytes
_textureType
_uniqueIdentifier
_usage
_width
accelerationStructureCommandEncoder
accelerationStructureCommandEncoderWithDescriptor:
accelerationStructureSizesWithDescriptor:
addCompletedHandler:
addDebugMarker:range:
addPerfSampleHandler:
addPurgedHeap:
addPurgedResource:
addResourceReference:isWrite:
addScheduledHandler:
addStateReference:
alignment
allocStorage
allocateOperationBytes:
allocatedSize
allocationID
allowGPUOptimizedContents
allowLibrariesFromOtherPlatforms
architecture
areBarycentricCoordsSupported
areGPUAssertionsEnabled
areProgrammableSamplePositionsSupported
areRasterOrderGroupsSupported
argumentBufferLayoutConstantAtIndex:layoutRef:allocator:
argumentBufferLayoutRef
argumentBuffersSupport
argumentEncoderConstantAtIndex:encoderRef:bufferRef:allocator:
argumentEncoderRef
argumentEncoderSetArgumentBuffer:offset:encoderRef:allocator:
argumentEncoderSetBuffers:offsets:withRange:encoderRef:allocator:
argumentEncoderSetTextures:withRange:encoderRef:allocator:
arrayLength
arrayWithObjects:count:
autorelease
availableCounters
availableCountersAndDict
backgroundTrackingPID
backingBuffer
barycentricCoordsSupported
beginContinuation
beginSegment:
blitCommandEncoder
blitCommandEncoderWithDescriptor:
buffer
bufferBytesPerRow
bufferCurrentStorage
bufferGPUAddress:allocator:
bufferHead
bufferLayoutMatchesFrontEndLayout
bufferOffset
bufferPool
bufferRef
bufferRobustnessSupport
bufferStorageByteCount
bundleWithIdentifier:
calculateOffsetToRegion:level:slice:
canGenerateMipmapLevels
class
commandBuffer
commandBufferDidComplete:startTime:completionTime:error:
commandBufferErrorOptions
commandBufferForReference:
commandBufferRef
commandBufferWithDescriptor:
commandBufferWithUnretainedReferences
commandCurrentStorage
commandHead
commandPool
commandQueue
commandTail
commit
commitAndHold
commitAndWaitUntilSubmitted
commitAndWaitUntilSubmittedWithDeadline:
commitQueue
commitSynchronously
commitWithDeadline:
compileVisibleFunction:withDescriptor:completionHandler:
compileVisibleFunction:withDescriptor:destinationBinaryArchive:error:
compileVisibleFunction:withDescriptor:error:
compiler
compilerConnection
compilerPropagatesThreadPriority:
componentsJoinedByString:
compressionFeedback
compressionFootprint
computeCommandEncoder
computeCommandEncoderWithDescriptor:
computeCommandEncoderWithDispatchType:
computePipelineWithReplyData:replyDataSize:pipelineInfo:errorMessage:
conformsToProtocol:
constantDataAtIndex:
constantOffsetAtIndex:
contents
continuation
convertSparsePixelRegions:toTileRegions:withTileSize:alignmentMode:numRegions:
convertSparseTileRegions:toPixelRegions:withTileSize:numRegions:
copy
copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:
copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:options:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:
copyFromTexture:sourceSlice:sourceLevel:toTexture:destinationSlice:destinationLevel:sliceCount:levelCount:
copyImageBytesFromSource:toDestination:dataSize:region:bytesPerRow:bytesPerImage:mipmapLevel:slice:texture:
copyShaderCacheToPath:
counterInfo
counterSets
cpuCacheMode
currentAllocatedSize
currentStorageOffset
data
dataSizeForRegion:pixelFormat:bytesPerRow:bytesPerImage:
debugBufferContentsWithLength:
debugCommandEncoder
debugDescription
debugInstrumentationData
decodeIntegerForKey:
decodeObjectOfClass:forKey:
decodeXPCObjectOfType:forKey:
decompress:expandedTex:srcFormat:destFormat:width:height:destRowBytes:srcRowBytes:
decompressPlaceholder:expandedTex:srcFormat:destFormat:width:height:destRowBytes:srcRowBytes:
decompressedPixelFormat
decompressedTextureView
dedicatedMemorySize
deleteArgumentBufferLayoutRef:allocator:
deleteArgumentEncoderRef:allocator:
deleteBufferRef:allocator:
deleteCommandQueueRef:allocator:
deleteComputePipelineStateRef:allocator:
deleteDepthStencilStateRef:allocator:
deleteEventRef:allocator:
deleteFenceRef:allocator:
deleteFunctionRef:allocator:
deleteHeapRef:allocator:
deleteRenderPipelineStateRef:allocator:
deleteSamplerStateRef:allocator:
deleteTextureRef:allocator:
depth
depth24Stencil8PixelFormatSupported
description
descriptorPrivate
deserializeCompileTimeStats:addToDictionary:
deserializeInstanceAccelerationStructure:fromBytes:primitiveAccelerationStructures:withDescriptor:
deserializeInstanceAccelerationStructureFromBytes:primitiveAccelerationStructures:withDescriptor:
deserializePrimitiveAccelerationStructure:fromBytes:withDescriptor:
deserializePrimitiveAccelerationStructureFromBytes:withDescriptor:
deserializerGeneratesResourceRefs
deserializerSupportsSharedEvents
deserializerSupportsSharedTextures
device
deviceCreationFlags
deviceLinearReadOnlyTextureAlignmentBytes
deviceLinearTextureAlignmentBytes
deviceOrFeatureProfileSupportsFeatureSet:
deviceSupportsFeatureSet:
dictionaryWithObjects:forKeys:count:
didModifyData
didScheduleWithStartTime:endTime:error:
dispatchAvailableCompletionNotifications
dispatchNotificationWithReference:
dispatchQueue
dispatchThreads:threadsPerThreadgroup:
doesAliasAllResources:count:
doesAliasAnyResources:count:
doesAliasResource:
doesAliasResources:count:all:
doesAliasResources:count:all:resource:allocator:
doesNotRecognizeSelector:
doubleFPConfig
dropResourceGroups:count:
encodeCacheHintFinalize:resourceGroups:count:
encodeCacheHintTag:resourceGroups:count:
encodeDashboardFinalizeForResourceGroup:dashboard:value:forIndex:
encodeDashboardFinalizeForResourceGroup:dashboard:values:indices:count:
encodeDashboardTagForResourceGroup:
encodeInteger:forKey:
encodeObject:forKey:
encodeSignalEvent:value:
encodeWaitForEvent:value:
encodeWaitForEvent:value:timeout:
encodeWithCoder:
encodeXPCObject:forKey:
encodedLength
endCollectingPipelineDescriptors
endEncoding
error
errorOptions
eventPort
eventRef
executionEnabled
explicitVisibilityGroupID
familyName
featureProfile
fenceRef
finish
firstMipmapInTail
float32FilteringSupported
formattedDescription:
fragmentDebugInstrumentationData
fragmentFunction
fragmentFunctionHandleWithFunction:
fragmentFunctionKeyWithRenderPipelineDescriptor:options:previousStateVariant:fragmentKeySize:
freeFragmentFunctionKey:fragmentKeySize:
freeVertexFunctionKey:vertexKeySize:
function
functionConstantsDictionary
functionHandleWithFunction:
functionHandleWithFunction:stage:
functionRef
functionType
generateMipmapLevel:slice:
getBVHBuilderLock
getBackgroundGPUPriority
getBufferBytes:alignment:buffer:offset:
getBufferStorage
getBytes:bytesPerRow:bytesPerImage:fromRegion:mipmapLevel:slice:
getBytes:bytesPerRow:fromRegion:mipmapLevel:
getBytesFromRegion:bytesPerRow:bytesPerImage:mipmapLevel:slice:texture:outDataSize:
getCommandBufferBytes:
getCommandBufferStorage
getCommandBytes:forCommand:
getCompilerConnectionManager:
getComputeInfoWithAllocator:
getDecompressedFormat:
getDefaultSamplePositions:count:
getFragmentShaderTelemetryID
getGPUPriority
getListIndex
getMostCompatibleArchitecture:
getNewResourceID
getRawBVHBuilderPtr
getRequestedCounters
getSPIStats
getShaderCacheKeys
getSizeInfo
getStatLocations
getStatOptions
getStorage
getVertexShaderTelemetryID
getWritableInfo:buffers:texturesArrayLength:textures:
getWritableInfo:vtxBuffers:vtxTexturesArrayLength:vtxTextures:frgBuffersLength:frgBuffers:frgTexturesArrayLength:frgTextures:
globalTraceObjectID
gpuAddress
gpuAssertionsEnabled
gpuHandle
gpuResourceID
halfFPConfig
handleNewObjectReplyData:replyDataSize:
handleNewObjectReplyData:replyDataSize:errorMessage:
hasUnifiedMemory
hash
hazardTrackingMode
head
headless
heap
heapAccelerationStructureSizeAndAlignWithDescriptor:
heapAccelerationStructureSizeAndAlignWithSize:
heapBufferSizeAndAlignWithLength:options:
heapBufferSizeAndAlignWithLength:options:allocator:
heapOffset
heapTextureSizeAndAlignWithDescriptor:
heapTextureSizeAndAlignWithDescriptor:allocator:
height
imageblockMemoryLengthForDimensions:
imageblockSampleLength
indirectArgumentBufferCapabilities
indirectArgumentBufferDecodingData
init
initWithBuffer:offset:bytesPerRow:descriptor:textureRef:
initWithCoder:
initWithCommandBuffer:
initWithCommandBuffer:descriptor:serializer:
initWithCommandBuffer:renderPassDescriptor:serializer:
initWithCompilerOutput:
initWithDescriptor:decompressedPixelFormat:iosurface:plane:textureRef:heap:device:
initWithDescriptor:decompressedPixelFormat:iosurface:plane:textureRef:heap:device:shareable:
initWithDescriptor:device:heapRef:
initWithDescriptor:reference:device:
initWithDevice:bufferRef:content:pointer:length:options:heap:deallocator:
initWithDevice:commandQueueRef:descriptor:
initWithDevice:depthStencilDescriptor:
initWithDevice:descriptor:
initWithDevice:deserializerGeneratesResourceRefs:deserializerVersion:
initWithDevice:fenceRef:
initWithDevice:functionType:functionRef:
initWithDevice:maxCommandBufferCount:
initWithDevice:pipelineRef:descriptor:
initWithDevice:pipelineStateDescriptor:
initWithDevice:reference:
initWithDevice:reference:data:
initWithDevice:reference:layout:data:
initWithDevice:samplerDescriptor:
initWithDomain:code:userInfo:
initWithEntrySize:
initWithEntrySize:device:
initWithEventPort:labelTraceID:label:
initWithFunction:compilerOutput:
initWithQueue:retainedReferences:
initWithResourceListCapacity:
initWithResourceRef:options:device:heap:
initWithTargetData:cacheUUID:pluginPath:device:compilerFlags:
initWithTexture:device:
initWithTexture:pixelFormat:decompressedPixelFormat:textureRef:isInternalTextureView:
initWithTexture:pixelFormat:decompressedPixelFormat:textureType:levels:slices:swizzle:textureRef:isInternalTextureView:
initWithTextureInternal:pixelFormat:decompressedPixelFormat:textureType:levels:slices:swizzle:compressedView:textureRef:isInternalTextureView:
initWithType:options:
initWithUTF8String:
insertDebugCaptureBoundary
iosurface
iosurfacePlane
iosurfaceReadOnlyTextureAlignmentBytes
iosurfaceTextureAlignmentBytes
isAliasable
isAnisoSampleFixSupported
isClampToHalfBorderSupported
isCompatibleWithAccelerationStructure:
isComplete
isCompressed
isCustomBorderColorSupported
isDepth24Stencil8PixelFormatSupported
isDrawable
isEqual:
isFixedLinePointFillDepthGradientSupported
isFloat32FilteringSupported
isFramebufferOnly
isHeadless
isKindOfClass:
isLargeMRTSupported
isLowPower
isMemberOfClass:
isMsaa32bSupported
isOpenGLQueue
isPlacementHeapSupported
isProfilingEnabled
isPurgeable
isQuadDataSharingSupported
isRGB10A2GammaSupported
isRTZRoundingSupported
isRemovable
isShareable
isSparse
isStatEnabled
kernelEndTime
label
largeMRTSupported
layout
length
libraryCacheStats
limits
linearTextureAlignmentBytes
linearTextureArrayAlignmentBytes
linearTextureArrayAlignmentSlice
listIndex
llvmVersion
loadDynamicLibrariesForComputeDescriptor:error:
loadDynamicLibrariesForComputeDescriptor:options:error:
loadDynamicLibrariesForFunction:insertLibraries:error:
loadDynamicLibrariesForFunction:insertLibraries:options:error:
logs
lowPower
mainConnection
makeAliasable
makeAliasableResource:allocator:
mapShaderSampleBufferWithBuffer:capacity:size:
maxArgumentBufferSamplerCount
maxAvailableSizeWithAlignment:
maxAvailableSizeWithAlignment:heap:allocator:
maxColorAttachments
maxCommandBufferCount
maxComputeAttributes
maxComputeBuffers
maxComputeInlineDataSize
maxComputeLocalMemorySizes
maxComputeSamplers
maxComputeTextures
maxComputeThreadgroupMemory
maxComputeThreadgroupMemoryAlignmentBytes
maxConcurrentExecutingCompilationTasks
maxConstantBufferArguments
maxCustomSamplePositions
maxFenceInstances
maxFragmentBuffers
maxFragmentInlineDataSize
maxFragmentSamplers
maxFragmentTextures
maxFramebufferStorageBits
maxFunctionConstantIndices
maxIndirectBuffers
maxIndirectSamplers
maxIndirectSamplersPerDevice
maxIndirectTextures
maxInterpolatedComponents
maxLineWidth
maxPointSize
maxPredicatedNestingDepth
maxRasterizationRateLayerCount
maxTessellationFactor
maxTextureBufferWidth
maxTextureDepth3D
maxTextureDimensionCube
maxTextureHeight2D
maxTextureHeight3D
maxTextureLayers
maxTextureWidth1D
maxTextureWidth2D
maxTextureWidth3D
maxThreadgroupMemoryLength
maxThreadsPerThreadgroup
maxTileBuffers
maxTileInlineDataSize
maxTotalComputeThreadsPerThreadgroup
maxTotalThreadsPerMeshThreadgroup
maxTotalThreadsPerObjectThreadgroup
maxTotalThreadsPerThreadgroup
maxVertexAmplificationCount
maxVertexAmplificationFactor
maxVertexAttributes
maxVertexBuffers
maxVertexInlineDataSize
maxVertexSamplers
maxVertexTextures
maxViewportCount
maxVisibilityQueryOffset
merge:
meshDebugInstrumentationData
meshThreadExecutionWidth
metalAssertionsEnabled
minBufferNoCopyAlignmentBytes
minLinearTextureAlignmentForPixelFormat:
minTilePixels
minimumLinearTextureAlignmentForPixelFormat:
minimumLinearTextureAlignmentForPixelFormat:allocator:
minimumTextureBufferAlignmentForPixelFormat:
minimumTextureBufferAlignmentForPixelFormat:allocator:
mipmapLevelCount
msaa32bSupported
name
newAccelerationStructureWithBuffer:offset:
newAccelerationStructureWithBuffer:offset:resourceIndex:
newAccelerationStructureWithDescriptor:
newAccelerationStructureWithDescriptor:offset:
newAccelerationStructureWithSize:
newAccelerationStructureWithSize:offset:
newAccelerationStructureWithSize:offset:resourceIndex:
newAccelerationStructureWithSize:resourceIndex:
newAccelerationStructureWithSize:withDescriptor:
newArgumentBufferLayoutWithStructType:allocator:
newArgumentEncoderForBufferAtIndex:
newArgumentEncoderWithArguments:
newArgumentEncoderWithBufferBinding:
newArgumentEncoderWithBufferIndex:
newArgumentEncoderWithBufferIndex:reflection:
newArgumentEncoderWithLayout:
newArgumentEncoderWithLayout:allocator:
newBinaryArchiveWithDescriptor:error:
newBinaryLibraryWithOptions:url:error:
newBufferRef
newBufferWithBytes:length:options:
newBufferWithBytes:length:options:gpuAddress:
newBufferWithBytesNoCopy:length:options:deallocator:
newBufferWithDescriptor:
newBufferWithIOSurface:
newBufferWithLength:options:
newBufferWithLength:options:gpuAddress:
newBufferWithLength:options:heap:offset:useOffset:allocator:
newBufferWithLength:options:offset:
newBufferWithLength:options:offset:useOffset:
newBufferWithLength:options:pointer:copyBytes:deallocator:
newCommandBufferRef
newCommandQueueRef
newCommandQueueWithDescriptor:
newCommandQueueWithMaxCommandBufferCount:
newCompressedTextureViewWithPixelFormat:textureType:level:slice:
newComputePipelineDescriptorWithSerializedData:deserializationContext:
newComputePipelineStateWithAdditionalBinaryFunctions:error:
newComputePipelineStateWithDescriptor:completionHandler:
newComputePipelineStateWithDescriptor:error:
newComputePipelineStateWithDescriptor:options:completionHandler:
newComputePipelineStateWithFunction:completionHandler:
newComputePipelineStateWithFunction:error:
newComputePipelineStateWithFunction:options:completionHandler:
newComputePipelineStateWithFunction:options:reflection:error:
newComputePipelineStateWithImageFilterFunctionsSPI:imageFilterFunctionInfo:error:
newComputePipelineStateWithSerializedDescriptor:allocator:
newComputePipelineWithDescriptor:variant:errorMessage:
newComputeVariantWithCompilerOutput:pipelineStatisticsOutput:
newCounterSampleBufferWithDescriptor:error:
newDagStringWithGraphs:
newDefaultLibrary
newDefaultLibraryWithBundle:error:
newDepthStencilStateWithDescriptor:
newDynamicLibrary:computeDescriptor:error:
newDynamicLibrary:error:
newDynamicLibraryWithDescriptor:error:
newDynamicLibraryWithURL:options:error:
newEvent
newFence
newFenceWithAllocator:
newFragmentIntersectionFunctionTableWithDescriptor:
newFragmentShaderDebugInfo
newFragmentVariantWithCompilerOutput:pipelineStatisticsOutput:
newFunctionVariantWithCompilerOutput:functionType:
newFunctionWithGLCoreIR:functionType:
newFunctionWithGLCoreIR:inputsDescription:functionType:
newFunctionWithGLESIR:functionType:
newFunctionWithGLESIR:inputsDescription:functionType:
newFunctionWithGLIR:functionType:
newFunctionWithGLIR:inputsDescription:functionType:
newFunctionWithIR:
newFunctionWithName:constantValues:error:
newHeapWithDescriptor:
newHeapWithDescriptor:allocator:
newIOSurfaceTextureWithDescriptor:plane:allocator:
newIndirectArgumentBufferLayoutWithStructType:
newIndirectArgumentEncoderWithArguments:
newIndirectArgumentEncoderWithLayout:
newIndirectCommandBufferWithDescriptor:maxCount:options:
newIndirectComputeCommandEncoderWithBuffer:
newIndirectRenderCommandEncoderWithBuffer:
newIntersectionFunctionTableWithDescriptor:
newIntersectionFunctionTableWithDescriptor:stage:
newLateEvalEvent
newLibraryWithCIFilters:imageFilterFunctionInfo:error:
newLibraryWithCIFiltersForComputePipeline:imageFilterFunctionInfo:error:
newLibraryWithDAG:functions:error:
newLibraryWithData:error:
newLibraryWithDescriptor:completionHandler:
newLibraryWithDescriptorSPI:error:
newLibraryWithFile:error:
newLibraryWithGraphs:functions:error:
newLibraryWithGraphsSPI:functions:error:
newLibraryWithImageFilterFunctionsSPI:imageFilterFunctionInfo:error:
newLibraryWithSource:options:completionHandler:
newLibraryWithSource:options:error:
newLibraryWithStitchedDescriptor:completionHandler:
newLibraryWithStitchedDescriptor:error:
newLibraryWithStitchedDescriptorSPI:error:
newLibraryWithURL:error:
newLinearTextureWithDescriptor:offset:bytesPerRow:bytesPerImage:
newMeshIntersectionFunctionTableWithDescriptor:
newObjectIntersectionFunctionTableWithDescriptor:
newPipelineLibraryWithFilePath:error:
newProfileWithExecutionSize:
newRasterizationRateMapWithDescriptor:
newRemoteBufferViewForDevice:
newRemoteTextureViewForDevice:
newRenderPipelineDescriptorWithSerializedData:deserializationContext:
newRenderPipelineStateWithAdditionalBinaryFunctions:error:
newRenderPipelineStateWithAdditionalBinaryFunctions:fragmentAdditionalBinaryFunctions:error:
newRenderPipelineStateWithDescriptor:completionHandler:
newRenderPipelineStateWithDescriptor:error:
newRenderPipelineStateWithDescriptor:options:reflection:error:
newRenderPipelineStateWithMeshDescriptor:completionHandler:
newRenderPipelineStateWithMeshDescriptor:error:
newRenderPipelineStateWithMeshDescriptor:options:completionHandler:
newRenderPipelineStateWithMeshDescriptor:options:reflection:error:
newRenderPipelineStateWithSerializedDescriptor:allocator:
newRenderPipelineStateWithTileDescriptor:completionHandler:
newRenderPipelineStateWithTileDescriptor:error:
newRenderPipelineStateWithTileDescriptor:options:completionHandler:
newRenderPipelineStateWithTileDescriptor:options:reflection:error:
newRenderPipelineWithDescriptor:vertexVariant:fragmentVariant:errorMessage:
newResourceGroupFromResources:count:
newSamplerStateWithDescriptor:
newSharedEvent
newSharedEventHandle
newSharedEventWithAllocator:
newSharedEventWithHandle:
newSharedEventWithHandle:allocator:
newSharedEventWithMachPort:
newSharedEventWithMachPort:allocator:
newStructTypeWithSerializedData:
newTextureLayoutWithDescriptor:isHeapOrBufferBacked:
newTextureViewWithPixelFormat:
newTextureViewWithPixelFormat:baseTexture:allocator:
newTextureViewWithPixelFormat:resourceIndex:
newTextureViewWithPixelFormat:textureType:levels:slices:
newTextureViewWithPixelFormat:textureType:levels:slices:baseTexture:allocator:
newTextureViewWithPixelFormat:textureType:levels:slices:resourceIndex:
newTextureViewWithPixelFormat:textureType:levels:slices:swizzle:
newTextureViewWithPixelFormat:textureType:levels:slices:swizzle:baseTexture:allocator:
newTextureViewWithPixelFormat:textureType:levels:slices:swizzle:resourceIndex:
newTextureViewWithPixelFormatInternal:isInternalTextureView:
newTextureWithBuffer:descriptor:offset:bytesPerRow:allocator:
newTextureWithBytesNoCopy:length:descriptor:deallocator:
newTextureWithDescriptor:
newTextureWithDescriptor:heap:offset:useOffset:allocator:
newTextureWithDescriptor:iosurface:plane:
newTextureWithDescriptor:offset:
newTextureWithDescriptor:offset:bytesPerRow:
newTextureWithDescriptor:offset:useOffset:
newTileIntersectionFunctionTableWithDescriptor:
newTileRenderPipelineStateWithAdditionalBinaryFunctions:error:
newTiledTextureWithBytesNoCopy:length:deallocator:descriptor:offset:bytesPerRow:
newTiledTextureWithBytesNoCopy:length:descriptor:offset:bytesPerRow:
newVertexIntersectionFunctionTableWithDescriptor:
newVertexShaderDebugInfo
newVertexVariantWithCompilerOutput:pipelineStatisticsOutput:
newVisibleFunctionTableFromFragmentStageWithDescriptor:
newVisibleFunctionTableFromMeshStageWithDescriptor:
newVisibleFunctionTableFromObjectStageWithDescriptor:
newVisibleFunctionTableFromTileStageWithDescriptor:
newVisibleFunctionTableFromVertexStageWithDescriptor:
newVisibleFunctionTableWithDescriptor:
newVisibleFunctionTableWithDescriptor:stage:
notifyListener:atValue:block:
notifyListenerForEventRef:atValue:allocator:
null
numFaces
numberWithUnsignedInteger:
numberWithUnsignedLongLong:
objectDebugInstrumentationData
objectFunctionHandleWithFunction:
objectThreadExecutionWidth
parallelRenderCommandEncoderWithDescriptor:
parentGPUAddress
parentGPUSize
parentRelativeLevel
parentRelativeSlice
parentTexture
patchControlPointCount
patchType
payloadFromReplyData:replyDataSize:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
pipelineBinaries
pipelineCacheStats
pipelineFlagsWithVertexVariant:fragmentVariant:
pipelinePerformanceStatisticsWithComputeVariant:compileTimeOutput:
pipelinePerformanceStatisticsWithVertexVariant:fragmentVariant:vertexCompileTimeOutput:fragmentCompileTimeOutput:
pipelineRef
pixelFormat
placementHeapSupported
pluginData
popDebugGroup
presentDrawable:
presentDrawable:atTime:
presentDrawable:options:
productName
profilingEnabled
profilingResults
programmableSamplePositionsSupported
protectionOptions
qosLevel
quadDataSharingSupported
raise:format:
rasterOrderGroupsSupported
readWriteTextureSupport
readsDepth
readsStencil
recommendedMaxWorkingSetSize
registerCommandBuffer:
registerEventNotification:listener:event:value:block:
registerViewTexture:baseTextureView:
registryID
releaseArgumentEncoderRef:
releaseBufferRef:
releaseCommandBufferRef:
releaseCommandQueueRef:
releaseEventRef:
releaseFenceRef:
releaseRenderPipelineStateRef:
releaseTextureRef:
removable
removeAllDebugMarkers
renderCommandEncoderWithDescriptor:
replaceRegion:mipmapLevel:slice:dataSize:bytesPerRow:bytesPerImage:texture:allocator:
replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:
replaceRegion:mipmapLevel:withBytes:bytesPerRow:
reportLeaks
requestCounters:
requestCounters:withIndex:
requiresRaytracingEmulation
reserveGPUAddressRange:
reserveResourceIndicesForResourceType:indices:indexCount:
resourceConnection
resourceIndex
resourceListPool
resourcePatchingTypeForResourceType:
resourceStateCommandEncoder
resourceStateCommandEncoderWithDescriptor:
respondsToSelector:
responsibleProcess
retain
retainCount
retainedLabel
retainedReferences
returnBufferStorage:
returnCommandBufferStorage:
returnStorage:
rootResource
rotation
sampleCount
sampleTimestamps:gpuTimestamp:
sampledComputeCommandEncoderWithDescriptor:programInfoBuffer:capacity:
sampledComputeCommandEncoderWithDispatchType:programInfoBuffer:capacity:
sampledComputeCommandEncoderWithProgramInfoBuffer:capacity:
sampledRenderCommandEncoderWithDescriptor:programInfoBuffer:capacity:
samplerRef
segmentCount
self
semaphore
serializeComputePipelineDescriptor:
serializeRenderPipelineDescriptor:
serializeStructType:
serializeStructType:version:
serializer
serializerResourceRef
setAccelerationStructure:atIndex:
setArgumentBuffer:offset:
setArgumentBuffer:startOffset:arrayElement:
setBackgroundGPUPriority:
setBackgroundGPUPriority:offset:
setBackgroundTrackingPID:
setBuffer:offset:atIndex:
setBuffers:offsets:withRange:
setBytes:length:atIndex:
setCommandBufferErrorOptions:
setCompilerProcessesCount:
setCompletionQueue:
setComputeFunction:
setComputePipelineState:
setComputePipelineState:atIndex:
setComputePipelineStates:withRange:
setDispatchType:
setErrorOptions:
setExecutionEnabled:
setFragmentFunction:
setGPUAssertionsEnabled:
setGPUPriority:offset:
setHeapOffset:
setIndirectArgumentBufferDecodingData:
setIndirectCommandBuffer:atIndex:
setIndirectCommandBuffers:withRange:
setIntersectionFunctionTable:atBufferIndex:
setIntersectionFunctionTable:atIndex:
setIntersectionFunctionTables:withBufferRange:
setIntersectionFunctionTables:withRange:
setLabel:
setLogs:
setMaxTotalThreadsPerThreadgroup:
setMetalAssertionsEnabled:
setObject:forKeyedSubscript:
setOwnerWithIdentity:
setParentGPUAddress:
setParentGPUSize:
setPluginData:
setPrimitiveRestartEnabled:
setProfilingEnabled:
setProtectionOptions:
setPurgeableState:
setRawBVHBuilderPtr:
setReflectionSerializationVersion:
setRenderPipelineStates:withRange:
setResourceGroups:count:
setResourcesPurgeableState:newState:oldState:count:
setResponsibleProcess:
setSamplerState:atIndex:
setSamplerStates:withRange:
setShaderDebugInfoCaching:
setSignaledValue:
setSkipRender:
setSplitHandler:
setStatLocations:
setStaticThreadgroupMemoryLength:
setSubmissionQueue:
setSupportIndirectCommandBuffers:
setTexture:atIndex:
setTextures:withRange:
setThreadExecutionWidth:
setUsage:
setVertexFunction:
setVisibleFunctionTable:atBufferIndex:
setVisibleFunctionTable:atIndex:
setVisibleFunctionTables:withBufferRange:
setVisibleFunctionTables:withRange:
setupMPSFunctionTable:
shaderDebugInfoCaching
shareable
sharedEventSetSignaledValue:eventRef:allocator:
sharedEventSignaledValueForEventRef:allocator:
sharedEventWaitSignaledValue:timeoutMS:eventRef:allocator:
sharedMemorySize
signaledValue
simulatorHostFeatureProfile
singleFPConfig
size
sizeInfoForHeap:allocator:
skipRender
sparseSurfaceDefaultValue
sparseTexturesSupport
sparseTileSizeInBytes
sparseTileSizeInBytesForSparsePageSize:
sparseTileSizeWithTextureType:pixelFormat:sampleCount:
sparseTileSizeWithTextureType:pixelFormat:sampleCount:sparsePageSize:
split
splitHandler
stageInputAttributes
startCollectingPipelineDescriptors
startCollectingPipelineDescriptorsUsingPrefixForNames:
staticThreadgroupMemoryLength
status
storageMode
storageSize
stringByPaddingToLength:withString:startingAtIndex:
stringWithFormat:
stringWithUTF8String:
subdivideCounterList:
submitCommandBuffers:count:
superclass
supportIndirectCommandBuffers
supportPriorityBand
supports2DLinearTexArraySPI
supports32BitFloatFiltering
supports32BitMSAA
supports32bpcMSAATextures
supports3DASTCTextures
supports3DBCTextures
supportsASTCHDRTextureCompression
supportsASTCTextureCompression
supportsAlphaYUVFormats
supportsAnisoSampleFix
supportsArgumentBuffersTier2
supportsArrayOfSamplers
supportsArrayOfTextures
supportsAtomicUlongVoidMinMax
supportsBCTextureCompression
supportsBaseVertexInstanceDrawing
supportsBfloat16Format
supportsBinaryArchives
supportsBinaryLibraries
supportsBlackOrWhiteSamplerBorderColors
supportsBufferBoundsChecking
supportsBufferPrefetchStatistics
supportsBufferWithIOSurface
supportsBufferlessClientStorageTexture
supportsCMPIndirectCommandBuffers
supportsCombinedMSAAStoreAndResolveAction
supportsCommandBufferJump
supportsCompressedTextureViewSPI
supportsComputeCompressedTextureWrite
supportsComputeMemoryBarrier
supportsConcurrentComputeDispatch
supportsCounterSampling:
supportsCountingOcclusionQuery
supportsCustomBorderColor
supportsDeadlineProfile
supportsDepthClipMode
supportsDepthClipModeClampExtended
supportsDevicePartitioning
supportsDynamicControlPointCount
supportsDynamicLibraries
supportsExplicitVisibilityGroups
supportsExtendedVertexFormats
supportsExtendedXR10Formats
supportsExtendedYUVFormats
supportsFP32TessFactors
supportsFastMathInfNaNPropagation
supportsFeatureSet:
supportsFillTexture
supportsFixedLinePointFillDepthGradient
supportsFloat16BCubicFiltering
supportsFloat16InfNanFiltering
supportsForceSeamsOnCubemaps
supportsForkJoin
supportsFragmentBufferWrites
supportsFragmentOnlyEncoders
supportsFunctionPointers
supportsFunctionPointersFromMesh
supportsFunctionPointersFromRender
supportsGFXIndirectCommandBuffers
supportsGPUStatistics
supportsGlobalVariableRelocation
supportsGlobalVariableRelocationCompute
supportsGlobalVariableRelocationRender
supportsHeapAccelerationStructureAllocation
supportsIABHashForTools
supportsImageBlockSampleCoverageControl
supportsImageBlocks
supportsIndirectStageInRegion
supportsIndirectTessellation
supportsIndirectTextures
supportsIndirectWritableTextures
supportsInt64
supportsInterchangeTiled
supportsLateEvalEvent
supportsLayeredRendering
supportsLimitedYUVFormats
supportsLinearTexture2DArray
supportsLinearTextureFromSharedBuffer
supportsLossyCompression
supportsMSAADepthResolve
supportsMSAADepthResolveFilter
supportsMSAAStencilResolve
supportsMSAAStencilResolveFilter
supportsMemoryOrderAtomics
supportsMeshShaders
supportsMeshShadersInICB
supportsMipLevelsSmallerThanBlockSize
supportsMirrorClampToEdgeSamplerMode
supportsMutableTier1ArgumentBuffers
supportsNativeHardwareFP16
supportsNonPrivateDepthStencilTextures
supportsNonPrivateMSAATextures
supportsNonSquareTileShaders
supportsNonUniformThreadgroupSize
supportsNonZeroTextureWriteLOD
supportsNorm16BCubicFiltering
supportsOpenCLTextureWriteSwizzles
supportsPacked32TextureBufferWrites
supportsPipelineLibraries
supportsPlacementHeaps
supportsPostDepthCoverage
supportsPrimitiveMotionBlur
supportsPrimitiveRestartOverride
supportsPrimitiveType:
supportsProgrammableBlending
supportsProgrammableSamplePositions
supportsPublicXR10Formats
supportsPullModelInterpolation
supportsQuadGroup
supportsQuadReduction
supportsQuadShufflesAndBroadcast
supportsQueryTextureLOD
supportsRGBA10A2Gamma
supportsRTZRounding
supportsRasterOrderGroups
supportsRasterOrderGroupsColorAttachment
supportsRasterizationRateMapWithLayerCount:
supportsRayTracingAccelerationStructureCPUDeserialization
supportsRayTracingBuffersFromTables
supportsRayTracingExtendedVertexFormats
supportsRayTracingICBs
supportsRayTracingPerPrimitiveData
supportsRaytracing
supportsRaytracingFromRender
supportsReadWriteBufferArguments
supportsReadWriteTextureArguments
supportsReadWriteTextureArgumentsTier2
supportsReadWriteTextureCubeArguments
supportsRelaxedTextureViewRequirements
supportsRenderDynamicLibraries
supportsRenderMemoryBarrier
supportsRenderPassWithoutRenderTarget
supportsRenderTargetTextureRotation
supportsRenderTextureWrites
supportsRenderToLinearTextures
supportsSIMDGroup
supportsSIMDGroupMatrix
supportsSIMDReduction
supportsSIMDShuffleAndFill
supportsSIMDShufflesAndBroadcast
supportsSRGBwrites
supportsSampleCount:
supportsSamplerAddressModeClampToHalfBorder
supportsSamplerCompareFunction
supportsSecureCoding
supportsSeparateDepthStencil
supportsSeparateVisibilityAndShadingRate
supportsSetThreadgroupPackingDisabled
supportsShaderBarycentricCoordinates
supportsShaderLODAverage
supportsShaderMinLODClamp
supportsSharedFunctionTables
supportsSharedStorageHeapResources
supportsSharedStorageTextures
supportsSharedTextureHandles
supportsSparseDepthAttachments
supportsSparseHeaps
supportsSparseTextures
supportsStackOverflowErrorCode
supportsStatefulDynamicLibraries
supportsStencilFeedback
supportsTLS
supportsTessellation
supportsTexture2DMultisampleArray
supportsTextureCubeArray
supportsTextureSampleCount:
supportsTextureSwizzle
supportsTextureWriteRoundingMode:
supportsTileShaders
supportsUnalignedVertexFetch
supportsVariableRateRasterization
supportsVertexAmplification
supportsVertexAmplificationCount:
supportsYCBCRFormats
supportsYCBCRFormats12
supportsYCBCRFormatsPQ
supportsYCBCRFormatsXR
supportsYCBCRPackedFormats12
supportsYCBCRPackedFormatsPQ
supportsYCBCRPackedFormatsXR
swizzleKey
tail
targetDeviceArchitecture
targetDeviceInfo
textureRef
textureType
textureWriteRoundingMode
threadExecutionWidth
threadgroupSizeMatchesTileSize
tileDebugInstrumentationData
type
unfilteredResourceOptions
uniqueIdentifier
uniqueIdentifierForComputePipelineState:allocator:
uniqueIdentifierForRenderPipelineState:allocator:
uniqueIdentifierForSamplerState:allocator:
uniqueIdentifierForTexture:allocator:
unloadShaderCaches
unmapShaderSampleBuffer
usage
usedSize
userDictionary
validateDynamicLibrary:state:error:
validateDynamicLibraryDescriptor:error:
validateDynamicLibraryURL:error:
validateWithDevice:
vendorName
vertexAttributes
vertexDebugInstrumentationData
vertexFunction
vertexFunctionHandleWithFunction:
vertexFunctionKeyWithRenderPipelineDescriptor:options:nextStageVariant:vertexKeySize:
waitSignaledValue:timeoutMS:
waitUntilComplete
waitUntilCompleted
waitUntilScheduled
width
wrapComputeState:descriptor:
wrapRenderState:descriptor:
writesDepth
writesStencil
zone
@36@0:8@16I24^{?=Ssi}28
v16@0:8
B16@0:8
Q16@0:8
Q24@0:8Q16
I16@0:8
@"MTLSimDevice"
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16Q24
v40@0:8@16Q24Q32
v48@0:8r^@16r^Q24{_NSRange=QQ}32
v40@0:8r^@16{_NSRange=QQ}24
^v24@0:8Q16
@24@0:8Q16
v24@0:8@16
v32@0:8@"<MTLBuffer>"16Q24
v40@0:8@"<MTLBuffer>"16Q24Q32
v32@0:8@"<MTLTexture>"16Q24
v32@0:8@"<MTLSamplerState>"16Q24
v32@0:8@"<MTLRenderPipelineState>"16Q24
v32@0:8@"<MTLComputePipelineState>"16Q24
v32@0:8@"<MTLIndirectCommandBuffer>"16Q24
v32@0:8@"<MTLAccelerationStructure>"16Q24
@"<MTLArgumentEncoder>"24@0:8Q16
v32@0:8@"<MTLVisibleFunctionTable>"16Q24
v32@0:8@"<MTLIntersectionFunctionTable>"16Q24
@"<MTLDevice>"16@0:8
v24@0:8@"NSString"16
@"_MTLIndirectArgumentBufferLayout"16@0:8
@44@0:8@16I24@28^{?=SI}36
@"MTLSimIndirectArgumentBufferLayout"
@"MTLSimBuffer"
*24@0:8Q16
@"NSObject<OS_dispatch_data>"
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@36@0:8I16Q20@28
v40@0:8@16Q24@?32
v24@0:8Q16
v40@0:8@"MTLSharedEventListener"16Q24@?<v@?@"<MTLSharedEvent>"Q>32
@"MTLSharedEventHandle"16@0:8
@28@0:8@16I24
B32@0:8Q16Q24
{?=QQ}24@0:8@16
{?=QQ}32@0:8Q16Q24
@32@0:8Q16Q24
@40@0:8r^v16Q24Q32
@48@0:8^v16Q24Q32@?40
@40@0:8@16^{__IOSurface=}24Q32
@32@0:8@16^@24
@40@0:8@16@24^@32
v40@0:8@16@24@?32
v32@0:8@16@?24
@48@0:8@16Q24^@32^@40
B24@0:8Q16
B24@0:8q16
v32@0:8^{?=ff}16Q24
@40@0:8@16Q24Q32
{?=QQQ}40@0:8Q16Q24Q32
Q24@0:8q16
{?=QQQ}48@0:8Q16Q24Q32q40
v32@0:8^Q16^Q24
{?=QQQ}24@0:8@16
{?=QQ}24@0:8Q16
{?=QQQ}16@0:8
v72@0:8r^{?={?=QQQ}{?=QQQ}}16^{?={?=QQQ}{?=QQQ}}24{?=QQQ}32Q56Q64
v64@0:8r^{?={?=QQQ}{?=QQQ}}16^{?={?=QQQ}{?=QQQ}}24{?=QQQ}32Q56
@"<MTLCommandQueue>"16@0:8
@"<MTLCommandQueue>"24@0:8Q16
{?=QQ}24@0:8@"MTLTextureDescriptor"16
@"<MTLHeap>"24@0:8@"MTLHeapDescriptor"16
@"<MTLBuffer>"32@0:8Q16Q24
@"<MTLBuffer>"40@0:8r^v16Q24Q32
@"<MTLBuffer>"48@0:8^v16Q24Q32@?<v@?^vQ>40
@"<MTLDepthStencilState>"24@0:8@"MTLDepthStencilDescriptor"16
@"<MTLTexture>"24@0:8@"MTLTextureDescriptor"16
@"<MTLTexture>"40@0:8@"MTLTextureDescriptor"16^{__IOSurface=}24Q32
@"<MTLSamplerState>"24@0:8@"MTLSamplerDescriptor"16
@"<MTLLibrary>"16@0:8
@"<MTLLibrary>"32@0:8@"NSBundle"16^@24
@"<MTLLibrary>"32@0:8@"NSString"16^@24
@"<MTLLibrary>"32@0:8@"NSURL"16^@24
@"<MTLLibrary>"32@0:8@"NSObject<OS_dispatch_data>"16^@24
@"<MTLLibrary>"40@0:8@"NSString"16@"MTLCompileOptions"24^@32
v40@0:8@"NSString"16@"MTLCompileOptions"24@?<v@?@"<MTLLibrary>"@"NSError">32
@"<MTLLibrary>"32@0:8@"MTLStitchedLibraryDescriptor"16^@24
v32@0:8@"MTLStitchedLibraryDescriptor"16@?<v@?@"<MTLLibrary>"@"NSError">24
@"<MTLRenderPipelineState>"32@0:8@"MTLRenderPipelineDescriptor"16^@24
@"<MTLRenderPipelineState>"48@0:8@"MTLRenderPipelineDescriptor"16Q24^@32^@40
v32@0:8@"MTLRenderPipelineDescriptor"16@?<v@?@"<MTLRenderPipelineState>"@"NSError">24
v40@0:8@"MTLRenderPipelineDescriptor"16Q24@?<v@?@"<MTLRenderPipelineState>"@"MTLRenderPipelineReflection"@"NSError">32
@"<MTLComputePipelineState>"32@0:8@"<MTLFunction>"16^@24
@"<MTLComputePipelineState>"48@0:8@"<MTLFunction>"16Q24^@32^@40
v32@0:8@"<MTLFunction>"16@?<v@?@"<MTLComputePipelineState>"@"NSError">24
v40@0:8@"<MTLFunction>"16Q24@?<v@?@"<MTLComputePipelineState>"@"MTLComputePipelineReflection"@"NSError">32
@"<MTLComputePipelineState>"48@0:8@"MTLComputePipelineDescriptor"16Q24^@32^@40
v40@0:8@"MTLComputePipelineDescriptor"16Q24@?<v@?@"<MTLComputePipelineState>"@"MTLComputePipelineReflection"@"NSError">32
@"<MTLFence>"16@0:8
@"<MTLRenderPipelineState>"48@0:8@"MTLTileRenderPipelineDescriptor"16Q24^@32^@40
v40@0:8@"MTLTileRenderPipelineDescriptor"16Q24@?<v@?@"<MTLRenderPipelineState>"@"MTLRenderPipelineReflection"@"NSError">32
@"<MTLRenderPipelineState>"48@0:8@"MTLMeshRenderPipelineDescriptor"16Q24^@32^@40
v40@0:8@"MTLMeshRenderPipelineDescriptor"16Q24@?<v@?@"<MTLRenderPipelineState>"@"MTLRenderPipelineReflection"@"NSError">32
@"<MTLArgumentEncoder>"24@0:8@"NSArray"16
@"<MTLRasterizationRateMap>"24@0:8@"MTLRasterizationRateMapDescriptor"16
@"<MTLIndirectCommandBuffer>"40@0:8@"MTLIndirectCommandBufferDescriptor"16Q24Q32
@"<MTLEvent>"16@0:8
@"<MTLSharedEvent>"16@0:8
@"<MTLSharedEvent>"24@0:8@"MTLSharedEventHandle"16
@"<MTLCounterSampleBuffer>"32@0:8@"MTLCounterSampleBufferDescriptor"16^@24
@"<MTLArgumentEncoder>"24@0:8@"<MTLBufferBinding>"16
@"<MTLDynamicLibrary>"32@0:8@"<MTLLibrary>"16^@24
@"<MTLDynamicLibrary>"32@0:8@"NSURL"16^@24
@"<MTLBinaryArchive>"32@0:8@"MTLBinaryArchiveDescriptor"16^@24
{?=QQQ}24@0:8@"MTLAccelerationStructureDescriptor"16
@"<MTLAccelerationStructure>"24@0:8Q16
@"<MTLAccelerationStructure>"24@0:8@"MTLAccelerationStructureDescriptor"16
{?=QQ}24@0:8@"MTLAccelerationStructureDescriptor"16
@"NSArray"16@0:8
v20@0:8B16
@24@0:8^{__IOSurface=}16
{?=II}16@0:8
@20@0:8I16
B24@0:8{?=II}16
@32@0:8@16Q24
@32@0:8^v16@24
@40@0:8^v16@24@32
@32@0:8Q16@24
v40@0:8@16r^v24@32
v48@0:8@16r^v24@32@40
B32@0:8@16^@24
@40@0:8@16Q24^@32
@48@0:8@16@24Q32^@40
B36@0:8@16B24^@28
@40@0:8Q16@24^@32
^{MTLCompilerConnectionManager=}20@0:8i16
B20@0:8i16
r^{MTLTargetDeviceArch=QI*}16@0:8
r^{?=IIIIIIIIIIIIIIIIIIIIIIIIIIffIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIQ}16@0:8
f16@0:8
{IndirectArgumentBufferCapabilities=b1b1b1b29}16@0:8
q16@0:8
v24@0:8^{MPSFunctionTable=}16
v40@0:8Q16^Q24Q32
B32@0:8{_NSRange=QQ}16
@40@0:8Q16Q24Q32
@48@0:8r^v16Q24Q32Q40
@56@0:8^v16Q24Q32Q40@?48
B40@0:8^{?=III}16Q24Q32
@32@0:8^v16Q24
@40@0:8^v16@24Q32
^v16@0:8
^{os_unfair_lock_s=I}16@0:8
@40@0:8@16r^{?=BQ^{?}}24^@32
@32@0:8@16@24
@48@0:8^v16Q24@32@?40
@28@0:8@16B24
{?=QQQ}48@0:8q16Q24Q32Q40
v48@0:8@16@24@32^@40
v40@0:8@16@24^@32
@32@0:8r^@16Q24
v32@0:8@16@24
@"MTLArchitecture"24@0:8@"NSArray"16
v24@0:8@"<MTLDeviceSPI>"16
@"<MTLBuffer>"24@0:8^{__IOSurface=}16
B24@0:8@"NSString"16
@"<MTLCommandQueue>"24@0:8@"MTLCommandQueueDescriptor"16
@"_MTLIndirectArgumentBufferLayout"24@0:8@"MTLStructType"16
@"<MTLArgumentEncoder>"24@0:8@"_MTLIndirectArgumentBufferLayout"16
@"<MTLBuffer>"40@0:8@"MTLIndirectCommandBufferDescriptor"16Q24Q32
@"<MTLIndirectRenderCommandEncoder>"24@0:8@"<MTLBuffer>"16
@"<MTLIndirectComputeCommandEncoder>"24@0:8@"<MTLBuffer>"16
@"<MTLSharedEvent>"20@0:8I16
@"<MTLAccelerationStructure>"32@0:8Q16Q24
@"<MTLAccelerationStructure>"32@0:8@"<MTLBuffer>"16Q24
@"<MTLAccelerationStructure>"40@0:8@"<MTLBuffer>"16Q24Q32
@"<MTLAccelerationStructure>"32@0:8^v16@"MTLAccelerationStructureDescriptor"24
@"<MTLAccelerationStructure>"40@0:8^v16@"NSArray"24@"MTLAccelerationStructureDescriptor"32
@"<MTLAccelerationStructure>"32@0:8Q16@"MTLAccelerationStructureAllocationDescriptor"24
v40@0:8@"<MTLAccelerationStructure>"16r^v24@"MTLAccelerationStructureDescriptor"32
v48@0:8@"<MTLAccelerationStructure>"16r^v24@"NSArray"32@"MTLAccelerationStructureDescriptor"40
@"<MTLDynamicLibrary>"40@0:8@"<MTLLibrary>"16@"MTLComputePipelineDescriptor"24^@32
B32@0:8@"MTLDynamicLibraryDescriptorSPI"16^@24
@"<MTLDynamicLibrary>"32@0:8@"MTLDynamicLibraryDescriptorSPI"16^@24
@"<MTLDynamicLibrary>"40@0:8@"NSURL"16Q24^@32
@"NSArray"32@0:8@"MTLComputePipelineDescriptor"16^@24
@"NSArray"40@0:8@"MTLComputePipelineDescriptor"16Q24^@32
@"NSArray"40@0:8@"MTLFunction"16@"NSArray"24^@32
@"NSArray"48@0:8@"MTLFunction"16@"NSArray"24Q32^@40
B36@0:8@"<MTLLibrary>"16B24^@28
B32@0:8@"NSURL"16^@24
@"<MTLBinaryArchive>"40@0:8Q16@"NSURL"24^@32
@"<MTLVisibleFunctionTable>"24@0:8@"MTLVisibleFunctionTableDescriptor"16
@"<MTLIntersectionFunctionTable>"24@0:8@"MTLIntersectionFunctionTableDescriptor"16
@"<MTLRenderPipelineState>"32@0:8@"MTLMeshRenderPipelineDescriptor"16^@24
v32@0:8@"MTLMeshRenderPipelineDescriptor"16@?<v@?@"<MTLRenderPipelineState>"@"NSError">24
@"<MTLDeadlineProfile>"24@0:8Q16
@"MTLTargetDeviceArchitecture"16@0:8
@"MTLArchitecture"16@0:8
@"MTLGPUBVHBuilder"16@0:8
@"NSDictionary"16@0:8
v24@0:8@"NSDictionary"16
@"NSObject<OS_dispatch_data>"16@0:8
v24@0:8@"NSObject<OS_dispatch_data>"16
@"<MTLBuffer>"40@0:8Q16Q24Q32
@"<MTLBuffer>"48@0:8r^v16Q24Q32Q40
@"<MTLBuffer>"56@0:8^v16Q24Q32Q40@?<v@?^vQ>48
@"<MTLBuffer>"24@0:8@"MTLBufferDescriptor"16
@"<MTLLateEvalEvent>"16@0:8
@"<MTLComputePipelineState>"32@0:8@"MTLComputePipelineDescriptor"16^@24
v32@0:8@"MTLComputePipelineDescriptor"16@?<v@?@"<MTLComputePipelineState>"@"NSError">24
@"<MTLRenderPipelineState>"32@0:8@"MTLTileRenderPipelineDescriptor"16^@24
v32@0:8@"MTLTileRenderPipelineDescriptor"16@?<v@?@"<MTLRenderPipelineState>"@"NSError">24
@"<MTLFunction>"32@0:8^v16Q24
@"<MTLFunction>"40@0:8^v16@"NSObject<OS_dispatch_data>"24Q32
v24@0:8@"MTLGPUBVHBuilder"16
@"<MTLIndirectArgumentEncoder>"24@0:8@"NSArray"16
@"<MTLComputePipelineState>"40@0:8@"NSArray"16r^{?=BQ^{?}}24^@32
@"<MTLLibrary>"40@0:8@"NSString"16@"NSArray"24^@32
@"<MTLLibrary>"40@0:8@"NSArray"16@"NSArray"24^@32
@"<MTLLibrary>"32@0:8@"MTLStitchedLibraryDescriptorSPI"16^@24
@"NSString"24@0:8@"NSArray"16
@"<MTLLibrary>"40@0:8@"NSArray"16r^{?=BQ^{?}}24^@32
@"<MTLPipelineLibrarySPI>"32@0:8@"NSString"16^@24
@"NSData"16@0:8
@"NSObject<OS_dispatch_data>"24@0:8@"MTLRenderPipelineDescriptor"16
@"NSObject<OS_dispatch_data>"24@0:8@"MTLComputePipelineDescriptor"16
@"MTLRenderPipelineDescriptor"32@0:8@"NSObject<OS_dispatch_data>"16@"<MTLDeserializationContext>"24
@"MTLComputePipelineDescriptor"32@0:8@"NSObject<OS_dispatch_data>"16@"<MTLDeserializationContext>"24
@"NSObject<OS_dispatch_data>"24@0:8@"MTLStructType"16
@"NSObject<OS_dispatch_data>"28@0:8@"MTLStructType"16I24
@"MTLStructType"24@0:8@"NSObject<OS_dispatch_data>"16
@"<MTLTexture>"48@0:8^v16Q24@"MTLTextureDescriptor"32@?<v@?^vQ>40
@"<MTLTextureLayout>"28@0:8@"MTLTextureDescriptor"16B24
@"<MTLIndirectArgumentEncoder>"24@0:8@"_MTLIndirectArgumentBufferLayout"16
v48@0:8@"<MTLFunction>"16@"MTLFunctionDescriptor"24@"<MTLBinaryArchive>"32^@40
v40@0:8@"<MTLFunction>"16@"MTLFunctionDescriptor"24^@32
v40@0:8@"<MTLFunction>"16@"MTLFunctionDescriptor"24@?<v@?@"NSError">32
@"<MTLResourceGroupSPI>"32@0:8r^@16Q24
v32@0:8@"NSObject<OS_dispatch_data>"16@"NSMutableDictionary"24
I24@0:8@16
v20@0:8I16
@52@0:8Q16Q24^v32B40@?44
v52@0:8I16@20@28Q36@?44
^v48@0:8@16Q24@32^Q40
v32@0:8^v16Q24
@48@0:8@16@24@32^@40
{?=b1b1b1b1b1b1b1b1b1b55}32@0:8@16@24
@48@0:8@16@24@32@40
@64@0:8^v16Q24@?32@40Q48Q56
@56@0:8^v16Q24@32Q40Q48
i16@0:8
B44@0:8^@16Q24^Q32i40
{MTLSimConnection="_connection"@"NSObject<OS_xpc_object>""_serialQueue"@"NSObject<OS_dispatch_queue>"}
@"MTLSerializer"
@"NSObject<OS_dispatch_queue>"
{unordered_map<unsigned int, MTLSimCommandBuffer *, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<const unsigned int, MTLSimCommandBuffer *>>>="__table_"{__hash_table<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>, std::allocator<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, MTLSimCommandBuffer *>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>>="__value_"f}}}
@"MTLResourceListPool"
@"<MTLDeviceSPI>"
{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}
{?="width"Q"height"Q"depth"Q}
@32@0:8Q16^@24
@"<MTLArgumentEncoder>"32@0:8Q16^@24
@36@0:8@16Q24I32
@"<MTLDevice>"
@"NSString"
@"NSArray"
@"NSDictionary"
@"MTLSimFunction"
@"<MTLHeap>"16@0:8
B32@0:8r^@16Q24
v20@0:8i16
i20@0:8I16
B24@0:8@"<MTLResource>"16
v32@0:8{_NSRange=QQ}16
v40@0:8@16{_NSRange=QQ}24
@"<MTLTexture>"40@0:8@"MTLTextureDescriptor"16Q24Q32
v40@0:8@"NSString"16{_NSRange=QQ}24
@48@0:8@16Q24Q32Q40
^{__IOSurface=}16@0:8
@"<MTLTexture>"48@0:8@"MTLTextureDescriptor"16Q24Q32Q40
@76@0:8@16I24^v28^v36Q44Q52@60@?68
^{__IOSurface=}
^{BufferStorageEntry=@Q^{BufferStorageEntry}}16@0:8
v24@0:8^{BufferStorageEntry=@Q^{BufferStorageEntry}}16
^{BufferStorageEntry=@Q^{BufferStorageEntry}}
@"NSObject<OS_dispatch_semaphore>"
@"<MTLTexture>"32@0:8@"MTLTextureDescriptor"16Q24
@"<MTLAccelerationStructure>"32@0:8@"MTLAccelerationStructureDescriptor"16Q24
@"NSString"24@0:8Q16
@"<MTLAccelerationStructure>"40@0:8Q16Q24Q32
@36@0:8@16@24I32
@44@0:8Q16Q24Q32B40
@36@0:8@16Q24B32
v24@0:8@?16
v32@0:8@16d24
d16@0:8
v24@0:8@?<v@?@"<MTLCommandBuffer>">16
v24@0:8@"<MTLDrawable>"16
v32@0:8@"<MTLDrawable>"16d24
@"<MTLBlitCommandEncoder>"16@0:8
@"<MTLRenderCommandEncoder>"24@0:8@"MTLRenderPassDescriptor"16
@"<MTLComputeCommandEncoder>"24@0:8@"MTLComputePassDescriptor"16
@"<MTLBlitCommandEncoder>"24@0:8@"MTLBlitPassDescriptor"16
@"<MTLComputeCommandEncoder>"16@0:8
@"<MTLComputeCommandEncoder>"24@0:8Q16
v32@0:8@"<MTLEvent>"16Q24
@"<MTLParallelRenderCommandEncoder>"24@0:8@"MTLRenderPassDescriptor"16
@"<MTLResourceStateCommandEncoder>"16@0:8
@"<MTLResourceStateCommandEncoder>"24@0:8@"MTLResourceStatePassDescriptor"16
@"<MTLAccelerationStructureCommandEncoder>"16@0:8
@"<MTLAccelerationStructureCommandEncoder>"24@0:8@"MTLAccelerationStructurePassDescriptor"16
@"<MTLLogContainer>"16@0:8
@"NSError"16@0:8
v48@0:8@16Q24Q32Q40
v56@0:8@16Q24r^Q32r^Q40Q48
^v24@0:8^Q16
@40@0:8@16^(?={?=b8b24IQQ}{?=b8b24IQQ})24Q32
@32@0:8^(?={?=b8b24IQQ}{?=b8b24IQQ})16Q24
@40@0:8Q16^(?={?=b8b24IQQ}{?=b8b24IQQ})24Q32
v36@0:8@16Q24I32
v32@0:8r^@16Q24
v40@0:8Q16r^@24Q32
v24@0:8@"<MTLResourceGroupSPI>"16
v48@0:8@"<MTLResourceGroupSPI>"16Q24Q32Q40
v56@0:8@"<MTLResourceGroupSPI>"16Q24r^Q32r^Q40Q48
v24@0:8@"<MTLResource>"16
v24@0:8@"<MTLHeap>"16
v24@0:8@"NSArray"16
v32@0:8@"<MTLDrawable>"16@"NSDictionary"24
@"NSMutableDictionary"16@0:8
@"<MTLDeadlineProfile>"16@0:8
@"<MTLRenderCommandEncoder>"40@0:8@"MTLRenderPassDescriptor"16^(?={?=b8b24IQQ}{?=b8b24IQQ})24Q32
@"<MTLComputeCommandEncoder>"32@0:8^(?={?=b8b24IQQ}{?=b8b24IQQ})16Q24
@"<MTLComputeCommandEncoder>"40@0:8Q16^(?={?=b8b24IQQ}{?=b8b24IQQ})24Q32
@"<MTLComputeCommandEncoder>"40@0:8@"MTLComputePassDescriptor"16^(?={?=b8b24IQQ}{?=b8b24IQQ})24Q32
@"<MTLDebugCommandEncoder>"16@0:8
v36@0:8@"<MTLEvent>"16Q24I32
B28@0:8@16B24
^v48@0:8Q16Q24^@32^Q40
@?16@0:8
B28@0:8@"<MTLSerializerResource>"16B24
B24@0:8@"<MTLSerializerState>"16
@?<v@?>16@0:8
v24@0:8@?<v@?>16
v24@0:8@"<MTLSerializerCommandStream>"16
^v28@0:8Q16I24
^{StorageEntry=Q^v@^{StorageEntry}}
@"MTLResourceList"
@"<MTLCommandBuffer>"16@0:8
@"<MTLCommandBuffer>"24@0:8@"MTLCommandBufferDescriptor"16
B28@0:8Q16S24
i24@0:8@16
i32@0:8@16Q24
v24@0:8@"NSObject<OS_dispatch_queue>"16
@"NSObject<OS_dispatch_queue>"16@0:8
@"MTLCommandQueueSPIStats"16@0:8
i24@0:8@"NSArray"16
i32@0:8@"NSArray"16Q24
@"NSArray"24@0:8@"NSArray"16
v24@0:8@?<v@?@"<MTLCommandBuffer>"@"NSData"Q>16
@36@0:8@16I24@28
^{StorageEntry=Q^v@^{StorageEntry}}16@0:8
v24@0:8^{StorageEntry=Q^v@^{StorageEntry}}16
@"MTLSimCommandStoragePool"
@"MTLSimBufferStoragePool"
v80@0:8@16Q24Q32@40Q48Q56Q64Q72
v144@0:8@16Q24Q32{?=QQQ}40{?=QQQ}64@88Q96Q104{?=QQQ}112Q136
v128@0:8@16Q24Q32{?=QQQ}40{?=QQQ}64@88Q96Q104Q112Q120
v128@0:8@16Q24Q32Q40{?=QQQ}48@72Q80Q88{?=QQQ}96Q120
Q40@0:8{?=QQQ}16
{MTLResourceID=Q}16@0:8
@"<MTLFunctionHandle>"24@0:8@"<MTLFunction>"16
@"<MTLComputePipelineState>"32@0:8@"NSArray"16^@24
@"MTLDebugInstrumentationData"16@0:8
v40@0:8I16^I20I28^I32
@"<MTLFunctionHandle>"32@0:8@"<MTLFunction>"16Q24
@"<MTLVisibleFunctionTable>"32@0:8@"MTLVisibleFunctionTableDescriptor"16Q24
@"<MTLIntersectionFunctionTable>"32@0:8@"MTLIntersectionFunctionTableDescriptor"16Q24
@"<MTLRenderPipelineState>"32@0:8@"MTLRenderPipelineFunctionsDescriptor"16^@24
@"<MTLRenderPipelineState>"40@0:8@"NSArray"16@"NSArray"24^@32
@"<MTLRenderPipelineState>"32@0:8@"NSArray"16^@24
v64@0:8I16^I20I28^I32I40^I44I52^I56
@44@0:8I16Q20@28@36
B36@0:8r^@16Q24B32
@"MTLSimHeap"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
v80@0:8r*16*24Q32Q40Q48Q56Q64Q72
v104@0:8^v16Q24Q32{?={?=QQQ}{?=QQQ}}40Q88Q96
v104@0:8{?={?=QQQ}{?=QQQ}}16Q64Q72r^v80Q88Q96
v88@0:8^v16Q24{?={?=QQQ}{?=QQQ}}32Q80
v88@0:8{?={?=QQQ}{?=QQQ}}16Q64r^v72Q80
@64@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48
@68@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48{?=CCCC}64
{?=CCCC}16@0:8
@"<MTLTexture>"24@0:8Q16
@"<MTLTexture>"64@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48
@"<MTLTexture>"68@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48{?=CCCC}64
@"<MTLResource>"16@0:8
@"<MTLTexture>"16@0:8
@"<MTLBuffer>"16@0:8
@48@0:8Q16Q24Q32Q40
v32@0:8Q16Q24
@72@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48Q64
@76@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48{?=CCCC}64Q68
@"<MTLTexture>"48@0:8Q16Q24Q32Q40
@"<MTLTexture>"32@0:8Q16Q24
@"<MTLTexture>"72@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48Q64
@"<MTLTexture>"76@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48{?=CCCC}64Q68
Q80@0:8{?={?=QQQ}{?=QQQ}}16Q64Q72
@96@0:8@16Q24Q32Q40{_NSRange=QQ}48{_NSRange=QQ}64{?=CCCC}80B84I88B92
@92@0:8@16Q24Q32Q40{_NSRange=QQ}48{_NSRange=QQ}64{?=CCCC}80I84B88
@48@0:8@16Q24Q32I40B44
@52@0:8@16Q24Q32@40I48
@68@0:8@16Q24^{__IOSurface=}32Q40I48@52@60
@72@0:8@16Q24^{__IOSurface=}32Q40I48@52@60B68
@28@0:8Q16B24
@"MTLSimTexture"
@"<MTLTexture>"
@"<MTLResource>"
