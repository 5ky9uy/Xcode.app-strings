MSCRODMain
com.apple.scrod
Mobile Screen Reader Output Server.  Version 2.0.
/System/Library/CoreServices/VoiceOverTouch.app/scrod
server
index
Invalid handler type: %d sent from client.
v8@?0
Error: IORegisterForSystemPower failed
v12@?0i8
com.apple.springboard.lockstate
com.apple.springboard.hasBlankedScreen
Error: could not find bundle while configuring braille driver: %{public}@
Error: invalid principal class encountered while configuring braille driver: %{public}@
Error: unable to instantiate braille driver: %{public}@
Error: invalid principal class encountered while configuring braille driver (invalid interface version): %{public}@.
Invalidating braille display [%{public}@]
Connecting braille services to device [%{public}@]
Reconnecting braille services to device [%{public}@]
Disconnecting device because reconnection is not enabled [%{public}@]
Reloading braille driver for display [%{public}@]
Failed to connect for display [%{public}@] - %{public}@
Connection succeess for display [%{public}@] - %{public}@
Error: Exception while handling Bluetooth braille display reconnection event: %@
initWithArgc:argv:
sharedServer
registerWithMach
defaultCenter
_serverTimeoutNotificationHandler:
addObserver:selector:name:object:
setDelegate:
removeObserver:
dealloc
setDefaultThreadPriority:
sharedManager
initWithBrailleDisplayManager:
setCallbackDelegate:
serverSource
numberWithInt:
initWithObjectsAndKeys:
_goDogGo:
detachNewThreadSelector:toTarget:withObject:
lock
invalidate
unlock
objectForKey:
integerValue
unregisterWithMach
stop
sendCallback:
_safeHandlerForType:
performWithHandler:trusted:
handleRegisterCallbackForKey:trusted:
handleSetValue:forKey:trusted:
handleGetValue:forKey:trusted:
handleGetValue:forKey:withObject:trusted:
handlePerformActionForKey:trusted:
processIdentifier
versionString
commandPath
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
handleEvent:handlerType:trusted:
registerCallbackForKey:forClientIdentifier:handlerType:trusted:
setValue:forKey:handlerType:trusted:
getValue:forKey:handlerType:trusted:
getValue:forKey:withObject:handlerType:trusted:
performActionForKey:handlerType:trusted:
handleCallback:
.cxx_destruct
_handlers
_runLoops
_mainRunLoop
_stop
init
allocWithZone:
setActiveQueueMaximumSize:
initWithIdentifier:
serviceIdentifier
loadTranslatorWithServiceIdentifier:
language
setDefaultLanguage:
setVirtualAlignment:
setMasterStatusCellIndex:
setRadiosPrefs:
radiosPrefs
airplaneMode
setAirplaneMode:
_eventQueue_begin
isEqualToString:
setContractionMode:
setShowEightDotBraille:
setVirtualStatusAlignment:
_registerHasBlankedScreenNotification
_registerSleepNotifications
_setupBluetooth
performSelectorOnMainThread:withObject:waitUntilDone:
_enableAutoDetect
_loadStealthDisplay
virtualAlignment
_eventQueue_setVirtualStatusAlignment:
masterStatusCellIndex
_eventQueue_setMasterStatusCellIndex:
_eventQueue_setContractionMode:
_eventQueue_setShowEightDotBraille:
sharedInstance
powerChangedNotification:
_delayedPowerChangedNotification:
enabled
_loadBluetoothDriverFromPreferences
ioElement
_removeBluetoothDriverWithIOElement:removeFromPreferences:
copyWithZone:
ioObject
transport
identifier
bluetoothAddress
displayWithIOElement:driverIdentifier:delegate:
_loadBluetoothDriverWithAddress:
pairedDevices
countByEnumeratingWithState:objects:count:
address
delegate
handleFailedToLoadBluetoothDevice:
count
initWithAddress:
containsObject:
activeDisplays
lastObject
removeDisplay:
primaryDisplay
removeObject:
removeObjectForKey:
setObject:forKey:
setUIDisplayMode
_loadNextDriverForIOElement:
configurationDidChange
intValue
connectingDevices
connected
device
available
displayWithIOElement:cachedInfo:delegate:reconnectionEnabled:
configuration
addDisplay:withState:
addObject:
_removeBluetoothDriverWithAddress:
stateForDisplay:
performSelector:withObject:afterDelay:
handleBrailleDriverDisconnected
driverConfiguration
resetReconnectionTimer
mutableCopyWithZone:
isConfigured
_rootPowerPort
_handleSystemSleep
_wakeFromSleep
setLastUserInteractionTime:
isBrailleSystemSleeping
_reallyDelayedWakeFromSleep
cancelPreviousPerformRequestsWithTarget:selector:object:
lastUserInteractionTime
unsleep
setIsBrailleSystemSleeping:
_delayedWakeFromSleep
_disableAutoDetect
_blankOutDisplaysInQueue:
sleep
requiresPersistentConnection
sleepForTimeInterval:
_delayedHandleSystemSleep
_updateScreenLock:screenBlank:
initialize
airplaneModeChanged
handleSettingsChange:
_displayWithIOElement:driverIdentifier:delegate:
loadBluetoothDriverWithAddress:
removeBluetoothDriverWithAddress:
_saveBluetoothDisplayConfiguration:
_hasUserInteractedWithDeviceRecently
newBrailleDisplayCommandDispatcher
brailleInputManager
_sleepWake
_notifyLockStateToken
_blankScreenToken
_isScreenBlank
_isScreenLocked
_airplaneMode
_isBrailleSystemSleeping
_radiosPrefs
TB,N,V_isBrailleSystemSleeping
TB,N,V_airplaneMode
T@"RadiosPreferences",&,N,V_radiosPrefs
brailleDriverDeviceDetectionInfo
arrayWithCapacity:
name
expressionForEvaluatedObject
initWithObject:
initWithLeftExpression:rightExpression:modifier:type:options:
evaluateWithObject:
insertObject:atIndex:
initWithIOObject:
UTF8String
_bluetoothAddress
_displayWithIOElement:driverIdentifier:modelIdentifier:mainSize:statusSize:inputMode:delegate:reconnectionEnabled:
brailleDriverBundleWithIdentifier:
ignoreLogging
principalClass
brailleDriverClassIsValid:
interfaceVersion
_initWithDriver:driverIdentifier:modelIdentifier:ioElement:mainSize:statusSize:inputMode:delegate:reconnectionEnabled:
_delayedDisplayLoad
_initWithDriver:driverIdentifier:ioElement:delegate:
_enableReconnectionTimer:
_runThread
_stopWatchingForDevices
unloadDriver
_startWatchingForDevices
hidDevice
loadDriverWithIOElement:
_setupDriverSupport
start
setBrailleDriverDelegate:
disconnect
brailleDisplay:driverDidLoad:
modelIdentifier
mainSize
statusSize
postsKeyboardEvents
brailleInputMode
initWithDriver:mainSize:statusSize:
setTranslationDelegate:
supportsBlinkingCursor
isInputEnabled
brailleDriverDisconnected:
_resetReconnectionTimer
connectedServices
addDeviceNotification:
addDeviceFailedNotification:
removeDeviceNotification:
deviceUpdatedNotification:
connectionStatusChanged:
removeObserver:name:object:
_delayedAddDeviceNotification:
object
_reloadDriver
_delayedRemoveDeviceNotification:
paired
_delayedDeviceUpdatedNotification:
configurationChangedForBrailleDisplay:
dictionaryWithCapacity:
numberWithInteger:
numberWithUnsignedInteger:
central
peripheral
T@"CBCentralManager",R,N
T@"CBPeripheral",R,N
T@"NSString",R,N
numberWithBool:
displayWithIOElement:driverIdentifier:delegate:reconnectionEnabled:
_unloadHandler
_reconnectionEventHandler
_reconnectionEventTimer
_reconnectionInterval
_beganReconnectionInterval
_bluetoothConnectedDevices
_isReconnectionEnabled
_isDriverLoading
_isDriverDisconnected
MSCRODMain
SCROServerDelegate
NSObject
SCROIOBluetoothElementProtocol
SCROIOElementProtocol
NSCopying
MSCRODBrailleDisplayManager
RadiosPreferencesDelegate
MSCRODIOBluetoothElement
SCROIOHIDElementProtocol
SCROIOBTLESerialElementProtocol
MSCRODBluetoothBrailleDisplay
@16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
i32@0:8@16i24B28
i32@0:8i16I20i24B28
i36@0:8@16i24i28B32
i36@0:8^@16i24i28B32
i44@0:8^@16i24@28i36B40
i28@0:8i16i20B24
i32@0:8@"SCROEvent"16i24B28
@28@0:8i16r^*20
v16@0:8
@24@0:8^i16
i16@0:8
v24@0:8@16
[3@"SCROHandler"]
^^{__CFRunLoop}
^{__CFRunLoop=}
@24@0:8^{_NSZone=}16
I16@0:8
v20@0:8i16
v24@0:8q16
v20@0:8B16
@40@0:8@16@24@32
v28@0:8@16B24
v24@0:8d16
v24@0:8i16i20
{?="rootPort"I"notifyPortRef"^{IONotificationPort}"notifierObject"I}
@"RadiosPreferences"
@24@0:8@16
@"NSString"
^v16@0:8
@"CBCentralManager"16@0:8
@"CBPeripheral"16@0:8
@44@0:8@16@24@32B40
@76@0:8@16@24@32@40@48@56@64B72
@48@0:8@16@24@32@40
@80@0:8@16@24@32@40q48q56i64@68B76
^{__CFRunLoopTimer=}
@"NSMutableDictionary"
Removing BT driver: %@
Removing BT display: %@
Received braille inter: %d
Received user interaction but system was asleep - rewaking
Last interaction time happened: %f
Updating system lock status: %@, screen blank status: %@
%{public}@
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.accessibility.BrailleTranslationService-access</key>
<true/>
<key>com.apple.bluetooth.system</key>
<true/>
<key>com.apple.hid.manager.user-access-device</key>
<true/>
<key>com.apple.hid.system.user-access-service</key>
<true/>
<key>com.apple.hid.transport.user-access</key>
<true/>
<key>com.apple.private.hid.client.event-filter</key>
<true/>
<key>com.apple.private.hid.client.event-monitor</key>
<true/>
<key>com.apple.private.hid.client.service-protected</key>
<true/>
<key>com.apple.private.hid.manager.client</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.iohideventsystem</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.Accessibility</string>
</array>
<key>com.apple.security.iokit-user-client-class</key>
<array>
<string>IOHIDResourceDeviceUserClient</string>
<string>RootDomainUserClient</string>
<string>IOHIDLibUserClient</string>
<string>AGXCommandQueue</string>
<string>AGXDevice</string>
<string>AGXDeviceUserClient</string>
<string>AGXSharedUserClient</string>
<string>H11ANEInDirectPathClient</string>
<string>IOAccelContext</string>
<string>IOAccelContext2</string>
<string>IOAccelDevice</string>
<string>IOAccelDevice2</string>
<string>IOAccelSharedUserClient</string>
<string>IOAccelSharedUserClient2</string>
<string>IOAccelSubmitter2</string>
<string>IOSurfaceAcceleratorClient</string>
<string>IOSurfaceRootUserClient</string>
<string>IOMobileFramebufferUserClient</string>
<string>AppleJPEGDriverUserClient</string>
</array>
</dict>
</plist>
MSCRODMain
com.apple.scrod
Mobile Screen Reader Output Server.  Version 2.0.
/System/Library/CoreServices/VoiceOverTouch.app/scrod
server
index
Invalid handler type: %d sent from client.
v8@?0
Error: IORegisterForSystemPower failed
v12@?0i8
com.apple.springboard.lockstate
com.apple.springboard.hasBlankedScreen
Error: could not find bundle while configuring braille driver: %{public}@
Error: invalid principal class encountered while configuring braille driver: %{public}@
Error: unable to instantiate braille driver: %{public}@
Error: invalid principal class encountered while configuring braille driver (invalid interface version): %{public}@.
Invalidating braille display [%{public}@]
Connecting braille services to device [%{public}@]
Reconnecting braille services to device [%{public}@]
Disconnecting device because reconnection is not enabled [%{public}@]
Reloading braille driver for display [%{public}@]
Failed to connect for display [%{public}@] - %{public}@
Connection succeess for display [%{public}@] - %{public}@
Error: Exception while handling Bluetooth braille display reconnection event: %@
initWithArgc:argv:
sharedServer
registerWithMach
defaultCenter
_serverTimeoutNotificationHandler:
addObserver:selector:name:object:
setDelegate:
removeObserver:
dealloc
setDefaultThreadPriority:
sharedManager
initWithBrailleDisplayManager:
setCallbackDelegate:
serverSource
numberWithInt:
initWithObjectsAndKeys:
_goDogGo:
detachNewThreadSelector:toTarget:withObject:
lock
invalidate
unlock
objectForKey:
integerValue
unregisterWithMach
stop
sendCallback:
_safeHandlerForType:
performWithHandler:trusted:
handleRegisterCallbackForKey:trusted:
handleSetValue:forKey:trusted:
handleGetValue:forKey:trusted:
handleGetValue:forKey:withObject:trusted:
handlePerformActionForKey:trusted:
processIdentifier
versionString
commandPath
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
handleEvent:handlerType:trusted:
registerCallbackForKey:forClientIdentifier:handlerType:trusted:
setValue:forKey:handlerType:trusted:
getValue:forKey:handlerType:trusted:
getValue:forKey:withObject:handlerType:trusted:
performActionForKey:handlerType:trusted:
handleCallback:
.cxx_destruct
_handlers
_runLoops
_mainRunLoop
_stop
init
allocWithZone:
setActiveQueueMaximumSize:
initWithIdentifier:
serviceIdentifier
loadTranslatorWithServiceIdentifier:
language
setDefaultLanguage:
setVirtualAlignment:
setMasterStatusCellIndex:
setRadiosPrefs:
radiosPrefs
airplaneMode
setAirplaneMode:
_eventQueue_begin
isEqualToString:
setContractionMode:
setShowEightDotBraille:
setVirtualStatusAlignment:
_registerHasBlankedScreenNotification
_registerSleepNotifications
_setupBluetooth
performSelectorOnMainThread:withObject:waitUntilDone:
_enableAutoDetect
_loadStealthDisplay
virtualAlignment
_eventQueue_setVirtualStatusAlignment:
masterStatusCellIndex
_eventQueue_setMasterStatusCellIndex:
_eventQueue_setContractionMode:
_eventQueue_setShowEightDotBraille:
sharedInstance
powerChangedNotification:
_delayedPowerChangedNotification:
enabled
_loadBluetoothDriverFromPreferences
ioElement
_removeBluetoothDriverWithIOElement:removeFromPreferences:
copyWithZone:
ioObject
transport
identifier
bluetoothAddress
displayWithIOElement:driverIdentifier:delegate:
_loadBluetoothDriverWithAddress:
pairedDevices
countByEnumeratingWithState:objects:count:
address
delegate
handleFailedToLoadBluetoothDevice:
count
initWithAddress:
containsObject:
activeDisplays
lastObject
removeDisplay:
primaryDisplay
removeObject:
removeObjectForKey:
setObject:forKey:
setUIDisplayMode
_loadNextDriverForIOElement:
configurationDidChange
intValue
connectingDevices
connected
device
available
displayWithIOElement:cachedInfo:delegate:reconnectionEnabled:
configuration
addDisplay:withState:
addObject:
_removeBluetoothDriverWithAddress:
stateForDisplay:
performSelector:withObject:afterDelay:
handleBrailleDriverDisconnected
driverConfiguration
resetReconnectionTimer
mutableCopyWithZone:
isConfigured
_rootPowerPort
_handleSystemSleep
_wakeFromSleep
setLastUserInteractionTime:
isBrailleSystemSleeping
_reallyDelayedWakeFromSleep
cancelPreviousPerformRequestsWithTarget:selector:object:
lastUserInteractionTime
unsleep
setIsBrailleSystemSleeping:
_delayedWakeFromSleep
_disableAutoDetect
_blankOutDisplaysInQueue:
sleep
requiresPersistentConnection
sleepForTimeInterval:
_delayedHandleSystemSleep
_updateScreenLock:screenBlank:
initialize
airplaneModeChanged
handleSettingsChange:
_displayWithIOElement:driverIdentifier:delegate:
loadBluetoothDriverWithAddress:
removeBluetoothDriverWithAddress:
_saveBluetoothDisplayConfiguration:
_hasUserInteractedWithDeviceRecently
newBrailleDisplayCommandDispatcher
brailleInputManager
_sleepWake
_notifyLockStateToken
_blankScreenToken
_isScreenBlank
_isScreenLocked
_airplaneMode
_isBrailleSystemSleeping
_radiosPrefs
TB,N,V_isBrailleSystemSleeping
TB,N,V_airplaneMode
T@"RadiosPreferences",&,N,V_radiosPrefs
brailleDriverDeviceDetectionInfo
arrayWithCapacity:
name
expressionForEvaluatedObject
initWithObject:
initWithLeftExpression:rightExpression:modifier:type:options:
evaluateWithObject:
insertObject:atIndex:
initWithIOObject:
UTF8String
_bluetoothAddress
_displayWithIOElement:driverIdentifier:modelIdentifier:mainSize:statusSize:inputMode:delegate:reconnectionEnabled:
brailleDriverBundleWithIdentifier:
ignoreLogging
principalClass
brailleDriverClassIsValid:
interfaceVersion
_initWithDriver:driverIdentifier:modelIdentifier:ioElement:mainSize:statusSize:inputMode:delegate:reconnectionEnabled:
_delayedDisplayLoad
_initWithDriver:driverIdentifier:ioElement:delegate:
_enableReconnectionTimer:
_runThread
_stopWatchingForDevices
unloadDriver
_startWatchingForDevices
hidDevice
loadDriverWithIOElement:
_setupDriverSupport
start
setBrailleDriverDelegate:
disconnect
brailleDisplay:driverDidLoad:
modelIdentifier
mainSize
statusSize
postsKeyboardEvents
brailleInputMode
initWithDriver:mainSize:statusSize:
setTranslationDelegate:
supportsBlinkingCursor
isInputEnabled
brailleDriverDisconnected:
_resetReconnectionTimer
connectedServices
addDeviceNotification:
addDeviceFailedNotification:
removeDeviceNotification:
deviceUpdatedNotification:
connectionStatusChanged:
removeObserver:name:object:
_delayedAddDeviceNotification:
object
_reloadDriver
_delayedRemoveDeviceNotification:
paired
_delayedDeviceUpdatedNotification:
configurationChangedForBrailleDisplay:
dictionaryWithCapacity:
numberWithInteger:
numberWithUnsignedInteger:
central
peripheral
T@"CBCentralManager",R,N
T@"CBPeripheral",R,N
T@"NSString",R,N
numberWithBool:
displayWithIOElement:driverIdentifier:delegate:reconnectionEnabled:
_unloadHandler
_reconnectionEventHandler
_reconnectionEventTimer
_reconnectionInterval
_beganReconnectionInterval
_bluetoothConnectedDevices
_isReconnectionEnabled
_isDriverLoading
_isDriverDisconnected
MSCRODMain
SCROServerDelegate
NSObject
SCROIOBluetoothElementProtocol
SCROIOElementProtocol
NSCopying
MSCRODBrailleDisplayManager
RadiosPreferencesDelegate
MSCRODIOBluetoothElement
SCROIOHIDElementProtocol
SCROIOBTLESerialElementProtocol
MSCRODBluetoothBrailleDisplay
@16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
i32@0:8@16i24B28
i32@0:8i16I20i24B28
i36@0:8@16i24i28B32
i36@0:8^@16i24i28B32
i44@0:8^@16i24@28i36B40
i28@0:8i16i20B24
i32@0:8@"SCROEvent"16i24B28
@28@0:8i16r^*20
v16@0:8
@24@0:8^i16
i16@0:8
v24@0:8@16
[3@"SCROHandler"]
^^{__CFRunLoop}
^{__CFRunLoop=}
@24@0:8^{_NSZone=}16
I16@0:8
v20@0:8i16
v24@0:8q16
v20@0:8B16
@40@0:8@16@24@32
v28@0:8@16B24
v24@0:8d16
v24@0:8i16i20
{?="rootPort"I"notifyPortRef"^{IONotificationPort}"notifierObject"I}
@"RadiosPreferences"
@24@0:8@16
@"NSString"
^v16@0:8
@"CBCentralManager"16@0:8
@"CBPeripheral"16@0:8
@44@0:8@16@24@32B40
@76@0:8@16@24@32@40@48@56@64B72
@48@0:8@16@24@32@40
@80@0:8@16@24@32@40q48q56i64@68B76
^{__CFRunLoopTimer=}
@"NSMutableDictionary"

Removing BT driver: %@
Removing BT display: %@
Received braille inter: %d
Received user interaction but system was asleep - rewaking
Last interaction time happened: %f
Updating system lock status: %@, screen blank status: %@
%{public}@
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.accessibility.BrailleTranslationService-access</key>
<true/>
<key>com.apple.bluetooth.system</key>
<true/>
<key>com.apple.hid.manager.user-access-device</key>
<true/>
<key>com.apple.hid.system.user-access-service</key>
<true/>
<key>com.apple.hid.transport.user-access</key>
<true/>
<key>com.apple.private.hid.client.event-filter</key>
<true/>
<key>com.apple.private.hid.client.event-monitor</key>
<true/>
<key>com.apple.private.hid.client.service-protected</key>
<true/>
<key>com.apple.private.hid.manager.client</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.iohideventsystem</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.Accessibility</string>
</array>
<key>com.apple.security.iokit-user-client-class</key>
<array>
<string>IOHIDResourceDeviceUserClient</string>
<string>RootDomainUserClient</string>
<string>IOHIDLibUserClient</string>
<string>AGXCommandQueue</string>
<string>AGXDevice</string>
<string>AGXDeviceUserClient</string>
<string>AGXSharedUserClient</string>
<string>H11ANEInDirectPathClient</string>
<string>IOAccelContext</string>
<string>IOAccelContext2</string>
<string>IOAccelDevice</string>
<string>IOAccelDevice2</string>
<string>IOAccelSharedUserClient</string>
<string>IOAccelSharedUserClient2</string>
<string>IOAccelSubmitter2</string>
<string>IOSurfaceAcceleratorClient</string>
<string>IOSurfaceRootUserClient</string>
<string>IOMobileFramebufferUserClient</string>
<string>AppleJPEGDriverUserClient</string>
</array>
</dict>
</plist>
