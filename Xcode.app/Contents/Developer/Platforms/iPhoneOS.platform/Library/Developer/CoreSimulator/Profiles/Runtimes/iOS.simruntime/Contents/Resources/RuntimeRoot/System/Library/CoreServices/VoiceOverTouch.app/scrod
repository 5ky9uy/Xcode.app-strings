MSCRODMain
com.apple.scrod
Mobile Screen Reader Output Server.  Version 2.0.
/System/Library/CoreServices/VoiceOverTouch.app/scrod
server
index
Invalid handler type: %d sent from client.
v8@?0
Error: IORegisterForSystemPower failed
v12@?0i8
com.apple.springboard.lockstate
com.apple.springboard.hasBlankedScreen
Error: could not find bundle while configuring braille driver: %{public}@
Error: invalid principal class encountered while configuring braille driver: %{public}@
Error: unable to instantiate braille driver: %{public}@
Error: invalid principal class encountered while configuring braille driver (invalid interface version): %{public}@.
Invalidating braille display [%{public}@]
Connecting braille services to device [%{public}@]
Reconnecting braille services to device [%{public}@]
Disconnecting device because reconnection is not enabled [%{public}@]
Reloading braille driver for display [%{public}@]
Failed to connect for display [%{public}@] - %{public}@
Connection succeess for display [%{public}@] - %{public}@
%@,%@
Error: Exception while handling Bluetooth braille display reconnection event: %@
_eventQueue_setContractionMode:
T#,R
address
T@"CBPeripheral",R,N
containsObject:
T@"NSString",R,N
enabled
TB,N,V_airplaneMode
handleCallback:
TI,R,N
isProxy
UTF8String
modelIdentifier
_beganReconnectionInterval
registerCallbackForKey:forClientIdentifier:handlerType:trusted:
_blankScreenToken
removeObserver:
_bluetoothConnectedDevices
setRadiosPrefs:
_delayedDeviceUpdatedNotification:
.cxx_destruct
_setupBluetooth
T@"CBCentralManager",R,N
central
T@"NSString",R,C
dealloc
T@"RadiosPreferences",&,N,V_radiosPrefs
handleBrailleDriverDisconnected
TB,N,V_isBrailleSystemSleeping
initWithObject:
TQ,R
loadBluetoothDriverWithAddress:
_airplaneMode
numberWithBool:
_blankOutDisplaysInQueue:
release
_bluetoothAddress
_delayedAddDeviceNotification:
unsleep
_delayedDisplayLoad
_delayedHandleSystemSleep
_delayedPowerChangedNotification:
_delayedRemoveDeviceNotification:
_delayedWakeFromSleep
_disableAutoDetect
_displayWithIOElement:driverIdentifier:delegate:
_displayWithIOElement:driverIdentifier:modelIdentifier:mainSize:statusSize:inputMode:delegate:reconnectionEnabled:
_enableAutoDetect
_enableReconnectionTimer:
_eventQueue_begin
_eventQueue_setMasterStatusCellIndex:
_eventQueue_setShowEightDotBraille:
_eventQueue_setVirtualStatusAlignment:
_goDogGo:
_handleSystemSleep
_handlers
_hasUserInteractedWithDeviceRecently
_initWithDriver:driverIdentifier:ioElement:delegate:
_initWithDriver:driverIdentifier:modelIdentifier:ioElement:mainSize:statusSize:inputMode:delegate:reconnectionEnabled:
_isBrailleSystemSleeping
_isDriverDisconnected
_isDriverLoading
_isInDisconnectedState
_isReconnectionEnabled
_isScreenBlank
_isScreenUILocked
_keybagLockStateToken
_loadBluetoothDriverFromPreferences
_loadBluetoothDriverWithAddress:
_loadNextDriverForIOElement:
_loadStealthDisplay
_mainRunLoop
_notifyLockStateToken
_radiosPrefs
_reallyDelayedWakeFromSleep
_reconnectionEventHandler
_reconnectionEventTimer
_reconnectionInterval
_registerHasBlankedScreenNotification
_registerSleepNotifications
_reloadDriver
_removeBluetoothDriverWithAddress:
_removeBluetoothDriverWithIOElement:removeFromPreferences:
_resetReconnectionTimer
_rootPowerPort
_runLoops
_runThread
_safeHandlerForType:
_saveBluetoothDisplayConfiguration:
_serverTimeoutNotificationHandler:
_setupDriverSupport
_sleepWake
_startWatchingForDevices
_stop
_stopWatchingForDevices
_unloadHandler
_updateScreenUILock:screenBlank:
_wakeFromSleep
activeDisplays
addDeviceFailedNotification:
addDeviceNotification:
addDisplay:withState:
addObject:
addObserver:selector:name:object:
airplaneMode
airplaneModeChanged
allocWithZone:
arrayWithCapacity:
autorelease
available
bluetoothAddress
brailleDisplay:driverDidLoad:
brailleDriverBundleWithIdentifier:
brailleDriverClassIsValid:
brailleDriverDeviceDetectionInfo
brailleDriverDisconnected:
brailleInputManager
brailleInputMode
cancelPreviousPerformRequestsWithTarget:selector:object:
class
commandPath
configuration
configurationChangedForBrailleDisplay:
configurationDidChange
conformsToProtocol:
connected
connectedServices
connectingDevices
connectionStatusChanged:
copyWithZone:
count
countByEnumeratingWithState:objects:count:
debugDescription
defaultCenter
delegate
description
detachNewThreadSelector:toTarget:withObject:
device
deviceUpdatedNotification:
dictionaryWithCapacity:
disconnect
displayWithIOElement:cachedInfo:delegate:reconnectionEnabled:
displayWithIOElement:driverIdentifier:delegate:
displayWithIOElement:driverIdentifier:delegate:reconnectionEnabled:
driverConfiguration
evaluateWithObject:
expressionForEvaluatedObject
getValue:forKey:handlerType:trusted:
getValue:forKey:withObject:handlerType:trusted:
handleEvent:handlerType:trusted:
handleFailedToLoadBluetoothDevice:
handleGetValue:forKey:trusted:
handleGetValue:forKey:withObject:trusted:
handlePerformActionForKey:trusted:
handleRegisterCallbackForKey:trusted:
handleSetValue:forKey:trusted:
handleSettingsChange:
hash
hidDevice
identifier
ignoreLogging
init
initWithAddress:
initWithArgc:argv:
initWithBrailleDisplayManager:
initWithDriver:mainSize:statusSize:
initWithIOObject:
initWithIdentifier:
initWithLeftExpression:rightExpression:modifier:type:options:
initWithObjectsAndKeys:
initialize
insertObject:atIndex:
intValue
integerValue
interfaceVersion
invalidate
ioElement
ioObject
isBrailleSystemSleeping
isConfigured
isEqual:
isEqualToString:
isInputEnabled
isKindOfClass:
isMemberOfClass:
isScreenLockedWithPasscode:
language
lastObject
lastUserInteractionTime
loadDriverWithIOElement:
loadTranslatorWithServiceIdentifier:
lock
mainSize
manufacturerName
masterStatusCellIndex
mutableCopyWithZone:
name
newBrailleDisplayCommandDispatcher
numberWithInt:
numberWithInteger:
numberWithUnsignedInt:
numberWithUnsignedInteger:
object
objectForKey:
paired
pairedDevices
performActionForKey:handlerType:trusted:
performSelector:
performSelector:withObject:
performSelector:withObject:afterDelay:
performSelector:withObject:withObject:
performSelectorOnMainThread:withObject:waitUntilDone:
performWithHandler:trusted:
peripheral
postsKeyboardEvents
powerChangedNotification:
primaryDisplay
principalClass
processIdentifier
productId
productName
radiosPrefs
registerWithMach
removeBluetoothDriverWithAddress:
removeDeviceNotification:
removeDisplay:
removeObject:
removeObjectForKey:
removeObserver:name:object:
requiresPersistentConnection
resetReconnectionTimer
respondsToSelector:
retain
retainCount
self
sendCallback:
server
serverSource
serviceIdentifier
setActiveQueueMaximumSize:
setAirplaneMode:
setBrailleDriverDelegate:
setCallbackDelegate:
setContractionMode:
setDefaultLanguage:
setDefaultThreadPriority:
setDelegate:
setIsBrailleSystemSleeping:
setLastUserInteractionTime:
setMasterStatusCellIndex:
setObject:forKey:
setObject:forKeyedSubscript:
setShowEightDotBraille:
setTranslationDelegate:
setUIDisplayMode
setValue:forKey:handlerType:trusted:
setVirtualAlignment:
setVirtualStatusAlignment:
sharedInstance
sharedManager
sharedServer
sleep
sleepForTimeInterval:
start
stateForDisplay:
statusSize
stop
stringWithFormat:
superclass
supportsBlinkingCursor
transport
unloadDriver
unlock
unregisterWithMach
vendorId
versionString
virtualAlignment
zone
MSCRODMain
SCROServerDelegate
NSObject
SCROIOBluetoothElementProtocol
SCROIOElementProtocol
NSCopying
MSCRODBrailleDisplayManager
RadiosPreferencesDelegate
MSCRODIOBluetoothElement
SCROIOHIDElementProtocol
SCROIOBTLESerialElementProtocol
MSCRODBluetoothBrailleDisplay
@16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
i32@0:8@16i24B28
i32@0:8i16I20i24B28
i36@0:8@16i24i28B32
i36@0:8^@16i24i28B32
i44@0:8^@16i24@28i36B40
i28@0:8i16i20B24
i32@0:8@"SCROEvent"16i24B28
@28@0:8i16r^*20
v16@0:8
@24@0:8^i16
i16@0:8
v24@0:8@16
[3@"SCROHandler"]
^^{__CFRunLoop}
^{__CFRunLoop=}
@24@0:8^{_NSZone=}16
I16@0:8
v20@0:8i16
v24@0:8q16
v20@0:8B16
@40@0:8@16@24@32
v28@0:8@16B24
v24@0:8d16
v24@0:8i16i20
{?="rootPort"I"notifyPortRef"^{IONotificationPort}"notifierObject"I}
@"RadiosPreferences"
@24@0:8@16
@"NSString"
^v16@0:8
@"CBCentralManager"16@0:8
@"CBPeripheral"16@0:8
@44@0:8@16@24@32B40
@76@0:8@16@24@32@40@48@56@64B72
@48@0:8@16@24@32@40
@80@0:8@16@24@32@40q48q56i64@68B76
^{__CFRunLoopTimer=}
@"NSMutableDictionary"
Removing BT driver: %@
Removing BT display: %@
Received braille inter: %d
Received user interaction but system was asleep - rewaking
Last interaction time happened: %f
Processing wake from sleep to auto detect
Handled system sleep in Braille
Updating system ui lock status: %@, screen blank status: %@, system lock: %@
Initialized: %@, should disconnected %@, is disconnected: %@
Braille Device: Sleeping
Braille Device: Waking
Handled keybag lock: %@ %@
Handled lock: %@ %@
Handled screen wake: %@ %@
Registered lock state: %@ %@
Registered blank screen state: %@ %@
System server lock state: %@, passcode state: %@
%{public}@
Display: %@
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.accessibility.BrailleTranslationService-access</key>
<true/>
<key>com.apple.bluetooth.system</key>
<true/>
<key>com.apple.hid.manager.user-access-device</key>
<true/>
<key>com.apple.hid.system.user-access-service</key>
<true/>
<key>com.apple.hid.transport.user-access</key>
<true/>
<key>com.apple.private.hid.client.event-filter</key>
<true/>
<key>com.apple.private.hid.client.event-monitor</key>
<true/>
<key>com.apple.private.hid.client.service-protected</key>
<true/>
<key>com.apple.private.hid.manager.client</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.accessibility.AXCarouselServer</string>
<string>com.apple.accessibility.AXSpringBoardServer</string>
<string>com.apple.iohideventsystem</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.Accessibility</string>
</array>
<key>com.apple.security.iokit-user-client-class</key>
<array>
<string>IOHIDResourceDeviceUserClient</string>
<string>RootDomainUserClient</string>
<string>IOHIDLibUserClient</string>
<string>AGXCommandQueue</string>
<string>AGXDevice</string>
<string>AGXDeviceUserClient</string>
<string>AGXSharedUserClient</string>
<string>H11ANEInDirectPathClient</string>
<string>IOAccelContext</string>
<string>IOAccelContext2</string>
<string>IOAccelDevice</string>
<string>IOAccelDevice2</string>
<string>IOAccelSharedUserClient</string>
<string>IOAccelSharedUserClient2</string>
<string>IOAccelSubmitter2</string>
<string>IOSurfaceAcceleratorClient</string>
<string>IOSurfaceRootUserClient</string>
<string>IOMobileFramebufferUserClient</string>
<string>AppleJPEGDriverUserClient</string>
</array>
</dict>
</plist>
0=8com.apple.accessibility.BrailleTranslationService-access
com.apple.bluetooth.system
0-(com.apple.hid.manager.user-access-device
0-(com.apple.hid.system.user-access-service
0(#com.apple.hid.transport.user-access
0.)com.apple.private.hid.client.event-filter
0/*com.apple.private.hid.client.event-monitor
03.com.apple.private.hid.client.service-protected
0)$com.apple.private.hid.manager.client
4com.apple.security.exception.mach-lookup.global-name0s(com.apple.accessibility.AXCarouselServer+com.apple.accessibility.AXSpringBoardServer
com.apple.iohideventsystem0V9com.apple.security.exception.shared-preference.read-write0
com.apple.Accessibility0
*com.apple.security.iokit-user-client-class0
IOHIDResourceDeviceUserClient
RootDomainUserClient
IOHIDLibUserClient
AGXCommandQueue
AGXDevice
AGXDeviceUserClient
AGXSharedUserClient
H11ANEInDirectPathClient
IOAccelContext
IOAccelContext2
IOAccelDevice
IOAccelDevice2
IOAccelSharedUserClient
IOAccelSharedUserClient2
IOAccelSubmitter2
IOSurfaceAcceleratorClient
IOSurfaceRootUserClient
IOMobileFramebufferUserClient
AppleJPEGDriverUserClient
MSCRODMain
com.apple.scrod
Mobile Screen Reader Output Server.  Version 2.0.
/System/Library/CoreServices/VoiceOverTouch.app/scrod
server
index
Invalid handler type: %d sent from client.
v8@?0
Error: IORegisterForSystemPower failed
v12@?0i8
com.apple.springboard.lockstate
com.apple.springboard.hasBlankedScreen
Error: could not find bundle while configuring braille driver: %{public}@
Error: invalid principal class encountered while configuring braille driver: %{public}@
Error: unable to instantiate braille driver: %{public}@
Error: invalid principal class encountered while configuring braille driver (invalid interface version): %{public}@.
Invalidating braille display [%{public}@]
Connecting braille services to device [%{public}@]
Reconnecting braille services to device [%{public}@]
Disconnecting device because reconnection is not enabled [%{public}@]
Reloading braille driver for display [%{public}@]
Failed to connect for display [%{public}@] - %{public}@
Connection succeess for display [%{public}@] - %{public}@
%@,%@
Error: Exception while handling Bluetooth braille display reconnection event: %@
_eventQueue_setContractionMode:
T#,R
address
T@"CBPeripheral",R,N
containsObject:
T@"NSString",R,N
enabled
TB,N,V_airplaneMode
handleCallback:
TI,R,N
isProxy
UTF8String
modelIdentifier
_beganReconnectionInterval
registerCallbackForKey:forClientIdentifier:handlerType:trusted:
_blankScreenToken
removeObserver:
_bluetoothConnectedDevices
setRadiosPrefs:
_delayedDeviceUpdatedNotification:
.cxx_destruct
_setupBluetooth
T@"CBCentralManager",R,N
central
T@"NSString",R,C
dealloc
T@"RadiosPreferences",&,N,V_radiosPrefs
handleBrailleDriverDisconnected
TB,N,V_isBrailleSystemSleeping
initWithObject:
TQ,R
loadBluetoothDriverWithAddress:
_airplaneMode
numberWithBool:
_blankOutDisplaysInQueue:
release
_bluetoothAddress
_delayedAddDeviceNotification:
unsleep
_delayedDisplayLoad
_delayedHandleSystemSleep
_delayedPowerChangedNotification:
_delayedRemoveDeviceNotification:
_delayedWakeFromSleep
_disableAutoDetect
_displayWithIOElement:driverIdentifier:delegate:
_displayWithIOElement:driverIdentifier:modelIdentifier:mainSize:statusSize:inputMode:delegate:reconnectionEnabled:
_enableAutoDetect
_enableReconnectionTimer:
_eventQueue_begin
_eventQueue_setMasterStatusCellIndex:
_eventQueue_setShowEightDotBraille:
_eventQueue_setVirtualStatusAlignment:
_goDogGo:
_handleSystemSleep
_handlers
_hasUserInteractedWithDeviceRecently
_initWithDriver:driverIdentifier:ioElement:delegate:
_initWithDriver:driverIdentifier:modelIdentifier:ioElement:mainSize:statusSize:inputMode:delegate:reconnectionEnabled:
_isBrailleSystemSleeping
_isDriverDisconnected
_isDriverLoading
_isInDisconnectedState
_isReconnectionEnabled
_isScreenBlank
_isScreenUILocked
_keybagLockStateToken
_loadBluetoothDriverFromPreferences
_loadBluetoothDriverWithAddress:
_loadNextDriverForIOElement:
_loadStealthDisplay
_mainRunLoop
_notifyLockStateToken
_radiosPrefs
_reallyDelayedWakeFromSleep
_reconnectionEventHandler
_reconnectionEventTimer
_reconnectionInterval
_registerHasBlankedScreenNotification
_registerSleepNotifications
_reloadDriver
_removeBluetoothDriverWithAddress:
_removeBluetoothDriverWithIOElement:removeFromPreferences:
_resetReconnectionTimer
_rootPowerPort
_runLoops
_runThread
_safeHandlerForType:
_saveBluetoothDisplayConfiguration:
_serverTimeoutNotificationHandler:
_setupDriverSupport
_sleepWake
_startWatchingForDevices
_stop
_stopWatchingForDevices
_unloadHandler
_updateScreenUILock:screenBlank:
_wakeFromSleep
activeDisplays
addDeviceFailedNotification:
addDeviceNotification:
addDisplay:withState:
addObject:
addObserver:selector:name:object:
airplaneMode
airplaneModeChanged
allocWithZone:
arrayWithCapacity:
autorelease
available
bluetoothAddress
brailleDisplay:driverDidLoad:
brailleDriverBundleWithIdentifier:
brailleDriverClassIsValid:
brailleDriverDeviceDetectionInfo
brailleDriverDisconnected:
brailleInputManager
brailleInputMode
cancelPreviousPerformRequestsWithTarget:selector:object:
class
commandPath
configuration
configurationChangedForBrailleDisplay:
configurationDidChange
conformsToProtocol:
connected
connectedServices
connectingDevices
connectionStatusChanged:
copyWithZone:
count
countByEnumeratingWithState:objects:count:
debugDescription
defaultCenter
delegate
description
detachNewThreadSelector:toTarget:withObject:
device
deviceUpdatedNotification:
dictionaryWithCapacity:
disconnect
displayWithIOElement:cachedInfo:delegate:reconnectionEnabled:
displayWithIOElement:driverIdentifier:delegate:
displayWithIOElement:driverIdentifier:delegate:reconnectionEnabled:
driverConfiguration
evaluateWithObject:
expressionForEvaluatedObject
getValue:forKey:handlerType:trusted:
getValue:forKey:withObject:handlerType:trusted:
handleEvent:handlerType:trusted:
handleFailedToLoadBluetoothDevice:
handleGetValue:forKey:trusted:
handleGetValue:forKey:withObject:trusted:
handlePerformActionForKey:trusted:
handleRegisterCallbackForKey:trusted:
handleSetValue:forKey:trusted:
handleSettingsChange:
hash
hidDevice
identifier
ignoreLogging
init
initWithAddress:
initWithArgc:argv:
initWithBrailleDisplayManager:
initWithDriver:mainSize:statusSize:
initWithIOObject:
initWithIdentifier:
initWithLeftExpression:rightExpression:modifier:type:options:
initWithObjectsAndKeys:
initialize
insertObject:atIndex:
intValue
integerValue
interfaceVersion
invalidate
ioElement
ioObject
isBrailleSystemSleeping
isConfigured
isEqual:
isEqualToString:
isInputEnabled
isKindOfClass:
isMemberOfClass:
isScreenLockedWithPasscode:
language
lastObject
lastUserInteractionTime
loadDriverWithIOElement:
loadTranslatorWithServiceIdentifier:
lock
mainSize
manufacturerName
masterStatusCellIndex
mutableCopyWithZone:
name
newBrailleDisplayCommandDispatcher
numberWithInt:
numberWithInteger:
numberWithUnsignedInt:
numberWithUnsignedInteger:
object
objectForKey:
paired
pairedDevices
performActionForKey:handlerType:trusted:
performSelector:
performSelector:withObject:
performSelector:withObject:afterDelay:
performSelector:withObject:withObject:
performSelectorOnMainThread:withObject:waitUntilDone:
performWithHandler:trusted:
peripheral
postsKeyboardEvents
powerChangedNotification:
primaryDisplay
principalClass
processIdentifier
productId
productName
radiosPrefs
registerWithMach
removeBluetoothDriverWithAddress:
removeDeviceNotification:
removeDisplay:
removeObject:
removeObjectForKey:
removeObserver:name:object:
requiresPersistentConnection
resetReconnectionTimer
respondsToSelector:
retain
retainCount
self
sendCallback:
server
serverSource
serviceIdentifier
setActiveQueueMaximumSize:
setAirplaneMode:
setBrailleDriverDelegate:
setCallbackDelegate:
setContractionMode:
setDefaultLanguage:
setDefaultThreadPriority:
setDelegate:
setIsBrailleSystemSleeping:
setLastUserInteractionTime:
setMasterStatusCellIndex:
setObject:forKey:
setObject:forKeyedSubscript:
setShowEightDotBraille:
setTranslationDelegate:
setUIDisplayMode
setValue:forKey:handlerType:trusted:
setVirtualAlignment:
setVirtualStatusAlignment:
sharedInstance
sharedManager
sharedServer
sleep
sleepForTimeInterval:
start
stateForDisplay:
statusSize
stop
stringWithFormat:
superclass
supportsBlinkingCursor
transport
unloadDriver
unlock
unregisterWithMach
vendorId
versionString
virtualAlignment
zone
MSCRODMain
SCROServerDelegate
NSObject
SCROIOBluetoothElementProtocol
SCROIOElementProtocol
NSCopying
MSCRODBrailleDisplayManager
RadiosPreferencesDelegate
MSCRODIOBluetoothElement
SCROIOHIDElementProtocol
SCROIOBTLESerialElementProtocol
MSCRODBluetoothBrailleDisplay
@16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
i32@0:8@16i24B28
i32@0:8i16I20i24B28
i36@0:8@16i24i28B32
i36@0:8^@16i24i28B32
i44@0:8^@16i24@28i36B40
i28@0:8i16i20B24
i32@0:8@"SCROEvent"16i24B28
@28@0:8i16r^*20
v16@0:8
@24@0:8^i16
i16@0:8
v24@0:8@16
[3@"SCROHandler"]
^^{__CFRunLoop}
^{__CFRunLoop=}
@24@0:8^{_NSZone=}16
I16@0:8
v20@0:8i16
v24@0:8q16
v20@0:8B16
@40@0:8@16@24@32
v28@0:8@16B24
v24@0:8d16
v24@0:8i16i20
{?="rootPort"I"notifyPortRef"^{IONotificationPort}"notifierObject"I}
@"RadiosPreferences"
@24@0:8@16
@"NSString"
^v16@0:8
@"CBCentralManager"16@0:8
@"CBPeripheral"16@0:8
@44@0:8@16@24@32B40
@76@0:8@16@24@32@40@48@56@64B72
@48@0:8@16@24@32@40
@80@0:8@16@24@32@40q48q56i64@68B76
^{__CFRunLoopTimer=}
@"NSMutableDictionary"
Removing BT driver: %@
Removing BT display: %@
Received braille inter: %d
Received user interaction but system was asleep - rewaking
Last interaction time happened: %f
Processing wake from sleep to auto detect
Handled system sleep in Braille
Updating system ui lock status: %@, screen blank status: %@, system lock: %@
Initialized: %@, should disconnected %@, is disconnected: %@
Braille Device: Sleeping
Braille Device: Waking
Handled keybag lock: %@ %@
Handled lock: %@ %@
Handled screen wake: %@ %@
Registered lock state: %@ %@
Registered blank screen state: %@ %@
System server lock state: %@, passcode state: %@
%{public}@
Display: %@
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.accessibility.BrailleTranslationService-access</key>
<true/>
<key>com.apple.bluetooth.system</key>
<true/>
<key>com.apple.hid.manager.user-access-device</key>
<true/>
<key>com.apple.hid.system.user-access-service</key>
<true/>
<key>com.apple.hid.transport.user-access</key>
<true/>
<key>com.apple.private.hid.client.event-filter</key>
<true/>
<key>com.apple.private.hid.client.event-monitor</key>
<true/>
<key>com.apple.private.hid.client.service-protected</key>
<true/>
<key>com.apple.private.hid.manager.client</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.accessibility.AXCarouselServer</string>
<string>com.apple.accessibility.AXSpringBoardServer</string>
<string>com.apple.iohideventsystem</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.Accessibility</string>
</array>
<key>com.apple.security.iokit-user-client-class</key>
<array>
<string>IOHIDResourceDeviceUserClient</string>
<string>RootDomainUserClient</string>
<string>IOHIDLibUserClient</string>
<string>AGXCommandQueue</string>
<string>AGXDevice</string>
<string>AGXDeviceUserClient</string>
<string>AGXSharedUserClient</string>
<string>H11ANEInDirectPathClient</string>
<string>IOAccelContext</string>
<string>IOAccelContext2</string>
<string>IOAccelDevice</string>
<string>IOAccelDevice2</string>
<string>IOAccelSharedUserClient</string>
<string>IOAccelSharedUserClient2</string>
<string>IOAccelSubmitter2</string>
<string>IOSurfaceAcceleratorClient</string>
<string>IOSurfaceRootUserClient</string>
<string>IOMobileFramebufferUserClient</string>
<string>AppleJPEGDriverUserClient</string>
</array>
</dict>
</plist>
0=8com.apple.accessibility.BrailleTranslationService-access
com.apple.bluetooth.system
0-(com.apple.hid.manager.user-access-device
0-(com.apple.hid.system.user-access-service
0(#com.apple.hid.transport.user-access
0.)com.apple.private.hid.client.event-filter
0/*com.apple.private.hid.client.event-monitor
03.com.apple.private.hid.client.service-protected
0)$com.apple.private.hid.manager.client
4com.apple.security.exception.mach-lookup.global-name0s(com.apple.accessibility.AXCarouselServer+com.apple.accessibility.AXSpringBoardServer
com.apple.iohideventsystem0V9com.apple.security.exception.shared-preference.read-write0
com.apple.Accessibility0
*com.apple.security.iokit-user-client-class0
IOHIDResourceDeviceUserClient
RootDomainUserClient
IOHIDLibUserClient
AGXCommandQueue
AGXDevice
AGXDeviceUserClient
AGXSharedUserClient
H11ANEInDirectPathClient
IOAccelContext
IOAccelContext2
IOAccelDevice
IOAccelDevice2
IOAccelSharedUserClient
IOAccelSharedUserClient2
IOAccelSubmitter2
IOSurfaceAcceleratorClient
IOSurfaceRootUserClient
IOMobileFramebufferUserClient
AppleJPEGDriverUserClient
