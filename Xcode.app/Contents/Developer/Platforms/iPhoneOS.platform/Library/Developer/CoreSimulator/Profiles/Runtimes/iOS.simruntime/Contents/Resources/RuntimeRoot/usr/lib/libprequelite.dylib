@(#)PROGRAM:libprequelite  PROJECT:Prequelite-121
SqliteExtendedCode
SqliteSQL
SqliteErrorDomain
<PQLName %s>
NULL
<PQLRaw %s>
<PQLFormat %s>
cannot compile statement [%@] around [...%.10s...]
com.apple.prequelite
default
This result set has more than one column
B20@?0@"PQLConnection"8i16
busy handler called (%d) %@
 > %@
v32@?0@"PQLConnection"8@"PQLStatement"16@"NSError"24
Sqlite rollbacked transaction [%@] because of unrecoverable error [%@], aborting.
<%@:%p %@%s{batch:%d:%d txn:%d
 auto-commit:%d}>
 %d prepared statements
, %d busy:
    %s
-[PQLConnection _resetState]
PQLConnection.m
_db == nil
_suspendCaching == 0
_batchingTimer == nil
_batchingPolicyHandler == nil
_flushNotifications == nil
_savePointLevel == 0
_skipBatchStop == 0
!_batchStarted
com.apple.sqlite.%@
v8@?0
Invalid parameter not satisfying: %@
count > 0 || delay > 0
-[PQLConnection _batchStartIfNeeded:]
_useBatching && !_batchStarted
com.apple.prequelite.batch
Connection has been used after close (or before open)
connection is closed
-[PQLConnection _batchStopIfNeeded]
_useBatching && _batchStarted && !_savePointLevel && !_skipBatchStop
PRAGMA cache_size
-[PQLConnection _fireFlushNotifications]
!_batchStarted && !_savePointLevel && _useQueue
PRAGMA auto_vacuum
incremental
PRAGMA incremental_vacuum(%lld)
-[PQLConnection _vacuumIfNeeded]
!_savePointLevel
_vacuumTracker >= 0
PRAGMA page_count
PRAGMA freelist_count
main
full
barrier
F_FULLFSYNC
F_BARRIERFSYNC
-flush is invalid when in a savepoint
commit
savepoint savepoint_0
savepoint savepoint_1
savepoint savepoint_2
savepoint savepoint_3
savepoint savepoint_4
rollback to savepoint savepoint_0
rollback to savepoint savepoint_1
rollback to savepoint savepoint_2
rollback to savepoint savepoint_3
rollback to savepoint savepoint_4
release savepoint savepoint_0
release savepoint savepoint_1
release savepoint savepoint_2
release savepoint savepoint_3
release savepoint savepoint_4
completion handler passed and no serial Queue in use
flush notification makes no sense without batching or savepoints
PerformSuspendBatch makes no sense if batching isn't in use
com.apple.prequelite.transaction
savepoint savepoint_%d
rollback to savepoint savepoint_%d
release savepoint savepoint_%d
-[PQLConnection _performWithFlags:action:whenFlushed:]
B16@?0@"PQLConnection"8
PerformOnSerialQueue asked with no serial Queue in use
-openAtURL called twice
PRAGMA page_size
PRAGMA journal_mode
PRAGMA auto_vacuum = incremental
PRAGMA page_size = 4096
PRAGMA journal_mode = WAL
cannot set journal_mode to WAL
PRAGMA wal_autocheckpoint = 4000
cannot set wal_autocheckpoint to 4000
backup failed
invalid transactionType passed: %ld
PRAGMA synchronous
PRAGMA synchronous = 0
PRAGMA synchronous = 1
PRAGMA synchronous = 2
invalid synchronousMode passed: %ld
autoRollbackHandler should not be nil
this isn't an update, you should use -select instead
PRAGMA user_version
PRAGMA user_version = %ld
pragma freelist_count
pragma page_size
-[PQLConnection(Swift) fetchObjectOfClassSwift:query:error:]
_lastError
-[PQLConnection(Swift) fetchObjectSwift:query:error:]
__PQLCacheValueRelease
queue
begin transaction immediate
begin transaction deferred
begin transaction exclusive
busy handler called
no result found
<%@:%p {stmt: %@; row: %ld; closed:%s}>
-%s was called twice
PQLResultSet.m
[aClass instancesRespondToSelector:initializer]
%@ conforms neither to PQLValuable or PQLResultSetInitializer
@24@?0@"PQLResultSet"8^@16
<%@:%p {%s}>
INVALIDATED
PQLStatement.m
cannot bind a closed statement
cannot bind a statement in use
, %s
UINT
INT64
DOUBLE
TEXT
, %s(%@)
OBJECT
%s(%@)
BLOCK
warning: failed to archive error object %@
warning: failed to unarchive error object %@
Unable to create preprared cache for statements
Starting database batch on %@
Flushing database batch for timer on %@
unable to get cache_size, use default 500
Flushing database batch to reduce page cache pressure on %@
Flushing database batch for change count on %@
Flushing database batch (policy handler) on %@
warning: Incremental vacuum failed
AutoVacuum: evaluating mode for %@
AutoVacuum: non incremental mode detected for %@
AutoVacuum: Incremental mode detected for %@
AutoVacuum: unable to get page_count for %@
AutoVacuum: unable to get freelist_count for %@
AutoVacuum: used:%lld free:%lld load:%lld%% for %@
AutoVacuum: freed %lld pages for %@
%s fsyncing %@
Failed to %s the db for %@ - %@
Failed to open the db for fsync %@ - %@
Flushed %@
Can't set busy handler
opened %@
can't clear busy handler
closed %@
sqlite3_close(%@) failed: %@
sqlite3_close(%@) fails: [%s] isn't finalized
finished backup from %@ to %@, rc: %d
Safety level change from within a transaction
uncaching: <%@:%p>
connection:%@ sql:'%s'
found cached statement without injections
sql:  %@
stmt: %@
translated statement with%s injections
sql:   %@
trans: %s
found cached statement with injections
sql:  %@
stmt: %@
cached statement with%s injections
sql:  %@
stmt: %@
translated statement with injections
sql:   %@
trans: %s
cached statement with injections
sql:  %@
stmt: %@
binding values to statement
stmt: %@
binding: [%@]
PQLAdditions
PQLNameInjectionBase
PQLNameInjection
PQLInjecting
NSObject
PQLRawInjection
PQLFormatInjection
PQLBindable
PQLValuable
PQLResultSetInitializer
PQLConnection
Swift
PQLResultSet
PQLEnumeration
NSFastEnumeration
PQLStatement
PQLQueryBuilder
NSCoding
errorForDB:SQL:
stringWithUTF8String:
dictionaryWithCapacity:
setObject:forKeyedSubscript:
numberWithInteger:
errorWithDomain:code:userInfo:
numberWithInt:
dictionaryWithObjects:forKeys:count:
userInfo
objectForKeyedSubscript:
unsignedIntegerValue
code
domain
isEqualToString:
extendedSqliteCode
sqliteStatement
isSqliteErrorCode:
errorForDB:
errorForDB:stmt:
errorWithSqliteCode:andMessage:
dealloc
init
bytes
length
initWithBytes:length:
initWithData:
_length
_bytes
T@"NSData",R,N
UTF8String
appendBytes:length:
mutableBytes
initWithString:
stringByAppendingPathComponent:
nameWithString:
_appendString:toInjection:
stringWithFormat:
nameWithPrefix:suffix:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
bindWithStatement:startingAtIndex:
bindValuesToKeepAlive
nameByAddingSuffix:
initWithUTF8String:length:
initialize
rawInjection:length:
initWithFormat:arguments:
initWithCapacity:
numberWithUnsignedInt:
addObject:
numberWithLongLong:
numberWithDouble:
initWithBytes:length:encoding:
initWithUTF8String:
appendData:
copy
null
raise:format:
countByEnumeratingWithState:objects:count:
sqliteBind:index:
formatInjection:
.cxx_destruct
_binds
objCType
doubleValue
longLongValue
newFromSqliteStatement:atIndex:
newFromSqliteValue:
timeIntervalSince1970
dateWithTimeIntervalSince1970:
dataWithBytes:length:
absoluteString
getUUIDBytes:
initWithUUIDBytes:
archivedDataWithRootObject:requiringSecureCoding:error:
unarchivedObjectOfClass:fromData:error:
columns
unarchivedObjectOfClass:atIndex:
initFromPQLResultSet:error:
initRequiringSecureCoding:
encodeObject:forKey:
encodedData
initWithOptions:capacity:
appendFormat:
setBusyHandler:
setAutoRollbackHandler:
appendString:
_description:
_clearStatementCache
removeObject:
removeAllObjects
close:
_resetState
_createCacheIfNeeded
_clearCleanupCacheQueueIfNeeded
useSerialQueueWithTarget:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
useBatchingOnTargetQueue:delay:changeCount:
useBatchingOnTargetQueue:withPolicyHandler:
_execute:mustSucceed:bindings:
flush
fetchObjectOfClass:sql:
intValue
fetch:
next
stringAtIndex:
lowercaseString
_vacuumMode
_incrementalVacuum:
fileSystemRepresentation
synchronousMode
_fullSync
_vacuumIfNeeded
forceBatchStart
count
removeObjectsInRange:
_performWithFlags:action:whenFlushed:
setTraced:
openAtURL:withFlags:error:
integerValue
execute:
isEqualToNumber:
path
initWithFormat:arguments:db:cache:
assertOnQueue
unbindForDB:returnedRows:
changes
_newStatementForFormat:arguments:
_executeStmt:mustSucceed:
initWithStatement:usingDatabase:
onlyObjectOfClass:initializer:
error
fetchObjectOfClass:initializer:sql:args:
onlyObject:
initWithFormat:
executeRaw:
currentOperationDuration
statementCacheMaxCount
setStatementCacheMaxCount:
useSerialQueue
useBatchingWithDelay:changeCount:
useBatchingWithPolicyHandler:
_batchStartIfNeeded:
_batchStopIfNeeded
_fireFlushNotifications
makeNextFlushBarrierFSync
makeNextFlushFullSync
isBatchSuspended
groupInBatch:
groupInTransaction:
performWithFlags:action:whenFlushed:
performWithFlags:action:
openAtURL:sharedCache:error:
destroyDatabaseWithError:
setupPragmas
registerFunction:nArgs:handler:
backupToURL:progress:
isInBatch
isInTransaction
lastInsertedRowID
setBatchTransactionType:
setSynchronousMode:
execute:args:
fetch:args:
fetchObjectOfClass:initializer:sql:
fetchObjectOfClass:sql:args:
fetchObject:sql:args:
fetchObject:sql:
userVersion
setUserVersion:
autovacuumableSpaceInBytes
incrementalVacuum:
label
setLabel:
lockedHandler
setLockedHandler:
busyHandler
autoRollbackHandler
sqliteErrorHandler
setSqliteErrorHandler:
preFlushHook
setPreFlushHook:
postFlushHook
setPostFlushHook:
profilingHook
setProfilingHook:
willBeginBatchingHook
setWillBeginBatchingHook:
didFinishBatchingHook
setDidFinishBatchingHook:
dbHandle
serialQueue
lastError
setLastError:
isTraced
crashIfUsedAfterClose
setCrashIfUsedAfterClose:
batchTransactionType
shouldUseWALJournalMode
setShouldUseWALJournalMode:
_currentStmtStart
_batchStarted
_suspendCaching
_savePointLevel
_skipBatchStop
_vacuumTracker
_flushNotifications
_batchingPolicyHandler
_batchingTimer
_batchingPeriod
_batchingChangesLimit
_batchingChangesCount
_cacheSize
_useBatching
_useQueue
_needsFullSync
_needsBarrierFSync
_preparedStatements
_stmtCacheSource
_stmtCacheCleanupQueue
_changesOverride
_targetQueue
_traced
_crashIfUsedAfterClose
_shouldUseWALJournalMode
_batchTransactionType
_label
_url
_lockedHandler
_busyHandler
_autoRollbackHandler
_sqliteErrorHandler
_preFlushHook
_postFlushHook
_profilingHook
_willBeginBatchingHook
_didFinishBatchingHook
_serialQueue
_lastError
T@"NSString",C,N,V_label
traced
TB,N,GisTraced,V_traced
TB,N,V_crashIfUsedAfterClose
T@"NSURL",R,C,N,V_url
T^{sqlite3=},R,N,V_db
TB,R,N
T@"NSError",&,N,V_lastError
Tq,R,N
TQ,N
T@"NSObject<OS_dispatch_queue>",R,N,V_serialQueue
Td,R,N
Ti,N,V_batchTransactionType
TB,N,V_shouldUseWALJournalMode
T@?,C,N,V_lockedHandler
T@?,C,N,V_busyHandler
T@?,C,N,V_autoRollbackHandler
T@?,C,N,V_sqliteErrorHandler
T@?,C,N,V_preFlushHook
T@?,C,N,V_postFlushHook
T@?,C,N,V_profilingHook
T@?,C,N,V_willBeginBatchingHook
T@?,C,N,V_didFinishBatchingHook
initWithQueryBuilder:db:cache:
_newStatementForBuilder:
executeSwift:error:
fetchSwift:error:
fetchObjectOfClassSwift:query:error:
fetchObjectSwift:query:error:
close
nextObject
_next:
isNullAtIndex:
dataWithBytesNoCopy:length:freeWhenDone:
dataAtIndex:
initWithBytesNoCopy:length:freeWhenDone:
propertyListWithData:options:format:error:
unarchivedObjectOfClasses:atIndex:
initForReadingFromData:error:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
defaultUnarchivingAllowedClasses
objectAtIndex:
enumerateObjectsOfClass:
instancesRespondToSelector:
stmt
onlyObjectOfClass:
objectOfClass:
objectOfClass:initializer:
object:
columnNameAtIndex:
objectOfClass:atIndex:
boolAtIndex:
charAtIndex:
unsignedCharAtIndex:
shortAtIndex:
unsignedShortAtIndex:
intAtIndex:
unsignedIntAtIndex:
longAtIndex:
unsignedLongAtIndex:
longLongAtIndex:
unsignedLongLongAtIndex:
integerAtIndex:
unsignedIntegerAtIndex:
floatAtIndex:
doubleAtIndex:
UTF8StringAtIndex:
numberAtIndex:
dateAtIndex:
dataAtIndex:noCopy:
uuidAtIndex:
plistAtIndex:
archivedObjectOfClass:atIndex:
archivedObjectOfClasses:atIndex:
objectAtIndexedSubscript:
enumerateObjectsOfClass:initializer:
enumerateObjects:
setDefaultUnarchivingAllowedClasses:
rowNumber
_stmt
_objectsClass
_objectsClassInitializer
_hasValuable
_objectsConstructor
_lastEnumeratedObject
_inTransaction
_defaultUnarchivingAllowedClasses
_error
_rowNumber
_columns
T@"NSError",R,N,V_error
TQ,R,N,V_rowNumber
TQ,R,N,V_columns
T@"PQLConnection",R,N,V_db
T^{sqlite3_stmt=},R,N
T@"NSSet",&,N,V_defaultUnarchivingAllowedClasses
initWithObjects:
_prepare:withDB:
translate:hasInjections:arguments:
initWithStatement:forDB:
bindArguments:db:
invalidate
keepBindAlive:
_next
_aliveBinds
_specUnion
_inUse
_isTraced
_specLength
bindParameter:spec:
numberWithBool:
numberWithChar:
numberWithUnsignedChar:
numberWithShort:
numberWithUnsignedShort:
numberWithLong:
numberWithUnsignedLong:
bindStringParameter:
bindDoubleParameter:
bindBooleanParameter:
bindCharParameter:
bindUnsignedCharParameter:
bindShortParameter:
bindUnsignedShortParameter:
bindIntegerParameter:
bindUnsignedIntegerParameter:
bindLongParameter:
bindUnsignedLongParameter:
bindObjectParameter:
_parameters
_spec
T@"NSError",&,N,VlastError
translate:withBuilder:
bindFromArray:db:
unsignedIntValue
encodeWithCoder:
initWithCoder:
q16@0:8
@16@0:8
B24@0:8q16
@24@0:8^{sqlite3=}16
@32@0:8^{sqlite3=}16^{sqlite3_stmt=}24
@32@0:8^{sqlite3=}16@24
@28@0:8i16@20
Q16@0:8
r^v16@0:8
v16@0:8
@32@0:8r^v16Q24
@24@0:8@16
@32@0:8@16@24
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
i28@0:8^{sqlite3_stmt=}16i24
@"NSData"16@0:8
@32@0:8r*16Q24
@32@0:8@16[1{__va_list_tag=II^v^v}]24
@"NSMutableArray"
v28@0:8^{sqlite3_stmt=}16i24
@28@0:8^{sqlite3_stmt=}16i24
@24@0:8^{sqlite3_value=}16
@32@0:8@16^@24
@32@0:8@"PQLResultSet"16^@24
@20@0:8B16
d16@0:8
v24@0:8Q16
v24@0:8@16
v36@0:8@16d24i32
v28@0:8d16i24
v32@0:8@16@?24
v24@0:8@?16
v20@0:8i16
i16@0:8
B24@0:8Q16
B36@0:8I16@?20@?28
B24@0:8@?16
B28@0:8I16@?20
v20@0:8B16
B36@0:8@16i24^@28
B36@0:8@16B24^@28
B24@0:8^@16
B36@0:8@16i24@?28
B32@0:8@16@?24
B28@0:8@16B24
B36@0:8@16B24[1{__va_list_tag=II^v^v}]28
B32@0:8@16[1{__va_list_tag=II^v^v}]24
@48@0:8#16:24@32[1{__va_list_tag=II^v^v}]40
@40@0:8#16:24@32
@40@0:8#16@24[1{__va_list_tag=II^v^v}]32
@32@0:8#16@24
@40@0:8@?16@24[1{__va_list_tag=II^v^v}]32
@32@0:8@?16@24
@?16@0:8
^{sqlite3=}16@0:8
^{sqlite3=}
@"NSObject<OS_os_transaction>"
@"NSObject<OS_dispatch_source>"
^{cache_s=}
@"NSObject<OS_dispatch_queue>"
@"NSString"
@"NSURL"
@"NSError"
@24@0:8@?16
B32@0:8@?16^@24
@32@0:8@?16^@24
@40@0:8#16@?24^@32
@40@0:8@?16@?24^@32
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
^{sqlite3_stmt=}16@0:8
B20@0:8B16
@32@0:8#16:24
@24@0:8#16
@20@0:8i16
@28@0:8#16i24
B20@0:8i16
c20@0:8i16
C20@0:8i16
s20@0:8i16
S20@0:8i16
i20@0:8i16
I20@0:8i16
q20@0:8i16
Q20@0:8i16
f20@0:8i16
d20@0:8i16
r*20@0:8i16
@24@0:8i16B20
@28@0:8@16i24
@24@0:8Q16
@"PQLStatement"
@"NSSet"
@"PQLConnection"
@40@0:8@16^B24[1{__va_list_tag=II^v^v}]32
B32@0:8r*16@24
@48@0:8@16[1{__va_list_tag=II^v^v}]24@32^{cache_s=}40
v32@0:8[1{__va_list_tag=II^v^v}]16@24
v32@0:8@16Q24
^{sqlite3_stmt=}
(?="inlined"[8C]"ptr"^C)
@28@0:8@16C24
@24@0:8d16
@20@0:8c16
@20@0:8C16
@20@0:8s16
@20@0:8S16
@20@0:8I16
@24@0:8q16
[1000C]
@40@0:8@?16@24^{cache_s=}32
v32@0:8@16@24
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@(#)PROGRAM:libprequelite  PROJECT:Prequelite-121
@^@"
$.=LUl
SqliteExtendedCode
SqliteSQL
SqliteErrorDomain
<PQLName %s>
NULL
<PQLRaw %s>
<PQLFormat %s>
cannot compile statement [%@] around [...%.10s...]
com.apple.prequelite
default
This result set has more than one column
B20@?0@"PQLConnection"8i16
busy handler called (%d) %@
 > %@
v32@?0@"PQLConnection"8@"PQLStatement"16@"NSError"24
Sqlite rollbacked transaction [%@] because of unrecoverable error [%@], aborting.
<%@:%p %@%s{batch:%d:%d txn:%d
 auto-commit:%d}>
 %d prepared statements
, %d busy:
    %s
-[PQLConnection _resetState]
PQLConnection.m
_db == nil
_suspendCaching == 0
_batchingTimer == nil
_batchingPolicyHandler == nil
_flushNotifications == nil
_savePointLevel == 0
_skipBatchStop == 0
!_batchStarted
com.apple.sqlite.%@
v8@?0
Invalid parameter not satisfying: %@
count > 0 || delay > 0
-[PQLConnection _batchStartIfNeeded:]
_useBatching && !_batchStarted
com.apple.prequelite.batch
Connection has been used after close (or before open)
connection is closed
-[PQLConnection _batchStopIfNeeded]
_useBatching && _batchStarted && !_savePointLevel && !_skipBatchStop
PRAGMA cache_size
-[PQLConnection _fireFlushNotifications]
!_batchStarted && !_savePointLevel && _useQueue
PRAGMA auto_vacuum
incremental
PRAGMA incremental_vacuum(%lld)
-[PQLConnection _vacuumIfNeeded]
!_savePointLevel
_vacuumTracker >= 0
PRAGMA page_count
PRAGMA freelist_count
main
full
barrier
F_FULLFSYNC
F_BARRIERFSYNC
-flush is invalid when in a savepoint
commit
savepoint savepoint_0
savepoint savepoint_1
savepoint savepoint_2
savepoint savepoint_3
savepoint savepoint_4
rollback to savepoint savepoint_0
rollback to savepoint savepoint_1
rollback to savepoint savepoint_2
rollback to savepoint savepoint_3
rollback to savepoint savepoint_4
release savepoint savepoint_0
release savepoint savepoint_1
release savepoint savepoint_2
release savepoint savepoint_3
release savepoint savepoint_4
completion handler passed and no serial Queue in use
flush notification makes no sense without batching or savepoints
PerformSuspendBatch makes no sense if batching isn't in use
com.apple.prequelite.transaction
savepoint savepoint_%d
rollback to savepoint savepoint_%d
release savepoint savepoint_%d
-[PQLConnection _performWithFlags:action:whenFlushed:]
B16@?0@"PQLConnection"8
PerformOnSerialQueue asked with no serial Queue in use
-openAtURL called twice
PRAGMA page_size
PRAGMA journal_mode
PRAGMA auto_vacuum = incremental
PRAGMA page_size = 4096
PRAGMA journal_mode = WAL
cannot set journal_mode to WAL
PRAGMA wal_autocheckpoint = 4000
cannot set wal_autocheckpoint to 4000
backup failed
invalid transactionType passed: %ld
PRAGMA synchronous
PRAGMA synchronous = 0
PRAGMA synchronous = 1
PRAGMA synchronous = 2
invalid synchronousMode passed: %ld
autoRollbackHandler should not be nil
this isn't an update, you should use -select instead
PRAGMA user_version
PRAGMA user_version = %ld
pragma freelist_count
pragma page_size
-[PQLConnection(Swift) fetchObjectOfClassSwift:query:error:]
_lastError
-[PQLConnection(Swift) fetchObjectSwift:query:error:]
__PQLCacheValueRelease
queue
begin transaction immediate
begin transaction deferred
begin transaction exclusive
busy handler called
no result found
<%@:%p {stmt: %@; row: %ld; closed:%s}>
-%s was called twice
PQLResultSet.m
[aClass instancesRespondToSelector:initializer]
%@ conforms neither to PQLValuable or PQLResultSetInitializer
@24@?0@"PQLResultSet"8^@16
<%@:%p {%s}>
INVALIDATED
PQLStatement.m
cannot bind a closed statement
cannot bind a statement in use
, %s
UINT
INT64
DOUBLE
TEXT
, %s(%@)
OBJECT
%s(%@)
BLOCK
warning: failed to archive error object %@
warning: failed to unarchive error object %@
Unable to create preprared cache for statements
Starting database batch on %@
Flushing database batch for timer on %@
unable to get cache_size, use default 500
Flushing database batch to reduce page cache pressure on %@
Flushing database batch for change count on %@
Flushing database batch (policy handler) on %@
warning: Incremental vacuum failed
AutoVacuum: evaluating mode for %@
AutoVacuum: non incremental mode detected for %@
AutoVacuum: Incremental mode detected for %@
AutoVacuum: unable to get page_count for %@
AutoVacuum: unable to get freelist_count for %@
AutoVacuum: used:%lld free:%lld load:%lld%% for %@
AutoVacuum: freed %lld pages for %@
%s fsyncing %@
Failed to %s the db for %@ - %@
Failed to open the db for fsync %@ - %@
Flushed %@
Can't set busy handler
opened %@
can't clear busy handler
closed %@
sqlite3_close(%@) failed: %@
sqlite3_close(%@) fails: [%s] isn't finalized
finished backup from %@ to %@, rc: %d
Safety level change from within a transaction
uncaching: <%@:%p>
connection:%@ sql:'%s'
found cached statement without injections
sql:  %@
stmt: %@
translated statement with%s injections
sql:   %@
trans: %s
found cached statement with injections
sql:  %@
stmt: %@
cached statement with%s injections
sql:  %@
stmt: %@
translated statement with injections
sql:   %@
trans: %s
cached statement with injections
sql:  %@
stmt: %@
binding values to statement
stmt: %@
binding: [%@]
PQLAdditions
PQLNameInjectionBase
PQLNameInjection
PQLInjecting
NSObject
PQLRawInjection
PQLFormatInjection
PQLBindable
PQLValuable
PQLResultSetInitializer
PQLConnection
Swift
PQLResultSet
PQLEnumeration
NSFastEnumeration
PQLStatement
PQLQueryBuilder
NSCoding
objCType
intValue
dictionaryWithCapacity:
handleFailureInMethod:object:file:lineNumber:description:
numberWithUnsignedShort:
code
numberWithLong:
unsignedIntegerValue
appendData:
unsignedIntValue
instancesRespondToSelector:
numberWithLongLong:
stringWithFormat:
numberWithBool:
encodedData
UTF8String
dateWithTimeIntervalSince1970:
initWithBytes:length:encoding:
errorWithDomain:code:userInfo:
numberWithUnsignedLong:
count
path
isEqualToString:
getUUIDBytes:
userInfo
stringByAppendingPathComponent:
dataWithBytesNoCopy:length:freeWhenDone:
encodeObject:forKey:
appendBytes:length:
removeObjectsInRange:
initWithFormat:
initWithUUIDBytes:
doubleValue
isEqualToNumber:
copy
null
setObject:forKeyedSubscript:
objectForKeyedSubscript:
addObject:
mutableBytes
numberWithInteger:
numberWithUnsignedInt:
decodeObjectOfClasses:forKey:
archivedDataWithRootObject:requiringSecureCoding:error:
removeObject:
appendString:
dataWithBytes:length:
timeIntervalSince1970
initRequiringSecureCoding:
initWithOptions:capacity:
decodeObjectOfClass:forKey:
absoluteString
numberWithUnsignedChar:
initForReadingFromData:error:
domain
initWithObjects:
numberWithInt:
integerValue
fileSystemRepresentation
lowercaseString
removeAllObjects
initWithUTF8String:
initWithBytesNoCopy:length:freeWhenDone:
numberWithShort:
unarchivedObjectOfClass:fromData:error:
initWithCapacity:
appendFormat:
numberWithDouble:
dictionaryWithObjects:forKeys:count:
currentHandler
numberWithChar:
propertyListWithData:options:format:error:
longLongValue
raise:format:
stringWithUTF8String:
extendedSqliteCode
sqliteStatement
isSqliteErrorCode:
errorForDB:
errorForDB:stmt:
errorForDB:SQL:
errorWithSqliteCode:andMessage:
dealloc
init
length
bytes
initWithBytes:length:
initWithData:
_length
_bytes
T@"NSData",R,N
_appendString:toInjection:
nameWithString:
nameWithPrefix:suffix:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
bindWithStatement:startingAtIndex:
bindValuesToKeepAlive
nameByAddingSuffix:
initWithString:
initialize
rawInjection:length:
initWithUTF8String:length:
sqliteBind:index:
formatInjection:
initWithFormat:arguments:
.cxx_destruct
_binds
newFromSqliteStatement:atIndex:
newFromSqliteValue:
initFromPQLResultSet:error:
_description:
_resetState
_createCacheIfNeeded
currentOperationDuration
statementCacheMaxCount
setStatementCacheMaxCount:
useSerialQueueWithTarget:
useSerialQueue
useBatchingOnTargetQueue:delay:changeCount:
useBatchingWithDelay:changeCount:
useBatchingOnTargetQueue:withPolicyHandler:
useBatchingWithPolicyHandler:
assertOnQueue
_batchStartIfNeeded:
forceBatchStart
_batchStopIfNeeded
_fireFlushNotifications
_vacuumMode
_incrementalVacuum:
_vacuumIfNeeded
_fullSync
flush
makeNextFlushBarrierFSync
makeNextFlushFullSync
_performWithFlags:action:whenFlushed:
isBatchSuspended
groupInBatch:
groupInTransaction:
performWithFlags:action:whenFlushed:
performWithFlags:action:
setTraced:
_clearCleanupCacheQueueIfNeeded
_clearStatementCache
openAtURL:withFlags:error:
openAtURL:sharedCache:error:
destroyDatabaseWithError:
setupPragmas
registerFunction:nArgs:handler:
close:
backupToURL:progress:
isInBatch
isInTransaction
lastInsertedRowID
setBatchTransactionType:
synchronousMode
setSynchronousMode:
setAutoRollbackHandler:
changes
_newStatementForFormat:arguments:
_executeStmt:mustSucceed:
_execute:mustSucceed:bindings:
execute:
execute:args:
executeRaw:
fetch:
fetch:args:
fetchObjectOfClass:initializer:sql:args:
fetchObjectOfClass:initializer:sql:
fetchObjectOfClass:sql:args:
fetchObjectOfClass:sql:
fetchObject:sql:args:
fetchObject:sql:
userVersion
setUserVersion:
autovacuumableSpaceInBytes
incrementalVacuum:
label
setLabel:
lockedHandler
setLockedHandler:
busyHandler
setBusyHandler:
autoRollbackHandler
sqliteErrorHandler
setSqliteErrorHandler:
preFlushHook
setPreFlushHook:
postFlushHook
setPostFlushHook:
profilingHook
setProfilingHook:
willBeginBatchingHook
setWillBeginBatchingHook:
didFinishBatchingHook
setDidFinishBatchingHook:
dbHandle
serialQueue
lastError
setLastError:
isTraced
crashIfUsedAfterClose
setCrashIfUsedAfterClose:
batchTransactionType
shouldUseWALJournalMode
setShouldUseWALJournalMode:
_currentStmtStart
_batchStarted
_suspendCaching
_savePointLevel
_skipBatchStop
_vacuumTracker
_flushNotifications
_batchingPolicyHandler
_batchingTimer
_batchingPeriod
_batchingChangesLimit
_batchingChangesCount
_cacheSize
_useBatching
_useQueue
_needsFullSync
_needsBarrierFSync
_preparedStatements
_stmtCacheSource
_stmtCacheCleanupQueue
_changesOverride
_targetQueue
_traced
_crashIfUsedAfterClose
_shouldUseWALJournalMode
_batchTransactionType
_label
_url
_lockedHandler
_busyHandler
_autoRollbackHandler
_sqliteErrorHandler
_preFlushHook
_postFlushHook
_profilingHook
_willBeginBatchingHook
_didFinishBatchingHook
_serialQueue
_lastError
T@"NSString",C,N,V_label
traced
TB,N,GisTraced,V_traced
TB,N,V_crashIfUsedAfterClose
T@"NSURL",R,C,N,V_url
T^{sqlite3=},R,N,V_db
TB,R,N
T@"NSError",&,N,V_lastError
Tq,R,N
TQ,N
T@"NSObject<OS_dispatch_queue>",R,N,V_serialQueue
Td,R,N
Ti,N,V_batchTransactionType
TB,N,V_shouldUseWALJournalMode
T@?,C,N,V_lockedHandler
T@?,C,N,V_busyHandler
T@?,C,N,V_autoRollbackHandler
T@?,C,N,V_sqliteErrorHandler
T@?,C,N,V_preFlushHook
T@?,C,N,V_postFlushHook
T@?,C,N,V_profilingHook
T@?,C,N,V_willBeginBatchingHook
T@?,C,N,V_didFinishBatchingHook
_newStatementForBuilder:
executeSwift:error:
fetchSwift:error:
fetchObjectOfClassSwift:query:error:
fetchObjectSwift:query:error:
enumerateObjectsOfClass:
countByEnumeratingWithState:objects:count:
nextObject
stmt
initWithStatement:usingDatabase:
close
_next:
onlyObjectOfClass:initializer:
onlyObjectOfClass:
onlyObject:
objectOfClass:
objectOfClass:initializer:
object:
next
columnNameAtIndex:
objectOfClass:atIndex:
boolAtIndex:
charAtIndex:
unsignedCharAtIndex:
shortAtIndex:
unsignedShortAtIndex:
intAtIndex:
unsignedIntAtIndex:
longAtIndex:
unsignedLongAtIndex:
longLongAtIndex:
unsignedLongLongAtIndex:
integerAtIndex:
unsignedIntegerAtIndex:
floatAtIndex:
doubleAtIndex:
UTF8StringAtIndex:
isNullAtIndex:
numberAtIndex:
dateAtIndex:
stringAtIndex:
dataAtIndex:
dataAtIndex:noCopy:
uuidAtIndex:
plistAtIndex:
defaultUnarchivingAllowedClasses
archivedObjectOfClass:atIndex:
archivedObjectOfClasses:atIndex:
unarchivedObjectOfClass:atIndex:
unarchivedObjectOfClasses:atIndex:
objectAtIndex:
objectAtIndexedSubscript:
enumerateObjectsOfClass:initializer:
enumerateObjects:
setDefaultUnarchivingAllowedClasses:
error
rowNumber
columns
_stmt
_objectsClass
_objectsClassInitializer
_hasValuable
_objectsConstructor
_lastEnumeratedObject
_inTransaction
_defaultUnarchivingAllowedClasses
_error
_rowNumber
_columns
T@"NSError",R,N,V_error
TQ,R,N,V_rowNumber
TQ,R,N,V_columns
T@"PQLConnection",R,N,V_db
T^{sqlite3_stmt=},R,N
T@"NSSet",&,N,V_defaultUnarchivingAllowedClasses
keepBindAlive:
translate:hasInjections:arguments:
_prepare:withDB:
initWithStatement:forDB:
initWithFormat:arguments:db:cache:
invalidate
bindArguments:db:
unbindForDB:returnedRows:
_next
_aliveBinds
_specUnion
_inUse
_isTraced
_specLength
bindParameter:spec:
bindStringParameter:
bindDoubleParameter:
bindBooleanParameter:
bindCharParameter:
bindUnsignedCharParameter:
bindShortParameter:
bindUnsignedShortParameter:
bindIntegerParameter:
bindUnsignedIntegerParameter:
bindLongParameter:
bindUnsignedLongParameter:
bindObjectParameter:
_parameters
_spec
T@"NSError",&,N,VlastError
translate:withBuilder:
initWithQueryBuilder:db:cache:
bindFromArray:db:
encodeWithCoder:
initWithCoder:
q16@0:8
@16@0:8
B24@0:8q16
@24@0:8^{sqlite3=}16
@32@0:8^{sqlite3=}16^{sqlite3_stmt=}24
@32@0:8^{sqlite3=}16@24
@28@0:8i16@20
Q16@0:8
r^v16@0:8
v16@0:8
@32@0:8r^v16Q24
@24@0:8@16
@32@0:8@16@24
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
i28@0:8^{sqlite3_stmt=}16i24
@"NSData"16@0:8
@32@0:8r*16Q24
@32@0:8@16*24
@"NSMutableArray"
v28@0:8^{sqlite3_stmt=}16i24
@28@0:8^{sqlite3_stmt=}16i24
@24@0:8^{sqlite3_value=}16
@32@0:8@16^@24
@32@0:8@"PQLResultSet"16^@24
@20@0:8B16
d16@0:8
v24@0:8Q16
v24@0:8@16
v36@0:8@16d24i32
v28@0:8d16i24
v32@0:8@16@?24
v24@0:8@?16
v20@0:8i16
i16@0:8
B24@0:8Q16
B36@0:8I16@?20@?28
B24@0:8@?16
B28@0:8I16@?20
v20@0:8B16
B36@0:8@16i24^@28
B36@0:8@16B24^@28
B24@0:8^@16
B36@0:8@16i24@?28
B32@0:8@16@?24
B28@0:8@16B24
B36@0:8@16B24*28
B32@0:8@16*24
@48@0:8#16:24@32*40
@40@0:8#16:24@32
@40@0:8#16@24*32
@32@0:8#16@24
@40@0:8@?16@24*32
@32@0:8@?16@24
@?16@0:8
^{sqlite3=}16@0:8
^{sqlite3=}
@"NSObject<OS_os_transaction>"
@"NSObject<OS_dispatch_source>"
^{cache_s=}
@"NSObject<OS_dispatch_queue>"
@"NSString"
@"NSURL"
@"NSError"
@24@0:8@?16
B32@0:8@?16^@24
@32@0:8@?16^@24
@40@0:8#16@?24^@32
@40@0:8@?16@?24^@32
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
^{sqlite3_stmt=}16@0:8
B20@0:8B16
@32@0:8#16:24
@24@0:8#16
@20@0:8i16
@28@0:8#16i24
B20@0:8i16
c20@0:8i16
C20@0:8i16
s20@0:8i16
S20@0:8i16
i20@0:8i16
I20@0:8i16
q20@0:8i16
Q20@0:8i16
f20@0:8i16
d20@0:8i16
r*20@0:8i16
@24@0:8i16B20
@28@0:8@16i24
@24@0:8Q16
@"PQLStatement"
@"NSSet"
@"PQLConnection"
@40@0:8@16^B24*32
B32@0:8r*16@24
@48@0:8@16*24@32^{cache_s=}40
v32@0:8*16@24
v32@0:8@16Q24
^{sqlite3_stmt=}
(?="inlined"[8C]"ptr"^C)
@28@0:8@16C24
@24@0:8d16
@20@0:8c16
@20@0:8C16
@20@0:8s16
@20@0:8S16
@20@0:8I16
@24@0:8q16
[1000C]
@40@0:8@?16@24^{cache_s=}32
v32@0:8@16@24
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
