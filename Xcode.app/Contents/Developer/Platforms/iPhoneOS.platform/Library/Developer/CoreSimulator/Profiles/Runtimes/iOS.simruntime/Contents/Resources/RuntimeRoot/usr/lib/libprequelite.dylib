@(#)PROGRAM:libprequelite  PROJECT:Prequelite-127
SqliteExtendedCode
SqliteSQL
SqliteErrorDomain
<PQLName %s>
NULL
<PQLRaw %s>
<PQLFormat %s>
cannot compile statement [%@] around [...%.10s...]
com.apple.prequelite
default
This result set has more than one column
B20@?0@"PQLConnection"8i16
busy handler called (%d) %@
 > %@
v32@?0@"PQLConnection"8@"PQLStatement"16@"NSError"24
Sqlite rollbacked transaction [%@] because of unrecoverable error [%@], aborting.
<%@:%p %@%s{batch:%d:%d txn:%d
 auto-commit:%d}>
 %d prepared statements
, %d busy:
    %s
-[PQLConnection _resetState]
PQLConnection.m
_db == nil
_suspendCaching == 0
_batchingTimer == nil
_batchingPolicyHandler == nil
_flushNotifications == nil
_savePointLevel == 0
_skipBatchStop == 0
!_batchStarted
com.apple.sqlite.%@
v8@?0
Invalid parameter not satisfying: %@
count > 0 || delay > 0
-[PQLConnection _batchStartIfNeeded:]
_useBatching && !_batchStarted
com.apple.prequelite.batch
Connection has been used after close (or before open)
connection is closed
-[PQLConnection _batchStopIfNeeded]
_useBatching && _batchStarted && !_savePointLevel && !_skipBatchStop
PRAGMA cache_size
-[PQLConnection _fireFlushNotifications]
!_batchStarted && !_savePointLevel && _useQueue
PRAGMA auto_vacuum
incremental
PRAGMA incremental_vacuum(%lld)
-[PQLConnection _vacuumIfNeeded]
!_savePointLevel
_vacuumTracker >= 0
PRAGMA page_count
PRAGMA freelist_count
main
full
barrier
F_FULLFSYNC
F_BARRIERFSYNC
-flush is invalid when in a savepoint
commit
savepoint savepoint_0
savepoint savepoint_1
savepoint savepoint_2
savepoint savepoint_3
savepoint savepoint_4
rollback to savepoint savepoint_0
rollback to savepoint savepoint_1
rollback to savepoint savepoint_2
rollback to savepoint savepoint_3
rollback to savepoint savepoint_4
release savepoint savepoint_0
release savepoint savepoint_1
release savepoint savepoint_2
release savepoint savepoint_3
release savepoint savepoint_4
completion handler passed and no serial Queue in use
flush notification makes no sense without batching or savepoints
PerformSuspendBatch makes no sense if batching isn't in use
com.apple.prequelite.transaction
savepoint savepoint_%d
rollback to savepoint savepoint_%d
release savepoint savepoint_%d
-[PQLConnection _performWithFlags:action:whenFlushed:]
B16@?0@"PQLConnection"8
PerformOnSerialQueue asked with no serial Queue in use
-openAtURL called twice
PRAGMA page_size
PRAGMA journal_mode
PRAGMA auto_vacuum = incremental
PRAGMA page_size = 4096
PRAGMA journal_mode = WAL
cannot set journal_mode to WAL
PRAGMA wal_autocheckpoint = 4000
cannot set wal_autocheckpoint to 4000
backup failed
invalid transactionType passed: %ld
PRAGMA synchronous
PRAGMA synchronous = 0
PRAGMA synchronous = 1
PRAGMA synchronous = 2
invalid synchronousMode passed: %ld
autoRollbackHandler should not be nil
this isn't an update, you should use -select instead
PRAGMA user_version
PRAGMA user_version = %ld
pragma freelist_count
pragma page_size
-[PQLConnection(Swift) fetchObjectOfClassSwift:query:error:]
_lastError
-[PQLConnection(Swift) fetchObjectSwift:query:error:]
__PQLCacheValueRelease
queue
begin transaction immediate
begin transaction deferred
begin transaction exclusive
busy handler called
no result found
<%@:%p {stmt: %@; row: %ld; closed:%s}>
-%s was called twice
PQLResultSet.m
[aClass instancesRespondToSelector:initializer]
%@ conforms neither to PQLValuable or PQLResultSetInitializer
@24@?0@"PQLResultSet"8^@16
<%@:%p {%s}>
INVALIDATED
PQLStatement.m
cannot bind a closed statement
cannot bind a statement in use
, %s
UINT
INT64
DOUBLE
TEXT
, %s(%@)
OBJECT
%s(%@)
BLOCK
warning: failed to archive error object %@
warning: failed to unarchive error object %@
Unable to create preprared cache for statements
Starting database batch on %@
Flushing database batch for timer on %@
unable to get cache_size, use default 500
Flushing database batch to reduce page cache pressure on %@
Flushing database batch for change count on %@
Flushing database batch (policy handler) on %@
warning: Incremental vacuum failed
AutoVacuum: evaluating mode for %@
AutoVacuum: non incremental mode detected for %@
AutoVacuum: Incremental mode detected for %@
AutoVacuum: unable to get page_count for %@
AutoVacuum: unable to get freelist_count for %@
AutoVacuum: used:%lld free:%lld load:%lld%% for %@
AutoVacuum: freed %lld pages for %@
%s fsyncing %@
Failed to %s the db for %@ - %@
Failed to open the db for fsync %@ - %@
Flushed %@
Can't set busy handler
opened %@
can't clear busy handler
closed %@
sqlite3_close(%@) failed: %@
sqlite3_close(%@) fails: [%s] isn't finalized
finished backup from %@ to %@, rc: %d
Safety level change from within a transaction
uncaching: <%@:%p>
connection:%@ sql:'%s'
found cached statement without injections
sql:  %@
stmt: %@
translated statement with%s injections
sql:   %@
trans: %s
found cached statement with injections
sql:  %@
stmt: %@
cached statement with%s injections
sql:  %@
stmt: %@
translated statement with injections
sql:   %@
trans: %s
cached statement with injections
sql:  %@
stmt: %@
binding values to statement
stmt: %@
binding: [%@]
PQLAdditions
PQLNameInjectionBase
PQLNameInjection
PQLInjecting
NSObject
PQLRawInjection
PQLFormatInjection
PQLBindable
PQLValuable
PQLResultSetInitializer
PQLConnection
Swift
PQLResultSet
PQLEnumeration
NSFastEnumeration
PQLStatement
PQLQueryBuilder
NSCoding
T@?,C,N,V_didFinishBatchingHook
T#,R
_batchingPeriod
T@"NSError",&,N,V_lastError
T@"NSError",R,N,V_error
_savePointLevel
T@"NSSet",&,N,V_defaultUnarchivingAllowedClasses
_traced
T@"NSString",R,C
changes
T@"PQLConnection",R,N,V_db
dealloc
T@?,C,N,V_busyHandler
errorWithSqliteCode:andMessage:
T@?,C,N,V_postFlushHook
initWithFormat:
T@?,C,N,V_profilingHook
integerAtIndex:
TB,N,GisTraced,V_traced
isProxy
TB,N,V_shouldUseWALJournalMode
nameWithString:
TQ,N
numberWithBool:
TQ,R,N,V_columns
numberWithLong:
T^{sqlite3=},R,N,V_db
registerFunction:nArgs:handler:
Td,R,N
setBusyHandler:
Tq,R,N
UTF8StringAtIndex:
stringByAppendingPathComponent:
_appendString:toInjection:
.cxx_destruct
T@?,C,N,V_willBeginBatchingHook
T@"NSData",R,N
_clearCleanupCacheQueueIfNeeded
T@"NSError",&,N,VlastError
_length
T@"NSObject<OS_dispatch_queue>",R,N,V_serialQueue
_suspendCaching
T@"NSString",C,N,V_label
_vacuumIfNeeded
T@"NSURL",R,C,N,V_url
columns
T@?,C,N,V_autoRollbackHandler
errorForDB:SQL:
T@?,C,N,V_lockedHandler
forceBatchStart
T@?,C,N,V_preFlushHook
initWithString:
T@?,C,N,V_sqliteErrorHandler
isInTransaction
TB,N,V_crashIfUsedAfterClose
lowercaseString
TB,R,N
newFromSqliteStatement:atIndex:
TQ,R
numberWithChar:
TQ,R,N,V_rowNumber
object:
T^{sqlite3_stmt=},R,N
release
Ti,N,V_batchTransactionType
setUserVersion:
UTF8String
sqliteStatement
_aliveBinds
synchronousMode
_autoRollbackHandler
_batchStartIfNeeded:
_batchStarted
_batchStopIfNeeded
_batchTransactionType
_batchingChangesCount
_batchingChangesLimit
_batchingPolicyHandler
_batchingTimer
_binds
_busyHandler
_bytes
_cacheSize
_changesOverride
_clearStatementCache
_columns
_crashIfUsedAfterClose
_createCacheIfNeeded
_currentStmtStart
_defaultUnarchivingAllowedClasses
_description:
_didFinishBatchingHook
_error
_execute:mustSucceed:bindings:
_executeStmt:mustSucceed:
_fireFlushNotifications
_flushNotifications
_fullSync
_hasValuable
_inTransaction
_inUse
_incrementalVacuum:
_isTraced
_label
_lastEnumeratedObject
_lastError
_lockedHandler
_needsBarrierFSync
_needsFullSync
_newStatementForBuilder:
_newStatementForFormat:arguments:
_next
_next:
_objectsClass
_objectsClassInitializer
_objectsConstructor
_parameters
_performWithFlags:action:whenFlushed:
_postFlushHook
_preFlushHook
_prepare:withDB:
_preparedStatements
_profilingHook
_resetState
_rowNumber
_serialQueue
_shouldUseWALJournalMode
_skipBatchStop
_spec
_specLength
_specUnion
_sqliteErrorHandler
_stmt
_stmtCacheCleanupQueue
_stmtCacheSource
_targetQueue
_url
_useBatching
_useQueue
_vacuumMode
_vacuumTracker
_willBeginBatchingHook
absoluteString
addObject:
appendBytes:length:
appendData:
appendFormat:
appendString:
archivedDataWithRootObject:requiringSecureCoding:error:
archivedObjectOfClass:atIndex:
archivedObjectOfClasses:atIndex:
assertOnQueue
autoRollbackHandler
autorelease
autovacuumableSpaceInBytes
backupToURL:progress:
batchTransactionType
bindArguments:db:
bindBooleanParameter:
bindCharParameter:
bindDoubleParameter:
bindFromArray:db:
bindIntegerParameter:
bindLongParameter:
bindObjectParameter:
bindParameter:spec:
bindShortParameter:
bindStringParameter:
bindUnsignedCharParameter:
bindUnsignedIntegerParameter:
bindUnsignedLongParameter:
bindUnsignedShortParameter:
bindValuesToKeepAlive
bindWithStatement:startingAtIndex:
boolAtIndex:
busyHandler
bytes
charAtIndex:
class
close
close:
code
columnNameAtIndex:
conformsToProtocol:
copy
count
countByEnumeratingWithState:objects:count:
crashIfUsedAfterClose
currentHandler
currentOperationDuration
dataAtIndex:
dataAtIndex:noCopy:
dataWithBytes:length:
dataWithBytesNoCopy:length:freeWhenDone:
dateAtIndex:
dateWithTimeIntervalSince1970:
dbHandle
debugDescription
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
defaultUnarchivingAllowedClasses
description
destroyDatabaseWithError:
dictionaryWithCapacity:
dictionaryWithObjects:forKeys:count:
didFinishBatchingHook
domain
doubleAtIndex:
doubleValue
encodeObject:forKey:
encodeWithCoder:
encodedData
enumerateObjects:
enumerateObjectsOfClass:
enumerateObjectsOfClass:initializer:
error
errorForDB:
errorForDB:stmt:
errorWithDomain:code:userInfo:
execute:
execute:args:
executeRaw:
executeSwift:error:
extendedSqliteCode
fetch:
fetch:args:
fetchObject:sql:
fetchObject:sql:args:
fetchObjectOfClass:initializer:sql:
fetchObjectOfClass:initializer:sql:args:
fetchObjectOfClass:sql:
fetchObjectOfClass:sql:args:
fetchObjectOfClassSwift:query:error:
fetchObjectSwift:query:error:
fetchSwift:error:
fileSystemRepresentation
floatAtIndex:
flush
formatInjection:
getUUIDBytes:
groupInBatch:
groupInTransaction:
handleFailureInMethod:object:file:lineNumber:description:
hash
incrementalVacuum:
init
initForReadingFromData:error:
initFromPQLResultSet:error:
initRequiringSecureCoding:
initWithBytes:length:
initWithBytes:length:encoding:
initWithBytesNoCopy:length:freeWhenDone:
initWithCapacity:
initWithCoder:
initWithData:
initWithFormat:arguments:
initWithFormat:arguments:db:cache:
initWithObjects:
initWithOptions:capacity:
initWithQueryBuilder:db:cache:
initWithStatement:forDB:
initWithStatement:usingDatabase:
initWithUTF8String:
initWithUTF8String:length:
initWithUUIDBytes:
initialize
instancesRespondToSelector:
intAtIndex:
intValue
integerValue
invalidate
isBatchSuspended
isEqual:
isEqualToNumber:
isEqualToString:
isInBatch
isKindOfClass:
isMemberOfClass:
isNullAtIndex:
isSqliteErrorCode:
isTraced
keepBindAlive:
label
lastError
lastInsertedRowID
length
lockedHandler
longAtIndex:
longLongAtIndex:
longLongValue
makeNextFlushBarrierFSync
makeNextFlushFullSync
mutableBytes
nameByAddingSuffix:
nameWithPrefix:suffix:
newFromSqliteValue:
next
nextObject
null
numberAtIndex:
numberWithDouble:
numberWithInt:
numberWithInteger:
numberWithLongLong:
numberWithShort:
numberWithUnsignedChar:
numberWithUnsignedInt:
numberWithUnsignedLong:
numberWithUnsignedShort:
objCType
objectAtIndex:
objectAtIndexedSubscript:
objectForKeyedSubscript:
objectOfClass:
objectOfClass:atIndex:
objectOfClass:initializer:
onlyObject:
onlyObjectOfClass:
onlyObjectOfClass:initializer:
openAtURL:sharedCache:error:
openAtURL:withFlags:error:
path
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performWithFlags:action:
performWithFlags:action:whenFlushed:
plistAtIndex:
postFlushHook
preFlushHook
profilingHook
propertyListWithData:options:format:error:
raise:format:
rawInjection:length:
removeAllObjects
removeObject:
removeObjectsInRange:
respondsToSelector:
retain
retainCount
rowNumber
self
serialQueue
setAutoRollbackHandler:
setBatchTransactionType:
setCrashIfUsedAfterClose:
setDefaultUnarchivingAllowedClasses:
setDidFinishBatchingHook:
setLabel:
setLastError:
setLockedHandler:
setObject:forKeyedSubscript:
setPostFlushHook:
setPreFlushHook:
setProfilingHook:
setShouldUseWALJournalMode:
setSqliteErrorHandler:
setStatementCacheMaxCount:
setSynchronousMode:
setTraced:
setWillBeginBatchingHook:
setupPragmas
shortAtIndex:
shouldUseWALJournalMode
sqliteBind:index:
sqliteErrorHandler
statementCacheMaxCount
stmt
stringAtIndex:
stringWithFormat:
stringWithUTF8String:
superclass
timeIntervalSince1970
traced
translate:hasInjections:arguments:
translate:withBuilder:
unarchivedObjectOfClass:atIndex:
unarchivedObjectOfClass:fromData:error:
unarchivedObjectOfClasses:atIndex:
unbindForDB:returnedRows:
unsignedCharAtIndex:
unsignedIntAtIndex:
unsignedIntValue
unsignedIntegerAtIndex:
unsignedIntegerValue
unsignedLongAtIndex:
unsignedLongLongAtIndex:
unsignedShortAtIndex:
useBatchingOnTargetQueue:delay:changeCount:
useBatchingOnTargetQueue:withPolicyHandler:
useBatchingWithDelay:changeCount:
useBatchingWithPolicyHandler:
useSerialQueue
useSerialQueueWithTarget:
userInfo
userVersion
uuidAtIndex:
willBeginBatchingHook
zone
q16@0:8
@16@0:8
B24@0:8q16
@24@0:8^{sqlite3=}16
@32@0:8^{sqlite3=}16^{sqlite3_stmt=}24
@32@0:8^{sqlite3=}16@24
@28@0:8i16@20
Q16@0:8
r^v16@0:8
v16@0:8
@32@0:8r^v16Q24
@24@0:8@16
@32@0:8@16@24
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
i28@0:8^{sqlite3_stmt=}16i24
@"NSData"16@0:8
@32@0:8r*16Q24
@32@0:8@16[1{__va_list_tag=II^v^v}]24
@"NSMutableArray"
v28@0:8^{sqlite3_stmt=}16i24
@28@0:8^{sqlite3_stmt=}16i24
@24@0:8^{sqlite3_value=}16
@32@0:8@16^@24
@32@0:8@"PQLResultSet"16^@24
@20@0:8B16
d16@0:8
v24@0:8Q16
v24@0:8@16
v36@0:8@16d24i32
v28@0:8d16i24
v32@0:8@16@?24
v24@0:8@?16
v20@0:8i16
i16@0:8
B24@0:8Q16
B36@0:8I16@?20@?28
B24@0:8@?16
B28@0:8I16@?20
v20@0:8B16
B36@0:8@16i24^@28
B36@0:8@16B24^@28
B24@0:8^@16
B36@0:8@16i24@?28
B32@0:8@16@?24
B28@0:8@16B24
B36@0:8@16B24[1{__va_list_tag=II^v^v}]28
B32@0:8@16[1{__va_list_tag=II^v^v}]24
@48@0:8#16:24@32[1{__va_list_tag=II^v^v}]40
@40@0:8#16:24@32
@40@0:8#16@24[1{__va_list_tag=II^v^v}]32
@32@0:8#16@24
@40@0:8@?16@24[1{__va_list_tag=II^v^v}]32
@32@0:8@?16@24
@?16@0:8
^{sqlite3=}16@0:8
^{sqlite3=}
@"NSObject<OS_os_transaction>"
@"NSObject<OS_dispatch_source>"
^{cache_s=}
@"NSObject<OS_dispatch_queue>"
@"NSString"
@"NSURL"
@"NSError"
@24@0:8@?16
B32@0:8@?16^@24
@32@0:8@?16^@24
@40@0:8#16@?24^@32
@40@0:8@?16@?24^@32
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
^{sqlite3_stmt=}16@0:8
B20@0:8B16
@32@0:8#16:24
@24@0:8#16
@20@0:8i16
@28@0:8#16i24
B20@0:8i16
c20@0:8i16
C20@0:8i16
s20@0:8i16
S20@0:8i16
i20@0:8i16
I20@0:8i16
q20@0:8i16
Q20@0:8i16
f20@0:8i16
d20@0:8i16
r*20@0:8i16
@24@0:8i16B20
@28@0:8@16i24
@24@0:8Q16
@"PQLStatement"
@"NSSet"
@"PQLConnection"
@40@0:8@16^B24[1{__va_list_tag=II^v^v}]32
B32@0:8r*16@24
@48@0:8@16[1{__va_list_tag=II^v^v}]24@32^{cache_s=}40
v32@0:8[1{__va_list_tag=II^v^v}]16@24
v32@0:8@16Q24
^{sqlite3_stmt=}
(?="inlined"[8C]"ptr"^C)
@28@0:8@16C24
@24@0:8d16
@20@0:8c16
@20@0:8C16
@20@0:8s16
@20@0:8S16
@20@0:8I16
@24@0:8q16
[1000C]
@40@0:8@?16@24^{cache_s=}32
v32@0:8@16@24
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@(#)PROGRAM:libprequelite  PROJECT:Prequelite-127
$.=LUl
SqliteExtendedCode
SqliteSQL
SqliteErrorDomain
<PQLName %s>
NULL
<PQLRaw %s>
<PQLFormat %s>
cannot compile statement [%@] around [...%.10s...]
com.apple.prequelite
default
This result set has more than one column
B20@?0@"PQLConnection"8i16
busy handler called (%d) %@
 > %@
v32@?0@"PQLConnection"8@"PQLStatement"16@"NSError"24
Sqlite rollbacked transaction [%@] because of unrecoverable error [%@], aborting.
<%@:%p %@%s{batch:%d:%d txn:%d
 auto-commit:%d}>
 %d prepared statements
, %d busy:
    %s
-[PQLConnection _resetState]
PQLConnection.m
_db == nil
_suspendCaching == 0
_batchingTimer == nil
_batchingPolicyHandler == nil
_flushNotifications == nil
_savePointLevel == 0
_skipBatchStop == 0
!_batchStarted
com.apple.sqlite.%@
v8@?0
Invalid parameter not satisfying: %@
count > 0 || delay > 0
-[PQLConnection _batchStartIfNeeded:]
_useBatching && !_batchStarted
com.apple.prequelite.batch
Connection has been used after close (or before open)
connection is closed
-[PQLConnection _batchStopIfNeeded]
_useBatching && _batchStarted && !_savePointLevel && !_skipBatchStop
PRAGMA cache_size
-[PQLConnection _fireFlushNotifications]
!_batchStarted && !_savePointLevel && _useQueue
PRAGMA auto_vacuum
incremental
PRAGMA incremental_vacuum(%lld)
-[PQLConnection _vacuumIfNeeded]
!_savePointLevel
_vacuumTracker >= 0
PRAGMA page_count
PRAGMA freelist_count
main
full
barrier
F_FULLFSYNC
F_BARRIERFSYNC
-flush is invalid when in a savepoint
commit
savepoint savepoint_0
savepoint savepoint_1
savepoint savepoint_2
savepoint savepoint_3
savepoint savepoint_4
rollback to savepoint savepoint_0
rollback to savepoint savepoint_1
rollback to savepoint savepoint_2
rollback to savepoint savepoint_3
rollback to savepoint savepoint_4
release savepoint savepoint_0
release savepoint savepoint_1
release savepoint savepoint_2
release savepoint savepoint_3
release savepoint savepoint_4
completion handler passed and no serial Queue in use
flush notification makes no sense without batching or savepoints
PerformSuspendBatch makes no sense if batching isn't in use
com.apple.prequelite.transaction
savepoint savepoint_%d
rollback to savepoint savepoint_%d
release savepoint savepoint_%d
-[PQLConnection _performWithFlags:action:whenFlushed:]
B16@?0@"PQLConnection"8
PerformOnSerialQueue asked with no serial Queue in use
-openAtURL called twice
PRAGMA page_size
PRAGMA journal_mode
PRAGMA auto_vacuum = incremental
PRAGMA page_size = 4096
PRAGMA journal_mode = WAL
cannot set journal_mode to WAL
PRAGMA wal_autocheckpoint = 4000
cannot set wal_autocheckpoint to 4000
backup failed
invalid transactionType passed: %ld
PRAGMA synchronous
PRAGMA synchronous = 0
PRAGMA synchronous = 1
PRAGMA synchronous = 2
invalid synchronousMode passed: %ld
autoRollbackHandler should not be nil
this isn't an update, you should use -select instead
PRAGMA user_version
PRAGMA user_version = %ld
pragma freelist_count
pragma page_size
-[PQLConnection(Swift) fetchObjectOfClassSwift:query:error:]
_lastError
-[PQLConnection(Swift) fetchObjectSwift:query:error:]
__PQLCacheValueRelease
queue
begin transaction immediate
begin transaction deferred
begin transaction exclusive
busy handler called
no result found
<%@:%p {stmt: %@; row: %ld; closed:%s}>
-%s was called twice
PQLResultSet.m
[aClass instancesRespondToSelector:initializer]
%@ conforms neither to PQLValuable or PQLResultSetInitializer
@24@?0@"PQLResultSet"8^@16
<%@:%p {%s}>
INVALIDATED
PQLStatement.m
cannot bind a closed statement
cannot bind a statement in use
, %s
UINT
INT64
DOUBLE
TEXT
, %s(%@)
OBJECT
%s(%@)
BLOCK
warning: failed to archive error object %@
warning: failed to unarchive error object %@
Unable to create preprared cache for statements
Starting database batch on %@
Flushing database batch for timer on %@
unable to get cache_size, use default 500
Flushing database batch to reduce page cache pressure on %@
Flushing database batch for change count on %@
Flushing database batch (policy handler) on %@
warning: Incremental vacuum failed
AutoVacuum: evaluating mode for %@
AutoVacuum: non incremental mode detected for %@
AutoVacuum: Incremental mode detected for %@
AutoVacuum: unable to get page_count for %@
AutoVacuum: unable to get freelist_count for %@
AutoVacuum: used:%lld free:%lld load:%lld%% for %@
AutoVacuum: freed %lld pages for %@
%s fsyncing %@
Failed to %s the db for %@ - %@
Failed to open the db for fsync %@ - %@
Flushed %@
Can't set busy handler
opened %@
can't clear busy handler
closed %@
sqlite3_close(%@) failed: %@
sqlite3_close(%@) fails: [%s] isn't finalized
finished backup from %@ to %@, rc: %d
Safety level change from within a transaction
uncaching: <%@:%p>
connection:%@ sql:'%s'
found cached statement without injections
sql:  %@
stmt: %@
translated statement with%s injections
sql:   %@
trans: %s
found cached statement with injections
sql:  %@
stmt: %@
cached statement with%s injections
sql:  %@
stmt: %@
translated statement with injections
sql:   %@
trans: %s
cached statement with injections
sql:  %@
stmt: %@
binding values to statement
stmt: %@
binding: [%@]
PQLAdditions
PQLNameInjectionBase
PQLNameInjection
PQLInjecting
NSObject
PQLRawInjection
PQLFormatInjection
PQLBindable
PQLValuable
PQLResultSetInitializer
PQLConnection
Swift
PQLResultSet
PQLEnumeration
NSFastEnumeration
PQLStatement
PQLQueryBuilder
NSCoding
T@?,C,N,V_didFinishBatchingHook
T#,R
_batchingPeriod
T@"NSError",&,N,V_lastError
T@"NSError",R,N,V_error
_savePointLevel
T@"NSSet",&,N,V_defaultUnarchivingAllowedClasses
_traced
T@"NSString",R,C
changes
T@"PQLConnection",R,N,V_db
dealloc
T@?,C,N,V_busyHandler
errorWithSqliteCode:andMessage:
T@?,C,N,V_postFlushHook
initWithFormat:
T@?,C,N,V_profilingHook
integerAtIndex:
TB,N,GisTraced,V_traced
isProxy
TB,N,V_shouldUseWALJournalMode
nameWithString:
TQ,N
numberWithBool:
TQ,R,N,V_columns
numberWithLong:
T^{sqlite3=},R,N,V_db
registerFunction:nArgs:handler:
Td,R,N
setBusyHandler:
Tq,R,N
UTF8StringAtIndex:
stringByAppendingPathComponent:
_appendString:toInjection:
.cxx_destruct
T@?,C,N,V_willBeginBatchingHook
T@"NSData",R,N
_clearCleanupCacheQueueIfNeeded
T@"NSError",&,N,VlastError
_length
T@"NSObject<OS_dispatch_queue>",R,N,V_serialQueue
_suspendCaching
T@"NSString",C,N,V_label
_vacuumIfNeeded
T@"NSURL",R,C,N,V_url
columns
T@?,C,N,V_autoRollbackHandler
errorForDB:SQL:
T@?,C,N,V_lockedHandler
forceBatchStart
T@?,C,N,V_preFlushHook
initWithString:
T@?,C,N,V_sqliteErrorHandler
isInTransaction
TB,N,V_crashIfUsedAfterClose
lowercaseString
TB,R,N
newFromSqliteStatement:atIndex:
TQ,R
numberWithChar:
TQ,R,N,V_rowNumber
object:
T^{sqlite3_stmt=},R,N
release
Ti,N,V_batchTransactionType
setUserVersion:
UTF8String
sqliteStatement
_aliveBinds
synchronousMode
_autoRollbackHandler
_batchStartIfNeeded:
_batchStarted
_batchStopIfNeeded
_batchTransactionType
_batchingChangesCount
_batchingChangesLimit
_batchingPolicyHandler
_batchingTimer
_binds
_busyHandler
_bytes
_cacheSize
_changesOverride
_clearStatementCache
_columns
_crashIfUsedAfterClose
_createCacheIfNeeded
_currentStmtStart
_defaultUnarchivingAllowedClasses
_description:
_didFinishBatchingHook
_error
_execute:mustSucceed:bindings:
_executeStmt:mustSucceed:
_fireFlushNotifications
_flushNotifications
_fullSync
_hasValuable
_inTransaction
_inUse
_incrementalVacuum:
_isTraced
_label
_lastEnumeratedObject
_lastError
_lockedHandler
_needsBarrierFSync
_needsFullSync
_newStatementForBuilder:
_newStatementForFormat:arguments:
_next
_next:
_objectsClass
_objectsClassInitializer
_objectsConstructor
_parameters
_performWithFlags:action:whenFlushed:
_postFlushHook
_preFlushHook
_prepare:withDB:
_preparedStatements
_profilingHook
_resetState
_rowNumber
_serialQueue
_shouldUseWALJournalMode
_skipBatchStop
_spec
_specLength
_specUnion
_sqliteErrorHandler
_stmt
_stmtCacheCleanupQueue
_stmtCacheSource
_targetQueue
_url
_useBatching
_useQueue
_vacuumMode
_vacuumTracker
_willBeginBatchingHook
absoluteString
addObject:
appendBytes:length:
appendData:
appendFormat:
appendString:
archivedDataWithRootObject:requiringSecureCoding:error:
archivedObjectOfClass:atIndex:
archivedObjectOfClasses:atIndex:
assertOnQueue
autoRollbackHandler
autorelease
autovacuumableSpaceInBytes
backupToURL:progress:
batchTransactionType
bindArguments:db:
bindBooleanParameter:
bindCharParameter:
bindDoubleParameter:
bindFromArray:db:
bindIntegerParameter:
bindLongParameter:
bindObjectParameter:
bindParameter:spec:
bindShortParameter:
bindStringParameter:
bindUnsignedCharParameter:
bindUnsignedIntegerParameter:
bindUnsignedLongParameter:
bindUnsignedShortParameter:
bindValuesToKeepAlive
bindWithStatement:startingAtIndex:
boolAtIndex:
busyHandler
bytes
charAtIndex:
class
close
close:
code
columnNameAtIndex:
conformsToProtocol:
copy
count
countByEnumeratingWithState:objects:count:
crashIfUsedAfterClose
currentHandler
currentOperationDuration
dataAtIndex:
dataAtIndex:noCopy:
dataWithBytes:length:
dataWithBytesNoCopy:length:freeWhenDone:
dateAtIndex:
dateWithTimeIntervalSince1970:
dbHandle
debugDescription
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
defaultUnarchivingAllowedClasses
description
destroyDatabaseWithError:
dictionaryWithCapacity:
dictionaryWithObjects:forKeys:count:
didFinishBatchingHook
domain
doubleAtIndex:
doubleValue
encodeObject:forKey:
encodeWithCoder:
encodedData
enumerateObjects:
enumerateObjectsOfClass:
enumerateObjectsOfClass:initializer:
error
errorForDB:
errorForDB:stmt:
errorWithDomain:code:userInfo:
execute:
execute:args:
executeRaw:
executeSwift:error:
extendedSqliteCode
fetch:
fetch:args:
fetchObject:sql:
fetchObject:sql:args:
fetchObjectOfClass:initializer:sql:
fetchObjectOfClass:initializer:sql:args:
fetchObjectOfClass:sql:
fetchObjectOfClass:sql:args:
fetchObjectOfClassSwift:query:error:
fetchObjectSwift:query:error:
fetchSwift:error:
fileSystemRepresentation
floatAtIndex:
flush
formatInjection:
getUUIDBytes:
groupInBatch:
groupInTransaction:
handleFailureInMethod:object:file:lineNumber:description:
hash
incrementalVacuum:
init
initForReadingFromData:error:
initFromPQLResultSet:error:
initRequiringSecureCoding:
initWithBytes:length:
initWithBytes:length:encoding:
initWithBytesNoCopy:length:freeWhenDone:
initWithCapacity:
initWithCoder:
initWithData:
initWithFormat:arguments:
initWithFormat:arguments:db:cache:
initWithObjects:
initWithOptions:capacity:
initWithQueryBuilder:db:cache:
initWithStatement:forDB:
initWithStatement:usingDatabase:
initWithUTF8String:
initWithUTF8String:length:
initWithUUIDBytes:
initialize
instancesRespondToSelector:
intAtIndex:
intValue
integerValue
invalidate
isBatchSuspended
isEqual:
isEqualToNumber:
isEqualToString:
isInBatch
isKindOfClass:
isMemberOfClass:
isNullAtIndex:
isSqliteErrorCode:
isTraced
keepBindAlive:
label
lastError
lastInsertedRowID
length
lockedHandler
longAtIndex:
longLongAtIndex:
longLongValue
makeNextFlushBarrierFSync
makeNextFlushFullSync
mutableBytes
nameByAddingSuffix:
nameWithPrefix:suffix:
newFromSqliteValue:
next
nextObject
null
numberAtIndex:
numberWithDouble:
numberWithInt:
numberWithInteger:
numberWithLongLong:
numberWithShort:
numberWithUnsignedChar:
numberWithUnsignedInt:
numberWithUnsignedLong:
numberWithUnsignedShort:
objCType
objectAtIndex:
objectAtIndexedSubscript:
objectForKeyedSubscript:
objectOfClass:
objectOfClass:atIndex:
objectOfClass:initializer:
onlyObject:
onlyObjectOfClass:
onlyObjectOfClass:initializer:
openAtURL:sharedCache:error:
openAtURL:withFlags:error:
path
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performWithFlags:action:
performWithFlags:action:whenFlushed:
plistAtIndex:
postFlushHook
preFlushHook
profilingHook
propertyListWithData:options:format:error:
raise:format:
rawInjection:length:
removeAllObjects
removeObject:
removeObjectsInRange:
respondsToSelector:
retain
retainCount
rowNumber
self
serialQueue
setAutoRollbackHandler:
setBatchTransactionType:
setCrashIfUsedAfterClose:
setDefaultUnarchivingAllowedClasses:
setDidFinishBatchingHook:
setLabel:
setLastError:
setLockedHandler:
setObject:forKeyedSubscript:
setPostFlushHook:
setPreFlushHook:
setProfilingHook:
setShouldUseWALJournalMode:
setSqliteErrorHandler:
setStatementCacheMaxCount:
setSynchronousMode:
setTraced:
setWillBeginBatchingHook:
setupPragmas
shortAtIndex:
shouldUseWALJournalMode
sqliteBind:index:
sqliteErrorHandler
statementCacheMaxCount
stmt
stringAtIndex:
stringWithFormat:
stringWithUTF8String:
superclass
timeIntervalSince1970
traced
translate:hasInjections:arguments:
translate:withBuilder:
unarchivedObjectOfClass:atIndex:
unarchivedObjectOfClass:fromData:error:
unarchivedObjectOfClasses:atIndex:
unbindForDB:returnedRows:
unsignedCharAtIndex:
unsignedIntAtIndex:
unsignedIntValue
unsignedIntegerAtIndex:
unsignedIntegerValue
unsignedLongAtIndex:
unsignedLongLongAtIndex:
unsignedShortAtIndex:
useBatchingOnTargetQueue:delay:changeCount:
useBatchingOnTargetQueue:withPolicyHandler:
useBatchingWithDelay:changeCount:
useBatchingWithPolicyHandler:
useSerialQueue
useSerialQueueWithTarget:
userInfo
userVersion
uuidAtIndex:
willBeginBatchingHook
zone
q16@0:8
@16@0:8
B24@0:8q16
@24@0:8^{sqlite3=}16
@32@0:8^{sqlite3=}16^{sqlite3_stmt=}24
@32@0:8^{sqlite3=}16@24
@28@0:8i16@20
Q16@0:8
r^v16@0:8
v16@0:8
@32@0:8r^v16Q24
@24@0:8@16
@32@0:8@16@24
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
i28@0:8^{sqlite3_stmt=}16i24
@"NSData"16@0:8
@32@0:8r*16Q24
@32@0:8@16*24
@"NSMutableArray"
v28@0:8^{sqlite3_stmt=}16i24
@28@0:8^{sqlite3_stmt=}16i24
@24@0:8^{sqlite3_value=}16
@32@0:8@16^@24
@32@0:8@"PQLResultSet"16^@24
@20@0:8B16
d16@0:8
v24@0:8Q16
v24@0:8@16
v36@0:8@16d24i32
v28@0:8d16i24
v32@0:8@16@?24
v24@0:8@?16
v20@0:8i16
i16@0:8
B24@0:8Q16
B36@0:8I16@?20@?28
B24@0:8@?16
B28@0:8I16@?20
v20@0:8B16
B36@0:8@16i24^@28
B36@0:8@16B24^@28
B24@0:8^@16
B36@0:8@16i24@?28
B32@0:8@16@?24
B28@0:8@16B24
B36@0:8@16B24*28
B32@0:8@16*24
@48@0:8#16:24@32*40
@40@0:8#16:24@32
@40@0:8#16@24*32
@32@0:8#16@24
@40@0:8@?16@24*32
@32@0:8@?16@24
@?16@0:8
^{sqlite3=}16@0:8
^{sqlite3=}
@"NSObject<OS_os_transaction>"
@"NSObject<OS_dispatch_source>"
^{cache_s=}
@"NSObject<OS_dispatch_queue>"
@"NSString"
@"NSURL"
@"NSError"
@24@0:8@?16
B32@0:8@?16^@24
@32@0:8@?16^@24
@40@0:8#16@?24^@32
@40@0:8@?16@?24^@32
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
^{sqlite3_stmt=}16@0:8
B20@0:8B16
@32@0:8#16:24
@24@0:8#16
@20@0:8i16
@28@0:8#16i24
B20@0:8i16
c20@0:8i16
C20@0:8i16
s20@0:8i16
S20@0:8i16
i20@0:8i16
I20@0:8i16
q20@0:8i16
Q20@0:8i16
f20@0:8i16
d20@0:8i16
r*20@0:8i16
@24@0:8i16B20
@28@0:8@16i24
@24@0:8Q16
@"PQLStatement"
@"NSSet"
@"PQLConnection"
@40@0:8@16^B24*32
B32@0:8r*16@24
@48@0:8@16*24@32^{cache_s=}40
v32@0:8*16@24
v32@0:8@16Q24
^{sqlite3_stmt=}
(?="inlined"[8C]"ptr"^C)
@28@0:8@16C24
@24@0:8d16
@20@0:8c16
@20@0:8C16
@20@0:8s16
@20@0:8S16
@20@0:8I16
@24@0:8q16
[1000C]
@40@0:8@?16@24^{cache_s=}32
v32@0:8@16@24
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
