@(#)PROGRAM:Notes  PROJECT:Ironcade-2236
NoteContextWillSaveNotification
NoteContextDeletedNotesNotification
NoteContextChangedElsewhereNotification
NoteContextUpdatedIndexNotification
NoteContextDarwinNotificationWithoutLoggedChanges
NoteContextDarwinNotificationWithLoggedChanges
local://local/account
local://local/store
LastTransactionID
LocalAccountAndStoreAlreadySetUp
LastIndexTidAlreadySetUp
ShouldLogIndexing
LOCAL_NOTES_STORE
Account
accountIdentifier == %@
com.apple.notes
Accounts
Property
propertyKey == %@
HTML
v8@?0
com.apple.notes.autoincrement.lock
com.apple.notes.objectcreation.lock
((deletedFlag == %@) AND (body.content != nil) AND (isBookkeepingEntry == %@))
((deletedFlag == %@) AND (isBookkeepingEntry == %@))
((body.content = nil) AND (isBookkeepingEntry == %@))
store != nil
store.name
name
Store
Note
self IN %@
NoteBody
NoteAttachment
CoreData
(integerId IN %@)
(guid ==[c] %@)
(externalIdentifier == %@)
B32@?0@"NoteStoreObject"8Q16^B24
%K IN %@
account
com.apple.mobilenotes
DefaultNotesAccount
note.store.account == %@
DeviceSyncAnchorKey
ComputerSyncAnchorKey
NextId
integerId
max:
maxId
counter
notes.sqlite
notes.idx
Backups
yyyy-MM-dd_HH-mm-ss
Backup-%@-%@
sqlite-wal
sqlite-shm
NotesModel
momd
v24@?0@"NSPersistentStoreDescription"8@"NSError"16
__objc_no
+[NoteContext persistentStoreCoordinator]_block_invoke
Failed to open HTML notes database.
dataaccessd
exchangesyncd
NoteChange
store
NoteNote
MarkNotesDeleted
NoteCollectionType
NoteCollectionPrimaryIdentifier
NoteCollectionSecondaryIdentifier
(store == %@) AND (serverId IN %@)
(store == %@) AND (integerId IN %@)
(store == %@) AND (guid IN %@)
(store == %@) AND (externalServerIntId IN %@)
externalServerIntId
(store == %@) AND (externalServerIntId >= %d) AND (externalServerIntId < %d)
Unresolved error while getting max server int id in store %@.
Error: %@, %@
externalSequenceNumber
Unresolved error while getting min sequence number in store %@.
Error: %@, %@
store == %@
MessageFileWrapper
path
filename
preferredFilename
data
attributes
linkDestination
Error getting default account: %@, %@
owner
MFRestrictMessageTransfersToOtherAccounts
(store IN %@)
(account == %@) AND (externalIdentifier == %@)
Error getting store for external identifier %@: %@, %@
MCAccountIsManaged
Tried to use default store not from within account's stores.
reason
MCProfileConnection
Unable to find class %s
Note Collection
Notes
All %@
Migration
externalRepresentation
contentID
mimeType
NoteToNote
Can't find destination note for attachment with CID: %@
note
v16@?0@"NSString"8
note.body.externalRepresentation
Can't read archive for attachment: %@
No mapping claim to be able to migrate storeMetadata: %@
No mapping model specified
Error removing tmp directory: %@
tmpDB.sqlite
 -> 
Attachments
DidChooseToMigrate
ExternalSequenceNumber
NotesModelServerIntId
64bitServerIntId
DeletedNoteFlag
OptionalBodyContent
BookkeepingFlag
RequiredBookkeepingFlag
TemporaryIDs
Unexpected error building mapping model for store metadata: %@, error: %@
<%@: %p ; %@>
DeviceLocalAccount
NotesAccountUtilitiesDidUpdateAccounts
Failed to save after updating accounts infos: %@
ACUILocalization
com.apple.notes.htmlnoteitemprovider
The body object is of an unexpected type - %@ %@
NEW_NOTE
New Note
title
deletedFlag
Legacy
modificationDate
SearchIndexer
didChooseToMigrate
attachmentFile
attachments
Can't remove attachment data at path: %@, error: %@
Can't remove attachment folder at path: %@, error: %@
Can't set data protection class for attachment at path: %@, error: %@
Can't get data protection class for attachment at path: %@, error: %@
body.content
NOTE_LIST_ATTACHMENTS_%lu
com.apple.notes.spotlightrecord
NoteStoreHasMismatchedNoteBodies
creation_date
summary
content
contains_cjk
modification_date
author
content_type
ORDER BY modification_date DESC
SELECT rowid FROM note_bodies WHERE note_id = ?;
main
note_bodies
Couldn't find the note body for a note
__LoadContent
NoteStore.m
SQLITE_OK == err
INSERT OR REPLACE INTO note_bodies VALUES (?, ?);
SELECT 1 FROM Note WHERE ROWID = ?;
CREATE TABLE note_bodies (note_id INTEGER, data, UNIQUE(note_id))
CREATE TRIGGER delete_note_bodies AFTER DELETE ON Note
BEGIN
DELETE FROM note_bodies WHERE note_id = OLD.ROWID;
END;
DELETE FROM note_bodies WHERE 0 = (SELECT COUNT(ROWID) FROM Note WHERE Note.ROWID = note_id LIMIT 1);
alter table Note rename to Note_old;
insert into Note (ROWID, creation_date, title, summary, contains_cjk, modification_date, author, content_type) select ROWID, creation_date, title, summary, 0, creation_date, NULL, 0 from Note_old;
drop table Note_old;
insert into Note (ROWID, creation_date, title, summary, contains_cjk, modification_date, author, content_type) select ROWID, creation_date, title, summary, contains_cjk, creation_date, NULL, 0 from Note_old
notes.db
/Library/Notes/
Error getting local account: %@, %@
Error: found %lu local accounts, deleting all but one
Error fetching last transaction ID: %@, %@
Problem with duplicates: found %lu transaction IDs.  Will delete all but one.
Error: Couldn't save newly created unique objects: %@, %@
All references to managed objects should be tossed, since the Core Data stack was blown away.
Removing sqlite and index files
Can't remove sqlite and idx files: %@
Error: Problem performing fetch for NotesListController: %@, %@
Can't batch fault objects: %@, with error: %@
Trying to delete an object from an HTML account, but the object has a nil object ID: %@
Saving legacy context
Error saving silently: %@
Database is corrupt
Error getting notes with integer IDs: %@, %@
Error getting note with guid (%@):  %@, %@
Error getting folder with external identifier (%@):  %@, %@
Error getting list of all stores: %@, %@
Found no stores in [NoteContext allStores].  Will attempt to recover.
Error fetching stores: %@
Found no stores in [NoteContext countOfStores].  Will attempt to recover.
Error getting list of all accounts: %@, %@
Found no accounts in [NoteContext allAccounts].  Will attempt to recover.
Error getting account for account identifier %@: %@, %@
Error getting default account: %@, %@
Serious error: should have exactly one default notes account but have %lu instead.  Recovering.
Error getting file directory URL for attachment: %@
Error removing attachment file: %@
Failed to get attachment folder URL for object ID: %@
Error batch deleting notes whil deleting account: %@
Error fetching property: %@, %@
Error: Saving failed after migration: %@, %@
Error: Failed to delete earlier notes.db: %@, %@
ERROR: Our notes.db file had mismatched note bodies, so we need to get rid of it.
Error: Failed to delete earlier notes.db after encountering mismatched note bodies: %@, %@
Error: Couldn't fetch next ID: %@, %@
Error: Unresolved error while getting max integer ID in existence: %@, %@
Error: Couldn't save next ID: %@, %@
Backing up persistent store
Failed to create database backup directory: %@
Error backing up old persistent store: %@
Backed up old persistent store from %@ to %@
Destroying old persistent store at %@
Destroyed persistent store at %@
Error destroying persistent store: %@
Falling back to just removing the database file
Backed up store and the old one is gone
Error getting free space for filesystem at path: %@, error: %@
Error getting file size for sqlite store: %@
Error getting file size for write-ahead log: %@
Minimum free space to open database: %lu, current free space: %lu
Failed to create managed object context for legacy notes
Failed to load MobileNotes schema at %@
Low on disk space and unable to load persistent store
Data protection prevented loading persistent store, because device has not been unlocked since boot
Unexpected error while opening database %@, %@
Destroying old persistent store and creating a new one
Trying to load persistent store again
Error trying to load persistent store again: %@
Successfully loaded persistent store on the second try
Error creating unarchiver: %@
Error fetching HTML notes: %@
legacy account %@ migration state changed to YES, so let's re-index everything.
A legacy account's migration state changed, so let's re-index everything.
The NoteObjectItemProviderUTI should never be requested
Error getting main context object from object: %@
softlink:r:path:/System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration
softlink:r:path:/System/Library/PrivateFrameworks/AccountsUI.framework/AccountsUI
NoteBodyObject
NoteContext
NoteChangeObject
NoteCollectionObject
SearchIndexable
ICSearchIndexableTarget
NSObject
ICMutableSetOfStringsSecureUnarchiveFromDataTransformer
NoteStoreObject
ArchivingSupport
MNFNoteProperty
NoteResurrectionMergePolicy
Private
NoteAccountObject
CellTitleSupport
NSFastEnumeration
ExternalSequenceNumberToAttachmentNoteBodyToAttachmentMigrationPolicy
NotesMigrationManager
NotesMigrationMapping
AccountUtilities
ICSearchIndexableNote
ICSearchIndexable
NoteObject
NoteObjectAdditions
ICHTMLSearchIndexerDataSource
NoteAttachmentObject
SearchIndexableNote
ICNSStringOrNumberSecureUnarchiveFromDataTransformer
SharedContext
NoteVisibilityTestingImplementation
ICNoteVisibilityTesting
NoteVisibilityTesting
ICMutableSetOfNumbersSecureUnarchiveFromDataTransformer
T@"NSArray",R,N
T#,R
_indexInBatches
T@"<ICSearchIndexable>",R,N
account
T@"AccountUtilities",&,N,V_accountUtilities
allVisibleNotes
T@"ICManagedObjectContextUpdater",&,N,V_mocUpdater
bundleForClass:
T@"NSArray",C,V_sourceModels
concurrencyType
T@"NSData",&,D,N
containsObject:
T@"NSDate",&,D,N
contentInfoText
T@"NSDictionary",&,N,V_constraints
endEntityMapping:manager:error:
T@"NSManagedObjectContext",R,&,N
handleMigration
T@"NSManagedObjectID",R,N
insertedObjects
T@"NSManagedObjectModel",R,N
isFolderWithServerShareChanged:
T@"NSNumber",&,D,N
liveNotesNeedingBodiesPredicate
T@"NSPersistentStoreCoordinator",R,N
markForDeletion
T@"NSString",&,D,N
numberWithBool:
T@"NSString",C,V_descriptionString
removeObserver:
T@"NSString",R,C
T@"NSString",R,N
setConstraints:
T@"NoteAccountObject",&,D,N
setContentType:
T@"NoteObject",&,D,N
setDisplayName:
T@"NoteStoreObject",R,&,N
setMergePolicy:
TB,D,N
setServerIntId:
TB,N,V_isMainContext
setUndoManager:
TB,R,N
sharedReindexer
TQ,R
stringByAppendingPathComponent:
Tq,N
stringFromDate:
Tq,V_type
tryLock
URLByAppendingPathComponent:
userActivityContentAttributeSet
.cxx_destruct
T@"NSSet",&,D,N
T@"<ICFolderObject>",R,N
_nextId
T@"ACAccountStore",&,N,V_accountStore
allKeys
T@"CSSearchableItemAttributeSet",R,N
attachmentDataFileURLWithError:
T@"ICSelectorDelayer",&,N,V_externalChangeNotificationDelayer
changes
T@"NSArray",R,&,N
constraintsPath
T@"NSData",&,N
content
T@"NSDate",R,C,N
dealloc
T@"NSLock",&,V_updateAccountInfosLock
getNextIdObject
T@"NSManagedObjectContext",R,N
initForMigrator
T@"NSManagedObjectModel",&,V_destinationModel
isAccountReindexedForMigration:
T@"NSMutableSet",&,D,N
isProxy
T@"NSObject<OS_dispatch_group>",&,N,V_backgroundDispatchGroup
localNotesExist
T@"NSSet",R,N
newlyAddedStore
T@"NSString",&,N
release
T@"NSString",R,&,D,N
saveOutsideApp:
T@"NSString",R,C,N
setAccountType:
T@"NSURL",R,N
setContainsCJK:
T@"NoteBodyObject",&,D,N
setDeletedFlag:
T@"NoteStoreObject",&,D,N
setIsPlainText:
T@,&,D,N
setPropertyKey:
TB,N
setTextContent:
TB,N,V_usePrivateQueue
setWithObjects:
TQ,N
sortDescriptors
TQ,R,N
stringByAppendingPathExtension:
Tq,R,N
summary
URIRepresentation
usePrivateQueue
URLByAppendingPathExtension:
URLByDeletingLastPathComponent
URLByDeletingPathExtension
URLForDirectory:inDomain:appropriateForURL:create:error:
URLWithString:
UUID
UUIDString
_accountIDsEnabledForNotes
_accountStore
_accountStoreDidChange:
_accountUtilities
_backgroundDispatchGroup
_constraints
_createLocalAccount:andStore:
_descriptionString
_destinationModel
_externalChangeNotificationDelayer
_forceInsertionForObject:
_hasPriorityInSaveConflicts
_inMigrator
_isMainContext
_localAccount
_localStore
_logChanges
_managedObjectContext
_mocUpdater
_nextIdContext
_nextIdLock
_noteContext
_notePropertyObjectForKey:
_notePropertyObjectsRealized
_notificationCount
_objectCreationLock
_preventMovingNotesToOtherAccounts
_setDelegate:
_sourceModels
_type
_updateAccountInfosLock
_usePrivateQueue
aa_isNotesMigrated
absoluteString
accountDescription
accountExists:
accountForAccountId:
accountIDsEnabledForNotes
accountIdentifier
accountIdentifiersEnabledToSyncDataclass:
accountName
accountStore
accountType
accountUtilities
accountWithIdentifier:
accountsEnabledForNotes
addDataSource:
addNotesFromSubtree:
addObject:
addObserver:selector:name:object:
addPersistentStoreWithDescription:completionHandler:
addPersistentStoreWithType:configuration:URL:options:error:
additionalSearchIndexablesForChangedKeys:
allAccounts
allAccountsAsFaults:prefechedRelationshipKeyPaths:
allIndexableObjectIDsInReversedReindexingOrderWithContext:
allNotes
allNotesInCollection:
allNotesMatchingPredicate:
allNotesWithoutBodiesInCollection:
allStores
allVisibleNotesInCollection:
allVisibleNotesInCollection:sorted:
allVisibleNotesMatchingPredicate:
allVisibleNotesMatchingPredicate:context:
allVisibleNotesMatchingPredicate:sorted:
allVisibleNotesMatchingPredicate:sorted:context:
allVisibleNotesMatchingPredicate:sorted:context:fetchLimit:
allowedTopLevelClasses
ancestorStores
andPredicateWithSubpredicates:
appendString:
applyFileAttributesForAttachment:error:
archivedDataWithRootObject:requiringSecureCoding:error:
areStoreMetadata:matchingEntityVersionsInModel:
array
arrayWithObject:
arrayWithObjects:
arrayWithObjects:count:
associateSourceInstance:withDestinationInstance:forEntityMapping:
attachmentDataWithError:
attachmentDirectoryPathForAttachmentObjectID:error:
attachmentDirectoryURLForAttachmentObjectID:error:
attachments
attributesOfFileSystemForPath:error:
author
authorsExcludingCurrentUser
autorelease
backgroundDispatchGroup
backupPersistentStore:
backupsDirectoryURL
basicAccountIdentifier
batchFaultNotes:
belongsToCollection:
body
boolValue
bytes
cacheKey
cachedSnapshot
canMigrateStoreMetadata:
changeType
changedValues
checkResourceIsReachableAndReturnError:
class
cleanUpLocks
clearCaches
clearTestsNotesRootPath
code
collectionForInfo:
collectionForObjectID:
collectionInfo
committedValuesForKeys:
conformsToProtocol:
constraints
containsAttachments
containsCJK
contentAsPlainText
contentAsPlainTextPreservingNewlines
contentID
contentIdentifier
contentType
context:shouldHandleInaccessibleFault:forObjectID:andTrigger:
contextWillSave:
copy
count
countByEnumeratingWithState:objects:count:
countForFetchRequest:error:
countOfNotes
countOfNotesInCollection:
countOfNotesMatchingPredicate:
countOfStores
countOfVisibleNotes
countOfVisibleNotesInCollection:
countOfVisibleNotesInCollectionIncludingNotesWithoutBodyContent:
countOfVisibleNotesMatchingPredicate:
countOfVisibleNotesMatchingPredicate:context:
countOfVisibleNotesMatchingPredicate:includingNoteWithoutBodyContent:context:
createDestinationInstancesForSourceInstance:entityMapping:manager:error:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
createRelationshipsForDestinationInstance:entityMapping:manager:error:
creationDate
currentStatus
customMappingFromSourceModelName:toDestinationModelName:
dataForTypeIdentifier:
dataSourceIdentifier
dataUsingEncoding:
dataWithContentsOfURL:options:error:
databaseIsCorrupt:
date
dateWithTimeIntervalSinceReferenceDate:
debugDescription
decodeObjectForKey:
decodeObjectOfClasses:forKey:
defaultCenter
defaultManager
defaultNotesSortDescriptors
defaultStore
defaultStoreForNewNote
defaultStoreSyncIdWithDesiredSyncId:
defaultTitleForEmptyNote
deleteAccount:
deleteCacheWithName:
deleteChanges:
deleteNote:
deleteNoteRegardlessOfConstraints:
deleteObject:
deleteSavedUserActivitiesWithPersistentIdentifiers:completionHandler:
deleteStore:
deletedFlag
deletedObjects
description
descriptionString
descriptionStringFromSourceStoreNames:destinationStoreName:
destinationContext
destinationInstancesForEntityMappingNamed:sourceInstances:
destinationModel
destroyPersistentStoreAtURL:withType:options:error:
dictionaryWithCapacity:
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:count:
didChangeValueForKey:
didChooseToMigrate
didTurnIntoFault
displayAccount
domain
enableChangeLogging:
encodeObject:forKey:
encodeWithCoder:
entity
entityForName:inManagedObjectContext:
entityVersionHashesByName
errorWithDomain:code:userInfo:
exceptionWithName:reason:userInfo:
executeFetchRequest:error:
executeRequest:error:
existingObjectWithID:error:
expressionForFunction:arguments:
expressionForKeyPath:
externalChangeNotificationDelayer
externalContentRef
externalFlags
externalIdentifier
externalRepresentation
externalSequenceNumber
externalServerIntId
faultedInStoresForAccounts:
fetchRequestWithEntityName:
fileExistsAtPath:
fileExistsAtPath:isDirectory:
fileProtectionOption
fileURLForTypeIdentifier:
fileURLProtectionOption
fileURLWithPath:
fileURLWithPath:isDirectory:
filename
finishDecoding
firstObject
flags
folder
folderName
folderNameForNoteList
forceDeleteAccount:
forceSetUpUniqueObjects
freshContext
generateGUID
getResourceValue:forKey:error:
guid
handleFailedAssertWithCondition:functionName:simulateCrash:showAlert:format:
hasChanges
hasMultipleEnabledStores
hasSuffix:
hasUnreadChanges
hasValidServerIntId
hash
ic_addNonNilObject:
ic_loggingDescription
ic_modificationDateForNoteBeingEdited
ic_objectsPassingTest:
ic_populateValuesForSpecializedFields
ic_whitespaceAndNewlineCoalescedString
identifier
indexableObjectIDsMatchingPredicate:sortByReversedReindexingOrder:context:
indexingPriority
inferredMappingFromSourceModelNames:toDestinationModelName:
inferredMappingModelForSourceModel:destinationModel:error:
init
initForMainContext
initForReadingFromData:error:
initForStoreWithDescription:coordinator:indexingPriority:
initWithAccountUtilities:
initWithAccountUtilities:inMigrator:
initWithAccountUtilities:inMigrator:isMainContext:usePrivateQueue:
initWithBytes:length:
initWithCoder:
initWithConcurrencyType:
initWithContentsOfFile:
initWithContentsOfURL:
initWithEntityName:
initWithFetchRequest:
initWithFetchRequest:managedObjectContext:sectionNameKeyPath:cacheName:
initWithImmutableData:
initWithItemContentType:
initWithKey:ascending:
initWithManagedObjectModel:
initWithMergeType:
initWithName:cachePath:
initWithPrivateQueue
initWithPrivateQueue:
initWithSourceModel:destinationModel:
initWithStore:context:
initWithTarget:selector:delay:waitToFireUntilRequestsStop:callOnMainThread:
insertNewObjectForEntityForName:inManagedObjectContext:
insertObject:atIndex:
intValue
integerId
invalidate
isAllNotesContainer
isBeingMarkedForDeletion
isBookkeepingEntry
isDataProtectionError:
isDeletable
isDeleted
isDeletedOrInTrash
isEnabledForDataclass:
isEqual:
isEqualToString:
isHiddenFromSearch
isICloudIMAPAccount
isInserted
isKindOfClass:
isMainContext
isMainThread
isMarkedForDeletion
isMemberOfClass:
isModernNote
isMovable
isObservingChanges
isOpenInRestrictionInEffect
isPasswordProtected
isPinnable
isPinned
isPlainText
isSearchIndexableNote
isSharedReadOnly
isSharedViaICloud
isSharedViaICloudFolder
isTitleValid:error:
isTooLowOnDiskSpace
isUnsupported
lastObject
lastPathComponent
length
localAccount
localAccountDisplayName
localStore
localStoreForNote:
localizedFrameworkStringForKey:value:table:allowSiri:
localizedStringWithFormat:
localizedTitleForLocalSourceOfDataclass:usedAtBeginningOfSentence:
lock
longLongValue
mainContextObjectFromObject:
managedObjectContext
managedObjectContextWillSaveNotification:
managedObjectModel
mappingModelForStoreMetadata:
mappingModelFromBundles:forSourceModel:destinationModel:
mappings
markAccountReindexedForMigration:
maximumServerIntId
metadata
metadataForPersistentStoreOfType:URL:error:
migrateAttachmentRelatedFilesInContext:error:
migrateFileForAttachment:toCurrentAttachmentPathWithError:
migrateNotesStoreAtURL:storeType:managedObjectModel:options:error:
migrateNotesStoreAtURL:storeType:options:sourceModel:destinationModel:mappingModel:error:
migrateStoreFromURL:type:options:withMappingModel:toDestinationURL:destinationType:destinationOptions:error:
mimeType
minimumSequenceNumberForServerIntIds:
minusSet:
mocUpdater
modelByMergingModels:forStoreMetadata:
modelForModelName:
modificationDate
mostRecentlyModifiedNoteInCollection:
moveItemAtPath:toPath:error:
moveItemAtURL:toURL:error:
mutableCopy
name
newFRCForAccountsWithDelegate:
newFRCForCollection:delegate:
newFRCForCollection:delegate:performFetch:
newFRCForFetchRequest:delegate:performFetch:
newFRCForStoresWithDelegate:
newFetchRequestForAccounts
newFetchRequestForNotes
newFetchRequestForStores
newManagedObjectContext
newVersionNumber
newlyAddedAccount
newlyAddedAttachment
newlyAddedAttachmentInContext:
newlyAddedNote
newlyAddedNoteWithGUID:
newlyCreatedNoteFromDefaultStore
nextIndex
note
noteAsPlainTextWithoutTitle
noteCellKeyPaths
noteChangeWithType:store:
noteForGUID:
noteForObjectID:
noteId
noteIntegerIds
noteServerIds
noteServerIntIds
noteVisibilityTestingForSearchingAccount
notesForGUIDs:
notesForIntegerIds:
notesForServerIds:
notesForServerIntIds:
notesForServerIntIds:ascending:limit:
notesForServerIntIdsInRange:
notesForServerIntIdsInRange:ascending:limit:
null
numberWithInt:
numberWithInteger:
numberWithLongLong:
numberWithUnsignedInt:
numberWithUnsignedLongLong:
object
objectAtIndex:
objectForKey:
objectForKeyedSubscript:
objectID
objectSnapshot
objectWithID:
obtainPermanentIDsForObjects:error:
owner
parentAccount
parentStore
path
pathForIndex
pathForPersistentStore
pathForResource:ofType:
pathToConstraintsPlist
performBlockAndWait:
performFetch:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
persistAttachmentData:error:
persistentStoreCoordinator
persistentStoreDescriptionWithURL:
persistentStoreForURL:
plainTextFromHTML:
plainTextFromHTML:limit:preserveNewlines:
postNotesChangedExternally
postNotificationName:object:
postNotificationName:object:userInfo:
predicateForNotes
predicateForSearchableAttachments
predicateForSearchableNotes
predicateWithFormat:
preferredFilename
prepareForDeletion
preventMovingNotesToOtherAccounts
processInfo
processName
propertyKey
propertyValue
propertyValueForKey:
receiveDarwinNotificationWithChangeLogging:
refreshObject:mergeChanges:
registerCoreDataCoreSpotlightDelegate:
regularFileContents
removeConflictingSqliteAndIdxFiles
removeItemAtPath:error:
removeItemAtURL:error:
removeObject:
removeObjectForKey:
removeSqliteAndIdxFiles
replacePersistentStoreAtURL:destinationOptions:withPersistentStoreFromURL:sourceOptions:storeType:error:
requestUpdate
reset
resetNotificationCount
resolveConflicts:error:
respondsToSelector:
result
retain
retainCount
save:
saveSilently:
searchDomainIdentifier
searchIndexerDataSource
searchIndexingIdentifier
searchResultCanBeDeletedFromNoteContext
searchResultType
searchResultsSection
searchableItemAttributeSet
self
sequenceNumber
serverId
serverIntId
setAccount:
setAccountIdentifier:
setAccountStore:
setAccountUtilities:
setAuthor:
setBackgroundDispatchGroup:
setBody:
setChangeType:
setClass:forClassName:
setConstraintsPath:
setContent:
setContentCreationDate:
setContentDescription:
setContentModificationDate:
setCreationDate:
setDataOwnerType:
setDateFormat:
setDefaultStore:
setDelegate:
setDescriptionString:
setDestinationModel:
setDidChooseToMigrate:
setEntity:
setExpression:
setExpressionResultType:
setExternalChangeNotificationDelayer:
setExternalContentRef:
setExternalFlags:
setExternalIdentifier:
setExternalRepresentation:
setExternalSequenceNumber:
setExternalServerIntId:
setFetchBatchSize:
setFetchLimit:
setFlags:
setGuid:
setHasPriorityInSaveConflicts:
setIc_searchResultType:
setIntegerId:
setIsMainContext:
setMetadata:
setMocUpdater:
setModificationDate:
setName:
setNeedsReindexing:
setNoteIntegerIds:
setNoteServerIds:
setNoteServerIntIds:
setObject:forKey:
setOption:forKey:
setPathToConstraintsPlist:
setPersistentStoreCoordinator:
setPredicate:
setPrimitiveValue:forKey:
setPropertiesToFetch:
setPropertyValue:
setPropertyValue:forKey:
setProviderDataTypes:
setRelationshipKeyPathsForPrefetching:
setResourceValue:forKey:error:
setResultType:
setReturnsObjectsAsFaults:
setSequenceNumber:
setSortDescriptors:
setSourceModels:
setStalenessInterval:
setStore:
setTestsNotesRootPath:
setTitle:
setType:
setUpCoreDataStack
setUpLastIndexTid
setUpLocalAccountAndStore
setUpUniqueObjects
setUpdateAccountInfosLock:
setUsePrivateQueue:
setValue:forKey:
setValue:forKeyPath:
sharedAccountUtilities
sharedConnection
sharedContext
sharedIndexer
sharedNoteResurrectionMergePolicy
shouldDataAccessCreateAccountForACAccount:
shouldDisableLocalStore
shouldLogIndexing
shouldMarkNotesAsDeleted
shouldObserveDarwinNotifications
snapshotFromRecord:
snippetForContent:
sortDescriptorWithKey:ascending:
sortDescriptorsForCurrentTypeIncludingPinnedNotes:
sortNotes:
sortUsingDescriptors:
sourceInstancesForEntityMappingNamed:destinationInstances:
sourceModelForStoreMetadata:
sourceModels
sourceObject
standardUserDefaults
startKeepingAccountInfosUpToDate
startObservingChanges
startSpotlightIndexing
store
storeForExternalId:
storeForExternalIdentifier:
storeForObjectID:
storeOptions
stores
storesInCollection:
stringByDeletingLastPathComponent
stringByDeletingPathExtension
stringByRemovingTitle:fromString:
stringByTrimmingCharactersInSet:
stringWithFormat:
substringToIndex:
superclass
supportedArchivedClassNames
supportsVisibilityTestingType:
syncAnchor
targetSearchIndexable
tearDownCoreDataStack
title
titleForTableViewCell
trackChanges:
trimmedTitle
type
unarchiveObjectWithExternalRepresentation:
unionSet:
unlock
unsignedIntValue
unsignedIntegerValue
unsignedLongLongValue
updateAccountInfos
updateAccountInfosLock
updateForRecentChanges
updatedObjects
urlForPersistentStore
userActivityPersistentIdentifierForNote:
userInfo
validateDefaultStore:error:
valueForKey:
valueForKeyPath:
visibilityTestingType
visibleNoteForObjectID:
visibleNotesForIntegerIds:
visibleNotesIncludingEmptyBodyContentPredicate
visibleNotesPredicate
whitespaceAndNewlineCharacterSet
willChangeValueForKey:
willSave
writeToFile:options:error:
zone
@16@0:8
B16@0:8
B24@0:8@16
v24@0:8@16
v16@0:8
@24@0:8@16
Q24@0:8@16
@32@0:8@16@24
@36@0:8@16B24@28
@44@0:8@16B24@28Q36
Q32@0:8@16@24
Q36@0:8@16B24@28
v32@0:8^@16^@24
@20@0:8B16
@28@0:8@16B24
@36@0:8@16B24B28B32
@36@0:8@16@24B32
v20@0:8B16
B24@0:8^@16
Q16@0:8
@28@0:8B16@20
v32@0:8@16@24
@28@0:8i16@20
q48@0:8@16@24@32@40
@"NSManagedObjectContext"
@"NoteStoreObject"
@"NoteAccountObject"
@"AccountUtilities"
@"ICExclusiveLock"
@"NSNumber"
@"NSMutableDictionary"
@"ICManagedObjectContextUpdater"
@"ICSelectorDelayer"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"<ICSearchIndexable>"16@0:8
@36@0:8@16B24Q28
@44@0:8{_NSRange=QQ}16B32Q36
@32@0:8{_NSRange=QQ}16
I16@0:8
B32@0:8@16^@24
v24@0:8q16
q16@0:8
B32@0:8^@16^@24
@"NSDictionary"
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
B48@0:8@16@24@32^@40
B40@0:8@16@24^@32
B32@0:8@16@24
B56@0:8@16@24@32@40^@48
B72@0:8@16@24@32@40@48@56^@64
@"NSManagedObjectModel"
@"NSArray"
@"NSString"
@"NoteContext"
@"ACAccountStore"
@"NSObject<OS_dispatch_group>"
@"NSLock"
@"NSManagedObjectContext"16@0:8
@"NSManagedObjectID"16@0:8
@"NSDate"16@0:8
@"NSArray"16@0:8
@"CSSearchableItemAttributeSet"16@0:8
@"NSURL"24@0:8@"NSString"16
@"NSData"24@0:8@"NSString"16
@"NSSet"24@0:8@"NSSet"16
@"NSSet"16@0:8
@"<ICFolderObject>"16@0:8
v24@0:8Q16
@32@0:8@16^@24
@24@0:8^@16
B24@0:8q16
@"NSPredicate"16@0:8
@(#)PROGRAM:Notes  PROJECT:Ironcade-2236
NoteContextWillSaveNotification
NoteContextDeletedNotesNotification
NoteContextChangedElsewhereNotification
NoteContextUpdatedIndexNotification
NoteContextDarwinNotificationWithoutLoggedChanges
NoteContextDarwinNotificationWithLoggedChanges
local://local/account
local://local/store
LastTransactionID
LocalAccountAndStoreAlreadySetUp
LastIndexTidAlreadySetUp
ShouldLogIndexing
LOCAL_NOTES_STORE
Account
accountIdentifier == %@
com.apple.notes
Accounts
Property
propertyKey == %@
HTML
v8@?0
com.apple.notes.autoincrement.lock
com.apple.notes.objectcreation.lock
((deletedFlag == %@) AND (body.content != nil) AND (isBookkeepingEntry == %@))
((deletedFlag == %@) AND (isBookkeepingEntry == %@))
((body.content = nil) AND (isBookkeepingEntry == %@))
store != nil
store.name
name
Store
Note
self IN %@
NoteBody
NoteAttachment
CoreData
(integerId IN %@)
(guid ==[c] %@)
(externalIdentifier == %@)
B32@?0@"NoteStoreObject"8Q16^B24
%K IN %@
account
com.apple.mobilenotes
DefaultNotesAccount
note.store.account == %@
DeviceSyncAnchorKey
ComputerSyncAnchorKey
NextId
integerId
max:
maxId
counter
notes.sqlite
notes.idx
Backups
yyyy-MM-dd_HH-mm-ss
Backup-%@-%@
sqlite-wal
sqlite-shm
NotesModel
momd
v24@?0@"NSPersistentStoreDescription"8@"NSError"16
__objc_no
+[NoteContext persistentStoreCoordinator]_block_invoke
Failed to open HTML notes database.
dataaccessd
exchangesyncd
NoteChange
store
NoteNote
MarkNotesDeleted
NoteCollectionType
NoteCollectionPrimaryIdentifier
NoteCollectionSecondaryIdentifier
(store == %@) AND (serverId IN %@)
(store == %@) AND (integerId IN %@)
(store == %@) AND (guid IN %@)
(store == %@) AND (externalServerIntId IN %@)
externalServerIntId
(store == %@) AND (externalServerIntId >= %d) AND (externalServerIntId < %d)
Unresolved error while getting max server int id in store %@.
Error: %@, %@
externalSequenceNumber
Unresolved error while getting min sequence number in store %@.
Error: %@, %@
store == %@
MessageFileWrapper
path
filename
preferredFilename
data
attributes
linkDestination
Error getting default account: %@, %@
owner
MFRestrictMessageTransfersToOtherAccounts
(store IN %@)
(account == %@) AND (externalIdentifier == %@)
Error getting store for external identifier %@: %@, %@
MCAccountIsManaged
Tried to use default store not from within account's stores.
reason
MCProfileConnection
Unable to find class %s
Note Collection
Notes
All %@
Migration
externalRepresentation
contentID
mimeType
NoteToNote
Can't find destination note for attachment with CID: %@
note
v16@?0@"NSString"8
note.body.externalRepresentation
Can't read archive for attachment: %@
No mapping claim to be able to migrate storeMetadata: %@
No mapping model specified
Error removing tmp directory: %@
tmpDB.sqlite
 -> 
Attachments
DidChooseToMigrate
ExternalSequenceNumber
NotesModelServerIntId
64bitServerIntId
DeletedNoteFlag
OptionalBodyContent
BookkeepingFlag
RequiredBookkeepingFlag
TemporaryIDs
Unexpected error building mapping model for store metadata: %@, error: %@
<%@: %p ; %@>
DeviceLocalAccount
NotesAccountUtilitiesDidUpdateAccounts
Failed to save after updating accounts infos: %@
ACUILocalization
com.apple.notes.htmlnoteitemprovider
The body object is of an unexpected type - %@ %@
NEW_NOTE
New Note
title
deletedFlag
Legacy
modificationDate
SearchIndexer
didChooseToMigrate
attachmentFile
attachments
Can't remove attachment data at path: %@, error: %@
Can't remove attachment folder at path: %@, error: %@
Can't set data protection class for attachment at path: %@, error: %@
Can't get data protection class for attachment at path: %@, error: %@
body.content
NOTE_LIST_ATTACHMENTS_%lu
com.apple.notes.spotlightrecord
NoteStoreHasMismatchedNoteBodies
creation_date
summary
content
contains_cjk
modification_date
author
content_type
ORDER BY modification_date DESC
SELECT rowid FROM note_bodies WHERE note_id = ?;
main
note_bodies
Couldn't find the note body for a note
__LoadContent
NoteStore.m
SQLITE_OK == err
INSERT OR REPLACE INTO note_bodies VALUES (?, ?);
SELECT 1 FROM Note WHERE ROWID = ?;
CREATE TABLE note_bodies (note_id INTEGER, data, UNIQUE(note_id))
CREATE TRIGGER delete_note_bodies AFTER DELETE ON Note
BEGIN
DELETE FROM note_bodies WHERE note_id = OLD.ROWID;
END;
DELETE FROM note_bodies WHERE 0 = (SELECT COUNT(ROWID) FROM Note WHERE Note.ROWID = note_id LIMIT 1);
alter table Note rename to Note_old;
insert into Note (ROWID, creation_date, title, summary, contains_cjk, modification_date, author, content_type) select ROWID, creation_date, title, summary, 0, creation_date, NULL, 0 from Note_old;
drop table Note_old;
insert into Note (ROWID, creation_date, title, summary, contains_cjk, modification_date, author, content_type) select ROWID, creation_date, title, summary, contains_cjk, creation_date, NULL, 0 from Note_old
notes.db
/Library/Notes/
Error getting local account: %@, %@
Error: found %lu local accounts, deleting all but one
Error fetching last transaction ID: %@, %@
Problem with duplicates: found %lu transaction IDs.  Will delete all but one.
Error: Couldn't save newly created unique objects: %@, %@
All references to managed objects should be tossed, since the Core Data stack was blown away.
Removing sqlite and index files
Can't remove sqlite and idx files: %@
Error: Problem performing fetch for NotesListController: %@, %@
Can't batch fault objects: %@, with error: %@
Trying to delete an object from an HTML account, but the object has a nil object ID: %@
Saving legacy context
Error saving silently: %@
Database is corrupt
Error getting notes with integer IDs: %@, %@
Error getting note with guid (%@):  %@, %@
Error getting folder with external identifier (%@):  %@, %@
Error getting list of all stores: %@, %@
Found no stores in [NoteContext allStores].  Will attempt to recover.
Error fetching stores: %@
Found no stores in [NoteContext countOfStores].  Will attempt to recover.
Error getting list of all accounts: %@, %@
Found no accounts in [NoteContext allAccounts].  Will attempt to recover.
Error getting account for account identifier %@: %@, %@
Error getting default account: %@, %@
Serious error: should have exactly one default notes account but have %lu instead.  Recovering.
Error getting file directory URL for attachment: %@
Error removing attachment file: %@
Failed to get attachment folder URL for object ID: %@
Error batch deleting notes whil deleting account: %@
Error fetching property: %@, %@
Error: Saving failed after migration: %@, %@
Error: Failed to delete earlier notes.db: %@, %@
ERROR: Our notes.db file had mismatched note bodies, so we need to get rid of it.
Error: Failed to delete earlier notes.db after encountering mismatched note bodies: %@, %@
Error: Couldn't fetch next ID: %@, %@
Error: Unresolved error while getting max integer ID in existence: %@, %@
Error: Couldn't save next ID: %@, %@
Backing up persistent store
Failed to create database backup directory: %@
Error backing up old persistent store: %@
Backed up old persistent store from %@ to %@
Destroying old persistent store at %@
Destroyed persistent store at %@
Error destroying persistent store: %@
Falling back to just removing the database file
Backed up store and the old one is gone
Error getting free space for filesystem at path: %@, error: %@
Error getting file size for sqlite store: %@
Error getting file size for write-ahead log: %@
Minimum free space to open database: %lu, current free space: %lu
Failed to create managed object context for legacy notes
Failed to load MobileNotes schema at %@
Low on disk space and unable to load persistent store
Data protection prevented loading persistent store, because device has not been unlocked since boot
Unexpected error while opening database %@, %@
Destroying old persistent store and creating a new one
Trying to load persistent store again
Error trying to load persistent store again: %@
Successfully loaded persistent store on the second try
Error creating unarchiver: %@
Error fetching HTML notes: %@
legacy account %@ migration state changed to YES, so let's re-index everything.
A legacy account's migration state changed, so let's re-index everything.
The NoteObjectItemProviderUTI should never be requested
Error getting main context object from object: %@
softlink:r:path:/System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration
softlink:r:path:/System/Library/PrivateFrameworks/AccountsUI.framework/AccountsUI
NoteBodyObject
NoteContext
NoteChangeObject
NoteCollectionObject
SearchIndexable
ICSearchIndexableTarget
NSObject
ICMutableSetOfStringsSecureUnarchiveFromDataTransformer
NoteStoreObject
ArchivingSupport
MNFNoteProperty
NoteResurrectionMergePolicy
Private
NoteAccountObject
CellTitleSupport
NSFastEnumeration
ExternalSequenceNumberToAttachmentNoteBodyToAttachmentMigrationPolicy
NotesMigrationManager
NotesMigrationMapping
AccountUtilities
ICSearchIndexableNote
ICSearchIndexable
NoteObject
NoteObjectAdditions
ICHTMLSearchIndexerDataSource
NoteAttachmentObject
SearchIndexableNote
ICNSStringOrNumberSecureUnarchiveFromDataTransformer
SharedContext
NoteVisibilityTestingImplementation
ICNoteVisibilityTesting
NoteVisibilityTesting
ICMutableSetOfNumbersSecureUnarchiveFromDataTransformer
T@"NSArray",R,N
T#,R
_indexInBatches
T@"<ICSearchIndexable>",R,N
account
T@"AccountUtilities",&,N,V_accountUtilities
allVisibleNotes
T@"ICManagedObjectContextUpdater",&,N,V_mocUpdater
bundleForClass:
T@"NSArray",C,V_sourceModels
concurrencyType
T@"NSData",&,D,N
containsObject:
T@"NSDate",&,D,N
contentInfoText
T@"NSDictionary",&,N,V_constraints
endEntityMapping:manager:error:
T@"NSManagedObjectContext",R,&,N
handleMigration
T@"NSManagedObjectID",R,N
insertedObjects
T@"NSManagedObjectModel",R,N
isFolderWithServerShareChanged:
T@"NSNumber",&,D,N
liveNotesNeedingBodiesPredicate
T@"NSPersistentStoreCoordinator",R,N
markForDeletion
T@"NSString",&,D,N
numberWithBool:
T@"NSString",C,V_descriptionString
removeObserver:
T@"NSString",R,C
T@"NSString",R,N
setConstraints:
T@"NoteAccountObject",&,D,N
setContentType:
T@"NoteObject",&,D,N
setDisplayName:
T@"NoteStoreObject",R,&,N
setMergePolicy:
TB,D,N
setServerIntId:
TB,N,V_isMainContext
setUndoManager:
TB,R,N
sharedReindexer
TQ,R
stringByAppendingPathComponent:
Tq,N
stringFromDate:
Tq,V_type
tryLock
URLByAppendingPathComponent:
userActivityContentAttributeSet
.cxx_destruct
T@"NSSet",&,D,N
T@"<ICFolderObject>",R,N
_nextId
T@"ACAccountStore",&,N,V_accountStore
allKeys
T@"CSSearchableItemAttributeSet",R,N
attachmentDataFileURLWithError:
T@"ICSelectorDelayer",&,N,V_externalChangeNotificationDelayer
changes
T@"NSArray",R,&,N
constraintsPath
T@"NSData",&,N
content
T@"NSDate",R,C,N
dealloc
T@"NSLock",&,V_updateAccountInfosLock
getNextIdObject
T@"NSManagedObjectContext",R,N
initForMigrator
T@"NSManagedObjectModel",&,V_destinationModel
isAccountReindexedForMigration:
T@"NSMutableSet",&,D,N
isProxy
T@"NSObject<OS_dispatch_group>",&,N,V_backgroundDispatchGroup
localNotesExist
T@"NSSet",R,N
newlyAddedStore
T@"NSString",&,N
release
T@"NSString",R,&,D,N
saveOutsideApp:
T@"NSString",R,C,N
setAccountType:
T@"NSURL",R,N
setContainsCJK:
T@"NoteBodyObject",&,D,N
setDeletedFlag:
T@"NoteStoreObject",&,D,N
setIsPlainText:
T@,&,D,N
setPropertyKey:
TB,N
setTextContent:
TB,N,V_usePrivateQueue
setWithObjects:
TQ,N
sortDescriptors
TQ,R,N
stringByAppendingPathExtension:
Tq,R,N
summary
URIRepresentation
usePrivateQueue
URLByAppendingPathExtension:
URLByDeletingLastPathComponent
URLByDeletingPathExtension
URLForDirectory:inDomain:appropriateForURL:create:error:
URLWithString:
UUID
UUIDString
_accountIDsEnabledForNotes
_accountStore
_accountStoreDidChange:
_accountUtilities
_backgroundDispatchGroup
_constraints
_createLocalAccount:andStore:
_descriptionString
_destinationModel
_externalChangeNotificationDelayer
_forceInsertionForObject:
_hasPriorityInSaveConflicts
_inMigrator
_isMainContext
_localAccount
_localStore
_logChanges
_managedObjectContext
_mocUpdater
_nextIdContext
_nextIdLock
_noteContext
_notePropertyObjectForKey:
_notePropertyObjectsRealized
_notificationCount
_objectCreationLock
_preventMovingNotesToOtherAccounts
_setDelegate:
_sourceModels
_type
_updateAccountInfosLock
_usePrivateQueue
aa_isNotesMigrated
absoluteString
accountDescription
accountExists:
accountForAccountId:
accountIDsEnabledForNotes
accountIdentifier
accountIdentifiersEnabledToSyncDataclass:
accountName
accountStore
accountType
accountUtilities
accountWithIdentifier:
accountsEnabledForNotes
addDataSource:
addNotesFromSubtree:
addObject:
addObserver:selector:name:object:
addPersistentStoreWithDescription:completionHandler:
addPersistentStoreWithType:configuration:URL:options:error:
additionalSearchIndexablesForChangedKeys:
allAccounts
allAccountsAsFaults:prefechedRelationshipKeyPaths:
allIndexableObjectIDsInReversedReindexingOrderWithContext:
allNotes
allNotesInCollection:
allNotesMatchingPredicate:
allNotesWithoutBodiesInCollection:
allStores
allVisibleNotesInCollection:
allVisibleNotesInCollection:sorted:
allVisibleNotesMatchingPredicate:
allVisibleNotesMatchingPredicate:context:
allVisibleNotesMatchingPredicate:sorted:
allVisibleNotesMatchingPredicate:sorted:context:
allVisibleNotesMatchingPredicate:sorted:context:fetchLimit:
allowedTopLevelClasses
ancestorStores
andPredicateWithSubpredicates:
appendString:
applyFileAttributesForAttachment:error:
archivedDataWithRootObject:requiringSecureCoding:error:
areStoreMetadata:matchingEntityVersionsInModel:
array
arrayWithObject:
arrayWithObjects:
arrayWithObjects:count:
associateSourceInstance:withDestinationInstance:forEntityMapping:
attachmentDataWithError:
attachmentDirectoryPathForAttachmentObjectID:error:
attachmentDirectoryURLForAttachmentObjectID:error:
attachments
attributesOfFileSystemForPath:error:
author
authorsExcludingCurrentUser
autorelease
backgroundDispatchGroup
backupPersistentStore:
backupsDirectoryURL
basicAccountIdentifier
batchFaultNotes:
belongsToCollection:
body
boolValue
bytes
cacheKey
cachedSnapshot
canMigrateStoreMetadata:
changeType
changedValues
checkResourceIsReachableAndReturnError:
class
cleanUpLocks
clearCaches
clearTestsNotesRootPath
code
collectionForInfo:
collectionForObjectID:
collectionInfo
committedValuesForKeys:
conformsToProtocol:
constraints
containsAttachments
containsCJK
contentAsPlainText
contentAsPlainTextPreservingNewlines
contentID
contentIdentifier
contentType
context:shouldHandleInaccessibleFault:forObjectID:andTrigger:
contextWillSave:
copy
count
countByEnumeratingWithState:objects:count:
countForFetchRequest:error:
countOfNotes
countOfNotesInCollection:
countOfNotesMatchingPredicate:
countOfStores
countOfVisibleNotes
countOfVisibleNotesInCollection:
countOfVisibleNotesInCollectionIncludingNotesWithoutBodyContent:
countOfVisibleNotesMatchingPredicate:
countOfVisibleNotesMatchingPredicate:context:
countOfVisibleNotesMatchingPredicate:includingNoteWithoutBodyContent:context:
createDestinationInstancesForSourceInstance:entityMapping:manager:error:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
createRelationshipsForDestinationInstance:entityMapping:manager:error:
creationDate
currentStatus
customMappingFromSourceModelName:toDestinationModelName:
dataForTypeIdentifier:
dataSourceIdentifier
dataUsingEncoding:
dataWithContentsOfURL:options:error:
databaseIsCorrupt:
date
dateWithTimeIntervalSinceReferenceDate:
debugDescription
decodeObjectForKey:
decodeObjectOfClasses:forKey:
defaultCenter
defaultManager
defaultNotesSortDescriptors
defaultStore
defaultStoreForNewNote
defaultStoreSyncIdWithDesiredSyncId:
defaultTitleForEmptyNote
deleteAccount:
deleteCacheWithName:
deleteChanges:
deleteNote:
deleteNoteRegardlessOfConstraints:
deleteObject:
deleteSavedUserActivitiesWithPersistentIdentifiers:completionHandler:
deleteStore:
deletedFlag
deletedObjects
description
descriptionString
descriptionStringFromSourceStoreNames:destinationStoreName:
destinationContext
destinationInstancesForEntityMappingNamed:sourceInstances:
destinationModel
destroyPersistentStoreAtURL:withType:options:error:
dictionaryWithCapacity:
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:count:
didChangeValueForKey:
didChooseToMigrate
didTurnIntoFault
displayAccount
domain
enableChangeLogging:
encodeObject:forKey:
encodeWithCoder:
entity
entityForName:inManagedObjectContext:
entityVersionHashesByName
errorWithDomain:code:userInfo:
exceptionWithName:reason:userInfo:
executeFetchRequest:error:
executeRequest:error:
existingObjectWithID:error:
expressionForFunction:arguments:
expressionForKeyPath:
externalChangeNotificationDelayer
externalContentRef
externalFlags
externalIdentifier
externalRepresentation
externalSequenceNumber
externalServerIntId
faultedInStoresForAccounts:
fetchRequestWithEntityName:
fileExistsAtPath:
fileExistsAtPath:isDirectory:
fileProtectionOption
fileURLForTypeIdentifier:
fileURLProtectionOption
fileURLWithPath:
fileURLWithPath:isDirectory:
filename
finishDecoding
firstObject
flags
folder
folderName
folderNameForNoteList
forceDeleteAccount:
forceSetUpUniqueObjects
freshContext
generateGUID
getResourceValue:forKey:error:
guid
handleFailedAssertWithCondition:functionName:simulateCrash:showAlert:format:
hasChanges
hasMultipleEnabledStores
hasSuffix:
hasUnreadChanges
hasValidServerIntId
hash
ic_addNonNilObject:
ic_loggingDescription
ic_modificationDateForNoteBeingEdited
ic_objectsPassingTest:
ic_populateValuesForSpecializedFields
ic_whitespaceAndNewlineCoalescedString
identifier
indexableObjectIDsMatchingPredicate:sortByReversedReindexingOrder:context:
indexingPriority
inferredMappingFromSourceModelNames:toDestinationModelName:
inferredMappingModelForSourceModel:destinationModel:error:
init
initForMainContext
initForReadingFromData:error:
initForStoreWithDescription:coordinator:indexingPriority:
initWithAccountUtilities:
initWithAccountUtilities:inMigrator:
initWithAccountUtilities:inMigrator:isMainContext:usePrivateQueue:
initWithBytes:length:
initWithCoder:
initWithConcurrencyType:
initWithContentsOfFile:
initWithContentsOfURL:
initWithEntityName:
initWithFetchRequest:
initWithFetchRequest:managedObjectContext:sectionNameKeyPath:cacheName:
initWithImmutableData:
initWithItemContentType:
initWithKey:ascending:
initWithManagedObjectModel:
initWithMergeType:
initWithName:cachePath:
initWithPrivateQueue
initWithPrivateQueue:
initWithSourceModel:destinationModel:
initWithStore:context:
initWithTarget:selector:delay:waitToFireUntilRequestsStop:callOnMainThread:
insertNewObjectForEntityForName:inManagedObjectContext:
insertObject:atIndex:
intValue
integerId
invalidate
isAllNotesContainer
isBeingMarkedForDeletion
isBookkeepingEntry
isDataProtectionError:
isDeletable
isDeleted
isDeletedOrInTrash
isEnabledForDataclass:
isEqual:
isEqualToString:
isHiddenFromSearch
isICloudIMAPAccount
isInserted
isKindOfClass:
isMainContext
isMainThread
isMarkedForDeletion
isMemberOfClass:
isModernNote
isMovable
isObservingChanges
isOpenInRestrictionInEffect
isPasswordProtected
isPinnable
isPinned
isPlainText
isSearchIndexableNote
isSharedReadOnly
isSharedViaICloud
isSharedViaICloudFolder
isTitleValid:error:
isTooLowOnDiskSpace
isUnsupported
lastObject
lastPathComponent
length
localAccount
localAccountDisplayName
localStore
localStoreForNote:
localizedFrameworkStringForKey:value:table:allowSiri:
localizedStringWithFormat:
localizedTitleForLocalSourceOfDataclass:usedAtBeginningOfSentence:
lock
longLongValue
mainContextObjectFromObject:
managedObjectContext
managedObjectContextWillSaveNotification:
managedObjectModel
mappingModelForStoreMetadata:
mappingModelFromBundles:forSourceModel:destinationModel:
mappings
markAccountReindexedForMigration:
maximumServerIntId
metadata
metadataForPersistentStoreOfType:URL:error:
migrateAttachmentRelatedFilesInContext:error:
migrateFileForAttachment:toCurrentAttachmentPathWithError:
migrateNotesStoreAtURL:storeType:managedObjectModel:options:error:
migrateNotesStoreAtURL:storeType:options:sourceModel:destinationModel:mappingModel:error:
migrateStoreFromURL:type:options:withMappingModel:toDestinationURL:destinationType:destinationOptions:error:
mimeType
minimumSequenceNumberForServerIntIds:
minusSet:
mocUpdater
modelByMergingModels:forStoreMetadata:
modelForModelName:
modificationDate
mostRecentlyModifiedNoteInCollection:
moveItemAtPath:toPath:error:
moveItemAtURL:toURL:error:
mutableCopy
name
newFRCForAccountsWithDelegate:
newFRCForCollection:delegate:
newFRCForCollection:delegate:performFetch:
newFRCForFetchRequest:delegate:performFetch:
newFRCForStoresWithDelegate:
newFetchRequestForAccounts
newFetchRequestForNotes
newFetchRequestForStores
newManagedObjectContext
newVersionNumber
newlyAddedAccount
newlyAddedAttachment
newlyAddedAttachmentInContext:
newlyAddedNote
newlyAddedNoteWithGUID:
newlyCreatedNoteFromDefaultStore
nextIndex
note
noteAsPlainTextWithoutTitle
noteCellKeyPaths
noteChangeWithType:store:
noteForGUID:
noteForObjectID:
noteId
noteIntegerIds
noteServerIds
noteServerIntIds
noteVisibilityTestingForSearchingAccount
notesForGUIDs:
notesForIntegerIds:
notesForServerIds:
notesForServerIntIds:
notesForServerIntIds:ascending:limit:
notesForServerIntIdsInRange:
notesForServerIntIdsInRange:ascending:limit:
null
numberWithInt:
numberWithInteger:
numberWithLongLong:
numberWithUnsignedInt:
numberWithUnsignedLongLong:
object
objectAtIndex:
objectForKey:
objectForKeyedSubscript:
objectID
objectSnapshot
objectWithID:
obtainPermanentIDsForObjects:error:
owner
parentAccount
parentStore
path
pathForIndex
pathForPersistentStore
pathForResource:ofType:
pathToConstraintsPlist
performBlockAndWait:
performFetch:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
persistAttachmentData:error:
persistentStoreCoordinator
persistentStoreDescriptionWithURL:
persistentStoreForURL:
plainTextFromHTML:
plainTextFromHTML:limit:preserveNewlines:
postNotesChangedExternally
postNotificationName:object:
postNotificationName:object:userInfo:
predicateForNotes
predicateForSearchableAttachments
predicateForSearchableNotes
predicateWithFormat:
preferredFilename
prepareForDeletion
preventMovingNotesToOtherAccounts
processInfo
processName
propertyKey
propertyValue
propertyValueForKey:
receiveDarwinNotificationWithChangeLogging:
refreshObject:mergeChanges:
registerCoreDataCoreSpotlightDelegate:
regularFileContents
removeConflictingSqliteAndIdxFiles
removeItemAtPath:error:
removeItemAtURL:error:
removeObject:
removeObjectForKey:
removeSqliteAndIdxFiles
replacePersistentStoreAtURL:destinationOptions:withPersistentStoreFromURL:sourceOptions:storeType:error:
requestUpdate
reset
resetNotificationCount
resolveConflicts:error:
respondsToSelector:
result
retain
retainCount
save:
saveSilently:
searchDomainIdentifier
searchIndexerDataSource
searchIndexingIdentifier
searchResultCanBeDeletedFromNoteContext
searchResultType
searchResultsSection
searchableItemAttributeSet
self
sequenceNumber
serverId
serverIntId
setAccount:
setAccountIdentifier:
setAccountStore:
setAccountUtilities:
setAuthor:
setBackgroundDispatchGroup:
setBody:
setChangeType:
setClass:forClassName:
setConstraintsPath:
setContent:
setContentCreationDate:
setContentDescription:
setContentModificationDate:
setCreationDate:
setDataOwnerType:
setDateFormat:
setDefaultStore:
setDelegate:
setDescriptionString:
setDestinationModel:
setDidChooseToMigrate:
setEntity:
setExpression:
setExpressionResultType:
setExternalChangeNotificationDelayer:
setExternalContentRef:
setExternalFlags:
setExternalIdentifier:
setExternalRepresentation:
setExternalSequenceNumber:
setExternalServerIntId:
setFetchBatchSize:
setFetchLimit:
setFlags:
setGuid:
setHasPriorityInSaveConflicts:
setIc_searchResultType:
setIntegerId:
setIsMainContext:
setMetadata:
setMocUpdater:
setModificationDate:
setName:
setNeedsReindexing:
setNoteIntegerIds:
setNoteServerIds:
setNoteServerIntIds:
setObject:forKey:
setOption:forKey:
setPathToConstraintsPlist:
setPersistentStoreCoordinator:
setPredicate:
setPrimitiveValue:forKey:
setPropertiesToFetch:
setPropertyValue:
setPropertyValue:forKey:
setProviderDataTypes:
setRelationshipKeyPathsForPrefetching:
setResourceValue:forKey:error:
setResultType:
setReturnsObjectsAsFaults:
setSequenceNumber:
setSortDescriptors:
setSourceModels:
setStalenessInterval:
setStore:
setTestsNotesRootPath:
setTitle:
setType:
setUpCoreDataStack
setUpLastIndexTid
setUpLocalAccountAndStore
setUpUniqueObjects
setUpdateAccountInfosLock:
setUsePrivateQueue:
setValue:forKey:
setValue:forKeyPath:
sharedAccountUtilities
sharedConnection
sharedContext
sharedIndexer
sharedNoteResurrectionMergePolicy
shouldDataAccessCreateAccountForACAccount:
shouldDisableLocalStore
shouldLogIndexing
shouldMarkNotesAsDeleted
shouldObserveDarwinNotifications
snapshotFromRecord:
snippetForContent:
sortDescriptorWithKey:ascending:
sortDescriptorsForCurrentTypeIncludingPinnedNotes:
sortNotes:
sortUsingDescriptors:
sourceInstancesForEntityMappingNamed:destinationInstances:
sourceModelForStoreMetadata:
sourceModels
sourceObject
standardUserDefaults
startKeepingAccountInfosUpToDate
startObservingChanges
startSpotlightIndexing
store
storeForExternalId:
storeForExternalIdentifier:
storeForObjectID:
storeOptions
stores
storesInCollection:
stringByDeletingLastPathComponent
stringByDeletingPathExtension
stringByRemovingTitle:fromString:
stringByTrimmingCharactersInSet:
stringWithFormat:
substringToIndex:
superclass
supportedArchivedClassNames
supportsVisibilityTestingType:
syncAnchor
targetSearchIndexable
tearDownCoreDataStack
title
titleForTableViewCell
trackChanges:
trimmedTitle
type
unarchiveObjectWithExternalRepresentation:
unionSet:
unlock
unsignedIntValue
unsignedIntegerValue
unsignedLongLongValue
updateAccountInfos
updateAccountInfosLock
updateForRecentChanges
updatedObjects
urlForPersistentStore
userActivityPersistentIdentifierForNote:
userInfo
validateDefaultStore:error:
valueForKey:
valueForKeyPath:
visibilityTestingType
visibleNoteForObjectID:
visibleNotesForIntegerIds:
visibleNotesIncludingEmptyBodyContentPredicate
visibleNotesPredicate
whitespaceAndNewlineCharacterSet
willChangeValueForKey:
willSave
writeToFile:options:error:
zone
@16@0:8
B16@0:8
B24@0:8@16
v24@0:8@16
v16@0:8
@24@0:8@16
Q24@0:8@16
@32@0:8@16@24
@36@0:8@16B24@28
@44@0:8@16B24@28Q36
Q32@0:8@16@24
Q36@0:8@16B24@28
v32@0:8^@16^@24
@20@0:8B16
@28@0:8@16B24
@36@0:8@16B24B28B32
@36@0:8@16@24B32
v20@0:8B16
B24@0:8^@16
Q16@0:8
@28@0:8B16@20
v32@0:8@16@24
@28@0:8i16@20
q48@0:8@16@24@32@40
@"NSManagedObjectContext"
@"NoteStoreObject"
@"NoteAccountObject"
@"AccountUtilities"
@"ICExclusiveLock"
@"NSNumber"
@"NSMutableDictionary"
@"ICManagedObjectContextUpdater"
@"ICSelectorDelayer"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"<ICSearchIndexable>"16@0:8
@36@0:8@16B24Q28
@44@0:8{_NSRange=QQ}16B32Q36
@32@0:8{_NSRange=QQ}16
I16@0:8
B32@0:8@16^@24
v24@0:8q16
q16@0:8
B32@0:8^@16^@24
@"NSDictionary"
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
B48@0:8@16@24@32^@40
B40@0:8@16@24^@32
B32@0:8@16@24
B56@0:8@16@24@32@40^@48
B72@0:8@16@24@32@40@48@56^@64
@"NSManagedObjectModel"
@"NSArray"
@"NSString"
@"NoteContext"
@"ACAccountStore"
@"NSObject<OS_dispatch_group>"
@"NSLock"
@"NSManagedObjectContext"16@0:8
@"NSManagedObjectID"16@0:8
@"NSDate"16@0:8
@"NSArray"16@0:8
@"CSSearchableItemAttributeSet"16@0:8
@"NSURL"24@0:8@"NSString"16
@"NSData"24@0:8@"NSString"16
@"NSSet"24@0:8@"NSSet"16
@"NSSet"16@0:8
@"<ICFolderObject>"16@0:8
v24@0:8Q16
@32@0:8@16^@24
@24@0:8^@16
B24@0:8q16
@"NSPredicate"16@0:8
