recurrenceEnd
v8@?0
Interval must be greater than 0
%@ <%p> RRULE %@
Encountered illegal value for EKRecurrenceFrequency
EKRecurrenceRule.m
Interval must be greater than or equal to 1
@8@?0
Invalid parameter not satisfying: %@
(int)firstDay <= EKWeekdaySaturday
dayOfTheWeek
DAILY
WEEKLY
MONTHLY
YEARLY
Encountered illegal value for  EKRecurrenceFrequency
yyyyMMdd
yyyyMMdd'T'HHmmss
yyyyMMdd'T'HHmmss'Z'
FREQ=%@
;INTERVAL=%lu
;UNTIL=%@
;COUNT=%lu
;BYMONTH=%@
;BYMONTHDAY=%@
;BYYEARDAY=%@
;BYWEEKNO=%@
;BYDAY=%@
;BYSETPOS=%@
;WKST=%@
unlocalizedTitle
colorStringRaw
displayOrder
UUID
source
@"NSString"8@?0
@"EKPersistentObject"8@?0
REMList
Class getREMListClass(void)_block_invoke
EKFrozenReminderCalendar.m
Unable to find class %s
void *ReminderKitLibrary(void)
REMColor
Class getREMColorClass(void)_block_invoke
Calendar
%@ <%p> {UUID = %@; displayName = %@; address = %@; firstName = %@; lastName = %@; status = %lu; accessLevel = %lu;}
-[CNContact predicateForContactMatchingEKParticipantWithName:emailAddress:URL:predicateDescription:]
startDateComponents
dueDateComponents
notes
URLString
lastModifiedDate
creationDate
completionDate
appLinkData
actionString
uniqueID
calendar
structuredLocationWithoutPrediction
allAlarmsSet
recurrenceRulesSet
priority
EKFrozenReminderReminder.m
frozen alarm is of the wrong class: %@
@"NSString"16@?0@"NSString"8
@"NSDate"8@?0
@"NSNumber"8@?0
REMReminder
Class getREMReminderClass(void)_block_invoke
REMUserActivity
Class getREMUserActivityClass(void)_block_invoke
REMReminderChangeItem
Class getREMReminderChangeItemClass(void)_block_invoke
Source
Sharee
Alarm
Notification
Error
%@ <%p> {title = %@; allowsModify = %s; color = %@; source = %@; sharees = %@}
EKFeatureSetDidChangeNotification
s+gaKNe68Gs3PfqKrZhi1w
eQd5mlz0BN0amTp/2ccMoA
ContinuityCapability
EKAvailabilityCacheError
%@-%@-processing
%@-%@-callback
accountID
sourceIsInvalid
sourceSupportsAvailabilityRequests
addressesToCachedSpanRanges
ignoredEventIDsToAddressBasedCaches
AvailabilityCacheMiss
AvailabilityCacheHit
B24@?0@"NSString"8@"NSDictionary"16
v16@?0@"NSDictionary"8
v16@?0@"NSError"8
v32@?0@"NSString"8@"NSArray"16^B24
v32@?0@8Q16^B24
(3-5)
(6-10)
(11-15)
(16-20)
(21-25)
(26-50)
(51-100)
(101-150)
(151-200)
(201+)
AvailabilityCacheRoundtripTimeInMilliseconds-%@
elapsedTime
CalendarItem
Store
EKOccurrenceCacheSearch.m
calendars != nil
searchTerm != nil
store != nil
callback != nil
v12@?0i8
CADObjectID
occurrenceDate
objectID
name
emailAddress
phoneNumber
participantRole
participantStatus
participantType
Name should not be nil.
Either url, phoneNumber or emailAddress should not be nil.
CalendarsExcludedFromNotifications
%@{type: %d, rowID: %d, date: %@}
EKObject.m
Cannot copy an object with changes from one event store to another
v32@?0@"NSString"8@16^B24
Error checking whether objects %@ exist: %@
v20@?0i8@"NSArray"12
@24@?0@"EKObject"8@"NSString"16
frozenObject
v16@?0@"EKObject"8
persistentObject
startDate
owner_id
role
status
email
%@ <%p> {frequency = %ld; interval = %ld; firstDayOfWeek = %ld; enddate = %@; count = %lu; specifier = %@}
ConnectionLock
ReplyLock
com.apple.calaccessd
v16@?0i8i12
EventKitClientDisconnectionQ
EKVirtualConferenceProviderErrorDomain
You have overridden beginRequestWithExtensionContext: on your subclass of EKVirtualConferenceProvider (%@) - this is not allowed
v24@?0@"NSArray"8@"NSError"16
v24@?0@"EKVirtualConferenceDescriptor"8@"NSError"16
com.apple.eventkit.debug.preference.notification.travelEngineThrottlePeriod
com.apple.eventkit.preference.notification.refiringReminderAlarmsEnabled
com.apple.eventkit.preference.notification.selectedCalendarIdentifiers
com.apple.eventkit.preference.notification.AlertInviteeDeclines
com.apple.eventkit.preference.notification.UnselectedCalendarIdentifiersForFocusMode
com.apple.mobilecal.preference.notification.selectedCalendarSyncHashesChanged
com.apple.eventkit.preference.notification.deselectedCalendarIdentifiers
com.apple.mobilecal.showdeclinedchanged
TravelEngineThrottlePeriod
refiringReminderAlarmsEnabled
useShortReminderSnoozeInterval
useShortReminderRefireInterval
alwaysSetArrivedAndSettledForReminders
LastConfirmedSplashScreenVersionViewed
privacyPaneBypass
LastDeselectedCalendars
DeselectedCalendarIdentifiersChanged
LastDeselectedCalendarSyncHashes
LastDeselectedCalendarSyncIdentifiers
LastViewedCalendars
UnselectedCalendarIdentifiersForFocusMode
EventKit
Shoji
ShowDeclinedEvents
InviteeDeclineAlerts
conferenceRoomTypeIdentifiersByMRU
calendar_id
old_calendar_id
external_id
old_external_id
summary
location_id
start_date
start_tz
end_date
end_tz
description
all_day
suppress_notification_for_changes
Reminders
com.apple.eventkit.EKReminderStore.queue
B24@?0@8@"NSDictionary"16
predicate is nil
predicate is not a reminder predicate created through EKEventStore
com.apple.eventkit.reminders.search
calendarItemIdentifier
REMStore
Class getREMStoreClass(void)_block_invoke
EKReminderStore.m
REMSaveRequest
Class getREMSaveRequestClass(void)_block_invoke
REMAccount
Class getREMAccountClass(void)_block_invoke
REMAlarm
Class getREMAlarmClass(void)_block_invoke
REMRecurrenceRule
Class getREMRecurrenceRuleClass(void)_block_invoke
REMStructuredLocation
Class getREMStructuredLocationClass(void)_block_invoke
NSErrorDomain getREMErrorDomain(void)
REMErrorDomain
title is empty
identifier is empty
url is empty
No URLs provided
TITLE=%@;
ADDRESS=%@;
%f:%f:%f
%f:%f
directorySearchQueue
B24@?0@"CNAutocompleteResult"8@"NSDictionary"16
v24@?0@"EKDirectorySearchResultSet"8@"NSError"16
@"NSArray"16@?0^@8
v16@?0@"EKDirectorySearchResultSet"8
CNAutocompleteStore
Class getCNAutocompleteStoreClass(void)_block_invoke
EKAutocompleter.m
void *ContactsAutocompleteLibrary(void)
CNAutocompleteFetchRequest
Class getCNAutocompleteFetchRequestClass(void)_block_invoke
CNAutocompleteNameComponents
Class getCNAutocompleteNameComponentsClass(void)_block_invoke
CNAutocompleteResult
Class getCNAutocompleteResultClass(void)_block_invoke
q24@?0@8@16
v24@?0@"NSString"8@"EKObject"16
[%@] opaqueKey: %@, uniqueKey: %@, extractionGroupIdentifier: %@, changedFields: %lu, changesAcknowledged: %d, timestamp: %f
v16@?0@"NSNotification"8
[%@] Display name: [%@], isEmail: [%@]
CRRecentContactsLibrary
CRAddressKindEmail
CRAddressKindPhoneNumber
CRRecentsDomainCalendar
title
dueDate
dueDateTimeZone
dueDateAllDay
hasAlarms
hasRecurrenceRules
recurrenceRules
com.apple.mobilecal.autocompletesearchcontroller.internalqueue
com.apple.mobilecal.autocompletesearchcontroller.eventkitqueue
EKAutocompleteSearch.m
searchWithString:completionHandler: called multiple times
com.apple.mobilecal
SuggestionsOriginBundleId
%@ <%p> {URLString = %@; fileName = %@; fileFormat = %@; fileSize = %lu; localRelativePath = %@; UUID = %@;}
remove
modify
B32@?0@8Q16^B24
EKDiff.m
One of these has to be non-nil
%@.%@
No object for comparison, %@ is entirely different
-------------------------
<weak relation: %@>
(null)
There is a difference for the multi-valued key: %@
%@: 
* %@
%@%@ <0x%x>
, %@:%@
Please use the appropriate designated initializer for this class.
EKAvailabilitySpan.m
startDate != nil
endDate != nil
'startDate' must not be after 'endDate'
[%@] startDate: [%@] endDate: [%@] type: [%@]
Unknown
Busy
Free
NoData
OutOfOffice
Tentative
Unavailable
mapKitHandle
latitude
longitude
radius
uniqueIdentifier
address
@"NSData"8@?0
EKFrozenReminderStructuredLocation.m
_float
%@ <%p>
 title = 
%@; 
 location = 
%@; 
 calendar = 
%@; 
 alarms = 
%@; 
 URL = 
%@; 
 lastModified = %@; 
 startTimeZone = 
%@; 
 endTimeZone = 
singleRecurrenceRule
Error exporting event to ICS: %@
v20@?0i8@"NSData"12
events
reminders
actionsState
X-APPLE-NO-ACTION
OUT-OF-DATE
DELEGATORS-COPY
DELEGATEES-COPY
v32@?0@"EKAlarm"8Q16^B24
EKCalendarItem.m
Can't snooze an alarm with location but no proximity.
Committed Value class is incorrect!
v16@?0@"EKCalendarItem"8
Original item class must match our class
date
DESCRIPTION
SEQUENCE
CREATED
SUMMARY
ATTACH
Attachment
Attachment %@
work
callback
B32@?0@"NSString"8@"EKPersistentObject"16@"EKPersistentObject"24
%@ <%p> {title = %@; address = %@; lat = %@; long = %@; abID = %@; radius = %@, routing = %@}
EKFrozenReminderObject.m
You must set skipsPersistentObjectCopy on change sets used by EKFrozenReminderObject.
value
<%@: %p>(externalID = %@, externalIDTag = %@, source = %@)
conferenceURLDetectedKey
parsedConferenceKey
junk
not junk
cachedJunkStatus
could be junk
parseResult
permit
not permit
FREQ=YEARLY
FREQ=YEARLY;INTERVAL=1
com.apple.calendar
store.log.travel.engine
store.log.travel.engine.throttle
calendar.source
externalTrackingStatus
uniqueId
externalID
externalFolderID
invitationStatus
endDate
originalItem.objectID.rowID
hasAttendees
availabilityRequests
processing
Reset
ConflictFound
SearchProgressed
B32@?0@"EKInviteeAlternativeTime"8Q16^B24
radar.18233777
B32@?0@"EKInviteeTimeSpan"8Q16^B24
q24@?0@"EKInviteeTimeSpan"8@"EKInviteeTimeSpan"16
v32@?0@"EKAvailabilitySpan"8Q16^B24
v32@?0@"EKInviteeTimeSpan"8Q16^B24
NSErrorPeerCertificateChainKey
v24@?0@"EKSource"8^B16
 <%@>
v16@?0@"CNContactStore"8
FIRST=%@;
LAST=%@;
<%@: %p>(name = %@)
EKCalendarSharedCalendarNotification.m
Invalid type for EKCalendarSharedCalendarNotification.
start
_cachedSpans
v32@?0@"EKAvailabilityCachedSpan"8Q16^B24
q24@?0@"EKAvailabilitySpan"8@"EKAvailabilitySpan"16
%@ <%p> {UUID = %@; displayName = %@; email = %@; phoneNumber = %@; firstName = %@, lastName = %@, status = %ld; role = %ld; type = %ld}
com.apple.EventKit.EKCalendarSuggestionNotificationQueue
SGSuggestionsService
-[EKCalendarSuggestionNotification updateSuggestedEventWithEventStore:]_block_invoke
no error returned
v24@?0@"SGEvent"8@"NSError"16
kDefaultAlarmSemanticIdentifier
ABSOLUTE=%f;
RELATIVE=%f;
EMAIL=%@;
URL=%@;
None
Enter
Leave
VehicleConnect
VehicleDisconnect
isExecuting
v20@?0@"NSError"8B16
v32@?0@"DAECalendarDirectorySearchResult"8Q16^B24
isFinished
In order to save a new notification, add it to a NotificationCollection, save, and commit the collection instead.
[%@] rowID: [%d] date: [%f]
v32@?0@"EKAttendee"8Q16^B24
v32@?0@"EKCalendarEventInvitationNotificationAttendee"8Q16^B24
calLocation
EKICSImportErrorDomain
com.apple.ical.ics
com.apple.ical.vcs
com.apple.ical.backup-package
ICSImport
com.apple.EventKit.ICSImporter
B24@?0@"NSDictionary"8^@16
B16@?0@"ICSUserAddress"8
@"NSString"16@?0@"ICSUserAddress"8
record
type
ROWID
sequence_number
v28@?0B8@"EKSequenceToken"12@"NSArray"20
v32@?0i8B12@"CADSequenceToken"16@"NSArray"24
delete
insert
update
[<%@: %p>: type=%@, row=%i, seq=%li, changeID=%li]
entityType must be implemented by an EKObjectChange inheriting class.
consumed_entity_class
consumed_entity_id
consumed_change_id
BirthdayEventsGenerationVersion
BirthdayEventsGenerationLastLocale
BirthdayEventsGenerationLastAttemptTimeResetKey
BirthdayEventsGenerationAttemptsToResetKey
EKBirthdayListener
v16@?0q8
@"EKEventStore"8@?0
Birthdays
v24@?0@"CNContact"8^B16
relative=%i
%@/%@
identifier
v24@?0@"EKEvent"8^B16
Location
%@ <%p> {triggerDate = %@; proximity = %ld; location = %@, type = %ld}
%@ <%p> {triggerInterval = %lf; proximity = %ld; location = %@, type = %ld}
count
frequencyRaw
interval
firstDayOfTheWeekRaw
specifier
REMRecurrenceEnd
Class getREMRecurrenceEndClass(void)_block_invoke
EKFrozenReminderRecurrenceRule.m
REMRecurrenceDayOfWeek
Class getREMRecurrenceDayOfWeekClass(void)_block_invoke
%Y%m%dT%H%M%SZ
%Y%m%dT%H%M%S
%Y%m%d
UID %@ is of unexpected size.
B32@?0@8@16^B24
singleValueChanges: %@ 
multiValueAdditions: %@ 
multiValueRemovals: %@ 
is new: %d is deleted: %d is saved: %d is modified: %d
is undeleted: %d
is undetached: %d
%@ <%p> {date = %@}
Adding nil Notification to notification collection.
Removing nil Notification from notification collection.
EKCalendarInviteReplyNotification.m
Invalid type for EKCalendarInviteReplyNotification.
EKPredicateSearch
Unknown entity type
Didn't recognize entity class %@
com.apple.eventkit.EKPredicateSearchCallback
v24@?0@"CADEntityWrapper"8@"NSMutableArray"16
v16@?0@"NSArray"8
EKReminderModifiedNotification
firstAlertDate
You must use [EKReminder reminderWithEventStore:] to create a reminder
/?&:$+,;=@
%@://%@/%@
%@ <%p> {title = %@; dueDate = %@; completionDate = %@; priority = %ld; calendarItemIdentifier = %@; alarms = %@}
@"EKPersistentObject"16@?0@"EKPersistentObject"8
event_id_tomb
EKNotificationsLoadedNotification
EKNotificationsChangedNotification
EKNotificationCountChangedNotification
EKNotificationCountChangedExternallyNotification
EKNotificationChangedNotificationsKey
com.apple.eventkit.notificationMonitor
notification
v16@?0@"EKTimedEventStorePurger"8
com.apple.eventkit.invitationmonitor
blacklistedNotificationQueue
v24@?0@"EKObjectID"8^B16
v32@?0@"EKCalendarNotificationReference"8Q16^B24
B24@?0@"EKCalendarNotificationReference"8@"NSDictionary"16
pending
no pending
v32@?0i8@"NSDictionary"12@"CADInMemoryChangeTimestamp"20B28
principalPath
displayName
preferredAddress
com.apple.eventkit.debug.preference.notification.availabilityFreshnessWindow
com.apple.eventkit.debug.preference.notification.saveGeocodedLocationsInTravelEngine
com.apple.eventkit.debug.preference.notification.overrideTravelAdvisoryHypothesis
com.apple.eventkit.debug.preference.notification.overriddenTravelAdvisoryHypothesisTransportType
com.apple.eventkit.debug.preference.notification.overriddenTravelAdvisoryHypothesisConservativeTravelTime
com.apple.eventkit.debug.preference.notification.overriddenTravelAdvisoryHypothesisEstimatedTravelTime
com.apple.eventkit.debug.preference.notification.overriddenTravelAdvisoryHypothesisAggressiveTravelTime
com.apple.eventkit.debug.preference.notification.overriddenTravelAdvisoryHypothesisSupportsLiveTraffic
com.apple.eventkit.debug.preference.notification.overriddenTravelAdvisoryHypothesisCurrentTrafficDensity
com.apple.eventkit.debug.preference.notification.overriddenTravelAdvisoryHypothesisRouteName
com.apple.eventkit.debug.preference.notification.overriddenTravelAdvisoryHypothesisTravelState
com.apple.eventkit.debug.preference.notification.preventMarkingTravelAdvisoryEntriesAsDismissed
com.apple.eventkit.debug.preference.notification.forceDisplayOfNewTravelAdvisoryHypotheses
com.apple.eventkit.debug.preference.notification.performAgendaEntryEqualityChecksInTravelEngine
com.apple.eventkit.debug.preference.notification.verifyIntegrityOfAvailabilityTimeSearchTimelines
com.apple.eventkit.debug.preference.notification.showDepartureDateForTransitTimeToLeave
com.apple.eventkit.debug.preference.notification.shouldBypassTravelEngineThrottle
com.apple.eventkit.debug.preference.notification.syntheticTravelAdvisoriesEnabled
availabilityFreshnessWindow
saveGeocodedLocationsInTravelEngine
overrideTravelAdvisoryHypothesis
overriddenTravelAdvisoryHypothesisTransportType
overriddenTravelAdvisoryHypothesisConservativeTravelTime
overriddenTravelAdvisoryHypothesisEstimatedTravelTime
overriddenTravelAdvisoryHypothesisAggressiveTravelTime
overriddenTravelAdvisoryHypothesisSupportsLiveTraffic
overriddenTravelAdvisoryHypothesisCurrentTrafficDensity
overriddenTravelAdvisoryHypothesisRouteName
overriddenTravelAdvisoryHypothesisTravelState
preventMarkingTravelAdvisoryEntriesAsDismissed
forceDisplayOfNewTravelAdvisoryHypotheses
performAgendaEntryEqualityChecksInTravelEngine
verifyIntegrityOfAvailabilityTimeSearchTimelines
showDepartureDateForTransitTimeToLeave
shouldBypassTravelEngineThrottle
syntheticTravelAdvisoriesEnabled
Version
Version mismatch. Archiver version: [%@]. Encoded Data Version: [%@].
Unable to unarchive version string.
Data
Unable to unarchive data.
Unable to encode data.
Unable to decode version string.
B32@?0@"EKEvent"8Q16^B24
com.apple.calendar.eventkit
EKPredicateExpanding
EKErrorDomain
EKCADErrorDomain
XPC error communicating with calaccessd: Invalid parameter
XPC error communicating with calaccessd: Internal error
XPC error communicating with calaccessd: Property not found
Object not found. It may have been deleted.
XPC error communicating with calaccessd: Invalid data type
XPC error communicating with calaccessd: Invalid operation
Access denied
XPC error communicating with calaccessd: Unknown IPC message
XPC error communicating with calaccessd: Unknown error
This operation is not supported on the current OS
XPC error communicating with calaccessd: Failed to rebuild occurrence cache
XPC error communicating with calaccessd: Missing client specifier
XPC error communicating with calaccessd: Connection not initialized
XPC error communicating with calaccessd: Data already exists
This process has too many EKEventStore instances. Use fewer event stores.
XPC error communicating with calaccessd: Data not accessible
The event cannot be edited.
No calendar has been set.
No start date has been set.
No end date has been set.
The start date must be before the end date.
An unexpected error occurred.
The calendar is read only.
That event does not belong to that event store.
Invites cannot be moved to another calendar.
The event is too far in the future.
The event is too long to repeat this often.
The event repeats before the alert occurs.
Another instance of this event occurs on this date.
An invalid span was specified.
A repeating reminder must have a due date.
Calendar does not match parent event
Calendar has no source
That calendar may not be moved to another account.
The privacy level field cannot be changed.
The repeat field cannot be changed.
Alarms cannot be changed.
Attendees cannot be changed.
That calendar can not be changed or deleted.
Locations with geo information are not supported by this account.
Actions are not supported by this account.
Locations for reminders are not supported by this account.
Proximity-based alarms are not supported by this account.
That account does not allow calendars to be added or removed.
That calendar does not allow events to be added.
That calendar does not allow reminders to be added.
That account does not support events.
That account does not support reminders.
You can't move events with attendees between accounts.
Priorities must be between %d and %d.
This is not a valid EKEntityType.
Choose another way to repeat this event or move it to another calendar.
The Suggested Event Calendar cannot be modified.
That calendar does not allow events to start outside of their recurrence patterns.
You can't move events with attachments between accounts.
A source must have a sourceIdentifier
A new attachment can only be created by adding to an event and saving the event
A reminder alarm should not contain emailAddress or urlString because these properties are unsupported
Cannot modify detachedItems directly
%@ <%p> {UUID = %@; displayName = %@; email = %@; phoneNumber = %@; firstName = %@; lastName = %@; isSelf = %d}
ApproachingDeparture
LeaveNow
RunningLate
%@ <%p> Date = %@
EventAction
ExceptionDate
SuggestedEventInfo
%@ <%p> 
 {title = %@; 
 calendar = %@; 
 alarms = %@; 
 URLString = %@; 
 lastModified = %@}
%@ <%p> {%@; 
 location = %@; 
 startLocation = %@; 
 startDate = %@; 
 endDate = %@; 
 allDay = %u; 
 timeZone = %@; 
 travelTime: %ld; 
 recurrences = %@; 
 attendees = %@}
EKChangedCalendar
EKChangedTitle
EKChangedLocation
EKChangedAllDay
EKChangedStartDate
EKChangedEndDate
EKChangedTimeZone
EKChangedEndTimeZone
EKChangedTravelTime
EKChangedRecurrenceRule
EKChangedAvailability
EKChangedPrivacy
EKChangedNotes
EKChangedAttendeeComment
EKChangedURL
EKChangedParticipationStatus
EKChangedAlternateTimeProposal
EKChangedJunkStatus
EKChangedResponseComment
EKChangedPriority
EKChangedSequence
EKChangedAlarmsAdded
EKChangedAlarmsRemoved
EKChangedAlarmsModified
EKChangedAttendeesAdded
EKChangedAttendeesRemoved
EKChangedAttendeesModified
EKChangedShareesAdded
EKChangedShareesRemoved
EKChangedShareesModified
EKChangedAttachmentsAdded
EKChangedAttachmentsRemoved
EKChangedAttachmentsModified
EKChangedCalendarColor
EKChangedCalendarTitle
EKObjectChangeSummarizer.m
Diff summary called on objects of different class
<%@: %p>(transportType = %@, conservativeDepartureDate = %@, conservativeTravelTime = %@, suggestedDepartureDate = %@, estimatedTravelTime = %@, aggressiveDepartureDate = %@, aggressiveTravelTime = %@, routeName = %@, supportsLiveTraffic = %@, currentTrafficDensity = %@, trafficDensityDescription = %@, travelState = %@)
transportType
conservativeDepartureDate
conservativeTravelTime
suggestedDepartureDate
estimatedTravelTime
aggressiveDepartureDate
aggressiveTravelTime
routeName
supportsLiveTraffic
currentTrafficDensity
trafficDensityDescription
travelState
AUTOMOBILE
TRANSIT
WALKING
BICYCLE
UNKNOWN_TRANSPORT_TYPE
FERRY
RIDESHARE
(unknown: %i)
NotTraveling
Traveling
TravelingSpecificallyToThisDestination
TravelingInDirectionOfThisDestination
TravelingAwayFromDestination
Arrived
(unknown: %lu)
event_id
+[EKPersistentObject relations] not implemented in subclass
Subclass %@ of EKPersistentObject did not implement +relations
EKPersistentObject.m
Cannot copy objects across different event stores backed by different databases
Trying to set the object ID on an object that has one!
Error checking whether object %@ exists: %@
v16@?0i8B12
Error loading default properties for object %@ from daemon: %@
'%@' is not a relation of '%@'
Trying to add an object as a related object for property %@ on %@, but it's not a relation or not to-many
Trying to remove an object as a related object for property %@ on %@, but it's not a relation or not to-many
Requested set of relation called %@ on a %@, but that doesn't exist.
Setting a to-many relation requires an NSSet
Setting a relation requires an EKPersistentObject
v20@?0i8@"NSNumber"12
@16@?0@"NSString"8
v20@?0i8@"NSDate"12
v20@?0i8@"NSString"12
v20@?0i8@"NSSecurityScopedURLWrapper"12
v20@?0i8@"CADObjectID"12
v20@?0i8@"NSSet"12
v32@?0@"EKObjectID"8@"NSDictionary"16^B24
Error loading properties for object %@ from daemon: %@
v16@?0@"EKPersistentObject"8
v32@?0@"NSString"8@"EKRelation"16^B24
    %@ = %@
%@ <%p> {loaded = %@; updated = %@}
v24@?0@"NSDictionary"8@"NSError"16
frequency
firstDayOfTheWeek
daysOfTheWeek
daysOfTheMonth
monthsOfTheYear
daysOfTheYear
weeksOfTheYear
setPositions
(%.4f, %.4f)
TravelingToDestination
TravelingTowardsDestination
Light
Medium
Heavy
ExtremelyHeavy
Unknown status
Not Determined
Restricted
Denied
Authorized Always
Authorized In Use
Event
Nil resource change passed.
EKEventModifiedNotification
EKEventNaturalLanguageSuggestedEventExpirationDate
EKEventSuggestedEventSavedFromSyncKey
You must use [EKEvent eventWithEventStore:] to create an event
Trying to initialize an EKEvent as a copy of an object that is not an EKEvent
Trying to initialize an EKEvent with a backing object that is not an EKPersistentEvent
Can't create EKEvent without persistent event
EKEventLocationPrediction
%@%@%@
recurrenceIdentifier
x-apple-calevent
x-apple-calevent://%@/%@?o=%lld
Private Event
birthdayTitle
Invalid pin mode: %d
%ld hours, %ld minutes
%ld minutes
addressbook://%@
NOT 
Prediction not attempted due to past timeouts
privacyLevelString
cachedTimeValuesCalendar
cachedStartOfDayForStartDate
cachedStartOfDayForEndDate
cachedDaysSpanned
cachedIsMultiDayTimedEvent
%@ <%p>
 %@; 
 location = 
%@; 
 structuredLocation = 
%@; 
 startDate = 
%@; 
 endDate = 
%@; 
 allDay = 
%u; 
 floating = 
%u; 
 recurrence = 
%@; 
 travelTime = 
%@; 
 startLocation = 
<%@ rowid=[%d] UUID=[%@] start-date=[%@]>
endLocation
Cannot undelete an event with the given span
Cannot undelete an event that is part of a recurring series and not detached
Cannot undetach an event with the given span
Cannot undetach an event that is not detached
Modified properties changed: YES. Old modified properties: %u
Modified properties changed: NO
B40@?0@"NSString"8@16@"EKObject"24@"EKObject"32
v16@?0@"EKEvent"8
v24@?0@"NSMutableDictionary"8@"EKParticipant"16
@max.self
repeat
%@:%@
The following information couldn\U2019t be added to Exchange:
%@%@
%@%@
v24@?0@"EKCalendarItem"8^B16
time zone
Floating
suggestionInfo
This Calendar Cannot Repeat Events on Multiple Months in a Year
This Calendar Cannot Repeat Events on Multiple Days in a Month
This Calendar Cannot Repeat Events Every %ld Years
originalStartDate
EKEvent.m
EKSpanAutomaticChange not allowed here
EKSpanEveryOccurrenceUnlessAlreadyDetached not allowed here
Unexpected number of occurrences (0) remaining in series after deleting the last remaining occurrence.
Cannot detach an already detached occurrence
Normal
Personal
Private
Confidential
/RID=
calshow:%lf?eventid=%d
calshow:%lf?eventid=%d_%d
%@/RID=%llu
alarms
v32@?0@"NSDate"8Q16^B24
Temp event
20220717T000000Z
LOCATION
RRULE
TRANSP
STATUS
ATTENDEE
EXDATE
NSString *getkSuggestionsEKEventAvailabilityState(void)
kSuggestionsEKEventAvailabilityState
void *CoreSuggestionsLibrary(void)
%@ <%p> {UUID = %@; name = %@; email = %@; phone = %@; isSelf = %d}
calendarIdentifier
ReminderPredicate
_isFinished
_isExecuting
_availabilityCache
_startDate
_endDate
_ignoredEventID
_addresses
_resultsBlock
_requestID
_queue
error
%@ <%p> {UUID = %@; name = %@; email = %@; phone = %@; status = %ld; role = %ld; type = %ld}
owner
calendaritem_owner_id
isAllDay
location
structuredLocation
attendees
selfAttendee
attachments
travelTime
isNew
timeZone
calendar.calendarIdentifier
EKEventActionHandler
createEvent
willUpdateEvent
didUpdateEvent
deleteEvent
EEEMMMdjmm
%f#%@
%@#%@
Create event
CLPlacemark
B16@?0@"NSSet"8
B16@?0@"<EKFrozenMeltedPair>"8
B24@?0@"NSString"8@16
B16@?0@"NSString"8
@"NSSet"16@?0@"NSSet"8
@16@?0@"NSSet"8
not nil
v24@?0@"EKObject"8^B16
v24@?0@"<EKFrozenMeltedPair>"8^B16
v24@?0@8^B16
v32@?0@"NSString"8@"NSSet"16^B24
v32@?0@"NSString"8@"NSMutableSet"16^B24
<%@ uniqueIdentifier=[%@]>
v24@?0@"EKPersistentObject"8@"EKFrozenReminderObject"16
@32@?0@"EKPersistentObject"8@"EKObject"16@"NSMutableArray"24
EKObject Shared Lock %lu
file
Invalid day number
weekNumber
%ld%@
%@ <%p> { %@ }
v32@?0@"EKParticipant"8Q16^B24
rrule_%d_frequency
rrule_%d_interval
rrule_%d_end
alarm_%d_absoluteDate
alarm_%d_relativeOffset
alarm_%d_locationTitle
alarm_%d_proximity
CSSearchQuery
CSSearchQueryContext
comment
namedLocation
primaryRecipients
authors
com.apple.iCal
com.apple.CalendarUI
primaryRecipients == "%@*"cdwt || authors == "%@*"cdwt || recipientNames == "%@*"cdwt || recipientEmailAddresses == "%@*"cdwt || authorNames == "%@*"cdwt || authorEmailAddresses ==  "%@*"cdwt || 
contentType == "%@" && (
title == "%@*"cdwt || comment == "%@*"cdwt || namedLocation == "%@*"cdwt || 
title == "%@*"cdwt || 
namedLocation == "%@*"cdwt || 
comment == "%@*"cdwt || 
 || 
&& startDate <= $time.absolute(%f) && endDate >= $time.absolute(%f)
&& endDate > $time.absolute(%f)
&& startDate < $time.absolute(%f)
Birthday
CalDAV
Local
Subscription
Exchange
Suggestions
CGColor
hasSharees
Invalid entity type passed: %d
earlier == nil && later == nil
source.isDelegate
source._adjustedDisplayOrder
source.sourceType
Can't directly init a calendar. Use calendarWithEventStore
DEFAULT_TASK_CALENDAR_NAME
default reminders list name
DEFAULT_CALENDAR_NAME
Default calendar name
Siri Suggestions
Name of default reminders calendar
#%02X%02X%02X
#%02x%02x%02x
Encountered illegal value for EKCalendarType
%@ <%p> {title = %@; type = %@; allowsModify = %@; color = %@;}
B16@?0@"EKCalendar"8
LOCAL
BIRTHDAYS
;%d;
x-apple-calendar://%@
Error checking whether calendar has events: %@
Not implemented
This stub exists for compatibility with macOS
B24@?0@"EKAlarm"8@"NSDictionary"16
v24@?0@"EKAlarm"8^B16
EKCalendar.m
v32@?0@"NSString"8@"NSString"16@"NSError"24
Calendar must be nil or Gregorian
Invalid date components: must have at least a year, a month, and a day
/System/Library/LocationBundles/RemindersAlerts.bundle
EKAlarm.m
date != nil
%@ <%p> {triggerDate = %@}
%@ <%p> {triggerInterval = %lf}
location-reminders
EKVirtualConferenceError
FaceTime
v24@?0@"EKVirtualConference"8@"NSError"16
v24@?0@"<NSCopying>"8@"NSArray"16
EKVirtualConference title: %@, conferenceDetails: %@, joinMethods: %@, source: %@
com.apple.calendar.virtualconference
(nil)
v24@?0@"<NSCopying>"8@"NSError"16
v16@?0@"<NSCopying>"8
EKVirtualConferenceRoomType title: %@, identifier: %@, extensionBundleIdentifier: %@
EKVirtualConferenceJoinMethod title: %@, url: %@, isBroadcast: %@
%@ <%p> {UUID = %@; name = %@; email = %@; status = %lu; accessLevel = %lu;}
invite-accepted
invite-declined
invite-deleted
invite-invalid
invite-noresponse
.plist
v20@?0i8Q12
v32@?0@"NSString"8@"NSArray"16@"NSError"24
v32@?0@"CalDAVOfficeHour"8Q16^B24
v24@?0@"NSString"8@"NSError"16
MobileMe
Subscribed
Other
%@ <%p> {UUID = %@; type = %@; title = %@; externalID = %@}
cachedExternalInfoDictionary
https
http
_EKVirtualConferenceRequestTypeKey
_EKVirtualConferenceRequestTypeRoomTypes
_EKVirutalConferenceRequestTypeJoinMethodsForRoomType
_EKVirtualConferenceRequestTypeURLInvalidate
_EKVirtualConferenceRequestTypeURLRenew
_EKVirtualConferenceRequestRoomTypeIdentifier
_EKVirtualConferenceRequestURLParameterForInvalidation
_EKVirtualConferenceRequestURLParameterForRenewal
_EKVirtualConferenceRequestDateParameterForRenewal
_EKVirtualConferenceRoomTypeTitleKey
_EKVirtualConferenceRoomTypeIdentifierKey
_EKVirtualConferenceJoinMethodTypeIdentifierKey
_EKVirtualConferenceJoinMethodTitleKey
_EKVirtualConferenceJoinMethodURLKey
_EKVirtualConferenceInfoTypeIdentifierKey
_EKVirtualConferenceInfoTitleKey
_EKVirtualConferenceInfoDetailsKey
_EKVirtualConferenceInvalidationResultKey
_EKVirtualConferenceInvalidationResultSucceeded
_EKVirtualConferenceInvalidationResultFailed
_EKVirtualConferenceRenewalResultKey
_EKVirtualConferenceRenewalResultSucceeded
_EKVirtualConferenceRenewalResultFailed
_EKVirtualConferenceTypeIdentifierKey
_EKVirtualConferenceErrorResultKey
EKVirtualConferenceExtensionContext.m
Invalid completion method called for request type
color
display_order
EKTravelTimeErrorDomain
v24@?0@"CalRoute"8@"NSError"16
MKPlacemark
MKMapItem
MKDirectionsRequest
MKDirections
MKErrorUnknown
MKErrorServerFailure
MKErrorLoadingThrottled
MKErrorPlacemarkNotFound
MKErrorDirectionsNotFound
EKTravelLookupErrorUnknown
v24@?0@"MKETAResponse"8@"NSError"16
v24@?0@"CLPlacemark"8@"NSError"16
CLGeocoder
RTRoutineManager
CLLocation
semanticIdentifier
GEOMapService
Trying to initialize an EKStructuredLocation as a copy of an object that is not an EKStructuredLocation
geoLocation
%4f, %4f
ab://
ab\://
%@ <%p> {title = %@; address = %@; geo = %@; abID = %@; routing = %@; radius = %f;}
geo:%f,%f
x-apple-eventkit
Reminder
RecurrenceRule
Attendee
Organizer
Category
ResourceChange
InviteReplyNotification
ResourceChangeNotification
SuggestionNotification
CategoryLink
Participant
Contact
Conference
entityType
rowID
dbID
temporary
%@://%d/%@/%@%d
%@:///%@/%@%d
endDate is nil
occurrenceCount == 0
occurrenceCount
%@ <%p> { UNTIL=%@ } 
%@ <%p> { COUNT=%lu }
ClientLocation
StartLocation
EndLocation
calendarItemOwner
<%@ %p> %@
%@ <%p> {%@; URL:%@; localRelativePath:%@; filename:%@; fileFormat:%@; fileSize:%@; UUID: %@
_MKLaunchOptionsFromTimeToLeaveNotificationKey
v28@?0@"MKMapItem"8@"NSError"16B24
v24@?0@"MKMapItem"8@"NSError"16
availability
privacy_level
travel_time
start_location_id
orig_item_id
B24@?0@"EKCalendar"8@"NSDictionary"16
EKCalendarVisibilityManagerDefaultQ
Method not implemented on iOS.
EKEventStoreChangedNotification
EKEventStoreChangedObjectIDsUserInfoKey
EKEventStoreChangeTypeUserInfoKey
EKEventStoreCalendarDataChangedUserInfoKey
EKEventStoreRemindersDataChangedUserInfoKey
EKEventStoreTimeZoneChangedNotification
EKEventStoreCalendarsChangedNotification
EKEventStore_DistributedNotification_AutomaticGeocodingAllowedChanged
EKEventStoreIdleChangeTrackingClientWasPurgedNotification
EKEventStoreModifiedEventIdentifier
EKEventStoreRevert
EKEventStoreIntegrityErrorsFoundNotification
integrityErrors
EKEventStoreNonSyncOnlyChangeKey
EKEventStoreUnknownChangeKey
EKEventStoreForceImmediateChangeKey
x-apple-reminderkit
REMCDReminder
x-apple-calendar
sourceIdentifier
com.apple.eventkit.eventstore.calendars
com.apple.eventkit.eventstore.registered
com.apple.eventkit.eventstore.unsaved
com.apple.eventkit.eventstore.dbchanged
com.apple.eventkit.eventstore.constraintsCache
com.apple.eventkit.eventstore.notificationCollectionCache
v24@?0@"NSArray"8@"NSDictionary"16
d24@?0@"NSArray"8@"NSDictionary"16
com.apple.calendar.defaultAlarmChangedNotification
v20@?0B8@"NSError"12
v12@?0C8
v20@?0i8@"CADSequenceToken"12
v28@?0i8@"NSDictionary"12@"CADSequenceToken"20
v20@?0@"EKEventStore"8B16
com.apple.eventkit.autoreset
v28@?0i8@"NSArray"12@"NSArray"20
v32@?0@"CADObjectID"8Q16^B24
B24@?0@"EKSource"8@"NSDictionary"16
v32@?0@"EKSource"8q16@"NSError"24
No emailAddress given
No source given
Given source is not an Exchange source
v28@?0i8@"CADObjectID"12q20
No delegate given
Given source is not a delegate
Given delegate is not an Exchange source
EKEventStore.m
Invalid entity type passed
%@/RID=%lu
%@:%@
Nil URI passed
%@: path is empty or nil
-[EKEventStore _saveDraftOfEvent:toDirectory:withVersion:]
-[EKEventStore _loadDraftOfEventWithOccurrenceID:fromDirectory:withVersion:]
-[EKEventStore _deleteDraft:]
%@.plist
externalIdentifier must be an instance of NSString
externalIdentifier is empty
predicate is not a calendar item predicate created through EKEventStore
v20@?0i8B12B16
@16@?0@"NSDictionary"8
-[EKEventStore birthdayCalendarEnabled]_block_invoke
-[EKEventStore setBirthdayCalendarEnabled:]_block_invoke
-[EKEventStore suggestedEventCalendar]_block_invoke_2
-[EKEventStore insertSuggestedEventCalendar]_block_invoke_2
-[EKEventStore insertSuggestedEventCalendar]_block_invoke
-[EKEventStore removeSuggestedEventCalendar]_block_invoke_2
-[EKEventStore confirmSuggestedEvent:]_block_invoke_2
-[EKEventStore confirmSuggestedEvent:]
-[EKEventStore acceptSuggestedEvent:placeOnCalendar:]
succeeded
FAILED
-[EKEventStore deleteSuggestedEvent:]
-[EKEventStore deleteSuggestedEvent:]_block_invoke_2
-[EKEventStore naturalLanguageSuggestedEventCalendar]_block_invoke_2
nil notification passed in to [EKEventStore saveNotification:commit:error:]
Nil notification collection passed in to [EKEventStore saveNotificationCollection:commit:error:]
Unsupported status for responding to shared calendar invitation. Only accept and decline are supported
B24@?0@"EKResourceChange"8@"NSDictionary"16
v44@?0i8@"NSArray"12@"NSArray"20@"NSArray"28@"NSDate"36
v28@?0i8Q12@"NSArray"20
nil attachment passed in to [EKEventStore saveAttachment:commit:error:]
Object is not an EKPersistentObject
Unknown entity name %@ for objectID: %@ with entity type: %d
Object is not an EKObject
Can't add deleted or inserted object to update set
Attempt to insert a nil object.
Attempt to insert something that is not a EKPersistentObject.
Attempt to insert an object that belongs to a different event store.
Attempt to delete a nil object.
Attempt to delete something that is not a EKPersistentObject.
B16@?0@"EKObject"8
-[EKEventStore _commitObjectsWithIdentifiers:error:]
-[EKEventStore _commitObjectsWithIdentifiers:error:]_block_invoke_2
v40@?0i8@"NSDictionary"12@"NSDictionary"20@"CADInMemoryChangeTimestamp"28B36
predicate was not created with EKCalendarStore methods
FetchEventsMatchingPredicate
duration
block is nil
v28@?0@"NSDate"8B16^B20
@"NSArray"16@?0@"CalDateRange"8
%@: startDate is nil
%@: endDate is nil
v44@?0B8@"EKSequenceToken"12@"NSArray"20@"NSArray"28@"NSArray"36
v32@?0i8B12@"CADSequenceToken"16@"NSDictionary"24
changes
inserts
updates
deletes
Constraints data size is wrong.  Your version of EventKit is incompatible with the running version of calaccessd.
v20@?0i8@"NSDictionary"12
%@.simulated.calendar.apple.com
simulated.calendar.apple.com
sequenceNumbers
EKConferenceValidationErrorDomain
EKConferenceUtils.workQueue
v16@?0@"LSApplicationRecord"8
com.microsoft.lync2013.iphone
Skype
v24@?0@"LSAppLink"8@"NSError"16
com.apple.InCallService
com.apple.facetime
com.apple.FaceTime
com.apple.eventkit.ConferenceInvalidationQueue
EKConferenceUtils.m
invalidation state before search already set to checking
v16@?0@"NSString"8
com.apple.mobilecal.FacetimeExtension
com.apple.eventkit.ConferenceCreationQueue
v24@?0@"EKVirtualConferenceRoomType"8@"NSError"16
[%@] startDate: [%@] endDate: [%@] duration: [%@ seconds] conflictedParticipants count: [%@]
relativeOffset
absoluteDate
proximity
EKFrozenReminderAlarm.m
structured location is an unexpected type: %@
@"EKFrozenReminderStructuredLocation"8@?0
Proximity=%@;Location=%@
Ack=%@;Trigger=%@:%@
Era=%li;
Year=%li;
Month=%li;
Day=%li;
Hour=%li;
Minute=%li;
Second=%li;
FLOAT
TZ=%@]
acknowledgedDate
originalAlarm
@"EKFrozenReminderAlarm"8@?0
REMAlarmTimeIntervalTrigger
Class getREMAlarmTimeIntervalTriggerClass(void)_block_invoke
REMAlarmDateTrigger
Class getREMAlarmDateTriggerClass(void)_block_invoke
REMAlarmLocationTrigger
Class getREMAlarmLocationTriggerClass(void)_block_invoke
Event update: %@
iTIP
%@ has updated the event: %@, scheduled for %@. To acknowledge this invitation, click the link below.
%@ has updated the event: %@, scheduled for %@ at %@. To acknowledge this invitation, click the link below.
%@ has updated the event: %@, scheduled for %@ at %@ (%@). To acknowledge this invitation, click the link below.
iCal-Request.ics
Event invitation: %@
%@ has invited you to the event: %@, scheduled for %@. To accept or decline this invitation, click the link below.
%@ has invited you to the event: %@, scheduled for %@ at %@. To accept or decline this invitation, click the link below.
%@ has invited you to the event: %@, scheduled for %@ at %@ (%@). To accept or decline this invitation, click the link below.
Event canceled: %@
%@ has canceled the event: %@. To handle this cancellation, click the link below.
iCal-Cancel.ics
selfAttendee.statusRaw
Event accepted: %@
Event declined: %@
Event tentatively accepted: %@
%@ has accepted your invitation to the event: %@, scheduled for %@.
%@ has accepted your invitation to the event: %@, scheduled for %@ at %@.
%@ has accepted your invitation to the event: %@, scheduled for %@ at %@ (%@).
%@ has declined your invitation to the event: %@, scheduled for %@.
%@ has declined your invitation to the event: %@, scheduled for %@ at %@.
%@ has declined your invitation to the event: %@, scheduled for %@ at %@ (%@).
%@ has tentatively accepted your invitation to the event: %@, scheduled for %@.
%@ has tentatively accepted your invitation to the event: %@, scheduled for %@ at %@.
%@ has tentatively accepted your invitation to the event: %@, scheduled for %@ at %@ (%@).
%@%@%@%@
%@%@%@%@%@
iCal-Reply.ics
kEKAccountErrorDomain
kEKCalendarErrorDomain
kEKCalendarItemErrorDomain
AccountName
CalendarName
CalendarItemName
[%@] username: [%@], password: [%@]
******
%@ <%p> {UUID = %@; type = %@; title = %@; externalId = %@}
@"CalVirtualConferenceJoinMethod"16@?0@"EKVirtualConferenceJoinMethod"8
@"EKVirtualConferenceJoinMethod"16@?0@"CalVirtualConferenceJoinMethod"8
Video Call
isAbsolute
isDefaultAlarm
Either the relative offset or absolute date must be set.
,%s%ld%s
%s%ld%s
com.apple.eventkit
mailto:
EKUIAttendeeUtils_AttendeeHasResponded
com.apple.eventkit.redaction
<EKRedacted>
<%@: %p; Conflicts: %lu Out of total: %lu>
span
com.apple.iCal.viewModelChanged
DisabledCalendars
CollapsedTopLevelNodes
AccountDisplayOrder
LocalGroupsDisplayOrder
com.apple.calendar.preference.notification.changed
SharedCalendarNotificationsDisabled
InvitationNotificationsDisabled
TimeToLeaveEnabled
TimeToLeaveEnabledNotification
MainWindow
Availability
UIAvailabilitySearch
Saving
com.apple.CoreRoutine.LocationOfInterest
v24@?0@"<GEOMapItem>"8@"NSError"16
Swim Lesson
Type
Poker Night
Book Club
Staff Meeting
v32@?0@"NSString"8@"NSDictionary"16^B24
%@ CONTAINS SELF
Unexpected frequency value loaded from database: %d
Unexpected CalDayOfWeek: %d
Unexpected EKWeekday: %d
Couldn't find old alarm matching semantic ID %@; if it existed it will be disconnected from any extant EKObject instances
The given source's 'accountID' is nil.  The availability cache will not be able to give availability data.  Cache: [%@]
[%@] initialized.
Gathering cached availability for address: [%@]
No cached spans found for address: [%@].  Ignored event ID: [%@].  Will send out remote fetch for availability.
Found stale cached spans for address [%@] in range with start date [%@] and end date: [%@].  Will send out remote fetch for availability.
Cache hit.   freshly cached spans found.
This availability cache's source is invalid.  Will not execute the availability request.  Cache: [%@]
This availability cache's source does not support availability requests. Will not execute the availability request.  Source account ID: [%@]. Cache: [%@].
Invalid start and end dates given.  Will not execute the availability request.
No addresses given in the availability request.  Completing quickly.
A client requested availability between start date [%@] and end date [%@].  Ignored event ID: [%@].  Addresses: [%@]
[%lu] local cached spans were found for addresses: [%@].  Ignored event ID: [%@].  Sending these results immediately to the requesting client.
Sending network request for addresses: [%@].  Start date: [%@].  End date: [%@]  Ignored event ID: [%@].  Account ID: [%@]
Availability request with ID [%@] received a response with results: [%@]. Elapsed milliseconds: [%f]
Availability request with ID [%@] completed with error: [%@].  Total elapsed milliseconds: [%f]
Cancelling availability request with request ID: [%@]
No spans were returned for address [%@] and ignored event ID [%@]
Failed to deserialize structured data. Error: %@
Failed to serialize structured data dictionary: %@. Error: %@
Running occurrence cache search for search term = %@
Call to calendar daemon failed: %@
Received batch results from server for search term = %@, results = %{public}@/2, finished = %{public}@, reply ID = %{public}@
EKCalendarNotificationReference: failed to get persistent object for notification
After generating a notification, it was observed that its backing data was removed from the database.  Clearing the notification.  Object ID: [%@]  Generated notification: [%@]
Failed to create committed relationship for relation %@ (%{public}@)
Connection interrupted!
Client tried to open too many connections to calaccessd. Refusing to open another
Error setting initialization options: %@
Notifying %d asynchronous operations about the dropped XPC connection
Finished notifying asynchronous operations about the dropped XPC connection
Detected database integrity errors: %@
Will not set a travel lookahead interval of less than 0.  Given value: [%f]
Saving of %lu invisible calendars commencing: %{public}@
No calendar identifier found.  Will not be able to save all invisible calendars.  Calendar: [%@]
Saving calendar identifier [%@] of invisible calendar
Saving of invisible calendars completed.
No calendar sync hash found.  Will not be able to save all calendar sync hashes.  Calendar: [%@]
Saving sync hash [%@] of invisible calendar with identifier [%@]
No calendar sync identifier found.  Will not be able to save all calendar sync identifiers.  Calendar: [%@]
Saving sync identifier [%@] of invisible calendar with identifier [%@]
Not updating deselected calendar identifiers because nothing has actually changed.
Unable to create reminder store. Reminder data will be unavailable.
Error fetching reminder accounts: %@
Source (%@) is an event source without a reminder source; can't get reminder constraints for it.
Got a nil remAccount when fetching constraints for %@
Got a nil capabilities when fetching constraints for %@ (remAccount = %@, type = %d)
Fetching capabilities for source (%@), remAccount (%@), type (%d), supportsLocation (%d)
Tried to call isSourceManaged: on the reminder store for a non-reminder source: %@
Failed to check whether REMAccount (%@) is managed: %@
Error fetching reminder lists: %@
No existing reminder list with identifier %@
Error fetching calendar by identifier: %@
calendar being saved should have an EKFrozenReminderCalendar backing class, but instead has a backing object of type %@
defaultCalendarForNewReminders is nil: %@
No reminder found with unique identifier %@
Error fetching reminder by uniqueId identifier: %@
Unable to create EKReminder from REMReminder for unique identifier %@
No reminders found with external identifier %@
Error fetching reminders by external identifier: %@
Unable to create EKReminder from REMReminder for external identifier %@
No reminder found with identifier %@ (%@)
Error fetching reminder by identifier: %@
Object requiring parent to commit has no parent: %@
Error fetching reminders: %@
Class has no known frozen version: %@
[EKAutocomplete] Search for %@ invoked
[EKAutocomplete] Same search ("%@"), ret %lu results.
[EKAutocomplete] Clear Results
[EKAutocomplete] Cancel search for %@
:: :: CNAutocomplete Update %@ with %@
:: :: CNAutocomplete Failed %@ with error %@
:: :: CNAutocomplete Finished %@
:: :: CNAutocomplete Began network activity for %@
:: :: CNAutocomplete finished network activity for %@
Unexpected nil specificIdentifier for object: %@
Error archiving contact by email predicate. Error: %@.
EKAutocompleteSearch: Beginning spotlight search.
EKAutocompleteSearch: Got spotlight search results.
EKAutocompleteSearch: Search was cancelled before we processed results. Abandoning.
Spotlight query controller returned an error when searching for string (%@), error: %@
EKAutocompleteSearch: Processing results.
EKAutocompleteSearch: Search was cancelled while processing results. Abandoning.
EKAutocompleteSearch: Search took longer than allowed time. Stopping earlier.
EKAutocompleteSearch: Finished processing results.
EKAutocompleteSearch: Search was cancelled while we processed results. Abandoning.
EKAutocompleteSearch: Returning results via callback.
Nil rowID passed in to createOwnerIDWithRowID:objectType:
Invalid owner object type. Type: %@
Invalid rowID passed in. rowID: %@
Invalid databaseID: %d
Computing diff between %@ and %@
Objects are of different classes.  Diff finished
Objects have different values.  Diff finished
Objects have different identities.  Diff finished
One or both objects are nil.
Computing single value differences.
Single value differences? [%d]
Computing single value relationship differences.
Single value relationship differences? [%d] - %@
Computing multi value relationship differences.
Multi value relationship differences? [%d] - %@
Computing identity differences.
Identity differences? [%d] - %@
Computing immutable differences.
Immutable differences? [%d] - %@
-[EKAccountRefresher _eventStoreChanged], and _currentlySyncing changed from %{BOOL}i to %{BOOL}i (sources=%{BOOL}i; calendars=%{BOOL}i)
-[EKAccountRefresher _eventStoreChanged], and _currentlySyncing is still %{BOOL}i (sources=%{BOOL}i; calendars=%{BOOL}i)
%@ has not yet finished refreshing
Calling -[EKAccountRefresher refresh] more than once is not supported.
Started a refresh of %lu accounts and %lu subscribed calendars
_refreshControlMaximumVisibleTimeElapsed; calling sync completed
timed out waiting for sync to start; calling sync completed
Hiding sync spinner after %fs
Validation is failing for %@ because access has not been granted for %{public}@.
Validation is failing for %@ because readonly items can't be removed.
Validation is failing for %@ because it's not deletable by shared calendar sharees.
Attempting to set the same selfAttendee using a different EKAttendee instance. There is no work to be done, but if the passed in instance had changes then they will not be saved when this calendar item is saved.
Changing timeout in [%@] from [%@] to [%@].
Set 'purgingAllowed' from [%@] to [%@] in [%@]
No existing store was found in [%@].  Created event store: [%@].
The purging timeout is 0.  Will not set up an idle timer for [%@].
There is no event store being cached at the moment.  Will not set up an idle timer for [%@].
Purging is disallowed.  Will not set up an idle timer for [%@].
No existing timer found in [%@].  Will create a timer.
Idle timer fired in [%@].
Clearing event store: [%@] in [%@]
Setting the timer's timeout to [%@] seconds and its leeway to [%@] seconds.  The timer will fire around [%@] in [%@]
Uninstalling dispatch timer in [%@]
Adding persistent notification observers for [%@]
Removing persistent notification observers for [%@]
[%@] received notification: [%@]
Ignored low-level [%@] notification in [%@].
Removing transient event store change observer for event store [%@] in [%@]
Firing changed block from [%@]
_applyChangesToSaveRequest:error: called on a class (%{public}@) that doesn't provide an implementation.
This object doesn't know how to update its parent. self=%@, parent=%@
Error saving event for reporting as %@. Error = %@
(cachedJunkStatus) junkStatus was set on the event to %d
(cachedJunkStatus) event was just created event is not junk
(cachedJunkStatus) event is not junk because it was either organized by me or has no attendees
(cachedJunkStatus) my status on the event is accepted or tentative so the event is not junk
(cachedJunkStatus) junk status for the invitation is %@
(couldBeJunk) event could be junk [%@]
(couldBeJunk) event is not junk [%@]
(junkStatusForInvitation) junk reporting is not supported on the server
(junkStatusForInvitation) junk reporting is supported on the server
(junkStatusForInvitation) our contacts reputation check returned that we should %@ the organizer
(junkStatusForInvitation) our eventstore reputation check returned that we should %@ the organizer
Lunar birthday without yearly frequency detected. recurrenceRule = %{public}@, lunarCalendar = %{public}@
Unknown CADFilter subclass: %@
A request to search for more times when all attendees can attend was made.
A request to search for more times when some attendees can attend was made.
Searching reset with organizerAddressForNewlyScheduledEvent [%@] and event [%@]
No event given.  Will not search for alternative times.
The event's source does not support availability requests.  Will not issue search for alternative times.
The event's start date is the same as its end date.  Will not issue search for alternative times.
The event is an all-day.  This is currently not supported.  Will not issue search for alternative times.
Starting original conflict detection - event start date: [%@] event end date: [%@] ignored event ID: [%@] source: [%@]
Extracting attendees for original conflict detection.
Will not consider attendee for conflict detection because it is a room: [%@]
No participant address found for participant: [%@].  Will not search use this participant to search for alternative times.
The event has a dirty date property, so we'll forcibly request availability for this participant: [%@]
Attendee has declined: [%@]
Attendee needs to respond: [%@]
Adding participant with address [%@] to the list of attendees to be included in conflict resolution.  Participant: [%@]
Could not find the organizer's address.  This can sometimes happen if the event is being scheduled for the first time.  Organizer: [%@]
No 'organizerAddressForNewlyScheduledEvent' given.  The organizer for this event is unknown and conflict resolution will likely be incorrect and irrelevant.
Adding organizer with address [%@] to the list of attendees to be included in conflict resolution.  Participant: [%@]
The event's dates have not been dirtied and there are no addresses collected for looking up availability information for the event's original time span.
Detected a conflict.  [%@] attendees have declined.  Will perform conflict resolution by searching for time slots in the future. 
No conflicts detected, but noConflictFound flag set. Will attempt to perform conflict resolution.
No conflicts detected.  Will not attempt to perform conflict resolution.
We need to figure out the availability status of some attendees in order to complete conflict detection.  Attendees: [%@].
self went away.  Returning early.
The availability operation went away.  Returning early.
Error encountered while searching.  Error: [%@]
Could not find participant.  Will not count as busy.  Address: [%@]
This participant is busy during the event's time range: [%@]
This participant is completely free during the event's time range: [%@]
Including declined participants in the list of participants with conflicts.
Conflict detection complete.  Conflicted participants: [%@]
Participants with conflicts found.  Will search for other time slots.  Participants with conflicts: [%@]
No participants with conflicts found.  Will not continue on by searching for other time slots.
Sending off availability request operation for execution: [%@]
A search attempt was requested.
There are no more search attempts remaining.  Will not search.
There is an availability request in progress.  Will not search.
Preparing to search for alternate times in order to proceed with conflict resolution.
The availability search operation went away.  Returning early.
This availability search operation was cancelled: [%@]
Operation resulted in an error.  Re-trying search.  Error: [%@]
Searching for time slots between start date [%@] and end date [%@] with ignored event ID [%@] and addresses [%@]
Resetting search fallback numbers.  Current remaining search attempts: [%@].  Current availability search duration multiplier: [%@]
Resetting of search fallback numbers complete.  New remaining search attempts: [%@].  New availability search duration multiplier: [%@]
No 'state changed' callback found.  Will not send state changed information.  State: [%@]
Sending state change.  State: [%@]
Transitioning to the [%@] state and attempting a search.
Processing results - start date: [%@] end date: [%@] results: [%@]
Found [%@] free times and [%@] non-free times.
Work remains, but there are no more remaining search attempts left.  Search exhausted.
Search has not progressed and no more work remains.  This is an invalid state, as there should always be work to do until we've seen search results or there are no more search attempts left.
There are [%@] remaining search attempts left.  Continuing search.
Halting search.
No leftover spans found for latest date: [%@]
No participant found for participant with address: [%@].  Will not generate time spans for this participant's availability information.
This span's start date is equal to its end date: [%@].  Will not consider this span in alternative time calculations.
Could not find a time span that contains date: [%@]
No replacement spans found.
Validating [%@] spans.
Found span whose start date doesn't match previous span's end date.  Previous lastEndDate: [%@].  Cached span: [%@]
Span's start and end date is the same: [%@]
Span's start date is after its end date: [%@]
Contiguous free spans exist.  Last inspected span: [%@].  This span: [%@]
Time gaps exist in the spans range: [%@]
A zero-duration span exists in the spans range: [%@]
At least one span's start date comes after its end date in the spans range: [%@]
At least two contiguous spans are marked as being free in the spans range: [%@]
Deserialization of trust error [%@]
We were unable to serialize the trust for a certificate error [%@].
Gathering freshly cached spans between [%@] and [%@]
Inserting spans [%@].
ERROR: No span given to insert results.
Clamping date range for spans between [%@] and [%@]
Clamping date range for spans.  Original start date: [%@].  Original end date: [%@].  New start date: [%@].  New end date: [%@].
There is only one span.  Created a new span and set its type to: [%@]
Clamped the spans.  firstTruncatedSpan: [%@].  lastTruncatedSpan: [%@]
No clamping needed.
%s: Error attempting to look up the suggested event for notification [%@] and resource change [%@] with error [%@].
Failed to fetch event for attendee replied notification %{public}@ when attempting to acknowledge. Silently ignoring.
Failed to clear attendee replied notification %{public}@: %@
We completed the import during the file separation phase.
We failed to figure out the different types of files we were trying to import. Aborting import.
We 'succeeded' at importing 0 items. Going to treat this as an error.
Importing iCal files (%@) and vCal files (%@) to calendar %@
Importing files to user-specified calendar with identifier ( %@ )
No destination calendar provided.  Will attempt to choose appropriate calendars.
%@ doesn't have a default calendar to put the items into.
Couldn't handle import for all iTIP files.  Bailing.
Couldn't handle import for all non-iTIP files.  Bailing.
We don't know what calendar to import some files to and we don't have a callback for Calendar selection.  Bailing.
No destination calendar provided. We need to ask the user what calendar to import to for %lu files.
User didn't select calendar, instead cancelled, returning. [%@]
User selected calendar: UID( %@ )
User selected calendar %@
Found a calendar archive among multiple files to import. Ignoring the other files.
Found a calendar archive to import but no method for restoring from the backup file.
Attempting to open version 1.0 .ics file.  Will treat it as a vcs file and import.
Couldn't read calendar data from file "%@".  Aborting open.
File %@ has method PUBLISH or NONE.
Not importing file "%@" because it has either zero or more than one ICSEvent
File %@ is an iTIP message.
File %@ has no VCALENDAR.
Error importing iTIP ICS: %@
We did not import the iTip files [%@].
Importing pre-existing event.  Will stay on current calendar: objectID ( %@ )
Importing a pre-existing event but there were no eligible writeable calendars.
ICS calendar expected to contain a single item, but instead it contained %lu
Expected an event but got %@
Import of [%@] failed with error [%@]
Error fetching changed object IDs: %@
Unsupported entity type: %d
Invalid entity type: %d
Failed to fetch any event sources despite having access to events. Skipping reminder sources and returning 0 sources
Failed to fetch any reminder sources despite having access to reminders. Skipping event sources and returning 0 sources
Event or reminder source without ID: eventSourceID=%@, reminderSourceID=%@, eventSource=%@, reminderSource=%@
Unexpected nil self in birthday update block
Not updating birthday events -- need reset? [%{BOOL}d] birthdays enabled? [%{BOOL}d]
BirthdayEventsGenerationVersion (%d) does not match current version (%d). Forcing regeneration.
BirthdayEventsGenerationLocale (%@) does not match current (%@). Forcing regeneration.
BirthdayEventsGenerationLocale ignoring locale change because locale identifier has not changed (%@)
EKBirthdayListener unable to delete birthday calendar %@, %@
EKBirthdayListener unable to commit birthday calendar deletion %@
Creating Birthday Calendar
EKBirthdayListenerFailed to save calendar to event store with error: %@
EKBirthdayListener inserting birthday for %@ (%@)
EKBirthdayListener unable to save event %@, %@
Resetting All Birthdays in Store
Expected exactly 1 birthday calendar, but instead there are %lu
EKBirthdayListener unable to commit to store %@
EKBirthdayListener received %ld inserted, %ld updated, %ld deleted contacts
No birthday calendar found when trying to add birthdays
EKBirthdayListener removing birthday for %@ (%@)
EKBirthdayListener removing invalid birthday for %@ (%@), No Contact Name!
EKBirthdayListener removing invalid birthday for %@ (%@), Invalid Contact Identifier!
EKBirthdayListener unable to remove event %@ %@
EKBirthdayListener committing changes
Unknown REMFrequency: %li
Unknown frequency: %li
Unknown REMWeekday: %li
Unknown Weekday: %li
Object %@ has no unique identifier: %@
Attempted to acknowledge calendar invite reply notification with objectID %{public}@, but it was not found. Silently ignoring this request.
CADEventPredicate
CADNotifiableEventsPredicate
CADEventsForAssistantSearchPredicate
CADNotificationCenterVisibleEventsPredicate
CADUnacknowledgedEventsPredicate
CADUnalertedEventsPredicate
CADRespondedEventsPredicate
CADUpcomingEventsPredicate
EKMasterEventsPredicate
EKScheduleAgentClientEventsPredicate
CADTravelEventsPredicate
CADUpNextEventsPredicate
CADContactEventsPredicate
CADEventCreatedFromSuggestionPredicate
CADCalendarItemsWithExternalIdentifierPredicate
CADPropertySearchPredicate
CADEventTimeWindowPredicate
CADNaturalLanguageSuggestedEventsSearchPredicate
CADEventsForConferenceURLPredicate
Unexpected predicate class: %@
Unknown Predicate Search
predicateClass=%@; predicateFormat=%@
EKPredicateSearch
error=%i; foundItems=%lu
Error (%d) in reply block for CADDatabaseFetchCalendarItemsWithPredicate attempt %d/%d
All retries exhausted for CADDatabaseFetchCalendarItemsWithPredicate
%@: failed to register result object with objectID: %@
Monitor starting up.
Monitor shutting down.
Ignoring expiration timer because the notification monitor is not running.
Data protection is on. Unable to check for updates.
Sync running, but we've been explicitly told to ignore that and refresh anyway.
Sync running. Waiting for it to finish before checking for updates.
Notification monitor wants to reload notification count. Will fetch notification count from the event store as a result
Set notification count to %{public}@.
Notification monitor wants to reload notifications. Will fetch notification references from the event store as a result.
Set notification references to %@.
Current notification count: %{public}@. Last event notification count: %{public}@.
Is initial check: %{public}@.
Count changed to %{public}@ events, Notifying.
Application badges are not supported on this platform. Will not notify.
Posting notification count changed notification.
No expiring notifications. Not setting expiration timer.
Received multiple expiration dates in the past. Will not set expiration timer. Most recent expiration date received was %{public}@
Next expiration fire time will be %{public}@.
Database changed.
Notification count changed externally.
Alert pref changed.
Expiration timer fired.
Fetching event notifications from event store: %@.
Fetched event notifications from event store: %@.
Faulted in notification: %@.
Sync timer fired.
Sync started. Suppressing notification monitor checks while it runs.
Sync done, %@ changes.
Will not set an availability freshness window of less than 0.  Given value: [%f]
Will not set an overridden travel advisory hypothesis conservative travel time of less than 0.  Given value: [%f]
Will not set an overridden travel advisory hypothesis estimated travel time of less than 0.  Given value: [%f]
Will not set an overridden travel advisory hypothesis aggressive travel time of less than 0.  Given value: [%f]
A detached item's objectID is nil for event %@ (%{public}@)
An object pending commit's objectID is nil for event %@
originalStartDate should not be nil
Unexpected error code given to +_defaultDescriptionForCADErrorCode: %d
Already active.  Will not activate [%@]
Already inactive.  Will not deactivate [%@]
nil 'hypothesis' received in [%@]
Updating [%@] based on new hypothesis. now: [%@] startOfLeaveNowPeriod: [%@] startOfRunningLatePeriod: [%@]
Refreshing [%@]
Period refreshed from [%@] to [%@] in [%@]
Calculated next refresh date of [%@] in [%@]
[%@] is before now.  Will not set up a timer to refresh [%@]
Timer fired in [%@].
+alternateUniverseClass called on a class that does not implement it (%{public}@)
Error loading number %@ from daemon: %@
Error loading date %@ from daemon: %@
Error loading string %@ from daemon: %@
Error loading data %@ from daemon: %@
Error loading to-one relation %@ from daemon: %@
Error loading to-many relation %@ from daemon: %@
Failed to take value for related object with key %@
Could not convert dictionary into EKObjectID. Keys were missing.
Could not convert dictionary into EKObjectID. entityType = %d, rowID = %d
Serialized recurrence rule has invalid interval (%d). Ignoring.
nil 'string' given.  Will not find a corresponding travel state.
Unknown travel state given: [%@].  Will not find a corresponding travel state.
RIDESHARE is unsupported in geoTransportTypeAsString. Returning nil.
nil 'string' given.  Will not find a corresponding transport type.
Unknown transport type given: [%@].  Will not find a corresponding transport type.
nil 'string' given.  Will not find a corresponding traffic density.
Unknown traffic density given: [%@].  Will not find a corresponding traffic density.
Could not archive last sync user info, error = %@
Could not unarchive last sync user info, error = %@
Tried to set proposed start date on invalid event: %@
Beginning location prediction for event: %@
Failed to predict a structured location for event: %@ : %@
Returning location prediction [%@] for event: %@
Setting predicted location title to %@ for the event %@
LocationPrediction: this is %@the main thread. Using timeout %f
LocationPrediction: Reset timeout
LocationPrediction: Updating timeout from %f to %f
LocationPrediction: Not attempting prediction due to past timeouts
Calling _hasRecurrenceRuleChangeRequiringSpanAll on an event that has or had multiple recurrence rules is not supported. Results may be unpredictable. Current count = %d, previous = %d
Updating modified properties for event: %{public}@.
Updating modified properties for detached items: %@.
Updated modified properties: %u. %{public}@. Clear modified flags: %lu. Event: %{public}@
Ignoring added attachment without a UUID: %@
Found the wrong number of added attachments (found %lu, should have had %lu) and those attachments were %@
Event %{public}@ is not significantly detached because it is not detached
Event %{public}@ is significantly detached because its master is a phantom
Event %{public}@ is significantly detached because its start date differs
Event %{public}@ is significantly detached because its end date differs
Event %{public}@ is significantly detached because its location differs
Event %{public}@ is significantly detached because its title differs
Event %{public}@ is significantly detached because its status differs
Event %{public}@ is significantly detached because it is externally organized and its participation status differs
Event %{public}@ is significantly detached because its organizer differs
Couldn't copy attachment file, so we're just going to have to remove the attachment from the moved event
-[EKEvent updateEventToEvent:] is about to save itself [%@] with EKSuggestedEventInfo [%@]
-[EKEvent updateEventToEvent:] failed to save with error: %@
-[EKEvent updateEventToEvent:] saved itself correctly [%@]
-[EKEvent updateEventToEvent:] was given a nil event and will CANCEL itself [%@] with EKSuggestedEventInfo [%@]
-[EKEvent updateEventToEvent:] CANCEL finished correctly [%@], now attempting to save
-[EKEvent updateEventToEvent:] CANCEL failed with error: %@
-[EKEvent updateEventToEvent:] was called on an event without a EKSuggestedEventInfo: %@
Could not parse ICS recurrence rule: %{public}@
Could not construct EKRecurrenceRule from ICS recurrence rule
@Unknown recurrence type
Operation was cancelled.  Will not return results.  Operation: [%@]
No results block.  Will not pass along results [%@] for operation: [%@]
Finishing operation with error: [%@].  Operation: [%@]
Data protection state changed.  New 'dataIsAccessible' state: [%@].
Unexpected CalAttendeeStatus: %d
Unexpected EKParticipantStatus: %d
Error creating alarm: [%@]
Error creating attendee: [%@]
Error creating recurrence rule: [%@]
Deleting previous interactions on calendar %@
Deleting previous interactions on event %@
Donated interaction for action %@ on event %@
Reached maximum depth while validating root object %{public}@
Object of type %{public}@ (uniqueIdentifier = %{public}@) failed validation while validating relation %{public}@ with error [%@].
Property %@ was unavailable on backingObject %@. %@
Unable to set single changed value %@. Property %@ was unavailable on backingObject %@. %@
Unable to add multi changed object values %@. Property %@ was unavailable on backingObject %@. %@
Unable to remove multi changed object values %@. Property %@ was unavailable on backingObject %@. %@
Failed to get melted object for frozen object related by key %@. Event store is %@
Failed to copy %@ (class = %{public}@, objectID = %{public}@) to my event store.
Missing corresponding added object with semantic identifier %@ for relation key %{public}@.
All EKObjects need to have a unique identifier but %@ does not. %@
Unexpected object type %{public}@ in change set for change to single value key %{public}@
Unexpected object type %{public}@ in change set for multi value add for key %{public}@
Unexpected object type %{public}@ in change set for multi value delete for key %{public}@
Got a nil unique identifier for object of type %{public}@ for relation key %{public}@ on object of type %{public}@. Backing object of bad object = %@
Error starting diagnostics collection: %@
Error stopping diagnostics collection: %@
Ignoring new results, because we're already finished: %@
Validating deletion on an EKCalendar that allows both events and reminders. This may not work as expected: %@
Can't merge %@ with %@ because they are the same calendar.
Can't merge %@ with %@ because they are in different sources.
Can't merge %@ with %@ because %@ doesn't allow content modifications
Can't merge %@ with %@ because %@ is a shared calendar
Can't merge %@ with %@ because %@ is a reminder list
Can't merge %@ with %@ because this account doesn't support sharing scheduling and %@ is a shared calendar and %@ isn't.
Can't merge %@ with %@ because %@ isn't deletable
Unexpected error type (%d) in calendar error on calendar %@
Error moving subscribed calendar: %@
Error saving event during removeServerRefreshRelatedProperties. Error: %@
Error saving calendar during removeServerRefreshRelatedProperties. Error: %@
Error committing calendar & events during removeServerRefreshRelatedProperties. Error: %@
Unable to export calendar data: %@
Error trying to report calendar invite as junk. Error: %@
Could not load extension for room type title: %@ identifier: %@ extensionIdentifier: %@, error = %@
Skipping extension join method %@ because it has insufficient information. Title = %@ URL = %@
Extension %@ did not provide any join methods.
Failed to get virtual conference join methods, extension = %@ request = %@ error = %@
Failed to find virtual conference extensions. Error = %@
Skipping extension room type %@ because it has insufficient information. Identifier = %@ title = %@
Request for virtual conference room type cancelled, request = %@ error = %@
Request for virtual conference room interrupted, request = %@ error = %@
Request for virtual conference room types failed, extension = %@ request = %@ error = %@
Request for virtual conference room types failed,timed out
Unexpected CalShareeStatus: %d
Unexpected EKShareeStatus: %d
Unexpected CalShareeAccessLevel: %d
Unexpected EKShareeAccessLevel: %d
Unexpected EKPrivacyLevel: %d
Unexpected CalEventPrivacyLevel: %d
Attempting to set a path (%{public}@) with -[EKSource setConstraintsName:]. Only the name should be supplied without an extension.
Attempting to set a file name with .plist extension (%{public}@) with -[EKSource setConstraintsName:]. Only the name should be supplied without an extension.
Attempting to set an unrecognized constraints name (%{public}@) with -[EKSource setConstraintsName:]. The given name should be a valid .plist resource in CalendarFoundation.
Ignoring attempt to set allowsTasks to %d on source %{public}@. Forcing to NO
Source has more than one calendar with the same external Id: %@
Error deserializing external info: %@
Unexpected type for external info: %{public}@
Error serializing external info: %@
Failed to load EKResourceChange with objectID %{public}@
Received request to find travel time from %@ to %@ by %@ arriving on date %@
Calculating travel time from %@ to %@ by %@ on date %@
Didn't find route or error for routeType %@
Found no travel times, only errors.  Trying again with start as current location
Found no travel times, only errors.  Bailing.
Finished finding travel times with results %@
Can't use current location for travel time estimation because Calendar is not authorized for precise location access.
Getting directions %@ with request %@
Travel time lookup failed with error code %@: %@
Found travel time in seconds %lul
Updating start location with current location information
Updated location to %@
Failed to get placemark with error %@
Making sure that %@ has coordinates
%@ already has coordinates
%@ is for current location.  Let MapKit handle
%@ doesn't have coordinates
%@ has no address
%@ has an address.  Looking up coordinates
Found coordinates for address. Updated location to %@
Couldn't find coordinates for address for %@
Couldn't find coordinates for address for %@ and failed with error %@
Wrong scheme for EKObjectID URL; got %@, expected %@; will return nil for objectIDWithURL:
Redundant specification of database ID 0 (URL %@ has host length %lu)
EKObjectID URL has no path
URL with unrecognized ID type %c
EKObjectID URL has no entity name
Unknown entity name %@ with URI %@
Invalid range passed to +[EKObjectIDsFromData:range:]. Need at least %lu bytes, but only have %lu
Unable to get a temporary location to copy the file to
Unable to copy item to temporary file
'nil' 'event' provided.  Will not generate URL for an event location.
No structured location found.  Will not generate URL for event: [%@]
Error: Could not weak link MapKit string constant symbol '_MKLaunchOptionsFromTimeToLeaveNotificationKey'. Cannot add '_MKLaunchOptionsFromTimeToLeaveNotificationKey' map item URL option as a result.
MapKit handle found.  Generated URL [%@] for location [%@].
Geolocation found.  Generated URL [%@] for location [%@].
No map kit handle or geolocation found.  Will not generate URL for location: [%@]
Travel advisory not supported.  Will not attempt geocode for event: [%@]
Event has no location.  Will not attempt geocode for event: [%@]
Event has geoLocation but no mapKitHandle.  Will not attempt geocode for event: [%@]
Event is a suggested event.  Will not attempt geocode for event: [%@]
Event has unsaved location changes.  Will not attempt geocode for event: [%@]
Event location hasn't changed since we geocoded 24 hours ago.  Will not attempt geocode for event: [%@]
Geocoding finished but the event location changed. Not saving results of geocode.
Geocoding finished with an error: [%@]
Failed to save geocoded event: [%@]
Geocoding finished and event was updated.
Geocoding finished but the location string was not geocodable.
The event has a location that is a conference room.  Will not attempt to geocode its location string.
Automatic location geocoding is disallowed.  Will not attempt to geocode this event's location string.
Starting geocode of location string for event: [%@]
Starting geocode of mapHandle for event: [%@]
Underlying calendar visibility preferences changed.  Notifying client of [%@]
No calendar identifier found.  Will not be able to find all visible calendars.  Calendar: [%@]
No calendar identifier found.  Will not be able get all deselected calendar identifiers.  Calendar: [%@]
[%@] initialized in process: [%@]
Data is protected.  Will not say that protected data became available.
Data is not protected.  Saying that protected data became available.
Initialized event store with access to events only, initialization options include allowing events only = %{public}@, current process disallows reminders by default = %{public}@
Error closing the database: %@
Error getting changes sequence token from daemon: %@
Error getting changes since sequence number from daemon: %@
No object IDs given.  Will not validate object IDs: [%@]
Got a not found error when validating an array of objectIDs. Assuming all are invalid
Error validating object IDs from daemon: %@
Not handling notification "%@" because there is no action for that notification name.
Error getting changed object IDs since timestamp %{public}@ from daemon: %@
EventKit received changed object ID with rowid 0 of entity type %li.
Error getting UUID: %@
Attempted to cache a source before _sources was initialized. Ignoring.
Error getting sources: %@
Invalid source type passed to sourcesEnabledForEntityType: %@
Error getting deletable sources: %@
Failed to get scubscribed calendars source: %@
Failed to get local birthday calendar: %@
parentSourceForDelegateSource called with non-delegate source
Error getting granted delegates list: %@
Error updating granted delegate: %@
Error checking whether source (%{public}@, rowID = %d) is managed: %@
Cannot check whether source (%{public}@) is managed because we don't have access to the entity type it supports
Error clearing calendar %@ from notification center: %@
Attempted to cache a calendar before _calendars was initialized. Ignoring.
Error getting all calendars: %@
Error getting deletable calendars: %@
Failed to save local source when attempting to enable events to save a new calendar: %@
Error getting event with identifier %@: %@
Malformed event URI (%@) passed to _eventWithURI. Expected scheme: %@
Error getting calendar item with URI %@: %@
Error checking for existence of event in eventForUID: %@
Error: objectID provided is nil or has the wrong entity type %{public}@
Error checking for existence of event in eventForObjectID: %{public}@
Error getting event with uniqueId %@: %@
Error getting calendar item with UUID %@: %@
Error getting entity wrappers for event uuids %@: %@
Error getting all events with uniqueId %@: %@
saveEvent
removeEvent
Error setting invitation status for event: %@
Error importing ICS data into calendars %@: %@
Error getting default local calendar: %@
Non-delegate sources do not have their own default calendar.  Pass nil to get the default across all non-delegate sources
Error getting default calendar for new events: %@
You cannot set a default calendar on a non-delegate source.  Pass nil to set the default across all non-delegate sources
A delegate source's default calendar must be one of its own calendars.
Setting default calendar for new events to %{public}@ ("%@") in source %{public}@ (%{public}@ - "%@")
Setting default calendar for new events to %{public}@ ("%@")
Error setting default calendar for new events: %@
%s: Serializing %@ to path %@ for event store %@
%s: Creating directory at path %@
%s: Can't create draft event directory %@ with error %@
%s: Serializing event %@ with attendees %@ and with changeset %@ to file %@
%s: Failed to serialize changeset. Error: [%@]. Event [%@]. Changeset: [%@]
%s: Serialization successful
%s: Failed to serialize changeset event %@ with changeset %@ to file %@: %@
%s: Event has no changes (or was deleted).  Not serializing
%s: Loading event with occurrenceID %@ from path %@ for event store %@
%s: Unable to read data from path %@
%s: Draft at path %@ has incorrect version (%@ vs %@).  Deleting
%s: Failed to deserialize changeset. Error: [%@]. Data: [%@]
Discarding draft for event %@ because the draft was on a calendar that has been deleted.
%s: Found existing event: %@
%s: Computed diff from existing event: %@
%s: Made changeset from diff: %@
%s: Applied changes to event: %@
%s: Return deserialized event %@ with attendees %@
Discarding draft for event %@ because the draft was for an event that has been deleted.
%s: No file exists at path %@
%s: Failed to remove file from path %@ with error %@
%s: Removed file at path %@
Can't save reminder either because you have no access or you're trying to save using the legacy store, which is no longer supported
Malformed event URI (%@) passed to _reminderWithURI. Expected scheme: %@
Malformed event URI passed to _reminderWithURI: %@
Error getting closest occurrence date for event with row ID %i, databaseID %i : %@
Error asking daemon if events have occurrences after date: %@
Cached calendar has no calendarIdentifier: %{public}@
Malformed calendar URI passed to calendarWithExternalURI: %@
Error fetching unique identifiers: %d
Could not fetch error count: %@
Could not fetch errors by source: %@
Error getting occurrence cache occurrences for calendars %@ from daemon: %@
Error getting occurrence cache counts for calendars %@ from daemon: %@
The setting for showing declined events was not successfully set to %{BOOL}d.  Error: [%@]
Sending request to rebuild the occurrence cache.
The occurrence cache was rebuilt successfully.
The occurrence cache was not rebuilt successfully.  Error: [%@]
%s: Failed find out if birthday calendars are enabled with error %@
%s: Unable to set birthday calendars enabled with error %@
%s: Failed to get the Found in Mail calendar with error %@
%s: Could not insert the Found in Mail calendar because it already exists.
%s: Could not insert the Found in Mail calendar with error %@
%s: Could not remove the Found in Mail calendar with error %@
%s - confirmEventByRecordId failed with error %@
%s - event has no suggestions key
%s - promoting saveEvent %@ - had error %@
%s - removeEvent %@ - had error %@
%s - Notifying suggestions we have ignored event %@
%s - rejectEventByRecordId failed with error %@
Error determining if the suggested event calendar is modifiable: %@
%s: Failed to get the Natural Language Suggestions calendar with error %@
Error getting shared calendar invitations for entity types %i from daemon: %@
Error: calendar does not exist when calling respondToSharedCalendarInvitation. calendar: %@
Failed to respond to shared calendar invitation with calendar ID %{public}@, account ID %{public}@: %@
Error getting resource changes: %@
Error marking resource change alerted: %@
EKEventStore: Can't get event notification information. Error: [%@]
EKEventStore: Can't get event notification count. Error: [%@]
Error getting replied event invitation information: %@
Error fetching attachment with UUID. UUID: [%{public}@].  Error: [%@]
Error fetching attachment UUID by external ID. external ID: [%@].  Error: [%@]
Error refreshing source: %@
Unknown entity type: %d for object with rowid: %d
No object ID provided.  Will not find out if the object exists.
Error encountered while checking for existence of object with ID: [%@]  Error: [%@]
Rolling back changes after commit error: %@
Attempting to commit changes in event store: [%@].
Client not allowed to modify the calendar database.  Will not commit.
No changes detected.  Calling commit successful.
%s - Notifying suggestions we have deleted previously confirmed event %@
%s - deleteEventByRecordId failed with error %@
Error committing event store: [%@]
Failed to delete %{public}@ update/insert %{public}@
Got the wrong number of entity wrappers back; asked for %lud things but got %lud
%ld events were found for predicate: %@
Enumeration attempt for events that were fetched is complete.  Predicate: [%@]
Invalid fetchIdentifier given to cancelFetchRequest. Type: %{public}@
Error fetching alarm with UUID.  UUID: [%@].  Error: [%@]
Error fetching alarm with externalID.  externalID: [%@].  Error: [%@]
Error getting alarm occurrences in range: %@
%@: Error building fetch predicate for 'Time to Leave' events. Start date is nil.
%@: Error building fetch predicate for 'Time to Leave' events. End date is nil.
%@: Error building fetch predicate for 'Up Next' events. Start date is nil.
%@: Error building fetch predicate for 'Up Next' events. End date is nil.
Error fetching location authorization status for TTL: %@
Error registering for detailed change tracking: %@
Error unregistering for detailed change tracking: %@
Change data was the wrong size to hold the changes we received. Told of %lu inserts, %lu updates, and %lu deletes, but change data was only %lu bytes long.
A client is passing a token other than the one it most recently fetched to -markChangedObjectIDsConsumedUpToToken:. That's no longer supported.
Error marking changed object IDs as consumed: %@
Somebody called clearSuperfluousChanges. This call is no longer needed and does nothing.
Error getting defaultTimedAlarmOffset: %@
Error getting _defaultAllDayAlarmOffset: %@
Error in call to _saveWithoutNotify: %@
Cannot get source constraints for source %{public}@ because we don't have access to the entity type it supports
Error getting constraints for source: %@
Constraints data size is wrong.  Your version of EventKit is incompatible with the running version of calaccessd.
Error getting notificationCollection for source: %@
NotificationCollectionID requested when it has not yet been created. SourceID: %@
Error checking whether to permit email address: %@
Error checking whether to permitted phone number: %@
Error getting storage usage: %@
Posting synthetic route hypothesis for event external url = %{public}@, route hypothesis = %@
Could not post synthetic route hypothesis for event with external url = %{public}@, error = %d, route hypothesis = %@
Failed to create destination .icbu: %@
Failed to backup: %@
Failed to restore: %@
Attempt to set the default calendar for new reminders using EventKit. This is unsupported. You must use ReminderKit.
Couldn't find out what app opens URL as a universal link, trying to see what opens it as a custom URL scheme: %@
URL should be opened with the FaceTime app, but there was an error fetching FaceTime's application record: %@
Error getting claim binding for URL, error: %@
Failed to find app extension record for extension bundle identifier: %@
Containing record for app extension record could not be found or was the wrong type
Checking if we need to invalidate URL %@
No need to check URL %@
No uses found of %@
Found uses of %@
Not invalidating because state changed to %li while checking
Going to invalidate the URL %@
Unable to find application record for URL %@, not invalidating.
Could not load extension for extensionIdentifier: %@, error = %@
URL invalidated successfully: %@
Unable to invalidate URL: %@
Failed to invalidate virtual conference URL, extension = %@ request = %@ error = %@
ConferenceRenewal: Attempting to extend expiration of URL: %@ to date: %@
ConferenceRenewal: Didn't receive required arguments. URL = %@, expirationDate = %@. Stopping.
ConferenceRenewal: Unrecognized URL type. Stopping.
ConferenceRenewal: Unable to find application record for URL %@, not invalidating.
ConferenceRenewal: Could not load extension for extensionIdentifier: %@, error = %@
ConferenceRenewal: URL renewed successfully: %@
ConferenceRenewal: Unable to renew URL: %@, error = %@
ConferenceRenewal: Request to renew conference URL failed, extension = %@ request = %@ error = %@
Unable to find application record for URL %@, not generating a new URL.
Generated URL %@ to replace %@
Alarm has multiple triggers with the same type; an arbitrary one will be used.
Alarm has no usable triggers (%lu passed in)
Alarm has an unknown trigger type: %{public}@
Frozen reminder alarm being committed has a location alarm without a location alarm trigger. EKFrozenReminderAlarm=%@; _locationAlarm=%@, _locationAlarm.trigger=%@
Alarm to be saved doesn't have a parent reminder: %@
Couldn't fetch reminder to be saved: %@
Unknown alarm trigger type %@ on alarm %@ during cloning. Alarms might not be correctly matched.
Missing Subject, (invalid part-stat?) can't send iMIP event: %@
No email recipients for iMIP event: %@
Could not parse ICSDocument from data: %@
No 'address' given.  Will not create an adjusted address.
'nil' participant given to function: [%s].  Will not compute needs response state.
Migration returned error code %d
Skipping looking up predicted location because process is not entitled.
Failed to get map item from GEOMapService. error code = %ld, domain = %{public}@, error = %@
Got user interaction for mocked location of interest (%{public}@). Interaction type = %d
error reverse geocoding: %@
no results from reverse geocode for %@
reverse geocode timeout for %@
P(~A
softlink:r:path:/System/Library/PrivateFrameworks/ReminderKit.framework/ReminderKit
softlink:r:path:/System/Library/PrivateFrameworks/ReminderKit.framework/ReminderKit
softlink:r:path:/System/Library/PrivateFrameworks/ReminderKit.framework/ReminderKit
softlink:r:path:/System/Library/PrivateFrameworks/ContactsAutocomplete.framework/ContactsAutocomplete
softlink:r:path:/System/Library/PrivateFrameworks/ReminderKit.framework/ReminderKit
softlink:r:path:/System/Library/PrivateFrameworks/ReminderKit.framework/ReminderKit
softlink:r:path:/System/Library/PrivateFrameworks/CoreSuggestions.framework/CoreSuggestions
softlink:r:path:/System/Library/PrivateFrameworks/ReminderKit.framework/ReminderKit
EKDirectorySearchResultSet
EKRecurrenceRule
NSCopying
EKSourceConstraints
EKFrozenReminderCalendar
EKPersistentSharee
Shared
EKFrozenReminderReminder
EKReminderKitSaveAdditions
EKPersistentCalendar
EKFeatureSet
EKAvailabilityCache
EKPredicateEvaluating
EKPersistentSyncError
EKPredicateEvaluator
CADPredicateValidator
NSObject
EKOccurrenceCacheSearch
EKCancellableRemoteOperation
EKSerializableParticipant
UnitTesting
EKPersistentNotification
EKCalendarNotificationReference
EKObject
EKFrozenMeltedPair
EKProtocolMutableObject
EKProtocolObject
EKRecurrenceGenerator
EKEventAction
EKAttendeeChange
EKOwnerIDProviding
EKPersistentRecurrenceRule
CADInterface
CADAccessInterface
CADDatabaseInterface
CADObjectInterface
CADSourceInterface
CADCalendarInterface
CADCalendarItemInterface
CADEventInterface
CADAlarmEngineInterface
CADNotificationMonitorInterface
CADSpotlightInterface
CADInternalInterface
CADTestingInterface
CADMigrationInterface
CADSyncInterface
CADCalendarToolInterface
CADNotificationCountInterface
CADDatabaseStorageManagementInterface
CADBackupRestoreInterface
CADDiagnosticInterface
CADErrorInterface
EKDaemonConnection
CADClientInterface
CADXPCProxyHelperDelegate
EKVirtualConferenceProvider
NSExtensionRequestHandling
EKPreferences
EKCalendarItemChange
EKNotificationChange
EKReminderFetchRequestToken
EKFetchRequestToken
EKReminderStore
EKUpdatedReminderBackingObjectProvider
EKVirtualConferenceRoomTypeDescriptor
EKVirtualConferenceURLDescriptor
EKVirtualConferenceDescriptor
EKStructuredLocationSemanticIdentifierGenerator
EKAutocompleteSearchResult
EKAutocompleterDelegate
EKAutocompleter
CNAutocompleteFetchDelegate
EKChangeListener
EKSuggestedEventInfo
EKParticipantForSorting
EKShareeChange
EKRecents
EKDirectoryResource
EKAutocompletePendingSearch
EKAutocompletePendingSearchProtocol
EKAutocompleteSearch
EKObjectChangeOwnerIDHelper
EKPersistentAttachment
EKDiff
EKObjectSummaryHelpers
EKAvailabilitySpan
CalDateRangeProtocol
EKFrozenReminderStructuredLocation
EKAccountRefresher
EKCalendarItem
EKOccurrenceCacheLocationSearch
EKCompatibility
EKTimedEventStorePurger
EKDirectoryLocation
EKPersistentLocation
EKFrozenReminderObject
EKDefaultSerializerFactory
EKParticipantToContactMatcher
EKNotificationCollectionOptions
EKNullFetchRequestToken
EKEvent_Shared
EKJunkInvitationProtocol_Shared
Deprecated
EKInviteeAlternativeTimeSearcher
EKAdditions
EKInviteReplyNotification
EKSyncStatusChangeListener
EKAttachmentChange
EKParticipant
EKIdentityProtocol
EKCalendarSharedCalendarNotification
EKAvailabilitySpanDate
EKAvailabilityCachedSpanRange
EKPersistentAttendee
EKCalendarSuggestionNotification
EKDirectoryPerson
EKREMCompletionStateReminderPredicate
EKAlarmSemanticIdentifierGenerator
EKCalendarNotification
EKDirectorySearchOperation
EKNotification
EKEventOccurrenceInfo
EKDirectorySearchQuery
EKCalendarEventInvitationNotification
EKCalendarEventInvitationNotificationAttendee
EKSerializableStructuredLocation
EKICSImporter
EKObjectChange
Reminders
EKBirthdayListener
CalContactsProviderDelegate
EKPersistentAlarm
EKOfficeHour
EKEphemeralCacheEventStoreProvider
EKEventStoreProvider
EKPersistentResourceChange
EKFrozenReminderRecurrenceRule
EKRecurrenceIdentifier
EKChangeSet
EKPersistentExceptionDate
EKNotificationCollection
EKCalendarInviteReplyNotification
EKEventFetchRequestToken
EKPredicateExpanding
EKPredicateSearch
EKResourceChangeNotificationChange
EKReminder
EKRecurrenceChange
_EKNotificationMonitor
EKDirectoryRecord
EKDebugPreferences
EKSecureKeyedArchiverSerializer
EKSerializer
EventKit
EKPersistentOrganizer
EKOrganizerChange
EKPersistentInviteReplyNotification
EKTravelAdvisoryTimelinessAuthority
CalActivatable
EKExceptionDate
EKPersistentEvent
EKObjectChangeSummarizer
EKTravelEngineHypothesis
NSMutableCopying
NSSecureCoding
NSCoding
EKMutableTravelEngineHypothesis
EKEventActionChange
EKWeakReference
EKPersistentObject
EKParticipantChange
EKGroupExpansionOperation
EKSerializableRecurrenceRule
EKTravelEngineUtilities
EKSharedEventStoreProvider
EKPersistentEventAction
EKAvailabilityUtilities
EKSyncStatusUtils
EKResourceChangeNotification
EKEvent
EKJunkInvitationProtocol_Private
EKOrganizer
EKREMReminderPredicate
EKRequestAvailabilityOperation
EKDataProtectionObserver
EKAttendee
EKAlarmChange
EKChangeTrackingClientId
EKSerializableEvent
EKEventActionHandler
EKObjectValidationContext
EKPersistentSuggestedEventInfo
EKDiagnosticsCollector
EKRecurrenceDayOfWeek
EKDirectoryGroup
EKDuetSignalEventSerializer
EKSpotlightSearch
UnitTest
EKCalendar
CGColorWrapper
EKCalendarShareeOrOwner
EKAlarm
EKVirtualConference
EKVirtualConferenceRoomType
EKVirtualConferenceJoinMethod
EKSharee
EKSource
EKVirtualConferenceExtensionContext
EKCalendarResourceChangeNotification
EKPersistentParticipant
EKCalendarChange
EKPredictedLocationOfInterest
EKTravelLookupManager
EKStructuredLocation
EKObjectID
EKRecurrenceEnd
EKPersistentCalendarItem
EKRelation
EKSerializableObject
EKAttachment
EKEventStore
EKMapsUtilities
EKEventChange
EKCalendarVisibilityManager
CADCalendarVisibilityManager
EKSerializableAttachment
EKEventStoreWeakWrapper
EKDaemonConnectionDelegate
EKResourceChange
EKSourceChange
EKSequenceToken
EKConferenceUtils
CachedApplicationRecord
EKConferenceInvalidationRecord
EKInviteeAlternativeTime
EKContactChange
EKFrozenReminderAlarm
EKiMIPHandler
EKiMIPUpdate
EKiMIPInvitation
EKiMIPCancel
EKiMIPReply
EKSyncError
EKFrozenReminderSource
EKReadWriteLock
EKCredentials
EKPersistentResourceChangeNotification
EKSuggestionNotificationChange
EKPersistentSource
EKConferenceDeserializationResult
ConferenceDatatypeConverter
EKConferencePersistence
EKSerializableAlarm
EKRecurrenceHelper
EKExceptionDateChange
EKConflictDetails
EKInviteReplyNotificationChange
EKUICreateEventIntent
EKUICreateEventIntentResponse
EKAvailabilityCachedSpan
EKCalendarPreferences
EKNotificationPreferences
CalendarAdditions
EKInviteeTimeSpan
EKStructuredLocationPrediction
locations
setLocations:
groups
setGroups:
resources
setResources:
people
setPeople:
.cxx_destruct
_locations
_groups
_resources
_people
T@"NSSet",&,N,V_locations
T@"NSSet",&,N,V_groups
T@"NSSet",&,N,V_resources
T@"NSSet",&,N,V_people
arrayWithObjects:count:
initRecurrenceWithFrequency:interval:end:
init
setUUID:
setFrequency:
setInterval:
setFirstDayOfTheWeek:
updatePersistentValueForKeyIfNeeded:
raise:format:
setRecurrenceEnd:
setDaysOfTheWeek:
setDaysOfTheMonth:
setSetPositions:
setMonthsOfTheYear:
setDaysOfTheYear:
setWeeksOfTheYear:
initRecurrenceWithFrequency:interval:daysOfTheWeek:daysOfTheMonth:monthsOfTheYear:weeksOfTheYear:daysOfTheYear:setPositions:end:
singleChangedValueForKey:
setSingleChangedValue:forKey:
stringValueAsDateOnly:isFloating:
stringWithFormat:
isProgramSDKAtLeast:
copyWithZone:
frequency
interval
recurrenceEnd
specifier
setSpecifier:
firstDayOfTheWeekRaw
setFirstDayOfTheWeekRaw:
setDay:
setMonth:
setYear:
exceptionWithName:reason:userInfo:
integerValue
numberWithUnsignedInt:
frequencyRaw
setFrequencyRaw:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
numberWithUnsignedInteger:
unsignedIntegerValue
endDate
count
initWithEndDate:
initWithOccurrenceCount:
cachedValueForKey:populateBlock:
isEqual:
copy
setCachedValue:forKey:
setEndDate:
setCount:
usesEndDate
occurrenceCount
setCachedEndDate:
setCachedEndDateTimeZone:
intValue
_ekWeekdayFromCalDayOfWeek:
_calDayOfWeekFromEKWeekday:
initWithSpecifier:
_recurrenceHelper
daysOfTheWeek
_updateSpecifierIfNeeded
daysOfTheMonth
daysOfTheYear
weeksOfTheYear
monthsOfTheYear
setPositions
isDirty
_resetInternalState
clearCachedValueForKey:
rollback
changeSet
changedKeys
countByEnumeratingWithState:objects:count:
isEqualToString:
compare:
cachedEndDate
currentCalendar
timeZone
setTimeZone:
eventStore
startDate
components:fromDate:
dueDate
numberWithInteger:
array
addObject:
valueForKey:
isEqualToArray:
setFormatterBehavior:
timeZoneWithName:
setDateFormat:
stringFromDate:
defaultTimeZone
dateInFloatingTimeZoneFromDate:inTimeZone:
string
iCalendarValueFromRecurrenceType:
appendFormat:
_adjustDateIntoUTC:dateOnly:floating:
iCalendarValueFromDate:isDateOnly:isFloating:
objectAtIndex:
iCalendarDescription
firstDayOfTheWeek
objectAtIndexedSubscript:
stringWithString:
humanReadableDescriptionWithStartDate:isConcise:
dayOfTheWeek
icsWeekDayFromDayOfTheWeek:
weekNumber
initWithWeekday:number:
daysTypeForDayArray:
humanReadableDescriptionWithStartDate:ofRecurrenceRuleICSString:isConcise:
mutableCopy
setObject:atIndexedSubscript:
_acceptableStartDateRangeWithCurrentStartDate:calendar:
containsDate:
newStartDateIsValid:currentStartDate:calendar:
distantPast
distantFuture
rangeWithStartDate:endDate:
rangeOfUnit:startDate:interval:forDate:
rangeWithStartDate:duration:
_acceptableStartDateRangeForDailyRecurrenceWithCurrentStartDate:
_acceptableStartDateRangeForWeeklyRecurrenceWithCurrentStartDate:calendar:
_acceptableStartDateRangeForMonthlyRecurrenceWithCurrentStartDate:calendar:
_acceptableStartDateRangeForYearlyRecurrenceWithCurrentStartDate:calendar:
calendarIdentifier
knownSingleValueKeysForComparison
frozenClass
knownIdentityKeysForComparison
recurrenceRuleWithType:interval:end:
iCalendarValueFromDayOfTheWeek:
UUID
description
dateComponents
cachedEndDateTimeZone
invalidateCachedEndDate
dirtyStateMayAffectExceptionDates
mayOccurAfterDate:
pinToEndsOfMonthsWithCalendarItem:
isWeekdayRule
isWeekendRule
isAnyDayRule
isSimpleRule
humanReadableDescriptionWithStartDate:
hasDuplicateMonthsOfYear
newStartDateIsInvalid:currentStartDate:calendar:
isEqualToRecurrenceRule:
shouldPinMonthDays
_shouldPinMonthDays
_usesEndDate
TB,R,N,V_shouldPinMonthDays
T@"NSDateComponents",R,N
TB,R,V_usesEndDate
T@"NSString",R,N
T@"NSDate",R,N
TB,R,N
T@"EKRecurrenceEnd",C,N
Tq,R,N
T@"NSArray",R,N
initWithCDBSourceConstraintFlags:
allAllowSourceConstraints
maxAlarmsAllowed
setMaxAlarmsAllowed:
maxRecurrencesAllowed
setMaxRecurrencesAllowed:
supportsAlarmTriggerIntervals
setSupportsAlarmTriggerIntervals:
supportsAlarmTriggerDates
setSupportsAlarmTriggerDates:
supportsAlarmsTriggeringAfterStartDate
setSupportsAlarmsTriggeringAfterStartDate:
snoozeAlarmRequiresDetach
setSnoozeAlarmRequiresDetach:
organizerCanSeeAttendeeStatuses
setOrganizerCanSeeAttendeeStatuses:
inviteesCanSeeAttendeeStatuses
setInviteesCanSeeAttendeeStatuses:
statusesAreAccurate
setStatusesAreAccurate:
supportsIncomingInvitations
setSupportsIncomingInvitations:
supportsOutgoingInvitations
setSupportsOutgoingInvitations:
requiresOutgoingInvitationsInDefaultCalendar
setRequiresOutgoingInvitationsInDefaultCalendar:
supportsInvitationModifications
setSupportsInvitationModifications:
supportsEventForwarding
setSupportsEventForwarding:
supportsResponseComments
setSupportsResponseComments:
deliverySourceOrExternalIDRequiredForResponse
setDeliverySourceOrExternalIDRequiredForResponse:
proposedStatusRequiredForResponse
setProposedStatusRequiredForResponse:
declinedStatusChangeRequiresNoPendingStatus
setDeclinedStatusChangeRequiresNoPendingStatus:
eventDurationConstrainedToRecurrenceInterval
setEventDurationConstrainedToRecurrenceInterval:
occurrencesMustOccurOnSeparateDays
setOccurrencesMustOccurOnSeparateDays:
futureStartDateLimitedToOccurrenceCacheBounds
setFutureStartDateLimitedToOccurrenceCacheBounds:
supportsRecurrencesOnDetachedEvents
setSupportsRecurrencesOnDetachedEvents:
recurrencesShouldPinToMonthDays
setRecurrencesShouldPinToMonthDays:
requiresAttendeeSearchInSingleAccount
setRequiresAttendeeSearchInSingleAccount:
mustAcknowledgeMasterEvent
setMustAcknowledgeMasterEvent:
canSetAvailability
setCanSetAvailability:
eventAvailabilityLimited
setEventAvailabilityLimited:
requiresMSFormattedUID
setRequiresMSFormattedUID:
shouldCancelDeletedEvents
setShouldCancelDeletedEvents:
shouldDeclineDeletedInvitations
setShouldDeclineDeletedInvitations:
supportsStructuredLocations
setSupportsStructuredLocations:
supportsReminderActions
setSupportsReminderActions:
supportsReminderLocations
setSupportsReminderLocations:
supportsAlarmProximity
setSupportsAlarmProximity:
allowsCalendarAddDeleteModify
setAllowsCalendarAddDeleteModify:
allowsTasks
setAllowsTasks:
allowsEvents
setAllowsEvents:
supportsURLField
setSupportsURLField:
supportsAllDayDueDates
setSupportsAllDayDueDates:
supportsSharedCalendars
setSupportsSharedCalendars:
isFacebook
setIsFacebook:
recurrenceSeriesMustIncludeMoreThanFirstOccurrence
setRecurrenceSeriesMustIncludeMoreThanFirstOccurrence:
supportsPrivateEvents
setSupportsPrivateEvents:
prohibitsPrivateEventsWithAttendees
setProhibitsPrivateEventsWithAttendees:
supportsAvailabilityRequests
setSupportsAvailabilityRequests:
supportsIgnoringEventsInAvailabilityRequests
setSupportsIgnoringEventsInAvailabilityRequests:
supportsLocationDirectorySearches
setSupportsLocationDirectorySearches:
requiresSamePrivacyLevelAcrossRecurrenceSeries
setRequiresSamePrivacyLevelAcrossRecurrenceSeries:
supportsInboxAvailability
setSupportsInboxAvailability:
prohibitsMultipleMonthsInYearlyRecurrence
setProhibitsMultipleMonthsInYearlyRecurrence:
prohibitsMultipleDaysInMonthlyRecurrence
setProhibitsMultipleDaysInMonthlyRecurrence:
prohibitsYearlyRecurrenceInterval
setProhibitsYearlyRecurrenceInterval:
requiresOccurrencesConformToRecurrenceRule
setRequiresOccurrencesConformToRecurrenceRule:
prohibitsDetachmentOnCommentChange
setProhibitsDetachmentOnCommentChange:
allowsProposeNewTime
setAllowsProposeNewTime:
prohibitsICSImport
setProhibitsICSImport:
supportsAutoGeocodingStructuredLocations
setSupportsAutoGeocodingStructuredLocations:
supportsJunkReporting
setSupportsJunkReporting:
supportsPhoneNumbers
setSupportsPhoneNumbers:
attendeesUseDeletedByOrganizerStatus
setAttendeesUseDeletedByOrganizerStatus:
prohibitsSlicingEventsWithAttendees
setProhibitsSlicingEventsWithAttendees:
supportsSubscribedCalendars
setSupportsSubscribedCalendars:
supportsManagedSubscribedCalendars
setSupportsManagedSubscribedCalendars:
supportsSubscriptionMirroring
setSupportsSubscriptionMirroring:
supportsParticipantRoles
setSupportsParticipantRoles:
supportsAttachments
setSupportsAttachments:
requiresOpeningAttachmentAsLink
setRequiresOpeningAttachmentAsLink:
shouldUseDeleteAndAddInsteadOfMoveBetweenCalendars
setShouldUseDeleteAndAddInsteadOfMoveBetweenCalendars:
supportsFloatingTimeZone
setSupportsFloatingTimeZone:
prohibitsUsingEventOrganizerEmailWhenComposingMail
setProhibitsUsingEventOrganizerEmailWhenComposingMail:
supportsDelegation
setSupportsDelegation:
supportsDelegateEnumeration
setSupportsDelegateEnumeration:
supportsInvitationModificationsWithoutNotification
setSupportsInvitationModificationsWithoutNotification:
supportsRecurrenceSplit
setSupportsRecurrenceSplit:
supportsPush
setSupportsPush:
supportsTravelTime
setSupportsTravelTime:
requiresSeparateFilesForAllAttachments
setRequiresSeparateFilesForAllAttachments:
occurrenceOrderEnforcedAfterDetachment
setOccurrenceOrderEnforcedAfterDetachment:
allowsPrivateEventAccessByDelegate
setAllowsPrivateEventAccessByDelegate:
_flags
Ti,N
TB,N
setSkipsPersistentObjectCopy:
newObjectID
uuid
UUIDString
changeSingleValue:forKey:basedOn:
initWithREMObject:inStore:withChanges:
_list
objectID
initWithUUIDString:
objectIDWithUUID:
name
valueForSingleValueKey:backingValue:
title
ekColor
hexColorStringFromREMColor:
sharingStatus
ekSharingStatusFromREMSharingStatus:
uppercaseString
colorWithHexString:
hasPrefix:
length
substringToIndex:
hexString
stringByAppendingString:
account
eventSourceIDForReminderSourceID:
sourceWithIdentifier:
backingObject
frozenObjectForReminderObject:
frozenReminderSource
remAccount
hasUnsavedChangeForKey:
valueForSingleValueKey:basedOn:
setName:
REMColorFromEKHexColorString:
setColor:
errorWithEKErrorCode:
REMObject
saveRequest
updateAccount:
addListChangeItem:
updateListWithSaveRequest:error:
_applyChanges:error:
reminderSource
isNew
remObjectID
addListWithName:toAccountChangeItem:listObjectID:
updateList:
daDisplayOrder
externalIdentifier
sharedOwnerName
meltedClass
initNewListInStore:
unlocalizedTitle
colorStringRaw
isPublished
publishURLString
source
_account
uniqueIdentifier
_applyChangesToSaveRequest:error:
displayOrder
flags
allowedEntities
allAlarms
sharees
symbolicColorName
externalID
isColorDisplayOnly
syncError
_listChange
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
setWithObject:
relationWithEntityName:toMany:inversePropertyNames:ownsRelated:
initWithObjectsAndKeys:
displayName
setDisplayName:
address
setAddress:
setExternalID:
shareeStatusRaw
setShareeStatusRaw:
shareeAccessLevelRaw
setShareeAccessLevelRaw:
primitiveStringValueForKey:
primitiveSetStringValue:forKey:
primitiveIntValueForKey:
primitiveSetIntValue:forKey:
primitiveSetRelationValue:forKey:
primitiveRelationValueForKey:
primitiveBoolValueForKey:
primitiveSetBoolValue:forKey:
firstName
lastName
defaultPropertiesToLoad
relations
entityType
setFirstName:
setLastName:
setOwner:
owner
shareeMuteRemoval
setShareeMuteRemoval:
isFacebookSource
URLWithString:
emailAddress
predicateForContactMatchingEKParticipantWithName:emailAddress:URL:predicateDescription:
contactPredicate
_reminder
calendarItemIdentifier
setTitleAsString:
list
type
removeFromList
addReminderChangeItem:
_reminderCopiedToNewList:
setCreationDate:
setNotesAsString:
setIcsUrl:
startDateComponents
setStartDateComponents:
dueDateComponents
setCalendar:
setDueDateComponents:
completionDate
setCompleted:
setCompletionDate:
priority
setPriority:
calendarItemExternalIdentifier
setDaCalendarItemUniqueIdentifier:
hasUnsavedMultiValueRemovalForKey:
multiValueRemovals
objectForKeyedSubscript:
alarms
removeAlarm:
hasUnsavedMultiValueAdditionForKey:
multiValueAdditions
setPath:
removeAllRecurrenceRules
recurrenceRulesSet
addUpdatedRecurrenceRule:
appLinkData
initWithUserActivityData:
setUserActivity:
actionString
initWithUniversalLink:
calendar
addReminderWithTitle:toListChangeItem:reminderObjectID:
updateReminder:
initWithReminderChangeItem:insertIntoListChangeItem:
_trackReminderChangeItem:
_fixAlarmUUIDsForClone:from:
initWithCapacity:
semanticIdentifierFromREMAlarm:
setObject:forKeyedSubscript:
alarmUID
firstObject
removeObjectAtIndex:
setAlarmUID:
originalAlarmUID
setOriginalAlarmUID:
daCalendarItemUniqueIdentifier
titleAsString
notesAsString
icsUrl
absoluteString
lastModifiedDate
creationDate
setWithCapacity:
frozenAlarmForREMAlarms:
valuesForMultiValueKey:basedOnSet:
calendarWithIdentifier:
userActivity
userActivityData
universalLink
structuredLocation
notes
recurrenceRules
initWithREMObject:inStore:
initNewReminderInStore:
_copyToNewList:error:
URLString
allAlarmsSet
uniqueID
structuredLocationWithoutPrediction
hasRecurrenceRules
hasAttendees
hasNotes
attendeesRaw
clientLocation
organizer
selfAttendee
originalItem
travelStartLocation
attachmentsSet
detachedItems
ekExceptionDates
defaultAlarmRemoved
defaultAlarmWasDeleted
forceChangeValue:forKey:
forceUpdateFrozenCalendar:
relationWithEntityName:toMany:inversePropertyNames:
primitiveDataValueForKey:
primitiveSetDataValue:forKey:
primitiveDateValueForKey:
primitiveSetDateValue:forKey:
propertyKeyForUniqueIdentifier
externalIDTag
setExternalIDTag:
externalModificationTag
setExternalModificationTag:
syncToken
setSyncToken:
externalRepresentation
setExternalRepresentation:
setUnlocalizedTitle:
lastSyncTitle
setLastSyncTitle:
setColorDisplayOnly:
setSymbolicColorName:
setColorStringRaw:
setDisplayOrder:
setFlags:
setSharingStatus:
setSharedOwnerName:
sharedOwnerURLString
setSharedOwnerURLString:
sharingInvitationResponse
setSharingInvitationResponse:
setPublishURLString:
setIsPublished:
setPublished:
notifications
setNotifications:
setSharees:
setSource:
invitationStatus
setInvitationStatus:
setAllowedEntities:
selfIdentityDisplayName
setSelfIdentityDisplayName:
selfIdentityEmail
setSelfIdentityEmail:
selfIdentityPhoneNumber
setSelfIdentityPhoneNumber:
selfIdentityAddressString
setSelfIdentityAddressString:
selfIdentityFirstName
setSelfIdentityFirstName:
selfIdentityLastName
setSelfIdentityLastName:
ownerIdentityDisplayName
ownerIdentityId
setOwnerIdentityId:
setOwnerIdentityDisplayName:
ownerIdentityEmail
setOwnerIdentityEmail:
ownerIdentityPhoneNumber
setOwnerIdentityPhoneNumber:
ownerIdentityAddressString
setOwnerIdentityAddressString:
ownerIdentityFirstName
setOwnerIdentityFirstName:
ownerIdentityLastName
setOwnerIdentityLastName:
setNotes:
pubcalAccountID
setPubcalAccountID:
subcalAccountID
setSubcalAccountID:
subcalURL
setSubcalURL:
pushKey
setPushKey:
digest
setDigest:
setAllAlarms:
refreshDate
setRefreshDate:
refreshInterval
setRefreshInterval:
subscriptionID
setSubscriptionID:
lastSyncStartDate
setLastSyncStartDate:
lastSyncEndDate
setLastSyncEndDate:
setSyncError:
maxAttendees
setMaxAttendees:
locale
setLocale:
shared
bypassSplashScreen
lastConfirmedSplashScreenVersion
_currentSplashScreenVersion
setLastConfirmedSplashScreenVersion:
isTravelAdvisorySupported
isConservativeEntryEnabled
areVehicleTriggersEnabled
eventDetailsDayPreviewEnabled
calendarListViewCellsFeaturesExtraContent
calendarListViewCellsFeaturesAttendeeInformation
areQuickActionsSupported
areApplicationBadgesSupported
isSuggestionsEnabled
isContinuitySupported
areContextualRemindersSupported
mustDisplaySplashScreenToUser
userAcknowledgedSplashScreen
automaticGeocodingEnabled
eventsFoundInAppsEnabled
initWithSource:
constraints
sourceIdentifier
initWithFormat:
UTF8String
initWithSuperclassDescription:
setKey:withString:
setKey:withBoolean:
setKey:withDictionary:
build
_dictionaryForIgnoredEventID:
objectForKey:
gatherFreshlyCachedSpansBetweenStartDate:endDate:
setObject:forKey:
errorWithDomain:code:userInfo:
_isValidStartDate:endDate:
_validateRequestStartDate:endDate:addresses:error:
_cachedSpanResultsBetweenStartDate:endDate:ignoredEventID:addresses:
allKeys
predicateWithBlock:
filteredArrayUsingPredicate:
start
elapsedTimeAsNumber:
_handleResults:resultsBlock:ignoredEventID:
dictionaryWithObjects:forKeys:count:
_logRequestElapsedTime:forNumberOfAddresses:
sharedConnection
requestCalendarAvailabilityWithAccountID:startDate:endDate:ignoredEventID:addresses:resultsBlock:completionBlock:
cancelCalendarAvailabilityRequestWithID:
_generateEventKitSpansFromPersistenceSpans:
enumerateKeysAndObjectsUsingBlock:
insertSpans:
CalIsAfterDate:
_convertType:
initWithStartDate:endDate:type:
enumerateObjectsUsingBlock:
numberWithDouble:
requestAvailabilityBetweenStartDate:endDate:ignoredEventID:addresses:resultsBlock:completionBlock:
cachedAvailabilityInDateRange:ignoredEventID:addresses:
cachedAvailabilityInDateRange:ignoredEventID:addresses:results:
cancelAvailabilityRequestWithID:
_sourceIsInvalid
_accountID
_sourceSupportsAvailabilityRequests
_processingQueue
_callbackQueue
_addressesToCachedSpanRanges
_ignoredEventIDsToAddressBasedCaches
_nextRequestID
_cancelledID
ekPredicateEvaluateWithObject:
setErrorType:
errorType
setErrorCode:
errorCode
setUserInfoData:
userInfoData
evaluatePredicate:withObject:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
defaultPermittedClasses
unarchiveDictionaryFromData:permittedClasses:strict:error:
archiveDictionary:permittedClasses:strict:error:
localStructuredData
structuredData
_structuredDataDictionaryFromData:local:
removeObjectForKey:
_dataFromStructuredDataDictionary:local:
setLocalStructuredData:
setStructuredData:
_customObjectForKey:local:
_setCustomObject:forKey:local:
customObjectForKey:
setCustomObject:forKey:
localCustomObjectForKey:
setLocalCustomObject:forKey:
willSave
T@"NSData",C,N
initWithCalendars:searchTerm:store:callback:
connection
CADOperationProxySync
CADOccurrenceCacheSearchWithTerm:inCalendars:responseToken:reply:
addCancellableRemoteOperation:
performSearchOperation:inCalendars:withEventStore:andSearchTerm:
errorWithCADResult:
removeCancellableRemoteOperation:
CADOperationProxy
unsignedIntValue
CADOccurrenceCacheCancelSearchWithReplyID:
cancel
numberWithBool:
objectIDWithCADObjectID:
searchWithCalendars:searchTerm:store:callback:
disconnected
receivedBatchResultsFromServer:finished:
searchTerm
_calendars
_searchTerm
_store
_callback
_replyID
_canceled
setEmailAddress:
phoneNumber
setPhoneNumber:
setUrl:
participantRole
setParticipantRole:
participantStatus
setParticipantStatus:
participantType
setParticipantType:
attendeeWithName:emailAddress:phoneNumber:url:
classesForKey
initWithParticipant:
createAttendee:
_name
_emailAddress
_phoneNumber
_url
_participantRole
_participantStatus
_participantType
T@"NSString",C,N,V_name
T@"NSString",C,N,V_emailAddress
T@"NSString",C,N,V_phoneNumber
T@"NSURL",&,N,V_url
Tq,N,V_participantRole
Tq,N,V_participantStatus
Tq,N,V_participantType
CADObjectID
cachedConstraintsForSourceWithCADObjectID:
T@"NSString",R,D,N
sourceType
Tq,D,N
T@"NSString",C,D,N
defaultAlarmOffset
T@"NSNumber",C,D,N
disabled
TB,D,N
onlyCreatorCanModify
preferredEventPrivateValue
Ti,D,N
strictestEventPrivateValue
hostURL
setHostURL:
initWithType:objectID:date:eventStore:
_notification
registerFetchedObjectWithID:
initWithPersistentObject:occurrenceDate:
initWithEvent:
initWithPersistentObject:
initWithType:
setTitle:
setHiddenFromNotificationCenter:
sharedOwnerEmail
sharedOwnerPhoneNumber
sharedOwnerURL
setURL:
setAlerted:
setDotColor:
setObjectID:
externalURI
allowedEntityTypes
setAllowedEntityTypes:
couldBeJunk
setCouldBeJunk:
publicObjectWithPersistentObject:
shareeStatus
calendarName
shareeDisplayName
shareeEmailAddress
shareePhoneNumber
shareeURL
alerted
setStatus:
inviteReplyCalendar
CGColor
URIRepresentation
sourceForInviteReplyNotification:
calendarItem
_notificationTypeForResourceChange:notificationType:
changeType
deletedTitle
setWithArray:
changedByDisplayName
setCalendarName:
eventIdentifier
setEventID:
containsObject:
setEvent:
setChangeType:
createCount
setCreateCount:
updateCount
setUpdateCount:
deleteCount
setDeleteCount:
dateChanged
setDateChanged:
timeChanged
setTimeChanged:
locationChanged
setLocationChanged:
titleChanged
setTitleChanged:
setStartDate:
CalSimulatedDateForNow
earliestOccurrenceEndingAfter:excludeSignificantDetachments:excludeCanceledDetachments:excludeDeclinedDetachments:
setStartDateForNextOccurrence:
endDateUnadjustedForLegacyClients
isAllDay
setAllDay:
locationWithoutPrediction
setLocation:
updateSuggestedEventWithEventStore:
objectWithIDExists:
rowID
currentLocale
descriptionWithLocale:
initWithType:objectID:eventStore:
notification
_date
_lock
_type
_objectID
_eventStore
Ti,R,N,V_type
T@"EKCalendarNotification",R,N
T@"EKObjectID",R,N,V_objectID
T@"EKEventStore",R,N,V_eventStore
_sharedInit
isObjectInserted:
markAsNew
additionalFrozenProperties
isPropertyUnavailable:
_isNew
_hasChanges
committedCopy
diffWithObject:
result
doesNotRecognizeSelector:
frozenObjectInStore:
persistentObject
isEqual:comparingKeys:compareImmutableKeys:ignoringProperties:
_object:equalsObject:forKeys:compareImmutableKeys:ignoringProperties:
_objects:haveSameMeltedClass:frozenClass:
_compareKnownKeys:forObject:againstObject:compareImmutableKeys:propertiesToIgnore:
_compareKnownKeys:forObject:againstObject:compareIdentityKeys:compareImmutableKeys:propertiesToIgnore:
_compareIdentityKeysForObject:againstObject:propertiesToIgnore:
_compareNonIdentityKeys:forObject:againstObject:compareImmutableKeys:propertiesToIgnore:
knownRelationshipMultiValueKeys
knownRelationshipSingleValueKeys
knownImmutableKeys
intersectSet:
allObjects
_compareSingleValueRelationshipKeys:forObject:againstObject:propertiesToIgnore:
_compareMultiValueRelationshipKeys:forObject:againstObject:propertiesToIgnore:
_compareNonRelationshipKeys:forObject:againstObject:propertiesToIgnore:
_compareSingleValueRelationshipKey:forObject:againstObject:propertiesToIgnore:
_compareMutliValueRelationshipKey:forObject:againstObject:propertiesToIgnore:
isPartialObject
_createNonPartialObjectFromObject:ifPropertyIsUnavailable:
dictionaryWithCapacity:
_compareRelationshipObject1:againstRelationshipObject2:propertiesToIgnore:
isWeakRelationship
isEqual:ignoringProperties:
hasChanges
initWithPersistentObject:objectForCopy:
_isPropertyUnavailable:convertToFullObjectIfUnavailable:
rebaseToEventStore:
rebaseSkippingRelationProperties:toEventStore:
_initChangeSetIfNone
_setEventStore:
keysToIgnoreForApplyingChanges
setValue:forKey:
isMeltedAndNotWeakRelationshipObject:forKey:
frozenObject
rollbackChangesForKeys:
addMultiChangedObjectValue:forKey:
setPersistentObject:
existsInStore
arrayWithCapacity:
isTemporary
CADObjectsExist:reply:
mutableCopyWithZone:
_copyWithoutChangesInZone:
hasUnsavedChanges
addChangesFromObject:copyingBackingObjects:
allocWithZone:
setAdditionalFrozenProperties:
duplicateToEventStore:
loadedPropertyForKey:
null
defaultPropertyKeysToSkipForRecursiveSnapshotCopies
_recursiveSnapshotCopyWithPropertyAccessor:propertyKeysToCopy:propertyKeysToSkip:recurseOnWeakRelations:
snapshotCopyWithPropertyKeysToCopy:
snapshotCopyWithPropertyKeysToCopy:propertyKeysToSkip:
_previousValueForKey:
cachedMeltedObjectForSingleValueKey:
additionalMeltedObjects
cachedMeltedObjectsForMultiValueKey:
removeObject:
minusSet:
_array:intersectedWithSet:minusSet:
addObjectsFromArray:
loadPropertiesIfNeeded:
isWeakRelationObject:forKey:
meltedObjectInStore:
setCachedMeltedObject:forSingleValueKey:
setWithSet:
setCachedMeltedObjects:forMultiValueKey:
dictionaryWithDictionary:
_rollbackCommon
_reset
reset
_resetCommon
refreshAndNotify:
_refreshCommon
_markAsNewCommon
_markAsNotNewCommon
_markAsDeletedCommon
rebase
_markAsUndeletedCommon
_markAsSavedCommon
_markAsCommittedCommon
markAsCommitted
_performBlockOnOwnedCachedRelatedObjects:
_hasChangesForKey:
_updatePersistentValueForKey:
_propertyValueForKey:
updatePersistentObject
meltedAndCachedSingleRelationObjectForKey:
meltedAndCachedMultiRelationObjectsForKey:
_isPendingInsert
_insertObject:
updatePersistentObjectSkippingProperties:
_deleteObject:
addCoCommitObject:
propertiesUnavailableForPartialObjects
objectsIDsExistingInStoreFromObjects:eventStore:
initWithObject:
existingMeltedObject
isCompletelyEqual:
isFrozen
semanticIdentifier
T@"EKObjectID",R,N
T@"CADGenerationStampedObjectID",R,N
canBeConvertedToFullObject
preFrozenRelationshipObjects
T@"NSDictionary",R,N
setBackingObject:
isDifferentFromCommitted
rebaseSkippingRelationProperties:
setEventStore:
hasEverBeenCommitted
shallowCopyWithoutChanges
duplicate
snapshotCopy
previouslySavedCopy
refresh
committedValueForKey:
markAsNotNew
markAsDeleted
markAsUndeleted
markAsSaved
insertPersistentObjectIfNeeded
deletePersistentObject
setChangeSet:
_cachedMeltedObjects
set_cachedMeltedObjects:
setAdditionalMeltedObjects:
_cachedValues
set_cachedValues:
_validationContext
set_validationContext:
_persistentObject
_changeSet
__cachedMeltedObjects
_additionalFrozenProperties
_additionalMeltedObjects
__cachedValues
__validationContext
T@"EKPersistentObject",&,N,V_persistentObject
T@"EKEventStore",&,N
T@"EKChangeSet",&,N,V_changeSet
T@"NSMutableDictionary",&,N,V__cachedMeltedObjects
T@"NSDictionary",&,N,V_additionalFrozenProperties
T@"NSDictionary",&,N,V_additionalMeltedObjects
T@"NSMutableDictionary",&,N,V__cachedValues
T@"EKObjectValidationContext",&,N,V__validationContext
T@"EKPersistentObject",&,N
TB,R,N,GisNew
initialStartDate
setEventStartDate:
initialEndDate
setEventEndDate:
setEventTimeZone:
isFloating
eventStartDate
dateInTimeZone:fromTimeZone:
eventEndDate
copyOccurrenceDatesWithEKEvent:startDate:endDate:timeZone:exceptionDates:limit:adjustDatesForAllDayEvents:
_setupForEKEvent:adjustDatesForAllDayEvents:
_prepareForEKRecurrence:forCalendarItem:
copyOccurrenceDatesBetweenStartDate:endDate:timeZone:limit:
adjustedExceptionDatesFromDates:fromGMTToTimeZone:
_copyOccurrenceDatesWithEKEvent:recurrenceRule:startDate:endDate:timeZone:exceptionDates:limit:adjustDatesForAllDayEvents:
requiresEndDateConversionFromGMTToEventTimeZone
timeZoneForSecondsFromGMT:
timeIntervalSinceReferenceDate
convertAbsoluteTime:fromTimeZone:toTimeZone:
dateWithTimeIntervalSinceReferenceDate:
occurrenceDate:matchesRecurrenceRule:forEvent:includeDetachedEventsInSeries:
date
dateByAddingTimeInterval:
exceptionDatesAdjustedForFloatingEvents
nextOccurrenceDateWithEKRecurrences:forCalendarItem:initialDate:afterDate:inclusive:
nextOccurrenceDateWithEKRecurrences:forCalendarItem:exceptionDates:initialDate:afterDate:inclusive:
calendarDateWithDate:timeZone:
calendarDateByAddingSeconds:
_convertEKRecurrenceFrequencyToCalRecurrenceFrequency:
setWeekStart:
weekStart
setShouldPinMonthDays:
computeRecurrenceEndDate:
allDay
copyOccurrenceDatesWithEKEvent:startDate:endDate:timeZone:limit:
copyOccurrenceDatesWithEKEvent:recurrenceRule:startDate:endDate:timeZone:limit:
copyOccurrenceDatesWithEKEvent:recurrenceRule:startDate:endDate:timeZone:exceptionDates:limit:adjustDatesForAllDayEvents:
copyOccurrenceDatesWithEKEvent:recurrenceRule:startDate:endDate:timeZone:exceptionDates:limit:
isOccurrenceDate:validForEvent:
nextOccurrenceDateWithEKRecurrences:forCalendarItem:initialDate:afterDate:
nextOccurrenceDateWithEKRecurrences:forCalendarItem:exceptionDates:initialDate:afterDate:
externalFolderID
setExternalFolderID:
externalScheduleID
setExternalScheduleID:
T@"NSString",C,N
initWithChangeProperties:
changedObjectID
databaseID
createOwnerIDWithRowID:objectType:databaseID:
boolValue
ownerID
attendeeRole
attendeeStatus
attendeeEmailAddress
_attendeeRole
_attendeeStatus
_ownerID
_attendeeEmailAddress
T@"EKObjectID",R,N,V_ownerID
TB,R,N,V_attendeeRole
TB,R,N,V_attendeeStatus
T@"NSString",R,N,V_attendeeEmailAddress
alternateUniverseClass
disconnect
dealloc
_connectToServer
_daemonRestarted
addObserver:selector:name:
initializationOptions
_tryRegisterNewConnection
initWithMachServiceName:options:
setRemoteObjectInterface:
setExportedInterface:
setExportedObject:
_finishAllRepliesOnServerDeath
setInterruptionHandler:
unitTesting
CADDatabaseSetInitializationOptions:reply:
CADDatabaseGetAccess:
CADDatabaseResetWithReply:
CADDatabaseGetUUID:
CADDatabaseRegisterForDetailedChangeTrackingInSource:reply:
CADDatabaseUnregisterForDetailedChangeTracking:
CADDatabaseFetchChangedObjectIDs:
CADDatabaseFetchObjectChangesForEntityTypes:insideObject:reply:
CADDatabaseMarkChangedObjectIDsConsumedUpToSequenceToken:reply:
CADDatabaseMarkIndividualChangesConsumed:reply:
CADDatabaseGetSequenceToken:
CADDatabaseGetChangesSinceSequenceToken:reply:
CADDatabaseGetChangedEntityIDsSinceTimestamp:reply:
CADDatabaseImportEvents:fromICSData:intoCalendarsWithIDs:optionsMask:batchSize:reply:
CADDatabaseExportICSDataForCalendarItems:options:reply:
CADDatabaseExportICSDataForCalendar:options:reply:
CADDatabaseSetShowsDeclinedEvents:reply:
CADDatabaseRebuildOccurrenceCacheWithReply:
CADDatabaseCommitDeletes:updatesAndInserts:andFetchChangesSinceTimestamp:withReply:
CADDatabaseCanModifyCalendarDatabase:
CADDatabaseLastConfirmedSplashScreenVersion:
CADDatabaseMigrateSubscribedCalendar:toSource:reply:
CADDatabaseGetDefaultAlarmOffsetForAllDay:reply:
CADObjectExists:reply:
CADObject:getPropertiesWithNames:reply:
CADObjects:getPropertiesWithNames:reply:
CADObject:getPropertyWithName:reply:
CADObject:getStringPropertyWithName:reply:
CADObject:getNumberPropertyWithName:reply:
CADObject:getDatePropertyWithName:reply:
CADObject:getDataPropertyWithName:reply:
CADObject:getSecurityScopedURLWrapperPropertyWithName:reply:
CADObject:getRelatedObjectWithRelationName:reply:
CADObject:getRelatedObjectsWithRelationName:reply:
CADObjectIsManaged:reply:
CADDatabaseGetSourcesWithFaultedProperties:reply:
CADDatabaseGetLocalSourceWithEnableIfNeeded:reply:
CADDatabaseGetLocalBirthdaySource:
CADSourceGetConstraints:reply:
CADSourceGetNotificationCollection:reply:
CADSourceRefresh:isUserRequested:reply:
CADCountCalendarItemsOfType:inSource:reply:
CADRemoveCalendarItemsOlderThanDate:ofType:inSource:reply:
CADSourceGetGrantedDelegatesList:reply:
CADSourceUpdateGrantedDelegate:action:sourceID:reply:
CADSourceAddExchangeDelegateWithName:emailAddress:toSourceWithID:reply:
CADSourceRemoveExchangeDelegateWithID:reply:
CADDatabaseGetCalendarsWithFaultedProperties:reply:
CADCalendar:hasEvents:
CADDatabaseGetCalendarItemWithUUID:reply:
CADDatabaseGetCalendarItemsWithUUIDs:inCalendars:propertiesToLoad:reply:
CADDatabaseGetCalendarItemsWithUniqueIdentifier:inCalendar:reply:
CADDatabaseGetAlarmWithExternalID:reply:
CADDatabaseFetchCalendarItemsWithPredicate:entityType:fetchIdentifier:synchronous:reply:
CADDatabaseCancelFetchRequestWithIdentifier:
CADDatabaseiTIPImport:intoCalendarID:reply:
CADDatabaseExportICSForCalendarItemWithID:occurrenceDate:options:reply:
CADDatabaseGetDefaultLocalCalendarWithReply:
CADDatabaseGetOrCreateSubscribedCalendarsSource:
CADDatabaseGetOrCreateBirthdayCalendar:
CADDatabaseGetDefaultCalendarForNewEventsInDelegateSource:withReply:
CADDatabaseSetDefaultCalendarForNewEvents:delegateSource:reply:
CADDatabaseGetEventWithEventIdentifier:reply:
CADDatabaseGetEventWithUniqueID:reply:
CADDatabaseGetAllEventsWithUniqueID:reply:
CADDatabaseGetBirthdayCalendarEnabledWithReply:
CADDatabaseSetBirthdayCalendarEnabled:withReply:
CADDatabaseGetSuggestedEventCalendarWithReply:
CADDatabaseGetNaturalLanguageSuggestedEventCalendarWithReply:
CADDatabaseCanModifySuggestedEventCalendar:
CADDatabaseInsertSuggestedEventCalendarWithReply:
CADDatabaseRemoveSuggestedEventCalendarWithReply:
CADOccurrenceCacheGetOccurrenceCountsForCalendars:reply:
CADOccurrenceCacheGetOccurrencesForCalendars:onDay:reply:
CADOccurrenceCacheGetOccurrenceDateOfEventWithObjectID:nearestDate:prefersForwardSearch:reply:
CADOccurrenceCacheDoEvents:haveOccurrencesAfterDate:reply:
CADOccurrenceCacheSearchLocationsWithTerm:inCalendars:responseToken:reply:
CADOccurrencesExistInRangeForEvent:startDate:endDate:mustStartInInterval:timezone:reply:
CADDatabaseShouldPermitOrganizerEmailFromJunkChecks:reply:
CADDatabaseShouldPermitOrganizerPhoneNumberFromJunkChecks:reply:
CADDatabaseGetAttachmentWithUUID:reply:
CADDatabaseGetAttachmentUUIDWithExternalID:store:reply:
CADDatabaseGetTTLLocationAuthorizationStatus:
CADDatabaseGetAlarmWithUUID:reply:
CADDatabaseGetAlarmOccurrencesInRangeFromStart:toEnd:inCalendars:reply:
CADDatabaseGetSharedCalendarInvitationsWithReply:
CADCalendarSetClearedFromNotificationCenter:error:
CADDatabaseGetResourceChanges:
CADDatabaseGetInviteReplyNotifications:
CADDatabaseGetEventNotificationItemsAfterDate:excludingUncheckedCalendars:filteredByShowsNotificationsFlag:reply:
CADDatabaseGetNotificationCountForSourceWithExternalIdentifier:excludingDelegateSources:filteredByShowsNotificationsFlag:expanded:reply:
CADDatabaseGetInboxRepliedSectionItems:
CADResourceChange:setAlertedWithError:
CADEventSetInvitationStatus:forEvents:error:
CADPushItemsToSpotlight:reply:
CADWaitForSpotlightUpdatesWithReply:
CADInternalForceStatCollection:
CADInternalSetNextConferenceLinkRenewalToNow:
CADInternalRemoveConferenceLinkRenewalDate:
CADTestingSimulateDaemonCrash
CADTestingCloseDatabase:
CADMigrateDatabaseIfNeeded:
CADDatabaseGetDeletableCalendars:
CADDatabaseGetDeletableSources:
CADPurgeChangeTrackingReply:
CADPostSyntheticRouteHypothesis:forEventWithExternalURL:reply:
CADDatabaseGetNotificationCountExcludingUncheckedCalendars:expanded:reply:
CADDatabaseGetStorageUsage:
CADBackupDatabaseToFileNamed:inDirectory:includeAttachments:reply:
CADBackupToICBU:reply:
CADRestoreFromDatabaseBackupFileNamed:inDirectory:includeAttachments:reply:
CADRestoreFromICBU:reply:
CADDiagnosticsCollectWithToken:options:reply:
CADDiagnosticsCancelCollectionWithToken:reply:
CADDatabaseGetErrorCount:
CADDatabaseGetEventsWithErrorsPerSource:
initWithXPCConnection:protocol:synchronous:
setDelegate:
setInitializationOptions:
resume
setHasEverConnected:
removeObserver:name:
_unregisterConnection
invalidate
_createConnectionAndOperationProxyIfNeeded
daemonRestarted
setDatabaseRestoreGeneration:
delegate
databaseRestoreGenerationChangedExternally:
removeAllObjects
operationForToken:respondingToSelector:finished:
defaultCenter
postNotificationName:object:userInfo:
CADClientReceiveOccurrenceCacheSearchResults:forSearchToken:finished:
CADClientReceiveDiagnosticsCollectionResults:forToken:finished:
CADClientReceiveDatabaseIntegrityErrors:
databaseRestoreGeneration
shouldValidateObjectIDs
xpcConnection
databaseRestoreGenerationChangedByThisClient:
cancelRemoteOperation:
hasEverConnected
_connectionLock
_remoteOperationProxy
_syncRemoteOperationProxy
_replyHandlerLock
_cancellableOperations
_nextCancellationToken
_registeredForStartNote
_wasAbortedDueToExcessiveConnctions
_databaseRestoreGenerationLock
_databaseRestoreGeneration
_databaseRestoreGenerationHasEverChangedSignificantly
_hasEverConnected
_xpcConnection
_delegate
_initializationOptions
TB,N,V_hasEverConnected
T@"NSXPCConnection",R,&,N,V_xpcConnection
T@"<CADInterface>",R,&,N
T@"<EKDaemonConnectionDelegate>",W,V_delegate
T@"CADDatabaseInitializationOptions",&,N,V_initializationOptions
Ti,R,N
maxNumberOfOpenConnections
TQ,R,N
beginRequestWithExtensionContext:
requestType
completeRequestWithAvailableRoomTypes:completionHandler:
fetchAvailableRoomTypesWithCompletionHandler:
roomTypeIdentifier
completeRequestWithVirtualConference:completionHandler:
fetchVirtualConferenceForIdentifier:completionHandler:
URLForInvalidation
completeRequestWithInvalidationSuccess:error:completionHandler:
invalidateURL:withCompletionHandler:
URLForRenewal
renewalDate
completeRequestWithRenewalSuccess:error:completionHandler:
extendExpirationOfURL:toExpirationDate:withCompletion:
completeRequestReturningItems:completionHandler:
isURLValid:withCompletion:
initWithDomain:
registerReflectionForPreferenceWithNotificationName:
getValueForPreference:expectedClass:
doubleValue
setValueForPreference:value:notificationName:
getBooleanPreference:defaultValue:
setBooleanPreference:value:notificationName:
getIntegerPreference:defaultValue:
setIntegerPreference:value:notificationName:
_setDeselectedCalendars_iOS:
_setDeselectedCalendarIdentifiers:
syncHash
selectionSyncIdentifier
_setDeselectedCalendarSyncIdentifiers:
_setDeselectedCalendarSyncHashes:
_array:hasSameElementAsArray:
removePreference:notificationName:
travelEngineThrottlePeriod
setTravelEngineThrottlePeriod:
refiringReminderAlarmsEnabled
setRefiringReminderAlarmsEnabled:
useShortReminderSnoozeInterval
setUseShortReminderSnoozeInterval:
useShortReminderRefireInterval
setUseShortReminderRefireInterval:
alwaysSetArrivedAndSettledForReminders
setAlwaysSetArrivedAndSettledForReminders:
setDeselectedCalendars:reason:
deselectedCalendarIdentifiers
deselectedCalendarSyncHashes
deselectedCalendarSyncIdentifiers
selectedCalendarIdentifiers
setSelectedCalendarIdentifiers:
unselectedCalendarIdentifiersForFocusMode
setUnselectedCalendarIdentifiersForFocusMode:
showDeclinedEvents
setShowDeclinedEvents:
alertInviteeDeclines
setAlertInviteeDeclines:
conferenceRoomTypeIdentifiersByMRU
setConferenceRoomTypeIdentifiersByMRU:
_preferences
Td,N
TQ,N
TB,R
T@"NSArray",C,N
T@"NSDictionary",C,N
objectIDWithEntityType:rowID:databaseID:
calendarID
oldCalendarID
oldExternalID
startDateChanged
startTimezoneChanged
endDateChanged
endTimezoneChanged
notesChanged
allDayChanged
suppressNotificationForChanges
_titleChanged
_locationChanged
_startDateChanged
_startTimezoneChanged
_endDateChanged
_endTimezoneChanged
_notesChanged
_allDayChanged
_suppressNotificationForChanges
_calendarID
_oldCalendarID
_externalID
_oldExternalID
_uuid
T@"EKObjectID",R,N,V_calendarID
T@"EKObjectID",R,N,V_oldCalendarID
T@"NSString",R,N,V_externalID
T@"NSString",R,N,V_oldExternalID
T@"NSString",R,N,V_uuid
TB,R,N,V_titleChanged
TB,R,N,V_locationChanged
TB,R,N,V_startDateChanged
TB,R,N,V_startTimezoneChanged
TB,R,N,V_endDateChanged
TB,R,N,V_endTimezoneChanged
TB,R,N,V_notesChanged
TB,R,N,V_allDayChanged
TB,R,N,V_suppressNotificationForChanges
reminderStore
completionBlockForFetchRequestToken:remove:
initWithReminderStore:
_reminderStore
T@"EKReminderStore",R,W,N,V_reminderStore
initWithStoreContainerToken:
remindersChanged
storeDidChangeNotificationName
addObserver:selector:name:object:
reminderStoreChanged
_loadAccounts
fetchAccountsWithError:
_loadAccountsIfNeeded
sources
reminderSourceForEventSource:
_fetchAndCacheConstraintsForFrozenSource:
capabilities
supportsLocation
daAllowsCalendarAddDeleteModify
MCIsManagedWithResultPtr:error:
_loadLists
fetchListsForEventKitBridgingWithError:
_loadListsIfNeeded
uncommittedChanges
backingCalendarWithIdentifier:
fetchListWithObjectID:error:
isNotFoundError:
validate:
frozenCalendarFromCalendar:error:
saveObject:withFrozenObject:error:
_validateDeletable:
fetchDefaultListWithError:
fetchReminderWithDACalendarItemUniqueIdentifier:inList:error:
backingReminderWithIdentifier:
fetchRemindersWithDACalendarItemUniqueIdentifiers:inList:error:
allValues
fetchReminderWithObjectID:error:
saveCalendar:error:
save:
path
prepareReminderKitObjectForSaveWithUpdatedBackingObjectProvider:
cachedMeltedChildIdentifierToParentMap
canCommitSelf
updateParentToCommitSelf:
fillInPath:usingParents:
insertObject:atIndex:
_commit:error:
addEntriesFromDictionary:
removeObjectsForKeys:
initWithStore:
removeFromParent
_moveRemindersToNewLists:error:
saveSynchronouslyWithError:
initWithCalendars:
initForCalendarStoreWithCalendars:
initForIncompleteRemindersWithDueDateStarting:ending:calendars:
initForCompletedRemindersWithCompletionDateStarting:ending:calendars:
_checkPredicate:
remindersMatchingPredicate:
_allLists
fetchMatchingRemindersInStore:allLists:error:
evaluateWithObject:
filterUsingPredicate:
uniqueIdentifierForREMObject:
newFrozenObjectForReminderObject:withChanges:
initWithAlarms:inStore:withChanges:
frozenClassForReminderClass:
pointerFunctionsWithOptions:
initWithKeyPointerFunctions:valuePointerFunctions:capacity:
domain
code
existingUpdatedObject:
T@"NSObject<OS_os_log>",R
initWithEventStore:token:
cachedConstraintsForSource:
isSourceManaged:
calendars
createNewReminderCalendar
removeCalendar:error:
defaultCalendarForNewReminders
reminderWithUniqueId:
reminderWithIdentifier:
remindersWithExternalIdentifier:
createNewReminder
saveReminder:error:
removeReminder:error:
resetBackingAlarmWithBackingAlarm:
resetBackingLocationWithBackingLocation:
commit:
predicateForRemindersInCalendars:
predicateForCalendarStoreForRemindersInCalendars:
predicateForIncompleteRemindersWithDueDateStarting:ending:calendars:
predicateForCompletedRemindersWithCompletionDateStarting:ending:calendars:
fetchRemindersMatchingPredicate:completion:
remStore
_queue
_sources
_cachedConstraints
_lists
_newObjectsIDs
_updatedObjects
_objectIDsToCommit
_deletedObjects
_objectsToReset
_remindersNeedingMove
_movedRemindersIDMap
_queryQueue
queryCompletionHandlers
_remStore
T@"REMStore",R,N,V_remStore
T@"EKEventStore",R,W,V_eventStore
T@"NSArray",R
initWithTitle:identifier:
identifier
_title
_identifier
T@"NSString",R,C,N,V_title
T@"NSString",R,C,N,V_identifier
initWithTitle:URL:
_URL
T@"NSURL",R,C,N,V_URL
initWithTitle:URLDescriptors:conferenceDetails:
URLDescriptors
conferenceDetails
_URLDescriptors
_conferenceDetails
T@"NSArray",R,C,N,V_URLDescriptors
T@"NSString",R,C,N,V_conferenceDetails
base64EncodedStringWithOptions:
floatValue
semanticIdentifierForLocationWithTitle:address:mapKitHandle:contactLabel:latitude:longitude:radius:
setUniqueID:
isLocationRoom
isCurrentUser
attendeeWithName:url:
_attendeesForSuggestedEventFromAttendees:
_participantShouldBeUsedForAutocomplete:
initWithUniqueID:
setCalendarColor:
setAttendees:
location
setLocationWithoutPrediction:
preferredLocation
setPreferredLocation:
setAlarms:
attendees
calendarColor
travelTime
setTravelTime:
setTravelStartLocation:
pasteboardResults
setPasteboardResults:
isSuggested
setSuggested:
suggestionInfo
setSuggestionInfo:
foundInBundleID
setFoundInBundleID:
setStructuredLocation:
privacyLevel
setPrivacyLevel:
availability
setAvailability:
attachments
setAttachments:
isNaturalLanguageSuggested
setIsNaturalLanguageSuggested:
_calendarColor
_allDay
_suggested
_isNaturalLanguageSuggested
_startDate
_endDate
_timeZone
_location
_locationWithoutPrediction
_preferredLocation
_alarms
_attendees
_notes
_calendar
_travelTime
_travelStartLocation
_pasteboardResults
_suggestionInfo
_foundInBundleID
_structuredLocation
_privacyLevel
_availability
_attachments
_localStructuredData
_uniqueID
T@"NSString",&,N,V_uniqueID
T@"NSString",&,N,V_title
T@"NSDate",&,N,V_startDate
T@"NSDate",&,N,V_endDate
T@"NSTimeZone",&,N,V_timeZone
TB,N,GisAllDay,V_allDay
T@"NSString",&,N,V_location
T@"NSString",&,N,V_locationWithoutPrediction
T@"EKStructuredLocation",&,N,V_preferredLocation
T@"NSArray",&,N,V_alarms
T@"NSArray",&,N,V_attendees
T@"NSURL",&,N,V_URL
T@"NSString",&,N,V_notes
T@"EKCalendar",&,N,V_calendar
T^{CGColor=},N,V_calendarColor
Td,N,V_travelTime
T@"EKStructuredLocation",&,N,V_travelStartLocation
T@"NSArray",&,N,V_pasteboardResults
suggested
TB,N,GisSuggested,V_suggested
T@"EKSuggestedEventInfo",&,N,V_suggestionInfo
T@"NSString",&,N,V_foundInBundleID
T@"EKStructuredLocation",&,N,V_structuredLocation
Tq,N,V_privacyLevel
Tq,N,V_availability
T@"NSArray",&,N,V_attachments
TB,N,V_isNaturalLanguageSuggested
T@"NSData",&,N,V_localStructuredData
initWithDelegate:
autcompleterUpdated:
autcompleterSetCNAutocompleteStore:
autcompleterDidBeginNetworkActivity:
autcompleterDidFinishNetworkActivity:
prefix
cancelSearch
clearLastResults
allResults
setPrefix:
request
setSearchString:
setSearchType:
findPeople
excludeLocal
setIncludeContacts:
findSuggestions
setIncludeSuggestions:
findRecents
setIncludeRecents:
useACDirectorySearch
setIncludeDirectoryServers:
setFetchContext:
findGroups
setShouldIncludeGroupResults:
setIncludeCalendarServers:
setAutocompleteRunning:
autocompleteStore
scheduleFetchRequest:
setAutocompletionSearchRequest:
isRunning
contactResults
directorySearchQueue
directorySearchResults
directorySearchOperation
autocompletionSearchRequest
autocompleteRunning
isExecuting
removeIgnoredAddressesFromResults:
orderedSetWithArray:
value
addressesToIgnore
hasMailto
stringRemovingMailto
setIgnoredAddresses:
defaultProvider
unifiedContactsForHandleStrings:keysToFetch:
emailAddresses
setAddressesToIgnore:
resultType
preferredAddress
nameComponentsWithFirstName:lastName:nickname:nameSuffix:
principalPath
autocompleteResultsFromDirectoryRecords:withType:
initWithSource:group:completionBlock:
initWithDomain:code:userInfo:
calDAVResultWithAddress:displayName:nameComponents:resultType:groupMembersProvider:userInfo:
setTerms:
setFindUsers:
setFindGroups:
findRooms
setFindLocations:
findResources
setFindResources:
initWithSource:query:resultsBlock:
setDirectorySearchOperation:
error
setCompletionBlock:
directorySearchWithCompletion:
autocompleteFetch:didReceiveResults:
autocompleteFetch:didFailWithError:
autocompleteFetchDidFinish:
autocompleteFetchDidBeginNetworkActivity:
autocompleteFetchDidEndNetworkActivity:
autocompleteFetch:shouldExpectSupplementalResultsForRequest:completionHandler:
autocompleteFetch:willAdjustResults:
autocompleteFetch:willSortResults:
resultComparatorForAutocompleteFetch:
lastSearchString
searchFor:onSource:withContext:
cnResults
setIgnoredParticipants:
setFindRooms:
setFindPeople:
setFindSuggestions:
setFindRecents:
setUseACDirectorySearch:
setExcludeLocal:
setContactResults:
setAutocompleteStore:
setDirectorySearchQueue:
setDirectorySearchResults:
_findRooms
_findPeople
_findSuggestions
_findResources
_findGroups
_findRecents
_useACDirectorySearch
_excludeLocal
_autocompleteRunning
_prefix
_source
_addressesToIgnore
_contactResults
_autocompletionSearchRequest
_autocompleteStore
_directorySearchOperation
_directorySearchQueue
_directorySearchResults
T@"<EKAutocompleterDelegate>",W,V_delegate
T@"NSString",C,V_prefix
T@"EKSource",&,V_source
T@"NSSet",&,V_addressesToIgnore
T@"NSMutableArray",&,V_contactResults
T@"<CNCancelable>",&,V_autocompletionSearchRequest
TB,V_autocompleteRunning
T@"CNAutocompleteStore",&,V_autocompleteStore
T@"EKDirectorySearchOperation",&,V_directorySearchOperation
T@"NSObject<OS_dispatch_queue>",&,V_directorySearchQueue
T@"NSMutableArray",&,V_directorySearchResults
TB,N,V_findRooms
TB,N,V_findPeople
TB,N,V_findSuggestions
TB,N,V_findResources
TB,N,V_findGroups
TB,N,V_findRecents
TB,N,V_useACDirectorySearch
TB,N,V_excludeLocal
weakObjectsPointerArray
setDelegates:
objectsChangedNotification:
delegates
addPointer:
hasUpdatePriority
sortedArrayUsingComparator:
isSyncStatusChangeNotification:
compact
userInfo
_orderedDelegates
dictionary
updatedObjectFor:changeNotification:
specificIdentifier
trackedObjectMap
trackedObjects
trackedObjectsDidRevert:
trackedObjectsDidUpdate:
notifyObservers
object
changedIdentifiersForNotification:
_refreshable
uniqueIdentifiersForEventsWithObjectIDs:
registerDelegate:
_delegates
T@"NSPointerArray",&,V_delegates
initWithEventStore:opaqueKey:uniqueKey:
initWithEventStore:opaqueKey:uniqueKey:extractionGroupIdentifier:
setOpaqueKey:
setUniqueKey:
setChangedFields:
setChangesAcknowledged:
setExtractionGroupIdentifier:
opaqueKey
uniqueKey
extractionGroupIdentifier
changedFields
changesAcknowledged
timestamp
setTimestamp:
setTimestampAsDate:
timestampAsDate
initWithOpaqueKey:uniqueKey:
initWithOpaqueKey:uniqueKey:extractionGroupIdentifier:
relatedEvent
_sharedParticipantForSortingWithIdentity:participant:contactPredicate:
phoneNumberWithStringValue:
predicateForContactsMatchingPhoneNumber:
setCountLimit:
addObserverForName:object:queue:usingBlock:
archivedDataWithRootObject:requiringSecureCoding:error:
descriptorForRequiredKeysForStyle:
unifiedContactsMatchingPredicate:keysToFetch:
isPhoneNumber
personNameComponentsFromString:
nickname
setNickname:
familyName
setFamilyName:
givenName
setGivenName:
namePrefix
setNamePrefix:
nameSuffix
setNameSuffix:
middleName
setMiddleName:
stringFromContact:style:
setCachedDisplayName:
setIsEmail:
setIsPhone:
setParticipant:
setIdentity:
participantIsOptional:
participant
compareByEmailThenByContactName:
isEmail
compare:options:
compareByContactNames:
sharedDefaults
sortOrder
participantForSortingWithEKParticipant:
participantForSortingWithIdentity:
identity
cachedDisplayName
isPhone
_isEmail
_isPhone
_participant
_identity
_firstName
_lastName
_cachedDisplayName
T@"EKParticipant",W,N,V_participant
T@"<EKIdentityProtocol>",W,N,V_identity
T@"NSString",C,N,V_firstName
T@"NSString",C,N,V_lastName
T@"NSString",C,N,V_cachedDisplayName
TB,N,V_isEmail
TB,N,V_isPhone
crRecentContactsLibraryClass
recentEventForAddress:displayName:kind:date:weight:metadata:options:
recentForContactWithAddress:name:kind:
defaultInstance
crRecentsDomainCalendarString
recordContactEvents:recentsDomain:sendingAddress:completion:
crAddressKindEmailString
recordRecentWithAddress:name:kind:
crAddressKindPhoneNumberString
recordRecentForContactWithName:emailAddress:phoneNumber:
searchWithString:completionHandler:
predicateForNaturalLanguageSuggestedEventsWithSearchString:
eventsMatchingPredicate:
setIdentifier:
setNaturalLanguageSuggestedEvent:
allowsContentModifications
isNaturalLanguageSuggestedEventCalendar
_eventKitQueue
firstNaturalLanguageResultWithSearchString:
timeIntervalSinceDate:
whitespaceCharacterSet
stringByTrimmingCharactersInSet:
lowercaseString
eventWithUniqueId:
_shouldReturnResultForEvent:considerReadonlyEvents:
_updateResult:withEvent:
eventsFromPasteboard
colorOfCalendarToPasteTo
searchWithString:clientBundleID:completionHandler:
attendeesNotIncludingOrganizer
initWithEventStore:searchString:maximumResultCount:ignoreScheduledEvents:initialEvent:pasteboardItemProvider:completionHandler:
_maximumResultCount
_ignoreScheduledEvents
_initialEvent
_pasteboardItemProvider
_pendingSearch
searchWithEventStore:searchString:maximumResultCount:ignoreScheduledEvents:initialEvent:pasteboardItemProvider:completionHandler:
maximumResultCount
setMaximumResultCount:
TQ,V_maximumResultCount
setURLString:
fileNameRaw
setFileNameRaw:
fileFormat
setFileFormat:
localRelativePath
setLocalRelativePath:
fileSize
setFileSize:
XPropertiesData
setXPropertiesData:
securityScopedURLWrapperForPendingFileCopy
setSecurityScopedURLWrapperForPendingFileCopy:
shouldSetQuarantineAttributesOnCopiedFile
setShouldSetQuarantineAttributesOnCopiedFile:
securityScopedLocalURLWrapper
setSecurityScopedLocalURLWrapper:
primitiveSecurityScopedURLWrapperValueForKey:
primitiveSetSecurityScopedURLWrapperValue:forKey:
primitiveNumberValueForKey:
primitiveSetNumberValue:forKey:
unsignedLongValue
propertiesToUnloadOnCommit
securityScopedLocalURLForArchivedDataWrapper
setSecurityScopedLocalURLForArchivedDataWrapper:
setFirstObject:
setSecondObject:
secondObject
initWithFirstObject:secondObject:
setResult:
_populateSingleValueKeysForDiff:
_populateImmutableKeysForDiff:
_populateSingleValueRelationshipKeysForDiff:
_populateMultiValueRelationshipKeysForDiff:
differentSingleValueKeys
differentRelationshipSingleValueKeys
differentRelationshipMultiValueKeys
differentImmutableKeys
_populateIdentityKeysForDiff:
differentIdentityKeys
_nonNilObject
_keysToIgnoreForComputingDiff
indexesOfObjectsPassingTest:
objectsAtIndexes:
setDifferentSingleValueKeys:
knownDerivedAndSingleValueRelationshipKeys
setDifferentRelationshipSingleValueKeys:
setRelationshipSingleValueModifies:
_compareMultiValueRelationshipKey:forObject:againstObject:propertiesToIgnore:
setDifferentRelationshipMultiValueKeys:
setByAddingObjectsFromArray:
diffBetweenObject:andObject:
setRelationshipMultiValueAdds:
setRelationshipMultiValueRemoves:
setRelationshipMultiValueModifies:
setDifferentIdentityKeys:
setDifferentImmutableKeys:
relationshipMultiValueModifies
unionSet:
arrayWithArray:
summaryKeyForChangedProperty:subProperty:
relationshipMultiValueAdds
summaryKeyForMultiValueAddOfPropertyKey:
_addObject:forKey:toDiff:
relationshipMultiValueRemoves
summaryKeyForMultiValueRemoveOfPropertyKey:
_multiValueModifiedObjectsForKey:
summaryKeyForMultiValueModifyOfPropertyKey:
_summaryKeyForMultiValueChange:ofPropertyKey:
_summarizeDiffsBetweenFirstObject:secondObject:mutableString:depth:
appendString:
_basicSummaryWithDepth:
_addSummaryWithDepth:toMutableString:forSingleValueKeys:firstObject:secondObject:
_addSummaryWithDepth:toMutableString:forRelationshipSingleValueKeys:firstObject:secondObject:
_addSummaryWithDepth:toMutableString:forRelationshipMultiValueKeys:firstObject:secondObject:
_addChangeStarIfChangedKey:onObject:
_addPaddedHeaderToMutableString:forKey:withDepth:
_addSummaryWithDepth:toMutableString:indentFirstLine:
_indentStringAtDepth:
stringByPaddingToLength:withString:startingAtIndex:
relationshipSingleValueModifies
copyOfObject:alreadyCopiedObjects:madeNewCopy:
changeSetForDiff
addChanges:
initWithSingleValueChanges:multiValueAdditions:multiValueRemovals:
differentKeys
summaryDictionary
summaryString
_result
_firstObject
_secondObject
_differentIdentityKeys
_differentImmutableKeys
_differentSingleValueKeys
_differentRelationshipSingleValueKeys
_differentRelationshipMultiValueKeys
_relationshipMultiValueAdds
_relationshipMultiValueRemoves
_relationshipMultiValueModifies
_relationshipSingleValueModifies
T@"EKObject",&,N,V_firstObject
T@"EKObject",&,N,V_secondObject
Ti,N,V_result
T@"NSSet",&,N,V_differentIdentityKeys
T@"NSSet",&,N,V_differentImmutableKeys
T@"NSSet",&,N,V_differentSingleValueKeys
T@"NSSet",&,N,V_differentRelationshipSingleValueKeys
T@"NSSet",&,N,V_differentRelationshipMultiValueKeys
T@"NSDictionary",&,N,V_relationshipMultiValueAdds
T@"NSDictionary",&,N,V_relationshipMultiValueRemoves
T@"NSDictionary",&,N,V_relationshipMultiValueModifies
T@"NSDictionary",&,N,V_relationshipSingleValueModifies
knownSummaryKeys
arrayByAddingObjectsFromArray:
_summaryWithDepth:
setType:
Tq,N,V_type
setLatitudeAndLongitudeFromAlternateUniverseObject:inChangeSet:
locationUID
initWithTitle:locationUID:
latitude
setLatitude:
longitude
setLongitude:
radius
setRadius:
mapKitHandle
setMapKitHandle:
updatedAlarmWithLocation:
initWithAlternateUniverseObject:inEventStore:withUpdatedChildObjects:
updatedStructuredLocation
referenceFrame
T@"NSString",R
_eventStoreChanged:
_areAnySourcesCurrentlySyncing
_areAnyCalendarsCurrentlySyncing
_syncDidStart
_syncDidEnd
_cancelSyncStartTimeout
_allSourcesRefreshed
_allCalendarsRefreshed
_syncCompleted
_beginSyncStartTimeout
sourceFinishedRefreshing:
isSyncing
calendarFinishedRefreshing:
_beginMaximumTimeElapsedTimeout
resetTimersAndWarnings
refreshEverythingIfNecessary:
calendarsForEntityType:
isSubscribed
isSubscribedHolidayCalendar
_cancelMaximumTimeElapsedTimeout
_syncStartTimeoutExpired
performSelector:withObject:afterDelay:
cancelPreviousPerformRequestsWithTarget:selector:object:
_refreshControlMaximumVisibleTimeElapsed
timeIntervalSinceNow
accountRefreshFinished:
laterDate:
lastSyncError
initWithEventStore:
allAccountsOffline
refreshing
_currentlySyncing
_refreshStartDate
_refreshingSources
_refreshingCalendars
_refreshing
T@"<EKAccountRefresherDelegate>",W,N,V_delegate
TB,R,N,V_refreshing
startTimeZone
endTimeZone
fullDisplayStringWithTitle:address:
locationWithTitle:
updateMeltedAndCachedSingleRelationObject:forKey:frozenClass:
setStructuredLocationWithoutPrediction:
setActionString:
setStartTimeZone:
setEndTimeZone:
startTimeZoneName
timeZoneFromTimeZoneName:withFloatingTimeZone:
timeZoneNameFromTimeZone:
setStartTimeZoneName:
endTimeZoneName
setEndTimeZoneName:
numberWithInt:
exportToICSWithOptions:
isMutableSuggestionsCalendar
isMutableNaturalLanguageSuggestionsCalendar
allowsScheduling
isSelfOrganized
isOrganizedBySharedCalendarOwner
_validateAccessConsent:
_validateDeletableInCalendarWithError:
_validateDeletableBySharedCalendarShareeWithError:
accessGrantedForEntityType:
isSuggestedEventCalendar
isNewItemThatFailedToPut
_isInSharedToMeCalendarWithNoSharingScheduling
isExternallyOrganizedInvitation
selfParticipantStatus
needsResponseForParticipantStatus:
isEditable
externalData
metadataWithData:
unrecognizedProperties
isSubclassOfClass:
adjustDateFromUTC:allDay:timeZone:
dateInTimeZone:fromFloatingDateInGMT:
shouldHaveDefaultAlarms
isDefaultAlarm
orderedSetWithCapacity:
isSnoozed
snoozedAlarms
_excludeAlarmDueToConnectionTrigger:
setAllAlarmsSet:
sortedArrayUsingSelector:
sortedAlarms
proximity
maxPublicProximity
setDefaultAlarmWasDeleted:
updateMeltedAndCachedMultiRelationObjects:forKey:
addCachedMeltedObject:forMultiValueKey:
removeCachedMeltedObject:forMultiValueKey:
calendarItemOwner
originalAlarm
setAcknowledgedDate:
setProximity:
findOriginalAlarmStartingWith:
setOriginalAlarm:
addAlarm:
_isOnlyChangedKey:
acknowledgedDate
singleRecurrenceRule
lastObject
setRecurrenceRules:
initWithArray:
setRecurrenceRulesSet:
filterAttendeesPendingDeletion:
setAttendeesRaw:
_setSelfAttendee:
_removeAttendee:
frozenOrMeltedCachedSingleRelationObjectForKey:
addAttendee:
selfParticipantStatusRaw
initWithContacts:
matchingParticipantsFromItem:
_addOrganizerAndSelfAttendeeForNewInvitationInCalendar:
ownerIdentityOrganizer
setCurrentUser:
setScheduleAgent:
setOrganizer:
usesSelfAttendee
setSelfAttendee:
isEqualToParticipant:
sharedItemCreatedByFirstName
sharedItemCreatedByLastName
sharedItemCreatedByAddressString
setSharedItemCreatedByAddressString:
sharedItemCreatedTimeZoneName
setSharedItemCreatedTimeZoneName:
sharedItemModifiedByFirstName
sharedItemModifiedByLastName
sharedItemModifiedByAddressString
setSharedItemModifiedByAddressString:
sharedItemModifiedTimeZoneName
setSharedItemModifiedTimeZoneName:
setAttachmentsSet:
canMoveToCalendar:fromCalendar:error:
_areOnlyChangedKeys:
canMoveOrCopyToCalendar:fromCalendar:error:
isStructured
_moveToCalendar:forSavingItem:
_shouldDeleteAndAddForMoveFromCalendar:toCalendar:
_hadRecurrenceRules
removeAllChangesExceptRemovals
copyMeltedObjectCache
_resetAfterUpdatingChangeSetOrBackingObject
setCalendarItemIdentifier:
_recursivelyPerformBlockOnSelfAndDetachedItems:forSavingItem:
augmentMeltedObjectCache:
setOriginalItem:
_generateNewUniqueID
_setCalendarRecursively:forSavingItem:
_addObjectToPendingCommits:
_adjustAfterMovingOrCopyingFromOldCalendar:toNewCalendar:savingItem:
_updatePersistentObjectOfSelfAndDetachedItemsExceptForSavingItem:
_resetFieldsAfterMovingToNewCalendar
setExternalData:
_deletePersistentItemAndDetachedItems:forSavingItem:
exceptionDates
initWithDate:
setEkExceptionDates:
isEqualToDate:
setDetachedItems:
isOnlyAlarmAcknowledgedPropertyDirty
modifiedProperties
setModifiedProperties:
canonicalizedEqualityTestValue1:value2:key:object1:object2:
propertyForName:
singleValue
setSequenceNumber:
nsDateWithLocalTimeZone:
triggerType
triggerDate
alarmWithAbsoluteDate:
triggerDuration
alarmWithRelativeOffset:
alarmType
values
mainBundle
localizedStringForKey:value:table:
localizedStringFromNumber:numberStyle:
localizedStringWithFormat:
knownRelationshipSingleValueKeysForValidation
knownRelationshipMultiValueKeysForValidation
knownRelationshipWeakKeys
knownDerivedRelationshipKeys
shouldLoadRelationshipForValidation:
startDateRaw
setStartDateRaw:
uniqueId
setUniqueId:
localUID
displayNotes
setDisplayNotes:
setClientLocation:
setLastModifiedDate:
calendarScale
setCalendarScale:
action
setAction:
appLink
setAppLink:
defaultAlarms
sequenceNumber
exportToICS
setSuppressNotificationForChanges:
requiresDetach
allowsSpansOtherThanThisEvent
isDeletable
isSelfOrganizedInvitation
needsResponse
allowsCalendarModifications
allowsRecurrenceModifications
allowsAlarmModifications
allowsAttendeesModifications
actionsState
adjustDateFromUTC:
hasAlarms
indexForAlarm:
snoozeAlarm:withTimeIntervalFromNow:
snoozeAlarm:withLocation:proximity:
isAlarmAcknowledgedPropertyDirty
removeAcknowledgedSnoozedAlarms
removeAllSnoozedAlarms
recurrenceRuleString
setSingleRecurrenceRule:
addRecurrenceRule:
removeRecurrenceRule:
startDateForRecurrence
_hadAttendees
removeAttendee:
participantMatchingContact:
attendeeMatchingEmailAddress:
addOrganizerAndSelfAttendeeForNewInvitation
removeLastExtraneousOrganizerAndSelfAttendee
sharedItemCreatedByDisplayName
setSharedItemCreatedByDisplayName:
sharedItemCreatedByAddress
setSharedItemCreatedByAddress:
setSharedItemCreatedByFirstName:
setSharedItemCreatedByLastName:
sharedItemCreatedDate
setSharedItemCreatedDate:
sharedItemCreatedTimeZone
setSharedItemCreatedTimeZone:
sharedItemModifiedByDisplayName
setSharedItemModifiedByDisplayName:
sharedItemModifiedByAddress
setSharedItemModifiedByAddress:
setSharedItemModifiedByFirstName:
setSharedItemModifiedByLastName:
sharedItemModifiedDate
setSharedItemModifiedDate:
sharedItemModifiedTimeZone
setSharedItemModifiedTimeZone:
addAttachment:
removeAttachment:
hasAttachment
canMoveToCalendar:error:
moveToCalendar:
hasCalendarChangeThatRequiresDeleteAndAdd
hasRecurrenceRuleAdditionOrRemoval
_removeDetachedItem:
_deleteSelfAndDetached
setExceptionDates:
_addExceptionDate:
_removeExceptionDate:
updateWithAppLink:usedSelectedText:
_updateModifiedAlarmByAcknowledging
_willSave
updateWithVCSEntity:inCalendar:
T@"NSString",&,N
T@"NSArray",&,N
T@"EKCalendarItem",&,N
T@"EKCalendar",&,N
T@"NSURL",C,N
T@"NSTimeZone",C,N
simulateLegacyBehaviors
perform:whileSimulatingLegacyBehaviors:
setSimulateLegacyBehaviors:
performWhileSimulatingLegacyBehaviors:
setWorkQueue:
setCallbackQueue:
_addPersistentNotificationObservers
_uninstallTimer
_removePersistentNotificationObservers
_removeTransientEventStoreChangeObserver
workQueue
internalTimeout
setInternalTimeout:
_resetIdleTimer
setInternalStore:
setInternalCreationBlock:
internalCreationBlock
setInternalChangedBlock:
internalChangedBlock
internalPurgingAllowed
setInternalPurgingAllowed:
internalStore
_eventStoreChangedNotification:
setIgnoreLowLevelDatabaseChangedNotifications:
timer
setTimer:
_databaseChangedExternally
ignoreLowLevelDatabaseChangedNotifications
_fireChangedBlock
removeObserver:name:object:
callbackQueue
setTimeout:
timeout
setCreationBlock:
creationBlock
setChangedBlock:
changedBlock
setPurgingAllowed:
purgingAllowed
acquireCachedEventStoreOrCreate:
_ignoreLowLevelDatabaseChangedNotifications
_internalPurgingAllowed
_workQueue
_timer
_internalTimeout
_internalCreationBlock
_internalChangedBlock
_internalStore
T@"NSObject<OS_dispatch_queue>",&,N,V_workQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_callbackQueue
T@"NSObject<OS_dispatch_source>",&,N,V_timer
Td,N,V_internalTimeout
T@?,C,N,V_internalCreationBlock
T@?,C,N,V_internalChangedBlock
TB,N,V_ignoreLowLevelDatabaseChangedNotifications
TB,N,V_internalPurgingAllowed
T@"EKEventStore",&,N,V_internalStore
T@?,C,N
setWithObjects:
setInversePropertyIsApplicable:
contactLabel
setContactLabel:
routing
setRouting:
setReferenceFrame:
derivedFrom
setDerivedFrom:
setCalendarItemOwner:
setAlarmOwner:
alarmOwner
skipsPersistentObjectCopy
updatedFrozenObjectWithChanges:updatedChildren:
addChangesAndUpdateUniqueMultiValueObjects:
replaceUniqueMultiValueObjectsWithUpdatedObjects:
updatedFrozenObjectWithChanges:
_remObject
_path
T@"EKChangeSet",R,N
T@"NSArray",C,N,V_path
initWithEventStore:withVersion:
createSerializerWithEventStore:withVersion:
_cacheContactData
contacts
isKeyAvailable:
_nameComponentsForContact:reverse:
organizationName
setContactEmailAddresses:
setContactNameComponents:
setContactCompanyNames:
_nameComponentsWithGivenName:familyName:
_allParticipantsOnItem:
anyContactMatchesAnyParticipant:
anyContactMatchesParticipant:
matchingParticipantsFromParticipants:
contactEmailAddresses
nameComponents
contactNameComponents
contactCompanyNames
anyContactMatchesAnyParticipantFromItem:
setContacts:
_contacts
_contactEmailAddresses
_contactNameComponents
_contactCompanyNames
T@"NSArray",&,N,V_contacts
T@"NSSet",&,N,V_contactEmailAddresses
T@"NSSet",&,N,V_contactNameComponents
T@"NSSet",&,N,V_contactCompanyNames
initWithExternalID:externalIDTag:inSource:
_externalIDTag
T@"EKSource",R,N,V_source
T@"NSString",R,N,V_externalIDTag
sharedToken
setJunkStatus:
saveEvent:span:commit:error:
junkStatus
junkStatusForInvitation:
cachedJunkStatus
componentsSeparatedByString:
_locationStringForLocations:
componentsJoinedByString:
clearDetectedConferenceURL
clearParsedConference
deserializeConference:
conferenceURL
conferenceURLDetected
_detectedConferenceURLOnBackingObjectMayBeInvalid
_detectConferenceURL
conferenceURLDetectedString
_prioritizedConferencesSources
conferenceURLFromSources:
setIsJunk:shouldSave:
setCachedJunkStatus:
_couldBeJunkCommon
locationsWithoutPrediction
setNotesCommon:
setURLCommon:
parsedConference:andNotes:
conferenceURLForDisplayCached
conferenceURLForDisplay
reputationStore
junkStatusForInvitation:withReputationStore:
sendersEmail
shouldPermitOrganizerEmailFromJunkChecks:inReputationStore:
sendersPhoneNumber
shouldPermitOrganizerPhoneNumberFromJunkChecks:inReputationStore:
shouldPermitOrganizerEmailFromJunkChecks:
shouldPermitOrganizerPhoneNumberFromJunkChecks:
_isLunarBirthdayRecurrenceRule:lunarCalendarString:
_copyDatesForLunarBirthdayFromDate:toDate:inTimeZone:lunarCalendarString:
recurrenceRuleFromICSString:
freq
_weekStartFromICSRule:
_daysOfWeekFromICSRule:
bysetpos
bymonth
bymonthday
byweekno
ek_ios_dateForEndOfDayInTimeZone:
until
initWithValue:
components
dateFromComponents:
dateForEndOfDayInTimeZone:
wkst
byday
weekday
number
initWithDayOfTheWeek:weekNumber:
CalCalendarWithUnsanitizedCalendarIdentifier:
timeZoneWithAbbreviation:
initWithStartDate:endDate:
CalOccurrencesForBirthday:inDateRange:
datesByExpandingRule:fromDate:toDate:inTimezone:isAllDay:lunarCalendarString:
calendarIDs
valueForKeyPath:
sourceID
isMasterOrDetachedOccurrence
filters
ekPredicateFilterMatches:
property
isInteger
isString
stringValue
isDate
dateValue
comparison
operation
setStateChanged:
setParticipantAddressesToParticipants:
setInternalTimesWhenAllAttendeesCanAttend:
setInternalTimesWhenSomeAttendeesCanAttend:
setInternalOriginalConflictedParticipants:
setInternalProposedTimes:
setLeftoverSpans:
setAvailabilityRequestsQueue:
setProcessingQueue:
availabilityRequestsQueue
cancelAllOperations
processingQueue
internalOriginalStartDate
internalOriginalEndDate
internalOriginalConflictedParticipants
internalTimesWhenAllAttendeesCanAttend
internalTimesWhenSomeAttendeesCanAttend
internalProposedTimes
internalSearchingForMoreTimesWhenAllAttendeesCanAttend
internalSearchingForMoreTimesWhenSomeAttendeesCanAttend
setInternalSearchingForMoreTimesWhenAllAttendeesCanAttend:
_resetSearchFallbackNumbers
_attemptSearch
setInternalSearchingForMoreTimesWhenSomeAttendeesCanAttend:
setAvailabilityRequestInProgress:
participantAddressesToParticipants
leftoverSpans
setNextAvailabilityRangeStartDate:
setInternalOriginalStartDate:
setInternalOriginalEndDate:
setOriginalRangeStartDate:
setIgnoredEventID:
setOrganizerAddress:
_sendStateChange:
isEqualToTimeZone:
dateByAddingHours:inCalendar:
dateRoundedToNearestFifteenMinutesInCalendar:
originalRangeStartDate
isStartDateDirty
isEndDateDirty
proposedStartDateForEvent:
internalProposedStarts
_selfOrganizerForNewlyScheduledEventWithAddress:
_transitionToConflictFoundStateAndSearch
noConflictRequired
ignoredEventID
initWithSource:startDate:endDate:ignoredEventID:addresses:resultsBlock:
isCancelled
_haltSearchWithError:
spansIncludeBusyPeriod:
_participantforParticipantAddress:
addOperation:
initWithStartDate:endDate:conflictedParticipants:
remainingSearchAttempts
availabilityRequestInProgress
nextAvailabilityRangeStartDate
availabilitySearchDurationMultiplier
setAvailabilitySearchDurationMultiplier:
_processResults:betweenStartDate:endDate:
setRemainingSearchAttempts:
stateChanged
stateAsString:
_generateTimeSpansForResults:betweenStartDate:endDate:
_spliceLeftTimeSpans:andNewTimeSpans:
_mergeAdjacentSpansWithSameConflictedParticipants:
_generateOpenFreeTimesFromTimeSpans:
_generateNonOptimalTimesFromTimeSpans:
_findLeftoverSpans:usingFreeTimes:andNonOptimalTimes:
setArray:
CalIsBeforeDate:
_binarySearchForIndexOfTimeSpanInArray:containingDate:
_invalidBinarySearchIndex
subarrayWithRange:
verifyIntegrityOfAvailabilityTimeSearchTimelines
_validateSpans:
conflictedParticipants
_addressesForParticipants:
isEqualToSet:
_span:hasSameConflictedParticipantsAsSpan:
_allButLastItemInArray:
setConflictedParticipants:
_allButFirstItemInArray:
_insertUniqueParticipants:intoExistingParticipantsArray:
_filterOutUnreasonableTimeSlots:
_rankNonOptimalTimeSpans:
_findHighestRankedNonOptimalTimeSpans:
sortedArrayWithOptions:usingComparator:
showTypeAsBusy:
CalIsBeforeOrSameAsDate:
replaceObjectsInRange:withObjectsFromArray:
CalIsAfterOrSameAsDate:
myFullName
initWithString:
organizerWithName:emailAddress:phoneNumber:address:isCurrentUser:
initWithStateChangedCallback:
originalStartDate
originalEndDate
originalConflictedParticipants
timesWhenAllAttendeesCanAttend
timesWhenSomeAttendeesCanAttend
proposedTimes
searchingForMoreTimesWhenAllAttendeesCanAttend
searchingForMoreTimesWhenSomeAttendeesCanAttend
searchForMoreTimesWhenAllAttendeesCanAttend
searchForMoreTimesWhenSomeAttendeesCanAttend
resetWithEvent:organizerAddressForNewlyScheduledEvent:
setNoConflictRequired:
setInternalProposedStarts:
organizerAddress
_noConflictRequired
_availabilityRequestInProgress
_internalSearchingForMoreTimesWhenAllAttendeesCanAttend
_internalSearchingForMoreTimesWhenSomeAttendeesCanAttend
_internalOriginalStartDate
_internalOriginalEndDate
_originalRangeStartDate
_internalProposedStarts
_ignoredEventID
_availabilityRequestsQueue
_participantAddressesToParticipants
_organizerAddress
_nextAvailabilityRangeStartDate
_availabilitySearchDurationMultiplier
_remainingSearchAttempts
_leftoverSpans
_internalTimesWhenAllAttendeesCanAttend
_internalTimesWhenSomeAttendeesCanAttend
_internalProposedTimes
_internalOriginalConflictedParticipants
_stateChanged
T@"NSObject<OS_dispatch_queue>",&,N,V_processingQueue
T@"NSDate",&,N,V_internalOriginalStartDate
T@"NSDate",&,N,V_internalOriginalEndDate
T@"NSDate",&,N,V_originalRangeStartDate
T@"NSMutableArray",&,N,V_internalProposedStarts
T@"EKSource",&,N,V_source
T@"NSString",&,N,V_ignoredEventID
T@"NSOperationQueue",&,N,V_availabilityRequestsQueue
T@"NSMutableDictionary",&,N,V_participantAddressesToParticipants
T@"NSString",&,N,V_organizerAddress
TB,N,V_availabilityRequestInProgress
T@"NSDate",&,N,V_nextAvailabilityRangeStartDate
Td,N,V_availabilitySearchDurationMultiplier
TQ,N,V_remainingSearchAttempts
T@"NSMutableArray",&,N,V_leftoverSpans
T@"NSMutableArray",&,N,V_internalTimesWhenAllAttendeesCanAttend
T@"NSMutableArray",&,N,V_internalTimesWhenSomeAttendeesCanAttend
T@"NSMutableArray",&,N,V_internalProposedTimes
T@"NSMutableArray",&,N,V_internalOriginalConflictedParticipants
TB,N,V_internalSearchingForMoreTimesWhenAllAttendeesCanAttend
TB,N,V_internalSearchingForMoreTimesWhenSomeAttendeesCanAttend
T@?,C,N,V_stateChanged
TB,N,V_noConflictRequired
cal_serializableError
_cal_serializedEntryForKey:value:outKey:outValue:
cal_serializableUserInfo
cal_isCertificateError
cal_trustInfoCopy
_setInviteReplyCalendar:
shareeFirstName
shareeLastName
shareeURLString
setShareeURLString:
summary
cal_emailAddressString
cal_phoneNumberString
unloadPropertyForKey:
initWithInviteReplyCalendar:
inReplyTo
setInReplyTo:
setShareeDisplayName:
setShareeFirstName:
setShareeLastName:
setShareeURL:
setShareeStatus:
setSummary:
clearAlertedStatus
T@"EKCalendar",R,N
T@"NSDate",C,N
_setupSources
eventSources
accountsSyncFinished:
_sourceLastSyncingEndDates
T@"<EKSyncStatusChangeListenerDelegate>",W,N,V_delegate
participantWithName:emailAddress:phoneNumber:url:
initWithName:emailAddress:phoneNumber:url:
setDisplayNameRaw:
stringAddingMailto
stringAddingTel
cal_hasSchemeMailto
cal_resourceSpecifierNoLeadingSlashes
cal_hasSchemeTel
displayNameRaw
URLForNoMail
doesParticipantURLString:email:andPhoneNumber:matchParticipantURLString:email:andPhoneNumber:
resemblesEmailAddress
unifiedContactsMatchingPredicate:keysToFetch:error:
publicABPersonFromContact:publicAddressBook:
contactWithDisplayName:emailOrPhoneNumber:
CalKeys
participantWithName:url:
existingContact
newContact
isCurrentUserForSharing
isCurrentUserForScheduling
nameUsingAddressAsBackup
comment
setComment:
scheduleForceSend
setScheduleForceSend:
displayString
ABRecordWithAddressBook:
inviterNameString
setInviterNameString:
scheduleStatus
generateSemanticIdentifier
_owner
T@"EKCalendarItem",R,N,V_owner
T@"NSURL",R,N
currentUser
TB,R,N,GisCurrentUser
T@"NSPredicate",R,D,N
calendarWithID:
calendarFromEventStore:
isSharedCalendarInvitation
_sharingInvitationResponse
_allowedEntityTypes
TQ,N,V_sharingInvitationResponse
TQ,N,V_allowedEntityTypes
spanDate
spanType
valueForSpanType:
dateType
initWithDate:dateType:spanType:
setSpanDate:
setDateType:
setSpanType:
_spanDate
_dateType
_spanType
T@"NSDate",&,N,V_spanDate
Tq,V_dateType
Tq,V_spanType
setKey:withArray:
_rangeCompletelyCoversPeriodBetweenStartDate:endDate:
span
availabilityFreshnessWindow
_clampDateRangeForSpans:startDate:endDate:
isBeforeDate:
isAfterDate:
initWithSpan:
showTypeAsUnavailable:
spanType:isSimilarToSpanType:
orderForType:
cachedSpansFromSpans:
containsRange:
mergeSpansOfSameType:
intersectsRange:
replaceObjectAtIndex:withObject:
_currentMaxSpanTypeIn:
sanitizeAndInsertResults:inRange:
spans
_cachedSpans
wrappedPredicate
mustStartInInterval
occurrencesExistInRangeForEvent:startDate:endDate:mustStartInInterval:timezone:
statusRaw
setStatusRaw:
pendingStatusRaw
setPendingStatusRaw:
lastModifiedParticipationStatus
setLastModifiedParticipationStatus:
proposedStartDate
setProposedStartDate:
proposedStartDateStatus
setProposedStartDateStatus:
suggestedEvent
origin
bundleId
initWithBundleIdentifier:allowPlaceholder:error:
localizedName
resourceChangeFromEventStore:
_SGSuggestionsServiceClass
serviceForEvents
eventFromUniqueId:withCompletion:
originAppName
_suggestedEvent
_originAppName
T@"SGEvent",R,N
recordFromSearchResult:
setPrincipalPath:
remListIDsWithAllLists:
fetchCompletedRemindersForEventKitBridgingWithCompletionDateFrom:to:withListIDs:error:
fetchIncompleteRemindersForEventKitBridgingWithDueDateFrom:to:withListIDs:error:
isCompleted
_start
_end
_completed
absoluteDate
relativeOffset
semanticIdentifierForAlarmIsDefault:absoluteDate:relativeOffset:emailAddress:url:
semanticIdentifierForAlarm:
_stringForAlarmProximity:
stringRepresentation
needsAlert
isInvitation
acknowledgeWithEventStore:error:
isProposedNewTime
proposedStartDateIsInFutureForAttendee:
dotColor
hiddenFromNotificationCenter
recipientName
setRecipientName:
event
_dotColor
_hiddenFromNotificationCenter
_alerted
_couldBeJunk
_recipientName
_event
T@"NSString",&,N,V_name
T@"NSString",&,N,V_firstName
T@"NSString",&,N,V_lastName
T@"NSString",&,N,V_emailAddress
T@"NSString",&,N,V_phoneNumber
T@"NSString",&,N,V_recipientName
T@"EKObjectID",&,N,V_objectID
T^{CGColor=},N,V_dotColor
TB,N,V_hiddenFromNotificationCenter
TB,N,V_alerted
TB,N,V_couldBeJunk
T@"EKEvent",&,N,V_event
isFinished
main
willChangeValueForKey:
didChangeValueForKey:
_recordTypes
_finishWithError:
terms
resultLimit
_processResults:
setNumberOfMatchesExceededLimit:
performCalendarDirectorySearchWithAccountID:terms:recordTypes:resultLimit:resultsBlock:completionBlock:
cancelCalendarDirectorySearchWithID:
findLocations
findUsers
_processResults:class:
setError:
isSupported
isConcurrent
numberOfMatchesExceededLimit
_isFinished
_isExecuting
_query
_resultsBlock
_searchID
_numberOfMatchesExceededLimit
_error
TB,N,V_numberOfMatchesExceededLimit
T@"NSError",&,N,V_error
errorWithEKErrorCode:description:
initWithObjectID:date:
setDate:
Td,N,V_date
setResultLimit:
_findLocations
_findUsers
_terms
_resultLimit
T@"NSSet",&,N,V_terms
TB,N,V_findLocations
TB,N,V_findUsers
TQ,N,V_resultLimit
status
attendeeReplyChanged
videoConferenceChanged
recurrenceChanged
externalURL
setRecurrenceRule:
participationStatusModifiedDate
setParticipationStatusModifiedDate:
participationStatus
setParticipationStatus:
setVideoConferenceChanged:
setRecurrenceChanged:
setAttendeeReplyChanged:
initWithParticipant:forEvent:
proposedStartDateDeclined
statusChanged
proposedStartDateChanged
commentChanged
setIsLocationDecline:
publicObjectWithObjectID:
recurrenceRule
rsvpRequested
expanded
expandedProposedTimeAttendee
eventFromEventStore:
dismissAttendeeRepliedNotification
setIsAlerted:
needsReply
nearestProposedTime
startDateForNextOccurrence
invitedBy
isLocationDecline
setExpandedProposedTimeAttendee:
setExpanded:
isForReReply
setIsForReReply:
_timeChanged
_dateChanged
_videoConferenceChanged
_recurrenceChanged
_attendeeReplyChanged
_isLocationDecline
_expanded
_isForReReply
_startDateForNextOccurrence
_participationStatusModifiedDate
_participationStatus
_status
_recurrenceRule
_invitedBy
_expandedProposedTimeAttendee
T@"NSDate",&,N,V_startDateForNextOccurrence
T@"NSDate",&,N,V_participationStatusModifiedDate
Tq,N,V_participationStatus
Tq,N,V_status
T@"EKRecurrenceRule",&,N,V_recurrenceRule
TB,N,V_timeChanged
TB,N,V_dateChanged
TB,N,V_titleChanged
TB,N,V_locationChanged
TB,N,V_videoConferenceChanged
TB,N,V_recurrenceChanged
TB,N,V_attendeeReplyChanged
T@"EKCalendarEventInvitationNotificationAttendee",&,N,V_owner
T@"NSString",R,N,V_invitedBy
TB,N,V_isLocationDecline
T@"EKCalendarEventInvitationNotificationAttendee",&,N,V_expandedProposedTimeAttendee
TB,N,V_expanded
TB,N,V_isForReReply
_statusChanged
_commentChanged
_proposedStartDateChanged
_proposedStartDateDeclined
_isCurrentUser
_comment
_proposedStartDate
T@"NSString",R,N,V_name
T@"NSString",R,N,V_firstName
T@"NSString",R,N,V_lastName
T@"NSString",R,N,V_emailAddress
T@"NSString",R,N,V_phoneNumber
T@"NSURL",R,N,V_URL
TB,R,N,V_statusChanged
TB,R,N,V_commentChanged
TB,R,N,V_proposedStartDateChanged
Tq,R,N,V_participantType
Tq,R,N,V_participantStatus
T@"NSString",R,N,V_comment
T@"NSDate",R,N,V_proposedStartDate
TB,R,N,V_proposedStartDateDeclined
TB,R,N,V_isCurrentUser
calLocation
setCalLocation:
locationWithCalLocation:
initWithStructuredLocation:
createStructuredLocation
_calLocation
T@"CalLocation",C,N,V_calLocation
typeWithIdentifier:
_initWithFilePaths:eventStore:calendar:options:
_createImportHandle
setAsynchronous:
_importWithCompletion:
setImportProgressAsIndeterminate
setCompletionCallback:
importFilePaths
_separateFilesForImport:
callCompletionWithSuccess:
importICalFiles
importError
setImportError:
iCalFilesToImport
vCalFilesToImport
_separateICalFilesForITIP
_sortFilesByImportCalendar
_doImportFiles
callImportDroppedRemindersCallbackIfThereWereReminders
iTIPFiles
addArray:withKey:toStrongTableOfArrays:
nonITIPFiles
_findCalendarForExistingEvent:
addItem:withKey:toStrongTableOfArrays:
addObject:toArray:
isDefaultSchedulingCalendar
addArray:toArray:
selectCalendar
infoForNewCalendarForFiles:forITIPFiles:nonITIPFiles:
x_apple_calendar_color
green
blue
x_wr_calname
x_wr_caldesc
lastPathComponent
stringByDeletingPathExtension
selectCalendarWithTitle:color:description:error:
isPathToBackupFile
importFoundBackupFile
fileURLWithPath:
importFoundBackupFile:
isPathToICalData
dataWithContentsOfFile:
initWithData:options:error:
version
setValue:withKey:inDictionary:
isPathToVCalData
countReminders:
method
makeDecision
shouldImportContinueGivenDecision:eventsAffected:
numInvalidEvents
setNumInvalidEvents:
document
ownerIdentityAddress
calendarToITIPFiles
initWithData:filename:
eventFromDocument:
_existingEventFromICSEvent:calendar:exactMatch:
importICSData:intoCalendar:options:
_doITIPFileImport
calendarToVCalFiles
importVCSData:intoCalendars:error:
calendarToICalFiles
importICSData:intoCalendars:options:
recurrence_id
eventsWithExternalIdentifier:inCalendars:
_findBestEventFromEvents:
existingEventIDs
isEnabledForEvents
isDelegate
compareToLocalURL:
cal_isEquivalentToEmailAddress:
cal_isEquivalentToPhoneNumber:
ownerAddresses
addObject:toSet:
componentKeys
componentForKey:
componentOccurrencesForKey:
_getImportedCalendarItems
completionCallback
asynchronous
importSetProgressAsIndeterminate
importDroppedReminders
allowedImportFileTypes
initWithFilePaths:eventStore:options:
initWithFilePaths:calendar:options:
asyncImportWithCompletion:
syncImportWithCompletion:
_message:hasNewSelfOrganizedEventForCalendar:
_isAnyAttendeeAddressFrom:organizer:equivalentTo:
_matchingAttendeeAddressesFrom:organizer:inSource:
async_queue
setAsync_queue:
setSelectCalendar:
setImportFoundBackupFile:
setImportDroppedReminders:
setMakeDecision:
importSetProgressValue
setImportSetProgressValue:
setImportSetProgressAsIndeterminate:
options
setOptions:
setICalFilesToImport:
setVCalFilesToImport:
setCalendarToICalFiles:
setCalendarToITIPFiles:
setCalendarToVCalFiles:
setExistingEventIDs:
setITIPFiles:
setNonITIPFiles:
filesWithReminders
setFilesWithReminders:
droppedReminderCount
setDroppedReminderCount:
importedItems
setImportedItems:
_asynchronous
_importError
_async_queue
_selectCalendar
_importFoundBackupFile
_importDroppedReminders
_makeDecision
_importSetProgressValue
_importSetProgressAsIndeterminate
_numInvalidEvents
_importFilePaths
_options
_iCalFilesToImport
_vCalFilesToImport
_calendarToICalFiles
_calendarToITIPFiles
_calendarToVCalFiles
_existingEventIDs
_iTIPFiles
_nonITIPFiles
_filesWithReminders
_droppedReminderCount
_importedItems
_completionCallback
TB,N,V_asynchronous
TQ,N,V_numInvalidEvents
T@"EKEventStore",&,N,V_eventStore
T@"NSArray",R,N,V_importFilePaths
TQ,N,V_options
T@"NSMutableDictionary",&,N,V_iCalFilesToImport
T@"NSMutableArray",&,N,V_vCalFilesToImport
T@"NSMapTable",&,N,V_calendarToICalFiles
T@"NSMapTable",&,N,V_calendarToITIPFiles
T@"NSMapTable",&,N,V_calendarToVCalFiles
T@"NSMutableSet",&,N,V_existingEventIDs
T@"NSMutableDictionary",&,N,V_iTIPFiles
T@"NSMutableDictionary",&,N,V_nonITIPFiles
T@"NSMutableArray",&,N,V_filesWithReminders
TQ,N,V_droppedReminderCount
T@"NSMutableArray",&,N,V_importedItems
T@?,C,N,V_completionCallback
T@"NSError",&,N,V_importError
T@"NSObject<OS_dispatch_queue>",&,N,V_async_queue
T@?,C,N,V_selectCalendar
T@?,C,N,V_importFoundBackupFile
T@?,C,N,V_importDroppedReminders
T@?,C,N,V_makeDecision
T@?,C,N,V_importSetProgressValue
T@?,C,N,V_importSetProgressAsIndeterminate
changeID
initWithEntityType:changeID:
objectChangesOfType:inStore:resultHandler:
objectChangesOfType:inSource:resultHandler:
objectChangesOfType:inCalendar:resultHandler:
processFetchResults:
fetchChangesToObjectsOfTypes:inStore:resultHandler:
fetchChangesToObjectsOfTypes:inSource:resultHandler:
fetchChangesToObjectsOfTypes:inCalendar:resultHandler:
recordSequenceTokenForLegacyClients:
legacyToken
objectChangeWithProperties:
initWithCADSequenceToken:
raise
CADObjectChangeIDsFromEKObjectChanges:
objectChangesInStore:resultHandler:
objectChangesInSource:resultHandler:
objectChangesInCalendar:resultHandler:
fetchObjectChangesInStore:resultHandler:
fetchObjectChangesInSource:resultHandler:
fetchObjectChangesInCalendar:resultHandler:
callClientResultsHandler:changesTruncated:latestToken:changes:
objectType
serializedPropertiesForConsumingChange
_changeType
_changedObjectID
_changeID
_sequenceNumber
Tq,R,N,V_changeID
Tq,R,N,V_sequenceNumber
T@"EKObjectID",R,N,V_changedObjectID
Ti,R,N,V_changeType
reminderSourceMapLock
returnEventResults
reminderSources
returnReminderResults
_combineEventSources:withReminderSources:
performHoldingReminderSourceMapLock:
_rebuildSourceMapsWithEventSources:reminderSources:
reminderSourceIDToEventSourceIDMapping
setReminderSourceIDToEventSourceIDMapping:
setEventSourceIDToReminderSourceIDMapping:
isPrimaryLocalSource
isWritable
reminderSourceMap
eventSourceMap
eventSourceIDToReminderSourceIDMapping
getMapsWithReminderSourceMap:eventSourceMap:
initializeEKEventStorePlusReminders
combinedReminderAndEventSources
combineEventCalendars:withReminderCalendars:
eventSourceForReminderSource:
invalidateReminderSourceMaps
initSingleton
areBirthdaysEnabled
eventStoreWithReset:
birthdayCalendarsInStore:
resetAllBirthdaysInStore:
disableBirthdayCalendarsInStore:
initWithQueue:andBlock:
integerForKey:
setInteger:forKey:
_localeChanged
localeIdentifier
checkForFailures
executeBlock
registerForContactChangeNotifications:
removeObserver:
deregisterForContactChangeNotifications:
eventStoreProviderWithReset:
initWithBirthdayCalendarModifications
initWithCreationBlock:
boolForKey:
setBool:forKey:
removeCalendar:commit:error:
commitWithRollback:
bundleForClass:
localBirthdayCalendarCreateIfNeededWithError:
setCalendarIdentifier:
saveCalendar:commit:error:
contactStore
initWithKeysToFetch:
birthday
nonGregorianBirthday
enumerateContactsWithFetchRequest:error:usingBlock:
eventWithEventStore:
CalDateFromBirthdayComponents:
CalDisplayName
birthdayStringForContactName:eventDate:birthDate:lunarCalendar:
setEndDateUnadjustedForLegacyClients:
setBirthdayContact:
setLunarCalendarString:
insertEventWithContact:forDateComponents:intoCalendar:inStore:
birthdayCalendarsCreateIfNeeded:inStore:originalIdentifier:originalAlarms:ignoreAlarms:
allContactsWithBirthdays
_insertEventsForContact:intoCalendar:inStore:
predicateForMasterEventsInCalendar:
birthdayContactIdentifier
removeEvent:span:commit:error:
birthdayContactName
unifiedContactWithIdentifier:
enumerateEventsMatchingPredicate:usingBlock:
sharedListener
contactsInserted:updated:deleted:
contactsReset
stop
eventStoreProvider
addBirthdayCalendars
disableBirthdayCalendars
_eventStoreProvider
_updateQueue
_updateJobQueue
_needsReset
_shutdown
setAbsoluteDate:
setRelativeOffset:
urlWrapper
setUrlWrapper:
setIsDefaultAlarm:
calendarOwner
setCalendarOwner:
setSnoozedAlarmsSet:
snoozedAlarmsSet
oldSemanticIdentifier
initWithEnabled:weekday:startTime:endTime:timeZone:
enabled
setEnabled:
setWeekday:
startTime
setStartTime:
endTime
setEndTime:
_enabled
_weekday
_startTime
_endTime
TB,N,V_enabled
Tq,N,V_weekday
T@"NSDate",&,N,V_startTime
T@"NSDate",&,N,V_endTime
_eventStorePurger
changedByAddress
changedByFirstName
changedByLastName
changedProperties
publicStatus
convertToReminderKitFrequency:
convertToReminderKitWeekday:
loadSpecifierDaysOfTheWeek:daysOfTheMonth:monthsOfTheYear:weeksOfTheYear:daysOfTheYear:setPositions:
recurrenceEndWithOccurrenceCount:
recurrenceEndWithEndDate:
accountID
initRecurrenceRuleWithObjectID:accountID:reminderID:frequency:interval:firstDayOfTheWeek:daysOfTheWeek:daysOfTheMonth:monthsOfTheYear:weeksOfTheYear:daysOfTheYear:setPositions:end:
convertFromReminderKitFrequency:
convertFromReminderKitWeekday:
remWeekdayToEKWeekday:
ekWeekdayToREMWeekday:
daysOfTheWeekFromREMRecurrenceRule
remDaysOfTheWeekFromEKDaysOfTheWeek:
setLocalUID:
setRecurrenceDate:
setIdentifierString:
_splitIdentifier:intoLocalUID:recurrenceDate:
recurrenceDate
_recurrenceIdentifierWithRecurrenceDate:localUID:stripTime:stripTimeZone:
identifierString
_dateFormatStripTime:stripTimeZone:
dateWithTimeIntervalSince1970:
timeIntervalSince1970
recurrenceIdentifierWithLocalUID:recurrenceDate:
recurrenceIdentifierWithString:
localUIDForIdentifierString:
_recurrenceStringForDate:stripTime:stripTimeZone:
_localUID
_recurrenceDate
_identifierString
T@"NSString",&,V_localUID
T@"NSDate",&,V_recurrenceDate
T@"NSString",&,N,V_identifierString
initWithChangeSet:
singleValueChanges
_initWithChangeSet:filter:
filteredDictionaryPassingTest:
setIsNew:
isModified
setIsModified:
isSaved
setIsSaved:
isDeleted
setIsDeleted:
isUndeleted
setIsUndeleted:
isUndetached
setIsUndetached:
initWithDictionary:
setSingleValueChanges:
setMultiValueAdditions:
setMultiValueRemovals:
rollbackChanges
changedSingleValueKeys
changedMultiValueKeys
_isNewAndUnsaved
valueForSingleValueKey:basedOn:and:
changeSingleValue:forKey:basedOn:and:
addChanges:shouldCopyKeyCallback:
removeFromChanges:forMultiValueKey:basedOn:and:
_addToChanges:forMultiValueKey:basedOn:and:shouldCopyKeyCallback:
_semanticIdentifierToObjectMapForObjects:
_cleanupEmptySetsForMultiValueKey:
anyObject
ensureLoadedProperties:forObjects:
callStackSymbols
CalDictionaryWithEmptyObjectsRemoved
initWithChangeSet:changesToSkip:
initWithChangeSet:changesToKeep:
initWithChangeSet:filter:
markChangesAsSaved
unsavedMultiValueAddedObjectsForKey:
unsavedMultiValueRemovedObjectsForKey:
valuesForMultiValueKey:basedOn:and:
isUniqueAddedObject:forKey:
replaceMultiChangeAddedObject:withObject:forKey:
addToChanges:forMultiValueKey:basedOn:and:
isEffectivelyEqual:
_skipsPersistentObjectCopy
_isModified
_isSaved
_isDeleted
_isUndeleted
_isUndetached
_singleValueChanges
_multiValueAdditions
_multiValueRemovals
T@"NSMutableDictionary",&,N,V_singleValueChanges
T@"NSMutableDictionary",&,N,V_multiValueAdditions
T@"NSMutableDictionary",&,N,V_multiValueRemovals
TB,N,V_isNew
TB,N,V_isModified
TB,N,V_isSaved
TB,N,V_isDeleted
TB,N,V_isUndeleted
TB,N,V_isUndetached
_setNotificationsCollectionFlag
_registerObject:
_hasNotificationsCollectionFlag
initWithOptions:
addNotification:
removeNotification:
T@"EKSource",R,N
T@"NSSet",C,N
inviteReplyNotificationFromEventStore:
removeInviteReplyNotification:error:
TQ,N,V_status
suggestedEventInfoWithOpaqueKey:uniqueKey:
T@"EKPersistentEvent",D,N
TQ,D,N
T@"NSDate",C,D,N
token
_token
T@"EKEventStore",R,W,N,V_eventStore
TI,R,N,V_token
initWithEntityClass:predicate:store:
signpostHandle
predicateFormat
_createOSActivity
signpostStart
_startActualWithCompletion:synchronous:
_fetchObjectIDsActualWithCompletion:synchronous:
_startProcessingWithCompletion:synchronous:processor:
expandWithObjectsPendingCommit:deletedObjectIDs:andResultArray:
objectsPendingCommit
deletedObjectIDsPendingCommit
signpostEndWithError:count:
loadedValues
registerFetchedObjectWithID:withDefaultLoadedPropertyKeys:values:
occurrenceDate
_startActivityWithCompletion:synchronous:
_startFetchObjectIDsActivityWithCompletion:synchronous:
searchWithEntityClass:predicate:store:
terminate
startWithCompletion:
runSynchronously
fetchObjectIDs
_entityClass
_predicate
_cancellationToken
_finished
_isCancelled
_retryCount
reminderIdentifier
URLFragmentAllowedCharacterSet
removeCharactersInString:
stringByAddingPercentEncodingWithAllowedCharacters:
setParentID:
allowReminders
generateUniqueIDWithReminder:calendar:
_resetIfBackingObjectIsOfClass:fetchResetFrozenObjectBlock:
isAbsolute
reminderWithEventStore:
_removeSnoozedAlarmsFromReminder:usingDueDate:
firstAlertDate
setFirstAlertDate:
clearParentID
bestDisplayAlarm
parentID
_startDateComponents
_dueDateComponents
_parentID
T@"EKObjectID",&,N,V_parentID
T@"NSDateComponents",C,N,V_startDateComponents
T@"NSDateComponents",C,N,V_dueDateComponents
completed
TB,N,GisCompleted
_initWithOptions:eventStore:eventStoreGetter:
_killSyncTimer:
logHandle
attemptReload
_syncDidEndExternally
_notificationCountChangedExternally
_alertPrefChanged
focusModeConfigurationChangedName
_eventStoreChanged
notificationQueue
_killTimer
isMonitoringOnlyNotificationCount
notificationReferences
attemptReloadSynchronously:
isDataProtected
eventNotificationCountExcludingUncheckedCalendars:expanded:
_fetchEventNotificationReferencesFromEventStore:earliestExpiringNotification:
_updateTimerFireDate:
effectiveCallbackQueue
_addRemovedOrAddedObjectIDsTo:oldNotifications:newNotifications:
_timerFired
initWithFireDate:serviceIdentifier:target:selector:userInfo:
setMinimumEarlyFireProportion:
mainRunLoop
scheduleInRunLoop:
_syncDidEnd:
_databaseChanged
trackChangesInEventStore
adjust
blacklistedNotificationQueue
eventNotificationsExcludingUncheckedCalendars:filteredByShowsNotificationsFlag:earliestExpiringNotification:
dateWithTimeIntervalSinceNow:
_syncTimerFired:
initWithFireDate:interval:target:selector:userInfo:repeats:
addTimer:forMode:
_resetSyncTimer
EKObjectIDsFromData:
requestedDarwinNotifications
addBlacklistedNotificationObjectID:
blacklistedRowIDs
T@"NSObject<OS_os_log>",R,N
initWithOptions:eventStore:
initWithOptions:eventStoreGetter:
notificationCount
handleDarwinNotification:
callbackNotificationQueue
setCallbackNotificationQueue:
eventStorePurger
_eventStoreGetter
_running
_nextFireTime
_syncTimer
_pendingChanges
_lastChangedTimestamp
_changedIDsValid
_changedIDs
_ignoreSyncTimer
_initialCheck
_shouldInstallPersistentTimer
_useSyncIdleTimer
_registerForDarwinNotifications
_filteredByShowsNotificationsFlag
_computeChangedNotificationSet
_automaticallyFaultNotifications
_lastExpirationTimerFireDateWasInThePast
_isExpandedCount
_excludeUncheckedCalendars
_isMonitoringOnlyNotificationCount
_notificationCount
_notificationReferences
_callbackNotificationQueue
_notificationQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_notificationQueue
TB,R,N,V_isMonitoringOnlyNotificationCount
T@"EKTimedEventStorePurger",R,N,V_eventStorePurger
T@"NSObject<OS_dispatch_queue>",&,N,V_callbackNotificationQueue
TQ,R,N,V_notificationCount
T@"NSArray",R,N,V_notificationReferences
setPreferredAddress:
_displayName
_preferredAddress
_principalPath
T@"NSString",&,N,V_displayName
T@"NSString",&,N,V_preferredAddress
T@"NSString",C,N,V_principalPath
T@"NSDictionary",R
setAvailabilityFreshnessWindow:
saveGeocodedLocationsInTravelEngine
setSaveGeocodedLocationsInTravelEngine:
overrideTravelAdvisoryHypothesis
setOverrideTravelAdvisoryHypothesis:
overriddenTravelAdvisoryHypothesisTransportType
setOverriddenTravelAdvisoryHypothesisTransportType:
overriddenTravelAdvisoryHypothesisConservativeTravelTime
setOverriddenTravelAdvisoryHypothesisConservativeTravelTime:
overriddenTravelAdvisoryHypothesisEstimatedTravelTime
setOverriddenTravelAdvisoryHypothesisEstimatedTravelTime:
overriddenTravelAdvisoryHypothesisAggressiveTravelTime
setOverriddenTravelAdvisoryHypothesisAggressiveTravelTime:
overriddenTravelAdvisoryHypothesisSupportsLiveTraffic
setOverriddenTravelAdvisoryHypothesisSupportsLiveTraffic:
overriddenTravelAdvisoryHypothesisCurrentTrafficDensity
setOverriddenTravelAdvisoryHypothesisCurrentTrafficDensity:
overriddenTravelAdvisoryHypothesisRouteName
setOverriddenTravelAdvisoryHypothesisRouteName:
overriddenTravelAdvisoryHypothesisTravelState
setOverriddenTravelAdvisoryHypothesisTravelState:
preventMarkingTravelAdvisoryEntriesAsDismissed
setPreventMarkingTravelAdvisoryEntriesAsDismissed:
forceDisplayOfNewTravelAdvisoryHypotheses
setForceDisplayOfNewTravelAdvisoryHypotheses:
performAgendaEntryEqualityChecksInTravelEngine
setPerformAgendaEntryEqualityChecksInTravelEngine:
setVerifyIntegrityOfAvailabilityTimeSearchTimelines:
showDepartureDateForTransitTimeToLeave
setShowDepartureDateForTransitTimeToLeave:
shouldBypassTravelEngineThrottle
setShouldBypassTravelEngineThrottle:
syntheticTravelAdvisoriesEnabled
setSyntheticTravelAdvisoriesEnabled:
initForReadingFromData:error:
decodeObjectOfClass:forKey:
createEventInEventStore:
initRequiringSecureCoding:
encodeObject:forKey:
encodedData
serializeEvent:error:
deserializeData:isNew:error:
versionFromData:error:
_version
T@"NSString",R,N,V_version
eventUUID
excludeTimedEvents
excludeAllDayEvents
excludeDeclined
excludeProposed
isProposedTimeEvent
excludeDeclinedUnlessProposed
removeObjectsAtIndexes:
effectiveTimeZone
arrayWithObject:
CalIsBetweenStartDate:endDate:
_addEventOccurrenceAndProposedTimeOccurrenceFor:withOccurrenceStartDate:toResults:excludeProposed:excludeDeclinedUnlessProposed:
errorWithCADErrorCode:
_defaultDescriptionForCADErrorCode:
errorWithCADErrorCode:description:
errorWithDomain:code:description:underlyingError:reason:
_defaultDescriptionForEKErrorCode:
errorWithEKErrorCode:description:underlyingError:reason:
errorWithEKErrorCode:underlyingError:
errorWithEKErrorCode:description:reason:
setIsCurrentUser:
scheduleAgent
setInviteReplyCalendar:
sharedInstance
initWithDateProvider:
internalActive
setInternalActive:
_refresh
startOfLeaveNowPeriodInternal
startOfRunningLatePeriodInternal
suggestedDepartureDate
setStartOfLeaveNowPeriodInternal:
aggressiveDepartureDate
setStartOfRunningLatePeriodInternal:
setInternalPeriodChangedCallback:
internalPeriodChangedCallback
internalPeriod
_refreshPeriod
_refreshTimer
dateProvider
stringForPeriod:
setInternalPeriod:
_refreshOnDate:
activate
deactivate
active
startOfLeaveNowPeriod
startOfRunningLatePeriod
updateWithHypothesis:
setPeriodChangedCallback:
periodChangedCallback
period
_internalActive
_startOfLeaveNowPeriodInternal
_startOfRunningLatePeriodInternal
_internalPeriod
_internalPeriodChangedCallback
_dateProvider
T@"NSDate",&,N,V_startOfLeaveNowPeriodInternal
T@"NSDate",&,N,V_startOfRunningLatePeriodInternal
TB,N,V_internalActive
TQ,N,V_internalPeriod
T@?,C,N,V_internalPeriodChangedCallback
T@"<CalDateProvider>",R,N,V_dateProvider
T@"NSDate",&,N
endDateRaw
setEndDateRaw:
setOriginalStartDate:
travelAdvisoryBehavior
setTravelAdvisoryBehavior:
responseComment
setResponseComment:
locationPredictionState
setLocationPredictionState:
birthdayID
setBirthdayID:
canForward
setCanForward:
disallowProposeNewTime
setDisallowProposeNewTime:
needsOccurrenceCacheUpdate
setNeedsOccurrenceCacheUpdate:
invitationChangedProperties
setInvitationChangedProperties:
externalTrackingStatus
setExternalTrackingStatus:
actions
setActions:
conferenceURLString
setConferenceURLString:
setBirthdayContactIdentifier:
setBirthdayContactName:
recurrenceSet
setRecurrenceSet:
setConferenceURLDetectedString:
specialDayString
setSpecialDayString:
firedTTL
setFiredTTL:
diffSummaryBetweenObject:andObject:
EKObjectChangeSummarizer_singleValueDiffKeys
EKObjectChangeSummarizer_multiValueDiffKeys
changeSummaryForObject:
transportType
conservativeDepartureDate
conservativeTravelTime
estimatedTravelTime
aggressiveTravelTime
routeName
supportsLiveTraffic
currentTrafficDensity
geoTrafficDensityAsString:
trafficDensityDescription
travelState
isEqualToHypothesis:
initWithTransportType:conservativeDepartureDate:conservativeTravelTime:suggestedDepartureDate:estimatedTravelTime:aggressiveDepartureDate:aggressiveTravelTime:routeName:supportsLiveTraffic:currentTrafficDensity:trafficDensityDescription:travelState:
supportsSecureCoding
syntheticHypothesisWithStartDate:conservativeTravelTime:estimatedTravelTime:aggressiveTravelTime:
encodeWithCoder:
initWithCoder:
_transportType
_conservativeDepartureDate
_conservativeTravelTime
_suggestedDepartureDate
_estimatedTravelTime
_aggressiveDepartureDate
_aggressiveTravelTime
_routeName
_supportsLiveTraffic
_currentTrafficDensity
_trafficDensityDescription
_travelState
Ti,R,N,V_transportType
T@"NSDate",R,C,N,V_conservativeDepartureDate
Td,R,N,V_conservativeTravelTime
T@"NSDate",R,C,N,V_suggestedDepartureDate
Td,R,N,V_estimatedTravelTime
T@"NSDate",R,C,N,V_aggressiveDepartureDate
Td,R,N,V_aggressiveTravelTime
T@"NSString",R,C,N,V_routeName
TB,R,N,V_supportsLiveTraffic
TQ,R,N,V_currentTrafficDensity
T@"NSString",R,C,N,V_trafficDensityDescription
Tq,R,N,V_travelState
setTransportType:
setConservativeDepartureDate:
setConservativeTravelTime:
setSuggestedDepartureDate:
setEstimatedTravelTime:
setAggressiveDepartureDate:
setAggressiveTravelTime:
setRouteName:
setSupportsLiveTraffic:
setCurrentTrafficDensity:
setTrafficDensityDescription:
setTravelState:
Td,D,N
setValue:
_value
T@,W,N,V_value
temporaryObjectIDWithEntityType:
_propertyForKey:
eventStoreIdentifier
CADObjectIDWithGeneration:
_CADObjectID
_isPendingUpdate
_isPendingDelete
_trackModifiedObject:
_loadedPropertyKeys
_loadedPropertyForKey:
_relationForKey:
toMany
reset:
_releaseLoadedProperties
_setDefaultPropertiesLoaded:
_setPendingUpdate:
_objectDidReset:
ownsRelatedObject
internalAddCoCommitObject:
initWithOptions:capacity:
internalRemoveCoCommitObject:
_loadDefaultPropertiesIfNeeded
_takeValues:forKeys:relatedObjectValues:
_setProperty:forKey:forRelation:isUpdatedProperty:
_createUpdatedPropertiesIfNeeded
changed
_createLoadedPropertiesIfNeeded
_loadChildIdentifiersForKey:values:
_setProperty:forKey:isUpdatedProperty:
_loadRelationForKey:value:
inversePropertyNames
shouldSetInverseProperty:onObject:forObject:
removeCoCommitObject:
_addObjectCore:toValues:relation:
_removeObjectCore:fromValues:relation:
_primitiveValueForKey:loader:
_primitiveSetValue:forKey:
_loadStringValueForKey:
takeDefaultValues:
_takeValues:relatedObjectValues:
_takeDefaultValuesForObjects:inEventStore:
dictionaryWithObjects:forKeys:
isPropertyLoaded:
_setProperty:forKey:isRelation:isUpdatedProperty:
_takeValuesForDefaultPropertyKeys:values:relatedObjectValues:
_areDefaultPropertiesLoaded
_loadPropertiesIfNeeded:
removeLastObject
coCommitObjects
stringWithCapacity:
_shouldRetainPropertyForKey:
allObjectsWithChangesRelatedToObjects:
_setObjectID:inDatabaseRestoreGeneration:
isPropertyDirty:
dirtyPropertiesAndValues
didCommit
_setPendingInsert:
_setPendingDelete:
primitiveAddRelatedObject:forKey:
primitiveRemoveRelatedObject:forKey:
primitiveDoubleValueForKey:
primitiveSetDoubleValue:forKey:
takeValues:forKeys:
takeValuesForDefaultPropertyKeys:values:
ownedObjects
dump
_coCommitObjects
_loadedProperties
_updatedProperties
T@"EKEventStore",R,N
performGroupExpansionWithAccountID:principalPath:completionBlock:
_group
_completionBlock
_resultsSet
initWithArray:copyItems:
initWithRecurrenceRule:
createRecurrenceRule:
_frequency
_interval
_recurrenceEnd
_firstDayOfTheWeek
_daysOfTheWeek
_daysOfTheMonth
_daysOfTheYear
_weeksOfTheYear
_monthsOfTheYear
_setPositions
Tq,R,N,V_frequency
Tq,R,N,V_interval
T@"EKRecurrenceEnd",C,N,V_recurrenceEnd
Tq,R,N,V_firstDayOfTheWeek
T@"NSArray",R,N,V_daysOfTheWeek
T@"NSArray",R,N,V_daysOfTheMonth
T@"NSArray",R,N,V_daysOfTheYear
T@"NSArray",R,N,V_weeksOfTheYear
T@"NSArray",R,N,V_monthsOfTheYear
T@"NSArray",R,N,V_setPositions
coordinate
date:representsApproachingDepartureDateForHypothesis:
date:representsLatenessForHypothesis:
travelStateIndicatesTravelingTowardDestination:
formattedLocationCoordinates:
geoRouteHypothesisTravelStateForString:
geoTransportTypeAsString:
geoTransportTypeForString:
geoTrafficDensityForString:
authorizationStatusAsString:
geoTransportTypeForCalLocationRoutingMode:
date:representsImmediateDepartureForHypothesis:
maximumAllowableTravelTime
minimumAllowableTravelTime
cadRouteHypothesisForEKTravelEngineHypothesis:
sharedEventStore
_sharedEventStore
T@"EKEventStore",R,N,V_sharedEventStore
CALFreeBusyTypeFromEKAvailType:
getCALFreeBusyFromEKSpans:inRange:
leastAvailabileFreeBusyTypeForArray:
getCALFreeBusyFromResults:forAttendees:inRange:
summarizedAvailabilityTypeForSpans:
_permittedClassesForArchivingLastSyncErrorUserInfo
archiveDictionary:permittedClasses:error:
unarchiveDictionaryFromData:permittedClasses:error:
dataFromErrorUserInfo:
errorUserInfoFromData:
resourceChanges
setResourceChanges:
addResourceChange:
removeResourceChange:
setDefaultAlarm:
originalOccurrenceStartDate
initWithName:
_isAllDay
setOccurrenceIsAllDay:
adjustedPersistedDateForDate:withAdjustmentMode:pinMode:clientCalendarDate:
setOccurrenceStartDate:
setOccurrenceEndDate:
occurrenceIsAllDay
_calculateDurationWithStart:end:allDay:
calendarDateByComponentwiseAddingComponents:
isDetached
isFirstOccurrence
_invalidateRecurrenceIdentifier
differenceAsDateComponents:units:
hour
setHour:
setMinute:
setSecond:
eventOccurrenceID
recurrenceIdentifier
occurrenceStartDate
absoluteTime
_modifiedNotificationUserInfoWithIdentifier:forRevert:
postModifiedNotificationWithUserInfo:
needsGeocodingForEvent:
setNeedsGeocoding:forEvent:
originalOccurrenceEndDate
_clearLocationPredictionCacheIfNotFrozen
_committedStartDate
isPhantom
setIsPhantom:
setOriginalOccurrenceIsAllDay:
_updateStartDateForDate:withAdjustmentMode:
_updateEndDateForDate:withAdjustmentMode:
forceSetTimeZone:
clearCachedTimeValues
startDateIncludingTravel
_setStartDate:andClearProposedTimes:
dateForDayInTimeZone:
duration
components:forDayInTimeZone:
minute
second
adjustedPersistedDateForDate:persistedDateIsInUTC:withAdjustmentMode:pinMode:clientCalendarDate:
_pinDate:withPinMode:
setOriginalOccurrenceStartDate:
occurrenceEndDate
setOriginalOccurrenceEndDate:
setProposedStartDate:forEvent:
setProposedStartDateChanged:
setCommentChanged:
setStatusChanged:
_settingTimeZoneChangesStartEndDates
originalOccurrenceIsAllDay
_isParticipantStatusDirty
_compareAllKnownKeysExceptKeys:forObject:againstObject:compareIdentityKeys:
allowsParticipationStatusModifications
supportedEventAvailabilities
_eventAvailabilityForParticipantStatus:supportedEventAvailabilities:isAllDayEvent:
currentUserMayActAsOrganizer
initWithObjects:
_lastRecurrenceDate
sharedAutoupdatingCurrentCalendar
dateByAddingDays:inCalendar:
dateRemovingTimeComponentsInCalendar:
masterEvent
_adjustDateIfFloatingForDate:
_occurrenceDatesForCount:
isMainOccurrence
month
_nsCalendar
allowsAvailabilityModifications
defaultAllDayAlarmOffset
defaultTimedAlarmOffset
_defaultAlarmOffset
virtualConference
joinMethods
conference
serializeConference:
_buildConferenceStringFromNotesWithoutConference:serializedConference:
_originallyCommittedVirtualConference
invalidateConferenceURL:
invalidateConferenceURLIfNeeded:inEventStore:
hasSuffix:
isChinaHolidayCalendar
_setInvitationStatusAlertedIfNecessary
_setInvitationStatusUnalertedIfNecessary
_shouldAlertInviteeDeclines
initWithTimeInterval:sinceDate:
components:fromDate:toDate:options:
privacyDescription
routingModeEnumForCalRouteType:
skipModificationValidation
currentProcessHasSyncClientEntitlement
allowsPrivacyLevelModifications
_invitationChangedPropertyForFlag:
_setInvitationChangedProperty:forFlag:
serverSupportedProposeNewTime
hasOwnerEmailAddress
range
stringByReplacingCharactersInRange:withString:
CDVStringByXMLUnquoting
substringWithRange:
setPredictedLocationFrozen:
_updatePredictedLocationCacheIfNeeded
roomAttendees
removeConferenceRooms:
_conferenceRoomDisplayStrings
setStructuredLocation:preserveConferenceRooms:
removeObjectsInArray:
_needsPredictedLocationCacheUpdateHoldingLock
_updatedPredictedLocationRespectingTimeoutBudgetForEvent:error:
localizedDescription
_firstNonConferenceRoomLocationTitle
isMainThread
locationPredictionForEvent:error:timeout:
performWithReadLock:
_updatePredictedLocationCacheIfNeededHoldingLock
performWithWriteLock:
_clearLocationPredictionCacheIfNotFrozenHoldingLock
preferredLocationWithoutPrediction
setPredictedLOI:
isPrediction
shouldDoLocationPredictionForEvent:
isPrivateEventSharedToMe
isPartOfExistingRecurringSeries
_changesRequireDetachOrSlice
isAllDayDirty
hasAttachmentChanges
_hasBasicChangesRequiringSpanAll
_hasRecurrenceRuleChangeRequiringSpanAll
_basicChangesRequiringSpanAll
_hasOrHadRecurrenceRule
hasUnsavedChangesInKeys:
automaticEventLocationGeocodingAllowed
_eligibleForTravelAdvisoriesIncludePotential:
locationIsAConferenceRoom
hasKnownSpatialData
automaticLocationGeocodingAllowed
predictedLOI
eligibleForTravelAdvisories
get_enableTravelAdvisoriesForAutomaticBehavior
_relatedCachedTimeKeys
clearCachedValuesForKeys:
startOfDayForDate:
cachedValueForKey:expectingCachedValue:forMasterKey:relatedKeys:populateBlock:
startOfDayForStartDateInCalendar:
daysSpannedInCalendar:
daysSpannedFromStartDate:toEndDate:allDay:inCalendar:
isMultiDayTimedEventWithStartDate:endDate:allDay:inCalendar:
isSameDayAsDate:inCalendar:
dateOnlyComponentsInCalendar:
pendingStatus
hasValidEventAction
_hasExternalIDOrDeliverySource
pendingParticipationStatus
_travelTimeInternalDescription
clearModifiedFlags
setClearModifiedFlags:
validateOccurrenceDateStillMatchesRecurrenceRules
postModifiedNotification
_snoozeAlarm:withTimeIntervalFromNow:orTargetDate:
setRequiresDetachDueToSnoozedAlarm:
validateWithSpan:error:
allowEvents
_isParticipationStatusDirty
validateRecurrenceRule:error:
_validateDatesAndRecurrencesGivenSpan:error:
_isOnlyChangeToAttendeesSelfAttendeeParticipationStatus
endLocation
generateUniqueIDWithEvent:originalEvent:calendar:
_removeInvalidAlarmsDuringSave
_saveUndeletedDetachedOccurrence
_saveUndetachedOccurrenceWithError:
_needsAttendeePartStatReset
_allowSlicingFromDetachedOccurrence
responseMustApplyToAll
requiresDetachDueToSnoozedAlarm
_detachOrSliceWithSpan:withOriginalStartDate:newStartDate:
_updateUUIDForNewParticipants
_isSimpleRepeatingEvent
conformsToRecurrenceRules:
emptyMeltedCacheForKey:
_isSignificantlyDetachedComparedToMaster:shouldIgnorePartStat:
_updateVideoConferenceOnlyModified
_propagateChangesToDetachedEvents:significantlyDetachedEvents:startDateOffset:duration:calendar:
_clearExceptionDatesAndUpdateDetachedOriginalDates:
_filterExceptionDatesAndDetachments
_applyTimeChangesToMaster
_updateModifiedPropertiesForThisEventAndAllDetachments
_updateRecurrenceEndDatesWithAdjustmentMode:
_deleteErrorIfInvalid
invalidateVirtualConferenceURLIfNeededOnCommit:
_extendConferenceURLExpirationDateToDate:
isDifferentFromCommittedEventAndRequiresRSVP
_eventKitPropertyKeyForCalendarItemErrorPropertyKey:
renewConferenceURL:toDate:
_updateModifiedProperties
applyChanges:
knownKeysToSkipForFutureChanges
addChangesFromObject:toObjects:except:
_propagateAlarmChangesToDetachedEvents:
dateByAddingComponents:toDate:options:
knownKeysToUseForFutureChanges
addChangesFromObject:toObjects:passingTest:
_duplicateAddedAttachmentsToDetachedEvents:significantlyDetachedEvents:
_updateSelfAttendeeToMatchSelfAttendee:
duplicateWithNewIdentity
_updateMasterDate:forChangeToOccurrenceDate:fromOriginalOccurrenceDate:
_leftoversInDates:withGeneratedDates:
supportsMultipleDaysInMonthlyRecurrence
supportsMultipleMonthsInYearlyRecurrence
supportsYearlyRecurrenceWithArbitraryInterval
suggestedStartDateForCurrentRecurrenceRule
dateWithTimeInterval:sinceDate:
_adjustAttendeesAfterMovingOrCopyingFromCalendar:toCalendar:
_adjustPrivacyAfterMovingOrCopyingFromCalendar:toCalendar:savingItem:
_adjustAvailabilityAfterMovingOrCopyingFromCalendar:toCalendar:
_adjustScheduleAgentAfterMovingOrCopyingFromCalendar:toCalendar:
_adjustAttachmentsAfterMovingOrCopyingFromCalendar:toCalendar:savingItem:
_adjustURLAfterMovingOrCopyingFromCalendar:toCalendar:notes:
_adjustAlarmsAfterMovingOrCopyingFromCalendar:toCalendar:
_adjustRecurrenceRulesAfterMovingOrCopyingFromCalendar:toCalendar:notes:
_adjustTimeZoneAfterMovingOrCopyingFromCalendar:toCalendar:notes:
_requirementsToMoveToCalendarHelperRemoveAttendeesRequiredToMoveEventFromCalendar:toCalendar:
_isValidAttendee:forCalendar:selfAttendeeIsValid:
isPrivacySet
setPrivacyLevelWithoutVerifyingPrivacyModificationsAllowed:
_coercedEventAvailabilityForDesiredAvailability:supportedAvailabilities:
assignIdentity:
invalidateLocalFilePropertiesForNewCopiedFile
assignNewIdentity
copyLocalFileToNewSource
localTimeZone
_addOrganizerToRecentsIfNeeded
_addNewAttendeesToRecentsIfNeeded
_clearOriginalDateFields
invalidateRemovedVirtualConferences
clearVirtualConferenceURLsQueuedForInvalidation
_committedEndDate
revert
startCalendarDate
calendarTimeZone
compareStartDateWithEvent:
isSignificantlyDetached
duplicateWithOptions:
_keysToChangeForDuplicateWithOptions:
dateForStartOfDayInTimeZone:
_occurrenceExistsOnDate:timeZone:
_checkStartDateConstraintAgainstDate:timeZone:error:
durationOverlapsRecurrenceInterval
overlapsWithOrIsSameDayAsEventInSeries
isOutOfOrderWithEventInSeries
CalGregorianCalendarForTimeZone:
setByAddingObjectsFromSet:
_notDetachedOccurrenceOfEvent:existsInDateRangeWithStartDate:endDate:inTimeZone:
_deleteFromOccurrenceDateOnward:
_deleteThisOccurrence
_updateSelfFromDetachedEventIfNeededForDelete
enumerateObjectsWithOptions:usingBlock:
_cancelDetachedEvents
_validateSpanForRemove:error:
_eventIsTheOnlyRemainingOccurrence
_noRemainingEarlierOccurrences
_shouldCancelInsteadOfDeleteWithSpan:
_cancelWithSpan:error:
_shouldDeclineInsteadOfDelete
_deleteWithSpan:
_isOriginalOccurrenceStartDateSameAsCommittedStartDate
setByAddingObject:
_recursivelyAssignAllAttachmentsNewIdentities
_assignAllAttachmentsNewIdentities
_detachOrSliceEvent:withSpan:savingEvent:withOriginalStartDate:newStartDate:
_shouldPreserveFutureWhenSlicingWithStartDate:newStartDate:
emptyMeltedCacheForKeys:
rebaseForDetachment
updateEventToEvent:commit:
isDate:inSameDayAsDate:
isEqualToLocation:
infoWithConflicts:needsAction:event:
isAffectingAvailability
isFacebookBirthdayCalendar
potentialConflictOccurrenceDatesInTimePeriod:
predicateForEventsWithStartDate:endDate:calendars:loadDefaultProperties:
_fetchedEventIsConflict:forStartDate:endDate:
isTentative
infoWithConflictsInSeries:outOf:withPeriod:conflictingDates:
updateFromMapItem:
_clearAttendeeChangedFlags
setAttendeeComment:
setAttendeeStatus:
setAttendeeProposedStartDate:
setAttendeeDeclinedStartDate:
dismissAcceptedProposeNewTimeNotification
_respondToProposedTimeFromAttendee:shouldAccept:
isDifferentWithDiff:
knownRequireRSVPKeys
intersectsSet:
_diff:isDifferentFromCommittedEventHelperRequiresReschedule:
currentUserGeneralizedParticipantRole
isDifferentAndModifiedAttendeesWithDiff:
knownPerUserPropertyKeys
initWithSet:
diffFromCommitted
isDifferentAndRequiresRescheduleWithDiff:
isDifferentAndRequiresRSVPWithDiff:
isDifferentAndHasUnscheduledAttendeesWithDiff:
_requirementsToMoveOrCopyToCalendarHelperAllowedToMoveOrCopyEventFromCalendar:toCalendar:
_requirementsToMoveToCalendarHelperDuplicationRequiredToMoveEventFromCalendar:toCalendar:
_requirementsToMoveToCalendarHelperAlterationsRequiredToMoveEventFromCalendar:toCalendar:
_requirementsToMoveToCalendarHelperReinviteAttendeesRequiredToMoveEventFromCalendar:toCalendar:
_requirementsToMoveToCalendarHelperNeedToRemoveOriginalToMoveEventFromCalendar:toCalendar:
requirementsToMoveFromCalendar:toCalendar:
canMoveToCalendar:fromCalendar:allowedRequirements:error:
_canMoveOrCopyFromCalendar:toCalendar:allowedRequirements:error:
seriesHasOutOfOrderEvents
seriesHasOverlappingOrOnSameDayOrOutOfOrderEvents
CalGregorianGMTCalendar
component:fromDate:
suggestedStartDateForCurrentRecurrenceRuleWithSimulatedNowDate:
_suggestedStartDateHelperRecurrenceRuleRequiresExpansion:forDate:
setFirstWeekday:
dateWithDatePartFromDate:timePartFromDate:inCalendar:
isSameWeekAsDate:inCalendar:
roundToCurrentWeekInCalendar:withFirstWeekdayIndex:
setOnlyIncludeInitialDateIfItMatchesRecurrence:
resourceSpecifier
isAttendeeSameAsOrganizer:
arrayByExcludingObjectsInArray:
supportsMultipleAlarms
_hasAbsoluteAlarms
supportsURLs
isValidAttendee:forCalendar:
sharedOwnerAddress
isCurrentUserInvitedAttendee
_calendarsAreSharedToMeInSameSourceAndHaveSameOwner:
setComponents:options:
initWithCalendar:
ICSDataWithOptions:
initWithEKOptions:
defaultCalendarForNewEvents
_ekRecurrenceRuleFromICSRecurrenceRule:
setRrule:
dateFromICSString:
setDtstart:
dtstart
setDtend:
floating
dateOnly
_ekRecurrenceRuleFromVCSRecurrenceRule:
hasPropertyWithName:
recurrenceType
hasDuration
weekdayList
occurrenceList
ekWeekDayFromVCSWeekDay:
dayOfWeek:weekNumber:
dayOfWeek:
dayNumberList
monthList
dayList
externalUriScheme
eventFromICSEvent:inStore:
isStatusDirty
needsGeocoding
setNeedsGeocoding:
phantomMaster
setPhantomMaster:
startCalendarDateIncludingTravelTime
overrideStartDate:
durationIncludingTravel
endCalendarDate
isMaster
supportsParticipationStatusModificationsWithoutNotification
_userAddressesRepresentInvitedAttendee:checkEmailAddresses:
markEventAsAttendeeForward
_parentParticipationStatus
birthdayPersonID
isBirthday
lunarCalendarString
makeRecurrenceEndDateBased
makeRecurrenceEndCountBased
hasComplexRecurrence
futureOccurrencesCannotBeAffectedByChangingStartDateToDate:
virtualConferenceTextRepresentation
setVirtualConference:
specialDayType
setSpecialDayType:
removeServerRefreshRelatedProperties
clearInvitationStatus
addEventAction:
removeEventAction:
isAlerted
proposedEndDate
travelRoutingMode
allowsTravelTimeModifications
allowsAllDayModifications
attendeeComment
attendeeProposedStartDate
attendeeDeclinedStartDate
allowsProposedTimeModifications
supportsAddingAttachments
addConferenceRooms:
confirmPredictedLocation:
rejectPredictedLocation
hasPredictedLocation
setLocationPredictionAllowed:
forceLocationPredictionUpdate
setConferenceURL:
setEndLocation:
compareStartDateIncludingTravelWithEvent:
compareOriginalStartDateWithEvent:
canDetachSingleOccurrence
changingAllDayPropertyIsAllowed
hasChangesRequiringSpanAll
potentiallyEligibleForTravelAdvisories
travelAdvisoryBehaviorIsEffectivelyEnabled
startOfDayForEndDateInCalendar:
isMultiDayTimedEventInCalendar:
canBeRespondedTo
snoozeAlarm:untilTargetDate:
saveWithSpan:error:
isSignificantlyDetachedIgnoringParticipation
markAsUndetachedWithStartDate:endDate:
nextOccurrenceOrDetachmentAfter:
earliestOccurrenceEndingAfter:
hasAttendeeProposedTimes
copyToCalendar:withOptions:
countOfAttendeeProposedTimes
allowsResponseCommentModifications
removeWithSpan:error:
isOnlyOccurrence
privacyLevelString
updateEventToEvent:
scanForConflicts
updateWithGeocodedMapItemAndSaveWithCommit:eventStore:error:
launchURL
acceptProposedTimeNotificationFromAttendee:
declineProposedTimeNotificationFromAttendee:
isEqual:comparingKeys:
isDifferentAndHasForwardedAttendeesWithDiff:
isDifferentAndHasNewProposedTimeWithDiff:
isDifferentExceptingPerUserPropertiesWithDiff:
isDifferentFromCommittedEventAndRequiresReschedule
isDifferentFromCommittedEventAndHasUnscheduledAttendees
requirementsToMoveToCalendar:
requiresCopyToMoveFromCalendar:toCalendar:
setRecurrenceRuleString:
birthdayPersonUniqueID
preventConferenceURLDetection
setPreventConferenceURLDetection:
showEventURLString
setVirtualConferenceTextRepresentation:
_cachedLocationPrediction
_cachedLocationPredictionExpirationDate
_locationPredictionFrozen
_locationPredictionAllowed
_locationPredictionLock
_virtualConferenceURLsToInvalidateOnCommit
_occurrenceIsAllDay
_requiresDetachDueToSnoozedAlarm
_preventConferenceURLDetection
_isMainOccurrence
_clearModifiedFlags
_birthdayPersonUniqueID
_occurrenceStartDate
_occurrenceEndDate
_originalOccurrenceStartDate
_originalOccurrenceEndDate
_originalOccurrenceIsAllDay
_showEventURLString
_virtualConferenceTextRepresentation
T@"EKCalendarDate",C,N,V_occurrenceStartDate
T@"EKCalendarDate",C,N,V_occurrenceEndDate
TB,N,V_occurrenceIsAllDay
T@"EKCalendarDate",C,N,V_originalOccurrenceStartDate
T@"EKCalendarDate",C,N,V_originalOccurrenceEndDate
T@"NSNumber",C,N,V_originalOccurrenceIsAllDay
TB,N,V_requiresDetachDueToSnoozedAlarm
Ti,N,V_clearModifiedFlags
T@"EKRecurrenceIdentifier",R,N
Tq,N
Td,R,N
T@"EKStructuredLocation",&,D,N
T@"EKSuggestedEventInfo",&,N
T@"EKStructuredLocation",R,N
T@"NSURL",&,N
TB,N,V_preventConferenceURLDetection
T@"NSString",R,N,V_showEventURLString
currentUserInvitedAttendee
TB,R,N,GisCurrentUserInvitedAttendee
T@"NSDate",R,C,N
TB,R,D,N
T@"EKCalendarDate",R,N
TB,R,N,V_isMainOccurrence
privacySet
TB,R,N,GisPrivacySet
T@"EKVirtualConference",&,N
T@"NSString",&,N,V_virtualConferenceTextRepresentation
TB,N,GisAllDay
T@"EKStructuredLocation",C,D,N
T@"EKParticipant",R,D,N
T@"NSString",R,N,V_birthdayPersonUniqueID
initWithName:emailAddress:phoneNumber:address:isCurrentUser:
fetchRemindersForEventKitBridgingWithListIDs:error:
_calendarIdentifierSet
noCalendarNoResult
availabilityCache
setKey:withObject:
setKey:withDate:
setKey:withPointerAddress:
_availabilityCache
_addresses
_requestID
setDataProtectionObserver:
_dataProtectionStateChanged
dataProtectionObserver
setStateChangedCallback:
dataIsAccessible
stateChangedCallback
stateChangedNotificationName
_stateChangedCallback
_dataProtectionObserver
T@"CDBDataProtectionObserver",&,N,V_dataProtectionObserver
T@?,C,N,V_stateChangedCallback
_ekParticipantStatusFromCalAttendeeStatus:
_calAttendeeStatusFromEKParticipantStatus:
setPendingStatus:
_valueForFlag:
_setFlag:value:
attendeeWithEmailAddress:name:
attendeeWithName:emailAddress:
attendeeWithName:phoneNumber:
attendeeWithName:emailAddress:address:
hasProposedStartDate
markAsForward
initWithCustomClientId:suffix:
customClientId
initWithCustomClientId:
suffix
initWithSuffix:
CADChangeTrackingClientId
_suffix
_customClientId
T@"NSString",R,C,N,V_suffix
T@"NSString",R,C,N,V_customClientId
T@"CADChangeTrackingClientId",R,N
setIsAllDay:
_initAlarms:
_initAttachments:
_initAttendees:selfAttendee:
_initRecurrenceRules:
initWithAlarm:
initWithAttachment:
createAlarm:
serializedProperties
_recurrenceRules
_calendarIdentifier
_selfAttendee
T@"NSDate",C,N,V_startDate
T@"NSDate",C,N,V_endDate
T@"NSTimeZone",C,N,V_timeZone
TB,N,V_isAllDay
T@"NSMutableArray",&,N,V_recurrenceRules
T@"NSString",C,N,V_title
T@"NSString",C,N,V_notes
T@"NSString",C,N,V_calendarIdentifier
T@"NSString",C,N,V_location
T@"EKSerializableStructuredLocation",&,N,V_structuredLocation
T@"EKSerializableParticipant",&,N,V_selfAttendee
T@"NSNumber",&,N,V_isNew
cal_changeMayAffectAnyObjectOfType:
cal_changeMayAffectCalendarsOrSources
donateInteractionForAction:onEvent:
donatePredictiveAction:forEvent:
deleteInteractionsWithGroupIdentifier:completion:
_logHandle
serializedEventWithEvent:
initWithDomain:verb:parametersByName:
_intentForAction:onEvent:
verb
deleteInteractionsWithIdentifiers:completion:
initWithIntent:response:
setGroupIdentifier:
donateInteractionWithCompletion:
bundleRecordForCurrentProcess
bundleIdentifier
createEventIntentForEvent:
createEventIntentForEvent:withSuggestionsInfoUniqueKey:
dateFormatFromTemplate:options:locale:
_displayStringForDate:
initWithIdentifier:displayString:
_setLaunchId:
setSuggestedInvocationPhrase:
setLocationName:
setLocationAddress:
geoLocation
initWithLocation:addressDictionary:region:areasOfInterest:
setGeolocation:
handleEventCreation:
prepareForEventUpdate:
handleEventUpdate:
handleEventDeletion:
removeInteractionsForCalendar:
reachedMaxDepth
rootObject
initWithRootObject:
faultIfNeededForObject:
depth
setDepth:
setReachedMaxDepth:
_reachedMaxDepth
_rootObject
_depth
T@"EKObject",R,N,V_rootObject
TQ,N,V_depth
TB,N,V_reachedMaxDepth
_readWriteLock
_performWithReadLock:
_performWithWriteLock:
validateWithOwner:error:
_resetWithFrozenObject:
_cachedMeltedObjectsCount
_hasChangeHelperInKeys:ignoreKeys:checkUnsaved:
hasUnsavedChangesIgnoreKeys:
_hasUnsavedChangesInKeys:ignoreKeys:
_hasChangesForKey:checkUnsaved:
_singleRelationshipKeysToCheckForChanges
_multiRelationshipKeysToCheckForChanges
isSubsetOfSet:
_addChangesFromObject:passingTest:ignoreRelations:copyingBackingObjects:
_addChanges:copyingBackingObjects:
_addChangesFromObject:toObjects:passingTest:copyingBackingObjects:
updateAfterApplyingChanges:
addMultiChangedObjectValues:forKey:
removeMultiChangedObjectValues:forKey:
multiChangedObjectValuesForKey:
frozenOrMeltedCachedMultiRelationObjectsForKey:
_addCachedMeltedObject:forMultiValueKey:
updateMultiValueCacheForChangeSet:preservingExistingAdds:
_applyDefinedAfterFirstSaveFrom:
_applyKnownImmutableValuesFrom:
_updateCachedMeltedObjectSetForMultiValueKey:usingBlock:
_removeCachedMeltedObject:forMultiValueKey:
removeMultiChangedObjectValue:forKey:
replaceMultiChangedObjectValuesWithObjectValues:forKey:
updateMeltedCacheForChangeSet:
_resetMeltedCache
_changeSetForDiff:
duplicatedPersistentObjectForObject:alreadyCopiedObjects:
_compareRelationshipObject1:againstRelationshipObject2:propertiesToIgnore:relationshipObjectKey:
indexOfObjectPassingTest:
_convertBackingObjectsWithPath:updateBackingObjects:allChangedBackingObjects:eventStore:updatedBackingObjectProvider:
backingObjectOfChildObject:withRelationshipKey:
_cachedMeltedChildIdentifierToParentMap:
cachedValueForKey:
addChangesFromObject:
refetch
meltedAndCachedMultiRelationCountForKey:
emptyMeltedCache
inverseObjectWithObject:diff:
_numberOfSharedLocksForUnitTesting
isDerivedRelationship
addChangesFromObject:toObjects:keep:
_compareAllKnownKeysExceptKeys:forObject:againstObject:
_compareKnownKeys:forObject:againstObject:
_compareNonIdentityKeys:forObject:againstObject:propertiesToIgnore:
diagnosticsCollector:finishedWithError:
diagnosticsCollector:determinedExpectedOutputFiles:
files
diagnosticsCollector:createdOutputFiles:
initWithEventStore:delegate:
collectDiagnostics
cancelDiagnosticsCollection
redactLogs
setRedactLogs:
_files
_determinedOutputFiles
_redactLogs
TB,N,V_redactLogs
T@"<EKDiagnosticsCollectionDelegate>",R,W,N,V_delegate
decodeIntegerForKey:
encodeInteger:forKey:
_dayOfTheWeek
_weekNumber
Tq,R,N,V_dayOfTheWeek
Tq,R,N,V_weekNumber
componentsForDate:inTimeZone:
systemTimeZone
initWithCalendarIdentifier:
initWithSearchWithCSQuery:inStore:inCalendars:resultHandler:completionHandler:
setFetchAttributes:
setBundleIDs:
initWithQueryString:context:
attributeSet
eventsWithUUIDToOccurrenceDateMap:inCalendars:
setFoundItemsHandler:
setCompletionHandler:
queryString
queryStringForSearchTerm:matchingTypes:fromStartDate:toEndDate:
_queryStringForPeopleMatchingSearchTerm:
replaceCharactersInRange:withString:
searchWithCSQuery:inStore:inCalendars:resultHandler:completionHandler:
queryStringForSearchTerm:matchingTypes:
query
csQuery
T@"EKEventStore",W,V_eventStore
eventWithRandomUUID
calendarForEntityType:eventStore:
calendarForEntityTypes:eventStore:
_updateToMaxDisplayOrder
_allCalendars
reorderCalendars:betweenEarlier:later:
localSource
allCalendars
orderSortDescriptors
sortedArrayUsingDescriptors:
indexOfObject:
indexSetWithIndexesInRange:
insertObjects:atIndexes:
sortDescriptorWithKey:ascending:
_clearCGColorCache
_eventKitBundle
colorStringForNewCalendar
colorString
getColorRed:green:blue:
initWithCGColor:
color
setColorString:
allowsBirthdayModifications
readOnly
setReadOnly:
_flagValueWithMask:
_setFlagValue:withMask:
typeDescription:
isImmutable
isDeletableWithAllKnownCalendars:
_validateDeletableWithAllKnownCalendars:error:
_validateDeletableHelperWithAllKnownCalendars:error:
isMarkedUndeletable
isFamilyCalendar
_anotherCalendarForDefaultSchedulingExistsWithAllKnownCalendars:
_anotherCalendarForRemindersExistsWithAllKnownCalendars:
futureScheduledEventsExistOnCalendar:
eventsExistOnCalendar:
eventsMarkedScheduleAgentClientExistOnCalendar:
_anyCalendarExistsInSameSourceOfType:withAllKnownCalendars:passingTest:
prohibitsScheduling
setProhibitsScheduling:
setSharedOwnerURL:
isSyncedHolidayCalendar
canModifySuggestedEventCalendar
dictionaryWithExternalRepresentationData:
migrationVersionFromDictionary:
setMigrationVersion:inDictionary:
externalRepresentationDataWithDictionary:
initWithBytesNoCopy:length:freeWhenDone:
setCanBeShared:
setCanBePublished:
setReminderSource:
initWithAccountError:userInfo:
augmentSyncErrorUserInfo:for:
predicateForCalendarItemsOfType:inCalendar:
shareeWithEKSharee:forCalendar:
ownerForEKCalendar:
filteredSetUsingPredicate:
addAlarms:
removeAlarms:
matchesOneOfMyEmails:
urlMatchesOneOfMyEmails:
currentProcessIsFirstPartyCalendarApp
assignColorForNewCalendarIfNeeded
exportDataWithOptions:
reportSharedCalendarInviteAsJunkForCalendarWithID:accountID:queue:completionBlock:
rowIDsForCalendars:
calendarWithEventStore:
reorderBetweenEarlier:later:
setCGColor:
setAllowsContentModifications:
setIsDefaultSchedulingCalendar:
isInbox
setInbox:
isNotificationsCollection
setNotificationsCollection:
setSubscribed:
isHidden
setHidden:
allowsDeletionOrPropertyModifications
isImmutableRaw
setImmutable:
isSubscribedCalendarJunk
setIsSubscribedCalendarJunk:
deletionWarningsMask
canMergeWithCalendar:
eligibleForDefaultSchedulingCalendar
setAllowsScheduling:
isSharingInvitation
setSharingInvitation:
setSharedOwnerAddress:
publishURL
setPublishURL:
canBePublished
canBeShared
setFacebookBirthdayCalendar:
isHolidayCalendar
setSyncedHolidayCalendar:
isHolidaySubscribedCalendar
setSubscribedHolidayCalendar:
setChinaHolidayCalendar:
setFamilyCalendar:
setMarkedUndeletable:
isMarkedImmutableSharees
setMarkedImmutableSharees:
isSuggestionsCalendar
isIgnoringEventAlerts
setIsIgnoringEventAlerts:
allowsIgnoringSharedEventChangeNotifications
isIgnoringSharedCalendarNotifications
setIsIgnoringSharedCalendarNotifications:
setIsAffectingAvailability:
migrationVersion
setMigrationVersion:
hasEvents
setAllowReminders:
setLastSyncError:userInfo:
lastSyncErrorUserInfo
calendarError
stripAlarms
setStripAlarms:
stripAttachments
setStripAttachments:
moveSubscribedCalendarToSource:
removeServerRefreshRelatedPropertiesForSelfAndAllEventsSaveAndCommitWithError:
addSharee:
removeSharee:
hasSharees
shareesAndOwner
selfIdentityAddress
setSelfIdentityAddress:
setOwnerIdentityAddress:
remove:
isManaged
exportData
setIsJunk:
_cachedJunkStatus
TQ,N,V_cachedJunkStatus
T@"EKSource",&,N
subscribed
TB,R,N,GisSubscribed
immutable
TB,R,N,GisImmutable
T^{CGColor=},N
_color
T^{CGColor=},R,N
alloc
_isCurrentUserForSharing
_UUID
T@"NSString",R,N,V_UUID
TB,R,N,V_isCurrentUserForSharing
dueDateTimeZone
dueDateAllDay
componentsInTimeZone:fromDate:
year
_adjustPersistedStartDateComponentsForNewTimeZone:
startDateComponentsRaw
startDateTimeZone
setStartDateTimeZone:
startDateAllDay
setStartDateAllDay:
setDueDate:
T@"NSTimeZone",R,N
initWithAbsoluteDate:
initWithRelativeOffset:
_setEmailAddress:
_setUrlWrapper:
_setType:
relativeOffsetRaw
setRelativeOffsetRaw:
initWithURL:readonly:
bundleWithPath:
authorizationStatusForBundle:
_currentAuthorizationStatus
areLocationsAllowedWithAuthorizationStatus:
areLocationsAvailable
areLocationsAllowed
areLocationsCurrentlyEnabled
defaultGeofencedReminderRadius
ownerUUID
defaultAlarm
setSnoozedAlarms:
addSnoozedAlarm:
removeSnoozedAlarm:
setIsSnoozed:
setBookmarkURL:
bookmarkURL
isTopographicallyEqualToAlarm:
soundName
setSoundName:
_soundName
TB,N,GisDefaultAlarm
T@"EKObject",R,N
T@"EKCalendarItem",R,N
T@"EKAlarm",&,N
T@"EKStructuredLocation",C,N
T@"NSString",C,N,V_soundName
extensionBundleIdentifier
extensionWithIdentifier:error:
initWithTitle:url:
initWithTitle:joinMethods:conferenceDetails:
setRequestCompletionBlock:
setUserInfo:
beginExtensionRequestWithOptions:inputItems:error:
conferenceURLHasAllowedScheme:
virtualConferenceForRoomType:completion:queue:
firstPhoneNumber
urlWithAllowedScheme
setJoinMethods:
setConferenceDetails:
serializationBlockTitle
setSerializationBlockTitle:
_joinMethods
_serializationBlockTitle
T@"NSArray",&,N,V_joinMethods
T@"NSString",&,N,V_conferenceDetails
T@"NSString",&,N,V_serializationBlockTitle
TQ,N,V_source
initWithTitle:identifier:extensionBundleIdentifier:
setRequestCancellationBlock:
setRequestInterruptionBlock:
beginExtensionRequestWithOptions:inputItems:completion:
extensionsWithMatchingAttributes:completion:
virtualConferenceRoomTypesWithCompletion:queue:
originatingExtensionIdentifier
_extensionBundleIdentifier
_originatingExtensionIdentifier
T@"NSString",R,N,V_originatingExtensionIdentifier
T@"NSString",R,N,V_title
T@"NSString",R,N,V_identifier
T@"NSString",R,N,V_extensionBundleIdentifier
setIsBroadcast:
isBroadcast
_isBroadcast
TB,N,V_isBroadcast
shareeWithName:url:
_urlForEmailAddress:andPhoneNumber:
initWithName:url:
initWithName:url:externalID:
shareeWithName:emailAddress:phoneNumber:
setShareeAccessLevel:
shareeAccessLevel
hasTel
stringRemovingTel
_ekShareeStatusFromCalShareeStatus:
_calShareeStatusFromEKShareeStatus:
_ekShareeAccessLevelFromCalShareeAccessLevel:
_calShareeAccessLevelFromEKShareeAccessLevel:
shareeWithName:emailAddress:
shareeWithName:phoneNumber:
shareeWithName:emailAddress:phoneNumber:externalID:
shareeWithUUID:name:emailAddress:phoneNumber:
statusEnumFromString:
statusStringFromEnum:
setSourceIdentifier:
preferredEventPrivateValueRaw
_calEventPrivacyLevelToEKPrivacyLevel:
_ekPrivacyLevelToCalEventPrivacyLevel:
setPreferredEventPrivateValueRaw:
strictestEventPrivateValueRaw
setStrictestEventPrivateValueRaw:
constraintsName
backwardsCompatibleConstraintsPathForName:
_setConstraintsNameWithoutValidation:
isAbsolutePath
constraintsURLForName:
flags2
setFlags2:
flag2:
setFlag2:value:
flag:
setFlag:value:
setDisabled:
remAccountObjectID
delegatedAccountOwnerStoreID
supportsCalendarCreation
_countCalendarItemsOfCalType:resultHandler:
symbolicColorForNewCalendarWithExistingSymbolicNames:
personaIdentifierForAccountIdentifier:
_ekOfficeHoursFromCalDAVOfficeHours:
fetchOfficeHoursForAccountWithID:queue:completionBlock:
_calDAVOfficeHoursFromEKOfficeHours:
setOfficeHours:forAccountWithID:queue:completionBlock:
_nsErrorFromSyncError:event:
sourceError
eventsWithErrorsPerSourceID
primaryLocalSourceID
clientCanModifySources
_validateClientCanModifySources:
_shouldCopyDefaultAlarmsFromLocalSource
setDefaultAlarmOffset:
setDefaultAllDayAlarmOffset:
isInMainWindow
isInSeparateWindow
_copyInitialDefaultAlarmSettingsIfNeeded
cachedExternalInfoData
propertyListWithData:options:format:error:
_convertTypeOfOwnerAddresses:toSet:
dataWithPropertyList:format:options:error:
setCachedExternalInfoData:
serverHost
serverPort
serverUsesSSL
setHost:
setPort:
setScheme:
cachedExternalInfo
externalInfoForKey:
managedConfigurationAccountAccess
sourceWithEventStore:
setSourceType:
setPreferredEventPrivateValue:
setStrictestEventPrivateValue:
constraintsDescriptionPath
setConstraintsDescriptionPath:
setConstraintsName:
constraintsDescriptionPathForUnitTesting
setConstraintsDescriptionPathForUnitTesting:
creatorBundleID
setCreatorBundleID:
creatorCodeSigningIdentity
setCreatorCodeSigningIdentity:
setOnlyCreatorCanModify:
setIsInMainWindow:
setIsInSeparateWindow:
doesSyncDefaultAlarmsToServer
setDoesSyncDefaultAlarmsToServer:
wasMigrated
setWasMigrated:
showsNotifications
setShowsNotifications:
setUsesSelfAttendee:
isEnabled
supportsAlarmAcknowledgedDate
setSupportsAlarmAcknowledgedDate:
setDelegatedAccountOwnerStoreID:
calendarWithExternalIdentifier:
removeCalendarItemsOlderThanDate:entityTypeMask:error:
readWriteCalendarsForEntityType:
supportsCalendarTaskCreation
countCalendarItemsWithResultHandler:
countCalendarItemsOfType:resultHandler:
displayOrderForNewCalendar
symbolicColorForNewCalendar
personaIdentifier
fetchOfficeHoursWithCompletion:onQueue:
setOfficeHours:withCompletion:onQueue:
sourceOrEventError
syncs
ownerName
setOwnerName:
isNestedLocalSource
wantsCommentPromptWhenDeclining
setCachedExternalInfo:
serverURL
preferredOwnerAddress
supportsFreebusy
supportsEventCalendarCreation
prefersSuggestingNewTimeViaEmail
supportsAttendeeEventForwarding
preferUsingEventOrganizerEmailWhenComposingMail
supportsAvailability
supportsTaskCalendarCreation
_supportsTaskCalendarCreation
_isFacebook
_snoozeAlarmRequiresDetach
T@"NSSet",R,N
T@"EKAvailabilityCache",R,N
TB,N,GisEnabled
TB,R,N,V_supportsTaskCalendarCreation
T@"EKSourceConstraints",R,N
T@"REMObjectID",R,N
T@"NSError",R,N
primaryLocalSource
TB,R,N,GisPrimaryLocalSource
nestedLocalSource
TB,R,N,GisNestedLocalSource
T@"NSNumber",C,N
TB,N,V_isFacebook
TB,N,V_snoozeAlarmRequiresDetach
T@"NSDictionary",&,N
T@"NSDictionary",R,C,N
T@"EKSyncError",&,N
inputItems
_allowedItemPayloadClasses
removeResourceChange:error:
eventID
_calendarName
_eventID
_createCount
_updateCount
_deleteCount
T@"NSString",&,N,V_calendarName
TB,N,V_allDay
T@"NSString",&,N,V_eventID
TI,N,V_changeType
T@"NSNumber",&,N,V_createCount
T@"NSNumber",&,N,V_updateCount
T@"NSNumber",&,N,V_deleteCount
setScheduleStatus:
colorChanged
orderChanged
_colorChanged
_orderChanged
TB,R,N,V_colorChanged
TB,R,N,V_orderChanged
locationOfInterest
mapItem
customLabel
countryCode
thoroughfare
locality
initWithType:customLabel:mapItemName:addressCountryCode:addressThoroughFare:addressLocality:
initWithPredictedLocationOfInterest:
mapItemName
addressCountryCode
addressThoroughfare
addressLocality
rtPredictedLocationOfInterest
_customLabel
_mapItemName
_addressCountryCode
_addressThoroughfare
_addressLocality
_rtPredictedLocationOfInterest
T@"RTPredictedLocationOfInterest",R,N,V_rtPredictedLocationOfInterest
Tq,R,N,V_type
T@"NSString",R,C,N,V_customLabel
T@"NSString",R,C,N,V_mapItemName
T@"NSString",R,C,N,V_addressCountryCode
T@"NSString",R,C,N,V_addressThoroughfare
T@"NSString",R,C,N,V_addressLocality
_travelTimeWithStartCoordinate:endCoordinate:arrivalDate:withRouteType:completionBlock:
findCoordinatesForLocation:completionBlock:
isCurrentLocation
travelTimeFrom:to:arrivalDate:withRouteTypes:withCompletionBlock:
travelTimeFrom:to:arrivalDate:withRouteType:withCompletionBlock:
authorizationStatusForBundleIdentifier:
preciseLocationAuthorizedForBundleIdentifier:
mapItemForCurrentLocation
placemark
addressDictionary
initWithCoordinate:addressDictionary:
initWithPlacemark:
setDestination:
setArrivalDate:
initWithRequest:
expectedTravelTime
setStart:
setEnd:
setDuration:
setRoute:
_updateLocation:withMapItem:forRoute:withCompletionBlock:
calculateETAWithCompletionHandler:
postalAddressWithAddressBookDictionaryRepresentation:
stringFromPostalAddress:style:
setPlacemark:
placemarkForLocation:withCompletionBlock:
placemarkForAddress:withCompletionBlock:
geocodeAddressString:completionHandler:
confidence
initWithLatitude:longitude:
fetchLocationsOfInterestAssociatedToIdentifier:withHandler:
defaultManager
geocodeAddress:withCompletionBlock:
estimateGeolocationFromHistoricDevicePositionAtLocation:withCompletionBlock:
controlCharacterSet
invert
whitespaceAndNewlineCharacterSet
formUnionWithCharacterSet:
componentsSeparatedByCharactersInSet:
postalAddress
formattedAddressString
setGeoLocation:
region
locationWithPlacemark:
_stringByStrippingControlCharactersFromString:
_handle
placemarkWithGEOMapItem:
_place
sharedService
handleForMapItem:
_clearGeoLocationCache
radiusRaw
setRadiusRaw:
stringByReplacingOccurrencesOfString:withString:
stringByRemovingPercentEncoding
isImprecise
setImprecise:
isEqualToData:
setRouteType:
localizedStringForLabel:
capitalizedString
contactType
contactIdentifierIsMe:
locationWithMapItem:
locationWithGEOMapItem:
displayLabelForContact:unlocalizedLabel:
cacheKey
geoURLString
_imprecise
_predictedLOI
imprecise
TB,N,GisImprecise,V_imprecise
T@"EKPredictedLocationOfInterest",&,N,V_predictedLOI
prediction
TB,R,N,GisPrediction
T@"CLLocation",&,N
entityID
initWithEntityType:rowID:databaseID:temporary:
scheme
host
characterAtIndex:
substringFromIndex:
pathComponents
decodeIntForKey:
decodeBoolForKey:
encodeInt:forKey:
encodeBool:forKey:
initWithEntityType:entityID:databaseID:generation:
entityName
EKObjectIDsFromData:databaseID:
EKObjectIDsFromData:range:databaseID:
bytes
objectIDWithEntityType:rowID:
objectIDWithURL:
CADObjectIDsFromEKObjectIDs:withGeneration:
EKObjectIDsFromCADObjectIDs:
initWithDictionaryRepresentation:
dictionaryRepresentation
_temporary
_entityType
_rowID
_databaseID
Ti,R,N,V_databaseID
T@"CADObjectID",R,N
_occurrenceCount
T@"NSDate",R,N,V_endDate
TQ,R,N,V_occurrenceCount
setHasNotes:
setHasRecurrenceRules:
setHasAttendees:
setSelfParticipantStatusRaw:
initWithEntityName:toMany:inversePropertyNames:ownsRelated:
inversePropertyIsApplicable
_entityName
_toMany
_ownsRelated
_inversePropertyNames
_inversePropertyIsApplicable
T@?,C,N,V_inversePropertyIsApplicable
decodeObjectOfClasses:forKey:
initWithUUID:
getResourceValue:forKey:error:
setAutoArchived:
_copyFileAtURLToTemporaryDirectory:
setURLForPendingFileCopy:
localURL
startAccessingSecurityScopedResource
stopAccessingSecurityScopedResource
URLByAppendingPathComponent:
URLByAppendingPathExtension:
pathExtension
createTempDestinationURLWithExtension:
copyItemAtURL:toURL:error:
URLForPendingFileCopy
fileName
isBinary
setIsBinary:
initWithFilepath:
contentType
autoArchived
localURLForArchivedData
urlOnDisk
markCopiedFileAsDownloaded
compareFileNames:
T@"NSNumber",&,N
T@"NSString",R,&
_urlForMapItemHandles:options:
_locationStringForStructuredLocation:withTitle:
_urlForLocation:address:label:options:
CalContainsSubstring:
eventForObjectID:occurrenceDate:checkValid:
geocodeLocationString:withCompletionBlock:
_mapItemFromHandle:completionHandler:
mapsURLForLocation:onEvent:hasMapItemLaunchOptionFromTimeToLeaveNotification:
geocodeEventIfNeeded:
availabilityChanged
privacyLevelChanged
travelTimeChanged
travelStartLocationChanged
originalItemID
_availabilityChanged
_privacyLevelChanged
_travelTimeChanged
_travelStartLocationChanged
_originalItemID
TB,R,N,V_availabilityChanged
TB,R,N,V_privacyLevelChanged
TB,R,N,V_travelTimeChanged
TB,R,N,V_travelStartLocationChanged
T@"EKObjectID",R,N,V_originalItemID
initWithEventStore:limitedToSource:visibilityChangedCallback:queue:activate:
_defaultQueue
visibilityChangedNotificationName
visibilityChangedCallback
initWithNotificationName:callback:queue:
setActive:
notificationListener
_calendarsThatAreVisible:filteredByIdentity:
limitedToSource
_deselectedCalendarIdentifiers
calendarsWithIdentifiers:
unselectedCalendarsForFocusModeInEventStore:
T@"NSArray",R,C,N
initWithEventStore:visibilityChangedCallback:queue:
initWithEventStore:limitedToSource:visibilityChangedCallback:queue:
visibleCalendars
invisibleCalendars
visibleCalendarsForAllIdentities
invisibleCalendarsForAllIdentities
initWithEventStore:visibilityChangedCallback:
initWithEventStore:limitedToSource:visibilityChangedCallback:
_active
_limitedToSource
_visibilityChangedCallback
_notificationListener
T@?,R,N,V_visibilityChangedCallback
T@"CalDarwinNotificationListener",R,N,V_notificationListener
TB,V_active
T@"EKSource",R,N,V_limitedToSource
createAttachment
setUrlOnDisk:
contentTypeFromServer
setContentTypeFromServer:
_urlOnDisk
_contentTypeFromServer
T@"NSURL",&,N,V_urlOnDisk
T@"NSString",&,N,V_contentTypeFromServer
weakEventStore
unsafeRawPointer
_unsafeRawPointer
_weakEventStore
T^v,R,N
initWithOptions:path:
initWithEKOptions:path:changeTrackingClientId:enablePropertyModificationLogging:allowDelegateSources:allowedSourceIdentifiers:
initWithEKOptions:path:sources:
initWithEKOptions:path:changeTrackingClientId:enablePropertyModificationLogging:allowDelegateSources:
initWithOptions:path:allowDelegateSources:
ekEventStoreInitOptionsFromCalDatabaseInitOptions:
initWithEKOptions:path:conainerProvider:changeTrackingClientId:enablePropertyModificationLogging:allowDelegateSources:allowedSourceIdentifiers:
processInfo
processName
setValidator:
timestampForNow
_accessStatusChanged
calDatabaseInitOptionsFromEKEventStoreInitOptions:
setDatabaseInitOptions:
setChangeTrackingClientId:
setEnablePropertyModificationLogging:
setDatabaseDirectory:
setCalendarDataContainerProvider:
setAllowDelegateSources:
setAllowedSourceIdentifiers:
hashTableWithOptions:
_updateDefaultDelayForThrottleEventStoreChangedNotifications
_postEventStoreChangedNotificationWithTags:context:
_throttleDelayForEventStoreChangedNotificationWithTags:context:
initWithQueue:andBlock:throttle:
_handleExternalDatabaseChangedNotificationAsynchronously:
eventStoreChangedDistributedNotificationName
showDeclinedEventsChanged:
_requestAccessForEntityType:
currentProcessIsCalendarDaemon
currentProcessIsDataAccess
currentProcessHasContactsUIEntitlement
_skipTCCAccessCheck
authorizationStatusForEntityType:
requestAccessToEntityType:completion:
requestAccessToEntityType:testing:completion:
setDenyAccessToEvents:
setDenyAccessToReminders:
databaseDirectory
allowDelegateSources
currentProcessHasBirthdayModificationEntitlement
setSourceAccountManagement:withBundleID:
setManagement:
setManagementBundleIdentifier:
setUnitTesting:
setSpotlightTesting:
setPrivacyClientIdentity:
sequenceToken
sequenceForDatabaseID:
_handleExternalDatabaseChangeNotification:synchronously:
_databaseChangedExternally:processSynchronously:
_defaultCalendarChangedExternally
_defaultAlarmChangedExternally
postNotificationName:object:
databaseInitOptions
_postEventStoreChangedNotificationWithChangeType:changedObjectIDs:forceImmediate:
_processExternalChangesWithLatestTimestamp:changedObjectIDsData:changesWereSyncStatusOnly:forceImmediateNotification:
setRestoreGenerationChangedAndGetPreviousValue:
_resetAndNotifyAfterDatabaseRestoreGenerationChanged
database
_invalidCADObjectIDs:
_cacheDeletedEventIdentifierIfNeededForObject:
_removeCachedCalendarWithCADID:
_clearCachedSources
_clearCachedConstraintsForSourceWithCADObjectID:
_unregisterObject:
_detachObject:
objectsForKeys:notFoundMarker:
_clearCachedCalendars
_cacheCalendarWithCADObjectID:withDefaultLoadedPropertyValues:forKeys:
_contextForNotificationWithChangeType:changedObjectIDs:
updateTagsAndExecuteBlock:withContext:
_defaultDelayForThrottledNotificationsWithInitializationOptions:
_throttleDelayForEventStoreChangedNotificationWithLastFiredTime:delay:
calendarSourcesAndDefaultsQueue
setRestoreGenerationChanged:
currentProcessHasTestingEntitlement
currentProcessIsPreferences
currentProcessIsAutomator
objectWithObjectID:
stampedCopyWithGeneration:
_cacheSourceWithCADObjectID:withDefaultLoadedPropertyValues:forKeys:
_loadSourcesIfNeeded
_sourceWithID:
publicObjectWithFetchedObjectID:
_clearAllCaches
_localSourceWithEnableIfNeeded:
_loadCalendarsIfNeeded
_calendar:supportsEntityType:
restoreGeneration
shouldSaveCalendarAsEventCalendar:
_saveCalendar:error:
shouldSaveCalendarAsReminderCalendar:
commitWithRollbackForNewClients:
canModifyCalendarDatabase
saveSource:commit:error:
rollbackObjectsWithIdentifiers:
_removeCalendar:commit:error:
predicateForEventsWithAttendeesInCalendar:
doEvents:haveOccurrencesAfterDate:
predicateForScheduleAgentClientEventsInCalendar:
eventWithIdentifier:
calendarItemWithIdentifier:
rangeOfString:
_eventWithEventIdentifier:
eventWithRecurrenceIdentifier:
_apiExpectedEventForEvent:
validatedNonDeletedPersistentObjectWithObjectID:
validatedNonDeletedPublicObjectWithObjectID:
_eventWithURI:checkValid:
_parseURI:expectedScheme:identifier:options:
closestCachedOccurrenceToDate:forEventObjectID:
eventForUID:occurrenceDate:checkValid:
initWithEntityType:entityID:
eventWithUniqueId:occurrenceDate:
_entityWrappersForEventUUIDs:inCalendars:propertiesToLoad:
_saveEvent:span:commit:error:
_isRegisteredObject:
_removeEvent:span:commit:error:
setInvitationStatus:forEvents:error:
initWithContentsOfFile:
_importEventsWithExternalIDs:fromICSData:intoCalendarsWithIDs:options:batchSize:
ICSDataForCalendarItems:options:
parseVCSData:
children
countForObject:
calendarWithCADID:
defaultCalendarForNewEventsInDelegateSource:
setDefaultCalendar:forNewEventsInDelegateSource:
eventsPendingChangesPath
_saveDraftOfEvent:toDirectory:
_saveDraftOfEvent:toDirectory:withVersion:
fileExistsAtPath:isDirectory:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
_draftPathForEventWithOccurrenceID:draftDirectory:
writeToFile:options:error:
_loadDraftOfEventWithOccurrenceID:fromDirectory:
_loadDraftOfEventWithOccurrenceID:fromDirectory:withVersion:
_deleteDraft:
_deleteDraftOfEventWithOccurrenceID:fromDirectory:
removeItemAtPath:error:
saveReminder:commit:error:
removeReminder:commit:error:
calendarObjectIDsForPredicate:
initWithExternalIdentifier:entityType:
setCalendars:
_calendarItemsMatchingPredicate:
_apiExpectedEventsForEvents:
calendarItemsWithExternalIdentifier:inCalendars:
_calendarItemsWithExternalIdentifier:inCalendars:entityTypes:
closestCachedOccurrenceToDate:forEventObjectID:prefersForwardSearch:
sharedCalendarInvitationsForEntityTypes:
_populateCalendarsByIdentifierIfNeeded
_eventCalendarWithIdentifier:
CalMap:
numberWithUnsignedChar:
recordId
confirmEventByRecordId:withCompletion:
acceptSuggestedEvent:placeOnCalendar:
saveEvent:span:error:
confirmSuggestedEvent:
removeEvent:span:error:
rejectEventByRecordId:withCompletion:
fetchingSharedCalendarInvitationsDisallowed
setFetchingSharedCalendarInvitationsDisallowed:
respondToSharedCalendarInvite:forCalendarWithID:accountID:queue:completionBlock:
removeResourceChanges:error:
resourceChangesForEntityTypes:
eventNotificationsAfterDate:
eventNotificationsAfterDate:filteredByShowsNotificationsFlag:earliestExpiringNotification:
eventNotificationsAfterDate:excludingUncheckedCalendars:filteredByShowsNotificationsFlag:earliestExpiringNotification:
initWithTimeIntervalSinceReferenceDate:
eventNotificationCountExpanded:
eventNotificationCountForSource:excludingDelegateSources:filteredByShowsNotificationsFlag:excludeObjectIDs:expanded:
removeInviteReplyNotifications:error:
updateFolderListForAccountID:andDataclasses:isUserRequested:
_shouldRefreshSource:
_refreshDASource:isUserRequested:
refreshSourcesIfNecessary:
_refreshFolderListForSource:isUserRequested:
refreshFolderListsIfNecessary:
_registerObjectImmediate:
makeObjectsPerformSelector:withObject:
classForEntityName:
_addFetchedObjectWithID:
weakObjectsHashTable
_clearPendingChangesForObjectsWithOwner:
_filteredObjectsWithIdentifiers:fromObjects:
CalFilterUsingBlock:
_forgetRegisteredObjects
_commitObjectsWithIdentifiers:error:
_markObjectsWithIdentifiersAsCommitted:
_clearEventsNeedingGeocodingWithCommittedObjects:
_isConfirmedSuggestedEvent:uniqueKey:
deleteEventByRecordId:withCompletion:
_iMIPScheduledEvent:
shouldSendEmailForEvent:removedAttendees:
initWithEvent:andAttendees:
shouldSendEmailForEvent:withDiff:
initWithEvent:withDiff:
_removeCachedCalendarFromSource:
_fetchAndClearEventsNeedingGeocoding:withCommittedObjects:
sendEmail
_filteredArrayWithIdentifiers:fromObjects:
_fetchProperties:forObjects:
_validateEventPredicate:
predicateForEventsWithStartDate:endDate:calendars:prefetchHint:exclusionOptions:
_addDaysSpannedByEvent:toCountedSet:inRange:withNSCalendar:
fetchEventsMatchingPredicate:resultHandler:
earlierDate:
enumerateDatesStartingAfterDate:matchingComponents:options:usingBlock:
nextEventWithCalendars:exclusionOptions:
_nextEventWithFetchBlock:steps:
initWithEntityType:entityID:databaseID:
predicateWithStartDate:endDate:timeZone:calendars:loadDefaultProperties:
predicateWithStartDate:endDate:timeZone:eventUUID:calendars:
setExcludeTimedEvents:
setExcludeAllDayEvents:
setExcludeDeclined:
setExcludeProposed:
setExcludeDeclinedUnlessProposed:
initWithTimeZone:startDate:endDate:title:location:notes:participants:limit:
predicate
predicateWithLimit:
predicateWithCalendarIDs:
travelEligibleEventsInCalendars:startDate:endDate:
predicateForPotentialTravelEventsInCalendars:startDate:endDate:
initWithCalendarIDs:startDate:endDate:
setStartDateRestrictionThreshold:
predicateWithStartDate:title:calendars:
initWithSearchString:timeZone:
initWithSearchString:startDate:timeZone:
predicateForAllSuggestedEvents
initWithOpaqueKey:
initWithExtractionGroupIdentifier:
predicateForEventsWithStartDate:endDate:calendars:
initWithCalendarIDs:startDate:endDate:contacts:
initWithEntityType:filters:calendar:
initWithProperty:comparison:integerValue:
initWithProperty:comparison:stringValue:
initWithEntityType:filters:source:
initWithProperty:comparison:dateValue:
initWithFilters:operation:
initWithPredicate:limitWithStartDate:endDate:mustStartInInterval:
initWithStartDate:endDate:calendarIDs:
initWithURL:limit:
registerForDetailedChangeTrackingInSource:error:
_processChangedObjectIDsWithErrorCode:changesTruncated:latestToken:changeData:resultHandler:
fetchChangedObjectIDs:
consumeAllChangesUpToToken:
CADToken
constraintsCacheQueue
_fetchConstraintsForSourceWithCADObjectID:
set_cachedConstraints:
getBytes:length:
notificationCollectionCacheQueue
_cachedNotificationCollections
_fetchPersistentNotificationCollectionForSourceWithCADObjectID:
set_cachedNotificationCollections:
beginCalDAVServerSimulationWithHostname:
endCalDAVServerSimulationWithHostname:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
initWithURL:
URLByDeletingLastPathComponent
reminderStoreContainerTokenProvider
setReminderStoreContainerTokenProvider:
T@?,C
restoreGenerationChanged
setFetchingSharedCalendarInvitationsDisallowedAndGetPreviousValue:
initWithSources:
initWithOptions:path:changeTrackingClientId:enablePropertyModificationLogging:allowDelegateSources:
databasePath
setSourceAccountManagement:
_setIsUnitTesting:
_setIsSpotlightTesting:
_isUnitTesting
_simulateDaemonCrashForUnitTests
changesSinceSequenceToken:completion:
handleExternalDatabaseChangeNotification:
sourcesEnabledForEntityType:
_deletableSources
getSubscribedCalendarsSourceCreateIfNeededWithError:
delegateSources
delegateSourcesForSource:
parentSourceForDelegateSource:
fetchGrantedDelegatesForSource:results:
updateGrantedDelegate:action:source:completion:
addExchangeDelegateWithName:emailAddress:toSource:completion:
removeExchangeDelegate:completion:
localSourceEnableIfNeeded
localBirthdayCalendarSource
sourceWithExternalID:
removeSource:commit:error:
hideCalendarsFromNotificationCenter:error:
_deletableCalendars
readWriteCalendarCountForEntityType:
deleteCalendar:forEntityType:error:
eventsWithIdentifiers:
eventWithUniqueIdentifier:
eventWithExternalURI:
_eventOccurrenceWithURI:
eventForUID:occurrenceDate:
eventForObjectID:occurrenceDate:
eventWithUUID:occurrenceDate:
eventWithUUID:isInCalendars:
allEventsWithUniqueId:occurrenceDate:
setInvitationStatus:forEvent:error:
importICS:intoCalendar:options:
importEventsWithExternalIDs:fromICSData:intoCalendars:options:batchSize:
ICSDataForCalendarItems:preventLineFolding:
copyCGColorForNewCalendar
defaultLocalCalendar
acquireDefaultCalendarForNewEvents
setDefaultCalendarForNewEvents:
acquireDefaultCalendarForNewReminders
saveDraftOfEvent:
loadDraftOfEventWithOccurrenceID:
deleteDraftOfEventWithOccurrenceID:
reminderWithExternalURI:
calendarItemsWithUniqueIdentifier:inCalendar:
calendarItemsWithExternalIdentifier:
remindersWithExternalIdentifier:inCalendars:
predicateForRemindersInCalendars:preloadProperties:
eventWithUUID:
calendarWithUniqueID:
calendarWithExternalID:
calendarWithExternalURI:
uniqueIdentifiersForAllObjectsWithChangesRelatedToObjects:
syncErrorCount
occurrenceCacheGetOccurrencesForCalendars:onDay:
occurrenceCacheGetOccurrenceCountsForCalendars:
rebuildOccurrenceCache
birthdayCalendarEnabled
setBirthdayCalendarEnabled:
suggestedEventCalendar
insertSuggestedEventCalendar
removeSuggestedEventCalendar
acceptSuggestedEvent:
deleteSuggestedEvent:
naturalLanguageSuggestedEventCalendar
saveNotification:commit:error:
saveNotificationCollection:commit:error:
respondToSharedCalendarInvitation:withStatus:
markResourceChangeAlertedAndSave:error:
removeResourceChangesForCalendarItem:error:
eventNotifications
eventNotificationCount
eventNotificationCountForSource:excludingDelegateSources:filteredByShowsNotificationsFlag:excludeObjectIDs:
acknowledgeNotifications:error:
inboxRepliedSectionItems
attachmentWithUUID:
attachmentUUIDWithExternalID:inSource:
saveAttachment:commit:error:
refreshSourcesIfNecessary
refreshSource:userRequested:
_reregisterObject:oldID:
commitObjects:error:
objectsHaveChangesToCommit:
eventObjectIDsMatchingPredicate:
fetchObjectsMatchingPredicate:completion:
objectsMatchingPredicate:
fetchEventCountsInRange:inCalendars:exclusionOptions:completion:
cancelFetchRequest:
nextEventWithCalendarIdentifiers:exclusionOptions:
alarmWithUUID:
alarmWithExternalID:
alarmOccurrencesBetweenStartDate:endDate:inCalendars:completion:
predicateForEventsWithStartDate:endDate:uniqueID:calendars:
predicateForAssistantEventSearchWithTimeZone:startDate:endDate:title:location:notes:participants:calendars:limit:
predicateForNotifiableEvents
predicateForNotificationCenterVisibleEvents
predicateForUnacknowledgedEvents
predicateForUnalertedEvents
predicateForUpcomingEventsWithLimit:
predicateForMasterEventsInCalendars:
hasImmediatelyEligibleTravelEvents
predicateForUpNextEventsInCalendars:startDate:endDate:startDateRestrictionThreshold:
predicateForEventsWithStartDate:title:source:
predicateForNaturalLanguageSuggestedEventsWithSearchString:startDate:
predicateForEventsCreatedFromSuggestion
predicateForEventCreatedFromSuggestionWithOpaqueKey:
predicateForEventsCreatedFromSuggestionWithExtractionGroupIdentifier:
predicateForEventsWithStartDate:endDate:calendars:matchingContacts:
predicateForMasterEventsWithExternalTrackingStatusInCalendar:
predicateForCalendarItemsOfType:withUniqueIdentifier:inCalendar:
predicateForCalendarItemsOfType:withUniqueIdentifier:inSource:
predicateForCalendarItemsOfType:withExternalID:inCalendar:
predicateForCalendarItemsOfType:withExternalID:inSource:
predicateForMasterEventsWithStartDate:title:inCalendar:
predicateForEventsInSubscribedCalendar:
predicateForMasterEventsWithOccurrencesWithStartDate:endDate:inCalendar:
predicateForMasterEventsWithInvitationsAndOccurrencesAfter:inCalendar:
predicateForNonrecurringEventsWithStartDate:endDate:calendars:
timeToLeaveLocationAuthorizationStatus
predicateForEventsWithConferenceURL:limit:
registerForDetailedChangeTracking:
unregisterForDetailedChangeTracking:
fetchChangedObjectIDsSinceToken:resultHandler:
changedObjectIDsSinceToken:resultHandler:
markChangedObjectIDsConsumedUpToToken:
markIndividualChangesConsumed:error:
clearSuperfluousChanges
setCachedDefaultAlarmOffsetsToNSNotFound
purgeChangelog
cacheValidationStatusForAddress:status:
addressValidationStatus:
pushSpotlightUpdatesForCalendarItemUUIDs:
waitForSpotlightUpdates
notificationCollectionForSource:
fetchStorageUsage
setCachedEKSourceConstraintObject:forKey:
postSyntheticRouteHypothesis:forEventWithExternalURL:
endCalDAVServerSimulation:
backupDatabaseToDestination:withFormat:error:
restoreDatabaseFromBackup:withFormat:error:
setDefaultCalendarForNewReminders:
predicateForPreloadedIncompleteRemindersWithDueDate:calendars:sortOrder:preloadProperties:
predicateForPreloadedIncompleteRemindersWithDueDate:calendars:sortOrder:preloadProperties:maxResults:
predicateForPreloadedCompletedRemindersWithDueDate:calendars:sortOrder:preloadProperties:
reminderObjectIDsMatchingPredicate:
predicateForIncompleteRemindersAndRemindersCompletedAfter:inCalendar:
predicateForRemindersWithTitle:listTitle:limitToCompletedOrIncomplete:completed:dueAfter:dueBefore:searchTerm:sortOrder:maxResults:
insertedObjects
setInsertedObjects:
deletedObjects
setDeletedObjects:
updatedObjects
setUpdatedObjects:
objectsPendingSave
setObjectsPendingSave:
setDatabase:
lastDatabaseNotificationTimestamp
setLastDatabaseNotificationTimestamp:
registeredQueue
unsavedChangesQueue
dbChangedQueue
registeredObjects
setRegisteredObjects:
inboxRepliedSectionHasContent
defaultTimedAlarm
defaultAllDayAlarm
siriSuggestionsTimedAlarmOffset
siriSuggestionsAllDayAlarmOffset
setSkipModificationValidation:
_birthdaySourceID
_defaultCalendarsForNewEventsIDBySourceID
_suggestedEventCalendarID
_naturalLanguageSuggestedEventCalendarID
_subscribedCalendarsSourceID
_calendarsByIdentifier
_cachedValidatedAddresses
_objectsPendingCommit
_eventsNeedsGeocoding
_defaultTimedAlarmOffset
_defaultAllDayAlarmOffset
_allowsBirthdayCalendarModifications
_showDeclinedEventsNumber
_hasAccessToEvents
_hasAccessToReminders
_accessDetermined
_reminderSourceMapLock
_isIgnoringExternalChanges
_shouldNotifySyncStatusOnlyChanges
_flagsLock
_notificationAccumulatingQueue
_defaultDelayForThrottledNotifications
_lastFiredEventStoreChangedNotificationTime
_lastFiredNonSyncOnlyEventStoreChangedNotificationTime
_deletedEventUniqueIdentifiersCache
_lastSequenceToken
_inboxRepliedSectionHasContent
_skipModificationValidation
_insertedObjects
_objectsPendingSave
_database
_lastDatabaseNotificationTimestamp
_calendarSourcesAndDefaultsQueue
_registeredQueue
_unsavedChangesQueue
_dbChangedQueue
_constraintsCacheQueue
_notificationCollectionCacheQueue
__cachedConstraints
__cachedNotificationCollections
_reminderSourceIDToEventSourceIDMapping
_eventSourceIDToReminderSourceIDMapping
_registeredObjects
_defaultTimedAlarm
_defaultAllDayAlarm
_siriSuggestionsTimedAlarmOffset
_siriSuggestionsAllDayAlarmOffset
T@"NSHashTable",&,N,V_insertedObjects
T@"NSMutableSet",&,N,V_deletedObjects
T@"NSMutableSet",&,N,V_updatedObjects
T@"NSMutableSet",&,N,V_objectsPendingSave
T@"EKDaemonConnection",&,N,V_database
T@"CADInMemoryChangeTimestamp",&,N,V_lastDatabaseNotificationTimestamp
T@"NSObject<OS_dispatch_queue>",R,N,V_calendarSourcesAndDefaultsQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_registeredQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_unsavedChangesQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_dbChangedQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_constraintsCacheQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_notificationCollectionCacheQueue
T@"EKDataProtectionObserver",&,N,V_dataProtectionObserver
T@"NSMutableDictionary",&,N,V__cachedConstraints
T@"NSMutableDictionary",&,N,V__cachedNotificationCollections
T@"EKReminderStore",R,N,V_reminderStore
T@"NSDictionary",&,N,V_reminderSourceIDToEventSourceIDMapping
T@"NSDictionary",&,N,V_eventSourceIDToReminderSourceIDMapping
T^{os_unfair_lock_s=I},R,N
T@"NSMutableDictionary",&,N,V_registeredObjects
TB,R,N,V_inboxRepliedSectionHasContent
T@"NSString",R,C,N
T@"EKAlarm",R,N,V_defaultTimedAlarm
T@"EKAlarm",R,N,V_defaultAllDayAlarm
T@"NSNumber",R,N
T@"NSNumber",R,N,V_siriSuggestionsTimedAlarmOffset
T@"NSNumber",R,N,V_siriSuggestionsAllDayAlarmOffset
T@"EKDaemonConnection",R
TB,N,V_skipModificationValidation
_propertyWithFlagDidChange:
T@"EKCalendar",R,&,N
T@"EKCalendarItem",R,&,N
T@"NSURL",R,C,N
TI,R,N
calendarItemPropertyName
allDBSequenceMap
decodeDictionaryWithKeysOfClass:objectsOfClass:forKey:
initWithAllDBSequenceMap:
_sequenceNumbers
parentAppBundleIdentifierForExtensionBundleIdentifier:
applicationRecordForURL:completionHandler:
applicationRecordForURL:incomplete:
_applicationRecordFromAppLink:appLinkError:orCustomScheme:
getAppLinkWithURL:completionHandler:
setRecord:
record
targetApplicationRecord
initWithURL:error:
bundleRecord
isWebBrowser
initWithBundleIdentifier:error:
containingBundleRecord
isTUConversationLink:
validURL
_findExtensionIdentifierForURL:completionHandler:
_validURLForConferenceURL:previousURLs:completion:
waitingCompletionHandlers
setWaitingCompletionHandlers:
setReplacementForURLs:
replacementForURLs
generateNewValidURLForOriginalURL:
setValidURL:
conferenceImageSize
virtualConference:likelyCameFromRoomTypes:completionHandler:
synchronousAppTitleOnlyForURL:incomplete:
validURLForConferenceURL:completion:
_findRoomTypeForURL:queue:completionHandler:
_record
T@"LSApplicationRecord",&,V_record
finishWithURL:error:
_validURL
_replacementForURLs
_waitingCompletionHandlers
T@"NSURL",&,N,V_validURL
T@"NSMutableSet",&,N,V_replacementForURLs
T@"NSMutableArray",&,N,V_waitingCompletionHandlers
initWithName:emailAddress:address:isCurrentUser:
organizerWithName:emailAddress:address:isCurrentUser:
T@"NSString",&,D,N
_conflictedParticipants
T@"NSArray",&,N,V_conflictedParticipants
_setTimeOrLocationAlarm:
_setTimeAndLocationAlarms:
trigger
_timeAlarm
timeInterval
_locationAlarm
arrayByAddingObject:
modifiedStructuredLocation
_remStructuredLocation
triggersFromAbsoluteDate:relativeOffset:timeValuesRelevant:structuredLocation:proximity:
initWithDateComponents:
initWithTimeInterval:
ekAlarmProximityToEKAlarmProximity:
initWithStructuredLocation:proximity:
triggers
addAlarmWithTrigger:
semanticIdentifierFromDateComponents:
_effectiveAlarm
remAlarmProximityToEKAlarmProximity:
initWithAlarms:inStore:
T@"EKFrozenReminderStructuredLocation",R
initWithName:emailAddress:address:
initWithEmailAddress:name:
initWithAddress:name:
lastModified
icsMethod
iCalendarDocumentWithMethod:
emailsFromAttendees:
emailSubject
setMethod:
setX_calendarserver_access:
initWithYear:month:day:hour:minute:second:timeZone:
setDtstamp:
attendee
setAttendee:
myEmailAddress
URLForMail:
myShortDisplayName
setCn:
setRsvp:
sequence
setSequence:
setX_wr_rsvpneeded:
emailBody
emailAttachmentName
attachmentData
T@"EKEvent",&,V_event
localizedLongDate
localizedShortTime
_attachmentData
localizedStringWithValidatedFormat:validFormatSpecifiers:error:
initWithCalendarError:userInfo:
initWithCalendarItemError:userInfo:
T@"REMAccount",R,N
credentialsWithUsername:password:
username
password
_username
_password
T@"NSString",R,N,V_username
T@"NSString",R,N,V_password
_reminderSource
T@"EKFrozenReminderSource",&,V_reminderSource
initWithConference:range:
_conference
_range
T{_NSRange=QQ},R,N,V_range
T@"EKVirtualConference",R,N,V_conference
_ekVirtualConferenceFromCalVirtualConference:
blockTitle
_calJoinMethodsFromEKJoinMethods:
_calSourceFromEKSource:
initWithTitle:joinMethods:conferenceDetails:source:isWritable:
_ekJoinMethodsFromCalJoinMethods:
_ekSourceFromCalSource:
initWithTitle:URL:isBroadcast:
_calJoinMethodFromEKJoinMethod:
_ekJoinMethodFromCalJoinMethod:
ekDeserializationResultFromCalDeserializationResult:
calVirtualConferenceFromEKVirtualConference:
serializeConference:serializationBlockTitle:
setIsAbsolute:
_isAbsolute
_isDefaultAlarm
_relativeOffset
_absoluteDate
T@"NSNumber",&,N,V_relativeOffset
T@"NSDate",C,N,V_absoluteDate
TB,N,V_isAbsolute
TB,N,V_isDefaultAlarm
_updateSpecifier
_clearArrays
_parseSpecifierIfNeeded
_appendDaysOfTheWeek:toSpecifier:
_appendIndexList:toSpecifier:propertyKey:
_parseDaysOfWeek:range:
_parseIndexList:range:
stringWithCharacters:length:
_specifier
_dirty
_parsed
owningEventInEventStore:
T@"NSDate",R,N,V_date
bundleWithIdentifier:
CalAutoCommentPrefix
base64EncodedDataWithOptions:
setTotalOccurrencesInSeries:
setTotalConflictsInSeries:
setConflictPeriodForSeries:
setConflictingDates:
setConflictingEvents:
setNeedsActionEvents:
setTotalConflictingEvents:
setTotalNeedsActionEvents:
totalConflictsInSeries
totalOccurrencesInSeries
_dateRangeToScanForConflictsForEvent:dateForNow:
_maxRangeLengthForRule:
dateRangeToScanForConflictsForEvent:
calendarIdentifiersToScanForConflictsForEvent:
initWithConflictingDates:conflictingEvents:needsActionEvents:totalOccurrencesInSeries:conflictPeriodForSeries:
conflictingDates
conflictingEvents
needsActionEvents
totalConflictingEvents
totalNeedsActionEvents
conflictPeriodForSeries
_conflictingDates
_conflictingEvents
_needsActionEvents
_totalOccurrencesInSeries
_totalConflictsInSeries
_totalConflictingEvents
_totalNeedsActionEvents
_conflictPeriodForSeries
T@"NSArray",&,V_conflictingDates
T@"NSArray",&,V_conflictingEvents
T@"NSArray",&,V_needsActionEvents
TQ,V_totalOccurrencesInSeries
TQ,V_totalConflictsInSeries
TQ,V_totalConflictingEvents
TQ,V_totalNeedsActionEvents
T@"CalDateRange",&,V_conflictPeriodForSeries
T@"INObject",C,D,N
locationName
geolocation
T@"CLPlacemark",C,D,N
locationAddress
initWithCode:userActivity:
setCode:
_code
Tq,N,V_code
setSpan:
_creationDate
_span
T@"NSDate",&,N,V_creationDate
T@"EKAvailabilitySpan",&,N,V_span
_updateStateForDisabledOrCollapsedItemWithUID:delegateID:state:withKey:withNotification:
_disabledOrCollapsedItemsForDelegateID:withKey:
disabledCalendarsForDelegateWithUID:
_keyForDelegateID:
removeObject:inRange:
_displayOrderForSourceWithIdentifier:key:
_updateDisplayOrderForSources:key:
calendarPreferences
sharedCalendarNotificationsDisabled
setSharedCalendarNotificationsDisabled:
invitationNotificationsDisabled
setInvitationNotificationsDisabled:
timeToLeaveEnabled
setTimeToLeaveEnabled:
updateCheckedStateForCalendarWithUID:delegateID:state:
checkedStateForCalendarWithUID:delegateID:
disabledCalendarsForMainWindow
updateExpandedStateForTopLevelNodeWithUID:state:
expandedStateForTopLevelNodeWithUID:
_checkedStateForDisabledOrCollapsedItemWithUID:delegateID:withKey:
displayOrderForLocalGroupWithSourceIdentifier:
updateDisplayOrderForLocalGroupsWithSourceIdentifiers:
displayOrderForAccounts
displayOrderForAccountWithSourceIdentifier:
updateDisplayOrderForAccountsWithSourceIdentifiers:
calPreferences
setCalPreferences:
_calPreferences
T@"CalPreferences",&,V_calPreferences
T@"NSMutableArray",&,N,V_conflictedParticipants
currentProcessHasBooleanEntitlement:
get_suggestedLocationsTestMode
_mockLocationForEvent:
predictedLocationOfInterestForEventTitle:eventLocation:calendarIdentifier:timeout:error:
geoMapItemHandle
horizontalUncertainty
resolveMapItemLocallyFromHandle:completionHandler:
userInteractionWithPredictedLocationOfInterest:interaction:feedback:
ticketForReverseGeocodeCoordinate:shiftLocationsIfNeeded:traits:
geoAddress
structuredAddress
submitWithHandler:networkActivity:
enumerateKeysAndObjectsWithOptions:usingBlock:
predicateWithFormat:
userInteractionWithPredictedLocationOfInterest:interaction:
calendarWithRandomUUID
T@"EKPersistentSource",&,D,N
colorDisplayOnly
TB,D,N,GisColorDisplayOnly
T@"NSSet",C,D,N
publishedURL
published
TB,D,N,GisPublished
@16@0:8
v24@0:8@16
v16@0:8
@"NSSet"
#16@0:8
@40@0:8q16Q24@32
q20@0:8i16
i24@0:8q16
@24@0:8q16
@24@0:8Q16
@32@0:8@16B24B28
q24@0:8@16
@24@0:8@16
@32@0:8@16@24
@24@0:8^{_NSZone=}16
@88@0:8q16q24@32@40@48@56@64@72@80
@40@0:8q16q24@32
i16@0:8
v20@0:8i16
q16@0:8
v24@0:8q16
v24@0:8Q16
Q16@0:8
B16@0:8
B24@0:8@16
@24@0:8B16B20
@28@0:8@16B24
B40@0:8@16@24@32
@"EKRecurrenceHelper"
@36@0:8{?=IIb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1}16
v20@0:8B16
{?="maxAlarmsAllowed"I"maxRecurrencesAllowed"I"supportsAlarmTriggerIntervals"b1"supportsAlarmTriggerDates"b1"supportsAlarmsTriggeringAfterStartDate"b1"snoozeAlarmRequiresDetach"b1"organizerCanSeeAttendeeStatuses"b1"inviteesCanSeeAttendeeStatuses"b1"statusesAreAccurate"b1"supportsIncomingInvitations"b1"supportsOutgoingInvitations"b1"requiresOutgoingInvitationsInDefaultCalendar"b1"supportsInvitationModifications"b1"supportsEventForwarding"b1"supportsResponseComments"b1"deliverySourceOrExternalIDRequiredForResponse"b1"proposedStatusRequiredForResponse"b1"declinedStatusChangeRequiresNoPendingStatus"b1"eventDurationConstrainedToRecurrenceInterval"b1"alarmTriggerIntervalConstrainedToRecurrenceInterval_UNUSED"b1"occurrencesMustOccurOnSeparateDays"b1"futureStartDateLimitedToOccurrenceCacheBounds"b1"supportsRecurrencesOnDetachedEvents"b1"recurrencesShouldPinToMonthDays"b1"requiresAttendeeSearchInSingleAccount"b1"mustAcknowledgeMasterEvent"b1"canSetAvailability"b1"eventAvailabilityLimited"b1"requiresMSFormattedUID"b1"shouldCancelDeletedEvents"b1"shouldDeclineDeletedInvitations"b1"supportsStructuredLocations"b1"supportsReminderActions"b1"supportsReminderLocations"b1"supportsAlarmProximity"b1"allowsCalendarAddDeleteModify"b1"allowsTasks"b1"allowsEvents"b1"supportsURLField"b1"supportsAllDayDueDates"b1"supportsSharedCalendars"b1"isFacebook"b1"recurrenceSeriesMustIncludeMoreThanFirstOccurrence"b1"supportsPrivateEvents"b1"prohibitsPrivateEventsWithAttendees"b1"supportsAvailabilityRequests"b1"supportsIgnoringEventsInAvailabilityRequests"b1"supportsLocationDirectorySearches"b1"requiresSamePrivacyLevelAcrossRecurrenceSeries"b1"supportsInboxAvailability"b1"prohibitsMultipleMonthsInYearlyRecurrence"b1"prohibitsMultipleDaysInMonthlyRecurrence"b1"prohibitsYearlyRecurrenceInterval"b1"requiresOccurrencesConformToRecurrenceRule"b1"prohibitsDetachmentOnCommentChange"b1"allowsProposeNewTime"b1"prohibitsICSImport"b1"supportsAutoGeocodingStructuredLocations"b1"supportsJunkReporting"b1"supportsPhoneNumbers"b1"attendeesUseDeletedByOrganizerStatus"b1"prohibitsSlicingEventsWithAttendees"b1"supportsSubscribedCalendars"b1"supportsAttachments"b1"supportsDelegation"b1"supportsDelegateEnumeration"b1"supportsFloatingTimeZone"b1"prohibitsUsingEventOrganizerEmailWhenComposingMail"b1"supportsRecurrenceSplit"b1"requiresOpeningAttachmentAsLink"b1"shouldUseDeleteAndAddInsteadOfMoveBetweenCalendars"b1"supportsInvitationModificationsWithoutNotification"b1"supportsManagedSubscribedCalendars"b1"supportsSubscriptionMirroring"b1"supportsParticipantRoles"b1"supportsPush"b1"supportsTravelTime"b1"requiresSeparateFilesForAllAttachments"b1"occurrenceOrderEnforcedAfterDetachment"b1"allowsPrivateEventAccessByDelegate"b1}
Q24@0:8q16
B32@0:8@16^@24
@32@0:8@16^@24
@"REMListChangeItem"
v32@0:8@16@24
B32@0:8@16@24
q24@0:8q16
v32@0:8d16Q24
@48@0:8@16@24@32@40
B48@0:8@16@24@32^@40
@64@0:8@16@24@32@40@?48@?56
@40@0:8@16@24@32
v48@0:8@16@24@32@?40
v40@0:8@16@?24@32
@"NSString"
@"NSObject<OS_dispatch_queue>"
@"NSMutableDictionary"
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@"NSPredicate"16@24
v36@0:8@16@24B32
@48@0:8@16@24@32@?40
v28@0:8@16B24
i44@0:8I16@20@28@36
@"EKEventStore"
@"NSNumber"
@24@0:8^@16
@"NSURL"
@44@0:8i16@20@28@36
@36@0:8i16@20@28
q28@0:8@16i24
@"NSDate"
@"EKCalendarNotification"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"EKObjectID"
B52@0:8@16@24@32B40@44
B56@0:8@16@24@32B40B44@48
B48@0:8@16@24@32@40
B40@0:8@16#24#32
@24@0:8@"<EKProtocolObject>"16
@"EKChangeSet"16@0:8
@"EKObject"16@0:8
@"EKPersistentObject"16@0:8
@"EKPersistentObject"24@0:8@"EKEventStore"16
B24@0:8@"NSString"16
@"EKObject"24@0:8@"EKEventStore"16
v32@0:8@16@"NSString"24
@24@0:8@"NSString"16
B24@0:8@"<EKFrozenMeltedPair>"16
B32@0:8@"<EKFrozenMeltedPair>"16@"NSSet"24
@"EKObjectID"16@0:8
@"CADGenerationStampedObjectID"16@0:8
@"NSDictionary"16@0:8
@"NSSet"16@0:8
B28@0:8@16B24
B44@0:8@16@24B32@36
@44@0:8@?16@24@32B40
B20@0:8B16
v24@0:8@?16
@"EKPersistentObject"
@"EKChangeSet"
@"NSDictionary"
@"EKObjectValidationContext"
@56@0:8@16@24@32@40q48
@68@0:8@16@24@32@40@48q56B64
@64@0:8@16@24@32@40@48q56
@76@0:8@16@24@32@40@48@56q64B72
@72@0:8@16@24@32@40@48@56q64
B44@0:8@16@24@32B40
@52@0:8@16@24@32@40B48
@56@0:8@16@24@32@40@48
@60@0:8@16@24@32@40@48B56
v32@0:8@16@?24
v32@0:8@"CADDatabaseInitializationOptions"16@?<v@?ii>24
v24@0:8@?<v@?iBB>16
v24@0:8@?<v@?i>16
v40@0:8@16@24@?32
v60@0:8@16@24@32Q40i48@?52
v40@0:8@16Q24@?32
v28@0:8B16@?20
v24@0:8@?<v@?i@"NSString">16
v32@0:8@"CADObjectID"16@?<v@?i>24
v24@0:8@?<v@?iB@"CADSequenceToken"@"NSDictionary">16
v40@0:8@"NSArray"16@"CADObjectID"24@?<v@?iB@"CADSequenceToken"@"NSArray">32
v32@0:8@"CADSequenceToken"16@?<v@?i>24
v32@0:8@"NSDictionary"16@?<v@?i>24
v24@0:8@?<v@?i@"CADSequenceToken">16
v32@0:8@"CADSequenceToken"16@?<v@?i@"NSDictionary"@"CADSequenceToken">24
v32@0:8@"CADInMemoryChangeTimestamp"16@?<v@?i@"NSDictionary"@"CADInMemoryChangeTimestamp"B>24
v60@0:8@"NSArray"16@"NSArray"24@"NSArray"32Q40i48@?<v@?i@"NSArray">52
v40@0:8@"NSArray"16Q24@?<v@?i@"NSData">32
v40@0:8@"CADObjectID"16Q24@?<v@?i@"NSData">32
v28@0:8B16@?<v@?i>20
v48@0:8@"NSArray"16@"NSDictionary"24@"CADInMemoryChangeTimestamp"32@?<v@?i@"NSDictionary"@"NSDictionary"@"CADInMemoryChangeTimestamp"B>40
v24@0:8@?<v@?iB>16
v24@0:8@?<v@?iQ>16
v40@0:8@"CADObjectID"16@"CADObjectID"24@?<v@?i@"CADObjectID">32
v28@0:8B16@?<v@?i@"NSNumber">20
v32@0:8@"CADObjectID"16@?<v@?iB>24
v32@0:8@"NSArray"16@?<v@?i@"NSArray">24
v40@0:8@"CADObjectID"16@"NSArray"24@?<v@?i@"NSArray">32
v40@0:8@"NSArray"16@"NSArray"24@?<v@?i@"NSArray">32
v40@0:8@"CADObjectID"16@"NSString"24@?<v@?i@"NSObject<NSSecureCoding>">32
v40@0:8@"CADObjectID"16@"NSString"24@?<v@?i@"NSString">32
v40@0:8@"CADObjectID"16@"NSString"24@?<v@?i@"NSNumber">32
v40@0:8@"CADObjectID"16@"NSString"24@?<v@?i@"NSDate">32
v40@0:8@"CADObjectID"16@"NSString"24@?<v@?i@"NSData">32
v40@0:8@"CADObjectID"16@"NSString"24@?<v@?i@"NSSecurityScopedURLWrapper">32
v40@0:8@"CADObjectID"16@"NSString"24@?<v@?i@"CADObjectID">32
v40@0:8@"CADObjectID"16@"NSString"24@?<v@?i@"NSSet">32
v36@0:8@16B24@?28
v36@0:8i16@20@?28
v44@0:8@16i24@28@?36
v48@0:8@16q24@32@?40
v32@0:8@"NSArray"16@?<v@?i@"NSArray"@"NSArray">24
v28@0:8B16@?<v@?i@"CADObjectID">20
v24@0:8@?<v@?i@"CADObjectID">16
v32@0:8@"CADObjectID"16@?<v@?i@"NSData">24
v32@0:8@"CADObjectID"16@?<v@?i@"CADObjectID">24
v36@0:8@"CADObjectID"16B24@?<v@?iB>28
v36@0:8i16@"CADObjectID"20@?<v@?iQ>28
v44@0:8@"NSDate"16i24@"CADObjectID"28@?<v@?i>36
v32@0:8@"CADObjectID"16@?<v@?i@"NSArray">24
v48@0:8@"CalGrantedDelegate"16q24@"CADObjectID"32@?<v@?i>40
v48@0:8@"NSString"16@"NSString"24@"CADObjectID"32@?<v@?i@"CADObjectID"q>40
v44@0:8@16i24i28B32@?36
v20@0:8I16
v48@0:8@16@24Q32@?40
v32@0:8@"NSString"16@?<v@?i@"CADObjectID">24
v48@0:8@"NSArray"16@"NSArray"24@"NSArray"32@?<v@?i@"NSArray">40
v40@0:8@"NSString"16@"CADObjectID"24@?<v@?i@"NSArray">32
v44@0:8@"NSPredicate"16i24i28B32@?<v@?i@"NSArray">36
v40@0:8@"NSData"16@"CADObjectID"24@?<v@?i>32
v48@0:8@"CADObjectID"16@"NSDate"24Q32@?<v@?i@"NSData">40
v44@0:8@16@24B32@?36
v44@0:8@16@24i32@?36
v60@0:8@16@24@32B40@44@?52
v40@0:8@"CADObjectID"16@"CADObjectID"24@?<v@?i>32
v32@0:8@"NSString"16@?<v@?i@"NSArray">24
v40@0:8@"NSArray"16@"NSDate"24@?<v@?i@"NSArray">32
v44@0:8@"CADObjectID"16@"NSDate"24B32@?<v@?i@"NSDate">36
v44@0:8@"NSString"16@"NSArray"24i32@?<v@?i>36
v60@0:8@"CADObjectID"16@"NSDate"24@"NSDate"32B40@"NSTimeZone"44@?<v@?iB>52
v32@0:8@"NSString"16@?<v@?iB>24
v40@0:8@"NSString"16@"CADObjectID"24@?<v@?i@"NSString">32
v48@0:8@"NSDate"16@"NSDate"24@"NSArray"32@?<v@?i@"NSArray">40
v40@0:8@16B24B28@?32
v44@0:8@16B24B28B32@?36
v24@0:8@?<v@?i@"NSArray">16
v40@0:8@"NSDate"16B24B28@?<v@?i@"NSArray"@"NSArray"@"NSArray"@"NSDate">32
v44@0:8@"NSString"16B24B28B32@?<v@?iQ@"NSArray">36
v24@0:8@?<v@?i@"NSArray"@"NSArray">16
v36@0:8i16@"NSArray"20@?<v@?i>28
v32@0:8@"NSArray"16@?<v@?i>24
v40@0:8@"CADRouteHypothesis"16@"NSString"24@?<v@?i>32
v32@0:8B16B20@?24
v32@0:8B16B20@?<v@?iQ>24
v24@0:8@?<v@?i@"NSDictionary">16
v44@0:8@"NSString"16@"NSSecurityScopedURLWrapper"24B32@?<v@?i>36
v32@0:8@"NSSecurityScopedURLWrapper"16@?<v@?i>24
v44@0:8@"NSString"16@"NSSecurityScopedURLWrapper"24B32@?<v@?ii>36
v32@0:8@"NSSecurityScopedURLWrapper"16@?<v@?ii>24
v36@0:8I16q20@?28
v28@0:8I16@?20
v36@0:8I16q20@?<v@?i>28
v28@0:8I16@?<v@?i>20
v24@0:8@?<v@?ii>16
v32@0:8@16I24B28
v32@0:8@"NSArray"16I24B28
v24@0:8@"NSArray"16
I24@0:8@16
@32@0:8I16:20B28
@"<CADInterface>"
@"NSXPCConnection"
@"<EKDaemonConnectionDelegate>"
@"CADDatabaseInitializationOptions"
v24@0:8@"NSExtensionContext"16
d16@0:8
v24@0:8d16
@"CalPreferences"
@"EKReminderStore"
#24@0:8#16
@"EKFrozenReminderObject"24@0:8@"NSString"16
B40@0:8@16@24^@32
B24@0:8^@16
B32@0:8^@16^@24
@32@0:8@16@?24
@?28@0:8@16B24
@"NSArray"
@"NSMutableSet"
@"NSMutableArray"
@"REMStore"
@72@0:8@16@24@32@40@48@56@64
v24@0:8^{CGColor=}16
^{CGColor=}16@0:8
^{CGColor=}
@"NSTimeZone"
@"EKStructuredLocation"
@"EKCalendar"
@"EKSuggestedEventInfo"
@"NSData"
v24@0:8@"EKAutocompleter"16
v24@0:8@"CNAutocompleteStore"16
B40@0:8@16@24@?32
@?24@0:8@16
v32@0:8@"<CNCancelable>"16@"NSArray"24
v32@0:8@"<CNCancelable>"16@"NSError"24
v24@0:8@"<CNCancelable>"16
B40@0:8@"<CNCancelable>"16@"CNAutocompleteFetchRequest"24@?<v@?@"NSArray"@"NSError">32
@"NSDictionary"32@0:8@"<CNCancelable>"16@"NSArray"24
@?<q@?@@>24@0:8@"<CNCancelable>"16
@32@0:8@16q24
B24@0:8@?16
@"<EKAutocompleterDelegate>"
@"EKSource"
@"<CNCancelable>"
@"CNAutocompleteStore"
@"EKDirectorySearchOperation"
@"NSPointerArray"
@"EKParticipant"
@"<EKIdentityProtocol>"
v40@0:8@16@24@32
@68@0:8@16@24Q32B40@44@52@?60
@"EKEvent"
@"<EKAutocompleteSearchPasteboardItemProvider>"
@"<CalSpotlightQueryPendingSearchProtocol>"
@36@0:8@16q24i32
v56@0:8q16@24@32@40@48
v40@0:8@16@24q32
v48@0:8@16@24@32q40
@40@0:8@16@24^B32
@"EKObject"
v36@0:8q16@24B32
@"NSDate"16@0:8
@40@0:8@16@24q32
@"<EKAccountRefresherDelegate>"
@36@0:8@16B24@28
B56@0:8@16@24@32@40@48
I16@0:8
v32@0:8@16d24
v32@0:8@?16@24
v32@0:8@16^B24
B24@0:8{?=II}16
v28@0:8@?16B24
@?16@0:8
@20@0:8B16
@"NSObject<OS_dispatch_source>"
v24@0:8B16B20
v32@0:8^@16^@24
Q24@0:8@16
Q32@0:8@16@24
@60@0:8@16@24@32@40B48@52
q32@0:8@16@24
@24@0:8@?16
@"NSOperationQueue"
^{__SecTrust=}16@0:8
B48@0:8@16@24^@32^@40
@"<EKSyncStatusChangeListenerDelegate>"
B24@0:8q16
B64@0:8@16@24@32@40@48@56
@"NSURL"16@0:8
@"NSPredicate"16@0:8
@"CNContact"16@0:8
r^v24@0:8^v16
@"EKCalendarItem"
I24@0:8q16
@40@0:8@16q24q32
B32@0:8q16q24
@"SGEvent"
@40@0:8@16@24^@32
@52@0:8B16@20@28@36@44
@40@0:8@16@24@?32
@32@0:8@16#24
@"EKDirectorySearchQuery"
@"NSError"
@32@0:8@16d24
@"EKRecurrenceRule"
@"EKCalendarEventInvitationNotificationAttendee"
@"CalLocation"
@40@0:8@16@24Q32
@48@0:8@16@24@32Q40
@36@0:8@16@24B32
i24@0:8@16
@48@0:8@16@24@32^@40
B28@0:8i16Q20
@"NSMapTable"
@?24@0:8@?16
v44@0:8@?16B24q28@36
v40@0:8@"NSArray"16@"NSArray"24@"NSArray"32
@48@0:8B16@20@28@36B44
v48@0:8@16@24@32@40
@"<EKEventStoreProvider>"
@"CalLimitingQueue"
@52@0:8B16q20@28@36@44
@"EKEventStore"16@0:8
@"EKTimedEventStorePurger"
v64@0:8^@16^@24^@32^@40^@48^@56
r*24@0:8B16B20
B40@0:8@16^@24^@32
@40@0:8@16@24B32B36
v56@0:8@16@24@32@40@?48
@28@0:8@16i24
v40@0:8@"NSArray"16@"NSSet"24@"NSMutableArray"32
@40@0:8#16@24@32
v28@0:8i16Q20
v36@0:8@?16B24@?28
@"NSPredicate"
@"NSDateComponents"
@32@0:8q16@24
@32@0:8q16@?24
@40@0:8q16@24@?32
@"PCPersistentTimer"
@"NSTimer"
@"CADInMemoryChangeTimestamp"
@40@0:8@16^@24^@32
@"NSData"32@0:8@"EKEvent"16^@24
@"EKEvent"40@0:8@"NSData"16^@24^@32
@"NSString"32@0:8@"NSData"16^@24
v48@0:8@16@24@32B40B44
@20@0:8i16
@28@0:8i16@20
@40@0:8q16@24@32
@48@0:8q16@24@32@40
@56@0:8@16Q24@32@40@48
@"<CalDateProvider>"
@48@0:8@16d24d32d40
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@104@0:8i16@20d28@36d44@52d60@68B76Q80@88q96
v28@0:8@16i24
v40@0:8@16@24B32B36
v44@0:8@16@24@32B40
v28@0:8i16@20
d24@0:8@16
v32@0:8d16@24
v28@0:8B16@20
{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}
@"NSHashTable"
@"EKDirectoryGroup"
@"EKDirectorySearchResultSet"
@"EKRecurrenceEnd"
q36@0:8q16Q24B32
q32@0:8q16Q24
B32@0:8q16^@24
v56@0:8@16q24@32@40@48
q24@0:8Q16
@32@0:8@16Q24
@48@0:8@16Q24Q32^@40
@52@0:8@16B24Q28Q36^@44
v32@0:8@16Q24
B20@0:8I16
v24@0:8B16I20
v40@0:8@16d24@32
v56@0:8@16@24@32@40@48
@36@0:8@16B24B28B32
B48@0:8{?=iccccd}16@32^@40
v40@0:8q16@24@32
@24@0:8^d16
B48@0:8@16@24q32^@40
B36@0:8@16@24B32
@"EKReadWriteLock"
@"EKCalendarDate"
@64@0:8@16@24@32@40@48@?56
@"EKAvailabilityCache"
@"CDBDataProtectionObserver"
v24@0:8I16B20
@"EKSerializableStructuredLocation"
@"EKSerializableParticipant"
@56@0:8@16@24@32@40@?48
v44@0:8@16@?24@32B40
B32@0:8#16@?24
v40@0:8@16@24#32
@52@0:8@16B24@28@36@44
v44@0:8@16@24@?32B40
@"<EKDiagnosticsCollectionDelegate>"
@32@0:8q16q24
@56@0:8@16@24@32@?40@?48
@48@0:8@16Q24@32@40
@"CSSearchQuery"
@32@0:8Q16@24
B40@0:8^i16^i24^i32
B40@0:8Q16@24@?32
v32@0:8Q16@24
v24@0:8^@16
@24@0:8^{CGColor=}16
@24@0:8d16
B20@0:8i16
Q20@0:8i16
i24@0:8Q16
v24@0:8i16B20
B40@0:8@16Q24^@32
v32@0:8Q16@?24
v28@0:8i16@?20
v36@0:8B16@20@?28
@64@0:8q16@24@32@40@48@56
@"RTPredictedLocationOfInterest"
@"EKPredictedLocationOfInterest"
@24@0:8i16i20
@28@0:8i16i20i24
@44@0:8@16{_NSRange=QQ}24i40
@32@0:8i16i20i24B28
@40@0:8@16B24@28B36
@"NSArray"16@0:8
@40@0:8@16@?24@32
@48@0:8@16@24@?32@40
@52@0:8@16@24@?32@40B48
@"CalDarwinNotificationListener"
^v16@0:8
#24@0:8@16
B24@0:8Q16
d32@0:8Q16d24
@40@0:8Q16@24@32
@32@0:8i16@20B28
@48@0:8Q16@24@32B40B44
@56@0:8Q16@24@32B40B44@48
@64@0:8Q16@24@32@40B48B52@56
@44@0:8i16@20@28B36B40
v36@0:8Q16B24@?28
v28@0:8Q16B24
v36@0:8Q16@24B32
d32@0:8@16@24
B36@0:8@16B24^@28
B32@0:8@16Q24
B40@0:8@16q24^@32
B44@0:8@16q24B32^@36
B40@0:8Q16@24^@32
@52@0:8@16@24@32Q40i48
^{os_unfair_lock_s=I}16@0:8
@32@0:8d16@24
@36@0:8d16@24B32
@32@0:8B16B20^@24
@36@0:8@16B24^@28
@40@0:8@16B24B28^@32
Q20@0:8B16
Q24@0:8B16B20
Q40@0:8@16B24B28@32
Q44@0:8@16B24B28@32B40
v32@0:8^@16@24
v48@0:8@16@24q32@?40
@32@0:8@?16@24
@44@0:8@16@24@32B40
@56@0:8@16@24@32q40q48
@88@0:8@16@24@32@40@48@56@64@72q80
@48@0:8@16@24@32d40
q24@0:8^@16
q32@0:8@16^@24
v32@0:8q16@?24
v48@0:8i16B20@24@32@?40
@44@0:8@16@24i32@36
@52@0:8@16@24i32@36Q44
@76@0:8@16@24B32B36@40@48@56i64Q68
@"CADGenerationStampedObjectID"
{?="restoreGenerationChanged"b1"fetchingSharedCalendarInvitationsDisallowed"b1}
@"CalAccumulatingQueue"
@"NSCache"
@"EKSequenceToken"
@"EKDaemonConnection"
@"EKDataProtectionObserver"
@"EKAlarm"
@32@0:8@16^B24
@"LSApplicationRecord"
@52@0:8@16d24B32@36q44
@"REMAlarm"
@24@0:8r*16
@"EKFrozenReminderSource"
@40@0:8@16{_NSRange=QQ}24
{_NSRange=QQ}16@0:8
@"EKVirtualConference"
{_NSRange="location"Q"length"Q}
Q24@0:8Q16
v36@0:8@16@24S32
@40@0:8^{?=[64S]^{__CFString}^S*{?=qq}qq}16{?=qq}24
@48@0:8q16q24@32@40
@56@0:8@16@24@32Q40@48
@"CalDateRange"
@"EKAvailabilitySpan"
v52@0:8@16@24B32@36@44
@40@0:8@16^@24d32
 #&),/25
!$'*-0369<?BEHKNQe
hknqtwz}
P(~A
recurrenceEnd
v8@?0
Interval must be greater than 0
%@ <%p> RRULE %@
Encountered illegal value for EKRecurrenceFrequency
EKRecurrenceRule.m
Interval must be greater than or equal to 1
@8@?0
Invalid parameter not satisfying: %@
(int)firstDay <= EKWeekdaySaturday
dayOfTheWeek
DAILY
WEEKLY
MONTHLY
YEARLY
Encountered illegal value for  EKRecurrenceFrequency
yyyyMMdd
yyyyMMdd'T'HHmmss
yyyyMMdd'T'HHmmss'Z'
FREQ=%@
;INTERVAL=%lu
;UNTIL=%@
;COUNT=%lu
;BYMONTH=%@
;BYMONTHDAY=%@
;BYYEARDAY=%@
;BYWEEKNO=%@
;BYDAY=%@
;BYSETPOS=%@
;WKST=%@
unlocalizedTitle
colorStringRaw
displayOrder
UUID
source
@"NSString"8@?0
@"EKPersistentObject"8@?0
REMList
Class getREMListClass(void)_block_invoke
EKFrozenReminderCalendar.m
Unable to find class %s
void *ReminderKitLibrary(void)
REMColor
Class getREMColorClass(void)_block_invoke
Calendar
%@ <%p> {UUID = %@; displayName = %@; address = %@; firstName = %@; lastName = %@; status = %lu; accessLevel = %lu;}
-[CNContact predicateForContactMatchingEKParticipantWithName:emailAddress:URL:predicateDescription:]
startDateComponents
dueDateComponents
notes
URLString
lastModifiedDate
creationDate
completionDate
appLinkData
actionString
uniqueID
calendar
structuredLocationWithoutPrediction
allAlarmsSet
recurrenceRulesSet
priority
EKFrozenReminderReminder.m
frozen alarm is of the wrong class: %@
@"NSString"16@?0@"NSString"8
@"NSDate"8@?0
@"NSNumber"8@?0
REMReminder
Class getREMReminderClass(void)_block_invoke
REMUserActivity
Class getREMUserActivityClass(void)_block_invoke
REMReminderChangeItem
Class getREMReminderChangeItemClass(void)_block_invoke
Source
Sharee
Alarm
Notification
Error
%@ <%p> {title = %@; allowsModify = %s; color = %@; source = %@; sharees = %@}
EKFeatureSetDidChangeNotification
s+gaKNe68Gs3PfqKrZhi1w
eQd5mlz0BN0amTp/2ccMoA
ContinuityCapability
EKAvailabilityCacheError
%@-%@-processing
%@-%@-callback
accountID
sourceIsInvalid
sourceSupportsAvailabilityRequests
addressesToCachedSpanRanges
ignoredEventIDsToAddressBasedCaches
AvailabilityCacheMiss
AvailabilityCacheHit
B24@?0@"NSString"8@"NSDictionary"16
v16@?0@"NSDictionary"8
v16@?0@"NSError"8
v32@?0@"NSString"8@"NSArray"16^B24
v32@?0@8Q16^B24
(3-5)
(6-10)
(11-15)
(16-20)
(21-25)
(26-50)
(51-100)
(101-150)
(151-200)
(201+)
AvailabilityCacheRoundtripTimeInMilliseconds-%@
elapsedTime
CalendarItem
Store
EKOccurrenceCacheSearch.m
calendars != nil
searchTerm != nil
store != nil
callback != nil
v12@?0i8
CADObjectID
occurrenceDate
objectID
name
emailAddress
phoneNumber
participantRole
participantStatus
participantType
Name should not be nil.
Either url, phoneNumber or emailAddress should not be nil.
CalendarsExcludedFromNotifications
%@{type: %d, rowID: %d, date: %@}
EKObject.m
Cannot copy an object with changes from one event store to another
v32@?0@"NSString"8@16^B24
Error checking whether objects %@ exist: %@
v20@?0i8@"NSArray"12
@24@?0@"EKObject"8@"NSString"16
frozenObject
v16@?0@"EKObject"8
persistentObject
startDate
owner_id
role
status
email
%@ <%p> {frequency = %ld; interval = %ld; firstDayOfWeek = %ld; enddate = %@; count = %lu; specifier = %@}
ConnectionLock
ReplyLock
com.apple.calaccessd
v16@?0i8i12
EventKitClientDisconnectionQ
EKVirtualConferenceProviderErrorDomain
You have overridden beginRequestWithExtensionContext: on your subclass of EKVirtualConferenceProvider (%@) - this is not allowed
v24@?0@"NSArray"8@"NSError"16
v24@?0@"EKVirtualConferenceDescriptor"8@"NSError"16
com.apple.eventkit.debug.preference.notification.travelEngineThrottlePeriod
com.apple.eventkit.preference.notification.refiringReminderAlarmsEnabled
com.apple.eventkit.preference.notification.selectedCalendarIdentifiers
com.apple.eventkit.preference.notification.AlertInviteeDeclines
com.apple.eventkit.preference.notification.UnselectedCalendarIdentifiersForFocusMode
com.apple.mobilecal.preference.notification.selectedCalendarSyncHashesChanged
com.apple.eventkit.preference.notification.deselectedCalendarIdentifiers
com.apple.mobilecal.showdeclinedchanged
TravelEngineThrottlePeriod
refiringReminderAlarmsEnabled
useShortReminderSnoozeInterval
useShortReminderRefireInterval
alwaysSetArrivedAndSettledForReminders
LastConfirmedSplashScreenVersionViewed
privacyPaneBypass
LastDeselectedCalendars
DeselectedCalendarIdentifiersChanged
LastDeselectedCalendarSyncHashes
LastDeselectedCalendarSyncIdentifiers
LastViewedCalendars
UnselectedCalendarIdentifiersForFocusMode
EventKit
Shoji
ShowDeclinedEvents
InviteeDeclineAlerts
conferenceRoomTypeIdentifiersByMRU
calendar_id
old_calendar_id
external_id
old_external_id
summary
location_id
start_date
start_tz
end_date
end_tz
description
all_day
suppress_notification_for_changes
Reminders
com.apple.eventkit.EKReminderStore.queue
B24@?0@8@"NSDictionary"16
predicate is nil
predicate is not a reminder predicate created through EKEventStore
com.apple.eventkit.reminders.search
calendarItemIdentifier
REMStore
Class getREMStoreClass(void)_block_invoke
EKReminderStore.m
REMSaveRequest
Class getREMSaveRequestClass(void)_block_invoke
REMAccount
Class getREMAccountClass(void)_block_invoke
REMAlarm
Class getREMAlarmClass(void)_block_invoke
REMRecurrenceRule
Class getREMRecurrenceRuleClass(void)_block_invoke
REMStructuredLocation
Class getREMStructuredLocationClass(void)_block_invoke
NSErrorDomain getREMErrorDomain(void)
REMErrorDomain
title is empty
identifier is empty
url is empty
No URLs provided
TITLE=%@;
ADDRESS=%@;
%f:%f:%f
%f:%f
directorySearchQueue
B24@?0@"CNAutocompleteResult"8@"NSDictionary"16
v24@?0@"EKDirectorySearchResultSet"8@"NSError"16
@"NSArray"16@?0^@8
v16@?0@"EKDirectorySearchResultSet"8
CNAutocompleteStore
Class getCNAutocompleteStoreClass(void)_block_invoke
EKAutocompleter.m
void *ContactsAutocompleteLibrary(void)
CNAutocompleteFetchRequest
Class getCNAutocompleteFetchRequestClass(void)_block_invoke
CNAutocompleteNameComponents
Class getCNAutocompleteNameComponentsClass(void)_block_invoke
CNAutocompleteResult
Class getCNAutocompleteResultClass(void)_block_invoke
q24@?0@8@16
v24@?0@"NSString"8@"EKObject"16
[%@] opaqueKey: %@, uniqueKey: %@, extractionGroupIdentifier: %@, changedFields: %lu, changesAcknowledged: %d, timestamp: %f
v16@?0@"NSNotification"8
[%@] Display name: [%@], isEmail: [%@]
CRRecentContactsLibrary
CRAddressKindEmail
CRAddressKindPhoneNumber
CRRecentsDomainCalendar
title
dueDate
dueDateTimeZone
dueDateAllDay
hasAlarms
hasRecurrenceRules
recurrenceRules
com.apple.mobilecal.autocompletesearchcontroller.internalqueue
com.apple.mobilecal.autocompletesearchcontroller.eventkitqueue
EKAutocompleteSearch.m
searchWithString:completionHandler: called multiple times
com.apple.mobilecal
SuggestionsOriginBundleId
%@ <%p> {URLString = %@; fileName = %@; fileFormat = %@; fileSize = %lu; localRelativePath = %@; UUID = %@;}
remove
modify
B32@?0@8Q16^B24
EKDiff.m
One of these has to be non-nil
%@.%@
No object for comparison, %@ is entirely different
-------------------------
<weak relation: %@>
(null)
There is a difference for the multi-valued key: %@
%@: 
* %@
%@%@ <0x%x>
, %@:%@
Please use the appropriate designated initializer for this class.
EKAvailabilitySpan.m
startDate != nil
endDate != nil
'startDate' must not be after 'endDate'
[%@] startDate: [%@] endDate: [%@] type: [%@]
Unknown
Busy
Free
NoData
OutOfOffice
Tentative
Unavailable
mapKitHandle
latitude
longitude
radius
uniqueIdentifier
address
@"NSData"8@?0
EKFrozenReminderStructuredLocation.m
_float
%@ <%p>
 title = 
%@; 
 location = 
%@; 
 calendar = 
%@; 
 alarms = 
%@; 
 URL = 
%@; 
 lastModified = %@; 
 startTimeZone = 
%@; 
 endTimeZone = 
singleRecurrenceRule
Error exporting event to ICS: %@
v20@?0i8@"NSData"12
events
reminders
actionsState
X-APPLE-NO-ACTION
OUT-OF-DATE
DELEGATORS-COPY
DELEGATEES-COPY
v32@?0@"EKAlarm"8Q16^B24
EKCalendarItem.m
Can't snooze an alarm with location but no proximity.
Committed Value class is incorrect!
v16@?0@"EKCalendarItem"8
Original item class must match our class
date
DESCRIPTION
SEQUENCE
CREATED
SUMMARY
ATTACH
Attachment
Attachment %@
work
callback
B32@?0@"NSString"8@"EKPersistentObject"16@"EKPersistentObject"24
%@ <%p> {title = %@; address = %@; lat = %@; long = %@; abID = %@; radius = %@, routing = %@}
EKFrozenReminderObject.m
You must set skipsPersistentObjectCopy on change sets used by EKFrozenReminderObject.
value
<%@: %p>(externalID = %@, externalIDTag = %@, source = %@)
conferenceURLDetectedKey
parsedConferenceKey
junk
not junk
cachedJunkStatus
could be junk
parseResult
permit
not permit
FREQ=YEARLY
FREQ=YEARLY;INTERVAL=1
com.apple.calendar
store.log.travel.engine
store.log.travel.engine.throttle
calendar.source
externalTrackingStatus
uniqueId
externalID
externalFolderID
invitationStatus
endDate
originalItem.objectID.rowID
hasAttendees
availabilityRequests
processing
Reset
ConflictFound
SearchProgressed
B32@?0@"EKInviteeAlternativeTime"8Q16^B24
radar.18233777
B32@?0@"EKInviteeTimeSpan"8Q16^B24
q24@?0@"EKInviteeTimeSpan"8@"EKInviteeTimeSpan"16
v32@?0@"EKAvailabilitySpan"8Q16^B24
v32@?0@"EKInviteeTimeSpan"8Q16^B24
NSErrorPeerCertificateChainKey
v24@?0@"EKSource"8^B16
 <%@>
v16@?0@"CNContactStore"8
FIRST=%@;
LAST=%@;
<%@: %p>(name = %@)
EKCalendarSharedCalendarNotification.m
Invalid type for EKCalendarSharedCalendarNotification.
start
_cachedSpans
v32@?0@"EKAvailabilityCachedSpan"8Q16^B24
q24@?0@"EKAvailabilitySpan"8@"EKAvailabilitySpan"16
%@ <%p> {UUID = %@; displayName = %@; email = %@; phoneNumber = %@; firstName = %@, lastName = %@, status = %ld; role = %ld; type = %ld}
com.apple.EventKit.EKCalendarSuggestionNotificationQueue
SGSuggestionsService
-[EKCalendarSuggestionNotification updateSuggestedEventWithEventStore:]_block_invoke
no error returned
v24@?0@"SGEvent"8@"NSError"16
kDefaultAlarmSemanticIdentifier
ABSOLUTE=%f;
RELATIVE=%f;
EMAIL=%@;
URL=%@;
None
Enter
Leave
VehicleConnect
VehicleDisconnect
isExecuting
v20@?0@"NSError"8B16
v32@?0@"DAECalendarDirectorySearchResult"8Q16^B24
isFinished
In order to save a new notification, add it to a NotificationCollection, save, and commit the collection instead.
[%@] rowID: [%d] date: [%f]
v32@?0@"EKAttendee"8Q16^B24
v32@?0@"EKCalendarEventInvitationNotificationAttendee"8Q16^B24
calLocation
EKICSImportErrorDomain
com.apple.ical.ics
com.apple.ical.vcs
com.apple.ical.backup-package
ICSImport
com.apple.EventKit.ICSImporter
B24@?0@"NSDictionary"8^@16
B16@?0@"ICSUserAddress"8
@"NSString"16@?0@"ICSUserAddress"8
record
type
ROWID
sequence_number
v28@?0B8@"EKSequenceToken"12@"NSArray"20
v32@?0i8B12@"CADSequenceToken"16@"NSArray"24
delete
insert
update
[<%@: %p>: type=%@, row=%i, seq=%li, changeID=%li]
entityType must be implemented by an EKObjectChange inheriting class.
consumed_entity_class
consumed_entity_id
consumed_change_id
BirthdayEventsGenerationVersion
BirthdayEventsGenerationLastLocale
BirthdayEventsGenerationLastAttemptTimeResetKey
BirthdayEventsGenerationAttemptsToResetKey
EKBirthdayListener
v16@?0q8
@"EKEventStore"8@?0
Birthdays
v24@?0@"CNContact"8^B16
relative=%i
%@/%@
identifier
v24@?0@"EKEvent"8^B16
Location
%@ <%p> {triggerDate = %@; proximity = %ld; location = %@, type = %ld}
%@ <%p> {triggerInterval = %lf; proximity = %ld; location = %@, type = %ld}
count
frequencyRaw
interval
firstDayOfTheWeekRaw
specifier
REMRecurrenceEnd
Class getREMRecurrenceEndClass(void)_block_invoke
EKFrozenReminderRecurrenceRule.m
REMRecurrenceDayOfWeek
Class getREMRecurrenceDayOfWeekClass(void)_block_invoke
%Y%m%dT%H%M%SZ
%Y%m%dT%H%M%S
%Y%m%d
UID %@ is of unexpected size.
B32@?0@8@16^B24
singleValueChanges: %@ 
multiValueAdditions: %@ 
multiValueRemovals: %@ 
is new: %d is deleted: %d is saved: %d is modified: %d
is undeleted: %d
is undetached: %d
%@ <%p> {date = %@}
Adding nil Notification to notification collection.
Removing nil Notification from notification collection.
EKCalendarInviteReplyNotification.m
Invalid type for EKCalendarInviteReplyNotification.
EKPredicateSearch
Unknown entity type
Didn't recognize entity class %@
com.apple.eventkit.EKPredicateSearchCallback
v24@?0@"CADEntityWrapper"8@"NSMutableArray"16
v16@?0@"NSArray"8
EKReminderModifiedNotification
firstAlertDate
You must use [EKReminder reminderWithEventStore:] to create a reminder
/?&:$+,;=@
%@://%@/%@
%@ <%p> {title = %@; dueDate = %@; completionDate = %@; priority = %ld; calendarItemIdentifier = %@; alarms = %@}
@"EKPersistentObject"16@?0@"EKPersistentObject"8
event_id_tomb
EKNotificationsLoadedNotification
EKNotificationsChangedNotification
EKNotificationCountChangedNotification
EKNotificationCountChangedExternallyNotification
EKNotificationChangedNotificationsKey
com.apple.eventkit.notificationMonitor
notification
v16@?0@"EKTimedEventStorePurger"8
com.apple.eventkit.invitationmonitor
blacklistedNotificationQueue
v24@?0@"EKObjectID"8^B16
v32@?0@"EKCalendarNotificationReference"8Q16^B24
B24@?0@"EKCalendarNotificationReference"8@"NSDictionary"16
pending
no pending
v32@?0i8@"NSDictionary"12@"CADInMemoryChangeTimestamp"20B28
principalPath
displayName
preferredAddress
com.apple.eventkit.debug.preference.notification.availabilityFreshnessWindow
com.apple.eventkit.debug.preference.notification.saveGeocodedLocationsInTravelEngine
com.apple.eventkit.debug.preference.notification.overrideTravelAdvisoryHypothesis
com.apple.eventkit.debug.preference.notification.overriddenTravelAdvisoryHypothesisTransportType
com.apple.eventkit.debug.preference.notification.overriddenTravelAdvisoryHypothesisConservativeTravelTime
com.apple.eventkit.debug.preference.notification.overriddenTravelAdvisoryHypothesisEstimatedTravelTime
com.apple.eventkit.debug.preference.notification.overriddenTravelAdvisoryHypothesisAggressiveTravelTime
com.apple.eventkit.debug.preference.notification.overriddenTravelAdvisoryHypothesisSupportsLiveTraffic
com.apple.eventkit.debug.preference.notification.overriddenTravelAdvisoryHypothesisCurrentTrafficDensity
com.apple.eventkit.debug.preference.notification.overriddenTravelAdvisoryHypothesisRouteName
com.apple.eventkit.debug.preference.notification.overriddenTravelAdvisoryHypothesisTravelState
com.apple.eventkit.debug.preference.notification.preventMarkingTravelAdvisoryEntriesAsDismissed
com.apple.eventkit.debug.preference.notification.forceDisplayOfNewTravelAdvisoryHypotheses
com.apple.eventkit.debug.preference.notification.performAgendaEntryEqualityChecksInTravelEngine
com.apple.eventkit.debug.preference.notification.verifyIntegrityOfAvailabilityTimeSearchTimelines
com.apple.eventkit.debug.preference.notification.showDepartureDateForTransitTimeToLeave
com.apple.eventkit.debug.preference.notification.shouldBypassTravelEngineThrottle
com.apple.eventkit.debug.preference.notification.syntheticTravelAdvisoriesEnabled
availabilityFreshnessWindow
saveGeocodedLocationsInTravelEngine
overrideTravelAdvisoryHypothesis
overriddenTravelAdvisoryHypothesisTransportType
overriddenTravelAdvisoryHypothesisConservativeTravelTime
overriddenTravelAdvisoryHypothesisEstimatedTravelTime
overriddenTravelAdvisoryHypothesisAggressiveTravelTime
overriddenTravelAdvisoryHypothesisSupportsLiveTraffic
overriddenTravelAdvisoryHypothesisCurrentTrafficDensity
overriddenTravelAdvisoryHypothesisRouteName
overriddenTravelAdvisoryHypothesisTravelState
preventMarkingTravelAdvisoryEntriesAsDismissed
forceDisplayOfNewTravelAdvisoryHypotheses
performAgendaEntryEqualityChecksInTravelEngine
verifyIntegrityOfAvailabilityTimeSearchTimelines
showDepartureDateForTransitTimeToLeave
shouldBypassTravelEngineThrottle
syntheticTravelAdvisoriesEnabled
Version
Version mismatch. Archiver version: [%@]. Encoded Data Version: [%@].
Unable to unarchive version string.
Data
Unable to unarchive data.
Unable to encode data.
Unable to decode version string.
B32@?0@"EKEvent"8Q16^B24
com.apple.calendar.eventkit
EKPredicateExpanding
EKErrorDomain
EKCADErrorDomain
XPC error communicating with calaccessd: Invalid parameter
XPC error communicating with calaccessd: Internal error
XPC error communicating with calaccessd: Property not found
Object not found. It may have been deleted.
XPC error communicating with calaccessd: Invalid data type
XPC error communicating with calaccessd: Invalid operation
Access denied
XPC error communicating with calaccessd: Unknown IPC message
XPC error communicating with calaccessd: Unknown error
This operation is not supported on the current OS
XPC error communicating with calaccessd: Failed to rebuild occurrence cache
XPC error communicating with calaccessd: Missing client specifier
XPC error communicating with calaccessd: Connection not initialized
XPC error communicating with calaccessd: Data already exists
This process has too many EKEventStore instances. Use fewer event stores.
XPC error communicating with calaccessd: Data not accessible
The event cannot be edited.
No calendar has been set.
No start date has been set.
No end date has been set.
The start date must be before the end date.
An unexpected error occurred.
The calendar is read only.
That event does not belong to that event store.
Invites cannot be moved to another calendar.
The event is too far in the future.
The event is too long to repeat this often.
The event repeats before the alert occurs.
Another instance of this event occurs on this date.
An invalid span was specified.
A repeating reminder must have a due date.
Calendar does not match parent event
Calendar has no source
That calendar may not be moved to another account.
The privacy level field cannot be changed.
The repeat field cannot be changed.
Alarms cannot be changed.
Attendees cannot be changed.
That calendar can not be changed or deleted.
Locations with geo information are not supported by this account.
Actions are not supported by this account.
Locations for reminders are not supported by this account.
Proximity-based alarms are not supported by this account.
That account does not allow calendars to be added or removed.
That calendar does not allow events to be added.
That calendar does not allow reminders to be added.
That account does not support events.
That account does not support reminders.
You can't move events with attendees between accounts.
Priorities must be between %d and %d.
This is not a valid EKEntityType.
Choose another way to repeat this event or move it to another calendar.
The Suggested Event Calendar cannot be modified.
That calendar does not allow events to start outside of their recurrence patterns.
You can't move events with attachments between accounts.
A source must have a sourceIdentifier
A new attachment can only be created by adding to an event and saving the event
A reminder alarm should not contain emailAddress or urlString because these properties are unsupported
Cannot modify detachedItems directly
%@ <%p> {UUID = %@; displayName = %@; email = %@; phoneNumber = %@; firstName = %@; lastName = %@; isSelf = %d}
ApproachingDeparture
LeaveNow
RunningLate
%@ <%p> Date = %@
EventAction
ExceptionDate
SuggestedEventInfo
%@ <%p> 
 {title = %@; 
 calendar = %@; 
 alarms = %@; 
 URLString = %@; 
 lastModified = %@}
%@ <%p> {%@; 
 location = %@; 
 startLocation = %@; 
 startDate = %@; 
 endDate = %@; 
 allDay = %u; 
 timeZone = %@; 
 travelTime: %ld; 
 recurrences = %@; 
 attendees = %@}
EKChangedCalendar
EKChangedTitle
EKChangedLocation
EKChangedAllDay
EKChangedStartDate
EKChangedEndDate
EKChangedTimeZone
EKChangedEndTimeZone
EKChangedTravelTime
EKChangedRecurrenceRule
EKChangedAvailability
EKChangedPrivacy
EKChangedNotes
EKChangedAttendeeComment
EKChangedURL
EKChangedParticipationStatus
EKChangedAlternateTimeProposal
EKChangedJunkStatus
EKChangedResponseComment
EKChangedPriority
EKChangedSequence
EKChangedAlarmsAdded
EKChangedAlarmsRemoved
EKChangedAlarmsModified
EKChangedAttendeesAdded
EKChangedAttendeesRemoved
EKChangedAttendeesModified
EKChangedShareesAdded
EKChangedShareesRemoved
EKChangedShareesModified
EKChangedAttachmentsAdded
EKChangedAttachmentsRemoved
EKChangedAttachmentsModified
EKChangedCalendarColor
EKChangedCalendarTitle
EKObjectChangeSummarizer.m
Diff summary called on objects of different class
<%@: %p>(transportType = %@, conservativeDepartureDate = %@, conservativeTravelTime = %@, suggestedDepartureDate = %@, estimatedTravelTime = %@, aggressiveDepartureDate = %@, aggressiveTravelTime = %@, routeName = %@, supportsLiveTraffic = %@, currentTrafficDensity = %@, trafficDensityDescription = %@, travelState = %@)
transportType
conservativeDepartureDate
conservativeTravelTime
suggestedDepartureDate
estimatedTravelTime
aggressiveDepartureDate
aggressiveTravelTime
routeName
supportsLiveTraffic
currentTrafficDensity
trafficDensityDescription
travelState
AUTOMOBILE
TRANSIT
WALKING
BICYCLE
UNKNOWN_TRANSPORT_TYPE
FERRY
RIDESHARE
(unknown: %i)
NotTraveling
Traveling
TravelingSpecificallyToThisDestination
TravelingInDirectionOfThisDestination
TravelingAwayFromDestination
Arrived
(unknown: %lu)
event_id
+[EKPersistentObject relations] not implemented in subclass
Subclass %@ of EKPersistentObject did not implement +relations
EKPersistentObject.m
Cannot copy objects across different event stores backed by different databases
Trying to set the object ID on an object that has one!
Error checking whether object %@ exists: %@
v16@?0i8B12
Error loading default properties for object %@ from daemon: %@
'%@' is not a relation of '%@'
Trying to add an object as a related object for property %@ on %@, but it's not a relation or not to-many
Trying to remove an object as a related object for property %@ on %@, but it's not a relation or not to-many
Requested set of relation called %@ on a %@, but that doesn't exist.
Setting a to-many relation requires an NSSet
Setting a relation requires an EKPersistentObject
v20@?0i8@"NSNumber"12
@16@?0@"NSString"8
v20@?0i8@"NSDate"12
v20@?0i8@"NSString"12
v20@?0i8@"NSSecurityScopedURLWrapper"12
v20@?0i8@"CADObjectID"12
v20@?0i8@"NSSet"12
v32@?0@"EKObjectID"8@"NSDictionary"16^B24
Error loading properties for object %@ from daemon: %@
v16@?0@"EKPersistentObject"8
v32@?0@"NSString"8@"EKRelation"16^B24
    %@ = %@
%@ <%p> {loaded = %@; updated = %@}
v24@?0@"NSDictionary"8@"NSError"16
frequency
firstDayOfTheWeek
daysOfTheWeek
daysOfTheMonth
monthsOfTheYear
daysOfTheYear
weeksOfTheYear
setPositions
(%.4f, %.4f)
TravelingToDestination
TravelingTowardsDestination
Light
Medium
Heavy
ExtremelyHeavy
Unknown status
Not Determined
Restricted
Denied
Authorized Always
Authorized In Use
Event
Nil resource change passed.
EKEventModifiedNotification
EKEventNaturalLanguageSuggestedEventExpirationDate
EKEventSuggestedEventSavedFromSyncKey
You must use [EKEvent eventWithEventStore:] to create an event
Trying to initialize an EKEvent as a copy of an object that is not an EKEvent
Trying to initialize an EKEvent with a backing object that is not an EKPersistentEvent
Can't create EKEvent without persistent event
EKEventLocationPrediction
%@%@%@
recurrenceIdentifier
x-apple-calevent
x-apple-calevent://%@/%@?o=%lld
Private Event
birthdayTitle
Invalid pin mode: %d
%ld hours, %ld minutes
%ld minutes
addressbook://%@
NOT 
Prediction not attempted due to past timeouts
privacyLevelString
cachedTimeValuesCalendar
cachedStartOfDayForStartDate
cachedStartOfDayForEndDate
cachedDaysSpanned
cachedIsMultiDayTimedEvent
%@ <%p>
 %@; 
 location = 
%@; 
 structuredLocation = 
%@; 
 startDate = 
%@; 
 endDate = 
%@; 
 allDay = 
%u; 
 floating = 
%u; 
 recurrence = 
%@; 
 travelTime = 
%@; 
 startLocation = 
<%@ rowid=[%d] UUID=[%@] start-date=[%@]>
endLocation
Cannot undelete an event with the given span
Cannot undelete an event that is part of a recurring series and not detached
Cannot undetach an event with the given span
Cannot undetach an event that is not detached
Modified properties changed: YES. Old modified properties: %u
Modified properties changed: NO
B40@?0@"NSString"8@16@"EKObject"24@"EKObject"32
v16@?0@"EKEvent"8
v24@?0@"NSMutableDictionary"8@"EKParticipant"16
@max.self
repeat
%@:%@
The following information couldn\U2019t be added to Exchange:
%@%@
%@%@
v24@?0@"EKCalendarItem"8^B16
time zone
Floating
suggestionInfo
This Calendar Cannot Repeat Events on Multiple Months in a Year
This Calendar Cannot Repeat Events on Multiple Days in a Month
This Calendar Cannot Repeat Events Every %ld Years
originalStartDate
EKEvent.m
EKSpanAutomaticChange not allowed here
EKSpanEveryOccurrenceUnlessAlreadyDetached not allowed here
Unexpected number of occurrences (0) remaining in series after deleting the last remaining occurrence.
Cannot detach an already detached occurrence
Normal
Personal
Private
Confidential
/RID=
calshow:%lf?eventid=%d
calshow:%lf?eventid=%d_%d
%@/RID=%llu
alarms
v32@?0@"NSDate"8Q16^B24
Temp event
20220717T000000Z
LOCATION
RRULE
TRANSP
STATUS
ATTENDEE
EXDATE
NSString *getkSuggestionsEKEventAvailabilityState(void)
kSuggestionsEKEventAvailabilityState
void *CoreSuggestionsLibrary(void)
%@ <%p> {UUID = %@; name = %@; email = %@; phone = %@; isSelf = %d}
calendarIdentifier
ReminderPredicate
_isFinished
_isExecuting
_availabilityCache
_startDate
_endDate
_ignoredEventID
_addresses
_resultsBlock
_requestID
_queue
error
%@ <%p> {UUID = %@; name = %@; email = %@; phone = %@; status = %ld; role = %ld; type = %ld}
owner
calendaritem_owner_id
isAllDay
location
structuredLocation
attendees
selfAttendee
attachments
travelTime
isNew
timeZone
calendar.calendarIdentifier
EKEventActionHandler
createEvent
willUpdateEvent
didUpdateEvent
deleteEvent
EEEMMMdjmm
%f#%@
%@#%@
Create event
CLPlacemark
B16@?0@"NSSet"8
B16@?0@"<EKFrozenMeltedPair>"8
B24@?0@"NSString"8@16
B16@?0@"NSString"8
@"NSSet"16@?0@"NSSet"8
@16@?0@"NSSet"8
not nil
v24@?0@"EKObject"8^B16
v24@?0@"<EKFrozenMeltedPair>"8^B16
v24@?0@8^B16
v32@?0@"NSString"8@"NSSet"16^B24
v32@?0@"NSString"8@"NSMutableSet"16^B24
<%@ uniqueIdentifier=[%@]>
v24@?0@"EKPersistentObject"8@"EKFrozenReminderObject"16
@32@?0@"EKPersistentObject"8@"EKObject"16@"NSMutableArray"24
EKObject Shared Lock %lu
file
Invalid day number
weekNumber
%ld%@
%@ <%p> { %@ }
v32@?0@"EKParticipant"8Q16^B24
rrule_%d_frequency
rrule_%d_interval
rrule_%d_end
alarm_%d_absoluteDate
alarm_%d_relativeOffset
alarm_%d_locationTitle
alarm_%d_proximity
CSSearchQuery
CSSearchQueryContext
comment
namedLocation
primaryRecipients
authors
com.apple.iCal
com.apple.CalendarUI
primaryRecipients == "%@*"cdwt || authors == "%@*"cdwt || recipientNames == "%@*"cdwt || recipientEmailAddresses == "%@*"cdwt || authorNames == "%@*"cdwt || authorEmailAddresses ==  "%@*"cdwt || 
contentType == "%@" && (
title == "%@*"cdwt || comment == "%@*"cdwt || namedLocation == "%@*"cdwt || 
title == "%@*"cdwt || 
namedLocation == "%@*"cdwt || 
comment == "%@*"cdwt || 
 || 
&& startDate <= $time.absolute(%f) && endDate >= $time.absolute(%f)
&& endDate > $time.absolute(%f)
&& startDate < $time.absolute(%f)
Birthday
CalDAV
Local
Subscription
Exchange
Suggestions
CGColor
hasSharees
Invalid entity type passed: %d
earlier == nil && later == nil
source.isDelegate
source._adjustedDisplayOrder
source.sourceType
Can't directly init a calendar. Use calendarWithEventStore
DEFAULT_TASK_CALENDAR_NAME
default reminders list name
DEFAULT_CALENDAR_NAME
Default calendar name
Siri Suggestions
Name of default reminders calendar
#%02X%02X%02X
#%02x%02x%02x
Encountered illegal value for EKCalendarType
%@ <%p> {title = %@; type = %@; allowsModify = %@; color = %@;}
B16@?0@"EKCalendar"8
LOCAL
BIRTHDAYS
;%d;
x-apple-calendar://%@
Error checking whether calendar has events: %@
Not implemented
This stub exists for compatibility with macOS
B24@?0@"EKAlarm"8@"NSDictionary"16
v24@?0@"EKAlarm"8^B16
EKCalendar.m
v32@?0@"NSString"8@"NSString"16@"NSError"24
Calendar must be nil or Gregorian
Invalid date components: must have at least a year, a month, and a day
/System/Library/LocationBundles/RemindersAlerts.bundle
EKAlarm.m
date != nil
%@ <%p> {triggerDate = %@}
%@ <%p> {triggerInterval = %lf}
location-reminders
EKVirtualConferenceError
FaceTime
v24@?0@"EKVirtualConference"8@"NSError"16
v24@?0@"<NSCopying>"8@"NSArray"16
EKVirtualConference title: %@, conferenceDetails: %@, joinMethods: %@, source: %@
com.apple.calendar.virtualconference
(nil)
v24@?0@"<NSCopying>"8@"NSError"16
v16@?0@"<NSCopying>"8
EKVirtualConferenceRoomType title: %@, identifier: %@, extensionBundleIdentifier: %@
EKVirtualConferenceJoinMethod title: %@, url: %@, isBroadcast: %@
%@ <%p> {UUID = %@; name = %@; email = %@; status = %lu; accessLevel = %lu;}
invite-accepted
invite-declined
invite-deleted
invite-invalid
invite-noresponse
.plist
v20@?0i8Q12
v32@?0@"NSString"8@"NSArray"16@"NSError"24
v32@?0@"CalDAVOfficeHour"8Q16^B24
v24@?0@"NSString"8@"NSError"16
MobileMe
Subscribed
Other
%@ <%p> {UUID = %@; type = %@; title = %@; externalID = %@}
cachedExternalInfoDictionary
https
http
_EKVirtualConferenceRequestTypeKey
_EKVirtualConferenceRequestTypeRoomTypes
_EKVirutalConferenceRequestTypeJoinMethodsForRoomType
_EKVirtualConferenceRequestTypeURLInvalidate
_EKVirtualConferenceRequestTypeURLRenew
_EKVirtualConferenceRequestRoomTypeIdentifier
_EKVirtualConferenceRequestURLParameterForInvalidation
_EKVirtualConferenceRequestURLParameterForRenewal
_EKVirtualConferenceRequestDateParameterForRenewal
_EKVirtualConferenceRoomTypeTitleKey
_EKVirtualConferenceRoomTypeIdentifierKey
_EKVirtualConferenceJoinMethodTypeIdentifierKey
_EKVirtualConferenceJoinMethodTitleKey
_EKVirtualConferenceJoinMethodURLKey
_EKVirtualConferenceInfoTypeIdentifierKey
_EKVirtualConferenceInfoTitleKey
_EKVirtualConferenceInfoDetailsKey
_EKVirtualConferenceInvalidationResultKey
_EKVirtualConferenceInvalidationResultSucceeded
_EKVirtualConferenceInvalidationResultFailed
_EKVirtualConferenceRenewalResultKey
_EKVirtualConferenceRenewalResultSucceeded
_EKVirtualConferenceRenewalResultFailed
_EKVirtualConferenceTypeIdentifierKey
_EKVirtualConferenceErrorResultKey
EKVirtualConferenceExtensionContext.m
Invalid completion method called for request type
color
display_order
EKTravelTimeErrorDomain
v24@?0@"CalRoute"8@"NSError"16
MKPlacemark
MKMapItem
MKDirectionsRequest
MKDirections
MKErrorUnknown
MKErrorServerFailure
MKErrorLoadingThrottled
MKErrorPlacemarkNotFound
MKErrorDirectionsNotFound
EKTravelLookupErrorUnknown
v24@?0@"MKETAResponse"8@"NSError"16
v24@?0@"CLPlacemark"8@"NSError"16
CLGeocoder
RTRoutineManager
CLLocation
semanticIdentifier
GEOMapService
Trying to initialize an EKStructuredLocation as a copy of an object that is not an EKStructuredLocation
geoLocation
%4f, %4f
ab://
ab\://
%@ <%p> {title = %@; address = %@; geo = %@; abID = %@; routing = %@; radius = %f;}
geo:%f,%f
x-apple-eventkit
Reminder
RecurrenceRule
Attendee
Organizer
Category
ResourceChange
InviteReplyNotification
ResourceChangeNotification
SuggestionNotification
CategoryLink
Participant
Contact
Conference
entityType
rowID
dbID
temporary
%@://%d/%@/%@%d
%@:///%@/%@%d
endDate is nil
occurrenceCount == 0
occurrenceCount
%@ <%p> { UNTIL=%@ } 
%@ <%p> { COUNT=%lu }
ClientLocation
StartLocation
EndLocation
calendarItemOwner
<%@ %p> %@
%@ <%p> {%@; URL:%@; localRelativePath:%@; filename:%@; fileFormat:%@; fileSize:%@; UUID: %@
_MKLaunchOptionsFromTimeToLeaveNotificationKey
v28@?0@"MKMapItem"8@"NSError"16B24
v24@?0@"MKMapItem"8@"NSError"16
availability
privacy_level
travel_time
start_location_id
orig_item_id
B24@?0@"EKCalendar"8@"NSDictionary"16
EKCalendarVisibilityManagerDefaultQ
Method not implemented on iOS.
EKEventStoreChangedNotification
EKEventStoreChangedObjectIDsUserInfoKey
EKEventStoreChangeTypeUserInfoKey
EKEventStoreCalendarDataChangedUserInfoKey
EKEventStoreRemindersDataChangedUserInfoKey
EKEventStoreTimeZoneChangedNotification
EKEventStoreCalendarsChangedNotification
EKEventStore_DistributedNotification_AutomaticGeocodingAllowedChanged
EKEventStoreIdleChangeTrackingClientWasPurgedNotification
EKEventStoreModifiedEventIdentifier
EKEventStoreRevert
EKEventStoreIntegrityErrorsFoundNotification
integrityErrors
EKEventStoreNonSyncOnlyChangeKey
EKEventStoreUnknownChangeKey
EKEventStoreForceImmediateChangeKey
x-apple-reminderkit
REMCDReminder
x-apple-calendar
sourceIdentifier
com.apple.eventkit.eventstore.calendars
com.apple.eventkit.eventstore.registered
com.apple.eventkit.eventstore.unsaved
com.apple.eventkit.eventstore.dbchanged
com.apple.eventkit.eventstore.constraintsCache
com.apple.eventkit.eventstore.notificationCollectionCache
v24@?0@"NSArray"8@"NSDictionary"16
d24@?0@"NSArray"8@"NSDictionary"16
com.apple.calendar.defaultAlarmChangedNotification
v20@?0B8@"NSError"12
v12@?0C8
v20@?0i8@"CADSequenceToken"12
v28@?0i8@"NSDictionary"12@"CADSequenceToken"20
v20@?0@"EKEventStore"8B16
com.apple.eventkit.autoreset
v28@?0i8@"NSArray"12@"NSArray"20
v32@?0@"CADObjectID"8Q16^B24
B24@?0@"EKSource"8@"NSDictionary"16
v32@?0@"EKSource"8q16@"NSError"24
No emailAddress given
No source given
Given source is not an Exchange source
v28@?0i8@"CADObjectID"12q20
No delegate given
Given source is not a delegate
Given delegate is not an Exchange source
EKEventStore.m
Invalid entity type passed
%@/RID=%lu
%@:%@
Nil URI passed
%@: path is empty or nil
-[EKEventStore _saveDraftOfEvent:toDirectory:withVersion:]
-[EKEventStore _loadDraftOfEventWithOccurrenceID:fromDirectory:withVersion:]
-[EKEventStore _deleteDraft:]
%@.plist
externalIdentifier must be an instance of NSString
externalIdentifier is empty
predicate is not a calendar item predicate created through EKEventStore
v20@?0i8B12B16
@16@?0@"NSDictionary"8
-[EKEventStore birthdayCalendarEnabled]_block_invoke
-[EKEventStore setBirthdayCalendarEnabled:]_block_invoke
-[EKEventStore suggestedEventCalendar]_block_invoke_2
-[EKEventStore insertSuggestedEventCalendar]_block_invoke_2
-[EKEventStore insertSuggestedEventCalendar]_block_invoke
-[EKEventStore removeSuggestedEventCalendar]_block_invoke_2
-[EKEventStore confirmSuggestedEvent:]_block_invoke_2
-[EKEventStore confirmSuggestedEvent:]
-[EKEventStore acceptSuggestedEvent:placeOnCalendar:]
succeeded
FAILED
-[EKEventStore deleteSuggestedEvent:]
-[EKEventStore deleteSuggestedEvent:]_block_invoke_2
-[EKEventStore naturalLanguageSuggestedEventCalendar]_block_invoke_2
nil notification passed in to [EKEventStore saveNotification:commit:error:]
Nil notification collection passed in to [EKEventStore saveNotificationCollection:commit:error:]
Unsupported status for responding to shared calendar invitation. Only accept and decline are supported
B24@?0@"EKResourceChange"8@"NSDictionary"16
v44@?0i8@"NSArray"12@"NSArray"20@"NSArray"28@"NSDate"36
v28@?0i8Q12@"NSArray"20
nil attachment passed in to [EKEventStore saveAttachment:commit:error:]
Object is not an EKPersistentObject
Unknown entity name %@ for objectID: %@ with entity type: %d
Object is not an EKObject
Can't add deleted or inserted object to update set
Attempt to insert a nil object.
Attempt to insert something that is not a EKPersistentObject.
Attempt to insert an object that belongs to a different event store.
Attempt to delete a nil object.
Attempt to delete something that is not a EKPersistentObject.
B16@?0@"EKObject"8
-[EKEventStore _commitObjectsWithIdentifiers:error:]
-[EKEventStore _commitObjectsWithIdentifiers:error:]_block_invoke_2
v40@?0i8@"NSDictionary"12@"NSDictionary"20@"CADInMemoryChangeTimestamp"28B36
predicate was not created with EKCalendarStore methods
FetchEventsMatchingPredicate
duration
block is nil
v28@?0@"NSDate"8B16^B20
@"NSArray"16@?0@"CalDateRange"8
%@: startDate is nil
%@: endDate is nil
v44@?0B8@"EKSequenceToken"12@"NSArray"20@"NSArray"28@"NSArray"36
v32@?0i8B12@"CADSequenceToken"16@"NSDictionary"24
changes
inserts
updates
deletes
Constraints data size is wrong.  Your version of EventKit is incompatible with the running version of calaccessd.
v20@?0i8@"NSDictionary"12
%@.simulated.calendar.apple.com
simulated.calendar.apple.com
sequenceNumbers
EKConferenceValidationErrorDomain
EKConferenceUtils.workQueue
v16@?0@"LSApplicationRecord"8
com.microsoft.lync2013.iphone
Skype
v24@?0@"LSAppLink"8@"NSError"16
com.apple.InCallService
com.apple.facetime
com.apple.FaceTime
com.apple.eventkit.ConferenceInvalidationQueue
EKConferenceUtils.m
invalidation state before search already set to checking
v16@?0@"NSString"8
com.apple.mobilecal.FacetimeExtension
com.apple.eventkit.ConferenceCreationQueue
v24@?0@"EKVirtualConferenceRoomType"8@"NSError"16
[%@] startDate: [%@] endDate: [%@] duration: [%@ seconds] conflictedParticipants count: [%@]
relativeOffset
absoluteDate
proximity
EKFrozenReminderAlarm.m
structured location is an unexpected type: %@
@"EKFrozenReminderStructuredLocation"8@?0
Proximity=%@;Location=%@
Ack=%@;Trigger=%@:%@
Era=%li;
Year=%li;
Month=%li;
Day=%li;
Hour=%li;
Minute=%li;
Second=%li;
FLOAT
TZ=%@]
acknowledgedDate
originalAlarm
@"EKFrozenReminderAlarm"8@?0
REMAlarmTimeIntervalTrigger
Class getREMAlarmTimeIntervalTriggerClass(void)_block_invoke
REMAlarmDateTrigger
Class getREMAlarmDateTriggerClass(void)_block_invoke
REMAlarmLocationTrigger
Class getREMAlarmLocationTriggerClass(void)_block_invoke
Event update: %@
iTIP
%@ has updated the event: %@, scheduled for %@. To acknowledge this invitation, click the link below.
%@ has updated the event: %@, scheduled for %@ at %@. To acknowledge this invitation, click the link below.
%@ has updated the event: %@, scheduled for %@ at %@ (%@). To acknowledge this invitation, click the link below.
iCal-Request.ics
Event invitation: %@
%@ has invited you to the event: %@, scheduled for %@. To accept or decline this invitation, click the link below.
%@ has invited you to the event: %@, scheduled for %@ at %@. To accept or decline this invitation, click the link below.
%@ has invited you to the event: %@, scheduled for %@ at %@ (%@). To accept or decline this invitation, click the link below.
Event canceled: %@
%@ has canceled the event: %@. To handle this cancellation, click the link below.
iCal-Cancel.ics
selfAttendee.statusRaw
Event accepted: %@
Event declined: %@
Event tentatively accepted: %@
%@ has accepted your invitation to the event: %@, scheduled for %@.
%@ has accepted your invitation to the event: %@, scheduled for %@ at %@.
%@ has accepted your invitation to the event: %@, scheduled for %@ at %@ (%@).
%@ has declined your invitation to the event: %@, scheduled for %@.
%@ has declined your invitation to the event: %@, scheduled for %@ at %@.
%@ has declined your invitation to the event: %@, scheduled for %@ at %@ (%@).
%@ has tentatively accepted your invitation to the event: %@, scheduled for %@.
%@ has tentatively accepted your invitation to the event: %@, scheduled for %@ at %@.
%@ has tentatively accepted your invitation to the event: %@, scheduled for %@ at %@ (%@).
%@%@%@%@
%@%@%@%@%@
iCal-Reply.ics
kEKAccountErrorDomain
kEKCalendarErrorDomain
kEKCalendarItemErrorDomain
AccountName
CalendarName
CalendarItemName
[%@] username: [%@], password: [%@]
******
%@ <%p> {UUID = %@; type = %@; title = %@; externalId = %@}
@"CalVirtualConferenceJoinMethod"16@?0@"EKVirtualConferenceJoinMethod"8
@"EKVirtualConferenceJoinMethod"16@?0@"CalVirtualConferenceJoinMethod"8
Video Call
isAbsolute
isDefaultAlarm
Either the relative offset or absolute date must be set.
,%s%ld%s
%s%ld%s
com.apple.eventkit
mailto:
EKUIAttendeeUtils_AttendeeHasResponded
com.apple.eventkit.redaction
<EKRedacted>
<%@: %p; Conflicts: %lu Out of total: %lu>
span
com.apple.iCal.viewModelChanged
DisabledCalendars
CollapsedTopLevelNodes
AccountDisplayOrder
LocalGroupsDisplayOrder
com.apple.calendar.preference.notification.changed
SharedCalendarNotificationsDisabled
InvitationNotificationsDisabled
TimeToLeaveEnabled
TimeToLeaveEnabledNotification
MainWindow
Availability
UIAvailabilitySearch
Saving
com.apple.CoreRoutine.LocationOfInterest
v24@?0@"<GEOMapItem>"8@"NSError"16
Swim Lesson
Type
Poker Night
Book Club
Staff Meeting
v32@?0@"NSString"8@"NSDictionary"16^B24
%@ CONTAINS SELF
Unexpected frequency value loaded from database: %d
Unexpected CalDayOfWeek: %d
Unexpected EKWeekday: %d
Couldn't find old alarm matching semantic ID %@; if it existed it will be disconnected from any extant EKObject instances
The given source's 'accountID' is nil.  The availability cache will not be able to give availability data.  Cache: [%@]
[%@] initialized.
Gathering cached availability for address: [%@]
No cached spans found for address: [%@].  Ignored event ID: [%@].  Will send out remote fetch for availability.
Found stale cached spans for address [%@] in range with start date [%@] and end date: [%@].  Will send out remote fetch for availability.
Cache hit.   freshly cached spans found.
This availability cache's source is invalid.  Will not execute the availability request.  Cache: [%@]
This availability cache's source does not support availability requests. Will not execute the availability request.  Source account ID: [%@]. Cache: [%@].
Invalid start and end dates given.  Will not execute the availability request.
No addresses given in the availability request.  Completing quickly.
A client requested availability between start date [%@] and end date [%@].  Ignored event ID: [%@].  Addresses: [%@]
[%lu] local cached spans were found for addresses: [%@].  Ignored event ID: [%@].  Sending these results immediately to the requesting client.
Sending network request for addresses: [%@].  Start date: [%@].  End date: [%@]  Ignored event ID: [%@].  Account ID: [%@]
Availability request with ID [%@] received a response with results: [%@]. Elapsed milliseconds: [%f]
Availability request with ID [%@] completed with error: [%@].  Total elapsed milliseconds: [%f]
Cancelling availability request with request ID: [%@]
No spans were returned for address [%@] and ignored event ID [%@]
Failed to deserialize structured data. Error: %@
Failed to serialize structured data dictionary: %@. Error: %@
Running occurrence cache search for search term = %@
Call to calendar daemon failed: %@
Received batch results from server for search term = %@, results = %{public}@/2, finished = %{public}@, reply ID = %{public}@
EKCalendarNotificationReference: failed to get persistent object for notification
After generating a notification, it was observed that its backing data was removed from the database.  Clearing the notification.  Object ID: [%@]  Generated notification: [%@]
Failed to create committed relationship for relation %@ (%{public}@)
Connection interrupted!
Client tried to open too many connections to calaccessd. Refusing to open another
Error setting initialization options: %@
Notifying %d asynchronous operations about the dropped XPC connection
Finished notifying asynchronous operations about the dropped XPC connection
Detected database integrity errors: %@
Will not set a travel lookahead interval of less than 0.  Given value: [%f]
Saving of %lu invisible calendars commencing: %{public}@
No calendar identifier found.  Will not be able to save all invisible calendars.  Calendar: [%@]
Saving calendar identifier [%@] of invisible calendar
Saving of invisible calendars completed.
No calendar sync hash found.  Will not be able to save all calendar sync hashes.  Calendar: [%@]
Saving sync hash [%@] of invisible calendar with identifier [%@]
No calendar sync identifier found.  Will not be able to save all calendar sync identifiers.  Calendar: [%@]
Saving sync identifier [%@] of invisible calendar with identifier [%@]
Not updating deselected calendar identifiers because nothing has actually changed.
Unable to create reminder store. Reminder data will be unavailable.
Error fetching reminder accounts: %@
Source (%@) is an event source without a reminder source; can't get reminder constraints for it.
Got a nil remAccount when fetching constraints for %@
Got a nil capabilities when fetching constraints for %@ (remAccount = %@, type = %d)
Fetching capabilities for source (%@), remAccount (%@), type (%d), supportsLocation (%d)
Tried to call isSourceManaged: on the reminder store for a non-reminder source: %@
Failed to check whether REMAccount (%@) is managed: %@
Error fetching reminder lists: %@
No existing reminder list with identifier %@
Error fetching calendar by identifier: %@
calendar being saved should have an EKFrozenReminderCalendar backing class, but instead has a backing object of type %@
defaultCalendarForNewReminders is nil: %@
No reminder found with unique identifier %@
Error fetching reminder by uniqueId identifier: %@
Unable to create EKReminder from REMReminder for unique identifier %@
No reminders found with external identifier %@
Error fetching reminders by external identifier: %@
Unable to create EKReminder from REMReminder for external identifier %@
No reminder found with identifier %@ (%@)
Error fetching reminder by identifier: %@
Object requiring parent to commit has no parent: %@
Error fetching reminders: %@
Class has no known frozen version: %@
[EKAutocomplete] Search for %@ invoked
[EKAutocomplete] Same search ("%@"), ret %lu results.
[EKAutocomplete] Clear Results
[EKAutocomplete] Cancel search for %@
:: :: CNAutocomplete Update %@ with %@
:: :: CNAutocomplete Failed %@ with error %@
:: :: CNAutocomplete Finished %@
:: :: CNAutocomplete Began network activity for %@
:: :: CNAutocomplete finished network activity for %@
Unexpected nil specificIdentifier for object: %@
Error archiving contact by email predicate. Error: %@.
EKAutocompleteSearch: Beginning spotlight search.
EKAutocompleteSearch: Got spotlight search results.
EKAutocompleteSearch: Search was cancelled before we processed results. Abandoning.
Spotlight query controller returned an error when searching for string (%@), error: %@
EKAutocompleteSearch: Processing results.
EKAutocompleteSearch: Search was cancelled while processing results. Abandoning.
EKAutocompleteSearch: Search took longer than allowed time. Stopping earlier.
EKAutocompleteSearch: Finished processing results.
EKAutocompleteSearch: Search was cancelled while we processed results. Abandoning.
EKAutocompleteSearch: Returning results via callback.
Nil rowID passed in to createOwnerIDWithRowID:objectType:
Invalid owner object type. Type: %@
Invalid rowID passed in. rowID: %@
Invalid databaseID: %d
Computing diff between %@ and %@
Objects are of different classes.  Diff finished
Objects have different values.  Diff finished
Objects have different identities.  Diff finished
One or both objects are nil.
Computing single value differences.
Single value differences? [%d]
Computing single value relationship differences.
Single value relationship differences? [%d] - %@
Computing multi value relationship differences.
Multi value relationship differences? [%d] - %@
Computing identity differences.
Identity differences? [%d] - %@
Computing immutable differences.
Immutable differences? [%d] - %@
-[EKAccountRefresher _eventStoreChanged], and _currentlySyncing changed from %{BOOL}i to %{BOOL}i (sources=%{BOOL}i; calendars=%{BOOL}i)
-[EKAccountRefresher _eventStoreChanged], and _currentlySyncing is still %{BOOL}i (sources=%{BOOL}i; calendars=%{BOOL}i)
%@ has not yet finished refreshing
Calling -[EKAccountRefresher refresh] more than once is not supported.
Started a refresh of %lu accounts and %lu subscribed calendars
_refreshControlMaximumVisibleTimeElapsed; calling sync completed
timed out waiting for sync to start; calling sync completed
Hiding sync spinner after %fs
Validation is failing for %@ because access has not been granted for %{public}@.
Validation is failing for %@ because readonly items can't be removed.
Validation is failing for %@ because it's not deletable by shared calendar sharees.
Attempting to set the same selfAttendee using a different EKAttendee instance. There is no work to be done, but if the passed in instance had changes then they will not be saved when this calendar item is saved.
Changing timeout in [%@] from [%@] to [%@].
Set 'purgingAllowed' from [%@] to [%@] in [%@]
No existing store was found in [%@].  Created event store: [%@].
The purging timeout is 0.  Will not set up an idle timer for [%@].
There is no event store being cached at the moment.  Will not set up an idle timer for [%@].
Purging is disallowed.  Will not set up an idle timer for [%@].
No existing timer found in [%@].  Will create a timer.
Idle timer fired in [%@].
Clearing event store: [%@] in [%@]
Setting the timer's timeout to [%@] seconds and its leeway to [%@] seconds.  The timer will fire around [%@] in [%@]
Uninstalling dispatch timer in [%@]
Adding persistent notification observers for [%@]
Removing persistent notification observers for [%@]
[%@] received notification: [%@]
Ignored low-level [%@] notification in [%@].
Removing transient event store change observer for event store [%@] in [%@]
Firing changed block from [%@]
_applyChangesToSaveRequest:error: called on a class (%{public}@) that doesn't provide an implementation.
This object doesn't know how to update its parent. self=%@, parent=%@
Error saving event for reporting as %@. Error = %@
(cachedJunkStatus) junkStatus was set on the event to %d
(cachedJunkStatus) event was just created event is not junk
(cachedJunkStatus) event is not junk because it was either organized by me or has no attendees
(cachedJunkStatus) my status on the event is accepted or tentative so the event is not junk
(cachedJunkStatus) junk status for the invitation is %@
(couldBeJunk) event could be junk [%@]
(couldBeJunk) event is not junk [%@]
(junkStatusForInvitation) junk reporting is not supported on the server
(junkStatusForInvitation) junk reporting is supported on the server
(junkStatusForInvitation) our contacts reputation check returned that we should %@ the organizer
(junkStatusForInvitation) our eventstore reputation check returned that we should %@ the organizer
Lunar birthday without yearly frequency detected. recurrenceRule = %{public}@, lunarCalendar = %{public}@
Unknown CADFilter subclass: %@
A request to search for more times when all attendees can attend was made.
A request to search for more times when some attendees can attend was made.
Searching reset with organizerAddressForNewlyScheduledEvent [%@] and event [%@]
No event given.  Will not search for alternative times.
The event's source does not support availability requests.  Will not issue search for alternative times.
The event's start date is the same as its end date.  Will not issue search for alternative times.
The event is an all-day.  This is currently not supported.  Will not issue search for alternative times.
Starting original conflict detection - event start date: [%@] event end date: [%@] ignored event ID: [%@] source: [%@]
Extracting attendees for original conflict detection.
Will not consider attendee for conflict detection because it is a room: [%@]
No participant address found for participant: [%@].  Will not search use this participant to search for alternative times.
The event has a dirty date property, so we'll forcibly request availability for this participant: [%@]
Attendee has declined: [%@]
Attendee needs to respond: [%@]
Adding participant with address [%@] to the list of attendees to be included in conflict resolution.  Participant: [%@]
Could not find the organizer's address.  This can sometimes happen if the event is being scheduled for the first time.  Organizer: [%@]
No 'organizerAddressForNewlyScheduledEvent' given.  The organizer for this event is unknown and conflict resolution will likely be incorrect and irrelevant.
Adding organizer with address [%@] to the list of attendees to be included in conflict resolution.  Participant: [%@]
The event's dates have not been dirtied and there are no addresses collected for looking up availability information for the event's original time span.
Detected a conflict.  [%@] attendees have declined.  Will perform conflict resolution by searching for time slots in the future. 
No conflicts detected, but noConflictFound flag set. Will attempt to perform conflict resolution.
No conflicts detected.  Will not attempt to perform conflict resolution.
We need to figure out the availability status of some attendees in order to complete conflict detection.  Attendees: [%@].
self went away.  Returning early.
The availability operation went away.  Returning early.
Error encountered while searching.  Error: [%@]
Could not find participant.  Will not count as busy.  Address: [%@]
This participant is busy during the event's time range: [%@]
This participant is completely free during the event's time range: [%@]
Including declined participants in the list of participants with conflicts.
Conflict detection complete.  Conflicted participants: [%@]
Participants with conflicts found.  Will search for other time slots.  Participants with conflicts: [%@]
No participants with conflicts found.  Will not continue on by searching for other time slots.
Sending off availability request operation for execution: [%@]
A search attempt was requested.
There are no more search attempts remaining.  Will not search.
There is an availability request in progress.  Will not search.
Preparing to search for alternate times in order to proceed with conflict resolution.
The availability search operation went away.  Returning early.
This availability search operation was cancelled: [%@]
Operation resulted in an error.  Re-trying search.  Error: [%@]
Searching for time slots between start date [%@] and end date [%@] with ignored event ID [%@] and addresses [%@]
Resetting search fallback numbers.  Current remaining search attempts: [%@].  Current availability search duration multiplier: [%@]
Resetting of search fallback numbers complete.  New remaining search attempts: [%@].  New availability search duration multiplier: [%@]
No 'state changed' callback found.  Will not send state changed information.  State: [%@]
Sending state change.  State: [%@]
Transitioning to the [%@] state and attempting a search.
Processing results - start date: [%@] end date: [%@] results: [%@]
Found [%@] free times and [%@] non-free times.
Work remains, but there are no more remaining search attempts left.  Search exhausted.
Search has not progressed and no more work remains.  This is an invalid state, as there should always be work to do until we've seen search results or there are no more search attempts left.
There are [%@] remaining search attempts left.  Continuing search.
Halting search.
No leftover spans found for latest date: [%@]
No participant found for participant with address: [%@].  Will not generate time spans for this participant's availability information.
This span's start date is equal to its end date: [%@].  Will not consider this span in alternative time calculations.
Could not find a time span that contains date: [%@]
No replacement spans found.
Validating [%@] spans.
Found span whose start date doesn't match previous span's end date.  Previous lastEndDate: [%@].  Cached span: [%@]
Span's start and end date is the same: [%@]
Span's start date is after its end date: [%@]
Contiguous free spans exist.  Last inspected span: [%@].  This span: [%@]
Time gaps exist in the spans range: [%@]
A zero-duration span exists in the spans range: [%@]
At least one span's start date comes after its end date in the spans range: [%@]
At least two contiguous spans are marked as being free in the spans range: [%@]
Deserialization of trust error [%@]
We were unable to serialize the trust for a certificate error [%@].
Gathering freshly cached spans between [%@] and [%@]
Inserting spans [%@].
ERROR: No span given to insert results.
Clamping date range for spans between [%@] and [%@]
Clamping date range for spans.  Original start date: [%@].  Original end date: [%@].  New start date: [%@].  New end date: [%@].
There is only one span.  Created a new span and set its type to: [%@]
Clamped the spans.  firstTruncatedSpan: [%@].  lastTruncatedSpan: [%@]
No clamping needed.
%s: Error attempting to look up the suggested event for notification [%@] and resource change [%@] with error [%@].
Failed to fetch event for attendee replied notification %{public}@ when attempting to acknowledge. Silently ignoring.
Failed to clear attendee replied notification %{public}@: %@
We completed the import during the file separation phase.
We failed to figure out the different types of files we were trying to import. Aborting import.
We 'succeeded' at importing 0 items. Going to treat this as an error.
Importing iCal files (%@) and vCal files (%@) to calendar %@
Importing files to user-specified calendar with identifier ( %@ )
No destination calendar provided.  Will attempt to choose appropriate calendars.
%@ doesn't have a default calendar to put the items into.
Couldn't handle import for all iTIP files.  Bailing.
Couldn't handle import for all non-iTIP files.  Bailing.
We don't know what calendar to import some files to and we don't have a callback for Calendar selection.  Bailing.
No destination calendar provided. We need to ask the user what calendar to import to for %lu files.
User didn't select calendar, instead cancelled, returning. [%@]
User selected calendar: UID( %@ )
User selected calendar %@
Found a calendar archive among multiple files to import. Ignoring the other files.
Found a calendar archive to import but no method for restoring from the backup file.
Attempting to open version 1.0 .ics file.  Will treat it as a vcs file and import.
Couldn't read calendar data from file "%@".  Aborting open.
File %@ has method PUBLISH or NONE.
Not importing file "%@" because it has either zero or more than one ICSEvent
File %@ is an iTIP message.
File %@ has no VCALENDAR.
Error importing iTIP ICS: %@
We did not import the iTip files [%@].
Importing pre-existing event.  Will stay on current calendar: objectID ( %@ )
Importing a pre-existing event but there were no eligible writeable calendars.
ICS calendar expected to contain a single item, but instead it contained %lu
Expected an event but got %@
Import of [%@] failed with error [%@]
Error fetching changed object IDs: %@
Unsupported entity type: %d
Invalid entity type: %d
Failed to fetch any event sources despite having access to events. Skipping reminder sources and returning 0 sources
Failed to fetch any reminder sources despite having access to reminders. Skipping event sources and returning 0 sources
Event or reminder source without ID: eventSourceID=%@, reminderSourceID=%@, eventSource=%@, reminderSource=%@
Unexpected nil self in birthday update block
Not updating birthday events -- need reset? [%{BOOL}d] birthdays enabled? [%{BOOL}d]
BirthdayEventsGenerationVersion (%d) does not match current version (%d). Forcing regeneration.
BirthdayEventsGenerationLocale (%@) does not match current (%@). Forcing regeneration.
BirthdayEventsGenerationLocale ignoring locale change because locale identifier has not changed (%@)
EKBirthdayListener unable to delete birthday calendar %@, %@
EKBirthdayListener unable to commit birthday calendar deletion %@
Creating Birthday Calendar
EKBirthdayListenerFailed to save calendar to event store with error: %@
EKBirthdayListener inserting birthday for %@ (%@)
EKBirthdayListener unable to save event %@, %@
Resetting All Birthdays in Store
Expected exactly 1 birthday calendar, but instead there are %lu
EKBirthdayListener unable to commit to store %@
EKBirthdayListener received %ld inserted, %ld updated, %ld deleted contacts
No birthday calendar found when trying to add birthdays
EKBirthdayListener removing birthday for %@ (%@)
EKBirthdayListener removing invalid birthday for %@ (%@), No Contact Name!
EKBirthdayListener removing invalid birthday for %@ (%@), Invalid Contact Identifier!
EKBirthdayListener unable to remove event %@ %@
EKBirthdayListener committing changes
Unknown REMFrequency: %li
Unknown frequency: %li
Unknown REMWeekday: %li
Unknown Weekday: %li
Object %@ has no unique identifier: %@
Attempted to acknowledge calendar invite reply notification with objectID %{public}@, but it was not found. Silently ignoring this request.
CADEventPredicate
CADNotifiableEventsPredicate
CADEventsForAssistantSearchPredicate
CADNotificationCenterVisibleEventsPredicate
CADUnacknowledgedEventsPredicate
CADUnalertedEventsPredicate
CADRespondedEventsPredicate
CADUpcomingEventsPredicate
EKMasterEventsPredicate
EKScheduleAgentClientEventsPredicate
CADTravelEventsPredicate
CADUpNextEventsPredicate
CADContactEventsPredicate
CADEventCreatedFromSuggestionPredicate
CADCalendarItemsWithExternalIdentifierPredicate
CADPropertySearchPredicate
CADEventTimeWindowPredicate
CADNaturalLanguageSuggestedEventsSearchPredicate
CADEventsForConferenceURLPredicate
Unexpected predicate class: %@
Unknown Predicate Search
predicateClass=%@; predicateFormat=%@
EKPredicateSearch
error=%i; foundItems=%lu
Error (%d) in reply block for CADDatabaseFetchCalendarItemsWithPredicate attempt %d/%d
All retries exhausted for CADDatabaseFetchCalendarItemsWithPredicate
%@: failed to register result object with objectID: %@
Monitor starting up.
Monitor shutting down.
Ignoring expiration timer because the notification monitor is not running.
Data protection is on. Unable to check for updates.
Sync running, but we've been explicitly told to ignore that and refresh anyway.
Sync running. Waiting for it to finish before checking for updates.
Notification monitor wants to reload notification count. Will fetch notification count from the event store as a result
Set notification count to %{public}@.
Notification monitor wants to reload notifications. Will fetch notification references from the event store as a result.
Set notification references to %@.
Current notification count: %{public}@. Last event notification count: %{public}@.
Is initial check: %{public}@.
Count changed to %{public}@ events, Notifying.
Application badges are not supported on this platform. Will not notify.
Posting notification count changed notification.
No expiring notifications. Not setting expiration timer.
Received multiple expiration dates in the past. Will not set expiration timer. Most recent expiration date received was %{public}@
Next expiration fire time will be %{public}@.
Database changed.
Notification count changed externally.
Alert pref changed.
Expiration timer fired.
Fetching event notifications from event store: %@.
Fetched event notifications from event store: %@.
Faulted in notification: %@.
Sync timer fired.
Sync started. Suppressing notification monitor checks while it runs.
Sync done, %@ changes.
Will not set an availability freshness window of less than 0.  Given value: [%f]
Will not set an overridden travel advisory hypothesis conservative travel time of less than 0.  Given value: [%f]
Will not set an overridden travel advisory hypothesis estimated travel time of less than 0.  Given value: [%f]
Will not set an overridden travel advisory hypothesis aggressive travel time of less than 0.  Given value: [%f]
A detached item's objectID is nil for event %@ (%{public}@)
An object pending commit's objectID is nil for event %@
originalStartDate should not be nil
Unexpected error code given to +_defaultDescriptionForCADErrorCode: %d
Already active.  Will not activate [%@]
Already inactive.  Will not deactivate [%@]
nil 'hypothesis' received in [%@]
Updating [%@] based on new hypothesis. now: [%@] startOfLeaveNowPeriod: [%@] startOfRunningLatePeriod: [%@]
Refreshing [%@]
Period refreshed from [%@] to [%@] in [%@]
Calculated next refresh date of [%@] in [%@]
[%@] is before now.  Will not set up a timer to refresh [%@]
Timer fired in [%@].
+alternateUniverseClass called on a class that does not implement it (%{public}@)
Error loading number %@ from daemon: %@
Error loading date %@ from daemon: %@
Error loading string %@ from daemon: %@
Error loading data %@ from daemon: %@
Error loading to-one relation %@ from daemon: %@
Error loading to-many relation %@ from daemon: %@
Failed to take value for related object with key %@
Could not convert dictionary into EKObjectID. Keys were missing.
Could not convert dictionary into EKObjectID. entityType = %d, rowID = %d
Serialized recurrence rule has invalid interval (%d). Ignoring.
nil 'string' given.  Will not find a corresponding travel state.
Unknown travel state given: [%@].  Will not find a corresponding travel state.
RIDESHARE is unsupported in geoTransportTypeAsString. Returning nil.
nil 'string' given.  Will not find a corresponding transport type.
Unknown transport type given: [%@].  Will not find a corresponding transport type.
nil 'string' given.  Will not find a corresponding traffic density.
Unknown traffic density given: [%@].  Will not find a corresponding traffic density.
Could not archive last sync user info, error = %@
Could not unarchive last sync user info, error = %@
Tried to set proposed start date on invalid event: %@
Beginning location prediction for event: %@
Failed to predict a structured location for event: %@ : %@
Returning location prediction [%@] for event: %@
Setting predicted location title to %@ for the event %@
LocationPrediction: this is %@the main thread. Using timeout %f
LocationPrediction: Reset timeout
LocationPrediction: Updating timeout from %f to %f
LocationPrediction: Not attempting prediction due to past timeouts
Calling _hasRecurrenceRuleChangeRequiringSpanAll on an event that has or had multiple recurrence rules is not supported. Results may be unpredictable. Current count = %d, previous = %d
Updating modified properties for event: %{public}@.
Updating modified properties for detached items: %@.
Updated modified properties: %u. %{public}@. Clear modified flags: %lu. Event: %{public}@
Ignoring added attachment without a UUID: %@
Found the wrong number of added attachments (found %lu, should have had %lu) and those attachments were %@
Event %{public}@ is not significantly detached because it is not detached
Event %{public}@ is significantly detached because its master is a phantom
Event %{public}@ is significantly detached because its start date differs
Event %{public}@ is significantly detached because its end date differs
Event %{public}@ is significantly detached because its location differs
Event %{public}@ is significantly detached because its title differs
Event %{public}@ is significantly detached because its status differs
Event %{public}@ is significantly detached because it is externally organized and its participation status differs
Event %{public}@ is significantly detached because its organizer differs
Couldn't copy attachment file, so we're just going to have to remove the attachment from the moved event
-[EKEvent updateEventToEvent:] is about to save itself [%@] with EKSuggestedEventInfo [%@]
-[EKEvent updateEventToEvent:] failed to save with error: %@
-[EKEvent updateEventToEvent:] saved itself correctly [%@]
-[EKEvent updateEventToEvent:] was given a nil event and will CANCEL itself [%@] with EKSuggestedEventInfo [%@]
-[EKEvent updateEventToEvent:] CANCEL finished correctly [%@], now attempting to save
-[EKEvent updateEventToEvent:] CANCEL failed with error: %@
-[EKEvent updateEventToEvent:] was called on an event without a EKSuggestedEventInfo: %@
Could not parse ICS recurrence rule: %{public}@
Could not construct EKRecurrenceRule from ICS recurrence rule
@Unknown recurrence type
Operation was cancelled.  Will not return results.  Operation: [%@]
No results block.  Will not pass along results [%@] for operation: [%@]
Finishing operation with error: [%@].  Operation: [%@]
Data protection state changed.  New 'dataIsAccessible' state: [%@].
Unexpected CalAttendeeStatus: %d
Unexpected EKParticipantStatus: %d
Error creating alarm: [%@]
Error creating attendee: [%@]
Error creating recurrence rule: [%@]
Deleting previous interactions on calendar %@
Deleting previous interactions on event %@
Donated interaction for action %@ on event %@
Reached maximum depth while validating root object %{public}@
Object of type %{public}@ (uniqueIdentifier = %{public}@) failed validation while validating relation %{public}@ with error [%@].
Property %@ was unavailable on backingObject %@. %@
Unable to set single changed value %@. Property %@ was unavailable on backingObject %@. %@
Unable to add multi changed object values %@. Property %@ was unavailable on backingObject %@. %@
Unable to remove multi changed object values %@. Property %@ was unavailable on backingObject %@. %@
Failed to get melted object for frozen object related by key %@. Event store is %@
Failed to copy %@ (class = %{public}@, objectID = %{public}@) to my event store.
Missing corresponding added object with semantic identifier %@ for relation key %{public}@.
All EKObjects need to have a unique identifier but %@ does not. %@
Unexpected object type %{public}@ in change set for change to single value key %{public}@
Unexpected object type %{public}@ in change set for multi value add for key %{public}@
Unexpected object type %{public}@ in change set for multi value delete for key %{public}@
Got a nil unique identifier for object of type %{public}@ for relation key %{public}@ on object of type %{public}@. Backing object of bad object = %@
Error starting diagnostics collection: %@
Error stopping diagnostics collection: %@
Ignoring new results, because we're already finished: %@
Validating deletion on an EKCalendar that allows both events and reminders. This may not work as expected: %@
Can't merge %@ with %@ because they are the same calendar.
Can't merge %@ with %@ because they are in different sources.
Can't merge %@ with %@ because %@ doesn't allow content modifications
Can't merge %@ with %@ because %@ is a shared calendar
Can't merge %@ with %@ because %@ is a reminder list
Can't merge %@ with %@ because this account doesn't support sharing scheduling and %@ is a shared calendar and %@ isn't.
Can't merge %@ with %@ because %@ isn't deletable
Unexpected error type (%d) in calendar error on calendar %@
Error moving subscribed calendar: %@
Error saving event during removeServerRefreshRelatedProperties. Error: %@
Error saving calendar during removeServerRefreshRelatedProperties. Error: %@
Error committing calendar & events during removeServerRefreshRelatedProperties. Error: %@
Unable to export calendar data: %@
Error trying to report calendar invite as junk. Error: %@
Could not load extension for room type title: %@ identifier: %@ extensionIdentifier: %@, error = %@
Skipping extension join method %@ because it has insufficient information. Title = %@ URL = %@
Extension %@ did not provide any join methods.
Failed to get virtual conference join methods, extension = %@ request = %@ error = %@
Failed to find virtual conference extensions. Error = %@
Skipping extension room type %@ because it has insufficient information. Identifier = %@ title = %@
Request for virtual conference room type cancelled, request = %@ error = %@
Request for virtual conference room interrupted, request = %@ error = %@
Request for virtual conference room types failed, extension = %@ request = %@ error = %@
Request for virtual conference room types failed,timed out
Unexpected CalShareeStatus: %d
Unexpected EKShareeStatus: %d
Unexpected CalShareeAccessLevel: %d
Unexpected EKShareeAccessLevel: %d
Unexpected EKPrivacyLevel: %d
Unexpected CalEventPrivacyLevel: %d
Attempting to set a path (%{public}@) with -[EKSource setConstraintsName:]. Only the name should be supplied without an extension.
Attempting to set a file name with .plist extension (%{public}@) with -[EKSource setConstraintsName:]. Only the name should be supplied without an extension.
Attempting to set an unrecognized constraints name (%{public}@) with -[EKSource setConstraintsName:]. The given name should be a valid .plist resource in CalendarFoundation.
Ignoring attempt to set allowsTasks to %d on source %{public}@. Forcing to NO
Source has more than one calendar with the same external Id: %@
Error deserializing external info: %@
Unexpected type for external info: %{public}@
Error serializing external info: %@
Failed to load EKResourceChange with objectID %{public}@
Received request to find travel time from %@ to %@ by %@ arriving on date %@
Calculating travel time from %@ to %@ by %@ on date %@
Didn't find route or error for routeType %@
Found no travel times, only errors.  Trying again with start as current location
Found no travel times, only errors.  Bailing.
Finished finding travel times with results %@
Can't use current location for travel time estimation because Calendar is not authorized for precise location access.
Getting directions %@ with request %@
Travel time lookup failed with error code %@: %@
Found travel time in seconds %lul
Updating start location with current location information
Updated location to %@
Failed to get placemark with error %@
Making sure that %@ has coordinates
%@ already has coordinates
%@ is for current location.  Let MapKit handle
%@ doesn't have coordinates
%@ has no address
%@ has an address.  Looking up coordinates
Found coordinates for address. Updated location to %@
Couldn't find coordinates for address for %@
Couldn't find coordinates for address for %@ and failed with error %@
Wrong scheme for EKObjectID URL; got %@, expected %@; will return nil for objectIDWithURL:
Redundant specification of database ID 0 (URL %@ has host length %lu)
EKObjectID URL has no path
URL with unrecognized ID type %c
EKObjectID URL has no entity name
Unknown entity name %@ with URI %@
Invalid range passed to +[EKObjectIDsFromData:range:]. Need at least %lu bytes, but only have %lu
Unable to get a temporary location to copy the file to
Unable to copy item to temporary file
'nil' 'event' provided.  Will not generate URL for an event location.
No structured location found.  Will not generate URL for event: [%@]
Error: Could not weak link MapKit string constant symbol '_MKLaunchOptionsFromTimeToLeaveNotificationKey'. Cannot add '_MKLaunchOptionsFromTimeToLeaveNotificationKey' map item URL option as a result.
MapKit handle found.  Generated URL [%@] for location [%@].
Geolocation found.  Generated URL [%@] for location [%@].
No map kit handle or geolocation found.  Will not generate URL for location: [%@]
Travel advisory not supported.  Will not attempt geocode for event: [%@]
Event has no location.  Will not attempt geocode for event: [%@]
Event has geoLocation but no mapKitHandle.  Will not attempt geocode for event: [%@]
Event is a suggested event.  Will not attempt geocode for event: [%@]
Event has unsaved location changes.  Will not attempt geocode for event: [%@]
Event location hasn't changed since we geocoded 24 hours ago.  Will not attempt geocode for event: [%@]
Geocoding finished but the event location changed. Not saving results of geocode.
Geocoding finished with an error: [%@]
Failed to save geocoded event: [%@]
Geocoding finished and event was updated.
Geocoding finished but the location string was not geocodable.
The event has a location that is a conference room.  Will not attempt to geocode its location string.
Automatic location geocoding is disallowed.  Will not attempt to geocode this event's location string.
Starting geocode of location string for event: [%@]
Starting geocode of mapHandle for event: [%@]
Underlying calendar visibility preferences changed.  Notifying client of [%@]
No calendar identifier found.  Will not be able to find all visible calendars.  Calendar: [%@]
No calendar identifier found.  Will not be able get all deselected calendar identifiers.  Calendar: [%@]
[%@] initialized in process: [%@]
Data is protected.  Will not say that protected data became available.
Data is not protected.  Saying that protected data became available.
Initialized event store with access to events only, initialization options include allowing events only = %{public}@, current process disallows reminders by default = %{public}@
Error closing the database: %@
Error getting changes sequence token from daemon: %@
Error getting changes since sequence number from daemon: %@
No object IDs given.  Will not validate object IDs: [%@]
Got a not found error when validating an array of objectIDs. Assuming all are invalid
Error validating object IDs from daemon: %@
Not handling notification "%@" because there is no action for that notification name.
Error getting changed object IDs since timestamp %{public}@ from daemon: %@
EventKit received changed object ID with rowid 0 of entity type %li.
Error getting UUID: %@
Attempted to cache a source before _sources was initialized. Ignoring.
Error getting sources: %@
Invalid source type passed to sourcesEnabledForEntityType: %@
Error getting deletable sources: %@
Failed to get scubscribed calendars source: %@
Failed to get local birthday calendar: %@
parentSourceForDelegateSource called with non-delegate source
Error getting granted delegates list: %@
Error updating granted delegate: %@
Error checking whether source (%{public}@, rowID = %d) is managed: %@
Cannot check whether source (%{public}@) is managed because we don't have access to the entity type it supports
Error clearing calendar %@ from notification center: %@
Attempted to cache a calendar before _calendars was initialized. Ignoring.
Error getting all calendars: %@
Error getting deletable calendars: %@
Failed to save local source when attempting to enable events to save a new calendar: %@
Error getting event with identifier %@: %@
Malformed event URI (%@) passed to _eventWithURI. Expected scheme: %@
Error getting calendar item with URI %@: %@
Error checking for existence of event in eventForUID: %@
Error: objectID provided is nil or has the wrong entity type %{public}@
Error checking for existence of event in eventForObjectID: %{public}@
Error getting event with uniqueId %@: %@
Error getting calendar item with UUID %@: %@
Error getting entity wrappers for event uuids %@: %@
Error getting all events with uniqueId %@: %@
saveEvent
removeEvent
Error setting invitation status for event: %@
Error importing ICS data into calendars %@: %@
Error getting default local calendar: %@
Non-delegate sources do not have their own default calendar.  Pass nil to get the default across all non-delegate sources
Error getting default calendar for new events: %@
You cannot set a default calendar on a non-delegate source.  Pass nil to set the default across all non-delegate sources
A delegate source's default calendar must be one of its own calendars.
Setting default calendar for new events to %{public}@ ("%@") in source %{public}@ (%{public}@ - "%@")
Setting default calendar for new events to %{public}@ ("%@")
Error setting default calendar for new events: %@
%s: Serializing %@ to path %@ for event store %@
%s: Creating directory at path %@
%s: Can't create draft event directory %@ with error %@
%s: Serializing event %@ with attendees %@ and with changeset %@ to file %@
%s: Failed to serialize changeset. Error: [%@]. Event [%@]. Changeset: [%@]
%s: Serialization successful
%s: Failed to serialize changeset event %@ with changeset %@ to file %@: %@
%s: Event has no changes (or was deleted).  Not serializing
%s: Loading event with occurrenceID %@ from path %@ for event store %@
%s: Unable to read data from path %@
%s: Draft at path %@ has incorrect version (%@ vs %@).  Deleting
%s: Failed to deserialize changeset. Error: [%@]. Data: [%@]
Discarding draft for event %@ because the draft was on a calendar that has been deleted.
%s: Found existing event: %@
%s: Computed diff from existing event: %@
%s: Made changeset from diff: %@
%s: Applied changes to event: %@
%s: Return deserialized event %@ with attendees %@
Discarding draft for event %@ because the draft was for an event that has been deleted.
%s: No file exists at path %@
%s: Failed to remove file from path %@ with error %@
%s: Removed file at path %@
Can't save reminder either because you have no access or you're trying to save using the legacy store, which is no longer supported
Malformed event URI (%@) passed to _reminderWithURI. Expected scheme: %@
Malformed event URI passed to _reminderWithURI: %@
Error getting closest occurrence date for event with row ID %i, databaseID %i : %@
Error asking daemon if events have occurrences after date: %@
Cached calendar has no calendarIdentifier: %{public}@
Malformed calendar URI passed to calendarWithExternalURI: %@
Error fetching unique identifiers: %d
Could not fetch error count: %@
Could not fetch errors by source: %@
Error getting occurrence cache occurrences for calendars %@ from daemon: %@
Error getting occurrence cache counts for calendars %@ from daemon: %@
The setting for showing declined events was not successfully set to %{BOOL}d.  Error: [%@]
Sending request to rebuild the occurrence cache.
The occurrence cache was rebuilt successfully.
The occurrence cache was not rebuilt successfully.  Error: [%@]
%s: Failed find out if birthday calendars are enabled with error %@
%s: Unable to set birthday calendars enabled with error %@
%s: Failed to get the Found in Mail calendar with error %@
%s: Could not insert the Found in Mail calendar because it already exists.
%s: Could not insert the Found in Mail calendar with error %@
%s: Could not remove the Found in Mail calendar with error %@
%s - confirmEventByRecordId failed with error %@
%s - event has no suggestions key
%s - promoting saveEvent %@ - had error %@
%s - removeEvent %@ - had error %@
%s - Notifying suggestions we have ignored event %@
%s - rejectEventByRecordId failed with error %@
Error determining if the suggested event calendar is modifiable: %@
%s: Failed to get the Natural Language Suggestions calendar with error %@
Error getting shared calendar invitations for entity types %i from daemon: %@
Error: calendar does not exist when calling respondToSharedCalendarInvitation. calendar: %@
Failed to respond to shared calendar invitation with calendar ID %{public}@, account ID %{public}@: %@
Error getting resource changes: %@
Error marking resource change alerted: %@
EKEventStore: Can't get event notification information. Error: [%@]
EKEventStore: Can't get event notification count. Error: [%@]
Error getting replied event invitation information: %@
Error fetching attachment with UUID. UUID: [%{public}@].  Error: [%@]
Error fetching attachment UUID by external ID. external ID: [%@].  Error: [%@]
Error refreshing source: %@
Unknown entity type: %d for object with rowid: %d
No object ID provided.  Will not find out if the object exists.
Error encountered while checking for existence of object with ID: [%@]  Error: [%@]
Rolling back changes after commit error: %@
Attempting to commit changes in event store: [%@].
Client not allowed to modify the calendar database.  Will not commit.
No changes detected.  Calling commit successful.
%s - Notifying suggestions we have deleted previously confirmed event %@
%s - deleteEventByRecordId failed with error %@
Error committing event store: [%@]
Failed to delete %{public}@ update/insert %{public}@
Got the wrong number of entity wrappers back; asked for %lud things but got %lud
%ld events were found for predicate: %@
Enumeration attempt for events that were fetched is complete.  Predicate: [%@]
Invalid fetchIdentifier given to cancelFetchRequest. Type: %{public}@
Error fetching alarm with UUID.  UUID: [%@].  Error: [%@]
Error fetching alarm with externalID.  externalID: [%@].  Error: [%@]
Error getting alarm occurrences in range: %@
%@: Error building fetch predicate for 'Time to Leave' events. Start date is nil.
%@: Error building fetch predicate for 'Time to Leave' events. End date is nil.
%@: Error building fetch predicate for 'Up Next' events. Start date is nil.
%@: Error building fetch predicate for 'Up Next' events. End date is nil.
Error fetching location authorization status for TTL: %@
Error registering for detailed change tracking: %@
Error unregistering for detailed change tracking: %@
Change data was the wrong size to hold the changes we received. Told of %lu inserts, %lu updates, and %lu deletes, but change data was only %lu bytes long.
A client is passing a token other than the one it most recently fetched to -markChangedObjectIDsConsumedUpToToken:. That's no longer supported.
Error marking changed object IDs as consumed: %@
Somebody called clearSuperfluousChanges. This call is no longer needed and does nothing.
Error getting defaultTimedAlarmOffset: %@
Error getting _defaultAllDayAlarmOffset: %@
Error in call to _saveWithoutNotify: %@
Cannot get source constraints for source %{public}@ because we don't have access to the entity type it supports
Error getting constraints for source: %@
Constraints data size is wrong.  Your version of EventKit is incompatible with the running version of calaccessd.
Error getting notificationCollection for source: %@
NotificationCollectionID requested when it has not yet been created. SourceID: %@
Error checking whether to permit email address: %@
Error checking whether to permitted phone number: %@
Error getting storage usage: %@
Posting synthetic route hypothesis for event external url = %{public}@, route hypothesis = %@
Could not post synthetic route hypothesis for event with external url = %{public}@, error = %d, route hypothesis = %@
Failed to create destination .icbu: %@
Failed to backup: %@
Failed to restore: %@
Attempt to set the default calendar for new reminders using EventKit. This is unsupported. You must use ReminderKit.
Couldn't find out what app opens URL as a universal link, trying to see what opens it as a custom URL scheme: %@
URL should be opened with the FaceTime app, but there was an error fetching FaceTime's application record: %@
Error getting claim binding for URL, error: %@
Failed to find app extension record for extension bundle identifier: %@
Containing record for app extension record could not be found or was the wrong type
Checking if we need to invalidate URL %@
No need to check URL %@
No uses found of %@
Found uses of %@
Not invalidating because state changed to %li while checking
Going to invalidate the URL %@
Unable to find application record for URL %@, not invalidating.
Could not load extension for extensionIdentifier: %@, error = %@
URL invalidated successfully: %@
Unable to invalidate URL: %@
Failed to invalidate virtual conference URL, extension = %@ request = %@ error = %@
ConferenceRenewal: Attempting to extend expiration of URL: %@ to date: %@
ConferenceRenewal: Didn't receive required arguments. URL = %@, expirationDate = %@. Stopping.
ConferenceRenewal: Unrecognized URL type. Stopping.
ConferenceRenewal: Unable to find application record for URL %@, not invalidating.
ConferenceRenewal: Could not load extension for extensionIdentifier: %@, error = %@
ConferenceRenewal: URL renewed successfully: %@
ConferenceRenewal: Unable to renew URL: %@, error = %@
ConferenceRenewal: Request to renew conference URL failed, extension = %@ request = %@ error = %@
Unable to find application record for URL %@, not generating a new URL.
Generated URL %@ to replace %@
Alarm has multiple triggers with the same type; an arbitrary one will be used.
Alarm has no usable triggers (%lu passed in)
Alarm has an unknown trigger type: %{public}@
Frozen reminder alarm being committed has a location alarm without a location alarm trigger. EKFrozenReminderAlarm=%@; _locationAlarm=%@, _locationAlarm.trigger=%@
Alarm to be saved doesn't have a parent reminder: %@
Couldn't fetch reminder to be saved: %@
Unknown alarm trigger type %@ on alarm %@ during cloning. Alarms might not be correctly matched.
Missing Subject, (invalid part-stat?) can't send iMIP event: %@
No email recipients for iMIP event: %@
Could not parse ICSDocument from data: %@
No 'address' given.  Will not create an adjusted address.
'nil' participant given to function: [%s].  Will not compute needs response state.
Migration returned error code %d
Skipping looking up predicted location because process is not entitled.
Failed to get map item from GEOMapService. error code = %ld, domain = %{public}@, error = %@
Got user interaction for mocked location of interest (%{public}@). Interaction type = %d
error reverse geocoding: %@
no results from reverse geocode for %@
reverse geocode timeout for %@
softlink:r:path:/System/Library/PrivateFrameworks/ReminderKit.framework/ReminderKit
softlink:r:path:/System/Library/PrivateFrameworks/ReminderKit.framework/ReminderKit
softlink:r:path:/System/Library/PrivateFrameworks/ReminderKit.framework/ReminderKit
softlink:r:path:/System/Library/PrivateFrameworks/ContactsAutocomplete.framework/ContactsAutocomplete
softlink:r:path:/System/Library/PrivateFrameworks/ReminderKit.framework/ReminderKit
softlink:r:path:/System/Library/PrivateFrameworks/ReminderKit.framework/ReminderKit
softlink:r:path:/System/Library/PrivateFrameworks/CoreSuggestions.framework/CoreSuggestions
softlink:r:path:/System/Library/PrivateFrameworks/ReminderKit.framework/ReminderKit
EKDirectorySearchResultSet
EKRecurrenceRule
NSCopying
EKSourceConstraints
EKFrozenReminderCalendar
EKPersistentSharee
Shared
EKFrozenReminderReminder
EKReminderKitSaveAdditions
EKPersistentCalendar
EKFeatureSet
EKAvailabilityCache
EKPredicateEvaluating
EKPersistentSyncError
EKPredicateEvaluator
CADPredicateValidator
NSObject
EKOccurrenceCacheSearch
EKCancellableRemoteOperation
EKSerializableParticipant
UnitTesting
EKPersistentNotification
EKCalendarNotificationReference
EKObject
EKFrozenMeltedPair
EKProtocolMutableObject
EKProtocolObject
EKRecurrenceGenerator
EKEventAction
EKAttendeeChange
EKOwnerIDProviding
EKPersistentRecurrenceRule
CADInterface
CADAccessInterface
CADDatabaseInterface
CADObjectInterface
CADSourceInterface
CADCalendarInterface
CADCalendarItemInterface
CADEventInterface
CADAlarmEngineInterface
CADNotificationMonitorInterface
CADSpotlightInterface
CADInternalInterface
CADTestingInterface
CADMigrationInterface
CADSyncInterface
CADCalendarToolInterface
CADNotificationCountInterface
CADDatabaseStorageManagementInterface
CADBackupRestoreInterface
CADDiagnosticInterface
CADErrorInterface
EKDaemonConnection
CADClientInterface
CADXPCProxyHelperDelegate
EKVirtualConferenceProvider
NSExtensionRequestHandling
EKPreferences
EKCalendarItemChange
EKNotificationChange
EKReminderFetchRequestToken
EKFetchRequestToken
EKReminderStore
EKUpdatedReminderBackingObjectProvider
EKVirtualConferenceRoomTypeDescriptor
EKVirtualConferenceURLDescriptor
EKVirtualConferenceDescriptor
EKStructuredLocationSemanticIdentifierGenerator
EKAutocompleteSearchResult
EKAutocompleterDelegate
EKAutocompleter
CNAutocompleteFetchDelegate
EKChangeListener
EKSuggestedEventInfo
EKParticipantForSorting
EKShareeChange
EKRecents
EKDirectoryResource
EKAutocompletePendingSearch
EKAutocompletePendingSearchProtocol
EKAutocompleteSearch
EKObjectChangeOwnerIDHelper
EKPersistentAttachment
EKDiff
EKObjectSummaryHelpers
EKAvailabilitySpan
CalDateRangeProtocol
EKFrozenReminderStructuredLocation
EKAccountRefresher
EKCalendarItem
EKOccurrenceCacheLocationSearch
EKCompatibility
EKTimedEventStorePurger
EKDirectoryLocation
EKPersistentLocation
EKFrozenReminderObject
EKDefaultSerializerFactory
EKParticipantToContactMatcher
EKNotificationCollectionOptions
EKNullFetchRequestToken
EKEvent_Shared
EKJunkInvitationProtocol_Shared
Deprecated
EKInviteeAlternativeTimeSearcher
EKAdditions
EKInviteReplyNotification
EKSyncStatusChangeListener
EKAttachmentChange
EKParticipant
EKIdentityProtocol
EKCalendarSharedCalendarNotification
EKAvailabilitySpanDate
EKAvailabilityCachedSpanRange
EKPersistentAttendee
EKCalendarSuggestionNotification
EKDirectoryPerson
EKREMCompletionStateReminderPredicate
EKAlarmSemanticIdentifierGenerator
EKCalendarNotification
EKDirectorySearchOperation
EKNotification
EKEventOccurrenceInfo
EKDirectorySearchQuery
EKCalendarEventInvitationNotification
EKCalendarEventInvitationNotificationAttendee
EKSerializableStructuredLocation
EKICSImporter
EKObjectChange
Reminders
EKBirthdayListener
CalContactsProviderDelegate
EKPersistentAlarm
EKOfficeHour
EKEphemeralCacheEventStoreProvider
EKEventStoreProvider
EKPersistentResourceChange
EKFrozenReminderRecurrenceRule
EKRecurrenceIdentifier
EKChangeSet
EKPersistentExceptionDate
EKNotificationCollection
EKCalendarInviteReplyNotification
EKEventFetchRequestToken
EKPredicateExpanding
EKPredicateSearch
EKResourceChangeNotificationChange
EKReminder
EKRecurrenceChange
_EKNotificationMonitor
EKDirectoryRecord
EKDebugPreferences
EKSecureKeyedArchiverSerializer
EKSerializer
EventKit
EKPersistentOrganizer
EKOrganizerChange
EKPersistentInviteReplyNotification
EKTravelAdvisoryTimelinessAuthority
CalActivatable
EKExceptionDate
EKPersistentEvent
EKObjectChangeSummarizer
EKTravelEngineHypothesis
NSMutableCopying
NSSecureCoding
NSCoding
EKMutableTravelEngineHypothesis
EKEventActionChange
EKWeakReference
EKPersistentObject
EKParticipantChange
EKGroupExpansionOperation
EKSerializableRecurrenceRule
EKTravelEngineUtilities
EKSharedEventStoreProvider
EKPersistentEventAction
EKAvailabilityUtilities
EKSyncStatusUtils
EKResourceChangeNotification
EKEvent
EKJunkInvitationProtocol_Private
EKOrganizer
EKREMReminderPredicate
EKRequestAvailabilityOperation
EKDataProtectionObserver
EKAttendee
EKAlarmChange
EKChangeTrackingClientId
EKSerializableEvent
EKEventActionHandler
EKObjectValidationContext
EKPersistentSuggestedEventInfo
EKDiagnosticsCollector
EKRecurrenceDayOfWeek
EKDirectoryGroup
EKDuetSignalEventSerializer
EKSpotlightSearch
UnitTest
EKCalendar
CGColorWrapper
EKCalendarShareeOrOwner
EKAlarm
EKVirtualConference
EKVirtualConferenceRoomType
EKVirtualConferenceJoinMethod
EKSharee
EKSource
EKVirtualConferenceExtensionContext
EKCalendarResourceChangeNotification
EKPersistentParticipant
EKCalendarChange
EKPredictedLocationOfInterest
EKTravelLookupManager
EKStructuredLocation
EKObjectID
EKRecurrenceEnd
EKPersistentCalendarItem
EKRelation
EKSerializableObject
EKAttachment
EKEventStore
EKMapsUtilities
EKEventChange
EKCalendarVisibilityManager
CADCalendarVisibilityManager
EKSerializableAttachment
EKEventStoreWeakWrapper
EKDaemonConnectionDelegate
EKResourceChange
EKSourceChange
EKSequenceToken
EKConferenceUtils
CachedApplicationRecord
EKConferenceInvalidationRecord
EKInviteeAlternativeTime
EKContactChange
EKFrozenReminderAlarm
EKiMIPHandler
EKiMIPUpdate
EKiMIPInvitation
EKiMIPCancel
EKiMIPReply
EKSyncError
EKFrozenReminderSource
EKReadWriteLock
EKCredentials
EKPersistentResourceChangeNotification
EKSuggestionNotificationChange
EKPersistentSource
EKConferenceDeserializationResult
ConferenceDatatypeConverter
EKConferencePersistence
EKSerializableAlarm
EKRecurrenceHelper
EKExceptionDateChange
EKConflictDetails
EKInviteReplyNotificationChange
EKUICreateEventIntent
EKUICreateEventIntentResponse
EKAvailabilityCachedSpan
EKCalendarPreferences
EKNotificationPreferences
CalendarAdditions
EKInviteeTimeSpan
EKStructuredLocationPrediction
initWithWeekday:number:
isString
setUserActivity:
notesAsString
initWithXPCConnection:protocol:synchronous:
stringByReplacingCharactersInRange:withString:
currentProcessIsFirstPartyCalendarApp
fetchRemindersWithDACalendarItemUniqueIdentifiers:inList:error:
removeObjectsInArray:
array
currentProcessIsPreferences
stringByReplacingOccurrencesOfString:withString:
initWithYear:month:day:hour:minute:second:timeZone:
isSubclassOfClass:
removeObserver:
initWithAllDBSequenceMap:
stringByTrimmingCharactersInSet:
removeObserver:name:
arrayByAddingObject:
arrayByAddingObjectsFromArray:
removeObserver:name:object:
initWithArray:
fileExistsAtPath:isDirectory:
setFormatterBehavior:
setValidator:
stringFromContact:style:
arrayByExcludingObjectsInArray:
removePreference:notificationName:
isSubsetOfSet:
initWithArray:copyItems:
stringFromDate:
arrayWithArray:
updateReminder:
earlierDate:
setValue:withKey:inDictionary:
arrayWithCapacity:
setFoundItemsHandler:
inputItems
stringFromPostalAddress:style:
setValueForPreference:value:notificationName:
stringRemovingMailto
arrayWithObject:
daCalendarItemUniqueIdentifier
nsDateWithLocalTimeZone:
updateTagsAndExecuteBlock:withContext:
initWithBundleIdentifier:allowPlaceholder:error:
insertObject:atIndex:
arrayWithObjects:count:
stringRemovingTel
fileURLWithPath:
daDisplayOrder
null
initWithBundleIdentifier:error:
insertObjects:atIndexes:
setWeekStart:
ekColor
initWithBytesNoCopy:length:freeWhenDone:
stringValue
setGeolocation:
number
isTUConversationLink:
setGivenName:
numberWithBool:
setWithArray:
intValue
stringWithCapacity:
setGroupIdentifier:
filterUsingPredicate:
setWithCapacity:
numberWithDouble:
integerForKey:
filteredArrayUsingPredicate:
stringWithCharacters:length:
setWithObject:
numberWithInt:
dataWithContentsOfFile:
setBool:forKey:
initWithCalendar:
stringWithFormat:
integerValue
filteredDictionaryPassingTest:
characterAtIndex:
numberWithInteger:
setBooleanPreference:value:notificationName:
setWithObjects:
dataWithPropertyList:format:options:error:
stringWithString:
initWithCalendarIDs:startDate:endDate:
uppercaseString
replaceCharactersInRange:withString:
setWithSet:
setBundleIDs:
numberWithUnsignedChar:
filteredSetUsingPredicate:
initWithCalendarIDs:startDate:endDate:contacts:
stringWithUTF8String:
setHost:
processInfo
filters
numberWithUnsignedInt:
setByAddingObject:
children
initWithCalendarIdentifier:
setHour:
databaseDirectory
processName
attendee
structuredAddress
urlMatchesOneOfMyEmails:
numberWithUnsignedInteger:
setByAddingObjectsFromArray:
setIcsUrl:
replaceObjectAtIndex:withObject:
object
setByAddingObjectsFromSet:
databaseInitOptions
setIdentifier:
setX_calendarserver_access:
ek_ios_dateForEndOfDayInTimeZone:
replaceObjectsInRange:withObjectsFromArray:
initWithCapacity:
objectAtIndex:
setX_wr_rsvpneeded:
elapsedTimeAsNumber:
userActivity
setYear:
objectAtIndexedSubscript:
isWebBrowser
subarrayWithRange:
userActivityData
submitWithHandler:networkActivity:
reportSharedCalendarInviteAsJunkForCalendarWithID:accountID:queue:completionBlock:
emailAddresses
substringFromIndex:
reputationStore
substringToIndex:
request
userInteractionWithPredictedLocationOfInterest:interaction:feedback:
substringWithRange:
attributeSet
objectForKey:
dateByAddingComponents:toDate:options:
objectForKeyedSubscript:
dateByAddingDays:inCalendar:
initWithContentsOfFile:
property
dateByAddingHours:inCalendar:
initWithCoordinate:addressDictionary:
setIncludeCalendarServers:
propertyForName:
requestCalendarAvailabilityWithAccountID:startDate:endDate:ignoredEventID:addresses:resultsBlock:completionBlock:
dateByAddingTimeInterval:
sharedAutoupdatingCurrentCalendar
setIncludeContacts:
encodeBool:forKey:
_urlForLocation:address:label:options:
setIncludeDirectoryServers:
propertyListWithData:options:format:error:
encodeInt:forKey:
sharedConnection
objectIDWithUUID:
_urlForMapItemHandles:options:
setCalendarDataContainerProvider:
setIncludeRecents:
encodeInteger:forKey:
sharedDefaults
initWithData:filename:
dateForDayInTimeZone:
setIncludeSuggestions:
encodeObject:forKey:
authorizationStatusForBundle:
dateForEndOfDayInTimeZone:
initWithData:options:error:
encodedData
requiresEndDateConversionFromGMTToEventTimeZone
authorizationStatusForBundleIdentifier:
objectsAtIndexes:
dateForStartOfDayInTimeZone:
intersectSet:
setInteger:forKey:
endCalDAVServerSimulationWithHostname:
dateFormatFromTemplate:options:locale:
objectsForKeys:notFoundMarker:
setIntegerPreference:value:notificationName:
initWithDateComponents:
intersectsRange:
dateFromComponents:
setCalendars:
intersectsSet:
colorOfCalendarToPasteTo
_handle
dateFromICSString:
floatValue
dateInFloatingTimeZoneFromDate:inTimeZone:
invalidate
publicABPersonFromContact:publicAddressBook:
floating
dateInTimeZone:fromFloatingDateInGMT:
initWithDictionary:
valueForKeyPath:
dateInTimeZone:fromTimeZone:
colorWithHexString:
resemblesEmailAddress
initWithDomain:
dateOnly
setRemoteObjectInterface:
initWithDomain:code:userInfo:
dateOnlyComponentsInCalendar:
occurrenceList
setChangeTrackingClientId:
initWithDomain:verb:parametersByName:
entityID
setRequestCancellationBlock:
formUnionWithCharacterSet:
dateRemovingTimeComponentsInCalendar:
queryString
values
setRequestCompletionBlock:
formattedAddressString
dateRoundedToNearestFifteenMinutesInCalendar:
setRequestInterruptionBlock:
enumerateContactsWithFetchRequest:error:usingBlock:
resetTimersAndWarnings
lastObject
freq
dateValue
enumerateDatesStartingAfterDate:matchingComponents:options:usingBlock:
lastPathComponent
verb
resolveMapItemLocallyFromHandle:completionHandler:
dateWithDatePartFromDate:timePartFromDate:inCalendar:
raise
operation
dateWithTimeInterval:sinceDate:
raise:format:
enumerateKeysAndObjectsUsingBlock:
setCn:
compact
invert
setColor:
dateWithTimeIntervalSince1970:
enumerateKeysAndObjectsWithOptions:usingBlock:
CDVStringByXMLUnquoting
resourceSpecifier
absoluteString
dateWithTimeIntervalSinceNow:
enumerateObjectsUsingBlock:
rangeOfString:
compare:options:
laterDate:
dateWithTimeIntervalSinceReferenceDate:
absoluteTime
rangeOfUnit:startDate:interval:forDate:
setInterruptionHandler:
enumerateObjectsWithOptions:usingBlock:
backwardsCompatibleConstraintsPathForName:
setRoute:
respondToSharedCalendarInvite:forCalendarWithID:accountID:queue:completionBlock:
orderedSetWithArray:
sharedService
CalAutoCommentPrefix
rangeWithStartDate:duration:
CalCalendarWithUnsanitizedCalendarIdentifier:
base64EncodedDataWithOptions:
setRouteType:
orderedSetWithCapacity:
initWithEntityType:changeID:
dayList
rangeWithStartDate:endDate:
base64EncodedStringWithOptions:
compareToLocalURL:
account
organizationName
CalContainsSubstring:
dayNumberList
supportsLocation
initWithEntityType:entityID:
length
comparison
CalDateFromBirthdayComponents:
setRrule:
setCompletionBlock:
accountID
restoreGeneration
initWithEntityType:entityID:databaseID:
beginExtensionRequestWithOptions:inputItems:completion:
isAbsolutePath
completeRequestReturningItems:completionHandler:
CalDictionaryWithEmptyObjectsRemoved
accountRefreshFinished:
setRsvp:
initWithEntityType:entityID:databaseID:generation:
beginExtensionRequestWithOptions:inputItems:error:
list
accountsSyncFinished:
CalDisplayName
origin
weakObjectsHashTable
isAfterDate:
birthday
initWithEntityType:filters:calendar:
resultType
weakObjectsPointerArray
setCompletionHandler:
CalFilterUsingBlock:
initWithEntityType:filters:source:
resume
fullDisplayStringWithTitle:address:
CalGregorianCalendarForTimeZone:
originalAlarmUID
setScheme:
setComponents:options:
weekStart
setSearchString:
CalGregorianGMTCalendar
CalIsAfterDate:
setSearchType:
loadedValues
errorWithDomain:code:userInfo:
CalIsAfterOrSameAsDate:
setSecond:
daysSpannedFromStartDate:toEndDate:allDay:inCalendar:
weekdayList
recentEventForAddress:displayName:kind:date:weight:metadata:options:
isBeforeDate:
CalIsBeforeDate:
birthdayStringForContactName:eventDate:birthDate:lunarCalendar:
CalIsBeforeOrSameAsDate:
component:fromDate:
whitespaceAndNewlineCharacterSet
whitespaceCharacterSet
componentForKey:
CalIsBetweenStartDate:endDate:
recordContactEvents:recentsDomain:sendingAddress:completion:
isCancelled
blockTitle
CalKeys
willChangeValueForKey:
componentKeys
blue
wkst
componentOccurrencesForKey:
localTimeZone
CalMap:
geoAddress
boolForKey:
components
CalOccurrencesForBirthday:inDateRange:
recordId
setSequence:
decodeBoolForKey:
boolValue
addAlarmWithTrigger:
CalSimulatedDateForNow
isCurrentLocation
wrappedPredicate
components:forDayInTimeZone:
roundToCurrentWeekInCalendar:withFirstWeekdayIndex:
geoMapItemHandle
build
decodeDictionaryWithKeysOfClass:objectsOfClass:forKey:
components:fromDate:
localeIdentifier
writeToFile:options:error:
addArray:toArray:
decodeIntForKey:
bundleForClass:
initWithExternalIdentifier:entityType:
x_apple_calendar_color
components:fromDate:toDate:options:
setCountLimit:
addArray:withKey:toStrongTableOfArrays:
locality
decodeIntegerForKey:
geocodeAddressString:completionHandler:
initWithExtractionGroupIdentifier:
eventEndDate
bundleId
x_wr_caldesc
routingModeEnumForCalRouteType:
localizedDescription
decodeObjectOfClass:forKey:
isDate
initWithFilters:operation:
bundleIdentifier
x_wr_calname
componentsInTimeZone:fromDate:
geocodeLocationString:withCompletionBlock:
initWithFireDate:interval:target:selector:userInfo:repeats:
localizedLongDate
decodeObjectOfClasses:forKey:
isDate:inSameDayAsDate:
symbolicColorForNewCalendarWithExistingSymbolicNames:
componentsJoinedByString:
localizedName
bundleRecord
year
getAppLinkWithURL:completionHandler:
initWithFireDate:serviceIdentifier:target:selector:userInfo:
bundleRecordForCurrentProcess
getBooleanPreference:defaultValue:
componentsSeparatedByCharactersInSet:
localizedShortTime
setKey:withArray:
localizedStringForKey:value:table:
componentsSeparatedByString:
bundleWithIdentifier:
setDaCalendarItemUniqueIdentifier:
initWithFormat:
getBytes:length:
setKey:withBoolean:
eventFromUniqueId:withCompletion:
computeRecurrenceEndDate:
bundleWithPath:
ICSDataWithOptions:
localizedStringForLabel:
initWithIdentifier:displayString:
byday
setKey:withDate:
MCIsManagedWithResultPtr:error:
localizedStringFromNumber:numberStyle:
shouldPermitOrganizerEmailFromJunkChecks:inReputationStore:
initWithIntent:response:
setKey:withDictionary:
bymonth
setDatabaseDirectory:
systemTimeZone
getIntegerPreference:defaultValue:
localizedStringWithFormat:
initWithKeyPointerFunctions:valuePointerFunctions:capacity:
setDatabaseInitOptions:
bymonthday
setKey:withObject:
shouldPermitOrganizerPhoneNumberFromJunkChecks:inReputationStore:
localizedStringWithValidatedFormat:validFormatSpecifiers:error:
initWithKeysToFetch:
recurrenceRuleFromICSString:
setKey:withPointerAddress:
getResourceValue:forKey:error:
defaultCenter
initWithLatitude:longitude:
setKey:withString:
bysetpos
getValueForPreference:expectedClass:
targetApplicationRecord
defaultInstance
initWithLocation:addressDictionary:region:areasOfInterest:
parseVCSData:
bytes
get_enableTravelAdvisoriesForAutomaticBehavior
URLByAppendingPathComponent:
initWithMachServiceName:options:
addEntriesFromDictionary:
setDateFormat:
byweekno
locationOfInterest
conferenceURLFromSources:
URLByAppendingPathExtension:
setDay:
defaultPermittedClasses
get_suggestedLocationsTestMode
addItem:withKey:toStrongTableOfArrays:
thoroughfare
givenName
conferenceURLHasAllowedScheme:
addListChangeItem:
URLByDeletingLastPathComponent
saveRequest
green
ticketForReverseGeocodeCoordinate:shiftLocationsIfNeeded:traits:
addListWithName:toAccountChangeItem:listObjectID:
locationUID
confidence
defaultProvider
recurrenceType
handleFailureInFunction:file:lineNumber:description:
saveSynchronouslyWithError:
timeInterval
confirmEventByRecordId:withCompletion:
defaultTimeZone
URLForMail:
recurrence_id
timeIntervalSince1970
handleFailureInMethod:object:file:lineNumber:description:
URLForNoMail
addObject:
timeIntervalSinceDate:
handleForMapItem:
addObject:toArray:
timeIntervalSinceNow
scheduleFetchRequest:
addObject:toSet:
eventStartDate
initWithNotificationName:callback:queue:
timeIntervalSinceReferenceDate
setShouldIncludeGroupResults:
URLFragmentAllowedCharacterSet
addObjectsFromArray:
setLocationAddress:
setShouldPinMonthDays:
addObserver:selector:name:
scheduleInRunLoop:
initWithObjects:
timeZoneForSecondsFromGMT:
URLWithString:
initWithObjectsAndKeys:
scheme
addObserver:selector:name:object:
deleteEventByRecordId:withCompletion:
UTF8String
setLocationName:
addObserverForName:object:queue:usingBlock:
deleteInteractionsWithGroupIdentifier:completion:
pathComponents
searchWithString:clientBundleID:completionHandler:
singleValue
addOperation:
deleteInteractionsWithIdentifiers:completion:
hasDuration
pathExtension
isEqualToArray:
initWithOpaqueKey:
timeZoneWithAbbreviation:
UUIDString
initWithOptions:capacity:
timeZoneWithName:
calDAVResultWithAddress:displayName:nameComponents:resultType:groupMembersProvider:userInfo:
eventUUID
region
isEqualToData:
second
addPointer:
isEqualToDate:
hasMailto
lowercaseString
constraintsURLForName:
addReminderChangeItem:
registerForContactChangeNotifications:
setDestination:
setManagement:
hasPrefix:
mainBundle
addReminderWithTitle:toListChangeItem:reminderObjectID:
cal_emailAddressString
timestampForNow
setManagementBundleIdentifier:
mainRunLoop
hasPropertyWithName:
performCalendarDirectorySearchWithAccountID:terms:recordTypes:resultLimit:resultsBlock:completionBlock:
deregisterForContactChangeNotifications:
addTimer:forMode:
registerReflectionForPreferenceWithNotificationName:
cal_hasSchemeMailto
performGroupExpansionWithAccountID:principalPath:completionBlock:
contactIdentifierIsMe:
titleAsString
isEqualToSet:
cal_hasSchemeTel
rejectEventByRecordId:withCompletion:
hasSuffix:
setMethod:
makeObjectsPerformSelector:withObject:
isEqualToString:
setMiddleName:
eventsFromPasteboard
cal_isEquivalentToEmailAddress:
hasTel
descriptionWithLocale:
isEqualToTimeZone:
initWithPlacemark:
cal_isEquivalentToPhoneNumber:
setMigrationVersion:inDictionary:
mapItem
descriptorForRequiredKeysForStyle:
performSelector:withObject:afterDelay:
sortDescriptorWithKey:ascending:
cal_phoneNumberString
initWithPredicate:limitWithStartDate:endDate:mustStartInInterval:
setMinimumEarlyFireProportion:
_setLaunchId:
mapItemForCurrentLocation
sortOrder
setSpotlightTesting:
cal_resourceSpecifierNoLeadingSlashes
setMinute:
eventsPendingChangesPath
contactStore
setStart:
addressDictionary
initWithProperty:comparison:dateValue:
contactType
sortedArrayUsingComparator:
setMonth:
initWithProperty:comparison:integerValue:
contactWithDisplayName:emailOrPhoneNumber:
personNameComponentsFromString:
sortedArrayUsingDescriptors:
initWithProperty:comparison:stringValue:
calculateETAWithCompletionHandler:
sortedArrayUsingSelector:
initWithQueryString:context:
personaIdentifierForAccountIdentifier:
trackedObjects
containingBundleRecord
sortedArrayWithOptions:usingComparator:
initWithQueue:andBlock:
containsDate:
phoneNumberWithStringValue:
setStartDateRestrictionThreshold:
initWithQueue:andBlock:throttle:
exceptionWithName:reason:userInfo:
calendarDateByAddingSeconds:
trackedObjectsDidUpdate:
containsObject:
dictionary
setNamePrefix:
placemark
excludeAllDayEvents
calendarDateByComponentwiseAddingComponents:
containsRange:
matchesOneOfMyEmails:
dictionaryWithCapacity:
hashTableWithOptions:
setDtend:
placemarkForAddress:withCompletionBlock:
calendarDateWithDate:timeZone:
setNameSuffix:
excludeDeclined
controlCharacterSet
dictionaryWithDictionary:
placemarkForLocation:withCompletionBlock:
setNaturalLanguageSuggestedEvent:
setDtstamp:
excludeDeclinedUnlessProposed
hexString
convertAbsoluteTime:fromTimeZone:toTimeZone:
alarmType
sourceID
setDtstart:
dictionaryWithExternalRepresentationData:
placemarkWithGEOMapItem:
initWithReminderChangeItem:insertIntoListChangeItem:
alarmUID
pointerFunctionsWithOptions:
excludeProposed
dictionaryWithObjects:forKeys:
_mapItemFromHandle:completionHandler:
dictionaryWithObjects:forKeys:count:
horizontalUncertainty
setDuration:
calendarIDs
excludeTimedEvents
host
didChangeValueForKey:
initWithRequest:
executeBlock
hour
postNotificationName:object:
setNickname:
isInteger
coordinate
postNotificationName:object:userInfo:
sequence
setEnablePropertyModificationLogging:
initWithSearchString:startDate:timeZone:
isKeyAvailable:
copy
sequenceForDatabaseID:
postalAddress
initWithSearchString:timeZone:
setNotesAsString:
humanReadableDescriptionWithStartDate:ofRecurrenceRuleICSString:isConcise:
trigger
copyItemAtURL:toURL:error:
setEnd:
postalAddressWithAddressBookDictionaryRepresentation:
triggerDate
initWithSet:
triggerDuration
isMainThread
metadataWithData:
differenceAsDateComponents:units:
triggerType
copyOccurrenceDatesBetweenStartDate:endDate:timeZone:limit:
method
preciseLocationAuthorizedForBundleIdentifier:
setObject:atIndexedSubscript:
allDBSequenceMap
middleName
serializeConference:serializationBlockTitle:
setObject:forKey:
predicate
expectedTravelTime
setSuggestedInvocationPhrase:
migrationVersionFromDictionary:
allKeys
setObject:forKeyedSubscript:
predicateForAllSuggestedEvents
minusSet:
allObjects
minute
stampedCopyWithGeneration:
typeWithIdentifier:
icsUrl
predicateForContactMatchingEKParticipantWithName:emailAddress:URL:predicateDescription:
allValues
initWithStartDate:endDate:
startAccessingSecurityScopedResource
unarchiveDictionaryFromData:permittedClasses:error:
month
allocWithZone:
setEventEndDate:
predicateForContactsMatchingPhoneNumber:
unarchiveDictionaryFromData:permittedClasses:strict:error:
initWithStartDate:endDate:calendarIDs:
extensionWithIdentifier:error:
setOfficeHours:forAccountWithID:queue:completionBlock:
countByEnumeratingWithState:objects:count:
monthList
setOnlyIncludeInitialDateIfItMatchesRecurrence:
extensionsWithMatchingAttributes:completion:
countForObject:
unifiedContactWithIdentifier:
serviceForEvents
setEventStartDate:
initWithStore:
unifiedContactsForHandleStrings:keysToFetch:
initWithStoreContainerToken:
countryCode
unifiedContactsMatchingPredicate:keysToFetch:
setEventTimeZone:
initWithString:
removeAllObjects
unifiedContactsMatchingPredicate:keysToFetch:error:
startOfDayForDate:
externalIdentifier
removeAllRecurrenceRules
setOriginalAlarmUID:
unionSet:
setExcludeAllDayEvents:
initWithStructuredLocation:proximity:
mustStartInInterval
setExcludeDeclined:
mutableCopy
initWithSuperclassDescription:
setExcludeDeclinedUnlessProposed:
setExcludeProposed:
initWithTimeInterval:
callStackSymbols
externalRepresentationDataWithDictionary:
initWithTimeInterval:sinceDate:
myEmailAddress
setExcludeTimedEvents:
isPathToBackupFile
setTitleAsString:
myFullName
setExportedInterface:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
initWithTimeIntervalSinceReferenceDate:
isPathToICalData
setAlarmUID:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
setExportedObject:
predicateWithBlock:
myShortDisplayName
unitTesting
initWithTimeZone:startDate:endDate:title:location:notes:participants:limit:
isPathToVCalData
predicateWithCalendarIDs:
universalLink
familyName
removeCharactersInString:
initWithTitle:URL:isBroadcast:
indexOfObject:
isPhoneNumber
predicateWithFormat:
nameComponentsWithFirstName:lastName:nickname:nameSuffix:
indexOfObjectPassingTest:
fetchAccountsWithError:
predicateWithLimit:
namePrefix
indexSetWithIndexesInRange:
predicateWithStartDate:endDate:timeZone:calendars:loadDefaultProperties:
unrecognizedProperties
initWithTitle:joinMethods:conferenceDetails:source:isWritable:
nameSuffix
indexesOfObjectsPassingTest:
distantFuture
initWithTitle:locationUID:
predicateWithStartDate:endDate:timeZone:eventUUID:calendars:
distantPast
setAllowDelegateSources:
predicateWithStartDate:title:calendars:
setFamilyName:
removeFromList
document
setFetchAttributes:
unsignedIntValue
removeFromParent
cancelAllOperations
predictedLocationOfInterestForEventTitle:eventLocation:calendarIdentifier:timeout:error:
doesNotRecognizeSelector:
setFetchContext:
setAllowedSourceIdentifiers:
unsignedIntegerValue
fetchCompletedRemindersForEventKitBridgingWithCompletionDateFrom:to:withListIDs:error:
newObjectID
anyObject
cancelCalendarAvailabilityRequestWithID:
fetchDefaultListWithError:
unsignedLongValue
domain
stopAccessingSecurityScopedResource
until
cancelCalendarDirectorySearchWithID:
currentCalendar
appendFormat:
storeDidChangeNotificationName
updateAccount:
cancelPreviousPerformRequestsWithTarget:selector:object:
initWithURL:
fetchIncompleteRemindersForEventKitBridgingWithDueDateFrom:to:withListIDs:error:
isSameDayAsDate:inCalendar:
currentHandler
setArray:
initForReadingFromData:error:
removeItemAtPath:error:
appendString:
donateInteractionWithCompletion:
fetchListWithObjectID:error:
initWithURL:error:
isSameWeekAsDate:inCalendar:
currentLocale
setArrivalDate:
initWithURL:limit:
fetchListsForEventKitBridgingWithError:
removeLastObject
string
doubleValue
currentProcessHasBirthdayModificationEntitlement
initWithURL:readonly:
fetchLocationsOfInterestAssociatedToIdentifier:withHandler:
initRecurrenceRuleWithObjectID:accountID:reminderID:frequency:interval:firstDayOfTheWeek:daysOfTheWeek:daysOfTheMonth:monthsOfTheYear:weeksOfTheYear:daysOfTheYear:setPositions:end:
stringAddingMailto
currentProcessHasBooleanEntitlement:
dtstart
capabilities
updateFolderListForAccountID:andDataclasses:isUserRequested:
currentProcessHasContactsUIEntitlement
initWithUUIDString:
setUnitTesting:
stringAddingTel
removeObject:
archiveDictionary:permittedClasses:error:
setPlacemark:
_place
capitalizedString
_trackReminderChangeItem:
nickname
currentProcessHasSyncClientEntitlement
archiveDictionary:permittedClasses:strict:error:
setAttendee:
stringByAddingPercentEncodingWithAllowedCharacters:
updateList:
fetchOfficeHoursForAccountWithID:queue:completionBlock:
setPort:
initRequiringSecureCoding:
removeObject:inRange:
stringByAppendingString:
initWithUniversalLink:
currentProcessHasTestingEntitlement
archivedDataWithRootObject:requiringSecureCoding:error:
fetchReminderWithDACalendarItemUniqueIdentifier:inList:error:
removeObjectAtIndex:
nonGregorianBirthday
initWithUserActivityData:
currentProcessIsAutomator
stringByDeletingPathExtension
removeObjectForKey:
fetchReminderWithObjectID:error:
currentProcessIsCalendarDaemon
stringByPaddingToLength:withString:startingAtIndex:
fetchRemindersForEventKitBridgingWithListIDs:error:
removeObjectsAtIndexes:
setFirstWeekday:
stringByRemovingPercentEncoding
currentProcessIsDataAccess
removeObjectsForKeys:
locations
setLocations:
groups
setGroups:
resources
setResources:
people
setPeople:
.cxx_destruct
_locations
_groups
_resources
_people
T@"NSSet",&,N,V_locations
T@"NSSet",&,N,V_groups
T@"NSSet",&,N,V_resources
T@"NSSet",&,N,V_people
init
copyWithZone:
_resetInternalState
rollback
knownSingleValueKeysForComparison
frozenClass
knownIdentityKeysForComparison
recurrenceRuleWithType:interval:end:
_ekWeekdayFromCalDayOfWeek:
_calDayOfWeekFromEKWeekday:
iCalendarValueFromRecurrenceType:
iCalendarValueFromDayOfTheWeek:
iCalendarValueFromDate:isDateOnly:isFloating:
daysTypeForDayArray:
_acceptableStartDateRangeForDailyRecurrenceWithCurrentStartDate:
_acceptableStartDateRangeForWeeklyRecurrenceWithCurrentStartDate:calendar:
_acceptableStartDateRangeForMonthlyRecurrenceWithCurrentStartDate:calendar:
_acceptableStartDateRangeForYearlyRecurrenceWithCurrentStartDate:calendar:
initRecurrenceWithFrequency:interval:daysOfTheWeek:daysOfTheMonth:monthsOfTheYear:weeksOfTheYear:daysOfTheYear:setPositions:end:
initRecurrenceWithFrequency:interval:end:
UUID
setUUID:
description
dateComponents
calendarIdentifier
frequencyRaw
setFrequencyRaw:
frequency
setFrequency:
interval
setInterval:
endDate
setEndDate:
count
setCount:
recurrenceEnd
setRecurrenceEnd:
cachedEndDate
setCachedEndDate:
cachedEndDateTimeZone
setCachedEndDateTimeZone:
invalidateCachedEndDate
firstDayOfTheWeekRaw
setFirstDayOfTheWeekRaw:
firstDayOfTheWeek
setFirstDayOfTheWeek:
specifier
setSpecifier:
_recurrenceHelper
daysOfTheWeek
setDaysOfTheWeek:
daysOfTheMonth
setDaysOfTheMonth:
daysOfTheYear
setDaysOfTheYear:
weeksOfTheYear
setWeeksOfTheYear:
monthsOfTheYear
setMonthsOfTheYear:
setPositions
setSetPositions:
_updateSpecifierIfNeeded
dirtyStateMayAffectExceptionDates
mayOccurAfterDate:
pinToEndsOfMonthsWithCalendarItem:
isWeekdayRule
isWeekendRule
isAnyDayRule
isSimpleRule
_adjustDateIntoUTC:dateOnly:floating:
stringValueAsDateOnly:isFloating:
humanReadableDescriptionWithStartDate:
humanReadableDescriptionWithStartDate:isConcise:
hasDuplicateMonthsOfYear
newStartDateIsValid:currentStartDate:calendar:
newStartDateIsInvalid:currentStartDate:calendar:
_acceptableStartDateRangeWithCurrentStartDate:calendar:
isEqualToRecurrenceRule:
shouldPinMonthDays
usesEndDate
_shouldPinMonthDays
_usesEndDate
TB,R,N,V_shouldPinMonthDays
T@"NSDateComponents",R,N
TB,R,V_usesEndDate
T@"NSString",R,N
T@"NSDate",R,N
TB,R,N
T@"EKRecurrenceEnd",C,N
Tq,R,N
T@"NSArray",R,N
allAllowSourceConstraints
initWithCDBSourceConstraintFlags:
maxAlarmsAllowed
setMaxAlarmsAllowed:
maxRecurrencesAllowed
setMaxRecurrencesAllowed:
supportsAlarmTriggerIntervals
setSupportsAlarmTriggerIntervals:
supportsAlarmTriggerDates
setSupportsAlarmTriggerDates:
supportsAlarmsTriggeringAfterStartDate
setSupportsAlarmsTriggeringAfterStartDate:
snoozeAlarmRequiresDetach
setSnoozeAlarmRequiresDetach:
organizerCanSeeAttendeeStatuses
setOrganizerCanSeeAttendeeStatuses:
inviteesCanSeeAttendeeStatuses
setInviteesCanSeeAttendeeStatuses:
statusesAreAccurate
setStatusesAreAccurate:
supportsIncomingInvitations
setSupportsIncomingInvitations:
supportsOutgoingInvitations
setSupportsOutgoingInvitations:
requiresOutgoingInvitationsInDefaultCalendar
setRequiresOutgoingInvitationsInDefaultCalendar:
supportsInvitationModifications
setSupportsInvitationModifications:
supportsEventForwarding
setSupportsEventForwarding:
supportsResponseComments
setSupportsResponseComments:
deliverySourceOrExternalIDRequiredForResponse
setDeliverySourceOrExternalIDRequiredForResponse:
proposedStatusRequiredForResponse
setProposedStatusRequiredForResponse:
declinedStatusChangeRequiresNoPendingStatus
setDeclinedStatusChangeRequiresNoPendingStatus:
eventDurationConstrainedToRecurrenceInterval
setEventDurationConstrainedToRecurrenceInterval:
occurrencesMustOccurOnSeparateDays
setOccurrencesMustOccurOnSeparateDays:
futureStartDateLimitedToOccurrenceCacheBounds
setFutureStartDateLimitedToOccurrenceCacheBounds:
supportsRecurrencesOnDetachedEvents
setSupportsRecurrencesOnDetachedEvents:
recurrencesShouldPinToMonthDays
setRecurrencesShouldPinToMonthDays:
requiresAttendeeSearchInSingleAccount
setRequiresAttendeeSearchInSingleAccount:
mustAcknowledgeMasterEvent
setMustAcknowledgeMasterEvent:
canSetAvailability
setCanSetAvailability:
eventAvailabilityLimited
setEventAvailabilityLimited:
requiresMSFormattedUID
setRequiresMSFormattedUID:
shouldCancelDeletedEvents
setShouldCancelDeletedEvents:
shouldDeclineDeletedInvitations
setShouldDeclineDeletedInvitations:
supportsStructuredLocations
setSupportsStructuredLocations:
supportsReminderActions
setSupportsReminderActions:
supportsReminderLocations
setSupportsReminderLocations:
supportsAlarmProximity
setSupportsAlarmProximity:
allowsCalendarAddDeleteModify
setAllowsCalendarAddDeleteModify:
allowsTasks
setAllowsTasks:
allowsEvents
setAllowsEvents:
supportsURLField
setSupportsURLField:
supportsAllDayDueDates
setSupportsAllDayDueDates:
supportsSharedCalendars
setSupportsSharedCalendars:
isFacebook
setIsFacebook:
recurrenceSeriesMustIncludeMoreThanFirstOccurrence
setRecurrenceSeriesMustIncludeMoreThanFirstOccurrence:
supportsPrivateEvents
setSupportsPrivateEvents:
prohibitsPrivateEventsWithAttendees
setProhibitsPrivateEventsWithAttendees:
supportsAvailabilityRequests
setSupportsAvailabilityRequests:
supportsIgnoringEventsInAvailabilityRequests
setSupportsIgnoringEventsInAvailabilityRequests:
supportsLocationDirectorySearches
setSupportsLocationDirectorySearches:
requiresSamePrivacyLevelAcrossRecurrenceSeries
setRequiresSamePrivacyLevelAcrossRecurrenceSeries:
supportsInboxAvailability
setSupportsInboxAvailability:
prohibitsMultipleMonthsInYearlyRecurrence
setProhibitsMultipleMonthsInYearlyRecurrence:
prohibitsMultipleDaysInMonthlyRecurrence
setProhibitsMultipleDaysInMonthlyRecurrence:
prohibitsYearlyRecurrenceInterval
setProhibitsYearlyRecurrenceInterval:
requiresOccurrencesConformToRecurrenceRule
setRequiresOccurrencesConformToRecurrenceRule:
prohibitsDetachmentOnCommentChange
setProhibitsDetachmentOnCommentChange:
allowsProposeNewTime
setAllowsProposeNewTime:
prohibitsICSImport
setProhibitsICSImport:
supportsAutoGeocodingStructuredLocations
setSupportsAutoGeocodingStructuredLocations:
supportsJunkReporting
setSupportsJunkReporting:
supportsPhoneNumbers
setSupportsPhoneNumbers:
attendeesUseDeletedByOrganizerStatus
setAttendeesUseDeletedByOrganizerStatus:
prohibitsSlicingEventsWithAttendees
setProhibitsSlicingEventsWithAttendees:
supportsSubscribedCalendars
setSupportsSubscribedCalendars:
supportsManagedSubscribedCalendars
setSupportsManagedSubscribedCalendars:
supportsSubscriptionMirroring
setSupportsSubscriptionMirroring:
supportsParticipantRoles
setSupportsParticipantRoles:
supportsAttachments
setSupportsAttachments:
requiresOpeningAttachmentAsLink
setRequiresOpeningAttachmentAsLink:
shouldUseDeleteAndAddInsteadOfMoveBetweenCalendars
setShouldUseDeleteAndAddInsteadOfMoveBetweenCalendars:
supportsFloatingTimeZone
setSupportsFloatingTimeZone:
prohibitsUsingEventOrganizerEmailWhenComposingMail
setProhibitsUsingEventOrganizerEmailWhenComposingMail:
supportsDelegation
setSupportsDelegation:
supportsDelegateEnumeration
setSupportsDelegateEnumeration:
supportsInvitationModificationsWithoutNotification
setSupportsInvitationModificationsWithoutNotification:
supportsRecurrenceSplit
setSupportsRecurrenceSplit:
supportsPush
setSupportsPush:
supportsTravelTime
setSupportsTravelTime:
requiresSeparateFilesForAllAttachments
setRequiresSeparateFilesForAllAttachments:
occurrenceOrderEnforcedAfterDetachment
setOccurrenceOrderEnforcedAfterDetachment:
allowsPrivateEventAccessByDelegate
setAllowsPrivateEventAccessByDelegate:
_flags
Ti,N
TB,N
initWithREMObject:inStore:withChanges:
meltedClass
initNewListInStore:
_list
remObjectID
title
unlocalizedTitle
colorStringRaw
sharingStatus
ekSharingStatusFromREMSharingStatus:
isPublished
publishURLString
REMColorFromEKHexColorString:
hexColorStringFromREMColor:
source
_account
uniqueIdentifier
_applyChanges:error:
_applyChangesToSaveRequest:error:
frozenReminderSource
updateListWithSaveRequest:error:
displayOrder
flags
allowedEntities
allAlarms
sharees
symbolicColorName
externalID
isColorDisplayOnly
sharedOwnerName
syncError
_listChange
defaultPropertiesToLoad
relations
entityType
displayName
setDisplayName:
address
setAddress:
firstName
setFirstName:
lastName
setLastName:
setExternalID:
shareeStatusRaw
setShareeStatusRaw:
shareeAccessLevelRaw
setShareeAccessLevelRaw:
setOwner:
owner
shareeMuteRemoval
setShareeMuteRemoval:
contactPredicate
initNewReminderInStore:
_reminder
_copyToNewList:error:
_fixAlarmUUIDsForClone:from:
calendarItemIdentifier
calendar
calendarItemExternalIdentifier
structuredLocation
notes
URLString
lastModifiedDate
creationDate
allAlarmsSet
alarms
startDateComponents
dueDateComponents
timeZone
completionDate
priority
appLinkData
actionString
uniqueID
structuredLocationWithoutPrediction
hasRecurrenceRules
hasAttendees
hasNotes
attendeesRaw
recurrenceRulesSet
clientLocation
organizer
selfAttendee
originalItem
travelStartLocation
attachmentsSet
detachedItems
ekExceptionDates
defaultAlarmRemoved
defaultAlarmWasDeleted
forceUpdateFrozenCalendar:
propertyKeyForUniqueIdentifier
externalIDTag
setExternalIDTag:
externalModificationTag
setExternalModificationTag:
syncToken
setSyncToken:
externalRepresentation
setExternalRepresentation:
setUnlocalizedTitle:
lastSyncTitle
setLastSyncTitle:
setColorDisplayOnly:
setSymbolicColorName:
setColorStringRaw:
setDisplayOrder:
setFlags:
setSharingStatus:
setSharedOwnerName:
sharedOwnerURLString
setSharedOwnerURLString:
sharingInvitationResponse
setSharingInvitationResponse:
setPublishURLString:
setIsPublished:
setPublished:
notifications
setNotifications:
setSharees:
setSource:
invitationStatus
setInvitationStatus:
setAllowedEntities:
selfIdentityDisplayName
setSelfIdentityDisplayName:
selfIdentityEmail
setSelfIdentityEmail:
selfIdentityPhoneNumber
setSelfIdentityPhoneNumber:
selfIdentityAddressString
setSelfIdentityAddressString:
selfIdentityFirstName
setSelfIdentityFirstName:
selfIdentityLastName
setSelfIdentityLastName:
ownerIdentityDisplayName
ownerIdentityId
setOwnerIdentityId:
setOwnerIdentityDisplayName:
ownerIdentityEmail
setOwnerIdentityEmail:
ownerIdentityPhoneNumber
setOwnerIdentityPhoneNumber:
ownerIdentityAddressString
setOwnerIdentityAddressString:
ownerIdentityFirstName
setOwnerIdentityFirstName:
ownerIdentityLastName
setOwnerIdentityLastName:
setNotes:
pubcalAccountID
setPubcalAccountID:
subcalAccountID
setSubcalAccountID:
subcalURL
setSubcalURL:
pushKey
setPushKey:
digest
setDigest:
setAllAlarms:
refreshDate
setRefreshDate:
refreshInterval
setRefreshInterval:
subscriptionID
setSubscriptionID:
lastSyncStartDate
setLastSyncStartDate:
lastSyncEndDate
setLastSyncEndDate:
setSyncError:
maxAttendees
setMaxAttendees:
locale
setLocale:
isTravelAdvisorySupported
isConservativeEntryEnabled
areVehicleTriggersEnabled
eventDetailsDayPreviewEnabled
calendarListViewCellsFeaturesExtraContent
calendarListViewCellsFeaturesAttendeeInformation
areQuickActionsSupported
areApplicationBadgesSupported
isSuggestionsEnabled
isContinuitySupported
areContextualRemindersSupported
mustDisplaySplashScreenToUser
userAcknowledgedSplashScreen
_currentSplashScreenVersion
automaticGeocodingEnabled
eventsFoundInAppsEnabled
_isValidStartDate:endDate:
_generateEventKitSpansFromPersistenceSpans:
_convertType:
_logRequestElapsedTime:forNumberOfAddresses:
initWithSource:
_cachedSpanResultsBetweenStartDate:endDate:ignoredEventID:addresses:
_validateRequestStartDate:endDate:addresses:error:
requestAvailabilityBetweenStartDate:endDate:ignoredEventID:addresses:resultsBlock:completionBlock:
cachedAvailabilityInDateRange:ignoredEventID:addresses:
cachedAvailabilityInDateRange:ignoredEventID:addresses:results:
cancelAvailabilityRequestWithID:
_handleResults:resultsBlock:ignoredEventID:
_dictionaryForIgnoredEventID:
_sourceIsInvalid
_accountID
_sourceSupportsAvailabilityRequests
_processingQueue
_callbackQueue
_addressesToCachedSpanRanges
_ignoredEventIDsToAddressBasedCaches
_nextRequestID
_cancelledID
ekPredicateEvaluateWithObject:
setErrorType:
errorType
setErrorCode:
errorCode
setUserInfoData:
userInfoData
evaluatePredicate:withObject:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
structuredData
setStructuredData:
localStructuredData
setLocalStructuredData:
_structuredDataDictionaryFromData:local:
_dataFromStructuredDataDictionary:local:
_customObjectForKey:local:
_setCustomObject:forKey:local:
customObjectForKey:
setCustomObject:forKey:
localCustomObjectForKey:
setLocalCustomObject:forKey:
willSave
T@"NSData",C,N
searchWithCalendars:searchTerm:store:callback:
cancel
disconnected
receivedBatchResultsFromServer:finished:
initWithCalendars:searchTerm:store:callback:
performSearchOperation:inCalendars:withEventStore:andSearchTerm:
searchTerm
_calendars
_searchTerm
_store
_callback
_replyID
_canceled
classesForKey
initWithParticipant:
createAttendee:
name
setName:
emailAddress
setEmailAddress:
phoneNumber
setPhoneNumber:
setUrl:
participantRole
setParticipantRole:
participantStatus
setParticipantStatus:
participantType
setParticipantType:
_name
_emailAddress
_phoneNumber
_url
_participantRole
_participantStatus
_participantType
T@"NSString",C,N,V_name
T@"NSString",C,N,V_emailAddress
T@"NSString",C,N,V_phoneNumber
T@"NSURL",&,N,V_url
Tq,N,V_participantRole
Tq,N,V_participantStatus
Tq,N,V_participantType
constraints
T@"NSString",R,D,N
sourceType
Tq,D,N
T@"NSString",C,D,N
defaultAlarmOffset
T@"NSNumber",C,D,N
disabled
TB,D,N
onlyCreatorCanModify
preferredEventPrivateValue
Ti,D,N
strictestEventPrivateValue
hostURL
setHostURL:
initWithType:objectID:date:eventStore:
initWithType:objectID:eventStore:
notification
_notification
_notificationTypeForResourceChange:notificationType:
type
objectID
eventStore
_date
_lock
_type
_objectID
_eventStore
Ti,R,N,V_type
T@"EKCalendarNotification",R,N
T@"EKObjectID",R,N,V_objectID
T@"EKEventStore",R,N,V_eventStore
_object:equalsObject:forKeys:compareImmutableKeys:ignoringProperties:
_compareKnownKeys:forObject:againstObject:compareImmutableKeys:propertiesToIgnore:
_compareKnownKeys:forObject:againstObject:compareIdentityKeys:compareImmutableKeys:propertiesToIgnore:
_compareNonIdentityKeys:forObject:againstObject:compareImmutableKeys:propertiesToIgnore:
_compareIdentityKeysForObject:againstObject:propertiesToIgnore:
_compareSingleValueRelationshipKeys:forObject:againstObject:propertiesToIgnore:
_compareMultiValueRelationshipKeys:forObject:againstObject:propertiesToIgnore:
_compareMutliValueRelationshipKey:forObject:againstObject:propertiesToIgnore:
_compareRelationshipObject1:againstRelationshipObject2:propertiesToIgnore:
_objects:haveSameMeltedClass:frozenClass:
_createNonPartialObjectFromObject:ifPropertyIsUnavailable:
propertiesUnavailableForPartialObjects
objectsIDsExistingInStoreFromObjects:eventStore:
_array:intersectedWithSet:minusSet:
initWithObject:
changeSet
existingMeltedObject
frozenObject
frozenObjectInStore:
isPropertyUnavailable:
meltedObjectInStore:
setValue:forKey:
valueForKey:
isCompletelyEqual:
isEqual:ignoringProperties:
reset
isFrozen
isPartialObject
semanticIdentifier
CADObjectID
T@"EKObjectID",R,N
T@"CADGenerationStampedObjectID",R,N
isNew
canBeConvertedToFullObject
preFrozenRelationshipObjects
T@"NSDictionary",R,N
initWithPersistentObject:
initWithPersistentObject:objectForCopy:
backingObject
setBackingObject:
_isPropertyUnavailable:convertToFullObjectIfUnavailable:
hasChanges
isDifferentFromCommitted
isEqual:comparingKeys:compareImmutableKeys:ignoringProperties:
rebase
rebaseToEventStore:
rebaseSkippingRelationProperties:
rebaseSkippingRelationProperties:toEventStore:
setEventStore:
rowID
existsInStore
hasEverBeenCommitted
mutableCopyWithZone:
shallowCopyWithoutChanges
_copyWithoutChangesInZone:
duplicate
duplicateToEventStore:
committedCopy
snapshotCopy
snapshotCopyWithPropertyKeysToCopy:
snapshotCopyWithPropertyKeysToCopy:propertyKeysToSkip:
previouslySavedCopy
_recursiveSnapshotCopyWithPropertyAccessor:propertyKeysToCopy:propertyKeysToSkip:recurseOnWeakRelations:
_reset
refresh
refreshAndNotify:
committedValueForKey:
markAsNew
markAsNotNew
markAsDeleted
markAsUndeleted
markAsSaved
markAsCommitted
_performBlockOnOwnedCachedRelatedObjects:
updatePersistentValueForKeyIfNeeded:
_updatePersistentValueForKey:
_propertyValueForKey:
insertPersistentObjectIfNeeded
updatePersistentObject
updatePersistentObjectSkippingProperties:
deletePersistentObject
addCoCommitObject:
persistentObject
setPersistentObject:
setChangeSet:
_cachedMeltedObjects
set_cachedMeltedObjects:
additionalFrozenProperties
setAdditionalFrozenProperties:
additionalMeltedObjects
setAdditionalMeltedObjects:
_cachedValues
set_cachedValues:
_validationContext
set_validationContext:
_persistentObject
_changeSet
__cachedMeltedObjects
_additionalFrozenProperties
_additionalMeltedObjects
__cachedValues
__validationContext
T@"EKPersistentObject",&,N,V_persistentObject
T@"EKEventStore",&,N
T@"EKChangeSet",&,N,V_changeSet
T@"NSMutableDictionary",&,N,V__cachedMeltedObjects
T@"NSDictionary",&,N,V_additionalFrozenProperties
T@"NSDictionary",&,N,V_additionalMeltedObjects
T@"NSMutableDictionary",&,N,V__cachedValues
T@"EKObjectValidationContext",&,N,V__validationContext
T@"EKPersistentObject",&,N
TB,R,N,GisNew
_convertEKRecurrenceFrequencyToCalRecurrenceFrequency:
_setupForEKEvent:adjustDatesForAllDayEvents:
copyOccurrenceDatesWithEKEvent:startDate:endDate:timeZone:limit:
copyOccurrenceDatesWithEKEvent:startDate:endDate:timeZone:exceptionDates:limit:adjustDatesForAllDayEvents:
copyOccurrenceDatesWithEKEvent:recurrenceRule:startDate:endDate:timeZone:limit:
copyOccurrenceDatesWithEKEvent:recurrenceRule:startDate:endDate:timeZone:exceptionDates:limit:adjustDatesForAllDayEvents:
copyOccurrenceDatesWithEKEvent:recurrenceRule:startDate:endDate:timeZone:exceptionDates:limit:
_copyOccurrenceDatesWithEKEvent:recurrenceRule:startDate:endDate:timeZone:exceptionDates:limit:adjustDatesForAllDayEvents:
adjustedExceptionDatesFromDates:fromGMTToTimeZone:
isOccurrenceDate:validForEvent:
occurrenceDate:matchesRecurrenceRule:forEvent:includeDetachedEventsInSeries:
nextOccurrenceDateWithEKRecurrences:forCalendarItem:initialDate:afterDate:
nextOccurrenceDateWithEKRecurrences:forCalendarItem:initialDate:afterDate:inclusive:
nextOccurrenceDateWithEKRecurrences:forCalendarItem:exceptionDates:initialDate:afterDate:
nextOccurrenceDateWithEKRecurrences:forCalendarItem:exceptionDates:initialDate:afterDate:inclusive:
_prepareForEKRecurrence:forCalendarItem:
externalFolderID
setExternalFolderID:
externalScheduleID
setExternalScheduleID:
T@"NSString",C,N
initWithChangeProperties:
ownerID
attendeeRole
attendeeStatus
attendeeEmailAddress
_attendeeRole
_attendeeStatus
_ownerID
_attendeeEmailAddress
T@"EKObjectID",R,N,V_ownerID
TB,R,N,V_attendeeRole
TB,R,N,V_attendeeStatus
T@"NSString",R,N,V_attendeeEmailAddress
alternateUniverseClass
dealloc
_daemonRestarted
CADDatabaseSetInitializationOptions:reply:
CADDatabaseGetAccess:
CADDatabaseResetWithReply:
CADDatabaseGetUUID:
CADDatabaseRegisterForDetailedChangeTrackingInSource:reply:
CADDatabaseUnregisterForDetailedChangeTracking:
CADDatabaseFetchChangedObjectIDs:
CADDatabaseFetchObjectChangesForEntityTypes:insideObject:reply:
CADDatabaseMarkChangedObjectIDsConsumedUpToSequenceToken:reply:
CADDatabaseMarkIndividualChangesConsumed:reply:
CADDatabaseGetSequenceToken:
CADDatabaseGetChangesSinceSequenceToken:reply:
CADDatabaseGetChangedEntityIDsSinceTimestamp:reply:
CADDatabaseImportEvents:fromICSData:intoCalendarsWithIDs:optionsMask:batchSize:reply:
CADDatabaseExportICSDataForCalendarItems:options:reply:
CADDatabaseExportICSDataForCalendar:options:reply:
CADDatabaseSetShowsDeclinedEvents:reply:
CADDatabaseRebuildOccurrenceCacheWithReply:
CADDatabaseCommitDeletes:updatesAndInserts:andFetchChangesSinceTimestamp:withReply:
CADDatabaseCanModifyCalendarDatabase:
CADDatabaseLastConfirmedSplashScreenVersion:
CADDatabaseMigrateSubscribedCalendar:toSource:reply:
CADDatabaseGetDefaultAlarmOffsetForAllDay:reply:
CADObjectExists:reply:
CADObjectsExist:reply:
CADObject:getPropertiesWithNames:reply:
CADObjects:getPropertiesWithNames:reply:
CADObject:getPropertyWithName:reply:
CADObject:getStringPropertyWithName:reply:
CADObject:getNumberPropertyWithName:reply:
CADObject:getDatePropertyWithName:reply:
CADObject:getDataPropertyWithName:reply:
CADObject:getSecurityScopedURLWrapperPropertyWithName:reply:
CADObject:getRelatedObjectWithRelationName:reply:
CADObject:getRelatedObjectsWithRelationName:reply:
CADObjectIsManaged:reply:
CADDatabaseGetSourcesWithFaultedProperties:reply:
CADDatabaseGetLocalSourceWithEnableIfNeeded:reply:
CADDatabaseGetLocalBirthdaySource:
CADSourceGetConstraints:reply:
CADSourceGetNotificationCollection:reply:
CADSourceRefresh:isUserRequested:reply:
CADCountCalendarItemsOfType:inSource:reply:
CADRemoveCalendarItemsOlderThanDate:ofType:inSource:reply:
CADSourceGetGrantedDelegatesList:reply:
CADSourceUpdateGrantedDelegate:action:sourceID:reply:
CADSourceAddExchangeDelegateWithName:emailAddress:toSourceWithID:reply:
CADSourceRemoveExchangeDelegateWithID:reply:
CADDatabaseGetCalendarsWithFaultedProperties:reply:
CADCalendar:hasEvents:
CADDatabaseGetCalendarItemWithUUID:reply:
CADDatabaseGetCalendarItemsWithUUIDs:inCalendars:propertiesToLoad:reply:
CADDatabaseGetCalendarItemsWithUniqueIdentifier:inCalendar:reply:
CADDatabaseGetAlarmWithExternalID:reply:
CADDatabaseFetchCalendarItemsWithPredicate:entityType:fetchIdentifier:synchronous:reply:
CADDatabaseCancelFetchRequestWithIdentifier:
CADDatabaseiTIPImport:intoCalendarID:reply:
CADDatabaseExportICSForCalendarItemWithID:occurrenceDate:options:reply:
CADDatabaseGetDefaultLocalCalendarWithReply:
CADDatabaseGetOrCreateSubscribedCalendarsSource:
CADDatabaseGetOrCreateBirthdayCalendar:
CADDatabaseGetDefaultCalendarForNewEventsInDelegateSource:withReply:
CADDatabaseSetDefaultCalendarForNewEvents:delegateSource:reply:
CADDatabaseGetEventWithEventIdentifier:reply:
CADDatabaseGetEventWithUniqueID:reply:
CADDatabaseGetAllEventsWithUniqueID:reply:
CADDatabaseGetBirthdayCalendarEnabledWithReply:
CADDatabaseSetBirthdayCalendarEnabled:withReply:
CADDatabaseGetSuggestedEventCalendarWithReply:
CADDatabaseGetNaturalLanguageSuggestedEventCalendarWithReply:
CADDatabaseCanModifySuggestedEventCalendar:
CADDatabaseInsertSuggestedEventCalendarWithReply:
CADDatabaseRemoveSuggestedEventCalendarWithReply:
CADOccurrenceCacheGetOccurrenceCountsForCalendars:reply:
CADOccurrenceCacheGetOccurrencesForCalendars:onDay:reply:
CADOccurrenceCacheGetOccurrenceDateOfEventWithObjectID:nearestDate:prefersForwardSearch:reply:
CADOccurrenceCacheDoEvents:haveOccurrencesAfterDate:reply:
CADOccurrenceCacheSearchWithTerm:inCalendars:responseToken:reply:
CADOccurrenceCacheSearchLocationsWithTerm:inCalendars:responseToken:reply:
CADOccurrenceCacheCancelSearchWithReplyID:
CADOccurrencesExistInRangeForEvent:startDate:endDate:mustStartInInterval:timezone:reply:
CADDatabaseShouldPermitOrganizerEmailFromJunkChecks:reply:
CADDatabaseShouldPermitOrganizerPhoneNumberFromJunkChecks:reply:
CADDatabaseGetAttachmentWithUUID:reply:
CADDatabaseGetAttachmentUUIDWithExternalID:store:reply:
CADDatabaseGetTTLLocationAuthorizationStatus:
CADDatabaseGetAlarmWithUUID:reply:
CADDatabaseGetAlarmOccurrencesInRangeFromStart:toEnd:inCalendars:reply:
CADDatabaseGetSharedCalendarInvitationsWithReply:
CADCalendarSetClearedFromNotificationCenter:error:
CADDatabaseGetResourceChanges:
CADDatabaseGetInviteReplyNotifications:
CADDatabaseGetEventNotificationItemsAfterDate:excludingUncheckedCalendars:filteredByShowsNotificationsFlag:reply:
CADDatabaseGetNotificationCountForSourceWithExternalIdentifier:excludingDelegateSources:filteredByShowsNotificationsFlag:expanded:reply:
CADDatabaseGetInboxRepliedSectionItems:
CADResourceChange:setAlertedWithError:
CADEventSetInvitationStatus:forEvents:error:
CADPushItemsToSpotlight:reply:
CADWaitForSpotlightUpdatesWithReply:
CADInternalForceStatCollection:
CADInternalSetNextConferenceLinkRenewalToNow:
CADInternalRemoveConferenceLinkRenewalDate:
CADTestingSimulateDaemonCrash
CADTestingCloseDatabase:
CADMigrateDatabaseIfNeeded:
CADDatabaseGetDeletableCalendars:
CADDatabaseGetDeletableSources:
CADPurgeChangeTrackingReply:
CADPostSyntheticRouteHypothesis:forEventWithExternalURL:reply:
CADDatabaseGetNotificationCountExcludingUncheckedCalendars:expanded:reply:
CADDatabaseGetStorageUsage:
CADBackupDatabaseToFileNamed:inDirectory:includeAttachments:reply:
CADBackupToICBU:reply:
CADRestoreFromDatabaseBackupFileNamed:inDirectory:includeAttachments:reply:
CADRestoreFromICBU:reply:
CADDiagnosticsCollectWithToken:options:reply:
CADDiagnosticsCancelCollectionWithToken:reply:
CADDatabaseGetErrorCount:
CADDatabaseGetEventsWithErrorsPerSource:
_tryRegisterNewConnection
_unregisterConnection
CADClientReceiveOccurrenceCacheSearchResults:forSearchToken:finished:
CADClientReceiveDiagnosticsCollectionResults:forToken:finished:
CADClientReceiveDatabaseIntegrityErrors:
databaseRestoreGeneration
setDatabaseRestoreGeneration:
shouldValidateObjectIDs
_createConnectionAndOperationProxyIfNeeded
_connectToServer
disconnect
xpcConnection
CADOperationProxy
CADOperationProxySync
setInitializationOptions:
databaseRestoreGenerationChangedByThisClient:
addCancellableRemoteOperation:
removeCancellableRemoteOperation:
cancelRemoteOperation:
_finishAllRepliesOnServerDeath
operationForToken:respondingToSelector:finished:
delegate
setDelegate:
initializationOptions
hasEverConnected
setHasEverConnected:
_connectionLock
_remoteOperationProxy
_syncRemoteOperationProxy
_replyHandlerLock
_cancellableOperations
_nextCancellationToken
_registeredForStartNote
_wasAbortedDueToExcessiveConnctions
_databaseRestoreGenerationLock
_databaseRestoreGeneration
_databaseRestoreGenerationHasEverChangedSignificantly
_hasEverConnected
_xpcConnection
_delegate
_initializationOptions
TB,N,V_hasEverConnected
T@"NSXPCConnection",R,&,N,V_xpcConnection
T@"<CADInterface>",R,&,N
T@"<EKDaemonConnectionDelegate>",W,V_delegate
T@"CADDatabaseInitializationOptions",&,N,V_initializationOptions
Ti,R,N
maxNumberOfOpenConnections
TQ,R,N
beginRequestWithExtensionContext:
fetchAvailableRoomTypesWithCompletionHandler:
fetchVirtualConferenceForIdentifier:completionHandler:
isURLValid:withCompletion:
extendExpirationOfURL:toExpirationDate:withCompletion:
invalidateURL:withCompletionHandler:
shared
travelEngineThrottlePeriod
setTravelEngineThrottlePeriod:
refiringReminderAlarmsEnabled
setRefiringReminderAlarmsEnabled:
useShortReminderSnoozeInterval
setUseShortReminderSnoozeInterval:
useShortReminderRefireInterval
setUseShortReminderRefireInterval:
alwaysSetArrivedAndSettledForReminders
setAlwaysSetArrivedAndSettledForReminders:
lastConfirmedSplashScreenVersion
setLastConfirmedSplashScreenVersion:
bypassSplashScreen
setDeselectedCalendars:reason:
_setDeselectedCalendars_iOS:
deselectedCalendarIdentifiers
_setDeselectedCalendarIdentifiers:
_array:hasSameElementAsArray:
deselectedCalendarSyncHashes
_setDeselectedCalendarSyncHashes:
deselectedCalendarSyncIdentifiers
_setDeselectedCalendarSyncIdentifiers:
selectedCalendarIdentifiers
setSelectedCalendarIdentifiers:
unselectedCalendarIdentifiersForFocusMode
setUnselectedCalendarIdentifiersForFocusMode:
showDeclinedEvents
setShowDeclinedEvents:
alertInviteeDeclines
setAlertInviteeDeclines:
conferenceRoomTypeIdentifiersByMRU
setConferenceRoomTypeIdentifiersByMRU:
_preferences
Td,N
TQ,N
TB,R
T@"NSArray",C,N
T@"NSDictionary",C,N
calendarID
oldCalendarID
oldExternalID
uuid
titleChanged
locationChanged
startDateChanged
startTimezoneChanged
endDateChanged
endTimezoneChanged
notesChanged
allDayChanged
suppressNotificationForChanges
_titleChanged
_locationChanged
_startDateChanged
_startTimezoneChanged
_endDateChanged
_endTimezoneChanged
_notesChanged
_allDayChanged
_suppressNotificationForChanges
_calendarID
_oldCalendarID
_externalID
_oldExternalID
_uuid
T@"EKObjectID",R,N,V_calendarID
T@"EKObjectID",R,N,V_oldCalendarID
T@"NSString",R,N,V_externalID
T@"NSString",R,N,V_oldExternalID
T@"NSString",R,N,V_uuid
TB,R,N,V_titleChanged
TB,R,N,V_locationChanged
TB,R,N,V_startDateChanged
TB,R,N,V_startTimezoneChanged
TB,R,N,V_endDateChanged
TB,R,N,V_endTimezoneChanged
TB,R,N,V_notesChanged
TB,R,N,V_allDayChanged
TB,R,N,V_suppressNotificationForChanges
initWithReminderStore:
reminderStore
_reminderStore
T@"EKReminderStore",R,W,N,V_reminderStore
remindersChanged
daAllowsCalendarAddDeleteModify
frozenClassForReminderClass:
uniqueIdentifierForREMObject:
isNotFoundError:
existingUpdatedObject:
T@"NSObject<OS_os_log>",R
initWithEventStore:token:
_loadAccountsIfNeeded
_loadAccounts
sources
sourceWithIdentifier:
cachedConstraintsForSource:
_fetchAndCacheConstraintsForFrozenSource:
isSourceManaged:
_loadListsIfNeeded
_loadLists
_allLists
calendars
calendarWithIdentifier:
backingCalendarWithIdentifier:
createNewReminderCalendar
frozenCalendarFromCalendar:error:
saveCalendar:error:
removeCalendar:error:
defaultCalendarForNewReminders
reminderWithUniqueId:
reminderWithIdentifier:
remindersWithExternalIdentifier:
backingReminderWithIdentifier:
createNewReminder
saveReminder:error:
removeReminder:error:
resetBackingAlarmWithBackingAlarm:
resetBackingLocationWithBackingLocation:
saveObject:withFrozenObject:error:
fillInPath:usingParents:
commit:
_commit:error:
_moveRemindersToNewLists:error:
predicateForRemindersInCalendars:
predicateForCalendarStoreForRemindersInCalendars:
predicateForIncompleteRemindersWithDueDateStarting:ending:calendars:
predicateForCompletedRemindersWithCompletionDateStarting:ending:calendars:
_checkPredicate:
fetchRemindersMatchingPredicate:completion:
completionBlockForFetchRequestToken:remove:
remindersMatchingPredicate:
frozenObjectForReminderObject:
frozenAlarmForREMAlarms:
newFrozenObjectForReminderObject:withChanges:
_reminderCopiedToNewList:
remStore
_queue
_sources
_cachedConstraints
_lists
_newObjectsIDs
_updatedObjects
_objectIDsToCommit
_deletedObjects
_objectsToReset
_remindersNeedingMove
_movedRemindersIDMap
_queryQueue
queryCompletionHandlers
_remStore
T@"REMStore",R,N,V_remStore
T@"EKEventStore",R,W,V_eventStore
T@"NSArray",R
initWithTitle:identifier:
identifier
_title
_identifier
T@"NSString",R,C,N,V_title
T@"NSString",R,C,N,V_identifier
initWithTitle:URL:
_URL
T@"NSURL",R,C,N,V_URL
initWithTitle:URLDescriptors:conferenceDetails:
URLDescriptors
conferenceDetails
_URLDescriptors
_conferenceDetails
T@"NSArray",R,C,N,V_URLDescriptors
T@"NSString",R,C,N,V_conferenceDetails
semanticIdentifierForLocationWithTitle:address:mapKitHandle:contactLabel:latitude:longitude:radius:
_participantShouldBeUsedForAutocomplete:
initWithUniqueID:
setCalendarColor:
_attendeesForSuggestedEventFromAttendees:
setAttendees:
setTitle:
startDate
setStartDate:
setTimeZone:
isAllDay
setAllDay:
location
setLocation:
locationWithoutPrediction
setLocationWithoutPrediction:
preferredLocation
setPreferredLocation:
setAlarms:
attendees
setURL:
setCalendar:
calendarColor
travelTime
setTravelTime:
setTravelStartLocation:
pasteboardResults
setPasteboardResults:
isSuggested
setSuggested:
suggestionInfo
setSuggestionInfo:
foundInBundleID
setFoundInBundleID:
setStructuredLocation:
privacyLevel
setPrivacyLevel:
availability
setAvailability:
attachments
setAttachments:
isNaturalLanguageSuggested
setIsNaturalLanguageSuggested:
setUniqueID:
_calendarColor
_allDay
_suggested
_isNaturalLanguageSuggested
_startDate
_endDate
_timeZone
_location
_locationWithoutPrediction
_preferredLocation
_alarms
_attendees
_notes
_calendar
_travelTime
_travelStartLocation
_pasteboardResults
_suggestionInfo
_foundInBundleID
_structuredLocation
_privacyLevel
_availability
_attachments
_localStructuredData
_uniqueID
T@"NSString",&,N,V_uniqueID
T@"NSString",&,N,V_title
T@"NSDate",&,N,V_startDate
T@"NSDate",&,N,V_endDate
T@"NSTimeZone",&,N,V_timeZone
allDay
TB,N,GisAllDay,V_allDay
T@"NSString",&,N,V_location
T@"NSString",&,N,V_locationWithoutPrediction
T@"EKStructuredLocation",&,N,V_preferredLocation
T@"NSArray",&,N,V_alarms
T@"NSArray",&,N,V_attendees
T@"NSURL",&,N,V_URL
T@"NSString",&,N,V_notes
T@"EKCalendar",&,N,V_calendar
T^{CGColor=},N,V_calendarColor
Td,N,V_travelTime
T@"EKStructuredLocation",&,N,V_travelStartLocation
T@"NSArray",&,N,V_pasteboardResults
suggested
TB,N,GisSuggested,V_suggested
T@"EKSuggestedEventInfo",&,N,V_suggestionInfo
T@"NSString",&,N,V_foundInBundleID
T@"EKStructuredLocation",&,N,V_structuredLocation
Tq,N,V_privacyLevel
Tq,N,V_availability
T@"NSArray",&,N,V_attachments
TB,N,V_isNaturalLanguageSuggested
T@"NSData",&,N,V_localStructuredData
autcompleterUpdated:
autcompleterSetCNAutocompleteStore:
autcompleterDidBeginNetworkActivity:
autcompleterDidFinishNetworkActivity:
autocompleteFetch:didReceiveResults:
autocompleteFetch:didFailWithError:
autocompleteFetchDidFinish:
autocompleteFetchDidBeginNetworkActivity:
autocompleteFetchDidEndNetworkActivity:
autocompleteFetch:shouldExpectSupplementalResultsForRequest:completionHandler:
autocompleteFetch:willAdjustResults:
autocompleteFetch:willSortResults:
resultComparatorForAutocompleteFetch:
initWithDelegate:
lastSearchString
searchFor:onSource:withContext:
clearLastResults
cancelSearch
isRunning
allResults
cnResults
setIgnoredParticipants:
setIgnoredAddresses:
removeIgnoredAddressesFromResults:
autocompleteResultsFromDirectoryRecords:withType:
directorySearchWithCompletion:
findRooms
setFindRooms:
findPeople
setFindPeople:
findSuggestions
setFindSuggestions:
findResources
setFindResources:
findGroups
setFindGroups:
findRecents
setFindRecents:
useACDirectorySearch
setUseACDirectorySearch:
excludeLocal
setExcludeLocal:
prefix
setPrefix:
addressesToIgnore
setAddressesToIgnore:
contactResults
setContactResults:
autocompletionSearchRequest
setAutocompletionSearchRequest:
autocompleteRunning
setAutocompleteRunning:
autocompleteStore
setAutocompleteStore:
directorySearchOperation
setDirectorySearchOperation:
directorySearchQueue
setDirectorySearchQueue:
directorySearchResults
setDirectorySearchResults:
_findRooms
_findPeople
_findSuggestions
_findResources
_findGroups
_findRecents
_useACDirectorySearch
_excludeLocal
_autocompleteRunning
_prefix
_source
_addressesToIgnore
_contactResults
_autocompletionSearchRequest
_autocompleteStore
_directorySearchOperation
_directorySearchQueue
_directorySearchResults
T@"<EKAutocompleterDelegate>",W,V_delegate
T@"NSString",C,V_prefix
T@"EKSource",&,V_source
T@"NSSet",&,V_addressesToIgnore
T@"NSMutableArray",&,V_contactResults
T@"<CNCancelable>",&,V_autocompletionSearchRequest
TB,V_autocompleteRunning
T@"CNAutocompleteStore",&,V_autocompleteStore
T@"EKDirectorySearchOperation",&,V_directorySearchOperation
T@"NSObject<OS_dispatch_queue>",&,V_directorySearchQueue
T@"NSMutableArray",&,V_directorySearchResults
TB,N,V_findRooms
TB,N,V_findPeople
TB,N,V_findSuggestions
TB,N,V_findResources
TB,N,V_findGroups
TB,N,V_findRecents
TB,N,V_useACDirectorySearch
TB,N,V_excludeLocal
objectsChangedNotification:
hasUpdatePriority
trackedObjectMap
trackedObjectsDidRevert:
notifyObservers
updatedObjectFor:changeNotification:
changedIdentifiersForNotification:
isSyncStatusChangeNotification:
registerDelegate:
_orderedDelegates
delegates
setDelegates:
_delegates
T@"NSPointerArray",&,V_delegates
initWithOpaqueKey:uniqueKey:
initWithOpaqueKey:uniqueKey:extractionGroupIdentifier:
initWithEventStore:opaqueKey:uniqueKey:
initWithEventStore:opaqueKey:uniqueKey:extractionGroupIdentifier:
relatedEvent
opaqueKey
setOpaqueKey:
uniqueKey
setUniqueKey:
extractionGroupIdentifier
setExtractionGroupIdentifier:
changedFields
setChangedFields:
changesAcknowledged
setChangesAcknowledged:
setTimestamp:
timestamp
setTimestampAsDate:
timestampAsDate
participantForSortingWithEKParticipant:
participantForSortingWithIdentity:
_sharedParticipantForSortingWithIdentity:participant:contactPredicate:
participant
isEmail
compare:
participantIsOptional:
compareByEmailThenByContactName:
compareByContactNames:
setParticipant:
identity
setIdentity:
cachedDisplayName
setCachedDisplayName:
setIsEmail:
isPhone
setIsPhone:
_isEmail
_isPhone
_participant
_identity
_firstName
_lastName
_cachedDisplayName
T@"EKParticipant",W,N,V_participant
T@"<EKIdentityProtocol>",W,N,V_identity
T@"NSString",C,N,V_firstName
T@"NSString",C,N,V_lastName
T@"NSString",C,N,V_cachedDisplayName
TB,N,V_isEmail
TB,N,V_isPhone
crRecentContactsLibraryClass
crAddressKindEmailString
crAddressKindPhoneNumberString
crRecentsDomainCalendarString
recentForContactWithAddress:name:kind:
recordRecentWithAddress:name:kind:
recordRecentForContactWithName:emailAddress:phoneNumber:
_eventKitQueue
_updateResult:withEvent:
initWithEventStore:searchString:maximumResultCount:ignoreScheduledEvents:initialEvent:pasteboardItemProvider:completionHandler:
firstNaturalLanguageResultWithSearchString:
_shouldReturnResultForEvent:considerReadonlyEvents:
searchWithString:completionHandler:
_maximumResultCount
_ignoreScheduledEvents
_initialEvent
_pasteboardItemProvider
_pendingSearch
searchWithEventStore:searchString:maximumResultCount:ignoreScheduledEvents:initialEvent:pasteboardItemProvider:completionHandler:
maximumResultCount
setMaximumResultCount:
TQ,V_maximumResultCount
createOwnerIDWithRowID:objectType:databaseID:
propertiesToUnloadOnCommit
setURLString:
fileNameRaw
setFileNameRaw:
fileFormat
setFileFormat:
localRelativePath
setLocalRelativePath:
securityScopedLocalURLWrapper
setSecurityScopedLocalURLWrapper:
securityScopedLocalURLForArchivedDataWrapper
setSecurityScopedLocalURLForArchivedDataWrapper:
fileSize
setFileSize:
XPropertiesData
setXPropertiesData:
securityScopedURLWrapperForPendingFileCopy
setSecurityScopedURLWrapperForPendingFileCopy:
shouldSetQuarantineAttributesOnCopiedFile
setShouldSetQuarantineAttributesOnCopiedFile:
diffBetweenObject:andObject:
_keysToIgnoreForComputingDiff
_populateSingleValueKeysForDiff:
_populateSingleValueRelationshipKeysForDiff:
_populateMultiValueRelationshipKeysForDiff:
_populateIdentityKeysForDiff:
_populateImmutableKeysForDiff:
_addObject:forKey:toDiff:
summaryKeyForChangedProperty:subProperty:
_summaryKeyForMultiValueChange:ofPropertyKey:
summaryKeyForMultiValueAddOfPropertyKey:
summaryKeyForMultiValueRemoveOfPropertyKey:
summaryKeyForMultiValueModifyOfPropertyKey:
_addSummaryWithDepth:toMutableString:forSingleValueKeys:firstObject:secondObject:
_addSummaryWithDepth:toMutableString:forRelationshipSingleValueKeys:firstObject:secondObject:
_addSummaryWithDepth:toMutableString:forRelationshipMultiValueKeys:firstObject:secondObject:
_addPaddedHeaderToMutableString:forKey:withDepth:
_addChangeStarIfChangedKey:onObject:
_indentStringAtDepth:
initWithFirstObject:secondObject:
_nonNilObject
_multiValueModifiedObjectsForKey:
differentKeys
summaryDictionary
summaryString
_summarizeDiffsBetweenFirstObject:secondObject:mutableString:depth:
copyOfObject:alreadyCopiedObjects:madeNewCopy:
changeSetForDiff
firstObject
setFirstObject:
secondObject
setSecondObject:
result
setResult:
differentIdentityKeys
setDifferentIdentityKeys:
differentImmutableKeys
setDifferentImmutableKeys:
differentSingleValueKeys
setDifferentSingleValueKeys:
differentRelationshipSingleValueKeys
setDifferentRelationshipSingleValueKeys:
differentRelationshipMultiValueKeys
setDifferentRelationshipMultiValueKeys:
relationshipMultiValueAdds
setRelationshipMultiValueAdds:
relationshipMultiValueRemoves
setRelationshipMultiValueRemoves:
relationshipMultiValueModifies
setRelationshipMultiValueModifies:
relationshipSingleValueModifies
setRelationshipSingleValueModifies:
_result
_firstObject
_secondObject
_differentIdentityKeys
_differentImmutableKeys
_differentSingleValueKeys
_differentRelationshipSingleValueKeys
_differentRelationshipMultiValueKeys
_relationshipMultiValueAdds
_relationshipMultiValueRemoves
_relationshipMultiValueModifies
_relationshipSingleValueModifies
T@"EKObject",&,N,V_firstObject
T@"EKObject",&,N,V_secondObject
Ti,N,V_result
T@"NSSet",&,N,V_differentIdentityKeys
T@"NSSet",&,N,V_differentImmutableKeys
T@"NSSet",&,N,V_differentSingleValueKeys
T@"NSSet",&,N,V_differentRelationshipSingleValueKeys
T@"NSSet",&,N,V_differentRelationshipMultiValueKeys
T@"NSDictionary",&,N,V_relationshipMultiValueAdds
T@"NSDictionary",&,N,V_relationshipMultiValueRemoves
T@"NSDictionary",&,N,V_relationshipMultiValueModifies
T@"NSDictionary",&,N,V_relationshipSingleValueModifies
_basicSummaryWithDepth:
_summaryWithDepth:
_addSummaryWithDepth:toMutableString:indentFirstLine:
initWithStartDate:endDate:type:
setType:
Tq,N,V_type
canCommitSelf
initWithAlternateUniverseObject:inEventStore:withUpdatedChildObjects:
updatedStructuredLocation
updateParentToCommitSelf:
mapKitHandle
latitude
longitude
referenceFrame
radius
setLatitudeAndLongitudeFromAlternateUniverseObject:inChangeSet:
T@"NSString",R
_eventStoreChanged:
_syncStartTimeoutExpired
_refreshControlMaximumVisibleTimeElapsed
initWithEventStore:
_syncDidStart
_syncDidEnd
_allSourcesRefreshed
_areAnySourcesCurrentlySyncing
_allCalendarsRefreshed
_areAnyCalendarsCurrentlySyncing
_beginSyncStartTimeout
_cancelSyncStartTimeout
_beginMaximumTimeElapsedTimeout
_cancelMaximumTimeElapsedTimeout
_syncCompleted
sourceFinishedRefreshing:
calendarFinishedRefreshing:
allAccountsOffline
refreshing
_currentlySyncing
_refreshStartDate
_refreshingSources
_refreshingCalendars
_refreshing
T@"<EKAccountRefresherDelegate>",W,N,V_delegate
TB,R,N,V_refreshing
defaultPropertyKeysToSkipForRecursiveSnapshotCopies
keysToIgnoreForApplyingChanges
validate:
canonicalizedEqualityTestValue1:value2:key:object1:object2:
knownRelationshipSingleValueKeys
knownRelationshipSingleValueKeysForValidation
knownRelationshipMultiValueKeys
knownRelationshipMultiValueKeysForValidation
knownRelationshipWeakKeys
knownDerivedRelationshipKeys
adjustDateFromUTC:allDay:timeZone:
_shouldDeleteAndAddForMoveFromCalendar:toCalendar:
timeZoneNameFromTimeZone:
timeZoneFromTimeZoneName:withFloatingTimeZone:
shouldLoadRelationshipForValidation:
startDateRaw
setStartDateRaw:
setCalendarItemIdentifier:
uniqueId
setUniqueId:
localUID
displayNotes
setDisplayNotes:
setStructuredLocationWithoutPrediction:
setClientLocation:
setLastModifiedDate:
setCreationDate:
calendarScale
setCalendarScale:
setPriority:
setActionString:
action
setAction:
appLink
setAppLink:
shouldHaveDefaultAlarms
defaultAlarms
startTimeZoneName
setStartTimeZoneName:
startTimeZone
setStartTimeZone:
endTimeZoneName
setEndTimeZoneName:
endTimeZone
setEndTimeZone:
setDefaultAlarmWasDeleted:
externalData
setExternalData:
modifiedProperties
setModifiedProperties:
sequenceNumber
setSequenceNumber:
isNewItemThatFailedToPut
exportToICS
exportToICSWithOptions:
setSuppressNotificationForChanges:
externalURI
requiresDetach
allowsSpansOtherThanThisEvent
isEditable
isDeletable
_validateDeletable:
_validateAccessConsent:
_validateDeletableInCalendarWithError:
_isInSharedToMeCalendarWithNoSharingScheduling
_validateDeletableBySharedCalendarShareeWithError:
isFloating
isSelfOrganized
isSelfOrganizedInvitation
isExternallyOrganizedInvitation
isOrganizedBySharedCalendarOwner
needsResponse
allowsCalendarModifications
allowsRecurrenceModifications
allowsAlarmModifications
allowsAttendeesModifications
actionsState
adjustDateFromUTC:
hasAlarms
sortedAlarms
indexForAlarm:
_excludeAlarmDueToConnectionTrigger:
setAllAlarmsSet:
addAlarm:
removeAlarm:
findOriginalAlarmStartingWith:
snoozeAlarm:withTimeIntervalFromNow:
snoozeAlarm:withLocation:proximity:
isAlarmAcknowledgedPropertyDirty
isOnlyAlarmAcknowledgedPropertyDirty
removeAcknowledgedSnoozedAlarms
removeAllSnoozedAlarms
recurrenceRuleString
singleRecurrenceRule
setSingleRecurrenceRule:
_hadRecurrenceRules
setRecurrenceRules:
recurrenceRules
setRecurrenceRulesSet:
addRecurrenceRule:
removeRecurrenceRule:
startDateForRecurrence
_hadAttendees
setAttendeesRaw:
filterAttendeesPendingDeletion:
addAttendee:
removeAttendee:
_removeAttendee:
setSelfAttendee:
_setSelfAttendee:
selfParticipantStatusRaw
selfParticipantStatus
participantMatchingContact:
attendeeMatchingEmailAddress:
setOrganizer:
addOrganizerAndSelfAttendeeForNewInvitation
_addOrganizerAndSelfAttendeeForNewInvitationInCalendar:
removeLastExtraneousOrganizerAndSelfAttendee
sharedItemCreatedByDisplayName
setSharedItemCreatedByDisplayName:
sharedItemCreatedByAddressString
setSharedItemCreatedByAddressString:
sharedItemCreatedByAddress
setSharedItemCreatedByAddress:
sharedItemCreatedByFirstName
setSharedItemCreatedByFirstName:
sharedItemCreatedByLastName
setSharedItemCreatedByLastName:
sharedItemCreatedDate
setSharedItemCreatedDate:
sharedItemCreatedTimeZoneName
setSharedItemCreatedTimeZoneName:
sharedItemCreatedTimeZone
setSharedItemCreatedTimeZone:
sharedItemModifiedByDisplayName
setSharedItemModifiedByDisplayName:
sharedItemModifiedByAddressString
setSharedItemModifiedByAddressString:
sharedItemModifiedByAddress
setSharedItemModifiedByAddress:
sharedItemModifiedByFirstName
setSharedItemModifiedByFirstName:
sharedItemModifiedByLastName
setSharedItemModifiedByLastName:
sharedItemModifiedDate
setSharedItemModifiedDate:
sharedItemModifiedTimeZoneName
setSharedItemModifiedTimeZoneName:
sharedItemModifiedTimeZone
setSharedItemModifiedTimeZone:
setAttachmentsSet:
addAttachment:
removeAttachment:
hasAttachment
canMoveToCalendar:error:
canMoveToCalendar:fromCalendar:error:
canMoveOrCopyToCalendar:fromCalendar:error:
moveToCalendar:
hasCalendarChangeThatRequiresDeleteAndAdd
hasRecurrenceRuleAdditionOrRemoval
_moveToCalendar:forSavingItem:
_updatePersistentObjectOfSelfAndDetachedItemsExceptForSavingItem:
_setCalendarRecursively:forSavingItem:
_resetFieldsAfterMovingToNewCalendar
_adjustAfterMovingOrCopyingFromOldCalendar:toNewCalendar:savingItem:
_recursivelyPerformBlockOnSelfAndDetachedItems:forSavingItem:
setOriginalItem:
setDetachedItems:
_removeDetachedItem:
_deleteSelfAndDetached
setEkExceptionDates:
exceptionDates
exceptionDatesAdjustedForFloatingEvents
setExceptionDates:
_addExceptionDate:
_removeExceptionDate:
_deletePersistentItemAndDetachedItems:forSavingItem:
updateWithAppLink:usedSelectedText:
_updateModifiedAlarmByAcknowledging
_willSave
_generateNewUniqueID
updateWithVCSEntity:inCalendar:
T@"NSString",&,N
T@"NSArray",&,N
T@"EKCalendarItem",&,N
T@"EKCalendar",&,N
T@"NSURL",C,N
T@"NSTimeZone",C,N
isProgramSDKAtLeast:
performWhileSimulatingLegacyBehaviors:
perform:whileSimulatingLegacyBehaviors:
simulateLegacyBehaviors
setSimulateLegacyBehaviors:
_eventStoreChangedNotification:
_databaseChangedExternally
setTimeout:
timeout
setCreationBlock:
creationBlock
setChangedBlock:
changedBlock
setPurgingAllowed:
purgingAllowed
acquireCachedEventStoreOrCreate:
_resetIdleTimer
_uninstallTimer
_addPersistentNotificationObservers
_removePersistentNotificationObservers
_removeTransientEventStoreChangeObserver
_fireChangedBlock
workQueue
setWorkQueue:
callbackQueue
setCallbackQueue:
timer
setTimer:
internalTimeout
setInternalTimeout:
internalCreationBlock
setInternalCreationBlock:
internalChangedBlock
setInternalChangedBlock:
ignoreLowLevelDatabaseChangedNotifications
setIgnoreLowLevelDatabaseChangedNotifications:
internalPurgingAllowed
setInternalPurgingAllowed:
internalStore
setInternalStore:
_ignoreLowLevelDatabaseChangedNotifications
_internalPurgingAllowed
_workQueue
_timer
_internalTimeout
_internalCreationBlock
_internalChangedBlock
_internalStore
T@"NSObject<OS_dispatch_queue>",&,N,V_workQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_callbackQueue
T@"NSObject<OS_dispatch_source>",&,N,V_timer
Td,N,V_internalTimeout
T@?,C,N,V_internalCreationBlock
T@?,C,N,V_internalChangedBlock
TB,N,V_ignoreLowLevelDatabaseChangedNotifications
TB,N,V_internalPurgingAllowed
T@"EKEventStore",&,N,V_internalStore
T@?,C,N
setLatitude:
setLongitude:
setReferenceFrame:
setRadius:
contactLabel
setContactLabel:
setMapKitHandle:
routing
setRouting:
derivedFrom
setDerivedFrom:
setCalendarItemOwner:
calendarItemOwner
setAlarmOwner:
alarmOwner
initWithREMObject:inStore:
REMObject
updatedFrozenObjectWithChanges:
updatedFrozenObjectWithChanges:updatedChildren:
valueForSingleValueKey:backingValue:
uncommittedChanges
path
setPath:
_remObject
_path
T@"EKChangeSet",R,N
T@"NSArray",C,N,V_path
createSerializerWithEventStore:withVersion:
_nameComponentsForContact:reverse:
_nameComponentsWithGivenName:familyName:
_allParticipantsOnItem:
initWithContacts:
_cacheContactData
anyContactMatchesAnyParticipantFromItem:
anyContactMatchesAnyParticipant:
matchingParticipantsFromItem:
matchingParticipantsFromParticipants:
anyContactMatchesParticipant:
contacts
setContacts:
contactEmailAddresses
setContactEmailAddresses:
contactNameComponents
setContactNameComponents:
contactCompanyNames
setContactCompanyNames:
_contacts
_contactEmailAddresses
_contactNameComponents
_contactCompanyNames
T@"NSArray",&,N,V_contacts
T@"NSSet",&,N,V_contactEmailAddresses
T@"NSSet",&,N,V_contactNameComponents
T@"NSSet",&,N,V_contactCompanyNames
initWithExternalID:externalIDTag:inSource:
_externalIDTag
T@"EKSource",R,N,V_source
T@"NSString",R,N,V_externalIDTag
sharedToken
setIsJunk:shouldSave:
cachedJunkStatus
setCachedJunkStatus:
_couldBeJunkCommon
locationsWithoutPrediction
setNotesCommon:
setURLCommon:
parsedConference:andNotes:
clearParsedConference
conferenceURLForDisplayCached
conferenceURLForDisplay
clearDetectedConferenceURL
conferenceURLDetected
conferenceURLDetectedString
_detectedConferenceURLOnBackingObjectMayBeInvalid
_detectConferenceURL
_prioritizedConferencesSources
_locationStringForLocations:
junkStatusForInvitation:
junkStatusForInvitation:withReputationStore:
datesByExpandingRule:fromDate:toDate:inTimezone:isAllDay:lunarCalendarString:
_weekStartFromICSRule:
_daysOfWeekFromICSRule:
_copyDatesForLunarBirthdayFromDate:toDate:inTimeZone:lunarCalendarString:
_isLunarBirthdayRecurrenceRule:lunarCalendarString:
ekPredicateFilterMatches:
stateAsString:
_findLeftoverSpans:usingFreeTimes:andNonOptimalTimes:
_addressesForParticipants:
_span:hasSameConflictedParticipantsAsSpan:
_allButLastItemInArray:
_allButFirstItemInArray:
_insertUniqueParticipants:intoExistingParticipantsArray:
_findHighestRankedNonOptimalTimeSpans:
_rankNonOptimalTimeSpans:
_binarySearchForIndexOfTimeSpanInArray:containingDate:
_invalidBinarySearchIndex
_selfOrganizerForNewlyScheduledEventWithAddress:
_validateSpans:
initWithStateChangedCallback:
originalStartDate
originalEndDate
originalConflictedParticipants
timesWhenAllAttendeesCanAttend
timesWhenSomeAttendeesCanAttend
proposedTimes
searchingForMoreTimesWhenAllAttendeesCanAttend
searchingForMoreTimesWhenSomeAttendeesCanAttend
searchForMoreTimesWhenAllAttendeesCanAttend
searchForMoreTimesWhenSomeAttendeesCanAttend
resetWithEvent:organizerAddressForNewlyScheduledEvent:
_attemptSearch
_resetSearchFallbackNumbers
_sendStateChange:
_transitionToConflictFoundStateAndSearch
_participantforParticipantAddress:
_processResults:betweenStartDate:endDate:
_haltSearchWithError:
_spliceLeftTimeSpans:andNewTimeSpans:
_mergeAdjacentSpansWithSameConflictedParticipants:
_generateOpenFreeTimesFromTimeSpans:
_generateNonOptimalTimesFromTimeSpans:
_filterOutUnreasonableTimeSlots:
_generateTimeSpansForResults:betweenStartDate:endDate:
noConflictRequired
setNoConflictRequired:
processingQueue
setProcessingQueue:
internalOriginalStartDate
setInternalOriginalStartDate:
internalOriginalEndDate
setInternalOriginalEndDate:
originalRangeStartDate
setOriginalRangeStartDate:
internalProposedStarts
setInternalProposedStarts:
ignoredEventID
setIgnoredEventID:
availabilityRequestsQueue
setAvailabilityRequestsQueue:
participantAddressesToParticipants
setParticipantAddressesToParticipants:
organizerAddress
setOrganizerAddress:
availabilityRequestInProgress
setAvailabilityRequestInProgress:
nextAvailabilityRangeStartDate
setNextAvailabilityRangeStartDate:
availabilitySearchDurationMultiplier
setAvailabilitySearchDurationMultiplier:
remainingSearchAttempts
setRemainingSearchAttempts:
leftoverSpans
setLeftoverSpans:
internalTimesWhenAllAttendeesCanAttend
setInternalTimesWhenAllAttendeesCanAttend:
internalTimesWhenSomeAttendeesCanAttend
setInternalTimesWhenSomeAttendeesCanAttend:
internalProposedTimes
setInternalProposedTimes:
internalOriginalConflictedParticipants
setInternalOriginalConflictedParticipants:
internalSearchingForMoreTimesWhenAllAttendeesCanAttend
setInternalSearchingForMoreTimesWhenAllAttendeesCanAttend:
internalSearchingForMoreTimesWhenSomeAttendeesCanAttend
setInternalSearchingForMoreTimesWhenSomeAttendeesCanAttend:
stateChanged
setStateChanged:
_noConflictRequired
_availabilityRequestInProgress
_internalSearchingForMoreTimesWhenAllAttendeesCanAttend
_internalSearchingForMoreTimesWhenSomeAttendeesCanAttend
_internalOriginalStartDate
_internalOriginalEndDate
_originalRangeStartDate
_internalProposedStarts
_ignoredEventID
_availabilityRequestsQueue
_participantAddressesToParticipants
_organizerAddress
_nextAvailabilityRangeStartDate
_availabilitySearchDurationMultiplier
_remainingSearchAttempts
_leftoverSpans
_internalTimesWhenAllAttendeesCanAttend
_internalTimesWhenSomeAttendeesCanAttend
_internalProposedTimes
_internalOriginalConflictedParticipants
_stateChanged
T@"NSObject<OS_dispatch_queue>",&,N,V_processingQueue
T@"NSDate",&,N,V_internalOriginalStartDate
T@"NSDate",&,N,V_internalOriginalEndDate
T@"NSDate",&,N,V_originalRangeStartDate
T@"NSMutableArray",&,N,V_internalProposedStarts
T@"EKSource",&,N,V_source
T@"NSString",&,N,V_ignoredEventID
T@"NSOperationQueue",&,N,V_availabilityRequestsQueue
T@"NSMutableDictionary",&,N,V_participantAddressesToParticipants
T@"NSString",&,N,V_organizerAddress
TB,N,V_availabilityRequestInProgress
T@"NSDate",&,N,V_nextAvailabilityRangeStartDate
Td,N,V_availabilitySearchDurationMultiplier
TQ,N,V_remainingSearchAttempts
T@"NSMutableArray",&,N,V_leftoverSpans
T@"NSMutableArray",&,N,V_internalTimesWhenAllAttendeesCanAttend
T@"NSMutableArray",&,N,V_internalTimesWhenSomeAttendeesCanAttend
T@"NSMutableArray",&,N,V_internalProposedTimes
T@"NSMutableArray",&,N,V_internalOriginalConflictedParticipants
TB,N,V_internalSearchingForMoreTimesWhenAllAttendeesCanAttend
TB,N,V_internalSearchingForMoreTimesWhenSomeAttendeesCanAttend
T@?,C,N,V_stateChanged
TB,N,V_noConflictRequired
cal_isCertificateError
cal_trustInfoCopy
cal_serializableUserInfo
cal_serializableError
_cal_serializedEntryForKey:value:outKey:outValue:
sourceForInviteReplyNotification:
initWithInviteReplyCalendar:
inviteReplyCalendar
_setInviteReplyCalendar:
inReplyTo
setInReplyTo:
shareeDisplayName
setShareeDisplayName:
shareeFirstName
setShareeFirstName:
shareeLastName
setShareeLastName:
shareeURLString
setShareeURLString:
shareeURL
setShareeURL:
shareeStatus
setShareeStatus:
summary
setSummary:
calendarName
shareeEmailAddress
shareePhoneNumber
alerted
clearAlertedStatus
T@"EKCalendar",R,N
T@"NSDate",C,N
_setupSources
_sourceLastSyncingEndDates
T@"<EKSyncStatusChangeListenerDelegate>",W,N,V_delegate
participantWithName:url:
participantWithName:emailAddress:phoneNumber:url:
needsResponseForParticipantStatus:
doesParticipantURLString:email:andPhoneNumber:matchParticipantURLString:email:andPhoneNumber:
existingContact
newContact
isCurrentUserForSharing
isCurrentUserForScheduling
initWithName:emailAddress:phoneNumber:url:
nameUsingAddressAsBackup
displayNameRaw
setDisplayNameRaw:
comment
setComment:
isCurrentUser
scheduleForceSend
setScheduleForceSend:
isEqualToParticipant:
nameComponents
displayString
ABRecordWithAddressBook:
isLocationRoom
inviterNameString
setInviterNameString:
scheduleStatus
generateSemanticIdentifier
_owner
T@"EKCalendarItem",R,N,V_owner
T@"NSURL",R,N
currentUser
TB,R,N,GisCurrentUser
T@"NSPredicate",R,D,N
initWithType:
calendarFromEventStore:
isSharedCalendarInvitation
allowedEntityTypes
setAllowedEntityTypes:
_sharingInvitationResponse
_allowedEntityTypes
TQ,N,V_sharingInvitationResponse
TQ,N,V_allowedEntityTypes
valueForSpanType:
initWithDate:dateType:spanType:
spanDate
setSpanDate:
dateType
setDateType:
spanType
setSpanType:
_spanDate
_dateType
_spanType
T@"NSDate",&,N,V_spanDate
Tq,V_dateType
Tq,V_spanType
_clampDateRangeForSpans:startDate:endDate:
gatherFreshlyCachedSpansBetweenStartDate:endDate:
_currentMaxSpanTypeIn:
sanitizeAndInsertResults:inRange:
cachedSpansFromSpans:
spanType:isSimilarToSpanType:
mergeSpansOfSameType:
insertSpans:
spans
_rangeCompletelyCoversPeriodBetweenStartDate:endDate:
_cachedSpans
statusRaw
setStatusRaw:
pendingStatusRaw
setPendingStatusRaw:
setLastModifiedParticipationStatus:
lastModifiedParticipationStatus
originAppName
_SGSuggestionsServiceClass
updateSuggestedEventWithEventStore:
suggestedEvent
_suggestedEvent
_originAppName
T@"SGEvent",R,N
recordFromSearchResult:
initWithCalendars:
evaluateWithObject:
initForIncompleteRemindersWithDueDateStarting:ending:calendars:
initForCompletedRemindersWithCompletionDateStarting:ending:calendars:
fetchMatchingRemindersInStore:allLists:error:
_start
_end
_completed
semanticIdentifierForAlarm:
semanticIdentifierForAlarmIsDefault:absoluteDate:relativeOffset:emailAddress:url:
_stringForAlarmProximity:
setDotColor:
needsAlert
isInvitation
acknowledgeWithEventStore:error:
isProposedNewTime
proposedStartDateIsInFutureForAttendee:
setObjectID:
dotColor
hiddenFromNotificationCenter
setHiddenFromNotificationCenter:
setAlerted:
recipientName
setRecipientName:
couldBeJunk
setCouldBeJunk:
event
setEvent:
_dotColor
_hiddenFromNotificationCenter
_alerted
_couldBeJunk
_recipientName
_event
T@"NSString",&,N,V_name
T@"NSString",&,N,V_firstName
T@"NSString",&,N,V_lastName
T@"NSString",&,N,V_emailAddress
T@"NSString",&,N,V_phoneNumber
T@"NSString",&,N,V_recipientName
T@"EKObjectID",&,N,V_objectID
T^{CGColor=},N,V_dotColor
TB,N,V_hiddenFromNotificationCenter
TB,N,V_alerted
TB,N,V_couldBeJunk
T@"EKEvent",&,N,V_event
isSupported
initWithSource:query:resultsBlock:
start
main
isConcurrent
isExecuting
isFinished
_recordTypes
_processResults:
_processResults:class:
_finishWithError:
numberOfMatchesExceededLimit
setNumberOfMatchesExceededLimit:
error
setError:
_isFinished
_isExecuting
_query
_resultsBlock
_searchID
_numberOfMatchesExceededLimit
_error
TB,N,V_numberOfMatchesExceededLimit
T@"NSError",&,N,V_error
save:
initWithObjectID:date:
date
setDate:
Td,N,V_date
terms
setTerms:
findLocations
setFindLocations:
findUsers
setFindUsers:
resultLimit
setResultLimit:
_findLocations
_findUsers
_terms
_resultLimit
T@"NSSet",&,N,V_terms
TB,N,V_findLocations
TB,N,V_findUsers
TQ,N,V_resultLimit
initWithEvent:
eventFromEventStore:
needsReply
nearestProposedTime
startDateForNextOccurrence
setStartDateForNextOccurrence:
participationStatusModifiedDate
setParticipationStatusModifiedDate:
participationStatus
setParticipationStatus:
status
setStatus:
recurrenceRule
setRecurrenceRule:
timeChanged
setTimeChanged:
dateChanged
setDateChanged:
setTitleChanged:
setLocationChanged:
videoConferenceChanged
setVideoConferenceChanged:
recurrenceChanged
setRecurrenceChanged:
attendeeReplyChanged
setAttendeeReplyChanged:
invitedBy
isLocationDecline
setIsLocationDecline:
expandedProposedTimeAttendee
setExpandedProposedTimeAttendee:
expanded
setExpanded:
isForReReply
setIsForReReply:
_timeChanged
_dateChanged
_videoConferenceChanged
_recurrenceChanged
_attendeeReplyChanged
_isLocationDecline
_expanded
_isForReReply
_startDateForNextOccurrence
_participationStatusModifiedDate
_participationStatus
_status
_recurrenceRule
_invitedBy
_expandedProposedTimeAttendee
T@"NSDate",&,N,V_startDateForNextOccurrence
T@"NSDate",&,N,V_participationStatusModifiedDate
Tq,N,V_participationStatus
Tq,N,V_status
T@"EKRecurrenceRule",&,N,V_recurrenceRule
TB,N,V_timeChanged
TB,N,V_dateChanged
TB,N,V_titleChanged
TB,N,V_locationChanged
TB,N,V_videoConferenceChanged
TB,N,V_recurrenceChanged
TB,N,V_attendeeReplyChanged
T@"EKCalendarEventInvitationNotificationAttendee",&,N,V_owner
T@"NSString",R,N,V_invitedBy
TB,N,V_isLocationDecline
T@"EKCalendarEventInvitationNotificationAttendee",&,N,V_expandedProposedTimeAttendee
TB,N,V_expanded
TB,N,V_isForReReply
initWithParticipant:forEvent:
statusChanged
commentChanged
proposedStartDateChanged
proposedStartDate
proposedStartDateDeclined
_statusChanged
_commentChanged
_proposedStartDateChanged
_proposedStartDateDeclined
_isCurrentUser
_comment
_proposedStartDate
T@"NSString",R,N,V_name
T@"NSString",R,N,V_firstName
T@"NSString",R,N,V_lastName
T@"NSString",R,N,V_emailAddress
T@"NSString",R,N,V_phoneNumber
T@"NSURL",R,N,V_URL
TB,R,N,V_statusChanged
TB,R,N,V_commentChanged
TB,R,N,V_proposedStartDateChanged
Tq,R,N,V_participantType
Tq,R,N,V_participantStatus
T@"NSString",R,N,V_comment
T@"NSDate",R,N,V_proposedStartDate
TB,R,N,V_proposedStartDateDeclined
TB,R,N,V_isCurrentUser
initWithStructuredLocation:
createStructuredLocation
calLocation
setCalLocation:
_calLocation
T@"CalLocation",C,N,V_calLocation
allowedImportFileTypes
_createImportHandle
initWithFilePaths:eventStore:options:
initWithFilePaths:calendar:options:
_initWithFilePaths:eventStore:calendar:options:
asyncImportWithCompletion:
syncImportWithCompletion:
_importWithCompletion:
importICalFiles
_sortFilesByImportCalendar
infoForNewCalendarForFiles:forITIPFiles:nonITIPFiles:
_getImportedCalendarItems
_separateFilesForImport:
_separateICalFilesForITIP
_message:hasNewSelfOrganizedEventForCalendar:
_doITIPFileImport
_doImportFiles
_existingEventFromICSEvent:calendar:exactMatch:
_findBestEventFromEvents:
_findCalendarForExistingEvent:
_isAnyAttendeeAddressFrom:organizer:equivalentTo:
_matchingAttendeeAddressesFrom:organizer:inSource:
eventFromDocument:
countReminders:
callCompletionWithSuccess:
selectCalendarWithTitle:color:description:error:
importFoundBackupFile:
setImportProgressAsIndeterminate
shouldImportContinueGivenDecision:eventsAffected:
callImportDroppedRemindersCallbackIfThereWereReminders
importError
setImportError:
async_queue
setAsync_queue:
selectCalendar
setSelectCalendar:
importFoundBackupFile
setImportFoundBackupFile:
importDroppedReminders
setImportDroppedReminders:
makeDecision
setMakeDecision:
importSetProgressValue
setImportSetProgressValue:
importSetProgressAsIndeterminate
setImportSetProgressAsIndeterminate:
asynchronous
setAsynchronous:
numInvalidEvents
setNumInvalidEvents:
importFilePaths
options
setOptions:
iCalFilesToImport
setICalFilesToImport:
vCalFilesToImport
setVCalFilesToImport:
calendarToICalFiles
setCalendarToICalFiles:
calendarToITIPFiles
setCalendarToITIPFiles:
calendarToVCalFiles
setCalendarToVCalFiles:
existingEventIDs
setExistingEventIDs:
iTIPFiles
setITIPFiles:
nonITIPFiles
setNonITIPFiles:
filesWithReminders
setFilesWithReminders:
droppedReminderCount
setDroppedReminderCount:
importedItems
setImportedItems:
completionCallback
setCompletionCallback:
_asynchronous
_importError
_async_queue
_selectCalendar
_importFoundBackupFile
_importDroppedReminders
_makeDecision
_importSetProgressValue
_importSetProgressAsIndeterminate
_numInvalidEvents
_importFilePaths
_options
_iCalFilesToImport
_vCalFilesToImport
_calendarToICalFiles
_calendarToITIPFiles
_calendarToVCalFiles
_existingEventIDs
_iTIPFiles
_nonITIPFiles
_filesWithReminders
_droppedReminderCount
_importedItems
_completionCallback
TB,N,V_asynchronous
TQ,N,V_numInvalidEvents
T@"EKEventStore",&,N,V_eventStore
T@"NSArray",R,N,V_importFilePaths
TQ,N,V_options
T@"NSMutableDictionary",&,N,V_iCalFilesToImport
T@"NSMutableArray",&,N,V_vCalFilesToImport
T@"NSMapTable",&,N,V_calendarToICalFiles
T@"NSMapTable",&,N,V_calendarToITIPFiles
T@"NSMapTable",&,N,V_calendarToVCalFiles
T@"NSMutableSet",&,N,V_existingEventIDs
T@"NSMutableDictionary",&,N,V_iTIPFiles
T@"NSMutableDictionary",&,N,V_nonITIPFiles
T@"NSMutableArray",&,N,V_filesWithReminders
TQ,N,V_droppedReminderCount
T@"NSMutableArray",&,N,V_importedItems
T@?,C,N,V_completionCallback
T@"NSError",&,N,V_importError
T@"NSObject<OS_dispatch_queue>",&,N,V_async_queue
T@?,C,N,V_selectCalendar
T@?,C,N,V_importFoundBackupFile
T@?,C,N,V_importDroppedReminders
T@?,C,N,V_makeDecision
T@?,C,N,V_importSetProgressValue
T@?,C,N,V_importSetProgressAsIndeterminate
CADObjectChangeIDsFromEKObjectChanges:
objectChangesInStore:resultHandler:
objectChangesInSource:resultHandler:
objectChangesInCalendar:resultHandler:
objectChangesOfType:inStore:resultHandler:
objectChangesOfType:inSource:resultHandler:
objectChangesOfType:inCalendar:resultHandler:
fetchObjectChangesInStore:resultHandler:
fetchObjectChangesInSource:resultHandler:
fetchObjectChangesInCalendar:resultHandler:
fetchChangesToObjectsOfTypes:inStore:resultHandler:
fetchChangesToObjectsOfTypes:inSource:resultHandler:
fetchChangesToObjectsOfTypes:inCalendar:resultHandler:
processFetchResults:
callClientResultsHandler:changesTruncated:latestToken:changes:
objectType
objectChangeWithProperties:
serializedPropertiesForConsumingChange
changedObjectID
changeType
changeID
_changeType
_changedObjectID
_changeID
_sequenceNumber
Tq,R,N,V_changeID
Tq,R,N,V_sequenceNumber
T@"EKObjectID",R,N,V_changedObjectID
Ti,R,N,V_changeType
initializeEKEventStorePlusReminders
combinedReminderAndEventSources
_combineEventSources:withReminderSources:
_rebuildSourceMapsWithEventSources:reminderSources:
combineEventCalendars:withReminderCalendars:
eventSourceForReminderSource:
eventSourceIDForReminderSourceID:
reminderSourceForEventSource:
getMapsWithReminderSourceMap:eventSourceMap:
reminderSourceMap
eventSourceMap
invalidateReminderSourceMaps
performHoldingReminderSourceMapLock:
_localeChanged
sharedListener
areBirthdaysEnabled
contactsInserted:updated:deleted:
contactsReset
initSingleton
stop
checkForFailures
eventStoreProvider
eventStoreProviderWithReset:
eventStoreWithReset:
addBirthdayCalendars
birthdayCalendarsInStore:
disableBirthdayCalendars
disableBirthdayCalendarsInStore:
birthdayCalendarsCreateIfNeeded:inStore:originalIdentifier:originalAlarms:ignoreAlarms:
allContactsWithBirthdays
insertEventWithContact:forDateComponents:intoCalendar:inStore:
_insertEventsForContact:intoCalendar:inStore:
resetAllBirthdaysInStore:
_eventStoreProvider
_updateQueue
_updateJobQueue
_needsReset
_shutdown
relativeOffset
setRelativeOffset:
absoluteDate
setAbsoluteDate:
calendarOwner
setCalendarOwner:
setProximity:
proximity
setAcknowledgedDate:
acknowledgedDate
isDefaultAlarm
setIsDefaultAlarm:
setOriginalAlarm:
originalAlarm
setSnoozedAlarmsSet:
snoozedAlarmsSet
setUrlWrapper:
urlWrapper
oldSemanticIdentifier
initWithEnabled:weekday:startTime:endTime:timeZone:
enabled
setEnabled:
weekday
setWeekday:
startTime
setStartTime:
endTime
setEndTime:
_enabled
_weekday
_startTime
_endTime
TB,N,V_enabled
Tq,N,V_weekday
T@"NSDate",&,N,V_startTime
T@"NSDate",&,N,V_endTime
initWithCreationBlock:
_eventStorePurger
calendarItem
changedByDisplayName
changedByAddress
changedByFirstName
changedByLastName
createCount
updateCount
deleteCount
changedProperties
deletedTitle
publicStatus
convertFromReminderKitFrequency:
convertToReminderKitFrequency:
convertFromReminderKitWeekday:
convertToReminderKitWeekday:
addUpdatedRecurrenceRule:
ekWeekdayToREMWeekday:
remWeekdayToEKWeekday:
daysOfTheWeekFromREMRecurrenceRule
remDaysOfTheWeekFromEKDaysOfTheWeek:
loadSpecifierDaysOfTheWeek:daysOfTheMonth:monthsOfTheYear:weeksOfTheYear:daysOfTheYear:setPositions:
recurrenceIdentifierWithLocalUID:recurrenceDate:
recurrenceIdentifierWithString:
localUIDForIdentifierString:
_dateFormatStripTime:stripTimeZone:
_splitIdentifier:intoLocalUID:recurrenceDate:
_recurrenceIdentifierWithRecurrenceDate:localUID:stripTime:stripTimeZone:
_recurrenceStringForDate:stripTime:stripTimeZone:
identifierString
setLocalUID:
recurrenceDate
setRecurrenceDate:
setIdentifierString:
_localUID
_recurrenceDate
_identifierString
T@"NSString",&,V_localUID
T@"NSDate",&,V_recurrenceDate
T@"NSString",&,N,V_identifierString
initWithChangeSet:
initWithChangeSet:changesToSkip:
initWithChangeSet:changesToKeep:
initWithChangeSet:filter:
_initWithChangeSet:filter:
initWithSingleValueChanges:multiValueAdditions:multiValueRemovals:
rollbackChanges
rollbackChangesForKeys:
markChangesAsSaved
changedKeys
changedSingleValueKeys
changedMultiValueKeys
hasUnsavedChanges
hasUnsavedChangeForKey:
_isNewAndUnsaved
hasUnsavedMultiValueAdditionForKey:
unsavedMultiValueAddedObjectsForKey:
hasUnsavedMultiValueRemovalForKey:
unsavedMultiValueRemovedObjectsForKey:
valueForSingleValueKey:basedOn:
valueForSingleValueKey:basedOn:and:
changeSingleValue:forKey:basedOn:
changeSingleValue:forKey:basedOn:and:
valuesForMultiValueKey:basedOn:and:
valuesForMultiValueKey:basedOnSet:
isUniqueAddedObject:forKey:
replaceMultiChangeAddedObject:withObject:forKey:
addChanges:
addChanges:shouldCopyKeyCallback:
addToChanges:forMultiValueKey:basedOn:and:
_addToChanges:forMultiValueKey:basedOn:and:shouldCopyKeyCallback:
removeFromChanges:forMultiValueKey:basedOn:and:
replaceUniqueMultiValueObjectsWithUpdatedObjects:
addChangesAndUpdateUniqueMultiValueObjects:
_cleanupEmptySetsForMultiValueKey:
_semanticIdentifierToObjectMapForObjects:
forceChangeValue:forKey:
skipsPersistentObjectCopy
setSkipsPersistentObjectCopy:
removeAllChangesExceptRemovals
isEffectivelyEqual:
setIsNew:
isModified
setIsModified:
isSaved
setIsSaved:
isDeleted
setIsDeleted:
isUndeleted
setIsUndeleted:
isUndetached
setIsUndetached:
singleValueChanges
setSingleValueChanges:
multiValueAdditions
setMultiValueAdditions:
multiValueRemovals
setMultiValueRemovals:
_skipsPersistentObjectCopy
_isNew
_isModified
_isSaved
_isDeleted
_isUndeleted
_isUndetached
_singleValueChanges
_multiValueAdditions
_multiValueRemovals
T@"NSMutableDictionary",&,N,V_singleValueChanges
T@"NSMutableDictionary",&,N,V_multiValueAdditions
T@"NSMutableDictionary",&,N,V_multiValueRemovals
TB,N,V_isNew
TB,N,V_isModified
TB,N,V_isSaved
TB,N,V_isDeleted
TB,N,V_isUndeleted
TB,N,V_isUndetached
isWeakRelationship
initWithOptions:
addNotification:
removeNotification:
_setNotificationsCollectionFlag
_hasNotificationsCollectionFlag
T@"EKSource",R,N
T@"NSSet",C,N
inviteReplyNotificationFromEventStore:
TQ,N,V_status
suggestedEventInfoWithOpaqueKey:uniqueKey:
T@"EKPersistentEvent",D,N
TQ,D,N
T@"NSDate",C,D,N
token
_token
T@"EKEventStore",R,W,N,V_eventStore
TI,R,N,V_token
expandWithObjectsPendingCommit:deletedObjectIDs:andResultArray:
searchWithEntityClass:predicate:store:
signpostHandle
initWithEntityClass:predicate:store:
terminate
_createOSActivity
signpostStart
signpostEndWithError:count:
_startActivityWithCompletion:synchronous:
_startFetchObjectIDsActivityWithCompletion:synchronous:
_startProcessingWithCompletion:synchronous:processor:
_fetchObjectIDsActualWithCompletion:synchronous:
_startActualWithCompletion:synchronous:
startWithCompletion:
runSynchronously
fetchObjectIDs
_entityClass
_predicate
_cancellationToken
_finished
_isCancelled
_retryCount
reminderWithEventStore:
_removeSnoozedAlarmsFromReminder:usingDueDate:
generateUniqueIDWithReminder:calendar:
reminderIdentifier
setCompletionDate:
firstAlertDate
setFirstAlertDate:
setCompleted:
isCompleted
clearParentID
bestDisplayAlarm
setStartDateComponents:
setDueDateComponents:
parentID
setParentID:
_startDateComponents
_dueDateComponents
_parentID
T@"EKObjectID",&,N,V_parentID
T@"NSDateComponents",C,N,V_startDateComponents
T@"NSDateComponents",C,N,V_dueDateComponents
completed
TB,N,GisCompleted
_syncDidEndExternally
_notificationCountChangedExternally
_alertPrefChanged
_timerFired
_syncTimerFired:
logHandle
requestedDarwinNotifications
blacklistedNotificationQueue
addBlacklistedNotificationObjectID:
blacklistedRowIDs
T@"NSObject<OS_os_log>",R,N
initWithOptions:eventStore:
initWithOptions:eventStoreGetter:
_initWithOptions:eventStore:eventStoreGetter:
_killTimer
notificationCount
notificationReferences
adjust
attemptReload
attemptReloadSynchronously:
_addRemovedOrAddedObjectIDsTo:oldNotifications:newNotifications:
_updateTimerFireDate:
effectiveCallbackQueue
handleDarwinNotification:
_eventStoreChanged
_databaseChanged
_fetchEventNotificationReferencesFromEventStore:earliestExpiringNotification:
_resetSyncTimer
_killSyncTimer:
_syncDidEnd:
trackChangesInEventStore
callbackNotificationQueue
setCallbackNotificationQueue:
notificationQueue
isMonitoringOnlyNotificationCount
eventStorePurger
_eventStoreGetter
_running
_nextFireTime
_syncTimer
_pendingChanges
_lastChangedTimestamp
_changedIDsValid
_changedIDs
_ignoreSyncTimer
_initialCheck
_shouldInstallPersistentTimer
_useSyncIdleTimer
_registerForDarwinNotifications
_filteredByShowsNotificationsFlag
_computeChangedNotificationSet
_automaticallyFaultNotifications
_lastExpirationTimerFireDateWasInThePast
_isExpandedCount
_excludeUncheckedCalendars
_isMonitoringOnlyNotificationCount
_notificationCount
_notificationReferences
_callbackNotificationQueue
_notificationQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_notificationQueue
TB,R,N,V_isMonitoringOnlyNotificationCount
T@"EKTimedEventStorePurger",R,N,V_eventStorePurger
T@"NSObject<OS_dispatch_queue>",&,N,V_callbackNotificationQueue
TQ,R,N,V_notificationCount
T@"NSArray",R,N,V_notificationReferences
userInfo
preferredAddress
setPreferredAddress:
principalPath
setPrincipalPath:
_displayName
_preferredAddress
_principalPath
T@"NSString",&,N,V_displayName
T@"NSString",&,N,V_preferredAddress
T@"NSString",C,N,V_principalPath
T@"NSDictionary",R
availabilityFreshnessWindow
setAvailabilityFreshnessWindow:
saveGeocodedLocationsInTravelEngine
setSaveGeocodedLocationsInTravelEngine:
overrideTravelAdvisoryHypothesis
setOverrideTravelAdvisoryHypothesis:
overriddenTravelAdvisoryHypothesisTransportType
setOverriddenTravelAdvisoryHypothesisTransportType:
overriddenTravelAdvisoryHypothesisConservativeTravelTime
setOverriddenTravelAdvisoryHypothesisConservativeTravelTime:
overriddenTravelAdvisoryHypothesisEstimatedTravelTime
setOverriddenTravelAdvisoryHypothesisEstimatedTravelTime:
overriddenTravelAdvisoryHypothesisAggressiveTravelTime
setOverriddenTravelAdvisoryHypothesisAggressiveTravelTime:
overriddenTravelAdvisoryHypothesisSupportsLiveTraffic
setOverriddenTravelAdvisoryHypothesisSupportsLiveTraffic:
overriddenTravelAdvisoryHypothesisCurrentTrafficDensity
setOverriddenTravelAdvisoryHypothesisCurrentTrafficDensity:
overriddenTravelAdvisoryHypothesisRouteName
setOverriddenTravelAdvisoryHypothesisRouteName:
overriddenTravelAdvisoryHypothesisTravelState
setOverriddenTravelAdvisoryHypothesisTravelState:
preventMarkingTravelAdvisoryEntriesAsDismissed
setPreventMarkingTravelAdvisoryEntriesAsDismissed:
forceDisplayOfNewTravelAdvisoryHypotheses
setForceDisplayOfNewTravelAdvisoryHypotheses:
performAgendaEntryEqualityChecksInTravelEngine
setPerformAgendaEntryEqualityChecksInTravelEngine:
verifyIntegrityOfAvailabilityTimeSearchTimelines
setVerifyIntegrityOfAvailabilityTimeSearchTimelines:
showDepartureDateForTransitTimeToLeave
setShowDepartureDateForTransitTimeToLeave:
shouldBypassTravelEngineThrottle
setShouldBypassTravelEngineThrottle:
syntheticTravelAdvisoriesEnabled
setSyntheticTravelAdvisoriesEnabled:
serializeEvent:error:
deserializeData:isNew:error:
versionFromData:error:
version
initWithEventStore:withVersion:
_version
T@"NSString",R,N,V_version
_addEventOccurrenceAndProposedTimeOccurrenceFor:withOccurrenceStartDate:toResults:excludeProposed:excludeDeclinedUnlessProposed:
_defaultDescriptionForCADErrorCode:
_defaultDescriptionForEKErrorCode:
errorWithCADResult:
errorWithCADErrorCode:
errorWithCADErrorCode:description:
errorWithEKErrorCode:
errorWithEKErrorCode:underlyingError:
errorWithEKErrorCode:description:
errorWithEKErrorCode:description:reason:
errorWithEKErrorCode:description:underlyingError:reason:
errorWithDomain:code:description:underlyingError:reason:
setIsCurrentUser:
scheduleAgent
setScheduleAgent:
setInviteReplyCalendar:
stringForPeriod:
activate
deactivate
initWithDateProvider:
active
startOfLeaveNowPeriod
startOfRunningLatePeriod
updateWithHypothesis:
setPeriodChangedCallback:
periodChangedCallback
period
_refresh
_refreshPeriod
_refreshTimer
_refreshOnDate:
startOfLeaveNowPeriodInternal
setStartOfLeaveNowPeriodInternal:
startOfRunningLatePeriodInternal
setStartOfRunningLatePeriodInternal:
internalActive
setInternalActive:
internalPeriod
setInternalPeriod:
internalPeriodChangedCallback
setInternalPeriodChangedCallback:
dateProvider
_internalActive
_startOfLeaveNowPeriodInternal
_startOfRunningLatePeriodInternal
_internalPeriod
_internalPeriodChangedCallback
_dateProvider
T@"NSDate",&,N,V_startOfLeaveNowPeriodInternal
T@"NSDate",&,N,V_startOfRunningLatePeriodInternal
TB,N,V_internalActive
TQ,N,V_internalPeriod
T@?,C,N,V_internalPeriodChangedCallback
T@"<CalDateProvider>",R,N,V_dateProvider
initWithDate:
T@"NSDate",&,N
birthdayID
setBirthdayID:
endDateRaw
setEndDateRaw:
setProposedStartDate:
needsOccurrenceCacheUpdate
setNeedsOccurrenceCacheUpdate:
locationPredictionState
setLocationPredictionState:
invitationChangedProperties
setInvitationChangedProperties:
travelAdvisoryBehavior
setTravelAdvisoryBehavior:
responseComment
setResponseComment:
externalTrackingStatus
setExternalTrackingStatus:
canForward
setCanForward:
disallowProposeNewTime
junkStatus
setJunkStatus:
setDisallowProposeNewTime:
setOriginalStartDate:
actions
setActions:
conferenceURLString
setConferenceURLString:
birthdayContactIdentifier
setBirthdayContactIdentifier:
birthdayContactName
setBirthdayContactName:
recurrenceSet
setRecurrenceSet:
setConferenceURLDetectedString:
specialDayString
setSpecialDayString:
firedTTL
setFiredTTL:
changeSummaryForObject:
diffSummaryBetweenObject:andObject:
EKObjectChangeSummarizer_singleValueDiffKeys
EKObjectChangeSummarizer_multiValueDiffKeys
supportsSecureCoding
syntheticHypothesisWithStartDate:conservativeTravelTime:estimatedTravelTime:aggressiveTravelTime:
encodeWithCoder:
initWithCoder:
initWithTransportType:conservativeDepartureDate:conservativeTravelTime:suggestedDepartureDate:estimatedTravelTime:aggressiveDepartureDate:aggressiveTravelTime:routeName:supportsLiveTraffic:currentTrafficDensity:trafficDensityDescription:travelState:
isEqualToHypothesis:
transportType
conservativeDepartureDate
conservativeTravelTime
suggestedDepartureDate
estimatedTravelTime
aggressiveDepartureDate
aggressiveTravelTime
routeName
supportsLiveTraffic
currentTrafficDensity
trafficDensityDescription
travelState
_transportType
_conservativeDepartureDate
_conservativeTravelTime
_suggestedDepartureDate
_estimatedTravelTime
_aggressiveDepartureDate
_aggressiveTravelTime
_routeName
_supportsLiveTraffic
_currentTrafficDensity
_trafficDensityDescription
_travelState
Ti,R,N,V_transportType
T@"NSDate",R,C,N,V_conservativeDepartureDate
Td,R,N,V_conservativeTravelTime
T@"NSDate",R,C,N,V_suggestedDepartureDate
Td,R,N,V_estimatedTravelTime
T@"NSDate",R,C,N,V_aggressiveDepartureDate
Td,R,N,V_aggressiveTravelTime
T@"NSString",R,C,N,V_routeName
TB,R,N,V_supportsLiveTraffic
TQ,R,N,V_currentTrafficDensity
T@"NSString",R,C,N,V_trafficDensityDescription
Tq,R,N,V_travelState
setTransportType:
setConservativeDepartureDate:
setConservativeTravelTime:
setSuggestedDepartureDate:
setEstimatedTravelTime:
setAggressiveDepartureDate:
setAggressiveTravelTime:
setRouteName:
setSupportsLiveTraffic:
setCurrentTrafficDensity:
setTrafficDensityDescription:
setTravelState:
Td,D,N
initWithValue:
value
setValue:
_value
T@,W,N,V_value
_relationForKey:
_shouldRetainPropertyForKey:
_takeDefaultValuesForObjects:inEventStore:
allObjectsWithChangesRelatedToObjects:
_setEventStore:
_setObjectID:inDatabaseRestoreGeneration:
_CADObjectID
isDirty
changed
_loadedPropertyKeys
isPropertyDirty:
isPropertyLoaded:
dirtyPropertiesAndValues
didCommit
reset:
_setPendingInsert:
_isPendingInsert
_setPendingUpdate:
_isPendingUpdate
_setPendingDelete:
_isPendingDelete
_setDefaultPropertiesLoaded:
_areDefaultPropertiesLoaded
coCommitObjects
internalAddCoCommitObject:
removeCoCommitObject:
internalRemoveCoCommitObject:
loadedPropertyForKey:
_loadedPropertyForKey:
_propertyForKey:
_createLoadedPropertiesIfNeeded
_createUpdatedPropertiesIfNeeded
_setProperty:forKey:isUpdatedProperty:
_setProperty:forKey:isRelation:isUpdatedProperty:
_setProperty:forKey:forRelation:isUpdatedProperty:
_releaseLoadedProperties
unloadPropertyForKey:
primitiveRelationValueForKey:
_addObjectCore:toValues:relation:
_removeObjectCore:fromValues:relation:
primitiveAddRelatedObject:forKey:
primitiveRemoveRelatedObject:forKey:
primitiveSetRelationValue:forKey:
_primitiveValueForKey:loader:
_primitiveSetValue:forKey:
primitiveNumberValueForKey:
primitiveSetNumberValue:forKey:
primitiveIntValueForKey:
primitiveSetIntValue:forKey:
primitiveDoubleValueForKey:
primitiveSetDoubleValue:forKey:
primitiveBoolValueForKey:
primitiveSetBoolValue:forKey:
primitiveDateValueForKey:
primitiveSetDateValue:forKey:
_loadStringValueForKey:
primitiveStringValueForKey:
primitiveSetStringValue:forKey:
primitiveDataValueForKey:
primitiveSetDataValue:forKey:
primitiveSecurityScopedURLWrapperValueForKey:
primitiveSetSecurityScopedURLWrapperValue:forKey:
_loadRelationForKey:value:
_loadChildIdentifiersForKey:values:
takeDefaultValues:
takeValues:forKeys:
_takeValues:forKeys:relatedObjectValues:
_takeValues:relatedObjectValues:
takeValuesForDefaultPropertyKeys:values:
_takeValuesForDefaultPropertyKeys:values:relatedObjectValues:
_loadDefaultPropertiesIfNeeded
_loadPropertiesIfNeeded:
loadPropertiesIfNeeded:
ownedObjects
dump
_coCommitObjects
_loadedProperties
_updatedProperties
T@"EKEventStore",R,N
initWithSource:group:completionBlock:
_group
_completionBlock
_resultsSet
initWithRecurrenceRule:
createRecurrenceRule:
_frequency
_interval
_recurrenceEnd
_firstDayOfTheWeek
_daysOfTheWeek
_daysOfTheMonth
_daysOfTheYear
_weeksOfTheYear
_monthsOfTheYear
_setPositions
Tq,R,N,V_frequency
Tq,R,N,V_interval
T@"EKRecurrenceEnd",C,N,V_recurrenceEnd
Tq,R,N,V_firstDayOfTheWeek
T@"NSArray",R,N,V_daysOfTheWeek
T@"NSArray",R,N,V_daysOfTheMonth
T@"NSArray",R,N,V_daysOfTheYear
T@"NSArray",R,N,V_weeksOfTheYear
T@"NSArray",R,N,V_monthsOfTheYear
T@"NSArray",R,N,V_setPositions
travelStateIndicatesTravelingTowardDestination:
formattedLocationCoordinates:
geoRouteHypothesisTravelStateForString:
geoTransportTypeAsString:
geoTransportTypeForString:
geoTrafficDensityAsString:
geoTrafficDensityForString:
authorizationStatusAsString:
geoTransportTypeForCalLocationRoutingMode:
date:representsApproachingDepartureDateForHypothesis:
date:representsLatenessForHypothesis:
date:representsImmediateDepartureForHypothesis:
maximumAllowableTravelTime
minimumAllowableTravelTime
cadRouteHypothesisForEKTravelEngineHypothesis:
sharedEventStore
_sharedEventStore
T@"EKEventStore",R,N,V_sharedEventStore
CALFreeBusyTypeFromEKAvailType:
leastAvailabileFreeBusyTypeForArray:
getCALFreeBusyFromEKSpans:inRange:
getCALFreeBusyFromResults:forAttendees:inRange:
summarizedAvailabilityTypeForSpans:
spansIncludeBusyPeriod:
showTypeAsBusy:
showTypeAsUnavailable:
orderForType:
dataFromErrorUserInfo:
errorUserInfoFromData:
_permittedClassesForArchivingLastSyncErrorUserInfo
resourceChanges
setResourceChanges:
addResourceChange:
removeResourceChange:
revert
compareStartDateWithEvent:
knownKeysToSkipForFutureChanges
knownKeysToUseForFutureChanges
eventWithEventStore:
externalUriScheme
_modifiedNotificationUserInfoWithIdentifier:forRevert:
_eventAvailabilityForParticipantStatus:supportedEventAvailabilities:isAllDayEvent:
_updatedPredictedLocationRespectingTimeoutBudgetForEvent:error:
_basicChangesRequiringSpanAll
_relatedCachedTimeKeys
isMultiDayTimedEventWithStartDate:endDate:allDay:inCalendar:
_allowSlicingFromDetachedOccurrence
_coercedEventAvailabilityForDesiredAvailability:supportedAvailabilities:
_notDetachedOccurrenceOfEvent:existsInDateRangeWithStartDate:endDate:inTimeZone:
_validateSpanForRemove:error:
_detachOrSliceEvent:withSpan:savingEvent:withOriginalStartDate:newStartDate:
generateUniqueIDWithEvent:originalEvent:calendar:
knownRequireRSVPKeys
knownPerUserPropertyKeys
_calendarsAreSharedToMeInSameSourceAndHaveSameOwner:
eventFromICSEvent:inStore:
ekWeekDayFromVCSWeekDay:
sendersEmail
sendersPhoneNumber
initWithPersistentObject:occurrenceDate:
_calculateDurationWithStart:end:allDay:
eventIdentifier
specificIdentifier
eventOccurrenceID
recurrenceIdentifier
_invalidateRecurrenceIdentifier
externalURL
isStatusDirty
isStartDateDirty
isEndDateDirty
isAllDayDirty
postModifiedNotification
postModifiedNotificationWithUserInfo:
needsGeocoding
setNeedsGeocoding:
phantomMaster
setPhantomMaster:
isPhantom
setIsPhantom:
_isAllDay
_updateRecurrenceEndDatesWithAdjustmentMode:
setOccurrenceIsAllDay:
startCalendarDateIncludingTravelTime
_committedStartDate
_committedEndDate
startCalendarDate
overrideStartDate:
_pinDate:withPinMode:
adjustedPersistedDateForDate:withAdjustmentMode:pinMode:clientCalendarDate:
adjustedPersistedDateForDate:persistedDateIsInUTC:withAdjustmentMode:pinMode:clientCalendarDate:
_updateStartDateForDate:withAdjustmentMode:
_setStartDate:andClearProposedTimes:
duration
durationIncludingTravel
occurrenceEndDate
endDateUnadjustedForLegacyClients
setEndDateUnadjustedForLegacyClients:
endCalendarDate
_updateEndDateForDate:withAdjustmentMode:
forceSetTimeZone:
_settingTimeZoneChangesStartEndDates
effectiveTimeZone
initialStartDate
initialEndDate
isMaster
isMasterOrDetachedOccurrence
originalOccurrenceStartDate
originalOccurrenceEndDate
occurrenceDate
_isParticipationStatusDirty
_isOnlyChangeToAttendeesSelfAttendeeParticipationStatus
supportsParticipationStatusModificationsWithoutNotification
_userAddressesRepresentInvitedAttendee:checkEmailAddresses:
currentUserGeneralizedParticipantRole
isCurrentUserInvitedAttendee
currentUserMayActAsOrganizer
markEventAsAttendeeForward
_parentParticipationStatus
birthdayPersonID
setBirthdayContact:
isBirthday
setLunarCalendarString:
lunarCalendarString
makeRecurrenceEndDateBased
_occurrenceDatesForCount:
_lastRecurrenceDate
_adjustDateIfFloatingForDate:
makeRecurrenceEndCountBased
hasComplexRecurrence
futureOccurrencesCannotBeAffectedByChangingStartDateToDate:
_defaultAlarmOffset
virtualConferenceTextRepresentation
virtualConference
_originallyCommittedVirtualConference
setVirtualConference:
invalidateVirtualConferenceURLIfNeededOnCommit:
clearVirtualConferenceURLsQueuedForInvalidation
invalidateRemovedVirtualConferences
_buildConferenceStringFromNotesWithoutConference:serializedConference:
specialDayType
setSpecialDayType:
removeServerRefreshRelatedProperties
clearInvitationStatus
addEventAction:
removeEventAction:
isAlerted
setIsAlerted:
_setInvitationStatusAlertedIfNecessary
_setInvitationStatusUnalertedIfNecessary
_shouldAlertInviteeDeclines
_travelTimeInternalDescription
startDateIncludingTravel
isProposedTimeEvent
proposedEndDate
travelRoutingMode
allowsTravelTimeModifications
allowsPrivacyLevelModifications
allowsAllDayModifications
setPrivacyLevelWithoutVerifyingPrivacyModificationsAllowed:
locationIsAConferenceRoom
_invitationChangedPropertyForFlag:
_setInvitationChangedProperty:forFlag:
attendeeComment
attendeeProposedStartDate
attendeeDeclinedStartDate
setAttendeeComment:
setAttendeeStatus:
setAttendeeProposedStartDate:
setAttendeeDeclinedStartDate:
serverSupportedProposeNewTime
allowsProposedTimeModifications
supportsAddingAttachments
setStructuredLocation:preserveConferenceRooms:
roomAttendees
addConferenceRooms:
removeConferenceRooms:
_conferenceRoomDisplayStrings
_needsPredictedLocationCacheUpdateHoldingLock
_updatePredictedLocationCacheIfNeededHoldingLock
_firstNonConferenceRoomLocationTitle
_updatePredictedLocationCacheIfNeeded
_clearLocationPredictionCacheIfNotFrozenHoldingLock
_clearLocationPredictionCacheIfNotFrozen
preferredLocationWithoutPrediction
confirmPredictedLocation:
rejectPredictedLocation
hasPredictedLocation
setPredictedLocationFrozen:
setLocationPredictionAllowed:
forceLocationPredictionUpdate
conferenceURL
setConferenceURL:
setEndLocation:
endLocation
isTentative
compareStartDateIncludingTravelWithEvent:
compareOriginalStartDateWithEvent:
isDetached
isPrivateEventSharedToMe
responseMustApplyToAll
_changesRequireDetachOrSlice
canDetachSingleOccurrence
hasAttachmentChanges
changingAllDayPropertyIsAllowed
hasChangesRequiringSpanAll
_hasOrHadRecurrenceRule
_hasBasicChangesRequiringSpanAll
_hasRecurrenceRuleChangeRequiringSpanAll
automaticLocationGeocodingAllowed
eligibleForTravelAdvisories
potentiallyEligibleForTravelAdvisories
_eligibleForTravelAdvisoriesIncludePotential:
travelAdvisoryBehaviorIsEffectivelyEnabled
clearCachedTimeValues
startOfDayForStartDateInCalendar:
startOfDayForEndDateInCalendar:
daysSpannedInCalendar:
isMultiDayTimedEventInCalendar:
_clearOriginalDateFields
pendingParticipationStatus
allowsAvailabilityModifications
canBeRespondedTo
_hasExternalIDOrDeliverySource
hasValidEventAction
allowsParticipationStatusModifications
privacyDescription
validateOccurrenceDateStillMatchesRecurrenceRules
snoozeAlarm:untilTargetDate:
_snoozeAlarm:withTimeIntervalFromNow:orTargetDate:
validateWithSpan:error:
saveWithSpan:error:
_needsAttendeePartStatReset
_deleteErrorIfInvalid
_eventKitPropertyKeyForCalendarItemErrorPropertyKey:
_saveUndeletedDetachedOccurrence
_saveUndetachedOccurrenceWithError:
_extendConferenceURLExpirationDateToDate:
_updateModifiedPropertiesForThisEventAndAllDetachments
_updateVideoConferenceOnlyModified
_updateModifiedProperties
_propagateAlarmChangesToDetachedEvents:
_propagateChangesToDetachedEvents:significantlyDetachedEvents:startDateOffset:duration:calendar:
_updateSelfAttendeeToMatchSelfAttendee:
_duplicateAddedAttachmentsToDetachedEvents:significantlyDetachedEvents:
_updateUUIDForNewParticipants
isSignificantlyDetached
isSignificantlyDetachedIgnoringParticipation
_isSignificantlyDetachedComparedToMaster:shouldIgnorePartStat:
_updateMasterDate:forChangeToOccurrenceDate:fromOriginalOccurrenceDate:
_applyTimeChangesToMaster
_clearExceptionDatesAndUpdateDetachedOriginalDates:
_filterExceptionDatesAndDetachments
_leftoversInDates:withGeneratedDates:
_adjustAlarmsAfterMovingOrCopyingFromCalendar:toCalendar:
_removeInvalidAlarmsDuringSave
_adjustRecurrenceRulesAfterMovingOrCopyingFromCalendar:toCalendar:notes:
_adjustAttendeesAfterMovingOrCopyingFromCalendar:toCalendar:
_adjustPrivacyAfterMovingOrCopyingFromCalendar:toCalendar:savingItem:
_adjustAvailabilityAfterMovingOrCopyingFromCalendar:toCalendar:
_adjustScheduleAgentAfterMovingOrCopyingFromCalendar:toCalendar:
_adjustAttachmentsAfterMovingOrCopyingFromCalendar:toCalendar:savingItem:
_adjustURLAfterMovingOrCopyingFromCalendar:toCalendar:notes:
_adjustTimeZoneAfterMovingOrCopyingFromCalendar:toCalendar:notes:
markAsUndetachedWithStartDate:endDate:
_addOrganizerToRecentsIfNeeded
_addNewAttendeesToRecentsIfNeeded
nextOccurrenceOrDetachmentAfter:
earliestOccurrenceEndingAfter:
earliestOccurrenceEndingAfter:excludeSignificantDetachments:excludeCanceledDetachments:excludeDeclinedDetachments:
hasAttendeeProposedTimes
copyToCalendar:withOptions:
duplicateWithOptions:
_keysToChangeForDuplicateWithOptions:
countOfAttendeeProposedTimes
validateRecurrenceRule:error:
overlapsWithOrIsSameDayAsEventInSeries
_validateDatesAndRecurrencesGivenSpan:error:
durationOverlapsRecurrenceInterval
_occurrenceExistsOnDate:timeZone:
_checkStartDateConstraintAgainstDate:timeZone:error:
conformsToRecurrenceRules:
allowsResponseCommentModifications
_isSimpleRepeatingEvent
_shouldCancelInsteadOfDeleteWithSpan:
_shouldDeclineInsteadOfDelete
_deleteWithSpan:
_deleteFromOccurrenceDateOnward:
_updateSelfFromDetachedEventIfNeededForDelete
_deleteThisOccurrence
_cancelWithSpan:error:
_cancelDetachedEvents
_isOriginalOccurrenceStartDateSameAsCommittedStartDate
removeWithSpan:error:
isFirstOccurrence
isOnlyOccurrence
isPartOfExistingRecurringSeries
masterEvent
_eventIsTheOnlyRemainingOccurrence
_noRemainingEarlierOccurrences
_recursivelyAssignAllAttachmentsNewIdentities
_assignAllAttachmentsNewIdentities
_shouldPreserveFutureWhenSlicingWithStartDate:newStartDate:
_detachOrSliceWithSpan:withOriginalStartDate:newStartDate:
privacyLevelString
updateEventToEvent:
updateEventToEvent:commit:
_fetchedEventIsConflict:forStartDate:endDate:
potentialConflictOccurrenceDatesInTimePeriod:
scanForConflicts
updateWithGeocodedMapItemAndSaveWithCommit:eventStore:error:
launchURL
dismissAcceptedProposeNewTimeNotification
_clearAttendeeChangedFlags
dismissAttendeeRepliedNotification
_respondToProposedTimeFromAttendee:shouldAccept:
acceptProposedTimeNotificationFromAttendee:
declineProposedTimeNotificationFromAttendee:
diffFromCommitted
isEqual:comparingKeys:
isDifferentWithDiff:
_diff:isDifferentFromCommittedEventHelperRequiresReschedule:
isDifferentAndRequiresRescheduleWithDiff:
isDifferentAndModifiedAttendeesWithDiff:
isDifferentAndHasForwardedAttendeesWithDiff:
isDifferentAndHasNewProposedTimeWithDiff:
isDifferentExceptingPerUserPropertiesWithDiff:
isDifferentFromCommittedEventAndRequiresReschedule
isDifferentAndRequiresRSVPWithDiff:
isDifferentFromCommittedEventAndRequiresRSVP
isDifferentAndHasUnscheduledAttendeesWithDiff:
isDifferentFromCommittedEventAndHasUnscheduledAttendees
isPrivacySet
requirementsToMoveFromCalendar:toCalendar:
requirementsToMoveToCalendar:
canMoveToCalendar:fromCalendar:allowedRequirements:error:
requiresCopyToMoveFromCalendar:toCalendar:
_canMoveOrCopyFromCalendar:toCalendar:allowedRequirements:error:
seriesHasOutOfOrderEvents
isOutOfOrderWithEventInSeries
seriesHasOverlappingOrOnSameDayOrOutOfOrderEvents
_requirementsToMoveOrCopyToCalendarHelperAllowedToMoveOrCopyEventFromCalendar:toCalendar:
_hasAbsoluteAlarms
_nsCalendar
_suggestedStartDateHelperRecurrenceRuleRequiresExpansion:forDate:
suggestedStartDateForCurrentRecurrenceRule
suggestedStartDateForCurrentRecurrenceRuleWithSimulatedNowDate:
isValidAttendee:forCalendar:
_isValidAttendee:forCalendar:selfAttendeeIsValid:
attendeesNotIncludingOrganizer
isAttendeeSameAsOrganizer:
_requirementsToMoveToCalendarHelperAlterationsRequiredToMoveEventFromCalendar:toCalendar:
_requirementsToMoveToCalendarHelperDuplicationRequiredToMoveEventFromCalendar:toCalendar:
_requirementsToMoveToCalendarHelperNeedToRemoveOriginalToMoveEventFromCalendar:toCalendar:
_requirementsToMoveToCalendarHelperReinviteAttendeesRequiredToMoveEventFromCalendar:toCalendar:
_requirementsToMoveToCalendarHelperRemoveAttendeesRequiredToMoveEventFromCalendar:toCalendar:
setRecurrenceRuleString:
_ekRecurrenceRuleFromICSRecurrenceRule:
_ekRecurrenceRuleFromVCSRecurrenceRule:
birthdayPersonUniqueID
occurrenceStartDate
setOccurrenceStartDate:
setOccurrenceEndDate:
occurrenceIsAllDay
setOriginalOccurrenceStartDate:
setOriginalOccurrenceEndDate:
originalOccurrenceIsAllDay
setOriginalOccurrenceIsAllDay:
requiresDetachDueToSnoozedAlarm
setRequiresDetachDueToSnoozedAlarm:
clearModifiedFlags
setClearModifiedFlags:
preventConferenceURLDetection
setPreventConferenceURLDetection:
showEventURLString
isMainOccurrence
setVirtualConferenceTextRepresentation:
_cachedLocationPrediction
_cachedLocationPredictionExpirationDate
_locationPredictionFrozen
_locationPredictionAllowed
_locationPredictionLock
_virtualConferenceURLsToInvalidateOnCommit
_occurrenceIsAllDay
_requiresDetachDueToSnoozedAlarm
_preventConferenceURLDetection
_isMainOccurrence
_clearModifiedFlags
_birthdayPersonUniqueID
_occurrenceStartDate
_occurrenceEndDate
_originalOccurrenceStartDate
_originalOccurrenceEndDate
_originalOccurrenceIsAllDay
_showEventURLString
_virtualConferenceTextRepresentation
T@"EKCalendarDate",C,N,V_occurrenceStartDate
T@"EKCalendarDate",C,N,V_occurrenceEndDate
TB,N,V_occurrenceIsAllDay
T@"EKCalendarDate",C,N,V_originalOccurrenceStartDate
T@"EKCalendarDate",C,N,V_originalOccurrenceEndDate
T@"NSNumber",C,N,V_originalOccurrenceIsAllDay
TB,N,V_requiresDetachDueToSnoozedAlarm
Ti,N,V_clearModifiedFlags
T@"EKRecurrenceIdentifier",R,N
Tq,N
Td,R,N
T@"EKStructuredLocation",&,D,N
T@"EKSuggestedEventInfo",&,N
T@"EKStructuredLocation",R,N
T@"NSURL",&,N
TB,N,V_preventConferenceURLDetection
T@"NSString",R,N,V_showEventURLString
currentUserInvitedAttendee
TB,R,N,GisCurrentUserInvitedAttendee
T@"NSDate",R,C,N
TB,R,D,N
T@"EKCalendarDate",R,N
TB,R,N,V_isMainOccurrence
privacySet
TB,R,N,GisPrivacySet
T@"EKVirtualConference",&,N
T@"NSString",&,N,V_virtualConferenceTextRepresentation
TB,N,GisAllDay
T@"EKStructuredLocation",C,D,N
T@"EKParticipant",R,D,N
T@"NSString",R,N,V_birthdayPersonUniqueID
organizerWithName:emailAddress:phoneNumber:address:isCurrentUser:
initWithName:emailAddress:phoneNumber:address:isCurrentUser:
setCurrentUser:
initForCalendarStoreWithCalendars:
remListIDsWithAllLists:
predicateFormat
_calendarIdentifierSet
noCalendarNoResult
initWithSource:startDate:endDate:ignoredEventID:addresses:resultsBlock:
_availabilityCache
_addresses
_requestID
stateChangedNotificationName
_dataProtectionStateChanged
dataIsAccessible
stateChangedCallback
setStateChangedCallback:
dataProtectionObserver
setDataProtectionObserver:
_stateChangedCallback
_dataProtectionObserver
T@"CDBDataProtectionObserver",&,N,V_dataProtectionObserver
T@?,C,N,V_stateChangedCallback
attendeeWithEmailAddress:name:
attendeeWithName:url:
attendeeWithName:emailAddress:
attendeeWithName:phoneNumber:
attendeeWithName:emailAddress:address:
attendeeWithName:emailAddress:phoneNumber:url:
_ekParticipantStatusFromCalAttendeeStatus:
_calAttendeeStatusFromEKParticipantStatus:
_isParticipantStatusDirty
pendingStatus
setPendingStatus:
_setFlag:value:
_valueForFlag:
setCommentChanged:
setStatusChanged:
hasProposedStartDate
proposedStartDateForEvent:
setProposedStartDate:forEvent:
proposedStartDateStatus
setProposedStartDateStatus:
setProposedStartDateChanged:
markAsForward
rsvpRequested
initWithCustomClientId:
initWithSuffix:
initWithCustomClientId:suffix:
CADChangeTrackingClientId
suffix
customClientId
_suffix
_customClientId
T@"NSString",R,C,N,V_suffix
T@"NSString",R,C,N,V_customClientId
T@"CADChangeTrackingClientId",R,N
serializedProperties
_initAttendees:selfAttendee:
_initAlarms:
_initAttachments:
_initRecurrenceRules:
createEventInEventStore:
setIsAllDay:
setCalendarIdentifier:
_recurrenceRules
_calendarIdentifier
_selfAttendee
T@"NSDate",C,N,V_startDate
T@"NSDate",C,N,V_endDate
T@"NSTimeZone",C,N,V_timeZone
TB,N,V_isAllDay
T@"NSMutableArray",&,N,V_recurrenceRules
T@"NSString",C,N,V_title
T@"NSString",C,N,V_notes
T@"NSString",C,N,V_calendarIdentifier
T@"NSString",C,N,V_location
T@"EKSerializableStructuredLocation",&,N,V_structuredLocation
T@"EKSerializableParticipant",&,N,V_selfAttendee
T@"NSNumber",&,N,V_isNew
cal_changeMayAffectAnyObjectOfType:
cal_changeMayAffectCalendarsOrSources
sharedInstance
_logHandle
_displayStringForDate:
handleEventCreation:
prepareForEventUpdate:
handleEventUpdate:
handleEventDeletion:
removeInteractionsForCalendar:
_intentForAction:onEvent:
donateInteractionForAction:onEvent:
donatePredictiveAction:forEvent:
createEventIntentForEvent:
createEventIntentForEvent:withSuggestionsInfoUniqueKey:
initWithRootObject:
faultIfNeededForObject:
rootObject
depth
setDepth:
reachedMaxDepth
setReachedMaxDepth:
_reachedMaxDepth
_rootObject
_depth
T@"EKObject",R,N,V_rootObject
TQ,N,V_depth
TB,N,V_reachedMaxDepth
_sharedInit
_readWriteLock
_performWithReadLock:
_performWithWriteLock:
cachedValueForKey:
cachedValueForKey:populateBlock:
setCachedValue:forKey:
clearCachedValueForKey:
clearCachedValuesForKeys:
cachedValueForKey:expectingCachedValue:forMasterKey:relatedKeys:populateBlock:
validateWithOwner:error:
_initChangeSetIfNone
_markAsNewCommon
_markAsNotNewCommon
_markAsDeletedCommon
_markAsUndeletedCommon
_markAsSavedCommon
_markAsCommittedCommon
_hasChanges
hasUnsavedChangesInKeys:
hasUnsavedChangesIgnoreKeys:
_hasUnsavedChangesInKeys:ignoreKeys:
_hasChangeHelperInKeys:ignoreKeys:checkUnsaved:
_singleRelationshipKeysToCheckForChanges
_multiRelationshipKeysToCheckForChanges
_hasChangesForKey:
_hasChangesForKey:checkUnsaved:
_isOnlyChangedKey:
_areOnlyChangedKeys:
_previousValueForKey:
addChangesFromObject:
addChangesFromObject:copyingBackingObjects:
_addChangesFromObject:passingTest:ignoreRelations:copyingBackingObjects:
_addChanges:copyingBackingObjects:
applyChanges:
singleChangedValueForKey:
setSingleChangedValue:forKey:
multiChangedObjectValuesForKey:
addMultiChangedObjectValue:forKey:
addMultiChangedObjectValues:forKey:
removeMultiChangedObjectValue:forKey:
removeMultiChangedObjectValues:forKey:
replaceMultiChangedObjectValuesWithObjectValues:forKey:
_rollbackCommon
_resetIfBackingObjectIsOfClass:fetchResetFrozenObjectBlock:
_resetCommon
_refreshable
_refreshCommon
refetch
_resetWithFrozenObject:
_applyDefinedAfterFirstSaveFrom:
_applyKnownImmutableValuesFrom:
_cachedMeltedObjectsCount
_updateCachedMeltedObjectSetForMultiValueKey:usingBlock:
addCachedMeltedObject:forMultiValueKey:
_addCachedMeltedObject:forMultiValueKey:
removeCachedMeltedObject:forMultiValueKey:
_removeCachedMeltedObject:forMultiValueKey:
setCachedMeltedObjects:forMultiValueKey:
cachedMeltedObjectsForMultiValueKey:
setCachedMeltedObject:forSingleValueKey:
cachedMeltedObjectForSingleValueKey:
frozenOrMeltedCachedSingleRelationObjectForKey:
frozenOrMeltedCachedMultiRelationObjectsForKey:
meltedAndCachedSingleRelationObjectForKey:
updateMeltedAndCachedSingleRelationObject:forKey:frozenClass:
meltedAndCachedMultiRelationObjectsForKey:
updateMeltedAndCachedMultiRelationObjects:forKey:
meltedAndCachedMultiRelationCountForKey:
updateAfterApplyingChanges:
updateMeltedCacheForChangeSet:
updateMultiValueCacheForChangeSet:preservingExistingAdds:
_resetAfterUpdatingChangeSetOrBackingObject
_resetMeltedCache
emptyMeltedCache
emptyMeltedCacheForKey:
emptyMeltedCacheForKeys:
copyMeltedObjectCache
augmentMeltedObjectCache:
diffWithObject:
inverseObjectWithObject:diff:
_convertBackingObjectsWithPath:updateBackingObjects:allChangedBackingObjects:eventStore:updatedBackingObjectProvider:
backingObjectOfChildObject:withRelationshipKey:
prepareReminderKitObjectForSaveWithUpdatedBackingObjectProvider:
cachedMeltedChildIdentifierToParentMap
_cachedMeltedChildIdentifierToParentMap:
_numberOfSharedLocksForUnitTesting
isDerivedRelationship
knownDerivedAndSingleValueRelationshipKeys
knownImmutableKeys
knownSummaryKeys
isMeltedAndNotWeakRelationshipObject:forKey:
isWeakRelationObject:forKey:
addChangesFromObject:toObjects:except:
addChangesFromObject:toObjects:keep:
addChangesFromObject:toObjects:passingTest:
_addChangesFromObject:toObjects:passingTest:copyingBackingObjects:
duplicatedPersistentObjectForObject:alreadyCopiedObjects:
_changeSetForDiff:
_compareAllKnownKeysExceptKeys:forObject:againstObject:
_compareAllKnownKeysExceptKeys:forObject:againstObject:compareIdentityKeys:
_compareKnownKeys:forObject:againstObject:
_compareMultiValueRelationshipKey:forObject:againstObject:propertiesToIgnore:
_compareNonIdentityKeys:forObject:againstObject:propertiesToIgnore:
_compareNonRelationshipKeys:forObject:againstObject:propertiesToIgnore:
_compareSingleValueRelationshipKey:forObject:againstObject:propertiesToIgnore:
_compareRelationshipObject1:againstRelationshipObject2:propertiesToIgnore:relationshipObjectKey:
hasOwnerEmailAddress
diagnosticsCollector:finishedWithError:
diagnosticsCollector:determinedExpectedOutputFiles:
diagnosticsCollector:createdOutputFiles:
initWithEventStore:delegate:
collectDiagnostics
cancelDiagnosticsCollection
files
redactLogs
setRedactLogs:
_files
_determinedOutputFiles
_redactLogs
TB,N,V_redactLogs
T@"<EKDiagnosticsCollectionDelegate>",R,W,N,V_delegate
dayOfWeek:
dayOfWeek:weekNumber:
icsWeekDayFromDayOfTheWeek:
initWithDayOfTheWeek:weekNumber:
iCalendarDescription
dayOfTheWeek
weekNumber
_dayOfTheWeek
_weekNumber
Tq,R,N,V_dayOfTheWeek
Tq,R,N,V_weekNumber
serializedEventWithEvent:
componentsForDate:inTimeZone:
searchWithCSQuery:inStore:inCalendars:resultHandler:completionHandler:
_queryStringForPeopleMatchingSearchTerm:
queryStringForSearchTerm:matchingTypes:
queryStringForSearchTerm:matchingTypes:fromStartDate:toEndDate:
initWithSearchWithCSQuery:inStore:inCalendars:resultHandler:completionHandler:
query
csQuery
T@"EKEventStore",W,V_eventStore
eventWithRandomUUID
rowIDsForCalendars:
calendarWithEventStore:
calendarForEntityType:eventStore:
calendarForEntityTypes:eventStore:
orderSortDescriptors
_eventKitBundle
typeDescription:
_updateToMaxDisplayOrder
reorderBetweenEarlier:later:
reorderCalendars:betweenEarlier:later:
assignColorForNewCalendarIfNeeded
colorString
setColorString:
getColorRed:green:blue:
_clearCGColorCache
CGColor
setCGColor:
_flagValueWithMask:
_setFlagValue:withMask:
allowsContentModifications
setAllowsContentModifications:
readOnly
setReadOnly:
isDefaultSchedulingCalendar
setIsDefaultSchedulingCalendar:
isInbox
setInbox:
isNotificationsCollection
setNotificationsCollection:
isSubscribed
setSubscribed:
isHidden
setHidden:
allowsDeletionOrPropertyModifications
isImmutable
isImmutableRaw
setImmutable:
isSubscribedCalendarJunk
setIsSubscribedCalendarJunk:
isDeletableWithAllKnownCalendars:
_validateDeletableWithAllKnownCalendars:error:
_validateDeletableHelperWithAllKnownCalendars:error:
deletionWarningsMask
canMergeWithCalendar:
eligibleForDefaultSchedulingCalendar
_anotherCalendarForDefaultSchedulingExistsWithAllKnownCalendars:
_anotherCalendarForRemindersExistsWithAllKnownCalendars:
_anyCalendarExistsInSameSourceOfType:withAllKnownCalendars:passingTest:
allowsScheduling
setAllowsScheduling:
prohibitsScheduling
setProhibitsScheduling:
isSharingInvitation
setSharingInvitation:
setSharedOwnerURL:
sharedOwnerURL
setSharedOwnerAddress:
sharedOwnerAddress
sharedOwnerEmail
sharedOwnerPhoneNumber
publishURL
setPublishURL:
canBePublished
setCanBePublished:
canBeShared
setCanBeShared:
isFacebookBirthdayCalendar
setFacebookBirthdayCalendar:
isHolidayCalendar
isSyncedHolidayCalendar
setSyncedHolidayCalendar:
isHolidaySubscribedCalendar
isSubscribedHolidayCalendar
setSubscribedHolidayCalendar:
isChinaHolidayCalendar
setChinaHolidayCalendar:
isFamilyCalendar
setFamilyCalendar:
isMarkedUndeletable
setMarkedUndeletable:
isMarkedImmutableSharees
setMarkedImmutableSharees:
isSuggestionsCalendar
isSuggestedEventCalendar
isNaturalLanguageSuggestedEventCalendar
isMutableSuggestionsCalendar
isMutableNaturalLanguageSuggestionsCalendar
isIgnoringEventAlerts
setIsIgnoringEventAlerts:
allowsIgnoringSharedEventChangeNotifications
isIgnoringSharedCalendarNotifications
setIsIgnoringSharedCalendarNotifications:
isAffectingAvailability
setIsAffectingAvailability:
migrationVersion
setMigrationVersion:
syncHash
selectionSyncIdentifier
hasEvents
allowEvents
allowReminders
setAllowReminders:
supportedEventAvailabilities
setLastSyncError:userInfo:
lastSyncError
lastSyncErrorUserInfo
calendarError
isSyncing
stripAlarms
setStripAlarms:
stripAttachments
setStripAttachments:
moveSubscribedCalendarToSource:
removeServerRefreshRelatedPropertiesForSelfAndAllEventsSaveAndCommitWithError:
addSharee:
removeSharee:
hasSharees
shareesAndOwner
addAlarms:
removeAlarms:
selfIdentityAddress
setSelfIdentityAddress:
ownerIdentityAddress
setOwnerIdentityAddress:
ownerIdentityOrganizer
automaticEventLocationGeocodingAllowed
remove:
isManaged
exportData
exportDataWithOptions:
setIsJunk:
_cachedJunkStatus
TQ,N,V_cachedJunkStatus
T@"EKSource",&,N
subscribed
TB,R,N,GisSubscribed
immutable
TB,R,N,GisImmutable
T^{CGColor=},N
initWithCGColor:
color
_color
T^{CGColor=},R,N
alloc
shareeWithEKSharee:forCalendar:
ownerForEKCalendar:
_isCurrentUserForSharing
_UUID
T@"NSString",R,N,V_UUID
TB,R,N,V_isCurrentUserForSharing
startDateTimeZone
setStartDateTimeZone:
startDateAllDay
setStartDateAllDay:
startDateComponentsRaw
dueDateTimeZone
dueDateAllDay
dueDate
setDueDate:
_adjustPersistedStartDateComponentsForNewTimeZone:
T@"NSTimeZone",R,N
alarmWithAbsoluteDate:
alarmWithRelativeOffset:
maxPublicProximity
areLocationsAvailable
_currentAuthorizationStatus
areLocationsAllowed
areLocationsAllowedWithAuthorizationStatus:
areLocationsCurrentlyEnabled
defaultGeofencedReminderRadius
initWithAbsoluteDate:
initWithRelativeOffset:
rebaseForDetachment
_setType:
relativeOffsetRaw
setRelativeOffsetRaw:
isAbsolute
ownerUUID
defaultAlarm
setDefaultAlarm:
snoozedAlarms
setSnoozedAlarms:
addSnoozedAlarm:
removeSnoozedAlarm:
isSnoozed
setIsSnoozed:
_setEmailAddress:
_setUrlWrapper:
setBookmarkURL:
bookmarkURL
isTopographicallyEqualToAlarm:
soundName
setSoundName:
_soundName
TB,N,GisDefaultAlarm
T@"EKObject",R,N
T@"EKCalendarItem",R,N
T@"EKAlarm",&,N
T@"EKStructuredLocation",C,N
T@"NSString",C,N,V_soundName
virtualConferenceForRoomType:completion:queue:
initWithTitle:joinMethods:conferenceDetails:
isWritable
firstPhoneNumber
urlWithAllowedScheme
joinMethods
setJoinMethods:
setConferenceDetails:
serializationBlockTitle
setSerializationBlockTitle:
_joinMethods
_serializationBlockTitle
T@"NSArray",&,N,V_joinMethods
T@"NSString",&,N,V_conferenceDetails
T@"NSString",&,N,V_serializationBlockTitle
TQ,N,V_source
virtualConferenceRoomTypesWithCompletion:queue:
initWithTitle:identifier:extensionBundleIdentifier:
extensionBundleIdentifier
originatingExtensionIdentifier
_extensionBundleIdentifier
_originatingExtensionIdentifier
T@"NSString",R,N,V_originatingExtensionIdentifier
T@"NSString",R,N,V_title
T@"NSString",R,N,V_identifier
T@"NSString",R,N,V_extensionBundleIdentifier
initWithTitle:url:
isBroadcast
setIsBroadcast:
_isBroadcast
TB,N,V_isBroadcast
shareeWithName:emailAddress:
shareeWithName:emailAddress:phoneNumber:
shareeWithName:phoneNumber:
shareeWithName:url:
shareeWithName:emailAddress:phoneNumber:externalID:
_urlForEmailAddress:andPhoneNumber:
shareeWithUUID:name:emailAddress:phoneNumber:
_ekShareeStatusFromCalShareeStatus:
_calShareeStatusFromEKShareeStatus:
_ekShareeAccessLevelFromCalShareeAccessLevel:
_calShareeAccessLevelFromEKShareeAccessLevel:
statusEnumFromString:
statusStringFromEnum:
initWithName:url:
initWithName:url:externalID:
shareeAccessLevel
setShareeAccessLevel:
sourceWithEventStore:
_ekPrivacyLevelToCalEventPrivacyLevel:
_calEventPrivacyLevelToEKPrivacyLevel:
primaryLocalSourceID
setSourceType:
preferredEventPrivateValueRaw
setPreferredEventPrivateValueRaw:
setPreferredEventPrivateValue:
strictestEventPrivateValueRaw
setStrictestEventPrivateValueRaw:
setStrictestEventPrivateValue:
setDefaultAlarmOffset:
defaultAllDayAlarmOffset
setDefaultAllDayAlarmOffset:
sourceIdentifier
setSourceIdentifier:
remAccountObjectID
constraintsDescriptionPath
setConstraintsDescriptionPath:
constraintsName
_setConstraintsNameWithoutValidation:
setConstraintsName:
constraintsDescriptionPathForUnitTesting
setConstraintsDescriptionPathForUnitTesting:
creatorBundleID
setCreatorBundleID:
creatorCodeSigningIdentity
setCreatorCodeSigningIdentity:
setOnlyCreatorCanModify:
flag:
setFlag:value:
flags2
setFlags2:
flag2:
setFlag2:value:
isInMainWindow
setIsInMainWindow:
isInSeparateWindow
setIsInSeparateWindow:
doesSyncDefaultAlarmsToServer
setDoesSyncDefaultAlarmsToServer:
wasMigrated
setWasMigrated:
showsNotifications
setShowsNotifications:
usesSelfAttendee
setUsesSelfAttendee:
setDisabled:
isEnabled
supportsAlarmAcknowledgedDate
setSupportsAlarmAcknowledgedDate:
delegatedAccountOwnerStoreID
setDelegatedAccountOwnerStoreID:
isDelegate
isFacebookSource
allCalendars
calendarsForEntityType:
calendarWithExternalIdentifier:
removeCalendarItemsOlderThanDate:entityTypeMask:error:
readWriteCalendarsForEntityType:
supportsCalendarCreation
supportsCalendarTaskCreation
countCalendarItemsWithResultHandler:
countCalendarItemsOfType:resultHandler:
_countCalendarItemsOfCalType:resultHandler:
displayOrderForNewCalendar
symbolicColorForNewCalendar
personaIdentifier
fetchOfficeHoursWithCompletion:onQueue:
_ekOfficeHoursFromCalDAVOfficeHours:
setOfficeHours:withCompletion:onQueue:
_calDAVOfficeHoursFromEKOfficeHours:
_nsErrorFromSyncError:event:
sourceError
sourceOrEventError
syncs
ownerName
setOwnerName:
isPrimaryLocalSource
isNestedLocalSource
_validateClientCanModifySources:
_shouldCopyDefaultAlarmsFromLocalSource
_copyInitialDefaultAlarmSettingsIfNeeded
wantsCommentPromptWhenDeclining
availabilityCache
cachedExternalInfoData
setCachedExternalInfoData:
cachedExternalInfo
setCachedExternalInfo:
_convertTypeOfOwnerAddresses:toSet:
serverURL
externalInfoForKey:
serverHost
serverPort
serverUsesSSL
ownerAddresses
preferredOwnerAddress
managedConfigurationAccountAccess
supportsFreebusy
supportsEventCalendarCreation
supportsMultipleAlarms
supportsMultipleMonthsInYearlyRecurrence
supportsMultipleDaysInMonthlyRecurrence
supportsYearlyRecurrenceWithArbitraryInterval
supportsURLs
prefersSuggestingNewTimeViaEmail
supportsAttendeeEventForwarding
preferUsingEventOrganizerEmailWhenComposingMail
isEnabledForEvents
supportsAvailability
supportsTaskCalendarCreation
_supportsTaskCalendarCreation
_isFacebook
_snoozeAlarmRequiresDetach
T@"NSSet",R,N
T@"EKAvailabilityCache",R,N
TB,N,GisEnabled
TB,R,N,V_supportsTaskCalendarCreation
T@"EKSourceConstraints",R,N
T@"REMObjectID",R,N
T@"NSError",R,N
primaryLocalSource
TB,R,N,GisPrimaryLocalSource
nestedLocalSource
TB,R,N,GisNestedLocalSource
T@"NSNumber",C,N
TB,N,V_isFacebook
TB,N,V_snoozeAlarmRequiresDetach
T@"NSDictionary",&,N
T@"NSDictionary",R,C,N
T@"EKSyncError",&,N
_allowedItemPayloadClasses
requestType
roomTypeIdentifier
URLForInvalidation
URLForRenewal
renewalDate
completeRequestWithAvailableRoomTypes:completionHandler:
completeRequestWithVirtualConference:completionHandler:
completeRequestWithInvalidationSuccess:error:completionHandler:
completeRequestWithRenewalSuccess:error:completionHandler:
resourceChangeFromEventStore:
setCalendarName:
eventID
setEventID:
setChangeType:
setCreateCount:
setUpdateCount:
setDeleteCount:
_calendarName
_eventID
_createCount
_updateCount
_deleteCount
T@"NSString",&,N,V_calendarName
TB,N,V_allDay
T@"NSString",&,N,V_eventID
TI,N,V_changeType
T@"NSNumber",&,N,V_createCount
T@"NSNumber",&,N,V_updateCount
T@"NSNumber",&,N,V_deleteCount
setScheduleStatus:
colorChanged
orderChanged
_colorChanged
_orderChanged
TB,R,N,V_colorChanged
TB,R,N,V_orderChanged
initWithPredictedLocationOfInterest:
initWithType:customLabel:mapItemName:addressCountryCode:addressThoroughFare:addressLocality:
customLabel
mapItemName
addressCountryCode
addressThoroughfare
addressLocality
rtPredictedLocationOfInterest
_customLabel
_mapItemName
_addressCountryCode
_addressThoroughfare
_addressLocality
_rtPredictedLocationOfInterest
T@"RTPredictedLocationOfInterest",R,N,V_rtPredictedLocationOfInterest
Tq,R,N,V_type
T@"NSString",R,C,N,V_customLabel
T@"NSString",R,C,N,V_mapItemName
T@"NSString",R,C,N,V_addressCountryCode
T@"NSString",R,C,N,V_addressThoroughfare
T@"NSString",R,C,N,V_addressLocality
defaultManager
geocodeAddress:withCompletionBlock:
estimateGeolocationFromHistoricDevicePositionAtLocation:withCompletionBlock:
travelTimeFrom:to:arrivalDate:withRouteType:withCompletionBlock:
travelTimeFrom:to:arrivalDate:withRouteTypes:withCompletionBlock:
_travelTimeWithStartCoordinate:endCoordinate:arrivalDate:withRouteType:completionBlock:
_updateLocation:withMapItem:forRoute:withCompletionBlock:
findCoordinatesForLocation:completionBlock:
locationWithTitle:
_stringByStrippingControlCharactersFromString:
locationWithPlacemark:
locationWithMapItem:
locationWithGEOMapItem:
locationWithCalLocation:
displayLabelForContact:unlocalizedLabel:
isStructured
hasKnownSpatialData
_clearGeoLocationCache
geoLocation
setGeoLocation:
cacheKey
radiusRaw
setRadiusRaw:
isEqualToLocation:
geoURLString
updateFromMapItem:
isPrediction
isImprecise
setImprecise:
predictedLOI
setPredictedLOI:
_imprecise
_predictedLOI
imprecise
TB,N,GisImprecise,V_imprecise
T@"EKPredictedLocationOfInterest",&,N,V_predictedLOI
prediction
TB,R,N,GisPrediction
T@"CLLocation",&,N
objectIDWithCADObjectID:
objectIDWithEntityType:rowID:
objectIDWithEntityType:rowID:databaseID:
temporaryObjectIDWithEntityType:
objectIDWithURL:
CADObjectIDsFromEKObjectIDs:withGeneration:
EKObjectIDsFromCADObjectIDs:
EKObjectIDsFromData:
EKObjectIDsFromData:databaseID:
EKObjectIDsFromData:range:databaseID:
initWithEntityType:rowID:databaseID:temporary:
initWithDictionaryRepresentation:
dictionaryRepresentation
entityName
CADObjectIDWithGeneration:
isTemporary
stringRepresentation
URIRepresentation
databaseID
_temporary
_entityType
_rowID
_databaseID
Ti,R,N,V_databaseID
T@"CADObjectID",R,N
recurrenceEndWithEndDate:
recurrenceEndWithOccurrenceCount:
initWithEndDate:
initWithOccurrenceCount:
occurrenceCount
_occurrenceCount
T@"NSDate",R,N,V_endDate
TQ,R,N,V_occurrenceCount
setHasNotes:
setHasRecurrenceRules:
setHasAttendees:
setSelfParticipantStatusRaw:
relationWithEntityName:toMany:inversePropertyNames:
relationWithEntityName:toMany:inversePropertyNames:ownsRelated:
initWithEntityName:toMany:inversePropertyNames:ownsRelated:
toMany
ownsRelatedObject
inversePropertyNames
shouldSetInverseProperty:onObject:forObject:
inversePropertyIsApplicable
setInversePropertyIsApplicable:
_entityName
_toMany
_ownsRelated
_inversePropertyNames
_inversePropertyIsApplicable
T@?,C,N,V_inversePropertyIsApplicable
createTempDestinationURLWithExtension:
_copyFileAtURLToTemporaryDirectory:
initWithUUID:
initWithFilepath:
duplicateWithNewIdentity
assignNewIdentity
assignIdentity:
copyLocalFileToNewSource
invalidateLocalFilePropertiesForNewCopiedFile
fileName
contentType
isBinary
setIsBinary:
autoArchived
setAutoArchived:
localURL
localURLForArchivedData
urlOnDisk
URLForPendingFileCopy
setURLForPendingFileCopy:
markCopiedFileAsDownloaded
compareFileNames:
T@"NSNumber",&,N
T@"NSString",R,&
mapsURLForLocation:onEvent:hasMapItemLaunchOptionFromTimeToLeaveNotification:
_locationStringForStructuredLocation:withTitle:
geocodeEventIfNeeded:
availabilityChanged
privacyLevelChanged
travelTimeChanged
travelStartLocationChanged
originalItemID
_availabilityChanged
_privacyLevelChanged
_travelTimeChanged
_travelStartLocationChanged
_originalItemID
TB,R,N,V_availabilityChanged
TB,R,N,V_privacyLevelChanged
TB,R,N,V_travelTimeChanged
TB,R,N,V_travelStartLocationChanged
T@"EKObjectID",R,N,V_originalItemID
unselectedCalendarsForFocusModeInEventStore:
visibilityChangedNotificationName
focusModeConfigurationChangedName
_defaultQueue
T@"NSArray",R,C,N
initWithEventStore:visibilityChangedCallback:queue:
initWithEventStore:limitedToSource:visibilityChangedCallback:queue:
initWithEventStore:limitedToSource:visibilityChangedCallback:queue:activate:
visibleCalendars
invisibleCalendars
visibleCalendarsForAllIdentities
invisibleCalendarsForAllIdentities
_calendarsThatAreVisible:filteredByIdentity:
_deselectedCalendarIdentifiers
initWithEventStore:visibilityChangedCallback:
initWithEventStore:limitedToSource:visibilityChangedCallback:
limitedToSource
visibilityChangedCallback
notificationListener
setActive:
_active
_limitedToSource
_visibilityChangedCallback
_notificationListener
T@?,R,N,V_visibilityChangedCallback
T@"CalDarwinNotificationListener",R,N,V_notificationListener
TB,V_active
T@"EKSource",R,N,V_limitedToSource
initWithAttachment:
createAttachment
setUrlOnDisk:
contentTypeFromServer
setContentTypeFromServer:
_urlOnDisk
_contentTypeFromServer
T@"NSURL",&,N,V_urlOnDisk
T@"NSString",&,N,V_contentTypeFromServer
weakEventStore
unsafeRawPointer
_unsafeRawPointer
_weakEventStore
T^v,R,N
_handleExternalDatabaseChangedNotificationAsynchronously:
showDeclinedEventsChanged:
classForEntityName:
reminderStoreContainerTokenProvider
setReminderStoreContainerTokenProvider:
calDatabaseInitOptionsFromEKEventStoreInitOptions:
ekEventStoreInitOptionsFromCalDatabaseInitOptions:
authorizationStatusForEntityType:
accessGrantedForEntityType:
_skipTCCAccessCheck
setDenyAccessToEvents:
setDenyAccessToReminders:
eventStoreChangedDistributedNotificationName
_contextForNotificationWithChangeType:changedObjectIDs:
_defaultDelayForThrottledNotificationsWithInitializationOptions:
_throttleDelayForEventStoreChangedNotificationWithLastFiredTime:delay:
_shouldRefreshSource:
_refreshFolderListForSource:isUserRequested:
_filteredObjectsWithIdentifiers:fromObjects:
_filteredArrayWithIdentifiers:fromObjects:
_iMIPScheduledEvent:
_isConfirmedSuggestedEvent:uniqueKey:
_addDaysSpannedByEvent:toCountedSet:inRange:withNSCalendar:
calendarObjectIDsForPredicate:
daemonRestarted
databaseRestoreGenerationChangedExternally:
T@?,C
restoreGenerationChanged
setRestoreGenerationChanged:
setRestoreGenerationChangedAndGetPreviousValue:
fetchingSharedCalendarInvitationsDisallowed
setFetchingSharedCalendarInvitationsDisallowed:
setFetchingSharedCalendarInvitationsDisallowedAndGetPreviousValue:
initWithEKOptions:path:sources:
initWithSources:
initWithBirthdayCalendarModifications
initWithOptions:path:
initWithOptions:path:allowDelegateSources:
initWithEKOptions:path:changeTrackingClientId:enablePropertyModificationLogging:allowDelegateSources:
initWithEKOptions:path:changeTrackingClientId:enablePropertyModificationLogging:allowDelegateSources:allowedSourceIdentifiers:
initWithEKOptions:path:conainerProvider:changeTrackingClientId:enablePropertyModificationLogging:allowDelegateSources:allowedSourceIdentifiers:
initWithEKOptions:
initWithOptions:path:changeTrackingClientId:enablePropertyModificationLogging:allowDelegateSources:
_requestAccessForEntityType:
requestAccessToEntityType:completion:
requestAccessToEntityType:testing:completion:
isDataProtected
_accessStatusChanged
canModifyCalendarDatabase
databasePath
allowDelegateSources
allowsBirthdayModifications
connection
setSourceAccountManagement:
setSourceAccountManagement:withBundleID:
_setIsUnitTesting:
_setIsSpotlightTesting:
_isUnitTesting
setPrivacyClientIdentity:
_simulateDaemonCrashForUnitTests
sequenceToken
changesSinceSequenceToken:completion:
_invalidCADObjectIDs:
reminderStoreChanged
handleExternalDatabaseChangeNotification:
_handleExternalDatabaseChangeNotification:synchronously:
_databaseChangedExternally:processSynchronously:
_processExternalChangesWithLatestTimestamp:changedObjectIDsData:changesWereSyncStatusOnly:forceImmediateNotification:
_cacheDeletedEventIdentifierIfNeededForObject:
_postEventStoreChangedNotificationWithChangeType:changedObjectIDs:forceImmediate:
_postEventStoreChangedNotificationWithTags:context:
_updateDefaultDelayForThrottleEventStoreChangedNotifications
_throttleDelayForEventStoreChangedNotificationWithTags:context:
_defaultCalendarChangedExternally
_defaultAlarmChangedExternally
eventStoreIdentifier
clientCanModifySources
_sourceWithID:
_cacheSourceWithCADObjectID:withDefaultLoadedPropertyValues:forKeys:
_loadSourcesIfNeeded
sourcesEnabledForEntityType:
eventSources
reminderSources
_deletableSources
getSubscribedCalendarsSourceCreateIfNeededWithError:
localBirthdayCalendarCreateIfNeededWithError:
delegateSources
delegateSourcesForSource:
parentSourceForDelegateSource:
fetchGrantedDelegatesForSource:results:
updateGrantedDelegate:action:source:completion:
addExchangeDelegateWithName:emailAddress:toSource:completion:
removeExchangeDelegate:completion:
_localSourceWithEnableIfNeeded:
localSource
localSourceEnableIfNeeded
localBirthdayCalendarSource
sourceWithExternalID:
saveSource:commit:error:
removeSource:commit:error:
_clearCachedSources
hideCalendarsFromNotificationCenter:error:
_cacheCalendarWithCADObjectID:withDefaultLoadedPropertyValues:forKeys:
_loadCalendarsIfNeeded
_allCalendars
_deletableCalendars
_calendar:supportsEntityType:
readWriteCalendarCountForEntityType:
calendarWithID:
calendarWithCADID:
objectsPendingCommit
deletedObjectIDsPendingCommit
_addObjectToPendingCommits:
saveCalendar:commit:error:
_saveCalendar:error:
removeCalendar:commit:error:
_removeCalendar:commit:error:
deleteCalendar:forEntityType:error:
eventsExistOnCalendar:
futureScheduledEventsExistOnCalendar:
eventsMarkedScheduleAgentClientExistOnCalendar:
eventsWithIdentifiers:
eventWithRecurrenceIdentifier:
eventWithIdentifier:
validatedNonDeletedPersistentObjectWithObjectID:
validatedNonDeletedPublicObjectWithObjectID:
eventWithUniqueIdentifier:
_eventWithEventIdentifier:
_parseURI:expectedScheme:identifier:options:
eventWithExternalURI:
_eventWithURI:checkValid:
_eventOccurrenceWithURI:
eventForUID:occurrenceDate:
eventForUID:occurrenceDate:checkValid:
eventForObjectID:occurrenceDate:
eventForObjectID:occurrenceDate:checkValid:
eventWithUniqueId:
eventWithUniqueId:occurrenceDate:
eventWithUUID:occurrenceDate:
_entityWrappersForEventUUIDs:inCalendars:propertiesToLoad:
eventWithUUID:isInCalendars:
eventsWithUUIDToOccurrenceDateMap:inCalendars:
allEventsWithUniqueId:occurrenceDate:
_apiExpectedEventForEvent:
_apiExpectedEventsForEvents:
saveEvent:span:error:
removeEvent:span:error:
saveEvent:span:commit:error:
_saveEvent:span:commit:error:
removeEvent:span:commit:error:
_removeEvent:span:commit:error:
setInvitationStatus:forEvent:error:
setInvitationStatus:forEvents:error:
importICS:intoCalendar:options:
importICSData:intoCalendars:options:
importEventsWithExternalIDs:fromICSData:intoCalendars:options:batchSize:
_importEventsWithExternalIDs:fromICSData:intoCalendarsWithIDs:options:batchSize:
importICSData:intoCalendar:options:
ICSDataForCalendarItems:options:
ICSDataForCalendarItems:preventLineFolding:
importVCSData:intoCalendars:error:
copyCGColorForNewCalendar
colorStringForNewCalendar
defaultLocalCalendar
acquireDefaultCalendarForNewEvents
defaultCalendarForNewEventsInDelegateSource:
setDefaultCalendar:forNewEventsInDelegateSource:
defaultCalendarForNewEvents
setDefaultCalendarForNewEvents:
acquireDefaultCalendarForNewReminders
_clearCachedCalendars
_removeCachedCalendarFromSource:
_removeCachedCalendarWithCADID:
saveDraftOfEvent:
_saveDraftOfEvent:toDirectory:
_saveDraftOfEvent:toDirectory:withVersion:
loadDraftOfEventWithOccurrenceID:
_loadDraftOfEventWithOccurrenceID:fromDirectory:
_loadDraftOfEventWithOccurrenceID:fromDirectory:withVersion:
deleteDraftOfEventWithOccurrenceID:
_deleteDraftOfEventWithOccurrenceID:fromDirectory:
_deleteDraft:
_draftPathForEventWithOccurrenceID:draftDirectory:
saveReminder:commit:error:
removeReminder:commit:error:
reminderWithExternalURI:
calendarItemsWithUniqueIdentifier:inCalendar:
calendarItemWithIdentifier:
_calendarItemsWithExternalIdentifier:inCalendars:entityTypes:
calendarItemsWithExternalIdentifier:
calendarItemsWithExternalIdentifier:inCalendars:
eventsWithExternalIdentifier:inCalendars:
remindersWithExternalIdentifier:inCalendars:
_calendarItemsMatchingPredicate:
predicateForRemindersInCalendars:preloadProperties:
returnEventResults
returnReminderResults
shouldSaveCalendarAsEventCalendar:
shouldSaveCalendarAsReminderCalendar:
reminderSourceMapLock
eventWithUUID:
closestCachedOccurrenceToDate:forEventObjectID:
closestCachedOccurrenceToDate:forEventObjectID:prefersForwardSearch:
doEvents:haveOccurrencesAfterDate:
calendarWithUniqueID:
calendarWithExternalID:
_populateCalendarsByIdentifierIfNeeded
_eventCalendarWithIdentifier:
calendarsWithIdentifiers:
calendarWithExternalURI:
uniqueIdentifiersForEventsWithObjectIDs:
uniqueIdentifiersForAllObjectsWithChangesRelatedToObjects:
syncErrorCount
eventsWithErrorsPerSourceID
occurrenceCacheGetOccurrencesForCalendars:onDay:
occurrenceCacheGetOccurrenceCountsForCalendars:
rebuildOccurrenceCache
birthdayCalendarEnabled
setBirthdayCalendarEnabled:
suggestedEventCalendar
insertSuggestedEventCalendar
removeSuggestedEventCalendar
confirmSuggestedEvent:
acceptSuggestedEvent:
acceptSuggestedEvent:placeOnCalendar:
deleteSuggestedEvent:
canModifySuggestedEventCalendar
naturalLanguageSuggestedEventCalendar
saveNotification:commit:error:
saveNotificationCollection:commit:error:
sharedCalendarInvitationsForEntityTypes:
respondToSharedCalendarInvitation:withStatus:
resourceChangesForEntityTypes:
markResourceChangeAlertedAndSave:error:
removeResourceChange:error:
removeResourceChanges:error:
removeResourceChangesForCalendarItem:error:
eventNotifications
eventNotificationsAfterDate:
eventNotificationsExcludingUncheckedCalendars:filteredByShowsNotificationsFlag:earliestExpiringNotification:
eventNotificationsAfterDate:filteredByShowsNotificationsFlag:earliestExpiringNotification:
eventNotificationsAfterDate:excludingUncheckedCalendars:filteredByShowsNotificationsFlag:earliestExpiringNotification:
eventNotificationCount
eventNotificationCountExpanded:
eventNotificationCountExcludingUncheckedCalendars:expanded:
eventNotificationCountForSource:excludingDelegateSources:filteredByShowsNotificationsFlag:excludeObjectIDs:
eventNotificationCountForSource:excludingDelegateSources:filteredByShowsNotificationsFlag:excludeObjectIDs:expanded:
acknowledgeNotifications:error:
inboxRepliedSectionItems
removeInviteReplyNotification:error:
removeInviteReplyNotifications:error:
attachmentWithUUID:
attachmentUUIDWithExternalID:inSource:
saveAttachment:commit:error:
_refreshDASource:isUserRequested:
refreshSourcesIfNecessary:
refreshSourcesIfNecessary
refreshSource:userRequested:
refreshFolderListsIfNecessary:
refreshEverythingIfNecessary:
_registerObjectImmediate:
_registerObject:
_unregisterObject:
_detachObject:
_reregisterObject:oldID:
_forgetRegisteredObjects
_isRegisteredObject:
_addFetchedObjectWithID:
registerFetchedObjectWithID:
registerFetchedObjectWithID:withDefaultLoadedPropertyKeys:values:
objectWithIDExists:
objectWithObjectID:
publicObjectWithPersistentObject:
publicObjectWithObjectID:
publicObjectWithFetchedObjectID:
_trackModifiedObject:
_objectDidReset:
_insertObject:
isObjectInserted:
_deleteObject:
rollbackObjectsWithIdentifiers:
_clearAllCaches
commitWithRollback:
commitWithRollbackForNewClients:
commitObjects:error:
objectsHaveChangesToCommit:
_clearPendingChangesForObjectsWithOwner:
_commitObjectsWithIdentifiers:error:
_markObjectsWithIdentifiersAsCommitted:
_clearEventsNeedingGeocodingWithCommittedObjects:
_fetchAndClearEventsNeedingGeocoding:withCommittedObjects:
ensureLoadedProperties:forObjects:
_fetchProperties:forObjects:
_validateEventPredicate:
eventsMatchingPredicate:
eventObjectIDsMatchingPredicate:
enumerateEventsMatchingPredicate:usingBlock:
fetchEventsMatchingPredicate:resultHandler:
fetchObjectsMatchingPredicate:completion:
objectsMatchingPredicate:
fetchEventCountsInRange:inCalendars:exclusionOptions:completion:
cancelFetchRequest:
nextEventWithCalendarIdentifiers:exclusionOptions:
nextEventWithCalendars:exclusionOptions:
_nextEventWithFetchBlock:steps:
alarmWithUUID:
alarmWithExternalID:
alarmOccurrencesBetweenStartDate:endDate:inCalendars:completion:
predicateForEventsWithStartDate:endDate:calendars:
predicateForEventsWithStartDate:endDate:uniqueID:calendars:
predicateForEventsWithStartDate:endDate:calendars:loadDefaultProperties:
predicateForEventsWithStartDate:endDate:calendars:prefetchHint:exclusionOptions:
predicateForAssistantEventSearchWithTimeZone:startDate:endDate:title:location:notes:participants:calendars:limit:
predicateForNotifiableEvents
predicateForNotificationCenterVisibleEvents
predicateForUnacknowledgedEvents
predicateForUnalertedEvents
predicateForUpcomingEventsWithLimit:
predicateForMasterEventsInCalendars:
predicateForScheduleAgentClientEventsInCalendar:
hasImmediatelyEligibleTravelEvents
travelEligibleEventsInCalendars:startDate:endDate:
predicateForPotentialTravelEventsInCalendars:startDate:endDate:
predicateForUpNextEventsInCalendars:startDate:endDate:startDateRestrictionThreshold:
predicateForEventsWithStartDate:title:source:
predicateForNaturalLanguageSuggestedEventsWithSearchString:
predicateForNaturalLanguageSuggestedEventsWithSearchString:startDate:
predicateForEventsCreatedFromSuggestion
predicateForEventCreatedFromSuggestionWithOpaqueKey:
predicateForEventsCreatedFromSuggestionWithExtractionGroupIdentifier:
predicateForEventsWithStartDate:endDate:calendars:matchingContacts:
predicateForCalendarItemsOfType:inCalendar:
predicateForMasterEventsWithExternalTrackingStatusInCalendar:
predicateForCalendarItemsOfType:withUniqueIdentifier:inCalendar:
predicateForCalendarItemsOfType:withUniqueIdentifier:inSource:
predicateForCalendarItemsOfType:withExternalID:inCalendar:
predicateForCalendarItemsOfType:withExternalID:inSource:
predicateForEventsWithAttendeesInCalendar:
predicateForMasterEventsWithStartDate:title:inCalendar:
predicateForMasterEventsInCalendar:
predicateForEventsInSubscribedCalendar:
predicateForMasterEventsWithOccurrencesWithStartDate:endDate:inCalendar:
predicateForMasterEventsWithInvitationsAndOccurrencesAfter:inCalendar:
predicateForNonrecurringEventsWithStartDate:endDate:calendars:
timeToLeaveLocationAuthorizationStatus
predicateForEventsWithConferenceURL:limit:
registerForDetailedChangeTracking:
registerForDetailedChangeTrackingInSource:error:
unregisterForDetailedChangeTracking:
fetchChangedObjectIDsSinceToken:resultHandler:
changedObjectIDsSinceToken:resultHandler:
fetchChangedObjectIDs:
_processChangedObjectIDsWithErrorCode:changesTruncated:latestToken:changeData:resultHandler:
markChangedObjectIDsConsumedUpToToken:
consumeAllChangesUpToToken:
markIndividualChangesConsumed:error:
recordSequenceTokenForLegacyClients:
clearSuperfluousChanges
setCachedDefaultAlarmOffsetsToNSNotFound
defaultTimedAlarmOffset
purgeChangelog
cacheValidationStatusForAddress:status:
addressValidationStatus:
pushSpotlightUpdatesForCalendarItemUUIDs:
waitForSpotlightUpdates
occurrencesExistInRangeForEvent:startDate:endDate:mustStartInInterval:timezone:
cachedConstraintsForSourceWithCADObjectID:
_clearCachedConstraintsForSourceWithCADObjectID:
_fetchConstraintsForSourceWithCADObjectID:
notificationCollectionForSource:
_fetchPersistentNotificationCollectionForSourceWithCADObjectID:
needsGeocodingForEvent:
setNeedsGeocoding:forEvent:
shouldPermitOrganizerEmailFromJunkChecks:
shouldPermitOrganizerPhoneNumberFromJunkChecks:
fetchStorageUsage
setCachedEKSourceConstraintObject:forKey:
postSyntheticRouteHypothesis:forEventWithExternalURL:
beginCalDAVServerSimulationWithHostname:
endCalDAVServerSimulation:
backupDatabaseToDestination:withFormat:error:
_resetAndNotifyAfterDatabaseRestoreGenerationChanged
restoreDatabaseFromBackup:withFormat:error:
setDefaultCalendarForNewReminders:
predicateForPreloadedIncompleteRemindersWithDueDate:calendars:sortOrder:preloadProperties:
predicateForPreloadedIncompleteRemindersWithDueDate:calendars:sortOrder:preloadProperties:maxResults:
predicateForPreloadedCompletedRemindersWithDueDate:calendars:sortOrder:preloadProperties:
reminderObjectIDsMatchingPredicate:
predicateForIncompleteRemindersAndRemindersCompletedAfter:inCalendar:
predicateForRemindersWithTitle:listTitle:limitToCompletedOrIncomplete:completed:dueAfter:dueBefore:searchTerm:sortOrder:maxResults:
insertedObjects
setInsertedObjects:
deletedObjects
setDeletedObjects:
updatedObjects
setUpdatedObjects:
objectsPendingSave
setObjectsPendingSave:
database
setDatabase:
lastDatabaseNotificationTimestamp
setLastDatabaseNotificationTimestamp:
calendarSourcesAndDefaultsQueue
registeredQueue
unsavedChangesQueue
dbChangedQueue
constraintsCacheQueue
notificationCollectionCacheQueue
set_cachedConstraints:
_cachedNotificationCollections
set_cachedNotificationCollections:
reminderSourceIDToEventSourceIDMapping
setReminderSourceIDToEventSourceIDMapping:
eventSourceIDToReminderSourceIDMapping
setEventSourceIDToReminderSourceIDMapping:
registeredObjects
setRegisteredObjects:
inboxRepliedSectionHasContent
defaultTimedAlarm
defaultAllDayAlarm
siriSuggestionsTimedAlarmOffset
siriSuggestionsAllDayAlarmOffset
skipModificationValidation
setSkipModificationValidation:
_birthdaySourceID
_defaultCalendarsForNewEventsIDBySourceID
_suggestedEventCalendarID
_naturalLanguageSuggestedEventCalendarID
_subscribedCalendarsSourceID
_calendarsByIdentifier
_cachedValidatedAddresses
_objectsPendingCommit
_eventsNeedsGeocoding
_defaultTimedAlarmOffset
_defaultAllDayAlarmOffset
_allowsBirthdayCalendarModifications
_showDeclinedEventsNumber
_hasAccessToEvents
_hasAccessToReminders
_accessDetermined
_reminderSourceMapLock
_isIgnoringExternalChanges
_shouldNotifySyncStatusOnlyChanges
_flagsLock
_notificationAccumulatingQueue
_defaultDelayForThrottledNotifications
_lastFiredEventStoreChangedNotificationTime
_lastFiredNonSyncOnlyEventStoreChangedNotificationTime
_deletedEventUniqueIdentifiersCache
_lastSequenceToken
_inboxRepliedSectionHasContent
_skipModificationValidation
_insertedObjects
_objectsPendingSave
_database
_lastDatabaseNotificationTimestamp
_calendarSourcesAndDefaultsQueue
_registeredQueue
_unsavedChangesQueue
_dbChangedQueue
_constraintsCacheQueue
_notificationCollectionCacheQueue
__cachedConstraints
__cachedNotificationCollections
_reminderSourceIDToEventSourceIDMapping
_eventSourceIDToReminderSourceIDMapping
_registeredObjects
_defaultTimedAlarm
_defaultAllDayAlarm
_siriSuggestionsTimedAlarmOffset
_siriSuggestionsAllDayAlarmOffset
T@"NSHashTable",&,N,V_insertedObjects
T@"NSMutableSet",&,N,V_deletedObjects
T@"NSMutableSet",&,N,V_updatedObjects
T@"NSMutableSet",&,N,V_objectsPendingSave
T@"EKDaemonConnection",&,N,V_database
T@"CADInMemoryChangeTimestamp",&,N,V_lastDatabaseNotificationTimestamp
T@"NSObject<OS_dispatch_queue>",R,N,V_calendarSourcesAndDefaultsQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_registeredQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_unsavedChangesQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_dbChangedQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_constraintsCacheQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_notificationCollectionCacheQueue
T@"EKDataProtectionObserver",&,N,V_dataProtectionObserver
T@"NSMutableDictionary",&,N,V__cachedConstraints
T@"NSMutableDictionary",&,N,V__cachedNotificationCollections
T@"EKReminderStore",R,N,V_reminderStore
T@"NSDictionary",&,N,V_reminderSourceIDToEventSourceIDMapping
T@"NSDictionary",&,N,V_eventSourceIDToReminderSourceIDMapping
T^{os_unfair_lock_s=I},R,N
T@"NSMutableDictionary",&,N,V_registeredObjects
TB,R,N,V_inboxRepliedSectionHasContent
T@"NSString",R,C,N
T@"EKAlarm",R,N,V_defaultTimedAlarm
T@"EKAlarm",R,N,V_defaultAllDayAlarm
T@"NSNumber",R,N
T@"NSNumber",R,N,V_siriSuggestionsTimedAlarmOffset
T@"NSNumber",R,N,V_siriSuggestionsAllDayAlarmOffset
T@"EKDaemonConnection",R
TB,N,V_skipModificationValidation
_propertyWithFlagDidChange:
T@"EKCalendar",R,&,N
T@"EKCalendarItem",R,&,N
T@"NSURL",R,C,N
TI,R,N
calendarItemPropertyName
initWithCADSequenceToken:
CADToken
legacyToken
_sequenceNumbers
conferenceImageSize
virtualConference:likelyCameFromRoomTypes:completionHandler:
synchronousAppTitleOnlyForURL:incomplete:
applicationRecordForURL:completionHandler:
applicationRecordForURL:incomplete:
_applicationRecordFromAppLink:appLinkError:orCustomScheme:
parentAppBundleIdentifierForExtensionBundleIdentifier:
invalidateConferenceURLIfNeeded:inEventStore:
invalidateConferenceURL:
validURLForConferenceURL:completion:
_validURLForConferenceURL:previousURLs:completion:
renewConferenceURL:toDate:
_findExtensionIdentifierForURL:completionHandler:
_findRoomTypeForURL:queue:completionHandler:
record
setRecord:
_record
T@"LSApplicationRecord",&,V_record
generateNewValidURLForOriginalURL:
finishWithURL:error:
validURL
setValidURL:
replacementForURLs
setReplacementForURLs:
waitingCompletionHandlers
setWaitingCompletionHandlers:
_validURL
_replacementForURLs
_waitingCompletionHandlers
T@"NSURL",&,N,V_validURL
T@"NSMutableSet",&,N,V_replacementForURLs
T@"NSMutableArray",&,N,V_waitingCompletionHandlers
initWithName:emailAddress:address:isCurrentUser:
organizerWithName:emailAddress:address:isCurrentUser:
T@"NSString",&,D,N
initWithStartDate:endDate:conflictedParticipants:
conflictedParticipants
setConflictedParticipants:
_conflictedParticipants
T@"NSArray",&,N,V_conflictedParticipants
remAlarmProximityToEKAlarmProximity:
ekAlarmProximityToEKAlarmProximity:
triggersFromAbsoluteDate:relativeOffset:timeValuesRelevant:structuredLocation:proximity:
semanticIdentifierFromREMAlarm:
semanticIdentifierFromDateComponents:
initWithAlarms:inStore:
initWithAlarms:inStore:withChanges:
_setTimeAndLocationAlarms:
_setTimeOrLocationAlarm:
_timeAlarm
_locationAlarm
modifiedStructuredLocation
_remStructuredLocation
triggers
updatedAlarmWithLocation:
_effectiveAlarm
T@"EKFrozenReminderStructuredLocation",R
initWithEmailAddress:name:
initWithName:emailAddress:address:
initWithAddress:name:
lastModified
shouldSendEmailForEvent:withDiff:
emailsFromAttendees:
emailSubject
emailBody
emailAttachmentName
icsMethod
attachmentData
sendEmail
iCalendarDocumentWithMethod:
T@"EKEvent",&,V_event
initWithEvent:withDiff:
shouldSendEmailForEvent:removedAttendees:
initWithEvent:andAttendees:
_attachmentData
augmentSyncErrorUserInfo:for:
initWithAccountError:userInfo:
initWithCalendarError:userInfo:
initWithCalendarItemError:userInfo:
setUserInfo:
remAccount
T@"REMAccount",R,N
initWithName:
performWithReadLock:
performWithWriteLock:
credentialsWithUsername:password:
username
password
_username
_password
T@"NSString",R,N,V_username
T@"NSString",R,N,V_password
reminderSource
setReminderSource:
_reminderSource
T@"EKFrozenReminderSource",&,V_reminderSource
initWithConference:range:
range
conference
_conference
_range
T{_NSRange=QQ},R,N,V_range
T@"EKVirtualConference",R,N,V_conference
ekDeserializationResultFromCalDeserializationResult:
calVirtualConferenceFromEKVirtualConference:
_ekVirtualConferenceFromCalVirtualConference:
_calJoinMethodFromEKJoinMethod:
_calJoinMethodsFromEKJoinMethods:
_ekJoinMethodFromCalJoinMethod:
_ekJoinMethodsFromCalJoinMethods:
_calSourceFromEKSource:
_ekSourceFromCalSource:
serializeConference:
deserializeConference:
initWithAlarm:
createAlarm:
setIsAbsolute:
_isAbsolute
_isDefaultAlarm
_relativeOffset
_absoluteDate
T@"NSNumber",&,N,V_relativeOffset
T@"NSDate",C,N,V_absoluteDate
TB,N,V_isAbsolute
TB,N,V_isDefaultAlarm
initWithSpecifier:
_clearArrays
_updateSpecifier
_parseSpecifierIfNeeded
_appendDaysOfTheWeek:toSpecifier:
_appendIndexList:toSpecifier:propertyKey:
_parseDaysOfWeek:range:
_parseIndexList:range:
_specifier
_dirty
_parsed
owningEventInEventStore:
T@"NSDate",R,N,V_date
infoWithConflictsInSeries:outOf:withPeriod:conflictingDates:
infoWithConflicts:needsAction:event:
dateRangeToScanForConflictsForEvent:
_dateRangeToScanForConflictsForEvent:dateForNow:
_maxRangeLengthForRule:
calendarIdentifiersToScanForConflictsForEvent:
initWithConflictingDates:conflictingEvents:needsActionEvents:totalOccurrencesInSeries:conflictPeriodForSeries:
conflictingDates
setConflictingDates:
conflictingEvents
setConflictingEvents:
needsActionEvents
setNeedsActionEvents:
totalOccurrencesInSeries
setTotalOccurrencesInSeries:
totalConflictsInSeries
setTotalConflictsInSeries:
totalConflictingEvents
setTotalConflictingEvents:
totalNeedsActionEvents
setTotalNeedsActionEvents:
conflictPeriodForSeries
setConflictPeriodForSeries:
_conflictingDates
_conflictingEvents
_needsActionEvents
_totalOccurrencesInSeries
_totalConflictsInSeries
_totalConflictingEvents
_totalNeedsActionEvents
_conflictPeriodForSeries
T@"NSArray",&,V_conflictingDates
T@"NSArray",&,V_conflictingEvents
T@"NSArray",&,V_needsActionEvents
TQ,V_totalOccurrencesInSeries
TQ,V_totalConflictsInSeries
TQ,V_totalConflictingEvents
TQ,V_totalNeedsActionEvents
T@"CalDateRange",&,V_conflictPeriodForSeries
T@"INObject",C,D,N
locationName
geolocation
T@"CLPlacemark",C,D,N
locationAddress
initWithCode:userActivity:
code
setCode:
_code
Tq,N,V_code
initWithSpan:
span
setSpan:
_creationDate
_span
T@"NSDate",&,N,V_creationDate
T@"EKAvailabilitySpan",&,N,V_span
calendarPreferences
sharedCalendarNotificationsDisabled
setSharedCalendarNotificationsDisabled:
invitationNotificationsDisabled
setInvitationNotificationsDisabled:
timeToLeaveEnabled
setTimeToLeaveEnabled:
updateCheckedStateForCalendarWithUID:delegateID:state:
checkedStateForCalendarWithUID:delegateID:
disabledCalendarsForDelegateWithUID:
disabledCalendarsForMainWindow
updateExpandedStateForTopLevelNodeWithUID:state:
expandedStateForTopLevelNodeWithUID:
_updateStateForDisabledOrCollapsedItemWithUID:delegateID:state:withKey:withNotification:
_disabledOrCollapsedItemsForDelegateID:withKey:
_checkedStateForDisabledOrCollapsedItemWithUID:delegateID:withKey:
_keyForDelegateID:
displayOrderForLocalGroupWithSourceIdentifier:
updateDisplayOrderForLocalGroupsWithSourceIdentifiers:
displayOrderForAccounts
displayOrderForAccountWithSourceIdentifier:
updateDisplayOrderForAccountsWithSourceIdentifiers:
_displayOrderForSourceWithIdentifier:key:
_updateDisplayOrderForSources:key:
calPreferences
setCalPreferences:
_calPreferences
T@"CalPreferences",&,V_calPreferences
calendarTimeZone
T@"NSMutableArray",&,N,V_conflictedParticipants
locationPredictionForEvent:error:timeout:
shouldDoLocationPredictionForEvent:
userInteractionWithPredictedLocationOfInterest:interaction:
_mockLocationForEvent:
calendarWithRandomUUID
T@"EKPersistentSource",&,D,N
colorDisplayOnly
TB,D,N,GisColorDisplayOnly
T@"NSSet",C,D,N
publishedURL
published
TB,D,N,GisPublished
@16@0:8
v24@0:8@16
v16@0:8
@"NSSet"
#16@0:8
@40@0:8q16Q24@32
q20@0:8i16
i24@0:8q16
@24@0:8q16
@24@0:8Q16
@32@0:8@16B24B28
q24@0:8@16
@24@0:8@16
@32@0:8@16@24
@24@0:8^{_NSZone=}16
@88@0:8q16q24@32@40@48@56@64@72@80
@40@0:8q16q24@32
i16@0:8
v20@0:8i16
q16@0:8
v24@0:8q16
v24@0:8Q16
Q16@0:8
B16@0:8
B24@0:8@16
@24@0:8B16B20
@28@0:8@16B24
B40@0:8@16@24@32
@"EKRecurrenceHelper"
@36@0:8{?=IIb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1}16
v20@0:8B16
{?="maxAlarmsAllowed"I"maxRecurrencesAllowed"I"supportsAlarmTriggerIntervals"b1"supportsAlarmTriggerDates"b1"supportsAlarmsTriggeringAfterStartDate"b1"snoozeAlarmRequiresDetach"b1"organizerCanSeeAttendeeStatuses"b1"inviteesCanSeeAttendeeStatuses"b1"statusesAreAccurate"b1"supportsIncomingInvitations"b1"supportsOutgoingInvitations"b1"requiresOutgoingInvitationsInDefaultCalendar"b1"supportsInvitationModifications"b1"supportsEventForwarding"b1"supportsResponseComments"b1"deliverySourceOrExternalIDRequiredForResponse"b1"proposedStatusRequiredForResponse"b1"declinedStatusChangeRequiresNoPendingStatus"b1"eventDurationConstrainedToRecurrenceInterval"b1"alarmTriggerIntervalConstrainedToRecurrenceInterval_UNUSED"b1"occurrencesMustOccurOnSeparateDays"b1"futureStartDateLimitedToOccurrenceCacheBounds"b1"supportsRecurrencesOnDetachedEvents"b1"recurrencesShouldPinToMonthDays"b1"requiresAttendeeSearchInSingleAccount"b1"mustAcknowledgeMasterEvent"b1"canSetAvailability"b1"eventAvailabilityLimited"b1"requiresMSFormattedUID"b1"shouldCancelDeletedEvents"b1"shouldDeclineDeletedInvitations"b1"supportsStructuredLocations"b1"supportsReminderActions"b1"supportsReminderLocations"b1"supportsAlarmProximity"b1"allowsCalendarAddDeleteModify"b1"allowsTasks"b1"allowsEvents"b1"supportsURLField"b1"supportsAllDayDueDates"b1"supportsSharedCalendars"b1"isFacebook"b1"recurrenceSeriesMustIncludeMoreThanFirstOccurrence"b1"supportsPrivateEvents"b1"prohibitsPrivateEventsWithAttendees"b1"supportsAvailabilityRequests"b1"supportsIgnoringEventsInAvailabilityRequests"b1"supportsLocationDirectorySearches"b1"requiresSamePrivacyLevelAcrossRecurrenceSeries"b1"supportsInboxAvailability"b1"prohibitsMultipleMonthsInYearlyRecurrence"b1"prohibitsMultipleDaysInMonthlyRecurrence"b1"prohibitsYearlyRecurrenceInterval"b1"requiresOccurrencesConformToRecurrenceRule"b1"prohibitsDetachmentOnCommentChange"b1"allowsProposeNewTime"b1"prohibitsICSImport"b1"supportsAutoGeocodingStructuredLocations"b1"supportsJunkReporting"b1"supportsPhoneNumbers"b1"attendeesUseDeletedByOrganizerStatus"b1"prohibitsSlicingEventsWithAttendees"b1"supportsSubscribedCalendars"b1"supportsAttachments"b1"supportsDelegation"b1"supportsDelegateEnumeration"b1"supportsFloatingTimeZone"b1"prohibitsUsingEventOrganizerEmailWhenComposingMail"b1"supportsRecurrenceSplit"b1"requiresOpeningAttachmentAsLink"b1"shouldUseDeleteAndAddInsteadOfMoveBetweenCalendars"b1"supportsInvitationModificationsWithoutNotification"b1"supportsManagedSubscribedCalendars"b1"supportsSubscriptionMirroring"b1"supportsParticipantRoles"b1"supportsPush"b1"supportsTravelTime"b1"requiresSeparateFilesForAllAttachments"b1"occurrenceOrderEnforcedAfterDetachment"b1"allowsPrivateEventAccessByDelegate"b1}
Q24@0:8q16
B32@0:8@16^@24
@32@0:8@16^@24
@"REMListChangeItem"
v32@0:8@16@24
B32@0:8@16@24
q24@0:8q16
v32@0:8d16Q24
@48@0:8@16@24@32@40
B48@0:8@16@24@32^@40
@64@0:8@16@24@32@40@?48@?56
@40@0:8@16@24@32
v48@0:8@16@24@32@?40
v40@0:8@16@?24@32
@"NSString"
@"NSObject<OS_dispatch_queue>"
@"NSMutableDictionary"
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@"NSPredicate"16@24
v36@0:8@16@24B32
@48@0:8@16@24@32@?40
v28@0:8@16B24
i44@0:8I16@20@28@36
@"EKEventStore"
@"NSNumber"
@24@0:8^@16
@"NSURL"
@44@0:8i16@20@28@36
@36@0:8i16@20@28
q28@0:8@16i24
@"NSDate"
@"EKCalendarNotification"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"EKObjectID"
B52@0:8@16@24@32B40@44
B56@0:8@16@24@32B40B44@48
B48@0:8@16@24@32@40
B40@0:8@16#24#32
@24@0:8@"<EKProtocolObject>"16
@"EKChangeSet"16@0:8
@"EKObject"16@0:8
@"EKPersistentObject"16@0:8
@"EKPersistentObject"24@0:8@"EKEventStore"16
B24@0:8@"NSString"16
@"EKObject"24@0:8@"EKEventStore"16
v32@0:8@16@"NSString"24
@24@0:8@"NSString"16
B24@0:8@"<EKFrozenMeltedPair>"16
B32@0:8@"<EKFrozenMeltedPair>"16@"NSSet"24
@"EKObjectID"16@0:8
@"CADGenerationStampedObjectID"16@0:8
@"NSDictionary"16@0:8
@"NSSet"16@0:8
B28@0:8@16B24
B44@0:8@16@24B32@36
@44@0:8@?16@24@32B40
B20@0:8B16
v24@0:8@?16
@"EKPersistentObject"
@"EKChangeSet"
@"NSDictionary"
@"EKObjectValidationContext"
@56@0:8@16@24@32@40q48
@68@0:8@16@24@32@40@48q56B64
@64@0:8@16@24@32@40@48q56
@76@0:8@16@24@32@40@48@56q64B72
@72@0:8@16@24@32@40@48@56q64
B44@0:8@16@24@32B40
@52@0:8@16@24@32@40B48
@56@0:8@16@24@32@40@48
@60@0:8@16@24@32@40@48B56
v32@0:8@16@?24
v32@0:8@"CADDatabaseInitializationOptions"16@?<v@?ii>24
v24@0:8@?<v@?iBB>16
v24@0:8@?<v@?i>16
v40@0:8@16@24@?32
v60@0:8@16@24@32Q40i48@?52
v40@0:8@16Q24@?32
v28@0:8B16@?20
v24@0:8@?<v@?i@"NSString">16
v32@0:8@"CADObjectID"16@?<v@?i>24
v24@0:8@?<v@?iB@"CADSequenceToken"@"NSDictionary">16
v40@0:8@"NSArray"16@"CADObjectID"24@?<v@?iB@"CADSequenceToken"@"NSArray">32
v32@0:8@"CADSequenceToken"16@?<v@?i>24
v32@0:8@"NSDictionary"16@?<v@?i>24
v24@0:8@?<v@?i@"CADSequenceToken">16
v32@0:8@"CADSequenceToken"16@?<v@?i@"NSDictionary"@"CADSequenceToken">24
v32@0:8@"CADInMemoryChangeTimestamp"16@?<v@?i@"NSDictionary"@"CADInMemoryChangeTimestamp"B>24
v60@0:8@"NSArray"16@"NSArray"24@"NSArray"32Q40i48@?<v@?i@"NSArray">52
v40@0:8@"NSArray"16Q24@?<v@?i@"NSData">32
v40@0:8@"CADObjectID"16Q24@?<v@?i@"NSData">32
v28@0:8B16@?<v@?i>20
v48@0:8@"NSArray"16@"NSDictionary"24@"CADInMemoryChangeTimestamp"32@?<v@?i@"NSDictionary"@"NSDictionary"@"CADInMemoryChangeTimestamp"B>40
v24@0:8@?<v@?iB>16
v24@0:8@?<v@?iQ>16
v40@0:8@"CADObjectID"16@"CADObjectID"24@?<v@?i@"CADObjectID">32
v28@0:8B16@?<v@?i@"NSNumber">20
v32@0:8@"CADObjectID"16@?<v@?iB>24
v32@0:8@"NSArray"16@?<v@?i@"NSArray">24
v40@0:8@"CADObjectID"16@"NSArray"24@?<v@?i@"NSArray">32
v40@0:8@"NSArray"16@"NSArray"24@?<v@?i@"NSArray">32
v40@0:8@"CADObjectID"16@"NSString"24@?<v@?i@"NSObject<NSSecureCoding>">32
v40@0:8@"CADObjectID"16@"NSString"24@?<v@?i@"NSString">32
v40@0:8@"CADObjectID"16@"NSString"24@?<v@?i@"NSNumber">32
v40@0:8@"CADObjectID"16@"NSString"24@?<v@?i@"NSDate">32
v40@0:8@"CADObjectID"16@"NSString"24@?<v@?i@"NSData">32
v40@0:8@"CADObjectID"16@"NSString"24@?<v@?i@"NSSecurityScopedURLWrapper">32
v40@0:8@"CADObjectID"16@"NSString"24@?<v@?i@"CADObjectID">32
v40@0:8@"CADObjectID"16@"NSString"24@?<v@?i@"NSSet">32
v36@0:8@16B24@?28
v36@0:8i16@20@?28
v44@0:8@16i24@28@?36
v48@0:8@16q24@32@?40
v32@0:8@"NSArray"16@?<v@?i@"NSArray"@"NSArray">24
v28@0:8B16@?<v@?i@"CADObjectID">20
v24@0:8@?<v@?i@"CADObjectID">16
v32@0:8@"CADObjectID"16@?<v@?i@"NSData">24
v32@0:8@"CADObjectID"16@?<v@?i@"CADObjectID">24
v36@0:8@"CADObjectID"16B24@?<v@?iB>28
v36@0:8i16@"CADObjectID"20@?<v@?iQ>28
v44@0:8@"NSDate"16i24@"CADObjectID"28@?<v@?i>36
v32@0:8@"CADObjectID"16@?<v@?i@"NSArray">24
v48@0:8@"CalGrantedDelegate"16q24@"CADObjectID"32@?<v@?i>40
v48@0:8@"NSString"16@"NSString"24@"CADObjectID"32@?<v@?i@"CADObjectID"q>40
v44@0:8@16i24i28B32@?36
v20@0:8I16
v48@0:8@16@24Q32@?40
v32@0:8@"NSString"16@?<v@?i@"CADObjectID">24
v48@0:8@"NSArray"16@"NSArray"24@"NSArray"32@?<v@?i@"NSArray">40
v40@0:8@"NSString"16@"CADObjectID"24@?<v@?i@"NSArray">32
v44@0:8@"NSPredicate"16i24i28B32@?<v@?i@"NSArray">36
v40@0:8@"NSData"16@"CADObjectID"24@?<v@?i>32
v48@0:8@"CADObjectID"16@"NSDate"24Q32@?<v@?i@"NSData">40
v44@0:8@16@24B32@?36
v44@0:8@16@24i32@?36
v60@0:8@16@24@32B40@44@?52
v40@0:8@"CADObjectID"16@"CADObjectID"24@?<v@?i>32
v32@0:8@"NSString"16@?<v@?i@"NSArray">24
v40@0:8@"NSArray"16@"NSDate"24@?<v@?i@"NSArray">32
v44@0:8@"CADObjectID"16@"NSDate"24B32@?<v@?i@"NSDate">36
v44@0:8@"NSString"16@"NSArray"24i32@?<v@?i>36
v60@0:8@"CADObjectID"16@"NSDate"24@"NSDate"32B40@"NSTimeZone"44@?<v@?iB>52
v32@0:8@"NSString"16@?<v@?iB>24
v40@0:8@"NSString"16@"CADObjectID"24@?<v@?i@"NSString">32
v48@0:8@"NSDate"16@"NSDate"24@"NSArray"32@?<v@?i@"NSArray">40
v40@0:8@16B24B28@?32
v44@0:8@16B24B28B32@?36
v24@0:8@?<v@?i@"NSArray">16
v40@0:8@"NSDate"16B24B28@?<v@?i@"NSArray"@"NSArray"@"NSArray"@"NSDate">32
v44@0:8@"NSString"16B24B28B32@?<v@?iQ@"NSArray">36
v24@0:8@?<v@?i@"NSArray"@"NSArray">16
v36@0:8i16@"NSArray"20@?<v@?i>28
v32@0:8@"NSArray"16@?<v@?i>24
v40@0:8@"CADRouteHypothesis"16@"NSString"24@?<v@?i>32
v32@0:8B16B20@?24
v32@0:8B16B20@?<v@?iQ>24
v24@0:8@?<v@?i@"NSDictionary">16
v44@0:8@"NSString"16@"NSSecurityScopedURLWrapper"24B32@?<v@?i>36
v32@0:8@"NSSecurityScopedURLWrapper"16@?<v@?i>24
v44@0:8@"NSString"16@"NSSecurityScopedURLWrapper"24B32@?<v@?ii>36
v32@0:8@"NSSecurityScopedURLWrapper"16@?<v@?ii>24
v36@0:8I16q20@?28
v28@0:8I16@?20
v36@0:8I16q20@?<v@?i>28
v28@0:8I16@?<v@?i>20
v24@0:8@?<v@?ii>16
v32@0:8@16I24B28
v32@0:8@"NSArray"16I24B28
v24@0:8@"NSArray"16
I24@0:8@16
@32@0:8I16:20B28
@"<CADInterface>"
@"NSXPCConnection"
@"<EKDaemonConnectionDelegate>"
@"CADDatabaseInitializationOptions"
v24@0:8@"NSExtensionContext"16
d16@0:8
v24@0:8d16
@"CalPreferences"
@"EKReminderStore"
#24@0:8#16
@"EKFrozenReminderObject"24@0:8@"NSString"16
B40@0:8@16@24^@32
B24@0:8^@16
B32@0:8^@16^@24
@32@0:8@16@?24
@?28@0:8@16B24
@"NSArray"
@"NSMutableSet"
@"NSMutableArray"
@"REMStore"
@72@0:8@16@24@32@40@48@56@64
v24@0:8^{CGColor=}16
^{CGColor=}16@0:8
^{CGColor=}
@"NSTimeZone"
@"EKStructuredLocation"
@"EKCalendar"
@"EKSuggestedEventInfo"
@"NSData"
v24@0:8@"EKAutocompleter"16
v24@0:8@"CNAutocompleteStore"16
B40@0:8@16@24@?32
@?24@0:8@16
v32@0:8@"<CNCancelable>"16@"NSArray"24
v32@0:8@"<CNCancelable>"16@"NSError"24
v24@0:8@"<CNCancelable>"16
B40@0:8@"<CNCancelable>"16@"CNAutocompleteFetchRequest"24@?<v@?@"NSArray"@"NSError">32
@"NSDictionary"32@0:8@"<CNCancelable>"16@"NSArray"24
@?<q@?@@>24@0:8@"<CNCancelable>"16
@32@0:8@16q24
B24@0:8@?16
@"<EKAutocompleterDelegate>"
@"EKSource"
@"<CNCancelable>"
@"CNAutocompleteStore"
@"EKDirectorySearchOperation"
@"NSPointerArray"
@"EKParticipant"
@"<EKIdentityProtocol>"
v40@0:8@16@24@32
@68@0:8@16@24Q32B40@44@52@?60
@"EKEvent"
@"<EKAutocompleteSearchPasteboardItemProvider>"
@"<CalSpotlightQueryPendingSearchProtocol>"
@36@0:8@16q24i32
v56@0:8q16@24@32@40@48
v40@0:8@16@24q32
v48@0:8@16@24@32q40
@40@0:8@16@24^B32
@"EKObject"
v36@0:8q16@24B32
@"NSDate"16@0:8
@40@0:8@16@24q32
@"<EKAccountRefresherDelegate>"
@36@0:8@16B24@28
B56@0:8@16@24@32@40@48
I16@0:8
v32@0:8@16d24
v32@0:8@?16@24
v32@0:8@16^B24
B24@0:8{?=II}16
v28@0:8@?16B24
@?16@0:8
@20@0:8B16
@"NSObject<OS_dispatch_source>"
v24@0:8B16B20
v32@0:8^@16^@24
Q24@0:8@16
Q32@0:8@16@24
@60@0:8@16@24@32@40B48@52
q32@0:8@16@24
@24@0:8@?16
@"NSOperationQueue"
^{__SecTrust=}16@0:8
B48@0:8@16@24^@32^@40
@"<EKSyncStatusChangeListenerDelegate>"
B24@0:8q16
B64@0:8@16@24@32@40@48@56
@"NSURL"16@0:8
@"NSPredicate"16@0:8
@"CNContact"16@0:8
r^v24@0:8^v16
@"EKCalendarItem"
I24@0:8q16
@40@0:8@16q24q32
B32@0:8q16q24
@"SGEvent"
@40@0:8@16@24^@32
@52@0:8B16@20@28@36@44
@40@0:8@16@24@?32
@32@0:8@16#24
@"EKDirectorySearchQuery"
@"NSError"
@32@0:8@16d24
@"EKRecurrenceRule"
@"EKCalendarEventInvitationNotificationAttendee"
@"CalLocation"
@40@0:8@16@24Q32
@48@0:8@16@24@32Q40
@36@0:8@16@24B32
i24@0:8@16
@48@0:8@16@24@32^@40
B28@0:8i16Q20
@"NSMapTable"
@?24@0:8@?16
v44@0:8@?16B24q28@36
v40@0:8@"NSArray"16@"NSArray"24@"NSArray"32
@48@0:8B16@20@28@36B44
v48@0:8@16@24@32@40
@"<EKEventStoreProvider>"
@"CalLimitingQueue"
@52@0:8B16q20@28@36@44
@"EKEventStore"16@0:8
@"EKTimedEventStorePurger"
v64@0:8^@16^@24^@32^@40^@48^@56
r*24@0:8B16B20
B40@0:8@16^@24^@32
@40@0:8@16@24B32B36
v56@0:8@16@24@32@40@?48
@28@0:8@16i24
v40@0:8@"NSArray"16@"NSSet"24@"NSMutableArray"32
@40@0:8#16@24@32
v28@0:8i16Q20
v36@0:8@?16B24@?28
@"NSPredicate"
@"NSDateComponents"
@32@0:8q16@24
@32@0:8q16@?24
@40@0:8q16@24@?32
@"PCPersistentTimer"
@"NSTimer"
@"CADInMemoryChangeTimestamp"
@40@0:8@16^@24^@32
@"NSData"32@0:8@"EKEvent"16^@24
@"EKEvent"40@0:8@"NSData"16^@24^@32
@"NSString"32@0:8@"NSData"16^@24
v48@0:8@16@24@32B40B44
@20@0:8i16
@28@0:8i16@20
@40@0:8q16@24@32
@48@0:8q16@24@32@40
@56@0:8@16Q24@32@40@48
@"<CalDateProvider>"
@48@0:8@16d24d32d40
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@104@0:8i16@20d28@36d44@52d60@68B76Q80@88q96
v28@0:8@16i24
v40@0:8@16@24B32B36
v44@0:8@16@24@32B40
v28@0:8i16@20
d24@0:8@16
v32@0:8d16@24
v28@0:8B16@20
{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}
@"NSHashTable"
@"EKDirectoryGroup"
@"EKDirectorySearchResultSet"
@"EKRecurrenceEnd"
q36@0:8q16Q24B32
q32@0:8q16Q24
B32@0:8q16^@24
v56@0:8@16q24@32@40@48
q24@0:8Q16
@32@0:8@16Q24
@48@0:8@16Q24Q32^@40
@52@0:8@16B24Q28Q36^@44
v32@0:8@16Q24
B20@0:8I16
v24@0:8B16I20
v40@0:8@16d24@32
v56@0:8@16@24@32@40@48
@36@0:8@16B24B28B32
B48@0:8{?=iccccd}16@32^@40
v40@0:8q16@24@32
@24@0:8^d16
B48@0:8@16@24q32^@40
B36@0:8@16@24B32
@"EKReadWriteLock"
@"EKCalendarDate"
@64@0:8@16@24@32@40@48@?56
@"EKAvailabilityCache"
@"CDBDataProtectionObserver"
v24@0:8I16B20
@"EKSerializableStructuredLocation"
@"EKSerializableParticipant"
@56@0:8@16@24@32@40@?48
v44@0:8@16@?24@32B40
B32@0:8#16@?24
v40@0:8@16@24#32
@52@0:8@16B24@28@36@44
v44@0:8@16@24@?32B40
@"<EKDiagnosticsCollectionDelegate>"
@32@0:8q16q24
@56@0:8@16@24@32@?40@?48
@48@0:8@16Q24@32@40
@"CSSearchQuery"
@32@0:8Q16@24
B40@0:8^i16^i24^i32
B40@0:8Q16@24@?32
v32@0:8Q16@24
v24@0:8^@16
@24@0:8^{CGColor=}16
@24@0:8d16
B20@0:8i16
Q20@0:8i16
i24@0:8Q16
v24@0:8i16B20
B40@0:8@16Q24^@32
v32@0:8Q16@?24
v28@0:8i16@?20
v36@0:8B16@20@?28
@64@0:8q16@24@32@40@48@56
@"RTPredictedLocationOfInterest"
@"EKPredictedLocationOfInterest"
@24@0:8i16i20
@28@0:8i16i20i24
@44@0:8@16{_NSRange=QQ}24i40
@32@0:8i16i20i24B28
@40@0:8@16B24@28B36
@"NSArray"16@0:8
@40@0:8@16@?24@32
@48@0:8@16@24@?32@40
@52@0:8@16@24@?32@40B48
@"CalDarwinNotificationListener"
^v16@0:8
#24@0:8@16
B24@0:8Q16
d32@0:8Q16d24
@40@0:8Q16@24@32
@32@0:8i16@20B28
@48@0:8Q16@24@32B40B44
@56@0:8Q16@24@32B40B44@48
@64@0:8Q16@24@32@40B48B52@56
@44@0:8i16@20@28B36B40
v36@0:8Q16B24@?28
v28@0:8Q16B24
v36@0:8Q16@24B32
d32@0:8@16@24
B36@0:8@16B24^@28
B32@0:8@16Q24
B40@0:8@16q24^@32
B44@0:8@16q24B32^@36
B40@0:8Q16@24^@32
@52@0:8@16@24@32Q40i48
^{os_unfair_lock_s=I}16@0:8
@32@0:8d16@24
@36@0:8d16@24B32
@32@0:8B16B20^@24
@36@0:8@16B24^@28
@40@0:8@16B24B28^@32
Q20@0:8B16
Q24@0:8B16B20
Q40@0:8@16B24B28@32
Q44@0:8@16B24B28@32B40
v32@0:8^@16@24
v48@0:8@16@24q32@?40
@32@0:8@?16@24
@44@0:8@16@24@32B40
@56@0:8@16@24@32q40q48
@88@0:8@16@24@32@40@48@56@64@72q80
@48@0:8@16@24@32d40
q24@0:8^@16
q32@0:8@16^@24
v32@0:8q16@?24
v48@0:8i16B20@24@32@?40
@44@0:8@16@24i32@36
@52@0:8@16@24i32@36Q44
@76@0:8@16@24B32B36@40@48@56i64Q68
@"CADGenerationStampedObjectID"
{?="restoreGenerationChanged"b1"fetchingSharedCalendarInvitationsDisallowed"b1}
@"CalAccumulatingQueue"
@"NSCache"
@"EKSequenceToken"
@"EKDaemonConnection"
@"EKDataProtectionObserver"
@"EKAlarm"
@32@0:8@16^B24
@"LSApplicationRecord"
@52@0:8@16d24B32@36q44
@"REMAlarm"
@24@0:8r*16
@"EKFrozenReminderSource"
@40@0:8@16{_NSRange=QQ}24
{_NSRange=QQ}16@0:8
@"EKVirtualConference"
{_NSRange="location"Q"length"Q}
Q24@0:8Q16
v36@0:8@16@24S32
@40@0:8^{?=[64S]^{__CFString}^S*{?=qq}qq}16{?=qq}24
@48@0:8q16q24@32@40
@56@0:8@16@24@32Q40@48
@"CalDateRange"
@"EKAvailabilitySpan"
v52@0:8@16@24B32@36@44
@40@0:8@16^@24d32
