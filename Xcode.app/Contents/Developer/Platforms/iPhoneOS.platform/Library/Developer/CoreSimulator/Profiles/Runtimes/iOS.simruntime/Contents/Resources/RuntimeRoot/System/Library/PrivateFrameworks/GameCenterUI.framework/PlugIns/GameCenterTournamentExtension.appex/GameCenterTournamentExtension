GKTournamentActionCell
GKStandingsCollectionViewFlowLayout
GKStandingsCollectionView
GKTournamentStandingsViewController
GKMessageComposeViewControllerDelegate
NSObject
UICollectionViewDelegateFlowLayout
UICollectionViewDelegate
UIScrollViewDelegate
GKParticipantViewDelegate
GKStandingsCollectionViewTouchDelegate
GKParticipantView
GKHairlineDivider
GKTournamentCell
GKTournamentExtensionInterface
GKSocialGamingExtensionInterface
GKTournamentHostInterface
GKSocialGamingHostInterface
GKTournamentTableViewController
GKTournamentHeaderCellDelegate
GKTournamentViewAppearance
GKTournamentHeaderCell
GKTournamentInfoCell
GKMedalistView
GKTournamentDetailsViewController
GKGameCenterControllerDelegate
GKTournamentInfoCellDelegate
UIPickerViewDataSource
UIPickerViewDelegate
GKCustomTournamentListViewController
GKTournamentInfoViewController
UITableViewDelegate
UITableViewDataSource
GKTournamentStatisticsCell
GKRecentTournamentsViewController
GKCustomTournamentCountCell
GKTournamentInfoItemSlice
GKInviteeListCell
GKTournamentExtensionViewController
GKWinningPlayerView
GKCustomTournamentListHeaderView
GKTableViewController
GKTournamentSummaryCell
GKLiveTournamentListViewController
Helpers
GKCollectionViewFooterMessageView
GKTournamentHeaderItemSlice
GKCollectionViewHeaderButton
.cxx_destruct
icon
setIcon:
title
setTitle:
subTitle
setSubTitle:
_icon
_title
_subTitle
layoutAttributesForItemAtIndexPath:
section
setAlpha:
initialLayoutAttributesForAppearingItemAtIndexPath:
hitTest:withEvent:
touchDelegate
didRegisterTouch
setTouchDelegate:
_touchDelegate
viewDidLoad
reporter
tournament
tournamentID
currentGame
bundleIdentifier
dictionaryWithObjects:forKeys:count:
reportEvent:payload:
collectionView
setBounces:
setAlwaysBounceVertical:
sharedAppearance
backgroundColor
setBackgroundColor:
bundleForClass:
nibWithNibName:bundle:
registerNib:forCellWithReuseIdentifier:
registerNib:forSupplementaryViewOfKind:withReuseIdentifier:
imageNamed:
CGImage
size
imageWithCGImage:scale:orientation:
tournamentState
customTournamentDelegate
creator
playerID
localPlayer
isEqualToString:
addInvitees
initWithBarButtonSystemItem:target:action:
showFilterOptions:
initWithImage:style:target:action:
arrayWithObjects:count:
navigationItem
setRightBarButtonItems:
init
setRefreshControl:
refreshControl
refreshContent:
addTarget:action:forControlEvents:
collectionViewLayout
setSectionInset:
viewWillAppear:
setNavigationTitle
friendsOnly
traitCollectionDidChange:
indexSetWithIndex:
reloadSections:
isLoading
setNoContentMessage:
setIsLoading:
showLoadingIndicator
participants
count
setRange:
setFriendsOnly:
dispatchGroup
activityIndicator
stopAnimating
stringWithFormat:
setResult:
setError:
loadParticipantsWithRequest:completionHandler:
perform:
participantState
player
creatorInTournament
setCreatorInTournament:
getLocalParticipantWithCompletionHandler:
result
addObjectsFromArray:
error
indexPathForItem:inSection:
addObject:
insertItemsAtIndexPaths:
notifyOnMainQueueWithBlock:
initWithActivityIndicatorStyle:
setActivityIndicator:
setTranslatesAutoresizingMaskIntoConstraints:
setHidesWhenStopped:
view
addSubview:
centerXAnchor
superview
constraintEqualToAnchor:constant:
setActive:
centerYAnchor
startAnimating
endRefreshing
setParticipants:
loadParticipantsPaged
didReceiveMemoryWarning
dequeueReusableCellWithReuseIdentifier:forIndexPath:
item
setTag:
setDelegate:
objectAtIndexedSubscript:
score
displayNameWithOptions:
nickname
setText:
numberWithInteger:
stringValue
rank
numberWithLongLong:
setAppearance:
descriptionForParticipantState:
isFriend
friendIndicator
setHidden:
photo
setImage:
playerAvatarImageWithSize:completionHandler:
layer
setOpacity:
loadParticipantsIfNeeded
panGestureRecognizer
translationInView:
contentOffset
contentSize
bounds
setLoadParticipantsIfNeeded:
frame
noContentMessage
length
visibleCells
dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:
button
setTitle:forState:
addCreatorBack
addTarget:action:forEvents:
tintColor
setTintColor:
message
secondaryLabelColor
setTextColor:
exceptionWithName:reason:userInfo:
raise
alertControllerWithTitle:message:preferredStyle:
setModalPresentationStyle:
popoverPresentationController
setBarButtonItem:
dismissViewControllerAnimated:completion:
actionWithTitle:style:handler:
addAction:
actions
setPreferredAction:
preferredAction
_setChecked:
presentViewController:animated:completion:
inviteURL
setInviteURL:
getShareURLWithCompletionHandler:
presentInvitationComposeViewController:
domain
localizedDescription
presentAlertWithTitle:message:buttonTitle:
addCreator:completionHandler:
canSendText
maxPlayers
setMaximumSelectablePlayersForPicker:
valueForKeyPath:
setCurrentlySelectedPlayersForPicker:
minPlayers
preparePresentationForMinPlayers:maxPlayers:shareURL:completionHandler:
shared
shouldAllowNearbyMultiplayer
setSupportsNearby:
nearbyDelegate
setNearbyDelegate:
arrayWithArray:
addInvitees:completionHandler:
hideParticipantViewActions
indexPathForCell:
objectAtIndex:
removeObjectAtIndex:
removeCreator:completionHandler:
arrayWithObjects:
deleteItemsAtIndexPaths:
removeInvitees:completionHandler:
setParticipantViewShowingActions:
participantViewShowingActions
hideActions
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
messageComposeViewController:didFinishWithResult:message:contactPlayers:friendPlayers:
messageComposeViewController:willPresentPlayerPicker:
messageComposeViewController:willSend:message:
scrollViewDidScroll:
scrollViewDidZoom:
scrollViewWillBeginDragging:
scrollViewWillEndDragging:withVelocity:targetContentOffset:
scrollViewDidEndDragging:willDecelerate:
scrollViewWillBeginDecelerating:
scrollViewDidEndDecelerating:
scrollViewDidEndScrollingAnimation:
viewForZoomingInScrollView:
scrollViewWillBeginZooming:withView:
scrollViewDidEndZooming:withView:atScale:
scrollViewShouldScrollToTop:
scrollViewDidScrollToTop:
scrollViewDidChangeAdjustedContentInset:
collectionView:shouldHighlightItemAtIndexPath:
collectionView:didHighlightItemAtIndexPath:
collectionView:didUnhighlightItemAtIndexPath:
collectionView:shouldSelectItemAtIndexPath:
collectionView:shouldDeselectItemAtIndexPath:
collectionView:didSelectItemAtIndexPath:
collectionView:didDeselectItemAtIndexPath:
collectionView:willDisplayCell:forItemAtIndexPath:
collectionView:willDisplaySupplementaryView:forElementKind:atIndexPath:
collectionView:didEndDisplayingCell:forItemAtIndexPath:
collectionView:didEndDisplayingSupplementaryView:forElementOfKind:atIndexPath:
collectionView:shouldShowMenuForItemAtIndexPath:
collectionView:canPerformAction:forItemAtIndexPath:withSender:
collectionView:performAction:forItemAtIndexPath:withSender:
collectionView:transitionLayoutForOldLayout:newLayout:
collectionView:canFocusItemAtIndexPath:
collectionView:shouldUpdateFocusInContext:
collectionView:didUpdateFocusInContext:withAnimationCoordinator:
indexPathForPreferredFocusedViewInCollectionView:
collectionView:targetIndexPathForMoveFromItemAtIndexPath:toProposedIndexPath:
collectionView:targetContentOffsetForProposedContentOffset:
collectionView:shouldSpringLoadItemAtIndexPath:withContext:
collectionView:shouldBeginMultipleSelectionInteractionAtIndexPath:
collectionView:didBeginMultipleSelectionInteractionAtIndexPath:
collectionViewDidEndMultipleSelectionInteraction:
collectionView:contextMenuConfigurationForItemAtIndexPath:point:
collectionView:previewForHighlightingContextMenuWithConfiguration:
collectionView:previewForDismissingContextMenuWithConfiguration:
collectionView:willCommitMenuWithAnimator:
collectionView:layout:sizeForItemAtIndexPath:
collectionView:layout:insetForSectionAtIndex:
collectionView:layout:minimumLineSpacingForSectionAtIndex:
collectionView:layout:minimumInteritemSpacingForSectionAtIndex:
collectionView:layout:referenceSizeForHeaderInSection:
collectionView:layout:referenceSizeForFooterInSection:
deleteParticipant:
showingActions:
numberOfSectionsInCollectionView:
collectionView:numberOfItemsInSection:
collectionView:cellForItemAtIndexPath:
collectionView:viewForSupplementaryElementOfKind:atIndexPath:
setTournament:
_isLoading
_friendsOnly
_creatorInTournament
_loadParticipantsIfNeeded
_tournament
_participants
_activityIndicator
_inviteURL
_nearbyDelegate
_participantViewShowingActions
_noContentMessage
awakeFromNib
imageWithRenderingMode:
container
setCornerRadius:
setMasksToBounds:
labelColor
secondaryTintColor
contentBackgroundColor
deleteButton
deleteIcon
showActions:
actionContainer
actionTrailingConstraint
setConstant:
medalView
medal
delegate
displayActions:
constant
layoutIfNeeded
animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:
setRank:
setPhoto:
setNickname:
setFriendIndicator:
setScore:
appearance
setMedalView:
setMedal:
setActionTrailingConstraint:
setActionContainer:
setDeleteButton:
setDeleteIcon:
setContainer:
_rank
_photo
_nickname
_friendIndicator
_score
_appearance
_delegate
_medalView
_medal
_actionTrailingConstraint
_actionContainer
_deleteButton
_deleteIcon
_container
hairlineView
setColor:
leadingIndent
setLeadingIndent:
trailingIndent
setTrailingIndent:
setHairlineView:
_leadingIndent
_trailingIndent
_hairlineView
tournamentName
tournamentTitle
colorWithRGB:
date
timeIntervalSinceDate:
appendString:
copy
setupWithTournament:
colorForIndex:
timeLeftSinceDate:
monogramColorForIndex:
setTournamentTitle:
tournamentSubTitle
setTournamentSubTitle:
_tournamentTitle
_tournamentSubTitle
navigationController
finishExtension
setupWithViewRequest:
initializeWithLocalPlayer:hostPID:reply:
viewRequest
playerGroup
setPlayerGroup:
tournamentDefinitionID
setTournamentDefinitionID:
tableView
setContentInset:
gkPresentAlertWithTitle:message:buttonTitle:
code
registerPlayerInGroup:completionHandler:
extensionWillFinish
extensionDidTerminateWithError:
playTournament:withTryToken:
beginPlayWithCompletionHandler:
playTournament:
playButtonState
notifyPlayerForTournament:
registerPlayerInTournament:
replayTournament:
continuePlayingTournament:
updateState
acceptInvitationWithCompletionHandler:
declineInvitationWithCompletionHandler:
didSelectPlayInCell:
didAcceptInviteInCell:
didDeclineInviteInCell:
_playerGroup
_tournamentDefinitionID
appearanceStyle
tournamentUIAppearanceStyle
darkTextColor
setLabelColor:
colorWithAlphaComponent:
setSecondaryLabelColor:
setTertiaryLabelColor:
groupTableViewBackgroundColor
whiteColor
setContentBackgroundColor:
setNavigationBarStyle:
setBlurEffectStyle:
setSecondaryTintColor:
setTournamentCardColor:
lightTextColor
blackColor
colorWithRed:green:blue:alpha:
setNavigationBarBackgroundColor:
clearColor
updateWithViewRequest:
tertiaryLabelColor
tournamentCardColor
navigationBarBackgroundColor
navigationBarStyle
blurEffectStyle
_tintColor
_secondaryTintColor
_labelColor
_secondaryLabelColor
_tertiaryLabelColor
_backgroundColor
_contentBackgroundColor
_tournamentCardColor
_navigationBarBackgroundColor
_navigationBarStyle
_blurEffectStyle
mainContainer
players
value
friends
timeRemaining
localPlayerScore
localPlayerRank
topScore
localPlayerAttempts
setHeaderType:
setNeedsRefresh:
indicator
setupCustomTournamentTitle
tournamentDefinition
tournamentIcon
displayIconFromUrl:
showDefaultIcon
setupHeaderItems
setupButtons
currentLocale
setLocale:
setDateFormat:
localTimeZone
setTimeZone:
tournamentBeginDate
stringFromDate:
alias
customTournamentName
customTournamentNameFormat
sharedSession
URLWithString:
statusCode
imageWithData:
dataTaskWithURL:completionHandler:
resume
image
loadIconForStyle:withCompletionHandler:
headerType
bottomButtons
clearStackView:
topButtons
traitCollection
verticalSizeClass
horizontalSizeClass
topButtonsContainer
declineButton
addArrangedSubview:
acceptButton
playButton
play:
acceptInvitation:
declineInvitation:
setContentEdgeInsets:
hairlineDivider
loadHeaderItemWithTitle:value:
setPlayers:
setFriends:
setTimeRemaining:
setLocalPlayerScore:
setLocalPlayerRank:
setTopScore:
setLocalPlayerAttempts:
loadWinningPlayerView
loadNibNamed:owner:options:
countByEnumeratingWithState:objects:count:
sizeToFit
setWinningPlayerView:
arrangedSubviews
removeArrangedSubview:
removeFromSuperview
enumerateObjectsUsingBlock:
headerItems
secondRowHeaderItems
titleRowItems
disclosureView
bottomButtonsContainer
winningPlayerView
setSelectionStyle:
mainStackView
secondItemsContainer
itemsContainer
setEnabled:
_gkFormattedTimeIntervalStringWithStartDate:endDate:calendarUnits:style:
internal
setTournamentState:
getTournamentStateWithCompletionHandler:
setLocalParticipant:
localPlayerPlayed
maxReplays
replayCount
registrationBeginDate
compare:
setPlayerCount:
loadLeaderboard
getTotalPlayerCountForGroup:completionHandler:
friendCount
textColor
transitionWithView:duration:options:animations:completion:
setFriendCount:
getFriendCountForGroup:completionHandler:
timeRemainingFromDate:toDate:
updatePlayButtonTitle:
performWithoutAnimation:
setPlayButtonState:
enablePlayButton:
localParticipant
playerCount
configureMessageForParticipantState
localPlayerRegistered
tournamentEndDate
registrationEndDate
showButtons:
leaderboard
identifier
setIdentifier:
setTimeScope:
setPlayerScope:
overallRank
loadScoresWithCompletionHandler:
setupWithTournament:playerGroup:viewType:
setPlayButton:
setAcceptButton:
setDeclineButton:
needsRefresh
titleContainer
setTitleContainer:
setItemsContainer:
setSecondItemsContainer:
setBottomButtonsContainer:
setDisclosureView:
setHeaderItems:
setSecondRowHeaderItems:
setTitleRowItems:
setBottomButtons:
setTopButtonsContainer:
setTopButtons:
setMainStackView:
setMainContainer:
setIndicator:
setHairlineDivider:
_needsRefresh
_playButton
_acceptButton
_declineButton
_playButtonState
_headerType
_players
_friends
_timeRemaining
_localPlayerScore
_localPlayerRank
_topScore
_localPlayerAttempts
_winningPlayerView
_playerCount
_friendCount
_titleContainer
_itemsContainer
_secondItemsContainer
_bottomButtonsContainer
_disclosureView
_headerItems
_secondRowHeaderItems
_titleRowItems
_bottomButtons
_topButtonsContainer
_topButtons
_mainStackView
_mainContainer
_indicator
_hairlineDivider
removeAllInfoItems
infoItems
tournamentTypeDescription
addInfoItemToStackView:withTitle:value:
dividerWithLeftOffset:rightOffset:
_gkFormattedStringWithDateStyle:timeStyle:
editStartTime:
addInfoItemToStackView:withTitle:value:selector:
setTournamentStartDateSlice:
editEndTime:
setTournamentEndDateSlice:
duration
dateByAddingTimeInterval:
setTournamentDurationSlice:
recurrenceRule
frequency
interval
descriptionForFrequency:interval:
additionalInfoItems
editMaxReplay:
scoringMethodDescription
flipPlayIn:
addInfoItemToStackView:withTitle:switchValue:selector:
addInfoItemToStackView:withTitle:
valueTextField
valueSwich
setOn:
setBorderStyle:
startTimeDidChange:
endTimeDidChange:
maxReplayDidChange:
playingInTournamentDidChange:
setupInfoItemsForTraitCollection:viewType:
setInfoItems:
setAdditionalInfoItems:
tournamentStartDateSlice
tournamentEndDateSlice
tournamentDurationSlice
maxReplaysSlice
setMaxReplaysSlice:
_infoItems
_additionalInfoItems
_tournamentStartDateSlice
_tournamentEndDateSlice
_tournamentDurationSlice
_maxReplaysSlice
setGradientLayer:
gradientLayer
setStartPoint:
setEndPoint:
laurelWreath
blueColor
CGColor
setBounds:
contentView
setFrame:
layerClass
setLaurelWreath:
_laurelWreath
_gradientLayer
doneButton
setRightBarButtonItem:
setExtendedLayoutIncludesOpaqueBars:
setStandingsSection:
setInfoSection:
createCustomTournament
initWithTitle:style:target:action:
setupPickers
dismissKeyboard
initWithTarget:action:
addGestureRecognizer:
setIsCreatorInTournament:
setRowHeight:
setEstimatedRowHeight:
registerNib:forCellReuseIdentifier:
proposedNextCustomTournamentStartDate
setTournamentBeginDate:
setTournamentEndDate:
refreshContent
scheduledTimerWithTimeInterval:repeats:block:
setTimer:
timer
invalidate
viewWillDisappear:
headerCell
reloadData
setStartTimePicker:
startTimePicker
setDate:
setDatePickerMode:
startTimePickerDidChange:
setEndTimePicker:
endTimePicker
endTimePickerDidChange:
customMaxReplays
setMaxReplayPicker:
maxReplayPicker
setDataSource:
maxReplayField
setInputView:
setMaxReplayPickerData:
maxReplayPickerData
tournamentDateFormatter
startTimeField
infoCell
reloadSections:withRowAnimation:
endTimeField
setDuration:
resignFirstResponder
setStartTimeField:
setMinimumDate:
becomeFirstResponder
setEndTimeField:
customTournamentDuration
setMaximumDate:
setMaxReplayField:
isOn
text
integerValue
setMaxReplays:
tableView:heightForRowAtIndexPath:
infoSection
dequeueReusableCellWithIdentifier:forIndexPath:
setHeaderCell:
setInfoCell:
deselectRowAtIndexPath:animated:
standingsSection
showStandings
initWithNibName:bundle:
pushViewController:animated:
indexPathForRow:inSection:
reloadRowsAtIndexPaths:withRowAnimation:
initWithTournamentDefinition:andCreator:
setStartTime:
isCreatorInTournament
rightBarButtonItem
setCreatedCustomTournament:
inviteURLForMessages
createTournamentWithCompletionHandler:
mainQueue
sharedMenuController
hideMenu
addOperationWithBlock:
canPerformAction:withSender:
createdCustomTournament
popViewControllerAnimated:
gameCenterViewControllerDidFinish:
numberOfComponentsInPickerView:
pickerView:numberOfRowsInComponent:
pickerView:widthForComponent:
pickerView:rowHeightForComponent:
pickerView:titleForRow:forComponent:
pickerView:attributedTitleForRow:forComponent:
pickerView:viewForRow:forComponent:reusingView:
pickerView:didSelectRow:inComponent:
done:
numberOfSectionsInTableView:
tableView:numberOfRowsInSection:
tableView:heightForHeaderInSection:
tableView:estimatedHeightForRowAtIndexPath:
tableView:cellForRowAtIndexPath:
tableView:didSelectRowAtIndexPath:
setDoneButton:
_isCreatorInTournament
_doneButton
_timer
_headerCell
_infoCell
_startTimePicker
_endTimePicker
_maxReplayPicker
_maxReplayPickerData
_startTimeField
_endTimeField
_maxReplayField
_standingsSection
_infoSection
_createdCustomTournament
loadData
setOwnedCustomTournament:
predicateForAvailableCustomTournaments
setCustomTournaments:
loadTournamentsWithPredicate:completionHandler:
loadTournamentDefinitionWithID:completionHandler:
customTournaments
ownedCustomTournament
storyboardWithName:bundle:
instantiateViewControllerWithIdentifier:
dequeueReusableCellWithIdentifier:
sortButton
sortOptions:
createButton
showCustomTournamentCreation:
proxyForPlayer:
tournamentServicePrivate
removeObject:
deleteRowsAtIndexPaths:withRowAnimation:
removeCustomTournament:handler:
contextualActionWithStyle:title:handler:
configurationWithActions:
defaultCustomTournamentForTournamentDefinition:
indexPathsForVisibleRows
tableView:viewForHeaderInSection:
tableView:canEditRowAtIndexPath:
tableView:trailingSwipeActionsConfigurationForRowAtIndexPath:
_ownedCustomTournament
_customTournaments
tableView:willDisplayCell:forRowAtIndexPath:
tableView:willDisplayHeaderView:forSection:
tableView:willDisplayFooterView:forSection:
tableView:didEndDisplayingCell:forRowAtIndexPath:
tableView:didEndDisplayingHeaderView:forSection:
tableView:didEndDisplayingFooterView:forSection:
tableView:heightForFooterInSection:
tableView:estimatedHeightForHeaderInSection:
tableView:estimatedHeightForFooterInSection:
tableView:viewForFooterInSection:
tableView:accessoryTypeForRowWithIndexPath:
tableView:accessoryButtonTappedForRowWithIndexPath:
tableView:shouldHighlightRowAtIndexPath:
tableView:didHighlightRowAtIndexPath:
tableView:didUnhighlightRowAtIndexPath:
tableView:willSelectRowAtIndexPath:
tableView:willDeselectRowAtIndexPath:
tableView:didDeselectRowAtIndexPath:
tableView:editingStyleForRowAtIndexPath:
tableView:titleForDeleteConfirmationButtonForRowAtIndexPath:
tableView:editActionsForRowAtIndexPath:
tableView:leadingSwipeActionsConfigurationForRowAtIndexPath:
tableView:shouldIndentWhileEditingRowAtIndexPath:
tableView:willBeginEditingRowAtIndexPath:
tableView:didEndEditingRowAtIndexPath:
tableView:targetIndexPathForMoveFromRowAtIndexPath:toProposedIndexPath:
tableView:indentationLevelForRowAtIndexPath:
tableView:shouldShowMenuForRowAtIndexPath:
tableView:canPerformAction:forRowAtIndexPath:withSender:
tableView:performAction:forRowAtIndexPath:withSender:
tableView:canFocusRowAtIndexPath:
tableView:shouldUpdateFocusInContext:
tableView:didUpdateFocusInContext:withAnimationCoordinator:
indexPathForPreferredFocusedViewInTableView:
tableView:shouldSpringLoadRowAtIndexPath:withContext:
tableView:shouldBeginMultipleSelectionInteractionAtIndexPath:
tableView:didBeginMultipleSelectionInteractionAtIndexPath:
tableViewDidEndMultipleSelectionInteraction:
tableView:contextMenuConfigurationForRowAtIndexPath:point:
tableView:previewForHighlightingContextMenuWithConfiguration:
tableView:previewForDismissingContextMenuWithConfiguration:
tableView:willCommitMenuWithAnimator:
tableView:titleForHeaderInSection:
tableView:titleForFooterInSection:
tableView:canMoveRowAtIndexPath:
sectionIndexTitlesForTableView:
tableView:sectionForSectionIndexTitle:atIndex:
tableView:commitEditingStyle:forRowAtIndexPath:
tableView:moveRowAtIndexPath:toIndexPath:
attribute1
setAttribute1:
attribute2
setAttribute2:
_attribute1
_attribute2
initWithImage:
tabBarController
setTitleView:
setAutomaticTournamentName:
setHistoricalData:
loadHistoricalDataForPlayer:completionHandler:
predicateForPastTournaments
setRecentTournaments:
recentTournaments
setAutomaticTournamentCount:
setCustomTournamentCount:
automaticTournamentCount
automaticTournamentName
customTournamentCount
setSeparatorInset:
defaultSectionHeaderViewWithTitle:height:borderWidth:
setMessage:
resetTournamentDataForTournamentsWithTournamentDefinitionIdentifier:completionHandler:
resetCloudKitData
historicalData
_recentTournaments
_historicalData
_automaticTournamentName
_automaticTournamentCount
_customTournamentCount
setupWithCount:
setCount:
_count
setValue:
setValueTextField:
setValueSwich:
_value
_valueTextField
_valueSwich
friendDisplayname
friendNickname
friendStatus
friendPhoto
setAvatarSize:
participantStateDescriptionWithState:
firstName
lastName
friendPhotoTopConstraint
friendNameTopConstraint
setPlayer:
setInvitee:
setFriendStatus:
setFriendPhoto:
setFriendDisplayname:
setFriendNickname:
setFriendPhotoTopConstraint:
setFriendNameTopConstraint:
_friendStatus
_friendPhoto
_friendDisplayname
_friendNickname
_friendPhotoTopConstraint
_friendNameTopConstraint
navigationBar
setPrefersLargeTitles:
_setClipUnderlapWhileTransitioning:
effectWithStyle:
initWithEffect:
parentViewController
window
insertSubview:atIndex:
topAnchor
bottomAnchor
leadingAnchor
constraintEqualToAnchor:
trailingAnchor
setEffectView:
addConstraints:
appearanceWhenContainedInInstancesOfClasses:
effectView
setEffect:
done
setViewControllers:animated:
setupTournamentListViewController
hostInterface
extensionInterface
setViewRequest:
updateAppearanceWithViewRequest:
viewType
setTournamentDefinition:
displayStandingsForTournament:playerResigned:
setupTournamentStandingsViewControllerForTournament:
resignFromTournamentWithCompletionHandler:
loadTournamentWithID:completionHandler:
daemonProxy
setHostPID:
updateFromLocalPlayer:
extensionContext
completeRequestReturningItems:completionHandler:
_remoteViewControllerProxy
_remoteViewControllerInterface
_exportedInterface
setupWithTournamentDefinition:
_tournamentDefinition
_viewRequest
_effectView
_message
setCreateButton:
setSortButton:
_createButton
_sortButton
initWithFrame:
setTableFooterView:
setAppearanceStyle:
setBarStyle:
setSeparatorStyle:
viewSafeAreaInsetsDidChange
safeAreaInsets
setScrollIndicatorInsets:
systemFontOfSize:
setFont:
constraintGreaterThanOrEqualToAnchor:constant:
showNoContentPlaceholderForError:
hideNoContentPlaceholder
_appearanceStyle
updateWithTitle:subTitle:
clearSections
setSectionCount:
setSectionForAutomaticTournaments:
setSectionForCustomTournaments:
setSectionForHistory:
setLeftBarButtonItem:
loadData:
creationMethod
sectionForAutomaticTournaments
predicateForAvailableAutoTournaments
liveAutoTournaments
mutableCopy
setLiveAutoTournaments:
previousSectionCount
sectionCount
performBatchUpdates:completion:
sectionForHistory
setTournamentsPlayed:
sectionForCustomTournaments
setActiveCustomTournaments:
setCustomTournamentsPlaying:
setCustomTournamentsInvitedTo:
customTournamentsInvitedTo
activeCustomTournaments
customTournamentsPlaying
setPreviousSectionCount:
setUserInteractionEnabled:
tournamentsPlayed
performSegueWithIdentifier:sender:
_liveAutoTournaments
_tournamentsPlayed
_activeCustomTournaments
_customTournamentsPlaying
_customTournamentsInvitedTo
_sectionForAutomaticTournaments
_sectionForCustomTournaments
_sectionForHistory
_sectionCount
_previousSectionCount
colorWithRGBA:
setButton:
_button
v16@0:8
@16@0:8
v24@0:8@16
@"UIImageView"
@"UILabel"
@24@0:8@16
@40@0:8{CGPoint=dd}16@32
@"<GKStandingsCollectionViewTouchDelegate>"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v56@0:8@16q24@32@40@48
v32@0:8@16@24
v36@0:8@16B24@28
v56@0:8@"GKMessageComposeViewController"16q24@"NSString"32@"NSArray"40@"NSArray"48
v32@0:8@"GKMessageComposeViewController"16@"GKDashboardMultiplayerPickerViewController"24
v36@0:8@"GKMessageComposeViewController"16B24@"NSString"28
v48@0:8@16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@16B24
v40@0:8@16@24d32
v24@0:8@"UIScrollView"16
v48@0:8@"UIScrollView"16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@"UIScrollView"16B24
@"UIView"24@0:8@"UIScrollView"16
v32@0:8@"UIScrollView"16@"UIView"24
v40@0:8@"UIScrollView"16@"UIView"24d32
B24@0:8@"UIScrollView"16
B32@0:8@16@24
v40@0:8@16@24@32
v48@0:8@16@24@32@40
B48@0:8@16:24@32@40
v48@0:8@16:24@32@40
@40@0:8@16@24@32
{CGPoint=dd}40@0:8@16{CGPoint=dd}24
B40@0:8@16@24@32
@48@0:8@16@24{CGPoint=dd}32
@32@0:8@16@24
B32@0:8@"UICollectionView"16@"NSIndexPath"24
v32@0:8@"UICollectionView"16@"NSIndexPath"24
v40@0:8@"UICollectionView"16@"UICollectionViewCell"24@"NSIndexPath"32
v48@0:8@"UICollectionView"16@"UICollectionReusableView"24@"NSString"32@"NSIndexPath"40
B48@0:8@"UICollectionView"16:24@"NSIndexPath"32@40
v48@0:8@"UICollectionView"16:24@"NSIndexPath"32@40
@"UICollectionViewTransitionLayout"40@0:8@"UICollectionView"16@"UICollectionViewLayout"24@"UICollectionViewLayout"32
B32@0:8@"UICollectionView"16@"UICollectionViewFocusUpdateContext"24
v40@0:8@"UICollectionView"16@"UICollectionViewFocusUpdateContext"24@"UIFocusAnimationCoordinator"32
@"NSIndexPath"24@0:8@"UICollectionView"16
@"NSIndexPath"40@0:8@"UICollectionView"16@"NSIndexPath"24@"NSIndexPath"32
{CGPoint=dd}40@0:8@"UICollectionView"16{CGPoint=dd}24
B40@0:8@"UICollectionView"16@"NSIndexPath"24@"<UISpringLoadedInteractionContext>"32
v24@0:8@"UICollectionView"16
@"UIContextMenuConfiguration"48@0:8@"UICollectionView"16@"NSIndexPath"24{CGPoint=dd}32
@"UITargetedPreview"32@0:8@"UICollectionView"16@"UIContextMenuConfiguration"24
v32@0:8@"UICollectionView"16@"<UIContextMenuInteractionCommitAnimating>"24
{CGSize=dd}40@0:8@16@24@32
{UIEdgeInsets=dddd}40@0:8@16@24q32
d40@0:8@16@24q32
{CGSize=dd}40@0:8@16@24q32
{CGSize=dd}40@0:8@"UICollectionView"16@"UICollectionViewLayout"24@"NSIndexPath"32
{UIEdgeInsets=dddd}40@0:8@"UICollectionView"16@"UICollectionViewLayout"24q32
d40@0:8@"UICollectionView"16@"UICollectionViewLayout"24q32
{CGSize=dd}40@0:8@"UICollectionView"16@"UICollectionViewLayout"24q32
v24@0:8@"GKParticipantView"16
v20@0:8B16
q24@0:8@16
q32@0:8@16q24
@24@0:8q16
@"GKTournament"
@"NSMutableArray"
@"UIActivityIndicatorView"
@"NSURL"
@"<GKDashboardNearbyBrowserDelegate>"
@"GKParticipantView"
@"NSString"
v24@0:8Q16
@"<GKParticipantViewDelegate>"
@"UIView"
@"NSLayoutConstraint"
@"UIButton"
Vv24@0:8@16
Vv36@0:8@16i24@?28
Vv24@0:8@"GKTournamentViewRequest"16
Vv36@0:8@"GKLocalPlayer"16i24@?<v@?>28
@"GKTournamentViewRequest"16@0:8
Vv24@0:8@"NSError"16
Vv32@0:8@16@24
Vv32@0:8@"GKTournament"16@"NSString"24
v24@0:8@"GKTournamentHeaderCell"16
q16@0:8
v24@0:8q16
@"UIColor"
v40@0:8@16q24q32
@"<GKTournamentHeaderCellDelegate>"
@"GKTournamentHeaderItemSlice"
@"GKWinningPlayerView"
@"UIStackView"
@"GKHairlineDivider"
v32@0:8@16q24
@32@0:8q16q24
@44@0:8@16@24B32:36
@48@0:8@16@24@32:40
@32@0:8d16d24
@"<GKTournamentInfoCellDelegate>"
@"GKTournamentInfoItemSlice"
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"CAGradientLayer"
v24@0:8@"GKGameCenterViewController"16
v24@0:8@"UITextField"16
v24@0:8@"UISwitch"16
q24@0:8@"UIPickerView"16
q32@0:8@"UIPickerView"16q24
d32@0:8@16q24
@40@0:8@16q24q32
@48@0:8@16q24q32@40
d32@0:8@"UIPickerView"16q24
@"NSString"40@0:8@"UIPickerView"16q24q32
@"NSAttributedString"40@0:8@"UIPickerView"16q24q32
@"UIView"48@0:8@"UIPickerView"16q24q32@"UIView"40
v40@0:8@"UIPickerView"16q24q32
d32@0:8@16@24
B32@0:8:16@24
@"UIBarButtonItem"
@"NSTimer"
@"GKTournamentHeaderCell"
@"GKTournamentInfoCell"
@"UIDatePicker"
@"UIPickerView"
@"UITextField"
@32@0:8@16q24
v40@0:8@16@24q32
q32@0:8@16@24
v40@0:8@"UITableView"16@"UITableViewCell"24@"NSIndexPath"32
v40@0:8@"UITableView"16@"UIView"24q32
d32@0:8@"UITableView"16@"NSIndexPath"24
d32@0:8@"UITableView"16q24
@"UIView"32@0:8@"UITableView"16q24
q32@0:8@"UITableView"16@"NSIndexPath"24
v32@0:8@"UITableView"16@"NSIndexPath"24
B32@0:8@"UITableView"16@"NSIndexPath"24
@"NSIndexPath"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSString"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSArray"32@0:8@"UITableView"16@"NSIndexPath"24
@"UISwipeActionsConfiguration"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSIndexPath"40@0:8@"UITableView"16@"NSIndexPath"24@"NSIndexPath"32
B48@0:8@"UITableView"16:24@"NSIndexPath"32@40
v48@0:8@"UITableView"16:24@"NSIndexPath"32@40
B32@0:8@"UITableView"16@"UITableViewFocusUpdateContext"24
v40@0:8@"UITableView"16@"UITableViewFocusUpdateContext"24@"UIFocusAnimationCoordinator"32
@"NSIndexPath"24@0:8@"UITableView"16
B40@0:8@"UITableView"16@"NSIndexPath"24@"<UISpringLoadedInteractionContext>"32
v24@0:8@"UITableView"16
@"UIContextMenuConfiguration"48@0:8@"UITableView"16@"NSIndexPath"24{CGPoint=dd}32
@"UITargetedPreview"32@0:8@"UITableView"16@"UIContextMenuConfiguration"24
v32@0:8@"UITableView"16@"<UIContextMenuInteractionCommitAnimating>"24
q40@0:8@16@24q32
v40@0:8@16q24@32
q32@0:8@"UITableView"16q24
@"UITableViewCell"32@0:8@"UITableView"16@"NSIndexPath"24
q24@0:8@"UITableView"16
@"NSString"32@0:8@"UITableView"16q24
@"NSArray"24@0:8@"UITableView"16
q40@0:8@"UITableView"16@"NSString"24q32
v40@0:8@"UITableView"16q24@"NSIndexPath"32
v40@0:8@"UITableView"16@"NSIndexPath"24@"NSIndexPath"32
@"GKTournamentParticipantHistoricalData"
@"UISwitch"
@"GKDashboardPlayerPhotoView"
Vv28@0:8@16B24
@"GKTournamentDefinition"
@"GKTournamentViewRequest"
@"UIVisualEffectView"
@40@0:8@16d24d32
@24@0:8Q16
icon
T@"UIImageView",W,N,V_icon
title
T@"UILabel",W,N,V_title
subTitle
T@"UILabel",W,N,V_subTitle
touchDelegate
T@"<GKStandingsCollectionViewTouchDelegate>",W,N,V_touchDelegate
eventType
tournamentID
bundleID
GKParticipantView
GKParticipantViewCell
GKCollectionViewHeaderButton
GKCollectionViewFooterMessageView
filter
Friend Invitees
Invitees
Friend Standings
Standings
Loading...
loadParticipantsPaged - leader returned no scores with error: %@
v24@?0@"NSArray"8@"NSError"16
v16@?0@?<v@?>8
v24@?0@"GKTournamentParticipant"8@"NSError"16
Unable to load participants
There are no participants in this tournament
v8@?0
%@ (Creator)
v32@?0@"UIImage"8q16@"GKPlayer"24
Invitation Pending
Invitation Declined
Registered
Resigned Without Scoring
Score Submitted
Resigned
Completed
Ejected From Tournament
Unknown State
Add Me Back
Unexpected supplementary view of kind was requested: %@
All Invitees
All Participants
v16@?0@"UIAlertAction"8
Friends Only
v24@?0@"NSURL"8@"NSError"16
Error getting url for custom tournament invite: %@
Error in addInvitees: %@
v16@?0@"NSError"8
player
v16@?0@"UIViewController"8
GKTournamentStandingsViewController - Error in addInvitees: %@
Error in removeCreator: %@
Error in removeInvitees: %@
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
participants
T@"NSMutableArray",&,N,V_participants
isLoading
TB,N,V_isLoading
friendsOnly
TB,N,V_friendsOnly
activityIndicator
T@"UIActivityIndicatorView",&,N,V_activityIndicator
creatorInTournament
TB,N,V_creatorInTournament
inviteURL
T@"NSURL",&,N,V_inviteURL
nearbyDelegate
T@"<GKDashboardNearbyBrowserDelegate>",N,V_nearbyDelegate
participantViewShowingActions
T@"GKParticipantView",&,N,V_participantViewShowingActions
noContentMessage
T@"NSString",&,N,V_noContentMessage
loadParticipantsIfNeeded
TB,N,V_loadParticipantsIfNeeded
tournament
T@"GKTournament",&,N,V_tournament
friend
goldmedal
silvermedal
bronzemedal
medalView
T@"UIView",W,N,V_medalView
medal
T@"UIImageView",W,N,V_medal
actionTrailingConstraint
T@"NSLayoutConstraint",W,N,V_actionTrailingConstraint
actionContainer
T@"UIView",W,N,V_actionContainer
deleteButton
T@"UIButton",W,N,V_deleteButton
deleteIcon
T@"UIButton",W,N,V_deleteIcon
container
T@"UIView",W,N,V_container
rank
T@"UILabel",W,N,V_rank
photo
T@"UIImageView",W,N,V_photo
nickname
T@"UILabel",W,N,V_nickname
friendIndicator
T@"UIImageView",W,N,V_friendIndicator
score
T@"UILabel",W,N,V_score
appearance
TQ,N,V_appearance
delegate
T@"<GKParticipantViewDelegate>",W,N,V_delegate
hairlineView
T@"UIView",W,N,V_hairlineView
leadingIndent
T@"NSLayoutConstraint",W,N,V_leadingIndent
trailingIndent
T@"NSLayoutConstraint",W,N,V_trailingIndent
color
T@"UIColor",W,D,N
%ld days
%ld hours
%ld minutes
%ld seconds
tournamentTitle
T@"UILabel",W,V_tournamentTitle
tournamentSubTitle
T@"UILabel",W,V_tournamentSubTitle
viewRequest
T@"GKTournamentViewRequest",R,N
Notifications
TO BE IMPLEMENTED!
Error in registerPlayer: %@
Error in beginPlay: %@
v24@?0@"NSString"8@"NSError"16
Error in acceptInvitation: %@
Error in declineInvitation: %@
playerGroup
Tq,N,V_playerGroup
tournamentDefinitionID
T@"NSString",&,N,V_tournamentDefinitionID
tintColor
T@"UIColor",&,N,V_tintColor
secondaryTintColor
T@"UIColor",&,N,V_secondaryTintColor
labelColor
T@"UIColor",&,N,V_labelColor
secondaryLabelColor
T@"UIColor",&,N,V_secondaryLabelColor
tertiaryLabelColor
T@"UIColor",&,N,V_tertiaryLabelColor
backgroundColor
T@"UIColor",&,N,V_backgroundColor
contentBackgroundColor
T@"UIColor",&,N,V_contentBackgroundColor
tournamentCardColor
T@"UIColor",&,N,V_tournamentCardColor
navigationBarBackgroundColor
T@"UIColor",&,N,V_navigationBarBackgroundColor
navigationBarStyle
Tq,N,V_navigationBarStyle
blurEffectStyle
Tq,N,V_blurEffectStyle
TournamentHeaderCell
TournamentInfoCell
TournamentActionCell
MMM d, hh:mm a
%@'s %@
%@ by %@
%@ by %@, %@
%@ %@'s %@
Error loading resource from location %@: %@
Could not load resource from location %@: HTTP status: %@
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
tournament-cup-round
v32@?0@"UIImage"8@"GKGame"16@"NSError"24
Players
Friends
Time Remaining
Score
Rank
Top Score
Tries
GKWinningPlayerView
GKTournamentHeaderItemSlice
v32@?0@"UIView"8Q16^B24
v24@?0q8@"NSError"16
%ld/%ld
v12@?0B8
Registration Opens In %@
Non-participant
Starts In %@
Tournament is full
Register Now
Registered. Starts In %@
Tournament has ended
Tournament ended with insufficient participation.
Tournament is not valid
Registration Opens In
Starts In
Enter Within
Ends In
%lld
(Winning Score: %lld)
Play Now
Registration Closed
Try Again
You have been disqualified
headerType
Tq,N,V_headerType
players
T@"GKTournamentHeaderItemSlice",&,N,V_players
friends
T@"GKTournamentHeaderItemSlice",&,N,V_friends
timeRemaining
T@"GKTournamentHeaderItemSlice",&,N,V_timeRemaining
localPlayerScore
T@"GKTournamentHeaderItemSlice",&,N,V_localPlayerScore
localPlayerRank
T@"GKTournamentHeaderItemSlice",&,N,V_localPlayerRank
topScore
T@"GKTournamentHeaderItemSlice",&,N,V_topScore
localPlayerAttempts
T@"GKTournamentHeaderItemSlice",&,N,V_localPlayerAttempts
winningPlayerView
T@"GKWinningPlayerView",&,N,V_winningPlayerView
playerCount
Tq,N,V_playerCount
friendCount
Tq,N,V_friendCount
titleContainer
T@"UIView",W,N,V_titleContainer
itemsContainer
T@"UIView",W,N,V_itemsContainer
secondItemsContainer
T@"UIView",W,N,V_secondItemsContainer
bottomButtonsContainer
T@"UIView",W,N,V_bottomButtonsContainer
disclosureView
T@"UIView",W,N,V_disclosureView
headerItems
T@"UIStackView",W,N,V_headerItems
secondRowHeaderItems
T@"UIStackView",W,N,V_secondRowHeaderItems
titleRowItems
T@"UIStackView",W,N,V_titleRowItems
bottomButtons
T@"UIStackView",W,N,V_bottomButtons
topButtonsContainer
T@"UIView",W,N,V_topButtonsContainer
topButtons
T@"UIStackView",W,N,V_topButtons
mainStackView
T@"UIStackView",W,N,V_mainStackView
mainContainer
T@"UIView",W,N,V_mainContainer
indicator
T@"UIView",W,N,V_indicator
hairlineDivider
T@"GKHairlineDivider",W,N,V_hairlineDivider
playButton
T@"UIButton",W,N,V_playButton
acceptButton
T@"UIButton",W,N,V_acceptButton
declineButton
T@"UIButton",W,N,V_declineButton
playButtonState
Tq,N,V_playButtonState
T@"<GKTournamentHeaderCellDelegate>",W,N,V_delegate
needsRefresh
TB,N,V_needsRefresh
Tournament Type
Start Date and Time
End Date and Time
Duration
Frequency
Unlimited
%ld or more
Maximum Tries
Scoring Method
Player Group
Playing In my Tournament
Every %ld Minutes
Every %ld Hours
Every %ld Days
Every %ld Weeks
Every %ld Months
Every Minute
Every Hour
Every Day
Every Week
Every Month
GKTournamentInfoItemSlice
GKHairlineDivider
infoItems
T@"UIStackView",W,N,V_infoItems
additionalInfoItems
T@"UIStackView",W,N,V_additionalInfoItems
T@"<GKTournamentInfoCellDelegate>",W,N,V_delegate
tournamentStartDateSlice
T@"GKTournamentInfoItemSlice",&,N,V_tournamentStartDateSlice
tournamentEndDateSlice
T@"GKTournamentInfoItemSlice",&,N,V_tournamentEndDateSlice
tournamentDurationSlice
T@"GKTournamentInfoItemSlice",&,N,V_tournamentDurationSlice
maxReplaysSlice
T@"GKTournamentInfoItemSlice",&,N,V_maxReplaysSlice
laurel-wreath
gradientLayer
T@"CAGradientLayer",W,N,V_gradientLayer
laurelWreath
T@"UIImageView",W,N,V_laurelWreath
Create
GKTournamentHeaderCell
Details
v16@?0@"NSTimer"8
MMM d, yyyy hh:mm a
leaderboard-icon
GKTournamentStandingsViewController
dd/MMM/YYYY hh:mm a
HH:mm
Error getting share URL for custom tournament: %@
Error in createTournamentWithCompletionHandler: %@
v24@?0@"GKTournament"8@"NSError"16
doneButton
T@"UIBarButtonItem",&,N,V_doneButton
timer
T@"NSTimer",&,N,V_timer
headerCell
T@"GKTournamentHeaderCell",W,N,V_headerCell
infoCell
T@"GKTournamentInfoCell",W,N,V_infoCell
startTimePicker
T@"UIDatePicker",&,N,V_startTimePicker
endTimePicker
T@"UIDatePicker",&,N,V_endTimePicker
maxReplayPicker
T@"UIPickerView",&,N,V_maxReplayPicker
maxReplayPickerData
T@"NSMutableArray",&,N,V_maxReplayPickerData
startTimeField
T@"UITextField",W,N,V_startTimeField
endTimeField
T@"UITextField",W,N,V_endTimeField
maxReplayField
T@"UITextField",W,N,V_maxReplayField
isCreatorInTournament
TB,N,V_isCreatorInTournament
standingsSection
Tq,N,V_standingsSection
infoSection
Tq,N,V_infoSection
createdCustomTournament
T@"GKTournament",&,N,V_createdCustomTournament
Custom Tournaments
v32@?0@"UITableViewCell"8Q16^B24
v24@?0@"GKTournamentDefinition"8@"NSError"16
GKTournamentDetails
GKTournamentDetailsVC
No Tournament Selected
Warning Alert Message
Delete
v32@?0@"UIContextualAction"8@"UIView"16@?<v@?B>24
SortOptions
customTournaments
T@"NSMutableArray",&,N,V_customTournaments
ownedCustomTournament
TB,N,V_ownedCustomTournament
attribute1
T@"UILabel",W,N,V_attribute1
attribute2
T@"UILabel",W,N,V_attribute2
lamegame-logo
History
v24@?0@"GKTournamentParticipantHistoricalData"8@"NSError"16
v32@?0@"GKTournament"8Q16^B24
%ld %@, %ld Custom Tournaments
Destructive Operation!
Do you really wish to reset the local tournament repository?
recentTournaments
T@"NSMutableArray",&,N,V_recentTournaments
historicalData
T@"GKTournamentParticipantHistoricalData",&,N,V_historicalData
automaticTournamentName
T@"NSString",&,N,V_automaticTournamentName
automaticTournamentCount
Tq,N,V_automaticTournamentCount
customTournamentCount
Tq,N,V_customTournamentCount
count
T@"UILabel",W,V_count
value
T@"UILabel",W,N,V_value
valueTextField
T@"UITextField",W,N,V_valueTextField
valueSwich
T@"UISwitch",W,N,V_valueSwich
Invitation Accepted
Resigned Before Submitting Score
Resigned After Submitting Score
Submitted Max Number Of Scores
friendPhoto
T@"GKDashboardPlayerPhotoView",W,V_friendPhoto
friendDisplayname
T@"UILabel",W,V_friendDisplayname
friendNickname
T@"UILabel",W,V_friendNickname
friendPhotoTopConstraint
T@"NSLayoutConstraint",W,V_friendPhotoTopConstraint
friendNameTopConstraint
T@"NSLayoutConstraint",W,V_friendNameTopConstraint
friendStatus
T@"UILabel",W,V_friendStatus
GKTournament
GKLiveTournamentListVC
Done
tournamentDefinition
T@"GKTournamentDefinition",&,N,V_tournamentDefinition
T@"GKTournamentViewRequest",&,N,V_viewRequest
effectView
T@"UIVisualEffectView",&,N,V_effectView
message
T@"UILabel",W,N,V_message
CustomTournamentHeaderIdentifier
createButton
T@"UIButton",W,N,V_createButton
sortButton
T@"UIButton",W,N,V_sortButton
appearanceStyle
Tq,N,V_appearanceStyle
Tournaments
SummaryCell
There are currently no active tournaments. Please check back later.
%ld New Invites, %ld Playing
1 Custom Tournament
%ld Custom Tournaments
Manage Custom Tournaments
Create a Custom Tournament
tournament-cup
%ld Recently Played
You have not played in any tournaments
GKCustomTournament
GKCustomTournamentList
showRecentTournaments
CUSTOM TOURNAMENTS
HISTORY
liveAutoTournaments
T@"NSMutableArray",&,N,V_liveAutoTournaments
tournamentsPlayed
Tq,N,V_tournamentsPlayed
activeCustomTournaments
Tq,N,V_activeCustomTournaments
customTournamentsPlaying
Tq,N,V_customTournamentsPlaying
customTournamentsInvitedTo
Tq,N,V_customTournamentsInvitedTo
sectionForAutomaticTournaments
Tq,N,V_sectionForAutomaticTournaments
sectionForCustomTournaments
Tq,N,V_sectionForCustomTournaments
sectionForHistory
Tq,N,V_sectionForHistory
sectionCount
Tq,N,V_sectionCount
previousSectionCount
Tq,N,V_previousSectionCount
button
T@"UIButton",W,N,V_button
?333333
?ffffff
%{public}@
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>DataProtectionClass</key>
<string>NSFileProtectionComplete</string>
<key>com.apple.Contacts.database-allow</key>
<true/>
<key>com.apple.accounts.facebook.defaultaccess</key>
<true/>
<key>com.apple.developer.game-center</key>
<array>
<string>Tournaments</string>
</array>
<key>com.apple.developer.ubiquity-container-identifiers</key>
<string>Tournaments</string>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.mobile.deleted.AllowFreeSpace</key>
<true/>
<key>com.apple.private.canGetAppLinkInfo</key>
<true/>
<key>com.apple.private.canModifyAppLinkPermissions</key>
<true/>
<key>com.apple.private.contactsui</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.game-center</key>
<array>
<string>Tournaments</string>
</array>
<key>com.apple.private.ids.idquery-cache</key>
<true/>
<key>com.apple.private.ids.idsremoteurlconnection</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<true/>
<key>com.apple.private.ids.registration</key>
<array>
<string>com.apple.madrid</string>
<string>com.apple.ess</string>
<string>com.apple.private.ac</string>
</array>
<key>com.apple.private.ids.remoteurlconnection</key>
<true/>
<key>com.apple.private.imcore.imagent</key>
<true/>
<key>com.apple.private.imcore.imdpersistence.database-access</key>
<true/>
<key>com.apple.private.imcore.imremoteurlconnection</key>
<true/>
<key>com.apple.private.imcore.imtranscoderservice</key>
<true/>
<key>com.apple.private.mobilesms.messages-recipient-vetting</key>
<true/>
<key>com.apple.private.security.container-required</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceAddressBook</string>
</array>
<key>com.apple.private.tcc.allow.overridable</key>
<array>
<string>kTCCServiceAddressBook</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.gamecenter</string>
<string>com.apple.demo-settings</string>
</array>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>com.apple.springboard.openurlinbackground</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
</array>
</dict>
</plist>
