hash
TQ,R
superclass
T#,R
T@"NSString",R,C
_TtC13fileproviderd4Blah
<subscription %@: observing>
<subscription %@: (inactive)>
.rendez-vous.%@.nosync
-[FSChangeSubscription barrier]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FileProviderDaemons_Sim/FileProvider-265/fssync/libfssync/implementations/file-system/tree/FSChangeSubscription.m
_reader.barrierFolderURL
root
T@"NSString",R,N,V_root
rootParent
T@"NSString",R,N
rootFileID
TQ,R,N,V_rootFileID
rootfd
Ti,R,N,V_rootfd
delegate
T@"<FSChangeSubscriptionDelegate>",W,V_delegate
TQ,N,V_state
ignoreOwnEvents
TB,R,N,V_ignoreOwnEvents
lastDeliveredEventID
TQ,N,V_lastDeliveredEventID
eventStreamUUID
T@"NSUUID",&,N,V_eventStreamUUID
isActivated
TB,N,V_isActivated
.rendez-vous.
\.rendez-vous\.([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})\.nosync
.notify.
\.notify\.([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})\.nosync
v16@?0@"NSObject<OS_xpc_object>"8
<%@:%p>, device:'%s' mounted-on:'%s' fstype:%s
deviceID
Ti,R,N,V_deviceID
mountPath
T@"NSUUID",R,N
backupEngine
T@"_TtC9libfssync19FPFSSQLBackupEngine",&,N,V_backupEngine
%s/wharf
i24@?0^{fpfs_item_handle=QQII*Q}8q16
fault
fpfs_wharf_unload
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FileProviderDaemons_Sim/FileProvider-265/fssync/libfssync/wharf/fpfs_wharf.c
attrs->item_handle.doc_id == 0
ingest
propagate
delete
%llu
com.apple.fileprovider.orig_filename
%*s %d%s%s
restoreEngine
T@"_TtC9libfssync20FPFSSQLRestoreEngine",&,N,V_restoreEngine
fpfs
%s: fsevents-stream
-[FSChangeMonitor dealloc]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FileProviderDaemons_Sim/FileProvider-265/fssync/libfssync/implementations/file-system/tree/FSChangeMonitor.m
_liveStream == nil
-[FSChangeMonitor _activateSubscription:error:]
!subscription.isActivated
B16@?0@"FSChangeSubscription"8
com.apple.fpfs.fsevents-live
com.apple.fpfs.fsevents-historical
-[FSChangeMonitor _queueEvents:]
_fseventsToProcess.count < _maxFSEventQueueSize
running
suspended
cancelled
 reset:%d
 [live]
 [historical up to:%llu and then:%llu]
<%@: %p %@ roots: %@>
-[FSChangeMonitor resume]
suspendCount >= 0
delegationQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_delegationQueue
barrierFolderURL
T@"NSURL",&,N,V_barrierFolderURL
.notify.%@.nosync
<id:%llu,flg:0x%x> 
path
fileID
unspecified reason
adding new subscription
device UUID changed
fsevents ID wrapped
userland daemon dropped fsevents
T@"NSString",&,N,V_path
TQ,R,N,V_fileID
flags
TI,R,N,V_flags
eventID
TQ,R,N,V_eventID
canLearnEventID
TB,N,V_canLearnEventID
isBarrier
TB,R,N
isNotification
TB,R,N,V_isNotification
barrierUUID
T@"NSUUID",R,N,V_barrierUUID
retry_count
next_retry_date
last_error_date
last_error
priority
kind
is_dataless
size
is_locked
posix_permissions
creation_date
content_modification_date
last_used_date
tag_data
favorite_rank
is_package
is_hidden
extension_hidden
child_item_count
extended_attributes
physical_size
trash_put_back
is_evictable
is_pinned
is_in_pinned_folder
before_bounce_filename
itemNotFound
itemCollision
cannotBounce
contentUnavailable
directoryNotEmpty
versionConflict
capturedContentMissing
itemNotEvictable
itemMismatch
directoryChangedWhileEnumerating
downloadCancelled
lookupNotPermitted
ItemKindMismatch
itemType
item_id
other_item_id
job_type
field
capabilities
is_uploading
is_uploaded
uploading_error
downloading_error
is_excluded_from_sync
is_shared
is_top_level_shared_item
is_shared_by_current_user
preformatted_owner_name
preformatted_most_recent_editor_name
last_edited_by_current_user
sharing_permissions
is_container
is_container_pristine
app_container_bundle_identifier
cloud_container_identifier
container_display_name
display_name
has_unresolved_conflicts
item_decoration
user_info
state_conditions
state_error
state_continuation
Precondition failed 
  reconciliation mutation: %{public}@ on %{public}@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FileProviderDaemons_Sim/FileProvider-265/fssync/libfssync/interfaces/persistence/Database.swift
_TtC9libfssync14FPFSEnumerator
observer
vfsItemID
wantsTrashEnumeration
unionEnumerator
extensionObserver
lifetimeExtender
keepAlive
libfssync.FPFSEnumerator
FPXEnumerator
_TtC9libfssync12FPFSObserver
@16@0:8
enumerator
itemIdentifier
isEnumerating
hasPendingChange
page
anchor
libfssync.FPFSObserver
OS_dispatch_source
v40@?0@"NSArray"8@"NSData"16@"NSData"24@"NSError"32
v44@?0@"NSArray"8@"NSArray"16B24@"NSData"28@"NSError"36
enumerateChanges(anchor:)
enumeratePage(page:)
FPXEnumeratorObserver
v24@0:8@"FPItem"16
B24@0:8@16
^@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
^v16@0:8
Tq,N,R
T#,N,R
T@"NSString",N,R
debugDescription
B24@0:8@"Protocol"16
@"NSString"16@0:8
snapshotting->watchingChildren
()->snapshottingChildren
-watchingChildren
delete:-recursive
delete:+recursive
delete:-stillInFileTree
delete:+stillInFileTree
delete:+ready, -unappliedFields
unappliedFields-=
unappliedFields+=
removeCollidingItemID(
addCollidingItemID(
deleteChildrenReconciliations(
deleteReconciliation(
originalParentID
originalFilename
posixPermissions
contentModificationDate
isInPinnedFolder
isPathExtensionHidden
beforeBounceFilename
extendedAttributes
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FileProviderDaemons_Sim/FileProvider-265/fssync/libfssync/interfaces/file-tree/item/types/ItemMetadata.swift
i12@?0i8
unexpected error while retrieving info at %@
com.apple.file-provider-domain-id#PN
com.apple.icloud.drive.fileprovider
_TtC9libfssync20InternalPathsManager
appSupportURL
rootURL
wharfDirectoryURL
dbDirectoryURL
dbURL
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FileProviderDaemons_Sim/FileProvider-265/fssync/fpfs/InternalPathsManager.swift
could not get support paths
Cloud Storage root path for domain %@ : %@
Application Support root path for domain %@ : %@
creating root at %@
using %@ root for %@ because is not marked by any domain but already existing on disk
removing %@ which is owned by domain identified by %@ and that %@ wants to take over
attempting to create a root for the default iCloud Drive domain, that shouldn't happen
Marking root dataless %@
no provider for domain 
_TtC9libfssync25VFSLookupItemContinuation
startDate
deletionDetectionDate
hasSeenBusy
backoff
timeSource
table
deleteDisabledThrottles
nextRetryDate
jobThrottlingParameters
itemThrottlingParameters
fileTreeThrottlingParameters
 ADD COLUMN priority INT NOT NULL DEFAULT 0
_state_next_retry ON 
(state, next_retry_date)
CREATE UNIQUE INDEX 
_per_item_and_other_field_update
(kind, item_id, other_item_id, field)
WHERE 
_per_other_field_update
(kind, other_item_id, field)
WHERE 
_per_field_update
(kind, item_id, field)
WHERE 
_per_item_and_other_job
(kind, item_id, other_item_id, job_type)
WHERE 
_per_other_job
    ON 
(kind, other_item_id, job_type)
 WHERE 
_per_job
    ON 
(kind, item_id, job_type)
 WHERE 
_per_other_item
    ON 
(kind, other_item_id)
 WHERE 
_per_item
    ON 
(kind, item_id)
 WHERE 
  id INTEGER PRIMARY KEY,
  kind TINYINT,
  item_id BLOB NULL,
  other_item_id BLOB NULL,
  job_type INTEGER NULL,
  field SMALLINT NULL,
  state TINYINT,
  retry_count SMALLINT,
  next_retry_date INTEGER,
  last_error_date INTEGER,
  last_error BLOB NULL
  forced expiration of %d throttles
   SET state = 
 WHERE state = 
  throttle %@: %@
 AND job_type = 
 AND other_item_id = 
   AND state != 
      VALUES (
no pending throttles
  schedule throttling handling in %{public}@s
cannot notify of throttle expiry in table %@: %@
  %ld throttles expired
throttle expired
[WARNING] 
  found %ld expired throttled throught the slow path
 WHERE rowID IN 
 ORDER BY next_retry_date
cannot rearm throttling scheduler %@: %@
 AND next_retry_date <= 
SELECT next_retry_date
  FROM 
 ORDER BY next_retry_date
 LIMIT 1
corrupted table 
1 ORDER BY item_id, other_item_id, kind, job_type
 OR (item_id IS NULL AND other_item_id IS NULL)
other_item_id = 
SELECT id
  FROM 
   AND next_retry_date > 
   AND priority >= 
 WHERE ((kind = 
        OR (kind = 
   AND state != 
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FileProviderDaemons_Sim/FileProvider-265/fssync/libfssync/implementations/file-system/persistence/SQLThrottler.swift
AND state != 
AND next_retry_date > 
AND priority >= 
th.item_id IS NULL AND 
th.other_item_id IS NULL
SELECT *
  FROM 
 as th
 WHERE
    th.state = 
    AND th.priority >= 
    AND (
         (th.kind = 
      OR (th.kind = 
 AND th.job_type = 
th.other_item_id = 
database
Unexpected waiting condition on job 
runIfPossible(_:)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FileProviderDaemons_Sim/FileProvider-265/fssync/libfssync/interfaces/file-tree/item/FileItemID.swift
reason
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FileProviderDaemons_Sim/FileProvider-265/fssync/libfssync/interfaces/job/Job.swift
to be implemented in sub-classes
 isStillInFileTree isRecursive reason 
to be implemented by sub-classes
_TtC9libfssync17SQLBackupManifest
SQL_BACKUP_MANIFEST_SCHEMA_VERSION
resourceValuesToFetch
SELECT new_file_id, new_gen_count
FROM 
WHERE file_id = 
SELECT new_doc_id
FROM 
WHERE doc_id = 
SELECT new_file_id
FROM 
Failed to open database %@: %@
Failed to set up pragmas %@: %@
Failed to close database %@: %@
Failed to create table %@: %@
  relative_path blob not null,
  file_id integer,
  doc_id integer,
  gen_count integer,
  is_directory integer,
  new_file_id integer,
  new_doc_id integer,
  new_gen_count integer
Creating indexes
Failed to create file_id_gen_count_index: %@
Failed to create doc_id_index: %@
CREATE INDEX IF NOT EXISTS doc_id_index ON 
CREATE INDEX IF NOT EXISTS file_id_gen_count_index ON 
(file_id, gen_count)
Populating new columns with base path: %@
Failed to populate new columns for %@: %@
Failed to populate new columns. fileReadNoSuchFile %@ does not exist.
Failed to populate new columns. fileNoSuchFile %@ does not exist.
Failed to populate new columns. ENOENT %@ does not exist.
Failed to get the gen count for %@
Updating %d %@ %d into database for %@
Failed to open %@: %@
SET new_file_id = 
    new_doc_id = 
    new_gen_count = 
WHERE relative_path = 
WHERE new_file_id IS NULL
Could not create a unique index %@: %@
Can't close database %@: %@
CREATE UNIQUE INDEX IF NOT EXISTS relative_path_index ON 
 (relative_path)
Can't insert into the database %@: %@
Failed to insert into %@: %@
  relative_path,
  file_id,
  doc_id,
  gen_count,
  is_directory,
  new_file_id,
  new_doc_id,
  new_gen_count
VALUES (
        NULL,
        NULL,
        NULL
side
throttle
deleteFinishedJobs
_scheduling_priority
_scheduling_timestamp
_type__scheduling_timestamp
_state_type__scheduling_ordering
(state, type, scheduling_priority DESC, scheduling_timestamp)
_state__scheduling_ordering
(state, scheduling_priority DESC, scheduling_timestamp)
_scheduling_priority ON jobs(scheduling_priority)
 ADD COLUMN scheduling_priority INTEGER NOT NULL DEFAULT 0
SELECT id, version
  FROM 
 WHERE version IS NOT NULL
  ADD COLUMN structural_version BLOB NULL
_type__scheduling_timestamp ON 
(state, type, scheduling_timestamp)
_scheduling_timestamp ON 
(state, scheduling_timestamp)
_has_pending ON 
(pending_reason)
  id INTEGER PRIMARY KEY,
  -- Keep track of the timestamp at which job has been scheduled
  -- in order to allow executing in scheduling order. Otherwise,
  -- we would execute them by id order, which means we would always
  -- run the same jobs if some get frequently rescheduled.
  scheduling_timestamp INTEGER,
  item_id BLOB,
  type TINYINT,
  version BLOB NULL,
  state TINYINT,
  state_conditions SMALLINT,
  state_error BLOB NULL,
  state_continuation BLOB NULL,
  reason BLOB NULL,
  pending_reason BLOB NULL
SQLDB: Fetch Jobs
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FileProviderDaemons_Sim/FileProvider-265/fssync/libfssync/implementations/file-system/persistence/SQLItemJobRegistry.swift
removed job type
not an ItemAsyncJob
SELECT id, scheduling_priority, scheduling_timestamp, pending_reason, item_id, type,
       reason, 
the query should have prevented this
persisting runnable job
WHERE item_id = 
AND state_conditions & 
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FileProviderDaemons_Sim/FileProvider-265/fssync/libfssync/implementations/file-system/persistence/AsyncJob+SQLCodable.swift
unsupported class
recovering running job %@
1 ORDER BY scheduling_priority DESC, scheduling_timestamp
SELECT rowID
  FROM 
       AND item_id = 
AND NOT EXISTS (
.scheduling_priority
ORDER BY scheduling_priority DESC, scheduling_timestamp
LIMIT 
AND state NOT IN 
      WHERE item_id = 
            AND type = 
       scheduling_timestamp = 
 WHERE item_id = 
UPDATE reconciliation_table
   SET last_change = PROPAGATION_DATE_CHANGED()
 WHERE 
       reason = pending_reason,
       pending_reason = NULL,
       scheduling_timestamp = 
       scheduling_priority = 
      WHERE id = 
SELECT id, pending_reason
  FROM 
   SET pending_reason = 
   SET reason = 
       reason = 
 (item_id, type, 
, reason,
                           scheduling_timestamp, scheduling_priority)
     VALUES (
SELECT id, state, reason, pending_reason
  FROM 
new job scheduled
reset()
  enumerating changes from token %@ on %@ for %@
  received nil token from the enumerator %@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FileProviderDaemons_Sim/FileProvider-265/fssync/fpfs/enumerators/MultiplexingEnumerator.swift
cannot encode change token
  enumerating changes from page %@ on %@
syncAnchor(knowing:completion:)
  transition %@ to change enumeration from %@
  fetching anchor for %@
_TtC9libfssyncP33_7F4FBB69DAA1D0B2DA22684CBB0F5CB316ProxyCancellable
cancellable
_TtC9libfssyncP33_7F4FBB69DAA1D0B2DA22684CBB0F5CB320ProxyOperationClient
client
_TtC9libfssync20FPFSServicerExtender
request
_TtC9libfssync21FPFSOperationServicer
@32@0:8@16@?24
extender
Request to delete items: %@
v8@?0
Succeeded deleting items: %@
Failed to delete items %@ with error %@
Request to delete item with ID: %@; recursively %@
com.apple.FileProvider/%@
Item %@ does not exist, deleting item with searchableID %@ from index %@
Succeeded deleting item with itemID %@, not wating on ingestion
Failed to delete item %@ with error %@
Succeeded ingesting deletion for item with itemID %@
Failed to force ingestion of item %@ with error %@
Succeeded deleting %@ from spotlight index.
Could not delete %@ from spotlight index: %@
v16@?0@"NSArray"8
v24@?0@"NSURL"8@"NSError"16
v24@?0@"NSArray"8@"NSError"16
fetchHierarchy(for:recursively:reply:)
fetching hierarchy from provider: %@ (recursive: %{bool}d)
fetching hierarchy from cache: %@ (recursive: %{bool}d)
FPFS servicer for 
libfssync.FPFSServicerExtender
libfssync.ProxyOperationClient
libfssync.ProxyCancellable
FPCancellable
FPOperationClient
v24@0:8@"<FPCancellable>"16
v40@0:8@"NSDictionary"16@"NSError"24@?<v@?>32
_TtC9libfssync16VFSStagedContext
handle
isDir
wrapped
_TtC9libfssyncP33_4832980660C328E96B083C662469F36526FPFileTreeLifetimeExtender
_TtC9libfssync10FPFileTree
coordinator
changeHandler
progressMonitor
_TtC9libfssyncP33_4832980660C328E96B083C662469F36523DummyEnumeratorObserver
com.apple.fssync.fpfiletree
invalidate()
v32@?0@"FPSandboxingURLWrapper"8@"FPItem"16@"NSError"24
i16@?0^{fpfs_item_handle=QQII*Q}8
v24@?0@"<FPXEnumerator><FPXPCAutomaticErrorProxy>"8@"NSError"16
inconsistent continuation type
  couldn't fetch root, so faking one: %@
FPFS enumeration of 
libfssync.FPFileTreeLifetimeExtender
_TtC9libfssyncP33_48B452DE321F44F46865C1107F5BBC8315DownloadContext
progress
requestor
observation
lastChangeDate
allowedDelay
expirationDate
expirationPolicy
_TtC9libfssync23DownloadProgressMonitor
progressPerItemID
  monitoring progress from %@: %@
monitorProgress(_:for:requestor:)
background-download-heartbeat-delay
com.apple.fileproviderd
download-heartbeat-delay
user-download-warning-delay
user-download-warning-stickiness-delay
dont-warn-user-of-slow-downloads
  cancelling download for %@ by user policy
  cancelling download for %@ because it is stuck at %f for %f (allowed: %f)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FileProviderDaemons_Sim/FileProvider-265/fssync/libfssync/implementations/file-system/tree/VFSItem.swift
.Trash-from-provider
.Trash-nonsystem
updateRootAfterDomainChange()
libfssync.FPDDomainFPFSBackend
  invalidating fpfs for 
dumpState(to:limitNumberOfItems:)
v24@?0@"FPItem"8@"NSError"16
Materialization
startProvidingItem(at:readingOptions:request:completionHandler:)
downloadItem(with:request:progress:completionHandler:)
evictItem(at:request:completionHandler:)
evictItem(with:request:completionHandler:)
url(for:creatingPlaceholderIfMissing:ignoreAlternateContentsURL:request:completionHandler:)
fakeFSEvent(at:)
enumerateMaterializedSet(fromSyncAnchor:completionHandler:)
currentMaterializedSetSyncAnchor(completionHandler:)
didChange(_:)
enumerate(with:lifetimeExtender:observer:completionHandler:)
fetchFSItems(forItemIdentifiers:materializingIfNeeded:request:completionHandler:)
decorate(_:completionHandler:)
nonEvictableSpace()
reimportItems(below:removeCachedItems:markItemDataless:completionHandler:)
materializedURL(for:completion:)
isItemDataless(for:completion:)
forceIngestion(for:completionHandler:)
 Forcing ingestion for item with ID %@
syncRead(block:)
Unable to force FS ingestion: %@
forceIngestion(at:completionHandler:)
pinItem(with:request:completionHandler:)
unpinItem(with:request:completionHandler:)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FileProviderDaemons_Sim/FileProvider-265/fssync/fpfs/FPDDomainFPFSBackend.swift
unhandled downloadPolicy 
[ASSERT] 
  %s:%d: %@
setDownloadPolicy(_:forItemWith:request:completionHandler:)
resolveProviderItemID(_:completionHandler:)
_TtC9libfssync20FPDDomainFPFSBackend
@24@0:8@16
B24@0:8^@16
domain
providerDomainID
nsDomain
pathsManager
__cachedURL
__fpfs
startupQueue
itemChangedQueue
workingSetChangedQueue
startStatus
didCreateRoot
itemsChangedSource
enumerationAnchorChangedSource
runningEnumerator
rootIsPinnedCache
rootURLs
T@"NSArray",N,R
@32@0:8@16^@24
v28@0:8@16B24
v40@0:8@16@24@?32
@48@0:8@16Q24@32@?40
v48@0:8@16@24@32@?40
@40@0:8@16@24@?32
v32@0:8@16@24
v48@0:8@16B24B28@32@?40
v24@0:8@16
v44@0:8@16B24@28@?36
v40@0:8@16B24B28@?32
@36@0:8@16B24^@28
v68@0:8@16Q24@32Q40B48@52@?60
v48@0:8Q16@24@32@?40
v48@0:8@16Q24@32@?40
B32@0:8@16@24
backendQueue
T@"OS_dispatch_queue",N,R
Decoration
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FileProviderDaemons_Sim/FileProvider-265/fssync/libfssync/interfaces/persistence/JobRegistry.swift
Type identifier resolution
document as a parent?
cannot decorate item: %@
  FPFS enumeration may have changed
notifying change on the working set for indexation
v16@?0@"NSError"8
notifying observer for %@
cannot init wharf: %@
wharf initiatlization failed: %@
garbageCollectDeletedItems(deleteBusyFiles:)
cannot open database at %@: %@
Unable to activate sync engine: %@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FileProviderDaemons_Sim/FileProvider-265/fssync/libfssync/utilities/Utilities.swift
informed provider about user visible root changes
Unable to communicate user visible root changes: %@
cannot initialize database error for domain %@, disabling the domain: %@
  handling database error for domain %@, restarting with a fresh database: %@
handleDatabaseError(db:error:)
  cannot initialize the database for domain %@, restarting with a fresh database: %@
disk is full, restarting
  Moving the fpfs db away %@
database removal failed %@
  Moving the fpfs wharf away %@
Can't unlink %@: %@
looking up VFS item for %@ reason %@
no vfsItemID found for item %@, reason %@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FileProviderDaemons_Sim/FileProvider-265/fssync/libfssync/interfaces/persistence/ReconciliationTable.swift
finished VFS item lookup for %@ reason %@: %@, %@
finished propagating to FP %@ reason %@: %@
finished post-propagation VFS lookup for %@ reason %@: %@, %@
finished propagating to FS %@ reason %@: %@
Request to modify fields %@ for %@ items 
Finished bulkItemChanges of %@ items
Request to modify fields %@ for item with ID %@
no vfsItemID found for item ID %@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FileProviderDaemons_Sim/FileProvider-265/fssync/libfssync/interfaces/persistence/Snapshot.swift
Request to materialize content of itemID %@ reason %@
Creating %@fault for itemID %@ reason %@ iteration %lld
Recursion too deep for createFault:forfpItemID: itemID %@
create fault completed with vfsItem %@ and error %@ reason %@
materializeContent(for:reconcileItem:downloadContentOnlyIfDirectory:reason:progress:completionHandler:)
requestMaterialization completed for vfsItemID %@ with error %@ 
requestMaterialization(%@) failed for vfsItemID: %@
requestMaterialization(%@) post-materialization lookup returned an error %@
requestMaterialization(%@) post-materialization lookup succeeded
requestMaterialization(%@) post-materialization lookup returned a dataless item
Replacing filename %@ with %@
no vfsItemID found for original parent of item %@
Replacing parentID %@ with %@
Waiting for propagation of root to the FP reason %@
Root propagated, retry lookup reason %@
Item cannot be found on disk, looking for parent for %@ reason %@
Found item on disk, but item is not reconciled yet %@, reason %@
Found item on disk, but item is not accessible yet %@, reason %@
Found parent %@, reconcile: %{bool}d reason %@
Parent item must be imported, materializing %@ reason %@
Parent item is dataless, materializing %@ reason %@
Parent item is not dataless, lookup and propagate %@ reason %@
createFault(for:reconcileItem:reason:progress:iteration:completionHandler:)
Parent is materialized, lookup %@ again reason %@
Error retrieving item state item %@; error %@
Error updating item %@ error %@
Finished updating %@ for item %@; d: %@
no vfsItem found for item ID %@
no vfsItem found for item ID %@: %@
ingestFromCacheItem(with:requestedFields:request:completionHandler:)
 Forcing ingestion for url %@
 Failed force ingestion of item with url %@ with error: %@
 Failed force ingestion of item with ID %@ with error: %@
 Finished force ingestion of item with ID %@
createItemBased(onTemplate:fields:urlWrapper:options:bounceOnCollision:request:completionHandler:)
  Going to create an item with template %@ bounceOnCollision %@ filename %@
Creation of item that is not a folder/directory not supported
Bounce on collision during creation not supported
 Making directory for itemID %@ at url %@
 Forcing ingestion for existing item at %@
materializedURL vfsItem with ID %@ is dataless
[WARNING] 
  reimporting below 
reimportEverything(removingCachedItems:markItemDataless:fpfs:completionHandler:)
can't mark the root dataless: %@
v24@?0@"FPDDomain"8@"NSError"16
item is not in our database
job unexpectedly changed side
[WARNING] 
  cannot reimport dataless item, dropping the database
[WARNING] 
  vfsItem is not stable, dropping the database
[WARNING] 
  item is not stable, dropping the database
[WARNING] 
  reimporting a folder, dropping the database
[WARNING] 
  reimporting the root item, dropping the database
Unable to compute out-of-sync / pinned volume : %@
Request to enumerate with settings %@
v24@?0@"<FPXEnumerator>"8@"NSError"16
fpdEnumerate(with:lifetimeExtender:observer:completionHandler:)
  registering enumerator %@
  new enumerator %@
notifying %@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FileProviderDaemons_Sim/FileProvider-265/fssync/libfssync/implementations/file-provider/FPFileTree.swift
resolving URL for %@ for %@
non dataless VFSItem found for url %@, returning early from coordination
item(for:request:completionHandler:)
no vfs item for %@
sync engine state:
v16@?0@"NSURL"8
cannot get coordination to %@ %@: %@
%@ path %@
%@ of %@ failed: %@
removing support path %@
removal of %@ failed: %@
deleting files for non-invalided domain
starting FPFS for domain %@
should reattempt starting FPFS for domain %@
failed to start FPFS for domain % after several attempts
failed to start FPFS for domain %@
registering xpc activities
OS_dispatch_queue
item-changed-queue
working-set-changed-queue
: domain-fpfsbackend
v24@0:8@?<v@?@"NSData"@"NSError">16
v32@0:8@"NSData"16@?<v@?@"NSArray"@"NSData"@"NSData"@"NSError">24
v32@0:8@"NSData"16@?<v@?@"NSArray"@"NSArray"B@"NSData"@"NSError">24
v24@0:8@?<v@?>16
FPDDomainBackend
@24@0:8@"FPDDomain"16
@"NSArray"16@0:8
@"OS_dispatch_queue"16@0:8
B24@0:8@"NSURL"16
@"NSURL"32@0:8@"NSURL"16^@24
v40@0:8@"FPItemID"16@"FPDRequest"24@?<v@?@"FPItem"@"NSError">32
v40@0:8@"NSURL"16@"FPDRequest"24@?<v@?@"FPItem"@"NSError">32
v40@0:8@"NSURL"16@"FPDRequest"24@?<v@?@"FPItemID"@"NSError">32
v44@0:8@"NSArray"16B24@"FPDRequest"28@?<v@?@"NSDictionary"@"NSError">36
@"NSProgress"48@0:8@"NSURL"16Q24@"FPDRequest"32@?<v@?@"NSError">40
@"NSProgress"40@0:8@"NSURL"16@"FPDRequest"24@?<v@?@"FPItemID"@"NSError">32
v40@0:8@"FPItemID"16@"FPDRequest"24@?<v@?@"NSError">32
v68@0:8@"FPItem"16Q24@"FPSandboxingURLWrapper"32Q40B48@"FPDRequest"52@?<v@?@"FPItem"@"NSError">60
v32@0:8@"NSURL"16@"FPDRequest"24
v48@0:8@"FPItemID"16B24B28@"FPDRequest"32@?<v@?@"NSError"@"FPSandboxingURLWrapper"@"FPSandboxingURLWrapper">40
v28@0:8@"FPCTLTermDumper"16B24
v24@0:8@?<v@?@"NSData">16
v48@0:8@"FPExtensionEnumerationSettings"16@"<FPDLifetimeExtender>"24@"<FPXEnumeratorObserver>"32@?<v@?@"<FPXEnumerator>"@"NSError">40
v48@0:8@"NSArray"16@"NSURL"24@"FPDRequest"32@?<v@?@"NSDictionary"@"NSError">40
v40@0:8@"FPItemID"16B24B28@?<v@?@"NSError">32
@"FPDDomainIndexer"36@0:8@"FPDExtension"16B24^@28
v32@0:8@"FPDRequest"16@?<v@?@"<FPXOperationService>"@"NSXPCListenerEndpoint"@"NSError">24
v32@0:8@"FPItemID"16@?<v@?@"FPItemID"@"NSError">24
v24@0:8@"NSURL"16
v32@0:8@"NSArray"16@?<v@?@"NSArray">24
@"NSURL"24@0:8@"FPItemID"16
v32@0:8@"NSURL"16@?<v@?@"FPItem"@"NSError">24
v32@0:8@"FPItemID"16@?<v@?@"FPItem"@"NSError">24
v48@0:8@"FPItemID"16@"FPDRequest"24@"NSProgress"32@?<v@?@"NSURL"@"NSError">40
v48@0:8Q16@"FPItemID"24@"FPDRequest"32@?<v@?@"NSError">40
v24@0:8@"FPItemID"16
v48@0:8@"FPItemID"16Q24@"FPDRequest"32@?<v@?@"NSError">40
FPXPCAutomaticErrorProxy
FPXVendor
v36@0:8@16@24B32
v40@0:8@16Q24@?32
v64@0:8@16@24@32@40@48@?56
@48@0:8@16@24@32@?40
@64@0:8@16@24@32@40@48@?56
v64@0:8@16@24Q32@40Q48@?56
v36@0:8@"NSFileProviderDomain"16@"NSDictionary"24B32
v32@0:8@"NSURL"16@?<v@?@"NSURL"@"NSError">24
v40@0:8@"NSURL"16Q24@?<v@?@"NSError">32
v32@0:8@"NSURL"16@?<v@?@"FPItemID"@"NSError">24
v32@0:8@"NSURL"16@?<v@?@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSError">24
v32@0:8@"FPItemID"16@?<v@?@"NSXPCListenerEndpoint"@"NSArray"@"NSError">24
v24@0:8@?<v@?@"NSXPCListenerEndpoint"@"NSError">16
v24@0:8@?<v@?@"NSError">16
v24@0:8@?<v@?@"NSArray"@"NSError">16
v40@0:8@"NSArray"16@"FPItemID"24@?<v@?@"NSDictionary"@"NSError">32
v32@0:8@"FPItemID"16@?<v@?@"NSError">24
v40@0:8@"FPItemID"16B24B28@?<v@?@"FPSandboxingURLWrapper"@"FPSandboxingURLWrapper"@"NSError">32
v40@0:8@"FPSandboxingURLWrapper"16@"FPItemID"24@?<v@?@"NSError">32
v40@0:8@"NSArray"16@"NSString"24@?<v@?@"NSError">32
v40@0:8@"NSDate"16@"NSString"24@?<v@?@"NSError">32
v40@0:8@"FPCTLTermDumper"16@"NSString"24@?<v@?@"NSError">32
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v64@0:8@"NSString"16@"NSData"24@"NSData"32@"NSArray"40@"NSArray"48@?<v@?@"NSError">56
v32@0:8@"NSString"16@?<v@?@"NSData"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSError">24
v40@0:8@"NSString"16@"NSFileHandle"24@?<v@?@"NSError">32
v40@0:8@"NSString"16@"FPSandboxingURLWrapper"24@?<v@?@"NSError">32
@"NSProgress"48@0:8@"FPItemID"16@"NSFileProviderItemVersion"24@"NSFileProviderRequest"32@?<v@?@"FPSandboxingURLWrapper"@"FPItem"@"NSError">40
@"NSProgress"64@0:8@"FPSandboxingURLWrapper"16@"FPItemID"24@"NSFileProviderItemVersion"32@"NSFileProviderItemVersion"40@"NSFileProviderRequest"48@?<v@?@"FPSandboxingURLWrapper"@"FPItem"@"NSError">56
v64@0:8@"FPItem"16@"NSFileProviderItemVersion"24Q32@"FPSandboxingURLWrapper"40Q48@?<v@?@"FPItem"@"NSError">56
NSObject
FPProviderDomainAccessControl
B32@0:8@"NSString"16@"NSString"24
FPXOperationService
v56@0:8@16@24{CGSize=dd}32@?48
v48@0:8@16@24Q32@?40
v44@0:8@16Q24B32@?36
v60@0:8@16Q24@32Q40B48@?52
v36@0:8@16B24@?28
@40@0:8@16Q24@?32
v56@0:8@"<FPOperationClient>"16@"NSArray"24{CGSize=dd}32@?<v@?@"NSError">48
v40@0:8@"FPItemID"16@"FPItemID"24@?<v@?@"NSArray">32
v48@0:8@"NSArray"16@"NSArray"24Q32@?<v@?@"NSError">40
v44@0:8@"FPItem"16Q24B32@?<v@?@"FPItem"@"NSError">36
v40@0:8@"NSArray"16Q24@?<v@?@"NSDictionary"@"NSDictionary">32
v60@0:8@"FPItem"16Q24@"FPSandboxingURLWrapper"32Q40B48@?<v@?@"FPItem"@"NSError">52
v36@0:8@"FPItemID"16B24@?<v@?@"NSArray"@"NSError">28
v48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?@"FPItem"@"NSError">40
@"NSProgress"32@0:8@"FPItemID"16@?<v@?@"NSURL"@"NSError">24
@"NSProgress"40@0:8@"NSString"16Q24@?<v@?@"NSError">32
@"NSProgress"48@0:8@"NSString"16@"NSArray"24@"NSString"32@?<v@?@"NSError">40
v40@0:8@"NSError"16Q24@?<v@?@"NSError">32
v48@0:8@"NSString"16@"NSArray"24@"FPItem"32@?<v@?@"NSArray">40
FPXVendorObservation
v48@0:8@"FPExtensionEnumerationSettings"16@"<FPXEnumeratorObserver>"24@"NSFileProviderRequest"32@?<v@?@"<FPXEnumerator>"@"NSError">40
_TtC9libfssync8JobLimit
runningJobs
currentJobsLimit
category
softJobsLimit
hardJobsLimit
_TtC9libfssync7JobLock
allowedTreeEffectType
_TtC9libfssync19PersistenceCounters
jobsWaitingForPersistence
jobsNeedingFlushRunning
jobsNeedingFlushWaitingForFlush
isStarving
reconciliationTable
jobRegistry
snapshotA
snapshotB
syncState
Fatal error
materialization failed
operation cancelled
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FileProviderDaemons_Sim/FileProvider-265/fssync/libfssync/interfaces/file-tree/types/FileTreeError.swift
unknown error decoded
 at 
 filename below 
filename below 
expected received 
item type mismatch
structuralVersion
requestedContentVersion
availableContentVersion
requestedStructuralVersion
availableStructuralVersion
expectedContentVersion
currentContentVersion
expectedStructuralVersion
currentStructuralVersion
_TtC9libfssync11TaskTracker
tracker
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FileProviderDaemons_Sim/FileProvider-265/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift
unsupported type
B16@?0@"PQLConnection"8
itemID
propagatedID
propagatedVersion
propagatedState
originalDiffs
requestedState
actualItem
error
 reason 
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FileProviderDaemons_Sim/FileProvider-265/fssync/libfssync/sync-logic/Reconciliation.swift
it's suspicious that we already have reconciliations and yet we're auto-generating
Unable to infer reconciliation mutations from snapshot mutation
conflict, propagating from FS
creation on both sides is an impossible state
oldItem newItem diffs reason 
  isStillInFileTree isRecursive reason 
from mayAlreadyExist reason 
missing case for (
 for reason 
 foundByDiskImport missingChildrenMetadata missingFileContent reason 
item reason foundByDiskImport 
changeForA changeForB jobsForA jobsForB 
item has been deleted on FS
 inParent 
 error 
Can't get a collision in a delete
Expecting an item for reconciliation: 
reconcile-after-propagation
reconcile-children
max number of items reached
too deep - stopping dump
com.apple.trash.put-back.fpfs-parent-id#PS
com.apple.fpfs.fileid
B16@?0^{fpfs_tag=*i}8
status
com.apple.fileproviderd.disk-import
cannot restart sync: %@
has pending children
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FileProviderDaemons_Sim/FileProvider-265/fssync/libfssync/interfaces/job/AsyncJob.swift
cannot add new triggers on non-waiting job
disk-import-finished
 fromParent 
mark-disk-import-done
unfault-directory-and-children
continue-disk-import
execute(on:)
select-next-disk-import
update-disk-import-status
Error while trying to log object: %{errno}d
logging with variadic args = %d > 9 is not implemented
otherItemID
capturedContent
otherVersion
stagedContext
originalVersion
diffs
isRecursive
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FileProviderDaemons_Sim/FileProvider-265/fssync/libfssync/sync-logic/Propagation.swift
only the root is allowed not to have a baseVersion (when we scan it for the first time)
file providers don't support setting the bit: 
  trying to propagate content from a dataless item %@
deleting unreconcilied item
should not happen
generic propagation status
itemChange waitConditions 
item is already being propagated
parent not propagated
parent item has not been created yet
item should already be created
cannot fetch content needed for item creation
propagation check
item must be changed to a dataless directory before propagation
item is being merged
creation job is throttled
parent is being evicted
parent is unknown
parent is not reconciled
parent is dataless and not being materialized
destination is not importing yet, current status: 
parent is not importing yet, current status: 
nothing to propagate for the item because it is in disk import mode: 
unhandled wait condition
update propagation status
not accessible, dropCapturedContent is already rejected
moving to a folder that hasn't been propagated yet
throttling propagation of some fields
item has not been reconciled yet
deletion propagation status
directory is not empty
should delete the parent item
deletion is throttled
delayPropagation(reason:
missingChildrenEviction(
missingChildrenMetadata(<
contentNotNeeded(
missingFileContent(<
 staged-context:
_TtC9libfssync18InheritFromCodable
Has Runnable Jobs
error while processing jobs: %@
not processing more jobs since we were cancelled
syncBatch(updateBlock:)
activate()
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FileProviderDaemons_Sim/FileProvider-265/fssync/libfssync/interfaces/file-tree/FileTree.swift
  processing 
[WARNING] %{public}@
FIXME!!!DROP ALL ITEMS IS NOT IMPLEMENTED!!!FIXME
  updating %@ to %@
  discarded %@
  already known %@
%{public}@
 Request to propagate item with ID 
propagation to FP waiter of 
 Failed to persist ingestion itemID %@: %@
propagation to FS waiter of 
materialization waiter for 
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FileProviderDaemons_Sim/FileProvider-265/fssync/libfssync/sync-logic/SyncEngine.swift
can't start materialization: 
eviction waiter for 
can't evict content: 
lock
isNotFull
isNotEmpty
consumerCount
consumerWaiting
maxCount
totalCount
completionHandler
producersAreConsumers
areProducersDone
isDone
_TtC9libfssync14DiskEnumerator
v52@0:8@16@24Q32Q40I48
v32@0:8@16q24
backend
fsSubscription
selfItem
previousAnchor
currentAnchor
changedItemsByID
deletedItemsIDs
  requested to reset stream
  reset stream for %@
  notify observer
enumerateChanges(fromToken:reply:)
enumerating below 
Disk Enumerator: enumerating from disk
Disk Enumerator: lookup item
Disk Enumerator: scan directory
%@: folder changed during enumeration, restart from scratch
Disk Enumerator: transform disk item to FPItem
com.apple.FileProvider
currentSyncAnchor(completion:)
subscription(_:handleResetWith:)
subscription(_:handleEventAtPath:targetItemID:eventID:flags:)
  processing disk event at 
  fileID change %@ -> %@
  path change ignored
  path change ?? -> <nil> (%@ vs %@)
  path change %@ -> %@
FSChangeSubscriptionDelegate
v52@0:8@"FSChangeSubscription"16@"NSString"24Q32Q40I48
v32@0:8@"FSChangeSubscription"16q24
v24@0:8@"FSChangeSubscription"16
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FileProviderDaemons_Sim/FileProvider-265/fssync/libfssync/implementations/file-system/tree/VFSFileTree+Lookup.swift
fileID of the root changed
  The item was known as a package, but is now a directory with the same fileID(%@)
  The item was known as a directory, but is now a package with the same fileID(%@)
  The item is the root, but is now a package with the same fileID(%@)
B16@?0r*8
i16@?0^{fpfs_fileattrs={fpfs_item_handle=QQII*Q}{fpfs_metadata=ib1b1b1b1b1b1b1Sq{timespec=qq}{timespec=qq}{timespec=qq}Q{fpfs_tag_data=^vQi}Iq*^{fpfs_xattr}}Q[0c]}8
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FileProviderDaemons_Sim/FileProvider-265/fssync/libfssync/fpfs_util/fpfs_open.swift
path should not be nil
[WARNING] 
 Significantly too slow SQL statement: %s
 Possible slow statement with%s%s%s on %s:
  binds:    %d
  changes:  %lld
  vm steps: %d (max: %lu)
  %s
 temporary index
 non-indexed sort
 Possible slow statement on %@:
  binds:    %d
  columns:  %d
  rows:     %ld
  vm steps: %d (max: %lu)
  warning: %s%s%s
  %@
 Possible slow statement on %s:
  binds:    %d
  changes:  %lld
  vm steps: %d (max: %lu)
  warning: %s%s%s
  %@
[can't get query plan]
explain query plan 
_TtC9libfssync23FPFSExtensionEnumerator
v16@0:8
v32@0:8@16@?24
fpxEnumerator
enumeratedItemIdentifier
enumeratorHasBeenInvalidated(_:)
libfssync.FPFSExtensionEnumerator
_TtC9libfssync23FPFileTreeChangeHandler
v64@0:8@16@24@32@40@48@56
tree
queue
lastReceivedUpdate
libfssync.FPFileTreeChangeHandler
domain(_:didGetNotifiedOfChangedItems:deletedIDs:belowItemIdentifier:pageToken:anchor:)
domain(_:didIndexOneBatchWithError:updatedItems:deletedIDs:anchor:anchorPersisted:)
couldn't enumerate more changes: 
[ERROR] %{public}@
working set sync anchor expired
FPDDomainIndexChangeDelegate
v64@0:8@"FPDDomain"16@"NSError"24@"NSArray"32@"NSArray"40@"NSData"48@?<v@?@"NSError">56
v64@0:8@"FPDDomain"16@"NSArray"24@"NSArray"32@"NSString"40@"NSData"48@"NSData"56
fileTreeChangesHandler
itemID item shouldFetch 
should fetch updated item 
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FileProviderDaemons_Sim/FileProvider-265/fssync/libfssync/interfaces/file-tree/FileTreeWriter.swift
content version 
uuid
onError
onNextDurableFlush
isUnsafe
enumerationAnchorChanged
onEnumerationAnchorChanged
lastPropagationDateChanged
onLastPropagationDateChanged
itemWithPinningChange
v16@?0@"PQLConnection"8
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FileProviderDaemons_Sim/FileProvider-265/fssync/libfssync/implementations/file-system/persistence/SQLDatabase.swift
performing a fcntl(F_BARRIERFSYNC)
[DEBUG] %{public}@
can't issue barrier for 
can't get file descriptor for 
opening database %{public}@ at %{public}@
v32@?0@"PQLConnection"8^v16q24
init(url:fsTree:fpTree:options:onError:)
database is ready
SQLDB: React to trigger
Did Flush
db was flushed (commit)
%llx 
SQLDB: Batch
batch received after db has been closed will be ignored
v28@?0^v8i16^^v20
PROPAGATION_DATE_CHANGED
SCHEDULE_BACKGROUND_DOWNLOAD
[WARNING] unsupported database version %{public}@
upgrading database %{public}@ -> %{public}@
cannot setup schema for %{public}@: %{public}@
can't upgrade DB from %{public}@ -> %{public}@: %{public}@
  looking for blocked imports
  found items in disk import while watching children on FP
DELETE FROM fs_item_jobs
 WHERE type = 
SELECT fs_id
  FROM reconciliation_table
INNER JOIN fs_snapshot AS snap ON (snap.id = rt.fs_id AND snap.metadata_kind = 
 WHERE fs_id IS NOT NULL
   AND fp_id IS NOT NULL
   AND fs_children_status = 
   AND fs_reset_scan_status IS NULL
SELECT fp_id
  FROM reconciliation_table
 WHERE fp_id IS NOT NULL AND fs_id IS NOT NULL
   AND fs_reset_scan_status = 
   AND fp_children_status = 
  removing delete garbage from tree for %@
SELECT item_id
  FROM fs_item_jobs
 WHERE type = 
  forcing reconciliation of non-propagated item %@
SELECT fp_id
  FROM reconciliation_table
 WHERE fp_id IS NOT NULL AND fs_id IS NULL
   AND fp_updated_fields & 
  fixing watch status on directory %@ <-> %@
SELECT fs_id, fp_id, fs_reset_scan_status, fs_children_status, fp_children_status
  FROM reconciliation_table AS rt
 WHERE rt.fs_id IS NOT NULL
   AND rt.fp_id IS NOT NULL
   AND rt.fs_reset_scan_status IN (
                                   
   AND (rt.fs_children_status = 
        OR rt.fp_children_status = 
  fixing watch status on directory %@
SELECT fp_id
  FROM reconciliation_table AS rt
 INNER JOIN fs_snapshot AS snap ON (snap.id = rt.fs_id)
 WHERE rt.fp_id IS NOT NULL
   AND rt.fp_children_status = 
   AND snap.metadata_kind = 
   AND snap.metadata_is_dataless = 0
  found %@ in import:%@, make sure it is not blocked
SELECT fs_id, fs_reset_scan_status
  FROM reconciliation_table
 WHERE fs_id IS NOT NULL
   AND fs_reset_scan_status IN (
                                
  found item %@ not bound and not propagating
SELECT fs_id
  FROM reconciliation_table
 WHERE fp_id IS NULL AND fs_updated_fields = 0 AND fs_id IS NOT NULL AND fs_needs_delete = 0
  found item %@ waiting for parent import, parent %@ is %@dataless
SELECT snap.id, snap.parent_id, parent_snap.metadata_is_dataless
  FROM fs_snapshot AS snap
 INNER JOIN fs_snapshot AS parent_snap ON parent_snap.id = snap.parent_id
 INNER JOIN reconciliation_table AS rt ON rt.fs_id = snap.id
 INNER JOIN reconciliation_table AS rt2 ON rt2.fs_id = snap.parent_id
 WHERE rt.fs_reset_scan_status = 
   AND rt2.fs_reset_scan_status IS NULL
PRAGMA cache_spill = 
PRAGMA cache_size = 
PRAGMA recursive_triggers = true
+ database version: 
Wait for next durable flush
SQLDB: Force flush of database
unlockedValue
  ignoring change on %@ for %@
currentPosition
completed
rootFD
limit
_TtC9libfssync18VFSDirectoryLister
lookupCache
pkgValidate
_TtC9libfssync18URLDirectoryLister
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FileProviderDaemons_Sim/FileProvider-265/fssync/libfssync/implementations/file-system/tree/VFSDirectoryLister.swift
should be implemented by subclass
positionDirectoryID
positionGenerationCount
positionReadCount
positionUnreadCount
inputs
outputs
_TtC9libfssync12StringDumper
string
indent
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FileProviderDaemons_Sim/FileProvider-265/fssync/libfssync/sync-logic/Database+JobExecution.swift
scheduling a job that is not runnable
  executing 
asynchronous execution
Async Job execution
  job locked out of execution %{public}@
job executing for more than 5 minutes: %{public}@
 has been increased, job still executing after 5 minutes
SQLDB: Synchronous Job
  persist job: %{public}@
  done executing %{public}@: %{public}@
SQLDB: Synchronous Job: Persist & Reconcile
Persist & Reconcile: Persist Mutations
Persist & Reconcile: Persist Jobs
jobs are not allowed to mutate
  done executing 
%llx %{public}@
Async Job: Follow-up jobs
end of execution of job on category 
  done executing 
_TtC9libfssyncP33_9C12ACE4A70BB17180CF0A39192378DD21PaginatedContinuation
position
 ADD COLUMN metadata_before_bounce_filename TEXT DEFAULT NULL
_vfs_fileid_idx ON 
   SET metadata_physical_size = 0
 WHERE metadata_kind IN (
) AND metadata_is_dataless
_vfs_not_evictable_idx
          ON 
(metadata_is_evictable)
       WHERE NOT metadata_is_evictable
 ADD COLUMN decoration_user_info BLOB
 ADD COLUMN decoration_item_decoration BLOB
 ADD COLUMN decoration_has_unresolved_conflicts BOOL
 ADD COLUMN decoration_display_name TEXT
 ADD COLUMN decoration_container_display_name TEXT
 ADD COLUMN decoration_cloud_container_identifier TEXT
 ADD COLUMN decoration_app_container_bundle_identifier TEXT
 ADD COLUMN decoration_is_container_pristine BOOL
 ADD COLUMN decoration_is_container BOOL
 ADD COLUMN decoration_sharing_permissions TEXT
 ADD COLUMN decoration_last_edited_by_current_user BOOL
 ADD COLUMN decoration_preformatted_most_recent_editor_name TEXT
 ADD COLUMN decoration_preformatted_owner_name TEXT
 ADD COLUMN decoration_is_shared_by_current_user BOOL
 ADD COLUMN decoration_is_top_level_shared_item BOOL
 ADD COLUMN decoration_is_shared BOOL
 ADD COLUMN decoration_is_excluded_from_sync BOOL
 ADD COLUMN decoration_downloading_error BLOB
 ADD COLUMN decoration_uploading_error BLOB
 ADD COLUMN decoration_is_uploaded BOOL
 ADD COLUMN decoration_is_uploading BOOL
 ADD COLUMN decoration_capabilities INT
   SET recursive_non_evictable_count = 1
 WHERE (metadata_is_dataless == 0 AND NOT recursive_non_evictable_count) AND metadata_kind != 
CREATE TRIGGER "recursive_evictability/
/recursive_update"
 AFTER UPDATE ON 
  WHEN new.metadata_kind != 
BEGIN
  -- Update the count for the parent, supporting reparenting cases
  UPDATE 
     SET recursive_non_evictable_count = recursive_non_evictable_count
                                       - old.recursive_non_evictable_count
                                       + new.recursive_non_evictable_count
   WHERE id = old.parent_id AND id != old.id
     AND old.recursive_non_evictable_count != new.recursive_non_evictable_count;
  -- If the item was reparented, delete from the old parent
  UPDATE 
     SET recursive_non_evictable_count = recursive_non_evictable_count - new.recursive_non_evictable_count
   WHERE id = old.parent_id AND id != new.id AND old.parent_id != new.parent_id;
  -- If the item was reparented, add to the new parent
  UPDATE 
     SET recursive_non_evictable_count = recursive_non_evictable_count + new.recursive_non_evictable_count
   WHERE id = new.parent_id AND id != new.id AND old.parent_id != new.parent_id;
/local_update"
 AFTER UPDATE OF metadata_is_dataless, metadata_is_evictable ON 
   AND (new.metadata_is_dataless == 0 AND NOT new.metadata_is_evictable)
       != (old.metadata_is_dataless == 0 AND NOT old.metadata_is_evictable)
BEGIN
  UPDATE 
     SET recursive_non_evictable_count = CASE WHEN (new.metadata_is_dataless == 0 AND NOT new.metadata_is_evictable)
                                              THEN recursive_non_evictable_count + 1
                                              ELSE recursive_non_evictable_count - 1
                                          END
   WHERE id = new.id;
/delete"
 AFTER DELETE ON 
BEGIN
  UPDATE 
     SET recursive_non_evictable_count = recursive_non_evictable_count - old.recursive_non_evictable_count
   WHERE id = old.parent_id;
/insert"
 AFTER INSERT ON 
  WHEN (new.metadata_is_dataless == 0 AND NOT new.metadata_is_evictable) AND new.metadata_kind != 
     SET recursive_non_evictable_count = 1
   WHERE id = new.id;
 ADD COLUMN recursive_non_evictable_count UNSIGNED INT NOT NULL DEFAULT 0
CREATE TRIGGER "
/update_recursive_pinning_on_item_changed"
 AFTER UPDATE ON 
     SET metadata_is_in_pinned_folder = (metadata_is_pinned != 0
                                         OR EXISTS (SELECT id
                                                      FROM 
                                                     WHERE id = new.parent_id
                                                       AND id != new.id
                                                       AND metadata_is_in_pinned_folder != 0))
   WHERE id = new.id
     AND (old.metadata_is_pinned != new.metadata_is_pinned
          OR old.parent_id != new.parent_id);
/update_pinned_insert"
 AFTER INSERT ON 
                                                     WHERE id = new.parent_id
                                                       AND id != new.id
                                                       AND metadata_is_in_pinned_folder != 0))
  WHERE id = new.id;
/update_recursive_pinning_on_item_changed"
/update_pinned_insert"
/update_recursive_pinning_on_pinning_changed"
  AFTER UPDATE OF metadata_is_in_pinned_folder ON 
          WHEN old.metadata_is_in_pinned_folder != new.metadata_is_in_pinned_folder
BEGIN
  UPDATE 
     SET metadata_is_in_pinned_folder = new.metadata_is_in_pinned_folder
   WHERE parent_id = new.id AND metadata_is_pinned = 0;
  SELECT PINNING_CHANGED(new.id, 
/update_recursive_pinning_on_item_changed"
  AFTER UPDATE ON 
                                                     WHERE id = new.parent_id
                                                       AND metadata_is_in_pinned_folder != 0))
   WHERE id = new.id
     AND (old.metadata_is_pinned != new.metadata_is_pinned
          OR old.parent_id != new.parent_id);
/update_pinned_insert"
  AFTER INSERT ON 
                                                     WHERE id = new.parent_id
                                                       AND metadata_is_in_pinned_folder != 0))
   WHERE id = new.id;
 ADD COLUMN metadata_is_in_pinned_folder BOOL NOT NULL DEFAULT 0
 ADD COLUMN metadata_is_pinned BOOL NOT NULL DEFAULT 0
 ADD COLUMN metadata_is_evictable BOOL
ADD COLUMN metadata_trash_put_back BLOB NULL
   SET recursive_dataless_count = 1
 WHERE metadata_is_dataless
/update_recursive_dataless_count_recursive_update"
  AFTER UPDATE ON 
     SET recursive_dataless_count = recursive_dataless_count - old.recursive_dataless_count + new.recursive_dataless_count
   WHERE id = old.parent_id AND id != old.id
     AND old.recursive_dataless_count != new.recursive_dataless_count;
  -- If the item was reparented, delete from the old parent
  UPDATE 
     SET recursive_dataless_count = recursive_dataless_count - new.recursive_dataless_count
   WHERE id = old.parent_id AND id != new.id AND old.parent_id != new.parent_id;
  -- If the item was reparented, add to the new parent
  UPDATE 
     SET recursive_dataless_count = recursive_dataless_count + new.recursive_dataless_count
   WHERE id = new.parent_id AND id != new.id AND old.parent_id != new.parent_id;
/update_recursive_dataless_count_local_update"
  AFTER UPDATE OF metadata_is_dataless ON 
          WHEN old.metadata_is_dataless != new.metadata_is_dataless
BEGIN
  -- Update the recursive_dataless_count for the current item
  UPDATE 
     SET recursive_dataless_count = CASE WHEN new.metadata_is_dataless THEN recursive_dataless_count + 1
                                         ELSE recursive_dataless_count - 1
                                         END
   WHERE id = new.id AND new.metadata_is_dataless != old.metadata_is_dataless;
/update_recursive_dataless_count_delete"
  AFTER DELETE ON 
     SET recursive_dataless_count = recursive_dataless_count - old.recursive_dataless_count
   WHERE id = old.parent_id;
/update_recursive_dataless_count_insert"
  AFTER INSERT ON 
          WHEN new.metadata_is_dataless
BEGIN
  UPDATE 
     SET recursive_dataless_count = 1
   WHERE id = new.id;
 ADD COLUMN recursive_dataless_count UNSIGNED INT NOT NULL DEFAULT 0
   SET metadata_physical_size = metadata_size
 WHERE metadata_kind = 
       AND
       metadata_is_dataless = 0
 ADD COLUMN metadata_physical_size UNSIGNED BIG INT NULL
   SET metadata_tag_data = 
SELECT id, metadata_tag_data
  FROM 
 WHERE metadata_tag_data IS NOT NULL
/update_children_insert"
AFTER INSERT ON 
 WHEN new.id != new.parent_id
BEGIN
  UPDATE 
 SET children_count = children_count + 1 WHERE id = new.parent_id;
/update_children_delete"
AFTER DELETE ON 
 WHEN old.id != old.parent_id
BEGIN
  UPDATE 
 SET children_count = children_count - 1 WHERE id = old.parent_id;
/update_children_update"
AFTER UPDATE OF parent_id ON 
WHEN old.parent_id != new.parent_id
BEGIN
  UPDATE 
 SET children_count = children_count - 1 WHERE id = old.parent_id;
  UPDATE 
 SET children_count = (
  SELECT COUNT(*) FROM 
 AS other
  WHERE other.parent_id = 
.id AND other.parent_id != other.id
 ADD COLUMN children_count INT NOT NULL DEFAULT 0
_parent_id__filename_idx ON 
(parent_id, filename)
   SET structural_version = 
 WHERE rowID = 
SELECT rowID, version
  FROM 
  ADD COLUMN structural_version BLOB
 ADD COLUMN metadata_is_locked BOOL
 ADD COLUMN metadata_extended_attributes BLOB NULL
 ADD COLUMN metadata_child_item_count INT NULL
 ADD COLUMN metadata_extension_hidden BOOL
 ADD COLUMN metadata_is_hidden BOOL
  id BLOB PRIMARY KEY,
  parent_id BLOB REFERENCES 
(id),
  filename TEXT,
  vfs_fileid INT,
  vfs_generationid INT,
  metadata_kind TINYINT,
  metadata_is_dataless BOOL,
  metadata_is_package BOOL,
  metadata_size UNSIGNED BIG INT,
  metadata_posix_permissions SMALLINT,
  metadata_creation_date BIGINT NULL,
  metadata_content_modification_date BIGINT NULL,
  metadata_last_used_date BIGINT NULL,
  metadata_tag_data BLOB NULL,
  metadata_favorite_rank BIGINT UNSIGNED NULL,
  captured_content BLOB NULL
_parent_id_idx ON 
(id),
  filename TEXT,
  version BLOB NULL,
  metadata_kind TINYINT,
  metadata_is_dataless BOOL,
  metadata_is_package BOOL,
  metadata_size UNSIGNED BIG INT,
  metadata_posix_permissions SMALLINT,
  metadata_creation_date BIGINT NULL,
  metadata_content_modification_date BIGINT NULL,
  metadata_last_used_date BIGINT NULL,
  metadata_tag_data BLOB NULL,
  metadata_favorite_rank BIGINT UNSIGNED NULL,
  captured_content BLOB NULL
 WHERE vfs_fileid = 
SQLDB: Snapshot update
SQLDB: Snapshot insert
                           
SQLDB: Delete Children
 WHERE parent_id = 
   AND parent_id != id
SQLDB: Delete Item
_item_jobs
      WHERE item_id = 
SQLDB: Scan directory
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FileProviderDaemons_Sim/FileProvider-265/fssync/libfssync/implementations/file-system/persistence/SQLSnapshot.swift
unexpected continuation type
 AND id != parent_id
 ORDER BY rowID ASC
 LIMIT 
SQLDB: Count unbound children
SQLDB: Count unbound and unthrottled children
SELECT snap.id
  FROM 
 AS snap
 INNER JOIN reconciliation_table AS rt ON snap.id = rt.
 WHERE snap.parent_id = 
_id IS NULL
   AND (NOT EXISTS (SELECT id
                      FROM 
_throttle AS throttle
                     WHERE throttle.kind = 
                       AND throttle.other_item_id = snap.id
                       AND throttle.job_type IN (
                       AND throttle.state = 
   AND (NOT EXISTS (SELECT id
                      FROM 
                       AND throttle.item_id = snap.id
                       AND throttle.job_type = 
                       AND throttle.state = 
_id IS NULL
 LIMIT 1
SQLDB: Count pending rescan children
_reset_scan_status = 
SQLDB: Count materialized children
   AND parent_id != id
   AND metadata_is_dataless = 0
   AND metadata_kind != 
SQLDB: Count children
 AND parent_id != id
 LIMIT 1
SQLDB: Check item with ID
SQLDB: Lookup parent ID
SELECT parent_id
  FROM 
SQLDB: Lookup item decoration
SQLDB: Lookup item by parent ID and name
   AND filename = 
SQLDB: Lookup item by ID
unsupported diff field 
decoration_user_info = 
decoration_item_decoration = 
decoration_has_unresolved_conflicts = 
decoration_display_name = 
decoration_container_display_name = 
decoration_cloud_container_identifier = 
decoration_app_container_bundle_identifier = 
decoration_is_container_pristine = 
decoration_is_container = 
decoration_sharing_permissions = 
decoration_last_edited_by_current_user = 
decoration_preformatted_most_recent_editor_name = 
decoration_preformatted_owner_name = 
decoration_is_shared_by_current_user = 
decoration_is_top_level_shared_item = 
decoration_is_shared = 
decoration_is_excluded_from_sync = 
decoration_uploading_error = 
decoration_is_uploaded = 
decoration_is_uploading = 
decoration_capabilities = 
metadata_is_pinned = 
metadata_is_evictable = 
metadata_trash_put_back = 
metadata_extended_attributes = 
metadata_favorite_rank = 
metadata_tag_data = 
metadata_last_used_date = 
metadata_child_item_count = 
metadata_extension_hidden = 
metadata_is_hidden = 
metadata_content_modification_date = 
metadata_creation_date = 
metadata_posix_permissions = 
metadata_is_locked = 
metadata_is_dataless = 
metadata_physical_size = 
structural_version = 
metadata_size = 
metadata_is_package = 
captured_content = 
vfs_generationid = 
metadata_kind = 
SQLDB: Enumerate children IDs
SELECT id, captured_content
  FROM 
<Missing argument>
<Invalid custom formatter>
<Unknown argument type>
<Got primitive type, expected pointer type>
<Invalid builtin formatter>
<Invalid argument, 'errno' expected Int32>
/usr/lib/log/liblog_
/usr/local/lib/log/liblog_
OSLogCopyFormattedString
%(?:\{([a-zA-Z0-9]*)(?::([a-zA-Z0-9]*))?\})?[^diouXxfFeEgGaAcs@pP%]*([diouXxfFeEgGaAcs@pP%])
Error while creating ConsoleLogger regex
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FileProviderDaemons_Sim/FileProvider-265/fssync/libfssync/utilities/logging/StringLogger.swift
, may-already-exists, why:
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FileProviderDaemons_Sim/FileProvider-265/fssync/libfssync/implementations/file-system/persistence/SnapshotFileItem+SQLCodable.swift
can't decode version
structural_version
recursive_non_evictable_count
recursive_dataless_count
captured_content
state
job must not be running when cancelled
_TtC9libfssync13ConsoleLogger
_TtC9libfssync31DocumentTrackingTombstoneSlayer
basePath
[WARNING]  
 tombstone slaying failed: %{public}@
 recreating tombstone slayer
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FileProviderDaemons_Sim/FileProvider-265/fssync/libfssync/utilities/TombstoneSlayer.swift
delete-children<id:
isStillInFileTree
unknown reason type 
cannot decode request
capturedContentNotNeeded
needsFileContent
cancelMaterialization
diskImportFailed
itemCreation(<unknown>, by:
enumeration(<unknown>, by:
transformRequest(
deletionRequest(
downloadRequest(
datalessItemInDiskScan
garbageCollection
itemChangedWhileFetchingContent
itemChangedRemotely
itemChangedInTree
itemDeletedInTree
itemUpdateConflicted
itemUpdateRejected
itemCreationConflicted
itemCreationRejected
throttlingExpired
folderDeletedInTree
folderCreatedInTree
forceIngestionForItemID(
insertedPathMatchingItem(
materialization(
backgroundReason
_TtC9libfssync18VFSFaultingContext
version
fsItemJobs
fpItemJobs
backgroundDownloader
creationJobTypes
propagationJobTypes
ALTER TABLE jobs ADD COLUMN state_metadata_before_bounce_filename TEXT NULL
UPDATE jobs
   SET state_metadata_physical_size = 0
 WHERE state_metadata_kind IN (
) AND state_metadata_is_dataless
ALTER TABLE jobs ADD COLUMN is_recursive BOOL NULL
ALTER TABLE jobs ADD COLUMN state_metadata_is_in_pinned_folder BOOL NULL
ALTER TABLE jobs ADD COLUMN state_metadata_is_pinned BOOL NULL
ALTER TABLE jobs ADD COLUMN state_metadata_is_evictable BOOL
ALTER TABLE jobs
 ADD COLUMN state_metadata_trash_put_back BLOB NULL
DROP INDEX jobs_scheduling_priority
DROP INDEX jobs_state__side__scheduling_timestamp
DROP INDEX jobs_state__side__type__scheduling_timestamp
CREATE INDEX jobs_state__side__scheduling_ordering
ON jobs(state, side, scheduling_priority DESC, scheduling_timestamp)
CREATE INDEX jobs_state__side__type__scheduling_ordering
ON jobs(state, side, type, scheduling_priority DESC, scheduling_timestamp)
CREATE INDEX jobs_scheduling_priority ON jobs(scheduling_priority)
ALTER TABLE jobs
 ADD COLUMN scheduling_priority INTEGER NOT NULL DEFAULT 0
UPDATE jobs
   SET state_metadata_physical_size = state_metadata_size
 WHERE state_metadata_kind = 
ALTER TABLE jobs ADD COLUMN state_metadata_physical_size UNSIGNED BIG INT NULL
ALTER TABLE jobs ADD COLUMN found_by_reset_scan BOOL
CREATE INDEX jobs_state__side__scheduling_timestamp
ON jobs(state, side, scheduling_timestamp)
CREATE INDEX jobs_state__side__type__scheduling_timestamp
ON jobs(state, side, type, scheduling_timestamp)
CREATE INDEX jobs_side__other_id__type__state
ON jobs(side, other_id, type, state)
ALTER TABLE jobs_copy RENAME TO jobs
INSERT INTO jobs_copy (id,
                       scheduling_timestamp,
                       type,
                       side,
                       state,
                       state_conditions,
                       state_error,
                       state_continuation,
                       reason,
                       item_id,
                       item_filename,
                       state_parent_id,
                       state_filename,
                       state_metadata_kind,
                       state_metadata_is_dataless,
                       state_metadata_is_package,
                       state_metadata_size,
                       state_metadata_posix_permissions,
                       state_metadata_creation_date,
                       state_metadata_content_modification_date,
                       state_metadata_last_used_date,
                       state_metadata_tag_data,
                       state_metadata_favorite_rank,
                       state_metadata_is_hidden,
                       state_metadata_extension_hidden,
                       state_metadata_child_item_count,
                       state_metadata_extended_attributes,
                       state_metadata_is_locked,
                       other_id,
                       other_version,
                       other_structural_version,
                       staged_context,
                       captured_content,
                       diffs,
                       base_version,
                       base_structural_version)
        SELECT id,
               scheduling_timestamp,
               type,
               side,
               state,
               state_conditions,
               state_error,
               state_continuation,
               reason,
               item_id,
               item_filename,
               IFNULL(state_parent_id, item_parent_id),
               state_filename,
               state_metadata_kind,
               state_metadata_is_dataless,
               state_metadata_is_package,
               state_metadata_size,
               state_metadata_posix_permissions,
               state_metadata_creation_date,
               state_metadata_content_modification_date,
               state_metadata_last_used_date,
               state_metadata_tag_data,
               state_metadata_favorite_rank,
               state_metadata_is_hidden,
               state_metadata_extension_hidden,
               state_metadata_child_item_count,
               state_metadata_extended_attributes,
               state_metadata_is_locked,
               other_id,
               other_version,
               other_structural_version,
               staged_context,
               captured_content,
               diffs,
               base_version,
               base_structural_version
          FROM jobs
CREATE TABLE jobs_copy (
  id INTEGER PRIMARY KEY,
  scheduling_timestamp INTEGER,
  type TINYINT,
  side TINYINT,
  state TINYINT,
  state_conditions SMALLINT,
  state_error BLOB NULL,
  state_continuation BLOB NULL,
  reason BLOB NULL,
  item_id BLOB NULL,
  item_filename TEXT,
  state_parent_id BLOB NULL,
  state_filename TEXT NULL,
  state_metadata_kind TINYINT NULL,
  state_metadata_is_dataless BOOL NULL,
  state_metadata_is_package BOOL NULL,
  state_metadata_size UNSIGNED BIG INT NULL,
  state_metadata_posix_permissions SMALLINT NULL,
  state_metadata_creation_date BIGINT NULL,
  state_metadata_content_modification_date BIGINT NULL,
  state_metadata_last_used_date BIGINT NULL,
  state_metadata_tag_data BLOB NULL,
  state_metadata_favorite_rank BIGINT UNSIGNED NULL,
  state_metadata_is_hidden BOOL,
  state_metadata_extension_hidden BOOL,
  state_metadata_child_item_count INT NULL,
  state_metadata_extended_attributes BLOB NULL,
  state_metadata_is_locked BOOL,
  other_id BLOB NULL,
  other_version BLOB NULL,
  other_structural_version BLOB NULL,
  staged_context BLOB NULL,
  captured_content BLOB NULL,
  diffs TINYINT NULL,
  base_version BLOB NULL,
  base_structural_version BLOB NULL
UPDATE jobs
   SET 
SELECT rowID, side, item_version, other_version, base_version
  FROM jobs
 WHERE item_version IS NOT NULL
    OR other_version IS NOT NULL
    OR base_version IS NOT NULL
ALTER TABLE jobs
  ADD COLUMN base_structural_version BLOB NULL
ALTER TABLE jobs
  ADD COLUMN other_structural_version BLOB NULL
ALTER TABLE jobs
  ADD COLUMN item_structural_version BLOB NULL
ALTER TABLE jobs ADD COLUMN state_metadata_is_locked BOOL
ALTER TABLE jobs ADD COLUMN item_metadata_is_locked BOOL
ALTER TABLE jobs ADD COLUMN state_metadata_extended_attributes BLOB NULL
ALTER TABLE jobs ADD COLUMN state_metadata_child_item_count INT NULL
ALTER TABLE jobs ADD COLUMN state_metadata_extension_hidden BOOL
ALTER TABLE jobs ADD COLUMN state_metadata_is_hidden BOOL
ALTER TABLE jobs ADD COLUMN item_metadata_extended_attributes BLOB NULL
ALTER TABLE jobs ADD COLUMN item_metadata_child_item_count INT NULL
ALTER TABLE jobs ADD COLUMN item_metadata_extension_hidden BOOL
ALTER TABLE jobs ADD COLUMN item_metadata_is_hidden BOOL
CREATE INDEX jobs_scheduling_timestamp ON jobs(scheduling_timestamp)
CREATE INDEX jobs_other_id ON jobs(other_id)
CREATE INDEX jobs_state ON jobs(state)
CREATE INDEX jobs_state_parent_id ON jobs(state_parent_id)
CREATE INDEX jobs_item_parent_id ON jobs(item_parent_id)
CREATE INDEX jobs_side ON jobs(side)
CREATE INDEX jobs_type ON jobs(type)
CREATE TABLE jobs (
  id INTEGER PRIMARY KEY,
  scheduling_timestamp INTEGER,
  type TINYINT,
  side TINYINT,
  state TINYINT,
  state_conditions SMALLINT,
  state_error BLOB NULL,
  state_continuation BLOB NULL,
  reason BLOB NULL,
  item_id BLOB NULL,
  item_parent_id BLOB NULL,
  item_filename TEXT,
  item_version BLOB NULL,
  item_metadata_kind TINYINT NULL,
  item_metadata_is_dataless BOOL NULL,
  item_metadata_is_package BOOL NULL,
  item_metadata_size UNSIGNED BIG INT NULL,
  item_metadata_posix_permissions SMALLINT NULL,
  item_metadata_creation_date BIGINT NULL,
  item_metadata_content_modification_date BIGINT NULL,
  item_metadata_last_used_date BIGINT NULL,
  item_metadata_tag_data BLOB NULL,
  item_metadata_favorite_rank BIGINT UNSIGNED NULL,
  item_captured_content BLOB NULL,
  state_parent_id BLOB NULL,
  state_filename TEXT NULL,
  state_metadata_kind TINYINT NULL,
  state_metadata_is_dataless BOOL NULL,
  state_metadata_is_package BOOL NULL,
  state_metadata_size UNSIGNED BIG INT NULL,
  state_metadata_posix_permissions SMALLINT NULL,
  state_metadata_creation_date BIGINT NULL,
  state_metadata_content_modification_date BIGINT NULL,
  state_metadata_last_used_date BIGINT NULL,
  state_metadata_tag_data BLOB NULL,
  state_metadata_favorite_rank BIGINT UNSIGNED NULL,
  other_id BLOB NULL,
  other_version BLOB NULL,
  staged_context BLOB NULL,
  captured_content BLOB NULL,
  diffs TINYINT NULL,
  base_version BLOB NULL
error while executing trigger %{public}@: %{public}@
 unblocked after waiting for 
UPDATE jobs
   SET state = 
       state_conditions = 0
 WHERE state = 
   AND state_conditions = 
+ propagation jobs
corrupted database: 
SQLDB: Persist Job
ORDER BY scheduling_priority DESC, scheduling_timestamp
SELECT rowID
  FROM jobs
 WHERE state = 
   AND ((item_id = 
        OR (other_id = 
SELECT id
  FROM jobs
 WHERE side = 
   AND item_id = 
   AND state NOT IN 
 AND other_id = 
ORDER BY scheduling_priority DESC, scheduling_timestamp LIMIT 
AND (
    type IN 
    AND NOT EXISTS (
jobs.scheduling_priority
  OR
    type NOT IN 
DELETE FROM jobs
      WHERE id = 
SELECT rowID
  FROM jobs
 WHERE type = 
   AND state IN (
                 
INSERT INTO jobs (scheduling_timestamp,scheduling_priority, 
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FileProviderDaemons_Sim/FileProvider-265/fssync/libfssync/implementations/file-system/persistence/SQLJobRegistry.swift
include a side in your query
SELECT 1
  FROM jobs
WHERE 
SELECT scheduling_priority, scheduling_timestamp, 
  FROM jobs
 WHERE 
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FileProviderDaemons_Sim/FileProvider-265/fssync/libfssync/interfaces/file-tree/item/types/ItemDecoration.swift
should not be called
cannot pack user info
unexpected user info encoding
_TtC9libfssync6Logger
defaultOSLogger
%llx %{public}@
%llx %{public}@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FileProviderDaemons_Sim/FileProvider-265/fssync/libfssync/implementations/file-system/persistence/CodableClass.swift
), add the registration in the FileTree that use that type:
.register(child: 
hasUnresolvedConflicts
containerDisplayName
cloudContainerIdentifier
appContainerBundleIdentifier
isContainerPristine
sharingPermissions
lastEditedByCurrentUser
preformattedMostRecentEditorName
preformattedOwnerName
isSharedByCurrentUser
isTopLevelSharedItem
isExcludedFromSync
downloadingError
queueStorage
wasReopenedForReading
schedulerQueueStorage
source
fetchContentJobsForALimit
fetchContentJobsForBLimit
otherJobsForALimit
otherJobsForBLimit
backgroundDownloadLimit
jobLockForA
jobLockForB
persistenceCounterStorage
asyncJobGroup
wharf
$__lazy_storage_$_swappedStorage
materializationWaiters
propagationFromFPWaiters
propagationFromFSWaiters
flushWaiters
currentQoS
triggersEnabled
pendingTriggers
idMaps
pendingReconciliations
delegateStore
shouldDumpState
  executing jobs, availabilities 
invalidateSource()
close()
unblocking propagation failed: %@
scheduling of captured content garbage collection failed: %@
reconcile item %@ following job throttling expiration: %@
reconcile children of %@ <-> %@ following item propagation: %@
reconcile item %@ following job throttling: %@
[WARNING]  
  import of %@ within %@ is throttled, unfaulting folder to allow import progress
reconcile item %@ following item throttling expiration: %@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FileProviderDaemons_Sim/FileProvider-265/fssync/libfssync/sync-logic/ConcreteDatabase.swift
not implemented yet
reconcile item %@ following item eviction: %@
refreshing QoS %@ with %@
  updating QoS of the scheduler to %@
  has runnable jobs: %@
DB: Signal Runnable Jobs
propagatation <fp:%@ reason:%@> completed: %@
propagatation <fs:%@ reason:%@> completed: %@
Triggers
Reconciliations
 reconciling: 
batch was submited to an invalidated db
add(_:_:)
+ disk import scheduler: 
+ reconciliation
+ processing requests
key value 
: propagation for 
updating QoS %@ with %@
  cancelling request for 
  cancelling eviction %{public}@
  cancelling materialization %{public}@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FileProviderDaemons_Sim/FileProvider-265/fssync/libfssync/utilities/collections/OrderedDictionary.swift
ALTER TABLE engine_state ADD COLUMN fs_stream_uuid BLOB DEFAULT NULL
ALTER TABLE engine_state_copy RENAME TO engine_state
DROP TABLE engine_state
INSERT INTO engine_state_copy (
  rowid,
  db_uuid,
  fs_stream_event_id,
  fp_stream_sync_token,
  fp_stream_has_more,
  db_bugfix_revision
) SELECT
    rowid,
    db_uuid,
    fs_stream_event_id,
    fp_stream_sync_token,
    fp_stream_has_more,
    db_bugfix_revision
  FROM engine_state
CREATE TABLE engine_state_copy (
  rowid INTEGER PRIMARY KEY CHECK (rowid = 0),
  db_uuid              BLOB NOT NULL,
  fs_stream_event_id   INT DEFAULT NULL,
  fp_stream_sync_token BLOB DEFAULT NULL,
  fp_stream_has_more   BOOL DEFAULT NULL,
  db_bugfix_revision   UNSIGNED INT NOT NULL DEFAULT 0
DROP TRIGGER IF EXISTS "jobs/propagating_content_sub"
DROP TRIGGER IF EXISTS "jobs/propagating_content_add"
DROP TRIGGER IF EXISTS "reconciliation_table/propagating_content_sub"
DROP TRIGGER IF EXISTS "reconciliation_table/propagating_content_add"
ALTER TABLE engine_state ADD COLUMN db_bugfix_revision UNSIGNED INT NOT NULL DEFAULT 0
CREATE TRIGGER "jobs/propagating_content_sub"
 AFTER DELETE ON jobs
  WHEN old.side = 
       AND
       (old.diffs & 
) != 0
BEGIN
  -- Update the aggregated sum
  UPDATE engine_state
     SET non_evictable_space = non_evictable_space - old.state_metadata_physical_size;
CREATE TRIGGER "jobs/propagating_content_add"
 AFTER INSERT ON jobs
  WHEN new.side = 
       AND
       (new.diffs & 
) != 0
BEGIN
  -- Update the aggregated sum
  UPDATE engine_state
     SET non_evictable_space = non_evictable_space + new.state_metadata_physical_size;
CREATE TRIGGER "reconciliation_table/propagating_content_sub"
 AFTER UPDATE OF fs_updated_fields ON reconciliation_table
  WHEN (new.fs_updated_fields & 
) = 0
       AND
       (old.fs_updated_fields & 
) != 0
BEGIN
  -- Update the aggregated sum
  UPDATE engine_state
    SET non_evictable_space = non_evictable_space - (
     SELECT metadata_physical_size
       FROM fs_snapshot
      WHERE id = new.fs_id
    );
CREATE TRIGGER "reconciliation_table/propagating_content_add"
 AFTER UPDATE OF fs_updated_fields ON reconciliation_table
  WHEN (new.fs_updated_fields & 
) != 0
       AND
       (old.fs_updated_fields & 
) = 0
BEGIN
  -- Update the aggregated sum
  UPDATE engine_state
     SET non_evictable_space = non_evictable_space + (
      SELECT metadata_physical_size
        FROM fs_snapshot
       WHERE id = new.fs_id
     );
UPDATE engine_state SET non_evictable_space = (
  SELECT SUM(metadata_physical_size)
    FROM fs_snapshot
   WHERE id IN (
    SELECT fs_id
      FROM reconciliation_table
     WHERE (fs_updated_fields & 
) != 0
   )
) + (
    SELECT SUM(state_metadata_physical_size)
      FROM jobs
     WHERE side = 
           AND
           (diffs & 
) != 0
           AND
           (diffs & 
ALTER TABLE engine_state ADD COLUMN non_evictable_space UNSIGNED BIG INT NULL
kFPHasMoreComingKey
kFPChangeTokenKey
INSERT INTO engine_state (
  rowid,
  db_uuid,
  fs_stream_event_id,
  fp_stream_sync_token,
  fp_stream_has_more
VALUES (
  0,
CREATE TABLE engine_state (
  rowid INTEGER PRIMARY KEY CHECK (rowid = 0),
  db_uuid              BLOB NOT NULL,
  fs_stream_event_id   INT DEFAULT NULL,
  fp_stream_sync_token BLOB DEFAULT NULL,
  fp_stream_has_more   BOOL DEFAULT NULL
DROP TABLE sync_state
SELECT value
  FROM sync_state
 WHERE name = 
CREATE UNIQUE INDEX sync_state_key_idx ON sync_state(name, side)
CREATE TABLE sync_state (
  name STRING,
  side TINYINT,
  value BLOB
UPDATE engine_state SET 
db_bugfix_revision
non_evictable_space
fp_stream_sync_token
fp_stream_has_more
fs_stream_event_id
 FROM engine_state
SELECT SUM(metadata_physical_size) FROM fs_snapshot WHERE NOT metadata_is_evictable
_TtC9libfssync21FileProviderPageToken
directoryID
_TtC9libfssync13StagedContext
can't close DB: 
persistence failed 
  cannot encode indexer state: 
Unable to process fsevent#
fileID of directory changed during enumeration: 
fsRootID
fpRootID
is_recursively_deleted
was_dataless_before_reset_scan
reset_scan_status
is_still_in_file_tree
CREATE TRIGGER "materialized_set/fs_item_jobs/materialization"
AFTER INSERT ON fs_item_jobs
WHEN new.type = 
BEGIN
-- Mark the item as updated in the reconciliation table if present
UPDATE reconciliation_table
SET enumeration_anchor = NEXT_ANCHOR((SELECT anchor FROM enumeration_view))
WHERE fs_id = new.item_id;
CREATE TRIGGER "materialized_set/reconciliation_table/remove_item"
 AFTER DELETE ON reconciliation_table
  WHEN old.fp_id IS NOT NULL AND old.enumeration_anchor IS NOT NULL
BEGIN
  -- Add the entry in tombstone table. Propagate the anchor from the reconciliation table
  -- if the item was monitored at the time of removal
  INSERT INTO tombstone_table (fp_id, enumeration_anchor)
       VALUES (old.fp_id,
               CASE WHEN EXISTS (SELECT id from fs_snapshot WHERE id = old.fs_id AND metadata_is_dataless = 0)
               THEN NEXT_ANCHOR((SELECT anchor FROM enumeration_view))
               ELSE old.enumeration_anchor
               END);
CREATE TRIGGER "materialized_set/reconciliation_table/remove_fp_id"
 AFTER UPDATE OF fp_id ON reconciliation_table
  WHEN old.fp_id IS NOT NULL AND new.fp_id IS NULL AND old.enumeration_anchor IS NOT NULL
BEGIN
  -- Add the entry in tombstone table. Propagate the anchor from the reconciliation table
  -- if the item was monitored at the time of removal
  INSERT INTO tombstone_table (fp_id, enumeration_anchor)
       VALUES (old.fp_id,
               CASE WHEN EXISTS (SELECT id FROM fs_snapshot WHERE id = old.fs_id AND metadata_is_dataless = 0)
               THEN NEXT_ANCHOR((SELECT anchor FROM enumeration_view))
               ELSE old.enumeration_anchor
               END);
  -- Clear the enumeration anchor in the reconciliation table
  -- Must be executed after the previous update to preserve the previous anchor
  -- in the computation of the enumeration_view
  UPDATE reconciliation_table
     SET enumeration_anchor = NULL
   WHERE rowID = old.rowID;
CREATE TRIGGER "materialized_set/fs_snapshot/delete"
  AFTER DELETE ON fs_snapshot
  WHEN old.metadata_is_dataless != 0
BEGIN
  -- Mark the item as updated in the reconciliation table if present
  UPDATE reconciliation_table
     SET enumeration_anchor = NEXT_ANCHOR((SELECT anchor FROM enumeration_view))
   WHERE fs_id = old.id AND fp_id IS NOT NULL;
CREATE TRIGGER "materialized_set/fs_snapshot/insert"
 AFTER INSERT ON fs_snapshot
  WHEN new.metadata_is_dataless != 0
BEGIN
  -- Mark the item as updated in the reconciliation table if present
  UPDATE reconciliation_table
     SET enumeration_anchor = NEXT_ANCHOR((SELECT anchor FROM enumeration_view))
   WHERE fs_id = new.id AND fp_id IS NOT NULL;
CREATE TRIGGER "materialized_set/fs_snapshot/metadata_is_dataless"
 AFTER UPDATE OF metadata_is_dataless ON fs_snapshot
  WHEN old.metadata_is_dataless != new.metadata_is_dataless
BEGIN
  -- Mark the item as updated in the reconciliation table if present
  UPDATE reconciliation_table
     SET enumeration_anchor = NEXT_ANCHOR((SELECT anchor FROM enumeration_view))
   WHERE fs_id = new.id AND fp_id IS NOT NULL;
CREATE TRIGGER "materialized_set/reconciliation_table/bind_fs_id"
 AFTER UPDATE OF fs_id ON reconciliation_table
  WHEN new.fp_id IS NOT NULL
BEGIN
  -- Mark the item has updated if we lost the binding and were previously dataless
  UPDATE reconciliation_table
     SET enumeration_anchor = NEXT_ANCHOR((SELECT anchor FROM enumeration_view))
   WHERE rowID = new.rowID
     AND EXISTS (SELECT id FROM fs_snapshot WHERE (id = old.fs_id OR id = new.fs_id) AND metadata_is_dataless = 0);
CREATE TRIGGER "materialized_set/reconciliation_table/bind_fp_id"
 AFTER UPDATE OF fp_id ON reconciliation_table
  WHEN new.fp_id IS NOT NULL
BEGIN
  -- Mark the item has updated if we lost the binding and were previously dataless
  UPDATE reconciliation_table
     SET enumeration_anchor = NEXT_ANCHOR((SELECT anchor FROM enumeration_view))
   WHERE rowID = new.rowID
     AND EXISTS (SELECT id FROM fs_snapshot WHERE (id = old.fs_id OR id = new.fs_id) AND metadata_is_dataless = 0);
  -- Delete the entry from the tombstone table if the fp_id is present
  -- in the reconciliation table. If the the item was actually present
  -- in the tombstone, a followup trigger will be called to move
  -- the anchor from the tombstone table to the reconciliation table
  -- Must be executed after the previous update to preserve the previous anchor
  -- in the computation of the enumeration_view
  DELETE FROM tombstone_table
   WHERE fp_id = new.fp_id;
CREATE TRIGGER "materialized_set/reconciliation_table/insert"
 AFTER INSERT ON reconciliation_table
  WHEN new.fp_id IS NOT NULL
BEGIN
  -- Mark the item has updated if we are interested in its children, otherwise
  UPDATE reconciliation_table
     SET enumeration_anchor = NEXT_ANCHOR((SELECT anchor FROM enumeration_view))
   WHERE rowID = new.rowID
     AND EXISTS (SELECT id FROM fs_snapshot WHERE id = new.fs_id AND metadata_is_dataless = 0);
  -- Delete the entry from the tombstone table if the fp_id is present
  -- in the reconciliation table. If the the item was actually present
  -- in the tombstone, a followup trigger will be called to move
  -- the anchor from the tombstone table to the reconciliation table
  -- Must be executed after the previous update to preserve the previous anchor
  -- in the computation of the enumeration_view
  DELETE FROM tombstone_table
   WHERE fp_id = new.fp_id;
DROP TRIGGER IF EXISTS "materialized_set/reconciliation_table/remove_item"
DROP TRIGGER IF EXISTS "materialized_set/reconciliation_table/remove_fp_id"
DROP TRIGGER IF EXISTS "materialized_set/fs_snapshot/delete"
DROP TRIGGER IF EXISTS "materialized_set/fs_snapshot/insert"
DROP TRIGGER IF EXISTS "materialized_set/fs_snapshot/metadata_is_dataless"
DROP TRIGGER IF EXISTS "materialized_set/fs_item_jobs/materialization"
DROP TRIGGER IF EXISTS "materialized_set/reconciliation_table/bind_fs_id"
DROP TRIGGER IF EXISTS "materialized_set/reconciliation_table/bind_fp_id"
DROP TRIGGER IF EXISTS "materialized_set/reconciliation_table/insert"
is_recursively_deleted BOOL NOT NULL DEFAULT 0
ALTER TABLE reconciliation_table
 ADD COLUMN 
CREATE TRIGGER "fp_snapshot/decoration_change"
  AFTER UPDATE ON fp_snapshot
BEGIN
  -- Update the last change date
  UPDATE reconciliation_table
     SET last_change = PROPAGATION_DATE_CHANGED()
   WHERE fp_id = new.id;
UPDATE reconciliation_table
   SET enumeration_anchor = NEXT_ANCHOR((SELECT anchor FROM enumeration_view))
 WHERE fp_id IS NOT NULL AND fs_id IS NOT NULL
   AND EXISTS (SELECT id FROM fs_snapshot WHERE id = fs_id AND metadata_is_dataless != 0)
UPDATE reconciliation_table
   SET enumeration_anchor = NULL
DROP TRIGGER "reconciliation_table/update_children_status"
DROP TRIGGER "reconciliation_table/remove_item"
DROP TRIGGER "reconciliation_table/remove_fp_id"
DROP TRIGGER "reconciliation_table/insert_fp_id"
DROP TRIGGER "reconciliation_table/insert_item"
UPDATE reconciliation_table
   SET 
SELECT rec.rowID, snapshot.vfs_fileid, snapshot.vfs_generationid, rec.fs_version, rec.fs_structural_version
  FROM fs_snapshot AS snapshot
 INNER JOIN reconciliation_table AS rec ON (rec.fs_id = snapshot.id)
 WHERE snapshot.metadata_is_package
   AND rec.fs_version IS NOT NULL
CREATE INDEX reconciliation_fs_reset_scan_status ON reconciliation_table(fs_reset_scan_status)
DROP TRIGGER "fs_snapshot/is_dataless_change"
CREATE TRIGGER "fs_snapshot/recursive_dataless_change"
  AFTER UPDATE OF recursive_dataless_count ON fs_snapshot
          WHEN new.recursive_dataless_count != old.recursive_dataless_count
           AND (new.recursive_dataless_count == 0 OR old.recursive_dataless_count == 0)
BEGIN
  -- Update the last change date
  UPDATE reconciliation_table
     SET last_change = PROPAGATION_DATE_CHANGED()
   WHERE fs_id = new.id;
DROP TRIGGER IF EXISTS "fs_snapshot/is_dataless_change"
was_dataless_before_reset_scan BOOL
reset_scan_status TINYINT NULL
CREATE TRIGGER "fs_snapshot/is_dataless_change"
  AFTER UPDATE OF metadata_is_dataless ON fs_snapshot
         WHEN new.metadata_is_dataless != old.metadata_is_dataless
BEGIN
  -- Update the last change date
  UPDATE reconciliation_table
     SET last_change = PROPAGATION_DATE_CHANGED()
   WHERE fs_id = new.id;
CREATE TRIGGER "reconciliation_table/propagation_changes"
 AFTER UPDATE ON reconciliation_table
  WHEN new.fs_updated_fields != old.fs_updated_fields
       OR new.fs_needs_delete != old.fs_needs_delete
       OR new.fp_updated_fields != old.fp_updated_fields
       OR new.fp_needs_delete != old.fp_needs_delete
BEGIN
  -- Update the last change date
  UPDATE reconciliation_table
     SET last_change = PROPAGATION_DATE_CHANGED()
   WHERE rowID = new.rowID;
CREATE INDEX reconciliation_table_last_change ON reconciliation_table(last_change)
ALTER TABLE reconciliation_table
 ADD COLUMN last_change INT NULL
found_by_reset_scan BOOL
is_still_in_file_tree BOOL
structural_version BLOB NULL
SELECT rowID, fs_version, fp_version
  FROM reconciliation_table
 WHERE fs_version IS NOT NULL
    OR fp_version IS NOT NULL
CREATE TRIGGER "tombstone_table/remove_entry"
 AFTER DELETE ON tombstone_table
BEGIN
  UPDATE reconciliation_table
     SET enumeration_anchor = MAX(IFNULL(enumeration_anchor, 0), old.enumeration_anchor)
   WHERE fp_id = old.fp_id;
CREATE TRIGGER "reconciliation_table/update_children_status"
  AFTER UPDATE OF fp_children_status ON reconciliation_table
   WHEN old.fp_children_status != new.fp_children_status
    AND (old.fp_children_status = 
         OR new.fp_children_status = 
BEGIN
  UPDATE reconciliation_table
     SET enumeration_anchor = NEXT_ANCHOR((SELECT anchor FROM enumeration_view))
   WHERE rowID = new.rowID;
CREATE TRIGGER "reconciliation_table/remove_item"
 AFTER DELETE ON reconciliation_table
  WHEN old.fp_id IS NOT NULL AND old.enumeration_anchor IS NOT NULL
BEGIN
  -- Add the entry in tombstone table. Propagate the anchor from the reconciliation table
  -- if the item was monitored at the time of removal
  INSERT INTO tombstone_table (fp_id, enumeration_anchor)
       VALUES (old.fp_id,
               CASE WHEN old.fp_children_status != 
               THEN NEXT_ANCHOR((SELECT anchor FROM enumeration_view))
               ELSE old.enumeration_anchor
               END);
CREATE TRIGGER "reconciliation_table/remove_fp_id"
 AFTER UPDATE OF fp_id ON reconciliation_table
  WHEN old.fp_id IS NOT NULL AND new.fp_id IS NULL AND old.enumeration_anchor IS NOT NULL
BEGIN
  -- Add the entry in tombstone table. Propagate the anchor from the reconciliation table
  -- if the item was monitored at the time of removal
  INSERT INTO tombstone_table (fp_id, enumeration_anchor)
       VALUES (old.fp_id,
               CASE WHEN old.fp_children_status != 
               THEN NEXT_ANCHOR((SELECT anchor FROM enumeration_view))
               ELSE old.enumeration_anchor
               END);
  -- Clear the enumeration anchor in the reconciliation table
  -- Must be executed after the previous update to preserve the previous anchor
  -- in the computation of the enumeration_view
  UPDATE reconciliation_table
     SET enumeration_anchor = NULL
   WHERE rowID = old.rowID;
CREATE TRIGGER "reconciliation_table/insert_fp_id"
 AFTER UPDATE OF fp_id ON reconciliation_table
  WHEN old.fp_id IS NULL AND new.fp_id IS NOT NULL
BEGIN
  -- Mark the item has updated if we are interested in its children, otherwise
  UPDATE reconciliation_table
     SET enumeration_anchor = NEXT_ANCHOR((SELECT anchor FROM enumeration_view))
   WHERE rowID = new.rowID AND new.fp_children_status != 
  -- Delete the entry from the tombstone table if the fp_id is present
  -- in the reconciliation table. If the the item was actually present
  -- in the tombstone, a followup trigger will be called to move
  -- the anchor from the tombstone table to the reconciliation table
  -- Must be executed after the previous update to preserve the previous anchor
  -- in the computation of the enumeration_view
  DELETE FROM tombstone_table
   WHERE fp_id = new.fp_id;
CREATE TRIGGER "reconciliation_table/insert_item"
 AFTER INSERT ON reconciliation_table
  WHEN new.fp_id IS NOT NULL
BEGIN
  -- Mark the item has updated if we are interested in its children, otherwise
  UPDATE reconciliation_table
     SET enumeration_anchor = NEXT_ANCHOR((SELECT anchor FROM enumeration_view))
   WHERE rowID = new.rowID AND new.fp_children_status != 
CREATE VIEW enumeration_view (anchor)
    AS SELECT IFNULL(MAX(anchor), 0)
         FROM (SELECT MAX(enumeration_anchor) as anchor
                 FROM reconciliation_table
                UNION ALL
               SELECT MAX(enumeration_anchor) as anchor
                 FROM tombstone_table)
CREATE INDEX tombstone_table_anchor ON tombstone_table(enumeration_anchor)
CREATE TABLE tombstone_table (
  fp_id BLOB PRIMARY KEY,
  enumeration_anchor INT
UPDATE reconciliation_table
   SET enumeration_anchor = 1
 WHERE fp_children_status != 
CREATE INDEX reconciliation_table_anchor ON reconciliation_table(enumeration_anchor)
ALTER TABLE reconciliation_table
  ADD COLUMN enumeration_anchor INT NULL
CREATE TABLE reconciliation_table (
  fs_id BLOB NULL UNIQUE,
  fs_needs_delete BOOL,
  fs_updated_fields SMALLINT,
  fs_version BLOB NULL,
  fs_children_status TINYINT,
  fp_id BLOB NULL UNIQUE,
  fp_needs_delete BOOL NULL,
  fp_updated_fields SMALLINT,
  fp_version BLOB NULL,
  fp_children_status TINYINT,
  colliding_id BLOB NULL
SELECT fs_id
  FROM reconciliation_table
 WHERE fs_reset_scan_status IS NOT NULL
       
SELECT fs_id
  FROM reconciliation_table
 WHERE fs_reset_scan_status = 
  FROM reconciliation_table
DELETE FROM reconciliation_table
 WHERE rowID = 
INSERT INTO reconciliation_table (
  FROM reconciliation_table
 WHERE 
rowID  
SELECT fp_id
  FROM reconciliation_table
 WHERE 
SELECT fs_id
  FROM reconciliation_table
 WHERE 
SQLDB: Decoration Query
SQLDB: Decoration Decoding
SELECT fs.metadata_is_dataless, fs.recursive_dataless_count, fs.recursive_non_evictable_count,
       fs.vfs_fileid, fs.vfs_generationid, fs.metadata_size, fs.metadata_is_package, fs.metadata_kind,
       fs.structural_version, fs.parent_id, fsjobs.id,
       fp.metadata_is_pinned, fp.metadata_is_in_pinned_folder,
       fp.version, fp.structural_version,
       
  FROM reconciliation_table AS rt
  LEFT JOIN fs_snapshot AS fs ON (fs.id = rt.fs_id)
  LEFT JOIN fp_snapshot AS fp ON (fp.id = rt.fp_id)
  LEFT JOIN fs_item_jobs AS fsjobs ON (fsjobs.item_id = rt.fs_id AND fsjobs.type = 
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FileProviderDaemons_Sim/FileProvider-265/fssync/libfssync/implementations/file-system/persistence/SQLReconciliationTable.swift
SELECT anchor FROM enumeration_view
id parentID filename 
SELECT fp_id, is_watched, enumeration_anchor, parent_id, filename
  FROM (SELECT fp_id AS fp_id,
               fs_snapshot.metadata_is_dataless = 0 AS is_watched,
               enumeration_anchor AS enumeration_anchor,
               fp_snapshot.parent_id AS parent_id,
               fp_snapshot.filename AS filename
          FROM reconciliation_table
         INNER JOIN fs_snapshot, fp_snapshot ON fs_id = fs_snapshot.id AND fp_id = fp_snapshot.id
         WHERE fp_snapshot.parent_id IS NOT NULL
     UNION ALL
       SELECT fp_id AS fp_id,
              0 AS is_watched,
              enumeration_anchor AS enumeration_anchor,
              NULL AS parent_id,
              NULL AS filename
         FROM tombstone_table)
    WHERE enumeration_anchor > 
 ORDER BY enumeration_anchor
 LIMIT 
SELECT fs_id, last_change
  FROM reconciliation_table
 WHERE fs_id IS NOT NULL
   AND last_change >= 
ORDER BY last_change
   LIMIT 
SELECT MAX(last_change) FROM reconciliation_table
unhandled job type
DeleteGarbageFromTree has been deleted
Unhandled job type
_TtC9libfssync12Continuation
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FileProviderDaemons_Sim/FileProvider-265/fssync/libfssync/utilities/EitherOrBoth.swift
Should not be called
childrenDeletion
ancestorReparented
parentCreation
_TtC9libfssync15SharedScheduler
activity
criteria
executors
registered
lastRegistrationDate
lastTriggerDate
lastUsageDate
alwaysRunnable
v16@?0@"<OS_xpc_object>"8
  %{public}@: started with xpc_activity
com.apple.fileproviderd.background-scheduler
  %{public}@: watcher unregistered for %{public}@
  %{public}@: new watcher registered for %{public}@
  %{public}@: unregistering xpc_activity
  %{public}@: registering xpc_activity
  %{public}@: xpc_activity called
register()
  %{public}@: deferring xpc_activity
_TtC9libfssync14FPFSSyncEngine
_TtC9libfssyncP33_695A112A250415316549FF403B18C66413DummyObserver
_TtC9libfssyncP33_695A112A250415316549FF403B18C66416LifetimeExtender
i16@0:8
requestEffectivePID
prettyDescription
Ti,N,R,VrequestEffectivePID
_TtC9libfssync11FPFSIndexer
@36@0:8@16@24B32
lastIndexedAnchor
  pushing batch: updating=%@, deleting=%@ hasMore=%{bool}d
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FileProviderDaemons_Sim/FileProvider-265/fssync/fpfs/FPFSIndexer.swift
  no delegate, cannot persist current indexing state
  batch indexation succeeded for anchor %@
[WARNING] 
  indexing failed: %@
libfssync.FPFSIndexer
init()
init(with:domain:enabled:)
  current anchor is unknown, fetching from spotlight
v24@?0@"NSData"8@"NSError"16
[WARNING]  
  invalid index anchor, restarting from scratch
  indexing from %@
  next index %@, hasMore: %@
[WARNING] 
  enumeration error: %@
[WARNING] 
  restarting indexing from scratch
FPDLifetimeExtender
Ti,N,R
q16@0:8
#16@0:8
^@24@0:8:16
^@32@0:8:16@24
baseVersion
collidingItemID
reconcile-after-bounce
call to block failed with 
 but errno is not set
fileTree
  %{public}@ snapshot mutation: %{public}@
_TtC9libfssync19FPFSSQLBackupEngine
@32@0:8@16@24
outputUserURL
destinationDirectoryURL
backupManifestURL
~/Library/Application Support/FileProvider does not exist. No need to back up.
backup_manifest.db
Library/Application Support/FileProvider
Failed to remove directory %@: %@
Library/Mobile Documents/
Library/CloudStorage/
Failed to get contents of %@: %@
Could not get canonical path for %@
_NSURLGenerationCountKey
Failed to get enumerator for %@
Failed to fetch resource values for %@: %@
Failed to get canonical path for %@
Failed to get the inode for %@
Failed to get gen count for %@
Failed to get is directory for %@
libfssync.FPFSSQLBackupEngine
Unable to create destination directory %@: %@
Failed to enumerate %@: %@
Calling completion handler with %@
Unable to delete existing destination directory at %@: %@
item
mode
itemUnchanged
parentID
sourceID
targetID
sourceVersion
collect-captured-content
cancel-fetch-content
update-children-status
fetch-children-metadata
resnapshot-children
unfault-directory-in-tree
fault-directory-in-tree
delete-rejected-in-tree
delete-folder-if-empty
  reason 
snapshot content
snapshot-content
parent doesn't exist in the fp
REJECT: parent is unknown
REJECT:parent is waiting for import (
REJECT: parent is importing the disk and item is not reconciled
REJECT: parent is not watching its children
REJECT: parent is pending import, the item will be scanned when importing the parent
  inconsistent children status for item %@
REJECT: parent is pending deletion
snapshot-metadata
capturedContent item 
materialize_or_evict 
start-materialization
_TtC9libfssync20FPFSSQLRestoreEngine
v24@0:8@?16
userURL
fpDatabaseURLs
_TtC9libfssyncP33_85EE8B8C8D2F9B54846FC4C440E7D91A31RestoreUpgradeSchemaVFSFileTree
_TtC9libfssyncP33_85EE8B8C8D2F9B54846FC4C440E7D91A30RestoreUpgradeSchemaFPFileTree
libfssync.FPFSSQLRestoreEngine
Failed to populate the backup manifest %@ with new columns: %@
Failed to create indexes on %@: %@
Calling completion handler with success.
No file at %@, so no need to patch.
Patching database at %@
Failed to open database at %@: %@
Failed to disable foreign keys: %@
Failed to patch the jobs table: %@
Failed to patch the fs_item_jobs table: %@
Failed to patch the fs_throttle table: %@
Failed to patch the fp_throttle table: %@
Failed to patch the reconciliation_table table: %@
Failed to patch the background_downloader table: %@
Failed to patch the fs_snapshot table: %@
Couldn't flush database %@: %@
@"NSString"16@?0@"PQLQueryBuilder"8
UPDATE fs_snapshot
SET id = 
vfs_generationid = 
structural_version = 
SELECT rowid, id, parent_id, vfs_fileid, vfs_generationid, structural_version
FROM fs_snapshot
UPDATE background_downloader
SET id = 
SELECT rowid, id
FROM background_downloader
UPDATE reconciliation_table
SET fs_id = 
fs_structural_version = 
SELECT rowid, fs_id, fs_version, fs_structural_version
FROM reconciliation_table
UPDATE fp_throttle
SET other_item_id = 
SELECT rowid, other_item_id
FROM fp_throttle
UPDATE fs_throttle
SET item_id = 
SELECT rowid, item_id
FROM fs_throttle
UPDATE fs_item_jobs
SET item_id = 
SELECT rowid, item_id
FROM fs_item_jobs
PRAGMA foreign_keys = ON
UPDATE jobs
SET other_id = 
other_structural_version = 
other_version = 
SELECT rowid, other_id, other_structural_version, other_version
FROM jobs
WHERE side == 
Failed to get newDocID for %@. Using negated doc ID instead: %d
UPDATE jobs
SET item_id = 
state_parent_id = 
base_version = 
base_structural_version = 
staged_context = 
captured_content = 
SELECT rowid, item_id, state_parent_id, base_version, base_structural_version, staged_context, captured_content
FROM jobs
WHERE side == 
PRAGMA foreign_keys = OFF
/tmp/should_not_be_used/
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FileProviderDaemons_Sim/FileProvider-265/fssync/libfssync/implementations/file-system/persistence/FPFSSQLRestoreEngine.swift
Failed to create the SQLDatabase: 
_TtC9libfssync11VFSFileTree
_isCaseSensitive
lookupScope
operationQueue
fsChangeMonitor
fsChangeSubscription
tombstoneSlayer
_rootURL
_rootURLLock
idLookupCache
  lookup of %@ timed out after %f (backoff: %luns)
can't create enumerator at %@
com.apple.fileprovider.before-bounce#P
Can't enumerate: %@: %@
FSTree update to new url %@ new parent %@
FS stage creation
Coordination: Acquiring for Creation
coordination on 
FS creation [under coordination]
Failed to capture a stable version of item: 
Unable to retrieve FSEvent stream UUID for device %@
starting without a FSEvent ID
starting without a an FSEvent stream UUID
no FSEvent UUID stream for current volume
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FileProviderDaemons_Sim/FileProvider-265/fssync/libfssync/implementations/file-system/tree/VFSFileTree.swift
Can't resolve the trash folder 
disable-sync-root
com.apple.fileprovider.trash
checkExistingTrashFolder(at:)
found a trash folder we didn't create (missing xattr), adding the trash xattr
[INFO]  %{public}@
com.apple.fssync.fstree
FSEvent stream got reason: 
Unable to resolve FSEvent item attributes for event on fileID(
Delivering FSEvent notification for change on 
Dropping fsevent for 
dropping fsevent without file ID (event#
Handling FSEvent for 
can't resolve the trash folder after receiving an fsevent in the trash: 
Ignoring FSEvent on the trash
starting to observe fsevent on %@ (was %@)
can't activate subscription on 
historical fsevents not available
creating a new fsevents stream
kernel dropped fsevents
root needs deep scan
OS_os_log
_TtC9libfssync13DocumentWharf
label
fsRoot
wharfHandle
deferredWQ
invalidated
activated
requestedXattrs
i16@?0i8i12
Cannot clear deletion directory: 
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FileProviderDaemons_Sim/FileProvider-265/fssync/libfssync/wharf/DocumentWharf.swift
i32@?0^{fpfs_item_handle=QQII*Q}8^{fpfs_item_handle=QQII*Q}16q24
Failed to set _kCFURLIsExcludedFromCloudBackupKey on %@
Failed to set _kCFURLIsExcludedFromCloudBackupKey on %@: %@
i20@?0^{fpfs_item_handle=QQII*Q}8B16
: wharf-housekeeping
subTables
com.apple.fileproviderd.background-download
description
corrupted table background_downloader: 
SELECT id, state, reason
  FROM background_downloader
UPDATE background_downloader
   SET state = 
  finished background download <i:%@>
  throttling background download <i:%@>
DELETE FROM background_downloader
      WHERE id = 
SELECT id, reason
  FROM background_downloader
 WHERE state = 
 ORDER BY scheduling_timestamp
CREATE TRIGGER "background_download/fs_snapshot/insert"
 AFTER INSERT ON fs_snapshot
  WHEN new.metadata_is_in_pinned_folder AND new.metadata_is_dataless
BEGIN
  SELECT SCHEDULE_BACKGROUND_DOWNLOAD(new.id, 1, 
CREATE TRIGGER "background_download/fs_snapshot/update"
 AFTER UPDATE ON fs_snapshot
  WHEN (old.metadata_is_dataless AND old.metadata_is_in_pinned_folder)
       != (new.metadata_is_dataless AND new.metadata_is_in_pinned_folder)
BEGIN
  SELECT SCHEDULE_BACKGROUND_DOWNLOAD(new.id,
                                      new.metadata_is_dataless AND new.metadata_is_in_pinned_folder,
                                      
DROP TRIGGER "background_download/fs_snapshot/insert"
DROP TRIGGER "background_download/fs_snapshot/update"
CREATE TRIGGER "background_download/fs_snapshot/delete"
 AFTER DELETE ON fs_snapshot
BEGIN
  DELETE FROM background_downloader
   WHERE id = old.id;
CREATE TRIGGER "background_download/fs_snapshot/insert"
 AFTER INSERT ON fs_snapshot
  WHEN new.metadata_is_pinned != 0 AND new.metadata_is_dataless
BEGIN
  SELECT SCHEDULE_BACKGROUND_DOWNLOAD(new.id, 1, 
CREATE TRIGGER "background_download/fs_snapshot/update"
 AFTER UPDATE ON fs_snapshot
  WHEN (old.metadata_is_dataless AND old.metadata_is_pinned) != (new.metadata_is_dataless AND new.metadata_is_pinned)
BEGIN
  SELECT SCHEDULE_BACKGROUND_DOWNLOAD(new.id,
                                      new.metadata_is_dataless AND new.metadata_is_pinned,
                                      
CREATE TRIGGER "background_download/purge"
 AFTER UPDATE ON background_downloader
  WHEN new.reason = 0 AND new.state != 
BEGIN
  DELETE FROM background_downloader
   WHERE id = new.id;
CREATE INDEX background_downloader_state ON background_downloader(state)
CREATE TABLE background_downloader (
  id BLOB PRIMARY KEY,
  scheduling_timestamp INT NOT NULL,
  state TINYINT NOT NULL,
  reason INT NOT NULL
new background work scheduled
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FileProviderDaemons_Sim/FileProvider-265/fssync/libfssync/implementations/file-system/persistence/SQLBackgroundDownloader.swift
missing database
SELECT id
  FROM background_downloader
 WHERE state = 
SELECT COUNT(id)
  FROM background_downloader
 WHERE state = 
  unscheduling background download <i:%{public}@ reason:%{public}@>
UPDATE background_downloader
   SET reason = reason & ~
  scheduling background download <i:%{public}@ reason:%{public}@>
UPDATE background_downloader
   SET reason = reason | 
INSERT INTO background_downloader
     VALUES (
SELECT id FROM background_downloader WHERE id = 
com.apple.decmpfs
fpfs_create_dataless_fault_at_block_invoke
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FileProviderDaemons_Sim/FileProvider-265/fssync/libfssync/fpfs_util/fpfs_dataless_fault.c
md->is_dataless
i20@?0i8^{dirent=QQSSC[1024c]}12
i16@?0^{dirent=QQSSC[1024c]}8
fpfs_openbyid_ext
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FileProviderDaemons_Sim/FileProvider-265/fssync/libfssync/fpfs_util/fpfs_document_tracking.m
errno != 0
_parse_fileattrs
source.objtype != VREG
_pagetoken_validate
new_pagetoken.dev_id != 0
_try_openbyid
/.vol/%d/%llu
_openbyparentidandname_retry
{fpfs_finder_info=b1b1b1b1b1i}10@?0{fpfs_finder_info=b1b1b1b1b1i}8
cores
home
sbin
private
Users
Applications
Volumes
Library
System
Network
Documents
Pictures
Movies
Music
Downloads
%llu:%d:%d
i16@?0^{fpfs_xattr=^{fpfs_xattr}*Q[0c]}8
fpfs_fset_metadata
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FileProviderDaemons_Sim/FileProvider-265/fssync/libfssync/fpfs_util/fpfs_metadata.c
((ptrdiff_t)buf - (ptrdiff_t)original_buf) == (ptrdiff_t)buf_size
com.apple.fileprovider.dir#N
%.*s/
folder
_cwd_fd
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FileProviderDaemons_Sim/FileProvider-265/fssync/libfssync/fpfs_util/fpfs_package.c
fd >= 0
i8@?0
i16@?0r*8
unlabeled
fp_task_tracker_is_cancelled
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FileProviderDaemons_Sim/FileProvider-265/fssync/libfssync/utilities/fp_task_tracker.m
task_tracker
fp_task_tracker_cancel
q24@?0@"NSString"8@"NSString"16
v40@?0r^v8{_NSRange=QQ}16^B32
com.apple.metadata:_kMDItemUserTags
com.apple.lastuseddate#PS
com.apple.metadata:kMDItemFavoriteRank
com.apple.favorite-rank.number#PS
com.apple.fileprovider.pinned#P
com.apple.ResourceFork
com.apple.LaunchServices.OpenWith
com.apple.cs.CodeSignature
com.apple.cs.CodeDirectory
com.apple.cs.CodeRequirements
com.apple.FinderInfo
com.apple.trash.put-back.path#PS
com.apple.trash.put-back.icloud-parent-id#PS
com.apple.last-used.time#PS
com.apple.metadata:
com.apple.quarantine
com.apple.icloud.itemName
MDPropertyCopyEncodedDataForLastUsedDateWithTimeSpec
/System/Library/PrivateFrameworks/MetadataUtilities.framework/MetadataUtilities
MDPropertyDecodedLastUsedDateTimeSpec
MDPropertyCopyEncodedDataForFavoriteRank
MDPropertyDecodedFavoritRank
user-package-extension-list
_ulstyle
_ultheme
abbu
acplugin
action
adiumemoticonset
adiumicon
adiumlibpurpleplugin
adiumlistlayout
adiumlisttheme
adiummenubaricons
adiummessagestyle
adiumplugin
adiumscripts
adiumserviceicons
adiumsoundset
adiumstatusicons
adjustments
agilekeychain
alfredpreferences
apifile
aplibrary
aplmodel
appdownload
appex
appsnapshot
assembly
assistant
avchd
band
bbpackage
bbprojectd
bentodb
bentotemplate
book
booktemplate
brushes
bundle
caction
cannedsearch
card
cardsmbornes
cbaccounts
chocoimg
cinemagraph
colloquyemoticons
colloquystyle
colorpicker
comic
component
cpimage
cplink
cptext
cpweb
cyndata
cyndicate
dashsync
dayone
dbwidget
definition
dictionary
discovery
dist
distz
dlist
docset
download
dsclext
dsym
dvdmedia
dvdproj
dvtplugin
dylib
effects
emberbackup
embermdbackup
embersnap
eomodeld
epub
evocamtimelapse
eyetv
eyetvloc
eyetvsched
eyetvtdmp
familyfile10
favorite
fcarch
framework
fullbackup
gbproj
gchdb
gdiagramstyle
glibb
goodnotes
gputrace
gradients
graffle
gspak
gstencil
gtemplate
haslibrary
help
highland
hptask
hsproj
huginautocp
hvfproject
hvpl
hype
hypeplugin
ibank
ibatemplate
ibooks
ibplugin
icbu
ideplugin
ilmbplugin
imovielibrary
incrementalbackup
instrdst
internetconnect
ipscannerlaunchextension
itlb
itlp
itmsp
itmsp-app
iwdgt
iwork-tmp
iwwebpackage
kext
kextcache
key-tef
keychain-db
keychain
latexitplugin
latexpalette
layerstyles
lh3d
linea
listlayout
listtheme
lmnr
logarchive
logic
logicx
loginplugin
lpdf
lrdata
lslibrary
mailstationery
mbornes
mdimporter
mdlabels
menu
mftpkg
migratedaplibrary
migratedphotolibrary
mindnode
mindproj
mkext
mlproj
moneywell
monitor
monitorpanel
morphx
mpbinaries
mpkg
mproject
mqtz
mwand
nemolicense
networkconnect
neunote
nmbtemplate
nnwstyle
npbackup
numbers-tef
numbers
octest
ofocus
ofocus-archive
ofocus-backup
ofocus-perspective
oo3template
ooxsl
oplx
opvault
osax
pages-tef
pages
patch
pbproj
pbxproj
pc3calc
pc3cons
pc3conv
pc3func
pdfd
photo
photolibrary
photoslibrary
pigment
pkcs12
pkpass
playground
playgroundbook
plugin
pluginkit
pocketcasd
prefpane
psdownload
ptest
pvback
pvmdb
pvoc
pvxmdb
pzdoc
qlgenerator
qtpxcomposition
quicken
quickpick
qvlibrary
qvnote
qvnotebook
radarplugin
raft
ramd
rcproject
rdarplugin
ripit
rtfd
saver
scene
scptd
scriv
scsf
sdsp
seemode
seetext
seplugin
service
sfrframe
shapes
simdevicetype
simruntime
sites
sites2
sketchpad-flat
sketchpad-pkg
skypechatstyle
slidesaver
soundhoundbookmark
soundhoundhistory
soundsmbornes
sparsebundle
spdoc
spreporter
ssdownload
storyboardc
studydeck
suggestionsassets
task
template
testrun
textbundle
textexpanderalias
textexpanderbackup
textexpanderlocal
textexpandersettings
textstyles
theater
theme
themembornes
themepack
tmbundle
tmplugin
trace
transport
ulbackup
ulproject
ulysses
vellum
viennastyle
wand
wdgt
webplugin
webtemplate
webtheme
wflow
whink
workflow
xcappdata
xcarchive
xccrashpoint
xcdatamodel
xcdatamodeld
xcmappingmodel
xcode
xcodeproj
xcplaygroundpage
xcplugin
xcprocessorusagepoint
xcresult
xcsintegration
xcsnapshots
xctest
xctoolchain
xcworkspace
xcyndicate
(A Document Being Saved
.dat.nosync
initWithMachServiceName:
setDelegate:
resume
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
listener:shouldAcceptNewConnection:
start
.cxx_destruct
_listener
init
setFpfsClass:
setFpfsSQLBackupManagerClass:
setFpfsSQLRestoreManagerClass:
currentRunLoop
dealloc
fp_realpath
fileSystemRepresentation
fp_errorWithPOSIXCode:
activateSubscription:error:
stringWithFormat:
stringByDeletingLastPathComponent
UUID
UUIDString
barrierFolderURL
URLByAppendingPathComponent:
subscriptionHandleTermination:
disableSubscription:
initWithPath:reader:sinceEventID:streamUUID:ignoreOwnEvents:delegate:purpose:
activateWithError:
rootParent
barrier
didProcessEventID:
didProcessBarrierEventUUID:
dispose
root
rootfd
rootFileID
delegate
lastDeliveredEventID
setLastDeliveredEventID:
eventStreamUUID
setEventStreamUUID:
state
setState:
isActivated
setIsActivated:
ignoreOwnEvents
_semaphore
_notifyStreamUUID
_notifyEventId
_reader
_purpose
_isActivated
_ignoreOwnEvents
_rootfd
_root
_rootFileID
_delegate
_lastDeliveredEventID
_eventStreamUUID
_state
length
fp_pathWithFileSystemRepresentation:
lastPathComponent
regularExpressionWithPattern:options:error:
firstMatchInString:options:range:
rangeAtIndex:
substringWithRange:
fpfs_pathRelativeToPath:
fpfs_filenameExtension
eventStreamUUIDForDevice:
initWithUUIDString:
mountPath
deviceID
_stfs
_deviceID
alloc
initWithArray:
arrayWithObject:
addObject:
array
mutableCopy
reverseInputsIntoOutputs
reverseObjectEnumerator
countByEnumeratingWithState:objects:count:
removeAllObjects
count
lastObject
removeLastObject
queue
queueWithArray:
queueWithObjects:
initWithObjects:
enqueueObject:
dequeue
_inputs
_outputs
initWithUserURL:outputUserURL:
backUpWithCompletionHandler:
backupEngine
setBackupEngine:
_backupEngine
restoreEngine
setRestoreEngine:
_restoreEngine
manager
UTF8String
processFseventBatch
initWithCapacity:
arrayWithCapacity:
suspend
setupForPath:error:
subscription:handleResetWithReason:
setUpStreamForReason:error:
_activateSubscription:error:
removeObject:
objectAtIndex:
foreachSubscriptionInState:apply:
valueForKey:
path
arrayByAddingObject:
oldestStartingPoint
liveFSEventsXPCActivityCriteria
_createStreamNamed:since:criteria:
historicalFSEventsXPCActivityCriteria
addObjectsFromArray:
eventID
finishedProcessesingHistoryJumpingTo:
setCanLearnEventID:
_queueEvents:
subarrayWithRange:
removeObjectsInRange:
objectAtIndexedSubscript:
fileID
barrierUUID
fseventAtPath:eventFlags:eventID:fileID:barrierUUID:eventIndex:eventCount:
fp_prettyPath
fpfs_initWithFSEventsFlags:
resetWithReason:
resetWithReason:dropFSEventID:
hasPrefix:
fpfs_isSafeSaveTempFile
isEqualToString:
eventIsLive:
subscription:handleEventAtPath:targetItemID:eventID:flags:
stringByAppendingFormat:
stringByAppendingString:
componentsJoinedByString:
copy
_cancel
_close
initWithLabel:workloop:
subscribeToEventsAtPath:sinceEventID:streamUUID:ignoreOwnEvents:delegate:purpose:
queueEvents:stream:
flushStream
close
delegationQueue
setBarrierFolderURL:
_resetCount
_suspendCount
_liveStream
_histStream
_streamQueue
_delegationQueue
_fseventsProcessSource
_fseventsToProcess
_maxFSEventQueueSize
_fseventProcessBatchSize
_isCancelled
_drainEvents
_volume
_processHistoryToEvent
_historyDoneJumpToEvent
_subscriptions
_log
_barrierFolderURL
string
appendFormat:
objectForKey:
unsignedLongLongValue
initWithPath:fileID:flags:eventID:
insertObject:atIndex:
fpfs_extractFSEventsBarrierUUID
fpfs_extractFSEventsNotifyUUID
isBarrier
setPath:
canLearnEventID
isNotification
_path
_fileID
_flags
_eventID
_canLearnEventID
_barrierUUID
_isNotification
enumerationResultsDidChange
didUpdateItem:
invalidate
enumerateItemsFromPage:reply:
enumerateChangesFromToken:reply:
indexChangeDelegate
domain:didGetNotifiedOfChangedItems:deletedIDs:belowItemIdentifier:pageToken:anchor:
contentsOfDirectoryAtPath:error:
initWithIdentifier:displayName:pathRelativeToDocumentStorage:
sharedManager
currentPersona
generateAndRestorePersonaContextWithPersonaUniqueString:
userPersonaUniqueString
fp_createPathIfNeeded:
cloudStoragePath
appSupportPath
fp_shortDescription
isHidden
isEnterpriseDomain
homeDirectory
longAtIndex:
changes
initWithBase64EncodedString:options:
initWithBytesNoCopy:length:freeWhenDone:
base64EncodedStringWithOptions:
openAtURL:withFlags:error:
setupPragmas
lastError
close:
userVersion
useBatchingWithDelay:changeCount:
setUserVersion:
stringAtIndex:
integerAtIndex:
unsignedIntAtIndex:
boolAtIndex:
stringByAppendingPathComponent:
bindStringParameter:
serialQueue
bindBooleanParameter:
assertOnQueue
lastInsertedRowID
proxifiedDescription
operationDidProgressWithInfo:error:completionHandler:
pathComponents
initWithName:bundleIdentifier:
coreSpotlightIdentifier
deleteSearchableItemsWithIdentifiers:completionHandler:
newFileProviderProxyWithPID:
parentItemID
unregisterLifetimeExtensionForObject:
shortDescription
newFileProviderProxyWithoutPIDWithTimeout:
fp_userInfoFPItem
generatePlaceholderIdentifier
nsfpRequestWithIdentifier:forSession:
isCancelled
fetchEnumeratorWithSettings:observer:request:lifetimeExtender:completionHandler:
userInfo
localizedName
rootItemIDWithProviderIdentifier:domainIdentifier:
fractionCompleted
initWithSuiteName:
doubleForKey:
isFromPOSIX
boolForKey:
defaultManager
fileExistsAtPath:
fp_relationshipToItemAtURL:
moveItemAtURL:toURL:error:
extensionBackend
startAndGetSyncAnchor:
itemForURL:request:completionHandler:
discreteProgressWithTotalUnitCount:
setCancellable:
identifier
pinItemWithID:request:completionHandler:
initWithDomain:
rootURLs
updateRootAfterDomainChangeWithError:
backendQueue
needsRootCreation
createRootByImportingURL:error:
removeAllFilesWithError:
isProviderForURL:
dumpStateTo:limitNumberOfItems:
itemIDForURL:request:completionHandler:
itemForItemID:request:completionHandler:
startProvidingItemAtURL:readingOptions:request:completionHandler:
downloadItemWithItemID:request:progress:completionHandler:
evictItemAtURL:request:completionHandler:
evictItemWithID:request:completionHandler:
itemChangedAtURL:request:
URLForItemID:creatingPlaceholderIfMissing:ignoreAlternateContentsURL:request:completionHandler:
fakeFSEventAtURL:
enumerateMaterializedSetFromSyncAnchor:completionHandler:
currentMaterializedSetSyncAnchorWithCompletionHandler:
didChangeItemID:
enumerateWithSettings:lifetimeExtender:observer:completionHandler:
fetchFSItemsForItemIdentifiers:materializingIfNeeded:request:completionHandler:
decorateItems:completionHandler:
nonEvictableSpace
reimportItemsBelowItemWithID:removeCachedItems:markItemDataless:completionHandler:
createIndexerWithExtension:enabled:error:
valuesForAttributes:forURL:request:completionHandler:
materializedURLForItemID:
isItemDataless:
createItemBasedOnTemplate:fields:urlWrapper:options:bounceOnCollision:request:completionHandler:
forceIngestionForItemID:completionHandler:
forceFSIngestionForItemID:completionHandler:
forceIngestionAtURL:completionHandler:
unpinItemWithID:request:completionHandler:
setDownloadPolicy:forItemWithID:request:completionHandler:
ingestFromCacheItemWithID:requestedFields:request:completionHandler:
fetchOperationServiceOrEndpointWithRequest:completionHandler:
resolveProviderItemID:completionHandler:
isAllowedToProvideItemID:toConsumerWithIdentifier:
registerXPCActivities
itemIdentifier
capabilities
setCapabilities:
setPinned:
setInPinnedFolder:
isFolder
setDownloaded:
isDownloaded
setRecursivelyDownloaded:
setMostRecentVersionDownloaded:
setSupportsMostRecentVersionDownloaded:
isDownloading
setDownloading:
isUploaded
setUploaded:
isUploading
setUploading:
fp_isLastModifiedByCurrentUser
setFp_lastModifiedByCurrentUser:
isInPinnedFolder
isPinned
uploadingError
setUploadingError:
downloadingError
setDownloadingError:
initWithContentVersion:metadataVersion:
setItemVersion:
filename
setExcludedFromSync:
setShared:
setTopLevelSharedItem:
setSharedByCurrentUser:
setSharingPermissions:
setIsContainer:
setIsContainerPristine:
setFp_appContainerBundleIdentifier:
setCloudContainerIdentifier:
setContainerDisplayName:
setFp_displayName:
setHasUnresolvedConflicts:
setDecorations:
setUserInfo:
personNameComponentsFromString:
setMostRecentEditorNameComponents:
setOwnerNameComponents:
fileURL
setFileURL:
setTypeIdentifier:
flags
setHidden:
initWithProviderDomainID:itemIdentifier:
requestForSelf
didChangeItemID:request:completionHandler:
session
newFileProviderProxyWithoutPID
signalEnumeratorForMaterializedItemsWithCompletionHandler:
synchronousRemoteObjectProxy
purposeIdentifier
setPurposeIdentifier:
nsDomain
personaIdentifier
provider
descriptor
requestedExtendedAttributes
remoteObjectProxy
acknowledgeUserVisibleRootDidChangeForDomain:urlWrapper:completionHandler:
wrapperWithURL:readonly:error:
initFileURLWithPath:
moveItemAtPath:toPath:error:
indexer
needsAuthentication
itemID
totalUnitCount
setTotalUnitCount:
addChild:withPendingUnitCount:
fp_prettyDescription
fp_obfuscatedFilename
stringByDeletingPathExtension
displayName
providerDomainID
typeIdentifier
contentModificationDate
creationDate
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
code
domain
fileProviderErrorForCollisionWithItem:
reloadDomain:unableToStartup:completionHandler:
initWithProviderDomainID:itemIdentifier:parentItemIdentifier:filename:isDirectory:
searchQuery
enumeratedItemID
requestEffectivePID
requestForPID:
wantsTrashEnumeration
initWithProviderID:domainIdentifier:itemIdentifier:
initWithDomain:callbackQueue:
setCancellationHandler:
downloadURL:recursively:request:withCompletion:
initWithDomain:code:userInfo:
cancel
put:
coordinateWritingItemAtURL:options:error:byAccessor:
localizedDescription
setIndexChangeDelegate:
currentSyncAnchorWithCompletion:
keepAliveConnectionForRegisteredObserver:
beginRequestWithDomain:alternateContentsDictionary:usesFPFS:
providePlaceholderAtURL:completionHandler:
startProvidingItemAtURL:readingOptions:completionHandler:
evictItemAtURL:completionHandler:
itemChangedAtURL:completionHandler:
identifierForItemAtURL:completionHandler:
itemForItemID:completionHandler:
itemForURL:completionHandler:
trashItemAtURL:completionHandler:
bulkEvictItemsWithItemIDs:completionHandler:
fetchServicesForItemID:completionHandler:
fetchVendorEndpoint:
fetchOperationServiceEndpoint:
dropDomainWithCompletionHandler:
fetchCustomPushTopicsWithCompletionHandler:
wakeForPushWithCompletionHandler:
valuesForAttributes:forItemID:completionHandler:
didChangeItemID:completionHandler:
URLForItemID:creatingPlaceholderIfMissing:ignoreAlternateContentsURL:completionHandler:
setAlternateContentsURL:forDocumentWithItemID:completionHandler:
didUpdateAlternateContentsDocumentForDocumentWithItemID:completionHandler:
deleteSearchableItemsWithSpotlightDomainIdentifiers:domainIdentifier:completionHandler:
removeTrashedItemsOlderThanDate:domainIdentifier:completionHandler:
dumpInternalStateToTermDumper:domainIdentifier:completionHandler:
indexOneBatchInDomain:completionHandler:
indexOneBatchInDomain:fromAnchor:toAnchor:updatedItems:deletedItems:completionHandler:
fetchCurrentIndexingAnchorForDomain:completionHandler:
dropIndexForDomain:completionHandler:
dumpIndexStateForDomain:toFileHandler:completionHandler:
contentsForItemWithIdentifier:version:request:completionHandler:
updateExistingContents:ofItemWithIdentifier:existingVersion:toVersion:request:completionHandler:
changeItem:baseVersion:changedFields:contents:options:completionHandler:
importDidFinishWithCompletionHandler:
_test_callFileProviderManagerAPIs:
startOperation:toFetchThumbnailsForItemIdentifiers:size:completionHandler:
preflightReparentItemID:underParentID:reply:
deleteItemsWithIDs:baseVersions:options:reply:
singleItemChange:changedFields:bounce:completionHandler:
bulkItemChanges:changedFields:completionHandler:
createItemBasedOnTemplate:fields:contents:options:bounce:completionHandler:
fetchHierarchyForItemID:recursively:reply:
fetchDefaultContainerForBundleIdentifier:defaultName:inDomainIdentifier:reply:
fetchItemID:reply:
preflightTrashItemIDs:completionHandler:
fetchPublishingURLForItemID:completionHandler:
disconnectDomainID:options:completionHandler:
performActionWithIdentifier:onItemsWithIdentifiers:domainIdentifier:completionHandler:
wakeForSessionIdentifier:completionHandler:
attemptRecoveryFromError:optionIndex:completionHandler:
userInteractionErrorsForPerformingAction:sourceItems:destinationItem:completionHandler:
fetchTrashIdentifiersWithCompletionHandler:
fetchAndStartEnumeratingWithSettings:observer:request:completionHandler:
unsignedLongAtIndex:
dataAtIndex:
doubleAtIndex:
longLongAtIndex:
unsignedLongLongAtIndex:
intAtIndex:
shortAtIndex:
unsignedShortAtIndex:
charAtIndex:
unsignedCharAtIndex:
setLastError:
bindUnsignedLongParameter:
bindIntegerParameter:
bindUnsignedShortParameter:
bindShortParameter:
bindUnsignedCharParameter:
bindCharParameter:
bindDoubleParameter:
unarchivedObjectOfClass:atIndex:
archivedDataWithRootObject:requiringSecureCoding:error:
performWithFlags:action:
stringWithFileSystemRepresentation:length:
itemVersion
metadataVersion
contentVersion
versionIdentifier
isTrashed
documentSize
isUserWritable
isUserExecutable
isPackage
childItemCount
isPathExtensionHidden
lastUsedDate
tags
favoriteRank
extendedAttributes
parentItemIdentifier
setFilename:
ownerNameComponents
preformattedOwnerName
mostRecentEditorNameComponents
preformattedMostRecentEditorName
isExcludedFromSync
isShared
isTopLevelSharedItem
isSharedByCurrentUser
sharingPermissions
isContainer
isContainerPristine
fp_appContainerBundleIdentifier
cloudContainerIdentifier
containerDisplayName
fp_displayName
hasUnresolvedConflicts
boolValue
decorations
setFsID:
setFormerIdentifier:
initWithProviderDomainID:itemIdentifier:parentItemIdentifier:filename:typeIdentifier:
initWithUnsignedInt:
setChildItemCount:
setDocumentSize:
setExtendedAttributes:
setTrashed:
setUserReadable:
setUserWritable:
setUserExecutable:
setPathExtensionHidden:
setFlags:
setContentModificationDate:
setCreationDate:
setFavoriteRank:
setTags:
setLastUsedDate:
setFileSystemFilename:
stringFromPersonNameComponents:
domain:didIndexOneBatchWithError:updatedItems:deletedIDs:anchor:anchorPersisted:
fp_isFileProviderError:
setPostFlushHook:
setTraced:
setShouldUseWALJournalMode:
useBatchingOnTargetQueue:delay:changeCount:
setProfilingHook:
synchronousMode
setSynchronousMode:
groupInBatch:
registerFunction:nArgs:handler:
forceBatchStart
initWithBytes:length:
matchesInString:options:range:
range
initWithPattern:options:error:
initWithLabel:color:
color
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
removeItemAtPath:error:
coordinateAccessWithIntents:queue:byAccessor:
waitUntilAllOperationsAreFinished
prettyDescription
registerAnchor:
indexOneBatchWithCompletionHandler:
initWithExtension:domain:enabled:
extensionIndexer:didIndexOneBatchWithError:updatedItems:deletedIDs:anchor:anchorPersisted:
setEnumeratedItemID:
registerLifetimeExtensionForObject:
formerItemID
fp_isSyncAnchorExpiredError
setDateStyle:
setTimeStyle:
stringFromDate:
fp_stringByDeletingPathBounceNo:andPathExtension:
unsignedIntegerValue
fileURLWithPath:
initWithInteger:
dateAtIndex:
removeItemAtURL:error:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
integerValue
unsignedIntValue
initWithUserURL:
restoreWithCompletionHandler:
makeNextFlushFullSync
flush
fetchSwift:error:
next
executeSwift:error:
bindUnsignedIntegerParameter:
bindLongParameter:
isNullAtIndex:
bindObjectParameter:
writingIntentWithURL:options:
readingIntentWithURL:options:
fp_maximumBounceLevel
setUnderlyingQueue:
setMaxConcurrentOperationCount:
fp_realpathURL
pathExtension
label
group
cancelled
numberWithUnsignedChar:
stringWithUTF8String:
setObject:forKeyedSubscript:
allKeys
compare:
sortedArrayUsingComparator:
objectForKeyedSubscript:
dataWithPropertyList:format:options:error:
enumerateByteRangesUsingBlock:
dataWithBytesNoCopy:length:freeWhenDone:
propertyListWithData:options:format:error:
setWithObjects:
unarchivedObjectOfClasses:fromData:error:
intValue
firstObject
arrayWithObjects:count:
initWithDefaults:key:
containsObject:
contains:
add:
remove:
lowercaseString
FPDNotReachableServer
NSXPCListenerDelegate
NSObject
FSChangeSubscription
FSPathAdditions
FSVolume
Queue
FPFSSQLBackupManager
FPFSSQLRestoreManager
SwiftWorkaround
FSChangeMonitor
FSChangeRecord
fp_task_tracker
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v16@0:8
@"NSXPCListener"
@68@0:8@16@24Q32@40B48@52@60
B24@0:8^@16
v24@0:8Q16
i16@0:8
v20@0:8B16
@"NSObject<OS_dispatch_semaphore>"
@"NSUUID"
@"FSChangeMonitor"
@"NSString"
@"<FSChangeSubscriptionDelegate>"
@20@0:8i16
{statfs="f_bsize"I"f_iosize"i"f_blocks"Q"f_bfree"Q"f_bavail"Q"f_files"Q"f_ffree"Q"f_fsid"{fsid="val"[2i]}"f_owner"I"f_type"I"f_flags"I"f_fssubtype"I"f_fstypename"[16c]"f_mntonname"[1024c]"f_mntfromname"[1024c]"f_flags_ext"I"f_reserved"[7I]}
@24@0:8@16
v24@0:8@16
@"NSMutableArray"
@32@0:8@16@24
v24@0:8@?16
@"_TtC9libfssync19FPFSSQLBackupEngine"
@"_TtC9libfssync20FPFSSQLRestoreEngine"
@60@0:8@16Q24@32B40@44@52
B32@0:8@16^@24
v32@0:8Q16@?24
^{fpfs_fsevent_stream=}40@0:8@16Q24@32
B32@0:8q16^@24
v32@0:8@16^{__FSEventStream=}24
B24@0:8Q16
v60@0:8@16I24Q28Q36@44I52I56
v24@0:8q16
v28@0:8q16B24
^{fpfs_fsevent_stream=}
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_dispatch_source>"
@"FSVolume"
@"NSObject<OS_os_log>"
@"NSURL"
@44@0:8@16Q24I32Q36
I16@0:8
@"NSObject<OS_dispatch_group>"
[NOTICE] %s starting for euid %u.
[DEBUG] with fpfs support. debug logging enabled
[ERROR] Could not setup dirhelper suffix: %{errno}d
[WARNING] Unable to activate VNODE rapid aging: %{errno}d
[CRIT] Running as euid 0. We will keep running, but deny all IPCs.
Creating new FSEvent stream %s
Suspending FSEvent stream %s
Resuming FSEvent stream %s <XPC activity already running>
Resuming FSEvent stream %s <XPC activity running>
Stop processing of FSEvents on stream %s
Defer processing of FSEvents on stream %s per XPC activity
Observing %@
Creating live stream with name %s since %u
Creating historical stream with name %s since %u
We have too many events in the queue, blocking until events are flushed
Caught up historical fsevents to live events
[DEBUG] 
%llx fsevent:%u/%u path:'%@' fileID:%llu flags:%@ id:%llu
[INFO] fsevents id wrapped
[INFO] user dropped fsevents
[INFO] dropped fsevents
[INFO] done processing history
[DEBUG] %@ ignored (own event)
[DEBUG] %@ (handling barrier)
[DEBUG] %@ (ignored uninteresting path)
[DEBUG] %@ event at an ignored path
[DEBUG] %@ root changed (historical event: ignored)
[INFO] %@ root needs deep-scan
Cannot stat root at '%@' after fsevent:%{errno}d
The root fileID changed from %llu to %llu
[DEBUG] %@ processing
resetting the %@ because of %@
creating the new stream
suspending - suspendCount:%d->%d
resuming - suspendCount:%d->%d
Starting live stream
Starting historical stream
Dropping FSEvent, eventPaths=%p with numEvents=%zd (eventInfo.count=%lu): %@
draining %zd fsevents
Got event: #%u ino:%llu at '%@'
fileproviderd
Blah
@(#)PROGRAM:fileproviderd  PROJECT:FileProvider-265
ReconciliationTable
wharf
NSFileProviderItemCapabilities
fpfs_pagetoken
os_unfair_lock_s
_opaque_pthread_cond_t
_opaque_pthread_mutex_t
NSFileProviderSyncAnchor
NSFileProviderPage
NSFileProviderItemField
fpfs_finder_color
NSFileProviderItemDecorationIdentifier
NSFileProviderDownloadPolicy
URLResourceKey
NNSURLResourceKey
NSFileProviderItemIdentifier
FPProviderDomainID
FileAttributeKey
NNSFileAttributeKey
Code
NPQLSqliteErrorCode
__C_Synthesized
PQLSqliteError
NPQLSqliteErrorCode
PQLPerformFlags
FPFSSetMetadataFlags
CFError
NCFErrorRef
fpfs_xattr
NSFileProviderError
NNSFileProviderErrorCode
Code
NNSFileProviderErrorCode
fsid
OSLogType
Nos_log_type_t
fpfs_metadata
fpfs_item_handle
fpfs_tag_data
timespec
fpfs_item_type
Foundation
FPFSEnumerator
FPFSObserver
ReconciliationMutation
ReconciliationSideMutation
Filename
TrashMetadata
ItemMetadata
CodingKeys
InternalPathsManager
DomainStorageKind
VFSLookupItemContinuation
CodingKeys
SQLThrottler
ThrottlingError
SQLFields
PersistenceTrigger
JobRegistry
FileItemID
SQLBackupManifest
SQLItemJobRegistry
SQLItemJobID
MultiplexingEnumerator
FetchableToken
MultiplexedChangeToken
CodingKeys
ProxyCancellable
ProxyOperationClient
FPFSServicerExtender
FPFSOperationServicer
VFSStagedContext
CodingKeys
SwappedReconciliationTable
FPFileTreeLifetimeExtender
FPFileTree
DummyEnumeratorObserver
DownloadContext
DownloadProgressMonitor
DownloadExpirationPolicy
fractionCompleted
AnyDatabaseDelegate
AnyDatabaseDelegateImpl
VFSVersion
VFSItem
CodingKeys
libfssync
ObservedEnumerator
FPDDomainFPFSBackend
WeakEnumerator
StartStatus
ItemLookupResult
DatabaseDelegate
ItemA ItemB
JobLimit
JobLock
PersistenceCounters
Database
MaterializationRequest
JobTreeEffectType
JobLimitCategory
MaterializationError
ItemKindMismatchStruct
DownloadCancelled
DirectoryChangedStruct
ItemNotEvictableStruct
CapturedContentMissingStruct
CodingKeys
ItemNotFoundStruct
ItemCollisionStruct
CannotBounceStruct
ContentUnavailableStruct
DirectoryNotEmptyStruct
VersionConflictStruct
ItemMismatchStruct
LookupNotPermittedStruct
FileTreeError
CodingKeys
TaskTracker
LifetimeError
ReconcileItem
ReconcileChildren
ReconcileAfterPropagation
Reconciliation
ReconciledPropagationStatus
DecoratedExtensionEnumerator
LoggerProtocol
UpdateDiskImportStatus
SelectNextDirectoryForDiskImport
ContinueDiskImport
UnfaultDirectoryAndChildren
MarkDirectorDiskImportAsDone
DiskImportFinished
DiskImportStatus
DiskImport
OS_os_log
PropagationJob
StageCreatedItem
CreateItem
StageUpdatedItem
UpdateItem
DeleteItem
Propagation
PropagationError
ContentFetchingStatus
ItemPropagationStatus
InheritFromCodable
SyncEngine
CodingKeys
SubFPCTLTermDumper
FPCTLTermDumper
BlockingQueue
DiskEnumerator
PackageInternalLookupPolicy
FPItem
SQLFields
FPFSExtensionEnumerator
FPFileTreeChangeHandler
FileTreeWriter
FileTreeChange
SQLDatabase
SQLDatabaseVersion
Locked
ChangeEnumerator
VFSVersionSQLFields
FSDirectoryLister
VFSDirectoryLister
URLDirectoryLister
CodingKeys
SyncState
SyncStateKey
Queue
Dumper
StringDumper
SubStringDumper
DebugLogDumper
FPItemVersionData
NSFileProviderItemVersionWrapper
CodingKeys
PaginatedContinuation
SQLSnapshot
CodingKeys
ItemStateVersion
ItemState
CodingKeys
StringLogger
FormatStringPart
ReconciliationID
BitSetIterator
BitSet
ItemChange
FileItemVersionSQLFields
SnapshotItemSQLFields
SwappedJobRegistry
SnapshotItem
JobID
AsyncJob
ItemAsyncJob
Tags
CodingKeys
AnyDirectionJob
FSOrFPJob
FileTreeProtocol
ItemType
SwappedDatabase
VFSItemID
ConsoleLogger
FileItem
ID ContentVersion StructuralVersion
FPFSMaterializedSetAnchor
CodingKeys
Mutation
NSecTimestamp
NSecTimeInterval
VFSItemHandle
CodingKeys
DocumentTrackingTombstoneSlayer
SnapshotMutation
JobReason
CodingKeys
Requestor
#*,./
VFSFaultingContext
CodingKeys
SQLJobRegistry
SQLJobID
ItemDecoration
UserInfo
CodingKeys
SQLTable
FPItemEnumerator
Loggable
LoggableRepresentation
LoggablePrimitive
Logger
CodableClass
CodableClassWrapper
CodableClassCodingKeys
FileItemKind
Fields
ConcreteDatabase
DatabaseError
SQLFields
SQLFieldType
SQLMultiColumn
SQLFields
SQLCodable
SQLFileTreeSidedFieldType
SQLFileTreeSidedCodable
SQLDecodingError
VFSLookupScope
Iterator
Index
OrderedDictionary
SQLSyncStateTable
ThrottlingKey
ThrottlingParameters
JobThrottlingState
Kind
JobThrottle
FileProviderPageToken
CodingKeys
StagedContext
CodingKeys
SQLReconciliationTable
DecoratedReconciliation
SQLFields
AsyncJobCode
JobSQLFields
ItemStateSQLFields
SQLFields
FileTree
Continuation
ScanReturnCode
CodingKeys
ContinuationScheduling
EitherOrBoth
JobWaitCondition
SharedScheduler
Version
FileItemVersion
CapturedContent
CodingKeys
FPFSSyncEngine
DummyObserver
LifetimeExtender
FPFSIndexer
FPFSIndexerAnchor
CodingKeys
Phase
ChildrenStatus
ItemReconciliation
ItemReconciliationHalf
ItemOrID
ReconcileAfterBounce
BounceItem
Bouncing
Snapshot
SQLFields
FPFSSQLBackupEngine
FetchItemMetadata
SnapshotItemMetadata
SnapshotFileContent
DeleteItemFromSnapshot
DeleteFolderFromSnapshotIfEmpty
DeleteRejectedItemInTree
FaultDirectoryInTree
UnfaultDirectoryInTree
ReSnapshotChildren
FetchChildrenMetadata
UpdateChildrenStatus
CancelFetchFileContent
CollectCapturedContent
MergeItems
Ingestion
IngestionMode
FileTreeSide
Path
JobSchedulingState
MaterializeItem
StartMaterialization
EvictItem
EvictChildren
StartEviction
Materialization
FPFSSQLRestoreEngine
RestoreUpgradeSchemaVFSFileTree
RestoreUpgradeSchemaFPFileTree
VFSIDLookupCache
VFSFileTree
Signpost
DocumentWharf
SQLBackgroundDownloader
BackgroundWorkReason
So8NSObjectC
9libfssync8DatabaseCyxq_GSgXw
So28NSFileProviderDownloadPolicyV
So38NSFileProviderItemDecorationIdentifiera
So8NSStringC
So17fpfs_finder_colorV
s5UInt8V
So18NSFileProviderPagea
So6NSDataC
So23_opaque_pthread_mutex_tV
s4Int8V_A55Bt
So22_opaque_pthread_cond_tV
s4Int8V_A39Bt
So16os_unfair_lock_sV
So14fpfs_pagetokenV
So30NSFileProviderItemCapabilitiesV
So5wharfV
Spys4Int8VGSg
So4fsidV
s5Int32V_A2Bt
s6UInt64V_A2Bt
So16NSURLResourceKeya
s5Int32V_ABt
So23NSFileProviderErrorCodeV
SC23NSFileProviderErrorCodeLeV
So7NSErrorC
So10fpfs_xattrV
SpySo10fpfs_xattrVGSg
SPys4Int8VG
So20FPFSSetMetadataFlagsV
SC18PQLSqliteErrorCodeLeV
So18PQLSqliteErrorCodeV
So18NSFileAttributeKeya
So15PQLPerformFlagsV
So13fpfs_metadataV
So14fpfs_item_typeV
s6UInt16V
s5Int64V
So8timespecV
So13fpfs_tag_dataV
So14fpfs_fileattrsV
So16fpfs_item_handleV
SPys4Int8VGSg
SvSg
So13os_log_type_ta
$ss21_ObjectiveCBridgeableP
$ss25ExpressibleByArrayLiteralP
$ss10SetAlgebraP
$ss9OptionSetP
$s10Foundation18_ErrorCodeProtocolP
$s10Foundation21_BridgedStoredNSErrorP
9libfssync22MultiplexingEnumeratorV
9libfssync12FPFSObserverCSg
yycSg
So13FPXEnumerator_pSg
So28NSFileProviderItemIdentifiera
9libfssync20FPDDomainFPFSBackendCSgXw
So18NSFileProviderPageaSg
So24NSFileProviderSyncAnchoraSg
So26OS_dispatch_source_data_or_p
9libfssync12FPFSObserverC
s5Error_pSg
SaySo6FPItemCG
SaySo8FPItemIDCG
9libfssync26ReconciliationSideMutationO
9libfssync15FileItemVersionVy07ContentD0AA0bC0PQz010StructuralD0AFQzG
9libfssync14ChildrenStatusO
9libfssync16DiskImportStatusOSg_Sb27applyInconsistentTransitiont
9libfssync22ReconciliationMutationO
9libfssync16ReconciliationIDOy0C0AA8FileItemPQzAdFQy_G
2ID9libfssync8FileItemPQz_AaDQy_t
9libfssync16ReconciliationIDOy0C0AA8FileItemPQzAdFQy_G_AIt
9libfssync16ReconciliationIDOy0C0AA8FileItemPQzAdFQy_G_AA0B12SideMutationOyq_Gt
9libfssync16ReconciliationIDOy0C0AA8FileItemPQzAdFQy_G_AA0B12SideMutationOyxGt
$ss26ExpressibleByStringLiteralP
$ss43ExpressibleByExtendedGraphemeClusterLiteralP
$ss33ExpressibleByUnicodeScalarLiteralP
9libfssync8FilenameVSg
10Foundation4DateVSg
9libfssync12FileItemKindO
s6UInt32VSg
9libfssync4TagsVSg
s6UInt64VSg
SDySS10Foundation4DataVGSg
So18FPProviderDomainIDaSgSg
s5Int32VSo18FPProviderDomainIDaSgs5Error_pIgyrzo_
s5Int32VABIgyd_
9libfssync12ContinuationC
10Foundation4DateV
9libfssync16NSecTimeIntervalV
9libfssync25VFSLookupItemContinuationC10CodingKeysO
So24OS_dispatch_source_timer_pSg
So13PQLConnectionC
9libfssync12FileTreeSideO
9libfssync13NSecTimestampVSg
9libfssync8DatabaseCyxq_GSgycSg
9libfssync20ThrottlingParametersV
9libfssync13ThrottlingKeyO9SQLFieldsOyxq__G
Say9libfssync13ThrottlingKeyO9SQLFieldsOyxq__GG
9libfssync12SQLThrottlerCyxq_G
9libfssync13ThrottlingKeyOy2IDAA8FileItemPQzAdFQy_G
G0R1_
G1R1_
9libfssync11JobThrottleV
9libfssync12SQLThrottlerCyxq_GSgXw
9libfssync12SQLThrottlerCyxq_GSgXwz_x_q_AA8FileItemRzAaFR_r0_lXX
9libfssync13NSecTimestampV
SaySiG
9libfssync8AsyncJobCyxq_GXMT
G0R2_
G1R2_
9libfssync13ThrottlingKeyO9SQLFieldsO
9libfssync15ThrottlingErrorO
9libfssync22ContinuationSchedulingO
9libfssync13ThrottlingKeyO
$s9libfssync14SQLMultiColumnP
$ss12CaseIterableP
9libfssync18PersistenceTriggerO
9libfssync16ReconciliationIDOy0C0AA8FileItemPQzAdFQy_G_AI8inParentt
9libfssync16ReconciliationIDOy0C0AA8FileItemPQzAdFQy_G_AI10fromParentt
9libfssync16ReconciliationIDOy0C0AA8FileItemPQzAdFQy_G_AA14ChildrenStatusOt
9libfssync16ReconciliationIDOy0C0AA8FileItemPQzAdFQy_G_AA16DiskImportStatusOSgt
9libfssync13ThrottlingKeyOy2IDAA8FileItemPQzAdFQy_G_s5Error_p5errort
9libfssync16ReconciliationIDOy0C0AA8FileItemPQzAdFQy_G_s5Error_pt
9libfssync15CapturedContentV_AA12FileTreeSideO2ont
9libfssync16ReconciliationIDOy0C0AA8FileItemPQzAdFQy_G_AA15CapturedContentVSgt
9libfssync19WaitConditionStatusO
$s9libfssync10FileItemIDP
9libfssync9JobReasonOyxq_G
ShySo16NSURLResourceKeyaG
9libfssync17SQLBackupManifestC
9libfssync23SQLBackupManifestRecordV
9libfssync18SQLItemJobRegistryCyxq_G
So12PQLResultSetC
9libfssync18SQLItemJobRegistryCySo6FPItemCAA7VFSItemVG
9libfssync12ItemAsyncJobCySo6FPItemCAA7VFSItemVG
9libfssync12ItemAsyncJobCyxq_G
9libfssync18SQLItemJobRegistryCyAA7VFSItemVSo6FPItemCG
9libfssync12ItemAsyncJobCyAA7VFSItemVSo6FPItemCG
9libfssync18SQLItemJobRegistryCySo6FPItemCAA7VFSItemVGSgXw
9libfssync18SQLItemJobRegistryCyAA7VFSItemVSo6FPItemCGSgXw
2ID9libfssync8FileItemPQz
9libfssync18JobSchedulingStateO
9libfssync12SQLItemJobIDV
Say9libfssync16FPItemEnumerator_pG
SaySo6FPItemCGSo18NSFileProviderPageaSgSo0bC10SyncAnchoraSgs5Error_pSgIeggggg_
SgGz_Xx
Sgs5Error_pSgIeggg_
So24NSFileProviderSyncAnchoraSgs5Error_pSgIeggg_
So13FPCancellable_p
So17FPOperationClient_p
SaySo6FPItemCGSgs5Error_pSgIeggg_
SaySo6FPItemCGSgs5Error_pSgIegng_
So6FPItemCSgIegg_
So7NSErrorCIeyBy_
So7NSArrayCSgSo7NSErrorCSgIeyByy_
So7NSArrayCSgIeyBy_
So12NSDictionaryCSgACIeyByy_
IeyB_
9libfssync13StagedContextC
9libfssync13VFSItemHandleV
9libfssync19ReconciliationTableCyq_xG
9libfssync19ReconciliationTableCyxq_GSg
So9FPDDomainCXo
So17NSFileCoordinatorC
9libfssync23FPFileTreeChangeHandlerCSg
9libfssync23DownloadProgressMonitorC
9libfssync10FPFileTreeC
9libfssync15CapturedContentV
9libfssync15FileItemVersionVyAA06FPItemD4DataVAEG
9libfssync13StagedContextCSgs5Error_pSgIeggg_
9libfssync9ItemStateVySo014NSFileProviderB10IdentifieraGz_Xx
9libfssync13StagedContextCSgs5Error_pSgIegng_
SPys4Int8VGSbIgyd_
So6FPItemCSgs5Error_pSgIeggg_z_Xx
9libfssync16VFSStagedContextC
9libfssync15CapturedContentV_So6FPItemCtSgs5Error_pSgIegng_
9libfssync15CapturedContentV_So6FPItemCtSgs5Error_pSgIeggg_
9libfssync15CapturedContentV7content_AA15FileItemVersionVyAA06FPItemG4DataVAHG7versiont
So10FPDRequestCSg
9libfssync15CapturedContentV_So6FPItemCtSgs5Error_pSgIeggg_z_Xx
So22FPSandboxingURLWrapperCSg
So6FPItemCSg
SpySo16fpfs_item_handleVGs5Int32VIgyd_
9libfssync12ContinuationCSgs5Error_pSgIeggg_
9libfssync12ContinuationCSg
SaySo6FPItemCG9libfssync14ScanReturnCodeOIeggd_
9libfssync12ContinuationCSgs5Error_pSgIegng_
9libfssync21FileProviderPageTokenC
So13FPXEnumerator_So24FPXPCAutomaticErrorProxyp
10Foundation21NSKeyValueObservationCSg
SDySo28NSFileProviderItemIdentifiera
So9FPDDomainCSg
So24OS_dispatch_source_timer_p
10Foundation4DateV_
9libfssync23DownloadProgressMonitorCSgXw
SgXw
9libfssync23DownloadProgressMonitorCSgXwz_Xx
SgXwz_Xx
So10NSProgressC10Foundation24NSKeyValueObservedChangeVySdGIeggn_
y5ItemA9libfssync16DatabaseDelegatePQz0A1BAEQzG
xSgXw
9libfssync19AnyDatabaseDelegateC
$s9libfssync16DatabaseDelegateP
9libfssync10VFSVersionV
s5Int64VSg
9libfssync12ItemMetadataV
10Foundation3URLVSgSg
9libfssync20FPDDomainFPFSBackendC
10Foundation3URLVz_Xx
So8FPItemIDCSgs5Error_pSgIeggg_
So8FPItemIDCSgSo7NSErrorCSgIeyByy_
So6FPItemCSgSo7NSErrorCSgIeyByy_
9libfssync8SignpostVz_Xx
s5Error_pSgIegg_
So10NSProgressC
So10FPDRequestC
So7NSErrorCSgIeyBy_
So8FPItemIDC
10Foundation3URLVSgs5Error_pSgIegng_
So5NSURLCSgSo7NSErrorCSgIeyByy_
s5Error_pSgSo22FPSandboxingURLWrapperCSgAEIegggg_
SaySo6FPItemCGSaySo0A2IDCGSbSo24NSFileProviderSyncAnchoraSgs5Error_pSgIegggygg_
So24NSFileProviderSyncAnchora
So7NSArrayCAB10ObjectiveC8ObjCBoolVSo24NSFileProviderSyncAnchoraSgSo7NSErrorCSgIeyByyyyy_
So24NSFileProviderSyncAnchoraSgIegg_
So24NSFileProviderSyncAnchoraSgIeyBy_
So30FPExtensionEnumerationSettingsC
So19FPDLifetimeExtender_p
So21FPXEnumeratorObserver_p
So13FPXEnumerator_pSgs5Error_pSgIeggg_
So13FPXEnumerator_pSgSo7NSErrorCSgIeyByy_
SDySo28NSFileProviderItemIdentifieraSo6FPItemCGs5Error_pSgIeggg_
SaySo28NSFileProviderItemIdentifieraG
So12NSDictionaryCSo7NSErrorCSgIeyByy_
SaySo6FPItemCGIegg_
So7NSArrayCIeyBy_
SDySo16NSURLResourceKeyaypGSgs5Error_pSgIeggg_
SaySo16NSURLResourceKeyaG
So12NSDictionaryCSgSo7NSErrorCSgIeyByy_
10Foundation3URLVSgz_Xx
So17OS_dispatch_groupC
10Foundation3URLVSgIegn_
Sbz_Xx
Sbs5Error_pSgIegyg_
So6FPItemCSgs5Error_pSgIeggg_
$s9libfssync18ObservedEnumeratorP
So9FPDDomainCSgXw
So18FPProviderDomainIDa
So20NSFileProviderDomainC
9libfssync20InternalPathsManagerC
10Foundation3URLVSg
9libfssync14FPFSSyncEngineCSg
So17OS_dispatch_queueC
So26OS_dispatch_source_data_or_pSg
SDySO
SbSg
9libfssync20FPDDomainFPFSBackendC11StartStatusO
9libfssync14WeakEnumeratorV
9libfssync18ObservedEnumerator_pSgXw
So21OS_dispatch_semaphoreC
9libfssync13DocumentWharfC
9libfssync20FPDDomainFPFSBackendCXo
9libfssync11SQLDatabaseCyAA7VFSItemVSo6FPItemCGSg
s5Error_pSgz_Xx
9libfssync21FPFSOperationServicerC
9libfssync14FPFSSyncEngineC
9libfssync9JobReasonOySo6FPItemCAA7VFSItemVG
9libfssync16ItemLookupResultVSgs5Error_pSgIegng_
9libfssync16ConcreteDatabaseCyAA7VFSItemVSo6FPItemCG
So28NSFileProviderItemIdentifieraSg
SDySo28NSFileProviderItemIdentifieras5Error_pG
SDySo28NSFileProviderItemIdentifieraSo6FPItemCG
SDySo28NSFileProviderItemIdentifieraSo6FPItemCGSgSDyABs5Error_pGSgIeggg_
SDySo28NSFileProviderItemIdentifieraSo6FPItemCGz_Xx
SDySo28NSFileProviderItemIdentifieras5Error_pGz_Xx
So6FPItemC
9libfssync6FieldsV
So23NSFileProviderItemFieldV
9libfssync9VFSItemIDO
9libfssync9VFSItemIDOAA15FileItemVersionVyAA10VFSVersionVAA0e5StateF0VyACGGIegyn_
So28NSFileProviderItemIdentifiera3for_9libfssync9RequestorO2bySi8priorityt
9libfssync15FileItemVersionVyAA10VFSVersionVAA0c5StateD0VyAA9VFSItemIDOGG
9libfssync9ItemStateVyAA9VFSItemIDOGSgAA6FieldsVs5Error_pSgIegnyg_
9libfssync9VFSItemIDOz_Xx
9libfssync8FilenameVz_Xx
9libfssync7VFSItemVz_Xx
9libfssync7VFSItemVSgs5Error_pSgIegng_
9libfssync9JobReasonOyAA7VFSItemVSo6FPItemCG
So28NSFileProviderItemIdentifieraSgs5Error_pSgIeggg_
So28NSFileProviderItemIdentifieraSgs5Error_pSgIegng_
So6FPItemCSgs5Error_pSgIegng_
Ieg_
9libfssync11SQLDatabaseCyAA7VFSItemVSo6FPItemCG
9libfssync20BackgroundWorkReasonV
So28NSFileProviderItemIdentifiera2of_9libfssync9RequestorO2bySi8priorityt
So28NSFileProviderItemIdentifieraSg6itemID_9libfssync9RequestorO2bySi8priorityt
9libfssync14FPFSEnumeratorCSgXw
9libfssync14FPFSEnumeratorCSgXwz_Xx
So7NSErrorCSgSo22FPSandboxingURLWrapperCSgAFIeyByyy_
So13FPDDownloaderCSgXw
9libfssync11VFSFileTreeC
9libfssync11TaskTrackerC
9libfssync13FileTreeErrorOySo6FPItemCG
9libfssync9VFSItemIDOSg
9libfssync12ScopedLoggerV
10Foundation3URLVs5Error_pIgnzo_
10Foundation3URLVIgn_
9libfssync16ItemLookupResultV
9libfssync7VFSItemV
5ItemA
5ItemB
9libfssync19ReconciliationTableCyxq_G
9libfssync11JobRegistryCyxq_G
9libfssync8SnapshotCyxq_G
9libfssync8SnapshotCyq_xG
9libfssync9SyncState_p
9libfssync16JobLimitCategoryO
9libfssync17JobTreeEffectTypeO
9libfssync22MaterializationRequestV
8Dispatch0A3QoSV
SDySO9libfssync9JobReasonOyxq_G_So10NSProgressC8Dispatch0E3QoSVys5Error_pSgctG
Sayqd__Gqd_0_Sgs5Error_pSgIeggng_
qd__
qd_0_
9libfssync20MaterializationErrorO
14ContentVersion9libfssync8FileItemPQz
14ContentVersion9libfssync8FileItemPQzSg
17StructuralVersion9libfssync8FileItemPQzSg
9libfssync13FileTreeErrorO
2ID9libfssync8FileItemPQz_AB0cD7VersionVy07ContentE0ADQz010StructuralE0ADQzGSg2att
2ID9libfssync8FileItemPQz_AB8FilenameV8filenameAE5belowt
9libfssync8FilenameV8filename_2IDAA8FileItemPQz5belowt
2ID9libfssync8FileItemPQz8expected_AE8receivedt
9libfssync16ReconciliationIDO10CodingKeysO
So15fp_task_trackerC
9libfssync13LifetimeErrorO
s6UInt64V6fileID_s6UInt32V8genCounttSg
So13PQLConnectionCs6UInt64V6fileID_s6UInt32V8genCountts5Error_pIggrzo_
So13PQLConnectionCSbIggd_
s6UInt32VSgSg
So13PQLConnectionCs6UInt32VSgs5Error_pIggrzo_
So13PQLConnectionCs6UInt64Vs5Error_pIggrzo_
ytSg
So13PQLConnectionCyts5Error_pIggrzo_
So13PQLConnectionCSbs5Error_pIggrzo_
9libfssync3JobCyxq_G
9libfssync15FileItemVersionVy07ContentD0AA0bC0PQy_010StructuralD0AFQy_GSg
9libfssync9ItemStateVy2IDAA04FileB0PQy_GSg
9libfssync9ItemStateVy2IDAA04FileB0PQzGSg
9libfssync12SnapshotItemVyxGSg
9libfssync14ReconciliationO
9libfssync14ReconciliationO27ReconciledPropagationStatusO
Say9libfssync3JobCyxq_GG8jobsForA_SayACyq_xGG0cD1Bt
9libfssync10ItemChangeOyAA08SnapshotB0Vyq_GAEyxGG4item_AA9JobReasonOyxq_GSg6reasonSb17foundByDiskImportt10changeForA_ACyAgFGAI_AKyq_xGSgANSbAOt0mN1BSayAA0F0Cyxq_GG04jobsN1ASayAVyq_xGG0oN1Bt
9libfssync28DecoratedExtensionEnumeratorV
$s9libfssync14LoggerProtocolP
8ItemType9libfssync16FileTreeProtocolPQzSgz_x_AbCRzlXX
8ItemType9libfssync16FileTreeProtocolPQzSgz_AB0dE0CySo6FPItemCG_AbCRzlXX
Siz_Xx
9libfssync4TagsV
SPySo13fpfs_metadataVG
9libfssync13VFSItemHandleVSg
Say9libfssync3TagVGSg
9libfssync8AsyncJobCyxq_G
9libfssync16DiskImportStatusO
9libfssync10DiskImportO
9libfssync8DatabaseCyxq_G
Say9libfssync3JobCyxq_GGAA12ContinuationCSgs5Error_pSgIegggg_
9libfssync10DiskImportO0bC8FinishedCyxq__G
yxq__G
9libfssync9ItemStateVy2IDAA04FileB0PQy_G
9libfssync9ItemStateVy2IDAA04FileB0PQzG
9libfssync11PropagationO
9libfssync11PropagationO10DeleteItemCyxq__G
xSgz_x_q_9libfssync8FileItemRzAbCR_r0_lXX
9libfssync11PropagationO10UpdateItemCyxq__G
9libfssync11PropagationO16StageUpdatedItemCyxq__G
9libfssync9ItemStateVy2IDAA04FileB0PQzGz_x_q_AaERzAaER_r0_lXX
9libfssync11PropagationO10CreateItemCyxq__G
G0R3_
G1R3_
xSg9libfssync12ContinuationCSgs5Error_pSgIegngg_
9libfssync11PropagationO16StageCreatedItemCyxq__G
9libfssync11PropagationO04ItemB6StatusO
2ID9libfssync8FileItemPQy__AB6FieldsV3forAB9JobReasonOyq_xGSg6reasont
2ID9libfssync8FileItemPQy__AB9JobReasonOyq_xGSg6reasont
SS6reason_t
9libfssync10ItemChangeOyAA08SnapshotB0Vyq_GAEyxGG_Sb17foundByDiskImport2IDAA04FileB0PQy_Sg23missingChildrenMetadataAN0kJ7ContentAA9JobReasonOyq_xGSg6reasont
9libfssync11PropagationO21ContentFetchingStatusO
9libfssync11PropagationO0B5ErrorO
9libfssync16ConcreteDatabaseCyxq_G
9libfssync10SyncEngineCyAA7VFSItemVSo6FPItemCGSgXw
2ID9libfssync8FileItemPQzz_AB7VFSItemV_So6FPItemCAbCRzAbCR_r0_lXX
9libfssync10SyncEngineCyAA7VFSItemVSo6FPItemCG
s6UInt64Vz_Xx
2ID9libfssync8FileItemPQy_z_AB7VFSItemV_So6FPItemCAbCRzAbCR_r0_lXX
So10NSProgressCSgXw
9libfssync10SyncEngineCyxq_GSgXwz_AA7VFSItemV_So6FPItemCAA8FileItemRzAaJR_r0_lXX
So10NSProgressCSgXwz_Xx
8Dispatch0A3QoSVz_Xx
9libfssync10SyncEngineC
9libfssync18SubFPCTLTermDumperV
So15FPCTLTermDumperC
SiSg
9libfssync5QueueCyxG
So20FSChangeSubscriptionCSg
9libfssync7VFSItemVSg
SDy9libfssync9VFSItemIDOSo6FPItemCG
ShySo28NSFileProviderItemIdentifieraG
9libfssync14DiskEnumeratorC
So9FPDDomainC
Say9libfssync7VFSItemVG
Say9libfssync7VFSItemVGz_Xx
Say9libfssync7VFSItemVGAA14ScanReturnCodeOIeggd_
So24NSFileProviderSyncAnchoraSgs5Error_pSgIegng_
s6UInt32Vz_Xx
9libfssync7VFSItemVSgz_Xx
9libfssync15FileItemVersionVyAA10VFSVersionVAA0c5StateD0VyAA9VFSItemIDOGGSg
9libfssync7VFSItemVSgAA12ContinuationCSgs5Error_pSgIegngg_
9libfssync7VFSItemVSgAA12ContinuationCSgs5Error_pSgIegnng_
9libfssync7VFSItemVSgSg
SpySo14fpfs_fileattrsVGSS9libfssync7VFSItemVSgs5Error_pIgygrzo_
SpySo14fpfs_fileattrsVGs5Int32VIgyd_
9libfssync13VFSItemHandleVSgSg
SpySo14fpfs_fileattrsVGSS9libfssync13VFSItemHandleVSgs5Error_pIgygrzo_
SpySo14fpfs_fileattrsVGSSyts5Error_pIgygrzo_
SpySo14fpfs_fileattrsVGSS9libfssync7VFSItemVs5Error_pIgygrzo_
s5Int32VSg
SpySo14fpfs_fileattrsVGSSs5Int32Vs5Error_pIgygrzo_
9libfssync17FPItemVersionDataV
9libfssync14ItemDecorationV9SQLFieldsO
Say9libfssync14ItemDecorationV9SQLFieldsOG
9libfssync14ItemDecorationV
So13FPXEnumerator_p
9libfssync16FPItemEnumerator_p
So7NSArrayCSo18NSFileProviderPageaSgSo0bC10SyncAnchoraSgSo7NSErrorCSgIeyByyyy_
So24NSFileProviderSyncAnchoraSgSo7NSErrorCSgIeyByy_
9libfssync10FPFileTreeCSgXw
So9OS_os_logCSg
So28NSFileProviderItemIdentifiera_10Foundation4DataVSgAFtSg
10Foundation4DataVSg
9libfssync23FPFileTreeChangeHandlerC
SaySo6FPItemCGSg
SaySo8FPItemIDCGSg
xSgs5Error_pSgIegng_
9libfssync8FileTreeCyxG
ySay
yx_GG_SDy9libfssync12SyncStateKeyOSe_SEpSgGys5Error_pSgcSgtcSg
9libfssync14FileTreeWriterC0bC6ChangeO
2ID9libfssync8FileItemPQz04itemA0_xSg0E0Sb11shouldFetcht
10Foundation4UUIDVSg
s5NeverO
yxq_GSg_s5Error_ptKc
SayyycG
Shy2ID9libfssync8FileItemPQy_G
9libfssync11SQLDatabaseCyAA7VFSItemVSo6FPItemCGSgXw
9libfssync11SQLDatabaseCyxq_GSgXwz_AA7VFSItemV_So6FPItemCAA8FileItemRzAaJR_r0_lXX
ytIegr_
ytIgr_
So13PQLConnectionCIgg_
9libfssync11SQLDatabaseCyAA7VFSItemVSo6FPItemCGXo
9libfssync8SQLTable_pyts5Error_pIegnrzo_
qd__Sg
qd__s5Error_pIgrzo_
qd__Igr_
9libfssync11SQLDatabaseCyxq_G
G0R0_
G1R0_
9libfssync11SQLDatabaseCyxq_GSgXw
9libfssync11SQLDatabaseCyxq_GSgXwz_x_q_AA8FileItemRzAaFR_r0_lXX
9libfssync18SQLDatabaseVersionV
9libfssync16ChangeEnumeratorV
9libfssync22SQLReconciliationTableCyAA7VFSItemVSo6FPItemCG
So17OS_dispatch_groupCz_Xx
9libfssync19VFSVersionSQLFieldsO
Say9libfssync19VFSVersionSQLFieldsOG
y9libfssync7VFSItemVG
9libfssync14VFSLookupScopeV
9libfssync16VFSIDLookupCache_pSg
y10Foundation3URLVG
SpySo14fpfs_fileattrsVG
9libfssync18VFSDirectoryListerC
9libfssync17FSDirectoryListerCyAA7VFSItemVG
9libfssync7VFSItemVs5Error_pIgnzo_
$s9libfssync9SyncStateP
9libfssync12SyncStateKeyO
SayxG
9libfssync5QueueC
$s9libfssync6DumperP
9libfssync14DebugLogDumperV
9libfssync15SubStringDumperV
9libfssync12StringDumperC
So25NSFileProviderItemVersionC
9libfssync7JobLockC
9libfssync8JobLimitC
So24OS_dispatch_source_timer_pSgz_Xx
So24OS_dispatch_source_timer_pSgXw
So24OS_dispatch_source_timer_pSgXwz_Xx
9libfssync11SQLSnapshotCyxq_G
9libfssync11SQLSnapshotCyAA7VFSItemVq_G
9libfssync12SnapshotItemVyxG
9libfssync11SQLSnapshotCyAA7VFSItemVSo6FPItemCG
9libfssync9ItemStateV
9libfssync12StringLoggerO06FormatB4PartO
Ss10formatType_Ss03argB0t
Ss3lib_Ss10formatTypeSs03argC0t
9libfssync16ReconciliationIDO
$s9libfssync6BitSetP
7ElementSTQz
8RawValueSYQz
9libfssync14BitSetIteratorV
$sSt
9libfssync10ItemChangeO
q_7oldItem_x03newB09libfssync6FieldsV5diffsSS6reasont
2ID9libfssync8FileItemPQy__q_SgSbSg09isStillInC4TreeSb0E9RecursiveSS6reasont
x4from_Sb15mayAlreadyExistSS6reasont
9libfssync24FileItemVersionSQLFieldsO
Say9libfssync24FileItemVersionSQLFieldsOG
9libfssync21SnapshotItemSQLFieldsO
Say9libfssync21SnapshotItemSQLFieldsOG
9libfssync12ItemMetadataV9SQLFieldsO
9libfssync15FileItemVersionV
9libfssync12SnapshotItemV
9libfssync11JobRegistryCyq_xG
SSSg
SuSg
$s9libfssync5JobIDP
_pSg
yxq_G
9libfssync15AnyDirectionJobO
9libfssync3JobCyq_xG
9libfssync9FSOrFPJobO
9libfssync8AsyncJobCyq_xG
SDy8ItemType9libfssync16FileTreeProtocolP_2IDAB0dA0PQZAaDQzG
SDy8ItemType9libfssync16FileTreeProtocolP_2IDAB0dA0PQZAaDQzGz_x_AbCRzlXX
$s9libfssync16FileTreeProtocolP
8ItemType
SDy9libfssync9VFSItemIDOAA0B0VG
9libfssync8FileTreeCyAA7VFSItemVG
xz_9libfssync8FileTreeCyAA7VFSItemVG_AA0bC8ProtocolRzlXX
8ItemType9libfssync16FileTreeProtocolP_2IDAB0dA0PQZz_AB0dE0CyAB7VFSItemVG_AbCRzlXX
9libfssync8FileTreeCySo6FPItemCG
xz_9libfssync8FileTreeCySo6FPItemCG_AA0bC8ProtocolRzlXX
8ItemType9libfssync16FileTreeProtocolP_2IDAB0dA0PQZz_AB0dE0CySo6FPItemCG_AbCRzlXX
SDySo28NSFileProviderItemIdentifiera9libfssync08SnapshotC0VySo6FPItemCGG
SDy9libfssync9VFSItemIDOAA12SnapshotItemVyAA0B0VGG
xz_x_9libfssync16FileTreeProtocolRzlXX
8ItemType9libfssync16FileTreeProtocolP_2IDAB0dA0PQZz_x_AbCRzlXX
Say8ItemType9libfssync16FileTreeProtocolPQzGAB14ScanReturnCodeOIeggd_
9libfssync8DatabaseCyq_xG
9libfssync16ConcreteDatabaseCyxq_GSgXw
9libfssync15SwappedDatabaseC
14ContentVersion
17StructuralVersion
9libfssync25FPFSMaterializedSetAnchorV
10Foundation4UUIDV
9libfssync8MutationO
9libfssync16SnapshotMutationOyxG
9libfssync16SnapshotMutationOyq_G
9libfssync22ReconciliationMutationOyxq_G
$ss27ExpressibleByIntegerLiteralP
$sSx
9libfssync16SnapshotMutationO
9libfssync12SnapshotItemVyxG_SS6reasont
9libfssync12SnapshotItemVyxG_AA6FieldsVSS6reasont
2ID9libfssync8FileItemPQz_SbSg09isStillInC4TreeAF0E9RecursiveSS6reasont
2ID9libfssync8FileItemPQz_SS6reasont
9libfssync9JobReasonO
2ID9libfssync8FileItemPQy_3for_AB9RequestorO2bySi8priorityt
9libfssync9JobReasonOyq_xG
10Foundation3URLV2at_9libfssync9RequestorO2bySi8priorityt
10Foundation3URLV3for_9libfssync9RequestorO2bySi8priorityt
2ID9libfssync8FileItemPQy_Sg04itemA0_AB9RequestorO2bySi8priorityt
Shy9libfssync9JobReasonOyxq_GG
10Foundation3URLV2at_t
2ID9libfssync8FileItemPQy_2of_AB9RequestorO2bySi8priorityt
Shy9libfssync9JobReasonOySo6FPItemCAA7VFSItemVGG
Shy9libfssync9JobReasonOyAA7VFSItemVSo6FPItemCGG
9libfssync16ReconciliationIDOySo28NSFileProviderItemIdentifieraAA07VFSItemC0OG_AHt
Shy9libfssync9JobReasonOyq_xGG
9libfssync16ReconciliationIDOyAA07VFSItemC0OSo28NSFileProviderItemIdentifieraG_AHt
9libfssync9JobReasonO10CodingKeysO
9libfssync9RequestorO
9libfssync18SQLItemJobRegistryCyq_xG
9libfssync23SQLBackgroundDownloaderCyxq_G
Say9libfssync12AsyncJobCodeOG
9libfssync16JobWaitConditionV
9libfssync14SQLJobRegistryCyAA7VFSItemVSo6FPItemCGSgXw
qd__z_x_q_qd__9libfssync8FileItemRzAaBR_AA0bC2IDRd__r0__lXX
9libfssync14SQLJobRegistryCyxq_G
9libfssync9FSOrFPJobOyxq_G
9libfssync8SQLJobIDV
SaySSGSg
9libfssync8UserInfoV
SaySSG
$s9libfssync8SQLTableP
$s9libfssync16FPItemEnumeratorP
$s9libfssync8LoggableP
s5Int32V5errno_t
_p5value_t
Si4size_SV4dataSb12freeAfterLogt
Si4size_t
$s9libfssync17LoggablePrimitiveP
So9OS_os_logC
$s9libfssync12CodableClassP
9libfssync22CodableClassCodingKeysO
9libfssync19CodableClassWrapperV
Say9libfssync12FileItemKindOG
9libfssync14BitSetIteratorVyAA6FieldsVG
9libfssync14BitSetIteratorVySo23NSFileProviderItemFieldVG
$sST
ytSgSg
ytSgs5Error_pIgrzo_
xs5Error_pIgrzo_
SSs5Error_pIgrzo_
SiSgSg
SiSgs5Error_pIgrzo_
9libfssync19WaitConditionStatusOSgSg
9libfssync19WaitConditionStatusOSgs5Error_pIgrzo_
9libfssync7VFSItemVSgs5Error_pIgrzo_
10Foundation4DataVSgSg
10Foundation4DataVSgs5Error_pIgrzo_
9libfssync12SnapshotItemVyAA7VFSItemVGSgSg
9libfssync12SnapshotItemVyAA7VFSItemVGSgs5Error_pIgrzo_
Sbs5Error_pIgrzo_
s5Int64Vs5Error_pIgrzo_
So10NSProgressCSgSg
So10NSProgressCSgs5Error_pIgrzo_
yts5Error_pIgrzo_
s12StaticStringV
9libfssync19PersistenceCountersC
9libfssync15SwappedDatabaseCyxq_GSg
SDy2ID9libfssync8FileItemPQzAB22MaterializationRequestVyxq_GG
SDy2ID9libfssync8FileItemPQy_SayAB9JobReasonOyq_xG_8Dispatch0G3QoSVys5Error_pSgctGG
SDy2ID9libfssync8FileItemPQzSayAB9JobReasonOyxq_G_8Dispatch0G3QoSVys5Error_pSgctGG
Sayys5Error_pSgcG
Say9libfssync18PersistenceTriggerOyxq_GG
SDy9libfssync16ReconciliationIDOy0C0AA8FileItemPQzAdFQy_GAIG
SDy9libfssync16ReconciliationIDOy0C0AA8FileItemPQzAdFQy_GAA0eB0Vyxq_GG
9libfssync6LockedCyAA19AnyDatabaseDelegateCyxq_GSgG
s5Error_pSgytIegnr_
9libfssync16ConcreteDatabaseCyAA7VFSItemVSo6FPItemCGSgXw
9libfssync16ConcreteDatabaseCyxq_GSgXwz_x_q_AA8FileItemRzAaFR_r0_lXX
9libfssync13DatabaseErrorO
s6UInt64VSg5oldID_AC03newC0t
s5Error_p
9libfssync18SQLDatabaseVersionV_SuSg6bugfixt
9libfssync11JobThrottleV9SQLFieldsO
Say9libfssync11JobThrottleV9SQLFieldsOG
$s9libfssync12SQLFieldTypeP
9SQLFields
$s9libfssync10SQLCodableP
$s9libfssync25SQLFileTreeSidedFieldTypeP
$s9libfssync23SQLFileTreeSidedCodableP
9libfssync16SQLDecodingErrorO
SbSPys4Int8VGc
9libfssync17OrderedDictionaryV5IndexVyxq__G
s5SliceVy9libfssync17OrderedDictionaryVyxq_GG
SIy9libfssync17OrderedDictionaryVyxq_GG
x_q_t
9libfssync17OrderedDictionaryV8IteratorVyxq__G
9libfssync17OrderedDictionaryV
SDyxq_G
9libfssync17OrderedDictionaryV5IndexV
9libfssync17OrderedDictionaryV8IteratorV
9libfssync17OrderedDictionaryVyxq_G
$sSl
$sSK
$sSk
$ss30ExpressibleByDictionaryLiteralP
So6NSUUIDC
So8NSNumberCSg
So6NSDataCSg
Se_SEpSg
9libfssync16ReconciliationIDOyxq_G
9libfssync16ReconciliationIDOyxq_G_AA12AsyncJobCodeOt
9libfssync16ReconciliationIDOyxq_G_AA6FieldsVt
9libfssync13ThrottlingKeyO4KindO
9libfssync18JobThrottlingStateO
9libfssync18ItemReconciliationV9SQLFieldsOyxq__G
Say9libfssync18ItemReconciliationV9SQLFieldsOyxq__GG
9libfssync22ItemReconciliationHalfV9SQLFieldsOyx_G
Say9libfssync22ItemReconciliationHalfV9SQLFieldsOyx_GG
9libfssync16ReconciliationIDOy0C0AA8FileItemPQzAdFQy_GSg
9libfssync22SQLReconciliationTableCyxq_G
9libfssync18ItemReconciliationVyxq_G
Say9libfssync16ReconciliationIDOyAA07VFSItemC0OSo28NSFileProviderItemIdentifieraGG
9libfssync18ItemReconciliationV9SQLFieldsO
9libfssync22ItemReconciliationHalfV9SQLFieldsOyq__G
9libfssync22ItemReconciliationHalfV9SQLFieldsO
9libfssync23DecoratedReconciliationV
9libfssync18ItemReconciliationVyAA7VFSItemVSo6FPItemCGSg
9libfssync15FileItemVersionVyAA06FPItemD4DataVAEGSg
9libfssync18ItemReconciliationV
9libfssync22ItemReconciliationHalfV
9libfssync12AsyncJobCodeO
9libfssync9FSOrFPJobO9SQLFieldsOyxq__G
Say9libfssync9FSOrFPJobO9SQLFieldsOyxq__GG
9libfssync18JobSchedulingStateO9SQLFieldsO
Say9libfssync18JobSchedulingStateO9SQLFieldsOG
9libfssync18ItemStateSQLFieldsO
Say9libfssync18ItemStateSQLFieldsOG
9libfssync12JobSQLFieldsO
Say9libfssync12JobSQLFieldsOG
9libfssync9FSOrFPJobO9SQLFieldsO
9libfssync8AsyncJobC
9libfssync16NSecTimeIntervalV4nsec_t
9libfssync8FileTreeC
9libfssync12EitherOrBothOy2IDAA8FileItemPQzAdFQy_G
9libfssync12EitherOrBothOy14ContentVersionAA8FileItemPQzAdFQy_G
9libfssync12EitherOrBothOy17StructuralVersionAA8FileItemPQzAdFQy_G
9libfssync14ItemDecorationVSg
14ContentVersion9libfssync8FileItemPQy_
9libfssync15FileItemVersionVy07ContentD0AA0bC0PQy_010StructuralD0AFQy_G
17StructuralVersion9libfssync8FileItemPQz
17StructuralVersion9libfssync8FileItemPQy_
9libfssync8FilenameV
2ID9libfssync8FileItemPQy_
9libfssync12EitherOrBothO
$s9libfssync8FileItemP
9libfssync14BitSetIteratorVyAA16JobWaitConditionVG
So13OS_xpc_object_pSg
So13OS_xpc_object_p
SDySSyycG
9libfssync15SharedSchedulerCSgXw
$s9libfssync7VersionP
s5Int32V
So16FPDDomainIndexerC
9libfssync23FPFSExtensionEnumeratorCSg
10Foundation4DataV
9libfssync11FPFSIndexerC
10ObjectiveC8ObjCBoolVSo7NSErrorCSgIeyByy_
9libfssync23FPFSExtensionEnumeratorCSgs5Error_pSgIeggg_
9libfssync23FPFSExtensionEnumeratorC
Sgs5Error_pSgIeggg_
$sSY
9libfssync8ItemOrIDO
9libfssync8ItemOrIDOyxG
9libfssync15FileItemVersionVy07ContentD0AA0bC0PQz010StructuralD0AFQzGSg
9libfssync16DiskImportStatusOSg
9libfssync22ItemReconciliationHalfVyxG
9libfssync22ItemReconciliationHalfVyq_G
Say9libfssync16ReconciliationIDOy0C0AA8FileItemPQzAdFQy_GG
9libfssync8BouncingO
9libfssync8BouncingO10BounceItemCyxq__G
s5Int32VABs5Error_pIgyrzo_
s5Int32V9libfssync13VFSItemHandleVSgs5Error_pIgyrzo_
s5Int32Vyts5Error_pIgyrzo_
s5Int32V9libfssync7VFSItemVs5Error_pIgyrzo_
s5Int32V9libfssync7VFSItemVSgs5Error_pIgyrzo_
s5Int32VSbs5Error_pIgyrzo_
s5Int32Vs6UInt32VSgs5Error_pIgyrzo_
s5Int32V10Foundation3URLVs5Error_pIgyrzo_
9libfssync14FileTreeWriterCyxG
9libfssync8SnapshotC
Say9libfssync12ItemMetadataV9SQLFieldsOG
10Foundation3URLV
yxq__G
9libfssync14ChildrenStatusOSg
9libfssync9IngestionO0B4ModeO
9libfssync9IngestionO
9libfssync9IngestionO10MergeItemsCyxq__G
Say9libfssync3JobCyxq_GG
Say9libfssync3JobCyxq_GGz_x_q_AA8FileItemRzAaFR_r0_lXX
9libfssync9IngestionO21FetchChildrenMetadataCyxq__G
9libfssync9IngestionO22UnfaultDirectoryInTreeCyxq__G
9libfssync9IngestionO20FaultDirectoryInTreeCyxq__G
9libfssync9IngestionO24DeleteRejectedItemInTreeCyxq__G
9libfssync9IngestionO17FetchItemMetadataCyxq__G
9libfssync15FileItemVersionVy07ContentD0AA0bC0PQy_010StructuralD0AFQy_Gz_x_q_AaERzAaER_r0_lXX
9libfssync14FileTreeWriterCyq_G
9libfssync15FileItemVersionVy07ContentD0AA0bC0PQz010StructuralD0AFQzGz_x_q_AaERzAaER_r0_lXX
9libfssync15CapturedContentV_q_tz_x_q_AA8FileItemRzAaDR_r0_lXX
G0R4_
9libfssync15CapturedContentV08capturedC0_x4itemtSgz_x_q_AA8FileItemRzAaGR_r0_lXX
Say9libfssync12FileTreeSideOG
9libfssync16JobWaitConditionV3for_t
9libfssync12ContinuationCSg4with_t
s5Error_p4with_t
9libfssync15MaterializationO
Say10Foundation3URLVG
9libfssync14FileTreeWriterCyAA7VFSItemVG
9libfssync14FileTreeWriterCySo6FPItemCG
s6UInt64V
s6UInt32V
9libfssync16ItemStateVersionVyAA9VFSItemIDOG
So15PQLQueryBuilderCSSIggo_
9libfssync10VFSVersionVSg
9libfssync16ItemStateVersionVyAA9VFSItemIDOGSg
9libfssync13StagedContextCSg
9libfssync15CapturedContentVSg
$s9libfssync16VFSIDLookupCacheP
SbSgSg
9libfssync14VFSLookupScopeVSg
So16NSOperationQueueC
So15FSChangeMonitorC
9libfssync9SyncState_pSgXw
9libfssync31DocumentTrackingTombstoneSlayerC
_pSgXw
8ItemType9libfssync16FileTreeProtocolPQzSgz_AB0dE0CyAB7VFSItemVG_AbCRzlXX
So18NSFileAccessIntentC
9libfssync9ItemStateVyAA9VFSItemIDOGz_Xx
9libfssync16VFSStagedContextCSg
9libfssync16VFSStagedContextCSgz_Xx
SaySo18NSFileAccessIntentCG
SaySo18NSFileAccessIntentCGz_Xx
So18NSFileAccessIntentCSg
9libfssync7VFSItemVSgs5Error_pSgIegng_z_Xx
So18NSFileAccessIntentCSgz_Xx
9libfssync15FileItemVersionVyAA10VFSVersionVAA0c5StateD0VyAA9VFSItemIDOGGz_Xx
s5Error_pSg10Foundation3URLVIeggn_
9libfssync15CapturedContentV_AA7VFSItemVtSgs5Error_pSgIegng_
9libfssync8SignpostV
2os12OSSignpostIDV
ShySSGSg
s5Int32VA2BIgyyd_
SpySo16fpfs_item_handleVGSgADs5Int64Vs5Int32VIgyyyd_
SpySo16fpfs_item_handleVGSgSbs5Int32VIgyyd_
Say9libfssync8SQLTable_pG
9libfssync19BackgroundWorkStateO
9libfssync15MaterializationO15MaterializeItemCyxq__G
9libfssync23SQLBackgroundDownloaderCyxq_GSgXw
9libfssync23SQLBackgroundDownloaderCyxq_GSgXwz_x_q_AA8FileItemRzAaFR_r0_lXX
9libfssync18ItemReconciliationVyAA7VFSItemVSo6FPItemCG
9libfssync23SQLBackgroundDownloaderCyAA7VFSItemVSo6FPItemCGSgXw
9libfssync23SQLBackgroundDownloaderCyxq_GSgXwz_AA7VFSItemV_So6FPItemCAA8FileItemRzAaJR_r0_lXX
9libfssync14BitSetIteratorVyAA20BackgroundWorkReasonVG
database
_rawValue
rawValue
__sig
__opaque
_os_unfair_lock_opaque
dev_id
dir_id
generation_count
read_count
unread_count
needs_seek
root_path
fsid
device_id
root_fd
fs_root_fd
step_fd
step_ino
quarantine_name
_nsError
next
name
value_size
type
permissions
document_size
creation_time
modification_time
last_use_time
favorite_rank
tag_data
entry_count
physical_size
before_bounce_filename
syncable_xattrs
item_handle
metadata
pathlen
file_id
parent_id
doc_id
gen_count
padding
tv_sec
tv_nsec
xattr_data
xattr_length
label_color
RawValue
_ObjectiveCType
ArrayLiteralElement
Element
_ErrorType
Code
observer
backend
vfsItemID
wantsTrashEnumeration
unionEnumerator
extensionObserver
lifetimeExtender
keepAlive
enumerator
itemIdentifier
backend
isEnumerating
hasPendingChange
page
anchor
source
addUnappliedFields
removeUnappliedFields
updateIsStillInFileTree
updateIsRecursivelyDeleted
updateBaseVersion
updateChildrenStatus
updateDiskImportStatus
addNeedsDelete
unbind
setWasDatalessOnDiskBeforeImport
forceReconcile
bindItemIDs
deleteReconciliation
deleteChildrenReconciliations
addCollidingItemID
removeCollidingItemID
onOther
onMain
rawValue
RawValue
StringLiteralType
ExtendedGraphemeClusterLiteralType
UnicodeScalarLiteralType
originalParentID
originalFilename
trashDate
kind
childItemCount
posixPermissions
creationDate
contentModificationDate
isLocked
isHidden
isEvictable
isPinned
isInPinnedFolder
isPathExtensionHidden
beforeBounceFilename
trashContext
isDataless
size
physicalSize
isPackage
lastUsedDate
tags
favoriteRank
extendedAttributes
providerDomainID
nsDomain
appSupportURL
rootURL
wharfDirectoryURL
dbDirectoryURL
dbURL
appSupport
cloudStorage
startDate
deletionDetectionDate
hasSeenBusy
backoff
timeSource
side
table
deleteDisabledThrottles
nextRetryDate
database
jobThrottlingParameters
itemThrottlingParameters
fileTreeThrottlingParameters
kind
itemID
otherItemID
jobType
field
delayedContinuation
jobRunningAtStartup
SQLFields
AllCases
RawValue
itemBound
itemEmptyInSnapshot
itemMaterializedOnDisk
itemMaterializationCompleted
itemEvicted
itemSnapshotted
itemDeletedFromSnapshot
itemDeletedWhileNotInSnapshot
itemRemovedFromParentInSnapshot
itemChildrenStatusChanged
itemDiskImportStatusChanged
throttle
throttleExpired
itemMaterializationFailed
itemEvictionFailed
capturedContentReleased
itemRescanned
itemReconciled
itemUnbound
itemContentCaptured
flushed
diskImportAllowed
database
pending
verified
reason
SQL_BACKUP_MANIFEST_SCHEMA_VERSION
database
table
resourceValuesToFetch
side
table
throttle
deleteFinishedJobs
database
rowID
enumerators
queue
shouldFetch
token
tokens
cancellable
client
request
backend
extender
handle
isDir
RawValue
wrapped
itemIdentifier
requestor
domain
coordinator
queue
changeHandler
tracker
progressMonitor
progress
requestor
observation
lastChangeDate
allowedDelay
expirationDate
expirationPolicy
progressPerItemID
domain
queue
source
wait
cancel
wrapped
ItemA
ItemB
fileID
genCount
size
parentID
name
metadata
decoration
contentVersion
cachedURL
deviceID
ContentVersion
StructuralVersion
domain
providerDomainID
nsDomain
pathsManager
__cachedURL
__fpfs
queue
startupQueue
itemChangedQueue
workingSetChangedQueue
startStatus
didCreateRoot
itemsChangedSource
enumerationAnchorChangedSource
runningEnumerator
rootIsPinnedCache
invalidated
failure
shouldRestart
enumerator
fpID
shouldBeHidden
isImported
runningJobs
currentJobsLimit
category
softJobsLimit
hardJobsLimit
allowedTreeEffectType
jobsWaitingForPersistence
jobsNeedingFlushRunning
jobsNeedingFlushWaitingForFlush
isStarving
reconciliationTable
jobRegistry
snapshotA
snapshotB
syncState
fetchContentJobsForA
fetchContentJobsForB
otherJobsForA
otherJobsForB
backgroundDownloads
read
write
materialization
maximumQoS
completions
operationCancelled
unknownItem
itemDeleted
materializationFailed
evictionFailed
itemID
expectedItemID
receivedItemID
expectedContentVersion
currentContentVersion
expectedStructuralVersion
currentStructuralVersion
requestedContentVersion
availableContentVersion
requestedStructuralVersion
availableStructuralVersion
filename
below
parentID
contentVersion
structuralVersion
itemNotFound
itemCollision
cannotBounce
contentUnavailable
directoryNotEmpty
versionConflict
capturedContentMissing
itemNotEvictable
itemMismatch
directoryChangedWhileEnumerating
downloadCancelled
lookupNotPermitted
ItemKindMismatch
itemType
itemKindMismatch
RawValue
main
other
tracker
invalidated
itemID
propagatedID
propagatedVersion
propagatedState
originalDiffs
requestedState
actualItem
error
obsoleteReconciliation
preliminaryFetchJobs
readyToPropagate
alreadyBusy
fpxEnumerator
lifetimeExtender
backend
itemID
status
pendingReconciliation
pendingParentImport
pendingSelection
scanningDisk
scanningProvider
RawValue
otherItemID
requestedState
capturedContent
otherVersion
stagedContext
originalVersion
itemID
diffs
baseVersion
isRecursive
missingFileContent
contentNotNeeded
missingChildrenMetadata
missingChildrenEviction
delayPropagation
readyToPropagate
alreadyFetchingContentOrChildrenMetadata
cannotPropagate
throttlingFetchFileContent
throttlingFetchChildrenMetadata
needsFileContent
needsChildrenMetadata
noContent
contentAvailable
fetchNotAllowed
alreadyFetchingContent
itemNotPropagatedYet
invalidated
ItemA
ItemB
dumper
indent
lock
isNotFull
isNotEmpty
consumerCount
consumerWaiting
maxCount
totalCount
queue
completionHandler
producersAreConsumers
areProducersDone
isDone
backend
vfsItemID
wantsTrashEnumeration
fsSubscription
observer
selfItem
previousAnchor
currentAnchor
changedItemsByID
deletedItemsIDs
remapped
exposed
hidden
ContentVersion
StructuralVersion
capabilities
isUploading
isUploaded
uploadingError
downloadingError
isExcludedFromSync
isShared
isTopLevelSharedItem
isSharedByCurrentUser
preformattedOwnerName
preformattedMostRecentEditorName
lastEditedByCurrentUser
sharingPermissions
isContainer
isContainerPristine
appContainerBundleIdentifier
cloudContainerIdentifier
containerDisplayName
displayName
hasUnresolvedConflicts
itemDecoration
userInfo
SQLFields
AllCases
RawValue
observer
backend
fpxEnumerator
unionEnumerator
enumeratedItemIdentifier
tree
queue
lastReceivedUpdate
fileTreeChangesHandler
wharf
itemChange
resetStream
dropAllItems
invalidated
uuid
onError
onNextDurableFlush
isUnsafe
enumerationAnchorChanged
onEnumerationAnchorChanged
lastPropagationDateChanged
onLastPropagationDateChanged
itemWithPinningChange
rawValue
RawValue
unlockedValue
lock
backend
vfsItemID
wantsTrashEnumeration
fileID
generationID
SQLFields
AllCases
currentPosition
completed
rootFD
limit
lookupScope
lookupCache
pkgValidate
rootURL
positionDirectoryID
positionGenerationCount
positionReadCount
positionUnreadCount
positionOffset
RawValue
dbUUID
fsStreamUUID
fsStreamEventID
fpStreamHasMore
fpStreamSyncToken
nonEvictableSpace
dbBugfixRevision
inputs
outputs
ArrayLiteralElement
string
indent
dumper
data
itemVersion
metadata
content
RawValue
position
table
RawValue
parentID
filename
isTrashed
metadata
substring
stdArgument
stdFormatterArgument
customFormatterArgument
main
other
relativePath
fileID
docID
genCount
isDirectory
Element
update
delete
create
none
vfsVersion
content
structure
fullVersion
metadata
itemID
parentID
filename
capturedContent
recursiveDatalessCount
recursiveNonEvictableCount
SQLFields
AllCases
wrapped
parentID
version
name
filenameBeforeBounce
metadata
decoration
capturedContent
recursiveDatalessCount
recursiveNonEvictableCount
ContentVersion
StructuralVersion
state
itemID
name
color
tags
jobForA
jobForB
wrapped
ItemA
ItemB
docID
fileID
root
dbUUID
anchor
forSnapshotA
forSnapshotB
forReconciliation
rawValue
IntegerLiteralType
Stride
RawValue
fileID
parentID
docID
genCount
name
basePath
side
insertIntoSnapshot
updateSnapshot
deleteFromSnapshot
deleteChildrenFromSnapshot
none
materialization
eviction
insertedPathMatchingItem
collision
itemEvicted
downloadRequest
deletionRequest
swapped
coordination
itemIDForURLResolution
urlForItemIDResolution
enumerationOf
itemCreation
urlEvictionRequest
aggregated
forceIngestion
forceIngestionForItemID
itemEvictionRequest
backgroundDownload
pinItem
unpinItem
transformRequest
folderCreatedInTree
folderDeletedInTree
folderNotEmpty
throttlingExpired
parentCreated
itemCreationRejected
itemCreationConflicted
itemUpdateRejected
itemUpdateConflicted
itemRevived
itemDeletedInTree
itemChangedInTree
itemChangedRemotely
itemChangedWhileFetchingContent
garbageCollection
streamReset
datalessItemInDiskScan
diskImport
diskImportDone
diskImportFailed
cancelMaterialization
needsFileContent
capturedContentNotNeeded
testingHarness
mayAlreadyExist
itemsMerge
type
leftID
rightID
subReason
requestorString
subReasons
request
priority
backgroundReason
string
RawValue
version
structuralVersion
contentVersion
RawValue
fsItemJobs
fpItemJobs
backgroundDownloader
deleteFinishedJobs
creationJobTypes
propagationJobTypes
rowID
capabilities
isUploading
isUploaded
uploadingError
downloadingError
isExcludedFromSync
isShared
isTopLevelSharedItem
isSharedByCurrentUser
preformattedOwnerName
preformattedMostRecentEditorName
lastEditedByCurrentUser
sharingPermissions
isContainer
isContainerPristine
appContainerBundleIdentifier
cloudContainerIdentifier
containerDisplayName
displayName
hasUnresolvedConflicts
itemDecoration
userInfo
keys
values
error
primitive
buffer
selfCopy
defaultOSLogger
section
isForked
level
logger
wrapped
name
RawValue
document
directory
symlink
finderAlias
RawValue
AllCases
rawValue
Element
Iterator
RawValue
ArrayLiteralElement
queueStorage
wasReopenedForReading
schedulerQueueStorage
source
fetchContentJobsForALimit
fetchContentJobsForBLimit
otherJobsForALimit
otherJobsForBLimit
backgroundDownloadLimit
jobLockForA
jobLockForB
persistenceCounterStorage
tracker
asyncJobGroup
wharf
$__lazy_storage_$_swappedStorage
materializationWaiters
propagationFromFPWaiters
propagationFromFSWaiters
flushWaiters
currentQoS
triggersEnabled
pendingTriggers
idMaps
pendingReconciliations
delegateStore
shouldDumpState
vfsRootHasChanged
cannotOpenDatabase
cannotInitializeDatabase
unsupportedDatabaseVersion
inconsistentDatabase
state
retryCount
nextRetryDate
lastErrorDate
lastError
priority
SQLFields
AllCases
RawValue
invalidValue
unexpectedNull
deviceID
rootInode
trashInode
shouldSyncXattr
dict
sortedKeys
value
index
Element
Index
Iterator
SubSequence
Indices
Value
minimumNsecsBetweenRetries
maximumNsecsBetweenRetries
nsecsBeforeForgettingCounter
finalRetryCount
randomizeDelays
delayBeforeDeletion
item
fieldPropagation
fileTree
disabled
pending
expired
state
priority
retryCount
nextRetryDate
lastErrorDate
lastError
RawValue
directoryID
page
RawValue
fsRootID
fpRootID
collidingItemIDs
version
itemID
needsDelete
unappliedFields
childrenStatus
isStillInFileTree
diskImportStatus
wasDatalessOnDiskBeforeImport
isRecursivelyDeleted
reconcilition
isDataless
fileID
parentID
recursiveDatalessCount
recursiveNonEvictableCount
isMaterializing
isPinned
isInPinnedFolder
fpVersion
decoration
SQLFields
AllCases
stageCreatedItem
createItem
stageUpdatedItem
updateItem
deleteItem
fetchItemMetadata
deleteFolderFromSnapshotIfEmpty
reSnapshotChildren
fetchChildrenMetadata
fetchFileContent
materializeItem
evictItem
evictChildren
bounceItem
reconcileChildren
collectCapturedContent
fetchItemMetadataRecursive
reSnapshotChildrenRecursive
diskImportItemMetadata
deleteGarbageFromTree
diskImportChildrenMetadata
deleteRejectedItemFromTree
markDirectoryDiskImportDone
faultDirectoryInTree
cancelFetchFileContent
diskImportFinished
continueDiskImport
unfaultDirectoryInTree
unfaultDirectoryAndChildren
mergeItems
side
type
state
conditions
error
continuation
metadata
parentID
filename
requestedState
otherVersion
baseVersion
reason
itemID
itemFilename
otherItemID
stagedContext
capturedContent
diffs
isRecursive
RawValue
SQLFields
AllCases
continueScan
abortScan
scheduleAfter
scheduleBeforePendingJobs
scheduleAfterPendingJobs
ItemType
both
ContentVersion
StructuralVersion
rawValue
ArrayLiteralElement
RawValue
Element
Iterator
activity
criteria
label
executors
registered
lastRegistrationDate
lastTriggerDate
lastUsageDate
alwaysRunnable
content
structure
testContent
rootIsPinnedCache
requestEffectivePID
prettyDescription
backend
enumerator
lastIndexedAnchor
phase
anchor
page
changes
RawValue
item
itemID
unknown
itemOrID
needsDelete
unappliedFields
version
childrenStatus
isStillInFileTree
isRecursivelyDeleted
diskImportStatus
wasDatalessOnDiskBeforeImport
collidingItemIDs
notInterested
snapshotting
watching
importingFromDisk
RawValue
itemID
baseVersion
requestedState
actualItem
error
collidingItemID
fileTree
database
side
ItemType
kind
isDataless
size
isLocked
posixPermissions
creationDate
contentModificationDate
lastUsedDate
tagData
favoriteRank
isPackage
isHidden
isPathExtensionHidden
childItemCount
extendedAttributes
physicalSize
trashContext
isEvictable
isPinned
isInPinnedFolder
beforeBounceFilename
SQLFields
AllCases
RawValue
userURL
outputUserURL
destinationDirectoryURL
backupManifestURL
itemID
item
mode
capturedContent
itemUnchanged
parentID
status
sourceID
targetID
sourceVersion
kind
simple
recursive
diskImport
propagation
AllCases
RawValue
path
waiting
runnable
running
failed
cancelled
completed
itemID
userURL
fpDatabaseURLs
_isCaseSensitive
lookupScope
coordinator
operationQueue
queue
tracker
fsChangeMonitor
fsChangeSubscription
syncState
tombstoneSlayer
_rootURL
_rootURLLock
idLookupCache
signpostID
name
label
root
fsRoot
wharfHandle
deferredWQ
invalidated
activated
requestedXattrs
database
subTables
pending
running
throttled
rawValue
ArrayLiteralElement
RawValue
Element
Iterator
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>18A391012</string>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
<key>CFBundleDevelopmentRegion</key>
<string>English</string>
<key>CFBundleExecutable</key>
<string>fileproviderd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>fileproviderd</string>
<key>CFBundlePackageType</key>
<string>FMWK</string>
<key>CFBundleShortVersionString</key>
<string>1.0</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>265</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>17C36</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>13.3</string>
<key>DTSDKBuild</key>
<string>17C36</string>
<key>DTSDKName</key>
<string>iphonesimulator13.3.internal</string>
<key>DTXcode</key>
<string>1100</string>
<key>DTXcodeBuild</key>
<string>11M392v</string>
<key>MinimumOSVersion</key>
<string>13.3</string>
<key>NSHumanReadableCopyright</key>
<string>Copyright 
 2018 Apple Inc. All rights reserved.</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.fileprovider.fileproviderd</string>
<key>aps-connection-initiate</key>
<true/>
<key>com.apple.assertiond.app-state-monitor</key>
<true/>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudKit</string>
</array>
<key>com.apple.fileprovider.enumerate</key>
<true/>
<key>com.apple.fileprovider.extension-host</key>
<true/>
<key>com.apple.multitasking.unlimitedassertions</key>
<true/>
<key>com.apple.private.CacheDelete</key>
<array>
<string>PURGE_ENTITLEMENT</string>
<string>CLIENT_ENTITLEMENT</string>
</array>
<key>com.apple.private.MobileContainerManager.otherIdLookup</key>
<true/>
<key>com.apple.private.MobileContainerManager.unrestrictedPersona</key>
<true/>
<key>com.apple.private.corespotlight.internal</key>
<true/>
<key>com.apple.private.corespotlight.search.internal</key>
<true/>
<key>com.apple.private.foundation.fileprovider-lifetime-daemon-dependant</key>
<true/>
<key>com.apple.private.personas.propagate</key>
<true/>
<key>com.apple.private.pluginkit.manager</key>
<true/>
<key>com.apple.private.pluginkit.persona</key>
<true/>
<key>com.apple.private.security.storage.iCloudDrive</key>
<true/>
<key>com.apple.private.vfs.dataless-manipulation</key>
<true/>
<key>com.apple.private.vfs.move-data-extents</key>
<true/>
<key>com.apple.private.vfs.open-by-id</key>
<true/>
<key>com.apple.security.application-groups</key>
<array>
<string>group.com.apple.FileProvider.ReadOnly</string>
</array>
<key>com.apple.security.enterprise-volume-access</key>
<true/>
<key>com.apple.security.exception.files.absolute-path.read-only</key>
<array>
<string>/private/var/containers/Bundle/Application/</string>
<string>/.mb/mobile/Library/Mobile Documents/</string>
<string>/.mb/mobile/Library/LiveFiles/</string>
<string>/.mb/mobile/Library/Application Support/FileProvider/</string>
<string>/.mb/mobile/Library/CloudStorage/</string>
<string>/.ba/mobile/Library/Mobile Documents/</string>
<string>/.ba/mobile/Library/LiveFiles/</string>
<string>/.ba/mobile/Library/Application Support/FileProvider/</string>
<string>/.ba/mobile/Library/CloudStorage/</string>
</array>
<key>com.apple.security.exception.files.absolute-path.read-write</key>
<array>
<string>/private/var/.backup.i/var/mobile/Library/Mobile Documents/</string>
<string>/private/var/.backup.i/var/mobile/Library/LiveFiles/</string>
<string>/private/var/.backup.i/var/mobile/Library/Application Support/FileProvider/</string>
<string>/private/var/.backup.i/var/mobile/Library/CloudStorage/</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/Library/Mobile Documents/</string>
<string>/Library/LiveFiles/</string>
<string>/Library/Application Support/FileProvider/</string>
<string>/Library/CloudStorage/</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.iconservices</string>
<string>com.apple.assertiond.applicationstateconnection</string>
<string>com.apple.SBUserNotification</string>
<string>com.apple.FileProviderDaemon.AppStoreService</string>
<string>com.apple.cloudd</string>
</array>
<key>com.apple.symptom_diagnostics</key>
<true/>
<key>com.apple.symptom_diagnostics.report</key>
<true/>
<key>platform-application</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>fileproviderd</string>
</array>
</dict>
</plist>
-@#,
