nearbyProductType
proximity
alarmFiring
timerFiring
playbackState
playbackRecency
homeAnnouncementState
homeAnnouncementRecency
nearbyDevicesRequestIdentifier
targetedResult
contextIdentifier
%@ {%@}
nearbyProductType = %@
proximity = %@
alarmFiring = %@
timerFiring = %@
playbackState = %@
playbackRecency = %@
homeAnnouncementState = %@
homeAnnouncementRecency = %@
nearbyDevicesRequestIdentifier = %@
targetedResult = %@
contextIdentifier = %@
AFCoreAnalyticsDeviceContextPayload::nearbyProductType
AFCoreAnalyticsDeviceContextPayload::proximity
AFCoreAnalyticsDeviceContextPayload::alarmFiring
AFCoreAnalyticsDeviceContextPayload::timerFiring
AFCoreAnalyticsDeviceContextPayload::playbackState
AFCoreAnalyticsDeviceContextPayload::playbackRecency
AFCoreAnalyticsDeviceContextPayload::homeAnnouncementState
AFCoreAnalyticsDeviceContextPayload::homeAnnouncementRecency
AFCoreAnalyticsDeviceContextPayload::nearbyDevicesRequestIdentifier
AFCoreAnalyticsDeviceContextPayload::targetedResult
AFCoreAnalyticsDeviceContextPayload::contextIdentifier
waitsUntilRecordingAndAlertsDone
updatesAudioContext
v8@?0
AFSiriDidLaunchAppNotification
requestSettings
typeToSiri
showRecognizedSpeech
captionVoiceFeedback
hideBackgroundContent
useSpeakerForTTS
siriInputLanguage
AFNetworkAvailabilityDidChangeNotification
v16@?0@"<AFCallSiteInfoMutating>"8
-[AFConnection initWithTargetQueue:instanceContext:]
-[AFConnection dealloc]
Client is already capturing speech
-[AFConnection _requestWillBeginWithRequestClass:isSpeechRequest:speechRequestOptions:requestInfo:isBackgroundRequest:analyticsEventProvider:]
-[AFConnection _requestDidEnd]
-[AFConnection _handleCommand:reply:]
-[AFConnection _dispatchCommand:isInterstitial:interstitialPhase:interstitialDelay:reply:]
SiriX
enableTelemetry=YES
-[AFConnection _dispatchCommand:isInterstitial:interstitialPhase:interstitialDelay:reply:]_block_invoke
Interstitial
Early Fire
v16@?0@"AceObject<SAAceCommand>"8
-[AFConnection _setShouldSpeak:]
-[AFConnection _startInputAudioPowerUpdatesWithXPCWrapper:]
-[AFConnection _startInputAudioPowerUpdatesWithXPCWrapper:]_block_invoke
v16@?0@"<AFSpeechDelegate>"8
-[AFConnection _stopInputAudioPowerUpdates]
-[AFConnection _setAudioSessionID:]
-[AFConnection _setRecordRoute:]
-[AFConnection _markIsDucking]
-[AFConnection _markIsTwoShot]
-[AFConnection _markSpeechRecognized]
-[AFConnection _updateSpeechEndHostTime:]
-[AFConnection _completeRequestWithUUID:forReason:error:]
success
v32@?0d8d16@"NSError"24
Speech delegate %@ is incapable of performing two-shot prompt.
Active request type is %ld and active request UUFR type is %ld, two-shot prompt is ignored.
-[AFConnection _connectionFailedWithError:]
-[AFConnection _connection]_block_invoke_2
AFConnection
-[AFConnection _scheduleRequestTimeoutForReason:]
-[AFConnection _invokeRequestTimeoutForReason:]
-[AFConnection _pauseRequestTimeoutForReason:]
-[AFConnection _resumeRequestTimeoutForReason:]
-[AFConnection _cancelRequestTimeoutForReason:]
-[AFConnection _extendRequestTimeoutForReason:]
-[AFConnection _extendExistingRequestTimeoutForReason:]
-[AFConnection _fetchShouldSpeak:]_block_invoke_2
v12@?0B8
-[AFConnection _updateState]_block_invoke_2
-[AFConnection _updateState]_block_invoke
v16@?0B8I12
-[AFConnection _willStartRequestWithSpeech:speechRequestOptions:requestInfo:analyticsEventProvider:]
isSpeechRequest
unixTime
systemVersion
-[AFConnection _willEndSession]
-[AFConnection _willCancelRequest]
-[AFConnection _willFailRequestWithError:]
B16@?0@"NSError"8
%@,%@
SpeechErrorHints[StartStopSpeechDelta:%@]
@"NSError"8@?0
-[AFConnection _willCompleteRequest]
-[AFConnection _willPresentUsefulUserResultWithType:]
Near Fire before UUFR
-[AFConnection _enqueueInterstitialCommand:]
-[AFConnection _beginInterstitialsForReason:]
-[AFConnection _handleInterstitialPhase:fromProvider:displayText:speakableText:expectedDelay:context:completion:]
-[AFConnection _handleInterstitialPhase:fromProvider:displayText:speakableText:expectedDelay:context:completion:]_block_invoke
v24@?0@"AceObject<SAAceCommand>"8@"NSError"16
-[AFConnection _endInterstitialsForReason:]
+[AFConnection isAvailable]
-[AFConnection endSession]
-[AFConnection invalidate]
+[AFConnection defrost]
com.apple.assistant.sync
v16@?0@"NSObject<OS_xpc_object>"8
name
defrost
mach_time
+[AFConnection defrost]_block_invoke_2
-[AFConnection preheatWithStyle:forOptions:]
-[AFConnection boostedPreheatWithStyle:completion:]
v16@?0@"NSError"8
v16@?0@"<AFSetAudioSessionActiveContextMutating>"8
v16@?0@"AFSetAudioSessionActiveResult"8
-[AFConnection forceAudioSessionActiveWithContext:completion:]
-[AFConnection forceAudioSessionActiveWithContext:completion:]_block_invoke
v16@?0@"<AFSetAudioSessionActiveResultMutating>"8
Safety completion of -forceAudioSessionActive is deallocated without invocation.
-[AFConnection forceAudioSessionActiveWithContext:completion:]_block_invoke_2
XPC connection encountered an error during -forceAudioSessionActive.
-[AFConnection acquireAudioSessionWithContext:completion:]
-[AFConnection acquireAudioSessionWithContext:completion:]_block_invoke
v16@?0q8
-[AFConnection forceAudioSessionInactiveWithOptions:completion:]
-[AFConnection forceAudioSessionInactiveWithOptions:completion:]_block_invoke
-[AFConnection resumeInterruptedAudioPlaybackIfNeeded]_block_invoke
-[AFConnection willPresentUI]_block_invoke
v16@?0@"<AFClientConfigurationMutating>"8
-[AFConnection setShouldWaitForMyriad:]
-[AFConnection setMyriadDecisionResult:]
Data
-[AFConnection startRequestWithInfo:activationEvent:]
-[AFConnection _startRequestWithInfo:]
@"AFAnalyticsEvent"16@?0@"NSUUID"8
-[AFConnection _startRequestWithInfo:]_block_invoke
Never
Always
UnlessMuted
-[AFConnection startRecordingAndGetContinueBlockForPendingSpeechRequestWithOptions:]
-[AFConnection startRecordingAndGetContinueBlockForPendingSpeechRequestWithOptions:]_block_invoke_2
-[AFConnection startRecordingAndGetContinueBlockForPendingSpeechRequestWithOptions:]_block_invoke
-[AFConnection startSpeechPronunciationRequestWithOptions:pronunciationContext:]
-[AFConnection startSpeechPronunciationRequestWithOptions:pronunciationContext:]_block_invoke_2
-[AFConnection startAcousticIDRequestWithOptions:]_block_invoke_2
-[AFConnection cancelSpeech]
-[AFConnection cancelRequest]
-[AFConnection cancelRequestForReason:]
-[AFConnection failRequestWithError:]
-[AFConnection stopSpeechWithOptions:]
-[AFConnection updateSpeechOptions:]
-[AFConnection sendGenericAceCommand:turnIdentifier:conflictHandler:]
v16@?0@"NSMutableDictionary"8
v16@?0@"NSSet"8
v16@?0@"NSDictionary"8
v24@?0@"AFClockTimerSnapshot"8@"NSError"16
-[AFConnection startAudioPlaybackRequest:options:completion:]_block_invoke
speechEvent
File
isNarrowBand
-[AFConnectionClientServiceDelegate requestHandleCommand:reply:]_block_invoke
-[AFConnectionClientServiceDelegate requestRequestedOpenApplicationWithBundleID:URL:reply:]_block_invoke
-[AFConnectionClientServiceDelegate requestRequestedOpenURL:reply:]_block_invoke
-[AFConnectionClientServiceDelegate requestRequestedDismissAssistant]_block_invoke
-[AFConnectionClientServiceDelegate requestRequestedDismissAssistantWithReason:]_block_invoke
-[AFConnectionClientServiceDelegate quickStopWasHandledWithActions:]_block_invoke
stop_before_start
0-100ms
100-200ms
200-300ms
300-400ms
400-500ms
500ms-1s
1-2s
2-4s
4-8s
8-15s
15-30s
30-60s
60s+
no_stop
no_start
no_start_and_stop
_LogUUFRReadyConditionally
_EmitPNRFatalError
_EmitHomePodLaunchContextTime
INSerializedCacheItem
initINSerializedCacheItem_block_invoke
AFConnection.m
classINSerializedCacheItem
/System/Library/Frameworks/Intents.framework/Intents
IntentsLibrary
frameworkLibrary
AFBluetoothPairedDeviceInfoUpdated
AFBluetoothWirelessSplitterSessionStateChanged
unspecified
accessAllowed
serviceDisabled
accessDenied
(unknown)
ASSISTANT_SERVICES_INTERSTITIAL
Interstitials
-[AFInterstitialProvider dealloc]
-[AFInterstitialProvider initWithStyle:recordRoute:isVoiceTrigger:isDucking:isTwoShot:speechEndHostTime:context:preferences:delegate:]
com.apple.assistant.interstitial-provider.default
-[AFInterstitialProvider initWithStyle:recordRoute:isVoiceTrigger:isDucking:isTwoShot:speechEndHostTime:context:preferences:delegate:]_block_invoke
-[AFInterstitialProvider invalidate]
v16@?0@"NSNumber"8
-[AFInterstitialProvider _performNextActionWithExpectedDelay:]
%@_%@_%@
DISPLAY
_AFInterstitialActionsCreate
INITIAL_%u
FOLLOW_UP_%u
nano://
AFMessagesGetDomainObjectsFromContext
AFMessagesGetAceDomainObjectsFromContext
Client Acquisition
v16@?0@"<AFAssertionContextMutating>"8
processIdentifier
processName
_alarms
_settings
requestPath
inputOrigin
isEyesFree
requestPath = %ld (%@)
inputOrigin = %@
isEyesFree = %@
AFTestRequestOptions::requestPath
AFTestRequestOptions::inputOrigin
AFTestRequestOptions::isEyesFree
%@-%@
UNKNOWN_CALLER
CONTACT_WITH_TYPE
TWO_CONTACTS_SHARED_FAMILY_NAME
TWO_CONTACTS
THREE_CONTACTS
MORE_THAN_THREE_CONTACTS
CALLER_ID_WITH_RAW_CALLER
RAW_CALLER_WITH_SERVICE
phonemeInformation
value
/+%@
@"NSString"16@?0@"NSString"8
\tn=email\%@
\tn=normal\
\tn=phone\%@
\tn=normal\
\tn=state\%@
\tn=normal\
SPOKEN_CONTACT_FULL
Ringtone
CNContactPhonemeDataKey
initCNContactPhonemeDataKey_block_invoke
AFSiriRingtone.m
constant
/System/Library/Frameworks/Contacts.framework/Contacts
%@#%@#%@
-[AFDeviceStateConnection fetchSiriKitAppIdentifiersWithNotificationPreviewRestrictionsWithCompletion:]
v16@?0@"NSArray"8
v24@?0@"<AFFlowService>"8@?<v@?>16
-[AFDeviceStateConnection fetchSiriKitAppIdentifiersWithNotificationPreviewRestrictionsWithCompletion:]_block_invoke
-[AFDeviceStateConnection getPersonalSettingsForSharedUserID:completion:]
v24@?0@"AFPersonalUserSettings"8@"NSError"16
-[AFDeviceStateConnection getPersonalSettingsForSharedUserID:completion:]_block_invoke
type
identifier
version
controlGroup
experimentGroups
salt
type = %ld (%@)
identifier = %@
version = %@
controlGroup = %@
experimentGroups = %@
salt = %@
AFExperimentConfiguration::type
AFExperimentConfiguration::identifier
AFExperimentConfiguration::version
AFExperimentConfiguration::controlGroup
AFExperimentConfiguration::experimentGroups
AFExperimentConfiguration::salt
com.apple.assistant.security.encryption_key.did_change
com.apple.assistant.security.connection
com.apple.assistant.security.callback
error
v24@?0@"NSString"8@"NSError"16
-[AFSecurityConnection _connectionInterrupted]
-[AFSecurityConnection _connectionInvalidated]
v24@?0@"NSData"8@"NSError"16
v24@?0@"NSDictionary"8@"NSDictionary"16
three
four
_applyChanges
state
deviceAddresses
state = %ld (%@)
deviceAddresses = %@
AFBluetoothWirelessSplitterSessionInfo::state
AFBluetoothWirelessSplitterSessionInfo::deviceAddresses
: %p
; type=
; stringValue=
; contactIdentifier=
; contactInternalGUID=
_type
_stringValue
_contactIdentifier
_contactInternalGUID
Email
Phone
Unknown
INVALID
message
home
genericNotification
reminder
voicemail
groupFaceTimeInvite
ar-SA
en-GB
en-IN
fr-FR
nl-NL
%@ languageCode: %@ name: %@ gender: %@ custom: %@ footprint: %@ contentVersion: %@ masteredVersion: %@
Language
Gender
Custom
Footprint
Name
ContentVersion
MasteredVersion
_languageCode
_gender
_isCustom
_footprint
_name
_contentVersion
_masteredVersion
Male
Female
Neutral
Default
Compact
Premium
builtInMicrophone
builtInDigitizer
accelerometer
bluetoothDevice
carPlayDevice
homeButton
lockButton
digitalCrown
appleTVRemote
appleMikey
internal
remoteRequest
honeycombDevice
date
previousOptInStatus
newOptInStatus
changeSource
changeReason
buildVersion
productVersion
schemaVersion
logEventIdentifier
date = %@
previousOptInStatus = %ld (%@)
newOptInStatus = %ld (%@)
changeSource = %ld (%@)
changeReason = %@
buildVersion = %@
productVersion = %@
schemaVersion = %@
logEventIdentifier = %@
AFHomeAccessorySiriDataSharingChangeLogEvent::date
AFHomeAccessorySiriDataSharingChangeLogEvent::previousOptInStatus
AFHomeAccessorySiriDataSharingChangeLogEvent::newOptInStatus
AFHomeAccessorySiriDataSharingChangeLogEvent::changeSource
AFHomeAccessorySiriDataSharingChangeLogEvent::changeReason
AFHomeAccessorySiriDataSharingChangeLogEvent::buildVersion
AFHomeAccessorySiriDataSharingChangeLogEvent::productVersion
AFHomeAccessorySiriDataSharingChangeLogEvent::schemaVersion
AFHomeAccessorySiriDataSharingChangeLogEvent::logEventIdentifier
SearchForMessages#ReadSpokenTextComponent
RecognizedSpeech
PartialSpeechResult
View
Help
AcousticID Spinner
Cancelled
Committed
Provisional
, dialogIdentifier=%@
<private>
, dialogText="%@"
%@, speakableText="%@"
<ConversationItem %p; %@ (revision %@): type=%@, aceObject=%@, dialogPhase=%@, presentationState=%@, aceCommandIdentifier=%@%@%@, transient=%@, supplemental=%@, immersiveExperience=%@>
Version
Identifier
RevisionIdentifier
Type
AceObject
AceDialogPhase
PresentationState
AceCommandIdentifier
Transient
Supplemental
ImmersiveExperience
AssociatedDataStore
@24@?0@8^@16
-[AFMutableConversationItem initWithPropertyListRepresentation:]
com.apple.siri
com.apple.siri.announce.carplay.settings.changed
com.apple.siri.dictation.dictation-request-started
com.apple.siri.dictation.siri-request-started
com.apple.siri.dictation.message-sent
AFSiriCarPlayAnnounceEnablementType
AFTipKitDonatorQueue
BMDiscoverabilitySignalEvent
/System/Library/Frameworks/BiomeStreams.framework/BiomeStreams
BMStreams
%@.%@
v16@?0@"<AFBundleResourceMutating>"8
dt-begin
dt-confirm
dt-cancel
announce-messages-tone
home-announcement-recording-begin
home-announcement-received
announce-messages-tone-carplay
AFFlowServiceConnection
-[AFFlowServiceConnection invokeMethodOnRemoteWithBlock:onError:]_block_invoke
-[AFFlowServiceConnection _clearConnection]
-[AFFlowServiceConnection _connection]
_orthography
_language
_phonemeSuggestions
com.apple.assistant.analytics
com.apple.assistant.analytics-observation
com.apple.assistant.client
com.apple.assistant.dictation
com.apple.assistant.dictation.prerecorded
com.apple.assistant.security
com.apple.assistant.settings
com.apple.assistant.multiuser.service
com.apple.assistant.multiuser.update.service
com.apple.siri.tether
com.apple.siri.activation
com.apple.siri.activation.horseman
com.apple.siri.activation.application
com.apple.developer.siri
com.apple.siri.synapse
com.apple.assistantd.managedstorage
com.apple.assistant.notification_service
com.apple.siri.NotificationSource
com.apple.assistant.flow_service
com.apple.assistant.device-context
com.apple.assistant.audio-session-assertion
com.apple.assistant.endpoint-connectivity
com.apple.assistant.announcement_state.service
com.apple.assistant.announcement_state
com.apple.siri.daemon_launched
com.apple.assistant.request
com.apple.assistant.speech-request
RequiresUserInteraction
OriginDeviceName
ActivationEvent
PersonalRequestsActivityUserInfoHomeIdentifier
com.apple.assistant_service
com.apple.siri.execution_service
PlayAndRecord_WithBluetooth
com.apple.assistant.speech-capture.finished
com.apple.siri.application_launched
com.apple.intents-service
.reload_plugin
com.apple.MobileAsset.EmbeddedSpeech
com.apple.MobileAsset.EmbeddedSpeech.ma.new-asset-installed
com.apple.trial.NamespaceUpdate.SIRI_DICTATION_ASSETS
com.apple.trial.NamespaceUpdate.SIRI_UNDERSTANDING_ASR_ASSISTANT
MAQueryResult
mock-replay-server
http://127.0.0.1:8181
com.apple.siri.client.state.DynamiteClientState.siri_data_changed
com.apple.assistant.last-uufr-timestamp
com.apple.assistant.active_account_changed
com.apple.assistant.remora.active_languages_changed
localizedDisplay
localizedDisplayWithRegion
localizedDisplay = %@
localizedDisplayWithRegion = %@
AFOutputVoiceDescriptor::localizedDisplay
AFOutputVoiceDescriptor::localizedDisplayWithRegion
v24@?0@"AFAssertionContext"8@"NSError"16
-[_AFAssertionProxy initWithImpl:coordinator:]
-[_AFAssertionProxy relinquishWithContext:options:]
-[_AFAssertionProxy relinquishWithError:options:]
-[_AFAssertionProxy dealloc]
%@ {identifier = %@, numberOfAssertions = %llu/%llu}
-[AFAssertionCoordinator initWithIdentifier:queue:delegate:]
-[AFAssertionCoordinator dealloc]
-[AFAssertionCoordinator acquireRelinquishableAssertionWithContext:relinquishmentHandler:]
-[AFAssertionCoordinator relinquishAssertionWithUUID:context:options:]
-[AFAssertionCoordinator relinquishAssertionWithUUID:error:options:]
-[AFAssertionCoordinator relinquishAsertionsPassingTest:context:]
v32@?0@"NSUUID"8@"_AFAssertionImpl"16^B24
-[AFAssertionCoordinator relinquishAsertionsPassingTest:context:]_block_invoke
-[AFAssertionCoordinator relinquishAsertionsPassingTest:error:]
-[AFAssertionCoordinator relinquishAsertionsPassingTest:error:]_block_invoke
-[AFAssertionCoordinator numberOfPendingAndActiveAssertions]
-[AFAssertionCoordinator numberOfActiveAssertions]
v24@?0@"NSUUID"8^B16
-[AFAssertionCoordinator invalidate]
-[AFAssertionCoordinator _addAssertion:]
Invalid Expiration Duration
Expired effective date and expiration duration.
-[AFAssertionCoordinator _addAssertion:]_block_invoke
-[AFAssertionCoordinator _activateAssertionWithUUID:]
-[AFAssertionCoordinator _activateAssertionWithUUID:]_block_invoke
v16@?0@"AFAssertionContext"8
Expired on Schedule
-[AFAssertionCoordinator _deactivateAndRemoveAssertionWithUUID:context:error:options:]
-[AFAssertionCoordinator _invalidate]
%@ Invalidated
uuid = %@, timestamp = %llu, reason = %@, effectiveDate = %@ (%f), expirationDuration = %f, userInfo = %@
options
reason
speechRequestOptions
options = %lu [%@]
reason = %ld (%@)
speechRequestOptions = %@
AFSetAudioSessionActiveContext::options
AFSetAudioSessionActiveContext::reason
AFSetAudioSessionActiveContext::speechRequestOptions
AlarmURLs
alarmAndTimerFiring
mediaPlaybackStatePlaying
mediaPlaybackStateInterrupted
com.apple.assistant.logging
AFLogLevel
AFOutputLevel
AFCommandLoggingEnabled
log.facility.assistant
Client
ClientFlow
Daemon
Session
Speech
Fides
Location
AceConnection
Service
Plugin
Utility
Analysis
Performance
Proxy
Dispatch
Analytics
TinyCDB
MediaSupport
MockServer
MusicIndexer
Database
Sync
DeviceSync
InternalAuth
Myriad
Networking.Functional
Networking.Performance
/Library/Logs/CrashReporter/Assistant/
SpeechLogs
AFSpeechLogsDirectory
AFAnalyticsLogsDirectory
AFClearInternalLogFiles
CommandLogs
AFLogParsedCommandObject
plist
AFDispatchSyncLogged
AFDispatchSyncLogged_block_invoke
AFDispatchAsyncLogged
AFDispatchAsyncLogged_block_invoke
timestamp
effectiveDate
expirationDuration
userInfo
timestamp = %@
reason = %@
effectiveDate = %@
expirationDuration = %@
userInfo = %@
AFAssertionContext::timestamp
AFAssertionContext::reason
AFAssertionContext::effectiveDate
AFAssertionContext::expirationDuration
AFAssertionContext::userInfo
AFSiriTaskExecution.m
-[AFSiriTaskExecution initWithRequest:taskDeliverer:usageResultListener:]
Siri Task Execution
v24@?0@"AFSiriResponse"8@"NSError"16
-[AFSiriTaskExecution dealloc]
SiriRequest
SiriResponse
Task executions can only be started once
-[AFSiriTaskExecution start]_block_invoke_3
-[AFSiriTaskExecution start]_block_invoke
-[AFSiriTaskExecution _completeWithResponse:error:]
-[AFSiriTaskExecution _completeWithResponse:error:]_block_invoke
builtIn
server
default
horseman
application
allocation
properties
allocation = %@
properties = %@
AFExperimentGroup::identifier
AFExperimentGroup::allocation
AFExperimentGroup::properties
v16@?0@"<AFCoreAnalyticsDeviceContextPayloadMutating>"8
v32@?0@"AFServiceDeviceContext"8Q16^B24
instanceUUID
applicationType
applicationUUID
instanceUUID = %@
applicationType = %ld (%@)
applicationUUID = %@
AFInstanceInfo::instanceUUID
AFInstanceInfo::applicationType
AFInstanceInfo::applicationUUID
AFWatchdogTimer.m
Invalid parameter not satisfying: %@
timeoutInterval >= 0
queue
timeoutHandler
_version
_history
_itemIdentifier
_selectionType
_date
Manual
Single Result
Assisted
Identifier: %@, Selection Type: %@, Date: %@
vtSatScore
confidenceScores
vtSatScore = %@
confidenceScores = %@
AFMultiUserStateSnapshot::vtSatScore
AFMultiUserStateSnapshot::confidenceScores
AFTurnIdentifierCreateFromBytes
perceptualAudioHash
overrideState
activationSource
activationExpirationTime
perceptualAudioHash = %@
overrideState = %@
activationSource = %ld (%@)
activationExpirationTime = %@
AFMyriadContext::timestamp
AFMyriadContext::perceptualAudioHash
AFMyriadContext::overrideState
AFMyriadContext::activationSource
AFMyriadContext::activationExpirationTime
com.apple.siri.activation.connection
-[AFSiriActivationConnection prewarmWithRequestInfo:context:completion:]
-[AFSiriActivationConnection prewarmWithRequestInfo:context:completion:]_block_invoke_2
v16@?0@"<AFSiriActivationResultMutating>"8
-[AFSiriActivationConnection prewarmWithRequestInfo:context:completion:]_block_invoke
v16@?0@"AFSiriActivationResult"8
-[AFSiriActivationConnection activateWithRequestInfo:context:completion:]
-[AFSiriActivationConnection activateWithRequestInfo:context:completion:]_block_invoke_2
-[AFSiriActivationConnection deactivateForReason:options:context:completion:]
-[AFSiriActivationConnection deactivateForReason:options:context:completion:]_block_invoke_2
-[AFSiriActivationConnection handleContext:completion:]
-[AFSiriActivationConnection handleContext:completion:]_block_invoke_2
-[AFSiriActivationConnection handleIntent:inBackgroundAppWithBundleId:reply:]
-[AFSiriActivationConnection handleIntent:inBackgroundAppWithBundleId:reply:]_block_invoke_2
-[AFSiriActivationConnection handleIntent:inBackgroundAppWithBundleId:reply:]_block_invoke
v24@?0@"INIntentResponse"8@"NSError"16
-[AFSiriActivationConnection handleIntentForwardingAction:inBackgroundApplicationWithBundleIdentifier:completionHandler:]
-[AFSiriActivationConnection handleIntentForwardingAction:inBackgroundApplicationWithBundleIdentifier:completionHandler:]_block_invoke_2
-[AFSiriActivationConnection handleIntentForwardingAction:inBackgroundApplicationWithBundleIdentifier:completionHandler:]_block_invoke
v16@?0@"INIntentForwardingActionResponse"8
-[AFSiriActivationConnection _connection]
-[AFSiriActivationConnection _connectionInterrupted]
-[AFSiriActivationConnection _connectionInvalidated]
PhonemeMaps
v32@?0@"NSTextCheckingResult"8Q16^B24
com.apple.assistant.power-assertion-manager
-[AFPowerAssertionManager initWithIdentifier:]
-[AFPowerAssertionManager takePowerAssertionWithName:]
effectiveName
-[AFPowerAssertionManager takePowerAssertionWithName:]_block_invoke
-[AFPowerAssertionManager releasePowerAssertionWithName:]
-[AFPowerAssertionManager releasePowerAssertionWithName:]_block_invoke
-[AFPowerAssertionManager releaseAllPowerAssertions]
-[AFPowerAssertionManager releaseAllPowerAssertions]_block_invoke_2
v32@?0@"NSString"8@"<AFRelinquishableAssertion>"16^B24
-[AFPowerAssertionManager dealloc]
-[AFPowerAssertionManager assertionCoordinator:didActivateAssertion:isFirstAssertion:]
-[AFPowerAssertionManager assertionCoordinator:didDeactivateAssertion:isLastAssertion:]
_xpcObject
WasLanguageToggled
CurrentKeyboard
LastMessageLanguage
GlobalLastUsedKeyboard
MultilingualKeyboardLanguages
RecentConversationalMessages
DictationLanguages
KeyboardConversationLanguagePriors
KeyboardGlobalLanguagePriors
Language toggled = %d,
Current keyboard = %@,
Previous message language = %@,
Last used keyboard = %@,
Multilingual keyboard languages = %@,
Primary language = %@,
Dictation languages = %@,
Global Conversational Language Priors = %@,
Global Keyboard Language Priors = %@,
Dictation input origin = %@.
_languageToggled
_simulateLanguageDetectorAssetsAvailability
_currentKeyboard
_primaryLanguageCode
_prevMessageLanguage
_globalLastUsedKeyboard
_userContextChangeBit
_multiLingualKeyboardLanguages
_keyboardConvoRecentMessages
_dictationLanguages
_simulatingLanguageCodes
_finalDictationLanguages
_keyboardConversationLanguagePriors
_keyboardGlobalLanguagePriors
_languageCodeOverrides
_lidUserContext
_dictationLanguageMappingCache
v32@?0@"NSString"8Q16^B24
v32@?0@"NSString"8@"NSString"16^B24
AFLanguageDetectionUserContext.m
The cached dictation languages is not a instance of NSArray
The input dictation languages are not supported by language detector. This is a critical error.
-[AFLanguageDetectionUserContext getDictationLanguagesForSupportedLocales:error:]
-[AFLanguageDetectionUserContext userContextLanguageCodeForKeyboardLangauge:overrideLanguageCode:]
com.apple.assistant.sync_data_changed
com.apple.assistant.sync_did_finish
sync_flag
-[AFAudioSessionAssertionConnection initWithInstanceContext:acquisitionContext:relinquishmentHandler:]
com.apple.assistant.audio-session-assertion.client-connection
%@ {uuid = %@, instanceContext = %@, acquisitionContext = %@}
-[AFAudioSessionAssertionConnection dealloc]
%@ is deallocated without relinquishment and finalization.
-[AFAudioSessionAssertionConnection invalidate]
%@ is invalidated without relinquishment and finalization.
-[AFAudioSessionAssertionConnection relinquishWithContext:options:]
-[AFAudioSessionAssertionConnection relinquishWithError:options:]
-[AFAudioSessionAssertionConnection _acquireWithContext:]
-[AFAudioSessionAssertionConnection _relinquishWithContext:error:options:]
-[AFAudioSessionAssertionConnection _relinquishWithContext:error:options:]_block_invoke
-[AFAudioSessionAssertionConnection _finalizeWithContext:error:]
-[AFAudioSessionAssertionConnection handleXPCConnectionInterrupted]
-[AFAudioSessionAssertionConnection handleXPCConnectionInvalidated]
-[AFAudioSessionAssertionConnection _xpcConnection]
-[AFAudioSessionAssertionConnection _clearXPCConnection]
Timer
timer
kAFAssistantErrorDomain
SiriSpeechErrorDomain
SiriAceErrorDomain
SiriStructuredDictationErrorDomain
SiriLocalizedFailureTitle
SiriLocalizedFailureDescription
SiriRecognition
SiriSerializedUserActivity
SiriUnderlyingErrors
AFError.m
AFError is not designed to be instantiated.
+[AFError new]
-[AFError init]
AFErrorSetUnderlyingError
_AFErrorSetUnderlyingErrorRecursively
v32@?0@"NSError"8Q16^B24
-[_AFAudioPowerXPCSharedMemory initWithXPCObject:]
-[_AFAudioPowerXPCSharedMemory _destroyMapping]
com.apple.assistant.contextprovider
com.apple.assistant.contextprovider.%@
CollateContexts
Contexts
com.apple.siri.contextcollector
-[AFContextManager _collateContextsIntoArray:]
AFContextManager.m
[NSThread isMainThread]
-[AFContextManager addContextProvider:]
-[AFContextManager removeContextProvider:]
mediaRouteIdentifier
mediaRouteIdentifier = %@
AFEndpointInfo::identifier
AFEndpointInfo::mediaRouteIdentifier
AFUserNotificationProvider
-[AFUserNotificationProvider postNotificationRequest:responseHandler:]
v16@?0@"UNNotificationResponse"8
-[AFUserNotificationProvider postNotificationRequest:responseHandler:]_block_invoke
-[AFUserNotificationProvider withdrawNotificationRequestWithIdentifier:]_block_invoke
-[AFUserNotificationProvider _connection]_block_invoke
-[AFUserNotificationProvider receivedNotificationResponse:]
/siri/ui
AFRecordCoreDuetContext
AFDeleteCoreDuetEventsInStream
AFDeleteCoreDuetEventsInStream_block_invoke
(startDate > %@ AND startDate < %@) OR (endDate > %@ AND endDate < %@)
AFAppleAudioDeviceConnectedInLast24Hours
unknown_product_id
_AFRecordCoreDuetEventAtTimestamps_block_invoke
_DKEvent
/System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet
_CDContextualKeyPath
/System/Library/PrivateFrameworks/CoreDuetContext.framework/CoreDuetContext
_CDClientContext
_DKQuery
_DKEventStream
_AFFetchCoreDuetEventsWithStream
_DKEventQuery
_DKKnowledgeStore
_DKSystemEventStreams
_DKBluetoothMetadataKey
PreviousConversation
Library
Assistant
Unspecified
RemoteRequest
Continuity
DirectAction
CorrectedText
Keyboard
SpokenNotification
ExternalRequest
TestAutomation
AnnounceIncomingCall
Bluetooth Headset
TV Remote
Control Center Remote
Remote App
Non Apple Remote
Home Button
Motion Down Gesture
Motion Up Gesture
On-Screen Affordance
Server Command
CarPlay
Voice
Wired Microphone
Stark Voice
Pre Recorded Audio
Raise To Speak
Hearst Double Tap
Hearst Voice
Hearst Button Press
Jarvis
Triggerless
Test
Spoken Notification
Continuous Voice Trigger
Honeycomb Voice
CarPlay Spoken Notification
AFQuickStopActionNone
AFQuickStopActionDismissFiringAlarm
AFQuickStopActionDismissFiringTimer
AFQuickStopActionInterruptSiriVoiceOutput
AFQuickStopActionStopMediaPlayback
AFQuickStopActionStopHomeAnnouncementPlayback
AFQuickStopActionCancelRunningTimer
AFQuickSTopActionPromptForConfirmation
isVoiceOverTouchEnabled
isVibrationDisabled
isVoiceOverTouchEnabled = %ld (%@)
isVibrationDisabled = %ld (%@)
AFAccessibilityState::isVoiceOverTouchEnabled
AFAccessibilityState::isVibrationDisabled
_temperatureUnit
_twentyFourHourTimeDisplay
_region
_countryCode
_preferredLanguage
count
index
source
-[AFUserUtterance rangeListOfDifferingTextFromUtteranceAtIndex:comparedToBaseUtteranceAtIndex:]
-[AFUserUtterance speechTokensForUtteranceAtIndex:]
-[AFUserUtterance textOfUtteranceAtIndex:]
v32@?0@"NSNumber"8Q16^B24
-[AFUserUtterance allRecognitionStringsAndScores]
-[AFUserUtterance _updatePhraseswithSwapIndices:]
-[AFUserUtterance _updateUtteranceswithAlternativeUtteranceAtIndex:swapIndices:]
-[AFUserUtterance updateDictationResult:withAlternativeUtteranceAtIndex:]
<%@: %p; %lu phrases; %lu tokens; text: "%@">
combinedRank: %@ combinedScore: %@ interactionId: %@ onDeviceUtterancesPresent: %@ originalRank: %@ originalScore: %@ previousUtterance; %@ sessionId: %@ utteranceSource: %@
_combinedRank
_combinedScore
_interactionId
_onDeviceUtterancesPresent
_originalRank
_originalScore
_previousUtterance
_sessionId
_utteranceSource
v32@?0@"NSString"8@"NSDictionary"16^B24
v40@?0r^v8{_NSRange=QQ}16^B32
{NSDecimalNumber=#b8b4b1b1b1b1b16[0S]}
{NSURL=#@@^v^v}
{NSDictionary=#}
aceId
timerID
timerURL
isFiring
title
duration
fireTimeInterval
fireDate
firedDate
dismissedDate
lastModifiedDate
timerID = %@
timerURL = %@
isFiring = %@
title = %@
duration = %@
fireTimeInterval = %@
fireDate = %@
firedDate = %@
dismissedDate = %@
lastModifiedDate = %@
AFClockTimer::timerID
AFClockTimer::timerURL
AFClockTimer::isFiring
AFClockTimer::title
AFClockTimer::state
AFClockTimer::duration
AFClockTimer::type
AFClockTimer::fireTimeInterval
AFClockTimer::fireDate
AFClockTimer::firedDate
AFClockTimer::dismissedDate
AFClockTimer::lastModifiedDate
com.apple.assistant.analytics.connection
-[AFAnalyticsConnection beginEventsGrouping]
-[AFAnalyticsConnection endEventsGrouping]
-[AFAnalyticsConnection logInstrumentationOfType:machAbsoluteTime:turnIdentifier:]_block_invoke_2
-[AFAnalyticsConnection stageUEIEventData:timestamp:]_block_invoke_2
-[AFAnalyticsConnection boostQueuedEvents:]
-[AFAnalyticsConnection boostQueuedEvents:]_block_invoke
-[AFAnalyticsConnection _handleFailureCallbackForEvents:error:numberOfRetries:completion:]
started
finished
cancelled
failed
ignored
%@ anchor: %@ validity: %@ count: %zd key: %@ targetIsLocal: %d appMetadata: %@ reasons: %@
_anchor
_validity
_count
_key
_targetIsLocal
_appMetadata
_forVerification
_reasons
jitContext
overrideModelPath
jitContext = %@
overrideModelPath = %@
AFSpeechTestRequestOptions::jitContext
AFSpeechTestRequestOptions::overrideModelPath
_recognition
_unfilteredRecognition
_rawRecognition
_audioAnalytics
_isFinal
_utteranceStart
_latMitRes
recognition
unfilteredRecognition
rawRecognition
isFinal
utteranceStart
style
beepSoundID
style = %ld (%@)
beepSoundID = %ld (%@)
AFSpeechRecordingAlertBehavior::style
AFSpeechRecordingAlertBehavior::beepSoundID
speechRecognizedCommand
speechRecognizedCommand = %@
AFSpeechInfo::speechRecognizedCommand
data
data = (%ld bytes)
AFMyriadPerceptualAudioHash::data
v32@?0@8@16^B24
tone
silent
forceSiriX
forceSiriClassic
daemon
daemon.launch
daemon.loaded
daemon.exit
daemon.failure
daemon.start-request.speech
daemon.start-request.dictation
daemon.start-request.other
daemon.start-request.keyboard
daemon.log.numeric-event
daemon.log.string-event
daemon.audio
daemon.audio.init.begin
daemon.audio.init.end
daemon.audio.configure.begin
daemon.audio.configure.end
daemon.audio.prewarm.begin
daemon.audio.prewarm.end
daemon.audio.prepare.begin
daemon.audio.prepare.end
daemon.audio.fetch-route.begin
daemon.audio.fetch-route.end
daemon.audio.start-recording.begin
daemon.audio.start-recording.end
daemon.audio.recording.begin
daemon.audio.recording.first-buffer
daemon.audio.recording.end
daemon.audio.stop-recording.begin
daemon.audio.stop-recording.end
daemon.audio.late-buffer
daemon.audio.analyzer.startpoint.detected
daemon.audio.analyzer.hard-endpoint.detected
daemon.audio.failure
daemon.audio.bt-info.fetch.begin
daemon.audio.bt-info.fetch.end
daemon.audio.fan-info
daemon.audio.first-chance-trigger-info
daemon.audio.recording.interruption.begin
daemon.audio.recording.interruption.end
daemon.audio.set-endpoint-state
daemon.audio.recording.first-buffer.start
daemon.audio.recording.first-buffer.receipt
daemon.audio.recording.last-buffer.start
daemon.audio.recording.last-buffer.receipt
daemon.audio.session.set-active.begin
daemon.audio.session.set-active.end
daemon.audio.session.set-inactive.begin
daemon.audio.session.set-inactive.end
daemon.audio.recording.missed-buffer
daemon.audio.file.started
daemon.audio.two-shot.transition.begin
daemon.audio.two-shot.transition.end
daemon.audio.recording.metrics
daemon.audio.bluetooth-info
daemon.audio.analyzer.multi-modal-endpoint.detected
daemon.audio.session.prepare.begin
daemon.audio.session.prepare.end
daemon.audio.session.release.begin
daemon.audio.session.release.end
daemon.audio.session.local-assertion.acquire
daemon.audio.session.local-assertion.activate
daemon.audio.session.local-assertion.deactivate
daemon.audio.session.local-assertion.relinquish
daemon.audio.session.remote-assertion.acquire
daemon.audio.session.remote-assertion.activate
daemon.audio.session.remote-assertion.deactivate
daemon.audio.session.remote-assertion.relinquish
daemon.audio.session.first-assertion.activate
daemon.audio.session.last-assertion.deactivate
daemon.speech
daemon.speech.capture.start.begin
daemon.speech.capture.start.end
daemon.speech.capture.update
daemon.speech.capture.cancel
daemon.speech.capture.stop
daemon.speech.failure
daemon.speech.capture.continued
daemon.speech.result-candidate.evaluation.begin
daemon.speech.result-candidate.evaluation.end
daemon.speech.result-candidate.accepted
daemon.speech.result-candidate.stashed
daemon.speech.log.begin
daemon.speech.log.end
daemon.service
daemon.service.handle.begin
daemon.service.handle.end
daemon.service.bundle.handle.begin
daemon.service.bundle.handle.end
daemon.memory
daemon.memory.pressure.notification
daemon.generic-intent
daemon.generic-intent.handle.begin
daemon.generic-intent.handle.timeout
daemon.generic-intent.deliver.begin
daemon.generic-intent.recipient.state-changed
daemon.generic-intent.recipient.crash
daemon.generic-intent.recipient.finished
daemon.generic-intent.handle.end
daemon.intent
daemon.intent.extension.prepare
daemon.intent.extension.ready
daemon.intent.extension.unexpected-exit
daemon.intent.extension.launch.timeout.
daemon.intent.extension.request.timeout
daemon.intent.resolve.begin
daemon.intent.resolve.request.sent
daemon.intent.resolve.response.received
daemon.intent.resolve.end
daemon.intent.confirm.begin
daemon.intent.confirm.request.sent
daemon.intent.confirm.response.received
daemon.intent.confirm.response-ui-visible
daemon.intent.confirm.end
daemon.intent.handle.begin
daemon.intent.handle.request.sent
daemon.intent.handle.response.received
daemon.intent.handle.response-ui-visible
daemon.intent.handle.end
daemon.intent.launch-with-intent.begin
daemon.intent.launch-with-intent.end
daemon.intent.launch-with-user-activity.begin
daemon.intent.launch-with-user-activity.end
daemon.intent.resolve-app.begin
daemon.intent.resolve-app.end
daemon.intent.extension.request.begin
daemon.intent.extension.request.end
daemon.intent.extension.prewarm.begin
daemon.intent.extension.prewarm.end
daemon.intent.process-intent.begin
daemon.intent.process-intent.end
daemon.intent.process-intent.extension.sent
daemon.intent.process-intent.extension.received
daemon.intent.get-app-info.begin
daemon.intent.get-app-info.end
daemon.intent.process-intent.resolve.begin
daemon.intent.process-intent.resolve.end
daemon.intent.process-intent.confirm.begin
daemon.intent.process-intent.confirm.end
daemon.intent.process-intent.handle.begin
daemon.intent.process-intent.handle.end
daemon.task
daemon.task.schedule
daemon.task.start
daemon.task.deliver
daemon.task.finish
daemon.domain-signal
daemon.domain-signal.launch-app
daemon.session
daemon.session.connection.opened
daemon.session.connection.snapshot.local
daemon.session.connection.snapshot.remote
daemon.session.connection.timeout
daemon.session.connection.dropped
daemon.session.connection.failed
daemon.session.validation.failed
daemon.session.authentication.failed
daemon.session.assistant.failed
daemon.session.assistant.not-ready
daemon.session.remapped-request-id
daemon.session.connection.start
daemon.session.connection.reset
daemon.session.connection.client-connection-id.created
daemon.session.connection.first-byte.received
daemon.session.local.assistant.not-ready
daemon.session.local.connection.reset
daemon.session.proxied-request-id
daemon.session.won
daemon.session.load-assistant
daemon.session.failed
daemon.session.connection.http-header.created
daemon.session.results.queued
daemon.session.assistant.loaded
daemon.session.reset-on-request-boundary
daemon.session.connection-header.ace-host.mismatch
daemon.network
daemon.network.available
daemon.network.server-address.resolved
daemon.network.failure
daemon.network.peer.error
daemon.network.ace-ping.sent
daemon.network.ace-pong.received
daemon.network.provider.open.begin
daemon.network.provider.open.end
daemon.network.provider.secondary.open.begin
daemon.network.provider.secondary.open.end
daemon.network.link.recommendation.begin
daemon.network.link.recommendation.end
daemon.network.link.recommendation.timeout
daemon.network.connection.unviable
daemon.network.connection.viable
daemon.network.connection.state-prepare
daemon.network.connection.state-ready
daemon.network.connection.data.consumed
daemon.incoming-command
daemon.incoming-command.speech-partial-result
daemon.incoming-command.speech-recognized
daemon.outgoing-command
daemon.outgoing-command.failure
daemon.local.outgoing-command.failure
daemon.service.maintenance.begin
daemon.service.maintenance.end
daemon.preferences.synchronize.failure
ui.plugin.loaded
ui.activation.prepare
ui.activation.cancel
ui.activation.handle.begin
ui.activation.handle.end
ui.present.begin
ui.present.end
ui.dismiss.begin
ui.dismiss.end
ui.button.down
ui.button.up
ui.button.tap
ui.blur
ui.flames.present
ui.flames.dismiss
ui.mode.idle
ui.mode.listening
ui.mode.thinking
ui.mode.success
ui.uufr.present
ui.command.handle.begin
ui.command.handle.end
ui.failure
ui.tap-to-edit-button.tap
ui.url-session-load.failure
ui.disambiguation.selected
ui.tts.should-speak
ui.tts.should-not-speak
ui.transcript-item.inserted
ui.transcript-item.did-appear
ui.transcript-item.did-disappear
ui.transcript.scrolled
ui.unlock-ui.presented
ui.unlock-ui.dismissed
ui.device.locked
ui.device.unlocked
ui.punchout.begin
ui.punchout.end
ui.transcript-items.reload.begin
ui.transcript-items.reload.end
ui.mode.presenting
ui.mode.idle.rendered
ui.mode.listening.rendered
ui.mode.thinking.rendered
ui.mode.presenting.rendered
ui.button.text-request-input.start
ui.button.text-request-input.done
ui.button.text-request-input.clear
ui.add-views.view.null-ace-id-detected
ui.swipe.dismiss
ui.bluetooth.bvra1.received
ui.notification-sound.playback.failure
ui.view.presented
ui.view.dismissed
ui.view.did-engage
ui.view.scrolled
ui.view.item-selected
ui.audio-route-picker.tapped
ui.received-reveal-speech-command
ui.dismiss.request
ui.view.did-appear
ui.view.did-disappear
ui.view-service
ui.view-service.launch
ui.view-service.loaded
ui.view-service.exit
ui.view-service.speech-partial-result.received
ui.view-service.speech-partial-result.presented
ui.view-service.speech-recognized.received
ui.view-service.speech-recognized.presented
ui.view-service.failure
ui.view-service.pin
ui.view-service.pin.begin
ui.view-service.pin.end
ui.view-service.drag
ui.view-service.did-appear
ui.view-service.did-disappear
coverage.aggregate-dictionary
coverage.aggregate-dictionary.scalar
coverage.aggregate-dictionary.distribution
coverage.request-statistics
coverage.request-statistics.cancellation
coverage.request-statistics.failure
voice-services.daemon
voice-services.daemon.speech-request.creation
voice-services.daemon.speech-request.vocalization.begin
voice-services.daemon.speech-request.vocalization.end
voice-services.daemon.speech-request.synthesize.begin
voice-services.daemon.speech-request.synthesize.end
voice-services.daemon.speech-request.vocalization.output-estimated-begin
client
client.start-request
client.start-speech-request
client.start-speech-pronunciation-request
client.start-acoustic-id-request
client.start-continuity-request
client.start-correction-request
client.start-direct-action-request
client.start-text-request
client.update-speech
client.stop-speech
client.cancel-speech
client.request-canceled
client.request-failed
client.request-completed
client.preheat
client.acoustic-id.begin
client.acoustic-id.end
client.tether.wait.begin
client.tether.wait.end
client.tether.attach.begin
client.tether.attach.end
client.tether.attached
client.tether.detached
client.feedback.presented
client.auto-disambiguation.requested
client.auto-disambiguation.saved
client.location.no-result
client.location.start-updating
client.location.did-update
client.screen-wake-requested
client.screen-turn-off-requested
client.coord
client.coord.audio-ready
client.coord.advertising-start-request
client.coord.advertising-did-start
client.coord.advertising-end-request
client.coord.advertising-did-end
client.coord.decision-made
client.coord.slowdown-generated
client.coord.slowdown-received
client.coord.multiple-continuation-signals
client.coord.advertising-will-end
client.coord.activity-start
client.coord.activity-end
client.coord.advertisement-push-begin
client.coord.advertisement-push-error
client.coord.advertisement-push-response-received
client.coord.advertisement-push-response-received-invalidAdvertisementId
client.coord.advertisement-push-response-received-late
client.coord.suppress-late-trigger
client.coord.accessory-message-pushed
client.coord.accessory-message-push-ack-received
client.coord.accessory-decision-received
client.coord.accessory-emergency-handled
ui.watch
ui.activation.gizmo-vt-while-already-recording
ui.delayed-response.education
ui.delayed-response.wrist-lowered
ui.delayed-response.backlight-on
ui.tts.canceled
client.dictation
client.dictation.start-request
client.dictation.update-speech
client.dictation.stop-speech
client.dictation.cancel-speech
client.dictation.request-canceled
client.dictation.request-failed
client.dictation.request-completed
client.dictation.timeout-request
client.dictation.speech-recording.started
client.dictation.speech-recording.canceled
client.dictation.speech-recording.completed
client.dictation.speech-recording.failed
client.dictation.speech-recognition.phrases-recognized
client.dictation.speech-recognition.tokens-recognized
client.dictation.speech-recognition.transcription-objects-recognized
client.dictation.speech-recognition.completed
client.dictation.speech-recognition.failed
client.dictation.app-did-enter-background
client.dictation.smart-language-selection.language-overridden
client.dictation.request-sampled
client.dictation.personalization-validation-metrics
client.dictation.request-completion-status
client.dictation.sampled-audio.send-to-server.status
client.dictation.request-sampled.save-audio
client.dictation.preheat
client.dictation.offline-dictation-status
voice-trigger
voice-trigger.start
voice-trigger.fire
voice-trigger.end
voice-trigger.early-detect
ui-plugin
ui-plugin.movies.loading-media-buttons.begin
ui-plugin.movies.loading-media-buttons.end
ui-plugin.sports.watch-list-kit-call.begin
ui-plugin.sports.watch-list-kit-call.end
qa.automation
qa.automation.begin
qa.automation.end
qa.automation.mark
cdm.nl-service.handle-command.begin
cdm.nl-service.handle-command.end
cdm.flow-service.handle-command.begin
cdm.flow-service.handle-command.end
cdm.config.asset-manager.offline-query-start
cdm.config.asset-manager.offline-query-success
cdm.config.asset-manager.offline-query-failed
cdm.config.asset-manager.online-query-start
cdm.config.asset-manager.online-query-success
cdm.config.asset-manager.online-query-failed
cdm.config.asset-manager.asset-download-start
cdm.config.asset-manager.asset-download-completed
cdm.config.asset-manager.asset-download-failed
cdm.config.asset-manager.asset-download-cancelled
cdm.config.asset-manager.asset-purged
cdm.start-speech.received
cdm.set-assistant-data.received
cdm.load-assistant.received
cdm.service.handle-command.begin
cdm.service.handle-command.end
vox.speech-synthesis.enqueued
vox.speech-synthesis.canceled
vox.speech-synthesis.failed
vox.speech-synthesis.finished
vox.speech-synthesis.interrupted
vox.speech-synthesis.started
vox.two-shot-sound.begin
vox.two-shot-sound.end
vox.session-inactive-sound.begin
vox.session-inactive-sound.end
vox.tap-to-siri-sound.begin
vox.tap-to-siri-sound.end
now-playing
now-playing.is-playing.changed
music
music.playback.ready
music.playback.secure-key
music.playback.asset-load
music.playback.summary
music.playback.start
music.playback.queue.received
music.playback.queue.daemon.received
music.playback.alternatives
xcode
xcode.test.begin
xcode.test.end
device-configuration
device-configuration.snapshot
settings
settings.set-language
settings.set-output-voice
settings.set-voice-feedback
settings.changed-tcc-info
settings.changed-type-to-siri
setup
setup.phs.bootstrapped
setup.phs.training-started
setup.phs.training-finished
setup.phs.training-canceled
setup.phs.training-phs-1
setup.phs.training-phs-2
setup.phs.training-phs-3
setup.phs.training-phs-4
setup.phs.training-phs-5
setup.phs.training-skipped
setup.phs.training-step-retry
experiment
experiment.exposure.siri-vox-sounds
experiment.exposure.siri-vox-tap-to-siri-behavior
experiment.exposure.invocation-feedback
client-flow.plugin
client-flow.plugin.started
client-flow.plugin.execution.started
client-flow.plugin.execution.finished
client-flow.plugin.execution.failed
client-flow.cf-client
client-flow.cf-client.scripter-load-started
client-flow.cf-client.scripter-load-finished
client-flow.cf-client.scripter-warmed-up
client-flow.cf-client.scripter-warmed-up-with-script-hint
client-flow.cf-client.execution.started
client-flow.cf-client.execution.finished
client-flow.cf-client.execution.failed
client-flow.cf-client.warmup.started
client-flow.cf-client.cache.evicted
client-flow.js
client-flow.js.siri-mini
client-flow.js.server-flow
client-flow.js.provider
client-flow.js.background-action.maintenance
client-flow.js.background-action.activity-collection
client-flow.js.background-action.data-migration
client-flow.js.background-action.update-scripts
client-flow.js.background-action.morphun_assets_downloaded
client-flow.js.background-action.morphun_assets_failed
client-flow.update-scripts.script.download-from-server
client-flow.update-scripts.script.download-from-cdn
client-flow.update-scripts.script.download-failed-from-cdn.invalidUrl
client-flow.update-scripts.script.download-failed-from-cdn.networkError
client-flow.update-scripts.script.download-failed-from-cdn.hmacVerificationError
client-flow.update-scripts.script.download-failed-from-cdn.decryptionError
client-flow.update-scripts.script.download-failed-from-cdn.checksumVerificationError
client-flow.client-scripter
client-flow.client-scripter.started
client-flow.client-scripter.js-context-setup.started
client-flow.client-scripter.js-context-setup.finished
client-flow.client-scripter.js-evaluation.started-for-script
client-flow.client-scripter.js-evaluation.finished-for-script
client-flow.client-scripter.js-execution.started
client-flow.client-scripter.js-execution.finished
client-flow.client-scripter.js-execution.successful
client-flow.client-scripter.js-execution.failed
client-flow.client-scripter.script.sent-from-server
client-flow.client-scripter.script.retrieved-from-server
client-flow.client-scripter.script.loaded-from-memory-cache
client-flow.client-scripter.script.loaded-from-filesystem
client-flow.client-scripter.script.used-cached-js-context
client-flow.client-scripter.script.used-deferred-cached-js-context
client-flow.client-scripter.script.retrieval-failed
client-flow.client-scripter.script.caching-failed
client-flow.client-scripter.sent-command
client-flow.client-scripter.sent-command-async
client-flow.client-scripter.received-response
client-flow.client-scripter.js-context-created-in-warmup
client-flow.client-scripter.js-context-evaluated-script-in-warmup-for-script
client-flow.client-scripter.cached-js-context-count
client-flow.client-scripter.execution.failed
client-flow.client-scripter.connection-interrupted
client-flow.client-scripter.connection-invalidated
client-flow.client-scripter.memory-usage
client-flow.client-scripter.warmup-failed
ui.card.present.begin
ui.card.present.end
ui.card.section-present.begin
ui.card.section-present.end
ui.card.engaged-with
ui.card.section-engaged-with
ui.card.async-card-requested
ui.card.async-card-received
ui.card.relationship-identified
assistant-service
assistant-service.launch
assistant-service.exit
assistant-service.message.send
assistant-service.message.delivered
assistant-service.message.begin
assistant-service.message.end
assistant-service.command-perform.begin
assistant-service.command-perform.end
assistant-service.bundle-loading.begin
assistant-service.bundle-loading.end
cloud-kit
cloud-kit.siri.change-arrived
cloud-kit.knowledge.change-arrived
cloud-kit.keychain.sync-error
cloud-kit.zone.not-found
cloud-kit.server.change-token.expired
cloud-kit.rate-limited
cloud-kit.network-failure
cloud-kit.server.record-changed
ids.device-connection.snapshot.local
analytics
analytics.store.database.post-corruption-detected
analytics.store.database.open-failed
analytics.store.database.integrity-check-failed
analytics.store.database.unrecoverable-error-detected
analytics.store.database.preparation-failed
analytics.store.reset
analytics.store.database.created
local-recognition
local-recognition.started
local-recognition.partial-result
local-recognition.eager-candidate
local-recognition.package
local-recognition.finished
local-recognition.preheat.start
local-recognition.preheat.done
daemon.context
daemon.context.get-background-context.begin
daemon.context.get-background-context.end
daemon.context.get-background-context.nav-status.begin
daemon.context.get-background-context.nav-status.end
daemon.context.get-background-context.now-playing.begin
daemon.context.get-background-context.now-playing.end
daemon.context.get-background-context.siri-kit-settings.begin
daemon.context.get-background-context.siri-kit-settings.end
daemon.context.get-background-context.device-problems.begin
daemon.context.get-background-context.device-problems.end
daemon.context.get-background-context.current-home-kit-home.begin
daemon.context.get-background-context.current-home-kit-home.end
daemon.context.get-background-context.app-subscription-status.begin
daemon.context.get-background-context.app-subscription-status.end
daemon.context.get-background-context.music-personalization-token.begin
daemon.context.get-background-context.music-personalization-token.end
daemon.context.get-background-context.phone-call-state.begin
daemon.context.get-background-context.phone-call-state.end
daemon.context.get-background-context.simple-state.begin
daemon.context.get-background-context.simple-state.end
daemon.context.get-background-context.is-navigating.begin
daemon.context.get-background-context.is-navigating.end
daemon.context.get-background-context.playback-devices.begin
daemon.context.get-background-context.playback-devices.end
daemon.context.get-cross-device-context.begin
daemon.context.get-cross-device-context.end
daemon.context.get-background-context.home-communication-announcement.begin
daemon.context.get-background.context.home-communication-announcement.end
daemon.context.cross-device-command.handled
daemon.context.cross-device-command.nearby-devices
daemon.context.context-collector.changed
daemon.context.local-context.changed
daemon.context.context-fetch.request.sent
daemon.context.context-fetch.request.received
daemon.context.context-fetch.response.sent
daemon.context.context-fetch.response.received
daemon.context.context-fetch.error
volume
volume.changed
volume.fetched
volume.updated
volume.down
volume.up
core-speech
core-speech.audio-logging-metrics
core-speech.smart-siri-volume.fetched
core-speech.smart-language-detector.metrics
core-speech.voice-trigger.reject.info
core-speech.voice-trigger.phs-reject.info
core-speech.nvi.additional.signal
core-speech.last-process-chunk
core-speech.voice-trigger.toggle.info
core-speech.voice-trigger.phs-fa-reject.info
core-speech.audio.first-buffer.info
core-speech.audio.endpoint-buffer.info
core-speech.endpointer.latency.info
core-speech.acoustic-ftm.metrics.info
daemon.peer-message
daemon.peer-message.send.begin
daemon.peer-message.send.end
daemon.peer-message.remote.execute.send.begin
daemon.peer-message.remote.execute.send.end
call-status
call-status.audio-call.on
call-status.audio-call.off
daemon.peer
daemon.peer.companion.account.changed
daemon.wha
daemon.wha.media.system.configuration.changed
raise-to-speak
raise-to-speak.settings-enabled
raise-to-speak.settings-disabled
raise-to-speak.legacy-policy-decision
raise-to-speak.second-pass-policy-decision
raise-to-speak.silence-posterior-generator-decision
raise-to-speak.near-miss.nearby-activation
raise-to-speak.data-collection.session-mark
raise-to-speak.first-pass-policy-decision
voice-shortcut
voice-shortcut.setup.started
voice-shortcut.setup.finished
voice-shortcut.setup.cancelled
bluetooth-device
bluetooth-device.double-tap
bluetooth-device.voice
bluetooth-device.double-tap.false-remote-activation-decision
bluetooth-device.double-tap.false-remote-deactivation-decision
proximity.setup
proximity.setup.phs.bootstrapped
proximity.setup.phs.training-started
proximity.setup.phs.training-finished
proximity.setup.phs.training-canceled
proximity.setup.phs.training-phs-1
proximity.setup.phs.training-phs-2
proximity.setup.phs.training-phs-3
proximity.setup.phs.training-phs-4
proximity.setup.phs.training-phs-5
proximity.setup.phs.training-skipped
proximity.setup.phs.training-step-retry
proximity.setup.dismissed
client-mode
client-mode.computation.evaluated-add-views
client-mode.computation.evaluated-ace-command
interactive-messages.keyboard-invocation
interactive-messages.keyboard-dismissed
interactive-messages.send-via-snippet
spoken-notifications
spoken-notifications-start
spoken-notifications.message-received
spoken-notifications.message-not-read-inopportune
spoken-notifications.message-not-read-muted
spoken-notifications.message-not-read-siri-in-use
spoken-notifications.message-opportune
spoken-notifications.message-readout-canceled-pull-out
spoken-notifications.message-readout-canceled-double-tap
spoken-notifications.message-readout-canceled-speech
spoken-notifications.message-readout-finished
spoken-notifications.message-reply-related
spoken-notifications.message-reply-silence
spoken-notifications.message-reply-unrelated
spoken-notifications-end
spoken-notification.bundleId
announce-call-start
announce-call-end
announce-call.call-received
announce-call.call-announcement-readout-start
announce-call.call-announcement-readout-finished
announce-call.bargein
announce-call-responded-manually
multi-user
multi-user.voice-profile.upload-failure
multi-user.voice-profile.limit-reached
multi-user.manatee.key-loss
multi-user.participant.sharing-failure
multi-user.voice-profile.upload-success
multi-user.voice-profile.download-failure
multi-user.voice-profile.download-success
multi-user.setup.user.added-to-home
multi-user.setup.user.voice-id-enabled
multi-user.setup.homepod.user.added-to-home
multi-user.setup.homepod.user.voice-id-enabled
multi-user.setup.homepod.user.ready
multi-user.score.confusion
multi-user.metrics.homepod.voice-id-enablement-count
multi-user.score.donation
multi-user.score.usage
multi-user.setup.homepod.missing-home-member-settings
donate-activity
donate-activity.location-search.donation-displayed-in-maps
donate-activity.location-search.donation-selected-in-maps
client-ad-blocker
client-ad-blocker.found-match
dialog-engine
dialog-engine.cat-executed
home-automation
home-automation.homekit-request.start
home-automation.homekit-request.end
home-automation.control-home.flow.start
home-automation.control-home.flow.end
home-automation.control-home.app-extension.start
home-automation.control-home.app-extension.end
home-automation.homekit-warm-up.start
home-automation.homekit-warm-up.end
post-siri-engagement
post-siri-engagement.activity-collection
unknown.%ld
interpretations
isLowConfidence
%@, interpretations=%@, isLowConfidence=%@
%@, interpretationIndices=%@, confidenceScore=%@, source=%@
_interpretationIndices
_confidenceScore
_source
interpretationIndices
confidenceScore
tokens
%@, tokens=%@
text: %@, phoneSequence: %@, score: %ld, start: %lf, silenceStart: %lf, end: %lf, remove space before: %@ after: %@, ipaPhoneSequence: %@
text
phoneSequence
confidence
startTime
silenceStartTime
endTime
removeSpaceBefore
removeSpaceAfter
ipaPhoneSequence
disabled
suspended
automatic
automaticClientOnly
successTitle
successBody
successButtonText
errorTitle
errorBody
errorButtonText
successTitle = %@
successBody = %@
successButtonText = %@
errorTitle = %@
errorBody = %@
errorButtonText = %@
AFDeleteSiriHistoryContext::successTitle
AFDeleteSiriHistoryContext::successBody
AFDeleteSiriHistoryContext::successButtonText
AFDeleteSiriHistoryContext::errorTitle
AFDeleteSiriHistoryContext::errorBody
AFDeleteSiriHistoryContext::errorButtonText
com.apple.assistant.support
kAFPreferencesDidChangeDarwinNotification
com.apple.siri.cloud.synch.changed
com.apple.siri.cloud.storage.deleted
com.apple.siri.supported.languages.changed
com.apple.siri.stereo.configuration.changed
com.apple.siri.myriad.stereo.partner.data.changed
AFPreferencesDidChangeNotification
com.apple.UIKit
Dictation Enabled
Dictation Allowed
com.apple.assistant
AFInternalPreferencesDidChangeDarwinNotification
AFLanguageCodeDidChangeDarwinNotification
AFOutputLanguageDidChangeDarwinNotification
AFAssistantEnablementDidChangeDarwinNotification
AFDictationEnablementDidChangeDarwinNotification
AFSiriDataSharingOptStatusInDidChangeDarwinNotification
AFLanguageCodeDidChangeNotification
AFOutputVoiceDidChangeNotification
AFPreferencesManualEndpointingThresholdDidChangeNotification
AFNanoPreferencesDidChangeNotification
Disable Service Command Execution
Disable TTS Playback
AFUpdateAnnouncementEligibilityDarwinNotification
com.apple.assistant.backedup
com.apple.ironwood.support
Assistant Enabled
Hands Free Mode
In Progress Output Voice
Output Voice
Session Language
SessionLanguageUIForceRTL
Additional Languages
Respects System Mute
Use device speaker for TTS
Suppress Assistant Opt In
Suppress Dictation Opt In
On Device Dictation Available Alert Presented
Suppress Siri Data Sharing Opt In
Cloud Sync User ID
Cloud Sync Enabled
Cloud Sync Enabled Modification Date
StartAlertEnabled
Internal User Classification
Config Overrides
Config Profile Overrides
Spoken Notification Temporarily Muted End Date
Spoken Notification Skip Triggerless Reply Confirmation
Spoken Notification Should Always Speak Notifications
Spoken Notification Should Skip Trggerless Replies
HI/CI Design Mode
Modification Dates
SiriKit Enabled List
PHS Asset Manifest
PHS Asset Manifest V2
com.apple.assistant.nano
PHS Enabled
RTS Enabled
RTS Info Dismissed
TTS Speaker Volume
Output Voice Tinker
Session Language Tinker
Crown Activation Enabled
Offline Dictation Status
com.apple.assistant.nano.preferences.did_change
com.apple.assistant.nano.preferences.tinker.did_change
com.apple.assistant.nano.preferences.did_change.internal
com.apple.internal.ck
SiriMiniEnabled
SiriMiniWaitTimeInMillisBeforeResponding
SiriPersonalizedASRDisabled
DictationOnDeviceSamplingDisabled
ATVStopRecordingDelay
com.apple.assistant.managedconfiguration
allowSiriServerLogging
Siri Data Sharing Opt-In Status
Siri Data Sharing Opt-In Status 2.0
Siri Data Sharing Phone Has Been Opted Out
Siri Data Sharing Watch Has Been Opted Out
Siri Data Sharing TV Has Been Opted Out
Siri Data Sharing HomePod Setup Device Is Valid
Siri Data Sharing HomePod Has Been Opted Out
Siri Data Sharing Opt-In Status Before Opting HomePod Out 2021
Siri Data Sharing Home Accessory Migrated
Siri Data Sharing Accessory Reprompt Status
Siri Data Sharing Opt-In Status History
Date
New Opt-In Status
Previous Opt-In Status
Source
Reason
Build Version
Product Version
Schema Version
Home Accessories Siri Data Sharing Opt-In Change Log
Home Accessories Siri Data Sharing Opt-In Propagation Log
en-US
com.apple.siri.textinput
SiriUITextInputEnabled
SiriUITextInputHTTEnabled
Type To Siri Enabled
%@/%@
_AFPreferencesBoolFromValueWithDefault
_AFPreferencesDoubleForKeyWithDefault
_AFBackedUpPreferencesBoolValueForKey
_AFSupportPreferencesBoolValueForKey
ADTestAccess
Always Print Siri Response Override
de-DE
de-CH
en-AU
en-CA
en-SG
es-ES
es-MX
es-US
fr-CA
fr-CH
it-IT
it-CH
ja-JP
ko-KR
zh-CN
zh-TW
zh-HK
pt-BR
da-DK
en-NZ
ru-RU
sv-SE
th-TH
tr-TR
nb-NO
de-AT
fr-BE
nl-BE
fi-FI
he-IL
ms-MY
es-CL
en-ZA
yue-CN
en-IE
143441
143442
143443
143444
143452
143454
143455
143456
143457
143460
143462
143468
143503
143449
143461
143445
143467
143450
143466
143463
143470
143469
143446
143459
zh_CN
en_MY
en_HK
en_SA
en_AE
es-419
776E7CEE-4FCE-4780-A401-691B2C16EF68
iPhone OS
Ignore Internal Config
Always Eyes Free
Ignore Server Manual Endpointing Threshold
Manual Endpointing Threshold
Streaming Dictation Enabled
Simulate Immediate Speech Capture
Buffered Speech Capture Packet Interval
AFPreferencesSetTypeToSiriEnabled
enabled
mobile
Show All Dialog Variants
Enable TFO
Disable Tuscany
Enable Server Debug Flags
Enable Non Manatee Identity
Prefer SiriMini
Experimental SiriMini
Enable Sync Directly From Watch
Enable Database Syncing
Siri Vocabulary Enabled
Opportune Speaking Pause
Opportune Speaking Timeout
Limited Audio Logging
Network Stack Override
Enable Siri Debug UI
Enable Speaker Grading Debug UI
Enable Companion Messaging
Enable BLE Companion Connections
Enable Drag And Drop Feature for iOS
Enable the New Siri appearance for iOS
Force Speex Audio Recording
Force Uncompressed Audio Recording
Acoustic ID Auto Endpoint
Vibrate with Siri Alert
Keep Recorded Audio Files
Beep Vibration Intensity
Beep InterVibration Gap
Beep Vibration Duration
Number of Vibrations per Beep
Network Logging Enabled
Country Code
Borealis Education Header Display Count
Lower Wrist Education Message Display Count
AFSiriTaskResponseTimeout
AFSiriTaskBackgroundAssertionTimeout
Client Command Delivery Delay
Forced Interstitial Style
Interstitial Display Disabled Before Speech Recognition
Include Probe Packet Capture For ABC
%@ - %@
Initial Interstitial Delay
Initial Interstitial Delay for VoiceTrigger One-Shot without Audio Ducking
Asset Fetch Timeout
Ironwood Allowed
Assistant Allowed
forceAssistantProfanityFilter
allowAssistantUserGeneratedContent
Censor Speech
Notification Preview Restricted Apps
Last Pushed Censor Speech
_AFPreferencesForceOnDeviceOnlyDictationEnabled
_AFPreferencesSetSiriDataSharingOptInStatusWithContext
Disable Dictation Mode
Audio Ducking Allowed
Opportune Speaking Module Enabled
Opportune Speaking Model Used
Opportune Speaking File Logging Enabled
Show UI During Triggerless Listening
Play Alert Before Triggerless Listening
Spoken Notification Quick Ignore Time
Opportune Speaking Edge Detector Signal Override
Announce Notifications Voice On Min Ratio
Announce Notifications Voice Off Max Ratio
Announce Calls Voice On Min Ratio
Announce Calls Voice Off Max Ratio
Announce Calls Barge In Time
Dictation Language Detector Enabled
Dictation Language Detector Enabled By Server
MultilingualDictationTimeout
Sync First Party App Intent Policy
Authentication Disabled
iRATManagerRecommendationEnabled
GLOBAL
Spoken Notifications Proximity Card Seen
BBAlwaysSpeakLockScreenNotifications
com.apple.bulletinboard
Announce Notifications Temporarily Disabled for CarPlay
Announce Notifications in CarPlay Type
Hard-coded BT Proximity
_AFPreferencesSiriXAssetsDidChange
-[AFPreferences _preferencesDidChangeExternally]
-[AFPreferences _internalPreferencesDidChangeExternally]
-[AFPreferences _languageCodeDidChangeExternally]
-[AFPreferences _outputVoiceDidChangeExternally]
-[AFPreferences _assistantEnablementDidChangeExternally]
-[AFPreferences _dictationEnablementDidChangeExternally]
com.apple.avfoundation.avvc
%@ {instanceContext = %@}
navTokenQueue
-[AFPreferences initWithInstanceContext:]
-[AFPreferences dealloc]
-[AFPreferences synchronize]
-[AFPreferences _setAssistantIsEnabledLocal:]
-[AFPreferences _setDictationIsEnabledLocal:]
-[AFPreferences setAssistantIsEnabled:]
-[AFPreferences setDictationIsEnabled:]
-[AFPreferences _setDictationIsAllowed:]
-[AFPreferences _setOnDeviceDictationAvailableAlertPresentedLocal:]
-[AFPreferences setOnDeviceDictationAvailableAlertPresented:]
v24@?0@"NSDictionary"8@"NSError"16
Force Offline Recognition Enabled
-[AFPreferences setForceOfflineRecognitionEnabled:]
Utterance Detection Enabled
-[AFPreferences setUtteranceDetectionEnabled:]
Prefer Online Recognition Enabled
-[AFPreferences setPreferOnlineRecognitionEnabled:]
Dictation SLS Languages Enabled
Indicate Hold-To-Talk Mode
Listen After Speaking Disabled
Curare Orchestration Enabled
v16@?0@"NSDate"8
-[AFPreferences getAnnounceNotificationsTemporarilyDisabledForApp:platform:completion:]_block_invoke_3
-[AFPreferences getAnnounceNotificationsTemporarilyDisabledForApp:platform:completion:]_block_invoke
-[AFPreferences setSiriDataSharingOptInStatus:completion:]
-[AFPreferences setSiriDataSharingOptInStatus:propagateToHomeAccessories:source:reason:completion:]
-[AFPreferences setSiriDataSharingHomePodSetupDeviceIsValid:completion:]
-[AFPreferences appendToSiriDataSharingOptInStatusHistory:previousOptInStatus:statusChangeSource:reason:]
-[AFPreferences appendHomeAccessorySiriDataSharingChangeLogEvent:]
-[AFPreferences insertHomeAccessorySiriDataSharingPropagationLogEvent:]
AFGradingOptInStateChangeWithHistoryEntry
Allow Myriad Coordination
Disable Myriad BLE Activity
Allow Myriad Ducking
Myriad Device Group
Server Has Provisioned Myriad
Server Provisions Myriad
Myriad Device Class
Myriad Constant Goodness
Myriad Device Adjust
Myriad Device Delay
Myriad Test Device Delay
Myriad Device Slowdown
Myriad Device Trump Delay
Myriad Last Win
Myriad VTEndtimeDistanceThreshold
Myriad Ignore Adjusted Boost
Myriad Ignore Platform Bias
Myriad Monitor Timeout Interval
Myriad Max No Op Delay
Auto Dismissal Idle Timeout
Auto Dismissal Extended Idle Timeout
Auto Dismissal Max Attention Sampling Time
-[AFPreferences _languageCodeWithFallback:]
-[AFPreferences isCurrentLocaleNativelySupported]
-[AFPreferences isLocaleIdentifierNativelySupported:]
-[AFPreferences _languagePreferencesForCurrentSystemConfiguration]
-[AFPreferences _bestSupportedLanguageCodeForLanguageCode:isGoodFit:]
-[AFPreferences allSiriLanguageCodesForSystemLanguageCode:isGoodFit:]
<Sentinel> (not a special-cased language)
-[AFPreferences _bestSupportedLanguageCodeForLanguageCodes:isGoodFit:]
hi-IN
-[AFPreferences setLanguageCode:]
-[AFPreferences setInProgressOutputVoice:]
-[AFPreferences _outputVoiceWithFallback:]
-[AFPreferences setLanguageCode:outputVoice:]
-[AFPreferences setMediaPlaybackEnabled:]
Media Playback Enabled
Navigation Status
AFPreferencesNavStatusDidChangeNotification
com.apple.siri.nav_status
v12@?0i8
This SPI is not to be used with other keys
Flush Session Tickets Cache
%@.plist
com.apple.AppSupport.loggingDefaultsChanged
dump_input
debug_level
debug_state
debug_callbacks
debug_timing
debug_logtofile
Auto Dismissal 2018 Enabled
Dismiss When Face Attention is Lost
Dismiss When Device is Lowered
Hands-On Idle Time Interval (sec)
Hands-Off Idle Time Interval (sec)
-[AFPreferences erasePreferences]
%@Library/Managed Preferences/mobile/%@
_AFPreferencesMultiUserCompanionNotificationLanguageCodesForHomePodVersion
pt-PT
hu-HU
pl-PL
el-GR
ca-ES
hr-HR
cs-CZ
id-ID
ro-RO
sk-SK
uk-UA
vi-VN
en-PH
es-CO
en-SA
en-AE
en-ID
wuu-CN
hi-Latn
zh-Hans-HK
zh-Hans-MO
en-MY
_AFPreferencesAlternativeLocaleLanguages
Announce Notifications in CarPlay
_AFPreferencesDidChangeCallback
_AFInternalPreferencesDidChangeCallback
_AFLanguageDidChangeCallback
_AFOutputVoiceDidChangeCallback
_AFNanoPreferencesDidChangeCallback
_AFAssistantEnablementDidChangeCallback
_AFDictationEnablementDidChangeCallback
Dictation SLS Enabled
Enable Offline Dictation Override
Offline Dictation Profile Override Path
Show Server on UI
Debug Button Enabled
Siri X Debug Status Enabled
Always Allow Voice Activation
Always Print Siri Response
Always Obscure Background Content When Active
Always Show Recognized Speech
_AFAddCountryCodeToLanguageIdentifier
ar-AE
zh-Hans
zh-Hans-CN
zh-Hans-TW
zh-Hant-CN
zh-Hant-HK
zh-Hant-MO
zh-MO
zh-Hant-TW
zh-Hant-US
es_IC
es_EA
/Library/Preferences
Card Logging Enabled
NPSDomainAccessor
initNPSDomainAccessor_block_invoke
AFPreferences.m
classNPSDomainAccessor
/System/Library/PrivateFrameworks/NanoPreferencesSync.framework/NanoPreferencesSync
NanoPreferencesSyncLibrary
NPSManager
initNPSManager_block_invoke
classNPSManager
ObjectCreatedResponseObjectIdentifier
eventType
eventData
turnID
event
activate
deactivate
deliver
notify
prewarm
myriad
assistantd
OpportuneSpeakingModelService
FeatureName
FeatureValue
OSMDataCollection
-[AFOpportuneSpeakingModuleDataCollection _deleteSpeakablesOlderThan:]
_phrases
_utterances
@"SASPhrase"16@?0@"AFSpeechPhrase"8
@"SASInterpretation"16@?0@"AFSpeechInterpretation"8
@"SASToken"16@?0@"AFSpeechToken"8
@"SASUtterance"16@?0@"AFSpeechUtterance"8
phrases
utterances
%@ {audioSessionID = %u}
_audioSessionID
<%@ %p: item=%@; %lu children=(
none)>
Cannot generate an index path relative to node %@, which isn't an ancestor
AFTreeNode.m
relativeIndexPath
B16@?0@"AFTreeNode"8
v24@?0@"AFTreeNode"8^B16
child != self
Attempt to create cycle
Cannot remove a child if we're not its parent
Cannot remove a child that we don't contain
v32@?0@8Q16^B24
AFSiriTaskContextProvider.m
-[AFSiriTaskContextProvider getAppContextWithDeliveryHandler:completionHandler:]
!response || [response isKindOfClass:[AFContextResponse class]]
-[AFSiriTaskContextProvider getAppContextWithDeliveryHandler:completionHandler:]_block_invoke
requestID
deviceRoles
requestID = %@
deviceRoles = %lu [%@]
AFDeviceRequestHandlingRecord::requestID
AFDeviceRequestHandlingRecord::deviceRoles
com.apple.assistant.conversation.ErrorDomain
isSupportedAndEnabled
homeKitRoomName
homeKitMediaSystemIdentifier
mediaRemoteGroupIdentifier
mediaRemoteRouteIdentifier
isSupportedAndEnabled = %@
homeKitRoomName = %@
homeKitMediaSystemIdentifier = %@
mediaRemoteGroupIdentifier = %@
mediaRemoteRouteIdentifier = %@
AFAudioSessionCoordinationSystemInfo::isSupportedAndEnabled
AFAudioSessionCoordinationSystemInfo::homeKitRoomName
AFAudioSessionCoordinationSystemInfo::homeKitMediaSystemIdentifier
AFAudioSessionCoordinationSystemInfo::mediaRemoteGroupIdentifier
AFAudioSessionCoordinationSystemInfo::mediaRemoteRouteIdentifier
AFHeadphonesAnnouncementRequestCapabilityProvider
com.apple.bluetooth.GuestConnected
-[AFHeadphonesAnnouncementRequestCapabilityProvider updateWirelessSplitterSessionInfoAndObserve]_block_invoke_3
v24@?0@"AFBluetoothWirelessSplitterSessionInfo"8@"NSError"16
-[AFHeadphonesAnnouncementRequestCapabilityProvider notifyObserversOfAvailableAnnouncementRequestTypes]_block_invoke
v16@?0Q8
-[AFHeadphonesAnnouncementRequestCapabilityProvider fetchEligibleAnnouncementRequestTypesAndNotifyObservers:]
-[AFHeadphonesAnnouncementRequestCapabilityProvider _fetchEligibleAnnouncementRequestTypesAndNotifyObservers]
-[AFHeadphonesAnnouncementRequestCapabilityProvider _fetchEligibleAnnouncementRequestTypesAndNotifyObservers]_block_invoke
-[AFHeadphonesAnnouncementRequestCapabilityProvider notifyObserversOfEligibleAnnouncementRequestTypes:]
v24@?0@"NSArray"8@"NSError"16
-[AFHeadphonesAnnouncementRequestCapabilityProvider notifyObserver:didChangeStateFrom:to:]_block_invoke
-[AFHeadphonesAnnouncementRequestCapabilityProvider notifyObserver:didReceiveNotificationWithToken:]
-[AFHeadphonesAnnouncementRequestCapabilityProvider _settingsConnectionDidDisconnect]_block_invoke
-[AFHeadphonesAnnouncementRequestCapabilityProvider fetchEligibleAnnouncementRequestTypesWithCompletion:]
-[AFHeadphonesAnnouncementRequestCapabilityProvider fetchEligibleAnnouncementRequestTypesWithCompletion:]_block_invoke
-[AFHeadphonesAnnouncementRequestCapabilityProvider fetchAvailableAnnouncementRequestTypesWithCompletion:]
-[AFHeadphonesAnnouncementRequestCapabilityProvider fetchAvailableAnnouncementRequestTypesWithCompletion:]_block_invoke_3
BluetoothPairedStatusChangedNotification
initBluetoothPairedStatusChangedNotification_block_invoke
AFHeadphonesAnnouncementRequestCapabilityProvider.m
/System/Library/PrivateFrameworks/BluetoothManager.framework/BluetoothManager
BluetoothManagerLibrary
BluetoothFirstDeviceUnlockCompleted
initBluetoothFirstDeviceUnlockCompleted_block_invoke
INSearchForMessagesIntentIdentifier
initINSearchForMessagesIntentIdentifier_block_invoke
INReadAnnouncementIntentIdentifier
initINReadAnnouncementIntentIdentifier_block_invoke
INSearchForNotebookItemsIntentIdentifier
initINSearchForNotebookItemsIntentIdentifier_block_invoke
INPlayVoicemailIntentIdentifier
initINPlayVoicemailIntentIdentifier_block_invoke
INJoinCallIntentIdentifier
initINJoinCallIntentIdentifier_block_invoke
INSendMessageIntentIdentifier
initINSendMessageIntentIdentifier_block_invoke
com.apple.assistant.myriad.delay_monitor
-[AFMyriadMonitor _enqueueBlock:forReason:]
-[AFMyriadMonitor _enqueueBlock:forReason:]_block_invoke
-[AFMyriadMonitor startMonitoringWithTimeoutInterval:instanceContext:]_block_invoke
-[AFMyriadMonitor ignoreMyriadEvents:]_block_invoke
-[AFMyriadMonitor dequeueBlocksWaitingForMyriadDecision]_block_invoke
Pending
Lost
-[AFMyriadMonitor _registerForMyriadEvents]
-[AFMyriadMonitor _fetchCurrentMyriadDecisionWithWaitTime:]
-[AFMyriadMonitor _fetchCurrentMyriadDecisionWithWaitTime:]_block_invoke
com.apple.siri.myriad.get.decision
-[AFMyriadMonitor _deregisterFromMyriadEventNotifications]
-[AFMyriadMonitor _deregisterFromRepostedDecisionResultsObservers]
-[AFMyriadMonitor notifyObserver:didReceiveNotificationWithToken:]
-[AFMyriadMonitor notifyObserver:didChangeStateFrom:to:]
-[AFMyriadMonitor _setDecisionIsPending]
-[AFMyriadMonitor _setDecisionIsPending]_block_invoke
-[AFMyriadMonitor _dequeueBlocksWithSignal:]
-[AFMyriadMonitor _clear]
-[AFMyriadMonitor _resultSeenWithValue:]
alarmsAdded
alarmsUpdated
alarmsRemoved
alarmFired
firingAlarmDismissed
firingAlarmChanged
stateReset
alarmsChanged
Object %@ is not a kind of %@
Unable to create UUID for string "%@"
dictationStart
dictationFinish
dictationCancel
announceMessagesStart
homeAnnouncementRecordingStart
homeAnnouncementReceived
announceMessagesCarPlayStart
v16@?0@"AFTreeNode"8
B16@?0@"AFMutableConversationItem"8
v32@?0@"AFTreeNode"8q16^B24
-[AFConversation _processInsertions:inDialogPhase:]
v32@?0@"AFConversationInsertion"8Q16^B24
@16@?0@"AFConversationInsertion"8
-[AFConversation _processInsertions:inDialogPhase:]_block_invoke_3
-[AFConversation _processInsertions:inDialogPhase:]_block_invoke
v32@?0@"SAAceView"8Q16^B24
v32@?0@"AceObject"8Q16^B24
-[AFConversation addAdditionalSpeechInterpretation:refId:]
AFConversation.m
Cannot return an index path to an item that is not contained in the conversation
v24@?0@"AFMutableConversationItem"8^B16
LanguageCode
SynchronizedWithServer
RootNode
@16@?0@8
-[AFConversation initWithPropertyListRepresentation:]
v20@?0r^v8I16
/dev/random
generation
contextData
contextFetchDelay
generation = %@
contextData = (%ld bytes)
contextFetchDelay = %@
AFMyriadAdvertisementContext::generation
AFMyriadAdvertisementContext::contextData
AFMyriadAdvertisementContext::contextFetchDelay
isAwake
isPresentingHilite
isHiliting
isPresentingScreenSaver
isScreenSaving
isAsleeping
isAsleep
isAwaking
none
beep
haptic
siri_vox_sounds_experiment
playsTwoShotSound
playsSessionInactiveSound
-[AFHeartBeat initWithIdentifier:queue:effectiveDate:expirationDuration:heartBeatInterval:heartBeatHandler:invalidationHandler:]
-[AFHeartBeat dealloc]
%@ {identifier = %@, effectiveDate = %@ (%f seconds), expirationDuration = %f, numberOfHeartBeats = %llu}
-[AFHeartBeat invalidate]
-[AFHeartBeat _fire]
-[AFHeartBeat _invalidate]
accessibilityState
deviceRingerSwitchState
isDeviceInCarDNDMode
isDeviceInStarkMode
isDeviceWatchAuthenticated
areAnnouncementRequestsPermittedByPresentationWhileActive
outputVolume
tapToSiriAudioPlaybackRequest
twoShotAudioPlaybackRequest
deviceSetupFlowBeginDate
deviceSetupFlowEndDate
accessibilityState = %@
deviceRingerSwitchState = %ld (%@)
isDeviceInCarDNDMode = %@
isDeviceInStarkMode = %@
isDeviceWatchAuthenticated = %@
areAnnouncementRequestsPermittedByPresentationWhileActive = %@
outputVolume = %@
tapToSiriAudioPlaybackRequest = %@
twoShotAudioPlaybackRequest = %@
deviceSetupFlowBeginDate = %@
deviceSetupFlowEndDate = %@
AFClientConfiguration::accessibilityState
AFClientConfiguration::deviceRingerSwitchState
AFClientConfiguration::isDeviceInCarDNDMode
AFClientConfiguration::isDeviceInStarkMode
AFClientConfiguration::isDeviceWatchAuthenticated
AFClientConfiguration::areAnnouncementRequestsPermittedByPresentationWhileActive
AFClientConfiguration::outputVolume
AFClientConfiguration::tapToSiriAudioPlaybackRequest
AFClientConfiguration::twoShotAudioPlaybackRequest
AFClientConfiguration::deviceSetupFlowBeginDate
AFClientConfiguration::deviceSetupFlowEndDate
timersAdded
timersUpdated
timersRemoved
timerFired
firingTimerChanged
firingTimerDismissed
timersChanged
unknown
near
immediate
primary
/usr/lib/libAXSpeechManager.dylib
+[AFSpeakableUtteranceParser parseUserGeneratedMessage:]_block_invoke
AXSpeechTransformText
+[AFSpeakableUtteranceParser parseUserGeneratedMessage:]
ERROR parsing remainder: %@
-[AFSpeakableUtteranceParser _handleControlCodeAtIndex:withBuffer:totalLength:consumedLength:hadEmpties:containsPrivacySensitiveContents:externalProviders:]
AFSpeakableUtteranceParser.m
consumed && "Need to provide a consumer."
%@ {name = %@}
AFNotifyObserver.m
name != nil
firstName
middleName
lastName
fullName
nickName
internalGUID
relationName
@{fn#firstName}
@{fn#middleName}
@{fn#lastName}
@{fn#fullName}
@{fn#nickName}
@{fn#internalGUID}
@{fn#relationName}
jjmma
hhmma
HHmm
eeee
com.apple.weather
Celsius
-[AFSUPFunctionProvider _tempInWeatherUnits:]
-[AFSUPFunctionProvider _lowercaseString:]
-[AFSUPFunctionProvider _meCard]_block_invoke
v24@?0@"SAPerson"8@"NSError"16
-[AFSUPFunctionProvider _meCard]
a meCard
(null)
-[AFSUPFunctionProvider _siriUsageDescription:]
-[AFSUPFunctionProvider _speechRecognitionUsageDescription:]
-[AFSUPFunctionProvider _contextRoomName:]
-[AFSUPFunctionProvider _contextDeviceName:]
v16@?0@"AFPeerInfo"8
-[AFSUPFunctionProvider _peerInfoForContextIdentifier:]
currentTime
currentTimeIn
currentDateShort
currentDateShortIn
currentDateLong
currentDateLongIn
currentDayOfWeek
currentDayOfWeekIn
tempInWeatherUnits
deviceModel
lowercase
siriUsageDescription
speechRecognitionUsageDescription
contextRoomName
contextDeviceName
-[AFSUPFunctionProvider _callFunction:withArguments:]
Dictation
-[AFDictationConnection initWithInstanceContext:]
-[AFDictationConnection dealloc]
-[AFDictationConnection _checkAndSetIsCapturingSpeech:]
Trying to start speech capture while we are already capturing. This is a client app logic error, cancelling dictation
v16@?0@"<AFDictationDelegate>"8
-[AFDictationConnection _tellSpeechDelegateRecordingDidBeginWithOptions:]
-[AFDictationConnection _tellSpeechDelegateDidRecognizePackage:]
-[AFDictationConnection _tellSpeechDelegateDidRecognizeSpeechPhrases:utterances:languageModel:correctionIdentifier:audioAnalytics:]
-[AFDictationConnection _delegateDidRecognizeSpeechTokens:languageModel:delegate:]
-[AFDictationConnection _tellSpeechDelegateDidRecognizePartialResult:]_block_invoke
tokensCount
languageModel
@"NSDictionary"8@?0
-[AFDictationConnection _tellSpeechDelegateDidRecognizeSpeechTokens:languageModel:]
-[AFDictationConnection _tellSpeechDelegateDidRecognizeTranscriptionObjects:languageModel:]
-[AFDictationConnection _tellSpeechDelegateRecognitionDidFail:]
-[AFDictationConnection _tellSpeechDelegateSpeechRecognitionDidSucceed]
-[AFDictationConnection _tellSpeechDelegateSearchResultsReceived:recognitionText:stable:final:]
-[AFDictationConnection _tellSpeechDelegateLanguageDetected:confidenceScores:isConfident:]
-[AFDictationConnection _tellSpeechDelegateMultilingualSpeechRecognized:]
-[AFDictationConnection _tellSpeechDelegateLanguageDetectorDidFail:]
-[AFDictationConnection _tellSpeechDelegateDidBeginLocalRecognitionWithModelInfo:]
-[AFDictationConnection _connectionClearedForInterruption:]
Please file radar
Sorry internal user, assistantd crashed during dictation
AFDictationConnection.connection
-[AFDictationConnection _startInputAudioPowerUpdatesWithXPCWrapper:]
-[AFDictationConnection _stopInputAudioPowerUpdates]
-[AFDictationConnection dictationIsAvailableForLanguage:synchronous:]
-[AFDictationConnection forcedOfflineDictationIsAvailableForLanguage:synchronous:]
-[AFDictationConnection forcedOfflineDictationIsAvailableForLanguage:synchronous:]_block_invoke
+[AFDictationConnection getForcedOfflineDictationSupportedLanguagesWithCompletion:]_block_invoke
-[AFDictationConnection _willStartDictationWithLanguageCode:options:speechOptions:machAbsoluteTime:]
languageCode
isOnDeviceDictationExpected
canceled
failure
noMatch
interrupted
requestStatus
dictationUIInteractionIdentifier
-[AFDictationConnection _willCancelDictation]
-[AFDictationConnection _willFailDictationWithError:]
-[AFDictationConnection _willCompleteDictation]
-[AFDictationConnection _sendPendingAnalyticsEvents]
+[AFDictationConnection dictationIsSupportedForLanguageCode:error:]
NOT 
-[AFDictationConnection preheatWithRecordDeviceIdentifier:]
-[AFDictationConnection _setActivationTimeOnOptionsIfNecessary:]
-[AFDictationConnection startRecordingForPendingDictationWithLanguageCode:options:speechOptions:]
-[AFDictationConnection startRecordingForPendingDictationWithLanguageCode:options:speechOptions:]_block_invoke_2
-[AFDictationConnection startRecordingForPendingDictationWithLanguageCode:options:speechOptions:]_block_invoke
v16@?0d8
v16@?0@"NSXPCListenerEndpoint"8
-[AFDictationConnection startDictationWithLanguageCode:options:speechOptions:]
-[AFDictationConnection startDictationWithLanguageCode:options:speechOptions:]_block_invoke_2
-[AFDictationConnection startRecordedAudioDictationWithOptions:forLanguage:narrowband:forceSampling:]
-[AFDictationConnection startRecordedAudioDictationWithOptions:forLanguage:narrowband:forceSampling:]_block_invoke_2
-[AFDictationConnection cancelSpeech]
-[AFDictationConnection stopSpeechWithOptions:]
-[AFDictationConnection stopSpeechWithOptions:]_block_invoke
-[AFDictationConnection _delayedStopSpeechWithOptions:]
-[AFDictationConnection updateSpeechOptions:]
-[AFDictationConnection sendUserSelectedAlternativeDictationLanguageCode:]
-[AFDictationConnection endSession]
-[AFDictationConnection _sendDataIfNeeded]
-[AFDictationConnection _updateBufferFlushTimerWithDelay:]
-[AFDictationConnection(Private) preheatTestWithLanguage:options:]
speechRecognitionSource
local
sessionID
sessionRequestUUID
dictationOptInStatus
phrasesCount
correctionContext
transcribedObjectsCount
SanitizeAFSpeechRequestOptions
Results
com.apple.siri.analytics.hal.nearbydevice
com.apple.assistant.coreanalytics.client
v32@?0@"NSString"8@"AFCoreAnalyticsDeviceContextPayload"16^B24
-[AFCoreAnalyticsLoggingService logToCoreAnalyticsCrossDeviceRequestEvent:]_block_invoke_2
-[AFSiriActivationHandlerAssistantDaemon handleContext:completion:]
-[AFSiriActivationHandlerAssistantDaemon handleContext:completion:]_block_invoke
inactive
active
address
deviceUID
vendorID
productID
isAdvancedAppleAudioDevice
supportsInEarDetection
supportsVoiceTrigger
supportsSpokenNotification
supportsListeningModeANC
supportsListeningModeTransparency
supportsAnnounceCall
address = %@
deviceUID = %@
vendorID = %@
productID = %@
isAdvancedAppleAudioDevice = %@
supportsInEarDetection = %@
supportsVoiceTrigger = %@
supportsSpokenNotification = %@
supportsListeningModeANC = %@
supportsListeningModeTransparency = %@
supportsAnnounceCall = %@
AFBluetoothDeviceInfo::address
AFBluetoothDeviceInfo::deviceUID
AFBluetoothDeviceInfo::vendorID
AFBluetoothDeviceInfo::productID
AFBluetoothDeviceInfo::isAdvancedAppleAudioDevice
AFBluetoothDeviceInfo::supportsInEarDetection
AFBluetoothDeviceInfo::supportsVoiceTrigger
AFBluetoothDeviceInfo::supportsSpokenNotification
AFBluetoothDeviceInfo::supportsListeningModeANC
AFBluetoothDeviceInfo::supportsListeningModeTransparency
AFBluetoothDeviceInfo::supportsAnnounceCall
setAudioSessionActiveOptions
setAudioSessionActiveReason
suppressesAudioSessionActivation
isLegacyAudioDuckingCoordination
com.apple.assistant.audio-session-assertion.connection-workloop
OriginatingAceIDKeyIdentifier
AFSiriTaskUsageResult.m
_resultDescription must be overridden in subclasses.
: %p;
 originatingAceID=
X-Dev-ConfigOverride-
assistant.service.carCommands.nativeExecutor.enabled
assistant.service.location-search.continuity.enabled
assistant.service.announce.enabled
feature.Server.Azule.Milestone.AzuleServer.InCallActionOnNonHomePod.enabled
true
%@%@
com.apple.assistant.features
+[AFFeatureFlags dump]
Siri
sirix
dictation_voice_trigger
trial_dictation_asset_delivery
hints
audio_session_coordination
Home
SiriEndpoints
myriad_non_speaker_raw_score_threshold
lasso
BluetoothFeatures
AnnounceTelephony
SiriPhone
announce_groupfacetime_invite
listening_on_both_stereo_pair_units
home_automation_background_request
siri_request_dispatcher
SiriNotifications
announce
cross_device_tv_control
SiriUI
spoken_stark
cross_device_voice_followup
tv_push_to_talk
cda_face_detection
myriad_self_metrics
siri_data_sharing_reprompt
None
+IDS
+Rapport
+Bluetooth
+Wifi
+Cloud
-[AFClockAlarmSnapshot(Utility) firingAlarms]_block_invoke
v32@?0@"NSUUID"8@"AFClockAlarm"16^B24
AFClockIsFiringAlarmValid
TimerId
State
Value
com.apple.assistant.announce.carplay
-[AFCarPlayAnnouncementRequestCapabilityProvider _notifyObserversOfUpdatedAvailableAnnouncementRequestTypes:]
CARSessionStatus
Class getCARSessionStatusClass(void)_block_invoke
AFCarPlayAnnouncementRequestCapabilityProvider.m
Unable to find class %s
void *CarKitLibrary(void)
/System/Library/PrivateFrameworks/CarKit.framework/CarKit
/System/Library/PrivateFrameworks/CarKit.framework/Contents/MacOS/CarKit
NSString *getINSearchForMessagesIntentIdentifier(void)
void *IntentsLibrary(void)
/System/Library/Frameworks/Intents.framework/Contents/MacOS/Intents
NSString *getINSendMessageIntentIdentifier(void)
startingAlertBehavior
stoppedAlertBehavior
stoppedWithErrorAlertBehavior
startingAlertBehavior = %@
stoppedAlertBehavior = %@
stoppedWithErrorAlertBehavior = %@
AFSpeechRecordingAlertPolicy::startingAlertBehavior
AFSpeechRecordingAlertPolicy::stoppedAlertBehavior
AFSpeechRecordingAlertPolicy::stoppedWithErrorAlertBehavior
configurationIdentifier
configurationVersion
deploymentGroupIdentifier
deploymentGroupProperties
deploymentReason
configurationIdentifier = %@
configurationVersion = %@
deploymentGroupIdentifier = %@
deploymentGroupProperties = %@
deploymentReason = %ld (%@)
AFExperiment::configurationIdentifier
AFExperiment::configurationVersion
AFExperiment::deploymentGroupIdentifier
AFExperiment::deploymentGroupProperties
AFExperiment::deploymentReason
uuid: %@, timestamp: %llu, turnId: %@, options: %lu, notifyState: %@ text: %@ directAction: %@ handoffOriginDeviceName: %@ handOffData: %@ handoffURL: %@ handoffRequiresUserInteraction ? %d handoffNotification %@ correctedSpeech: %@ startRequest: %@ activationEvent: %@ speechRequestOptions: %@ testRequestOptions: %@ requestCompletionOptions: %@ sharedUserID: %@ confidenceScore: %lu nonspeakerConfidenceScores: %@
_uuid
_timestamp
_turnIdentifier
_options
_notifyState
_text
_legacyDirectActionIdentifier
_handoffOriginDeviceName
_handoffRequestData
_handoffURLString
_handoffRequiresUserInteraction
_handoffNotification
_correctedSpeech
_correctedSpeechContext
_startRequest
_startLocalRequest
_directActionAppId
_directActionEvent
_activationEvent
_speechRequestOptions
_testRequestOptions
_requestCompletionOptions
_expectedSpeakerSharedUserID
_expectedSpeakerConfidenceScore
_nonspeakerConfidenceScores
AFInstanceContext.m
%s is a subclass responsibility.
+[AFInstanceContext effectiveMachServiceName:]
-[AFInstanceContext createXPCConnectionWithMachServiceName:options:]
-[AFInstanceContext createXPCListenerWithMachServiceName:]
-[AFInstanceContext createXPCConnectionForMachService:targetQueue:flags:]
-[AFInstanceContext createXPCListenerForMachService:targetQueue:flags:]
-[AFInstanceContext info]
-[AFInstanceContext isDefault]
-[AFInstanceContext isCurrent]
-[AFInstanceContext(SubsystemSupport) preferencesSubdomain]
-[AFInstanceContext(SubsystemSupport) mediaRouteIdentifier]
-[AFInstanceContext(SubsystemSupport) audioDeviceIdentifier]
-[AFInstanceContext(SubsystemSupport) supportsAudioPowerUpdate]
-[AFInstanceContext(SubsystemSupport) supportsProxyGroupPlayer]
-[AFInstanceContext(SubsystemSupport) supportsTelephony]
%@ (default)
_alarmIdentifiers
uniqueIdentifier
loggingUniqueIdentifier
model
roomName
assistantIdentifier
isSpeaker
hasActiveThirdPartyMusicSubscription
manufacturer
categoryType
schemaCategoryType
uniqueIdentifier = %@
loggingUniqueIdentifier = %@
name = %@
model = %@
roomName = %@
assistantIdentifier = %@
isSpeaker = %@
hasActiveThirdPartyMusicSubscription = %@
manufacturer = %@
categoryType = %@
schemaCategoryType = %@
AFHomeAccessoryInfo::uniqueIdentifier
AFHomeAccessoryInfo::loggingUniqueIdentifier
AFHomeAccessoryInfo::name
AFHomeAccessoryInfo::model
AFHomeAccessoryInfo::roomName
AFHomeAccessoryInfo::assistantIdentifier
AFHomeAccessoryInfo::isSpeaker
AFHomeAccessoryInfo::hasActiveThirdPartyMusicSubscription
AFHomeAccessoryInfo::manufacturer
AFHomeAccessoryInfo::categoryType
AFHomeAccessoryInfo::schemaCategoryType
-[AFClockItemStorage beginGrouping]
-[AFClockItemStorage endGroupingWithOptions:]
-[AFClockItemStorage insertOrUpdateItems:]
-[AFClockItemStorage deleteItemsWithIDs:]
-[AFClockItemStorage deleteAllItems]
@"NSNumber"16@?0@8
, alarm=%@
, timer=%@
, media=%@
, heardVT
, homeAnnounce=%@
, myriadAdvLen=%lu
, location=%@
, call=%@
, sys=%@
, flowUpdate=YES
en_US
HH:mm:ss.SSS
, clientState=%llu(prev %lu %@)
com.apple.siri.client_lite
-[AFClientLiteInternal initAndHandleCommand:afterCurrentRequest:isOneWay:commandHandler:completion:]
-[AFClientLiteInternal dealloc]
-[AFClientLiteInternal _handleCommand:afterCurrentRequest:isOneWay:completion:]
-[AFClientLiteInternal _handleCommand:afterCurrentRequest:isOneWay:completion:]_block_invoke_2
-[AFClientLiteInternal _handleCommand:afterCurrentRequest:isOneWay:completion:]_block_invoke
v20@?0B8@"NSError"12
-[AFClientLiteInternal handleCommand:completion:]_block_invoke
-[AFClientLite init]
-[AFClientLite dealloc]
-[AFClientLite _handleCommand:afterCurrentRequest:isOneWay:commandHandler:completion:]
-[AFClientLite handleCommand:afterCurrentRequest:commandHandler:completion:]
-[AFClientLite handleOneWayCommand:commandHandler:completion:]
client#interstitialInitial
client#interstitialFollowUpOne
client#interstitialFollowUpTwo
client#interstitialFinal
AFMediaRemoteDeviceInfoRouteIdentifierDidChangeNotification
AFMediaRemoteDeviceInfoGroupIdentifierDidChangeNotification
com.apple.assistant.MediaRemoteDeviceInfo
-[AFMediaRemoteDeviceInfo init]
AFMediaRemoteDeviceInfo.m
_instanceContext != nil
-[AFMediaRemoteDeviceInfo _activeDeviceInfoChanged:]
-[AFMediaRemoteDeviceInfo _activeDeviceInfoChanged:]_block_invoke_2
-[AFMediaRemoteDeviceInfo _activeDeviceInfoChanged:]_block_invoke
v24@?0^v8^{__CFError=}16
-[AFMediaRemoteDeviceInfo _updateWithRouteIdentifier:groupIdentifier:]
-[AFMediaRemoteDeviceInfo _getMRDeviceInfoWithCompletion:]_block_invoke
v24@?0@"MRDeviceInfo"8@"NSError"16
-[AFMediaRemoteDeviceInfo _getMRDeviceInfoWithCompletion:]
-[AFMediaRemoteDeviceInfo getRouteIdentifierWithCompletion:]_block_invoke_2
v16@?0@"MRDeviceInfo"8
-[AFMediaRemoteDeviceInfo getGroupIdentifierWithCompletion:]_block_invoke_2
Message
Frontmost
VoicePitchRangeDescriptors
Voices
gender
isCustom
pitchRange
order
AFLocalization
Localizable
_FEMALE
_MALE
strings
^%@-*\w*\.strings$
LONG_
SiriLanguages
COMPACT_
VOICE_
VOICE_GENDER_UNSPECIFIED
VOICE_GENDER_MALE
VOICE_GENDER_FEMALE
VOICE_GENDER_NEUTRAL
#1190E4
-[AFLocalization outputVoiceDescriptorForOutputLanguageCode:voiceName:]
v32@?0@"AFVoiceInfo"8Q16^B24
VOICE
VOICE_AND_NUMBER
%1$@ %2$lu
REGION_AND_VOICE
%1$@ (%2$@)
AssistantVoiceDialects
-[AFLocalization loadInfoForVoicesWithLanguageCode:]
-[AFLocalization _voicesFromVoiceMapWithLanguage:]
AssistantVoiceMap
v32@?0@"NSDictionary"8Q16^B24
v32@?0@"NSString"8@"NSArray"16^B24
-[AFLocalization outputVoiceComparator]_block_invoke
q24@?0@"AFVoiceInfo"8@"AFVoiceInfo"16
-[AFLocalization voiceSimilarToVoice:inSiriSessionLanguage:]
+[AFVoiceInfo(AFLocalizationAdditions) allVoicesForSiriSessionLanguage:]
+[AFVoiceInfo(AFLocalizationAdditions) voiceInfoForSessionLanguageCode:]
+[AFVoiceInfo(AFLocalizationAdditions) outputVoiceIdentifierForLanguageCode:voiceName:]
VoiceMail
FaceTime
SearchOrMessaging
WebSearch
VoiceControl
_applicationName
_applicationDisplayName
_applicationVersion
_context
_fieldLabel
_fieldIdentifier
_interactionIdentifier
_requestIdentifier
_keyboardType
_prefixText
_postfixText
_selectedText
_returnKeyType
_languageCodeOverride
_offlineLanguage
_transcriptionMode
_microphoneIdentifier
_inlineItemList
_voiceSearchTypeOptions
_voiceSearchHeaderFields
_voiceSearchQueryParameters
_voiceTriggerEventInfo
_keyboardIdentifier
_forceOfflineRecognition
_preferOnlineRecognition
_detectUtterances
_continuousListening
_shouldHandleCapitalization
_preferOnDeviceRecognition
_secureOfflineOnly
_farField
_releaseAudioSessionOnRecordingCompletion
_incremental
_maximumRecognitionDuration
_taskHint
_originalAudioFileURL
_recognitionOverrides
_modelOverrideURL
_languageDetectionUserContext
_dictationInputOrigin
_samplingInfo
-[AFDataStore imageDataForKey:]
Entries
v32@?0@"NSString"8@"_AFDataStoreEntry"16^B24
-[AFDataStore initWithPropertyListRepresentation:]
Image
Scale
PNGData
-[_AFDataStoreEntry initWithPropertyListRepresentation:error:]
Unable to decode value for data store entry %@
isEnabled
primaryEarbudSide
primaryInEarStatus
secondaryInEarStatus
isEnabled = %@
primaryEarbudSide = %ld (%@)
primaryInEarStatus = %ld (%@)
secondaryInEarStatus = %ld (%@)
AFBluetoothHeadphoneInEarDetectionState::isEnabled
AFBluetoothHeadphoneInEarDetectionState::primaryEarbudSide
AFBluetoothHeadphoneInEarDetectionState::primaryInEarStatus
AFBluetoothHeadphoneInEarDetectionState::secondaryInEarStatus
enablementFlow
newUser
userStatusFetchError
dateStartedResolvingUserStatus
dateEndedResolvingUserStatus
experimentFetchError
dateStartedResolvingExperiment
dateEndedResolvingExperiment
outputVoiceCountForRecognitionLanguage
recognitionLanguageWithMultipleOutputVoicesExists
enablementFlow = %ld (%@)
newUser = %@
userStatusFetchError = %@
dateStartedResolvingUserStatus = %@
dateEndedResolvingUserStatus = %@
experiment = %@
experimentFetchError = %@
dateStartedResolvingExperiment = %@
dateEndedResolvingExperiment = %@
outputVoiceCountForRecognitionLanguage = %@
recognitionLanguageWithMultipleOutputVoicesExists = %@
AFEnablementConfigurationProviderParameters::enablementFlow
AFEnablementConfigurationProviderParameters::newUser
AFEnablementConfigurationProviderParameters::userStatusFetchError
AFEnablementConfigurationProviderParameters::dateStartedResolvingUserStatus
AFEnablementConfigurationProviderParameters::dateEndedResolvingUserStatus
AFEnablementConfigurationProviderParameters::experiment
AFEnablementConfigurationProviderParameters::experimentFetchError
AFEnablementConfigurationProviderParameters::dateStartedResolvingExperiment
AFEnablementConfigurationProviderParameters::dateEndedResolvingExperiment
AFEnablementConfigurationProviderParameters::outputVoiceCountForRecognitionLanguage
AFEnablementConfigurationProviderParameters::recognitionLanguageWithMultipleOutputVoicesExists
AFConversationStore
-[AFConversationStore saveConversation:withIdentifier:completionBlock:]_block_invoke
Unable to decode conversation from property list
metadata
historicalData
historicalMetadata
deviceInfo
privacyClass
contexts
metadata_type
metadata_timestamp
metadata_expirationDate
metadata_redactedKeyPaths
metadata_historyConfiguration
serializedBackingStore
fromLocalDevice
contextCollectorSource
%@(%@)(id=%@, deviceInfo=%@, local=%d%@
%@ (%@, %@, expires %@)
alternativeSelectionCount
characterModificationCount
characterInsertionCount
characterSubstitutionCount
characterDeletionCount
correctedText
AFMemoryInfoGetCurrent
extractMyriadDataFromAudioContext
-[AFMyriadRecord initWithAudioData:]
-[AFMyriadRecord initWithDeviceID:data:]
-[AFMyriadRecord setRawAudioGoodnessScore:withBump:]
-[AFMyriadRecord adjustByMultiplier:adding:]
-[AFMyriadRecord isSane]
FALSE
TRUE
MyriadRecord: hash=%#04x,good=%d,conf=%d,dc=%d,pt=%d,tb=%d,isMe=%@,g=%d,cc=%d
_generateRandomHash
q24@?0@"NSDateInterval"8@"NSDateInterval"16
intentRequestId
inactiveOnly
stream_uid
delivery_stream
context_data
context_data_type
date_created
assistant_id
record_id
_event
_streamUID
_dateCreated
_speechId
_recordId
productType
coreAnalyticsContextPayload
-[AFDeviceContext(Utilities) af_serviceDeviceContextForKeys:excludeContextExpiredBefore:proximity:]_block_invoke
@"NSDictionary"16@?0@"NSString"8
-[AFDeviceContext(Utilities) af_validFlowContext]
com.apple.assistant.memory-pressure-observer
-[AFMemoryPressureObserver _startObservingMemoryPressureWithOptions:]
-[AFMemoryPressureObserver _stopObservingMemoryPressure]
-[AFMemoryPressureObserver _handleMemoryPressureWithFlags:]
memoryPressureChange
normal
warning
critical
_showUIDuringListening
_playAlertBeforeListening
showUIBeforeListening: %@, playAlertBeforeListening: %@
AFApplicationWorkspaceEnumerateInstalledApplications
AFApplicationWorkspaceEnumerateInstalledApplications_block_invoke
Internal
System
hidden
v24@?0@"LSBundleProxy"8^B16
LSApplicationProxy
initLSApplicationProxy_block_invoke
AFApplicationWorkspaceUtils.m
classLSApplicationProxy
/System/Library/Frameworks/CoreServices.framework/CoreServices
CoreServicesLibrary
LSApplicationWorkspace
initLSApplicationWorkspace_block_invoke
classLSApplicationWorkspace
AFNetworkAvailability
AFDeviceContextPrivacyClassUnknown
AFDeviceContextPrivacyClassUsedByLocalUser
AFDeviceContextPrivacyClassSharedWithHome
left
right
alarm
callState
heardVoiceTrigger
homeAnnouncement
location
multiUserState
myriadAdvertisementContext
siriClientState
systemState
requestHandling
serverContextUpdateCommand
AFFetchContextsKeyPlaybackStates
kAFAccountInfoIdentifierKey
kAFAccountInfoLabelKey
kAFAccountInfoAssistantIdentifierKey
kAFAccountInfoLoggingAssistantIdentifierKey
kAFAccountInfoSpeechIdentifierKey
kAFAccountInfoHostnameKey
kAFAccountInfoPeerAssistantIdentifierKey
kAFAccountInfoPeerLoggingAssistantIdentifierKey
kAFAccountInfoPeerSpeechIdentifierKey
kAFAccountInfoPeerUserAgentStringKey
kAFAccountInfoPeerLanguageCodeKey
kAFAccountInfoPeerSiriEnabledKey
kAFAccountInfoPeerHostnameKey
kAFAccountInfoPredefinedServerKey
kAFAccountInfoAceHostKey
kAFAccountInfoConnectionPolicyKey
kAFAccountInfoConnectionPolicyDateKey
kAFAccountInfoConnectionPolicyHostnameKey
kAFAccountInfoGroupKey
kAFAccountInfoIsActiveKey
kAFAccountInfoLocaleIdentifierKey
kAFAccountInfoNeedsDestructionKey
kAFAccountConnectionPolicyFirstFailureDate
: %@ { Assistant: %@, Host: %@, Ace Host: %@, Group: %@ }
_identifier
_label
_assistantIdentifier
_loggingAssistantIdentifier
_speechIdentifier
_hostname
_peerAssistantIdentifier
_peerLoggingAssistantIdentifier
_peerSpeechIdentifier
_peerUserAgentString
_predefinedServer
_aceHost
_connectionPolicy
_connectionPolicyDate
_connectionPolicyHostname
_connectionPolicyFirstFailureDate
_group
_lastSyncDates
_localeIdentifier
_isActive
keepUISessionAlive
keepAudioSessionAlive
manual
assisted
singleResult
selection
%lu.%@
q24@?0@"SAUIListItem"8@"SAUIListItem"16
DisambiguationInfoKey
q24@?0@8@16
_af_SaveItemSelection
-[AFManagedStorageConnection domainObjectForKey:]_block_invoke
-[AFManagedStorageConnection dataForKey:inKnowledgeStoreWithName:]
-[AFManagedStorageConnection dataForKey:inKnowledgeStoreWithName:]_block_invoke
v16@?0@"NSData"8
-[AFManagedStorageConnection setData:forKey:inKnowledgeStoreWithName:]
-[AFManagedStorageConnection setData:forKey:inKnowledgeStoreWithName:]_block_invoke
-[AFManagedStorageConnection resetKnowledgeStoreWithName:]
-[AFManagedStorageConnection resetKnowledgeStoreWithName:]_block_invoke
AlarmIdentifier
-[AFCoreAnalyticsCrossDeviceEvent addNearbyDeviceContexts:proximityInfo:]_block_invoke
v32@?0@"AFDeviceContext"8Q16^B24
nearbyDevicesLoggingID = %@
nearbyDevicesPayloads = %@
inputDeviceID
inputAssistantID
inputDeviceID = %@
inputAssistantID = %@
AFRequestHandlingContext::requestID
AFRequestHandlingContext::inputDeviceID
AFRequestHandlingContext::inputAssistantID
TimerURLs
%02x
AFMyriadAdvertisementContextRecord: contextVersion=%ld vtEndTime=%f advRecordType=%ld advPayload=0x%@ deviceID=%@
-[AFMyriadAdvertisementContextRecord myriadAdvertisementContextAsData]
-[AFMyriadAdvertisementContextRecord isSaneForVoiceTriggerEndTime:endtimeDistanceThreshold:]
-[AFMyriadAdvertisementContextRecord _initializeMyriadAdvertisementContextRecordFromData:]
init with no parameters is not supported
AFSiriIncomingCall is not supported on this platform.
AFPersistentConnection
-[AFRemoteRequestWatcher _setupRequestListener]
v24@?0@"AFRequestInfo"8@?<v@?@"NSError">16
-[AFRemoteRequestWatcher _setupSpeechRequestListener]
-[AFRemoteRequestWatcher _setupSpeechRequestListener]_block_invoke
v16@?0@8
AFPineBoardSystemStateObserver.defaultObserver
-[AFPineBoardSystemStateObserver _startObservingPineBoardSystemState]
faceUp
faceDown
portrait
portraitUpsideDown
landscapeLeft
landscapeRight
AFSafetyBlock.m
block != nil
_Block_has_signature((__bridge void *)block)
Copied block %@ is expected to have a signature.
Number of default values (%lu) is expected to be equal or less than the number of block arguments (%lu).
Number of values for invocation (%lu) is expected to be equal or less than the number of block arguments (%lu).
Positive
Negative
_lastNegativeFeedback
_negativeFeedbackByContact
-[AFOpportuneSpeakingModelFeedbackManager init]
-[AFOpportuneSpeakingModelFeedbackManager lastNegativeFeedbackForContact:]
-[AFOpportuneSpeakingModelFeedbackManager setLastNegativeFeedbackForContact:]
-[AFOpportuneSpeakingModelFeedbackManager fetchNotificationUsageForSpeakableId:withStartDate:withEndDate:withHandler:]
startDate
EventType
StartDate
EndDate
TimeZone
Confidence
IndirectClear
-[AFOpportuneSpeakingModelFeedbackManager loadIfNecessary]
-[AFOpportuneSpeakingModelFeedbackManager save]
init_DKKnowledgeStore_block_invoke
AFOpportuneSpeakingModelFeedback.m
class_DKKnowledgeStore
CoreDuetLibrary
init_DKSystemEventStreams_block_invoke
class_DKSystemEventStreams
init_DKQuery_block_invoke
class_DKQuery
init_DKEventQuery_block_invoke
class_DKEventQuery
_DKNotificationUsageMetadataKey
init_DKNotificationUsageMetadataKey_block_invoke
class_DKNotificationUsageMetadataKey
com.apple.siri.opportune_speaking.feedback.plist
sessionId
currentElectionAdvertisementId
currentElectionAdvertisementData
electionAdvertisementDataByIds
sessionId = %@
currentElectionAdvertisementId = %@
currentElectionAdvertisementData = (%ld bytes)
electionAdvertisementDataByIds = %@
AFMyriadSession::generation
AFMyriadSession::sessionId
AFMyriadSession::currentElectionAdvertisementId
AFMyriadSession::currentElectionAdvertisementData
AFMyriadSession::electionAdvertisementDataByIds
ShowSiri
ShowSnippet
ShowCardSnippet
ShowUtterance
ScrollTranscript
EditTranscript
ShowPasscodeUnlock
ParseUsefulUserResult
SmartAppSelection
ButtonDownTimestamp
ActivationTimestamp
DidPresentHostedUITimestamp
DidPresentViewServiceUITimestamp
UsefulUserFacingResult
Duration
_originalCommandId
_category
_eventInfo
_duration
-[AFMetrics categoryString]
%@ - originalCommandId: %@, category: %@, duration: %@, eventInfo: %@
AFSiriUserNotificationRequestCapabilityForceUpdate
-[AFSiriUserNotificationRequest performRequestWithCompletion:]
-[AFSiriUserNotificationRequest deactivateRequestForReason:completion:]
-[AFSiriUserNotificationRequest withdrawalRequestWithCompletion:]
AFSiriUserNotificationRequestCapabilityManager
+[AFSiriUserNotificationRequestCapabilityManager _classForPlatform:]
+[AFSiriUserNotificationRequestCapabilityManager supportedByApplicationWithBundleID:]
-[AFSiriUserNotificationRequestCapabilityManager hasEligibleSetup]
-[AFSiriUserNotificationRequestCapabilityManager hasEligibleSetup]_block_invoke
-[AFSiriUserNotificationRequestCapabilityManager requestCanBeHandled]
-[AFSiriUserNotificationRequestCapabilityManager notifyObserversOfCurrentRequestCanBeHandledState:onPlatform:]
SettingsVoices
-[AFSettingsConnection initWithInstanceContext:]
-[AFSettingsConnection dealloc]
-[AFSettingsConnection _connection]_block_invoke_2
-[AFSettingsConnection fetchAccountsSynchronously:completion:]_block_invoke
-[AFSettingsConnection fetchActiveAccount:]_block_invoke
AFSettingsConnection.m
Need an account to save
-[AFSettingsConnection saveAccount:setActive:]_block_invoke
Need an identifier to delete
-[AFSettingsConnection deleteAccountWithIdentifier:]_block_invoke
Need an identifier to set active
-[AFSettingsConnection setActiveAccountIdentifier:]_block_invoke
-[AFSettingsConnection setAssistantEnabled:]_block_invoke
-[AFSettingsConnection setDictationEnabled:]_block_invoke
-[AFSettingsConnection setAssistantLoggingEnabled:]_block_invoke
-[AFSettingsConnection killDaemon]_block_invoke
-[AFSettingsConnection shutdownSessionIfIdle]_block_invoke
-[AFSettingsConnection barrier]_block_invoke
-[AFSettingsConnection disableAndDeleteCloudSyncWithCompletion:]_block_invoke
-[AFSettingsConnection getDevicesWithAvailablePHSAssetsForLanguage:completion:]_block_invoke
-[AFSettingsConnection getDevicesWithAvailablePHSAssetsOnDeviceCheck:]_block_invoke
-[AFSettingsConnection setConfigOverrides:completion:]_block_invoke
-[AFSettingsConnection configOverrides:]_block_invoke
-[AFSettingsConnection forceMultiUserSync:download:completion:]_block_invoke
-[AFSettingsConnection clearSpokenNotificationTemporarilyDisabledStatus]_block_invoke
-[AFSettingsConnection getSpokenNotificationIsAlwaysOpportuneWithCompletion:]_block_invoke
-[AFSettingsConnection setSpokenNotificationIsAlwaysOpportune:]_block_invoke
-[AFSettingsConnection getSpokenNotificationShouldAnnounceAllNotificationsWithCompletion:]_block_invoke
-[AFSettingsConnection setSpokenNotificationShouldAnnounceAllNotifications:]_block_invoke
-[AFSettingsConnection getSpokenNotificationShouldSkipTriggerlessRepliesWithCompletion:]_block_invoke
-[AFSettingsConnection setSpokenNotificationShouldSkipTriggerlessReplies:]_block_invoke
-[AFSettingsConnection setSpokenNotificationProxCardSeen:]_block_invoke
-[AFSettingsConnection getAnnounceNotificationsTemporarilyDisabledEndDateForPlatform:completion:]_block_invoke
-[AFSettingsConnection setAnnounceNotificationsTemporarilyDisabledUntil:platform:]_block_invoke
-[AFSettingsConnection getAnnounceNotificationsTemporarilyDisabledEndDateForApp:platform:completion:]_block_invoke
-[AFSettingsConnection setAnnounceNotificationsTemporarilyDisabledUntil:forApp:platform:]_block_invoke
-[AFSettingsConnection setAnnounceNotificationsInCarPlayTemporarilyDisabled:]_block_invoke
-[AFSettingsConnection getAnnounceNotificationsInCarPlayTemporarilyDisabledWithCompletion:]_block_invoke
-[AFSettingsConnection clearAnnounceNotificationsInCarPlayTemporarilyDisabled]_block_invoke
-[AFSettingsConnection getAnnounceNotificationsInCarPlayTypeWithCompletion:]_block_invoke
-[AFSettingsConnection setAnnounceNotificationsInCarPlayType:]_block_invoke
-[AFSettingsConnection clearAnnounceNotificationsInCarPlayType]_block_invoke
-[AFSettingsConnection setOpportuneSpeakingEdgeDetectorSignalOverride:]_block_invoke
-[AFSettingsConnection clearOpportuneSpeakingEdgeDetectorSignalOverride]_block_invoke
-[AFSettingsConnection fetchMultiUserVoiceIdentificationSetting:]_block_invoke
-[AFSettingsConnection homeOnboardingFlowInvoked:completion:]_block_invoke
-[AFSettingsConnection currectNWActivityId:]_block_invoke
v16@?0@"NSUUID"8
v16@?0@"AFAudioSessionCoordinationSnapshot"8
-[AFSettingsConnection setOutputVoice:withCompletion:]
-[AFSettingsConnection setLanguage:withCompletion:]
-[AFSettingsConnection setLanguage:outputVoice:withCompletion:]
-[AFSettingsConnection getCurrentAccessoryInfoWithCompletion:]_block_invoke
v16@?0@"AFHomeAccessoryInfo"8
-[AFSettingsConnection setRecognizeMyVoiceEnabled:]_block_invoke
-[AFSettingsConnection startUIRequestWithText:]_block_invoke
-[AFSettingsConnection startUIRequestWithInfo:]_block_invoke
-[AFSettingsConnection startUIRequestWithSpeechAudioFileURL:]_block_invoke
-[AFSettingsConnection startUIMockServerRequestWithReplayFileURL:completion:]_block_invoke
-[AFSettingsConnection startUIRequestWithText:completion:]_block_invoke
-[AFSettingsConnection startUIRequestWithInfo:completion:]_block_invoke
-[AFSettingsConnection startMultiUserUIRequestWithText:expectedSpeakerSharedUserID:expectedSpeakerConfidenceScore:nonspeakerConfidenceScores:completion:]_block_invoke
-[AFSettingsConnection dismissUI]_block_invoke
-[AFSettingsConnection stopAudioPlaybackRequest:immediately:]_block_invoke
-[AFSettingsConnection stopAllAudioPlaybackRequests:]_block_invoke
-[AFSettingsConnection postTestResultCandidateWithRcId:recognitionSausage:]_block_invoke
-[AFSettingsConnection postTestResultSelectedWithRcId:]_block_invoke
-[AFSettingsConnection getMeCard:]
-[AFSettingsConnection getMeCard:]_block_invoke
-[AFSettingsConnection setNanoAssistantEnabled:withCompletion:]
-[AFSettingsConnection setNanoDictationEnabled:withCompletion:]
-[AFSettingsConnection setNanoPhraseSpotterEnabled:withCompletion:]
-[AFSettingsConnection setNanoRaiseToSpeakEnabled:withCompletion:]
-[AFSettingsConnection setNanoUseDeviceSpeakerForTTS:withCompletion:]
-[AFSettingsConnection setNanoTTSSpeakerVolume:withCompletion:]
-[AFSettingsConnection setNanoOutputVoice:withCompletion:]
-[AFSettingsConnection setNanoLanguage:withCompletion:]
-[AFSettingsConnection setNanoCrownActivationEnabled:withCompletion:]
-[AFSettingsConnection setNanoSiriDataSharingOptInStatus:withCompletion:]
v16@?0@"AFBluetoothDeviceInfo"8
v16@?0@"AFBluetoothWirelessSplitterSessionInfo"8
-[AFSettingsConnection startObservingWirelessSplitterSession]_block_invoke
-[AFSettingsConnection stopObservingWirelessSplitterSession]_block_invoke
-[AFSettingsConnection showMultiUsers:]_block_invoke
-[AFSettingsConnection showPrimaryUserSharedUserIDWithCompletion:]_block_invoke
-[AFSettingsConnection showMultiUserSharedUserIDsCompletion:]_block_invoke
v24@?0@"NSError"8q16
-[AFSettingsConnection setSiriDataSharingOptInStatus:completion:]
-[AFSettingsConnection setSiriDataSharingOptInStatus:completion:]_block_invoke
-[AFSettingsConnection getSiriDataSharingOptInStatusWithCompletion:]
-[AFSettingsConnection getSiriDataSharingOptInStatusWithCompletion:]_block_invoke
-[AFSettingsConnection setSiriDataSharingOptInStatus:propagateToHomeAccessories:source:reason:completion:]
-[AFSettingsConnection setSiriDataSharingOptInStatus:propagateToHomeAccessories:source:reason:completion:]_block_invoke
-[AFSettingsConnection setSiriDataSharingOptInAlertPresented:completion:]
-[AFSettingsConnection setSiriDataSharingOptInAlertPresented:completion:]_block_invoke
-[AFSettingsConnection setSiriDataSharingHomePodSetupDeviceIsValid:completion:]
-[AFSettingsConnection setSiriDataSharingHomePodSetupDeviceIsValid:completion:]_block_invoke
-[AFSettingsConnection setOnDeviceDictationAvailableAlertPresented:]
-[AFSettingsConnection setOnDeviceDictationAvailableAlertPresented:]_block_invoke
-[AFSettingsConnection shouldSuppressSiriDataSharingOptInAlert:]_block_invoke
-[AFSettingsConnection deleteSiriHistoryWithContext:withCompletion:]
-[AFSettingsConnection deleteSiriHistoryWithContext:withCompletion:]_block_invoke
-[AFSettingsConnection deleteSiriHistoryWithCompletion:]
-[AFSettingsConnection setSiriDesignModeEnabled:completion:]_block_invoke
-[AFSettingsConnection siriDesignModeIsEnabled:]_block_invoke
-[AFSettingsConnection getCrossDeviceContextWithCompletion:]_block_invoke
-[AFSettingsConnection getCurrentContextSnapshotWithCompletion:]_block_invoke
-[AFSettingsConnection getOriginDeviceInfoForContextIdentifier:completion:]_block_invoke
-[AFSettingsConnection getContextCollectorsInfoWithCompletion:]_block_invoke
-[AFSettingsConnection setHardcodedBluetoothProximity:]_block_invoke
-[AFSettingsConnection getManagedLocalAndRemotePeerInfoWithCompletion:]_block_invoke
-[AFSettingsConnection getCapabilitiesDataFromReachableDevicesWithCompletion:]_block_invoke
-[AFSettingsConnection getProximityTuplesWithCompletion:]_block_invoke
-[AFSettingsConnection getExperimentForConfigurationIdentifier:completion:]_block_invoke
-[AFSettingsConnection synchronizeExperimentConfigurationsIfApplicableWithCompletion:]_block_invoke
-[AFSettingsConnection resetExperimentForConfigurationIdentifier:completion:]_block_invoke
-[AFSettingsConnection accessRecordedAudioWithIdentifier:completion:]_block_invoke
-[AFSettingsConnection trimRecordedAudioWithIdentifier:offset:duration:outputFileType:completion:]_block_invoke
-[AFSettingsConnection getRecordedAudioDirectoryPathsWithCompletion:]_block_invoke
-[AFSettingsConnection hasEverSetLanguageCodeWithCompletion:]_block_invoke
-[AFSettingsConnection areSiriUODAssetsAvailable:]_block_invoke
-[AFSettingsConnection getAssetStatusForLanguage:completionHandler:]_block_invoke
-[AFSettingsConnection getCurrentRequestIsWatchAuthenticatedWithCompletion:]_block_invoke
-[AFSettingsConnection pushMyriadAdvertisementContext:completionHandler:]_block_invoke
-[AFSettingsConnection getSpeakerCapabilityForAccessoryWithUUID:completionHandler:]_block_invoke
-[AFSettingsConnection triggerABCForType:subType:context:completionHandler:]_block_invoke
-[AFSettingsConnection getAssistantIsEnabledForDeviceWithSiriInfo:withCompletion:]_block_invoke
-[AFSettingsConnection getActiveASRLanguagesWithCompletion:]_block_invoke
-[AFSettingsConnection(Internal) _setSyncNeededForReason:]_block_invoke
-[AFSettingsConnection(Internal) _clearSyncNeededForKey:]_block_invoke
-[AFSettingsConnection(Internal) _fetchPeerData:]_block_invoke
-[AFSettingsConnection(Internal) _runServiceMaintenance]_block_invoke
-[AFSettingsConnection(Internal) _handleCommand:completion:]
-[AFSettingsConnection(Internal) _handleCommand:completion:]_block_invoke
-[AFSettingsConnection(Internal) _setSyncToken:forAceHost:completion:]_block_invoke
-[AFSettingsConnection(Internal) _readSyncTokenForAceHost:completion:]_block_invoke
peerInfo
systemInfo
peerInfo = %@
systemInfo = %@
AFAudioSessionCoordinationDeviceInfo::peerInfo
AFAudioSessionCoordinationDeviceInfo::systemInfo
AFCreateDirectoryWithPath
yyyyMMdd
currentSamplingDate
+[AFSamplingUtilities createSamplingDirectory]
+[AFSamplingUtilities deleteItemAtFilePath:]
+[AFSamplingUtilities deleteAllSamplingData]
overrideOption
overrideOption = %ld (%@)
AFMyriadGoodnessScoreOverrideState::overrideOption
AFMyriadGoodnessScoreOverrideState::reason
com.apple.siri.activation.frontend-process-handler
com.apple.siri.client-state-changed
-[AFSiriActivationHandlerFrontendProcess handleContext:completion:]
-[AFSiriActivationHandlerFrontendProcess handleContext:completion:]_block_invoke
-[AFSiriActivationHandlerFrontendProcess notifyObserver:didChangeStateFrom:to:]
v32@?0@"NSNumber"8@"AFSafetyBlock"16^B24
-[AFSiriActivationHandlerFrontendProcess _waitUntilListeningForContext:timeoutInterval:completion:]
-[AFSiriActivationHandlerFrontendProcess _waitUntilListeningForContext:timeoutInterval:completion:]_block_invoke
UnlocalizedName
CountryName
UnlocalizedCountryName
Latitude
Longitude
ALCityID
AFShouldUseLanguageDetector
AFOverrideLanguageCode
accessoryMetrics
VoiceTrigger
InTaskVoiceTrigger
Emergency
DirectTrigger
OutgoingTrigger
00000000-0000-0000-0000-000000000000
00000000-0000-0000-0000-%012u
session_id
trigger
adv-delay
adv-interval
device_count
goodness
goodness_scores
previous_decision
%llu
previous_decision_time
decision
%hhu
winner_goodness
winner_device_class
winner_product_type
homepod_involved
winner_sent_suppresssion
late_for_device_arbitration
device_arbitration_delay
-[AFMyriadMetrics submitAccessoryMyriadMetricsToAnalyticsStream:payload:instrumentation:completion:]
stopped
paused
running
airPodDoubleTapWhenActive
airPodOutOfEarWhenActive
adBlockerTriggered
carPlayBannerTrump
carPlayBannerDismissal
carPlayBannerOutsideTap
carPlayBannerHomeButton
carPlayBannerBackButton
carPlayBannerTouchPadSwipe
carPlayBannerTrackPadMovement
carPlayBannerNotificationWithdrawn
voiceInterruptionDuringAnnouncement
incomingCallEndedDuringAnnouncement
incomingCallAnnouncementTrump
remoteDeactivation
unsupportedVoicePromptStyleDuringAnnouncement
carPlayBorrowedAudioDuringAnnouncement
_settingType
_valueBeforeUpdate
_valueAfterUpdate
-[AFSiriAnnounceIncomingCallRequest performRequestWithCompletion:]
SiriRequestIdentifier
SiriRequestOriginatingAceIDIdentifier
SiriRequestOriginatingTurnIdentifier
AFSiriRequest.m
turnId: "
OriginatingAceID: 
v32@?0@"NSString"8@16^B24
Request
-[AFSiriActivationHandlerCoreSpeechDaemon handleContext:completion:]
-[AFSiriActivationHandlerCoreSpeechDaemon handleContext:completion:]_block_invoke
score
-[AFSiriActivationHandlerCoreSpeechDaemon handleContext:completion:]_block_invoke_2
CSActivationEventNotifier
initCSActivationEventNotifier_block_invoke
AFSiriActivationHandlerCoreSpeechDaemon.m
classCSActivationEventNotifier
/System/Library/PrivateFrameworks/CoreSpeech.framework/CoreSpeech
CoreSpeechLibrary
CSActivationEvent
initCSActivationEvent_block_invoke
classCSActivationEvent
_score
_threshold
threshold
Siri Global
 - %@
AFKeychainValueForAccountAndKey
AFKeychainRemoveValueForAccountAndKey
AFKeychainSetValueForAccountAndKey
sending
ringing
latitude
longitude
altitude
direction
speed
verticalAccuracy
horizontalAccuracy
preciseLocationEnabled
accessState
latitude = %@
longitude = %@
altitude = %@
direction = %@
speed = %@
verticalAccuracy = %@
horizontalAccuracy = %@
preciseLocationEnabled = %@
accessState = %ld (%@)
AFLocationSnapshot::latitude
AFLocationSnapshot::longitude
AFLocationSnapshot::altitude
AFLocationSnapshot::direction
AFLocationSnapshot::speed
AFLocationSnapshot::verticalAccuracy
AFLocationSnapshot::horizontalAccuracy
AFLocationSnapshot::preciseLocationEnabled
AFLocationSnapshot::accessState
route
isRemoteDevice
route = %@
isRemoteDevice = %@
AFAudioDeviceInfo::route
AFAudioDeviceInfo::isRemoteDevice
AFAudioDeviceInfo::deviceUID
isForCarDND
isVoiceTriggerRequest
isConnectedToCarPlay
isRequestMadeWithPhysicalDeviceInteraction
userTypedInSiri
modeOverrideValue
deviceRaised
faceDetected
touchScreenDetected
buttonPressDetected
flatDevicePosture
deviceOrientation
isInWorkout
isBacklightOn
isInWaterLock
isInSleepLock
isInTheaterMode
isOnWrist
isForCarDND = %@
isVoiceTriggerRequest = %@
isConnectedToCarPlay = %@
isRequestMadeWithPhysicalDeviceInteraction = %@
userTypedInSiri = %@
modeOverrideValue = %@
deviceRaised = %ld (%@)
faceDetected = %ld (%@)
touchScreenDetected = %ld (%@)
buttonPressDetected = %ld (%@)
flatDevicePosture = %ld (%@)
deviceOrientation = %ld (%@)
isInWorkout = %ld (%@)
isBacklightOn = %ld (%@)
isInWaterLock = %ld (%@)
isInSleepLock = %ld (%@)
isInTheaterMode = %ld (%@)
isOnWrist = %ld (%@)
AFModesConfiguration::isEyesFree
AFModesConfiguration::isForCarDND
AFModesConfiguration::isVoiceTriggerRequest
AFModesConfiguration::isConnectedToCarPlay
AFModesConfiguration::isRequestMadeWithPhysicalDeviceInteraction
AFModesConfiguration::userTypedInSiri
AFModesConfiguration::modeOverrideValue
AFModesConfiguration::deviceRaised
AFModesConfiguration::faceDetected
AFModesConfiguration::touchScreenDetected
AFModesConfiguration::buttonPressDetected
AFModesConfiguration::flatDevicePosture
AFModesConfiguration::deviceOrientation
AFModesConfiguration::isInWorkout
AFModesConfiguration::isBacklightOn
AFModesConfiguration::isInWaterLock
AFModesConfiguration::isInSleepLock
AFModesConfiguration::isInTheaterMode
AFModesConfiguration::isOnWrist
alarmsByID
notifiedFiringAlarmIDs
alarmsByID = %@
notifiedFiringAlarmIDs = %@
AFClockAlarmSnapshot::generation
AFClockAlarmSnapshot::date
AFClockAlarmSnapshot::alarmsByID
AFClockAlarmSnapshot::notifiedFiringAlarmIDs
mediaSystemIdentifier
sharedUserID
serializedContextByKey
metricsContext
mediaSystemIdentifier = %@
sharedUserID = %@
serializedContextByKey = %@
metricsContext = %@
AFServiceDeviceContext::identifier
AFServiceDeviceContext::assistantIdentifier
AFServiceDeviceContext::mediaSystemIdentifier
AFServiceDeviceContext::mediaRouteIdentifier
AFServiceDeviceContext::sharedUserID
AFServiceDeviceContext::roomName
AFServiceDeviceContext::proximity
AFServiceDeviceContext::serializedContextByKey
AFServiceDeviceContext::metricsContext
initial
followUpOne
followUpTwo
final
com.apple.siri.myriad.decision.begin
com.apple.siri.myriad.decision.won
com.apple.siri.myriad.decision.lost
com.apple.siri.myriad.repost.decision.won
com.apple.siri.myriad.readdefaults
audioFileURL = %@
endpointerOperationMode = %@
useAutomaticEndpointing = %d
%@ {event = %ld (%@), turnId = %@, deviceIdentifier = %@, time = %f, hostTime = %llu%@}
_activationDeviceIdentifier
_isEyesFree
_serverCommandId
_useAutomaticEndpointing
_endpointerOperationMode
_endpointerStopRecordingMode
_recordingAlertPolicy
_disableInputAudioPowerUpdate
_disableOutputAudioPowerUpdate
_useStreamingDictation
_homeButtonDownEventTime
_homeButtonDownEventMachAbsoluteTime
_activationEventTime
_activationEventMachAbsoluteTime
_expectedActivationEventTime
_stopRecordingHostTime
_isInitialBringUp
_homeButtonUpFromBeep
_acousticIdEnabled
_audioFileType
_audioFileHandle
_myriadContext
_recordDeviceIdentifier
_speechRecordingEventListeningEndpoint
_usePrelisteningMode
_pendCallbacksUntilAfterContinuation
_useBorealisBuffer
_audioFileURL
_suppressStartAlert
_suppressStopAlert
_hasPlayedStartAlert
_bargeInOptions
_speechSynthesisRecord
_reloadSmartSiriVolume
_skipPersonalizedASR
_clientAnalyticsContext
_startContext
_stopContext
_location
_locationStatus
_isOnPhoneCall
_isMediaPlaying
_mediaPlaybackVolume
_applicationBundleIdentifier
_presentationMode
_preheatLanguage
_preheatTestModelPath
_dictationVoiceTriggerAbsStartSampleId
_announcementPlatform
_isTest
alwaysOn
controlWithRingSwitch
handsFreeOnly
directTrigger
inEarTrigger
@16@?0#8
-[AFPluginManager enumerateFactoryInstancesForDomainKey:groupIdentifier:classIdentifier:usingBlock:]
-[AFPluginManager preloadBundles]
-[AFPluginManager _loadBundlesIfNeeded]
-[AFPluginManager _registerBundle:]
 Bundle Path: %@, Bundles: %@
lastSyncDate
didEnd
endingGroupIdentifier
lastSyncDate = %@
didEnd = %@
endingGroupIdentifier = %@
AFExperimentState::lastSyncDate
AFExperimentState::didEnd
AFExperimentState::endingGroupIdentifier
AFExperimentState::version
reusesRecycled
recyclesWhenDone
forcesAirPlay
%@ %@
turnContext
hasPlayedStartAlert
voiceTriggerInfo
myriadContext
analyticsContext
endpointerMode
buttonHoldDurationInMillisecond
raiseToSpeakInfo
AFSiriActivationVoiceActivityDetected
v16@?0@"<AFSiriActivationContextMutating>"8
AFSiriActivationVoiceKeywordDetected
AFSiriActivationVoiceTriggerPrewarm
AFSiriActivationVoiceTriggerActivate
AFSiriActivationContinuousVoiceTriggerDetected
AFSiriActivationBuiltInMicVoice
AFSiriActivationBuiltInMicVoiceTriggerPrewarm
AFSiriActivationBuiltInMicVoiceTrigger
AFSiriActivationHearst
AFSiriActivationHearstDoubleTap
AFSiriActivationHearstVoice
AFSiriActivationHearstBoron
AFSiriActivationBluetoothDeviceDoubleTap
AFSiriActivationBluetoothDeviceVoice
AFSiriActivationBluetoothDeviceVoiceTriggerPrewarm
AFSiriActivationBluetoothDeviceVoiceTrigger
AFSiriActivationBluetoothDeviceBoronSignal
AFSiriActivationBluetoothDeviceTriggerless
AFSiriActivationBluetoothDeviceButtonPress
AFSiriActivationBluetoothDeviceButtonRelease
AFSiriActivationHoneycombDeviceVoiceTriggerPrewarm
AFSiriActivationHoneycombDeviceVoiceTrigger
AFSiriActivationCarPlayDeviceVoice
AFSiriActivationCarPlayDeviceVoiceTriggerPrewarm
AFSiriActivationCarPlayDeviceVoiceTrigger
AFSiriActivationRaiseToSpeakPrewarm
AFSiriActivationRaiseToSpeak
AFSiriActivationTriggerless
AFSiriActivationValidate
AFSiriActivationPerform
AFSiriActivationCreateRequestInfoFromContext
com.apple.siri.activation.%@-%@
AFSiriActivationCreateContextFromXPCDictionary_block_invoke
AFSiriActivationCreateXPCDictionaryFromContext
AFSiriActivationCreateResultFromXPCDictionary_block_invoke
AFSiriActivationCreateXPCDictionaryFromResult
_AFSiriActivationGetHandler
NSDictionary<NSString *,id> * _Nullable AFPeerContentTupleGetContentMapFromArray(NSArray<AFPeerContentTuple *> * _Nullable __strong, __strong AFPeerContentTupleKeyProvider _Nonnull, AFPeerContentTupleContentFilter  _Nullable __strong, AFPeerContentTupleFallbackPeerProvider  _Nullable __strong, NSArray<AFPeerContentTuple *> * _Nullable __autoreleasing * _Nullable)
AFPeerContentUtils.m
keyProvider != nil
context
endpointUUID
context = (%ld bytes)
AFSiriHomeAutomationRequestInfo::context
playing
seeking
GetContextResponseContext
timersByID
notifiedFiringTimerIDs
timersByID = %@
notifiedFiringTimerIDs = %@
AFClockTimerSnapshot::generation
AFClockTimerSnapshot::date
AFClockTimerSnapshot::timersByID
AFClockTimerSnapshot::notifiedFiringTimerIDs
experimentsByConfigurationIdentifier
experimentsByConfigurationIdentifier = %@
AFExperimentContext::experimentsByConfigurationIdentifier
Outbound
SenderAddress
SenderInternalGUID
RecipientAddresses
GroupName
GroupNameId
SubjectText
BodyText
AttachmentURL
SendDate
ChatIdentifier
Effect
siri-message-internal
-[SASmsSms(STSiriMessage) af_messageValue]
voiceTriggerEnabled
%@(voiceTriggerEnabled=%@)
lastPlayedAnnouncement
state = %lu [%@]
lastPlayedAnnouncement = %@
AFHomeAnnouncementSnapshot::state
AFHomeAnnouncementSnapshot::lastPlayedAnnouncement
AFSiriTaskService.m
com.apple.siri.task.app.
Cannot create an app task service for a process without a bundle
-[AFSiriTaskService initWithMachServiceName:]
SiriTaskService-
com.apple.siri.task.client
-[AFSiriTaskService listener:shouldAcceptNewConnection:]
-[AFSiriTaskDeliveryHandler deliverSiriTask:completionHandler:]
-[AFSiriTaskDeliveryHandler deliverSiriTask:completionHandler:]_block_invoke
record
playback
AFSiriTaskmaster.m
Siri Taskmaster
-[AFSiriTaskmaster _handleFailureOfRequest:error:atTime:]
-[AFSiriTaskmaster handleFailureOfRequest:error:atTime:]
 %p; 
taskDeliverer=
, taskExecutions=
request
-[AFSiriTaskmaster handleSiriRequest:deliveryHandler:completionHandler:]
STGenericIntentRequest
Voice Activity
Smart Heuristics
Online Learner
_enabled
_daysOfWeek
_hourOfDay
_minuteOfHour
_sleepAlarm
_overrideAlarm
_bedtimeHour
_bedtimeMinute
performsOnlyIfIdle
Item
ChildNodes
-[AFTreeNodePropertyListSerialization _propertyListWithTreeNode:itemPropertyListCreation:]
Item creation block returned nil for %@
Unable to create tree node from property list with version %ld
monday
tuesday
wednesday
thursday
friday
saturday
sunday
AlarmIdentifiers
-[AFUserNotificationAnnouncementSpeakingStateObserver _startObservingNotificationWithRequestIdentifier:]
-[AFUserNotificationAnnouncementSpeakingStateObserver _removeObserverForNotificationRequestIdentifier:]
-[AFUserNotificationAnnouncementSpeakingStateObserver _speakingStateDidChange:forIdentifiers:]
-[AFUserNotificationAnnouncementSpeakingStateObserver _currentConnection]_block_invoke
-[AFUserNotificationAnnouncementSpeakingStateObserver _notifyObserverOfFailureForAllObservingNotifications]
-[AFUserNotificationAnnouncementSpeakingStateObserver _tearDown]
-[AFUserNotificationAnnouncementSpeakingStateObserver connectionInvalidated]
-[AFUserNotificationAnnouncementSpeakingStateObserver connectionInterrupted]
onSpeaker
callState = %lu [%@]
onSpeaker = %@
AFCallStateSnapshot::callState
AFCallStateSnapshot::onSpeaker
com.apple.siri.disambiguation
UpdateMessageRequestMessage
initiated
retry
myriadLoss
requestCancelled
requestFailed
requestTimedOut
adBlockerMitigated
acousticFtmMitigated
kSTSiriLocationAddressBookIDKey
kSTSiriLocationAddressLabelKey
kSTSiriLocationContactNameKey
kSTSiriLocationGeoResultKey
kSTSiriLocationResultTypeKey
type: %@, data length: %@
\ %@
virtualMemorySizeInBytes
numberOfRegions
pageSizeInBytes
residentMemorySizeInBytes
peakResidentMemorySizeInBytes
physicalMemoryFootprintInBytes
virtualMemorySizeInBytes = %@
numberOfRegions = %@
pageSizeInBytes = %@
residentMemorySizeInBytes = %@
peakResidentMemorySizeInBytes = %@
physicalMemoryFootprintInBytes = %@
AFMemoryInfo::virtualMemorySizeInBytes
AFMemoryInfo::numberOfRegions
AFMemoryInfo::pageSizeInBytes
AFMemoryInfo::residentMemorySizeInBytes
AFMemoryInfo::peakResidentMemorySizeInBytes
AFMemoryInfo::physicalMemoryFootprintInBytes
deviceID
source = %ld (%@)
event = %ld (%@)
deviceID = %@
AFSiriActivationContext::timestamp
AFSiriActivationContext::source
AFSiriActivationContext::event
AFSiriActivationContext::options
AFSiriActivationContext::deviceID
AFSiriActivationContext::userInfo
(gen: %@, date: %@, notifiedFiringAlarmIDs: %@, isFiring: %@)
(gen: %@, date: %@, notifiedFiringTimerIDs: %@, isFiring: %@)
(playstate: %@, time: %@, mediaType: %@, group: %@)
(state: %@)
(assistant=%@, ids=%@, media(s/r)=%@/%@, nm=%@, rm=%@, communal=%d)
(vtSatScore = %@, hasConfidenceScores = %@)
([%d,%d], accuracy=%d)
(private)
(callState = %@)
(attention = %@)
AFAnalytics.m
%s is marked as NS_UNAVAILABLE. Use the designated initializer instead.
-[AFAnalytics init]
com.apple.assistant.analytics.client
-[AFAnalytics logEventWithType:machAbsoluteTime:context:]
-[AFAnalytics logInstrumentation:machAbsoluteTime:turnContext:]
-[AFAnalytics boostQueuedEvents:]
-[AFAnalytics boostQueuedEvents:]_block_invoke
_AFAnalyticsEventCreate
_AFAnalyticsEventGetContextGuarded
buddy
headphonePairing
homePodSetup
watchPairing
turnOnSiriView
watchBridgeSettings
homeSettings
tinkerWatchPairing
/Assistant/AssistantSampled
com.apple.assistantd/AssistantSampled
reasons: %@, playback interrupted time: %f
-[AFMyriadGoodnessScoreEvaluator getRecentBump:ignoreAdjustedBoost:]
-[AFMyriadGoodnessScoreEvaluator getPlatformBias]
-[AFMyriadGoodnessScoreEvaluator bumpGoodnessScore:lastActivationTime:mediaPlaybackInterruptedTime:ignoreAdjustedBoost:]
-[AFMyriadGoodnessScoreEvaluator _updatePlatformBias:]
-[AFMyriadGoodnessScoreEvaluator getMyriadAdjustedBoostForGoodnessScoreContext:]
-[AFMyriadGoodnessScoreEvaluator _settingsConnectionDidDisconnect]_block_invoke
-[AFSiriActivationListener initWithServicePort:]
com.apple.siri.activation.listener
-[AFSiriActivationListener dealloc]
-[AFSiriActivationListener listener:shouldAcceptNewConnection:]
com.apple.siri.external_request
-[AFSiriActivationListener notifyObserver:didChangeStateFrom:to:]
-[AFSiriActivationListener prewarmWithRequestInfo:context:completion:]
-[AFSiriActivationListener prewarmWithRequestInfo:context:completion:]_block_invoke
-[AFSiriActivationListener activateWithRequestInfo:context:completion:]
-[AFSiriActivationListener activateWithRequestInfo:context:completion:]_block_invoke_2
-[AFSiriActivationListener activateWithRequestInfo:context:completion:]_block_invoke
-[AFSiriActivationListener deactivateForReason:options:context:completion:]
-[AFSiriActivationListener deactivateForReason:options:context:completion:]_block_invoke_2
-[AFSiriActivationListener deactivateForReason:options:context:completion:]_block_invoke
-[AFSiriActivationListener handleContext:completion:]
-[AFSiriActivationListener handleContext:completion:]_block_invoke_2
-[AFSiriActivationListener handleContext:completion:]_block_invoke
v16@?0@"AFRequestInfo"8
v24@?0q8Q16
v16@?0@"AFSiriActivationContext"8
-[AFSiriActivationListener handleIntent:inBackgroundAppWithBundleId:reply:]
-[AFSiriActivationListener handleIntent:inBackgroundAppWithBundleId:reply:]_block_invoke_2
-[AFSiriActivationListener handleIntent:inBackgroundAppWithBundleId:reply:]_block_invoke
-[AFSiriActivationListener handleIntentForwardingAction:inBackgroundApplicationWithBundleIdentifier:completionHandler:]
-[AFSiriActivationListener handleIntentForwardingAction:inBackgroundApplicationWithBundleIdentifier:completionHandler:]_block_invoke_2
-[AFSiriActivationListener handleIntentForwardingAction:inBackgroundApplicationWithBundleIdentifier:completionHandler:]_block_invoke
-[AFSiriActivationListener _startWithDelegate:]
-[AFSiriActivationListener _stop]
-[AFSiriActivationListener _invalidate]
-[AFSiriActivationListener _prewarmWithRequestInfo:context:completion:]
-[AFSiriActivationListener _prewarmWithRequestInfo:context:completion:]_block_invoke
-[AFSiriActivationListener _activateWithRequestInfo:context:completion:]
-[AFSiriActivationListener _activateWithRequestInfo:context:completion:]_block_invoke
-[AFSiriActivationListener _deactivateForReason:options:context:completion:]
-[AFSiriActivationListener _deactivateForReason:options:context:completion:]_block_invoke
-[AFSiriActivationListener _deliverButtonEventFromContext:completion:]
-[AFSiriActivationListener _deliverButtonEventFromContext:completion:]_block_invoke
-[AFSiriActivationListener _myriadEventWithRequestInfo:context:completion:]
-[AFSiriActivationListener _myriadEventWithRequestInfo:context:completion:]_block_invoke
+[AFSiriAnnouncementRequestCapabilityManager _classForPlatform:]
+[AFSiriAnnouncementRequestCapabilityManager supportedAnnouncementTypesForBundleId:onPlatform:]
-[AFSiriAnnouncementRequestCapabilityManager provider:eligibleAnnouncementRequestTypesChanged:]
-[AFSiriAnnouncementRequestCapabilityManager provider:availableAnnouncementRequestTypesChanged:]
com.apple.Home
com.apple.NanoHome
com.apple.reminders
com.apple.NanoReminders
com.apple.mobilephone
com.apple.facetime
LSApplicationRecord
Class getLSApplicationRecordClass(void)_block_invoke
AFSiriAnnouncementRequestCapabilityManager.m
void *CoreServicesLibrary(void)
/System/Library/Frameworks/CoreServices.framework/Contents/MacOS/CoreServices
INAppInfo
Class getINAppInfoClass(void)_block_invoke
siri_vox_tap_to_siri_behavior_experiment
playsSound
AFDeviceRingerSwitchObserver
com.apple.springboard.ringerstate
CreateMessageRequestMessage
com.apple.deviceArbitration
aData
dInfo
eDecision
emergencyHandled
reqType
myrRequestTypeUnknown
myrRequestTypeReset
myrRequestTypeVoiceTrigger
myrRequestTypeContiniousVoiceTrigger
myrRequestTypeAdvertiseEmergency
myrRequestTypeDeviceFound
myrRequestTypePreheat
myrRequestTypeDirectTrigger
myrRequestTypeSelfTrigger
myrRequestTypeEmergencyHandledStatus
myrRequestTypeElectionDecision
-[AFMyriadAccessoryMessage _initializeMessageObj:]
-[AFMyriadAccessoryMessage _initializeMessageObjFromDictionary:]
iSane
1 (ACKNOWLEDGEMENT)
usesSerializedProtocol
RequestType
%llu (%@)
VoiceTrigger endtime
AudioHash
hash=%#04x
GoodnessScore
UserConfidence
TieBreaker
DeviceClass
DeviceGroup
ProductType
ElectionDecision
EmergencyHandled
com.apple.siri.suggestions-%@.plist
Siri Utterance Suggestions Queue
accessoryIdentifier
propagationEvent
propagationEventReason
associatedChangeLogEventIdentifier
accessoryIdentifier = %@
propagationEvent = %ld (%@)
propagationEventReason = %@
associatedChangeLogEventIdentifier = %@
AFHomeAccessorySiriDataSharingPropagationLogEvent::date
AFHomeAccessorySiriDataSharingPropagationLogEvent::accessoryIdentifier
AFHomeAccessorySiriDataSharingPropagationLogEvent::propagationEvent
AFHomeAccessorySiriDataSharingPropagationLogEvent::propagationEventReason
AFHomeAccessorySiriDataSharingPropagationLogEvent::associatedChangeLogEventIdentifier
; service=
; initiatorAddress=
; recipientAddress=
_service
_initiatorAddress
_recipientAddress
FaceTime Audio
Telephony
com.apple.assistant.myriad.instrumentation
-[AFMyriadInstrumentation logCDADeviceStateActivityStartedOrChanged:withTrigger:withCdaId:withTimestamp:]_block_invoke
-[AFMyriadInstrumentation logCDADeviceStateActivityEnded:withCdaId:withTimestamp:]_block_invoke
-[AFMyriadInstrumentation logCDAElectionAdvertisingStarted:withCdaId:withTimestamp:]_block_invoke
-[AFMyriadInstrumentation logCDAElectionAdvertisingStarting:withDelay:withInterval:withCdaId:withTimestamp:]_block_invoke
-[AFMyriadInstrumentation logCDAElectionAdvertisingEnded:withCdaId:withTimestamp:]_block_invoke
-[AFMyriadInstrumentation logCDAElectionAdvertisingEnding:withCdaId:withTimestamp:]_block_invoke
-[AFMyriadInstrumentation logCDAElectionTimerEnded:withCdaId:withTimestamp:]_block_invoke
-[AFMyriadInstrumentation logCDAElectionDecisionMade:withDecision:withPreviousDecision:timeSincePreviousDecision:withWinningDevice:withThisDevice:withParticipants:withRawScore:withBoost:withCdaId:withTimestamp:]_block_invoke
-[AFMyriadInstrumentation logCDAElectionDecisionMadeDebug:withCrossDeviceArbitrationAllowed:advertisementData:withDeviceGroup:withCdaId:withTimestamp:]_block_invoke
AFCDABoostTypeUnknown
AFCDABoostTypeDevice
AFCDABoostTypeUnlock
AFCDABoostTypeRecentRaiseToWake
AFCDABoostTypeRecentRequest
AFCDABoostTypeRecentMotion
AFCDABoostTypeRecentPlayback
AFCDABoostTypeAlarmAndTimerFiring
-[AFMyriadInstrumentation updateBoost:value:]_block_invoke
-[AFMyriadInstrumentation updateIsTrump:withReason:]_block_invoke
CDASTATE_UNKNOWN
CDASTATE_NO_ACTIVITY
CDASTATE_ADVERT_TRIGGER
CDASTATE_LISTEN_LATE
CDASTATE_ADVERT_SUPPRESS_LATE
CDASTATE_WAIT_TASK
CDASTATE_ADVERT_CONTINUATION
CDASTATE_ADVERT_SUPPRESS
CDASTATE_WAIT_EMERGENCY_OR_TASK
CDASTATE_ADVERT_EMERGENCY
CDASTATE_ADVERT_HANDLED
CDASTATE_LISTEN_TASK
CDASTATE_WAIT_EMERGENCY_HANDLED
CDASTATE_LISTEN_EMERGENCY
CDASTATE_ADVERT_TRAINING
CDASTATE_ADVERT_OUTPUT_TRIGGER
CDASTATE_PREHEAT
CDASTATE_ADVERT_SLOWDOWN
CDASTATE_INIT_FILTERS
CDATRIGGER_UKNOWN
CDATRIGGER_DIRECT_TRIGGER
CDATRIGGER_VOICE_TRIGGER
CDATRIGGER_IN_EAR_TRIGGER
CDATRIGGER_CARPLAY_TRIGGER
CDATRIGGER_OUTGOING_TRIGGER
CDATRIGGER_IN_TASK_VOICE_TRIGGER
CDATRIGGER_EMERGENCY_TRIGGER
CDATRIGGER_ALERT_FIRING_VOICE_TRIGGER
CDATRUMPREASON_UNKNOWN
CDATRUMPREASON_RAISE_TO_SPEAK
CDATRUMPREASON_ALARM_FIRING
CDATRUMPREASON_THRESHOLD_REACHED
CDATRUMPREASON_PERSONALIZED_HEY_SIRI_SETUP
CDATRUMPREASON_OUTGOING_TRIGGER
CDATRUMPREASON_DIRECT_TRIGGER
CDATRUMPREASON_IN_TASK_TRIGGER
CDATRUMPREASON_FACE_DETECTED
configurationURL
maxTimeToSync
configurationURL = %@
maxTimeToSync = %@
AFExperimentServerConfigurationInfo::configurationIdentifier
AFExperimentServerConfigurationInfo::configurationURL
AFExperimentServerConfigurationInfo::maxTimeToSync
startedHostTime
finishedHostTime
startedDate
finishedDate
startedHostTime = %@
finishedHostTime = %@
startedDate = %@
finishedDate = %@
AFHomeAnnouncement::identifier
AFHomeAnnouncement::startedHostTime
AFHomeAnnouncement::finishedHostTime
AFHomeAnnouncement::startedDate
AFHomeAnnouncement::finishedDate
AFPeerContentTuple.m
info != nil
content != nil
%@ (%@: %@)
AFPeerContentTuple.info
AFPeerContentTuple.content
%@, deliveryDate: %@
_deliveryDate
com.apple.myriad_work
com.apple.myriad_timer_mgmt
com.apple.myriad_readiness
com.apple.myriad_adv_context
com.apple.myriad_attention
notificationCallback
outputTriggerSeenCallback
inEarTriggerSeenCallback
carplayTriggerSeenCallback
emergencyCallback
myriadDecisionRequestCallback
safelyGetAudioData
safelyClearAudioData
-[AFMyriadCoordinator initWithDelegate:]
com.apple.assistant.myriad
com.apple.siri.myriad.apayload
com.apple.siri.corespeech.selftrigger
com.apple.siri.myriad.falseemergency
com.apple.siri.myriad.in.ear
com.apple.siri.myriad.jarvis
hh:mm:ss.SSS
com.apple.siri.AFMyriadCoordinator
-[AFMyriadCoordinator _readDefaults]
iPhone
iPod
iPad
AppleTV
Watch
watch1,1
watch1,2
AudioAccessory
Bridge
-[AFMyriadCoordinator _initDeviceClassAndAdjustments]
Library/VoiceTrigger
AFMyriadCoordinatorAudioHashFileBaseDirectory
siriBC
AFMyriadCoordinatorAudioHashFilePath
-[AFMyriadCoordinator preheatWiProx]_block_invoke
-[AFMyriadCoordinator startAdvertisingForPHSSetupAfterDelay:maxInterval:]
-[AFMyriadCoordinator startAdvertisingFromVoiceTriggerWithContext:]_block_invoke
-[AFMyriadCoordinator _startAdvertisingFromVoiceTrigger]
-[AFMyriadCoordinator startAdvertisingFromVoiceTriggerAdjusted:withContext:]
-[AFMyriadCoordinator startAdvertisingFromVoiceTriggerWithGoodnessScoreContext:withContext:]_block_invoke
-[AFMyriadCoordinator startWatchAdvertisingFromVoiceTriggerWithContext:]_block_invoke
-[AFMyriadCoordinator startWatchAdvertisingFromDirectTriggerWithContext:]_block_invoke
-[AFMyriadCoordinator startAdvertisingFromDirectTriggerWithContext:]_block_invoke
-[AFMyriadCoordinator startAdvertisingFromOutgoingTriggerWithContext:]_block_invoke
-[AFMyriadCoordinator startAdvertisingFromInEarTrigger]_block_invoke
InEarTrigger
-[AFMyriadCoordinator startAdvertisingFromCarPlayTrigger]_block_invoke
CarPlayTrigger
-[AFMyriadCoordinator startAdvertisingEmergencyHandled]_block_invoke
-[AFMyriadCoordinator startAdvertisingEmergency]_block_invoke
-[AFMyriadCoordinator _startAdvertisingFromInTaskVoiceTrigger]
-[AFMyriadCoordinator startAdvertisingFromAlertFiringVoiceTriggerWithContext:]_block_invoke
AlertFiringVoiceTrigger
-[AFMyriadCoordinator startResponseAdvertising:]_block_invoke
-[AFMyriadCoordinator startAdvertisingSlowdown:]_block_invoke
end advert delay
-[AFMyriadCoordinator endAdvertisingAfterDelay:]_block_invoke_2
-[AFMyriadCoordinator _endAdvertising:]
v32@?0@"AFMyriadRecord"8Q16^B24
-[AFMyriadCoordinator _endAdvertisingAnalyticsContext:]
max_slowdown
coordination_allowed
device-group
election
counts
-[AFMyriadCoordinator _endAdvertisingWithDeviceProhibitions:]
listening late
wait until after suppress
-[AFMyriadCoordinator endTask]_block_invoke
-[AFMyriadCoordinator setInTask:]_block_invoke
-[AFMyriadCoordinator setupEnabled:]_block_invoke
-[AFMyriadCoordinator _deviceShouldContinue:]
-[AFMyriadCoordinator _winElection]
-[AFMyriadCoordinator _loseElection]
v16@?0@"<AFMyriadSessionMutating>"8
-[AFMyriadCoordinator _addElectionAdvertisementDataToMyriadSession:]
-[AFMyriadCoordinator _createMyriadSessionIfRequired]
-[AFMyriadCoordinator _clearMyriadSession]
v32@?0@"NSUUID"8@"NSData"16^B24
-[AFMyriadCoordinator _clearMyriadSession]_block_invoke
-[AFMyriadCoordinator _initializeTimer]
-[AFMyriadCoordinator _createDispatchTimerWithTime:toExecute:]_block_invoke
listen
-[AFMyriadCoordinator _startTimer:for:thenExecute:]
-[AFMyriadCoordinator _startTimer:for:thenExecute:]_block_invoke
-[AFMyriadCoordinator _cancelTimer]
-[AFMyriadCoordinator _setOverallTimeout]
-[AFMyriadCoordinator _setOverallTimeout]_block_invoke
-[AFMyriadCoordinator _cancelOverallTimeout]
-[AFMyriadCoordinator _enterState:]
listen late
listen wait/emergency
listen emergency handled
preheat timer
filter initialization timer
MYR_NOACTIVITY
MYR_ADVERT_TRIGGER
MYR_LISTEN_LATE
MYR_ADVERT_SUPPRESS_LATE
MYR_WAIT_TASK
MYR_ADVERT_CONT
MYR_ADVERT_SUPPRESS
MYR_WAIT_EMERGENCY_OR_TASK
MYR_ADVERT_EMERGENCY
MYR_ADVERT_HANDLED
MYR_LISTEN_TASK
MYR_WAIT_EMERGENCY_HANDLED
MYR_LISTEN_EMERGENCY
MYR_ADVERT_OUTPUT_TRIGGER
MYR_ADVERT_SLOWDOWN
MYR_PREHEAT
MYR_INIT_FILTERS
<AFMYR_State_ERROR>
-[AFMyriadCoordinator _startListening:]
-[AFMyriadCoordinator _startListeningAfterWiProxIsReady:inState:completion:]
-[AFMyriadCoordinator _startListeningAfterWiProxIsReady:inState:completion:]_block_invoke
-[AFMyriadCoordinator _stopAdvertising:]
-[AFMyriadCoordinator _stopListening:]
-[AFMyriadCoordinator _handleStateMachineErrorIfNeeded]
state_machine_error
-[AFMyriadCoordinator _testAndFilterAdvertisementsFromContextCollector:voiceTriggerEndTime:advertisementDispatchTime:advertisement:]
-[AFMyriadCoordinator _testAndFilterAdvertisementsFromContextCollector:voiceTriggerEndTime:advertisementDispatchTime:advertisement:]_block_invoke
v32@?0@"NSUUID"8@"AFMyriadAdvertisementContextRecord"16^B24
-[AFMyriadCoordinator _suppressDeviceIfNeededWithVoiceTriggerEndTime:adverisementDispatchTime:]_block_invoke
v32@?0@8@"AFMyriadRecord"16^B24
voiceTriggerEndTime
advertisementDispatchTime
-[AFMyriadCoordinator _pushMyriadAdvertisementContextToContextCollectorWithAdvertisementInterval:advertisementDelay:]
contextAdvertisementId
advertismentContext
-[AFMyriadCoordinator _pushMyriadAdvertisementContextToContextCollectorWithAdvertisementInterval:advertisementDelay:]_block_invoke_2
-[AFMyriadCoordinator _pushMyriadAdvertisementContextToContextCollectorWithAdvertisementInterval:advertisementDelay:]_block_invoke
currentAdvertisementId
-[AFMyriadCoordinator _setupActionWindows]
-[AFMyriadCoordinator _adjustActionWindowsFromSlowdown:]
-[AFMyriadCoordinator _duringNextWindowExecute:]
-[AFMyriadCoordinator setupAdvIntervalsInDelay:interval:withSlowdown:]
-[AFMyriadCoordinator _advertiseTrigger]
-[AFMyriadCoordinator _advertiseTrigger]_block_invoke
-[AFMyriadCoordinator _advertiseSlowdown]
delay
-[AFMyriadCoordinator _advertiseSlowdown]_block_invoke
-[AFMyriadCoordinator _advertiseWith:afterDelay:maxInterval:thenExecute:]_block_invoke
advertise
v24@?0@"NSData"8@?<v@?>16
-[AFMyriadCoordinator _advertiseWith:afterDelay:maxInterval:thenExecute:]
advert delay
-[AFMyriadCoordinator slowdownRecord:]
-[AFMyriadCoordinator _shouldContinueFor:]
-[AFMyriadCoordinator _shouldContinueFor:]_block_invoke
-[AFMyriadCoordinator _shouldHandleEmergency]
-[AFMyriadCoordinator _shouldHandleEmergency]_block_invoke
-[AFMyriadCoordinator _inTaskTriggerWasTooSoon]
-[AFMyriadCoordinator _updateRepliesWith:id:data:]
-[AFMyriadCoordinator notifyCurrentDecisionResult]_block_invoke
-[AFMyriadCoordinator _testAndUpdateWedgeFilter:]
-[AFMyriadCoordinator _initializeWiProxReadinessTimer]
-[AFMyriadCoordinator _suspendWiProxReadinessTimer]
-[AFMyriadCoordinator _clearWiProxReadinessTimer]
-[AFMyriadCoordinator _createWaitWiProxTimer:waitBlock:]_block_invoke
-[AFMyriadCoordinator _waitWiProx:andExecute:]_block_invoke
-[AFMyriadCoordinator _waitWiProx:andExecute:]
-[AFMyriadCoordinator _enterBLEDiagnosticMode]
AFMyriadCoordinator.m
_myriadWorkQueue
-[AFMyriadCoordinator _enterBLEDiagnosticMode]_block_invoke
-[AFMyriadCoordinator _leaveBLEDiagnosticMode]
-[AFMyriadCoordinator _signalEmergencyCallHandled]
-[AFMyriadCoordinator notifyObserver:didReceiveNotificationWithToken:]
AWAttentionAwarenessConfiguration
initAWAttentionAwarenessConfiguration_block_invoke
classAWAttentionAwarenessConfiguration
/System/Library/PrivateFrameworks/AttentionAwareness.framework/AttentionAwareness
AttentionAwarenessLibrary
AWAttentionAwarenessClient
initAWAttentionAwarenessClient_block_invoke
classAWAttentionAwarenessClient
SFDiagnostics
initSFDiagnostics_block_invoke
classSFDiagnostics
/System/Library/PrivateFrameworks/Sharing.framework/Sharing
SharingLibrary
appBundleIdentifier
AFUIApplicationSiriTaskDeliverer
-[AFUIApplicationSiriTaskDeliverer _startAppStateMonitoringForRequest:]
<%@: %p; %@>
-[AFUIApplicationSiriTaskDeliverer _processAssertionWasInvalidatedForRequest:]
-[AFUIApplicationSiriTaskDeliverer _processAssertionWasInvalidatedForRequest:]_block_invoke
-[AFUIApplicationSiriTaskDeliverer _processAssertionWasAcquired:]
-[AFUIApplicationSiriTaskDeliverer _processAssertionWasAcquired:]_block_invoke
-[AFUIApplicationSiriTaskDeliverer deliverSiriTask:completionHandler:]
v24@?0@"BSProcessHandle"8@"NSError"16
-[AFUIApplicationSiriTaskDeliverer siriTaskDidFinish]
SiriTaskDelivererBackground
-[AFUIApplicationSiriTaskDeliverer _handleSuccessfulAppLaunchToBackground:forRequest:completion:]
bundleIdentifier
BKSApplicationStateMonitor
/System/Library/PrivateFrameworks/AssertionServices.framework/AssertionServices
BKSApplicationStateAll
initBKSApplicationStateAll_block_invoke
AFUIApplicationSiriTaskDeliverer.m
appIsFrontmost
BKSApplicationStateAppIsFrontmostKey
initBKSApplicationStateAppIsFrontmostKey_block_invoke
_LogAppStateInfo
SBApplicationStateDisplayIDKey
initSBApplicationStateDisplayIDKey_block_invoke
/System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices
SBApplicationStateKey
initSBApplicationStateKey_block_invoke
UISiriTaskAction
/System/Library/Frameworks/UIKit.framework/UIKit
FBSOpenApplicationOptionKeyActions
initFBSOpenApplicationOptionKeyActions_block_invoke
/System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices
FBSOpenApplicationOptionKeyActivateSuspended
initFBSOpenApplicationOptionKeyActivateSuspended_block_invoke
FBSOpenApplicationOptionKeyUnlockDevice
initFBSOpenApplicationOptionKeyUnlockDevice_block_invoke
FBSOpenApplicationOptionKeyPromptUnlockDevice
initFBSOpenApplicationOptionKeyPromptUnlockDevice_block_invoke
FBSOpenApplicationService
FBSOpenApplicationOptions
FBSOpenApplicationServiceErrorDomain
initFBSOpenApplicationServiceErrorDomain_block_invoke
BKSProcessAssertion
class
dialogPhase
dialogIdentifier
listenAfterSpeaking
v48@?0{?=@@@@B}8
headphones
hearingAids
builtInSpeaker
language
interactionIdentifier
task
loggingContext
applicationName
profile
overrides
modelOverrideURL
originalAudioFileURL
narrowband
detectUtterances
censorSpeech
farField
secureOfflineOnly
shouldStoreAudioOnDevice
maximumRecognitionDuration
jitGrammar
language = %@
interactionIdentifier = %@
task = %@
loggingContext = %@
applicationName = %@
profile = (%ld bytes)
overrides = %@
modelOverrideURL = %@
originalAudioFileURL = %@
narrowband = %@
detectUtterances = %@
censorSpeech = %@
farField = %@
secureOfflineOnly = %@
shouldStoreAudioOnDevice = %@
maximumRecognitionDuration = %@
location = %@
jitGrammar = %@
AFSpeechParameters::language
AFSpeechParameters::interactionIdentifier
AFSpeechParameters::task
AFSpeechParameters::loggingContext
AFSpeechParameters::applicationName
AFSpeechParameters::profile
AFSpeechParameters::overrides
AFSpeechParameters::modelOverrideURL
AFSpeechParameters::originalAudioFileURL
AFSpeechParameters::narrowband
AFSpeechParameters::detectUtterances
AFSpeechParameters::censorSpeech
AFSpeechParameters::farField
AFSpeechParameters::secureOfflineOnly
AFSpeechParameters::shouldStoreAudioOnDevice
AFSpeechParameters::maximumRecognitionDuration
AFSpeechParameters::inputOrigin
AFSpeechParameters::location
AFSpeechParameters::jitGrammar
-[AFDeviceRequestHandlingRecord(ContextSnapshot) initWithSerializedBackingStore:]
-[AFCallStateSnapshot(ContextSnapshot) initWithSerializedBackingStore:]
-[AFSystemStateSnapshot(ContextSnapshot) initWithSerializedBackingStore:]
com.apple.cmas
Dismiss
Snooze
UN://%@
BB://%@
_bulletinID
_recordID
_sectionID
_sectionSubtype
_allDay
_endDate
_recencyDate
_timeZone
_title
_message
_displayName
_subtitle
_publisherBulletinID
_intentIDs
_availableOnLockScreen
_supportsSpokenNotification
_internalID
_previewRestricted
_threadID
_feed
/System/Library/PrivateFrameworks/CoreServices.framework/CoreServices
AFDialogPhaseType
Unexpected value for _type: %ld
acknowledgementDialogPhase
reflectionDialogPhase
statusDialogPhase
clarificationDialogPhase
summaryDialogPhase
confirmationDialogPhase
completionDialogPhase
errorDialogPhase
confirmedDialogPhase
cancelledDialogPhase
userRequestDialogPhase
unknown dialogPhase
<%@ %@>
imagePath
symbolName
imagePath = %@
symbolName = %@
AFCallSiteInfo::imagePath
AFCallSiteInfo::symbolName
turnIdentifier
%@: %p; 
machServiceName=
Mach Service Task Delivery Completion Handler
-[AFMachServiceSiriTaskDeliverer deliverSiriTask:completionHandler:]
-[AFMachServiceSiriTaskDeliverer deliverSiriTask:completionHandler:]_block_invoke
v32@?0@"AFAnalyticsEvent"8Q16^B24
media
"%@"
ids %@
rp %@
mr %@
hk %@
rm "%@"
md %@/%@
Peer %@ (%@)
Peer (%@)
v16@?0@"<AFPeerInfoMutating>"8
/Assistant/DictationSampled
com.apple.assistantd/DictationSampled
DictationSampled.plist
+[AFDictationSamplingUtilities samplingDateAsString]
ObjectUpdatedResponseObjectIdentifier
com.apple.siri.enablement.voiceselection.experiment.completed
com.apple.siri.enablement.flow.completed
didEnable
flow
timeToResolve
errorCode
groupIdentifier
v16@?0@"<AFEnablementConfigurationProviderParametersMutating>"8
-[AFEnablementFlowConfigurationProvider _resolveIfNewUserWithParameters:forRecognitionLanguages:completion:]
-[AFEnablementFlowConfigurationProvider _resolveIfNewUserWithParameters:forRecognitionLanguages:completion:]_block_invoke
-[AFEnablementFlowConfigurationProvider _resolveVoiceSelection:forRecognitionLanguages:completion:]
B24@?0@"AFVoiceInfo"8@"NSDictionary"16
+[AFEnablementFlowConfigurationProvider _createConfigurationForParameters:]
com.apple.siri.vocabularyupdates
com.apple.siri.appIntentSupportPolicyAndVocab
com.apple.siri.appIntentSupportPolicyAndVocab.nano
-[SASyncAnchor(SyncPrivate) _af_isValid]
machAbsoluteTime
appBundleId
appState
resultCode
Daemon.Launch
Daemon.Loaded
Daemon.Exit
Daemon.Failure
Daemon.StartRequest.Speech
Daemon.StartRequest.Dictation
Daemon.StartRequest.Other
Daemon.StartRequest.Keyboard
Daemon.Audio
Daemon.Audio.Init.Begin
Daemon.Audio.Init.End
Daemon.Audio.Configure.Begin
Daemon.Audio.Configure.End
Daemon.Audio.Prewarm.Begin
Daemon.Audio.Prewarm.End
Daemon.Audio.Prepare.Begin
Daemon.Audio.Prepare.End
Daemon.Audio.FetchRoute.Begin
Daemon.Audio.FetchRoute.End
Daemon.Audio.StartRecording.Begin
Daemon.Audio.StartRecording.End
Daemon.Audio.Recording.Begin
Daemon.Audio.Recording.FirstBuffer
Daemon.Audio.Recording.End
Daemon.Audio.StopRecording.Begin
Daemon.Audio.StopRecording.End
Daemon.Audio.LateBuffer
Daemon.Audio.Analyzer.Startpoint.Detected
Daemon.Audio.Analyzer.Endpoint.Hard.Detected
Daemon.Audio.Failure
Daemon.Audio.BTInfoFetch.Begin
Daemon.Audio.BTInfoFetch.End
Daemon.Audio.FanInfo
Daemon.Audio.FirstChanceTriggerInfo
Daemon.Audio.Recording.Interruption.Begin
Daemon.Audio.Recording.Interruption.End
Daemon.Audio.Endpointer.State
Daemon.Audio.Recording.FirstBuffer.Start
Daemon.Audio.Recording.FirstBuffer.Receipt
Daemon.Audio.Recording.LastBuffer.Start
Daemon.Audio.Recording.LastBuffer.Receipt
Daemon.Audio.Session.SetActive.Begin
Daemon.Audio.Session.SetActive.End
Daemon.Audio.Session.SetInactive.Begin
Daemon.Audio.Session.SetInactive.End
Daemon.Audio.Recording.MissedBuffer
Daemon.Audio.File.Started
Daemon.Audio.TwoShot.Transition.Begin
Daemon.Audio.TwoShot.Transition.End
Daemon.Audio.Recording.Metrics
Daemon.Speech
Daemon.Speech.Capture.Start.Begin
Daemon.Speech.Capture.Start.End
Daemon.Speech.Capture.Update
Daemon.Speech.Capture.Cancel
Daemon.Speech.Capture.Stop
Daemon.Speech.Failure
Daemon.Speech.Capture.Continued
Daemon.Speech.ResultCandidate.Evaluation.Begin
Daemon.Speech.ResultCandidate.Evaluation.End
Daemon.Speech.ResultCandidate.Accepted
Daemon.Speech.ResultCandidate.Stashed
Daemon.Service
Daemon.Service.Handle.Begin
Daemon.Service.Handle.End
Daemon.Service.Bundle.Handle.Begin
Daemon.Service.Bundle.Handle.End
Daemon.GenericIntent
Daemon.GenericIntent.Handle.Begin
Daemon.GenericIntent.Handle.Timeout
Daemon.GenericIntent.Deliver.Begin
Daemon.GenericIntent.Recipient.StateChange
Daemon.GenericIntent.Recipient.Crash
Daemon.GenericIntent.Recipient.Finished
Daemon.GenericIntent.Handle.End
Daemon.Intent
Daemon.Intent.Extension.Prepare
Daemon.Intent.Extension.Ready
Daemon.Intent.Extension.UnexpectedExit
Daemon.Intent.Extension.TimedOut.Launching
Daemon.Intent.Extension.TimedOut.Request
Daemon.Intent.Resolve.Begin
Daemon.Intent.Resolve.Request.Sent
Daemon.Intent.Resolve.Response.Received
Daemon.Intent.Resolve.End
Daemon.Intent.Confirm.Begin
Daemon.Intent.Confirm.Request.Sent
Daemon.Intent.Confirm.Request.Received
Daemon.Intent.Confirm.ResponseUIVisible
Daemon.Intent.Confirm.End
Daemon.Intent.Handle.Begin
Daemon.Intent.Handle.Request.Sent
Daemon.Intent.Handle.Request.Received
Daemon.Intent.Handle.ResponseUIVisible
Daemon.Intent.Handle.End
Daemon.Intent.Launch.WithIntent.Begin
Daemon.Intent.Launch.WithIntent.End
Daemon.Intent.Launch.WithUserActivity.Begin
Daemon.Intent.Launch.WithUserActivity.End
Daemon.Intent.ResolveApp.Begin
Daemon.Intent.ResolveApp.End
Daemon.Intent.Extension.Request.Begin
Daemon.Intent.Extension.Request.End
Daemon.Intent.Extension.Prewarm.Begin
Daemon.Intent.Extension.Prewarm.End
Daemon.Task
Daemon.Task.Schedule
Daemon.Task.Start
Daemon.Task.Deliver
Daemon.Task.Finish
Daemon.Signal
Daemon.DomainSignal.LaunchApp
Daemon.Session
Daemon.Session.Connection.Opened
Daemon.Session.Connection.Snapshot.Local
Daemon.Session.Connection.Snapshot.Remote
Daemon.Session.Connection.Timeout
Daemon.Session.Connection.Dropped
Daemon.Session.Connection.Failed
Daemon.Session.Validation.Failed
Daemon.Session.Authentication.Failed
Daemon.Session.Assistant.Failed
Daemon.Session.Assistant.NotReady
Daemon.Session.RemappedRequestId
Daemon.Session.Connection.Start
Daemon.Session.Connection.Reset
Daemon.Session.Connection.ClientConnectionId.Created
Daemon.Session.Connection.FirstByteReceived
Daemon.Session.Local.Assistant.NotReady
Daemon.Session.Local.Connection.Reset
Daemon.Session.ProxiedRequestId
Daemon.Session.Won
Daemon.Session.LoadAssistant
Daemon.Session.Failed
Daemon.Session.Results.Queued
Daemon.Network
Daemon.Network.Available
Daemon.Network.ServerAddress.Resolved
Daemon.Network.Failure
Daemon.Network.Peer.Error
Daemon.Network.AcePing.Sent
Daemon.Network.AcePong.Received
Daemon.Network.Provider.Open.Begin
Daemon.Network.Provider.Open.End
Daemon.Network.Provider.Secondary.Open.Begin
Daemon.Network.Provider.Secondary.Open.End
Daemon.Network.Link.Recommendation.Begin
Daemon.Network.Link.Recommendation.End
Daemon.Network.Link.Recommendation.Timedout
Daemon.IncomingCommand
Daemon.IncomingCommand.SpeechPartialResult
Daemon.IncomingCommand.SpeechRecognized
Daemon.OutgoingCommand
Daemon.OutgoingCommand.Failure
Daemon.Local.OutgoingCommand.Failure
UI.Plugin.Loaded
UI.Activation.Prepare
UI.Activation.Cancel
UI.Activation.Handle.Begin
UI.Activation.Handle.End
UI.Present.Begin
UI.Present.End
UI.Dismiss.Begin
UI.Dismiss.End
UI.Button.Down
UI.Button.Up
UI.Button.Tap
UI.Blur
UI.Flames.Present
UI.Flames.Dismiss
UI.Mode.Idle
UI.Mode.Listening
UI.Mode.Thinking
UI.Mode.Success
UI.UUFR.Present
UI.Command.Handle.Begin
UI.Command.Handle.End
UI.Failure
UI.TapToEditButton.Tap
UI.URLSessionLoad.Failure
UI.Disambiguation.Selected
UI.TTS.ShouldSpeak
UI.TTS.ShouldNotSpeak
UI.TranscriptItem.Inserted
UI.TranscriptItem.DidAppear
UI.TranscriptItem.DidDisappear
UI.Transcript.Scrolled
UI.Unlock.Presented
UI.Unlock.Dismissed
UI.Device.Locked
UI.Device.Unlocked
UI.Punchout.Begin
UI.Punchout.End
UI.TranscriptItems.Reload.Begin
UI.TranscriptItems.Reload.End
UI.Mode.Presenting
UI.Mode.Idle.Rendered
UI.Mode.Listening.Rendered
UI.Mode.Thinking.Rendered
UI.Mode.Presenting.Rendered
UI.Button.TextRequestInput.Start
UI.Button.TextRequestInput.Done
UI.Button.TextRequestInput.Clear
UI.ViewService
UI.ViewService.Launch
UI.ViewService.Loaded
UI.ViewService.Exit
UI.ViewService.SpeechPartialResult.Received
UI.ViewService.SpeechPartialResult.Presented
UI.ViewService.SpeechRecognized.Received
UI.ViewService.SpeechRecognized.Presented
UI.ViewService.Failure
UI.ViewService.Pin
UI.ViewService.Pin.Begin
UI.ViewService.Pin.End
UI.ViewService.Drag
UI.ViewService.DidAppear
UI.ViewService.DidDisappear
Coverage.AggregateDictionary
Coverage.AggregateDictionary.Scalar
Coverage.AggregateDictionary.Distribution
Coverage.RequestStatistics
Coverage.RequestStatistics.Cancellation
Coverage.RequestStatistics.Failure
Client.StartRequest
Client.StartSpeechRequest
Client.StartSpeechPronunciationRequest
Client.StartAcousticIDRequest
Client.StartContinuityRequest
Client.StartCorrectionRequest
Client.StartDirectActionRequest
Client.StartTextRequest
Client.UpdateSpeech
Client.StopSpeech
Client.CancelSpeech
Client.RequestCanceled
Client.RequestFailed
Client.RequestCompleted
Client.Preheat
Client.AcousticId.Begin
Client.AcousticId.End
Client.Tether.Wait.Begin
Client.Tether.Wait.End
Client.Tether.Attach.Begin
Client.Tether.Attach.End
Client.Tether.Attached
Client.Tether.Detached
Client.Feedback.Presented
Client.AutoDisambiguation.Requested
Client.AutoDisambiguation.Saved
Client.Coord
Client.Coord.AdvertisingWillEnd
Client.Coord.AudioReady
Client.Coord.AdvertisingStartRequest
Client.Coord.AdvertisingDidStart
Client.Coord.AdvertisingEndRequest
Client.Coord.AdvertisingDidEnd
Client.Coord.DecisionMade
Client.Coord.SlowdownGenerated
Client.Coord.SlowdownReceived
Client.Coord.ActivityStart
Client.Coord.ActivityEnd
UI.Watch
UI.Activation.GizmoVTWhileAlreadyRecording
UI.DelayedResponse.Education
UI.DelayedResponse.WristLowered
UI.DelayedResponse.BacklightOn
UI.TTS.Canceled
Client.Dictation
Client.Dictation.StartRequest
Client.Dictation.UpdateSpeech
Client.Dictation.StopSpeech
Client.Dictation.CancelSpeech
Client.Dictation.RequestCanceled
Client.Dictation.RequestFailed
Client.Dictation.RequestCompleted
Client.Dictation.TimeoutRequest
Client.Dictation.SpeechRecording.Started
Client.Dictation.SpeechRecording.Canceled
Client.Dictation.SpeechRecording.Completed
Client.Dictation.SpeechRecording.Failed
Client.Dictation.SpeechRecognition.PhrasesRecognized
Client.Dictation.SpeechRecognition.TokensRecognized
Client.Dictation.SpeechRecognition.TranscriptionObjectsRecognized
Client.Dictation.SpeechRecognition.Completed
Client.Dictation.SpeechRecognition.Failed
Client.Dictation.AppDidEnterBackground
Client.Dictation.SmartLanguageSelection.LanguageOverridden
VoiceTrigger.Start
VoiceTrigger.Fire
VoiceTrigger.End
VoiceTrigger.EarlyDetect
UIPlugin.Movies
UIPlugin.Movies.BeginLoadingMediaButtons
UIPlugin.Movies.EndLoadingMediaButtons
QA.Automation
QA.Automation.Begin
QA.Automation.End
QA.Automation.Mark
CDM.NLService.HandleCommand.Begin
CDM.NLService.HandleCommand.End
CDM.FlowService.HandleCommand.Begin
CDM.FlowService.HandleCommand.End
CDM.Config.AssetManager.OfflineQueryStart
CDM.Config.AssetManager.OfflineQuerySuccess
CDM.Config.AssetManager.OfflineQueryFailed
CDM.Config.AssetManager.OnlineQueryStart
CDM.Config.AssetManager.OnlineQuerySuccess
CDM.Config.AssetManager.OnlineQueryFailed
CDM.Config.AssetManager.AssetDownloadStart
CDM.Config.AssetManager.AssetDownloadCompleted
CDM.Config.AssetManager.AssetDownloadFailed
CDM.Config.AssetManager.AssetDownloadCancelled
CDM.Config.AssetManager.AssetPurged
CDM.StartSpeech.Received
CDM.SetAssistantData.Received
CDM.LoadAssistant.Received
VOXService
VOXService.SpeechSynthesis.Enqueued
VOXService.SpeechSynthesis.Canceled
VOXService.SpeechSynthesis.Failed
VOXService.SpeechSynthesis.Finished
VOXService.SpeechSynthesis.Interrupted
VOXService.SpeechSynthesis.Started
VOXService.TwoShotSound.Begin
VOXService.TwoShotSound.End
VOXService.SessionInactiveSound.Begin
VOXService.SessionInactiveSound.End
VOXService.TapToSiriSound.Begin
VOXService.TapToSiriSound.End
NowPlaying
NowPlaying.isPlaying.Changed
Music
Music.Playback.Ready
Music.Playback.SecureKey
Music.Playback.AssetLoad
Music.Playback.Summary
Xcode
Xcode.Test.Begin
Xcode.Test.End
DeviceConfiguration
DeviceConfiguration.Snapshot
Settings
Settings.SetLanguage
Settings.SetOutputVoice
Settings.SetVoiceFeedback
Settings.ChangedTCCInfo
Settings.ChangedTypeToSiri
Setup
Setup.PHSBootstrapped
Setup.PHSTrainingStarted
Experiment
Experiment.Exposure.SiriVOXSounds
Experiment.Exposure.SiriVOXTapToSiriBehavior
ClientFlow.Plugin
ClientFlow.Plugin.Started
ClientFlow.Plugin.ExecutionStarted
ClientFlow.Plugin.ExecutionFinished
ClientFlow.Plugin.ExecutionFailed
ClientFlow.CFClient
ClientFlow.CFClient.ScripterLoadStarted
ClientFlow.CFClient.ScripterLoadFinished
ClientFlow.CFClient.ScripterWarmedUp
ClientFlow.CFClient.ScripterWarmedUpWithScriptHint
ClientFlow.CFClient.Execution.Started
ClientFlow.CFClient.Execution.Finished
ClientFlow.CFClient.Execution.Failed
ClientFlow.JS
ClientFlow.JS.SiriMini
ClientFlow.JS.ServerFlow
ClientFlow.JS.Provider
ClientFlow.JS.BackgroundAction.Maintenance
ClientFlow.JS.BackgroundAction.ActivityCollection
ClientFlow.JS.BackgroundAction.DataMigration
ClientFlow.ClientScripter
ClientFlow.ClientScripter.Started
ClientFlow.ClientScripter.JSContextSetup.Started
ClientFlow.ClientScripter.JSContextSetup.Finished
ClientFlow.ClientScripter.JSEvaluation.StartedForScript
ClientFlow.ClientScripter.JSEvaluation.FinishedForScript
ClientFlow.ClientScripter.JSExecution.Started
ClientFlow.ClientScripter.JSExecution.Finished
ClientFlow.ClientScripter.JSExecution.Successful
ClientFlow.ClientScripter.JSExecution.Failed
ClientFlow.ClientScripter.Script.SentFromServer
ClientFlow.ClientScripter.Script.RetrievedFromServer
ClientFlow.ClientScripter.Script.LoadedFromMemoryCache
ClientFlow.ClientScripter.Script.LoadedFromFilesystem
ClientFlow.ClientScripter.Script.UsedCachedJSContext
ClientFlow.ClientScripter.Script.UsedDeferredCachedJSContext
ClientFlow.ClientScripter.Script.RetrievalFailed
ClientFlow.ClientScripter.Script.CachingFailed
ClientFlow.ClientScripter.SentCommand
ClientFlow.ClientScripter.SentCommandAsync
ClientFlow.ClientScripter.ReceivedResponse
ClientFlow.ClientScripter.JSContextCreatedInWarmup
ClientFlow.ClientScripter.JSContextEvaluatedScriptInWarmupForScript
ClientFlow.ClientScripter.CachedJSContextCount
ClientFlow.ClientScripter.ExecutionFailed
UI.Card.PresentBegin
UI.Card.PresentEnd
UI.Card.SectionPresentBegin
UI.Card.SectionPresentEnd
UI.Card.EngagedWith
UI.Card.SectionEngagedWith
UI.Card.AsyncCardRequested
UI.Card.AsyncCardReceived
AssistantService
AssistantService.Launch
AssistantService.Exit
AssistantService.Message.Send
AssistantService.Message.Delivered
AssistantService.Message.Begin
AssistantService.Message.End
AssistantService.CommandPerform.Begin
AssistantService.CommandPerform.End
AssistantService.BundleLoading.Begin
AssistantService.BundleLoading.End
CloudKit
CloudKit.Siri.ChangeArrived
CloudKit.Knowledge.ChangeArrived
IDS.DeviceConnection.Snapshot.Local
Analytics.Store.Database.PostCorruptionDetected
Analytics.Store.Database.OpenFailed
Analytics.Store.Database.IntegrityCheckFailed
Analytics.Store.Database.UnrecoverableErrorDetected
Analytics.Store.Database.PreparationFailed
LocalRecognition
LocalRecognition.Started
LocalRecognition.PartialResult
LocalRecognition.EagerCandidate
LocalRecognition.Package
LocalRecognition.Finished
AFKeyValueObserving.m
object != nil
[keyPath isKindOfClass:[NSString class]]
handler != nil
observer != nil
AFKeyValueObserver %p is expected to be invalid.
v16@?0@"AFKeyValueObserver"8
id<AFKeyValueObserving> AFKeyValueObservingCreate(__strong id, NSString *__strong, __strong AFKeyValueObservingHandler, AFKeyValueObservingDeliveryOptions *__strong)
_acousticFeatureValuePerFrame
_frameDuration
_speechRecognitionFeatures
_acousticFeatures
_snr
devices
product_type
context_type
recency
playstate
media_type
announce_state
serverCommandId
useAutomaticEndpointing
useStreamingDictation
isInitialBringUp
acousticIdEnabled
usePrelisteningMode
useBorealisBuffer
reloadSmartSiriVolume
hasNotifyState
hasAudioFileURL
bargeInOverHomeAnnouncementPlayback
bargeInOverSiriRequest
bargeInOverSiriVoiceOutput
bargeInOverFiringAlarm
bargeInOverFiringTimer
bargeInOverMediaPlayback
isMediaPlaying
mediaPlaybackVolume
isRecordedAudio
hasDirectAction
directActionEvent
directActionAppId
invocationIdentifier
hasDirectInvocation
AFAnalyticsContextCreateWithRequestInfo
hasHandoffRequestData
hasHandoffURLString
hasCorrectedSpeech
applicationVersion
languageCodeOverride
offlineLanguageCode
taskHint
languageDetectionContext
interactionId
turnId
AFAnalyticsTurnContextCreateWithRequestInfo
AFAnalyticsTurnContextCreateWithSpeechRequestOptions
@16@?0@"NSString"8
PersonalDevice
AFAnalyticsContextCreateForCrossDeviceCommandHandled_block_invoke
targetDevices
result
v32@?0@"NSString"8@"AFDeviceContext"16^B24
refId
-[SABaseAceObject(AnalyticsContextVending) af_addEntriesToAnalyticsContext:]
viewId
domain
utteranceView
dialogIdentifiers
views
dialogs
isWHA
bytes
v32@?0@"NSNumber"8@16^B24
code
underlyingError
smsInitiate
smsRead
smsCompose
smsReply
phoneInitiate
phoneCall
phoneVoicemail
acousticId
musicSmartPlayInitiate
musicSearch
mapsSearch
mapsSearchInNav
guideUpdateAndShow
appLaunch
weatherInitiate
calendarInitiate
newsInitiate
spokenNotificationInitiate
homeAnnouncementsRead
runVoiceShortcut
mapsShareEta
com.apple.siri.create
com.apple.siri.load
com.apple.siri.invoked
hardware_button
voice_trigger
com.apple.siri.settings
com.apple.message.siri.enabled
com.apple.message.dictation.enabled
Other
com.apple.siri.
-[AFAggregator recordSessionRetrySuccess]
com.apple.siri.RetrySuccess
com.apple.siri.WWAN.FallbackSuccess
+[AFAggregator logRequestCompletedWithDuration:]
com.apple.siri.RequestDurationLessThan1Second
com.apple.siri.RequestDuration1Second
com.apple.siri.RequestDuration2Seconds
com.apple.siri.RequestDuration3Seconds
com.apple.siri.RequestDuration4Seconds
com.apple.siri.RequestDuration5Seconds
com.apple.siri.RequestDuration6Seconds
com.apple.siri.RequestDuration7Seconds
com.apple.siri.RequestDuration8Seconds
com.apple.siri.RequestDuration9Seconds
com.apple.siri.RequestDurationOver10Seconds
com.apple.siri.context.missed.app
com.apple.siri.context.missed.alert
com.apple.siri.RequestCancel.LessThan1
com.apple.siri.RequestCancel.2Seconds
com.apple.siri.RequestCancel.3Seconds
com.apple.siri.RequestCancel.4Seconds
com.apple.siri.RequestCancel.5Seconds
com.apple.siri.RequestCancel.6Seconds
com.apple.siri.RequestCancel.7Seconds
com.apple.siri.RequestCancel.8Seconds
com.apple.siri.RequestCancel.9Seconds
com.apple.siri.RequestCancel.10Seconds
com.apple.siri.RequestCancel.11Seconds
com.apple.siri.RequestCancel.12Seconds
com.apple.siri.RequestCancel.13Seconds
com.apple.siri.RequestCancel.14Seconds
com.apple.siri.RequestCancel.15Seconds
com.apple.siri.RequestCancel.20Seconds
com.apple.siri.RequestCancel.25Seconds
com.apple.siri.RequestCancel.30Seconds
com.apple.siri.RequestCancel.35Seconds
com.apple.siri.RequestCancel.40Seconds
com.apple.siri.RequestCancel.40SecondsOrMore
%@.%ld.
%@.%ld
+[AFAggregator logRequestLaunchedApp]
com.apple.siri.SiriSucceeded
com.apple.siri.SiriCancelled
+[AFAggregator logSiriSpeechRequestStarted]
com.apple.siri.SiriStarted.Speech
+[AFAggregator logSiriOtherRequestStarted]
com.apple.siri.SiriStarted.Other
+[AFAggregator logSiriRequestFailedWithError:]
com.apple.siri.SiriFailed.
+[AFAggregator logSiriRequestSucceeded]
+[AFAggregator logSiriRequestCancelled]
+[AFAggregator logDictationStarted]
com.apple.siri.DictationStarted
+[AFAggregator logDictationFailedWithError:]
com.apple.siri.DictationFailed.
+[AFAggregator logDictationSucceeded]
com.apple.siri.DictationSucceeded
+[AFAggregator logDictationCancelled]
com.apple.siri.DictationCancelled
+[AFAggregator logDictationFollowedByContinueOccurredForLanguage:]
com.apple.siri.DictationFollowedByContinue.
+[AFAggregator logDictationFollowedByKeyboardInputOccurredForLanguage:]
com.apple.siri.DictationFollowedByKeyboardEntry.
+[AFAggregator logDictationFollowedByKeyboardDeleteOccurredForLanguage:]
com.apple.siri.DictationFollowedByKeyboardDelete.
+[AFAggregator logKeyboardInputFollowedByContinueOccurredForLanguage:]
com.apple.siri.KeyboardEntryFollowedByContinue.
+[AFAggregator logUILockCanceledVTActivation]
com.apple.siri.VTActivationCancel.UILocked
com.apple.siri.CreateAssistant
com.apple.siri.LoadAssistant
com.apple.siri.PingTimeout
+[AFAggregator logEnabledState:]
+[AFAggregator logLocalRecognitionAssetEvictedForLanguage:]
com.apple.siri.LocalRecognitionAssetEvicted.
com.apple.siri.LocalRecognitionStarted
com.apple.siri.LocalRecognitionSucceeded
com.apple.siri.LocalRecognitionLoaded.
com.apple.siri.LocalRecognitionWon.
com.apple.siri.LocalRecognitionLost.
com.apple.siri.DESRecording.
.%ld
com.apple.siri.DESEvaluation.
+[AFAggregator logCDMAssetEvictedForAssetType:language:]
com.apple.siri.CDMAssetEvicted.
com.apple.siri.BeepBringUp.HomeButton
com.apple.siri.PressToActivationDuration.HomeButton
com.apple.siri.Car.GateKeeper.Dismissed.Manual
+[AFAggregator(AssistantUI) logStarkGatekeeperDismissedManuallyForType:]
com.apple.siri.Car.GateKeeper.Appeared
+[AFAggregator(AssistantUI) logStarkGatekeeperAppearedForType:]
Messages
Maps
Cold.
Unknown.
WiFi.
WWAN.
MPTCP.
LedBelly.
POP.
IDS.
Florence.
Local.
ResponseLessThan1Second
Response1Second
Response2Seconds
Response3Seconds
Response4Seconds
Response5Seconds
Response6Seconds
Response7Seconds
Response8Seconds
Response9Seconds
ResponseOver10Seconds
Failed
Dropped
push
attached
-[AFSiriTether waitForAttachment:]
-[AFSiriTether _connection]
-[AFSiriTether _attach:]
attach
-[AFSiriTether _attach:]_block_invoke
-[AFSiriTether _attachmentStatusUpdate:]
-[AFSiriTether _listenForLaunchNotification]
itemURL
itemData
numberOfLoops
fadeInDuration
fadeOutDuration
itemURL = %@
itemData = (%ld bytes)
numberOfLoops = %@
volume = %@
fadeInDuration = %@
fadeOutDuration = %@
AFAudioPlaybackRequest::itemURL
AFAudioPlaybackRequest::itemData
AFAudioPlaybackRequest::numberOfLoops
AFAudioPlaybackRequest::volume
AFAudioPlaybackRequest::fadeInDuration
AFAudioPlaybackRequest::fadeOutDuration
AFAudioPlaybackRequest::userInfo
extension
extension = %@
AFBundleResource::name
AFBundleResource::extension
false
SiriResponseRequestIdentifier
Alarm
AssistantDirectActionEventKey
AssistantDirectActionEventMessagesConversationKey
AssistantDirectActionEventMessagesConversationGUIDKey
AssistantDirectActionEventMessagesFullNameKey
AssistantDirectActionEventMessagesAddressKey
AFDirectActionEventUnknown
AFDirectActionEventMessagesAmbiguous
AFDirectActionEventMessagesCompose
AFDirectActionEventMessagesComposeNewThread
AFDirectActionEventMessagesRead
AFDirectActionEventMessagesReply
AFDirectActionEventMapsSearch
AFDirectActionEventMusicSearch
AFDirectActionEventGuideUpdate
AFDirectActionEventCalendar
AFDirectActionEventWeather
AFDirectActionEventNews
AFDirectActionEventPhoneAmbiguous
AFDirectActionEventPhoneCall
AFDirectActionEventPhoneVoicemail
AFDirectActionEventAppLaunch
AFDirectActionEventHomeAnnouncementsRead
AFDirectActionEventRunVoiceShortcut
AFDirectActionEventMapsShareETA
Invalid direct action event
AFDirectActionSourceUnknown
AFDirectActionSourceStark
AFDirectActionSourceStarkAppProxy
AFDirectActionSourceStarkNotification
Invalid direct action source
SKIMessagesInvocation
/System/Library/PrivateFrameworks/SiriKitInvocation.framework/SiriKitInvocation
SKIPhoneInvocation
SKIVoiceShortcutsInvocation
SKIMapsInvocation
SKIMusicInvocation
x-sampmedentity
x-sampmeditem
x-sampcollection
x-sampgeniusmix
x-sampplaylist
x-sampcollection-album
x-sampcollection-artist
x-sampcollection-genre
x-sampcollection-title
x-sampcollection-audiobook
x-sampcollection-podcast
x-sampradiotrack
x-sampradio
device
multiverse
store
external
AFValidatedNowPlayingInfo_block_invoke
v32@?0@"NSString"8#16^B24
-[SAMPQueueState(SiriMediaRemoteHelpers) _af_setNowPlayingInfo:]
-[SAMPQueueState(SiriMediaRemoteHelpers) _af_validateAndFinalize]
AFPerformDeviceVolumeAction_block_invoke
v12@?0C8
v16@?0^{__CFArray=}8
AFMediaRemoteSendCommandWithOptions_block_invoke_3
v16@?0@"SACommandFailed"8
v24@?0@"<SAAceCommand>"8@"NSError"16
AFMediaRemoteSendCommandWithOptions_block_invoke
AFGetCurrentItemAdamIDFromNowPlayingInfo
kMRPlaybackStateUnknown
kMRPlaybackStatePlaying
kMRPlaybackStatePaused
kMRPlaybackStateStopped
kMRPlaybackStateInterrupted
kMRPlaybackStateSeeking
<Unknown MRPlaybackState:%u>
AFGetNowPlayingQueueState_block_invoke
v16@?0@"NSString"8
AFLanguageOptionsForNowPlayingInfo
_AFGetPlaybackState
_AFGetPlaybackState_block_invoke_2
_AFGetPlaybackState_block_invoke
v24@?0@"MRNowPlayingPlayerResponse"8@"NSError"16
v12@?0I8
_AFGetNowPlayingApplicationIdentifier_block_invoke_2
_AFGetNowPlayingApplicationIdentifier_block_invoke
_AFGetNowPlayingInfoDictionary_block_invoke_2
v40@?0@"NSArray"8{?=qq}16@"NSError"32
_DeviceIdFromNowPlayingInfo
_ListeningToContainerFromNowPlayingInfo
_AddSanitizedKeyAndValueToListeningToContainer
_AFLocalGetMediaPlaybackVolumeNoCheck_block_invoke
v12@?0f8
_AFLocalSetVolumeActionNoCheck_block_invoke
v16@?0^{__CFError=}8
_CheckForSpecialFailureCodesForCurrentlyDisabledMRCommand
_CheckForSpecialFailureCodesForCurrentlyDisabledMRCommand_block_invoke
_AFAddNowPlayingItemInfoToQueue_block_invoke
_LogNowPlayingInfo
_AFAddPlaybackStateToQueue
_AFAddPlaybackStateToQueue_block_invoke
CSAudioSessionController
initCSAudioSessionController_block_invoke
AFMediaRemoteUtilities.m
classCSAudioSessionController
AVAudioSession
initAVAudioSession_block_invoke
classAVAudioSession
/System/Library/Frameworks/AVFoundation.framework/Frameworks/AVFAudio.framework/AVFAudio
AVFAudioLibrary
_AFGetNowPlayingMediaContentItmes
Options
Criteria
-[AFClockTimerSnapshot(Utility) firingTimers]_block_invoke
v32@?0@"NSUUID"8@"AFClockTimer"16^B24
AFClockIsFiringTimerValid
Call
call
startAnnouncing
startMuted
ignoreReset
continuation
direct
emergency
inEar
other
slowDown
suppressLate
voice
currentOrUpNextDateInterval
isAudioSessionActive
localActiveAssertionContexts
localPendingAssertionContexts
remoteActiveAssertionContexts
remotePendingAssertionContexts
localDevice
remoteQualifiedInRangeDevices
remoteQualifiedOutOfRangeDevices
remoteDisqualifiedDevices
currentOrUpNextDateInterval = %@
isAudioSessionActive = %@
localActiveAssertionContexts = %@
localPendingAssertionContexts = %@
remoteActiveAssertionContexts = %@
remotePendingAssertionContexts = %@
localDevice = %@
remoteQualifiedInRangeDevices = %@
remoteQualifiedOutOfRangeDevices = %@
remoteDisqualifiedDevices = %@
AFAudioSessionCoordinationSnapshot::currentOrUpNextDateInterval
AFAudioSessionCoordinationSnapshot::isAudioSessionActive
AFAudioSessionCoordinationSnapshot::localActiveAssertionContexts
AFAudioSessionCoordinationSnapshot::localPendingAssertionContexts
AFAudioSessionCoordinationSnapshot::remoteActiveAssertionContexts
AFAudioSessionCoordinationSnapshot::remotePendingAssertionContexts
AFAudioSessionCoordinationSnapshot::localDevice
AFAudioSessionCoordinationSnapshot::remoteQualifiedInRangeDevices
AFAudioSessionCoordinationSnapshot::remoteQualifiedOutOfRangeDevices
AFAudioSessionCoordinationSnapshot::remoteDisqualifiedDevices
keepsHistory
historyBufferSize
keepsHistory = %@
historyBufferSize = %@
AFDeviceContextHistoryConfiguration::keepsHistory
AFDeviceContextHistoryConfiguration::historyBufferSize
associatedBundleIdentifier
bulletin
aceContext
contextDictionary
aceContexts
associatedBundleIdentifier = %@
bulletin = %@
aceContext = %@
contextDictionary = %@
aceContexts = %@
AFApplicationContext::associatedBundleIdentifier
AFApplicationContext::bulletin
AFApplicationContext::aceContext
AFApplicationContext::contextDictionary
AFApplicationContext::aceContexts
inCase
outOfEar
transparency
sharedUserId
sharedUserId = %@
confidenceScore = %@
AFSharedConfidenceScore::sharedUserId
AFSharedConfidenceScore::confidenceScore
-[AFAudioPowerUpdater _getPowerWithCompletion:]
handsFree
hearst
rhodes
stark
voiceOnly
watch
-[AFNotifyStatePublisher initWithName:queue:]
-[AFNotifyStatePublisher _setState:withToken:]
-[AFNotifyStatePublisher _getState:withToken:]
-[AFNotifyStatePublisher _register]
-[AFNotifyStatePublisher _unregister]
invocation_feedback_experiment
featureGroups
awake
asleep
<%@: %p; handle=%@ (%@)>
_handle
<%@: %p; fullName=%@ contactHandles=%@>
_contactHandles
_fullName
com.apple.bluetooth.WirelessSplitterOn
-[AFBluetoothWirelessSplitterSessionStateObserver initWithQueue:delegate:]_block_invoke
-[AFBluetoothWirelessSplitterSessionStateObserver notifyObserver:didReceiveNotificationWithToken:]_block_invoke
-[AFBluetoothWirelessSplitterSessionStateObserver notifyObserver:didChangeStateFrom:to:]_block_invoke
-[AFBluetoothWirelessSplitterSessionStateObserver _setState:]
-[AFDeviceContextConnection dealloc]
-[AFDeviceContextConnection initWithQueue:instanceContext:delegate:]
-[AFDeviceContextConnection donateSerializedContextMapByPrivacyClass:withMetadataMap:forType:pushToRemote:completion:]_block_invoke
-[AFDeviceContextConnection _xpcConnection]
-[AFDeviceContextConnection _handleXPCConnectionInvalidation]
-[AFDeviceContextConnection _handleXPCConnectionInterruption]
-[AFDeviceContextConnection _clearXPCConnection]
-[AFDeviceContextConnection _invalidate]
-[AFDeviceContextConnection _remoteServiceWithErrorHandler:]
-[AFDeviceContextConnection _fetchLocalDeviceContextWithCompletion:]
-[AFDeviceContextConnection _fetchLocalDeviceContextWithCompletion:]_block_invoke
v16@?0@"AFDeviceContext"8
-[AFDeviceContextConnection _beginUpdateLocalDeviceContext]
-[AFDeviceContextConnection _beginUpdateLocalDeviceContext]_block_invoke
-[AFDeviceContextConnection _endUpdateLocalDeviceContext]
-[AFDeviceContextConnection _endUpdateLocalDeviceContext]_block_invoke
-[AFDeviceContextConnection _updateLocalDeviceContext:]
-[AFAppContextAggregator aggregateContextWithRawOutputForAppWithBundleIdentifier:contextProvider:deliveryHandler:completionHandler:]
-[AFAppContextAggregator aggregateContextWithRawOutputForAppWithBundleIdentifier:contextProvider:deliveryHandler:completionHandler:]_block_invoke
v16@?0@"STSiriContext"8
v24@?0@"SASetApplicationContext"8@"STSiriContext"16
SiriDomains
SiriDisambiguationDomains
SiriProviderDomains
/Library/Assistant/UIPlugins
AFClientPluginManager.m
Plugin factory %@ must return a new allocated instance of id<AFSpeakableNamespaceProvider> from speakableNamespaceProviderForAceObject:
instance must conform to AFSpeakableNamespaceProvider, %@
v24@?0@8^B16
com.apple.assistant.analytics-observation.connection
-[AFAnalyticsObserverConnection initWithObservation:]_block_invoke_2
-[AFAnalyticsObserverConnection flushWithCompletion:]
-[AFAnalyticsObserverConnection flushWithCompletion:]_block_invoke_2
-[AFAnalyticsObserverConnection flushWithCompletion:]_block_invoke
-[AFAnalyticsObserverConnection _connectionInterrupted]
-[AFAnalyticsObserverConnection _connectionInvalidated]
sleepState
sleepState = %ld (%@)
AFSystemStateSnapshot::sleepState
applicationContexts
applicationContexts = %@
AFApplicationContextSnapshot::applicationContexts
hexColor
colorName
alpha
localizedOutputVoiceColor
localizedOutputVoice
hexColor = %@
colorName = %@
alpha = %@
localizedOutputVoiceColor = %@
localizedOutputVoice = %@
AFOutputVoiceColorDescriptor::hexColor
AFOutputVoiceColorDescriptor::colorName
AFOutputVoiceColorDescriptor::alpha
AFOutputVoiceColorDescriptor::localizedOutputVoiceColor
AFOutputVoiceColorDescriptor::localizedOutputVoice
com.apple.siri.client-state-manager
-[AFSiriClientStateManager initWithInstanceContext:]
-[AFSiriClientStateManager endTransaction]_block_invoke
-[AFSiriClientStateManager getCurrentStateWithCompletion:]_block_invoke_2
-[AFSiriClientStateManager _removeStateForClient:]
-[AFSiriClientStateManager _aggregateStatesAndPublishIfNeeded]
-[AFSiriClientStateManager _aggregateStatesAndPublishIfNeeded]_block_invoke
Q16@?0Q8
-[AFSiriClientStateManager _beginPresentationTransition]
-[AFSiriClientStateManager _beginPresentationTransition]_block_invoke
Timeout
-[AFSiriClientStateManager _endPresentationTransitionForReason:]
action
local_request
start_request
start_local_request
request_options
activation_context
activation_result
notification
source_app_id
announcement_platform
incoming_call
deactivation_reason
-[AFSiriHomeAutomationBackgroundRequest initWithRequestInfo:instanceContext:]
-[AFSiriHomeAutomationBackgroundRequest performRequestWithCompletion:]
com.apple.assistant.home-announcement-observer
v24@?0Q8@"AFHomeAnnouncement"16
client request without cache
-[AFHomeAnnouncementObserver _setUp]
-[AFHomeAnnouncementObserver _tearDown]
-[AFHomeAnnouncementObserver _fetchStateAndLastPlayedAnnouncementForReason:completion:]
-[AFHomeAnnouncementObserver _handleNotifyStateChangeFrom:to:]
-[AFHomeAnnouncementObserver _updateState:]
v16@?0@"<AFHomeAnnouncementListening>"8
-[AFHomeAnnouncementObserver _updateLastPlayedAnnouncement:]
-[AFHomeAnnouncementObserver _updateSnapshot:]
v32@?0@"NSString"8@"SASAcousticFeature"16^B24
utterance
beginTimestamp
endTimestamp
utterance = %@
beginTimestamp = %@
endTimestamp = %@
AFSpeechSynthesisRecord::utterance
AFSpeechSynthesisRecord::beginTimestamp
AFSpeechSynthesisRecord::endTimestamp
homeIdentifier
activityNotificationsEnabledForPersonalRequests
homeIdentifier = %@
activityNotificationsEnabledForPersonalRequests = %@
AFHomeInfo::homeIdentifier
AFHomeInfo::activityNotificationsEnabledForPersonalRequests
translation
sharing
HomeKit
homeDeviceSetup
pineBoard
watchSetup
carousel
dictation
recordRoute
isVoiceTrigger
isDucking
isTwoShot
speechEndHostTime
languageCode = %@
gender = %@
recordRoute = %@
isVoiceTrigger = %@
isDucking = %@
isTwoShot = %@
speechEndHostTime = %@
AFInterstitialConfiguration::style
AFInterstitialConfiguration::languageCode
AFInterstitialConfiguration::gender
AFInterstitialConfiguration::recordRoute
AFInterstitialConfiguration::isVoiceTrigger
AFInterstitialConfiguration::isDucking
AFInterstitialConfiguration::isTwoShot
AFInterstitialConfiguration::speechEndHostTime
optedIn
optedOut
dismissed
doubleTap
voiceActivity
voiceTrigger
raiseToSpeak
boronSignal
press
release
triggerless
inEarDetection
bluetoothVoiceRecognitionActivation
hardwareTrigger
voiceKeyword
continuousVoiceTrigger
remotePresentation
multiUserSharedUserIdKey
multiUserConformingSharedUserIdKey
com.apple.assistant.multiuser.connection
-[AFMultiUserConnection _clearConnection]
-[AFMultiUserConnection _multiUserServiceWithErrorHandler:]
-[AFMultiUserConnection getHomeUserIdForSharedUserId:completion:]
-[AFMultiUserConnection getFirstNameForSharedUserId:completion:]
-[AFMultiUserConnection getSharedUserIdForHomeUserId:completion:]
-[AFMultiUserConnection getSharedUserProfileLimitWithCompletion:]
-[AFMultiUserConnection getConformingSharedUserIdForHomeUserId:completion:]
-[AFMultiUserConnection getConformingSharedUserIds:]
-[AFMultiUserConnection getMultiUserSettingsForSharedUserID:completion:]
-[AFMultiUserConnection getMultiUserSettingsForSharedUserID:completion:]_block_invoke_2
-[AFMultiUserConnection getHomeUserIdOfRecognizedUserWithCompletion:]
-[AFMultiUserConnection getHomeUserIdOfRecognizedUserWithCompletion:]_block_invoke_2
-[AFMultiUserConnection getPreferredMediaUserHomeUserIDWithCompletion:]
-[AFMultiUserConnection getPreferredMediaUserHomeUserIDWithCompletion:]_block_invoke_2
-[AFMultiUserConnection homeUserIdToNames:]
-[AFMultiUserConnection homeUserIdToNames:]_block_invoke_2
ModelObjects
-[STSiriContext _aceValue]
Unknown.%ld
instrumentation.
_deliveryStream
_contextDataType
_contextData
_assistantId
UNKNOWN_EVENT
UEI_CLIENT_EVENT
UEI_SERVER_EVENT
DAILY_DEVICE_STATUS
MT_CLIENT_EVENT
PROACTIVE_EVENT_TRACKER
ORDERED_ANY_EVENT
PROVISIONAL_EVENT
SIRI_UNDER_TEST_EVENT
REQUEST_LINK_EVENT
ABE_CLIENT_EVENT
ABE_SERVER_EVENT
FLOW_SERVER_EVENT
FLOW_CLIENT_EVENT
CAM_CLIENT_EVENT
UNIFIED_SIRI_PERFORMANCE_EVENT
GRR_CLIENT_EVENT
DIM_CLIENT_EVENT
NLX_CLIENT_EVENT
ORCH_CLIENT_EVENT
ASR_CLIENT_EVENT
DATA_UPLOAD_EVENT
IH_CLIENT_EVENT
MH_CLIENT_EVENT
TTS_CLIENT_EVENT
CLP_CLIENT_EVENT
RR_CLIENT_EVENT
CNV_CLIENT_EVENT
ANC_CLIENT_EVENT
ANC_SERVER_EVENT
DELETE_HISTORY_TRIGGER_SERVER_EVENT
HAL_CLIENT_EVENT
NET_CLIENT_EVENT
SAD_CLIENT_EVENT
DFI_DATA_EVENT
SERVER_ORDERED_ANY_EVENT
SERVER_REQUEST_LINK_EVENT
DODML_CLIENT_EVENT
PLUS_CLIENT_EVENT
EXP_SEARCH_CLIENT_EVENT
EXP_SIRI_CLIENT_EVENT
POMMES_CLIENT_EVENT
MT_CLIENT_EVENT_V2
CDA_CLIENT_EVENT
MWT_CLIENT_EVENT
HOME_CLIENT_EVENT
OPT_IN_CHANGELOG_CLIENT_EVENT
OPT_IN_PROPAGATION_CLIENT_EVENT
RSS_CLIENT_EVENT
_settingChanges
actionType
actionType = %ld (%@)
error = %@
AFSiriActivationResult::actionType
AFSiriActivationResult::error
executionID
originPeerInfo
currentHomeInfo
endpointInfo
instanceInfo
speechInfo
requestHandlingContextSnapshot
deviceRestrictions
executionID = %@
turnId = %@
originPeerInfo = %@
currentHomeInfo = %@
endpointInfo = %@
instanceInfo = %@
speechInfo = %@
requestHandlingContextSnapshot = %@
deviceRestrictions = %@
AFCommandExecutionInfo::executionID
AFCommandExecutionInfo::requestID
AFCommandExecutionInfo::turnId
AFCommandExecutionInfo::originPeerInfo
AFCommandExecutionInfo::currentHomeInfo
AFCommandExecutionInfo::endpointInfo
AFCommandExecutionInfo::instanceInfo
AFCommandExecutionInfo::speechInfo
AFCommandExecutionInfo::requestHandlingContextSnapshot
AFCommandExecutionInfo::deviceRestrictions
AFCommandExecutionInfo::userInfo
Library/Assistant
Library/Keyboard
System/Library/Assistant
Plugins
PresentationPlugins
amos
committed=yes
Installed
High Quality
Continuous Listening
On Device Search
assistant
Version: %@
Version:
Version: HQ:
Installing
Waiting to Install
: HQ:
: CL:
: DS:
 AssetId=
OfflineDictationCapability
DeviceName
 Simulator
UserAssignedDeviceName
ProductName
BuildVersion
ProductVersion
PPTDevice
cellular-data
HasBaseband
telephony
8S7ydMJ4DlCUF38/hI/fJA
AFAccessibilitySupportsAttentionAwareFeatures
wapi
ipad
DeviceClassNumber
AFMyriadEmitSelfMetrics
AFMyriadEmitClassicMetrics
watch-companion
StarkCapability
NRWatchOSVersion
NRVersionIsGreaterThanOrEqual
main-screen-scale
DeviceColor
DeviceEnclosureColor
AppleInternal/Library/Assistant/InternalConfig.plist
com.apple.Carousel
_AFDictationLanguageForKeyboardLanguageAndConfiguration
+N9mZUAHooNvMiQnjeTJ8g
U+73bmG4kBGj6kpreQXUTQ
DeviceSupportsAOP
DeviceSupportsSiriBargeIn
DeviceSupportsUSBTypeCDisplay
RegionCode
0AJUv/uYPsRiZNGpWJ7zfg
kern.boottime
AFSystemGetBootTimeInMicroseconds_block_invoke
AFAddInterruptingAudioSessionInfoToAnalyticsContext
kAudioSessionProperty_ActiveSessionDisplayIDs
No displayIDs found, but success reported
Terminated
Suspended
BackgroundRunning
ForegroundRunning
ProcessServer
RunningObscured
SnippetName
SnippetDomain
SnippetAction
SnippetAceId
PunchoutApp
NSSiriUsageDescription
NSSpeechRecognitionUsageDescription
FlashlightLevel
com.apple.springboard
76,8194
76,8195
76,8197
76,8198
76,8201
76,8208
BTHeadphones
76,8202
76,8203
76,8204
76,8205
76,8206
76,8207
76,8210
76,8211
Speaker
Receiver
BluetoothDoAP
bluetooth
SFSpeech
x-apple-siri-announce-notification
application-identifier
com.apple.assistant.assistantd
assistant_service
AFDeviceSetupIsActive
15.0
15.1
15.2
com.apple.siri.bundleservicecache.plist
_AXSAttentionAwarenessFeaturesEnabled
init_AXSAttentionAwarenessFeaturesEnabled
AFUtilities.m
softLink_AXSAttentionAwarenessFeaturesEnabled
/System/Library/Frameworks/Accessibility.framework/Accessibility
AccessibilityLibrary
/System/Library/PrivateFrameworks/NanoRegistry.framework/NanoRegistry
NRPairedDeviceRegistry
initNRPairedDeviceRegistry_block_invoke
classNRPairedDeviceRegistry
NRDevicePropertyDeviceBrand
initNRDevicePropertyDeviceBrand_block_invoke
NRDevicePropertyIsAltAccount
initNRDevicePropertyIsAltAccount_block_invoke
_AFHandleSignalByExitingCleanly
_AFSpecificFallbackForLanguage
Language Fallbacks
zh-SG
zh-Hant
ja-Hira
ja-Hrkt
ja-Jpan
ja-Hani
ja-Kana
ja-Latn
yue-Hant
_AFMachAbsoluteTimeRate_block_invoke
InfoPlist
BluetoothManager
initBluetoothManager_block_invoke
classBluetoothManager
BBGetObserverGatewayTimeout
/System/Library/PrivateFrameworks/BulletinBoard.framework/BulletinBoard
nowPlayingTimestamp
mediaType
isProxyGroupPlayer
playbackState = %ld (%@)
nowPlayingTimestamp = %@
mediaType = %@
groupIdentifier = %@
isProxyGroupPlayer = %@
AFMediaPlaybackStateSnapshot::playbackState
AFMediaPlaybackStateSnapshot::nowPlayingTimestamp
AFMediaPlaybackStateSnapshot::mediaType
AFMediaPlaybackStateSnapshot::groupIdentifier
AFMediaPlaybackStateSnapshot::isProxyGroupPlayer
input
understanding
intentHandler
presentation
isPlaying
v24@?0Q8^B16
-[AFMyriadAdvertisementContextManager pushMyriadAdvertisementContext:completionHandler:]_block_invoke
-[AFMyriadAdvertisementContextManager pushMyriadAdvertisementContext:completionHandler:]_block_invoke_2
v32@?0@"AFPeerContentTuple"8Q16^B24
-[AFMyriadAdvertisementContextManager triggerABCForType:subType:context:]_block_invoke_2
-[AFMyriadAdvertisementContextManager reset]
_triggerlessListeningOptions
triggerlessListeningOptions: %@
_pid
%@ %@ %d
com.apple.myriad_emergncy_call
-[AFMyriadEmergencyCallPunchout initiateEmergencyCallMyriad]
alarmID
alarmURL
hour
minute
repeatOptions
isSnoozed
alarmID = %@
alarmURL = %@
type = %lu [%@]
hour = %@
minute = %@
repeatOptions = %lu [%@]
isSnoozed = %@
AFClockAlarm::alarmID
AFClockAlarm::alarmURL
AFClockAlarm::isFiring
AFClockAlarm::title
AFClockAlarm::type
AFClockAlarm::hour
AFClockAlarm::minute
AFClockAlarm::repeatOptions
AFClockAlarm::isEnabled
AFClockAlarm::isSnoozed
AFClockAlarm::firedDate
AFClockAlarm::dismissedDate
AFClockAlarm::lastModifiedDate
audioSessionID
audioSessionID = %@
AFSetAudioSessionActiveResult::audioSessionID
AFSetAudioSessionActiveResult::error
AFContextDonationService
-[AFContextDonationService donateContext:withMetadata:pushToRemote:completion:]_block_invoke_2
v24@?0@"<AFContextSnapshot>"8@"AFDeviceContextMetadata"16
isDeviceOwnedByCurrentUser
sharedUserIdentifier
idsIdentifier
idsDeviceUniqueIdentifier
rapportEffectiveIdentifier
homeKitAccessoryIdentifier
isCommunalDevice
userInterfaceIdiom
aceVersion
isDeviceOwnedByCurrentUser = %@
sharedUserIdentifier = %@
idsIdentifier = %@
idsDeviceUniqueIdentifier = %@
rapportEffectiveIdentifier = %@
homeKitAccessoryIdentifier = %@
isCommunalDevice = %@
productType = %@
userInterfaceIdiom = %@
aceVersion = %@
AFPeerInfo::isDeviceOwnedByCurrentUser
AFPeerInfo::assistantIdentifier
AFPeerInfo::sharedUserIdentifier
AFPeerInfo::idsIdentifier
AFPeerInfo::idsDeviceUniqueIdentifier
AFPeerInfo::rapportEffectiveIdentifier
AFPeerInfo::homeKitAccessoryIdentifier
AFPeerInfo::mediaSystemIdentifier
AFPeerInfo::mediaRouteIdentifier
AFPeerInfo::isCommunalDevice
AFPeerInfo::roomName
AFPeerInfo::name
AFPeerInfo::productType
AFPeerInfo::buildVersion
AFPeerInfo::userInterfaceIdiom
AFPeerInfo::aceVersion
processIdentifier = %@
processName = %@
AFClientInfo::processIdentifier
AFClientInfo::processName
sleep
-[AFPeerMap _getUUIDAndUpdateIDMapsForPeerInfo:]
v24@?0@"NSMutableDictionary"8@"NSString"16
RemoteResponseListenerEndpoint
RemoteUsageResultListenerEndpoint
-[AFSiriTask _initWithRequest:remoteResponseListenerEndpoint:usageResultListenerEndpoint:]
-[AFSiriTask dealloc]
 request=
-[AFSiriTask _responseHandlerConnection]
-[AFSiriTask failWithError:]
-[AFSiriTask failWithError:]_block_invoke
-[AFSiriTask completeWithResponse:]
-[AFSiriTask completeWithResponse:]_block_invoke
-[AFSiriTask reportUsageResult:]
-[AFSiriTask reportUsageResult:]_block_invoke
-[AFSiriTask initWithXPCDictionary:]
AFAccessibilityObserver
v16@?0@"<AFAccessibilityStateMutating>"8
kAXSVoiceOverTouchEnabledNotification
initkAXSVoiceOverTouchEnabledNotification_block_invoke
AFAccessibilityObserver.m
/usr/local/lib/libAccessibility.dylib
/usr/lib/libAccessibility.dylib
libAccessibilityLibrary
kAXSVibrationDisabledPreferenceDidChangeNotification
initkAXSVibrationDisabledPreferenceDidChangeNotification_block_invoke
_AXSVoiceOverTouchEnabled
init_AXSVoiceOverTouchEnabled
softLink_AXSVoiceOverTouchEnabled
_AXSVibrationDisabled
init_AXSVibrationDisabled
softLink_AXSVibrationDisabled
?333333
ffffff
@ffffff
@EPYTATAD!DNE!ECA!FER
MbP?ffffff.@
4@33
333333
%s %p (instanceContext = %@, caller = %@)
%s %p (requestClass = %@, isSpeechRequest = %d (%@), isBackgroundRequest = %d)
%s command = %@
%s Enqueued command %@ because it is an interstitial and active request has not presented UUFR yet.
%s Ignored command %@ because it is an interstitial but there's no active request or active request has presented UUFR already.
%s command = %@, isInterstitial = %d
UICommandHandle
%s interstitialPhase = %@
%s interstitialDelay = %f (expected)
%s durationFromSpeechRecordingEnd = %f
%s durationFromSpeechRecognition = %f
%s durationFromSpeechEnd = %f
%s durationFromRequestBegin = %f
%s interstitialDelay = %f (actual)
%s Initial interstitial fired too early!
%s Drop command %@ because UUFR has been presented.
%s Dispatching command %@
%s no delegate method on %@ to handle command: %@
%s shouldSpeak = %d
%s Prepared for input audio power updates. Waiting for _speechCallbackGroup...
%s Started input audio power updates.
%s Stopped input audio power updates.
%s audioSessionID = %lu
%s recordRoute = %@
%s Unable to mark isDucking because the active request is not a speech request. (_activeRequestType = %zd, _activeRequestUUID = %@)
%s Unable to mark isTwoShot because the active request is not a speech request. (_activeRequestType = %zd, _activeRequestUUID = %@)
%s Unable to mark speech recognized because the active request is not a speech request. (_activeRequestType = %ld, _activeRequestUUID = %@)
%s No interstitial has been presented yet, adjusting timings based on updated speech end host time %llu.
%s Skipped timing adjustment because 1 interstitial has been presented.
%s Skipped timing adjustment because %lu interstitials have been presented.
%s Unable to update speech end host time. (_activeRequestType = %zd, _activeRequestUUID = %@)
%s requestUUID = %@, turnId = %@, reason %ld, error = %@
%s Dropping delegate callback because request is complete
%s Dropping delegate callback because request is different (_activeRequestUUID = %@, requestUUID = %@, turnId = %@)
%s Resetting isCapturingSpeech for %@ for reason: %ld
%s Reporting speech error on connection tear down
%s Connection invalidated
%s Connection interrupted
%s Scheduling request timeout for %f seconds for reason %@
%s Invoking request timeout for reason %@
%s Pausing request timeout for reason %@
%s Resuming request timeout for reason %@
%s Canceling request timeout for reason %@
%s Updated internal state. ShouldSpeak %@
%s Updated internal state. AudioSessionID %@
%s %p %@ %d (%@)
%s Logging TurnMTE From _willStartRequestWithSpeech
%s Emitting Request link message between turnID: %@ and RequestID: %@
%s %p activeRequestUUID = %@ turnId = %@ %@
%s Wrapping up non-siri error in generic error %@
%s Appending additional details to error %@
%s %p %ld
%s Initial interstitial fired %f seconds right before UUFR!
%s reason = %@
%s phase = %@, displayText = %@, speakableText = %@, expectedDelay = %f, context = %@
%s Unable to create an interstitial command because display text and speakable text are both empty.
%s interstitialCommand = %@
%s interstitialReply = %@
%s interstitialError = %@
%s Network is available. Evaluating AFConnection as available.
%s Network is not available but device supports Understanding On Device for %@. Evaluating AFConnection as available.
%s Network is not available and language %@ is not supported for Understanding On Device. Evaluating AFConnection as NOT available.
%s Network is not available and device does not support Understanding On Device. Evaluating AFConnection as NOT available.
%s Begin sending defrost XPC message.
%s End sending defrost XPC message.
%s %p %ld %@
%s ErrorHandler %{public}@
%s %p %lu
%s Received reply.
%s Overriding activation event in info %@ %@
%s Complete %@
%s Continuing pending speech request %p
%s Failed continuing pending speech request %p %{public}@
%s %@ %@
%s reason = %ld
%s %p %@
%s passed command without ACE ID; inventing one (%@)
%s Performing BackgroundUpdateRequest outside normal request processing flow.
%s %s
UsefulUserFacingResults
%s Fail to start audio playback request %{public}@ due to error %{public}@.
%s Delaying delivery of client command %@ by %f seconds...
%s Delayed delivery of client command %@ by %f seconds.
%s Dropping delayed client command %@ because request already ended.
%s Unexpected nil bundle ID
%s Unexpected nil URL
%s %@ Got dismiss assistant message
%s %@ Got dismiss assistant message with reason : %ld
%s %@ Got quick stop handled message with actions %tu taken.
%s Logging uufr for phase= %@
%s error is nil. Instrumentation logging is skipped. requestUUID = %@ turnId = %@
%s turnId is nil. Instrumentation logging is skipped. requestUUID = %@ error = %@
%s Logging instrumentation for requestUUID = %@ turnId = %@ error = %@
%s turnId is nil. Instrumentation logging is skipped. requestUUID = %@
%s speechRequestOptions is nil. Instrumentation logging is skipped. requestUUID = %@ turnId = %@
%s Logging instrumentation for requestUUID = %@ turnId = %@ HomePod launch: (startTime = %llu endTime = %llu)
%s %p
%s %p (style = %@, recordRoute = %@, isVoiceTrigger = %d, isDucking = %d, isTwoShot = %d, speechEndHostTime = %llu, context = %@, preferences = %@)
%s No language preference, using best supported language: %@
%s configuration = %@, context = %@
%s phase = %@, displayText = %@, speakableText = %@, expectedDelay = %f
%s duration = %f
%s configuration = %@
%s initialInterstitialDelay = %f
%s delayBeforeInitial = %f
%s initialInterstitialDelayForVoiceTriggerOneShotWithoutAudioDucking = %f
%s delayBeforeInitial = %f (adjustment based on speech request info for Hearst)
%s delayBeforeInitial = %f (adjustment based on end-of-speech info)
%s delayBeforeInitial = %f (adjustment for frontend UI)
%s %{private}@
%s Using conversation guid: %{private}@
%s returning nil; passed invalid property list (%{public}@): %@
%s unable to deserialize property list with version %{public}ld; returning nil
%s returning nil; unable co create associated data store from property list %@
%s Error accessing remote proxy: %@
%s cleared connection: %@
%s created new connection: %@
%s %p {%@}
%s context = %@
%s assertionUUID = %@, context = %@, options = %@
%s assertionUUID = %@, error = %@, options = %@
%s matchedAssertionUUIDs = %@
%s numberOfPendingAndActiveAssertions is %lld
%s numberOfActiveAssertions is %lld
%s assertion = %@
%s effectiveDate = %@
%s effectiveTimeIntervalSinceNow = %f
%s expirationDuration = %f
%s %@ contains invalid expiration duration %f.
%s %@ expired %f seconds ago.
%s numberOfAssertions: %llu -> %llu
%s isFirstAssertion = %d
%s Activating %@ now...
%s Activating %@ in %f seconds...
%s assertionUUID = %@
%s numberOfActiveAssertions: %llu -> %llu
%s Deactivating %@ now...
%s expirationTimeIntervalSinceNow = %f
%s Deactivating %@ in %f seconds...
%s assertionUUID = %@, context = %@, error = %@, options = %@
%s Skipped deactivating %@ because it is active and requested inactive only.
%s isLastAssertion = %d
%s Couldn't create speech log directory at path %{public}@ %{public}@
%s Couldn't create analytics log directory at path %{public}@ %{public}@
%s Nothing to do on non-internal install
%s Removing speech log %@ %@
%s Finished, and removed %ld files
%s Couldn't create %@: %@
%s Couldn't serialize: %@
%s Couldn't write to %@: %@
%s Queue block at %s line %lu (queue: %s)
%s Enter block at %s line %lu (queue: %s, waitingTime: %llums)
%s Leave block at %s line %lu (queue: %s, executionTime: %llums)
%s <AFSiriTaskExecution %p>
%s Delivery of task %@ by %@ failed with error %{public}@
%s Task %@ was delivered successfully by %@
%s Handling of %@ timed out after %{public}.2f seconds
%s cancelling watchdog for %@
%s %@ is already completed; not completing again with response %@ %@
%s <AFSiriTaskExecution %p> releasing listener
%s Attempted to convert bytes with invalid length (%ld) to AFTurnIdentifier
%s requestInfo = %@, context = %@
%s result = %@
%s reason = %@, options = %@, context = %@
%s error = %@
%s intent = %@
%s intentResponse = %@
%s intentForwardingActionResponse = %@
%s servicePort = %@ (incoming, effective)
%s servicePort = %@ (incoming)
%s servicePort = %@ (effective)
%s machServiceName = %@
%s %p (%@)
%s %p (%@) name = %@
%s %p (%@) assertion = %@
%s %p (%@), name = %@, assertion = %@
%s %p (%@) Expected assertion coordinator is %@, actual assertion coordinator is %@.
%s %p (%@) assertion = %@, isFirstAssertion = %d
%s %p (%@) assertion = %@, isLastAssertion = %d
%s %@
%s User context language code mapping %@ -> %@ (override: %@)
%s %p instanceContext = %@, acquisitionContext = %@
%s %p context = %@, options = %@
%s %p error = %@, options = %@
%s %p context = %@
%s %p context = %@, error = %@
%s %p error = %@
%s Create XPC connection %p.
%s Destroy XPC connection %p.
%s %s is not available, as AFError is not designed to be instantiated. Returning nil.
%s outTopLevelErrorPtr is NULL
%s inTopLevelError is nil
%s matchError block is nil
%s buildUnderlyingError block is nil
%s Unable to create the new underlying error from specified block.
%s XPC object is nil.
%s Unexpectec XPC object type.
%s Mapping failed due to nil shared region.
%s Mapping failed due to unexpected mapped length (mappedLength = %zd).
%s No identifier specified for %@
%s Error connecting to assistantd for notification service: %@
%s Error posting notification %@: %@
%s Connection to assistantd for notification interrupted
%s Connection to assistantd for notification invalidated
%s No response handler for %@
%s Queue and key must be non-nil: %@, %@
%s Queue and stream must be non-nil: %@, %@
%s Error deleting from duet: %@
%s Error saving to duet: %@
%s Unable to get an instance of _DKKnowledgeStore.
%s utterance index (%{public}lu) is out of range
%s base utterance index (%{public}lu) is out of range
%s utterance interpretationIndex (%{public}lu) is out of range of interpretations=%@
%s Phrase length is not the same as interpretationIndices. Phrases=%@, interpretationIndices=%{public}@
%s No utterance text existed for utterance index %{public}lu
%s _phrase count (%{public}ld) not match swapIndices count (%{public}ld)
%s utterance interpretationIndices count (%{public}ld) does not match swapIndices count (%{public}ld)
%s utterance index %{public}lu out of range
%s Error with remoteObjectProxy: %@
%s Failed to stage UEI event: %@ error: %@
%s Boosting XPC queue %@
%s Completed boosting XPC queue %@
%s Failed to send %tu events due to %@. (numberOfRetries = %tu)
%s Dropping %@ because the maximum number of retries was reached.
%s Expected a value responding to -boolValue, but found something else. Returning %{BOOL}d. {key: %@, value: %@}
%s Expected a value responding to -doubleValue, but found something else. Returning %f. {key: %@, value: %@}
%s Expected a value responding to -boolValue, but found something else! Acting as-if no value was set. {key: %@, value: %@}
%s #preferences Setting Type To Siri %@
%s HIPAA On-Device Dictation MDM flag is %d
%s Reprompt feature flag enabled and new status is opted out. Updating legacy value.
%s SiriX assets status changed. Posting kAFPreferencesDidChangeDarwinNotification
%s %p %@ languageCode = %@
%s %p %@ outputVoice = %@
%s %p %@ assistantIsEnabled = %d
%s %p %@ dictationIsEnabled = %d
%s %d
%s announce notifications disabledForCarPlay: %{BOOL}d || disabledUntilEndDate: %{BOOL}d
%s announce notifications disabledUntilEndDate: %{BOOL}d
%s %{private}ld
%s Setting Siri Data Sharing OptIn status=%{private}ld from source=%ld with reason=%{private}@, and propagating to home accessories=%d
%s Appending siri data sharing opt-in status information to history: %@
%s Siri data sharing opt-in status history size of %ld is greater than maximum of %ld. Removing oldest entry.
%s Appending home accessory Siri data sharing opt-in status event to change log: %@
%s Home accessory Siri data sharing opt-in status change log size is greater than maximum of %ld. Removing oldest entry.
%s Appending home accessory Siri data sharing propagation event to propagation log: %@
%s Home accessory Siri data sharing opt-in status propagation log size is greater than maximum of %ld. Removing oldest entry.
%s Constructed SELF message %@ from opt-in status history entry %@
%s No language code saved, but Assistant is enabled - returning: %@
%s supported: %s
%s No language code given, answer is NO.
%s %@ supported: %s
%s preferredLanguages = %@
%s currentLocale identifier = %@
%s total preferences = %@
%s input: nil -> %@
%s Somehow we have no language preferences!
%s preferences %@
%s sentinelOrSpecialCase = %@
%s Special-case: %@ -> %@
%s %@ is intentionally supported as %@
%s Preferred Languages = %@, -> Best Supported Languages = %@
%s falling back to %@
%s No output voice saved, but Assistant is enabled - returning: %@
%s Unable to erase all Siri preferences for %@.
%s version=%@
%s Expected a double value for version number, but found something else. Returning an empty list. version=%@
%s Version number is smaller than 15.2. Returning an empty list. versionNum=%f
%s Removing "%@" from alternative language map. Please file a radar on Siri Frameworks to remove it permanently.
%s Preferences Changed!
%s Internal Preferences Changed!
%s Language Code Changed: %@!
%s Output Voice Changed!
%s Nano Prefs Changed!
%s Assistant Enablement Changed!
%s Could not parse languageID, passing it through!
%s Deleting sanitized speakable:%@ date:%@
%s %@ %s
%s asking taskmaster=%@ to handle contextRequest=%@
%s Unable to obtain context using %@: %{public}@
%s %@ got context
%s wireless splitter session state: %ld, error: %@
%s Notifying observers of available announcement requests: %lu
%s previous announcement request eligibility: %lu, now updating to %lu
%s Notifying observers, eligible announcement requests changed: %lu
%s wireless splitter session state changed from %llu to %llu
%s wireless guest connection state changed from %llu to %llu
%s forced update observer re-fetching eligibility
%s re-fetching eligibility after assistantd is ready
%s Announcements not supported on device
%s Eligible Announcement Requests: %lu, Local Voice Asset Available: %d
%s Announcements not supported on this device
%s Available announcement requests: %lu, In wireless splitter session: %ld, guest connection state: %llu
%s Queueing command waiting for Myriad decision: %@ (reason = %@).
%s Dequeuing after %f seconds for Myriad decision (reason = %@) and dequeue signal %zd.
%s Dequeueing command for Myriad decision: %@ (reason = %@).
%s BTLE delay monitor watchdog timeout %f context %@
%s Myriad Delay Monitor: Should ignoring Myriad events -> %d.
%s Myriad Delay Monitor: Registering for Myriad event notifications (beginObserver: %p, wonObserver: %p, lostObserver: %p, decisionRepostObserver: %p).
%s Myriad Delay Monitor: Ignoring Myriad repost notifications.
%s Myriad Delay Monitor: Fetching reposted Myriad event notification.
%s Myriad Delay Monitor: Deregistering from Myriad event notifications.
%s Myriad Delay Monitor: Deregistering from reposted Myriad event notification.
%s Myriad Delay Monitor result: YES (%@)
%s Myriad Delay Monitor result: NO (%@)
%s Myriad Delay Monitor Begin (%@)
%s Myriad Delay Monitor received reposted result: YES (%@)
%s notifyObserver %p didChangeStateFrom %ld -> %ld
%s Myriad decision is already in pending state.
%s Myriad monitor cancelling existing watch dog timer.
%s Myriad decision is pending.
%s Myriad monitor initializing safety timer with timeout: %f seconds
%s Myriad monitor times out, Myriad is probably unable to finish, clear pending blocks
%s Myriad decision had %d block(s) waiting
%s Clear pending for Myriad decision: %@.
%s Myriad decision seen: state is %@.
%s No dialog phase provided for conversation insertions; defaulting to %@
%s ACE object: %@
%s %@: updating item %@ at %@ from ACE object.
%s %@: adding new item %@ at %@ for ACE object.
%s rootNode=%@
%s Unable to add additional speech interpretation, invalid refId
%s passed invalid property list (%@): %{public}@
%s Unable to create conversation from property list with version %{public}ld
%s %p identifier = %@, effectiveDate = %@, expirationDuration = %f, heartBeatInterval = %f
%s %p Heart beat interval %f is invalid.
%s %p Expiration duration %f is invalid.
%s %p Effective date %@ and expiration duration %f are in the past.
%s %p identifier = %@
%s %p identifier = %@, index = %llu
%s %p identifier = %@, count = %llu
%s Could not open speech manager dylib: %{public}s
%s Could not find AXSpeechTransformText: %{public}s
%s User Generated Message: %@
%s Transformed Text: %@
%s No argument for weather units.
%s No argument for initLowercase
%s Error fetching meCard %@
%s Timed out fetching meCard  after waiting %0.1g seconds
%s Got %@
%s ERROR: No argument for siriUsageDescription
%s No argument for speechRecognitionUsageDescription
%s Missing argument for contextRoomName
%s Computed value: %@
%s Missing argument for contextDeviceName
%s Timed out fetching peerInfo after waiting %0.1g milliseconds
%s Unhandled functor %@
%s %p (Caller = %@)
%s Trying to start speech capture while we are already capturing. This is a client app logic error, cancelling dictation
%s Recognizing incrementally.
%s %@ - %@
%s %p Local speech recognizer model info: %@
%s %p %d
%s %p Started input audio power updates.
%s %p Stopped input audio power updates.
%s Offline language fetch failed: %@
%s %p %@ %@ %@ %llu
%s Sending 1 event
%s Language %@ is %@supported for dictation
%s Inserting activation timestamps since client did not set them
%s Pending dictation request completed
%s %p %@ %@ %@
%s Dictation request completed
%s %p %@ %@ %d
%s Recorded audio dictation request completed
%s Stop requested, delaying till buffer is empty
%s Delayed stop after buffer cleared
%s Language code is nil.
%s Sent data from buffer, actualRuntime=%f, amountSent=%f, outgoingDuration=%f
%s Schedule timer with delay: %.2f
%s Ignoring suppressStopAlert from client
%s Ignoring suppressStartAlert from client
%s log to CoreAnalytics nearby device context %@: %@
%s externalRequest = %@
%s Alarm %@ is not in notifiedFiringAlarmIDs, but isFiring is YES.
%s Alarm %@ is in notifiedFiringAlarmIDs, but isFiring is NO.
%s Firing alarm is not valid: %@
%s Notifying observers, available announcement request types changed: %lu
%s grouping depth: %ld -> %ld
%s numberOfItems: %lu
%s numberOfItems: %lu -> %lu
%s itemsByID: [+] %@
%s itemsByID: [-] %@
%s itemsByID: [*] %@ -> %@
%s Item changes detected, but there is no inserted, updated or deleted items.
%s generation: %llu -> %llu
%s date: %@ -> %@
%s There's no generation, date or item changes.
%s Attempt to end grouping without a balanced begin grouping.
%s items = %@
%s itemIDs = %@
%s %p Started %@ %d %d
%s %p Finished
%s %p Failed %d %@
%s No command handler in client for command %@
%s %p %@ %d %d
%s %p %@ %d
%s Successfully fetched local route identifier: %@, group identifier: %@
%s Unable to fetch local route identifier: %@
%s Local route identifier: %@
%s Local group identifier: %@
%s Error retrieving MRDeviceInfo: %@
%s Retrieving MRDeviceInfo for local origin.
%s Retrieved routeId: %{private}@
%s Retrieved groupId: %{private}@
%s languageCode: %@, voiceName: %@
%s No descriptor found for language code %@, voice name %@
%s Missing voice map for language %@
%s nil language code provided
%s %@ missing name cannot compare voices
%s Cannot compare voices with keys (%@, %@)
%s Cannot resolve ordering for voice one: %@, voice two: %@ 
%s language code: %@ output language code: %@, output voice: %@
%s %@ missing languageCode
%s Voice name not specified for %@, using %@
%s Voice name not specified for %@, can't determine default name
%s No voices loaded for %@, but they were expected
%s No voiceInfo was found for %@. Will return default output voice info instead: %@
%s Cannot get output voice identifier for languageCode: %@, voiceName: %@
%s returning nil because value for key "%@" is %@, which cannot be coerced to an image
%s returning nil; passed invalid property list (%@): %{public}@
%s Unable to exclude %@ from backup; deleting.
%s task_info() with TASK_VM_INFO returned %d due to %s.
%s AFMyriadRecord invalid data during init: %@
%s AFMyriadRecord initfrom: <THISDEVICE> - %@
%s AFMyriadRecord initfrom: %@ - %@
%s Bad data of unexpected length %@ : %@
%s [(rawAudioGoodnessScore + bump) overflow] rawAudioGoodnessScore: %d, bump: %d. Overwriting goodness score to 0xff
%s rawAudioGoodnessScore: %d, bump: %d goodness: %d
%s #myriad newGoodness: %d
%s AFMyriadRecord sanity: %d
%s Generated myriad hash: %hu
%s #hal Context for %@ of type %@ has expired
%s Error unarchiving flowContext from %@: %@
%s Current memory info is %@.
%s Memory pressure condition changed from %@ to %@.
%s Memory pressure condition stayed at %@.
%s Unable to get LSApplicationProxy class.
%s Encountered a bundle proxy that is not a LSApplicationProxy: %@
%s Encountered an application proxy without bundle identifier: %@
%s Encountered an application proxy with an identical bundle identifier: %@
%s Unable to get an instance of LSApplicationWorkspace.
%s Not saving disambiguation event. Item %@ does not exist in object %@
%s Could not get domain objects for %@: %{public}@
%s Error: %@
%s payload for %@: %@
%s Generated Myriad advertisement context data: %lu bytes
%s Invalid Voicetrigger endtime: %f
%s VoicetriggerEndtime isSane: %d (threshold: %f, me: %f, other: %f, abs-diff: %f adv: %@)
%s Initializing Myriad advertisement context (version: %d)
%s #myriad-advertisementcontext: Received wedged Myriad advertisement context record %@
%s Notify register failed %u
%s PineBoard is not available
%s Error obtaining CoreDuet knowledge store.
%s contact: %@
%s Error obtaining notificationUsageStream from CoreDuet.
%s Error querying CoreDuet with %@: %@
%s No feedback persisted
%s Error reading data: %@
%s Saved feedback is corrupted: %@
%s Error creating directory: %@
%s Failed to save feedback to disk %@: %@
%s Failed to archive feedback %@: %@
%s Invalid AFMetrics category
%s Failed to serialize notification %@: %@
%s Sending xpc message for %@
%s Unable to send xpc message for %@
%s reason: %@
%s deactivation requests are currently only supported for CarPlay.
%s unspecified deactivation reason %li. Ignoring.
%s Sending xpc message for request deactivation.
%s Unable to send xpc message for request deactivation.
%s platform %li is not valid, using headphones provider.
%s Allow all notifications to be announced. This should only be used for testing.
%s Always Opportune so marking as eligible setup. This should only be used for testing.
%s Eligible capabilities changed, notifying observers
%s Eligble Setup: %lu
%s Timed out fetching eligible setup
%s Always Opportune, requests can be handled. This should only be used for testing.
%s Request can be handled: %d
%s Timed out fetching request can be handled
%s Notifying %lu observers, request can be handled? %d
%s Because pid=0, most likely a connection could never be established to begin with. Likely you are missing an entitlement and/or privilege to look up a mach port.
%s settingsService got error: %@
%s Setting Siri output voice: %@
%s Setting Siri language code: %@
%s Setting Siri output voice:%@ language code: %@
%s Can not get meCard on this device
%s Hit error %@
%s %ld
%s Failed to connect and start observing wireless splitter session: %@
%s Failed to connect and stop observing wireless splitter session: %@
%s error is %@
%s Setting siri data sharing optin status to = %@
%s Failed to set Siri data sharing optin status %@
%s Siri data sharing optin status is set to %@
%s Getting siri data sharing optin status
%s optin status = %@
%s Error while attempting to set Siri data sharing optin status %@
%s Siri data sharing optin status is set to %@ and propagation (if required) has been kicked off
%s status = %d
%s Setting Siri Data Sharing HomePod Setup Device isValid to = %d
%s presented = %d
%s Failed with error %@.
%s Done
%s Sending %@
%s Interrupted %@
%s Received %@ %@
%s Error creating directory %@ - %@
%s %@ Sampling: Error creating directory %@ - %@
%s %@ Sampling: Error deleting item at %@ - %@
%s %@ Sampling: Successfully deleted %@
%s %@ Sampling: Deleting all the %@ sampling data
%s %@ Sampling: Done with deleting all the sampling data. Deleted - %@, %@
%s Begin waiting for listening...
%s End waiting for listening (isListening = %d).
%s overrideResult = %@
%s state: %llu -> %llu
%s context = %@, timeoutInterval = %f
%s signal = %ld
%s isListening = %d
%s Language detector enabled - %d (Client: %d, Server: %d)
%s Language detection user context is nil. Not using language detector
%s Skipping dictation fallback code because override %@ has been set for keyboard %@
%s Dictation override %{public}@ is not in our supported list.
%s Invalid analytics stream.
%s version = %u analytics stream = %p
%s Analytics data has a invalid version
%s Invalid analytics data received
%s Announce Telephony is not enabled, rejecting request
%s Failed to serialize call %@: %@
%s CSActivationEventNotifier returned error %@ for activation context %@.
%s Unexpected event in context %@.
%s No score is provided in context %@.
%s No device ID is provided in context %@.
%s Unexpected source in context %@.
%s Couldn't find keychain value %@ for account %@ %{public}d
%s Couldn't delete value %@ from keychain for account %@ %{public}d
%s Couldn't update value %@ from keychain for account %@ %{public}d
%s Unable to create an instance of plugin NSPrincipalClass %{public}@
%s Error loading bundle at path "%@":%@
%s Siri plugin does not specify an NSPrincipalClass, unable to load: %@
%s timestamp = %llu, source = %@, deviceID = %@, context = %@
%s timestamp = %llu, context = %@
%s Deprecated, use AFSiriActivationBluetoothDeviceDoubleTap() or AFSiriActivationBluetoothDeviceVoice() instead.
%s Deprecated, use AFSiriActivationBluetoothDeviceDoubleTap() instead.
%s Deprecated, use AFSiriActivationBluetoothDeviceVoice() instead.
%s Deprecated, use AFSiriActivationBluetoothDeviceBoronSignal() instead.
%s timestamp = %llu, deviceID = %@, context = %@
%s timestamp = %llu, deviceID = %@, score = %f
%s timestamp = %llu, activationTimeShift = %f, deviceID = %@
%s Validating Siri activation context %@...
%s Siri activation context %@ is invalid, because source '%@' requires a non-nil device ID.
%s Siri activation context %@ is invalid, because source '%@' does not support event '%@'.
%s Siri activation context %@ is invalid, because source '%@' is not supported yet.
%s Siri activation context %@ is valid.
%s Siri activation context %@ is valid. (internal override)
%s context = %@, instanceContext = %@
%s Post darwin notification %@
%s Invalid context %@.
%s No handler for context %@.
%s Context %@ rejected by handler %@.
%s Unable to resolve speech event for context %@.
%s speechEvent = %ld (%@)
%s Unable to deserialize user info data due to error %@.
%s Unable to serialize user info %@ due to error %@.
%s Unable to deserialize error data due to error %@.
%s Unable to serialize error %@ due to error %@.
%s handler = %@ (override)
%s handler = %@ (default)
%s No handler can be found.
%s Invalid message recipient has no actionable contact values %@. Ignoring that recipient.
%s rejecting incoming connection (%@) because it doesn't have the "%@" entitlement
%s accepting incoming connection (%@)
%s %@ asking %@ to handle task %@
%s No execution for this request, it can not be failed %@
%s Unexpected failure %@ of request %@
%s item property list creation block returned nil for item %@
%s Already observing notification request identifier %@, ignoring.
%s Adding speaking state observer for notification request identifier %@
%s Not currently observing for notification request identifier %@, ignoring.
%s Removing speaking state observer for notification request identifier %@
%s No longer observing any notifications. Closing connection.
%s Received a notification for speaking state changes, but no observers.
%s Received a notification for speaking state changes, but we're not observing any of them.
%s Notification announcement speaking state updated to `%@` for request identifiers %@
%s Notifying all identifiers as failed. %@
%s Not logging event %@ because it has no associated time. Context: %@
%s Not logging instrumentation event %@ because we have HIPAA On-Device Dictation enabled: %@
%s Attempted to log nil instrumentation event.
%s Not logging instrumentation event %@ because it has no associated time. Turn context: %@
%s Not logging instrumentation type %@ because it is of an unknown type. Context: %@
%s Completed boosting event producer queue %@
%s Failed to serialize context %@ to JSON due to exception %@.
%s Failed to serialize context %@ to JSON due to error %@.
%s An exception has been raised during the execution of the context provider block for logging event (name = %@, timestamp = %f): %@
%s #myriad ignoring recent event bump
%s #myriad bumptoGoodness secsAgo=%f yields %d = %f(act) + %f(siri)
%s #myriad bumping goodness score (reason: platform bias, adjusted bias: %d)
%s #myriad bumping goodness score (reason: alarm/timer firing, adjusted score: %d)
%s #myriad bumping goodness score (reason: media playback active, adjusted score: %d)
%s #myriad bumping goodness score (reason: media playback interrupted, last playback time: %f seconds ago, adjusted score: %d)
%s #myriad updating platform bias to %d
%s #myriad
%s #myriad payload adjusted score: %ld
%s #myriad adjusted score: %ld
%s #myriad platform bias acquisition state: %ld
%s %p Client with pid %{public}d does not have entitlement %@.
%s notifyObserver = %@, fromState = %llu, toState = %llu
%s %p requestInfo = %@, context = %@
%s done
%s %p result = %@
%s %p reason = %@, options = %@, context = %@
%s %p Handling as prewarming...
%s %p Unable to handle context %@ as prewarming due to error %@.
%s %p Handling as activation...
%s %p Unable to handle context %@ as activation due to error %@.
%s %p Handling as deactivation...
%s %p Unable to handle context %@ as deactivation due to error %@.
%s %p Delivering button event ...
%s %p Unable to deliver button event from context %@ due to error %@.
%s %p done
%s %p Handling myriad event...
%s %p Unable to handle context %@ as myriad event due to error %@.
%s %p requestInfo = %@
%s %p intent = %@, bundleIdentifier = %@
%s %p intentResponse = %@
%s intentForwardingAction = %@, bundleIdentifier = %@
%s Intent handling is not supported on this platform
%s %p delegate = %@
%s Unable to retrieve LSApplicationRecord for bundle identifier %@: %@
%s application: %@ supports %@
%s Notifying observers eligible announcement request types changed: %lu
%s Notifying observers available announcement request types changed: %lu
%s Wedged message received with version: %hhu and message length: %zu
%s Unknown request type %@ for accessory id: %@, Ignoring.
%s Received a payload %@ with session id %@ for accessory id: %@, Ignoring.
%s cdaId: %@, state: %@, trigger: %@
%s cdaId: %@, state: %@
%s cdaId: %@, state: %@, withDecision: %d, withPreviousDecision: %d, timeSincePreviousDecision: %llu, withWinningDevice: %@ (score: %d), withThisDevice: %@ (score: %d), withParticipants: %@, withRawScore:%u, withBoost:%@, withTrumpReason:%@
%s cdaId: %@, state: %@, arbitrationAllowed: %d, deviceGroup: %d, advertisements: %@
%s boostType: %@, boostValue:%d
%s trump: %d, with Reason:%@
%s #myriad BTLE audio data signal received
%s #myriad BTLE self trigger signal received
%s #myriad BTLE in ear trigger signal received
%s #myriad BTLE CarPlay trigger signal received
%s #myriad BTLE emergency signal received
%s #myriad BTLE myriad decision fetch signal received
%s #myriad BTLE opening audio file at path %{private}s
%s #myriad BTLE could not open audio data file
%s #myriad BTLE could not read 4 bytes from audio data file
%s #myriad Audio file deletion status: %d
%s Attempt to initialize MyriadCoordinator when one already exists.
%s #myriad coordinationEnabled=%d, BLEActivityEnabled=%d 
%s Initialized MyriadCoordinator
%s #myriad reading defaults
%s #myriad reading server provisioned defaults
%s #myriad reading defaults: BTLE device class: %@ (%@) detected, category %ld, adjusting goodness by %ld, std delay %f, trump delay %f, vt_endtime threshold %f
%s BTLE device class: %@ (%@) detected, category %ld, adjusting goodness by %ld, std delay %f, trump delay %f, in_ear delay %f interval %f vt_endtime threshold %f
%s BTLE audio hash base directory %{private}@
%s BTLE audio hash file path %{private}@
%s Preheat shows slowdown for this device as %d msecs
%s BTLE startFromVoiceTrigger inTask=%d, inSetupMode=%d, context=%@
%s BTLE device class: %@ (%@) detected, adjusting goodness by %d incomingAdjustment %d
%s BTLE overriding to constant goodness %d
%s Downgrading goodness as HS invocation too soon %f for score %d
%s BTLE overriding to goodness %@
%s #myriad _deviceAdjust=%d, adjustment= %d
%s #myriad removing negative iPad device boost (adding %d back) due to activationSource
%s #myriad attention start
%s #myriad attention sync resumeWithError failed: %@
%s #myriad attention sync awareness state event: %@, error: %@
%s #myriad attention sync _incomingAdjustment %hhd, context adjustement: %u
%s #myriad attention sync timeout awareness state event: %@, error: %@
%s #myriad attention sync suspendWithError failed: %@
%s #myriad attention end
%s #myriad overrideContext: %@, _incomingAdjustment %d
%s #myriad Goodness score override state %@
%s BTLE startFromVoiceTrigger inTask=%d, inSetupMode=%d, incomingAdjustment=%d,  context=%@, goodnessScoreContext=%@
%s BTLE ignoring watch voice trigger and continuing with ongoing advertisement.
%s BTLE trumping
%s BTLE suppressing trigger in audio output
%s BTLE trumping from in ear voice trigger
%s BTLE trumping from in CarPlay trigger
%s BTLE handling emergency beacon
%s BTLE sending emergency beacon
%s BTLE in-task voice trigger heard
%s BTLE ignoring in-task voice trigger and continuing with ongoing advertisement.
%s BTLE voice trigger during alert heard
%s BTLE suppressing stragglers
%s BTLE advertising slowdown: %d msecs
%s BTLE ending advertising after %f secs delay
%s Myriad decision is based on 0 replies
%s BTLE advertising is being ignored
%s BTLE detected a slowdown signal for %d msecs, resetting election for later time
%s inTask=%d
%s #myriad setupEnabled: %d, current state: %@
%s Coordination disabled, continuing with the request)
%s BTLE deviceShouldContinue:%ld (coordinationDisabled:%ld, isDirectlyActivating:%ld, isInEarTrigger:%ld, isWatch:%ld, suppressLateTrigger:%ld.
%s BTLE notify myriad won
%s BTLE notify myriad loss
%s BTLE unable to cancel against: %@
%s #myriad Election advertisement %@ added to myriad session %@
%s #myriad Initialized myriad session %@ when myriad is in state %@
%s #myriad Clearing myriad session %@
%s #myriad Election advertisement %@ -> %@
%s #myriad Event token: %@, current event token: %@
%s BTLE starting %@ timer for %f secs
%s BTLE %@ timer fires
%s BTLE timer %@ cancelled (%@)
%s BTLE Coordinator setting overall timeout
%s BTLE Coordinator hitting overall timeout, resetting to NoActivity and declaring loss
%s BTLE Coordinator cancelling overall timeout
%s BTLE Coordinator altered state: %@ -> %@
%s #myriad Force stopping BTLE scan
%s Activation source: %ld, Time since activation: %f, last election record received time: %llu, current time: %llu, activation expiration time: %llu
%s BTLE task continuation: %d
%s BTLE task MYR_WAIT_EMERGENCY_OR_TASK only stopping advertising, not listening
%s BTLE emergency is being handled
%s BTLE task MYR_WAIT_EMERGENCY_HANDLED only stopping advertising, not listening
%s Waiting for wiprox to be ready in state: %lu
%s starting to scan in state: %lu
%s BTLE notify Myriad win due to state machine error
%s #myriad Context collector returned 0 AFMyriadAdvertisementContextRecords instances
%s #myriad ignoring advert from other deviceGroup %d: %@ data=%@
%s #myriad %@
%s #myriad Suppressing the current device due to late trigger (voicetrigger endtime: %f, advertisement dispatch time: %f, advertisement delay: %f, myriad record count: %ld)
%s #myriad adv dispatch time: %f, voice trigger end time: %f, time since voice trigger: %f (curr time: %llu, time since device boot: %llu), advertisment: %@
%s #myriad Not pushing myriad advertisement context - Valid voicetrigger endtime: %d (curr time: %llu, time since device boot: %llu)
%s #myriad Pushing Myriad advertisement context is complete
%s #myriad Error: %@
%s #myriad current advId: %@ is different from the advId for which the myriad context was dispatched: %@
%s #myriad Not pushing myriad advertisement context - HAL enabled: %d, direct activation: %d
%s BTLE action window trigger time: %@
%s BTLE action window adjusted by slowdown signal %d msecs new time: %@
%s BTLE next action window: %@
%s BTLE Attempt to execute time windowed action when trigger time not initialized
%s endTime: %f targetTime: %f, advInterval: %f, slowDown: %d (ms)
%s adjusted advInterval: %f (secs) device delay: %f (secs), slowDown: %f (secs)
%s adjusted advInterval: %f (secs) adjusted delay: %f (secs), slowDown: %f (secs)
%s BTLE checking if slowdown needed testmsecs=%d msecs=%d state=%@
%s BTLE advertising TEST INDUCED slowdown delay, 2nd pass seen
%s BTLE advertising slowdown finished, advertising delayed trigger
%s BTLE advertising slowdown delay, 2nd pass seen
%s BTLE computed advertising delay: %f finished, interval: %f
%s BTLE slowdown advertising delay: %f finished, interval: %f
%s BTLE ending slowdown advertising, 2nd pass not seen
%s BTLE delay finished, advertising: %@
%s BTLE error: attempting to readvertise %@
%s BTLE starting advert delay timer for %f secs
%s BTLE created slowdown record %@
%s BTLE end advertising summary: %@
%s BTLE summary %lu: %@
%s BTLE emergencyCallSummary: %@
%s BTLE EmergencyCallSummary %lu: %@
%s BTLE Emergency call: this device should handle
%s BTLE Emergency call: This device should NOT handle, another is better
%s BTLE Emergency Call: No device available to handle this call
%s #myriad got attention, ignoring too-soon time limit.
%s #myriad CurrentTime: %f TrigerTime: %f, ElectionAdvertisementTime: %f, triggerDelta: %f, electionAdvertisementRemainingTime: %f [isIntaskTooSoonForVoiceTriggerActivation = %d, isIntaskTooSoonForDirectActivation = %d, currentElectionAdvertisementIsSane = %d]
%s #myriad BTLE in-task continuous voice trigger heard too soon. Ignoring.
%s #myriad BTLE in-task continious voice trigger heard. NOT ignoring.
%s BTLE Updating record table, data= %@, for %@
%s BTLE Updating record table with a late supression ( %hhu -> %hhu), data= %@, for %@
%s BTLE ignoring this advert because one already exists, data= %@, for %@
%s BTLE ignoring decision result callback (state = %@)
%s BTLE reposting result win (state = %@)
%s BTLE ignoring incoming event bad device class for Horseman %@
%s BTLE ignoring as wedged suppress %@
%s BTLE record %@  isSane: %d
%s #myriad WiProx readiness timer initialized
%s #myriad WiProx readiness timer suspended
%s #myriad WiProx readiness timer wait block cleared
%s #myriad BTLE WiProx readiness timer timed out, WiProx not called
%s #myriad BTLE done waiting on WiProx to execute
%s #myriad Method called on unexpected thread (curr:%{private}s expected:%{private}s)
%s #myriad didRequestForBTLEAdvertisement: %s -> %s, didRequestForBTLEScan: %s -> %s
%s #myriad BTLE not ready, waiting to execute for up to %ld msecs (current HeySiri WPState %ld)
%s BTLE entering diagnostic mode
%s BTLE failed to enter diagnostic mode %@
%s BTLE diagnostic mode timer fired
%s BTLE added diagnostic mode timer for %f seconds %@
%s BTLE leaving diagnostic mode
%s BTLE cancelling diagnostic mode timer for %f seconds %@
%s Notification received: %@ (%d)
%s Unable to start app state monitoring because BKSApplicationStateMonitor is nil.
%s BKS assertion was unexpectedly dropped
%s Unable to restart app state monitoring because BKSApplicationStateMonitor is nil.
%s %{public}@ appears to have crashed
%s Could not acquire BKS assertion
%s BKS assertion for %{public}@ timed out after %{public}.2f seconds
%s After timing out, recipient %{public}@ state was %{public}@
%s Couldn't create a SiriTask action %{public}p %{public}@
%s Unable to launch apps because FBSOpenApplicationService is nil %@
%s Unable to take process assertion for background launch because BKSProcessAssertion is nil %@
%s missing expected values dumping everything %@
%s %@ is %@ frontmost=%@
%s #hal serializedBackingStore is of unexpected type or is nil: %@
%s #hal serializedBackingStore is of unexpected type: %@
%s %@ %s %@
%s connection to task service %{public}@ was invalidated
%s connection to task service %{public}@ was interrupted
%s task service was unable to deliver task: %{public}@
%s %@ Sampling: Error while reading plist at location %@ - %@
%s %@ Sampling: currentSamplingDate is nil. Check if ADDictationOnDeviceSampling is getting initialized.
%s Tinker Enablement flow, treat as new user
%s Not a new user. Language Stored: %@, outputVoice stored: %@
%s hasEverSetLanguageCode: %d, error:%@
%s Output voices %@ for default output language %@ for recognition language %@
%s Sync info is missing a key
%s SASyncAppMetaData has no bundleID, but it is required for this key
%s SASyncAppMetaData does not have exactly one -syncSlots, as required for this key
%s SASyncAppMetaData has no -applicationClientIdentifier, as required for this key
%s Unexpected error converting invocation context from plist to dictionary: %@
%s turnId not provided in request info.
%s turnId not provided in speech options.
%s Unexpected product type for CrossDeviceCommandHandled metric: %@
%s Caught an exception %@ while converting metricsContext %@ to Foundation object. 
%s WWAN fallback %@
%s %{public}@
%s %tu
%s logged for key: %@
%s Waiting for attachment %lf
%s Wait finished %d
%s Unable to create XPC connection from %@.
%s Sending attachment message
%s Attachment Reply %d
%s Bad NowPlaying Info, expected %@ for key %@ but got %@
%s infoToNowOffset = %g
%s playbackRate = %@
%s adjusted infoToNowOffset = %g
%s calculatedElapsedTime = %g
%s NowPlaying reports we are playing, but we have no ApplicationDisplayID for who is playing
%s We have a NowPlaying listeningToItem but no ApplicationDisplayID for it %@
%s Media Remote reported that the picked route does NOT have volume control
%s Unknown volume action
%s Best failure for MR command %d is %@
%s MRMediaRemoteCommand %d is not supported by NowPlaying app
%s Found %@ value that is illegal (not a 64 bit integer): %@
%s group=%p ApplicationDisplayID %@
%s Exception when decoding subtitle and audio languages %@
%s Calling -[MRNowPlayingController performRequestWithCompletion:]...
%s Succeeded -[MRNowPlayingController performRequestWithCompletion:] (response = %@)
%s Failed -[MRNowPlayingController performRequestWithCompletion:] (response = %@, error = %@)
%s Calling MRMediaRemoteGetNowPlayingApplicationPlaybackState()...
%s Done MRMediaRemoteGetNowPlayingApplicationPlaybackState() (state = %u)
%s Failed to get response: %@
%s MRMediaRemoteGetNowPlayingClient failed with error %@
%s Bad NowPlaying Info, kMRMediaRemoteNowPlayingInfoUniqueIdentifier gave unexpected item of class %@,  %@
%s No container info
%s Ignoring non-string key %@
%s Processing kMRMediaRemoteNowPlayingCollectionInfoKeyIdentifiers
%s Unexpected non-dictionary value for kMRMediaRemoteNowPlayingCollectionInfoKeyIdentifiers
%s Unexpected non-string value of class %@ for key %@ -- attempting to convert to string
%s Could not make safe value for key %@
%s Got MRMediaRemoteGetMediaPlaybackVolume says %f
%s Media Remote error %@
%s Media Remote reported success
%s Checking if an unsupported skip is unsupported by the app or the content
%s kMRMediaRemoteNowPlayingInfoIsAlwaysLive = %@ %@
%s Reporting SAMPExceededSkipLimitErrorCode instead, because media is always live
%s group=%p No NowPlaying info because nothing is playing right now.
%s group=%p Error getting NowPlaying queue %@
%s group=%p no contentItems
%s group=%p contentItems has %lu items location %ld
%s group=%p previous: %@
%s group=%p next: %@
%s group=%p got NowPlaying info with %@ keys:
%s %p         %@ -> %@:
%s group=%p lastActivationStoppedNowPlayingApp=%d
%s group=%p MRMediaRemoteGetNowPlayingApplicationPlaybackState gave us state %@
%s group=%p Treating kMRPlaybackStateInterrupted as %@
%s Failed to create queue request.
%s Timer %@ is not in notifiedFiringTimerIDs, but isFiring is YES.
%s Timer %@ is in notifiedFiringTimerIDs, but isFiring is NO.
%s Firing timer is not valid: %@
%s Unable to get average power and peak power from audio power provider %@.
%s Unable to get C string of name from %@.
%s Failed to set state to %llu of %s with token %d (status = %u).
%s Failed to get state of %s with token %d (status = %u).
%s Failed to get registration token of %s (status = %u).
%s Registration token of %s is %d.
%s Registration token of %s is invalidated.
%s initialState = %llu
%s token = %d
%s fromState = %llu, toState = %llu
%s state: %@ -> %@
%s %p instanceContext = %@
%s %p Ignored because the connection is invalidated.
%s %p xpcConnection = %@
%s %p localDeviceContext = %@
%s %p reply
%s %p localDeviceContext (old) = %@
%s %p localDeviceContext (new) = %@
%s Asking for context for %@
%s Got context for %@
%s begin
%s end with error %@
%s end
%s Attempting to decrement transaction depth below 0
%s Took %f seconds to access current state.
%s Resetting transaction depth since last client has been invalidated
%s last client was removed before all transactions ended
%s Skipped because transaction depth is %ld
%s hasActiveSession = %d, hasActiveRequest = %d, isListening = %d, isSpeaking = %d
%s Acquired presentation transition assertion.
%s Relinquished presentation transition assertion. (signal = %ld, duration = %f)
%s Attempted to begin a presentation transition when there's already a current presentation transition.
%s Attempted to end a presentation transition when there's no current presentation transition.
%s Initializing HomeAutomationBackgroundRequest with requestInfo: %@ and AFInstanceContext: %@
%s Performing request for HomeAutomationBackgroundRequest: %@
%s Failed to serialize asyncMessage %@: %@
%s Sending xpc message with requestInfo: %@
%s lastPlayedAnnouncement: %@ -> %@
%s snapshot: %@ -> %@
%s No connection.
%s ErrorABCD:%@
%s Error in getHomeUserIdOfRecognizedUserWithCompletion:%@
%s Error in getPreferredMediaUserHomeUserIDWithCompletion:%@
%s Error in homeUserIdToNames:%@
%s Unable to create context object for Siri model object %@; dropping on floor
%s #myriad _AXSAttentionAwarenessFeaturesEnabled %@
%s #myriad isMyriadSelfMetricsEnabled YES
%s Can not infer dictation language with no keyboard language
%s %@ countryCode=%@ siriLanguage=%@
%s %@ is specifically supported as %@
%s %@ is an exact match for a dictation language, using it
%s Could not parse keyboard language, giving up
%s preferences %@ -> %@
%s Could not determine keyboard language-code, returning best-guess: %@
%s %@ is the best-choice in the same base language, using it.
%s No dictation language found
%s Failed getting kern.boottime MIB with sysctlnametomib() %s
%s Failed getting kern.boottime with sysctl() %s
%s Failed getting kern.boottime with sysctlbyname() %s
%s kAudioSessionProperty_ActiveSessionDisplayIDs: %@
%s Error fetching kAudioSessionProperty_ActiveSessionDisplayIDs %@
%s endDate is %@ but not beginDate is nil.
%s endDate is nil but beginDate is %@ and it is more than one hour ago.
%s endDate %@ is earlier than beginDate %@.
%s recencyDuration %f is invalid.
%s Got signal %ld, exiting when clean
%s Using dictation hardcoded fallback %@ for %@
%s Using dictation internal hardcoded fallback %@ for %@
%s mach_timebase_info() failed with %d.
%s machTimebaseInfo.numer = %u, machTimebaseInfo.denom = %u, rate = %f
%s #myriad Pushing Myriad advertisement context %@
%s #myriad Dropped %@ from %@ because there's no device ID.
%s #myriad triggerABCForSubType failed: %@
%s TelephonyUtilities is not available on this platform.
%s #hal redacted: %@ %@
%s Missing assistantId in %@
%s Missing rapportId in %@
%s <AFSiriTask %p>
%s Fatal error sending response - couldn't make XPC connection from endpoint: %@
%s Task %@ failed with error %{public}@, but was unable to communicate that to the response handler: %{public}@
%s Task %@ completed, but was unable to communicate that to the response handler: %{public}@
%s Task %@ unable to communicate usage results to handler: %{public}@
%s the encoded request is in an unexpected format: %@
%s the encoded request failed to decode
%s the encoded request failed to decode - make sure you have linked *all* required frameworks. Exception: %{public}@
%s the encoded response endpoint is in an unexpected format: %{public}@
%s no encoded response endpoint: %{public}@
%s the encoded usage results endpoint is in an unexpected format: %{public}@
%s no encoded usage results endpoint: %{public}@
softlink:r:path:/System/Library/PrivateFrameworks/CarKit.framework/CarKit
softlink:r:path:/System/Library/Frameworks/Intents.framework/Intents
softlink:o:path:/System/Library/Frameworks/CoreServices.framework/CoreServices
softlink:r:path:/System/Library/Frameworks/Intents.framework/Intents
QxS!
AFCoreAnalyticsDeviceContextPayload
NSCopying
NSSecureCoding
NSCoding
AFDictionaryConvertible
NSObject
_AFCoreAnalyticsDeviceContextPayloadMutation
AFCoreAnalyticsDeviceContextPayloadMutating
AFCoreAnalyticsDeviceContextPayloadMutability
AFConnectionAvailabilityObserver
AFNetworkAvailabilityObserver
AFConnection
NSXPCListenerDelegate
AFAudioPowerUpdaterDelegate
AFAccessibilityListening
AFDeviceRingerSwitchListening
AFInterstitialProviderDelegate
Private
Internal
AFConnectionClientServiceDelegate
AFClientServiceDelegate
AFInterstitialProvider
AFInvalidating
_AFInterstitialAction
AFAudioSessionAssertionRemoteAcquisitionService
AFAudioSessionAssertionAcquisitionService
AFUpdateAlarmRequest
AFGetSettingsRequest
AFTestRequestOptions
_AFTestRequestOptionsMutation
AFTestRequestOptionsMutating
AFTestRequestOptionsMutability
AFSiriRingtone
AFSiriPhoneticContactNames
AFDeviceStateConnection
AFExperimentConfiguration
_AFExperimentConfigurationMutation
AFExperimentConfigurationMutating
AFExperimentConfigurationMutability
AFSecurityConnection
AFSecurityService
AFProviderService
AFProviderServiceDelegate
AFQueue
NSFastEnumeration
AFSetSettingsRequest
AFBluetoothWirelessSplitterSessionInfo
_AFBluetoothWirelessSplitterSessionInfoMutation
AFBluetoothWirelessSplitterSessionInfoMutating
AFBluetoothWirelessSplitterSessionInfoMutability
AFSpeechRecordingEventListening
STContactAddress
AFVoiceInfo
AFHomeAccessorySiriDataSharingChangeLogEvent
_AFHomeAccessorySiriDataSharingChangeLogEventMutation
AFHomeAccessorySiriDataSharingChangeLogEventMutating
AFHomeAccessorySiriDataSharingChangeLogEventMutability
AFMutableConversationItem
AFConversationStorable
AFTipKitDonator
AFBundleResourceSupport
_AFBundleResourceURLProviding
AFBundleResourceManager
Convenience
AFFlowServiceConnection
AFPhonemeTranscription
AFTranscriptionType
AFOutputVoiceDescriptor
_AFOutputVoiceDescriptorMutation
AFOutputVoiceDescriptorMutating
AFOutputVoiceDescriptorMutability
_AFAssertionImpl
AFAssertion
_AFAssertionProxy
AFRelinquishableAssertion
AFAssertionCoordinator
AFSetAudioSessionActiveContext
_AFSetAudioSessionActiveContextMutation
AFSetAudioSessionActiveContextMutating
AFSetAudioSessionActiveContextMutability
AFDismissAlarmRequest
AFAssertionContext
_AFAssertionContextMutation
AFAssertionContextMutating
AFAssertionContextMutability
AFRemoteRequest
AFSiriTaskExecution
AFSiriResponseHandling
AFSiriRequestFailureHandling
AFExperimentGroup
_AFExperimentGroupMutation
AFExperimentGroupMutating
AFExperimentGroupMutability
AFInstanceInfo
_AFInstanceInfoMutation
AFInstanceInfoMutating
AFInstanceInfoMutability
AFSiriRequestSucceededResponse
AFWatchdogTimer
AFDisambiguationInfo
AFDisambiguationEvent
AFMultiUserStateSnapshot
_AFMultiUserStateSnapshotMutation
AFMultiUserStateSnapshotMutating
AFMultiUserStateSnapshotMutability
AFMyriadContext
_AFMyriadContextMutation
AFMyriadContextMutating
AFMyriadContextMutability
AFSiriActivationConnection
AFSiriActivationService
AFPhonemeMapper
AFPowerAssertionManager
AFAssertionCoordinatorDelegate
AFGetTimerRequest
AFXPCWrapper
AFAnalyticsObserver
AFLanguageDetectionUserContext
AFAudioSessionAssertionConnection
AFSetTimerRequest
AFGetTimerResponse
AFConversationTransaction
AFError
AFAudioPowerXPCProvider
AFAudioPowerProviding
_AFAudioPowerXPCSharedMemory
AFContextManager
AFEndpointInfo
_AFEndpointInfoMutation
AFEndpointInfoMutating
AFEndpointInfoMutability
AFUserNotificationService
AFUserNotificationServiceDelegate
AFUserNotificationProvider
AFAccessibilityState
_AFAccessibilityStateMutation
AFAccessibilityStateMutating
AFAccessibilityStateMutability
AFPersonalUserSettings
AFUserUtterance
AFUserUtteranceAdditions
AFUserUtteranceSelectionResults
AFSecurityDigestibleChunksProvider
AFSecurityDigestibleChunksProviding
AFClockTimer
_AFClockTimerMutation
AFClockTimerMutating
AFClockTimerMutability
AFAnalyticsConnection
AFAnalyticsServiceDelegate
AFAnalyticsService
AFSyncInfo
AFSpeechTestRequestOptions
_AFSpeechTestRequestOptionsMutation
AFSpeechTestRequestOptionsMutating
AFSpeechTestRequestOptionsMutability
AFSpeechPackage
AFSpeechRecordingAlertBehavior
_AFSpeechRecordingAlertBehaviorMutation
AFSpeechRecordingAlertBehaviorMutating
AFSpeechRecordingAlertBehaviorMutability
AFSpeechInfo
_AFSpeechInfoMutation
AFSpeechInfoMutating
AFSpeechInfoMutability
AFMyriadPerceptualAudioHash
_AFMyriadPerceptualAudioHashMutation
AFMyriadPerceptualAudioHashMutating
AFMyriadPerceptualAudioHashMutability
AFDictionarySchema
AFSettingsService
AFSettingsServiceDelegate
AFMultiUserService
AFSpeechPhrase
AFSpeechUtterance
AFSpeechInterpretation
AFSpeechToken
AFSpeechTokenAdditions
AFDeleteSiriHistoryContext
_AFDeleteSiriHistoryContextMutation
AFDeleteSiriHistoryContextMutating
AFDeleteSiriHistoryContextMutability
AFPreferences
AFObjectCreatedSiriResponse
DictionaryRepresentation
AFConnectionUserInteractionAssertion
AFOpportuneSpeakingModuleDataCollectionSanitizedSpeakable
AFOpportuneSpeakingModuleDataCollection
AFSpeechRecognition
AFAudioState
AFTreeNode
AFAssistedDisambiguationRules
AFSiriTaskContextProvider
AFSiriAppContextProviding
AFDeviceRequestHandlingRecord
_AFDeviceRequestHandlingRecordMutation
AFDeviceRequestHandlingRecordMutating
AFDeviceRequestHandlingRecordMutability
AFConversationError
AFAudioSessionCoordinationSystemInfo
_AFAudioSessionCoordinationSystemInfoMutation
AFAudioSessionCoordinationSystemInfoMutating
AFAudioSessionCoordinationSystemInfoMutability
AFHeadphonesAnnouncementRequestCapabilityProvider
AFNotifyObserverDelegate
AFSettingsDelegate
AFAnnouncementRequestCapabilityProviding
AFMyriadMonitor
AFCoercion
AFConversation
AFBulletinAction
AFMyriadAdvertisementContext
_AFMyriadAdvertisementContextMutation
AFMyriadAdvertisementContextMutating
AFMyriadAdvertisementContextMutability
SiriVOXSounds
AFExperimentForSiriVOXSounds
AFHeartBeat
AFClientConfiguration
_AFClientConfigurationMutation
AFClientConfigurationMutating
AFClientConfigurationMutability
AFSpeakableUtteranceParser
_AFSpeakableUtterancePassThroughProvider
AFSpeakableNamespaceProvider
AFNotifyObserver
AFSUPFunctionProvider
AFDictationService
AFDictationConnection
AFDictationConnectionServiceDelegate
AFDictationServiceDelegate
AFSearchAlarmsResponse
AFCoreAnalyticsLoggingService
AFSiriActivationHandlerAssistantDaemon
AFSiriActivationHandling
AFBluetoothDeviceInfo
_AFBluetoothDeviceInfoMutation
AFBluetoothDeviceInfoMutating
AFBluetoothDeviceInfoMutability
AFSiriTaskUsageResult
AFFeatureFlags
ConfigOverrides
SWEFeatureFlags
Additions
Utility
STTimer
AFCarPlayAnnouncementRequestCapabilityProvider
CARSessionObserving
AFSpeechRecordingAlertPolicy
_AFSpeechRecordingAlertPolicyMutation
AFSpeechRecordingAlertPolicyMutating
AFSpeechRecordingAlertPolicyMutability
AFExperiment
_AFExperimentMutation
AFExperimentMutating
AFExperimentMutability
AFRequestInfo
AFInstanceContext
SubsystemSupport
AFInstanceContextHost
AFUpdateAlarmResponse
AFHomeAccessoryInfo
_AFHomeAccessoryInfoMutation
AFHomeAccessoryInfoMutating
AFHomeAccessoryInfoMutability
AFOpportuneSpeakable
AFClockItemStorage
AFCollectionUtilities
BuiltInContextTypes
AFClientLiteInternal
AFClientLiteClientCommandHandling
AFClientLite
AFSynchronousClientLite
AFClientLiteRemoteCommandHandling
AFMediaRemoteDeviceInfo
AFSiriDebugUIRequest
AFLocalization
AFLocalizationAdditions
AFDictationOptions
AFImagePNGData
AFDataStore
_AFDataStoreEntry
AFBluetoothHeadphoneInEarDetectionState
_AFBluetoothHeadphoneInEarDetectionStateMutation
AFBluetoothHeadphoneInEarDetectionStateMutating
AFBluetoothHeadphoneInEarDetectionStateMutability
AFEnablementConfigurationProviderParameters
_AFEnablementConfigurationProviderParametersMutation
AFEnablementConfigurationProviderParametersMutating
AFEnablementConfigurationProviderParametersMutability
AFConversationStore
AFDeviceContext
AFDeviceContextMetadata
AFSpeechCorrectionInfo
AFMyriadRecord
AFAnalytics
AFAnalyticsEventRecord
SiriCoreSQLiteRecord
Utilities
AFMemoryPressureObserver
AFTriggerlessListeningOptions
AFNetworkAvailability
AFAccount
AFDisambiguationAssistancePrivate
AFManagedStorageService
AFManagedStorageConnection
AFManagedStore
AFOpportuneSpeakingModelServiceProtocol
AFOpportuneSpeakingModelDelegate
AFOpportuneSpeakingModel
AFCreateAlarmResponse
AFCoreAnalyticsCrossDeviceEvent
AFRequestHandlingContext
_AFRequestHandlingContextMutation
AFRequestHandlingContextMutating
AFRequestHandlingContextMutability
AFDismissTimerRequest
AFMyriadAdvertisementContextRecord
AFSiriIncomingCall
AFRemoteRequestWatcher
AFSiriActivationListenerDelegate
AFFuture
AFPineBoardSystemStateObserver
AFDeviceContextService
AFDeviceContextServiceDelegate
AFSafetyBlock
AFOneArgumentSafetyBlock
AFTwoArgumentSafetyBlock
AFThreeArgumentSafetyBlock
AFMultiArgumentSafetyBlock
AFOpportuneSpeakingModelFeedback
AFOpportuneSpeakingModelFeedbackManager
AFMyriadSession
_AFMyriadSessionMutation
AFMyriadSessionMutating
AFMyriadSessionMutability
AFMetrics
AFSiriUserNotificationRequest
AFSiriExternalRequest
AFSiriUserNotificationRequestCapabilityManager
AFAnnouncementRequestCapabilityProvidingDelegate
AFSiriNotificationRequest
BackwardCompatibility
AFSettingsConnection
AFSettingsConnectionServiceDelegate
AFAudioSessionCoordinationDeviceInfo
_AFAudioSessionCoordinationDeviceInfoMutation
AFAudioSessionCoordinationDeviceInfoMutating
AFAudioSessionCoordinationDeviceInfoMutability
AFDictationDiscoverabilitySignalsStreamManager
AFSamplingUtilities
AFMyriadGoodnessScoreOverrideState
_AFMyriadGoodnessScoreOverrideStateMutation
AFMyriadGoodnessScoreOverrideStateMutating
AFMyriadGoodnessScoreOverrideStateMutability
AFSiriActivationHandlerFrontendProcess
Test
STCity
AFUserNotificationAnnouncementSpeakingStateService
AFUserNotificationAnnouncementSpeakingStateServiceDelegate
AFLinkedListItem
AFMyriadMetrics
STSettingChange
AFSiriAnnounceIncomingCallRequest
AFSiriRequest
AFSiriActivationHandlerCoreSpeechDaemon
AFSpeechLatticeMitigatorResult
AFLocationSnapshot
_AFLocationSnapshotMutation
AFLocationSnapshotMutating
AFLocationSnapshotMutability
AFAudioDeviceInfo
_AFAudioDeviceInfoMutation
AFAudioDeviceInfoMutating
AFAudioDeviceInfoMutability
AFModesConfiguration
_AFModesConfigurationMutation
AFModesConfigurationMutating
AFModesConfigurationMutability
AFClockAlarmSnapshot
_AFClockAlarmSnapshotMutation
AFClockAlarmSnapshotMutating
AFClockAlarmSnapshotMutability
AFServiceDeviceContext
_AFServiceDeviceContextMutation
AFServiceDeviceContextMutating
AFServiceDeviceContextMutability
AFSpeechRequestOptions
AFAnalyticsObservationService
AFPluginBundle
AFPluginManager
AFExperimentState
_AFExperimentStateMutation
AFExperimentStateMutating
AFExperimentStateMutability
SISchemaClientTurnBasedEvent
AFSiriHomeAutomationRequestInfo
_AFSiriHomeAutomationRequestInfoMutation
AFSiriHomeAutomationRequestInfoMutating
AFSiriHomeAutomationRequestInfoMutability
AFContextResponse
AFSiriAnnouncementRoute
AFClockTimerSnapshot
_AFClockTimerSnapshotMutation
AFClockTimerSnapshotMutating
AFClockTimerSnapshotMutability
AFExperimentContext
_AFExperimentContextMutation
AFExperimentContextMutating
AFExperimentContextMutability
STSiriMessage
AFDeviceCapabilities
AFHomeAnnouncementSnapshot
_AFHomeAnnouncementSnapshotMutation
AFHomeAnnouncementSnapshotMutating
AFHomeAnnouncementSnapshotMutability
AFSiriTaskService
AFSiriTaskDeliveryHandler
AFSiriTaskDelivering
AFSiriTaskmaster
AFSiriUsageResultHandling
AFSiriRequestHandling
STAlarm
AFTreeNodePropertyListSerialization
AFDeleteAlarmRequest
AFUserNotificationAnnouncementSpeakingStateObserver
AFCallStateSnapshot
_AFCallStateSnapshotMutation
AFCallStateSnapshotMutating
AFCallStateSnapshotMutability
AFDisambiguationStore
AFUpdateMessageRequest
STSiriLocation
AFMemoryInfo
_AFMemoryInfoMutation
AFMemoryInfoMutating
AFMemoryInfoMutability
ClockItem
AFClockItem
AFSiriActivationContext
_AFSiriActivationContextMutation
AFSiriActivationContextMutating
AFSiriActivationContextMutability
ShortDescription
AFAssistantSamplingUtilities
AFAudioSessionAssertionService
AFMyriadGoodnessScoreOverrideContext
AFMyriadGoodnessScoreContext
AFMyriadGoodnessScoreEvaluator
AFSiriActivationListener
AFSiriAnnouncementRequestCapabilityManager
SiriVOXTapToSiriBehavior
AFExperimentForSiriVOXTapToSiriBehavior
AFDeviceRingerSwitchObserver
AFCreateMessageRequest
AFMyriadAccessoryMessage
AFUtteranceSuggestions
AFHomeAccessorySiriDataSharingPropagationLogEvent
_AFHomeAccessorySiriDataSharingPropagationLogEventMutation
AFHomeAccessorySiriDataSharingPropagationLogEventMutating
AFHomeAccessorySiriDataSharingPropagationLogEventMutability
STCall
AFMyriadInstrumentation
AFExperimentServerConfigurationInfo
_AFExperimentServerConfigurationInfoMutation
AFExperimentServerConfigurationInfoMutating
AFExperimentServerConfigurationInfoMutability
AFHomeAnnouncement
_AFHomeAnnouncementMutation
AFHomeAnnouncementMutating
AFHomeAnnouncementMutability
AFShowSettingRequest
AFPeerContentTuple
STSetting
AFServiceContextSnapshot
AFGetSettingsResponse
AFMyriadCoordinator
AFUIApplicationSiriTaskDeliverer
AFUIApplicationSiriTaskHandler
AFAceCommandClientFeedbackEnumerating
ClientFeedbackPresented
AFSpeechParameters
_AFSpeechParametersMutation
AFSpeechParametersMutating
AFSpeechParametersMutability
ContextSnapshot
AFContextSnapshot
AFBulletin
AFDialogPhase
AFCallSiteInfo
_AFCallSiteInfoMutation
AFCallSiteInfoMutating
AFCallSiteInfoMutability
AFAnalyticsTurnBasedInstrumentationContext
Instrumentation
AFMachServiceSiriTaskDeliverer
AFMachServiceSiriTaskHandler
AFInstrumentationObserverConnection
AFShowNextEventRequest
SISchemaClientTurnContext
AFDictationSamplingUtilities
AFObjectUpdatedSiriResponse
AFEnablementConfiguration
AFEnablementFlowConfigurationProvider
AFBundleID
SyncPrivate
AFKeyValueObservingDeliveryOptions
AFKeyValueObserver
AFKeyValueObserving
AssistantAdditions
AFSpeechAcousticFeature
AFSpeechAudioAnalytics
AnalyticsContextVending
AFAnalyticsContextVending
AFFlowService
AFDeviceStateService
AFAggregator
AssistantUI
AFShowTimerRequest
AFSiriTether
AFAudioPlaybackRequest
_AFAudioPlaybackRequestMutation
AFAudioPlaybackRequestMutating
AFAudioPlaybackRequestMutability
AFBundleResource
_AFBundleResourceMutation
AFBundleResourceMutating
AFBundleResourceMutability
AFSiriResponse
AFCreateAlarmRequest
SiriMediaRemoteHelpers
AFMediaRemoteUtilities
AFSearchAlarmsRequest
AFInitiateCallRequest
AFMyriadPreferences
AFAudioSessionCoordinationSnapshot
_AFAudioSessionCoordinationSnapshotMutation
AFAudioSessionCoordinationSnapshotMutating
AFAudioSessionCoordinationSnapshotMutability
AFDeviceContextHistoryConfiguration
_AFDeviceContextHistoryConfigurationMutation
AFDeviceContextHistoryConfigurationMutating
AFDeviceContextHistoryConfigurationMutability
AFConversationItem
AFApplicationContext
_AFApplicationContextMutation
AFApplicationContextMutating
AFApplicationContextMutability
AFPendingSpeechRequestService
AFSharedConfidenceScore
_AFSharedConfidenceScoreMutation
AFSharedConfidenceScoreMutating
AFSharedConfidenceScoreMutability
AFAudioPowerUpdater
AFNotifyStatePublisher
InvocationFeedbacks
AFInvocationFeedbackExperiment
STPersonContactHandle
STPerson
AFClientService
AFBluetoothWirelessSplitterSessionStateObserver
AFDeviceContextConnection
_AFDeviceContextServiceDelegateProxy
AFAppContextAggregator
AFClientPluginManager
AFClientPlugin
AceFactorySupport
VSAdditions
AFAnalyticsObserverConnection
AFSystemStateSnapshot
_AFSystemStateSnapshotMutation
AFSystemStateSnapshotMutating
AFSystemStateSnapshotMutability
AFApplicationContextSnapshot
_AFApplicationContextSnapshotMutation
AFApplicationContextSnapshotMutating
AFApplicationContextSnapshotMutability
AFOutputVoiceColorDescriptor
_AFOutputVoiceColorDescriptorMutation
AFOutputVoiceColorDescriptorMutating
AFOutputVoiceColorDescriptorMutability
AFContextRequest
AFSiriClientStateManager
_AFSiriClientState
AFSiriAcousticIDRequest
AFSiriMusicSubscriptionLeaseTakenRequest
AFSiriMusicSmartPlayRequest
AFSiriAceRequest
AFSiriHomeAutomationBackgroundRequest
AFSiriActivationRequest
AFHomeAnnouncementObserver
AudioAnalytics
AFSpeechSynthesisRecord
_AFSpeechSynthesisRecordMutation
AFSpeechSynthesisRecordMutating
AFSpeechSynthesisRecordMutability
AFHomeInfo
_AFHomeInfoMutation
AFHomeInfoMutating
AFHomeInfoMutability
AFInterstitialConfiguration
_AFInterstitialConfigurationMutation
AFInterstitialConfigurationMutating
AFInterstitialConfigurationMutability
AFMultiUserConnection
STSiriContext
AFAnalyticsEvent
AFSetSettingsResponse
AFSiriActivationResult
_AFSiriActivationResultMutation
AFSiriActivationResultMutating
AFSiriActivationResultMutability
AFCommandExecutionInfo
_AFCommandExecutionInfoMutation
AFCommandExecutionInfoMutating
AFCommandExecutionInfoMutability
SISchemaClientAnyEvent
AMOSExtensions
AFConnectionEntitlementCache
AssistantServices
AFPairedBluetoothDevicesObserver
AFConversationInsertion
AFMediaPlaybackStateSnapshot
_AFMediaPlaybackStateSnapshotMutation
AFMediaPlaybackStateSnapshotMutating
AFMediaPlaybackStateSnapshotMutability
STSiriModelObject
AFInterstitialCommandWrapper
AFChildConversationItemList
AFMyriadAdvertisementContextManager
AFRequestCompletionOptions
AFApplicationInfo
AFMyriadEmergencyCallPunchout
AFClockAlarm
_AFClockAlarmMutation
AFClockAlarmMutating
AFClockAlarmMutability
AFSetAudioSessionActiveResult
_AFSetAudioSessionActiveResultMutation
AFSetAudioSessionActiveResultMutating
AFSetAudioSessionActiveResultMutability
AFContextDonationService
AFDeviceContextConnectionDelegate
AFContextDonation
AFSyncSnapshot
AFShowAlarmRequest
AFPeerInfo
_AFPeerInfoMutation
AFPeerInfoMutating
AFPeerInfoMutability
AFClientInfo
_AFClientInfoMutation
AFClientInfoMutating
AFClientInfoMutability
AFPeerMap
AFSiriTask
BSXPCCoding
AFAccessibilityObserver
init
copy
_descriptionWithIndent:
description
initWithFormat:
arrayWithObjects:count:
componentsJoinedByString:
hash
nearbyProductType
isEqual:
proximity
alarmFiring
timerFiring
playbackState
playbackRecency
homeAnnouncementState
homeAnnouncementRecency
nearbyDevicesRequestIdentifier
targetedResult
contextIdentifier
decodeObjectOfClass:forKey:
initWithNearbyProductType:proximity:alarmFiring:timerFiring:playbackState:playbackRecency:homeAnnouncementState:homeAnnouncementRecency:nearbyDevicesRequestIdentifier:targetedResult:contextIdentifier:
encodeObject:forKey:
objectForKey:
setObject:forKey:
supportsSecureCoding
copyWithZone:
encodeWithCoder:
initWithCoder:
TB,R
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
initWithDictionaryRepresentation:
buildDictionaryRepresentation
.cxx_destruct
_nearbyProductType
_proximity
_alarmFiring
_timerFiring
_playbackState
_playbackRecency
_homeAnnouncementState
_homeAnnouncementRecency
_nearbyDevicesRequestIdentifier
_targetedResult
_contextIdentifier
T@"NSString",R,C,N,V_nearbyProductType
T@"NSString",R,C,N,V_proximity
T@"NSNumber",R,C,N,V_alarmFiring
T@"NSNumber",R,C,N,V_timerFiring
T@"NSString",R,C,N,V_playbackState
T@"NSNumber",R,C,N,V_playbackRecency
T@"NSString",R,C,N,V_homeAnnouncementState
T@"NSNumber",R,C,N,V_homeAnnouncementRecency
T@"NSString",R,C,N,V_nearbyDevicesRequestIdentifier
T@"NSString",R,C,N,V_targetedResult
T@"NSString",R,C,N,V_contextIdentifier
initWithBaseModel:
setNearbyProductType:
setProximity:
setAlarmFiring:
setTimerFiring:
setPlaybackState:
setPlaybackRecency:
setHomeAnnouncementState:
setHomeAnnouncementRecency:
setNearbyDevicesRequestIdentifier:
setTargetedResult:
setContextIdentifier:
generate
_baseModel
_mutationFlags
mutatedCopyWithMutator:
newWithBuilder:
addObject:
count
countByEnumeratingWithState:objects:count:
length
unsignedIntegerValue
defaultCenter
postNotificationName:object:
networkAvailability:isAvailable:
initWithUTF8String:
setImagePath:
setSymbolName:
defaultContext
initWithInstanceContext:
sharedPreferences
initWithTargetQueue:instanceContext:
initWithTargetQueue:
errorWithCode:
_connectionFailedWithError:
_clearConnection
dealloc
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
_stopInputAudioPowerUpdates
_siriClientStateManager
beginListeningForClient:
endListeningForClient:
_requestWillBeginWithRequestClass:isSpeechRequest:speechRequestOptions:requestInfo:isBackgroundRequest:analyticsEventProvider:
_willStartRequestWithSpeech:speechRequestOptions:requestInfo:analyticsEventProvider:
_tellDelegateRequestWillStart
_scheduleRequestTimeoutForReason:
_beginInterstitialsForReason:
_endInterstitialsForReason:
_cancelRequestTimeoutForReason:
assistantConnection:startUIRequestWithText:completion:
assistantConnection:startUIRequestWithInfo:completion:
_enqueueInterstitialCommand:
aceId
setRefId:
_dispatchCommand:isInterstitial:interstitialPhase:interstitialDelay:reply:
assistantConnection:receivedCommand:completion:
logEventWithType:context:contextNoCopy:
_pauseRequestTimeoutForReason:
timeIntervalSinceReferenceDate
processInfo
systemUptime
reportIssueForType:subtype:context:
_resumeRequestTimeoutForReason:
encodedClassName
shouldSpeak
_tellDelegateShouldSpeakChanged:
assistantConnectionDidChangeAudioRecordingPower:
initWithXPCWrapper:
initWithProvider:queue:frequency:delegate:
beginUpdate
_dispatchCallbackGroupBlock:
endUpdate
invalidate
_tellDelegateAudioSessionIDChanged:
isEqualToString:
sharedManager
assistantConnectionRequestWillStart:
_willFailRequestWithError:
assistantConnection:requestFailedWithError:requestClass:
_willCompleteRequest
assistantConnectionRequestFinished:
_requestDidEnd
_checkAndSetIsCapturingSpeech:
assistantConnection:shouldSpeak:
assistantConnection:didChangeAudioSessionID:
logEventWithType:context:
assistantConnectionWillStartAcousticIDRequest:
assistantConnectionDidDetectMusic:
numberWithBool:
dictionaryWithObjects:forKeys:count:
assistantConnection:didFinishAcousticIDRequestWithSuccess:
assistantConnection:setUserActivtiyInfoAndMakeCurrent:webpageURL:
assistantConnectionInvalidateCurrentUserActivity:
assistantConnection:wantsToCacheImage:
assistantConnection:extensionRequestWillStartForApplication:
assistantConnection:extensionRequestFinishedForApplication:error:
assistantConnectionAudioSessionDidBeginInterruption:userInfo:
assistantConnectionAudioSessionDidBeginInterruption:
assistantConnectionAudioSessionDidEndInterruption:shouldResume:userInfo:
assistantConnectionAudioSessionDidEndInterruption:shouldResume:
assistantConnection:willStartAudioPlaybackRequest:
assistantConnection:didStartAudioPlaybackRequest:
assistantConnection:didStopAudioPlaybackRequest:error:
assistantConnection:willProcessStartPlayback:intent:completion:
assistantConnection:willProcessStartPlayback:
assistantConnection:startPlaybackDidFail:
assistantConnection:audioSessionWillBecomeActive:
assistantConnection:audioSessionDidBecomeActive:
assistantConnection:willProcessAppLaunchWithBundleIdentifier:
assistantConnection:appLaunchFailedWithBundleIdentifier:
assistantConnection:speechRecordingWillBeginWithInputAudioPowerXPCWrapper:
assistantConnectionSpeechRecordingWillBegin:
assistantConnection:speechRecordingDidBeginOnAVRecordRoute:audioSessionID:
assistantConnection:speechRecordingDidBeginOnAVRecordRoute:
assistantConnection:speechRecordingDidChangeAVRecordRoute:
assistantConnectionSpeechRecordingDidDetectStartpoint:
assistantConnection:speechRecordingPerformTwoShotPromptWithType:completion:
stringWithFormat:
errorWithCode:description:underlyingError:
assistantConnectionSpeechRecordingDidEnd:
assistantConnectionSpeechRecordingDidCancel:
assistantConnection:speechRecordingDidFail:
assistantConnection:speechRecognized:
assistantConnection:recognizedAdditionalSpeechInterpretation:refId:
assistantConnection:recognitionUpdateWithPhrases:utterances:refId:
assistantConnection:recognitionUpdateWillBeginForTask:
assistantConnection:speechRecognizedPartialResult:
assistantConnection:speechRecognitionDidFail:
setAccessibilityState:
setDeviceRingerSwitchState:
_handleInterstitialPhase:fromProvider:displayText:speakableText:expectedDelay:context:completion:
beginTransaction
_tellSpeechDelegateRecordingDidFail:
_completeRequestWithUUID:forReason:error:
endTransaction
createXPCConnectionWithMachServiceName:options:
setInvalidationHandler:
_updateState
_updateClientConfiguration
setInterruptionHandler:
_setQueue:
setRemoteObjectInterface:
setExportedInterface:
initWithConnection:targetQueue:
setExportedObject:
resume
_invokeRequestTimeoutForReason:
initWithTimeoutInterval:onQueue:timeoutHandler:
start
_clientService
cancelRequestForReason:withError:
stop
cancel
_extendRequestTimeoutForReason:
_setShouldSpeak:
requestShouldSpeakStateWithReply:
numberWithUnsignedInt:
_setAudioSessionID:
requestStateUpdateWithReply:
_clientConfiguration
setConfiguration:
activationEvent
startRequest
initWithUUIDString:
startLocalRequest
UUID
beginRequestWithUUID:forClient:
_willCancelRequest
UUIDString
date
timeIntervalSince1970
numberWithDouble:
_startRequestMetricSettings
logEvent:
turnIdentifier
_shouldEmitUEIRequestLinkForRequestInfo:
activationEventTime
activationEventMachAbsoluteTime
logSiriSpeechRequestStarted
logSiriOtherRequestStarted
_updateStateIfNotInSync
sharedObserver
addListener:
endSessionForClient:
logSiriRequestCancelled
removeListener:
endRequestWithUUID:forClient:
domain
code
errorWithDomain:code:userInfo:
logSiriRequestFailedWithError:
reportIssueForError:type:subtype:context:
logSiriRequestSucceeded
recordAWDSuccessMetrics
willPresentUsefulUserResultAtDate:
enqueueObject:
isDeviceInStarkMode
isDeviceInCarDNDMode
initWithStyle:recordRoute:isVoiceTrigger:isDucking:isTwoShot:speechEndHostTime:context:preferences:delegate:
dequeueObject
isLocaleIdentifierNativelySupported:
siriIsSupportedForLanguageCode:productName:productVersion:error:
containsObject:
sharedAvailability
addObserver:
beginMonitoringAvailability
isAvailable
isNetworkAvailable
currentLanguageCode
isSiriUODAvailableForLanguage:
removeObserver:
languageCode
outputVoice
_willEndSession
currentCoordinator
endTask
endSession
invalidateClient:
preheatWithStyle:forOptions:
_clientServiceWithErrorHandler:
boostedPreheatWithStyle:completion:
forceAudioSessionActiveWithOptions:completion:
forceAudioSessionActiveWithOptions:reason:completion:
forceAudioSessionActiveWithOptions:reason:speechRequestOptions:completion:
setOptions:
setReason:
setSpeechRequestOptions:
audioSessionID
error
forceAudioSessionActiveWithContext:completion:
setAudioSessionID:
errorWithCode:description:
setError:
initWithBlock:defaultValue:
invokeWithValue:
reason
beginSpeakingForClient:
endSpeakingForClient:
initWithBlock:
invokeWithSignal:
forceAudioSessionInactiveWithOptions:completion:
resumeInterruptedAudioPlaybackIfNeeded
willPresentUIWithReply:
beginSessionForClient:
didDismissUI
setLockState:showingLockScreen:
setIsDeviceInStarkMode:
setIsDeviceInCarDNDMode:
setAreAnnouncementRequestsPermittedByPresentationWhileActive:
setIsDeviceWatchAuthenticated:
setActivationEvent:
setText:
_startRequestWithInfo:
setLegacyDirectActionIdentifier:
setHandoffRequestData:
_startRequestWithAceCommand:turnIdentifier:suppressAlert:
startRequestWithCorrectedText:forSpeechIdentifier:userSelectionResults:turnIdentifier:
setCorrectedSpeech:
setCorrectedSpeechContext:
setTurnIdentifier:
combinedRank
setCombinedRank:
combinedScore
setCombinedScore:
interactionId
setInteractionId:
onDeviceUtterancesPresent
setOnDeviceUtterancesPresent:
originalRank
setOriginalRank:
originalScore
setOriginalScore:
previousUtterance
setPreviousUtterance:
sessionId
setSessionId:
utteranceSource
setUtteranceSource:
speechRequestOptions
_requestWillBeginWithRequestClass:isSpeechRequest:speechRequestOptions:requestInfo:analyticsEventProvider:
startRequestWithInfo:completion:
setValue:forKey:
alwaysShowRecognizedSpeech
siriResponseShouldAlwaysPrint
alwaysObscureBackgroundContentWhenActive
useDeviceSpeakerForTTS
_metricContextValueForUseDeviceSpeakerForTTS:
setStartLocalRequest:
setStartRequest:
startRecordingAndGetContinueBlockForPendingSpeechRequestWithOptions:
logSiriInvokedVia:
startRecordingForPendingSpeechRequestWithOptions:requestId:completion:
pendCallbacksUntilAfterContinuation
continuePendingSpeechRequestWithId:fromTimestamp:
invoke
serverCommandId
startSpeechPronunciationRequestWithOptions:context:completion:
startAcousticIDRequestWithOptions:context:completion:
cancelRequest
cancelRequestForReason:
userInfo
reportIssueForError:type:context:
stopSpeechWithOptions:
stopRecordingHostTime
updateSpeechOptions:
rollbackClearContext
rollbackRequest
_unsafeAveragePower
_unsafePeakPower
sendGenericAceCommand:turnIdentifier:conflictHandler:
setAceId:
commands
dictionary
performGenericAceCommand:interruptOutstandingRequest:reply:
refId
removeObjectForKey:
getDeferredObjectsWithIdentifiers:completion:
allValues
setWithArray:
cacheIdentifier
deserializeCacheItems:completion:
getSerializedCachedObjectsWithIdentifiers:completion:
getRemoteClockTimerSnapshotWithCompletion:
clearContext
willSetApplicationContextWithRefId:
setApplicationContext:
fetchAppicationContextForApplicationInfo:supplementalContext:refID:
setOverriddenApplicationContext:withContext:
setAlertContextDirty
prepareForPhoneCall
telephonyRequestCompleted
willPresentUsefulUserResultWithType:forCommand:
_willPresentUsefulUserResultWithType:
startAudioPlaybackRequest:options:reply:
stopAudioPlaybackRequest:immediately:
stopAllAudioPlaybackRequests:
updateSpeechSynthesisRecord:
adviseSessionArbiterToContinueWithPreviousWinner:
_fetchShouldSpeak:
initialize
assistantIsSupportedForLanguageCode:error:
siriIsSupportedForLanguageCode:deviceProductVersion:error:
assistantIsSupported
stopMonitoringAvailability
defrost
listener:shouldAcceptNewConnection:
audioPowerUpdaterDidUpdate:averagePower:peakPower:
accessibilityObserver:stateDidChangeFrom:to:
deviceRingerObserver:didChangeState:
interstitialProvider:handlePhase:displayText:speakableText:expectedDelay:context:completion:
setDelegate:
_startUIRequestWithText:completion:
_startUIRequestWithInfo:completion:
_handleCommand:reply:
_aceConnectionWillRetryOnError:
_startInputAudioPowerUpdatesWithXPCWrapper:
_setRecordRoute:
_markIsDucking
_markIsTwoShot
_markSpeechRecognized
_updateSpeechEndHostTime:
_tellDelegateWillStartAcousticIDRequest
_tellDelegateDidDetectMusic
_tellDelegateDidFinishAcousticIDRequestWithSuccess:
_tellDelegateSetUserActivityInfo:webpageURL:
_tellDelegateInvalidateCurrentUserActivity
_tellDelegateCacheImage:
_tellDelegateExtensionRequestWillStartForApplication:
_tellDelegateExtensionRequestFinishedForApplication:error:
_tellDelegateAudioSessionDidBeginInterruptionWithUserInfo:
_tellDelegateAudioSessionDidEndInterruption:userInfo:
_tellDelegateAudioPlaybackRequestWillStart:
_tellDelegateAudioPlaybackRequestDidStart:
_tellDelegateAudioPlaybackRequestDidStop:error:
_tellDelegateWillProcessStartPlayback:intent:completion:
_tellDelegateStartPlaybackDidFail:
_tellDelegateAudioSessionWillBecomeActive:
_tellDelegateAudioSessionDidBecomeActive:
_tellDelegateWillProcessAppLaunchWithBundleIdentifier:
_tellDelegateFailedToLaunchAppWithBundleIdentifier:
_tellSpeechDelegateRecordingWillBeginWithInputAudioPowerXPCWrapper:
_tellSpeechDelegateRecordingDidBeginOnAVRecordRoute:audioSessionID:
_tellSpeechDelegateRecordingDidChangeAVRecordRoute:
_tellSpeechDelegateRecordingDidDetectStartpoint
_tellSpeechDelegateToPerformTwoShotPromptWithType:reply:
_tellSpeechDelegateRecordingDidEnd
_tellSpeechDelegateRecordingDidCancel
_tellSpeechDelegateSpeechRecognized:
_tellSpeechDelegateRecognizedAdditionalSpeechInterpretation:refId:
_tellSpeechDelegateRecordingDidUpdateRecognitionPhrases:utterances:refId:
_tellSpeechDelegateRecognitionUpdateWillBeginForTask:
_tellSpeechDelegateSpeechRecognizedPartialResult:
_tellSpeechDelegateRecognitionDidFail:
_connection
_extendExistingRequestTimeoutForReason:
preheatWithStyle:
forceAudioSessionActive
acquireAudioSessionWithContext:completion:
forceAudioSessionInactive
willPresentUI
setLockState:screenLocked:
setCarDNDActive:
setModesConfiguration:
setAnnouncementRequestsPermittedByPresentationWhileActive:
setWatchAuthenticated:
setShouldWaitForMyriad:
setMyriadDecisionResult:
setVoiceOverIsActive:
startRequestWithText:
startDirectActionRequestWithString:
startContinuationRequestWithUserInfo:
startRequestWithAceCommand:
startRequestWithCorrectedText:forSpeechIdentifier:userSelectionResults:
startRequestWithInfo:
startRequestWithInfo:activationEvent:
startSpeechRequestWithOptions:
startRecordingForPendingSpeechRequestWithOptions:completion:
startSpeechPronunciationRequestWithOptions:pronunciationContext:
startAcousticIDRequestWithOptions:
cancelSpeech
failRequestWithError:
stopSpeech
recordUIMetrics:
recordRequestMetric:withTimestamp:
isRecording
hasActiveRequest
averagePower
peakPower
sendGenericAceCommand:
sendGenericAceCommand:conflictHandler:
sendReplyCommand:
getCachedObjectsWithIdentifiers:completion:
setApplicationContextForApplicationInfos:withRefId:
setApplicationContextForApplicationInfos:
setAlertContextWithBulletins:
usefulUserResultWillPresent
willPresentUsefulUserResultWithType:
checkLanguageReady:completion:
startAudioPlaybackRequest:options:completion:
fetchShouldSpeak:
_speechRecordingDidFailWithError:
_willStopRecordingWithSignpostID:
acquireUserInteractionAssertion
delegate
speechDelegate
setSpeechDelegate:
_targetQueue
_outstandingRequestClass
_clientID
_initiationCallSiteInfo
_cachedBulletins
_activeRequestUUID
_activeRequestType
_activeRequestUsefulUserResultType
_requestTimeoutTimer
_requestCompletion
_activeRequestActivationEvent
_activeRequestSpeechEvent
_activeRequestHasSpeechRecognition
_activeRequestIsDucking
_activeRequestIsTwoShot
_activeRequestBeginTime
_activeRequestSpeechEndHostTime
_activeRequestNumberOfPresentedInterstitials
_activeRequestStartSpeechTimeRequested
_activeRequestStartSpeechTimeAPICalled
_activeRequestStopSpeechTimeRequested
_activeRequestStopSpeechTimeAPICalled
_activeRequestSpeechRecordingEndTimeInterval
_activeRequestSpeechRecognitionTimeInterval
_activeRequestInitialInterstitialBeginTimeInterval
_activeTurnIdentifier
_replyHandlerForAceId
_stateInSync
_shouldSpeak
_isCapturingSpeech
_hasOutstandingRequest
_audioSessionID
_recordRoute
_playbackRoute
_inputAudioPowerUpdater
_interstitialProvider
_interstitialCommandQueue
_clientConfigurationIsInSync
_voiceOverIsActive
_lastRetryError
_pendingSpeechRequestCounter
_speechCallbackGroup
_uufrID
_preferences
_instanceContext
_analytics
_activePlaybackCount
_delegate
_speechDelegate
T@"<AFAssistantUIService>",W,N,V_delegate
T@"<AFSpeechDelegate>",W,N,V_speechDelegate
TB,R,N
startSpeechRequestWithSpeechFileAtURL:isNarrowBand:
_startSpeechWithURL:isNarrowBand:
_requestBarrierWithReply:
_broadcastCommandDictionary:
startSpeechRequestWithSpeechFileAtURL:
requestBarrier:
sendFeedbackToAppPreferencesPredictorForMetricsContext:selectedBundleId:
broadcastCommandDictionary:
_barrierWithReply:
_clearAssistantInfoForAccountIdentifier:
remoteObjectProxy
remoteObjectProxyWithErrorHandler:
currentState
state
initWithAccessibilityState:deviceRingerSwitchState:isDeviceInCarDNDMode:isDeviceInStarkMode:isDeviceWatchAuthenticated:areAnnouncementRequestsPermittedByPresentationWhileActive:outputVolume:tapToSiriAudioPlaybackRequest:twoShotAudioPlaybackRequest:deviceSetupFlowBeginDate:deviceSetupFlowEndDate:
_barrier
_clearAssistantInfoForAccountWithIdentifier:
startUIRequest
userDataSyncNeeded
_connectionDelegate
assistantConnection:openApplicationWithBundleID:URL:completion:
assistantConnection:openURL:completion:
assistantConnectionDismissAssistant:
assistantConnection:dismissAssistantWithReason:
assistantConnection:didHandleQuickStopWithAction:
shouldSpeakChanged:
audioSessionIDChanged:
requestHandleCommand:reply:
requestRequestedOpenApplicationWithBundleID:URL:reply:
requestRequestedOpenURL:reply:
requestRequestedDismissAssistant
requestRequestedDismissAssistantWithReason:
quickStopWasHandledWithActions:
acousticIDRequestWillStart
musicWasDetected
acousticIDRequestDidFinishWithSuccess:
setUserActivityInfo:webpageURL:
invalidateCurrentUserActivity
cacheImage:
extensionRequestWillStartForApplication:
extensionRequestFinishedForApplication:error:
startUIRequestWithText:completion:
startUIRequestWithInfo:completion:
getBulletinContext:
speechRecordingWillBeginWithInputAudioPowerXPCWrapper:reply:
speechRecordingDidBeginOnAVRecordRoute:audioSessionID:reply:
speechRecordingDidChangeAVRecordRoute:isDucking:isTwoShot:speechEndHostTime:reply:
speechRecordingStartpointDetectedWithReply:
speechRecordingPerformTwoShotPromptWithType:reply:
speechRecordingDidEndWithReply:
speechRecordingDidCancelWithReply:
speechRecordingDidFail:reply:
speechRecognized:
speechRecognizedAdditionalInterpretation:refId:
speechRecognizedPartialResult:
speechRecognitionDidFail:
speechRecordingDidUpdateRecognitionPhrases:utterances:refId:
speechRecordingWillBeginRecognitionUpdateForTask:
willStopRecordingWithSignpostID:
aceConnectionWillRetryOnError:
audioSessionDidBeginInterruptionWithUserInfo:
audioSessionDidEndInterruption:userInfo:
audioPlaybackRequestWillStart:
audioPlaybackRequestDidStart:
audioPlaybackRequestDidStop:error:
willProcessStartPlayback:intent:completion:
startPlaybackDidFail:
audioSessionWillBecomeActive:
audioSessionDidBecomeActive:
willProcessAppLaunchWithBundleIdentifier:
appLaunchFailedWithBundleIdentifier:
requestDidReceiveCommand:reply:
sharedAnalytics
logInstrumentation:machAbsoluteTime:turnIdentifier:
initWithNSUUID:
setMteRequestId:
af_dialogPhase
isReflectionDialogPhase
isErrorDialogPhase
isAcknowledgementDialogPhase
setUufrReadySource:
setAceCommandClass:
setRequestStatus:
setUnderlyingError:
setUnderUnderlyingError:
numberWithInteger:
stringValue
setErrorCode:
setErrorDomain:
setExists:
setStartedOrChanged:
setHasStartedOrChanged:
setEnded:
setHasEnded:
initWithDictionary:
integerValue
currentContext
bestSupportedLanguageCodeForLanguageCode:
gender
defaultGenderForOutputVoiceLanguageCode:
initWithStyle:languageCode:gender:recordRoute:isVoiceTrigger:isDucking:isTwoShot:speechEndHostTime:
mutableCopy
_performNextActionWithExpectedDelay:
_invalidate
objectAtIndex:
removeObjectAtIndex:
doubleValue
phase
duration
displayKey
sharedInstance
bundleForClass:
localizedStringForKey:gender:table:bundle:languageCode:
speakableKey
initWithStyle:recordRoute:isVoiceTrigger:isDucking:isTwoShot:speechEndHostTime:context:delegate:
_queue
_configuration
_pendingActions
_context
initWithPhase:displayKey:speakableKey:
initWithDuration:
_phase
_displayKey
_speakableKey
_duration
Tq,R,N,V_phase
T@"NSString",R,C,N,V_displayKey
T@"NSString",R,C,N,V_speakableKey
Td,R,N,V_duration
style
isVoiceTrigger
isDucking
isTwoShot
speechEndHostTime
stringByAppendingString:
hasPrefix:
substringFromIndex:
rangeOfString:
dictionaryArrayWithAceObjectArray:
setChatIdentifier:
setOutgoing:
setDisplayText:
setData:
setObject:
setMsgRecipients:
setFullName:
setEmailAddress:
setEmails:
setNumber:
setPhones:
timestamp
setTimestamp:
effectiveDate
setEffectiveDate:
expirationDuration
setExpirationDuration:
setUserInfo:
initWithInstanceContext:acquisitionContext:relinquishmentHandler:
acquireAudioSessionAssertionWithContext:relinquishmentHandler:
processIdentifier
numberWithInt:
processName
addEntriesFromDictionary:
firstObject
_initWithRequest:
decodeObjectOfClasses:forKey:
alarm
createResponse
alarms
setAlarms:
_alarms
T@"NSArray",C,N,V_alarms
settings
setSettings:
_settings
T@"NSArray",C,N,V_settings
requestPath
inputOrigin
isEyesFree
initWithRequestPath:inputOrigin:isEyesFree:
_requestPath
_inputOrigin
_isEyesFree
Tq,R,N,V_requestPath
T@"NSString",R,C,N,V_inputOrigin
T@"NSNumber",R,C,N,V_isEyesFree
setRequestPath:
setInputOrigin:
setIsEyesFree:
initWithLanguageCode:
currentLocale
assistantIsEnabled
_bestVoiceInfoWithCurrentLocale:
_generateSpokenTextForContacts:voiceLanguage:displayedCallerID:callerIDType:callDestinationID:callDestinationIDType:callServiceSpeakableName:
_spokenTextForContacts:callServiceSpeakableName:languageCode:
_spokenTextForCallerID:ofType:rawCaller:rawCallerType:languageCode:
_spokenTextForCallDestinationID:ofType:callServiceSpeakableName:languageCode:
_phoneticNamesForContact:languageCode:
spokenName
_spokenTextForOneContact:callServiceSpeakableName:languageCode:
givenName
familyName
lastObject
_spokenTextForTwoContacts:callServiceSpeakableName:languageCode:
stringByReplacingOccurrencesOfString:withString:
localeWithLocaleIdentifier:
setLocale:
stringFromNumber:
_spokenTextForThreeContacts:callServiceSpeakableName:languageCode:
numberWithUnsignedLong:
_escapeCallerIDString:forType:
_escapeCallDestinationIDString:forType:
valueForKey:
dataUsingEncoding:
JSONObjectWithData:options:error:
_phoneticInfoForContact:languageCode:firstName:middleName:lastName:nickname:
stringByReplacingPhonemesInString:
pronunciationGivenName
pronunciationFamilyName
phoneticGivenName
phoneticMiddleName
phoneticFamilyName
setLanguageCode:
setGivenName:
middleName
setMiddleName:
setFamilyName:
nickname
setNickname:
organizationName
setOrganizationName:
initWithContacts:
textToSpeak
contacts
setContacts:
displayedCallerID
setDisplayedCallerID:
callerIDType
setCallerIDType:
callServiceSpeakableName
setCallServiceSpeakableName:
callDestinationID
setCallDestinationID:
callDestinationIDType
setCallDestinationIDType:
voiceInfo
_languageMismatch
_voiceLanguage
_contacts
_displayedCallerID
_callerIDType
_callServiceSpeakableName
_callDestinationID
_callDestinationIDType
_voiceInfo
T@"NSArray",&,N,V_contacts
T@"NSString",C,N,V_displayedCallerID
Tq,N,V_callerIDType
T@"NSString",C,N,V_callServiceSpeakableName
T@"NSString",C,N,V_callDestinationID
Tq,N,V_callDestinationIDType
T@"AFVoiceInfo",R,N,V_voiceInfo
T@"NSString",R,N
_givenName
_middleName
_familyName
_nickname
_organizationName
_languageCode
T@"NSString",C,N,V_givenName
T@"NSString",C,N,V_middleName
T@"NSString",C,N,V_familyName
T@"NSString",C,N,V_nickname
T@"NSString",C,N,V_organizationName
T@"NSString",C,N,V_languageCode
localizedStringForKey:table:bundle:languageCode:
sharedConnection
fetchSiriKitApplicationsWithNotificationPreviewRestrictionsWithCompletion:
invokeMethodOnRemoteWithBlock:onError:
getPersonalSettingsForSharedUserID:completion:
fetchSiriKitAppIdentifiersWithNotificationPreviewRestrictionsWithCompletion:
type
identifier
version
controlGroup
experimentGroups
salt
setWithObjects:
initWithType:identifier:version:controlGroup:experimentGroups:salt:
initWithCapacity:
_type
_identifier
_version
_controlGroup
_experimentGroups
_salt
Tq,R,N,V_type
T@"NSString",R,C,N,V_identifier
T@"NSString",R,C,N,V_version
T@"AFExperimentGroup",R,C,N,V_controlGroup
T@"NSArray",R,C,N,V_experimentGroups
T@"NSString",R,C,N,V_salt
setType:
setIdentifier:
setVersion:
setControlGroup:
setExperimentGroups:
setSalt:
_invalidateConnection
_dispatchCallbackForProcessedData:error:completion:
_processData:usingProcedure:completion:
_dispatchCallbackForProcessedDataMap:errorMap:completion:
_processDataMap:usingProcedure:completion:
setKeychainValue:forKey:accountIdentifier:completion:
setInternalAuthAppleConnectServiceTicket:completion:
setInternalAuthSessionToken:completion:
internalAuthAppleConnectServiceTicket:
internalAuthSessionToken:
_connectionInterrupted
_connectionInvalidated
processData:usingProcedure:completion:
processDataMap:usingProcedure:completion:
_connectionQueue
_callbackQueue
doCommandForServicePath:className:infoDictionary:executionInfo:reply:
beginSyncForServicePath:className:requestUUID:info:reply:
fetchCurrentSyncSnapshotForServicePath:className:key:completion:
clearDomainObjectsForServicePath:className:
preheatBundleForServicePath:
runMaintenanceWorkForServicePath:className:completion:
reloadServiceBundleAtPath:
interfaceWithProtocol:
syncChunksWithPreAnchor:postAnchor:updates:deletes:validity:forRequestUUID:reply:
openURL:reply:
dismissAssistant
dismissAssistantWithReason:
getLockStateWithReply:
getCarDNDModeWithReply:
getStarkModeWithReply:
getWatchAuthenticatedWithReply:
handleCommand:executionInfo:completion:
getTimeoutSuspendedWithReply:
assistantServiceWillCrashForStuckSyncPluginAtPath:
prepareForAudioHandoffWithCompletion:
prepareForAudioHandoffFailedWithCompletion:
fetchContextsForKeys:forRequestID:includesNearbyDevices:completion:
setClasses:forSelector:argumentIndex:ofReply:
nextItem
removeFromList
object
enqueueObjects:
initWithObject:
insertAfterItem:
queue:didEnqueueObjects:
_objects
stringByAppendingFormat:
frontObject
dequeueAllObjects
_head
_tail
_count
T@,R,N
TQ,R,N
T@"<AFQueueDelegate>",W,N,V_delegate
_initWithRequest:settingChanges:
encodeBool:forKey:
decodeBoolForKey:
createResponseWithSettingChanges:
_setSettings:
applyChanges
_setApplyChanges:
_applyChanges
T@"NSArray",C,N,S_setSettings:,V_settings
TB,N,S_setApplyChanges:,V_applyChanges
deviceAddresses
initWithState:deviceAddresses:
_state
_deviceAddresses
Tq,R,N,V_state
T@"NSArray",R,C,N,V_deviceAddresses
setState:
setDeviceAddresses:
handleSpeechRecordingEvent:
initWithType:stringValue:contactIdentifier:contactInternalGUID:
initWithType:stringValue:
initWithString:
appendString:
appendFormat:
absoluteString
encodeInteger:forKey:
decodeIntegerForKey:
initWithStringValue:
contactIdentifier
contactInternalGUID
_aceContextObjectValue
_stringValue
_contactIdentifier
_contactInternalGUID
data
internalGUID
st_contactAddressValue
initWithLanguageCode:gender:isCustom:name:footprint:contentVersion:masteredVersion:
initWithLanguageCode:gender:isCustom:
isEqualToNumber:
genderString
footprintString
boolValue
footprint
initWithLanguageCode:gender:footprint:isCustom:
initWithLanguageCode:gender:name:footprint:isCustom:
isLanguageAndGenderEqual:
dictionaryRepresentation
isCustom
setIsCustom:
name
contentVersion
masteredVersion
setGender:
wasInitializedFromDictionaryRepresentation
_isCustom
_wasInitializedFromDictionaryRepresentation
_footprint
_name
_contentVersion
_masteredVersion
_gender
Tq,N,V_gender
TB,R,N,V_wasInitializedFromDictionaryRepresentation
T@"NSString",R,N,V_languageCode
TB,N,V_isCustom
Tq,R,N,V_footprint
T@"NSString",R,N,V_name
T@"NSNumber",R,N,V_contentVersion
T@"NSString",R,N,V_masteredVersion
previousOptInStatus
newOptInStatus
changeSource
changeReason
buildVersion
productVersion
schemaVersion
logEventIdentifier
initWithDate:previousOptInStatus:newOptInStatus:changeSource:changeReason:buildVersion:productVersion:schemaVersion:logEventIdentifier:
_date
_previousOptInStatus
_newOptInStatus
_changeSource
_changeReason
_buildVersion
_productVersion
_schemaVersion
_logEventIdentifier
T@"NSDate",R,C,N,V_date
Tq,R,N,V_previousOptInStatus
Tq,R,N,V_newOptInStatus
Tq,R,N,V_changeSource
T@"NSString",R,C,N,V_changeReason
T@"NSString",R,C,N,V_buildVersion
T@"NSString",R,C,N,V_productVersion
T@"NSString",R,C,N,V_schemaVersion
T@"NSString",R,C,N,V_logEventIdentifier
setDate:
setPreviousOptInStatus:
setNewOptInStatus:
setChangeSource:
setChangeReason:
setBuildVersion:
setProductVersion:
setSchemaVersion:
setLogEventIdentifier:
initWithIdentifier:revisionIdentifier:type:aceObject:dialogPhase:presentationState:aceCommandIdentifier:virgin:transient:supplemental:immersiveExperience:associatedDataStore:
initWithIdentifier:type:aceObject:dialogPhase:presentationState:aceCommandIdentifier:virgin:transient:supplemental:immersiveExperience:associatedDataStore:
revisionIdentifier
aceObject
dialogPhase
presentationState
aceCommandIdentifier
isVirgin
isTransient
isSupplemental
isImmersiveExperience
associatedDataStore
af_dialogIdentifier
af_text
af_speakableText
_didMutate
_propertyListStringForType
aceDialogPhaseValue
_propertyListStringForPresentationState
propertyListRepresentation
typeAssertionWithClass:
setObjectCoercion:forKey:
stringToUUIDCoercion
coerceObject:error:
_typeForPropertyListString:
coercionWithBlock:
_presentationStateForPropertyListString:
aceObjectWithDictionary:
dialogPhaseForAceDialogPhase:
userRequestDialogPhase
initWithPropertyListRepresentation:
initWithType:aceObject:dialogPhase:presentationState:aceCommandIdentifier:virgin:transient:supplemental:immersiveExperience:associatedDataStore:
setAceObject:
setDialogPhase:
setAceCommandIdentifier:
setPresentationState:
setVirgin:
setTransient:
setSupplemental:
setImmersiveExperience:
_virgin
_transient
_supplemental
_immersiveExperience
_revisionIdentifier
_aceObject
_dialogPhase
_aceCommandIdentifier
_presentationState
_associatedDataStore
T@"NSUUID",R,C,N,V_identifier
T@"NSUUID",R,C,N,V_revisionIdentifier
Tq,N,V_type
T@"AceObject",&,N,V_aceObject
T@"AFDialogPhase",&,N,V_dialogPhase
T@"NSString",C,N,V_aceCommandIdentifier
Tq,N,V_presentationState
virgin
TB,N,GisVirgin,V_virgin
transient
TB,N,GisTransient,V_transient
supplemental
TB,N,GisSupplemental,V_supplemental
immersiveExperience
TB,N,GisImmersiveExperience,V_immersiveExperience
T@"AFDataStore",R,N,V_associatedDataStore
initWithIdentifier:bundleID:context:userInfo:
discoverabilitySignal
source
sendEvent:
_donateToTipsWithIdentifier:bundleID:context:userInfo:
donateAnnounceNotificationsInCarPlaySettingsChange:
donateDictationEventStartedForBundleId:context:userInfo:
donateSiriEventStartedForBundleId:context:userInfo:
donateMessageSentForBundleId:context:userInfo:
af_getBundleResourceURL
extension
URLForResource:withExtension:
null
resourceForSoundID:
URLForResource:
_lock
_resourceURLProvidersByIdentifier
URLForSoundID:
setName:
setExtension:
_init
initWithMachServiceName:options:
_pendingTransactionCount
orthography
setOrthography:
language
setLanguage:
phonemeSuggestions
setPhonemeSuggestions:
_orthography
_language
_phonemeSuggestions
T@"NSString",&,N,V_orthography
T@"NSString",&,N,V_language
T@"NSArray",&,N,V_phonemeSuggestions
localizedDisplay
localizedDisplayWithRegion
initWithLocalizedDisplay:localizedDisplayWithRegion:
_localizedDisplay
_localizedDisplayWithRegion
T@"NSString",R,C,N,V_localizedDisplay
T@"NSString",R,C,N,V_localizedDisplayWithRegion
setLocalizedDisplay:
setLocalizedDisplayWithRegion:
initWithBlock:defaultValue1:defaultValue2:
invokeWithValue:andValue:
uuid
context
T@"NSUUID",R,N
T@"AFAssertionContext",R,N
initWithUUID:context:relinquishmentHandler:
invokeRelinquishmentHandlerWithContext:error:
_relinquishmentHandler
_uuid
T@"NSUUID",R,N,V_uuid
T@"AFAssertionContext",R,N,V_context
relinquishAssertionWithUUID:context:options:
relinquishAssertionWithUUID:error:options:
relinquishWithContext:options:
relinquishWithError:options:
initWithImpl:coordinator:
_impl
_coordinator
numberOfActiveAssertions
numberOfPendingAndActiveAssertions
_addAssertion:
_deactivateAndRemoveAssertionWithUUID:context:error:options:
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
timeIntervalSinceNow
assertionCoordinator:didAddAssertion:isFirstAssertion:
_activateAssertionWithUUID:
assertionCoordinator:didActivateAssertion:isFirstAssertion:
removeObject:
assertionCoordinator:didDeactivateAssertion:isLastAssertion:
assertionCoordinator:didRemoveAssertion:isLastAssertion:
allKeys
initWithIdentifier:queue:delegate:
acquireRelinquishableAssertionWithContext:relinquishmentHandler:
relinquishAsertionsPassingTest:context:
relinquishAsertionsPassingTest:error:
getPendingAndActiveAssertionsWithCompletion:
getActiveAssertionsWithCompletion:
barrier:
_numberOfAssertions
_assertionsByUUID
_numberOfActiveAssertions
_activeAssertionUUIDs
numberWithUnsignedInteger:
options
initWithOptions:reason:speechRequestOptions:
_options
_reason
_speechRequestOptions
TQ,R,N,V_options
Tq,R,N,V_reason
T@"AFSpeechRequestOptions",R,C,N,V_speechRequestOptions
alarmURLs
setAlarmURLs:
_alarmURLs
T@"NSArray",C,N,V_alarmURLs
stringByAppendingPathComponent:
defaultManager
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
dateByAddingTimeInterval:
contentsOfDirectoryAtPath:error:
pathExtension
compare:options:
attributesOfItemAtPath:error:
compare:
removeItemAtPath:error:
dataWithPropertyList:format:options:error:
initWithFormat:arguments:
stringByAppendingPathExtension:
writeToFile:options:error:
numberWithUnsignedLongLong:
unsignedLongLongValue
initWithTimestamp:reason:effectiveDate:expirationDuration:userInfo:
_timestamp
_effectiveDate
_expirationDuration
_userInfo
TQ,R,N,V_timestamp
T@"NSString",R,C,N,V_reason
T@"NSDate",R,C,N,V_effectiveDate
Td,R,N,V_expirationDuration
T@"NSDictionary",R,C,N,V_userInfo
startRemoteRequest:onPeer:completion:
initWithInfo:
sendWithCompletion:
info
peerIdentifier
setPeerIdentifier:
_info
_peerIdentifier
T@"AFRequestInfo",R,N,V_info
T@"NSString",C,N,V_peerIdentifier
anonymousListener
_af_analyticsContextDescription
logEventWithType:machAbsoluteTime:context:
_isForRequest:
_completeWithResponse:
_completeWithError:
endpoint
_initWithRequest:remoteResponseListenerEndpoint:usageResultListenerEndpoint:
initWithDomain:code:userInfo:
deliverSiriTask:completionHandler:
siriTaskDidFinish
_completeWithResponse:error:
handleFailureOfRequest:error:atTime:
handleSiriResponse:atTime:
initWithRequest:taskDeliverer:usageResultListener:
setDeliveryHandler:
setCompletionHandler:
_request
_taskDeliverer
_usageResultListener
_deliveryHandler
_completionHandler
_keepAliveCycle
_taskResponseWatchdogTimer
_taskResponseListener
allocation
properties
initWithIdentifier:allocation:properties:
_allocation
_properties
TQ,R,N,V_allocation
T@"NSDictionary",R,C,N,V_properties
setAllocation:
setProperties:
initWithNearbyDevicesLoggingID:
addNearbyDeviceContexts:proximityInfo:
metricsContext
nearbyDevicesLoggingID
setNearbyDevicesPayloads:
deviceInfo
productType
alarmSnapshot
hasFiringAlarms
timerSnapshot
hasFiringTimers
playbackStateSnapshot
nowPlayingTimestamp
homeAnnouncementSnapshot
lastPlayedAnnouncement
startedDate
applicationType
instanceUUID
applicationUUID
initWithInstanceUUID:applicationType:applicationUUID:
_instanceUUID
_applicationType
_applicationUUID
T@"NSUUID",R,C,N,V_instanceUUID
Tq,R,N,V_applicationType
T@"NSUUID",R,C,N,V_applicationUUID
setInstanceUUID:
setApplicationType:
setApplicationUUID:
allocWithZone:
initWithTimeoutInterval:timeoutHandler:
isStopped
cancelIfNotAlreadyCanceled
reset
_interval
_timerSource
_timeoutHandler
_isStopped
_remainingInterval
_startTime
history
setHistory:
_history
Tq,R,N,V_version
T@"NSArray",&,N,V_history
itemIdentifier
setItemIdentifier:
selectionType
setSelectionType:
_itemIdentifier
_selectionType
T@"NSString",C,N,V_itemIdentifier
Tq,N,V_selectionType
T@"NSDate",&,N,V_date
vtSatScore
confidenceScores
initWithVtSatScore:confidenceScores:
_vtSatScore
_confidenceScores
T@"NSNumber",R,C,N,V_vtSatScore
T@"NSArray",R,C,N,V_confidenceScores
setVtSatScore:
setConfidenceScores:
getUUIDBytes:
dataWithBytes:length:
getBytes:length:
initWithUUIDBytes:
activationSource
activationExpirationTime
perceptualAudioHash
overrideState
initWithTimestamp:perceptualAudioHash:overrideState:activationSource:activationExpirationTime:
_perceptualAudioHash
_overrideState
_activationSource
_activationExpirationTime
T@"AFMyriadPerceptualAudioHash",R,C,N,V_perceptualAudioHash
T@"AFMyriadGoodnessScoreOverrideState",R,C,N,V_overrideState
Tq,R,N,V_activationSource
TQ,R,N,V_activationExpirationTime
setPerceptualAudioHash:
setOverrideState:
setActivationSource:
setActivationExpirationTime:
initWithServicePort:
prewarmWithRequestInfo:context:completion:
activateWithRequestInfo:context:completion:
deactivateForReason:options:context:completion:
handleContext:completion:
handleIntent:inBackgroundAppWithBundleId:reply:
handleIntentForwardingAction:inBackgroundApplicationWithBundleIdentifier:completionHandler:
_xpcConnection
_servicePort
_mapForLanguageCode:
_buildRegexMatchingSubstrings:
pathForResource:ofType:inDirectory:
initWithContentsOfFile:
escapedPatternForString:
replaceCharactersInRange:withString:
initWithPattern:options:error:
range
substringWithRange:
enumerateMatchesInString:options:range:usingBlock:
_phonemeMap
_regex
UTF8String
_releasePowerAssertion
_createPowerAssertion
initWithIdentifier:
takePowerAssertionWithName:
releasePowerAssertionWithName:
releaseAllPowerAssertions
_assertionCoordinator
_assertionsByName
setTimer:
createResponseWithTimer:
encodeXPCObject:forKey:
decodeXPCObjectOfType:forKey:
initWithXPCObject:
xpcObject
_xpcObject
didObserveEvents:completion:
setPrimaryLanguageCode:
primaryLanguageCode
setDictationLanguages:
encodeInt32:forKey:
decodeInt32ForKey:
decodePropertyListForKey:
_removeContextValueForKey:context:
_updateContextValue:forKey:context:
userContextLanguageCodeForKeyboardLangauge:overrideLanguageCode:
getSiriDictationLanguagesFromLanguages:
floatValue
numberWithFloat:
_setContextValue:forKey:context:
siriDictationLanguageForLanguage:
priorsByReplacingKeyboardLanguage:
languageDetectorUserContext
_setFinalFilteredDictationLanguages:
_setDictationLanguageCodeMappingCache:
setWasLanguageToggled:
setCurrentKeyboard:
setPrevMessageLanguage:
setGlobalLastUsedKeyboard:
setMultiLingualKeyboardLanguages:
setKeyboardConvoRecentMessages:
setKeyboardConversationLanguagePriors:
setKeyboardGlobalLanguagePriors:
setLanguageCodeOverrides:
setSimulatingLanguageCodes:
setShouldSimulateLanguageDetectorAssetsAvailability:
_setUserContextChangeBit:
_setLanguageDetectorContext:
defaultContextWithPrimaryLanguage:
isUpdateAvailableForLanguageDetectorContext
languageDetectorContextChangeBits
getContextForAnalytics
getDictationLanguagesForSupportedLocales:error:
finalFilteredDictationLanguages
shouldSimulateLanguageDetectorAssetsAvailability
simulatingLanguageCodes
currentKeyboard
languageCodeOverrides
wasLanguageToggled
prevMessageLanguage
globalLastUsedKeyboard
multiLingualKeyboardLanguages
keyboardConvoRecentMessages
dictationLanguages
keyboardConversationLanguagePriors
keyboardGlobalLanguagePriors
dictationInputOrigin
setDictationInputOrigin:
_lidUserContext
_userContextChangeBit
_simulateLanguageDetectorAssetsAvailability
_simulatingLanguageCodes
_finalDictationLanguages
_dictationLanguageMappingCache
_languageToggled
_currentKeyboard
_primaryLanguageCode
_languageCodeOverrides
_prevMessageLanguage
_globalLastUsedKeyboard
_multiLingualKeyboardLanguages
_keyboardConvoRecentMessages
_dictationLanguages
_keyboardConversationLanguagePriors
_keyboardGlobalLanguagePriors
_dictationInputOrigin
T@"NSString",C,N,V_currentKeyboard
T@"NSString",C,N,V_primaryLanguageCode
T@"NSDictionary",C,N,V_languageCodeOverrides
languageToggled
TB,N,GwasLanguageToggled,SsetWasLanguageToggled:,V_languageToggled
T@"NSString",C,N,V_prevMessageLanguage
T@"NSString",C,N,V_globalLastUsedKeyboard
T@"NSArray",C,N,V_multiLingualKeyboardLanguages
T@"NSArray",C,N,V_keyboardConvoRecentMessages
T@"NSArray",C,N,V_dictationLanguages
T@"NSDictionary",C,N,V_keyboardConversationLanguagePriors
T@"NSDictionary",C,N,V_keyboardGlobalLanguagePriors
T@"NSNumber",C,N,V_dictationInputOrigin
_acquireWithContext:
_finalizeWithContext:error:
_relinquishWithContext:error:options:
acquireAudioSessionWithContext:relinquishmentHandler:
relinquishAudioSessionWithContext:error:options:completion:
_clearXPCConnection
handleXPCConnectionInterrupted
handleXPCConnectionInvalidated
_acquisitionContext
T@"AFAssertionContext",R,N,V_acquisitionContext
timer
_timer
T@"STTimer",&,N,V_timer
initWithUpdatedItemIndexPaths:insertedItemIndexPaths:presentationStateChangedItemIndexPaths:
updatedItemIndexPaths
insertedItemIndexPaths
presentationStateChangedItemIndexPaths
_updatedItemIndexPaths
_insertedItemIndexPaths
_presentationStateChangedItemIndexPaths
T@"NSArray",R,N,V_updatedItemIndexPaths
T@"NSArray",R,N,V_insertedItemIndexPaths
T@"NSArray",R,N,V_presentationStateChangedItemIndexPaths
errorWithCode:description:underlyingErrors:
addObjectsFromArray:
replaceObjectAtIndex:withObject:
willBeginAccessPower
getAveragePower:andPeakPower:
didEndAccessPower
_wrapper
_sharedMemory
_destroyMapping
_mappedLength
_sharedRegion
Tf,R,N
isMainThread
getCurrentContext
runServerOnCurrentThreadProtectedByEntitlement:
currentRunLoop
distantFuture
nothing
initWithFireDate:interval:target:selector:userInfo:repeats:
addTimer:forMode:
initWithTimeIntervalSinceNow:
runUntilDate:
doesServerExist
array
_collateContextsIntoArray:
performSelectorOnMainThread:withObject:waitUntilDone:
dictionaryWithObject:forKey:
cancelPreviousPerformRequestsWithTarget:selector:object:
stopServer
_shutdownServer
_serverName
pidRestrictedCenterNamed:
setTargetPID:
_collateContexts
registerForMessageName:target:selector:
startCenter:
detachNewThreadSelector:toTarget:withObject:
performSelector:withObject:afterDelay:
mainBundle
bundleIdentifier
allowContextProvider:
_startListening
_stopListening
defaultContextManager
addContextProvider:
removeContextProvider:
_contextProviders
_center
mediaRouteIdentifier
initWithIdentifier:mediaRouteIdentifier:
_mediaRouteIdentifier
T@"NSString",R,C,N,V_mediaRouteIdentifier
setMediaRouteIdentifier:
notification
request
postNotificationRequest:completion:
withdrawNotificationRequestWithIdentifier:
receivedNotificationResponse:
postNotificationRequest:responseHandler:
_responseHandlersByNotificationID
keyPathWithKey:
userContext
setObject:forContextualKeyPath:
predicateForEventsWithStreamName:
eventStreamWithName:
knowledgeStore
deleteObjects:error:
localizedDescription
bluetoothIsConnectedStream
currentCalendar
dateByAddingUnit:value:toDate:options:
predicateWithFormat:
metadata
isAppleAudioDevice
productID
allObjects
eventWithStream:startDate:endDate:identifierStringValue:metadata:
saveObjects:error:
eventQueryWithPredicate:eventStreams:offset:limit:sortDescriptors:
executeQuery:error:
URLByAppendingPathComponent:isDirectory:
fileURLWithPath:isDirectory:
isVoiceOverTouchEnabled
isVibrationDisabled
initWithIsVoiceOverTouchEnabled:isVibrationDisabled:
_isVoiceOverTouchEnabled
_isVibrationDisabled
Tq,R,N,V_isVoiceOverTouchEnabled
Tq,R,N,V_isVibrationDisabled
setIsVoiceOverTouchEnabled:
setIsVibrationDisabled:
temperatureUnit
setTemperatureUnit:
twentyFourHourTimeDisplay
setTwentyFourHourTimeDisplay:
region
setRegion:
countryCode
setCountryCode:
preferredLanguage
setPreferredLanguage:
_twentyFourHourTimeDisplay
_temperatureUnit
_region
_countryCode
_preferredLanguage
T@"NSString",C,N,V_temperatureUnit
TB,N,V_twentyFourHourTimeDisplay
T@"NSString",C,N,V_region
T@"NSString",C,N,V_countryCode
T@"NSString",C,N,V_preferredLanguage
firstInterpretation
tokens
interpretationIndices
interpretations
text
valueWithRange:
arrayWithCapacity:
objectAtIndexedSubscript:
intValue
setObject:atIndexedSubscript:
insertObject:atIndex:
speechTokensForUtteranceAtIndex:
rangeListOfDifferingTextFromSpeechInterpretation:comparedToBaseTokenList:
rangeListOfDifferingTextFromTargetTokenList:comparedToBaseTokenList:
longestCommonSubsequenceBetweenList:andList:
removeSpaceBefore
removeSpaceAfter
string
setTokens:
confidenceScore
textOfUtteranceAtIndex:
allInterpretationStringsAndScores
setDictionary:
isLowConfidence
initWithInterpretations:isLowConfidence:
initWithInterpretationIndices:confidenceScore:
setSource:
allPhrases
_updateUtteranceswithAlternativeUtteranceAtIndex:swapIndices:
_updatePhraseswithSwapIndices:
setConfidenceScore:
setRemoveSpaceBefore:
bestTextInterpretation
initWithPhrases:correctionIdentifier:
initWithPhrases:utterances:
initWithPhrases:sentenceConfidence:utterances:correctionIdentifier:
initWithTokens:correctionIdentifier:
initWithString:correctionIdentifier:
numberOfAlternativeUtterances
rangeListOfDifferingTextFromUtteranceAtIndex:comparedToBaseUtteranceAtIndex:
rangeListOfDifferingTextFromSpeechInterpretation:comparedToBaseUtteranceAtIndex:
interpretationOfUtteranceAtIndex:
allRecognitionStringsAndScores
updateDictationResult:withAlternativeUtteranceAtIndex:
dictationResult
streamingTokens
correctionIdentifier
_phrases
_tokens
_text
_sentenceConfidence
_utterances
_correctionIdentifier
T@"NSDictionary",R,N,V_correctionIdentifier
T@"NSArray",R,N
confidenceScoreAvg
confidenceScoreMax
confidenceScoreMin
bestInterpretation
recognition
af_speechPhrases
sentenceConfidence
af_speechUtterances
af_correctionContext
af_userUtteranceValue
af_bestTextInterpretation
af_correctionContextWithRefId:sessionId:
af_userUtteranceValueWithRefId:sessionId:
af_bestTextInterpretationWithRefId:sessionId:
af_speechToken
_combinedRank
_combinedScore
_interactionId
_onDeviceUtterancesPresent
_originalRank
_originalScore
_previousUtterance
_sessionId
_utteranceSource
T@"NSNumber",C,N,V_combinedRank
T@"NSNumber",C,N,V_combinedScore
T@"NSString",C,N,V_interactionId
T@"NSNumber",C,N,V_onDeviceUtterancesPresent
T@"NSNumber",C,N,V_originalRank
T@"NSNumber",C,N,V_originalScore
T@"NSString",C,N,V_previousUtterance
T@"NSString",C,N,V_sessionId
T@"NSString",C,N,V_utteranceSource
numberWithLong:
enumerateByteRangesUsingBlock:
af_enumerateDigestibleChunksWithOptions:usingBlock:
objCType
longLongValue
decimalValue
sortedArrayUsingSelector:
groupIdentifier
isFiring
fireTimeInterval
timerID
timerURL
title
fireDate
firedDate
dismissedDate
lastModifiedDate
initWithTimerID:timerURL:isFiring:title:state:duration:type:fireTimeInterval:fireDate:firedDate:dismissedDate:lastModifiedDate:
_isFiring
_timerID
_timerURL
_title
_fireTimeInterval
_fireDate
_firedDate
_dismissedDate
_lastModifiedDate
T@"NSUUID",R,C,N,V_timerID
T@"NSURL",R,C,N,V_timerURL
TB,R,N,V_isFiring
T@"NSString",R,C,N,V_title
Td,R,N,V_fireTimeInterval
T@"NSDate",R,C,N,V_fireDate
T@"NSDate",R,C,N,V_firedDate
T@"NSDate",R,C,N,V_dismissedDate
T@"NSDate",R,C,N,V_lastModifiedDate
setTimerID:
setTimerURL:
setIsFiring:
setTitle:
setDuration:
setFireTimeInterval:
setFireDate:
setFiredDate:
setDismissedDate:
setLastModifiedDate:
_stopIdleTimer
_cleanUpConnection
_willStartSendingEvents:
_didFinishSendingEvents:
_sendEvents:numberOfRetries:completion:
logInstrumentationOfType:machAbsoluteTime:turnIdentifier:
stageUEIEventData:timestamp:
boostQueuedEvents:
_handleFailureCallbackForEvents:error:numberOfRetries:completion:
_handleSuccessCallbackForEvents:completion:
stageEvents:completion:
_startIdleTimer
_cleanUpConnectionIfNeeded
setNeedsCleanUpConnection:
needsCleanUpConnection
_idleTimerFired
flushStagedEventsWithReply:
beginEventsGrouping
endEventsGrouping
_idleTimer
_numberOfEventsBeingSent
_group
_needsCleanUpConnection
TB,V_needsCleanUpConnection
setKey:
appMetaData
setAppMetadata:
generation
setAnchor:
validity
setValidity:
setCount:
initWithAnchor:forcingReset:
anchor
appMetadata
targetIsLocal
setTargetIsLocal:
forVerification
setForVerification:
reasons
setReasons:
_targetIsLocal
_forVerification
_anchor
_validity
_key
_appMetadata
_reasons
T@"NSString",C,N,V_anchor
T@"NSString",C,N,V_validity
Tq,N,V_count
T@"NSString",C,N,V_key
T@"SASyncAppMetaData",C,N,V_appMetadata
TB,N,V_targetIsLocal
TB,N,V_forVerification
T@"NSSet",C,N,V_reasons
jitContext
overrideModelPath
initWithJitContext:overrideModelPath:
_jitContext
_overrideModelPath
T@"NSArray",R,C,N,V_jitContext
T@"NSString",R,C,N,V_overrideModelPath
setJitContext:
setOverrideModelPath:
encodeDouble:forKey:
decodeDoubleForKey:
initWithRecognition:rawRecognition:audioAnalytics:isFinal:utteranceStart:
initWithRecognition:unfilteredRecognition:rawRecognition:audioAnalytics:isFinal:utteranceStart:
initWithRecognition:rawRecognition:audioAnalytics:isFinal:utteranceStart:latticeMitigatorResult:
initWithRecognition:unfilteredRecognition:rawRecognition:audioAnalytics:isFinal:utteranceStart:latticeMitigatorResult:
unfilteredRecognition
rawRecognition
audioAnalytics
isFinal
utteranceStart
latticeMitigatorResult
_isFinal
_recognition
_unfilteredRecognition
_rawRecognition
_audioAnalytics
_utteranceStart
_latticeMitigatorResult
T@"AFSpeechRecognition",R,N,V_recognition
T@"AFSpeechRecognition",R,N,V_unfilteredRecognition
T@"AFSpeechRecognition",R,N,V_rawRecognition
T@"AFSpeechAudioAnalytics",R,N,V_audioAnalytics
TB,R,N,V_isFinal
Td,R,N,V_utteranceStart
T@"AFSpeechLatticeMitigatorResult",R,N,V_latticeMitigatorResult
beepSoundID
initWithStyle:beepSoundID:
_style
_beepSoundID
Tq,R,N,V_style
Tq,R,N,V_beepSoundID
setStyle:
setBeepSoundID:
speechRecognizedCommand
initWithSpeechRecognizedCommand:
_speechRecognizedCommand
T@"SASSpeechRecognized",R,C,N,V_speechRecognizedCommand
setSpeechRecognizedCommand:
initWithData:
_data
T@"NSData",R,C,N,V_data
identityCoercion
_coercions
fetchSupportedLanguagesWithReply:
retrieveAccountMessageDictionariesWithReply:
saveAccountWithMessageDictionary:setActive:
deleteAccountWithIdentifier:
setActiveAccountIdentifier:
fetchActiveAccount:
setAssistantEnabled:
setDictationEnabled:
_shutdownSessionIfIdle
_killDaemon
barrierWithReply:
_setSyncNeededForReason:
_clearSyncNeededForKey:
_syncDataWithAnchorKeys:forceReset:reason:reply:
_fetchPeerData:
_setSyncVerificationNeededAndFullReportNeeded:shouldPostNotification:completion:
_runServiceMaintenance
getAvailableVoicesIncludingAssetInfo:completion:
setOutputVoice:withCompletion:
setLanguage:withCompletion:
setLanguage:outputVoice:withCompletion:
getOfflineAssistantStatusWithCompletion:
getOfflineDictationStatusWithCompletion:
updateOfflineSpeechProfileWithLanguage:modelOverridePath:completion:
createOfflineSpeechProfileWithLanguage:modelOverridePath:JSONData:completion:
setOfflineDictationProfileOverridePath:completion:
startUIRequestWithSpeechAudioFileURL:
startMultiUserUIRequestWithText:expectedSpeakerSharedUserID:expectedSpeakerConfidenceScore:nonspeakerConfidenceScores:completion:
dismissUI
startUIMockServerRequestWithReplayFileURL:completion:
getPeerIdentifiers:
setEnableAssistantLogging:
setSupplementalLanguageDictionary:forProduct:completion:
setSupplementalLanguages:forProduct:forBuildVersion:completion:
getSupplementalLanguagesDictionary:
getSupplementalLanguagesModificationDate:
getSupplementalLanguageDictionaryForProduct:completion:
getSupplementalLanguagesForProduct:forBuildVersion:completion:
fetchEventRecordsFromAnalyticsStoreAtPath:completion:
purgeAnalyticsStoreWithCompletion:
resetAnalyticsStoreWithCompletion:
sendMetricsToServerWithCompletion:
fetchExperimentConfigurationsWithCompletion:
fetchExperimentContextWithCompletion:
disableAndDeleteCloudSyncWithCompletion:
getDevicesWithAvailablePHSAssetsForLanguage:completion:
getDevicesWithAvailablePHSAssetsOnDeviceCheck:
getMeCard:
getStereoPartnerLastMyriadWinDate:
getStereoPairState:
setConfigOverrides:completion:
configOverrides:
getSharedCompanionInfo:
getCrossDeviceContextWithCompletion:
getCurrentContextSnapshotWithCompletion:
getOriginDeviceInfoForContextIdentifier:completion:
getContextCollectorsInfoWithCompletion:
setHardcodedBluetoothProximity:
getManagedLocalAndRemotePeerInfoWithCompletion:
getCapabilitiesDataFromReachableDevicesWithCompletion:
getProximityTuplesWithCompletion:
hasEverSetLanguageCodeWithCompletion:
getExperimentForConfigurationIdentifier:completion:
resetExperimentForConfigurationIdentifier:completion:
synchronizeExperimentConfigurationsIfApplicableWithCompletion:
getSiriOutputVolumeForAudioRoute:completion:
setSiriOutputVolume:forAudioRoute:completion:
getBluetoothDeviceInfoWithAddress:completion:
getBluetoothDeviceInfoWithUID:completion:
getConnectedBluetoothDeviceInfoArrayWithCompletion:
getPairedBluetoothDeviceInfoArrayWithCompletion:
getBluetoothWirelessSplitterSessionInfoWithCompletion:
startObservingBluetoothWirelessSplitterSession
stopObservingBluetoothWirelessSplitterSession
addMultiUserUser:sharedId:loggableSharedId:enrollmentName:isPrimary:completion:
removeMultiUserUser:completion:
removeMultiUserUserWithSharedUserId:completion:
showMultiUsers:
showPrimaryUserSharedUserIDWithCompletion:
showMultiUserSharedUserIDsCompletion:
updateVoiceIdScoreToUser:score:reset:completion:
forceMultiUserSync:download:completion:
getHomeUserIdForSharedUserId:completion:
getSharedUserIdForHomeUserId:completion:
updateMultiUserWithSharedUserId:companionId:companionSpeechId:idsIdentifier:productPrefix:aceHost:completion:
getSharedUserID:
fetchMultiUserVoiceIdentificationSetting:
homeOnboardingFlowInvoked:completion:
setNanoAssistantEnabled:withCompletion:
setNanoDictationEnabled:withCompletion:
setNanoPhraseSpotterEnabled:withCompletion:
setNanoRaiseToSpeakEnabled:withCompletion:
setNanoUseDeviceSpeakerForTTS:withCompletion:
setNanoTTSSpeakerVolume:withCompletion:
setNanoOutputVoice:withCompletion:
setNanoLanguage:withCompletion:
setNanoCrownActivationEnabled:withCompletion:
setNanoSiriDataSharingOptInStatus:withCompletion:
clearSpokenNotificationTemporarilyDisabledStatus
getSpokenNotificationIsAlwaysOpportuneWithCompletion:
setSpokenNotificationIsAlwaysOpportune:
getSpokenNotificationShouldAnnounceAllNotificationsWithCompletion:
setSpokenNotificationShouldAnnounceAllNotifications:
getSpokenNotificationShouldSkipTriggerlessRepliesWithCompletion:
setSpokenNotificationShouldSkipTriggerlessReplies:
setSpokenNotificationProxCardSeen:
getAnnounceNotificationsTemporarilyDisabledEndDateForPlatform:completion:
setAnnounceNotificationsTemporarilyDisabledUntil:platform:
getAnnounceNotificationsTemporarilyDisabledEndDateForApp:platform:completion:
setAnnounceNotificationsTemporarilyDisabledUntil:forApp:platform:
getAnnounceNotificationsInCarPlayTemporarilyDisabledWithCompletion:
setAnnounceNotificationsInCarPlayTemporarilyDisabled:
clearAnnounceNotificationsInCarPlayTemporarilyDisabled
getAnnounceNotificationsInCarPlayTypeWithCompletion:
setAnnounceNotificationsInCarPlayType:
clearAnnounceNotificationsInCarPlayType
setOpportuneSpeakingEdgeDetectorSignalOverride:
clearOpportuneSpeakingEdgeDetectorSignalOverride
getCurrentNWActivityIDWithCompletion:
getAudioSessionCoordinationSnapshotWithCompletion:
handleCommand:completion:
setSiriDataSharingOptInStatus:completion:
getSiriDataSharingOptInStatusWithCompletion:
setSiriDataSharingOptInStatus:propagateToHomeAccessories:source:reason:completion:
setSiriDataSharingOptInAlertPresented:completion:
shouldSuppressSiriDataSharingOptInAlertWithCompletion:
deleteSiriHistoryWithContext:withCompletion:
setSiriDataSharingHomePodSetupDeviceIsValid:completion:
setOnDeviceDictationAvailableAlertPresented:
setSiriDesignModeEnabled:completion:
siriDesignModeIsEnabled:
accessRecordedAudioWithIdentifier:completion:
trimRecordedAudioWithIdentifier:offset:duration:outputFileType:completion:
getRecordedAudioDirectoryPathsWithCompletion:
getCurrentRequestIsWatchAuthenticatedWithCompletion:
pushMyriadAdvertisementContext:completionHandler:
getSpeakerCapabilityForAccessoryWithUUID:completionHandler:
triggerABCForType:subType:context:completionHandler:
setAllowExplicitContent:
getCurrentAccessoryInfoWithCompletion:
setRecognizeMyVoiceEnabled:
postTestResultCandidateWithRcId:recognitionSausage:
postTestResultSelectedWithRcId:
areSiriUODAssetsAvailable:
getAssetStatusForLanguage:completionHandler:
getAssistantIsEnabledForDeviceWithSiriInfo:withCompletion:
getCurrentActiveLanguageCodesWithCompletion:
setSyncToken:forAceHost:completion:
readSyncTokenForAceHost:completion:
syncVerificationPartialResult:
syncVerificationServerReport:
getConformingSharedUserIdForHomeUserId:completion:
getFirstNameForSharedUserId:completion:
getConformingSharedUserIds:
getMultiUserSettingsForSharedUserID:completion:
getHomeUserIdOfRecognizedUserWithCompletion:
getPreferredMediaUserHomeUserIDWithCompletion:
homeUserIdToNames:
isEqualToArray:
setInterpretations:
setIsLowConfidence:
_isLowConfidence
_interpretations
T@"NSArray",C,N,V_interpretations
TB,N,V_isLowConfidence
setInterpretationIndices:
_interpretationIndices
_confidenceScore
_source
T@"NSArray",C,N,V_interpretationIndices
Tq,N,V_confidenceScore
Tq,N,V_source
averageConfidenceScore
T@"NSArray",C,N,V_tokens
phoneSequence
setPhoneSequence:
startTime
setStartTime:
silenceStartTime
setSilenceStartTime:
endTime
setEndTime:
setAddSpaceAfter:
setRemoveSpaceAfter:
aceToken
ipaPhoneSequence
setIpaPhoneSequence:
_removeSpaceBefore
_removeSpaceAfter
_phoneSequence
_ipaPhoneSequence
_silenceStartTime
_endTime
T@"NSString",C,N,V_text
T@"NSString",C,N,V_phoneSequence
T@"NSString",C,N,V_ipaPhoneSequence
Td,N,V_startTime
Td,N,V_silenceStartTime
Td,N,V_endTime
TB,N,V_removeSpaceBefore
TB,N,V_removeSpaceAfter
phrases
af_speechInterpretations
lowConfidence
utterances
af_speechTokens
createUsingPhrases:andUtterances:
successTitle
successBody
successButtonText
errorTitle
errorBody
errorButtonText
initWithSuccessTitle:successBody:successButtonText:errorTitle:errorBody:errorButtonText:
_successTitle
_successBody
_successButtonText
_errorTitle
_errorBody
_errorButtonText
T@"NSString",R,C,N,V_successTitle
T@"NSString",R,C,N,V_successBody
T@"NSString",R,C,N,V_successButtonText
T@"NSString",R,C,N,V_errorTitle
T@"NSString",R,C,N,V_errorBody
T@"NSString",R,C,N,V_errorButtonText
setSuccessTitle:
setSuccessBody:
setSuccessButtonText:
setErrorTitle:
setErrorBody:
setErrorButtonText:
preferencesSubdomain
containsString:
substringToIndex:
_afpreferences_isLanguageCodePrefix
_afpreferences_languageCodePrefix
arrayByAddingObjectsFromArray:
initWithArray:
initWithSuiteName:
unsignedIntValue
synchronize
distantPast
isSiriXEnabled
isSiriServerLoggingAllowed
isOnDeviceOnlyDictationForced
isSiriDataSharingRepromptEnabled
appendToSiriDataSharingOptInStatusHistory:previousOptInStatus:statusChangeSource:reason:
sharedStream
emitMessage:
laterDate:
sharedPreferencesWithInstanceContext:
dictationIsEnabled
_registerForInternalPrefs
_registerForAssistantEnablementChangeNotifications
_registerForDictationEnablementChangeNotifications
barrier
siriDataSharingOptInStatus
getAnnounceNotificationsTemporarilyDisabledStatusForPlatform:completion:
getAnnounceNotificationsTemporarilyDisabledForApp:platform:completion:
siriDataSharingOptInStatusHistory
getHomeAccessorySiriDataSharingChangeLog
getHomeAccessorySiriDataSharingPropagationLog
accessoryIdentifier
setPrevOptInState:
setNewOptInState:
setSystemBuild:
setEpochEventTimestampInSeconds:
formattedText
_languageCodeWithFallback:
_registerForLanguageCodeChangeNotifications
_bestSupportedLanguageCodeForLanguageCode:isGoodFit:
_bestSupportedLanguageCodeForLanguageCodes:isGoodFit:
preferredLanguages
localeIdentifier
canonicalLanguageIdentifierFromString:
_languagePreferencesForCurrentSystemConfiguration
arrayByAddingObject:
preferredLocalizationsFromArray:forPreferences:
_languageCode:isGoodFitForPreferredLanguages:
_outputVoiceWithFallback:
_registerForOutputVoice
setOutputVoice:
setLanguage:outputVoice:
currentNavigationState
setCurrentNavigationState:
_registerForNavStatusIfNeeded
_setLoggingDefaultValue:forKey:
fileLoggingIsEnabled
configOverrides
setConfigOverrides:
dictionaryWithDictionary:
_registerForNanoPrefsChangeNotifications
initWithDomain:
setWithObject:
synchronizeNanoDomain:keys:
_nanoPreferencesValueForKey:
_setNanoPreferencesValue:forKey:
initWithDomain:pairedDevice:
_preferencesDidChangeExternally
_internalPreferencesDidChangeExternally
_languageCodeDidChangeExternally
_outputVoiceDidChangeExternally
_nanoPrefsDidChangeExternally
_assistantEnablementDidChangeExternally
_dictationEnablementDidChangeExternally
synchronizeLogPreferencesDomain
synchronizeAVVCPreferencesDomain
instanceContext
dictationSLSLanguagesEnabled
isSmartLanguageSelectionEnabled
setSmartLanguageSelection:
offlineDictationOverride
setOfflineDictationOverride:
offlineDictationStatus
setOfflineDictationStatus:
offlineDictationProfileOverridePath
setOfflineDictationProfileOverridePath:
_setAssistantIsEnabledLocal:
_setDictationIsEnabledLocal:
setAssistantIsEnabled:
setDictationIsEnabled:
_dictationIsAllowed
_setDictationIsAllowed:
onDeviceDictationAvailableAlertPresented
_setOnDeviceDictationAvailableAlertPresentedLocal:
forceOfflineRecognitionEnabled
setForceOfflineRecognitionEnabled:
utteranceDetectionEnabled
setUtteranceDetectionEnabled:
preferOnlineRecognitionEnabled
setPreferOnlineRecognitionEnabled:
setDictationSLSLanguagesEnabled:
resetSessionLanguage
isDictationHIPAACompliant
isOnDeviceDictationForced
startAlertEnabled
setStartAlertEnabled:
showServerOnUI
setShowServerOnUI:
debugButtonIsEnabled
setDebugButtonIsEnabled:
siriXDebugStatusEnabled
setSiriXDebugStatusEnabled:
showsHoldToTalkIndicator
setShowsHoldToTalkIndicator:
suppressAssistantOptIn
setSuppressAssistantOptIn:
suppressDictationOptIn
setSuppressDictationOptIn:
_setSuppressDictationOptInLocal:
alwaysAllowVoiceActivation
setAlwaysAllowVoiceActivation:
setSiriResponseShouldAlwaysPrint:
setAlwaysObscureBackgroundContentWhenActive:
setAlwaysShowRecognizedSpeech:
crownActivationEnabled
setCrownActivationEnabled:
listenAfterSpeakingDisabled
setListenAfterSpeakingDisabled:
curareOrchestrationEnabled
setCurareOrchestrationEnabled:
cloudSyncEnabled
setCloudSyncEnabled:
cloudSyncEnabledModificationDate
setInternalUserClassification:
internalUserClassification
getSpokenNotificationTemporarilyDisabledStatusWithCompletion:
getSpokenNotificationTemporarilyDisabledEndDateWithCompletion:
setSpokenNotificationTemporarilyDisabledUntil:
getSpokenNotificationTemporarilyDisabledForApp:completion:
getSpokenNotificationTemporarilyDisabledEndDateForApp:completion:
setSpokenNotificationTemporarilyDisabledForApp:until:
setSpokenNotificationsProxCardSeen
setSpokenNotificationSkipTriggerlessReplyConfirmation:
spokenNotificationSkipTriggerlessReplyConfirmation
designModeIsEnabled
setDesignModeEnabled:
shouldSuppressSiriDataSharingOptInAlert
setHomeAccessoriesRepromptStatus:
getHomeAccessoriesRepromptStatus
appendHomeAccessorySiriDataSharingChangeLogEvent:
insertHomeAccessorySiriDataSharingPropagationLogEvent:
supplementalLanguageDictionaryForProduct:
supplementalLanguagesForProduct:forBuildVersion:
supplementalLanguages
supplementalLanguagesModificationDate
horsemanSupplementalLanguageDictionary
ignoreServerManualEndpointingThreshold
setIgnoreServerManualEndpointingThreshold:
manualEndpointingThreshold
setManualEndpointingThreshold:
streamingDictationEnabled
setStreamingDictationEnabled:
companionConnectionsOverBLEEnabled
setCompanionConnectionsOverBLEEnabled:
myriadCoordinationEnabled
myriadCoordinationEnabledForAccessoryLogging
setMyriadCoordinationEnabled:
disableMyriadBLEActivity
myriadDuckingEnabled
setMyriadDuckingEnabled:
myriadDeviceGroup
setMyriadDeviceGroup:
myriadServerHasProvisioned
setMyriadServerHasProvisioned:
myriadServerProvisioning
setMyriadServerProvisioning:
myriadDeviceClass
setMyriadDeviceClass:
myriadConstantGoodness
setMyriadConstantGoodness:
myriadDeviceAdjust
setMyriadDeviceAdjust:
myriadDeviceDelay
setMyriadDeviceDelay:
myriadTestDeviceDelay
setMyriadTestDeviceDelay:
myriadDeviceSlowdown
setMyriadDeviceSlowdown:
myriadDeviceTrumpDelay
setMyriadDeviceTrumpDelay:
myriadLastWin
setMyriadLastWin
myriadDeviceVTEndTimeDistanceThreshold
setMyriadDeviceVTEndTimeDistanceThreshold:
myriadShouldIgnoreAdjustedBoost
setIgnoreMyriadAdjustedBoost:
ignoreMyriadPlatformBias
setIgnoreMyriadPlatformBias:
myriadMonitorTimeOutInterval
myriadMaxNoOperationDelay
setMyriadMaxNoOperationDelay:
opportuneSpeakingPauseInterval
setOpportuneSpeakingPauseInterval:
opportuneSpeakingTimeoutInterval
setOpportuneSpeakingTimeoutInterval:
opportuneSpeakingFileLoggingIsEnabled
setOpportuneSpeakingFileLoggingIsEnabled:
limitedAudioLoggingEnabled
setLimitedAudioLoggingEnabled:
setDatabaseSyncEnabled:
databaseSyncEnabled
setSiriVocabularyEnabled:
siriVocabularyEnabled
includeProbePacketCaptureForABC
autoDismissalIdleTimeout
setAutoDismissalIdleTimeout:
autoDismissalExtendedIdleTimeout
setAutoDismissalExtendedIdleTimeout:
autoDismissalMaxAttentionSamplingTime
setAutoDismissalMaxAttentionSamplingTime:
siriDebugUIEnabled
setSiriDebugUIEnabled:
siriSpeakerGradingDebugUIEnabled
setSiriSpeakerGradingDebugUIEnabled:
enableDragAndDrop
setEnableDragAndDrop:
enableNonFullScreenAppearance
setEnableNonFullScreenAppearance:
disableAssistantWhilePasscodeLocked
setDisableAssistantWhilePasscodeLocked:
assistantLanguageForceRTL
setAssistantLanguageForceRTL:
isCurrentLocaleNativelySupported
allSiriLanguageCodesForSystemLanguageCode:isGoodFit:
synchronizeVoiceServicesLanguageCode
inProgressOutputVoice
setInProgressOutputVoice:
setLanguageCode:outputVoice:
setUseDeviceSpeakerForTTS:
setLanguageDetectorEnabled:
isLanguageDetectorEnabled
isLanguageDetectorEnabledByServer
isDictationOnDeviceSamplingDisabled
setKeepRecordedAudioFiles:
keepRecordedAudioFiles
setMediaPlaybackEnabled:
mediaPlaybackEnabled
valueForSessionContextPreferenceKey:
setValue:forSessionContextKey:
setTLSSessionTicketsFlushPending:
tlsSessionTicketsFlushPending
setFileLoggingIsEnabled:
shouldLogForQA
setCardLoggingEnabled:
cardLoggingEnabled
setCommandLoggingEnabled:
commandLoggingEnabled
setNetworkLoggingEnabled:
networkLoggingEnabled
setAVVCLoggingEnabled:
avvcLoggingEnabled
autoDismissal2018Enabled
setAutoDismissal2018Enabled:
dismissWhenFaceAttentionIsLostEnabled
setDismissWhenFaceAttentionIsLostEnabled:
dismissWhenDeviceIsLoweredEnabled
setDismissWhenDeviceIsLoweredEnabled:
handsOnIdleTimeInterval
setHandsOnIdleTimeInterval:
handsOffIdleTimeInterval
setHandsOffIdleTimeInterval:
setConfigOverrideWithValue:forKey:
removeConfigOverrideForKey:
nanoAssistantEnabled
setNanoAssistantEnabled:
nanoDictationEnabled
setNanoDictationEnabled:
setNanoLanguageCode:outputVoice:forTinkerDevice:
nanoPhraseSpotterEnabled
setNanoPhraseSpotterEnabled:
nanoRaiseToSpeakEnabled
setNanoRaiseToSpeakEnabled:
nanoUseDeviceSpeakerForTTS
setNanoUseDeviceSpeakerForTTS:
nanoTTSSpeakerVolume
setNanoTTSSpeakerVolume:
nanoLanguageCode
setNanoLanguageCode:
nanoOutputVoice
setNanoOutputVoice:
nanoCrownActivationEnabled
setNanoCrownActivationEnabled:
nanoSiriDataSharingOptInStatus
setNanoSiriDataSharingOptInStatus:
nanoOfflineDictationStatus
erasePreferences
_registeredForInternalPrefs
_registeredForLanguageCode
_registeredForOutputVoice
_registeredForNanoPrefs
_registeredForAssistantEnablement
_registeredForDictationEnablement
_navTokenQueue
_navTokenIsValid
_navToken
_tlsSessionTicketFlushRequestPending
indexOfObject:
subarrayWithRange:
dictionaryWithObjectsAndKeys:
effectiveBoolValueForSetting:
setBoolValue:forSetting:
componentsFromLocaleIdentifier:
localeIdentifierFromComponents:
initWithLocaleIdentifier:
componentsSeparatedByString:
fileExistsAtPath:isDirectory:
_initWithRequest:objectIdentifier:
_objectIdentifier
si_dictionaryRepresentation
eventType
eventData
turnID
initWithCompletion:
releaseAssertion
_safetyBlock
initWithDate:
isOlderThan:
T@"NSString",R,N,V_identifier
T@"NSDate",R,N,V_date
speakableIdentifier
speakableDate
dateWithTimeIntervalSinceNow:
_deleteSpeakablesOlderThan:
sharedCollector
logSpeakable:forContact:withModelId:withFeatures:withScore:
logFeedbackOfType:forSpeakableId:withModelId:
logRecommendedAction:forSpeakableId:withModelId:
logInteractionEvents:forSpeakableId:
_speakableMap
fakeOneBestFromPhrases:
initWithPhrases:utterances:processedAudioDuration:
_sa_mappedArrayWithBlock:
setPhrases:
setUtterances:
setSentenceConfidence:
initWithPhrases:
aceRecognition
processedAudioDuration
_processedAudioDuration
T@"NSArray",R,C,N,V_phrases
T@"NSArray",R,C,N,V_utterances
Td,R,N,V_processedAudioDuration
TI,N,V_audioSessionID
absoluteIndexPath
item
_childNodes
_appendDescriptionToString:withIndentation:
parentNode
indexPathFromAncestorNode:
indexOfChildNode:
indexPathByAddingIndex:
exceptionWithName:reason:userInfo:
indexAtPosition:
numberOfChildNodes
childNodeAtIndex:
enumerateDescendentNodesUsingBlock:
removeChildNode:
removeFromParentNode
_setParentNode:
insertChildNode:atIndex:
removeChildNodeAtIndex:
enumerateObjectsWithOptions:usingBlock:
enumerateChildNodesWithOptions:usingBlock:
absoluteIndexPathsForTreeNodes:
containsNodeAtIndexPath:
nodeAtIndexPath:
indexPathOfNodeWithItem:
lastChildNode
addChildNode:
replaceChildNodeAtIndex:withNode:
enumerateChildNodesUsingBlock:
setItem:
_item
_parentNode
T@"AFTreeNode",W,N,S_setParentNode:,V_parentNode
childNodes
T@"NSMutableArray",R,N,G_childNodes,V_childNodes
T@,&,N,V_item
decisionDepth
decisionAge
defaultRules
decisionThreshold
weightForEvent:
maxPersistenceDepth
maxPersistenceAge
Td,R,N
handleSiriRequest:deliveryHandler:completionHandler:
getAppContextWithDeliveryHandler:completionHandler:
initWithTaskmaster:
_taskmaster
deviceRoles
requestID
initWithRequestID:deviceRoles:
_requestID
_deviceRoles
T@"NSString",R,C,N,V_requestID
TQ,R,N,V_deviceRoles
setRequestID:
setDeviceRoles:
initWithCode:userInfo:
initWithCode:localizedFailureReason:
errorWithCode:userInfo:
errorWithCode:localizedFailureReason:
initWithCode:
isSupportedAndEnabled
homeKitRoomName
homeKitMediaSystemIdentifier
mediaRemoteGroupIdentifier
mediaRemoteRouteIdentifier
initWithIsSupportedAndEnabled:homeKitRoomName:homeKitMediaSystemIdentifier:mediaRemoteGroupIdentifier:mediaRemoteRouteIdentifier:
_isSupportedAndEnabled
_homeKitRoomName
_homeKitMediaSystemIdentifier
_mediaRemoteGroupIdentifier
_mediaRemoteRouteIdentifier
TB,R,N,V_isSupportedAndEnabled
T@"NSString",R,C,N,V_homeKitRoomName
T@"NSUUID",R,C,N,V_homeKitMediaSystemIdentifier
T@"NSString",R,C,N,V_mediaRemoteGroupIdentifier
T@"NSString",R,C,N,V_mediaRemoteRouteIdentifier
setIsSupportedAndEnabled:
setHomeKitRoomName:
setHomeKitMediaSystemIdentifier:
setMediaRemoteGroupIdentifier:
setMediaRemoteRouteIdentifier:
stringWithUTF8String:
initWithName:options:queue:delegate:
fetchEligibleAnnouncementRequestTypesAndNotifyObservers:
addObserver:selector:name:object:
weakObjectsHashTable
_fetchInitialState
_updateAudioRouteAvailabilityAndBroadcast:
updateWirelessSplitterSessionInfoAndObserve
_fetchWirelessSplitterSessionInfoAndStartObservingFromSourceWithCompletion:
_getCurrentAnnouncementRoute
currentAnnouncementRoute
btAddress
provider:availableAnnouncementRequestTypesChanged:
fetchAvailableAnnouncementRequestTypesWithCompletion:
_fetchEligibleAnnouncementRequestTypesAndNotifyObservers
notifyObserversOfEligibleAnnouncementRequestTypes:
fetchEligibleAnnouncementRequestTypesWithCompletion:
provider:eligibleAnnouncementRequestTypesChanged:
_settingsConnection
startObservingWirelessSplitterSession
notifyObserversOfAvailableAnnouncementRequestTypes
_setDelegate:
supportsSpokenNotification
supportsAnnounceCall
_fetchPairedBluetoothDevicesFromSourceWithCompletion:
fetchLocalVoiceAssetAvailabilityWithCompletion:
getStateWithCompletion:
provider
platform
announceableIntentIdentifiersForUserNotificationAnnouncementType:
requiredIntentIdentifiersForUserNotificationAnnouncementType:
notifyObserver:didReceiveNotificationWithToken:
notifyObserver:didChangeStateFrom:to:
_settingsConnectionDidDisconnect
_settingsConnectionPartialVerificationResult:
_settingsConnectionServerVerificationReport:
addDelegate:
lastKnownEligibleAnnouncementRequestTypes
fetchWirelessSplitterSessionInfoAndStartObservingSync
currentlyRoutedHeadphonesProductID
currentlyRoutedHeadphonesBTAddress
setCurrentAnnouncementRoute:
_inWirelessSplitterSession
_inWirelessSplitterSessionStateValid
_localVoiceAssetAvailable
_pairedInfoChangeObserver
_wirelessSplitterSessionObserver
_wirelessGuestConnectionObserver
_forcedUpdateObserver
_lastKnownAvailableAnnouncementRequests
_lastKnownEligibleAnnouncementRequests
_delegates
_currentAnnouncementRoute
T@"AFSiriAnnouncementRoute",&,N,V_currentAnnouncementRoute
_enqueueBlock:forReason:
_myriadStateToString:
startMonitoringWithTimeoutInterval:instanceContext:
_registerForMyriadEvents
_setDecisionIsPending
_cancelRepostedMyriadDecisionTimer
_fetchCurrentMyriadDecisionWithWaitTime:
_deregisterFromRepostedDecisionResultsObservers
_dequeueBlocksWithSignal:
_deregisterFromMyriadEventNotifications
_clear
_resultSeenWithValue:
_flushCompletions:
sharedMonitor
waitForMyriadDecisionWithCompletion:
waitForMyriadDecisionForReason:withCompletion:
startMonitoringWithTimeoutInterval:
ignoreMyriadEvents:
dequeueBlocksWaitingForMyriadDecision
stopMonitoring
isMonitoring
didWin
_ignoreRepostMyriadNotification:
_completions
_beginObserver
_wonObserver
_lostObserver
_repostedWonObserver
_fetchRepostedMyriadDecisionTimer
_myriadMonitorQueue
_myriadEventMonitorTimeout
_isRegisteredForMyriadEventNotification
_ignoreMyriadEvents
_isMonitoring
_ignoreRepostMyriadNotification
_block
initWithIdentifier:languageCode:rootNode:
initWithIdentifier:languageCode:
_rootNode
_nodeAtIndexPath:
conversation:didRemoveItemsWithIdentifiers:atIndexPaths:parentItemIdentifiers:
_nodeContainsProvisionalItems:
isConfirmedDialogPhase
isExpository
isConfirmationDialogPhase
isClarificationDialogPhase
af_isUtterance
isUserRequestDialogPhase
completionDialogPhase
orderedSet
strongToStrongObjectsMapTable
indexPath
indexPathByRemovingLastIndex
keyEnumerator
conversationItemType
af_mappedArray:
isSummaryDialogPhase
_childOfNode:withItemWhichCanBeUpdatedWithAceObject:inDialogPhase:
_changePresentationStateForNodes:
notifyDelegateOfUpdates:inserts:presentationChanges:
_removeNodes:
initWithConversationItemType:aceObject:aceCommandIdentifier:transient:supplemental:immersiveExperience:indexPath:
_processInsertions:inDialogPhase:
indexPathForItemWithIdentifier:
numberOfChildrenForItemAtIndexPath:
_addItemsForAceViews:withDialogPhase:fromCommandWithIdentifier:atIndexPaths:isSupplemental:isImmersiveExperience:
_indexPathsForAddingItemsWithCount:asChildrenOfItemWithIdentifier:
_addItemsForAceViews:withDialogPhase:fromCommandWithIdentifier:asChildrenOfItemWithIdentifier:isSupplemental:isImmersiveExperience:
_addItemsForAceViews:withDialogPhase:fromCommandWithIdentifier:atIndexPaths:
_addItemsForAceViews:withDialogPhase:fromCommandWithIdentifier:asChildrenOfItemWithIdentifier:
views
_addItemsForAceObjects:type:aceCommandIdentifier:dialogPhase:asChildrenOfItemWithIdentifier:
speakableText
setSpeakableText:
reflectionDialogPhase
addItemsForAceViews:withDialogPhase:asChildrenOfItemWithIdentifier:
viewId
removeItemsAtIndexPaths:
_indexPathForItemWithIdentifier:ignoreNonExistent:
_itemAtIndexPath:
itemAtIndexPath:
initWithIndex:
_enumerateItemsUsingBlock:
isSynchronizedWithServer
propertyListWithTreeNode:itemPropertyListCreation:
treeNodeWithPropertyList:error:itemCreation:
localizedFailureReason
setSynchronizedWithServer:
conversation:didUpdateItemsAtIndexPaths:
conversation:didInsertItemsAtIndexPaths:
conversation:presentationStateDidChangeForItemsAtIndexPaths:
conversation:didChangeWithTransaction:
insertItemsForAceViews:withDialogPhase:atIndexPaths:
addItemsForAddViewsCommand:
addItemsForAceObjects:type:dialogPhase:asChildrenOfItemWithIdentifier:
addItemForSpeechRecognizedCommand:
addAdditionalSpeechInterpretation:refId:
additionalSpeechInterpretationsForRefId:
addRecognitionUpdateWithPhrases:utterances:refId:
updatedUserUtteranceForRefId:
addItemForPartialResultCommand:
addItemsForShowHelpCommand:
addItemForMusicStartSessionCommand:
addSelectionResponse:
updateWithUpdateViewsCommand:
removeItemsWithIdentifiers:
removeItemsFollowingItemAtIndexPath:
removeTransientItems
cancelItemWithIdentifier:
containsItemWithIdentifier:
identifierOfItemAtIndexPath:
hasItemWithIdentifier:
itemWithIdentifier:
parentOfItemWithIdentifier:
lastItem
typeForItemAtIndexPath:
dialogPhaseForItemAtIndexPath:
aceObjectForItemAtIndexPath:
presentationStateForItemAtIndexPath:
numberOfChildrenForItemWithIdentifier:
aceCommandIdentifierForItemAtIndexPath:
itemAtIndexPathIsVirgin:
containsItemForAceViewWithIdentifier:
_setRootNode:
lastRestoredItem
_setLastRestoredItem:
_additionalInterpretationsForRefId
_updatedUserUtteranceForRefId
_synchronizedWithServer
_lastRestoredItem
rootNode
T@"AFTreeNode",&,N,G_rootNode,S_setRootNode:,V_rootNode
T@"<AFConversationStorable>",&,N,S_setLastRestoredItem:,V_lastRestoredItem
T@"NSString",R,C,N,V_languageCode
synchronizedWithServer
TB,N,GisSynchronizedWithServer,V_synchronizedWithServer
T@"<AFConversationDelegate>",W,N,V_delegate
initWithBytes:length:
appendBytes:length:
subdataWithRange:
bytes
initWithBytesNoCopy:length:freeWhenDone:
appearance
addTitleVariant:
initWithBulletinAction:
getTitleVariants
bbAction
bbActionID
titleVariants
setTitleVariants:
_bbAction
_bbActionID
_titleVariants
T@"NSMutableSet",&,N,V_titleVariants
T@"BBAction",R,N,V_bbAction
T@"NSString",R,C,N,V_bbActionID
contextFetchDelay
contextData
initWithGeneration:contextData:contextFetchDelay:
_generation
_contextData
_contextFetchDelay
TQ,R,N,V_generation
T@"NSData",R,C,N,V_contextData
Td,R,N,V_contextFetchDelay
setGeneration:
setContextData:
setContextFetchDelay:
deploymentGroupProperties
playsTwoShotSoundForSiriVOXSounds
playsSessionInactiveSoundForSiriVOXSounds
logExperimentExposureForSiriVOXSounds
experimentsByConfigurationIdentifier
experimentForSiriVOXSounds
T@"AFExperiment<AFExperimentForSiriVOXSounds>",R,N
_fire
initWithIdentifier:queue:effectiveDate:expirationDuration:heartBeatInterval:heartBeatHandler:invalidationHandler:
numberOfHeartBeats
heartBeatInterval
_heartBeatTimer
_expirationTimer
_heartBeatHandler
_invalidationHandler
_numberOfHeartBeats
_heartBeatInterval
Td,R,N,V_heartBeatInterval
deviceRingerSwitchState
isDeviceWatchAuthenticated
areAnnouncementRequestsPermittedByPresentationWhileActive
outputVolume
accessibilityState
tapToSiriAudioPlaybackRequest
twoShotAudioPlaybackRequest
deviceSetupFlowBeginDate
deviceSetupFlowEndDate
_isDeviceInCarDNDMode
_isDeviceInStarkMode
_isDeviceWatchAuthenticated
_areAnnouncementRequestsPermittedByPresentationWhileActive
_outputVolume
_accessibilityState
_deviceRingerSwitchState
_tapToSiriAudioPlaybackRequest
_twoShotAudioPlaybackRequest
_deviceSetupFlowBeginDate
_deviceSetupFlowEndDate
T@"AFAccessibilityState",R,C,N,V_accessibilityState
Tq,R,N,V_deviceRingerSwitchState
TB,R,N,V_isDeviceInCarDNDMode
TB,R,N,V_isDeviceInStarkMode
TB,R,N,V_isDeviceWatchAuthenticated
TB,R,N,V_areAnnouncementRequestsPermittedByPresentationWhileActive
Tf,R,N,V_outputVolume
T@"AFAudioPlaybackRequest",R,C,N,V_tapToSiriAudioPlaybackRequest
T@"AFAudioPlaybackRequest",R,C,N,V_twoShotAudioPlaybackRequest
T@"NSDate",R,C,N,V_deviceSetupFlowBeginDate
T@"NSDate",R,C,N,V_deviceSetupFlowEndDate
setOutputVolume:
setTapToSiriAudioPlaybackRequest:
setTwoShotAudioPlaybackRequest:
setDeviceSetupFlowBeginDate:
setDeviceSetupFlowEndDate:
initWithLocale:
_shouldAutomaticallyProvideFunctions
setHandlesFunctions:
registerProvider:forNamespace:
handleTTSCodes
handlesFunctions
_parseStringWithFormat:error:hadEmpties:containsPrivacySensitiveContents:externalProviders:
stringForExpression:containsPrivacySensitiveContents:
stringForExpression:
parseStringWithFormat:includeControlCharacters:error:hadEmpties:containsPrivacySensitiveContents:externalProviders:
_handleOptionalAtIndex:withBuffer:totalLength:consumedLength:containsPrivacySensitiveContents:externalProviders:
_handleProviderAtIndex:withBuffer:totalLength:consumedLength:containsPrivacySensitiveContents:hadEmpties:externalProviders:
stringWithCapacity:
_handleControlCodeAtIndex:withBuffer:totalLength:consumedLength:hadEmpties:containsPrivacySensitiveContents:externalProviders:
parseStringWithFormat:error:hasExternalDomains:
parseStringWithFormat:error:containsPrivacySensitiveContents:hasExternalDomains:
parseUserGeneratedMessage:
setHandleTTSCodes:
parseStringWithFormat:error:
parseStringWithFormat:error:containsPrivacySensitiveContents:
parseStringRemovingControlCharacters:error:
parseStringRemovingControlCharacters:error:containsPrivacySensitiveContents:
_providers
_functionHandler
_locale
TB,N
initWithAceObject:
setAssistantBulletin:
attachmentURLForExpression:
_handleNotificationWithToken:
_updateStateWithToken:
_registrationToken
_flags
T@"NSString",R,C,N,V_name
timeZoneWithName:
timeZoneWithAbbreviation:
setTimeZone:
localTimeZone
calendarWithIdentifier:
setCalendar:
locale
stringFromDate:
setDateStyle:
setTimeStyle:
dateFormatFromTemplate:options:locale:
characterSetWithCharactersInString:
rangeOfCharacterFromSet:
setDateFormat:
_dateFormattedWithFormatter:arguments:
lowercaseStringWithLocale:
_meCard
fullName
firstName
lastName
nickName
_peerInfoForContextIdentifier:
roomName
_currentTime:
_currentShortDate:
_currentLongDate:
_currentWeekday:
_tempInWeatherUnits:
_deviceModel
_lowercaseString:
_siriUsageDescription:
_speechRecognitionUsageDescription:
_contextRoomName:
_contextDeviceName:
_userFullName:
_userFirstName:
_userMiddleName:
_userLastName:
_userNickName:
_meCardIdentifier:
_callFunction:withArguments:
_dateFormatter
_timeFormatter
_dictationService
dictationConnectionSpeechRecordingWillBegin:
detectUtterances
dictationConnection:speechRecordingDidBeginWithOptions:
dictationConnectionSpeechRecordingDidBegin:
dictationConnectionSpeechRecordingDidEnd:
dictationConnectionSpeechRecordingDidCancel:
_willFailDictationWithError:
dictationConnection:speechRecordingDidFail:
_willCompleteDictation
dictationConnection:didRecognizePhrases:languageModel:correctionIdentifier:replacingPreviousPhrasesCount:
dictationConnection:didRecognizePackage:
dictationConnection:didRecognizePhrases:languageModel:correctionIdentifier:
dictationConnection:didRecognizeTokens:languageModel:
logEventWithType:contextProvider:
dictationConnection:didRecognizePartialResult:
af_tokens
_delegateDidRecognizeSpeechTokens:languageModel:delegate:
dictationConnection:didProcessAudioDuration:
dictationConnection:didRecognizeTranscriptionObjects:languageModel:
dictationConnection:speechRecognitionDidFail:
dictationConnectionSpeechRecognitionDidSucceed:
dictationConnection:didFinishWritingAudioFile:error:
dictationConnnectionDidChangeAvailability:
dictationConnection:didReceiveSearchResults:recognizedText:stable:final:
dictationConnection:didDetectLanguage:confidenceScores:isConfident:
dictationConnection:didDetectLanguage:confidenceScores:
dictationConnection:didRecognizeMultilingualSpeech:
dictationConnection:languageDetectorFailedWithError:
dictationConnection:didBeginLocalRecognitionWithModelInfo:
_tellSpeechDelegateAudioFileFinished:error:
_cancelTimerClearBuffer
_connectionClearedForInterruption:
_registerInvalidationHandlerForXPCConnection:
_dispatchAsync:
startRequestActivityWithCompletion:
startRecordingForPendingDictationWithLanguageCode:options:speechOptions:reply:
startDictationWithLanguageCode:options:speechOptions:
startRecordedAudioDictationWithOptions:language:narrowband:forceSampling:
addRecordedSpeechSampleData:
sendSpeechCorrectionInfo:forCorrectionContext:
sendSpeechCorrectionInfo:interactionIdentifier:
preheat
preheatForLanguageCode:
preheatTestWithLanguage:options:
preheatWithRecordDeviceIdentifier:
recordFailureMetricsForError:
_startDictationWithURL:isNarrowBand:language:options:
_sendEngagementFeedback:voiceQueryIdentifier:
getInstalledOfflineLanguagesWithCompletion:
requestOfflineAssistantSupportForLanguage:completion:
requestOfflineDictationSupportForLanguage:completion:
reportIssueForError:eventType:context:
reportIssueForError:eventType:subtype:context:
sendUserSelectedAlternativeDictationLanguageCode:
initWithDictationConnection:
_invokeRequestTimeout
_cancelRequestTimeout
_scheduleRequestTimeout
dictationIsAvailableForLanguage:synchronous:
forcedOfflineDictationIsAvailableForLanguage:synchronous:
synchronousRemoteObjectProxyWithErrorHandler:
_availabilityChanged
_tellSpeechDelegateAvailabilityChanged
initWithTurnIdentifier:
audioFileType
interactionIdentifier
fieldLabel
setInteractionIdentifier:
objectForKeyedSubscript:
preferOnDeviceRecognition
setSpeechRecognitionSource:
emitInstrumentation:
logDictationStarted
_sendPendingAnalyticsEvents
_LogUEIRequestCategorization:
_logRequestCompetionStatusWithEventType:error:
logDictationCancelled
logDictationFailedWithError:
logDictationSucceeded
_addPreheatAnalyticsEvent
expectedActivationEventTime
setActivationEventTime:
setExpectedActivationEventTime:
_setActivationTimeOnOptionsIfNecessary:
_willStartDictationWithLanguageCode:options:speechOptions:machAbsoluteTime:
_dictationServiceWithErrorHandler:
initWithListenerEndpoint:
continuePendingSpeechRequestFromTimestamp:
addBarrierBlock:
forceOfflineRecognition
incremental
offlineLanguage
setOfflineLanguage:
startRecordedAudioDictationWithOptions:forLanguage:narrowband:forceSampling:
appendData:
_sendDataIfNeeded
_willCancelDictation
_delayedStopSpeechWithOptions:
_dequeueAudioWithLength:
_updateBufferFlushTimerWithDelay:
replaceBytesInRange:withBytes:length:
_cancelBufferFlushTimer
getForcedOfflineDictationSupportedLanguagesWithCompletion:
languageDetectorIsEnabled
dictationIsSupportedForLanguageCode:error:
fetchSupportedLanguageCodes:
_tellSpeechDelegateRecordingWillBegin
_tellSpeechDelegateRecordingDidBeginWithOptions:
_tellSpeechDelegateDidRecognizePackage:
_tellSpeechDelegateDidRecognizeSpeechPhrases:utterances:languageModel:correctionIdentifier:audioAnalytics:
_tellSpeechDelegateDidRecognizePartialResult:
_tellSpeechDelegateDidRecognizeSpeechTokens:languageModel:
_tellSpeechDelegateDidProcessAudioDuration:
_tellSpeechDelegateDidRecognizeTranscriptionObjects:languageModel:
_tellSpeechDelegateSpeechRecognitionDidSucceed
_tellSpeechDelegateSearchResultsReceived:recognitionText:stable:final:
_tellSpeechDelegateLanguageDetected:confidenceScores:isConfident:
_tellSpeechDelegateMultilingualSpeechRecognized:
_tellSpeechDelegateLanguageDetectorDidFail:
_tellSpeechDelegateDidBeginLocalRecognitionWithModelInfo:
_extendRequestTimeout
dictationIsAvailableForLanguage:
forcedOfflineDictationIsAvailableForLanguage:
beginAvailabilityMonitoring
cancelAvailabilityMonitoring
startRecordingForPendingDictationWithLanguageCode:options:speechOptions:
startDictationWithLanguageCode:options:
startRecordedAudioDictationWithOptions:forLanguage:
startRecordedAudioDictationWithOptions:forLanguage:narrowband:
sendSpeechCorrection:forIdentifier:
sendSpeechCorrection:interactionIdentifier:
delegateQueue
setDelegateQueue:
_lastUsedLanguage
_knownOfflineInstalledLanguages
_isWaitingForKnownOfflineInstalledLanguages
_hasActiveRequest
_isWaitingForAudioFile
_recognizingIncrementally
_internalQueue
_timeoutTimer
_bufferTimer
_forceOfflineRecognition
_stopOptions
_buffer
_audioStartTime
_amountDataSent
_narrowband
_requestIdString
_previouslyRecognizedPhrases
_onDeviceDictationUIInteractionIdentifier
_preheatEvent
_intstrumentationContext
_isDetectingUtterances
_delegateQueue
T@"<AFDictationDelegate>",W,N,V_delegate
T@"NSObject<OS_dispatch_queue>",&,N,V_delegateQueue
startDictationWithSpeechFileAtURL:isNarrowBand:options:forLanguage:
startDictationWithSpeechFileAtURL:options:forLanguage:
sendEngagementFeedback:voiceQueryIdentifier:
secureOfflineOnly
speechRecordingWillBeginWithInputAudioPowerXPCWrapper:
speechRecordingDidBeginWithOptions:sessionUUID:sessionRequestUUID:
speechDidBeginLocalRecognitionWithModelInfo:
speechRecordingDidEnd
speechRecordingDidCancel
speechRecordingDidFail:
speechDidRecognizePhrases:utterances:usingSpeechModel:correctionContext:audioAnalytics:
speechDidRecognizePartialResult:
speechDidRecognizeTokens:usingSpeechModel:
speechDidProcessAudioDuration:
speechDidRecognizeTranscriptionObjects:usingSpeechModel:
speechRecognitionDidFinishWithError:
speechDidFinishWritingAudioFile:error:
speechDidReceiveSearchResults:recognitionText:stable:final:
speechDidRecognizePackage:
speechDidDetectLanguage:confidenceScores:isConfident:
speechDidRecognizeMultilingualSpeech:
languageDetectorFailedWithError:
suppressStopAlert
setSuppressStopAlert:
suppressStartAlert
setSuppressStartAlert:
results
setResults:
_results
T@"NSArray",C,N,V_results
nearbyDevicesPayloads
sharedLoggingService
logToCoreAnalyticsCrossDeviceRequestEvent:
initWithContext:
performRequestWithResultHandler:
vendorID
isAdvancedAppleAudioDevice
supportsInEarDetection
supportsVoiceTrigger
supportsListeningModeANC
supportsListeningModeTransparency
address
deviceUID
initWithAddress:deviceUID:vendorID:productID:isAdvancedAppleAudioDevice:supportsInEarDetection:supportsVoiceTrigger:supportsSpokenNotification:supportsListeningModeANC:supportsListeningModeTransparency:supportsAnnounceCall:
_isAdvancedAppleAudioDevice
_supportsInEarDetection
_supportsVoiceTrigger
_supportsSpokenNotification
_supportsListeningModeANC
_supportsListeningModeTransparency
_supportsAnnounceCall
_vendorID
_productID
_address
_deviceUID
T@"NSString",R,C,N,V_address
T@"NSUUID",R,C,N,V_deviceUID
TI,R,N,V_vendorID
TI,R,N,V_productID
TB,R,N,V_isAdvancedAppleAudioDevice
TB,R,N,V_supportsInEarDetection
TB,R,N,V_supportsVoiceTrigger
TB,R,N,V_supportsSpokenNotification
TB,R,N,V_supportsListeningModeANC
TB,R,N,V_supportsListeningModeTransparency
TB,R,N,V_supportsAnnounceCall
setAddress:
setDeviceUID:
setVendorID:
setProductID:
setIsAdvancedAppleAudioDevice:
setSupportsInEarDetection:
setSupportsVoiceTrigger:
setSupportsSpokenNotification:
setSupportsListeningModeANC:
setSupportsListeningModeTransparency:
setSupportsAnnounceCall:
_initWithOriginatingAceID:
_originatingAceID
_resultDescription
isAnnounceEnabled
isAnnounceTelephonyEnabled
featureFlags
isLocationSearchContinuityEnabled
setLocationSearchContinuityEnabled:
dump
isDictationVoiceTriggerEnabled
isTrialDictationAssetDeliveryEnabled
isHintsEnabled
isAudioSessionCoordinationEnabled
isThemisABEnabled
isRemoraEnabled
isMyriadNonSpeakerRawScoreThresholdEnabled
isLassoEnabled
isAnnounceGroupFaceTimeInviteEnabled
isTimerAlarmCoordinationEnabled
isListeningOnBothStereoPairUnitsEnabled
isHomeAutomationBackgroundRequestEnabled
isSiriRequestDispatcherEnabled
isAnnounceNotificationsEnabled
isCrossDeviceTVControlEnabled
isAnnounceMessagesInCarPlayEnabled
isCrossDeviceVoiceFollowUpEnabled
isTVPushToTalkEnabled
isCDAFaceDetectionEnabled
isMyriadSelfMetricsEnabled
initWithVtSatScore:
initWithConfidenceScores:
alarmsByID
notifiedFiringAlarmIDs
mostRecentFiringAlarm
firingAlarms
timeIntervalSinceDate:
timerId
setTimerId:
value
setValue:
_timerId
_value
T@"NSString",C,N,V_timerId
Tq,N,V_state
T@"NSNumber",C,N,V_value
addSessionObserver:
_requestTypesForCarPlayAvailableOrConnected:
_isCarPlayConnectedWithCompletion:
currentSession
waitForSessionInitialization
_updateForCarPlaySessionConnected:
_setLastKnownAvailableAnnouncementRequestTypesAndNotifyObservers:
updateForCarPlaySessionConnected:
initWithQueue:
_availableAnnouncementRequestTypesForCarPlayConnectionWithCompletion:
isCarPlayConnectedWithCompletion:
_notifyObserversOfUpdatedAvailableAnnouncementRequestTypes:
startedConnectionAttemptOnTransport:
cancelledConnectionAttemptOnTransport:
sessionDidConnect:
sessionDidDisconnect:
session:didUpdateConfiguration:
_carSessionStatus
_providerQueue
_isCarPlayConnected
_lastKnownAvailableAnnouncementRequestTypes
_lastKnownEligibleAnnouncementRequestTypes
handleFailureInFunction:file:lineNumber:description:
startingAlertBehavior
stoppedAlertBehavior
stoppedWithErrorAlertBehavior
initWithStartingAlertBehavior:stoppedAlertBehavior:stoppedWithErrorAlertBehavior:
_startingAlertBehavior
_stoppedAlertBehavior
_stoppedWithErrorAlertBehavior
T@"AFSpeechRecordingAlertBehavior",R,C,N,V_startingAlertBehavior
T@"AFSpeechRecordingAlertBehavior",R,C,N,V_stoppedAlertBehavior
T@"AFSpeechRecordingAlertBehavior",R,C,N,V_stoppedWithErrorAlertBehavior
setStartingAlertBehavior:
setStoppedAlertBehavior:
setStoppedWithErrorAlertBehavior:
deploymentReason
configurationIdentifier
configurationVersion
deploymentGroupIdentifier
initWithConfigurationIdentifier:configurationVersion:deploymentGroupIdentifier:deploymentGroupProperties:deploymentReason:
_configurationIdentifier
_configurationVersion
_deploymentGroupIdentifier
_deploymentGroupProperties
_deploymentReason
T@"NSString",R,C,N,V_configurationIdentifier
T@"NSString",R,C,N,V_configurationVersion
T@"NSString",R,C,N,V_deploymentGroupIdentifier
T@"NSDictionary",R,C,N,V_deploymentGroupProperties
Tq,R,N,V_deploymentReason
setConfigurationIdentifier:
setConfigurationVersion:
setDeploymentGroupIdentifier:
setDeploymentGroupProperties:
setDeploymentReason:
initWithTimestamp:
setNotifyState:
setHandoffOriginDeviceName:
setHandoffURLString:
setHandoffRequiresUserInteraction:
setHandoffNotification:
setDirectActionAppId:
setDirectActionEvent:
setTestRequestOptions:
setRequestCompletionOptions:
setExpectedSpeakerSharedUserID:
setExpectedSpeakerConfidenceScore:
setNonspeakerConfidenceScores:
requiresUserInteraction
handoffOriginDeviceName
isSpeechRequest
legacyDirectActionIdentifier
requestCompletionOptions
notifyState
handoffRequestData
handoffURLString
handoffRequiresUserInteraction
handoffNotification
correctedSpeech
correctedSpeechContext
directActionAppId
directActionEvent
testRequestOptions
expectedSpeakerSharedUserID
expectedSpeakerConfidenceScore
nonspeakerConfidenceScores
_handoffRequiresUserInteraction
_turnIdentifier
_requestCompletionOptions
_notifyState
_legacyDirectActionIdentifier
_handoffOriginDeviceName
_handoffRequestData
_handoffURLString
_handoffNotification
_correctedSpeech
_correctedSpeechContext
_startRequest
_startLocalRequest
_directActionAppId
_directActionEvent
_activationEvent
_testRequestOptions
_expectedSpeakerSharedUserID
_expectedSpeakerConfidenceScore
_nonspeakerConfidenceScores
TQ,N,V_options
T@"NSNumber",C,N,V_notifyState
T@"NSString",C,N,V_legacyDirectActionIdentifier
T@"NSString",C,N,V_handoffOriginDeviceName
T@"NSData",C,N,V_handoffRequestData
T@"NSString",C,N,V_handoffURLString
TB,N,V_handoffRequiresUserInteraction
T@"NSString",C,N,V_handoffNotification
T@"NSString",C,N,V_correctedSpeech
T@"NSDictionary",C,N,V_correctedSpeechContext
T@"SAStartRequest",C,N,V_startRequest
T@"SAStartLocalRequest",C,N,V_startLocalRequest
T@"NSString",C,N,V_directActionAppId
Tq,N,V_directActionEvent
Tq,N,V_activationEvent
T@"AFSpeechRequestOptions",C,N,V_speechRequestOptions
T@"AFTestRequestOptions",C,N,V_testRequestOptions
T@"AFRequestCompletionOptions",C,N,V_requestCompletionOptions
T@"NSString",C,N,V_expectedSpeakerSharedUserID
TQ,N,V_expectedSpeakerConfidenceScore
T@"NSDictionary",C,N,V_nonspeakerConfidenceScores
T@"NSUUID",C,N,V_turnIdentifier
effectiveMachServiceName:
createXPCListenerWithMachServiceName:
createXPCConnectionForMachService:targetQueue:flags:
createXPCListenerForMachService:targetQueue:flags:
isDefault
isCurrent
T@"AFInstanceInfo",R,N
audioDeviceIdentifier
supportsAudioPowerUpdate
supportsProxyGroupPlayer
supportsTelephony
T@"NSString",R,C,N
initWithMachServiceName:
setAlarmIdentifiers:
setAlarmIdentifier:
alarmIdentifiers
_alarmIdentifiers
T@"NSArray",C,N,V_alarmIdentifiers
isSpeaker
hasActiveThirdPartyMusicSubscription
schemaCategoryType
uniqueIdentifier
loggingUniqueIdentifier
model
assistantIdentifier
manufacturer
categoryType
initWithUniqueIdentifier:loggingUniqueIdentifier:name:model:roomName:assistantIdentifier:isSpeaker:hasActiveThirdPartyMusicSubscription:manufacturer:categoryType:schemaCategoryType:
_isSpeaker
_hasActiveThirdPartyMusicSubscription
_uniqueIdentifier
_loggingUniqueIdentifier
_model
_roomName
_assistantIdentifier
_manufacturer
_categoryType
_schemaCategoryType
T@"NSUUID",R,C,N,V_uniqueIdentifier
T@"NSUUID",R,C,N,V_loggingUniqueIdentifier
T@"NSString",R,C,N,V_model
T@"NSString",R,C,N,V_roomName
T@"NSString",R,C,N,V_assistantIdentifier
TB,R,N,V_isSpeaker
TB,R,N,V_hasActiveThirdPartyMusicSubscription
T@"NSString",R,C,N,V_manufacturer
T@"NSString",R,C,N,V_categoryType
Tq,R,N,V_schemaCategoryType
setUniqueIdentifier:
setLoggingUniqueIdentifier:
setModel:
setRoomName:
setAssistantIdentifier:
setIsSpeaker:
setHasActiveThirdPartyMusicSubscription:
setManufacturer:
setCategoryType:
setSchemaCategoryType:
content
body
speakableContent
speakableDescription
beginGrouping
endGroupingWithOptions:
isEqualToDictionary:
minusSet:
intersectSet:
isEqualToDate:
clockItemStorageDidUpdate:insertedItemIDs:updatedItemIDs:deletedItemIDs:
itemID
removeObjectsForKeys:
removeAllObjects
initWithIdentifier:delegate:
setItemsByID:
itemWithID:
insertOrUpdateItems:
deleteItemsWithIDs:
deleteAllItems
itemsByID
_groupingDepth
_workingGeneration
_workingDate
_workingItemsByID
_itemsByID
TQ,N,V_generation
T@"NSDate",C,N,V_date
T@"NSDictionary",C,N,V_itemsByID
_af_lenient:map:
indexOfObjectPassingTest:
indexesOfObjectsPassingTest:
objectsAtIndexes:
af_lenientMappedArray:
af_lenientMappedDictionary:
af_firstObjectPassingTest:
af_objectsPassingTest:
af_mappedDictionary:
af_mappedSet:
serializedContextForKey:
initWithSerializedBackingStore:
contextMetadataForKey:
unsignedLongValue
serializedHistoricalContextForKey:
historicalContextMetadataForKey:
ad_shortDescription
af_didHearVoiceTrigger
myriadAdvertisementContext
locationSnapshot
callStateSnapshot
systemStateSnapshot
af_validFlowContext
siriClientState
setLocalizedDateFormatFromTemplate:
historicalSiriClientStates
historicalSiriClientStateMetadata
deliveryDate
alarmSnapshotMetadata
timerSnapshotMetadata
playbackStateMetadata
homeAnnouncementSnapshotMetadata
heardVoiceTrigger
heardVoiceTriggerMetadata
multiUserStateSnapshot
multiUserStateMetadata
locationMetadata
callStateMetadata
systemStateMetadata
siriClientStateMetadata
buildBuiltInContextsDescriptions
T@"AFClockAlarmSnapshot",R,N
T@"AFDeviceContextMetadata",R,N
T@"AFClockTimerSnapshot",R,N
T@"AFMediaPlaybackStateSnapshot",R,N
T@"AFHomeAnnouncementSnapshot",R,N
Tq,R,N
T@"NSData",R,N
T@"AFMultiUserStateSnapshot",R,N
T@"AFLocationSnapshot",R,N
T@"AFCallStateSnapshot",R,N
T@"AFSystemStateSnapshot",R,N
_handleCommand:afterCurrentRequest:isOneWay:completion:
handleRemoteCommand:afterCurrentRequest:isOneWay:completion:
initAndHandleCommand:afterCurrentRequest:isOneWay:commandHandler:completion:
_commandHandler
_handleCommand:afterCurrentRequest:isOneWay:commandHandler:completion:
handleCommand:afterCurrentRequest:commandHandler:completion:
handleOneWayCommand:commandHandler:completion:
handleCommand:commandHandler:completion:
setDialogIdentifier:
setCanUseServerTTS:
setDisplayTarget:
setViews:
localDeviceInfo
_activeDeviceInfoChanged:
_updateWithRouteIdentifier:groupIdentifier:
postNotificationName:object:userInfo:
localOrigin
deviceInfoForOrigin:queue:completion:
_getMRDeviceInfoWithCompletion:
groupUID
currentDevice
getRouteIdentifierWithCompletion:
getGroupIdentifierWithCompletion:
serialQueue
setSerialQueue:
_routeIdentifier
_groupIdentifier
_serialQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_serialQueue
initWithMessage:makeAppFrontmost:
message
_makeAppFrontmost
_message
_frontmost
localizations
URLsForResourcesWithExtension:subdirectory:localization:
regularExpressionWithPattern:options:error:
lastPathComponent
numberOfMatchesInString:options:range:
initWithContentsOfURL:
compactDisplayNameInLanguage:forSiriLanguage:
longDisplayNameInLanguage:forSiriLanguage:
localizedNameOfOutputVoiceWithIdentifier:inDisplayLanguage:
localizedNameOfVoiceGender:inDisplayLanguage:
outputVoiceDescriptorForOutputLanguageCode:voiceName:
initWithHexColor:colorName:alpha:localizedOutputVoiceColor:localizedOutputVoice:
_voicesFromVoiceMapWithLanguage:
outputVoiceComparator
sortedArrayUsingComparator:
localizedStringWithFormat:
pathForResource:ofType:
dictionaryWithContentsOfFile:
dialectsMap
_voiceMaps
_getVoiceOrdering
defaultOutputVoiceForSiriSessionLanguage:
voiceNamesForOutputLanguageCode:gender:
localizedCompactNameForSiriLanguage:inDisplayLanguage:
localizedNameForSiriLanguage:inDisplayLanguage:
localizedNameOfOutputVoice:inDisplayLanguage:
localizedGenderOfOutputVoice:inDisplayLanguage:
outputVoiceColorDescriptorForOutputLanguageCode:voiceName:
allOutputVoiceIdentifiersForSiriLanguage:
loadInfoForVoicesWithLanguageCode:
voiceSimilarToVoice:inSiriSessionLanguage:
_tables
allVoicesForSiriSessionLanguage:
isValidForSiriSessionLanguage:
voiceInfoForLanguageCode:
voiceInfoForSessionLanguageCode:
outputVoiceIdentifierForLanguageCode:voiceName:
keyboardType
transcriptionMode
preferOnlineRecognition
languageDetectionUserContext
returnKeyType
dictationOptionsWithoutTextContext
prefixText
setPrefixText:
postfixText
setPostfixText:
selectedText
setSelectedText:
applicationName
setApplicationName:
applicationDisplayName
setApplicationDisplayName:
applicationVersion
setApplicationVersion:
setContext:
setFieldLabel:
fieldIdentifier
setFieldIdentifier:
requestIdentifier
setRequestIdentifier:
setKeyboardType:
setReturnKeyType:
languageCodeOverride
setLanguageCodeOverride:
setTranscriptionMode:
microphoneIdentifier
setMicrophoneIdentifier:
voiceSearchTypeOptions
setVoiceSearchTypeOptions:
voiceSearchHeaderFields
setVoiceSearchHeaderFields:
voiceSearchQueryParameters
setVoiceSearchQueryParameters:
voiceTriggerEventInfo
setVoiceTriggerEventInfo:
setForceOfflineRecognition:
setPreferOnlineRecognition:
setDetectUtterances:
continuousListening
setContinuousListening:
shouldHandleCapitalization
setShouldHandleCapitalization:
setPreferOnDeviceRecognition:
setSecureOfflineOnly:
farField
setFarField:
keyboardIdentifier
setKeyboardIdentifier:
releaseAudioSessionOnRecordingCompletion
setReleaseAudioSessionOnRecordingCompletion:
setIncremental:
maximumRecognitionDuration
setMaximumRecognitionDuration:
taskHint
setTaskHint:
originalAudioFileURL
setOriginalAudioFileURL:
recognitionOverrides
setRecognitionOverrides:
modelOverrideURL
setModelOverrideURL:
inlineItemList
setInlineItemList:
setLanguageDetectionUserContext:
samplingInfo
setSamplingInfo:
_preferOnlineRecognition
_detectUtterances
_continuousListening
_shouldHandleCapitalization
_preferOnDeviceRecognition
_secureOfflineOnly
_farField
_releaseAudioSessionOnRecordingCompletion
_incremental
_applicationName
_applicationDisplayName
_applicationVersion
_fieldLabel
_fieldIdentifier
_interactionIdentifier
_requestIdentifier
_keyboardType
_prefixText
_postfixText
_selectedText
_returnKeyType
_transcriptionMode
_inlineItemList
_microphoneIdentifier
_keyboardIdentifier
_languageCodeOverride
_offlineLanguage
_voiceSearchTypeOptions
_voiceSearchHeaderFields
_voiceSearchQueryParameters
_voiceTriggerEventInfo
_maximumRecognitionDuration
_taskHint
_originalAudioFileURL
_recognitionOverrides
_modelOverrideURL
_languageDetectionUserContext
_samplingInfo
T@"NSString",C,N,V_applicationName
T@"NSString",C,N,V_applicationDisplayName
T@"NSString",C,N,V_applicationVersion
T@"STSiriContext",&,N,V_context
T@"NSString",C,N,V_fieldLabel
T@"NSString",C,N,V_fieldIdentifier
T@"NSString",C,N,V_interactionIdentifier
T@"NSString",C,N,V_requestIdentifier
Tq,N,V_keyboardType
T@"NSString",C,N,V_prefixText
T@"NSString",C,N,V_postfixText
T@"NSString",C,N,V_selectedText
Tq,N,V_returnKeyType
Tq,N,V_transcriptionMode
T@"NSArray",C,N,V_inlineItemList
T@"NSString",C,N,V_microphoneIdentifier
T@"NSString",C,N,V_orthography
T@"NSString",C,N,V_keyboardIdentifier
T@"NSString",C,N,V_languageCodeOverride
T@"NSString",C,N,V_offlineLanguage
Tq,N,V_voiceSearchTypeOptions
T@"NSDictionary",C,N,V_voiceSearchHeaderFields
T@"NSDictionary",C,N,V_voiceSearchQueryParameters
T@"NSDictionary",C,N,V_voiceTriggerEventInfo
TB,N,V_forceOfflineRecognition
TB,N,V_preferOnlineRecognition
TB,N,V_detectUtterances
TB,N,V_continuousListening
TB,N,V_shouldHandleCapitalization
TB,N,V_preferOnDeviceRecognition
TB,N,V_secureOfflineOnly
TB,N,V_farField
TB,N,V_releaseAudioSessionOnRecordingCompletion
TB,N,V_incremental
Td,N,V_maximumRecognitionDuration
Tq,N,V_taskHint
T@"NSURL",C,N,V_originalAudioFileURL
T@"NSDictionary",C,N,V_recognitionOverrides
T@"NSURL",C,N,V_modelOverrideURL
T@"AFLanguageDetectionUserContext",C,N,V_languageDetectionUserContext
Tq,N,V_dictationInputOrigin
T@"NSString",C,N,V_samplingInfo
imageData
setImageData:
scale
setScale:
_imageData
_scale
T@"NSData",&,N,V_imageData
Td,N,V_scale
initWithEntries:
initWithType:value:
dictionaryWithCapacity:
initWithPropertyListRepresentation:error:
setImageData:forKey:
imageDataForKey:
_entries
_valuePropertyListRepresentation
_valueForPropertyListRepresentation:type:
T@,R,N,V_value
isEnabled
primaryEarbudSide
primaryInEarStatus
secondaryInEarStatus
initWithIsEnabled:primaryEarbudSide:primaryInEarStatus:secondaryInEarStatus:
_isEnabled
_primaryEarbudSide
_primaryInEarStatus
_secondaryInEarStatus
TB,R,N,V_isEnabled
Tq,R,N,V_primaryEarbudSide
Tq,R,N,V_primaryInEarStatus
Tq,R,N,V_secondaryInEarStatus
setIsEnabled:
setPrimaryEarbudSide:
setPrimaryInEarStatus:
setSecondaryInEarStatus:
enablementFlow
newUser
recognitionLanguageWithMultipleOutputVoicesExists
userStatusFetchError
dateStartedResolvingUserStatus
dateEndedResolvingUserStatus
experiment
experimentFetchError
dateStartedResolvingExperiment
dateEndedResolvingExperiment
outputVoiceCountForRecognitionLanguage
initWithEnablementFlow:newUser:userStatusFetchError:dateStartedResolvingUserStatus:dateEndedResolvingUserStatus:experiment:experimentFetchError:dateStartedResolvingExperiment:dateEndedResolvingExperiment:outputVoiceCountForRecognitionLanguage:recognitionLanguageWithMultipleOutputVoicesExists:
_newUser
_recognitionLanguageWithMultipleOutputVoicesExists
_enablementFlow
_userStatusFetchError
_dateStartedResolvingUserStatus
_dateEndedResolvingUserStatus
_experiment
_experimentFetchError
_dateStartedResolvingExperiment
_dateEndedResolvingExperiment
_outputVoiceCountForRecognitionLanguage
Tq,R,N,V_enablementFlow
TB,R,N,V_newUser
T@"NSError",R,C,N,V_userStatusFetchError
T@"NSDate",R,C,N,V_dateStartedResolvingUserStatus
T@"NSDate",R,C,N,V_dateEndedResolvingUserStatus
T@"AFExperiment",R,C,N,V_experiment
T@"NSError",R,C,N,V_experimentFetchError
T@"NSDate",R,C,N,V_dateStartedResolvingExperiment
T@"NSDate",R,C,N,V_dateEndedResolvingExperiment
T@"NSDictionary",R,C,N,V_outputVoiceCountForRecognitionLanguage
TB,R,N,V_recognitionLanguageWithMultipleOutputVoicesExists
setEnablementFlow:
setNewUser:
setUserStatusFetchError:
setDateStartedResolvingUserStatus:
setDateEndedResolvingUserStatus:
setExperiment:
setExperimentFetchError:
setDateStartedResolvingExperiment:
setDateEndedResolvingExperiment:
setOutputVoiceCountForRecognitionLanguage:
setRecognitionLanguageWithMultipleOutputVoicesExists:
_conversationsByIdentifier
_registerConversation:withIdentifier:
writeToURL:options:error:
setResourceValue:forKey:error:
removeItemAtURL:error:
initWithContentsOfURL:options:error:
removeConversationWithIdentifier:completionBlock:
propertyListWithData:options:format:error:
saveConversation:withIdentifier:completionBlock:
fetchConversationWithIdentifier:completionBlock:
queue
setQueue:
conversationsByIdentifier
T@"NSMutableDictionary",R,N,G_conversationsByIdentifier,V_conversationsByIdentifier
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
_safeContextDictionary
_serializedBackingStoreIncludingKeys:excludingMandatoryKeys:
initWithBackingStore:
idsDeviceUniqueIdentifier
serializedBackingStore
fromLocalDevice
buildDescription
initWithSerializedBackingStore:fromLocalDevice:contextCollectorSource:
partialSerializedBackingStoreIncludingKeys:excludingMandatoryKeys:
backingStore
allContextKeys
partiallyUpdatedContextForDeviceContextKeys:excludingMandatoryKeys:fromDeviceContext:
deviceContextForDeviceContextKeys:excludingMandatoryKeys:
updatedContextWithSerializedContextByKey:metadata:
isValid
contextCollectorSource
privacyClass
_fromLocalDevice
_deviceInfo
_privacyClass
_serializedBackingStore
_dirtyFlags
_cachedDescription
_cachedDescriptionLock
_contextCollectorSource
TB,R,N,V_fromLocalDevice
T@"NSString",R,N,V_contextCollectorSource
T@"NSUUID",R,N,V_identifier
T@"AFPeerInfo",R,N,V_deviceInfo
Tq,R,N,V_privacyClass
initWithType:deliveryDate:expirationDate:redactedKeyPaths:historyConfiguration:
expirationDate
isExpiredByDate:
redactedKeyPaths
historyConfiguration
_backingStore
_deliveryDate
_expirationDate
_redactedKeyPaths
_historyConfiguration
T@"NSString",R,N,V_type
T@"NSDate",R,N,V_deliveryDate
T@"NSDate",R,N,V_expirationDate
T@"NSArray",R,N,V_redactedKeyPaths
T@"AFDeviceContextHistoryConfiguration",R,N,V_historyConfiguration
alternativeSelectionCount
setAlternativeSelectionCount:
characterModificationCount
setCharacterModificationCount:
characterInsertionCount
setCharacterInsertionCount:
characterSubstitutionCount
setCharacterSubstitutionCount:
characterDeletionCount
setCharacterDeletionCount:
correctedText
setCorrectedText:
_alternativeSelectionCount
_characterModificationCount
_characterInsertionCount
_characterSubstitutionCount
_characterDeletionCount
_correctedText
Tq,N,V_alternativeSelectionCount
Tq,N,V_characterModificationCount
Tq,N,V_characterInsertionCount
Tq,N,V_characterSubstitutionCount
Tq,N,V_characterDeletionCount
T@"NSString",C,N,V_correctedText
initWithVirtualMemorySizeInBytes:numberOfRegions:pageSizeInBytes:residentMemorySizeInBytes:peakResidentMemorySizeInBytes:physicalMemoryFootprintInBytes:
getBytes:range:
setGoodness:
pHash
isAContinuation
isATrump
goodness
isSlowdown
dataWithCapacity:
userConfidence
deviceGroup
deviceClass
tieBreaker
setDeviceID:
setPHash:
setRawAudioGoodnessScore:
setBump:
setUserConfidence:
setDeviceGroup:
setDeviceClass:
setTieBreaker:
setProductType:
setIsMe:
setIsCollectedFromContextCollector:
asAdvertisementData
deviceID
rawAudioGoodnessScore
bump
isMe
isCollectedFromContextCollector
initWithAudioData:
initWithDeviceID:data:
setRawAudioGoodnessScore:withBump:
adjustByMultiplier:adding:
generateRandomConfidence
generateTiebreaker
isInEarTrump
isCarplayTrump
isALateSupressionTrumpFor:
isAnEmergency
isAnEmergencyHandled
isSane
slowdownDelay
hasEqualAdvertismentData:
advertisementData
setAdvertisementData:
advertisementDataIsDirty
setAdvertisementDataIsDirty:
_goodness
_userConfidence
_deviceGroup
_deviceClass
_productType
_tieBreaker
_isMe
_rawAudioGoodnessScore
_bump
_isCollectedFromContextCollector
_advertisementDataIsDirty
_pHash
_deviceID
_advertisementData
TB,N,V_advertisementDataIsDirty
TC,N,V_rawAudioGoodnessScore
TC,N,V_bump
TC,N,V_goodness
T@"NSData",C,N,V_advertisementData
TC,N,V_userConfidence
TS,N,V_pHash
T@"NSUUID",C,N,V_deviceID
TC,N,V_deviceGroup
TC,N,V_deviceClass
TC,N,V_productType
TC,N,V_tieBreaker
TB,N,V_isMe
TC,N,V_isCollectedFromContextCollector
initWithStartDate:duration:
initWithStartDate:endDate:
startDate
intersectsDateInterval:
endDate
initWithEvent:streamUID:dateCreated:speechId:recordId:
initWithEvent:streamUID:dateCreated:speechId:
event
streamUID
dateCreated
speechId
recordId
_event
_streamUID
_dateCreated
_speechId
_recordId
T@"NSString",R,C,N,V_recordId
T@"AFAnalyticsEvent",R,C,N,V_event
T@"NSString",R,C,N,V_streamUID
T@"NSDate",R,C,N,V_dateCreated
T@"NSString",R,C,N,V_speechId
deliveryStream
contextDataType
siriCoreSQLiteRecord_enumerateColumnNamesAndValuesUsingBlock:
af_serviceDeviceContextForKeys:excludeContextExpiredBefore:proximity:
mediaSystemIdentifier
sharedUserIdentifier
initWithIdentifier:assistantIdentifier:mediaSystemIdentifier:mediaRouteIdentifier:sharedUserID:roomName:proximity:serializedContextByKey:metricsContext:
af_serviceDeviceContextForKeys:
initWithOptions:capacity:
_startObservingMemoryPressureWithOptions:
_stopObservingMemoryPressure
initWithOptions:
_addListener:
_removeListener:
_removeAllListeners
_handleMemoryPressureWithFlags:
memoryPressureObserver:didChangeFromCondition:toCondition:
removeAllListeners
getCurrentConditionWithCompletion:
_memoryPressureSource
_memoryPressureFlags
_listeners
setShowUIDuringListening:
setPlayAlertBeforeListening:
_initWithShowUIDuringListening:playAlertBeforeListening:
showUIBeforeListening
beepBeforeListening
delay
showUIDuringListening
playAlertBeforeListening
endpointDelay
_showUIDuringListening
_playAlertBeforeListening
_endpointDelay
TB,N,V_showUIDuringListening
TB,N,V_playAlertBeforeListening
Td,R,N,V_endpointDelay
defaultWorkspace
appTags
isLaunchProhibited
enumerateBundlesOfType:block:
_notifyObservers
_clearState
_startObservingAvailability
_stopObservingAvailability
_notifyToken
_observers
setLabel:
setLoggingAssistantIdentifier:
setSpeechIdentifier:
setHostname:
setPeerAssistantIdentifier:
setPeerLoggingAssistantIdentifier:
setPeerSpeechIdentifier:
setPeerUserAgentString:
setPeerLanguageCode:
setPeerSiriEnabled:
setPeerHostname:
setPredefinedServer:
setAceHost:
setConnectionPolicy:
setConnectionPolicyDate:
setConnectionPolicyFirstFailureDate:
setConnectionPolicyHostname:
setGroup:
setLocaleIdentifier:
label
loggingAssistantIdentifier
speechIdentifier
hostname
peerAssistantIdentifier
peerLoggingAssistantIdentifier
peerSpeechIdentifier
peerUserAgentString
predefinedServer
aceHost
connectionPolicy
connectionPolicyDate
connectionPolicyHostname
connectionPolicyFirstFailureDate
group
lastSyncDates
setLastSyncDates:
isActive
setIsActive:
initWithMessageDictionary:
messageDictionary
peerLanguageCode
peerSiriEnabled
peerHostname
_peerSiriEnabled
_isActive
_label
_loggingAssistantIdentifier
_speechIdentifier
_hostname
_peerAssistantIdentifier
_peerLoggingAssistantIdentifier
_peerSpeechIdentifier
_peerUserAgentString
_peerLanguageCode
_peerHostname
_predefinedServer
_aceHost
_connectionPolicy
_connectionPolicyDate
_connectionPolicyHostname
_lastSyncDates
_localeIdentifier
_connectionPolicyFirstFailureDate
T@"NSString",C,N,V_identifier
T@"NSDictionary",C,N,V_lastSyncDates
T@"NSString",C,N,V_localeIdentifier
TB,N,V_isActive
T@"NSString",C,N,V_label
T@"NSString",C,N,V_assistantIdentifier
T@"NSString",C,N,V_loggingAssistantIdentifier
T@"NSString",C,N,V_speechIdentifier
T@"NSString",C,N,V_hostname
T@"NSString",C,N,V_peerAssistantIdentifier
T@"NSString",C,N,V_peerLoggingAssistantIdentifier
T@"NSString",C,N,V_peerSpeechIdentifier
T@"NSString",C,N,V_peerUserAgentString
T@"NSString",C,N,V_peerLanguageCode
TB,N,V_peerSiriEnabled
T@"NSString",C,N,V_peerHostname
T@"NSString",C,N,V_predefinedServer
T@"NSString",C,N,V_aceHost
T@"NSDictionary",C,N,V_connectionPolicy
T@"NSDate",C,N,V_connectionPolicyDate
T@"NSString",C,N,V_connectionPolicyHostname
T@"NSString",C,N,V_group
T@"NSDate",C,N,V_connectionPolicyFirstFailureDate
initWithLength:
mutableBytes
items
autoDisambiguationDisabled
af_disambiguationIdentifier
af_indexIdentifierForItem:
af_itemForIndexIdentifier:
af_disambiguationInfo
af_setDisambiguationInfo:
af_assistedSelectionItem
af_saveItemSelection:forType:
T@"AFDisambiguationInfo",&,N,Saf_setDisambiguationInfo:
disambiguationLists
disambiguationKey
labelValue
infoForIdentifier:
saveInfo:forIdentifier:
setManagedStoreObject:forKey:
fetchManagedStoreObjectForKey:reply:
setKnowledgeStoreData:forKey:inStoreWithName:completion:
getKnowledgeStoreDataForKey:inStoreWithName:completion:
resetKnowledgeStoreWithName:completion:
_synchronousManagedStoreServiceWithErrorHandler:
_managedStoreService
domainObjectForKey:
setDomainObject:forKey:
dataForKey:inKnowledgeStoreWithName:
setData:forKey:inKnowledgeStoreWithName:
resetKnowledgeStoreWithName:
_managedStoreServiceWithErrorHandler:
createModelWithType:completion:
recordFeedbackOfType:forSpeakableId:
recordRecommendedAction:forSpeakableId:withModelIdentifier:
recordNotificationUsageForSpeakableId:withStartDate:withEndDate:withCompletion:
modelWithIdentifier:didUpdateScore:forSpeakable:
startWithDelegate:
setSpeakable:
recordFeedbackOfType:forSpeakable:
setInterface:forSelector:argumentIndex:ofReply:
alarmIdentifier
_alarmIdentifier
T@"NSString",C,N,V_alarmIdentifier
_setTargetedDeviceContextIdentifier:withAction:payload:
addCoreAnalyticsDeviceTargetedWithContextIdentifier:commandResultDescription:
_nearbyDevicesLoggingID
_nearbyDevicesPayloads
T@"NSString",R,C,N,V_nearbyDevicesLoggingID
T@"NSMutableDictionary",&,N,V_nearbyDevicesPayloads
inputDeviceID
inputAssistantID
initWithRequestID:inputDeviceID:inputAssistantID:
_inputDeviceID
_inputAssistantID
T@"NSString",R,C,N,V_inputDeviceID
T@"NSString",R,C,N,V_inputAssistantID
setInputDeviceID:
setInputAssistantID:
timerURLs
setTimerURLs:
_timerURLs
T@"NSArray",C,N,V_timerURLs
_initializeMyriadAdvertisementContextRecordFromData:
_advertismentPayloadSizeForVersion:
_deviceIDFromBytes:
_getAdvertismentRecordTypeForVersion:data:
_getVoiceTriggerEndTimeForVersion:data:
_getMyriadAdvertisementDataForVersion:data:
_getDeviceIdForVersion:data:
initWithAdvertisementRecordType:voiceTriggerEndTime:advertisementPayload:deviceID:
initWithMyriadAdvertisementContextRecordData:
myriadAdvertisementContextAsData
isSaneForVoiceTriggerEndTime:endtimeDistanceThreshold:
recordForDeviceId:
compareAdvertisementPayload:
advertisementContextVersion
advertisementRecordType
voiceTriggerEndTime
advertisementPayload
advertisementDispatchTime
setAdvertisementDispatchTime:
_advertisementContextVersion
_advertisementRecordType
_voiceTriggerEndTime
_advertisementPayload
_advertisementDispatchTime
TC,R,N,V_advertisementContextVersion
Tq,R,N,V_advertisementRecordType
Td,R,N,V_voiceTriggerEndTime
T@"NSData",R,C,N,V_advertisementPayload
T@"NSUUID",R,C,N,V_deviceID
Td,N,V_advertisementDispatchTime
initWithCallUUID:callProviderIdentifier:callProviderBundleID:callers:handle:isVideo:isCallerIDBlocked:
initWithCallUUID:callProviderIdentifier:callProviderBundleID:callerContactIdentifiers:handle:isVideo:isCallerIDBlocked:
callUUID
callProviderIdentifier
callProviderBundleID
callerContactIdentifiers
handle
isVideo
isCallerIDBlocked
_isVideo
_isCallerIDBlocked
_callUUID
_callProviderIdentifier
_callProviderBundleID
_callerContactIdentifiers
_handle
T@"NSString",R,C,N,V_callUUID
T@"NSString",R,C,N,V_callProviderIdentifier
T@"NSString",R,C,N,V_callProviderBundleID
T@"NSArray",R,C,N,V_callerContactIdentifiers
T@"TUHandle",R,N,V_handle
TB,R,N,V_isVideo
TB,R,N,V_isCallerIDBlocked
setRequestHandler:
_setupRequestListener
initWithActivationEvent:
_dispatchSpeechRequestOptions:
_setupSpeechRequestListener
siriActivationListener:handleIntent:inBackgroundAppWithBundleId:reply:
siriActivationListener:handleIntentForwardingAction:inBackgroundApplicationWithBundleIdentifier:completionHandler:
siriActivationListener:prewarmWithRequestInfo:context:completion:
siriActivationListener:activateWithRequestInfo:context:completion:
siriActivationListener:deactivateForReason:options:context:completion:
siriActivationListener:handleButtonEventFromContext:completion:
siriActivationListener:myriadEventWithRequestInfo:context:completion:
setPrewarmHandler:
setNewRequestHandler:
setDismissalHandler:
setIntentHandler:
setIntentForwardingActionHandler:
setButtonEventHandler:
setActivationHandler:
setNewSpeechRequestHandler:
_siriActivationListener
_prewarmHandler
_requestHandler
_dismissalHandler
_intentHandler
_intentForwardingActionHandler
_speechRequestToken
_speechRequestHandler
_buttonEventHandler
_activationHandler
initAndGetSetterBlock:
waitForValue:
_beginGroup
_startObservingPineBoardSystemState
_endGroup
_stopObservingPineBoardSystemState
pineBoardSystemStateObserver:pineBoardStateDidChangeFrom:to:
defaultObserver
_handlePineBoardStateChange:
pineBoardSystemState
_pineBoardStateGroup
_pineBoardStateGroupDepth
_pineBoardSystemState
_isObserving
Tq,R,N,V_pineBoardSystemState
getLocalDeviceContextWithReply:
beginUpdateLocalDeviceContextWithReply:
endUpdateLocalDeviceContext
donateSerializedContextMapByPrivacyClass:withMetadataMap:forType:pushToRemote:completion:
updateLocalDeviceContext:
_hasInvoked
_defaultValue
_defaultValue1
_defaultValue2
initWithBlock:defaultValue1:defaultValue2:defaultValue3:
invokeWithValue:andValue:andValue:
_defaultValue3
initWithBlock:defaultValueArray:
signatureWithObjCTypes:
numberOfArguments
invokeWithValueArray:
invocationWithMethodSignature:
setArgument:atIndex:
invokeWithTarget:
initWithBlock:defaultValues:
invokeWithValues:
_blockMethodSignature
_defaultValueArray
lastNegativeFeedback
setLastNegativeFeedback:
negativeFeedbackByContact
setNegativeFeedbackByContact:
_lastNegativeFeedback
_negativeFeedbackByContact
T@"NSDate",&,N,V_lastNegativeFeedback
T@"NSDictionary",&,N,V_negativeFeedbackByContact
loadIfNecessary
save
notificationUsageStream
predicateForEventsWithStartInDateRangeFrom:to:
sortDescriptorWithKey:ascending:
timeZone
confidence
fileExistsAtPath:
initWithContentsOfFile:options:error:
initForReadingFromData:error:
finishDecoding
stringByDeletingLastPathComponent
archivedDataWithRootObject:requiringSecureCoding:error:
lastNegativeFeedbackForContact:
setLastNegativeFeedbackForContact:
fetchNotificationUsageForSpeakableId:withStartDate:withEndDate:withHandler:
interactionDetectedForSpeakableId:
_feedback
_knowledgeStore
_usageEventsBySpeakableId
currentElectionAdvertisementId
currentElectionAdvertisementData
electionAdvertisementDataByIds
initWithGeneration:sessionId:currentElectionAdvertisementId:currentElectionAdvertisementData:electionAdvertisementDataByIds:
_currentElectionAdvertisementId
_currentElectionAdvertisementData
_electionAdvertisementDataByIds
T@"NSUUID",R,C,N,V_sessionId
T@"NSUUID",R,C,N,V_currentElectionAdvertisementId
T@"NSData",R,C,N,V_currentElectionAdvertisementData
T@"NSDictionary",R,C,N,V_electionAdvertisementDataByIds
setCurrentElectionAdvertisementId:
setCurrentElectionAdvertisementData:
setElectionAdvertisementDataByIds:
initWithOriginalCommandId:category:eventInfo:duration:
originalCommandId
setOriginalCommandId:
categoryString
setCategory:
eventInfo
setEventInformation:
_roundDouble:toSignificantDigits:
setTimings:
initWithOriginalCommandId:category:duration:
aceMetrics
category
setEventInfo:
_originalCommandId
_category
_eventInfo
T@"NSString",C,N,V_originalCommandId
Tq,N,V_category
T@"NSDictionary",C,N,V_eventInfo
T@"NSNumber",&,N,V_duration
initWithUserNotification:sourceAppId:platform:
requestCanBeHandled
hasEligibleSetup
supportedByApplicationWithBundleID:
canBeHandled
supportedOnPlatform
supportedForApplicationWithBundleId:
performRequestWithCompletion:
initWithUserNotification:sourceAppId:
deactivateRequestForReason:completion:
withdrawalRequestWithCompletion:
_notification
_sourceAppId
_platform
_initWithPlatform:
_classForPlatform:
supportedAnnouncementTypesForBundleId:onPlatform:
notifyObserversOfCurrentEligibleSetupState:onPlatform:
fetchEligibleSetupStateWithCompletion:
fetchRequestCanBeHandledStateWithCompletion:
hasEligibleSetupChanged:onPlatform:
hasEligibleSetupChanged:
requestCanBeHandledChanged:onPlatform:
requestCanBeHandledChanged:
notifyObserversOfCurrentRequestCanBeHandledState:onPlatform:
_capabilityProvider
initWithNotifications:sourceAppId:
initWithIsDeviceOwnedByCurrentUser:assistantIdentifier:sharedUserIdentifier:idsIdentifier:idsDeviceUniqueIdentifier:rapportEffectiveIdentifier:homeKitAccessoryIdentifier:mediaSystemIdentifier:mediaRouteIdentifier:isCommunalDevice:roomName:name:productType:buildVersion:userInterfaceIdiom:aceVersion:
initWithIsDeviceOwnedByCurrentUser:assistantIdentifier:idsIdentifier:idsDeviceUniqueIdentifier:sharedUserID:rapportEffectiveIdentifier:homeKitAccessoryIdentifier:mediaSystemIdentifier:mediaRouteIdentifier:isCommunalDevice:roomName:name:productType:buildVersion:userInterfaceIdiom:aceVersion:
sharedUserID
initWithSettingsConnection:
_synchronousSettingsServiceWithErrorHandler:
_settingsServiceWithErrorHandler:
fetchAccountsSynchronously:completion:
_setVoices:
getAvailableVoicesForRecognitionLanguage:includeAssetInfo:completion:
getAvailableVoicesForLanguage:includeAssetInfo:completion:
_voices
_filterVoices:forLanguage:
_updateVoicesIncludingAssetInfo:completion:
startUIRequestWithText:
setEndpointerOperationMode:
setEndpointerStopRecordingMode:
newTurnBasedContextWithPreviousTurnID:
startUIRequestWithInfo:
setXPCConnectionManagementQueue:
fetchSupportedMultiUserLanguageCodes:
fetchAccountsWithCompletion:
accounts
saveAccount:setActive:
setAssistantLoggingEnabled:
killDaemon
shutdownSessionIfIdle
currectNWActivityId:
getAvailableVoicesForRecognitionLanguage:completion:
getAvailableVoicesForSynthesisLanguage:completion:
startUIRequest:
getHorsemanSupplementalLanguageDictionary:
setHorsemanSupplementalLanguageDictionary:completion:
getSiriOutputVolumeWithCompletion:
setSiriOutputVolume:completion:
stopObservingWirelessSplitterSession
removeMultiUserWithSharedUserID:completion:
setSiriGradingEnabled:completion:
siriGradingIsEnabled:
shouldSuppressSiriDataSharingOptInAlert:
deleteSiriHistoryWithCompletion:
getActiveASRLanguagesWithCompletion:
_voicesQueue
_selectedVoice
_syncDataWithAnchorKeys:forceReset:reason:completion:
_getSharedCompanionInfo:
_updateMultiUserInfoForUser:score:companionId:companionSpeechId:idsIdentifier:aceHost:reset:completion:
_getSharedUserID:
_handleCommand:completion:
_setSyncToken:forAceHost:completion:
_readSyncTokenForAceHost:completion:
_tellDelegatePartialVerificationResult:
_tellDelegateServerVerificationReport:
T@"<AFSettingsDelegate>",W,N,S_setDelegate:
peerInfo
systemInfo
initWithPeerInfo:systemInfo:
_peerInfo
_systemInfo
T@"AFPeerInfo",R,C,N,V_peerInfo
T@"AFAudioSessionCoordinationSystemInfo",R,C,N,V_systemInfo
setPeerInfo:
setSystemInfo:
setAllowsCellularAccess:
setDiscretionary:
sendDictationRequestStartedEventWithBundleIdentifier:context:userInfo:
sendSiriRequestStartedEventWithBundleIdentifier:context:userInfo:
sendSendMessageSentEventWithBundleIdentifier:context:userInfo:
doesNotRecognizeSelector:
sampledSubDirectoryPath
sampledLibraryDirectoryPath
component
sampledCachesSubDirectoryPath
deleteItemAtFilePath:
sampledPlistFileName
timezone
sampledSubDirectoryNameFormat
sampledCurrentSamplingDateKey
createSamplingDirectory
deleteAllSamplingData
samplingDateAsString
overrideOption
initWithOverrideOption:reason:
_overrideOption
Tq,R,N,V_overrideOption
setOverrideOption:
initWithConnection:
_waitUntilListeningForContext:timeoutInterval:completion:
actionType
_clientStateObserver
_clientStateTransitionHandlersByTimestamp
testRequestWithText:speechRequestOptions:testOptions:
testRequestWithStartLocalRequest:
setLatitude:
setLongitude:
setUnlocalizedName:
setCountryName:
setUnlocalizedCountryName:
_initWithName:unlocalizedName:countryName:unlocalizedCountryName:timeZone:latitude:longitude:alCityID:
alCityValue
_unlocalizedName
_countryName
_unlocalizedCountryName
_timeZone
_latitude
_longitude
_alCityID
beginObserving
speakingStateDidChange:forIdentifiers:
previousItem
setNextItem:
setPreviousItem:
insertBeforeItem:
_object
_previousItem
_nextItem
T@,R,N,V_object
T@"AFLinkedListItem",&,N,V_previousItem
T@"AFLinkedListItem",&,N,V_nextItem
_getRequestType:
getVersion:
getSessionId:
_createEndAnalyticContexFromIntermediateContext:forVersion:sessionId:
_getCDASchemaCDATriggerType:
getCDASessionId:
logCDADeviceStateActivityStartedOrChanged:withTrigger:withCdaId:withTimestamp:
logCDADeviceStateActivityEnded:withCdaId:withTimestamp:
logCDAElectionAdvertisingStarting:withDelay:withInterval:withCdaId:withTimestamp:
logCDAElectionAdvertisingStarted:withCdaId:withTimestamp:
logCDAElectionTimerEnded:withCdaId:withTimestamp:
logCDAElectionAdvertisingEnded:withCdaId:withTimestamp:
_decisionMadeContext:instrumentation:completion:
numberWithUnsignedChar:
setGoodnessScore:
logCDAElectionDecisionMade:withDecision:withPreviousDecision:timeSincePreviousDecision:withWinningDevice:withThisDevice:withParticipants:withRawScore:withBoost:withCdaId:withTimestamp:
_submitMyriadMetrics:toStream:instrumentation:completion:
isMyriadMetricsMessage:
submitAccessoryMyriadMetricsToAnalyticsStream:payload:instrumentation:completion:
submitMyriadMetricsToAnalyticsStream:context:forEvent:contextNoCopy:
initWithSettingType:valueBeforeUpdate:valueAfterUpdate:
settingType
valueBeforeUpdate
valueAfterUpdate
_settingType
_valueBeforeUpdate
_valueAfterUpdate
initWithIncomingCall:
_call
_initWithOriginatingAceID:identifier:turnId:
_descriptionWithProperties:
requestName
_af_stringByRemovingPrefixWithLength:
_af_stringByRemovingSuffix:
_turnId
_setOriginatingAceID:
_setTurnId:
_refId
_setRefId:
__refId
T@"NSString",C,N,S_setRefId:,V__refId
T@"NSString",C,N,S_setOriginatingAceID:,V_originatingAceID
T@"NSUUID",C,N,S_setTurnId:,V_turnId
hasSuffix:
sharedNotifier
builtInMicVoiceTriggerEvent:hostTime:
setActionType:
notifyActivationEvent:completion:
remoteMicVoiceTriggerEvent:activationInfo:hostTime:
remoteMicVADEvent:vadScore:hostTime:
jarvisVoiceTriggerEvent:activationInfo:hostTime:
encodeFloat:forKey:
decodeFloatForKey:
initWithResults:score:threshold:
score
threshold
_score
_threshold
Tf,R,N,V_score
Tf,R,N,V_threshold
preciseLocationEnabled
accessState
latitude
longitude
altitude
direction
speed
verticalAccuracy
horizontalAccuracy
initWithLatitude:longitude:altitude:direction:speed:verticalAccuracy:horizontalAccuracy:preciseLocationEnabled:accessState:
_preciseLocationEnabled
_altitude
_direction
_speed
_verticalAccuracy
_horizontalAccuracy
_accessState
T@"NSNumber",R,C,N,V_latitude
T@"NSNumber",R,C,N,V_longitude
T@"NSNumber",R,C,N,V_altitude
T@"NSNumber",R,C,N,V_direction
T@"NSNumber",R,C,N,V_speed
T@"NSNumber",R,C,N,V_verticalAccuracy
T@"NSNumber",R,C,N,V_horizontalAccuracy
TB,R,N,V_preciseLocationEnabled
Tq,R,N,V_accessState
setAltitude:
setDirection:
setSpeed:
setVerticalAccuracy:
setHorizontalAccuracy:
setPreciseLocationEnabled:
setAccessState:
isRemoteDevice
route
initWithRoute:isRemoteDevice:deviceUID:
_isRemoteDevice
_route
T@"NSString",R,C,N,V_route
TB,R,N,V_isRemoteDevice
setRoute:
setIsRemoteDevice:
isForCarDND
isVoiceTriggerRequest
isConnectedToCarPlay
isRequestMadeWithPhysicalDeviceInteraction
userTypedInSiri
deviceRaised
faceDetected
touchScreenDetected
buttonPressDetected
flatDevicePosture
deviceOrientation
isInWorkout
isBacklightOn
isInWaterLock
isInSleepLock
isInTheaterMode
isOnWrist
modeOverrideValue
initWithIsEyesFree:isForCarDND:isVoiceTriggerRequest:isConnectedToCarPlay:isRequestMadeWithPhysicalDeviceInteraction:userTypedInSiri:modeOverrideValue:deviceRaised:faceDetected:touchScreenDetected:buttonPressDetected:flatDevicePosture:deviceOrientation:isInWorkout:isBacklightOn:isInWaterLock:isInSleepLock:isInTheaterMode:isOnWrist:
_isForCarDND
_isVoiceTriggerRequest
_isConnectedToCarPlay
_isRequestMadeWithPhysicalDeviceInteraction
_userTypedInSiri
_modeOverrideValue
_deviceRaised
_faceDetected
_touchScreenDetected
_buttonPressDetected
_flatDevicePosture
_deviceOrientation
_isInWorkout
_isBacklightOn
_isInWaterLock
_isInSleepLock
_isInTheaterMode
_isOnWrist
TB,R,N,V_isEyesFree
TB,R,N,V_isForCarDND
TB,R,N,V_isVoiceTriggerRequest
TB,R,N,V_isConnectedToCarPlay
TB,R,N,V_isRequestMadeWithPhysicalDeviceInteraction
TB,R,N,V_userTypedInSiri
T@"NSString",R,C,N,V_modeOverrideValue
Tq,R,N,V_deviceRaised
Tq,R,N,V_faceDetected
Tq,R,N,V_touchScreenDetected
Tq,R,N,V_buttonPressDetected
Tq,R,N,V_flatDevicePosture
Tq,R,N,V_deviceOrientation
Tq,R,N,V_isInWorkout
Tq,R,N,V_isBacklightOn
Tq,R,N,V_isInWaterLock
Tq,R,N,V_isInSleepLock
Tq,R,N,V_isInTheaterMode
Tq,R,N,V_isOnWrist
setIsForCarDND:
setIsVoiceTriggerRequest:
setIsConnectedToCarPlay:
setIsRequestMadeWithPhysicalDeviceInteraction:
setUserTypedInSiri:
setModeOverrideValue:
setDeviceRaised:
setFaceDetected:
setTouchScreenDetected:
setButtonPressDetected:
setFlatDevicePosture:
setDeviceOrientation:
setIsInWorkout:
setIsBacklightOn:
setIsInWaterLock:
setIsInSleepLock:
setIsInTheaterMode:
setIsOnWrist:
initWithGeneration:date:alarmsByID:notifiedFiringAlarmIDs:
_alarmsByID
_notifiedFiringAlarmIDs
T@"NSDictionary",R,C,N,V_alarmsByID
T@"NSOrderedSet",R,C,N,V_notifiedFiringAlarmIDs
setAlarmsByID:
setNotifiedFiringAlarmIDs:
serializedContextByKey
_mediaSystemIdentifier
_sharedUserID
_serializedContextByKey
_metricsContext
T@"NSString",R,C,N,V_mediaSystemIdentifier
T@"NSString",R,C,N,V_sharedUserID
Tq,R,N,V_proximity
T@"NSDictionary",R,C,N,V_serializedContextByKey
T@"NSDictionary",R,C,N,V_metricsContext
setMediaSystemIdentifier:
setSharedUserID:
setSerializedContextByKey:
setMetricsContext:
initWithName:queue:
stringWithCString:encoding:
setActivationDeviceIdentifier:
activationDeviceIdentifier
setServerCommandId:
setUseAutomaticEndpointing:
setRecordingAlertPolicy:
setDisableInputAudioPowerUpdate:
setDisableOutputAudioPowerUpdate:
setUseStreamingDictation:
setHomeButtonDownEventTime:
setHomeButtonDownEventMachAbsoluteTime:
setActivationEventMachAbsoluteTime:
setStopRecordingHostTime:
setIsInitialBringUp:
setHomeButtonUpFromBeep:
setAcousticIdEnabled:
setAudioFileType:
setAudioFileHandle:
setMyriadContext:
setRecordDeviceIdentifier:
setSpeechRecordingEventListeningEndpoint:
setPendCallbacksUntilAfterContinuation:
setUseBorealisBuffer:
setAudioFileURL:
setHasPlayedStartAlert:
setBargeInOptions:
setSpeechSynthesisRecord:
setReloadSmartSiriVolume:
setSkipPersonalizedASR:
setClientAnalyticsContext:
setStartContext:
setStopContext:
setLocation:
setLocationStatus:
setIsOnPhoneCall:
setIsMediaPlaying:
setMediaPlaybackVolume:
setApplicationBundleIdentifier:
setPresentationMode:
setPreheatLanguage:
setPreheatTestModelPath:
setDictationVoiceTriggerAbsStartSampleId:
setAnnouncementPlatform:
setIsTest:
initForTestWithTestRequestOptions:
isRaiseToSpeak
setBtDeviceAddress:
btDeviceAddress
useAutomaticEndpointing
endpointerOperationMode
endpointerStopRecordingMode
recordingAlertPolicy
disableInputAudioPowerUpdate
disableOutputAudioPowerUpdate
useStreamingDictation
homeButtonDownEventTime
homeButtonDownEventMachAbsoluteTime
isInitialBringUp
homeButtonUpFromBeep
acousticIdEnabled
audioFileHandle
myriadContext
recordDeviceIdentifier
speechRecordingEventListeningEndpoint
usePrelisteningMode
setUsePrelisteningMode:
useBorealisBuffer
reloadSmartSiriVolume
skipPersonalizedASR
audioFileURL
hasPlayedStartAlert
bargeInOptions
speechSynthesisRecord
location
locationStatus
clientAnalyticsContext
startContext
stopContext
isOnPhoneCall
skipGeneratingSpeechPacket
setSkipGeneratingSpeechPacket:
isMediaPlaying
mediaPlaybackVolume
presentationMode
preheatLanguage
preheatTestModelPath
dictationVoiceTriggerAbsStartSampleId
applicationBundleIdentifier
announcementPlatform
isTest
_useAutomaticEndpointing
_disableInputAudioPowerUpdate
_disableOutputAudioPowerUpdate
_useStreamingDictation
_isInitialBringUp
_acousticIdEnabled
_usePrelisteningMode
_pendCallbacksUntilAfterContinuation
_useBorealisBuffer
_reloadSmartSiriVolume
_skipPersonalizedASR
_suppressStartAlert
_suppressStopAlert
_hasPlayedStartAlert
_isOnPhoneCall
_skipGeneratingSpeechPacket
_isMediaPlaying
_isTest
_mediaPlaybackVolume
_activationDeviceIdentifier
_serverCommandId
_endpointerOperationMode
_endpointerStopRecordingMode
_recordingAlertPolicy
_homeButtonDownEventTime
_homeButtonDownEventMachAbsoluteTime
_activationEventTime
_activationEventMachAbsoluteTime
_expectedActivationEventTime
_stopRecordingHostTime
_homeButtonUpFromBeep
_audioFileType
_audioFileHandle
_myriadContext
_recordDeviceIdentifier
_speechRecordingEventListeningEndpoint
_audioFileURL
_bargeInOptions
_speechSynthesisRecord
_location
_locationStatus
_clientAnalyticsContext
_startContext
_stopContext
_presentationMode
_preheatLanguage
_preheatTestModelPath
_dictationVoiceTriggerAbsStartSampleId
_applicationBundleIdentifier
_announcementPlatform
T@"NSString",C,N,V_activationDeviceIdentifier
TB,N,V_isEyesFree
T@"NSString",C,N,V_serverCommandId
TB,N,V_useAutomaticEndpointing
Tq,N,V_endpointerOperationMode
Tq,N,V_endpointerStopRecordingMode
T@"AFSpeechRecordingAlertPolicy",C,N,V_recordingAlertPolicy
TB,N,V_disableInputAudioPowerUpdate
TB,N,V_disableOutputAudioPowerUpdate
TB,N,V_useStreamingDictation
Td,N,V_homeButtonDownEventTime
TQ,N,V_homeButtonDownEventMachAbsoluteTime
Td,N,V_activationEventTime
TQ,N,V_activationEventMachAbsoluteTime
Td,N,V_expectedActivationEventTime
TQ,N,V_stopRecordingHostTime
TB,N,V_isInitialBringUp
T@"NSNumber",C,N,V_homeButtonUpFromBeep
TB,N,V_acousticIdEnabled
Tq,N,V_audioFileType
T@"NSFileHandle",&,N,V_audioFileHandle
T@"AFMyriadContext",C,N,V_myriadContext
T@"NSString",C,N,V_recordDeviceIdentifier
T@"NSXPCListenerEndpoint",&,N,V_speechRecordingEventListeningEndpoint
TB,N,V_usePrelisteningMode
TB,N,V_pendCallbacksUntilAfterContinuation
TB,N,V_useBorealisBuffer
TB,N,V_reloadSmartSiriVolume
TB,N,V_skipPersonalizedASR
T@"NSURL",C,N,V_audioFileURL
TB,N,V_suppressStartAlert
TB,N,V_suppressStopAlert
TB,N,V_hasPlayedStartAlert
TQ,N,V_bargeInOptions
T@"AFSpeechSynthesisRecord",C,N,V_speechSynthesisRecord
T@"CLLocation",C,N,V_location
T@"NSString",C,N,V_locationStatus
T@"NSString",C,N
T@"NSDictionary",C,N,V_clientAnalyticsContext
T@"NSDictionary",C,N,V_startContext
T@"NSDictionary",C,N,V_stopContext
TB,N,V_isOnPhoneCall
TB,N,V_skipGeneratingSpeechPacket
TB,N,V_isMediaPlaying
Tf,N,V_mediaPlaybackVolume
Tq,N,V_presentationMode
T@"NSString",C,N,V_preheatLanguage
T@"NSURL",C,N,V_preheatTestModelPath
TQ,N,V_dictationVoiceTriggerAbsStartSampleId
T@"NSString",C,N,V_applicationBundleIdentifier
Tq,N,V_announcementPlatform
TB,N,V_isTest
T@"AFSpeechTestRequestOptions",C,N,V_testRequestOptions
observeWithCompletion:
flushWithCompletion:
classIdentifiers
setObject:forKeyedSubscript:
registerClassIdentifier:forDomain:inGroup:
supportsClassIdentifier:forDomainKey:groupIdentifier:
factoryClass
setFactoryClass:
factoryInstance
setFactoryInstance:
setClassIdentifiers:
_factoryClass
_factoryInstance
_classIdentifiers
T#,&,N,V_factoryClass
T@,&,N,V_factoryInstance
T@"NSMutableDictionary",&,N,V_classIdentifiers
initWithPath:domainKeys:factoryInitializationBlock:
_loadBundlesIfNeeded
initWithPath:
_registerBundle:
principalClass
infoDictionary
pluginManagerForPath:domainKeys:factoryInitializationBlock:
enumerateFactoryInstancesForDomainKey:groupIdentifier:classIdentifier:usingBlock:
preloadBundles
_path
_domainKeys
_factoryInitializationBlock
_domainKeyDictionary
_hasLoadedBundles
didEnd
lastSyncDate
endingGroupIdentifier
initWithLastSyncDate:didEnd:endingGroupIdentifier:version:
_didEnd
_lastSyncDate
_endingGroupIdentifier
T@"NSDate",R,C,N,V_lastSyncDate
TB,R,N,V_didEnd
T@"NSString",R,C,N,V_endingGroupIdentifier
setLastSyncDate:
setDidEnd:
setEndingGroupIdentifier:
setTurnContext:
setEvent:
mergeFrom:
hasTurnContext
hasEvent
readFrom:
writeTo:
copyTo:
turnContext
_turnContext
T@"SISchemaClientTurnContext",&,N,V_turnContext
T@"SISchemaClientAnyEvent",&,N,V_event
initWithBytes:length:encoding:
unarchivedObjectOfClasses:fromData:error:
unarchivedObjectOfClass:fromData:error:
archivedDataWithRootObject:
T@"NSData",R,C,N,V_context
_initWithRequest:context:
initWithRouteDescription:
_initializeInternalState
_getRouteCapabilities
setBtAddress:
availableAnnouncementRequestTypes
setAvailableAnnouncementRequestTypes:
avscRouteDescription
setAvscRouteDescription:
announcePlatformForRoute
setAnnouncePlatformForRoute:
_btAddress
_availableAnnouncementRequestTypes
_avscRouteDescription
_announcePlatformForRoute
_isRouteCurrentlyPicked
_isDoAPCapable
_isHeadsetInEar
_inEarDetectSupportedSpecified
_headsetSupportsIED
_inEarDetectEnabledSpecified
_inEarDetectEnabled
_isW2Headset
_isTipiRoute
_isOtherDeviceConnected
_isInTriangleMode
_shouldTakeRouteFromOtherConnectedDevice
_shouldDeferToOtherConnectedDevice
_avAudioRouteName
T@"NSString",&,N,V_productID
T@"NSString",&,N,V_btAddress
TQ,N,V_availableAnnouncementRequestTypes
T@"NSDictionary",&,N,V_avscRouteDescription
Tq,N,V_announcePlatformForRoute
timersByID
notifiedFiringTimerIDs
initWithGeneration:date:timersByID:notifiedFiringTimerIDs:
_timersByID
_notifiedFiringTimerIDs
T@"NSDictionary",R,C,N,V_timersByID
T@"NSOrderedSet",R,C,N,V_notifiedFiringTimerIDs
setTimersByID:
setNotifiedFiringTimerIDs:
initWithExperimentsByConfigurationIdentifier:
_experimentsByConfigurationIdentifier
T@"NSDictionary",R,C,N,V_experimentsByConfigurationIdentifier
setExperimentsByConfigurationIdentifier:
_af_URLWithMessageIdentifier:
attachmentURL
setAttachments:
sendDate
setDateSent:
bodyText
setMessage:
isOutbound
subjectText
setSubject:
chatIdentifier
groupName
setGroupName:
groupNameId
setGroupNameId:
senderAddress
setMsgSender:
recipientAddresses
effect
setEffect:
setOutbound:
setSenderAddress:
senderInternalGUID
_setSenderInternalGUID:
setRecipientAddresses:
setSubjectText:
setBodyText:
setAttachmentURL:
setSendDate:
_outbound
_senderAddress
_senderInternalGUID
_recipientAddresses
_groupName
_groupNameId
_subjectText
_bodyText
_effect
_attachmentURL
_sendDate
_chatIdentifier
URLPathAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
URLWithString:
scheme
resourceSpecifier
stringByRemovingPercentEncoding
_af_messageIdentifierValue
attachments
dateSent
outgoing
subject
msgSender
msgRecipients
af_messageValue
initWithVoiceTriggerEnabled:
voiceTriggerEnabled
_voiceTriggerEnabled
Tq,R,N,V_voiceTriggerEnabled
initWithState:lastPlayedAnnouncement:
_lastPlayedAnnouncement
TQ,R,N,V_state
T@"AFHomeAnnouncement",R,C,N,V_lastPlayedAnnouncement
setLastPlayedAnnouncement:
_machServiceNameForAppTaskServiceWithBundleIdentifier:
setService:
valueForEntitlement:
af_siriTaskDeliveringInterface
appTaskService
_listener
siriTaskService:handleSiriTask:
service
_service
T@"AFSiriTaskService",W,N,V_service
T@"<AFSiriTaskServiceDelegate>",W,N,V_delegate
weakToWeakObjectsMapTable
_handleFailureOfRequest:error:atTime:
setOutcomes:
taskmaster:didReceivePunchoutOutcome:
handleSiriTaskUsageResult:fromRequest:
initWithTaskDeliverer:
_executorForRequest
T@"<AFSiriTaskmasterDelegate>",W,N,V_delegate
setEnabled:
daysOfWeek
setDaysOfWeek:
hourOfDay
setHourOfDay:
minuteOfHour
setMinuteOfHour:
isSleepAlarm
setSleepAlarm:
isOverrideAlarm
setOverrideAlarm:
bedtimeHour
setBedtimeHour:
bedtimeMinute
setBedtimeMinute:
_enabled
_daysOfWeek
_hourOfDay
_minuteOfHour
_sleepAlarm
_overrideAlarm
_bedtimeHour
_bedtimeMinute
enabled
TB,N,GisEnabled,V_enabled
Tq,N,V_daysOfWeek
Tq,N,V_hourOfDay
Tq,N,V_minuteOfHour
sleepAlarm
TB,N,GisSleepAlarm,V_sleepAlarm
overrideAlarm
TB,N,GisOverrideAlarm,V_overrideAlarm
Tq,N,V_bedtimeHour
Tq,N,V_bedtimeMinute
_propertyListWithTreeNode:itemPropertyListCreation:
_treeNodeWithPropertyList:error:itemCreation:
_tearDown
_startObservingNotificationWithRequestIdentifier:
_removeObserverForNotificationRequestIdentifier:
_speakingStateDidChange:forIdentifiers:
_currentConnection
notificationAnnouncementObserver:announcementSpeakingStateDidUpdate:forNotificationRequestIdentifiers:
connectionInvalidated
connectionInterrupted
_notifyObserverOfFailureForAllObservingNotifications
initWithQueue:delegate:
startObservingNotificationWithRequestIdentifier:
stopObservingNotificationWithRequestIdentifier:
cleanUpConnection
_observingNotifications
callState
onSpeaker
initWithCallState:onSpeaker:
_onSpeaker
_callState
TQ,R,N,V_callState
TB,R,N,V_onSpeaker
setCallState:
setOnSpeaker:
_store
base64EncodedStringWithOptions:
_initWithMessage:
createResponseWithMessageIdentifier:
resultType
addressBookID
setAddressBookID:
addressLabel
setAddressLabel:
contactName
setContactName:
geoResult
setGeoResult:
setResultType:
_addressBookID
_addressLabel
_contactName
_geoResult
_resultType
T@"NSURL",C,N,V_addressBookID
T@"NSString",C,N,V_addressLabel
T@"NSString",C,N,V_contactName
T@"NSData",C,N,V_geoResult
Tq,N,V_resultType
virtualMemorySizeInBytes
numberOfRegions
pageSizeInBytes
residentMemorySizeInBytes
peakResidentMemorySizeInBytes
physicalMemoryFootprintInBytes
_numberOfRegions
_pageSizeInBytes
_virtualMemorySizeInBytes
_residentMemorySizeInBytes
_peakResidentMemorySizeInBytes
_physicalMemoryFootprintInBytes
TQ,R,N,V_virtualMemorySizeInBytes
Ti,R,N,V_numberOfRegions
Ti,R,N,V_pageSizeInBytes
TQ,R,N,V_residentMemorySizeInBytes
TQ,R,N,V_peakResidentMemorySizeInBytes
TQ,R,N,V_physicalMemoryFootprintInBytes
setVirtualMemorySizeInBytes:
setNumberOfRegions:
setPageSizeInBytes:
setResidentMemorySizeInBytes:
setPeakResidentMemorySizeInBytes:
setPhysicalMemoryFootprintInBytes:
itemURL
T@"NSURL",R,N
T@"NSDate",R,C,N
initWithTimestamp:source:event:options:deviceID:userInfo:
Tq,R,N,V_source
Tq,R,N,V_event
T@"NSString",R,C,N,V_deviceID
mediaType
isCommunalDevice
sleepState
logEventWithType:machAbsoluteTime:context:contextNoCopy:
logEventWithType:machAbsoluteTime:contextProvider:contextProvidingQueue:
logEventWithType:machAbsoluteTime:contextResolver:
logInstrumentation:machAbsoluteTime:turnContext:
setTurnID:
setEventMetadata:
eventMetadata
setEventType:
_service:
_stageEvent:
_stageEvents:
logEventWithType:contextProvider:contextProvidingQueue:
logEventWithType:contextResolver:
logInstrumentation:turnContext:
logInstrumentationOfType:turnIdentifier:
logEvents:
dataWithJSONObject:options:error:
initWithDeliveryStream:type:timestamp:contextDataType:contextData:
overrideContext
setOverrideContext:
overriddenAdjustedScore
setOverriddenAdjustedScore:
_overrideContext
_overriddenAdjustedScore
TB,N,V_overrideContext
TC,N,V_overriddenAdjustedScore
setOverridingContext:
getOverridingContext
mediaPlaybackInterruptedTime
setMediaPlaybackInterruptedTime:
_overriddenContext
_mediaPlaybackInterruptedTime
Td,N,V_mediaPlaybackInterruptedTime
initWithDeviceInstanceContext:preferences:queue:instrumentation:
_fetchDevicePlatformBiasIfRequired
updateBoost:value:
getRecentBump:ignoreAdjustedBoost:
_updatePlatformBias:
getPlatformBias
bumpGoodnessScore:lastActivationTime:mediaPlaybackInterruptedTime:ignoreAdjustedBoost:
initWithDeviceInstanceContext:queue:
initWithDeviceInstanceContext:preferences:queue:
getMyriadAdjustedBoostForGoodnessScoreContext:
evaluateForAudioAccessory
lastActivationTime
setLastActivationTime:
_scoreEvaluationLock
_myriadPlatformBias
_deviceInstanceContext
_platformBiasAcquisitionState
_pref
_myriadInstrumentation
_evaluateForAudioAccessory
_lastActivationTime
TB,R,N,V_evaluateForAudioAccessory
Td,N,V_lastActivationTime
_startWithDelegate:
_stop
_prewarmWithRequestInfo:context:completion:
_activateWithRequestInfo:context:completion:
_deactivateForReason:options:context:completion:
_deliverButtonEventFromContext:completion:
_myriadEventWithRequestInfo:context:completion:
suspend
_xpcListener
initWithBundleIdentifier:allowPlaceholder:error:
appInfoWithApplicationRecord:
supportedIntents
_supportsAnnouncementType:forSupportedIntents:forBundleId:onPlatform:
eligibleAnnouncementRequestTypesChanged:onPlatform:
availableAnnouncementRequestTypesChanged:onPlatform:
_requiredBundleIDsForNotificationAnnouncementType:
notificationAnnouncementTypeForNotificationFromApp:withIntentIDs:onPlatform:
initWithPlatform:
playsSound
logExperimentExposureForTapToSiriBehavior
experimentForSiriVOXTapToSiriBehavior
T@"AFExperiment<AFExperimentForSiriVOXTapToSiriBehavior>",R,N
_updateStateWithNotifyState:
_notifyObserver
acknowledgeRequestKey
requestTypeKey
messageKey
_copyRawBytesFromSource:toDest:length:
sessionIdKey
_initializeMessageObj:
emergencyHandledKey
electionDecisionKey
_initializeMessageObjFromDictionary:
myriadRequestTypeAsString:
protocolName
audioDataKey
deviceInfoKey
isMyriadRequestMessage:
initWithRequestType:session:voiceTriggerEndTime:audioHash:goodnessScore:userConfidenceScore:tieBreaker:deviceClass:deviceGroup:productType:electionDecision:emergencyHandled:ack:accessoryId:
initPreheatMessageWithSessionId:accessoryId:
initElectionDecisionMessageWithSessionId:decision:accessoryId:
initResetMessageWithSessionId:accessoryId:
initWithAccessoryMessage:accessoryId:
initWithAccessoryMessageAsDictionary:accessoryId:
messageAsData
requestType
session
audioHash
goodnessScore
userConfidenceScore
electionWon
isEmergencyHandled
isAcknowledgement
accessoryId
usesSerializedProtocol
_goodnessScore
_userConfidenceScore
_electionDecision
_emergencyHandled
_ack
_isSane
_serializedProtocol
_audioHash
_requestType
_session
_accessoryId
TC,R,N,V_version
TQ,R,N,V_requestType
TQ,R,N,V_session
TS,R,N,V_audioHash
TC,R,N,V_goodnessScore
TC,R,N,V_userConfidenceScore
TC,R,N,V_tieBreaker
TC,R,N,V_deviceClass
TC,R,N,V_deviceGroup
TC,R,N,V_productType
electionDecision
TC,R,N,GelectionWon,V_electionDecision
emergencyHandled
TC,R,N,GisEmergencyHandled,V_emergencyHandled
TC,R,N,GisAcknowledgement,V_ack
T@"NSUUID",R,N,V_accessoryId
TB,R,N,V_isSane
serializedProtocol
TB,R,N,GusesSerializedProtocol,V_serializedProtocol
_suggestionsFilePath
arrayWithContentsOfFile:
suggestionsDidChange:
writeToFile:atomically:
initWithLanguageCode:delegate:
getSuggestedUtterancesWithCompletion:
setSuggestedUtterances:
_suggestedUtterances
T@"<AFUtteranceSuggestionsDelegate>",R,W,N,V_delegate
propagationEvent
propagationEventReason
associatedChangeLogEventIdentifier
initWithDate:accessoryIdentifier:propagationEvent:propagationEventReason:associatedChangeLogEventIdentifier:
_accessoryIdentifier
_propagationEvent
_propagationEventReason
_associatedChangeLogEventIdentifier
T@"NSString",R,C,N,V_accessoryIdentifier
Tq,R,N,V_propagationEvent
T@"NSString",R,C,N,V_propagationEventReason
T@"NSString",R,C,N,V_associatedChangeLogEventIdentifier
setAccessoryIdentifier:
setPropagationEvent:
setPropagationEventReason:
setAssociatedChangeLogEventIdentifier:
initiatorAddress
setInitiatorAddress:
recipientAddress
setRecipientAddress:
_initiatorAddress
_recipientAddress
_createSchemaClientEvent:
setTrigger:
setDeviceElectionStateContext:
emitMessage:timestamp:
_sendAndLogClientEvent:stState:atTimestamp:
setCdaAdvertisingStartChanged:
setAdvertisementDelay:
setAdvertisementInterval:
setCdaAdvertisingEndChanged:
setElectionTimerEnded:
setDecision:
setPreviousDecision:
setWinningDevice:
setThisDevice:
setRawGoodnessScore:
setGoodnessScoreBoosts:
setHeardParticipants:
setElectionDecisionMade:
goodnessScoreBoosts
trumpReason
setIsCrossDeviceArbitrationAllowed:
setAdvertisementDatas:
setDebugElectionDecisionMade:
_boostTypeAsString:
setDeviceBoost:
setRecentUnlockBoost:
setRecentRaiseToWakeBoost:
setRecentSiriRequestBoost:
setRecentMotionBoost:
setRecentPlaybackBoost:
setRecentAlarmBoost:
setIsTrump:
setTrumpReason:
setCdaId:
logCDAElectionAdvertisingEnding:withCdaId:withTimestamp:
logCDAElectionDecisionMadeDebug:withCrossDeviceArbitrationAllowed:advertisementData:withDeviceGroup:withCdaId:withTimestamp:
updateIsTrump:withReason:
_currentBoost
maxTimeToSync
configurationURL
initWithConfigurationIdentifier:configurationURL:maxTimeToSync:
_configurationURL
_maxTimeToSync
T@"NSURL",R,C,N,V_configurationURL
Td,R,N,V_maxTimeToSync
setConfigurationURL:
setMaxTimeToSync:
startedHostTime
finishedHostTime
finishedDate
initWithIdentifier:startedHostTime:finishedHostTime:startedDate:finishedDate:
_startedHostTime
_finishedHostTime
_startedDate
_finishedDate
TQ,R,N,V_startedHostTime
TQ,R,N,V_finishedHostTime
T@"NSDate",R,C,N,V_startedDate
T@"NSDate",R,C,N,V_finishedDate
setStartedHostTime:
setFinishedHostTime:
setStartedDate:
setFinishedDate:
_initWithSettingType:
initWithInfo:content:
_content
T@"AFPeerInfo",R,C,N,V_info
T@,R,C,N,V_content
T@,&,N,V_value
initWithDeliveryDate:
T@"NSDate",R,C,N,V_deliveryDate
startAdvertisingFromVoiceTrigger
startAdvertisingFromInTaskVoiceTrigger
startAdvertisingFromInEarTrigger
startAdvertisingFromCarPlayTrigger
startAdvertisingEmergency
notifyCurrentDecisionResult
initWithDeviceInstanceContext:preferences:
coordinationEnabled
BLEActivityEnabled
deviceSlowDown
_initDeviceClassAndAdjustments
_initializeTimer
_initializeWiProxReadinessTimer
_resetAdvertisementTimings
setEventMask:
_clearWiProxReadinessTimer
_readDefaults
constantGoodnessScore
deviceAdjust
deviceDelay
deviceTrumpDelay
voiceTriggerEndtimeDelayThreshold
startAdvertisingSlowdown:
enterState:
_phsSetupRecord
advertiseWith:afterDelay:maxInterval:
startAdvertisingFromVoiceTriggerWithContext:
_setMyriadContext:
_startAdvertisingFromInTaskVoiceTrigger
_startAdvertisingFromVoiceTrigger
voiceTriggerRecord
_enterState:
startAdvertisingFromVoiceTriggerAdjusted:withContext:
startAdvertisingFromVoiceTriggerWithGoodnessScoreContext:withContext:
resumeWithError:
pollForAttentionWithTimeout:event:error:
suspendWithError:
directTriggerRecord
startWatchAdvertisingFromVoiceTriggerWithContext:
_inTaskTriggerWasTooSoon
startWatchAdvertisingFromDirectTriggerWithContext:
startAdvertisingFromDirectTriggerWithContext:
startAdvertisingFromOutgoingTriggerWithContext:
_duringNextWindowEnterState:
startAdvertisingFromInTaskVoiceTriggerWithContext:
startAdvertisingFromAlertFiringVoiceTriggerWithContext:
responseObject:
_startAdvertising:afterDelay:maxInterval:
_startTimer:for:thenExecute:
_endAdvertising:
endAdvertising:
_sortedReplies
emptyRecord
setAudioHash:
setIsFromContextCollector:
setIsSelf:
_advertiseTrigger
_deviceShouldContinue:
_winElection
_nextElectionPublisherState
publishState:
_loseElection
_cancelOverallTimeout
_ageWedgeFilter
resetReplies
_resetAudioData
_endAdvertisingWithDeviceProhibitions:
_stateAsString
_shouldContinueFor:
shouldContinue:
_endAdvertisingAnalyticsContext:
shouldAbortAnotherDeviceBetter:
_myriadSession
myriadCoordinator:didAddAdvertisement:toSession:
_stateAsString:
willStartWithSession:
willEndSession:
_createDispatchTimerWithTime:toExecute:
_createDispatchTimerFor:toExecute:
myriadCoordinatorOverallTimerCancelled:
_enteringIntoState:fromState:
myriadCoordinator:didEnterState:fromState:
_leaveBLEDiagnosticMode
_stopAdvertisingAndListening
_resetActionWindows
_unduck
_cancelTimer
_handleStateMachineErrorIfNeeded
_clearMyriadSession
_shouldStopListeningBeforeAdvertising
_stopListening:
_createMyriadSessionIfRequired
_addElectionAdvertisementDataToMyriadSession:
_setupActionWindows
_setOverallTimeout
_startTimer:for:thenEnterState:
lateSuppressionRecord
_advertise:andMoveTo:
continuationRecord
_stopAdvertising:
_startListening:
emergencyRecord
myriadCoordinatorIsAdvertisingEmergency:
emergencyHandledRecord
initiateEmergencyCallMyriad
myriadCoordinatorWillHandleEmergency:
_advertiseIndefinite:
_advertiseSlowdown
_advertiseSuppressTriggerInOutput
_startListeningAfterWiProxIsReady:inState:completion:
listeningDidBegin:
advertisingDidEnd:
listeningDidEnd:
shouldUnduck:
_triggerABCForType:context:
_contextFetchDelayForAdvertimentInterval:advertisementDelay:
_shouldUseContextCollector
_testAndFilterAdvertisementsFromContextCollector:voiceTriggerEndTime:advertisementDispatchTime:advertisement:
_testAndUpdateWedgeFilter:
_updateRepliesWith:id:data:
_suppressDeviceIfNeededWithVoiceTriggerEndTime:adverisementDispatchTime:
dateWithTimeInterval:sinceDate:
_createDispatchTimerForEvent:toExecute:
_duringNextWindowExecute:
testDeviceDelay
setupAdvIntervalsInDelay:interval:withSlowdown:
slowdownRecord:
_adjustActionWindowsFromSlowdown:
_advertiseWith:afterDelay:maxInterval:thenExecute:
myriadCoordinator:willStartAdvertisingWithSlowDownInterval:
_okayToSuppressOnOutput
_advertise:afterDelay:maxInterval:andMoveTo:
myriadCoordinator:willStartAdvertisingUsingData:
_pushMyriadAdvertisementContextToContextCollectorWithAdvertisementInterval:advertisementDelay:
advertisingDidBegin:
isEqualToData:
advertisingWillBeginWithDelay:advertisingInterval:
numberWithUnsignedShort:
_sortedReplies:
_isAPhone:
_resumeWiProxReadinessTimer
_suspendWiProxReadinessTimer
_createWaitWiProxTimer:waitBlock:
_waitWiProx:andExecute:
setDispatchQueue:
diagnosticBLEModeWithCompletion:
myriadCoordinatorDidHandleEmergency:
didChangeDefaults
clearCurrentCoordinator
initWithDelegate:
readDefaults
preheatWiProx
startAdvertisingForPHSSetupAfterDelay:maxInterval:
resetStateMachine
startAdvertisingFromVoiceTriggerAdjusted:
startWatchAdvertisingFromVoiceTrigger
startWatchAdvertisingFromDirectTrigger
startAdvertisingFromDirectTrigger
startAdvertisingFromOutgoingTrigger
startAdvertisingEmergencyHandled
startAdvertisingFromInTaskTriggerWithContext:
startAdvertisingFromAlertFiringVoiceTrigger
startResponseAdvertising:
endAdvertisingAfterDelay:
endAdvertising
endAdvertisingWithDeviceProhibitions:
inTask
setInTask:
setupEnabled:
instrumentationUpdateBoost:value:
_startListenTimer
startListening
startListening:
stopListening
stopListening:
startAdvertising:afterDelay:maxInterval:
advertiseWith:
_shouldHandleEmergency
waitWiProx:andExecute:
_waitWiProxAndExecute:
_enterBLEDiagnosticMode
_signalEmergencyCallHandled
injectAdvertisementForTesting:forDevice:
startListeningToEmergencySignal
startAdvertisingEmergencySignal
setupActionWindows
updateRepliesWith:id:data:
stateAsString:
myriadSession:
resetMyriadCoordinator:
_myriadState
_nextState
_previousState
_previousAdvertisedData
_replies
_replyCounts
_repliesBeforeDecision
_previousTrumps
_incomingTrumps
_multipleContinuations
_deviceClassName
_productTypeName
_deviceAdjust
_deviceDelay
_deviceTrumpDelay
_deviceVTEndtimeDistanceThreshold
_deviceInEarDelay
_deviceInEarInterval
_myriadWorkQueue
_myriadAdvertisementContextQueue
_myriadAttentionQueue
_timerLabel
_eventToken
_overallTimeout
_powerAssertionManager
_triggerRecord
_recordType
_voiceTriggerTime
_delayTarget
_advertInterval
_nTimesContinued
_nTimesExtended
_incomingAdjustment
_overrideMyriadRecord
_slowdownMsecs
_testInducedSlowdownMsecs
_maxSlowdownRecord
_BTLEReady
_inTask
_inSetupMode
_ducking
_stateMachineEncounteredError
_listenTimerIsRunning
_coordinationEnabled
_BLEActivityEnabled
_clientIsDirectActivating
_clientIsInEarActivation
_clientRecentlyLostElection
_clientLostDueToTrumping
_clientIsListeningAfterRecentWin
_clientIsWatchActivation
_clientIsWatchTrumpPromote
_clientIsRespondingToSlowdown
_clientDoneRespondingToSlowdown
_clientRespondingToCarPlay
_clientIsDeciding
_constantGoodness
_dateFormat
_designatedSelfID
_triggerTime
_nDeltaTs
_callPunchout
_lastDecisionTime
_lastDecision
_lastPHash
_lastEmergencyAttempt
_wasEmergency
_suppressLateTrigger
_ignoreInTaskTimer
_sfdiagnostics
_sfDiagnosticsTimer
_heySiriBTLEState
_wiproxReadinessTimer
_advTiming
_advContextManager
_contextRecord
_goodnessScoreEvaluator
_electionBeginPublisher
_electionWinPublisher
_electionLossPublisher
_electionRepostWinDecisionPublisher
_preferencesChangedNotification
_electionPublisherState
_attentionClient
_waitForWiproxReadinessToScan
_latestRecordReceivedTime
_currentMyriadContext
_invalidateAssertionTimer
_invalidateBackboardServices
initWithBundleIDs:states:
setHandler:
applicationInfoForApplication:completion:
_processAssertionWasInvalidatedForRequest:
initWithPayload:
_startAppStateMonitoringForRequest:
serviceWithDefaultShellEndpoint
optionsWithDictionary:
_handleSuccessfulAppLaunchToBackground:forRequest:completion:
openApplication:withOptions:completion:
_processAssertionWasAcquired:
initWithBundleIdentifier:flags:reason:name:withHandler:
processAssertionWasInvalidatedForRequest:
taskmaster:didLaunchApplicationForRequestWithId:
initWithAppBundleIdentifier:
taskmaster
setTaskmaster:
_appBundleIdentifier
_appStateMonitor
_bKSAssertionForBgLaunch
_assertionTimer
_bKSAssertionSetupGroup
T@"AFSiriTaskmaster",W,N,V_taskmaster
taskmasterForUIApplicationWithBundleIdentifier:
logClientFeedbackPresented:dialogIdentifierProvider:
_af_enumerateClientFeedbackDetails:
associatedDialogIdentifiersForAceObjectIdentifier:
logClientFeedbackPresented:
_af_dialogPhase
_af_dialogIdentifier
listenAfterSpeaking
dialogIdentifier
utteranceView
narrowband
censorSpeech
shouldStoreAudioOnDevice
task
loggingContext
profile
overrides
jitGrammar
initWithLanguage:interactionIdentifier:task:loggingContext:applicationName:profile:overrides:modelOverrideURL:originalAudioFileURL:narrowband:detectUtterances:censorSpeech:farField:secureOfflineOnly:shouldStoreAudioOnDevice:maximumRecognitionDuration:inputOrigin:location:jitGrammar:
_censorSpeech
_shouldStoreAudioOnDevice
_task
_loggingContext
_profile
_overrides
_jitGrammar
T@"NSString",R,C,N,V_language
T@"NSString",R,C,N,V_interactionIdentifier
T@"NSString",R,C,N,V_task
T@"NSArray",R,C,N,V_loggingContext
T@"NSString",R,C,N,V_applicationName
T@"NSData",R,C,N,V_profile
T@"NSDictionary",R,C,N,V_overrides
T@"NSURL",R,C,N,V_modelOverrideURL
T@"NSURL",R,C,N,V_originalAudioFileURL
TB,R,N,V_narrowband
TB,R,N,V_detectUtterances
TB,R,N,V_censorSpeech
TB,R,N,V_farField
TB,R,N,V_secureOfflineOnly
TB,R,N,V_shouldStoreAudioOnDevice
Td,R,N,V_maximumRecognitionDuration
T@"CLLocation",R,C,N,V_location
T@"NSArray",R,C,N,V_jitGrammar
setTask:
setLoggingContext:
setProfile:
setOverrides:
setNarrowband:
setCensorSpeech:
setShouldStoreAudioOnDevice:
setJitGrammar:
applicationContexts
initWithApplicationContexts:
sectionID
sectionDisplayName
applicationProxyForIdentifier:
localizedName
defaultAction
dismissAction
snoozeAction
supplementaryActions
setBulletin:forFeed:
_createAssistantActionsForBulletin:
actions
bulletinID
recordID
sectionSubtype
dateIsAllDay
recencyDate
modalAlertContent
subtitle
publisherBulletinID
intentIDs
contentPreviewSetting
threadID
_displayNameForBulletin:
internalIDForBBBulletinID:
localizedNameForContext:
shouldHideTime
threadIdentifier
destinations
setBulletin:
actionForIdentifier:
setNotification:fromSourceApp:
wasRemovedFromFeed:
displayName
setDisplayName:
availableOnLockScreen
setAvailableOnLockScreen:
announcementType
setAnnouncementType:
isRead
setRead:
bbBulletin
isAllDay
modalAlertContentMessage
previewRestricted
internalID
actionsStore
setActionsStore:
actionsByIdentifier
setActionsByIdentifier:
feed
_availableOnLockScreen
_read
_allDay
_previewRestricted
_displayName
_announcementType
_bbBulletin
_bulletinID
_recordID
_endDate
_modalAlertContentMessage
_recencyDate
_sectionID
_sectionSubtype
_subtitle
_intentIDs
_publisherBulletinID
_threadID
_internalID
_actionsStore
_actionsByIdentifier
_feed
T@"NSArray",&,N,V_actionsStore
T@"NSDictionary",&,N,V_actionsByIdentifier
TQ,R,N,V_feed
T@"NSString",C,N,V_displayName
TB,N,V_availableOnLockScreen
TB,N,V_supportsSpokenNotification
Tq,N,V_announcementType
read
TB,N,GisRead,V_read
T@"BBBulletin",R,N,V_bbBulletin
T@"NSString",R,C,N,V_bulletinID
T@"NSString",R,C,N,V_recordID
T@"NSDate",R,C,N,V_endDate
allDay
TB,R,N,GisAllDay,V_allDay
T@"NSString",R,C,N,V_message
T@"NSString",R,C,N,V_modalAlertContentMessage
T@"NSDate",R,C,N,V_recencyDate
T@"NSString",R,C,N,V_sectionID
Tq,R,N,V_sectionSubtype
T@"NSString",R,C,N,V_subtitle
T@"NSString",R,C,N,V_timeZone
T@"NSArray",R,C,N,V_intentIDs
T@"NSString",R,C,N,V_publisherBulletinID
TB,R,N,V_previewRestricted
T@"NSString",R,C,N,V_threadID
T@"NSString",R,C,N,V_internalID
acknowledgementDialogPhase
statusDialogPhase
clarificationDialogPhase
summaryDialogPhase
confirmationDialogPhase
errorDialogPhase
confirmedDialogPhase
cancelledDialogPhase
_dialogPhaseWithType:
_initWithType:
isEqualToDialogPhase:
replacesPreviousSnippetContents
isTemporary
isCancelledDialogPhase
isCompletionDialogPhase
isPossiblyPartOfMultiTurnRequest
Tq,R,N,G_type,V_type
temporary
TB,R,N,GisTemporary
expository
TB,R,N,GisExpository
TB,R,N,GisConfirmationDialogPhase
TB,R,N,GisReflectionDialogPhase
TB,R,N,GisClarificationDialogPhase
TB,R,N,GisConfirmedDialogPhase
TB,R,N,GisCancelledDialogPhase
TB,R,N,GisUserRequestDialogPhase
TB,R,N,GisErrorDialogPhase
TB,R,N,GisCompletionDialogPhase
TB,R,N,GisSummaryDialogPhase
TB,R,N,GisAcknowledgementDialogPhase
propertyForKeyWithoutDeserializing:
imagePath
symbolName
initWithImagePath:symbolName:
_imagePath
_symbolName
T@"NSString",R,C,N,V_imagePath
T@"NSString",R,C,N,V_symbolName
newTurnBasedContextWithPreviousTurnID:analytics:
setPreviousTurnID:
emitInstrumentation:machAbsoluteTime:
nextTurnBasedContext
nextTurnBasedContextForAnalytics:
newTurnBasedInstrumentationContext
machServiceSiriTaskDelivererForAppWithBundleIdentifier:
_machServiceName
taskmasterForMachServiceWithName:
taskmasterForMachServiceForAppWithBundleIdentifier:
initWithObservation:filterByInstrumentationTypes:
setWithCapacity:
contextDataAsProtobuf
initWithObservation:
waitUntilInvalidated
_observerConnection
_filteredTagIdentifiers
rapportEffectiveIdentifier
homeKitAccessoryIdentifier
isDeviceOwnedByCurrentUser
setIsDeviceOwnedByCurrentUser:
setSharedUserIdentifier:
idsIdentifier
setIdsIdentifier:
setIdsDeviceUniqueIdentifier:
setRapportEffectiveIdentifier:
setHomeKitAccessoryIdentifier:
setIsCommunalDevice:
userInterfaceIdiom
setUserInterfaceIdiom:
aceVersion
setAceVersion:
hasTurnID
_turnID
T@"NSData",&,N,V_turnID
fileURLWithPath:
dictionaryWithContentsOfURL:error:
initWithRequiresVoiceSelection:voiceSelectionAllowsChooseForMe:voiceCountForRecognitionLanguage:completionLoggingBlock:
requiresVoiceSelectionForRecognitionLanguage:
voiceSelectionAllowsRandomSelection
completionLoggingBlock
requiresVoiceSelection
voiceCountForRecognitionLanguage
_voiceSelectionAllowsRandomSelection
_requiresVoiceSelection
_completionLoggingBlock
_voiceCountForRecognitionLanguage
TB,R,N,V_requiresVoiceSelection
T@"NSDictionary",R,N,V_voiceCountForRecognitionLanguage
TB,R,N,V_voiceSelectionAllowsRandomSelection
T@?,R,&,N,V_completionLoggingBlock
_resolveIfNewUserWithParameters:forRecognitionLanguages:completion:
_resolveVoiceSelection:forRecognitionLanguages:completion:
_storedRecognitionLanguageCode
_storedVoiceInfo
_createConfigurationForParameters:
arrayWithArray:
predicateWithBlock:
filteredArrayUsingPredicate:
_shouldAllowRandomVoiceSelectionForEnablementFlow:
_emitEnablementFlowLoggingForConfigurationParameters:didEnable:
configurationForEnablementFlow:recognitionLanguageCodes:completion:
settingsConnection
setSettingsConnection:
T@"AFSettingsConnection",&,N,V_settingsConnection
appIdentifyingInfo
bundleId
clientIdentifier
_af_preferredBundleID
syncSlots
_af_normalizedKeyForKey:appBundleID:syncSlotName:
_af_normalizedKey
_af_isValid
initWithQueue:qosClass:asynchronous:
qosClass
asynchronous
_asynchronous
_qosClass
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
TI,R,N,V_qosClass
TB,R,N,V_asynchronous
removeObserver:forKeyPath:context:
addObserver:forKeyPath:options:context:
observeValueForKeyPath:ofObject:change:context:
_handleObservedChangeWithOldValue:andNewValue:
initWithObject:keyPath:handler:deliveryOptions:
_isInvalid
_invalidation
_handler
_deliveryOptions
components:fromDate:
year
month
_af_isSameDayAsDate:
setDay:
dateByAddingComponents:toDate:options:
af_isToday
af_isTomorrow
initWithAcousticFeatureValue:frameDuration:
acousticFeatureValuePerFrame
frameDuration
_acousticFeatureValuePerFrame
_frameDuration
T@"NSArray",R,N,V_acousticFeatureValuePerFrame
Td,R,N,V_frameDuration
initWithSpeechRecognitionFeatures:acousticFeatures:
initWithSpeechRecognitionFeatures:acousticFeatures:snr:
speechRecognitionFeatures
acousticFeatures
_speechRecognitionFeatures
_acousticFeatures
_snr
T@"NSDictionary",R,N,V_speechRecognitionFeatures
T@"NSDictionary",R,N,V_acousticFeatures
Td,R,N,V_snr
status
setStatus:
initWithSetRequestOrigin:
ace_setRequestOrigin
af_analyticsContext
clientBoundCommands
parse
directInvocation
invocationIdentifier
localizedCaseInsensitiveCompare:
af_addEntriesToAnalyticsContext:
af_dialogIdentifiersForAnalyticsContext
dialog
dialogs
hashedRouteUIDs
hashedRouteUID
recordFailure:forConnectionType:
recordSuccessForConnectionType:isWarm:forTimeInterval:
recordSessionRetrySuccess
_fullAggDKeyWithPrefix:error:
logRequestCompletedWithDuration:
missedAppContextForRequest
missedAlertContextForRequest
logRequestCancelAfterSeconds:
logSiriQuickStopAction:
logSiriMediaVolumeAction:
logSiriPausedMedia
logRequestLaunchedApp
logDictationFollowedByContinueOccurredForLanguage:
logDictationFollowedByKeyboardInputOccurredForLanguage:
logDictationFollowedByKeyboardDeleteOccurredForLanguage:
logKeyboardInputFollowedByContinueOccurredForLanguage:
logUILockCanceledVTActivation
logCreateAssistant
logLoadAssistant
logPingTimeout
logEnabledState:
logLocalRecognitionAssetEvictedForLanguage:
logLocalSpeechStartedWithDuration:
logLocalFinalSpeechRecognitionWithDuration:
logLocalRecognitionLoadedForLanguage:duration:
logLocalRecognitionWonForLanguage:
logLocalRecognitionLostForLanguage:
logDESRecordingForLanguage:error:
logDESEvaluationForLanguage:error:
logCDMAssetEvictedForAssetType:language:
noteConnectedToCarPlayHeadunit
noteSuccessOfRequest:inCar:
connectionDidFail
connectionDidDrop
beginSessionRetryPreferringWWAN:
startWaitingForSpeechResponse
speechResponseReceived
speechResponseFailure
connectionType
setConnectionType:
setHasActiveRequest:
_sessionIsRetrying
_retryPrefersWWAN
TQ,N,V_type
TB,N,V_hasActiveRequest
_stringForGatekeeperType:
logTimeToBeepWithDuration:
logHomeButtonPressToActivationDuration:
logStarkGatekeeperDismissedManuallyForType:
logStarkGatekeeperAppearedForType:
numberWithLongLong:
_logEvent:
_attach:
attach:
_connectionInterrupted:
_connectionInvalid:
_attachmentStatusUpdate:
_listenForLaunchNotification
waitForAttachment:
setAttachmentStatusChangedHandler:
_isAttached
_attachmentStatusChangedHandler
_pendingEvents
numberOfLoops
volume
fadeInDuration
fadeOutDuration
itemData
initWithItemURL:itemData:numberOfLoops:volume:fadeInDuration:fadeOutDuration:userInfo:
_volume
_itemURL
_itemData
_numberOfLoops
_fadeInDuration
_fadeOutDuration
T@"NSURL",R,C,N,V_itemURL
T@"NSData",R,C,N,V_itemData
Tq,R,N,V_numberOfLoops
Tf,R,N,V_volume
Td,R,N,V_fadeInDuration
Td,R,N,V_fadeOutDuration
setItemURL:
setItemData:
setNumberOfLoops:
setVolume:
setFadeInDuration:
setFadeOutDuration:
initWithName:extension:
_extension
T@"NSString",R,C,N,V_extension
authorizationStatusForBundle:
_initWithRequestIdentifier:
setAlarm:
_alarm
T@"STAlarm",&,N,V_alarm
associatedBundleIdentifier
contextDictionary
beginSiriRequestForApp:
composeNewMessageRequestToContact:phoneNumber:emailAddress:inApp:
composeNewMessageRequestInApp:
bulletin
readMessagesRequestFromConversationIdentifier:inApp:
readMessagesRequestFromNotificationIdentifier:fromApp:
composeReplyRequestToConversationIdentifier:inApp:
readHomeAnnouncementRequestFromApp:
startVoiceShortcutInCarPlayUsingTriggerId:withTriggerName:fromApp:
shareETARequestInApp:
startPhoneCallRequestFromApp:
searchMusicRequestInApp:
setShuffleEnabled:
setAlbum:
setArtist:
setBrandIdentifier:
setExternalIdentifier:
setAdamIdentifier:
_mediaTypeFromNowPlayingInfo:
setMediaType:
_mediaItemIdURLFromNowPlayingInfo:
setDurationMillis:
setPlaybackPositionMillis:
setPlaybackInfo:
album
artist
setListeningToItem:
setCurrentItemSteerable:
setIndex:
setQueueSize:
setPlaybackQueuePosition:
initWithDouble:
setPlaybackRate:
setCurrentListeningToContainer:
_af_setShuffleModeFromNowPlayingInfo:
setAudioAndSubtitleLanguageOptions:
applicationIdentifier
listeningToItem
_af_setNowPlayingInfo:
_af_validateAndFinalize
defaultTimeZone
setTimeZoneId:
setReleaseDate:
_af_releaseInfoWithReleaseDate:
setPlays:
setReleaseInfo:
calculatedPlaybackPosition
elapsedTime
playCount
albumName
trackArtistName
albumArtistName
releaseDate
iTunesStoreIdentifier
iTunesStoreSubscriptionIdentifier
_af_mediaItemWithMRContentItemRef:
_af_mediaItemWithMRContentItem:
initWithErrorCode:
initWithLongLong:
setApplicationIdentifier:
setLanguageTag:
setCharacteristics:
_languageOptionFromMediaRemoteRepresentation:
setAvailableTracks:
setAvailableSubtitles:
setCurrentAudioTrack:
setCurrentSubtitles:
playerPath
client
playbackQueue
contentItems
nowPlayingInfo
setScheme:
setHost:
pathWithComponents:
setPath:
setVolumeValue:
setPreviousListenedToItem:
setNextListeningToItem:
getAudioSessionID
retrieveSessionWithID:
lastActivationStoppedNowPlayingApp
criteria
setCriteria:
_criteria
Tq,N,V_options
T@"STAlarm",&,N,V_criteria
mostRecentFiringTimer
firingTimers
_initWithCall:
call
setDeviceGroup:completion:
setIgnoreAdjustedBoost:
ignoreAdjustedBoost
setIgnorePlatformBias:
ignorePlatformBias
setConstantGoodnessScore:
setDeviceAdjust:
setDeviceDelay:
setTestDeviceDelay:
setDeviceTrumpDelay:
enableCoordination:
coordinationEnabledForAccessoryLogging
setVoiceTriggerEndtimeDelayThreshold:
setDeviceSlowDown:
setMaxNoOperationDelay:
maxNoOperationDelay
isAudioSessionActive
currentOrUpNextDateInterval
localActiveAssertionContexts
localPendingAssertionContexts
remoteActiveAssertionContexts
remotePendingAssertionContexts
localDevice
remoteQualifiedInRangeDevices
remoteQualifiedOutOfRangeDevices
remoteDisqualifiedDevices
initWithCurrentOrUpNextDateInterval:isAudioSessionActive:localActiveAssertionContexts:localPendingAssertionContexts:remoteActiveAssertionContexts:remotePendingAssertionContexts:localDevice:remoteQualifiedInRangeDevices:remoteQualifiedOutOfRangeDevices:remoteDisqualifiedDevices:
_isAudioSessionActive
_currentOrUpNextDateInterval
_localActiveAssertionContexts
_localPendingAssertionContexts
_remoteActiveAssertionContexts
_remotePendingAssertionContexts
_localDevice
_remoteQualifiedInRangeDevices
_remoteQualifiedOutOfRangeDevices
_remoteDisqualifiedDevices
T@"NSDateInterval",R,C,N,V_currentOrUpNextDateInterval
TB,R,N,V_isAudioSessionActive
T@"NSArray",R,C,N,V_localActiveAssertionContexts
T@"NSArray",R,C,N,V_localPendingAssertionContexts
T@"NSArray",R,C,N,V_remoteActiveAssertionContexts
T@"NSArray",R,C,N,V_remotePendingAssertionContexts
T@"AFAudioSessionCoordinationDeviceInfo",R,C,N,V_localDevice
T@"NSArray",R,C,N,V_remoteQualifiedInRangeDevices
T@"NSArray",R,C,N,V_remoteQualifiedOutOfRangeDevices
T@"NSArray",R,C,N,V_remoteDisqualifiedDevices
setCurrentOrUpNextDateInterval:
setIsAudioSessionActive:
setLocalActiveAssertionContexts:
setLocalPendingAssertionContexts:
setRemoteActiveAssertionContexts:
setRemotePendingAssertionContexts:
setLocalDevice:
setRemoteQualifiedInRangeDevices:
setRemoteQualifiedOutOfRangeDevices:
setRemoteDisqualifiedDevices:
keepsHistory
historyBufferSize
initWithKeepsHistory:historyBufferSize:
_keepsHistory
_historyBufferSize
TB,R,N,V_keepsHistory
TQ,R,N,V_historyBufferSize
setKeepsHistory:
setHistoryBufferSize:
initWithDelegateItem:
_delegateItem
aceContext
aceContexts
initWithAssociatedBundleIdentifier:bulletin:aceContext:contextDictionary:aceContexts:
_associatedBundleIdentifier
_bulletin
_aceContext
_contextDictionary
_aceContexts
T@"NSString",R,C,N,V_associatedBundleIdentifier
T@"AFBulletin",R,C,N,V_bulletin
T@"AceObject",R,C,N,V_aceContext
T@"NSDictionary",R,C,N,V_contextDictionary
T@"NSArray",R,C,N,V_aceContexts
setAssociatedBundleIdentifier:
setAceContext:
setContextDictionary:
setAceContexts:
sharedUserId
initWithSharedUserId:confidenceScore:
_sharedUserId
T@"NSString",R,C,N,V_sharedUserId
TQ,R,N,V_confidenceScore
setSharedUserId:
_beginUpdate
_getPowerWithCompletion:
_endUpdate
_createNewXPCWrapperWithCompletion:
_timerFired
_updatePowerWithAveragePower:andPeakPower:
_writeSharedMemoryWithAveragePower:peakPower:
_destroySharedMemory
_createSharedMemory
_createNewXPCWrapper
_createSharedMemoryXPCObject
getPowerWithCompletion:
createNewXPCWrapperWithCompletion:
frequency
_averagePower
_peakPower
_provider
_frequency
T@"<AFAudioPowerProviding>",R,N,V_provider
Tq,R,N,V_frequency
_unregister
maximumLengthOfBytesUsingEncoding:
getCString:maxLength:encoding:
_register
_setState:withToken:
_getState:withToken:
publishStateWithBlock:
featureGroups
logExperimentExposureForInvocationFeedbacks
isFeatureGroupOneEnabled
isFeatureGroupTwoEnabled
isFeatureGroupThreeEnabled
isFeatureGroupFourEnabled
invocationFeedbackExperiment
T@"AFExperiment<AFInvocationFeedbackExperiment>",R,N
languages
setLanguageString:
setQuality:
setMasteredVersion:
setVoiceType:
setVoiceContentVersion:
isEqualToPersonContactHandle:
setHandle:
T@"NSString",C,N,V_handle
contactHandles
setContactHandles:
_contactHandles
_fullName
T@"NSSet",C,N,V_contactHandles
T@"NSString",C,N,V_fullName
recordCancellationMetrics
_listInstalledServicesWithReply:
_pingServiceForIdentifier:reply:
_sendLargeData:reply:
_performCommandDictionary:forBundleIdentifier:reply:
_performTaskCommandDictionary:forBundleIdentifier:reply:
_fetchAppContextForApplicationInfo:reply:
_refreshAssistantValidation
_setState:
bluetoothWirelessSplitterSessionStateObserver:didChangeStateFrom:to:
initWithCString:encoding:
cStringUsingEncoding:
_fetchLocalDeviceContextWithCompletion:
_beginUpdateLocalDeviceContext
_endUpdateLocalDeviceContext
_remoteServiceWithErrorHandler:
_handleXPCConnectionInvalidation
_handleXPCConnectionInterruption
deviceContextConnectionDidInvalidate:
_updateLocalDeviceContext:
deviceContextConnection:didUpdateLocalDeviceContext:
initWithQueue:instanceContext:delegate:
getLocalDeviceContextWithCompletion:
beginUpdateLocalDeviceContext
_serviceDelegateProxy
_isUpdatingLocalDeviceContext
_localDeviceContext
_aceValue
setBundleId:
setAppIdentifyingInfo:
setOrderedContext:
aggregateContextWithRawOutputForAppWithBundleIdentifier:contextProvider:deliveryHandler:completionHandler:
aggregateContextForAppWithBundleIdentifier:contextProvider:deliveryHandler:completionHandler:
aggregateContextForAppWithBundleIdentifier:contextProvider:completionHandler:
clientPluginManagerWithFactoryInitializationBlock:
speakableNamespaceProviderForAceObject:
VSSpeechGender
VSSpeechFootprint
setFootprint:
setIsBuiltInVoice:
setLanguages:
setContentVersion:
isBuiltInVoice
VSSpeechType
VSVoiceAsset
isMatchForVoiceAsset:
genderForVSSpeechGender:
_semaphore
_observationHandler
initWithSleepState:
_sleepState
Tq,R,N,V_sleepState
setSleepState:
_applicationContexts
T@"NSArray",R,C,N,V_applicationContexts
setApplicationContexts:
alpha
hexColor
colorName
localizedOutputVoiceColor
localizedOutputVoice
_alpha
_hexColor
_colorName
_localizedOutputVoiceColor
_localizedOutputVoice
T@"NSString",R,C,N,V_hexColor
T@"NSString",R,C,N,V_colorName
Tf,R,N,V_alpha
T@"NSString",R,C,N,V_localizedOutputVoiceColor
T@"NSString",R,C,N,V_localizedOutputVoice
setHexColor:
setColorName:
setAlpha:
setLocalizedOutputVoiceColor:
setLocalizedOutputVoice:
createResponseWithContext:
initWithKeyOptions:valueOptions:capacity:
_removeStateForClient:
_beginSessionForClient:
_endSessionForClient:
_beginRequestWithUUID:forClient:
_endRequestWithUUID:forClient:
_beginListeningForClient:
_endListeningForClient:
_beginSpeakingForClient:
_endSpeakingForClient:
_aggregateStatesAndPublishIfNeeded
_beginPresentationTransition
_endPresentationTransitionForReason:
_aggregatedState
_stateForClient:createIfAbsent:
setHasActiveSession:
addRequestUUID:
removeRequestUUID:
setIsListening:
setIsSpeaking:
objectEnumerator
beginPresentationTransition
endPresentationTransition
getCurrentStateWithCompletion:
_publisher
_statesByClient
_transactionDepth
_presentationTransitionAssertion
_presentationTransitionWatchdogTimer
_presentationTransitionGroup
hasActiveSession
isListening
isSpeaking
_requestUUIDs
_hasActiveSession
_isListening
_isSpeaking
TB,N,V_hasActiveSession
TB,N,V_isListening
TB,N,V_isSpeaking
initWithStartRequest:requestOptions:
initWithStartRequest:
initWithStartLocalRequest:requestOptions:
_startRequestData
_startLocalRequestData
_requestOptions
initWithRequestInfo:instanceContext:
initWithRequestInfo:
_requestInfo
_setUp
_beginGrouping
_updateState:
_updateLastPlayedAnnouncement:
_endGrouping
_fetchStateAndLastPlayedAnnouncementForReason:completion:
_handleNotifyStateChangeFrom:to:
homeAnnouncementObserver:stateDidUpdateFrom:to:
_enumerateListenersUsingBlock:
homeAnnouncementObserver:snapshotDidUpdateFrom:to:
_updateSnapshot:
getSnapshotWithCompletion:
_snapshotGroup
_snapshot
af_isUserUtterance
af_waitsForConfirmation
af_speechModel
af_acousticFeature
af_audioAnalytics
acousticFeaturePerFrame
beginTimestamp
endTimestamp
utterance
initWithUtterance:beginTimestamp:endTimestamp:
_utterance
_beginTimestamp
_endTimestamp
T@"NSString",R,C,N,V_utterance
TQ,R,N,V_beginTimestamp
TQ,R,N,V_endTimestamp
setUtterance:
setBeginTimestamp:
setEndTimestamp:
activityNotificationsEnabledForPersonalRequests
homeIdentifier
initWithHomeIdentifier:activityNotificationsEnabledForPersonalRequests:
_activityNotificationsEnabledForPersonalRequests
_homeIdentifier
T@"NSUUID",R,C,N,V_homeIdentifier
TB,R,N,V_activityNotificationsEnabledForPersonalRequests
setHomeIdentifier:
setActivityNotificationsEnabledForPersonalRequests:
recordRoute
_isVoiceTrigger
_isDucking
_isTwoShot
_speechEndHostTime
Tq,R,N,V_gender
T@"NSString",R,C,N,V_recordRoute
TB,R,N,V_isVoiceTrigger
TB,R,N,V_isDucking
TB,R,N,V_isTwoShot
TQ,R,N,V_speechEndHostTime
setRecordRoute:
setIsVoiceTrigger:
setIsDucking:
setIsTwoShot:
setSpeechEndHostTime:
initWithConnectionFactory:
_multiUserServiceWithErrorHandler:
getSharedUserProfileLimitWithCompletion:
modelObjects
_aceCollectionClass
isSubclassOfClass:
setDomainObjects:
initWithModelObjects:
_modelObjects
assistantId
anyEventType
typeName
dateWithTimeIntervalSince1970:
eventsReferenceTime
legacyTypeName
contextDataAsDictionary
dateStamp
setAssistantId:
setSpeechId:
_deliveryStream
_contextDataType
_assistantId
TQ,R,N,V_deliveryStream
Tq,R,N,V_contextDataType
T@"NSString",C,N,V_assistantId
T@"NSString",C,N,V_speechId
settingChanges
_settingChanges
initWithActionType:error:
_actionType
_error
Tq,R,N,V_actionType
T@"NSError",R,C,N,V_error
executionID
turnId
originPeerInfo
currentHomeInfo
endpointInfo
instanceInfo
speechInfo
requestHandlingContextSnapshot
deviceRestrictions
initWithExecutionID:requestID:turnId:originPeerInfo:currentHomeInfo:endpointInfo:instanceInfo:speechInfo:requestHandlingContextSnapshot:deviceRestrictions:userInfo:
_executionID
_originPeerInfo
_currentHomeInfo
_endpointInfo
_instanceInfo
_speechInfo
_requestHandlingContextSnapshot
_deviceRestrictions
T@"NSString",R,C,N,V_executionID
T@"NSUUID",R,C,N,V_turnId
T@"AFPeerInfo",R,C,N,V_originPeerInfo
T@"AFHomeInfo",R,C,N,V_currentHomeInfo
T@"AFEndpointInfo",R,C,N,V_endpointInfo
T@"AFInstanceInfo",R,C,N,V_instanceInfo
T@"AFSpeechInfo",R,C,N,V_speechInfo
T@"AFRequestHandlingContext",R,C,N,V_requestHandlingContextSnapshot
T@"NSArray",R,C,N,V_deviceRestrictions
setExecutionID:
setTurnId:
setOriginPeerInfo:
setCurrentHomeInfo:
setEndpointInfo:
setInstanceInfo:
setSpeechInfo:
setRequestHandlingContextSnapshot:
setDeviceRestrictions:
setEventData:
setHasEventType:
hasEventType
hasEventData
_eventData
_eventType
_has
Ti,N,V_eventType
T@"NSData",&,N,V_eventData
initFileURLWithPath:isDirectory:
URLByAppendingPathComponent:
caseInsensitiveCompare:
isAMOSIdentifier
query
isAMOSCommittedIdentifier
isDictationAllowed
getActivePairedDevice
valueForProperty:
activeDeviceSelectorBlock
getAllDevicesWithArchivedAltAccountDevicesMatching:
sharedCache
hasEntitlement:forPID:
cacheEntitlement:forPID:bundleID:
_cache
_bundleIDToPIDMap
stringWithString:
setFirstName:
setLastName:
setNickName:
setInternalGUID:
relatedNames
setRelatedNames:
_createUserActivityDataWithOptions:completionHandler:
initWithBytesNoCopy:length:encoding:freeWhenDone:
hexStringFromBytes:length:
hexStringFromData:
af_temperatureUnitForAceTemperatureUnit:
_setPreferredTemperatureUnit:
af_aceTemperatureUnit
af_setAceTemperatureUnit:
updatePairedDevices:
pairedDevices
pairedBluetoothDevices
_pairedDevices
_pairedDevicesLock
featureCapability:
setUuid:
setComponent:
setTarget:
bundleWithIdentifier:
objectForInfoDictionaryKey:ofClass:
_conversationItemType
_indexPath
Tq,R,N,V_conversationItemType
T@"AceObject",R,N,V_aceObject
T@"NSString",R,C,N,V_aceCommandIdentifier
TB,R,N,GisTransient,V_transient
TB,R,N,GisSupplemental,V_supplemental
TB,R,N,GisImmersiveExperience,V_immersiveExperience
T@"NSIndexPath",R,N,V_indexPath
isProxyGroupPlayer
initWithPlaybackState:nowPlayingTimestamp:mediaType:groupIdentifier:isProxyGroupPlayer:
_isProxyGroupPlayer
_nowPlayingTimestamp
_mediaType
Tq,R,N,V_playbackState
T@"NSDate",R,C,N,V_nowPlayingTimestamp
T@"NSString",R,C,N,V_mediaType
T@"NSString",R,C,N,V_groupIdentifier
TB,R,N,V_isProxyGroupPlayer
setNowPlayingTimestamp:
setGroupIdentifier:
setIsProxyGroupPlayer:
dispatchCompletionWithReply:error:
initWithCommand:defaultReply:completion:
command
defaultReply
_completion
_command
_defaultReply
T@"AceObject<SAAceCommand>",R,N,V_command
T@"AceObject<SAAceCommand>",R,N,V_defaultReply
initWithConversation:parentItemIdentifier:
_conversation
_parentItemIdentifier
_indexPathForItemAtIndex:
_addItemsForAceObjects:type:dialogPhase:asChildrenOfItemWithIdentifier:
_identifierOfItemAtIndex:
enumerateIndexesUsingBlock:
_indexPathForLastRestoredItem
itemAtIndex:
numberOfItems
addItemsForAceObjects:type:dialogPhase:
addItemsForAceObjects:type:dialogPhase:asChildrenOfItemAtIndex:
identifiersForItemsAtIndexes:
removeItemsAtIndexes:
itemIsRestoredAtIndex:
conversation
T@"AFConversation",R,N,G_conversation,V_conversation
parentItemIdentifier
T@"NSUUID",R,N,G_parentItemIdentifier,V_parentItemIdentifier
_resetSettingsConnection
triggerABCForType:subType:context:
setTriggerlessListeningOptions:
triggerlessListeningOptions
_triggerlessListeningOptions
T@"AFTriggerlessListeningOptions",C,N,V_triggerlessListeningOptions
setPid:
_pid
Ti,N,V_pid
_myriadEmergencyCallingQueue
hour
minute
repeatOptions
isSnoozed
alarmID
alarmURL
initWithAlarmID:alarmURL:isFiring:title:type:hour:minute:repeatOptions:isEnabled:isSnoozed:firedDate:dismissedDate:lastModifiedDate:
_isSnoozed
_alarmID
_alarmURL
_hour
_minute
_repeatOptions
T@"NSUUID",R,C,N,V_alarmID
T@"NSURL",R,C,N,V_alarmURL
TQ,R,N,V_type
TQ,R,N,V_hour
TQ,R,N,V_minute
TQ,R,N,V_repeatOptions
TB,R,N,V_isSnoozed
setAlarmID:
setAlarmURL:
setHour:
setMinute:
setRepeatOptions:
setIsSnoozed:
initWithAudioSessionID:error:
TI,R,N,V_audioSessionID
strongToWeakObjectsMapTable
nextObject
registerContextTransformer:forType:
donateContext:withMetadata:pushToRemote:completion:
donateContext:withMetadata:pushToRemote:
getRedactedContextForContextSnapshot:metadata:privacyPolicy:completion:
defaultService
setDonationService:
_transformersByType
_donationService
_isDeviceOwnedByCurrentUser
_isCommunalDevice
_sharedUserIdentifier
_idsIdentifier
_idsDeviceUniqueIdentifier
_rapportEffectiveIdentifier
_homeKitAccessoryIdentifier
_userInterfaceIdiom
_aceVersion
TB,R,N,V_isDeviceOwnedByCurrentUser
T@"NSString",R,C,N,V_sharedUserIdentifier
T@"NSString",R,C,N,V_idsIdentifier
T@"NSString",R,C,N,V_idsDeviceUniqueIdentifier
T@"NSString",R,C,N,V_rapportEffectiveIdentifier
T@"NSString",R,C,N,V_homeKitAccessoryIdentifier
TB,R,N,V_isCommunalDevice
T@"NSString",R,C,N,V_productType
T@"NSString",R,C,N,V_userInterfaceIdiom
T@"NSString",R,C,N,V_aceVersion
initWithProcessIdentifier:processName:
_processIdentifier
_processName
Ti,R,N,V_processIdentifier
T@"NSString",R,C,N,V_processName
setProcessIdentifier:
setProcessName:
_getUUIDAndUpdateIDMapsForPeerInfo:
_cleanUpUUIDMapsForPeerInfo:
objectForPeerInfo:
setObject:forPeerInfo:
removeObjectForPeerInfo:
_objectsByUUID
_uuidsByAssistantIdentifier
_uuidsByRapportIdentifier
_uuidsByIdsDeviceIdentifier
_uuidsByHomeKitIdentifier
_responseHandlerConnection
_invalidateConnectionAfterMessageSent:
_usageResultHandlerConnection
_endpoint
_setEndpoint:
initWithXPCDictionary:
encodeWithXPCDictionary:
fallbackXPCEncodableClass
failWithError:
completeWithResponse:
reportUsageResult:
_remoteResponseListenerEndpoint
_usageResultListenerEndpoint
voiceOverTouchEnabledPreferenceDidChange:
vibrationDisabledPreferenceDidChange:
_fetchIsVoiceOverTouchEnabled
_fetchIsVibrationDisabled
_setState:clearDirtyFlags:
_updateVoiceOverTouchEnabledPreference
_updateVibrationDisabledPreference
setRepresentation
_stateLock
_stateDirtyFlags
T@"AFAccessibilityState",R,C,N
B16@0:8
@24@0:8^{_NSZone=}16
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8@"NSDictionary"16
@"NSDictionary"16@0:8
@104@0:8@16@24@32@40@48@56@64@72@80@88@96
@24@0:8Q16
v16@0:8
@"NSString"
@"NSNumber"
v24@0:8@"NSString"16
v24@0:8@"NSNumber"16
@"AFCoreAnalyticsDeviceContextPayload"
{_mutationFlags="isDirty"b1"hasNearbyProductType"b1"hasProximity"b1"hasAlarmFiring"b1"hasTimerFiring"b1"hasPlaybackState"b1"hasPlaybackRecency"b1"hasHomeAnnouncementState"b1"hasHomeAnnouncementRecency"b1"hasNearbyDevicesRequestIdentifier"b1"hasTargetedResult"b1"hasContextIdentifier"b1}
@24@0:8@?16
v28@0:8@16B24
v28@0:8@"AFNetworkAvailability"16B24
B32@0:8@16^@24
B40@0:8@16@24^@32
B48@0:8@16@24@32^@40
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v32@0:8@16f24f28
v32@0:8@"AFAudioPowerUpdater"16f24f28
v40@0:8@16@24@32
v40@0:8@"AFAccessibilityObserver"16@"AFAccessibilityState"24@"AFAccessibilityState"32
v32@0:8@16q24
v32@0:8@"AFDeviceRingerSwitchObserver"16q24
v72@0:8@16q24@32@40d48@56@?64
v72@0:8@"AFInterstitialProvider"16q24@"NSString"32@"NSString"40d48@56@?<v@?>64
@32@0:8@16@24
v20@0:8B16
v52@0:8@16B24@28@36@?44
v56@0:8@16B24@28@36B44@?48
v32@0:8@16@?24
v52@0:8@16B24q28d36@?44
v20@0:8I16
v24@0:8Q16
v40@0:8@16q24@32
v32@0:8@16@24
v28@0:8B16@20
v40@0:8q16@24@?32
v24@0:8q16
v24@0:8@?16
v28@0:8@16I24
v32@0:8q16@?24
v44@0:8B16@20@28@?36
v72@0:8q16@24@32@40d48@56@?64
v32@0:8q16@24
v32@0:8Q16@?24
v40@0:8Q16q24@?32
v48@0:8Q16q24@32@?40
v24@0:8B16B20
v48@0:8@16@24@32@40
@24@0:8q16
v36@0:8@16@24B32
@?24@0:8@16
v48@0:8@16q24@32@40
v32@0:8@16d24
I16@0:8
f16@0:8
v40@0:8@16@24@?32
v40@0:8@16Q24@?32
@"NSXPCConnection"
@"NSObject<OS_dispatch_queue>"
@"AFCallSiteInfo"
@"NSArray"
@"NSUUID"
@"AFWatchdogTimer"
@"AFOneArgumentSafetyBlock"
@"NSMutableDictionary"
@"AFAudioPowerUpdater"
@"AFClientConfiguration"
@"AFInterstitialProvider"
@"AFQueue"
@"NSError"
@"NSObject<OS_dispatch_group>"
@"AFPreferences"
@"AFInstanceContext"
@"AFAnalytics"
@"AFSiriClientStateManager"
@"<AFAssistantUIService>"
@"<AFSpeechDelegate>"
Vv20@0:8B16
Vv20@0:8I16
Vv32@0:8@16@?24
Vv40@0:8@16@24@?32
Vv24@0:8q16
Vv24@0:8Q16
Vv32@0:8@16@24
Vv24@0:8@16
Vv24@0:8@?16
Vv36@0:8@16I24@?28
Vv48@0:8@16B24B28Q32@?40
Vv32@0:8q16@?24
Vv40@0:8@16@24@32
Vv28@0:8B16@20
Vv40@0:8q16@24@?32
Vv32@0:8@"AceObject<SAAceCommand>"16@?<v@?@"AceObject<SAAceCommand>"@"NSError">24
Vv40@0:8@"NSString"16@"NSURL"24@?<v@?B>32
Vv32@0:8@"NSURL"16@?<v@?B>24
Vv32@0:8@"NSDictionary"16@"NSURL"24
Vv24@0:8@"INImage"16
Vv24@0:8@"NSString"16
Vv32@0:8@"NSString"16@"NSError"24
Vv32@0:8@"NSString"16@?<v@?B>24
Vv32@0:8@"AFRequestInfo"16@?<v@?B>24
Vv24@0:8@?<v@?@"NSArray">16
Vv32@0:8@"AFXPCWrapper"16@?<v@?>24
Vv36@0:8@"NSString"16I24@?<v@?>28
Vv48@0:8@"NSString"16B24B28Q32@?<v@?>40
Vv24@0:8@?<v@?>16
Vv32@0:8q16@?<v@?dd@"NSError">24
Vv32@0:8@"NSError"16@?<v@?>24
Vv24@0:8@"SASSpeechRecognized"16
Vv32@0:8@"AFSpeechInterpretation"16@"NSString"24
Vv24@0:8@"SASSpeechPartialResult"16
Vv24@0:8@"NSError"16
Vv40@0:8@"NSArray"16@"NSArray"24@"NSString"32
Vv24@0:8@"NSDictionary"16
Vv28@0:8B16@"NSDictionary"20
Vv24@0:8@"AFAudioPlaybackRequest"16
Vv32@0:8@"AFAudioPlaybackRequest"16@"NSError"24
Vv40@0:8q16@"INIntent"24@?<v@?BB>32
@"AFConnection"
@76@0:8q16@24B32B36B40Q44@52@60@68
@68@0:8q16@24B32B36B40Q44@52@60
v24@0:8d16
@"AFInterstitialConfiguration"
@"NSMutableArray"
@"<AFInterstitialProviderDelegate>"
@40@0:8q16@24@32
@24@0:8d16
q16@0:8
d16@0:8
@32@0:8@16@?24
@"<AFRelinquishableAssertion>"32@0:8@"AFAssertionContext"16@?<v@?@"AFAssertionContext"@"NSError">24
@"AFTestRequestOptions"
{_mutationFlags="isDirty"b1"hasRequestPath"b1"hasInputOrigin"b1"hasIsEyesFree"b1}
@72@0:8@16@24@32q40@48q56@64
@40@0:8@16@24@32
@56@0:8@16q24@32q40@48
@48@0:8@16q24@32@40
v64@0:8@16@24^@32^@40^@48^@56
@32@0:8@16q24
@"AFVoiceInfo"
@64@0:8q16@24@32@40@48@56
@"AFExperimentGroup"
v24@0:8@"AFExperimentGroup"16
v24@0:8@"NSArray"16
@"AFExperimentConfiguration"
{_mutationFlags="isDirty"b1"hasType"b1"hasIdentifier"b1"hasVersion"b1"hasControlGroup"b1"hasExperimentGroups"b1"hasSalt"b1}
Vv40@0:8@16q24@?32
Vv48@0:8@16@24@32@?40
Vv40@0:8@"NSData"16q24@?<v@?@"NSData"@"NSError">32
Vv40@0:8@"NSDictionary"16q24@?<v@?@"NSDictionary"@"NSDictionary">32
Vv48@0:8@"NSData"16@"NSString"24@"NSString"32@?<v@?@"NSError">40
Vv24@0:8@?<v@?@"NSString"@"NSError">16
Vv32@0:8@"NSString"16@?<v@?@"NSError">24
v40@0:8@16q24@?32
Vv56@0:8@16@24@32@40@?48
Vv56@0:8@"NSString"16@"NSString"24@"NSDictionary"32@"AFCommandExecutionInfo"40@?<v@?@"NSDictionary"@"NSArray"@"NSError">48
Vv56@0:8@"NSString"16@"NSString"24@"NSUUID"32@"AFSyncInfo"40@?<v@?>48
Vv48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?@"AFSyncSnapshot">40
Vv32@0:8@"NSString"16@"NSString"24
Vv40@0:8@"NSString"16@"NSString"24@?<v@?>32
Vv72@0:8@16@24@32@40@48@56@?64
Vv44@0:8@16@24B32@?36
Vv72@0:8@"NSString"16@"NSString"24@"NSArray"32@"NSArray"40@"NSString"48@"NSUUID"56@?<v@?B>64
Vv24@0:8@?<v@?B>16
Vv40@0:8@"SABaseCommand"16@"AFCommandExecutionInfo"24@?<v@?@"SABaseCommand"@"NSError">32
Vv44@0:8@"NSSet"16@"NSString"24B32@?<v@?@"NSArray">36
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
@"AFLinkedListItem"
@"<AFQueueDelegate>"
@32@0:8q16@24
@"AFBluetoothWirelessSplitterSessionInfo"
{_mutationFlags="isDirty"b1"hasState"b1"hasDeviceAddresses"b1}
@48@0:8q16@24@32@40
@"NSURL"
q24@0:8@16
@68@0:8@16q24B32@36q44@52@60
@36@0:8@16q24B32
@44@0:8@16q24q32B40
@52@0:8@16q24@32q40B48
@88@0:8@16q24q32q40@48@56@64@72@80
@"NSDate"
v24@0:8@"NSDate"16
@"AFHomeAccessorySiriDataSharingChangeLogEvent"
{_mutationFlags="isDirty"b1"hasDate"b1"hasPreviousOptInStatus"b1"hasNewOptInStatus"b1"hasChangeSource"b1"hasChangeReason"b1"hasBuildVersion"b1"hasProductVersion"b1"hasSchemaVersion"b1"hasLogEventIdentifier"b1}
@"NSUUID"16@0:8
@"AceObject"16@0:8
@"AFDialogPhase"16@0:8
@"AFDataStore"16@0:8
@96@0:8@16@24q32@40@48q56@64B72B76B80B84@88
@88@0:8@16q24@32@40q48@56B64B68B72B76@80
@80@0:8q16@24@32q40@48B56B60B64B68@72
@"AceObject"
@"AFDialogPhase"
@"AFDataStore"
@"NSURL"16@0:8
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
v32@0:8@?16@?24
@"AFOutputVoiceDescriptor"
{_mutationFlags="isDirty"b1"hasLocalizedDisplay"b1"hasLocalizedDisplayWithRegion"b1}
@"AFAssertionContext"16@0:8
@40@0:8@16@24@?32
@"AFTwoArgumentSafetyBlock"
@"AFAssertionContext"
v32@0:8@16Q24
v32@0:8@"AFAssertionContext"16Q24
v32@0:8@"NSError"16Q24
@"_AFAssertionImpl"
@"AFAssertionCoordinator"
v40@0:8@16@24Q32
v32@0:8@?16@24
v48@0:8@16@24@32Q40
@"<AFAssertionCoordinatorDelegate>"
@"NSMutableSet"
@40@0:8Q16q24@32
@"AFSpeechRequestOptions"
v24@0:8@"AFSpeechRequestOptions"16
@"AFSetAudioSessionActiveContext"
{_mutationFlags="isDirty"b1"hasOptions"b1"hasReason"b1"hasSpeechRequestOptions"b1}
@56@0:8Q16@24@32d40@48
@"NSDictionary"
v24@0:8@"NSDictionary"16
{_mutationFlags="isDirty"b1"hasTimestamp"b1"hasReason"b1"hasEffectiveDate"b1"hasExpirationDuration"b1"hasUserInfo"b1}
@"AFRequestInfo"
v40@0:8@"AFSiriRequest"16@"NSError"24Q32
v32@0:8@"AFSiriResponse"16Q24
@"AFSiriRequest"
@"<AFSiriTaskDelivering>"
@"NSXPCListener"
@40@0:8@16Q24@32
{_mutationFlags="isDirty"b1"hasIdentifier"b1"hasAllocation"b1"hasProperties"b1}
@40@0:8@16q24@32
v24@0:8@"NSUUID"16
@"AFInstanceInfo"
{_mutationFlags="isDirty"b1"hasInstanceUUID"b1"hasApplicationType"b1"hasApplicationUUID"b1}
@32@0:8d16@?24
@40@0:8d16@24@?32
@"NSObject<OS_dispatch_source>"
@"AFMultiUserStateSnapshot"
{_mutationFlags="isDirty"b1"hasVtSatScore"b1"hasConfidenceScores"b1}
@56@0:8Q16@24@32q40Q48
@"AFMyriadPerceptualAudioHash"
@"AFMyriadGoodnessScoreOverrideState"
v24@0:8@"AFMyriadPerceptualAudioHash"16
v24@0:8@"AFMyriadGoodnessScoreOverrideState"16
@"AFMyriadContext"
{_mutationFlags="isDirty"b1"hasTimestamp"b1"hasPerceptualAudioHash"b1"hasOverrideState"b1"hasActivationSource"b1"hasActivationExpirationTime"b1}
Vv48@0:8q16Q24@32@?40
Vv40@0:8@"AFRequestInfo"16@"AFSiriActivationContext"24@?<v@?@"AFSiriActivationResult">32
Vv48@0:8q16Q24@"AFSiriActivationContext"32@?<v@?@"AFSiriActivationResult">40
Vv32@0:8@"AFSiriActivationContext"16@?<v@?@"AFSiriActivationResult">24
Vv40@0:8@"INIntent"16@"NSString"24@?<v@?@"INIntentResponse"@"NSError">32
Vv40@0:8@"INIntentForwardingAction"16@"NSString"24@?<v@?@"INIntentForwardingActionResponse">32
@"NSRegularExpression"
v36@0:8@"AFAssertionCoordinator"16@"<AFAssertion>"24B32
@"NSObject<OS_xpc_object>"
Vv32@0:8@"NSArray"16@?<v@?>24
@32@0:8@16^@24
@"STTimer"
B32@0:8^f16^f24
@"AFXPCWrapper"
@"_AFAudioPowerXPCSharedMemory"
^{__CFArray=}
@"CPDistributedMessagingCenter"
@"AFEndpointInfo"
{_mutationFlags="isDirty"b1"hasIdentifier"b1"hasMediaRouteIdentifier"b1}
v32@0:8@"UNNotificationRequest"16@?<v@?@"NSError">24
v24@0:8@"UNNotificationResponse"16
@32@0:8q16q24
@"AFAccessibilityState"
{_mutationFlags="isDirty"b1"hasIsVoiceOverTouchEnabled"b1"hasIsVibrationDisabled"b1}
@32@0:8Q16Q24
@32@0:8@16Q24
v32@0:8Q16@24
v32@0:8Q16@?<v@?^vI>24
@108@0:8@16@24B32@36q44d52q60d68@76@84@92@100
v24@0:8@"NSURL"16
@"AFClockTimer"
{_mutationFlags="isDirty"b1"hasTimerID"b1"hasTimerURL"b1"hasIsFiring"b1"hasTitle"b1"hasState"b1"hasDuration"b1"hasType"b1"hasFireTimeInterval"b1"hasFireDate"b1"hasFiredDate"b1"hasDismissedDate"b1"hasLastModifiedDate"b1}
Vv24@0:8@?<v@?@"NSError">16
Vv40@0:8@16Q24@32
Vv32@0:8@16Q24
Vv40@0:8@"NSString"16Q24@"NSUUID"32
Vv32@0:8@"NSData"16Q24
v48@0:8@16@24Q32@?40
@28@0:8@16B24
@"SASyncAppMetaData"
@"NSSet"
@"AFSpeechTestRequestOptions"
{_mutationFlags="isDirty"b1"hasJitContext"b1"hasOverrideModelPath"b1}
@52@0:8@16@24@32B40d44
@60@0:8@16@24@32@40B48d52
@60@0:8@16@24@32B40d44@52
@68@0:8@16@24@32@40B48d52@60
@"AFSpeechRecognition"
@"AFSpeechAudioAnalytics"
@"AFSpeechLatticeMitigatorResult"
@"AFSpeechRecordingAlertBehavior"
{_mutationFlags="isDirty"b1"hasStyle"b1"hasBeepSoundID"b1}
@"SASSpeechRecognized"
v24@0:8@"SASSpeechRecognized"16
@"AFSpeechInfo"
{_mutationFlags="isDirty"b1"hasSpeechRecognizedCommand"b1}
@"NSData"
v24@0:8@"NSData"16
{_mutationFlags="isDirty"b1"hasData"b1}
Vv28@0:8@16B24
Vv44@0:8@16B24@28@?36
v32@0:8B16B20@?24
Vv28@0:8B16@?20
Vv56@0:8@16@24Q32@40@?48
Vv40@0:8@16Q24@?32
Vv36@0:8f16@20@?28
Vv60@0:8@16@24@32@40B48@?52
Vv32@0:8B16B20@?24
Vv32@0:8@16q24
Vv40@0:8@16@24q32
Vv52@0:8q16B24q28@36@?44
Vv56@0:8@16d24d32q40@?48
Vv24@0:8@?<v@?@"NSArray"@"NSError">16
Vv28@0:8@"NSDictionary"16B24
Vv24@0:8@?<v@?@"NSDictionary"@"NSError">16
Vv44@0:8@"NSArray"16B24@"NSString"28@?<v@?@"NSArray">36
v32@0:8B16B20@?<v@?@"NSArray">24
Vv28@0:8B16@?<v@?@"NSArray">20
Vv32@0:8@"AFVoiceInfo"16@?<v@?>24
Vv32@0:8@"NSString"16@?<v@?>24
Vv40@0:8@"NSString"16@"AFVoiceInfo"24@?<v@?@"NSDictionary"@"NSError">32
Vv40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError">32
Vv48@0:8@"NSString"16@"NSString"24@"NSData"32@?<v@?@"NSData"@"NSError">40
Vv32@0:8@"AFRequestInfo"16@?<v@?@"NSError">24
Vv24@0:8@"NSURL"16
Vv56@0:8@"NSString"16@"NSString"24Q32@"NSDictionary"40@?<v@?@"NSError">48
Vv32@0:8@"NSURL"16@?<v@?@"NSError">24
Vv40@0:8@"AFRequestInfo"16@"NSString"24@?<v@?@"NSError">32
Vv40@0:8@"AFAudioPlaybackRequest"16Q24@?<v@?@"NSError">32
Vv28@0:8@"AFAudioPlaybackRequest"16B24
Vv40@0:8@"NSDictionary"16@"NSString"24@?<v@?@"NSError">32
Vv48@0:8@"NSArray"16@"NSString"24@"NSString"32@?<v@?@"NSError">40
Vv24@0:8@?<v@?@"NSDate"@"NSError">16
Vv32@0:8@"NSString"16@?<v@?@"NSDictionary"@"NSError">24
Vv40@0:8@"NSString"16@"NSString"24@?<v@?@"NSArray"@"NSError">32
Vv32@0:8@"NSString"16@?<v@?@"NSArray"@"NSError">24
Vv24@0:8@?<v@?@"AFExperimentContext"@"NSError">16
Vv32@0:8@"NSString"16@?<v@?@"NSArray">24
Vv24@0:8@?<v@?@"SAPerson"@"NSError">16
Vv24@0:8@?<v@?B@"NSError">16
Vv32@0:8@"NSDictionary"16@?<v@?>24
Vv24@0:8@?<v@?@"NSDictionary">16
Vv32@0:8@"NSUUID"16@?<v@?@"AFPeerInfo">24
Vv24@0:8@?<v@?@"NSArray"B>16
Vv24@0:8@"NSNumber"16
Vv24@0:8@?<v@?@"AFPeerInfo"@"NSArray">16
Vv32@0:8@"NSString"16@?<v@?@"AFExperiment"@"NSError">24
Vv32@0:8@"NSString"16@?<v@?f@"NSError">24
Vv36@0:8f16@"NSString"20@?<v@?@"NSError">28
Vv32@0:8@"NSString"16@?<v@?@"AFBluetoothDeviceInfo">24
Vv32@0:8@"NSUUID"16@?<v@?@"AFBluetoothDeviceInfo">24
Vv24@0:8@?<v@?@"AFBluetoothWirelessSplitterSessionInfo">16
Vv60@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40B48@?<v@?@"NSError">52
Vv24@0:8@?<v@?@"NSString">16
Vv24@0:8@?<v@?@"NSString"@"NSArray">16
Vv44@0:8@"NSString"16@"NSString"24B32@?<v@?@"NSError">36
Vv32@0:8B16B20@?<v@?B>24
Vv32@0:8@"NSString"16@?<v@?@"NSString"@"NSError">24
Vv72@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@"NSString"48@"NSString"56@?<v@?@"NSError">64
Vv24@0:8@?<v@?@"NSString"@"NSString"@"NSError">16
Vv28@0:8B16@?<v@?@"NSError">20
Vv28@0:8B16@?<v@?>20
Vv32@0:8@"NSNumber"16@?<v@?>24
Vv32@0:8q16@?<v@?>24
Vv32@0:8q16@?<v@?@"NSDate">24
Vv32@0:8@"NSDate"16q24
Vv40@0:8@"NSString"16q24@?<v@?@"NSDate">32
Vv40@0:8@"NSDate"16@"NSString"24q32
Vv24@0:8@?<v@?q>16
Vv24@0:8@?<v@?@"NSUUID">16
Vv24@0:8@?<v@?@"AFAudioSessionCoordinationSnapshot">16
Vv32@0:8@"NSDictionary"16@?<v@?@"NSDictionary"@"NSError">24
Vv52@0:8q16B24q28@"NSString"36@?<v@?@"NSError">44
Vv32@0:8@"AFDeleteSiriHistoryContext"16@?<v@?@"NSError">24
Vv32@0:8@"NSString"16@?<v@?@"NSURL"@"NSError">24
Vv56@0:8@"NSString"16d24d32q40@?<v@?@"NSURL"@"NSError">48
Vv32@0:8@"AFMyriadAdvertisementContext"16@?<v@?@"NSArray"@"NSError">24
Vv32@0:8@"NSUUID"16@?<v@?B@"NSError">24
Vv48@0:8@"NSString"16@"NSString"24@"NSDictionary"32@?<v@?@"NSError">40
Vv24@0:8@?<v@?@"AFHomeAccessoryInfo">16
Vv32@0:8@"NSString"16@"AFSpeechRecognition"24
Vv32@0:8@"NSString"16@?<v@?@"NSDictionary">24
Vv32@0:8@"NSDictionary"16@?<v@?B@"NSError">24
Vv24@0:8@?<v@?@"NSSet"@"NSError">16
Vv32@0:8@"NSString"16@?<v@?@"NSString">24
Vv32@0:8@"NSString"16@?<v@?@"NSString"@"NSString"@"NSError">24
Vv32@0:8@"NSString"16@?<v@?@"AFPersonalUserSettings"@"NSError">24
@64@0:8@16@24@32@40@48@56
@"AFDeleteSiriHistoryContext"
{_mutationFlags="isDirty"b1"hasSuccessTitle"b1"hasSuccessBody"b1"hasSuccessButtonText"b1"hasErrorTitle"b1"hasErrorBody"b1"hasErrorButtonText"b1}
v40@0:8@16@24q32
v52@0:8q16B24q28@36@?44
v28@0:8B16@?20
v48@0:8q16q24q32@40
C16@0:8
v20@0:8C16
i16@0:8
v20@0:8i16
v20@0:8f16
@20@0:8B16
@32@0:8@16^B24
{atomic_flag="_Value"AB}
@"AFSafetyBlock"
v52@0:8@16@24@32@40f48
v40@0:8q16@24@32
@40@0:8@16@24d32
@"AFTreeNode"
d24@0:8@16
v32@0:8@?<v@?>16@?<v@?@"STSiriContext">24
@"AFSiriTaskmaster"
@"AFDeviceRequestHandlingRecord"
{_mutationFlags="isDirty"b1"hasRequestID"b1"hasDeviceRoles"b1}
@52@0:8B16@20@28@36@44
@"AFAudioSessionCoordinationSystemInfo"
{_mutationFlags="isDirty"b1"hasIsSupportedAndEnabled"b1"hasHomeKitRoomName"b1"hasHomeKitMediaSystemIdentifier"b1"hasMediaRemoteGroupIdentifier"b1"hasMediaRemoteRouteIdentifier"b1}
v28@0:8@16i24
v40@0:8@16Q24Q32
v28@0:8@"AFNotifyObserver"16i24
v40@0:8@"AFNotifyObserver"16Q24Q32
v24@0:8@"<AFAnnouncementRequestCapabilityProvidingDelegate>"16
v24@0:8@?<v@?Q>16
@"<AFAnnouncementRequestCapabilityProviding>"16@0:8
@"NSArray"24@0:8q16
B20@0:8B16
@"AFSettingsConnection"
@"AFNotifyObserver"
@"NSHashTable"
@"AFSiriAnnouncementRoute"
v32@0:8d16@24
@24@0:8#16
v56@0:8@16@24@32@40B48B52
v56@0:8@16q24@32@40@48
@"<AFConversationDelegate>"
@"<AFConversationStorable>"
@"BBAction"
@40@0:8Q16@24d32
@"AFMyriadAdvertisementContext"
{_mutationFlags="isDirty"b1"hasGeneration"b1"hasContextData"b1"hasContextFetchDelay"b1}
@72@0:8@16@24@32d40d48@?56@?64
@84@0:8@16q24B32B36B40B44f48@52@60@68@76
@"AFAudioPlaybackRequest"
v24@0:8@"AFAccessibilityState"16
v24@0:8@"AFAudioPlaybackRequest"16
{_mutationFlags="isDirty"b1"hasAccessibilityState"b1"hasDeviceRingerSwitchState"b1"hasIsDeviceInCarDNDMode"b1"hasIsDeviceInStarkMode"b1"hasIsDeviceWatchAuthenticated"b1"hasAreAnnouncementRequestsPermittedByPresentationWhileActive"b1"hasOutputVolume"b1"hasTapToSiriAudioPlaybackRequest"b1"hasTwoShotAudioPlaybackRequest"b1"hasDeviceSetupFlowBeginDate"b1"hasDeviceSetupFlowEndDate"b1}
@244@0:8I16{?=[64S]^{__CFString}^S*{?=qq}qq}20Q204^I212^B220^B228^B236
@236@0:8I16{?=[64S]^{__CFString}^S*{?=qq}qq}20Q204^I212^B220^B228
@60@0:8@16B24^@28^B36^B44^B52
@56@0:8@16^@24^B32^B40^B48
@40@0:8@16^@24^B32
@48@0:8@16^@24^B32^B40
@"NSLocale"
@"NSString"24@0:8@"NSString"16
@"NSString"32@0:8@"NSString"16^B24
@24@0:8@"AceObject"16
v24@0:8@"AFBulletin"16
@"NSURL"24@0:8@"NSString"16
@48@0:8@16Q24@32@40
@"<AFNotifyObserverDelegate>"
{_flags="delegateRespondsToDidReceiveNotificationWithToken"b1"delegateRespondsToDidChangeStateFromTo"b1}
@"NSDateFormatter"
Vv40@0:8@16@24B32B36
Vv44@0:8@16B24@28@36
Vv32@0:8q16@24
Vv40@0:8@16q24@32
Vv48@0:8@16q24@32@40
Vv48@0:8@"NSString"16@"AFDictationOptions"24@"AFSpeechRequestOptions"32@?<v@?@"NSXPCListenerEndpoint">40
Vv40@0:8@"NSString"16@"AFDictationOptions"24@"AFSpeechRequestOptions"32
Vv24@0:8@"AFSpeechRequestOptions"16
Vv40@0:8@"AFDictationOptions"16@"NSString"24B32B36
Vv24@0:8@"NSData"16
Vv32@0:8@"AFSpeechCorrectionInfo"16@"NSDictionary"24
Vv32@0:8@"AFSpeechCorrectionInfo"16@"NSString"24
Vv32@0:8@"NSString"16@"AFDictationOptions"24
Vv44@0:8@"NSURL"16B24@"NSString"28@"AFDictationOptions"36
Vv32@0:8q16@"NSString"24
Vv32@0:8@"NSString"16@?<v@?B@"NSError">24
Vv40@0:8@"NSError"16q24@"NSDictionary"32
Vv48@0:8@"NSError"16q24@"NSString"32@"NSDictionary"40
v56@0:8@16@24@32@40@48
v40@0:8@16@24B32B36
B28@0:8@16B24
@?40@0:8@16@24@32
@"<AFDictationDelegate>"
@"NSMutableData"
@"AFAnalyticsEvent"
@"AFAnalyticsTurnBasedInstrumentationContext"
v44@0:8@16B24@28@36
Vv56@0:8@16@24@32@40@48
Vv24@0:8d16
Vv36@0:8@16@24B32
Vv24@0:8@"AFXPCWrapper"16
Vv40@0:8@"AFDictationOptions"16@"NSString"24@"NSString"32
Vv56@0:8@"NSArray"16@"NSArray"24@"NSString"32@"NSDictionary"40@"AFSpeechAudioAnalytics"48
Vv32@0:8@"NSArray"16@"NSString"24
Vv32@0:8@"NSFileHandle"16@"NSError"24
Vv40@0:8@"NSArray"16@"NSString"24B32B36
Vv24@0:8@"AFSpeechPackage"16
Vv36@0:8@"NSString"16@"NSDictionary"24B32
Vv24@0:8@"SASMultilingualSpeechRecognized"16
@"AFDictationConnection"
B32@0:8@16@?24
B32@0:8@"AFSiriActivationContext"16@?<v@?@"AFSiriActivationResult">24
@68@0:8@16@24I32I36B40B44B48B52B56B60B64
@"AFBluetoothDeviceInfo"
{_mutationFlags="isDirty"b1"hasAddress"b1"hasDeviceUID"b1"hasVendorID"b1"hasProductID"b1"hasIsAdvancedAppleAudioDevice"b1"hasSupportsInEarDetection"b1"hasSupportsVoiceTrigger"b1"hasSupportsSpokenNotification"b1"hasSupportsListeningModeANC"b1"hasSupportsListeningModeTransparency"b1"hasSupportsAnnounceCall"b1}
v24@0:8@"CARSession"16
v32@0:8@"CARSession"16@"CARSessionConfiguration"24
Q20@0:8B16
@"CARSessionStatus"
v24@0:8@"AFSpeechRecordingAlertBehavior"16
@"AFSpeechRecordingAlertPolicy"
{_mutationFlags="isDirty"b1"hasStartingAlertBehavior"b1"hasStoppedAlertBehavior"b1"hasStoppedWithErrorAlertBehavior"b1}
@56@0:8@16@24@32@40q48
@"AFExperiment"
{_mutationFlags="isDirty"b1"hasConfigurationIdentifier"b1"hasConfigurationVersion"b1"hasDeploymentGroupIdentifier"b1"hasDeploymentGroupProperties"b1"hasDeploymentReason"b1}
@"AFRequestCompletionOptions"
@"SAStartRequest"
@"SAStartLocalRequest"
@40@0:8r*16@24Q32
@96@0:8@16@24@32@40@48@56B64B68@72@80q88
@"AFHomeAccessoryInfo"
{_mutationFlags="isDirty"b1"hasUniqueIdentifier"b1"hasLoggingUniqueIdentifier"b1"hasName"b1"hasModel"b1"hasRoomName"b1"hasAssistantIdentifier"b1"hasIsSpeaker"b1"hasHasActiveThirdPartyMusicSubscription"b1"hasManufacturer"b1"hasCategoryType"b1"hasSchemaCategoryType"b1}
@"NSDate"16@0:8
@"<AFClockItemStorageDelegate>"
@28@0:8B16@?20
Vv32@0:8@"SABaseCommand"16@?<v@?@"SABaseCommand"@"NSError">24
@48@0:8@16B24B28@?32@?40
v40@0:8@16B24B28@?32
v48@0:8@16B24B28@?32@?40
v44@0:8@16B24@?28@?36
v40@0:8@16@?24@?32
Vv40@0:8@16B24B28@?32
Vv40@0:8@"SABaseCommand"16B24B28@?<v@?B@"NSError">32
@48@0:8@16@24@32@40
@56@0:8@16q24@32@40@48
{?=@@@@}16@0:8
@?16@0:8
@"STSiriContext"
@"AFLanguageDetectionUserContext"
@44@0:8B16q20q28q36
@"AFBluetoothHeadphoneInEarDetectionState"
{_mutationFlags="isDirty"b1"hasIsEnabled"b1"hasPrimaryEarbudSide"b1"hasPrimaryInEarStatus"b1"hasSecondaryInEarStatus"b1}
@96@0:8q16B24@28@36@44@52@60@68@76@84B92
v24@0:8@"NSError"16
v24@0:8@"AFExperiment"16
@"AFEnablementConfigurationProviderParameters"
{_mutationFlags="isDirty"b1"hasEnablementFlow"b1"hasNewUser"b1"hasUserStatusFetchError"b1"hasDateStartedResolvingUserStatus"b1"hasDateEndedResolvingUserStatus"b1"hasExperiment"b1"hasExperimentFetchError"b1"hasDateStartedResolvingExperiment"b1"hasDateEndedResolvingExperiment"b1"hasOutputVoiceCountForRecognitionLanguage"b1"hasRecognitionLanguageWithMultipleOutputVoicesExists"b1}
@36@0:8@16B24@28
@"AFPeerInfo"
@56@0:8@16@24@32@40@48
@"AFDeviceContextHistoryConfiguration"
v20@0:8S16
v24@0:8C16C20
v24@0:8f16i20
S16@0:8
v24@0:8@?<v@?@"NSString"@"<SiriCoreSQLiteValue>"^B>16
@40@0:8@16@24q32
@24@0:8B16B20
{AvailabilityState="availabilityIsKnown"b1"isAvailable"b1}
@"NSString"24@0:8@"SAUIListItem"16
@"SAUIListItem"24@0:8@"NSString"16
@"NSData"16@0:8
@"AFDisambiguationInfo"16@0:8
v24@0:8@"AFDisambiguationInfo"16
Vv32@0:8@"NSDictionary"16@"NSString"24
Vv48@0:8@"NSData"16@"NSString"24@"NSString"32@?<v@?>40
Vv40@0:8@"NSString"16@"NSString"24@?<v@?@"NSData">32
@"NSDictionary"24@0:8@"NSString"16
v32@0:8@"NSDictionary"16@"NSString"24
@"NSData"32@0:8@"NSString"16@"NSString"24
v40@0:8@"NSData"16@"NSString"24@"NSString"32
v48@0:8@16@24@32@?40
v32@0:8q16@?<v@?@"<AFOpportuneSpeakingModel>"@"NSString">24
v32@0:8q16@"NSString"24
v40@0:8@"NSString"16@"NSString"24@"NSString"32
v48@0:8@"NSString"16@"NSDate"24@"NSDate"32@?<v@?BB>40
v36@0:8@16f24@28
v36@0:8@"NSString"16f24@"<AFOpportuneSpeakable>"28
v24@0:8@"<AFOpportuneSpeakingModelDelegate>"16
v24@0:8@"<AFOpportuneSpeakable>"16
v32@0:8q16@"<AFOpportuneSpeakable>"24
@"AFRequestHandlingContext"
{_mutationFlags="isDirty"b1"hasRequestID"b1"hasInputDeviceID"b1"hasInputAssistantID"b1}
@48@0:8q16d24@32@40
B32@0:8d16d24
Q20@0:8C16
c28@0:8C16@20
d28@0:8C16@20
@28@0:8C16@20
@24@0:8r^[16C]16
@64@0:8@16@24@32@40@48B56B60
@"TUHandle"
v56@0:8@16q24Q32@40@?48
v48@0:8@"AFSiriActivationListener"16@"INIntent"24@"NSString"32@?<v@?@"INIntentResponse"@"NSError">40
v48@0:8@"AFSiriActivationListener"16@"INIntentForwardingAction"24@"NSString"32@?<v@?@"INIntentForwardingActionResponse">40
v48@0:8@"AFSiriActivationListener"16@"AFRequestInfo"24@"AFSiriActivationContext"32@?<v@?@"NSError">40
v56@0:8@"AFSiriActivationListener"16q24Q32@"AFSiriActivationContext"40@?<v@?@"NSError">48
v40@0:8@"AFSiriActivationListener"16@"AFSiriActivationContext"24@?<v@?@"NSError">32
@"AFSiriActivationListener"
@24@0:8^@?16
Vv52@0:8@16@24@32B40@?44
Vv24@0:8@?<v@?@"AFDeviceContext">16
Vv52@0:8@"NSDictionary"16@"NSDictionary"24@"NSString"32B40@?<v@?>44
Vv24@0:8@"AFDeviceContext"16
B24@0:8q16
@32@0:8@?16@24
@40@0:8@?16@24@32
@48@0:8@?16@24@32@40
B40@0:8@16@24@32
@"NSMethodSignature"
@"AFOpportuneSpeakingModelFeedback"
@"<_DKKnowledgeQuerying>"
@56@0:8Q16@24@32@40@48
@"AFMyriadSession"
{_mutationFlags="isDirty"b1"hasGeneration"b1"hasSessionId"b1"hasCurrentElectionAdvertisementId"b1"hasCurrentElectionAdvertisementData"b1"hasElectionAdvertisementDataByIds"b1}
d32@0:8d16Q24
v24@0:8@?<v@?B>16
@"UNNotification"
#24@0:8q16
v32@0:8@"<AFAnnouncementRequestCapabilityProviding>"16Q24
v28@0:8B16q20
@"<AFAnnouncementRequestCapabilityProviding>"
@136@0:8B16@20@28@36@44@52@60@68@76B84@88@96@104@112@120@128
v36@0:8@16B24@?28
v56@0:8@16@24Q32@40@?48
v28@0:8f16@?20
v36@0:8f16@20@?28
v60@0:8@16@24@32@40B48@?52
v56@0:8@16d24d32q40@?48
@"<AFSettingsDelegate>"
v44@0:8@16B24@28@?36
v76@0:8@16@24@32@40@48@56B64@?68
v24@0:8@"AFPeerInfo"16
v24@0:8@"AFAudioSessionCoordinationSystemInfo"16
@"AFAudioSessionCoordinationDeviceInfo"
{_mutationFlags="isDirty"b1"hasPeerInfo"b1"hasSystemInfo"b1}
{_mutationFlags="isDirty"b1"hasOverrideOption"b1"hasReason"b1}
v40@0:8@16d24@?32
@"AFSiriActivationConnection"
@80@0:8@16@24@32@40@48@56@64@72
v32@0:8q16@"NSArray"24
i24@0:8Q16
I24@0:8^{MyriadMetricsDataV1=CQCQCddCCCCCCdCCC[50C][50C][50C]C}16
d24@0:8^{MyriadMetricsDataV1=CQCQCddCCCCCCdCCC[50C][50C][50C]C}16
@24@0:8^{MyriadMetricsDataV1=CQCQCddCCCCCCdCCC[50C][50C][50C]C}16
@36@0:8@16I24d28
v48@0:8^{MyriadMetricsDataV1=CQCQCddCCCCCCdCCC[50C][50C][50C]C}16@24@32@?40
v40@0:8^{MyriadMetricsDataV1=CQCQCddCCCCCCdCCC[50C][50C][50C]C}16@24@?32
v44@0:8@16@24q32B40
@"AFSiriIncomingCall"
@32@0:8@16f24f28
@84@0:8@16@24@32@40@48@56@64B72q76
@"AFLocationSnapshot"
{_mutationFlags="isDirty"b1"hasLatitude"b1"hasLongitude"b1"hasAltitude"b1"hasDirection"b1"hasSpeed"b1"hasVerticalAccuracy"b1"hasHorizontalAccuracy"b1"hasPreciseLocationEnabled"b1"hasAccessState"b1}
@"AFAudioDeviceInfo"
{_mutationFlags="isDirty"b1"hasRoute"b1"hasIsRemoteDevice"b1"hasDeviceUID"b1}
@144@0:8B16B20B24B28B32B36@40q48q56q64q72q80q88q96q104q112q120q128q136
@"AFModesConfiguration"
{_mutationFlags="isDirty"b1"hasIsEyesFree"b1"hasIsForCarDND"b1"hasIsVoiceTriggerRequest"b1"hasIsConnectedToCarPlay"b1"hasIsRequestMadeWithPhysicalDeviceInteraction"b1"hasUserTypedInSiri"b1"hasModeOverrideValue"b1"hasDeviceRaised"b1"hasFaceDetected"b1"hasTouchScreenDetected"b1"hasButtonPressDetected"b1"hasFlatDevicePosture"b1"hasDeviceOrientation"b1"hasIsInWorkout"b1"hasIsBacklightOn"b1"hasIsInWaterLock"b1"hasIsInSleepLock"b1"hasIsInTheaterMode"b1"hasIsOnWrist"b1}
@48@0:8Q16@24@32@40
@"NSOrderedSet"
v24@0:8@"NSOrderedSet"16
@"AFClockAlarmSnapshot"
{_mutationFlags="isDirty"b1"hasGeneration"b1"hasDate"b1"hasAlarmsByID"b1"hasNotifiedFiringAlarmIDs"b1}
@88@0:8@16@24@32@40@48@56q64@72@80
@"AFServiceDeviceContext"
{_mutationFlags="isDirty"b1"hasIdentifier"b1"hasAssistantIdentifier"b1"hasMediaSystemIdentifier"b1"hasMediaRouteIdentifier"b1"hasSharedUserID"b1"hasRoomName"b1"hasProximity"b1"hasSerializedContextByKey"b1"hasMetricsContext"b1}
@"NSFileHandle"
@"NSXPCListenerEndpoint"
@"AFSpeechSynthesisRecord"
@"CLLocation"
v24@0:8#16
@44@0:8@16B24@28@36
@"AFExperimentState"
{_mutationFlags="isDirty"b1"hasLastSyncDate"b1"hasDidEnd"b1"hasEndingGroupIdentifier"b1"hasVersion"b1}
@"SISchemaClientAnyEvent"
@"SISchemaClientTurnContext"
@"AFSiriHomeAutomationRequestInfo"
{_mutationFlags="isDirty"b1"hasContext"b1}
@"AFClockTimerSnapshot"
{_mutationFlags="isDirty"b1"hasGeneration"b1"hasDate"b1"hasTimersByID"b1"hasNotifiedFiringTimerIDs"b1}
@"AFExperimentContext"
{_mutationFlags="isDirty"b1"hasExperimentsByConfigurationIdentifier"b1}
@"STContactAddress"
@32@0:8Q16@24
@"AFHomeAnnouncement"
v24@0:8@"AFHomeAnnouncement"16
@"AFHomeAnnouncementSnapshot"
{_mutationFlags="isDirty"b1"hasState"b1"hasLastPlayedAnnouncement"b1}
@"AFSiriTaskDeliveryHandler"
v32@0:8@"AFSiriTask"16@?<v@?@"NSError">24
@"AFSiriTaskService"
@"<AFSiriTaskServiceDelegate>"
v32@0:8@"AFSiriTaskUsageResult"16@"AFSiriRequest"24
v40@0:8@"AFSiriRequest"16@?<v@?>24@?<v@?@"AFSiriResponse"@"NSError">32
@"NSMapTable"
@"<AFSiriTaskmasterDelegate>"
@40@0:8@16^@24@?32
@"<AFUserNotificationAnnouncementSpeakingStateDelegate>"
@28@0:8Q16B24
@"AFCallStateSnapshot"
{_mutationFlags="isDirty"b1"hasCallState"b1"hasOnSpeaker"b1}
@"AFManagedStorageConnection"
@"STSiriMessage"
@56@0:8Q16i24i28Q32Q40Q48
@"AFMemoryInfo"
{_mutationFlags="isDirty"b1"hasVirtualMemorySizeInBytes"b1"hasNumberOfRegions"b1"hasPageSizeInBytes"b1"hasResidentMemorySizeInBytes"b1"hasPeakResidentMemorySizeInBytes"b1"hasPhysicalMemoryFootprintInBytes"b1}
@64@0:8Q16q24q32Q40@48@56
@"AFSiriActivationContext"
{_mutationFlags="isDirty"b1"hasTimestamp"b1"hasSource"b1"hasEvent"b1"hasOptions"b1"hasDeviceID"b1"hasUserInfo"b1}
v40@0:8q16Q24@32
v36@0:8q16@24B32
v40@0:8q16@?24@32
v40@0:8@16Q24@32
v32@0:8#16@24
v40@0:8#16Q24@32
v44@0:8q16Q24@32B40
v48@0:8q16Q24@?32@40
v40@0:8q16Q24@?32
@"<AFAnalyticsService>"
Vv48@0:8@16@24Q32@?40
Vv32@0:8@"AFAssertionContext"16@?<v@?@"AFAssertionContext"@"NSError">24
Vv48@0:8@"AFAssertionContext"16@"NSError"24Q32@?<v@?>40
@"AFMyriadGoodnessScoreOverrideContext"
C28@0:8d16B24
C44@0:8@16d24d32B40
C24@0:8@16
@"AFMyriadInstrumentation"
v48@0:8q16Q24@32@?40
@"<AFSiriActivationListenerDelegate>"
q40@0:8@16@24q32
B48@0:8Q16@24@32q40
v40@0:8r^v16^v24Q32
v24@0:8r^{myrAccessoryMessage=CQQdSCCCCCCCCC}16
@88@0:8Q16Q24d32S40C44C48C52C56C60C64C68C72C76@80
@36@0:8Q16B24@28
{myrAccessoryMessage="version"C"requestType"Q"session"Q"voiceTriggerEndTime"d"audioHash"S"goodnessScore"C"userConfidenceScore"C"tieBreaker"C"deviceClass"C"deviceGroup"C"productType"C"electionDecision"C"emergencyHandled"C"ack"C}
@"<AFUtteranceSuggestionsDelegate>"
@56@0:8@16@24q32@40@48
@"AFHomeAccessorySiriDataSharingPropagationLogEvent"
{_mutationFlags="isDirty"b1"hasDate"b1"hasAccessoryIdentifier"b1"hasPropagationEvent"b1"hasPropagationEventReason"b1"hasAssociatedChangeLogEventIdentifier"b1}
v40@0:8i16i20@24Q32
v36@0:8i16@20Q28
v44@0:8i16f20f24@28Q36
v88@0:8i16B20B24Q28@36@44@52I60@64@72Q80
v52@0:8i16B20@24I32@36Q44
v36@0:8@16i24Q28
@20@0:8C16
v24@0:8C16I20
v24@0:8B16i20
@"CDASchemaCDAScoreBoosters"
@"AFExperimentServerConfigurationInfo"
{_mutationFlags="isDirty"b1"hasConfigurationIdentifier"b1"hasConfigurationURL"b1"hasMaxTimeToSync"b1}
@56@0:8@16Q24Q32@40@48
{_mutationFlags="isDirty"b1"hasIdentifier"b1"hasStartedHostTime"b1"hasFinishedHostTime"b1"hasStartedDate"b1"hasFinishedDate"b1}
v24@0:8f16f20
v20@0:8c16
v28@0:8c16@20
v32@0:8d16@?24
v36@0:8@16f24@?28
v36@0:8@16f24Q28
v32@0:8Q16Q24
v36@0:8B16Q20@?28
d32@0:8d16d24
@48@0:8@16d24d32@40
v32@0:8d16d24
v36@0:8^f16^f24i32
v40@0:8@16f24f28Q32
v40@0:8@16f24f28@?32
@20@0:8S16
B20@0:8C16
@"AFPowerAssertionManager"
^{__CFNotificationCenter=}
@"AFMyriadRecord"
@"AFMyriadEmergencyCallPunchout"
@"SFDiagnostics"
{?="didRequestForBTLEScan"B"didRequestForBTLEAdvertisement"B}
{?="waitTimer"@"NSObject<OS_dispatch_source>""waitBlock"@?"isWaitTimerSuspended"B}
{?="advertTriggerAdvStartTime"@"NSDate""advertTriggerEndTime"@"NSDate"}
@"AFMyriadAdvertisementContextManager"
@"AFMyriadAdvertisementContextRecord"
@"AFMyriadGoodnessScoreEvaluator"
@"AFNotifyStatePublisher"
@"AFMyriadPreferences"
@"AWAttentionAwarenessClient"
v36@0:8B16@20@?28
@"BKSApplicationStateMonitor"
@"BKSProcessAssertion"
v24@0:8@?<v@?{?=@@@@B}>16
@144@0:8@16@24@32@40@48@56@64@72@80B88B92B96B100B104B108d112@120@128@136
v24@0:8@"CLLocation"16
@"AFSpeechParameters"
{_mutationFlags="isDirty"b1"hasLanguage"b1"hasInteractionIdentifier"b1"hasTask"b1"hasLoggingContext"b1"hasApplicationName"b1"hasProfile"b1"hasOverrides"b1"hasModelOverrideURL"b1"hasOriginalAudioFileURL"b1"hasNarrowband"b1"hasDetectUtterances"b1"hasCensorSpeech"b1"hasFarField"b1"hasSecureOfflineOnly"b1"hasShouldStoreAudioOnDevice"b1"hasMaximumRecognitionDuration"b1"hasInputOrigin"b1"hasLocation"b1"hasJitGrammar"b1}
@"BBBulletin"
{_mutationFlags="isDirty"b1"hasImagePath"b1"hasSymbolName"b1}
@"AFAnalyticsObserverConnection"
@40@0:8B16B20@24@?32
@32@0:8@16I24B28
@48@0:8@16@24@?32@40
v48@0:8@16@24@32^v40
@"AFKeyValueObservingDeliveryOptions"
@32@0:8@16d24
v24@0:8@"NSMutableDictionary"16
@"NSArray"16@0:8
v36@0:8Q16B24d28
v28@0:8i16Q20
@68@0:8@16@24q32f40d44d52@60
{_mutationFlags="isDirty"b1"hasItemURL"b1"hasItemData"b1"hasNumberOfLoops"b1"hasVolume"b1"hasFadeInDuration"b1"hasFadeOutDuration"b1"hasUserInfo"b1}
@"AFBundleResource"
{_mutationFlags="isDirty"b1"hasName"b1"hasExtension"b1}
@"STAlarm"
@24@0:8^v16
@"STCall"
v28@0:8C16@?20
@92@0:8@16B24@28@36@44@52@60@68@76@84
@"NSDateInterval"
v24@0:8@"NSDateInterval"16
v24@0:8@"AFAudioSessionCoordinationDeviceInfo"16
@"AFAudioSessionCoordinationSnapshot"
{_mutationFlags="isDirty"b1"hasCurrentOrUpNextDateInterval"b1"hasIsAudioSessionActive"b1"hasLocalActiveAssertionContexts"b1"hasLocalPendingAssertionContexts"b1"hasRemoteActiveAssertionContexts"b1"hasRemotePendingAssertionContexts"b1"hasLocalDevice"b1"hasRemoteQualifiedInRangeDevices"b1"hasRemoteQualifiedOutOfRangeDevices"b1"hasRemoteDisqualifiedDevices"b1}
@28@0:8B16Q20
{_mutationFlags="isDirty"b1"hasKeepsHistory"b1"hasHistoryBufferSize"b1}
@"AFMutableConversationItem"
@"AFBulletin"
v24@0:8@"AceObject"16
@"AFApplicationContext"
{_mutationFlags="isDirty"b1"hasAssociatedBundleIdentifier"b1"hasBulletin"b1"hasAceContext"b1"hasContextDictionary"b1"hasAceContexts"b1}
@"AFSharedConfidenceScore"
{_mutationFlags="isDirty"b1"hasSharedUserId"b1"hasConfidenceScore"b1}
@48@0:8@16@24q32@40
@"<AFAudioPowerUpdaterDelegate>"
@"<AFAudioPowerProviding>"
B28@0:8Q16i24
B28@0:8^Q16i24
Vv32@0:8Q16@?24
Vv24@0:8B16B20
Vv32@0:8Q16d24
Vv36@0:8@16B24@?28
Vv32@0:8q16@"AFSpeechRequestOptions"24
Vv32@0:8@"AFSetAudioSessionActiveContext"16@?<v@?@"AFSetAudioSessionActiveResult">24
Vv32@0:8Q16@?<v@?>24
Vv24@0:8@"AFClientConfiguration"16
Vv24@0:8@"AFModesConfiguration"16
Vv24@0:8@"NSDate"16
Vv40@0:8@"AFSpeechRequestOptions"16Q24@?<v@?@"NSError">32
Vv40@0:8@"AFSpeechRequestOptions"16@"SASPronunciationContext"24@?<v@?@"NSError">32
Vv40@0:8@"AFSpeechRequestOptions"16@"NSString"24@?<v@?@"NSError">32
Vv32@0:8q16@"NSError"24
Vv24@0:8@?<v@?BI>16
Vv36@0:8@"NSDictionary"16B24@?<v@?B>28
Vv24@0:8@"SASetApplicationContext"16
Vv32@0:8@"NSString"16@24
Vv24@0:8@"AFMetrics"16
Vv32@0:8@"NSArray"16@?<v@?@"NSArray"@"NSError">24
Vv32@0:8@"NSSet"16@?<v@?@"NSDictionary">24
Vv24@0:8@?<v@?@"AFClockTimerSnapshot"@"NSError">16
Vv24@0:8@"AFSpeechSynthesisRecord"16
Vv40@0:8@"NSString"16@"NSString"24@"NSDictionary"32
Vv32@0:8@"NSData"16@?<v@?@"NSString"@"NSData">24
Vv40@0:8@"NSDictionary"16@"NSString"24@?<v@?@"NSDictionary"@"NSError">32
Vv32@0:8@"AFApplicationInfo"16@?<v@?@"NSArray">24
Vv28@0:8@"NSURL"16B24
@"<AFBluetoothWirelessSplitterSessionStateObserverDelegate>"
v52@0:8@16@24@32B40@?44
@"_AFDeviceContextServiceDelegateProxy"
@"<AFDeviceContextConnectionDelegate>"
@"AFDeviceContext"
@"AFDeviceContextConnection"
v48@0:8@16@24@?32@?40
@"<AFSpeakableNamespaceProvider>"24@0:8@"AceObject"16
q24@0:8q16
@"NSObject<OS_dispatch_semaphore>"
@"AFSystemStateSnapshot"
{_mutationFlags="isDirty"b1"hasSleepState"b1}
@"AFApplicationContextSnapshot"
{_mutationFlags="isDirty"b1"hasApplicationContexts"b1}
@52@0:8@16@24f32@36@44
@"AFOutputVoiceColorDescriptor"
{_mutationFlags="isDirty"b1"hasHexColor"b1"hasColorName"b1"hasAlpha"b1"hasLocalizedOutputVoiceColor"b1"hasLocalizedOutputVoice"b1}
v24@0:8^v16
v32@0:8@16^v24
@28@0:8^v16B24
@40@0:8@16Q24Q32
{_mutationFlags="isDirty"b1"hasUtterance"b1"hasBeginTimestamp"b1"hasEndTimestamp"b1}
@"AFHomeInfo"
{_mutationFlags="isDirty"b1"hasHomeIdentifier"b1"hasActivityNotificationsEnabledForPersonalRequests"b1}
@68@0:8q16@24q32@40B48B52B56Q60
{_mutationFlags="isDirty"b1"hasStyle"b1"hasLanguageCode"b1"hasGender"b1"hasRecordRoute"b1"hasIsVoiceTrigger"b1"hasIsDucking"b1"hasIsTwoShot"b1"hasSpeechEndHostTime"b1}
@56@0:8Q16q24Q32q40@48
@"AFSiriActivationResult"
{_mutationFlags="isDirty"b1"hasActionType"b1"hasError"b1}
v24@0:8@"AFHomeInfo"16
v24@0:8@"AFEndpointInfo"16
v24@0:8@"AFInstanceInfo"16
v24@0:8@"AFSpeechInfo"16
v24@0:8@"AFRequestHandlingContext"16
@"AFCommandExecutionInfo"
{_mutationFlags="isDirty"b1"hasExecutionID"b1"hasRequestID"b1"hasTurnId"b1"hasOriginPeerInfo"b1"hasCurrentHomeInfo"b1"hasEndpointInfo"b1"hasInstanceInfo"b1"hasSpeechInfo"b1"hasRequestHandlingContextSnapshot"b1"hasDeviceRestrictions"b1"hasUserInfo"b1}
{?="eventType"b1}
B28@0:8@16i24
v36@0:8@16i24@28
@32@0:8r*16Q24
@60@0:8q16@24@32B40B44B48@52
@"NSIndexPath"
@52@0:8q16@24@32@40B48
@"AFMediaPlaybackStateSnapshot"
{_mutationFlags="isDirty"b1"hasPlaybackState"b1"hasNowPlayingTimestamp"b1"hasMediaType"b1"hasGroupIdentifier"b1"hasIsProxyGroupPlayer"b1}
@"AceObject<SAAceCommand>"
v48@0:8@16q24@32q40
@"AFConversation"
@"AFTriggerlessListeningOptions"
@108@0:8@16@24B32@36Q44Q52Q60Q68B76B80@84@92@100
@"AFClockAlarm"
{_mutationFlags="isDirty"b1"hasAlarmID"b1"hasAlarmURL"b1"hasIsFiring"b1"hasTitle"b1"hasType"b1"hasHour"b1"hasMinute"b1"hasRepeatOptions"b1"hasIsEnabled"b1"hasIsSnoozed"b1"hasFiredDate"b1"hasDismissedDate"b1"hasLastModifiedDate"b1}
@28@0:8I16@20
@"AFSetAudioSessionActiveResult"
{_mutationFlags="isDirty"b1"hasAudioSessionID"b1"hasError"b1}
v24@0:8@"AFDeviceContextConnection"16
v32@0:8@"AFDeviceContextConnection"16@"AFDeviceContext"24
v32@0:8@"<AFContextSnapshotTransforming>"16@"NSString"24
v36@0:8@"<AFContextSnapshot>"16@"AFDeviceContextMetadata"24B32
v44@0:8@16@24B32@?36
@"<AFContextDonation>"
{_mutationFlags="isDirty"b1"hasIsDeviceOwnedByCurrentUser"b1"hasAssistantIdentifier"b1"hasSharedUserIdentifier"b1"hasIdsIdentifier"b1"hasIdsDeviceUniqueIdentifier"b1"hasRapportEffectiveIdentifier"b1"hasHomeKitAccessoryIdentifier"b1"hasMediaSystemIdentifier"b1"hasMediaRouteIdentifier"b1"hasIsCommunalDevice"b1"hasRoomName"b1"hasName"b1"hasProductType"b1"hasBuildVersion"b1"hasUserInterfaceIdiom"b1"hasAceVersion"b1}
@28@0:8i16@20
@"AFClientInfo"
{_mutationFlags="isDirty"b1"hasProcessIdentifier"b1"hasProcessName"b1}
@24@0:8@"NSObject<OS_xpc_object>"16
v24@0:8@"NSObject<OS_xpc_object>"16
nearbyProductType
proximity
alarmFiring
timerFiring
playbackState
playbackRecency
homeAnnouncementState
homeAnnouncementRecency
nearbyDevicesRequestIdentifier
targetedResult
contextIdentifier
%@ {%@}
nearbyProductType = %@
proximity = %@
alarmFiring = %@
timerFiring = %@
playbackState = %@
playbackRecency = %@
homeAnnouncementState = %@
homeAnnouncementRecency = %@
nearbyDevicesRequestIdentifier = %@
targetedResult = %@
contextIdentifier = %@
AFCoreAnalyticsDeviceContextPayload::nearbyProductType
AFCoreAnalyticsDeviceContextPayload::proximity
AFCoreAnalyticsDeviceContextPayload::alarmFiring
AFCoreAnalyticsDeviceContextPayload::timerFiring
AFCoreAnalyticsDeviceContextPayload::playbackState
AFCoreAnalyticsDeviceContextPayload::playbackRecency
AFCoreAnalyticsDeviceContextPayload::homeAnnouncementState
AFCoreAnalyticsDeviceContextPayload::homeAnnouncementRecency
AFCoreAnalyticsDeviceContextPayload::nearbyDevicesRequestIdentifier
AFCoreAnalyticsDeviceContextPayload::targetedResult
AFCoreAnalyticsDeviceContextPayload::contextIdentifier
waitsUntilRecordingAndAlertsDone
updatesAudioContext
v8@?0
AFSiriDidLaunchAppNotification
requestSettings
typeToSiri
showRecognizedSpeech
captionVoiceFeedback
hideBackgroundContent
useSpeakerForTTS
siriInputLanguage
AFNetworkAvailabilityDidChangeNotification
v16@?0@"<AFCallSiteInfoMutating>"8
-[AFConnection initWithTargetQueue:instanceContext:]
-[AFConnection dealloc]
Client is already capturing speech
-[AFConnection _requestWillBeginWithRequestClass:isSpeechRequest:speechRequestOptions:requestInfo:isBackgroundRequest:analyticsEventProvider:]
-[AFConnection _requestDidEnd]
-[AFConnection _handleCommand:reply:]
-[AFConnection _dispatchCommand:isInterstitial:interstitialPhase:interstitialDelay:reply:]
SiriX
enableTelemetry=YES
-[AFConnection _dispatchCommand:isInterstitial:interstitialPhase:interstitialDelay:reply:]_block_invoke
Interstitial
Early Fire
v16@?0@"AceObject<SAAceCommand>"8
-[AFConnection _setShouldSpeak:]
-[AFConnection _startInputAudioPowerUpdatesWithXPCWrapper:]
-[AFConnection _startInputAudioPowerUpdatesWithXPCWrapper:]_block_invoke
v16@?0@"<AFSpeechDelegate>"8
-[AFConnection _stopInputAudioPowerUpdates]
-[AFConnection _setAudioSessionID:]
-[AFConnection _setRecordRoute:]
-[AFConnection _markIsDucking]
-[AFConnection _markIsTwoShot]
-[AFConnection _markSpeechRecognized]
-[AFConnection _updateSpeechEndHostTime:]
-[AFConnection _completeRequestWithUUID:forReason:error:]
success
v32@?0d8d16@"NSError"24
Speech delegate %@ is incapable of performing two-shot prompt.
Active request type is %ld and active request UUFR type is %ld, two-shot prompt is ignored.
-[AFConnection _connectionFailedWithError:]
-[AFConnection _connection]_block_invoke_2
AFConnection
-[AFConnection _scheduleRequestTimeoutForReason:]
-[AFConnection _invokeRequestTimeoutForReason:]
-[AFConnection _pauseRequestTimeoutForReason:]
-[AFConnection _resumeRequestTimeoutForReason:]
-[AFConnection _cancelRequestTimeoutForReason:]
-[AFConnection _extendRequestTimeoutForReason:]
-[AFConnection _extendExistingRequestTimeoutForReason:]
-[AFConnection _fetchShouldSpeak:]_block_invoke_2
v12@?0B8
-[AFConnection _updateState]_block_invoke_2
-[AFConnection _updateState]_block_invoke
v16@?0B8I12
-[AFConnection _willStartRequestWithSpeech:speechRequestOptions:requestInfo:analyticsEventProvider:]
isSpeechRequest
unixTime
systemVersion
-[AFConnection _willEndSession]
-[AFConnection _willCancelRequest]
-[AFConnection _willFailRequestWithError:]
B16@?0@"NSError"8
%@,%@
SpeechErrorHints[StartStopSpeechDelta:%@]
@"NSError"8@?0
-[AFConnection _willCompleteRequest]
-[AFConnection _willPresentUsefulUserResultWithType:]
Near Fire before UUFR
-[AFConnection _enqueueInterstitialCommand:]
-[AFConnection _beginInterstitialsForReason:]
-[AFConnection _handleInterstitialPhase:fromProvider:displayText:speakableText:expectedDelay:context:completion:]
-[AFConnection _handleInterstitialPhase:fromProvider:displayText:speakableText:expectedDelay:context:completion:]_block_invoke
v24@?0@"AceObject<SAAceCommand>"8@"NSError"16
-[AFConnection _endInterstitialsForReason:]
+[AFConnection isAvailable]
-[AFConnection endSession]
-[AFConnection invalidate]
+[AFConnection defrost]
com.apple.assistant.sync
v16@?0@"NSObject<OS_xpc_object>"8
name
defrost
mach_time
+[AFConnection defrost]_block_invoke_2
-[AFConnection preheatWithStyle:forOptions:]
-[AFConnection boostedPreheatWithStyle:completion:]
v16@?0@"NSError"8
v16@?0@"<AFSetAudioSessionActiveContextMutating>"8
v16@?0@"AFSetAudioSessionActiveResult"8
-[AFConnection forceAudioSessionActiveWithContext:completion:]
-[AFConnection forceAudioSessionActiveWithContext:completion:]_block_invoke
v16@?0@"<AFSetAudioSessionActiveResultMutating>"8
Safety completion of -forceAudioSessionActive is deallocated without invocation.
-[AFConnection forceAudioSessionActiveWithContext:completion:]_block_invoke_2
XPC connection encountered an error during -forceAudioSessionActive.
-[AFConnection acquireAudioSessionWithContext:completion:]
-[AFConnection acquireAudioSessionWithContext:completion:]_block_invoke
v16@?0q8
-[AFConnection forceAudioSessionInactiveWithOptions:completion:]
-[AFConnection forceAudioSessionInactiveWithOptions:completion:]_block_invoke
-[AFConnection resumeInterruptedAudioPlaybackIfNeeded]_block_invoke
-[AFConnection willPresentUI]_block_invoke
v16@?0@"<AFClientConfigurationMutating>"8
-[AFConnection setShouldWaitForMyriad:]
-[AFConnection setMyriadDecisionResult:]
Data
-[AFConnection startRequestWithInfo:activationEvent:]
-[AFConnection _startRequestWithInfo:]
@"AFAnalyticsEvent"16@?0@"NSUUID"8
-[AFConnection _startRequestWithInfo:]_block_invoke
Never
Always
UnlessMuted
-[AFConnection startRecordingAndGetContinueBlockForPendingSpeechRequestWithOptions:]
-[AFConnection startRecordingAndGetContinueBlockForPendingSpeechRequestWithOptions:]_block_invoke_2
-[AFConnection startRecordingAndGetContinueBlockForPendingSpeechRequestWithOptions:]_block_invoke
-[AFConnection startSpeechPronunciationRequestWithOptions:pronunciationContext:]
-[AFConnection startSpeechPronunciationRequestWithOptions:pronunciationContext:]_block_invoke_2
-[AFConnection startAcousticIDRequestWithOptions:]_block_invoke_2
-[AFConnection cancelSpeech]
-[AFConnection cancelRequest]
-[AFConnection cancelRequestForReason:]
-[AFConnection failRequestWithError:]
-[AFConnection stopSpeechWithOptions:]
-[AFConnection updateSpeechOptions:]
-[AFConnection sendGenericAceCommand:turnIdentifier:conflictHandler:]
v16@?0@"NSMutableDictionary"8
v16@?0@"NSSet"8
v16@?0@"NSDictionary"8
v24@?0@"AFClockTimerSnapshot"8@"NSError"16
-[AFConnection startAudioPlaybackRequest:options:completion:]_block_invoke
speechEvent
File
isNarrowBand
-[AFConnectionClientServiceDelegate requestHandleCommand:reply:]_block_invoke
-[AFConnectionClientServiceDelegate requestRequestedOpenApplicationWithBundleID:URL:reply:]_block_invoke
-[AFConnectionClientServiceDelegate requestRequestedOpenURL:reply:]_block_invoke
-[AFConnectionClientServiceDelegate requestRequestedDismissAssistant]_block_invoke
-[AFConnectionClientServiceDelegate requestRequestedDismissAssistantWithReason:]_block_invoke
-[AFConnectionClientServiceDelegate quickStopWasHandledWithActions:]_block_invoke
stop_before_start
0-100ms
100-200ms
200-300ms
300-400ms
400-500ms
500ms-1s
1-2s
2-4s
4-8s
8-15s
15-30s
30-60s
60s+
no_stop
no_start
no_start_and_stop
_LogUUFRReadyConditionally
_EmitPNRFatalError
_EmitHomePodLaunchContextTime
INSerializedCacheItem
initINSerializedCacheItem_block_invoke
AFConnection.m
classINSerializedCacheItem
/System/Library/Frameworks/Intents.framework/Intents
IntentsLibrary
frameworkLibrary
AFBluetoothPairedDeviceInfoUpdated
AFBluetoothWirelessSplitterSessionStateChanged
unspecified
accessAllowed
serviceDisabled
accessDenied
(unknown)
ASSISTANT_SERVICES_INTERSTITIAL
Interstitials
-[AFInterstitialProvider dealloc]
-[AFInterstitialProvider initWithStyle:recordRoute:isVoiceTrigger:isDucking:isTwoShot:speechEndHostTime:context:preferences:delegate:]
com.apple.assistant.interstitial-provider.default
-[AFInterstitialProvider initWithStyle:recordRoute:isVoiceTrigger:isDucking:isTwoShot:speechEndHostTime:context:preferences:delegate:]_block_invoke
-[AFInterstitialProvider invalidate]
v16@?0@"NSNumber"8
-[AFInterstitialProvider _performNextActionWithExpectedDelay:]
%@_%@_%@
DISPLAY
_AFInterstitialActionsCreate
INITIAL_%u
FOLLOW_UP_%u
nano://
AFMessagesGetDomainObjectsFromContext
AFMessagesGetAceDomainObjectsFromContext
Client Acquisition
v16@?0@"<AFAssertionContextMutating>"8
processIdentifier
processName
_alarms
_settings
requestPath
inputOrigin
isEyesFree
requestPath = %ld (%@)
inputOrigin = %@
isEyesFree = %@
AFTestRequestOptions::requestPath
AFTestRequestOptions::inputOrigin
AFTestRequestOptions::isEyesFree
%@-%@
UNKNOWN_CALLER
CONTACT_WITH_TYPE
TWO_CONTACTS_SHARED_FAMILY_NAME
TWO_CONTACTS
THREE_CONTACTS
MORE_THAN_THREE_CONTACTS
CALLER_ID_WITH_RAW_CALLER
RAW_CALLER_WITH_SERVICE
phonemeInformation
value
/+%@
@"NSString"16@?0@"NSString"8
\tn=email\%@
\tn=normal\
\tn=phone\%@
\tn=normal\
\tn=state\%@
\tn=normal\
SPOKEN_CONTACT_FULL
Ringtone
CNContactPhonemeDataKey
initCNContactPhonemeDataKey_block_invoke
AFSiriRingtone.m
constant
/System/Library/Frameworks/Contacts.framework/Contacts
%@#%@#%@
-[AFDeviceStateConnection fetchSiriKitAppIdentifiersWithNotificationPreviewRestrictionsWithCompletion:]
v16@?0@"NSArray"8
v24@?0@"<AFFlowService>"8@?<v@?>16
-[AFDeviceStateConnection fetchSiriKitAppIdentifiersWithNotificationPreviewRestrictionsWithCompletion:]_block_invoke
-[AFDeviceStateConnection getPersonalSettingsForSharedUserID:completion:]
v24@?0@"AFPersonalUserSettings"8@"NSError"16
-[AFDeviceStateConnection getPersonalSettingsForSharedUserID:completion:]_block_invoke
type
identifier
version
controlGroup
experimentGroups
salt
type = %ld (%@)
identifier = %@
version = %@
controlGroup = %@
experimentGroups = %@
salt = %@
AFExperimentConfiguration::type
AFExperimentConfiguration::identifier
AFExperimentConfiguration::version
AFExperimentConfiguration::controlGroup
AFExperimentConfiguration::experimentGroups
AFExperimentConfiguration::salt
com.apple.assistant.security.encryption_key.did_change
com.apple.assistant.security.connection
com.apple.assistant.security.callback
error
v24@?0@"NSString"8@"NSError"16
-[AFSecurityConnection _connectionInterrupted]
-[AFSecurityConnection _connectionInvalidated]
v24@?0@"NSData"8@"NSError"16
v24@?0@"NSDictionary"8@"NSDictionary"16
three
four
_applyChanges
state
deviceAddresses
state = %ld (%@)
deviceAddresses = %@
AFBluetoothWirelessSplitterSessionInfo::state
AFBluetoothWirelessSplitterSessionInfo::deviceAddresses
: %p
; type=
; stringValue=
; contactIdentifier=
; contactInternalGUID=
_type
_stringValue
_contactIdentifier
_contactInternalGUID
Email
Phone
Unknown
INVALID
message
home
genericNotification
reminder
voicemail
groupFaceTimeInvite
ar-SA
en-GB
en-IN
fr-FR
nl-NL
%@ languageCode: %@ name: %@ gender: %@ custom: %@ footprint: %@ contentVersion: %@ masteredVersion: %@
Language
Gender
Custom
Footprint
Name
ContentVersion
MasteredVersion
_languageCode
_gender
_isCustom
_footprint
_name
_contentVersion
_masteredVersion
Male
Female
Neutral
Default
Compact
Premium
builtInMicrophone
builtInDigitizer
accelerometer
bluetoothDevice
carPlayDevice
homeButton
lockButton
digitalCrown
appleTVRemote
appleMikey
internal
remoteRequest
honeycombDevice
date
previousOptInStatus
newOptInStatus
changeSource
changeReason
buildVersion
productVersion
schemaVersion
logEventIdentifier
date = %@
previousOptInStatus = %ld (%@)
newOptInStatus = %ld (%@)
changeSource = %ld (%@)
changeReason = %@
buildVersion = %@
productVersion = %@
schemaVersion = %@
logEventIdentifier = %@
AFHomeAccessorySiriDataSharingChangeLogEvent::date
AFHomeAccessorySiriDataSharingChangeLogEvent::previousOptInStatus
AFHomeAccessorySiriDataSharingChangeLogEvent::newOptInStatus
AFHomeAccessorySiriDataSharingChangeLogEvent::changeSource
AFHomeAccessorySiriDataSharingChangeLogEvent::changeReason
AFHomeAccessorySiriDataSharingChangeLogEvent::buildVersion
AFHomeAccessorySiriDataSharingChangeLogEvent::productVersion
AFHomeAccessorySiriDataSharingChangeLogEvent::schemaVersion
AFHomeAccessorySiriDataSharingChangeLogEvent::logEventIdentifier
SearchForMessages#ReadSpokenTextComponent
RecognizedSpeech
PartialSpeechResult
View
Help
AcousticID Spinner
Cancelled
Committed
Provisional
, dialogIdentifier=%@
<private>
, dialogText="%@"
%@, speakableText="%@"
<ConversationItem %p; %@ (revision %@): type=%@, aceObject=%@, dialogPhase=%@, presentationState=%@, aceCommandIdentifier=%@%@%@, transient=%@, supplemental=%@, immersiveExperience=%@>
Version
Identifier
RevisionIdentifier
Type
AceObject
AceDialogPhase
PresentationState
AceCommandIdentifier
Transient
Supplemental
ImmersiveExperience
AssociatedDataStore
@24@?0@8^@16
-[AFMutableConversationItem initWithPropertyListRepresentation:]
com.apple.siri
com.apple.siri.announce.carplay.settings.changed
com.apple.siri.dictation.dictation-request-started
com.apple.siri.dictation.siri-request-started
com.apple.siri.dictation.message-sent
AFSiriCarPlayAnnounceEnablementType
AFTipKitDonatorQueue
BMDiscoverabilitySignalEvent
/System/Library/Frameworks/BiomeStreams.framework/BiomeStreams
BMStreams
%@.%@
v16@?0@"<AFBundleResourceMutating>"8
dt-begin
dt-confirm
dt-cancel
announce-messages-tone
home-announcement-recording-begin
home-announcement-received
announce-messages-tone-carplay
AFFlowServiceConnection
-[AFFlowServiceConnection invokeMethodOnRemoteWithBlock:onError:]_block_invoke
-[AFFlowServiceConnection _clearConnection]
-[AFFlowServiceConnection _connection]
_orthography
_language
_phonemeSuggestions
com.apple.assistant.analytics
com.apple.assistant.analytics-observation
com.apple.assistant.client
com.apple.assistant.dictation
com.apple.assistant.dictation.prerecorded
com.apple.assistant.security
com.apple.assistant.settings
com.apple.assistant.multiuser.service
com.apple.assistant.multiuser.update.service
com.apple.siri.tether
com.apple.siri.activation
com.apple.siri.activation.horseman
com.apple.siri.activation.application
com.apple.developer.siri
com.apple.siri.synapse
com.apple.assistantd.managedstorage
com.apple.assistant.notification_service
com.apple.siri.NotificationSource
com.apple.assistant.flow_service
com.apple.assistant.device-context
com.apple.assistant.audio-session-assertion
com.apple.assistant.endpoint-connectivity
com.apple.assistant.announcement_state.service
com.apple.assistant.announcement_state
com.apple.siri.daemon_launched
com.apple.assistant.request
com.apple.assistant.speech-request
RequiresUserInteraction
OriginDeviceName
ActivationEvent
PersonalRequestsActivityUserInfoHomeIdentifier
com.apple.assistant_service
com.apple.siri.execution_service
PlayAndRecord_WithBluetooth
com.apple.assistant.speech-capture.finished
com.apple.siri.application_launched
com.apple.intents-service
.reload_plugin
com.apple.MobileAsset.EmbeddedSpeech
com.apple.MobileAsset.EmbeddedSpeech.ma.new-asset-installed
com.apple.trial.NamespaceUpdate.SIRI_DICTATION_ASSETS
com.apple.trial.NamespaceUpdate.SIRI_UNDERSTANDING_ASR_ASSISTANT
MAQueryResult
mock-replay-server
http://127.0.0.1:8181
com.apple.siri.client.state.DynamiteClientState.siri_data_changed
com.apple.assistant.last-uufr-timestamp
com.apple.assistant.active_account_changed
com.apple.assistant.remora.active_languages_changed
localizedDisplay
localizedDisplayWithRegion
localizedDisplay = %@
localizedDisplayWithRegion = %@
AFOutputVoiceDescriptor::localizedDisplay
AFOutputVoiceDescriptor::localizedDisplayWithRegion
v24@?0@"AFAssertionContext"8@"NSError"16
-[_AFAssertionProxy initWithImpl:coordinator:]
-[_AFAssertionProxy relinquishWithContext:options:]
-[_AFAssertionProxy relinquishWithError:options:]
-[_AFAssertionProxy dealloc]
%@ {identifier = %@, numberOfAssertions = %llu/%llu}
-[AFAssertionCoordinator initWithIdentifier:queue:delegate:]
-[AFAssertionCoordinator dealloc]
-[AFAssertionCoordinator acquireRelinquishableAssertionWithContext:relinquishmentHandler:]
-[AFAssertionCoordinator relinquishAssertionWithUUID:context:options:]
-[AFAssertionCoordinator relinquishAssertionWithUUID:error:options:]
-[AFAssertionCoordinator relinquishAsertionsPassingTest:context:]
v32@?0@"NSUUID"8@"_AFAssertionImpl"16^B24
-[AFAssertionCoordinator relinquishAsertionsPassingTest:context:]_block_invoke
-[AFAssertionCoordinator relinquishAsertionsPassingTest:error:]
-[AFAssertionCoordinator relinquishAsertionsPassingTest:error:]_block_invoke
-[AFAssertionCoordinator numberOfPendingAndActiveAssertions]
-[AFAssertionCoordinator numberOfActiveAssertions]
v24@?0@"NSUUID"8^B16
-[AFAssertionCoordinator invalidate]
-[AFAssertionCoordinator _addAssertion:]
Invalid Expiration Duration
Expired effective date and expiration duration.
-[AFAssertionCoordinator _addAssertion:]_block_invoke
-[AFAssertionCoordinator _activateAssertionWithUUID:]
-[AFAssertionCoordinator _activateAssertionWithUUID:]_block_invoke
v16@?0@"AFAssertionContext"8
Expired on Schedule
-[AFAssertionCoordinator _deactivateAndRemoveAssertionWithUUID:context:error:options:]
-[AFAssertionCoordinator _invalidate]
%@ Invalidated
uuid = %@, timestamp = %llu, reason = %@, effectiveDate = %@ (%f), expirationDuration = %f, userInfo = %@
options
reason
speechRequestOptions
options = %lu [%@]
reason = %ld (%@)
speechRequestOptions = %@
AFSetAudioSessionActiveContext::options
AFSetAudioSessionActiveContext::reason
AFSetAudioSessionActiveContext::speechRequestOptions
AlarmURLs
alarmAndTimerFiring
mediaPlaybackStatePlaying
mediaPlaybackStateInterrupted
com.apple.assistant.logging
AFLogLevel
AFOutputLevel
AFCommandLoggingEnabled
log.facility.assistant
Client
ClientFlow
Daemon
Session
Speech
Fides
Location
AceConnection
Service
Plugin
Utility
Analysis
Performance
Proxy
Dispatch
Analytics
TinyCDB
MediaSupport
MockServer
MusicIndexer
Database
Sync
DeviceSync
InternalAuth
Myriad
Networking.Functional
Networking.Performance
/Library/Logs/CrashReporter/Assistant/
SpeechLogs
AFSpeechLogsDirectory
AFAnalyticsLogsDirectory
AFClearInternalLogFiles
CommandLogs
AFLogParsedCommandObject
plist
AFDispatchSyncLogged
AFDispatchSyncLogged_block_invoke
AFDispatchAsyncLogged
AFDispatchAsyncLogged_block_invoke
timestamp
effectiveDate
expirationDuration
userInfo
timestamp = %@
reason = %@
effectiveDate = %@
expirationDuration = %@
userInfo = %@
AFAssertionContext::timestamp
AFAssertionContext::reason
AFAssertionContext::effectiveDate
AFAssertionContext::expirationDuration
AFAssertionContext::userInfo
AFSiriTaskExecution.m
-[AFSiriTaskExecution initWithRequest:taskDeliverer:usageResultListener:]
Siri Task Execution
v24@?0@"AFSiriResponse"8@"NSError"16
-[AFSiriTaskExecution dealloc]
SiriRequest
SiriResponse
Task executions can only be started once
-[AFSiriTaskExecution start]_block_invoke_3
-[AFSiriTaskExecution start]_block_invoke
-[AFSiriTaskExecution _completeWithResponse:error:]
-[AFSiriTaskExecution _completeWithResponse:error:]_block_invoke
builtIn
server
default
horseman
application
allocation
properties
allocation = %@
properties = %@
AFExperimentGroup::identifier
AFExperimentGroup::allocation
AFExperimentGroup::properties
v16@?0@"<AFCoreAnalyticsDeviceContextPayloadMutating>"8
v32@?0@"AFServiceDeviceContext"8Q16^B24
instanceUUID
applicationType
applicationUUID
instanceUUID = %@
applicationType = %ld (%@)
applicationUUID = %@
AFInstanceInfo::instanceUUID
AFInstanceInfo::applicationType
AFInstanceInfo::applicationUUID
AFWatchdogTimer.m
Invalid parameter not satisfying: %@
timeoutInterval >= 0
queue
timeoutHandler
_version
_history
_itemIdentifier
_selectionType
_date
Manual
Single Result
Assisted
Identifier: %@, Selection Type: %@, Date: %@
vtSatScore
confidenceScores
vtSatScore = %@
confidenceScores = %@
AFMultiUserStateSnapshot::vtSatScore
AFMultiUserStateSnapshot::confidenceScores
AFTurnIdentifierCreateFromBytes
perceptualAudioHash
overrideState
activationSource
activationExpirationTime
perceptualAudioHash = %@
overrideState = %@
activationSource = %ld (%@)
activationExpirationTime = %@
AFMyriadContext::timestamp
AFMyriadContext::perceptualAudioHash
AFMyriadContext::overrideState
AFMyriadContext::activationSource
AFMyriadContext::activationExpirationTime
com.apple.siri.activation.connection
-[AFSiriActivationConnection prewarmWithRequestInfo:context:completion:]
-[AFSiriActivationConnection prewarmWithRequestInfo:context:completion:]_block_invoke_2
v16@?0@"<AFSiriActivationResultMutating>"8
-[AFSiriActivationConnection prewarmWithRequestInfo:context:completion:]_block_invoke
v16@?0@"AFSiriActivationResult"8
-[AFSiriActivationConnection activateWithRequestInfo:context:completion:]
-[AFSiriActivationConnection activateWithRequestInfo:context:completion:]_block_invoke_2
-[AFSiriActivationConnection deactivateForReason:options:context:completion:]
-[AFSiriActivationConnection deactivateForReason:options:context:completion:]_block_invoke_2
-[AFSiriActivationConnection handleContext:completion:]
-[AFSiriActivationConnection handleContext:completion:]_block_invoke_2
-[AFSiriActivationConnection handleIntent:inBackgroundAppWithBundleId:reply:]
-[AFSiriActivationConnection handleIntent:inBackgroundAppWithBundleId:reply:]_block_invoke_2
-[AFSiriActivationConnection handleIntent:inBackgroundAppWithBundleId:reply:]_block_invoke
v24@?0@"INIntentResponse"8@"NSError"16
-[AFSiriActivationConnection handleIntentForwardingAction:inBackgroundApplicationWithBundleIdentifier:completionHandler:]
-[AFSiriActivationConnection handleIntentForwardingAction:inBackgroundApplicationWithBundleIdentifier:completionHandler:]_block_invoke_2
-[AFSiriActivationConnection handleIntentForwardingAction:inBackgroundApplicationWithBundleIdentifier:completionHandler:]_block_invoke
v16@?0@"INIntentForwardingActionResponse"8
-[AFSiriActivationConnection _connection]
-[AFSiriActivationConnection _connectionInterrupted]
-[AFSiriActivationConnection _connectionInvalidated]
PhonemeMaps
v32@?0@"NSTextCheckingResult"8Q16^B24
com.apple.assistant.power-assertion-manager
-[AFPowerAssertionManager initWithIdentifier:]
-[AFPowerAssertionManager takePowerAssertionWithName:]
effectiveName
-[AFPowerAssertionManager takePowerAssertionWithName:]_block_invoke
-[AFPowerAssertionManager releasePowerAssertionWithName:]
-[AFPowerAssertionManager releasePowerAssertionWithName:]_block_invoke
-[AFPowerAssertionManager releaseAllPowerAssertions]
-[AFPowerAssertionManager releaseAllPowerAssertions]_block_invoke_2
v32@?0@"NSString"8@"<AFRelinquishableAssertion>"16^B24
-[AFPowerAssertionManager dealloc]
-[AFPowerAssertionManager assertionCoordinator:didActivateAssertion:isFirstAssertion:]
-[AFPowerAssertionManager assertionCoordinator:didDeactivateAssertion:isLastAssertion:]
_xpcObject
WasLanguageToggled
CurrentKeyboard
LastMessageLanguage
GlobalLastUsedKeyboard
MultilingualKeyboardLanguages
RecentConversationalMessages
DictationLanguages
KeyboardConversationLanguagePriors
KeyboardGlobalLanguagePriors
Language toggled = %d,
Current keyboard = %@,
Previous message language = %@,
Last used keyboard = %@,
Multilingual keyboard languages = %@,
Primary language = %@,
Dictation languages = %@,
Global Conversational Language Priors = %@,
Global Keyboard Language Priors = %@,
Dictation input origin = %@.
_languageToggled
_simulateLanguageDetectorAssetsAvailability
_currentKeyboard
_primaryLanguageCode
_prevMessageLanguage
_globalLastUsedKeyboard
_userContextChangeBit
_multiLingualKeyboardLanguages
_keyboardConvoRecentMessages
_dictationLanguages
_simulatingLanguageCodes
_finalDictationLanguages
_keyboardConversationLanguagePriors
_keyboardGlobalLanguagePriors
_languageCodeOverrides
_lidUserContext
_dictationLanguageMappingCache
v32@?0@"NSString"8Q16^B24
v32@?0@"NSString"8@"NSString"16^B24
AFLanguageDetectionUserContext.m
The cached dictation languages is not a instance of NSArray
The input dictation languages are not supported by language detector. This is a critical error.
-[AFLanguageDetectionUserContext getDictationLanguagesForSupportedLocales:error:]
-[AFLanguageDetectionUserContext userContextLanguageCodeForKeyboardLangauge:overrideLanguageCode:]
com.apple.assistant.sync_data_changed
com.apple.assistant.sync_did_finish
sync_flag
-[AFAudioSessionAssertionConnection initWithInstanceContext:acquisitionContext:relinquishmentHandler:]
com.apple.assistant.audio-session-assertion.client-connection
%@ {uuid = %@, instanceContext = %@, acquisitionContext = %@}
-[AFAudioSessionAssertionConnection dealloc]
%@ is deallocated without relinquishment and finalization.
-[AFAudioSessionAssertionConnection invalidate]
%@ is invalidated without relinquishment and finalization.
-[AFAudioSessionAssertionConnection relinquishWithContext:options:]
-[AFAudioSessionAssertionConnection relinquishWithError:options:]
-[AFAudioSessionAssertionConnection _acquireWithContext:]
-[AFAudioSessionAssertionConnection _relinquishWithContext:error:options:]
-[AFAudioSessionAssertionConnection _relinquishWithContext:error:options:]_block_invoke
-[AFAudioSessionAssertionConnection _finalizeWithContext:error:]
-[AFAudioSessionAssertionConnection handleXPCConnectionInterrupted]
-[AFAudioSessionAssertionConnection handleXPCConnectionInvalidated]
-[AFAudioSessionAssertionConnection _xpcConnection]
-[AFAudioSessionAssertionConnection _clearXPCConnection]
Timer
timer
kAFAssistantErrorDomain
SiriSpeechErrorDomain
SiriAceErrorDomain
SiriStructuredDictationErrorDomain
SiriLocalizedFailureTitle
SiriLocalizedFailureDescription
SiriRecognition
SiriSerializedUserActivity
SiriUnderlyingErrors
AFError.m
AFError is not designed to be instantiated.
+[AFError new]
-[AFError init]
AFErrorSetUnderlyingError
_AFErrorSetUnderlyingErrorRecursively
v32@?0@"NSError"8Q16^B24
-[_AFAudioPowerXPCSharedMemory initWithXPCObject:]
-[_AFAudioPowerXPCSharedMemory _destroyMapping]
com.apple.assistant.contextprovider
com.apple.assistant.contextprovider.%@
CollateContexts
Contexts
com.apple.siri.contextcollector
-[AFContextManager _collateContextsIntoArray:]
AFContextManager.m
[NSThread isMainThread]
-[AFContextManager addContextProvider:]
-[AFContextManager removeContextProvider:]
mediaRouteIdentifier
mediaRouteIdentifier = %@
AFEndpointInfo::identifier
AFEndpointInfo::mediaRouteIdentifier
AFUserNotificationProvider
-[AFUserNotificationProvider postNotificationRequest:responseHandler:]
v16@?0@"UNNotificationResponse"8
-[AFUserNotificationProvider postNotificationRequest:responseHandler:]_block_invoke
-[AFUserNotificationProvider withdrawNotificationRequestWithIdentifier:]_block_invoke
-[AFUserNotificationProvider _connection]_block_invoke
-[AFUserNotificationProvider receivedNotificationResponse:]
/siri/ui
AFRecordCoreDuetContext
AFDeleteCoreDuetEventsInStream
AFDeleteCoreDuetEventsInStream_block_invoke
(startDate > %@ AND startDate < %@) OR (endDate > %@ AND endDate < %@)
AFAppleAudioDeviceConnectedInLast24Hours
unknown_product_id
_AFRecordCoreDuetEventAtTimestamps_block_invoke
_DKEvent
/System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet
_CDContextualKeyPath
/System/Library/PrivateFrameworks/CoreDuetContext.framework/CoreDuetContext
_CDClientContext
_DKQuery
_DKEventStream
_AFFetchCoreDuetEventsWithStream
_DKEventQuery
_DKKnowledgeStore
_DKSystemEventStreams
_DKBluetoothMetadataKey
PreviousConversation
Library
Assistant
Unspecified
RemoteRequest
Continuity
DirectAction
CorrectedText
Keyboard
SpokenNotification
ExternalRequest
TestAutomation
AnnounceIncomingCall
Bluetooth Headset
TV Remote
Control Center Remote
Remote App
Non Apple Remote
Home Button
Motion Down Gesture
Motion Up Gesture
On-Screen Affordance
Server Command
CarPlay
Voice
Wired Microphone
Stark Voice
Pre Recorded Audio
Raise To Speak
Hearst Double Tap
Hearst Voice
Hearst Button Press
Jarvis
Triggerless
Test
Spoken Notification
Continuous Voice Trigger
Honeycomb Voice
CarPlay Spoken Notification
AFQuickStopActionNone
AFQuickStopActionDismissFiringAlarm
AFQuickStopActionDismissFiringTimer
AFQuickStopActionInterruptSiriVoiceOutput
AFQuickStopActionStopMediaPlayback
AFQuickStopActionStopHomeAnnouncementPlayback
AFQuickStopActionCancelRunningTimer
AFQuickSTopActionPromptForConfirmation
isVoiceOverTouchEnabled
isVibrationDisabled
isVoiceOverTouchEnabled = %ld (%@)
isVibrationDisabled = %ld (%@)
AFAccessibilityState::isVoiceOverTouchEnabled
AFAccessibilityState::isVibrationDisabled
_temperatureUnit
_twentyFourHourTimeDisplay
_region
_countryCode
_preferredLanguage
count
index
source
-[AFUserUtterance rangeListOfDifferingTextFromUtteranceAtIndex:comparedToBaseUtteranceAtIndex:]
-[AFUserUtterance speechTokensForUtteranceAtIndex:]
-[AFUserUtterance textOfUtteranceAtIndex:]
v32@?0@"NSNumber"8Q16^B24
-[AFUserUtterance allRecognitionStringsAndScores]
-[AFUserUtterance _updatePhraseswithSwapIndices:]
-[AFUserUtterance _updateUtteranceswithAlternativeUtteranceAtIndex:swapIndices:]
-[AFUserUtterance updateDictationResult:withAlternativeUtteranceAtIndex:]
<%@: %p; %lu phrases; %lu tokens; text: "%@">
combinedRank: %@ combinedScore: %@ interactionId: %@ onDeviceUtterancesPresent: %@ originalRank: %@ originalScore: %@ previousUtterance; %@ sessionId: %@ utteranceSource: %@
_combinedRank
_combinedScore
_interactionId
_onDeviceUtterancesPresent
_originalRank
_originalScore
_previousUtterance
_sessionId
_utteranceSource
v32@?0@"NSString"8@"NSDictionary"16^B24
{NSData=#}
v40@?0r^v8{_NSRange=QQ}16^B32
{NSDate=#}
{NSString=#}
{NSNull=#}
{NSNumber=#}
{NSDecimalNumber=#b8b4b1b1b1b1b16[0S]}
{NSURL=#@@^v^v}
{NSUUID=#}
{NSArray=#}
{NSDictionary=#}
aceId
timerID
timerURL
isFiring
title
duration
fireTimeInterval
fireDate
firedDate
dismissedDate
lastModifiedDate
timerID = %@
timerURL = %@
isFiring = %@
title = %@
duration = %@
fireTimeInterval = %@
fireDate = %@
firedDate = %@
dismissedDate = %@
lastModifiedDate = %@
AFClockTimer::timerID
AFClockTimer::timerURL
AFClockTimer::isFiring
AFClockTimer::title
AFClockTimer::state
AFClockTimer::duration
AFClockTimer::type
AFClockTimer::fireTimeInterval
AFClockTimer::fireDate
AFClockTimer::firedDate
AFClockTimer::dismissedDate
AFClockTimer::lastModifiedDate
com.apple.assistant.analytics.connection
-[AFAnalyticsConnection beginEventsGrouping]
-[AFAnalyticsConnection endEventsGrouping]
-[AFAnalyticsConnection logInstrumentationOfType:machAbsoluteTime:turnIdentifier:]_block_invoke_2
-[AFAnalyticsConnection stageUEIEventData:timestamp:]_block_invoke_2
-[AFAnalyticsConnection boostQueuedEvents:]
-[AFAnalyticsConnection boostQueuedEvents:]_block_invoke
-[AFAnalyticsConnection _handleFailureCallbackForEvents:error:numberOfRetries:completion:]
started
finished
cancelled
failed
ignored
%@ anchor: %@ validity: %@ count: %zd key: %@ targetIsLocal: %d appMetadata: %@ reasons: %@
_anchor
_validity
_count
_key
_targetIsLocal
_appMetadata
_forVerification
_reasons
jitContext
overrideModelPath
jitContext = %@
overrideModelPath = %@
AFSpeechTestRequestOptions::jitContext
AFSpeechTestRequestOptions::overrideModelPath
_recognition
_unfilteredRecognition
_rawRecognition
_audioAnalytics
_isFinal
_utteranceStart
_latMitRes
recognition
unfilteredRecognition
rawRecognition
isFinal
utteranceStart
style
beepSoundID
style = %ld (%@)
beepSoundID = %ld (%@)
AFSpeechRecordingAlertBehavior::style
AFSpeechRecordingAlertBehavior::beepSoundID
speechRecognizedCommand
speechRecognizedCommand = %@
AFSpeechInfo::speechRecognizedCommand
data
data = (%ld bytes)
AFMyriadPerceptualAudioHash::data
v32@?0@8@16^B24
tone
silent
forceSiriX
forceSiriClassic
daemon
daemon.launch
daemon.loaded
daemon.exit
daemon.failure
daemon.start-request.speech
daemon.start-request.dictation
daemon.start-request.other
daemon.start-request.keyboard
daemon.log.numeric-event
daemon.log.string-event
daemon.audio
daemon.audio.init.begin
daemon.audio.init.end
daemon.audio.configure.begin
daemon.audio.configure.end
daemon.audio.prewarm.begin
daemon.audio.prewarm.end
daemon.audio.prepare.begin
daemon.audio.prepare.end
daemon.audio.fetch-route.begin
daemon.audio.fetch-route.end
daemon.audio.start-recording.begin
daemon.audio.start-recording.end
daemon.audio.recording.begin
daemon.audio.recording.first-buffer
daemon.audio.recording.end
daemon.audio.stop-recording.begin
daemon.audio.stop-recording.end
daemon.audio.late-buffer
daemon.audio.analyzer.startpoint.detected
daemon.audio.analyzer.hard-endpoint.detected
daemon.audio.failure
daemon.audio.bt-info.fetch.begin
daemon.audio.bt-info.fetch.end
daemon.audio.fan-info
daemon.audio.first-chance-trigger-info
daemon.audio.recording.interruption.begin
daemon.audio.recording.interruption.end
daemon.audio.set-endpoint-state
daemon.audio.recording.first-buffer.start
daemon.audio.recording.first-buffer.receipt
daemon.audio.recording.last-buffer.start
daemon.audio.recording.last-buffer.receipt
daemon.audio.session.set-active.begin
daemon.audio.session.set-active.end
daemon.audio.session.set-inactive.begin
daemon.audio.session.set-inactive.end
daemon.audio.recording.missed-buffer
daemon.audio.file.started
daemon.audio.two-shot.transition.begin
daemon.audio.two-shot.transition.end
daemon.audio.recording.metrics
daemon.audio.bluetooth-info
daemon.audio.analyzer.multi-modal-endpoint.detected
daemon.audio.session.prepare.begin
daemon.audio.session.prepare.end
daemon.audio.session.release.begin
daemon.audio.session.release.end
daemon.audio.session.local-assertion.acquire
daemon.audio.session.local-assertion.activate
daemon.audio.session.local-assertion.deactivate
daemon.audio.session.local-assertion.relinquish
daemon.audio.session.remote-assertion.acquire
daemon.audio.session.remote-assertion.activate
daemon.audio.session.remote-assertion.deactivate
daemon.audio.session.remote-assertion.relinquish
daemon.audio.session.first-assertion.activate
daemon.audio.session.last-assertion.deactivate
daemon.speech
daemon.speech.capture.start.begin
daemon.speech.capture.start.end
daemon.speech.capture.update
daemon.speech.capture.cancel
daemon.speech.capture.stop
daemon.speech.failure
daemon.speech.capture.continued
daemon.speech.result-candidate.evaluation.begin
daemon.speech.result-candidate.evaluation.end
daemon.speech.result-candidate.accepted
daemon.speech.result-candidate.stashed
daemon.speech.log.begin
daemon.speech.log.end
daemon.service
daemon.service.handle.begin
daemon.service.handle.end
daemon.service.bundle.handle.begin
daemon.service.bundle.handle.end
daemon.memory
daemon.memory.pressure.notification
daemon.generic-intent
daemon.generic-intent.handle.begin
daemon.generic-intent.handle.timeout
daemon.generic-intent.deliver.begin
daemon.generic-intent.recipient.state-changed
daemon.generic-intent.recipient.crash
daemon.generic-intent.recipient.finished
daemon.generic-intent.handle.end
daemon.intent
daemon.intent.extension.prepare
daemon.intent.extension.ready
daemon.intent.extension.unexpected-exit
daemon.intent.extension.launch.timeout.
daemon.intent.extension.request.timeout
daemon.intent.resolve.begin
daemon.intent.resolve.request.sent
daemon.intent.resolve.response.received
daemon.intent.resolve.end
daemon.intent.confirm.begin
daemon.intent.confirm.request.sent
daemon.intent.confirm.response.received
daemon.intent.confirm.response-ui-visible
daemon.intent.confirm.end
daemon.intent.handle.begin
daemon.intent.handle.request.sent
daemon.intent.handle.response.received
daemon.intent.handle.response-ui-visible
daemon.intent.handle.end
daemon.intent.launch-with-intent.begin
daemon.intent.launch-with-intent.end
daemon.intent.launch-with-user-activity.begin
daemon.intent.launch-with-user-activity.end
daemon.intent.resolve-app.begin
daemon.intent.resolve-app.end
daemon.intent.extension.request.begin
daemon.intent.extension.request.end
daemon.intent.extension.prewarm.begin
daemon.intent.extension.prewarm.end
daemon.intent.process-intent.begin
daemon.intent.process-intent.end
daemon.intent.process-intent.extension.sent
daemon.intent.process-intent.extension.received
daemon.intent.get-app-info.begin
daemon.intent.get-app-info.end
daemon.intent.process-intent.resolve.begin
daemon.intent.process-intent.resolve.end
daemon.intent.process-intent.confirm.begin
daemon.intent.process-intent.confirm.end
daemon.intent.process-intent.handle.begin
daemon.intent.process-intent.handle.end
daemon.task
daemon.task.schedule
daemon.task.start
daemon.task.deliver
daemon.task.finish
daemon.domain-signal
daemon.domain-signal.launch-app
daemon.session
daemon.session.connection.opened
daemon.session.connection.snapshot.local
daemon.session.connection.snapshot.remote
daemon.session.connection.timeout
daemon.session.connection.dropped
daemon.session.connection.failed
daemon.session.validation.failed
daemon.session.authentication.failed
daemon.session.assistant.failed
daemon.session.assistant.not-ready
daemon.session.remapped-request-id
daemon.session.connection.start
daemon.session.connection.reset
daemon.session.connection.client-connection-id.created
daemon.session.connection.first-byte.received
daemon.session.local.assistant.not-ready
daemon.session.local.connection.reset
daemon.session.proxied-request-id
daemon.session.won
daemon.session.load-assistant
daemon.session.failed
daemon.session.connection.http-header.created
daemon.session.results.queued
daemon.session.assistant.loaded
daemon.session.reset-on-request-boundary
daemon.session.connection-header.ace-host.mismatch
daemon.network
daemon.network.available
daemon.network.server-address.resolved
daemon.network.failure
daemon.network.peer.error
daemon.network.ace-ping.sent
daemon.network.ace-pong.received
daemon.network.provider.open.begin
daemon.network.provider.open.end
daemon.network.provider.secondary.open.begin
daemon.network.provider.secondary.open.end
daemon.network.link.recommendation.begin
daemon.network.link.recommendation.end
daemon.network.link.recommendation.timeout
daemon.network.connection.unviable
daemon.network.connection.viable
daemon.network.connection.state-prepare
daemon.network.connection.state-ready
daemon.network.connection.data.consumed
daemon.incoming-command
daemon.incoming-command.speech-partial-result
daemon.incoming-command.speech-recognized
daemon.outgoing-command
daemon.outgoing-command.failure
daemon.local.outgoing-command.failure
daemon.service.maintenance.begin
daemon.service.maintenance.end
daemon.preferences.synchronize.failure
ui.plugin.loaded
ui.activation.prepare
ui.activation.cancel
ui.activation.handle.begin
ui.activation.handle.end
ui.present.begin
ui.present.end
ui.dismiss.begin
ui.dismiss.end
ui.button.down
ui.button.up
ui.button.tap
ui.blur
ui.flames.present
ui.flames.dismiss
ui.mode.idle
ui.mode.listening
ui.mode.thinking
ui.mode.success
ui.uufr.present
ui.command.handle.begin
ui.command.handle.end
ui.failure
ui.tap-to-edit-button.tap
ui.url-session-load.failure
ui.disambiguation.selected
ui.tts.should-speak
ui.tts.should-not-speak
ui.transcript-item.inserted
ui.transcript-item.did-appear
ui.transcript-item.did-disappear
ui.transcript.scrolled
ui.unlock-ui.presented
ui.unlock-ui.dismissed
ui.device.locked
ui.device.unlocked
ui.punchout.begin
ui.punchout.end
ui.transcript-items.reload.begin
ui.transcript-items.reload.end
ui.mode.presenting
ui.mode.idle.rendered
ui.mode.listening.rendered
ui.mode.thinking.rendered
ui.mode.presenting.rendered
ui.button.text-request-input.start
ui.button.text-request-input.done
ui.button.text-request-input.clear
ui.add-views.view.null-ace-id-detected
ui.swipe.dismiss
ui.bluetooth.bvra1.received
ui.notification-sound.playback.failure
ui.view.presented
ui.view.dismissed
ui.view.did-engage
ui.view.scrolled
ui.view.item-selected
ui.audio-route-picker.tapped
ui.received-reveal-speech-command
ui.dismiss.request
ui.view.did-appear
ui.view.did-disappear
ui.view-service
ui.view-service.launch
ui.view-service.loaded
ui.view-service.exit
ui.view-service.speech-partial-result.received
ui.view-service.speech-partial-result.presented
ui.view-service.speech-recognized.received
ui.view-service.speech-recognized.presented
ui.view-service.failure
ui.view-service.pin
ui.view-service.pin.begin
ui.view-service.pin.end
ui.view-service.drag
ui.view-service.did-appear
ui.view-service.did-disappear
coverage.aggregate-dictionary
coverage.aggregate-dictionary.scalar
coverage.aggregate-dictionary.distribution
coverage.request-statistics
coverage.request-statistics.cancellation
coverage.request-statistics.failure
voice-services.daemon
voice-services.daemon.speech-request.creation
voice-services.daemon.speech-request.vocalization.begin
voice-services.daemon.speech-request.vocalization.end
voice-services.daemon.speech-request.synthesize.begin
voice-services.daemon.speech-request.synthesize.end
voice-services.daemon.speech-request.vocalization.output-estimated-begin
client
client.start-request
client.start-speech-request
client.start-speech-pronunciation-request
client.start-acoustic-id-request
client.start-continuity-request
client.start-correction-request
client.start-direct-action-request
client.start-text-request
client.update-speech
client.stop-speech
client.cancel-speech
client.request-canceled
client.request-failed
client.request-completed
client.preheat
client.acoustic-id.begin
client.acoustic-id.end
client.tether.wait.begin
client.tether.wait.end
client.tether.attach.begin
client.tether.attach.end
client.tether.attached
client.tether.detached
client.feedback.presented
client.auto-disambiguation.requested
client.auto-disambiguation.saved
client.location.no-result
client.location.start-updating
client.location.did-update
client.screen-wake-requested
client.screen-turn-off-requested
client.coord
client.coord.audio-ready
client.coord.advertising-start-request
client.coord.advertising-did-start
client.coord.advertising-end-request
client.coord.advertising-did-end
client.coord.decision-made
client.coord.slowdown-generated
client.coord.slowdown-received
client.coord.multiple-continuation-signals
client.coord.advertising-will-end
client.coord.activity-start
client.coord.activity-end
client.coord.advertisement-push-begin
client.coord.advertisement-push-error
client.coord.advertisement-push-response-received
client.coord.advertisement-push-response-received-invalidAdvertisementId
client.coord.advertisement-push-response-received-late
client.coord.suppress-late-trigger
client.coord.accessory-message-pushed
client.coord.accessory-message-push-ack-received
client.coord.accessory-decision-received
client.coord.accessory-emergency-handled
ui.watch
ui.activation.gizmo-vt-while-already-recording
ui.delayed-response.education
ui.delayed-response.wrist-lowered
ui.delayed-response.backlight-on
ui.tts.canceled
client.dictation
client.dictation.start-request
client.dictation.update-speech
client.dictation.stop-speech
client.dictation.cancel-speech
client.dictation.request-canceled
client.dictation.request-failed
client.dictation.request-completed
client.dictation.timeout-request
client.dictation.speech-recording.started
client.dictation.speech-recording.canceled
client.dictation.speech-recording.completed
client.dictation.speech-recording.failed
client.dictation.speech-recognition.phrases-recognized
client.dictation.speech-recognition.tokens-recognized
client.dictation.speech-recognition.transcription-objects-recognized
client.dictation.speech-recognition.completed
client.dictation.speech-recognition.failed
client.dictation.app-did-enter-background
client.dictation.smart-language-selection.language-overridden
client.dictation.request-sampled
client.dictation.personalization-validation-metrics
client.dictation.request-completion-status
client.dictation.sampled-audio.send-to-server.status
client.dictation.request-sampled.save-audio
client.dictation.preheat
client.dictation.offline-dictation-status
voice-trigger
voice-trigger.start
voice-trigger.fire
voice-trigger.end
voice-trigger.early-detect
ui-plugin
ui-plugin.movies.loading-media-buttons.begin
ui-plugin.movies.loading-media-buttons.end
ui-plugin.sports.watch-list-kit-call.begin
ui-plugin.sports.watch-list-kit-call.end
qa.automation
qa.automation.begin
qa.automation.end
qa.automation.mark
cdm.nl-service.handle-command.begin
cdm.nl-service.handle-command.end
cdm.flow-service.handle-command.begin
cdm.flow-service.handle-command.end
cdm.config.asset-manager.offline-query-start
cdm.config.asset-manager.offline-query-success
cdm.config.asset-manager.offline-query-failed
cdm.config.asset-manager.online-query-start
cdm.config.asset-manager.online-query-success
cdm.config.asset-manager.online-query-failed
cdm.config.asset-manager.asset-download-start
cdm.config.asset-manager.asset-download-completed
cdm.config.asset-manager.asset-download-failed
cdm.config.asset-manager.asset-download-cancelled
cdm.config.asset-manager.asset-purged
cdm.start-speech.received
cdm.set-assistant-data.received
cdm.load-assistant.received
cdm.service.handle-command.begin
cdm.service.handle-command.end
vox.speech-synthesis.enqueued
vox.speech-synthesis.canceled
vox.speech-synthesis.failed
vox.speech-synthesis.finished
vox.speech-synthesis.interrupted
vox.speech-synthesis.started
vox.two-shot-sound.begin
vox.two-shot-sound.end
vox.session-inactive-sound.begin
vox.session-inactive-sound.end
vox.tap-to-siri-sound.begin
vox.tap-to-siri-sound.end
now-playing
now-playing.is-playing.changed
music
music.playback.ready
music.playback.secure-key
music.playback.asset-load
music.playback.summary
music.playback.start
music.playback.queue.received
music.playback.queue.daemon.received
music.playback.alternatives
xcode
xcode.test.begin
xcode.test.end
device-configuration
device-configuration.snapshot
settings
settings.set-language
settings.set-output-voice
settings.set-voice-feedback
settings.changed-tcc-info
settings.changed-type-to-siri
setup
setup.phs.bootstrapped
setup.phs.training-started
setup.phs.training-finished
setup.phs.training-canceled
setup.phs.training-phs-1
setup.phs.training-phs-2
setup.phs.training-phs-3
setup.phs.training-phs-4
setup.phs.training-phs-5
setup.phs.training-skipped
setup.phs.training-step-retry
experiment
experiment.exposure.siri-vox-sounds
experiment.exposure.siri-vox-tap-to-siri-behavior
experiment.exposure.invocation-feedback
client-flow.plugin
client-flow.plugin.started
client-flow.plugin.execution.started
client-flow.plugin.execution.finished
client-flow.plugin.execution.failed
client-flow.cf-client
client-flow.cf-client.scripter-load-started
client-flow.cf-client.scripter-load-finished
client-flow.cf-client.scripter-warmed-up
client-flow.cf-client.scripter-warmed-up-with-script-hint
client-flow.cf-client.execution.started
client-flow.cf-client.execution.finished
client-flow.cf-client.execution.failed
client-flow.cf-client.warmup.started
client-flow.cf-client.cache.evicted
client-flow.js
client-flow.js.siri-mini
client-flow.js.server-flow
client-flow.js.provider
client-flow.js.background-action.maintenance
client-flow.js.background-action.activity-collection
client-flow.js.background-action.data-migration
client-flow.js.background-action.update-scripts
client-flow.js.background-action.morphun_assets_downloaded
client-flow.js.background-action.morphun_assets_failed
client-flow.update-scripts.script.download-from-server
client-flow.update-scripts.script.download-from-cdn
client-flow.update-scripts.script.download-failed-from-cdn.invalidUrl
client-flow.update-scripts.script.download-failed-from-cdn.networkError
client-flow.update-scripts.script.download-failed-from-cdn.hmacVerificationError
client-flow.update-scripts.script.download-failed-from-cdn.decryptionError
client-flow.update-scripts.script.download-failed-from-cdn.checksumVerificationError
client-flow.client-scripter
client-flow.client-scripter.started
client-flow.client-scripter.js-context-setup.started
client-flow.client-scripter.js-context-setup.finished
client-flow.client-scripter.js-evaluation.started-for-script
client-flow.client-scripter.js-evaluation.finished-for-script
client-flow.client-scripter.js-execution.started
client-flow.client-scripter.js-execution.finished
client-flow.client-scripter.js-execution.successful
client-flow.client-scripter.js-execution.failed
client-flow.client-scripter.script.sent-from-server
client-flow.client-scripter.script.retrieved-from-server
client-flow.client-scripter.script.loaded-from-memory-cache
client-flow.client-scripter.script.loaded-from-filesystem
client-flow.client-scripter.script.used-cached-js-context
client-flow.client-scripter.script.used-deferred-cached-js-context
client-flow.client-scripter.script.retrieval-failed
client-flow.client-scripter.script.caching-failed
client-flow.client-scripter.sent-command
client-flow.client-scripter.sent-command-async
client-flow.client-scripter.received-response
client-flow.client-scripter.js-context-created-in-warmup
client-flow.client-scripter.js-context-evaluated-script-in-warmup-for-script
client-flow.client-scripter.cached-js-context-count
client-flow.client-scripter.execution.failed
client-flow.client-scripter.connection-interrupted
client-flow.client-scripter.connection-invalidated
client-flow.client-scripter.memory-usage
client-flow.client-scripter.warmup-failed
ui.card.present.begin
ui.card.present.end
ui.card.section-present.begin
ui.card.section-present.end
ui.card.engaged-with
ui.card.section-engaged-with
ui.card.async-card-requested
ui.card.async-card-received
ui.card.relationship-identified
assistant-service
assistant-service.launch
assistant-service.exit
assistant-service.message.send
assistant-service.message.delivered
assistant-service.message.begin
assistant-service.message.end
assistant-service.command-perform.begin
assistant-service.command-perform.end
assistant-service.bundle-loading.begin
assistant-service.bundle-loading.end
cloud-kit
cloud-kit.siri.change-arrived
cloud-kit.knowledge.change-arrived
cloud-kit.keychain.sync-error
cloud-kit.zone.not-found
cloud-kit.server.change-token.expired
cloud-kit.rate-limited
cloud-kit.network-failure
cloud-kit.server.record-changed
ids.device-connection.snapshot.local
analytics
analytics.store.database.post-corruption-detected
analytics.store.database.open-failed
analytics.store.database.integrity-check-failed
analytics.store.database.unrecoverable-error-detected
analytics.store.database.preparation-failed
analytics.store.reset
analytics.store.database.created
local-recognition
local-recognition.started
local-recognition.partial-result
local-recognition.eager-candidate
local-recognition.package
local-recognition.finished
local-recognition.preheat.start
local-recognition.preheat.done
daemon.context
daemon.context.get-background-context.begin
daemon.context.get-background-context.end
daemon.context.get-background-context.nav-status.begin
daemon.context.get-background-context.nav-status.end
daemon.context.get-background-context.now-playing.begin
daemon.context.get-background-context.now-playing.end
daemon.context.get-background-context.siri-kit-settings.begin
daemon.context.get-background-context.siri-kit-settings.end
daemon.context.get-background-context.device-problems.begin
daemon.context.get-background-context.device-problems.end
daemon.context.get-background-context.current-home-kit-home.begin
daemon.context.get-background-context.current-home-kit-home.end
daemon.context.get-background-context.app-subscription-status.begin
daemon.context.get-background-context.app-subscription-status.end
daemon.context.get-background-context.music-personalization-token.begin
daemon.context.get-background-context.music-personalization-token.end
daemon.context.get-background-context.phone-call-state.begin
daemon.context.get-background-context.phone-call-state.end
daemon.context.get-background-context.simple-state.begin
daemon.context.get-background-context.simple-state.end
daemon.context.get-background-context.is-navigating.begin
daemon.context.get-background-context.is-navigating.end
daemon.context.get-background-context.playback-devices.begin
daemon.context.get-background-context.playback-devices.end
daemon.context.get-cross-device-context.begin
daemon.context.get-cross-device-context.end
daemon.context.get-background-context.home-communication-announcement.begin
daemon.context.get-background.context.home-communication-announcement.end
daemon.context.cross-device-command.handled
daemon.context.cross-device-command.nearby-devices
daemon.context.context-collector.changed
daemon.context.local-context.changed
daemon.context.context-fetch.request.sent
daemon.context.context-fetch.request.received
daemon.context.context-fetch.response.sent
daemon.context.context-fetch.response.received
daemon.context.context-fetch.error
volume
volume.changed
volume.fetched
volume.updated
volume.down
volume.up
core-speech
core-speech.audio-logging-metrics
core-speech.smart-siri-volume.fetched
core-speech.smart-language-detector.metrics
core-speech.voice-trigger.reject.info
core-speech.voice-trigger.phs-reject.info
core-speech.nvi.additional.signal
core-speech.last-process-chunk
core-speech.voice-trigger.toggle.info
core-speech.voice-trigger.phs-fa-reject.info
core-speech.audio.first-buffer.info
core-speech.audio.endpoint-buffer.info
core-speech.endpointer.latency.info
core-speech.acoustic-ftm.metrics.info
daemon.peer-message
daemon.peer-message.send.begin
daemon.peer-message.send.end
daemon.peer-message.remote.execute.send.begin
daemon.peer-message.remote.execute.send.end
call-status
call-status.audio-call.on
call-status.audio-call.off
daemon.peer
daemon.peer.companion.account.changed
daemon.wha
daemon.wha.media.system.configuration.changed
raise-to-speak
raise-to-speak.settings-enabled
raise-to-speak.settings-disabled
raise-to-speak.legacy-policy-decision
raise-to-speak.second-pass-policy-decision
raise-to-speak.silence-posterior-generator-decision
raise-to-speak.near-miss.nearby-activation
raise-to-speak.data-collection.session-mark
raise-to-speak.first-pass-policy-decision
voice-shortcut
voice-shortcut.setup.started
voice-shortcut.setup.finished
voice-shortcut.setup.cancelled
bluetooth-device
bluetooth-device.double-tap
bluetooth-device.voice
bluetooth-device.double-tap.false-remote-activation-decision
bluetooth-device.double-tap.false-remote-deactivation-decision
proximity.setup
proximity.setup.phs.bootstrapped
proximity.setup.phs.training-started
proximity.setup.phs.training-finished
proximity.setup.phs.training-canceled
proximity.setup.phs.training-phs-1
proximity.setup.phs.training-phs-2
proximity.setup.phs.training-phs-3
proximity.setup.phs.training-phs-4
proximity.setup.phs.training-phs-5
proximity.setup.phs.training-skipped
proximity.setup.phs.training-step-retry
proximity.setup.dismissed
client-mode
client-mode.computation.evaluated-add-views
client-mode.computation.evaluated-ace-command
interactive-messages.keyboard-invocation
interactive-messages.keyboard-dismissed
interactive-messages.send-via-snippet
spoken-notifications
spoken-notifications-start
spoken-notifications.message-received
spoken-notifications.message-not-read-inopportune
spoken-notifications.message-not-read-muted
spoken-notifications.message-not-read-siri-in-use
spoken-notifications.message-opportune
spoken-notifications.message-readout-canceled-pull-out
spoken-notifications.message-readout-canceled-double-tap
spoken-notifications.message-readout-canceled-speech
spoken-notifications.message-readout-finished
spoken-notifications.message-reply-related
spoken-notifications.message-reply-silence
spoken-notifications.message-reply-unrelated
spoken-notifications-end
spoken-notification.bundleId
announce-call-start
announce-call-end
announce-call.call-received
announce-call.call-announcement-readout-start
announce-call.call-announcement-readout-finished
announce-call.bargein
announce-call-responded-manually
multi-user
multi-user.voice-profile.upload-failure
multi-user.voice-profile.limit-reached
multi-user.manatee.key-loss
multi-user.participant.sharing-failure
multi-user.voice-profile.upload-success
multi-user.voice-profile.download-failure
multi-user.voice-profile.download-success
multi-user.setup.user.added-to-home
multi-user.setup.user.voice-id-enabled
multi-user.setup.homepod.user.added-to-home
multi-user.setup.homepod.user.voice-id-enabled
multi-user.setup.homepod.user.ready
multi-user.score.confusion
multi-user.metrics.homepod.voice-id-enablement-count
multi-user.score.donation
multi-user.score.usage
multi-user.setup.homepod.missing-home-member-settings
donate-activity
donate-activity.location-search.donation-displayed-in-maps
donate-activity.location-search.donation-selected-in-maps
client-ad-blocker
client-ad-blocker.found-match
dialog-engine
dialog-engine.cat-executed
home-automation
home-automation.homekit-request.start
home-automation.homekit-request.end
home-automation.control-home.flow.start
home-automation.control-home.flow.end
home-automation.control-home.app-extension.start
home-automation.control-home.app-extension.end
home-automation.homekit-warm-up.start
home-automation.homekit-warm-up.end
post-siri-engagement
post-siri-engagement.activity-collection
unknown.%ld
interpretations
isLowConfidence
%@, interpretations=%@, isLowConfidence=%@
%@, interpretationIndices=%@, confidenceScore=%@, source=%@
_interpretationIndices
_confidenceScore
_source
interpretationIndices
confidenceScore
tokens
%@, tokens=%@
text: %@, phoneSequence: %@, score: %ld, start: %lf, silenceStart: %lf, end: %lf, remove space before: %@ after: %@, ipaPhoneSequence: %@
text
phoneSequence
confidence
startTime
silenceStartTime
endTime
removeSpaceBefore
removeSpaceAfter
ipaPhoneSequence
disabled
suspended
automatic
automaticClientOnly
successTitle
successBody
successButtonText
errorTitle
errorBody
errorButtonText
successTitle = %@
successBody = %@
successButtonText = %@
errorTitle = %@
errorBody = %@
errorButtonText = %@
AFDeleteSiriHistoryContext::successTitle
AFDeleteSiriHistoryContext::successBody
AFDeleteSiriHistoryContext::successButtonText
AFDeleteSiriHistoryContext::errorTitle
AFDeleteSiriHistoryContext::errorBody
AFDeleteSiriHistoryContext::errorButtonText
com.apple.assistant.support
kAFPreferencesDidChangeDarwinNotification
com.apple.siri.cloud.synch.changed
com.apple.siri.cloud.storage.deleted
com.apple.siri.supported.languages.changed
com.apple.siri.stereo.configuration.changed
com.apple.siri.myriad.stereo.partner.data.changed
AFPreferencesDidChangeNotification
com.apple.UIKit
Dictation Enabled
Dictation Allowed
com.apple.assistant
AFInternalPreferencesDidChangeDarwinNotification
AFLanguageCodeDidChangeDarwinNotification
AFOutputLanguageDidChangeDarwinNotification
AFAssistantEnablementDidChangeDarwinNotification
AFDictationEnablementDidChangeDarwinNotification
AFSiriDataSharingOptStatusInDidChangeDarwinNotification
AFLanguageCodeDidChangeNotification
AFOutputVoiceDidChangeNotification
AFPreferencesManualEndpointingThresholdDidChangeNotification
AFNanoPreferencesDidChangeNotification
Disable Service Command Execution
Disable TTS Playback
AFUpdateAnnouncementEligibilityDarwinNotification
com.apple.assistant.backedup
com.apple.ironwood.support
Assistant Enabled
Hands Free Mode
In Progress Output Voice
Output Voice
Session Language
SessionLanguageUIForceRTL
Additional Languages
Respects System Mute
Use device speaker for TTS
Suppress Assistant Opt In
Suppress Dictation Opt In
On Device Dictation Available Alert Presented
Suppress Siri Data Sharing Opt In
Cloud Sync User ID
Cloud Sync Enabled
Cloud Sync Enabled Modification Date
StartAlertEnabled
Internal User Classification
Config Overrides
Config Profile Overrides
Spoken Notification Temporarily Muted End Date
Spoken Notification Skip Triggerless Reply Confirmation
Spoken Notification Should Always Speak Notifications
Spoken Notification Should Skip Trggerless Replies
HI/CI Design Mode
Modification Dates
SiriKit Enabled List
PHS Asset Manifest
PHS Asset Manifest V2
com.apple.assistant.nano
PHS Enabled
RTS Enabled
RTS Info Dismissed
TTS Speaker Volume
Output Voice Tinker
Session Language Tinker
Crown Activation Enabled
Offline Dictation Status
com.apple.assistant.nano.preferences.did_change
com.apple.assistant.nano.preferences.tinker.did_change
com.apple.assistant.nano.preferences.did_change.internal
com.apple.internal.ck
SiriMiniEnabled
SiriMiniWaitTimeInMillisBeforeResponding
SiriPersonalizedASRDisabled
DictationOnDeviceSamplingDisabled
ATVStopRecordingDelay
com.apple.assistant.managedconfiguration
allowSiriServerLogging
Siri Data Sharing Opt-In Status
Siri Data Sharing Opt-In Status 2.0
Siri Data Sharing Phone Has Been Opted Out
Siri Data Sharing Watch Has Been Opted Out
Siri Data Sharing TV Has Been Opted Out
Siri Data Sharing HomePod Setup Device Is Valid
Siri Data Sharing HomePod Has Been Opted Out
Siri Data Sharing Opt-In Status Before Opting HomePod Out 2021
Siri Data Sharing Home Accessory Migrated
Siri Data Sharing Accessory Reprompt Status
Siri Data Sharing Opt-In Status History
Date
New Opt-In Status
Previous Opt-In Status
Source
Reason
Build Version
Product Version
Schema Version
Home Accessories Siri Data Sharing Opt-In Change Log
Home Accessories Siri Data Sharing Opt-In Propagation Log
en-US
com.apple.siri.textinput
SiriUITextInputEnabled
SiriUITextInputHTTEnabled
Type To Siri Enabled
%@/%@
_AFPreferencesBoolFromValueWithDefault
_AFPreferencesDoubleForKeyWithDefault
_AFBackedUpPreferencesBoolValueForKey
_AFSupportPreferencesBoolValueForKey
ADTestAccess
Always Print Siri Response Override
de-DE
de-CH
en-AU
en-CA
en-SG
es-ES
es-MX
es-US
fr-CA
fr-CH
it-IT
it-CH
ja-JP
ko-KR
zh-CN
zh-TW
zh-HK
pt-BR
da-DK
en-NZ
ru-RU
sv-SE
th-TH
tr-TR
nb-NO
de-AT
fr-BE
nl-BE
fi-FI
he-IL
ms-MY
es-CL
en-ZA
yue-CN
en-IE
143441
143442
143443
143444
143452
143454
143455
143456
143457
143460
143462
143468
143503
143449
143461
143445
143467
143450
143466
143463
143470
143469
143446
143459
zh_CN
en_MY
en_HK
en_SA
en_AE
es-419
776E7CEE-4FCE-4780-A401-691B2C16EF68
iPhone OS
Ignore Internal Config
Always Eyes Free
Ignore Server Manual Endpointing Threshold
Manual Endpointing Threshold
Streaming Dictation Enabled
Simulate Immediate Speech Capture
Buffered Speech Capture Packet Interval
AFPreferencesSetTypeToSiriEnabled
enabled
mobile
Show All Dialog Variants
Enable TFO
Disable Tuscany
Enable Server Debug Flags
Enable Non Manatee Identity
Prefer SiriMini
Experimental SiriMini
Enable Sync Directly From Watch
Enable Database Syncing
Siri Vocabulary Enabled
Opportune Speaking Pause
Opportune Speaking Timeout
Limited Audio Logging
Network Stack Override
Enable Siri Debug UI
Enable Speaker Grading Debug UI
Enable Companion Messaging
Enable BLE Companion Connections
Enable Drag And Drop Feature for iOS
Enable the New Siri appearance for iOS
Force Speex Audio Recording
Force Uncompressed Audio Recording
Acoustic ID Auto Endpoint
Vibrate with Siri Alert
Keep Recorded Audio Files
Beep Vibration Intensity
Beep InterVibration Gap
Beep Vibration Duration
Number of Vibrations per Beep
Network Logging Enabled
Country Code
Borealis Education Header Display Count
Lower Wrist Education Message Display Count
AFSiriTaskResponseTimeout
AFSiriTaskBackgroundAssertionTimeout
Client Command Delivery Delay
Forced Interstitial Style
Interstitial Display Disabled Before Speech Recognition
Include Probe Packet Capture For ABC
%@ - %@
Initial Interstitial Delay
Initial Interstitial Delay for VoiceTrigger One-Shot without Audio Ducking
Asset Fetch Timeout
Ironwood Allowed
Assistant Allowed
forceAssistantProfanityFilter
allowAssistantUserGeneratedContent
Censor Speech
Notification Preview Restricted Apps
Last Pushed Censor Speech
_AFPreferencesForceOnDeviceOnlyDictationEnabled
_AFPreferencesSetSiriDataSharingOptInStatusWithContext
Disable Dictation Mode
Audio Ducking Allowed
Opportune Speaking Module Enabled
Opportune Speaking Model Used
Opportune Speaking File Logging Enabled
Show UI During Triggerless Listening
Play Alert Before Triggerless Listening
Spoken Notification Quick Ignore Time
Opportune Speaking Edge Detector Signal Override
Announce Notifications Voice On Min Ratio
Announce Notifications Voice Off Max Ratio
Announce Calls Voice On Min Ratio
Announce Calls Voice Off Max Ratio
Announce Calls Barge In Time
Dictation Language Detector Enabled
Dictation Language Detector Enabled By Server
MultilingualDictationTimeout
Sync First Party App Intent Policy
Authentication Disabled
iRATManagerRecommendationEnabled
GLOBAL
Spoken Notifications Proximity Card Seen
BBAlwaysSpeakLockScreenNotifications
com.apple.bulletinboard
Announce Notifications Temporarily Disabled for CarPlay
Announce Notifications in CarPlay Type
Hard-coded BT Proximity
_AFPreferencesSiriXAssetsDidChange
-[AFPreferences _preferencesDidChangeExternally]
-[AFPreferences _internalPreferencesDidChangeExternally]
-[AFPreferences _languageCodeDidChangeExternally]
-[AFPreferences _outputVoiceDidChangeExternally]
-[AFPreferences _assistantEnablementDidChangeExternally]
-[AFPreferences _dictationEnablementDidChangeExternally]
com.apple.avfoundation.avvc
%@ {instanceContext = %@}
navTokenQueue
-[AFPreferences initWithInstanceContext:]
-[AFPreferences dealloc]
-[AFPreferences synchronize]
-[AFPreferences _setAssistantIsEnabledLocal:]
-[AFPreferences _setDictationIsEnabledLocal:]
-[AFPreferences setAssistantIsEnabled:]
-[AFPreferences setDictationIsEnabled:]
-[AFPreferences _setDictationIsAllowed:]
-[AFPreferences _setOnDeviceDictationAvailableAlertPresentedLocal:]
-[AFPreferences setOnDeviceDictationAvailableAlertPresented:]
v24@?0@"NSDictionary"8@"NSError"16
Force Offline Recognition Enabled
-[AFPreferences setForceOfflineRecognitionEnabled:]
Utterance Detection Enabled
-[AFPreferences setUtteranceDetectionEnabled:]
Prefer Online Recognition Enabled
-[AFPreferences setPreferOnlineRecognitionEnabled:]
Dictation SLS Languages Enabled
Indicate Hold-To-Talk Mode
Listen After Speaking Disabled
Curare Orchestration Enabled
v16@?0@"NSDate"8
-[AFPreferences getAnnounceNotificationsTemporarilyDisabledForApp:platform:completion:]_block_invoke_3
-[AFPreferences getAnnounceNotificationsTemporarilyDisabledForApp:platform:completion:]_block_invoke
-[AFPreferences setSiriDataSharingOptInStatus:completion:]
-[AFPreferences setSiriDataSharingOptInStatus:propagateToHomeAccessories:source:reason:completion:]
-[AFPreferences setSiriDataSharingHomePodSetupDeviceIsValid:completion:]
-[AFPreferences appendToSiriDataSharingOptInStatusHistory:previousOptInStatus:statusChangeSource:reason:]
-[AFPreferences appendHomeAccessorySiriDataSharingChangeLogEvent:]
-[AFPreferences insertHomeAccessorySiriDataSharingPropagationLogEvent:]
AFGradingOptInStateChangeWithHistoryEntry
Allow Myriad Coordination
Disable Myriad BLE Activity
Allow Myriad Ducking
Myriad Device Group
Server Has Provisioned Myriad
Server Provisions Myriad
Myriad Device Class
Myriad Constant Goodness
Myriad Device Adjust
Myriad Device Delay
Myriad Test Device Delay
Myriad Device Slowdown
Myriad Device Trump Delay
Myriad Last Win
Myriad VTEndtimeDistanceThreshold
Myriad Ignore Adjusted Boost
Myriad Ignore Platform Bias
Myriad Monitor Timeout Interval
Myriad Max No Op Delay
Auto Dismissal Idle Timeout
Auto Dismissal Extended Idle Timeout
Auto Dismissal Max Attention Sampling Time
-[AFPreferences _languageCodeWithFallback:]
-[AFPreferences isCurrentLocaleNativelySupported]
-[AFPreferences isLocaleIdentifierNativelySupported:]
-[AFPreferences _languagePreferencesForCurrentSystemConfiguration]
-[AFPreferences _bestSupportedLanguageCodeForLanguageCode:isGoodFit:]
-[AFPreferences allSiriLanguageCodesForSystemLanguageCode:isGoodFit:]
<Sentinel> (not a special-cased language)
-[AFPreferences _bestSupportedLanguageCodeForLanguageCodes:isGoodFit:]
hi-IN
-[AFPreferences setLanguageCode:]
-[AFPreferences setInProgressOutputVoice:]
-[AFPreferences _outputVoiceWithFallback:]
-[AFPreferences setLanguageCode:outputVoice:]
-[AFPreferences setMediaPlaybackEnabled:]
Media Playback Enabled
Navigation Status
AFPreferencesNavStatusDidChangeNotification
com.apple.siri.nav_status
v12@?0i8
This SPI is not to be used with other keys
Flush Session Tickets Cache
%@.plist
com.apple.AppSupport.loggingDefaultsChanged
dump_input
debug_level
debug_state
debug_callbacks
debug_timing
debug_logtofile
Auto Dismissal 2018 Enabled
Dismiss When Face Attention is Lost
Dismiss When Device is Lowered
Hands-On Idle Time Interval (sec)
Hands-Off Idle Time Interval (sec)
-[AFPreferences erasePreferences]
%@Library/Managed Preferences/mobile/%@
_AFPreferencesMultiUserCompanionNotificationLanguageCodesForHomePodVersion
pt-PT
hu-HU
pl-PL
el-GR
ca-ES
hr-HR
cs-CZ
id-ID
ro-RO
sk-SK
uk-UA
vi-VN
en-PH
es-CO
en-SA
en-AE
en-ID
wuu-CN
hi-Latn
zh-Hans-HK
zh-Hans-MO
en-MY
_AFPreferencesAlternativeLocaleLanguages
Announce Notifications in CarPlay
_AFPreferencesDidChangeCallback
_AFInternalPreferencesDidChangeCallback
_AFLanguageDidChangeCallback
_AFOutputVoiceDidChangeCallback
_AFNanoPreferencesDidChangeCallback
_AFAssistantEnablementDidChangeCallback
_AFDictationEnablementDidChangeCallback
Dictation SLS Enabled
Enable Offline Dictation Override
Offline Dictation Profile Override Path
Show Server on UI
Debug Button Enabled
Siri X Debug Status Enabled
Always Allow Voice Activation
Always Print Siri Response
Always Obscure Background Content When Active
Always Show Recognized Speech
_AFAddCountryCodeToLanguageIdentifier
ar-AE
zh-Hans
zh-Hans-CN
zh-Hans-TW
zh-Hant-CN
zh-Hant-HK
zh-Hant-MO
zh-MO
zh-Hant-TW
zh-Hant-US
es_IC
es_EA
/Library/Preferences
Card Logging Enabled
NPSDomainAccessor
initNPSDomainAccessor_block_invoke
AFPreferences.m
classNPSDomainAccessor
/System/Library/PrivateFrameworks/NanoPreferencesSync.framework/NanoPreferencesSync
NanoPreferencesSyncLibrary
NPSManager
initNPSManager_block_invoke
classNPSManager
ObjectCreatedResponseObjectIdentifier
eventType
eventData
turnID
event
activate
deactivate
deliver
notify
prewarm
myriad
assistantd
OpportuneSpeakingModelService
FeatureName
FeatureValue
OSMDataCollection
-[AFOpportuneSpeakingModuleDataCollection _deleteSpeakablesOlderThan:]
_phrases
_utterances
@"SASPhrase"16@?0@"AFSpeechPhrase"8
@"SASInterpretation"16@?0@"AFSpeechInterpretation"8
@"SASToken"16@?0@"AFSpeechToken"8
@"SASUtterance"16@?0@"AFSpeechUtterance"8
phrases
utterances
%@ {audioSessionID = %u}
_audioSessionID
<%@ %p: item=%@; %lu children=(
none)>
Cannot generate an index path relative to node %@, which isn't an ancestor
AFTreeNode.m
relativeIndexPath
B16@?0@"AFTreeNode"8
v24@?0@"AFTreeNode"8^B16
child != self
Attempt to create cycle
Cannot remove a child if we're not its parent
Cannot remove a child that we don't contain
v32@?0@8Q16^B24
AFSiriTaskContextProvider.m
-[AFSiriTaskContextProvider getAppContextWithDeliveryHandler:completionHandler:]
!response || [response isKindOfClass:[AFContextResponse class]]
-[AFSiriTaskContextProvider getAppContextWithDeliveryHandler:completionHandler:]_block_invoke
requestID
deviceRoles
requestID = %@
deviceRoles = %lu [%@]
AFDeviceRequestHandlingRecord::requestID
AFDeviceRequestHandlingRecord::deviceRoles
com.apple.assistant.conversation.ErrorDomain
isSupportedAndEnabled
homeKitRoomName
homeKitMediaSystemIdentifier
mediaRemoteGroupIdentifier
mediaRemoteRouteIdentifier
isSupportedAndEnabled = %@
homeKitRoomName = %@
homeKitMediaSystemIdentifier = %@
mediaRemoteGroupIdentifier = %@
mediaRemoteRouteIdentifier = %@
AFAudioSessionCoordinationSystemInfo::isSupportedAndEnabled
AFAudioSessionCoordinationSystemInfo::homeKitRoomName
AFAudioSessionCoordinationSystemInfo::homeKitMediaSystemIdentifier
AFAudioSessionCoordinationSystemInfo::mediaRemoteGroupIdentifier
AFAudioSessionCoordinationSystemInfo::mediaRemoteRouteIdentifier
AFHeadphonesAnnouncementRequestCapabilityProvider
com.apple.bluetooth.GuestConnected
-[AFHeadphonesAnnouncementRequestCapabilityProvider updateWirelessSplitterSessionInfoAndObserve]_block_invoke_3
v24@?0@"AFBluetoothWirelessSplitterSessionInfo"8@"NSError"16
-[AFHeadphonesAnnouncementRequestCapabilityProvider notifyObserversOfAvailableAnnouncementRequestTypes]_block_invoke
v16@?0Q8
-[AFHeadphonesAnnouncementRequestCapabilityProvider fetchEligibleAnnouncementRequestTypesAndNotifyObservers:]
-[AFHeadphonesAnnouncementRequestCapabilityProvider _fetchEligibleAnnouncementRequestTypesAndNotifyObservers]
-[AFHeadphonesAnnouncementRequestCapabilityProvider _fetchEligibleAnnouncementRequestTypesAndNotifyObservers]_block_invoke
-[AFHeadphonesAnnouncementRequestCapabilityProvider notifyObserversOfEligibleAnnouncementRequestTypes:]
v24@?0@"NSArray"8@"NSError"16
-[AFHeadphonesAnnouncementRequestCapabilityProvider notifyObserver:didChangeStateFrom:to:]_block_invoke
-[AFHeadphonesAnnouncementRequestCapabilityProvider notifyObserver:didReceiveNotificationWithToken:]
-[AFHeadphonesAnnouncementRequestCapabilityProvider _settingsConnectionDidDisconnect]_block_invoke
-[AFHeadphonesAnnouncementRequestCapabilityProvider fetchEligibleAnnouncementRequestTypesWithCompletion:]
-[AFHeadphonesAnnouncementRequestCapabilityProvider fetchEligibleAnnouncementRequestTypesWithCompletion:]_block_invoke
-[AFHeadphonesAnnouncementRequestCapabilityProvider fetchAvailableAnnouncementRequestTypesWithCompletion:]
-[AFHeadphonesAnnouncementRequestCapabilityProvider fetchAvailableAnnouncementRequestTypesWithCompletion:]_block_invoke_3
BluetoothPairedStatusChangedNotification
initBluetoothPairedStatusChangedNotification_block_invoke
AFHeadphonesAnnouncementRequestCapabilityProvider.m
/System/Library/PrivateFrameworks/BluetoothManager.framework/BluetoothManager
BluetoothManagerLibrary
BluetoothFirstDeviceUnlockCompleted
initBluetoothFirstDeviceUnlockCompleted_block_invoke
INSearchForMessagesIntentIdentifier
initINSearchForMessagesIntentIdentifier_block_invoke
INReadAnnouncementIntentIdentifier
initINReadAnnouncementIntentIdentifier_block_invoke
INSearchForNotebookItemsIntentIdentifier
initINSearchForNotebookItemsIntentIdentifier_block_invoke
INPlayVoicemailIntentIdentifier
initINPlayVoicemailIntentIdentifier_block_invoke
INJoinCallIntentIdentifier
initINJoinCallIntentIdentifier_block_invoke
INSendMessageIntentIdentifier
initINSendMessageIntentIdentifier_block_invoke
com.apple.assistant.myriad.delay_monitor
-[AFMyriadMonitor _enqueueBlock:forReason:]
-[AFMyriadMonitor _enqueueBlock:forReason:]_block_invoke
-[AFMyriadMonitor startMonitoringWithTimeoutInterval:instanceContext:]_block_invoke
-[AFMyriadMonitor ignoreMyriadEvents:]_block_invoke
-[AFMyriadMonitor dequeueBlocksWaitingForMyriadDecision]_block_invoke
Pending
Lost
-[AFMyriadMonitor _registerForMyriadEvents]
-[AFMyriadMonitor _fetchCurrentMyriadDecisionWithWaitTime:]
-[AFMyriadMonitor _fetchCurrentMyriadDecisionWithWaitTime:]_block_invoke
com.apple.siri.myriad.get.decision
-[AFMyriadMonitor _deregisterFromMyriadEventNotifications]
-[AFMyriadMonitor _deregisterFromRepostedDecisionResultsObservers]
-[AFMyriadMonitor notifyObserver:didReceiveNotificationWithToken:]
-[AFMyriadMonitor notifyObserver:didChangeStateFrom:to:]
-[AFMyriadMonitor _setDecisionIsPending]
-[AFMyriadMonitor _setDecisionIsPending]_block_invoke
-[AFMyriadMonitor _dequeueBlocksWithSignal:]
-[AFMyriadMonitor _clear]
-[AFMyriadMonitor _resultSeenWithValue:]
alarmsAdded
alarmsUpdated
alarmsRemoved
alarmFired
firingAlarmDismissed
firingAlarmChanged
stateReset
alarmsChanged
Object %@ is not a kind of %@
Unable to create UUID for string "%@"
dictationStart
dictationFinish
dictationCancel
announceMessagesStart
homeAnnouncementRecordingStart
homeAnnouncementReceived
announceMessagesCarPlayStart
v16@?0@"AFTreeNode"8
B16@?0@"AFMutableConversationItem"8
v32@?0@"AFTreeNode"8q16^B24
-[AFConversation _processInsertions:inDialogPhase:]
v32@?0@"AFConversationInsertion"8Q16^B24
@16@?0@"AFConversationInsertion"8
-[AFConversation _processInsertions:inDialogPhase:]_block_invoke_3
-[AFConversation _processInsertions:inDialogPhase:]_block_invoke
v32@?0@"SAAceView"8Q16^B24
v32@?0@"AceObject"8Q16^B24
-[AFConversation addAdditionalSpeechInterpretation:refId:]
AFConversation.m
Cannot return an index path to an item that is not contained in the conversation
v24@?0@"AFMutableConversationItem"8^B16
LanguageCode
SynchronizedWithServer
RootNode
@16@?0@8
-[AFConversation initWithPropertyListRepresentation:]
v20@?0r^v8I16
/dev/random
generation
contextData
contextFetchDelay
generation = %@
contextData = (%ld bytes)
contextFetchDelay = %@
AFMyriadAdvertisementContext::generation
AFMyriadAdvertisementContext::contextData
AFMyriadAdvertisementContext::contextFetchDelay
isAwake
isPresentingHilite
isHiliting
isPresentingScreenSaver
isScreenSaving
isAsleeping
isAsleep
isAwaking
none
beep
haptic
siri_vox_sounds_experiment
playsTwoShotSound
playsSessionInactiveSound
-[AFHeartBeat initWithIdentifier:queue:effectiveDate:expirationDuration:heartBeatInterval:heartBeatHandler:invalidationHandler:]
-[AFHeartBeat dealloc]
%@ {identifier = %@, effectiveDate = %@ (%f seconds), expirationDuration = %f, numberOfHeartBeats = %llu}
-[AFHeartBeat invalidate]
-[AFHeartBeat _fire]
-[AFHeartBeat _invalidate]
accessibilityState
deviceRingerSwitchState
isDeviceInCarDNDMode
isDeviceInStarkMode
isDeviceWatchAuthenticated
areAnnouncementRequestsPermittedByPresentationWhileActive
outputVolume
tapToSiriAudioPlaybackRequest
twoShotAudioPlaybackRequest
deviceSetupFlowBeginDate
deviceSetupFlowEndDate
accessibilityState = %@
deviceRingerSwitchState = %ld (%@)
isDeviceInCarDNDMode = %@
isDeviceInStarkMode = %@
isDeviceWatchAuthenticated = %@
areAnnouncementRequestsPermittedByPresentationWhileActive = %@
outputVolume = %@
tapToSiriAudioPlaybackRequest = %@
twoShotAudioPlaybackRequest = %@
deviceSetupFlowBeginDate = %@
deviceSetupFlowEndDate = %@
AFClientConfiguration::accessibilityState
AFClientConfiguration::deviceRingerSwitchState
AFClientConfiguration::isDeviceInCarDNDMode
AFClientConfiguration::isDeviceInStarkMode
AFClientConfiguration::isDeviceWatchAuthenticated
AFClientConfiguration::areAnnouncementRequestsPermittedByPresentationWhileActive
AFClientConfiguration::outputVolume
AFClientConfiguration::tapToSiriAudioPlaybackRequest
AFClientConfiguration::twoShotAudioPlaybackRequest
AFClientConfiguration::deviceSetupFlowBeginDate
AFClientConfiguration::deviceSetupFlowEndDate
timersAdded
timersUpdated
timersRemoved
timerFired
firingTimerChanged
firingTimerDismissed
timersChanged
unknown
near
immediate
primary
/usr/lib/libAXSpeechManager.dylib
+[AFSpeakableUtteranceParser parseUserGeneratedMessage:]_block_invoke
AXSpeechTransformText
+[AFSpeakableUtteranceParser parseUserGeneratedMessage:]
ERROR parsing remainder: %@
-[AFSpeakableUtteranceParser _handleControlCodeAtIndex:withBuffer:totalLength:consumedLength:hadEmpties:containsPrivacySensitiveContents:externalProviders:]
AFSpeakableUtteranceParser.m
consumed && "Need to provide a consumer."
%@ {name = %@}
AFNotifyObserver.m
name != nil
firstName
middleName
lastName
fullName
nickName
internalGUID
relationName
@{fn#firstName}
@{fn#middleName}
@{fn#lastName}
@{fn#fullName}
@{fn#nickName}
@{fn#internalGUID}
@{fn#relationName}
jjmma
hhmma
HHmm
eeee
com.apple.weather
Celsius
-[AFSUPFunctionProvider _tempInWeatherUnits:]
-[AFSUPFunctionProvider _lowercaseString:]
-[AFSUPFunctionProvider _meCard]_block_invoke
v24@?0@"SAPerson"8@"NSError"16
-[AFSUPFunctionProvider _meCard]
a meCard
(null)
-[AFSUPFunctionProvider _siriUsageDescription:]
-[AFSUPFunctionProvider _speechRecognitionUsageDescription:]
-[AFSUPFunctionProvider _contextRoomName:]
-[AFSUPFunctionProvider _contextDeviceName:]
v16@?0@"AFPeerInfo"8
-[AFSUPFunctionProvider _peerInfoForContextIdentifier:]
currentTime
currentTimeIn
currentDateShort
currentDateShortIn
currentDateLong
currentDateLongIn
currentDayOfWeek
currentDayOfWeekIn
tempInWeatherUnits
deviceModel
lowercase
siriUsageDescription
speechRecognitionUsageDescription
contextRoomName
contextDeviceName
-[AFSUPFunctionProvider _callFunction:withArguments:]
Dictation
-[AFDictationConnection initWithInstanceContext:]
-[AFDictationConnection dealloc]
-[AFDictationConnection _checkAndSetIsCapturingSpeech:]
Trying to start speech capture while we are already capturing. This is a client app logic error, cancelling dictation
v16@?0@"<AFDictationDelegate>"8
-[AFDictationConnection _tellSpeechDelegateRecordingDidBeginWithOptions:]
-[AFDictationConnection _tellSpeechDelegateDidRecognizePackage:]
-[AFDictationConnection _tellSpeechDelegateDidRecognizeSpeechPhrases:utterances:languageModel:correctionIdentifier:audioAnalytics:]
-[AFDictationConnection _delegateDidRecognizeSpeechTokens:languageModel:delegate:]
-[AFDictationConnection _tellSpeechDelegateDidRecognizePartialResult:]_block_invoke
tokensCount
languageModel
@"NSDictionary"8@?0
-[AFDictationConnection _tellSpeechDelegateDidRecognizeSpeechTokens:languageModel:]
-[AFDictationConnection _tellSpeechDelegateDidRecognizeTranscriptionObjects:languageModel:]
-[AFDictationConnection _tellSpeechDelegateRecognitionDidFail:]
-[AFDictationConnection _tellSpeechDelegateSpeechRecognitionDidSucceed]
-[AFDictationConnection _tellSpeechDelegateSearchResultsReceived:recognitionText:stable:final:]
-[AFDictationConnection _tellSpeechDelegateLanguageDetected:confidenceScores:isConfident:]
-[AFDictationConnection _tellSpeechDelegateMultilingualSpeechRecognized:]
-[AFDictationConnection _tellSpeechDelegateLanguageDetectorDidFail:]
-[AFDictationConnection _tellSpeechDelegateDidBeginLocalRecognitionWithModelInfo:]
-[AFDictationConnection _connectionClearedForInterruption:]
Please file radar
Sorry internal user, assistantd crashed during dictation
AFDictationConnection.connection
-[AFDictationConnection _startInputAudioPowerUpdatesWithXPCWrapper:]
-[AFDictationConnection _stopInputAudioPowerUpdates]
-[AFDictationConnection dictationIsAvailableForLanguage:synchronous:]
-[AFDictationConnection forcedOfflineDictationIsAvailableForLanguage:synchronous:]
-[AFDictationConnection forcedOfflineDictationIsAvailableForLanguage:synchronous:]_block_invoke
+[AFDictationConnection getForcedOfflineDictationSupportedLanguagesWithCompletion:]_block_invoke
-[AFDictationConnection _willStartDictationWithLanguageCode:options:speechOptions:machAbsoluteTime:]
languageCode
isOnDeviceDictationExpected
canceled
failure
noMatch
interrupted
requestStatus
dictationUIInteractionIdentifier
-[AFDictationConnection _willCancelDictation]
-[AFDictationConnection _willFailDictationWithError:]
-[AFDictationConnection _willCompleteDictation]
-[AFDictationConnection _sendPendingAnalyticsEvents]
+[AFDictationConnection dictationIsSupportedForLanguageCode:error:]
NOT 
-[AFDictationConnection preheatWithRecordDeviceIdentifier:]
-[AFDictationConnection _setActivationTimeOnOptionsIfNecessary:]
-[AFDictationConnection startRecordingForPendingDictationWithLanguageCode:options:speechOptions:]
-[AFDictationConnection startRecordingForPendingDictationWithLanguageCode:options:speechOptions:]_block_invoke_2
-[AFDictationConnection startRecordingForPendingDictationWithLanguageCode:options:speechOptions:]_block_invoke
v16@?0d8
v16@?0@"NSXPCListenerEndpoint"8
-[AFDictationConnection startDictationWithLanguageCode:options:speechOptions:]
-[AFDictationConnection startDictationWithLanguageCode:options:speechOptions:]_block_invoke_2
-[AFDictationConnection startRecordedAudioDictationWithOptions:forLanguage:narrowband:forceSampling:]
-[AFDictationConnection startRecordedAudioDictationWithOptions:forLanguage:narrowband:forceSampling:]_block_invoke_2
-[AFDictationConnection cancelSpeech]
-[AFDictationConnection stopSpeechWithOptions:]
-[AFDictationConnection stopSpeechWithOptions:]_block_invoke
-[AFDictationConnection _delayedStopSpeechWithOptions:]
-[AFDictationConnection updateSpeechOptions:]
-[AFDictationConnection sendUserSelectedAlternativeDictationLanguageCode:]
-[AFDictationConnection endSession]
-[AFDictationConnection _sendDataIfNeeded]
-[AFDictationConnection _updateBufferFlushTimerWithDelay:]
-[AFDictationConnection(Private) preheatTestWithLanguage:options:]
speechRecognitionSource
local
sessionID
sessionRequestUUID
dictationOptInStatus
phrasesCount
correctionContext
transcribedObjectsCount
SanitizeAFSpeechRequestOptions
Results
com.apple.siri.analytics.hal.nearbydevice
com.apple.assistant.coreanalytics.client
v32@?0@"NSString"8@"AFCoreAnalyticsDeviceContextPayload"16^B24
-[AFCoreAnalyticsLoggingService logToCoreAnalyticsCrossDeviceRequestEvent:]_block_invoke_2
-[AFSiriActivationHandlerAssistantDaemon handleContext:completion:]
-[AFSiriActivationHandlerAssistantDaemon handleContext:completion:]_block_invoke
inactive
active
address
deviceUID
vendorID
productID
isAdvancedAppleAudioDevice
supportsInEarDetection
supportsVoiceTrigger
supportsSpokenNotification
supportsListeningModeANC
supportsListeningModeTransparency
supportsAnnounceCall
address = %@
deviceUID = %@
vendorID = %@
productID = %@
isAdvancedAppleAudioDevice = %@
supportsInEarDetection = %@
supportsVoiceTrigger = %@
supportsSpokenNotification = %@
supportsListeningModeANC = %@
supportsListeningModeTransparency = %@
supportsAnnounceCall = %@
AFBluetoothDeviceInfo::address
AFBluetoothDeviceInfo::deviceUID
AFBluetoothDeviceInfo::vendorID
AFBluetoothDeviceInfo::productID
AFBluetoothDeviceInfo::isAdvancedAppleAudioDevice
AFBluetoothDeviceInfo::supportsInEarDetection
AFBluetoothDeviceInfo::supportsVoiceTrigger
AFBluetoothDeviceInfo::supportsSpokenNotification
AFBluetoothDeviceInfo::supportsListeningModeANC
AFBluetoothDeviceInfo::supportsListeningModeTransparency
AFBluetoothDeviceInfo::supportsAnnounceCall
setAudioSessionActiveOptions
setAudioSessionActiveReason
suppressesAudioSessionActivation
isLegacyAudioDuckingCoordination
com.apple.assistant.audio-session-assertion.connection-workloop
OriginatingAceIDKeyIdentifier
AFSiriTaskUsageResult.m
_resultDescription must be overridden in subclasses.
: %p;
 originatingAceID=
X-Dev-ConfigOverride-
assistant.service.carCommands.nativeExecutor.enabled
assistant.service.location-search.continuity.enabled
assistant.service.announce.enabled
feature.Server.Azule.Milestone.AzuleServer.InCallActionOnNonHomePod.enabled
true
%@%@
com.apple.assistant.features
+[AFFeatureFlags dump]
Siri
sirix
dictation_voice_trigger
trial_dictation_asset_delivery
hints
audio_session_coordination
Home
SiriEndpoints
myriad_non_speaker_raw_score_threshold
lasso
BluetoothFeatures
AnnounceTelephony
SiriPhone
announce_groupfacetime_invite
listening_on_both_stereo_pair_units
home_automation_background_request
siri_request_dispatcher
SiriNotifications
announce
cross_device_tv_control
SiriUI
spoken_stark
cross_device_voice_followup
tv_push_to_talk
cda_face_detection
myriad_self_metrics
siri_data_sharing_reprompt
None
+IDS
+Rapport
+Bluetooth
+Wifi
+Cloud
-[AFClockAlarmSnapshot(Utility) firingAlarms]_block_invoke
v32@?0@"NSUUID"8@"AFClockAlarm"16^B24
AFClockIsFiringAlarmValid
TimerId
State
Value
com.apple.assistant.announce.carplay
-[AFCarPlayAnnouncementRequestCapabilityProvider _notifyObserversOfUpdatedAvailableAnnouncementRequestTypes:]
CARSessionStatus
Class getCARSessionStatusClass(void)_block_invoke
AFCarPlayAnnouncementRequestCapabilityProvider.m
Unable to find class %s
void *CarKitLibrary(void)
/System/Library/PrivateFrameworks/CarKit.framework/CarKit
/System/Library/PrivateFrameworks/CarKit.framework/Contents/MacOS/CarKit
NSString *getINSearchForMessagesIntentIdentifier(void)
void *IntentsLibrary(void)
/System/Library/Frameworks/Intents.framework/Contents/MacOS/Intents
NSString *getINSendMessageIntentIdentifier(void)
startingAlertBehavior
stoppedAlertBehavior
stoppedWithErrorAlertBehavior
startingAlertBehavior = %@
stoppedAlertBehavior = %@
stoppedWithErrorAlertBehavior = %@
AFSpeechRecordingAlertPolicy::startingAlertBehavior
AFSpeechRecordingAlertPolicy::stoppedAlertBehavior
AFSpeechRecordingAlertPolicy::stoppedWithErrorAlertBehavior
configurationIdentifier
configurationVersion
deploymentGroupIdentifier
deploymentGroupProperties
deploymentReason
configurationIdentifier = %@
configurationVersion = %@
deploymentGroupIdentifier = %@
deploymentGroupProperties = %@
deploymentReason = %ld (%@)
AFExperiment::configurationIdentifier
AFExperiment::configurationVersion
AFExperiment::deploymentGroupIdentifier
AFExperiment::deploymentGroupProperties
AFExperiment::deploymentReason
uuid: %@, timestamp: %llu, turnId: %@, options: %lu, notifyState: %@ text: %@ directAction: %@ handoffOriginDeviceName: %@ handOffData: %@ handoffURL: %@ handoffRequiresUserInteraction ? %d handoffNotification %@ correctedSpeech: %@ startRequest: %@ activationEvent: %@ speechRequestOptions: %@ testRequestOptions: %@ requestCompletionOptions: %@ sharedUserID: %@ confidenceScore: %lu nonspeakerConfidenceScores: %@
_uuid
_timestamp
_turnIdentifier
_options
_notifyState
_text
_legacyDirectActionIdentifier
_handoffOriginDeviceName
_handoffRequestData
_handoffURLString
_handoffRequiresUserInteraction
_handoffNotification
_correctedSpeech
_correctedSpeechContext
_startRequest
_startLocalRequest
_directActionAppId
_directActionEvent
_activationEvent
_speechRequestOptions
_testRequestOptions
_requestCompletionOptions
_expectedSpeakerSharedUserID
_expectedSpeakerConfidenceScore
_nonspeakerConfidenceScores
AFInstanceContext.m
%s is a subclass responsibility.
+[AFInstanceContext effectiveMachServiceName:]
-[AFInstanceContext createXPCConnectionWithMachServiceName:options:]
-[AFInstanceContext createXPCListenerWithMachServiceName:]
-[AFInstanceContext createXPCConnectionForMachService:targetQueue:flags:]
-[AFInstanceContext createXPCListenerForMachService:targetQueue:flags:]
-[AFInstanceContext info]
-[AFInstanceContext isDefault]
-[AFInstanceContext isCurrent]
-[AFInstanceContext(SubsystemSupport) preferencesSubdomain]
-[AFInstanceContext(SubsystemSupport) mediaRouteIdentifier]
-[AFInstanceContext(SubsystemSupport) audioDeviceIdentifier]
-[AFInstanceContext(SubsystemSupport) supportsAudioPowerUpdate]
-[AFInstanceContext(SubsystemSupport) supportsProxyGroupPlayer]
-[AFInstanceContext(SubsystemSupport) supportsTelephony]
%@ (default)
_alarmIdentifiers
uniqueIdentifier
loggingUniqueIdentifier
model
roomName
assistantIdentifier
isSpeaker
hasActiveThirdPartyMusicSubscription
manufacturer
categoryType
schemaCategoryType
uniqueIdentifier = %@
loggingUniqueIdentifier = %@
name = %@
model = %@
roomName = %@
assistantIdentifier = %@
isSpeaker = %@
hasActiveThirdPartyMusicSubscription = %@
manufacturer = %@
categoryType = %@
schemaCategoryType = %@
AFHomeAccessoryInfo::uniqueIdentifier
AFHomeAccessoryInfo::loggingUniqueIdentifier
AFHomeAccessoryInfo::name
AFHomeAccessoryInfo::model
AFHomeAccessoryInfo::roomName
AFHomeAccessoryInfo::assistantIdentifier
AFHomeAccessoryInfo::isSpeaker
AFHomeAccessoryInfo::hasActiveThirdPartyMusicSubscription
AFHomeAccessoryInfo::manufacturer
AFHomeAccessoryInfo::categoryType
AFHomeAccessoryInfo::schemaCategoryType
-[AFClockItemStorage beginGrouping]
-[AFClockItemStorage endGroupingWithOptions:]
-[AFClockItemStorage insertOrUpdateItems:]
-[AFClockItemStorage deleteItemsWithIDs:]
-[AFClockItemStorage deleteAllItems]
@"NSNumber"16@?0@8
, alarm=%@
, timer=%@
, media=%@
, heardVT
, homeAnnounce=%@
, myriadAdvLen=%lu
, location=%@
, call=%@
, sys=%@
, flowUpdate=YES
en_US
HH:mm:ss.SSS
, clientState=%llu(prev %lu %@)
com.apple.siri.client_lite
-[AFClientLiteInternal initAndHandleCommand:afterCurrentRequest:isOneWay:commandHandler:completion:]
-[AFClientLiteInternal dealloc]
-[AFClientLiteInternal _handleCommand:afterCurrentRequest:isOneWay:completion:]
-[AFClientLiteInternal _handleCommand:afterCurrentRequest:isOneWay:completion:]_block_invoke_2
-[AFClientLiteInternal _handleCommand:afterCurrentRequest:isOneWay:completion:]_block_invoke
v20@?0B8@"NSError"12
-[AFClientLiteInternal handleCommand:completion:]_block_invoke
-[AFClientLite init]
-[AFClientLite dealloc]
-[AFClientLite _handleCommand:afterCurrentRequest:isOneWay:commandHandler:completion:]
-[AFClientLite handleCommand:afterCurrentRequest:commandHandler:completion:]
-[AFClientLite handleOneWayCommand:commandHandler:completion:]
client#interstitialInitial
client#interstitialFollowUpOne
client#interstitialFollowUpTwo
client#interstitialFinal
AFMediaRemoteDeviceInfoRouteIdentifierDidChangeNotification
AFMediaRemoteDeviceInfoGroupIdentifierDidChangeNotification
com.apple.assistant.MediaRemoteDeviceInfo
-[AFMediaRemoteDeviceInfo init]
AFMediaRemoteDeviceInfo.m
_instanceContext != nil
-[AFMediaRemoteDeviceInfo _activeDeviceInfoChanged:]
-[AFMediaRemoteDeviceInfo _activeDeviceInfoChanged:]_block_invoke_2
-[AFMediaRemoteDeviceInfo _activeDeviceInfoChanged:]_block_invoke
v24@?0^v8^{__CFError=}16
-[AFMediaRemoteDeviceInfo _updateWithRouteIdentifier:groupIdentifier:]
-[AFMediaRemoteDeviceInfo _getMRDeviceInfoWithCompletion:]_block_invoke
v24@?0@"MRDeviceInfo"8@"NSError"16
-[AFMediaRemoteDeviceInfo _getMRDeviceInfoWithCompletion:]
-[AFMediaRemoteDeviceInfo getRouteIdentifierWithCompletion:]_block_invoke_2
v16@?0@"MRDeviceInfo"8
-[AFMediaRemoteDeviceInfo getGroupIdentifierWithCompletion:]_block_invoke_2
Message
Frontmost
VoicePitchRangeDescriptors
Voices
gender
isCustom
pitchRange
order
AFLocalization
Localizable
_FEMALE
_MALE
strings
^%@-*\w*\.strings$
LONG_
SiriLanguages
COMPACT_
VOICE_
VOICE_GENDER_UNSPECIFIED
VOICE_GENDER_MALE
VOICE_GENDER_FEMALE
VOICE_GENDER_NEUTRAL
#1190E4
-[AFLocalization outputVoiceDescriptorForOutputLanguageCode:voiceName:]
v32@?0@"AFVoiceInfo"8Q16^B24
VOICE
VOICE_AND_NUMBER
%1$@ %2$lu
REGION_AND_VOICE
%1$@ (%2$@)
AssistantVoiceDialects
-[AFLocalization loadInfoForVoicesWithLanguageCode:]
-[AFLocalization _voicesFromVoiceMapWithLanguage:]
AssistantVoiceMap
v32@?0@"NSDictionary"8Q16^B24
v32@?0@"NSString"8@"NSArray"16^B24
-[AFLocalization outputVoiceComparator]_block_invoke
q24@?0@"AFVoiceInfo"8@"AFVoiceInfo"16
-[AFLocalization voiceSimilarToVoice:inSiriSessionLanguage:]
+[AFVoiceInfo(AFLocalizationAdditions) allVoicesForSiriSessionLanguage:]
+[AFVoiceInfo(AFLocalizationAdditions) voiceInfoForSessionLanguageCode:]
+[AFVoiceInfo(AFLocalizationAdditions) outputVoiceIdentifierForLanguageCode:voiceName:]
VoiceMail
FaceTime
SearchOrMessaging
WebSearch
VoiceControl
_applicationName
_applicationDisplayName
_applicationVersion
_context
_fieldLabel
_fieldIdentifier
_interactionIdentifier
_requestIdentifier
_keyboardType
_prefixText
_postfixText
_selectedText
_returnKeyType
_languageCodeOverride
_offlineLanguage
_transcriptionMode
_microphoneIdentifier
_inlineItemList
_voiceSearchTypeOptions
_voiceSearchHeaderFields
_voiceSearchQueryParameters
_voiceTriggerEventInfo
_keyboardIdentifier
_forceOfflineRecognition
_preferOnlineRecognition
_detectUtterances
_continuousListening
_shouldHandleCapitalization
_preferOnDeviceRecognition
_secureOfflineOnly
_farField
_releaseAudioSessionOnRecordingCompletion
_incremental
_maximumRecognitionDuration
_taskHint
_originalAudioFileURL
_recognitionOverrides
_modelOverrideURL
_languageDetectionUserContext
_dictationInputOrigin
_samplingInfo
-[AFDataStore imageDataForKey:]
Entries
v32@?0@"NSString"8@"_AFDataStoreEntry"16^B24
-[AFDataStore initWithPropertyListRepresentation:]
Image
Scale
PNGData
-[_AFDataStoreEntry initWithPropertyListRepresentation:error:]
Unable to decode value for data store entry %@
isEnabled
primaryEarbudSide
primaryInEarStatus
secondaryInEarStatus
isEnabled = %@
primaryEarbudSide = %ld (%@)
primaryInEarStatus = %ld (%@)
secondaryInEarStatus = %ld (%@)
AFBluetoothHeadphoneInEarDetectionState::isEnabled
AFBluetoothHeadphoneInEarDetectionState::primaryEarbudSide
AFBluetoothHeadphoneInEarDetectionState::primaryInEarStatus
AFBluetoothHeadphoneInEarDetectionState::secondaryInEarStatus
enablementFlow
newUser
userStatusFetchError
dateStartedResolvingUserStatus
dateEndedResolvingUserStatus
experimentFetchError
dateStartedResolvingExperiment
dateEndedResolvingExperiment
outputVoiceCountForRecognitionLanguage
recognitionLanguageWithMultipleOutputVoicesExists
enablementFlow = %ld (%@)
newUser = %@
userStatusFetchError = %@
dateStartedResolvingUserStatus = %@
dateEndedResolvingUserStatus = %@
experiment = %@
experimentFetchError = %@
dateStartedResolvingExperiment = %@
dateEndedResolvingExperiment = %@
outputVoiceCountForRecognitionLanguage = %@
recognitionLanguageWithMultipleOutputVoicesExists = %@
AFEnablementConfigurationProviderParameters::enablementFlow
AFEnablementConfigurationProviderParameters::newUser
AFEnablementConfigurationProviderParameters::userStatusFetchError
AFEnablementConfigurationProviderParameters::dateStartedResolvingUserStatus
AFEnablementConfigurationProviderParameters::dateEndedResolvingUserStatus
AFEnablementConfigurationProviderParameters::experiment
AFEnablementConfigurationProviderParameters::experimentFetchError
AFEnablementConfigurationProviderParameters::dateStartedResolvingExperiment
AFEnablementConfigurationProviderParameters::dateEndedResolvingExperiment
AFEnablementConfigurationProviderParameters::outputVoiceCountForRecognitionLanguage
AFEnablementConfigurationProviderParameters::recognitionLanguageWithMultipleOutputVoicesExists
AFConversationStore
-[AFConversationStore saveConversation:withIdentifier:completionBlock:]_block_invoke
Unable to decode conversation from property list
metadata
historicalData
historicalMetadata
deviceInfo
privacyClass
contexts
metadata_type
metadata_timestamp
metadata_expirationDate
metadata_redactedKeyPaths
metadata_historyConfiguration
serializedBackingStore
fromLocalDevice
contextCollectorSource
%@(%@)(id=%@, deviceInfo=%@, local=%d%@
%@ (%@, %@, expires %@)
alternativeSelectionCount
characterModificationCount
characterInsertionCount
characterSubstitutionCount
characterDeletionCount
correctedText
AFMemoryInfoGetCurrent
extractMyriadDataFromAudioContext
-[AFMyriadRecord initWithAudioData:]
-[AFMyriadRecord initWithDeviceID:data:]
-[AFMyriadRecord setRawAudioGoodnessScore:withBump:]
-[AFMyriadRecord adjustByMultiplier:adding:]
-[AFMyriadRecord isSane]
FALSE
TRUE
MyriadRecord: hash=%#04x,good=%d,conf=%d,dc=%d,pt=%d,tb=%d,isMe=%@,g=%d,cc=%d
_generateRandomHash
q24@?0@"NSDateInterval"8@"NSDateInterval"16
intentRequestId
inactiveOnly
stream_uid
delivery_stream
context_data
context_data_type
date_created
assistant_id
record_id
_event
_streamUID
_dateCreated
_speechId
_recordId
productType
coreAnalyticsContextPayload
-[AFDeviceContext(Utilities) af_serviceDeviceContextForKeys:excludeContextExpiredBefore:proximity:]_block_invoke
@"NSDictionary"16@?0@"NSString"8
-[AFDeviceContext(Utilities) af_validFlowContext]
com.apple.assistant.memory-pressure-observer
-[AFMemoryPressureObserver _startObservingMemoryPressureWithOptions:]
-[AFMemoryPressureObserver _stopObservingMemoryPressure]
-[AFMemoryPressureObserver _handleMemoryPressureWithFlags:]
memoryPressureChange
normal
warning
critical
_showUIDuringListening
_playAlertBeforeListening
showUIBeforeListening: %@, playAlertBeforeListening: %@
AFApplicationWorkspaceEnumerateInstalledApplications
AFApplicationWorkspaceEnumerateInstalledApplications_block_invoke
Internal
System
hidden
v24@?0@"LSBundleProxy"8^B16
LSApplicationProxy
initLSApplicationProxy_block_invoke
AFApplicationWorkspaceUtils.m
classLSApplicationProxy
/System/Library/Frameworks/CoreServices.framework/CoreServices
CoreServicesLibrary
LSApplicationWorkspace
initLSApplicationWorkspace_block_invoke
classLSApplicationWorkspace
AFNetworkAvailability
AFDeviceContextPrivacyClassUnknown
AFDeviceContextPrivacyClassUsedByLocalUser
AFDeviceContextPrivacyClassSharedWithHome
left
right
alarm
callState
heardVoiceTrigger
homeAnnouncement
location
multiUserState
myriadAdvertisementContext
siriClientState
systemState
requestHandling
serverContextUpdateCommand
AFFetchContextsKeyPlaybackStates
kAFAccountInfoIdentifierKey
kAFAccountInfoLabelKey
kAFAccountInfoAssistantIdentifierKey
kAFAccountInfoLoggingAssistantIdentifierKey
kAFAccountInfoSpeechIdentifierKey
kAFAccountInfoHostnameKey
kAFAccountInfoPeerAssistantIdentifierKey
kAFAccountInfoPeerLoggingAssistantIdentifierKey
kAFAccountInfoPeerSpeechIdentifierKey
kAFAccountInfoPeerUserAgentStringKey
kAFAccountInfoPeerLanguageCodeKey
kAFAccountInfoPeerSiriEnabledKey
kAFAccountInfoPeerHostnameKey
kAFAccountInfoPredefinedServerKey
kAFAccountInfoAceHostKey
kAFAccountInfoConnectionPolicyKey
kAFAccountInfoConnectionPolicyDateKey
kAFAccountInfoConnectionPolicyHostnameKey
kAFAccountInfoGroupKey
kAFAccountInfoIsActiveKey
kAFAccountInfoLocaleIdentifierKey
kAFAccountInfoNeedsDestructionKey
kAFAccountConnectionPolicyFirstFailureDate
: %@ { Assistant: %@, Host: %@, Ace Host: %@, Group: %@ }
_identifier
_label
_assistantIdentifier
_loggingAssistantIdentifier
_speechIdentifier
_hostname
_peerAssistantIdentifier
_peerLoggingAssistantIdentifier
_peerSpeechIdentifier
_peerUserAgentString
_predefinedServer
_aceHost
_connectionPolicy
_connectionPolicyDate
_connectionPolicyHostname
_connectionPolicyFirstFailureDate
_group
_lastSyncDates
_localeIdentifier
_isActive
keepUISessionAlive
keepAudioSessionAlive
manual
assisted
singleResult
selection
%lu.%@
q24@?0@"SAUIListItem"8@"SAUIListItem"16
DisambiguationInfoKey
q24@?0@8@16
_af_SaveItemSelection
-[AFManagedStorageConnection domainObjectForKey:]_block_invoke
-[AFManagedStorageConnection dataForKey:inKnowledgeStoreWithName:]
-[AFManagedStorageConnection dataForKey:inKnowledgeStoreWithName:]_block_invoke
v16@?0@"NSData"8
-[AFManagedStorageConnection setData:forKey:inKnowledgeStoreWithName:]
-[AFManagedStorageConnection setData:forKey:inKnowledgeStoreWithName:]_block_invoke
-[AFManagedStorageConnection resetKnowledgeStoreWithName:]
-[AFManagedStorageConnection resetKnowledgeStoreWithName:]_block_invoke
AlarmIdentifier
-[AFCoreAnalyticsCrossDeviceEvent addNearbyDeviceContexts:proximityInfo:]_block_invoke
v32@?0@"AFDeviceContext"8Q16^B24
nearbyDevicesLoggingID = %@
nearbyDevicesPayloads = %@
inputDeviceID
inputAssistantID
inputDeviceID = %@
inputAssistantID = %@
AFRequestHandlingContext::requestID
AFRequestHandlingContext::inputDeviceID
AFRequestHandlingContext::inputAssistantID
TimerURLs
%02x
AFMyriadAdvertisementContextRecord: contextVersion=%ld vtEndTime=%f advRecordType=%ld advPayload=0x%@ deviceID=%@
-[AFMyriadAdvertisementContextRecord myriadAdvertisementContextAsData]
-[AFMyriadAdvertisementContextRecord isSaneForVoiceTriggerEndTime:endtimeDistanceThreshold:]
-[AFMyriadAdvertisementContextRecord _initializeMyriadAdvertisementContextRecordFromData:]
init with no parameters is not supported
AFSiriIncomingCall is not supported on this platform.
AFPersistentConnection
-[AFRemoteRequestWatcher _setupRequestListener]
v24@?0@"AFRequestInfo"8@?<v@?@"NSError">16
-[AFRemoteRequestWatcher _setupSpeechRequestListener]
-[AFRemoteRequestWatcher _setupSpeechRequestListener]_block_invoke
v16@?0@8
AFPineBoardSystemStateObserver.defaultObserver
-[AFPineBoardSystemStateObserver _startObservingPineBoardSystemState]
faceUp
faceDown
portrait
portraitUpsideDown
landscapeLeft
landscapeRight
AFSafetyBlock.m
block != nil
_Block_has_signature((__bridge void *)block)
Copied block %@ is expected to have a signature.
Number of default values (%lu) is expected to be equal or less than the number of block arguments (%lu).
Number of values for invocation (%lu) is expected to be equal or less than the number of block arguments (%lu).
Positive
Negative
_lastNegativeFeedback
_negativeFeedbackByContact
-[AFOpportuneSpeakingModelFeedbackManager init]
-[AFOpportuneSpeakingModelFeedbackManager lastNegativeFeedbackForContact:]
-[AFOpportuneSpeakingModelFeedbackManager setLastNegativeFeedbackForContact:]
-[AFOpportuneSpeakingModelFeedbackManager fetchNotificationUsageForSpeakableId:withStartDate:withEndDate:withHandler:]
startDate
EventType
StartDate
EndDate
TimeZone
Confidence
IndirectClear
-[AFOpportuneSpeakingModelFeedbackManager loadIfNecessary]
-[AFOpportuneSpeakingModelFeedbackManager save]
init_DKKnowledgeStore_block_invoke
AFOpportuneSpeakingModelFeedback.m
class_DKKnowledgeStore
CoreDuetLibrary
init_DKSystemEventStreams_block_invoke
class_DKSystemEventStreams
init_DKQuery_block_invoke
class_DKQuery
init_DKEventQuery_block_invoke
class_DKEventQuery
_DKNotificationUsageMetadataKey
init_DKNotificationUsageMetadataKey_block_invoke
class_DKNotificationUsageMetadataKey
com.apple.siri.opportune_speaking.feedback.plist
sessionId
currentElectionAdvertisementId
currentElectionAdvertisementData
electionAdvertisementDataByIds
sessionId = %@
currentElectionAdvertisementId = %@
currentElectionAdvertisementData = (%ld bytes)
electionAdvertisementDataByIds = %@
AFMyriadSession::generation
AFMyriadSession::sessionId
AFMyriadSession::currentElectionAdvertisementId
AFMyriadSession::currentElectionAdvertisementData
AFMyriadSession::electionAdvertisementDataByIds
ShowSiri
ShowSnippet
ShowCardSnippet
ShowUtterance
ScrollTranscript
EditTranscript
ShowPasscodeUnlock
ParseUsefulUserResult
SmartAppSelection
ButtonDownTimestamp
ActivationTimestamp
DidPresentHostedUITimestamp
DidPresentViewServiceUITimestamp
UsefulUserFacingResult
Duration
_originalCommandId
_category
_eventInfo
_duration
-[AFMetrics categoryString]
%@ - originalCommandId: %@, category: %@, duration: %@, eventInfo: %@
AFSiriUserNotificationRequestCapabilityForceUpdate
-[AFSiriUserNotificationRequest performRequestWithCompletion:]
-[AFSiriUserNotificationRequest deactivateRequestForReason:completion:]
-[AFSiriUserNotificationRequest withdrawalRequestWithCompletion:]
AFSiriUserNotificationRequestCapabilityManager
+[AFSiriUserNotificationRequestCapabilityManager _classForPlatform:]
+[AFSiriUserNotificationRequestCapabilityManager supportedByApplicationWithBundleID:]
-[AFSiriUserNotificationRequestCapabilityManager hasEligibleSetup]
-[AFSiriUserNotificationRequestCapabilityManager hasEligibleSetup]_block_invoke
-[AFSiriUserNotificationRequestCapabilityManager requestCanBeHandled]
-[AFSiriUserNotificationRequestCapabilityManager notifyObserversOfCurrentRequestCanBeHandledState:onPlatform:]
SettingsVoices
-[AFSettingsConnection initWithInstanceContext:]
-[AFSettingsConnection dealloc]
-[AFSettingsConnection _connection]_block_invoke_2
-[AFSettingsConnection fetchAccountsSynchronously:completion:]_block_invoke
-[AFSettingsConnection fetchActiveAccount:]_block_invoke
AFSettingsConnection.m
Need an account to save
-[AFSettingsConnection saveAccount:setActive:]_block_invoke
Need an identifier to delete
-[AFSettingsConnection deleteAccountWithIdentifier:]_block_invoke
Need an identifier to set active
-[AFSettingsConnection setActiveAccountIdentifier:]_block_invoke
-[AFSettingsConnection setAssistantEnabled:]_block_invoke
-[AFSettingsConnection setDictationEnabled:]_block_invoke
-[AFSettingsConnection setAssistantLoggingEnabled:]_block_invoke
-[AFSettingsConnection killDaemon]_block_invoke
-[AFSettingsConnection shutdownSessionIfIdle]_block_invoke
-[AFSettingsConnection barrier]_block_invoke
-[AFSettingsConnection disableAndDeleteCloudSyncWithCompletion:]_block_invoke
-[AFSettingsConnection getDevicesWithAvailablePHSAssetsForLanguage:completion:]_block_invoke
-[AFSettingsConnection getDevicesWithAvailablePHSAssetsOnDeviceCheck:]_block_invoke
-[AFSettingsConnection setConfigOverrides:completion:]_block_invoke
-[AFSettingsConnection configOverrides:]_block_invoke
-[AFSettingsConnection forceMultiUserSync:download:completion:]_block_invoke
-[AFSettingsConnection clearSpokenNotificationTemporarilyDisabledStatus]_block_invoke
-[AFSettingsConnection getSpokenNotificationIsAlwaysOpportuneWithCompletion:]_block_invoke
-[AFSettingsConnection setSpokenNotificationIsAlwaysOpportune:]_block_invoke
-[AFSettingsConnection getSpokenNotificationShouldAnnounceAllNotificationsWithCompletion:]_block_invoke
-[AFSettingsConnection setSpokenNotificationShouldAnnounceAllNotifications:]_block_invoke
-[AFSettingsConnection getSpokenNotificationShouldSkipTriggerlessRepliesWithCompletion:]_block_invoke
-[AFSettingsConnection setSpokenNotificationShouldSkipTriggerlessReplies:]_block_invoke
-[AFSettingsConnection setSpokenNotificationProxCardSeen:]_block_invoke
-[AFSettingsConnection getAnnounceNotificationsTemporarilyDisabledEndDateForPlatform:completion:]_block_invoke
-[AFSettingsConnection setAnnounceNotificationsTemporarilyDisabledUntil:platform:]_block_invoke
-[AFSettingsConnection getAnnounceNotificationsTemporarilyDisabledEndDateForApp:platform:completion:]_block_invoke
-[AFSettingsConnection setAnnounceNotificationsTemporarilyDisabledUntil:forApp:platform:]_block_invoke
-[AFSettingsConnection setAnnounceNotificationsInCarPlayTemporarilyDisabled:]_block_invoke
-[AFSettingsConnection getAnnounceNotificationsInCarPlayTemporarilyDisabledWithCompletion:]_block_invoke
-[AFSettingsConnection clearAnnounceNotificationsInCarPlayTemporarilyDisabled]_block_invoke
-[AFSettingsConnection getAnnounceNotificationsInCarPlayTypeWithCompletion:]_block_invoke
-[AFSettingsConnection setAnnounceNotificationsInCarPlayType:]_block_invoke
-[AFSettingsConnection clearAnnounceNotificationsInCarPlayType]_block_invoke
-[AFSettingsConnection setOpportuneSpeakingEdgeDetectorSignalOverride:]_block_invoke
-[AFSettingsConnection clearOpportuneSpeakingEdgeDetectorSignalOverride]_block_invoke
-[AFSettingsConnection fetchMultiUserVoiceIdentificationSetting:]_block_invoke
-[AFSettingsConnection homeOnboardingFlowInvoked:completion:]_block_invoke
-[AFSettingsConnection currectNWActivityId:]_block_invoke
v16@?0@"NSUUID"8
v16@?0@"AFAudioSessionCoordinationSnapshot"8
-[AFSettingsConnection setOutputVoice:withCompletion:]
-[AFSettingsConnection setLanguage:withCompletion:]
-[AFSettingsConnection setLanguage:outputVoice:withCompletion:]
-[AFSettingsConnection getCurrentAccessoryInfoWithCompletion:]_block_invoke
v16@?0@"AFHomeAccessoryInfo"8
-[AFSettingsConnection setRecognizeMyVoiceEnabled:]_block_invoke
-[AFSettingsConnection startUIRequestWithText:]_block_invoke
-[AFSettingsConnection startUIRequestWithInfo:]_block_invoke
-[AFSettingsConnection startUIRequestWithSpeechAudioFileURL:]_block_invoke
-[AFSettingsConnection startUIMockServerRequestWithReplayFileURL:completion:]_block_invoke
-[AFSettingsConnection startUIRequestWithText:completion:]_block_invoke
-[AFSettingsConnection startUIRequestWithInfo:completion:]_block_invoke
-[AFSettingsConnection startMultiUserUIRequestWithText:expectedSpeakerSharedUserID:expectedSpeakerConfidenceScore:nonspeakerConfidenceScores:completion:]_block_invoke
-[AFSettingsConnection dismissUI]_block_invoke
-[AFSettingsConnection stopAudioPlaybackRequest:immediately:]_block_invoke
-[AFSettingsConnection stopAllAudioPlaybackRequests:]_block_invoke
-[AFSettingsConnection postTestResultCandidateWithRcId:recognitionSausage:]_block_invoke
-[AFSettingsConnection postTestResultSelectedWithRcId:]_block_invoke
-[AFSettingsConnection getMeCard:]
-[AFSettingsConnection getMeCard:]_block_invoke
-[AFSettingsConnection setNanoAssistantEnabled:withCompletion:]
-[AFSettingsConnection setNanoDictationEnabled:withCompletion:]
-[AFSettingsConnection setNanoPhraseSpotterEnabled:withCompletion:]
-[AFSettingsConnection setNanoRaiseToSpeakEnabled:withCompletion:]
-[AFSettingsConnection setNanoUseDeviceSpeakerForTTS:withCompletion:]
-[AFSettingsConnection setNanoTTSSpeakerVolume:withCompletion:]
-[AFSettingsConnection setNanoOutputVoice:withCompletion:]
-[AFSettingsConnection setNanoLanguage:withCompletion:]
-[AFSettingsConnection setNanoCrownActivationEnabled:withCompletion:]
-[AFSettingsConnection setNanoSiriDataSharingOptInStatus:withCompletion:]
v16@?0@"AFBluetoothDeviceInfo"8
v16@?0@"AFBluetoothWirelessSplitterSessionInfo"8
-[AFSettingsConnection startObservingWirelessSplitterSession]_block_invoke
-[AFSettingsConnection stopObservingWirelessSplitterSession]_block_invoke
-[AFSettingsConnection showMultiUsers:]_block_invoke
-[AFSettingsConnection showPrimaryUserSharedUserIDWithCompletion:]_block_invoke
-[AFSettingsConnection showMultiUserSharedUserIDsCompletion:]_block_invoke
v24@?0@"NSError"8q16
-[AFSettingsConnection setSiriDataSharingOptInStatus:completion:]
-[AFSettingsConnection setSiriDataSharingOptInStatus:completion:]_block_invoke
-[AFSettingsConnection getSiriDataSharingOptInStatusWithCompletion:]
-[AFSettingsConnection getSiriDataSharingOptInStatusWithCompletion:]_block_invoke
-[AFSettingsConnection setSiriDataSharingOptInStatus:propagateToHomeAccessories:source:reason:completion:]
-[AFSettingsConnection setSiriDataSharingOptInStatus:propagateToHomeAccessories:source:reason:completion:]_block_invoke
-[AFSettingsConnection setSiriDataSharingOptInAlertPresented:completion:]
-[AFSettingsConnection setSiriDataSharingOptInAlertPresented:completion:]_block_invoke
-[AFSettingsConnection setSiriDataSharingHomePodSetupDeviceIsValid:completion:]
-[AFSettingsConnection setSiriDataSharingHomePodSetupDeviceIsValid:completion:]_block_invoke
-[AFSettingsConnection setOnDeviceDictationAvailableAlertPresented:]
-[AFSettingsConnection setOnDeviceDictationAvailableAlertPresented:]_block_invoke
-[AFSettingsConnection shouldSuppressSiriDataSharingOptInAlert:]_block_invoke
-[AFSettingsConnection deleteSiriHistoryWithContext:withCompletion:]
-[AFSettingsConnection deleteSiriHistoryWithContext:withCompletion:]_block_invoke
-[AFSettingsConnection deleteSiriHistoryWithCompletion:]
-[AFSettingsConnection setSiriDesignModeEnabled:completion:]_block_invoke
-[AFSettingsConnection siriDesignModeIsEnabled:]_block_invoke
-[AFSettingsConnection getCrossDeviceContextWithCompletion:]_block_invoke
-[AFSettingsConnection getCurrentContextSnapshotWithCompletion:]_block_invoke
-[AFSettingsConnection getOriginDeviceInfoForContextIdentifier:completion:]_block_invoke
-[AFSettingsConnection getContextCollectorsInfoWithCompletion:]_block_invoke
-[AFSettingsConnection setHardcodedBluetoothProximity:]_block_invoke
-[AFSettingsConnection getManagedLocalAndRemotePeerInfoWithCompletion:]_block_invoke
-[AFSettingsConnection getCapabilitiesDataFromReachableDevicesWithCompletion:]_block_invoke
-[AFSettingsConnection getProximityTuplesWithCompletion:]_block_invoke
-[AFSettingsConnection getExperimentForConfigurationIdentifier:completion:]_block_invoke
-[AFSettingsConnection synchronizeExperimentConfigurationsIfApplicableWithCompletion:]_block_invoke
-[AFSettingsConnection resetExperimentForConfigurationIdentifier:completion:]_block_invoke
-[AFSettingsConnection accessRecordedAudioWithIdentifier:completion:]_block_invoke
-[AFSettingsConnection trimRecordedAudioWithIdentifier:offset:duration:outputFileType:completion:]_block_invoke
-[AFSettingsConnection getRecordedAudioDirectoryPathsWithCompletion:]_block_invoke
-[AFSettingsConnection hasEverSetLanguageCodeWithCompletion:]_block_invoke
-[AFSettingsConnection areSiriUODAssetsAvailable:]_block_invoke
-[AFSettingsConnection getAssetStatusForLanguage:completionHandler:]_block_invoke
-[AFSettingsConnection getCurrentRequestIsWatchAuthenticatedWithCompletion:]_block_invoke
-[AFSettingsConnection pushMyriadAdvertisementContext:completionHandler:]_block_invoke
-[AFSettingsConnection getSpeakerCapabilityForAccessoryWithUUID:completionHandler:]_block_invoke
-[AFSettingsConnection triggerABCForType:subType:context:completionHandler:]_block_invoke
-[AFSettingsConnection getAssistantIsEnabledForDeviceWithSiriInfo:withCompletion:]_block_invoke
-[AFSettingsConnection getActiveASRLanguagesWithCompletion:]_block_invoke
-[AFSettingsConnection(Internal) _setSyncNeededForReason:]_block_invoke
-[AFSettingsConnection(Internal) _clearSyncNeededForKey:]_block_invoke
-[AFSettingsConnection(Internal) _fetchPeerData:]_block_invoke
-[AFSettingsConnection(Internal) _runServiceMaintenance]_block_invoke
-[AFSettingsConnection(Internal) _handleCommand:completion:]
-[AFSettingsConnection(Internal) _handleCommand:completion:]_block_invoke
-[AFSettingsConnection(Internal) _setSyncToken:forAceHost:completion:]_block_invoke
-[AFSettingsConnection(Internal) _readSyncTokenForAceHost:completion:]_block_invoke
peerInfo
systemInfo
peerInfo = %@
systemInfo = %@
AFAudioSessionCoordinationDeviceInfo::peerInfo
AFAudioSessionCoordinationDeviceInfo::systemInfo
AFCreateDirectoryWithPath
yyyyMMdd
currentSamplingDate
+[AFSamplingUtilities createSamplingDirectory]
+[AFSamplingUtilities deleteItemAtFilePath:]
+[AFSamplingUtilities deleteAllSamplingData]
overrideOption
overrideOption = %ld (%@)
AFMyriadGoodnessScoreOverrideState::overrideOption
AFMyriadGoodnessScoreOverrideState::reason
com.apple.siri.activation.frontend-process-handler
com.apple.siri.client-state-changed
-[AFSiriActivationHandlerFrontendProcess handleContext:completion:]
-[AFSiriActivationHandlerFrontendProcess handleContext:completion:]_block_invoke
-[AFSiriActivationHandlerFrontendProcess notifyObserver:didChangeStateFrom:to:]
v32@?0@"NSNumber"8@"AFSafetyBlock"16^B24
-[AFSiriActivationHandlerFrontendProcess _waitUntilListeningForContext:timeoutInterval:completion:]
-[AFSiriActivationHandlerFrontendProcess _waitUntilListeningForContext:timeoutInterval:completion:]_block_invoke
UnlocalizedName
CountryName
UnlocalizedCountryName
Latitude
Longitude
ALCityID
AFShouldUseLanguageDetector
AFOverrideLanguageCode
accessoryMetrics
VoiceTrigger
InTaskVoiceTrigger
Emergency
DirectTrigger
OutgoingTrigger
00000000-0000-0000-0000-000000000000
00000000-0000-0000-0000-%012u
session_id
trigger
adv-delay
adv-interval
device_count
goodness
goodness_scores
previous_decision
%llu
previous_decision_time
decision
%hhu
winner_goodness
winner_device_class
winner_product_type
homepod_involved
winner_sent_suppresssion
late_for_device_arbitration
device_arbitration_delay
-[AFMyriadMetrics submitAccessoryMyriadMetricsToAnalyticsStream:payload:instrumentation:completion:]
stopped
paused
running
airPodDoubleTapWhenActive
airPodOutOfEarWhenActive
adBlockerTriggered
carPlayBannerTrump
carPlayBannerDismissal
carPlayBannerOutsideTap
carPlayBannerHomeButton
carPlayBannerBackButton
carPlayBannerTouchPadSwipe
carPlayBannerTrackPadMovement
carPlayBannerNotificationWithdrawn
voiceInterruptionDuringAnnouncement
incomingCallEndedDuringAnnouncement
incomingCallAnnouncementTrump
remoteDeactivation
unsupportedVoicePromptStyleDuringAnnouncement
carPlayBorrowedAudioDuringAnnouncement
_settingType
_valueBeforeUpdate
_valueAfterUpdate
-[AFSiriAnnounceIncomingCallRequest performRequestWithCompletion:]
SiriRequestIdentifier
SiriRequestOriginatingAceIDIdentifier
SiriRequestOriginatingTurnIdentifier
AFSiriRequest.m
turnId: "
OriginatingAceID: 
v32@?0@"NSString"8@16^B24
Request
-[AFSiriActivationHandlerCoreSpeechDaemon handleContext:completion:]
-[AFSiriActivationHandlerCoreSpeechDaemon handleContext:completion:]_block_invoke
score
-[AFSiriActivationHandlerCoreSpeechDaemon handleContext:completion:]_block_invoke_2
CSActivationEventNotifier
initCSActivationEventNotifier_block_invoke
AFSiriActivationHandlerCoreSpeechDaemon.m
classCSActivationEventNotifier
/System/Library/PrivateFrameworks/CoreSpeech.framework/CoreSpeech
CoreSpeechLibrary
CSActivationEvent
initCSActivationEvent_block_invoke
classCSActivationEvent
_score
_threshold
threshold
Siri Global
 - %@
AFKeychainValueForAccountAndKey
AFKeychainRemoveValueForAccountAndKey
AFKeychainSetValueForAccountAndKey
sending
ringing
latitude
longitude
altitude
direction
speed
verticalAccuracy
horizontalAccuracy
preciseLocationEnabled
accessState
latitude = %@
longitude = %@
altitude = %@
direction = %@
speed = %@
verticalAccuracy = %@
horizontalAccuracy = %@
preciseLocationEnabled = %@
accessState = %ld (%@)
AFLocationSnapshot::latitude
AFLocationSnapshot::longitude
AFLocationSnapshot::altitude
AFLocationSnapshot::direction
AFLocationSnapshot::speed
AFLocationSnapshot::verticalAccuracy
AFLocationSnapshot::horizontalAccuracy
AFLocationSnapshot::preciseLocationEnabled
AFLocationSnapshot::accessState
route
isRemoteDevice
route = %@
isRemoteDevice = %@
AFAudioDeviceInfo::route
AFAudioDeviceInfo::isRemoteDevice
AFAudioDeviceInfo::deviceUID
isForCarDND
isVoiceTriggerRequest
isConnectedToCarPlay
isRequestMadeWithPhysicalDeviceInteraction
userTypedInSiri
modeOverrideValue
deviceRaised
faceDetected
touchScreenDetected
buttonPressDetected
flatDevicePosture
deviceOrientation
isInWorkout
isBacklightOn
isInWaterLock
isInSleepLock
isInTheaterMode
isOnWrist
isForCarDND = %@
isVoiceTriggerRequest = %@
isConnectedToCarPlay = %@
isRequestMadeWithPhysicalDeviceInteraction = %@
userTypedInSiri = %@
modeOverrideValue = %@
deviceRaised = %ld (%@)
faceDetected = %ld (%@)
touchScreenDetected = %ld (%@)
buttonPressDetected = %ld (%@)
flatDevicePosture = %ld (%@)
deviceOrientation = %ld (%@)
isInWorkout = %ld (%@)
isBacklightOn = %ld (%@)
isInWaterLock = %ld (%@)
isInSleepLock = %ld (%@)
isInTheaterMode = %ld (%@)
isOnWrist = %ld (%@)
AFModesConfiguration::isEyesFree
AFModesConfiguration::isForCarDND
AFModesConfiguration::isVoiceTriggerRequest
AFModesConfiguration::isConnectedToCarPlay
AFModesConfiguration::isRequestMadeWithPhysicalDeviceInteraction
AFModesConfiguration::userTypedInSiri
AFModesConfiguration::modeOverrideValue
AFModesConfiguration::deviceRaised
AFModesConfiguration::faceDetected
AFModesConfiguration::touchScreenDetected
AFModesConfiguration::buttonPressDetected
AFModesConfiguration::flatDevicePosture
AFModesConfiguration::deviceOrientation
AFModesConfiguration::isInWorkout
AFModesConfiguration::isBacklightOn
AFModesConfiguration::isInWaterLock
AFModesConfiguration::isInSleepLock
AFModesConfiguration::isInTheaterMode
AFModesConfiguration::isOnWrist
alarmsByID
notifiedFiringAlarmIDs
alarmsByID = %@
notifiedFiringAlarmIDs = %@
AFClockAlarmSnapshot::generation
AFClockAlarmSnapshot::date
AFClockAlarmSnapshot::alarmsByID
AFClockAlarmSnapshot::notifiedFiringAlarmIDs
mediaSystemIdentifier
sharedUserID
serializedContextByKey
metricsContext
mediaSystemIdentifier = %@
sharedUserID = %@
serializedContextByKey = %@
metricsContext = %@
AFServiceDeviceContext::identifier
AFServiceDeviceContext::assistantIdentifier
AFServiceDeviceContext::mediaSystemIdentifier
AFServiceDeviceContext::mediaRouteIdentifier
AFServiceDeviceContext::sharedUserID
AFServiceDeviceContext::roomName
AFServiceDeviceContext::proximity
AFServiceDeviceContext::serializedContextByKey
AFServiceDeviceContext::metricsContext
initial
followUpOne
followUpTwo
final
com.apple.siri.myriad.decision.begin
com.apple.siri.myriad.decision.won
com.apple.siri.myriad.decision.lost
com.apple.siri.myriad.repost.decision.won
com.apple.siri.myriad.readdefaults
audioFileURL = %@
endpointerOperationMode = %@
useAutomaticEndpointing = %d
%@ {event = %ld (%@), turnId = %@, deviceIdentifier = %@, time = %f, hostTime = %llu%@}
_activationDeviceIdentifier
_isEyesFree
_serverCommandId
_useAutomaticEndpointing
_endpointerOperationMode
_endpointerStopRecordingMode
_recordingAlertPolicy
_disableInputAudioPowerUpdate
_disableOutputAudioPowerUpdate
_useStreamingDictation
_homeButtonDownEventTime
_homeButtonDownEventMachAbsoluteTime
_activationEventTime
_activationEventMachAbsoluteTime
_expectedActivationEventTime
_stopRecordingHostTime
_isInitialBringUp
_homeButtonUpFromBeep
_acousticIdEnabled
_audioFileType
_audioFileHandle
_myriadContext
_recordDeviceIdentifier
_speechRecordingEventListeningEndpoint
_usePrelisteningMode
_pendCallbacksUntilAfterContinuation
_useBorealisBuffer
_audioFileURL
_suppressStartAlert
_suppressStopAlert
_hasPlayedStartAlert
_bargeInOptions
_speechSynthesisRecord
_reloadSmartSiriVolume
_skipPersonalizedASR
_clientAnalyticsContext
_startContext
_stopContext
_location
_locationStatus
_isOnPhoneCall
_isMediaPlaying
_mediaPlaybackVolume
_applicationBundleIdentifier
_presentationMode
_preheatLanguage
_preheatTestModelPath
_dictationVoiceTriggerAbsStartSampleId
_announcementPlatform
_isTest
alwaysOn
controlWithRingSwitch
handsFreeOnly
directTrigger
inEarTrigger
@16@?0#8
-[AFPluginManager enumerateFactoryInstancesForDomainKey:groupIdentifier:classIdentifier:usingBlock:]
-[AFPluginManager preloadBundles]
-[AFPluginManager _loadBundlesIfNeeded]
-[AFPluginManager _registerBundle:]
 Bundle Path: %@, Bundles: %@
lastSyncDate
didEnd
endingGroupIdentifier
lastSyncDate = %@
didEnd = %@
endingGroupIdentifier = %@
AFExperimentState::lastSyncDate
AFExperimentState::didEnd
AFExperimentState::endingGroupIdentifier
AFExperimentState::version
reusesRecycled
recyclesWhenDone
forcesAirPlay
%@ %@
turnContext
hasPlayedStartAlert
voiceTriggerInfo
myriadContext
analyticsContext
endpointerMode
buttonHoldDurationInMillisecond
raiseToSpeakInfo
AFSiriActivationVoiceActivityDetected
v16@?0@"<AFSiriActivationContextMutating>"8
AFSiriActivationVoiceKeywordDetected
AFSiriActivationVoiceTriggerPrewarm
AFSiriActivationVoiceTriggerActivate
AFSiriActivationContinuousVoiceTriggerDetected
AFSiriActivationBuiltInMicVoice
AFSiriActivationBuiltInMicVoiceTriggerPrewarm
AFSiriActivationBuiltInMicVoiceTrigger
AFSiriActivationHearst
AFSiriActivationHearstDoubleTap
AFSiriActivationHearstVoice
AFSiriActivationHearstBoron
AFSiriActivationBluetoothDeviceDoubleTap
AFSiriActivationBluetoothDeviceVoice
AFSiriActivationBluetoothDeviceVoiceTriggerPrewarm
AFSiriActivationBluetoothDeviceVoiceTrigger
AFSiriActivationBluetoothDeviceBoronSignal
AFSiriActivationBluetoothDeviceTriggerless
AFSiriActivationBluetoothDeviceButtonPress
AFSiriActivationBluetoothDeviceButtonRelease
AFSiriActivationHoneycombDeviceVoiceTriggerPrewarm
AFSiriActivationHoneycombDeviceVoiceTrigger
AFSiriActivationCarPlayDeviceVoice
AFSiriActivationCarPlayDeviceVoiceTriggerPrewarm
AFSiriActivationCarPlayDeviceVoiceTrigger
AFSiriActivationRaiseToSpeakPrewarm
AFSiriActivationRaiseToSpeak
AFSiriActivationTriggerless
AFSiriActivationValidate
AFSiriActivationPerform
AFSiriActivationCreateRequestInfoFromContext
com.apple.siri.activation.%@-%@
AFSiriActivationCreateContextFromXPCDictionary_block_invoke
AFSiriActivationCreateXPCDictionaryFromContext
AFSiriActivationCreateResultFromXPCDictionary_block_invoke
AFSiriActivationCreateXPCDictionaryFromResult
_AFSiriActivationGetHandler
NSDictionary<NSString *,id> * _Nullable AFPeerContentTupleGetContentMapFromArray(NSArray<AFPeerContentTuple *> * _Nullable __strong, __strong AFPeerContentTupleKeyProvider _Nonnull, AFPeerContentTupleContentFilter  _Nullable __strong, AFPeerContentTupleFallbackPeerProvider  _Nullable __strong, NSArray<AFPeerContentTuple *> * _Nullable __autoreleasing * _Nullable)
AFPeerContentUtils.m
keyProvider != nil
context
endpointUUID
context = (%ld bytes)
AFSiriHomeAutomationRequestInfo::context
playing
seeking
GetContextResponseContext
timersByID
notifiedFiringTimerIDs
timersByID = %@
notifiedFiringTimerIDs = %@
AFClockTimerSnapshot::generation
AFClockTimerSnapshot::date
AFClockTimerSnapshot::timersByID
AFClockTimerSnapshot::notifiedFiringTimerIDs
experimentsByConfigurationIdentifier
experimentsByConfigurationIdentifier = %@
AFExperimentContext::experimentsByConfigurationIdentifier
Outbound
SenderAddress
SenderInternalGUID
RecipientAddresses
GroupName
GroupNameId
SubjectText
BodyText
AttachmentURL
SendDate
ChatIdentifier
Effect
siri-message-internal
-[SASmsSms(STSiriMessage) af_messageValue]
voiceTriggerEnabled
%@(voiceTriggerEnabled=%@)
lastPlayedAnnouncement
state = %lu [%@]
lastPlayedAnnouncement = %@
AFHomeAnnouncementSnapshot::state
AFHomeAnnouncementSnapshot::lastPlayedAnnouncement
AFSiriTaskService.m
com.apple.siri.task.app.
Cannot create an app task service for a process without a bundle
-[AFSiriTaskService initWithMachServiceName:]
SiriTaskService-
com.apple.siri.task.client
-[AFSiriTaskService listener:shouldAcceptNewConnection:]
-[AFSiriTaskDeliveryHandler deliverSiriTask:completionHandler:]
-[AFSiriTaskDeliveryHandler deliverSiriTask:completionHandler:]_block_invoke
record
playback
AFSiriTaskmaster.m
Siri Taskmaster
-[AFSiriTaskmaster _handleFailureOfRequest:error:atTime:]
-[AFSiriTaskmaster handleFailureOfRequest:error:atTime:]
 %p; 
taskDeliverer=
, taskExecutions=
request
-[AFSiriTaskmaster handleSiriRequest:deliveryHandler:completionHandler:]
STGenericIntentRequest
Voice Activity
Smart Heuristics
Online Learner
_enabled
_daysOfWeek
_hourOfDay
_minuteOfHour
_sleepAlarm
_overrideAlarm
_bedtimeHour
_bedtimeMinute
performsOnlyIfIdle
Item
ChildNodes
-[AFTreeNodePropertyListSerialization _propertyListWithTreeNode:itemPropertyListCreation:]
Item creation block returned nil for %@
Unable to create tree node from property list with version %ld
monday
tuesday
wednesday
thursday
friday
saturday
sunday
AlarmIdentifiers
-[AFUserNotificationAnnouncementSpeakingStateObserver _startObservingNotificationWithRequestIdentifier:]
-[AFUserNotificationAnnouncementSpeakingStateObserver _removeObserverForNotificationRequestIdentifier:]
-[AFUserNotificationAnnouncementSpeakingStateObserver _speakingStateDidChange:forIdentifiers:]
-[AFUserNotificationAnnouncementSpeakingStateObserver _currentConnection]_block_invoke
-[AFUserNotificationAnnouncementSpeakingStateObserver _notifyObserverOfFailureForAllObservingNotifications]
-[AFUserNotificationAnnouncementSpeakingStateObserver _tearDown]
-[AFUserNotificationAnnouncementSpeakingStateObserver connectionInvalidated]
-[AFUserNotificationAnnouncementSpeakingStateObserver connectionInterrupted]
onSpeaker
callState = %lu [%@]
onSpeaker = %@
AFCallStateSnapshot::callState
AFCallStateSnapshot::onSpeaker
com.apple.siri.disambiguation
UpdateMessageRequestMessage
initiated
retry
myriadLoss
requestCancelled
requestFailed
requestTimedOut
adBlockerMitigated
acousticFtmMitigated
kSTSiriLocationAddressBookIDKey
kSTSiriLocationAddressLabelKey
kSTSiriLocationContactNameKey
kSTSiriLocationGeoResultKey
kSTSiriLocationResultTypeKey
type: %@, data length: %@
\ %@
virtualMemorySizeInBytes
numberOfRegions
pageSizeInBytes
residentMemorySizeInBytes
peakResidentMemorySizeInBytes
physicalMemoryFootprintInBytes
virtualMemorySizeInBytes = %@
numberOfRegions = %@
pageSizeInBytes = %@
residentMemorySizeInBytes = %@
peakResidentMemorySizeInBytes = %@
physicalMemoryFootprintInBytes = %@
AFMemoryInfo::virtualMemorySizeInBytes
AFMemoryInfo::numberOfRegions
AFMemoryInfo::pageSizeInBytes
AFMemoryInfo::residentMemorySizeInBytes
AFMemoryInfo::peakResidentMemorySizeInBytes
AFMemoryInfo::physicalMemoryFootprintInBytes
deviceID
source = %ld (%@)
event = %ld (%@)
deviceID = %@
AFSiriActivationContext::timestamp
AFSiriActivationContext::source
AFSiriActivationContext::event
AFSiriActivationContext::options
AFSiriActivationContext::deviceID
AFSiriActivationContext::userInfo
(gen: %@, date: %@, notifiedFiringAlarmIDs: %@, isFiring: %@)
(gen: %@, date: %@, notifiedFiringTimerIDs: %@, isFiring: %@)
(playstate: %@, time: %@, mediaType: %@, group: %@)
(state: %@)
(assistant=%@, ids=%@, media(s/r)=%@/%@, nm=%@, rm=%@, communal=%d)
(vtSatScore = %@, hasConfidenceScores = %@)
([%d,%d], accuracy=%d)
(private)
(callState = %@)
(attention = %@)
AFAnalytics.m
%s is marked as NS_UNAVAILABLE. Use the designated initializer instead.
-[AFAnalytics init]
com.apple.assistant.analytics.client
-[AFAnalytics logEventWithType:machAbsoluteTime:context:]
-[AFAnalytics logInstrumentation:machAbsoluteTime:turnContext:]
-[AFAnalytics boostQueuedEvents:]
-[AFAnalytics boostQueuedEvents:]_block_invoke
_AFAnalyticsEventCreate
_AFAnalyticsEventGetContextGuarded
buddy
headphonePairing
homePodSetup
watchPairing
turnOnSiriView
watchBridgeSettings
homeSettings
tinkerWatchPairing
/Assistant/AssistantSampled
com.apple.assistantd/AssistantSampled
reasons: %@, playback interrupted time: %f
-[AFMyriadGoodnessScoreEvaluator getRecentBump:ignoreAdjustedBoost:]
-[AFMyriadGoodnessScoreEvaluator getPlatformBias]
-[AFMyriadGoodnessScoreEvaluator bumpGoodnessScore:lastActivationTime:mediaPlaybackInterruptedTime:ignoreAdjustedBoost:]
-[AFMyriadGoodnessScoreEvaluator _updatePlatformBias:]
-[AFMyriadGoodnessScoreEvaluator getMyriadAdjustedBoostForGoodnessScoreContext:]
-[AFMyriadGoodnessScoreEvaluator _settingsConnectionDidDisconnect]_block_invoke
-[AFSiriActivationListener initWithServicePort:]
com.apple.siri.activation.listener
-[AFSiriActivationListener dealloc]
-[AFSiriActivationListener listener:shouldAcceptNewConnection:]
com.apple.siri.external_request
-[AFSiriActivationListener notifyObserver:didChangeStateFrom:to:]
-[AFSiriActivationListener prewarmWithRequestInfo:context:completion:]
-[AFSiriActivationListener prewarmWithRequestInfo:context:completion:]_block_invoke
-[AFSiriActivationListener activateWithRequestInfo:context:completion:]
-[AFSiriActivationListener activateWithRequestInfo:context:completion:]_block_invoke_2
-[AFSiriActivationListener activateWithRequestInfo:context:completion:]_block_invoke
-[AFSiriActivationListener deactivateForReason:options:context:completion:]
-[AFSiriActivationListener deactivateForReason:options:context:completion:]_block_invoke_2
-[AFSiriActivationListener deactivateForReason:options:context:completion:]_block_invoke
-[AFSiriActivationListener handleContext:completion:]
-[AFSiriActivationListener handleContext:completion:]_block_invoke_2
-[AFSiriActivationListener handleContext:completion:]_block_invoke
v16@?0@"AFRequestInfo"8
v24@?0q8Q16
v16@?0@"AFSiriActivationContext"8
-[AFSiriActivationListener handleIntent:inBackgroundAppWithBundleId:reply:]
-[AFSiriActivationListener handleIntent:inBackgroundAppWithBundleId:reply:]_block_invoke_2
-[AFSiriActivationListener handleIntent:inBackgroundAppWithBundleId:reply:]_block_invoke
-[AFSiriActivationListener handleIntentForwardingAction:inBackgroundApplicationWithBundleIdentifier:completionHandler:]
-[AFSiriActivationListener handleIntentForwardingAction:inBackgroundApplicationWithBundleIdentifier:completionHandler:]_block_invoke_2
-[AFSiriActivationListener handleIntentForwardingAction:inBackgroundApplicationWithBundleIdentifier:completionHandler:]_block_invoke
-[AFSiriActivationListener _startWithDelegate:]
-[AFSiriActivationListener _stop]
-[AFSiriActivationListener _invalidate]
-[AFSiriActivationListener _prewarmWithRequestInfo:context:completion:]
-[AFSiriActivationListener _prewarmWithRequestInfo:context:completion:]_block_invoke
-[AFSiriActivationListener _activateWithRequestInfo:context:completion:]
-[AFSiriActivationListener _activateWithRequestInfo:context:completion:]_block_invoke
-[AFSiriActivationListener _deactivateForReason:options:context:completion:]
-[AFSiriActivationListener _deactivateForReason:options:context:completion:]_block_invoke
-[AFSiriActivationListener _deliverButtonEventFromContext:completion:]
-[AFSiriActivationListener _deliverButtonEventFromContext:completion:]_block_invoke
-[AFSiriActivationListener _myriadEventWithRequestInfo:context:completion:]
-[AFSiriActivationListener _myriadEventWithRequestInfo:context:completion:]_block_invoke
+[AFSiriAnnouncementRequestCapabilityManager _classForPlatform:]
+[AFSiriAnnouncementRequestCapabilityManager supportedAnnouncementTypesForBundleId:onPlatform:]
-[AFSiriAnnouncementRequestCapabilityManager provider:eligibleAnnouncementRequestTypesChanged:]
-[AFSiriAnnouncementRequestCapabilityManager provider:availableAnnouncementRequestTypesChanged:]
com.apple.Home
com.apple.NanoHome
com.apple.reminders
com.apple.NanoReminders
com.apple.mobilephone
com.apple.facetime
LSApplicationRecord
Class getLSApplicationRecordClass(void)_block_invoke
AFSiriAnnouncementRequestCapabilityManager.m
void *CoreServicesLibrary(void)
/System/Library/Frameworks/CoreServices.framework/Contents/MacOS/CoreServices
INAppInfo
Class getINAppInfoClass(void)_block_invoke
siri_vox_tap_to_siri_behavior_experiment
playsSound
AFDeviceRingerSwitchObserver
com.apple.springboard.ringerstate
CreateMessageRequestMessage
com.apple.deviceArbitration
aData
dInfo
eDecision
emergencyHandled
reqType
myrRequestTypeUnknown
myrRequestTypeReset
myrRequestTypeVoiceTrigger
myrRequestTypeContiniousVoiceTrigger
myrRequestTypeAdvertiseEmergency
myrRequestTypeDeviceFound
myrRequestTypePreheat
myrRequestTypeDirectTrigger
myrRequestTypeSelfTrigger
myrRequestTypeEmergencyHandledStatus
myrRequestTypeElectionDecision
-[AFMyriadAccessoryMessage _initializeMessageObj:]
-[AFMyriadAccessoryMessage _initializeMessageObjFromDictionary:]
iSane
1 (ACKNOWLEDGEMENT)
usesSerializedProtocol
RequestType
%llu (%@)
VoiceTrigger endtime
AudioHash
hash=%#04x
GoodnessScore
UserConfidence
TieBreaker
DeviceClass
DeviceGroup
ProductType
ElectionDecision
EmergencyHandled
com.apple.siri.suggestions-%@.plist
Siri Utterance Suggestions Queue
accessoryIdentifier
propagationEvent
propagationEventReason
associatedChangeLogEventIdentifier
accessoryIdentifier = %@
propagationEvent = %ld (%@)
propagationEventReason = %@
associatedChangeLogEventIdentifier = %@
AFHomeAccessorySiriDataSharingPropagationLogEvent::date
AFHomeAccessorySiriDataSharingPropagationLogEvent::accessoryIdentifier
AFHomeAccessorySiriDataSharingPropagationLogEvent::propagationEvent
AFHomeAccessorySiriDataSharingPropagationLogEvent::propagationEventReason
AFHomeAccessorySiriDataSharingPropagationLogEvent::associatedChangeLogEventIdentifier
; service=
; initiatorAddress=
; recipientAddress=
_service
_initiatorAddress
_recipientAddress
FaceTime Audio
Telephony
com.apple.assistant.myriad.instrumentation
-[AFMyriadInstrumentation logCDADeviceStateActivityStartedOrChanged:withTrigger:withCdaId:withTimestamp:]_block_invoke
-[AFMyriadInstrumentation logCDADeviceStateActivityEnded:withCdaId:withTimestamp:]_block_invoke
-[AFMyriadInstrumentation logCDAElectionAdvertisingStarted:withCdaId:withTimestamp:]_block_invoke
-[AFMyriadInstrumentation logCDAElectionAdvertisingStarting:withDelay:withInterval:withCdaId:withTimestamp:]_block_invoke
-[AFMyriadInstrumentation logCDAElectionAdvertisingEnded:withCdaId:withTimestamp:]_block_invoke
-[AFMyriadInstrumentation logCDAElectionAdvertisingEnding:withCdaId:withTimestamp:]_block_invoke
-[AFMyriadInstrumentation logCDAElectionTimerEnded:withCdaId:withTimestamp:]_block_invoke
-[AFMyriadInstrumentation logCDAElectionDecisionMade:withDecision:withPreviousDecision:timeSincePreviousDecision:withWinningDevice:withThisDevice:withParticipants:withRawScore:withBoost:withCdaId:withTimestamp:]_block_invoke
-[AFMyriadInstrumentation logCDAElectionDecisionMadeDebug:withCrossDeviceArbitrationAllowed:advertisementData:withDeviceGroup:withCdaId:withTimestamp:]_block_invoke
AFCDABoostTypeUnknown
AFCDABoostTypeDevice
AFCDABoostTypeUnlock
AFCDABoostTypeRecentRaiseToWake
AFCDABoostTypeRecentRequest
AFCDABoostTypeRecentMotion
AFCDABoostTypeRecentPlayback
AFCDABoostTypeAlarmAndTimerFiring
-[AFMyriadInstrumentation updateBoost:value:]_block_invoke
-[AFMyriadInstrumentation updateIsTrump:withReason:]_block_invoke
CDASTATE_UNKNOWN
CDASTATE_NO_ACTIVITY
CDASTATE_ADVERT_TRIGGER
CDASTATE_LISTEN_LATE
CDASTATE_ADVERT_SUPPRESS_LATE
CDASTATE_WAIT_TASK
CDASTATE_ADVERT_CONTINUATION
CDASTATE_ADVERT_SUPPRESS
CDASTATE_WAIT_EMERGENCY_OR_TASK
CDASTATE_ADVERT_EMERGENCY
CDASTATE_ADVERT_HANDLED
CDASTATE_LISTEN_TASK
CDASTATE_WAIT_EMERGENCY_HANDLED
CDASTATE_LISTEN_EMERGENCY
CDASTATE_ADVERT_TRAINING
CDASTATE_ADVERT_OUTPUT_TRIGGER
CDASTATE_PREHEAT
CDASTATE_ADVERT_SLOWDOWN
CDASTATE_INIT_FILTERS
CDATRIGGER_UKNOWN
CDATRIGGER_DIRECT_TRIGGER
CDATRIGGER_VOICE_TRIGGER
CDATRIGGER_IN_EAR_TRIGGER
CDATRIGGER_CARPLAY_TRIGGER
CDATRIGGER_OUTGOING_TRIGGER
CDATRIGGER_IN_TASK_VOICE_TRIGGER
CDATRIGGER_EMERGENCY_TRIGGER
CDATRIGGER_ALERT_FIRING_VOICE_TRIGGER
CDATRUMPREASON_UNKNOWN
CDATRUMPREASON_RAISE_TO_SPEAK
CDATRUMPREASON_ALARM_FIRING
CDATRUMPREASON_THRESHOLD_REACHED
CDATRUMPREASON_PERSONALIZED_HEY_SIRI_SETUP
CDATRUMPREASON_OUTGOING_TRIGGER
CDATRUMPREASON_DIRECT_TRIGGER
CDATRUMPREASON_IN_TASK_TRIGGER
CDATRUMPREASON_FACE_DETECTED
configurationURL
maxTimeToSync
configurationURL = %@
maxTimeToSync = %@
AFExperimentServerConfigurationInfo::configurationIdentifier
AFExperimentServerConfigurationInfo::configurationURL
AFExperimentServerConfigurationInfo::maxTimeToSync
startedHostTime
finishedHostTime
startedDate
finishedDate
startedHostTime = %@
finishedHostTime = %@
startedDate = %@
finishedDate = %@
AFHomeAnnouncement::identifier
AFHomeAnnouncement::startedHostTime
AFHomeAnnouncement::finishedHostTime
AFHomeAnnouncement::startedDate
AFHomeAnnouncement::finishedDate
AFPeerContentTuple.m
info != nil
content != nil
%@ (%@: %@)
AFPeerContentTuple.info
AFPeerContentTuple.content
%@, deliveryDate: %@
_deliveryDate
com.apple.myriad_work
com.apple.myriad_timer_mgmt
com.apple.myriad_readiness
com.apple.myriad_adv_context
com.apple.myriad_attention
notificationCallback
outputTriggerSeenCallback
inEarTriggerSeenCallback
carplayTriggerSeenCallback
emergencyCallback
myriadDecisionRequestCallback
safelyGetAudioData
safelyClearAudioData
-[AFMyriadCoordinator initWithDelegate:]
com.apple.assistant.myriad
com.apple.siri.myriad.apayload
com.apple.siri.corespeech.selftrigger
com.apple.siri.myriad.falseemergency
com.apple.siri.myriad.in.ear
com.apple.siri.myriad.jarvis
hh:mm:ss.SSS
com.apple.siri.AFMyriadCoordinator
-[AFMyriadCoordinator _readDefaults]
iPhone
iPod
iPad
AppleTV
Watch
watch1,1
watch1,2
AudioAccessory
Bridge
-[AFMyriadCoordinator _initDeviceClassAndAdjustments]
Library/VoiceTrigger
AFMyriadCoordinatorAudioHashFileBaseDirectory
siriBC
AFMyriadCoordinatorAudioHashFilePath
-[AFMyriadCoordinator preheatWiProx]_block_invoke
-[AFMyriadCoordinator startAdvertisingForPHSSetupAfterDelay:maxInterval:]
-[AFMyriadCoordinator startAdvertisingFromVoiceTriggerWithContext:]_block_invoke
-[AFMyriadCoordinator _startAdvertisingFromVoiceTrigger]
-[AFMyriadCoordinator startAdvertisingFromVoiceTriggerAdjusted:withContext:]
-[AFMyriadCoordinator startAdvertisingFromVoiceTriggerWithGoodnessScoreContext:withContext:]_block_invoke
-[AFMyriadCoordinator startWatchAdvertisingFromVoiceTriggerWithContext:]_block_invoke
-[AFMyriadCoordinator startWatchAdvertisingFromDirectTriggerWithContext:]_block_invoke
-[AFMyriadCoordinator startAdvertisingFromDirectTriggerWithContext:]_block_invoke
-[AFMyriadCoordinator startAdvertisingFromOutgoingTriggerWithContext:]_block_invoke
-[AFMyriadCoordinator startAdvertisingFromInEarTrigger]_block_invoke
InEarTrigger
-[AFMyriadCoordinator startAdvertisingFromCarPlayTrigger]_block_invoke
CarPlayTrigger
-[AFMyriadCoordinator startAdvertisingEmergencyHandled]_block_invoke
-[AFMyriadCoordinator startAdvertisingEmergency]_block_invoke
-[AFMyriadCoordinator _startAdvertisingFromInTaskVoiceTrigger]
-[AFMyriadCoordinator startAdvertisingFromAlertFiringVoiceTriggerWithContext:]_block_invoke
AlertFiringVoiceTrigger
-[AFMyriadCoordinator startResponseAdvertising:]_block_invoke
-[AFMyriadCoordinator startAdvertisingSlowdown:]_block_invoke
end advert delay
-[AFMyriadCoordinator endAdvertisingAfterDelay:]_block_invoke_2
-[AFMyriadCoordinator _endAdvertising:]
v32@?0@"AFMyriadRecord"8Q16^B24
-[AFMyriadCoordinator _endAdvertisingAnalyticsContext:]
max_slowdown
coordination_allowed
device-group
election
counts
-[AFMyriadCoordinator _endAdvertisingWithDeviceProhibitions:]
listening late
wait until after suppress
-[AFMyriadCoordinator endTask]_block_invoke
-[AFMyriadCoordinator setInTask:]_block_invoke
-[AFMyriadCoordinator setupEnabled:]_block_invoke
-[AFMyriadCoordinator _deviceShouldContinue:]
-[AFMyriadCoordinator _winElection]
-[AFMyriadCoordinator _loseElection]
v16@?0@"<AFMyriadSessionMutating>"8
-[AFMyriadCoordinator _addElectionAdvertisementDataToMyriadSession:]
-[AFMyriadCoordinator _createMyriadSessionIfRequired]
-[AFMyriadCoordinator _clearMyriadSession]
v32@?0@"NSUUID"8@"NSData"16^B24
-[AFMyriadCoordinator _clearMyriadSession]_block_invoke
-[AFMyriadCoordinator _initializeTimer]
-[AFMyriadCoordinator _createDispatchTimerWithTime:toExecute:]_block_invoke
listen
-[AFMyriadCoordinator _startTimer:for:thenExecute:]
-[AFMyriadCoordinator _startTimer:for:thenExecute:]_block_invoke
-[AFMyriadCoordinator _cancelTimer]
-[AFMyriadCoordinator _setOverallTimeout]
-[AFMyriadCoordinator _setOverallTimeout]_block_invoke
-[AFMyriadCoordinator _cancelOverallTimeout]
-[AFMyriadCoordinator _enterState:]
listen late
listen wait/emergency
listen emergency handled
preheat timer
filter initialization timer
MYR_NOACTIVITY
MYR_ADVERT_TRIGGER
MYR_LISTEN_LATE
MYR_ADVERT_SUPPRESS_LATE
MYR_WAIT_TASK
MYR_ADVERT_CONT
MYR_ADVERT_SUPPRESS
MYR_WAIT_EMERGENCY_OR_TASK
MYR_ADVERT_EMERGENCY
MYR_ADVERT_HANDLED
MYR_LISTEN_TASK
MYR_WAIT_EMERGENCY_HANDLED
MYR_LISTEN_EMERGENCY
MYR_ADVERT_OUTPUT_TRIGGER
MYR_ADVERT_SLOWDOWN
MYR_PREHEAT
MYR_INIT_FILTERS
<AFMYR_State_ERROR>
-[AFMyriadCoordinator _startListening:]
-[AFMyriadCoordinator _startListeningAfterWiProxIsReady:inState:completion:]
-[AFMyriadCoordinator _startListeningAfterWiProxIsReady:inState:completion:]_block_invoke
-[AFMyriadCoordinator _stopAdvertising:]
-[AFMyriadCoordinator _stopListening:]
-[AFMyriadCoordinator _handleStateMachineErrorIfNeeded]
state_machine_error
-[AFMyriadCoordinator _testAndFilterAdvertisementsFromContextCollector:voiceTriggerEndTime:advertisementDispatchTime:advertisement:]
-[AFMyriadCoordinator _testAndFilterAdvertisementsFromContextCollector:voiceTriggerEndTime:advertisementDispatchTime:advertisement:]_block_invoke
v32@?0@"NSUUID"8@"AFMyriadAdvertisementContextRecord"16^B24
-[AFMyriadCoordinator _suppressDeviceIfNeededWithVoiceTriggerEndTime:adverisementDispatchTime:]_block_invoke
v32@?0@8@"AFMyriadRecord"16^B24
voiceTriggerEndTime
advertisementDispatchTime
-[AFMyriadCoordinator _pushMyriadAdvertisementContextToContextCollectorWithAdvertisementInterval:advertisementDelay:]
contextAdvertisementId
advertismentContext
-[AFMyriadCoordinator _pushMyriadAdvertisementContextToContextCollectorWithAdvertisementInterval:advertisementDelay:]_block_invoke_2
-[AFMyriadCoordinator _pushMyriadAdvertisementContextToContextCollectorWithAdvertisementInterval:advertisementDelay:]_block_invoke
currentAdvertisementId
-[AFMyriadCoordinator _setupActionWindows]
-[AFMyriadCoordinator _adjustActionWindowsFromSlowdown:]
-[AFMyriadCoordinator _duringNextWindowExecute:]
-[AFMyriadCoordinator setupAdvIntervalsInDelay:interval:withSlowdown:]
-[AFMyriadCoordinator _advertiseTrigger]
-[AFMyriadCoordinator _advertiseTrigger]_block_invoke
-[AFMyriadCoordinator _advertiseSlowdown]
delay
-[AFMyriadCoordinator _advertiseSlowdown]_block_invoke
-[AFMyriadCoordinator _advertiseWith:afterDelay:maxInterval:thenExecute:]_block_invoke
advertise
v24@?0@"NSData"8@?<v@?>16
-[AFMyriadCoordinator _advertiseWith:afterDelay:maxInterval:thenExecute:]
advert delay
-[AFMyriadCoordinator slowdownRecord:]
-[AFMyriadCoordinator _shouldContinueFor:]
-[AFMyriadCoordinator _shouldContinueFor:]_block_invoke
-[AFMyriadCoordinator _shouldHandleEmergency]
-[AFMyriadCoordinator _shouldHandleEmergency]_block_invoke
-[AFMyriadCoordinator _inTaskTriggerWasTooSoon]
-[AFMyriadCoordinator _updateRepliesWith:id:data:]
-[AFMyriadCoordinator notifyCurrentDecisionResult]_block_invoke
-[AFMyriadCoordinator _testAndUpdateWedgeFilter:]
-[AFMyriadCoordinator _initializeWiProxReadinessTimer]
-[AFMyriadCoordinator _suspendWiProxReadinessTimer]
-[AFMyriadCoordinator _clearWiProxReadinessTimer]
-[AFMyriadCoordinator _createWaitWiProxTimer:waitBlock:]_block_invoke
-[AFMyriadCoordinator _waitWiProx:andExecute:]_block_invoke
-[AFMyriadCoordinator _waitWiProx:andExecute:]
-[AFMyriadCoordinator _enterBLEDiagnosticMode]
AFMyriadCoordinator.m
_myriadWorkQueue
-[AFMyriadCoordinator _enterBLEDiagnosticMode]_block_invoke
-[AFMyriadCoordinator _leaveBLEDiagnosticMode]
-[AFMyriadCoordinator _signalEmergencyCallHandled]
-[AFMyriadCoordinator notifyObserver:didReceiveNotificationWithToken:]
AWAttentionAwarenessConfiguration
initAWAttentionAwarenessConfiguration_block_invoke
classAWAttentionAwarenessConfiguration
/System/Library/PrivateFrameworks/AttentionAwareness.framework/AttentionAwareness
AttentionAwarenessLibrary
AWAttentionAwarenessClient
initAWAttentionAwarenessClient_block_invoke
classAWAttentionAwarenessClient
SFDiagnostics
initSFDiagnostics_block_invoke
classSFDiagnostics
/System/Library/PrivateFrameworks/Sharing.framework/Sharing
SharingLibrary
appBundleIdentifier
AFUIApplicationSiriTaskDeliverer
-[AFUIApplicationSiriTaskDeliverer _startAppStateMonitoringForRequest:]
<%@: %p; %@>
-[AFUIApplicationSiriTaskDeliverer _processAssertionWasInvalidatedForRequest:]
-[AFUIApplicationSiriTaskDeliverer _processAssertionWasInvalidatedForRequest:]_block_invoke
-[AFUIApplicationSiriTaskDeliverer _processAssertionWasAcquired:]
-[AFUIApplicationSiriTaskDeliverer _processAssertionWasAcquired:]_block_invoke
-[AFUIApplicationSiriTaskDeliverer deliverSiriTask:completionHandler:]
v24@?0@"BSProcessHandle"8@"NSError"16
-[AFUIApplicationSiriTaskDeliverer siriTaskDidFinish]
SiriTaskDelivererBackground
-[AFUIApplicationSiriTaskDeliverer _handleSuccessfulAppLaunchToBackground:forRequest:completion:]
bundleIdentifier
BKSApplicationStateMonitor
/System/Library/PrivateFrameworks/AssertionServices.framework/AssertionServices
BKSApplicationStateAll
initBKSApplicationStateAll_block_invoke
AFUIApplicationSiriTaskDeliverer.m
appIsFrontmost
BKSApplicationStateAppIsFrontmostKey
initBKSApplicationStateAppIsFrontmostKey_block_invoke
_LogAppStateInfo
SBApplicationStateDisplayIDKey
initSBApplicationStateDisplayIDKey_block_invoke
/System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices
SBApplicationStateKey
initSBApplicationStateKey_block_invoke
UISiriTaskAction
/System/Library/Frameworks/UIKit.framework/UIKit
FBSOpenApplicationOptionKeyActions
initFBSOpenApplicationOptionKeyActions_block_invoke
/System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices
FBSOpenApplicationOptionKeyActivateSuspended
initFBSOpenApplicationOptionKeyActivateSuspended_block_invoke
FBSOpenApplicationOptionKeyUnlockDevice
initFBSOpenApplicationOptionKeyUnlockDevice_block_invoke
FBSOpenApplicationOptionKeyPromptUnlockDevice
initFBSOpenApplicationOptionKeyPromptUnlockDevice_block_invoke
FBSOpenApplicationService
FBSOpenApplicationOptions
FBSOpenApplicationServiceErrorDomain
initFBSOpenApplicationServiceErrorDomain_block_invoke
BKSProcessAssertion
class
dialogPhase
dialogIdentifier
listenAfterSpeaking
v48@?0{?=@@@@B}8
headphones
hearingAids
builtInSpeaker
language
interactionIdentifier
task
loggingContext
applicationName
profile
overrides
modelOverrideURL
originalAudioFileURL
narrowband
detectUtterances
censorSpeech
farField
secureOfflineOnly
shouldStoreAudioOnDevice
maximumRecognitionDuration
jitGrammar
language = %@
interactionIdentifier = %@
task = %@
loggingContext = %@
applicationName = %@
profile = (%ld bytes)
overrides = %@
modelOverrideURL = %@
originalAudioFileURL = %@
narrowband = %@
detectUtterances = %@
censorSpeech = %@
farField = %@
secureOfflineOnly = %@
shouldStoreAudioOnDevice = %@
maximumRecognitionDuration = %@
location = %@
jitGrammar = %@
AFSpeechParameters::language
AFSpeechParameters::interactionIdentifier
AFSpeechParameters::task
AFSpeechParameters::loggingContext
AFSpeechParameters::applicationName
AFSpeechParameters::profile
AFSpeechParameters::overrides
AFSpeechParameters::modelOverrideURL
AFSpeechParameters::originalAudioFileURL
AFSpeechParameters::narrowband
AFSpeechParameters::detectUtterances
AFSpeechParameters::censorSpeech
AFSpeechParameters::farField
AFSpeechParameters::secureOfflineOnly
AFSpeechParameters::shouldStoreAudioOnDevice
AFSpeechParameters::maximumRecognitionDuration
AFSpeechParameters::inputOrigin
AFSpeechParameters::location
AFSpeechParameters::jitGrammar
-[AFDeviceRequestHandlingRecord(ContextSnapshot) initWithSerializedBackingStore:]
-[AFCallStateSnapshot(ContextSnapshot) initWithSerializedBackingStore:]
-[AFSystemStateSnapshot(ContextSnapshot) initWithSerializedBackingStore:]
com.apple.cmas
Dismiss
Snooze
UN://%@
BB://%@
_bulletinID
_recordID
_sectionID
_sectionSubtype
_allDay
_endDate
_recencyDate
_timeZone
_title
_message
_displayName
_subtitle
_publisherBulletinID
_intentIDs
_availableOnLockScreen
_supportsSpokenNotification
_internalID
_previewRestricted
_threadID
_feed
/System/Library/PrivateFrameworks/CoreServices.framework/CoreServices
AFDialogPhaseType
Unexpected value for _type: %ld
acknowledgementDialogPhase
reflectionDialogPhase
statusDialogPhase
clarificationDialogPhase
summaryDialogPhase
confirmationDialogPhase
completionDialogPhase
errorDialogPhase
confirmedDialogPhase
cancelledDialogPhase
userRequestDialogPhase
unknown dialogPhase
<%@ %@>
imagePath
symbolName
imagePath = %@
symbolName = %@
AFCallSiteInfo::imagePath
AFCallSiteInfo::symbolName
turnIdentifier
%@: %p; 
machServiceName=
Mach Service Task Delivery Completion Handler
-[AFMachServiceSiriTaskDeliverer deliverSiriTask:completionHandler:]
-[AFMachServiceSiriTaskDeliverer deliverSiriTask:completionHandler:]_block_invoke
v32@?0@"AFAnalyticsEvent"8Q16^B24
media
"%@"
ids %@
rp %@
mr %@
hk %@
rm "%@"
md %@/%@
Peer %@ (%@)
Peer (%@)
v16@?0@"<AFPeerInfoMutating>"8
/Assistant/DictationSampled
com.apple.assistantd/DictationSampled
DictationSampled.plist
+[AFDictationSamplingUtilities samplingDateAsString]
ObjectUpdatedResponseObjectIdentifier
com.apple.siri.enablement.voiceselection.experiment.completed
com.apple.siri.enablement.flow.completed
didEnable
flow
timeToResolve
errorCode
groupIdentifier
v16@?0@"<AFEnablementConfigurationProviderParametersMutating>"8
-[AFEnablementFlowConfigurationProvider _resolveIfNewUserWithParameters:forRecognitionLanguages:completion:]
-[AFEnablementFlowConfigurationProvider _resolveIfNewUserWithParameters:forRecognitionLanguages:completion:]_block_invoke
-[AFEnablementFlowConfigurationProvider _resolveVoiceSelection:forRecognitionLanguages:completion:]
B24@?0@"AFVoiceInfo"8@"NSDictionary"16
+[AFEnablementFlowConfigurationProvider _createConfigurationForParameters:]
com.apple.siri.vocabularyupdates
com.apple.siri.appIntentSupportPolicyAndVocab
com.apple.siri.appIntentSupportPolicyAndVocab.nano
-[SASyncAnchor(SyncPrivate) _af_isValid]
machAbsoluteTime
appBundleId
appState
resultCode
Daemon.Launch
Daemon.Loaded
Daemon.Exit
Daemon.Failure
Daemon.StartRequest.Speech
Daemon.StartRequest.Dictation
Daemon.StartRequest.Other
Daemon.StartRequest.Keyboard
Daemon.Audio
Daemon.Audio.Init.Begin
Daemon.Audio.Init.End
Daemon.Audio.Configure.Begin
Daemon.Audio.Configure.End
Daemon.Audio.Prewarm.Begin
Daemon.Audio.Prewarm.End
Daemon.Audio.Prepare.Begin
Daemon.Audio.Prepare.End
Daemon.Audio.FetchRoute.Begin
Daemon.Audio.FetchRoute.End
Daemon.Audio.StartRecording.Begin
Daemon.Audio.StartRecording.End
Daemon.Audio.Recording.Begin
Daemon.Audio.Recording.FirstBuffer
Daemon.Audio.Recording.End
Daemon.Audio.StopRecording.Begin
Daemon.Audio.StopRecording.End
Daemon.Audio.LateBuffer
Daemon.Audio.Analyzer.Startpoint.Detected
Daemon.Audio.Analyzer.Endpoint.Hard.Detected
Daemon.Audio.Failure
Daemon.Audio.BTInfoFetch.Begin
Daemon.Audio.BTInfoFetch.End
Daemon.Audio.FanInfo
Daemon.Audio.FirstChanceTriggerInfo
Daemon.Audio.Recording.Interruption.Begin
Daemon.Audio.Recording.Interruption.End
Daemon.Audio.Endpointer.State
Daemon.Audio.Recording.FirstBuffer.Start
Daemon.Audio.Recording.FirstBuffer.Receipt
Daemon.Audio.Recording.LastBuffer.Start
Daemon.Audio.Recording.LastBuffer.Receipt
Daemon.Audio.Session.SetActive.Begin
Daemon.Audio.Session.SetActive.End
Daemon.Audio.Session.SetInactive.Begin
Daemon.Audio.Session.SetInactive.End
Daemon.Audio.Recording.MissedBuffer
Daemon.Audio.File.Started
Daemon.Audio.TwoShot.Transition.Begin
Daemon.Audio.TwoShot.Transition.End
Daemon.Audio.Recording.Metrics
Daemon.Speech
Daemon.Speech.Capture.Start.Begin
Daemon.Speech.Capture.Start.End
Daemon.Speech.Capture.Update
Daemon.Speech.Capture.Cancel
Daemon.Speech.Capture.Stop
Daemon.Speech.Failure
Daemon.Speech.Capture.Continued
Daemon.Speech.ResultCandidate.Evaluation.Begin
Daemon.Speech.ResultCandidate.Evaluation.End
Daemon.Speech.ResultCandidate.Accepted
Daemon.Speech.ResultCandidate.Stashed
Daemon.Service
Daemon.Service.Handle.Begin
Daemon.Service.Handle.End
Daemon.Service.Bundle.Handle.Begin
Daemon.Service.Bundle.Handle.End
Daemon.GenericIntent
Daemon.GenericIntent.Handle.Begin
Daemon.GenericIntent.Handle.Timeout
Daemon.GenericIntent.Deliver.Begin
Daemon.GenericIntent.Recipient.StateChange
Daemon.GenericIntent.Recipient.Crash
Daemon.GenericIntent.Recipient.Finished
Daemon.GenericIntent.Handle.End
Daemon.Intent
Daemon.Intent.Extension.Prepare
Daemon.Intent.Extension.Ready
Daemon.Intent.Extension.UnexpectedExit
Daemon.Intent.Extension.TimedOut.Launching
Daemon.Intent.Extension.TimedOut.Request
Daemon.Intent.Resolve.Begin
Daemon.Intent.Resolve.Request.Sent
Daemon.Intent.Resolve.Response.Received
Daemon.Intent.Resolve.End
Daemon.Intent.Confirm.Begin
Daemon.Intent.Confirm.Request.Sent
Daemon.Intent.Confirm.Request.Received
Daemon.Intent.Confirm.ResponseUIVisible
Daemon.Intent.Confirm.End
Daemon.Intent.Handle.Begin
Daemon.Intent.Handle.Request.Sent
Daemon.Intent.Handle.Request.Received
Daemon.Intent.Handle.ResponseUIVisible
Daemon.Intent.Handle.End
Daemon.Intent.Launch.WithIntent.Begin
Daemon.Intent.Launch.WithIntent.End
Daemon.Intent.Launch.WithUserActivity.Begin
Daemon.Intent.Launch.WithUserActivity.End
Daemon.Intent.ResolveApp.Begin
Daemon.Intent.ResolveApp.End
Daemon.Intent.Extension.Request.Begin
Daemon.Intent.Extension.Request.End
Daemon.Intent.Extension.Prewarm.Begin
Daemon.Intent.Extension.Prewarm.End
Daemon.Task
Daemon.Task.Schedule
Daemon.Task.Start
Daemon.Task.Deliver
Daemon.Task.Finish
Daemon.Signal
Daemon.DomainSignal.LaunchApp
Daemon.Session
Daemon.Session.Connection.Opened
Daemon.Session.Connection.Snapshot.Local
Daemon.Session.Connection.Snapshot.Remote
Daemon.Session.Connection.Timeout
Daemon.Session.Connection.Dropped
Daemon.Session.Connection.Failed
Daemon.Session.Validation.Failed
Daemon.Session.Authentication.Failed
Daemon.Session.Assistant.Failed
Daemon.Session.Assistant.NotReady
Daemon.Session.RemappedRequestId
Daemon.Session.Connection.Start
Daemon.Session.Connection.Reset
Daemon.Session.Connection.ClientConnectionId.Created
Daemon.Session.Connection.FirstByteReceived
Daemon.Session.Local.Assistant.NotReady
Daemon.Session.Local.Connection.Reset
Daemon.Session.ProxiedRequestId
Daemon.Session.Won
Daemon.Session.LoadAssistant
Daemon.Session.Failed
Daemon.Session.Results.Queued
Daemon.Network
Daemon.Network.Available
Daemon.Network.ServerAddress.Resolved
Daemon.Network.Failure
Daemon.Network.Peer.Error
Daemon.Network.AcePing.Sent
Daemon.Network.AcePong.Received
Daemon.Network.Provider.Open.Begin
Daemon.Network.Provider.Open.End
Daemon.Network.Provider.Secondary.Open.Begin
Daemon.Network.Provider.Secondary.Open.End
Daemon.Network.Link.Recommendation.Begin
Daemon.Network.Link.Recommendation.End
Daemon.Network.Link.Recommendation.Timedout
Daemon.IncomingCommand
Daemon.IncomingCommand.SpeechPartialResult
Daemon.IncomingCommand.SpeechRecognized
Daemon.OutgoingCommand
Daemon.OutgoingCommand.Failure
Daemon.Local.OutgoingCommand.Failure
UI.Plugin.Loaded
UI.Activation.Prepare
UI.Activation.Cancel
UI.Activation.Handle.Begin
UI.Activation.Handle.End
UI.Present.Begin
UI.Present.End
UI.Dismiss.Begin
UI.Dismiss.End
UI.Button.Down
UI.Button.Up
UI.Button.Tap
UI.Blur
UI.Flames.Present
UI.Flames.Dismiss
UI.Mode.Idle
UI.Mode.Listening
UI.Mode.Thinking
UI.Mode.Success
UI.UUFR.Present
UI.Command.Handle.Begin
UI.Command.Handle.End
UI.Failure
UI.TapToEditButton.Tap
UI.URLSessionLoad.Failure
UI.Disambiguation.Selected
UI.TTS.ShouldSpeak
UI.TTS.ShouldNotSpeak
UI.TranscriptItem.Inserted
UI.TranscriptItem.DidAppear
UI.TranscriptItem.DidDisappear
UI.Transcript.Scrolled
UI.Unlock.Presented
UI.Unlock.Dismissed
UI.Device.Locked
UI.Device.Unlocked
UI.Punchout.Begin
UI.Punchout.End
UI.TranscriptItems.Reload.Begin
UI.TranscriptItems.Reload.End
UI.Mode.Presenting
UI.Mode.Idle.Rendered
UI.Mode.Listening.Rendered
UI.Mode.Thinking.Rendered
UI.Mode.Presenting.Rendered
UI.Button.TextRequestInput.Start
UI.Button.TextRequestInput.Done
UI.Button.TextRequestInput.Clear
UI.ViewService
UI.ViewService.Launch
UI.ViewService.Loaded
UI.ViewService.Exit
UI.ViewService.SpeechPartialResult.Received
UI.ViewService.SpeechPartialResult.Presented
UI.ViewService.SpeechRecognized.Received
UI.ViewService.SpeechRecognized.Presented
UI.ViewService.Failure
UI.ViewService.Pin
UI.ViewService.Pin.Begin
UI.ViewService.Pin.End
UI.ViewService.Drag
UI.ViewService.DidAppear
UI.ViewService.DidDisappear
Coverage.AggregateDictionary
Coverage.AggregateDictionary.Scalar
Coverage.AggregateDictionary.Distribution
Coverage.RequestStatistics
Coverage.RequestStatistics.Cancellation
Coverage.RequestStatistics.Failure
Client.StartRequest
Client.StartSpeechRequest
Client.StartSpeechPronunciationRequest
Client.StartAcousticIDRequest
Client.StartContinuityRequest
Client.StartCorrectionRequest
Client.StartDirectActionRequest
Client.StartTextRequest
Client.UpdateSpeech
Client.StopSpeech
Client.CancelSpeech
Client.RequestCanceled
Client.RequestFailed
Client.RequestCompleted
Client.Preheat
Client.AcousticId.Begin
Client.AcousticId.End
Client.Tether.Wait.Begin
Client.Tether.Wait.End
Client.Tether.Attach.Begin
Client.Tether.Attach.End
Client.Tether.Attached
Client.Tether.Detached
Client.Feedback.Presented
Client.AutoDisambiguation.Requested
Client.AutoDisambiguation.Saved
Client.Coord
Client.Coord.AdvertisingWillEnd
Client.Coord.AudioReady
Client.Coord.AdvertisingStartRequest
Client.Coord.AdvertisingDidStart
Client.Coord.AdvertisingEndRequest
Client.Coord.AdvertisingDidEnd
Client.Coord.DecisionMade
Client.Coord.SlowdownGenerated
Client.Coord.SlowdownReceived
Client.Coord.ActivityStart
Client.Coord.ActivityEnd
UI.Watch
UI.Activation.GizmoVTWhileAlreadyRecording
UI.DelayedResponse.Education
UI.DelayedResponse.WristLowered
UI.DelayedResponse.BacklightOn
UI.TTS.Canceled
Client.Dictation
Client.Dictation.StartRequest
Client.Dictation.UpdateSpeech
Client.Dictation.StopSpeech
Client.Dictation.CancelSpeech
Client.Dictation.RequestCanceled
Client.Dictation.RequestFailed
Client.Dictation.RequestCompleted
Client.Dictation.TimeoutRequest
Client.Dictation.SpeechRecording.Started
Client.Dictation.SpeechRecording.Canceled
Client.Dictation.SpeechRecording.Completed
Client.Dictation.SpeechRecording.Failed
Client.Dictation.SpeechRecognition.PhrasesRecognized
Client.Dictation.SpeechRecognition.TokensRecognized
Client.Dictation.SpeechRecognition.TranscriptionObjectsRecognized
Client.Dictation.SpeechRecognition.Completed
Client.Dictation.SpeechRecognition.Failed
Client.Dictation.AppDidEnterBackground
Client.Dictation.SmartLanguageSelection.LanguageOverridden
VoiceTrigger.Start
VoiceTrigger.Fire
VoiceTrigger.End
VoiceTrigger.EarlyDetect
UIPlugin.Movies
UIPlugin.Movies.BeginLoadingMediaButtons
UIPlugin.Movies.EndLoadingMediaButtons
QA.Automation
QA.Automation.Begin
QA.Automation.End
QA.Automation.Mark
CDM.NLService.HandleCommand.Begin
CDM.NLService.HandleCommand.End
CDM.FlowService.HandleCommand.Begin
CDM.FlowService.HandleCommand.End
CDM.Config.AssetManager.OfflineQueryStart
CDM.Config.AssetManager.OfflineQuerySuccess
CDM.Config.AssetManager.OfflineQueryFailed
CDM.Config.AssetManager.OnlineQueryStart
CDM.Config.AssetManager.OnlineQuerySuccess
CDM.Config.AssetManager.OnlineQueryFailed
CDM.Config.AssetManager.AssetDownloadStart
CDM.Config.AssetManager.AssetDownloadCompleted
CDM.Config.AssetManager.AssetDownloadFailed
CDM.Config.AssetManager.AssetDownloadCancelled
CDM.Config.AssetManager.AssetPurged
CDM.StartSpeech.Received
CDM.SetAssistantData.Received
CDM.LoadAssistant.Received
VOXService
VOXService.SpeechSynthesis.Enqueued
VOXService.SpeechSynthesis.Canceled
VOXService.SpeechSynthesis.Failed
VOXService.SpeechSynthesis.Finished
VOXService.SpeechSynthesis.Interrupted
VOXService.SpeechSynthesis.Started
VOXService.TwoShotSound.Begin
VOXService.TwoShotSound.End
VOXService.SessionInactiveSound.Begin
VOXService.SessionInactiveSound.End
VOXService.TapToSiriSound.Begin
VOXService.TapToSiriSound.End
NowPlaying
NowPlaying.isPlaying.Changed
Music
Music.Playback.Ready
Music.Playback.SecureKey
Music.Playback.AssetLoad
Music.Playback.Summary
Xcode
Xcode.Test.Begin
Xcode.Test.End
DeviceConfiguration
DeviceConfiguration.Snapshot
Settings
Settings.SetLanguage
Settings.SetOutputVoice
Settings.SetVoiceFeedback
Settings.ChangedTCCInfo
Settings.ChangedTypeToSiri
Setup
Setup.PHSBootstrapped
Setup.PHSTrainingStarted
Experiment
Experiment.Exposure.SiriVOXSounds
Experiment.Exposure.SiriVOXTapToSiriBehavior
ClientFlow.Plugin
ClientFlow.Plugin.Started
ClientFlow.Plugin.ExecutionStarted
ClientFlow.Plugin.ExecutionFinished
ClientFlow.Plugin.ExecutionFailed
ClientFlow.CFClient
ClientFlow.CFClient.ScripterLoadStarted
ClientFlow.CFClient.ScripterLoadFinished
ClientFlow.CFClient.ScripterWarmedUp
ClientFlow.CFClient.ScripterWarmedUpWithScriptHint
ClientFlow.CFClient.Execution.Started
ClientFlow.CFClient.Execution.Finished
ClientFlow.CFClient.Execution.Failed
ClientFlow.JS
ClientFlow.JS.SiriMini
ClientFlow.JS.ServerFlow
ClientFlow.JS.Provider
ClientFlow.JS.BackgroundAction.Maintenance
ClientFlow.JS.BackgroundAction.ActivityCollection
ClientFlow.JS.BackgroundAction.DataMigration
ClientFlow.ClientScripter
ClientFlow.ClientScripter.Started
ClientFlow.ClientScripter.JSContextSetup.Started
ClientFlow.ClientScripter.JSContextSetup.Finished
ClientFlow.ClientScripter.JSEvaluation.StartedForScript
ClientFlow.ClientScripter.JSEvaluation.FinishedForScript
ClientFlow.ClientScripter.JSExecution.Started
ClientFlow.ClientScripter.JSExecution.Finished
ClientFlow.ClientScripter.JSExecution.Successful
ClientFlow.ClientScripter.JSExecution.Failed
ClientFlow.ClientScripter.Script.SentFromServer
ClientFlow.ClientScripter.Script.RetrievedFromServer
ClientFlow.ClientScripter.Script.LoadedFromMemoryCache
ClientFlow.ClientScripter.Script.LoadedFromFilesystem
ClientFlow.ClientScripter.Script.UsedCachedJSContext
ClientFlow.ClientScripter.Script.UsedDeferredCachedJSContext
ClientFlow.ClientScripter.Script.RetrievalFailed
ClientFlow.ClientScripter.Script.CachingFailed
ClientFlow.ClientScripter.SentCommand
ClientFlow.ClientScripter.SentCommandAsync
ClientFlow.ClientScripter.ReceivedResponse
ClientFlow.ClientScripter.JSContextCreatedInWarmup
ClientFlow.ClientScripter.JSContextEvaluatedScriptInWarmupForScript
ClientFlow.ClientScripter.CachedJSContextCount
ClientFlow.ClientScripter.ExecutionFailed
UI.Card.PresentBegin
UI.Card.PresentEnd
UI.Card.SectionPresentBegin
UI.Card.SectionPresentEnd
UI.Card.EngagedWith
UI.Card.SectionEngagedWith
UI.Card.AsyncCardRequested
UI.Card.AsyncCardReceived
AssistantService
AssistantService.Launch
AssistantService.Exit
AssistantService.Message.Send
AssistantService.Message.Delivered
AssistantService.Message.Begin
AssistantService.Message.End
AssistantService.CommandPerform.Begin
AssistantService.CommandPerform.End
AssistantService.BundleLoading.Begin
AssistantService.BundleLoading.End
CloudKit
CloudKit.Siri.ChangeArrived
CloudKit.Knowledge.ChangeArrived
IDS.DeviceConnection.Snapshot.Local
Analytics.Store.Database.PostCorruptionDetected
Analytics.Store.Database.OpenFailed
Analytics.Store.Database.IntegrityCheckFailed
Analytics.Store.Database.UnrecoverableErrorDetected
Analytics.Store.Database.PreparationFailed
LocalRecognition
LocalRecognition.Started
LocalRecognition.PartialResult
LocalRecognition.EagerCandidate
LocalRecognition.Package
LocalRecognition.Finished
AFKeyValueObserving.m
object != nil
[keyPath isKindOfClass:[NSString class]]
handler != nil
observer != nil
AFKeyValueObserver %p is expected to be invalid.
v16@?0@"AFKeyValueObserver"8
id<AFKeyValueObserving> AFKeyValueObservingCreate(__strong id, NSString *__strong, __strong AFKeyValueObservingHandler, AFKeyValueObservingDeliveryOptions *__strong)
_acousticFeatureValuePerFrame
_frameDuration
_speechRecognitionFeatures
_acousticFeatures
_snr
devices
product_type
context_type
recency
playstate
media_type
announce_state
serverCommandId
useAutomaticEndpointing
useStreamingDictation
isInitialBringUp
acousticIdEnabled
usePrelisteningMode
useBorealisBuffer
reloadSmartSiriVolume
hasNotifyState
hasAudioFileURL
bargeInOverHomeAnnouncementPlayback
bargeInOverSiriRequest
bargeInOverSiriVoiceOutput
bargeInOverFiringAlarm
bargeInOverFiringTimer
bargeInOverMediaPlayback
isMediaPlaying
mediaPlaybackVolume
isRecordedAudio
hasDirectAction
directActionEvent
directActionAppId
invocationIdentifier
hasDirectInvocation
AFAnalyticsContextCreateWithRequestInfo
hasHandoffRequestData
hasHandoffURLString
hasCorrectedSpeech
applicationVersion
languageCodeOverride
offlineLanguageCode
taskHint
languageDetectionContext
interactionId
turnId
AFAnalyticsTurnContextCreateWithRequestInfo
AFAnalyticsTurnContextCreateWithSpeechRequestOptions
@16@?0@"NSString"8
PersonalDevice
AFAnalyticsContextCreateForCrossDeviceCommandHandled_block_invoke
targetDevices
result
v32@?0@"NSString"8@"AFDeviceContext"16^B24
refId
-[SABaseAceObject(AnalyticsContextVending) af_addEntriesToAnalyticsContext:]
viewId
domain
utteranceView
dialogIdentifiers
views
dialogs
isWHA
bytes
v32@?0@"NSNumber"8@16^B24
code
underlyingError
smsInitiate
smsRead
smsCompose
smsReply
phoneInitiate
phoneCall
phoneVoicemail
acousticId
musicSmartPlayInitiate
musicSearch
mapsSearch
mapsSearchInNav
guideUpdateAndShow
appLaunch
weatherInitiate
calendarInitiate
newsInitiate
spokenNotificationInitiate
homeAnnouncementsRead
runVoiceShortcut
mapsShareEta
com.apple.siri.create
com.apple.siri.load
com.apple.siri.invoked
hardware_button
voice_trigger
com.apple.siri.settings
com.apple.message.siri.enabled
com.apple.message.dictation.enabled
Other
com.apple.siri.
-[AFAggregator recordSessionRetrySuccess]
com.apple.siri.RetrySuccess
com.apple.siri.WWAN.FallbackSuccess
+[AFAggregator logRequestCompletedWithDuration:]
com.apple.siri.RequestDurationLessThan1Second
com.apple.siri.RequestDuration1Second
com.apple.siri.RequestDuration2Seconds
com.apple.siri.RequestDuration3Seconds
com.apple.siri.RequestDuration4Seconds
com.apple.siri.RequestDuration5Seconds
com.apple.siri.RequestDuration6Seconds
com.apple.siri.RequestDuration7Seconds
com.apple.siri.RequestDuration8Seconds
com.apple.siri.RequestDuration9Seconds
com.apple.siri.RequestDurationOver10Seconds
com.apple.siri.context.missed.app
com.apple.siri.context.missed.alert
com.apple.siri.RequestCancel.LessThan1
com.apple.siri.RequestCancel.2Seconds
com.apple.siri.RequestCancel.3Seconds
com.apple.siri.RequestCancel.4Seconds
com.apple.siri.RequestCancel.5Seconds
com.apple.siri.RequestCancel.6Seconds
com.apple.siri.RequestCancel.7Seconds
com.apple.siri.RequestCancel.8Seconds
com.apple.siri.RequestCancel.9Seconds
com.apple.siri.RequestCancel.10Seconds
com.apple.siri.RequestCancel.11Seconds
com.apple.siri.RequestCancel.12Seconds
com.apple.siri.RequestCancel.13Seconds
com.apple.siri.RequestCancel.14Seconds
com.apple.siri.RequestCancel.15Seconds
com.apple.siri.RequestCancel.20Seconds
com.apple.siri.RequestCancel.25Seconds
com.apple.siri.RequestCancel.30Seconds
com.apple.siri.RequestCancel.35Seconds
com.apple.siri.RequestCancel.40Seconds
com.apple.siri.RequestCancel.40SecondsOrMore
%@.%ld.
%@.%ld
+[AFAggregator logRequestLaunchedApp]
com.apple.siri.SiriSucceeded
com.apple.siri.SiriCancelled
+[AFAggregator logSiriSpeechRequestStarted]
com.apple.siri.SiriStarted.Speech
+[AFAggregator logSiriOtherRequestStarted]
com.apple.siri.SiriStarted.Other
+[AFAggregator logSiriRequestFailedWithError:]
com.apple.siri.SiriFailed.
+[AFAggregator logSiriRequestSucceeded]
+[AFAggregator logSiriRequestCancelled]
+[AFAggregator logDictationStarted]
com.apple.siri.DictationStarted
+[AFAggregator logDictationFailedWithError:]
com.apple.siri.DictationFailed.
+[AFAggregator logDictationSucceeded]
com.apple.siri.DictationSucceeded
+[AFAggregator logDictationCancelled]
com.apple.siri.DictationCancelled
+[AFAggregator logDictationFollowedByContinueOccurredForLanguage:]
com.apple.siri.DictationFollowedByContinue.
+[AFAggregator logDictationFollowedByKeyboardInputOccurredForLanguage:]
com.apple.siri.DictationFollowedByKeyboardEntry.
+[AFAggregator logDictationFollowedByKeyboardDeleteOccurredForLanguage:]
com.apple.siri.DictationFollowedByKeyboardDelete.
+[AFAggregator logKeyboardInputFollowedByContinueOccurredForLanguage:]
com.apple.siri.KeyboardEntryFollowedByContinue.
+[AFAggregator logUILockCanceledVTActivation]
com.apple.siri.VTActivationCancel.UILocked
com.apple.siri.CreateAssistant
com.apple.siri.LoadAssistant
com.apple.siri.PingTimeout
+[AFAggregator logEnabledState:]
+[AFAggregator logLocalRecognitionAssetEvictedForLanguage:]
com.apple.siri.LocalRecognitionAssetEvicted.
com.apple.siri.LocalRecognitionStarted
com.apple.siri.LocalRecognitionSucceeded
com.apple.siri.LocalRecognitionLoaded.
com.apple.siri.LocalRecognitionWon.
com.apple.siri.LocalRecognitionLost.
com.apple.siri.DESRecording.
.%ld
com.apple.siri.DESEvaluation.
+[AFAggregator logCDMAssetEvictedForAssetType:language:]
com.apple.siri.CDMAssetEvicted.
com.apple.siri.BeepBringUp.HomeButton
com.apple.siri.PressToActivationDuration.HomeButton
com.apple.siri.Car.GateKeeper.Dismissed.Manual
+[AFAggregator(AssistantUI) logStarkGatekeeperDismissedManuallyForType:]
com.apple.siri.Car.GateKeeper.Appeared
+[AFAggregator(AssistantUI) logStarkGatekeeperAppearedForType:]
Messages
Maps
Cold.
Unknown.
WiFi.
WWAN.
MPTCP.
LedBelly.
POP.
IDS.
Florence.
Local.
ResponseLessThan1Second
Response1Second
Response2Seconds
Response3Seconds
Response4Seconds
Response5Seconds
Response6Seconds
Response7Seconds
Response8Seconds
Response9Seconds
ResponseOver10Seconds
Failed
Dropped
push
attached
-[AFSiriTether waitForAttachment:]
-[AFSiriTether _connection]
-[AFSiriTether _attach:]
attach
-[AFSiriTether _attach:]_block_invoke
-[AFSiriTether _attachmentStatusUpdate:]
-[AFSiriTether _listenForLaunchNotification]
itemURL
itemData
numberOfLoops
fadeInDuration
fadeOutDuration
itemURL = %@
itemData = (%ld bytes)
numberOfLoops = %@
volume = %@
fadeInDuration = %@
fadeOutDuration = %@
AFAudioPlaybackRequest::itemURL
AFAudioPlaybackRequest::itemData
AFAudioPlaybackRequest::numberOfLoops
AFAudioPlaybackRequest::volume
AFAudioPlaybackRequest::fadeInDuration
AFAudioPlaybackRequest::fadeOutDuration
AFAudioPlaybackRequest::userInfo
extension
extension = %@
AFBundleResource::name
AFBundleResource::extension
false
SiriResponseRequestIdentifier
Alarm
AssistantDirectActionEventKey
AssistantDirectActionEventMessagesConversationKey
AssistantDirectActionEventMessagesConversationGUIDKey
AssistantDirectActionEventMessagesFullNameKey
AssistantDirectActionEventMessagesAddressKey
AFDirectActionEventUnknown
AFDirectActionEventMessagesAmbiguous
AFDirectActionEventMessagesCompose
AFDirectActionEventMessagesComposeNewThread
AFDirectActionEventMessagesRead
AFDirectActionEventMessagesReply
AFDirectActionEventMapsSearch
AFDirectActionEventMusicSearch
AFDirectActionEventGuideUpdate
AFDirectActionEventCalendar
AFDirectActionEventWeather
AFDirectActionEventNews
AFDirectActionEventPhoneAmbiguous
AFDirectActionEventPhoneCall
AFDirectActionEventPhoneVoicemail
AFDirectActionEventAppLaunch
AFDirectActionEventHomeAnnouncementsRead
AFDirectActionEventRunVoiceShortcut
AFDirectActionEventMapsShareETA
Invalid direct action event
AFDirectActionSourceUnknown
AFDirectActionSourceStark
AFDirectActionSourceStarkAppProxy
AFDirectActionSourceStarkNotification
Invalid direct action source
SKIMessagesInvocation
/System/Library/PrivateFrameworks/SiriKitInvocation.framework/SiriKitInvocation
SKIPhoneInvocation
SKIVoiceShortcutsInvocation
SKIMapsInvocation
SKIMusicInvocation
x-sampmedentity
x-sampmeditem
x-sampcollection
x-sampgeniusmix
x-sampplaylist
x-sampcollection-album
x-sampcollection-artist
x-sampcollection-genre
x-sampcollection-title
x-sampcollection-audiobook
x-sampcollection-podcast
x-sampradiotrack
x-sampradio
device
multiverse
store
external
AFValidatedNowPlayingInfo_block_invoke
v32@?0@"NSString"8#16^B24
-[SAMPQueueState(SiriMediaRemoteHelpers) _af_setNowPlayingInfo:]
-[SAMPQueueState(SiriMediaRemoteHelpers) _af_validateAndFinalize]
AFPerformDeviceVolumeAction_block_invoke
v12@?0C8
v16@?0^{__CFArray=}8
AFMediaRemoteSendCommandWithOptions_block_invoke_3
v16@?0@"SACommandFailed"8
v24@?0@"<SAAceCommand>"8@"NSError"16
AFMediaRemoteSendCommandWithOptions_block_invoke
AFGetCurrentItemAdamIDFromNowPlayingInfo
kMRPlaybackStateUnknown
kMRPlaybackStatePlaying
kMRPlaybackStatePaused
kMRPlaybackStateStopped
kMRPlaybackStateInterrupted
kMRPlaybackStateSeeking
<Unknown MRPlaybackState:%u>
AFGetNowPlayingQueueState_block_invoke
v16@?0@"NSString"8
AFLanguageOptionsForNowPlayingInfo
_AFGetPlaybackState
_AFGetPlaybackState_block_invoke_2
_AFGetPlaybackState_block_invoke
v24@?0@"MRNowPlayingPlayerResponse"8@"NSError"16
v12@?0I8
_AFGetNowPlayingApplicationIdentifier_block_invoke_2
_AFGetNowPlayingApplicationIdentifier_block_invoke
_AFGetNowPlayingInfoDictionary_block_invoke_2
v40@?0@"NSArray"8{?=qq}16@"NSError"32
_DeviceIdFromNowPlayingInfo
_ListeningToContainerFromNowPlayingInfo
_AddSanitizedKeyAndValueToListeningToContainer
_AFLocalGetMediaPlaybackVolumeNoCheck_block_invoke
v12@?0f8
_AFLocalSetVolumeActionNoCheck_block_invoke
v16@?0^{__CFError=}8
_CheckForSpecialFailureCodesForCurrentlyDisabledMRCommand
_CheckForSpecialFailureCodesForCurrentlyDisabledMRCommand_block_invoke
_AFAddNowPlayingItemInfoToQueue_block_invoke
_LogNowPlayingInfo
_AFAddPlaybackStateToQueue
_AFAddPlaybackStateToQueue_block_invoke
CSAudioSessionController
initCSAudioSessionController_block_invoke
AFMediaRemoteUtilities.m
classCSAudioSessionController
AVAudioSession
initAVAudioSession_block_invoke
classAVAudioSession
/System/Library/Frameworks/AVFoundation.framework/Frameworks/AVFAudio.framework/AVFAudio
AVFAudioLibrary
_AFGetNowPlayingMediaContentItmes
Options
Criteria
-[AFClockTimerSnapshot(Utility) firingTimers]_block_invoke
v32@?0@"NSUUID"8@"AFClockTimer"16^B24
AFClockIsFiringTimerValid
Call
call
startAnnouncing
startMuted
ignoreReset
continuation
direct
emergency
inEar
other
slowDown
suppressLate
voice
currentOrUpNextDateInterval
isAudioSessionActive
localActiveAssertionContexts
localPendingAssertionContexts
remoteActiveAssertionContexts
remotePendingAssertionContexts
localDevice
remoteQualifiedInRangeDevices
remoteQualifiedOutOfRangeDevices
remoteDisqualifiedDevices
currentOrUpNextDateInterval = %@
isAudioSessionActive = %@
localActiveAssertionContexts = %@
localPendingAssertionContexts = %@
remoteActiveAssertionContexts = %@
remotePendingAssertionContexts = %@
localDevice = %@
remoteQualifiedInRangeDevices = %@
remoteQualifiedOutOfRangeDevices = %@
remoteDisqualifiedDevices = %@
AFAudioSessionCoordinationSnapshot::currentOrUpNextDateInterval
AFAudioSessionCoordinationSnapshot::isAudioSessionActive
AFAudioSessionCoordinationSnapshot::localActiveAssertionContexts
AFAudioSessionCoordinationSnapshot::localPendingAssertionContexts
AFAudioSessionCoordinationSnapshot::remoteActiveAssertionContexts
AFAudioSessionCoordinationSnapshot::remotePendingAssertionContexts
AFAudioSessionCoordinationSnapshot::localDevice
AFAudioSessionCoordinationSnapshot::remoteQualifiedInRangeDevices
AFAudioSessionCoordinationSnapshot::remoteQualifiedOutOfRangeDevices
AFAudioSessionCoordinationSnapshot::remoteDisqualifiedDevices
keepsHistory
historyBufferSize
keepsHistory = %@
historyBufferSize = %@
AFDeviceContextHistoryConfiguration::keepsHistory
AFDeviceContextHistoryConfiguration::historyBufferSize
associatedBundleIdentifier
bulletin
aceContext
contextDictionary
aceContexts
associatedBundleIdentifier = %@
bulletin = %@
aceContext = %@
contextDictionary = %@
aceContexts = %@
AFApplicationContext::associatedBundleIdentifier
AFApplicationContext::bulletin
AFApplicationContext::aceContext
AFApplicationContext::contextDictionary
AFApplicationContext::aceContexts
inCase
outOfEar
transparency
sharedUserId
sharedUserId = %@
confidenceScore = %@
AFSharedConfidenceScore::sharedUserId
AFSharedConfidenceScore::confidenceScore
-[AFAudioPowerUpdater _getPowerWithCompletion:]
handsFree
hearst
rhodes
stark
voiceOnly
watch
-[AFNotifyStatePublisher initWithName:queue:]
-[AFNotifyStatePublisher _setState:withToken:]
-[AFNotifyStatePublisher _getState:withToken:]
-[AFNotifyStatePublisher _register]
-[AFNotifyStatePublisher _unregister]
invocation_feedback_experiment
featureGroups
awake
asleep
<%@: %p; handle=%@ (%@)>
_handle
<%@: %p; fullName=%@ contactHandles=%@>
_contactHandles
_fullName
com.apple.bluetooth.WirelessSplitterOn
-[AFBluetoothWirelessSplitterSessionStateObserver initWithQueue:delegate:]_block_invoke
-[AFBluetoothWirelessSplitterSessionStateObserver notifyObserver:didReceiveNotificationWithToken:]_block_invoke
-[AFBluetoothWirelessSplitterSessionStateObserver notifyObserver:didChangeStateFrom:to:]_block_invoke
-[AFBluetoothWirelessSplitterSessionStateObserver _setState:]
-[AFDeviceContextConnection dealloc]
-[AFDeviceContextConnection initWithQueue:instanceContext:delegate:]
-[AFDeviceContextConnection donateSerializedContextMapByPrivacyClass:withMetadataMap:forType:pushToRemote:completion:]_block_invoke
-[AFDeviceContextConnection _xpcConnection]
-[AFDeviceContextConnection _handleXPCConnectionInvalidation]
-[AFDeviceContextConnection _handleXPCConnectionInterruption]
-[AFDeviceContextConnection _clearXPCConnection]
-[AFDeviceContextConnection _invalidate]
-[AFDeviceContextConnection _remoteServiceWithErrorHandler:]
-[AFDeviceContextConnection _fetchLocalDeviceContextWithCompletion:]
-[AFDeviceContextConnection _fetchLocalDeviceContextWithCompletion:]_block_invoke
v16@?0@"AFDeviceContext"8
-[AFDeviceContextConnection _beginUpdateLocalDeviceContext]
-[AFDeviceContextConnection _beginUpdateLocalDeviceContext]_block_invoke
-[AFDeviceContextConnection _endUpdateLocalDeviceContext]
-[AFDeviceContextConnection _endUpdateLocalDeviceContext]_block_invoke
-[AFDeviceContextConnection _updateLocalDeviceContext:]
-[AFAppContextAggregator aggregateContextWithRawOutputForAppWithBundleIdentifier:contextProvider:deliveryHandler:completionHandler:]
-[AFAppContextAggregator aggregateContextWithRawOutputForAppWithBundleIdentifier:contextProvider:deliveryHandler:completionHandler:]_block_invoke
v16@?0@"STSiriContext"8
v24@?0@"SASetApplicationContext"8@"STSiriContext"16
SiriDomains
SiriDisambiguationDomains
SiriProviderDomains
/Library/Assistant/UIPlugins
AFClientPluginManager.m
Plugin factory %@ must return a new allocated instance of id<AFSpeakableNamespaceProvider> from speakableNamespaceProviderForAceObject:
instance must conform to AFSpeakableNamespaceProvider, %@
v24@?0@8^B16
com.apple.assistant.analytics-observation.connection
-[AFAnalyticsObserverConnection initWithObservation:]_block_invoke_2
-[AFAnalyticsObserverConnection flushWithCompletion:]
-[AFAnalyticsObserverConnection flushWithCompletion:]_block_invoke_2
-[AFAnalyticsObserverConnection flushWithCompletion:]_block_invoke
-[AFAnalyticsObserverConnection _connectionInterrupted]
-[AFAnalyticsObserverConnection _connectionInvalidated]
sleepState
sleepState = %ld (%@)
AFSystemStateSnapshot::sleepState
applicationContexts
applicationContexts = %@
AFApplicationContextSnapshot::applicationContexts
hexColor
colorName
alpha
localizedOutputVoiceColor
localizedOutputVoice
hexColor = %@
colorName = %@
alpha = %@
localizedOutputVoiceColor = %@
localizedOutputVoice = %@
AFOutputVoiceColorDescriptor::hexColor
AFOutputVoiceColorDescriptor::colorName
AFOutputVoiceColorDescriptor::alpha
AFOutputVoiceColorDescriptor::localizedOutputVoiceColor
AFOutputVoiceColorDescriptor::localizedOutputVoice
com.apple.siri.client-state-manager
-[AFSiriClientStateManager initWithInstanceContext:]
-[AFSiriClientStateManager endTransaction]_block_invoke
-[AFSiriClientStateManager getCurrentStateWithCompletion:]_block_invoke_2
-[AFSiriClientStateManager _removeStateForClient:]
-[AFSiriClientStateManager _aggregateStatesAndPublishIfNeeded]
-[AFSiriClientStateManager _aggregateStatesAndPublishIfNeeded]_block_invoke
Q16@?0Q8
-[AFSiriClientStateManager _beginPresentationTransition]
-[AFSiriClientStateManager _beginPresentationTransition]_block_invoke
Timeout
-[AFSiriClientStateManager _endPresentationTransitionForReason:]
action
local_request
start_request
start_local_request
request_options
activation_context
activation_result
notification
source_app_id
announcement_platform
incoming_call
deactivation_reason
-[AFSiriHomeAutomationBackgroundRequest initWithRequestInfo:instanceContext:]
-[AFSiriHomeAutomationBackgroundRequest performRequestWithCompletion:]
com.apple.assistant.home-announcement-observer
v24@?0Q8@"AFHomeAnnouncement"16
client request without cache
-[AFHomeAnnouncementObserver _setUp]
-[AFHomeAnnouncementObserver _tearDown]
-[AFHomeAnnouncementObserver _fetchStateAndLastPlayedAnnouncementForReason:completion:]
-[AFHomeAnnouncementObserver _handleNotifyStateChangeFrom:to:]
-[AFHomeAnnouncementObserver _updateState:]
v16@?0@"<AFHomeAnnouncementListening>"8
-[AFHomeAnnouncementObserver _updateLastPlayedAnnouncement:]
-[AFHomeAnnouncementObserver _updateSnapshot:]
v32@?0@"NSString"8@"SASAcousticFeature"16^B24
utterance
beginTimestamp
endTimestamp
utterance = %@
beginTimestamp = %@
endTimestamp = %@
AFSpeechSynthesisRecord::utterance
AFSpeechSynthesisRecord::beginTimestamp
AFSpeechSynthesisRecord::endTimestamp
homeIdentifier
activityNotificationsEnabledForPersonalRequests
homeIdentifier = %@
activityNotificationsEnabledForPersonalRequests = %@
AFHomeInfo::homeIdentifier
AFHomeInfo::activityNotificationsEnabledForPersonalRequests
translation
sharing
HomeKit
homeDeviceSetup
pineBoard
watchSetup
carousel
dictation
recordRoute
isVoiceTrigger
isDucking
isTwoShot
speechEndHostTime
languageCode = %@
gender = %@
recordRoute = %@
isVoiceTrigger = %@
isDucking = %@
isTwoShot = %@
speechEndHostTime = %@
AFInterstitialConfiguration::style
AFInterstitialConfiguration::languageCode
AFInterstitialConfiguration::gender
AFInterstitialConfiguration::recordRoute
AFInterstitialConfiguration::isVoiceTrigger
AFInterstitialConfiguration::isDucking
AFInterstitialConfiguration::isTwoShot
AFInterstitialConfiguration::speechEndHostTime
optedIn
optedOut
dismissed
doubleTap
voiceActivity
voiceTrigger
raiseToSpeak
boronSignal
press
release
triggerless
inEarDetection
bluetoothVoiceRecognitionActivation
hardwareTrigger
voiceKeyword
continuousVoiceTrigger
remotePresentation
multiUserSharedUserIdKey
multiUserConformingSharedUserIdKey
com.apple.assistant.multiuser.connection
-[AFMultiUserConnection _clearConnection]
-[AFMultiUserConnection _multiUserServiceWithErrorHandler:]
-[AFMultiUserConnection getHomeUserIdForSharedUserId:completion:]
-[AFMultiUserConnection getFirstNameForSharedUserId:completion:]
-[AFMultiUserConnection getSharedUserIdForHomeUserId:completion:]
-[AFMultiUserConnection getSharedUserProfileLimitWithCompletion:]
-[AFMultiUserConnection getConformingSharedUserIdForHomeUserId:completion:]
-[AFMultiUserConnection getConformingSharedUserIds:]
-[AFMultiUserConnection getMultiUserSettingsForSharedUserID:completion:]
-[AFMultiUserConnection getMultiUserSettingsForSharedUserID:completion:]_block_invoke_2
-[AFMultiUserConnection getHomeUserIdOfRecognizedUserWithCompletion:]
-[AFMultiUserConnection getHomeUserIdOfRecognizedUserWithCompletion:]_block_invoke_2
-[AFMultiUserConnection getPreferredMediaUserHomeUserIDWithCompletion:]
-[AFMultiUserConnection getPreferredMediaUserHomeUserIDWithCompletion:]_block_invoke_2
-[AFMultiUserConnection homeUserIdToNames:]
-[AFMultiUserConnection homeUserIdToNames:]_block_invoke_2
ModelObjects
-[STSiriContext _aceValue]
Unknown.%ld
instrumentation.
_deliveryStream
_contextDataType
_contextData
_assistantId
UNKNOWN_EVENT
UEI_CLIENT_EVENT
UEI_SERVER_EVENT
DAILY_DEVICE_STATUS
MT_CLIENT_EVENT
PROACTIVE_EVENT_TRACKER
ORDERED_ANY_EVENT
PROVISIONAL_EVENT
SIRI_UNDER_TEST_EVENT
REQUEST_LINK_EVENT
ABE_CLIENT_EVENT
ABE_SERVER_EVENT
FLOW_SERVER_EVENT
FLOW_CLIENT_EVENT
CAM_CLIENT_EVENT
UNIFIED_SIRI_PERFORMANCE_EVENT
GRR_CLIENT_EVENT
DIM_CLIENT_EVENT
NLX_CLIENT_EVENT
ORCH_CLIENT_EVENT
ASR_CLIENT_EVENT
DATA_UPLOAD_EVENT
IH_CLIENT_EVENT
MH_CLIENT_EVENT
TTS_CLIENT_EVENT
CLP_CLIENT_EVENT
RR_CLIENT_EVENT
CNV_CLIENT_EVENT
ANC_CLIENT_EVENT
ANC_SERVER_EVENT
DELETE_HISTORY_TRIGGER_SERVER_EVENT
HAL_CLIENT_EVENT
NET_CLIENT_EVENT
SAD_CLIENT_EVENT
DFI_DATA_EVENT
SERVER_ORDERED_ANY_EVENT
SERVER_REQUEST_LINK_EVENT
DODML_CLIENT_EVENT
PLUS_CLIENT_EVENT
EXP_SEARCH_CLIENT_EVENT
EXP_SIRI_CLIENT_EVENT
POMMES_CLIENT_EVENT
MT_CLIENT_EVENT_V2
CDA_CLIENT_EVENT
MWT_CLIENT_EVENT
HOME_CLIENT_EVENT
OPT_IN_CHANGELOG_CLIENT_EVENT
OPT_IN_PROPAGATION_CLIENT_EVENT
RSS_CLIENT_EVENT
_settingChanges
actionType
actionType = %ld (%@)
error = %@
AFSiriActivationResult::actionType
AFSiriActivationResult::error
executionID
originPeerInfo
currentHomeInfo
endpointInfo
instanceInfo
speechInfo
requestHandlingContextSnapshot
deviceRestrictions
executionID = %@
turnId = %@
originPeerInfo = %@
currentHomeInfo = %@
endpointInfo = %@
instanceInfo = %@
speechInfo = %@
requestHandlingContextSnapshot = %@
deviceRestrictions = %@
AFCommandExecutionInfo::executionID
AFCommandExecutionInfo::requestID
AFCommandExecutionInfo::turnId
AFCommandExecutionInfo::originPeerInfo
AFCommandExecutionInfo::currentHomeInfo
AFCommandExecutionInfo::endpointInfo
AFCommandExecutionInfo::instanceInfo
AFCommandExecutionInfo::speechInfo
AFCommandExecutionInfo::requestHandlingContextSnapshot
AFCommandExecutionInfo::deviceRestrictions
AFCommandExecutionInfo::userInfo
Library/Assistant
Library/Keyboard
System/Library/Assistant
Plugins
PresentationPlugins
amos
committed=yes
Installed
High Quality
Continuous Listening
On Device Search
assistant
Version: %@
Version:
Version: HQ:
Installing
Waiting to Install
: HQ:
: CL:
: DS:
 AssetId=
OfflineDictationCapability
DeviceName
 Simulator
UserAssignedDeviceName
ProductName
BuildVersion
ProductVersion
PPTDevice
cellular-data
HasBaseband
telephony
8S7ydMJ4DlCUF38/hI/fJA
AFAccessibilitySupportsAttentionAwareFeatures
wapi
ipad
DeviceClassNumber
AFMyriadEmitSelfMetrics
AFMyriadEmitClassicMetrics
watch-companion
StarkCapability
NRWatchOSVersion
NRVersionIsGreaterThanOrEqual
main-screen-scale
DeviceColor
DeviceEnclosureColor
AppleInternal/Library/Assistant/InternalConfig.plist
com.apple.Carousel
_AFDictationLanguageForKeyboardLanguageAndConfiguration
+N9mZUAHooNvMiQnjeTJ8g
U+73bmG4kBGj6kpreQXUTQ
DeviceSupportsAOP
DeviceSupportsSiriBargeIn
DeviceSupportsUSBTypeCDisplay
RegionCode
0AJUv/uYPsRiZNGpWJ7zfg
kern.boottime
AFSystemGetBootTimeInMicroseconds_block_invoke
AFAddInterruptingAudioSessionInfoToAnalyticsContext
kAudioSessionProperty_ActiveSessionDisplayIDs
No displayIDs found, but success reported
Terminated
Suspended
BackgroundRunning
ForegroundRunning
ProcessServer
RunningObscured
SnippetName
SnippetDomain
SnippetAction
SnippetAceId
PunchoutApp
NSSiriUsageDescription
NSSpeechRecognitionUsageDescription
FlashlightLevel
com.apple.springboard
76,8194
76,8195
76,8197
76,8198
76,8201
76,8208
BTHeadphones
76,8202
76,8203
76,8204
76,8205
76,8206
76,8207
76,8210
76,8211
Speaker
Receiver
BluetoothDoAP
bluetooth
SFSpeech
x-apple-siri-announce-notification
application-identifier
com.apple.assistant.assistantd
assistant_service
AFDeviceSetupIsActive
15.0
15.1
15.2
com.apple.siri.bundleservicecache.plist
_AXSAttentionAwarenessFeaturesEnabled
init_AXSAttentionAwarenessFeaturesEnabled
AFUtilities.m
softLink_AXSAttentionAwarenessFeaturesEnabled
/System/Library/Frameworks/Accessibility.framework/Accessibility
AccessibilityLibrary
/System/Library/PrivateFrameworks/NanoRegistry.framework/NanoRegistry
NRPairedDeviceRegistry
initNRPairedDeviceRegistry_block_invoke
classNRPairedDeviceRegistry
NRDevicePropertyDeviceBrand
initNRDevicePropertyDeviceBrand_block_invoke
NRDevicePropertyIsAltAccount
initNRDevicePropertyIsAltAccount_block_invoke
_AFHandleSignalByExitingCleanly
_AFSpecificFallbackForLanguage
Language Fallbacks
zh-SG
zh-Hant
ja-Hira
ja-Hrkt
ja-Jpan
ja-Hani
ja-Kana
ja-Latn
yue-Hant
_AFMachAbsoluteTimeRate_block_invoke
InfoPlist
BluetoothManager
initBluetoothManager_block_invoke
classBluetoothManager
BBGetObserverGatewayTimeout
/System/Library/PrivateFrameworks/BulletinBoard.framework/BulletinBoard
nowPlayingTimestamp
mediaType
isProxyGroupPlayer
playbackState = %ld (%@)
nowPlayingTimestamp = %@
mediaType = %@
groupIdentifier = %@
isProxyGroupPlayer = %@
AFMediaPlaybackStateSnapshot::playbackState
AFMediaPlaybackStateSnapshot::nowPlayingTimestamp
AFMediaPlaybackStateSnapshot::mediaType
AFMediaPlaybackStateSnapshot::groupIdentifier
AFMediaPlaybackStateSnapshot::isProxyGroupPlayer
input
understanding
intentHandler
presentation
isPlaying
v24@?0Q8^B16
-[AFMyriadAdvertisementContextManager pushMyriadAdvertisementContext:completionHandler:]_block_invoke
-[AFMyriadAdvertisementContextManager pushMyriadAdvertisementContext:completionHandler:]_block_invoke_2
v32@?0@"AFPeerContentTuple"8Q16^B24
-[AFMyriadAdvertisementContextManager triggerABCForType:subType:context:]_block_invoke_2
-[AFMyriadAdvertisementContextManager reset]
_triggerlessListeningOptions
triggerlessListeningOptions: %@
_pid
%@ %@ %d
com.apple.myriad_emergncy_call
-[AFMyriadEmergencyCallPunchout initiateEmergencyCallMyriad]
alarmID
alarmURL
hour
minute
repeatOptions
isSnoozed
alarmID = %@
alarmURL = %@
type = %lu [%@]
hour = %@
minute = %@
repeatOptions = %lu [%@]
isSnoozed = %@
AFClockAlarm::alarmID
AFClockAlarm::alarmURL
AFClockAlarm::isFiring
AFClockAlarm::title
AFClockAlarm::type
AFClockAlarm::hour
AFClockAlarm::minute
AFClockAlarm::repeatOptions
AFClockAlarm::isEnabled
AFClockAlarm::isSnoozed
AFClockAlarm::firedDate
AFClockAlarm::dismissedDate
AFClockAlarm::lastModifiedDate
audioSessionID
audioSessionID = %@
AFSetAudioSessionActiveResult::audioSessionID
AFSetAudioSessionActiveResult::error
AFContextDonationService
-[AFContextDonationService donateContext:withMetadata:pushToRemote:completion:]_block_invoke_2
v24@?0@"<AFContextSnapshot>"8@"AFDeviceContextMetadata"16
isDeviceOwnedByCurrentUser
sharedUserIdentifier
idsIdentifier
idsDeviceUniqueIdentifier
rapportEffectiveIdentifier
homeKitAccessoryIdentifier
isCommunalDevice
userInterfaceIdiom
aceVersion
isDeviceOwnedByCurrentUser = %@
sharedUserIdentifier = %@
idsIdentifier = %@
idsDeviceUniqueIdentifier = %@
rapportEffectiveIdentifier = %@
homeKitAccessoryIdentifier = %@
isCommunalDevice = %@
productType = %@
userInterfaceIdiom = %@
aceVersion = %@
AFPeerInfo::isDeviceOwnedByCurrentUser
AFPeerInfo::assistantIdentifier
AFPeerInfo::sharedUserIdentifier
AFPeerInfo::idsIdentifier
AFPeerInfo::idsDeviceUniqueIdentifier
AFPeerInfo::rapportEffectiveIdentifier
AFPeerInfo::homeKitAccessoryIdentifier
AFPeerInfo::mediaSystemIdentifier
AFPeerInfo::mediaRouteIdentifier
AFPeerInfo::isCommunalDevice
AFPeerInfo::roomName
AFPeerInfo::name
AFPeerInfo::productType
AFPeerInfo::buildVersion
AFPeerInfo::userInterfaceIdiom
AFPeerInfo::aceVersion
processIdentifier = %@
processName = %@
AFClientInfo::processIdentifier
AFClientInfo::processName
sleep
-[AFPeerMap _getUUIDAndUpdateIDMapsForPeerInfo:]
v24@?0@"NSMutableDictionary"8@"NSString"16
RemoteResponseListenerEndpoint
RemoteUsageResultListenerEndpoint
-[AFSiriTask _initWithRequest:remoteResponseListenerEndpoint:usageResultListenerEndpoint:]
-[AFSiriTask dealloc]
 request=
-[AFSiriTask _responseHandlerConnection]
-[AFSiriTask failWithError:]
-[AFSiriTask failWithError:]_block_invoke
-[AFSiriTask completeWithResponse:]
-[AFSiriTask completeWithResponse:]_block_invoke
-[AFSiriTask reportUsageResult:]
-[AFSiriTask reportUsageResult:]_block_invoke
-[AFSiriTask initWithXPCDictionary:]
AFAccessibilityObserver
v16@?0@"<AFAccessibilityStateMutating>"8
kAXSVoiceOverTouchEnabledNotification
initkAXSVoiceOverTouchEnabledNotification_block_invoke
AFAccessibilityObserver.m
/usr/local/lib/libAccessibility.dylib
/usr/lib/libAccessibility.dylib
libAccessibilityLibrary
kAXSVibrationDisabledPreferenceDidChangeNotification
initkAXSVibrationDisabledPreferenceDidChangeNotification_block_invoke
_AXSVoiceOverTouchEnabled
init_AXSVoiceOverTouchEnabled
softLink_AXSVoiceOverTouchEnabled
_AXSVibrationDisabled
init_AXSVibrationDisabled
softLink_AXSVibrationDisabled
?333333
ffffff
@ffffff
!$'*-03639<?B33EH33KN
EPYTATAD!DNE!ECA!FER
MbP?
ffffff.@
zt?33
"%(+.
!$'*-03
!$'*-036
!$'*-036
!$'*-036
!$'*-036
!$'*-036
!$'*-036
!$'*-036
!$'*-036
!$'*-036
?333333
!$'*-0
!$'*-036
!$'*-03
!$'*-0369<?BEHKNQTWZ]`cfilorux{~
%s %p (instanceContext = %@, caller = %@)
%s %p
%s %p (requestClass = %@, isSpeechRequest = %d (%@), isBackgroundRequest = %d)
%s command = %@
%s Enqueued command %@ because it is an interstitial and active request has not presented UUFR yet.
%s Ignored command %@ because it is an interstitial but there's no active request or active request has presented UUFR already.
%s command = %@, isInterstitial = %d
%s %s
UICommandHandle
%s interstitialPhase = %@
%s interstitialDelay = %f (expected)
%s durationFromSpeechRecordingEnd = %f
%s durationFromSpeechRecognition = %f
%s durationFromSpeechEnd = %f
%s durationFromRequestBegin = %f
%s interstitialDelay = %f (actual)
%s Initial interstitial fired too early!
%s Drop command %@ because UUFR has been presented.
%s Dispatching command %@
%s no delegate method on %@ to handle command: %@
%s shouldSpeak = %d
%s Prepared for input audio power updates. Waiting for _speechCallbackGroup...
%s Started input audio power updates.
%s Stopped input audio power updates.
%s audioSessionID = %lu
%s recordRoute = %@
%s Unable to mark isDucking because the active request is not a speech request. (_activeRequestType = %zd, _activeRequestUUID = %@)
%s Unable to mark isTwoShot because the active request is not a speech request. (_activeRequestType = %zd, _activeRequestUUID = %@)
%s Unable to mark speech recognized because the active request is not a speech request. (_activeRequestType = %ld, _activeRequestUUID = %@)
%s No interstitial has been presented yet, adjusting timings based on updated speech end host time %llu.
%s Skipped timing adjustment because 1 interstitial has been presented.
%s Skipped timing adjustment because %lu interstitials have been presented.
%s Unable to update speech end host time. (_activeRequestType = %zd, _activeRequestUUID = %@)
%s requestUUID = %@, turnId = %@, reason %ld, error = %@
%s Dropping delegate callback because request is complete
%s Dropping delegate callback because request is different (_activeRequestUUID = %@, requestUUID = %@, turnId = %@)
%s Resetting isCapturingSpeech for %@ for reason: %ld
%s Reporting speech error on connection tear down
%s Connection invalidated
%s Connection interrupted
%s Scheduling request timeout for %f seconds for reason %@
%s Invoking request timeout for reason %@
%s Pausing request timeout for reason %@
%s Resuming request timeout for reason %@
%s Canceling request timeout for reason %@
%s reason = %@
%s Updated internal state. ShouldSpeak %@
%s Updated internal state. AudioSessionID %@
%s %p %@ %d (%@)
%s Logging TurnMTE From _willStartRequestWithSpeech
%s Emitting Request link message between turnID: %@ and RequestID: %@
%s %p %@
%s %p activeRequestUUID = %@ turnId = %@ %@
%s Wrapping up non-siri error in generic error %@
%s Appending additional details to error %@
%s %p %ld
%s Initial interstitial fired %f seconds right before UUFR!
%s phase = %@, displayText = %@, speakableText = %@, expectedDelay = %f, context = %@
%s Unable to create an interstitial command because display text and speakable text are both empty.
%s interstitialCommand = %@
%s interstitialReply = %@
%s interstitialError = %@
%s Network is available. Evaluating AFConnection as available.
%s Network is not available but device supports Understanding On Device for %@. Evaluating AFConnection as available.
%s Network is not available and language %@ is not supported for Understanding On Device. Evaluating AFConnection as NOT available.
%s Network is not available and device does not support Understanding On Device. Evaluating AFConnection as NOT available.
%s Begin sending defrost XPC message.
%s End sending defrost XPC message.
%s %p %ld %@
%s ErrorHandler %{public}@
%s %p %lu
%s Received reply.
%s Overriding activation event in info %@ %@
%s Complete %@
%s Continuing pending speech request %p
%s Failed continuing pending speech request %p %{public}@
%s %@ %@
%s reason = %ld
%s passed command without ACE ID; inventing one (%@)
%s Performing BackgroundUpdateRequest outside normal request processing flow.
UsefulUserFacingResults
%s Fail to start audio playback request %{public}@ due to error %{public}@.
%s Delaying delivery of client command %@ by %f seconds...
%s Delayed delivery of client command %@ by %f seconds.
%s Dropping delayed client command %@ because request already ended.
%s Unexpected nil bundle ID
%s Unexpected nil URL
%s %@ Got dismiss assistant message
%s %@ Got dismiss assistant message with reason : %ld
%s %@ Got quick stop handled message with actions %tu taken.
%s Logging uufr for phase= %@
%s error is nil. Instrumentation logging is skipped. requestUUID = %@ turnId = %@
%s turnId is nil. Instrumentation logging is skipped. requestUUID = %@ error = %@
%s Logging instrumentation for requestUUID = %@ turnId = %@ error = %@
%s turnId is nil. Instrumentation logging is skipped. requestUUID = %@
%s speechRequestOptions is nil. Instrumentation logging is skipped. requestUUID = %@ turnId = %@
%s Logging instrumentation for requestUUID = %@ turnId = %@ HomePod launch: (startTime = %llu endTime = %llu)
%s %p (style = %@, recordRoute = %@, isVoiceTrigger = %d, isDucking = %d, isTwoShot = %d, speechEndHostTime = %llu, context = %@, preferences = %@)
%s No language preference, using best supported language: %@
%s configuration = %@, context = %@
%s phase = %@, displayText = %@, speakableText = %@, expectedDelay = %f
%s duration = %f
%s configuration = %@
%s initialInterstitialDelay = %f
%s delayBeforeInitial = %f
%s initialInterstitialDelayForVoiceTriggerOneShotWithoutAudioDucking = %f
%s delayBeforeInitial = %f (adjustment based on speech request info for Hearst)
%s delayBeforeInitial = %f (adjustment based on end-of-speech info)
%s delayBeforeInitial = %f (adjustment for frontend UI)
%s %{private}@
%s Using conversation guid: %{private}@
%s %@
%s returning nil; passed invalid property list (%{public}@): %@
%s unable to deserialize property list with version %{public}ld; returning nil
%s returning nil; unable co create associated data store from property list %@
%s Error accessing remote proxy: %@
%s cleared connection: %@
%s created new connection: %@
%s %p {%@}
%s context = %@
%s assertionUUID = %@, context = %@, options = %@
%s assertionUUID = %@, error = %@, options = %@
%s matchedAssertionUUIDs = %@
%s error = %@
%s numberOfPendingAndActiveAssertions is %lld
%s numberOfActiveAssertions is %lld
%s assertion = %@
%s effectiveDate = %@
%s effectiveTimeIntervalSinceNow = %f
%s expirationDuration = %f
%s %@ contains invalid expiration duration %f.
%s %@ expired %f seconds ago.
%s numberOfAssertions: %llu -> %llu
%s isFirstAssertion = %d
%s Activating %@ now...
%s Activating %@ in %f seconds...
%s assertionUUID = %@
%s numberOfActiveAssertions: %llu -> %llu
%s Deactivating %@ now...
%s expirationTimeIntervalSinceNow = %f
%s Deactivating %@ in %f seconds...
%s assertionUUID = %@, context = %@, error = %@, options = %@
%s Skipped deactivating %@ because it is active and requested inactive only.
%s isLastAssertion = %d
%s Couldn't create speech log directory at path %{public}@ %{public}@
%s Couldn't create analytics log directory at path %{public}@ %{public}@
%s Nothing to do on non-internal install
%s Removing speech log %@ %@
%s Finished, and removed %ld files
%s Couldn't create %@: %@
%s Couldn't serialize: %@
%s Couldn't write to %@: %@
%s Queue block at %s line %lu (queue: %s)
%s Enter block at %s line %lu (queue: %s, waitingTime: %llums)
%s Leave block at %s line %lu (queue: %s, executionTime: %llums)
%s <AFSiriTaskExecution %p>
%s Delivery of task %@ by %@ failed with error %{public}@
%s Task %@ was delivered successfully by %@
%s Handling of %@ timed out after %{public}.2f seconds
%s cancelling watchdog for %@
%s %@ is already completed; not completing again with response %@ %@
%s <AFSiriTaskExecution %p> releasing listener
%s Attempted to convert bytes with invalid length (%ld) to AFTurnIdentifier
%s requestInfo = %@, context = %@
%s result = %@
%s reason = %@, options = %@, context = %@
%s intent = %@
%s intentResponse = %@
%s intentForwardingActionResponse = %@
%s servicePort = %@ (incoming, effective)
%s servicePort = %@ (incoming)
%s servicePort = %@ (effective)
%s machServiceName = %@
%s %p (%@)
%s %p (%@) name = %@
%s %p (%@) assertion = %@
%s %p (%@), name = %@, assertion = %@
%s %p (%@) Expected assertion coordinator is %@, actual assertion coordinator is %@.
%s %p (%@) assertion = %@, isFirstAssertion = %d
%s %p (%@) assertion = %@, isLastAssertion = %d
%s User context language code mapping %@ -> %@ (override: %@)
%s %p instanceContext = %@, acquisitionContext = %@
%s %p context = %@, options = %@
%s %p error = %@, options = %@
%s %p context = %@
%s %p context = %@, error = %@
%s %p error = %@
%s %p done
%s Create XPC connection %p.
%s Destroy XPC connection %p.
%s %s is not available, as AFError is not designed to be instantiated. Returning nil.
%s outTopLevelErrorPtr is NULL
%s inTopLevelError is nil
%s matchError block is nil
%s buildUnderlyingError block is nil
%s Unable to create the new underlying error from specified block.
%s XPC object is nil.
%s Unexpectec XPC object type.
%s Mapping failed due to nil shared region.
%s Mapping failed due to unexpected mapped length (mappedLength = %zd).
%s %d
%s No identifier specified for %@
%s Error connecting to assistantd for notification service: %@
%s Error posting notification %@: %@
%s Connection to assistantd for notification interrupted
%s Connection to assistantd for notification invalidated
%s No response handler for %@
%s Queue and key must be non-nil: %@, %@
%s Queue and stream must be non-nil: %@, %@
%s Error deleting from duet: %@
%s Error saving to duet: %@
%s Unable to get an instance of _DKKnowledgeStore.
%s utterance index (%{public}lu) is out of range
%s base utterance index (%{public}lu) is out of range
%s utterance interpretationIndex (%{public}lu) is out of range of interpretations=%@
%s Phrase length is not the same as interpretationIndices. Phrases=%@, interpretationIndices=%{public}@
%s No utterance text existed for utterance index %{public}lu
%s _phrase count (%{public}ld) not match swapIndices count (%{public}ld)
%s utterance interpretationIndices count (%{public}ld) does not match swapIndices count (%{public}ld)
%s utterance index %{public}lu out of range
%s Error with remoteObjectProxy: %@
%s Failed to stage UEI event: %@ error: %@
%s Boosting XPC queue %@
%s Completed boosting XPC queue %@
%s Failed to send %tu events due to %@. (numberOfRetries = %tu)
%s Dropping %@ because the maximum number of retries was reached.
%s Expected a value responding to -boolValue, but found something else. Returning %{BOOL}d. {key: %@, value: %@}
%s Expected a value responding to -doubleValue, but found something else. Returning %f. {key: %@, value: %@}
%s Expected a value responding to -boolValue, but found something else! Acting as-if no value was set. {key: %@, value: %@}
%s #preferences Setting Type To Siri %@
%s HIPAA On-Device Dictation MDM flag is %d
%s Reprompt feature flag enabled and new status is opted out. Updating legacy value.
%s SiriX assets status changed. Posting kAFPreferencesDidChangeDarwinNotification
%s %p %@ languageCode = %@
%s %p %@ outputVoice = %@
%s %p %@ assistantIsEnabled = %d
%s %p %@ dictationIsEnabled = %d
%s announce notifications disabledForCarPlay: %{BOOL}d || disabledUntilEndDate: %{BOOL}d
%s announce notifications disabledUntilEndDate: %{BOOL}d
%s %{private}ld
%s Setting Siri Data Sharing OptIn status=%{private}ld from source=%ld with reason=%{private}@, and propagating to home accessories=%d
%s Appending siri data sharing opt-in status information to history: %@
%s Siri data sharing opt-in status history size of %ld is greater than maximum of %ld. Removing oldest entry.
%s Appending home accessory Siri data sharing opt-in status event to change log: %@
%s Home accessory Siri data sharing opt-in status change log size is greater than maximum of %ld. Removing oldest entry.
%s Appending home accessory Siri data sharing propagation event to propagation log: %@
%s Home accessory Siri data sharing opt-in status propagation log size is greater than maximum of %ld. Removing oldest entry.
%s Constructed SELF message %@ from opt-in status history entry %@
%s No language code saved, but Assistant is enabled - returning: %@
%s supported: %s
%s No language code given, answer is NO.
%s %@ supported: %s
%s preferredLanguages = %@
%s currentLocale identifier = %@
%s total preferences = %@
%s input: nil -> %@
%s Somehow we have no language preferences!
%s preferences %@
%s sentinelOrSpecialCase = %@
%s Special-case: %@ -> %@
%s %@ is intentionally supported as %@
%s Preferred Languages = %@, -> Best Supported Languages = %@
%s falling back to %@
%s No output voice saved, but Assistant is enabled - returning: %@
%s Unable to erase all Siri preferences for %@.
%s version=%@
%s Expected a double value for version number, but found something else. Returning an empty list. version=%@
%s Version number is smaller than 15.2. Returning an empty list. versionNum=%f
%s Removing "%@" from alternative language map. Please file a radar on Siri Frameworks to remove it permanently.
%s Preferences Changed!
%s Internal Preferences Changed!
%s Language Code Changed: %@!
%s Output Voice Changed!
%s Nano Prefs Changed!
%s Assistant Enablement Changed!
%s Could not parse languageID, passing it through!
%s Deleting sanitized speakable:%@ date:%@
%s %@ %s
%s asking taskmaster=%@ to handle contextRequest=%@
%s Unable to obtain context using %@: %{public}@
%s %@ got context
%s wireless splitter session state: %ld, error: %@
%s Notifying observers of available announcement requests: %lu
%s previous announcement request eligibility: %lu, now updating to %lu
%s Notifying observers, eligible announcement requests changed: %lu
%s wireless splitter session state changed from %llu to %llu
%s wireless guest connection state changed from %llu to %llu
%s forced update observer re-fetching eligibility
%s re-fetching eligibility after assistantd is ready
%s Announcements not supported on device
%s Eligible Announcement Requests: %lu, Local Voice Asset Available: %d
%s Announcements not supported on this device
%s Available announcement requests: %lu, In wireless splitter session: %ld, guest connection state: %llu
%s Queueing command waiting for Myriad decision: %@ (reason = %@).
%s Dequeuing after %f seconds for Myriad decision (reason = %@) and dequeue signal %zd.
%s Dequeueing command for Myriad decision: %@ (reason = %@).
%s BTLE delay monitor watchdog timeout %f context %@
%s Myriad Delay Monitor: Should ignoring Myriad events -> %d.
%s Myriad Delay Monitor: Registering for Myriad event notifications (beginObserver: %p, wonObserver: %p, lostObserver: %p, decisionRepostObserver: %p).
%s Myriad Delay Monitor: Ignoring Myriad repost notifications.
%s Myriad Delay Monitor: Fetching reposted Myriad event notification.
%s Myriad Delay Monitor: Deregistering from Myriad event notifications.
%s Myriad Delay Monitor: Deregistering from reposted Myriad event notification.
%s Myriad Delay Monitor result: YES (%@)
%s Myriad Delay Monitor result: NO (%@)
%s Myriad Delay Monitor Begin (%@)
%s Myriad Delay Monitor received reposted result: YES (%@)
%s notifyObserver %p didChangeStateFrom %ld -> %ld
%s Myriad decision is already in pending state.
%s Myriad monitor cancelling existing watch dog timer.
%s Myriad decision is pending.
%s Myriad monitor initializing safety timer with timeout: %f seconds
%s Myriad monitor times out, Myriad is probably unable to finish, clear pending blocks
%s Myriad decision had %d block(s) waiting
%s Clear pending for Myriad decision: %@.
%s Myriad decision seen: state is %@.
%s No dialog phase provided for conversation insertions; defaulting to %@
%s ACE object: %@
%s %@: updating item %@ at %@ from ACE object.
%s %@: adding new item %@ at %@ for ACE object.
%s rootNode=%@
%s Unable to add additional speech interpretation, invalid refId
%s passed invalid property list (%@): %{public}@
%s Unable to create conversation from property list with version %{public}ld
%s %p identifier = %@, effectiveDate = %@, expirationDuration = %f, heartBeatInterval = %f
%s %p Heart beat interval %f is invalid.
%s %p Expiration duration %f is invalid.
%s %p Effective date %@ and expiration duration %f are in the past.
%s %p identifier = %@
%s %p identifier = %@, index = %llu
%s %p identifier = %@, count = %llu
%s Could not open speech manager dylib: %{public}s
%s Could not find AXSpeechTransformText: %{public}s
%s User Generated Message: %@
%s Transformed Text: %@
%s No argument for weather units.
%s No argument for initLowercase
%s Error fetching meCard %@
%s Timed out fetching meCard  after waiting %0.1g seconds
%s Got %@
%s ERROR: No argument for siriUsageDescription
%s No argument for speechRecognitionUsageDescription
%s Missing argument for contextRoomName
%s Computed value: %@
%s Missing argument for contextDeviceName
%s Timed out fetching peerInfo after waiting %0.1g milliseconds
%s Unhandled functor %@
%s %p (Caller = %@)
%s Trying to start speech capture while we are already capturing. This is a client app logic error, cancelling dictation
%s Recognizing incrementally.
%s %@ - %@
%s %p Local speech recognizer model info: %@
%s %p %d
%s %p Started input audio power updates.
%s %p Stopped input audio power updates.
%s Offline language fetch failed: %@
%s %p %@ %@ %@ %llu
%s Sending 1 event
%s Language %@ is %@supported for dictation
%s Inserting activation timestamps since client did not set them
%s %p %@ %@ %@
%s Pending dictation request completed
%s %{public}@
%s Dictation request completed
%s %p %@ %@ %d
%s Recorded audio dictation request completed
%s Stop requested, delaying till buffer is empty
%s Delayed stop after buffer cleared
%s Language code is nil.
%s Sent data from buffer, actualRuntime=%f, amountSent=%f, outgoingDuration=%f
%s Schedule timer with delay: %.2f
%s Ignoring suppressStopAlert from client
%s Ignoring suppressStartAlert from client
%s log to CoreAnalytics nearby device context %@: %@
%s externalRequest = %@
%s Alarm %@ is not in notifiedFiringAlarmIDs, but isFiring is YES.
%s Alarm %@ is in notifiedFiringAlarmIDs, but isFiring is NO.
%s Firing alarm is not valid: %@
%s Notifying observers, available announcement request types changed: %lu
%s grouping depth: %ld -> %ld
%s numberOfItems: %lu
%s numberOfItems: %lu -> %lu
%s itemsByID: [+] %@
%s itemsByID: [-] %@
%s itemsByID: [*] %@ -> %@
%s Item changes detected, but there is no inserted, updated or deleted items.
%s generation: %llu -> %llu
%s date: %@ -> %@
%s There's no generation, date or item changes.
%s Attempt to end grouping without a balanced begin grouping.
%s items = %@
%s itemIDs = %@
%s %p Started %@ %d %d
%s %p Finished
%s %p Failed %d %@
%s No command handler in client for command %@
%s %p %@ %d %d
%s %p %@ %d
%s Successfully fetched local route identifier: %@, group identifier: %@
%s Unable to fetch local route identifier: %@
%s Local route identifier: %@
%s Local group identifier: %@
%s Error retrieving MRDeviceInfo: %@
%s Retrieving MRDeviceInfo for local origin.
%s Retrieved routeId: %{private}@
%s Retrieved groupId: %{private}@
%s languageCode: %@, voiceName: %@
%s No descriptor found for language code %@, voice name %@
%s Missing voice map for language %@
%s nil language code provided
%s %@ missing name cannot compare voices
%s Cannot compare voices with keys (%@, %@)
%s Cannot resolve ordering for voice one: %@, voice two: %@ 
%s language code: %@ output language code: %@, output voice: %@
%s %@ missing languageCode
%s Voice name not specified for %@, using %@
%s Voice name not specified for %@, can't determine default name
%s No voices loaded for %@, but they were expected
%s No voiceInfo was found for %@. Will return default output voice info instead: %@
%s Cannot get output voice identifier for languageCode: %@, voiceName: %@
%s returning nil because value for key "%@" is %@, which cannot be coerced to an image
%s returning nil; passed invalid property list (%@): %{public}@
%s Unable to exclude %@ from backup; deleting.
%s task_info() with TASK_VM_INFO returned %d due to %s.
%s AFMyriadRecord invalid data during init: %@
%s AFMyriadRecord initfrom: <THISDEVICE> - %@
%s AFMyriadRecord initfrom: %@ - %@
%s Bad data of unexpected length %@ : %@
%s [(rawAudioGoodnessScore + bump) overflow] rawAudioGoodnessScore: %d, bump: %d. Overwriting goodness score to 0xff
%s rawAudioGoodnessScore: %d, bump: %d goodness: %d
%s #myriad newGoodness: %d
%s AFMyriadRecord sanity: %d
%s Generated myriad hash: %hu
%s #hal Context for %@ of type %@ has expired
%s Error unarchiving flowContext from %@: %@
%s Current memory info is %@.
%s Memory pressure condition changed from %@ to %@.
%s Memory pressure condition stayed at %@.
%s Unable to get LSApplicationProxy class.
%s Encountered a bundle proxy that is not a LSApplicationProxy: %@
%s Encountered an application proxy without bundle identifier: %@
%s Encountered an application proxy with an identical bundle identifier: %@
%s Unable to get an instance of LSApplicationWorkspace.
%s Not saving disambiguation event. Item %@ does not exist in object %@
%s Could not get domain objects for %@: %{public}@
%s Error: %@
%s payload for %@: %@
%s Generated Myriad advertisement context data: %lu bytes
%s Invalid Voicetrigger endtime: %f
%s VoicetriggerEndtime isSane: %d (threshold: %f, me: %f, other: %f, abs-diff: %f adv: %@)
%s Initializing Myriad advertisement context (version: %d)
%s #myriad-advertisementcontext: Received wedged Myriad advertisement context record %@
%s Notify register failed %u
%s PineBoard is not available
%s Error obtaining CoreDuet knowledge store.
%s contact: %@
%s Error obtaining notificationUsageStream from CoreDuet.
%s Error querying CoreDuet with %@: %@
%s No feedback persisted
%s Error reading data: %@
%s Saved feedback is corrupted: %@
%s Error creating directory: %@
%s Failed to save feedback to disk %@: %@
%s Failed to archive feedback %@: %@
%s Invalid AFMetrics category
%s Failed to serialize notification %@: %@
%s Sending xpc message for %@
%s Unable to send xpc message for %@
%s reason: %@
%s deactivation requests are currently only supported for CarPlay.
%s unspecified deactivation reason %li. Ignoring.
%s Sending xpc message for request deactivation.
%s Unable to send xpc message for request deactivation.
%s platform %li is not valid, using headphones provider.
%s Allow all notifications to be announced. This should only be used for testing.
%s Always Opportune so marking as eligible setup. This should only be used for testing.
%s Eligible capabilities changed, notifying observers
%s Eligble Setup: %lu
%s Timed out fetching eligible setup
%s Always Opportune, requests can be handled. This should only be used for testing.
%s Request can be handled: %d
%s Timed out fetching request can be handled
%s Notifying %lu observers, request can be handled? %d
%s Because pid=0, most likely a connection could never be established to begin with. Likely you are missing an entitlement and/or privilege to look up a mach port.
%s settingsService got error: %@
%s Setting Siri output voice: %@
%s Setting Siri language code: %@
%s Setting Siri output voice:%@ language code: %@
%s Can not get meCard on this device
%s Hit error %@
%s %ld
%s Failed to connect and start observing wireless splitter session: %@
%s Failed to connect and stop observing wireless splitter session: %@
%s error is %@
%s Setting siri data sharing optin status to = %@
%s Failed to set Siri data sharing optin status %@
%s Siri data sharing optin status is set to %@
%s Getting siri data sharing optin status
%s optin status = %@
%s Error while attempting to set Siri data sharing optin status %@
%s Siri data sharing optin status is set to %@ and propagation (if required) has been kicked off
%s status = %d
%s Setting Siri Data Sharing HomePod Setup Device isValid to = %d
%s presented = %d
%s Failed with error %@.
%s Done
%s Sending %@
%s Interrupted %@
%s Received %@ %@
%s Error creating directory %@ - %@
%s %@ Sampling: Error creating directory %@ - %@
%s %@ Sampling: Error deleting item at %@ - %@
%s %@ Sampling: Successfully deleted %@
%s %@ Sampling: Deleting all the %@ sampling data
%s %@ Sampling: Done with deleting all the sampling data. Deleted - %@, %@
%s Begin waiting for listening...
%s End waiting for listening (isListening = %d).
%s overrideResult = %@
%s state: %llu -> %llu
%s context = %@, timeoutInterval = %f
%s signal = %ld
%s isListening = %d
%s Language detector enabled - %d (Client: %d, Server: %d)
%s Language detection user context is nil. Not using language detector
%s Skipping dictation fallback code because override %@ has been set for keyboard %@
%s Dictation override %{public}@ is not in our supported list.
%s Invalid analytics stream.
%s version = %u analytics stream = %p
%s Analytics data has a invalid version
%s Invalid analytics data received
%s Announce Telephony is not enabled, rejecting request
%s Failed to serialize call %@: %@
%s CSActivationEventNotifier returned error %@ for activation context %@.
%s Unexpected event in context %@.
%s No score is provided in context %@.
%s No device ID is provided in context %@.
%s Unexpected source in context %@.
%s Couldn't find keychain value %@ for account %@ %{public}d
%s Couldn't delete value %@ from keychain for account %@ %{public}d
%s Couldn't update value %@ from keychain for account %@ %{public}d
%s Unable to create an instance of plugin NSPrincipalClass %{public}@
%s Error loading bundle at path "%@":%@
%s Siri plugin does not specify an NSPrincipalClass, unable to load: %@
%s timestamp = %llu, source = %@, deviceID = %@, context = %@
%s timestamp = %llu, context = %@
%s Deprecated, use AFSiriActivationBluetoothDeviceDoubleTap() or AFSiriActivationBluetoothDeviceVoice() instead.
%s Deprecated, use AFSiriActivationBluetoothDeviceDoubleTap() instead.
%s Deprecated, use AFSiriActivationBluetoothDeviceVoice() instead.
%s Deprecated, use AFSiriActivationBluetoothDeviceBoronSignal() instead.
%s timestamp = %llu, deviceID = %@, context = %@
%s timestamp = %llu, deviceID = %@, score = %f
%s timestamp = %llu, activationTimeShift = %f, deviceID = %@
%s Validating Siri activation context %@...
%s Siri activation context %@ is invalid, because source '%@' requires a non-nil device ID.
%s Siri activation context %@ is invalid, because source '%@' does not support event '%@'.
%s Siri activation context %@ is invalid, because source '%@' is not supported yet.
%s Siri activation context %@ is valid.
%s Siri activation context %@ is valid. (internal override)
%s context = %@, instanceContext = %@
%s Post darwin notification %@
%s Invalid context %@.
%s No handler for context %@.
%s Context %@ rejected by handler %@.
%s Unable to resolve speech event for context %@.
%s speechEvent = %ld (%@)
%s Unable to deserialize user info data due to error %@.
%s Unable to serialize user info %@ due to error %@.
%s Unable to deserialize error data due to error %@.
%s Unable to serialize error %@ due to error %@.
%s handler = %@ (override)
%s handler = %@ (default)
%s No handler can be found.
%s Invalid message recipient has no actionable contact values %@. Ignoring that recipient.
%s rejecting incoming connection (%@) because it doesn't have the "%@" entitlement
%s accepting incoming connection (%@)
%s %@ asking %@ to handle task %@
%s No execution for this request, it can not be failed %@
%s Unexpected failure %@ of request %@
%s item property list creation block returned nil for item %@
%s Already observing notification request identifier %@, ignoring.
%s Adding speaking state observer for notification request identifier %@
%s Not currently observing for notification request identifier %@, ignoring.
%s Removing speaking state observer for notification request identifier %@
%s No longer observing any notifications. Closing connection.
%s Received a notification for speaking state changes, but no observers.
%s Received a notification for speaking state changes, but we're not observing any of them.
%s Notification announcement speaking state updated to `%@` for request identifiers %@
%s Notifying all identifiers as failed. %@
%s Not logging event %@ because it has no associated time. Context: %@
%s Not logging instrumentation event %@ because we have HIPAA On-Device Dictation enabled: %@
%s Attempted to log nil instrumentation event.
%s Not logging instrumentation event %@ because it has no associated time. Turn context: %@
%s Not logging instrumentation type %@ because it is of an unknown type. Context: %@
%s Completed boosting event producer queue %@
%s Failed to serialize context %@ to JSON due to exception %@.
%s Failed to serialize context %@ to JSON due to error %@.
%s An exception has been raised during the execution of the context provider block for logging event (name = %@, timestamp = %f): %@
%s #myriad ignoring recent event bump
%s #myriad bumptoGoodness secsAgo=%f yields %d = %f(act) + %f(siri)
%s #myriad bumping goodness score (reason: platform bias, adjusted bias: %d)
%s #myriad bumping goodness score (reason: alarm/timer firing, adjusted score: %d)
%s #myriad bumping goodness score (reason: media playback active, adjusted score: %d)
%s #myriad bumping goodness score (reason: media playback interrupted, last playback time: %f seconds ago, adjusted score: %d)
%s #myriad updating platform bias to %d
%s #myriad
%s #myriad payload adjusted score: %ld
%s #myriad adjusted score: %ld
%s #myriad platform bias acquisition state: %ld
%s %p Client with pid %{public}d does not have entitlement %@.
%s notifyObserver = %@, fromState = %llu, toState = %llu
%s %p requestInfo = %@, context = %@
%s done
%s %p result = %@
%s %p reason = %@, options = %@, context = %@
%s %p Handling as prewarming...
%s %p Unable to handle context %@ as prewarming due to error %@.
%s %p Handling as activation...
%s %p Unable to handle context %@ as activation due to error %@.
%s %p Handling as deactivation...
%s %p Unable to handle context %@ as deactivation due to error %@.
%s %p Delivering button event ...
%s %p Unable to deliver button event from context %@ due to error %@.
%s %p Handling myriad event...
%s %p Unable to handle context %@ as myriad event due to error %@.
%s %p requestInfo = %@
%s %p intent = %@, bundleIdentifier = %@
%s %p intentResponse = %@
%s intentForwardingAction = %@, bundleIdentifier = %@
%s Intent handling is not supported on this platform
%s %p delegate = %@
%s Unable to retrieve LSApplicationRecord for bundle identifier %@: %@
%s application: %@ supports %@
%s Notifying observers eligible announcement request types changed: %lu
%s Notifying observers available announcement request types changed: %lu
%s Wedged message received with version: %hhu and message length: %zu
%s Unknown request type %@ for accessory id: %@, Ignoring.
%s Received a payload %@ with session id %@ for accessory id: %@, Ignoring.
%s cdaId: %@, state: %@, trigger: %@
%s cdaId: %@, state: %@
%s cdaId: %@, state: %@, withDecision: %d, withPreviousDecision: %d, timeSincePreviousDecision: %llu, withWinningDevice: %@ (score: %d), withThisDevice: %@ (score: %d), withParticipants: %@, withRawScore:%u, withBoost:%@, withTrumpReason:%@
%s cdaId: %@, state: %@, arbitrationAllowed: %d, deviceGroup: %d, advertisements: %@
%s boostType: %@, boostValue:%d
%s trump: %d, with Reason:%@
%s #myriad BTLE audio data signal received
%s #myriad BTLE self trigger signal received
%s #myriad BTLE in ear trigger signal received
%s #myriad BTLE CarPlay trigger signal received
%s #myriad BTLE emergency signal received
%s #myriad BTLE myriad decision fetch signal received
%s #myriad BTLE opening audio file at path %{private}s
%s #myriad BTLE could not open audio data file
%s #myriad BTLE could not read 4 bytes from audio data file
%s #myriad Audio file deletion status: %d
%s Attempt to initialize MyriadCoordinator when one already exists.
%s #myriad coordinationEnabled=%d, BLEActivityEnabled=%d 
%s Initialized MyriadCoordinator
%s #myriad reading defaults
%s #myriad reading server provisioned defaults
%s #myriad reading defaults: BTLE device class: %@ (%@) detected, category %ld, adjusting goodness by %ld, std delay %f, trump delay %f, vt_endtime threshold %f
%s BTLE device class: %@ (%@) detected, category %ld, adjusting goodness by %ld, std delay %f, trump delay %f, in_ear delay %f interval %f vt_endtime threshold %f
%s BTLE audio hash base directory %{private}@
%s BTLE audio hash file path %{private}@
%s Preheat shows slowdown for this device as %d msecs
%s BTLE startFromVoiceTrigger inTask=%d, inSetupMode=%d, context=%@
%s BTLE device class: %@ (%@) detected, adjusting goodness by %d incomingAdjustment %d
%s BTLE overriding to constant goodness %d
%s Downgrading goodness as HS invocation too soon %f for score %d
%s BTLE overriding to goodness %@
%s #myriad _deviceAdjust=%d, adjustment= %d
%s #myriad removing negative iPad device boost (adding %d back) due to activationSource
%s #myriad attention start
%s #myriad attention sync resumeWithError failed: %@
%s #myriad attention sync awareness state event: %@, error: %@
%s #myriad attention sync _incomingAdjustment %hhd, context adjustement: %u
%s #myriad attention sync timeout awareness state event: %@, error: %@
%s #myriad attention sync suspendWithError failed: %@
%s #myriad attention end
%s #myriad overrideContext: %@, _incomingAdjustment %d
%s #myriad Goodness score override state %@
%s BTLE startFromVoiceTrigger inTask=%d, inSetupMode=%d, incomingAdjustment=%d,  context=%@, goodnessScoreContext=%@
%s BTLE ignoring watch voice trigger and continuing with ongoing advertisement.
%s BTLE trumping
%s BTLE suppressing trigger in audio output
%s BTLE trumping from in ear voice trigger
%s BTLE trumping from in CarPlay trigger
%s BTLE handling emergency beacon
%s BTLE sending emergency beacon
%s BTLE in-task voice trigger heard
%s BTLE ignoring in-task voice trigger and continuing with ongoing advertisement.
%s BTLE voice trigger during alert heard
%s BTLE suppressing stragglers
%s BTLE advertising slowdown: %d msecs
%s BTLE ending advertising after %f secs delay
%s Myriad decision is based on 0 replies
%s BTLE advertising is being ignored
%s BTLE detected a slowdown signal for %d msecs, resetting election for later time
%s inTask=%d
%s #myriad setupEnabled: %d, current state: %@
%s Coordination disabled, continuing with the request)
%s BTLE deviceShouldContinue:%ld (coordinationDisabled:%ld, isDirectlyActivating:%ld, isInEarTrigger:%ld, isWatch:%ld, suppressLateTrigger:%ld.
%s BTLE notify myriad won
%s BTLE notify myriad loss
%s BTLE unable to cancel against: %@
%s #myriad Election advertisement %@ added to myriad session %@
%s #myriad Initialized myriad session %@ when myriad is in state %@
%s #myriad Clearing myriad session %@
%s #myriad Election advertisement %@ -> %@
%s #myriad Event token: %@, current event token: %@
%s BTLE starting %@ timer for %f secs
%s BTLE %@ timer fires
%s BTLE timer %@ cancelled (%@)
%s BTLE Coordinator setting overall timeout
%s BTLE Coordinator hitting overall timeout, resetting to NoActivity and declaring loss
%s BTLE Coordinator cancelling overall timeout
%s BTLE Coordinator altered state: %@ -> %@
%s #myriad Force stopping BTLE scan
%s Activation source: %ld, Time since activation: %f, last election record received time: %llu, current time: %llu, activation expiration time: %llu
%s BTLE task continuation: %d
%s BTLE task MYR_WAIT_EMERGENCY_OR_TASK only stopping advertising, not listening
%s BTLE emergency is being handled
%s BTLE task MYR_WAIT_EMERGENCY_HANDLED only stopping advertising, not listening
%s Waiting for wiprox to be ready in state: %lu
%s starting to scan in state: %lu
%s BTLE notify Myriad win due to state machine error
%s #myriad Context collector returned 0 AFMyriadAdvertisementContextRecords instances
%s #myriad ignoring advert from other deviceGroup %d: %@ data=%@
%s #myriad %@
%s #myriad Suppressing the current device due to late trigger (voicetrigger endtime: %f, advertisement dispatch time: %f, advertisement delay: %f, myriad record count: %ld)
%s #myriad adv dispatch time: %f, voice trigger end time: %f, time since voice trigger: %f (curr time: %llu, time since device boot: %llu), advertisment: %@
%s #myriad Not pushing myriad advertisement context - Valid voicetrigger endtime: %d (curr time: %llu, time since device boot: %llu)
%s #myriad Pushing Myriad advertisement context is complete
%s #myriad Error: %@
%s #myriad current advId: %@ is different from the advId for which the myriad context was dispatched: %@
%s #myriad Not pushing myriad advertisement context - HAL enabled: %d, direct activation: %d
%s BTLE action window trigger time: %@
%s BTLE action window adjusted by slowdown signal %d msecs new time: %@
%s BTLE next action window: %@
%s BTLE Attempt to execute time windowed action when trigger time not initialized
%s endTime: %f targetTime: %f, advInterval: %f, slowDown: %d (ms)
%s adjusted advInterval: %f (secs) device delay: %f (secs), slowDown: %f (secs)
%s adjusted advInterval: %f (secs) adjusted delay: %f (secs), slowDown: %f (secs)
%s BTLE checking if slowdown needed testmsecs=%d msecs=%d state=%@
%s BTLE advertising TEST INDUCED slowdown delay, 2nd pass seen
%s BTLE advertising slowdown finished, advertising delayed trigger
%s BTLE advertising slowdown delay, 2nd pass seen
%s BTLE computed advertising delay: %f finished, interval: %f
%s BTLE slowdown advertising delay: %f finished, interval: %f
%s BTLE ending slowdown advertising, 2nd pass not seen
%s BTLE delay finished, advertising: %@
%s BTLE error: attempting to readvertise %@
%s BTLE starting advert delay timer for %f secs
%s BTLE created slowdown record %@
%s BTLE end advertising summary: %@
%s BTLE summary %lu: %@
%s BTLE emergencyCallSummary: %@
%s BTLE EmergencyCallSummary %lu: %@
%s BTLE Emergency call: this device should handle
%s BTLE Emergency call: This device should NOT handle, another is better
%s BTLE Emergency Call: No device available to handle this call
%s #myriad got attention, ignoring too-soon time limit.
%s #myriad CurrentTime: %f TrigerTime: %f, ElectionAdvertisementTime: %f, triggerDelta: %f, electionAdvertisementRemainingTime: %f [isIntaskTooSoonForVoiceTriggerActivation = %d, isIntaskTooSoonForDirectActivation = %d, currentElectionAdvertisementIsSane = %d]
%s #myriad BTLE in-task continuous voice trigger heard too soon. Ignoring.
%s #myriad BTLE in-task continious voice trigger heard. NOT ignoring.
%s BTLE Updating record table, data= %@, for %@
%s BTLE Updating record table with a late supression ( %hhu -> %hhu), data= %@, for %@
%s BTLE ignoring this advert because one already exists, data= %@, for %@
%s BTLE ignoring decision result callback (state = %@)
%s BTLE reposting result win (state = %@)
%s BTLE ignoring incoming event bad device class for Horseman %@
%s BTLE ignoring as wedged suppress %@
%s BTLE record %@  isSane: %d
%s #myriad WiProx readiness timer initialized
%s #myriad WiProx readiness timer suspended
%s #myriad WiProx readiness timer wait block cleared
%s #myriad BTLE WiProx readiness timer timed out, WiProx not called
%s #myriad BTLE done waiting on WiProx to execute
%s #myriad Method called on unexpected thread (curr:%{private}s expected:%{private}s)
%s #myriad didRequestForBTLEAdvertisement: %s -> %s, didRequestForBTLEScan: %s -> %s
%s #myriad BTLE not ready, waiting to execute for up to %ld msecs (current HeySiri WPState %ld)
%s BTLE entering diagnostic mode
%s BTLE failed to enter diagnostic mode %@
%s BTLE diagnostic mode timer fired
%s BTLE added diagnostic mode timer for %f seconds %@
%s BTLE leaving diagnostic mode
%s BTLE cancelling diagnostic mode timer for %f seconds %@
%s Notification received: %@ (%d)
%s Unable to start app state monitoring because BKSApplicationStateMonitor is nil.
%s BKS assertion was unexpectedly dropped
%s Unable to restart app state monitoring because BKSApplicationStateMonitor is nil.
%s %{public}@ appears to have crashed
%s Could not acquire BKS assertion
%s BKS assertion for %{public}@ timed out after %{public}.2f seconds
%s After timing out, recipient %{public}@ state was %{public}@
%s Couldn't create a SiriTask action %{public}p %{public}@
%s Unable to launch apps because FBSOpenApplicationService is nil %@
%s Unable to take process assertion for background launch because BKSProcessAssertion is nil %@
%s missing expected values dumping everything %@
%s %@ is %@ frontmost=%@
%s #hal serializedBackingStore is of unexpected type or is nil: %@
%s #hal serializedBackingStore is of unexpected type: %@
%s %@ %s %@
%s connection to task service %{public}@ was invalidated
%s connection to task service %{public}@ was interrupted
%s task service was unable to deliver task: %{public}@
%s %@ Sampling: Error while reading plist at location %@ - %@
%s %@ Sampling: currentSamplingDate is nil. Check if ADDictationOnDeviceSampling is getting initialized.
%s Tinker Enablement flow, treat as new user
%s Not a new user. Language Stored: %@, outputVoice stored: %@
%s hasEverSetLanguageCode: %d, error:%@
%s Output voices %@ for default output language %@ for recognition language %@
%s Sync info is missing a key
%s SASyncAppMetaData has no bundleID, but it is required for this key
%s SASyncAppMetaData does not have exactly one -syncSlots, as required for this key
%s SASyncAppMetaData has no -applicationClientIdentifier, as required for this key
%s Unexpected error converting invocation context from plist to dictionary: %@
%s turnId not provided in request info.
%s turnId not provided in speech options.
%s Unexpected product type for CrossDeviceCommandHandled metric: %@
%s Caught an exception %@ while converting metricsContext %@ to Foundation object. 
%s WWAN fallback %@
%s %tu
%s logged for key: %@
%s Waiting for attachment %lf
%s Wait finished %d
%s Unable to create XPC connection from %@.
%s Sending attachment message
%s Attachment Reply %d
%s Bad NowPlaying Info, expected %@ for key %@ but got %@
%s infoToNowOffset = %g
%s playbackRate = %@
%s adjusted infoToNowOffset = %g
%s calculatedElapsedTime = %g
%s NowPlaying reports we are playing, but we have no ApplicationDisplayID for who is playing
%s We have a NowPlaying listeningToItem but no ApplicationDisplayID for it %@
%s Media Remote reported that the picked route does NOT have volume control
%s Unknown volume action
%s Best failure for MR command %d is %@
%s MRMediaRemoteCommand %d is not supported by NowPlaying app
%s Found %@ value that is illegal (not a 64 bit integer): %@
%s group=%p ApplicationDisplayID %@
%s Exception when decoding subtitle and audio languages %@
%s Calling -[MRNowPlayingController performRequestWithCompletion:]...
%s Succeeded -[MRNowPlayingController performRequestWithCompletion:] (response = %@)
%s Failed -[MRNowPlayingController performRequestWithCompletion:] (response = %@, error = %@)
%s Calling MRMediaRemoteGetNowPlayingApplicationPlaybackState()...
%s Done MRMediaRemoteGetNowPlayingApplicationPlaybackState() (state = %u)
%s Failed to get response: %@
%s MRMediaRemoteGetNowPlayingClient failed with error %@
%s Bad NowPlaying Info, kMRMediaRemoteNowPlayingInfoUniqueIdentifier gave unexpected item of class %@,  %@
%s No container info
%s Ignoring non-string key %@
%s Processing kMRMediaRemoteNowPlayingCollectionInfoKeyIdentifiers
%s Unexpected non-dictionary value for kMRMediaRemoteNowPlayingCollectionInfoKeyIdentifiers
%s Unexpected non-string value of class %@ for key %@ -- attempting to convert to string
%s Could not make safe value for key %@
%s Got MRMediaRemoteGetMediaPlaybackVolume says %f
%s Media Remote error %@
%s Media Remote reported success
%s Checking if an unsupported skip is unsupported by the app or the content
%s kMRMediaRemoteNowPlayingInfoIsAlwaysLive = %@ %@
%s Reporting SAMPExceededSkipLimitErrorCode instead, because media is always live
%s group=%p No NowPlaying info because nothing is playing right now.
%s group=%p Error getting NowPlaying queue %@
%s group=%p no contentItems
%s group=%p contentItems has %lu items location %ld
%s group=%p previous: %@
%s group=%p next: %@
%s group=%p got NowPlaying info with %@ keys:
%s %p         %@ -> %@:
%s group=%p lastActivationStoppedNowPlayingApp=%d
%s group=%p MRMediaRemoteGetNowPlayingApplicationPlaybackState gave us state %@
%s group=%p Treating kMRPlaybackStateInterrupted as %@
%s Failed to create queue request.
%s Timer %@ is not in notifiedFiringTimerIDs, but isFiring is YES.
%s Timer %@ is in notifiedFiringTimerIDs, but isFiring is NO.
%s Firing timer is not valid: %@
%s Unable to get average power and peak power from audio power provider %@.
%s Unable to get C string of name from %@.
%s Failed to set state to %llu of %s with token %d (status = %u).
%s Failed to get state of %s with token %d (status = %u).
%s Failed to get registration token of %s (status = %u).
%s Registration token of %s is %d.
%s Registration token of %s is invalidated.
%s initialState = %llu
%s token = %d
%s fromState = %llu, toState = %llu
%s state: %@ -> %@
%s %p instanceContext = %@
%s %p Ignored because the connection is invalidated.
%s %p xpcConnection = %@
%s %p localDeviceContext = %@
%s %p reply
%s %p localDeviceContext (old) = %@
%s %p localDeviceContext (new) = %@
%s Asking for context for %@
%s Got context for %@
%s begin
%s end with error %@
%s end
%s Attempting to decrement transaction depth below 0
%s Took %f seconds to access current state.
%s Resetting transaction depth since last client has been invalidated
%s last client was removed before all transactions ended
%s Skipped because transaction depth is %ld
%s hasActiveSession = %d, hasActiveRequest = %d, isListening = %d, isSpeaking = %d
%s Acquired presentation transition assertion.
%s Relinquished presentation transition assertion. (signal = %ld, duration = %f)
%s Attempted to begin a presentation transition when there's already a current presentation transition.
%s Attempted to end a presentation transition when there's no current presentation transition.
%s Initializing HomeAutomationBackgroundRequest with requestInfo: %@ and AFInstanceContext: %@
%s Performing request for HomeAutomationBackgroundRequest: %@
%s Failed to serialize asyncMessage %@: %@
%s Sending xpc message with requestInfo: %@
%s lastPlayedAnnouncement: %@ -> %@
%s snapshot: %@ -> %@
%s No connection.
%s ErrorABCD:%@
%s Error in getHomeUserIdOfRecognizedUserWithCompletion:%@
%s Error in getPreferredMediaUserHomeUserIDWithCompletion:%@
%s Error in homeUserIdToNames:%@
%s Unable to create context object for Siri model object %@; dropping on floor
%s #myriad _AXSAttentionAwarenessFeaturesEnabled %@
%s #myriad isMyriadSelfMetricsEnabled YES
%s Can not infer dictation language with no keyboard language
%s %@ countryCode=%@ siriLanguage=%@
%s %@ is specifically supported as %@
%s %@ is an exact match for a dictation language, using it
%s Could not parse keyboard language, giving up
%s preferences %@ -> %@
%s Could not determine keyboard language-code, returning best-guess: %@
%s %@ is the best-choice in the same base language, using it.
%s No dictation language found
%s Failed getting kern.boottime MIB with sysctlnametomib() %s
%s Failed getting kern.boottime with sysctl() %s
%s Failed getting kern.boottime with sysctlbyname() %s
%s kAudioSessionProperty_ActiveSessionDisplayIDs: %@
%s Error fetching kAudioSessionProperty_ActiveSessionDisplayIDs %@
%s endDate is %@ but not beginDate is nil.
%s endDate is nil but beginDate is %@ and it is more than one hour ago.
%s endDate %@ is earlier than beginDate %@.
%s recencyDuration %f is invalid.
%s Got signal %ld, exiting when clean
%s Using dictation hardcoded fallback %@ for %@
%s Using dictation internal hardcoded fallback %@ for %@
%s mach_timebase_info() failed with %d.
%s machTimebaseInfo.numer = %u, machTimebaseInfo.denom = %u, rate = %f
%s #myriad Pushing Myriad advertisement context %@
%s #myriad Dropped %@ from %@ because there's no device ID.
%s #myriad triggerABCForSubType failed: %@
%s TelephonyUtilities is not available on this platform.
%s #hal redacted: %@ %@
%s Missing assistantId in %@
%s Missing rapportId in %@
%s <AFSiriTask %p>
%s Fatal error sending response - couldn't make XPC connection from endpoint: %@
%s Task %@ failed with error %{public}@, but was unable to communicate that to the response handler: %{public}@
%s Task %@ completed, but was unable to communicate that to the response handler: %{public}@
%s Task %@ unable to communicate usage results to handler: %{public}@
%s the encoded request is in an unexpected format: %@
%s the encoded request failed to decode
%s the encoded request failed to decode - make sure you have linked *all* required frameworks. Exception: %{public}@
%s the encoded response endpoint is in an unexpected format: %{public}@
%s no encoded response endpoint: %{public}@
%s the encoded usage results endpoint is in an unexpected format: %{public}@
%s no encoded usage results endpoint: %{public}@
softlink:r:path:/System/Library/PrivateFrameworks/CarKit.framework/CarKit
softlink:r:path:/System/Library/Frameworks/Intents.framework/Intents
softlink:o:path:/System/Library/Frameworks/CoreServices.framework/CoreServices
softlink:r:path:/System/Library/Frameworks/Intents.framework/Intents
AFCoreAnalyticsDeviceContextPayload
NSCopying
NSSecureCoding
NSCoding
AFDictionaryConvertible
NSObject
_AFCoreAnalyticsDeviceContextPayloadMutation
AFCoreAnalyticsDeviceContextPayloadMutating
AFCoreAnalyticsDeviceContextPayloadMutability
AFConnectionAvailabilityObserver
AFNetworkAvailabilityObserver
AFConnection
NSXPCListenerDelegate
AFAudioPowerUpdaterDelegate
AFAccessibilityListening
AFDeviceRingerSwitchListening
AFInterstitialProviderDelegate
Private
Internal
AFConnectionClientServiceDelegate
AFClientServiceDelegate
AFInterstitialProvider
AFInvalidating
_AFInterstitialAction
AFAudioSessionAssertionRemoteAcquisitionService
AFAudioSessionAssertionAcquisitionService
AFUpdateAlarmRequest
AFGetSettingsRequest
AFTestRequestOptions
_AFTestRequestOptionsMutation
AFTestRequestOptionsMutating
AFTestRequestOptionsMutability
AFSiriRingtone
AFSiriPhoneticContactNames
AFDeviceStateConnection
AFExperimentConfiguration
_AFExperimentConfigurationMutation
AFExperimentConfigurationMutating
AFExperimentConfigurationMutability
AFSecurityConnection
AFSecurityService
AFProviderService
AFProviderServiceDelegate
AFQueue
NSFastEnumeration
AFSetSettingsRequest
AFBluetoothWirelessSplitterSessionInfo
_AFBluetoothWirelessSplitterSessionInfoMutation
AFBluetoothWirelessSplitterSessionInfoMutating
AFBluetoothWirelessSplitterSessionInfoMutability
AFSpeechRecordingEventListening
STContactAddress
AFVoiceInfo
AFHomeAccessorySiriDataSharingChangeLogEvent
_AFHomeAccessorySiriDataSharingChangeLogEventMutation
AFHomeAccessorySiriDataSharingChangeLogEventMutating
AFHomeAccessorySiriDataSharingChangeLogEventMutability
AFMutableConversationItem
AFConversationStorable
AFTipKitDonator
AFBundleResourceSupport
_AFBundleResourceURLProviding
AFBundleResourceManager
Convenience
AFFlowServiceConnection
AFPhonemeTranscription
AFTranscriptionType
AFOutputVoiceDescriptor
_AFOutputVoiceDescriptorMutation
AFOutputVoiceDescriptorMutating
AFOutputVoiceDescriptorMutability
_AFAssertionImpl
AFAssertion
_AFAssertionProxy
AFRelinquishableAssertion
AFAssertionCoordinator
AFSetAudioSessionActiveContext
_AFSetAudioSessionActiveContextMutation
AFSetAudioSessionActiveContextMutating
AFSetAudioSessionActiveContextMutability
AFDismissAlarmRequest
AFAssertionContext
_AFAssertionContextMutation
AFAssertionContextMutating
AFAssertionContextMutability
AFRemoteRequest
AFSiriTaskExecution
AFSiriResponseHandling
AFSiriRequestFailureHandling
AFExperimentGroup
_AFExperimentGroupMutation
AFExperimentGroupMutating
AFExperimentGroupMutability
AFInstanceInfo
_AFInstanceInfoMutation
AFInstanceInfoMutating
AFInstanceInfoMutability
AFSiriRequestSucceededResponse
AFWatchdogTimer
AFDisambiguationInfo
AFDisambiguationEvent
AFMultiUserStateSnapshot
_AFMultiUserStateSnapshotMutation
AFMultiUserStateSnapshotMutating
AFMultiUserStateSnapshotMutability
AFMyriadContext
_AFMyriadContextMutation
AFMyriadContextMutating
AFMyriadContextMutability
AFSiriActivationConnection
AFSiriActivationService
AFPhonemeMapper
AFPowerAssertionManager
AFAssertionCoordinatorDelegate
AFGetTimerRequest
AFXPCWrapper
AFAnalyticsObserver
AFLanguageDetectionUserContext
AFAudioSessionAssertionConnection
AFSetTimerRequest
AFGetTimerResponse
AFConversationTransaction
AFError
AFAudioPowerXPCProvider
AFAudioPowerProviding
_AFAudioPowerXPCSharedMemory
AFContextManager
AFEndpointInfo
_AFEndpointInfoMutation
AFEndpointInfoMutating
AFEndpointInfoMutability
AFUserNotificationService
AFUserNotificationServiceDelegate
AFUserNotificationProvider
AFAccessibilityState
_AFAccessibilityStateMutation
AFAccessibilityStateMutating
AFAccessibilityStateMutability
AFPersonalUserSettings
AFUserUtterance
AFUserUtteranceAdditions
AFUserUtteranceSelectionResults
AFSecurityDigestibleChunksProvider
AFSecurityDigestibleChunksProviding
AFClockTimer
_AFClockTimerMutation
AFClockTimerMutating
AFClockTimerMutability
AFAnalyticsConnection
AFAnalyticsServiceDelegate
AFAnalyticsService
AFSyncInfo
AFSpeechTestRequestOptions
_AFSpeechTestRequestOptionsMutation
AFSpeechTestRequestOptionsMutating
AFSpeechTestRequestOptionsMutability
AFSpeechPackage
AFSpeechRecordingAlertBehavior
_AFSpeechRecordingAlertBehaviorMutation
AFSpeechRecordingAlertBehaviorMutating
AFSpeechRecordingAlertBehaviorMutability
AFSpeechInfo
_AFSpeechInfoMutation
AFSpeechInfoMutating
AFSpeechInfoMutability
AFMyriadPerceptualAudioHash
_AFMyriadPerceptualAudioHashMutation
AFMyriadPerceptualAudioHashMutating
AFMyriadPerceptualAudioHashMutability
AFDictionarySchema
AFSettingsService
AFSettingsServiceDelegate
AFMultiUserService
AFSpeechPhrase
AFSpeechUtterance
AFSpeechInterpretation
AFSpeechToken
AFSpeechTokenAdditions
AFDeleteSiriHistoryContext
_AFDeleteSiriHistoryContextMutation
AFDeleteSiriHistoryContextMutating
AFDeleteSiriHistoryContextMutability
AFPreferences
AFObjectCreatedSiriResponse
DictionaryRepresentation
AFConnectionUserInteractionAssertion
AFOpportuneSpeakingModuleDataCollectionSanitizedSpeakable
AFOpportuneSpeakingModuleDataCollection
AFSpeechRecognition
AFAudioState
AFTreeNode
AFAssistedDisambiguationRules
AFSiriTaskContextProvider
AFSiriAppContextProviding
AFDeviceRequestHandlingRecord
_AFDeviceRequestHandlingRecordMutation
AFDeviceRequestHandlingRecordMutating
AFDeviceRequestHandlingRecordMutability
AFConversationError
AFAudioSessionCoordinationSystemInfo
_AFAudioSessionCoordinationSystemInfoMutation
AFAudioSessionCoordinationSystemInfoMutating
AFAudioSessionCoordinationSystemInfoMutability
AFHeadphonesAnnouncementRequestCapabilityProvider
AFNotifyObserverDelegate
AFSettingsDelegate
AFAnnouncementRequestCapabilityProviding
AFMyriadMonitor
AFCoercion
AFConversation
AFBulletinAction
AFMyriadAdvertisementContext
_AFMyriadAdvertisementContextMutation
AFMyriadAdvertisementContextMutating
AFMyriadAdvertisementContextMutability
SiriVOXSounds
AFExperimentForSiriVOXSounds
AFHeartBeat
AFClientConfiguration
_AFClientConfigurationMutation
AFClientConfigurationMutating
AFClientConfigurationMutability
AFSpeakableUtteranceParser
_AFSpeakableUtterancePassThroughProvider
AFSpeakableNamespaceProvider
AFNotifyObserver
AFSUPFunctionProvider
AFDictationService
AFDictationConnection
AFDictationConnectionServiceDelegate
AFDictationServiceDelegate
AFSearchAlarmsResponse
AFCoreAnalyticsLoggingService
AFSiriActivationHandlerAssistantDaemon
AFSiriActivationHandling
AFBluetoothDeviceInfo
_AFBluetoothDeviceInfoMutation
AFBluetoothDeviceInfoMutating
AFBluetoothDeviceInfoMutability
AFSiriTaskUsageResult
AFFeatureFlags
ConfigOverrides
SWEFeatureFlags
Additions
Utility
STTimer
AFCarPlayAnnouncementRequestCapabilityProvider
CARSessionObserving
AFSpeechRecordingAlertPolicy
_AFSpeechRecordingAlertPolicyMutation
AFSpeechRecordingAlertPolicyMutating
AFSpeechRecordingAlertPolicyMutability
AFExperiment
_AFExperimentMutation
AFExperimentMutating
AFExperimentMutability
AFRequestInfo
AFInstanceContext
SubsystemSupport
AFInstanceContextHost
AFUpdateAlarmResponse
AFHomeAccessoryInfo
_AFHomeAccessoryInfoMutation
AFHomeAccessoryInfoMutating
AFHomeAccessoryInfoMutability
AFOpportuneSpeakable
AFClockItemStorage
AFCollectionUtilities
BuiltInContextTypes
AFClientLiteInternal
AFClientLiteClientCommandHandling
AFClientLite
AFSynchronousClientLite
AFClientLiteRemoteCommandHandling
AFMediaRemoteDeviceInfo
AFSiriDebugUIRequest
AFLocalization
AFLocalizationAdditions
AFDictationOptions
AFImagePNGData
AFDataStore
_AFDataStoreEntry
AFBluetoothHeadphoneInEarDetectionState
_AFBluetoothHeadphoneInEarDetectionStateMutation
AFBluetoothHeadphoneInEarDetectionStateMutating
AFBluetoothHeadphoneInEarDetectionStateMutability
AFEnablementConfigurationProviderParameters
_AFEnablementConfigurationProviderParametersMutation
AFEnablementConfigurationProviderParametersMutating
AFEnablementConfigurationProviderParametersMutability
AFConversationStore
AFDeviceContext
AFDeviceContextMetadata
AFSpeechCorrectionInfo
AFMyriadRecord
AFAnalytics
AFAnalyticsEventRecord
SiriCoreSQLiteRecord
Utilities
AFMemoryPressureObserver
AFTriggerlessListeningOptions
AFNetworkAvailability
AFAccount
AFDisambiguationAssistancePrivate
AFManagedStorageService
AFManagedStorageConnection
AFManagedStore
AFOpportuneSpeakingModelServiceProtocol
AFOpportuneSpeakingModelDelegate
AFOpportuneSpeakingModel
AFCreateAlarmResponse
AFCoreAnalyticsCrossDeviceEvent
AFRequestHandlingContext
_AFRequestHandlingContextMutation
AFRequestHandlingContextMutating
AFRequestHandlingContextMutability
AFDismissTimerRequest
AFMyriadAdvertisementContextRecord
AFSiriIncomingCall
AFRemoteRequestWatcher
AFSiriActivationListenerDelegate
AFFuture
AFPineBoardSystemStateObserver
AFDeviceContextService
AFDeviceContextServiceDelegate
AFSafetyBlock
AFOneArgumentSafetyBlock
AFTwoArgumentSafetyBlock
AFThreeArgumentSafetyBlock
AFMultiArgumentSafetyBlock
AFOpportuneSpeakingModelFeedback
AFOpportuneSpeakingModelFeedbackManager
AFMyriadSession
_AFMyriadSessionMutation
AFMyriadSessionMutating
AFMyriadSessionMutability
AFMetrics
AFSiriUserNotificationRequest
AFSiriExternalRequest
AFSiriUserNotificationRequestCapabilityManager
AFAnnouncementRequestCapabilityProvidingDelegate
AFSiriNotificationRequest
BackwardCompatibility
AFSettingsConnection
AFSettingsConnectionServiceDelegate
AFAudioSessionCoordinationDeviceInfo
_AFAudioSessionCoordinationDeviceInfoMutation
AFAudioSessionCoordinationDeviceInfoMutating
AFAudioSessionCoordinationDeviceInfoMutability
AFDictationDiscoverabilitySignalsStreamManager
AFSamplingUtilities
AFMyriadGoodnessScoreOverrideState
_AFMyriadGoodnessScoreOverrideStateMutation
AFMyriadGoodnessScoreOverrideStateMutating
AFMyriadGoodnessScoreOverrideStateMutability
AFSiriActivationHandlerFrontendProcess
Test
STCity
AFUserNotificationAnnouncementSpeakingStateService
AFUserNotificationAnnouncementSpeakingStateServiceDelegate
AFLinkedListItem
AFMyriadMetrics
STSettingChange
AFSiriAnnounceIncomingCallRequest
AFSiriRequest
AFSiriActivationHandlerCoreSpeechDaemon
AFSpeechLatticeMitigatorResult
AFLocationSnapshot
_AFLocationSnapshotMutation
AFLocationSnapshotMutating
AFLocationSnapshotMutability
AFAudioDeviceInfo
_AFAudioDeviceInfoMutation
AFAudioDeviceInfoMutating
AFAudioDeviceInfoMutability
AFModesConfiguration
_AFModesConfigurationMutation
AFModesConfigurationMutating
AFModesConfigurationMutability
AFClockAlarmSnapshot
_AFClockAlarmSnapshotMutation
AFClockAlarmSnapshotMutating
AFClockAlarmSnapshotMutability
AFServiceDeviceContext
_AFServiceDeviceContextMutation
AFServiceDeviceContextMutating
AFServiceDeviceContextMutability
AFSpeechRequestOptions
AFAnalyticsObservationService
AFPluginBundle
AFPluginManager
AFExperimentState
_AFExperimentStateMutation
AFExperimentStateMutating
AFExperimentStateMutability
SISchemaClientTurnBasedEvent
AFSiriHomeAutomationRequestInfo
_AFSiriHomeAutomationRequestInfoMutation
AFSiriHomeAutomationRequestInfoMutating
AFSiriHomeAutomationRequestInfoMutability
AFContextResponse
AFSiriAnnouncementRoute
AFClockTimerSnapshot
_AFClockTimerSnapshotMutation
AFClockTimerSnapshotMutating
AFClockTimerSnapshotMutability
AFExperimentContext
_AFExperimentContextMutation
AFExperimentContextMutating
AFExperimentContextMutability
STSiriMessage
AFDeviceCapabilities
AFHomeAnnouncementSnapshot
_AFHomeAnnouncementSnapshotMutation
AFHomeAnnouncementSnapshotMutating
AFHomeAnnouncementSnapshotMutability
AFSiriTaskService
AFSiriTaskDeliveryHandler
AFSiriTaskDelivering
AFSiriTaskmaster
AFSiriUsageResultHandling
AFSiriRequestHandling
STAlarm
AFTreeNodePropertyListSerialization
AFDeleteAlarmRequest
AFUserNotificationAnnouncementSpeakingStateObserver
AFCallStateSnapshot
_AFCallStateSnapshotMutation
AFCallStateSnapshotMutating
AFCallStateSnapshotMutability
AFDisambiguationStore
AFUpdateMessageRequest
STSiriLocation
AFMemoryInfo
_AFMemoryInfoMutation
AFMemoryInfoMutating
AFMemoryInfoMutability
ClockItem
AFClockItem
AFSiriActivationContext
_AFSiriActivationContextMutation
AFSiriActivationContextMutating
AFSiriActivationContextMutability
ShortDescription
AFAssistantSamplingUtilities
AFAudioSessionAssertionService
AFMyriadGoodnessScoreOverrideContext
AFMyriadGoodnessScoreContext
AFMyriadGoodnessScoreEvaluator
AFSiriActivationListener
AFSiriAnnouncementRequestCapabilityManager
SiriVOXTapToSiriBehavior
AFExperimentForSiriVOXTapToSiriBehavior
AFDeviceRingerSwitchObserver
AFCreateMessageRequest
AFMyriadAccessoryMessage
AFUtteranceSuggestions
AFHomeAccessorySiriDataSharingPropagationLogEvent
_AFHomeAccessorySiriDataSharingPropagationLogEventMutation
AFHomeAccessorySiriDataSharingPropagationLogEventMutating
AFHomeAccessorySiriDataSharingPropagationLogEventMutability
STCall
AFMyriadInstrumentation
AFExperimentServerConfigurationInfo
_AFExperimentServerConfigurationInfoMutation
AFExperimentServerConfigurationInfoMutating
AFExperimentServerConfigurationInfoMutability
AFHomeAnnouncement
_AFHomeAnnouncementMutation
AFHomeAnnouncementMutating
AFHomeAnnouncementMutability
AFShowSettingRequest
AFPeerContentTuple
STSetting
AFServiceContextSnapshot
AFGetSettingsResponse
AFMyriadCoordinator
AFUIApplicationSiriTaskDeliverer
AFUIApplicationSiriTaskHandler
AFAceCommandClientFeedbackEnumerating
ClientFeedbackPresented
AFSpeechParameters
_AFSpeechParametersMutation
AFSpeechParametersMutating
AFSpeechParametersMutability
ContextSnapshot
AFContextSnapshot
AFBulletin
AFDialogPhase
AFCallSiteInfo
_AFCallSiteInfoMutation
AFCallSiteInfoMutating
AFCallSiteInfoMutability
AFAnalyticsTurnBasedInstrumentationContext
Instrumentation
AFMachServiceSiriTaskDeliverer
AFMachServiceSiriTaskHandler
AFInstrumentationObserverConnection
AFShowNextEventRequest
SISchemaClientTurnContext
AFDictationSamplingUtilities
AFObjectUpdatedSiriResponse
AFEnablementConfiguration
AFEnablementFlowConfigurationProvider
AFBundleID
SyncPrivate
AFKeyValueObservingDeliveryOptions
AFKeyValueObserver
AFKeyValueObserving
AssistantAdditions
AFSpeechAcousticFeature
AFSpeechAudioAnalytics
AnalyticsContextVending
AFAnalyticsContextVending
AFFlowService
AFDeviceStateService
AFAggregator
AssistantUI
AFShowTimerRequest
AFSiriTether
AFAudioPlaybackRequest
_AFAudioPlaybackRequestMutation
AFAudioPlaybackRequestMutating
AFAudioPlaybackRequestMutability
AFBundleResource
_AFBundleResourceMutation
AFBundleResourceMutating
AFBundleResourceMutability
AFSiriResponse
AFCreateAlarmRequest
SiriMediaRemoteHelpers
AFMediaRemoteUtilities
AFSearchAlarmsRequest
AFInitiateCallRequest
AFMyriadPreferences
AFAudioSessionCoordinationSnapshot
_AFAudioSessionCoordinationSnapshotMutation
AFAudioSessionCoordinationSnapshotMutating
AFAudioSessionCoordinationSnapshotMutability
AFDeviceContextHistoryConfiguration
_AFDeviceContextHistoryConfigurationMutation
AFDeviceContextHistoryConfigurationMutating
AFDeviceContextHistoryConfigurationMutability
AFConversationItem
AFApplicationContext
_AFApplicationContextMutation
AFApplicationContextMutating
AFApplicationContextMutability
AFPendingSpeechRequestService
AFSharedConfidenceScore
_AFSharedConfidenceScoreMutation
AFSharedConfidenceScoreMutating
AFSharedConfidenceScoreMutability
AFAudioPowerUpdater
AFNotifyStatePublisher
InvocationFeedbacks
AFInvocationFeedbackExperiment
STPersonContactHandle
STPerson
AFClientService
AFBluetoothWirelessSplitterSessionStateObserver
AFDeviceContextConnection
_AFDeviceContextServiceDelegateProxy
AFAppContextAggregator
AFClientPluginManager
AFClientPlugin
AceFactorySupport
VSAdditions
AFAnalyticsObserverConnection
AFSystemStateSnapshot
_AFSystemStateSnapshotMutation
AFSystemStateSnapshotMutating
AFSystemStateSnapshotMutability
AFApplicationContextSnapshot
_AFApplicationContextSnapshotMutation
AFApplicationContextSnapshotMutating
AFApplicationContextSnapshotMutability
AFOutputVoiceColorDescriptor
_AFOutputVoiceColorDescriptorMutation
AFOutputVoiceColorDescriptorMutating
AFOutputVoiceColorDescriptorMutability
AFContextRequest
AFSiriClientStateManager
_AFSiriClientState
AFSiriAcousticIDRequest
AFSiriMusicSubscriptionLeaseTakenRequest
AFSiriMusicSmartPlayRequest
AFSiriAceRequest
AFSiriHomeAutomationBackgroundRequest
AFSiriActivationRequest
AFHomeAnnouncementObserver
AudioAnalytics
AFSpeechSynthesisRecord
_AFSpeechSynthesisRecordMutation
AFSpeechSynthesisRecordMutating
AFSpeechSynthesisRecordMutability
AFHomeInfo
_AFHomeInfoMutation
AFHomeInfoMutating
AFHomeInfoMutability
AFInterstitialConfiguration
_AFInterstitialConfigurationMutation
AFInterstitialConfigurationMutating
AFInterstitialConfigurationMutability
AFMultiUserConnection
STSiriContext
AFAnalyticsEvent
AFSetSettingsResponse
AFSiriActivationResult
_AFSiriActivationResultMutation
AFSiriActivationResultMutating
AFSiriActivationResultMutability
AFCommandExecutionInfo
_AFCommandExecutionInfoMutation
AFCommandExecutionInfoMutating
AFCommandExecutionInfoMutability
SISchemaClientAnyEvent
AMOSExtensions
AFConnectionEntitlementCache
AssistantServices
AFPairedBluetoothDevicesObserver
AFConversationInsertion
AFMediaPlaybackStateSnapshot
_AFMediaPlaybackStateSnapshotMutation
AFMediaPlaybackStateSnapshotMutating
AFMediaPlaybackStateSnapshotMutability
STSiriModelObject
AFInterstitialCommandWrapper
AFChildConversationItemList
AFMyriadAdvertisementContextManager
AFRequestCompletionOptions
AFApplicationInfo
AFMyriadEmergencyCallPunchout
AFClockAlarm
_AFClockAlarmMutation
AFClockAlarmMutating
AFClockAlarmMutability
AFSetAudioSessionActiveResult
_AFSetAudioSessionActiveResultMutation
AFSetAudioSessionActiveResultMutating
AFSetAudioSessionActiveResultMutability
AFContextDonationService
AFDeviceContextConnectionDelegate
AFContextDonation
AFSyncSnapshot
AFShowAlarmRequest
AFPeerInfo
_AFPeerInfoMutation
AFPeerInfoMutating
AFPeerInfoMutability
AFClientInfo
_AFClientInfoMutation
AFClientInfoMutating
AFClientInfoMutability
AFPeerMap
AFSiriTask
BSXPCCoding
AFAccessibilityObserver
init
copy
_descriptionWithIndent:
description
initWithFormat:
arrayWithObjects:count:
componentsJoinedByString:
hash
nearbyProductType
isEqual:
proximity
alarmFiring
timerFiring
playbackState
playbackRecency
homeAnnouncementState
homeAnnouncementRecency
nearbyDevicesRequestIdentifier
targetedResult
contextIdentifier
decodeObjectOfClass:forKey:
initWithNearbyProductType:proximity:alarmFiring:timerFiring:playbackState:playbackRecency:homeAnnouncementState:homeAnnouncementRecency:nearbyDevicesRequestIdentifier:targetedResult:contextIdentifier:
encodeObject:forKey:
objectForKey:
setObject:forKey:
supportsSecureCoding
copyWithZone:
encodeWithCoder:
initWithCoder:
TB,R
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
initWithDictionaryRepresentation:
buildDictionaryRepresentation
.cxx_destruct
_nearbyProductType
_proximity
_alarmFiring
_timerFiring
_playbackState
_playbackRecency
_homeAnnouncementState
_homeAnnouncementRecency
_nearbyDevicesRequestIdentifier
_targetedResult
_contextIdentifier
T@"NSString",R,C,N,V_nearbyProductType
T@"NSString",R,C,N,V_proximity
T@"NSNumber",R,C,N,V_alarmFiring
T@"NSNumber",R,C,N,V_timerFiring
T@"NSString",R,C,N,V_playbackState
T@"NSNumber",R,C,N,V_playbackRecency
T@"NSString",R,C,N,V_homeAnnouncementState
T@"NSNumber",R,C,N,V_homeAnnouncementRecency
T@"NSString",R,C,N,V_nearbyDevicesRequestIdentifier
T@"NSString",R,C,N,V_targetedResult
T@"NSString",R,C,N,V_contextIdentifier
initWithBaseModel:
setNearbyProductType:
setProximity:
setAlarmFiring:
setTimerFiring:
setPlaybackState:
setPlaybackRecency:
setHomeAnnouncementState:
setHomeAnnouncementRecency:
setNearbyDevicesRequestIdentifier:
setTargetedResult:
setContextIdentifier:
generate
_baseModel
_mutationFlags
mutatedCopyWithMutator:
newWithBuilder:
addObject:
count
countByEnumeratingWithState:objects:count:
length
unsignedIntegerValue
defaultCenter
postNotificationName:object:
networkAvailability:isAvailable:
initWithUTF8String:
setImagePath:
setSymbolName:
defaultContext
initWithInstanceContext:
sharedPreferences
initWithTargetQueue:instanceContext:
initWithTargetQueue:
errorWithCode:
_connectionFailedWithError:
_clearConnection
dealloc
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
_stopInputAudioPowerUpdates
_siriClientStateManager
beginListeningForClient:
endListeningForClient:
_requestWillBeginWithRequestClass:isSpeechRequest:speechRequestOptions:requestInfo:isBackgroundRequest:analyticsEventProvider:
_willStartRequestWithSpeech:speechRequestOptions:requestInfo:analyticsEventProvider:
_tellDelegateRequestWillStart
_scheduleRequestTimeoutForReason:
_beginInterstitialsForReason:
_endInterstitialsForReason:
_cancelRequestTimeoutForReason:
assistantConnection:startUIRequestWithText:completion:
assistantConnection:startUIRequestWithInfo:completion:
_enqueueInterstitialCommand:
aceId
setRefId:
_dispatchCommand:isInterstitial:interstitialPhase:interstitialDelay:reply:
assistantConnection:receivedCommand:completion:
logEventWithType:context:contextNoCopy:
_pauseRequestTimeoutForReason:
timeIntervalSinceReferenceDate
processInfo
systemUptime
reportIssueForType:subtype:context:
_resumeRequestTimeoutForReason:
encodedClassName
shouldSpeak
_tellDelegateShouldSpeakChanged:
assistantConnectionDidChangeAudioRecordingPower:
initWithXPCWrapper:
initWithProvider:queue:frequency:delegate:
beginUpdate
_dispatchCallbackGroupBlock:
endUpdate
invalidate
_tellDelegateAudioSessionIDChanged:
isEqualToString:
sharedManager
assistantConnectionRequestWillStart:
_willFailRequestWithError:
assistantConnection:requestFailedWithError:requestClass:
_willCompleteRequest
assistantConnectionRequestFinished:
_requestDidEnd
_checkAndSetIsCapturingSpeech:
assistantConnection:shouldSpeak:
assistantConnection:didChangeAudioSessionID:
logEventWithType:context:
assistantConnectionWillStartAcousticIDRequest:
assistantConnectionDidDetectMusic:
numberWithBool:
dictionaryWithObjects:forKeys:count:
assistantConnection:didFinishAcousticIDRequestWithSuccess:
assistantConnection:setUserActivtiyInfoAndMakeCurrent:webpageURL:
assistantConnectionInvalidateCurrentUserActivity:
assistantConnection:wantsToCacheImage:
assistantConnection:extensionRequestWillStartForApplication:
assistantConnection:extensionRequestFinishedForApplication:error:
assistantConnectionAudioSessionDidBeginInterruption:userInfo:
assistantConnectionAudioSessionDidBeginInterruption:
assistantConnectionAudioSessionDidEndInterruption:shouldResume:userInfo:
assistantConnectionAudioSessionDidEndInterruption:shouldResume:
assistantConnection:willStartAudioPlaybackRequest:
assistantConnection:didStartAudioPlaybackRequest:
assistantConnection:didStopAudioPlaybackRequest:error:
assistantConnection:willProcessStartPlayback:intent:completion:
assistantConnection:willProcessStartPlayback:
assistantConnection:startPlaybackDidFail:
assistantConnection:audioSessionWillBecomeActive:
assistantConnection:audioSessionDidBecomeActive:
assistantConnection:willProcessAppLaunchWithBundleIdentifier:
assistantConnection:appLaunchFailedWithBundleIdentifier:
assistantConnection:speechRecordingWillBeginWithInputAudioPowerXPCWrapper:
assistantConnectionSpeechRecordingWillBegin:
assistantConnection:speechRecordingDidBeginOnAVRecordRoute:audioSessionID:
assistantConnection:speechRecordingDidBeginOnAVRecordRoute:
assistantConnection:speechRecordingDidChangeAVRecordRoute:
assistantConnectionSpeechRecordingDidDetectStartpoint:
assistantConnection:speechRecordingPerformTwoShotPromptWithType:completion:
stringWithFormat:
errorWithCode:description:underlyingError:
assistantConnectionSpeechRecordingDidEnd:
assistantConnectionSpeechRecordingDidCancel:
assistantConnection:speechRecordingDidFail:
assistantConnection:speechRecognized:
assistantConnection:recognizedAdditionalSpeechInterpretation:refId:
assistantConnection:recognitionUpdateWithPhrases:utterances:refId:
assistantConnection:recognitionUpdateWillBeginForTask:
assistantConnection:speechRecognizedPartialResult:
assistantConnection:speechRecognitionDidFail:
setAccessibilityState:
setDeviceRingerSwitchState:
_handleInterstitialPhase:fromProvider:displayText:speakableText:expectedDelay:context:completion:
beginTransaction
_tellSpeechDelegateRecordingDidFail:
_completeRequestWithUUID:forReason:error:
endTransaction
createXPCConnectionWithMachServiceName:options:
setInvalidationHandler:
_updateState
_updateClientConfiguration
setInterruptionHandler:
_setQueue:
setRemoteObjectInterface:
setExportedInterface:
initWithConnection:targetQueue:
setExportedObject:
resume
_invokeRequestTimeoutForReason:
initWithTimeoutInterval:onQueue:timeoutHandler:
start
_clientService
cancelRequestForReason:withError:
stop
cancel
_extendRequestTimeoutForReason:
_setShouldSpeak:
requestShouldSpeakStateWithReply:
numberWithUnsignedInt:
_setAudioSessionID:
requestStateUpdateWithReply:
_clientConfiguration
setConfiguration:
activationEvent
startRequest
initWithUUIDString:
startLocalRequest
UUID
beginRequestWithUUID:forClient:
_willCancelRequest
UUIDString
date
timeIntervalSince1970
numberWithDouble:
_startRequestMetricSettings
logEvent:
turnIdentifier
_shouldEmitUEIRequestLinkForRequestInfo:
activationEventTime
activationEventMachAbsoluteTime
logSiriSpeechRequestStarted
logSiriOtherRequestStarted
_updateStateIfNotInSync
sharedObserver
addListener:
endSessionForClient:
logSiriRequestCancelled
removeListener:
endRequestWithUUID:forClient:
domain
code
errorWithDomain:code:userInfo:
logSiriRequestFailedWithError:
reportIssueForError:type:subtype:context:
logSiriRequestSucceeded
recordAWDSuccessMetrics
willPresentUsefulUserResultAtDate:
enqueueObject:
isDeviceInStarkMode
isDeviceInCarDNDMode
initWithStyle:recordRoute:isVoiceTrigger:isDucking:isTwoShot:speechEndHostTime:context:preferences:delegate:
dequeueObject
isLocaleIdentifierNativelySupported:
siriIsSupportedForLanguageCode:productName:productVersion:error:
containsObject:
sharedAvailability
addObserver:
beginMonitoringAvailability
isAvailable
isNetworkAvailable
currentLanguageCode
isSiriUODAvailableForLanguage:
removeObserver:
languageCode
outputVoice
_willEndSession
currentCoordinator
endTask
endSession
invalidateClient:
preheatWithStyle:forOptions:
_clientServiceWithErrorHandler:
boostedPreheatWithStyle:completion:
forceAudioSessionActiveWithOptions:completion:
forceAudioSessionActiveWithOptions:reason:completion:
forceAudioSessionActiveWithOptions:reason:speechRequestOptions:completion:
setOptions:
setReason:
setSpeechRequestOptions:
audioSessionID
error
forceAudioSessionActiveWithContext:completion:
setAudioSessionID:
errorWithCode:description:
setError:
initWithBlock:defaultValue:
invokeWithValue:
reason
beginSpeakingForClient:
endSpeakingForClient:
initWithBlock:
invokeWithSignal:
forceAudioSessionInactiveWithOptions:completion:
resumeInterruptedAudioPlaybackIfNeeded
willPresentUIWithReply:
beginSessionForClient:
didDismissUI
setLockState:showingLockScreen:
setIsDeviceInStarkMode:
setIsDeviceInCarDNDMode:
setAreAnnouncementRequestsPermittedByPresentationWhileActive:
setIsDeviceWatchAuthenticated:
setActivationEvent:
setText:
_startRequestWithInfo:
setLegacyDirectActionIdentifier:
setHandoffRequestData:
_startRequestWithAceCommand:turnIdentifier:suppressAlert:
startRequestWithCorrectedText:forSpeechIdentifier:userSelectionResults:turnIdentifier:
setCorrectedSpeech:
setCorrectedSpeechContext:
setTurnIdentifier:
combinedRank
setCombinedRank:
combinedScore
setCombinedScore:
interactionId
setInteractionId:
onDeviceUtterancesPresent
setOnDeviceUtterancesPresent:
originalRank
setOriginalRank:
originalScore
setOriginalScore:
previousUtterance
setPreviousUtterance:
sessionId
setSessionId:
utteranceSource
setUtteranceSource:
speechRequestOptions
_requestWillBeginWithRequestClass:isSpeechRequest:speechRequestOptions:requestInfo:analyticsEventProvider:
startRequestWithInfo:completion:
setValue:forKey:
alwaysShowRecognizedSpeech
siriResponseShouldAlwaysPrint
alwaysObscureBackgroundContentWhenActive
useDeviceSpeakerForTTS
_metricContextValueForUseDeviceSpeakerForTTS:
setStartLocalRequest:
setStartRequest:
startRecordingAndGetContinueBlockForPendingSpeechRequestWithOptions:
logSiriInvokedVia:
startRecordingForPendingSpeechRequestWithOptions:requestId:completion:
pendCallbacksUntilAfterContinuation
continuePendingSpeechRequestWithId:fromTimestamp:
invoke
serverCommandId
startSpeechPronunciationRequestWithOptions:context:completion:
startAcousticIDRequestWithOptions:context:completion:
cancelRequest
cancelRequestForReason:
userInfo
reportIssueForError:type:context:
stopSpeechWithOptions:
stopRecordingHostTime
updateSpeechOptions:
rollbackClearContext
rollbackRequest
_unsafeAveragePower
_unsafePeakPower
sendGenericAceCommand:turnIdentifier:conflictHandler:
setAceId:
commands
dictionary
performGenericAceCommand:interruptOutstandingRequest:reply:
refId
removeObjectForKey:
getDeferredObjectsWithIdentifiers:completion:
allValues
setWithArray:
cacheIdentifier
deserializeCacheItems:completion:
getSerializedCachedObjectsWithIdentifiers:completion:
getRemoteClockTimerSnapshotWithCompletion:
clearContext
willSetApplicationContextWithRefId:
setApplicationContext:
fetchAppicationContextForApplicationInfo:supplementalContext:refID:
setOverriddenApplicationContext:withContext:
setAlertContextDirty
prepareForPhoneCall
telephonyRequestCompleted
willPresentUsefulUserResultWithType:forCommand:
_willPresentUsefulUserResultWithType:
startAudioPlaybackRequest:options:reply:
stopAudioPlaybackRequest:immediately:
stopAllAudioPlaybackRequests:
updateSpeechSynthesisRecord:
adviseSessionArbiterToContinueWithPreviousWinner:
_fetchShouldSpeak:
initialize
assistantIsSupportedForLanguageCode:error:
siriIsSupportedForLanguageCode:deviceProductVersion:error:
assistantIsSupported
stopMonitoringAvailability
defrost
listener:shouldAcceptNewConnection:
audioPowerUpdaterDidUpdate:averagePower:peakPower:
accessibilityObserver:stateDidChangeFrom:to:
deviceRingerObserver:didChangeState:
interstitialProvider:handlePhase:displayText:speakableText:expectedDelay:context:completion:
setDelegate:
_startUIRequestWithText:completion:
_startUIRequestWithInfo:completion:
_handleCommand:reply:
_aceConnectionWillRetryOnError:
_startInputAudioPowerUpdatesWithXPCWrapper:
_setRecordRoute:
_markIsDucking
_markIsTwoShot
_markSpeechRecognized
_updateSpeechEndHostTime:
_tellDelegateWillStartAcousticIDRequest
_tellDelegateDidDetectMusic
_tellDelegateDidFinishAcousticIDRequestWithSuccess:
_tellDelegateSetUserActivityInfo:webpageURL:
_tellDelegateInvalidateCurrentUserActivity
_tellDelegateCacheImage:
_tellDelegateExtensionRequestWillStartForApplication:
_tellDelegateExtensionRequestFinishedForApplication:error:
_tellDelegateAudioSessionDidBeginInterruptionWithUserInfo:
_tellDelegateAudioSessionDidEndInterruption:userInfo:
_tellDelegateAudioPlaybackRequestWillStart:
_tellDelegateAudioPlaybackRequestDidStart:
_tellDelegateAudioPlaybackRequestDidStop:error:
_tellDelegateWillProcessStartPlayback:intent:completion:
_tellDelegateStartPlaybackDidFail:
_tellDelegateAudioSessionWillBecomeActive:
_tellDelegateAudioSessionDidBecomeActive:
_tellDelegateWillProcessAppLaunchWithBundleIdentifier:
_tellDelegateFailedToLaunchAppWithBundleIdentifier:
_tellSpeechDelegateRecordingWillBeginWithInputAudioPowerXPCWrapper:
_tellSpeechDelegateRecordingDidBeginOnAVRecordRoute:audioSessionID:
_tellSpeechDelegateRecordingDidChangeAVRecordRoute:
_tellSpeechDelegateRecordingDidDetectStartpoint
_tellSpeechDelegateToPerformTwoShotPromptWithType:reply:
_tellSpeechDelegateRecordingDidEnd
_tellSpeechDelegateRecordingDidCancel
_tellSpeechDelegateSpeechRecognized:
_tellSpeechDelegateRecognizedAdditionalSpeechInterpretation:refId:
_tellSpeechDelegateRecordingDidUpdateRecognitionPhrases:utterances:refId:
_tellSpeechDelegateRecognitionUpdateWillBeginForTask:
_tellSpeechDelegateSpeechRecognizedPartialResult:
_tellSpeechDelegateRecognitionDidFail:
_connection
_extendExistingRequestTimeoutForReason:
preheatWithStyle:
forceAudioSessionActive
acquireAudioSessionWithContext:completion:
forceAudioSessionInactive
willPresentUI
setLockState:screenLocked:
setCarDNDActive:
setModesConfiguration:
setAnnouncementRequestsPermittedByPresentationWhileActive:
setWatchAuthenticated:
setShouldWaitForMyriad:
setMyriadDecisionResult:
setVoiceOverIsActive:
startRequestWithText:
startDirectActionRequestWithString:
startContinuationRequestWithUserInfo:
startRequestWithAceCommand:
startRequestWithCorrectedText:forSpeechIdentifier:userSelectionResults:
startRequestWithInfo:
startRequestWithInfo:activationEvent:
startSpeechRequestWithOptions:
startRecordingForPendingSpeechRequestWithOptions:completion:
startSpeechPronunciationRequestWithOptions:pronunciationContext:
startAcousticIDRequestWithOptions:
cancelSpeech
failRequestWithError:
stopSpeech
recordUIMetrics:
recordRequestMetric:withTimestamp:
isRecording
hasActiveRequest
averagePower
peakPower
sendGenericAceCommand:
sendGenericAceCommand:conflictHandler:
sendReplyCommand:
getCachedObjectsWithIdentifiers:completion:
setApplicationContextForApplicationInfos:withRefId:
setApplicationContextForApplicationInfos:
setAlertContextWithBulletins:
usefulUserResultWillPresent
willPresentUsefulUserResultWithType:
checkLanguageReady:completion:
startAudioPlaybackRequest:options:completion:
fetchShouldSpeak:
_speechRecordingDidFailWithError:
_willStopRecordingWithSignpostID:
acquireUserInteractionAssertion
delegate
speechDelegate
setSpeechDelegate:
_targetQueue
_outstandingRequestClass
_clientID
_initiationCallSiteInfo
_cachedBulletins
_activeRequestUUID
_activeRequestType
_activeRequestUsefulUserResultType
_requestTimeoutTimer
_requestCompletion
_activeRequestActivationEvent
_activeRequestSpeechEvent
_activeRequestHasSpeechRecognition
_activeRequestIsDucking
_activeRequestIsTwoShot
_activeRequestBeginTime
_activeRequestSpeechEndHostTime
_activeRequestNumberOfPresentedInterstitials
_activeRequestStartSpeechTimeRequested
_activeRequestStartSpeechTimeAPICalled
_activeRequestStopSpeechTimeRequested
_activeRequestStopSpeechTimeAPICalled
_activeRequestSpeechRecordingEndTimeInterval
_activeRequestSpeechRecognitionTimeInterval
_activeRequestInitialInterstitialBeginTimeInterval
_activeTurnIdentifier
_replyHandlerForAceId
_stateInSync
_shouldSpeak
_isCapturingSpeech
_hasOutstandingRequest
_audioSessionID
_recordRoute
_playbackRoute
_inputAudioPowerUpdater
_interstitialProvider
_interstitialCommandQueue
_clientConfigurationIsInSync
_voiceOverIsActive
_lastRetryError
_pendingSpeechRequestCounter
_speechCallbackGroup
_uufrID
_preferences
_instanceContext
_analytics
_activePlaybackCount
_delegate
_speechDelegate
T@"<AFAssistantUIService>",W,N,V_delegate
T@"<AFSpeechDelegate>",W,N,V_speechDelegate
TB,R,N
startSpeechRequestWithSpeechFileAtURL:isNarrowBand:
_startSpeechWithURL:isNarrowBand:
_requestBarrierWithReply:
_broadcastCommandDictionary:
startSpeechRequestWithSpeechFileAtURL:
requestBarrier:
sendFeedbackToAppPreferencesPredictorForMetricsContext:selectedBundleId:
broadcastCommandDictionary:
_barrierWithReply:
_clearAssistantInfoForAccountIdentifier:
remoteObjectProxy
remoteObjectProxyWithErrorHandler:
currentState
state
initWithAccessibilityState:deviceRingerSwitchState:isDeviceInCarDNDMode:isDeviceInStarkMode:isDeviceWatchAuthenticated:areAnnouncementRequestsPermittedByPresentationWhileActive:outputVolume:tapToSiriAudioPlaybackRequest:twoShotAudioPlaybackRequest:deviceSetupFlowBeginDate:deviceSetupFlowEndDate:
_barrier
_clearAssistantInfoForAccountWithIdentifier:
startUIRequest
userDataSyncNeeded
_connectionDelegate
assistantConnection:openApplicationWithBundleID:URL:completion:
assistantConnection:openURL:completion:
assistantConnectionDismissAssistant:
assistantConnection:dismissAssistantWithReason:
assistantConnection:didHandleQuickStopWithAction:
shouldSpeakChanged:
audioSessionIDChanged:
requestHandleCommand:reply:
requestRequestedOpenApplicationWithBundleID:URL:reply:
requestRequestedOpenURL:reply:
requestRequestedDismissAssistant
requestRequestedDismissAssistantWithReason:
quickStopWasHandledWithActions:
acousticIDRequestWillStart
musicWasDetected
acousticIDRequestDidFinishWithSuccess:
setUserActivityInfo:webpageURL:
invalidateCurrentUserActivity
cacheImage:
extensionRequestWillStartForApplication:
extensionRequestFinishedForApplication:error:
startUIRequestWithText:completion:
startUIRequestWithInfo:completion:
getBulletinContext:
speechRecordingWillBeginWithInputAudioPowerXPCWrapper:reply:
speechRecordingDidBeginOnAVRecordRoute:audioSessionID:reply:
speechRecordingDidChangeAVRecordRoute:isDucking:isTwoShot:speechEndHostTime:reply:
speechRecordingStartpointDetectedWithReply:
speechRecordingPerformTwoShotPromptWithType:reply:
speechRecordingDidEndWithReply:
speechRecordingDidCancelWithReply:
speechRecordingDidFail:reply:
speechRecognized:
speechRecognizedAdditionalInterpretation:refId:
speechRecognizedPartialResult:
speechRecognitionDidFail:
speechRecordingDidUpdateRecognitionPhrases:utterances:refId:
speechRecordingWillBeginRecognitionUpdateForTask:
willStopRecordingWithSignpostID:
aceConnectionWillRetryOnError:
audioSessionDidBeginInterruptionWithUserInfo:
audioSessionDidEndInterruption:userInfo:
audioPlaybackRequestWillStart:
audioPlaybackRequestDidStart:
audioPlaybackRequestDidStop:error:
willProcessStartPlayback:intent:completion:
startPlaybackDidFail:
audioSessionWillBecomeActive:
audioSessionDidBecomeActive:
willProcessAppLaunchWithBundleIdentifier:
appLaunchFailedWithBundleIdentifier:
requestDidReceiveCommand:reply:
sharedAnalytics
logInstrumentation:machAbsoluteTime:turnIdentifier:
initWithNSUUID:
setMteRequestId:
af_dialogPhase
isReflectionDialogPhase
isErrorDialogPhase
isAcknowledgementDialogPhase
setUufrReadySource:
setAceCommandClass:
setRequestStatus:
setUnderlyingError:
setUnderUnderlyingError:
numberWithInteger:
stringValue
setErrorCode:
setErrorDomain:
setExists:
setStartedOrChanged:
setHasStartedOrChanged:
setEnded:
setHasEnded:
initWithDictionary:
integerValue
currentContext
bestSupportedLanguageCodeForLanguageCode:
gender
defaultGenderForOutputVoiceLanguageCode:
initWithStyle:languageCode:gender:recordRoute:isVoiceTrigger:isDucking:isTwoShot:speechEndHostTime:
mutableCopy
_performNextActionWithExpectedDelay:
_invalidate
objectAtIndex:
removeObjectAtIndex:
doubleValue
phase
duration
displayKey
sharedInstance
bundleForClass:
localizedStringForKey:gender:table:bundle:languageCode:
speakableKey
initWithStyle:recordRoute:isVoiceTrigger:isDucking:isTwoShot:speechEndHostTime:context:delegate:
_queue
_configuration
_pendingActions
_context
initWithPhase:displayKey:speakableKey:
initWithDuration:
_phase
_displayKey
_speakableKey
_duration
Tq,R,N,V_phase
T@"NSString",R,C,N,V_displayKey
T@"NSString",R,C,N,V_speakableKey
Td,R,N,V_duration
style
isVoiceTrigger
isDucking
isTwoShot
speechEndHostTime
stringByAppendingString:
hasPrefix:
substringFromIndex:
rangeOfString:
dictionaryArrayWithAceObjectArray:
setChatIdentifier:
setOutgoing:
setDisplayText:
setData:
setObject:
setMsgRecipients:
setFullName:
setEmailAddress:
setEmails:
setNumber:
setPhones:
timestamp
setTimestamp:
effectiveDate
setEffectiveDate:
expirationDuration
setExpirationDuration:
setUserInfo:
initWithInstanceContext:acquisitionContext:relinquishmentHandler:
acquireAudioSessionAssertionWithContext:relinquishmentHandler:
processIdentifier
numberWithInt:
processName
addEntriesFromDictionary:
firstObject
_initWithRequest:
decodeObjectOfClasses:forKey:
alarm
createResponse
alarms
setAlarms:
_alarms
T@"NSArray",C,N,V_alarms
settings
setSettings:
_settings
T@"NSArray",C,N,V_settings
requestPath
inputOrigin
isEyesFree
initWithRequestPath:inputOrigin:isEyesFree:
_requestPath
_inputOrigin
_isEyesFree
Tq,R,N,V_requestPath
T@"NSString",R,C,N,V_inputOrigin
T@"NSNumber",R,C,N,V_isEyesFree
setRequestPath:
setInputOrigin:
setIsEyesFree:
initWithLanguageCode:
currentLocale
assistantIsEnabled
_bestVoiceInfoWithCurrentLocale:
_generateSpokenTextForContacts:voiceLanguage:displayedCallerID:callerIDType:callDestinationID:callDestinationIDType:callServiceSpeakableName:
_spokenTextForContacts:callServiceSpeakableName:languageCode:
_spokenTextForCallerID:ofType:rawCaller:rawCallerType:languageCode:
_spokenTextForCallDestinationID:ofType:callServiceSpeakableName:languageCode:
_phoneticNamesForContact:languageCode:
spokenName
_spokenTextForOneContact:callServiceSpeakableName:languageCode:
givenName
familyName
lastObject
_spokenTextForTwoContacts:callServiceSpeakableName:languageCode:
stringByReplacingOccurrencesOfString:withString:
localeWithLocaleIdentifier:
setLocale:
stringFromNumber:
_spokenTextForThreeContacts:callServiceSpeakableName:languageCode:
numberWithUnsignedLong:
_escapeCallerIDString:forType:
_escapeCallDestinationIDString:forType:
valueForKey:
dataUsingEncoding:
JSONObjectWithData:options:error:
_phoneticInfoForContact:languageCode:firstName:middleName:lastName:nickname:
stringByReplacingPhonemesInString:
pronunciationGivenName
pronunciationFamilyName
phoneticGivenName
phoneticMiddleName
phoneticFamilyName
setLanguageCode:
setGivenName:
middleName
setMiddleName:
setFamilyName:
nickname
setNickname:
organizationName
setOrganizationName:
initWithContacts:
textToSpeak
contacts
setContacts:
displayedCallerID
setDisplayedCallerID:
callerIDType
setCallerIDType:
callServiceSpeakableName
setCallServiceSpeakableName:
callDestinationID
setCallDestinationID:
callDestinationIDType
setCallDestinationIDType:
voiceInfo
_languageMismatch
_voiceLanguage
_contacts
_displayedCallerID
_callerIDType
_callServiceSpeakableName
_callDestinationID
_callDestinationIDType
_voiceInfo
T@"NSArray",&,N,V_contacts
T@"NSString",C,N,V_displayedCallerID
Tq,N,V_callerIDType
T@"NSString",C,N,V_callServiceSpeakableName
T@"NSString",C,N,V_callDestinationID
Tq,N,V_callDestinationIDType
T@"AFVoiceInfo",R,N,V_voiceInfo
T@"NSString",R,N
_givenName
_middleName
_familyName
_nickname
_organizationName
_languageCode
T@"NSString",C,N,V_givenName
T@"NSString",C,N,V_middleName
T@"NSString",C,N,V_familyName
T@"NSString",C,N,V_nickname
T@"NSString",C,N,V_organizationName
T@"NSString",C,N,V_languageCode
localizedStringForKey:table:bundle:languageCode:
sharedConnection
fetchSiriKitApplicationsWithNotificationPreviewRestrictionsWithCompletion:
invokeMethodOnRemoteWithBlock:onError:
getPersonalSettingsForSharedUserID:completion:
fetchSiriKitAppIdentifiersWithNotificationPreviewRestrictionsWithCompletion:
type
identifier
version
controlGroup
experimentGroups
salt
setWithObjects:
initWithType:identifier:version:controlGroup:experimentGroups:salt:
initWithCapacity:
_type
_identifier
_version
_controlGroup
_experimentGroups
_salt
Tq,R,N,V_type
T@"NSString",R,C,N,V_identifier
T@"NSString",R,C,N,V_version
T@"AFExperimentGroup",R,C,N,V_controlGroup
T@"NSArray",R,C,N,V_experimentGroups
T@"NSString",R,C,N,V_salt
setType:
setIdentifier:
setVersion:
setControlGroup:
setExperimentGroups:
setSalt:
_invalidateConnection
_dispatchCallbackForProcessedData:error:completion:
_processData:usingProcedure:completion:
_dispatchCallbackForProcessedDataMap:errorMap:completion:
_processDataMap:usingProcedure:completion:
setKeychainValue:forKey:accountIdentifier:completion:
setInternalAuthAppleConnectServiceTicket:completion:
setInternalAuthSessionToken:completion:
internalAuthAppleConnectServiceTicket:
internalAuthSessionToken:
_connectionInterrupted
_connectionInvalidated
processData:usingProcedure:completion:
processDataMap:usingProcedure:completion:
_connectionQueue
_callbackQueue
doCommandForServicePath:className:infoDictionary:executionInfo:reply:
beginSyncForServicePath:className:requestUUID:info:reply:
fetchCurrentSyncSnapshotForServicePath:className:key:completion:
clearDomainObjectsForServicePath:className:
preheatBundleForServicePath:
runMaintenanceWorkForServicePath:className:completion:
reloadServiceBundleAtPath:
interfaceWithProtocol:
syncChunksWithPreAnchor:postAnchor:updates:deletes:validity:forRequestUUID:reply:
openURL:reply:
dismissAssistant
dismissAssistantWithReason:
getLockStateWithReply:
getCarDNDModeWithReply:
getStarkModeWithReply:
getWatchAuthenticatedWithReply:
handleCommand:executionInfo:completion:
getTimeoutSuspendedWithReply:
assistantServiceWillCrashForStuckSyncPluginAtPath:
prepareForAudioHandoffWithCompletion:
prepareForAudioHandoffFailedWithCompletion:
fetchContextsForKeys:forRequestID:includesNearbyDevices:completion:
setClasses:forSelector:argumentIndex:ofReply:
nextItem
removeFromList
object
enqueueObjects:
initWithObject:
insertAfterItem:
queue:didEnqueueObjects:
_objects
stringByAppendingFormat:
frontObject
dequeueAllObjects
_head
_tail
_count
T@,R,N
TQ,R,N
T@"<AFQueueDelegate>",W,N,V_delegate
_initWithRequest:settingChanges:
encodeBool:forKey:
decodeBoolForKey:
createResponseWithSettingChanges:
_setSettings:
applyChanges
_setApplyChanges:
_applyChanges
T@"NSArray",C,N,S_setSettings:,V_settings
TB,N,S_setApplyChanges:,V_applyChanges
deviceAddresses
initWithState:deviceAddresses:
_state
_deviceAddresses
Tq,R,N,V_state
T@"NSArray",R,C,N,V_deviceAddresses
setState:
setDeviceAddresses:
handleSpeechRecordingEvent:
initWithType:stringValue:contactIdentifier:contactInternalGUID:
initWithType:stringValue:
initWithString:
appendString:
appendFormat:
absoluteString
encodeInteger:forKey:
decodeIntegerForKey:
initWithStringValue:
contactIdentifier
contactInternalGUID
_aceContextObjectValue
_stringValue
_contactIdentifier
_contactInternalGUID
data
internalGUID
st_contactAddressValue
initWithLanguageCode:gender:isCustom:name:footprint:contentVersion:masteredVersion:
initWithLanguageCode:gender:isCustom:
isEqualToNumber:
genderString
footprintString
boolValue
footprint
initWithLanguageCode:gender:footprint:isCustom:
initWithLanguageCode:gender:name:footprint:isCustom:
isLanguageAndGenderEqual:
dictionaryRepresentation
isCustom
setIsCustom:
name
contentVersion
masteredVersion
setGender:
wasInitializedFromDictionaryRepresentation
_isCustom
_wasInitializedFromDictionaryRepresentation
_footprint
_name
_contentVersion
_masteredVersion
_gender
Tq,N,V_gender
TB,R,N,V_wasInitializedFromDictionaryRepresentation
T@"NSString",R,N,V_languageCode
TB,N,V_isCustom
Tq,R,N,V_footprint
T@"NSString",R,N,V_name
T@"NSNumber",R,N,V_contentVersion
T@"NSString",R,N,V_masteredVersion
previousOptInStatus
newOptInStatus
changeSource
changeReason
buildVersion
productVersion
schemaVersion
logEventIdentifier
initWithDate:previousOptInStatus:newOptInStatus:changeSource:changeReason:buildVersion:productVersion:schemaVersion:logEventIdentifier:
_date
_previousOptInStatus
_newOptInStatus
_changeSource
_changeReason
_buildVersion
_productVersion
_schemaVersion
_logEventIdentifier
T@"NSDate",R,C,N,V_date
Tq,R,N,V_previousOptInStatus
Tq,R,N,V_newOptInStatus
Tq,R,N,V_changeSource
T@"NSString",R,C,N,V_changeReason
T@"NSString",R,C,N,V_buildVersion
T@"NSString",R,C,N,V_productVersion
T@"NSString",R,C,N,V_schemaVersion
T@"NSString",R,C,N,V_logEventIdentifier
setDate:
setPreviousOptInStatus:
setNewOptInStatus:
setChangeSource:
setChangeReason:
setBuildVersion:
setProductVersion:
setSchemaVersion:
setLogEventIdentifier:
initWithIdentifier:revisionIdentifier:type:aceObject:dialogPhase:presentationState:aceCommandIdentifier:virgin:transient:supplemental:immersiveExperience:associatedDataStore:
initWithIdentifier:type:aceObject:dialogPhase:presentationState:aceCommandIdentifier:virgin:transient:supplemental:immersiveExperience:associatedDataStore:
revisionIdentifier
aceObject
dialogPhase
presentationState
aceCommandIdentifier
isVirgin
isTransient
isSupplemental
isImmersiveExperience
associatedDataStore
af_dialogIdentifier
af_text
af_speakableText
_didMutate
_propertyListStringForType
aceDialogPhaseValue
_propertyListStringForPresentationState
propertyListRepresentation
typeAssertionWithClass:
setObjectCoercion:forKey:
stringToUUIDCoercion
coerceObject:error:
_typeForPropertyListString:
coercionWithBlock:
_presentationStateForPropertyListString:
aceObjectWithDictionary:
dialogPhaseForAceDialogPhase:
userRequestDialogPhase
initWithPropertyListRepresentation:
initWithType:aceObject:dialogPhase:presentationState:aceCommandIdentifier:virgin:transient:supplemental:immersiveExperience:associatedDataStore:
setAceObject:
setDialogPhase:
setAceCommandIdentifier:
setPresentationState:
setVirgin:
setTransient:
setSupplemental:
setImmersiveExperience:
_virgin
_transient
_supplemental
_immersiveExperience
_revisionIdentifier
_aceObject
_dialogPhase
_aceCommandIdentifier
_presentationState
_associatedDataStore
T@"NSUUID",R,C,N,V_identifier
T@"NSUUID",R,C,N,V_revisionIdentifier
Tq,N,V_type
T@"AceObject",&,N,V_aceObject
T@"AFDialogPhase",&,N,V_dialogPhase
T@"NSString",C,N,V_aceCommandIdentifier
Tq,N,V_presentationState
virgin
TB,N,GisVirgin,V_virgin
transient
TB,N,GisTransient,V_transient
supplemental
TB,N,GisSupplemental,V_supplemental
immersiveExperience
TB,N,GisImmersiveExperience,V_immersiveExperience
T@"AFDataStore",R,N,V_associatedDataStore
initWithIdentifier:bundleID:context:userInfo:
discoverabilitySignal
source
sendEvent:
_donateToTipsWithIdentifier:bundleID:context:userInfo:
donateAnnounceNotificationsInCarPlaySettingsChange:
donateDictationEventStartedForBundleId:context:userInfo:
donateSiriEventStartedForBundleId:context:userInfo:
donateMessageSentForBundleId:context:userInfo:
af_getBundleResourceURL
extension
URLForResource:withExtension:
null
resourceForSoundID:
URLForResource:
_lock
_resourceURLProvidersByIdentifier
URLForSoundID:
setName:
setExtension:
_init
initWithMachServiceName:options:
_pendingTransactionCount
orthography
setOrthography:
language
setLanguage:
phonemeSuggestions
setPhonemeSuggestions:
_orthography
_language
_phonemeSuggestions
T@"NSString",&,N,V_orthography
T@"NSString",&,N,V_language
T@"NSArray",&,N,V_phonemeSuggestions
localizedDisplay
localizedDisplayWithRegion
initWithLocalizedDisplay:localizedDisplayWithRegion:
_localizedDisplay
_localizedDisplayWithRegion
T@"NSString",R,C,N,V_localizedDisplay
T@"NSString",R,C,N,V_localizedDisplayWithRegion
setLocalizedDisplay:
setLocalizedDisplayWithRegion:
initWithBlock:defaultValue1:defaultValue2:
invokeWithValue:andValue:
uuid
context
T@"NSUUID",R,N
T@"AFAssertionContext",R,N
initWithUUID:context:relinquishmentHandler:
invokeRelinquishmentHandlerWithContext:error:
_relinquishmentHandler
_uuid
T@"NSUUID",R,N,V_uuid
T@"AFAssertionContext",R,N,V_context
relinquishAssertionWithUUID:context:options:
relinquishAssertionWithUUID:error:options:
relinquishWithContext:options:
relinquishWithError:options:
initWithImpl:coordinator:
_impl
_coordinator
numberOfActiveAssertions
numberOfPendingAndActiveAssertions
_addAssertion:
_deactivateAndRemoveAssertionWithUUID:context:error:options:
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
timeIntervalSinceNow
assertionCoordinator:didAddAssertion:isFirstAssertion:
_activateAssertionWithUUID:
assertionCoordinator:didActivateAssertion:isFirstAssertion:
removeObject:
assertionCoordinator:didDeactivateAssertion:isLastAssertion:
assertionCoordinator:didRemoveAssertion:isLastAssertion:
allKeys
initWithIdentifier:queue:delegate:
acquireRelinquishableAssertionWithContext:relinquishmentHandler:
relinquishAsertionsPassingTest:context:
relinquishAsertionsPassingTest:error:
getPendingAndActiveAssertionsWithCompletion:
getActiveAssertionsWithCompletion:
barrier:
_numberOfAssertions
_assertionsByUUID
_numberOfActiveAssertions
_activeAssertionUUIDs
numberWithUnsignedInteger:
options
initWithOptions:reason:speechRequestOptions:
_options
_reason
_speechRequestOptions
TQ,R,N,V_options
Tq,R,N,V_reason
T@"AFSpeechRequestOptions",R,C,N,V_speechRequestOptions
alarmURLs
setAlarmURLs:
_alarmURLs
T@"NSArray",C,N,V_alarmURLs
stringByAppendingPathComponent:
defaultManager
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
dateByAddingTimeInterval:
contentsOfDirectoryAtPath:error:
pathExtension
compare:options:
attributesOfItemAtPath:error:
compare:
removeItemAtPath:error:
dataWithPropertyList:format:options:error:
initWithFormat:arguments:
stringByAppendingPathExtension:
writeToFile:options:error:
numberWithUnsignedLongLong:
unsignedLongLongValue
initWithTimestamp:reason:effectiveDate:expirationDuration:userInfo:
_timestamp
_effectiveDate
_expirationDuration
_userInfo
TQ,R,N,V_timestamp
T@"NSString",R,C,N,V_reason
T@"NSDate",R,C,N,V_effectiveDate
Td,R,N,V_expirationDuration
T@"NSDictionary",R,C,N,V_userInfo
startRemoteRequest:onPeer:completion:
initWithInfo:
sendWithCompletion:
info
peerIdentifier
setPeerIdentifier:
_info
_peerIdentifier
T@"AFRequestInfo",R,N,V_info
T@"NSString",C,N,V_peerIdentifier
anonymousListener
_af_analyticsContextDescription
logEventWithType:machAbsoluteTime:context:
_isForRequest:
_completeWithResponse:
_completeWithError:
endpoint
_initWithRequest:remoteResponseListenerEndpoint:usageResultListenerEndpoint:
initWithDomain:code:userInfo:
deliverSiriTask:completionHandler:
siriTaskDidFinish
_completeWithResponse:error:
handleFailureOfRequest:error:atTime:
handleSiriResponse:atTime:
initWithRequest:taskDeliverer:usageResultListener:
setDeliveryHandler:
setCompletionHandler:
_request
_taskDeliverer
_usageResultListener
_deliveryHandler
_completionHandler
_keepAliveCycle
_taskResponseWatchdogTimer
_taskResponseListener
allocation
properties
initWithIdentifier:allocation:properties:
_allocation
_properties
TQ,R,N,V_allocation
T@"NSDictionary",R,C,N,V_properties
setAllocation:
setProperties:
initWithNearbyDevicesLoggingID:
addNearbyDeviceContexts:proximityInfo:
metricsContext
nearbyDevicesLoggingID
setNearbyDevicesPayloads:
deviceInfo
productType
alarmSnapshot
hasFiringAlarms
timerSnapshot
hasFiringTimers
playbackStateSnapshot
nowPlayingTimestamp
homeAnnouncementSnapshot
lastPlayedAnnouncement
startedDate
applicationType
instanceUUID
applicationUUID
initWithInstanceUUID:applicationType:applicationUUID:
_instanceUUID
_applicationType
_applicationUUID
T@"NSUUID",R,C,N,V_instanceUUID
Tq,R,N,V_applicationType
T@"NSUUID",R,C,N,V_applicationUUID
setInstanceUUID:
setApplicationType:
setApplicationUUID:
allocWithZone:
initWithTimeoutInterval:timeoutHandler:
isStopped
cancelIfNotAlreadyCanceled
reset
_interval
_timerSource
_timeoutHandler
_isStopped
_remainingInterval
_startTime
history
setHistory:
_history
Tq,R,N,V_version
T@"NSArray",&,N,V_history
itemIdentifier
setItemIdentifier:
selectionType
setSelectionType:
_itemIdentifier
_selectionType
T@"NSString",C,N,V_itemIdentifier
Tq,N,V_selectionType
T@"NSDate",&,N,V_date
vtSatScore
confidenceScores
initWithVtSatScore:confidenceScores:
_vtSatScore
_confidenceScores
T@"NSNumber",R,C,N,V_vtSatScore
T@"NSArray",R,C,N,V_confidenceScores
setVtSatScore:
setConfidenceScores:
getUUIDBytes:
dataWithBytes:length:
getBytes:length:
initWithUUIDBytes:
activationSource
activationExpirationTime
perceptualAudioHash
overrideState
initWithTimestamp:perceptualAudioHash:overrideState:activationSource:activationExpirationTime:
_perceptualAudioHash
_overrideState
_activationSource
_activationExpirationTime
T@"AFMyriadPerceptualAudioHash",R,C,N,V_perceptualAudioHash
T@"AFMyriadGoodnessScoreOverrideState",R,C,N,V_overrideState
Tq,R,N,V_activationSource
TQ,R,N,V_activationExpirationTime
setPerceptualAudioHash:
setOverrideState:
setActivationSource:
setActivationExpirationTime:
initWithServicePort:
prewarmWithRequestInfo:context:completion:
activateWithRequestInfo:context:completion:
deactivateForReason:options:context:completion:
handleContext:completion:
handleIntent:inBackgroundAppWithBundleId:reply:
handleIntentForwardingAction:inBackgroundApplicationWithBundleIdentifier:completionHandler:
_xpcConnection
_servicePort
_mapForLanguageCode:
_buildRegexMatchingSubstrings:
pathForResource:ofType:inDirectory:
initWithContentsOfFile:
escapedPatternForString:
replaceCharactersInRange:withString:
initWithPattern:options:error:
range
substringWithRange:
enumerateMatchesInString:options:range:usingBlock:
_phonemeMap
_regex
UTF8String
_releasePowerAssertion
_createPowerAssertion
initWithIdentifier:
takePowerAssertionWithName:
releasePowerAssertionWithName:
releaseAllPowerAssertions
_assertionCoordinator
_assertionsByName
setTimer:
createResponseWithTimer:
encodeXPCObject:forKey:
decodeXPCObjectOfType:forKey:
initWithXPCObject:
xpcObject
_xpcObject
didObserveEvents:completion:
setPrimaryLanguageCode:
primaryLanguageCode
setDictationLanguages:
encodeInt32:forKey:
decodeInt32ForKey:
decodePropertyListForKey:
_removeContextValueForKey:context:
_updateContextValue:forKey:context:
userContextLanguageCodeForKeyboardLangauge:overrideLanguageCode:
getSiriDictationLanguagesFromLanguages:
floatValue
numberWithFloat:
_setContextValue:forKey:context:
siriDictationLanguageForLanguage:
priorsByReplacingKeyboardLanguage:
languageDetectorUserContext
_setFinalFilteredDictationLanguages:
_setDictationLanguageCodeMappingCache:
setWasLanguageToggled:
setCurrentKeyboard:
setPrevMessageLanguage:
setGlobalLastUsedKeyboard:
setMultiLingualKeyboardLanguages:
setKeyboardConvoRecentMessages:
setKeyboardConversationLanguagePriors:
setKeyboardGlobalLanguagePriors:
setLanguageCodeOverrides:
setSimulatingLanguageCodes:
setShouldSimulateLanguageDetectorAssetsAvailability:
_setUserContextChangeBit:
_setLanguageDetectorContext:
defaultContextWithPrimaryLanguage:
isUpdateAvailableForLanguageDetectorContext
languageDetectorContextChangeBits
getContextForAnalytics
getDictationLanguagesForSupportedLocales:error:
finalFilteredDictationLanguages
shouldSimulateLanguageDetectorAssetsAvailability
simulatingLanguageCodes
currentKeyboard
languageCodeOverrides
wasLanguageToggled
prevMessageLanguage
globalLastUsedKeyboard
multiLingualKeyboardLanguages
keyboardConvoRecentMessages
dictationLanguages
keyboardConversationLanguagePriors
keyboardGlobalLanguagePriors
dictationInputOrigin
setDictationInputOrigin:
_lidUserContext
_userContextChangeBit
_simulateLanguageDetectorAssetsAvailability
_simulatingLanguageCodes
_finalDictationLanguages
_dictationLanguageMappingCache
_languageToggled
_currentKeyboard
_primaryLanguageCode
_languageCodeOverrides
_prevMessageLanguage
_globalLastUsedKeyboard
_multiLingualKeyboardLanguages
_keyboardConvoRecentMessages
_dictationLanguages
_keyboardConversationLanguagePriors
_keyboardGlobalLanguagePriors
_dictationInputOrigin
T@"NSString",C,N,V_currentKeyboard
T@"NSString",C,N,V_primaryLanguageCode
T@"NSDictionary",C,N,V_languageCodeOverrides
languageToggled
TB,N,GwasLanguageToggled,SsetWasLanguageToggled:,V_languageToggled
T@"NSString",C,N,V_prevMessageLanguage
T@"NSString",C,N,V_globalLastUsedKeyboard
T@"NSArray",C,N,V_multiLingualKeyboardLanguages
T@"NSArray",C,N,V_keyboardConvoRecentMessages
T@"NSArray",C,N,V_dictationLanguages
T@"NSDictionary",C,N,V_keyboardConversationLanguagePriors
T@"NSDictionary",C,N,V_keyboardGlobalLanguagePriors
T@"NSNumber",C,N,V_dictationInputOrigin
_acquireWithContext:
_finalizeWithContext:error:
_relinquishWithContext:error:options:
acquireAudioSessionWithContext:relinquishmentHandler:
relinquishAudioSessionWithContext:error:options:completion:
_clearXPCConnection
handleXPCConnectionInterrupted
handleXPCConnectionInvalidated
_acquisitionContext
T@"AFAssertionContext",R,N,V_acquisitionContext
timer
_timer
T@"STTimer",&,N,V_timer
initWithUpdatedItemIndexPaths:insertedItemIndexPaths:presentationStateChangedItemIndexPaths:
updatedItemIndexPaths
insertedItemIndexPaths
presentationStateChangedItemIndexPaths
_updatedItemIndexPaths
_insertedItemIndexPaths
_presentationStateChangedItemIndexPaths
T@"NSArray",R,N,V_updatedItemIndexPaths
T@"NSArray",R,N,V_insertedItemIndexPaths
T@"NSArray",R,N,V_presentationStateChangedItemIndexPaths
errorWithCode:description:underlyingErrors:
addObjectsFromArray:
replaceObjectAtIndex:withObject:
willBeginAccessPower
getAveragePower:andPeakPower:
didEndAccessPower
_wrapper
_sharedMemory
_destroyMapping
_mappedLength
_sharedRegion
Tf,R,N
isMainThread
getCurrentContext
runServerOnCurrentThreadProtectedByEntitlement:
currentRunLoop
distantFuture
nothing
initWithFireDate:interval:target:selector:userInfo:repeats:
addTimer:forMode:
initWithTimeIntervalSinceNow:
runUntilDate:
doesServerExist
array
_collateContextsIntoArray:
performSelectorOnMainThread:withObject:waitUntilDone:
dictionaryWithObject:forKey:
cancelPreviousPerformRequestsWithTarget:selector:object:
stopServer
_shutdownServer
_serverName
pidRestrictedCenterNamed:
setTargetPID:
_collateContexts
registerForMessageName:target:selector:
startCenter:
detachNewThreadSelector:toTarget:withObject:
performSelector:withObject:afterDelay:
mainBundle
bundleIdentifier
allowContextProvider:
_startListening
_stopListening
defaultContextManager
addContextProvider:
removeContextProvider:
_contextProviders
_center
mediaRouteIdentifier
initWithIdentifier:mediaRouteIdentifier:
_mediaRouteIdentifier
T@"NSString",R,C,N,V_mediaRouteIdentifier
setMediaRouteIdentifier:
notification
request
postNotificationRequest:completion:
withdrawNotificationRequestWithIdentifier:
receivedNotificationResponse:
postNotificationRequest:responseHandler:
_responseHandlersByNotificationID
keyPathWithKey:
userContext
setObject:forContextualKeyPath:
predicateForEventsWithStreamName:
eventStreamWithName:
knowledgeStore
deleteObjects:error:
localizedDescription
bluetoothIsConnectedStream
currentCalendar
dateByAddingUnit:value:toDate:options:
predicateWithFormat:
metadata
isAppleAudioDevice
productID
allObjects
eventWithStream:startDate:endDate:identifierStringValue:metadata:
saveObjects:error:
eventQueryWithPredicate:eventStreams:offset:limit:sortDescriptors:
executeQuery:error:
URLByAppendingPathComponent:isDirectory:
fileURLWithPath:isDirectory:
isVoiceOverTouchEnabled
isVibrationDisabled
initWithIsVoiceOverTouchEnabled:isVibrationDisabled:
_isVoiceOverTouchEnabled
_isVibrationDisabled
Tq,R,N,V_isVoiceOverTouchEnabled
Tq,R,N,V_isVibrationDisabled
setIsVoiceOverTouchEnabled:
setIsVibrationDisabled:
temperatureUnit
setTemperatureUnit:
twentyFourHourTimeDisplay
setTwentyFourHourTimeDisplay:
region
setRegion:
countryCode
setCountryCode:
preferredLanguage
setPreferredLanguage:
_twentyFourHourTimeDisplay
_temperatureUnit
_region
_countryCode
_preferredLanguage
T@"NSString",C,N,V_temperatureUnit
TB,N,V_twentyFourHourTimeDisplay
T@"NSString",C,N,V_region
T@"NSString",C,N,V_countryCode
T@"NSString",C,N,V_preferredLanguage
firstInterpretation
tokens
interpretationIndices
interpretations
text
valueWithRange:
arrayWithCapacity:
objectAtIndexedSubscript:
intValue
setObject:atIndexedSubscript:
insertObject:atIndex:
speechTokensForUtteranceAtIndex:
rangeListOfDifferingTextFromSpeechInterpretation:comparedToBaseTokenList:
rangeListOfDifferingTextFromTargetTokenList:comparedToBaseTokenList:
longestCommonSubsequenceBetweenList:andList:
removeSpaceBefore
removeSpaceAfter
string
setTokens:
confidenceScore
textOfUtteranceAtIndex:
allInterpretationStringsAndScores
setDictionary:
isLowConfidence
initWithInterpretations:isLowConfidence:
initWithInterpretationIndices:confidenceScore:
setSource:
allPhrases
_updateUtteranceswithAlternativeUtteranceAtIndex:swapIndices:
_updatePhraseswithSwapIndices:
setConfidenceScore:
setRemoveSpaceBefore:
bestTextInterpretation
initWithPhrases:correctionIdentifier:
initWithPhrases:utterances:
initWithPhrases:sentenceConfidence:utterances:correctionIdentifier:
initWithTokens:correctionIdentifier:
initWithString:correctionIdentifier:
numberOfAlternativeUtterances
rangeListOfDifferingTextFromUtteranceAtIndex:comparedToBaseUtteranceAtIndex:
rangeListOfDifferingTextFromSpeechInterpretation:comparedToBaseUtteranceAtIndex:
interpretationOfUtteranceAtIndex:
allRecognitionStringsAndScores
updateDictationResult:withAlternativeUtteranceAtIndex:
dictationResult
streamingTokens
correctionIdentifier
_phrases
_tokens
_text
_sentenceConfidence
_utterances
_correctionIdentifier
T@"NSDictionary",R,N,V_correctionIdentifier
T@"NSArray",R,N
confidenceScoreAvg
confidenceScoreMax
confidenceScoreMin
bestInterpretation
recognition
af_speechPhrases
sentenceConfidence
af_speechUtterances
af_correctionContext
af_userUtteranceValue
af_bestTextInterpretation
af_correctionContextWithRefId:sessionId:
af_userUtteranceValueWithRefId:sessionId:
af_bestTextInterpretationWithRefId:sessionId:
af_speechToken
_combinedRank
_combinedScore
_interactionId
_onDeviceUtterancesPresent
_originalRank
_originalScore
_previousUtterance
_sessionId
_utteranceSource
T@"NSNumber",C,N,V_combinedRank
T@"NSNumber",C,N,V_combinedScore
T@"NSString",C,N,V_interactionId
T@"NSNumber",C,N,V_onDeviceUtterancesPresent
T@"NSNumber",C,N,V_originalRank
T@"NSNumber",C,N,V_originalScore
T@"NSString",C,N,V_previousUtterance
T@"NSString",C,N,V_sessionId
T@"NSString",C,N,V_utteranceSource
numberWithLong:
enumerateByteRangesUsingBlock:
af_enumerateDigestibleChunksWithOptions:usingBlock:
objCType
longLongValue
decimalValue
sortedArrayUsingSelector:
groupIdentifier
isFiring
fireTimeInterval
timerID
timerURL
title
fireDate
firedDate
dismissedDate
lastModifiedDate
initWithTimerID:timerURL:isFiring:title:state:duration:type:fireTimeInterval:fireDate:firedDate:dismissedDate:lastModifiedDate:
_isFiring
_timerID
_timerURL
_title
_fireTimeInterval
_fireDate
_firedDate
_dismissedDate
_lastModifiedDate
T@"NSUUID",R,C,N,V_timerID
T@"NSURL",R,C,N,V_timerURL
TB,R,N,V_isFiring
T@"NSString",R,C,N,V_title
Td,R,N,V_fireTimeInterval
T@"NSDate",R,C,N,V_fireDate
T@"NSDate",R,C,N,V_firedDate
T@"NSDate",R,C,N,V_dismissedDate
T@"NSDate",R,C,N,V_lastModifiedDate
setTimerID:
setTimerURL:
setIsFiring:
setTitle:
setDuration:
setFireTimeInterval:
setFireDate:
setFiredDate:
setDismissedDate:
setLastModifiedDate:
_stopIdleTimer
_cleanUpConnection
_willStartSendingEvents:
_didFinishSendingEvents:
_sendEvents:numberOfRetries:completion:
logInstrumentationOfType:machAbsoluteTime:turnIdentifier:
stageUEIEventData:timestamp:
boostQueuedEvents:
_handleFailureCallbackForEvents:error:numberOfRetries:completion:
_handleSuccessCallbackForEvents:completion:
stageEvents:completion:
_startIdleTimer
_cleanUpConnectionIfNeeded
setNeedsCleanUpConnection:
needsCleanUpConnection
_idleTimerFired
flushStagedEventsWithReply:
beginEventsGrouping
endEventsGrouping
_idleTimer
_numberOfEventsBeingSent
_group
_needsCleanUpConnection
TB,V_needsCleanUpConnection
setKey:
appMetaData
setAppMetadata:
generation
setAnchor:
validity
setValidity:
setCount:
initWithAnchor:forcingReset:
anchor
appMetadata
targetIsLocal
setTargetIsLocal:
forVerification
setForVerification:
reasons
setReasons:
_targetIsLocal
_forVerification
_anchor
_validity
_key
_appMetadata
_reasons
T@"NSString",C,N,V_anchor
T@"NSString",C,N,V_validity
Tq,N,V_count
T@"NSString",C,N,V_key
T@"SASyncAppMetaData",C,N,V_appMetadata
TB,N,V_targetIsLocal
TB,N,V_forVerification
T@"NSSet",C,N,V_reasons
jitContext
overrideModelPath
initWithJitContext:overrideModelPath:
_jitContext
_overrideModelPath
T@"NSArray",R,C,N,V_jitContext
T@"NSString",R,C,N,V_overrideModelPath
setJitContext:
setOverrideModelPath:
encodeDouble:forKey:
decodeDoubleForKey:
initWithRecognition:rawRecognition:audioAnalytics:isFinal:utteranceStart:
initWithRecognition:unfilteredRecognition:rawRecognition:audioAnalytics:isFinal:utteranceStart:
initWithRecognition:rawRecognition:audioAnalytics:isFinal:utteranceStart:latticeMitigatorResult:
initWithRecognition:unfilteredRecognition:rawRecognition:audioAnalytics:isFinal:utteranceStart:latticeMitigatorResult:
unfilteredRecognition
rawRecognition
audioAnalytics
isFinal
utteranceStart
latticeMitigatorResult
_isFinal
_recognition
_unfilteredRecognition
_rawRecognition
_audioAnalytics
_utteranceStart
_latticeMitigatorResult
T@"AFSpeechRecognition",R,N,V_recognition
T@"AFSpeechRecognition",R,N,V_unfilteredRecognition
T@"AFSpeechRecognition",R,N,V_rawRecognition
T@"AFSpeechAudioAnalytics",R,N,V_audioAnalytics
TB,R,N,V_isFinal
Td,R,N,V_utteranceStart
T@"AFSpeechLatticeMitigatorResult",R,N,V_latticeMitigatorResult
beepSoundID
initWithStyle:beepSoundID:
_style
_beepSoundID
Tq,R,N,V_style
Tq,R,N,V_beepSoundID
setStyle:
setBeepSoundID:
speechRecognizedCommand
initWithSpeechRecognizedCommand:
_speechRecognizedCommand
T@"SASSpeechRecognized",R,C,N,V_speechRecognizedCommand
setSpeechRecognizedCommand:
initWithData:
_data
T@"NSData",R,C,N,V_data
identityCoercion
_coercions
fetchSupportedLanguagesWithReply:
retrieveAccountMessageDictionariesWithReply:
saveAccountWithMessageDictionary:setActive:
deleteAccountWithIdentifier:
setActiveAccountIdentifier:
fetchActiveAccount:
setAssistantEnabled:
setDictationEnabled:
_shutdownSessionIfIdle
_killDaemon
barrierWithReply:
_setSyncNeededForReason:
_clearSyncNeededForKey:
_syncDataWithAnchorKeys:forceReset:reason:reply:
_fetchPeerData:
_setSyncVerificationNeededAndFullReportNeeded:shouldPostNotification:completion:
_runServiceMaintenance
getAvailableVoicesIncludingAssetInfo:completion:
setOutputVoice:withCompletion:
setLanguage:withCompletion:
setLanguage:outputVoice:withCompletion:
getOfflineAssistantStatusWithCompletion:
getOfflineDictationStatusWithCompletion:
updateOfflineSpeechProfileWithLanguage:modelOverridePath:completion:
createOfflineSpeechProfileWithLanguage:modelOverridePath:JSONData:completion:
setOfflineDictationProfileOverridePath:completion:
startUIRequestWithSpeechAudioFileURL:
startMultiUserUIRequestWithText:expectedSpeakerSharedUserID:expectedSpeakerConfidenceScore:nonspeakerConfidenceScores:completion:
dismissUI
startUIMockServerRequestWithReplayFileURL:completion:
getPeerIdentifiers:
setEnableAssistantLogging:
setSupplementalLanguageDictionary:forProduct:completion:
setSupplementalLanguages:forProduct:forBuildVersion:completion:
getSupplementalLanguagesDictionary:
getSupplementalLanguagesModificationDate:
getSupplementalLanguageDictionaryForProduct:completion:
getSupplementalLanguagesForProduct:forBuildVersion:completion:
fetchEventRecordsFromAnalyticsStoreAtPath:completion:
purgeAnalyticsStoreWithCompletion:
resetAnalyticsStoreWithCompletion:
sendMetricsToServerWithCompletion:
fetchExperimentConfigurationsWithCompletion:
fetchExperimentContextWithCompletion:
disableAndDeleteCloudSyncWithCompletion:
getDevicesWithAvailablePHSAssetsForLanguage:completion:
getDevicesWithAvailablePHSAssetsOnDeviceCheck:
getMeCard:
getStereoPartnerLastMyriadWinDate:
getStereoPairState:
setConfigOverrides:completion:
configOverrides:
getSharedCompanionInfo:
getCrossDeviceContextWithCompletion:
getCurrentContextSnapshotWithCompletion:
getOriginDeviceInfoForContextIdentifier:completion:
getContextCollectorsInfoWithCompletion:
setHardcodedBluetoothProximity:
getManagedLocalAndRemotePeerInfoWithCompletion:
getCapabilitiesDataFromReachableDevicesWithCompletion:
getProximityTuplesWithCompletion:
hasEverSetLanguageCodeWithCompletion:
getExperimentForConfigurationIdentifier:completion:
resetExperimentForConfigurationIdentifier:completion:
synchronizeExperimentConfigurationsIfApplicableWithCompletion:
getSiriOutputVolumeForAudioRoute:completion:
setSiriOutputVolume:forAudioRoute:completion:
getBluetoothDeviceInfoWithAddress:completion:
getBluetoothDeviceInfoWithUID:completion:
getConnectedBluetoothDeviceInfoArrayWithCompletion:
getPairedBluetoothDeviceInfoArrayWithCompletion:
getBluetoothWirelessSplitterSessionInfoWithCompletion:
startObservingBluetoothWirelessSplitterSession
stopObservingBluetoothWirelessSplitterSession
addMultiUserUser:sharedId:loggableSharedId:enrollmentName:isPrimary:completion:
removeMultiUserUser:completion:
removeMultiUserUserWithSharedUserId:completion:
showMultiUsers:
showPrimaryUserSharedUserIDWithCompletion:
showMultiUserSharedUserIDsCompletion:
updateVoiceIdScoreToUser:score:reset:completion:
forceMultiUserSync:download:completion:
getHomeUserIdForSharedUserId:completion:
getSharedUserIdForHomeUserId:completion:
updateMultiUserWithSharedUserId:companionId:companionSpeechId:idsIdentifier:productPrefix:aceHost:completion:
getSharedUserID:
fetchMultiUserVoiceIdentificationSetting:
homeOnboardingFlowInvoked:completion:
setNanoAssistantEnabled:withCompletion:
setNanoDictationEnabled:withCompletion:
setNanoPhraseSpotterEnabled:withCompletion:
setNanoRaiseToSpeakEnabled:withCompletion:
setNanoUseDeviceSpeakerForTTS:withCompletion:
setNanoTTSSpeakerVolume:withCompletion:
setNanoOutputVoice:withCompletion:
setNanoLanguage:withCompletion:
setNanoCrownActivationEnabled:withCompletion:
setNanoSiriDataSharingOptInStatus:withCompletion:
clearSpokenNotificationTemporarilyDisabledStatus
getSpokenNotificationIsAlwaysOpportuneWithCompletion:
setSpokenNotificationIsAlwaysOpportune:
getSpokenNotificationShouldAnnounceAllNotificationsWithCompletion:
setSpokenNotificationShouldAnnounceAllNotifications:
getSpokenNotificationShouldSkipTriggerlessRepliesWithCompletion:
setSpokenNotificationShouldSkipTriggerlessReplies:
setSpokenNotificationProxCardSeen:
getAnnounceNotificationsTemporarilyDisabledEndDateForPlatform:completion:
setAnnounceNotificationsTemporarilyDisabledUntil:platform:
getAnnounceNotificationsTemporarilyDisabledEndDateForApp:platform:completion:
setAnnounceNotificationsTemporarilyDisabledUntil:forApp:platform:
getAnnounceNotificationsInCarPlayTemporarilyDisabledWithCompletion:
setAnnounceNotificationsInCarPlayTemporarilyDisabled:
clearAnnounceNotificationsInCarPlayTemporarilyDisabled
getAnnounceNotificationsInCarPlayTypeWithCompletion:
setAnnounceNotificationsInCarPlayType:
clearAnnounceNotificationsInCarPlayType
setOpportuneSpeakingEdgeDetectorSignalOverride:
clearOpportuneSpeakingEdgeDetectorSignalOverride
getCurrentNWActivityIDWithCompletion:
getAudioSessionCoordinationSnapshotWithCompletion:
handleCommand:completion:
setSiriDataSharingOptInStatus:completion:
getSiriDataSharingOptInStatusWithCompletion:
setSiriDataSharingOptInStatus:propagateToHomeAccessories:source:reason:completion:
setSiriDataSharingOptInAlertPresented:completion:
shouldSuppressSiriDataSharingOptInAlertWithCompletion:
deleteSiriHistoryWithContext:withCompletion:
setSiriDataSharingHomePodSetupDeviceIsValid:completion:
setOnDeviceDictationAvailableAlertPresented:
setSiriDesignModeEnabled:completion:
siriDesignModeIsEnabled:
accessRecordedAudioWithIdentifier:completion:
trimRecordedAudioWithIdentifier:offset:duration:outputFileType:completion:
getRecordedAudioDirectoryPathsWithCompletion:
getCurrentRequestIsWatchAuthenticatedWithCompletion:
pushMyriadAdvertisementContext:completionHandler:
getSpeakerCapabilityForAccessoryWithUUID:completionHandler:
triggerABCForType:subType:context:completionHandler:
setAllowExplicitContent:
getCurrentAccessoryInfoWithCompletion:
setRecognizeMyVoiceEnabled:
postTestResultCandidateWithRcId:recognitionSausage:
postTestResultSelectedWithRcId:
areSiriUODAssetsAvailable:
getAssetStatusForLanguage:completionHandler:
getAssistantIsEnabledForDeviceWithSiriInfo:withCompletion:
getCurrentActiveLanguageCodesWithCompletion:
setSyncToken:forAceHost:completion:
readSyncTokenForAceHost:completion:
syncVerificationPartialResult:
syncVerificationServerReport:
getConformingSharedUserIdForHomeUserId:completion:
getFirstNameForSharedUserId:completion:
getConformingSharedUserIds:
getMultiUserSettingsForSharedUserID:completion:
getHomeUserIdOfRecognizedUserWithCompletion:
getPreferredMediaUserHomeUserIDWithCompletion:
homeUserIdToNames:
isEqualToArray:
setInterpretations:
setIsLowConfidence:
_isLowConfidence
_interpretations
T@"NSArray",C,N,V_interpretations
TB,N,V_isLowConfidence
setInterpretationIndices:
_interpretationIndices
_confidenceScore
_source
T@"NSArray",C,N,V_interpretationIndices
Tq,N,V_confidenceScore
Tq,N,V_source
averageConfidenceScore
T@"NSArray",C,N,V_tokens
phoneSequence
setPhoneSequence:
startTime
setStartTime:
silenceStartTime
setSilenceStartTime:
endTime
setEndTime:
setAddSpaceAfter:
setRemoveSpaceAfter:
aceToken
ipaPhoneSequence
setIpaPhoneSequence:
_removeSpaceBefore
_removeSpaceAfter
_phoneSequence
_ipaPhoneSequence
_silenceStartTime
_endTime
T@"NSString",C,N,V_text
T@"NSString",C,N,V_phoneSequence
T@"NSString",C,N,V_ipaPhoneSequence
Td,N,V_startTime
Td,N,V_silenceStartTime
Td,N,V_endTime
TB,N,V_removeSpaceBefore
TB,N,V_removeSpaceAfter
phrases
af_speechInterpretations
lowConfidence
utterances
af_speechTokens
createUsingPhrases:andUtterances:
successTitle
successBody
successButtonText
errorTitle
errorBody
errorButtonText
initWithSuccessTitle:successBody:successButtonText:errorTitle:errorBody:errorButtonText:
_successTitle
_successBody
_successButtonText
_errorTitle
_errorBody
_errorButtonText
T@"NSString",R,C,N,V_successTitle
T@"NSString",R,C,N,V_successBody
T@"NSString",R,C,N,V_successButtonText
T@"NSString",R,C,N,V_errorTitle
T@"NSString",R,C,N,V_errorBody
T@"NSString",R,C,N,V_errorButtonText
setSuccessTitle:
setSuccessBody:
setSuccessButtonText:
setErrorTitle:
setErrorBody:
setErrorButtonText:
preferencesSubdomain
containsString:
substringToIndex:
_afpreferences_isLanguageCodePrefix
_afpreferences_languageCodePrefix
arrayByAddingObjectsFromArray:
initWithArray:
initWithSuiteName:
unsignedIntValue
synchronize
distantPast
isSiriXEnabled
isSiriServerLoggingAllowed
isOnDeviceOnlyDictationForced
isSiriDataSharingRepromptEnabled
appendToSiriDataSharingOptInStatusHistory:previousOptInStatus:statusChangeSource:reason:
sharedStream
emitMessage:
laterDate:
sharedPreferencesWithInstanceContext:
dictationIsEnabled
_registerForInternalPrefs
_registerForAssistantEnablementChangeNotifications
_registerForDictationEnablementChangeNotifications
barrier
siriDataSharingOptInStatus
getAnnounceNotificationsTemporarilyDisabledStatusForPlatform:completion:
getAnnounceNotificationsTemporarilyDisabledForApp:platform:completion:
siriDataSharingOptInStatusHistory
getHomeAccessorySiriDataSharingChangeLog
getHomeAccessorySiriDataSharingPropagationLog
accessoryIdentifier
setPrevOptInState:
setNewOptInState:
setSystemBuild:
setEpochEventTimestampInSeconds:
formattedText
_languageCodeWithFallback:
_registerForLanguageCodeChangeNotifications
_bestSupportedLanguageCodeForLanguageCode:isGoodFit:
_bestSupportedLanguageCodeForLanguageCodes:isGoodFit:
preferredLanguages
localeIdentifier
canonicalLanguageIdentifierFromString:
_languagePreferencesForCurrentSystemConfiguration
arrayByAddingObject:
preferredLocalizationsFromArray:forPreferences:
_languageCode:isGoodFitForPreferredLanguages:
_outputVoiceWithFallback:
_registerForOutputVoice
setOutputVoice:
setLanguage:outputVoice:
currentNavigationState
setCurrentNavigationState:
_registerForNavStatusIfNeeded
_setLoggingDefaultValue:forKey:
fileLoggingIsEnabled
configOverrides
setConfigOverrides:
dictionaryWithDictionary:
_registerForNanoPrefsChangeNotifications
initWithDomain:
setWithObject:
synchronizeNanoDomain:keys:
_nanoPreferencesValueForKey:
_setNanoPreferencesValue:forKey:
initWithDomain:pairedDevice:
_preferencesDidChangeExternally
_internalPreferencesDidChangeExternally
_languageCodeDidChangeExternally
_outputVoiceDidChangeExternally
_nanoPrefsDidChangeExternally
_assistantEnablementDidChangeExternally
_dictationEnablementDidChangeExternally
synchronizeLogPreferencesDomain
synchronizeAVVCPreferencesDomain
instanceContext
dictationSLSLanguagesEnabled
isSmartLanguageSelectionEnabled
setSmartLanguageSelection:
offlineDictationOverride
setOfflineDictationOverride:
offlineDictationStatus
setOfflineDictationStatus:
offlineDictationProfileOverridePath
setOfflineDictationProfileOverridePath:
_setAssistantIsEnabledLocal:
_setDictationIsEnabledLocal:
setAssistantIsEnabled:
setDictationIsEnabled:
_dictationIsAllowed
_setDictationIsAllowed:
onDeviceDictationAvailableAlertPresented
_setOnDeviceDictationAvailableAlertPresentedLocal:
forceOfflineRecognitionEnabled
setForceOfflineRecognitionEnabled:
utteranceDetectionEnabled
setUtteranceDetectionEnabled:
preferOnlineRecognitionEnabled
setPreferOnlineRecognitionEnabled:
setDictationSLSLanguagesEnabled:
resetSessionLanguage
isDictationHIPAACompliant
isOnDeviceDictationForced
startAlertEnabled
setStartAlertEnabled:
showServerOnUI
setShowServerOnUI:
debugButtonIsEnabled
setDebugButtonIsEnabled:
siriXDebugStatusEnabled
setSiriXDebugStatusEnabled:
showsHoldToTalkIndicator
setShowsHoldToTalkIndicator:
suppressAssistantOptIn
setSuppressAssistantOptIn:
suppressDictationOptIn
setSuppressDictationOptIn:
_setSuppressDictationOptInLocal:
alwaysAllowVoiceActivation
setAlwaysAllowVoiceActivation:
setSiriResponseShouldAlwaysPrint:
setAlwaysObscureBackgroundContentWhenActive:
setAlwaysShowRecognizedSpeech:
crownActivationEnabled
setCrownActivationEnabled:
listenAfterSpeakingDisabled
setListenAfterSpeakingDisabled:
curareOrchestrationEnabled
setCurareOrchestrationEnabled:
cloudSyncEnabled
setCloudSyncEnabled:
cloudSyncEnabledModificationDate
setInternalUserClassification:
internalUserClassification
getSpokenNotificationTemporarilyDisabledStatusWithCompletion:
getSpokenNotificationTemporarilyDisabledEndDateWithCompletion:
setSpokenNotificationTemporarilyDisabledUntil:
getSpokenNotificationTemporarilyDisabledForApp:completion:
getSpokenNotificationTemporarilyDisabledEndDateForApp:completion:
setSpokenNotificationTemporarilyDisabledForApp:until:
setSpokenNotificationsProxCardSeen
setSpokenNotificationSkipTriggerlessReplyConfirmation:
spokenNotificationSkipTriggerlessReplyConfirmation
designModeIsEnabled
setDesignModeEnabled:
shouldSuppressSiriDataSharingOptInAlert
setHomeAccessoriesRepromptStatus:
getHomeAccessoriesRepromptStatus
appendHomeAccessorySiriDataSharingChangeLogEvent:
insertHomeAccessorySiriDataSharingPropagationLogEvent:
supplementalLanguageDictionaryForProduct:
supplementalLanguagesForProduct:forBuildVersion:
supplementalLanguages
supplementalLanguagesModificationDate
horsemanSupplementalLanguageDictionary
ignoreServerManualEndpointingThreshold
setIgnoreServerManualEndpointingThreshold:
manualEndpointingThreshold
setManualEndpointingThreshold:
streamingDictationEnabled
setStreamingDictationEnabled:
companionConnectionsOverBLEEnabled
setCompanionConnectionsOverBLEEnabled:
myriadCoordinationEnabled
myriadCoordinationEnabledForAccessoryLogging
setMyriadCoordinationEnabled:
disableMyriadBLEActivity
myriadDuckingEnabled
setMyriadDuckingEnabled:
myriadDeviceGroup
setMyriadDeviceGroup:
myriadServerHasProvisioned
setMyriadServerHasProvisioned:
myriadServerProvisioning
setMyriadServerProvisioning:
myriadDeviceClass
setMyriadDeviceClass:
myriadConstantGoodness
setMyriadConstantGoodness:
myriadDeviceAdjust
setMyriadDeviceAdjust:
myriadDeviceDelay
setMyriadDeviceDelay:
myriadTestDeviceDelay
setMyriadTestDeviceDelay:
myriadDeviceSlowdown
setMyriadDeviceSlowdown:
myriadDeviceTrumpDelay
setMyriadDeviceTrumpDelay:
myriadLastWin
setMyriadLastWin
myriadDeviceVTEndTimeDistanceThreshold
setMyriadDeviceVTEndTimeDistanceThreshold:
myriadShouldIgnoreAdjustedBoost
setIgnoreMyriadAdjustedBoost:
ignoreMyriadPlatformBias
setIgnoreMyriadPlatformBias:
myriadMonitorTimeOutInterval
myriadMaxNoOperationDelay
setMyriadMaxNoOperationDelay:
opportuneSpeakingPauseInterval
setOpportuneSpeakingPauseInterval:
opportuneSpeakingTimeoutInterval
setOpportuneSpeakingTimeoutInterval:
opportuneSpeakingFileLoggingIsEnabled
setOpportuneSpeakingFileLoggingIsEnabled:
limitedAudioLoggingEnabled
setLimitedAudioLoggingEnabled:
setDatabaseSyncEnabled:
databaseSyncEnabled
setSiriVocabularyEnabled:
siriVocabularyEnabled
includeProbePacketCaptureForABC
autoDismissalIdleTimeout
setAutoDismissalIdleTimeout:
autoDismissalExtendedIdleTimeout
setAutoDismissalExtendedIdleTimeout:
autoDismissalMaxAttentionSamplingTime
setAutoDismissalMaxAttentionSamplingTime:
siriDebugUIEnabled
setSiriDebugUIEnabled:
siriSpeakerGradingDebugUIEnabled
setSiriSpeakerGradingDebugUIEnabled:
enableDragAndDrop
setEnableDragAndDrop:
enableNonFullScreenAppearance
setEnableNonFullScreenAppearance:
disableAssistantWhilePasscodeLocked
setDisableAssistantWhilePasscodeLocked:
assistantLanguageForceRTL
setAssistantLanguageForceRTL:
isCurrentLocaleNativelySupported
allSiriLanguageCodesForSystemLanguageCode:isGoodFit:
synchronizeVoiceServicesLanguageCode
inProgressOutputVoice
setInProgressOutputVoice:
setLanguageCode:outputVoice:
setUseDeviceSpeakerForTTS:
setLanguageDetectorEnabled:
isLanguageDetectorEnabled
isLanguageDetectorEnabledByServer
isDictationOnDeviceSamplingDisabled
setKeepRecordedAudioFiles:
keepRecordedAudioFiles
setMediaPlaybackEnabled:
mediaPlaybackEnabled
valueForSessionContextPreferenceKey:
setValue:forSessionContextKey:
setTLSSessionTicketsFlushPending:
tlsSessionTicketsFlushPending
setFileLoggingIsEnabled:
shouldLogForQA
setCardLoggingEnabled:
cardLoggingEnabled
setCommandLoggingEnabled:
commandLoggingEnabled
setNetworkLoggingEnabled:
networkLoggingEnabled
setAVVCLoggingEnabled:
avvcLoggingEnabled
autoDismissal2018Enabled
setAutoDismissal2018Enabled:
dismissWhenFaceAttentionIsLostEnabled
setDismissWhenFaceAttentionIsLostEnabled:
dismissWhenDeviceIsLoweredEnabled
setDismissWhenDeviceIsLoweredEnabled:
handsOnIdleTimeInterval
setHandsOnIdleTimeInterval:
handsOffIdleTimeInterval
setHandsOffIdleTimeInterval:
setConfigOverrideWithValue:forKey:
removeConfigOverrideForKey:
nanoAssistantEnabled
setNanoAssistantEnabled:
nanoDictationEnabled
setNanoDictationEnabled:
setNanoLanguageCode:outputVoice:forTinkerDevice:
nanoPhraseSpotterEnabled
setNanoPhraseSpotterEnabled:
nanoRaiseToSpeakEnabled
setNanoRaiseToSpeakEnabled:
nanoUseDeviceSpeakerForTTS
setNanoUseDeviceSpeakerForTTS:
nanoTTSSpeakerVolume
setNanoTTSSpeakerVolume:
nanoLanguageCode
setNanoLanguageCode:
nanoOutputVoice
setNanoOutputVoice:
nanoCrownActivationEnabled
setNanoCrownActivationEnabled:
nanoSiriDataSharingOptInStatus
setNanoSiriDataSharingOptInStatus:
nanoOfflineDictationStatus
erasePreferences
_registeredForInternalPrefs
_registeredForLanguageCode
_registeredForOutputVoice
_registeredForNanoPrefs
_registeredForAssistantEnablement
_registeredForDictationEnablement
_navTokenQueue
_navTokenIsValid
_navToken
_tlsSessionTicketFlushRequestPending
indexOfObject:
subarrayWithRange:
dictionaryWithObjectsAndKeys:
effectiveBoolValueForSetting:
setBoolValue:forSetting:
componentsFromLocaleIdentifier:
localeIdentifierFromComponents:
initWithLocaleIdentifier:
componentsSeparatedByString:
fileExistsAtPath:isDirectory:
_initWithRequest:objectIdentifier:
_objectIdentifier
si_dictionaryRepresentation
eventType
eventData
turnID
initWithCompletion:
releaseAssertion
_safetyBlock
initWithDate:
isOlderThan:
T@"NSString",R,N,V_identifier
T@"NSDate",R,N,V_date
speakableIdentifier
speakableDate
dateWithTimeIntervalSinceNow:
_deleteSpeakablesOlderThan:
sharedCollector
logSpeakable:forContact:withModelId:withFeatures:withScore:
logFeedbackOfType:forSpeakableId:withModelId:
logRecommendedAction:forSpeakableId:withModelId:
logInteractionEvents:forSpeakableId:
_speakableMap
fakeOneBestFromPhrases:
initWithPhrases:utterances:processedAudioDuration:
_sa_mappedArrayWithBlock:
setPhrases:
setUtterances:
setSentenceConfidence:
initWithPhrases:
aceRecognition
processedAudioDuration
_processedAudioDuration
T@"NSArray",R,C,N,V_phrases
T@"NSArray",R,C,N,V_utterances
Td,R,N,V_processedAudioDuration
TI,N,V_audioSessionID
absoluteIndexPath
item
_childNodes
_appendDescriptionToString:withIndentation:
parentNode
indexPathFromAncestorNode:
indexOfChildNode:
indexPathByAddingIndex:
exceptionWithName:reason:userInfo:
indexAtPosition:
numberOfChildNodes
childNodeAtIndex:
enumerateDescendentNodesUsingBlock:
removeChildNode:
removeFromParentNode
_setParentNode:
insertChildNode:atIndex:
removeChildNodeAtIndex:
enumerateObjectsWithOptions:usingBlock:
enumerateChildNodesWithOptions:usingBlock:
absoluteIndexPathsForTreeNodes:
containsNodeAtIndexPath:
nodeAtIndexPath:
indexPathOfNodeWithItem:
lastChildNode
addChildNode:
replaceChildNodeAtIndex:withNode:
enumerateChildNodesUsingBlock:
setItem:
_item
_parentNode
T@"AFTreeNode",W,N,S_setParentNode:,V_parentNode
childNodes
T@"NSMutableArray",R,N,G_childNodes,V_childNodes
T@,&,N,V_item
decisionDepth
decisionAge
defaultRules
decisionThreshold
weightForEvent:
maxPersistenceDepth
maxPersistenceAge
Td,R,N
handleSiriRequest:deliveryHandler:completionHandler:
getAppContextWithDeliveryHandler:completionHandler:
initWithTaskmaster:
_taskmaster
deviceRoles
requestID
initWithRequestID:deviceRoles:
_requestID
_deviceRoles
T@"NSString",R,C,N,V_requestID
TQ,R,N,V_deviceRoles
setRequestID:
setDeviceRoles:
initWithCode:userInfo:
initWithCode:localizedFailureReason:
errorWithCode:userInfo:
errorWithCode:localizedFailureReason:
initWithCode:
isSupportedAndEnabled
homeKitRoomName
homeKitMediaSystemIdentifier
mediaRemoteGroupIdentifier
mediaRemoteRouteIdentifier
initWithIsSupportedAndEnabled:homeKitRoomName:homeKitMediaSystemIdentifier:mediaRemoteGroupIdentifier:mediaRemoteRouteIdentifier:
_isSupportedAndEnabled
_homeKitRoomName
_homeKitMediaSystemIdentifier
_mediaRemoteGroupIdentifier
_mediaRemoteRouteIdentifier
TB,R,N,V_isSupportedAndEnabled
T@"NSString",R,C,N,V_homeKitRoomName
T@"NSUUID",R,C,N,V_homeKitMediaSystemIdentifier
T@"NSString",R,C,N,V_mediaRemoteGroupIdentifier
T@"NSString",R,C,N,V_mediaRemoteRouteIdentifier
setIsSupportedAndEnabled:
setHomeKitRoomName:
setHomeKitMediaSystemIdentifier:
setMediaRemoteGroupIdentifier:
setMediaRemoteRouteIdentifier:
stringWithUTF8String:
initWithName:options:queue:delegate:
fetchEligibleAnnouncementRequestTypesAndNotifyObservers:
addObserver:selector:name:object:
weakObjectsHashTable
_fetchInitialState
_updateAudioRouteAvailabilityAndBroadcast:
updateWirelessSplitterSessionInfoAndObserve
_fetchWirelessSplitterSessionInfoAndStartObservingFromSourceWithCompletion:
_getCurrentAnnouncementRoute
currentAnnouncementRoute
btAddress
provider:availableAnnouncementRequestTypesChanged:
fetchAvailableAnnouncementRequestTypesWithCompletion:
_fetchEligibleAnnouncementRequestTypesAndNotifyObservers
notifyObserversOfEligibleAnnouncementRequestTypes:
fetchEligibleAnnouncementRequestTypesWithCompletion:
provider:eligibleAnnouncementRequestTypesChanged:
_settingsConnection
startObservingWirelessSplitterSession
notifyObserversOfAvailableAnnouncementRequestTypes
_setDelegate:
supportsSpokenNotification
supportsAnnounceCall
_fetchPairedBluetoothDevicesFromSourceWithCompletion:
fetchLocalVoiceAssetAvailabilityWithCompletion:
getStateWithCompletion:
provider
platform
announceableIntentIdentifiersForUserNotificationAnnouncementType:
requiredIntentIdentifiersForUserNotificationAnnouncementType:
notifyObserver:didReceiveNotificationWithToken:
notifyObserver:didChangeStateFrom:to:
_settingsConnectionDidDisconnect
_settingsConnectionPartialVerificationResult:
_settingsConnectionServerVerificationReport:
addDelegate:
lastKnownEligibleAnnouncementRequestTypes
fetchWirelessSplitterSessionInfoAndStartObservingSync
currentlyRoutedHeadphonesProductID
currentlyRoutedHeadphonesBTAddress
setCurrentAnnouncementRoute:
_inWirelessSplitterSession
_inWirelessSplitterSessionStateValid
_localVoiceAssetAvailable
_pairedInfoChangeObserver
_wirelessSplitterSessionObserver
_wirelessGuestConnectionObserver
_forcedUpdateObserver
_lastKnownAvailableAnnouncementRequests
_lastKnownEligibleAnnouncementRequests
_delegates
_currentAnnouncementRoute
T@"AFSiriAnnouncementRoute",&,N,V_currentAnnouncementRoute
_enqueueBlock:forReason:
_myriadStateToString:
startMonitoringWithTimeoutInterval:instanceContext:
_registerForMyriadEvents
_setDecisionIsPending
_cancelRepostedMyriadDecisionTimer
_fetchCurrentMyriadDecisionWithWaitTime:
_deregisterFromRepostedDecisionResultsObservers
_dequeueBlocksWithSignal:
_deregisterFromMyriadEventNotifications
_clear
_resultSeenWithValue:
_flushCompletions:
sharedMonitor
waitForMyriadDecisionWithCompletion:
waitForMyriadDecisionForReason:withCompletion:
startMonitoringWithTimeoutInterval:
ignoreMyriadEvents:
dequeueBlocksWaitingForMyriadDecision
stopMonitoring
isMonitoring
didWin
_ignoreRepostMyriadNotification:
_completions
_beginObserver
_wonObserver
_lostObserver
_repostedWonObserver
_fetchRepostedMyriadDecisionTimer
_myriadMonitorQueue
_myriadEventMonitorTimeout
_isRegisteredForMyriadEventNotification
_ignoreMyriadEvents
_isMonitoring
_ignoreRepostMyriadNotification
_block
initWithIdentifier:languageCode:rootNode:
initWithIdentifier:languageCode:
_rootNode
_nodeAtIndexPath:
conversation:didRemoveItemsWithIdentifiers:atIndexPaths:parentItemIdentifiers:
_nodeContainsProvisionalItems:
isConfirmedDialogPhase
isExpository
isConfirmationDialogPhase
isClarificationDialogPhase
af_isUtterance
isUserRequestDialogPhase
completionDialogPhase
orderedSet
strongToStrongObjectsMapTable
indexPath
indexPathByRemovingLastIndex
keyEnumerator
conversationItemType
af_mappedArray:
isSummaryDialogPhase
_childOfNode:withItemWhichCanBeUpdatedWithAceObject:inDialogPhase:
_changePresentationStateForNodes:
notifyDelegateOfUpdates:inserts:presentationChanges:
_removeNodes:
initWithConversationItemType:aceObject:aceCommandIdentifier:transient:supplemental:immersiveExperience:indexPath:
_processInsertions:inDialogPhase:
indexPathForItemWithIdentifier:
numberOfChildrenForItemAtIndexPath:
_addItemsForAceViews:withDialogPhase:fromCommandWithIdentifier:atIndexPaths:isSupplemental:isImmersiveExperience:
_indexPathsForAddingItemsWithCount:asChildrenOfItemWithIdentifier:
_addItemsForAceViews:withDialogPhase:fromCommandWithIdentifier:asChildrenOfItemWithIdentifier:isSupplemental:isImmersiveExperience:
_addItemsForAceViews:withDialogPhase:fromCommandWithIdentifier:atIndexPaths:
_addItemsForAceViews:withDialogPhase:fromCommandWithIdentifier:asChildrenOfItemWithIdentifier:
views
_addItemsForAceObjects:type:aceCommandIdentifier:dialogPhase:asChildrenOfItemWithIdentifier:
speakableText
setSpeakableText:
reflectionDialogPhase
addItemsForAceViews:withDialogPhase:asChildrenOfItemWithIdentifier:
viewId
removeItemsAtIndexPaths:
_indexPathForItemWithIdentifier:ignoreNonExistent:
_itemAtIndexPath:
itemAtIndexPath:
initWithIndex:
_enumerateItemsUsingBlock:
isSynchronizedWithServer
propertyListWithTreeNode:itemPropertyListCreation:
treeNodeWithPropertyList:error:itemCreation:
localizedFailureReason
setSynchronizedWithServer:
conversation:didUpdateItemsAtIndexPaths:
conversation:didInsertItemsAtIndexPaths:
conversation:presentationStateDidChangeForItemsAtIndexPaths:
conversation:didChangeWithTransaction:
insertItemsForAceViews:withDialogPhase:atIndexPaths:
addItemsForAddViewsCommand:
addItemsForAceObjects:type:dialogPhase:asChildrenOfItemWithIdentifier:
addItemForSpeechRecognizedCommand:
addAdditionalSpeechInterpretation:refId:
additionalSpeechInterpretationsForRefId:
addRecognitionUpdateWithPhrases:utterances:refId:
updatedUserUtteranceForRefId:
addItemForPartialResultCommand:
addItemsForShowHelpCommand:
addItemForMusicStartSessionCommand:
addSelectionResponse:
updateWithUpdateViewsCommand:
removeItemsWithIdentifiers:
removeItemsFollowingItemAtIndexPath:
removeTransientItems
cancelItemWithIdentifier:
containsItemWithIdentifier:
identifierOfItemAtIndexPath:
hasItemWithIdentifier:
itemWithIdentifier:
parentOfItemWithIdentifier:
lastItem
typeForItemAtIndexPath:
dialogPhaseForItemAtIndexPath:
aceObjectForItemAtIndexPath:
presentationStateForItemAtIndexPath:
numberOfChildrenForItemWithIdentifier:
aceCommandIdentifierForItemAtIndexPath:
itemAtIndexPathIsVirgin:
containsItemForAceViewWithIdentifier:
_setRootNode:
lastRestoredItem
_setLastRestoredItem:
_additionalInterpretationsForRefId
_updatedUserUtteranceForRefId
_synchronizedWithServer
_lastRestoredItem
rootNode
T@"AFTreeNode",&,N,G_rootNode,S_setRootNode:,V_rootNode
T@"<AFConversationStorable>",&,N,S_setLastRestoredItem:,V_lastRestoredItem
T@"NSString",R,C,N,V_languageCode
synchronizedWithServer
TB,N,GisSynchronizedWithServer,V_synchronizedWithServer
T@"<AFConversationDelegate>",W,N,V_delegate
initWithBytes:length:
appendBytes:length:
subdataWithRange:
bytes
initWithBytesNoCopy:length:freeWhenDone:
appearance
addTitleVariant:
initWithBulletinAction:
getTitleVariants
bbAction
bbActionID
titleVariants
setTitleVariants:
_bbAction
_bbActionID
_titleVariants
T@"NSMutableSet",&,N,V_titleVariants
T@"BBAction",R,N,V_bbAction
T@"NSString",R,C,N,V_bbActionID
contextFetchDelay
contextData
initWithGeneration:contextData:contextFetchDelay:
_generation
_contextData
_contextFetchDelay
TQ,R,N,V_generation
T@"NSData",R,C,N,V_contextData
Td,R,N,V_contextFetchDelay
setGeneration:
setContextData:
setContextFetchDelay:
deploymentGroupProperties
playsTwoShotSoundForSiriVOXSounds
playsSessionInactiveSoundForSiriVOXSounds
logExperimentExposureForSiriVOXSounds
experimentsByConfigurationIdentifier
experimentForSiriVOXSounds
T@"AFExperiment<AFExperimentForSiriVOXSounds>",R,N
_fire
initWithIdentifier:queue:effectiveDate:expirationDuration:heartBeatInterval:heartBeatHandler:invalidationHandler:
numberOfHeartBeats
heartBeatInterval
_heartBeatTimer
_expirationTimer
_heartBeatHandler
_invalidationHandler
_numberOfHeartBeats
_heartBeatInterval
Td,R,N,V_heartBeatInterval
deviceRingerSwitchState
isDeviceWatchAuthenticated
areAnnouncementRequestsPermittedByPresentationWhileActive
outputVolume
accessibilityState
tapToSiriAudioPlaybackRequest
twoShotAudioPlaybackRequest
deviceSetupFlowBeginDate
deviceSetupFlowEndDate
_isDeviceInCarDNDMode
_isDeviceInStarkMode
_isDeviceWatchAuthenticated
_areAnnouncementRequestsPermittedByPresentationWhileActive
_outputVolume
_accessibilityState
_deviceRingerSwitchState
_tapToSiriAudioPlaybackRequest
_twoShotAudioPlaybackRequest
_deviceSetupFlowBeginDate
_deviceSetupFlowEndDate
T@"AFAccessibilityState",R,C,N,V_accessibilityState
Tq,R,N,V_deviceRingerSwitchState
TB,R,N,V_isDeviceInCarDNDMode
TB,R,N,V_isDeviceInStarkMode
TB,R,N,V_isDeviceWatchAuthenticated
TB,R,N,V_areAnnouncementRequestsPermittedByPresentationWhileActive
Tf,R,N,V_outputVolume
T@"AFAudioPlaybackRequest",R,C,N,V_tapToSiriAudioPlaybackRequest
T@"AFAudioPlaybackRequest",R,C,N,V_twoShotAudioPlaybackRequest
T@"NSDate",R,C,N,V_deviceSetupFlowBeginDate
T@"NSDate",R,C,N,V_deviceSetupFlowEndDate
setOutputVolume:
setTapToSiriAudioPlaybackRequest:
setTwoShotAudioPlaybackRequest:
setDeviceSetupFlowBeginDate:
setDeviceSetupFlowEndDate:
initWithLocale:
_shouldAutomaticallyProvideFunctions
setHandlesFunctions:
registerProvider:forNamespace:
handleTTSCodes
handlesFunctions
_parseStringWithFormat:error:hadEmpties:containsPrivacySensitiveContents:externalProviders:
stringForExpression:containsPrivacySensitiveContents:
stringForExpression:
parseStringWithFormat:includeControlCharacters:error:hadEmpties:containsPrivacySensitiveContents:externalProviders:
_handleOptionalAtIndex:withBuffer:totalLength:consumedLength:containsPrivacySensitiveContents:externalProviders:
_handleProviderAtIndex:withBuffer:totalLength:consumedLength:containsPrivacySensitiveContents:hadEmpties:externalProviders:
stringWithCapacity:
_handleControlCodeAtIndex:withBuffer:totalLength:consumedLength:hadEmpties:containsPrivacySensitiveContents:externalProviders:
parseStringWithFormat:error:hasExternalDomains:
parseStringWithFormat:error:containsPrivacySensitiveContents:hasExternalDomains:
parseUserGeneratedMessage:
setHandleTTSCodes:
parseStringWithFormat:error:
parseStringWithFormat:error:containsPrivacySensitiveContents:
parseStringRemovingControlCharacters:error:
parseStringRemovingControlCharacters:error:containsPrivacySensitiveContents:
_providers
_functionHandler
_locale
TB,N
initWithAceObject:
setAssistantBulletin:
attachmentURLForExpression:
_handleNotificationWithToken:
_updateStateWithToken:
_registrationToken
_flags
T@"NSString",R,C,N,V_name
timeZoneWithName:
timeZoneWithAbbreviation:
setTimeZone:
localTimeZone
calendarWithIdentifier:
setCalendar:
locale
stringFromDate:
setDateStyle:
setTimeStyle:
dateFormatFromTemplate:options:locale:
characterSetWithCharactersInString:
rangeOfCharacterFromSet:
setDateFormat:
_dateFormattedWithFormatter:arguments:
lowercaseStringWithLocale:
_meCard
fullName
firstName
lastName
nickName
_peerInfoForContextIdentifier:
roomName
_currentTime:
_currentShortDate:
_currentLongDate:
_currentWeekday:
_tempInWeatherUnits:
_deviceModel
_lowercaseString:
_siriUsageDescription:
_speechRecognitionUsageDescription:
_contextRoomName:
_contextDeviceName:
_userFullName:
_userFirstName:
_userMiddleName:
_userLastName:
_userNickName:
_meCardIdentifier:
_callFunction:withArguments:
_dateFormatter
_timeFormatter
_dictationService
dictationConnectionSpeechRecordingWillBegin:
detectUtterances
dictationConnection:speechRecordingDidBeginWithOptions:
dictationConnectionSpeechRecordingDidBegin:
dictationConnectionSpeechRecordingDidEnd:
dictationConnectionSpeechRecordingDidCancel:
_willFailDictationWithError:
dictationConnection:speechRecordingDidFail:
_willCompleteDictation
dictationConnection:didRecognizePhrases:languageModel:correctionIdentifier:replacingPreviousPhrasesCount:
dictationConnection:didRecognizePackage:
dictationConnection:didRecognizePhrases:languageModel:correctionIdentifier:
dictationConnection:didRecognizeTokens:languageModel:
logEventWithType:contextProvider:
dictationConnection:didRecognizePartialResult:
af_tokens
_delegateDidRecognizeSpeechTokens:languageModel:delegate:
dictationConnection:didProcessAudioDuration:
dictationConnection:didRecognizeTranscriptionObjects:languageModel:
dictationConnection:speechRecognitionDidFail:
dictationConnectionSpeechRecognitionDidSucceed:
dictationConnection:didFinishWritingAudioFile:error:
dictationConnnectionDidChangeAvailability:
dictationConnection:didReceiveSearchResults:recognizedText:stable:final:
dictationConnection:didDetectLanguage:confidenceScores:isConfident:
dictationConnection:didDetectLanguage:confidenceScores:
dictationConnection:didRecognizeMultilingualSpeech:
dictationConnection:languageDetectorFailedWithError:
dictationConnection:didBeginLocalRecognitionWithModelInfo:
_tellSpeechDelegateAudioFileFinished:error:
_cancelTimerClearBuffer
_connectionClearedForInterruption:
_registerInvalidationHandlerForXPCConnection:
_dispatchAsync:
startRequestActivityWithCompletion:
startRecordingForPendingDictationWithLanguageCode:options:speechOptions:reply:
startDictationWithLanguageCode:options:speechOptions:
startRecordedAudioDictationWithOptions:language:narrowband:forceSampling:
addRecordedSpeechSampleData:
sendSpeechCorrectionInfo:forCorrectionContext:
sendSpeechCorrectionInfo:interactionIdentifier:
preheat
preheatForLanguageCode:
preheatTestWithLanguage:options:
preheatWithRecordDeviceIdentifier:
recordFailureMetricsForError:
_startDictationWithURL:isNarrowBand:language:options:
_sendEngagementFeedback:voiceQueryIdentifier:
getInstalledOfflineLanguagesWithCompletion:
requestOfflineAssistantSupportForLanguage:completion:
requestOfflineDictationSupportForLanguage:completion:
reportIssueForError:eventType:context:
reportIssueForError:eventType:subtype:context:
sendUserSelectedAlternativeDictationLanguageCode:
initWithDictationConnection:
_invokeRequestTimeout
_cancelRequestTimeout
_scheduleRequestTimeout
dictationIsAvailableForLanguage:synchronous:
forcedOfflineDictationIsAvailableForLanguage:synchronous:
synchronousRemoteObjectProxyWithErrorHandler:
_availabilityChanged
_tellSpeechDelegateAvailabilityChanged
initWithTurnIdentifier:
audioFileType
interactionIdentifier
fieldLabel
setInteractionIdentifier:
objectForKeyedSubscript:
preferOnDeviceRecognition
setSpeechRecognitionSource:
emitInstrumentation:
logDictationStarted
_sendPendingAnalyticsEvents
_LogUEIRequestCategorization:
_logRequestCompetionStatusWithEventType:error:
logDictationCancelled
logDictationFailedWithError:
logDictationSucceeded
_addPreheatAnalyticsEvent
expectedActivationEventTime
setActivationEventTime:
setExpectedActivationEventTime:
_setActivationTimeOnOptionsIfNecessary:
_willStartDictationWithLanguageCode:options:speechOptions:machAbsoluteTime:
_dictationServiceWithErrorHandler:
initWithListenerEndpoint:
continuePendingSpeechRequestFromTimestamp:
addBarrierBlock:
forceOfflineRecognition
incremental
offlineLanguage
setOfflineLanguage:
startRecordedAudioDictationWithOptions:forLanguage:narrowband:forceSampling:
appendData:
_sendDataIfNeeded
_willCancelDictation
_delayedStopSpeechWithOptions:
_dequeueAudioWithLength:
_updateBufferFlushTimerWithDelay:
replaceBytesInRange:withBytes:length:
_cancelBufferFlushTimer
getForcedOfflineDictationSupportedLanguagesWithCompletion:
languageDetectorIsEnabled
dictationIsSupportedForLanguageCode:error:
fetchSupportedLanguageCodes:
_tellSpeechDelegateRecordingWillBegin
_tellSpeechDelegateRecordingDidBeginWithOptions:
_tellSpeechDelegateDidRecognizePackage:
_tellSpeechDelegateDidRecognizeSpeechPhrases:utterances:languageModel:correctionIdentifier:audioAnalytics:
_tellSpeechDelegateDidRecognizePartialResult:
_tellSpeechDelegateDidRecognizeSpeechTokens:languageModel:
_tellSpeechDelegateDidProcessAudioDuration:
_tellSpeechDelegateDidRecognizeTranscriptionObjects:languageModel:
_tellSpeechDelegateSpeechRecognitionDidSucceed
_tellSpeechDelegateSearchResultsReceived:recognitionText:stable:final:
_tellSpeechDelegateLanguageDetected:confidenceScores:isConfident:
_tellSpeechDelegateMultilingualSpeechRecognized:
_tellSpeechDelegateLanguageDetectorDidFail:
_tellSpeechDelegateDidBeginLocalRecognitionWithModelInfo:
_extendRequestTimeout
dictationIsAvailableForLanguage:
forcedOfflineDictationIsAvailableForLanguage:
beginAvailabilityMonitoring
cancelAvailabilityMonitoring
startRecordingForPendingDictationWithLanguageCode:options:speechOptions:
startDictationWithLanguageCode:options:
startRecordedAudioDictationWithOptions:forLanguage:
startRecordedAudioDictationWithOptions:forLanguage:narrowband:
sendSpeechCorrection:forIdentifier:
sendSpeechCorrection:interactionIdentifier:
delegateQueue
setDelegateQueue:
_lastUsedLanguage
_knownOfflineInstalledLanguages
_isWaitingForKnownOfflineInstalledLanguages
_hasActiveRequest
_isWaitingForAudioFile
_recognizingIncrementally
_internalQueue
_timeoutTimer
_bufferTimer
_forceOfflineRecognition
_stopOptions
_buffer
_audioStartTime
_amountDataSent
_narrowband
_requestIdString
_previouslyRecognizedPhrases
_onDeviceDictationUIInteractionIdentifier
_preheatEvent
_intstrumentationContext
_isDetectingUtterances
_delegateQueue
T@"<AFDictationDelegate>",W,N,V_delegate
T@"NSObject<OS_dispatch_queue>",&,N,V_delegateQueue
startDictationWithSpeechFileAtURL:isNarrowBand:options:forLanguage:
startDictationWithSpeechFileAtURL:options:forLanguage:
sendEngagementFeedback:voiceQueryIdentifier:
secureOfflineOnly
speechRecordingWillBeginWithInputAudioPowerXPCWrapper:
speechRecordingDidBeginWithOptions:sessionUUID:sessionRequestUUID:
speechDidBeginLocalRecognitionWithModelInfo:
speechRecordingDidEnd
speechRecordingDidCancel
speechRecordingDidFail:
speechDidRecognizePhrases:utterances:usingSpeechModel:correctionContext:audioAnalytics:
speechDidRecognizePartialResult:
speechDidRecognizeTokens:usingSpeechModel:
speechDidProcessAudioDuration:
speechDidRecognizeTranscriptionObjects:usingSpeechModel:
speechRecognitionDidFinishWithError:
speechDidFinishWritingAudioFile:error:
speechDidReceiveSearchResults:recognitionText:stable:final:
speechDidRecognizePackage:
speechDidDetectLanguage:confidenceScores:isConfident:
speechDidRecognizeMultilingualSpeech:
languageDetectorFailedWithError:
suppressStopAlert
setSuppressStopAlert:
suppressStartAlert
setSuppressStartAlert:
results
setResults:
_results
T@"NSArray",C,N,V_results
nearbyDevicesPayloads
sharedLoggingService
logToCoreAnalyticsCrossDeviceRequestEvent:
initWithContext:
performRequestWithResultHandler:
vendorID
isAdvancedAppleAudioDevice
supportsInEarDetection
supportsVoiceTrigger
supportsListeningModeANC
supportsListeningModeTransparency
address
deviceUID
initWithAddress:deviceUID:vendorID:productID:isAdvancedAppleAudioDevice:supportsInEarDetection:supportsVoiceTrigger:supportsSpokenNotification:supportsListeningModeANC:supportsListeningModeTransparency:supportsAnnounceCall:
_isAdvancedAppleAudioDevice
_supportsInEarDetection
_supportsVoiceTrigger
_supportsSpokenNotification
_supportsListeningModeANC
_supportsListeningModeTransparency
_supportsAnnounceCall
_vendorID
_productID
_address
_deviceUID
T@"NSString",R,C,N,V_address
T@"NSUUID",R,C,N,V_deviceUID
TI,R,N,V_vendorID
TI,R,N,V_productID
TB,R,N,V_isAdvancedAppleAudioDevice
TB,R,N,V_supportsInEarDetection
TB,R,N,V_supportsVoiceTrigger
TB,R,N,V_supportsSpokenNotification
TB,R,N,V_supportsListeningModeANC
TB,R,N,V_supportsListeningModeTransparency
TB,R,N,V_supportsAnnounceCall
setAddress:
setDeviceUID:
setVendorID:
setProductID:
setIsAdvancedAppleAudioDevice:
setSupportsInEarDetection:
setSupportsVoiceTrigger:
setSupportsSpokenNotification:
setSupportsListeningModeANC:
setSupportsListeningModeTransparency:
setSupportsAnnounceCall:
_initWithOriginatingAceID:
_originatingAceID
_resultDescription
isAnnounceEnabled
isAnnounceTelephonyEnabled
featureFlags
isLocationSearchContinuityEnabled
setLocationSearchContinuityEnabled:
dump
isDictationVoiceTriggerEnabled
isTrialDictationAssetDeliveryEnabled
isHintsEnabled
isAudioSessionCoordinationEnabled
isThemisABEnabled
isRemoraEnabled
isMyriadNonSpeakerRawScoreThresholdEnabled
isLassoEnabled
isAnnounceGroupFaceTimeInviteEnabled
isTimerAlarmCoordinationEnabled
isListeningOnBothStereoPairUnitsEnabled
isHomeAutomationBackgroundRequestEnabled
isSiriRequestDispatcherEnabled
isAnnounceNotificationsEnabled
isCrossDeviceTVControlEnabled
isAnnounceMessagesInCarPlayEnabled
isCrossDeviceVoiceFollowUpEnabled
isTVPushToTalkEnabled
isCDAFaceDetectionEnabled
isMyriadSelfMetricsEnabled
initWithVtSatScore:
initWithConfidenceScores:
alarmsByID
notifiedFiringAlarmIDs
mostRecentFiringAlarm
firingAlarms
timeIntervalSinceDate:
timerId
setTimerId:
value
setValue:
_timerId
_value
T@"NSString",C,N,V_timerId
Tq,N,V_state
T@"NSNumber",C,N,V_value
addSessionObserver:
_requestTypesForCarPlayAvailableOrConnected:
_isCarPlayConnectedWithCompletion:
currentSession
waitForSessionInitialization
_updateForCarPlaySessionConnected:
_setLastKnownAvailableAnnouncementRequestTypesAndNotifyObservers:
updateForCarPlaySessionConnected:
initWithQueue:
_availableAnnouncementRequestTypesForCarPlayConnectionWithCompletion:
isCarPlayConnectedWithCompletion:
_notifyObserversOfUpdatedAvailableAnnouncementRequestTypes:
startedConnectionAttemptOnTransport:
cancelledConnectionAttemptOnTransport:
sessionDidConnect:
sessionDidDisconnect:
session:didUpdateConfiguration:
_carSessionStatus
_providerQueue
_isCarPlayConnected
_lastKnownAvailableAnnouncementRequestTypes
_lastKnownEligibleAnnouncementRequestTypes
handleFailureInFunction:file:lineNumber:description:
startingAlertBehavior
stoppedAlertBehavior
stoppedWithErrorAlertBehavior
initWithStartingAlertBehavior:stoppedAlertBehavior:stoppedWithErrorAlertBehavior:
_startingAlertBehavior
_stoppedAlertBehavior
_stoppedWithErrorAlertBehavior
T@"AFSpeechRecordingAlertBehavior",R,C,N,V_startingAlertBehavior
T@"AFSpeechRecordingAlertBehavior",R,C,N,V_stoppedAlertBehavior
T@"AFSpeechRecordingAlertBehavior",R,C,N,V_stoppedWithErrorAlertBehavior
setStartingAlertBehavior:
setStoppedAlertBehavior:
setStoppedWithErrorAlertBehavior:
deploymentReason
configurationIdentifier
configurationVersion
deploymentGroupIdentifier
initWithConfigurationIdentifier:configurationVersion:deploymentGroupIdentifier:deploymentGroupProperties:deploymentReason:
_configurationIdentifier
_configurationVersion
_deploymentGroupIdentifier
_deploymentGroupProperties
_deploymentReason
T@"NSString",R,C,N,V_configurationIdentifier
T@"NSString",R,C,N,V_configurationVersion
T@"NSString",R,C,N,V_deploymentGroupIdentifier
T@"NSDictionary",R,C,N,V_deploymentGroupProperties
Tq,R,N,V_deploymentReason
setConfigurationIdentifier:
setConfigurationVersion:
setDeploymentGroupIdentifier:
setDeploymentGroupProperties:
setDeploymentReason:
initWithTimestamp:
setNotifyState:
setHandoffOriginDeviceName:
setHandoffURLString:
setHandoffRequiresUserInteraction:
setHandoffNotification:
setDirectActionAppId:
setDirectActionEvent:
setTestRequestOptions:
setRequestCompletionOptions:
setExpectedSpeakerSharedUserID:
setExpectedSpeakerConfidenceScore:
setNonspeakerConfidenceScores:
requiresUserInteraction
handoffOriginDeviceName
isSpeechRequest
legacyDirectActionIdentifier
requestCompletionOptions
notifyState
handoffRequestData
handoffURLString
handoffRequiresUserInteraction
handoffNotification
correctedSpeech
correctedSpeechContext
directActionAppId
directActionEvent
testRequestOptions
expectedSpeakerSharedUserID
expectedSpeakerConfidenceScore
nonspeakerConfidenceScores
_handoffRequiresUserInteraction
_turnIdentifier
_requestCompletionOptions
_notifyState
_legacyDirectActionIdentifier
_handoffOriginDeviceName
_handoffRequestData
_handoffURLString
_handoffNotification
_correctedSpeech
_correctedSpeechContext
_startRequest
_startLocalRequest
_directActionAppId
_directActionEvent
_activationEvent
_testRequestOptions
_expectedSpeakerSharedUserID
_expectedSpeakerConfidenceScore
_nonspeakerConfidenceScores
TQ,N,V_options
T@"NSNumber",C,N,V_notifyState
T@"NSString",C,N,V_legacyDirectActionIdentifier
T@"NSString",C,N,V_handoffOriginDeviceName
T@"NSData",C,N,V_handoffRequestData
T@"NSString",C,N,V_handoffURLString
TB,N,V_handoffRequiresUserInteraction
T@"NSString",C,N,V_handoffNotification
T@"NSString",C,N,V_correctedSpeech
T@"NSDictionary",C,N,V_correctedSpeechContext
T@"SAStartRequest",C,N,V_startRequest
T@"SAStartLocalRequest",C,N,V_startLocalRequest
T@"NSString",C,N,V_directActionAppId
Tq,N,V_directActionEvent
Tq,N,V_activationEvent
T@"AFSpeechRequestOptions",C,N,V_speechRequestOptions
T@"AFTestRequestOptions",C,N,V_testRequestOptions
T@"AFRequestCompletionOptions",C,N,V_requestCompletionOptions
T@"NSString",C,N,V_expectedSpeakerSharedUserID
TQ,N,V_expectedSpeakerConfidenceScore
T@"NSDictionary",C,N,V_nonspeakerConfidenceScores
T@"NSUUID",C,N,V_turnIdentifier
effectiveMachServiceName:
createXPCListenerWithMachServiceName:
createXPCConnectionForMachService:targetQueue:flags:
createXPCListenerForMachService:targetQueue:flags:
isDefault
isCurrent
T@"AFInstanceInfo",R,N
audioDeviceIdentifier
supportsAudioPowerUpdate
supportsProxyGroupPlayer
supportsTelephony
T@"NSString",R,C,N
initWithMachServiceName:
setAlarmIdentifiers:
setAlarmIdentifier:
alarmIdentifiers
_alarmIdentifiers
T@"NSArray",C,N,V_alarmIdentifiers
isSpeaker
hasActiveThirdPartyMusicSubscription
schemaCategoryType
uniqueIdentifier
loggingUniqueIdentifier
model
assistantIdentifier
manufacturer
categoryType
initWithUniqueIdentifier:loggingUniqueIdentifier:name:model:roomName:assistantIdentifier:isSpeaker:hasActiveThirdPartyMusicSubscription:manufacturer:categoryType:schemaCategoryType:
_isSpeaker
_hasActiveThirdPartyMusicSubscription
_uniqueIdentifier
_loggingUniqueIdentifier
_model
_roomName
_assistantIdentifier
_manufacturer
_categoryType
_schemaCategoryType
T@"NSUUID",R,C,N,V_uniqueIdentifier
T@"NSUUID",R,C,N,V_loggingUniqueIdentifier
T@"NSString",R,C,N,V_model
T@"NSString",R,C,N,V_roomName
T@"NSString",R,C,N,V_assistantIdentifier
TB,R,N,V_isSpeaker
TB,R,N,V_hasActiveThirdPartyMusicSubscription
T@"NSString",R,C,N,V_manufacturer
T@"NSString",R,C,N,V_categoryType
Tq,R,N,V_schemaCategoryType
setUniqueIdentifier:
setLoggingUniqueIdentifier:
setModel:
setRoomName:
setAssistantIdentifier:
setIsSpeaker:
setHasActiveThirdPartyMusicSubscription:
setManufacturer:
setCategoryType:
setSchemaCategoryType:
content
body
speakableContent
speakableDescription
beginGrouping
endGroupingWithOptions:
isEqualToDictionary:
minusSet:
intersectSet:
isEqualToDate:
clockItemStorageDidUpdate:insertedItemIDs:updatedItemIDs:deletedItemIDs:
itemID
removeObjectsForKeys:
removeAllObjects
initWithIdentifier:delegate:
setItemsByID:
itemWithID:
insertOrUpdateItems:
deleteItemsWithIDs:
deleteAllItems
itemsByID
_groupingDepth
_workingGeneration
_workingDate
_workingItemsByID
_itemsByID
TQ,N,V_generation
T@"NSDate",C,N,V_date
T@"NSDictionary",C,N,V_itemsByID
_af_lenient:map:
indexOfObjectPassingTest:
indexesOfObjectsPassingTest:
objectsAtIndexes:
af_lenientMappedArray:
af_lenientMappedDictionary:
af_firstObjectPassingTest:
af_objectsPassingTest:
af_mappedDictionary:
af_mappedSet:
serializedContextForKey:
initWithSerializedBackingStore:
contextMetadataForKey:
unsignedLongValue
serializedHistoricalContextForKey:
historicalContextMetadataForKey:
ad_shortDescription
af_didHearVoiceTrigger
myriadAdvertisementContext
locationSnapshot
callStateSnapshot
systemStateSnapshot
af_validFlowContext
siriClientState
setLocalizedDateFormatFromTemplate:
historicalSiriClientStates
historicalSiriClientStateMetadata
deliveryDate
alarmSnapshotMetadata
timerSnapshotMetadata
playbackStateMetadata
homeAnnouncementSnapshotMetadata
heardVoiceTrigger
heardVoiceTriggerMetadata
multiUserStateSnapshot
multiUserStateMetadata
locationMetadata
callStateMetadata
systemStateMetadata
siriClientStateMetadata
buildBuiltInContextsDescriptions
T@"AFClockAlarmSnapshot",R,N
T@"AFDeviceContextMetadata",R,N
T@"AFClockTimerSnapshot",R,N
T@"AFMediaPlaybackStateSnapshot",R,N
T@"AFHomeAnnouncementSnapshot",R,N
Tq,R,N
T@"NSData",R,N
T@"AFMultiUserStateSnapshot",R,N
T@"AFLocationSnapshot",R,N
T@"AFCallStateSnapshot",R,N
T@"AFSystemStateSnapshot",R,N
_handleCommand:afterCurrentRequest:isOneWay:completion:
handleRemoteCommand:afterCurrentRequest:isOneWay:completion:
initAndHandleCommand:afterCurrentRequest:isOneWay:commandHandler:completion:
_commandHandler
_handleCommand:afterCurrentRequest:isOneWay:commandHandler:completion:
handleCommand:afterCurrentRequest:commandHandler:completion:
handleOneWayCommand:commandHandler:completion:
handleCommand:commandHandler:completion:
setDialogIdentifier:
setCanUseServerTTS:
setDisplayTarget:
setViews:
localDeviceInfo
_activeDeviceInfoChanged:
_updateWithRouteIdentifier:groupIdentifier:
postNotificationName:object:userInfo:
localOrigin
deviceInfoForOrigin:queue:completion:
_getMRDeviceInfoWithCompletion:
groupUID
currentDevice
getRouteIdentifierWithCompletion:
getGroupIdentifierWithCompletion:
serialQueue
setSerialQueue:
_routeIdentifier
_groupIdentifier
_serialQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_serialQueue
initWithMessage:makeAppFrontmost:
message
_makeAppFrontmost
_message
_frontmost
localizations
URLsForResourcesWithExtension:subdirectory:localization:
regularExpressionWithPattern:options:error:
lastPathComponent
numberOfMatchesInString:options:range:
initWithContentsOfURL:
compactDisplayNameInLanguage:forSiriLanguage:
longDisplayNameInLanguage:forSiriLanguage:
localizedNameOfOutputVoiceWithIdentifier:inDisplayLanguage:
localizedNameOfVoiceGender:inDisplayLanguage:
outputVoiceDescriptorForOutputLanguageCode:voiceName:
initWithHexColor:colorName:alpha:localizedOutputVoiceColor:localizedOutputVoice:
_voicesFromVoiceMapWithLanguage:
outputVoiceComparator
sortedArrayUsingComparator:
localizedStringWithFormat:
pathForResource:ofType:
dictionaryWithContentsOfFile:
dialectsMap
_voiceMaps
_getVoiceOrdering
defaultOutputVoiceForSiriSessionLanguage:
voiceNamesForOutputLanguageCode:gender:
localizedCompactNameForSiriLanguage:inDisplayLanguage:
localizedNameForSiriLanguage:inDisplayLanguage:
localizedNameOfOutputVoice:inDisplayLanguage:
localizedGenderOfOutputVoice:inDisplayLanguage:
outputVoiceColorDescriptorForOutputLanguageCode:voiceName:
allOutputVoiceIdentifiersForSiriLanguage:
loadInfoForVoicesWithLanguageCode:
voiceSimilarToVoice:inSiriSessionLanguage:
_tables
allVoicesForSiriSessionLanguage:
isValidForSiriSessionLanguage:
voiceInfoForLanguageCode:
voiceInfoForSessionLanguageCode:
outputVoiceIdentifierForLanguageCode:voiceName:
keyboardType
transcriptionMode
preferOnlineRecognition
languageDetectionUserContext
returnKeyType
dictationOptionsWithoutTextContext
prefixText
setPrefixText:
postfixText
setPostfixText:
selectedText
setSelectedText:
applicationName
setApplicationName:
applicationDisplayName
setApplicationDisplayName:
applicationVersion
setApplicationVersion:
setContext:
setFieldLabel:
fieldIdentifier
setFieldIdentifier:
requestIdentifier
setRequestIdentifier:
setKeyboardType:
setReturnKeyType:
languageCodeOverride
setLanguageCodeOverride:
setTranscriptionMode:
microphoneIdentifier
setMicrophoneIdentifier:
voiceSearchTypeOptions
setVoiceSearchTypeOptions:
voiceSearchHeaderFields
setVoiceSearchHeaderFields:
voiceSearchQueryParameters
setVoiceSearchQueryParameters:
voiceTriggerEventInfo
setVoiceTriggerEventInfo:
setForceOfflineRecognition:
setPreferOnlineRecognition:
setDetectUtterances:
continuousListening
setContinuousListening:
shouldHandleCapitalization
setShouldHandleCapitalization:
setPreferOnDeviceRecognition:
setSecureOfflineOnly:
farField
setFarField:
keyboardIdentifier
setKeyboardIdentifier:
releaseAudioSessionOnRecordingCompletion
setReleaseAudioSessionOnRecordingCompletion:
setIncremental:
maximumRecognitionDuration
setMaximumRecognitionDuration:
taskHint
setTaskHint:
originalAudioFileURL
setOriginalAudioFileURL:
recognitionOverrides
setRecognitionOverrides:
modelOverrideURL
setModelOverrideURL:
inlineItemList
setInlineItemList:
setLanguageDetectionUserContext:
samplingInfo
setSamplingInfo:
_preferOnlineRecognition
_detectUtterances
_continuousListening
_shouldHandleCapitalization
_preferOnDeviceRecognition
_secureOfflineOnly
_farField
_releaseAudioSessionOnRecordingCompletion
_incremental
_applicationName
_applicationDisplayName
_applicationVersion
_fieldLabel
_fieldIdentifier
_interactionIdentifier
_requestIdentifier
_keyboardType
_prefixText
_postfixText
_selectedText
_returnKeyType
_transcriptionMode
_inlineItemList
_microphoneIdentifier
_keyboardIdentifier
_languageCodeOverride
_offlineLanguage
_voiceSearchTypeOptions
_voiceSearchHeaderFields
_voiceSearchQueryParameters
_voiceTriggerEventInfo
_maximumRecognitionDuration
_taskHint
_originalAudioFileURL
_recognitionOverrides
_modelOverrideURL
_languageDetectionUserContext
_samplingInfo
T@"NSString",C,N,V_applicationName
T@"NSString",C,N,V_applicationDisplayName
T@"NSString",C,N,V_applicationVersion
T@"STSiriContext",&,N,V_context
T@"NSString",C,N,V_fieldLabel
T@"NSString",C,N,V_fieldIdentifier
T@"NSString",C,N,V_interactionIdentifier
T@"NSString",C,N,V_requestIdentifier
Tq,N,V_keyboardType
T@"NSString",C,N,V_prefixText
T@"NSString",C,N,V_postfixText
T@"NSString",C,N,V_selectedText
Tq,N,V_returnKeyType
Tq,N,V_transcriptionMode
T@"NSArray",C,N,V_inlineItemList
T@"NSString",C,N,V_microphoneIdentifier
T@"NSString",C,N,V_orthography
T@"NSString",C,N,V_keyboardIdentifier
T@"NSString",C,N,V_languageCodeOverride
T@"NSString",C,N,V_offlineLanguage
Tq,N,V_voiceSearchTypeOptions
T@"NSDictionary",C,N,V_voiceSearchHeaderFields
T@"NSDictionary",C,N,V_voiceSearchQueryParameters
T@"NSDictionary",C,N,V_voiceTriggerEventInfo
TB,N,V_forceOfflineRecognition
TB,N,V_preferOnlineRecognition
TB,N,V_detectUtterances
TB,N,V_continuousListening
TB,N,V_shouldHandleCapitalization
TB,N,V_preferOnDeviceRecognition
TB,N,V_secureOfflineOnly
TB,N,V_farField
TB,N,V_releaseAudioSessionOnRecordingCompletion
TB,N,V_incremental
Td,N,V_maximumRecognitionDuration
Tq,N,V_taskHint
T@"NSURL",C,N,V_originalAudioFileURL
T@"NSDictionary",C,N,V_recognitionOverrides
T@"NSURL",C,N,V_modelOverrideURL
T@"AFLanguageDetectionUserContext",C,N,V_languageDetectionUserContext
Tq,N,V_dictationInputOrigin
T@"NSString",C,N,V_samplingInfo
imageData
setImageData:
scale
setScale:
_imageData
_scale
T@"NSData",&,N,V_imageData
Td,N,V_scale
initWithEntries:
initWithType:value:
dictionaryWithCapacity:
initWithPropertyListRepresentation:error:
setImageData:forKey:
imageDataForKey:
_entries
_valuePropertyListRepresentation
_valueForPropertyListRepresentation:type:
T@,R,N,V_value
isEnabled
primaryEarbudSide
primaryInEarStatus
secondaryInEarStatus
initWithIsEnabled:primaryEarbudSide:primaryInEarStatus:secondaryInEarStatus:
_isEnabled
_primaryEarbudSide
_primaryInEarStatus
_secondaryInEarStatus
TB,R,N,V_isEnabled
Tq,R,N,V_primaryEarbudSide
Tq,R,N,V_primaryInEarStatus
Tq,R,N,V_secondaryInEarStatus
setIsEnabled:
setPrimaryEarbudSide:
setPrimaryInEarStatus:
setSecondaryInEarStatus:
enablementFlow
newUser
recognitionLanguageWithMultipleOutputVoicesExists
userStatusFetchError
dateStartedResolvingUserStatus
dateEndedResolvingUserStatus
experiment
experimentFetchError
dateStartedResolvingExperiment
dateEndedResolvingExperiment
outputVoiceCountForRecognitionLanguage
initWithEnablementFlow:newUser:userStatusFetchError:dateStartedResolvingUserStatus:dateEndedResolvingUserStatus:experiment:experimentFetchError:dateStartedResolvingExperiment:dateEndedResolvingExperiment:outputVoiceCountForRecognitionLanguage:recognitionLanguageWithMultipleOutputVoicesExists:
_newUser
_recognitionLanguageWithMultipleOutputVoicesExists
_enablementFlow
_userStatusFetchError
_dateStartedResolvingUserStatus
_dateEndedResolvingUserStatus
_experiment
_experimentFetchError
_dateStartedResolvingExperiment
_dateEndedResolvingExperiment
_outputVoiceCountForRecognitionLanguage
Tq,R,N,V_enablementFlow
TB,R,N,V_newUser
T@"NSError",R,C,N,V_userStatusFetchError
T@"NSDate",R,C,N,V_dateStartedResolvingUserStatus
T@"NSDate",R,C,N,V_dateEndedResolvingUserStatus
T@"AFExperiment",R,C,N,V_experiment
T@"NSError",R,C,N,V_experimentFetchError
T@"NSDate",R,C,N,V_dateStartedResolvingExperiment
T@"NSDate",R,C,N,V_dateEndedResolvingExperiment
T@"NSDictionary",R,C,N,V_outputVoiceCountForRecognitionLanguage
TB,R,N,V_recognitionLanguageWithMultipleOutputVoicesExists
setEnablementFlow:
setNewUser:
setUserStatusFetchError:
setDateStartedResolvingUserStatus:
setDateEndedResolvingUserStatus:
setExperiment:
setExperimentFetchError:
setDateStartedResolvingExperiment:
setDateEndedResolvingExperiment:
setOutputVoiceCountForRecognitionLanguage:
setRecognitionLanguageWithMultipleOutputVoicesExists:
_conversationsByIdentifier
_registerConversation:withIdentifier:
writeToURL:options:error:
setResourceValue:forKey:error:
removeItemAtURL:error:
initWithContentsOfURL:options:error:
removeConversationWithIdentifier:completionBlock:
propertyListWithData:options:format:error:
saveConversation:withIdentifier:completionBlock:
fetchConversationWithIdentifier:completionBlock:
queue
setQueue:
conversationsByIdentifier
T@"NSMutableDictionary",R,N,G_conversationsByIdentifier,V_conversationsByIdentifier
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
_safeContextDictionary
_serializedBackingStoreIncludingKeys:excludingMandatoryKeys:
initWithBackingStore:
idsDeviceUniqueIdentifier
serializedBackingStore
fromLocalDevice
buildDescription
initWithSerializedBackingStore:fromLocalDevice:contextCollectorSource:
partialSerializedBackingStoreIncludingKeys:excludingMandatoryKeys:
backingStore
allContextKeys
partiallyUpdatedContextForDeviceContextKeys:excludingMandatoryKeys:fromDeviceContext:
deviceContextForDeviceContextKeys:excludingMandatoryKeys:
updatedContextWithSerializedContextByKey:metadata:
isValid
contextCollectorSource
privacyClass
_fromLocalDevice
_deviceInfo
_privacyClass
_serializedBackingStore
_dirtyFlags
_cachedDescription
_cachedDescriptionLock
_contextCollectorSource
TB,R,N,V_fromLocalDevice
T@"NSString",R,N,V_contextCollectorSource
T@"NSUUID",R,N,V_identifier
T@"AFPeerInfo",R,N,V_deviceInfo
Tq,R,N,V_privacyClass
initWithType:deliveryDate:expirationDate:redactedKeyPaths:historyConfiguration:
expirationDate
isExpiredByDate:
redactedKeyPaths
historyConfiguration
_backingStore
_deliveryDate
_expirationDate
_redactedKeyPaths
_historyConfiguration
T@"NSString",R,N,V_type
T@"NSDate",R,N,V_deliveryDate
T@"NSDate",R,N,V_expirationDate
T@"NSArray",R,N,V_redactedKeyPaths
T@"AFDeviceContextHistoryConfiguration",R,N,V_historyConfiguration
alternativeSelectionCount
setAlternativeSelectionCount:
characterModificationCount
setCharacterModificationCount:
characterInsertionCount
setCharacterInsertionCount:
characterSubstitutionCount
setCharacterSubstitutionCount:
characterDeletionCount
setCharacterDeletionCount:
correctedText
setCorrectedText:
_alternativeSelectionCount
_characterModificationCount
_characterInsertionCount
_characterSubstitutionCount
_characterDeletionCount
_correctedText
Tq,N,V_alternativeSelectionCount
Tq,N,V_characterModificationCount
Tq,N,V_characterInsertionCount
Tq,N,V_characterSubstitutionCount
Tq,N,V_characterDeletionCount
T@"NSString",C,N,V_correctedText
initWithVirtualMemorySizeInBytes:numberOfRegions:pageSizeInBytes:residentMemorySizeInBytes:peakResidentMemorySizeInBytes:physicalMemoryFootprintInBytes:
getBytes:range:
setGoodness:
pHash
isAContinuation
isATrump
goodness
isSlowdown
dataWithCapacity:
userConfidence
deviceGroup
deviceClass
tieBreaker
setDeviceID:
setPHash:
setRawAudioGoodnessScore:
setBump:
setUserConfidence:
setDeviceGroup:
setDeviceClass:
setTieBreaker:
setProductType:
setIsMe:
setIsCollectedFromContextCollector:
asAdvertisementData
deviceID
rawAudioGoodnessScore
bump
isMe
isCollectedFromContextCollector
initWithAudioData:
initWithDeviceID:data:
setRawAudioGoodnessScore:withBump:
adjustByMultiplier:adding:
generateRandomConfidence
generateTiebreaker
isInEarTrump
isCarplayTrump
isALateSupressionTrumpFor:
isAnEmergency
isAnEmergencyHandled
isSane
slowdownDelay
hasEqualAdvertismentData:
advertisementData
setAdvertisementData:
advertisementDataIsDirty
setAdvertisementDataIsDirty:
_goodness
_userConfidence
_deviceGroup
_deviceClass
_productType
_tieBreaker
_isMe
_rawAudioGoodnessScore
_bump
_isCollectedFromContextCollector
_advertisementDataIsDirty
_pHash
_deviceID
_advertisementData
TB,N,V_advertisementDataIsDirty
TC,N,V_rawAudioGoodnessScore
TC,N,V_bump
TC,N,V_goodness
T@"NSData",C,N,V_advertisementData
TC,N,V_userConfidence
TS,N,V_pHash
T@"NSUUID",C,N,V_deviceID
TC,N,V_deviceGroup
TC,N,V_deviceClass
TC,N,V_productType
TC,N,V_tieBreaker
TB,N,V_isMe
TC,N,V_isCollectedFromContextCollector
initWithStartDate:duration:
initWithStartDate:endDate:
startDate
intersectsDateInterval:
endDate
initWithEvent:streamUID:dateCreated:speechId:recordId:
initWithEvent:streamUID:dateCreated:speechId:
event
streamUID
dateCreated
speechId
recordId
_event
_streamUID
_dateCreated
_speechId
_recordId
T@"NSString",R,C,N,V_recordId
T@"AFAnalyticsEvent",R,C,N,V_event
T@"NSString",R,C,N,V_streamUID
T@"NSDate",R,C,N,V_dateCreated
T@"NSString",R,C,N,V_speechId
deliveryStream
contextDataType
siriCoreSQLiteRecord_enumerateColumnNamesAndValuesUsingBlock:
af_serviceDeviceContextForKeys:excludeContextExpiredBefore:proximity:
mediaSystemIdentifier
sharedUserIdentifier
initWithIdentifier:assistantIdentifier:mediaSystemIdentifier:mediaRouteIdentifier:sharedUserID:roomName:proximity:serializedContextByKey:metricsContext:
af_serviceDeviceContextForKeys:
initWithOptions:capacity:
_startObservingMemoryPressureWithOptions:
_stopObservingMemoryPressure
initWithOptions:
_addListener:
_removeListener:
_removeAllListeners
_handleMemoryPressureWithFlags:
memoryPressureObserver:didChangeFromCondition:toCondition:
removeAllListeners
getCurrentConditionWithCompletion:
_memoryPressureSource
_memoryPressureFlags
_listeners
setShowUIDuringListening:
setPlayAlertBeforeListening:
_initWithShowUIDuringListening:playAlertBeforeListening:
showUIBeforeListening
beepBeforeListening
delay
showUIDuringListening
playAlertBeforeListening
endpointDelay
_showUIDuringListening
_playAlertBeforeListening
_endpointDelay
TB,N,V_showUIDuringListening
TB,N,V_playAlertBeforeListening
Td,R,N,V_endpointDelay
defaultWorkspace
appTags
isLaunchProhibited
enumerateBundlesOfType:block:
_notifyObservers
_clearState
_startObservingAvailability
_stopObservingAvailability
_notifyToken
_observers
setLabel:
setLoggingAssistantIdentifier:
setSpeechIdentifier:
setHostname:
setPeerAssistantIdentifier:
setPeerLoggingAssistantIdentifier:
setPeerSpeechIdentifier:
setPeerUserAgentString:
setPeerLanguageCode:
setPeerSiriEnabled:
setPeerHostname:
setPredefinedServer:
setAceHost:
setConnectionPolicy:
setConnectionPolicyDate:
setConnectionPolicyFirstFailureDate:
setConnectionPolicyHostname:
setGroup:
setLocaleIdentifier:
label
loggingAssistantIdentifier
speechIdentifier
hostname
peerAssistantIdentifier
peerLoggingAssistantIdentifier
peerSpeechIdentifier
peerUserAgentString
predefinedServer
aceHost
connectionPolicy
connectionPolicyDate
connectionPolicyHostname
connectionPolicyFirstFailureDate
group
lastSyncDates
setLastSyncDates:
isActive
setIsActive:
initWithMessageDictionary:
messageDictionary
peerLanguageCode
peerSiriEnabled
peerHostname
_peerSiriEnabled
_isActive
_label
_loggingAssistantIdentifier
_speechIdentifier
_hostname
_peerAssistantIdentifier
_peerLoggingAssistantIdentifier
_peerSpeechIdentifier
_peerUserAgentString
_peerLanguageCode
_peerHostname
_predefinedServer
_aceHost
_connectionPolicy
_connectionPolicyDate
_connectionPolicyHostname
_lastSyncDates
_localeIdentifier
_connectionPolicyFirstFailureDate
T@"NSString",C,N,V_identifier
T@"NSDictionary",C,N,V_lastSyncDates
T@"NSString",C,N,V_localeIdentifier
TB,N,V_isActive
T@"NSString",C,N,V_label
T@"NSString",C,N,V_assistantIdentifier
T@"NSString",C,N,V_loggingAssistantIdentifier
T@"NSString",C,N,V_speechIdentifier
T@"NSString",C,N,V_hostname
T@"NSString",C,N,V_peerAssistantIdentifier
T@"NSString",C,N,V_peerLoggingAssistantIdentifier
T@"NSString",C,N,V_peerSpeechIdentifier
T@"NSString",C,N,V_peerUserAgentString
T@"NSString",C,N,V_peerLanguageCode
TB,N,V_peerSiriEnabled
T@"NSString",C,N,V_peerHostname
T@"NSString",C,N,V_predefinedServer
T@"NSString",C,N,V_aceHost
T@"NSDictionary",C,N,V_connectionPolicy
T@"NSDate",C,N,V_connectionPolicyDate
T@"NSString",C,N,V_connectionPolicyHostname
T@"NSString",C,N,V_group
T@"NSDate",C,N,V_connectionPolicyFirstFailureDate
initWithLength:
mutableBytes
items
autoDisambiguationDisabled
af_disambiguationIdentifier
af_indexIdentifierForItem:
af_itemForIndexIdentifier:
af_disambiguationInfo
af_setDisambiguationInfo:
af_assistedSelectionItem
af_saveItemSelection:forType:
T@"AFDisambiguationInfo",&,N,Saf_setDisambiguationInfo:
disambiguationLists
disambiguationKey
labelValue
infoForIdentifier:
saveInfo:forIdentifier:
setManagedStoreObject:forKey:
fetchManagedStoreObjectForKey:reply:
setKnowledgeStoreData:forKey:inStoreWithName:completion:
getKnowledgeStoreDataForKey:inStoreWithName:completion:
resetKnowledgeStoreWithName:completion:
_synchronousManagedStoreServiceWithErrorHandler:
_managedStoreService
domainObjectForKey:
setDomainObject:forKey:
dataForKey:inKnowledgeStoreWithName:
setData:forKey:inKnowledgeStoreWithName:
resetKnowledgeStoreWithName:
_managedStoreServiceWithErrorHandler:
createModelWithType:completion:
recordFeedbackOfType:forSpeakableId:
recordRecommendedAction:forSpeakableId:withModelIdentifier:
recordNotificationUsageForSpeakableId:withStartDate:withEndDate:withCompletion:
modelWithIdentifier:didUpdateScore:forSpeakable:
startWithDelegate:
setSpeakable:
recordFeedbackOfType:forSpeakable:
setInterface:forSelector:argumentIndex:ofReply:
alarmIdentifier
_alarmIdentifier
T@"NSString",C,N,V_alarmIdentifier
_setTargetedDeviceContextIdentifier:withAction:payload:
addCoreAnalyticsDeviceTargetedWithContextIdentifier:commandResultDescription:
_nearbyDevicesLoggingID
_nearbyDevicesPayloads
T@"NSString",R,C,N,V_nearbyDevicesLoggingID
T@"NSMutableDictionary",&,N,V_nearbyDevicesPayloads
inputDeviceID
inputAssistantID
initWithRequestID:inputDeviceID:inputAssistantID:
_inputDeviceID
_inputAssistantID
T@"NSString",R,C,N,V_inputDeviceID
T@"NSString",R,C,N,V_inputAssistantID
setInputDeviceID:
setInputAssistantID:
timerURLs
setTimerURLs:
_timerURLs
T@"NSArray",C,N,V_timerURLs
_initializeMyriadAdvertisementContextRecordFromData:
_advertismentPayloadSizeForVersion:
_deviceIDFromBytes:
_getAdvertismentRecordTypeForVersion:data:
_getVoiceTriggerEndTimeForVersion:data:
_getMyriadAdvertisementDataForVersion:data:
_getDeviceIdForVersion:data:
initWithAdvertisementRecordType:voiceTriggerEndTime:advertisementPayload:deviceID:
initWithMyriadAdvertisementContextRecordData:
myriadAdvertisementContextAsData
isSaneForVoiceTriggerEndTime:endtimeDistanceThreshold:
recordForDeviceId:
compareAdvertisementPayload:
advertisementContextVersion
advertisementRecordType
voiceTriggerEndTime
advertisementPayload
advertisementDispatchTime
setAdvertisementDispatchTime:
_advertisementContextVersion
_advertisementRecordType
_voiceTriggerEndTime
_advertisementPayload
_advertisementDispatchTime
TC,R,N,V_advertisementContextVersion
Tq,R,N,V_advertisementRecordType
Td,R,N,V_voiceTriggerEndTime
T@"NSData",R,C,N,V_advertisementPayload
T@"NSUUID",R,C,N,V_deviceID
Td,N,V_advertisementDispatchTime
initWithCallUUID:callProviderIdentifier:callProviderBundleID:callers:handle:isVideo:isCallerIDBlocked:
initWithCallUUID:callProviderIdentifier:callProviderBundleID:callerContactIdentifiers:handle:isVideo:isCallerIDBlocked:
callUUID
callProviderIdentifier
callProviderBundleID
callerContactIdentifiers
handle
isVideo
isCallerIDBlocked
_isVideo
_isCallerIDBlocked
_callUUID
_callProviderIdentifier
_callProviderBundleID
_callerContactIdentifiers
_handle
T@"NSString",R,C,N,V_callUUID
T@"NSString",R,C,N,V_callProviderIdentifier
T@"NSString",R,C,N,V_callProviderBundleID
T@"NSArray",R,C,N,V_callerContactIdentifiers
T@"TUHandle",R,N,V_handle
TB,R,N,V_isVideo
TB,R,N,V_isCallerIDBlocked
setRequestHandler:
_setupRequestListener
initWithActivationEvent:
_dispatchSpeechRequestOptions:
_setupSpeechRequestListener
siriActivationListener:handleIntent:inBackgroundAppWithBundleId:reply:
siriActivationListener:handleIntentForwardingAction:inBackgroundApplicationWithBundleIdentifier:completionHandler:
siriActivationListener:prewarmWithRequestInfo:context:completion:
siriActivationListener:activateWithRequestInfo:context:completion:
siriActivationListener:deactivateForReason:options:context:completion:
siriActivationListener:handleButtonEventFromContext:completion:
siriActivationListener:myriadEventWithRequestInfo:context:completion:
setPrewarmHandler:
setNewRequestHandler:
setDismissalHandler:
setIntentHandler:
setIntentForwardingActionHandler:
setButtonEventHandler:
setActivationHandler:
setNewSpeechRequestHandler:
_siriActivationListener
_prewarmHandler
_requestHandler
_dismissalHandler
_intentHandler
_intentForwardingActionHandler
_speechRequestToken
_speechRequestHandler
_buttonEventHandler
_activationHandler
initAndGetSetterBlock:
waitForValue:
_beginGroup
_startObservingPineBoardSystemState
_endGroup
_stopObservingPineBoardSystemState
pineBoardSystemStateObserver:pineBoardStateDidChangeFrom:to:
defaultObserver
_handlePineBoardStateChange:
pineBoardSystemState
_pineBoardStateGroup
_pineBoardStateGroupDepth
_pineBoardSystemState
_isObserving
Tq,R,N,V_pineBoardSystemState
getLocalDeviceContextWithReply:
beginUpdateLocalDeviceContextWithReply:
endUpdateLocalDeviceContext
donateSerializedContextMapByPrivacyClass:withMetadataMap:forType:pushToRemote:completion:
updateLocalDeviceContext:
_hasInvoked
_defaultValue
_defaultValue1
_defaultValue2
initWithBlock:defaultValue1:defaultValue2:defaultValue3:
invokeWithValue:andValue:andValue:
_defaultValue3
initWithBlock:defaultValueArray:
signatureWithObjCTypes:
numberOfArguments
invokeWithValueArray:
invocationWithMethodSignature:
setArgument:atIndex:
invokeWithTarget:
initWithBlock:defaultValues:
invokeWithValues:
_blockMethodSignature
_defaultValueArray
lastNegativeFeedback
setLastNegativeFeedback:
negativeFeedbackByContact
setNegativeFeedbackByContact:
_lastNegativeFeedback
_negativeFeedbackByContact
T@"NSDate",&,N,V_lastNegativeFeedback
T@"NSDictionary",&,N,V_negativeFeedbackByContact
loadIfNecessary
save
notificationUsageStream
predicateForEventsWithStartInDateRangeFrom:to:
sortDescriptorWithKey:ascending:
timeZone
confidence
fileExistsAtPath:
initWithContentsOfFile:options:error:
initForReadingFromData:error:
finishDecoding
stringByDeletingLastPathComponent
archivedDataWithRootObject:requiringSecureCoding:error:
lastNegativeFeedbackForContact:
setLastNegativeFeedbackForContact:
fetchNotificationUsageForSpeakableId:withStartDate:withEndDate:withHandler:
interactionDetectedForSpeakableId:
_feedback
_knowledgeStore
_usageEventsBySpeakableId
currentElectionAdvertisementId
currentElectionAdvertisementData
electionAdvertisementDataByIds
initWithGeneration:sessionId:currentElectionAdvertisementId:currentElectionAdvertisementData:electionAdvertisementDataByIds:
_currentElectionAdvertisementId
_currentElectionAdvertisementData
_electionAdvertisementDataByIds
T@"NSUUID",R,C,N,V_sessionId
T@"NSUUID",R,C,N,V_currentElectionAdvertisementId
T@"NSData",R,C,N,V_currentElectionAdvertisementData
T@"NSDictionary",R,C,N,V_electionAdvertisementDataByIds
setCurrentElectionAdvertisementId:
setCurrentElectionAdvertisementData:
setElectionAdvertisementDataByIds:
initWithOriginalCommandId:category:eventInfo:duration:
originalCommandId
setOriginalCommandId:
categoryString
setCategory:
eventInfo
setEventInformation:
_roundDouble:toSignificantDigits:
setTimings:
initWithOriginalCommandId:category:duration:
aceMetrics
category
setEventInfo:
_originalCommandId
_category
_eventInfo
T@"NSString",C,N,V_originalCommandId
Tq,N,V_category
T@"NSDictionary",C,N,V_eventInfo
T@"NSNumber",&,N,V_duration
initWithUserNotification:sourceAppId:platform:
requestCanBeHandled
hasEligibleSetup
supportedByApplicationWithBundleID:
canBeHandled
supportedOnPlatform
supportedForApplicationWithBundleId:
performRequestWithCompletion:
initWithUserNotification:sourceAppId:
deactivateRequestForReason:completion:
withdrawalRequestWithCompletion:
_notification
_sourceAppId
_platform
_initWithPlatform:
_classForPlatform:
supportedAnnouncementTypesForBundleId:onPlatform:
notifyObserversOfCurrentEligibleSetupState:onPlatform:
fetchEligibleSetupStateWithCompletion:
fetchRequestCanBeHandledStateWithCompletion:
hasEligibleSetupChanged:onPlatform:
hasEligibleSetupChanged:
requestCanBeHandledChanged:onPlatform:
requestCanBeHandledChanged:
notifyObserversOfCurrentRequestCanBeHandledState:onPlatform:
_capabilityProvider
initWithNotifications:sourceAppId:
initWithIsDeviceOwnedByCurrentUser:assistantIdentifier:sharedUserIdentifier:idsIdentifier:idsDeviceUniqueIdentifier:rapportEffectiveIdentifier:homeKitAccessoryIdentifier:mediaSystemIdentifier:mediaRouteIdentifier:isCommunalDevice:roomName:name:productType:buildVersion:userInterfaceIdiom:aceVersion:
initWithIsDeviceOwnedByCurrentUser:assistantIdentifier:idsIdentifier:idsDeviceUniqueIdentifier:sharedUserID:rapportEffectiveIdentifier:homeKitAccessoryIdentifier:mediaSystemIdentifier:mediaRouteIdentifier:isCommunalDevice:roomName:name:productType:buildVersion:userInterfaceIdiom:aceVersion:
sharedUserID
initWithSettingsConnection:
_synchronousSettingsServiceWithErrorHandler:
_settingsServiceWithErrorHandler:
fetchAccountsSynchronously:completion:
_setVoices:
getAvailableVoicesForRecognitionLanguage:includeAssetInfo:completion:
getAvailableVoicesForLanguage:includeAssetInfo:completion:
_voices
_filterVoices:forLanguage:
_updateVoicesIncludingAssetInfo:completion:
startUIRequestWithText:
setEndpointerOperationMode:
setEndpointerStopRecordingMode:
newTurnBasedContextWithPreviousTurnID:
startUIRequestWithInfo:
setXPCConnectionManagementQueue:
fetchSupportedMultiUserLanguageCodes:
fetchAccountsWithCompletion:
accounts
saveAccount:setActive:
setAssistantLoggingEnabled:
killDaemon
shutdownSessionIfIdle
currectNWActivityId:
getAvailableVoicesForRecognitionLanguage:completion:
getAvailableVoicesForSynthesisLanguage:completion:
startUIRequest:
getHorsemanSupplementalLanguageDictionary:
setHorsemanSupplementalLanguageDictionary:completion:
getSiriOutputVolumeWithCompletion:
setSiriOutputVolume:completion:
stopObservingWirelessSplitterSession
removeMultiUserWithSharedUserID:completion:
setSiriGradingEnabled:completion:
siriGradingIsEnabled:
shouldSuppressSiriDataSharingOptInAlert:
deleteSiriHistoryWithCompletion:
getActiveASRLanguagesWithCompletion:
_voicesQueue
_selectedVoice
_syncDataWithAnchorKeys:forceReset:reason:completion:
_getSharedCompanionInfo:
_updateMultiUserInfoForUser:score:companionId:companionSpeechId:idsIdentifier:aceHost:reset:completion:
_getSharedUserID:
_handleCommand:completion:
_setSyncToken:forAceHost:completion:
_readSyncTokenForAceHost:completion:
_tellDelegatePartialVerificationResult:
_tellDelegateServerVerificationReport:
T@"<AFSettingsDelegate>",W,N,S_setDelegate:
peerInfo
systemInfo
initWithPeerInfo:systemInfo:
_peerInfo
_systemInfo
T@"AFPeerInfo",R,C,N,V_peerInfo
T@"AFAudioSessionCoordinationSystemInfo",R,C,N,V_systemInfo
setPeerInfo:
setSystemInfo:
setAllowsCellularAccess:
setDiscretionary:
sendDictationRequestStartedEventWithBundleIdentifier:context:userInfo:
sendSiriRequestStartedEventWithBundleIdentifier:context:userInfo:
sendSendMessageSentEventWithBundleIdentifier:context:userInfo:
doesNotRecognizeSelector:
sampledSubDirectoryPath
sampledLibraryDirectoryPath
component
sampledCachesSubDirectoryPath
deleteItemAtFilePath:
sampledPlistFileName
timezone
sampledSubDirectoryNameFormat
sampledCurrentSamplingDateKey
createSamplingDirectory
deleteAllSamplingData
samplingDateAsString
overrideOption
initWithOverrideOption:reason:
_overrideOption
Tq,R,N,V_overrideOption
setOverrideOption:
initWithConnection:
_waitUntilListeningForContext:timeoutInterval:completion:
actionType
_clientStateObserver
_clientStateTransitionHandlersByTimestamp
testRequestWithText:speechRequestOptions:testOptions:
testRequestWithStartLocalRequest:
setLatitude:
setLongitude:
setUnlocalizedName:
setCountryName:
setUnlocalizedCountryName:
_initWithName:unlocalizedName:countryName:unlocalizedCountryName:timeZone:latitude:longitude:alCityID:
alCityValue
_unlocalizedName
_countryName
_unlocalizedCountryName
_timeZone
_latitude
_longitude
_alCityID
beginObserving
speakingStateDidChange:forIdentifiers:
previousItem
setNextItem:
setPreviousItem:
insertBeforeItem:
_object
_previousItem
_nextItem
T@,R,N,V_object
T@"AFLinkedListItem",&,N,V_previousItem
T@"AFLinkedListItem",&,N,V_nextItem
_getRequestType:
getVersion:
getSessionId:
_createEndAnalyticContexFromIntermediateContext:forVersion:sessionId:
_getCDASchemaCDATriggerType:
getCDASessionId:
logCDADeviceStateActivityStartedOrChanged:withTrigger:withCdaId:withTimestamp:
logCDADeviceStateActivityEnded:withCdaId:withTimestamp:
logCDAElectionAdvertisingStarting:withDelay:withInterval:withCdaId:withTimestamp:
logCDAElectionAdvertisingStarted:withCdaId:withTimestamp:
logCDAElectionTimerEnded:withCdaId:withTimestamp:
logCDAElectionAdvertisingEnded:withCdaId:withTimestamp:
_decisionMadeContext:instrumentation:completion:
numberWithUnsignedChar:
setGoodnessScore:
logCDAElectionDecisionMade:withDecision:withPreviousDecision:timeSincePreviousDecision:withWinningDevice:withThisDevice:withParticipants:withRawScore:withBoost:withCdaId:withTimestamp:
_submitMyriadMetrics:toStream:instrumentation:completion:
isMyriadMetricsMessage:
submitAccessoryMyriadMetricsToAnalyticsStream:payload:instrumentation:completion:
submitMyriadMetricsToAnalyticsStream:context:forEvent:contextNoCopy:
initWithSettingType:valueBeforeUpdate:valueAfterUpdate:
settingType
valueBeforeUpdate
valueAfterUpdate
_settingType
_valueBeforeUpdate
_valueAfterUpdate
initWithIncomingCall:
_call
_initWithOriginatingAceID:identifier:turnId:
_descriptionWithProperties:
requestName
_af_stringByRemovingPrefixWithLength:
_af_stringByRemovingSuffix:
_turnId
_setOriginatingAceID:
_setTurnId:
_refId
_setRefId:
__refId
T@"NSString",C,N,S_setRefId:,V__refId
T@"NSString",C,N,S_setOriginatingAceID:,V_originatingAceID
T@"NSUUID",C,N,S_setTurnId:,V_turnId
hasSuffix:
sharedNotifier
builtInMicVoiceTriggerEvent:hostTime:
setActionType:
notifyActivationEvent:completion:
remoteMicVoiceTriggerEvent:activationInfo:hostTime:
remoteMicVADEvent:vadScore:hostTime:
jarvisVoiceTriggerEvent:activationInfo:hostTime:
encodeFloat:forKey:
decodeFloatForKey:
initWithResults:score:threshold:
score
threshold
_score
_threshold
Tf,R,N,V_score
Tf,R,N,V_threshold
preciseLocationEnabled
accessState
latitude
longitude
altitude
direction
speed
verticalAccuracy
horizontalAccuracy
initWithLatitude:longitude:altitude:direction:speed:verticalAccuracy:horizontalAccuracy:preciseLocationEnabled:accessState:
_preciseLocationEnabled
_altitude
_direction
_speed
_verticalAccuracy
_horizontalAccuracy
_accessState
T@"NSNumber",R,C,N,V_latitude
T@"NSNumber",R,C,N,V_longitude
T@"NSNumber",R,C,N,V_altitude
T@"NSNumber",R,C,N,V_direction
T@"NSNumber",R,C,N,V_speed
T@"NSNumber",R,C,N,V_verticalAccuracy
T@"NSNumber",R,C,N,V_horizontalAccuracy
TB,R,N,V_preciseLocationEnabled
Tq,R,N,V_accessState
setAltitude:
setDirection:
setSpeed:
setVerticalAccuracy:
setHorizontalAccuracy:
setPreciseLocationEnabled:
setAccessState:
isRemoteDevice
route
initWithRoute:isRemoteDevice:deviceUID:
_isRemoteDevice
_route
T@"NSString",R,C,N,V_route
TB,R,N,V_isRemoteDevice
setRoute:
setIsRemoteDevice:
isForCarDND
isVoiceTriggerRequest
isConnectedToCarPlay
isRequestMadeWithPhysicalDeviceInteraction
userTypedInSiri
deviceRaised
faceDetected
touchScreenDetected
buttonPressDetected
flatDevicePosture
deviceOrientation
isInWorkout
isBacklightOn
isInWaterLock
isInSleepLock
isInTheaterMode
isOnWrist
modeOverrideValue
initWithIsEyesFree:isForCarDND:isVoiceTriggerRequest:isConnectedToCarPlay:isRequestMadeWithPhysicalDeviceInteraction:userTypedInSiri:modeOverrideValue:deviceRaised:faceDetected:touchScreenDetected:buttonPressDetected:flatDevicePosture:deviceOrientation:isInWorkout:isBacklightOn:isInWaterLock:isInSleepLock:isInTheaterMode:isOnWrist:
_isForCarDND
_isVoiceTriggerRequest
_isConnectedToCarPlay
_isRequestMadeWithPhysicalDeviceInteraction
_userTypedInSiri
_modeOverrideValue
_deviceRaised
_faceDetected
_touchScreenDetected
_buttonPressDetected
_flatDevicePosture
_deviceOrientation
_isInWorkout
_isBacklightOn
_isInWaterLock
_isInSleepLock
_isInTheaterMode
_isOnWrist
TB,R,N,V_isEyesFree
TB,R,N,V_isForCarDND
TB,R,N,V_isVoiceTriggerRequest
TB,R,N,V_isConnectedToCarPlay
TB,R,N,V_isRequestMadeWithPhysicalDeviceInteraction
TB,R,N,V_userTypedInSiri
T@"NSString",R,C,N,V_modeOverrideValue
Tq,R,N,V_deviceRaised
Tq,R,N,V_faceDetected
Tq,R,N,V_touchScreenDetected
Tq,R,N,V_buttonPressDetected
Tq,R,N,V_flatDevicePosture
Tq,R,N,V_deviceOrientation
Tq,R,N,V_isInWorkout
Tq,R,N,V_isBacklightOn
Tq,R,N,V_isInWaterLock
Tq,R,N,V_isInSleepLock
Tq,R,N,V_isInTheaterMode
Tq,R,N,V_isOnWrist
setIsForCarDND:
setIsVoiceTriggerRequest:
setIsConnectedToCarPlay:
setIsRequestMadeWithPhysicalDeviceInteraction:
setUserTypedInSiri:
setModeOverrideValue:
setDeviceRaised:
setFaceDetected:
setTouchScreenDetected:
setButtonPressDetected:
setFlatDevicePosture:
setDeviceOrientation:
setIsInWorkout:
setIsBacklightOn:
setIsInWaterLock:
setIsInSleepLock:
setIsInTheaterMode:
setIsOnWrist:
initWithGeneration:date:alarmsByID:notifiedFiringAlarmIDs:
_alarmsByID
_notifiedFiringAlarmIDs
T@"NSDictionary",R,C,N,V_alarmsByID
T@"NSOrderedSet",R,C,N,V_notifiedFiringAlarmIDs
setAlarmsByID:
setNotifiedFiringAlarmIDs:
serializedContextByKey
_mediaSystemIdentifier
_sharedUserID
_serializedContextByKey
_metricsContext
T@"NSString",R,C,N,V_mediaSystemIdentifier
T@"NSString",R,C,N,V_sharedUserID
Tq,R,N,V_proximity
T@"NSDictionary",R,C,N,V_serializedContextByKey
T@"NSDictionary",R,C,N,V_metricsContext
setMediaSystemIdentifier:
setSharedUserID:
setSerializedContextByKey:
setMetricsContext:
initWithName:queue:
stringWithCString:encoding:
setActivationDeviceIdentifier:
activationDeviceIdentifier
setServerCommandId:
setUseAutomaticEndpointing:
setRecordingAlertPolicy:
setDisableInputAudioPowerUpdate:
setDisableOutputAudioPowerUpdate:
setUseStreamingDictation:
setHomeButtonDownEventTime:
setHomeButtonDownEventMachAbsoluteTime:
setActivationEventMachAbsoluteTime:
setStopRecordingHostTime:
setIsInitialBringUp:
setHomeButtonUpFromBeep:
setAcousticIdEnabled:
setAudioFileType:
setAudioFileHandle:
setMyriadContext:
setRecordDeviceIdentifier:
setSpeechRecordingEventListeningEndpoint:
setPendCallbacksUntilAfterContinuation:
setUseBorealisBuffer:
setAudioFileURL:
setHasPlayedStartAlert:
setBargeInOptions:
setSpeechSynthesisRecord:
setReloadSmartSiriVolume:
setSkipPersonalizedASR:
setClientAnalyticsContext:
setStartContext:
setStopContext:
setLocation:
setLocationStatus:
setIsOnPhoneCall:
setIsMediaPlaying:
setMediaPlaybackVolume:
setApplicationBundleIdentifier:
setPresentationMode:
setPreheatLanguage:
setPreheatTestModelPath:
setDictationVoiceTriggerAbsStartSampleId:
setAnnouncementPlatform:
setIsTest:
initForTestWithTestRequestOptions:
isRaiseToSpeak
setBtDeviceAddress:
btDeviceAddress
useAutomaticEndpointing
endpointerOperationMode
endpointerStopRecordingMode
recordingAlertPolicy
disableInputAudioPowerUpdate
disableOutputAudioPowerUpdate
useStreamingDictation
homeButtonDownEventTime
homeButtonDownEventMachAbsoluteTime
isInitialBringUp
homeButtonUpFromBeep
acousticIdEnabled
audioFileHandle
myriadContext
recordDeviceIdentifier
speechRecordingEventListeningEndpoint
usePrelisteningMode
setUsePrelisteningMode:
useBorealisBuffer
reloadSmartSiriVolume
skipPersonalizedASR
audioFileURL
hasPlayedStartAlert
bargeInOptions
speechSynthesisRecord
location
locationStatus
clientAnalyticsContext
startContext
stopContext
isOnPhoneCall
skipGeneratingSpeechPacket
setSkipGeneratingSpeechPacket:
isMediaPlaying
mediaPlaybackVolume
presentationMode
preheatLanguage
preheatTestModelPath
dictationVoiceTriggerAbsStartSampleId
applicationBundleIdentifier
announcementPlatform
isTest
_useAutomaticEndpointing
_disableInputAudioPowerUpdate
_disableOutputAudioPowerUpdate
_useStreamingDictation
_isInitialBringUp
_acousticIdEnabled
_usePrelisteningMode
_pendCallbacksUntilAfterContinuation
_useBorealisBuffer
_reloadSmartSiriVolume
_skipPersonalizedASR
_suppressStartAlert
_suppressStopAlert
_hasPlayedStartAlert
_isOnPhoneCall
_skipGeneratingSpeechPacket
_isMediaPlaying
_isTest
_mediaPlaybackVolume
_activationDeviceIdentifier
_serverCommandId
_endpointerOperationMode
_endpointerStopRecordingMode
_recordingAlertPolicy
_homeButtonDownEventTime
_homeButtonDownEventMachAbsoluteTime
_activationEventTime
_activationEventMachAbsoluteTime
_expectedActivationEventTime
_stopRecordingHostTime
_homeButtonUpFromBeep
_audioFileType
_audioFileHandle
_myriadContext
_recordDeviceIdentifier
_speechRecordingEventListeningEndpoint
_audioFileURL
_bargeInOptions
_speechSynthesisRecord
_location
_locationStatus
_clientAnalyticsContext
_startContext
_stopContext
_presentationMode
_preheatLanguage
_preheatTestModelPath
_dictationVoiceTriggerAbsStartSampleId
_applicationBundleIdentifier
_announcementPlatform
T@"NSString",C,N,V_activationDeviceIdentifier
TB,N,V_isEyesFree
T@"NSString",C,N,V_serverCommandId
TB,N,V_useAutomaticEndpointing
Tq,N,V_endpointerOperationMode
Tq,N,V_endpointerStopRecordingMode
T@"AFSpeechRecordingAlertPolicy",C,N,V_recordingAlertPolicy
TB,N,V_disableInputAudioPowerUpdate
TB,N,V_disableOutputAudioPowerUpdate
TB,N,V_useStreamingDictation
Td,N,V_homeButtonDownEventTime
TQ,N,V_homeButtonDownEventMachAbsoluteTime
Td,N,V_activationEventTime
TQ,N,V_activationEventMachAbsoluteTime
Td,N,V_expectedActivationEventTime
TQ,N,V_stopRecordingHostTime
TB,N,V_isInitialBringUp
T@"NSNumber",C,N,V_homeButtonUpFromBeep
TB,N,V_acousticIdEnabled
Tq,N,V_audioFileType
T@"NSFileHandle",&,N,V_audioFileHandle
T@"AFMyriadContext",C,N,V_myriadContext
T@"NSString",C,N,V_recordDeviceIdentifier
T@"NSXPCListenerEndpoint",&,N,V_speechRecordingEventListeningEndpoint
TB,N,V_usePrelisteningMode
TB,N,V_pendCallbacksUntilAfterContinuation
TB,N,V_useBorealisBuffer
TB,N,V_reloadSmartSiriVolume
TB,N,V_skipPersonalizedASR
T@"NSURL",C,N,V_audioFileURL
TB,N,V_suppressStartAlert
TB,N,V_suppressStopAlert
TB,N,V_hasPlayedStartAlert
TQ,N,V_bargeInOptions
T@"AFSpeechSynthesisRecord",C,N,V_speechSynthesisRecord
T@"CLLocation",C,N,V_location
T@"NSString",C,N,V_locationStatus
T@"NSString",C,N
T@"NSDictionary",C,N,V_clientAnalyticsContext
T@"NSDictionary",C,N,V_startContext
T@"NSDictionary",C,N,V_stopContext
TB,N,V_isOnPhoneCall
TB,N,V_skipGeneratingSpeechPacket
TB,N,V_isMediaPlaying
Tf,N,V_mediaPlaybackVolume
Tq,N,V_presentationMode
T@"NSString",C,N,V_preheatLanguage
T@"NSURL",C,N,V_preheatTestModelPath
TQ,N,V_dictationVoiceTriggerAbsStartSampleId
T@"NSString",C,N,V_applicationBundleIdentifier
Tq,N,V_announcementPlatform
TB,N,V_isTest
T@"AFSpeechTestRequestOptions",C,N,V_testRequestOptions
observeWithCompletion:
flushWithCompletion:
classIdentifiers
setObject:forKeyedSubscript:
registerClassIdentifier:forDomain:inGroup:
supportsClassIdentifier:forDomainKey:groupIdentifier:
factoryClass
setFactoryClass:
factoryInstance
setFactoryInstance:
setClassIdentifiers:
_factoryClass
_factoryInstance
_classIdentifiers
T#,&,N,V_factoryClass
T@,&,N,V_factoryInstance
T@"NSMutableDictionary",&,N,V_classIdentifiers
initWithPath:domainKeys:factoryInitializationBlock:
_loadBundlesIfNeeded
initWithPath:
_registerBundle:
principalClass
infoDictionary
pluginManagerForPath:domainKeys:factoryInitializationBlock:
enumerateFactoryInstancesForDomainKey:groupIdentifier:classIdentifier:usingBlock:
preloadBundles
_path
_domainKeys
_factoryInitializationBlock
_domainKeyDictionary
_hasLoadedBundles
didEnd
lastSyncDate
endingGroupIdentifier
initWithLastSyncDate:didEnd:endingGroupIdentifier:version:
_didEnd
_lastSyncDate
_endingGroupIdentifier
T@"NSDate",R,C,N,V_lastSyncDate
TB,R,N,V_didEnd
T@"NSString",R,C,N,V_endingGroupIdentifier
setLastSyncDate:
setDidEnd:
setEndingGroupIdentifier:
setTurnContext:
setEvent:
mergeFrom:
hasTurnContext
hasEvent
readFrom:
writeTo:
copyTo:
turnContext
_turnContext
T@"SISchemaClientTurnContext",&,N,V_turnContext
T@"SISchemaClientAnyEvent",&,N,V_event
initWithBytes:length:encoding:
unarchivedObjectOfClasses:fromData:error:
unarchivedObjectOfClass:fromData:error:
archivedDataWithRootObject:
T@"NSData",R,C,N,V_context
_initWithRequest:context:
initWithRouteDescription:
_initializeInternalState
_getRouteCapabilities
setBtAddress:
availableAnnouncementRequestTypes
setAvailableAnnouncementRequestTypes:
avscRouteDescription
setAvscRouteDescription:
announcePlatformForRoute
setAnnouncePlatformForRoute:
_btAddress
_availableAnnouncementRequestTypes
_avscRouteDescription
_announcePlatformForRoute
_isRouteCurrentlyPicked
_isDoAPCapable
_isHeadsetInEar
_inEarDetectSupportedSpecified
_headsetSupportsIED
_inEarDetectEnabledSpecified
_inEarDetectEnabled
_isW2Headset
_isTipiRoute
_isOtherDeviceConnected
_isInTriangleMode
_shouldTakeRouteFromOtherConnectedDevice
_shouldDeferToOtherConnectedDevice
_avAudioRouteName
T@"NSString",&,N,V_productID
T@"NSString",&,N,V_btAddress
TQ,N,V_availableAnnouncementRequestTypes
T@"NSDictionary",&,N,V_avscRouteDescription
Tq,N,V_announcePlatformForRoute
timersByID
notifiedFiringTimerIDs
initWithGeneration:date:timersByID:notifiedFiringTimerIDs:
_timersByID
_notifiedFiringTimerIDs
T@"NSDictionary",R,C,N,V_timersByID
T@"NSOrderedSet",R,C,N,V_notifiedFiringTimerIDs
setTimersByID:
setNotifiedFiringTimerIDs:
initWithExperimentsByConfigurationIdentifier:
_experimentsByConfigurationIdentifier
T@"NSDictionary",R,C,N,V_experimentsByConfigurationIdentifier
setExperimentsByConfigurationIdentifier:
_af_URLWithMessageIdentifier:
attachmentURL
setAttachments:
sendDate
setDateSent:
bodyText
setMessage:
isOutbound
subjectText
setSubject:
chatIdentifier
groupName
setGroupName:
groupNameId
setGroupNameId:
senderAddress
setMsgSender:
recipientAddresses
effect
setEffect:
setOutbound:
setSenderAddress:
senderInternalGUID
_setSenderInternalGUID:
setRecipientAddresses:
setSubjectText:
setBodyText:
setAttachmentURL:
setSendDate:
_outbound
_senderAddress
_senderInternalGUID
_recipientAddresses
_groupName
_groupNameId
_subjectText
_bodyText
_effect
_attachmentURL
_sendDate
_chatIdentifier
URLPathAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
URLWithString:
scheme
resourceSpecifier
stringByRemovingPercentEncoding
_af_messageIdentifierValue
attachments
dateSent
outgoing
subject
msgSender
msgRecipients
af_messageValue
initWithVoiceTriggerEnabled:
voiceTriggerEnabled
_voiceTriggerEnabled
Tq,R,N,V_voiceTriggerEnabled
initWithState:lastPlayedAnnouncement:
_lastPlayedAnnouncement
TQ,R,N,V_state
T@"AFHomeAnnouncement",R,C,N,V_lastPlayedAnnouncement
setLastPlayedAnnouncement:
_machServiceNameForAppTaskServiceWithBundleIdentifier:
setService:
valueForEntitlement:
af_siriTaskDeliveringInterface
appTaskService
_listener
siriTaskService:handleSiriTask:
service
_service
T@"AFSiriTaskService",W,N,V_service
T@"<AFSiriTaskServiceDelegate>",W,N,V_delegate
weakToWeakObjectsMapTable
_handleFailureOfRequest:error:atTime:
setOutcomes:
taskmaster:didReceivePunchoutOutcome:
handleSiriTaskUsageResult:fromRequest:
initWithTaskDeliverer:
_executorForRequest
T@"<AFSiriTaskmasterDelegate>",W,N,V_delegate
setEnabled:
daysOfWeek
setDaysOfWeek:
hourOfDay
setHourOfDay:
minuteOfHour
setMinuteOfHour:
isSleepAlarm
setSleepAlarm:
isOverrideAlarm
setOverrideAlarm:
bedtimeHour
setBedtimeHour:
bedtimeMinute
setBedtimeMinute:
_enabled
_daysOfWeek
_hourOfDay
_minuteOfHour
_sleepAlarm
_overrideAlarm
_bedtimeHour
_bedtimeMinute
enabled
TB,N,GisEnabled,V_enabled
Tq,N,V_daysOfWeek
Tq,N,V_hourOfDay
Tq,N,V_minuteOfHour
sleepAlarm
TB,N,GisSleepAlarm,V_sleepAlarm
overrideAlarm
TB,N,GisOverrideAlarm,V_overrideAlarm
Tq,N,V_bedtimeHour
Tq,N,V_bedtimeMinute
_propertyListWithTreeNode:itemPropertyListCreation:
_treeNodeWithPropertyList:error:itemCreation:
_tearDown
_startObservingNotificationWithRequestIdentifier:
_removeObserverForNotificationRequestIdentifier:
_speakingStateDidChange:forIdentifiers:
_currentConnection
notificationAnnouncementObserver:announcementSpeakingStateDidUpdate:forNotificationRequestIdentifiers:
connectionInvalidated
connectionInterrupted
_notifyObserverOfFailureForAllObservingNotifications
initWithQueue:delegate:
startObservingNotificationWithRequestIdentifier:
stopObservingNotificationWithRequestIdentifier:
cleanUpConnection
_observingNotifications
callState
onSpeaker
initWithCallState:onSpeaker:
_onSpeaker
_callState
TQ,R,N,V_callState
TB,R,N,V_onSpeaker
setCallState:
setOnSpeaker:
_store
base64EncodedStringWithOptions:
_initWithMessage:
createResponseWithMessageIdentifier:
resultType
addressBookID
setAddressBookID:
addressLabel
setAddressLabel:
contactName
setContactName:
geoResult
setGeoResult:
setResultType:
_addressBookID
_addressLabel
_contactName
_geoResult
_resultType
T@"NSURL",C,N,V_addressBookID
T@"NSString",C,N,V_addressLabel
T@"NSString",C,N,V_contactName
T@"NSData",C,N,V_geoResult
Tq,N,V_resultType
virtualMemorySizeInBytes
numberOfRegions
pageSizeInBytes
residentMemorySizeInBytes
peakResidentMemorySizeInBytes
physicalMemoryFootprintInBytes
_numberOfRegions
_pageSizeInBytes
_virtualMemorySizeInBytes
_residentMemorySizeInBytes
_peakResidentMemorySizeInBytes
_physicalMemoryFootprintInBytes
TQ,R,N,V_virtualMemorySizeInBytes
Ti,R,N,V_numberOfRegions
Ti,R,N,V_pageSizeInBytes
TQ,R,N,V_residentMemorySizeInBytes
TQ,R,N,V_peakResidentMemorySizeInBytes
TQ,R,N,V_physicalMemoryFootprintInBytes
setVirtualMemorySizeInBytes:
setNumberOfRegions:
setPageSizeInBytes:
setResidentMemorySizeInBytes:
setPeakResidentMemorySizeInBytes:
setPhysicalMemoryFootprintInBytes:
itemURL
T@"NSURL",R,N
T@"NSDate",R,C,N
initWithTimestamp:source:event:options:deviceID:userInfo:
Tq,R,N,V_source
Tq,R,N,V_event
T@"NSString",R,C,N,V_deviceID
mediaType
isCommunalDevice
sleepState
logEventWithType:machAbsoluteTime:context:contextNoCopy:
logEventWithType:machAbsoluteTime:contextProvider:contextProvidingQueue:
logEventWithType:machAbsoluteTime:contextResolver:
logInstrumentation:machAbsoluteTime:turnContext:
setTurnID:
setEventMetadata:
eventMetadata
setEventType:
_service:
_stageEvent:
_stageEvents:
logEventWithType:contextProvider:contextProvidingQueue:
logEventWithType:contextResolver:
logInstrumentation:turnContext:
logInstrumentationOfType:turnIdentifier:
logEvents:
dataWithJSONObject:options:error:
initWithDeliveryStream:type:timestamp:contextDataType:contextData:
overrideContext
setOverrideContext:
overriddenAdjustedScore
setOverriddenAdjustedScore:
_overrideContext
_overriddenAdjustedScore
TB,N,V_overrideContext
TC,N,V_overriddenAdjustedScore
setOverridingContext:
getOverridingContext
mediaPlaybackInterruptedTime
setMediaPlaybackInterruptedTime:
_overriddenContext
_mediaPlaybackInterruptedTime
Td,N,V_mediaPlaybackInterruptedTime
initWithDeviceInstanceContext:preferences:queue:instrumentation:
_fetchDevicePlatformBiasIfRequired
updateBoost:value:
getRecentBump:ignoreAdjustedBoost:
_updatePlatformBias:
getPlatformBias
bumpGoodnessScore:lastActivationTime:mediaPlaybackInterruptedTime:ignoreAdjustedBoost:
initWithDeviceInstanceContext:queue:
initWithDeviceInstanceContext:preferences:queue:
getMyriadAdjustedBoostForGoodnessScoreContext:
evaluateForAudioAccessory
lastActivationTime
setLastActivationTime:
_scoreEvaluationLock
_myriadPlatformBias
_deviceInstanceContext
_platformBiasAcquisitionState
_pref
_myriadInstrumentation
_evaluateForAudioAccessory
_lastActivationTime
TB,R,N,V_evaluateForAudioAccessory
Td,N,V_lastActivationTime
_startWithDelegate:
_stop
_prewarmWithRequestInfo:context:completion:
_activateWithRequestInfo:context:completion:
_deactivateForReason:options:context:completion:
_deliverButtonEventFromContext:completion:
_myriadEventWithRequestInfo:context:completion:
suspend
_xpcListener
initWithBundleIdentifier:allowPlaceholder:error:
appInfoWithApplicationRecord:
supportedIntents
_supportsAnnouncementType:forSupportedIntents:forBundleId:onPlatform:
eligibleAnnouncementRequestTypesChanged:onPlatform:
availableAnnouncementRequestTypesChanged:onPlatform:
_requiredBundleIDsForNotificationAnnouncementType:
notificationAnnouncementTypeForNotificationFromApp:withIntentIDs:onPlatform:
initWithPlatform:
playsSound
logExperimentExposureForTapToSiriBehavior
experimentForSiriVOXTapToSiriBehavior
T@"AFExperiment<AFExperimentForSiriVOXTapToSiriBehavior>",R,N
_updateStateWithNotifyState:
_notifyObserver
acknowledgeRequestKey
requestTypeKey
messageKey
_copyRawBytesFromSource:toDest:length:
sessionIdKey
_initializeMessageObj:
emergencyHandledKey
electionDecisionKey
_initializeMessageObjFromDictionary:
myriadRequestTypeAsString:
protocolName
audioDataKey
deviceInfoKey
isMyriadRequestMessage:
initWithRequestType:session:voiceTriggerEndTime:audioHash:goodnessScore:userConfidenceScore:tieBreaker:deviceClass:deviceGroup:productType:electionDecision:emergencyHandled:ack:accessoryId:
initPreheatMessageWithSessionId:accessoryId:
initElectionDecisionMessageWithSessionId:decision:accessoryId:
initResetMessageWithSessionId:accessoryId:
initWithAccessoryMessage:accessoryId:
initWithAccessoryMessageAsDictionary:accessoryId:
messageAsData
requestType
session
audioHash
goodnessScore
userConfidenceScore
electionWon
isEmergencyHandled
isAcknowledgement
accessoryId
usesSerializedProtocol
_goodnessScore
_userConfidenceScore
_electionDecision
_emergencyHandled
_ack
_isSane
_serializedProtocol
_audioHash
_requestType
_session
_accessoryId
TC,R,N,V_version
TQ,R,N,V_requestType
TQ,R,N,V_session
TS,R,N,V_audioHash
TC,R,N,V_goodnessScore
TC,R,N,V_userConfidenceScore
TC,R,N,V_tieBreaker
TC,R,N,V_deviceClass
TC,R,N,V_deviceGroup
TC,R,N,V_productType
electionDecision
TC,R,N,GelectionWon,V_electionDecision
emergencyHandled
TC,R,N,GisEmergencyHandled,V_emergencyHandled
TC,R,N,GisAcknowledgement,V_ack
T@"NSUUID",R,N,V_accessoryId
TB,R,N,V_isSane
serializedProtocol
TB,R,N,GusesSerializedProtocol,V_serializedProtocol
_suggestionsFilePath
arrayWithContentsOfFile:
suggestionsDidChange:
writeToFile:atomically:
initWithLanguageCode:delegate:
getSuggestedUtterancesWithCompletion:
setSuggestedUtterances:
_suggestedUtterances
T@"<AFUtteranceSuggestionsDelegate>",R,W,N,V_delegate
propagationEvent
propagationEventReason
associatedChangeLogEventIdentifier
initWithDate:accessoryIdentifier:propagationEvent:propagationEventReason:associatedChangeLogEventIdentifier:
_accessoryIdentifier
_propagationEvent
_propagationEventReason
_associatedChangeLogEventIdentifier
T@"NSString",R,C,N,V_accessoryIdentifier
Tq,R,N,V_propagationEvent
T@"NSString",R,C,N,V_propagationEventReason
T@"NSString",R,C,N,V_associatedChangeLogEventIdentifier
setAccessoryIdentifier:
setPropagationEvent:
setPropagationEventReason:
setAssociatedChangeLogEventIdentifier:
initiatorAddress
setInitiatorAddress:
recipientAddress
setRecipientAddress:
_initiatorAddress
_recipientAddress
_createSchemaClientEvent:
setTrigger:
setDeviceElectionStateContext:
emitMessage:timestamp:
_sendAndLogClientEvent:stState:atTimestamp:
setCdaAdvertisingStartChanged:
setAdvertisementDelay:
setAdvertisementInterval:
setCdaAdvertisingEndChanged:
setElectionTimerEnded:
setDecision:
setPreviousDecision:
setWinningDevice:
setThisDevice:
setRawGoodnessScore:
setGoodnessScoreBoosts:
setHeardParticipants:
setElectionDecisionMade:
goodnessScoreBoosts
trumpReason
setIsCrossDeviceArbitrationAllowed:
setAdvertisementDatas:
setDebugElectionDecisionMade:
_boostTypeAsString:
setDeviceBoost:
setRecentUnlockBoost:
setRecentRaiseToWakeBoost:
setRecentSiriRequestBoost:
setRecentMotionBoost:
setRecentPlaybackBoost:
setRecentAlarmBoost:
setIsTrump:
setTrumpReason:
setCdaId:
logCDAElectionAdvertisingEnding:withCdaId:withTimestamp:
logCDAElectionDecisionMadeDebug:withCrossDeviceArbitrationAllowed:advertisementData:withDeviceGroup:withCdaId:withTimestamp:
updateIsTrump:withReason:
_currentBoost
maxTimeToSync
configurationURL
initWithConfigurationIdentifier:configurationURL:maxTimeToSync:
_configurationURL
_maxTimeToSync
T@"NSURL",R,C,N,V_configurationURL
Td,R,N,V_maxTimeToSync
setConfigurationURL:
setMaxTimeToSync:
startedHostTime
finishedHostTime
finishedDate
initWithIdentifier:startedHostTime:finishedHostTime:startedDate:finishedDate:
_startedHostTime
_finishedHostTime
_startedDate
_finishedDate
TQ,R,N,V_startedHostTime
TQ,R,N,V_finishedHostTime
T@"NSDate",R,C,N,V_startedDate
T@"NSDate",R,C,N,V_finishedDate
setStartedHostTime:
setFinishedHostTime:
setStartedDate:
setFinishedDate:
_initWithSettingType:
initWithInfo:content:
_content
T@"AFPeerInfo",R,C,N,V_info
T@,R,C,N,V_content
T@,&,N,V_value
initWithDeliveryDate:
T@"NSDate",R,C,N,V_deliveryDate
startAdvertisingFromVoiceTrigger
startAdvertisingFromInTaskVoiceTrigger
startAdvertisingFromInEarTrigger
startAdvertisingFromCarPlayTrigger
startAdvertisingEmergency
notifyCurrentDecisionResult
initWithDeviceInstanceContext:preferences:
coordinationEnabled
BLEActivityEnabled
deviceSlowDown
_initDeviceClassAndAdjustments
_initializeTimer
_initializeWiProxReadinessTimer
_resetAdvertisementTimings
setEventMask:
_clearWiProxReadinessTimer
_readDefaults
constantGoodnessScore
deviceAdjust
deviceDelay
deviceTrumpDelay
voiceTriggerEndtimeDelayThreshold
startAdvertisingSlowdown:
enterState:
_phsSetupRecord
advertiseWith:afterDelay:maxInterval:
startAdvertisingFromVoiceTriggerWithContext:
_setMyriadContext:
_startAdvertisingFromInTaskVoiceTrigger
_startAdvertisingFromVoiceTrigger
voiceTriggerRecord
_enterState:
startAdvertisingFromVoiceTriggerAdjusted:withContext:
startAdvertisingFromVoiceTriggerWithGoodnessScoreContext:withContext:
resumeWithError:
pollForAttentionWithTimeout:event:error:
suspendWithError:
directTriggerRecord
startWatchAdvertisingFromVoiceTriggerWithContext:
_inTaskTriggerWasTooSoon
startWatchAdvertisingFromDirectTriggerWithContext:
startAdvertisingFromDirectTriggerWithContext:
startAdvertisingFromOutgoingTriggerWithContext:
_duringNextWindowEnterState:
startAdvertisingFromInTaskVoiceTriggerWithContext:
startAdvertisingFromAlertFiringVoiceTriggerWithContext:
responseObject:
_startAdvertising:afterDelay:maxInterval:
_startTimer:for:thenExecute:
_endAdvertising:
endAdvertising:
_sortedReplies
emptyRecord
setAudioHash:
setIsFromContextCollector:
setIsSelf:
_advertiseTrigger
_deviceShouldContinue:
_winElection
_nextElectionPublisherState
publishState:
_loseElection
_cancelOverallTimeout
_ageWedgeFilter
resetReplies
_resetAudioData
_endAdvertisingWithDeviceProhibitions:
_stateAsString
_shouldContinueFor:
shouldContinue:
_endAdvertisingAnalyticsContext:
shouldAbortAnotherDeviceBetter:
_myriadSession
myriadCoordinator:didAddAdvertisement:toSession:
_stateAsString:
willStartWithSession:
willEndSession:
_createDispatchTimerWithTime:toExecute:
_createDispatchTimerFor:toExecute:
myriadCoordinatorOverallTimerCancelled:
_enteringIntoState:fromState:
myriadCoordinator:didEnterState:fromState:
_leaveBLEDiagnosticMode
_stopAdvertisingAndListening
_resetActionWindows
_unduck
_cancelTimer
_handleStateMachineErrorIfNeeded
_clearMyriadSession
_shouldStopListeningBeforeAdvertising
_stopListening:
_createMyriadSessionIfRequired
_addElectionAdvertisementDataToMyriadSession:
_setupActionWindows
_setOverallTimeout
_startTimer:for:thenEnterState:
lateSuppressionRecord
_advertise:andMoveTo:
continuationRecord
_stopAdvertising:
_startListening:
emergencyRecord
myriadCoordinatorIsAdvertisingEmergency:
emergencyHandledRecord
initiateEmergencyCallMyriad
myriadCoordinatorWillHandleEmergency:
_advertiseIndefinite:
_advertiseSlowdown
_advertiseSuppressTriggerInOutput
_startListeningAfterWiProxIsReady:inState:completion:
listeningDidBegin:
advertisingDidEnd:
listeningDidEnd:
shouldUnduck:
_triggerABCForType:context:
_contextFetchDelayForAdvertimentInterval:advertisementDelay:
_shouldUseContextCollector
_testAndFilterAdvertisementsFromContextCollector:voiceTriggerEndTime:advertisementDispatchTime:advertisement:
_testAndUpdateWedgeFilter:
_updateRepliesWith:id:data:
_suppressDeviceIfNeededWithVoiceTriggerEndTime:adverisementDispatchTime:
dateWithTimeInterval:sinceDate:
_createDispatchTimerForEvent:toExecute:
_duringNextWindowExecute:
testDeviceDelay
setupAdvIntervalsInDelay:interval:withSlowdown:
slowdownRecord:
_adjustActionWindowsFromSlowdown:
_advertiseWith:afterDelay:maxInterval:thenExecute:
myriadCoordinator:willStartAdvertisingWithSlowDownInterval:
_okayToSuppressOnOutput
_advertise:afterDelay:maxInterval:andMoveTo:
myriadCoordinator:willStartAdvertisingUsingData:
_pushMyriadAdvertisementContextToContextCollectorWithAdvertisementInterval:advertisementDelay:
advertisingDidBegin:
isEqualToData:
advertisingWillBeginWithDelay:advertisingInterval:
numberWithUnsignedShort:
_sortedReplies:
_isAPhone:
_resumeWiProxReadinessTimer
_suspendWiProxReadinessTimer
_createWaitWiProxTimer:waitBlock:
_waitWiProx:andExecute:
setDispatchQueue:
diagnosticBLEModeWithCompletion:
myriadCoordinatorDidHandleEmergency:
didChangeDefaults
clearCurrentCoordinator
initWithDelegate:
readDefaults
preheatWiProx
startAdvertisingForPHSSetupAfterDelay:maxInterval:
resetStateMachine
startAdvertisingFromVoiceTriggerAdjusted:
startWatchAdvertisingFromVoiceTrigger
startWatchAdvertisingFromDirectTrigger
startAdvertisingFromDirectTrigger
startAdvertisingFromOutgoingTrigger
startAdvertisingEmergencyHandled
startAdvertisingFromInTaskTriggerWithContext:
startAdvertisingFromAlertFiringVoiceTrigger
startResponseAdvertising:
endAdvertisingAfterDelay:
endAdvertising
endAdvertisingWithDeviceProhibitions:
inTask
setInTask:
setupEnabled:
instrumentationUpdateBoost:value:
_startListenTimer
startListening
startListening:
stopListening
stopListening:
startAdvertising:afterDelay:maxInterval:
advertiseWith:
_shouldHandleEmergency
waitWiProx:andExecute:
_waitWiProxAndExecute:
_enterBLEDiagnosticMode
_signalEmergencyCallHandled
injectAdvertisementForTesting:forDevice:
startListeningToEmergencySignal
startAdvertisingEmergencySignal
setupActionWindows
updateRepliesWith:id:data:
stateAsString:
myriadSession:
resetMyriadCoordinator:
_myriadState
_nextState
_previousState
_previousAdvertisedData
_replies
_replyCounts
_repliesBeforeDecision
_previousTrumps
_incomingTrumps
_multipleContinuations
_deviceClassName
_productTypeName
_deviceAdjust
_deviceDelay
_deviceTrumpDelay
_deviceVTEndtimeDistanceThreshold
_deviceInEarDelay
_deviceInEarInterval
_myriadWorkQueue
_myriadAdvertisementContextQueue
_myriadAttentionQueue
_timerLabel
_eventToken
_overallTimeout
_powerAssertionManager
_triggerRecord
_recordType
_voiceTriggerTime
_delayTarget
_advertInterval
_nTimesContinued
_nTimesExtended
_incomingAdjustment
_overrideMyriadRecord
_slowdownMsecs
_testInducedSlowdownMsecs
_maxSlowdownRecord
_BTLEReady
_inTask
_inSetupMode
_ducking
_stateMachineEncounteredError
_listenTimerIsRunning
_coordinationEnabled
_BLEActivityEnabled
_clientIsDirectActivating
_clientIsInEarActivation
_clientRecentlyLostElection
_clientLostDueToTrumping
_clientIsListeningAfterRecentWin
_clientIsWatchActivation
_clientIsWatchTrumpPromote
_clientIsRespondingToSlowdown
_clientDoneRespondingToSlowdown
_clientRespondingToCarPlay
_clientIsDeciding
_constantGoodness
_dateFormat
_designatedSelfID
_triggerTime
_nDeltaTs
_callPunchout
_lastDecisionTime
_lastDecision
_lastPHash
_lastEmergencyAttempt
_wasEmergency
_suppressLateTrigger
_ignoreInTaskTimer
_sfdiagnostics
_sfDiagnosticsTimer
_heySiriBTLEState
_wiproxReadinessTimer
_advTiming
_advContextManager
_contextRecord
_goodnessScoreEvaluator
_electionBeginPublisher
_electionWinPublisher
_electionLossPublisher
_electionRepostWinDecisionPublisher
_preferencesChangedNotification
_electionPublisherState
_attentionClient
_waitForWiproxReadinessToScan
_latestRecordReceivedTime
_currentMyriadContext
_invalidateAssertionTimer
_invalidateBackboardServices
initWithBundleIDs:states:
setHandler:
applicationInfoForApplication:completion:
_processAssertionWasInvalidatedForRequest:
initWithPayload:
_startAppStateMonitoringForRequest:
serviceWithDefaultShellEndpoint
optionsWithDictionary:
_handleSuccessfulAppLaunchToBackground:forRequest:completion:
openApplication:withOptions:completion:
_processAssertionWasAcquired:
initWithBundleIdentifier:flags:reason:name:withHandler:
processAssertionWasInvalidatedForRequest:
taskmaster:didLaunchApplicationForRequestWithId:
initWithAppBundleIdentifier:
taskmaster
setTaskmaster:
_appBundleIdentifier
_appStateMonitor
_bKSAssertionForBgLaunch
_assertionTimer
_bKSAssertionSetupGroup
T@"AFSiriTaskmaster",W,N,V_taskmaster
taskmasterForUIApplicationWithBundleIdentifier:
logClientFeedbackPresented:dialogIdentifierProvider:
_af_enumerateClientFeedbackDetails:
associatedDialogIdentifiersForAceObjectIdentifier:
logClientFeedbackPresented:
_af_dialogPhase
_af_dialogIdentifier
listenAfterSpeaking
dialogIdentifier
utteranceView
narrowband
censorSpeech
shouldStoreAudioOnDevice
task
loggingContext
profile
overrides
jitGrammar
initWithLanguage:interactionIdentifier:task:loggingContext:applicationName:profile:overrides:modelOverrideURL:originalAudioFileURL:narrowband:detectUtterances:censorSpeech:farField:secureOfflineOnly:shouldStoreAudioOnDevice:maximumRecognitionDuration:inputOrigin:location:jitGrammar:
_censorSpeech
_shouldStoreAudioOnDevice
_task
_loggingContext
_profile
_overrides
_jitGrammar
T@"NSString",R,C,N,V_language
T@"NSString",R,C,N,V_interactionIdentifier
T@"NSString",R,C,N,V_task
T@"NSArray",R,C,N,V_loggingContext
T@"NSString",R,C,N,V_applicationName
T@"NSData",R,C,N,V_profile
T@"NSDictionary",R,C,N,V_overrides
T@"NSURL",R,C,N,V_modelOverrideURL
T@"NSURL",R,C,N,V_originalAudioFileURL
TB,R,N,V_narrowband
TB,R,N,V_detectUtterances
TB,R,N,V_censorSpeech
TB,R,N,V_farField
TB,R,N,V_secureOfflineOnly
TB,R,N,V_shouldStoreAudioOnDevice
Td,R,N,V_maximumRecognitionDuration
T@"CLLocation",R,C,N,V_location
T@"NSArray",R,C,N,V_jitGrammar
setTask:
setLoggingContext:
setProfile:
setOverrides:
setNarrowband:
setCensorSpeech:
setShouldStoreAudioOnDevice:
setJitGrammar:
applicationContexts
initWithApplicationContexts:
sectionID
sectionDisplayName
applicationProxyForIdentifier:
localizedName
defaultAction
dismissAction
snoozeAction
supplementaryActions
setBulletin:forFeed:
_createAssistantActionsForBulletin:
actions
bulletinID
recordID
sectionSubtype
dateIsAllDay
recencyDate
modalAlertContent
subtitle
publisherBulletinID
intentIDs
contentPreviewSetting
threadID
_displayNameForBulletin:
internalIDForBBBulletinID:
localizedNameForContext:
shouldHideTime
threadIdentifier
destinations
setBulletin:
actionForIdentifier:
setNotification:fromSourceApp:
wasRemovedFromFeed:
displayName
setDisplayName:
availableOnLockScreen
setAvailableOnLockScreen:
announcementType
setAnnouncementType:
isRead
setRead:
bbBulletin
isAllDay
modalAlertContentMessage
previewRestricted
internalID
actionsStore
setActionsStore:
actionsByIdentifier
setActionsByIdentifier:
feed
_availableOnLockScreen
_read
_allDay
_previewRestricted
_displayName
_announcementType
_bbBulletin
_bulletinID
_recordID
_endDate
_modalAlertContentMessage
_recencyDate
_sectionID
_sectionSubtype
_subtitle
_intentIDs
_publisherBulletinID
_threadID
_internalID
_actionsStore
_actionsByIdentifier
_feed
T@"NSArray",&,N,V_actionsStore
T@"NSDictionary",&,N,V_actionsByIdentifier
TQ,R,N,V_feed
T@"NSString",C,N,V_displayName
TB,N,V_availableOnLockScreen
TB,N,V_supportsSpokenNotification
Tq,N,V_announcementType
read
TB,N,GisRead,V_read
T@"BBBulletin",R,N,V_bbBulletin
T@"NSString",R,C,N,V_bulletinID
T@"NSString",R,C,N,V_recordID
T@"NSDate",R,C,N,V_endDate
allDay
TB,R,N,GisAllDay,V_allDay
T@"NSString",R,C,N,V_message
T@"NSString",R,C,N,V_modalAlertContentMessage
T@"NSDate",R,C,N,V_recencyDate
T@"NSString",R,C,N,V_sectionID
Tq,R,N,V_sectionSubtype
T@"NSString",R,C,N,V_subtitle
T@"NSString",R,C,N,V_timeZone
T@"NSArray",R,C,N,V_intentIDs
T@"NSString",R,C,N,V_publisherBulletinID
TB,R,N,V_previewRestricted
T@"NSString",R,C,N,V_threadID
T@"NSString",R,C,N,V_internalID
acknowledgementDialogPhase
statusDialogPhase
clarificationDialogPhase
summaryDialogPhase
confirmationDialogPhase
errorDialogPhase
confirmedDialogPhase
cancelledDialogPhase
_dialogPhaseWithType:
_initWithType:
isEqualToDialogPhase:
replacesPreviousSnippetContents
isTemporary
isCancelledDialogPhase
isCompletionDialogPhase
isPossiblyPartOfMultiTurnRequest
Tq,R,N,G_type,V_type
temporary
TB,R,N,GisTemporary
expository
TB,R,N,GisExpository
TB,R,N,GisConfirmationDialogPhase
TB,R,N,GisReflectionDialogPhase
TB,R,N,GisClarificationDialogPhase
TB,R,N,GisConfirmedDialogPhase
TB,R,N,GisCancelledDialogPhase
TB,R,N,GisUserRequestDialogPhase
TB,R,N,GisErrorDialogPhase
TB,R,N,GisCompletionDialogPhase
TB,R,N,GisSummaryDialogPhase
TB,R,N,GisAcknowledgementDialogPhase
propertyForKeyWithoutDeserializing:
imagePath
symbolName
initWithImagePath:symbolName:
_imagePath
_symbolName
T@"NSString",R,C,N,V_imagePath
T@"NSString",R,C,N,V_symbolName
newTurnBasedContextWithPreviousTurnID:analytics:
setPreviousTurnID:
emitInstrumentation:machAbsoluteTime:
nextTurnBasedContext
nextTurnBasedContextForAnalytics:
newTurnBasedInstrumentationContext
machServiceSiriTaskDelivererForAppWithBundleIdentifier:
_machServiceName
taskmasterForMachServiceWithName:
taskmasterForMachServiceForAppWithBundleIdentifier:
initWithObservation:filterByInstrumentationTypes:
setWithCapacity:
contextDataAsProtobuf
initWithObservation:
waitUntilInvalidated
_observerConnection
_filteredTagIdentifiers
rapportEffectiveIdentifier
homeKitAccessoryIdentifier
isDeviceOwnedByCurrentUser
setIsDeviceOwnedByCurrentUser:
setSharedUserIdentifier:
idsIdentifier
setIdsIdentifier:
setIdsDeviceUniqueIdentifier:
setRapportEffectiveIdentifier:
setHomeKitAccessoryIdentifier:
setIsCommunalDevice:
userInterfaceIdiom
setUserInterfaceIdiom:
aceVersion
setAceVersion:
hasTurnID
_turnID
T@"NSData",&,N,V_turnID
fileURLWithPath:
dictionaryWithContentsOfURL:error:
initWithRequiresVoiceSelection:voiceSelectionAllowsChooseForMe:voiceCountForRecognitionLanguage:completionLoggingBlock:
requiresVoiceSelectionForRecognitionLanguage:
voiceSelectionAllowsRandomSelection
completionLoggingBlock
requiresVoiceSelection
voiceCountForRecognitionLanguage
_voiceSelectionAllowsRandomSelection
_requiresVoiceSelection
_completionLoggingBlock
_voiceCountForRecognitionLanguage
TB,R,N,V_requiresVoiceSelection
T@"NSDictionary",R,N,V_voiceCountForRecognitionLanguage
TB,R,N,V_voiceSelectionAllowsRandomSelection
T@?,R,&,N,V_completionLoggingBlock
_resolveIfNewUserWithParameters:forRecognitionLanguages:completion:
_resolveVoiceSelection:forRecognitionLanguages:completion:
_storedRecognitionLanguageCode
_storedVoiceInfo
_createConfigurationForParameters:
arrayWithArray:
predicateWithBlock:
filteredArrayUsingPredicate:
_shouldAllowRandomVoiceSelectionForEnablementFlow:
_emitEnablementFlowLoggingForConfigurationParameters:didEnable:
configurationForEnablementFlow:recognitionLanguageCodes:completion:
settingsConnection
setSettingsConnection:
T@"AFSettingsConnection",&,N,V_settingsConnection
appIdentifyingInfo
bundleId
clientIdentifier
_af_preferredBundleID
syncSlots
_af_normalizedKeyForKey:appBundleID:syncSlotName:
_af_normalizedKey
_af_isValid
initWithQueue:qosClass:asynchronous:
qosClass
asynchronous
_asynchronous
_qosClass
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
TI,R,N,V_qosClass
TB,R,N,V_asynchronous
removeObserver:forKeyPath:context:
addObserver:forKeyPath:options:context:
observeValueForKeyPath:ofObject:change:context:
_handleObservedChangeWithOldValue:andNewValue:
initWithObject:keyPath:handler:deliveryOptions:
_isInvalid
_invalidation
_handler
_deliveryOptions
components:fromDate:
year
month
_af_isSameDayAsDate:
setDay:
dateByAddingComponents:toDate:options:
af_isToday
af_isTomorrow
initWithAcousticFeatureValue:frameDuration:
acousticFeatureValuePerFrame
frameDuration
_acousticFeatureValuePerFrame
_frameDuration
T@"NSArray",R,N,V_acousticFeatureValuePerFrame
Td,R,N,V_frameDuration
initWithSpeechRecognitionFeatures:acousticFeatures:
initWithSpeechRecognitionFeatures:acousticFeatures:snr:
speechRecognitionFeatures
acousticFeatures
_speechRecognitionFeatures
_acousticFeatures
_snr
T@"NSDictionary",R,N,V_speechRecognitionFeatures
T@"NSDictionary",R,N,V_acousticFeatures
Td,R,N,V_snr
status
setStatus:
initWithSetRequestOrigin:
ace_setRequestOrigin
af_analyticsContext
clientBoundCommands
parse
directInvocation
invocationIdentifier
localizedCaseInsensitiveCompare:
af_addEntriesToAnalyticsContext:
af_dialogIdentifiersForAnalyticsContext
dialog
dialogs
hashedRouteUIDs
hashedRouteUID
recordFailure:forConnectionType:
recordSuccessForConnectionType:isWarm:forTimeInterval:
recordSessionRetrySuccess
_fullAggDKeyWithPrefix:error:
logRequestCompletedWithDuration:
missedAppContextForRequest
missedAlertContextForRequest
logRequestCancelAfterSeconds:
logSiriQuickStopAction:
logSiriMediaVolumeAction:
logSiriPausedMedia
logRequestLaunchedApp
logDictationFollowedByContinueOccurredForLanguage:
logDictationFollowedByKeyboardInputOccurredForLanguage:
logDictationFollowedByKeyboardDeleteOccurredForLanguage:
logKeyboardInputFollowedByContinueOccurredForLanguage:
logUILockCanceledVTActivation
logCreateAssistant
logLoadAssistant
logPingTimeout
logEnabledState:
logLocalRecognitionAssetEvictedForLanguage:
logLocalSpeechStartedWithDuration:
logLocalFinalSpeechRecognitionWithDuration:
logLocalRecognitionLoadedForLanguage:duration:
logLocalRecognitionWonForLanguage:
logLocalRecognitionLostForLanguage:
logDESRecordingForLanguage:error:
logDESEvaluationForLanguage:error:
logCDMAssetEvictedForAssetType:language:
noteConnectedToCarPlayHeadunit
noteSuccessOfRequest:inCar:
connectionDidFail
connectionDidDrop
beginSessionRetryPreferringWWAN:
startWaitingForSpeechResponse
speechResponseReceived
speechResponseFailure
connectionType
setConnectionType:
setHasActiveRequest:
_sessionIsRetrying
_retryPrefersWWAN
TQ,N,V_type
TB,N,V_hasActiveRequest
_stringForGatekeeperType:
logTimeToBeepWithDuration:
logHomeButtonPressToActivationDuration:
logStarkGatekeeperDismissedManuallyForType:
logStarkGatekeeperAppearedForType:
numberWithLongLong:
_logEvent:
_attach:
attach:
_connectionInterrupted:
_connectionInvalid:
_attachmentStatusUpdate:
_listenForLaunchNotification
waitForAttachment:
setAttachmentStatusChangedHandler:
_isAttached
_attachmentStatusChangedHandler
_pendingEvents
numberOfLoops
volume
fadeInDuration
fadeOutDuration
itemData
initWithItemURL:itemData:numberOfLoops:volume:fadeInDuration:fadeOutDuration:userInfo:
_volume
_itemURL
_itemData
_numberOfLoops
_fadeInDuration
_fadeOutDuration
T@"NSURL",R,C,N,V_itemURL
T@"NSData",R,C,N,V_itemData
Tq,R,N,V_numberOfLoops
Tf,R,N,V_volume
Td,R,N,V_fadeInDuration
Td,R,N,V_fadeOutDuration
setItemURL:
setItemData:
setNumberOfLoops:
setVolume:
setFadeInDuration:
setFadeOutDuration:
initWithName:extension:
_extension
T@"NSString",R,C,N,V_extension
authorizationStatusForBundle:
_initWithRequestIdentifier:
setAlarm:
_alarm
T@"STAlarm",&,N,V_alarm
associatedBundleIdentifier
contextDictionary
beginSiriRequestForApp:
composeNewMessageRequestToContact:phoneNumber:emailAddress:inApp:
composeNewMessageRequestInApp:
bulletin
readMessagesRequestFromConversationIdentifier:inApp:
readMessagesRequestFromNotificationIdentifier:fromApp:
composeReplyRequestToConversationIdentifier:inApp:
readHomeAnnouncementRequestFromApp:
startVoiceShortcutInCarPlayUsingTriggerId:withTriggerName:fromApp:
shareETARequestInApp:
startPhoneCallRequestFromApp:
searchMusicRequestInApp:
setShuffleEnabled:
setAlbum:
setArtist:
setBrandIdentifier:
setExternalIdentifier:
setAdamIdentifier:
_mediaTypeFromNowPlayingInfo:
setMediaType:
_mediaItemIdURLFromNowPlayingInfo:
setDurationMillis:
setPlaybackPositionMillis:
setPlaybackInfo:
album
artist
setListeningToItem:
setCurrentItemSteerable:
setIndex:
setQueueSize:
setPlaybackQueuePosition:
initWithDouble:
setPlaybackRate:
setCurrentListeningToContainer:
_af_setShuffleModeFromNowPlayingInfo:
setAudioAndSubtitleLanguageOptions:
applicationIdentifier
listeningToItem
_af_setNowPlayingInfo:
_af_validateAndFinalize
defaultTimeZone
setTimeZoneId:
setReleaseDate:
_af_releaseInfoWithReleaseDate:
setPlays:
setReleaseInfo:
calculatedPlaybackPosition
elapsedTime
playCount
albumName
trackArtistName
albumArtistName
releaseDate
iTunesStoreIdentifier
iTunesStoreSubscriptionIdentifier
_af_mediaItemWithMRContentItemRef:
_af_mediaItemWithMRContentItem:
initWithErrorCode:
initWithLongLong:
setApplicationIdentifier:
setLanguageTag:
setCharacteristics:
_languageOptionFromMediaRemoteRepresentation:
setAvailableTracks:
setAvailableSubtitles:
setCurrentAudioTrack:
setCurrentSubtitles:
playerPath
client
playbackQueue
contentItems
nowPlayingInfo
setScheme:
setHost:
pathWithComponents:
setPath:
setVolumeValue:
setPreviousListenedToItem:
setNextListeningToItem:
getAudioSessionID
retrieveSessionWithID:
lastActivationStoppedNowPlayingApp
criteria
setCriteria:
_criteria
Tq,N,V_options
T@"STAlarm",&,N,V_criteria
mostRecentFiringTimer
firingTimers
_initWithCall:
call
setDeviceGroup:completion:
setIgnoreAdjustedBoost:
ignoreAdjustedBoost
setIgnorePlatformBias:
ignorePlatformBias
setConstantGoodnessScore:
setDeviceAdjust:
setDeviceDelay:
setTestDeviceDelay:
setDeviceTrumpDelay:
enableCoordination:
coordinationEnabledForAccessoryLogging
setVoiceTriggerEndtimeDelayThreshold:
setDeviceSlowDown:
setMaxNoOperationDelay:
maxNoOperationDelay
isAudioSessionActive
currentOrUpNextDateInterval
localActiveAssertionContexts
localPendingAssertionContexts
remoteActiveAssertionContexts
remotePendingAssertionContexts
localDevice
remoteQualifiedInRangeDevices
remoteQualifiedOutOfRangeDevices
remoteDisqualifiedDevices
initWithCurrentOrUpNextDateInterval:isAudioSessionActive:localActiveAssertionContexts:localPendingAssertionContexts:remoteActiveAssertionContexts:remotePendingAssertionContexts:localDevice:remoteQualifiedInRangeDevices:remoteQualifiedOutOfRangeDevices:remoteDisqualifiedDevices:
_isAudioSessionActive
_currentOrUpNextDateInterval
_localActiveAssertionContexts
_localPendingAssertionContexts
_remoteActiveAssertionContexts
_remotePendingAssertionContexts
_localDevice
_remoteQualifiedInRangeDevices
_remoteQualifiedOutOfRangeDevices
_remoteDisqualifiedDevices
T@"NSDateInterval",R,C,N,V_currentOrUpNextDateInterval
TB,R,N,V_isAudioSessionActive
T@"NSArray",R,C,N,V_localActiveAssertionContexts
T@"NSArray",R,C,N,V_localPendingAssertionContexts
T@"NSArray",R,C,N,V_remoteActiveAssertionContexts
T@"NSArray",R,C,N,V_remotePendingAssertionContexts
T@"AFAudioSessionCoordinationDeviceInfo",R,C,N,V_localDevice
T@"NSArray",R,C,N,V_remoteQualifiedInRangeDevices
T@"NSArray",R,C,N,V_remoteQualifiedOutOfRangeDevices
T@"NSArray",R,C,N,V_remoteDisqualifiedDevices
setCurrentOrUpNextDateInterval:
setIsAudioSessionActive:
setLocalActiveAssertionContexts:
setLocalPendingAssertionContexts:
setRemoteActiveAssertionContexts:
setRemotePendingAssertionContexts:
setLocalDevice:
setRemoteQualifiedInRangeDevices:
setRemoteQualifiedOutOfRangeDevices:
setRemoteDisqualifiedDevices:
keepsHistory
historyBufferSize
initWithKeepsHistory:historyBufferSize:
_keepsHistory
_historyBufferSize
TB,R,N,V_keepsHistory
TQ,R,N,V_historyBufferSize
setKeepsHistory:
setHistoryBufferSize:
initWithDelegateItem:
_delegateItem
aceContext
aceContexts
initWithAssociatedBundleIdentifier:bulletin:aceContext:contextDictionary:aceContexts:
_associatedBundleIdentifier
_bulletin
_aceContext
_contextDictionary
_aceContexts
T@"NSString",R,C,N,V_associatedBundleIdentifier
T@"AFBulletin",R,C,N,V_bulletin
T@"AceObject",R,C,N,V_aceContext
T@"NSDictionary",R,C,N,V_contextDictionary
T@"NSArray",R,C,N,V_aceContexts
setAssociatedBundleIdentifier:
setAceContext:
setContextDictionary:
setAceContexts:
sharedUserId
initWithSharedUserId:confidenceScore:
_sharedUserId
T@"NSString",R,C,N,V_sharedUserId
TQ,R,N,V_confidenceScore
setSharedUserId:
_beginUpdate
_getPowerWithCompletion:
_endUpdate
_createNewXPCWrapperWithCompletion:
_timerFired
_updatePowerWithAveragePower:andPeakPower:
_writeSharedMemoryWithAveragePower:peakPower:
_destroySharedMemory
_createSharedMemory
_createNewXPCWrapper
_createSharedMemoryXPCObject
getPowerWithCompletion:
createNewXPCWrapperWithCompletion:
frequency
_averagePower
_peakPower
_provider
_frequency
T@"<AFAudioPowerProviding>",R,N,V_provider
Tq,R,N,V_frequency
_unregister
maximumLengthOfBytesUsingEncoding:
getCString:maxLength:encoding:
_register
_setState:withToken:
_getState:withToken:
publishStateWithBlock:
featureGroups
logExperimentExposureForInvocationFeedbacks
isFeatureGroupOneEnabled
isFeatureGroupTwoEnabled
isFeatureGroupThreeEnabled
isFeatureGroupFourEnabled
invocationFeedbackExperiment
T@"AFExperiment<AFInvocationFeedbackExperiment>",R,N
languages
setLanguageString:
setQuality:
setMasteredVersion:
setVoiceType:
setVoiceContentVersion:
isEqualToPersonContactHandle:
setHandle:
T@"NSString",C,N,V_handle
contactHandles
setContactHandles:
_contactHandles
_fullName
T@"NSSet",C,N,V_contactHandles
T@"NSString",C,N,V_fullName
recordCancellationMetrics
_listInstalledServicesWithReply:
_pingServiceForIdentifier:reply:
_sendLargeData:reply:
_performCommandDictionary:forBundleIdentifier:reply:
_performTaskCommandDictionary:forBundleIdentifier:reply:
_fetchAppContextForApplicationInfo:reply:
_refreshAssistantValidation
_setState:
bluetoothWirelessSplitterSessionStateObserver:didChangeStateFrom:to:
initWithCString:encoding:
cStringUsingEncoding:
_fetchLocalDeviceContextWithCompletion:
_beginUpdateLocalDeviceContext
_endUpdateLocalDeviceContext
_remoteServiceWithErrorHandler:
_handleXPCConnectionInvalidation
_handleXPCConnectionInterruption
deviceContextConnectionDidInvalidate:
_updateLocalDeviceContext:
deviceContextConnection:didUpdateLocalDeviceContext:
initWithQueue:instanceContext:delegate:
getLocalDeviceContextWithCompletion:
beginUpdateLocalDeviceContext
_serviceDelegateProxy
_isUpdatingLocalDeviceContext
_localDeviceContext
_aceValue
setBundleId:
setAppIdentifyingInfo:
setOrderedContext:
aggregateContextWithRawOutputForAppWithBundleIdentifier:contextProvider:deliveryHandler:completionHandler:
aggregateContextForAppWithBundleIdentifier:contextProvider:deliveryHandler:completionHandler:
aggregateContextForAppWithBundleIdentifier:contextProvider:completionHandler:
clientPluginManagerWithFactoryInitializationBlock:
speakableNamespaceProviderForAceObject:
VSSpeechGender
VSSpeechFootprint
setFootprint:
setIsBuiltInVoice:
setLanguages:
setContentVersion:
isBuiltInVoice
VSSpeechType
VSVoiceAsset
isMatchForVoiceAsset:
genderForVSSpeechGender:
_semaphore
_observationHandler
initWithSleepState:
_sleepState
Tq,R,N,V_sleepState
setSleepState:
_applicationContexts
T@"NSArray",R,C,N,V_applicationContexts
setApplicationContexts:
alpha
hexColor
colorName
localizedOutputVoiceColor
localizedOutputVoice
_alpha
_hexColor
_colorName
_localizedOutputVoiceColor
_localizedOutputVoice
T@"NSString",R,C,N,V_hexColor
T@"NSString",R,C,N,V_colorName
Tf,R,N,V_alpha
T@"NSString",R,C,N,V_localizedOutputVoiceColor
T@"NSString",R,C,N,V_localizedOutputVoice
setHexColor:
setColorName:
setAlpha:
setLocalizedOutputVoiceColor:
setLocalizedOutputVoice:
createResponseWithContext:
initWithKeyOptions:valueOptions:capacity:
_removeStateForClient:
_beginSessionForClient:
_endSessionForClient:
_beginRequestWithUUID:forClient:
_endRequestWithUUID:forClient:
_beginListeningForClient:
_endListeningForClient:
_beginSpeakingForClient:
_endSpeakingForClient:
_aggregateStatesAndPublishIfNeeded
_beginPresentationTransition
_endPresentationTransitionForReason:
_aggregatedState
_stateForClient:createIfAbsent:
setHasActiveSession:
addRequestUUID:
removeRequestUUID:
setIsListening:
setIsSpeaking:
objectEnumerator
beginPresentationTransition
endPresentationTransition
getCurrentStateWithCompletion:
_publisher
_statesByClient
_transactionDepth
_presentationTransitionAssertion
_presentationTransitionWatchdogTimer
_presentationTransitionGroup
hasActiveSession
isListening
isSpeaking
_requestUUIDs
_hasActiveSession
_isListening
_isSpeaking
TB,N,V_hasActiveSession
TB,N,V_isListening
TB,N,V_isSpeaking
initWithStartRequest:requestOptions:
initWithStartRequest:
initWithStartLocalRequest:requestOptions:
_startRequestData
_startLocalRequestData
_requestOptions
initWithRequestInfo:instanceContext:
initWithRequestInfo:
_requestInfo
_setUp
_beginGrouping
_updateState:
_updateLastPlayedAnnouncement:
_endGrouping
_fetchStateAndLastPlayedAnnouncementForReason:completion:
_handleNotifyStateChangeFrom:to:
homeAnnouncementObserver:stateDidUpdateFrom:to:
_enumerateListenersUsingBlock:
homeAnnouncementObserver:snapshotDidUpdateFrom:to:
_updateSnapshot:
getSnapshotWithCompletion:
_snapshotGroup
_snapshot
af_isUserUtterance
af_waitsForConfirmation
af_speechModel
af_acousticFeature
af_audioAnalytics
acousticFeaturePerFrame
beginTimestamp
endTimestamp
utterance
initWithUtterance:beginTimestamp:endTimestamp:
_utterance
_beginTimestamp
_endTimestamp
T@"NSString",R,C,N,V_utterance
TQ,R,N,V_beginTimestamp
TQ,R,N,V_endTimestamp
setUtterance:
setBeginTimestamp:
setEndTimestamp:
activityNotificationsEnabledForPersonalRequests
homeIdentifier
initWithHomeIdentifier:activityNotificationsEnabledForPersonalRequests:
_activityNotificationsEnabledForPersonalRequests
_homeIdentifier
T@"NSUUID",R,C,N,V_homeIdentifier
TB,R,N,V_activityNotificationsEnabledForPersonalRequests
setHomeIdentifier:
setActivityNotificationsEnabledForPersonalRequests:
recordRoute
_isVoiceTrigger
_isDucking
_isTwoShot
_speechEndHostTime
Tq,R,N,V_gender
T@"NSString",R,C,N,V_recordRoute
TB,R,N,V_isVoiceTrigger
TB,R,N,V_isDucking
TB,R,N,V_isTwoShot
TQ,R,N,V_speechEndHostTime
setRecordRoute:
setIsVoiceTrigger:
setIsDucking:
setIsTwoShot:
setSpeechEndHostTime:
initWithConnectionFactory:
_multiUserServiceWithErrorHandler:
getSharedUserProfileLimitWithCompletion:
modelObjects
_aceCollectionClass
isSubclassOfClass:
setDomainObjects:
initWithModelObjects:
_modelObjects
assistantId
anyEventType
typeName
dateWithTimeIntervalSince1970:
eventsReferenceTime
legacyTypeName
contextDataAsDictionary
dateStamp
setAssistantId:
setSpeechId:
_deliveryStream
_contextDataType
_assistantId
TQ,R,N,V_deliveryStream
Tq,R,N,V_contextDataType
T@"NSString",C,N,V_assistantId
T@"NSString",C,N,V_speechId
settingChanges
_settingChanges
initWithActionType:error:
_actionType
_error
Tq,R,N,V_actionType
T@"NSError",R,C,N,V_error
executionID
turnId
originPeerInfo
currentHomeInfo
endpointInfo
instanceInfo
speechInfo
requestHandlingContextSnapshot
deviceRestrictions
initWithExecutionID:requestID:turnId:originPeerInfo:currentHomeInfo:endpointInfo:instanceInfo:speechInfo:requestHandlingContextSnapshot:deviceRestrictions:userInfo:
_executionID
_originPeerInfo
_currentHomeInfo
_endpointInfo
_instanceInfo
_speechInfo
_requestHandlingContextSnapshot
_deviceRestrictions
T@"NSString",R,C,N,V_executionID
T@"NSUUID",R,C,N,V_turnId
T@"AFPeerInfo",R,C,N,V_originPeerInfo
T@"AFHomeInfo",R,C,N,V_currentHomeInfo
T@"AFEndpointInfo",R,C,N,V_endpointInfo
T@"AFInstanceInfo",R,C,N,V_instanceInfo
T@"AFSpeechInfo",R,C,N,V_speechInfo
T@"AFRequestHandlingContext",R,C,N,V_requestHandlingContextSnapshot
T@"NSArray",R,C,N,V_deviceRestrictions
setExecutionID:
setTurnId:
setOriginPeerInfo:
setCurrentHomeInfo:
setEndpointInfo:
setInstanceInfo:
setSpeechInfo:
setRequestHandlingContextSnapshot:
setDeviceRestrictions:
setEventData:
setHasEventType:
hasEventType
hasEventData
_eventData
_eventType
_has
Ti,N,V_eventType
T@"NSData",&,N,V_eventData
initFileURLWithPath:isDirectory:
URLByAppendingPathComponent:
caseInsensitiveCompare:
isAMOSIdentifier
query
isAMOSCommittedIdentifier
isDictationAllowed
getActivePairedDevice
valueForProperty:
activeDeviceSelectorBlock
getAllDevicesWithArchivedAltAccountDevicesMatching:
sharedCache
hasEntitlement:forPID:
cacheEntitlement:forPID:bundleID:
_cache
_bundleIDToPIDMap
stringWithString:
setFirstName:
setLastName:
setNickName:
setInternalGUID:
relatedNames
setRelatedNames:
_createUserActivityDataWithOptions:completionHandler:
initWithBytesNoCopy:length:encoding:freeWhenDone:
hexStringFromBytes:length:
hexStringFromData:
af_temperatureUnitForAceTemperatureUnit:
_setPreferredTemperatureUnit:
af_aceTemperatureUnit
af_setAceTemperatureUnit:
updatePairedDevices:
pairedDevices
pairedBluetoothDevices
_pairedDevices
_pairedDevicesLock
featureCapability:
setUuid:
setComponent:
setTarget:
bundleWithIdentifier:
objectForInfoDictionaryKey:ofClass:
_conversationItemType
_indexPath
Tq,R,N,V_conversationItemType
T@"AceObject",R,N,V_aceObject
T@"NSString",R,C,N,V_aceCommandIdentifier
TB,R,N,GisTransient,V_transient
TB,R,N,GisSupplemental,V_supplemental
TB,R,N,GisImmersiveExperience,V_immersiveExperience
T@"NSIndexPath",R,N,V_indexPath
isProxyGroupPlayer
initWithPlaybackState:nowPlayingTimestamp:mediaType:groupIdentifier:isProxyGroupPlayer:
_isProxyGroupPlayer
_nowPlayingTimestamp
_mediaType
Tq,R,N,V_playbackState
T@"NSDate",R,C,N,V_nowPlayingTimestamp
T@"NSString",R,C,N,V_mediaType
T@"NSString",R,C,N,V_groupIdentifier
TB,R,N,V_isProxyGroupPlayer
setNowPlayingTimestamp:
setGroupIdentifier:
setIsProxyGroupPlayer:
dispatchCompletionWithReply:error:
initWithCommand:defaultReply:completion:
command
defaultReply
_completion
_command
_defaultReply
T@"AceObject<SAAceCommand>",R,N,V_command
T@"AceObject<SAAceCommand>",R,N,V_defaultReply
initWithConversation:parentItemIdentifier:
_conversation
_parentItemIdentifier
_indexPathForItemAtIndex:
_addItemsForAceObjects:type:dialogPhase:asChildrenOfItemWithIdentifier:
_identifierOfItemAtIndex:
enumerateIndexesUsingBlock:
_indexPathForLastRestoredItem
itemAtIndex:
numberOfItems
addItemsForAceObjects:type:dialogPhase:
addItemsForAceObjects:type:dialogPhase:asChildrenOfItemAtIndex:
identifiersForItemsAtIndexes:
removeItemsAtIndexes:
itemIsRestoredAtIndex:
conversation
T@"AFConversation",R,N,G_conversation,V_conversation
parentItemIdentifier
T@"NSUUID",R,N,G_parentItemIdentifier,V_parentItemIdentifier
_resetSettingsConnection
triggerABCForType:subType:context:
setTriggerlessListeningOptions:
triggerlessListeningOptions
_triggerlessListeningOptions
T@"AFTriggerlessListeningOptions",C,N,V_triggerlessListeningOptions
setPid:
_pid
Ti,N,V_pid
_myriadEmergencyCallingQueue
hour
minute
repeatOptions
isSnoozed
alarmID
alarmURL
initWithAlarmID:alarmURL:isFiring:title:type:hour:minute:repeatOptions:isEnabled:isSnoozed:firedDate:dismissedDate:lastModifiedDate:
_isSnoozed
_alarmID
_alarmURL
_hour
_minute
_repeatOptions
T@"NSUUID",R,C,N,V_alarmID
T@"NSURL",R,C,N,V_alarmURL
TQ,R,N,V_type
TQ,R,N,V_hour
TQ,R,N,V_minute
TQ,R,N,V_repeatOptions
TB,R,N,V_isSnoozed
setAlarmID:
setAlarmURL:
setHour:
setMinute:
setRepeatOptions:
setIsSnoozed:
initWithAudioSessionID:error:
TI,R,N,V_audioSessionID
strongToWeakObjectsMapTable
nextObject
registerContextTransformer:forType:
donateContext:withMetadata:pushToRemote:completion:
donateContext:withMetadata:pushToRemote:
getRedactedContextForContextSnapshot:metadata:privacyPolicy:completion:
defaultService
setDonationService:
_transformersByType
_donationService
_isDeviceOwnedByCurrentUser
_isCommunalDevice
_sharedUserIdentifier
_idsIdentifier
_idsDeviceUniqueIdentifier
_rapportEffectiveIdentifier
_homeKitAccessoryIdentifier
_userInterfaceIdiom
_aceVersion
TB,R,N,V_isDeviceOwnedByCurrentUser
T@"NSString",R,C,N,V_sharedUserIdentifier
T@"NSString",R,C,N,V_idsIdentifier
T@"NSString",R,C,N,V_idsDeviceUniqueIdentifier
T@"NSString",R,C,N,V_rapportEffectiveIdentifier
T@"NSString",R,C,N,V_homeKitAccessoryIdentifier
TB,R,N,V_isCommunalDevice
T@"NSString",R,C,N,V_productType
T@"NSString",R,C,N,V_userInterfaceIdiom
T@"NSString",R,C,N,V_aceVersion
initWithProcessIdentifier:processName:
_processIdentifier
_processName
Ti,R,N,V_processIdentifier
T@"NSString",R,C,N,V_processName
setProcessIdentifier:
setProcessName:
_getUUIDAndUpdateIDMapsForPeerInfo:
_cleanUpUUIDMapsForPeerInfo:
objectForPeerInfo:
setObject:forPeerInfo:
removeObjectForPeerInfo:
_objectsByUUID
_uuidsByAssistantIdentifier
_uuidsByRapportIdentifier
_uuidsByIdsDeviceIdentifier
_uuidsByHomeKitIdentifier
_responseHandlerConnection
_invalidateConnectionAfterMessageSent:
_usageResultHandlerConnection
_endpoint
_setEndpoint:
initWithXPCDictionary:
encodeWithXPCDictionary:
fallbackXPCEncodableClass
failWithError:
completeWithResponse:
reportUsageResult:
_remoteResponseListenerEndpoint
_usageResultListenerEndpoint
voiceOverTouchEnabledPreferenceDidChange:
vibrationDisabledPreferenceDidChange:
_fetchIsVoiceOverTouchEnabled
_fetchIsVibrationDisabled
_setState:clearDirtyFlags:
_updateVoiceOverTouchEnabledPreference
_updateVibrationDisabledPreference
setRepresentation
_stateLock
_stateDirtyFlags
T@"AFAccessibilityState",R,C,N
B16@0:8
@24@0:8^{_NSZone=}16
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8@"NSDictionary"16
@"NSDictionary"16@0:8
@104@0:8@16@24@32@40@48@56@64@72@80@88@96
@24@0:8Q16
v16@0:8
@"NSString"
@"NSNumber"
v24@0:8@"NSString"16
v24@0:8@"NSNumber"16
@"AFCoreAnalyticsDeviceContextPayload"
{_mutationFlags="isDirty"b1"hasNearbyProductType"b1"hasProximity"b1"hasAlarmFiring"b1"hasTimerFiring"b1"hasPlaybackState"b1"hasPlaybackRecency"b1"hasHomeAnnouncementState"b1"hasHomeAnnouncementRecency"b1"hasNearbyDevicesRequestIdentifier"b1"hasTargetedResult"b1"hasContextIdentifier"b1}
@24@0:8@?16
v28@0:8@16B24
v28@0:8@"AFNetworkAvailability"16B24
B32@0:8@16^@24
B40@0:8@16@24^@32
B48@0:8@16@24@32^@40
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v32@0:8@16f24f28
v32@0:8@"AFAudioPowerUpdater"16f24f28
v40@0:8@16@24@32
v40@0:8@"AFAccessibilityObserver"16@"AFAccessibilityState"24@"AFAccessibilityState"32
v32@0:8@16q24
v32@0:8@"AFDeviceRingerSwitchObserver"16q24
v72@0:8@16q24@32@40d48@56@?64
v72@0:8@"AFInterstitialProvider"16q24@"NSString"32@"NSString"40d48@56@?<v@?>64
@32@0:8@16@24
v20@0:8B16
v52@0:8@16B24@28@36@?44
v56@0:8@16B24@28@36B44@?48
v32@0:8@16@?24
v52@0:8@16B24q28d36@?44
v20@0:8I16
v24@0:8Q16
v40@0:8@16q24@32
v32@0:8@16@24
v28@0:8B16@20
v40@0:8q16@24@?32
v24@0:8q16
v24@0:8@?16
v28@0:8@16I24
v32@0:8q16@?24
v44@0:8B16@20@28@?36
v72@0:8q16@24@32@40d48@56@?64
v32@0:8q16@24
v32@0:8Q16@?24
v40@0:8Q16q24@?32
v48@0:8Q16q24@32@?40
v24@0:8B16B20
v48@0:8@16@24@32@40
@24@0:8q16
v36@0:8@16@24B32
@?24@0:8@16
v48@0:8@16q24@32@40
v32@0:8@16d24
I16@0:8
f16@0:8
v40@0:8@16@24@?32
v40@0:8@16Q24@?32
@"NSXPCConnection"
@"NSObject<OS_dispatch_queue>"
@"AFCallSiteInfo"
@"NSArray"
@"NSUUID"
@"AFWatchdogTimer"
@"AFOneArgumentSafetyBlock"
@"NSMutableDictionary"
@"AFAudioPowerUpdater"
@"AFClientConfiguration"
@"AFInterstitialProvider"
@"AFQueue"
@"NSError"
@"NSObject<OS_dispatch_group>"
@"AFPreferences"
@"AFInstanceContext"
@"AFAnalytics"
@"AFSiriClientStateManager"
@"<AFAssistantUIService>"
@"<AFSpeechDelegate>"
Vv20@0:8B16
Vv20@0:8I16
Vv32@0:8@16@?24
Vv40@0:8@16@24@?32
Vv24@0:8q16
Vv24@0:8Q16
Vv32@0:8@16@24
Vv24@0:8@16
Vv24@0:8@?16
Vv36@0:8@16I24@?28
Vv48@0:8@16B24B28Q32@?40
Vv32@0:8q16@?24
Vv40@0:8@16@24@32
Vv28@0:8B16@20
Vv40@0:8q16@24@?32
Vv32@0:8@"AceObject<SAAceCommand>"16@?<v@?@"AceObject<SAAceCommand>"@"NSError">24
Vv40@0:8@"NSString"16@"NSURL"24@?<v@?B>32
Vv32@0:8@"NSURL"16@?<v@?B>24
Vv32@0:8@"NSDictionary"16@"NSURL"24
Vv24@0:8@"INImage"16
Vv24@0:8@"NSString"16
Vv32@0:8@"NSString"16@"NSError"24
Vv32@0:8@"NSString"16@?<v@?B>24
Vv32@0:8@"AFRequestInfo"16@?<v@?B>24
Vv24@0:8@?<v@?@"NSArray">16
Vv32@0:8@"AFXPCWrapper"16@?<v@?>24
Vv36@0:8@"NSString"16I24@?<v@?>28
Vv48@0:8@"NSString"16B24B28Q32@?<v@?>40
Vv24@0:8@?<v@?>16
Vv32@0:8q16@?<v@?dd@"NSError">24
Vv32@0:8@"NSError"16@?<v@?>24
Vv24@0:8@"SASSpeechRecognized"16
Vv32@0:8@"AFSpeechInterpretation"16@"NSString"24
Vv24@0:8@"SASSpeechPartialResult"16
Vv24@0:8@"NSError"16
Vv40@0:8@"NSArray"16@"NSArray"24@"NSString"32
Vv24@0:8@"NSDictionary"16
Vv28@0:8B16@"NSDictionary"20
Vv24@0:8@"AFAudioPlaybackRequest"16
Vv32@0:8@"AFAudioPlaybackRequest"16@"NSError"24
Vv40@0:8q16@"INIntent"24@?<v@?BB>32
@"AFConnection"
@76@0:8q16@24B32B36B40Q44@52@60@68
@68@0:8q16@24B32B36B40Q44@52@60
v24@0:8d16
@"AFInterstitialConfiguration"
@"NSMutableArray"
@"<AFInterstitialProviderDelegate>"
@40@0:8q16@24@32
@24@0:8d16
q16@0:8
d16@0:8
@32@0:8@16@?24
@"<AFRelinquishableAssertion>"32@0:8@"AFAssertionContext"16@?<v@?@"AFAssertionContext"@"NSError">24
@"AFTestRequestOptions"
{_mutationFlags="isDirty"b1"hasRequestPath"b1"hasInputOrigin"b1"hasIsEyesFree"b1}
@72@0:8@16@24@32q40@48q56@64
@40@0:8@16@24@32
@56@0:8@16q24@32q40@48
@48@0:8@16q24@32@40
v64@0:8@16@24^@32^@40^@48^@56
@32@0:8@16q24
@"AFVoiceInfo"
@64@0:8q16@24@32@40@48@56
@"AFExperimentGroup"
v24@0:8@"AFExperimentGroup"16
v24@0:8@"NSArray"16
@"AFExperimentConfiguration"
{_mutationFlags="isDirty"b1"hasType"b1"hasIdentifier"b1"hasVersion"b1"hasControlGroup"b1"hasExperimentGroups"b1"hasSalt"b1}
Vv40@0:8@16q24@?32
Vv48@0:8@16@24@32@?40
Vv40@0:8@"NSData"16q24@?<v@?@"NSData"@"NSError">32
Vv40@0:8@"NSDictionary"16q24@?<v@?@"NSDictionary"@"NSDictionary">32
Vv48@0:8@"NSData"16@"NSString"24@"NSString"32@?<v@?@"NSError">40
Vv24@0:8@?<v@?@"NSString"@"NSError">16
Vv32@0:8@"NSString"16@?<v@?@"NSError">24
v40@0:8@16q24@?32
Vv56@0:8@16@24@32@40@?48
Vv56@0:8@"NSString"16@"NSString"24@"NSDictionary"32@"AFCommandExecutionInfo"40@?<v@?@"NSDictionary"@"NSArray"@"NSError">48
Vv56@0:8@"NSString"16@"NSString"24@"NSUUID"32@"AFSyncInfo"40@?<v@?>48
Vv48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?@"AFSyncSnapshot">40
Vv32@0:8@"NSString"16@"NSString"24
Vv40@0:8@"NSString"16@"NSString"24@?<v@?>32
Vv72@0:8@16@24@32@40@48@56@?64
Vv44@0:8@16@24B32@?36
Vv72@0:8@"NSString"16@"NSString"24@"NSArray"32@"NSArray"40@"NSString"48@"NSUUID"56@?<v@?B>64
Vv24@0:8@?<v@?B>16
Vv40@0:8@"SABaseCommand"16@"AFCommandExecutionInfo"24@?<v@?@"SABaseCommand"@"NSError">32
Vv44@0:8@"NSSet"16@"NSString"24B32@?<v@?@"NSArray">36
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
@"AFLinkedListItem"
@"<AFQueueDelegate>"
@32@0:8q16@24
@"AFBluetoothWirelessSplitterSessionInfo"
{_mutationFlags="isDirty"b1"hasState"b1"hasDeviceAddresses"b1}
@48@0:8q16@24@32@40
@"NSURL"
q24@0:8@16
@68@0:8@16q24B32@36q44@52@60
@36@0:8@16q24B32
@44@0:8@16q24q32B40
@52@0:8@16q24@32q40B48
@88@0:8@16q24q32q40@48@56@64@72@80
@"NSDate"
v24@0:8@"NSDate"16
@"AFHomeAccessorySiriDataSharingChangeLogEvent"
{_mutationFlags="isDirty"b1"hasDate"b1"hasPreviousOptInStatus"b1"hasNewOptInStatus"b1"hasChangeSource"b1"hasChangeReason"b1"hasBuildVersion"b1"hasProductVersion"b1"hasSchemaVersion"b1"hasLogEventIdentifier"b1}
@"NSUUID"16@0:8
@"AceObject"16@0:8
@"AFDialogPhase"16@0:8
@"AFDataStore"16@0:8
@96@0:8@16@24q32@40@48q56@64B72B76B80B84@88
@88@0:8@16q24@32@40q48@56B64B68B72B76@80
@80@0:8q16@24@32q40@48B56B60B64B68@72
@"AceObject"
@"AFDialogPhase"
@"AFDataStore"
@"NSURL"16@0:8
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
v32@0:8@?16@?24
@"AFOutputVoiceDescriptor"
{_mutationFlags="isDirty"b1"hasLocalizedDisplay"b1"hasLocalizedDisplayWithRegion"b1}
@"AFAssertionContext"16@0:8
@40@0:8@16@24@?32
@"AFTwoArgumentSafetyBlock"
@"AFAssertionContext"
v32@0:8@16Q24
v32@0:8@"AFAssertionContext"16Q24
v32@0:8@"NSError"16Q24
@"_AFAssertionImpl"
@"AFAssertionCoordinator"
v40@0:8@16@24Q32
v32@0:8@?16@24
v48@0:8@16@24@32Q40
@"<AFAssertionCoordinatorDelegate>"
@"NSMutableSet"
@40@0:8Q16q24@32
@"AFSpeechRequestOptions"
v24@0:8@"AFSpeechRequestOptions"16
@"AFSetAudioSessionActiveContext"
{_mutationFlags="isDirty"b1"hasOptions"b1"hasReason"b1"hasSpeechRequestOptions"b1}
@56@0:8Q16@24@32d40@48
@"NSDictionary"
v24@0:8@"NSDictionary"16
{_mutationFlags="isDirty"b1"hasTimestamp"b1"hasReason"b1"hasEffectiveDate"b1"hasExpirationDuration"b1"hasUserInfo"b1}
@"AFRequestInfo"
v40@0:8@"AFSiriRequest"16@"NSError"24Q32
v32@0:8@"AFSiriResponse"16Q24
@"AFSiriRequest"
@"<AFSiriTaskDelivering>"
@"NSXPCListener"
@40@0:8@16Q24@32
{_mutationFlags="isDirty"b1"hasIdentifier"b1"hasAllocation"b1"hasProperties"b1}
@40@0:8@16q24@32
v24@0:8@"NSUUID"16
@"AFInstanceInfo"
{_mutationFlags="isDirty"b1"hasInstanceUUID"b1"hasApplicationType"b1"hasApplicationUUID"b1}
@32@0:8d16@?24
@40@0:8d16@24@?32
@"NSObject<OS_dispatch_source>"
@"AFMultiUserStateSnapshot"
{_mutationFlags="isDirty"b1"hasVtSatScore"b1"hasConfidenceScores"b1}
@56@0:8Q16@24@32q40Q48
@"AFMyriadPerceptualAudioHash"
@"AFMyriadGoodnessScoreOverrideState"
v24@0:8@"AFMyriadPerceptualAudioHash"16
v24@0:8@"AFMyriadGoodnessScoreOverrideState"16
@"AFMyriadContext"
{_mutationFlags="isDirty"b1"hasTimestamp"b1"hasPerceptualAudioHash"b1"hasOverrideState"b1"hasActivationSource"b1"hasActivationExpirationTime"b1}
Vv48@0:8q16Q24@32@?40
Vv40@0:8@"AFRequestInfo"16@"AFSiriActivationContext"24@?<v@?@"AFSiriActivationResult">32
Vv48@0:8q16Q24@"AFSiriActivationContext"32@?<v@?@"AFSiriActivationResult">40
Vv32@0:8@"AFSiriActivationContext"16@?<v@?@"AFSiriActivationResult">24
Vv40@0:8@"INIntent"16@"NSString"24@?<v@?@"INIntentResponse"@"NSError">32
Vv40@0:8@"INIntentForwardingAction"16@"NSString"24@?<v@?@"INIntentForwardingActionResponse">32
@"NSRegularExpression"
v36@0:8@"AFAssertionCoordinator"16@"<AFAssertion>"24B32
@"NSObject<OS_xpc_object>"
Vv32@0:8@"NSArray"16@?<v@?>24
@32@0:8@16^@24
@"STTimer"
B32@0:8^f16^f24
@"AFXPCWrapper"
@"_AFAudioPowerXPCSharedMemory"
^{__CFArray=}
@"CPDistributedMessagingCenter"
@"AFEndpointInfo"
{_mutationFlags="isDirty"b1"hasIdentifier"b1"hasMediaRouteIdentifier"b1}
v32@0:8@"UNNotificationRequest"16@?<v@?@"NSError">24
v24@0:8@"UNNotificationResponse"16
@32@0:8q16q24
@"AFAccessibilityState"
{_mutationFlags="isDirty"b1"hasIsVoiceOverTouchEnabled"b1"hasIsVibrationDisabled"b1}
@32@0:8Q16Q24
@32@0:8@16Q24
v32@0:8Q16@24
v32@0:8Q16@?<v@?^vI>24
@108@0:8@16@24B32@36q44d52q60d68@76@84@92@100
v24@0:8@"NSURL"16
@"AFClockTimer"
{_mutationFlags="isDirty"b1"hasTimerID"b1"hasTimerURL"b1"hasIsFiring"b1"hasTitle"b1"hasState"b1"hasDuration"b1"hasType"b1"hasFireTimeInterval"b1"hasFireDate"b1"hasFiredDate"b1"hasDismissedDate"b1"hasLastModifiedDate"b1}
Vv24@0:8@?<v@?@"NSError">16
Vv40@0:8@16Q24@32
Vv32@0:8@16Q24
Vv40@0:8@"NSString"16Q24@"NSUUID"32
Vv32@0:8@"NSData"16Q24
v48@0:8@16@24Q32@?40
@28@0:8@16B24
@"SASyncAppMetaData"
@"NSSet"
@"AFSpeechTestRequestOptions"
{_mutationFlags="isDirty"b1"hasJitContext"b1"hasOverrideModelPath"b1}
@52@0:8@16@24@32B40d44
@60@0:8@16@24@32@40B48d52
@60@0:8@16@24@32B40d44@52
@68@0:8@16@24@32@40B48d52@60
@"AFSpeechRecognition"
@"AFSpeechAudioAnalytics"
@"AFSpeechLatticeMitigatorResult"
@"AFSpeechRecordingAlertBehavior"
{_mutationFlags="isDirty"b1"hasStyle"b1"hasBeepSoundID"b1}
@"SASSpeechRecognized"
v24@0:8@"SASSpeechRecognized"16
@"AFSpeechInfo"
{_mutationFlags="isDirty"b1"hasSpeechRecognizedCommand"b1}
@"NSData"
v24@0:8@"NSData"16
{_mutationFlags="isDirty"b1"hasData"b1}
Vv28@0:8@16B24
Vv44@0:8@16B24@28@?36
v32@0:8B16B20@?24
Vv28@0:8B16@?20
Vv56@0:8@16@24Q32@40@?48
Vv40@0:8@16Q24@?32
Vv36@0:8f16@20@?28
Vv60@0:8@16@24@32@40B48@?52
Vv32@0:8B16B20@?24
Vv32@0:8@16q24
Vv40@0:8@16@24q32
Vv52@0:8q16B24q28@36@?44
Vv56@0:8@16d24d32q40@?48
Vv24@0:8@?<v@?@"NSArray"@"NSError">16
Vv28@0:8@"NSDictionary"16B24
Vv24@0:8@?<v@?@"NSDictionary"@"NSError">16
Vv44@0:8@"NSArray"16B24@"NSString"28@?<v@?@"NSArray">36
v32@0:8B16B20@?<v@?@"NSArray">24
Vv28@0:8B16@?<v@?@"NSArray">20
Vv32@0:8@"AFVoiceInfo"16@?<v@?>24
Vv32@0:8@"NSString"16@?<v@?>24
Vv40@0:8@"NSString"16@"AFVoiceInfo"24@?<v@?@"NSDictionary"@"NSError">32
Vv40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError">32
Vv48@0:8@"NSString"16@"NSString"24@"NSData"32@?<v@?@"NSData"@"NSError">40
Vv32@0:8@"AFRequestInfo"16@?<v@?@"NSError">24
Vv24@0:8@"NSURL"16
Vv56@0:8@"NSString"16@"NSString"24Q32@"NSDictionary"40@?<v@?@"NSError">48
Vv32@0:8@"NSURL"16@?<v@?@"NSError">24
Vv40@0:8@"AFRequestInfo"16@"NSString"24@?<v@?@"NSError">32
Vv40@0:8@"AFAudioPlaybackRequest"16Q24@?<v@?@"NSError">32
Vv28@0:8@"AFAudioPlaybackRequest"16B24
Vv40@0:8@"NSDictionary"16@"NSString"24@?<v@?@"NSError">32
Vv48@0:8@"NSArray"16@"NSString"24@"NSString"32@?<v@?@"NSError">40
Vv24@0:8@?<v@?@"NSDate"@"NSError">16
Vv32@0:8@"NSString"16@?<v@?@"NSDictionary"@"NSError">24
Vv40@0:8@"NSString"16@"NSString"24@?<v@?@"NSArray"@"NSError">32
Vv32@0:8@"NSString"16@?<v@?@"NSArray"@"NSError">24
Vv24@0:8@?<v@?@"AFExperimentContext"@"NSError">16
Vv32@0:8@"NSString"16@?<v@?@"NSArray">24
Vv24@0:8@?<v@?@"SAPerson"@"NSError">16
Vv24@0:8@?<v@?B@"NSError">16
Vv32@0:8@"NSDictionary"16@?<v@?>24
Vv24@0:8@?<v@?@"NSDictionary">16
Vv32@0:8@"NSUUID"16@?<v@?@"AFPeerInfo">24
Vv24@0:8@?<v@?@"NSArray"B>16
Vv24@0:8@"NSNumber"16
Vv24@0:8@?<v@?@"AFPeerInfo"@"NSArray">16
Vv32@0:8@"NSString"16@?<v@?@"AFExperiment"@"NSError">24
Vv32@0:8@"NSString"16@?<v@?f@"NSError">24
Vv36@0:8f16@"NSString"20@?<v@?@"NSError">28
Vv32@0:8@"NSString"16@?<v@?@"AFBluetoothDeviceInfo">24
Vv32@0:8@"NSUUID"16@?<v@?@"AFBluetoothDeviceInfo">24
Vv24@0:8@?<v@?@"AFBluetoothWirelessSplitterSessionInfo">16
Vv60@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40B48@?<v@?@"NSError">52
Vv24@0:8@?<v@?@"NSString">16
Vv24@0:8@?<v@?@"NSString"@"NSArray">16
Vv44@0:8@"NSString"16@"NSString"24B32@?<v@?@"NSError">36
Vv32@0:8B16B20@?<v@?B>24
Vv32@0:8@"NSString"16@?<v@?@"NSString"@"NSError">24
Vv72@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@"NSString"48@"NSString"56@?<v@?@"NSError">64
Vv24@0:8@?<v@?@"NSString"@"NSString"@"NSError">16
Vv28@0:8B16@?<v@?@"NSError">20
Vv28@0:8B16@?<v@?>20
Vv32@0:8@"NSNumber"16@?<v@?>24
Vv32@0:8q16@?<v@?>24
Vv32@0:8q16@?<v@?@"NSDate">24
Vv32@0:8@"NSDate"16q24
Vv40@0:8@"NSString"16q24@?<v@?@"NSDate">32
Vv40@0:8@"NSDate"16@"NSString"24q32
Vv24@0:8@?<v@?q>16
Vv24@0:8@?<v@?@"NSUUID">16
Vv24@0:8@?<v@?@"AFAudioSessionCoordinationSnapshot">16
Vv32@0:8@"NSDictionary"16@?<v@?@"NSDictionary"@"NSError">24
Vv52@0:8q16B24q28@"NSString"36@?<v@?@"NSError">44
Vv32@0:8@"AFDeleteSiriHistoryContext"16@?<v@?@"NSError">24
Vv32@0:8@"NSString"16@?<v@?@"NSURL"@"NSError">24
Vv56@0:8@"NSString"16d24d32q40@?<v@?@"NSURL"@"NSError">48
Vv32@0:8@"AFMyriadAdvertisementContext"16@?<v@?@"NSArray"@"NSError">24
Vv32@0:8@"NSUUID"16@?<v@?B@"NSError">24
Vv48@0:8@"NSString"16@"NSString"24@"NSDictionary"32@?<v@?@"NSError">40
Vv24@0:8@?<v@?@"AFHomeAccessoryInfo">16
Vv32@0:8@"NSString"16@"AFSpeechRecognition"24
Vv32@0:8@"NSString"16@?<v@?@"NSDictionary">24
Vv32@0:8@"NSDictionary"16@?<v@?B@"NSError">24
Vv24@0:8@?<v@?@"NSSet"@"NSError">16
Vv32@0:8@"NSString"16@?<v@?@"NSString">24
Vv32@0:8@"NSString"16@?<v@?@"NSString"@"NSString"@"NSError">24
Vv32@0:8@"NSString"16@?<v@?@"AFPersonalUserSettings"@"NSError">24
@64@0:8@16@24@32@40@48@56
@"AFDeleteSiriHistoryContext"
{_mutationFlags="isDirty"b1"hasSuccessTitle"b1"hasSuccessBody"b1"hasSuccessButtonText"b1"hasErrorTitle"b1"hasErrorBody"b1"hasErrorButtonText"b1}
v40@0:8@16@24q32
v52@0:8q16B24q28@36@?44
v28@0:8B16@?20
v48@0:8q16q24q32@40
C16@0:8
v20@0:8C16
i16@0:8
v20@0:8i16
v20@0:8f16
@20@0:8B16
@32@0:8@16^B24
{atomic_flag="_Value"AB}
@"AFSafetyBlock"
v52@0:8@16@24@32@40f48
v40@0:8q16@24@32
@40@0:8@16@24d32
@"AFTreeNode"
d24@0:8@16
v32@0:8@?<v@?>16@?<v@?@"STSiriContext">24
@"AFSiriTaskmaster"
@"AFDeviceRequestHandlingRecord"
{_mutationFlags="isDirty"b1"hasRequestID"b1"hasDeviceRoles"b1}
@52@0:8B16@20@28@36@44
@"AFAudioSessionCoordinationSystemInfo"
{_mutationFlags="isDirty"b1"hasIsSupportedAndEnabled"b1"hasHomeKitRoomName"b1"hasHomeKitMediaSystemIdentifier"b1"hasMediaRemoteGroupIdentifier"b1"hasMediaRemoteRouteIdentifier"b1}
v28@0:8@16i24
v40@0:8@16Q24Q32
v28@0:8@"AFNotifyObserver"16i24
v40@0:8@"AFNotifyObserver"16Q24Q32
v24@0:8@"<AFAnnouncementRequestCapabilityProvidingDelegate>"16
v24@0:8@?<v@?Q>16
@"<AFAnnouncementRequestCapabilityProviding>"16@0:8
@"NSArray"24@0:8q16
B20@0:8B16
@"AFSettingsConnection"
@"AFNotifyObserver"
@"NSHashTable"
@"AFSiriAnnouncementRoute"
v32@0:8d16@24
@24@0:8#16
v56@0:8@16@24@32@40B48B52
v56@0:8@16q24@32@40@48
@"<AFConversationDelegate>"
@"<AFConversationStorable>"
@"BBAction"
@40@0:8Q16@24d32
@"AFMyriadAdvertisementContext"
{_mutationFlags="isDirty"b1"hasGeneration"b1"hasContextData"b1"hasContextFetchDelay"b1}
@72@0:8@16@24@32d40d48@?56@?64
@84@0:8@16q24B32B36B40B44f48@52@60@68@76
@"AFAudioPlaybackRequest"
v24@0:8@"AFAccessibilityState"16
v24@0:8@"AFAudioPlaybackRequest"16
{_mutationFlags="isDirty"b1"hasAccessibilityState"b1"hasDeviceRingerSwitchState"b1"hasIsDeviceInCarDNDMode"b1"hasIsDeviceInStarkMode"b1"hasIsDeviceWatchAuthenticated"b1"hasAreAnnouncementRequestsPermittedByPresentationWhileActive"b1"hasOutputVolume"b1"hasTapToSiriAudioPlaybackRequest"b1"hasTwoShotAudioPlaybackRequest"b1"hasDeviceSetupFlowBeginDate"b1"hasDeviceSetupFlowEndDate"b1}
@244@0:8I16{?=[64S]^{__CFString}^S*{?=qq}qq}20Q204^I212^B220^B228^B236
@236@0:8I16{?=[64S]^{__CFString}^S*{?=qq}qq}20Q204^I212^B220^B228
@60@0:8@16B24^@28^B36^B44^B52
@56@0:8@16^@24^B32^B40^B48
@40@0:8@16^@24^B32
@48@0:8@16^@24^B32^B40
@"NSLocale"
@"NSString"24@0:8@"NSString"16
@"NSString"32@0:8@"NSString"16^B24
@24@0:8@"AceObject"16
v24@0:8@"AFBulletin"16
@"NSURL"24@0:8@"NSString"16
@48@0:8@16Q24@32@40
@"<AFNotifyObserverDelegate>"
{_flags="delegateRespondsToDidReceiveNotificationWithToken"b1"delegateRespondsToDidChangeStateFromTo"b1}
@"NSDateFormatter"
Vv40@0:8@16@24B32B36
Vv44@0:8@16B24@28@36
Vv32@0:8q16@24
Vv40@0:8@16q24@32
Vv48@0:8@16q24@32@40
Vv48@0:8@"NSString"16@"AFDictationOptions"24@"AFSpeechRequestOptions"32@?<v@?@"NSXPCListenerEndpoint">40
Vv40@0:8@"NSString"16@"AFDictationOptions"24@"AFSpeechRequestOptions"32
Vv24@0:8@"AFSpeechRequestOptions"16
Vv40@0:8@"AFDictationOptions"16@"NSString"24B32B36
Vv24@0:8@"NSData"16
Vv32@0:8@"AFSpeechCorrectionInfo"16@"NSDictionary"24
Vv32@0:8@"AFSpeechCorrectionInfo"16@"NSString"24
Vv32@0:8@"NSString"16@"AFDictationOptions"24
Vv44@0:8@"NSURL"16B24@"NSString"28@"AFDictationOptions"36
Vv32@0:8q16@"NSString"24
Vv32@0:8@"NSString"16@?<v@?B@"NSError">24
Vv40@0:8@"NSError"16q24@"NSDictionary"32
Vv48@0:8@"NSError"16q24@"NSString"32@"NSDictionary"40
v56@0:8@16@24@32@40@48
v40@0:8@16@24B32B36
B28@0:8@16B24
@?40@0:8@16@24@32
@"<AFDictationDelegate>"
@"NSMutableData"
@"AFAnalyticsEvent"
@"AFAnalyticsTurnBasedInstrumentationContext"
v44@0:8@16B24@28@36
Vv56@0:8@16@24@32@40@48
Vv24@0:8d16
Vv36@0:8@16@24B32
Vv24@0:8@"AFXPCWrapper"16
Vv40@0:8@"AFDictationOptions"16@"NSString"24@"NSString"32
Vv56@0:8@"NSArray"16@"NSArray"24@"NSString"32@"NSDictionary"40@"AFSpeechAudioAnalytics"48
Vv32@0:8@"NSArray"16@"NSString"24
Vv32@0:8@"NSFileHandle"16@"NSError"24
Vv40@0:8@"NSArray"16@"NSString"24B32B36
Vv24@0:8@"AFSpeechPackage"16
Vv36@0:8@"NSString"16@"NSDictionary"24B32
Vv24@0:8@"SASMultilingualSpeechRecognized"16
@"AFDictationConnection"
B32@0:8@16@?24
B32@0:8@"AFSiriActivationContext"16@?<v@?@"AFSiriActivationResult">24
@68@0:8@16@24I32I36B40B44B48B52B56B60B64
@"AFBluetoothDeviceInfo"
{_mutationFlags="isDirty"b1"hasAddress"b1"hasDeviceUID"b1"hasVendorID"b1"hasProductID"b1"hasIsAdvancedAppleAudioDevice"b1"hasSupportsInEarDetection"b1"hasSupportsVoiceTrigger"b1"hasSupportsSpokenNotification"b1"hasSupportsListeningModeANC"b1"hasSupportsListeningModeTransparency"b1"hasSupportsAnnounceCall"b1}
v24@0:8@"CARSession"16
v32@0:8@"CARSession"16@"CARSessionConfiguration"24
Q20@0:8B16
@"CARSessionStatus"
v24@0:8@"AFSpeechRecordingAlertBehavior"16
@"AFSpeechRecordingAlertPolicy"
{_mutationFlags="isDirty"b1"hasStartingAlertBehavior"b1"hasStoppedAlertBehavior"b1"hasStoppedWithErrorAlertBehavior"b1}
@56@0:8@16@24@32@40q48
@"AFExperiment"
{_mutationFlags="isDirty"b1"hasConfigurationIdentifier"b1"hasConfigurationVersion"b1"hasDeploymentGroupIdentifier"b1"hasDeploymentGroupProperties"b1"hasDeploymentReason"b1}
@"AFRequestCompletionOptions"
@"SAStartRequest"
@"SAStartLocalRequest"
@40@0:8r*16@24Q32
@96@0:8@16@24@32@40@48@56B64B68@72@80q88
@"AFHomeAccessoryInfo"
{_mutationFlags="isDirty"b1"hasUniqueIdentifier"b1"hasLoggingUniqueIdentifier"b1"hasName"b1"hasModel"b1"hasRoomName"b1"hasAssistantIdentifier"b1"hasIsSpeaker"b1"hasHasActiveThirdPartyMusicSubscription"b1"hasManufacturer"b1"hasCategoryType"b1"hasSchemaCategoryType"b1}
@"NSDate"16@0:8
@"<AFClockItemStorageDelegate>"
@28@0:8B16@?20
Vv32@0:8@"SABaseCommand"16@?<v@?@"SABaseCommand"@"NSError">24
@48@0:8@16B24B28@?32@?40
v40@0:8@16B24B28@?32
v48@0:8@16B24B28@?32@?40
v44@0:8@16B24@?28@?36
v40@0:8@16@?24@?32
Vv40@0:8@16B24B28@?32
Vv40@0:8@"SABaseCommand"16B24B28@?<v@?B@"NSError">32
@48@0:8@16@24@32@40
@56@0:8@16q24@32@40@48
{?=@@@@}16@0:8
@?16@0:8
@"STSiriContext"
@"AFLanguageDetectionUserContext"
@44@0:8B16q20q28q36
@"AFBluetoothHeadphoneInEarDetectionState"
{_mutationFlags="isDirty"b1"hasIsEnabled"b1"hasPrimaryEarbudSide"b1"hasPrimaryInEarStatus"b1"hasSecondaryInEarStatus"b1}
@96@0:8q16B24@28@36@44@52@60@68@76@84B92
v24@0:8@"NSError"16
v24@0:8@"AFExperiment"16
@"AFEnablementConfigurationProviderParameters"
{_mutationFlags="isDirty"b1"hasEnablementFlow"b1"hasNewUser"b1"hasUserStatusFetchError"b1"hasDateStartedResolvingUserStatus"b1"hasDateEndedResolvingUserStatus"b1"hasExperiment"b1"hasExperimentFetchError"b1"hasDateStartedResolvingExperiment"b1"hasDateEndedResolvingExperiment"b1"hasOutputVoiceCountForRecognitionLanguage"b1"hasRecognitionLanguageWithMultipleOutputVoicesExists"b1}
@36@0:8@16B24@28
@"AFPeerInfo"
@56@0:8@16@24@32@40@48
@"AFDeviceContextHistoryConfiguration"
v20@0:8S16
v24@0:8C16C20
v24@0:8f16i20
S16@0:8
v24@0:8@?<v@?@"NSString"@"<SiriCoreSQLiteValue>"^B>16
@40@0:8@16@24q32
@24@0:8B16B20
{AvailabilityState="availabilityIsKnown"b1"isAvailable"b1}
@"NSString"24@0:8@"SAUIListItem"16
@"SAUIListItem"24@0:8@"NSString"16
@"NSData"16@0:8
@"AFDisambiguationInfo"16@0:8
v24@0:8@"AFDisambiguationInfo"16
Vv32@0:8@"NSDictionary"16@"NSString"24
Vv48@0:8@"NSData"16@"NSString"24@"NSString"32@?<v@?>40
Vv40@0:8@"NSString"16@"NSString"24@?<v@?@"NSData">32
@"NSDictionary"24@0:8@"NSString"16
v32@0:8@"NSDictionary"16@"NSString"24
@"NSData"32@0:8@"NSString"16@"NSString"24
v40@0:8@"NSData"16@"NSString"24@"NSString"32
v48@0:8@16@24@32@?40
v32@0:8q16@?<v@?@"<AFOpportuneSpeakingModel>"@"NSString">24
v32@0:8q16@"NSString"24
v40@0:8@"NSString"16@"NSString"24@"NSString"32
v48@0:8@"NSString"16@"NSDate"24@"NSDate"32@?<v@?BB>40
v36@0:8@16f24@28
v36@0:8@"NSString"16f24@"<AFOpportuneSpeakable>"28
v24@0:8@"<AFOpportuneSpeakingModelDelegate>"16
v24@0:8@"<AFOpportuneSpeakable>"16
v32@0:8q16@"<AFOpportuneSpeakable>"24
@"AFRequestHandlingContext"
{_mutationFlags="isDirty"b1"hasRequestID"b1"hasInputDeviceID"b1"hasInputAssistantID"b1}
@48@0:8q16d24@32@40
B32@0:8d16d24
Q20@0:8C16
c28@0:8C16@20
d28@0:8C16@20
@28@0:8C16@20
@24@0:8r^[16C]16
@64@0:8@16@24@32@40@48B56B60
@"TUHandle"
v56@0:8@16q24Q32@40@?48
v48@0:8@"AFSiriActivationListener"16@"INIntent"24@"NSString"32@?<v@?@"INIntentResponse"@"NSError">40
v48@0:8@"AFSiriActivationListener"16@"INIntentForwardingAction"24@"NSString"32@?<v@?@"INIntentForwardingActionResponse">40
v48@0:8@"AFSiriActivationListener"16@"AFRequestInfo"24@"AFSiriActivationContext"32@?<v@?@"NSError">40
v56@0:8@"AFSiriActivationListener"16q24Q32@"AFSiriActivationContext"40@?<v@?@"NSError">48
v40@0:8@"AFSiriActivationListener"16@"AFSiriActivationContext"24@?<v@?@"NSError">32
@"AFSiriActivationListener"
@24@0:8^@?16
Vv52@0:8@16@24@32B40@?44
Vv24@0:8@?<v@?@"AFDeviceContext">16
Vv52@0:8@"NSDictionary"16@"NSDictionary"24@"NSString"32B40@?<v@?>44
Vv24@0:8@"AFDeviceContext"16
B24@0:8q16
@32@0:8@?16@24
@40@0:8@?16@24@32
@48@0:8@?16@24@32@40
B40@0:8@16@24@32
@"NSMethodSignature"
@"AFOpportuneSpeakingModelFeedback"
@"<_DKKnowledgeQuerying>"
@56@0:8Q16@24@32@40@48
@"AFMyriadSession"
{_mutationFlags="isDirty"b1"hasGeneration"b1"hasSessionId"b1"hasCurrentElectionAdvertisementId"b1"hasCurrentElectionAdvertisementData"b1"hasElectionAdvertisementDataByIds"b1}
d32@0:8d16Q24
v24@0:8@?<v@?B>16
@"UNNotification"
#24@0:8q16
v32@0:8@"<AFAnnouncementRequestCapabilityProviding>"16Q24
v28@0:8B16q20
@"<AFAnnouncementRequestCapabilityProviding>"
@136@0:8B16@20@28@36@44@52@60@68@76B84@88@96@104@112@120@128
v36@0:8@16B24@?28
v56@0:8@16@24Q32@40@?48
v28@0:8f16@?20
v36@0:8f16@20@?28
v60@0:8@16@24@32@40B48@?52
v56@0:8@16d24d32q40@?48
@"<AFSettingsDelegate>"
v44@0:8@16B24@28@?36
v76@0:8@16@24@32@40@48@56B64@?68
v24@0:8@"AFPeerInfo"16
v24@0:8@"AFAudioSessionCoordinationSystemInfo"16
@"AFAudioSessionCoordinationDeviceInfo"
{_mutationFlags="isDirty"b1"hasPeerInfo"b1"hasSystemInfo"b1}
{_mutationFlags="isDirty"b1"hasOverrideOption"b1"hasReason"b1}
v40@0:8@16d24@?32
@"AFSiriActivationConnection"
@80@0:8@16@24@32@40@48@56@64@72
v32@0:8q16@"NSArray"24
i24@0:8Q16
I24@0:8^{MyriadMetricsDataV1=CQCQCddCCCCCCdCCC[50C][50C][50C]C}16
d24@0:8^{MyriadMetricsDataV1=CQCQCddCCCCCCdCCC[50C][50C][50C]C}16
@24@0:8^{MyriadMetricsDataV1=CQCQCddCCCCCCdCCC[50C][50C][50C]C}16
@36@0:8@16I24d28
v48@0:8^{MyriadMetricsDataV1=CQCQCddCCCCCCdCCC[50C][50C][50C]C}16@24@32@?40
v40@0:8^{MyriadMetricsDataV1=CQCQCddCCCCCCdCCC[50C][50C][50C]C}16@24@?32
v44@0:8@16@24q32B40
@"AFSiriIncomingCall"
@32@0:8@16f24f28
@84@0:8@16@24@32@40@48@56@64B72q76
@"AFLocationSnapshot"
{_mutationFlags="isDirty"b1"hasLatitude"b1"hasLongitude"b1"hasAltitude"b1"hasDirection"b1"hasSpeed"b1"hasVerticalAccuracy"b1"hasHorizontalAccuracy"b1"hasPreciseLocationEnabled"b1"hasAccessState"b1}
@"AFAudioDeviceInfo"
{_mutationFlags="isDirty"b1"hasRoute"b1"hasIsRemoteDevice"b1"hasDeviceUID"b1}
@144@0:8B16B20B24B28B32B36@40q48q56q64q72q80q88q96q104q112q120q128q136
@"AFModesConfiguration"
{_mutationFlags="isDirty"b1"hasIsEyesFree"b1"hasIsForCarDND"b1"hasIsVoiceTriggerRequest"b1"hasIsConnectedToCarPlay"b1"hasIsRequestMadeWithPhysicalDeviceInteraction"b1"hasUserTypedInSiri"b1"hasModeOverrideValue"b1"hasDeviceRaised"b1"hasFaceDetected"b1"hasTouchScreenDetected"b1"hasButtonPressDetected"b1"hasFlatDevicePosture"b1"hasDeviceOrientation"b1"hasIsInWorkout"b1"hasIsBacklightOn"b1"hasIsInWaterLock"b1"hasIsInSleepLock"b1"hasIsInTheaterMode"b1"hasIsOnWrist"b1}
@48@0:8Q16@24@32@40
@"NSOrderedSet"
v24@0:8@"NSOrderedSet"16
@"AFClockAlarmSnapshot"
{_mutationFlags="isDirty"b1"hasGeneration"b1"hasDate"b1"hasAlarmsByID"b1"hasNotifiedFiringAlarmIDs"b1}
@88@0:8@16@24@32@40@48@56q64@72@80
@"AFServiceDeviceContext"
{_mutationFlags="isDirty"b1"hasIdentifier"b1"hasAssistantIdentifier"b1"hasMediaSystemIdentifier"b1"hasMediaRouteIdentifier"b1"hasSharedUserID"b1"hasRoomName"b1"hasProximity"b1"hasSerializedContextByKey"b1"hasMetricsContext"b1}
@"NSFileHandle"
@"NSXPCListenerEndpoint"
@"AFSpeechSynthesisRecord"
@"CLLocation"
v24@0:8#16
@44@0:8@16B24@28@36
@"AFExperimentState"
{_mutationFlags="isDirty"b1"hasLastSyncDate"b1"hasDidEnd"b1"hasEndingGroupIdentifier"b1"hasVersion"b1}
@"SISchemaClientAnyEvent"
@"SISchemaClientTurnContext"
@"AFSiriHomeAutomationRequestInfo"
{_mutationFlags="isDirty"b1"hasContext"b1}
@"AFClockTimerSnapshot"
{_mutationFlags="isDirty"b1"hasGeneration"b1"hasDate"b1"hasTimersByID"b1"hasNotifiedFiringTimerIDs"b1}
@"AFExperimentContext"
{_mutationFlags="isDirty"b1"hasExperimentsByConfigurationIdentifier"b1}
@"STContactAddress"
@32@0:8Q16@24
@"AFHomeAnnouncement"
v24@0:8@"AFHomeAnnouncement"16
@"AFHomeAnnouncementSnapshot"
{_mutationFlags="isDirty"b1"hasState"b1"hasLastPlayedAnnouncement"b1}
@"AFSiriTaskDeliveryHandler"
v32@0:8@"AFSiriTask"16@?<v@?@"NSError">24
@"AFSiriTaskService"
@"<AFSiriTaskServiceDelegate>"
v32@0:8@"AFSiriTaskUsageResult"16@"AFSiriRequest"24
v40@0:8@"AFSiriRequest"16@?<v@?>24@?<v@?@"AFSiriResponse"@"NSError">32
@"NSMapTable"
@"<AFSiriTaskmasterDelegate>"
@40@0:8@16^@24@?32
@"<AFUserNotificationAnnouncementSpeakingStateDelegate>"
@28@0:8Q16B24
@"AFCallStateSnapshot"
{_mutationFlags="isDirty"b1"hasCallState"b1"hasOnSpeaker"b1}
@"AFManagedStorageConnection"
@"STSiriMessage"
@56@0:8Q16i24i28Q32Q40Q48
@"AFMemoryInfo"
{_mutationFlags="isDirty"b1"hasVirtualMemorySizeInBytes"b1"hasNumberOfRegions"b1"hasPageSizeInBytes"b1"hasResidentMemorySizeInBytes"b1"hasPeakResidentMemorySizeInBytes"b1"hasPhysicalMemoryFootprintInBytes"b1}
@64@0:8Q16q24q32Q40@48@56
@"AFSiriActivationContext"
{_mutationFlags="isDirty"b1"hasTimestamp"b1"hasSource"b1"hasEvent"b1"hasOptions"b1"hasDeviceID"b1"hasUserInfo"b1}
v40@0:8q16Q24@32
v36@0:8q16@24B32
v40@0:8q16@?24@32
v40@0:8@16Q24@32
v32@0:8#16@24
v40@0:8#16Q24@32
v44@0:8q16Q24@32B40
v48@0:8q16Q24@?32@40
v40@0:8q16Q24@?32
@"<AFAnalyticsService>"
Vv48@0:8@16@24Q32@?40
Vv32@0:8@"AFAssertionContext"16@?<v@?@"AFAssertionContext"@"NSError">24
Vv48@0:8@"AFAssertionContext"16@"NSError"24Q32@?<v@?>40
@"AFMyriadGoodnessScoreOverrideContext"
C28@0:8d16B24
C44@0:8@16d24d32B40
C24@0:8@16
@"AFMyriadInstrumentation"
v48@0:8q16Q24@32@?40
@"<AFSiriActivationListenerDelegate>"
q40@0:8@16@24q32
B48@0:8Q16@24@32q40
v40@0:8r^v16^v24Q32
v24@0:8r^{myrAccessoryMessage=CQQdSCCCCCCCCC}16
@88@0:8Q16Q24d32S40C44C48C52C56C60C64C68C72C76@80
@36@0:8Q16B24@28
{myrAccessoryMessage="version"C"requestType"Q"session"Q"voiceTriggerEndTime"d"audioHash"S"goodnessScore"C"userConfidenceScore"C"tieBreaker"C"deviceClass"C"deviceGroup"C"productType"C"electionDecision"C"emergencyHandled"C"ack"C}
@"<AFUtteranceSuggestionsDelegate>"
@56@0:8@16@24q32@40@48
@"AFHomeAccessorySiriDataSharingPropagationLogEvent"
{_mutationFlags="isDirty"b1"hasDate"b1"hasAccessoryIdentifier"b1"hasPropagationEvent"b1"hasPropagationEventReason"b1"hasAssociatedChangeLogEventIdentifier"b1}
v40@0:8i16i20@24Q32
v36@0:8i16@20Q28
v44@0:8i16f20f24@28Q36
v88@0:8i16B20B24Q28@36@44@52I60@64@72Q80
v52@0:8i16B20@24I32@36Q44
v36@0:8@16i24Q28
@20@0:8C16
v24@0:8C16I20
v24@0:8B16i20
@"CDASchemaCDAScoreBoosters"
@"AFExperimentServerConfigurationInfo"
{_mutationFlags="isDirty"b1"hasConfigurationIdentifier"b1"hasConfigurationURL"b1"hasMaxTimeToSync"b1}
@56@0:8@16Q24Q32@40@48
{_mutationFlags="isDirty"b1"hasIdentifier"b1"hasStartedHostTime"b1"hasFinishedHostTime"b1"hasStartedDate"b1"hasFinishedDate"b1}
v24@0:8f16f20
v20@0:8c16
v28@0:8c16@20
v32@0:8d16@?24
v36@0:8@16f24@?28
v36@0:8@16f24Q28
v32@0:8Q16Q24
v36@0:8B16Q20@?28
d32@0:8d16d24
@48@0:8@16d24d32@40
v32@0:8d16d24
v36@0:8^f16^f24i32
v40@0:8@16f24f28Q32
v40@0:8@16f24f28@?32
@20@0:8S16
B20@0:8C16
@"AFPowerAssertionManager"
^{__CFNotificationCenter=}
@"AFMyriadRecord"
@"AFMyriadEmergencyCallPunchout"
@"SFDiagnostics"
{?="didRequestForBTLEScan"B"didRequestForBTLEAdvertisement"B}
{?="waitTimer"@"NSObject<OS_dispatch_source>""waitBlock"@?"isWaitTimerSuspended"B}
{?="advertTriggerAdvStartTime"@"NSDate""advertTriggerEndTime"@"NSDate"}
@"AFMyriadAdvertisementContextManager"
@"AFMyriadAdvertisementContextRecord"
@"AFMyriadGoodnessScoreEvaluator"
@"AFNotifyStatePublisher"
@"AFMyriadPreferences"
@"AWAttentionAwarenessClient"
v36@0:8B16@20@?28
@"BKSApplicationStateMonitor"
@"BKSProcessAssertion"
v24@0:8@?<v@?{?=@@@@B}>16
@144@0:8@16@24@32@40@48@56@64@72@80B88B92B96B100B104B108d112@120@128@136
v24@0:8@"CLLocation"16
@"AFSpeechParameters"
{_mutationFlags="isDirty"b1"hasLanguage"b1"hasInteractionIdentifier"b1"hasTask"b1"hasLoggingContext"b1"hasApplicationName"b1"hasProfile"b1"hasOverrides"b1"hasModelOverrideURL"b1"hasOriginalAudioFileURL"b1"hasNarrowband"b1"hasDetectUtterances"b1"hasCensorSpeech"b1"hasFarField"b1"hasSecureOfflineOnly"b1"hasShouldStoreAudioOnDevice"b1"hasMaximumRecognitionDuration"b1"hasInputOrigin"b1"hasLocation"b1"hasJitGrammar"b1}
@"BBBulletin"
{_mutationFlags="isDirty"b1"hasImagePath"b1"hasSymbolName"b1}
@"AFAnalyticsObserverConnection"
@40@0:8B16B20@24@?32
@32@0:8@16I24B28
@48@0:8@16@24@?32@40
v48@0:8@16@24@32^v40
@"AFKeyValueObservingDeliveryOptions"
@32@0:8@16d24
v24@0:8@"NSMutableDictionary"16
@"NSArray"16@0:8
v36@0:8Q16B24d28
v28@0:8i16Q20
@68@0:8@16@24q32f40d44d52@60
{_mutationFlags="isDirty"b1"hasItemURL"b1"hasItemData"b1"hasNumberOfLoops"b1"hasVolume"b1"hasFadeInDuration"b1"hasFadeOutDuration"b1"hasUserInfo"b1}
@"AFBundleResource"
{_mutationFlags="isDirty"b1"hasName"b1"hasExtension"b1}
@"STAlarm"
@24@0:8^v16
@"STCall"
v28@0:8C16@?20
@92@0:8@16B24@28@36@44@52@60@68@76@84
@"NSDateInterval"
v24@0:8@"NSDateInterval"16
v24@0:8@"AFAudioSessionCoordinationDeviceInfo"16
@"AFAudioSessionCoordinationSnapshot"
{_mutationFlags="isDirty"b1"hasCurrentOrUpNextDateInterval"b1"hasIsAudioSessionActive"b1"hasLocalActiveAssertionContexts"b1"hasLocalPendingAssertionContexts"b1"hasRemoteActiveAssertionContexts"b1"hasRemotePendingAssertionContexts"b1"hasLocalDevice"b1"hasRemoteQualifiedInRangeDevices"b1"hasRemoteQualifiedOutOfRangeDevices"b1"hasRemoteDisqualifiedDevices"b1}
@28@0:8B16Q20
{_mutationFlags="isDirty"b1"hasKeepsHistory"b1"hasHistoryBufferSize"b1}
@"AFMutableConversationItem"
@"AFBulletin"
v24@0:8@"AceObject"16
@"AFApplicationContext"
{_mutationFlags="isDirty"b1"hasAssociatedBundleIdentifier"b1"hasBulletin"b1"hasAceContext"b1"hasContextDictionary"b1"hasAceContexts"b1}
@"AFSharedConfidenceScore"
{_mutationFlags="isDirty"b1"hasSharedUserId"b1"hasConfidenceScore"b1}
@48@0:8@16@24q32@40
@"<AFAudioPowerUpdaterDelegate>"
@"<AFAudioPowerProviding>"
B28@0:8Q16i24
B28@0:8^Q16i24
Vv32@0:8Q16@?24
Vv24@0:8B16B20
Vv32@0:8Q16d24
Vv36@0:8@16B24@?28
Vv32@0:8q16@"AFSpeechRequestOptions"24
Vv32@0:8@"AFSetAudioSessionActiveContext"16@?<v@?@"AFSetAudioSessionActiveResult">24
Vv32@0:8Q16@?<v@?>24
Vv24@0:8@"AFClientConfiguration"16
Vv24@0:8@"AFModesConfiguration"16
Vv24@0:8@"NSDate"16
Vv40@0:8@"AFSpeechRequestOptions"16Q24@?<v@?@"NSError">32
Vv40@0:8@"AFSpeechRequestOptions"16@"SASPronunciationContext"24@?<v@?@"NSError">32
Vv40@0:8@"AFSpeechRequestOptions"16@"NSString"24@?<v@?@"NSError">32
Vv32@0:8q16@"NSError"24
Vv24@0:8@?<v@?BI>16
Vv36@0:8@"NSDictionary"16B24@?<v@?B>28
Vv24@0:8@"SASetApplicationContext"16
Vv32@0:8@"NSString"16@24
Vv24@0:8@"AFMetrics"16
Vv32@0:8@"NSArray"16@?<v@?@"NSArray"@"NSError">24
Vv32@0:8@"NSSet"16@?<v@?@"NSDictionary">24
Vv24@0:8@?<v@?@"AFClockTimerSnapshot"@"NSError">16
Vv24@0:8@"AFSpeechSynthesisRecord"16
Vv40@0:8@"NSString"16@"NSString"24@"NSDictionary"32
Vv32@0:8@"NSData"16@?<v@?@"NSString"@"NSData">24
Vv40@0:8@"NSDictionary"16@"NSString"24@?<v@?@"NSDictionary"@"NSError">32
Vv32@0:8@"AFApplicationInfo"16@?<v@?@"NSArray">24
Vv28@0:8@"NSURL"16B24
@"<AFBluetoothWirelessSplitterSessionStateObserverDelegate>"
v52@0:8@16@24@32B40@?44
@"_AFDeviceContextServiceDelegateProxy"
@"<AFDeviceContextConnectionDelegate>"
@"AFDeviceContext"
@"AFDeviceContextConnection"
v48@0:8@16@24@?32@?40
@"<AFSpeakableNamespaceProvider>"24@0:8@"AceObject"16
q24@0:8q16
@"NSObject<OS_dispatch_semaphore>"
@"AFSystemStateSnapshot"
{_mutationFlags="isDirty"b1"hasSleepState"b1}
@"AFApplicationContextSnapshot"
{_mutationFlags="isDirty"b1"hasApplicationContexts"b1}
@52@0:8@16@24f32@36@44
@"AFOutputVoiceColorDescriptor"
{_mutationFlags="isDirty"b1"hasHexColor"b1"hasColorName"b1"hasAlpha"b1"hasLocalizedOutputVoiceColor"b1"hasLocalizedOutputVoice"b1}
v24@0:8^v16
v32@0:8@16^v24
@28@0:8^v16B24
@40@0:8@16Q24Q32
{_mutationFlags="isDirty"b1"hasUtterance"b1"hasBeginTimestamp"b1"hasEndTimestamp"b1}
@"AFHomeInfo"
{_mutationFlags="isDirty"b1"hasHomeIdentifier"b1"hasActivityNotificationsEnabledForPersonalRequests"b1}
@68@0:8q16@24q32@40B48B52B56Q60
{_mutationFlags="isDirty"b1"hasStyle"b1"hasLanguageCode"b1"hasGender"b1"hasRecordRoute"b1"hasIsVoiceTrigger"b1"hasIsDucking"b1"hasIsTwoShot"b1"hasSpeechEndHostTime"b1}
@56@0:8Q16q24Q32q40@48
@"AFSiriActivationResult"
{_mutationFlags="isDirty"b1"hasActionType"b1"hasError"b1}
v24@0:8@"AFHomeInfo"16
v24@0:8@"AFEndpointInfo"16
v24@0:8@"AFInstanceInfo"16
v24@0:8@"AFSpeechInfo"16
v24@0:8@"AFRequestHandlingContext"16
@"AFCommandExecutionInfo"
{_mutationFlags="isDirty"b1"hasExecutionID"b1"hasRequestID"b1"hasTurnId"b1"hasOriginPeerInfo"b1"hasCurrentHomeInfo"b1"hasEndpointInfo"b1"hasInstanceInfo"b1"hasSpeechInfo"b1"hasRequestHandlingContextSnapshot"b1"hasDeviceRestrictions"b1"hasUserInfo"b1}
{?="eventType"b1}
B28@0:8@16i24
v36@0:8@16i24@28
@32@0:8r*16Q24
@60@0:8q16@24@32B40B44B48@52
@"NSIndexPath"
@52@0:8q16@24@32@40B48
@"AFMediaPlaybackStateSnapshot"
{_mutationFlags="isDirty"b1"hasPlaybackState"b1"hasNowPlayingTimestamp"b1"hasMediaType"b1"hasGroupIdentifier"b1"hasIsProxyGroupPlayer"b1}
@"AceObject<SAAceCommand>"
v48@0:8@16q24@32q40
@"AFConversation"
@"AFTriggerlessListeningOptions"
@108@0:8@16@24B32@36Q44Q52Q60Q68B76B80@84@92@100
@"AFClockAlarm"
{_mutationFlags="isDirty"b1"hasAlarmID"b1"hasAlarmURL"b1"hasIsFiring"b1"hasTitle"b1"hasType"b1"hasHour"b1"hasMinute"b1"hasRepeatOptions"b1"hasIsEnabled"b1"hasIsSnoozed"b1"hasFiredDate"b1"hasDismissedDate"b1"hasLastModifiedDate"b1}
@28@0:8I16@20
@"AFSetAudioSessionActiveResult"
{_mutationFlags="isDirty"b1"hasAudioSessionID"b1"hasError"b1}
v24@0:8@"AFDeviceContextConnection"16
v32@0:8@"AFDeviceContextConnection"16@"AFDeviceContext"24
v32@0:8@"<AFContextSnapshotTransforming>"16@"NSString"24
v36@0:8@"<AFContextSnapshot>"16@"AFDeviceContextMetadata"24B32
v44@0:8@16@24B32@?36
@"<AFContextDonation>"
{_mutationFlags="isDirty"b1"hasIsDeviceOwnedByCurrentUser"b1"hasAssistantIdentifier"b1"hasSharedUserIdentifier"b1"hasIdsIdentifier"b1"hasIdsDeviceUniqueIdentifier"b1"hasRapportEffectiveIdentifier"b1"hasHomeKitAccessoryIdentifier"b1"hasMediaSystemIdentifier"b1"hasMediaRouteIdentifier"b1"hasIsCommunalDevice"b1"hasRoomName"b1"hasName"b1"hasProductType"b1"hasBuildVersion"b1"hasUserInterfaceIdiom"b1"hasAceVersion"b1}
@28@0:8i16@20
@"AFClientInfo"
{_mutationFlags="isDirty"b1"hasProcessIdentifier"b1"hasProcessName"b1}
@24@0:8@"NSObject<OS_xpc_object>"16
v24@0:8@"NSObject<OS_xpc_object>"16
