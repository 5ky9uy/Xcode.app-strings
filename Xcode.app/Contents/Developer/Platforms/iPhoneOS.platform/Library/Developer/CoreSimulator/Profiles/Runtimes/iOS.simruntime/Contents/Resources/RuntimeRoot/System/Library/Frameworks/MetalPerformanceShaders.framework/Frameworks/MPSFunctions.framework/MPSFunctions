@(#)PROGRAM:MPSFunctions  PROJECT:MPS-1
INPUT(0)
Could not decompress stage. File format too new.
Could not decompress stage. Unknown type.
Error: file truncated at TRC stage
Error: file corrupted at TRC stage
CGColorTRCGetFunction
CGColorFunctionGetProperties
CGColorTRCGetGammaID
CGColorFunctionGetInputRange
CGColorFunctionGetOutputRange
File truncated: unable to read TRC 
File corrupted: unable to create TRC 
File corrupted: unknown property in TRC 
File corrupted: TRC input range invalid
File corrupted: TRC output range invalid
TRC Stage %p:
Channel %lu:
GammaID:      
Properties:   
Input clamp:  
Output clamp: 
Memory allocation failed. Could not make new MTLFunctionConstantValues object.
Memory allocation failed. Could not make new MTLFunctionDescriptor object.
%s_stage%lu_chan%lu
MPSFColorConversion_ExtractChannel%lu
NODE(temp_stage%lu_chan%lu) : FUNCTION( MPSFColorConversion_ExtractChannel%lu ), %s;
Failed to find metallib function of name %s
NODE(result_stage%lu_chan%lu) : FUNCTION( %s ), NODE(temp_stage%lu_chan%lu), NODE(tex1d_1);
NODE(result_stage%lu_chan%lu) : FUNCTION( %s ), NODE(temp_stage%lu_chan%lu);
Could not find kernel function: MPSFColorConversion_DoNothing_float
MPSFColorConversion_DoNothing_float
MPSFColorConversion_MakePixel
%s : FUNCTION( MPSFColorConversion_MakePixel ), NODE(result_stage%lu_chan0), NODE(result_stage%lu_chan1), NODE(result_stage%lu_chan2), NODE(result_stage%lu_chan3);
Y = (%f * x + %f)^%f + %f
Y = %f * x + %f
x >= %10f: Y = (%f * x + %f)^%f + %f
           else: Y = %f * x + %f
PQ EOTF:    result = sign_reflect(PQ_EOTF(x), x)
PQ_EOTF(x)= %f * [MAX(|x|^%f - %f, 0) / (%f - %f * |x|^%f)] ^ %f
Inverse PQ EOTF:    result = sign_reflect(Inv_PQ_EOTF(x), x)
                    Y = (|x| * %f) ^ %f
                    Y = (%f + %f * Y) / (1 + %f * Y))
                    Inv_PQ_EOTF(x) = Y ^ %f
Inverse HLG OETF:  result = sign_reflect(Inv_HLG_OETF(x), x)
                   Y = MAX( 0, %f + (1 - %f)|x|)
                   Inv_HLG_OETF(x) = (Y > 0.5) ? %f * e ^[(Y - %f) / %f + %f] :
                                                 Y * Y * %f
HLG OETF:    result = sign_reflect( HLG_EOTF(x), x)
             Y = |x * %f|
             HLG_EOTF(x) = (Y <= %f) sqrt(3*Y) : %f * log(12*Y - %f) + %f
Table:       %lu entries, range: [%f, %f]
above one:   %f + %f * x
below zero:  %f + %f * x
<Unhandled TRC format %u>
MPSFColorConversion_ApplyParametricTRC
MPSFColorConversion_ApplyTableTRC
MPSFColorConversion_ApplyPQEOTF
MPSFColorConversion_ApplyPQInvEOTF
MPSFColorConversion_ApplyHLGInvOETF
MPSFColorConversion_ApplyHLGOETF
CGColorMatrixGetMatrix
Matrix Stage %p:
Properties:   
Input clamp:  
Output clamp: 
Matrix: {%10.14f, %10.14f, %10.14f, %10.14f}
        {%10.14f, %10.14f, %10.14f, %10.14f}
        {%10.14f, %10.14f, %10.14f, %10.14f}
Memory error. Could not allocate a new MTLFunctionConstantValues object
MPSFColorConversion_ApplyMatrix
MPSFColorConversion_ConvertGrayToRGB
%s_%lu
%s : FUNCTION( %s ), %s;
File corrupted or too new: matrix version unknown
File corrupted: matrix size invalid
File corrupted: matrix properties are invalid
File corrupted: matrix range is invalid
CGColorNxMTransformGetTransform
MPSFColorConversion_HLGLuminanceScaling
MPSFColorConversion_HLGSceneReferredMapping
MPSFColorConversion_PQ_ToneMapping
Internal error: unrecognized / mishandled CGColorNxMTransformFormat at stage %lu
%s : FUNCTION(%s), %s;
MPSFColorConversion_LUT4D
MPSFColorConversion_LUT3D
%s : FUNCTION( %s ), %s, NODE(tex3d_%lu);
NxM Stage %p:
Input Channels:  %lu
Output Channels: %lu
Properties:      
Input clamp:     
Output clamp:    
%lu-D LUT: %u x %u x %u x %u
original dimension: %lu
HLG Luminance Scaling:
luminance coeffs: {%f, %f, %f, %f}
luminance gamma:  %f
luminance gain:   %f
HLG Scene Referred mapping:
PQ Tone Mapping:
EETF:
master peak Inv:  %f
master block Inv: %f
Max luminance:    %f
Min luminance:    %f
Knee Start:       %f
Knee Start Scale: %f
EOTF:
m1:               %f
m2:               %f
c1:               %f
c2:               %f
c3:               %f
Spline coeffs:        {%f, %f, %f, %f}
 type <internal error: unhandled type)
Error: file format too new
Error: file truncated. Could not get stage type
Error: file too new or corrupted. unknown stage type
Error: file truncated. Could not get stage properties
File corrupt: invalid NxM stage properties
File corrupt: invalid NxM stage channel count
File corrupt: invalid NxM srange
File truncated: could not load NxM stage
out of memory
Convert Gray to RGB %p:
Could not build node: out of memory
Unable to find function "%s" in MTLLibrary
NODE(in%lu) : FUNCTION( %s ), %s
File truncated: data too small
Set alpha to 1 %p:
MPSFColorConversion_SetAlphaToOne
Could not build node. Out of memory.
%s : FUNCTION( %s ), %s;
kCGNonStandardGamma
kCGSRGBGamma
kCGTwoPointTwoGamma
kCGOnePointEightGamma
kCGInvSRGBGamma
kCGInvTwoPointTwoGamma
kCGInvOnePointEightGamma
kCGLinearGamma
kCGSMPTE2084PQEOTF
kCGSMPTE2084PQInvEOTF
kCGARIBB67HGLInvOETF
kCGARIBB67HGLOETF
kCGITUBT1886EOTF
kCGITUBT1886InvEOTF
kCGITURBT709InvOETF
kCGITURBT709OETF
<invalid CGGammaID>%s
%s%s
<none>%s
kCGColorFunctionSignedReflectionTRC
kCGColorFunctionOutputClamp
kCGColorFunctionInputClamp
kCGColorMatrixOnlyFirstChannelInput
kCGColorMatrixOnlyFirstChannelOutput
 | %s
v24@?0@"<MTLFunction>"8@"NSError"16
/System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
%sFLT_MAX
%.1f
%10.14f
[%s, %s]%s
MPSFunction failed.
MyFunction
Error: could not make system default MTLDevice
Error: out of memory
Internal error: Unable to find MPSFunction .metallib
[%@ initWithCoder:] failed:
MPSFunction error: file format too new. Can only decode MPSFunction version 1
MPSFunction error: function name is missing in decoder
v8@?0
MPSFunction Internal error: <unimplemented>
Device:         %p %@
Function name:  "%@"
/default.metallib
/Resources/default.metallib
MPSFunction._fileVersion
MPSFunction._name
CGColorConversionInfoCreate
CGColorSpaceGetNumberOfComponents
MHDR_ExtractChannel0
MHDR_ExtractChannel1
MHDR_ExtractChannel2
MHDR_ExtractChannel3
MHDR_MakePixel
Failed to find function "%s" in MTLLibrary %p
MetalHDRConversion error: conversion stage %lu requires %lu color channels, which is more than will fit in a float4.
Try vImageConvert_AnyToAny or ColorSyncTransformConvert instead on the CPU instead.
MetalHDRConversion error: could not load address of CGColorNxMTransformGetTransform
Invalid parameter passed to [MetalHDRConversion initWithDevice:conversion:type:options]
CGColorConversionInfoIterateFunctionsWithCallbacks
[MetalHDRConversion initWithDevice:conversion:type:options] could not load address of CGColorConversionInfoIterateFunctionsWithCallbacks. Unable to proceed.
MPSFColorConversion_DoNothing_float4
%@_f32
B96@?0{CGColorConversionIteratorData=Iqqqqqq^^{CGColorTRCData}^^{CGColorMatrixData}^^{CGColorNxMTransformData}}8^{__CFDictionary=}88
B112@?0{CGColorConversionIteratorData=Iqqqqqq^^{CGColorTRCData}^^{CGColorMatrixData}^^{CGColorNxMTransformData}}8q88q96^q104
B104@?0{CGColorConversionIteratorData=Iqqqqqq^^{CGColorTRCData}^^{CGColorMatrixData}^^{CGColorNxMTransformData}}8q88q96
MPSFColorConversion Error: file version for MPSFColorConversion is too new. Unable to decode.
MPSFColorConversion Error: file contains illegal MPSFColorConversionOptions 0x%llx.
MPSFColorConversion Error: file contains illegal channel counts.
MPSFColorConversion Error: file contains illegal input range information.
MPSFColorConversion Error: file contains illegal output range information.
%@[%lu]
MPSFColorConversion Error: out of memory.
MPSFColorConversion Error: stage %lu data missing.
Starting graph:
%@===========
Prune Clamps: %@
===========
DAGS {
%s {
ALWAYS_INLINE;
NODE( tex1d_1 ) : FUNCTION( MPSFColorConversion_DeclareTex1d1 ), INPUT(%u);
NODE( tex3d_1 ) : FUNCTION( MPSFColorConversion_DeclareTex3d1 ), INPUT(%u);
NODE( tex3d_2 ) : FUNCTION( MPSFColorConversion_DeclareTex3d2 ), INPUT(%u);
MPSFColorConversion_DeclareTex1d1
MPSFColorConversion_DeclareTex3d1
MPSFColorConversion_DeclareTex3d2
OUTPUT(o) : FUNCTION( MPSFColorConversion_DoNothing_float4 ), INPUT(0);
NODE(f%lu)
DAG build error:n
DAG:
functionList: %@
#ifndef MPSFCOLORCONVERSION_DECLARE_TYPES                                                  
#define MPSFCOLORCONVERSION_DECLARE_TYPES  1                                               
using namespace metal;                                                                     
                                                                                           
typedef struct mpsf_color_conversion_data                                                  
{                                                                                          
    texture1d<float, access::sample> tex1d_1;  // may be NULL                              
    texture3d<float, access::sample> tex3d_1;  // may be NULL                              
    texture3d<float, access::sample> tex3d_2;  // may be NULL                              
}mpsf_color_conversion_data;                                                               
                                                                                           
#endif /* MPSFCOLORCONVERSION_DECLARE_TYPES */                                             
                                                                                           
inline float4 %@( float4 v, thread mpsf_color_conversion_data & d )                        
{                                                                                          
    [[visible]] float4 %@_f32( float4 v,                                                   
                            texture1d<float, access::sample> tex1d_1,                      
                            texture3d<float, access::sample> tex3d_1,                      
                            texture3d<float, access::sample> tex3d_2);                     
    return %@_f32(v, d.tex1d_1, d.tex3d_1, d.tex3d_2);                                     
}                                                                                          
inline half4 %@( half4 v, thread mpsf_color_conversion_data & conversion_data )            
{                                                                                          
    return half4(%@( float4(v), conversion_data));                                         
}                                                                                          
Starting range:  
current range:  
final range:   
clamps applied: 
input 
%ssignedReflection
%soutput
MPSFColorConversion.options
MPSFColorConversion.inputChannels
MPSFColorConversion.outputChannels
MPSFColorConversion.inputRange.min0
MPSFColorConversion.inputRange.min1
MPSFColorConversion.inputRange.min2
MPSFColorConversion.inputRange.min3
MPSFColorConversion.inputRange.max0
MPSFColorConversion.inputRange.max1
MPSFColorConversion.inputRange.max2
MPSFColorConversion.inputRange.max3
MPSFColorConversion.outputRange.min0
MPSFColorConversion.outputRange.min1
MPSFColorConversion.outputRange.min2
MPSFColorConversion.outputRange.min3
MPSFColorConversion.outputRange.max0
MPSFColorConversion.outputRange.max1
MPSFColorConversion.outputRange.max2
MPSFColorConversion.outputRange.max3
MPSFColorConversion.stageCount
MPSFColorConversion.stage
Optimization:%@
===========
CompilationResult
MPSDeviceProvider
MPSFunction
NSCopying
NSSecureCoding
NSCoding
MPSFColorConversion
setTextureType:
setPixelFormat:
setWidth:
setCpuCacheMode:
setHazardTrackingMode:
setUsage:
replaceRegion:mipmapLevel:withBytes:bytesPerRow:
setConstantValue:type:atIndex:
functionDescriptor
stringWithCString:encoding:
setName:
setSpecializedName:
setConstantValues:
setOptions:
newFunctionWithDescriptor:error:
addObject:
stringWithFormat:
newFunctionWithName:
cStringUsingEncoding:
setHeight:
setDepth:
replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:
init
dealloc
initWithFunction:error:
completionHandler
function
error
_barrier
_function
_error
T@"<MTLFunction>",R,&,N
T@"NSError",R,&,N
initWithCString:encoding:
arrayWithObjects:count:
dictionaryWithObjects:forKeys:
errorWithDomain:code:userInfo:
initWithDevice:functionName:zone:error:
copyWithZone:
newLibraryWithFile:error:
copyWithZone:device:
mpsMTLDevice
conformsToProtocol:
className
initWithCoder:device:error:
localizedDescription
localizedFailureReason
encodeInt32:forKey:
encodeObject:forKey:
decodeInt32ForKey:
decodeObjectOfClass:forKey:
newFunctionWithDescriptor:completionHandler:
device
newDAGUsingFunctionList:
allObjects
newLibraryWithDAG:functions:error:
buildAsync:withLibrary:
debugDescription
name
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
buildIsCompleteWithFunction:error:
buildStitchedFunctionAsyncWithName:
functionPrototype
_device
_name
_library
_fileVersion
_compilationResult
T@"NSString",R,&,N,V_name
T@"<MTLDevice>",R,&,N,V_device
initWithDevice:conversion:functionName:sourceRange:options:error:
addTRCStage:stage:count:trcIndices:error:
addMatrixStage:stage:index:
addNxMStage:stage:index:error:
addGrayToRGBStage
optimizeStages
decodeInt64ForKey:
decodeIntegerForKey:
decodeFloatForKey:
decodeBytesForKey:returnedLength:
encodeInt64:forKey:
encodeInteger:forKey:
encodeFloat:forKey:
encodeBytes:length:forKey:
description
find1DTexture1Stage
find3dTextureStageAtIndex:
initWithFormat:
initWithDevice:startColorSpace:endColorSpace:functionName:sourceRange:options:error:
newSubroutineListWithError:
effectiveRange:
descriptorFor1DTexture1
descriptorFor3DTexture1
descriptorFor3DTexture2
initialize1DTexture1:
initialize3DTexture1:
initialize3DTexture2:
options
inputColorChannels
outputColorChannels
_options
_inputColorChannels
_outputColorChannels
_inputRange
_outputRange
_stageList
TQ,R,N,V_options
TQ,R,N,V_inputColorChannels
TQ,R,N,V_outputColorChannels
@16@0:8
@32@0:8@16@24
v16@0:8
@?16@0:8
@"<MTLFunction>"
@"NSError"
@"<MTLDevice>"16@0:8
B16@0:8
@24@0:8^{_NSZone=}16
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@48@0:8@16@24^{_NSZone=}32^@40
@32@0:8^{_NSZone=}16@24
@40@0:8@16@24^@32
v32@0:8@16@24
@"<MTLDevice>"
@"NSString"
@"<MTLLibrary>"
(?="bits"I""{?="mpsFunctionVersion"b8"intermediateObjectVersion"b8"version"b16})
@"CompilationResult"
@72@0:8@16^{CGColorSpace=}24^{CGColorSpace=}32@40r^{?=}48Q56^@64
@24@0:8^@16
B128@0:8{CGColorConversionIteratorData=Iqqqqqq^^{CGColorTRCData}^^{CGColorMatrixData}^^{CGColorNxMTransformData}}16q96q104^q112^@120
B112@0:8{CGColorConversionIteratorData=Iqqqqqq^^{CGColorTRCData}^^{CGColorMatrixData}^^{CGColorNxMTransformData}}16q96q104
B120@0:8{CGColorConversionIteratorData=Iqqqqqq^^{CGColorTRCData}^^{CGColorMatrixData}^^{CGColorNxMTransformData}}16q96q104^@112
@64@0:8@16r^{CGColorConversionInfo=}24@32r^{?=}40Q48^@56
{?=}48@0:8{?=}16
r^{TRCStage=^^?^{Stage}Q^{ChannelInfo}}16@0:8
r^{NxMStage=^^?^{Stage}{NxMData=(?={?=^SQ}{?=ff[4f]}{?=ff[4f]}{?={?=fffff}{?=fffffffff}[4f]}){?=ff}{?=ff}IQQi}}24@0:8Q16
Q16@0:8
{?="max""min"}
^{Stage=^^?^{Stage}}
@(#)PROGRAM:MPSFunctions  PROJECT:MPS-1
,tt!tA
*9;OQSU
INPUT(0)
Could not decompress stage. File format too new.
Could not decompress stage. Unknown type.
Error: file truncated at TRC stage
Error: file corrupted at TRC stage
CGColorTRCGetFunction
CGColorFunctionGetProperties
CGColorTRCGetGammaID
CGColorFunctionGetInputRange
CGColorFunctionGetOutputRange
File truncated: unable to read TRC 
File corrupted: unable to create TRC 
File corrupted: unknown property in TRC 
File corrupted: TRC input range invalid
File corrupted: TRC output range invalid
TRC Stage %p:
Channel %lu:
GammaID:      
Properties:   
Input clamp:  
Output clamp: 
Memory allocation failed. Could not make new MTLFunctionConstantValues object.
Memory allocation failed. Could not make new MTLFunctionDescriptor object.
%s_stage%lu_chan%lu
MPSFColorConversion_ExtractChannel%lu
NODE(temp_stage%lu_chan%lu) : FUNCTION( MPSFColorConversion_ExtractChannel%lu ), %s;
Failed to find metallib function of name %s
NODE(result_stage%lu_chan%lu) : FUNCTION( %s ), NODE(temp_stage%lu_chan%lu), NODE(tex1d_1);
NODE(result_stage%lu_chan%lu) : FUNCTION( %s ), NODE(temp_stage%lu_chan%lu);
Could not find kernel function: MPSFColorConversion_DoNothing_float
MPSFColorConversion_DoNothing_float
MPSFColorConversion_MakePixel
%s : FUNCTION( MPSFColorConversion_MakePixel ), NODE(result_stage%lu_chan0), NODE(result_stage%lu_chan1), NODE(result_stage%lu_chan2), NODE(result_stage%lu_chan3);
Y = (%f * x + %f)^%f + %f
Y = %f * x + %f
x >= %10f: Y = (%f * x + %f)^%f + %f
           else: Y = %f * x + %f
PQ EOTF:    result = sign_reflect(PQ_EOTF(x), x)
PQ_EOTF(x)= %f * [MAX(|x|^%f - %f, 0) / (%f - %f * |x|^%f)] ^ %f
Inverse PQ EOTF:    result = sign_reflect(Inv_PQ_EOTF(x), x)
                    Y = (|x| * %f) ^ %f
                    Y = (%f + %f * Y) / (1 + %f * Y))
                    Inv_PQ_EOTF(x) = Y ^ %f
Inverse HLG OETF:  result = sign_reflect(Inv_HLG_OETF(x), x)
                   Y = MAX( 0, %f + (1 - %f)|x|)
                   Inv_HLG_OETF(x) = (Y > 0.5) ? %f * e ^[(Y - %f) / %f + %f] :
                                                 Y * Y * %f
HLG OETF:    result = sign_reflect( HLG_EOTF(x), x)
             Y = |x * %f|
             HLG_EOTF(x) = (Y <= %f) sqrt(3*Y) : %f * log(12*Y - %f) + %f
Table:       %lu entries, range: [%f, %f]
above one:   %f + %f * x
below zero:  %f + %f * x
<Unhandled TRC format %u>
MPSFColorConversion_ApplyParametricTRC
MPSFColorConversion_ApplyTableTRC
MPSFColorConversion_ApplyPQEOTF
MPSFColorConversion_ApplyPQInvEOTF
MPSFColorConversion_ApplyHLGInvOETF
MPSFColorConversion_ApplyHLGOETF
CGColorMatrixGetMatrix
Matrix Stage %p:
Properties:   
Input clamp:  
Output clamp: 
Matrix: {%10.14f, %10.14f, %10.14f, %10.14f}
        {%10.14f, %10.14f, %10.14f, %10.14f}
        {%10.14f, %10.14f, %10.14f, %10.14f}
Memory error. Could not allocate a new MTLFunctionConstantValues object
MPSFColorConversion_ApplyMatrix
MPSFColorConversion_ConvertGrayToRGB
%s_%lu
%s : FUNCTION( %s ), %s;
File corrupted or too new: matrix version unknown
File corrupted: matrix size invalid
File corrupted: matrix properties are invalid
File corrupted: matrix range is invalid
CGColorNxMTransformGetTransform
MPSFColorConversion_HLGLuminanceScaling
MPSFColorConversion_HLGSceneReferredMapping
MPSFColorConversion_PQ_ToneMapping
Internal error: unrecognized / mishandled CGColorNxMTransformFormat at stage %lu
%s : FUNCTION(%s), %s;
MPSFColorConversion_LUT4D
MPSFColorConversion_LUT3D
%s : FUNCTION( %s ), %s, NODE(tex3d_%lu);
NxM Stage %p:
Input Channels:  %lu
Output Channels: %lu
Properties:      
Input clamp:     
Output clamp:    
%lu-D LUT: %u x %u x %u x %u
original dimension: %lu
HLG Luminance Scaling:
luminance coeffs: {%f, %f, %f, %f}
luminance gamma:  %f
luminance gain:   %f
HLG Scene Referred mapping:
PQ Tone Mapping:
EETF:
master peak Inv:  %f
master block Inv: %f
Max luminance:    %f
Min luminance:    %f
Knee Start:       %f
Knee Start Scale: %f
EOTF:
m1:               %f
m2:               %f
c1:               %f
c2:               %f
c3:               %f
Spline coeffs:        {%f, %f, %f, %f}
 type <internal error: unhandled type)
Error: file format too new
Error: file truncated. Could not get stage type
Error: file too new or corrupted. unknown stage type
Error: file truncated. Could not get stage properties
File corrupt: invalid NxM stage properties
File corrupt: invalid NxM stage channel count
File corrupt: invalid NxM srange
File truncated: could not load NxM stage
out of memory
Convert Gray to RGB %p:
Could not build node: out of memory
Unable to find function "%s" in MTLLibrary
NODE(in%lu) : FUNCTION( %s ), %s
File truncated: data too small
Set alpha to 1 %p:
MPSFColorConversion_SetAlphaToOne
Could not build node. Out of memory.
%s : FUNCTION( %s ), %s;
kCGNonStandardGamma
kCGSRGBGamma
kCGTwoPointTwoGamma
kCGOnePointEightGamma
kCGInvSRGBGamma
kCGInvTwoPointTwoGamma
kCGInvOnePointEightGamma
kCGLinearGamma
kCGSMPTE2084PQEOTF
kCGSMPTE2084PQInvEOTF
kCGARIBB67HGLInvOETF
kCGARIBB67HGLOETF
kCGITUBT1886EOTF
kCGITUBT1886InvEOTF
kCGITURBT709InvOETF
kCGITURBT709OETF
<invalid CGGammaID>%s
%s%s
<none>%s
kCGColorFunctionSignedReflectionTRC
kCGColorFunctionOutputClamp
kCGColorFunctionInputClamp
kCGColorMatrixOnlyFirstChannelInput
kCGColorMatrixOnlyFirstChannelOutput
 | %s
v24@?0@"<MTLFunction>"8@"NSError"16
/System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
%sFLT_MAX
%.1f
%10.14f
[%s, %s]%s
MPSFunction failed.
MyFunction
Error: could not make system default MTLDevice
Error: out of memory
Internal error: Unable to find MPSFunction .metallib
[%@ initWithCoder:] failed:
MPSFunction error: file format too new. Can only decode MPSFunction version 1
MPSFunction error: function name is missing in decoder
v8@?0
MPSFunction Internal error: <unimplemented>
Device:         %p %@
Function name:  "%@"
/default.metallib
/Resources/default.metallib
MPSFunction._fileVersion
MPSFunction._name
CGColorConversionInfoCreate
CGColorSpaceGetNumberOfComponents
MHDR_ExtractChannel0
MHDR_ExtractChannel1
MHDR_ExtractChannel2
MHDR_ExtractChannel3
MHDR_MakePixel
Failed to find function "%s" in MTLLibrary %p
MetalHDRConversion error: conversion stage %lu requires %lu color channels, which is more than will fit in a float4.
Try vImageConvert_AnyToAny or ColorSyncTransformConvert instead on the CPU instead.
MetalHDRConversion error: could not load address of CGColorNxMTransformGetTransform
Invalid parameter passed to [MetalHDRConversion initWithDevice:conversion:type:options]
CGColorConversionInfoIterateFunctionsWithCallbacks
[MetalHDRConversion initWithDevice:conversion:type:options] could not load address of CGColorConversionInfoIterateFunctionsWithCallbacks. Unable to proceed.
MPSFColorConversion_DoNothing_float4
%@_f32
B96@?0{CGColorConversionIteratorData=Iqqqqqq^^{CGColorTRCData}^^{CGColorMatrixData}^^{CGColorNxMTransformData}}8^{__CFDictionary=}88
B112@?0{CGColorConversionIteratorData=Iqqqqqq^^{CGColorTRCData}^^{CGColorMatrixData}^^{CGColorNxMTransformData}}8q88q96^q104
B104@?0{CGColorConversionIteratorData=Iqqqqqq^^{CGColorTRCData}^^{CGColorMatrixData}^^{CGColorNxMTransformData}}8q88q96
MPSFColorConversion Error: file version for MPSFColorConversion is too new. Unable to decode.
MPSFColorConversion Error: file contains illegal MPSFColorConversionOptions 0x%llx.
MPSFColorConversion Error: file contains illegal channel counts.
MPSFColorConversion Error: file contains illegal input range information.
MPSFColorConversion Error: file contains illegal output range information.
%@[%lu]
MPSFColorConversion Error: out of memory.
MPSFColorConversion Error: stage %lu data missing.
Starting graph:
%@===========
Prune Clamps: %@
===========
DAGS {
%s {
ALWAYS_INLINE;
NODE( tex1d_1 ) : FUNCTION( MPSFColorConversion_DeclareTex1d1 ), INPUT(%u);
NODE( tex3d_1 ) : FUNCTION( MPSFColorConversion_DeclareTex3d1 ), INPUT(%u);
NODE( tex3d_2 ) : FUNCTION( MPSFColorConversion_DeclareTex3d2 ), INPUT(%u);
MPSFColorConversion_DeclareTex1d1
MPSFColorConversion_DeclareTex3d1
MPSFColorConversion_DeclareTex3d2
OUTPUT(o) : FUNCTION( MPSFColorConversion_DoNothing_float4 ), INPUT(0);
NODE(f%lu)
OUTPUT(o)
DAG build error:n
DAG:
functionList: %@
#ifndef MPSFCOLORCONVERSION_DECLARE_TYPES                                                  
#define MPSFCOLORCONVERSION_DECLARE_TYPES  1                                               
using namespace metal;                                                                     
                                                                                           
typedef struct mpsf_color_conversion_data                                                  
{                                                                                          
    texture1d<float, access::sample> tex1d_1;  // may be NULL                              
    texture3d<float, access::sample> tex3d_1;  // may be NULL                              
    texture3d<float, access::sample> tex3d_2;  // may be NULL                              
}mpsf_color_conversion_data;                                                               
                                                                                           
#endif /* MPSFCOLORCONVERSION_DECLARE_TYPES */                                             
                                                                                           
inline float4 %@( float4 v, thread mpsf_color_conversion_data & d )                        
{                                                                                          
    [[visible]] float4 %@_f32( float4 v,                                                   
                            texture1d<float, access::sample> tex1d_1,                      
                            texture3d<float, access::sample> tex3d_1,                      
                            texture3d<float, access::sample> tex3d_2);                     
    return %@_f32(v, d.tex1d_1, d.tex3d_1, d.tex3d_2);                                     
}                                                                                          
inline half4 %@( half4 v, thread mpsf_color_conversion_data & conversion_data )            
{                                                                                          
    return half4(%@( float4(v), conversion_data));                                         
}                                                                                          
Starting range:  
current range:  
final range:   
clamps applied: 
input 
%ssignedReflection
%soutput
MPSFColorConversion.options
MPSFColorConversion.inputChannels
MPSFColorConversion.outputChannels
MPSFColorConversion.inputRange.min0
MPSFColorConversion.inputRange.min1
MPSFColorConversion.inputRange.min2
MPSFColorConversion.inputRange.min3
MPSFColorConversion.inputRange.max0
MPSFColorConversion.inputRange.max1
MPSFColorConversion.inputRange.max2
MPSFColorConversion.inputRange.max3
MPSFColorConversion.outputRange.min0
MPSFColorConversion.outputRange.min1
MPSFColorConversion.outputRange.min2
MPSFColorConversion.outputRange.min3
MPSFColorConversion.outputRange.max0
MPSFColorConversion.outputRange.max1
MPSFColorConversion.outputRange.max2
MPSFColorConversion.outputRange.max3
MPSFColorConversion.stageCount
MPSFColorConversion.stage
Optimization:%@
===========
CompilationResult
MPSDeviceProvider
MPSFunction
NSCopying
NSSecureCoding
NSCoding
MPSFColorConversion
setUsage:
setDepth:
decodeBytesForKey:returnedLength:
encodeObject:forKey:
encodeInt32:forKey:
conformsToProtocol:
localizedDescription
setConstantValue:type:atIndex:
setPixelFormat:
dictionaryWithObjects:forKeys:
encodeInteger:forKey:
errorWithDomain:code:userInfo:
cStringUsingEncoding:
setHeight:
newFunctionWithDescriptor:completionHandler:
stringWithCString:encoding:
encodeFloat:forKey:
arrayWithObjects:count:
initWithCString:encoding:
setTextureType:
setCpuCacheMode:
decodeObjectOfClass:forKey:
newFunctionWithName:
setOptions:
addObject:
encodeInt64:forKey:
replaceRegion:mipmapLevel:withBytes:bytesPerRow:
decodeInt32ForKey:
initWithFormat:
decodeIntegerForKey:
newLibraryWithFile:error:
setWidth:
setHazardTrackingMode:
encodeBytes:length:forKey:
setSpecializedName:
allObjects
decodeFloatForKey:
description
setConstantValues:
functionDescriptor
localizedFailureReason
className
setName:
newLibraryWithDAG:functions:error:
decodeInt64ForKey:
replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:
stringWithFormat:
newFunctionWithDescriptor:error:
init
dealloc
initWithFunction:error:
completionHandler
function
error
_barrier
_function
_error
T@"<MTLFunction>",R,&,N
T@"NSError",R,&,N
mpsMTLDevice
debugDescription
supportsSecureCoding
copyWithZone:
encodeWithCoder:
initWithCoder:
TB,R
initWithDevice:functionName:zone:error:
copyWithZone:device:
initWithCoder:device:error:
buildIsCompleteWithFunction:error:
buildAsync:withLibrary:
buildStitchedFunctionAsyncWithName:
functionPrototype
newDAGUsingFunctionList:
name
device
_device
_name
_library
_fileVersion
_compilationResult
T@"NSString",R,&,N,V_name
T@"<MTLDevice>",R,&,N,V_device
initWithDevice:startColorSpace:endColorSpace:functionName:sourceRange:options:error:
newSubroutineListWithError:
addTRCStage:stage:count:trcIndices:error:
addMatrixStage:stage:index:
addNxMStage:stage:index:error:
addGrayToRGBStage
initWithDevice:conversion:functionName:sourceRange:options:error:
optimizeStages
effectiveRange:
find1DTexture1Stage
descriptorFor1DTexture1
find3dTextureStageAtIndex:
descriptorFor3DTexture1
descriptorFor3DTexture2
initialize1DTexture1:
initialize3DTexture1:
initialize3DTexture2:
options
inputColorChannels
outputColorChannels
_options
_inputColorChannels
_outputColorChannels
_inputRange
_outputRange
_stageList
TQ,R,N,V_options
TQ,R,N,V_inputColorChannels
TQ,R,N,V_outputColorChannels
@16@0:8
@32@0:8@16@24
v16@0:8
@?16@0:8
@"<MTLFunction>"
@"NSError"
@"<MTLDevice>"16@0:8
B16@0:8
@24@0:8^{_NSZone=}16
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@48@0:8@16@24^{_NSZone=}32^@40
@32@0:8^{_NSZone=}16@24
@40@0:8@16@24^@32
v32@0:8@16@24
@"<MTLDevice>"
@"NSString"
@"<MTLLibrary>"
(?="bits"I""{?="mpsFunctionVersion"b8"intermediateObjectVersion"b8"version"b16})
@"CompilationResult"
@72@0:8@16^{CGColorSpace=}24^{CGColorSpace=}32@40r^{?=}48Q56^@64
@24@0:8^@16
B128@0:8{CGColorConversionIteratorData=Iqqqqqq^^{CGColorTRCData}^^{CGColorMatrixData}^^{CGColorNxMTransformData}}16q96q104^q112^@120
B112@0:8{CGColorConversionIteratorData=Iqqqqqq^^{CGColorTRCData}^^{CGColorMatrixData}^^{CGColorNxMTransformData}}16q96q104
B120@0:8{CGColorConversionIteratorData=Iqqqqqq^^{CGColorTRCData}^^{CGColorMatrixData}^^{CGColorNxMTransformData}}16q96q104^@112
@64@0:8@16r^{CGColorConversionInfo=}24@32r^{?=}40Q48^@56
{?=}48@0:8{?=}16
r^{TRCStage=^^?^{Stage}Q^{ChannelInfo}}16@0:8
r^{NxMStage=^^?^{Stage}{NxMData=(?={?=^SQ}{?=ff[4f]}{?=ff[4f]}{?={?=fffff}{?=fffffffff}[4f]}){?=ff}{?=ff}IQQi}}24@0:8Q16
Q16@0:8
{?="max""min"}
^{Stage=^^?^{Stage}}
