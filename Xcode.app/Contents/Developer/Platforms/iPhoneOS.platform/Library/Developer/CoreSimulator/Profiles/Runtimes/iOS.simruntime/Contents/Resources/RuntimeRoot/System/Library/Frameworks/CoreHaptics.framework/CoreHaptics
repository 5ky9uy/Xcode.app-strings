@(#)PROGRAM:CoreHaptics  PROJECT:CoreHaptics-1
@NSt3__110__function6__funcIZN18CASmartPreferences10AddHandlerIiEEvPK10__CFStringS6_PFT_PKvRbENS_8functionIFvS7_EEEEUlS9_E_NS_9allocatorISG_EEFbS9_EEE
NSt3__110__function6__baseIFbPKvEEE
NSt3__117bad_function_callE
ZN18CASmartPreferences10AddHandlerIiEEvPK10__CFStringS3_PFT_PKvRbENSt3__18functionIFvS4_EEEEUlS6_E_
NSt3__110__function6__funcIZN5CALog5Scope34SetPriorityThresholdFromPreferenceEPK10__CFStringS6_E3$_0NS_9allocatorIS7_EEFviEEE
NSt3__110__function6__baseIFviEEE
ZN5CALog5Scope34SetPriorityThresholdFromPreferenceEPK10__CFStringS3_E3$_0
12CAXException
(knN
NSt3__120__shared_ptr_emplaceI13AudioResourceNS_9allocatorIS1_EEEE
com.apple.CoreHaptics
CHHapticPatternPlayer.mm
-[PatternPlayer releaseExternalResources:events:]
-[PatternPlayer processImmediateParameters:]_block_invoke
v32@?0@"NSString"8@16^B24
-[PatternPlayer initWithPlayable:engine:privileged:error:]
-[PatternPlayer dealloc]
-[PatternPlayer doSetMute:]
-[PatternPlayer clearExternalResources:]
-[PatternPlayer startAtTime:error:]
/Library/Caches/com.apple.xbs/Sources/CoreHaptics_Sim/Source/CHHapticPatternPlayer.mm
time >= 0.0
-[PatternPlayer stopAtTime:error:]
-[PatternPlayer sendParameters:atTime:error:]
-[PatternPlayer cancelAndReturnError:]
-[PatternPlayer scheduleParameterCurve:atTime:error:]
-[PatternPlayer startAtTime:withImmediateParameters:error:]
OSStatus
HapticUtils.h
_Haptic_Check
Error 
%s: %s
CHDeviceCapability.mm
-[CHDefaultHapticDeviceCapability attributesForEventParameter:eventType:error:]
-[CHDefaultHapticDeviceCapability attributesForDynamicParameter:error:]
Default
HapticServerConfig.mm
-[HapticServerConfig initWithHapticPlayer:withOptions:error:]
com.apple.private.allow-background-haptics
RequestedLocality
AllowBackgroundHaptics
SupportsAudioPlayback
SupportsHapticPlayback
SupportsAdvancedPatternPlayers
UsingInternalHaptics
HapticContinuousTimeLimit
HapticTransientDefaultIntensity
HapticTransientDefaultSharpness
HapticContinuousDefaultIntensity
HapticContinuousDefaultSharpness
HapticTransientEventIDs
HapticContinuousSustainedEventIDs
HapticContinuousNonsustainedEventIDs
RequestedPriority
RequestedPowerUsage
RequestedUsageCategory
-[HapticServerConfig initWithHapticPlayer:withOptions:error:]_block_invoke
v24@?0@"NSDictionary"8@"NSError"16
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
CHHapticAdvancedPatternPlayer.mm
-[AdvancedPatternPlayer finishInit]
-[AdvancedPatternPlayer finishInit]_block_invoke
v16@?0@"NSError"8
-[AdvancedPatternPlayer initWithPattern:engine:privileged:error:]
-[AdvancedPatternPlayer dealloc]
-[AdvancedPatternPlayer doSetMute:]
-[AdvancedPatternPlayer clearExternalResources:]
-[AdvancedPatternPlayer doStartFromStoppedAtTime:error:]
-[AdvancedPatternPlayer doStartFromPausedAtTime:error:]
-[AdvancedPatternPlayer doResumeAtTime:error:]
-[AdvancedPatternPlayer startAtTime:error:]
/Library/Caches/com.apple.xbs/Sources/CoreHaptics_Sim/Source/CHHapticAdvancedPatternPlayer.mm
_sequence != nil
-[AdvancedPatternPlayer stopAtTime:error:]
-[AdvancedPatternPlayer sendParameters:atTime:error:]
-[AdvancedPatternPlayer scheduleParameterCurve:atTime:error:]
-[AdvancedPatternPlayer pauseAtTime:error:]
-[AdvancedPatternPlayer resumeAtTime:error:]
-[AdvancedPatternPlayer seekToOffset:error:]
-[AdvancedPatternPlayer cancelAndReturnError:]
-[AdvancedPatternPlayer setCompletionHandler:]
-[AdvancedPatternPlayer setCompletionHandler:]_block_invoke_2
v8@?0
-[AdvancedPatternPlayer setCompletionHandler:]_block_invoke
-[AdvancedPatternPlayer activateChannelByIndex:atTime:error:]
-[AdvancedPatternPlayer setVolume:atTime:error:]
-[AdvancedPatternPlayer earlyUnduckAudioAtTime:error:]
AudioResource.mm
open
verifyAudioFile
readAndAllocateRawBuffer
incrementAllocatedBytes
decrementAllocatedBytes
error
warning
note
notice
info
details
minutiae
spew
AudioSineTransient
AudioSine
HapticSineTransient
HapticSine
HapticSineLow
HapticSineLowMid
HapticSineMid
HapticSineMidHigh
HapticSineHigh
HapticMicroTap2
HapticMicroTap3
HapticMicroTap4
HapticMicroTap5
HapticMicroTap6
HapticMicroTap7
HapticMicroTap8
HapticMicroTap9
HapticMiniTap2
HapticMiniTap3
HapticMiniTap4
HapticMiniTap5
HapticMiniTap6
HapticMiniTap7
HapticMiniTap8
HapticMiniTap9
HapticFullTap2
HapticFullTap3
HapticFullTap4
HapticFullTap5
HapticFullTap6
HapticFullTap7
HapticFullTap8
HapticFullTap9
AudioVolume
AudioTransposition
AudioAttackTime
AudioDecayTime
AudioReleaseTime
AudioLPFilterCutoff
HapticVolume
HapticTransposition
HapticAttackTime
HapticDecayTime
HapticReleaseTime
Type
Value
Time
Param
EventToDictionaryConverter.mm
+[EventToDictionaryConverter convertEvents:]
Event
Pattern
HapticDictionaryWriter.mm
-[HapticDictionaryWriter eventToDictionary:embeddedResourceInfo:]
CoreHapticsOperationNotPermittedException
Cannot export AudioCustom events
HapticCommandConverter.mm
-[HapticCommandConverter eventForAudioEventType:time:eventParams:duration:]
CoreHapticInvalidParamException
Unknown event param type
-[HapticCommandConverter eventForTransientHapticAtTime:params:duration:]
-[HapticCommandConverter eventForLegacyTransientHapticAtTime:params:duration:]
CoreHapticsBadEventEntryException
Cannot mix privileged and unprivileged Sharpness parameters
Cannot mix Fullness with unprivileged Sharpness parameter
Unknown event parameter type
-[HapticCommandConverter eventForContinuousHapticEventType:time:params:duration:]
-[HapticCommandConverter eventForSPIEventType:time:eventParams:duration:]
Unsupported event param type
-[HapticCommandConverter eventForEventEntry:engine:privileged:]
CoreHapticInvalidEventTimeException
Illegal time value
CoreHapticInvalidEventDurationException
Illegal event duration
B32@?0@"CHHapticEventParameter"8Q16^B24
Illegal or missing event duration
Looped custom audio event missing duration
CoreHapticInvalidAudioResourceException
Invalid or missing audio resource
CoreHapticInvalidEventTypeException
Unknown privileged event type
Unknown event type
-[HapticCommandConverter eventForDynamicParameterEntry:]
Unknown dynamic parameter
-[HapticCommandConverter eventForParameterCurveEntry:]
-[HapticCommandConverter CHtoAVParameterCurve:]
Invalid dynamic parameter for curve
LimitEventParameterValue
LimitDynamicParameterValue
DefaultWithConstantVolume
UIFeedback
iOSKeyboard
SystemSound
CHHapticEngineUsageCategory.mm
-[CHHapticEngine(EngineUsageCategory) setupUnsharedAudioSession:isConstantVolume:needsAudioPowerBudget:error:]
with constant
following ringer
-[CHHapticEngine(EngineUsageCategory) setupSystemSoundAudioSession:needsAudioPowerBudget:error:]
-[CHHapticEngine(EngineUsageCategory) setupEngineWithCategory:session:needsAudioPowerBudget:error:]
-[CHHapticEngine(EngineUsageCategory) updateAudioConfigurations:session:]
HapticDictionaryReader.mm
-[HapticDictionaryReader readAndVerifyVersion:error:]
-[HapticDictionaryReader parseConfiguration:error:]_block_invoke
-[HapticDictionaryReader scanForEmbeddedResources:]_block_invoke
-[HapticDictionaryReader parseEventsAndParameters:withBaseURL:reply:]
EventTime
v32@?0@8@16^B24
-[HapticDictionaryReader parseEvent:withBaseURL:]
CoreHapticsMissingEventTypeException
Missing event type
CoreHapticsInvalidEventTimeException
Illegal or missing event time
CoreHapticsInvalidEventDurationException
Missing or invalid audio resource path
Invalid audio resource path
CoreHapticsInvalidAudioResourceException
Invalid audio resource
-[HapticDictionaryReader parseEventParams:]
CoreHapticsBadParameterEntryException
Event parameter has invalid or missing parameter ID
Event parameter has invalid or missing parameter value
ParameterTime
-[HapticDictionaryReader parseParam:]
time
type
Parameter has invalid or missing time or type key
-[HapticDictionaryReader parseParamCurve:]
ParameterCurve has invalid or missing time or type key
-[HapticDictionaryReader parseParamCurveControlPoints:]
DeviceClassNumber
gqDnklGQnpv5ilgh5uHckw
com.apple.coreaudio
AVHapticClient.mm
-[AVHapticClient setState:]
-[AVHapticClient state]
hcln
hapticclient_verbose
hcst
hapticclient_state_verbose
-[AVHapticClient initWithOptions:error:]
-[AVHapticClient dealloc]
-[AVHapticClient queryServerCapabilities:reply:]_block_invoke
-[AVHapticClient hapticLatency]_block_invoke
v24@?0d8@"NSError"16
-[AVHapticClient allocateResources:]
-[AVHapticClient allocateResources:]_block_invoke
v28@?0@"NSObject<OS_xpc_object>"8I16@"NSError"20
-[AVHapticClient loadHapticEvent:reply:]
-[AVHapticClient loadHapticEvent:reply:]_block_invoke_2
v24@?0Q8@"NSError"16
-[AVHapticClient createCustomAudioEvent:format:frames:options:reply:]_block_invoke_2
-[AVHapticClient createCustomAudioEvent:format:frames:options:reply:]
-[AVHapticClient copyCustomAudioEvent:options:reply:]_block_invoke_2
-[AVHapticClient copyCustomAudioEvent:options:reply:]
-[AVHapticClient referenceCustomAudioEvent:reply:]_block_invoke
-[AVHapticClient referenceCustomAudioEvent:reply:]
-[AVHapticClient releaseCustomAudioEvent:reply:]_block_invoke_2
-[AVHapticClient releaseCustomAudioEvent:reply:]
-[AVHapticClient prewarm:]
-[AVHapticClient prewarm:]_block_invoke_2
-[AVHapticClient stopPrewarm]
-[AVHapticClient stopPrewarm]_block_invoke
-[AVHapticClient startRunning:]
-[AVHapticClient stopRunning]
-[AVHapticClient stopRunning]_block_invoke
-[AVHapticClient stopRunning:]
-[AVHapticClient finish:]
-[AVHapticClient finish:]_block_invoke
-[AVHapticClient setChannelEventBehavior:channel:]
-[AVHapticClient setChannelEventBehavior:channel:]_block_invoke_2
-[AVHapticClient resetChannel:atTime:]
applyImmediateParameters
startEventFromEvent
-[AVHapticClient doSendEvents:withImmediateParameters:atTime:channel:sorted:outToken:error:]
-[AVHapticClient doScheduleParamCurve:atTime:channel:paramCurve:error:]
-[AVHapticClient doScheduleParamCurveWithMemoryReserve:atTime:channel:memoryReserve:paramCurve:error:]
-[AVHapticClient clearEventsFromTime:channel:]
-[AVHapticClient setParameter:atTime:value:channel:]
-[AVHapticClient scheduleParameterCurve:curve:atTime:channel:error:]
-[AVHapticClient loadAndPrepareHapticSequenceFromData:reply:]
-[AVHapticClient loadAndPrepareHapticSequenceFromData:reply:]_block_invoke_2
-[AVHapticClient loadAndPrepareHapticSequenceFromData:reply:]_block_invoke
v40@?0Q8d16Q24@"NSError"32
-[AVHapticClient loadAndPrepareHapticSequenceFromEvents:reply:]
-[AVHapticClient loadAndPrepareHapticSequenceFromEvents:reply:]_block_invoke_2
-[AVHapticClient loadAndPrepareHapticSequenceFromVibePattern:reply:]
-[AVHapticClient loadAndPrepareHapticSequenceFromVibePattern:reply:]_block_invoke_2
-[AVHapticClient loadAndPrepareHapticSequenceFromVibePattern:reply:]_block_invoke
-[AVHapticClient setSequenceEventBehavior:behavior:channel:]
-[AVHapticClient setSequenceEventBehavior:behavior:channel:]_block_invoke_2
-[AVHapticClient setSequenceFinishedHandlerForID:finishedHandler:]
-[AVHapticClient callSequenceFinishedHandlersWithError:]
-[AVHapticClient detachSequenceEntryforID:]
-[AVHapticClient prepareHapticSequence:error:]
-[AVHapticClient prepareHapticSequence:error:]_block_invoke_2
-[AVHapticClient prepareHapticSequence:error:]_block_invoke
-[AVHapticClient enableSequenceLooping:enable:error:]
-[AVHapticClient setSequenceLoopLength:length:error:]
-[AVHapticClient setSequencePlaybackRate:rate:error:]
-[AVHapticClient startHapticSequence:atTime:withOffset:]
-[AVHapticClient stopHapticSequence:atTime:]
-[AVHapticClient pauseHapticSequence:atTime:]
-[AVHapticClient resumeHapticSequence:atTime:]
-[AVHapticClient seekHapticSequence:toTime:]
-[AVHapticClient resetHapticSequence:atTime:]
-[AVHapticClient sendUnduckAudioCommand:atTime:]
-[AVHapticClient setSequenceChannelParameter:atTime:value:sequenceID:channel:]
-[AVHapticClient clearSequenceEvents:atTime:]
-[AVHapticClient detachHapticSequence:]
-[AVHapticClient releaseResources]
Client completion queue
hapticserver_timeout
-[AVHapticClient setupConnectionWithOptions:error:]
MachServiceName
com.apple.audio.hapticd
-[AVHapticClient setupConnectionWithOptions:error:]_block_invoke_2
v16@?0Q8
-[AVHapticClient getAsyncDelegateForMethod:errorHandler:]_block_invoke
-[AVHapticClient getSyncDelegateForMethod:errorHandler:]_block_invoke
-[AVHapticClient disconnect]
-[AVHapticClient setPlayerBehavior:error:]
-[AVHapticClient setPlayerBehavior:error:]_block_invoke_2
-[AVHapticClient requestAssignedChannels:error:]
-[AVHapticClient requestAssignedChannels:error:]_block_invoke_2
v24@?0@"NSArray"8@"NSError"16
-[AVHapticClient removeAssignedChannelID:error:]
-[AVHapticClient handleServerConnectionInterruption]
-[AVHapticClient handleServerConnectionInterruption]_block_invoke
-[AVHapticClient handleServerConnectionInvalidation]
-[AVHapticClient sequenceFinished:error:]
-[AVHapticClient clientCompletedWithError:]
-[AVHapticClient clientCompletedWithError:]_block_invoke
-[AVHapticClient clientStoppedForReason:error:]
-[AVHapticClient clientDisconnectingForReason:error:]
q24@?0@"AVHapticEvent"8@"AVHapticEvent"16
getIndexOfSplitPoint
q24@?0@"AVHapticPlayerParameterCurveControlPoint"8@"AVHapticPlayerParameterCurveControlPoint"16
CHHapticPattern.mm
-[CHHapticPattern doInitWithDictionary:error:]
v40@?0@"NSMutableArray"8@"NSMutableArray"16@"NSMutableArray"24@"NSError"32
json
ahap
-[CHHapticPattern initWithContentsOfURL:error:]
FullURLPathFromURL
-[CHHapticPattern resolveExternalResources:error:]
+[CHHapticPattern patternForKey:error:]
/Library/Audio/Tunings/Generic/Haptics/Library/hapticpatternlibrary.plist
Version
Configuration
Locality
Priority
HapticPowerUsage
AudioPowerUsage
UsageCategory
EventType
EventDuration
EventWaveformPath
EventWaveformUseVolumeEnvelope
EventWaveformLoopEnabled
EventParameters
Parameter
ParameterID
ParameterValue
ParameterCurve
ParameterCurveControlPoints
TestPattern01
TestPattern02
ScreenLocked
ConnectedToPower
KeyboardInputText
KeyboardInputSeparator
KeyboardInputCandidate
KeyboardDeletion
KeyboardDeletionRepeat
KeyboardDeletionRapid
KeyboardSwitchMode
KeyboardOther
hapi
com.apple.corehaptics
hapticapi_verbose
hpwr
hapticpower_verbose
hmet
hapticmetrics_verbose
FullGamut
DefaultWithFullStrength
LowPriority
HighPriority
ExclusivePriority
HighestPriority
LowPower
HighPower
HapticTransient
HapticContinuous
AudioCustom
AudioContinuous
WheelsOfTime
AudioClick
HapticIntensity
HapticSharpness
AttackTime
DecayTime
ReleaseTime
Sustained
AudioPitch
AudioPan
AudioBrightness
HapticIntensityControl
HapticSharpnessControl
HapticAttackTimeControl
HapticDecayTimeControl
HapticReleaseTimeControl
AudioVolumeControl
AudioPanControl
AudioBrightnessControl
AudioPitchControl
AudioAttackTimeControl
AudioDecayTimeControl
AudioReleaseTimeControl
HapticSharpnessSelect
HapticFullnessSelect
UseVolumeEnvelope
LoopEnabled
CHHapticEngine.mm
+[CHHapticEngine lazyInitResourceMap]
+[CHHapticEngine clearResourceMap]
-[CHHapticEngine setAutoShutdownEnabled:]
-[CHHapticEngine setAutoShutdownEnabled:]_block_invoke
CHHapticLocalityEngineDefault
-[CHHapticEngine setAutoShutdownTimeout:]
-[CHHapticEngine handleMediaServerDeath:]
-[CHHapticEngine handleMediaServerRecovery:]_block_invoke
CHHapticErrorCodeServerInitFailedException
Failed to set up audio session
-[CHHapticEngine createHapticPlayerWithOptions:]
Failed to connect to server
-[CHHapticEngine finishInit:]_block_invoke
-[CHHapticEngine finishInit:]
v16@?0q8
-[CHHapticEngine startIdleTimerWithHandler:]
-[CHHapticEngine startIdleTimerWithHandler:]_block_invoke
-[CHHapticEngine beginIdleTimer]_block_invoke
-[CHHapticEngine beginIdleTimer]_block_invoke_2
-[CHHapticEngine cancelIdleTimer]
-[CHHapticEngine handleFinish:]
-[CHHapticEngine handleFinish:]_block_invoke
-[CHHapticEngine updateEngineBehavior]
-[CHHapticEngine updateEngineBehaviorWithError:]
-[CHHapticEngine stopAndWait]
-[CHHapticEngine stopAndWait]_block_invoke
-[CHHapticEngine dealloc]
AudioSessionID
AudioSessionIsShared
-[CHHapticEngine doInit:sessionIsShared:options:error:]
CHHapticEngineDispatchQueue
-[CHHapticEngine initAndReturnError:]
-[CHHapticEngine initWithAudioSession:error:]
-[CHHapticEngine reconfigureAudioSession]
-[CHHapticEngine doInitWithOptions:error:]
-[CHHapticEngine prewarmWithCompletionHandler:]
-[CHHapticEngine prewarmWithCompletionHandler:]_block_invoke
-[CHHapticEngine stopPrewarm]
-[CHHapticEngine doStartWithCompletionHandler:]
-[CHHapticEngine doStartWithCompletionHandler:]_block_invoke_2
-[CHHapticEngine doStartWithCompletionHandler:]_block_invoke
-[CHHapticEngine startWithCompletionHandler:]
/Library/Caches/com.apple.xbs/Sources/CoreHaptics_Sim/Source/CHHapticEngine.mm
_player != nil
-[CHHapticEngine startWithCompletionHandler:]_block_invoke
-[CHHapticEngine doStartEngineAndWait:]_block_invoke
-[CHHapticEngine doStartEngineAndWait:]
-[CHHapticEngine startAndReturnError:]
-[CHHapticEngine doStopEngineAndWait:]
-[CHHapticEngine doStopEngineAndWait:]_block_invoke
-[CHHapticEngine doStopWithCompletionHandler:]
-[CHHapticEngine doStopWithCompletionHandler:]_block_invoke
-[CHHapticEngine stopWithCompletionHandler:]
-[CHHapticEngine stopWithCompletionHandler:]_block_invoke
-[CHHapticEngine notifyWhenPlayersFinished:]
-[CHHapticEngine notifyWhenPlayersFinished:]_block_invoke_2
-[CHHapticEngine notifyWhenPlayersFinished:]_block_invoke
-[CHHapticEngine initWithAudioSessionID:error:]
-[CHHapticEngine initWithAudioSession:sessionIsShared:options:error:]
shared
unshared
-[CHHapticEngine createPlayerWithPattern:error:]
-[CHHapticEngine createAdvancedPlayerWithPattern:error:]
-[CHHapticEngine createAdvancedPlayerWithRingtoneData:error:]
-[CHHapticEngine createAdvancedPlayerWithVibePatternDictionary:error:]
-[CHHapticEngine createAdvancedPlayerWithRingtonePattern:error:]
-[CHHapticEngine createPrivilegedPlayerWithPlayable:error:]
-[CHHapticEngine getDurationForResource:]
-[CHHapticEngine isResourceLoopEnabled:]
-[CHHapticEngine addPublicAudioResourceID:withURL:options:]
-[CHHapticEngine hasPublicAudioResourceID:]
found
did not find
-[CHHapticEngine removePublicAudioResourceID:]
-[CHHapticEngine registerAudioResource:options:error:]
self.player != nil
-[CHHapticEngine unregisterAudioResource:error:]
-[CHHapticEngine doUnregisterAllPublicAudioResources]
-[CHHapticEngine playPatternFromURL:error:]
plist
-[CHHapticEngine playPatternFromData:error:]
-[CHHapticEngine doPlayPattern:error:]
-[CHHapticEngine doPlayPattern:error:]_block_invoke
-[CHHapticEngine(CHHapticEngineInternal) dispatchOnLocal:]
-[CHHapticEngine(CHHapticEngineInternal) dispatchOnLocal:]_block_invoke
-[CHHapticEngine(CHHapticEngineInternal) dispatchSyncOnLocal:]
-[CHHapticEngine(CHHapticEngineInternal) dispatchSyncOnLocal:]_block_invoke
-[CHHapticEngine(CHHapticEngineInternal) checkEngineStateOnStart:]
self.running
-[CHHapticEngine(CHHapticEngineInternal) checkEngineRunning:]
-[CHHapticEngine(CHHapticEngineInternal) notifyPlayerStarted:atTime:]_block_invoke_2
-[CHHapticEngine(CHHapticEngineInternal) notifyPlayerStarted:atTime:]_block_invoke
-[CHHapticEngine(CHHapticEngineInternal) notifyPlayerStopped:atTime:]
-[CHHapticEngine(CHHapticEngineInternal) getAvailableChannel:]
-[CHHapticEngine(CHHapticEngineInternal) releaseChannel:]
-[CHHapticEngine(CHHapticEngineInternal) doReferenceAudioResourceByID:]
+[CHHapticEngine(CHHapticEngineInternal) doRegisterAudioResource:options:fromPattern:player:error:]
Public
+[CHHapticEngine(CHHapticEngineInternal) doRegisterAudioResource:options:fromPattern:player:error:]_block_invoke
resource->verifyAudioFile(false)
status
+[CHHapticEngine(CHHapticEngineInternal) doUnregisterAudioResource:fromPattern:player:error:]
pattern-loaded
public-loaded
newStateFromOld
/System/Library/Frameworks/AVFoundation.framework/AVFoundation
AVAudioFormat
AVAudioSession
AVAudioSessionMediaServicesWereResetNotification
AVAudioSessionMediaServicesWereLostNotification
AVAudioSessionCategorySystemSoundsAndHaptics
AVAudioSessionCategoryPlayback
AVAudioSessionModeHapticsConstantVolume
AVHapticPlayer.mm
-[AVHapticPlayerChannel setEventBehavior:]
-[AVHapticPlayerChannel sendEvents:atTime:error:]
/Library/Caches/com.apple.xbs/Sources/CoreHaptics_Sim/Source/AVHapticPlayer.mm
self.client != nil
self.client.clientID != kInvalidClientID
self.client.running
[self.client sendEvents:events withImmediateParameters:nil atTime:time channel:self.chanID outToken:nil error:outError]
-[AVHapticPlayerChannel sendEvents:withImmediateParameters:atTime:error:]
[self.client sendEvents:events withImmediateParameters:immediateParameters atTime:time channel:self.chanID outToken:nil error:outError]
-[AVHapticPlayerChannel clearEvents:error:]
[self.client clearEventsFromTime:fromTime channel:self.chanID]
-[AVHapticPlayerChannel setParameter:value:atTime:error:]
[self.client setParameter:type atTime:time value:value channel:self.chanID]
-[AVHapticPlayerChannel scheduleParameterCurve:curve:atTime:error:]
[self.client scheduleParameterCurve:type curve:parameterCurve atTime:time channel:self.chanID error:outError]
-[AVHapticPlayerChannel resetAtTime:error:]
[self.client resetChannel:self.chanID atTime:time]
CoreAudioServices
audio_only_haptic_server
-[AVHapticPlayer doInitWithOptions:error:]
-[AVHapticPlayer doInitWithOptions:error:]_block_invoke
-[AVHapticPlayer initWithSessionID:error:]
-[AVHapticPlayer initWithSessionID:sessionIsShared:error:]
-[AVHapticPlayer initWithOptions:error:]
-[AVHapticPlayer dealloc]
-[AVHapticPlayer queryServerCapabilities:reply:]
-[AVHapticPlayer queryServerCapabilities:reply:]_block_invoke
-[AVHapticPlayer setBehavior:error:]
-[AVHapticPlayer setNumberOfChannels:error:]
-[AVHapticPlayer addChannel:]
clientID invalid
-[AVHapticPlayer removeChannel:error:]
-[AVHapticPlayer allocateRenderResourcesWithCompletionHandler:]
-[AVHapticPlayer deallocateRenderResources]
-[AVHapticPlayer loadHapticEvent:reply:]
-[AVHapticPlayer createCustomAudioEvent:format:frames:options:reply:]
-[AVHapticPlayer copyCustomAudioEvent:options:reply:]
-[AVHapticPlayer referenceCustomAudioEvent:reply:]
-[AVHapticPlayer releaseCustomAudioEvent:reply:]
-[AVHapticPlayer loadAndPrepareHapticSequenceFromData:reply:]
-[AVHapticPlayer loadAndPrepareHapticSequenceFromEvents:reply:]
-[AVHapticPlayer loadAndPrepareHapticSequenceFromVibePattern:reply:]
-[AVHapticPlayer prepareHapticSequence:error:]
-[AVHapticPlayer enableSequenceLooping:enable:error:]
-[AVHapticPlayer setSequenceLoopLength:length:error:]
-[AVHapticPlayer setSequencePlaybackRate:rate:error:]
-[AVHapticPlayer prewarmWithCompletionHandler:]
-[AVHapticPlayer prewarmWithCompletionHandler:]_block_invoke
-[AVHapticPlayer stopPrewarm]
-[AVHapticPlayer startRunningWithCompletionHandler:]
-[AVHapticPlayer startRunningWithCompletionHandler:]_block_invoke
-[AVHapticPlayer stopRunning]
-[AVHapticPlayer stopRunningWithCompletionHandler:]
-[AVHapticPlayer stopRunningWithCompletionHandler:]_block_invoke
-[AVHapticPlayer finishWithCompletionHandler:]
-[AVHapticSequence initWithData:player:error:]
-[AVHapticSequence initWithData:player:error:]_block_invoke
-[AVHapticSequence initWithEvents:player:error:]
-[AVHapticSequence initWithEvents:player:error:]_block_invoke
-[AVHapticSequence initWithDictionary:player:error:]
-[AVHapticSequence initWithDictionary:player:error:]_block_invoke
-[AVHapticSequence dealloc]
-[AVHapticSequence setEventBehavior:]
-[AVHapticSequence setLoopingEnabled:error:]
_seqID != kInvalidSequenceID
-[AVHapticSequence prepareToPlayAndReturnError:]
self.player.resourcesAllocated
-[AVHapticSequence playAtTime:offset:error:]
self.player.client.clientID != kInvalidClientID
self.player.client.running
-[AVHapticSequence stopAtTime:error:]
-[AVHapticSequence pauseAtTime:error:]
-[AVHapticSequence resumeAtTime:error:]
-[AVHapticSequence seekToTime:error:]
-[AVHapticSequence resetAtTime:error:]
-[AVHapticSequence setParameter:value:channel:atTime:error:]
channelIndex < self.channelCount
-[AVHapticSequence cancelAndReturnError:]
-[AVHapticSequence activateChannelByIndex:atTime:error:]
index < self.channelCount
-[AVHapticSequence setVolume:atTime:error:]
-[AVHapticSequence earlyUnduckAudioAtTime:error:]
AudioResourceIndex
%25s:%-5d %s: Clearing any externally-registered audio resources
%25s:%-5d %s: EventParameter %@ does not support ImmediateParameter modulation. Ignore
 enableTelemetry=YES 
%25s:%-5d %s: creating player %p
%25s:%-5d %s: ERROR: pattern contains no playable events
PatternPlayer_initWithPlayable
%25s:%-5d %s: destroying player %p
%25s:%-5d %s: Sending %smute params
%25s:%-5d %s: Starting simple player %p at time %.3f
PatternPlayer_startAtTime
%25s:%-5d %s: Stopping simple player %p at time %.3f
PatternPlayer_stopAtTime
%25s:%-5d %s: Sending simple player %p parameters at time %.3f
PatternPlayer_sendParameters
%25s:%-5d %s: Cancelling events on simple player %p immediately
PatternPlayer_cancelAndReturnError
%25s:%-5d %s: Sending player %p a parameter curve
PatternPlayer_scheduleParameterCurve
%25s:%-5d %s: Starting simple player extended %p at time %.3f
PatternPlayer_startAtTime_withImmediateParameters
%25s:%-5d %s: %s: %s error %d
%25s:%-5d %s: In parameter %@ is not a valid CHHapticEventParameter
%25s:%-5d %s: In parameter %@ is not a valid CHHapticDynamicParameter
%25s:%-5d %s: Engine not configured with a Locality - querying using '%@'
%25s:%-5d %s: Querying server for capabilities with '%@' Locality
%25s:%-5d %s: Querying server for capabilities with Priority '%@'
%25s:%-5d %s: ERROR: Illegal priority: %@
%25s:%-5d %s: Querying server for capabilities with HapticPowerUsage '%@'
%25s:%-5d %s: ERROR: Illegal power usage: %@
%25s:%-5d %s: Querying server for UsageCategory of '%@'
%25s:%-5d %s: Server returned: supports audio: %d adv players: %d internal: %d cont time limit: %us
%25s:%-5d %s: Recieved %u haptic transient IDs
%25s:%-5d %s: Recieved %u haptic continuous sustained IDs
%25s:%-5d %s: Recieved %u haptic continuous nonsustained IDs
%25s:%-5d %s: ERROR: Caught exception during dictionary parse
%25s:%-5d %s: ERROR: Server query returned error '%@'
%25s:%-5d %s: Setting default completion handler on underlying AVHapticSequence
%25s:%-5d %s: Player %p default completion handler called
%25s:%-5d %s: Creating advanced player %p
AdvancedPatternPlayer_initWithPattern
%25s:%-5d %s: Destroying advanced player %p
%25s:%-5d %s: Starting sequence with offset %.3f
%25s:%-5d %s: Restarting paused sequence with offset %.3f
%25s:%-5d ASSERTION FAILURE [(self.paused) != 0 is false]: 
%25s:%-5d %s: Resuming paused sequence with offset %.3f
%25s:%-5d %s: Starting player %p at time %.3f
AdvancedPatternPlayer_startAtTime
%25s:%-5d %s: Stopping player %p at time %.3f
AdvancedPatternPlayer_stopAtTime
%25s:%-5d %s: Sending player %p parameters at time %.3f
AdvancedPatternPlayer_sendParameters
%25s:%-5d %s: ERROR: Parameter curves are not yet supported on CHHapticAdvancedPlayers
%25s:%-5d %s: Pausing player %p at time %.3f
%25s:%-5d %s: Resuming player %p at time %.3f
%25s:%-5d %s: Caching player %p offset %.2f for later start/resume
%25s:%-5d %s: Seeking on player %p to offset %.2f
%25s:%-5d %s: Cancelling commands for player %p immediately
%25s:%-5d %s: Wrapping client's completion handler block %p in our block and setting on underlying AVHapticSequence
%25s:%-5d %s: Player %p client-supplied completion handler called - calling captured block %p on internal queue
%25s:%-5d %s: Client-supplied completion handler called on destroyed player - calling captured block %p on global queue
AdvancedPatternPlayer_initWithRingtoneData
AdvancedPatternPlayer_initWithVibePatternDictionary
%25s:%-5d %s: Setting player %p to early unduck audio at time %.3f
%25s:%-5d %s: ERROR: Failed to open audio resource %@: %u
%25s:%-5d %s: ERROR: Failed to get property for audio resource %@
%25s:%-5d %s: ERROR: Failed to set property on audio resource %@
%25s:%-5d %s: ERROR: Failed to read from audio resource %@: %u
%25s:%-5d %s: Adding %llu bytes to our existing %llu
%25s:%-5d %s: Memory limit reached on custom audio resources - unregister others to make space
%25s:%-5d %s: Removing %llu bytes from our existing %llu
%25s:%-5d ASSERTION FAILURE [(_sTotalAllocatedBytes >= bytes) != 0 is false]: 
%25s:%-5d %s: ERROR: Unknown event param type: %u
%25s:%-5d %s: ERROR: Unknown param type: %u
%25s:%-5d %s: ERROR: Cannot export AudioCustom events
%25s:%-5d %s: Type %u time: %.2f secs dur: %.2f secs %u event params
%25s:%-5d %s: Fixed Param '%@': value %f
%25s:%-5d %s: ERROR: Unknown event param type: %@
%25s:%-5d %s: Time: %.2f secs dur %.2f secs %u event params
%25s:%-5d %s: Fixed Param '%@': value: %f
%25s:%-5d %s: Normalized sharpness %f -> event type %u
%25s:%-5d %s: Ignoring for HapticTransient
%25s:%-5d %s: Event has no HapticSharpness EventParameter. Default event type: %u
%25s:%-5d %s: Adding event param for haptic gain: %.2f
%25s:%-5d %s: Normalized value %f -> sharpness index %d
%25s:%-5d %s: ERROR: Cannot mix Fullness with unprivileged Sharpness parameter
%25s:%-5d %s: Normalized value %f -> fullness index %d
%25s:%-5d %s: ERROR: Cannot mix privileged and unprivileged Sharpness parameters
%25s:%-5d %s: ERROR: Unknown event parameter type: %@
%25s:%-5d %s: Handling as a non-privileged event
%25s:%-5d %s: Type %u time: %.2f secs duration: %.2f secs %u client event params
%25s:%-5d %s: Event has no HapticSharpness EventParameter. Using default event ID %u
%25s:%-5d %s: Adding event param for continuous haptic intensity: %.2f
%25s:%-5d %s: ERROR: Unsupported event param type: %@
%25s:%-5d %s: Event type '%@':
%25s:%-5d %s: ERROR: Illegal time value: %f
%25s:%-5d %s: ERROR: Illegal duration value: %f
%25s:%-5d %s: ERROR: Continuous haptic event has a missing or zero-length duration
%25s:%-5d %s: Haptic event duration capped at %f seconds
%25s:%-5d %s: ERROR: Continuous audio event has a missing or zero-length duration
%25s:%-5d %s: ERROR: Audio resource with ID %u has looping enabled but the event does not specify a duration
%25s:%-5d %s: ERROR: Invalid or missing audio resource with ID %u
%25s:%-5d %s: ERROR: Unknown privileged event type: %@
%25s:%-5d %s: ERROR: Unknown event type: %@
%25s:%-5d %s: Dynamic parameter ID '%@':
%25s:%-5d %s: Creating event for haptic volume %f for time %f seconds
%25s:%-5d %s: Creating event for haptic transposition %f for time %f seconds
%25s:%-5d %s: Creating event for haptic attack time %f for time %f seconds
%25s:%-5d %s: Creating event for haptic decay time %f for time %f seconds
%25s:%-5d %s: Creating event for haptic release time %f for time %f seconds
%25s:%-5d %s: Creating event for audio volume %f for time %f seconds
%25s:%-5d %s: Creating event for audio brightness %f for time %f seconds
%25s:%-5d %s: Creating event for audio pan %f for time %f seconds
%25s:%-5d %s: Creating event for audio transposition %f for time %f seconds
%25s:%-5d %s: Creating event for audio attack time %f for time %f seconds
%25s:%-5d %s: Creating event for audio decay time %f for time %f seconds
%25s:%-5d %s: Creating event for audio release time %f for time %f seconds
%25s:%-5d %s: ERROR: Unrecognized dynamic parameter: %@
%25s:%-5d %s: Parameter curve ID: '%@', relative time: %f
%25s:%-5d %s: ERROR: ID %@ is not supported by parameter curves
%25s:%-5d %s: ERROR: Invalid event parameter ID.
%25s:%-5d %s: ERROR: Invalid dynamic parameter ID
%25s:%-5d %s: Setting SS&H category %@ volume, disabling notifications and NowPlaying for this audio session
%25s:%-5d %s: Failed to set category on audio session
%25s:%-5d %s: Failed to set mode %@ on audio session. Continue
%25s:%-5d %s: Cannot set audio session with session flags. Continue
%25s:%-5d %s: Cannot set audio buffer frame size to %u. Using default buffer size
%25s:%-5d %s: Failed to disable audio session notifications
%25s:%-5d %s: Failed to disable audio session now-playing policy
%25s:%-5d %s: Setting NeedsPowerBudgeting property on audio session
%25s:%-5d %s: Failed to set audio session NeedsPowerBudgeting
%25s:%-5d %s: Setting for System Sound, disabling notifications and NowPlaying for this audio session
%25s:%-5d %s: Cannot set audio buffer frame size to %u
%25s:%-5d %s: Failed to set not to be ducked by others
%25s:%-5d %s: Failed to set duck level
%25s:%-5d %s: Using default usage category
%25s:%-5d %s: Cannot set audio buffer frame size to %u. Error: %@
%25s:%-5d %s: WARNING: Missing or malformed version key - assuming v1.0
%25s:%-5d %s: ERROR: Unsupported version number: %.1f
%25s:%-5d %s: Pattern version %.1f
%25s:%-5d %s: Pattern Locality: '%@'
%25s:%-5d %s: Pattern Priority: '%@'
%25s:%-5d %s: Pattern HapticPowerUsage: '%@'
%25s:%-5d %s: Pattern AudioPowerUsage: '%@'
%25s:%-5d %s: Pattern UsageCategory: '%@'
%25s:%-5d %s: Adding embedded audio resource path '%@', options '%@'
%25s:%-5d %s: ERROR: Pattern dictionary is missing '%@' key
%25s:%-5d %s: ERROR: Empty pattern
%25s:%-5d %s: ERROR: Missing event type
%25s:%-5d %s: ERROR: Illegal or missing event time
%25s:%-5d %s: ERROR: Illegal event duration
%25s:%-5d %s: ERROR: Custom event is missing its audio resource path
%25s:%-5d %s: ERROR: Custom event's audio resource path cannot be resolved
%25s:%-5d %s: ERROR: Event parameter has invalid or missing parameter ID
%25s:%-5d %s: ERROR: Event parameter has invalid or missing parameter value
%25s:%-5d %s: ERROR: Param is missing a %s
%25s:%-5d %s: ERROR: Parameter curve control point has invalid or missing time
%25s:%-5d %s: ERROR: Parameter curve control point has invalid or missing value
%25s:%-5d %s: Client 0x%x EngineState -> %d
%25s:%-5d %s: (Client 0x%x returning EngineState %d)
%25s:%-5d %s: initializing with options
%25s:%-5d %s: Init calling disconnect on self
%25s:%-5d %s: Init exited
%25s:%-5d %s: Deallocating HapticClient 0x%x
%25s:%-5d %s: dealloc of HapticClient exited
%25s:%-5d %s: ERROR: Unable to get server capabilities: %@
%25s:%-5d %s: ERROR: Unable to get latency: %@
%25s:%-5d %s: Got error from server: %@
%25s:%-5d %s: Client 0x%x allocating
%25s:%-5d %s: ERROR: Unable to set up client: %@
%25s:%-5d %s: Server returned shared buffer of size %u
%25s:%-5d ASSERTION FAILURE [(sharedBufferSize > 0) != 0 is false]: 
%25s:%-5d %s: Setting up shared memory on client
%25s:%-5d %s: ERROR: Unable to access shared memory
%25s:%-5d %s: Notifying caller via completion callback
%25s:%-5d %s: done allocating
%25s:%-5d %s: Client 0x%x loading dictionary: %p
%25s:%-5d %s: Got error during transaction: %@
%25s:%-5d %s: done loading event
%25s:%-5d %s: done creating event
%25s:%-5d %s: done copying event
%25s:%-5d %s: done referencing event
%25s:%-5d %s: done releasing event
%25s:%-5d %s: Client 0x%x starting prewarm
%25s:%-5d %s: Server called client-side prewarm completionCallback
%25s:%-5d %s: Client 0x%x stopping prewarm
%25s:%-5d %s: ERROR: Unable to stop prewarm: %@
%25s:%-5d %s: Client 0x%x starting
%25s:%-5d %s: Client 0x%x done with startRunning:
%25s:%-5d %s: Client 0x%x stopping
%25s:%-5d %s: ERROR: Unable to stop running: %@
%25s:%-5d %s: Client 0x%x done with stopRunning:
%25s:%-5d %s: Client 0x%x finishing
%25s:%-5d %s: completionCallback set to %p
%25s:%-5d %s: Writing FinalEvent with time %f [host time was %llu]
%25s:%-5d %s: ERROR: Attempt to write FinalEvent failed - bailing by calling completionCallback with error %@ for client 0x%x
%25s:%-5d %s: ERROR: Player was not running - bailing with error %@ for client 0x%x
%25s:%-5d %s: Client 0x%x done with finish
%25s:%-5d %s: Client 0x%x, behavior %u
%25s:%-5d %s: Got error from server: %p
%25s:%-5d %s: done setting behavior
%25s:%-5d %s: Client 0x%x writing reset event: time: %.3f channelID: %u
%25s:%-5d %s: fixed param[%u]: source value: %.2f, immediateParameter value: %.2f, result value: %.2f
%25s:%-5d %s: ImmediateParameter for ID %u is not supported
%25s:%-5d %s: Copied fixed param[%d]: ID %d, normalized value %f, for start event
%25s:%-5d %s: Creating start event at relative time %f for eventID: %u
%25s:%-5d %s: Client 0x%x writing %u events from passed-in event array at time: %.3f
%25s:%-5d %s: Bailing out on recursion (availableSize = %u)
%25s:%-5d %s: Bailing out on recursion because event array cannot be split further
%25s:%-5d %s: ====>> StartEventList at time: %f
%25s:%-5d %s: Start event: relative time %f
%25s:%-5d %s: Stop event added: relative time %f
%25s:%-5d %s: ERROR: Memory write failed
%25s:%-5d %s: Param event: relative time %f
%25s:%-5d %s: Param curve: relative time %f
%25s:%-5d %s: ERROR: Event is none of haptic/audio event, parameter, or parameter curve. returning
%25s:%-5d %s: <<==== EndEventList at time: %f
%25s:%-5d %s: Client 0x%x writing %u param curve control points from passed-in param curve array at time: %.3f
%25s:%-5d %s: => StartParamCurveList (paramID %u) at (relative-to-event-list) time %.3f
%25s:%-5d %s: %u curve points
%25s:%-5d %s: Point for synth param[%u]: rel time: %.3f, converted value: %f
%25s:%-5d %s: == AddParamCurve (paramID %u) rel time %.3f
%25s:%-5d %s: <= EndParamCurveList (paramID %u) at time %f
%25s:%-5d %s: Client 0x%x writing command: time: %.3f type: %hu
%25s:%-5d %s: Client 0x%x writing command: time: %.3f type: %hu ID: %u, value: %f
%25s:%-5d %s: ERROR: Client 0x%x: doScheduleParamCurve failed!
%25s:%-5d ASSERTION FAILURE [(result) != 0 is false]: 
%25s:%-5d %s: Client 0x%x loading sequence: %p
%25s:%-5d %s: loadAndPrepareHapticSequenceFromData:reply: top of [serverDelegate loadHapticSequenceFromData] reply block
%25s:%-5d %s: Got error during transaction: %p
%25s:%-5d %s: done loading sequence
%25s:%-5d %s: Client 0x%x loading sequence from event array
%25s:%-5d %s: loadAndPrepareHapticSequenceFromEvents:reply: top of [serverDelegate loadHapticSequenceFromEvents] reply block
%25s:%-5d Got error from server: %@
%25s:%-5d %s: Client 0x%x loading pattern: %p
%25s:%-5d %s: loadAndPrepareHapticSequenceFromVibePattern:reply: top of [serverDelegate loadVibePattern] reply block
%25s:%-5d %s: done loading pattern
%25s:%-5d %s: Client 0x%x, seqID %u, behavior %u
%25s:%-5d %s: Caching sequence finished handler block %p for seqID %u
%25s:%-5d %s: Calling completion handlers on any active sequences
%25s:%-5d %s: Sequence %u is running - setting entry to detached
%25s:%-5d %s: Sequence %u is not running - deleting entry
%25s:%-5d %s: Client 0x%x preparing sequenceID: %u
%25s:%-5d %s: prepareHapticSequence:error: top of [serverDelegate prepareHapticSequence] reply block
%25s:%-5d %s: done preparing
%25s:%-5d %s: Writing command: (time 0) type: %hu sequenceID: %u looping: %d
%25s:%-5d %s: Writing command: (time 0) type: %hu sequenceID: %u loop length: %f
%25s:%-5d %s: Writing command: (time 0) type: %hu sequenceID: %u rate: %f
%25s:%-5d %s: Writing command: time: %.3f type: %hu sequenceID: %u offset: %f
%25s:%-5d %s: Writing command: time: %.3f seq cmd type: %hu sequenceID: %u
%25s:%-5d %s: Writing command: time: %.3f type: %hu sequenceID: %u channel: %u param: %u value: %.3f
%25s:%-5d %s: Writing command: time: %.3f cmd type: %hu sequenceID: %u
%25s:%-5d %s: Client 0x%x detaching sequenceID %u
%25s:%-5d %s: releasing resources
%25s:%-5d %s: done releasing
%25s:%-5d %s: [xpc] Connecting...
%25s:%-5d %s: [xpc] Connection: %@
%25s:%-5d %s: Calling configureWithOptions:reply on server with dictionary: '%@'
%25s:%-5d %s: ERROR: Failed setting options / retrieving client ID from server
%25s:%-5d %s: Initial XPC call to server timed out
%25s:%-5d %s: [xpc] Server connection: %@, PID: %d
%25s:%-5d %s: [xpc] Got error during transaction: %@
%25s:%-5d %s: [xpc] ERROR: Failed retrieving client ID
%25s:%-5d %s: Client ID: 0x%lx
%25s:%-5d %s: [xpc] done connecting
%25s:%-5d %s: ERROR: Async XPC call for '%@' (client ID 0x%x) failed: %@
%25s:%-5d %s: ERROR: Sync XPC call for '%@' (client ID 0x%x) failed: %@
%25s:%-5d %s: [xpc] Invalidating...
%25s:%-5d %s: [xpc] done disconnecting
%25s:%-5d %s: Calling server with player behavior %u
%25s:%-5d %s: Exited
%25s:%-5d %s: Calling server with request for %u channels
%25s:%-5d %s: Server returned count of %u
%25s:%-5d %s: done requesting channels
%25s:%-5d %s: Calling server with request to remove channelID %u
%25s:%-5d %s: done removing channel
%25s:%-5d %s: [xpc] Entered (due to connection interruption) for client ID 0x%x
%25s:%-5d %s: We were waiting for a completion callback, so call it now
%25s:%-5d %s: We were running, so call async stopped callback
%25s:%-5d %s: [xpc] done handling crash for client ID 0x%x
%25s:%-5d %s: [xpc] Entered (due to connection invalidation) for client ID 0x%x
%25s:%-5d %s: [xpc] Entered (due to client disconnect) for client ID 0x%x
%25s:%-5d %s: [xpc] done handling disconnect for client ID 0x%x
%25s:%-5d %s: Client-side sequence finish callback for client 0x%x, seq %u
%25s:%-5d %s: Deleting finished handler block for detached sequence
%25s:%-5d %s: Calling cached sequence finished handler block %p
%25s:%-5d %s: Client-side sequence finish callback done for client 0x%x
%25s:%-5d %s: No cached sequence finished handler block for seq %u
%25s:%-5d %s: Client-side (async) finish completion callback for client 0x%x called from server
%25s:%-5d %s: Async dispatch: preparing to call completionCallback for client 0x%x
%25s:%-5d %s: Calling completionCallback %p and then setting to nil
%25s:%-5d %s: strongSelf.completionCallback is nil
%25s:%-5d %s: AVHapticClient 'strongSelf' is nil
%25s:%-5d %s: Client-side finish completionCallback done for client 0x%x
%25s:%-5d %s: Client-side (async) stop callback for client 0x%x, reason %d
%25s:%-5d %s: Client thinks it is not running.  Did we just get a call to stop?
%25s:%-5d %s: Client-side (async) stop callback done for client 0x%x
%25s:%-5d %s: Client-side call for client 0x%x with disconnect reason %d
%25s:%-5d %s: Splitting length-%u array at index %u (delta from previous event: %f seconds)
%25s:%-5d %s: Force-splitting length-%u array at index %u (delta from previous event: %f seconds)
%25s:%-5d %s: No good split point found - returning midpoint %u
%25s:%-5d %s: Pattern version > %.1f - looking for config dictionary
%25s:%-5d %s: File type is not supported
%25s:%-5d %s: Incoming URL not a valid file path
%25s:%-5d %s: AHAP dictionary is corrupt: %@
%25s:%-5d %s: Searching for resource in '%@'
%25s:%-5d %s: Found it at '%@'
%25s:%-5d %s: WARNING: Skipping Custom Audio event - server does not support audio
%25s:%-5d %s: Creating pattern for key '%@'
%25s:%-5d %s: Pattern library path: %@
%25s:%-5d %s: Failed to read pattern library data: %@
%25s:%-5d %s: Read pattern library data
%25s:%-5d %s: Failed to load pattern library: %@
%25s:%-5d %s: Loaded pattern library dict:
%25s:%-5d %s: Haptic pattern with key '%@' not found
%25s:%-5d %s: '%@' path: %@
%25s:%-5d %s: Failed to read pattern data: %@
%25s:%-5d %s: Read pattern data
%25s:%-5d %s: Failed to serialize pattern data: %@
%25s:%-5d %s: '%@' pattern dict:
%25s:%-5d %s: Creating resource map on first use
%25s:%-5d %s: Clearing resource map
%25s:%-5d %s: auto-shutdown being enabled while running - wait for any existing players
%25s:%-5d %s: <Top of AV finishWithCompletionHandler block>
%25s:%-5d %s: finishWithCompletionHandler callback returned error: %@
%25s:%-5d %s: <Bottom of AV finishWithCompletionHandler block>
%25s:%-5d %s: auto-shutdown being disabled
%25s:%-5d %s: Invalid shutdown timeout (%f) being ignored
%25s:%-5d %s: Engine %p was notified of server death
%25s:%-5d %s: Clearing public audio resources
%25s:%-5d %s: Attempting to reconnect engine %p to server
%25s:%-5d %s: Engine already destroyed - noop
%25s:%-5d %s: Engine had external passed-in auxiliary session. Caller should reconfigure session
%25s:%-5d %s: Calling engine-reset handler on default queue
%25s:%-5d %s: Done with reconnect for engine %p
%25s:%-5d %s: FATAL ERROR: Unable to reconnect to server
HapticEngine_handleMediaServerRecovery
%25s:%-5d %s: Creating underlying Haptic Player
%25s:%-5d %s: Attempt #%d...
%25s:%-5d %s: ERROR: Server failure: %@
%25s:%-5d %s: ERROR: Server connection broke with error '%@'
%25s:%-5d %s: Waiting to reconnect
%25s:%-5d %s: Allocating resources...
%25s:%-5d %s: ERROR: Resource allocation failure: %@
%25s:%-5d %s: Releasing lock
%25s:%-5d %s: Waiting for server...
%25s:%-5d %s: ERROR: Server timeout
%25s:%-5d %s: Default behavior is to follow audio route
%25s:%-5d %s: Setting behavior to not follow audio route
%25s:%-5d %s: In player's stopRunningHandler block.  Stopped reason: %d
%25s:%-5d %s: Calling engine-stopped handler with reason %d
%25s:%-5d %s: Finished initializing
%25s:%-5d %s: Creating idle timer for %.3f seconds
%25s:%-5d %s: Calling idle timeout handler on internal queue
%25s:%-5d %s: Starting idle timer (on async dispatch)
%25s:%-5d %s: Stopping engine in response to timeout
%25s:%-5d %s: Calling client's engine-stopped handler on internal queue
%25s:%-5d %s: Cancelling idle timer
%25s:%-5d %s: Called on engine %p with error %@
%25s:%-5d %s: Calling client's finishedHandler on internal queue
%25s:%-5d %s: Client requested engine stop-on-finish
%25s:%-5d %s: Client finishedHandler is nil
%25s:%-5d %s: <Top of doStopWithCompletionHandler block>
%25s:%-5d %s: Calling engine-stopped handler on internal queue
%25s:%-5d %s: Engine stop completed
%25s:%-5d %s: Client-supplied stopped handler called on destroyed player - calling captured block %p on global queue
%25s:%-5d %s: Requested not to stop-on-finish
%25s:%-5d %s: Done handling finish
%25s:%-5d %s: Setting player's behavior to 0x%x
%25s:%-5d %s: Synchronously stopping the underlying player %p
%25s:%-5d %s: Calling stop completion handler on internal queue
%25s:%-5d %s: Underlying player %p not running
%25s:%-5d %s: synchronously stopping and destroying engine %p
%25s:%-5d %s: done destroying engine %p
%25s:%-5d %s: sessionID: %u, isShared: %u options: '%@'
%25s:%-5d %s: ERROR: Invalid audio session ID: %u
%25s:%-5d %s: Creating engine %p with legacy initializer
HapticEngine_initAndReturnError
%25s:%-5d %s: Creating engine %p with audio session %p
%25s:%-5d %s: Creating engine %p with internal audio session
HapticEngine_initWithAudioSession
%25s:%-5d %s: Cannot reconfigure audio session for system sound
%25s:%-5d %s: options: '%@'
HapticEngine_initWithOptions
%25s:%-5d %s: Prewarming the underlying Haptic Player
%25s:%-5d %s: ERROR: Player prewarm failed: %@
%25s:%-5d %s: Calling prewarm completion handler
HapticEngine_prewarmWithCompletionHandler
%25s:%-5d %s: Stopping prewarm on the underlying Haptic Player
HapticEngine_stopPrewarm
%25s:%-5d %s: Starting underlying Haptic Player
%25s:%-5d %s: In underlying AVHapticPlayer's completion handler block
%25s:%-5d %s: ERROR: Player start failed: %@
%25s:%-5d %s: Calling start completion handler on internal queue
%25s:%-5d %s: Called on engine %p
%25s:%-5d %s: Engine already running
%25s:%-5d %s: Directly calling start completionHandler on internal queue
HapticEngine_startWithCompletionHandler
%25s:%-5d %s: Waiting for startup...
%25s:%-5d %s: ERROR: Startup timeout
%25s:%-5d %s: Startup complete
HapticEngine_startAndReturnError
%25s:%-5d %s: Synchronously stopping underlying Haptic Player
%25s:%-5d %s: In underlying AVHapticPlayer's completion handler block for doStopEngineAndWait
%25s:%-5d %s: ERROR: Player stop failed: %@
%25s:%-5d %s: Waiting for player stop...
%25s:%-5d %s: WARNING: timed out waiting for underlying player to stop
%25s:%-5d %s: Done waiting for underlying player stop
%25s:%-5d %s: Stopping underlying Haptic Player
%25s:%-5d %s: In underlying AVHapticPlayer's completion handler block for doStopWithCompletionHandler
%25s:%-5d %s: ERROR: Lower-level player stop failed: %@
%25s:%-5d %s: Engine not running
%25s:%-5d %s: Directly calling stop completionHandler on internal queue
HapticEngine_stopWithCompletionHandler
%25s:%-5d %s: Called on engine %p with finishedHandler %p
%25s:%-5d %s: Creating engine %p with shared audio session ID %u
HapticEngine_initWithAudioSessionID
%25s:%-5d %s: Creating engine %p with %s audio session %p
%25s:%-5d %s: Using passed-in shared audio session
%25s:%-5d %s: Shared audio session cannot be nil
%25s:%-5d %s: Using passed-in auxiliary audio session with no UsageCategory
%25s:%-5d %s: Creating internal unshared audio session
%25s:%-5d %s: Setting behavior to not activate audio session (if haptics-only)
%25s:%-5d %s: Creating player from pattern
%25s:%-5d %s: Creating advanced player from pattern
%25s:%-5d %s: Creating advanced player from ringtone data
%25s:%-5d %s: Creating advanced player from vibe pattern dictionary
%25s:%-5d %s: Creating advanced player from ringtone pattern
%25s:%-5d %s: Creating privileged player from Playable
%25s:%-5d %s: Cannot find resource referenced by ID %u. Returning 0.0
%25s:%-5d %s: Cannot find resource referenced by ID %u. Returning FALSE
%25s:%-5d %s: Engine %p adding resID %u to public resource list
%25s:%-5d ASSERTION FAILURE [([self doFindPublicAudioResourceID:resourceID] == std::end(_publicAudioResources)) != 0 is false]: 
%25s:%-5d %s: Engine %p %s resID %u
%25s:%-5d %s: Engine %p removing resID %u from public resource list
%25s:%-5d ASSERTION FAILURE [(result != std::end(_publicAudioResources)) != 0 is false]: 
HapticEngine_registerAudioResource
%25s:%-5d %s: ERROR: audio resource ID %u not registered on this CHHapticEngine
HapticEngine_unregisterAudioResource
%25s:%-5d %s: Attempting to remove all remaining public audio resources for this engine
%25s:%-5d %s: Creating haptic pattern from plist...
%25s:%-5d %s: Creating haptic pattern from JSON or AHAP...
%25s:%-5d %s: Incoming fileURL cannot be nil
HapticEngine_playPatternFromURL
%25s:%-5d %s: Incoming NSData is invalid
HapticEngine_playPatternFromData
%25s:%-5d %s: Incoming NSData cannot be nil
%25s:%-5d %s: Creating Pattern Player
%25s:%-5d %s: Starting CHHapticEngine...
%25s:%-5d %s: Cannot start haptic engine: error %@
%25s:%-5d %s: Starting Pattern Player...
%25s:%-5d %s: <Dispatching block %p async...>
%25s:%-5d ASSERTION FAILURE [(!in_dispatch_sync) != 0 is false]: 
%25s:%-5d %s: <Block async dispatch complete>
%25s:%-5d %s: <Dispatching block %p sync...>
%25s:%-5d %s: <Block sync dispatch complete>
%25s:%-5d %s: AutoShutdown on and engine stopped - auto start
%25s:%-5d %s: player %p notified engine it will be stopping at time %.3f
%25s:%-5d %s: ERROR: Unable to add an additional player channel
%25s:%-5d %s: ERROR: This channel was not registered
%25s:%-5d %s: Adding reference to audio resource ID %u from pattern
%25s:%-5d %s:    found it - reference count now %u
%25s:%-5d %s: Resource ID %u not previously registered!
%25s:%-5d %s: Registering %s audio resource '%@'
%25s:%-5d %s: -- Entry list has '%@' with ID %u, and count %u
%25s:%-5d %s: Resource already registered and request uses matching options - referencing existing ID (%u)
%25s:%-5d %s: ERROR: unable to reference server-side audio resource with ID %u: %@
%25s:%-5d %s: Returning ID 0 due to error
%25s:%-5d %s: Resource already registered but request uses options - copy existing ID (%u) as new ID
%25s:%-5d %s: ERROR: Server failed to copy custom audio event: %@
%25s:%-5d ASSERTION FAILURE [(_sResourceEntries->emplace(copiedResourceID, ResourceEntry(resource, options, 1)).second == true) != 0 is false]: 
%25s:%-5d %s: Returning ID %u for copied resource '%@'
%25s:%-5d %s: Resource not already registered - creating new entry
%25s:%-5d %s: ERROR: Server failed to create custom audio event: %@
%25s:%-5d %s: Adding new ID %u for %s resource '%@'
%25s:%-5d ASSERTION FAILURE [(_sResourceEntries->emplace(resourceID, ResourceEntry(resource, options, 1)).second == true) != 0 is false]: 
%25s:%-5d %s: Attempting to remove %s ID %u
%25s:%-5d %s:    found it and refcount is at zero - erasing and releasing on server
%25s:%-5d %s: ERROR: unable to release server-side audio resource with ID %u: %@
%25s:%-5d %s:    found it and decrementing refcount
%25s:%-5d %s: ERROR: could not find audio resource with ID %u
%25s:%-5d %s: Old: %d mute: %d running: %d => New: %d
%25s:%-5d %s: clientID: 0x%lx channelID: %u behavior: %u
%25s:%-5d %s: Illegal event behavior: %u
%25s:%-5d %s: sending event array: clientID: 0x%lx atTime: %.3f
%25s:%-5d %s: clearing events: clientID: 0x%lx fromTime: %.3f
%25s:%-5d %s: setting param: clientID: 0x%lx type: %u value: %.2f atTime: %.3f
%25s:%-5d %s: sending reset event: clientID: 0x%lx time: %.3f
%25s:%-5d %s: exited with nil
%25s:%-5d %s: Connection error
%25s:%-5d %s: initWithSessionID entered
%25s:%-5d %s: initWithSessionID exited
%25s:%-5d %s: initWithInternalSessionID entered
%25s:%-5d %s: initWithOptions entered
%25s:%-5d %s: initWithOptions exited
%25s:%-5d %s: dealloc entered for player %p
%25s:%-5d %s: dealloc exited
%25s:%-5d %s: clientID: 0x%lx
%25s:%-5d %s: clientID: 0x%lx: call failed
%25s:%-5d %s: clientID: 0x%lx behavior: %u
%25s:%-5d %s: clientID: 0x%lx numberOfChannels: %u
%25s:%-5d %s: Can't set channel count while player is running
%25s:%-5d %s: player %p, clientID: 0x%lx
%25s:%-5d %s: Total channels was %u, now %u
%25s:%-5d ASSERTION FAILURE [(newChannelCount == oldChannelCount + 1) != 0 is false]: 
%25s:%-5d %s: Adding new AVHapticPlayerChannel %p to end of array with channel ID %u
%25s:%-5d %s: Returning channel %p (ID %u)
%25s:%-5d %s: player %p, clientID: 0x%lx channel %p (ID %u)
%25s:%-5d %s: Channel not found on player
%25s:%-5d %s: allocating resources: clientID: 0x%lx
%25s:%-5d %s: Resources already allocated -- just call completion handler
%25s:%-5d %s: deallocating resources: clientID: 0x%lx
%25s:%-5d %s: Resources already deallocated -- noop
%25s:%-5d %s: loading haptic event: clientID: 0x%lx
%25s:%-5d %s: creating custom audio event: clientID: 0x%lx, frameCount: %lu
%25s:%-5d %s: copying custom audio event: clientID: 0x%lx, eventID: %u
%25s:%-5d %s: referencing custom audio event: clientID: 0x%lx
%25s:%-5d %s: releasing custom audio event: clientID: 0x%lx
%25s:%-5d %s: loading haptic sequence from NSData: clientID: 0x%lx
%25s:%-5d %s: loading and preparing haptic sequence from NSArray: clientID: 0x%lx
%25s:%-5d %s: loading and preparing haptic pattern: clientID: 0x%lx
%25s:%-5d %s: sequence %u already prepared for clientID: 0x%lx - NOOP
%25s:%-5d %s: enable sequence looping: entered
%25s:%-5d %s: set sequence loop length: entered
%25s:%-5d %s: set sequence playback rate: entered
%25s:%-5d %s: prewarm: clientID: 0x%lx
%25s:%-5d %s: reply block for _client prewarm: replyError: %@
%25s:%-5d %s: stop prewarm: clientID: 0x%lx
%25s:%-5d %s: start running: clientID: 0x%lx
%25s:%-5d %s: Client 0x%lx asynchronously stopped for reason %d
%25s:%-5d %s: reply block for _client startRunning: replyError: %@
%25s:%-5d %s: Cannot start without allocating resources
%25s:%-5d %s: stop running: clientID: 0x%lx
%25s:%-5d %s: reply block for _client stopRunning: replyError: %@
%25s:%-5d %s: Client was not running - calling completion handler immediately
%25s:%-5d %s: finish with comp handler: clientID: 0x%lx
%25s:%-5d %s: starting init with data %p, player %p
%25s:%-5d %s: initWithData: reply block for hapticPlayer loadAndPrepareHapticSequenceFromData: replyID: %u, replyChannelCount: %u, replyError: %@
%25s:%-5d %s: starting init with event array
%25s:%-5d %s: initWithEvents: reply block for hapticPlayer loadAndPrepareHapticSequenceFromEvents: replyID: %u, replyChannelCount: %u, replyError: %@
%25s:%-5d %s: starting init with dictionary
%25s:%-5d %s: initWithDictionary: reply block for hapticPlayer loadAndPrepareHapticSequenceFromVibePattern: replyID: %u, replyError: %@
%25s:%-5d %s: dealloc seq %p, clientID: 0x%lx
%25s:%-5d %s: Destroying a sequence that is still looping!  Disabling loop.
%25s:%-5d %s: clientID: 0x%lx seqID: %u behavior: %u
%25s:%-5d %s: prepare to play seq: clientID: 0x%lx
%25s:%-5d %s: play seq: clientID: 0x%lx time: %.3f offsetTime: %.3f playback rate: %.1f
%25s:%-5d %s: soloing sequence track %u
%25s:%-5d %s: stop seq: clientID: 0x%lx time: %.3f
%25s:%-5d %s: pause seq: clientID: 0x%lx time: %.3f
%25s:%-5d %s: resume seq: clientID: 0x%lx time: %.3f
%25s:%-5d %s: seek seq: clientID: 0x%lx time: NOW
%25s:%-5d %s: reset parameters on seq: clientID: 0x%lx time: %.3f 
%25s:%-5d %s: set param on seq: clientID: 0x%lx type: %u value: %.2f channelIndex: %u atTime: %.3f
%25s:%-5d %s: cancel seq: clientID: 0x%lx
%25s:%-5d %s: activating seq track index: clientID: 0x%lx time: %.3f index: %u
%25s:%-5d %s: request pushed out to pending play request at time %.3f
%25s:%-5d %s: Associated player is not running - action delayed until sequence start
%25s:%-5d %s: set volume on seq: clientID: 0x%lx time: %.3f volume: %.3f
%25s:%-5d %s: early unduck audio on seq: clientID: 0x%lx time: %.3f
PatternPlayer
CHHapticPatternPlayerExtended
CHHapticPatternPlayer
NSObject
CHHapticParameterAttributesImpl
CHHapticParameterAttributes
CHDefaultHapticDeviceCapability
CHHapticDeviceCapability
CHHapticParameterCurve
CHHapticParameterCurveControlPoint
HapticServerConfig
AdvancedPatternPlayer
CHHapticAdvancedPatternPlayerExtended
CHHapticAdvancedPatternPlayer
EventToDictionaryConverter
PatternPlayerBase
PatternPlayerDetails
HapticDictionaryWriter
HapticCommandConverter
EngineUsageCategory
HapticDictionaryReader
CHHapticEventParameter
CHHapticDynamicParameter
CHMetrics
AVHapticSequenceEntry
CHHapticClientInterface
CHHapticServerInterface
AVHapticClient
NSXPCListenerDelegate
CHHapticPattern
CHHapticPlayable
CHEmbeddedAudioResourceInfo
CHHapticEngine
CHHapticEngineInternal
AVHapticPlayerChannel
AVHapticPlayer
AVHapticSequence
AVHapticParameterCurveValue
CHHapticEvent
CHHapticEventInternal
count
objectAtIndexedSubscript:
audioResID
resourceIsRegistered:
player
doUnregisterAudioResource:fromPattern:player:error:
dictionary
isEqualToString:
numberWithUnsignedInt:
setObject:forKey:
enumerateKeysAndObjectsUsingBlock:
init
getAvailableChannel:
resolveExternalResources:error:
parameters
parameterCurves
eventListFromEvents:parameters:parameterCurves:engine:privileged:
patternID
duration
metrics
handleInitForPlayer:events:isAdvanced:patternID:
handleParamCurveEncountered
engine
releaseExternalResources:events:
clearExternalResources:
releaseChannel:
dealloc
setParameter:value:atTime:error:
eventType
checkEngineStateOnStart:
doSetMute:
needsResetForAction:
resetAtTime:error:
sendEvents:atTime:error:
notifyPlayerStarted:atTime:
handleStartForPlayer:time:isAdvanced:patternID:
checkEngineRunning:
clearEvents:error:
notifyPlayerStopped:atTime:
handleActionForPlayer:action:time:isAdvanced:
relativeTime
setRelativeTime:
arrayWithObjects:count:
processImmediateParameters:
sendEvents:withImmediateParameters:atTime:error:
running
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
startAtTime:error:
stopAtTime:error:
sendParameters:atTime:error:
scheduleParameterCurve:atTime:error:
cancelAndReturnError:
isMuted
setIsMuted:
startAtTime:withImmediateParameters:error:
initWithPlayable:engine:privileged:error:
.cxx_destruct
_channel
name
userInfo
objectForKey:
integerValue
errorWithDomain:code:userInfo:
stringWithUTF8String:
dictionaryWithObjectsAndKeys:
stringWithCString:encoding:
numberWithInteger:
dictionaryWithObject:forKey:
exceptionWithName:reason:userInfo:
minValue
maxValue
defaultValue
Tf,R
initWithMinValue:maxValue:defaultValue:
_minValue
_maxValue
_defaultValue
Tf,R,V_minValue
Tf,R,V_maxValue
Tf,R,V_defaultValue
supportsAudio
supportsHaptics
dictionaryWithObjects:forKeys:count:
floatValue
minimumValueForEventParameter:
maximumValueForEventParameter:
defaultValueForEventParameter:eventType:
minimumValueForDynamicParameter:
maximumValueForDynamicParameter:
defaultValueForDynamicParameter:
attributesForEventParameter:eventType:error:
attributesForDynamicParameter:error:
TB,R
initPrivate
maximumNumberOfHapticChannels
maximumNumberOfAudioChannels
_supportsHaptics
_supportsAudio
copy
initWithParameterID:controlPoints:relativeTime:
controlPoints
parameterID
_param
_time
_controlPoints
T@"NSString",R,V_param
Td,V_time
T@"NSArray",R
initWithRelativeTime:value:
value
setValue:
_value
Tf,V_value
numberWithBool:
numberWithFloat:
array
containsString:
numberWithUnsignedInteger:
boolValue
unsignedIntValue
countByEnumeratingWithState:objects:count:
unsignedIntegerValue
queryServerCapabilities:reply:
initWithHapticPlayer:withOptions:error:
usingInternalHaptics
supportsAudioPlayback
supportsHapticPlayback
supportsAdvancedPatternPlayers
hapticContinuousTimeLimit
currentLocality
defaultHapticTransientEventSharpness
defaultHapticContinuousEventSharpness
defaultHapticTransientEventIntensity
defaultHapticContinuousEventIntensity
hapticTransientIDs
hapticContinuousSustainedIDs
hapticContinuousNonsustainedIDs
.cxx_construct
_currentLocality
_usingInternalHaptics
_supportsAudioPlayback
_supportsHapticPlayback
_supportsAdvancedPatternPlayers
_hapticContinuousTimeLimit
_defaultHapticTransientEventSharpness
_defaultHapticContinuousEventSharpness
_defaultHapticTransientEventIntensity
_defaultHapticContinuousEventIntensity
_hapticTransientIDs
_hapticContinuousSustainedIDs
_hapticContinuousNonsustainedIDs
TB,R,V_usingInternalHaptics
TB,R,V_supportsAudioPlayback
TB,R,V_supportsHapticPlayback
TB,R,V_supportsAdvancedPatternPlayers
Tf,R,V_hapticContinuousTimeLimit
T@"NSString",R,V_currentLocality
Tf,R,V_defaultHapticTransientEventSharpness
Tf,R,V_defaultHapticContinuousEventSharpness
Tf,R,V_defaultHapticTransientEventIntensity
Tf,R,V_defaultHapticContinuousEventIntensity
T{vector<unsigned long, std::allocator<unsigned long>>=^Q^Q{__compressed_pair<unsigned long *, std::allocator<unsigned long>>=^Q}},R,V_hapticTransientIDs
T{vector<unsigned long, std::allocator<unsigned long>>=^Q^Q{__compressed_pair<unsigned long *, std::allocator<unsigned long>>=^Q}},R,V_hapticContinuousSustainedIDs
T{vector<unsigned long, std::allocator<unsigned long>>=^Q^Q{__compressed_pair<unsigned long *, std::allocator<unsigned long>>=^Q}},R,V_hapticContinuousNonsustainedIDs
eventBehavior
muteHapticsWhileRecordingAudio
setEventBehavior:
setSeekOffset:
resetState
setCompletionHandler:
initWithEvents:player:error:
patternDuration
setLoopEnd:
finishInit
setParameter:value:channel:atTime:error:
seekOffset
playAtTime:offset:error:
setRunning
paused
seekToTime:error:
resumeAtTime:error:
doStartFromPausedAtTime:error:
doStartFromStoppedAtTime:error:
currentTime
paramType
time
pauseAtTime:error:
setPaused
doResumeAtTime:error:
loopingEnabled
playbackRate
setLoopingEnabled:
setLoopLength:error:
setPlaybackRate:
dispatchOnLocal:
dispatchOnGlobal:
initWithData:player:error:
initWithDictionary:player:error:
activateChannelByIndex:atTime:error:
setVolume:atTime:error:
earlyUnduckAudioAtTime:error:
seekToOffset:error:
loopEnabled
setLoopEnabled:
loopEnd
completionHandler
T@?,C
initWithPattern:engine:privileged:error:
initWithRingtoneData:engine:error:
initWithVibePatternDictionary:engine:error:
_sequence
_loopEnd
_state
_seekOffset
_completionHandler
Td,V_seekOffset
numberWithUnsignedLong:
eventCategory
paramTypeToNSString:
addObject:
eventTypeToNSString:
fixedParamCount
fixedParams
setObject:forKeyedSubscript:
initWithObjectsAndKeys:
convertEvents:
Td,R
setEngine:
_engine
_events
_patternID
_patternDuration
_muteState
_previousAction
T@"CHHapticEngine",W,V_engine
T@"NSString",R,V_patternID
Td,R,V_patternDuration
objectForKeyedSubscript:
eventToDictionary:embeddedResourceInfo:
paramToDictionary:
paramCurveToDictionary:
type
path
options
numberWithDouble:
eventParameters
eventParamsToArray:
paramCurveControlPointsToArray:
patternToDictionary:events:parameters:parameterCurves:embeddedResourceInfo:configuration:
_urlIndex
capabilitiesForHardware
eventWithEventType:time:parameters:count:duration:
eventWithEventType:time:duration:
serverConfig
transientHapticEventTypeFromSharpness:
transientHapticEventTypeForDefaultSharpness
eventForTransientHapticAtTime:params:duration:
continuousHapticEventTypeFromSharpness:sustained:
continuousHapticEventTypeForDefaultSharpness:
eventForLegacyTransientHapticAtTime:params:duration:
indexOfObjectPassingTest:
eventForContinuousHapticEventType:time:params:duration:
eventForAudioEventType:time:eventParams:duration:
isResourceLoopEnabled:
getDurationForResource:
setDuration:
eventForSPIEventType:time:eventParams:duration:
eventWithParameter:value:time:
CHtoAVParameterCurve:
eventWithParameterCurve:
initWithCapacity:
objectAtIndex:
initWithTime:value:
initWithType:relativeTime:shape:controlPoints:
initWithServerConfig:
eventForEventEntry:engine:privileged:
eventForDynamicParameterEntry:
eventForParameterCurveEntry:
_serverConfig
T@"HapticServerConfig",R,V_serverConfig
setCategory:error:
setMode:error:
setAudioHardwareControlFlags:error:
setPreferredIOBufferFrameSize:error:
enableNotifications:error:
setParticipatesInNowPlayingAppPolicy:error:
setNeedsHighPowerBudgeting:error:
setCategory:withOptions:error:
setPrefersNoDucking:error:
setDuckToLevelScalar:error:
valueForKey:
setupUnsharedAudioSession:isConstantVolume:needsAudioPowerBudget:error:
setupSystemSoundAudioSession:needsAudioPowerBudget:error:
playsAudioOnly
playsHapticsOnly
getUsageCategory:
setupEngineWithCategory:session:needsAudioPowerBudget:error:
updateAudioConfigurations:session:
length
fileURLWithPath:isDirectory:
initWithURL:options:
parseEvent:withBaseURL:
parseParam:
parseParamCurve:
parseEventParams:
initWithAudioResourceIndex:parameters:time:duration:
initWithEventType:parameters:relativeTime:duration:
initWithParameterID:value:
initWithParameterID:value:relativeTime:
parseParamCurveControlPoints:
doubleValue
readAndVerifyVersion:error:
parseConfiguration:error:
scanForEmbeddedResources:
parseEventsAndParameters:withBaseURL:reply:
initWithEngine:audioSessionID:sessionIsShared:isSPI:
handleServerRecovery
handleEngineStart
handleEngineStop
handleFinishedForPlayersAtTime:
initWithHandler:
handler
setHandler:
setRunning:
detached
setDetached:
_handler
_running
_detached
T@?,C,V_handler
TB,V_running
TB,V_detached
clientID
doInit
setupConnectionWithOptions:error:
disconnect
destroySharedMemory
localizedDescription
getSyncDelegateForMethod:errorHandler:
queryCapabilities:reply:
getHapticLatency:
getAsyncDelegateForMethod:errorHandler:
allocateClientResources:
loadHapticEvent:reply:
createCustomAudioEvent:format:frames:options:reply:
copyCustomAudioEvent:options:reply:
referenceCustomAudioEvent:reply:
releaseCustomAudioEvent:reply:
prewarm:
stopPrewarm
setState:
startRunning:
stopRunning
stopRunning:
setCompletionCallback:
setChannelEventBehavior:behavior:reply:
parameterCurve
calculateHapticCommandParamCurveMemorySize:
subarrayWithRange:
doSendEvents:withImmediateParameters:atTime:channel:sorted:outToken:error:
doScheduleParamCurveWithMemoryReserve:atTime:channel:memoryReserve:paramCurve:error:
doScheduleParamCurve:atTime:channel:paramCurve:error:
loadHapticSequenceFromData:reply:
prepareHapticSequence:error:
loadHapticSequenceFromEvents:reply:
loadVibePattern:reply:
setSequenceEventBehavior:behavior:channelIndex:reply:
prepareHapticSequence:reply:
setRunStateForSequenceEntryWithID:running:
detachSequenceEntryforID:
detachSequence:
releaseClientResources
initWithMachServiceName:options:
sequenceFinished:error:
clientCompletedWithError:
clientStoppedForReason:error:
clientDisconnectingForReason:error:
interfaceWithProtocol:
setExportedInterface:
setExportedObject:
configureWithOptions:reply:
setPlayerBehavior:reply:
releaseChannels
requestChannels:reply:
removeChannel:reply:
debugExpectNotifyOnFinishAfter:reply:
setRemoteObjectInterface:
remoteObjectInterface
setXPCType:forSelector:argumentIndex:ofReply:
handleServerConnectionInterruption
setInterruptionHandler:
handleServerConnectionInvalidation
setInvalidationHandler:
setConnected:
resume
setServerProcessID:
processIdentifier
remoteObjectProxyWithErrorHandler:
synchronousRemoteObjectProxyWithErrorHandler:
connected
invalidate
initWithArray:copyItems:
setChannelKeys:
callSequenceFinishedHandlersWithError:
completionCallback
asyncStopCallback
disconnecting
listener:shouldAcceptNewConnection:
state
initWithOptions:error:
hapticLatency
allocateResources:
finish:
expectNotifyAfter:
setChannelEventBehavior:channel:
resetChannel:atTime:
sendEvents:withImmediateParameters:atTime:channel:outToken:error:
clearEventsFromTime:channel:
setParameter:atTime:value:channel:
scheduleParameterCurve:curve:atTime:channel:error:
loadAndPrepareHapticSequenceFromData:reply:
loadAndPrepareHapticSequenceFromEvents:reply:
loadAndPrepareHapticSequenceFromVibePattern:reply:
setSequenceEventBehavior:behavior:channel:
setSequenceFinishedHandlerForID:finishedHandler:
getSequenceFinishedHandlerForID:
enableSequenceLooping:enable:error:
setSequenceLoopLength:length:error:
setSequencePlaybackRate:rate:error:
startHapticSequence:atTime:withOffset:
stopHapticSequence:atTime:
pauseHapticSequence:atTime:
resumeHapticSequence:atTime:
seekHapticSequence:toTime:
resetHapticSequence:atTime:
sendUnduckAudioCommand:atTime:
setSequenceChannelParameter:atTime:value:sequenceID:channel:
clearSequenceEvents:atTime:
detachHapticSequence:
releaseResources
setPlayerBehavior:error:
clearAssignedChannels
requestAssignedChannels:error:
removeAssignedChannelID:error:
channelKeys
prewarmed
connectionCallback
setConnectionCallback:
serverProcessID
setAsyncStopCallback:
_connection
_commandWriter
_uniqueID
_serverTimeout
_completionCallback
_connectionCallback
_mapMutex
_sequenceEntryMap
_completionQueue
_disconnecting
_prewarmed
_connected
_serverProcessID
_clientID
_channelKeys
_asyncStopCallback
TB,V_connected
TQ,R,V_clientID
T@"NSArray",R,V_channelKeys
TB,R,V_prewarmed
Ti,R
Ti,V_serverProcessID
T@?,C,V_asyncStopCallback
T@?,C,V_completionCallback
T@?,C,V_connectionCallback
TB,R,V_disconnecting
sortedArrayUsingComparator:
arrayWithArray:
initWithArray:
doInitWithDictionary:error:
version
URLByDeletingLastPathComponent
isFileURL
pathExtension
dataWithContentsOfFile:
JSONObjectWithData:options:error:
fullDuration
relativePath
characterAtIndex:
mainBundle
bundleURL
defaultManager
URLsForDirectory:inDomains:
addObjectsFromArray:
ubiquityIdentityToken
URLForUbiquityContainerIdentifier:
initFileURLWithPath:isDirectory:relativeToURL:
checkResourceIsReachableAndReturnError:
events
doRegisterAudioResource:options:fromPattern:player:error:
initWithAudioResourceID:parameters:relativeTime:
doReferenceAudioResourceByID:
dataWithContentsOfFile:options:error:
propertyListWithData:options:format:error:
initWithDictionary:error:
patternForKey:error:
locality
priority
hapticPowerUsage
audioPowerUsage
usageCategory
T@"NSString",R
initWithEvents:parameters:error:
initWithEvents:parameterCurves:error:
initWithContentsOfURL:error:
exportDictionaryAndReturnError:
exportDictionaryWithConfigurationAndReturnError:
eventListFromDictionary:error:
configurationDictionary
_ahapBaseURL
_version
_configurationDictionary
_embeddedResourceInfo
_parameters
_parameterCurves
T@"NSDictionary",R,N,V_configurationDictionary
Td,R,N
_url
_options
T@"NSURL",R,V_url
T@"NSDictionary",R,V_options
currentPlayerBehavior
setCurrentPlayerBehavior:
currentMediaTime
isBehaviorSet:
toggleBehavior:set:
avAudioSession
updateEngineBehavior
handleFinish:
finishWithCompletionHandler:
cancelIdleTimer
arrayWithObject:
clearResourceMap
isAutoShutdownEnabled
getSessionIDFromAVAudioSession:
sessionIsShared
needsAudioPowerBudget
code
audioSessionID
createOptionsFromAudioSessionID:shared:
createHapticPlayerWithOptions:
finishInit:
resetHandler
defaultCenter
handleMediaServerDeath:
addObserver:selector:name:object:
handleMediaServerRecovery:
removeObserver:name:object:
opaqueSessionID
handleConnectionError
setConnectionErrorHandler:
allocateRenderResourcesWithCompletionHandler:
setFollowAudioRoute:
stoppedHandler
setStopRunningHandler:
autoShutdownTimeout
stopWithCompletionHandler:
startIdleTimerWithHandler:
timer
setTimer:
clientFinishedHandler
setClientFinishedHandler:
doStopWithCompletionHandler:
beginIdleTimer
setBehavior:
setBehavior:error:
doStopEngineAndWait:
stopAndWait
disconnectAudioSession:
doUnregisterAllPublicAudioResources
auxiliarySession
connectAudioSession:
doInit:sessionIsShared:options:error:
doInitWithOptions:error:
updateEngineBehaviorWithError:
prewarmWithCompletionHandler:
reconfigureAudioSession
startRunningWithCompletionHandler:
doStartWithCompletionHandler:
doStartEngineAndWait:
stopRunningWithCompletionHandler:
storeOptions:
setActivateAudioSessionOnStart:
initWithAudioSession:sessionIsShared:options:error:
supportsHapticServer
getMetricsForPlayer:
setMetricsTestModeEnabled
doFindPublicAudioResourceID:
absoluteString
isEqualToDictionary:
idForPublicAudioResourceURL:withOptions:
addPublicAudioResourceID:withURL:options:
hasPublicAudioResourceID:
removePublicAudioResourceID:
doPlayPattern:error:
createPlayerWithPattern:error:
startWithCompletionHandler:
initialize
lazyInitResourceMap
supports1stPartyHaptics
setPlaysHapticsOnly:
setPlaysAudioOnly:
setMuteHapticsWhileRecordingAudio:
isMutedForAudio
setIsMutedForAudio:
isMutedForHaptics
setIsMutedForHaptics:
setAutoShutdownEnabled:
followAudioRoute
highPriority
setHighPriority:
availableLocalities
setAutoShutdownTimeout:
getReporterIDFromAVAudioSession:
initAndReturnError:
initWithAudioSession:error:
startAndReturnError:
notifyWhenPlayersFinished:
initWithAudioSessionID:error:
initWithAudioSession:sessionIsShared:error:
createAdvancedPlayerWithPattern:error:
createAdvancedPlayerWithRingtoneData:error:
createAdvancedPlayerWithVibePatternDictionary:error:
createAdvancedPlayerWithRingtonePattern:error:
createPrivilegedPlayerWithPlayable:error:
registerAudioResource:options:error:
unregisterAudioResource:error:
playPatternFromURL:error:
playPatternFromData:error:
setStoppedHandler:
setResetHandler:
_dispatchQueue
_avAudioSession
_audioSessionID
_sessionIsShared
_publicAudioResources
_player
_timer
_stoppedHandler
_resetHandler
_autoShutdownEnabled
_clientFinishedHandler
_currentPlayerBehavior
_priority
_hapticPowerUsage
_audioPowerUsage
_usageCategory
_runTimeout
_metrics
T@"AVAudioSession",R,V_avAudioSession
TI,R,V_audioSessionID
TB,R,V_sessionIsShared
T@?,C,V_clientFinishedHandler
T@"NSObject<OS_dispatch_source>",&,V_timer
TQ,V_currentPlayerBehavior
TB,N
T@"NSString",R,V_priority
T@"NSString",R,V_hapticPowerUsage
T@"NSString",R,V_audioPowerUsage
T@"NSString",R,V_usageCategory
T@?,C,V_stoppedHandler
T@?,C,V_resetHandler
autoShutdownEnabled
TB,N,GisAutoShutdownEnabled
addChannel:
removeChannel:error:
dataWithBytesNoCopy:length:freeWhenDone:
initWithStreamDescription:channelLayout:
activateAudioSessionOnStart
dispatchSyncOnLocal:
T@"AVHapticPlayer",R
T@"CHMetrics",R
client
chanID
initWithChannelID:client:
scheduleParameterCurve:curve:atTime:error:
setChanID:
setClient:
_chanID
_behavior
_client
TQ,V_chanID
T@"AVHapticClient",W,V_client
invalidateChannels
indexOfObject:
removeObject:
connectionErrorHandler
stopRunningHandler
isSupported
initWithSessionID:error:
initWithSessionID:sessionIsShared:error:
getBehavior
setNumberOfChannels:error:
channels
deallocateRenderResources
playHapticSequence:atTime:offset:
setSequenceChannelParam:atTime:channel:param:value:error:
resourcesAllocated
behavior
_resourcesAllocated
_channelArray
_connectionErrorHandler
_stopRunningHandler
T@"AVHapticClient",R,V_client
TB,R,V_resourcesAllocated
T@?,C,V_stopRunningHandler
TQ,N,V_behavior
T@"NSArray",R,N
setPlayer:
setSeqID:
setLastStartTime:
seqID
channelCount
setLoopingEnabled:error:
activeChannel
setActiveChannel:
lastStartTime
getChannelCount
prepareToPlayAndReturnError:
_seqID
_lastStartTime
_eventBehavior
_loopIsEnabled
_loopLength
_playbackRate
_duration
_channelCount
_activeChannel
T@"AVHapticPlayer",W,V_player
TQ,V_seqID
Td,V_duration
Td,V_lastStartTime
TQ,V_activeChannel
TQ,R,V_channelCount
setTime:
parameterValuesFromLegacyEventType:sharpness:fullness:error:
initWithEventType:parameters:relativeTime:
initWithAudioResourceID:parameters:relativeTime:duration:
getType
_type
_audioResID
_eventParams
T@"NSString",R,V_type
T@"NSArray",R,V_eventParams
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8d16^@24
B40@0:8@16d24^@32
B24@0:8^@16
v20@0:8B16
B40@0:8@"NSArray"16d24^@32
B40@0:8@"CHHapticParameterCurve"16d24^@32
B40@0:8d16@24^@32
B40@0:8d16@"NSDictionary"24^@32
v32@0:8@16@24
@24@0:8@16
@44@0:8@16@24B32^@36
v16@0:8
v24@0:8@16
@"AVHapticPlayerChannel"
f16@0:8
@28@0:8f16f20f24
@40@0:8@16@24^@32
@32@0:8@16^@24
@"<CHHapticParameterAttributes>"40@0:8@"NSString"16@"NSString"24^@32
@"<CHHapticParameterAttributes>"32@0:8@"NSString"16^@24
f24@0:8@16
f32@0:8@16@24
@40@0:8@16@24d32
d16@0:8
v24@0:8d16
@"NSString"
@"NSArray"
@28@0:8d16f24
v20@0:8f16
{vector<unsigned long, std::allocator<unsigned long>>=^Q^Q{__compressed_pair<unsigned long *, std::allocator<unsigned long>>=^Q}}16@0:8
{vector<unsigned long, std::allocator<unsigned long>>="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::allocator<unsigned long>>="__value_"^Q}}
@?16@0:8
v24@0:8@?16
@?<v@?@"NSError">16@0:8
v24@0:8@?<v@?@"NSError">16
B40@0:8Q16d24^@32
B36@0:8f16d20^@28
@"AVHapticSequence"
@24@0:8Q16
B20@0:8C16
@"CHHapticEngine"
@64@0:8@16@24@32@40@48@56
@32@0:8@16@24
@48@0:8Q16d24@32d40
Q20@0:8f16
@40@0:8d16@24d32
Q24@0:8f16B20
Q20@0:8B16
@44@0:8i16d20@28d36
@36@0:8@16@24B32
@"HapticServerConfig"
B40@0:8@16B24B28^@32
B36@0:8@16B24^@28
B44@0:8@16@24B32^@36
B40@0:8@16@24@?32
@28@0:8@16f24
@36@0:8@16f24d28
@36@0:8@16I24B28B32
v44@0:8@16@24B32@36
v44@0:8@16d24B32@36
v44@0:8@16q24d32B40
@24@0:8@?16
v32@0:8Q16@24
v32@0:8Q16@"NSError"24
v24@0:8@"NSError"16
v32@0:8@16@?24
v32@0:8Q16@?24
v40@0:8Q16Q24@?32
v48@0:8Q16Q24Q32@?40
v56@0:8@16@24Q32@40@?48
v40@0:8Q16@24@?32
v24@0:8Q16
v32@0:8d16@?24
v32@0:8@"NSDictionary"16@?<v@?Q>24
v32@0:8@"NSDictionary"16@?<v@?@"NSDictionary"@"NSError">24
v24@0:8@?<v@?@"NSObject<OS_xpc_object>"I@"NSError">16
v24@0:8@?<v@?d@"NSError">16
v32@0:8Q16@?<v@?@"NSError">24
v32@0:8Q16@?<v@?@"NSArray"@"NSError">24
v40@0:8Q16Q24@?<v@?@"NSError">32
v32@0:8@"NSDictionary"16@?<v@?Q@"NSError">24
v32@0:8@"NSData"16@?<v@?QdQ@"NSError">24
v32@0:8@"NSArray"16@?<v@?QdQ@"NSError">24
v48@0:8Q16Q24Q32@?<v@?@"NSError">40
v56@0:8@"NSData"16@"AVAudioFormat"24Q32@"NSDictionary"40@?<v@?Q@"NSError">48
v40@0:8Q16@"NSDictionary"24@?<v@?Q@"NSError">32
v32@0:8d16@?<v@?>24
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v20@0:8i16
i16@0:8
B32@0:8@16@?24
B56@0:8@16@24Q32@40@?48
B40@0:8Q16@24@?32
B32@0:8Q16@?24
B24@0:8@?16
B32@0:8Q16Q24
B32@0:8Q16d24
B68@0:8@16@24d32Q40B48^Q52^@60
B56@0:8Q16d24Q32@40^@48
B64@0:8Q16d24Q32^{HapticSharedMemoryAddressReserve=^vI^vIi}40@48^@56
B64@0:8@16@24d32Q40^Q48^@56
B32@0:8d16Q24
B44@0:8Q16d24f32Q36
B56@0:8Q16@24d32Q40^@48
B40@0:8Q16Q24Q32
@?24@0:8Q16
v28@0:8Q16B24
B32@0:8Q16^@24
B36@0:8Q16B24^@28
B36@0:8Q16f24^@28
B40@0:8Q16d24d32
B52@0:8Q16d24f32Q36Q44
B32@0:8@16^@24
@32@0:8:16@?24
I20@0:8I16
@"NSXPCConnection"
{mutex="__m_"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}}
{map<unsigned long, AVHapticSequenceEntry *, std::less<unsigned long>, std::allocator<std::pair<const unsigned long, AVHapticSequenceEntry *>>>="__tree_"{__tree<std::__value_type<unsigned long, AVHapticSequenceEntry *>, std::__map_value_compare<unsigned long, std::__value_type<unsigned long, AVHapticSequenceEntry *>, std::less<unsigned long>, true>, std::allocator<std::__value_type<unsigned long, AVHapticSequenceEntry *>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned long, AVHapticSequenceEntry *>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<unsigned long, std::__value_type<unsigned long, AVHapticSequenceEntry *>, std::less<unsigned long>, true>>="__value_"Q}}}
@"NSObject<OS_dispatch_queue>"
@52@0:8@16@24@32@40B48
@"NSArray"32@0:8@"CHHapticEngine"16^@24
@"NSArray"16@0:8
@24@0:8^@16
@"NSURL"
@"NSNumber"
@"NSDictionary"
@"NSMutableArray"
B24@0:8Q16
I24@0:8@16
q24@0:8@16
v24@0:8^@16
@24@0:8I16B20
B40@0:8I16B20@24^@32
@28@0:8I16^@20
@44@0:8@16B24@28^@36
@36@0:8@16B24^@28
d24@0:8Q16
{__map_iterator<std::__tree_iterator<std::__value_type<unsigned long, std::pair<NSURL *, NSDictionary *>>, std::__tree_node<std::__value_type<unsigned long, std::pair<NSURL *, NSDictionary *>>, void *> *, long>>={__tree_iterator<std::__value_type<unsigned long, std::pair<NSURL *, NSDictionary *>>, std::__tree_node<std::__value_type<unsigned long, std::pair<NSURL *, NSDictionary *>>, void *> *, long>=^v}}24@0:8Q16
v40@0:8Q16@24@32
Q32@0:8@16@24
Q40@0:8@16@24^@32
I16@0:8
@"AVAudioSession"
{map<unsigned long, std::pair<NSURL *, NSDictionary *>, std::less<unsigned long>, std::allocator<std::pair<const unsigned long, std::pair<NSURL *, NSDictionary *>>>>="__tree_"{__tree<std::__value_type<unsigned long, std::pair<NSURL *, NSDictionary *>>, std::__map_value_compare<unsigned long, std::__value_type<unsigned long, std::pair<NSURL *, NSDictionary *>>, std::less<unsigned long>, true>, std::allocator<std::__value_type<unsigned long, std::pair<NSURL *, NSDictionary *>>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned long, std::pair<NSURL *, NSDictionary *>>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<unsigned long, std::__value_type<unsigned long, std::pair<NSURL *, NSDictionary *>>, std::less<unsigned long>, true>>="__value_"Q}}}
@"AVHapticPlayer"
@"NSObject<OS_dispatch_source>"
@"CHMetrics"
B32@0:8@16d24
v32@0:8@16d24
Q52@0:8@16@24B32@36^@44
B44@0:8Q16B24@28^@36
B48@0:8@16@24d32^@40
B44@0:8Q16f24d28^@36
B48@0:8Q16@24d32^@40
@"AVHapticClient"
@32@0:8I16B20^@24
B60@0:8Q16d24Q32Q40f48^@52
B28@0:8B16^@20
B28@0:8f16^@20
B40@0:8d16d24^@32
B52@0:8Q16f24Q28d36^@44
B48@0:8Q16^f24^f32^@40
@48@0:8@16@24d32d40
@40@0:8Q16@24d32
@48@0:8Q16@24d32d40
333333
@(#)PROGRAM:CoreHaptics  PROJECT:CoreHaptics-1
@mcpl
NSt3__110__function6__funcIZN18CASmartPreferences10AddHandlerIiEEvPK10__CFStringS6_PFT_PKvRbENS_8functionIFvS7_EEEEUlS9_E_NS_9allocatorISG_EEFbS9_EEE
NSt3__110__function6__baseIFbPKvEEE
NSt3__117bad_function_callE
ZN18CASmartPreferences10AddHandlerIiEEvPK10__CFStringS3_PFT_PKvRbENSt3__18functionIFvS4_EEEEUlS6_E_
NSt3__110__function6__funcIZN5CALog5Scope34SetPriorityThresholdFromPreferenceEPK10__CFStringS6_E3$_0NS_9allocatorIS7_EEFviEEE
NSt3__110__function6__baseIFviEEE
ZN5CALog5Scope34SetPriorityThresholdFromPreferenceEPK10__CFStringS3_E3$_0
12CAXException
(knN
NSt3__120__shared_ptr_emplaceI13AudioResourceNS_9allocatorIS1_EEEE
com.apple.CoreHaptics
CHHapticPatternPlayer.mm
-[PatternPlayer releaseExternalResources:events:]
-[PatternPlayer processImmediateParameters:]_block_invoke
v32@?0@"NSString"8@16^B24
-[PatternPlayer initWithPlayable:engine:privileged:error:]
-[PatternPlayer dealloc]
-[PatternPlayer doSetMute:]
-[PatternPlayer clearExternalResources:]
-[PatternPlayer startAtTime:error:]
/Library/Caches/com.apple.xbs/Sources/CoreHaptics_Sim/Source/CHHapticPatternPlayer.mm
time >= 0.0
-[PatternPlayer stopAtTime:error:]
-[PatternPlayer sendParameters:atTime:error:]
-[PatternPlayer cancelAndReturnError:]
-[PatternPlayer scheduleParameterCurve:atTime:error:]
-[PatternPlayer startAtTime:withImmediateParameters:error:]
OSStatus
HapticUtils.h
_Haptic_Check
Error 
%s: %s
CHDeviceCapability.mm
-[CHDefaultHapticDeviceCapability attributesForEventParameter:eventType:error:]
-[CHDefaultHapticDeviceCapability attributesForDynamicParameter:error:]
Default
HapticServerConfig.mm
-[HapticServerConfig initWithHapticPlayer:withOptions:error:]
com.apple.private.allow-background-haptics
RequestedLocality
AllowBackgroundHaptics
SupportsAudioPlayback
SupportsHapticPlayback
SupportsAdvancedPatternPlayers
UsingInternalHaptics
HapticContinuousTimeLimit
HapticTransientDefaultIntensity
HapticTransientDefaultSharpness
HapticContinuousDefaultIntensity
HapticContinuousDefaultSharpness
HapticTransientEventIDs
HapticContinuousSustainedEventIDs
HapticContinuousNonsustainedEventIDs
RequestedPriority
RequestedPowerUsage
RequestedUsageCategory
-[HapticServerConfig initWithHapticPlayer:withOptions:error:]_block_invoke
v24@?0@"NSDictionary"8@"NSError"16
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
CHHapticAdvancedPatternPlayer.mm
-[AdvancedPatternPlayer finishInit]
-[AdvancedPatternPlayer finishInit]_block_invoke
v16@?0@"NSError"8
-[AdvancedPatternPlayer initWithPattern:engine:privileged:error:]
-[AdvancedPatternPlayer dealloc]
-[AdvancedPatternPlayer doSetMute:]
-[AdvancedPatternPlayer clearExternalResources:]
-[AdvancedPatternPlayer doStartFromStoppedAtTime:error:]
-[AdvancedPatternPlayer doStartFromPausedAtTime:error:]
-[AdvancedPatternPlayer doResumeAtTime:error:]
-[AdvancedPatternPlayer startAtTime:error:]
/Library/Caches/com.apple.xbs/Sources/CoreHaptics_Sim/Source/CHHapticAdvancedPatternPlayer.mm
_sequence != nil
-[AdvancedPatternPlayer stopAtTime:error:]
-[AdvancedPatternPlayer sendParameters:atTime:error:]
-[AdvancedPatternPlayer scheduleParameterCurve:atTime:error:]
-[AdvancedPatternPlayer pauseAtTime:error:]
-[AdvancedPatternPlayer resumeAtTime:error:]
-[AdvancedPatternPlayer seekToOffset:error:]
-[AdvancedPatternPlayer cancelAndReturnError:]
-[AdvancedPatternPlayer setCompletionHandler:]
-[AdvancedPatternPlayer setCompletionHandler:]_block_invoke_2
v8@?0
-[AdvancedPatternPlayer setCompletionHandler:]_block_invoke
-[AdvancedPatternPlayer activateChannelByIndex:atTime:error:]
-[AdvancedPatternPlayer setVolume:atTime:error:]
-[AdvancedPatternPlayer earlyUnduckAudioAtTime:error:]
AudioResource.mm
open
verifyAudioFile
readAndAllocateRawBuffer
incrementAllocatedBytes
decrementAllocatedBytes
error
warning
note
notice
info
details
minutiae
spew
AudioSineTransient
AudioSine
HapticSineTransient
HapticSine
HapticSineLow
HapticSineLowMid
HapticSineMid
HapticSineMidHigh
HapticSineHigh
HapticMicroTap2
HapticMicroTap3
HapticMicroTap4
HapticMicroTap5
HapticMicroTap6
HapticMicroTap7
HapticMicroTap8
HapticMicroTap9
HapticMiniTap2
HapticMiniTap3
HapticMiniTap4
HapticMiniTap5
HapticMiniTap6
HapticMiniTap7
HapticMiniTap8
HapticMiniTap9
HapticFullTap2
HapticFullTap3
HapticFullTap4
HapticFullTap5
HapticFullTap6
HapticFullTap7
HapticFullTap8
HapticFullTap9
AudioVolume
AudioTransposition
AudioAttackTime
AudioDecayTime
AudioReleaseTime
AudioLPFilterCutoff
HapticVolume
HapticTransposition
HapticAttackTime
HapticDecayTime
HapticReleaseTime
Type
Value
Time
Param
EventToDictionaryConverter.mm
+[EventToDictionaryConverter convertEvents:]
Event
Pattern
HapticDictionaryWriter.mm
-[HapticDictionaryWriter eventToDictionary:embeddedResourceInfo:]
CoreHapticsOperationNotPermittedException
Cannot export AudioCustom events
HapticCommandConverter.mm
-[HapticCommandConverter eventForAudioEventType:time:eventParams:duration:]
CoreHapticInvalidParamException
Unknown event param type
-[HapticCommandConverter eventForTransientHapticAtTime:params:duration:]
-[HapticCommandConverter eventForLegacyTransientHapticAtTime:params:duration:]
CoreHapticsBadEventEntryException
Cannot mix privileged and unprivileged Sharpness parameters
Cannot mix Fullness with unprivileged Sharpness parameter
Unknown event parameter type
-[HapticCommandConverter eventForContinuousHapticEventType:time:params:duration:]
-[HapticCommandConverter eventForSPIEventType:time:eventParams:duration:]
Unsupported event param type
-[HapticCommandConverter eventForEventEntry:engine:privileged:]
CoreHapticInvalidEventTimeException
Illegal time value
CoreHapticInvalidEventDurationException
Illegal event duration
B32@?0@"CHHapticEventParameter"8Q16^B24
Illegal or missing event duration
Looped custom audio event missing duration
CoreHapticInvalidAudioResourceException
Invalid or missing audio resource
CoreHapticInvalidEventTypeException
Unknown privileged event type
Unknown event type
-[HapticCommandConverter eventForDynamicParameterEntry:]
Unknown dynamic parameter
-[HapticCommandConverter eventForParameterCurveEntry:]
-[HapticCommandConverter CHtoAVParameterCurve:]
Invalid dynamic parameter for curve
LimitEventParameterValue
LimitDynamicParameterValue
DefaultWithConstantVolume
UIFeedback
iOSKeyboard
SystemSound
CHHapticEngineUsageCategory.mm
-[CHHapticEngine(EngineUsageCategory) setupUnsharedAudioSession:isConstantVolume:needsAudioPowerBudget:error:]
with constant
following ringer
-[CHHapticEngine(EngineUsageCategory) setupSystemSoundAudioSession:needsAudioPowerBudget:error:]
-[CHHapticEngine(EngineUsageCategory) setupEngineWithCategory:session:needsAudioPowerBudget:error:]
-[CHHapticEngine(EngineUsageCategory) updateAudioConfigurations:session:]
HapticDictionaryReader.mm
-[HapticDictionaryReader readAndVerifyVersion:error:]
-[HapticDictionaryReader parseConfiguration:error:]_block_invoke
-[HapticDictionaryReader scanForEmbeddedResources:]_block_invoke
-[HapticDictionaryReader parseEventsAndParameters:withBaseURL:reply:]
EventTime
v32@?0@8@16^B24
-[HapticDictionaryReader parseEvent:withBaseURL:]
CoreHapticsMissingEventTypeException
Missing event type
CoreHapticsInvalidEventTimeException
Illegal or missing event time
CoreHapticsInvalidEventDurationException
Missing or invalid audio resource path
Invalid audio resource path
CoreHapticsInvalidAudioResourceException
Invalid audio resource
-[HapticDictionaryReader parseEventParams:]
CoreHapticsBadParameterEntryException
Event parameter has invalid or missing parameter ID
Event parameter has invalid or missing parameter value
ParameterTime
-[HapticDictionaryReader parseParam:]
time
type
Parameter has invalid or missing time or type key
-[HapticDictionaryReader parseParamCurve:]
ParameterCurve has invalid or missing time or type key
-[HapticDictionaryReader parseParamCurveControlPoints:]
DeviceClassNumber
gqDnklGQnpv5ilgh5uHckw
com.apple.coreaudio
AVHapticClient.mm
-[AVHapticClient setState:]
-[AVHapticClient state]
hcln
hapticclient_verbose
hcst
hapticclient_state_verbose
-[AVHapticClient initWithOptions:error:]
-[AVHapticClient dealloc]
-[AVHapticClient queryServerCapabilities:reply:]_block_invoke
-[AVHapticClient hapticLatency]_block_invoke
v24@?0d8@"NSError"16
-[AVHapticClient allocateResources:]
-[AVHapticClient allocateResources:]_block_invoke_2
-[AVHapticClient allocateResources:]_block_invoke
v28@?0@"NSObject<OS_xpc_object>"8I16@"NSError"20
-[AVHapticClient loadHapticEvent:reply:]
-[AVHapticClient loadHapticEvent:reply:]_block_invoke_2
v24@?0Q8@"NSError"16
-[AVHapticClient createCustomAudioEvent:format:frames:options:reply:]_block_invoke_2
-[AVHapticClient createCustomAudioEvent:format:frames:options:reply:]
-[AVHapticClient copyCustomAudioEvent:options:reply:]_block_invoke_2
-[AVHapticClient copyCustomAudioEvent:options:reply:]
-[AVHapticClient referenceCustomAudioEvent:reply:]_block_invoke_2
-[AVHapticClient referenceCustomAudioEvent:reply:]
-[AVHapticClient releaseCustomAudioEvent:reply:]_block_invoke_2
-[AVHapticClient releaseCustomAudioEvent:reply:]
-[AVHapticClient prewarm:]
-[AVHapticClient prewarm:]_block_invoke_2
-[AVHapticClient stopPrewarm]
-[AVHapticClient stopPrewarm]_block_invoke
-[AVHapticClient startRunning:]
-[AVHapticClient stopRunning]
-[AVHapticClient stopRunning]_block_invoke
-[AVHapticClient stopRunning:]
-[AVHapticClient finish:]
-[AVHapticClient finish:]_block_invoke
-[AVHapticClient setChannelEventBehavior:channel:]
-[AVHapticClient setChannelEventBehavior:channel:]_block_invoke_2
-[AVHapticClient resetChannel:atTime:]
applyImmediateParameters
startEventFromEvent
-[AVHapticClient doSendEvents:withImmediateParameters:atTime:channel:sorted:outToken:error:]
-[AVHapticClient doScheduleParamCurve:atTime:channel:paramCurve:error:]
-[AVHapticClient doScheduleParamCurveWithMemoryReserve:atTime:channel:memoryReserve:paramCurve:error:]
-[AVHapticClient clearEventsFromTime:channel:]
-[AVHapticClient setParameter:atTime:value:channel:]
-[AVHapticClient scheduleParameterCurve:curve:atTime:channel:error:]
-[AVHapticClient loadAndPrepareHapticSequenceFromData:reply:]
-[AVHapticClient loadAndPrepareHapticSequenceFromData:reply:]_block_invoke_2
-[AVHapticClient loadAndPrepareHapticSequenceFromData:reply:]_block_invoke
v40@?0Q8d16Q24@"NSError"32
-[AVHapticClient loadAndPrepareHapticSequenceFromEvents:reply:]
-[AVHapticClient loadAndPrepareHapticSequenceFromEvents:reply:]_block_invoke_2
-[AVHapticClient loadAndPrepareHapticSequenceFromVibePattern:reply:]
-[AVHapticClient loadAndPrepareHapticSequenceFromVibePattern:reply:]_block_invoke_2
-[AVHapticClient loadAndPrepareHapticSequenceFromVibePattern:reply:]_block_invoke
-[AVHapticClient setSequenceEventBehavior:behavior:channel:]
-[AVHapticClient setSequenceEventBehavior:behavior:channel:]_block_invoke_2
-[AVHapticClient setSequenceFinishedHandlerForID:finishedHandler:]
-[AVHapticClient callSequenceFinishedHandlersWithError:]
-[AVHapticClient detachSequenceEntryforID:]
-[AVHapticClient prepareHapticSequence:error:]
-[AVHapticClient prepareHapticSequence:error:]_block_invoke_2
-[AVHapticClient prepareHapticSequence:error:]_block_invoke
-[AVHapticClient enableSequenceLooping:enable:error:]
-[AVHapticClient setSequenceLoopLength:length:error:]
-[AVHapticClient setSequencePlaybackRate:rate:error:]
-[AVHapticClient startHapticSequence:atTime:withOffset:]
-[AVHapticClient stopHapticSequence:atTime:]
-[AVHapticClient pauseHapticSequence:atTime:]
-[AVHapticClient resumeHapticSequence:atTime:]
-[AVHapticClient seekHapticSequence:toTime:]
-[AVHapticClient resetHapticSequence:atTime:]
-[AVHapticClient sendUnduckAudioCommand:atTime:]
-[AVHapticClient setSequenceChannelParameter:atTime:value:sequenceID:channel:]
-[AVHapticClient clearSequenceEvents:atTime:]
-[AVHapticClient detachHapticSequence:]
-[AVHapticClient releaseResources]
Client completion queue
hapticserver_timeout
-[AVHapticClient setupConnectionWithOptions:error:]
MachServiceName
com.apple.audio.hapticd
-[AVHapticClient setupConnectionWithOptions:error:]_block_invoke_2
v16@?0Q8
-[AVHapticClient getAsyncDelegateForMethod:errorHandler:]_block_invoke
-[AVHapticClient getSyncDelegateForMethod:errorHandler:]_block_invoke
-[AVHapticClient disconnect]
-[AVHapticClient setPlayerBehavior:error:]
-[AVHapticClient setPlayerBehavior:error:]_block_invoke_2
-[AVHapticClient requestAssignedChannels:error:]
-[AVHapticClient requestAssignedChannels:error:]_block_invoke_2
v24@?0@"NSArray"8@"NSError"16
-[AVHapticClient removeAssignedChannelID:error:]
-[AVHapticClient handleServerConnectionInterruption]
-[AVHapticClient handleServerConnectionInterruption]_block_invoke
-[AVHapticClient handleServerConnectionInvalidation]
-[AVHapticClient sequenceFinished:error:]
-[AVHapticClient clientCompletedWithError:]
-[AVHapticClient clientCompletedWithError:]_block_invoke
-[AVHapticClient clientStoppedForReason:error:]
-[AVHapticClient clientDisconnectingForReason:error:]
q24@?0@"AVHapticEvent"8@"AVHapticEvent"16
getIndexOfSplitPoint
q24@?0@"AVHapticPlayerParameterCurveControlPoint"8@"AVHapticPlayerParameterCurveControlPoint"16
CHHapticPattern.mm
-[CHHapticPattern doInitWithDictionary:error:]
v40@?0@"NSMutableArray"8@"NSMutableArray"16@"NSMutableArray"24@"NSError"32
json
ahap
-[CHHapticPattern initWithContentsOfURL:error:]
FullURLPathFromURL
-[CHHapticPattern resolveExternalResources:error:]
+[CHHapticPattern patternForKey:error:]
/Library/Audio/Tunings/Generic/Haptics/Library/hapticpatternlibrary.plist
Version
Configuration
Locality
Priority
HapticPowerUsage
AudioPowerUsage
UsageCategory
EventType
EventDuration
EventWaveformPath
EventWaveformUseVolumeEnvelope
EventWaveformLoopEnabled
EventParameters
Parameter
ParameterID
ParameterValue
ParameterCurve
ParameterCurveControlPoints
TestPattern01
TestPattern02
ScreenLocked
ConnectedToPower
KeyboardInputText
KeyboardInputSeparator
KeyboardInputCandidate
KeyboardDeletion
KeyboardDeletionRepeat
KeyboardDeletionRapid
KeyboardSwitchMode
KeyboardOther
hapi
com.apple.corehaptics
hapticapi_verbose
hpwr
hapticpower_verbose
hmet
hapticmetrics_verbose
FullGamut
DefaultWithFullStrength
LowPriority
HighPriority
ExclusivePriority
HighestPriority
LowPower
HighPower
HapticTransient
HapticContinuous
AudioCustom
AudioContinuous
WheelsOfTime
AudioClick
HapticIntensity
HapticSharpness
AttackTime
DecayTime
ReleaseTime
Sustained
AudioPitch
AudioPan
AudioBrightness
HapticIntensityControl
HapticSharpnessControl
HapticAttackTimeControl
HapticDecayTimeControl
HapticReleaseTimeControl
AudioVolumeControl
AudioPanControl
AudioBrightnessControl
AudioPitchControl
AudioAttackTimeControl
AudioDecayTimeControl
AudioReleaseTimeControl
HapticSharpnessSelect
HapticFullnessSelect
UseVolumeEnvelope
LoopEnabled
CHHapticEngine.mm
+[CHHapticEngine lazyInitResourceMap]
+[CHHapticEngine clearResourceMap]
-[CHHapticEngine setAutoShutdownEnabled:]
-[CHHapticEngine setAutoShutdownEnabled:]_block_invoke
CHHapticLocalityEngineDefault
-[CHHapticEngine setAutoShutdownTimeout:]
-[CHHapticEngine handleMediaServerDeath:]
-[CHHapticEngine handleMediaServerRecovery:]_block_invoke
CHHapticErrorCodeServerInitFailedException
Failed to set up audio session
-[CHHapticEngine createHapticPlayerWithOptions:]
Failed to connect to server
-[CHHapticEngine finishInit:]_block_invoke
-[CHHapticEngine finishInit:]
v16@?0q8
-[CHHapticEngine startIdleTimerWithHandler:]
-[CHHapticEngine startIdleTimerWithHandler:]_block_invoke
-[CHHapticEngine beginIdleTimer]_block_invoke
-[CHHapticEngine beginIdleTimer]_block_invoke_2
-[CHHapticEngine cancelIdleTimer]
-[CHHapticEngine handleFinish:]
-[CHHapticEngine handleFinish:]_block_invoke
-[CHHapticEngine updateEngineBehavior]
-[CHHapticEngine updateEngineBehaviorWithError:]
-[CHHapticEngine stopAndWait]
-[CHHapticEngine stopAndWait]_block_invoke
-[CHHapticEngine dealloc]
AudioSessionID
AudioSessionIsShared
-[CHHapticEngine doInit:sessionIsShared:options:error:]
CHHapticEngineDispatchQueue
-[CHHapticEngine initAndReturnError:]
-[CHHapticEngine initWithAudioSession:error:]
-[CHHapticEngine reconfigureAudioSession]
-[CHHapticEngine doInitWithOptions:error:]
-[CHHapticEngine prewarmWithCompletionHandler:]
-[CHHapticEngine prewarmWithCompletionHandler:]_block_invoke
-[CHHapticEngine stopPrewarm]
-[CHHapticEngine doStartWithCompletionHandler:]
-[CHHapticEngine doStartWithCompletionHandler:]_block_invoke_2
-[CHHapticEngine doStartWithCompletionHandler:]_block_invoke
-[CHHapticEngine startWithCompletionHandler:]
/Library/Caches/com.apple.xbs/Sources/CoreHaptics_Sim/Source/CHHapticEngine.mm
_player != nil
-[CHHapticEngine startWithCompletionHandler:]_block_invoke
-[CHHapticEngine doStartEngineAndWait:]_block_invoke
-[CHHapticEngine doStartEngineAndWait:]
-[CHHapticEngine startAndReturnError:]
-[CHHapticEngine doStopEngineAndWait:]
-[CHHapticEngine doStopEngineAndWait:]_block_invoke
-[CHHapticEngine doStopWithCompletionHandler:]
-[CHHapticEngine doStopWithCompletionHandler:]_block_invoke
-[CHHapticEngine stopWithCompletionHandler:]
-[CHHapticEngine stopWithCompletionHandler:]_block_invoke
-[CHHapticEngine notifyWhenPlayersFinished:]
-[CHHapticEngine notifyWhenPlayersFinished:]_block_invoke_2
-[CHHapticEngine notifyWhenPlayersFinished:]_block_invoke
-[CHHapticEngine initWithAudioSessionID:error:]
-[CHHapticEngine initWithAudioSession:sessionIsShared:options:error:]
shared
unshared
-[CHHapticEngine createPlayerWithPattern:error:]
-[CHHapticEngine createAdvancedPlayerWithPattern:error:]
-[CHHapticEngine createAdvancedPlayerWithRingtoneData:error:]
-[CHHapticEngine createAdvancedPlayerWithVibePatternDictionary:error:]
-[CHHapticEngine createAdvancedPlayerWithRingtonePattern:error:]
-[CHHapticEngine createPrivilegedPlayerWithPlayable:error:]
-[CHHapticEngine getDurationForResource:]
-[CHHapticEngine isResourceLoopEnabled:]
-[CHHapticEngine addPublicAudioResourceID:withURL:options:]
-[CHHapticEngine hasPublicAudioResourceID:]
found
did not find
-[CHHapticEngine removePublicAudioResourceID:]
-[CHHapticEngine registerAudioResource:options:error:]
self.player != nil
-[CHHapticEngine unregisterAudioResource:error:]
-[CHHapticEngine doUnregisterAllPublicAudioResources]
-[CHHapticEngine playPatternFromURL:error:]
plist
-[CHHapticEngine playPatternFromData:error:]
-[CHHapticEngine doPlayPattern:error:]
-[CHHapticEngine doPlayPattern:error:]_block_invoke
-[CHHapticEngine(CHHapticEngineInternal) dispatchOnLocal:]
-[CHHapticEngine(CHHapticEngineInternal) dispatchOnLocal:]_block_invoke
-[CHHapticEngine(CHHapticEngineInternal) dispatchSyncOnLocal:]
-[CHHapticEngine(CHHapticEngineInternal) dispatchSyncOnLocal:]_block_invoke
-[CHHapticEngine(CHHapticEngineInternal) checkEngineStateOnStart:]
self.running
-[CHHapticEngine(CHHapticEngineInternal) checkEngineRunning:]
-[CHHapticEngine(CHHapticEngineInternal) notifyPlayerStarted:atTime:]_block_invoke_2
-[CHHapticEngine(CHHapticEngineInternal) notifyPlayerStarted:atTime:]_block_invoke
-[CHHapticEngine(CHHapticEngineInternal) notifyPlayerStopped:atTime:]
-[CHHapticEngine(CHHapticEngineInternal) getAvailableChannel:]
-[CHHapticEngine(CHHapticEngineInternal) releaseChannel:]
-[CHHapticEngine(CHHapticEngineInternal) doReferenceAudioResourceByID:]
+[CHHapticEngine(CHHapticEngineInternal) doRegisterAudioResource:options:fromPattern:player:error:]
Public
+[CHHapticEngine(CHHapticEngineInternal) doRegisterAudioResource:options:fromPattern:player:error:]_block_invoke
resource->verifyAudioFile(false)
status
+[CHHapticEngine(CHHapticEngineInternal) doUnregisterAudioResource:fromPattern:player:error:]
pattern-loaded
public-loaded
newStateFromOld
/System/Library/Frameworks/AVFoundation.framework/AVFoundation
AVAudioFormat
AVAudioSession
AVAudioSessionMediaServicesWereResetNotification
AVAudioSessionMediaServicesWereLostNotification
AVAudioSessionCategorySystemSoundsAndHaptics
AVAudioSessionCategoryPlayback
AVAudioSessionModeHapticsConstantVolume
AVHapticPlayer.mm
-[AVHapticPlayerChannel setEventBehavior:]
-[AVHapticPlayerChannel sendEvents:atTime:error:]
/Library/Caches/com.apple.xbs/Sources/CoreHaptics_Sim/Source/AVHapticPlayer.mm
self.client != nil
self.client.clientID != kInvalidClientID
self.client.running
[self.client sendEvents:events withImmediateParameters:nil atTime:time channel:self.chanID outToken:nil error:outError]
-[AVHapticPlayerChannel sendEvents:withImmediateParameters:atTime:error:]
[self.client sendEvents:events withImmediateParameters:immediateParameters atTime:time channel:self.chanID outToken:nil error:outError]
-[AVHapticPlayerChannel clearEvents:error:]
[self.client clearEventsFromTime:fromTime channel:self.chanID]
-[AVHapticPlayerChannel setParameter:value:atTime:error:]
[self.client setParameter:type atTime:time value:value channel:self.chanID]
-[AVHapticPlayerChannel scheduleParameterCurve:curve:atTime:error:]
[self.client scheduleParameterCurve:type curve:parameterCurve atTime:time channel:self.chanID error:outError]
-[AVHapticPlayerChannel resetAtTime:error:]
[self.client resetChannel:self.chanID atTime:time]
CoreAudioServices
audio_only_haptic_server
-[AVHapticPlayer doInitWithOptions:error:]
-[AVHapticPlayer doInitWithOptions:error:]_block_invoke
-[AVHapticPlayer initWithSessionID:error:]
-[AVHapticPlayer initWithSessionID:sessionIsShared:error:]
-[AVHapticPlayer initWithOptions:error:]
-[AVHapticPlayer dealloc]
-[AVHapticPlayer queryServerCapabilities:reply:]
-[AVHapticPlayer queryServerCapabilities:reply:]_block_invoke
-[AVHapticPlayer setBehavior:error:]
-[AVHapticPlayer setNumberOfChannels:error:]
-[AVHapticPlayer addChannel:]
clientID invalid
-[AVHapticPlayer removeChannel:error:]
-[AVHapticPlayer allocateRenderResourcesWithCompletionHandler:]
-[AVHapticPlayer deallocateRenderResources]
-[AVHapticPlayer loadHapticEvent:reply:]
-[AVHapticPlayer createCustomAudioEvent:format:frames:options:reply:]
-[AVHapticPlayer copyCustomAudioEvent:options:reply:]
-[AVHapticPlayer referenceCustomAudioEvent:reply:]
-[AVHapticPlayer releaseCustomAudioEvent:reply:]
-[AVHapticPlayer loadAndPrepareHapticSequenceFromData:reply:]
-[AVHapticPlayer loadAndPrepareHapticSequenceFromEvents:reply:]
-[AVHapticPlayer loadAndPrepareHapticSequenceFromVibePattern:reply:]
-[AVHapticPlayer prepareHapticSequence:error:]
-[AVHapticPlayer enableSequenceLooping:enable:error:]
-[AVHapticPlayer setSequenceLoopLength:length:error:]
-[AVHapticPlayer setSequencePlaybackRate:rate:error:]
-[AVHapticPlayer prewarmWithCompletionHandler:]
-[AVHapticPlayer prewarmWithCompletionHandler:]_block_invoke
-[AVHapticPlayer stopPrewarm]
-[AVHapticPlayer startRunningWithCompletionHandler:]
-[AVHapticPlayer startRunningWithCompletionHandler:]_block_invoke
-[AVHapticPlayer stopRunning]
-[AVHapticPlayer stopRunningWithCompletionHandler:]
-[AVHapticPlayer stopRunningWithCompletionHandler:]_block_invoke
-[AVHapticPlayer finishWithCompletionHandler:]
-[AVHapticSequence initWithData:player:error:]
-[AVHapticSequence initWithData:player:error:]_block_invoke
-[AVHapticSequence initWithEvents:player:error:]
-[AVHapticSequence initWithEvents:player:error:]_block_invoke
-[AVHapticSequence initWithDictionary:player:error:]
-[AVHapticSequence initWithDictionary:player:error:]_block_invoke
-[AVHapticSequence dealloc]
-[AVHapticSequence setEventBehavior:]
-[AVHapticSequence setLoopingEnabled:error:]
_seqID != kInvalidSequenceID
-[AVHapticSequence prepareToPlayAndReturnError:]
self.player.resourcesAllocated
-[AVHapticSequence playAtTime:offset:error:]
self.player.client.clientID != kInvalidClientID
self.player.client.running
-[AVHapticSequence stopAtTime:error:]
-[AVHapticSequence pauseAtTime:error:]
-[AVHapticSequence resumeAtTime:error:]
-[AVHapticSequence seekToTime:error:]
-[AVHapticSequence resetAtTime:error:]
-[AVHapticSequence setParameter:value:channel:atTime:error:]
channelIndex < self.channelCount
-[AVHapticSequence cancelAndReturnError:]
-[AVHapticSequence activateChannelByIndex:atTime:error:]
index < self.channelCount
-[AVHapticSequence setVolume:atTime:error:]
-[AVHapticSequence earlyUnduckAudioAtTime:error:]
AudioResourceIndex
%25s:%-5d %s: Clearing any externally-registered audio resources
%25s:%-5d %s: EventParameter %@ does not support ImmediateParameter modulation. Ignore
 enableTelemetry=YES 
%25s:%-5d %s: creating player %p
%25s:%-5d %s: ERROR: pattern contains no playable events
PatternPlayer_initWithPlayable
%25s:%-5d %s: destroying player %p
%25s:%-5d %s: Sending %smute params
%25s:%-5d %s: Starting simple player %p at time %.3f
PatternPlayer_startAtTime
%25s:%-5d %s: Stopping simple player %p at time %.3f
PatternPlayer_stopAtTime
%25s:%-5d %s: Sending simple player %p parameters at time %.3f
PatternPlayer_sendParameters
%25s:%-5d %s: Cancelling events on simple player %p immediately
PatternPlayer_cancelAndReturnError
%25s:%-5d %s: Sending player %p a parameter curve
PatternPlayer_scheduleParameterCurve
%25s:%-5d %s: Starting simple player extended %p at time %.3f
PatternPlayer_startAtTime_withImmediateParameters
%25s:%-5d %s: %s: %s error %d
%25s:%-5d %s: In parameter %@ is not a valid CHHapticEventParameter
%25s:%-5d %s: In parameter %@ is not a valid CHHapticDynamicParameter
%25s:%-5d %s: Engine not configured with a Locality - querying using '%@'
%25s:%-5d %s: Querying server for capabilities with '%@' Locality
%25s:%-5d %s: Querying server for capabilities with Priority '%@'
%25s:%-5d %s: ERROR: Illegal priority: %@
%25s:%-5d %s: Querying server for capabilities with HapticPowerUsage '%@'
%25s:%-5d %s: ERROR: Illegal power usage: %@
%25s:%-5d %s: Querying server for UsageCategory of '%@'
%25s:%-5d %s: Server returned: supports audio: %d adv players: %d internal: %d cont time limit: %us
%25s:%-5d %s: Recieved %u haptic transient IDs
%25s:%-5d %s: Recieved %u haptic continuous sustained IDs
%25s:%-5d %s: Recieved %u haptic continuous nonsustained IDs
%25s:%-5d %s: ERROR: Caught exception during dictionary parse
%25s:%-5d %s: ERROR: Server query returned error '%@'
%25s:%-5d %s: Setting default completion handler on underlying AVHapticSequence
%25s:%-5d %s: Player %p default completion handler called
%25s:%-5d %s: Creating advanced player %p
AdvancedPatternPlayer_initWithPattern
%25s:%-5d %s: Destroying advanced player %p
%25s:%-5d %s: Starting sequence with offset %.3f
%25s:%-5d %s: Restarting paused sequence with offset %.3f
%25s:%-5d ASSERTION FAILURE [(self.paused) != 0 is false]: 
%25s:%-5d %s: Resuming paused sequence with offset %.3f
%25s:%-5d %s: Starting player %p at time %.3f
AdvancedPatternPlayer_startAtTime
%25s:%-5d %s: Stopping player %p at time %.3f
AdvancedPatternPlayer_stopAtTime
%25s:%-5d %s: Sending player %p parameters at time %.3f
AdvancedPatternPlayer_sendParameters
%25s:%-5d %s: ERROR: Parameter curves are not yet supported on CHHapticAdvancedPlayers
%25s:%-5d %s: Pausing player %p at time %.3f
%25s:%-5d %s: Resuming player %p at time %.3f
%25s:%-5d %s: Caching player %p offset %.2f for later start/resume
%25s:%-5d %s: Seeking on player %p to offset %.2f
%25s:%-5d %s: Cancelling commands for player %p immediately
%25s:%-5d %s: Wrapping client's completion handler block %p in our block and setting on underlying AVHapticSequence
%25s:%-5d %s: Player %p client-supplied completion handler called - calling captured block %p on internal queue
%25s:%-5d %s: Client-supplied completion handler called on destroyed player - calling captured block %p on global queue
AdvancedPatternPlayer_initWithRingtoneData
AdvancedPatternPlayer_initWithVibePatternDictionary
%25s:%-5d %s: Setting player %p to early unduck audio at time %.3f
%25s:%-5d %s: ERROR: Failed to open audio resource %@: %u
%25s:%-5d %s: ERROR: Failed to get property for audio resource %@
%25s:%-5d %s: ERROR: Failed to set property on audio resource %@
%25s:%-5d %s: ERROR: Failed to read from audio resource %@: %u
%25s:%-5d %s: Adding %llu bytes to our existing %llu
%25s:%-5d %s: Memory limit reached on custom audio resources - unregister others to make space
%25s:%-5d %s: Removing %llu bytes from our existing %llu
%25s:%-5d ASSERTION FAILURE [(_sTotalAllocatedBytes >= bytes) != 0 is false]: 
%25s:%-5d %s: ERROR: Unknown event param type: %u
%25s:%-5d %s: ERROR: Unknown param type: %u
%25s:%-5d %s: ERROR: Cannot export AudioCustom events
%25s:%-5d %s: Type %u time: %.2f secs dur: %.2f secs %u event params
%25s:%-5d %s: Fixed Param '%@': value %f
%25s:%-5d %s: ERROR: Unknown event param type: %@
%25s:%-5d %s: Time: %.2f secs dur %.2f secs %u event params
%25s:%-5d %s: Fixed Param '%@': value: %f
%25s:%-5d %s: Normalized sharpness %f -> event type %u
%25s:%-5d %s: Ignoring for HapticTransient
%25s:%-5d %s: Event has no HapticSharpness EventParameter. Default event type: %u
%25s:%-5d %s: Adding event param for haptic gain: %.2f
%25s:%-5d %s: Normalized value %f -> sharpness index %d
%25s:%-5d %s: ERROR: Cannot mix Fullness with unprivileged Sharpness parameter
%25s:%-5d %s: Normalized value %f -> fullness index %d
%25s:%-5d %s: ERROR: Cannot mix privileged and unprivileged Sharpness parameters
%25s:%-5d %s: ERROR: Unknown event parameter type: %@
%25s:%-5d %s: Handling as a non-privileged event
%25s:%-5d %s: Type %u time: %.2f secs duration: %.2f secs %u client event params
%25s:%-5d %s: Event has no HapticSharpness EventParameter. Using default event ID %u
%25s:%-5d %s: Adding event param for continuous haptic intensity: %.2f
%25s:%-5d %s: ERROR: Unsupported event param type: %@
%25s:%-5d %s: Event type '%@':
%25s:%-5d %s: ERROR: Illegal time value: %f
%25s:%-5d %s: ERROR: Illegal duration value: %f
%25s:%-5d %s: ERROR: Continuous haptic event has a missing or zero-length duration
%25s:%-5d %s: Haptic event duration capped at %f seconds
%25s:%-5d %s: ERROR: Continuous audio event has a missing or zero-length duration
%25s:%-5d %s: ERROR: Audio resource with ID %u has looping enabled but the event does not specify a duration
%25s:%-5d %s: ERROR: Invalid or missing audio resource with ID %u
%25s:%-5d %s: ERROR: Unknown privileged event type: %@
%25s:%-5d %s: ERROR: Unknown event type: %@
%25s:%-5d %s: Dynamic parameter ID '%@':
%25s:%-5d %s: Creating event for haptic volume %f for time %f seconds
%25s:%-5d %s: Creating event for haptic transposition %f for time %f seconds
%25s:%-5d %s: Creating event for haptic attack time %f for time %f seconds
%25s:%-5d %s: Creating event for haptic decay time %f for time %f seconds
%25s:%-5d %s: Creating event for haptic release time %f for time %f seconds
%25s:%-5d %s: Creating event for audio volume %f for time %f seconds
%25s:%-5d %s: Creating event for audio brightness %f for time %f seconds
%25s:%-5d %s: Creating event for audio pan %f for time %f seconds
%25s:%-5d %s: Creating event for audio transposition %f for time %f seconds
%25s:%-5d %s: Creating event for audio attack time %f for time %f seconds
%25s:%-5d %s: Creating event for audio decay time %f for time %f seconds
%25s:%-5d %s: Creating event for audio release time %f for time %f seconds
%25s:%-5d %s: ERROR: Unrecognized dynamic parameter: %@
%25s:%-5d %s: Parameter curve ID: '%@', relative time: %f
%25s:%-5d %s: ERROR: ID %@ is not supported by parameter curves
%25s:%-5d %s: ERROR: Invalid event parameter ID.
%25s:%-5d %s: ERROR: Invalid dynamic parameter ID
%25s:%-5d %s: Setting SS&H category %@ volume, disabling notifications and NowPlaying for this audio session
%25s:%-5d %s: Failed to set category on audio session
%25s:%-5d %s: Failed to set mode %@ on audio session. Continue
%25s:%-5d %s: Cannot set audio session with session flags. Continue
%25s:%-5d %s: Cannot set audio buffer frame size to %u. Using default buffer size
%25s:%-5d %s: Failed to disable audio session notifications
%25s:%-5d %s: Failed to disable audio session now-playing policy
%25s:%-5d %s: Setting NeedsPowerBudgeting property on audio session
%25s:%-5d %s: Failed to set audio session NeedsPowerBudgeting
%25s:%-5d %s: Setting for System Sound, disabling notifications and NowPlaying for this audio session
%25s:%-5d %s: Cannot set audio buffer frame size to %u
%25s:%-5d %s: Failed to set not to be ducked by others
%25s:%-5d %s: Failed to set duck level
%25s:%-5d %s: Using default usage category
%25s:%-5d %s: Cannot set audio buffer frame size to %u. Error: %@
%25s:%-5d %s: WARNING: Missing or malformed version key - assuming v1.0
%25s:%-5d %s: ERROR: Unsupported version number: %.1f
%25s:%-5d %s: Pattern version %.1f
%25s:%-5d %s: Pattern Locality: '%@'
%25s:%-5d %s: Pattern Priority: '%@'
%25s:%-5d %s: Pattern HapticPowerUsage: '%@'
%25s:%-5d %s: Pattern AudioPowerUsage: '%@'
%25s:%-5d %s: Pattern UsageCategory: '%@'
%25s:%-5d %s: Adding embedded audio resource path '%@', options '%@'
%25s:%-5d %s: ERROR: Pattern dictionary is missing '%@' key
%25s:%-5d %s: ERROR: Empty pattern
%25s:%-5d %s: ERROR: Missing event type
%25s:%-5d %s: ERROR: Illegal or missing event time
%25s:%-5d %s: ERROR: Illegal event duration
%25s:%-5d %s: ERROR: Custom event is missing its audio resource path
%25s:%-5d %s: ERROR: Custom event's audio resource path cannot be resolved
%25s:%-5d %s: ERROR: Event parameter has invalid or missing parameter ID
%25s:%-5d %s: ERROR: Event parameter has invalid or missing parameter value
%25s:%-5d %s: ERROR: Param is missing a %s
%25s:%-5d %s: ERROR: Parameter curve control point has invalid or missing time
%25s:%-5d %s: ERROR: Parameter curve control point has invalid or missing value
%25s:%-5d %s: Client 0x%x EngineState -> %d
%25s:%-5d %s: (Client 0x%x returning EngineState %d)
%25s:%-5d %s: initializing with options
%25s:%-5d %s: Init calling disconnect on self
%25s:%-5d %s: Init exited
%25s:%-5d %s: Deallocating HapticClient 0x%x
%25s:%-5d %s: dealloc of HapticClient exited
%25s:%-5d %s: ERROR: Unable to get server capabilities: %@
%25s:%-5d %s: ERROR: Unable to get latency: %@
%25s:%-5d %s: Got error from server: %@
%25s:%-5d %s: Client 0x%x allocating
%25s:%-5d %s: ERROR: Unable to set up client: %@
%25s:%-5d %s: Server returned shared buffer of size %u
%25s:%-5d ASSERTION FAILURE [(sharedBufferSize > 0) != 0 is false]: 
%25s:%-5d %s: Setting up shared memory on client
%25s:%-5d %s: ERROR: Unable to access shared memory
%25s:%-5d %s: Notifying caller via completion callback
%25s:%-5d %s: done allocating
%25s:%-5d %s: Client 0x%x loading dictionary: %p
%25s:%-5d %s: Got error during transaction: %@
%25s:%-5d %s: done loading event
%25s:%-5d %s: done creating event
%25s:%-5d %s: done copying event
%25s:%-5d %s: done referencing event
%25s:%-5d %s: done releasing event
%25s:%-5d %s: Client 0x%x starting prewarm
%25s:%-5d %s: Server called client-side prewarm completionCallback
%25s:%-5d %s: Client 0x%x stopping prewarm
%25s:%-5d %s: ERROR: Unable to stop prewarm: %@
%25s:%-5d %s: Client 0x%x starting
%25s:%-5d %s: Client 0x%x done with startRunning:
%25s:%-5d %s: Client 0x%x stopping
%25s:%-5d %s: ERROR: Unable to stop running: %@
%25s:%-5d %s: Client 0x%x done with stopRunning:
%25s:%-5d %s: Client 0x%x finishing
%25s:%-5d %s: completionCallback set to %p
%25s:%-5d %s: Writing FinalEvent with time %f [host time was %llu]
%25s:%-5d %s: ERROR: Attempt to write FinalEvent failed - bailing by calling completionCallback with error %@ for client 0x%x
%25s:%-5d %s: ERROR: Player was not running - bailing with error %@ for client 0x%x
%25s:%-5d %s: Client 0x%x done with finish
%25s:%-5d %s: Client 0x%x, behavior %u
%25s:%-5d %s: Got error from server: %p
%25s:%-5d %s: done setting behavior
%25s:%-5d %s: Client 0x%x writing reset event: time: %.3f channelID: %u
%25s:%-5d %s: fixed param[%u]: source value: %.2f, immediateParameter value: %.2f, result value: %.2f
%25s:%-5d %s: ImmediateParameter for ID %u is not supported
%25s:%-5d %s: Copied fixed param[%d]: ID %d, normalized value %f, for start event
%25s:%-5d %s: Creating start event at relative time %f for eventID: %u
%25s:%-5d %s: Client 0x%x writing %u events from passed-in event array at time: %.3f
%25s:%-5d %s: Bailing out on recursion (availableSize = %u)
%25s:%-5d %s: Bailing out on recursion because event array cannot be split further
%25s:%-5d %s: ====>> StartEventList at time: %f
%25s:%-5d %s: Start event: relative time %f
%25s:%-5d %s: Stop event added: relative time %f
%25s:%-5d %s: ERROR: Memory write failed
%25s:%-5d %s: Param event: relative time %f
%25s:%-5d %s: Param curve: relative time %f
%25s:%-5d %s: ERROR: Event is none of haptic/audio event, parameter, or parameter curve. returning
%25s:%-5d %s: <<==== EndEventList at time: %f
%25s:%-5d %s: Client 0x%x writing %u param curve control points from passed-in param curve array at time: %.3f
%25s:%-5d %s: => StartParamCurveList (paramID %u) at (relative-to-event-list) time %.3f
%25s:%-5d %s: %u curve points
%25s:%-5d %s: Point for synth param[%u]: rel time: %.3f, converted value: %f
%25s:%-5d %s: == AddParamCurve (paramID %u) rel time %.3f
%25s:%-5d %s: <= EndParamCurveList (paramID %u) at time %f
%25s:%-5d %s: Client 0x%x writing command: time: %.3f type: %hu
%25s:%-5d %s: Client 0x%x writing command: time: %.3f type: %hu ID: %u, value: %f
%25s:%-5d %s: ERROR: Client 0x%x: doScheduleParamCurve failed!
%25s:%-5d ASSERTION FAILURE [(result) != 0 is false]: 
%25s:%-5d %s: Client 0x%x loading sequence: %p
%25s:%-5d %s: loadAndPrepareHapticSequenceFromData:reply: top of [serverDelegate loadHapticSequenceFromData] reply block
%25s:%-5d %s: Got error during transaction: %p
%25s:%-5d %s: done loading sequence
%25s:%-5d %s: Client 0x%x loading sequence from event array
%25s:%-5d %s: loadAndPrepareHapticSequenceFromEvents:reply: top of [serverDelegate loadHapticSequenceFromEvents] reply block
%25s:%-5d Got error from server: %@
%25s:%-5d %s: Client 0x%x loading pattern: %p
%25s:%-5d %s: loadAndPrepareHapticSequenceFromVibePattern:reply: top of [serverDelegate loadVibePattern] reply block
%25s:%-5d %s: done loading pattern
%25s:%-5d %s: Client 0x%x, seqID %u, behavior %u
%25s:%-5d %s: Caching sequence finished handler block %p for seqID %u
%25s:%-5d %s: Calling completion handlers on any active sequences
%25s:%-5d %s: Sequence %u is running - setting entry to detached
%25s:%-5d %s: Sequence %u is not running - deleting entry
%25s:%-5d %s: Client 0x%x preparing sequenceID: %u
%25s:%-5d %s: prepareHapticSequence:error: top of [serverDelegate prepareHapticSequence] reply block
%25s:%-5d %s: done preparing
%25s:%-5d %s: Writing command: (time 0) type: %hu sequenceID: %u looping: %d
%25s:%-5d %s: Writing command: (time 0) type: %hu sequenceID: %u loop length: %f
%25s:%-5d %s: Writing command: (time 0) type: %hu sequenceID: %u rate: %f
%25s:%-5d %s: Writing command: time: %.3f type: %hu sequenceID: %u offset: %f
%25s:%-5d %s: Writing command: time: %.3f seq cmd type: %hu sequenceID: %u
%25s:%-5d %s: Writing command: time: %.3f type: %hu sequenceID: %u channel: %u param: %u value: %.3f
%25s:%-5d %s: Writing command: time: %.3f cmd type: %hu sequenceID: %u
%25s:%-5d %s: Client 0x%x detaching sequenceID %u
%25s:%-5d %s: releasing resources
%25s:%-5d %s: done releasing
%25s:%-5d %s: [xpc] Connecting...
%25s:%-5d %s: [xpc] Connection: %@
%25s:%-5d %s: Calling configureWithOptions:reply on server with dictionary: '%@'
%25s:%-5d %s: ERROR: Failed setting options / retrieving client ID from server
%25s:%-5d %s: Initial XPC call to server timed out
%25s:%-5d %s: [xpc] Server connection: %@, PID: %d
%25s:%-5d %s: [xpc] Got error during transaction: %@
%25s:%-5d %s: [xpc] ERROR: Failed retrieving client ID
%25s:%-5d %s: Client ID: 0x%lx
%25s:%-5d %s: [xpc] done connecting
%25s:%-5d %s: ERROR: Async XPC call for '%@' (client ID 0x%x) failed: %@
%25s:%-5d %s: ERROR: Sync XPC call for '%@' (client ID 0x%x) failed: %@
%25s:%-5d %s: [xpc] Invalidating...
%25s:%-5d %s: [xpc] done disconnecting
%25s:%-5d %s: Calling server with player behavior %u
%25s:%-5d %s: Exited
%25s:%-5d %s: Calling server with request for %u channels
%25s:%-5d %s: Server returned count of %u
%25s:%-5d %s: done requesting channels
%25s:%-5d %s: Calling server with request to remove channelID %u
%25s:%-5d %s: done removing channel
%25s:%-5d %s: [xpc] Entered (due to connection interruption) for client ID 0x%x
%25s:%-5d %s: We were waiting for a completion callback, so call it now
%25s:%-5d %s: We were running, so call async stopped callback
%25s:%-5d %s: [xpc] done handling crash for client ID 0x%x
%25s:%-5d %s: [xpc] Entered (due to connection invalidation) for client ID 0x%x
%25s:%-5d %s: [xpc] Entered (due to client disconnect) for client ID 0x%x
%25s:%-5d %s: [xpc] done handling disconnect for client ID 0x%x
%25s:%-5d %s: Client-side sequence finish callback for client 0x%x, seq %u
%25s:%-5d %s: Deleting finished handler block for detached sequence
%25s:%-5d %s: Calling cached sequence finished handler block %p
%25s:%-5d %s: Client-side sequence finish callback done for client 0x%x
%25s:%-5d %s: No cached sequence finished handler block for seq %u
%25s:%-5d %s: Client-side (async) finish completion callback for client 0x%x called from server
%25s:%-5d %s: Async dispatch: preparing to call completionCallback for client 0x%x
%25s:%-5d %s: Calling completionCallback %p and then setting to nil
%25s:%-5d %s: strongSelf.completionCallback is nil
%25s:%-5d %s: AVHapticClient 'strongSelf' is nil
%25s:%-5d %s: Client-side finish completionCallback done for client 0x%x
%25s:%-5d %s: Client-side (async) stop callback for client 0x%x, reason %d
%25s:%-5d %s: Client thinks it is not running.  Did we just get a call to stop?
%25s:%-5d %s: Client-side (async) stop callback done for client 0x%x
%25s:%-5d %s: Client-side call for client 0x%x with disconnect reason %d
%25s:%-5d %s: Splitting length-%u array at index %u (delta from previous event: %f seconds)
%25s:%-5d %s: Force-splitting length-%u array at index %u (delta from previous event: %f seconds)
%25s:%-5d %s: No good split point found - returning midpoint %u
%25s:%-5d %s: Pattern version > %.1f - looking for config dictionary
%25s:%-5d %s: File type is not supported
%25s:%-5d %s: Incoming URL not a valid file path
%25s:%-5d %s: AHAP dictionary is corrupt: %@
%25s:%-5d %s: Searching for resource in '%@'
%25s:%-5d %s: Found it at '%@'
%25s:%-5d %s: WARNING: Skipping Custom Audio event - server does not support audio
%25s:%-5d %s: Creating pattern for key '%@'
%25s:%-5d %s: Pattern library path: %@
%25s:%-5d %s: Failed to read pattern library data: %@
%25s:%-5d %s: Read pattern library data
%25s:%-5d %s: Failed to load pattern library: %@
%25s:%-5d %s: Loaded pattern library dict:
%25s:%-5d %s: Haptic pattern with key '%@' not found
%25s:%-5d %s: '%@' path: %@
%25s:%-5d %s: Failed to read pattern data: %@
%25s:%-5d %s: Read pattern data
%25s:%-5d %s: Failed to serialize pattern data: %@
%25s:%-5d %s: '%@' pattern dict:
%25s:%-5d %s: Creating resource map on first use
%25s:%-5d %s: Clearing resource map
%25s:%-5d %s: auto-shutdown being enabled while running - wait for any existing players
%25s:%-5d %s: <Top of AV finishWithCompletionHandler block>
%25s:%-5d %s: finishWithCompletionHandler callback returned error: %@
%25s:%-5d %s: <Bottom of AV finishWithCompletionHandler block>
%25s:%-5d %s: auto-shutdown being disabled
%25s:%-5d %s: Invalid shutdown timeout (%f) being ignored
%25s:%-5d %s: Engine %p was notified of server death
%25s:%-5d %s: Clearing public audio resources
%25s:%-5d %s: Attempting to reconnect engine %p to server
%25s:%-5d %s: Engine already destroyed - noop
%25s:%-5d %s: Engine had external passed-in auxiliary session. Caller should reconfigure session
%25s:%-5d %s: Calling engine-reset handler on default queue
%25s:%-5d %s: Done with reconnect for engine %p
%25s:%-5d %s: FATAL ERROR: Unable to reconnect to server
HapticEngine_handleMediaServerRecovery
%25s:%-5d %s: Creating underlying Haptic Player
%25s:%-5d %s: Attempt #%d...
%25s:%-5d %s: ERROR: Server failure: %@
%25s:%-5d %s: ERROR: Server connection broke with error '%@'
%25s:%-5d %s: Waiting to reconnect
%25s:%-5d %s: Allocating resources...
%25s:%-5d %s: ERROR: Resource allocation failure: %@
%25s:%-5d %s: Releasing lock
%25s:%-5d %s: Waiting for server...
%25s:%-5d %s: ERROR: Server timeout
%25s:%-5d %s: Default behavior is to follow audio route
%25s:%-5d %s: Setting behavior to not follow audio route
%25s:%-5d %s: In player's stopRunningHandler block.  Stopped reason: %d
%25s:%-5d %s: Calling engine-stopped handler with reason %d
%25s:%-5d %s: Finished initializing
%25s:%-5d %s: Creating idle timer for %.3f seconds
%25s:%-5d %s: Calling idle timeout handler on internal queue
%25s:%-5d %s: Starting idle timer (on async dispatch)
%25s:%-5d %s: Stopping engine in response to timeout
%25s:%-5d %s: Calling client's engine-stopped handler on internal queue
%25s:%-5d %s: Cancelling idle timer
%25s:%-5d %s: Called on engine %p with error %@
%25s:%-5d %s: Calling client's finishedHandler on internal queue
%25s:%-5d %s: Client requested engine stop-on-finish
%25s:%-5d %s: Client finishedHandler is nil
%25s:%-5d %s: <Top of doStopWithCompletionHandler block>
%25s:%-5d %s: Calling engine-stopped handler on internal queue
%25s:%-5d %s: Engine stop completed
%25s:%-5d %s: Client-supplied stopped handler called on destroyed player - calling captured block %p on global queue
%25s:%-5d %s: Requested not to stop-on-finish
%25s:%-5d %s: Done handling finish
%25s:%-5d %s: Setting player's behavior to 0x%x
%25s:%-5d %s: Synchronously stopping the underlying player %p
%25s:%-5d %s: Calling stop completion handler on internal queue
%25s:%-5d %s: Underlying player %p not running
%25s:%-5d %s: synchronously stopping and destroying engine %p
%25s:%-5d %s: done destroying engine %p
%25s:%-5d %s: sessionID: %u, isShared: %u options: '%@'
%25s:%-5d %s: ERROR: Invalid audio session ID: %u
%25s:%-5d %s: Creating engine %p with legacy initializer
HapticEngine_initAndReturnError
%25s:%-5d %s: Creating engine %p with audio session %p
%25s:%-5d %s: Creating engine %p with internal audio session
HapticEngine_initWithAudioSession
%25s:%-5d %s: Cannot reconfigure audio session for system sound
%25s:%-5d %s: options: '%@'
HapticEngine_initWithOptions
%25s:%-5d %s: Prewarming the underlying Haptic Player
%25s:%-5d %s: ERROR: Player prewarm failed: %@
%25s:%-5d %s: Calling prewarm completion handler
HapticEngine_prewarmWithCompletionHandler
%25s:%-5d %s: Stopping prewarm on the underlying Haptic Player
HapticEngine_stopPrewarm
%25s:%-5d %s: Starting underlying Haptic Player
%25s:%-5d %s: In underlying AVHapticPlayer's completion handler block
%25s:%-5d %s: ERROR: Player start failed: %@
%25s:%-5d %s: Calling start completion handler on internal queue
%25s:%-5d %s: Called on engine %p
%25s:%-5d %s: Engine already running
%25s:%-5d %s: Directly calling start completionHandler on internal queue
HapticEngine_startWithCompletionHandler
%25s:%-5d %s: Waiting for startup...
%25s:%-5d %s: ERROR: Startup timeout
%25s:%-5d %s: Startup complete
HapticEngine_startAndReturnError
%25s:%-5d %s: Synchronously stopping underlying Haptic Player
%25s:%-5d %s: In underlying AVHapticPlayer's completion handler block for doStopEngineAndWait
%25s:%-5d %s: ERROR: Player stop failed: %@
%25s:%-5d %s: Waiting for player stop...
%25s:%-5d %s: WARNING: timed out waiting for underlying player to stop
%25s:%-5d %s: Done waiting for underlying player stop
%25s:%-5d %s: Stopping underlying Haptic Player
%25s:%-5d %s: In underlying AVHapticPlayer's completion handler block for doStopWithCompletionHandler
%25s:%-5d %s: ERROR: Lower-level player stop failed: %@
%25s:%-5d %s: Engine not running
%25s:%-5d %s: Directly calling stop completionHandler on internal queue
HapticEngine_stopWithCompletionHandler
%25s:%-5d %s: Called on engine %p with finishedHandler %p
%25s:%-5d %s: Creating engine %p with shared audio session ID %u
HapticEngine_initWithAudioSessionID
%25s:%-5d %s: Creating engine %p with %s audio session %p
%25s:%-5d %s: Using passed-in shared audio session
%25s:%-5d %s: Shared audio session cannot be nil
%25s:%-5d %s: Using passed-in auxiliary audio session with no UsageCategory
%25s:%-5d %s: Creating internal unshared audio session
%25s:%-5d %s: Setting behavior to not activate audio session (if haptics-only)
%25s:%-5d %s: Creating player from pattern
%25s:%-5d %s: Creating advanced player from pattern
%25s:%-5d %s: Creating advanced player from ringtone data
%25s:%-5d %s: Creating advanced player from vibe pattern dictionary
%25s:%-5d %s: Creating advanced player from ringtone pattern
%25s:%-5d %s: Creating privileged player from Playable
%25s:%-5d %s: Cannot find resource referenced by ID %u. Returning 0.0
%25s:%-5d %s: Cannot find resource referenced by ID %u. Returning FALSE
%25s:%-5d %s: Engine %p adding resID %u to public resource list
%25s:%-5d ASSERTION FAILURE [([self doFindPublicAudioResourceID:resourceID] == std::end(_publicAudioResources)) != 0 is false]: 
%25s:%-5d %s: Engine %p %s resID %u
%25s:%-5d %s: Engine %p removing resID %u from public resource list
%25s:%-5d ASSERTION FAILURE [(result != std::end(_publicAudioResources)) != 0 is false]: 
HapticEngine_registerAudioResource
%25s:%-5d %s: ERROR: audio resource ID %u not registered on this CHHapticEngine
HapticEngine_unregisterAudioResource
%25s:%-5d %s: Attempting to remove all remaining public audio resources for this engine
%25s:%-5d %s: Creating haptic pattern from plist...
%25s:%-5d %s: Creating haptic pattern from JSON or AHAP...
%25s:%-5d %s: Incoming fileURL cannot be nil
HapticEngine_playPatternFromURL
%25s:%-5d %s: Incoming NSData is invalid
HapticEngine_playPatternFromData
%25s:%-5d %s: Incoming NSData cannot be nil
%25s:%-5d %s: Creating Pattern Player
%25s:%-5d %s: Starting CHHapticEngine...
%25s:%-5d %s: Cannot start haptic engine: error %@
%25s:%-5d %s: Starting Pattern Player...
%25s:%-5d %s: <Dispatching block %p async...>
%25s:%-5d ASSERTION FAILURE [(!in_dispatch_sync) != 0 is false]: 
%25s:%-5d %s: <Block async dispatch complete>
%25s:%-5d %s: <Dispatching block %p sync...>
%25s:%-5d %s: <Block sync dispatch complete>
%25s:%-5d %s: AutoShutdown on and engine stopped - auto start
%25s:%-5d %s: player %p notified engine it will be stopping at time %.3f
%25s:%-5d %s: ERROR: Unable to add an additional player channel
%25s:%-5d %s: ERROR: This channel was not registered
%25s:%-5d %s: Adding reference to audio resource ID %u from pattern
%25s:%-5d %s:    found it - reference count now %u
%25s:%-5d %s: Resource ID %u not previously registered!
%25s:%-5d %s: Registering %s audio resource '%@'
%25s:%-5d %s: -- Entry list has '%@' with ID %u, and count %u
%25s:%-5d %s: Resource already registered and request uses matching options - referencing existing ID (%u)
%25s:%-5d %s: ERROR: unable to reference server-side audio resource with ID %u: %@
%25s:%-5d %s: Returning ID 0 due to error
%25s:%-5d %s: Resource already registered but request uses options - copy existing ID (%u) as new ID
%25s:%-5d %s: ERROR: Server failed to copy custom audio event: %@
%25s:%-5d ASSERTION FAILURE [(_sResourceEntries->emplace(copiedResourceID, ResourceEntry(resource, options, 1)).second == true) != 0 is false]: 
%25s:%-5d %s: Returning ID %u for copied resource '%@'
%25s:%-5d %s: Resource not already registered - creating new entry
%25s:%-5d %s: ERROR: Server failed to create custom audio event: %@
%25s:%-5d %s: Adding new ID %u for %s resource '%@'
%25s:%-5d ASSERTION FAILURE [(_sResourceEntries->emplace(resourceID, ResourceEntry(resource, options, 1)).second == true) != 0 is false]: 
%25s:%-5d %s: Attempting to remove %s ID %u
%25s:%-5d %s:    found it and refcount is at zero - erasing and releasing on server
%25s:%-5d %s: ERROR: unable to release server-side audio resource with ID %u: %@
%25s:%-5d %s:    found it and decrementing refcount
%25s:%-5d %s: ERROR: could not find audio resource with ID %u
%25s:%-5d %s: Old: %d mute: %d running: %d => New: %d
%25s:%-5d %s: clientID: 0x%lx channelID: %u behavior: %u
%25s:%-5d %s: Illegal event behavior: %u
%25s:%-5d %s: sending event array: clientID: 0x%lx atTime: %.3f
%25s:%-5d %s: clearing events: clientID: 0x%lx fromTime: %.3f
%25s:%-5d %s: setting param: clientID: 0x%lx type: %u value: %.2f atTime: %.3f
%25s:%-5d %s: sending reset event: clientID: 0x%lx time: %.3f
%25s:%-5d %s: exited with nil
%25s:%-5d %s: Connection error
%25s:%-5d %s: initWithSessionID entered
%25s:%-5d %s: initWithSessionID exited
%25s:%-5d %s: initWithInternalSessionID entered
%25s:%-5d %s: initWithOptions entered
%25s:%-5d %s: initWithOptions exited
%25s:%-5d %s: dealloc entered for player %p
%25s:%-5d %s: dealloc exited
%25s:%-5d %s: clientID: 0x%lx
%25s:%-5d %s: clientID: 0x%lx: call failed
%25s:%-5d %s: clientID: 0x%lx behavior: %u
%25s:%-5d %s: clientID: 0x%lx numberOfChannels: %u
%25s:%-5d %s: Can't set channel count while player is running
%25s:%-5d %s: player %p, clientID: 0x%lx
%25s:%-5d %s: Total channels was %u, now %u
%25s:%-5d ASSERTION FAILURE [(newChannelCount == oldChannelCount + 1) != 0 is false]: 
%25s:%-5d %s: Adding new AVHapticPlayerChannel %p to end of array with channel ID %u
%25s:%-5d %s: Returning channel %p (ID %u)
%25s:%-5d %s: player %p, clientID: 0x%lx channel %p (ID %u)
%25s:%-5d %s: Channel not found on player
%25s:%-5d %s: allocating resources: clientID: 0x%lx
%25s:%-5d %s: Resources already allocated -- just call completion handler
%25s:%-5d %s: deallocating resources: clientID: 0x%lx
%25s:%-5d %s: Resources already deallocated -- noop
%25s:%-5d %s: loading haptic event: clientID: 0x%lx
%25s:%-5d %s: creating custom audio event: clientID: 0x%lx, frameCount: %lu
%25s:%-5d %s: copying custom audio event: clientID: 0x%lx, eventID: %u
%25s:%-5d %s: referencing custom audio event: clientID: 0x%lx
%25s:%-5d %s: releasing custom audio event: clientID: 0x%lx
%25s:%-5d %s: loading haptic sequence from NSData: clientID: 0x%lx
%25s:%-5d %s: loading and preparing haptic sequence from NSArray: clientID: 0x%lx
%25s:%-5d %s: loading and preparing haptic pattern: clientID: 0x%lx
%25s:%-5d %s: sequence %u already prepared for clientID: 0x%lx - NOOP
%25s:%-5d %s: enable sequence looping: entered
%25s:%-5d %s: set sequence loop length: entered
%25s:%-5d %s: set sequence playback rate: entered
%25s:%-5d %s: prewarm: clientID: 0x%lx
%25s:%-5d %s: reply block for _client prewarm: replyError: %@
%25s:%-5d %s: stop prewarm: clientID: 0x%lx
%25s:%-5d %s: start running: clientID: 0x%lx
%25s:%-5d %s: Client 0x%lx asynchronously stopped for reason %d
%25s:%-5d %s: reply block for _client startRunning: replyError: %@
%25s:%-5d %s: Cannot start without allocating resources
%25s:%-5d %s: stop running: clientID: 0x%lx
%25s:%-5d %s: reply block for _client stopRunning: replyError: %@
%25s:%-5d %s: Client was not running - calling completion handler immediately
%25s:%-5d %s: finish with comp handler: clientID: 0x%lx
%25s:%-5d %s: starting init with data %p, player %p
%25s:%-5d %s: initWithData: reply block for hapticPlayer loadAndPrepareHapticSequenceFromData: replyID: %u, replyChannelCount: %u, replyError: %@
%25s:%-5d %s: starting init with event array
%25s:%-5d %s: initWithEvents: reply block for hapticPlayer loadAndPrepareHapticSequenceFromEvents: replyID: %u, replyChannelCount: %u, replyError: %@
%25s:%-5d %s: starting init with dictionary
%25s:%-5d %s: initWithDictionary: reply block for hapticPlayer loadAndPrepareHapticSequenceFromVibePattern: replyID: %u, replyError: %@
%25s:%-5d %s: dealloc seq %p, clientID: 0x%lx
%25s:%-5d %s: Destroying a sequence that is still looping!  Disabling loop.
%25s:%-5d %s: clientID: 0x%lx seqID: %u behavior: %u
%25s:%-5d %s: prepare to play seq: clientID: 0x%lx
%25s:%-5d %s: play seq: clientID: 0x%lx time: %.3f offsetTime: %.3f playback rate: %.1f
%25s:%-5d %s: soloing sequence track %u
%25s:%-5d %s: stop seq: clientID: 0x%lx time: %.3f
%25s:%-5d %s: pause seq: clientID: 0x%lx time: %.3f
%25s:%-5d %s: resume seq: clientID: 0x%lx time: %.3f
%25s:%-5d %s: seek seq: clientID: 0x%lx time: NOW
%25s:%-5d %s: reset parameters on seq: clientID: 0x%lx time: %.3f 
%25s:%-5d %s: set param on seq: clientID: 0x%lx type: %u value: %.2f channelIndex: %u atTime: %.3f
%25s:%-5d %s: cancel seq: clientID: 0x%lx
%25s:%-5d %s: activating seq track index: clientID: 0x%lx time: %.3f index: %u
%25s:%-5d %s: request pushed out to pending play request at time %.3f
%25s:%-5d %s: Associated player is not running - action delayed until sequence start
%25s:%-5d %s: set volume on seq: clientID: 0x%lx time: %.3f volume: %.3f
%25s:%-5d %s: early unduck audio on seq: clientID: 0x%lx time: %.3f
PatternPlayer
CHHapticPatternPlayerExtended
CHHapticPatternPlayer
NSObject
CHHapticParameterAttributesImpl
CHHapticParameterAttributes
CHDefaultHapticDeviceCapability
CHHapticDeviceCapability
CHHapticParameterCurve
CHHapticParameterCurveControlPoint
HapticServerConfig
AdvancedPatternPlayer
CHHapticAdvancedPatternPlayerExtended
CHHapticAdvancedPatternPlayer
EventToDictionaryConverter
PatternPlayerBase
PatternPlayerDetails
HapticDictionaryWriter
HapticCommandConverter
EngineUsageCategory
HapticDictionaryReader
CHHapticEventParameter
CHHapticDynamicParameter
CHMetrics
AVHapticSequenceEntry
CHHapticClientInterface
CHHapticServerInterface
AVHapticClient
NSXPCListenerDelegate
CHHapticPattern
CHHapticPlayable
CHEmbeddedAudioResourceInfo
CHHapticEngine
CHHapticEngineInternal
AVHapticPlayerChannel
AVHapticPlayer
AVHapticSequence
AVHapticParameterCurveValue
CHHapticEvent
CHHapticEventInternal
synchronousRemoteObjectProxyWithErrorHandler:
code
numberWithInteger:
setNeedsHighPowerBudgeting:error:
initWithType:relativeTime:shape:controlPoints:
bundleURL
setMode:error:
numberWithFloat:
initWithTime:value:
boolValue
floatValue
dictionaryWithObjectsAndKeys:
initWithStreamDescription:channelLayout:
numberWithDouble:
fixedParams
dictionaryWithObjects:forKeys:count:
remoteObjectProxyWithErrorHandler:
numberWithBool:
valueForKey:
fixedParamCount
dictionaryWithObject:forKey:
addObserver:selector:name:object:
remoteObjectInterface
auxiliarySession
initWithCapacity:
dictionary
sortedArrayUsingComparator:
URLsForDirectory:inDomains:
length
setCategory:withOptions:error:
subarrayWithRange:
setRemoteObjectInterface:
parameterCurve
userInfo
setCategory:error:
stringWithUTF8String:
resume
initWithArray:copyItems:
setInvalidationHandler:
eventCategory
name
stringWithCString:encoding:
countByEnumeratingWithState:objects:count:
fileURLWithPath:isDirectory:
setPrefersNoDucking:error:
paramType
initWithArray:
setInterruptionHandler:
count
absoluteString
setPreferredIOBufferFrameSize:error:
exceptionWithName:reason:userInfo:
checkResourceIsReachableAndReturnError:
isFileURL
setXPCType:forSelector:argumentIndex:ofReply:
setAudioHardwareControlFlags:error:
errorWithDomain:code:userInfo:
setExportedObject:
isEqualToString:
enumerateKeysAndObjectsUsingBlock:
copy
initFileURLWithPath:isDirectory:relativeToURL:
arrayWithObjects:count:
eventWithParameterCurve:
isEqualToDictionary:
relativePath
arrayWithObject:
setExportedInterface:
indexOfObjectPassingTest:
defaultManager
addObjectsFromArray:
eventWithParameter:value:time:
initWithObjectsAndKeys:
unsignedIntegerValue
characterAtIndex:
opaqueSessionID
indexOfObject:
arrayWithArray:
eventWithEventType:time:parameters:count:duration:
unsignedIntValue
ubiquityIdentityToken
enableNotifications:error:
URLForUbiquityContainerIdentifier:
initWithMachServiceName:options:
eventWithEventType:time:duration:
objectForKeyedSubscript:
array
addObject:
setDuckToLevelScalar:error:
containsString:
setParticipatesInNowPlayingAppPolicy:error:
objectForKey:
JSONObjectWithData:options:error:
pathExtension
objectAtIndexedSubscript:
eventType
path
mainBundle
defaultCenter
doubleValue
objectAtIndex:
interfaceWithProtocol:
propertyListWithData:options:format:error:
dataWithContentsOfFile:options:error:
URLByDeletingLastPathComponent
numberWithUnsignedLong:
integerValue
localizedDescription
removeObserver:name:object:
dataWithContentsOfFile:
setObject:forKeyedSubscript:
numberWithUnsignedInteger:
removeObject:
processIdentifier
dataWithBytesNoCopy:length:freeWhenDone:
numberWithUnsignedInt:
setObject:forKey:
init
dealloc
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
startAtTime:error:
stopAtTime:error:
sendParameters:atTime:error:
scheduleParameterCurve:atTime:error:
cancelAndReturnError:
isMuted
setIsMuted:
startAtTime:withImmediateParameters:error:
releaseExternalResources:events:
processImmediateParameters:
initWithPlayable:engine:privileged:error:
doSetMute:
clearExternalResources:
.cxx_destruct
_channel
minValue
maxValue
defaultValue
Tf,R
initWithMinValue:maxValue:defaultValue:
_minValue
_maxValue
_defaultValue
Tf,R,V_minValue
Tf,R,V_maxValue
Tf,R,V_defaultValue
attributesForEventParameter:eventType:error:
attributesForDynamicParameter:error:
supportsHaptics
supportsAudio
TB,R
initPrivate
maximumNumberOfHapticChannels
maximumNumberOfAudioChannels
maximumValueForEventParameter:
minimumValueForEventParameter:
defaultValueForEventParameter:eventType:
maximumValueForDynamicParameter:
minimumValueForDynamicParameter:
defaultValueForDynamicParameter:
_supportsHaptics
_supportsAudio
initWithParameterID:controlPoints:relativeTime:
controlPoints
parameterID
relativeTime
setRelativeTime:
_param
_time
_controlPoints
T@"NSString",R,V_param
Td,V_time
T@"NSArray",R
initWithRelativeTime:value:
value
setValue:
_value
Tf,V_value
initWithHapticPlayer:withOptions:error:
usingInternalHaptics
supportsAudioPlayback
supportsHapticPlayback
supportsAdvancedPatternPlayers
hapticContinuousTimeLimit
currentLocality
defaultHapticTransientEventSharpness
defaultHapticContinuousEventSharpness
defaultHapticTransientEventIntensity
defaultHapticContinuousEventIntensity
hapticTransientIDs
hapticContinuousSustainedIDs
hapticContinuousNonsustainedIDs
.cxx_construct
_currentLocality
_usingInternalHaptics
_supportsAudioPlayback
_supportsHapticPlayback
_supportsAdvancedPatternPlayers
_hapticContinuousTimeLimit
_defaultHapticTransientEventSharpness
_defaultHapticContinuousEventSharpness
_defaultHapticTransientEventIntensity
_defaultHapticContinuousEventIntensity
_hapticTransientIDs
_hapticContinuousSustainedIDs
_hapticContinuousNonsustainedIDs
TB,R,V_usingInternalHaptics
TB,R,V_supportsAudioPlayback
TB,R,V_supportsHapticPlayback
TB,R,V_supportsAdvancedPatternPlayers
Tf,R,V_hapticContinuousTimeLimit
T@"NSString",R,V_currentLocality
Tf,R,V_defaultHapticTransientEventSharpness
Tf,R,V_defaultHapticContinuousEventSharpness
Tf,R,V_defaultHapticTransientEventIntensity
Tf,R,V_defaultHapticContinuousEventIntensity
T{vector<unsigned long, std::allocator<unsigned long>>=^Q^Q{__compressed_pair<unsigned long *, std::allocator<unsigned long>>=^Q}},R,V_hapticTransientIDs
T{vector<unsigned long, std::allocator<unsigned long>>=^Q^Q{__compressed_pair<unsigned long *, std::allocator<unsigned long>>=^Q}},R,V_hapticContinuousSustainedIDs
T{vector<unsigned long, std::allocator<unsigned long>>=^Q^Q{__compressed_pair<unsigned long *, std::allocator<unsigned long>>=^Q}},R,V_hapticContinuousNonsustainedIDs
pauseAtTime:error:
resumeAtTime:error:
seekToOffset:error:
loopEnabled
setLoopEnabled:
loopEnd
setLoopEnd:
playbackRate
setPlaybackRate:
completionHandler
setCompletionHandler:
T@?,C
activateChannelByIndex:atTime:error:
setVolume:atTime:error:
earlyUnduckAudioAtTime:error:
resetState
setRunning
setPaused
finishInit
initWithPattern:engine:privileged:error:
doStartFromStoppedAtTime:error:
doStartFromPausedAtTime:error:
doResumeAtTime:error:
patternDuration
running
paused
initWithRingtoneData:engine:error:
initWithVibePatternDictionary:engine:error:
seekOffset
setSeekOffset:
_sequence
_loopEnd
_state
_seekOffset
_completionHandler
Td,V_seekOffset
eventTypeToNSString:
paramTypeToNSString:
convertEvents:
Td,R
needsResetForAction:
engine
setEngine:
patternID
_engine
_events
_patternID
_patternDuration
_muteState
_previousAction
T@"CHHapticEngine",W,V_engine
T@"NSString",R,V_patternID
Td,R,V_patternDuration
patternToDictionary:events:parameters:parameterCurves:embeddedResourceInfo:configuration:
eventToDictionary:embeddedResourceInfo:
eventParamsToArray:
paramToDictionary:
paramCurveToDictionary:
paramCurveControlPointsToArray:
_urlIndex
initWithServerConfig:
eventForAudioEventType:time:eventParams:duration:
transientHapticEventTypeFromSharpness:
transientHapticEventTypeForDefaultSharpness
eventForTransientHapticAtTime:params:duration:
eventForLegacyTransientHapticAtTime:params:duration:
continuousHapticEventTypeFromSharpness:sustained:
continuousHapticEventTypeForDefaultSharpness:
eventForContinuousHapticEventType:time:params:duration:
eventForSPIEventType:time:eventParams:duration:
eventForEventEntry:engine:privileged:
eventForDynamicParameterEntry:
eventForParameterCurveEntry:
CHtoAVParameterCurve:
serverConfig
_serverConfig
T@"HapticServerConfig",R,V_serverConfig
setupUnsharedAudioSession:isConstantVolume:needsAudioPowerBudget:error:
setupSystemSoundAudioSession:needsAudioPowerBudget:error:
getUsageCategory:
setupEngineWithCategory:session:needsAudioPowerBudget:error:
updateAudioConfigurations:session:
readAndVerifyVersion:error:
parseConfiguration:error:
scanForEmbeddedResources:
parseEventsAndParameters:withBaseURL:reply:
parseEvent:withBaseURL:
parseEventParams:
parseParam:
parseParamCurve:
parseParamCurveControlPoints:
initWithParameterID:value:
initWithParameterID:value:relativeTime:
initWithEngine:audioSessionID:sessionIsShared:isSPI:
handleServerRecovery
handleEngineStart
handleEngineStop
handleParamCurveEncountered
handleInitForPlayer:events:isAdvanced:patternID:
handleStartForPlayer:time:isAdvanced:patternID:
handleActionForPlayer:action:time:isAdvanced:
handleFinishedForPlayersAtTime:
initWithHandler:
handler
setHandler:
setRunning:
detached
setDetached:
_handler
_running
_detached
T@?,C,V_handler
TB,V_running
TB,V_detached
sequenceFinished:error:
clientCompletedWithError:
clientStoppedForReason:error:
clientDisconnectingForReason:error:
configureWithOptions:reply:
queryCapabilities:reply:
allocateClientResources:
releaseClientResources
getHapticLatency:
setPlayerBehavior:reply:
releaseChannels
requestChannels:reply:
removeChannel:reply:
setChannelEventBehavior:behavior:reply:
loadHapticEvent:reply:
loadHapticSequenceFromData:reply:
loadHapticSequenceFromEvents:reply:
loadVibePattern:reply:
setSequenceEventBehavior:behavior:channelIndex:reply:
createCustomAudioEvent:format:frames:options:reply:
copyCustomAudioEvent:options:reply:
referenceCustomAudioEvent:reply:
releaseCustomAudioEvent:reply:
prepareHapticSequence:reply:
detachSequence:
prewarm:
stopPrewarm
startRunning:
stopRunning
stopRunning:
debugExpectNotifyOnFinishAfter:reply:
listener:shouldAcceptNewConnection:
setState:
state
initWithOptions:error:
queryServerCapabilities:reply:
hapticLatency
allocateResources:
finish:
expectNotifyAfter:
setChannelEventBehavior:channel:
resetChannel:atTime:
doSendEvents:withImmediateParameters:atTime:channel:sorted:outToken:error:
doScheduleParamCurve:atTime:channel:paramCurve:error:
doScheduleParamCurveWithMemoryReserve:atTime:channel:memoryReserve:paramCurve:error:
sendEvents:withImmediateParameters:atTime:channel:outToken:error:
clearEventsFromTime:channel:
setParameter:atTime:value:channel:
scheduleParameterCurve:curve:atTime:channel:error:
loadAndPrepareHapticSequenceFromData:reply:
loadAndPrepareHapticSequenceFromEvents:reply:
loadAndPrepareHapticSequenceFromVibePattern:reply:
setSequenceEventBehavior:behavior:channel:
setSequenceFinishedHandlerForID:finishedHandler:
getSequenceFinishedHandlerForID:
callSequenceFinishedHandlersWithError:
setRunStateForSequenceEntryWithID:running:
detachSequenceEntryforID:
prepareHapticSequence:error:
enableSequenceLooping:enable:error:
setSequenceLoopLength:length:error:
setSequencePlaybackRate:rate:error:
startHapticSequence:atTime:withOffset:
stopHapticSequence:atTime:
pauseHapticSequence:atTime:
resumeHapticSequence:atTime:
seekHapticSequence:toTime:
resetHapticSequence:atTime:
sendUnduckAudioCommand:atTime:
setSequenceChannelParameter:atTime:value:sequenceID:channel:
clearSequenceEvents:atTime:
detachHapticSequence:
releaseResources
doInit
setupConnectionWithOptions:error:
getAsyncDelegateForMethod:errorHandler:
getSyncDelegateForMethod:errorHandler:
disconnect
setChannelKeys:
setPlayerBehavior:error:
clearAssignedChannels
requestAssignedChannels:error:
removeAssignedChannelID:error:
handleServerConnectionInterruption
handleServerConnectionInvalidation
calculateHapticCommandParamCurveMemorySize:
destroySharedMemory
clientID
channelKeys
prewarmed
connected
setConnected:
completionCallback
setCompletionCallback:
connectionCallback
setConnectionCallback:
disconnecting
serverProcessID
setServerProcessID:
asyncStopCallback
setAsyncStopCallback:
_connection
_commandWriter
_uniqueID
_serverTimeout
_completionCallback
_connectionCallback
_mapMutex
_sequenceEntryMap
_completionQueue
_disconnecting
_prewarmed
_connected
_serverProcessID
_clientID
_channelKeys
_asyncStopCallback
TB,V_connected
TQ,R,V_clientID
T@"NSArray",R,V_channelKeys
TB,R,V_prewarmed
Ti,R
Ti,V_serverProcessID
T@?,C,V_asyncStopCallback
T@?,C,V_completionCallback
T@?,C,V_connectionCallback
TB,R,V_disconnecting
eventListFromEvents:parameters:parameterCurves:engine:privileged:
patternForKey:error:
resolveExternalResources:error:
events
parameters
parameterCurves
duration
locality
priority
hapticPowerUsage
audioPowerUsage
usageCategory
T@"NSString",R
version
initWithEvents:parameters:error:
initWithEvents:parameterCurves:error:
initWithDictionary:error:
doInitWithDictionary:error:
initWithContentsOfURL:error:
exportDictionaryAndReturnError:
exportDictionaryWithConfigurationAndReturnError:
eventListFromDictionary:error:
configurationDictionary
_ahapBaseURL
_version
_configurationDictionary
_embeddedResourceInfo
_parameters
_parameterCurves
T@"NSDictionary",R,N,V_configurationDictionary
Td,R,N
initWithURL:options:
options
_url
_options
T@"NSURL",R,V_url
T@"NSDictionary",R,V_options
handleMediaServerDeath:
handleMediaServerRecovery:
initialize
lazyInitResourceMap
clearResourceMap
capabilitiesForHardware
supports1stPartyHaptics
supportsHapticServer
resourceIsRegistered:
isBehaviorSet:
toggleBehavior:set:
currentTime
playsHapticsOnly
setPlaysHapticsOnly:
playsAudioOnly
setPlaysAudioOnly:
muteHapticsWhileRecordingAudio
setMuteHapticsWhileRecordingAudio:
isMutedForAudio
setIsMutedForAudio:
isMutedForHaptics
setIsMutedForHaptics:
isAutoShutdownEnabled
setAutoShutdownEnabled:
followAudioRoute
setFollowAudioRoute:
highPriority
setHighPriority:
availableLocalities
autoShutdownTimeout
setAutoShutdownTimeout:
needsAudioPowerBudget
connectAudioSession:
disconnectAudioSession:
getSessionIDFromAVAudioSession:
getReporterIDFromAVAudioSession:
createHapticPlayerWithOptions:
handleConnectionError
finishInit:
startIdleTimerWithHandler:
beginIdleTimer
cancelIdleTimer
handleFinish:
updateEngineBehavior
updateEngineBehaviorWithError:
stopAndWait
createOptionsFromAudioSessionID:shared:
storeOptions:
doInit:sessionIsShared:options:error:
initAndReturnError:
initWithAudioSession:error:
reconfigureAudioSession
doInitWithOptions:error:
prewarmWithCompletionHandler:
doStartWithCompletionHandler:
startWithCompletionHandler:
doStartEngineAndWait:
startAndReturnError:
doStopEngineAndWait:
doStopWithCompletionHandler:
stopWithCompletionHandler:
notifyWhenPlayersFinished:
initWithAudioSessionID:error:
initWithAudioSession:sessionIsShared:options:error:
initWithAudioSession:sessionIsShared:error:
createPlayerWithPattern:error:
createAdvancedPlayerWithPattern:error:
createAdvancedPlayerWithRingtoneData:error:
createAdvancedPlayerWithVibePatternDictionary:error:
createAdvancedPlayerWithRingtonePattern:error:
createPrivilegedPlayerWithPlayable:error:
getDurationForResource:
isResourceLoopEnabled:
getMetricsForPlayer:
setMetricsTestModeEnabled
doFindPublicAudioResourceID:
addPublicAudioResourceID:withURL:options:
hasPublicAudioResourceID:
idForPublicAudioResourceURL:withOptions:
removePublicAudioResourceID:
registerAudioResource:options:error:
unregisterAudioResource:error:
doUnregisterAllPublicAudioResources
playPatternFromURL:error:
playPatternFromData:error:
doPlayPattern:error:
stoppedHandler
setStoppedHandler:
resetHandler
setResetHandler:
avAudioSession
audioSessionID
sessionIsShared
clientFinishedHandler
setClientFinishedHandler:
timer
setTimer:
currentPlayerBehavior
setCurrentPlayerBehavior:
_dispatchQueue
_avAudioSession
_audioSessionID
_sessionIsShared
_publicAudioResources
_player
_timer
_stoppedHandler
_resetHandler
_autoShutdownEnabled
_clientFinishedHandler
_currentPlayerBehavior
_priority
_hapticPowerUsage
_audioPowerUsage
_usageCategory
_runTimeout
_metrics
T@"AVAudioSession",R,V_avAudioSession
TI,R,V_audioSessionID
TB,R,V_sessionIsShared
T@?,C,V_clientFinishedHandler
T@"NSObject<OS_dispatch_source>",&,V_timer
TQ,V_currentPlayerBehavior
TB,N
T@"NSString",R,V_priority
T@"NSString",R,V_hapticPowerUsage
T@"NSString",R,V_audioPowerUsage
T@"NSString",R,V_usageCategory
T@?,C,V_stoppedHandler
T@?,C,V_resetHandler
autoShutdownEnabled
TB,N,GisAutoShutdownEnabled
player
metrics
activateAudioSessionOnStart
setActivateAudioSessionOnStart:
dispatchOnLocal:
dispatchSyncOnLocal:
checkEngineStateOnStart:
checkEngineRunning:
notifyPlayerStarted:atTime:
notifyPlayerStopped:atTime:
getAvailableChannel:
releaseChannel:
doReferenceAudioResourceByID:
dispatchOnGlobal:
doRegisterAudioResource:options:fromPattern:player:error:
doUnregisterAudioResource:fromPattern:player:error:
T@"AVHapticPlayer",R
T@"CHMetrics",R
initWithChannelID:client:
invalidate
eventBehavior
setEventBehavior:
sendEvents:atTime:error:
sendEvents:withImmediateParameters:atTime:error:
clearEvents:error:
setParameter:value:atTime:error:
scheduleParameterCurve:curve:atTime:error:
resetAtTime:error:
chanID
setChanID:
client
setClient:
_chanID
_behavior
_client
TQ,V_chanID
T@"AVHapticClient",W,V_client
isSupported
initWithSessionID:error:
initWithSessionID:sessionIsShared:error:
setBehavior:error:
setBehavior:
getBehavior
setNumberOfChannels:error:
addChannel:
removeChannel:error:
channels
currentMediaTime
setConnectionErrorHandler:
connectionErrorHandler
invalidateChannels
allocateRenderResourcesWithCompletionHandler:
deallocateRenderResources
startRunningWithCompletionHandler:
stopRunningWithCompletionHandler:
finishWithCompletionHandler:
playHapticSequence:atTime:offset:
setSequenceChannelParam:atTime:channel:param:value:error:
stopRunningHandler
setStopRunningHandler:
resourcesAllocated
behavior
_resourcesAllocated
_channelArray
_connectionErrorHandler
_stopRunningHandler
T@"AVHapticClient",R,V_client
TB,R,V_resourcesAllocated
T@?,C,V_stopRunningHandler
TQ,N,V_behavior
T@"NSArray",R,N
initWithData:player:error:
initWithEvents:player:error:
initWithDictionary:player:error:
setLoopingEnabled:error:
getChannelCount
loopingEnabled
setLoopingEnabled:
setLoopLength:error:
prepareToPlayAndReturnError:
playAtTime:offset:error:
seekToTime:error:
setParameter:value:channel:atTime:error:
setPlayer:
seqID
setSeqID:
setDuration:
lastStartTime
setLastStartTime:
activeChannel
setActiveChannel:
channelCount
_seqID
_lastStartTime
_eventBehavior
_loopIsEnabled
_loopLength
_playbackRate
_duration
_channelCount
_activeChannel
T@"AVHapticPlayer",W,V_player
TQ,V_seqID
Td,V_duration
Td,V_lastStartTime
TQ,V_activeChannel
TQ,R,V_channelCount
time
setTime:
parameterValuesFromLegacyEventType:sharpness:fullness:error:
initWithEventType:parameters:relativeTime:
initWithEventType:parameters:relativeTime:duration:
initWithAudioResourceID:parameters:relativeTime:
initWithAudioResourceID:parameters:relativeTime:duration:
getType
fullDuration
eventParameters
type
_type
_audioResID
_eventParams
T@"NSString",R,V_type
T@"NSArray",R,V_eventParams
initWithAudioResourceIndex:parameters:time:duration:
audioResID
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8d16^@24
B40@0:8@16d24^@32
B24@0:8^@16
v20@0:8B16
B40@0:8@"NSArray"16d24^@32
B40@0:8@"CHHapticParameterCurve"16d24^@32
B40@0:8d16@24^@32
B40@0:8d16@"NSDictionary"24^@32
v32@0:8@16@24
@24@0:8@16
@44@0:8@16@24B32^@36
v16@0:8
v24@0:8@16
@"AVHapticPlayerChannel"
f16@0:8
@28@0:8f16f20f24
@40@0:8@16@24^@32
@32@0:8@16^@24
@"<CHHapticParameterAttributes>"40@0:8@"NSString"16@"NSString"24^@32
@"<CHHapticParameterAttributes>"32@0:8@"NSString"16^@24
f24@0:8@16
f32@0:8@16@24
@40@0:8@16@24d32
d16@0:8
v24@0:8d16
@"NSString"
@"NSArray"
@28@0:8d16f24
v20@0:8f16
{vector<unsigned long, std::allocator<unsigned long>>=^Q^Q{__compressed_pair<unsigned long *, std::allocator<unsigned long>>=^Q}}16@0:8
{vector<unsigned long, std::allocator<unsigned long>>="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::allocator<unsigned long>>="__value_"^Q}}
@?16@0:8
v24@0:8@?16
@?<v@?@"NSError">16@0:8
v24@0:8@?<v@?@"NSError">16
B40@0:8Q16d24^@32
B36@0:8f16d20^@28
@"AVHapticSequence"
@24@0:8Q16
B20@0:8C16
@"CHHapticEngine"
@64@0:8@16@24@32@40@48@56
@32@0:8@16@24
@48@0:8Q16d24@32d40
Q20@0:8f16
@40@0:8d16@24d32
Q24@0:8f16B20
Q20@0:8B16
@44@0:8i16d20@28d36
@36@0:8@16@24B32
@"HapticServerConfig"
B40@0:8@16B24B28^@32
B36@0:8@16B24^@28
B44@0:8@16@24B32^@36
B40@0:8@16@24@?32
@28@0:8@16f24
@36@0:8@16f24d28
@36@0:8@16I24B28B32
v44@0:8@16@24B32@36
v44@0:8@16d24B32@36
v44@0:8@16q24d32B40
@24@0:8@?16
v32@0:8Q16@24
v32@0:8Q16@"NSError"24
v24@0:8@"NSError"16
v32@0:8@16@?24
v32@0:8Q16@?24
v40@0:8Q16Q24@?32
v48@0:8Q16Q24Q32@?40
v56@0:8@16@24Q32@40@?48
v40@0:8Q16@24@?32
v24@0:8Q16
v32@0:8d16@?24
v32@0:8@"NSDictionary"16@?<v@?Q>24
v32@0:8@"NSDictionary"16@?<v@?@"NSDictionary"@"NSError">24
v24@0:8@?<v@?@"NSObject<OS_xpc_object>"I@"NSError">16
v24@0:8@?<v@?d@"NSError">16
v32@0:8Q16@?<v@?@"NSError">24
v32@0:8Q16@?<v@?@"NSArray"@"NSError">24
v40@0:8Q16Q24@?<v@?@"NSError">32
v32@0:8@"NSDictionary"16@?<v@?Q@"NSError">24
v32@0:8@"NSData"16@?<v@?QdQ@"NSError">24
v32@0:8@"NSArray"16@?<v@?QdQ@"NSError">24
v48@0:8Q16Q24Q32@?<v@?@"NSError">40
v56@0:8@"NSData"16@"AVAudioFormat"24Q32@"NSDictionary"40@?<v@?Q@"NSError">48
v40@0:8Q16@"NSDictionary"24@?<v@?Q@"NSError">32
v32@0:8d16@?<v@?>24
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v20@0:8i16
i16@0:8
B32@0:8@16@?24
B56@0:8@16@24Q32@40@?48
B40@0:8Q16@24@?32
B32@0:8Q16@?24
B24@0:8@?16
B32@0:8Q16Q24
B32@0:8Q16d24
B68@0:8@16@24d32Q40B48^Q52^@60
B56@0:8Q16d24Q32@40^@48
B64@0:8Q16d24Q32^{HapticSharedMemoryAddressReserve=^vI^vIi}40@48^@56
B64@0:8@16@24d32Q40^Q48^@56
B32@0:8d16Q24
B44@0:8Q16d24f32Q36
B56@0:8Q16@24d32Q40^@48
B40@0:8Q16Q24Q32
@?24@0:8Q16
v28@0:8Q16B24
B32@0:8Q16^@24
B36@0:8Q16B24^@28
B36@0:8Q16f24^@28
B40@0:8Q16d24d32
B52@0:8Q16d24f32Q36Q44
B32@0:8@16^@24
@32@0:8:16@?24
I20@0:8I16
@"NSXPCConnection"
{mutex="__m_"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}}
{map<unsigned long, AVHapticSequenceEntry *, std::less<unsigned long>, std::allocator<std::pair<const unsigned long, AVHapticSequenceEntry *>>>="__tree_"{__tree<std::__value_type<unsigned long, AVHapticSequenceEntry *>, std::__map_value_compare<unsigned long, std::__value_type<unsigned long, AVHapticSequenceEntry *>, std::less<unsigned long>, true>, std::allocator<std::__value_type<unsigned long, AVHapticSequenceEntry *>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned long, AVHapticSequenceEntry *>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<unsigned long, std::__value_type<unsigned long, AVHapticSequenceEntry *>, std::less<unsigned long>, true>>="__value_"Q}}}
@"NSObject<OS_dispatch_queue>"
@52@0:8@16@24@32@40B48
@"NSArray"32@0:8@"CHHapticEngine"16^@24
@"NSArray"16@0:8
@24@0:8^@16
@"NSURL"
@"NSNumber"
@"NSDictionary"
@"NSMutableArray"
B24@0:8Q16
I24@0:8@16
q24@0:8@16
v24@0:8^@16
@24@0:8I16B20
B40@0:8I16B20@24^@32
@28@0:8I16^@20
@44@0:8@16B24@28^@36
@36@0:8@16B24^@28
d24@0:8Q16
{__map_iterator<std::__tree_iterator<std::__value_type<unsigned long, std::pair<NSURL *, NSDictionary *>>, std::__tree_node<std::__value_type<unsigned long, std::pair<NSURL *, NSDictionary *>>, void *> *, long>>={__tree_iterator<std::__value_type<unsigned long, std::pair<NSURL *, NSDictionary *>>, std::__tree_node<std::__value_type<unsigned long, std::pair<NSURL *, NSDictionary *>>, void *> *, long>=^v}}24@0:8Q16
v40@0:8Q16@24@32
Q32@0:8@16@24
Q40@0:8@16@24^@32
I16@0:8
@"AVAudioSession"
{map<unsigned long, std::pair<NSURL *, NSDictionary *>, std::less<unsigned long>, std::allocator<std::pair<const unsigned long, std::pair<NSURL *, NSDictionary *>>>>="__tree_"{__tree<std::__value_type<unsigned long, std::pair<NSURL *, NSDictionary *>>, std::__map_value_compare<unsigned long, std::__value_type<unsigned long, std::pair<NSURL *, NSDictionary *>>, std::less<unsigned long>, true>, std::allocator<std::__value_type<unsigned long, std::pair<NSURL *, NSDictionary *>>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned long, std::pair<NSURL *, NSDictionary *>>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<unsigned long, std::__value_type<unsigned long, std::pair<NSURL *, NSDictionary *>>, std::less<unsigned long>, true>>="__value_"Q}}}
@"AVHapticPlayer"
@"NSObject<OS_dispatch_source>"
@"CHMetrics"
B32@0:8@16d24
v32@0:8@16d24
Q52@0:8@16@24B32@36^@44
B44@0:8Q16B24@28^@36
B48@0:8@16@24d32^@40
B44@0:8Q16f24d28^@36
B48@0:8Q16@24d32^@40
@"AVHapticClient"
@32@0:8I16B20^@24
B60@0:8Q16d24Q32Q40f48^@52
B28@0:8B16^@20
B28@0:8f16^@20
B40@0:8d16d24^@32
B52@0:8Q16f24Q28d36^@44
B48@0:8Q16^f24^f32^@40
@48@0:8@16@24d32d40
@40@0:8Q16@24d32
@48@0:8Q16@24d32d40
333333
