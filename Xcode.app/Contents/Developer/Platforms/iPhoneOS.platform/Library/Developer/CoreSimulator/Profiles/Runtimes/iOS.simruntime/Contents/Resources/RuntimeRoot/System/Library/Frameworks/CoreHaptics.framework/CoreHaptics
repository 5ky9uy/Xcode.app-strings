@(#)PROGRAM:CoreHaptics  PROJECT:CoreHaptics-1
?11CAException
7CAMutex
0E12CAXException
NSt3__110__function6__funcIZN18CASmartPreferences10AddHandlerIiEEvPK10__CFStringS6_PFT_PKvRbENS_8functionIFvS7_EEEEUlS9_E_NS_9allocatorISG_EEFbS9_EEE
NSt3__110__function6__baseIFbPKvEEE
NSt3__117bad_function_callE
ZN18CASmartPreferences10AddHandlerIiEEvPK10__CFStringS3_PFT_PKvRbENSt3__18functionIFvS4_EEEEUlS6_E_
NSt3__110__function6__funcIZN5CALog5Scope4initEyPKcPK10__CFStringS8_jE3$_1NS_9allocatorIS9_EEFviEEE
NSt3__110__function6__baseIFviEEE
ZN5CALog5Scope4initEyPKcPK10__CFStringS5_jE3$_1
8&p?
Z#^?
8&p?
8&p?
8&p?
8&p?
8&p?
8&p?
8&p?
8&p?
8&p?
NSt3__120__shared_ptr_emplaceI13AudioResourceNS_9allocatorIS1_EEEE
com.apple.CoreHaptics
/Library/Caches/com.apple.xbs/Sources/CoreHaptics_Sim/CoreHaptics-118/Source/CHDeviceCapability.mm
-[CHDefaultHapticDeviceCapability attributesForEventParameter:eventType:error:]
-[CHDefaultHapticDeviceCapability attributesForDynamicParameter:error:]
/Library/Caches/com.apple.xbs/Sources/CoreHaptics_Sim/CoreHaptics-118/CoreAudioUtility/Source/PublicUtility/CAMutex.cpp
CAMutex
Lock
Unlock
CAException
SupportsAudioPlayback
SupportsAdvancedPatternPlayers
UsingInternalHaptics
HapticContinuousTimeLimit
/Library/Caches/com.apple.xbs/Sources/CoreHaptics_Sim/CoreHaptics-118/Source/HapticServerConfig.mm
-[HapticServerConfig initWithHapticPlayer:error:]_block_invoke
v24@?0@"NSDictionary"8@"NSError"16
OSStatus
EventType
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
/Library/Caches/com.apple.xbs/Sources/CoreHaptics_Sim/CoreHaptics-118/Source/AudioResource.mm
open
verifyAudioFile
readAndAllocateRawBuffer
incrementAllocatedBytes
decrementAllocatedBytes
/Library/Caches/com.apple.xbs/Sources/CoreHaptics_Sim/CoreHaptics-118/CoreAudioUtility/Source/Utility/CALog.cpp
RegisterScope
error
warning
note
notice
info
details
minutiae
spew
AudioSineTransient
AudioSine
HapticSineTransient
HapticSine
HapticSineLow
HapticSineLowMid
HapticSineMid
HapticSineMidHigh
HapticSineHigh
HapticMicroTap2
HapticMicroTap3
HapticMicroTap4
HapticMicroTap5
HapticMicroTap6
HapticMicroTap7
HapticMicroTap8
HapticMicroTap9
HapticMiniTap2
HapticMiniTap3
HapticMiniTap4
HapticMiniTap5
HapticMiniTap6
HapticMiniTap7
HapticMiniTap8
HapticMiniTap9
HapticFullTap2
HapticFullTap3
HapticFullTap4
HapticFullTap5
HapticFullTap6
HapticFullTap7
HapticFullTap8
HapticFullTap9
AudioVolume
AudioTransposition
AudioAttackTime
AudioDecayTime
AudioReleaseTime
AudioLPFilterCutoff
HapticVolume
HapticTransposition
HapticAttackTime
HapticDecayTime
HapticReleaseTime
Type
Value
Time
Param
/Library/Caches/com.apple.xbs/Sources/CoreHaptics_Sim/CoreHaptics-118/Source/EventToDictionaryConverter.mm
+[EventToDictionaryConverter convertEvents:]
Event
Pattern
/Library/Caches/com.apple.xbs/Sources/CoreHaptics_Sim/CoreHaptics-118/Source/HapticDictionaryWriter.mm
-[HapticDictionaryWriter eventToDictionary:embeddedURLs:]
CoreHapticsOperationNotPermittedException
Cannot export AudioCustom events
/Library/Caches/com.apple.xbs/Sources/CoreHaptics_Sim/CoreHaptics-118/Source/HapticCommandConverter.mm
-[HapticCommandConverter eventForAudioEventType:time:eventParams:duration:]
CoreHapticInvalidParamException
Unknown event param type
-[HapticCommandConverter eventForTransientHapticEventType:time:params:duration:]
-[HapticCommandConverter eventForLegacyTransientHapticEventType:time:params:duration:]
CoreHapticsBadEventEntryException
Cannot mix privileged and unprivileged Sharpness parameters
Cannot mix Fullness with unprivileged Sharpness parameter
Unknown event parameter type
-[HapticCommandConverter nonSustainedEventTypeFromSharpness:]
-[HapticCommandConverter sustainedEventTypeFromSharpness:]
-[HapticCommandConverter eventForContinuousHapticEventType:time:params:duration:]
-[HapticCommandConverter eventForSPIEventType:time:eventParams:duration:]
Unsupported event param type
-[HapticCommandConverter eventForEventEntry:engine:privileged:]
CoreHapticInvalidEventTimeException
Illegal time value
CoreHapticInvalidEventDurationException
Illegal event duration
B32@?0@"CHHapticEventParameter"8Q16^B24
Illegal or missing event duration
CoreHapticInvalidAudioResourceException
Invalid or missing audio resource
CoreHapticInvalidEventTypeException
Unknown privileged event type
Unknown event type
-[HapticCommandConverter eventForDynamicParameterEntry:]
Unknown dynamic parameter
-[HapticCommandConverter eventForParameterCurveEntry:]
-[HapticCommandConverter CHtoAVParameterCurve:]
Invalid dynamic parameter for curve
LimitEventParameterValue
LimitDynamicParameterValue
/Library/Caches/com.apple.xbs/Sources/CoreHaptics_Sim/CoreHaptics-118/Source/HapticDictionaryReader.mm
-[HapticDictionaryReader verifyVersion:]
v32@?0@"NSString"8@16^B24
-[HapticDictionaryReader parseEventsAndParameters:reply:]
EventTime
v32@?0@8@16^B24
-[HapticDictionaryReader parseEvent:]
CoreHapticsMissingEventTypeException
Missing event type
CoreHapticsInvalidEventTimeException
Illegal or missing event time
CoreHapticsInvalidEventDurationException
Missing or invalid audio resource path
Invalid audio resource path
CoreHapticsInvalidAudioResourceException
Invalid audio resource
-[HapticDictionaryReader parseEventParams:]
CoreHapticsBadParameterEntryException
Event parameter has invalid or missing parameter ID
Event parameter has invalid or missing parameter value
ParameterTime
-[HapticDictionaryReader parseParam:]
time
type
Parameter has invalid or missing time or type key
-[HapticDictionaryReader parseParamCurve:]
ParameterCurve has invalid or missing time or type key
-[HapticDictionaryReader parseParamCurveControlPoints:]
v8@?0
hapi
com.apple.corehaptics
hapticapi_verbose
hpwr
hapticpower_verbose
hmet
hapticmetrics_verbose
HapticTransient
HapticContinuous
AudioCustom
AudioContinuous
WheelsOfTime
AudioClick
HapticIntensity
HapticSharpness
AttackTime
DecayTime
ReleaseTime
Sustained
AudioPitch
AudioPan
AudioBrightness
HapticIntensityControl
HapticSharpnessControl
HapticAttackTimeControl
HapticDecayTimeControl
HapticReleaseTimeControl
AudioVolumeControl
AudioPanControl
AudioBrightnessControl
AudioPitchControl
AudioAttackTimeControl
AudioDecayTimeControl
AudioReleaseTimeControl
HapticSharpnessSelect
HapticFullnessSelect
AudioResourceIndex
v40@?0@"NSMutableArray"8@"NSMutableArray"16@"NSMutableArray"24@"NSError"32
/Library/Caches/com.apple.xbs/Sources/CoreHaptics_Sim/CoreHaptics-118/Source/CHHapticEngine.mm
FullURLPathFromURL
-[CHHapticPattern resolveExternalResources:error:]
-[PatternPlayer initWithPlayable:engine:privileged:error:]
-[PatternPlayer dealloc]
-[PatternPlayer doSetMute:]
-[PatternPlayer clearExternalResources:]
-[PatternPlayer startAtTime:error:]
time >= 0.0
-[PatternPlayer stopAtTime:error:]
-[PatternPlayer sendParameters:atTime:error:]
-[PatternPlayer cancelAndReturnError:]
-[PatternPlayer scheduleParameterCurve:atTime:error:]
-[AdvancedPatternPlayer finishInit]
-[AdvancedPatternPlayer finishInit]_block_invoke
v16@?0@"NSError"8
-[AdvancedPatternPlayer initWithPattern:engine:privileged:error:]
-[AdvancedPatternPlayer dealloc]
-[AdvancedPatternPlayer doSetMute:]
-[AdvancedPatternPlayer clearExternalResources:]
-[AdvancedPatternPlayer doStartFromStoppedAtTime:error:]
-[AdvancedPatternPlayer doStartFromPausedAtTime:error:]
-[AdvancedPatternPlayer doResumeAtTime:error:]
-[AdvancedPatternPlayer startAtTime:error:]
_sequence != nil
-[AdvancedPatternPlayer stopAtTime:error:]
-[AdvancedPatternPlayer sendParameters:atTime:error:]
-[AdvancedPatternPlayer scheduleParameterCurve:atTime:error:]
-[AdvancedPatternPlayer pauseAtTime:error:]
-[AdvancedPatternPlayer resumeAtTime:error:]
-[AdvancedPatternPlayer seekToOffset:error:]
-[AdvancedPatternPlayer cancelAndReturnError:]
-[AdvancedPatternPlayer setCompletionHandler:]
-[AdvancedPatternPlayer setCompletionHandler:]_block_invoke_2
-[AdvancedPatternPlayer setCompletionHandler:]_block_invoke
-[AdvancedPatternPlayer activateChannelByIndex:atTime:error:]
-[AdvancedPatternPlayer setVolume:atTime:error:]
+[CHHapticEngine lazyInitResourceMap]
-[CHHapticEngine setAutoShutdownEnabled:]
-[CHHapticEngine setAutoShutdownEnabled:]_block_invoke
-[CHHapticEngine dispatchOnLocal:]
-[CHHapticEngine dispatchOnLocal:]_block_invoke
-[CHHapticEngine dispatchSyncOnLocal:]
-[CHHapticEngine dispatchSyncOnLocal:]_block_invoke
-[CHHapticEngine setupUnsharedAudioSessionAndReturnError:]
-[CHHapticEngine handleMediaServerRecovery:]_block_invoke
CHHapticErrorCodeServerInitFailedException
Failed to set up audio session
-[CHHapticEngine createHapticPlayerWithOptions:]
Failed to connect to server
-[CHHapticEngine finishInit:]_block_invoke
-[CHHapticEngine finishInit:]
v16@?0q8
-[CHHapticEngine getAvailableChannel:]
-[CHHapticEngine releaseChannel:]
-[CHHapticEngine startIdleTimerWithHandler:]
-[CHHapticEngine startIdleTimerWithHandler:]_block_invoke
-[CHHapticEngine beginIdleTimer]_block_invoke
-[CHHapticEngine beginIdleTimer]_block_invoke_2
-[CHHapticEngine cancelIdleTimer]
-[CHHapticEngine handleFinish:]
-[CHHapticEngine handleFinish:]_block_invoke
-[CHHapticEngine updatePlayerDuration:atTime:]
-[CHHapticEngine notifyPlayerStarted:atTime:]_block_invoke
-[CHHapticEngine notifyPlayerStopped:atTime:]
-[CHHapticEngine updateEngineBehavior]
-[CHHapticEngine stopAndWait]
-[CHHapticEngine stopAndWait]_block_invoke
-[CHHapticEngine dealloc]
AudioSessionID
AudioSessionIsShared
-[CHHapticEngine doInit:sessionIsShared:error:]
CHHapticEngineDispatchQueue
-[CHHapticEngine initAndReturnError:]
-[CHHapticEngine initWithAudioSession:error:]
-[CHHapticEngine doInitWithOptions:error:]
-[CHHapticEngine prewarmWithCompletionHandler:]
-[CHHapticEngine prewarmWithCompletionHandler:]_block_invoke
-[CHHapticEngine stopPrewarm]
-[CHHapticEngine doStartWithCompletionHandler:]
-[CHHapticEngine doStartWithCompletionHandler:]_block_invoke
-[CHHapticEngine startWithCompletionHandler:]
_player != nil
-[CHHapticEngine startWithCompletionHandler:]_block_invoke
-[CHHapticEngine doStartEngineAndWait:]_block_invoke
-[CHHapticEngine doStartEngineAndWait:]
-[CHHapticEngine startAndReturnError:]
-[CHHapticEngine checkEngineRunning:]
self.running
-[CHHapticEngine checkEngineStateOnStart:]
-[CHHapticEngine doStopEngineAndWait:]
-[CHHapticEngine doStopEngineAndWait:]_block_invoke
-[CHHapticEngine doStopWithCompletionHandler:]
-[CHHapticEngine doStopWithCompletionHandler:]_block_invoke
-[CHHapticEngine stopWithCompletionHandler:]
-[CHHapticEngine stopWithCompletionHandler:]_block_invoke
-[CHHapticEngine notifyWhenPlayersFinished:]
-[CHHapticEngine notifyWhenPlayersFinished:]_block_invoke_2
-[CHHapticEngine notifyWhenPlayersFinished:]_block_invoke
-[CHHapticEngine initWithAudioSessionID:error:]
-[CHHapticEngine initWithAudioSession:sessionIsShared:error:]
shared
unshared
-[CHHapticEngine createPlayerWithEvent:error:]
-[CHHapticEngine createPlayerWithPattern:error:]
-[CHHapticEngine createAdvancedPlayerWithPattern:error:]
-[CHHapticEngine createAdvancedPlayerWithRingtoneData:error:]
-[CHHapticEngine createAdvancedPlayerWithRingtonePattern:error:]
-[CHHapticEngine createPrivilegedPlayerWithPlayable:error:]
-[CHHapticEngine getDurationForResource:]
-[CHHapticEngine addPublicAudioResourceID:withURL:]
-[CHHapticEngine hasPublicAudioResourceID:]
found
did not find
-[CHHapticEngine removePublicAudioResourceID:]
+[CHHapticEngine doRegisterAudioResource:options:fromPattern:player:error:]
Public
+[CHHapticEngine doRegisterAudioResource:options:fromPattern:player:error:]_block_invoke
v24@?0Q8@"NSError"16
resource->verifyAudioFile(false)
status
-[CHHapticEngine registerAudioResource:options:error:]
self.player != nil
-[CHHapticEngine doReferenceAudioResourceByID:]
+[CHHapticEngine doUnregisterAudioResource:fromPattern:player:error:]
pattern-loaded
public-loaded
-[CHHapticEngine unregisterAudioResource:error:]
-[CHHapticEngine doUnregisterAllPublicAudioResources]
-[CHHapticEngine playPatternFromURL:error:]
json
ahap
plist
-[CHHapticEngine playPatternFromData:error:]
-[CHHapticEngine doPlayPatternFromDictionary:error:]
-[CHHapticEngine doPlayPatternFromDictionary:error:]_block_invoke
Version
EventDuration
EventWaveformPath
EventParameters
Parameter
ParameterID
ParameterValue
ParameterCurve
ParameterCurveControlPoints
/Library/Caches/com.apple.xbs/Sources/CoreHaptics_Sim/CoreHaptics-118/Source/HapticUtils.h
_Haptic_Check
Error 
%s: %s
newStateFromOld
/System/Library/Frameworks/AVFoundation.framework/AVFoundation
AVAudioFormat
AVAudioSession
AVAudioSessionMediaServicesWereResetNotification
AVAudioSessionCategorySystemSoundsAndHaptics
AVAudioSessionModeHapticsConstantVolume
%s:%d:%s: In parameter %@ is not a valid CHHapticEventParameter
%s:%d:%s: In parameter %@ is not a valid CHHapticDynamicParameter
%s:%d:%s:  CAMutex::CAMutex: Could not init the mutex
%s:%d:%s:  CAMutex::Lock: Could not lock the mutex
%s:%d:%s:  CAMutex::Unlock: Could not unlock the mutex
%s:%d:%s:  CAMutex::Unlock: A thread is attempting to unlock a Mutex it doesn't own
%s:%d:%s:  CAMutex::Try: call to pthread_mutex_trylock failed, Error: %d (%s)
%s:%d:%s: ERROR: Caught exception during dictionary parse
%s:%d:%s: ERROR: Failed to open audio resource %@: %u
%s:%d:%s: ERROR: Failed to get property for audio resource %@
%s:%d:%s: ERROR: Failed to set property on audio resource %@
%s:%d:%s: ERROR: Failed to read from audio resource %@: %u
%s:%d:%s: Adding %llu bytes to our existing %llu
%s:%d:%s: Memory limit reached on custom audio resources - unregister others to make space
%s:%d:%s: Removing %llu bytes from our existing %llu
%s:%d:%s: ASSERTION FAILURE [(_sTotalAllocatedBytes >= bytes) != 0 is false]: 
%s:%d:%s: ERROR: subscope bits are set in scope: 0x%lx
%s:%d:%s: ERROR: Unknown event param type: %u
%s:%d:%s: ERROR: Unknown param type: %u
%s:%d:%s: ERROR: Cannot export AudioCustom events
%s:%d:%s: Type %u time: %.2f secs dur: %.2f secs %u event params
%s:%d:%s: Fixed Param '%@': value %f
%s:%d:%s: ERROR: Unknown event param type: %@
%s:%d:%s: Type %u time: %.2f secs dur %.2f secs %u event params
%s:%d:%s: ASSERTION FAILURE [(intensityAttributes) != 0 is false]: 
%s:%d:%s: ASSERTION FAILURE [(sharpnessAttributes) != 0 is false]: 
%s:%d:%s: Fixed Param '%@': value: %f
%s:%d:%s: Normalized value %f -> sharpness index %d
%s:%d:%s: Ignoring for HapticTransient
%s:%d:%s: Event has no HapticSharpness EventParameter. Using default HapticSharpness value %f, sharpnessIndex: %d
%s:%d:%s: Adding event param for internal haptic gain adjustment: %.2f
%s:%d:%s: ERROR: Cannot mix Fullness with unprivileged Sharpness parameter
%s:%d:%s: Normalized value %f -> fullness index %d
%s:%d:%s: ERROR: Cannot mix privileged and unprivileged Sharpness parameters
%s:%d:%s: ERROR: Unknown event parameter type: %@
%s:%d:%s: Handling as a non-privileged event
%s:%d:%s: Sharpness %f -> MSB %u LSB %u
%s:%d:%s: Type %u time: %.2f secs duration: %.2f secs %u client event params
%s:%d:%s: Event has no HapticSharpness EventParameter. Using default event ID %u
%s:%d:%s: Adding event param for continuous haptic intensity: %.2f
%s:%d:%s: ERROR: Unsupported event param type: %@
%s:%d:%s: Event type '%@':
%s:%d:%s: ERROR: Illegal time value: %f
%s:%d:%s: ERROR: Illegal duration value: %f
%s:%d:%s: ERROR: Continuous haptic event has a missing or zero-length duration
%s:%d:%s: Haptic event duration capped at %f seconds
%s:%d:%s: ERROR: Continuous audio event has a missing or zero-length duration
%s:%d:%s: ERROR: Invalid or missing audio resource with ID %u
%s:%d:%s: ERROR: Unknown privileged event type: %@
%s:%d:%s: ERROR: Unknown event type: %@
%s:%d:%s: Dynamic parameter ID '%@':
%s:%d:%s: Creating event for haptic volume %f for time %f seconds
%s:%d:%s: Creating event for haptic transposition %f for time %f seconds
%s:%d:%s: Creating event for haptic attack time %f for time %f seconds
%s:%d:%s: Creating event for haptic decay time %f for time %f seconds
%s:%d:%s: Creating event for haptic release time %f for time %f seconds
%s:%d:%s: Creating event for audio volume %f for time %f seconds
%s:%d:%s: Creating event for audio brightness %f for time %f seconds
%s:%d:%s: Creating event for audio pan %f for time %f seconds
%s:%d:%s: Creating event for audio transposition %f for time %f seconds
%s:%d:%s: Creating event for audio attack time %f for time %f seconds
%s:%d:%s: Creating event for audio decay time %f for time %f seconds
%s:%d:%s: Creating event for audio release time %f for time %f seconds
%s:%d:%s: ERROR: Unrecognized dynamic parameter: %@
%s:%d:%s: Parameter curve ID: '%@', relative time: %f
%s:%d:%s: ERROR: ID %@ is not supported by parameter curves
%s:%d:%s: ERROR: Invalid event parameter ID.
%s:%d:%s: ERROR: Invalid dynamic parameter ID
%s:%d:%s: WARNING: Missing or malformed version key - assuming v1.0
%s:%d:%s: ERROR: Unsupported version number: %.1f
%s:%d:%s: ERROR: Pattern dictionary is missing '%@' key
%s:%d:%s: ERROR: Empty pattern
%s:%d:%s: ERROR: Missing event type
%s:%d:%s: ERROR: Illegal or missing event time
%s:%d:%s: ERROR: Illegal event duration
%s:%d:%s: ERROR: Custom event is missing its audio resource path
%s:%d:%s: ERROR: Custom event's audio resource path cannot be resolved
%s:%d:%s: ERROR: Event parameter has invalid or missing parameter ID
%s:%d:%s: ERROR: Event parameter has invalid or missing parameter value
%s:%d:%s: ERROR: Param is missing a %s
%s:%d:%s: ERROR: Parameter curve control point has invalid or missing time
%s:%d:%s: ERROR: Parameter curve control point has invalid or missing value
%s:%d:%s: Searching for resource in '%@'
%s:%d:%s: Found it at '%@'
%s:%d:%s: WARNING: Skipping Custom Audio event - server does not support audio
 enableTelemetry=YES 
%s:%d:%s: creating player %p
%s:%d:%s: ERROR: pattern contains no playable events
PatternPlayer_initWithPlayable
%s:%d:%s: destroying player %p
%s:%d:%s: Sending %smute params
%s:%d:%s: Clearing any externally-registered audio resources
%s:%d:%s: Starting simple player %p at time %.3f
PatternPlayer_startAtTime
%s:%d:%s: Stopping simple player %p at time %.3f
PatternPlayer_stopAtTime
%s:%d:%s: Sending simple player %p parameters at time %.3f
PatternPlayer_sendParameters
%s:%d:%s: Cancelling events on simple player %p immediately
PatternPlayer_cancelAndReturnError
%s:%d:%s: Sending player %p a parameter curve
PatternPlayer_scheduleParameterCurve
%s:%d:%s: Setting default completion handler on underlying AVHapticSequence
%s:%d:%s: Player %p default completion handler called
%s:%d:%s: Creating advanced player %p
AdvancedPatternPlayer_initWithPattern
%s:%d:%s: Destroying advanced player %p
%s:%d:%s: Starting sequence with offset %.3f
%s:%d:%s: Restarting paused sequence with offset %.3f
%s:%d:%s: ASSERTION FAILURE [(self.paused) != 0 is false]: 
%s:%d:%s: Resuming paused sequence with offset %.3f
%s:%d:%s: Starting player %p at time %.3f
AdvancedPatternPlayer_startAtTime
%s:%d:%s: Stopping player %p at time %.3f
AdvancedPatternPlayer_stopAtTime
%s:%d:%s: Sending player %p parameters at time %.3f
AdvancedPatternPlayer_sendParameters
%s:%d:%s: ERROR: Parameter curves are not yet supported on CHHapticAdvancedPlayers
%s:%d:%s: Pausing player %p at time %.3f
%s:%d:%s: Resuming player %p at time %.3f
%s:%d:%s: Caching player %p offset %.2f for later start/resume
%s:%d:%s: Seeking on player %p to offset %.2f
%s:%d:%s: Cancelling commands for player %p immediately
%s:%d:%s: Wrapping client's completion handler block %p in our block and setting on underlying AVHapticSequence
%s:%d:%s: Player %p client-supplied completion handler called - calling captured block %p on internal queue
%s:%d:%s: Client-supplied completion handler called on destroyed player - calling captured block %p on global queue
AdvancedPatternPlayer_initWithRingtoneData
%s:%d:%s: Creating resource map on first use
%s:%d:%s: auto-shutdown being enabled while running - wait for any existing players
%s:%d:%s: <Top of AV finishWithCompletionHandler block>
%s:%d:%s: finishWithCompletionHandler callback returned error: %@
%s:%d:%s: <Bottom of AV finishWithCompletionHandler block>
%s:%d:%s: auto-shutdown being disabled
%s:%d:%s: <Dispatching block %p async...>
%s:%d:%s: ASSERTION FAILURE [(!in_dispatch_sync) != 0 is false]: 
%s:%d:%s: <Block async dispatch complete>
%s:%d:%s: <Dispatching block %p sync...>
%s:%d:%s: <Block sync dispatch complete>
%s:%d:%s: Setting SS&H category, disabling notifications and NowPlaying for this audio session
%s:%d:%s: Failed to set category on audio session
%s:%d:%s: Setting ConstantVolume mode on audio session
%s:%d:%s: Failed to set mode on audio session
%s:%d:%s: This build does not yet support AVAudioSessionModeHapticsConstantVolume!
%s:%d:%s: Failed to disable audio session notifications
%s:%d:%s: Failed to disable audio session now-playing policy
%s:%d:%s: Attempting to reconnect engine %p to server
%s:%d:%s: Engine already destroyed - noop
%s:%d:%s: Calling engine-reset handler on default queue
%s:%d:%s: Done with reconnect for engine %p
%s:%d:%s: FATAL ERROR: Unable to reconnect to server
HapticEngine_handleMediaServerRecovery
%s:%d:%s: Creating underlying Haptic Player
%s:%d:%s: Attempt #%d...
%s:%d:%s: ERROR: Server failure: %@
%s:%d:%s: ERROR: Server connection broke with error '%@'
%s:%d:%s: Waiting to reconnect
%s:%d:%s: Allocating resources...
%s:%d:%s: ERROR: Resource allocation failure: %@
%s:%d:%s: Releasing lock
%s:%d:%s: Waiting for server...
%s:%d:%s: ERROR: Server timeout
%s:%d:%s: Default behavior is to follow audio route
%s:%d:%s: Setting behavior to not follow audio route
%s:%d:%s: In player's stopRunningHandler block.  Stopped reason: %d
%s:%d:%s: Calling engine-stopped handler with reason %d
%s:%d:%s: Finished initializing
%s:%d:%s: ERROR: Unable to add an additional player channel
%s:%d:%s: ERROR: This channel was not registered
%s:%d:%s: Creating idle timer for %.3f seconds
%s:%d:%s: Calling idle timeout handler on internal queue
%s:%d:%s: Starting idle timer (on async dispatch)
%s:%d:%s: Stopping engine in response to timeout
%s:%d:%s: Calling client's engine-stopped handler on internal queue
%s:%d:%s: Cancelling idle timer
%s:%d:%s: Called on engine %p with error %@
%s:%d:%s: Calling client's finishedHandler on internal queue
%s:%d:%s: Client requested engine stop-on-finish
%s:%d:%s: Client finishedHandler is nil
%s:%d:%s: <Top of doStopWithCompletionHandler block>
%s:%d:%s: Calling engine-stopped handler on internal queue
%s:%d:%s: Engine stop completed
%s:%d:%s: Client-supplied stopped handler called on destroyed player - calling captured block %p on global queue
%s:%d:%s: Requested not to stop-on-finish
%s:%d:%s: Done handling finish
%s:%d:%s: Updating pattern player %p duration to %.2f (adjusted)
%s:%d:%s: player %p notified engine it will be stopping at time %.3f
%s:%d:%s: Setting player's behavior to 0x%x
%s:%d:%s: Synchronously stopping the underlying player %p
%s:%d:%s: Calling stop completion handler on internal queue
%s:%d:%s: Underlying player %p not running
%s:%d:%s: synchronously stopping and destroying engine %p
%s:%d:%s: done destroying engine %p
%s:%d:%s: sessionID: %u, isShared: %u
%s:%d:%s: ERROR: Invalid audio session ID: %u
%s:%d:%s: Creating engine %p with legacy initializer
HapticEngine_initAndReturnError
%s:%d:%s: Creating engine %p with audio session %p
%s:%d:%s: Creating engine %p with internal audio session
HapticEngine_initWithAudioSession
%s:%d:%s: options: '%@'
HapticEngine_initWithOptions
%s:%d:%s: Prewarming the underlying Haptic Player
%s:%d:%s: ERROR: Player prewarm failed: %@
%s:%d:%s: Calling prewarm completion handler
HapticEngine_prewarmWithCompletionHandler
%s:%d:%s: Stopping prewarm on the underlying Haptic Player
HapticEngine_stopPrewarm
%s:%d:%s: Starting underlying Haptic Player
%s:%d:%s: In underlying AVHapticPlayer's completion handler block
%s:%d:%s: ERROR: Player start failed: %@
%s:%d:%s: Calling start completion handler on internal queue
%s:%d:%s: Called on engine %p
%s:%d:%s: Engine already running
%s:%d:%s: Directly calling start completionHandler on internal queue
HapticEngine_startWithCompletionHandler
%s:%d:%s: Waiting for startup...
%s:%d:%s: ERROR: Startup timeout
%s:%d:%s: Startup complete
HapticEngine_startAndReturnError
%s:%d:%s: AutoShutdown on and engine stopped - auto start
%s:%d:%s: Synchronously stopping underlying Haptic Player
%s:%d:%s: In underlying AVHapticPlayer's completion handler block for doStopEngineAndWait
%s:%d:%s: ERROR: Player stop failed: %@
%s:%d:%s: Waiting for player stop...
%s:%d:%s: WARNING: timed out waiting for underlying player to stop
%s:%d:%s: Done waiting for underlying player stop
%s:%d:%s: Stopping underlying Haptic Player
%s:%d:%s: In underlying AVHapticPlayer's completion handler block for doStopWithCompletionHandler
%s:%d:%s: ERROR: Lower-level player stop failed: %@
%s:%d:%s: Engine not running
%s:%d:%s: Directly calling stop completionHandler on internal queue
HapticEngine_stopWithCompletionHandler
%s:%d:%s: Called on engine %p with finishedHandler %p
%s:%d:%s: Creating engine %p with shared audio session ID %u
HapticEngine_initWithAudioSessionID
%s:%d:%s: Creating engine %p with %s audio session %p
%s:%d:%s: Shared audio session cannot be nil
%s:%d:%s: Creating internal unshared audio session
%s:%d:%s: Using passed-in audio session
%s:%d:%s: Setting behavior to not activate audio session (if haptics-only)
%s:%d:%s: Creating player from event
%s:%d:%s: Creating player from pattern
%s:%d:%s: Creating advanced player from pattern
%s:%d:%s: Creating advanced player from ringtone data
%s:%d:%s: Creating advanced player from ringtone pattern
%s:%d:%s: Creating privileged player from Playable
%s:%d:%s: Cannot find resource referenced by ID %u. Returning 0.0
%s:%d:%s: Engine %p adding resID %u
%s:%d:%s: ASSERTION FAILURE [([self doFindPublicAudioResourceID:resourceID] == std::end(_publicAudioResources)) != 0 is false]: 
%s:%d:%s: Engine %p %s resID %u
%s:%d:%s: Engine %p removing resID %u
%s:%d:%s: ASSERTION FAILURE [(result != std::end(_publicAudioResources)) != 0 is false]: 
%s:%d:%s: Registering %s audio resource '%@'
%s:%d:%s: -- Entry list has '%@' with ID %u, and count %u
%s:%d:%s: Resource already registered and request uses no options - referencing and returning existing ID (%u)
%s:%d:%s: ERROR: unable to reference server-side audio resource with ID %u: %@
%s:%d:%s: Resource already registered but request uses options - copy existing ID (%u) as new ID
%s:%d:%s: ERROR: Server failed to copy custom audio event: %@
%s:%d:%s: ASSERTION FAILURE [(_sResourceEntries->emplace(copiedResourceID, ResourceEntry(resource, 1)).second == true) != 0 is false]: 
%s:%d:%s: Returning ID %u for copied resource '%@'
%s:%d:%s: Resource not already registered - creating new entry
%s:%d:%s: ERROR: Server failed to create custom audio event: %@
%s:%d:%s: Adding new ID %u for %s resource '%@'
%s:%d:%s: ASSERTION FAILURE [(_sResourceEntries->emplace(resourceID, ResourceEntry(resource, 1)).second == true) != 0 is false]: 
HapticEngine_registerAudioResource
%s:%d:%s: Adding reference to audio resource ID %u from pattern
%s:%d:%s:    found it - reference count now %u
%s:%d:%s: Resource ID %u not previously registered!
%s:%d:%s: Attempting to remove %s ID %u
%s:%d:%s:    found it and refcount is at zero - erasing and releasing on server
%s:%d:%s: ERROR: unable to release server-side audio resource with ID %u: %@
%s:%d:%s:    found it and decrementing refcount
%s:%d:%s: ERROR: could not find audio resource with ID %u
%s:%d:%s: ERROR: audio resource ID %u not registered on this CHHapticEngine
HapticEngine_unregisterAudioResource
%s:%d:%s: Attempting to remove all remaining public audio resources for this engine
%s:%d:%s: Creating haptic pattern from JSON or AHAP...
%s:%d:%s: Creating haptic pattern from plist...
%s:%d:%s: Incoming URL not a valid file path URL or file type not supported
%s:%d:%s: Incoming fileURL cannot be nil
HapticEngine_playPatternFromURL
%s:%d:%s: Incoming NSData is invalid
HapticEngine_playPatternFromData
%s:%d:%s: Incoming NSData cannot be nil
%s:%d:%s: Creating Pattern Player
%s:%d:%s: Starting CHHapticEngine...
%s:%d:%s: Cannot start haptic engine: error %@
%s:%d:%s: Starting Pattern Player...
%s:%d:%s: %s: %s error %d
%s:%d:%s: Old: %d mute: %d running: %d => New: %d
CHHapticParameterAttributesImpl
CHHapticParameterAttributes
NSObject
CHDefaultHapticDeviceCapability
CHHapticDeviceCapability
HapticServerConfig
CHMetricsPlayerData
CHMetricsKey
PlaybackAction
CHMetricsManager
EventToDictionaryConverter
HapticDictionaryWriter
HapticCommandConverter
HapticDictionaryReader
CHHapticEvent
CHHapticPlayable
CHHapticEventInternal
CHHapticEventParameter
CHHapticDynamicParameter
CHHapticParameterCurve
CHHapticParameterCurveControlPoint
CHHapticPattern
PatternPlayer
CHHapticPatternPlayer
PatternPlayerDetails
AdvancedPatternPlayer
CHHapticAdvancedPatternPlayerExtended
CHHapticAdvancedPatternPlayer
CHHapticEngine
init
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
minValue
maxValue
defaultValue
Tf,R
initWithMinValue:maxValue:defaultValue:
_minValue
_maxValue
_defaultValue
Tf,R,V_minValue
Tf,R,V_maxValue
Tf,R,V_defaultValue
isSupported
dictionaryWithObjects:forKeys:count:
objectForKey:
floatValue
isEqualToString:
minimumValueForEventParameter:
maximumValueForEventParameter:
defaultValueForEventParameter:eventType:
minimumValueForDynamicParameter:
maximumValueForDynamicParameter:
defaultValueForDynamicParameter:
attributesForEventParameter:eventType:error:
attributesForDynamicParameter:error:
supportsHaptics
supportsAudio
TB,R
initPrivate
maximumNumberOfHapticChannels
maximumNumberOfAudioChannels
_supports3rdPartyHaptics
errorWithDomain:code:userInfo:
numberWithBool:
numberWithUnsignedInt:
dictionaryWithObjectsAndKeys:
boolValue
unsignedIntValue
queryServerCapabilities:reply:
initWithHapticPlayer:error:
usingInternalHaptics
supportsAudioPlayback
supportsAdvancedPatternPlayers
hapticContinuousTimeLimit
_usingInternalHaptics
_supportsAudioPlayback
_supportsAdvancedPatternPlayers
_hapticContinuousTimeLimit
TB,R,V_usingInternalHaptics
TB,R,V_supportsAudioPlayback
TB,R,V_supportsAdvancedPatternPlayers
Tf,R,V_hapticContinuousTimeLimit
name
userInfo
integerValue
data
setData:
.cxx_destruct
.cxx_construct
_data
T{Data=@},V_data
eventType
setEventType:
intensity
setIntensity:
T@"NSString",&,N,VeventType
T@"NSString",&,N,Vintensity
action
setAction:
time
setTime:
Tq,N,Vaction
Tf,N,Vtime
dealloc
getLock
createSharedManagerWithEngine:audioSessionID:SPI:sessionIsShared:
destroySharedManagerWithEngine:
sharedManager
currentTime
dispatchOnLocal:
addForEngine:audioSessionID:sessionIsShared:SPI:
destroyForEngine:
handleServerRecovery:audioSessionID:sessionIsShared:
handleEngineStart:
handleEngineStop:
handlePlayerInit:player:events:isAdvanced:
handlePlayerDealloc:player:
handleParamCurveEncountered:
handlePlayerAction:player:action:time:isAdvanced:
handlePlayerFinish:endTime:
setMetricsTestModeEnabled
getMetricsForPlayer:
numberWithUnsignedLong:
countByEnumeratingWithState:objects:count:
eventCategory
paramType
paramTypeToNSString:
value
numberWithFloat:
dictionaryWithObject:forKey:
addObject:
eventTypeToNSString:
fixedParamCount
fixedParams
setObject:forKeyedSubscript:
initWithObjectsAndKeys:
convertEvents:
count
objectForKeyedSubscript:
eventToDictionary:embeddedURLs:
paramToDictionary:
paramCurveToDictionary:
dictionaryWithDictionary:
type
audioResID
objectAtIndexedSubscript:
path
relativeTime
numberWithDouble:
duration
eventParameters
eventParamsToArray:
parameterID
controlPoints
paramCurveControlPointsToArray:
patternToDictionary:events:parameters:parameterCurves:embeddedURLs:
_urlIndex
numberWithInteger:
exceptionWithName:reason:userInfo:
capabilitiesForHardware
eventWithEventType:time:parameters:count:duration:
eventWithEventType:time:duration:
eventForTransientHapticEventType:time:params:duration:
nonSustainedEventTypeFromSharpness:
sustainedEventTypeFromSharpness:
eventTypeFromSharpness:eventType:
serverConfig
eventForLegacyTransientHapticEventType:time:params:duration:
indexOfObjectPassingTest:
eventForContinuousHapticEventType:time:params:duration:
eventForAudioEventType:time:eventParams:duration:
resourceIsRegistered:
getDurationForResource:
setDuration:
eventForSPIEventType:time:eventParams:duration:
eventWithParameter:value:time:
CHtoAVParameterCurve:
eventWithParameterCurve:
initWithCapacity:
objectAtIndex:
initWithTime:value:
initWithType:relativeTime:shape:controlPoints:
initWithServerConfig:
eventForEventEntry:engine:privileged:
eventForDynamicParameterEntry:
eventForParameterCurveEntry:
_serverConfig
fileURLWithPath:isDirectory:
enumerateKeysAndObjectsUsingBlock:
parseEvent:
parseParam:
parseParamCurve:
parseEventParams:
initWithAudioResourceIndex:parameters:time:duration:
initWithEventType:parameters:relativeTime:duration:
initWithParameterID:value:
initWithParameterID:value:relativeTime:
parseParamCurveControlPoints:
initWithParameterID:controlPoints:relativeTime:
doubleValue
initWithRelativeTime:value:
verifyVersion:
scanForEmbeddedURLs:
parseEventsAndParameters:reply:
copy
arrayWithObject:
events
arrayWithArray:
parameterValuesFromLegacyEventType:sharpness:fullness:error:
resolveExternalResources:error:
parameters
parameterCurves
T@"NSArray",R
Td,R
initWithEventType:parameters:relativeTime:
initWithAudioResourceID:parameters:relativeTime:
initWithAudioResourceID:parameters:relativeTime:duration:
getType
fullDuration
setRelativeTime:
_type
_audioResID
_eventParams
_time
_duration
T@"NSString",R,V_type
T@"NSArray",R,V_eventParams
Td,V_time
Td,V_duration
setValue:
_param
_value
T@"NSString",R,V_param
Tf,V_value
_controlPoints
initWithArray:
relativePath
characterAtIndex:
mainBundle
bundleURL
defaultManager
URLsForDirectory:inDomains:
addObjectsFromArray:
ubiquityIdentityToken
URLForUbiquityContainerIdentifier:
initFileURLWithPath:isDirectory:relativeToURL:
checkResourceIsReachableAndReturnError:
player
doRegisterAudioResource:options:fromPattern:player:error:
doReferenceAudioResourceByID:
mutableCopy
arrayWithObjects:count:
addHapticsForWheelsOfTime:
eventListFromEvents:parameters:parameterCurves:engine:privileged:
initWithEvents:parameters:error:
initWithEvents:parameterCurves:error:
initWithDictionary:error:
exportDictionaryAndReturnError:
eventListFromDictionary:error:
_version
_embeddedURLs
_events
_parameters
_parameterCurves
Td,R,N
getAvailableChannel:
clearExternalResources:
releaseChannel:
setParameter:value:atTime:error:
doUnregisterAudioResource:fromPattern:player:error:
checkEngineStateOnStart:
doSetMute:
needsResetForAction:
resetAtTime:error:
sendEvents:atTime:error:
notifyPlayerStarted:atTime:
checkEngineRunning:
clearEvents:error:
notifyPlayerStopped:atTime:
running
startAtTime:error:
stopAtTime:error:
sendParameters:atTime:error:
scheduleParameterCurve:atTime:error:
cancelAndReturnError:
isMuted
setIsMuted:
patternDuration
initWithPlayable:engine:privileged:error:
_engine
_channel
_patternDuration
_muteState
_previousAction
Td,R,V_patternDuration
eventBehavior
muteHapticsWhileRecordingAudio
setEventBehavior:
setSeekOffset:
resetState
setCompletionHandler:
initWithEvents:player:error:
setLoopEnd:
finishInit
setParameter:value:channel:atTime:error:
engine
seekOffset
playAtTime:offset:error:
setRunning
paused
updatePlayerDuration:atTime:
seekToTime:error:
resumeAtTime:error:
doStartFromPausedAtTime:error:
doStartFromStoppedAtTime:error:
pauseAtTime:error:
setPaused
doResumeAtTime:error:
loopingEnabled
playbackRate
setLoopingEnabled:
setLoopLength:error:
setPlaybackRate:
dispatchOnGlobal:
initWithData:player:error:
activateChannelByIndex:atTime:error:
setVolume:atTime:error:
seekToOffset:error:
loopEnabled
setLoopEnabled:
loopEnd
completionHandler
T@?,C
initWithPattern:engine:privileged:error:
initWithRingtoneData:engine:error:
setEngine:
_sequence
_loopEnd
_state
_seekOffset
_completionHandler
T@"CHHapticEngine",W,V_engine
Td,V_seekOffset
currentPlayerBehavior
setCurrentPlayerBehavior:
currentMediaTime
isBehaviorSet:
toggleBehavior:set:
channels
updateEngineBehavior
handleFinish:
finishWithCompletionHandler:
cancelIdleTimer
avAudioSession
setCategory:error:
sessionIsConstantVolume
setMode:error:
enableNotifications:error:
setParticipatesInNowPlayingAppPolicy:error:
isAutoShutdownEnabled
getSessionIDFromAVAudioSession:
sessionIsShared
setupUnsharedAudioSessionAndReturnError:
code
audioSessionID
createOptionsFromAudioSessionID:shared:
createHapticPlayerWithOptions:
finishInit:
resetHandler
defaultCenter
handleMediaServerRecovery:
addObserver:selector:name:object:
removeObserver:name:object:
opaqueSessionID
initWithOptions:error:
setRunning:
localizedDescription
handleConnectionError
setConnectionErrorHandler:
allocateRenderResourcesWithCompletionHandler:
setFollowAudioRoute:
stoppedHandler
setStopRunningHandler:
addChannel:
removeChannel:error:
stopWithCompletionHandler:
startIdleTimerWithHandler:
timer
setTimer:
clientFinishedHandler
setClientFinishedHandler:
doStopWithCompletionHandler:
beginIdleTimer
expectNotifyAfter:
setBehavior:
doStopEngineAndWait:
stopAndWait
disconnectAudioSession:
doUnregisterAllPublicAudioResources
auxiliarySession
connectAudioSession:
doInit:sessionIsShared:error:
doInitWithOptions:error:
prewarmWithCompletionHandler:
stopPrewarm
startRunningWithCompletionHandler:
doStartWithCompletionHandler:
doStartEngineAndWait:
stopRunningWithCompletionHandler:
setActivateAudioSessionOnStart:
doFindPublicAudioResourceID:
absoluteString
lazyInitResourceMap
referenceCustomAudioEvent:reply:
copyCustomAudioEvent:options:reply:
dataWithBytesNoCopy:length:freeWhenDone:
initWithStreamDescription:channelLayout:
createCustomAudioEvent:format:frames:options:reply:
idForPublicAudioResourceURL:
addPublicAudioResourceID:withURL:
releaseCustomAudioEvent:reply:
hasPublicAudioResourceID:
removePublicAudioResourceID:
isFileURL
pathExtension
dataWithContentsOfFile:
JSONObjectWithData:options:error:
initWithContentsOfURL:error:
doPlayPatternFromDictionary:error:
propertyListWithData:options:format:error:
createPlayerWithPattern:error:
startWithCompletionHandler:
playsHapticsOnly
setPlaysHapticsOnly:
isMutedForAudio
setIsMutedForAudio:
isMutedForHaptics
setIsMutedForHaptics:
initialize
supports1stPartyHaptics
setMuteHapticsWhileRecordingAudio:
setAutoShutdownEnabled:
followAudioRoute
activateAudioSessionOnStart
muteAudioOnRingerOff
setMuteAudioOnRingerOff:
highPriority
setHighPriority:
dispatchSyncOnLocal:
getReporterIDFromAVAudioSession:
initAndReturnError:
initWithAudioSession:error:
startAndReturnError:
notifyWhenPlayersFinished:
initWithAudioSessionID:error:
initWithAudioSession:sessionIsShared:error:
createPlayerWithEvent:error:
createAdvancedPlayerWithPattern:error:
createAdvancedPlayerWithRingtoneData:error:
createAdvancedPlayerWithRingtonePattern:error:
createPrivilegedPlayerWithPlayable:error:
registerAudioResource:options:error:
unregisterAudioResource:error:
playPatternFromURL:error:
playPatternFromData:error:
hapticsOnly
setHapticsOnly:
audioIsMuted
setAudioIsMuted:
hapticsIsMuted
setHapticsIsMuted:
setStoppedHandler:
setResetHandler:
_dispatchQueue
_avAudioSession
_audioSessionID
_sessionIsShared
_sessionIsConstantVolume
_publicAudioResources
_player
_timer
_stoppedHandler
_resetHandler
_autoShutdownEnabled
_clientFinishedHandler
_running
_currentPlayerBehavior
_muteHapticsWhileRecordingAudio
T@"AVAudioSession",R,V_avAudioSession
TI,R,V_audioSessionID
TB,R,V_sessionIsShared
TB,R,V_sessionIsConstantVolume
T@?,C,V_clientFinishedHandler
T@"NSObject<OS_dispatch_source>",&,V_timer
T@"AVHapticPlayer",R,V_player
TB,V_running
TQ,V_currentPlayerBehavior
T@"HapticServerConfig",R,V_serverConfig
TB,N
T@?,C,V_stoppedHandler
T@?,C,V_resetHandler
autoShutdownEnabled
TB,N,GisAutoShutdownEnabled
stringWithUTF8String:
stringWithCString:encoding:
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
f16@0:8
@28@0:8f16f20f24
@40@0:8@16@24^@32
@32@0:8@16^@24
@"<CHHapticParameterAttributes>"40@0:8@"NSString"16@"NSString"24^@32
@"<CHHapticParameterAttributes>"32@0:8@"NSString"16^@24
f24@0:8@16
f32@0:8@16@24
{Data=@}16@0:8
v24@0:8{Data=@}16
v16@0:8
{Data="name"@"NSString"}
v24@0:8@16
@"NSString"
q16@0:8
v24@0:8q16
v20@0:8f16
^{CAMutex=^^?*^{_opaque_pthread_t}{_opaque_pthread_mutex_t=q[56c]}}16@0:8
v36@0:8@16I24B28B32
d16@0:8
v24@0:8@?16
v32@0:8@16I24B28
v44@0:8@16@24@32B40
v32@0:8@16@24
v48@0:8@16@24q32f40B44
v28@0:8@16f24
@24@0:8@16
@24@0:8Q16
@56@0:8@16@24@32@40@48
@32@0:8@16@24
@48@0:8Q16d24@32d40
Q20@0:8f16
Q24@0:8f16i20
@44@0:8i16d20@28d36
@36@0:8@16@24B32
@"HapticServerConfig"
B32@0:8@16@?24
B48@0:8Q16^f24^f32^@40
@"NSArray"32@0:8@"CHHapticEngine"16^@24
@"NSArray"16@0:8
@40@0:8@16@24d32
@48@0:8@16@24d32d40
@40@0:8Q16@24d32
@48@0:8Q16@24d32d40
v24@0:8d16
@"NSArray"
@28@0:8@16f24
@36@0:8@16f24d28
@28@0:8d16f24
@52@0:8@16@24@32@40B48
@24@0:8^@16
@"NSNumber"
@"NSMutableArray"
B32@0:8d16^@24
B40@0:8@16d24^@32
B24@0:8^@16
v20@0:8B16
B40@0:8@"NSArray"16d24^@32
B40@0:8@"CHHapticParameterCurve"16d24^@32
@44@0:8@16@24B32^@36
B20@0:8C16
@"CHHapticEngine"
@"AVHapticPlayerChannel"
@?16@0:8
@?<v@?@"NSError">16@0:8
v24@0:8@?<v@?@"NSError">16
B40@0:8Q16d24^@32
B36@0:8f16d20^@28
@"AVHapticSequence"
B24@0:8Q16
Q52@0:8@16@24B32@36^@44
B44@0:8Q16B24@28^@36
v28@0:8Q16B24
I24@0:8@16
q24@0:8@16
v32@0:8@16d24
B32@0:8@16d24
@24@0:8I16B20
B32@0:8I16B20^@24
B32@0:8@16^@24
@28@0:8I16^@20
@36@0:8@16B24^@28
d24@0:8Q16
{__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<unsigned long, NSURL *>, std::__1::__tree_node<std::__1::__value_type<unsigned long, NSURL *>, void *> *, long>>={__tree_iterator<std::__1::__value_type<unsigned long, NSURL *>, std::__1::__tree_node<std::__1::__value_type<unsigned long, NSURL *>, void *> *, long>=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}}}24@0:8Q16
v32@0:8Q16@24
Q24@0:8@16
v24@0:8Q16
Q40@0:8@16@24^@32
B32@0:8Q16^@24
I16@0:8
@"NSObject<OS_dispatch_queue>"
@"AVAudioSession"
{map<unsigned long, NSURL *, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, NSURL *>>>="__tree_"{__tree<std::__1::__value_type<unsigned long, NSURL *>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, NSURL *>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, NSURL *>>>="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, NSURL *>, void *>>>="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, NSURL *>, std::__1::less<unsigned long>, true>>="__value_"Q}}}
@"AVHapticPlayer"
@"NSObject<OS_dispatch_source>"
333333
