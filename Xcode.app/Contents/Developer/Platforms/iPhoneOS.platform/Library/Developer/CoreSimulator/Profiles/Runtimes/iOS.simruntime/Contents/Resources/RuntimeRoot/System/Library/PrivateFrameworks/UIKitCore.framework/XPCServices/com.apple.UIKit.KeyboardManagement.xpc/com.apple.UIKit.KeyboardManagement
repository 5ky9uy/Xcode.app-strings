@(#)PROGRAM:com.apple.UIKit.KeyboardManagement  PROJECT:UIKit-6109.1.108
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.frontboard.keyboard-focus</key>
<true/>
<key>com.apple.frontboard.keyboard-provider</key>
<true/>
<key>com.apple.springboard.requestScene-daemon</key>
<true/>
</dict>
</plist>
<%@; workspace = %@; scene = %@>
v24@?0@"FBSScene"8@"NSError"16
v16@?0@"FBSMutableSceneClientSettings"8
-[UIKeyboardManagementLink workspace:didCreateScene:withTransitionContext:completion:]
_UIKeyboardManagement.m
Invalid parameter not satisfying: %@
_scene == nil
-[UIKeyboardManagementLink workspace:willDestroyScene:withTransitionContext:completion:]
-[UIKeyboardManagementLink workspace:didReceiveActions:]
-[UIKeyboardManagementLink scene:didUpdateWithDiff:transitionContext:completion:]
-[UIKeyboardManagementLink scene:didReceiveActions:]
NSString *get_UIKeyboardArbiter_SceneIdentifier(void)
_UIKeyboardArbiter_SceneIdentifier
void *KeyboardArbiterLibrary(void)
os_log_t _Local_UIArbiterLog(void)
_UIArbiterLog
v8@?0
_UIKeyboardArbiter
Class get_UIKeyboardArbiterClass(void)_block_invoke
main.m
Unable to find class %s
Unexpected signal %i
description
stringWithFormat:
optionsWithDelegate:
queueWithDispatchQueue:
setCallOutQueue:
owner
updateSceneClientSettings:
setIdentifier:
setInitialClientSettings:
setKeyboardScene:
defaultShellEndpoint
requestSceneFromEndpoint:withOptions:completion:
updateClientSettingsWithBlock:
attachLayer:
detachLayer:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
setDelegate:
activateClients
attemptConnection
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
connectWithQueue:
createSceneWithCompletion:
updateSceneSettings
attach:
detach:
serviceName
setOwner:
isAvailable
T@"NSString",R,N
T@"_UIKeyboardArbiter",W,N
TB,R,N
workspace:didCreateScene:withTransitionContext:completion:
workspace:willDestroyScene:withTransitionContext:completion:
workspace:didReceiveActions:
scene:didUpdateWithDiff:transitionContext:completion:
scene:didReceiveActions:
.cxx_destruct
_workspace
_scene
T@"_UIKeyboardArbiter",W,N,Vowner
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
initWithLink:
resume
dictionary
copy
numberWithInt:
setObject:forKey:
removeObjectForKey:
objectForKey:
%s %@
UIKeyboardManagementLink
_UIKeyboardArbiterLink
NSObject
FBSWorkspaceDelegate
FBSSceneDelegate
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@16
v24@0:8@?16
v16@0:8
v24@0:8@"NSObject<OS_dispatch_queue>"16
v24@0:8@?<v@?B>16
v24@0:8@"FBSSceneLayer"16
@"_UIKeyboardArbiter"16@0:8
v24@0:8@"_UIKeyboardArbiter"16
v48@0:8@16@24@32@?40
v32@0:8@16@24
v48@0:8@"FBSWorkspace"16@"FBSScene"24@"FBSSceneTransitionContext"32@?<v@?@"FBSWorkspaceCreateSceneResponse">40
v48@0:8@"FBSWorkspace"16@"FBSScene"24@"FBSSceneTransitionContext"32@?<v@?@"FBSWorkspaceDestroySceneResponse">40
v32@0:8@"FBSWorkspace"16@"NSSet"24
v48@0:8@"FBSScene"16@"FBSSceneSettingsDiff"24@"FBSSceneTransitionContext"32@?<v@?@"FBSWorkspaceSceneUpdateResponse">40
v32@0:8@"FBSScene"16@"NSSet"24
@"FBSWorkspace"
@"FBSScene"
@"_UIKeyboardArbiter"
softlink:r:path:/System/Library/PrivateFrameworks/KeyboardArbiter.framework/KeyboardArbiter
softlink:r:path:/System/Library/PrivateFrameworks/KeyboardArbiter.framework/KeyboardArbiter
@(#)PROGRAM:com.apple.UIKit.KeyboardManagement  PROJECT:UIKit-6109.1.108
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.frontboard.keyboard-focus</key>
<true/>
<key>com.apple.frontboard.keyboard-provider</key>
<true/>
<key>com.apple.springboard.requestScene-daemon</key>
<true/>
</dict>
</plist>
<%@; workspace = %@; scene = %@>
v24@?0@"FBSScene"8@"NSError"16
v16@?0@"FBSMutableSceneClientSettings"8
-[UIKeyboardManagementLink workspace:didCreateScene:withTransitionContext:completion:]
_UIKeyboardManagement.m
Invalid parameter not satisfying: %@
_scene == nil
-[UIKeyboardManagementLink workspace:willDestroyScene:withTransitionContext:completion:]
-[UIKeyboardManagementLink workspace:didReceiveActions:]
-[UIKeyboardManagementLink scene:didUpdateWithDiff:transitionContext:completion:]
-[UIKeyboardManagementLink scene:didReceiveActions:]
NSString *get_UIKeyboardArbiter_SceneIdentifier(void)
_UIKeyboardArbiter_SceneIdentifier
void *KeyboardArbiterLibrary(void)
os_log_t _Local_UIArbiterLog(void)
_UIArbiterLog
v8@?0
_UIKeyboardArbiter
Class get_UIKeyboardArbiterClass(void)_block_invoke
main.m
Unable to find class %s
Unexpected signal %i
updateClientSettingsWithBlock:
dictionary
currentHandler
setDelegate:
setCallOutQueue:
initWithLink:
setKeyboardScene:
defaultShellEndpoint
attachLayer:
queueWithDispatchQueue:
objectForKey:
updateSceneClientSettings:
numberWithInt:
setObject:forKey:
attemptConnection
requestSceneFromEndpoint:withOptions:completion:
stringWithFormat:
handleFailureInFunction:file:lineNumber:description:
setIdentifier:
detachLayer:
copy
stringWithUTF8String:
setInitialClientSettings:
activateClients
optionsWithDelegate:
handleFailureInMethod:object:file:lineNumber:description:
resume
description
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
connectWithQueue:
createSceneWithCompletion:
updateSceneSettings
attach:
detach:
serviceName
owner
setOwner:
isAvailable
T@"NSString",R,N
T@"_UIKeyboardArbiter",W,N
TB,R,N
workspace:didCreateScene:withTransitionContext:completion:
workspace:willDestroyScene:withTransitionContext:completion:
workspace:didReceiveActions:
scene:didUpdateWithDiff:transitionContext:completion:
scene:didReceiveActions:
.cxx_destruct
_workspace
_scene
T@"_UIKeyboardArbiter",W,N,Vowner
%s %@
UIKeyboardManagementLink
_UIKeyboardArbiterLink
NSObject
FBSWorkspaceDelegate
FBSSceneDelegate
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@16
v24@0:8@?16
v16@0:8
v24@0:8@"NSObject<OS_dispatch_queue>"16
v24@0:8@?<v@?B>16
v24@0:8@"FBSSceneLayer"16
@"_UIKeyboardArbiter"16@0:8
v24@0:8@"_UIKeyboardArbiter"16
v48@0:8@16@24@32@?40
v32@0:8@16@24
v48@0:8@"FBSWorkspace"16@"FBSScene"24@"FBSSceneTransitionContext"32@?<v@?@"FBSWorkspaceCreateSceneResponse">40
v48@0:8@"FBSWorkspace"16@"FBSScene"24@"FBSSceneTransitionContext"32@?<v@?@"FBSWorkspaceDestroySceneResponse">40
v32@0:8@"FBSWorkspace"16@"NSSet"24
v48@0:8@"FBSScene"16@"FBSSceneSettingsDiff"24@"FBSSceneTransitionContext"32@?<v@?@"FBSWorkspaceSceneUpdateResponse">40
v32@0:8@"FBSScene"16@"NSSet"24
@"FBSWorkspace"
@"FBSScene"
@"_UIKeyboardArbiter"
softlink:r:path:/System/Library/PrivateFrameworks/KeyboardArbiter.framework/KeyboardArbiter
softlink:r:path:/System/Library/PrivateFrameworks/KeyboardArbiter.framework/KeyboardArbiter
