@(#)PROGRAM:ProactiveML  PROJECT:Suggestions-1193.23.0.1
 %zu
inputSequence
outputLabels
PMLPlanSimulator.m
Couldn't load sessions for %@
Can't instantiate simulator, need at least one db file.
Multiple batches not supported in simulation.
Can't instantiate simulator, no db at %@
v16@?0Q8
Unsupported proto buf message: %@
%@ %@
timestamp
modelInfo
minibatchStats
evaluationMetrics
precisionAtK
sparseFloatWeights
sparseQuantizedWeights
weightsScaleFactor
weightsL2norm
denseQuantizedWeights
PMLGradientSolver.m
Invalid parameter not satisfying: %@
gradient
weights
gradientCalculator
predictionCalculator
batchPredictionCalculator
Covariates must have the same column-length as weights. Got covariates with %tu columns but weights of length %d
Invalid covariates, length: %tu but model weights length: %d
PMLMultiLabelRegressionEvaluationPlan.m
Invalid planId. Must be <name>-<version>-<locale> but got %@
Can't instantiate %@. Unknown model class: %@
q24@?0@8@16
v32@?0@"PMLModelWeights"8Q16^B24
PLAN_ID
SESSIONS_MODEL_HANDLE
SESSIONS_LIMIT
SESSIONS_IN_BATCH
POSITIVE_LABELS
WEIGHTS_ARRAY
MULTI_LABEL_REGRESSION_MODEL_TYPE
INTERCEPT
EVALUATION_POINTS
TRACKER
TRACKER_TYPE
EVALUATION_LEVEL
TRAINING_STORE
Can't instantiate %@. Missing "store" dependency.
v32@?0@"NSNumber"8Q16^B24
Can't instantiate %@. Unknown tracker class: %@
planId
sparseFloatFeatures
sparseQuantizedFeatures
featuresScaleFactor
featuresL2norm
idx (%tu) is out of range (%tu)
indices
values
length
minValue
bucketSize
stats
PMLLabelLimitRowId.m
label
limit >= 0
rowId >= 0
PMLLogRegTrainingPlan.m
<%@ %@>
Cannot train model with covariates of length %tu but model weights of length %d (planid = %@)
B12@?0f8
loss
v24@?0@"PMLTrainingStoredSessionBatch"8^B16
name
version
locale
plan
IS_SYNCHRONOUS
WEIGHTS
LEARNING_RATE
STOPPING_THRESHOLD
MIN_ITERATIONS
GRADIENT_ITERATIONS
SERVER_ITERATION
IS_MULTI_LABEL
POSITIVE_LABEL
NOISE_STRATEGY_TYPE
NOISE_STRATEGY
ONLY_INTERNAL_SESSIONS
SKEW
THRESHOLD
REPORT_SCALE
BEFORE_NOISE_SCALING
PMLNoNoiseStrategy
PMLDiffPrivacyNoiseStrategy
PMLSeparatedDPNoiseStrategy
PFL_ID
PLUGIN_SHOULD_ADD_NOISE_AND_ENCRYPT_RESULT
noiseStrategy
FiM_logreg-1.0-en
serverIteration
intercept
generateWeightsOfLength
localLearningRate
stoppingThreshold
localMinimumIterations
localGradientIterations
reportScale
useOnlyAppleInternalSessions
sessionsInBatch
maxSessionsLimit
positiveLabel
sparseFloatFeatureMatrix
sparseQuantizedFeatureMatrix
featureMatrixScaleFactor
featureMatrixL2norm
PMLTrainingStore.m
Number of labels %lu does not match number of rows specified %lu
covariates
sessionDescriptor
bundleId
itemIds
sessions
creationTimestamp
sessionDescriptorId
covariatesLength
covariatesIndices
covariatesValues
isAppleInternal
sessionsDomainIds
sessionId
bundleIdentifier
domainIdentifier
sessionsItemIds
itemIdentifier
lastUsed
timesAccessed
v56@?0Q8@"NSArray"16@"NSData"24Q32Q40^B48
AND isAppleInternal = 1 
SELECT covariatesLength, COUNT(*) FROM sessions WHERE sessionDescriptorId = (SELECT id FROM sessionsDescriptors WHERE name = :name AND version = :version AND locale = :locale) AND id > :rowId %@ %@ ORDER BY id
:name
:version
:locale
numberOfRows
numberOfColumns
SELECT sessions.id, sessions.label, sessions.covariatesLength, sessions.covariatesIndices, sessions.covariatesValues, sessionsItemIds.timesAccessed FROM sessions JOIN sessionsItemIds ON sessions.id = sessionsItemIds.sessionId AND sessions.sessionDescriptorId = (SELECT id FROM sessionsDescriptors WHERE name = :name AND version = :version AND locale = :locale) AND sessionsItemIds.lastUsed <= :lastUsedMax AND sessionsItemIds.timesAccessed < :timesUsedMax AND sessions.id > :rowId %@ ORDER BY sessions.id limit :limit
:limit
:lastUsedMax
:timesUsedMax
sessionId = %ld
{_PASDBIterAction_=B}16@?0@"NSError"8
Read label %lu while specified %@. Matcher: %@
Invalid session from db (row id %lu): covariatesIndices and covariatesValues must contain the same number of elements (expected bytes length in int/float ratio but got %lu and %lu).
Invalid session from db (row id %lu), covariatesLength has to be %lu, got %lu.
Invalid session from db (row id %lu): idx %d out of bounds [0, %lu).
v32@?0@"NSNumber"8@"PMLLabelLimitRowId"16^B24
AND sessions.label = %lu AND sessions.id in (SELECT sessionId from sessionsItemIds WHERE lastUsed < %f AND timesAccessed < %lu) 
AND sessions.label = 0 AND sessions.id in (SELECT sessionId from sessionsItemIds WHERE lastUsed < %f AND timesAccessed < %lu) 
v48@?0Q8@"NSArray"16@"NSData"24@"NSDictionary"32^B40
SELECT sessions.id, sessions.label, sessions.covariatesLength, sessions.covariatesIndices, sessions.covariatesValues, sessionsItemIds.timesAccessed FROM sessions JOIN sessionsItemIds ON sessions.id = sessionsItemIds.sessionId AND sessions.sessionDescriptorId = (SELECT id FROM sessionsDescriptors WHERE name = :name AND version = :version AND locale = :locale) AND sessionsItemIds.lastUsed <= :lastUsedMax AND sessionsItemIds.timesAccessed < :timesUsedMax AND sessions.label IN _pas_nsarray(:labels) ORDER BY RANDOM() limit :limit
:labels
AND label = %lu AND sessions.id in (SELECT sessionId from sessionsItemIds WHERE lastUsed < %f AND timesAccessed < %lu) 
SELECT count(*) FROM sessions WHERE sessionDescriptorId = (SELECT id FROM sessionsDescriptors WHERE name = :name AND version = :version AND locale = :locale) 
SELECT DISTINCT label FROM sessions WHERE UNLIKELY(sessionDescriptorId = (SELECT id FROM sessionsDescriptors WHERE name = :name AND version = :version AND locale = :locale))
DELETE FROM sessions WHERE creationTimestamp < :lastUsedExpirationDate AND (id in (SELECT sessionId from sessionsItemIds WHERE lastUsed < :lastUsedExpirationDate))
:lastUsedExpirationDate
DELETE FROM sessions WHERE (id in (SELECT sessionId from sessionsItemIds WHERE timesAccessed >= :maxTimesAccessed))
:maxTimesAccessed
label = :label AND
SELECT count(*) FROM sessions WHERE %@ UNLIKELY(sessionDescriptorId = (SELECT id FROM sessionsDescriptors WHERE name = :name AND version = :version AND locale = :locale))
:label
DELETE FROM sessions WHERE id IN (   SELECT id FROM sessions   WHERE %@   UNLIKELY(sessionDescriptorId = (SELECT id FROM sessionsDescriptors WHERE name = :name AND version = :version AND locale = :locale))   ORDER BY RANDOM() LIMIT :limit )
DELETE FROM sessions WHERE id IN (SELECT sessionId FROM sessionsItemIds WHERE bundleIdentifier = :bundleIdentifier)
:bundleIdentifier
DELETE FROM sessions WHERE id IN (SELECT sessionId FROM sessionsItemIds WHERE bundleIdentifier = :bundleIdentifier AND itemIdentifier = :itemIdentifier)
:itemIdentifier
DELETE FROM sessions WHERE id IN (SELECT sessionId FROM sessionsDomainIds WHERE bundleIdentifier = :bundleIdentifier AND domainIdentifier = :domainIdentifier  UNION ALL SELECT sessionId FROM sessionsDomainIds WHERE bundleIdentifier = :bundleIdentifier AND domainIdentifier >= :domainIdentifier || '.' AND domainIdentifier < :domainIdentifier || '/')
:domainIdentifier
SELECT mh.name, mh.version, mh.locale, s.label, count(*) FROM sessions s INNER JOIN sessionsDescriptors mh ON s.sessionDescriptorId = mh.id INNER JOIN sessionsItemIds sii ON s.id = sii.sessionId WHERE sii.timesAccessed < :timesUsedMax GROUP BY s.sessionDescriptorId, s.label ORDER BY s.sessionDescriptorId, s.label
SELECT name, version, locale FROM sessionsDescriptors
SELECT id FROM sessionsDescriptors WHERE name = :name AND version = :version AND locale = :locale
sessionsDescriptors
!_lockStateNotificationToken
v12@?0i8
PRAGMA foreign_keys = ON
B8@?0
migrationFunction
SELECT sd.version, lf.transformer FROM sessionsDescriptors sd CROSS JOIN lastFeaturizations lf ON lf.sessionDescriptorId = sd.id WHERE sd.name = :name AND sd.locale = :locale
SELECT sd.id FROM sessionsDescriptors sd CROSS JOIN lastFeaturizations lf ON lf.sessionDescriptorId = sd.id WHERE sd.name = :name AND sd.locale = :locale
transformer
lastFeaturizations
sessionDescriptorId = %lu
SELECT s.id, s.sessionDescriptorId, s.covariatesIndices, s.covariatesValues FROM sessions s CROSS JOIN sessionsDescriptors sd ON s.sessionDescriptorId = sd.id WHERE sd.name = :name AND sd.locale = :locale
id = %ld
training_db_schema
[ ]{2,}
SELECT sql FROM sqlite_master WHERE sql IS NOT NULL AND tbl_name NOT LIKE 'sqlite_%' 
CREATE TABLE integrityCheck
python
Process name %@ is not python
training_sessions
test
SELECT count(*) FROM 
columnIndices
columnLength
rowIndices
rowLength
PMLImmutableLogisticRegressionModel.m
AWDProactiveModelFittingQuantizedDenseVector+PML.m
Too big vector (length: %tu)
PMLPlanDescriptor.m
VALUES
SHAPE
-[PMLModelWeights(PMLMobileAssetParameterGetStrategy) initFromDictionary:]
PMLDictionaryParameters.m
weightArray.count == [shapeArray[0] unsignedIntegerValue]
-[PMLModelRegressor(PMLMobileAssetParameterGetStrategy) initFromDictionary:]
regressorArray.count == [shapeArray[0] unsignedIntegerValue]
-[PMLModelWeights(PMLPlistAndChunksSerialization) initWithPlist:chunks:context:]
[__expr isKindOfClass:[NSNumber class]]
[__expr isKindOfClass:[PMLDataChunkDenseFloatVector class]]
-[PMLModelRegressor(PMLPlistAndChunksSerialization) initWithPlist:chunks:context:]
-[PMLImmutableLogisticRegressionModel(PMLPlistAndChunksSerialization) initWithPlist:chunks:context:]
MULTI_LABEL_REGRESSION_MODELS
Invalid noiseMechanism, got: %lld
f20@?0f8Q12
v24@?0Q8^B16
You must explicitly specify a noise mechanism.
Invalid noise mechanism value: %lli
NOISE_STRATEGY_MAX_ITERATIONS
NOISE_STRATEGY_MINIMUM_MAGNITUDE
GAUSSIAN_NOISE_SCALE
LAPLACE_NOISE_SCALE
NOISE_MECHANISM_ENUM_VALUE
INPLACE_NORM
NOISE_STRATEGY_SCALE
NOISE_SAMPLER
<%@ gaussianScaleFactor:%0.2f laplaceScaleFactor:%0.2f minMagnitude:%0.2f>
PMLClassificationEvaluationMetrics.m
AWDProactiveModelFittingQuantizedSparseMatrix+PML.m
Too big matrix (rows: %tu)
Too big matrix (cols: %tu)
foo-1.0-en
CREATE TABLE IF NOT EXISTS modelHandles (                  id integer PRIMARY KEY AUTOINCREMENT NOT NULL,             name char(128) NOT NULL,                                   version char(128) NOT NULL,                                locale char(5) NOT NULL                                    )
CREATE UNIQUE INDEX IF NOT EXISTS ix_modelHandles_name_version_locale             ON modelHandles (name, version, locale)
CREATE TABLE IF NOT EXISTS sessions (                      id integer PRIMARY KEY AUTOINCREMENT NOT NULL,             creationTimestamp real NOT NULL,                           modelHandleId integer NOT NULL,                            label integer NOT NULL,                                    covariatesLength integer NOT NULL,                         covariatesIndices blob NOT NULL,                           covariatesValues blob NOT NULL,                            FOREIGN KEY (modelHandleId) REFERENCES modelHandles (id)               ON DELETE CASCADE                                        )
CREATE INDEX IF NOT EXISTS ix_sessions_modelHandleId             ON sessions (modelHandleId ASC)
CREATE TABLE IF NOT EXISTS sessionsDomainIds (               id integer PRIMARY KEY AUTOINCREMENT NOT NULL,               sessionId integer NOT NULL,                                  domainIdentifier char(128) NOT NULL,                         FOREIGN KEY (sessionId) REFERENCES sessions (id)               ON DELETE CASCADE                                          )
CREATE TABLE IF NOT EXISTS sessionsItemIds (                 id integer PRIMARY KEY AUTOINCREMENT NOT NULL,               sessionId integer NOT NULL,                                  itemIdentifier char(128) NOT NULL,                           FOREIGN KEY (sessionId) REFERENCES sessions (id)               ON DELETE CASCADE                                          )
CREATE TABLE IF NOT EXISTS modelMetadata (               modelHandleId integer PRIMARY KEY NOT NULL,              payloadPath char(128) NOT NULL,                          serverIteration integer NOT NULL,                        hasFinishedTraining integer(1) NOT NULL,                 modificationTimestamp real NOT NULL,                     FOREIGN KEY (modelHandleId) REFERENCES modelHandles (id)               ON DELETE CASCADE                                                  )
CREATE TABLE IF NOT EXISTS trainingLog (                   id integer PRIMARY KEY AUTOINCREMENT NOT NULL,             creationTimestamp real NOT NULL,                           modelHandleId integer NOT NULL,                            serverIteration integer NOT NULL,                          FOREIGN KEY (modelHandleId) REFERENCES modelHandles (id)               ON DELETE CASCADE                                                  )
CREATE INDEX IF NOT EXISTS ix_trainingLog_modelHandleId_creationTimestamp             ON trainingLog (modelHandleId, creationTimestamp)
DROP TABLE modelMetadata
CREATE TABLE IF NOT EXISTS modelMetadata (               modelHandleId integer PRIMARY KEY NOT NULL,              serverIteration integer NOT NULL,                        hasFinishedTraining integer(1) NOT NULL,                 modificationTimestamp real NOT NULL,                     payload blob NOT NULL,                                   FOREIGN KEY (modelHandleId) REFERENCES modelHandles (id)               ON DELETE CASCADE                                                  )
ALTER TABLE sessions RENAME TO sessions_old
CREATE TABLE IF NOT EXISTS sessions (                      id integer PRIMARY KEY AUTOINCREMENT NOT NULL,             creationTimestamp real NOT NULL,                           modelHandleId integer NOT NULL,                            label integer NOT NULL,                                    covariatesLength integer NOT NULL,                         covariatesIndices blob,                                    covariatesValues blob,                                     FOREIGN KEY (modelHandleId) REFERENCES modelHandles (id)               ON DELETE CASCADE                                        )
INSERT INTO sessions(id,creationTimestamp,modelHandleId,label,covariatesLength,covariatesIndices,covariatesValues)             SELECT id,creationTimestamp,modelHandleId,label,covariatesLength,covariatesIndices,covariatesValues FROM sessions_old
ALTER TABLE sessionsDomainIds RENAME TO sessionsDomainIds_old
INSERT INTO sessionsDomainIds(id,sessionId,domainIdentifier)             SELECT id,sessionId,domainIdentifier FROM sessionsDomainIds_old
DROP TABLE sessionsDomainIds_old
ALTER TABLE sessionsItemIds RENAME TO sessionsItemIds_old
INSERT INTO sessionsItemIds(id,sessionId,itemIdentifier)             SELECT id,sessionId,itemIdentifier FROM sessionsItemIds_old
DROP TABLE sessionsItemIds_old
DROP TABLE sessions_old
ALTER TABLE modelMetadata ADD maxIteration integer NOT NULL DEFAULT 10
ALTER TABLE sessions ADD isAppleInternal integer(1) NOT NULL DEFAULT 0
DELETE FROM modelMetadata
CREATE TABLE IF NOT EXISTS receivedPlans (             planId char(128) PRIMARY KEY NOT NULL,                 modificationTimestamp real NOT NULL,                   serializedPlan blob NOT NULL                           )
DROP TABLE trainingLog
CREATE TABLE IF NOT EXISTS trainingLog (                   id integer PRIMARY KEY AUTOINCREMENT NOT NULL,             creationTimestamp real NOT NULL,                           planId char(128) NOT NULL,                                 modelHandleId integer NOT NULL,                            serverIteration integer NOT NULL,                          FOREIGN KEY (modelHandleId) REFERENCES modelHandles (id)               ON DELETE CASCADE                                                  )
CREATE INDEX IF NOT EXISTS ix_trainingLog_planId_creationTimestamp             ON trainingLog (planId, creationTimestamp)
ALTER TABLE sessions ADD source blob
DELETE FROM receivedPlans
ALTER TABLE sessionsDomainIds ADD bundleIdentifier char(128)
ALTER TABLE sessionsItemIds ADD bundleIdentifier char(128)
ALTER TABLE modelHandles ADD sd_id integer
ALTER TABLE modelHandles ADD sd_name char(128)
ALTER TABLE modelHandles ADD sd_version char(128)
UPDATE modelHandles SET               sd_name = CASE                   WHEN name = 'FiM.phone' THEN 'SignificantPhoneNumber'                   WHEN name = 'dataDetectionSignificantPhrasePhoneLogistic' THEN 'SignificantPhoneNumber'                   WHEN name = 'SignificantPhoneNumber' THEN name                   WHEN name = 'dataDetectionSignificantPhraseAddressLogistic' THEN 'SignificantPostalAddress'                   WHEN name = 'SignificantPostalAddress' THEN name                   WHEN name = 'dataDetectionSignificantPhraseEmailLogistic' THEN 'SignificantEmailAddress'                   WHEN name = 'SignificantEmailAddress' THEN name                   WHEN name = 'selfIdentificationPhraseLogistic' THEN 'SelfIdentification'                   WHEN name = 'SelfId.Covariates' THEN 'SelfIdentification'                   WHEN name = 'SelfIdentification' THEN name                   WHEN name = 'STSQP' AND version = '1.2' THEN name                   ELSE NULL               END,               sd_version = CASE                   WHEN version = '1.1' THEN 'TW=12&NG=3&FV=1.1'                   WHEN version = 'TW=12&NG=3&FV=1.1' THEN version                   WHEN version = '1.2' THEN version                   ELSE NULL               END
CREATE TABLE IF NOT EXISTS sessionsDescriptors (                   id integer PRIMARY KEY AUTOINCREMENT NOT NULL,                   name char(128) NOT NULL,                   version char(128) NOT NULL,                   locale char(5) NOT NULL               )
CREATE UNIQUE INDEX IF NOT EXISTS ix_sessionsDescriptors_name_version_locale ON sessionsDescriptors (name, version, locale)
INSERT OR IGNORE INTO sessionsDescriptors(name,version,locale) SELECT sd_name,sd_version,locale FROM modelHandles
UPDATE modelHandles SET sd_id = (SELECT id FROM sessionsDescriptors WHERE name = sd_name AND version = sd_version)
CREATE TABLE IF NOT EXISTS sessions (                   id integer PRIMARY KEY AUTOINCREMENT NOT NULL,                   creationTimestamp real NOT NULL,                   sessionDescriptorId integer NOT NULL,                   label integer NOT NULL,                   covariatesLength integer NOT NULL,                   covariatesIndices blob,                   covariatesValues blob,                   isAppleInternal integer(1) NOT NULL DEFAULT 0,                   source blob,                   FOREIGN KEY (sessionDescriptorId) REFERENCES sessionsDescriptors (id) ON DELETE CASCADE               )
CREATE INDEX IF NOT EXISTS ix_sessions_sessionDescriptorId ON sessions (sessionDescriptorId ASC)
INSERT INTO sessions(id,creationTimestamp,sessionDescriptorId,label,covariatesLength,covariatesIndices,covariatesValues,isAppleInternal,source)                 SELECT s.id,creationTimestamp,mh.sd_id,label,covariatesLength,covariatesIndices,covariatesValues,isAppleInternal,source                 FROM sessions_old AS s JOIN modelHandles AS mh                 WHERE s.modelHandleId = mh.id AND mh.sd_id IS NOT NULL
CREATE TABLE IF NOT EXISTS trainingLog (                   id integer PRIMARY KEY AUTOINCREMENT NOT NULL,                   creationTimestamp real NOT NULL,                   planId char(128) NOT NULL,                   sessionDescriptorId integer NOT NULL,                   serverIteration integer NOT NULL,                   FOREIGN KEY (sessionDescriptorId) REFERENCES sessionsDescriptors (id) ON DELETE CASCADE               )
CREATE INDEX IF NOT EXISTS ix_trainingLog_planId_creationTimestamp ON trainingLog (planId, creationTimestamp)
CREATE INDEX IF NOT EXISTS ix_sessionsItemIds_bundleId_itemId ON sessionsItemIds (bundleIdentifier, itemIdentifier)
CREATE INDEX IF NOT EXISTS ix_sessionsItemIds_sessionId ON sessionsItemIds (sessionId)
CREATE INDEX IF NOT EXISTS ix_sessionsDomainIds_bundleId_domainId ON sessionsDomainIds (bundleIdentifier, domainIdentifier)
CREATE INDEX IF NOT EXISTS ix_sessionsDomainIds_sessionId ON sessionsDomainIds (sessionId)
DROP TABLE IF EXISTS sessions_old
DROP TABLE IF EXISTS modelHandles
DELETE FROM sessions WHERE id IN (SELECT sessions.id FROM sessions LEFT JOIN sessionsItemIds ON sessions.id = sessionsItemIds.sessionId WHERE itemIdentifier = '<hey@example.com>')
PRAGMA foreign_keys = OFF
DELETE FROM sessions WHERE sessionDescriptorId IN (SELECT id FROM sessionsDescriptors                 WHERE                    (name = "SignificantPhoneNumber" AND version LIKE "%1.1%")                OR (name = "SignificantPhoneNumber" AND version LIKE "%1.2%")                OR (name = "SignificantEmailAddress" AND version LIKE "%1.1%")                OR (name = "SignificantEmailAddress" AND version LIKE "%1.2%")                OR (name = "SignificantPostalAddress" AND version LIKE "%1.1%")                OR (name = "SignificantPostalAddress" AND version LIKE "%1.2%")                OR (name = "SelfIdentification" AND version LIKE "%1.1%")                OR (name = "STSQP")                )
ALTER TABLE sessionsItemIds ADD lastUsed real NOT NULL DEFAULT 0
DROP INDEX IF EXISTS ix_trainingLog_planId_creationTimestamp
CREATE TABLE IF NOT EXISTS lastFeaturizations (                   id integer PRIMARY KEY AUTOINCREMENT NOT NULL,                   sessionDescriptorId integer NOT NULL,                   transformer blob,                   FOREIGN KEY (sessionDescriptorId) REFERENCES sessionsDescriptors (id) ON DELETE CASCADE               )
CREATE INDEX IF NOT EXISTS ix_lastFeaturizations_sessionDescriptorId ON lastFeaturizations (sessionDescriptorId)
DELETE FROM sessions WHERE sessionDescriptorId IN (                     SELECT id FROM sessionsDescriptors                     WHERE version NOT LIKE "FV=%" AND version NOT LIKE "%&FV=%"               )
ALTER TABLE sessionsItemIds ADD timesAccessed integer NOT NULL DEFAULT 0
DELETE FROM sessionsDescriptors WHERE version NOT LIKE "FV=%" AND version NOT LIKE "%&FV=%"
DELETE FROM sessions WHERE id IN (SELECT sessionId FROM sessionsItemIds WHERE bundleIdentifier = "com.apple.iChat")
UPDATE sessions SET source = x''
@max.unsignedIntValue
CREATE TABLE sessionsDomainIds ( id integer PRIMARY KEY AUTOINCREMENT NOT NULL, sessionId integer NOT NULL, domainIdentifier char(128) NOT NULL, bundleIdentifier char(128), FOREIGN KEY (sessionId) REFERENCES sessions (id) ON DELETE CASCADE )
CREATE TABLE sessionsItemIds ( id integer PRIMARY KEY AUTOINCREMENT NOT NULL, sessionId integer NOT NULL, itemIdentifier char(128) NOT NULL, bundleIdentifier char(128), lastUsed real NOT NULL DEFAULT 0, timesAccessed integer NOT NULL DEFAULT 0, FOREIGN KEY (sessionId) REFERENCES sessions (id) ON DELETE CASCADE )
CREATE TABLE receivedPlans ( planId char(128) PRIMARY KEY NOT NULL, modificationTimestamp real NOT NULL, serializedPlan blob NOT NULL )
CREATE TABLE sessionsDescriptors ( id integer PRIMARY KEY AUTOINCREMENT NOT NULL, name char(128) NOT NULL, version char(128) NOT NULL, locale char(5) NOT NULL )
CREATE UNIQUE INDEX ix_sessionsDescriptors_name_version_locale ON sessionsDescriptors (name, version, locale)
CREATE TABLE sessions ( id integer PRIMARY KEY AUTOINCREMENT NOT NULL, creationTimestamp real NOT NULL, sessionDescriptorId integer NOT NULL, label integer NOT NULL, covariatesLength integer NOT NULL, covariatesIndices blob, covariatesValues blob, isAppleInternal integer(1) NOT NULL DEFAULT 0, source blob, FOREIGN KEY (sessionDescriptorId) REFERENCES sessionsDescriptors (id) ON DELETE CASCADE )
CREATE INDEX ix_sessions_sessionDescriptorId ON sessions (sessionDescriptorId ASC)
CREATE INDEX ix_sessionsItemIds_bundleId_itemId ON sessionsItemIds (bundleIdentifier, itemIdentifier)
CREATE INDEX ix_sessionsItemIds_sessionId ON sessionsItemIds (sessionId)
CREATE INDEX ix_sessionsDomainIds_bundleId_domainId ON sessionsDomainIds (bundleIdentifier, domainIdentifier)
CREATE INDEX ix_sessionsDomainIds_sessionId ON sessionsDomainIds (sessionId)
CREATE TABLE lastFeaturizations ( id integer PRIMARY KEY AUTOINCREMENT NOT NULL, sessionDescriptorId integer NOT NULL, transformer blob, FOREIGN KEY (sessionDescriptorId) REFERENCES sessionsDescriptors (id) ON DELETE CASCADE )
CREATE INDEX ix_lastFeaturizations_sessionDescriptorId ON lastFeaturizations (sessionDescriptorId)
SELECT id, covariatesValues FROM sessions
UPDATE sessions SET covariatesValues = :data WHERE id = :rowId
:data
:rowId
v16@?0@"_PASSqliteStatement"8
{_PASDBIterAction_=B}16@?0@"_PASSqliteStatement"8
PMLMutableDenseVectorAllocationFailure
Failed to allocate NSData.
count
PMLDenseVector.m
start >= 0 && start < self.count
end > 0 && end <= self.count
end >= start
other.count == self.count
Index %tu out of bounds (vector length: %tu)
v20@?0f8Q12
rmse
truePositives
trueNegatives
falsePositives
falseNegatives
positiveScores
negativeScores
secsToExecute
com.apple.proactive.fia.phone.en
com.apple.proactive.responses
QuickResponsesClassification
PMLSeparatedDPNoiseStrategy.m
Can't instantiate %@. Missing %@ dependency.
_Bool soft_PFLPrivatize(float *, size_t, const char *)
PFLPrivatize
v8@?0
void *PrivateFederatedLearningLibrary(void)
model
spotlightReference
isInternal
PMLSparseMatrix.m
matrix
Can not mark %lu x %lu matrix as symmetric
Invalid shape, all rows must be the same length (row %lu length: %lu, first row length: %lu)
malloc failed
v40@?0Q8Q16r^f24r^q32
unknown
PMLEspressoTrainingPlan.m
Session descriptor must be nonnull for PMLEspressoTrainingPlan initWithPlist
Noise strategy must be nonnull for PMLEspressoTrainingPlan initWithPlist
LABELS_TO_TRAIN_ON
SUMMABLE_METRICS_ONLY
Gradient contains %f at index %lu
Unable to find global variable named: %@
global
weight
bias
Unable to convert session batch data into espresso data provider
v40@?0Q8@"NSArray"16@"NSData"24^B32
B32@?0@"ETDataTensor"8@"NSString"16@"NSString"24
Unable to in place update gradient since number of starting and ending parameters don't match for tensor type %@ name %@
numberOfSamples
isSampled
accuracy
predictions
groundTruth
B32@?0Q8@"<ETDataProvider>"16@"<ETTaskContext>"24
<PMLEspressoTrainingPlan '%@'>
META_TRAINING_VARIABLES
ESPRESSO_TRAINING_VARIABLES
supervisionType
confidenceScore
PLAN_CLASSNAME
PLAN
PMLPlanSerialization.m
Invalid plan. Unknown class: %@
PML_ESPRESSO_TRAINING_NETWORK_PATH
v28@?0f8Q12Q20
support
d40@?0@"PMLModelWeights"8@"PMLSparseMatrix"16@"PMLModelRegressor"24^f32
f24@?0@"PMLSparseVector"8@"PMLModelWeights"16
@"PMLMutableDenseVector"24@?0@"PMLSparseMatrix"8@"PMLModelWeights"16
calculateAvgGradientForBatch
PMLMathFunctions.h
regularizationRate >= 0.0
l1Ratio >= 0.0 && l1Ratio <= 1.0
numberOfSamples > 0
numberOfDimensions > 0
s == SPARSE_SUCCESS
logisticBatch
PMLHashingVectorizer.m
buckets > 0
extraIdOptions < PMLHashingVectorizerIdOptionLimit
vectorizerStrategy < PMLHashingVectorizerStrategyLimit
vectorNormalization >= PMLVectorNormalizationNone && vectorNormalization < PMLVectorNormalizationLimit
(characterNGramRange.location && characterNGramRange.length) || (tokenNGramRange.location && tokenNGramRange.length)
vectorizerStrategy != PMLHashingVectorizerStrategyWordPiece || vocab != nil
v24@?0^q8^f16
_endId == 0
_startId == 0
BUCKET_SIZE
NGRAM_SIZE
CHARACTER_NGRAM_LOCATION
CHARACTER_NGRAM_LENGTH
CHARACTER_NORMALIZATION
TOKEN_NGRAM_LOCATION
TOKEN_NGRAM_LENGTH
TOKEN_NORMALIZATION
SHOULD_TOKENIZE_NEWLINES
ID_VECTOR_LENGTH
EXTRA_ID_OPTIONS
VECTORIZER_STRATEGY
VECTOR_NORMALIZATION
NON_WORD_TOKENS_LOCALE
size
PMLFidesTracker.m
Can't instantiate %@. Missing "planId" dependency.
com.apple.proactive
PMLDenseMatrix.m
PMLSessionDescriptor.m
%@-%@-%@
@8@?0
(^|&)FV=([0-9]+(.[0-9]+)?)($|&)
regex
Unexpected number of matches for %@; pattern: %@; descriptor: %@
Unexpected number of match ranges for %@; pattern: %@; descriptor: %@
Unexpected featureVersion extracted for %@; pattern: %@; descriptor: %@
%@_label%lu
_label[0-9]+
_label([0-9]+)
Handle %@ is not a sub-model handle.
NAME
VERSION
LOCALE
<%@ %@ %@ %@>
com.apple.proactive.PMLDESPlugin
PMLTraining.m
training.db
STSQP
ContactSharing
SignificantPhoneNumber
SignificantEmailAddress
SignificantPostalAddress
SignificantEmailAddressForIMessage
SignificantPostalAddressForIMessage
FirstPersonPhoneSharing
ThirdPersonPhoneSharing
FirstPersonEmailSharing
FirstPersonAddressSharing
ThirdPersonEmailSharing
ThirdPersonAddressSharing
SelfIdentification
SGTextMessageBirthdayCongratsModel
positivesCount
label%tu
v32@?0@"PMLSessionDescriptor"8@"NSSet"16^B24
modelName
modelVersion
modelLocale
sessionsCount
negativesCount
v24@?0@"NSUUID"8@"NSError"16
labeledStats
v16@?0@"NSError"8
v24@?0@"PMLSessionDescriptor"8^B16
isEspressoTraining
chunk
attachments
AWDProactiveModelFittingQuantizedSparseVector+PML.m
PMLProtoBufTracker.m
adapter
TRACKER_ADAPTER_CLASS
TRACKER_QUANTIZATION_BUCKETS
Can't instantiate %@. Unknown class: %@
dummy
returnValue
PMLDataChunk.m
chunks
mock-1.0-en
PMLWordPieceTokenizer.m
vocab
v36@?0I8^S12{_NSRange=QQ}20
[UNK]
unkToken != PMLWordPieceVocabNotFound
[CLS]
startId != PMLWordPieceVocabNotFound
[SEP]
endId != PMLWordPieceVocabNotFound
[PAD]
padId != PMLWordPieceVocabNotFound
batchSize
perLabelSupport
PML_ESPRESSO_INPUT_NAME
PML_ESPRESSO_INPUT_DIM
PML_ESPRESSO_OUTPUT_NAME
PML_ESPRESSO_TRUE_LABEL_NAME
PML_ESPRESSO_LOSS_VALUE_NAME
PML_ESPRESSO_TRAINING_OUTPUT_NAME
PML_ESPRESSO_TRAINING_CONTROL_VARIABLE_NAME
PML_ESPRESSO_INITIALIZER_NAME
PML_ESPRESSO_GLOBALS_TO_GET_GRADIENTS_FOR
PML_ESPRESSO_LAYER_WEIGHTS_TO_GET_GRADIENTS_FOR
PML_ESPRESSO_LAYER_BIASES_TO_GET_GRADIENTS_FOR
PMLEspressoTrainingVariables.m
Can't instantiate %@. Missing "%@" dependency.
evaluation
logRegWeights
logRegGradient
linRegFeatureMatrix
linRegObjectiveFeatures
PMLTrainingStoredSessionBatch.m
Covariates and outcomes need to have the same length, but got %lu and %d.
PMLLexicon.m
path
v16@?0^{_CFBurstTrie=}8
v32@?0@"NSString"8@"NSNumber"16^B24
PlanClass
NoiseStrategy
ProactiveMLErrorDomain
PMLLogRegEvaluationPlan.m
tracker
PMLEspressoDataProvider.m
Number of dimensions in rows data (%lu) number of labels (%lu)
The names of the input and trueLabel can not be the same: %s
Label value %f must be greater than 0
PMLAWDAvailableSessionsTracker.m
AWD metric query delegate can only be set once
v12@?0I8
Missing delegate to handle AWD metric request.
PMLSparseVector.m
numberOfNonZeroValues == 0 || (indices && values)
length>=numberOfNonZeroValues
v24@?0^v8Q16
Too big vector.
length >= _numberOfNonZeroValues
_length >= numberOfNonZeroValues
_sparseValues == NULL || _sparseValues != sparseValues
_sparseIndices == NULL || _sparseIndices != sparseIndices
_length == _numberOfNonZeroValues
maxVectorLength
v32@?0@"NSNumber"8@"NSNumber"16^B24
precision
CLASS_NAME
PMLPlistClassWrapper.m
plist
Invalid plan. class %@ doesn't conform to %@
PMLPassThroughTracker.m
buckets
scaleFactor
AWDWeightsMessage
results
AWDGradientMessage
Can't instantiate %@. Missing "buckets" dependency.
sparseFloatGradient
iteration
sparseQuantizedGradient
gradientScaleFactor
gradientL2norm
denseQuantizedGradient
Could not create espresso context
Could not create espresso plan
Could not add espresso network from file %@ with storage type %05x, status code %d
Could not declare espresso network input %@, status code %d
Could not declare espresso network output %@, status code %d
Could not build espresso plan, status code %d
Could not bind the input buffer to layer %@ in espresso plan during initialization, status code %d
Unable to get input shape to layer %@ in espresso plan during initialization, status code %d
Input layer %@ has rank %zu, shape %@, num parameters %tu
Could not bind the output buffer to layer %@ in espresso plan during initialization, status code %d
Unable to get output shape to layer %@ in espresso plan during initialization, status code %d
Output layer %@ has rank %zu, shape %@, num parameters %tu
Could not bind the input buffer to layer %@ in espresso plan, status code %d
Could not bind the output buffer to layer %@ in espresso plan, status code %d
Could not execute espresso plan, status code %d
Failed writing analytics log for data transparency. Skip upload
Sending %@ (size: %tu) to Parsec.
Unsupported proto buf message: %@
Stopped after iter %li with NAN error
Stopped after iter %li with DBL_MAX error
Stopped after iter %li with -DBL_MAX error
Stopped after iter %li with -INFINITY error
Stopped after iter %li with INFINITY error
Stopped after iter %li with perfect fit
Stopped after iter %li with loss %f
Label %@ not in sepcified list %@
Ignoring all zero row #%ld
Evaluating plan %@ (descriptor: %@, available %tu sessions)
Attempted to use PMLSeparatedDPNoiseStrategy with non-Fides tracker: %@.
Training model: %@ (available %lu sessions)
scaleAndAddNoiseToDenseVector failed
PMLLogRegTrainingPlan running with no noise strategy since pluginShouldAddNoiseAndEncryptResult set to false
Invalid session from db (row id %lu): covariatesIndices and covariatesValues must contain the same number of elements (expected bytes length in int/float ratio but got %lu and %lu).
Invalid session from db (row id %lu), covariatesLength has to be %lu, got %lu.
Failed to load sessions for model %@. Error: %@
PMLTrainingStore failed to count total sessions. Error: %@
PMLTrainingStore failed to delete unused sessions. Error: %@
PMLTrainingStore failed to delete over used sessions. Error: %@
PMLTrainingStore failed to count labeled sessions. Error: %@
PMLTrainingStore failed to delete sessions. Error: %@
PMLTrainingStore failed to delete sessions for bundleId=%@. Error: %@
PMLTrainingStore failed to delete sessions for for bundleId=%@ and itemId=%@. Error: %@
PMLTrainingStore failed to delete sessions for bundleId=%@ and domainId=%@. Error: %@
Row returned in sessionStats was null, continuing to iterate as best effort
Row in sessionStats contained unexpected null value, name %@, version %@, locale %@, continuing to iterate as best effort
Failed to load stats about sessions in db. Error: %@
Row returned in enumerateSessionDescriptorsUsingBlock was null, continuing to iterate as best effort
Row in enumerateSessionDescriptorsUsingBlock contained unexpected null value, name %@, version %@, locale %@, continuing to iterate as best effort
PMLTrainingStore notified of device lock state change to %d
Opening db %@.
PMLTrainingStore failed to open/initialize db.
Closing db %@.
PMLTrainingStore failed to enable foreign keys support.
PMLTraining db (%@) corrupted. Flushing.
%@ deallocating
PMLTrainingStore db failed to create new database with skip queries.
Future database version detected (%lu). Giving up on migration.
PMLTrainingStore db failed to migrate but migration is needed.
Migration encountered error during migration of %@: versions %lu, query: %@, error: %@
Row returned in lastTrainingFeaturizationForModelName was null, continuing to iterate as best effort
Row in sessionStats contained unexpected null value, version %@, continuing to iterate as best effort
Failed to load last training featurization in db. Error: %@
Error querying schema: %@
setMaxTimesAccessed should only be called for testing.
db: %@, isUnlocked: %d, isClassCLocked: %d
Invalid noiseMechanism, got: %lld
You must explicitly specify a noise mechanism.
PFLPrivatize call failed
Error extracting floats from sparse rows, status: %d
PMLEspressoTrainingPlan running with no noise strategy since pluginShouldAddNoiseAndEncryptResult set to false
Unable to create task definition, returning nil for PMLEspressoTrainingPlan
Unable to fetch parameters requested in weights and biases during validation, returning nil for PMLEspressoTrainingPlan: %@
Unable to successfully initialize model: %@
Unable to create task definition: %@
An error occured when attempting to get parameters for global variable: %@
An error occured when attempting to get weight for layer: %@
An error occured when attempting to get bias for layer: %@
Returning nil since unable to snapshot starting model parameters: %@
Training was unsuccessful: %@
Returning nil since no training was done
Returning nil and early from training since an error occurred during training
Returning nil since an error occurred when calculating the gradient: %@
Sampling probability is invalid value %f
Returning nil for training metrics since 0 points for ground truth %tu and / or training results %tu
Unable to get ground truth value for key validation: %@
Unable to get %@ key for ground truth: %@
Unable to get training result for key validation: %@
Unable to get %@ key for training result: %@
The number of ground truth values %tu does not match number of inference results %tu
Skipping row for metrics calculation
Unable to get ground truth at index %tu: %@
Unable to get inference results at index %tu: %@
Number of data points: %tu, Loss: %f, Accuracy: %f
Not adding loss or accuracy metrics as no rows were sampled
Unable to init PMLEspressoTrainingPlan because unable to init PMLMetaTrainingVariables
Unable to init PMLEspressoTrainingPlan because unable to init PMLEspressoTrainingVariables
Sending %@ (%d) to AWD.
PMLHashingVectorizer: unknown vectorizer strategy
Instantiating PMLTraining singleton.
PMLTraining failed to get a DESRecordStore for %@
Can't instantiate PMLTraining in %@, becacuse there is already an instance in %@.
Adding session for %@ (label: %tu, length: %tu)
No isMultiLabel information for %@
Failed to send session stats %@ to Fides. Error: %@
Successfully sent stats %@ to Fides.
Failed to delete existing records in DESRecordStore. Error: %@
Won't trim training db because the db is not open.
Trimming training db.
DONE limitSessionsByLastUsedTTL
DONE limitSessionsByMaxTimesAccessed
Removing training samples for %@
DONE limitSessionsWithSessionDescriptor:(%@) withLabel:nil
DONE limitSessionsForEachLabelWithSessionDescriptor:(%@)
Vacuuming training db.
We've been asked to defer. Skipping remaining work.
Error deserializing plan with exception %@
Training plan deserialized without exception but is nil
Ignoring synchronous plan %@ because the db is not open.
Running %@ synchronously
Plan %@ completed run. Result present? %d.
Unable to train with Espresso because recipe flag IS_ESPRESSO_TRAINING is not set
Unable to train because chunk path %@ or training network path %@ not found in %lu attachments
Unable to train because chunk file contents were empty
Sending weights for model %@
Sending gradient for model %@
Sending evaluation metrics for %@
Could not open chunk file at %@: %@
Chunk descriptor out of bounds: ends at %llu in data of length %llu
Could not parse chunk %u; bailing out
Error writing plist chunk: %@
Error loading plist chunk: %@
Unable to read Espresso network file at: %@
Returning nil for PMLLexicon since unable to initialize lexicon
Falling back to default system lexicon since lexicon at following path is invalid in existence: %@
Returning 0 for word id since token is not in lexicon: %@
Evaluating plan %@ (descriptor: %@, available %lu sessions)
Out of range index %lu requested from PMLEspressoDataProvider of size %lu
PMLSparseVector: unknown vector normalization method
PMLSparseVector: dimensions do not match between source sparse vector (%llu) and destination dense vector (%llu)
Error writing object to NSData: %@
Error reading object from NSData: %@
softlink:o:path:/System/Library/PrivateFrameworks/PrivateFederatedLearning.framework/PrivateFederatedLearning
PMLMultiLabelEspressoClassifier
PMLMultiLabelClassifierProtocol
NSObject
PMLInMemoryCachedStore
PMLPlanSimulator
PMLTrackerParsecAdapter
PMLTrackerAdapterProtocol
AWDProactiveModelFittingEvaluation
NSCopying
AWDProactiveModelFittingLogRegWeights
PMLGradientResults
PMLGradientSolver
PMLMultiLabelRegressionEvaluationPlan
PMLPlanProtocol
PMLPlistAndChunksSerializableProtocol
AWDProactiveModelFittingLinRegObjectiveFeatures
AWDProactiveModelFittingQuantizedSparseVector
AWDProactiveModelFittingModelInfoStatsPair
PMLLabelLimitRowId
PMLLogRegTrainingPlan
AWDProactiveModelFittingLinRegFeatureMatrix
PML_VisibleForTesting
AWDProactiveModelFittingSparseFloatVector
PMLLaplaceSampler
PMLSampler
PMLTrainingLogEntry
PMLTrainingStore
AWDProactiveModelFittingSparseFloatMatrix
PMLImmutableLogisticRegressionModel
PMLPlanDescriptor
AWDProactiveModelFittingQuantizedSparseMatrix
PMLMobileAssetParameterGetStrategy
PMLChunkToVec
PMLPlistAndChunksSerialization
PMLMultiLabelLogisticRegressionModel
PMLMultiLabelClassifierModelProtocol
PMLDiffPrivacyNoiseStrategy
PMLNoiseStrategy
PMLClassificationEvaluationMetrics
AWDProactiveModelFittingModelInfo
VisibleForTesting
PMLAWDEvaluationTrackerMock
PMLTrainingDatabaseMigrations
PMLDenseVector
NSMutableCopying
PMLMutableDenseVector
AWDProactiveModelFittingEvalMetrics
PMLSeparatedDPNoiseStrategy
PMLTrainingMock
PMLTrainingProtocol
PMLSparseMatrix
PMLAWDSessionTracker
PMLMetaTrainingVariables
PMLEspressoTrainingPlan
AWDProactiveModelFittingSession
PMLPlanWrapper
PMLPlanSerialization
PMLTrackerAWDAdapter
PMLNoNoiseStrategy
AWDProactiveModelFittingLabelSupportPair
PMLLogisticRegressionModel
PMLGaussianSampler
PMLModelRegressor
PMLMultiLabelE5Classifier
PMLHashingVectorizer
PMLTransformerProtocol
PMLJson
PMLFidesTracker
PMLLogRegTrackerProtocol
PMLEvaluationTrackerProtocol
PMLMultiLabelEvaluationTrackerProtocol
PMLAWDSessionTrackerMock
PMLDenseMatrix
PMLSessionDescriptor
PMLSpotlightReference
PMLTraining
PMLAWDMetricQueryDelegate
PMLProtoBufTracker
PMLMockPlan
AWDProactiveModelFittingQuantizedDenseVector
PMLDataChunk
PMLDataChunkRaw
PMLDataChunkPlist
PMLDataChunkDenseFloatVector
PMLDataChunkDenseDoubleVector
PMLAWDLogisticRegTrackerMock
PMLWordPieceTokenizer
AWDProactiveModelFittingMinibatchStats
PMLEspressoTrainingVariables
PMLModelWeights
AWDProactiveModelFittingParsecFeedbackEnvelope
PMLTrainingStoredSessionBatch
PMLTrackerMockAdapter
PMLLexicon
PMLLogRegEvaluationPlan
PMLAWDBaseTracker
PMLEspressoDataProvider
ETDataProvider
PMLWordPieceVocabTrie
PMLWordPieceVocabProtocol
PMLAWDAvailableSessionsTracker
PMLSparseVector
AWDProactiveModelFittingPrecisionAtKPair
PMLPlistClassWrapper
PMLPassThroughTracker
AWDProactiveModelFittingLogRegGradient
T@"AWDProactiveModelFittingEvalMetrics",&,N,V_evaluationMetrics
T#,R
T@"AWDProactiveModelFittingMinibatchStats",&,N,V_minibatchStats
T@"<PMLLogRegTrackerProtocol>",R,N,V_tracker
TQ,R,N,V_currentServerIteration
T@"<PMLMultiLabelEvaluationTrackerProtocol>",R,N,V_tracker
TQ,R,N,V_localMinimumIterations
T@"<PMLPlanProtocol>",R,N,V_plan
T^Q,R,N
T@"AWDProactiveModelFittingEvaluation",&,N,V_evaluation
Tf,N,V_featureMatrixScaleFactor
T@"AWDProactiveModelFittingLinRegObjectiveFeatures",&,N,V_linRegObjectiveFeatures
_cachedSessions
T@"AWDProactiveModelFittingMinibatchStats",&,N,V_stats
_dbPath
T@"AWDProactiveModelFittingModelInfo",R,N,V_modelInfo
_epochsPerBatch
T@"AWDProactiveModelFittingQuantizedDenseVector",&,N,V_denseQuantizedWeights
T@"AWDProactiveModelFittingQuantizedSparseVector",&,N,V_sparseQuantizedFeatures
_falsePositives
T@"AWDProactiveModelFittingQuantizedSparseVector",&,N,V_sparseQuantizedWeights
_featuresL2norm
T@"AWDProactiveModelFittingSparseFloatVector",&,N,V_sparseFloatFeatures
_idVectorLength
T@"AWDProactiveModelFittingSparseFloatVector",&,N,V_sparseFloatWeights
_locale
T@"NSArray",R,N,V_collectedSessions
_matrix
T@"NSArray",R,N,V_globalsToGetGradientsFor
_models
T@"NSArray",R,N,V_labelsToTrainOn
_noiseMechanism
T@"NSArray",R,N,V_layerWeightsToGetGradientsFor
_planId
T@"NSArray",R,N,V_trackedSessions
_positiveScores
T@"NSData",R,N
_stores
T@"NSMutableArray",&,N,V_perLabelSupports
_values
T@"NSMutableData",R,N,V_mutableData
allKeys
T@"NSString",&,N,V_locale
argmax:
T@"NSString",&,N,V_version
chunksFromData:
T@"NSString",R,N
confidenceScore
T@"NSString",R,N,V_domainIdentifier
copyTo:
T@"NSString",R,N,V_inputName
dealloc
T@"NSString",R,N,V_locale
evaluationLevel
T@"NSString",R,N,V_name
getBytes:range:
T@"NSString",R,N,V_planId
getTensorNamed:
T@"NSString",R,N,V_trainingOutputName
hasColumnLength
T@"NSString",R,N,V_version
hasRmse
T@"PMLModelRegressor",&,N,V_objective
indices
T@"PMLModelWeights",&,N,V_weights
initWithFormat:
T@"PMLMutableDenseVector",R,N,V_gradient
initWithModels:
T@"PMLSparseMatrix",&,N,V_covariates
initWithPlanId:numberOfBuckets:
T@"PMLTrainingStore",R,N,V_store
initializerName
TB,N
isInMemoryPath:
TB,N,V_isSymmetric
isProxy
TB,R,N,V_intercept
TB,R,N,V_reportScale
lastInsertRowId
TB,R,N,V_useOnlyAppleInternalSessions
minibatchStatsForPositiveLabel:
TI,N,V_length
numberOfColumns
TI,R,D,N
numberWithLong:
TQ,N,V_columnLength
pattern
TQ,N,V_falsePositives
TQ,N,V_k
rowIndicesCount
TQ,N,V_length
serverIteration
TQ,N,V_rowLength
setHasFeatureMatrixScaleFactor:
TQ,N,V_timestamp
setIsSymmetric:
TQ,N,V_truePositives
solverWithWeights:andIntercept:
TQ,R,N
stringByAppendingPathComponent:
TQ,R,N,V_epochsPerBatch
supervisionType
TQ,R,N,V_inputDim
toChunk
TQ,R,N,V_maxSessionsLimit
tracker
TQ,R,N,V_numberOfColumns
transformBatch:
TQ,R,N,V_positiveLabel
weights
TQ,R,N,V_serverIteration
.cxx_destruct
T@"AWDProactiveModelFittingLogRegGradient",&,N,V_logRegGradient
T@"<PMLEvaluationTrackerProtocol>",R,N,V_tracker
TB,R,N,V_didRun
T@"<PMLMultiLabelClassifierModelProtocol>",R,N,V_multiLabelRegressionModel
TQ,R,N,V_length
T@"<PMLNoiseStrategy>",R,N,V_noiseStrategy
T^I,R,N
T@"<PMLTrackerAdapterProtocol>",R,N,V_adapter
T^f,R,N
T@"AWDProactiveModelFittingLinRegFeatureMatrix",&,N,V_linRegFeatureMatrix
Tf,N,V_minValue
T@"AWDProactiveModelFittingLogRegWeights",&,N,V_logRegWeights
T@"AWDProactiveModelFittingModelInfo",&,N,V_modelInfo
_didRun
T@"AWDProactiveModelFittingQuantizedDenseVector",&,N,V_denseQuantizedGradient
_extraIdOptions
T@"AWDProactiveModelFittingQuantizedSparseMatrix",&,N,V_sparseQuantizedFeatureMatrix
_falseNegatives
T@"AWDProactiveModelFittingQuantizedSparseVector",&,N,V_sparseQuantizedGradient
_featureVersion
T@"AWDProactiveModelFittingSparseFloatMatrix",&,N,V_sparseFloatFeatureMatrix
_gradientL2norm
T@"AWDProactiveModelFittingSparseFloatVector",&,N,V_sparseFloatGradient
_length
T@"NSArray",R,D,N
_logRegGradient
T@"NSArray",R,N,V_evaluationPoints
_minibatchStats
T@"NSArray",R,N,V_itemIdentifiers
_negativeScores
T@"NSArray",R,N,V_layerBiasesToGetGradientsFor
_parsed
T@"NSArray",R,N,V_positiveLabels
_positiveLabels
T@"NSArray",R,N,V_weightsArray
_solver
T@"NSDictionary",R,N,V_migrations
_taskDefinition
T@"NSMutableArray",&,N,V_precisionAtKs
adapter
T@"NSNumber",R,N,V_loss
append:
T@"NSString",&,N,V_name
chunkWithPlist:
T@"NSString",R,C
clearRowIndices
T@"NSString",R,N,V_bundleIdentifier
containsObject:
T@"NSString",R,N,V_initializerName
createSnapshot:
T@"NSString",R,N,V_label
density
T@"NSString",R,N,V_lossValueName
featureMatrixValueAtRow:column:
T@"NSString",R,N,V_outputName
getNumParametersFromShape:rank:
T@"NSString",R,N,V_trainingControlVariableName
getTotalEntries
T@"NSString",R,N,V_trueLabelName
hasName
T@"NSURL",R,N,V_trainingNetworkPath
hasSparseQuantizedFeatureMatrix
T@"PMLModelRegressor",R,N,V_outcomes
indicesAtIndex:
T@"PMLModelWeights",R,N,V_currentModelWeights
initWithLength:
T@"PMLSessionDescriptor",R,N,V_sessionDescriptor
initWithPlanId:
T@"PMLSparseMatrix",R,N,V_covariates
initWithSolver:
T@,R,N
isEqualToMetaTrainingVariables:
TB,N,V_intercept
isInternalBuild
TB,R,N
itemIdentifiers
TB,R,N,V_isMultiLabel
labelsToTrainOn
TB,R,N,V_summableMetricsOnly
limitSessionsByMaxTimesAccessed
TI,N,V_columnLength
modelInfoFromSessionDescriptor:
TI,N,V_rowLength
numberWithBool:
TQ,N,V_batchSize
outputDimension
TQ,N,V_falseNegatives
prepareForEpoch
TQ,N,V_iteration
release
TQ,N,V_label
scaleInPlaceWithInversedFactor:
TQ,N,V_numberOfNonZeroValues
sessionsInBatch
TQ,N,V_supervisionType
setHasMinValue:
TQ,N,V_trueNegatives
setUserVersion:
TQ,R
startId
TQ,R,N,V_count
subSessionLabel
TQ,R,N,V_evaluationLevel
support
TQ,R,N,V_localGradientIterations
trackedSessions
TQ,R,N,V_maxSessionsToTrainOn
trainingSetSize
TQ,R,N,V_numberOfRows
version
TQ,R,N,V_quantizationNumberOfBuckets
wrappedMessage:
TQ,R,N,V_sessionsInBatch
TQ,R,N,V_trainingSetSize
TQ,V_version
T^f,N,V_sparseValues
T^q,N,V_sparseIndices
T^{sparse_m_float=},N,V_matrix
Td,R,N,V_lossThresholdForStopping
Td,R,N,V_probThreshold
Td,R,N,V_timestamp
Tf,N,V_bucketSize
Tf,N,V_confidenceScore
Tf,N,V_f1
Tf,N,V_featureMatrixL2norm
Tf,N,V_featuresL2norm
Tf,N,V_featuresScaleFactor
Tf,N,V_gradientL2norm
Tf,N,V_gradientScaleFactor
Tf,N,V_minimumMagnitude
Tf,N,V_precision
Tf,N,V_rmse
Tf,N,V_secsToExecute
Tf,N,V_support
Tf,N,V_weightsL2norm
Tf,N,V_weightsScaleFactor
Tf,R,N,V_localLearningRate
Tf,R,N,V_stoppingThreshold
Ti,R,N
Tq,N,V_noiseMechanism
Tq,R,N,V_limit
Tq,R,N,V_rowId
Tr^d,R,N
Tr^f,R,N
T{?=ff},N,V_noiseScaleFactors
UTF8String
_adapter
_allowSkipSchema
_availableSessionsTracker
_awdServerConnection
_backingData
_backingObject
_batchPredictionCalculator
_batchSize
_bucketSize
_buckets
_bundleIdentifier
_calculateGradientInPlaceForTask:startingParameters:globalNames:weightNames:biasNames:
_calculateTrainingMetricsWithSamplingProb:groundTruthProvider:predictionsProvider:trueLabelName:trainingOutputName:lossValueName:probThreshold:includeSummableOnly:
_characterNGramRange
_classNameKey
_collectedSessions
_columnIndices
_columnLength
_confidenceScore
_count
_covariates
_currentModelWeights
_currentServerIteration
_data
_delegate
_deleteAllSavedRecordsFromFidesStoreSync
_denseQuantizedGradient
_denseQuantizedWeights
_domainIdentifier
_endId
_enumerateSparseRowsWithBlock:
_espressoContext
_espressoModel
_espressoPlan
_etv
_evaluation
_evaluationLevel
_evaluationMetrics
_evaluationPoints
_featureMatrixL2norm
_featureMatrixScaleFactor
_featuresScaleFactor
_fidesStore
_getModelParametersForTask:globalNames:weightNames:biasNames:error:
_globalsToGetGradientsFor
_gradient
_gradientCalculator
_gradientScaleFactor
_groundTruth
_has
_indices
_initializedWithNSData
_initializerName
_inplaceNorm
_inputBuffer
_inputDim
_inputName
_inputNumParameters
_intercept
_internalCollectedSessions
_internalTrackedSessions
_isMultiLabel
_isSymmetric
_itemIdentifiers
_iterateModelParametersForTask:globalNames:weightNames:biasNames:block:
_iteration
_label
_labelsData
_labelsToTrainOn
_lastTrainingFeaturizations
_layerBiasesToGetGradientsFor
_layerWeightsToGetGradientsFor
_learningRate
_lexicon
_limit
_linRegFeatureMatrix
_linRegObjectiveFeatures
_loadBatchForModel:privacyBudgetRefreshPeriod:labels:batchSize:block:
_loadDataForModel:positiveRowId:negativeRowId:excludeItemIdsUsedWithin:limit:onlyAppleInternal:positiveLabel:skew:block:
_loadDataForModel:privacyBudgetRefreshPeriod:labelAndStartRows:batchSize:supportPerLabel:block:
_loadDataFromLabelAndTuples:model:numberOfRows:numberOfColumns:lastUsedMax:block:
_localGradientIterations
_localLearningRate
_localMinimumIterations
_localeForNonwordTokens
_lockStateNotificationToken
_logRegWeights
_loss
_lossThresholdForStopping
_lossValueName
_magnitude
_maxIterations
_maxSessionsLimit
_maxSessionsToTrainOn
_maxTimesAccessed
_migrate:forStore:
_migrations
_minIterations
_minValue
_minimumMagnitude
_modelInfo
_mtv
_multiLabelRegressionModel
_mutableData
_name
_newTaskForTraining
_noiseScaleFactors
_noiseStrategy
_numberOfColumns
_numberOfDataPoints
_numberOfNonZeroValues
_numberOfRows
_objective
_openDbIfUnlocked
_outcomes
_outputName
_outputNumReplyClasses
_paddingId
_parseFeatureVersion:descriptor:
_perLabelSupports
_pflIdentifier
_plan
_plist
_positiveLabel
_precision
_precisionAtEvaluationPointsForSessions:
_precisionAtKs
_predictionCalculator
_probThreshold
_quantizationNumberOfBuckets
_randomStore
_randomStores:
_rankedLabelsForSession:
_registerUnlockHandler
_reportScale
_results
_resultsLock
_returnValue
_rmse
_rng
_rowId
_rowIndices
_rowLength
_rowsData
_runQueries:andUpdateVersionTo:inTransactionOnDb:forStore:
_secsToExecute
_seed
_sendStatsToFidesForModel:sessionCount:positivesCount:negativesCount:support:
_sendStatsToFidesForMultiLabelModel:sessionCount:labeledStats:
_serverIteration
_sessionDataToBatchWithNumberOfColumns:rowsData:labelsData:
_sessionDescriptor
_sessionsInBatch
_shouldNormalizeCharacters
_shouldNormalizeTokens
_skew
_sparseFloatFeatureMatrix
_sparseFloatFeatures
_sparseFloatGradient
_sparseFloatWeights
_sparseIndices
_sparseQuantizedFeatureMatrix
_sparseQuantizedFeatures
_sparseQuantizedGradient
_sparseQuantizedWeights
_sparseValues
_startId
_stats
_stoppingThreshold
_store
_summableMetricsOnly
_superdata
_supervisionType
_support
_threshold
_timestamp
_tokenNGramRange
_tokenizeNewlines
_trackedMessages
_trackedSessions
_tracker
_trainWithRecipe:chunkData:args:error:
_trainingControlVariableName
_trainingNetworkPath
_trainingOutputName
_trainingPredictions
_trainingSetSize
_trueLabelBuffer
_trueLabelName
_trueNegatives
_truePositives
_truncateDbIfCorrupted
_unregisterUnlockHandler
_unsafeOpenDbIfUnlocked
_updateResultsReferenceCallback:
_useOnlyAppleInternalSessions
_vectorNormalization
_vectorizerStrategy
_version
_vocab
_weights
_weightsArray
_weightsL2norm
_weightsScaleFactor
_writeDataForTransparency:
absoluteString
addColumnIndices:
addEntriesFromDictionary:
addIndexesInRange:
addIndices:
addNegativeScores:
addNoiseToSparseMatrix:
addNoiseToSparseVector:
addObject:
addPerLabelSupport:
addPositiveScores:
addPrecisionAtK:
addRowIndices:
addScoresForOutcomes:predictions:predicate:metrics:
addSessionWithCovariates:label:sessionDescriptor:spotlightReference:isInternal:
addStartId:endId:paddingId:withMaxVectorLength:
addValues:
allValues
allocWithZone:
append:count:
appendBytes:length:
appendData:
appendFormat:
appendString:
applyOneHotNormalization
arrayWithObjects:count:
asMutableDenseVector
attributesOfItemAtPath:error:
autorelease
availableSessionsStatsReportedToAWD
awdTrackerForPlanId:
baseSessionDescriptor
batchPredict:
batchSize
bindNamedParam:toDouble:
bindNamedParam:toInt64:
bindNamedParam:toInteger:
bindNamedParam:toNSArray:
bindNamedParam:toNSData:
bindNamedParam:toNSString:
boolValue
bucketSize
bundleIdentifier
bytes
cStringUsingEncoding:
cachedStoreFromRealStore:sessionDescriptor:sessionsLimit:
chunkOfType:data:superdata:
chunkWithData:
chunkWithVector:count:
chunksFromFileAtPath:
class
classifierWithE5File:
classifierWithEspressoModelFile:
clearAllTrackedMessages
clearBuffers
clearCollectedSessions
clearColumnIndices
clearIndices
clearLastDeserializedPlans
clearNegativeScores
clearPerLabelSupports
clearPositiveScores
clearPrecisionAtKs
clearTrackedMessages
clearTrackedSessions
clearValues
closeDbForTesting
closePermanently
collectedSessions
columnIndices
columnIndicesAtIndex:
columnIndicesCount
columnLength
combineWithStats:
compare:
componentsSeparatedByString:
computeAvgGradientWithIterations:
conformsToProtocol:
constWeightsOfLength:value:
convertToBagOfIds
convertToBagOfIdsVectorForModel:
copy
copyWithZone:
corruptionMarkerPathForPath:
cosineDistanceFrom:
count
countByEnumeratingWithState:objects:count:
covariates
createDefaultSampler
createSamplerByName:
currentHandler
currentModelWeights
currentServerIteration
data
dataArray
dataChunkType
dataPointAtIndex:error:
dataPointer
dataWithBytesNoCopy:length:freeWhenDone:
dataWithContentsOfFile:
dataWithContentsOfURL:
dataWithPropertyList:format:options:error:
date
dbForTesting
debugDescription
defaultManager
deleteAllSavedRecordsWithCompletion:
deleteSessionsWithBundleID:
deleteSessionsWithBundleId:
deleteSessionsWithBundleId:domainId:
deleteSessionsWithBundleId:itemId:
deleteSessionsWithDomainIdentifiers:bundleID:
deleteSessionsWithIdentifiers:bundleID:
denseMatrixFromData:numberOfRows:numberOfColumns:
denseMatrixFromNumbers:
denseQuantizedGradient
denseQuantizedWeights
denseVector
denseVectorFromNumbers:
description
descriptorForName:version:locale:
descriptorFromPlanId:
dictionary
dictionaryRepresentation
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:
dictionaryWithObjects:forKeys:count:
didRun
doTrainingOnData:forNumberOfEpochs:withCallback:error:
domainIdentifier
doubleValue
endId
enumerateIndexesUsingBlock:
enumerateKeysAndObjectsUsingBlock:
enumerateNonZeroValuesForRow:withBlock:
enumerateNonZeroValuesWithBlock:
enumerateObjectsUsingBlock:
enumerateSessionDescriptorsUsingBlock:
enumerateValuesWithBlock:
epochsPerBatch
errorWithDomain:code:userInfo:
evalMetricsWithRmse:f1:
evalMetricsWithRmse:f1:truePositives:trueNegatives:falsePositives:falseNegatives:
evaluation
evaluationMetrics
evaluationMetricsForPredictions:objectives:predicate:start:
evaluationPoints
exceptionWithName:reason:userInfo:
f1Score:predictions:predicate:
falseNegatives
falseNegatives:predictions:predicate:
falsePositives
falsePositives:predictions:predicate:
featureMatrixL2norm
featureMatrixScaleFactor
featureVersion
featuresL2norm
featuresLength
featuresScaleFactor
featuresValueAtIndex:
fileExistsAtPath:
fileSize
filename
first
firstMatchInString:options:range:
firstObject
floatValue
frailWriteTransaction:
gaussianNoiseWithScaleFactor:minimumMagnitude:seed:
getCharacters:range:
getInt64ForColumn:
getIntegerForColumn:
getNSDataForColumn:
getNSStringForColumn:
getPFLIdentifier:
getParameterOfType:forLayerNamed:error:
getSchema:
getWordIDforToken:
globalsToGetGradientsFor
gradient
gradientL2norm
gradientLength
gradientScaleFactor
gradientValueAtIndex:
handleFailureInFunction:file:lineNumber:description:
handleFailureInMethod:object:file:lineNumber:description:
hasBatchSize
hasBucketSize
hasConfidenceScore
hasDenseQuantizedGradient
hasDenseQuantizedWeights
hasEvaluation
hasEvaluationMetrics
hasF1
hasFalseNegatives
hasFalsePositives
hasFeatureMatrix
hasFeatureMatrixL2norm
hasFeatureMatrixScaleFactor
hasFeaturesL2norm
hasFeaturesScaleFactor
hasGradient
hasGradientL2norm
hasGradientScaleFactor
hasIteration
hasK
hasLabel
hasLength
hasLinRegFeatureMatrix
hasLinRegObjectiveFeatures
hasLocale
hasLogRegGradient
hasLogRegWeights
hasMinValue
hasMinibatchStats
hasModelInfo
hasObjectiveFeatures
hasPrecision
hasPrefix:
hasRowLength
hasSecsToExecute
hasSparseFloatFeatureMatrix
hasSparseFloatFeatures
hasSparseFloatGradient
hasSparseFloatWeights
hasSparseQuantizedFeatures
hasSparseQuantizedGradient
hasSparseQuantizedWeights
hasStats
hasSupervisionType
hasSupport
hasTimestamp
hasTrueNegatives
hasTruePositives
hasVersion
hasWeights
hasWeightsL2norm
hasWeightsScaleFactor
hash
inMemoryStoreForTesting
indexOfObject:
indicesAsUInt16Data
indicesCount
indicesData
init
initFromDictionary:
initModelRegressorFromFloats:
initModelWeightsFromFloats:
initWithAWDConnection:
initWithAdapter:modelInfo:
initWithAdapter:modelInfo:quantizationBuckets:
initWithBlock:
initWithBucketSize:characterNGramRange:tokenNGramRange:shouldNormalizeTokens:shouldNormalizeCharacters:localeForNonwordTokens:tokenizeNewlines:idVectorLength:extraIdOptions:vectorizerStrategy:vectorNormalization:vocab:
initWithBucketSize:ngrams:localeForNonwordTokens:tokenizeNewlines:
initWithBundleId:domainId:itemIds:
initWithBundleIdentifier:
initWithBytes:length:
initWithBytesNoCopy:length:deallocator:
initWithBytesNoCopy:length:freeWhenDone:
initWithCapacity:
initWithChunk:intercept:
initWithClassNameKey:
initWithComponentId:
initWithContentsOfFile:options:error:
initWithCount:
initWithCovariates:outcomes:
initWithData:
initWithData:numberOfRows:numberOfColumns:
initWithData:type:shape:strides:
initWithEspressoContext:espressoPlan:espressoModel:inputNumParameters:outputNumReplyClasses:
initWithFloat:
initWithFloats:count:
initWithFloatsNoCopy:count:deallocator:
initWithFloatsNoCopy:count:freeWhenDone:
initWithFloatsNoCopy:count:intercept:
initWithGradient:loss:
initWithIndexesInRange:
initWithLabel:limit:rowId:
initWithLearningRate:minIterations:stoppingThreshold:weights:intercept:gradientCalculator:predictionCalculator:batchPredictionCalculator:
initWithLength:numberOfNonZeroValues:indices:values:
initWithLength:numberOfNonZeroValues:indicesData:valuesData:
initWithMagnitude:
initWithMagnitude:seed:
initWithMaxIterationCount:noiseScaleFactors:minimumMagnitude:noiseMechanism:inplaceNorm:
initWithMaxIterationCount:noiseScaleFactors:minimumMagnitude:seed:noiseMechanism:inplaceNorm:
initWithMetaTrainingVariables:espressoTrainingVariables:
initWithMigrations:
initWithModel:
initWithMutableData:
initWithName:version:locale:
initWithNumbers:
initWithObjects:forKeys:
initWithPFLIdentifier:
initWithPath:
initWithPath:allowSkipSchema:
initWithPlan:
initWithPlanId:store:
initWithPlanId:store:noiseStrategy:sessionDescriptor:maxSessionsToTrainOn:trainingSetSize:labelsToTrainOn:currentServerIteration:lossThresholdForStopping:epochsPerBatch:probThreshold:evaluationLevel:reportScale:summableMetricsOnly:
initWithPlanId:store:sessionDescriptor:maxSessionsLimit:sessionsInBatch:labelAndWeights:modelClassName:intercept:evaluationPoints:tracker:evaluationLevel:
initWithPlanId:store:version:returningAfterRunning:
initWithPlanId:version:
initWithPlanId:version:returningAfterRunning:
initWithPlist:chunks:context:
initWithRegressorFromFloat:
initWithRowsData:labelsData:inputName:inputDim:trueLabelName:
initWithSeed:
initWithSessionBatch:
initWithSparseMatrix:
initWithStore:fidesStore:availableSessionsTracker:
initWithStore:tracker:noiseStrategy:planId:sessionDescriptor:maxSessionsLimit:sessionsInBatch:currentServerIteration:currentModelWeights:localLearningRate:stoppingThreshold:localMinimumIterations:localGradientIterations:useOnlyAppleInternalSessions:skew:threshold:isMultiLabel:intercept:positiveLabel:evaluationLevel:reportScale:
initWithStore:tracker:planId:sessionDescriptor:maxSessionsLimit:sessionsInBatch:currentModelWeights:intercept:skew:threshold:isMultiLabel:positiveLabel:evaluationLevel:
initWithStores:sessionDescriptor:seed:
initWithTimestamp:serverIteration:
initWithTrainingModelDefinition:forPlatform:error:
initWithTrainingNetworkPath:inferenceInputs:inferenceOutputs:trainingInputs:trainingOutputs:trainingControlVariableName:withInitializer:error:
initWithTrainingNetworkPath:inputName:inputDim:outputName:trueLabelName:lossValueName:trainingOutputName:trainingControlVariableName:initializerName:globalsToGetGradientsFor:layerWeightsToGetGradientsFor:layerBiasesToGetGradientsFor:
initWithType:data:
initWithVersion:
initWithVocab:
initWithWeights:intercept:
initWithWeightsArray:andIntercept:
initializeDatabase:withContentProtection:newDatabaseCreated:errorHandler:
inputDim
inputName
insertIntoTable:dictionary:
intValue
integerValue
intercept
inverseValues
isBetaBuild
isClassCLocked
isDNUEnabled
isDbOpen
isEqual:
isEqualToData:
isEqualToEspressoTrainingPlan:
isEqualToEspressoTrainingVariables:
isEqualToHashingVectorizer:
isEqualToLabelLimitRowId:
isEqualToString:
isKindOfClass:
isMemberOfClass:
isMultiLabel
isMultiLabelModel:
isReadableFileAtPath:
isSubSessionDescriptor
isSymmetric
isUnlocked
isValidGradient:error:
isValidPlanId:
iteration
l1norm
l2norm
label
labelLimitRowIdWithLabel:limit:rowId:
lastDeserializedPlanWithId:
lastDeserializedPlansMap
lastObject
lastTrainingFeaturizationForModelName:andLocale:
lastUsedTimestampLimit
layerBiasesToGetGradientsFor
layerWeightsToGetGradientsFor
length
limit
limitSessionsByLastUsedTTL:
limitSessionsForEachLabelWithSessionDescriptor:totalSessionLimit:
limitSessionsWithSessionDescriptor:withLabel:limit:
linRegFeatureMatrix
linRegObjectiveFeatures
loadDataForModel:excludeItemIdsUsedWithin:limit:onlyAppleInternal:positiveLabel:skew:block:
loadDataForModel:privacyBudgetRefreshPeriod:labels:batchSize:block:
loadSessionsForModel:excludeItemIdsUsedWithin:limit:onlyAppleInternal:block:
loadSessionsForModel:excludeItemIdsUsedWithin:limit:onlyAppleInternal:positiveLabel:skew:block:
loadSessionsForModel:excludeItemIdsUsedWithin:withSkew:andLimit:block:
loadSessionsForModel:privacyBudgetRefreshPeriod:labels:batchSize:block:
loadSessionsWithBlock:
localGradientIterations
localLearningRate
localMinimumIterations
locale
localeIdentifier
localeWithLocaleIdentifier:
lock
logDbNotOpenEvent
logRegGradient
logRegWeights
longValue
loss
lossThresholdForStopping
lossValueName
makeStringForShape:
matchesInString:options:range:
matrix
matrixWithConstantColumn
maxAbsValue
maxSessionsLimit
maxSessionsToTrainOn
maxValue
maxVersion
mergeFrom:
messageForGradient:scaleFactor:minibatchStats:evaluationMetrics:serverIteration:modelInfo:numberOfBuckets:
messageForWeights:scaleFactor:minibatchStats:evaluationMetrics:modelInfo:numberOfBuckets:
migrate:to:forStore:
migrateDenseDoubleVectorToDenseFloatVector:
migrateTo:
migrations
minValue
minibatchStats
minibatchStatsForPositiveLabels:
minimumMagnitude
mockMigrationsByAddingQueries:
mockTracker
mockTrackerForPlanId:
modelInfo
modelInfoFromPlanId:
modelRegressorFromFloat:
modelRegressorFromFloats:
modelWeightsFromFloats:
modelWeightsOfLength:
modelWeightsOfLength:rng:
modelWeightsOfLength:rngSeed:
multiLabelRegressionModel
mutableBytes
mutableCopy
mutableCopyWithZone:
mutableData
mutablePtr
name
negativeScores
negativeScoresAtIndex:
negativeScoresCount
next
nextDouble
noiseMechanism
noiseScaleFactors
noiseStrategy
normalizeRegressor:
null
numberOfDataPoints
numberOfMatchesInString:options:range:
numberOfNonZeroValues
numberOfParametersInTensor:
numberOfRanges
numberOfRows
numberOfRowsInTable:
numberWithDouble:
numberWithFloat:
numberWithInt:
numberWithInteger:
numberWithLongLong:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLong:
numberWithUnsignedLongLong:
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
objective
originalValueAtIndex:
originalValueAtRow:column:
outcomes
outputName
padId
parsecTrackerForPlanId:
path
pathExtension
payloadForString:
perLabelSupportAtIndex:
perLabelSupportType
perLabelSupports
perLabelSupportsCount
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
plan
planFromData:store:trainingNetworkPath:
planFromData:withArgs:
planFromData:withStore:
planId
planIdFromString:
planReceivedWithPayload:error:
planReceivedWithRecipe:attachments:error:
planWithStore:tracker:sessionDescriptor:arguments:
plist
pluginShouldAddNoiseAndEncryptResult:
pointerValue
positiveLabel
positiveLabels
positiveScores
positiveScoresAtIndex:
positiveScoresCount
postMetricId:message:
precision
precision:predictions:predicate:
precisionAtK:
precisionAtKAtIndex:
precisionAtKType
precisionAtKs
precisionAtKsCount
predict:
prepAndRunQuery:onPrep:onRow:onError:
probThreshold
processInfo
processName
processNonZeroValuesInPlaceWithBlock:
processValuesInPlaceWithBlock:
propertyListWithData:options:format:error:
quantizationNumberOfBuckets
quantizedDenseVectorFromDenseVector:numberOfBuckets:
quantizedSparseMatrixFromSparseMatrix:numberOfBuckets:
quantizedSparseVectorFromDenseVector:numberOfBuckets:
quantizedSparseVectorFromSparseVector:numberOfBuckets:
quantizedValuesAsUInt8DataWithMin:max:
raise
raise:format:
randomlyNamedInMemoryPathWithBaseName:
rangeAtIndex:
readFrom:
readObjectWithData:chunks:context:
readObjectWithPlist:chunks:context:
readTransaction:
recall:predictions:predicate:
referenceWithBundleId:domainId:itemIds:
registerForLockStateChangeNotifications:
registerQueriableMetric:callback:
regressorFor:
regressorVectorFrom:
regularExpressionWithPattern:options:error:
removeAllObjects
removeIndex:
removeItemAtPath:error:
replaceBytesInRange:withBytes:
reportScale
reportStatsToAWD
resetBytesInRange:
respondsToSelector:
result
retain
retainCount
rmse
roundFloatToSigFigs:sigFigs:
rowId
rowIndices
rowIndicesAtIndex:
rowLength
runBlockWithTrie:
runParallelPlansWithPlanId:tracker:noiseScaleFactors:noiseMinimumMagnitude:weights:serverIteration:useIntercept:noiseMechanism:usingRandomlySelected:
runWithError:
sample
samplerWithScaleFactorFor:usingNorm:
saveRecordWithData:recordInfo:completion:
scaleAndAddNoiseToDenseVector:usingNorm:scaleFactor:
scaleInPlaceWithFactor:
scaleWithVectorNormalization:
second
secsToExecute
self
sendCustomFeedback:
sendSessionStatsToFides
serialize
serializeChunks:
serializeLexiconToFile:tokenToWordIDDict:
serializePlan:
sessionDescriptor
sessionDescriptorIdFor:
sessionDimensionsForModel:startingRowId:onlyAppleInternal:labelFilter:
sessionStats
sessionStatsForSessionDescriptor:
setAWDMetricQueryDelegate:
setBatchSize:
setBucketSize:
setColumnIndices:count:
setColumnLength:
setConfidenceScore:
setCovariates:
setDenseQuantizedGradient:
setDenseQuantizedWeights:
setDictionary:
setEvaluation:
setEvaluationMetrics:
setF1:
setFalseNegatives:
setFalsePositives:
setFeatureMatrixL2norm:
setFeatureMatrixScaleFactor:
setFeaturesL2norm:
setFeaturesScaleFactor:
setGradientL2norm:
setGradientScaleFactor:
setHasBatchSize:
setHasBucketSize:
setHasColumnLength:
setHasConfidenceScore:
setHasF1:
setHasFalseNegatives:
setHasFalsePositives:
setHasFeatureMatrixL2norm:
setHasFeaturesL2norm:
setHasFeaturesScaleFactor:
setHasGradientL2norm:
setHasGradientScaleFactor:
setHasIteration:
setHasK:
setHasLabel:
setHasLength:
setHasPrecision:
setHasRmse:
setHasRowLength:
setHasSecsToExecute:
setHasSupervisionType:
setHasSupport:
setHasTimestamp:
setHasTrueNegatives:
setHasTruePositives:
setHasWeightsL2norm:
setHasWeightsScaleFactor:
setIndices:count:
setIntercept:
setIteration:
setK:
setLabel:
setLastDeserializedPlanWithId:toPlan:
setLastUsedTimestampLimit:
setLength:
setLinRegFeatureMatrix:
setLinRegObjectiveFeatures:
setLocale:
setLogRegGradient:
setLogRegWeights:
setMatrix:
setMaxNumberOfElements:
setMaxTimesAccessed:
setMinValue:
setMinibatchStats:
setMinimumMagnitude:
setModelInfo:
setName:
setNegativeScores:count:
setNoiseMechanism:
setNoiseScaleFactors:
setNumberOfNonZeroValues:
setObject:atIndexedSubscript:
setObject:forKey:
setObject:forKeyedSubscript:
setObjective:
setPerLabelSupports:
setPositiveScores:count:
setPrecision:
setPrecisionAtKs:
setReportSamplingRate:
setRmse:
setRowIndices:count:
setRowLength:
setSecsToExecute:
setSparseFloatFeatureMatrix:
setSparseFloatFeatures:
setSparseFloatGradient:
setSparseFloatWeights:
setSparseIndices:
setSparseQuantizedFeatureMatrix:
setSparseQuantizedFeatures:
setSparseQuantizedGradient:
setSparseQuantizedWeights:
setSparseValues:
setStats:
setSuperdata:
setSupervisionType:
setSupport:
setTimestamp:
setTrueNegatives:
setTruePositives:
setValues:count:
setVectorizerNormalization:
setVersion:
setWeights:
setWeightsL2norm:
setWeightsScaleFactor:
shape
sharedSession
sharedSingletonWithDirectory:
simulatorWithDbPaths:sessionDescriptor:sessionsInBatch:maxSessionsLimit:seed:
skipFromZeroSchema:
sliceFrom:to:
solve
solveForCovariates:objectives:
solveWithAvgGradient:maxNumberOfIterations:
solverWithWeights:
solverWithWeights:andIntercept:learningRate:minIterations:stoppingThreshold:
solverWithWeights:andIntercept:learningRate:minIterations:stoppingThreshold:l2RegularizationRate:
solverWithWeights:andIntercept:learningRate:minIterations:stoppingThreshold:regularizationStrategy:regularizationRate:l1Ratio:
sortDescriptorWithKey:ascending:comparator:
sortedArrayUsingDescriptors:
sparseFloatFeatureMatrix
sparseFloatFeatures
sparseFloatGradient
sparseFloatMatrixFromDenseMatrix:
sparseFloatMatrixFromSparseMatrix:
sparseFloatVectorFromModelWeights:
sparseFloatVectorFromSparseVector:
sparseFloatWeights
sparseIndices
sparseMatrixFromNumbers:
sparseMatrixWithNumberOfRows:numberOfColumns:
sparseQuantizedFeatureMatrix
sparseQuantizedFeatures
sparseQuantizedGradient
sparseQuantizedWeights
sparseValues
sparseVectorEmptyWithLength:
sparseVectorFromDense:
sparseVectorFromDense:length:
sparseVectorFromNumbers:
sparseVectorFromNumbers:indices:length:
sparseVectorToDense:length:
sparseVectorWithLength:numberOfNonZeroValues:block:
sparseVectorWithLength:numberOfNonZeroValues:isSparseIndexInt64:sparseIndices:sparseValues:toDenseValues:withLength:
stats
statsWithPerLabelCounts:
statsWithSize:support:
stoppingThreshold
store
storeSession:label:model:
storeSession:label:model:bundleId:domainId:itemIds:isAppleInternal:
stringByAppendingString:
stringByReplacingMatchesInString:options:range:withTemplate:
stringValue
stringWithFormat:
stringWithUTF8String:
subSessionDescriptorForLabel:
substringWithRange:
sumInPlaceWithVector:
summableMetricsOnly
superclass
supportForLabel:
timeIntervalSince1970
timeIntervalSinceNow
timestamp
toDictionary
toPlistWithChunks:
toTokens:fromInput:withLength:
toVec
tokenize:withLength:
tokenizeToIds:fromString:tokens:tokenCount:length:
trackEvaluationMetrics:minibatchStats:
trackGradient:scaleFactor:minibatchStats:evaluationMetrics:serverIteration:
trackPrecisionAtK:
trackPrecisionAtK:minibatchStats:
trackSessionWithCovariates:label:locale:
trackSessionWithCovariates:label:locale:supervisionType:
trackWeights:scaleFactor:minibatchStats:evaluationMetrics:
trackedEvaluations
trackedGradients
trackedMessagesByClass:
trackedWeights
trackerForModelName:modelVersion:
trackerForModelName:modelVersion:modelLocale:
trackerForPlanId:
trainingControlVariableName
trainingNetworkPath
trainingOutputName
transform:
transformBagOfIds:shouldDecrement:
transformSequentialNGrams:
transformWithFrequency:shouldDecrement:
transformWithWordPiece:
trimDbWithDeferralBlock:
trueLabelName
trueNegatives
trueNegatives:predictions:predicate:
truePositives
truePositives:predictions:predicate:
truncateDatabaseAtPath:
tupleWithFirst:second:
unlock
unregisterForLockStateChangeNotifications:
unsignedIntValue
unsignedIntegerValue
unsignedLongLongValue
unsignedLongValue
updateLastTrainingFeaturizationForModel:andData:
updateSessionsAndLabelForModel:block:
updateTable:dictionary:whereClause:onError:
useOnlyAppleInternalSessions
userVersion
vacuumDbWithDeferralBlock:
vacuumWithShouldContinueBlock:error:
valueAt:
valueAtIndex:
valueAtRow:column:
valueForKeyPath:
valueWithPointer:
values
valuesAtIndex:
valuesCount
valuesData
vecByAppendingVec:
vector
vectorWithConstantColumn
weightsArray
weightsByAppendingWeights:
weightsFromNumbers:
weightsL2norm
weightsScaleFactor
withBucketSize:andCharNgramOrder:
withBucketSize:andNgramOrder:
withBucketSize:andNgrams:
withBucketSize:characterNGramRange:tokenNGramRange:shouldNormalizeTokens:shouldNormalizeCharacters:
withBucketSize:characterNGramRange:tokenNGramRange:shouldNormalizeTokens:shouldNormalizeCharacters:localeForNonwordTokens:tokenizeNewlines:
withBucketSize:characterNGramRange:tokenNGramRange:shouldNormalizeTokens:shouldNormalizeCharacters:localeForNonwordTokens:tokenizeNewlines:idVectorLength:extraIdOptions:vectorizerStrategy:vectorNormalization:
withBucketSize:characterNGramRange:tokenNGramRange:shouldNormalizeTokens:shouldNormalizeCharacters:localeForNonwordTokens:tokenizeNewlines:idVectorLength:extraIdOptions:vectorizerStrategy:vectorNormalization:vocab:
withBucketSize:ngrams:localeForNonwordTokens:tokenizeNewlines:
withWeights:
withWeights:andIntercept:
writeTo:
writeToDataWithObject:andChunks:
writeToFile:atomically:
writeToPlistWithObject:andChunks:
writeTransaction:
zeroWeightsOfLength:
zone
@24@0:8[10Q]16
Q32@0:8[10Q]16Q24
@24@0:8@16
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"NSArray"24@0:8@"PMLSparseVector"16
v16@0:8
@64@0:8^v16^v24{?=^vi}32Q48Q56
{?="plan"^v"network_index"i}
@40@0:8@16@24Q32
v68@0:8@16d24Q32B40Q44d52@?60
@"PMLTrainingStoredSessionBatch"
@56@0:8@16@24Q32Q40Q48
@24@0:8Q16
@80@0:8@16@24{?=ff}32f40@44Q52B60q64Q72
@"NSArray"
@"PMLSessionDescriptor"
@"_PASRng"
v28@0:8I16@20
v28@0:8I16@"PBCodable"20
@24@0:8^{_NSZone=}16
v24@0:8Q16
v20@0:8B16
v24@0:8@16
@"AWDProactiveModelFittingEvalMetrics"
@"AWDProactiveModelFittingMinibatchStats"
@"AWDProactiveModelFittingModelInfo"
@"NSMutableArray"
{?="timestamp"b1}
v20@0:8f16
f16@0:8
@"AWDProactiveModelFittingQuantizedDenseVector"
@"AWDProactiveModelFittingSparseFloatVector"
@"AWDProactiveModelFittingQuantizedSparseVector"
{?="timestamp"b1"weightsL2norm"b1"weightsScaleFactor"b1}
@32@0:8@16@24
@"PMLMutableDenseVector"
@"NSNumber"
@68@0:8f16Q20f28@32B40@?44@?52@?60
@32@0:8^f16Q24
f24@0:8@16
v32@0:8@16@24
@"PMLModelWeights"
@"PMLSparseMatrix"
@"PMLModelRegressor"
@40@0:8@16@24@32
@24@0:8@"NSMutableArray"16
@40@0:8@16@"NSArray"24@"NSDictionary"32
@24@0:8^@16
@"NSDictionary"24@0:8^@16
@100@0:8@16@24@32Q40Q48@56@64B72@76@84Q92
@"PMLTrainingStore"
@"<PMLMultiLabelClassifierModelProtocol>"
@"<PMLMultiLabelEvaluationTrackerProtocol>"
@"NSString"
{?="timestamp"b1"featuresL2norm"b1"featuresScaleFactor"b1}
^I16@0:8
v20@0:8I16
I24@0:8Q16
v32@0:8^I16Q24
I16@0:8
{?="list"^I"count"Q"size"Q}
{?="bucketSize"b1"length"b1"minValue"b1}
@40@0:8@16q24q32
q16@0:8
@48@0:8@16@24@32@40
@160@0:8@16@24@32@40@48Q56Q64Q72@80f88f92Q96Q104B112d116d124B132B136Q140Q148B156
@48@0:8@16@24@?32@40
v24@0:8@?16
@"<PMLLogRegTrackerProtocol>"
@"<PMLNoiseStrategy>"
@"AWDProactiveModelFittingSparseFloatMatrix"
@"AWDProactiveModelFittingQuantizedSparseMatrix"
{?="timestamp"b1"featureMatrixL2norm"b1"featureMatrixScaleFactor"b1}
^Q16@0:8
Q24@0:8Q16
v32@0:8^Q16Q24
^f16@0:8
f24@0:8Q16
v32@0:8^f16Q24
{?="list"^Q"count"Q"size"Q}
{?="list"^f"count"Q"size"Q}
{?="length"b1}
@20@0:8f16
@28@0:8f16Q20
{?="s"[2Q]}
@32@0:8d16Q24
d16@0:8
@40@0:8Q16@24@32
q32@0:8@16@24
q40@0:8@16@24@32
B44@0:8@16I24@28@36
@24@0:8^Q16
v24@0:8d16
@28@0:8@16B24
v68@0:8@16q24@32@40@48@56B64
v56@0:8@16d24@32Q40@?48
@44@0:8@16Q24B32@36
v64@0:8@16@24Q32Q40d48@?56
v84@0:8@16Q24Q32d40Q48B56Q60d68@?76
v64@0:8@16d24@32Q40Q48@?56
v52@0:8@16d24Q32B40@?44
v32@0:8@16Q24
v40@0:8@16@24Q32
Q24@0:8@16
q24@0:8@16
v40@0:8@16q24@32
v52@0:8@16d24d32i40@?44
@"_PASSqliteDatabase"
{?="columnLength"b1"rowLength"b1}
@32@0:8r^f16i24B28
@32@0:8@16Q24
{?="bucketSize"b1"columnLength"b1"minValue"b1"rowLength"b1}
@28@0:8@"NSArray"16B24
@28@0:8f16f20i24
B36@0:8@16B24^f28
v24@0:8@"PMLSparseVector"16
v24@0:8@"PMLSparseMatrix"16
B36@0:8@"PMLMutableDenseVector"16B24^f28
@48@0:8i16{?=ff}20f28i32q36B44
@44@0:8i16{?=ff}20f28q32B40
{_PMLPreNoiseScaleFactorAndNoiseSampler=@f}28@0:8@16B24
{?=ff}16@0:8
v24@0:8{?=ff}16
v24@0:8q16
{?="gaussianScaleFactor"f"laplaceScaleFactor"f}
f40@0:8@16@24@?32
Q40@0:8@16@24@?32
v48@0:8@16@24@?32@40
f24@0:8f16i20
f32@0:8Q16Q24
@"PMLTrackerMockAdapter"
@24@0:8^I16
@"NSDictionary"
r^f16@0:8
@32@0:8r^f16Q24
@36@0:8^f16Q24B32
@40@0:8^f16Q24@?32
@24@0:8i16i20
@"NSMutableData"
v32@0:8r^f16Q24
@24@0:8f16f20
@56@0:8f16f20Q24Q32Q40Q48
{?="falseNegatives"b1"falsePositives"b1"trueNegatives"b1"truePositives"b1"f1"b1"rmse"b1"secsToExecute"b1}
@24@0:8r*16
v52@0:8@16q24@32@40B48
@32@0:8@16^@24
@40@0:8@16@24^@32
v52@0:8@"PMLSparseVector"16q24@"PMLSessionDescriptor"32@"PMLSpotlightReference"40B48
v32@0:8@"NSArray"16@"NSString"24
v24@0:8@"NSString"16
v24@0:8@?<B@?>16
@"NSDictionary"32@0:8@"NSData"16^@24
@"NSDictionary"40@0:8@"NSDictionary"16@"NSArray"24^@32
v32@0:8@16@?24
@"NSMutableDictionary"
@32@0:8Q16Q24
@24@0:8^{sparse_m_float=}16
v24@0:8^{sparse_m_float=}16
v32@0:8Q16@?24
^{sparse_m_float=}16@0:8
^{sparse_m_float=}
v40@0:8@16Q24@32
v48@0:8@16Q24@32Q40
@120@0:8@16@24@32@40Q48Q56@64Q72d80Q88d96Q104B112B116
i24@0:8@16
B32@0:8@16^@24
@56@0:8@16@24@32@40@?48
@56@0:8@16@24@32@40^@48
@56@0:8@16@24@32@40@48
@76@0:8d16@24@32@40@48@56d64B72
@?24@0:8@16
@"ETTaskDefinition"
@"PMLMetaTrainingVariables"
@"PMLEspressoTrainingVariables"
@"<ETDataProvider>"
{?="label"b1"supervisionType"b1"timestamp"b1"confidenceScore"b1}
@"<PMLPlanProtocol>"
{?="label"b1"support"b1}
@44@0:8@16B24f28Q32f40
@48@0:8@16B24f28Q32f40f44
@60@0:8@16B24f28Q32f40Q44f52f56
@"PMLGradientSolver"
@20@0:8i16
i16@0:8
@"PMLDenseVector"
@36@0:8i16i20@24B32
@104@0:8i16{_NSRange=QQ}20{_NSRange=QQ}36B52B56@60B68Q72Q80Q88q96
@112@0:8i16{_NSRange=QQ}20{_NSRange=QQ}36B52B56@60B68Q72Q80Q88q96@104
@72@0:8i16{_NSRange=QQ}20{_NSRange=QQ}36B52B56@60B68
@60@0:8i16{_NSRange=QQ}20{_NSRange=QQ}36B52B56
{_NSRange="location"Q"length"Q}
@"NSLocale"
@"<PMLWordPieceVocabProtocol>"
@44@0:8@16f24@28@36
@52@0:8@16f24@28@36Q44
@"NSDictionary"44@0:8@"PMLDenseVector"16f24@"AWDProactiveModelFittingMinibatchStats"28@"AWDProactiveModelFittingEvalMetrics"36
@"NSDictionary"52@0:8@"PMLDenseVector"16f24@"AWDProactiveModelFittingMinibatchStats"28@"AWDProactiveModelFittingEvalMetrics"36Q44
@"NSDictionary"32@0:8@"AWDProactiveModelFittingEvalMetrics"16@"AWDProactiveModelFittingMinibatchStats"24
@"NSDictionary"24@0:8@"NSDictionary"16
@"NSDictionary"32@0:8@"NSDictionary"16@"AWDProactiveModelFittingMinibatchStats"24
@40@0:8@16Q24Q32
f32@0:8@16@24
@"_PASLazyResult"
v52@0:8@16Q24Q32Q40f48
@48@0:8@16@24@32^@40
@"DESRecordStore"
@"PMLAWDAvailableSessionsTracker"
@60@0:8@16f24@28@36@44Q52
@68@0:8@16f24@28@36Q44@52Q60
@"<PMLTrackerAdapterProtocol>"
@44@0:8@16@24Q32B40
@36@0:8@16Q24B32
{?="bucketSize"b1"minValue"b1}
@36@0:8I16@20@28
@"NSData"
@28@0:8r^f16i24
@28@0:8r^d16i24
r^d16@0:8
i40@0:8^{_NSRange=QQ}16@24Q32
i52@0:8^f16@24^{_NSRange=QQ}32i40Q44
{?="batchSize"b1"support"b1}
@112@0:8@16@24Q32@40@48@56@64@72@80@88@96@104
@"NSURL"
@28@0:8i16@20
@28@0:8i16Q20
@24@0:8i16f20
@"AWDProactiveModelFittingEvaluation"
@"AWDProactiveModelFittingLinRegFeatureMatrix"
@"AWDProactiveModelFittingLinRegObjectiveFeatures"
@"AWDProactiveModelFittingLogRegGradient"
@"AWDProactiveModelFittingLogRegWeights"
@24@0:8#16
B32@0:8@16@24
@"_PASCFBurstTrie"
@112@0:8@16@24@32@40Q48Q56@64B72d76d84B92Q96Q104
@"<PMLEvaluationTrackerProtocol>"
@32@0:8Q16^@24
@"NSDictionary"32@0:8Q16^@24
@56@0:8@16@24@32Q40@48
I24@0:8@16
I24@0:8@"NSString"16
@"<PMLAWDMetricQueryDelegate>"
@"AWDServerConnection"
@40@0:8Q16Q24@?32
v68@0:8Q16Q24B32r^v36r^f44^f52Q60
@48@0:8Q16Q24@32@40
@48@0:8Q16Q24^q32^f40
v24@0:8^f16
v24@0:8^q16
v48@0:8q16q24q32Q40
^q16@0:8
@28@0:8Q16f24
{?="k"b1"precision"b1}
@"NSLock"
{?="iteration"b1"timestamp"b1"gradientL2norm"b1"gradientScaleFactor"b1}
$7J]
"5H[n
1DW[r
1DWnnr
"5Sj
"5H[n
@(#)PROGRAM:ProactiveML  PROJECT:Suggestions-1193.23.0.1
 %zu
inputSequence
outputLabels
PMLPlanSimulator.m
Couldn't load sessions for %@
Can't instantiate simulator, need at least one db file.
Multiple batches not supported in simulation.
Can't instantiate simulator, no db at %@
v16@?0Q8
Unsupported proto buf message: %@
%@ %@
timestamp
modelInfo
minibatchStats
evaluationMetrics
precisionAtK
sparseFloatWeights
sparseQuantizedWeights
weightsScaleFactor
weightsL2norm
denseQuantizedWeights
PMLGradientSolver.m
Invalid parameter not satisfying: %@
gradient
weights
gradientCalculator
predictionCalculator
batchPredictionCalculator
Covariates must have the same column-length as weights. Got covariates with %tu columns but weights of length %d
Invalid covariates, length: %tu but model weights length: %d
PMLMultiLabelRegressionEvaluationPlan.m
Invalid planId. Must be <name>-<version>-<locale> but got %@
Can't instantiate %@. Unknown model class: %@
q24@?0@8@16
v32@?0@"PMLModelWeights"8Q16^B24
PLAN_ID
SESSIONS_MODEL_HANDLE
SESSIONS_LIMIT
SESSIONS_IN_BATCH
POSITIVE_LABELS
WEIGHTS_ARRAY
MULTI_LABEL_REGRESSION_MODEL_TYPE
INTERCEPT
EVALUATION_POINTS
TRACKER
TRACKER_TYPE
EVALUATION_LEVEL
TRAINING_STORE
Can't instantiate %@. Missing "store" dependency.
v32@?0@"NSNumber"8Q16^B24
Can't instantiate %@. Unknown tracker class: %@
planId
sparseFloatFeatures
sparseQuantizedFeatures
featuresScaleFactor
featuresL2norm
idx (%tu) is out of range (%tu)
indices
values
length
minValue
bucketSize
stats
PMLLabelLimitRowId.m
label
limit >= 0
rowId >= 0
PMLLogRegTrainingPlan.m
<%@ %@>
Cannot train model with covariates of length %tu but model weights of length %d (planid = %@)
B12@?0f8
loss
v24@?0@"PMLTrainingStoredSessionBatch"8^B16
name
version
locale
plan
IS_SYNCHRONOUS
WEIGHTS
LEARNING_RATE
STOPPING_THRESHOLD
MIN_ITERATIONS
GRADIENT_ITERATIONS
SERVER_ITERATION
IS_MULTI_LABEL
POSITIVE_LABEL
NOISE_STRATEGY_TYPE
NOISE_STRATEGY
ONLY_INTERNAL_SESSIONS
SKEW
THRESHOLD
REPORT_SCALE
BEFORE_NOISE_SCALING
PMLNoNoiseStrategy
PMLDiffPrivacyNoiseStrategy
PMLSeparatedDPNoiseStrategy
PFL_ID
PLUGIN_SHOULD_ADD_NOISE_AND_ENCRYPT_RESULT
noiseStrategy
FiM_logreg-1.0-en
serverIteration
intercept
generateWeightsOfLength
localLearningRate
stoppingThreshold
localMinimumIterations
localGradientIterations
reportScale
useOnlyAppleInternalSessions
sessionsInBatch
maxSessionsLimit
positiveLabel
sparseFloatFeatureMatrix
sparseQuantizedFeatureMatrix
featureMatrixScaleFactor
featureMatrixL2norm
PMLTrainingStore.m
Number of labels %lu does not match number of rows specified %lu
covariates
sessionDescriptor
bundleId
itemIds
sessions
creationTimestamp
sessionDescriptorId
covariatesLength
covariatesIndices
covariatesValues
isAppleInternal
sessionsDomainIds
sessionId
bundleIdentifier
domainIdentifier
sessionsItemIds
itemIdentifier
lastUsed
timesAccessed
v56@?0Q8@"NSArray"16@"NSData"24Q32Q40^B48
AND isAppleInternal = 1 
SELECT covariatesLength, COUNT(*) FROM sessions WHERE sessionDescriptorId = (SELECT id FROM sessionsDescriptors WHERE name = :name AND version = :version AND locale = :locale) AND id > :rowId %@ %@ ORDER BY id
:name
:version
:locale
numberOfRows
numberOfColumns
SELECT sessions.id, sessions.label, sessions.covariatesLength, sessions.covariatesIndices, sessions.covariatesValues, sessionsItemIds.timesAccessed FROM sessions JOIN sessionsItemIds ON sessions.id = sessionsItemIds.sessionId AND sessions.sessionDescriptorId = (SELECT id FROM sessionsDescriptors WHERE name = :name AND version = :version AND locale = :locale) AND sessionsItemIds.lastUsed <= :lastUsedMax AND sessionsItemIds.timesAccessed < :timesUsedMax AND sessions.id > :rowId %@ ORDER BY sessions.id limit :limit
:limit
:lastUsedMax
:timesUsedMax
sessionId = %ld
{_PASDBIterAction_=B}16@?0@"NSError"8
Read label %lu while specified %@. Matcher: %@
Invalid session from db (row id %lu): covariatesIndices and covariatesValues must contain the same number of elements (expected bytes length in int/float ratio but got %lu and %lu).
Invalid session from db (row id %lu), covariatesLength has to be %lu, got %lu.
Invalid session from db (row id %lu): idx %d out of bounds [0, %lu).
v32@?0@"NSNumber"8@"PMLLabelLimitRowId"16^B24
AND sessions.label = %lu AND sessions.id in (SELECT sessionId from sessionsItemIds WHERE lastUsed < %f AND timesAccessed < %lu) 
AND sessions.label = 0 AND sessions.id in (SELECT sessionId from sessionsItemIds WHERE lastUsed < %f AND timesAccessed < %lu) 
v48@?0Q8@"NSArray"16@"NSData"24@"NSDictionary"32^B40
SELECT sessions.id, sessions.label, sessions.covariatesLength, sessions.covariatesIndices, sessions.covariatesValues, sessionsItemIds.timesAccessed FROM sessions JOIN sessionsItemIds ON sessions.id = sessionsItemIds.sessionId AND sessions.sessionDescriptorId = (SELECT id FROM sessionsDescriptors WHERE name = :name AND version = :version AND locale = :locale) AND sessionsItemIds.lastUsed <= :lastUsedMax AND sessionsItemIds.timesAccessed < :timesUsedMax AND sessions.label IN _pas_nsarray(:labels) ORDER BY RANDOM() limit :limit
:labels
AND label = %lu AND sessions.id in (SELECT sessionId from sessionsItemIds WHERE lastUsed < %f AND timesAccessed < %lu) 
SELECT count(*) FROM sessions WHERE sessionDescriptorId = (SELECT id FROM sessionsDescriptors WHERE name = :name AND version = :version AND locale = :locale) 
SELECT DISTINCT label FROM sessions WHERE UNLIKELY(sessionDescriptorId = (SELECT id FROM sessionsDescriptors WHERE name = :name AND version = :version AND locale = :locale))
DELETE FROM sessions WHERE creationTimestamp < :lastUsedExpirationDate AND (id in (SELECT sessionId from sessionsItemIds WHERE lastUsed < :lastUsedExpirationDate))
:lastUsedExpirationDate
DELETE FROM sessions WHERE (id in (SELECT sessionId from sessionsItemIds WHERE timesAccessed >= :maxTimesAccessed))
:maxTimesAccessed
label = :label AND
SELECT count(*) FROM sessions WHERE %@ UNLIKELY(sessionDescriptorId = (SELECT id FROM sessionsDescriptors WHERE name = :name AND version = :version AND locale = :locale))
:label
DELETE FROM sessions WHERE id IN (   SELECT id FROM sessions   WHERE %@   UNLIKELY(sessionDescriptorId = (SELECT id FROM sessionsDescriptors WHERE name = :name AND version = :version AND locale = :locale))   ORDER BY RANDOM() LIMIT :limit )
DELETE FROM sessions WHERE id IN (SELECT sessionId FROM sessionsItemIds WHERE bundleIdentifier = :bundleIdentifier)
:bundleIdentifier
DELETE FROM sessions WHERE id IN (SELECT sessionId FROM sessionsItemIds WHERE bundleIdentifier = :bundleIdentifier AND itemIdentifier = :itemIdentifier)
:itemIdentifier
DELETE FROM sessions WHERE id IN (SELECT sessionId FROM sessionsDomainIds WHERE bundleIdentifier = :bundleIdentifier AND domainIdentifier = :domainIdentifier  UNION ALL SELECT sessionId FROM sessionsDomainIds WHERE bundleIdentifier = :bundleIdentifier AND domainIdentifier >= :domainIdentifier || '.' AND domainIdentifier < :domainIdentifier || '/')
:domainIdentifier
SELECT mh.name, mh.version, mh.locale, s.label, count(*) FROM sessions s INNER JOIN sessionsDescriptors mh ON s.sessionDescriptorId = mh.id INNER JOIN sessionsItemIds sii ON s.id = sii.sessionId WHERE sii.timesAccessed < :timesUsedMax GROUP BY s.sessionDescriptorId, s.label ORDER BY s.sessionDescriptorId, s.label
SELECT name, version, locale FROM sessionsDescriptors
SELECT id FROM sessionsDescriptors WHERE name = :name AND version = :version AND locale = :locale
sessionsDescriptors
!_lockStateNotificationToken
v12@?0i8
PRAGMA foreign_keys = ON
B8@?0
migrationFunction
SELECT sd.version, lf.transformer FROM sessionsDescriptors sd CROSS JOIN lastFeaturizations lf ON lf.sessionDescriptorId = sd.id WHERE sd.name = :name AND sd.locale = :locale
SELECT sd.id FROM sessionsDescriptors sd CROSS JOIN lastFeaturizations lf ON lf.sessionDescriptorId = sd.id WHERE sd.name = :name AND sd.locale = :locale
transformer
lastFeaturizations
sessionDescriptorId = %lu
SELECT s.id, s.sessionDescriptorId, s.covariatesIndices, s.covariatesValues FROM sessions s CROSS JOIN sessionsDescriptors sd ON s.sessionDescriptorId = sd.id WHERE sd.name = :name AND sd.locale = :locale
id = %ld
training_db_schema
[ ]{2,}
SELECT sql FROM sqlite_master WHERE sql IS NOT NULL AND tbl_name NOT LIKE 'sqlite_%' 
CREATE TABLE integrityCheck
python
Process name %@ is not python
training_sessions
test
SELECT count(*) FROM 
columnIndices
columnLength
rowIndices
rowLength
PMLImmutableLogisticRegressionModel.m
AWDProactiveModelFittingQuantizedDenseVector+PML.m
Too big vector (length: %tu)
PMLPlanDescriptor.m
VALUES
SHAPE
-[PMLModelWeights(PMLMobileAssetParameterGetStrategy) initFromDictionary:]
PMLDictionaryParameters.m
weightArray.count == [shapeArray[0] unsignedIntegerValue]
-[PMLModelRegressor(PMLMobileAssetParameterGetStrategy) initFromDictionary:]
regressorArray.count == [shapeArray[0] unsignedIntegerValue]
-[PMLModelWeights(PMLPlistAndChunksSerialization) initWithPlist:chunks:context:]
[__expr isKindOfClass:[NSNumber class]]
[__expr isKindOfClass:[PMLDataChunkDenseFloatVector class]]
-[PMLModelRegressor(PMLPlistAndChunksSerialization) initWithPlist:chunks:context:]
-[PMLImmutableLogisticRegressionModel(PMLPlistAndChunksSerialization) initWithPlist:chunks:context:]
MULTI_LABEL_REGRESSION_MODELS
Invalid noiseMechanism, got: %lld
f20@?0f8Q12
v24@?0Q8^B16
You must explicitly specify a noise mechanism.
Invalid noise mechanism value: %lli
NOISE_STRATEGY_MAX_ITERATIONS
NOISE_STRATEGY_MINIMUM_MAGNITUDE
GAUSSIAN_NOISE_SCALE
LAPLACE_NOISE_SCALE
NOISE_MECHANISM_ENUM_VALUE
INPLACE_NORM
NOISE_STRATEGY_SCALE
NOISE_SAMPLER
<%@ gaussianScaleFactor:%0.2f laplaceScaleFactor:%0.2f minMagnitude:%0.2f>
PMLClassificationEvaluationMetrics.m
AWDProactiveModelFittingQuantizedSparseMatrix+PML.m
Too big matrix (rows: %tu)
Too big matrix (cols: %tu)
foo-1.0-en
CREATE TABLE IF NOT EXISTS modelHandles (                  id integer PRIMARY KEY AUTOINCREMENT NOT NULL,             name char(128) NOT NULL,                                   version char(128) NOT NULL,                                locale char(5) NOT NULL                                    )
CREATE UNIQUE INDEX IF NOT EXISTS ix_modelHandles_name_version_locale             ON modelHandles (name, version, locale)
CREATE TABLE IF NOT EXISTS sessions (                      id integer PRIMARY KEY AUTOINCREMENT NOT NULL,             creationTimestamp real NOT NULL,                           modelHandleId integer NOT NULL,                            label integer NOT NULL,                                    covariatesLength integer NOT NULL,                         covariatesIndices blob NOT NULL,                           covariatesValues blob NOT NULL,                            FOREIGN KEY (modelHandleId) REFERENCES modelHandles (id)               ON DELETE CASCADE                                        )
CREATE INDEX IF NOT EXISTS ix_sessions_modelHandleId             ON sessions (modelHandleId ASC)
CREATE TABLE IF NOT EXISTS sessionsDomainIds (               id integer PRIMARY KEY AUTOINCREMENT NOT NULL,               sessionId integer NOT NULL,                                  domainIdentifier char(128) NOT NULL,                         FOREIGN KEY (sessionId) REFERENCES sessions (id)               ON DELETE CASCADE                                          )
CREATE TABLE IF NOT EXISTS sessionsItemIds (                 id integer PRIMARY KEY AUTOINCREMENT NOT NULL,               sessionId integer NOT NULL,                                  itemIdentifier char(128) NOT NULL,                           FOREIGN KEY (sessionId) REFERENCES sessions (id)               ON DELETE CASCADE                                          )
CREATE TABLE IF NOT EXISTS modelMetadata (               modelHandleId integer PRIMARY KEY NOT NULL,              payloadPath char(128) NOT NULL,                          serverIteration integer NOT NULL,                        hasFinishedTraining integer(1) NOT NULL,                 modificationTimestamp real NOT NULL,                     FOREIGN KEY (modelHandleId) REFERENCES modelHandles (id)               ON DELETE CASCADE                                                  )
CREATE TABLE IF NOT EXISTS trainingLog (                   id integer PRIMARY KEY AUTOINCREMENT NOT NULL,             creationTimestamp real NOT NULL,                           modelHandleId integer NOT NULL,                            serverIteration integer NOT NULL,                          FOREIGN KEY (modelHandleId) REFERENCES modelHandles (id)               ON DELETE CASCADE                                                  )
CREATE INDEX IF NOT EXISTS ix_trainingLog_modelHandleId_creationTimestamp             ON trainingLog (modelHandleId, creationTimestamp)
DROP TABLE modelMetadata
CREATE TABLE IF NOT EXISTS modelMetadata (               modelHandleId integer PRIMARY KEY NOT NULL,              serverIteration integer NOT NULL,                        hasFinishedTraining integer(1) NOT NULL,                 modificationTimestamp real NOT NULL,                     payload blob NOT NULL,                                   FOREIGN KEY (modelHandleId) REFERENCES modelHandles (id)               ON DELETE CASCADE                                                  )
ALTER TABLE sessions RENAME TO sessions_old
CREATE TABLE IF NOT EXISTS sessions (                      id integer PRIMARY KEY AUTOINCREMENT NOT NULL,             creationTimestamp real NOT NULL,                           modelHandleId integer NOT NULL,                            label integer NOT NULL,                                    covariatesLength integer NOT NULL,                         covariatesIndices blob,                                    covariatesValues blob,                                     FOREIGN KEY (modelHandleId) REFERENCES modelHandles (id)               ON DELETE CASCADE                                        )
INSERT INTO sessions(id,creationTimestamp,modelHandleId,label,covariatesLength,covariatesIndices,covariatesValues)             SELECT id,creationTimestamp,modelHandleId,label,covariatesLength,covariatesIndices,covariatesValues FROM sessions_old
ALTER TABLE sessionsDomainIds RENAME TO sessionsDomainIds_old
INSERT INTO sessionsDomainIds(id,sessionId,domainIdentifier)             SELECT id,sessionId,domainIdentifier FROM sessionsDomainIds_old
DROP TABLE sessionsDomainIds_old
ALTER TABLE sessionsItemIds RENAME TO sessionsItemIds_old
INSERT INTO sessionsItemIds(id,sessionId,itemIdentifier)             SELECT id,sessionId,itemIdentifier FROM sessionsItemIds_old
DROP TABLE sessionsItemIds_old
DROP TABLE sessions_old
ALTER TABLE modelMetadata ADD maxIteration integer NOT NULL DEFAULT 10
ALTER TABLE sessions ADD isAppleInternal integer(1) NOT NULL DEFAULT 0
DELETE FROM modelMetadata
CREATE TABLE IF NOT EXISTS receivedPlans (             planId char(128) PRIMARY KEY NOT NULL,                 modificationTimestamp real NOT NULL,                   serializedPlan blob NOT NULL                           )
DROP TABLE trainingLog
CREATE TABLE IF NOT EXISTS trainingLog (                   id integer PRIMARY KEY AUTOINCREMENT NOT NULL,             creationTimestamp real NOT NULL,                           planId char(128) NOT NULL,                                 modelHandleId integer NOT NULL,                            serverIteration integer NOT NULL,                          FOREIGN KEY (modelHandleId) REFERENCES modelHandles (id)               ON DELETE CASCADE                                                  )
CREATE INDEX IF NOT EXISTS ix_trainingLog_planId_creationTimestamp             ON trainingLog (planId, creationTimestamp)
ALTER TABLE sessions ADD source blob
DELETE FROM receivedPlans
ALTER TABLE sessionsDomainIds ADD bundleIdentifier char(128)
ALTER TABLE sessionsItemIds ADD bundleIdentifier char(128)
ALTER TABLE modelHandles ADD sd_id integer
ALTER TABLE modelHandles ADD sd_name char(128)
ALTER TABLE modelHandles ADD sd_version char(128)
UPDATE modelHandles SET               sd_name = CASE                   WHEN name = 'FiM.phone' THEN 'SignificantPhoneNumber'                   WHEN name = 'dataDetectionSignificantPhrasePhoneLogistic' THEN 'SignificantPhoneNumber'                   WHEN name = 'SignificantPhoneNumber' THEN name                   WHEN name = 'dataDetectionSignificantPhraseAddressLogistic' THEN 'SignificantPostalAddress'                   WHEN name = 'SignificantPostalAddress' THEN name                   WHEN name = 'dataDetectionSignificantPhraseEmailLogistic' THEN 'SignificantEmailAddress'                   WHEN name = 'SignificantEmailAddress' THEN name                   WHEN name = 'selfIdentificationPhraseLogistic' THEN 'SelfIdentification'                   WHEN name = 'SelfId.Covariates' THEN 'SelfIdentification'                   WHEN name = 'SelfIdentification' THEN name                   WHEN name = 'STSQP' AND version = '1.2' THEN name                   ELSE NULL               END,               sd_version = CASE                   WHEN version = '1.1' THEN 'TW=12&NG=3&FV=1.1'                   WHEN version = 'TW=12&NG=3&FV=1.1' THEN version                   WHEN version = '1.2' THEN version                   ELSE NULL               END
CREATE TABLE IF NOT EXISTS sessionsDescriptors (                   id integer PRIMARY KEY AUTOINCREMENT NOT NULL,                   name char(128) NOT NULL,                   version char(128) NOT NULL,                   locale char(5) NOT NULL               )
CREATE UNIQUE INDEX IF NOT EXISTS ix_sessionsDescriptors_name_version_locale ON sessionsDescriptors (name, version, locale)
INSERT OR IGNORE INTO sessionsDescriptors(name,version,locale) SELECT sd_name,sd_version,locale FROM modelHandles
UPDATE modelHandles SET sd_id = (SELECT id FROM sessionsDescriptors WHERE name = sd_name AND version = sd_version)
CREATE TABLE IF NOT EXISTS sessions (                   id integer PRIMARY KEY AUTOINCREMENT NOT NULL,                   creationTimestamp real NOT NULL,                   sessionDescriptorId integer NOT NULL,                   label integer NOT NULL,                   covariatesLength integer NOT NULL,                   covariatesIndices blob,                   covariatesValues blob,                   isAppleInternal integer(1) NOT NULL DEFAULT 0,                   source blob,                   FOREIGN KEY (sessionDescriptorId) REFERENCES sessionsDescriptors (id) ON DELETE CASCADE               )
CREATE INDEX IF NOT EXISTS ix_sessions_sessionDescriptorId ON sessions (sessionDescriptorId ASC)
INSERT INTO sessions(id,creationTimestamp,sessionDescriptorId,label,covariatesLength,covariatesIndices,covariatesValues,isAppleInternal,source)                 SELECT s.id,creationTimestamp,mh.sd_id,label,covariatesLength,covariatesIndices,covariatesValues,isAppleInternal,source                 FROM sessions_old AS s JOIN modelHandles AS mh                 WHERE s.modelHandleId = mh.id AND mh.sd_id IS NOT NULL
CREATE TABLE IF NOT EXISTS trainingLog (                   id integer PRIMARY KEY AUTOINCREMENT NOT NULL,                   creationTimestamp real NOT NULL,                   planId char(128) NOT NULL,                   sessionDescriptorId integer NOT NULL,                   serverIteration integer NOT NULL,                   FOREIGN KEY (sessionDescriptorId) REFERENCES sessionsDescriptors (id) ON DELETE CASCADE               )
CREATE INDEX IF NOT EXISTS ix_trainingLog_planId_creationTimestamp ON trainingLog (planId, creationTimestamp)
CREATE INDEX IF NOT EXISTS ix_sessionsItemIds_bundleId_itemId ON sessionsItemIds (bundleIdentifier, itemIdentifier)
CREATE INDEX IF NOT EXISTS ix_sessionsItemIds_sessionId ON sessionsItemIds (sessionId)
CREATE INDEX IF NOT EXISTS ix_sessionsDomainIds_bundleId_domainId ON sessionsDomainIds (bundleIdentifier, domainIdentifier)
CREATE INDEX IF NOT EXISTS ix_sessionsDomainIds_sessionId ON sessionsDomainIds (sessionId)
DROP TABLE IF EXISTS sessions_old
DROP TABLE IF EXISTS modelHandles
DELETE FROM sessions WHERE id IN (SELECT sessions.id FROM sessions LEFT JOIN sessionsItemIds ON sessions.id = sessionsItemIds.sessionId WHERE itemIdentifier = '<hey@example.com>')
PRAGMA foreign_keys = OFF
DELETE FROM sessions WHERE sessionDescriptorId IN (SELECT id FROM sessionsDescriptors                 WHERE                    (name = "SignificantPhoneNumber" AND version LIKE "%1.1%")                OR (name = "SignificantPhoneNumber" AND version LIKE "%1.2%")                OR (name = "SignificantEmailAddress" AND version LIKE "%1.1%")                OR (name = "SignificantEmailAddress" AND version LIKE "%1.2%")                OR (name = "SignificantPostalAddress" AND version LIKE "%1.1%")                OR (name = "SignificantPostalAddress" AND version LIKE "%1.2%")                OR (name = "SelfIdentification" AND version LIKE "%1.1%")                OR (name = "STSQP")                )
ALTER TABLE sessionsItemIds ADD lastUsed real NOT NULL DEFAULT 0
DROP INDEX IF EXISTS ix_trainingLog_planId_creationTimestamp
CREATE TABLE IF NOT EXISTS lastFeaturizations (                   id integer PRIMARY KEY AUTOINCREMENT NOT NULL,                   sessionDescriptorId integer NOT NULL,                   transformer blob,                   FOREIGN KEY (sessionDescriptorId) REFERENCES sessionsDescriptors (id) ON DELETE CASCADE               )
CREATE INDEX IF NOT EXISTS ix_lastFeaturizations_sessionDescriptorId ON lastFeaturizations (sessionDescriptorId)
DELETE FROM sessions WHERE sessionDescriptorId IN (                     SELECT id FROM sessionsDescriptors                     WHERE version NOT LIKE "FV=%" AND version NOT LIKE "%&FV=%"               )
ALTER TABLE sessionsItemIds ADD timesAccessed integer NOT NULL DEFAULT 0
DELETE FROM sessionsDescriptors WHERE version NOT LIKE "FV=%" AND version NOT LIKE "%&FV=%"
DELETE FROM sessions WHERE id IN (SELECT sessionId FROM sessionsItemIds WHERE bundleIdentifier = "com.apple.iChat")
UPDATE sessions SET source = x''
@max.unsignedIntValue
CREATE TABLE sessionsDomainIds ( id integer PRIMARY KEY AUTOINCREMENT NOT NULL, sessionId integer NOT NULL, domainIdentifier char(128) NOT NULL, bundleIdentifier char(128), FOREIGN KEY (sessionId) REFERENCES sessions (id) ON DELETE CASCADE )
CREATE TABLE sessionsItemIds ( id integer PRIMARY KEY AUTOINCREMENT NOT NULL, sessionId integer NOT NULL, itemIdentifier char(128) NOT NULL, bundleIdentifier char(128), lastUsed real NOT NULL DEFAULT 0, timesAccessed integer NOT NULL DEFAULT 0, FOREIGN KEY (sessionId) REFERENCES sessions (id) ON DELETE CASCADE )
CREATE TABLE receivedPlans ( planId char(128) PRIMARY KEY NOT NULL, modificationTimestamp real NOT NULL, serializedPlan blob NOT NULL )
CREATE TABLE sessionsDescriptors ( id integer PRIMARY KEY AUTOINCREMENT NOT NULL, name char(128) NOT NULL, version char(128) NOT NULL, locale char(5) NOT NULL )
CREATE UNIQUE INDEX ix_sessionsDescriptors_name_version_locale ON sessionsDescriptors (name, version, locale)
CREATE TABLE sessions ( id integer PRIMARY KEY AUTOINCREMENT NOT NULL, creationTimestamp real NOT NULL, sessionDescriptorId integer NOT NULL, label integer NOT NULL, covariatesLength integer NOT NULL, covariatesIndices blob, covariatesValues blob, isAppleInternal integer(1) NOT NULL DEFAULT 0, source blob, FOREIGN KEY (sessionDescriptorId) REFERENCES sessionsDescriptors (id) ON DELETE CASCADE )
CREATE INDEX ix_sessions_sessionDescriptorId ON sessions (sessionDescriptorId ASC)
CREATE INDEX ix_sessionsItemIds_bundleId_itemId ON sessionsItemIds (bundleIdentifier, itemIdentifier)
CREATE INDEX ix_sessionsItemIds_sessionId ON sessionsItemIds (sessionId)
CREATE INDEX ix_sessionsDomainIds_bundleId_domainId ON sessionsDomainIds (bundleIdentifier, domainIdentifier)
CREATE INDEX ix_sessionsDomainIds_sessionId ON sessionsDomainIds (sessionId)
CREATE TABLE lastFeaturizations ( id integer PRIMARY KEY AUTOINCREMENT NOT NULL, sessionDescriptorId integer NOT NULL, transformer blob, FOREIGN KEY (sessionDescriptorId) REFERENCES sessionsDescriptors (id) ON DELETE CASCADE )
CREATE INDEX ix_lastFeaturizations_sessionDescriptorId ON lastFeaturizations (sessionDescriptorId)
SELECT id, covariatesValues FROM sessions
UPDATE sessions SET covariatesValues = :data WHERE id = :rowId
:data
:rowId
v16@?0@"_PASSqliteStatement"8
{_PASDBIterAction_=B}16@?0@"_PASSqliteStatement"8
PMLMutableDenseVectorAllocationFailure
Failed to allocate NSData.
count
PMLDenseVector.m
start >= 0 && start < self.count
end > 0 && end <= self.count
end >= start
other.count == self.count
Index %tu out of bounds (vector length: %tu)
v20@?0f8Q12
rmse
truePositives
trueNegatives
falsePositives
falseNegatives
positiveScores
negativeScores
secsToExecute
com.apple.proactive.fia.phone.en
com.apple.proactive.responses
QuickResponsesClassification
PMLSeparatedDPNoiseStrategy.m
Can't instantiate %@. Missing %@ dependency.
_Bool soft_PFLPrivatize(float *, size_t, const char *)
PFLPrivatize
v8@?0
void *PrivateFederatedLearningLibrary(void)
model
spotlightReference
isInternal
PMLSparseMatrix.m
matrix
Can not mark %lu x %lu matrix as symmetric
Invalid shape, all rows must be the same length (row %lu length: %lu, first row length: %lu)
malloc failed
v40@?0Q8Q16r^f24r^q32
unknown
PMLEspressoTrainingPlan.m
Session descriptor must be nonnull for PMLEspressoTrainingPlan initWithPlist
Noise strategy must be nonnull for PMLEspressoTrainingPlan initWithPlist
LABELS_TO_TRAIN_ON
SUMMABLE_METRICS_ONLY
Gradient contains %f at index %lu
Unable to find global variable named: %@
global
weight
bias
Unable to convert session batch data into espresso data provider
v40@?0Q8@"NSArray"16@"NSData"24^B32
B32@?0@"ETDataTensor"8@"NSString"16@"NSString"24
Unable to in place update gradient since number of starting and ending parameters don't match for tensor type %@ name %@
numberOfSamples
isSampled
accuracy
predictions
groundTruth
B32@?0Q8@"<ETDataProvider>"16@"<ETTaskContext>"24
<PMLEspressoTrainingPlan '%@'>
META_TRAINING_VARIABLES
ESPRESSO_TRAINING_VARIABLES
supervisionType
confidenceScore
PLAN_CLASSNAME
PLAN
PMLPlanSerialization.m
Invalid plan. Unknown class: %@
PML_ESPRESSO_TRAINING_NETWORK_PATH
v28@?0f8Q12Q20
support
d40@?0@"PMLModelWeights"8@"PMLSparseMatrix"16@"PMLModelRegressor"24^f32
f24@?0@"PMLSparseVector"8@"PMLModelWeights"16
@"PMLMutableDenseVector"24@?0@"PMLSparseMatrix"8@"PMLModelWeights"16
calculateAvgGradientForBatch
PMLMathFunctions.h
regularizationRate >= 0.0
l1Ratio >= 0.0 && l1Ratio <= 1.0
numberOfSamples > 0
numberOfDimensions > 0
s == SPARSE_SUCCESS
logisticBatch
PMLHashingVectorizer.m
buckets > 0
extraIdOptions < PMLHashingVectorizerIdOptionLimit
vectorizerStrategy < PMLHashingVectorizerStrategyLimit
vectorNormalization >= PMLVectorNormalizationNone && vectorNormalization < PMLVectorNormalizationLimit
(characterNGramRange.location && characterNGramRange.length) || (tokenNGramRange.location && tokenNGramRange.length)
vectorizerStrategy != PMLHashingVectorizerStrategyWordPiece || vocab != nil
v24@?0^q8^f16
_endId == 0
_startId == 0
BUCKET_SIZE
NGRAM_SIZE
CHARACTER_NGRAM_LOCATION
CHARACTER_NGRAM_LENGTH
CHARACTER_NORMALIZATION
TOKEN_NGRAM_LOCATION
TOKEN_NGRAM_LENGTH
TOKEN_NORMALIZATION
SHOULD_TOKENIZE_NEWLINES
ID_VECTOR_LENGTH
EXTRA_ID_OPTIONS
VECTORIZER_STRATEGY
VECTOR_NORMALIZATION
NON_WORD_TOKENS_LOCALE
size
PMLFidesTracker.m
Can't instantiate %@. Missing "planId" dependency.
com.apple.proactive
PMLDenseMatrix.m
PMLSessionDescriptor.m
%@-%@-%@
@8@?0
(^|&)FV=([0-9]+(.[0-9]+)?)($|&)
regex
Unexpected number of matches for %@; pattern: %@; descriptor: %@
Unexpected number of match ranges for %@; pattern: %@; descriptor: %@
Unexpected featureVersion extracted for %@; pattern: %@; descriptor: %@
%@_label%lu
_label[0-9]+
_label([0-9]+)
Handle %@ is not a sub-model handle.
NAME
VERSION
LOCALE
<%@ %@ %@ %@>
com.apple.proactive.PMLDESPlugin
PMLTraining.m
training.db
STSQP
ContactSharing
SignificantPhoneNumber
SignificantEmailAddress
SignificantPostalAddress
SignificantEmailAddressForIMessage
SignificantPostalAddressForIMessage
FirstPersonPhoneSharing
ThirdPersonPhoneSharing
FirstPersonEmailSharing
FirstPersonAddressSharing
ThirdPersonEmailSharing
ThirdPersonAddressSharing
SelfIdentification
SGTextMessageBirthdayCongratsModel
positivesCount
label%tu
v32@?0@"PMLSessionDescriptor"8@"NSSet"16^B24
modelName
modelVersion
modelLocale
sessionsCount
negativesCount
v24@?0@"NSUUID"8@"NSError"16
labeledStats
v16@?0@"NSError"8
v24@?0@"PMLSessionDescriptor"8^B16
isEspressoTraining
chunk
attachments
AWDProactiveModelFittingQuantizedSparseVector+PML.m
PMLProtoBufTracker.m
adapter
TRACKER_ADAPTER_CLASS
TRACKER_QUANTIZATION_BUCKETS
Can't instantiate %@. Unknown class: %@
dummy
returnValue
PMLDataChunk.m
chunks
mock-1.0-en
PMLWordPieceTokenizer.m
vocab
v36@?0I8^S12{_NSRange=QQ}20
[UNK]
unkToken != PMLWordPieceVocabNotFound
[CLS]
startId != PMLWordPieceVocabNotFound
[SEP]
endId != PMLWordPieceVocabNotFound
[PAD]
padId != PMLWordPieceVocabNotFound
batchSize
perLabelSupport
PML_ESPRESSO_INPUT_NAME
PML_ESPRESSO_INPUT_DIM
PML_ESPRESSO_OUTPUT_NAME
PML_ESPRESSO_TRUE_LABEL_NAME
PML_ESPRESSO_LOSS_VALUE_NAME
PML_ESPRESSO_TRAINING_OUTPUT_NAME
PML_ESPRESSO_TRAINING_CONTROL_VARIABLE_NAME
PML_ESPRESSO_INITIALIZER_NAME
PML_ESPRESSO_GLOBALS_TO_GET_GRADIENTS_FOR
PML_ESPRESSO_LAYER_WEIGHTS_TO_GET_GRADIENTS_FOR
PML_ESPRESSO_LAYER_BIASES_TO_GET_GRADIENTS_FOR
PMLEspressoTrainingVariables.m
Can't instantiate %@. Missing "%@" dependency.
evaluation
logRegWeights
logRegGradient
linRegFeatureMatrix
linRegObjectiveFeatures
PMLTrainingStoredSessionBatch.m
Covariates and outcomes need to have the same length, but got %lu and %d.
PMLLexicon.m
path
v16@?0^{_CFBurstTrie=}8
v32@?0@"NSString"8@"NSNumber"16^B24
PlanClass
NoiseStrategy
ProactiveMLErrorDomain
PMLLogRegEvaluationPlan.m
tracker
PMLEspressoDataProvider.m
Number of dimensions in rows data (%lu) number of labels (%lu)
The names of the input and trueLabel can not be the same: %s
Label value %f must be greater than 0
PMLAWDAvailableSessionsTracker.m
AWD metric query delegate can only be set once
v12@?0I8
Missing delegate to handle AWD metric request.
PMLSparseVector.m
numberOfNonZeroValues == 0 || (indices && values)
length>=numberOfNonZeroValues
v24@?0^v8Q16
Too big vector.
length >= _numberOfNonZeroValues
_length >= numberOfNonZeroValues
_sparseValues == NULL || _sparseValues != sparseValues
_sparseIndices == NULL || _sparseIndices != sparseIndices
_length == _numberOfNonZeroValues
maxVectorLength
v32@?0@"NSNumber"8@"NSNumber"16^B24
precision
CLASS_NAME
PMLPlistClassWrapper.m
plist
Invalid plan. class %@ doesn't conform to %@
PMLPassThroughTracker.m
buckets
scaleFactor
AWDWeightsMessage
results
AWDGradientMessage
Can't instantiate %@. Missing "buckets" dependency.
sparseFloatGradient
iteration
sparseQuantizedGradient
gradientScaleFactor
gradientL2norm
denseQuantizedGradient
Could not create espresso context
Could not create espresso plan
Could not add espresso network from file %@ with storage type %05x, status code %d
Could not declare espresso network input %@, status code %d
Could not declare espresso network output %@, status code %d
Could not build espresso plan, status code %d
Could not bind the input buffer to layer %@ in espresso plan during initialization, status code %d
Unable to get input shape to layer %@ in espresso plan during initialization, status code %d
Input layer %@ has rank %zu, shape %@, num parameters %tu
Could not bind the output buffer to layer %@ in espresso plan during initialization, status code %d
Unable to get output shape to layer %@ in espresso plan during initialization, status code %d
Output layer %@ has rank %zu, shape %@, num parameters %tu
Could not bind the input buffer to layer %@ in espresso plan, status code %d
Could not bind the output buffer to layer %@ in espresso plan, status code %d
Could not execute espresso plan, status code %d
Failed writing analytics log for data transparency. Skip upload
Sending %@ (size: %tu) to Parsec.
Unsupported proto buf message: %@
Stopped after iter %li with NAN error
Stopped after iter %li with DBL_MAX error
Stopped after iter %li with -DBL_MAX error
Stopped after iter %li with -INFINITY error
Stopped after iter %li with INFINITY error
Stopped after iter %li with perfect fit
Stopped after iter %li with loss %f
Label %@ not in sepcified list %@
Ignoring all zero row #%ld
Evaluating plan %@ (descriptor: %@, available %tu sessions)
Attempted to use PMLSeparatedDPNoiseStrategy with non-Fides tracker: %@.
Training model: %@ (available %lu sessions)
scaleAndAddNoiseToDenseVector failed
PMLLogRegTrainingPlan running with no noise strategy since pluginShouldAddNoiseAndEncryptResult set to false
Invalid session from db (row id %lu): covariatesIndices and covariatesValues must contain the same number of elements (expected bytes length in int/float ratio but got %lu and %lu).
Invalid session from db (row id %lu), covariatesLength has to be %lu, got %lu.
Failed to load sessions for model %@. Error: %@
PMLTrainingStore failed to count total sessions. Error: %@
PMLTrainingStore failed to delete unused sessions. Error: %@
PMLTrainingStore failed to delete over used sessions. Error: %@
PMLTrainingStore failed to count labeled sessions. Error: %@
PMLTrainingStore failed to delete sessions. Error: %@
PMLTrainingStore failed to delete sessions for bundleId=%@. Error: %@
PMLTrainingStore failed to delete sessions for for bundleId=%@ and itemId=%@. Error: %@
PMLTrainingStore failed to delete sessions for bundleId=%@ and domainId=%@. Error: %@
Row returned in sessionStats was null, continuing to iterate as best effort
Row in sessionStats contained unexpected null value, name %@, version %@, locale %@, continuing to iterate as best effort
Failed to load stats about sessions in db. Error: %@
Row returned in enumerateSessionDescriptorsUsingBlock was null, continuing to iterate as best effort
Row in enumerateSessionDescriptorsUsingBlock contained unexpected null value, name %@, version %@, locale %@, continuing to iterate as best effort
PMLTrainingStore notified of device lock state change to %d
Opening db %@.
PMLTrainingStore failed to open/initialize db.
Closing db %@.
PMLTrainingStore failed to enable foreign keys support.
PMLTraining db (%@) corrupted. Flushing.
%@ deallocating
PMLTrainingStore db failed to create new database with skip queries.
Future database version detected (%lu). Giving up on migration.
PMLTrainingStore db failed to migrate but migration is needed.
Migration encountered error during migration of %@: versions %lu, query: %@, error: %@
Row returned in lastTrainingFeaturizationForModelName was null, continuing to iterate as best effort
Row in sessionStats contained unexpected null value, version %@, continuing to iterate as best effort
Failed to load last training featurization in db. Error: %@
Error querying schema: %@
setMaxTimesAccessed should only be called for testing.
db: %@, isUnlocked: %d, isClassCLocked: %d
Invalid noiseMechanism, got: %lld
You must explicitly specify a noise mechanism.
PFLPrivatize call failed
Error extracting floats from sparse rows, status: %d
PMLEspressoTrainingPlan running with no noise strategy since pluginShouldAddNoiseAndEncryptResult set to false
Unable to create task definition, returning nil for PMLEspressoTrainingPlan
Unable to fetch parameters requested in weights and biases during validation, returning nil for PMLEspressoTrainingPlan: %@
Unable to successfully initialize model: %@
Unable to create task definition: %@
An error occured when attempting to get parameters for global variable: %@
An error occured when attempting to get weight for layer: %@
An error occured when attempting to get bias for layer: %@
Returning nil since unable to snapshot starting model parameters: %@
Training was unsuccessful: %@
Returning nil since no training was done
Returning nil and early from training since an error occurred during training
Returning nil since an error occurred when calculating the gradient: %@
Sampling probability is invalid value %f
Returning nil for training metrics since 0 points for ground truth %tu and / or training results %tu
Unable to get ground truth value for key validation: %@
Unable to get %@ key for ground truth: %@
Unable to get training result for key validation: %@
Unable to get %@ key for training result: %@
The number of ground truth values %tu does not match number of inference results %tu
Skipping row for metrics calculation
Unable to get ground truth at index %tu: %@
Unable to get inference results at index %tu: %@
Number of data points: %tu, Loss: %f, Accuracy: %f
Not adding loss or accuracy metrics as no rows were sampled
Unable to init PMLEspressoTrainingPlan because unable to init PMLMetaTrainingVariables
Unable to init PMLEspressoTrainingPlan because unable to init PMLEspressoTrainingVariables
Sending %@ (%d) to AWD.
PMLHashingVectorizer: unknown vectorizer strategy
Instantiating PMLTraining singleton.
PMLTraining failed to get a DESRecordStore for %@
Can't instantiate PMLTraining in %@, becacuse there is already an instance in %@.
Adding session for %@ (label: %tu, length: %tu)
No isMultiLabel information for %@
Failed to send session stats %@ to Fides. Error: %@
Successfully sent stats %@ to Fides.
Failed to delete existing records in DESRecordStore. Error: %@
Won't trim training db because the db is not open.
Trimming training db.
DONE limitSessionsByLastUsedTTL
DONE limitSessionsByMaxTimesAccessed
Removing training samples for %@
DONE limitSessionsWithSessionDescriptor:(%@) withLabel:nil
DONE limitSessionsForEachLabelWithSessionDescriptor:(%@)
Vacuuming training db.
We've been asked to defer. Skipping remaining work.
Error deserializing plan with exception %@
Training plan deserialized without exception but is nil
Ignoring synchronous plan %@ because the db is not open.
Running %@ synchronously
Plan %@ completed run. Result present? %d.
Unable to train with Espresso because recipe flag IS_ESPRESSO_TRAINING is not set
Unable to train because chunk path %@ or training network path %@ not found in %lu attachments
Unable to train because chunk file contents were empty
Sending weights for model %@
Sending gradient for model %@
Sending evaluation metrics for %@
Could not open chunk file at %@: %@
Chunk descriptor out of bounds: ends at %llu in data of length %llu
Could not parse chunk %u; bailing out
Error writing plist chunk: %@
Error loading plist chunk: %@
Unable to read Espresso network file at: %@
Returning nil for PMLLexicon since unable to initialize lexicon
Falling back to default system lexicon since lexicon at following path is invalid in existence: %@
Returning 0 for word id since token is not in lexicon: %@
Evaluating plan %@ (descriptor: %@, available %lu sessions)
Out of range index %lu requested from PMLEspressoDataProvider of size %lu
PMLSparseVector: unknown vector normalization method
PMLSparseVector: dimensions do not match between source sparse vector (%llu) and destination dense vector (%llu)
Error writing object to NSData: %@
Error reading object from NSData: %@
softlink:o:path:/System/Library/PrivateFrameworks/PrivateFederatedLearning.framework/PrivateFederatedLearning
PMLMultiLabelEspressoClassifier
PMLMultiLabelClassifierProtocol
NSObject
PMLInMemoryCachedStore
PMLPlanSimulator
PMLTrackerParsecAdapter
PMLTrackerAdapterProtocol
AWDProactiveModelFittingEvaluation
NSCopying
AWDProactiveModelFittingLogRegWeights
PMLGradientResults
PMLGradientSolver
PMLMultiLabelRegressionEvaluationPlan
PMLPlanProtocol
PMLPlistAndChunksSerializableProtocol
AWDProactiveModelFittingLinRegObjectiveFeatures
AWDProactiveModelFittingQuantizedSparseVector
AWDProactiveModelFittingModelInfoStatsPair
PMLLabelLimitRowId
PMLLogRegTrainingPlan
AWDProactiveModelFittingLinRegFeatureMatrix
PML_VisibleForTesting
AWDProactiveModelFittingSparseFloatVector
PMLLaplaceSampler
PMLSampler
PMLTrainingLogEntry
PMLTrainingStore
AWDProactiveModelFittingSparseFloatMatrix
PMLImmutableLogisticRegressionModel
PMLPlanDescriptor
AWDProactiveModelFittingQuantizedSparseMatrix
PMLMobileAssetParameterGetStrategy
PMLChunkToVec
PMLPlistAndChunksSerialization
PMLMultiLabelLogisticRegressionModel
PMLMultiLabelClassifierModelProtocol
PMLDiffPrivacyNoiseStrategy
PMLNoiseStrategy
PMLClassificationEvaluationMetrics
AWDProactiveModelFittingModelInfo
VisibleForTesting
PMLAWDEvaluationTrackerMock
PMLTrainingDatabaseMigrations
PMLDenseVector
NSMutableCopying
PMLMutableDenseVector
AWDProactiveModelFittingEvalMetrics
PMLSeparatedDPNoiseStrategy
PMLTrainingMock
PMLTrainingProtocol
PMLSparseMatrix
PMLAWDSessionTracker
PMLMetaTrainingVariables
PMLEspressoTrainingPlan
AWDProactiveModelFittingSession
PMLPlanWrapper
PMLPlanSerialization
PMLTrackerAWDAdapter
PMLNoNoiseStrategy
AWDProactiveModelFittingLabelSupportPair
PMLLogisticRegressionModel
PMLGaussianSampler
PMLModelRegressor
PMLMultiLabelE5Classifier
PMLHashingVectorizer
PMLTransformerProtocol
PMLJson
PMLFidesTracker
PMLLogRegTrackerProtocol
PMLEvaluationTrackerProtocol
PMLMultiLabelEvaluationTrackerProtocol
PMLAWDSessionTrackerMock
PMLDenseMatrix
PMLSessionDescriptor
PMLSpotlightReference
PMLTraining
PMLAWDMetricQueryDelegate
PMLProtoBufTracker
PMLMockPlan
AWDProactiveModelFittingQuantizedDenseVector
PMLDataChunk
PMLDataChunkRaw
PMLDataChunkPlist
PMLDataChunkDenseFloatVector
PMLDataChunkDenseDoubleVector
PMLAWDLogisticRegTrackerMock
PMLWordPieceTokenizer
AWDProactiveModelFittingMinibatchStats
PMLEspressoTrainingVariables
PMLModelWeights
AWDProactiveModelFittingParsecFeedbackEnvelope
PMLTrainingStoredSessionBatch
PMLTrackerMockAdapter
PMLLexicon
PMLLogRegEvaluationPlan
PMLAWDBaseTracker
PMLEspressoDataProvider
ETDataProvider
PMLWordPieceVocabTrie
PMLWordPieceVocabProtocol
PMLAWDAvailableSessionsTracker
PMLSparseVector
AWDProactiveModelFittingPrecisionAtKPair
PMLPlistClassWrapper
PMLPassThroughTracker
AWDProactiveModelFittingLogRegGradient
T@"AWDProactiveModelFittingEvalMetrics",&,N,V_evaluationMetrics
T#,R
T@"AWDProactiveModelFittingMinibatchStats",&,N,V_minibatchStats
T@"<PMLLogRegTrackerProtocol>",R,N,V_tracker
TQ,R,N,V_currentServerIteration
T@"<PMLMultiLabelEvaluationTrackerProtocol>",R,N,V_tracker
TQ,R,N,V_localMinimumIterations
T@"<PMLPlanProtocol>",R,N,V_plan
T^Q,R,N
T@"AWDProactiveModelFittingEvaluation",&,N,V_evaluation
Tf,N,V_featureMatrixScaleFactor
T@"AWDProactiveModelFittingLinRegObjectiveFeatures",&,N,V_linRegObjectiveFeatures
_cachedSessions
T@"AWDProactiveModelFittingMinibatchStats",&,N,V_stats
_dbPath
T@"AWDProactiveModelFittingModelInfo",R,N,V_modelInfo
_epochsPerBatch
T@"AWDProactiveModelFittingQuantizedDenseVector",&,N,V_denseQuantizedWeights
T@"AWDProactiveModelFittingQuantizedSparseVector",&,N,V_sparseQuantizedFeatures
_falsePositives
T@"AWDProactiveModelFittingQuantizedSparseVector",&,N,V_sparseQuantizedWeights
_featuresL2norm
T@"AWDProactiveModelFittingSparseFloatVector",&,N,V_sparseFloatFeatures
_idVectorLength
T@"AWDProactiveModelFittingSparseFloatVector",&,N,V_sparseFloatWeights
_locale
T@"NSArray",R,N,V_collectedSessions
_matrix
T@"NSArray",R,N,V_globalsToGetGradientsFor
_models
T@"NSArray",R,N,V_labelsToTrainOn
_noiseMechanism
T@"NSArray",R,N,V_layerWeightsToGetGradientsFor
_planId
T@"NSArray",R,N,V_trackedSessions
_positiveScores
T@"NSData",R,N
_stores
T@"NSMutableArray",&,N,V_perLabelSupports
_values
T@"NSMutableData",R,N,V_mutableData
allKeys
T@"NSString",&,N,V_locale
argmax:
T@"NSString",&,N,V_version
chunksFromData:
T@"NSString",R,N
confidenceScore
T@"NSString",R,N,V_domainIdentifier
copyTo:
T@"NSString",R,N,V_inputName
dealloc
T@"NSString",R,N,V_locale
evaluationLevel
T@"NSString",R,N,V_name
getBytes:range:
T@"NSString",R,N,V_planId
getTensorNamed:
T@"NSString",R,N,V_trainingOutputName
hasColumnLength
T@"NSString",R,N,V_version
hasRmse
T@"PMLModelRegressor",&,N,V_objective
indices
T@"PMLModelWeights",&,N,V_weights
initWithFormat:
T@"PMLMutableDenseVector",R,N,V_gradient
initWithModels:
T@"PMLSparseMatrix",&,N,V_covariates
initWithPlanId:numberOfBuckets:
T@"PMLTrainingStore",R,N,V_store
initializerName
TB,N
isInMemoryPath:
TB,N,V_isSymmetric
isProxy
TB,R,N,V_intercept
TB,R,N,V_reportScale
lastInsertRowId
TB,R,N,V_useOnlyAppleInternalSessions
minibatchStatsForPositiveLabel:
TI,N,V_length
numberOfColumns
TI,R,D,N
numberWithLong:
TQ,N,V_columnLength
pattern
TQ,N,V_falsePositives
TQ,N,V_k
rowIndicesCount
TQ,N,V_length
serverIteration
TQ,N,V_rowLength
setHasFeatureMatrixScaleFactor:
TQ,N,V_timestamp
setIsSymmetric:
TQ,N,V_truePositives
solverWithWeights:andIntercept:
TQ,R,N
stringByAppendingPathComponent:
TQ,R,N,V_epochsPerBatch
supervisionType
TQ,R,N,V_inputDim
toChunk
TQ,R,N,V_maxSessionsLimit
tracker
TQ,R,N,V_numberOfColumns
transformBatch:
TQ,R,N,V_positiveLabel
weights
TQ,R,N,V_serverIteration
.cxx_destruct
T@"AWDProactiveModelFittingLogRegGradient",&,N,V_logRegGradient
T@"<PMLEvaluationTrackerProtocol>",R,N,V_tracker
TB,R,N,V_didRun
T@"<PMLMultiLabelClassifierModelProtocol>",R,N,V_multiLabelRegressionModel
TQ,R,N,V_length
T@"<PMLNoiseStrategy>",R,N,V_noiseStrategy
T^I,R,N
T@"<PMLTrackerAdapterProtocol>",R,N,V_adapter
T^f,R,N
T@"AWDProactiveModelFittingLinRegFeatureMatrix",&,N,V_linRegFeatureMatrix
Tf,N,V_minValue
T@"AWDProactiveModelFittingLogRegWeights",&,N,V_logRegWeights
T@"AWDProactiveModelFittingModelInfo",&,N,V_modelInfo
_didRun
T@"AWDProactiveModelFittingQuantizedDenseVector",&,N,V_denseQuantizedGradient
_extraIdOptions
T@"AWDProactiveModelFittingQuantizedSparseMatrix",&,N,V_sparseQuantizedFeatureMatrix
_falseNegatives
T@"AWDProactiveModelFittingQuantizedSparseVector",&,N,V_sparseQuantizedGradient
_featureVersion
T@"AWDProactiveModelFittingSparseFloatMatrix",&,N,V_sparseFloatFeatureMatrix
_gradientL2norm
T@"AWDProactiveModelFittingSparseFloatVector",&,N,V_sparseFloatGradient
_length
T@"NSArray",R,D,N
_logRegGradient
T@"NSArray",R,N,V_evaluationPoints
_minibatchStats
T@"NSArray",R,N,V_itemIdentifiers
_negativeScores
T@"NSArray",R,N,V_layerBiasesToGetGradientsFor
_parsed
T@"NSArray",R,N,V_positiveLabels
_positiveLabels
T@"NSArray",R,N,V_weightsArray
_solver
T@"NSDictionary",R,N,V_migrations
_taskDefinition
T@"NSMutableArray",&,N,V_precisionAtKs
adapter
T@"NSNumber",R,N,V_loss
append:
T@"NSString",&,N,V_name
chunkWithPlist:
T@"NSString",R,C
clearRowIndices
T@"NSString",R,N,V_bundleIdentifier
containsObject:
T@"NSString",R,N,V_initializerName
createSnapshot:
T@"NSString",R,N,V_label
density
T@"NSString",R,N,V_lossValueName
featureMatrixValueAtRow:column:
T@"NSString",R,N,V_outputName
getNumParametersFromShape:rank:
T@"NSString",R,N,V_trainingControlVariableName
getTotalEntries
T@"NSString",R,N,V_trueLabelName
hasName
T@"NSURL",R,N,V_trainingNetworkPath
hasSparseQuantizedFeatureMatrix
T@"PMLModelRegressor",R,N,V_outcomes
indicesAtIndex:
T@"PMLModelWeights",R,N,V_currentModelWeights
initWithLength:
T@"PMLSessionDescriptor",R,N,V_sessionDescriptor
initWithPlanId:
T@"PMLSparseMatrix",R,N,V_covariates
initWithSolver:
T@,R,N
isEqualToMetaTrainingVariables:
TB,N,V_intercept
isInternalBuild
TB,R,N
itemIdentifiers
TB,R,N,V_isMultiLabel
labelsToTrainOn
TB,R,N,V_summableMetricsOnly
limitSessionsByMaxTimesAccessed
TI,N,V_columnLength
modelInfoFromSessionDescriptor:
TI,N,V_rowLength
numberWithBool:
TQ,N,V_batchSize
outputDimension
TQ,N,V_falseNegatives
prepareForEpoch
TQ,N,V_iteration
release
TQ,N,V_label
scaleInPlaceWithInversedFactor:
TQ,N,V_numberOfNonZeroValues
sessionsInBatch
TQ,N,V_supervisionType
setHasMinValue:
TQ,N,V_trueNegatives
setUserVersion:
TQ,R
startId
TQ,R,N,V_count
subSessionLabel
TQ,R,N,V_evaluationLevel
support
TQ,R,N,V_localGradientIterations
trackedSessions
TQ,R,N,V_maxSessionsToTrainOn
trainingSetSize
TQ,R,N,V_numberOfRows
version
TQ,R,N,V_quantizationNumberOfBuckets
wrappedMessage:
TQ,R,N,V_sessionsInBatch
TQ,R,N,V_trainingSetSize
TQ,V_version
T^f,N,V_sparseValues
T^q,N,V_sparseIndices
T^{sparse_m_float=},N,V_matrix
Td,R,N,V_lossThresholdForStopping
Td,R,N,V_probThreshold
Td,R,N,V_timestamp
Tf,N,V_bucketSize
Tf,N,V_confidenceScore
Tf,N,V_f1
Tf,N,V_featureMatrixL2norm
Tf,N,V_featuresL2norm
Tf,N,V_featuresScaleFactor
Tf,N,V_gradientL2norm
Tf,N,V_gradientScaleFactor
Tf,N,V_minimumMagnitude
Tf,N,V_precision
Tf,N,V_rmse
Tf,N,V_secsToExecute
Tf,N,V_support
Tf,N,V_weightsL2norm
Tf,N,V_weightsScaleFactor
Tf,R,N,V_localLearningRate
Tf,R,N,V_stoppingThreshold
Ti,R,N
Tq,N,V_noiseMechanism
Tq,R,N,V_limit
Tq,R,N,V_rowId
Tr^d,R,N
Tr^f,R,N
T{?=ff},N,V_noiseScaleFactors
UTF8String
_adapter
_allowSkipSchema
_availableSessionsTracker
_awdServerConnection
_backingData
_backingObject
_batchPredictionCalculator
_batchSize
_bucketSize
_buckets
_bundleIdentifier
_calculateGradientInPlaceForTask:startingParameters:globalNames:weightNames:biasNames:
_calculateTrainingMetricsWithSamplingProb:groundTruthProvider:predictionsProvider:trueLabelName:trainingOutputName:lossValueName:probThreshold:includeSummableOnly:
_characterNGramRange
_classNameKey
_collectedSessions
_columnIndices
_columnLength
_confidenceScore
_count
_covariates
_currentModelWeights
_currentServerIteration
_data
_delegate
_deleteAllSavedRecordsFromFidesStoreSync
_denseQuantizedGradient
_denseQuantizedWeights
_domainIdentifier
_endId
_enumerateSparseRowsWithBlock:
_espressoContext
_espressoModel
_espressoPlan
_etv
_evaluation
_evaluationLevel
_evaluationMetrics
_evaluationPoints
_featureMatrixL2norm
_featureMatrixScaleFactor
_featuresScaleFactor
_fidesStore
_getModelParametersForTask:globalNames:weightNames:biasNames:error:
_globalsToGetGradientsFor
_gradient
_gradientCalculator
_gradientScaleFactor
_groundTruth
_has
_indices
_initializedWithNSData
_initializerName
_inplaceNorm
_inputBuffer
_inputDim
_inputName
_inputNumParameters
_intercept
_internalCollectedSessions
_internalTrackedSessions
_isMultiLabel
_isSymmetric
_itemIdentifiers
_iterateModelParametersForTask:globalNames:weightNames:biasNames:block:
_iteration
_label
_labelsData
_labelsToTrainOn
_lastTrainingFeaturizations
_layerBiasesToGetGradientsFor
_layerWeightsToGetGradientsFor
_learningRate
_lexicon
_limit
_linRegFeatureMatrix
_linRegObjectiveFeatures
_loadBatchForModel:privacyBudgetRefreshPeriod:labels:batchSize:block:
_loadDataForModel:positiveRowId:negativeRowId:excludeItemIdsUsedWithin:limit:onlyAppleInternal:positiveLabel:skew:block:
_loadDataForModel:privacyBudgetRefreshPeriod:labelAndStartRows:batchSize:supportPerLabel:block:
_loadDataFromLabelAndTuples:model:numberOfRows:numberOfColumns:lastUsedMax:block:
_localGradientIterations
_localLearningRate
_localMinimumIterations
_localeForNonwordTokens
_lockStateNotificationToken
_logRegWeights
_loss
_lossThresholdForStopping
_lossValueName
_magnitude
_maxIterations
_maxSessionsLimit
_maxSessionsToTrainOn
_maxTimesAccessed
_migrate:forStore:
_migrations
_minIterations
_minValue
_minimumMagnitude
_modelInfo
_mtv
_multiLabelRegressionModel
_mutableData
_name
_newTaskForTraining
_noiseScaleFactors
_noiseStrategy
_numberOfColumns
_numberOfDataPoints
_numberOfNonZeroValues
_numberOfRows
_objective
_openDbIfUnlocked
_outcomes
_outputName
_outputNumReplyClasses
_paddingId
_parseFeatureVersion:descriptor:
_perLabelSupports
_pflIdentifier
_plan
_plist
_positiveLabel
_precision
_precisionAtEvaluationPointsForSessions:
_precisionAtKs
_predictionCalculator
_probThreshold
_quantizationNumberOfBuckets
_randomStore
_randomStores:
_rankedLabelsForSession:
_registerUnlockHandler
_reportScale
_results
_resultsLock
_returnValue
_rmse
_rng
_rowId
_rowIndices
_rowLength
_rowsData
_runQueries:andUpdateVersionTo:inTransactionOnDb:forStore:
_secsToExecute
_seed
_sendStatsToFidesForModel:sessionCount:positivesCount:negativesCount:support:
_sendStatsToFidesForMultiLabelModel:sessionCount:labeledStats:
_serverIteration
_sessionDataToBatchWithNumberOfColumns:rowsData:labelsData:
_sessionDescriptor
_sessionsInBatch
_shouldNormalizeCharacters
_shouldNormalizeTokens
_skew
_sparseFloatFeatureMatrix
_sparseFloatFeatures
_sparseFloatGradient
_sparseFloatWeights
_sparseIndices
_sparseQuantizedFeatureMatrix
_sparseQuantizedFeatures
_sparseQuantizedGradient
_sparseQuantizedWeights
_sparseValues
_startId
_stats
_stoppingThreshold
_store
_summableMetricsOnly
_superdata
_supervisionType
_support
_threshold
_timestamp
_tokenNGramRange
_tokenizeNewlines
_trackedMessages
_trackedSessions
_tracker
_trainWithRecipe:chunkData:args:error:
_trainingControlVariableName
_trainingNetworkPath
_trainingOutputName
_trainingPredictions
_trainingSetSize
_trueLabelBuffer
_trueLabelName
_trueNegatives
_truePositives
_truncateDbIfCorrupted
_unregisterUnlockHandler
_unsafeOpenDbIfUnlocked
_updateResultsReferenceCallback:
_useOnlyAppleInternalSessions
_vectorNormalization
_vectorizerStrategy
_version
_vocab
_weights
_weightsArray
_weightsL2norm
_weightsScaleFactor
_writeDataForTransparency:
absoluteString
addColumnIndices:
addEntriesFromDictionary:
addIndexesInRange:
addIndices:
addNegativeScores:
addNoiseToSparseMatrix:
addNoiseToSparseVector:
addObject:
addPerLabelSupport:
addPositiveScores:
addPrecisionAtK:
addRowIndices:
addScoresForOutcomes:predictions:predicate:metrics:
addSessionWithCovariates:label:sessionDescriptor:spotlightReference:isInternal:
addStartId:endId:paddingId:withMaxVectorLength:
addValues:
allValues
allocWithZone:
append:count:
appendBytes:length:
appendData:
appendFormat:
appendString:
applyOneHotNormalization
arrayWithObjects:count:
asMutableDenseVector
attributesOfItemAtPath:error:
autorelease
availableSessionsStatsReportedToAWD
awdTrackerForPlanId:
baseSessionDescriptor
batchPredict:
batchSize
bindNamedParam:toDouble:
bindNamedParam:toInt64:
bindNamedParam:toInteger:
bindNamedParam:toNSArray:
bindNamedParam:toNSData:
bindNamedParam:toNSString:
boolValue
bucketSize
bundleIdentifier
bytes
cStringUsingEncoding:
cachedStoreFromRealStore:sessionDescriptor:sessionsLimit:
chunkOfType:data:superdata:
chunkWithData:
chunkWithVector:count:
chunksFromFileAtPath:
class
classifierWithE5File:
classifierWithEspressoModelFile:
clearAllTrackedMessages
clearBuffers
clearCollectedSessions
clearColumnIndices
clearIndices
clearLastDeserializedPlans
clearNegativeScores
clearPerLabelSupports
clearPositiveScores
clearPrecisionAtKs
clearTrackedMessages
clearTrackedSessions
clearValues
closeDbForTesting
closePermanently
collectedSessions
columnIndices
columnIndicesAtIndex:
columnIndicesCount
columnLength
combineWithStats:
compare:
componentsSeparatedByString:
computeAvgGradientWithIterations:
conformsToProtocol:
constWeightsOfLength:value:
convertToBagOfIds
convertToBagOfIdsVectorForModel:
copy
copyWithZone:
corruptionMarkerPathForPath:
cosineDistanceFrom:
count
countByEnumeratingWithState:objects:count:
covariates
createDefaultSampler
createSamplerByName:
currentHandler
currentModelWeights
currentServerIteration
data
dataArray
dataChunkType
dataPointAtIndex:error:
dataPointer
dataWithBytesNoCopy:length:freeWhenDone:
dataWithContentsOfFile:
dataWithContentsOfURL:
dataWithPropertyList:format:options:error:
date
dbForTesting
debugDescription
defaultManager
deleteAllSavedRecordsWithCompletion:
deleteSessionsWithBundleID:
deleteSessionsWithBundleId:
deleteSessionsWithBundleId:domainId:
deleteSessionsWithBundleId:itemId:
deleteSessionsWithDomainIdentifiers:bundleID:
deleteSessionsWithIdentifiers:bundleID:
denseMatrixFromData:numberOfRows:numberOfColumns:
denseMatrixFromNumbers:
denseQuantizedGradient
denseQuantizedWeights
denseVector
denseVectorFromNumbers:
description
descriptorForName:version:locale:
descriptorFromPlanId:
dictionary
dictionaryRepresentation
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:
dictionaryWithObjects:forKeys:count:
didRun
doTrainingOnData:forNumberOfEpochs:withCallback:error:
domainIdentifier
doubleValue
endId
enumerateIndexesUsingBlock:
enumerateKeysAndObjectsUsingBlock:
enumerateNonZeroValuesForRow:withBlock:
enumerateNonZeroValuesWithBlock:
enumerateObjectsUsingBlock:
enumerateSessionDescriptorsUsingBlock:
enumerateValuesWithBlock:
epochsPerBatch
errorWithDomain:code:userInfo:
evalMetricsWithRmse:f1:
evalMetricsWithRmse:f1:truePositives:trueNegatives:falsePositives:falseNegatives:
evaluation
evaluationMetrics
evaluationMetricsForPredictions:objectives:predicate:start:
evaluationPoints
exceptionWithName:reason:userInfo:
f1Score:predictions:predicate:
falseNegatives
falseNegatives:predictions:predicate:
falsePositives
falsePositives:predictions:predicate:
featureMatrixL2norm
featureMatrixScaleFactor
featureVersion
featuresL2norm
featuresLength
featuresScaleFactor
featuresValueAtIndex:
fileExistsAtPath:
fileSize
filename
first
firstMatchInString:options:range:
firstObject
floatValue
frailWriteTransaction:
gaussianNoiseWithScaleFactor:minimumMagnitude:seed:
getCharacters:range:
getInt64ForColumn:
getIntegerForColumn:
getNSDataForColumn:
getNSStringForColumn:
getPFLIdentifier:
getParameterOfType:forLayerNamed:error:
getSchema:
getWordIDforToken:
globalsToGetGradientsFor
gradient
gradientL2norm
gradientLength
gradientScaleFactor
gradientValueAtIndex:
handleFailureInFunction:file:lineNumber:description:
handleFailureInMethod:object:file:lineNumber:description:
hasBatchSize
hasBucketSize
hasConfidenceScore
hasDenseQuantizedGradient
hasDenseQuantizedWeights
hasEvaluation
hasEvaluationMetrics
hasF1
hasFalseNegatives
hasFalsePositives
hasFeatureMatrix
hasFeatureMatrixL2norm
hasFeatureMatrixScaleFactor
hasFeaturesL2norm
hasFeaturesScaleFactor
hasGradient
hasGradientL2norm
hasGradientScaleFactor
hasIteration
hasK
hasLabel
hasLength
hasLinRegFeatureMatrix
hasLinRegObjectiveFeatures
hasLocale
hasLogRegGradient
hasLogRegWeights
hasMinValue
hasMinibatchStats
hasModelInfo
hasObjectiveFeatures
hasPrecision
hasPrefix:
hasRowLength
hasSecsToExecute
hasSparseFloatFeatureMatrix
hasSparseFloatFeatures
hasSparseFloatGradient
hasSparseFloatWeights
hasSparseQuantizedFeatures
hasSparseQuantizedGradient
hasSparseQuantizedWeights
hasStats
hasSupervisionType
hasSupport
hasTimestamp
hasTrueNegatives
hasTruePositives
hasVersion
hasWeights
hasWeightsL2norm
hasWeightsScaleFactor
hash
inMemoryStoreForTesting
indexOfObject:
indicesAsUInt16Data
indicesCount
indicesData
init
initFromDictionary:
initModelRegressorFromFloats:
initModelWeightsFromFloats:
initWithAWDConnection:
initWithAdapter:modelInfo:
initWithAdapter:modelInfo:quantizationBuckets:
initWithBlock:
initWithBucketSize:characterNGramRange:tokenNGramRange:shouldNormalizeTokens:shouldNormalizeCharacters:localeForNonwordTokens:tokenizeNewlines:idVectorLength:extraIdOptions:vectorizerStrategy:vectorNormalization:vocab:
initWithBucketSize:ngrams:localeForNonwordTokens:tokenizeNewlines:
initWithBundleId:domainId:itemIds:
initWithBundleIdentifier:
initWithBytes:length:
initWithBytesNoCopy:length:deallocator:
initWithBytesNoCopy:length:freeWhenDone:
initWithCapacity:
initWithChunk:intercept:
initWithClassNameKey:
initWithComponentId:
initWithContentsOfFile:options:error:
initWithCount:
initWithCovariates:outcomes:
initWithData:
initWithData:numberOfRows:numberOfColumns:
initWithData:type:shape:strides:
initWithEspressoContext:espressoPlan:espressoModel:inputNumParameters:outputNumReplyClasses:
initWithFloat:
initWithFloats:count:
initWithFloatsNoCopy:count:deallocator:
initWithFloatsNoCopy:count:freeWhenDone:
initWithFloatsNoCopy:count:intercept:
initWithGradient:loss:
initWithIndexesInRange:
initWithLabel:limit:rowId:
initWithLearningRate:minIterations:stoppingThreshold:weights:intercept:gradientCalculator:predictionCalculator:batchPredictionCalculator:
initWithLength:numberOfNonZeroValues:indices:values:
initWithLength:numberOfNonZeroValues:indicesData:valuesData:
initWithMagnitude:
initWithMagnitude:seed:
initWithMaxIterationCount:noiseScaleFactors:minimumMagnitude:noiseMechanism:inplaceNorm:
initWithMaxIterationCount:noiseScaleFactors:minimumMagnitude:seed:noiseMechanism:inplaceNorm:
initWithMetaTrainingVariables:espressoTrainingVariables:
initWithMigrations:
initWithModel:
initWithMutableData:
initWithName:version:locale:
initWithNumbers:
initWithObjects:forKeys:
initWithPFLIdentifier:
initWithPath:
initWithPath:allowSkipSchema:
initWithPlan:
initWithPlanId:store:
initWithPlanId:store:noiseStrategy:sessionDescriptor:maxSessionsToTrainOn:trainingSetSize:labelsToTrainOn:currentServerIteration:lossThresholdForStopping:epochsPerBatch:probThreshold:evaluationLevel:reportScale:summableMetricsOnly:
initWithPlanId:store:sessionDescriptor:maxSessionsLimit:sessionsInBatch:labelAndWeights:modelClassName:intercept:evaluationPoints:tracker:evaluationLevel:
initWithPlanId:store:version:returningAfterRunning:
initWithPlanId:version:
initWithPlanId:version:returningAfterRunning:
initWithPlist:chunks:context:
initWithRegressorFromFloat:
initWithRowsData:labelsData:inputName:inputDim:trueLabelName:
initWithSeed:
initWithSessionBatch:
initWithSparseMatrix:
initWithStore:fidesStore:availableSessionsTracker:
initWithStore:tracker:noiseStrategy:planId:sessionDescriptor:maxSessionsLimit:sessionsInBatch:currentServerIteration:currentModelWeights:localLearningRate:stoppingThreshold:localMinimumIterations:localGradientIterations:useOnlyAppleInternalSessions:skew:threshold:isMultiLabel:intercept:positiveLabel:evaluationLevel:reportScale:
initWithStore:tracker:planId:sessionDescriptor:maxSessionsLimit:sessionsInBatch:currentModelWeights:intercept:skew:threshold:isMultiLabel:positiveLabel:evaluationLevel:
initWithStores:sessionDescriptor:seed:
initWithTimestamp:serverIteration:
initWithTrainingModelDefinition:forPlatform:error:
initWithTrainingNetworkPath:inferenceInputs:inferenceOutputs:trainingInputs:trainingOutputs:trainingControlVariableName:withInitializer:error:
initWithTrainingNetworkPath:inputName:inputDim:outputName:trueLabelName:lossValueName:trainingOutputName:trainingControlVariableName:initializerName:globalsToGetGradientsFor:layerWeightsToGetGradientsFor:layerBiasesToGetGradientsFor:
initWithType:data:
initWithVersion:
initWithVocab:
initWithWeights:intercept:
initWithWeightsArray:andIntercept:
initializeDatabase:withContentProtection:newDatabaseCreated:errorHandler:
inputDim
inputName
insertIntoTable:dictionary:
intValue
integerValue
intercept
inverseValues
isBetaBuild
isClassCLocked
isDNUEnabled
isDbOpen
isEqual:
isEqualToData:
isEqualToEspressoTrainingPlan:
isEqualToEspressoTrainingVariables:
isEqualToHashingVectorizer:
isEqualToLabelLimitRowId:
isEqualToString:
isKindOfClass:
isMemberOfClass:
isMultiLabel
isMultiLabelModel:
isReadableFileAtPath:
isSubSessionDescriptor
isSymmetric
isUnlocked
isValidGradient:error:
isValidPlanId:
iteration
l1norm
l2norm
label
labelLimitRowIdWithLabel:limit:rowId:
lastDeserializedPlanWithId:
lastDeserializedPlansMap
lastObject
lastTrainingFeaturizationForModelName:andLocale:
lastUsedTimestampLimit
layerBiasesToGetGradientsFor
layerWeightsToGetGradientsFor
length
limit
limitSessionsByLastUsedTTL:
limitSessionsForEachLabelWithSessionDescriptor:totalSessionLimit:
limitSessionsWithSessionDescriptor:withLabel:limit:
linRegFeatureMatrix
linRegObjectiveFeatures
loadDataForModel:excludeItemIdsUsedWithin:limit:onlyAppleInternal:positiveLabel:skew:block:
loadDataForModel:privacyBudgetRefreshPeriod:labels:batchSize:block:
loadSessionsForModel:excludeItemIdsUsedWithin:limit:onlyAppleInternal:block:
loadSessionsForModel:excludeItemIdsUsedWithin:limit:onlyAppleInternal:positiveLabel:skew:block:
loadSessionsForModel:excludeItemIdsUsedWithin:withSkew:andLimit:block:
loadSessionsForModel:privacyBudgetRefreshPeriod:labels:batchSize:block:
loadSessionsWithBlock:
localGradientIterations
localLearningRate
localMinimumIterations
locale
localeIdentifier
localeWithLocaleIdentifier:
lock
logDbNotOpenEvent
logRegGradient
logRegWeights
longValue
loss
lossThresholdForStopping
lossValueName
makeStringForShape:
matchesInString:options:range:
matrix
matrixWithConstantColumn
maxAbsValue
maxSessionsLimit
maxSessionsToTrainOn
maxValue
maxVersion
mergeFrom:
messageForGradient:scaleFactor:minibatchStats:evaluationMetrics:serverIteration:modelInfo:numberOfBuckets:
messageForWeights:scaleFactor:minibatchStats:evaluationMetrics:modelInfo:numberOfBuckets:
migrate:to:forStore:
migrateDenseDoubleVectorToDenseFloatVector:
migrateTo:
migrations
minValue
minibatchStats
minibatchStatsForPositiveLabels:
minimumMagnitude
mockMigrationsByAddingQueries:
mockTracker
mockTrackerForPlanId:
modelInfo
modelInfoFromPlanId:
modelRegressorFromFloat:
modelRegressorFromFloats:
modelWeightsFromFloats:
modelWeightsOfLength:
modelWeightsOfLength:rng:
modelWeightsOfLength:rngSeed:
multiLabelRegressionModel
mutableBytes
mutableCopy
mutableCopyWithZone:
mutableData
mutablePtr
name
negativeScores
negativeScoresAtIndex:
negativeScoresCount
next
nextDouble
noiseMechanism
noiseScaleFactors
noiseStrategy
normalizeRegressor:
null
numberOfDataPoints
numberOfMatchesInString:options:range:
numberOfNonZeroValues
numberOfParametersInTensor:
numberOfRanges
numberOfRows
numberOfRowsInTable:
numberWithDouble:
numberWithFloat:
numberWithInt:
numberWithInteger:
numberWithLongLong:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLong:
numberWithUnsignedLongLong:
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
objective
originalValueAtIndex:
originalValueAtRow:column:
outcomes
outputName
padId
parsecTrackerForPlanId:
path
pathExtension
payloadForString:
perLabelSupportAtIndex:
perLabelSupportType
perLabelSupports
perLabelSupportsCount
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
plan
planFromData:store:trainingNetworkPath:
planFromData:withArgs:
planFromData:withStore:
planId
planIdFromString:
planReceivedWithPayload:error:
planReceivedWithRecipe:attachments:error:
planWithStore:tracker:sessionDescriptor:arguments:
plist
pluginShouldAddNoiseAndEncryptResult:
pointerValue
positiveLabel
positiveLabels
positiveScores
positiveScoresAtIndex:
positiveScoresCount
postMetricId:message:
precision
precision:predictions:predicate:
precisionAtK:
precisionAtKAtIndex:
precisionAtKType
precisionAtKs
precisionAtKsCount
predict:
prepAndRunQuery:onPrep:onRow:onError:
probThreshold
processInfo
processName
processNonZeroValuesInPlaceWithBlock:
processValuesInPlaceWithBlock:
propertyListWithData:options:format:error:
quantizationNumberOfBuckets
quantizedDenseVectorFromDenseVector:numberOfBuckets:
quantizedSparseMatrixFromSparseMatrix:numberOfBuckets:
quantizedSparseVectorFromDenseVector:numberOfBuckets:
quantizedSparseVectorFromSparseVector:numberOfBuckets:
quantizedValuesAsUInt8DataWithMin:max:
raise
raise:format:
randomlyNamedInMemoryPathWithBaseName:
rangeAtIndex:
readFrom:
readObjectWithData:chunks:context:
readObjectWithPlist:chunks:context:
readTransaction:
recall:predictions:predicate:
referenceWithBundleId:domainId:itemIds:
registerForLockStateChangeNotifications:
registerQueriableMetric:callback:
regressorFor:
regressorVectorFrom:
regularExpressionWithPattern:options:error:
removeAllObjects
removeIndex:
removeItemAtPath:error:
replaceBytesInRange:withBytes:
reportScale
reportStatsToAWD
resetBytesInRange:
respondsToSelector:
result
retain
retainCount
rmse
roundFloatToSigFigs:sigFigs:
rowId
rowIndices
rowIndicesAtIndex:
rowLength
runBlockWithTrie:
runParallelPlansWithPlanId:tracker:noiseScaleFactors:noiseMinimumMagnitude:weights:serverIteration:useIntercept:noiseMechanism:usingRandomlySelected:
runWithError:
sample
samplerWithScaleFactorFor:usingNorm:
saveRecordWithData:recordInfo:completion:
scaleAndAddNoiseToDenseVector:usingNorm:scaleFactor:
scaleInPlaceWithFactor:
scaleWithVectorNormalization:
second
secsToExecute
self
sendCustomFeedback:
sendSessionStatsToFides
serialize
serializeChunks:
serializeLexiconToFile:tokenToWordIDDict:
serializePlan:
sessionDescriptor
sessionDescriptorIdFor:
sessionDimensionsForModel:startingRowId:onlyAppleInternal:labelFilter:
sessionStats
sessionStatsForSessionDescriptor:
setAWDMetricQueryDelegate:
setBatchSize:
setBucketSize:
setColumnIndices:count:
setColumnLength:
setConfidenceScore:
setCovariates:
setDenseQuantizedGradient:
setDenseQuantizedWeights:
setDictionary:
setEvaluation:
setEvaluationMetrics:
setF1:
setFalseNegatives:
setFalsePositives:
setFeatureMatrixL2norm:
setFeatureMatrixScaleFactor:
setFeaturesL2norm:
setFeaturesScaleFactor:
setGradientL2norm:
setGradientScaleFactor:
setHasBatchSize:
setHasBucketSize:
setHasColumnLength:
setHasConfidenceScore:
setHasF1:
setHasFalseNegatives:
setHasFalsePositives:
setHasFeatureMatrixL2norm:
setHasFeaturesL2norm:
setHasFeaturesScaleFactor:
setHasGradientL2norm:
setHasGradientScaleFactor:
setHasIteration:
setHasK:
setHasLabel:
setHasLength:
setHasPrecision:
setHasRmse:
setHasRowLength:
setHasSecsToExecute:
setHasSupervisionType:
setHasSupport:
setHasTimestamp:
setHasTrueNegatives:
setHasTruePositives:
setHasWeightsL2norm:
setHasWeightsScaleFactor:
setIndices:count:
setIntercept:
setIteration:
setK:
setLabel:
setLastDeserializedPlanWithId:toPlan:
setLastUsedTimestampLimit:
setLength:
setLinRegFeatureMatrix:
setLinRegObjectiveFeatures:
setLocale:
setLogRegGradient:
setLogRegWeights:
setMatrix:
setMaxNumberOfElements:
setMaxTimesAccessed:
setMinValue:
setMinibatchStats:
setMinimumMagnitude:
setModelInfo:
setName:
setNegativeScores:count:
setNoiseMechanism:
setNoiseScaleFactors:
setNumberOfNonZeroValues:
setObject:atIndexedSubscript:
setObject:forKey:
setObject:forKeyedSubscript:
setObjective:
setPerLabelSupports:
setPositiveScores:count:
setPrecision:
setPrecisionAtKs:
setReportSamplingRate:
setRmse:
setRowIndices:count:
setRowLength:
setSecsToExecute:
setSparseFloatFeatureMatrix:
setSparseFloatFeatures:
setSparseFloatGradient:
setSparseFloatWeights:
setSparseIndices:
setSparseQuantizedFeatureMatrix:
setSparseQuantizedFeatures:
setSparseQuantizedGradient:
setSparseQuantizedWeights:
setSparseValues:
setStats:
setSuperdata:
setSupervisionType:
setSupport:
setTimestamp:
setTrueNegatives:
setTruePositives:
setValues:count:
setVectorizerNormalization:
setVersion:
setWeights:
setWeightsL2norm:
setWeightsScaleFactor:
shape
sharedSession
sharedSingletonWithDirectory:
simulatorWithDbPaths:sessionDescriptor:sessionsInBatch:maxSessionsLimit:seed:
skipFromZeroSchema:
sliceFrom:to:
solve
solveForCovariates:objectives:
solveWithAvgGradient:maxNumberOfIterations:
solverWithWeights:
solverWithWeights:andIntercept:learningRate:minIterations:stoppingThreshold:
solverWithWeights:andIntercept:learningRate:minIterations:stoppingThreshold:l2RegularizationRate:
solverWithWeights:andIntercept:learningRate:minIterations:stoppingThreshold:regularizationStrategy:regularizationRate:l1Ratio:
sortDescriptorWithKey:ascending:comparator:
sortedArrayUsingDescriptors:
sparseFloatFeatureMatrix
sparseFloatFeatures
sparseFloatGradient
sparseFloatMatrixFromDenseMatrix:
sparseFloatMatrixFromSparseMatrix:
sparseFloatVectorFromModelWeights:
sparseFloatVectorFromSparseVector:
sparseFloatWeights
sparseIndices
sparseMatrixFromNumbers:
sparseMatrixWithNumberOfRows:numberOfColumns:
sparseQuantizedFeatureMatrix
sparseQuantizedFeatures
sparseQuantizedGradient
sparseQuantizedWeights
sparseValues
sparseVectorEmptyWithLength:
sparseVectorFromDense:
sparseVectorFromDense:length:
sparseVectorFromNumbers:
sparseVectorFromNumbers:indices:length:
sparseVectorToDense:length:
sparseVectorWithLength:numberOfNonZeroValues:block:
sparseVectorWithLength:numberOfNonZeroValues:isSparseIndexInt64:sparseIndices:sparseValues:toDenseValues:withLength:
stats
statsWithPerLabelCounts:
statsWithSize:support:
stoppingThreshold
store
storeSession:label:model:
storeSession:label:model:bundleId:domainId:itemIds:isAppleInternal:
stringByAppendingString:
stringByReplacingMatchesInString:options:range:withTemplate:
stringValue
stringWithFormat:
stringWithUTF8String:
subSessionDescriptorForLabel:
substringWithRange:
sumInPlaceWithVector:
summableMetricsOnly
superclass
supportForLabel:
timeIntervalSince1970
timeIntervalSinceNow
timestamp
toDictionary
toPlistWithChunks:
toTokens:fromInput:withLength:
toVec
tokenize:withLength:
tokenizeToIds:fromString:tokens:tokenCount:length:
trackEvaluationMetrics:minibatchStats:
trackGradient:scaleFactor:minibatchStats:evaluationMetrics:serverIteration:
trackPrecisionAtK:
trackPrecisionAtK:minibatchStats:
trackSessionWithCovariates:label:locale:
trackSessionWithCovariates:label:locale:supervisionType:
trackWeights:scaleFactor:minibatchStats:evaluationMetrics:
trackedEvaluations
trackedGradients
trackedMessagesByClass:
trackedWeights
trackerForModelName:modelVersion:
trackerForModelName:modelVersion:modelLocale:
trackerForPlanId:
trainingControlVariableName
trainingNetworkPath
trainingOutputName
transform:
transformBagOfIds:shouldDecrement:
transformSequentialNGrams:
transformWithFrequency:shouldDecrement:
transformWithWordPiece:
trimDbWithDeferralBlock:
trueLabelName
trueNegatives
trueNegatives:predictions:predicate:
truePositives
truePositives:predictions:predicate:
truncateDatabaseAtPath:
tupleWithFirst:second:
unlock
unregisterForLockStateChangeNotifications:
unsignedIntValue
unsignedIntegerValue
unsignedLongLongValue
unsignedLongValue
updateLastTrainingFeaturizationForModel:andData:
updateSessionsAndLabelForModel:block:
updateTable:dictionary:whereClause:onError:
useOnlyAppleInternalSessions
userVersion
vacuumDbWithDeferralBlock:
vacuumWithShouldContinueBlock:error:
valueAt:
valueAtIndex:
valueAtRow:column:
valueForKeyPath:
valueWithPointer:
values
valuesAtIndex:
valuesCount
valuesData
vecByAppendingVec:
vector
vectorWithConstantColumn
weightsArray
weightsByAppendingWeights:
weightsFromNumbers:
weightsL2norm
weightsScaleFactor
withBucketSize:andCharNgramOrder:
withBucketSize:andNgramOrder:
withBucketSize:andNgrams:
withBucketSize:characterNGramRange:tokenNGramRange:shouldNormalizeTokens:shouldNormalizeCharacters:
withBucketSize:characterNGramRange:tokenNGramRange:shouldNormalizeTokens:shouldNormalizeCharacters:localeForNonwordTokens:tokenizeNewlines:
withBucketSize:characterNGramRange:tokenNGramRange:shouldNormalizeTokens:shouldNormalizeCharacters:localeForNonwordTokens:tokenizeNewlines:idVectorLength:extraIdOptions:vectorizerStrategy:vectorNormalization:
withBucketSize:characterNGramRange:tokenNGramRange:shouldNormalizeTokens:shouldNormalizeCharacters:localeForNonwordTokens:tokenizeNewlines:idVectorLength:extraIdOptions:vectorizerStrategy:vectorNormalization:vocab:
withBucketSize:ngrams:localeForNonwordTokens:tokenizeNewlines:
withWeights:
withWeights:andIntercept:
writeTo:
writeToDataWithObject:andChunks:
writeToFile:atomically:
writeToPlistWithObject:andChunks:
writeTransaction:
zeroWeightsOfLength:
zone
@24@0:8[10Q]16
Q32@0:8[10Q]16Q24
@24@0:8@16
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"NSArray"24@0:8@"PMLSparseVector"16
v16@0:8
@64@0:8^v16^v24{?=^vi}32Q48Q56
{?="plan"^v"network_index"i}
@40@0:8@16@24Q32
v68@0:8@16d24Q32B40Q44d52@?60
@"PMLTrainingStoredSessionBatch"
@56@0:8@16@24Q32Q40Q48
@24@0:8Q16
@80@0:8@16@24{?=ff}32f40@44Q52B60q64Q72
@"NSArray"
@"PMLSessionDescriptor"
@"_PASRng"
v28@0:8I16@20
v28@0:8I16@"PBCodable"20
@24@0:8^{_NSZone=}16
v24@0:8Q16
v20@0:8B16
v24@0:8@16
@"AWDProactiveModelFittingEvalMetrics"
@"AWDProactiveModelFittingMinibatchStats"
@"AWDProactiveModelFittingModelInfo"
@"NSMutableArray"
{?="timestamp"b1}
v20@0:8f16
f16@0:8
@"AWDProactiveModelFittingQuantizedDenseVector"
@"AWDProactiveModelFittingSparseFloatVector"
@"AWDProactiveModelFittingQuantizedSparseVector"
{?="timestamp"b1"weightsL2norm"b1"weightsScaleFactor"b1}
@32@0:8@16@24
@"PMLMutableDenseVector"
@"NSNumber"
@68@0:8f16Q20f28@32B40@?44@?52@?60
@32@0:8^f16Q24
f24@0:8@16
v32@0:8@16@24
@"PMLModelWeights"
@"PMLSparseMatrix"
@"PMLModelRegressor"
@40@0:8@16@24@32
@24@0:8@"NSMutableArray"16
@40@0:8@16@"NSArray"24@"NSDictionary"32
@24@0:8^@16
@"NSDictionary"24@0:8^@16
@100@0:8@16@24@32Q40Q48@56@64B72@76@84Q92
@"PMLTrainingStore"
@"<PMLMultiLabelClassifierModelProtocol>"
@"<PMLMultiLabelEvaluationTrackerProtocol>"
@"NSString"
{?="timestamp"b1"featuresL2norm"b1"featuresScaleFactor"b1}
^I16@0:8
v20@0:8I16
I24@0:8Q16
v32@0:8^I16Q24
I16@0:8
{?="list"^I"count"Q"size"Q}
{?="bucketSize"b1"length"b1"minValue"b1}
@40@0:8@16q24q32
q16@0:8
@48@0:8@16@24@32@40
@160@0:8@16@24@32@40@48Q56Q64Q72@80f88f92Q96Q104B112d116d124B132B136Q140Q148B156
@48@0:8@16@24@?32@40
v24@0:8@?16
@"<PMLLogRegTrackerProtocol>"
@"<PMLNoiseStrategy>"
@"AWDProactiveModelFittingSparseFloatMatrix"
@"AWDProactiveModelFittingQuantizedSparseMatrix"
{?="timestamp"b1"featureMatrixL2norm"b1"featureMatrixScaleFactor"b1}
^Q16@0:8
Q24@0:8Q16
v32@0:8^Q16Q24
^f16@0:8
f24@0:8Q16
v32@0:8^f16Q24
{?="list"^Q"count"Q"size"Q}
{?="list"^f"count"Q"size"Q}
{?="length"b1}
@20@0:8f16
@28@0:8f16Q20
{?="s"[2Q]}
@32@0:8d16Q24
d16@0:8
@40@0:8Q16@24@32
q32@0:8@16@24
q40@0:8@16@24@32
B44@0:8@16I24@28@36
@24@0:8^Q16
v24@0:8d16
@28@0:8@16B24
v68@0:8@16q24@32@40@48@56B64
v56@0:8@16d24@32Q40@?48
@44@0:8@16Q24B32@36
v64@0:8@16@24Q32Q40d48@?56
v84@0:8@16Q24Q32d40Q48B56Q60d68@?76
v64@0:8@16d24@32Q40Q48@?56
v52@0:8@16d24Q32B40@?44
v32@0:8@16Q24
v40@0:8@16@24Q32
Q24@0:8@16
q24@0:8@16
v40@0:8@16q24@32
v52@0:8@16d24d32i40@?44
@"_PASSqliteDatabase"
{?="columnLength"b1"rowLength"b1}
@32@0:8r^f16i24B28
@32@0:8@16Q24
{?="bucketSize"b1"columnLength"b1"minValue"b1"rowLength"b1}
@28@0:8@"NSArray"16B24
@28@0:8f16f20i24
B36@0:8@16B24^f28
v24@0:8@"PMLSparseVector"16
v24@0:8@"PMLSparseMatrix"16
B36@0:8@"PMLMutableDenseVector"16B24^f28
@48@0:8i16{?=ff}20f28i32q36B44
@44@0:8i16{?=ff}20f28q32B40
{_PMLPreNoiseScaleFactorAndNoiseSampler=@f}28@0:8@16B24
{?=ff}16@0:8
v24@0:8{?=ff}16
v24@0:8q16
{?="gaussianScaleFactor"f"laplaceScaleFactor"f}
f40@0:8@16@24@?32
Q40@0:8@16@24@?32
v48@0:8@16@24@?32@40
f24@0:8f16i20
f32@0:8Q16Q24
@"PMLTrackerMockAdapter"
@24@0:8^I16
@"NSDictionary"
r^f16@0:8
@32@0:8r^f16Q24
@36@0:8^f16Q24B32
@40@0:8^f16Q24@?32
@24@0:8i16i20
@"NSMutableData"
v32@0:8r^f16Q24
@24@0:8f16f20
@56@0:8f16f20Q24Q32Q40Q48
{?="falseNegatives"b1"falsePositives"b1"trueNegatives"b1"truePositives"b1"f1"b1"rmse"b1"secsToExecute"b1}
@24@0:8r*16
v52@0:8@16q24@32@40B48
@32@0:8@16^@24
@40@0:8@16@24^@32
v52@0:8@"PMLSparseVector"16q24@"PMLSessionDescriptor"32@"PMLSpotlightReference"40B48
v32@0:8@"NSArray"16@"NSString"24
v24@0:8@"NSString"16
v24@0:8@?<B@?>16
@"NSDictionary"32@0:8@"NSData"16^@24
@"NSDictionary"40@0:8@"NSDictionary"16@"NSArray"24^@32
v32@0:8@16@?24
@"NSMutableDictionary"
@32@0:8Q16Q24
@24@0:8^{sparse_m_float=}16
v24@0:8^{sparse_m_float=}16
v32@0:8Q16@?24
^{sparse_m_float=}16@0:8
^{sparse_m_float=}
v40@0:8@16Q24@32
v48@0:8@16Q24@32Q40
@120@0:8@16@24@32@40Q48Q56@64Q72d80Q88d96Q104B112B116
i24@0:8@16
B32@0:8@16^@24
@56@0:8@16@24@32@40@?48
@56@0:8@16@24@32@40^@48
@56@0:8@16@24@32@40@48
@76@0:8d16@24@32@40@48@56d64B72
@?24@0:8@16
@"ETTaskDefinition"
@"PMLMetaTrainingVariables"
@"PMLEspressoTrainingVariables"
@"<ETDataProvider>"
{?="label"b1"supervisionType"b1"timestamp"b1"confidenceScore"b1}
@"<PMLPlanProtocol>"
{?="label"b1"support"b1}
@44@0:8@16B24f28Q32f40
@48@0:8@16B24f28Q32f40f44
@60@0:8@16B24f28Q32f40Q44f52f56
@"PMLGradientSolver"
@20@0:8i16
i16@0:8
@"PMLDenseVector"
@36@0:8i16i20@24B32
@104@0:8i16{_NSRange=QQ}20{_NSRange=QQ}36B52B56@60B68Q72Q80Q88q96
@112@0:8i16{_NSRange=QQ}20{_NSRange=QQ}36B52B56@60B68Q72Q80Q88q96@104
@72@0:8i16{_NSRange=QQ}20{_NSRange=QQ}36B52B56@60B68
@60@0:8i16{_NSRange=QQ}20{_NSRange=QQ}36B52B56
{_NSRange="location"Q"length"Q}
@"NSLocale"
@"<PMLWordPieceVocabProtocol>"
@44@0:8@16f24@28@36
@52@0:8@16f24@28@36Q44
@"NSDictionary"44@0:8@"PMLDenseVector"16f24@"AWDProactiveModelFittingMinibatchStats"28@"AWDProactiveModelFittingEvalMetrics"36
@"NSDictionary"52@0:8@"PMLDenseVector"16f24@"AWDProactiveModelFittingMinibatchStats"28@"AWDProactiveModelFittingEvalMetrics"36Q44
@"NSDictionary"32@0:8@"AWDProactiveModelFittingEvalMetrics"16@"AWDProactiveModelFittingMinibatchStats"24
@"NSDictionary"24@0:8@"NSDictionary"16
@"NSDictionary"32@0:8@"NSDictionary"16@"AWDProactiveModelFittingMinibatchStats"24
@40@0:8@16Q24Q32
f32@0:8@16@24
@"_PASLazyResult"
v52@0:8@16Q24Q32Q40f48
@48@0:8@16@24@32^@40
@"DESRecordStore"
@"PMLAWDAvailableSessionsTracker"
@60@0:8@16f24@28@36@44Q52
@68@0:8@16f24@28@36Q44@52Q60
@"<PMLTrackerAdapterProtocol>"
@44@0:8@16@24Q32B40
@36@0:8@16Q24B32
{?="bucketSize"b1"minValue"b1}
@36@0:8I16@20@28
@"NSData"
@28@0:8r^f16i24
@28@0:8r^d16i24
r^d16@0:8
i40@0:8^{_NSRange=QQ}16@24Q32
i52@0:8^f16@24^{_NSRange=QQ}32i40Q44
{?="batchSize"b1"support"b1}
@112@0:8@16@24Q32@40@48@56@64@72@80@88@96@104
@"NSURL"
@28@0:8i16@20
@28@0:8i16Q20
@24@0:8i16f20
@"AWDProactiveModelFittingEvaluation"
@"AWDProactiveModelFittingLinRegFeatureMatrix"
@"AWDProactiveModelFittingLinRegObjectiveFeatures"
@"AWDProactiveModelFittingLogRegGradient"
@"AWDProactiveModelFittingLogRegWeights"
@24@0:8#16
B32@0:8@16@24
@"_PASCFBurstTrie"
@112@0:8@16@24@32@40Q48Q56@64B72d76d84B92Q96Q104
@"<PMLEvaluationTrackerProtocol>"
@32@0:8Q16^@24
@"NSDictionary"32@0:8Q16^@24
@56@0:8@16@24@32Q40@48
I24@0:8@16
I24@0:8@"NSString"16
@"<PMLAWDMetricQueryDelegate>"
@"AWDServerConnection"
@40@0:8Q16Q24@?32
v68@0:8Q16Q24B32r^v36r^f44^f52Q60
@48@0:8Q16Q24@32@40
@48@0:8Q16Q24^q32^f40
v24@0:8^f16
v24@0:8^q16
v48@0:8q16q24q32Q40
^q16@0:8
@28@0:8Q16f24
{?="k"b1"precision"b1}
@"NSLock"
{?="iteration"b1"timestamp"b1"gradientL2norm"b1"gradientScaleFactor"b1}
