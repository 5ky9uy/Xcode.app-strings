@(#)PROGRAM:ProactiveML  PROJECT:Suggestions-1193.0.2
 %zu
inputSequence
outputLabels
PMLPlanSimulator.m
Couldn't load sessions for %@
Can't instantiate simulator, need at least one db file.
Multiple batches not supported in simulation.
Can't instantiate simulator, no db at %@
v16@?0Q8
Unsupported proto buf message: %@
%@ %@
timestamp
modelInfo
minibatchStats
evaluationMetrics
precisionAtK
sparseFloatWeights
sparseQuantizedWeights
weightsScaleFactor
weightsL2norm
denseQuantizedWeights
PMLGradientSolver.m
Invalid parameter not satisfying: %@
gradient
weights
gradientCalculator
predictionCalculator
batchPredictionCalculator
Covariates must have the same column-length as weights. Got covariates with %tu columns but weights of length %d
Invalid covariates, length: %tu but model weights length: %d
PMLMultiLabelRegressionEvaluationPlan.m
Invalid planId. Must be <name>-<version>-<locale> but got %@
Can't instantiate %@. Unknown model class: %@
q24@?0@8@16
v32@?0@"PMLModelWeights"8Q16^B24
PLAN_ID
SESSIONS_MODEL_HANDLE
SESSIONS_LIMIT
SESSIONS_IN_BATCH
POSITIVE_LABELS
WEIGHTS_ARRAY
MULTI_LABEL_REGRESSION_MODEL_TYPE
INTERCEPT
EVALUATION_POINTS
TRACKER
TRACKER_TYPE
EVALUATION_LEVEL
TRAINING_STORE
Can't instantiate %@. Missing "store" dependency.
v32@?0@"NSNumber"8Q16^B24
Can't instantiate %@. Unknown tracker class: %@
planId
sparseFloatFeatures
sparseQuantizedFeatures
featuresScaleFactor
featuresL2norm
idx (%tu) is out of range (%tu)
indices
values
length
minValue
bucketSize
stats
PMLLabelLimitRowId.m
label
limit >= 0
rowId >= 0
PMLLogRegTrainingPlan.m
<%@ %@>
Cannot train model with covariates of length %tu but model weights of length %d (planid = %@)
B12@?0f8
loss
v24@?0@"PMLTrainingStoredSessionBatch"8^B16
name
version
locale
plan
IS_SYNCHRONOUS
WEIGHTS
LEARNING_RATE
STOPPING_THRESHOLD
MIN_ITERATIONS
GRADIENT_ITERATIONS
SERVER_ITERATION
IS_MULTI_LABEL
POSITIVE_LABEL
NOISE_STRATEGY_TYPE
NOISE_STRATEGY
ONLY_INTERNAL_SESSIONS
SKEW
THRESHOLD
REPORT_SCALE
BEFORE_NOISE_SCALING
PMLNoNoiseStrategy
PMLDiffPrivacyNoiseStrategy
PMLSeparatedDPNoiseStrategy
PFL_ID
PLUGIN_SHOULD_ADD_NOISE_AND_ENCRYPT_RESULT
noiseStrategy
FiM_logreg-1.0-en
serverIteration
intercept
generateWeightsOfLength
localLearningRate
stoppingThreshold
localMinimumIterations
localGradientIterations
reportScale
useOnlyAppleInternalSessions
sessionsInBatch
maxSessionsLimit
positiveLabel
sparseFloatFeatureMatrix
sparseQuantizedFeatureMatrix
featureMatrixScaleFactor
featureMatrixL2norm
PMLTrainingStore.m
Number of labels %lu does not match number of rows specified %lu
covariates
sessionDescriptor
bundleId
itemIds
sessions
creationTimestamp
sessionDescriptorId
covariatesLength
covariatesIndices
covariatesValues
isAppleInternal
sessionsDomainIds
sessionId
bundleIdentifier
domainIdentifier
sessionsItemIds
itemIdentifier
lastUsed
timesAccessed
v8@?0
v56@?0Q8@"NSArray"16@"NSData"24Q32Q40^B48
AND isAppleInternal = 1 
SELECT covariatesLength, COUNT(*) FROM sessions WHERE sessionDescriptorId = (SELECT id FROM sessionsDescriptors WHERE name = :name AND version = :version AND locale = :locale) AND id > :rowId %@ %@ ORDER BY id
:name
:version
:locale
numberOfRows
numberOfColumns
SELECT sessions.id, sessions.label, sessions.covariatesLength, sessions.covariatesIndices, sessions.covariatesValues, sessionsItemIds.timesAccessed FROM sessions JOIN sessionsItemIds ON sessions.id = sessionsItemIds.sessionId AND sessions.sessionDescriptorId = (SELECT id FROM sessionsDescriptors WHERE name = :name AND version = :version AND locale = :locale) AND sessionsItemIds.lastUsed <= :lastUsedMax AND sessionsItemIds.timesAccessed < :timesUsedMax AND sessions.id > :rowId %@ ORDER BY sessions.id limit :limit
:limit
:lastUsedMax
:timesUsedMax
sessionId = %ld
{_PASDBIterAction_=B}16@?0@"NSError"8
Read label %lu while specified %@. Matcher: %@
Invalid session from db (row id %lu): covariatesIndices and covariatesValues must contain the same number of elements (expected bytes length in int/float ratio but got %lu and %lu).
Invalid session from db (row id %lu), covariatesLength has to be %lu, got %lu.
Invalid session from db (row id %lu): idx %d out of bounds [0, %lu).
v32@?0@"NSNumber"8@"PMLLabelLimitRowId"16^B24
AND sessions.label = %lu AND sessions.id in (SELECT sessionId from sessionsItemIds WHERE lastUsed < %f AND timesAccessed < %lu) 
AND sessions.label = 0 AND sessions.id in (SELECT sessionId from sessionsItemIds WHERE lastUsed < %f AND timesAccessed < %lu) 
v48@?0Q8@"NSArray"16@"NSData"24@"NSDictionary"32^B40
SELECT sessions.id, sessions.label, sessions.covariatesLength, sessions.covariatesIndices, sessions.covariatesValues, sessionsItemIds.timesAccessed FROM sessions JOIN sessionsItemIds ON sessions.id = sessionsItemIds.sessionId AND sessions.sessionDescriptorId = (SELECT id FROM sessionsDescriptors WHERE name = :name AND version = :version AND locale = :locale) AND sessionsItemIds.lastUsed <= :lastUsedMax AND sessionsItemIds.timesAccessed < :timesUsedMax AND sessions.label IN _pas_nsarray(:labels) ORDER BY RANDOM() limit :limit
:labels
AND label = %lu AND sessions.id in (SELECT sessionId from sessionsItemIds WHERE lastUsed < %f AND timesAccessed < %lu) 
SELECT count(*) FROM sessions WHERE sessionDescriptorId = (SELECT id FROM sessionsDescriptors WHERE name = :name AND version = :version AND locale = :locale) 
SELECT DISTINCT label FROM sessions WHERE UNLIKELY(sessionDescriptorId = (SELECT id FROM sessionsDescriptors WHERE name = :name AND version = :version AND locale = :locale))
DELETE FROM sessions WHERE creationTimestamp < :lastUsedExpirationDate AND (id in (SELECT sessionId from sessionsItemIds WHERE lastUsed < :lastUsedExpirationDate))
:lastUsedExpirationDate
DELETE FROM sessions WHERE (id in (SELECT sessionId from sessionsItemIds WHERE timesAccessed >= :maxTimesAccessed))
:maxTimesAccessed
label = :label AND
SELECT count(*) FROM sessions WHERE %@ UNLIKELY(sessionDescriptorId = (SELECT id FROM sessionsDescriptors WHERE name = :name AND version = :version AND locale = :locale))
:label
DELETE FROM sessions WHERE id IN (   SELECT id FROM sessions   WHERE %@   UNLIKELY(sessionDescriptorId = (SELECT id FROM sessionsDescriptors WHERE name = :name AND version = :version AND locale = :locale))   ORDER BY RANDOM() LIMIT :limit )
DELETE FROM sessions WHERE id IN (SELECT sessionId FROM sessionsItemIds WHERE bundleIdentifier = :bundleIdentifier)
:bundleIdentifier
DELETE FROM sessions WHERE id IN (SELECT sessionId FROM sessionsItemIds WHERE bundleIdentifier = :bundleIdentifier AND itemIdentifier = :itemIdentifier)
:itemIdentifier
DELETE FROM sessions WHERE id IN (SELECT sessionId FROM sessionsDomainIds WHERE bundleIdentifier = :bundleIdentifier AND domainIdentifier = :domainIdentifier  UNION ALL SELECT sessionId FROM sessionsDomainIds WHERE bundleIdentifier = :bundleIdentifier AND domainIdentifier >= :domainIdentifier || '.' AND domainIdentifier < :domainIdentifier || '/')
:domainIdentifier
SELECT mh.name, mh.version, mh.locale, s.label, count(*) FROM sessions s INNER JOIN sessionsDescriptors mh ON s.sessionDescriptorId = mh.id INNER JOIN sessionsItemIds sii ON s.id = sii.sessionId WHERE sii.timesAccessed < :timesUsedMax GROUP BY s.sessionDescriptorId, s.label ORDER BY s.sessionDescriptorId, s.label
SELECT name, version, locale FROM sessionsDescriptors
SELECT id FROM sessionsDescriptors WHERE name = :name AND version = :version AND locale = :locale
sessionsDescriptors
!_lockStateNotificationToken
v12@?0i8
PRAGMA foreign_keys = ON
B8@?0
migrationFunction
SELECT sd.version, lf.transformer FROM sessionsDescriptors sd CROSS JOIN lastFeaturizations lf ON lf.sessionDescriptorId = sd.id WHERE sd.name = :name AND sd.locale = :locale
SELECT sd.id FROM sessionsDescriptors sd CROSS JOIN lastFeaturizations lf ON lf.sessionDescriptorId = sd.id WHERE sd.name = :name AND sd.locale = :locale
transformer
lastFeaturizations
sessionDescriptorId = %lu
SELECT s.id, s.sessionDescriptorId, s.covariatesIndices, s.covariatesValues FROM sessions s CROSS JOIN sessionsDescriptors sd ON s.sessionDescriptorId = sd.id WHERE sd.name = :name AND sd.locale = :locale
id = %ld
training_db_schema
[ ]{2,}
SELECT sql FROM sqlite_master WHERE sql IS NOT NULL AND tbl_name NOT LIKE 'sqlite_%' 
CREATE TABLE integrityCheck
python
Process name %@ is not python
training_sessions
test
SELECT count(*) FROM 
columnIndices
columnLength
rowIndices
rowLength
PMLImmutableLogisticRegressionModel.m
AWDProactiveModelFittingQuantizedDenseVector+PML.m
Too big vector (length: %tu)
PMLPlanDescriptor.m
VALUES
SHAPE
-[PMLModelWeights(PMLMobileAssetParameterGetStrategy) initFromDictionary:]
PMLDictionaryParameters.m
weightArray.count == [shapeArray[0] unsignedIntegerValue]
-[PMLModelRegressor(PMLMobileAssetParameterGetStrategy) initFromDictionary:]
regressorArray.count == [shapeArray[0] unsignedIntegerValue]
-[PMLModelWeights(PMLPlistAndChunksSerialization) initWithPlist:chunks:context:]
[__expr isKindOfClass:[NSNumber class]]
[__expr isKindOfClass:[PMLDataChunkDenseFloatVector class]]
-[PMLModelRegressor(PMLPlistAndChunksSerialization) initWithPlist:chunks:context:]
-[PMLImmutableLogisticRegressionModel(PMLPlistAndChunksSerialization) initWithPlist:chunks:context:]
MULTI_LABEL_REGRESSION_MODELS
Invalid noiseMechanism, got: %lld
f20@?0f8Q12
v24@?0Q8^B16
You must explicitly specify a noise mechanism.
Invalid noise mechanism value: %lli
NOISE_STRATEGY_MAX_ITERATIONS
NOISE_STRATEGY_MINIMUM_MAGNITUDE
GAUSSIAN_NOISE_SCALE
LAPLACE_NOISE_SCALE
NOISE_MECHANISM_ENUM_VALUE
INPLACE_NORM
NOISE_STRATEGY_SCALE
NOISE_SAMPLER
<%@ gaussianScaleFactor:%0.2f laplaceScaleFactor:%0.2f minMagnitude:%0.2f>
PMLClassificationEvaluationMetrics.m
AWDProactiveModelFittingQuantizedSparseMatrix+PML.m
Too big matrix (rows: %tu)
Too big matrix (cols: %tu)
foo-1.0-en
CREATE TABLE IF NOT EXISTS modelHandles (                  id integer PRIMARY KEY AUTOINCREMENT NOT NULL,             name char(128) NOT NULL,                                   version char(128) NOT NULL,                                locale char(5) NOT NULL                                    )
CREATE UNIQUE INDEX IF NOT EXISTS ix_modelHandles_name_version_locale             ON modelHandles (name, version, locale)
CREATE TABLE IF NOT EXISTS sessions (                      id integer PRIMARY KEY AUTOINCREMENT NOT NULL,             creationTimestamp real NOT NULL,                           modelHandleId integer NOT NULL,                            label integer NOT NULL,                                    covariatesLength integer NOT NULL,                         covariatesIndices blob NOT NULL,                           covariatesValues blob NOT NULL,                            FOREIGN KEY (modelHandleId) REFERENCES modelHandles (id)               ON DELETE CASCADE                                        )
CREATE INDEX IF NOT EXISTS ix_sessions_modelHandleId             ON sessions (modelHandleId ASC)
CREATE TABLE IF NOT EXISTS sessionsDomainIds (               id integer PRIMARY KEY AUTOINCREMENT NOT NULL,               sessionId integer NOT NULL,                                  domainIdentifier char(128) NOT NULL,                         FOREIGN KEY (sessionId) REFERENCES sessions (id)               ON DELETE CASCADE                                          )
CREATE TABLE IF NOT EXISTS sessionsItemIds (                 id integer PRIMARY KEY AUTOINCREMENT NOT NULL,               sessionId integer NOT NULL,                                  itemIdentifier char(128) NOT NULL,                           FOREIGN KEY (sessionId) REFERENCES sessions (id)               ON DELETE CASCADE                                          )
CREATE TABLE IF NOT EXISTS modelMetadata (               modelHandleId integer PRIMARY KEY NOT NULL,              payloadPath char(128) NOT NULL,                          serverIteration integer NOT NULL,                        hasFinishedTraining integer(1) NOT NULL,                 modificationTimestamp real NOT NULL,                     FOREIGN KEY (modelHandleId) REFERENCES modelHandles (id)               ON DELETE CASCADE                                                  )
CREATE TABLE IF NOT EXISTS trainingLog (                   id integer PRIMARY KEY AUTOINCREMENT NOT NULL,             creationTimestamp real NOT NULL,                           modelHandleId integer NOT NULL,                            serverIteration integer NOT NULL,                          FOREIGN KEY (modelHandleId) REFERENCES modelHandles (id)               ON DELETE CASCADE                                                  )
CREATE INDEX IF NOT EXISTS ix_trainingLog_modelHandleId_creationTimestamp             ON trainingLog (modelHandleId, creationTimestamp)
DROP TABLE modelMetadata
CREATE TABLE IF NOT EXISTS modelMetadata (               modelHandleId integer PRIMARY KEY NOT NULL,              serverIteration integer NOT NULL,                        hasFinishedTraining integer(1) NOT NULL,                 modificationTimestamp real NOT NULL,                     payload blob NOT NULL,                                   FOREIGN KEY (modelHandleId) REFERENCES modelHandles (id)               ON DELETE CASCADE                                                  )
ALTER TABLE sessions RENAME TO sessions_old
CREATE TABLE IF NOT EXISTS sessions (                      id integer PRIMARY KEY AUTOINCREMENT NOT NULL,             creationTimestamp real NOT NULL,                           modelHandleId integer NOT NULL,                            label integer NOT NULL,                                    covariatesLength integer NOT NULL,                         covariatesIndices blob,                                    covariatesValues blob,                                     FOREIGN KEY (modelHandleId) REFERENCES modelHandles (id)               ON DELETE CASCADE                                        )
INSERT INTO sessions(id,creationTimestamp,modelHandleId,label,covariatesLength,covariatesIndices,covariatesValues)             SELECT id,creationTimestamp,modelHandleId,label,covariatesLength,covariatesIndices,covariatesValues FROM sessions_old
ALTER TABLE sessionsDomainIds RENAME TO sessionsDomainIds_old
INSERT INTO sessionsDomainIds(id,sessionId,domainIdentifier)             SELECT id,sessionId,domainIdentifier FROM sessionsDomainIds_old
DROP TABLE sessionsDomainIds_old
ALTER TABLE sessionsItemIds RENAME TO sessionsItemIds_old
INSERT INTO sessionsItemIds(id,sessionId,itemIdentifier)             SELECT id,sessionId,itemIdentifier FROM sessionsItemIds_old
DROP TABLE sessionsItemIds_old
DROP TABLE sessions_old
ALTER TABLE modelMetadata ADD maxIteration integer NOT NULL DEFAULT 10
ALTER TABLE sessions ADD isAppleInternal integer(1) NOT NULL DEFAULT 0
DELETE FROM modelMetadata
CREATE TABLE IF NOT EXISTS receivedPlans (             planId char(128) PRIMARY KEY NOT NULL,                 modificationTimestamp real NOT NULL,                   serializedPlan blob NOT NULL                           )
DROP TABLE trainingLog
CREATE TABLE IF NOT EXISTS trainingLog (                   id integer PRIMARY KEY AUTOINCREMENT NOT NULL,             creationTimestamp real NOT NULL,                           planId char(128) NOT NULL,                                 modelHandleId integer NOT NULL,                            serverIteration integer NOT NULL,                          FOREIGN KEY (modelHandleId) REFERENCES modelHandles (id)               ON DELETE CASCADE                                                  )
CREATE INDEX IF NOT EXISTS ix_trainingLog_planId_creationTimestamp             ON trainingLog (planId, creationTimestamp)
ALTER TABLE sessions ADD source blob
DELETE FROM receivedPlans
ALTER TABLE sessionsDomainIds ADD bundleIdentifier char(128)
ALTER TABLE sessionsItemIds ADD bundleIdentifier char(128)
ALTER TABLE modelHandles ADD sd_id integer
ALTER TABLE modelHandles ADD sd_name char(128)
ALTER TABLE modelHandles ADD sd_version char(128)
UPDATE modelHandles SET               sd_name = CASE                   WHEN name = 'FiM.phone' THEN 'SignificantPhoneNumber'                   WHEN name = 'dataDetectionSignificantPhrasePhoneLogistic' THEN 'SignificantPhoneNumber'                   WHEN name = 'SignificantPhoneNumber' THEN name                   WHEN name = 'dataDetectionSignificantPhraseAddressLogistic' THEN 'SignificantPostalAddress'                   WHEN name = 'SignificantPostalAddress' THEN name                   WHEN name = 'dataDetectionSignificantPhraseEmailLogistic' THEN 'SignificantEmailAddress'                   WHEN name = 'SignificantEmailAddress' THEN name                   WHEN name = 'selfIdentificationPhraseLogistic' THEN 'SelfIdentification'                   WHEN name = 'SelfId.Covariates' THEN 'SelfIdentification'                   WHEN name = 'SelfIdentification' THEN name                   WHEN name = 'STSQP' AND version = '1.2' THEN name                   ELSE NULL               END,               sd_version = CASE                   WHEN version = '1.1' THEN 'TW=12&NG=3&FV=1.1'                   WHEN version = 'TW=12&NG=3&FV=1.1' THEN version                   WHEN version = '1.2' THEN version                   ELSE NULL               END
CREATE TABLE IF NOT EXISTS sessionsDescriptors (                   id integer PRIMARY KEY AUTOINCREMENT NOT NULL,                   name char(128) NOT NULL,                   version char(128) NOT NULL,                   locale char(5) NOT NULL               )
CREATE UNIQUE INDEX IF NOT EXISTS ix_sessionsDescriptors_name_version_locale ON sessionsDescriptors (name, version, locale)
INSERT OR IGNORE INTO sessionsDescriptors(name,version,locale) SELECT sd_name,sd_version,locale FROM modelHandles
UPDATE modelHandles SET sd_id = (SELECT id FROM sessionsDescriptors WHERE name = sd_name AND version = sd_version)
CREATE TABLE IF NOT EXISTS sessions (                   id integer PRIMARY KEY AUTOINCREMENT NOT NULL,                   creationTimestamp real NOT NULL,                   sessionDescriptorId integer NOT NULL,                   label integer NOT NULL,                   covariatesLength integer NOT NULL,                   covariatesIndices blob,                   covariatesValues blob,                   isAppleInternal integer(1) NOT NULL DEFAULT 0,                   source blob,                   FOREIGN KEY (sessionDescriptorId) REFERENCES sessionsDescriptors (id) ON DELETE CASCADE               )
CREATE INDEX IF NOT EXISTS ix_sessions_sessionDescriptorId ON sessions (sessionDescriptorId ASC)
INSERT INTO sessions(id,creationTimestamp,sessionDescriptorId,label,covariatesLength,covariatesIndices,covariatesValues,isAppleInternal,source)                 SELECT s.id,creationTimestamp,mh.sd_id,label,covariatesLength,covariatesIndices,covariatesValues,isAppleInternal,source                 FROM sessions_old AS s JOIN modelHandles AS mh                 WHERE s.modelHandleId = mh.id AND mh.sd_id IS NOT NULL
CREATE TABLE IF NOT EXISTS trainingLog (                   id integer PRIMARY KEY AUTOINCREMENT NOT NULL,                   creationTimestamp real NOT NULL,                   planId char(128) NOT NULL,                   sessionDescriptorId integer NOT NULL,                   serverIteration integer NOT NULL,                   FOREIGN KEY (sessionDescriptorId) REFERENCES sessionsDescriptors (id) ON DELETE CASCADE               )
CREATE INDEX IF NOT EXISTS ix_trainingLog_planId_creationTimestamp ON trainingLog (planId, creationTimestamp)
CREATE INDEX IF NOT EXISTS ix_sessionsItemIds_bundleId_itemId ON sessionsItemIds (bundleIdentifier, itemIdentifier)
CREATE INDEX IF NOT EXISTS ix_sessionsItemIds_sessionId ON sessionsItemIds (sessionId)
CREATE INDEX IF NOT EXISTS ix_sessionsDomainIds_bundleId_domainId ON sessionsDomainIds (bundleIdentifier, domainIdentifier)
CREATE INDEX IF NOT EXISTS ix_sessionsDomainIds_sessionId ON sessionsDomainIds (sessionId)
DROP TABLE IF EXISTS sessions_old
DROP TABLE IF EXISTS modelHandles
DELETE FROM sessions WHERE id IN (SELECT sessions.id FROM sessions LEFT JOIN sessionsItemIds ON sessions.id = sessionsItemIds.sessionId WHERE itemIdentifier = '<hey@example.com>')
PRAGMA foreign_keys = OFF
DELETE FROM sessions WHERE sessionDescriptorId IN (SELECT id FROM sessionsDescriptors                 WHERE                    (name = "SignificantPhoneNumber" AND version LIKE "%1.1%")                OR (name = "SignificantPhoneNumber" AND version LIKE "%1.2%")                OR (name = "SignificantEmailAddress" AND version LIKE "%1.1%")                OR (name = "SignificantEmailAddress" AND version LIKE "%1.2%")                OR (name = "SignificantPostalAddress" AND version LIKE "%1.1%")                OR (name = "SignificantPostalAddress" AND version LIKE "%1.2%")                OR (name = "SelfIdentification" AND version LIKE "%1.1%")                OR (name = "STSQP")                )
ALTER TABLE sessionsItemIds ADD lastUsed real NOT NULL DEFAULT 0
DROP INDEX IF EXISTS ix_trainingLog_planId_creationTimestamp
CREATE TABLE IF NOT EXISTS lastFeaturizations (                   id integer PRIMARY KEY AUTOINCREMENT NOT NULL,                   sessionDescriptorId integer NOT NULL,                   transformer blob,                   FOREIGN KEY (sessionDescriptorId) REFERENCES sessionsDescriptors (id) ON DELETE CASCADE               )
CREATE INDEX IF NOT EXISTS ix_lastFeaturizations_sessionDescriptorId ON lastFeaturizations (sessionDescriptorId)
DELETE FROM sessions WHERE sessionDescriptorId IN (                     SELECT id FROM sessionsDescriptors                     WHERE version NOT LIKE "FV=%" AND version NOT LIKE "%&FV=%"               )
ALTER TABLE sessionsItemIds ADD timesAccessed integer NOT NULL DEFAULT 0
DELETE FROM sessionsDescriptors WHERE version NOT LIKE "FV=%" AND version NOT LIKE "%&FV=%"
DELETE FROM sessions WHERE id IN (SELECT sessionId FROM sessionsItemIds WHERE bundleIdentifier = "com.apple.iChat")
UPDATE sessions SET source = x''
@max.unsignedIntValue
CREATE TABLE sessionsDomainIds ( id integer PRIMARY KEY AUTOINCREMENT NOT NULL, sessionId integer NOT NULL, domainIdentifier char(128) NOT NULL, bundleIdentifier char(128), FOREIGN KEY (sessionId) REFERENCES sessions (id) ON DELETE CASCADE )
CREATE TABLE sessionsItemIds ( id integer PRIMARY KEY AUTOINCREMENT NOT NULL, sessionId integer NOT NULL, itemIdentifier char(128) NOT NULL, bundleIdentifier char(128), lastUsed real NOT NULL DEFAULT 0, timesAccessed integer NOT NULL DEFAULT 0, FOREIGN KEY (sessionId) REFERENCES sessions (id) ON DELETE CASCADE )
CREATE TABLE receivedPlans ( planId char(128) PRIMARY KEY NOT NULL, modificationTimestamp real NOT NULL, serializedPlan blob NOT NULL )
CREATE TABLE sessionsDescriptors ( id integer PRIMARY KEY AUTOINCREMENT NOT NULL, name char(128) NOT NULL, version char(128) NOT NULL, locale char(5) NOT NULL )
CREATE UNIQUE INDEX ix_sessionsDescriptors_name_version_locale ON sessionsDescriptors (name, version, locale)
CREATE TABLE sessions ( id integer PRIMARY KEY AUTOINCREMENT NOT NULL, creationTimestamp real NOT NULL, sessionDescriptorId integer NOT NULL, label integer NOT NULL, covariatesLength integer NOT NULL, covariatesIndices blob, covariatesValues blob, isAppleInternal integer(1) NOT NULL DEFAULT 0, source blob, FOREIGN KEY (sessionDescriptorId) REFERENCES sessionsDescriptors (id) ON DELETE CASCADE )
CREATE INDEX ix_sessions_sessionDescriptorId ON sessions (sessionDescriptorId ASC)
CREATE INDEX ix_sessionsItemIds_bundleId_itemId ON sessionsItemIds (bundleIdentifier, itemIdentifier)
CREATE INDEX ix_sessionsItemIds_sessionId ON sessionsItemIds (sessionId)
CREATE INDEX ix_sessionsDomainIds_bundleId_domainId ON sessionsDomainIds (bundleIdentifier, domainIdentifier)
CREATE INDEX ix_sessionsDomainIds_sessionId ON sessionsDomainIds (sessionId)
CREATE TABLE lastFeaturizations ( id integer PRIMARY KEY AUTOINCREMENT NOT NULL, sessionDescriptorId integer NOT NULL, transformer blob, FOREIGN KEY (sessionDescriptorId) REFERENCES sessionsDescriptors (id) ON DELETE CASCADE )
CREATE INDEX ix_lastFeaturizations_sessionDescriptorId ON lastFeaturizations (sessionDescriptorId)
SELECT id, covariatesValues FROM sessions
UPDATE sessions SET covariatesValues = :data WHERE id = :rowId
:data
:rowId
v16@?0@"_PASSqliteStatement"8
{_PASDBIterAction_=B}16@?0@"_PASSqliteStatement"8
PMLMutableDenseVectorAllocationFailure
Failed to allocate NSData.
count
PMLDenseVector.m
start >= 0 && start < self.count
end > 0 && end <= self.count
end >= start
other.count == self.count
Index %tu out of bounds (vector length: %tu)
v20@?0f8Q12
rmse
truePositives
trueNegatives
falsePositives
falseNegatives
positiveScores
negativeScores
secsToExecute
com.apple.proactive.fia.phone.en
com.apple.proactive.responses
QuickResponsesClassification
PMLSeparatedDPNoiseStrategy.m
Can't instantiate %@. Missing %@ dependency.
_Bool soft_PFLPrivatize(float *, size_t, const char *)
PFLPrivatize
void *PrivateFederatedLearningLibrary(void)
model
spotlightReference
isInternal
PMLSparseMatrix.m
matrix
Can not mark %lu x %lu matrix as symmetric
Invalid shape, all rows must be the same length (row %lu length: %lu, first row length: %lu)
malloc failed
v40@?0Q8Q16r^f24r^q32
unknown
PMLEspressoTrainingPlan.m
Session descriptor must be nonnull for PMLEspressoTrainingPlan initWithPlist
Noise strategy must be nonnull for PMLEspressoTrainingPlan initWithPlist
LABELS_TO_TRAIN_ON
SUMMABLE_METRICS_ONLY
Gradient contains %f at index %lu
Unable to find global variable named: %@
global
weight
bias
Unable to convert session batch data into espresso data provider
v40@?0Q8@"NSArray"16@"NSData"24^B32
B32@?0@"ETDataTensor"8@"NSString"16@"NSString"24
Unable to in place update gradient since number of starting and ending parameters don't match for tensor type %@ name %@
numberOfSamples
isSampled
accuracy
predictions
groundTruth
B32@?0Q8@"<ETDataProvider>"16@"<ETTaskContext>"24
<PMLEspressoTrainingPlan '%@'>
META_TRAINING_VARIABLES
ESPRESSO_TRAINING_VARIABLES
supervisionType
confidenceScore
PLAN_CLASSNAME
PLAN
PMLPlanSerialization.m
Invalid plan. Unknown class: %@
PML_ESPRESSO_TRAINING_NETWORK_PATH
v28@?0f8Q12Q20
support
d40@?0@"PMLModelWeights"8@"PMLSparseMatrix"16@"PMLModelRegressor"24^f32
f24@?0@"PMLSparseVector"8@"PMLModelWeights"16
@"PMLMutableDenseVector"24@?0@"PMLSparseMatrix"8@"PMLModelWeights"16
calculateAvgGradientForBatch
PMLMathFunctions.h
regularizationRate >= 0.0
l1Ratio >= 0.0 && l1Ratio <= 1.0
numberOfSamples > 0
numberOfDimensions > 0
s == SPARSE_SUCCESS
logisticBatch
PMLHashingVectorizer.m
buckets > 0
extraIdOptions < PMLHashingVectorizerIdOptionLimit
vectorizerStrategy < PMLHashingVectorizerStrategyLimit
vectorNormalization >= PMLVectorNormalizationNone && vectorNormalization < PMLVectorNormalizationLimit
(characterNGramRange.location && characterNGramRange.length) || (tokenNGramRange.location && tokenNGramRange.length)
vectorizerStrategy != PMLHashingVectorizerStrategyWordPiece || vocab != nil
v24@?0^q8^f16
_endId == 0
_startId == 0
BUCKET_SIZE
NGRAM_SIZE
CHARACTER_NGRAM_LOCATION
CHARACTER_NGRAM_LENGTH
CHARACTER_NORMALIZATION
TOKEN_NGRAM_LOCATION
TOKEN_NGRAM_LENGTH
TOKEN_NORMALIZATION
SHOULD_TOKENIZE_NEWLINES
ID_VECTOR_LENGTH
EXTRA_ID_OPTIONS
VECTORIZER_STRATEGY
VECTOR_NORMALIZATION
NON_WORD_TOKENS_LOCALE
size
PMLFidesTracker.m
Can't instantiate %@. Missing "planId" dependency.
com.apple.proactive
PMLDenseMatrix.m
PMLSessionDescriptor.m
%@-%@-%@
@8@?0
(^|&)FV=([0-9]+(.[0-9]+)?)($|&)
regex
Unexpected number of matches for %@; pattern: %@; descriptor: %@
Unexpected number of match ranges for %@; pattern: %@; descriptor: %@
Unexpected featureVersion extracted for %@; pattern: %@; descriptor: %@
%@_label%lu
_label[0-9]+
_label([0-9]+)
Handle %@ is not a sub-model handle.
NAME
VERSION
LOCALE
<%@ %@ %@ %@>
com.apple.proactive.PMLDESPlugin
PMLTraining.m
training.db
STSQP
ContactSharing
SignificantPhoneNumber
SignificantEmailAddress
SignificantPostalAddress
SignificantEmailAddressForIMessage
SignificantPostalAddressForIMessage
FirstPersonPhoneSharing
ThirdPersonPhoneSharing
FirstPersonEmailSharing
FirstPersonAddressSharing
ThirdPersonEmailSharing
ThirdPersonAddressSharing
SelfIdentification
SGTextMessageBirthdayCongratsModel
positivesCount
label%tu
v32@?0@"PMLSessionDescriptor"8@"NSSet"16^B24
modelName
modelVersion
modelLocale
sessionsCount
negativesCount
v24@?0@"NSUUID"8@"NSError"16
labeledStats
v16@?0@"NSError"8
v24@?0@"PMLSessionDescriptor"8^B16
isEspressoTraining
chunk
attachments
AWDProactiveModelFittingQuantizedSparseVector+PML.m
PMLProtoBufTracker.m
adapter
TRACKER_ADAPTER_CLASS
TRACKER_QUANTIZATION_BUCKETS
Can't instantiate %@. Unknown class: %@
dummy
returnValue
PMLDataChunk.m
chunks
mock-1.0-en
PMLWordPieceTokenizer.m
vocab
v36@?0I8^S12{_NSRange=QQ}20
[UNK]
unkToken != PMLWordPieceVocabNotFound
[CLS]
startId != PMLWordPieceVocabNotFound
[SEP]
endId != PMLWordPieceVocabNotFound
[PAD]
padId != PMLWordPieceVocabNotFound
batchSize
perLabelSupport
PML_ESPRESSO_INPUT_NAME
PML_ESPRESSO_INPUT_DIM
PML_ESPRESSO_OUTPUT_NAME
PML_ESPRESSO_TRUE_LABEL_NAME
PML_ESPRESSO_LOSS_VALUE_NAME
PML_ESPRESSO_TRAINING_OUTPUT_NAME
PML_ESPRESSO_TRAINING_CONTROL_VARIABLE_NAME
PML_ESPRESSO_INITIALIZER_NAME
PML_ESPRESSO_GLOBALS_TO_GET_GRADIENTS_FOR
PML_ESPRESSO_LAYER_WEIGHTS_TO_GET_GRADIENTS_FOR
PML_ESPRESSO_LAYER_BIASES_TO_GET_GRADIENTS_FOR
PMLEspressoTrainingVariables.m
Can't instantiate %@. Missing "%@" dependency.
evaluation
logRegWeights
logRegGradient
linRegFeatureMatrix
linRegObjectiveFeatures
PMLTrainingStoredSessionBatch.m
Covariates and outcomes need to have the same length, but got %lu and %d.
PMLLexicon.m
path
v16@?0^{_CFBurstTrie=}8
v32@?0@"NSString"8@"NSNumber"16^B24
PlanClass
NoiseStrategy
ProactiveMLErrorDomain
PMLLogRegEvaluationPlan.m
tracker
PMLEspressoDataProvider.m
Number of dimensions in rows data (%lu) number of labels (%lu)
The names of the input and trueLabel can not be the same: %s
Label value %f must be greater than 0
PMLAWDAvailableSessionsTracker.m
AWD metric query delegate can only be set once
v12@?0I8
Missing delegate to handle AWD metric request.
PMLSparseVector.m
numberOfNonZeroValues == 0 || (indices && values)
length>=numberOfNonZeroValues
v24@?0^v8Q16
Too big vector.
length >= _numberOfNonZeroValues
_length >= numberOfNonZeroValues
_sparseValues == NULL || _sparseValues != sparseValues
_sparseIndices == NULL || _sparseIndices != sparseIndices
_length == _numberOfNonZeroValues
maxVectorLength
v32@?0@"NSNumber"8@"NSNumber"16^B24
precision
CLASS_NAME
PMLPlistClassWrapper.m
plist
Invalid plan. class %@ doesn't conform to %@
PMLPassThroughTracker.m
buckets
scaleFactor
AWDWeightsMessage
results
AWDGradientMessage
Can't instantiate %@. Missing "buckets" dependency.
sparseFloatGradient
iteration
sparseQuantizedGradient
gradientScaleFactor
gradientL2norm
denseQuantizedGradient
Could not create espresso context
Could not create espresso plan
Could not add espresso network from file %@ with storage type %05x, status code %d
Could not declare espresso network input %@, status code %d
Could not declare espresso network output %@, status code %d
Could not build espresso plan, status code %d
Could not bind the input buffer to layer %@ in espresso plan during initialization, status code %d
Unable to get input shape to layer %@ in espresso plan during initialization, status code %d
Input layer %@ has rank %zu, shape %@, num parameters %tu
Could not bind the output buffer to layer %@ in espresso plan during initialization, status code %d
Unable to get output shape to layer %@ in espresso plan during initialization, status code %d
Output layer %@ has rank %zu, shape %@, num parameters %tu
Could not bind the input buffer to layer %@ in espresso plan, status code %d
Could not bind the output buffer to layer %@ in espresso plan, status code %d
Could not execute espresso plan, status code %d
Failed writing analytics log for data transparency. Skip upload
Sending %@ (size: %tu) to Parsec.
Unsupported proto buf message: %@
Stopped after iter %li with NAN error
Stopped after iter %li with DBL_MAX error
Stopped after iter %li with -DBL_MAX error
Stopped after iter %li with -INFINITY error
Stopped after iter %li with INFINITY error
Stopped after iter %li with perfect fit
Stopped after iter %li with loss %f
Label %@ not in sepcified list %@
Ignoring all zero row #%ld
Evaluating plan %@ (descriptor: %@, available %tu sessions)
Attempted to use PMLSeparatedDPNoiseStrategy with non-Fides tracker: %@.
Training model: %@ (available %lu sessions)
scaleAndAddNoiseToDenseVector failed
PMLLogRegTrainingPlan running with no noise strategy since pluginShouldAddNoiseAndEncryptResult set to false
Invalid session from db (row id %lu): covariatesIndices and covariatesValues must contain the same number of elements (expected bytes length in int/float ratio but got %lu and %lu).
Invalid session from db (row id %lu), covariatesLength has to be %lu, got %lu.
Failed to load sessions for model %@. Error: %@
PMLTrainingStore failed to count total sessions. Error: %@
PMLTrainingStore failed to delete unused sessions. Error: %@
PMLTrainingStore failed to delete over used sessions. Error: %@
PMLTrainingStore failed to count labeled sessions. Error: %@
PMLTrainingStore failed to delete sessions. Error: %@
PMLTrainingStore failed to delete sessions for bundleId=%@. Error: %@
PMLTrainingStore failed to delete sessions for for bundleId=%@ and itemId=%@. Error: %@
PMLTrainingStore failed to delete sessions for bundleId=%@ and domainId=%@. Error: %@
Row returned in sessionStats was null, continuing to iterate as best effort
Row in sessionStats contained unexpected null value, name %@, version %@, locale %@, continuing to iterate as best effort
Failed to load stats about sessions in db. Error: %@
Row returned in enumerateSessionDescriptorsUsingBlock was null, continuing to iterate as best effort
Row in enumerateSessionDescriptorsUsingBlock contained unexpected null value, name %@, version %@, locale %@, continuing to iterate as best effort
PMLTrainingStore notified of device lock state change to %d
Opening db %@.
PMLTrainingStore failed to open/initialize db.
Closing db %@.
PMLTrainingStore failed to enable foreign keys support.
PMLTraining db (%@) corrupted. Flushing.
%@ deallocating
PMLTrainingStore db failed to create new database with skip queries.
Future database version detected (%lu). Giving up on migration.
PMLTrainingStore db failed to migrate but migration is needed.
Migration encountered error during migration of %@: versions %lu, query: %@, error: %@
Row returned in lastTrainingFeaturizationForModelName was null, continuing to iterate as best effort
Row in sessionStats contained unexpected null value, version %@, continuing to iterate as best effort
Failed to load last training featurization in db. Error: %@
Error querying schema: %@
setMaxTimesAccessed should only be called for testing.
db: %@, isUnlocked: %d, isClassCLocked: %d
Invalid noiseMechanism, got: %lld
You must explicitly specify a noise mechanism.
PFLPrivatize call failed
Error extracting floats from sparse rows, status: %d
PMLEspressoTrainingPlan running with no noise strategy since pluginShouldAddNoiseAndEncryptResult set to false
Unable to create task definition, returning nil for PMLEspressoTrainingPlan
Unable to fetch parameters requested in weights and biases during validation, returning nil for PMLEspressoTrainingPlan: %@
Unable to successfully initialize model: %@
Unable to create task definition: %@
An error occured when attempting to get parameters for global variable: %@
An error occured when attempting to get weight for layer: %@
An error occured when attempting to get bias for layer: %@
Returning nil since unable to snapshot starting model parameters: %@
Training was unsuccessful: %@
Returning nil since no training was done
Returning nil and early from training since an error occurred during training
Returning nil since an error occurred when calculating the gradient: %@
Sampling probability is invalid value %f
Returning nil for training metrics since 0 points for ground truth %tu and / or training results %tu
Unable to get ground truth value for key validation: %@
Unable to get %@ key for ground truth: %@
Unable to get training result for key validation: %@
Unable to get %@ key for training result: %@
The number of ground truth values %tu does not match number of inference results %tu
Skipping row for metrics calculation
Unable to get ground truth at index %tu: %@
Unable to get inference results at index %tu: %@
Number of data points: %tu, Loss: %f, Accuracy: %f
Not adding loss or accuracy metrics as no rows were sampled
Unable to init PMLEspressoTrainingPlan because unable to init PMLMetaTrainingVariables
Unable to init PMLEspressoTrainingPlan because unable to init PMLEspressoTrainingVariables
Sending %@ (%d) to AWD.
PMLHashingVectorizer: unknown vectorizer strategy
Instantiating PMLTraining singleton.
PMLTraining failed to get a DESRecordStore for %@
Can't instantiate PMLTraining in %@, becacuse there is already an instance in %@.
Adding session for %@ (label: %tu, length: %tu)
No isMultiLabel information for %@
Failed to send session stats %@ to Fides. Error: %@
Successfully sent stats %@ to Fides.
Failed to delete existing records in DESRecordStore. Error: %@
Won't trim training db because the db is not open.
Trimming training db.
DONE limitSessionsByLastUsedTTL
DONE limitSessionsByMaxTimesAccessed
Removing training samples for %@
DONE limitSessionsWithSessionDescriptor:(%@) withLabel:nil
DONE limitSessionsForEachLabelWithSessionDescriptor:(%@)
Vacuuming training db.
We've been asked to defer. Skipping remaining work.
Error deserializing plan with exception %@
Training plan deserialized without exception but is nil
Ignoring synchronous plan %@ because the db is not open.
Running %@ synchronously
Plan %@ completed run. Result present? %d.
Unable to train with Espresso because recipe flag IS_ESPRESSO_TRAINING is not set
Unable to train because chunk path %@ or training network path %@ not found in %lu attachments
Unable to train because chunk file contents were empty
Sending weights for model %@
Sending gradient for model %@
Sending evaluation metrics for %@
Could not open chunk file at %@: %@
Chunk descriptor out of bounds: ends at %llu in data of length %llu
Could not parse chunk %u; bailing out
Error writing plist chunk: %@
Error loading plist chunk: %@
Unable to read Espresso network file at: %@
Returning nil for PMLLexicon since unable to initialize lexicon
Falling back to default system lexicon since lexicon at following path is invalid in existence: %@
Returning 0 for word id since token is not in lexicon: %@
Evaluating plan %@ (descriptor: %@, available %lu sessions)
Out of range index %lu requested from PMLEspressoDataProvider of size %lu
PMLSparseVector: unknown vector normalization method
PMLSparseVector: dimensions do not match between source sparse vector (%llu) and destination dense vector (%llu)
Error writing object to NSData: %@
Error reading object from NSData: %@
softlink:o:path:/System/Library/PrivateFrameworks/PrivateFederatedLearning.framework/PrivateFederatedLearning
PMLMultiLabelEspressoClassifier
PMLMultiLabelClassifierProtocol
NSObject
PMLInMemoryCachedStore
PMLPlanSimulator
PMLTrackerParsecAdapter
PMLTrackerAdapterProtocol
AWDProactiveModelFittingEvaluation
NSCopying
AWDProactiveModelFittingLogRegWeights
PMLGradientResults
PMLGradientSolver
PMLMultiLabelRegressionEvaluationPlan
PMLPlanProtocol
PMLPlistAndChunksSerializableProtocol
AWDProactiveModelFittingLinRegObjectiveFeatures
AWDProactiveModelFittingQuantizedSparseVector
AWDProactiveModelFittingModelInfoStatsPair
PMLLabelLimitRowId
PMLLogRegTrainingPlan
AWDProactiveModelFittingLinRegFeatureMatrix
PML_VisibleForTesting
AWDProactiveModelFittingSparseFloatVector
PMLLaplaceSampler
PMLSampler
PMLTrainingLogEntry
PMLTrainingStore
AWDProactiveModelFittingSparseFloatMatrix
PMLImmutableLogisticRegressionModel
PMLPlanDescriptor
AWDProactiveModelFittingQuantizedSparseMatrix
PMLMobileAssetParameterGetStrategy
PMLChunkToVec
PMLPlistAndChunksSerialization
PMLMultiLabelLogisticRegressionModel
PMLMultiLabelClassifierModelProtocol
PMLDiffPrivacyNoiseStrategy
PMLNoiseStrategy
PMLClassificationEvaluationMetrics
AWDProactiveModelFittingModelInfo
VisibleForTesting
PMLAWDEvaluationTrackerMock
PMLTrainingDatabaseMigrations
PMLDenseVector
NSMutableCopying
PMLMutableDenseVector
AWDProactiveModelFittingEvalMetrics
PMLSeparatedDPNoiseStrategy
PMLTrainingMock
PMLTrainingProtocol
PMLSparseMatrix
PMLAWDSessionTracker
PMLMetaTrainingVariables
PMLEspressoTrainingPlan
AWDProactiveModelFittingSession
PMLPlanWrapper
PMLPlanSerialization
PMLTrackerAWDAdapter
PMLNoNoiseStrategy
AWDProactiveModelFittingLabelSupportPair
PMLLogisticRegressionModel
PMLGaussianSampler
PMLModelRegressor
PMLMultiLabelE5Classifier
PMLHashingVectorizer
PMLTransformerProtocol
PMLJson
PMLFidesTracker
PMLLogRegTrackerProtocol
PMLEvaluationTrackerProtocol
PMLMultiLabelEvaluationTrackerProtocol
PMLAWDSessionTrackerMock
PMLDenseMatrix
PMLSessionDescriptor
PMLSpotlightReference
PMLTraining
PMLAWDMetricQueryDelegate
PMLProtoBufTracker
PMLMockPlan
AWDProactiveModelFittingQuantizedDenseVector
PMLDataChunk
PMLDataChunkRaw
PMLDataChunkPlist
PMLDataChunkDenseFloatVector
PMLDataChunkDenseDoubleVector
PMLAWDLogisticRegTrackerMock
PMLWordPieceTokenizer
AWDProactiveModelFittingMinibatchStats
PMLEspressoTrainingVariables
PMLModelWeights
AWDProactiveModelFittingParsecFeedbackEnvelope
PMLTrainingStoredSessionBatch
PMLTrackerMockAdapter
PMLLexicon
PMLLogRegEvaluationPlan
PMLAWDBaseTracker
PMLEspressoDataProvider
ETDataProvider
PMLWordPieceVocabTrie
PMLWordPieceVocabProtocol
PMLAWDAvailableSessionsTracker
PMLSparseVector
AWDProactiveModelFittingPrecisionAtKPair
PMLPlistClassWrapper
PMLPassThroughTracker
AWDProactiveModelFittingLogRegGradient
dealloc
appendString:
appendFormat:
init
UTF8String
cStringUsingEncoding:
getNumParametersFromShape:rank:
makeStringForShape:
initWithEspressoContext:espressoPlan:espressoModel:inputNumParameters:outputNumReplyClasses:
sparseVectorToDense:length:
numberWithFloat:
addObject:
classifierWithEspressoModelFile:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
outputDimension
predict:
_espressoModel
_espressoPlan
_espressoContext
_outputNumReplyClasses
_inputNumParameters
loadSessionsForModel:excludeItemIdsUsedWithin:limit:onlyAppleInternal:positiveLabel:skew:block:
count
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
initWithSessionBatch:
initWithPath:
cachedStoreFromRealStore:sessionDescriptor:sessionsLimit:
_openDbIfUnlocked
_registerUnlockHandler
.cxx_destruct
_cachedSessions
objectAtIndexedSubscript:
defaultManager
fileExistsAtPath:
numberWithUnsignedLong:
setObject:forKeyedSubscript:
numberWithUnsignedInteger:
objectForKeyedSubscript:
initWithStores:sessionDescriptor:seed:
initWithSeed:
next
_randomStore
_randomStores:
initWithMaxIterationCount:noiseScaleFactors:minimumMagnitude:seed:noiseMechanism:inplaceNorm:
initWithStore:tracker:noiseStrategy:planId:sessionDescriptor:maxSessionsLimit:sessionsInBatch:currentServerIteration:currentModelWeights:localLearningRate:stoppingThreshold:localMinimumIterations:localGradientIterations:useOnlyAppleInternalSessions:skew:threshold:isMultiLabel:intercept:positiveLabel:evaluationLevel:reportScale:
runWithError:
simulatorWithDbPaths:sessionDescriptor:sessionsInBatch:maxSessionsLimit:seed:
runParallelPlansWithPlanId:tracker:noiseScaleFactors:noiseMinimumMagnitude:weights:serverIteration:useIntercept:noiseMechanism:usingRandomlySelected:
_stores
_sessionDescriptor
_rng
wrappedMessage:
_writeDataForTransparency:
data
initWithType:data:
length
sharedSession
sendCustomFeedback:
setEvaluation:
setLogRegWeights:
setLogRegGradient:
setLinRegFeatureMatrix:
setLinRegObjectiveFeatures:
raise:format:
postMetricId:message:
removeAllObjects
objectAtIndex:
dictionaryRepresentation
stringWithFormat:
dictionary
numberWithUnsignedLongLong:
setObject:forKey:
initWithCapacity:
countByEnumeratingWithState:objects:count:
addPrecisionAtK:
setModelInfo:
setMinibatchStats:
setEvaluationMetrics:
precisionAtKsCount
clearPrecisionAtKs
precisionAtKAtIndex:
allocWithZone:
copyWithZone:
mergeFrom:
precisionAtKType
setTimestamp:
setHasTimestamp:
hasTimestamp
hasModelInfo
hasMinibatchStats
hasEvaluationMetrics
readFrom:
writeTo:
copyTo:
timestamp
modelInfo
minibatchStats
evaluationMetrics
precisionAtKs
setPrecisionAtKs:
_timestamp
_evaluationMetrics
_minibatchStats
_modelInfo
_precisionAtKs
_has
TB,N
TQ,N,V_timestamp
TB,R,N
T@"AWDProactiveModelFittingModelInfo",&,N,V_modelInfo
T@"AWDProactiveModelFittingMinibatchStats",&,N,V_minibatchStats
T@"AWDProactiveModelFittingEvalMetrics",&,N,V_evaluationMetrics
T@"NSMutableArray",&,N,V_precisionAtKs
setSparseFloatWeights:
setSparseQuantizedWeights:
setDenseQuantizedWeights:
hasSparseFloatWeights
hasSparseQuantizedWeights
setWeightsScaleFactor:
setHasWeightsScaleFactor:
hasWeightsScaleFactor
setWeightsL2norm:
setHasWeightsL2norm:
hasWeightsL2norm
hasDenseQuantizedWeights
sparseFloatWeights
sparseQuantizedWeights
weightsScaleFactor
weightsL2norm
denseQuantizedWeights
_denseQuantizedWeights
_sparseFloatWeights
_sparseQuantizedWeights
_weightsL2norm
_weightsScaleFactor
T@"AWDProactiveModelFittingSparseFloatVector",&,N,V_sparseFloatWeights
T@"AWDProactiveModelFittingQuantizedSparseVector",&,N,V_sparseQuantizedWeights
Tf,N,V_weightsScaleFactor
Tf,N,V_weightsL2norm
T@"AWDProactiveModelFittingQuantizedDenseVector",&,N,V_denseQuantizedWeights
initWithGradient:loss:
gradient
loss
_gradient
_loss
T@"PMLMutableDenseVector",R,N,V_gradient
T@"NSNumber",R,N,V_loss
solveWithAvgGradient:maxNumberOfIterations:
initWithCount:
mutablePtr
matrixWithConstantColumn
numberOfColumns
values
numberWithDouble:
vectorWithConstantColumn
setCovariates:
setObjective:
solve
initWithLearningRate:minIterations:stoppingThreshold:weights:intercept:gradientCalculator:predictionCalculator:batchPredictionCalculator:
computeAvgGradientWithIterations:
batchPredict:
solveForCovariates:objectives:
weights
setWeights:
covariates
objective
intercept
setIntercept:
_learningRate
_stoppingThreshold
_minIterations
_gradientCalculator
_predictionCalculator
_batchPredictionCalculator
_intercept
_weights
_covariates
_objective
T@"PMLModelWeights",&,N,V_weights
T@"PMLSparseMatrix",&,N,V_covariates
T@"PMLModelRegressor",&,N,V_objective
TB,N,V_intercept
isValidPlanId:
allKeys
allValues
initWithWeightsArray:andIntercept:
initWithObjects:forKeys:
compare:
sortDescriptorWithKey:ascending:comparator:
arrayWithObjects:count:
sortedArrayUsingDescriptors:
outcomes
matrix
containsObject:
initWithFloatsNoCopy:count:freeWhenDone:
sparseVectorFromDense:
_rankedLabelsForSession:
indexOfObject:
unsignedIntegerValue
floatValue
lastUsedTimestampLimit
_precisionAtEvaluationPointsForSessions:
minibatchStatsForPositiveLabels:
trackPrecisionAtK:minibatchStats:
loadSessionsForModel:privacyBudgetRefreshPeriod:labels:batchSize:block:
toPlistWithChunks:
enumerateObjectsUsingBlock:
numberWithBool:
dictionaryWithObjects:forKeys:count:
initWithPlist:chunks:context:
dictionaryWithObjects:forKeys:
boolValue
initWithPlanId:store:sessionDescriptor:maxSessionsLimit:sessionsInBatch:labelAndWeights:modelClassName:intercept:evaluationPoints:tracker:evaluationLevel:
planId
T@"NSString",R,N
store
sessionDescriptor
maxSessionsLimit
sessionsInBatch
multiLabelRegressionModel
positiveLabels
weightsArray
evaluationPoints
tracker
evaluationLevel
_store
_maxSessionsLimit
_sessionsInBatch
_multiLabelRegressionModel
_positiveLabels
_weightsArray
_evaluationPoints
_tracker
_evaluationLevel
_planId
T@"PMLTrainingStore",R,N,V_store
T@"PMLSessionDescriptor",R,N,V_sessionDescriptor
TQ,R,N,V_maxSessionsLimit
TQ,R,N,V_sessionsInBatch
T@"<PMLMultiLabelClassifierModelProtocol>",R,N,V_multiLabelRegressionModel
T@"NSArray",R,N,V_positiveLabels
T@"NSArray",R,N,V_weightsArray
TB,R,N,V_intercept
T@"NSArray",R,N,V_evaluationPoints
T@"<PMLMultiLabelEvaluationTrackerProtocol>",R,N,V_tracker
TQ,R,N,V_evaluationLevel
T@"NSString",R,N,V_planId
setSparseFloatFeatures:
setSparseQuantizedFeatures:
hasSparseFloatFeatures
hasSparseQuantizedFeatures
setFeaturesScaleFactor:
setHasFeaturesScaleFactor:
hasFeaturesScaleFactor
setFeaturesL2norm:
setHasFeaturesL2norm:
hasFeaturesL2norm
sparseFloatFeatures
sparseQuantizedFeatures
featuresScaleFactor
featuresL2norm
_featuresL2norm
_featuresScaleFactor
_sparseFloatFeatures
_sparseQuantizedFeatures
T@"AWDProactiveModelFittingSparseFloatVector",&,N,V_sparseFloatFeatures
T@"AWDProactiveModelFittingQuantizedSparseVector",&,N,V_sparseQuantizedFeatures
Tf,N,V_featuresScaleFactor
Tf,N,V_featuresL2norm
exceptionWithName:reason:userInfo:
raise
numberWithUnsignedInt:
indicesCount
clearIndices
indicesAtIndex:
addIndices:
valuesCount
clearValues
valuesAtIndex:
addValues:
indices
setIndices:count:
setValues:count:
setLength:
setHasLength:
hasLength
setMinValue:
setHasMinValue:
hasMinValue
setBucketSize:
setHasBucketSize:
hasBucketSize
minValue
bucketSize
_indices
_values
_bucketSize
_length
_minValue
TQ,R,N
T^I,R,N
TI,N,V_length
Tf,N,V_minValue
Tf,N,V_bucketSize
setStats:
hasStats
stats
_stats
T@"AWDProactiveModelFittingMinibatchStats",&,N,V_stats
initWithLabel:limit:rowId:
label
limit
rowId
isEqualToLabelLimitRowId:
numberWithInteger:
labelLimitRowIdWithLabel:limit:rowId:
_label
_limit
_rowId
T@"NSString",R,N,V_label
Tq,R,N,V_limit
Tq,R,N,V_rowId
isInternalBuild
isBetaBuild
f1Score:predictions:predicate:
roundFloatToSigFigs:sigFigs:
truePositives:predictions:predicate:
trueNegatives:predictions:predicate:
falsePositives:predictions:predicate:
falseNegatives:predictions:predicate:
evalMetricsWithRmse:f1:truePositives:trueNegatives:falsePositives:falseNegatives:
addScoresForOutcomes:predictions:predicate:metrics:
timeIntervalSinceNow
setSecsToExecute:
modelRegressorFromFloats:
initWithFormat:
errorWithDomain:code:userInfo:
date
copy
solverWithWeights:andIntercept:learningRate:minIterations:stoppingThreshold:
normalizeRegressor:
denseVector
evaluationMetricsForPredictions:objectives:predicate:start:
asMutableDenseVector
scaleAndAddNoiseToDenseVector:usingNorm:scaleFactor:
minibatchStatsForPositiveLabel:
trackWeights:scaleFactor:minibatchStats:evaluationMetrics:
setDictionary:
trackGradient:scaleFactor:minibatchStats:evaluationMetrics:serverIteration:
loadSessionsWithBlock:
descriptorFromPlanId:
name
version
locale
isEqualToString:
mutableCopy
getPFLIdentifier:
doubleValue
intValue
modelWeightsOfLength:rngSeed:
integerValue
planWithStore:tracker:sessionDescriptor:arguments:
currentServerIteration
currentModelWeights
localLearningRate
stoppingThreshold
localMinimumIterations
localGradientIterations
useOnlyAppleInternalSessions
isMultiLabel
positiveLabel
reportScale
_noiseStrategy
_currentServerIteration
_currentModelWeights
_localGradientIterations
_localLearningRate
_localMinimumIterations
_useOnlyAppleInternalSessions
_skew
_threshold
_isMultiLabel
_positiveLabel
_reportScale
T@"<PMLLogRegTrackerProtocol>",R,N,V_tracker
TQ,R,N,V_currentServerIteration
T@"PMLModelWeights",R,N,V_currentModelWeights
Tf,R,N,V_localLearningRate
Tf,R,N,V_stoppingThreshold
TQ,R,N,V_localMinimumIterations
TQ,R,N,V_localGradientIterations
TB,R,N,V_useOnlyAppleInternalSessions
TB,R,N,V_isMultiLabel
TQ,R,N,V_positiveLabel
TB,R,N,V_reportScale
setSparseFloatFeatureMatrix:
setSparseQuantizedFeatureMatrix:
hasSparseFloatFeatureMatrix
hasSparseQuantizedFeatureMatrix
setFeatureMatrixScaleFactor:
setHasFeatureMatrixScaleFactor:
hasFeatureMatrixScaleFactor
setFeatureMatrixL2norm:
setHasFeatureMatrixL2norm:
hasFeatureMatrixL2norm
sparseFloatFeatureMatrix
sparseQuantizedFeatureMatrix
featureMatrixScaleFactor
featureMatrixL2norm
_featureMatrixL2norm
_featureMatrixScaleFactor
_sparseFloatFeatureMatrix
_sparseQuantizedFeatureMatrix
T@"AWDProactiveModelFittingSparseFloatMatrix",&,N,V_sparseFloatFeatureMatrix
T@"AWDProactiveModelFittingQuantizedSparseMatrix",&,N,V_sparseQuantizedFeatureMatrix
Tf,N,V_featureMatrixScaleFactor
Tf,N,V_featureMatrixL2norm
setName:
setVersion:
setLocale:
modelInfoFromSessionDescriptor:
modelInfoFromPlanId:
hasWeights
T^Q,R,N
T^f,R,N
TQ,N,V_length
initWithMagnitude:
sample
initWithMagnitude:seed:
_magnitude
initWithTimestamp:serverIteration:
serverIteration
_serverIteration
Td,R,N,V_timestamp
TQ,R,N,V_serverIteration
initWithPath:allowSkipSchema:
sparseMatrixWithNumberOfRows:numberOfColumns:
first
second
getBytes:range:
initWithData:
initWithCovariates:outcomes:
isDNUEnabled
sessionDescriptorIdFor:
indicesData
valuesData
insertIntoTable:dictionary:
lastInsertRowId
writeTransaction:
_loadDataForModel:positiveRowId:negativeRowId:excludeItemIdsUsedWithin:limit:onlyAppleInternal:positiveLabel:skew:block:
_sessionDataToBatchWithNumberOfColumns:rowsData:labelsData:
loadDataForModel:excludeItemIdsUsedWithin:limit:onlyAppleInternal:positiveLabel:skew:block:
_loadBatchForModel:privacyBudgetRefreshPeriod:labels:batchSize:block:
loadDataForModel:privacyBudgetRefreshPeriod:labels:batchSize:block:
bindNamedParam:toInteger:
bindNamedParam:toNSString:
getIntegerForColumn:
prepAndRunQuery:onPrep:onRow:onError:
null
setObject:atIndexedSubscript:
bindNamedParam:toDouble:
updateTable:dictionary:whereClause:onError:
numberWithLong:
getNSDataForColumn:
tupleWithFirst:second:
enumerateKeysAndObjectsUsingBlock:
appendBytes:length:
sessionDimensionsForModel:startingRowId:onlyAppleInternal:labelFilter:
longValue
_loadDataFromLabelAndTuples:model:numberOfRows:numberOfColumns:lastUsedMax:block:
bindNamedParam:toNSArray:
readTransaction:
limitSessionsWithSessionDescriptor:withLabel:limit:
getNSStringForColumn:
descriptorForName:version:locale:
sessionStats
registerForLockStateChangeNotifications:
unregisterForLockStateChangeNotifications:
_unsafeOpenDbIfUnlocked
isUnlocked
_truncateDbIfCorrupted
initializeDatabase:withContentProtection:newDatabaseCreated:errorHandler:
_migrate:forStore:
closePermanently
_unregisterUnlockHandler
isInMemoryPath:
corruptionMarkerPathForPath:
truncateDatabaseAtPath:
removeItemAtPath:error:
vacuumWithShouldContinueBlock:error:
userVersion
skipFromZeroSchema:
_runQueries:andUpdateVersionTo:inTransactionOnDb:forStore:
migrate:to:forStore:
migrations
maxVersion
objectForKey:
pointerValue
filename
setUserVersion:
frailWriteTransaction:
mutableBytes
randomlyNamedInMemoryPathWithBaseName:
getSchema:
regularExpressionWithPattern:options:error:
hasPrefix:
stringByReplacingMatchesInString:options:range:withTemplate:
processInfo
processName
isClassCLocked
createSnapshot:
storeSession:label:model:bundleId:domainId:itemIds:isAppleInternal:
stringByAppendingString:
setLastUsedTimestampLimit:
inMemoryStoreForTesting
_loadDataForModel:privacyBudgetRefreshPeriod:labelAndStartRows:batchSize:supportPerLabel:block:
loadSessionsForModel:excludeItemIdsUsedWithin:limit:onlyAppleInternal:block:
limitSessionsForEachLabelWithSessionDescriptor:totalSessionLimit:
limitSessionsByLastUsedTTL:
limitSessionsByMaxTimesAccessed
deleteSessionsWithBundleId:
deleteSessionsWithBundleId:itemId:
deleteSessionsWithBundleId:domainId:
sessionStatsForSessionDescriptor:
enumerateSessionDescriptorsUsingBlock:
vacuumDbWithDeferralBlock:
migrateTo:
lastTrainingFeaturizationForModelName:andLocale:
updateLastTrainingFeaturizationForModel:andData:
convertToBagOfIdsVectorForModel:
isDbOpen
setMaxTimesAccessed:
logDbNotOpenEvent
dbForTesting
storeSession:label:model:
loadSessionsForModel:excludeItemIdsUsedWithin:withSkew:andLimit:block:
numberOfRowsInTable:
closeDbForTesting
_dbPath
_lockStateNotificationToken
_allowSkipSchema
_maxTimesAccessed
timeIntervalSince1970
columnIndicesCount
clearColumnIndices
columnIndicesAtIndex:
addColumnIndices:
rowIndicesCount
clearRowIndices
rowIndicesAtIndex:
addRowIndices:
columnIndices
setColumnIndices:count:
setColumnLength:
setHasColumnLength:
hasColumnLength
rowIndices
setRowIndices:count:
setRowLength:
setHasRowLength:
hasRowLength
columnLength
rowLength
_columnIndices
_rowIndices
_columnLength
_rowLength
TQ,N,V_columnLength
TQ,N,V_rowLength
initWithFloatsNoCopy:count:intercept:
vector
chunkWithVector:count:
numberOfNonZeroValues
sparseIndices
sparseValues
initWithWeights:intercept:
initWithChunk:intercept:
toChunk
_backingObject
maxValue
enumerateValuesWithBlock:
quantizedDenseVectorFromDenseVector:numberOfBuckets:
originalValueAtIndex:
componentsSeparatedByString:
initWithName:version:locale:
planIdFromString:
_name
_version
_locale
T@"NSString",R,N,V_name
T@"NSString",R,N,V_version
T@"NSString",R,N,V_locale
hasSparseFloatGradient
hasSparseQuantizedGradient
hasDenseQuantizedGradient
sparseFloatGradient
valueAtIndex:
sparseQuantizedGradient
denseQuantizedGradient
hasGradient
gradientValueAtIndex:
gradientLength
TI,N,V_columnLength
TI,N,V_rowLength
initModelWeightsFromFloats:
numberWithInt:
initFromDictionary:
toDictionary
initModelRegressorFromFloats:
initWithFloats:count:
toVec
migrateDenseDoubleVectorToDenseFloatVector:
chunkWithPlist:
serializeChunks:
writeToFile:atomically:
chunksFromFileAtPath:
chunksFromData:
lastObject
plist
withWeights:andIntercept:
initWithModels:
firstObject
initWithClassNameKey:
writeToPlistWithObject:andChunks:
readObjectWithPlist:chunks:context:
serialize
_models
setMinimumMagnitude:
l2norm
l1norm
createSamplerByName:
samplerWithScaleFactorFor:usingNorm:
scaleInPlaceWithInversedFactor:
processValuesInPlaceWithBlock:
createDefaultSampler
initWithIndexesInRange:
removeIndex:
enumerateNonZeroValuesWithBlock:
enumerateIndexesUsingBlock:
setNumberOfNonZeroValues:
setSparseIndices:
setSparseValues:
numberOfRows
isSymmetric
addIndexesInRange:
setMatrix:
minimumMagnitude
numberWithLongLong:
initWithMaxIterationCount:noiseScaleFactors:minimumMagnitude:noiseMechanism:inplaceNorm:
gaussianNoiseWithScaleFactor:minimumMagnitude:seed:
addNoiseToSparseVector:
addNoiseToSparseMatrix:
noiseScaleFactors
setNoiseScaleFactors:
noiseMechanism
setNoiseMechanism:
_seed
_inplaceNorm
_maxIterations
_minimumMagnitude
_noiseScaleFactors
_noiseMechanism
T{?=ff},N,V_noiseScaleFactors
Tf,N,V_minimumMagnitude
Tq,N,V_noiseMechanism
precision:predictions:predicate:
recall:predictions:predicate:
addPositiveScores:
addNegativeScores:
setReportSamplingRate:
hasName
hasVersion
hasLocale
T@"NSString",&,N,V_name
T@"NSString",&,N,V_version
T@"NSString",&,N,V_locale
quantizedSparseMatrixFromSparseMatrix:numberOfBuckets:
originalValueAtRow:column:
precision
precisionAtK:
mockTrackerForPlanId:
initWithModel:
initWithAdapter:modelInfo:
clearAllTrackedMessages
trackedMessagesByClass:
mockTracker
clearTrackedMessages
trackedEvaluations
_adapter
T@"NSArray",R,D,N
initWithMigrations:
valueWithPointer:
dictionaryWithObject:forKey:
valueForKeyPath:
unsignedIntValue
mockMigrationsByAddingQueries:
_migrations
T@"NSDictionary",R,N,V_migrations
TI,R,D,N
getInt64ForColumn:
bytes
dataWithBytesNoCopy:length:freeWhenDone:
bindNamedParam:toNSData:
bindNamedParam:toInt64:
initWithLength:
initWithBytes:length:
initWithBytesNoCopy:length:freeWhenDone:
initWithBytesNoCopy:length:deallocator:
appendData:
initWithMutableData:
initWithNumbers:
denseVectorFromNumbers:
mutableCopyWithZone:
initWithFloatsNoCopy:count:deallocator:
sliceFrom:to:
vecByAppendingVec:
cosineDistanceFrom:
density
valueAt:
_data
Tr^f,R,N
T@"NSData",R,N
append:
append:count:
scaleInPlaceWithFactor:
sumInPlaceWithVector:
mutableData
_mutableData
T@"NSMutableData",R,N,V_mutableData
sparseFloatVectorFromModelWeights:
sparseFloatVectorFromSparseVector:
setRmse:
setF1:
setTruePositives:
setTrueNegatives:
setFalsePositives:
setFalseNegatives:
evalMetricsWithRmse:f1:
positiveScoresCount
clearPositiveScores
positiveScoresAtIndex:
negativeScoresCount
clearNegativeScores
negativeScoresAtIndex:
setHasRmse:
hasRmse
setHasF1:
hasF1
setHasTruePositives:
hasTruePositives
setHasTrueNegatives:
hasTrueNegatives
setHasFalsePositives:
hasFalsePositives
setHasFalseNegatives:
hasFalseNegatives
positiveScores
setPositiveScores:count:
negativeScores
setNegativeScores:count:
setHasSecsToExecute:
hasSecsToExecute
rmse
truePositives
trueNegatives
falsePositives
falseNegatives
secsToExecute
_negativeScores
_positiveScores
_falseNegatives
_falsePositives
_trueNegatives
_truePositives
_rmse
_secsToExecute
Tf,N,V_rmse
Tf,N,V_f1
TQ,N,V_truePositives
TQ,N,V_trueNegatives
TQ,N,V_falsePositives
TQ,N,V_falseNegatives
Tf,N,V_secsToExecute
initWithPFLIdentifier:
_pflIdentifier
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
addSessionWithCovariates:label:sessionDescriptor:spotlightReference:isInternal:
deleteSessionsWithIdentifiers:bundleID:
deleteSessionsWithDomainIdentifiers:bundleID:
deleteSessionsWithBundleID:
trimDbWithDeferralBlock:
planReceivedWithPayload:error:
planReceivedWithRecipe:attachments:error:
updateSessionsAndLabelForModel:block:
clearCollectedSessions
collectedSessions
_internalCollectedSessions
_lastTrainingFeaturizations
_collectedSessions
T@"NSArray",R,N,V_collectedSessions
initWithSparseMatrix:
_enumerateSparseRowsWithBlock:
sparseMatrixFromNumbers:
setIsSymmetric:
valueAtRow:column:
enumerateNonZeroValuesForRow:withBlock:
_isSymmetric
_matrix
TB,N,V_isSymmetric
T^{sparse_m_float=},N,V_matrix
trackerForModelName:modelVersion:modelLocale:
trackSessionWithCovariates:label:locale:supervisionType:
setLabel:
setSupervisionType:
trackerForModelName:modelVersion:
trackSessionWithCovariates:label:locale:
maxSessionsToTrainOn
trainingSetSize
lossThresholdForStopping
epochsPerBatch
probThreshold
summableMetricsOnly
noiseStrategy
isEqualToMetaTrainingVariables:
initWithPlanId:store:noiseStrategy:sessionDescriptor:maxSessionsToTrainOn:trainingSetSize:labelsToTrainOn:currentServerIteration:lossThresholdForStopping:epochsPerBatch:probThreshold:evaluationLevel:reportScale:summableMetricsOnly:
labelsToTrainOn
_maxSessionsToTrainOn
_trainingSetSize
_labelsToTrainOn
_lossThresholdForStopping
_epochsPerBatch
_probThreshold
_summableMetricsOnly
T@"<PMLNoiseStrategy>",R,N,V_noiseStrategy
TQ,R,N,V_maxSessionsToTrainOn
TQ,R,N,V_trainingSetSize
T@"NSArray",R,N,V_labelsToTrainOn
Td,R,N,V_lossThresholdForStopping
TQ,R,N,V_epochsPerBatch
Td,R,N,V_probThreshold
TB,R,N,V_summableMetricsOnly
_newTaskForTraining
globalsToGetGradientsFor
layerWeightsToGetGradientsFor
layerBiasesToGetGradientsFor
_getModelParametersForTask:globalNames:weightNames:biasNames:error:
shape
trainingNetworkPath
inputName
outputName
trueLabelName
lossValueName
trainingOutputName
trainingControlVariableName
initializerName
initWithTrainingNetworkPath:inferenceInputs:inferenceOutputs:trainingInputs:trainingOutputs:trainingControlVariableName:withInitializer:error:
initWithTrainingModelDefinition:forPlatform:error:
getTensorNamed:
getParameterOfType:forLayerNamed:error:
inputDim
initWithRowsData:labelsData:inputName:inputDim:trueLabelName:
_updateResultsReferenceCallback:
doTrainingOnData:forNumberOfEpochs:withCallback:error:
_calculateGradientInPlaceForTask:startingParameters:globalNames:weightNames:biasNames:
isValidGradient:error:
addEntriesFromDictionary:
_calculateTrainingMetricsWithSamplingProb:groundTruthProvider:predictionsProvider:trueLabelName:trainingOutputName:lossValueName:probThreshold:includeSummableOnly:
numberOfParametersInTensor:
_iterateModelParametersForTask:globalNames:weightNames:biasNames:block:
dataPointer
replaceBytesInRange:withBytes:
numberOfDataPoints
dataPointAtIndex:error:
nextDouble
dataArray
argmax:
isEqualToEspressoTrainingVariables:
isEqualToEspressoTrainingPlan:
initWithMetaTrainingVariables:espressoTrainingVariables:
_taskDefinition
_mtv
_etv
_trainingPredictions
_groundTruth
setHasLabel:
hasLabel
setHasSupervisionType:
hasSupervisionType
setConfidenceScore:
setHasConfidenceScore:
hasConfidenceScore
supervisionType
confidenceScore
_supervisionType
_confidenceScore
TQ,N,V_label
TQ,N,V_supervisionType
Tf,N,V_confidenceScore
initWithPlan:
plan
_plan
T@"<PMLPlanProtocol>",R,N,V_plan
planFromData:withArgs:
planFromData:withStore:
planFromData:store:trainingNetworkPath:
serializePlan:
sparseFloatMatrixFromDenseMatrix:
sparseFloatMatrixFromSparseMatrix:
setSupport:
setHasSupport:
hasSupport
support
_support
Tf,N,V_support
solverWithWeights:andIntercept:
solverWithWeights:andIntercept:learningRate:minIterations:stoppingThreshold:regularizationStrategy:regularizationRate:l1Ratio:
initWithSolver:
solverWithWeights:
solverWithWeights:andIntercept:learningRate:minIterations:stoppingThreshold:l2RegularizationRate:
withWeights:
_solver
initWithRegressorFromFloat:
modelRegressorFromFloat:
regressorVectorFrom:
regressorFor:
inverseValues
Ti,R,N
classifierWithE5File:
initWithBucketSize:characterNGramRange:tokenNGramRange:shouldNormalizeTokens:shouldNormalizeCharacters:localeForNonwordTokens:tokenizeNewlines:idVectorLength:extraIdOptions:vectorizerStrategy:vectorNormalization:vocab:
initWithBucketSize:ngrams:localeForNonwordTokens:tokenizeNewlines:
withBucketSize:characterNGramRange:tokenNGramRange:shouldNormalizeTokens:shouldNormalizeCharacters:localeForNonwordTokens:tokenizeNewlines:
transformWithFrequency:shouldDecrement:
transformSequentialNGrams:
transformBagOfIds:shouldDecrement:
transformWithWordPiece:
sparseVectorWithLength:numberOfNonZeroValues:block:
scaleWithVectorNormalization:
addStartId:endId:paddingId:withMaxVectorLength:
convertToBagOfIds
transform:
initWithVocab:
tokenize:withLength:
startId
endId
padId
localeIdentifier
localeWithLocaleIdentifier:
isEqualToHashingVectorizer:
withBucketSize:andNgramOrder:
withBucketSize:andCharNgramOrder:
withBucketSize:andNgrams:
withBucketSize:ngrams:localeForNonwordTokens:tokenizeNewlines:
withBucketSize:characterNGramRange:tokenNGramRange:shouldNormalizeTokens:shouldNormalizeCharacters:localeForNonwordTokens:tokenizeNewlines:idVectorLength:extraIdOptions:vectorizerStrategy:vectorNormalization:
withBucketSize:characterNGramRange:tokenNGramRange:shouldNormalizeTokens:shouldNormalizeCharacters:localeForNonwordTokens:tokenizeNewlines:idVectorLength:extraIdOptions:vectorizerStrategy:vectorNormalization:vocab:
withBucketSize:characterNGramRange:tokenNGramRange:shouldNormalizeTokens:shouldNormalizeCharacters:
setVectorizerNormalization:
transformBatch:
_buckets
_characterNGramRange
_tokenNGramRange
_shouldNormalizeTokens
_shouldNormalizeCharacters
_localeForNonwordTokens
_tokenizeNewlines
_idVectorLength
_extraIdOptions
_vectorizerStrategy
_vectorNormalization
_paddingId
_endId
_startId
_vocab
getCharacters:range:
batchSize
initWithFloat:
statsWithSize:support:
stringValue
initWithPlanId:
trackEvaluationMetrics:minibatchStats:
trackPrecisionAtK:
clearTrackedSessions
trackedSessions
_internalTrackedSessions
_trackedSessions
T@"NSArray",R,N,V_trackedSessions
initWithData:numberOfRows:numberOfColumns:
denseMatrixFromData:numberOfRows:numberOfColumns:
denseMatrixFromNumbers:
_numberOfRows
_numberOfColumns
TQ,R,N,V_numberOfRows
TQ,R,N,V_numberOfColumns
_parseFeatureVersion:descriptor:
initWithBlock:
result
matchesInString:options:range:
pattern
numberOfRanges
rangeAtIndex:
substringWithRange:
numberOfMatchesInString:options:range:
firstMatchInString:options:range:
featureVersion
subSessionDescriptorForLabel:
baseSessionDescriptor
isSubSessionDescriptor
subSessionLabel
_featureVersion
initWithBundleId:domainId:itemIds:
referenceWithBundleId:domainId:itemIds:
itemIdentifiers
domainIdentifier
bundleIdentifier
_itemIdentifiers
_domainIdentifier
_bundleIdentifier
T@"NSArray",R,N,V_itemIdentifiers
T@"NSString",R,N,V_domainIdentifier
T@"NSString",R,N,V_bundleIdentifier
stringByAppendingPathComponent:
initWithBundleIdentifier:
initWithStore:fidesStore:availableSessionsTracker:
setAWDMetricQueryDelegate:
sendSessionStatsToFides
_deleteAllSavedRecordsFromFidesStoreSync
isMultiLabelModel:
unsignedLongValue
_sendStatsToFidesForMultiLabelModel:sessionCount:labeledStats:
_sendStatsToFidesForModel:sessionCount:positivesCount:negativesCount:support:
saveRecordWithData:recordInfo:completion:
deleteAllSavedRecordsWithCompletion:
_trainWithRecipe:chunkData:args:error:
pathExtension
dataWithContentsOfURL:
pluginShouldAddNoiseAndEncryptResult:
sharedSingletonWithDirectory:
availableSessionsStatsReportedToAWD
_fidesStore
_availableSessionsTracker
quantizedSparseVectorFromSparseVector:numberOfBuckets:
quantizedSparseVectorFromDenseVector:numberOfBuckets:
awdTrackerForPlanId:
initWithAdapter:modelInfo:quantizationBuckets:
messageForWeights:scaleFactor:minibatchStats:evaluationMetrics:modelInfo:numberOfBuckets:
setGradientScaleFactor:
setIteration:
setSparseQuantizedGradient:
setDenseQuantizedGradient:
messageForGradient:scaleFactor:minibatchStats:evaluationMetrics:serverIteration:modelInfo:numberOfBuckets:
setK:
setPrecision:
unsignedLongLongValue
trackerForPlanId:
parsecTrackerForPlanId:
adapter
quantizationNumberOfBuckets
_quantizationNumberOfBuckets
T@"<PMLTrackerAdapterProtocol>",R,N,V_adapter
T@"AWDProactiveModelFittingModelInfo",R,N,V_modelInfo
TQ,R,N,V_quantizationNumberOfBuckets
initWithPlanId:store:version:returningAfterRunning:
initWithPlanId:version:returningAfterRunning:
initWithPlanId:version:
setLastDeserializedPlanWithId:toPlan:
lastDeserializedPlansMap
lastDeserializedPlanWithId:
clearLastDeserializedPlans
initWithVersion:
initWithPlanId:store:
didRun
_returnValue
_didRun
TQ,V_version
TB,R,N,V_didRun
isEqualToData:
setSuperdata:
initWithContentsOfFile:options:error:
chunkOfType:data:superdata:
dataChunkType
_backingData
_superdata
chunkWithData:
dataWithPropertyList:format:options:error:
propertyListWithData:options:format:error:
_plist
_parsed
T@,R,N
Tr^d,R,N
trackedGradients
trackedWeights
toTokens:fromInput:withLength:
tokenizeToIds:fromString:tokens:tokenCount:length:
sparseVectorFromDense:length:
payloadForString:
addPerLabelSupport:
perLabelSupportsCount
clearPerLabelSupports
perLabelSupportAtIndex:
perLabelSupportType
setBatchSize:
setHasBatchSize:
hasBatchSize
perLabelSupports
setPerLabelSupports:
_batchSize
_perLabelSupports
TQ,N,V_batchSize
T@"NSMutableArray",&,N,V_perLabelSupports
path
isReadableFileAtPath:
absoluteString
dataWithContentsOfFile:
initWithTrainingNetworkPath:inputName:inputDim:outputName:trueLabelName:lossValueName:trainingOutputName:trainingControlVariableName:initializerName:globalsToGetGradientsFor:layerWeightsToGetGradientsFor:layerBiasesToGetGradientsFor:
_initializedWithNSData
_trainingNetworkPath
_inputName
_inputDim
_outputName
_trueLabelName
_lossValueName
_trainingOutputName
_trainingControlVariableName
_initializerName
_globalsToGetGradientsFor
_layerWeightsToGetGradientsFor
_layerBiasesToGetGradientsFor
T@"NSURL",R,N,V_trainingNetworkPath
T@"NSString",R,N,V_inputName
TQ,R,N,V_inputDim
T@"NSString",R,N,V_outputName
T@"NSString",R,N,V_trueLabelName
T@"NSString",R,N,V_lossValueName
T@"NSString",R,N,V_trainingOutputName
T@"NSString",R,N,V_trainingControlVariableName
T@"NSString",R,N,V_initializerName
T@"NSArray",R,N,V_globalsToGetGradientsFor
T@"NSArray",R,N,V_layerWeightsToGetGradientsFor
T@"NSArray",R,N,V_layerBiasesToGetGradientsFor
modelWeightsOfLength:rng:
modelWeightsFromFloats:
modelWeightsOfLength:
zeroWeightsOfLength:
constWeightsOfLength:value:
weightsFromNumbers:
weightsByAppendingWeights:
hasEvaluation
hasLogRegWeights
hasLogRegGradient
hasLinRegFeatureMatrix
hasLinRegObjectiveFeatures
evaluation
logRegWeights
logRegGradient
linRegFeatureMatrix
linRegObjectiveFeatures
_evaluation
_linRegFeatureMatrix
_linRegObjectiveFeatures
_logRegGradient
_logRegWeights
T@"AWDProactiveModelFittingEvaluation",&,N,V_evaluation
T@"AWDProactiveModelFittingLogRegWeights",&,N,V_logRegWeights
T@"AWDProactiveModelFittingLogRegGradient",&,N,V_logRegGradient
T@"AWDProactiveModelFittingLinRegFeatureMatrix",&,N,V_linRegFeatureMatrix
T@"AWDProactiveModelFittingLinRegObjectiveFeatures",&,N,V_linRegObjectiveFeatures
hasFeatureMatrix
featureMatrixValueAtRow:column:
_outcomes
_count
T@"PMLSparseMatrix",R,N,V_covariates
T@"PMLModelRegressor",R,N,V_outcomes
TQ,R,N,V_count
_trackedMessages
attributesOfItemAtPath:error:
fileSize
runBlockWithTrie:
serializeLexiconToFile:tokenToWordIDDict:
getWordIDforToken:
getTotalEntries
_lexicon
initWithStore:tracker:planId:sessionDescriptor:maxSessionsLimit:sessionsInBatch:currentModelWeights:intercept:skew:threshold:isMultiLabel:positiveLabel:evaluationLevel:
T@"<PMLEvaluationTrackerProtocol>",R,N,V_tracker
resetBytesInRange:
clearBuffers
sparseVectorWithLength:numberOfNonZeroValues:isSparseIndexInt64:sparseIndices:sparseValues:toDenseValues:withLength:
initWithData:type:shape:strides:
setMaxNumberOfElements:
prepareForEpoch
_rowsData
_labelsData
_numberOfDataPoints
_inputBuffer
_trueLabelBuffer
hasObjectiveFeatures
featuresValueAtIndex:
featuresLength
initWithComponentId:
initWithAWDConnection:
reportStatsToAWD
registerQueriableMetric:callback:
_delegate
_awdServerConnection
sparseVectorEmptyWithLength:
initWithLength:numberOfNonZeroValues:indices:values:
maxAbsValue
applyOneHotNormalization
sparseVectorFromNumbers:
sparseVectorFromNumbers:indices:length:
initWithLength:numberOfNonZeroValues:indicesData:valuesData:
indicesAsUInt16Data
quantizedValuesAsUInt8DataWithMin:max:
processNonZeroValuesInPlaceWithBlock:
_numberOfNonZeroValues
_sparseIndices
_sparseValues
TQ,N,V_numberOfNonZeroValues
T^q,N,V_sparseIndices
T^f,N,V_sparseValues
TQ,R,N,V_length
statsWithPerLabelCounts:
combineWithStats:
supportForLabel:
setHasK:
hasK
setHasPrecision:
hasPrecision
_precision
TQ,N,V_k
Tf,N,V_precision
writeToDataWithObject:andChunks:
readObjectWithData:chunks:context:
_classNameKey
lock
unlock
initWithPlanId:numberOfBuckets:
_results
_resultsLock
setSparseFloatGradient:
setHasIteration:
hasIteration
setHasGradientScaleFactor:
hasGradientScaleFactor
setGradientL2norm:
setHasGradientL2norm:
hasGradientL2norm
iteration
gradientScaleFactor
gradientL2norm
_iteration
_denseQuantizedGradient
_gradientL2norm
_gradientScaleFactor
_sparseFloatGradient
_sparseQuantizedGradient
T@"AWDProactiveModelFittingSparseFloatVector",&,N,V_sparseFloatGradient
TQ,N,V_iteration
T@"AWDProactiveModelFittingQuantizedSparseVector",&,N,V_sparseQuantizedGradient
Tf,N,V_gradientScaleFactor
Tf,N,V_gradientL2norm
T@"AWDProactiveModelFittingQuantizedDenseVector",&,N,V_denseQuantizedGradient
@24@0:8[10Q]16
Q32@0:8[10Q]16Q24
@24@0:8@16
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"NSArray"24@0:8@"PMLSparseVector"16
v16@0:8
@64@0:8^v16^v24{?=^vi}32Q48Q56
{?="plan"^v"network_index"i}
@40@0:8@16@24Q32
v68@0:8@16d24Q32B40Q44d52@?60
@"PMLTrainingStoredSessionBatch"
@56@0:8@16@24Q32Q40Q48
@24@0:8Q16
@80@0:8@16@24{?=ff}32f40@44Q52B60q64Q72
@"NSArray"
@"PMLSessionDescriptor"
@"_PASRng"
v28@0:8I16@20
v28@0:8I16@"PBCodable"20
@24@0:8^{_NSZone=}16
v24@0:8Q16
v20@0:8B16
v24@0:8@16
@"AWDProactiveModelFittingEvalMetrics"
@"AWDProactiveModelFittingMinibatchStats"
@"AWDProactiveModelFittingModelInfo"
@"NSMutableArray"
{?="timestamp"b1}
v20@0:8f16
f16@0:8
@"AWDProactiveModelFittingQuantizedDenseVector"
@"AWDProactiveModelFittingSparseFloatVector"
@"AWDProactiveModelFittingQuantizedSparseVector"
{?="timestamp"b1"weightsL2norm"b1"weightsScaleFactor"b1}
@32@0:8@16@24
@"PMLMutableDenseVector"
@"NSNumber"
@68@0:8f16Q20f28@32B40@?44@?52@?60
@32@0:8^f16Q24
f24@0:8@16
v32@0:8@16@24
@"PMLModelWeights"
@"PMLSparseMatrix"
@"PMLModelRegressor"
@40@0:8@16@24@32
@24@0:8@"NSMutableArray"16
@40@0:8@16@"NSArray"24@"NSDictionary"32
@24@0:8^@16
@"NSDictionary"24@0:8^@16
@100@0:8@16@24@32Q40Q48@56@64B72@76@84Q92
@"PMLTrainingStore"
@"<PMLMultiLabelClassifierModelProtocol>"
@"<PMLMultiLabelEvaluationTrackerProtocol>"
@"NSString"
{?="timestamp"b1"featuresL2norm"b1"featuresScaleFactor"b1}
^I16@0:8
v20@0:8I16
I24@0:8Q16
v32@0:8^I16Q24
I16@0:8
{?="list"^I"count"Q"size"Q}
{?="bucketSize"b1"length"b1"minValue"b1}
@40@0:8@16q24q32
q16@0:8
@48@0:8@16@24@32@40
@160@0:8@16@24@32@40@48Q56Q64Q72@80f88f92Q96Q104B112d116d124B132B136Q140Q148B156
@48@0:8@16@24@?32@40
v24@0:8@?16
@"<PMLLogRegTrackerProtocol>"
@"<PMLNoiseStrategy>"
@"AWDProactiveModelFittingSparseFloatMatrix"
@"AWDProactiveModelFittingQuantizedSparseMatrix"
{?="timestamp"b1"featureMatrixL2norm"b1"featureMatrixScaleFactor"b1}
^Q16@0:8
Q24@0:8Q16
v32@0:8^Q16Q24
^f16@0:8
f24@0:8Q16
v32@0:8^f16Q24
{?="list"^Q"count"Q"size"Q}
{?="list"^f"count"Q"size"Q}
{?="length"b1}
@20@0:8f16
@28@0:8f16Q20
{?="s"[2Q]}
@32@0:8d16Q24
d16@0:8
@40@0:8Q16@24@32
q32@0:8@16@24
q40@0:8@16@24@32
B44@0:8@16I24@28@36
@24@0:8^Q16
v24@0:8d16
@28@0:8@16B24
v68@0:8@16q24@32@40@48@56B64
v56@0:8@16d24@32Q40@?48
@44@0:8@16Q24B32@36
v64@0:8@16@24Q32Q40d48@?56
v84@0:8@16Q24Q32d40Q48B56Q60d68@?76
v64@0:8@16d24@32Q40Q48@?56
v52@0:8@16d24Q32B40@?44
v32@0:8@16Q24
v40@0:8@16@24Q32
Q24@0:8@16
q24@0:8@16
v40@0:8@16q24@32
v52@0:8@16d24d32i40@?44
@"_PASSqliteDatabase"
{?="columnLength"b1"rowLength"b1}
@32@0:8r^f16i24B28
@32@0:8@16Q24
{?="bucketSize"b1"columnLength"b1"minValue"b1"rowLength"b1}
@28@0:8@"NSArray"16B24
@28@0:8f16f20i24
B36@0:8@16B24^f28
v24@0:8@"PMLSparseVector"16
v24@0:8@"PMLSparseMatrix"16
B36@0:8@"PMLMutableDenseVector"16B24^f28
@48@0:8i16{?=ff}20f28i32q36B44
@44@0:8i16{?=ff}20f28q32B40
{_PMLPreNoiseScaleFactorAndNoiseSampler=@f}28@0:8@16B24
{?=ff}16@0:8
v24@0:8{?=ff}16
v24@0:8q16
{?="gaussianScaleFactor"f"laplaceScaleFactor"f}
f40@0:8@16@24@?32
Q40@0:8@16@24@?32
v48@0:8@16@24@?32@40
f24@0:8f16i20
f32@0:8Q16Q24
@"PMLTrackerMockAdapter"
@24@0:8^I16
@"NSDictionary"
r^f16@0:8
@32@0:8r^f16Q24
@36@0:8^f16Q24B32
@40@0:8^f16Q24@?32
@24@0:8i16i20
@"NSMutableData"
v32@0:8r^f16Q24
@24@0:8f16f20
@56@0:8f16f20Q24Q32Q40Q48
{?="falseNegatives"b1"falsePositives"b1"trueNegatives"b1"truePositives"b1"f1"b1"rmse"b1"secsToExecute"b1}
@24@0:8r*16
v52@0:8@16q24@32@40B48
@32@0:8@16^@24
@40@0:8@16@24^@32
v52@0:8@"PMLSparseVector"16q24@"PMLSessionDescriptor"32@"PMLSpotlightReference"40B48
v32@0:8@"NSArray"16@"NSString"24
v24@0:8@"NSString"16
v24@0:8@?<B@?>16
@"NSDictionary"32@0:8@"NSData"16^@24
@"NSDictionary"40@0:8@"NSDictionary"16@"NSArray"24^@32
v32@0:8@16@?24
@"NSMutableDictionary"
@32@0:8Q16Q24
@24@0:8^{sparse_m_float=}16
v24@0:8^{sparse_m_float=}16
v32@0:8Q16@?24
^{sparse_m_float=}16@0:8
^{sparse_m_float=}
v40@0:8@16Q24@32
v48@0:8@16Q24@32Q40
@120@0:8@16@24@32@40Q48Q56@64Q72d80Q88d96Q104B112B116
i24@0:8@16
B32@0:8@16^@24
@56@0:8@16@24@32@40@?48
@56@0:8@16@24@32@40^@48
@56@0:8@16@24@32@40@48
@76@0:8d16@24@32@40@48@56d64B72
@?24@0:8@16
@"ETTaskDefinition"
@"PMLMetaTrainingVariables"
@"PMLEspressoTrainingVariables"
@"<ETDataProvider>"
{?="label"b1"supervisionType"b1"timestamp"b1"confidenceScore"b1}
@"<PMLPlanProtocol>"
{?="label"b1"support"b1}
@44@0:8@16B24f28Q32f40
@48@0:8@16B24f28Q32f40f44
@60@0:8@16B24f28Q32f40Q44f52f56
@"PMLGradientSolver"
@20@0:8i16
i16@0:8
@"PMLDenseVector"
@36@0:8i16i20@24B32
@104@0:8i16{_NSRange=QQ}20{_NSRange=QQ}36B52B56@60B68Q72Q80Q88q96
@112@0:8i16{_NSRange=QQ}20{_NSRange=QQ}36B52B56@60B68Q72Q80Q88q96@104
@72@0:8i16{_NSRange=QQ}20{_NSRange=QQ}36B52B56@60B68
@60@0:8i16{_NSRange=QQ}20{_NSRange=QQ}36B52B56
{_NSRange="location"Q"length"Q}
@"NSLocale"
@"<PMLWordPieceVocabProtocol>"
@44@0:8@16f24@28@36
@52@0:8@16f24@28@36Q44
@"NSDictionary"44@0:8@"PMLDenseVector"16f24@"AWDProactiveModelFittingMinibatchStats"28@"AWDProactiveModelFittingEvalMetrics"36
@"NSDictionary"52@0:8@"PMLDenseVector"16f24@"AWDProactiveModelFittingMinibatchStats"28@"AWDProactiveModelFittingEvalMetrics"36Q44
@"NSDictionary"32@0:8@"AWDProactiveModelFittingEvalMetrics"16@"AWDProactiveModelFittingMinibatchStats"24
@"NSDictionary"24@0:8@"NSDictionary"16
@"NSDictionary"32@0:8@"NSDictionary"16@"AWDProactiveModelFittingMinibatchStats"24
@40@0:8@16Q24Q32
f32@0:8@16@24
@"_PASLazyResult"
v52@0:8@16Q24Q32Q40f48
@48@0:8@16@24@32^@40
@"DESRecordStore"
@"PMLAWDAvailableSessionsTracker"
@60@0:8@16f24@28@36@44Q52
@68@0:8@16f24@28@36Q44@52Q60
@"<PMLTrackerAdapterProtocol>"
@44@0:8@16@24Q32B40
@36@0:8@16Q24B32
{?="bucketSize"b1"minValue"b1}
@36@0:8I16@20@28
@"NSData"
@28@0:8r^f16i24
@28@0:8r^d16i24
r^d16@0:8
i40@0:8^{_NSRange=QQ}16@24Q32
i52@0:8^f16@24^{_NSRange=QQ}32i40Q44
{?="batchSize"b1"support"b1}
@112@0:8@16@24Q32@40@48@56@64@72@80@88@96@104
@"NSURL"
@28@0:8i16@20
@28@0:8i16Q20
@24@0:8i16f20
@"AWDProactiveModelFittingEvaluation"
@"AWDProactiveModelFittingLinRegFeatureMatrix"
@"AWDProactiveModelFittingLinRegObjectiveFeatures"
@"AWDProactiveModelFittingLogRegGradient"
@"AWDProactiveModelFittingLogRegWeights"
@24@0:8#16
B32@0:8@16@24
@"_PASCFBurstTrie"
@112@0:8@16@24@32@40Q48Q56@64B72d76d84B92Q96Q104
@"<PMLEvaluationTrackerProtocol>"
@32@0:8Q16^@24
@"NSDictionary"32@0:8Q16^@24
@56@0:8@16@24@32Q40@48
I24@0:8@16
I24@0:8@"NSString"16
@"<PMLAWDMetricQueryDelegate>"
@"AWDServerConnection"
@40@0:8Q16Q24@?32
v68@0:8Q16Q24B32r^v36r^f44^f52Q60
@48@0:8Q16Q24@32@40
@48@0:8Q16Q24^q32^f40
v24@0:8^f16
v24@0:8^q16
v48@0:8q16q24q32Q40
^q16@0:8
@28@0:8Q16f24
{?="k"b1"precision"b1}
@"NSLock"
{?="iteration"b1"timestamp"b1"gradientL2norm"b1"gradientScaleFactor"b1}
$7J]
#6I\o
2EX\s
2EXoos
#6Ul
#6I\o
@(#)PROGRAM:ProactiveML  PROJECT:Suggestions-1193.0.2
 %zu
inputSequence
outputLabels
PMLPlanSimulator.m
Couldn't load sessions for %@
Can't instantiate simulator, need at least one db file.
Multiple batches not supported in simulation.
Can't instantiate simulator, no db at %@
v16@?0Q8
Unsupported proto buf message: %@
%@ %@
timestamp
modelInfo
minibatchStats
evaluationMetrics
precisionAtK
sparseFloatWeights
sparseQuantizedWeights
weightsScaleFactor
weightsL2norm
denseQuantizedWeights
PMLGradientSolver.m
Invalid parameter not satisfying: %@
gradient
weights
gradientCalculator
predictionCalculator
batchPredictionCalculator
Covariates must have the same column-length as weights. Got covariates with %tu columns but weights of length %d
Invalid covariates, length: %tu but model weights length: %d
PMLMultiLabelRegressionEvaluationPlan.m
Invalid planId. Must be <name>-<version>-<locale> but got %@
Can't instantiate %@. Unknown model class: %@
q24@?0@8@16
v32@?0@"PMLModelWeights"8Q16^B24
PLAN_ID
SESSIONS_MODEL_HANDLE
SESSIONS_LIMIT
SESSIONS_IN_BATCH
POSITIVE_LABELS
WEIGHTS_ARRAY
MULTI_LABEL_REGRESSION_MODEL_TYPE
INTERCEPT
EVALUATION_POINTS
TRACKER
TRACKER_TYPE
EVALUATION_LEVEL
TRAINING_STORE
Can't instantiate %@. Missing "store" dependency.
v32@?0@"NSNumber"8Q16^B24
Can't instantiate %@. Unknown tracker class: %@
planId
sparseFloatFeatures
sparseQuantizedFeatures
featuresScaleFactor
featuresL2norm
idx (%tu) is out of range (%tu)
indices
values
length
minValue
bucketSize
stats
PMLLabelLimitRowId.m
label
limit >= 0
rowId >= 0
PMLLogRegTrainingPlan.m
<%@ %@>
Cannot train model with covariates of length %tu but model weights of length %d (planid = %@)
B12@?0f8
loss
v24@?0@"PMLTrainingStoredSessionBatch"8^B16
name
version
locale
plan
IS_SYNCHRONOUS
WEIGHTS
LEARNING_RATE
STOPPING_THRESHOLD
MIN_ITERATIONS
GRADIENT_ITERATIONS
SERVER_ITERATION
IS_MULTI_LABEL
POSITIVE_LABEL
NOISE_STRATEGY_TYPE
NOISE_STRATEGY
ONLY_INTERNAL_SESSIONS
SKEW
THRESHOLD
REPORT_SCALE
BEFORE_NOISE_SCALING
PMLNoNoiseStrategy
PMLDiffPrivacyNoiseStrategy
PMLSeparatedDPNoiseStrategy
PFL_ID
PLUGIN_SHOULD_ADD_NOISE_AND_ENCRYPT_RESULT
noiseStrategy
FiM_logreg-1.0-en
serverIteration
intercept
generateWeightsOfLength
localLearningRate
stoppingThreshold
localMinimumIterations
localGradientIterations
reportScale
useOnlyAppleInternalSessions
sessionsInBatch
maxSessionsLimit
positiveLabel
sparseFloatFeatureMatrix
sparseQuantizedFeatureMatrix
featureMatrixScaleFactor
featureMatrixL2norm
PMLTrainingStore.m
Number of labels %lu does not match number of rows specified %lu
covariates
sessionDescriptor
bundleId
itemIds
sessions
creationTimestamp
sessionDescriptorId
covariatesLength
covariatesIndices
covariatesValues
isAppleInternal
sessionsDomainIds
sessionId
bundleIdentifier
domainIdentifier
sessionsItemIds
itemIdentifier
lastUsed
timesAccessed
v8@?0
v56@?0Q8@"NSArray"16@"NSData"24Q32Q40^B48
AND isAppleInternal = 1 
SELECT covariatesLength, COUNT(*) FROM sessions WHERE sessionDescriptorId = (SELECT id FROM sessionsDescriptors WHERE name = :name AND version = :version AND locale = :locale) AND id > :rowId %@ %@ ORDER BY id
:name
:version
:locale
numberOfRows
numberOfColumns
SELECT sessions.id, sessions.label, sessions.covariatesLength, sessions.covariatesIndices, sessions.covariatesValues, sessionsItemIds.timesAccessed FROM sessions JOIN sessionsItemIds ON sessions.id = sessionsItemIds.sessionId AND sessions.sessionDescriptorId = (SELECT id FROM sessionsDescriptors WHERE name = :name AND version = :version AND locale = :locale) AND sessionsItemIds.lastUsed <= :lastUsedMax AND sessionsItemIds.timesAccessed < :timesUsedMax AND sessions.id > :rowId %@ ORDER BY sessions.id limit :limit
:limit
:lastUsedMax
:timesUsedMax
sessionId = %ld
{_PASDBIterAction_=B}16@?0@"NSError"8
Read label %lu while specified %@. Matcher: %@
Invalid session from db (row id %lu): covariatesIndices and covariatesValues must contain the same number of elements (expected bytes length in int/float ratio but got %lu and %lu).
Invalid session from db (row id %lu), covariatesLength has to be %lu, got %lu.
Invalid session from db (row id %lu): idx %d out of bounds [0, %lu).
v32@?0@"NSNumber"8@"PMLLabelLimitRowId"16^B24
AND sessions.label = %lu AND sessions.id in (SELECT sessionId from sessionsItemIds WHERE lastUsed < %f AND timesAccessed < %lu) 
AND sessions.label = 0 AND sessions.id in (SELECT sessionId from sessionsItemIds WHERE lastUsed < %f AND timesAccessed < %lu) 
v48@?0Q8@"NSArray"16@"NSData"24@"NSDictionary"32^B40
SELECT sessions.id, sessions.label, sessions.covariatesLength, sessions.covariatesIndices, sessions.covariatesValues, sessionsItemIds.timesAccessed FROM sessions JOIN sessionsItemIds ON sessions.id = sessionsItemIds.sessionId AND sessions.sessionDescriptorId = (SELECT id FROM sessionsDescriptors WHERE name = :name AND version = :version AND locale = :locale) AND sessionsItemIds.lastUsed <= :lastUsedMax AND sessionsItemIds.timesAccessed < :timesUsedMax AND sessions.label IN _pas_nsarray(:labels) ORDER BY RANDOM() limit :limit
:labels
AND label = %lu AND sessions.id in (SELECT sessionId from sessionsItemIds WHERE lastUsed < %f AND timesAccessed < %lu) 
SELECT count(*) FROM sessions WHERE sessionDescriptorId = (SELECT id FROM sessionsDescriptors WHERE name = :name AND version = :version AND locale = :locale) 
SELECT DISTINCT label FROM sessions WHERE UNLIKELY(sessionDescriptorId = (SELECT id FROM sessionsDescriptors WHERE name = :name AND version = :version AND locale = :locale))
DELETE FROM sessions WHERE creationTimestamp < :lastUsedExpirationDate AND (id in (SELECT sessionId from sessionsItemIds WHERE lastUsed < :lastUsedExpirationDate))
:lastUsedExpirationDate
DELETE FROM sessions WHERE (id in (SELECT sessionId from sessionsItemIds WHERE timesAccessed >= :maxTimesAccessed))
:maxTimesAccessed
label = :label AND
SELECT count(*) FROM sessions WHERE %@ UNLIKELY(sessionDescriptorId = (SELECT id FROM sessionsDescriptors WHERE name = :name AND version = :version AND locale = :locale))
:label
DELETE FROM sessions WHERE id IN (   SELECT id FROM sessions   WHERE %@   UNLIKELY(sessionDescriptorId = (SELECT id FROM sessionsDescriptors WHERE name = :name AND version = :version AND locale = :locale))   ORDER BY RANDOM() LIMIT :limit )
DELETE FROM sessions WHERE id IN (SELECT sessionId FROM sessionsItemIds WHERE bundleIdentifier = :bundleIdentifier)
:bundleIdentifier
DELETE FROM sessions WHERE id IN (SELECT sessionId FROM sessionsItemIds WHERE bundleIdentifier = :bundleIdentifier AND itemIdentifier = :itemIdentifier)
:itemIdentifier
DELETE FROM sessions WHERE id IN (SELECT sessionId FROM sessionsDomainIds WHERE bundleIdentifier = :bundleIdentifier AND domainIdentifier = :domainIdentifier  UNION ALL SELECT sessionId FROM sessionsDomainIds WHERE bundleIdentifier = :bundleIdentifier AND domainIdentifier >= :domainIdentifier || '.' AND domainIdentifier < :domainIdentifier || '/')
:domainIdentifier
SELECT mh.name, mh.version, mh.locale, s.label, count(*) FROM sessions s INNER JOIN sessionsDescriptors mh ON s.sessionDescriptorId = mh.id INNER JOIN sessionsItemIds sii ON s.id = sii.sessionId WHERE sii.timesAccessed < :timesUsedMax GROUP BY s.sessionDescriptorId, s.label ORDER BY s.sessionDescriptorId, s.label
SELECT name, version, locale FROM sessionsDescriptors
SELECT id FROM sessionsDescriptors WHERE name = :name AND version = :version AND locale = :locale
sessionsDescriptors
!_lockStateNotificationToken
v12@?0i8
PRAGMA foreign_keys = ON
B8@?0
migrationFunction
SELECT sd.version, lf.transformer FROM sessionsDescriptors sd CROSS JOIN lastFeaturizations lf ON lf.sessionDescriptorId = sd.id WHERE sd.name = :name AND sd.locale = :locale
SELECT sd.id FROM sessionsDescriptors sd CROSS JOIN lastFeaturizations lf ON lf.sessionDescriptorId = sd.id WHERE sd.name = :name AND sd.locale = :locale
transformer
lastFeaturizations
sessionDescriptorId = %lu
SELECT s.id, s.sessionDescriptorId, s.covariatesIndices, s.covariatesValues FROM sessions s CROSS JOIN sessionsDescriptors sd ON s.sessionDescriptorId = sd.id WHERE sd.name = :name AND sd.locale = :locale
id = %ld
training_db_schema
[ ]{2,}
SELECT sql FROM sqlite_master WHERE sql IS NOT NULL AND tbl_name NOT LIKE 'sqlite_%' 
CREATE TABLE integrityCheck
python
Process name %@ is not python
training_sessions
test
SELECT count(*) FROM 
columnIndices
columnLength
rowIndices
rowLength
PMLImmutableLogisticRegressionModel.m
AWDProactiveModelFittingQuantizedDenseVector+PML.m
Too big vector (length: %tu)
PMLPlanDescriptor.m
VALUES
SHAPE
-[PMLModelWeights(PMLMobileAssetParameterGetStrategy) initFromDictionary:]
PMLDictionaryParameters.m
weightArray.count == [shapeArray[0] unsignedIntegerValue]
-[PMLModelRegressor(PMLMobileAssetParameterGetStrategy) initFromDictionary:]
regressorArray.count == [shapeArray[0] unsignedIntegerValue]
-[PMLModelWeights(PMLPlistAndChunksSerialization) initWithPlist:chunks:context:]
[__expr isKindOfClass:[NSNumber class]]
[__expr isKindOfClass:[PMLDataChunkDenseFloatVector class]]
-[PMLModelRegressor(PMLPlistAndChunksSerialization) initWithPlist:chunks:context:]
-[PMLImmutableLogisticRegressionModel(PMLPlistAndChunksSerialization) initWithPlist:chunks:context:]
MULTI_LABEL_REGRESSION_MODELS
Invalid noiseMechanism, got: %lld
f20@?0f8Q12
v24@?0Q8^B16
You must explicitly specify a noise mechanism.
Invalid noise mechanism value: %lli
NOISE_STRATEGY_MAX_ITERATIONS
NOISE_STRATEGY_MINIMUM_MAGNITUDE
GAUSSIAN_NOISE_SCALE
LAPLACE_NOISE_SCALE
NOISE_MECHANISM_ENUM_VALUE
INPLACE_NORM
NOISE_STRATEGY_SCALE
NOISE_SAMPLER
<%@ gaussianScaleFactor:%0.2f laplaceScaleFactor:%0.2f minMagnitude:%0.2f>
PMLClassificationEvaluationMetrics.m
AWDProactiveModelFittingQuantizedSparseMatrix+PML.m
Too big matrix (rows: %tu)
Too big matrix (cols: %tu)
foo-1.0-en
CREATE TABLE IF NOT EXISTS modelHandles (                  id integer PRIMARY KEY AUTOINCREMENT NOT NULL,             name char(128) NOT NULL,                                   version char(128) NOT NULL,                                locale char(5) NOT NULL                                    )
CREATE UNIQUE INDEX IF NOT EXISTS ix_modelHandles_name_version_locale             ON modelHandles (name, version, locale)
CREATE TABLE IF NOT EXISTS sessions (                      id integer PRIMARY KEY AUTOINCREMENT NOT NULL,             creationTimestamp real NOT NULL,                           modelHandleId integer NOT NULL,                            label integer NOT NULL,                                    covariatesLength integer NOT NULL,                         covariatesIndices blob NOT NULL,                           covariatesValues blob NOT NULL,                            FOREIGN KEY (modelHandleId) REFERENCES modelHandles (id)               ON DELETE CASCADE                                        )
CREATE INDEX IF NOT EXISTS ix_sessions_modelHandleId             ON sessions (modelHandleId ASC)
CREATE TABLE IF NOT EXISTS sessionsDomainIds (               id integer PRIMARY KEY AUTOINCREMENT NOT NULL,               sessionId integer NOT NULL,                                  domainIdentifier char(128) NOT NULL,                         FOREIGN KEY (sessionId) REFERENCES sessions (id)               ON DELETE CASCADE                                          )
CREATE TABLE IF NOT EXISTS sessionsItemIds (                 id integer PRIMARY KEY AUTOINCREMENT NOT NULL,               sessionId integer NOT NULL,                                  itemIdentifier char(128) NOT NULL,                           FOREIGN KEY (sessionId) REFERENCES sessions (id)               ON DELETE CASCADE                                          )
CREATE TABLE IF NOT EXISTS modelMetadata (               modelHandleId integer PRIMARY KEY NOT NULL,              payloadPath char(128) NOT NULL,                          serverIteration integer NOT NULL,                        hasFinishedTraining integer(1) NOT NULL,                 modificationTimestamp real NOT NULL,                     FOREIGN KEY (modelHandleId) REFERENCES modelHandles (id)               ON DELETE CASCADE                                                  )
CREATE TABLE IF NOT EXISTS trainingLog (                   id integer PRIMARY KEY AUTOINCREMENT NOT NULL,             creationTimestamp real NOT NULL,                           modelHandleId integer NOT NULL,                            serverIteration integer NOT NULL,                          FOREIGN KEY (modelHandleId) REFERENCES modelHandles (id)               ON DELETE CASCADE                                                  )
CREATE INDEX IF NOT EXISTS ix_trainingLog_modelHandleId_creationTimestamp             ON trainingLog (modelHandleId, creationTimestamp)
DROP TABLE modelMetadata
CREATE TABLE IF NOT EXISTS modelMetadata (               modelHandleId integer PRIMARY KEY NOT NULL,              serverIteration integer NOT NULL,                        hasFinishedTraining integer(1) NOT NULL,                 modificationTimestamp real NOT NULL,                     payload blob NOT NULL,                                   FOREIGN KEY (modelHandleId) REFERENCES modelHandles (id)               ON DELETE CASCADE                                                  )
ALTER TABLE sessions RENAME TO sessions_old
CREATE TABLE IF NOT EXISTS sessions (                      id integer PRIMARY KEY AUTOINCREMENT NOT NULL,             creationTimestamp real NOT NULL,                           modelHandleId integer NOT NULL,                            label integer NOT NULL,                                    covariatesLength integer NOT NULL,                         covariatesIndices blob,                                    covariatesValues blob,                                     FOREIGN KEY (modelHandleId) REFERENCES modelHandles (id)               ON DELETE CASCADE                                        )
INSERT INTO sessions(id,creationTimestamp,modelHandleId,label,covariatesLength,covariatesIndices,covariatesValues)             SELECT id,creationTimestamp,modelHandleId,label,covariatesLength,covariatesIndices,covariatesValues FROM sessions_old
ALTER TABLE sessionsDomainIds RENAME TO sessionsDomainIds_old
INSERT INTO sessionsDomainIds(id,sessionId,domainIdentifier)             SELECT id,sessionId,domainIdentifier FROM sessionsDomainIds_old
DROP TABLE sessionsDomainIds_old
ALTER TABLE sessionsItemIds RENAME TO sessionsItemIds_old
INSERT INTO sessionsItemIds(id,sessionId,itemIdentifier)             SELECT id,sessionId,itemIdentifier FROM sessionsItemIds_old
DROP TABLE sessionsItemIds_old
DROP TABLE sessions_old
ALTER TABLE modelMetadata ADD maxIteration integer NOT NULL DEFAULT 10
ALTER TABLE sessions ADD isAppleInternal integer(1) NOT NULL DEFAULT 0
DELETE FROM modelMetadata
CREATE TABLE IF NOT EXISTS receivedPlans (             planId char(128) PRIMARY KEY NOT NULL,                 modificationTimestamp real NOT NULL,                   serializedPlan blob NOT NULL                           )
DROP TABLE trainingLog
CREATE TABLE IF NOT EXISTS trainingLog (                   id integer PRIMARY KEY AUTOINCREMENT NOT NULL,             creationTimestamp real NOT NULL,                           planId char(128) NOT NULL,                                 modelHandleId integer NOT NULL,                            serverIteration integer NOT NULL,                          FOREIGN KEY (modelHandleId) REFERENCES modelHandles (id)               ON DELETE CASCADE                                                  )
CREATE INDEX IF NOT EXISTS ix_trainingLog_planId_creationTimestamp             ON trainingLog (planId, creationTimestamp)
ALTER TABLE sessions ADD source blob
DELETE FROM receivedPlans
ALTER TABLE sessionsDomainIds ADD bundleIdentifier char(128)
ALTER TABLE sessionsItemIds ADD bundleIdentifier char(128)
ALTER TABLE modelHandles ADD sd_id integer
ALTER TABLE modelHandles ADD sd_name char(128)
ALTER TABLE modelHandles ADD sd_version char(128)
UPDATE modelHandles SET               sd_name = CASE                   WHEN name = 'FiM.phone' THEN 'SignificantPhoneNumber'                   WHEN name = 'dataDetectionSignificantPhrasePhoneLogistic' THEN 'SignificantPhoneNumber'                   WHEN name = 'SignificantPhoneNumber' THEN name                   WHEN name = 'dataDetectionSignificantPhraseAddressLogistic' THEN 'SignificantPostalAddress'                   WHEN name = 'SignificantPostalAddress' THEN name                   WHEN name = 'dataDetectionSignificantPhraseEmailLogistic' THEN 'SignificantEmailAddress'                   WHEN name = 'SignificantEmailAddress' THEN name                   WHEN name = 'selfIdentificationPhraseLogistic' THEN 'SelfIdentification'                   WHEN name = 'SelfId.Covariates' THEN 'SelfIdentification'                   WHEN name = 'SelfIdentification' THEN name                   WHEN name = 'STSQP' AND version = '1.2' THEN name                   ELSE NULL               END,               sd_version = CASE                   WHEN version = '1.1' THEN 'TW=12&NG=3&FV=1.1'                   WHEN version = 'TW=12&NG=3&FV=1.1' THEN version                   WHEN version = '1.2' THEN version                   ELSE NULL               END
CREATE TABLE IF NOT EXISTS sessionsDescriptors (                   id integer PRIMARY KEY AUTOINCREMENT NOT NULL,                   name char(128) NOT NULL,                   version char(128) NOT NULL,                   locale char(5) NOT NULL               )
CREATE UNIQUE INDEX IF NOT EXISTS ix_sessionsDescriptors_name_version_locale ON sessionsDescriptors (name, version, locale)
INSERT OR IGNORE INTO sessionsDescriptors(name,version,locale) SELECT sd_name,sd_version,locale FROM modelHandles
UPDATE modelHandles SET sd_id = (SELECT id FROM sessionsDescriptors WHERE name = sd_name AND version = sd_version)
CREATE TABLE IF NOT EXISTS sessions (                   id integer PRIMARY KEY AUTOINCREMENT NOT NULL,                   creationTimestamp real NOT NULL,                   sessionDescriptorId integer NOT NULL,                   label integer NOT NULL,                   covariatesLength integer NOT NULL,                   covariatesIndices blob,                   covariatesValues blob,                   isAppleInternal integer(1) NOT NULL DEFAULT 0,                   source blob,                   FOREIGN KEY (sessionDescriptorId) REFERENCES sessionsDescriptors (id) ON DELETE CASCADE               )
CREATE INDEX IF NOT EXISTS ix_sessions_sessionDescriptorId ON sessions (sessionDescriptorId ASC)
INSERT INTO sessions(id,creationTimestamp,sessionDescriptorId,label,covariatesLength,covariatesIndices,covariatesValues,isAppleInternal,source)                 SELECT s.id,creationTimestamp,mh.sd_id,label,covariatesLength,covariatesIndices,covariatesValues,isAppleInternal,source                 FROM sessions_old AS s JOIN modelHandles AS mh                 WHERE s.modelHandleId = mh.id AND mh.sd_id IS NOT NULL
CREATE TABLE IF NOT EXISTS trainingLog (                   id integer PRIMARY KEY AUTOINCREMENT NOT NULL,                   creationTimestamp real NOT NULL,                   planId char(128) NOT NULL,                   sessionDescriptorId integer NOT NULL,                   serverIteration integer NOT NULL,                   FOREIGN KEY (sessionDescriptorId) REFERENCES sessionsDescriptors (id) ON DELETE CASCADE               )
CREATE INDEX IF NOT EXISTS ix_trainingLog_planId_creationTimestamp ON trainingLog (planId, creationTimestamp)
CREATE INDEX IF NOT EXISTS ix_sessionsItemIds_bundleId_itemId ON sessionsItemIds (bundleIdentifier, itemIdentifier)
CREATE INDEX IF NOT EXISTS ix_sessionsItemIds_sessionId ON sessionsItemIds (sessionId)
CREATE INDEX IF NOT EXISTS ix_sessionsDomainIds_bundleId_domainId ON sessionsDomainIds (bundleIdentifier, domainIdentifier)
CREATE INDEX IF NOT EXISTS ix_sessionsDomainIds_sessionId ON sessionsDomainIds (sessionId)
DROP TABLE IF EXISTS sessions_old
DROP TABLE IF EXISTS modelHandles
DELETE FROM sessions WHERE id IN (SELECT sessions.id FROM sessions LEFT JOIN sessionsItemIds ON sessions.id = sessionsItemIds.sessionId WHERE itemIdentifier = '<hey@example.com>')
PRAGMA foreign_keys = OFF
DELETE FROM sessions WHERE sessionDescriptorId IN (SELECT id FROM sessionsDescriptors                 WHERE                    (name = "SignificantPhoneNumber" AND version LIKE "%1.1%")                OR (name = "SignificantPhoneNumber" AND version LIKE "%1.2%")                OR (name = "SignificantEmailAddress" AND version LIKE "%1.1%")                OR (name = "SignificantEmailAddress" AND version LIKE "%1.2%")                OR (name = "SignificantPostalAddress" AND version LIKE "%1.1%")                OR (name = "SignificantPostalAddress" AND version LIKE "%1.2%")                OR (name = "SelfIdentification" AND version LIKE "%1.1%")                OR (name = "STSQP")                )
ALTER TABLE sessionsItemIds ADD lastUsed real NOT NULL DEFAULT 0
DROP INDEX IF EXISTS ix_trainingLog_planId_creationTimestamp
CREATE TABLE IF NOT EXISTS lastFeaturizations (                   id integer PRIMARY KEY AUTOINCREMENT NOT NULL,                   sessionDescriptorId integer NOT NULL,                   transformer blob,                   FOREIGN KEY (sessionDescriptorId) REFERENCES sessionsDescriptors (id) ON DELETE CASCADE               )
CREATE INDEX IF NOT EXISTS ix_lastFeaturizations_sessionDescriptorId ON lastFeaturizations (sessionDescriptorId)
DELETE FROM sessions WHERE sessionDescriptorId IN (                     SELECT id FROM sessionsDescriptors                     WHERE version NOT LIKE "FV=%" AND version NOT LIKE "%&FV=%"               )
ALTER TABLE sessionsItemIds ADD timesAccessed integer NOT NULL DEFAULT 0
DELETE FROM sessionsDescriptors WHERE version NOT LIKE "FV=%" AND version NOT LIKE "%&FV=%"
DELETE FROM sessions WHERE id IN (SELECT sessionId FROM sessionsItemIds WHERE bundleIdentifier = "com.apple.iChat")
UPDATE sessions SET source = x''
@max.unsignedIntValue
CREATE TABLE sessionsDomainIds ( id integer PRIMARY KEY AUTOINCREMENT NOT NULL, sessionId integer NOT NULL, domainIdentifier char(128) NOT NULL, bundleIdentifier char(128), FOREIGN KEY (sessionId) REFERENCES sessions (id) ON DELETE CASCADE )
CREATE TABLE sessionsItemIds ( id integer PRIMARY KEY AUTOINCREMENT NOT NULL, sessionId integer NOT NULL, itemIdentifier char(128) NOT NULL, bundleIdentifier char(128), lastUsed real NOT NULL DEFAULT 0, timesAccessed integer NOT NULL DEFAULT 0, FOREIGN KEY (sessionId) REFERENCES sessions (id) ON DELETE CASCADE )
CREATE TABLE receivedPlans ( planId char(128) PRIMARY KEY NOT NULL, modificationTimestamp real NOT NULL, serializedPlan blob NOT NULL )
CREATE TABLE sessionsDescriptors ( id integer PRIMARY KEY AUTOINCREMENT NOT NULL, name char(128) NOT NULL, version char(128) NOT NULL, locale char(5) NOT NULL )
CREATE UNIQUE INDEX ix_sessionsDescriptors_name_version_locale ON sessionsDescriptors (name, version, locale)
CREATE TABLE sessions ( id integer PRIMARY KEY AUTOINCREMENT NOT NULL, creationTimestamp real NOT NULL, sessionDescriptorId integer NOT NULL, label integer NOT NULL, covariatesLength integer NOT NULL, covariatesIndices blob, covariatesValues blob, isAppleInternal integer(1) NOT NULL DEFAULT 0, source blob, FOREIGN KEY (sessionDescriptorId) REFERENCES sessionsDescriptors (id) ON DELETE CASCADE )
CREATE INDEX ix_sessions_sessionDescriptorId ON sessions (sessionDescriptorId ASC)
CREATE INDEX ix_sessionsItemIds_bundleId_itemId ON sessionsItemIds (bundleIdentifier, itemIdentifier)
CREATE INDEX ix_sessionsItemIds_sessionId ON sessionsItemIds (sessionId)
CREATE INDEX ix_sessionsDomainIds_bundleId_domainId ON sessionsDomainIds (bundleIdentifier, domainIdentifier)
CREATE INDEX ix_sessionsDomainIds_sessionId ON sessionsDomainIds (sessionId)
CREATE TABLE lastFeaturizations ( id integer PRIMARY KEY AUTOINCREMENT NOT NULL, sessionDescriptorId integer NOT NULL, transformer blob, FOREIGN KEY (sessionDescriptorId) REFERENCES sessionsDescriptors (id) ON DELETE CASCADE )
CREATE INDEX ix_lastFeaturizations_sessionDescriptorId ON lastFeaturizations (sessionDescriptorId)
SELECT id, covariatesValues FROM sessions
UPDATE sessions SET covariatesValues = :data WHERE id = :rowId
:data
:rowId
v16@?0@"_PASSqliteStatement"8
{_PASDBIterAction_=B}16@?0@"_PASSqliteStatement"8
PMLMutableDenseVectorAllocationFailure
Failed to allocate NSData.
count
PMLDenseVector.m
start >= 0 && start < self.count
end > 0 && end <= self.count
end >= start
other.count == self.count
Index %tu out of bounds (vector length: %tu)
v20@?0f8Q12
rmse
truePositives
trueNegatives
falsePositives
falseNegatives
positiveScores
negativeScores
secsToExecute
com.apple.proactive.fia.phone.en
com.apple.proactive.responses
QuickResponsesClassification
PMLSeparatedDPNoiseStrategy.m
Can't instantiate %@. Missing %@ dependency.
_Bool soft_PFLPrivatize(float *, size_t, const char *)
PFLPrivatize
void *PrivateFederatedLearningLibrary(void)
model
spotlightReference
isInternal
PMLSparseMatrix.m
matrix
Can not mark %lu x %lu matrix as symmetric
Invalid shape, all rows must be the same length (row %lu length: %lu, first row length: %lu)
malloc failed
v40@?0Q8Q16r^f24r^q32
unknown
PMLEspressoTrainingPlan.m
Session descriptor must be nonnull for PMLEspressoTrainingPlan initWithPlist
Noise strategy must be nonnull for PMLEspressoTrainingPlan initWithPlist
LABELS_TO_TRAIN_ON
SUMMABLE_METRICS_ONLY
Gradient contains %f at index %lu
Unable to find global variable named: %@
global
weight
bias
Unable to convert session batch data into espresso data provider
v40@?0Q8@"NSArray"16@"NSData"24^B32
B32@?0@"ETDataTensor"8@"NSString"16@"NSString"24
Unable to in place update gradient since number of starting and ending parameters don't match for tensor type %@ name %@
numberOfSamples
isSampled
accuracy
predictions
groundTruth
B32@?0Q8@"<ETDataProvider>"16@"<ETTaskContext>"24
<PMLEspressoTrainingPlan '%@'>
META_TRAINING_VARIABLES
ESPRESSO_TRAINING_VARIABLES
supervisionType
confidenceScore
PLAN_CLASSNAME
PLAN
PMLPlanSerialization.m
Invalid plan. Unknown class: %@
PML_ESPRESSO_TRAINING_NETWORK_PATH
v28@?0f8Q12Q20
support
d40@?0@"PMLModelWeights"8@"PMLSparseMatrix"16@"PMLModelRegressor"24^f32
f24@?0@"PMLSparseVector"8@"PMLModelWeights"16
@"PMLMutableDenseVector"24@?0@"PMLSparseMatrix"8@"PMLModelWeights"16
calculateAvgGradientForBatch
PMLMathFunctions.h
regularizationRate >= 0.0
l1Ratio >= 0.0 && l1Ratio <= 1.0
numberOfSamples > 0
numberOfDimensions > 0
s == SPARSE_SUCCESS
logisticBatch
PMLHashingVectorizer.m
buckets > 0
extraIdOptions < PMLHashingVectorizerIdOptionLimit
vectorizerStrategy < PMLHashingVectorizerStrategyLimit
vectorNormalization >= PMLVectorNormalizationNone && vectorNormalization < PMLVectorNormalizationLimit
(characterNGramRange.location && characterNGramRange.length) || (tokenNGramRange.location && tokenNGramRange.length)
vectorizerStrategy != PMLHashingVectorizerStrategyWordPiece || vocab != nil
v24@?0^q8^f16
_endId == 0
_startId == 0
BUCKET_SIZE
NGRAM_SIZE
CHARACTER_NGRAM_LOCATION
CHARACTER_NGRAM_LENGTH
CHARACTER_NORMALIZATION
TOKEN_NGRAM_LOCATION
TOKEN_NGRAM_LENGTH
TOKEN_NORMALIZATION
SHOULD_TOKENIZE_NEWLINES
ID_VECTOR_LENGTH
EXTRA_ID_OPTIONS
VECTORIZER_STRATEGY
VECTOR_NORMALIZATION
NON_WORD_TOKENS_LOCALE
size
PMLFidesTracker.m
Can't instantiate %@. Missing "planId" dependency.
com.apple.proactive
PMLDenseMatrix.m
PMLSessionDescriptor.m
%@-%@-%@
@8@?0
(^|&)FV=([0-9]+(.[0-9]+)?)($|&)
regex
Unexpected number of matches for %@; pattern: %@; descriptor: %@
Unexpected number of match ranges for %@; pattern: %@; descriptor: %@
Unexpected featureVersion extracted for %@; pattern: %@; descriptor: %@
%@_label%lu
_label[0-9]+
_label([0-9]+)
Handle %@ is not a sub-model handle.
NAME
VERSION
LOCALE
<%@ %@ %@ %@>
com.apple.proactive.PMLDESPlugin
PMLTraining.m
training.db
STSQP
ContactSharing
SignificantPhoneNumber
SignificantEmailAddress
SignificantPostalAddress
SignificantEmailAddressForIMessage
SignificantPostalAddressForIMessage
FirstPersonPhoneSharing
ThirdPersonPhoneSharing
FirstPersonEmailSharing
FirstPersonAddressSharing
ThirdPersonEmailSharing
ThirdPersonAddressSharing
SelfIdentification
SGTextMessageBirthdayCongratsModel
positivesCount
label%tu
v32@?0@"PMLSessionDescriptor"8@"NSSet"16^B24
modelName
modelVersion
modelLocale
sessionsCount
negativesCount
v24@?0@"NSUUID"8@"NSError"16
labeledStats
v16@?0@"NSError"8
v24@?0@"PMLSessionDescriptor"8^B16
isEspressoTraining
chunk
attachments
AWDProactiveModelFittingQuantizedSparseVector+PML.m
PMLProtoBufTracker.m
adapter
TRACKER_ADAPTER_CLASS
TRACKER_QUANTIZATION_BUCKETS
Can't instantiate %@. Unknown class: %@
dummy
returnValue
PMLDataChunk.m
chunks
mock-1.0-en
PMLWordPieceTokenizer.m
vocab
v36@?0I8^S12{_NSRange=QQ}20
[UNK]
unkToken != PMLWordPieceVocabNotFound
[CLS]
startId != PMLWordPieceVocabNotFound
[SEP]
endId != PMLWordPieceVocabNotFound
[PAD]
padId != PMLWordPieceVocabNotFound
batchSize
perLabelSupport
PML_ESPRESSO_INPUT_NAME
PML_ESPRESSO_INPUT_DIM
PML_ESPRESSO_OUTPUT_NAME
PML_ESPRESSO_TRUE_LABEL_NAME
PML_ESPRESSO_LOSS_VALUE_NAME
PML_ESPRESSO_TRAINING_OUTPUT_NAME
PML_ESPRESSO_TRAINING_CONTROL_VARIABLE_NAME
PML_ESPRESSO_INITIALIZER_NAME
PML_ESPRESSO_GLOBALS_TO_GET_GRADIENTS_FOR
PML_ESPRESSO_LAYER_WEIGHTS_TO_GET_GRADIENTS_FOR
PML_ESPRESSO_LAYER_BIASES_TO_GET_GRADIENTS_FOR
PMLEspressoTrainingVariables.m
Can't instantiate %@. Missing "%@" dependency.
evaluation
logRegWeights
logRegGradient
linRegFeatureMatrix
linRegObjectiveFeatures
PMLTrainingStoredSessionBatch.m
Covariates and outcomes need to have the same length, but got %lu and %d.
PMLLexicon.m
path
v16@?0^{_CFBurstTrie=}8
v32@?0@"NSString"8@"NSNumber"16^B24
PlanClass
NoiseStrategy
ProactiveMLErrorDomain
PMLLogRegEvaluationPlan.m
tracker
PMLEspressoDataProvider.m
Number of dimensions in rows data (%lu) number of labels (%lu)
The names of the input and trueLabel can not be the same: %s
Label value %f must be greater than 0
PMLAWDAvailableSessionsTracker.m
AWD metric query delegate can only be set once
v12@?0I8
Missing delegate to handle AWD metric request.
PMLSparseVector.m
numberOfNonZeroValues == 0 || (indices && values)
length>=numberOfNonZeroValues
v24@?0^v8Q16
Too big vector.
length >= _numberOfNonZeroValues
_length >= numberOfNonZeroValues
_sparseValues == NULL || _sparseValues != sparseValues
_sparseIndices == NULL || _sparseIndices != sparseIndices
_length == _numberOfNonZeroValues
maxVectorLength
v32@?0@"NSNumber"8@"NSNumber"16^B24
precision
CLASS_NAME
PMLPlistClassWrapper.m
plist
Invalid plan. class %@ doesn't conform to %@
PMLPassThroughTracker.m
buckets
scaleFactor
AWDWeightsMessage
results
AWDGradientMessage
Can't instantiate %@. Missing "buckets" dependency.
sparseFloatGradient
iteration
sparseQuantizedGradient
gradientScaleFactor
gradientL2norm
denseQuantizedGradient
Could not create espresso context
Could not create espresso plan
Could not add espresso network from file %@ with storage type %05x, status code %d
Could not declare espresso network input %@, status code %d
Could not declare espresso network output %@, status code %d
Could not build espresso plan, status code %d
Could not bind the input buffer to layer %@ in espresso plan during initialization, status code %d
Unable to get input shape to layer %@ in espresso plan during initialization, status code %d
Input layer %@ has rank %zu, shape %@, num parameters %tu
Could not bind the output buffer to layer %@ in espresso plan during initialization, status code %d
Unable to get output shape to layer %@ in espresso plan during initialization, status code %d
Output layer %@ has rank %zu, shape %@, num parameters %tu
Could not bind the input buffer to layer %@ in espresso plan, status code %d
Could not bind the output buffer to layer %@ in espresso plan, status code %d
Could not execute espresso plan, status code %d
Failed writing analytics log for data transparency. Skip upload
Sending %@ (size: %tu) to Parsec.
Unsupported proto buf message: %@
Stopped after iter %li with NAN error
Stopped after iter %li with DBL_MAX error
Stopped after iter %li with -DBL_MAX error
Stopped after iter %li with -INFINITY error
Stopped after iter %li with INFINITY error
Stopped after iter %li with perfect fit
Stopped after iter %li with loss %f
Label %@ not in sepcified list %@
Ignoring all zero row #%ld
Evaluating plan %@ (descriptor: %@, available %tu sessions)
Attempted to use PMLSeparatedDPNoiseStrategy with non-Fides tracker: %@.
Training model: %@ (available %lu sessions)
scaleAndAddNoiseToDenseVector failed
PMLLogRegTrainingPlan running with no noise strategy since pluginShouldAddNoiseAndEncryptResult set to false
Invalid session from db (row id %lu): covariatesIndices and covariatesValues must contain the same number of elements (expected bytes length in int/float ratio but got %lu and %lu).
Invalid session from db (row id %lu), covariatesLength has to be %lu, got %lu.
Failed to load sessions for model %@. Error: %@
PMLTrainingStore failed to count total sessions. Error: %@
PMLTrainingStore failed to delete unused sessions. Error: %@
PMLTrainingStore failed to delete over used sessions. Error: %@
PMLTrainingStore failed to count labeled sessions. Error: %@
PMLTrainingStore failed to delete sessions. Error: %@
PMLTrainingStore failed to delete sessions for bundleId=%@. Error: %@
PMLTrainingStore failed to delete sessions for for bundleId=%@ and itemId=%@. Error: %@
PMLTrainingStore failed to delete sessions for bundleId=%@ and domainId=%@. Error: %@
Row returned in sessionStats was null, continuing to iterate as best effort
Row in sessionStats contained unexpected null value, name %@, version %@, locale %@, continuing to iterate as best effort
Failed to load stats about sessions in db. Error: %@
Row returned in enumerateSessionDescriptorsUsingBlock was null, continuing to iterate as best effort
Row in enumerateSessionDescriptorsUsingBlock contained unexpected null value, name %@, version %@, locale %@, continuing to iterate as best effort
PMLTrainingStore notified of device lock state change to %d
Opening db %@.
PMLTrainingStore failed to open/initialize db.
Closing db %@.
PMLTrainingStore failed to enable foreign keys support.
PMLTraining db (%@) corrupted. Flushing.
%@ deallocating
PMLTrainingStore db failed to create new database with skip queries.
Future database version detected (%lu). Giving up on migration.
PMLTrainingStore db failed to migrate but migration is needed.
Migration encountered error during migration of %@: versions %lu, query: %@, error: %@
Row returned in lastTrainingFeaturizationForModelName was null, continuing to iterate as best effort
Row in sessionStats contained unexpected null value, version %@, continuing to iterate as best effort
Failed to load last training featurization in db. Error: %@
Error querying schema: %@
setMaxTimesAccessed should only be called for testing.
db: %@, isUnlocked: %d, isClassCLocked: %d
Invalid noiseMechanism, got: %lld
You must explicitly specify a noise mechanism.
PFLPrivatize call failed
Error extracting floats from sparse rows, status: %d
PMLEspressoTrainingPlan running with no noise strategy since pluginShouldAddNoiseAndEncryptResult set to false
Unable to create task definition, returning nil for PMLEspressoTrainingPlan
Unable to fetch parameters requested in weights and biases during validation, returning nil for PMLEspressoTrainingPlan: %@
Unable to successfully initialize model: %@
Unable to create task definition: %@
An error occured when attempting to get parameters for global variable: %@
An error occured when attempting to get weight for layer: %@
An error occured when attempting to get bias for layer: %@
Returning nil since unable to snapshot starting model parameters: %@
Training was unsuccessful: %@
Returning nil since no training was done
Returning nil and early from training since an error occurred during training
Returning nil since an error occurred when calculating the gradient: %@
Sampling probability is invalid value %f
Returning nil for training metrics since 0 points for ground truth %tu and / or training results %tu
Unable to get ground truth value for key validation: %@
Unable to get %@ key for ground truth: %@
Unable to get training result for key validation: %@
Unable to get %@ key for training result: %@
The number of ground truth values %tu does not match number of inference results %tu
Skipping row for metrics calculation
Unable to get ground truth at index %tu: %@
Unable to get inference results at index %tu: %@
Number of data points: %tu, Loss: %f, Accuracy: %f
Not adding loss or accuracy metrics as no rows were sampled
Unable to init PMLEspressoTrainingPlan because unable to init PMLMetaTrainingVariables
Unable to init PMLEspressoTrainingPlan because unable to init PMLEspressoTrainingVariables
Sending %@ (%d) to AWD.
PMLHashingVectorizer: unknown vectorizer strategy
Instantiating PMLTraining singleton.
PMLTraining failed to get a DESRecordStore for %@
Can't instantiate PMLTraining in %@, becacuse there is already an instance in %@.
Adding session for %@ (label: %tu, length: %tu)
No isMultiLabel information for %@
Failed to send session stats %@ to Fides. Error: %@
Successfully sent stats %@ to Fides.
Failed to delete existing records in DESRecordStore. Error: %@
Won't trim training db because the db is not open.
Trimming training db.
DONE limitSessionsByLastUsedTTL
DONE limitSessionsByMaxTimesAccessed
Removing training samples for %@
DONE limitSessionsWithSessionDescriptor:(%@) withLabel:nil
DONE limitSessionsForEachLabelWithSessionDescriptor:(%@)
Vacuuming training db.
We've been asked to defer. Skipping remaining work.
Error deserializing plan with exception %@
Training plan deserialized without exception but is nil
Ignoring synchronous plan %@ because the db is not open.
Running %@ synchronously
Plan %@ completed run. Result present? %d.
Unable to train with Espresso because recipe flag IS_ESPRESSO_TRAINING is not set
Unable to train because chunk path %@ or training network path %@ not found in %lu attachments
Unable to train because chunk file contents were empty
Sending weights for model %@
Sending gradient for model %@
Sending evaluation metrics for %@
Could not open chunk file at %@: %@
Chunk descriptor out of bounds: ends at %llu in data of length %llu
Could not parse chunk %u; bailing out
Error writing plist chunk: %@
Error loading plist chunk: %@
Unable to read Espresso network file at: %@
Returning nil for PMLLexicon since unable to initialize lexicon
Falling back to default system lexicon since lexicon at following path is invalid in existence: %@
Returning 0 for word id since token is not in lexicon: %@
Evaluating plan %@ (descriptor: %@, available %lu sessions)
Out of range index %lu requested from PMLEspressoDataProvider of size %lu
PMLSparseVector: unknown vector normalization method
PMLSparseVector: dimensions do not match between source sparse vector (%llu) and destination dense vector (%llu)
Error writing object to NSData: %@
Error reading object from NSData: %@
softlink:o:path:/System/Library/PrivateFrameworks/PrivateFederatedLearning.framework/PrivateFederatedLearning
PMLMultiLabelEspressoClassifier
PMLMultiLabelClassifierProtocol
NSObject
PMLInMemoryCachedStore
PMLPlanSimulator
PMLTrackerParsecAdapter
PMLTrackerAdapterProtocol
AWDProactiveModelFittingEvaluation
NSCopying
AWDProactiveModelFittingLogRegWeights
PMLGradientResults
PMLGradientSolver
PMLMultiLabelRegressionEvaluationPlan
PMLPlanProtocol
PMLPlistAndChunksSerializableProtocol
AWDProactiveModelFittingLinRegObjectiveFeatures
AWDProactiveModelFittingQuantizedSparseVector
AWDProactiveModelFittingModelInfoStatsPair
PMLLabelLimitRowId
PMLLogRegTrainingPlan
AWDProactiveModelFittingLinRegFeatureMatrix
PML_VisibleForTesting
AWDProactiveModelFittingSparseFloatVector
PMLLaplaceSampler
PMLSampler
PMLTrainingLogEntry
PMLTrainingStore
AWDProactiveModelFittingSparseFloatMatrix
PMLImmutableLogisticRegressionModel
PMLPlanDescriptor
AWDProactiveModelFittingQuantizedSparseMatrix
PMLMobileAssetParameterGetStrategy
PMLChunkToVec
PMLPlistAndChunksSerialization
PMLMultiLabelLogisticRegressionModel
PMLMultiLabelClassifierModelProtocol
PMLDiffPrivacyNoiseStrategy
PMLNoiseStrategy
PMLClassificationEvaluationMetrics
AWDProactiveModelFittingModelInfo
VisibleForTesting
PMLAWDEvaluationTrackerMock
PMLTrainingDatabaseMigrations
PMLDenseVector
NSMutableCopying
PMLMutableDenseVector
AWDProactiveModelFittingEvalMetrics
PMLSeparatedDPNoiseStrategy
PMLTrainingMock
PMLTrainingProtocol
PMLSparseMatrix
PMLAWDSessionTracker
PMLMetaTrainingVariables
PMLEspressoTrainingPlan
AWDProactiveModelFittingSession
PMLPlanWrapper
PMLPlanSerialization
PMLTrackerAWDAdapter
PMLNoNoiseStrategy
AWDProactiveModelFittingLabelSupportPair
PMLLogisticRegressionModel
PMLGaussianSampler
PMLModelRegressor
PMLMultiLabelE5Classifier
PMLHashingVectorizer
PMLTransformerProtocol
PMLJson
PMLFidesTracker
PMLLogRegTrackerProtocol
PMLEvaluationTrackerProtocol
PMLMultiLabelEvaluationTrackerProtocol
PMLAWDSessionTrackerMock
PMLDenseMatrix
PMLSessionDescriptor
PMLSpotlightReference
PMLTraining
PMLAWDMetricQueryDelegate
PMLProtoBufTracker
PMLMockPlan
AWDProactiveModelFittingQuantizedDenseVector
PMLDataChunk
PMLDataChunkRaw
PMLDataChunkPlist
PMLDataChunkDenseFloatVector
PMLDataChunkDenseDoubleVector
PMLAWDLogisticRegTrackerMock
PMLWordPieceTokenizer
AWDProactiveModelFittingMinibatchStats
PMLEspressoTrainingVariables
PMLModelWeights
AWDProactiveModelFittingParsecFeedbackEnvelope
PMLTrainingStoredSessionBatch
PMLTrackerMockAdapter
PMLLexicon
PMLLogRegEvaluationPlan
PMLAWDBaseTracker
PMLEspressoDataProvider
ETDataProvider
PMLWordPieceVocabTrie
PMLWordPieceVocabProtocol
PMLAWDAvailableSessionsTracker
PMLSparseVector
AWDProactiveModelFittingPrecisionAtKPair
PMLPlistClassWrapper
PMLPassThroughTracker
AWDProactiveModelFittingLogRegGradient
updateTable:dictionary:whereClause:onError:
removeAllObjects
numberWithBool:
writeTransaction:
userVersion
getIntegerForColumn:
bindNamedParam:toInt64:
path
initWithCapacity:
substringWithRange:
second
numberWithDouble:
bindNamedParam:toInteger:
removeIndex:
prepAndRunQuery:onPrep:onRow:onError:
getNSDataForColumn:
pathExtension
sendCustomFeedback:
setUserVersion:
numberWithFloat:
removeItemAtPath:error:
isReadableFileAtPath:
bindNamedParam:toNSArray:
currentHandler
vacuumWithShouldContinueBlock:error:
pattern
getNSStringForColumn:
mutableBytes
insertIntoTable:dictionary:
indexOfObject:
timeIntervalSince1970
numberWithInt:
bindNamedParam:toNSData:
mutableCopy
replaceBytesInRange:withBytes:
isUnlocked
intValue
exceptionWithName:reason:userInfo:
processInfo
numberWithInteger:
timeIntervalSinceNow
bindNamedParam:toNSString:
allKeys
initWithComponentId:
integerValue
closePermanently
processName
shape
boolValue
dictionary
numberWithLong:
allValues
initWithContentsOfFile:options:error:
valueForKeyPath:
sharedSession
initWithSeed:
getParameterOfType:forLayerNamed:error:
dataArray
allocWithZone:
numberWithLongLong:
valueWithPointer:
isBetaBuild
resetBytesInRange:
propertyListWithData:options:format:error:
numberWithUnsignedInt:
dictionaryWithObject:forKey:
appendBytes:length:
result
isClassCLocked
numberWithUnsignedInteger:
getTensorNamed:
dictionaryWithObjects:forKeys:
bytes
appendData:
compare:
isDNUEnabled
dataPointer
numberWithUnsignedLong:
cStringUsingEncoding:
dictionaryWithObjects:forKeys:count:
appendFormat:
next
componentsSeparatedByString:
dataWithBytesNoCopy:length:freeWhenDone:
numberWithUnsignedLongLong:
doTrainingOnData:forNumberOfEpochs:withCallback:error:
appendString:
initWithData:type:shape:strides:
handleFailureInFunction:file:lineNumber:description:
fileExistsAtPath:
nextDouble
objectAtIndex:
localeIdentifier
dataWithContentsOfFile:
handleFailureInMethod:object:file:lineNumber:description:
raise
pluginShouldAddNoiseAndEncryptResult:
truncateDatabaseAtPath:
pointerValue
dataWithContentsOfURL:
initWithFloat:
objectAtIndexedSubscript:
isEqualToData:
doubleValue
absoluteString
raise:format:
initWithObjects:forKeys:
fileSize
localeWithLocaleIdentifier:
containsObject:
tupleWithFirst:second:
filename
objectForKey:
dataWithPropertyList:format:options:error:
setMaxNumberOfElements:
arrayWithObjects:count:
date
null
randomlyNamedInMemoryPathWithBaseName:
sortDescriptorWithKey:ascending:comparator:
first
lock
objectForKeyedSubscript:
addEntriesFromDictionary:
enumerateIndexesUsingBlock:
initWithTrainingModelDefinition:forPlatform:error:
initWithBlock:
UTF8String
hasPrefix:
sortedArrayUsingDescriptors:
unlock
unregisterForLockStateChangeNotifications:
lastInsertRowId
runBlockWithTrie:
enumerateKeysAndObjectsUsingBlock:
rangeAtIndex:
addIndexesInRange:
longValue
defaultManager
lastObject
initWithTrainingNetworkPath:inferenceInputs:inferenceOutputs:trainingInputs:trainingOutputs:trainingControlVariableName:withInitializer:error:
initWithFormat:
setDictionary:
firstMatchInString:options:range:
firstObject
stringByAppendingPathComponent:
unsignedIntValue
readTransaction:
stringByAppendingString:
attributesOfItemAtPath:error:
numberOfMatchesInString:options:range:
floatValue
deleteAllSavedRecordsWithCompletion:
unsignedIntegerValue
corruptionMarkerPathForPath:
initWithType:data:
enumerateObjectsUsingBlock:
stringByReplacingMatchesInString:options:range:withTemplate:
addObject:
isEqualToString:
frailWriteTransaction:
initWithIndexesInRange:
saveRecordWithData:recordInfo:completion:
registerForLockStateChangeNotifications:
countByEnumeratingWithState:objects:count:
initWithBundleIdentifier:
unsignedLongLongValue
isInMemoryPath:
stringValue
getBytes:range:
initWithBytes:length:
writeToFile:atomically:
stringWithFormat:
setObject:atIndexedSubscript:
unsignedLongValue
numberOfRanges
isInternalBuild
initializeDatabase:withContentProtection:newDatabaseCreated:errorHandler:
initWithBytesNoCopy:length:deallocator:
registerQueriableMetric:callback:
setObject:forKey:
getCharacters:range:
regularExpressionWithPattern:options:error:
getInt64ForColumn:
matchesInString:options:range:
bindNamedParam:toDouble:
initWithLength:
stringWithUTF8String:
initWithBytesNoCopy:length:freeWhenDone:
errorWithDomain:code:userInfo:
setObject:forKeyedSubscript:
dealloc
init
makeStringForShape:
getNumParametersFromShape:rank:
classifierWithEspressoModelFile:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
outputDimension
predict:
initWithEspressoContext:espressoPlan:espressoModel:inputNumParameters:outputNumReplyClasses:
_espressoModel
_espressoPlan
_espressoContext
_outputNumReplyClasses
_inputNumParameters
initWithPath:
cachedStoreFromRealStore:sessionDescriptor:sessionsLimit:
initWithSessionBatch:
loadSessionsForModel:excludeItemIdsUsedWithin:limit:onlyAppleInternal:positiveLabel:skew:block:
_openDbIfUnlocked
_registerUnlockHandler
.cxx_destruct
_cachedSessions
simulatorWithDbPaths:sessionDescriptor:sessionsInBatch:maxSessionsLimit:seed:
initWithStores:sessionDescriptor:seed:
_randomStore
_randomStores:
runParallelPlansWithPlanId:tracker:noiseScaleFactors:noiseMinimumMagnitude:weights:serverIteration:useIntercept:noiseMechanism:usingRandomlySelected:
_stores
_sessionDescriptor
_rng
_writeDataForTransparency:
wrappedMessage:
postMetricId:message:
precisionAtKType
copyWithZone:
setTimestamp:
setHasTimestamp:
hasTimestamp
hasModelInfo
hasMinibatchStats
hasEvaluationMetrics
clearPrecisionAtKs
addPrecisionAtK:
precisionAtKsCount
precisionAtKAtIndex:
dictionaryRepresentation
readFrom:
writeTo:
copyTo:
mergeFrom:
timestamp
modelInfo
setModelInfo:
minibatchStats
setMinibatchStats:
evaluationMetrics
setEvaluationMetrics:
precisionAtKs
setPrecisionAtKs:
_timestamp
_evaluationMetrics
_minibatchStats
_modelInfo
_precisionAtKs
_has
TB,N
TQ,N,V_timestamp
TB,R,N
T@"AWDProactiveModelFittingModelInfo",&,N,V_modelInfo
T@"AWDProactiveModelFittingMinibatchStats",&,N,V_minibatchStats
T@"AWDProactiveModelFittingEvalMetrics",&,N,V_evaluationMetrics
T@"NSMutableArray",&,N,V_precisionAtKs
hasSparseFloatWeights
hasSparseQuantizedWeights
setWeightsScaleFactor:
setHasWeightsScaleFactor:
hasWeightsScaleFactor
setWeightsL2norm:
setHasWeightsL2norm:
hasWeightsL2norm
hasDenseQuantizedWeights
sparseFloatWeights
setSparseFloatWeights:
sparseQuantizedWeights
setSparseQuantizedWeights:
weightsScaleFactor
weightsL2norm
denseQuantizedWeights
setDenseQuantizedWeights:
_denseQuantizedWeights
_sparseFloatWeights
_sparseQuantizedWeights
_weightsL2norm
_weightsScaleFactor
T@"AWDProactiveModelFittingSparseFloatVector",&,N,V_sparseFloatWeights
T@"AWDProactiveModelFittingQuantizedSparseVector",&,N,V_sparseQuantizedWeights
Tf,N,V_weightsScaleFactor
Tf,N,V_weightsL2norm
T@"AWDProactiveModelFittingQuantizedDenseVector",&,N,V_denseQuantizedWeights
initWithGradient:loss:
gradient
loss
_gradient
_loss
T@"PMLMutableDenseVector",R,N,V_gradient
T@"NSNumber",R,N,V_loss
initWithLearningRate:minIterations:stoppingThreshold:weights:intercept:gradientCalculator:predictionCalculator:batchPredictionCalculator:
solve
computeAvgGradientWithIterations:
setCovariates:
solveWithAvgGradient:maxNumberOfIterations:
batchPredict:
solveForCovariates:objectives:
weights
setWeights:
covariates
objective
setObjective:
intercept
setIntercept:
_learningRate
_stoppingThreshold
_minIterations
_gradientCalculator
_predictionCalculator
_batchPredictionCalculator
_intercept
_weights
_covariates
_objective
T@"PMLModelWeights",&,N,V_weights
T@"PMLSparseMatrix",&,N,V_covariates
T@"PMLModelRegressor",&,N,V_objective
TB,N,V_intercept
toPlistWithChunks:
initWithPlist:chunks:context:
runWithError:
planId
T@"NSString",R,N
initWithPlanId:store:sessionDescriptor:maxSessionsLimit:sessionsInBatch:labelAndWeights:modelClassName:intercept:evaluationPoints:tracker:evaluationLevel:
_rankedLabelsForSession:
_precisionAtEvaluationPointsForSessions:
store
sessionDescriptor
maxSessionsLimit
sessionsInBatch
multiLabelRegressionModel
positiveLabels
weightsArray
evaluationPoints
tracker
evaluationLevel
_store
_maxSessionsLimit
_sessionsInBatch
_multiLabelRegressionModel
_positiveLabels
_weightsArray
_evaluationPoints
_tracker
_evaluationLevel
_planId
T@"PMLTrainingStore",R,N,V_store
T@"PMLSessionDescriptor",R,N,V_sessionDescriptor
TQ,R,N,V_maxSessionsLimit
TQ,R,N,V_sessionsInBatch
T@"<PMLMultiLabelClassifierModelProtocol>",R,N,V_multiLabelRegressionModel
T@"NSArray",R,N,V_positiveLabels
T@"NSArray",R,N,V_weightsArray
TB,R,N,V_intercept
T@"NSArray",R,N,V_evaluationPoints
T@"<PMLMultiLabelEvaluationTrackerProtocol>",R,N,V_tracker
TQ,R,N,V_evaluationLevel
T@"NSString",R,N,V_planId
hasSparseFloatFeatures
hasSparseQuantizedFeatures
setFeaturesScaleFactor:
setHasFeaturesScaleFactor:
hasFeaturesScaleFactor
setFeaturesL2norm:
setHasFeaturesL2norm:
hasFeaturesL2norm
sparseFloatFeatures
setSparseFloatFeatures:
sparseQuantizedFeatures
setSparseQuantizedFeatures:
featuresScaleFactor
featuresL2norm
_featuresL2norm
_featuresScaleFactor
_sparseFloatFeatures
_sparseQuantizedFeatures
T@"AWDProactiveModelFittingSparseFloatVector",&,N,V_sparseFloatFeatures
T@"AWDProactiveModelFittingQuantizedSparseVector",&,N,V_sparseQuantizedFeatures
Tf,N,V_featuresScaleFactor
Tf,N,V_featuresL2norm
indicesCount
indices
clearIndices
addIndices:
indicesAtIndex:
setIndices:count:
valuesCount
values
clearValues
addValues:
valuesAtIndex:
setValues:count:
setLength:
setHasLength:
hasLength
setMinValue:
setHasMinValue:
hasMinValue
setBucketSize:
setHasBucketSize:
hasBucketSize
length
minValue
bucketSize
_indices
_values
_bucketSize
_length
_minValue
TQ,R,N
T^I,R,N
TI,N,V_length
Tf,N,V_minValue
Tf,N,V_bucketSize
hasStats
stats
setStats:
_stats
T@"AWDProactiveModelFittingMinibatchStats",&,N,V_stats
labelLimitRowIdWithLabel:limit:rowId:
initWithLabel:limit:rowId:
isEqualToLabelLimitRowId:
label
limit
rowId
_label
_limit
_rowId
T@"NSString",R,N,V_label
Tq,R,N,V_limit
Tq,R,N,V_rowId
planWithStore:tracker:sessionDescriptor:arguments:
initWithStore:tracker:noiseStrategy:planId:sessionDescriptor:maxSessionsLimit:sessionsInBatch:currentServerIteration:currentModelWeights:localLearningRate:stoppingThreshold:localMinimumIterations:localGradientIterations:useOnlyAppleInternalSessions:skew:threshold:isMultiLabel:intercept:positiveLabel:evaluationLevel:reportScale:
evaluationMetricsForPredictions:objectives:predicate:start:
loadSessionsWithBlock:
normalizeRegressor:
currentServerIteration
currentModelWeights
localLearningRate
stoppingThreshold
localMinimumIterations
localGradientIterations
useOnlyAppleInternalSessions
isMultiLabel
positiveLabel
reportScale
_noiseStrategy
_currentServerIteration
_currentModelWeights
_localGradientIterations
_localLearningRate
_localMinimumIterations
_useOnlyAppleInternalSessions
_skew
_threshold
_isMultiLabel
_positiveLabel
_reportScale
T@"<PMLLogRegTrackerProtocol>",R,N,V_tracker
TQ,R,N,V_currentServerIteration
T@"PMLModelWeights",R,N,V_currentModelWeights
Tf,R,N,V_localLearningRate
Tf,R,N,V_stoppingThreshold
TQ,R,N,V_localMinimumIterations
TQ,R,N,V_localGradientIterations
TB,R,N,V_useOnlyAppleInternalSessions
TB,R,N,V_isMultiLabel
TQ,R,N,V_positiveLabel
TB,R,N,V_reportScale
hasSparseFloatFeatureMatrix
hasSparseQuantizedFeatureMatrix
setFeatureMatrixScaleFactor:
setHasFeatureMatrixScaleFactor:
hasFeatureMatrixScaleFactor
setFeatureMatrixL2norm:
setHasFeatureMatrixL2norm:
hasFeatureMatrixL2norm
sparseFloatFeatureMatrix
setSparseFloatFeatureMatrix:
sparseQuantizedFeatureMatrix
setSparseQuantizedFeatureMatrix:
featureMatrixScaleFactor
featureMatrixL2norm
_featureMatrixL2norm
_featureMatrixScaleFactor
_sparseFloatFeatureMatrix
_sparseQuantizedFeatureMatrix
T@"AWDProactiveModelFittingSparseFloatMatrix",&,N,V_sparseFloatFeatureMatrix
T@"AWDProactiveModelFittingQuantizedSparseMatrix",&,N,V_sparseQuantizedFeatureMatrix
Tf,N,V_featureMatrixScaleFactor
Tf,N,V_featureMatrixL2norm
modelInfoFromSessionDescriptor:
modelInfoFromPlanId:
hasWeights
T^Q,R,N
T^f,R,N
TQ,N,V_length
initWithMagnitude:
sample
initWithMagnitude:seed:
_magnitude
initWithTimestamp:serverIteration:
serverIteration
_serverIteration
Td,R,N,V_timestamp
TQ,R,N,V_serverIteration
_sessionDataToBatchWithNumberOfColumns:rowsData:labelsData:
_migrate:forStore:
migrate:to:forStore:
_runQueries:andUpdateVersionTo:inTransactionOnDb:forStore:
getSchema:
lastUsedTimestampLimit
setLastUsedTimestampLimit:
inMemoryStoreForTesting
initWithPath:allowSkipSchema:
storeSession:label:model:bundleId:domainId:itemIds:isAppleInternal:
loadDataForModel:excludeItemIdsUsedWithin:limit:onlyAppleInternal:positiveLabel:skew:block:
loadDataForModel:privacyBudgetRefreshPeriod:labels:batchSize:block:
loadSessionsForModel:privacyBudgetRefreshPeriod:labels:batchSize:block:
sessionDimensionsForModel:startingRowId:onlyAppleInternal:labelFilter:
_loadDataFromLabelAndTuples:model:numberOfRows:numberOfColumns:lastUsedMax:block:
_loadDataForModel:positiveRowId:negativeRowId:excludeItemIdsUsedWithin:limit:onlyAppleInternal:positiveLabel:skew:block:
_loadBatchForModel:privacyBudgetRefreshPeriod:labels:batchSize:block:
_loadDataForModel:privacyBudgetRefreshPeriod:labelAndStartRows:batchSize:supportPerLabel:block:
loadSessionsForModel:excludeItemIdsUsedWithin:limit:onlyAppleInternal:block:
limitSessionsForEachLabelWithSessionDescriptor:totalSessionLimit:
limitSessionsByLastUsedTTL:
limitSessionsByMaxTimesAccessed
limitSessionsWithSessionDescriptor:withLabel:limit:
deleteSessionsWithBundleId:
deleteSessionsWithBundleId:itemId:
deleteSessionsWithBundleId:domainId:
sessionStats
sessionStatsForSessionDescriptor:
enumerateSessionDescriptorsUsingBlock:
sessionDescriptorIdFor:
_unregisterUnlockHandler
_unsafeOpenDbIfUnlocked
_truncateDbIfCorrupted
vacuumDbWithDeferralBlock:
migrateTo:
lastTrainingFeaturizationForModelName:andLocale:
updateLastTrainingFeaturizationForModel:andData:
convertToBagOfIdsVectorForModel:
isDbOpen
setMaxTimesAccessed:
logDbNotOpenEvent
dbForTesting
createSnapshot:
storeSession:label:model:
loadSessionsForModel:excludeItemIdsUsedWithin:withSkew:andLimit:block:
numberOfRowsInTable:
closeDbForTesting
_dbPath
_lockStateNotificationToken
_allowSkipSchema
_maxTimesAccessed
columnIndicesCount
columnIndices
clearColumnIndices
addColumnIndices:
columnIndicesAtIndex:
setColumnIndices:count:
setColumnLength:
setHasColumnLength:
hasColumnLength
rowIndicesCount
rowIndices
clearRowIndices
addRowIndices:
rowIndicesAtIndex:
setRowIndices:count:
setRowLength:
setHasRowLength:
hasRowLength
columnLength
rowLength
_columnIndices
_rowIndices
_columnLength
_rowLength
TQ,N,V_columnLength
TQ,N,V_rowLength
initWithWeights:intercept:
initWithChunk:intercept:
initWithFloatsNoCopy:count:intercept:
toChunk
_backingObject
quantizedDenseVectorFromDenseVector:numberOfBuckets:
originalValueAtIndex:
isValidPlanId:
descriptorFromPlanId:
planIdFromString:
initWithName:version:locale:
name
version
locale
_name
_version
_locale
T@"NSString",R,N,V_name
T@"NSString",R,N,V_version
T@"NSString",R,N,V_locale
hasGradient
gradientValueAtIndex:
gradientLength
TI,N,V_columnLength
TI,N,V_rowLength
initFromDictionary:
toDictionary
toVec
migrateDenseDoubleVectorToDenseFloatVector:
initWithWeightsArray:andIntercept:
initWithModels:
serialize
_models
gaussianNoiseWithScaleFactor:minimumMagnitude:seed:
addNoiseToSparseVector:
addNoiseToSparseMatrix:
scaleAndAddNoiseToDenseVector:usingNorm:scaleFactor:
initWithMaxIterationCount:noiseScaleFactors:minimumMagnitude:seed:noiseMechanism:inplaceNorm:
initWithMaxIterationCount:noiseScaleFactors:minimumMagnitude:noiseMechanism:inplaceNorm:
samplerWithScaleFactorFor:usingNorm:
createDefaultSampler
createSamplerByName:
noiseScaleFactors
setNoiseScaleFactors:
minimumMagnitude
setMinimumMagnitude:
noiseMechanism
setNoiseMechanism:
_seed
_inplaceNorm
_maxIterations
_minimumMagnitude
_noiseScaleFactors
_noiseMechanism
T{?=ff},N,V_noiseScaleFactors
Tf,N,V_minimumMagnitude
Tq,N,V_noiseMechanism
precision:predictions:predicate:
recall:predictions:predicate:
f1Score:predictions:predicate:
truePositives:predictions:predicate:
falsePositives:predictions:predicate:
trueNegatives:predictions:predicate:
falseNegatives:predictions:predicate:
addScoresForOutcomes:predictions:predicate:metrics:
roundFloatToSigFigs:sigFigs:
setReportSamplingRate:
hasName
hasVersion
hasLocale
setName:
setVersion:
setLocale:
T@"NSString",&,N,V_name
T@"NSString",&,N,V_version
T@"NSString",&,N,V_locale
quantizedSparseMatrixFromSparseMatrix:numberOfBuckets:
originalValueAtRow:column:
precisionAtK:
initWithAdapter:modelInfo:
mockTracker
mockTrackerForPlanId:
initWithModel:
clearTrackedMessages
trackedEvaluations
_adapter
T@"NSArray",R,D,N
mockMigrationsByAddingQueries:
skipFromZeroSchema:
initWithMigrations:
maxVersion
migrations
_migrations
T@"NSDictionary",R,N,V_migrations
TI,R,D,N
denseVectorFromNumbers:
mutableCopyWithZone:
count
data
initWithCount:
initWithFloats:count:
initWithFloatsNoCopy:count:freeWhenDone:
initWithFloatsNoCopy:count:deallocator:
initWithData:
initWithNumbers:
sliceFrom:to:
vecByAppendingVec:
cosineDistanceFrom:
l1norm
l2norm
maxValue
density
enumerateValuesWithBlock:
enumerateNonZeroValuesWithBlock:
valueAt:
_data
Tr^f,R,N
T@"NSData",R,N
mutablePtr
initWithMutableData:
append:
append:count:
processValuesInPlaceWithBlock:
scaleInPlaceWithInversedFactor:
scaleInPlaceWithFactor:
sumInPlaceWithVector:
mutableData
_mutableData
T@"NSMutableData",R,N,V_mutableData
valueAtIndex:
sparseFloatVectorFromModelWeights:
sparseFloatVectorFromSparseVector:
evalMetricsWithRmse:f1:
evalMetricsWithRmse:f1:truePositives:trueNegatives:falsePositives:falseNegatives:
setRmse:
setHasRmse:
hasRmse
setF1:
setHasF1:
hasF1
setTruePositives:
setHasTruePositives:
hasTruePositives
setTrueNegatives:
setHasTrueNegatives:
hasTrueNegatives
setFalsePositives:
setHasFalsePositives:
hasFalsePositives
setFalseNegatives:
setHasFalseNegatives:
hasFalseNegatives
positiveScoresCount
positiveScores
clearPositiveScores
addPositiveScores:
positiveScoresAtIndex:
setPositiveScores:count:
negativeScoresCount
negativeScores
clearNegativeScores
addNegativeScores:
negativeScoresAtIndex:
setNegativeScores:count:
setSecsToExecute:
setHasSecsToExecute:
hasSecsToExecute
rmse
truePositives
trueNegatives
falsePositives
falseNegatives
secsToExecute
_negativeScores
_positiveScores
_falseNegatives
_falsePositives
_trueNegatives
_truePositives
_rmse
_secsToExecute
Tf,N,V_rmse
Tf,N,V_f1
TQ,N,V_truePositives
TQ,N,V_trueNegatives
TQ,N,V_falsePositives
TQ,N,V_falseNegatives
Tf,N,V_secsToExecute
getPFLIdentifier:
initWithPFLIdentifier:
_pflIdentifier
addSessionWithCovariates:label:sessionDescriptor:spotlightReference:isInternal:
deleteSessionsWithIdentifiers:bundleID:
deleteSessionsWithDomainIdentifiers:bundleID:
deleteSessionsWithBundleID:
trimDbWithDeferralBlock:
planReceivedWithPayload:error:
planReceivedWithRecipe:attachments:error:
updateSessionsAndLabelForModel:block:
clearCollectedSessions
collectedSessions
_internalCollectedSessions
_lastTrainingFeaturizations
_collectedSessions
T@"NSArray",R,N,V_collectedSessions
sparseMatrixWithNumberOfRows:numberOfColumns:
sparseMatrixFromNumbers:
initWithSparseMatrix:
numberOfRows
numberOfColumns
setMatrix:
setIsSymmetric:
valueAtRow:column:
_enumerateSparseRowsWithBlock:
enumerateNonZeroValuesForRow:withBlock:
matrixWithConstantColumn
isSymmetric
matrix
_isSymmetric
_matrix
TB,N,V_isSymmetric
T^{sparse_m_float=},N,V_matrix
trackerForModelName:modelVersion:
trackSessionWithCovariates:label:locale:
trackSessionWithCovariates:label:locale:supervisionType:
initWithPlanId:store:noiseStrategy:sessionDescriptor:maxSessionsToTrainOn:trainingSetSize:labelsToTrainOn:currentServerIteration:lossThresholdForStopping:epochsPerBatch:probThreshold:evaluationLevel:reportScale:summableMetricsOnly:
isEqualToMetaTrainingVariables:
noiseStrategy
maxSessionsToTrainOn
trainingSetSize
labelsToTrainOn
lossThresholdForStopping
epochsPerBatch
probThreshold
summableMetricsOnly
_maxSessionsToTrainOn
_trainingSetSize
_labelsToTrainOn
_lossThresholdForStopping
_epochsPerBatch
_probThreshold
_summableMetricsOnly
T@"<PMLNoiseStrategy>",R,N,V_noiseStrategy
TQ,R,N,V_maxSessionsToTrainOn
TQ,R,N,V_trainingSetSize
T@"NSArray",R,N,V_labelsToTrainOn
Td,R,N,V_lossThresholdForStopping
TQ,R,N,V_epochsPerBatch
Td,R,N,V_probThreshold
TB,R,N,V_summableMetricsOnly
argmax:
numberOfParametersInTensor:
isValidGradient:error:
_iterateModelParametersForTask:globalNames:weightNames:biasNames:block:
_getModelParametersForTask:globalNames:weightNames:biasNames:error:
_calculateGradientInPlaceForTask:startingParameters:globalNames:weightNames:biasNames:
_calculateTrainingMetricsWithSamplingProb:groundTruthProvider:predictionsProvider:trueLabelName:trainingOutputName:lossValueName:probThreshold:includeSummableOnly:
initWithMetaTrainingVariables:espressoTrainingVariables:
_newTaskForTraining
_updateResultsReferenceCallback:
isEqualToEspressoTrainingPlan:
_taskDefinition
_mtv
_etv
_trainingPredictions
_groundTruth
setLabel:
setHasLabel:
hasLabel
setSupervisionType:
setHasSupervisionType:
hasSupervisionType
setConfidenceScore:
setHasConfidenceScore:
hasConfidenceScore
supervisionType
confidenceScore
_supervisionType
_confidenceScore
TQ,N,V_label
TQ,N,V_supervisionType
Tf,N,V_confidenceScore
initWithPlan:
plan
_plan
T@"<PMLPlanProtocol>",R,N,V_plan
planFromData:withStore:
planFromData:store:trainingNetworkPath:
planFromData:withArgs:
serializePlan:
sparseFloatMatrixFromDenseMatrix:
sparseFloatMatrixFromSparseMatrix:
setSupport:
setHasSupport:
hasSupport
support
_support
Tf,N,V_support
solverWithWeights:
solverWithWeights:andIntercept:
solverWithWeights:andIntercept:learningRate:minIterations:stoppingThreshold:
solverWithWeights:andIntercept:learningRate:minIterations:stoppingThreshold:l2RegularizationRate:
solverWithWeights:andIntercept:learningRate:minIterations:stoppingThreshold:regularizationStrategy:regularizationRate:l1Ratio:
withWeights:
withWeights:andIntercept:
initWithSolver:
_solver
modelRegressorFromFloats:
modelRegressorFromFloat:
regressorVectorFrom:
denseVector
initModelRegressorFromFloats:
initWithRegressorFromFloat:
regressorFor:
inverseValues
Ti,R,N
classifierWithE5File:
withBucketSize:andNgramOrder:
withBucketSize:andCharNgramOrder:
withBucketSize:andNgrams:
withBucketSize:ngrams:localeForNonwordTokens:tokenizeNewlines:
withBucketSize:characterNGramRange:tokenNGramRange:shouldNormalizeTokens:shouldNormalizeCharacters:localeForNonwordTokens:tokenizeNewlines:idVectorLength:extraIdOptions:vectorizerStrategy:vectorNormalization:
withBucketSize:characterNGramRange:tokenNGramRange:shouldNormalizeTokens:shouldNormalizeCharacters:localeForNonwordTokens:tokenizeNewlines:idVectorLength:extraIdOptions:vectorizerStrategy:vectorNormalization:vocab:
withBucketSize:characterNGramRange:tokenNGramRange:shouldNormalizeTokens:shouldNormalizeCharacters:localeForNonwordTokens:tokenizeNewlines:
withBucketSize:characterNGramRange:tokenNGramRange:shouldNormalizeTokens:shouldNormalizeCharacters:
transform:
initWithBucketSize:ngrams:localeForNonwordTokens:tokenizeNewlines:
initWithBucketSize:characterNGramRange:tokenNGramRange:shouldNormalizeTokens:shouldNormalizeCharacters:localeForNonwordTokens:tokenizeNewlines:idVectorLength:extraIdOptions:vectorizerStrategy:vectorNormalization:vocab:
setVectorizerNormalization:
transformWithFrequency:shouldDecrement:
transformSequentialNGrams:
transformBagOfIds:shouldDecrement:
transformBatch:
transformWithWordPiece:
isEqualToHashingVectorizer:
_buckets
_characterNGramRange
_tokenNGramRange
_shouldNormalizeTokens
_shouldNormalizeCharacters
_localeForNonwordTokens
_tokenizeNewlines
_idVectorLength
_extraIdOptions
_vectorizerStrategy
_vectorNormalization
_paddingId
_endId
_startId
_vocab
trackWeights:scaleFactor:minibatchStats:evaluationMetrics:
trackGradient:scaleFactor:minibatchStats:evaluationMetrics:serverIteration:
trackEvaluationMetrics:minibatchStats:
trackPrecisionAtK:
trackPrecisionAtK:minibatchStats:
initWithPlanId:
clearTrackedSessions
trackedSessions
_internalTrackedSessions
_trackedSessions
T@"NSArray",R,N,V_trackedSessions
denseMatrixFromData:numberOfRows:numberOfColumns:
denseMatrixFromNumbers:
initWithData:numberOfRows:numberOfColumns:
_numberOfRows
_numberOfColumns
TQ,R,N,V_numberOfRows
TQ,R,N,V_numberOfColumns
descriptorForName:version:locale:
_parseFeatureVersion:descriptor:
featureVersion
subSessionDescriptorForLabel:
baseSessionDescriptor
isSubSessionDescriptor
subSessionLabel
_featureVersion
referenceWithBundleId:domainId:itemIds:
initWithBundleId:domainId:itemIds:
itemIdentifiers
domainIdentifier
bundleIdentifier
_itemIdentifiers
_domainIdentifier
_bundleIdentifier
T@"NSArray",R,N,V_itemIdentifiers
T@"NSString",R,N,V_domainIdentifier
T@"NSString",R,N,V_bundleIdentifier
sharedSingletonWithDirectory:
availableSessionsStatsReportedToAWD
initWithStore:fidesStore:availableSessionsTracker:
isMultiLabelModel:
sendSessionStatsToFides
_sendStatsToFidesForModel:sessionCount:positivesCount:negativesCount:support:
_sendStatsToFidesForMultiLabelModel:sessionCount:labeledStats:
_deleteAllSavedRecordsFromFidesStoreSync
_trainWithRecipe:chunkData:args:error:
_fidesStore
_availableSessionsTracker
quantizedSparseVectorFromDenseVector:numberOfBuckets:
quantizedSparseVectorFromSparseVector:numberOfBuckets:
trackerForPlanId:
awdTrackerForPlanId:
parsecTrackerForPlanId:
messageForWeights:scaleFactor:minibatchStats:evaluationMetrics:modelInfo:numberOfBuckets:
messageForGradient:scaleFactor:minibatchStats:evaluationMetrics:serverIteration:modelInfo:numberOfBuckets:
initWithAdapter:modelInfo:quantizationBuckets:
adapter
quantizationNumberOfBuckets
_quantizationNumberOfBuckets
T@"<PMLTrackerAdapterProtocol>",R,N,V_adapter
T@"AWDProactiveModelFittingModelInfo",R,N,V_modelInfo
TQ,R,N,V_quantizationNumberOfBuckets
lastDeserializedPlanWithId:
setLastDeserializedPlanWithId:toPlan:
clearLastDeserializedPlans
lastDeserializedPlansMap
initWithPlanId:store:version:returningAfterRunning:
initWithPlanId:version:returningAfterRunning:
initWithPlanId:version:
initWithVersion:
initWithPlanId:store:
didRun
_returnValue
_didRun
TQ,V_version
TB,R,N,V_didRun
dataChunkType
chunkOfType:data:superdata:
chunksFromFileAtPath:
chunksFromData:
serializeChunks:
setSuperdata:
_backingData
_superdata
chunkWithData:
chunkWithPlist:
plist
_plist
_parsed
T@,R,N
chunkWithVector:count:
vector
Tr^d,R,N
trackedGradients
trackedWeights
initWithVocab:
tokenize:withLength:
toTokens:fromInput:withLength:
tokenizeToIds:fromString:tokens:tokenCount:length:
startId
endId
padId
perLabelSupportType
setBatchSize:
setHasBatchSize:
hasBatchSize
clearPerLabelSupports
addPerLabelSupport:
perLabelSupportsCount
perLabelSupportAtIndex:
batchSize
perLabelSupports
setPerLabelSupports:
_batchSize
_perLabelSupports
TQ,N,V_batchSize
T@"NSMutableArray",&,N,V_perLabelSupports
initWithTrainingNetworkPath:inputName:inputDim:outputName:trueLabelName:lossValueName:trainingOutputName:trainingControlVariableName:initializerName:globalsToGetGradientsFor:layerWeightsToGetGradientsFor:layerBiasesToGetGradientsFor:
isEqualToEspressoTrainingVariables:
trainingNetworkPath
inputName
inputDim
outputName
trueLabelName
lossValueName
trainingOutputName
trainingControlVariableName
initializerName
globalsToGetGradientsFor
layerWeightsToGetGradientsFor
layerBiasesToGetGradientsFor
_initializedWithNSData
_trainingNetworkPath
_inputName
_inputDim
_outputName
_trueLabelName
_lossValueName
_trainingOutputName
_trainingControlVariableName
_initializerName
_globalsToGetGradientsFor
_layerWeightsToGetGradientsFor
_layerBiasesToGetGradientsFor
T@"NSURL",R,N,V_trainingNetworkPath
T@"NSString",R,N,V_inputName
TQ,R,N,V_inputDim
T@"NSString",R,N,V_outputName
T@"NSString",R,N,V_trueLabelName
T@"NSString",R,N,V_lossValueName
T@"NSString",R,N,V_trainingOutputName
T@"NSString",R,N,V_trainingControlVariableName
T@"NSString",R,N,V_initializerName
T@"NSArray",R,N,V_globalsToGetGradientsFor
T@"NSArray",R,N,V_layerWeightsToGetGradientsFor
T@"NSArray",R,N,V_layerBiasesToGetGradientsFor
modelWeightsFromFloats:
modelWeightsOfLength:rng:
modelWeightsOfLength:
modelWeightsOfLength:rngSeed:
zeroWeightsOfLength:
constWeightsOfLength:value:
weightsFromNumbers:
initModelWeightsFromFloats:
asMutableDenseVector
weightsByAppendingWeights:
copy
hasEvaluation
hasLogRegWeights
hasLogRegGradient
hasLinRegFeatureMatrix
hasLinRegObjectiveFeatures
evaluation
setEvaluation:
logRegWeights
setLogRegWeights:
logRegGradient
setLogRegGradient:
linRegFeatureMatrix
setLinRegFeatureMatrix:
linRegObjectiveFeatures
setLinRegObjectiveFeatures:
_evaluation
_linRegFeatureMatrix
_linRegObjectiveFeatures
_logRegGradient
_logRegWeights
T@"AWDProactiveModelFittingEvaluation",&,N,V_evaluation
T@"AWDProactiveModelFittingLogRegWeights",&,N,V_logRegWeights
T@"AWDProactiveModelFittingLogRegGradient",&,N,V_logRegGradient
T@"AWDProactiveModelFittingLinRegFeatureMatrix",&,N,V_linRegFeatureMatrix
T@"AWDProactiveModelFittingLinRegObjectiveFeatures",&,N,V_linRegObjectiveFeatures
hasFeatureMatrix
featureMatrixValueAtRow:column:
initWithCovariates:outcomes:
minibatchStatsForPositiveLabel:
minibatchStatsForPositiveLabels:
outcomes
_outcomes
_count
T@"PMLSparseMatrix",R,N,V_covariates
T@"PMLModelRegressor",R,N,V_outcomes
TQ,R,N,V_count
clearAllTrackedMessages
trackedMessagesByClass:
_trackedMessages
serializeLexiconToFile:tokenToWordIDDict:
getWordIDforToken:
getTotalEntries
_lexicon
initWithStore:tracker:planId:sessionDescriptor:maxSessionsLimit:sessionsInBatch:currentModelWeights:intercept:skew:threshold:isMultiLabel:positiveLabel:evaluationLevel:
T@"<PMLEvaluationTrackerProtocol>",R,N,V_tracker
trackerForModelName:modelVersion:modelLocale:
dataPointAtIndex:error:
numberOfDataPoints
prepareForEpoch
initWithRowsData:labelsData:inputName:inputDim:trueLabelName:
clearBuffers
_rowsData
_labelsData
_numberOfDataPoints
_inputBuffer
_trueLabelBuffer
hasObjectiveFeatures
featuresValueAtIndex:
featuresLength
payloadForString:
initWithAWDConnection:
setAWDMetricQueryDelegate:
reportStatsToAWD
_delegate
_awdServerConnection
sparseVectorFromDense:length:
sparseVectorFromDense:
sparseVectorEmptyWithLength:
sparseVectorWithLength:numberOfNonZeroValues:block:
sparseVectorWithLength:numberOfNonZeroValues:isSparseIndexInt64:sparseIndices:sparseValues:toDenseValues:withLength:
sparseVectorFromNumbers:
sparseVectorFromNumbers:indices:length:
initWithLength:numberOfNonZeroValues:indicesData:valuesData:
initWithLength:numberOfNonZeroValues:indices:values:
indicesData
valuesData
indicesAsUInt16Data
quantizedValuesAsUInt8DataWithMin:max:
maxAbsValue
applyOneHotNormalization
scaleWithVectorNormalization:
setNumberOfNonZeroValues:
setSparseValues:
setSparseIndices:
processNonZeroValuesInPlaceWithBlock:
sparseVectorToDense:length:
convertToBagOfIds
addStartId:endId:paddingId:withMaxVectorLength:
vectorWithConstantColumn
numberOfNonZeroValues
sparseIndices
sparseValues
_numberOfNonZeroValues
_sparseIndices
_sparseValues
TQ,N,V_numberOfNonZeroValues
T^q,N,V_sparseIndices
T^f,N,V_sparseValues
TQ,R,N,V_length
combineWithStats:
statsWithSize:support:
supportForLabel:
statsWithPerLabelCounts:
setK:
setHasK:
hasK
setPrecision:
setHasPrecision:
hasPrecision
precision
_precision
TQ,N,V_k
Tf,N,V_precision
initWithClassNameKey:
writeToPlistWithObject:andChunks:
readObjectWithPlist:chunks:context:
writeToDataWithObject:andChunks:
readObjectWithData:chunks:context:
_classNameKey
initWithPlanId:numberOfBuckets:
_results
_resultsLock
hasSparseFloatGradient
setIteration:
setHasIteration:
hasIteration
hasSparseQuantizedGradient
setGradientScaleFactor:
setHasGradientScaleFactor:
hasGradientScaleFactor
setGradientL2norm:
setHasGradientL2norm:
hasGradientL2norm
hasDenseQuantizedGradient
sparseFloatGradient
setSparseFloatGradient:
iteration
sparseQuantizedGradient
setSparseQuantizedGradient:
gradientScaleFactor
gradientL2norm
denseQuantizedGradient
setDenseQuantizedGradient:
_iteration
_denseQuantizedGradient
_gradientL2norm
_gradientScaleFactor
_sparseFloatGradient
_sparseQuantizedGradient
T@"AWDProactiveModelFittingSparseFloatVector",&,N,V_sparseFloatGradient
TQ,N,V_iteration
T@"AWDProactiveModelFittingQuantizedSparseVector",&,N,V_sparseQuantizedGradient
Tf,N,V_gradientScaleFactor
Tf,N,V_gradientL2norm
T@"AWDProactiveModelFittingQuantizedDenseVector",&,N,V_denseQuantizedGradient
@24@0:8[10Q]16
Q32@0:8[10Q]16Q24
@24@0:8@16
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"NSArray"24@0:8@"PMLSparseVector"16
v16@0:8
@64@0:8^v16^v24{?=^vi}32Q48Q56
{?="plan"^v"network_index"i}
@40@0:8@16@24Q32
v68@0:8@16d24Q32B40Q44d52@?60
@"PMLTrainingStoredSessionBatch"
@56@0:8@16@24Q32Q40Q48
@24@0:8Q16
@80@0:8@16@24{?=ff}32f40@44Q52B60q64Q72
@"NSArray"
@"PMLSessionDescriptor"
@"_PASRng"
v28@0:8I16@20
v28@0:8I16@"PBCodable"20
@24@0:8^{_NSZone=}16
v24@0:8Q16
v20@0:8B16
v24@0:8@16
@"AWDProactiveModelFittingEvalMetrics"
@"AWDProactiveModelFittingMinibatchStats"
@"AWDProactiveModelFittingModelInfo"
@"NSMutableArray"
{?="timestamp"b1}
v20@0:8f16
f16@0:8
@"AWDProactiveModelFittingQuantizedDenseVector"
@"AWDProactiveModelFittingSparseFloatVector"
@"AWDProactiveModelFittingQuantizedSparseVector"
{?="timestamp"b1"weightsL2norm"b1"weightsScaleFactor"b1}
@32@0:8@16@24
@"PMLMutableDenseVector"
@"NSNumber"
@68@0:8f16Q20f28@32B40@?44@?52@?60
@32@0:8^f16Q24
f24@0:8@16
v32@0:8@16@24
@"PMLModelWeights"
@"PMLSparseMatrix"
@"PMLModelRegressor"
@40@0:8@16@24@32
@24@0:8@"NSMutableArray"16
@40@0:8@16@"NSArray"24@"NSDictionary"32
@24@0:8^@16
@"NSDictionary"24@0:8^@16
@100@0:8@16@24@32Q40Q48@56@64B72@76@84Q92
@"PMLTrainingStore"
@"<PMLMultiLabelClassifierModelProtocol>"
@"<PMLMultiLabelEvaluationTrackerProtocol>"
@"NSString"
{?="timestamp"b1"featuresL2norm"b1"featuresScaleFactor"b1}
^I16@0:8
v20@0:8I16
I24@0:8Q16
v32@0:8^I16Q24
I16@0:8
{?="list"^I"count"Q"size"Q}
{?="bucketSize"b1"length"b1"minValue"b1}
@40@0:8@16q24q32
q16@0:8
@48@0:8@16@24@32@40
@160@0:8@16@24@32@40@48Q56Q64Q72@80f88f92Q96Q104B112d116d124B132B136Q140Q148B156
@48@0:8@16@24@?32@40
v24@0:8@?16
@"<PMLLogRegTrackerProtocol>"
@"<PMLNoiseStrategy>"
@"AWDProactiveModelFittingSparseFloatMatrix"
@"AWDProactiveModelFittingQuantizedSparseMatrix"
{?="timestamp"b1"featureMatrixL2norm"b1"featureMatrixScaleFactor"b1}
^Q16@0:8
Q24@0:8Q16
v32@0:8^Q16Q24
^f16@0:8
f24@0:8Q16
v32@0:8^f16Q24
{?="list"^Q"count"Q"size"Q}
{?="list"^f"count"Q"size"Q}
{?="length"b1}
@20@0:8f16
@28@0:8f16Q20
{?="s"[2Q]}
@32@0:8d16Q24
d16@0:8
@40@0:8Q16@24@32
q32@0:8@16@24
q40@0:8@16@24@32
B44@0:8@16I24@28@36
@24@0:8^Q16
v24@0:8d16
@28@0:8@16B24
v68@0:8@16q24@32@40@48@56B64
v56@0:8@16d24@32Q40@?48
@44@0:8@16Q24B32@36
v64@0:8@16@24Q32Q40d48@?56
v84@0:8@16Q24Q32d40Q48B56Q60d68@?76
v64@0:8@16d24@32Q40Q48@?56
v52@0:8@16d24Q32B40@?44
v32@0:8@16Q24
v40@0:8@16@24Q32
Q24@0:8@16
q24@0:8@16
v40@0:8@16q24@32
v52@0:8@16d24d32i40@?44
@"_PASSqliteDatabase"
{?="columnLength"b1"rowLength"b1}
@32@0:8r^f16i24B28
@32@0:8@16Q24
{?="bucketSize"b1"columnLength"b1"minValue"b1"rowLength"b1}
@28@0:8@"NSArray"16B24
@28@0:8f16f20i24
B36@0:8@16B24^f28
v24@0:8@"PMLSparseVector"16
v24@0:8@"PMLSparseMatrix"16
B36@0:8@"PMLMutableDenseVector"16B24^f28
@48@0:8i16{?=ff}20f28i32q36B44
@44@0:8i16{?=ff}20f28q32B40
{_PMLPreNoiseScaleFactorAndNoiseSampler=@f}28@0:8@16B24
{?=ff}16@0:8
v24@0:8{?=ff}16
v24@0:8q16
{?="gaussianScaleFactor"f"laplaceScaleFactor"f}
f40@0:8@16@24@?32
Q40@0:8@16@24@?32
v48@0:8@16@24@?32@40
f24@0:8f16i20
f32@0:8Q16Q24
@"PMLTrackerMockAdapter"
@24@0:8^I16
@"NSDictionary"
r^f16@0:8
@32@0:8r^f16Q24
@36@0:8^f16Q24B32
@40@0:8^f16Q24@?32
@24@0:8i16i20
@"NSMutableData"
v32@0:8r^f16Q24
@24@0:8f16f20
@56@0:8f16f20Q24Q32Q40Q48
{?="falseNegatives"b1"falsePositives"b1"trueNegatives"b1"truePositives"b1"f1"b1"rmse"b1"secsToExecute"b1}
@24@0:8r*16
v52@0:8@16q24@32@40B48
@32@0:8@16^@24
@40@0:8@16@24^@32
v52@0:8@"PMLSparseVector"16q24@"PMLSessionDescriptor"32@"PMLSpotlightReference"40B48
v32@0:8@"NSArray"16@"NSString"24
v24@0:8@"NSString"16
v24@0:8@?<B@?>16
@"NSDictionary"32@0:8@"NSData"16^@24
@"NSDictionary"40@0:8@"NSDictionary"16@"NSArray"24^@32
v32@0:8@16@?24
@"NSMutableDictionary"
@32@0:8Q16Q24
@24@0:8^{sparse_m_float=}16
v24@0:8^{sparse_m_float=}16
v32@0:8Q16@?24
^{sparse_m_float=}16@0:8
^{sparse_m_float=}
v40@0:8@16Q24@32
v48@0:8@16Q24@32Q40
@120@0:8@16@24@32@40Q48Q56@64Q72d80Q88d96Q104B112B116
i24@0:8@16
B32@0:8@16^@24
@56@0:8@16@24@32@40@?48
@56@0:8@16@24@32@40^@48
@56@0:8@16@24@32@40@48
@76@0:8d16@24@32@40@48@56d64B72
@?24@0:8@16
@"ETTaskDefinition"
@"PMLMetaTrainingVariables"
@"PMLEspressoTrainingVariables"
@"<ETDataProvider>"
{?="label"b1"supervisionType"b1"timestamp"b1"confidenceScore"b1}
@"<PMLPlanProtocol>"
{?="label"b1"support"b1}
@44@0:8@16B24f28Q32f40
@48@0:8@16B24f28Q32f40f44
@60@0:8@16B24f28Q32f40Q44f52f56
@"PMLGradientSolver"
@20@0:8i16
i16@0:8
@"PMLDenseVector"
@36@0:8i16i20@24B32
@104@0:8i16{_NSRange=QQ}20{_NSRange=QQ}36B52B56@60B68Q72Q80Q88q96
@112@0:8i16{_NSRange=QQ}20{_NSRange=QQ}36B52B56@60B68Q72Q80Q88q96@104
@72@0:8i16{_NSRange=QQ}20{_NSRange=QQ}36B52B56@60B68
@60@0:8i16{_NSRange=QQ}20{_NSRange=QQ}36B52B56
{_NSRange="location"Q"length"Q}
@"NSLocale"
@"<PMLWordPieceVocabProtocol>"
@44@0:8@16f24@28@36
@52@0:8@16f24@28@36Q44
@"NSDictionary"44@0:8@"PMLDenseVector"16f24@"AWDProactiveModelFittingMinibatchStats"28@"AWDProactiveModelFittingEvalMetrics"36
@"NSDictionary"52@0:8@"PMLDenseVector"16f24@"AWDProactiveModelFittingMinibatchStats"28@"AWDProactiveModelFittingEvalMetrics"36Q44
@"NSDictionary"32@0:8@"AWDProactiveModelFittingEvalMetrics"16@"AWDProactiveModelFittingMinibatchStats"24
@"NSDictionary"24@0:8@"NSDictionary"16
@"NSDictionary"32@0:8@"NSDictionary"16@"AWDProactiveModelFittingMinibatchStats"24
@40@0:8@16Q24Q32
f32@0:8@16@24
@"_PASLazyResult"
v52@0:8@16Q24Q32Q40f48
@48@0:8@16@24@32^@40
@"DESRecordStore"
@"PMLAWDAvailableSessionsTracker"
@60@0:8@16f24@28@36@44Q52
@68@0:8@16f24@28@36Q44@52Q60
@"<PMLTrackerAdapterProtocol>"
@44@0:8@16@24Q32B40
@36@0:8@16Q24B32
{?="bucketSize"b1"minValue"b1}
@36@0:8I16@20@28
@"NSData"
@28@0:8r^f16i24
@28@0:8r^d16i24
r^d16@0:8
i40@0:8^{_NSRange=QQ}16@24Q32
i52@0:8^f16@24^{_NSRange=QQ}32i40Q44
{?="batchSize"b1"support"b1}
@112@0:8@16@24Q32@40@48@56@64@72@80@88@96@104
@"NSURL"
@28@0:8i16@20
@28@0:8i16Q20
@24@0:8i16f20
@"AWDProactiveModelFittingEvaluation"
@"AWDProactiveModelFittingLinRegFeatureMatrix"
@"AWDProactiveModelFittingLinRegObjectiveFeatures"
@"AWDProactiveModelFittingLogRegGradient"
@"AWDProactiveModelFittingLogRegWeights"
@24@0:8#16
B32@0:8@16@24
@"_PASCFBurstTrie"
@112@0:8@16@24@32@40Q48Q56@64B72d76d84B92Q96Q104
@"<PMLEvaluationTrackerProtocol>"
@32@0:8Q16^@24
@"NSDictionary"32@0:8Q16^@24
@56@0:8@16@24@32Q40@48
I24@0:8@16
I24@0:8@"NSString"16
@"<PMLAWDMetricQueryDelegate>"
@"AWDServerConnection"
@40@0:8Q16Q24@?32
v68@0:8Q16Q24B32r^v36r^f44^f52Q60
@48@0:8Q16Q24@32@40
@48@0:8Q16Q24^q32^f40
v24@0:8^f16
v24@0:8^q16
v48@0:8q16q24q32Q40
^q16@0:8
@28@0:8Q16f24
{?="k"b1"precision"b1}
@"NSLock"
{?="iteration"b1"timestamp"b1"gradientL2norm"b1"gradientScaleFactor"b1}
