@(#)PROGRAM:ProactiveML  PROJECT:Suggestions-1115.515
Could not bind the input buffer to layer %@ in espresso plan, status code %d
Could not bind the output buffer to layer %@ in espresso plan, status code %d
Could not execute espresso plan, status code %d
Could not create espresso context
Could not create espresso plan
Could not add espresso network from file %@ with storage type %05x, status code %d
Could not declare espresso network input %@, status code %d
Could not declare espresso network output %@, status code %d
Could not build espresso plan, status code %d
Could not bind the input buffer to layer %@ in espresso plan during initialization, status code %d
Unable to get input shape to layer %@ in espresso plan during initialization, status code %d
Input layer %@ has rank %zu, shape %@, num parameters %tu
Could not bind the output buffer to layer %@ in espresso plan during initialization, status code %d
Unable to get output shape to layer %@ in espresso plan during initialization, status code %d
Output layer %@ has rank %zu, shape %@, num parameters %tu
Failed writing analytics log for data transparency. Skip upload
Sending %@ (size: %tu) to Parsec.
Unsupported proto buf message: %@
Stopped after iter %li with NAN error
Stopped after iter %li with DBL_MAX error
Stopped after iter %li with -DBL_MAX error
Stopped after iter %li with -INFINITY error
Stopped after iter %li with INFINITY error
Stopped after iter %li with perfect fit
Stopped after iter %li with loss %f
Evaluating plan %@ (descriptor: %@, available %tu sessions)
Label %@ not in sepcified list %@
Ignoring all zero row #%ld
[refeaturization]: same session descriptor, no need for refeaturization
[refeaturization]: new featureVersion is lower than last saved one in DB (new: %@, db: %@)
[refeaturization]: save lastFeaturization %@.
[refeaturization]: sessionDescriptor (old: %@, new: %@), start refeaturization.
[refeaturization]: invalid session descriptors setup (old: %@, new: %@)
[refeaturization]: only one of transformer and refeaturizationDescriptors is specified.
Attempted to use PMLNoNoiseStrategy on a production device.
Attempted to use PMLSeparatedDPNoiseStrategy with non-Fides tracker: %@.
Training model: %@ (available %lu sessions)
scaleAndAddNoiseToDenseVector failed
[refeaturization]: Failed to recover source field, old data? Ignore.
db: %@, isUnlocked: %d, isClassCLocked: %d
No source recoverer set.
setMaxTimesAccessed should only be called for testing.
Error querying schema: %@
Failed to load last training featurization in db. Error: %@
Row returned in lastTrainingFeaturizationForModelName was null, continuing to iterate as best effort
Row in sessionStats contained unexpected null value, version %@, continuing to iterate as best effort
Failed to load sessions for model %@. Error: %@
Failed to vacuum training db: %@
%@ deallocating
PMLTraining db (%@) corrupted. Flushing.
Opening db %@.
PMLTrainingStore failed to open/initialize db.
Closing db %@.
PMLTrainingStore failed to enable foreign keys support.
PMLTrainingStore notified of device lock state change to %d
Row returned in enumerateSessionDescriptorsUsingBlock was null, continuing to iterate as best effort
Row in enumerateSessionDescriptorsUsingBlock contained unexpected null value, name %@, version %@, locale %@, continuing to iterate as best effort
Failed to load stats about sessions in db. Error: %@
Row returned in sessionStats was null, continuing to iterate as best effort
Row in sessionStats contained unexpected null value, name %@, version %@, locale %@, continuing to iterate as best effort
PMLTrainingStore failed to delete sessions for bundleId=%@ and domainId=%@. Error: %@
PMLTrainingStore failed to delete sessions for for bundleId=%@ and itemId=%@. Error: %@
PMLTrainingStore failed to delete sessions for bundleId=%@. Error: %@
PMLTrainingStore failed to delete sessions. Error: %@
PMLTrainingStore failed to count labeled sessions. Error: %@
PMLTrainingStore failed to delete over used sessions. Error: %@
PMLTrainingStore failed to delete unused sessions. Error: %@
PMLTrainingStore failed to count total sessions. Error: %@
Invalid session from db (row id %lu): covariatesIndices and covariatesValues must contain the same number of elements (expected bytes length in int/float ratio but got %lu and %lu).
Invalid session from db (row id %lu), covariatesLength has to be %lu, got %lu.
Migration encountered error during migration of %@: versions %lu, query: %@, error: %@
Future database version detected (%lu). Giving up on migration.
PMLTrainingStore db failed to migrate but migration is needed.
PMLTrainingStore db failed to create new database with skip queries.
You must explicitly specify a noise mechanism.
Invalid noiseMechanism, got: %lld
PFLPrivatize call failed
Failed to soft-link PrivateFederatedLearning: %s
Error extracting floats from sparse rows, status: %d
Unable to init PMLEspressoTrainingPlan because unable to init PMLMetaTrainingVariables
Unable to init PMLEspressoTrainingPlan because unable to init PMLEspressoTrainingVariables
Returning nil since unable to snapshot starting model parameters: %@
Returning nil since no training was done
Returning nil and early from training since an error occurred during training
Returning nil since an error occurred when calculating the gradient: %@
Training was unsuccessful: %@
Unable to successfully initialize model: %@
Unable to create task definition: %@
Unable to create task definition, returning nil for PMLEspressoTrainingPlan
Unable to fetch parameters requested in weights and biases during validation, returning nil for PMLEspressoTrainingPlan: %@
Sampling probability is invalid value %f
Returning nil for training metrics since 0 points for ground truth %tu and / or training results %tu
Unable to get ground truth value for key validation: %@
Unable to get %@ key for ground truth: %@
Unable to get training result for key validation: %@
Unable to get %@ key for training result: %@
The number of ground truth values %tu does not match number of inference results %tu
Skipping row for metrics calculation
Unable to get ground truth at index %tu: %@
Unable to get inference results at index %tu: %@
Retuning nil for metrics so no rows were sampled
Number of data points: %tu, Loss: %f, Accuracy: %f
An error occured when attempting to get parameters for global variable: %@
An error occured when attempting to get weight for layer: %@
An error occured when attempting to get bias for layer: %@
Sending %@ (%d) to AWD.
Unable to train with Espresso because recipe flag IS_ESPRESSO_TRAINING is not set
Unable to train because chunk path %@ or training network path %@ not found in %lu attachments
Unable to train because chunk file contents were empty
Training plan deserialized without exception but is nil
Error deserializing plan with exception %@
Ignoring synchronous plan %@ because the db is not open.
Running %@ synchronously
Plan %@ completed run. Result present? %d.
Won't trim training db because the db is not open.
Trimming training db.
DONE limitSessionsByLastUsedTTL
DONE limitSessionsByMaxTimesAccessed
Vacuuming training db.
We've been asked to defer. Skipping remaining work.
Removing training samples for %@
DONE limitSessionsWithSessionDescriptor:(%@) withLabel:nil
DONE limitSessionsForEachLabelWithSessionDescriptor:(%@)
Failed to delete existing records in DESRecordStore. Error: %@
Failed to send session stats %@ to Fides. Error: %@
Successfully sent stats %@ to Fides.
No isMultiLabel information for %@
Adding session for %@ (label: %tu, length: %tu)
Instantiating PMLTraining singleton.
PMLTraining failed to get a DESRecordStore for %@
Can't instantiate PMLTraining in %@, becacuse there is already an instance in %@.
Sending evaluation metrics for %@
Sending gradient for model %@
Sending weights for model %@
Chunk descriptor out of bounds: ends at %llu in data of length %llu
Could not parse chunk %u; bailing out
Could not open chunk file at %@: %@
Error loading plist chunk: %@
Error writing plist chunk: %@
Unable to read Espresso network file at: %@
Returning 0 for word id since token is not in lexicon: %@
Falling back to default system lexicon since lexicon at following path is invalid in existence: %@
Returning nil for PMLLexicon since unable to initialize lexicon
Evaluating plan %@ (descriptor: %@, available %lu sessions)
Out of range index %lu requested from PMLEspressoDataProvider of size %lu
Error reading object from NSData: %@
Error writing object to NSData: %@
outputLabels
inputSequence
 %zu
Couldn't load sessions for %@
PMLPlanSimulator.m
v16@?0Q8
Can't instantiate simulator, no db at %@
Multiple batches not supported in simulation.
Can't instantiate simulator, need at least one db file.
Unsupported proto buf message: %@
precisionAtK
evaluationMetrics
minibatchStats
modelInfo
timestamp
%@ %@
denseQuantizedWeights
weightsL2norm
weightsScaleFactor
sparseQuantizedWeights
sparseFloatWeights
Invalid covariates, length: %tu but model weights length: %d
PMLGradientSolver.m
Covariates must have the same column-length as weights. Got covariates with %tu columns but weights of length %d
batchPredictionCalculator
predictionCalculator
gradientCalculator
weights
Invalid parameter not satisfying: %@
EVALUATION_LEVEL
planId
TRACKER
Can't instantiate %@. Unknown tracker class: %@
TRACKER_TYPE
EVALUATION_POINTS
INTERCEPT
MULTI_LABEL_REGRESSION_MODEL_TYPE
v32@?0@"NSNumber"8Q16^B24
WEIGHTS_ARRAY
POSITIVE_LABELS
SESSIONS_IN_BATCH
SESSIONS_LIMIT
SESSIONS_MODEL_HANDLE
PLAN_ID
Can't instantiate %@. Missing "store" dependency.
PMLMultiLabelRegressionEvaluationPlan.m
TRAINING_STORE
v32@?0@"PMLModelWeights"8Q16^B24
q24@?0@8@16
Can't instantiate %@. Unknown model class: %@
Invalid planId. Must be <name>-<version>-<locale> but got %@
featuresL2norm
featuresScaleFactor
sparseQuantizedFeatures
sparseFloatFeatures
bucketSize
minValue
length
values
indices
idx (%tu) is out of range (%tu)
stats
rowId >= 0
limit >= 0
label
PMLLabelLimitRowId.m
REPORT_SCALE
POSITIVE_LABEL
IS_MULTI_LABEL
THRESHOLD
SKEW
ONLY_INTERNAL_SESSIONS
GRADIENT_ITERATIONS
MIN_ITERATIONS
STOPPING_THRESHOLD
LEARNING_RATE
SERVER_ITERATION
REFEATURIZATION_DESCRIPTORS
TRANSFORMER
WEIGHTS
NOISE_STRATEGY
PFL_ID
PMLSeparatedDPNoiseStrategy
PMLDiffPrivacyNoiseStrategy
PMLNoNoiseStrategy
NOISE_STRATEGY_TYPE
PMLLogRegTrainingPlan.m
BEFORE_NOISE_SCALING
IS_SYNCHRONOUS
plan
locale
version
name
v24@?0@"PMLTrainingStoredSessionBatch"8^B16
B12@?0f8
Cannot train model with covariates of length %tu but model weights of length %d (planid = %@)
v32@?0q8@"NSData"16@?<v@?q@"PMLSparseVector"@"PMLSessionDescriptor">24
refeaturize_block_invoke
/Library/Caches/com.apple.xbs/Sources/Suggestions_Sim/Suggestions-1115.515/ProactiveML/Training/Plans/PMLLogRegTrainingPlan.m
[newVector isKindOfClass:[PMLSparseVector class]]
<%@ %@>
positiveLabel
refeaturizationDescriptors
transformer
maxSessionsLimit
sessionsInBatch
useOnlyAppleInternalSessions
reportScale
localGradientIterations
localMinimumIterations
stoppingThreshold
localLearningRate
generateWeightsOfLength
intercept
serverIteration
FiM_logreg-1.0-en
noiseStrategy
featureMatrixL2norm
featureMatrixScaleFactor
sparseQuantizedFeatureMatrix
sparseFloatFeatureMatrix
SELECT count(*) FROM 
test
{_PASDBIterAction_=B}16@?0@"NSError"8
CREATE TABLE integrityCheck
SELECT sql FROM sqlite_master WHERE sql IS NOT NULL AND tbl_name NOT LIKE 'sqlite_%' 
v8@?0
[ ]{2,}
sessionDescriptorId = %lu
lastFeaturizations
sessionDescriptorId
:name
:locale
SELECT sd.id FROM sessionsDescriptors sd CROSS JOIN lastFeaturizations lf ON lf.sessionDescriptorId = sd.id WHERE sd.name = :name AND sd.locale = :locale
SELECT sd.version, lf.transformer FROM sessionsDescriptors sd CROSS JOIN lastFeaturizations lf ON lf.sessionDescriptorId = sd.id WHERE sd.name = :name AND sd.locale = :locale
v32@?0q8@"PMLSparseVector"16@"PMLSessionDescriptor"24
sessions
rowId = %lu
covariatesValues
covariatesIndices
covariatesLength
:version
SELECT id, label, covariatesLength, covariatesIndices, covariatesValues, source FROM sessions WHERE sessionDescriptorId = (SELECT id FROM sessionsDescriptors WHERE name = :name AND version = :version AND locale = :locale) 
VACUUM
PRAGMA foreign_keys = ON
v12@?0i8
!_lockStateNotificationToken
PMLTrainingStore.m
sessionsDescriptors
SELECT id FROM sessionsDescriptors WHERE name = :name AND version = :version AND locale = :locale
SELECT name, version, locale FROM sessionsDescriptors
:timesUsedMax
SELECT mh.name, mh.version, mh.locale, s.label, count(*) FROM sessions s INNER JOIN sessionsDescriptors mh ON s.sessionDescriptorId = mh.id INNER JOIN sessionsItemIds sii ON s.id = sii.sessionId WHERE sii.timesAccessed < :timesUsedMax GROUP BY s.sessionDescriptorId, s.label ORDER BY s.sessionDescriptorId, s.label
:bundleIdentifier
:domainIdentifier
DELETE FROM sessions WHERE id IN (SELECT sessionId FROM sessionsDomainIds WHERE bundleIdentifier = :bundleIdentifier AND domainIdentifier = :domainIdentifier  UNION ALL SELECT sessionId FROM sessionsDomainIds WHERE bundleIdentifier = :bundleIdentifier AND domainIdentifier >= :domainIdentifier || '.' AND domainIdentifier < :domainIdentifier || '/')
:itemIdentifier
DELETE FROM sessions WHERE id IN (SELECT sessionId FROM sessionsItemIds WHERE bundleIdentifier = :bundleIdentifier AND itemIdentifier = :itemIdentifier)
DELETE FROM sessions WHERE id IN (SELECT sessionId FROM sessionsItemIds WHERE bundleIdentifier = :bundleIdentifier)
:label
:limit
DELETE FROM sessions WHERE id IN (   SELECT id FROM sessions   WHERE %@   UNLIKELY(sessionDescriptorId = (SELECT id FROM sessionsDescriptors WHERE name = :name AND version = :version AND locale = :locale))   ORDER BY RANDOM() LIMIT :limit )
SELECT count(*) FROM sessions WHERE %@ UNLIKELY(sessionDescriptorId = (SELECT id FROM sessionsDescriptors WHERE name = :name AND version = :version AND locale = :locale))
label = :label AND
:maxTimesAccessed
DELETE FROM sessions WHERE (id in (SELECT sessionId from sessionsItemIds WHERE timesAccessed >= :maxTimesAccessed))
:lastUsedExpirationDate
DELETE FROM sessions WHERE creationTimestamp < :lastUsedExpirationDate AND (id in (SELECT sessionId from sessionsItemIds WHERE lastUsed < :lastUsedExpirationDate))
SELECT DISTINCT label FROM sessions WHERE UNLIKELY(sessionDescriptorId = (SELECT id FROM sessionsDescriptors WHERE name = :name AND version = :version AND locale = :locale))
SELECT count(*) FROM sessions WHERE sessionDescriptorId = (SELECT id FROM sessionsDescriptors WHERE name = :name AND version = :version AND locale = :locale) 
v48@?0Q8@"NSArray"16@"NSData"24@"NSDictionary"32^B40
numberOfRows
numberOfColumns
AND label = %lu AND sessions.id in (SELECT sessionId from sessionsItemIds WHERE lastUsed < %f AND timesAccessed < %lu) 
Invalid session from db (row id %lu): idx %d out of bounds [0, %lu).
Invalid session from db (row id %lu), covariatesLength has to be %lu, got %lu.
Invalid session from db (row id %lu): covariatesIndices and covariatesValues must contain the same number of elements (expected bytes length in int/float ratio but got %lu and %lu).
sessionsItemIds
sessionId = %ld
timesAccessed
lastUsed
:lastUsedMax
:labels
SELECT sessions.id, sessions.label, sessions.covariatesLength, sessions.covariatesIndices, sessions.covariatesValues, sessionsItemIds.timesAccessed FROM sessions JOIN sessionsItemIds ON sessions.id = sessionsItemIds.sessionId AND sessions.sessionDescriptorId = (SELECT id FROM sessionsDescriptors WHERE name = :name AND version = :version AND locale = :locale) AND sessionsItemIds.lastUsed <= :lastUsedMax AND sessionsItemIds.timesAccessed < :timesUsedMax AND sessions.label IN _pas_nsarray(:labels) ORDER BY RANDOM() limit :limit
AND sessions.label = 0 AND sessions.id in (SELECT sessionId from sessionsItemIds WHERE lastUsed < %f AND timesAccessed < %lu) 
AND sessions.label = %lu AND sessions.id in (SELECT sessionId from sessionsItemIds WHERE lastUsed < %f AND timesAccessed < %lu) 
v32@?0@"NSNumber"8@"PMLLabelLimitRowId"16^B24
Read label %lu while specified %@. Matcher: %@
SELECT sessions.id, sessions.label, sessions.covariatesLength, sessions.covariatesIndices, sessions.covariatesValues, sessionsItemIds.timesAccessed FROM sessions JOIN sessionsItemIds ON sessions.id = sessionsItemIds.sessionId AND sessions.sessionDescriptorId = (SELECT id FROM sessionsDescriptors WHERE name = :name AND version = :version AND locale = :locale) AND sessionsItemIds.lastUsed <= :lastUsedMax AND sessionsItemIds.timesAccessed < :timesUsedMax AND sessions.id > :rowId %@ ORDER BY sessions.id limit :limit
SELECT covariatesLength, COUNT(*) FROM sessions WHERE sessionDescriptorId = (SELECT id FROM sessionsDescriptors WHERE name = :name AND version = :version AND locale = :locale) AND id > :rowId %@ %@ ORDER BY id
AND isAppleInternal = 1 
v56@?0Q8@"NSArray"16@"NSData"24Q32Q40^B48
itemIdentifier
sessionsDomainIds
domainIdentifier
bundleIdentifier
sessionId
isAppleInternal
creationTimestamp
itemIds
bundleId
sessionDescriptor
source
covariates
training_sessions
Process name %@ is not python
python
training_db_schema
B8@?0
migrationFunction
Number of labels %lu does not match number of rows specified %lu
rowLength
rowIndices
columnLength
columnIndices
PMLImmutableLogisticRegressionModel.m
Too big vector (length: %tu)
AWDProactiveModelFittingQuantizedDenseVector+PML.m
PMLPlanDescriptor.m
-[PMLModelWeights(PMLPlistAndChunksSerialization) initWithPlist:chunks:context:]
/Library/Caches/com.apple.xbs/Sources/Suggestions_Sim/Suggestions-1115.515/ProactiveML/MobileAsset/PMLDictionaryParameters.m
[__expr isKindOfClass:[NSNumber class]]
[__expr isKindOfClass:[PMLDataChunkDenseFloatVector class]]
SHAPE
VALUES
-[PMLModelWeights(PMLMobileAssetParameterGetStrategy) initFromDictionary:]
weightArray.count == [shapeArray[0] unsignedIntegerValue]
-[PMLModelRegressor(PMLPlistAndChunksSerialization) initWithPlist:chunks:context:]
-[PMLModelRegressor(PMLMobileAssetParameterGetStrategy) initFromDictionary:]
regressorArray.count == [shapeArray[0] unsignedIntegerValue]
-[PMLImmutableLogisticRegressionModel(PMLPlistAndChunksSerialization) initWithPlist:chunks:context:]
MULTI_LABEL_REGRESSION_MODELS
LEXICON_PATH
MAX_TOKEN_LENGTH
FEATURE_VECTOR_LENGTH
MAX_TOKEN_NGRAM_LENGTH
CHARACTER_NGRAM_LENGTH
CHARACTER_NGRAM_LOCATION
BUCKET_SIZE
malloc failed
SELF != ''
<%@ gaussianScaleFactor:%0.2f laplaceScaleFactor:%0.2f minMagnitude:%0.2f>
INPLACE_NORM
NOISE_MECHANISM_ENUM_VALUE
NOISE_STRATEGY_MINIMUM_MAGNITUDE
LAPLACE_NOISE_SCALE
GAUSSIAN_NOISE_SCALE
NOISE_STRATEGY_MAX_ITERATIONS
NOISE_SAMPLER
NOISE_STRATEGY_SCALE
Invalid noise mechanism value: %lli
You must explicitly specify a noise mechanism.
v24@?0Q8^B16
f20@?0f8Q12
Invalid noiseMechanism, got: %lld
PMLClassificationEvaluationMetrics.m
com.apple.suggestions.suggestd
Too big matrix (cols: %tu)
Too big matrix (rows: %tu)
AWDProactiveModelFittingQuantizedSparseMatrix+PML.m
foo-1.0-en
@max.unsignedIntValue
UPDATE sessions SET source = x''
DELETE FROM sessions WHERE id IN (SELECT sessionId FROM sessionsItemIds WHERE bundleIdentifier = "com.apple.iChat")
DELETE FROM sessionsDescriptors WHERE version NOT LIKE "FV=%" AND version NOT LIKE "%&FV=%"
ALTER TABLE sessionsItemIds ADD timesAccessed integer NOT NULL DEFAULT 0
DELETE FROM sessions WHERE sessionDescriptorId IN (                     SELECT id FROM sessionsDescriptors                     WHERE version NOT LIKE "FV=%" AND version NOT LIKE "%&FV=%"               )
CREATE INDEX IF NOT EXISTS ix_lastFeaturizations_sessionDescriptorId ON lastFeaturizations (sessionDescriptorId)
CREATE TABLE IF NOT EXISTS lastFeaturizations (                   id integer PRIMARY KEY AUTOINCREMENT NOT NULL,                   sessionDescriptorId integer NOT NULL,                   transformer blob,                   FOREIGN KEY (sessionDescriptorId) REFERENCES sessionsDescriptors (id) ON DELETE CASCADE               )
DROP INDEX IF EXISTS ix_trainingLog_planId_creationTimestamp
DROP TABLE trainingLog
ALTER TABLE sessionsItemIds ADD lastUsed real NOT NULL DEFAULT 0
DELETE FROM sessions WHERE sessionDescriptorId IN (SELECT id FROM sessionsDescriptors                 WHERE                    (name = "SignificantPhoneNumber" AND version LIKE "%1.1%")                OR (name = "SignificantPhoneNumber" AND version LIKE "%1.2%")                OR (name = "SignificantEmailAddress" AND version LIKE "%1.1%")                OR (name = "SignificantEmailAddress" AND version LIKE "%1.2%")                OR (name = "SignificantPostalAddress" AND version LIKE "%1.1%")                OR (name = "SignificantPostalAddress" AND version LIKE "%1.2%")                OR (name = "SelfIdentification" AND version LIKE "%1.1%")                OR (name = "STSQP")                )
PRAGMA foreign_keys = OFF
DELETE FROM sessions WHERE id IN (SELECT sessions.id FROM sessions LEFT JOIN sessionsItemIds ON sessions.id = sessionsItemIds.sessionId WHERE itemIdentifier = '<hey@example.com>')
DROP TABLE IF EXISTS modelHandles
DROP TABLE IF EXISTS sessions_old
CREATE INDEX IF NOT EXISTS ix_sessionsDomainIds_sessionId ON sessionsDomainIds (sessionId)
CREATE INDEX IF NOT EXISTS ix_sessionsDomainIds_bundleId_domainId ON sessionsDomainIds (bundleIdentifier, domainIdentifier)
CREATE INDEX IF NOT EXISTS ix_sessionsItemIds_sessionId ON sessionsItemIds (sessionId)
CREATE INDEX IF NOT EXISTS ix_sessionsItemIds_bundleId_itemId ON sessionsItemIds (bundleIdentifier, itemIdentifier)
CREATE INDEX IF NOT EXISTS ix_trainingLog_planId_creationTimestamp ON trainingLog (planId, creationTimestamp)
CREATE TABLE IF NOT EXISTS trainingLog (                   id integer PRIMARY KEY AUTOINCREMENT NOT NULL,                   creationTimestamp real NOT NULL,                   planId char(128) NOT NULL,                   sessionDescriptorId integer NOT NULL,                   serverIteration integer NOT NULL,                   FOREIGN KEY (sessionDescriptorId) REFERENCES sessionsDescriptors (id) ON DELETE CASCADE               )
INSERT INTO sessions(id,creationTimestamp,sessionDescriptorId,label,covariatesLength,covariatesIndices,covariatesValues,isAppleInternal,source)                 SELECT s.id,creationTimestamp,mh.sd_id,label,covariatesLength,covariatesIndices,covariatesValues,isAppleInternal,source                 FROM sessions_old AS s JOIN modelHandles AS mh                 WHERE s.modelHandleId = mh.id AND mh.sd_id IS NOT NULL
CREATE INDEX IF NOT EXISTS ix_sessions_sessionDescriptorId ON sessions (sessionDescriptorId ASC)
CREATE TABLE IF NOT EXISTS sessions (                   id integer PRIMARY KEY AUTOINCREMENT NOT NULL,                   creationTimestamp real NOT NULL,                   sessionDescriptorId integer NOT NULL,                   label integer NOT NULL,                   covariatesLength integer NOT NULL,                   covariatesIndices blob,                   covariatesValues blob,                   isAppleInternal integer(1) NOT NULL DEFAULT 0,                   source blob,                   FOREIGN KEY (sessionDescriptorId) REFERENCES sessionsDescriptors (id) ON DELETE CASCADE               )
ALTER TABLE sessions RENAME TO sessions_old
UPDATE modelHandles SET sd_id = (SELECT id FROM sessionsDescriptors WHERE name = sd_name AND version = sd_version)
INSERT OR IGNORE INTO sessionsDescriptors(name,version,locale) SELECT sd_name,sd_version,locale FROM modelHandles
CREATE UNIQUE INDEX IF NOT EXISTS ix_sessionsDescriptors_name_version_locale ON sessionsDescriptors (name, version, locale)
CREATE TABLE IF NOT EXISTS sessionsDescriptors (                   id integer PRIMARY KEY AUTOINCREMENT NOT NULL,                   name char(128) NOT NULL,                   version char(128) NOT NULL,                   locale char(5) NOT NULL               )
UPDATE modelHandles SET               sd_name = CASE                   WHEN name = 'FiM.phone' THEN 'SignificantPhoneNumber'                   WHEN name = 'dataDetectionSignificantPhrasePhoneLogistic' THEN 'SignificantPhoneNumber'                   WHEN name = 'SignificantPhoneNumber' THEN name                   WHEN name = 'dataDetectionSignificantPhraseAddressLogistic' THEN 'SignificantPostalAddress'                   WHEN name = 'SignificantPostalAddress' THEN name                   WHEN name = 'dataDetectionSignificantPhraseEmailLogistic' THEN 'SignificantEmailAddress'                   WHEN name = 'SignificantEmailAddress' THEN name                   WHEN name = 'selfIdentificationPhraseLogistic' THEN 'SelfIdentification'                   WHEN name = 'SelfId.Covariates' THEN 'SelfIdentification'                   WHEN name = 'SelfIdentification' THEN name                   WHEN name = 'STSQP' AND version = '1.2' THEN name                   ELSE NULL               END,               sd_version = CASE                   WHEN version = '1.1' THEN 'TW=12&NG=3&FV=1.1'                   WHEN version = 'TW=12&NG=3&FV=1.1' THEN version                   WHEN version = '1.2' THEN version                   ELSE NULL               END
ALTER TABLE modelHandles ADD sd_version char(128)
ALTER TABLE modelHandles ADD sd_name char(128)
ALTER TABLE modelHandles ADD sd_id integer
ALTER TABLE sessionsItemIds ADD bundleIdentifier char(128)
ALTER TABLE sessionsDomainIds ADD bundleIdentifier char(128)
{_PASDBIterAction_=B}16@?0@"_PASSqliteStatement"8
v16@?0@"_PASSqliteStatement"8
:data
:rowId
UPDATE sessions SET covariatesValues = :data WHERE id = :rowId
SELECT id, covariatesValues FROM sessions
DELETE FROM receivedPlans
ALTER TABLE sessions ADD source blob
DROP TABLE modelMetadata
CREATE INDEX IF NOT EXISTS ix_trainingLog_planId_creationTimestamp             ON trainingLog (planId, creationTimestamp)
CREATE TABLE IF NOT EXISTS trainingLog (                   id integer PRIMARY KEY AUTOINCREMENT NOT NULL,             creationTimestamp real NOT NULL,                           planId char(128) NOT NULL,                                 modelHandleId integer NOT NULL,                            serverIteration integer NOT NULL,                          FOREIGN KEY (modelHandleId) REFERENCES modelHandles (id)               ON DELETE CASCADE                                                  )
CREATE TABLE IF NOT EXISTS receivedPlans (             planId char(128) PRIMARY KEY NOT NULL,                 modificationTimestamp real NOT NULL,                   serializedPlan blob NOT NULL                           )
DELETE FROM modelMetadata
ALTER TABLE sessions ADD isAppleInternal integer(1) NOT NULL DEFAULT 0
ALTER TABLE modelMetadata ADD maxIteration integer NOT NULL DEFAULT 10
DROP TABLE sessions_old
DROP TABLE sessionsItemIds_old
INSERT INTO sessionsItemIds(id,sessionId,itemIdentifier)             SELECT id,sessionId,itemIdentifier FROM sessionsItemIds_old
CREATE TABLE IF NOT EXISTS sessionsItemIds (                 id integer PRIMARY KEY AUTOINCREMENT NOT NULL,               sessionId integer NOT NULL,                                  itemIdentifier char(128) NOT NULL,                           FOREIGN KEY (sessionId) REFERENCES sessions (id)               ON DELETE CASCADE                                          )
ALTER TABLE sessionsItemIds RENAME TO sessionsItemIds_old
DROP TABLE sessionsDomainIds_old
INSERT INTO sessionsDomainIds(id,sessionId,domainIdentifier)             SELECT id,sessionId,domainIdentifier FROM sessionsDomainIds_old
CREATE TABLE IF NOT EXISTS sessionsDomainIds (               id integer PRIMARY KEY AUTOINCREMENT NOT NULL,               sessionId integer NOT NULL,                                  domainIdentifier char(128) NOT NULL,                         FOREIGN KEY (sessionId) REFERENCES sessions (id)               ON DELETE CASCADE                                          )
ALTER TABLE sessionsDomainIds RENAME TO sessionsDomainIds_old
INSERT INTO sessions(id,creationTimestamp,modelHandleId,label,covariatesLength,covariatesIndices,covariatesValues)             SELECT id,creationTimestamp,modelHandleId,label,covariatesLength,covariatesIndices,covariatesValues FROM sessions_old
CREATE INDEX IF NOT EXISTS ix_sessions_modelHandleId             ON sessions (modelHandleId ASC)
CREATE TABLE IF NOT EXISTS sessions (                      id integer PRIMARY KEY AUTOINCREMENT NOT NULL,             creationTimestamp real NOT NULL,                           modelHandleId integer NOT NULL,                            label integer NOT NULL,                                    covariatesLength integer NOT NULL,                         covariatesIndices blob,                                    covariatesValues blob,                                     FOREIGN KEY (modelHandleId) REFERENCES modelHandles (id)               ON DELETE CASCADE                                        )
CREATE TABLE IF NOT EXISTS modelMetadata (               modelHandleId integer PRIMARY KEY NOT NULL,              serverIteration integer NOT NULL,                        hasFinishedTraining integer(1) NOT NULL,                 modificationTimestamp real NOT NULL,                     payload blob NOT NULL,                                   FOREIGN KEY (modelHandleId) REFERENCES modelHandles (id)               ON DELETE CASCADE                                                  )
CREATE INDEX IF NOT EXISTS ix_trainingLog_modelHandleId_creationTimestamp             ON trainingLog (modelHandleId, creationTimestamp)
CREATE TABLE IF NOT EXISTS trainingLog (                   id integer PRIMARY KEY AUTOINCREMENT NOT NULL,             creationTimestamp real NOT NULL,                           modelHandleId integer NOT NULL,                            serverIteration integer NOT NULL,                          FOREIGN KEY (modelHandleId) REFERENCES modelHandles (id)               ON DELETE CASCADE                                                  )
CREATE TABLE IF NOT EXISTS modelMetadata (               modelHandleId integer PRIMARY KEY NOT NULL,              payloadPath char(128) NOT NULL,                          serverIteration integer NOT NULL,                        hasFinishedTraining integer(1) NOT NULL,                 modificationTimestamp real NOT NULL,                     FOREIGN KEY (modelHandleId) REFERENCES modelHandles (id)               ON DELETE CASCADE                                                  )
CREATE TABLE IF NOT EXISTS sessions (                      id integer PRIMARY KEY AUTOINCREMENT NOT NULL,             creationTimestamp real NOT NULL,                           modelHandleId integer NOT NULL,                            label integer NOT NULL,                                    covariatesLength integer NOT NULL,                         covariatesIndices blob NOT NULL,                           covariatesValues blob NOT NULL,                            FOREIGN KEY (modelHandleId) REFERENCES modelHandles (id)               ON DELETE CASCADE                                        )
CREATE UNIQUE INDEX IF NOT EXISTS ix_modelHandles_name_version_locale             ON modelHandles (name, version, locale)
CREATE TABLE IF NOT EXISTS modelHandles (                  id integer PRIMARY KEY AUTOINCREMENT NOT NULL,             name char(128) NOT NULL,                                   version char(128) NOT NULL,                                locale char(5) NOT NULL                                    )
CREATE INDEX ix_lastFeaturizations_sessionDescriptorId ON lastFeaturizations (sessionDescriptorId)
CREATE TABLE lastFeaturizations ( id integer PRIMARY KEY AUTOINCREMENT NOT NULL, sessionDescriptorId integer NOT NULL, transformer blob, FOREIGN KEY (sessionDescriptorId) REFERENCES sessionsDescriptors (id) ON DELETE CASCADE )
CREATE INDEX ix_sessionsDomainIds_sessionId ON sessionsDomainIds (sessionId)
CREATE INDEX ix_sessionsDomainIds_bundleId_domainId ON sessionsDomainIds (bundleIdentifier, domainIdentifier)
CREATE INDEX ix_sessionsItemIds_sessionId ON sessionsItemIds (sessionId)
CREATE INDEX ix_sessionsItemIds_bundleId_itemId ON sessionsItemIds (bundleIdentifier, itemIdentifier)
CREATE INDEX ix_sessions_sessionDescriptorId ON sessions (sessionDescriptorId ASC)
CREATE TABLE sessions ( id integer PRIMARY KEY AUTOINCREMENT NOT NULL, creationTimestamp real NOT NULL, sessionDescriptorId integer NOT NULL, label integer NOT NULL, covariatesLength integer NOT NULL, covariatesIndices blob, covariatesValues blob, isAppleInternal integer(1) NOT NULL DEFAULT 0, source blob, FOREIGN KEY (sessionDescriptorId) REFERENCES sessionsDescriptors (id) ON DELETE CASCADE )
CREATE UNIQUE INDEX ix_sessionsDescriptors_name_version_locale ON sessionsDescriptors (name, version, locale)
CREATE TABLE sessionsDescriptors ( id integer PRIMARY KEY AUTOINCREMENT NOT NULL, name char(128) NOT NULL, version char(128) NOT NULL, locale char(5) NOT NULL )
CREATE TABLE receivedPlans ( planId char(128) PRIMARY KEY NOT NULL, modificationTimestamp real NOT NULL, serializedPlan blob NOT NULL )
CREATE TABLE sessionsItemIds ( id integer PRIMARY KEY AUTOINCREMENT NOT NULL, sessionId integer NOT NULL, itemIdentifier char(128) NOT NULL, bundleIdentifier char(128), lastUsed real NOT NULL DEFAULT 0, timesAccessed integer NOT NULL DEFAULT 0, FOREIGN KEY (sessionId) REFERENCES sessions (id) ON DELETE CASCADE )
CREATE TABLE sessionsDomainIds ( id integer PRIMARY KEY AUTOINCREMENT NOT NULL, sessionId integer NOT NULL, domainIdentifier char(128) NOT NULL, bundleIdentifier char(128), FOREIGN KEY (sessionId) REFERENCES sessions (id) ON DELETE CASCADE )
Index %tu out of bounds (vector length: %tu)
PMLDenseVector.m
other.count == self.count
end >= start
end > 0 && end <= self.count
start >= 0 && start < self.count
Failed to allocate NSData.
PMLMutableDenseVectorAllocationFailure
count
v20@?0f8Q12
secsToExecute
negativeScores
positiveScores
falseNegatives
falsePositives
trueNegatives
truePositives
rmse
com.apple.proactive.fia.phone.en
com.apple.proactive.responses
Can't instantiate %@. Missing %@ dependency.
PMLSeparatedDPNoiseStrategy.m
PFLPrivatize
/System/Library/PrivateFrameworks/PrivateFederatedLearning.framework/PrivateFederatedLearning
QuickResponsesClassification
isInternal
spotlightReference
model
v40@?0Q8Q16r^f24r^q32
Can not mark %lu x %lu matrix as symmetric
PMLSparseMatrix.m
matrix
Invalid shape, all rows must be the same length (row %lu length: %lu, first row length: %lu)
unknown
LABELS_TO_TRAIN_ON
Noise strategy must be nonnull for PMLEspressoTrainingPlan initWithPlist
Session descriptor must be nonnull for PMLEspressoTrainingPlan initWithPlist
PMLEspressoTrainingPlan.m
ESPRESSO_TRAINING_VARIABLES
META_TRAINING_VARIABLES
<PMLEspressoTrainingPlan '%@'>
B32@?0Q8@"<ETDataProvider>"16@"<ETTaskContext>"24
gradient
v40@?0Q8@"NSArray"16@"NSData"24^B32
Unable to convert session batch data into espresso data provider
groundTruth
predictions
accuracy
loss
numberOfSamples
B32@?0@"ETDataTensor"8@"NSString"16@"NSString"24
Unable to in place update gradient since number of starting and ending parameters don't match for tensor type %@ name %@
bias
weight
Unable to find global variable named: %@
global
Gradient contains %f at index %lu
confidenceScore
supervisionType
PLAN
Invalid plan. Unknown class: %@
PMLPlanSerialization.m
PLAN_CLASSNAME
PML_ESPRESSO_TRAINING_NETWORK_PATH
v28@?0f8Q12Q20
support
@"PMLMutableDenseVector"24@?0@"PMLSparseMatrix"8@"PMLModelWeights"16
logisticBatch
/Library/Caches/com.apple.xbs/Sources/Suggestions_Sim/Suggestions-1115.515/ProactiveML/PMLMathFunctions.h
s == SPARSE_SUCCESS
f24@?0@"PMLSparseVector"8@"PMLModelWeights"16
f40@?0@"PMLModelWeights"8@"PMLSparseMatrix"16@"PMLModelRegressor"24^f32
calculateAvgGradientForBatch
NON_WORD_TOKENS_LOCALE
SHOULD_TOKENIZE_NEWLINES
CHARACTER_NORMALIZATION
TOKEN_NORMALIZATION
TOKEN_NGRAM_LENGTH
TOKEN_NGRAM_LOCATION
NGRAM_SIZE
(characterNGramRange.location && characterNGramRange.length) || (tokenNGramRange.location && tokenNGramRange.length)
buckets > 0
PMLHashingVectorizer.m
Can't instantiate %@. Missing "planId" dependency.
PMLFidesTracker.m
size
com.apple.proactive
PMLDenseMatrix.m
<%@ %@ %@ %@>
LOCALE
VERSION
NAME
Handle %@ is not a sub-model handle.
PMLSessionDescriptor.m
_label([0-9]+)
_label[0-9]+
%@_label%lu
Unexpected featureVersion extracted for %@; pattern: %@; descriptor: %@
Unexpected number of match ranges for %@; pattern: %@; descriptor: %@
Unexpected number of matches for %@; pattern: %@; descriptor: %@
regex
(^|&)FV=([0-9]+(.[0-9]+)?)($|&)
%@-%@-%@
PMLTraining.m
attachments
chunk
isEspressoTraining
v24@?0@"PMLSessionDescriptor"8^B16
v16@?0@"NSError"8
v24@?0@"NSUUID"8@"NSError"16
labeledStats
sessionsCount
modelLocale
modelVersion
modelName
negativesCount
positivesCount
v32@?0@"PMLSessionDescriptor"8@"NSSet"16^B24
label%tu
ThirdPersonPhoneSharing
ThirdPersonEmailSharing
ThirdPersonAddressSharing
SignificantPostalAddressForIMessage
SignificantPostalAddress
SignificantPhoneNumber
SignificantEmailAddressForIMessage
SignificantEmailAddress
SelfIdentification
STSQP
SGTextMessageBirthdayCongratsModel
FirstPersonPhoneSharing
FirstPersonEmailSharing
FirstPersonAddressSharing
ContactSharing
com.apple.proactive.PMLDESPlugin
training.db
AWDProactiveModelFittingQuantizedSparseVector+PML.m
TRACKER_QUANTIZATION_BUCKETS
Can't instantiate %@. Unknown class: %@
PMLProtoBufTracker.m
TRACKER_ADAPTER_CLASS
adapter
returnValue
dummy
chunks
PMLDataChunk.m
mock-1.0-en
perLabelSupport
batchSize
PML_ESPRESSO_LAYER_BIASES_TO_GET_GRADIENTS_FOR
PML_ESPRESSO_LAYER_WEIGHTS_TO_GET_GRADIENTS_FOR
PML_ESPRESSO_GLOBALS_TO_GET_GRADIENTS_FOR
PML_ESPRESSO_INITIALIZER_NAME
PML_ESPRESSO_TRAINING_CONTROL_VARIABLE_NAME
PML_ESPRESSO_TRAINING_OUTPUT_NAME
PML_ESPRESSO_LOSS_VALUE_NAME
PML_ESPRESSO_TRUE_LABEL_NAME
PML_ESPRESSO_OUTPUT_NAME
PML_ESPRESSO_INPUT_DIM
PML_ESPRESSO_INPUT_NAME
Can't instantiate %@. Missing "%@" dependency.
PMLEspressoTrainingVariables.m
linRegObjectiveFeatures
linRegFeatureMatrix
logRegGradient
logRegWeights
evaluation
Covariates and outcomes need to have the same length, but got %lu and %d.
PMLTrainingStoredSessionBatch.m
v16@?0^{_CFBurstTrie=}8
path
PMLLexicon.m
v32@?0@"NSString"8@"NSNumber"16^B24
PlanClass
NoiseStrategy
ProactiveMLErrorDomain
tracker
PMLLogRegEvaluationPlan.m
Label value %f must be greater than 0
The names of the input and trueLabel can not be the same: %s
Number of dimensions in rows data (%lu) number of labels (%lu)
PMLEspressoDataProvider.m
Missing delegate to handle AWD metric request.
PMLAWDAvailableSessionsTracker.m
v12@?0I8
AWD metric query delegate can only be set once
Too big vector.
PMLSparseVector.m
v24@?0^v8Q16
numberOfNonZeroValues == 0 || (indices && values)
v32@?0@"NSNumber"8@"NSNumber"16^B24
precision
CLASS_NAME
Invalid plan. class %@ doesn't conform to %@
plist
PMLPlistClassWrapper.m
Can't instantiate %@. Missing "buckets" dependency.
buckets
PMLPassThroughTracker.m
results
AWDGradientMessage
scaleFactor
AWDWeightsMessage
denseQuantizedGradient
gradientL2norm
gradientScaleFactor
sparseQuantizedGradient
iteration
sparseFloatGradient
PMLMultiLabelEspressoClassifier
PMLMultiLabelClassifierProtocol
NSObject
PMLInMemoryCachedStore
PMLPlanSimulator
PMLTrackerParsecAdapter
PMLTrackerAdapterProtocol
AWDProactiveModelFittingEvaluation
NSCopying
AWDProactiveModelFittingLogRegWeights
PMLGradientSolver
PMLMultiLabelRegressionEvaluationPlan
PMLPlanProtocol
PMLPlistAndChunksSerializableProtocol
AWDProactiveModelFittingLinRegObjectiveFeatures
AWDProactiveModelFittingQuantizedSparseVector
AWDProactiveModelFittingModelInfoStatsPair
PMLLabelLimitRowId
PMLLogRegTrainingPlan
AWDProactiveModelFittingLinRegFeatureMatrix
PML_VisibleForTesting
AWDProactiveModelFittingSparseFloatVector
PMLLaplaceSampler
PMLSampler
PMLTrainingLogEntry
PMLTrainingStore
AWDProactiveModelFittingSparseFloatMatrix
PMLImmutableLogisticRegressionModel
PMLPlanDescriptor
AWDProactiveModelFittingQuantizedSparseMatrix
PMLMobileAssetParameterGetStrategy
PMLChunkToVec
PMLPlistAndChunksSerialization
PMLMultiLabelLogisticRegressionModel
PMLMultiLabelClassifierModelProtocol
PMLFastTextVectorizer
PMLTransformerProtocol
PMLDiffPrivacyNoiseStrategy
PMLNoiseStrategy
PMLClassificationEvaluationMetrics
AWDProactiveModelFittingModelInfo
VisibleForTesting
PMLAWDEvaluationTrackerMock
PMLTrainingDatabaseMigrations
PMLDenseVector
NSMutableCopying
PMLMutableDenseVector
AWDProactiveModelFittingEvalMetrics
PMLSeparatedDPNoiseStrategy
PMLTrainingMock
PMLTrainingProtocol
PMLSparseMatrix
PMLAWDSessionTracker
PMLMetaTrainingVariables
PMLEspressoTrainingPlan
AWDProactiveModelFittingSession
PMLPlanWrapper
PMLPlanSerialization
PMLTrackerAWDAdapter
PMLNoNoiseStrategy
AWDProactiveModelFittingLabelSupportPair
PMLLogisticRegressionModel
PMLGaussianSampler
PMLModelRegressor
PMLHashingVectorizer
PMLFidesTracker
PMLMultiLabelEvaluationTrackerProtocol
PMLEvaluationTrackerProtocol
PMLLogRegTrackerProtocol
PMLJson
PMLAWDSessionTrackerMock
PMLDenseMatrix
PMLSessionDescriptor
PMLSpotlightReference
PMLTraining
PMLAWDMetricQueryDelegate
PMLProtoBufTracker
PMLMockPlan
AWDProactiveModelFittingQuantizedDenseVector
PMLDataChunk
PMLDataChunkDenseDoubleVector
PMLDataChunkDenseFloatVector
PMLDataChunkPlist
PMLDataChunkRaw
PMLAWDLogisticRegTrackerMock
AWDProactiveModelFittingMinibatchStats
PMLEspressoTrainingVariables
PMLModelWeights
AWDProactiveModelFittingParsecFeedbackEnvelope
PMLTrainingStoredSessionBatch
PMLTrackerMockAdapter
PMLLexicon
PMLLogRegEvaluationPlan
PMLAWDBaseTracker
PMLEspressoDataProvider
ETDataProvider
PMLAWDAvailableSessionsTracker
PMLSparseVector
AWDProactiveModelFittingPrecisionAtKPair
PMLPlistClassWrapper
PMLPassThroughTracker
AWDProactiveModelFittingLogRegGradient
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
_espressoModel
_espressoPlan
_espressoContext
_outputNumReplyClasses
_inputNumParameters
outputDimension
predict:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
dealloc
initWithEspressoContext:espressoPlan:espressoModel:inputNumParameters:outputNumReplyClasses:
addObject:
numberWithFloat:
cStringUsingEncoding:
makeStringForShape:
getNumParametersFromShape:rank:
classifierWithEspressoModelFile:intercept:
UTF8String
appendFormat:
appendString:
_cachedSessions
initWithSessionBatch:
loadSessionsForModel:excludeItemIdsUsedWithin:limit:onlyAppleInternal:positiveLabel:skew:block:
_openDbIfUnlocked
_registerUnlockHandler
.cxx_destruct
cachedStoreFromRealStore:sessionDescriptor:sessionsLimit:
handleFailureInMethod:object:file:lineNumber:description:
currentHandler
_stores
_sessionDescriptor
_rng
init
initWithStores:sessionDescriptor:seed:
_randomStore
_randomStores:
runParallelPlansWithPlanId:tracker:noiseScaleFactors:noiseMinimumMagnitude:weights:serverIteration:useIntercept:noiseMechanism:usingRandomlySelected:
objectAtIndexedSubscript:
next
initWithSeed:
simulatorWithDbPaths:sessionDescriptor:sessionsInBatch:maxSessionsLimit:seed:
objectForKeyedSubscript:
numberWithUnsignedInteger:
setObject:forKeyedSubscript:
numberWithUnsignedLong:
fileExistsAtPath:
defaultManager
postMetricId:message:
sendCustomFeedback:
sharedSession
initWithType:data:
_writeDataForTransparency:
wrappedMessage:
raise:format:
TB,N
TQ,N,V_timestamp
TB,R,N
T@"AWDProactiveModelFittingModelInfo",&,N,V_modelInfo
T@"AWDProactiveModelFittingMinibatchStats",&,N,V_minibatchStats
T@"AWDProactiveModelFittingEvalMetrics",&,N,V_evaluationMetrics
T@"NSMutableArray",&,N,V_precisionAtKs
_timestamp
_evaluationMetrics
_minibatchStats
_modelInfo
_precisionAtKs
_has
copyWithZone:
setTimestamp:
setHasTimestamp:
hasTimestamp
hasModelInfo
hasMinibatchStats
hasEvaluationMetrics
clearPrecisionAtKs
addPrecisionAtK:
precisionAtKsCount
precisionAtKAtIndex:
dictionaryRepresentation
readFrom:
writeTo:
copyTo:
mergeFrom:
timestamp
modelInfo
setModelInfo:
minibatchStats
setMinibatchStats:
evaluationMetrics
setEvaluationMetrics:
precisionAtKs
setPrecisionAtKs:
countByEnumeratingWithState:objects:count:
allocWithZone:
initWithCapacity:
setObject:forKey:
numberWithUnsignedLongLong:
dictionary
stringWithFormat:
objectAtIndex:
removeAllObjects
precisionAtKType
T@"AWDProactiveModelFittingSparseFloatVector",&,N,V_sparseFloatWeights
T@"AWDProactiveModelFittingQuantizedSparseVector",&,N,V_sparseQuantizedWeights
Tf,N,V_weightsScaleFactor
Tf,N,V_weightsL2norm
T@"AWDProactiveModelFittingQuantizedDenseVector",&,N,V_denseQuantizedWeights
_denseQuantizedWeights
_sparseFloatWeights
_sparseQuantizedWeights
_weightsL2norm
_weightsScaleFactor
hasSparseFloatWeights
hasSparseQuantizedWeights
setWeightsScaleFactor:
setHasWeightsScaleFactor:
hasWeightsScaleFactor
setWeightsL2norm:
setHasWeightsL2norm:
hasWeightsL2norm
hasDenseQuantizedWeights
sparseFloatWeights
setSparseFloatWeights:
sparseQuantizedWeights
setSparseQuantizedWeights:
weightsScaleFactor
weightsL2norm
denseQuantizedWeights
setDenseQuantizedWeights:
T@"PMLModelWeights",&,N,V_weights
T@"PMLSparseMatrix",&,N,V_covariates
T@"PMLModelRegressor",&,N,V_objective
TB,N,V_intercept
_learningRate
_stoppingThreshold
_minIterations
_gradientCalculator
_predictionCalculator
_batchPredictionCalculator
_intercept
_weights
_covariates
_objective
initWithLearningRate:minIterations:stoppingThreshold:weights:intercept:gradientCalculator:predictionCalculator:batchPredictionCalculator:
solve
computeAvgGradientWithIterations:
setCovariates:
solveWithAvgGradient:maxNumberOfIterations:
batchPredict:
solveForCovariates:objectives:
weights
setWeights:
covariates
objective
setObjective:
intercept
setIntercept:
T@"PMLTrainingStore",R,N,V_store
T@"PMLSessionDescriptor",R,N,V_sessionDescriptor
TQ,R,N,V_maxSessionsLimit
TQ,R,N,V_sessionsInBatch
T@"<PMLMultiLabelClassifierModelProtocol>",R,N,V_multiLabelRegressionModel
T@"NSArray",R,N,V_positiveLabels
T@"NSArray",R,N,V_weightsArray
TB,R,N,V_intercept
T@"NSArray",R,N,V_evaluationPoints
T@"<PMLMultiLabelEvaluationTrackerProtocol>",R,N,V_tracker
TQ,R,N,V_evaluationLevel
T@"NSString",R,N,V_planId
_store
_maxSessionsLimit
_sessionsInBatch
_multiLabelRegressionModel
_positiveLabels
_weightsArray
_evaluationPoints
_tracker
_evaluationLevel
_planId
T@"NSString",R,N
runWithError:
planId
toPlistWithChunks:
initWithPlist:chunks:context:
initWithPlanId:store:sessionDescriptor:maxSessionsLimit:sessionsInBatch:labelAndWeights:modelClassName:intercept:evaluationPoints:tracker:evaluationLevel:
_rankedLabelsForSession:
_precisionAtEvaluationPointsForSessions:
store
sessionDescriptor
maxSessionsLimit
sessionsInBatch
multiLabelRegressionModel
positiveLabels
weightsArray
evaluationPoints
tracker
evaluationLevel
dictionaryWithObjects:forKeys:count:
boolValue
dictionaryWithObjects:forKeys:
enumerateObjectsUsingBlock:
unsignedIntegerValue
numberWithBool:
floatValue
indexOfObject:
containsObject:
sortedArrayUsingDescriptors:
arrayWithObjects:count:
allKeys
sortDescriptorWithKey:ascending:comparator:
compare:
initWithObjects:forKeys:
allValues
T@"AWDProactiveModelFittingSparseFloatVector",&,N,V_sparseFloatFeatures
T@"AWDProactiveModelFittingQuantizedSparseVector",&,N,V_sparseQuantizedFeatures
Tf,N,V_featuresScaleFactor
Tf,N,V_featuresL2norm
_featuresL2norm
_featuresScaleFactor
_sparseFloatFeatures
_sparseQuantizedFeatures
hasSparseFloatFeatures
hasSparseQuantizedFeatures
setFeaturesScaleFactor:
setHasFeaturesScaleFactor:
hasFeaturesScaleFactor
setFeaturesL2norm:
setHasFeaturesL2norm:
hasFeaturesL2norm
sparseFloatFeatures
setSparseFloatFeatures:
sparseQuantizedFeatures
setSparseQuantizedFeatures:
featuresScaleFactor
featuresL2norm
TQ,R,N
T^I,R,N
TI,N,V_length
Tf,N,V_minValue
Tf,N,V_bucketSize
_indices
_values
_bucketSize
_length
_minValue
indicesCount
indices
clearIndices
addIndices:
indicesAtIndex:
setIndices:count:
valuesCount
values
clearValues
addValues:
valuesAtIndex:
setValues:count:
setLength:
setHasLength:
hasLength
setMinValue:
setHasMinValue:
hasMinValue
setBucketSize:
setHasBucketSize:
hasBucketSize
length
minValue
bucketSize
numberWithUnsignedInt:
raise
exceptionWithName:reason:userInfo:
T@"AWDProactiveModelFittingMinibatchStats",&,N,V_stats
_stats
hasStats
stats
setStats:
T@"NSString",R,N,V_label
Tq,R,N,V_limit
Tq,R,N,V_rowId
_label
_limit
_rowId
initWithLabel:limit:rowId:
isEqualToLabelLimitRowId:
label
limit
rowId
numberWithInteger:
labelLimitRowIdWithLabel:limit:rowId:
T@"<PMLLogRegTrackerProtocol>",R,N,V_tracker
TQ,R,N,V_currentServerIteration
T@"PMLModelWeights",R,N,V_currentModelWeights
Tf,R,N,V_localLearningRate
Tf,R,N,V_stoppingThreshold
TQ,R,N,V_localMinimumIterations
TQ,R,N,V_localGradientIterations
TB,R,N,V_useOnlyAppleInternalSessions
TB,R,N,V_isMultiLabel
TQ,R,N,V_positiveLabel
TB,R,N,V_reportScale
T@"<PMLTransformerProtocol>",R,N,V_transformer
T@"NSArray",R,N,V_refeaturizationDescriptors
_noiseStrategy
_currentServerIteration
_currentModelWeights
_localGradientIterations
_localLearningRate
_localMinimumIterations
_useOnlyAppleInternalSessions
_skew
_threshold
_isMultiLabel
_positiveLabel
_reportScale
_transformer
_refeaturizationDescriptors
initWithStore:tracker:noiseStrategy:planId:sessionDescriptor:maxSessionsLimit:sessionsInBatch:currentServerIteration:currentModelWeights:localLearningRate:stoppingThreshold:localMinimumIterations:localGradientIterations:useOnlyAppleInternalSessions:skew:threshold:isMultiLabel:intercept:positiveLabel:evaluationLevel:reportScale:transformer:refeaturizationDescriptors:
evaluationMetricsForPredictions:objectives:predicate:start:
loadSessionsWithBlock:
normalizeRegressor:
currentServerIteration
currentModelWeights
localLearningRate
stoppingThreshold
localMinimumIterations
localGradientIterations
useOnlyAppleInternalSessions
isMultiLabel
positiveLabel
reportScale
transformer
refeaturizationDescriptors
doubleValue
mutableCopy
isEqualToString:
isBetaBuild
isInternalBuild
numberWithDouble:
setDictionary:
initWithFormat:
date
errorWithDomain:code:userInfo:
first
timeIntervalSinceNow
planWithStore:tracker:sessionDescriptor:arguments:
integerValue
intValue
T@"AWDProactiveModelFittingSparseFloatMatrix",&,N,V_sparseFloatFeatureMatrix
T@"AWDProactiveModelFittingQuantizedSparseMatrix",&,N,V_sparseQuantizedFeatureMatrix
Tf,N,V_featureMatrixScaleFactor
Tf,N,V_featureMatrixL2norm
_featureMatrixL2norm
_featureMatrixScaleFactor
_sparseFloatFeatureMatrix
_sparseQuantizedFeatureMatrix
hasSparseFloatFeatureMatrix
hasSparseQuantizedFeatureMatrix
setFeatureMatrixScaleFactor:
setHasFeatureMatrixScaleFactor:
hasFeatureMatrixScaleFactor
setFeatureMatrixL2norm:
setHasFeatureMatrixL2norm:
hasFeatureMatrixL2norm
sparseFloatFeatureMatrix
setSparseFloatFeatureMatrix:
sparseQuantizedFeatureMatrix
setSparseQuantizedFeatureMatrix:
featureMatrixScaleFactor
featureMatrixL2norm
modelInfoFromSessionDescriptor:
modelInfoFromPlanId:
hasWeights
T^Q,R,N
T^f,R,N
TQ,N,V_length
_magnitude
initWithMagnitude:
sample
initWithMagnitude:seed:
Td,R,N,V_timestamp
TQ,R,N,V_serverIteration
_serverIteration
initWithTimestamp:serverIteration:
serverIteration
_dbPath
_lockStateNotificationToken
_allowSkipSchema
_sourceRecoverer
_maxTimesAccessed
initWithPath:allowSkipSchema:
initWithPath:
storeSession:label:model:bundleId:domainId:itemIds:isAppleInternal:
storeSession:source:label:model:bundleId:domainId:itemIds:isAppleInternal:
loadDataForModel:excludeItemIdsUsedWithin:limit:onlyAppleInternal:positiveLabel:skew:block:
loadDataForModel:privacyBudgetRefreshPeriod:labels:batchSize:block:
loadSessionsForModel:privacyBudgetRefreshPeriod:labels:batchSize:block:
sessionDimensionsForModel:startingRowId:onlyAppleInternal:labelFilter:
_loadDataFromLabelAndTuples:model:numberOfRows:numberOfColumns:lastUsedMax:block:
_loadDataForModel:positiveRowId:negativeRowId:excludeItemIdsUsedWithin:limit:onlyAppleInternal:positiveLabel:skew:block:
_loadBatchForModel:privacyBudgetRefreshPeriod:labels:batchSize:block:
_loadDataForModel:privacyBudgetRefreshPeriod:labelAndStartRows:batchSize:supportPerLabel:block:
loadSessionsForModel:excludeItemIdsUsedWithin:limit:onlyAppleInternal:block:
limitSessionsForEachLabelWithSessionDescriptor:totalSessionLimit:
limitSessionsByLastUsedTTL:
limitSessionsByMaxTimesAccessed
limitSessionsWithSessionDescriptor:withLabel:limit:
deleteSessionsWithBundleId:
deleteSessionsWithBundleId:itemId:
deleteSessionsWithBundleId:domainId:
sessionStats
sessionStatsForSessionDescriptor:
enumerateSessionDescriptorsUsingBlock:
sessionDescriptorIdFor:
_unregisterUnlockHandler
_unsafeOpenDbIfUnlocked
_truncateDbIfCorrupted
vacuumDb
migrateTo:
updateSessionsAndLabelForModel:block:
lastTrainingFeaturizationForModelName:andLocale:
updateLastTrainingFeaturizationForModel:andData:
isDbOpen
getSchema:
setMaxTimesAccessed:
setSourceRecoverer:
recoverSourceFromData:
logDbNotOpenEvent
dbForTesting
createSnapshot:
storeSession:source:label:model:
storeSession:label:model:
loadSessionsForModel:excludeItemIdsUsedWithin:withSkew:andLimit:block:
numberOfRowsInTable:
closeDbForTesting
closePermanently
prepAndRunQuery:onPrep:onRow:onError:
getIntegerForColumn:
stringByAppendingString:
isClassCLocked
isUnlocked
userVersion
stringByReplacingMatchesInString:options:range:withTemplate:
hasPrefix:
getNSStringForColumn:
regularExpressionWithPattern:options:error:
writeTransaction:
updateTable:dictionary:whereClause:onError:
insertIntoTable:dictionary:
bindNamedParam:toNSString:
tupleWithFirst:second:
getNSDataForColumn:
migrate:to:forStore:
removeItemAtPath:error:
truncateDatabaseAtPath:
corruptionMarkerPathForPath:
isInMemoryPath:
_migrate:forStore:
initializeDatabase:withContentProtection:newDatabaseCreated:errorHandler:
unregisterForLockStateChangeNotifications:
registerForLockStateChangeNotifications:
lastInsertRowId
bindNamedParam:toInteger:
readTransaction:
bindNamedParam:toDouble:
timeIntervalSince1970
enumerateKeysAndObjectsUsingBlock:
appendBytes:length:
getBytes:range:
bindNamedParam:toNSArray:
setObject:atIndexedSubscript:
null
longValue
numberWithLong:
_sessionDataToBatchWithNumberOfColumns:rowsData:labelsData:
isDNUEnabled
_runQueries:andUpdateVersionTo:inTransactionOnDb:forStore:
lastUsedTimestampLimit
setLastUsedTimestampLimit:
inMemoryStoreForTesting
randomlyNamedInMemoryPathWithBaseName:
processName
processInfo
frailWriteTransaction:
setUserVersion:
filename
pointerValue
objectForKey:
second
TQ,N,V_columnLength
TQ,N,V_rowLength
_columnIndices
_rowIndices
_columnLength
_rowLength
columnIndicesCount
columnIndices
clearColumnIndices
addColumnIndices:
columnIndicesAtIndex:
setColumnIndices:count:
setColumnLength:
setHasColumnLength:
hasColumnLength
rowIndicesCount
rowIndices
clearRowIndices
addRowIndices:
rowIndicesAtIndex:
setRowIndices:count:
setRowLength:
setHasRowLength:
hasRowLength
columnLength
rowLength
_backingObject
initWithWeights:intercept:
initWithChunk:intercept:
initWithFloatsNoCopy:count:intercept:
toChunk
quantizedDenseVectorFromDenseVector:numberOfBuckets:
originalValueAtIndex:
T@"NSString",R,N,V_name
T@"NSString",R,N,V_version
T@"NSString",R,N,V_locale
_name
_version
_locale
initWithName:version:locale:
name
version
locale
isValidPlanId:
descriptorFromPlanId:
planIdFromString:
componentsSeparatedByString:
hasGradient
gradientValueAtIndex:
gradientLength
TI,N,V_columnLength
TI,N,V_rowLength
writeToFile:atomically:
lastObject
numberWithInt:
initFromDictionary:
toDictionary
toVec
migrateDenseDoubleVectorToDenseFloatVector:
_models
initWithWeightsArray:andIntercept:
initWithModels:
serialize
firstObject
_lexicon
_featureVectorLength
_vocabSize
_characterNGramRange
_maxTokenNGramLength
_splitCharacterSet
_maxTokenLength
_bow
_eow
transform:
initWithLexiconPath:bucketSize:characterNGramRange:maxTokenNGramLength:featureVectorLength:maxTokenLength:bow:eow:
initWithLexicon:bucketSize:characterNGramRange:maxTokenNGramLength:featureVectorLength:maxTokenLength:bow:eow:
_getVocabSize
_hashUniCharToBucket:len:
_splitTextToTokens:
_addCharacterNGramHashesToCounter:tokenIndices:
_addTokenNGramHashesToCounter:tokenIndices:
subarrayWithRange:
unsignedIntValue
filteredArrayUsingPredicate:
predicateWithFormat:
componentsSeparatedByCharactersInSet:
addCharactersInString:
whitespaceAndNewlineCharacterSet
T{?=ff},N,V_noiseScaleFactors
Tf,N,V_minimumMagnitude
Tq,N,V_noiseMechanism
_seed
_inplaceNorm
_maxIterations
_minimumMagnitude
_noiseScaleFactors
_noiseMechanism
addNoiseToSparseVector:
addNoiseToSparseMatrix:
scaleAndAddNoiseToDenseVector:usingNorm:scaleFactor:
initWithMaxIterationCount:noiseScaleFactors:minimumMagnitude:seed:noiseMechanism:inplaceNorm:
initWithMaxIterationCount:noiseScaleFactors:minimumMagnitude:noiseMechanism:inplaceNorm:
samplerWithScaleFactorFor:usingNorm:
createDefaultSampler
createSamplerByName:
noiseScaleFactors
setNoiseScaleFactors:
minimumMagnitude
setMinimumMagnitude:
noiseMechanism
setNoiseMechanism:
numberWithLongLong:
enumerateIndexesUsingBlock:
removeIndex:
initWithIndexesInRange:
addIndexesInRange:
gaussianNoiseWithScaleFactor:minimumMagnitude:seed:
precision:predictions:predicate:
recall:predictions:predicate:
f1Score:predictions:predicate:
truePositives:predictions:predicate:
falsePositives:predictions:predicate:
trueNegatives:predictions:predicate:
falseNegatives:predictions:predicate:
addScoresForOutcomes:predictions:predicate:metrics:
roundFloatToSigFigs:sigFigs:
setReportSamplingRate:
T@"NSString",&,N,V_name
T@"NSString",&,N,V_version
T@"NSString",&,N,V_locale
hasName
hasVersion
hasLocale
setName:
setVersion:
setLocale:
quantizedSparseMatrixFromSparseMatrix:numberOfBuckets:
originalValueAtRow:column:
precisionAtK:
T@"NSArray",R,D,N
_adapter
initWithAdapter:modelInfo:
initWithModel:
clearTrackedMessages
trackedEvaluations
mockTracker
mockTrackerForPlanId:
T@"NSDictionary",R,N,V_migrations
TI,R,D,N
_migrations
initWithMigrations:
maxVersion
migrations
valueForKeyPath:
dictionaryWithObject:forKey:
bindNamedParam:toInt64:
bindNamedParam:toNSData:
dataWithBytesNoCopy:length:freeWhenDone:
bytes
getInt64ForColumn:
valueWithPointer:
mockMigrationsByAddingQueries:
skipFromZeroSchema:
Tr^f,R,N
T@"NSData",R,N
_data
mutableCopyWithZone:
count
data
initWithCount:
initWithFloats:count:
initWithFloatsNoCopy:count:freeWhenDone:
initWithFloatsNoCopy:count:deallocator:
initWithData:
initWithNumbers:
sliceFrom:to:
vecByAppendingVec:
cosineDistanceFrom:
l1norm
l2norm
maxValue
density
enumerateValuesWithBlock:
enumerateNonZeroValuesWithBlock:
valueAt:
T@"NSMutableData",R,N,V_mutableData
_mutableData
mutablePtr
initWithMutableData:
append:
append:count:
processValuesInPlaceWithBlock:
scaleInPlaceWithInversedFactor:
scaleInPlaceWithFactor:
sumInPlaceWithVector:
mutableData
appendData:
mutableBytes
initWithLength:
initWithBytesNoCopy:length:deallocator:
initWithBytesNoCopy:length:freeWhenDone:
initWithBytes:length:
denseVectorFromNumbers:
valueAtIndex:
sparseFloatVectorFromModelWeights:
sparseFloatVectorFromSparseVector:
evalMetricsWithRmse:f1:
evalMetricsWithRmse:f1:truePositives:trueNegatives:falsePositives:falseNegatives:
Tf,N,V_rmse
Tf,N,V_f1
TQ,N,V_truePositives
TQ,N,V_trueNegatives
TQ,N,V_falsePositives
TQ,N,V_falseNegatives
Tf,N,V_secsToExecute
_negativeScores
_positiveScores
_falseNegatives
_falsePositives
_trueNegatives
_truePositives
_rmse
_secsToExecute
setRmse:
setHasRmse:
hasRmse
setF1:
setHasF1:
hasF1
setTruePositives:
setHasTruePositives:
hasTruePositives
setTrueNegatives:
setHasTrueNegatives:
hasTrueNegatives
setFalsePositives:
setHasFalsePositives:
hasFalsePositives
setFalseNegatives:
setHasFalseNegatives:
hasFalseNegatives
positiveScoresCount
positiveScores
clearPositiveScores
addPositiveScores:
positiveScoresAtIndex:
setPositiveScores:count:
negativeScoresCount
negativeScores
clearNegativeScores
addNegativeScores:
negativeScoresAtIndex:
setNegativeScores:count:
setSecsToExecute:
setHasSecsToExecute:
hasSecsToExecute
rmse
truePositives
trueNegatives
falsePositives
falseNegatives
secsToExecute
_pflIdentifier
initWithPFLIdentifier:
getPFLIdentifier:
T@"NSArray",R,N,V_collectedSessions
_internalCollectedSessions
_lastTrainingFeaturizations
_collectedSessions
addSessionWithCovariates:source:label:sessionDescriptor:spotlightReference:isInternal:
addSessionWithCovariates:label:sessionDescriptor:spotlightReference:isInternal:
deleteSessionsWithIdentifiers:bundleID:
deleteSessionsWithDomainIdentifiers:bundleID:
deleteSessionsWithBundleID:
trimDbWithDeferralBlock:
planReceivedWithPayload:error:
planReceivedWithRecipe:attachments:error:
clearCollectedSessions
collectedSessions
TB,N,V_isSymmetric
T^{sparse_m_float=},N,V_matrix
_isSymmetric
_matrix
initWithSparseMatrix:
numberOfRows
numberOfColumns
setMatrix:
setIsSymmetric:
valueAtRow:column:
_enumerateSparseRowsWithBlock:
enumerateNonZeroValuesForRow:withBlock:
matrixWithConstantColumn
isSymmetric
matrix
sparseMatrixWithNumberOfRows:numberOfColumns:
sparseMatrixFromNumbers:
trackerForModelName:modelVersion:
trackSessionWithCovariates:label:locale:
trackSessionWithCovariates:label:locale:supervisionType:
T@"<PMLNoiseStrategy>",R,N,V_noiseStrategy
TQ,R,N,V_maxSessionsToTrainOn
TQ,R,N,V_trainingSetSize
T@"NSArray",R,N,V_labelsToTrainOn
Td,R,N,V_lossThresholdForStopping
TQ,R,N,V_epochsPerBatch
Td,R,N,V_probThreshold
_maxSessionsToTrainOn
_trainingSetSize
_labelsToTrainOn
_lossThresholdForStopping
_epochsPerBatch
_probThreshold
initWithPlanId:store:noiseStrategy:sessionDescriptor:maxSessionsToTrainOn:trainingSetSize:labelsToTrainOn:currentServerIteration:lossThresholdForStopping:epochsPerBatch:probThreshold:evaluationLevel:reportScale:
isEqualToMetaTrainingVariables:
noiseStrategy
maxSessionsToTrainOn
trainingSetSize
labelsToTrainOn
lossThresholdForStopping
epochsPerBatch
probThreshold
_taskDefinition
_mtv
_etv
_trainingPredictions
_groundTruth
initWithMetaTrainingVariables:espressoTrainingVariables:
_newTaskForTraining
_updateResultsReferenceCallback:
isEqualToEspressoTrainingPlan:
_calculateTrainingMetricsWithSamplingProb:groundTruthProvider:predictionsProvider:trueLabelName:trainingOutputName:lossValueName:probThreshold:
addEntriesFromDictionary:
isValidGradient:error:
_calculateGradientInPlaceForTask:startingParameters:globalNames:weightNames:biasNames:
doTrainingOnData:forNumberOfEpochs:withCallback:error:
_getModelParametersForTask:globalNames:weightNames:biasNames:error:
initWithTrainingModelDefinition:forPlatform:error:
initWithTrainingNetworkPath:inferenceInputs:inferenceOutputs:trainingInputs:trainingOutputs:trainingControlVariableName:withInitializer:error:
argmax:
numberOfParametersInTensor:
_iterateModelParametersForTask:globalNames:weightNames:biasNames:block:
dataArray
dataPointer
nextDouble
replaceBytesInRange:withBytes:
getParameterOfType:forLayerNamed:error:
getTensorNamed:
shape
TQ,N,V_label
TQ,N,V_supervisionType
Tf,N,V_confidenceScore
_supervisionType
_confidenceScore
setLabel:
setHasLabel:
hasLabel
setSupervisionType:
setHasSupervisionType:
hasSupervisionType
setConfidenceScore:
setHasConfidenceScore:
hasConfidenceScore
supervisionType
confidenceScore
T@"<PMLPlanProtocol>",R,N,V_plan
_plan
initWithPlan:
plan
planFromData:withStore:
planFromData:store:trainingNetworkPath:
planFromData:withArgs:
serializePlan:
sparseFloatMatrixFromDenseMatrix:
sparseFloatMatrixFromSparseMatrix:
Tf,N,V_support
_support
setSupport:
setHasSupport:
hasSupport
support
_solver
initWithSolver:
solverWithWeights:andIntercept:
solverWithWeights:
solverWithWeights:andIntercept:learningRate:minIterations:stoppingThreshold:
withWeights:
withWeights:andIntercept:
Ti,R,N
denseVector
initModelRegressorFromFloats:
initWithRegressorFromFloat:
regressorFor:
inverseValues
modelRegressorFromFloat:
modelRegressorFromFloats:
regressorVectorFrom:
TB,N,V_normalize
_buckets
_normalize
_tokenNGramRange
_shouldNormalizeTokens
_shouldNormalizeCharacters
_localeForNonwordTokens
_tokenizeNewlines
initWithBucketSize:ngrams:localeForNonwordTokens:tokenizeNewlines:andIntercept:
initWithBucketSize:characterNGramRange:tokenNGramRange:shouldNormalizeTokens:shouldNormalizeCharacters:localeForNonwordTokens:tokenizeNewlines:withIntercept:
transformBatch:
isEqualToHashingVectorizer:
normalize
setNormalize:
localeWithLocaleIdentifier:
localeIdentifier
getCharacters:range:
withBucketSize:andNgrams:
withBucketSize:ngrams:localeForNonwordTokens:tokenizeNewlines:andIntercept:
withBucketSize:characterNGramRange:tokenNGramRange:shouldNormalizeTokens:shouldNormalizeCharacters:localeForNonwordTokens:tokenizeNewlines:withIntercept:
withBucketSize:characterNGramRange:tokenNGramRange:shouldNormalizeTokens:shouldNormalizeCharacters:withIntercept:
trackPrecisionAtK:
trackPrecisionAtK:minibatchStats:
trackEvaluationMetrics:minibatchStats:
trackWeights:scaleFactor:minibatchStats:evaluationMetrics:
trackGradient:scaleFactor:minibatchStats:evaluationMetrics:serverIteration:
initWithPlanId:
stringValue
initWithFloat:
T@"NSArray",R,N,V_trackedSessions
_internalTrackedSessions
_trackedSessions
clearTrackedSessions
trackedSessions
TQ,R,N,V_numberOfRows
TQ,R,N,V_numberOfColumns
_numberOfRows
_numberOfColumns
initWithData:numberOfRows:numberOfColumns:
denseMatrixFromData:numberOfRows:numberOfColumns:
denseMatrixFromNumbers:
Tf,R,N,V_featureVersion
_featureVersion
_parseFeatureVersion:descriptor:
subSessionDescriptorForLabel:
baseSessionDescriptor
isSubSessionDescriptor
subSessionLabel
featureVersion
descriptorForName:version:locale:
substringWithRange:
rangeAtIndex:
firstMatchInString:options:range:
numberOfMatchesInString:options:range:
numberOfRanges
pattern
matchesInString:options:range:
T@"NSArray",R,N,V_itemIdentifiers
T@"NSString",R,N,V_domainIdentifier
T@"NSString",R,N,V_bundleIdentifier
_itemIdentifiers
_domainIdentifier
_bundleIdentifier
initWithBundleId:domainId:itemIds:
itemIdentifiers
domainIdentifier
bundleIdentifier
referenceWithBundleId:domainId:itemIds:
_fidesStore
_availableSessionsTracker
availableSessionsStatsReportedToAWD
initWithStore:fidesStore:availableSessionsTracker:
isMultiLabelModel:
sendSessionStatsToFides
_sendStatsToFidesForModel:sessionCount:positivesCount:negativesCount:support:
_sendStatsToFidesForMultiLabelModel:sessionCount:labeledStats:
_deleteAllSavedRecordsFromFidesStoreSync
_trainWithRecipe:chunkData:args:error:
dataWithContentsOfURL:
pathExtension
deleteAllSavedRecordsWithCompletion:
saveRecordWithData:recordInfo:completion:
unsignedLongValue
sharedSingletonWithDirectory:
initWithBundleIdentifier:
stringByAppendingPathComponent:
quantizedSparseVectorFromSparseVector:numberOfBuckets:
quantizedSparseVectorFromDenseVector:numberOfBuckets:
T@"<PMLTrackerAdapterProtocol>",R,N,V_adapter
T@"AWDProactiveModelFittingModelInfo",R,N,V_modelInfo
TQ,R,N,V_quantizationNumberOfBuckets
_quantizationNumberOfBuckets
initWithAdapter:modelInfo:quantizationBuckets:
adapter
quantizationNumberOfBuckets
unsignedLongLongValue
messageForGradient:scaleFactor:minibatchStats:evaluationMetrics:serverIteration:modelInfo:numberOfBuckets:
messageForWeights:scaleFactor:minibatchStats:evaluationMetrics:modelInfo:numberOfBuckets:
trackerForPlanId:
awdTrackerForPlanId:
parsecTrackerForPlanId:
TQ,V_version
TB,R,N,V_didRun
_returnValue
_didRun
initWithPlanId:store:version:returningAfterRunning:
initWithPlanId:version:returningAfterRunning:
initWithPlanId:version:
initWithVersion:
initWithPlanId:store:
didRun
setLastDeserializedPlanWithId:toPlan:
lastDeserializedPlanWithId:
clearLastDeserializedPlans
lastDeserializedPlansMap
_backingData
_superdata
setSuperdata:
isEqualToData:
dataChunkType
chunkOfType:data:superdata:
chunksFromFileAtPath:
chunksFromData:
serializeChunks:
initWithContentsOfFile:options:error:
Tr^d,R,N
vector
chunkWithVector:count:
T@,R,N
_plist
_parsed
plist
propertyListWithData:options:format:error:
chunkWithPlist:
dataWithPropertyList:format:options:error:
chunkWithData:
trackedGradients
trackedWeights
TQ,N,V_batchSize
T@"NSMutableArray",&,N,V_perLabelSupports
_batchSize
_perLabelSupports
setBatchSize:
setHasBatchSize:
hasBatchSize
clearPerLabelSupports
addPerLabelSupport:
perLabelSupportsCount
perLabelSupportAtIndex:
batchSize
perLabelSupports
setPerLabelSupports:
perLabelSupportType
T@"NSURL",R,N,V_trainingNetworkPath
T@"NSString",R,N,V_inputName
TQ,R,N,V_inputDim
T@"NSString",R,N,V_outputName
T@"NSString",R,N,V_trueLabelName
T@"NSString",R,N,V_lossValueName
T@"NSString",R,N,V_trainingOutputName
T@"NSString",R,N,V_trainingControlVariableName
T@"NSString",R,N,V_initializerName
T@"NSArray",R,N,V_globalsToGetGradientsFor
T@"NSArray",R,N,V_layerWeightsToGetGradientsFor
T@"NSArray",R,N,V_layerBiasesToGetGradientsFor
_initializedWithNSData
_trainingNetworkPath
_inputName
_inputDim
_outputName
_trueLabelName
_lossValueName
_trainingOutputName
_trainingControlVariableName
_initializerName
_globalsToGetGradientsFor
_layerWeightsToGetGradientsFor
_layerBiasesToGetGradientsFor
initWithTrainingNetworkPath:inputName:inputDim:outputName:trueLabelName:lossValueName:trainingOutputName:trainingControlVariableName:initializerName:globalsToGetGradientsFor:layerWeightsToGetGradientsFor:layerBiasesToGetGradientsFor:
isEqualToEspressoTrainingVariables:
trainingNetworkPath
inputName
inputDim
outputName
trueLabelName
lossValueName
trainingOutputName
trainingControlVariableName
initializerName
globalsToGetGradientsFor
layerWeightsToGetGradientsFor
layerBiasesToGetGradientsFor
dataWithContentsOfFile:
absoluteString
isReadableFileAtPath:
path
initModelWeightsFromFloats:
asMutableDenseVector
weightsByAppendingWeights:
copy
modelWeightsFromFloats:
modelWeightsOfLength:rng:
modelWeightsOfLength:
modelWeightsOfLength:rngSeed:
zeroWeightsOfLength:
constWeightsOfLength:value:
weightsFromNumbers:
T@"AWDProactiveModelFittingEvaluation",&,N,V_evaluation
T@"AWDProactiveModelFittingLogRegWeights",&,N,V_logRegWeights
T@"AWDProactiveModelFittingLogRegGradient",&,N,V_logRegGradient
T@"AWDProactiveModelFittingLinRegFeatureMatrix",&,N,V_linRegFeatureMatrix
T@"AWDProactiveModelFittingLinRegObjectiveFeatures",&,N,V_linRegObjectiveFeatures
_evaluation
_linRegFeatureMatrix
_linRegObjectiveFeatures
_logRegGradient
_logRegWeights
hasEvaluation
hasLogRegWeights
hasLogRegGradient
hasLinRegFeatureMatrix
hasLinRegObjectiveFeatures
evaluation
setEvaluation:
logRegWeights
setLogRegWeights:
logRegGradient
setLogRegGradient:
linRegFeatureMatrix
setLinRegFeatureMatrix:
linRegObjectiveFeatures
setLinRegObjectiveFeatures:
hasFeatureMatrix
featureMatrixValueAtRow:column:
T@"PMLSparseMatrix",R,N,V_covariates
T@"PMLModelRegressor",R,N,V_outcomes
TQ,R,N,V_count
_outcomes
_count
initWithCovariates:outcomes:
minibatchStatsForPositiveLabel:
minibatchStatsForPositiveLabels:
outcomes
_trackedMessages
clearAllTrackedMessages
trackedMessagesByClass:
getWordIDforToken:
getTotalEntries
runBlockWithTrie:
payloadForString:
fileSize
attributesOfItemAtPath:error:
serializeLexiconToFile:tokenToWordIDDict:
T@"<PMLEvaluationTrackerProtocol>",R,N,V_tracker
initWithStore:tracker:planId:sessionDescriptor:maxSessionsLimit:sessionsInBatch:currentModelWeights:intercept:skew:threshold:isMultiLabel:positiveLabel:evaluationLevel:
trackerForModelName:modelVersion:modelLocale:
_rowsData
_labelsData
_numberOfDataPoints
_inputBuffer
_trueLabelBuffer
prepareForEpoch
dataPointAtIndex:error:
numberOfDataPoints
initWithRowsData:labelsData:inputName:inputDim:trueLabelName:
clearBuffers
setMaxNumberOfElements:
initWithData:type:shape:strides:
resetBytesInRange:
hasObjectiveFeatures
featuresValueAtIndex:
featuresLength
_delegate
_awdServerConnection
initWithAWDConnection:
setAWDMetricQueryDelegate:
reportStatsToAWD
registerQueriableMetric:callback:
initWithComponentId:
TQ,N,V_numberOfNonZeroValues
T^q,N,V_sparseIndices
T^f,N,V_sparseValues
TQ,R,N,V_length
_numberOfNonZeroValues
_sparseIndices
_sparseValues
initWithLength:numberOfNonZeroValues:indicesData:valuesData:
initWithLength:numberOfNonZeroValues:indices:values:
indicesData
valuesData
indicesAsUInt16Data
quantizedValuesAsUInt8DataWithMin:max:
maxAbsValue
setSparseValues:
setSparseIndices:
processNonZeroValuesInPlaceWithBlock:
vectorWithConstantColumn
numberOfNonZeroValues
setNumberOfNonZeroValues:
sparseIndices
sparseValues
sparseVectorFromDense:length:
sparseVectorFromDense:
sparseVectorEmptyWithLength:
sparseVectorFromNumbers:
sparseVectorFromNumbers:indices:length:
combineWithStats:
statsWithSize:support:
supportForLabel:
statsWithPerLabelCounts:
TQ,N,V_k
Tf,N,V_precision
_precision
setK:
setHasK:
hasK
setPrecision:
setHasPrecision:
hasPrecision
precision
_classNameKey
initWithClassNameKey:
writeToPlistWithObject:andChunks:
readObjectWithPlist:chunks:context:
writeToDataWithObject:andChunks:
readObjectWithData:chunks:context:
_results
_resultsLock
initWithPlanId:numberOfBuckets:
unlock
lock
T@"AWDProactiveModelFittingSparseFloatVector",&,N,V_sparseFloatGradient
TQ,N,V_iteration
T@"AWDProactiveModelFittingQuantizedSparseVector",&,N,V_sparseQuantizedGradient
Tf,N,V_gradientScaleFactor
Tf,N,V_gradientL2norm
T@"AWDProactiveModelFittingQuantizedDenseVector",&,N,V_denseQuantizedGradient
_iteration
_denseQuantizedGradient
_gradientL2norm
_gradientScaleFactor
_sparseFloatGradient
_sparseQuantizedGradient
hasSparseFloatGradient
setIteration:
setHasIteration:
hasIteration
hasSparseQuantizedGradient
setGradientScaleFactor:
setHasGradientScaleFactor:
hasGradientScaleFactor
setGradientL2norm:
setHasGradientL2norm:
hasGradientL2norm
hasDenseQuantizedGradient
sparseFloatGradient
setSparseFloatGradient:
iteration
sparseQuantizedGradient
setSparseQuantizedGradient:
gradientScaleFactor
gradientL2norm
denseQuantizedGradient
setDenseQuantizedGradient:
{?="plan"^v"network_index"i}
Q16@0:8
@"NSArray"24@0:8@"PMLSparseVector"16
@24@0:8@16
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
v16@0:8
@64@0:8^v16^v24{?=^vi}32Q48Q56
@24@0:8[10Q]16
Q32@0:8[10Q]16Q24
@28@0:8@16B24
@"PMLTrainingStoredSessionBatch"
v68@0:8@16d24Q32B40Q44d52@?60
@40@0:8@16@24Q32
@"NSArray"
@"PMLSessionDescriptor"
@"_PASRng"
@24@0:8Q16
@80@0:8@16@24{?=ff}32f40@44Q52B60q64Q72
@56@0:8@16@24Q32Q40Q48
v28@0:8I16@"PBCodable"20
v28@0:8I16@20
@"AWDProactiveModelFittingEvalMetrics"
@"AWDProactiveModelFittingMinibatchStats"
@"AWDProactiveModelFittingModelInfo"
@"NSMutableArray"
{?="timestamp"b1}
@24@0:8^{_NSZone=}16
v24@0:8Q16
v20@0:8B16
v24@0:8@16
@"AWDProactiveModelFittingQuantizedDenseVector"
@"AWDProactiveModelFittingSparseFloatVector"
@"AWDProactiveModelFittingQuantizedSparseVector"
{?="timestamp"b1"weightsL2norm"b1"weightsScaleFactor"b1}
v20@0:8f16
f16@0:8
@"PMLModelWeights"
@"PMLSparseMatrix"
@"PMLModelRegressor"
@68@0:8f16Q20f28@32B40@?44@?52@?60
v32@0:8^f16Q24
f24@0:8@16
v32@0:8@16@24
@"PMLTrainingStore"
@"<PMLMultiLabelClassifierModelProtocol>"
@"<PMLMultiLabelEvaluationTrackerProtocol>"
@"NSString"
@"NSDictionary"24@0:8^@16
@24@0:8^@16
@24@0:8@"NSMutableArray"16
@40@0:8@16@"NSArray"24@"NSDictionary"32
@40@0:8@16@24@32
@100@0:8@16@24@32Q40Q48@56@64B72@76@84Q92
{?="timestamp"b1"featuresL2norm"b1"featuresScaleFactor"b1}
{?="list"^I"count"Q"size"Q}
{?="bucketSize"b1"length"b1"minValue"b1}
^I16@0:8
v20@0:8I16
I24@0:8Q16
v32@0:8^I16Q24
I16@0:8
@40@0:8@16q24q32
q16@0:8
@"<PMLLogRegTrackerProtocol>"
@"<PMLNoiseStrategy>"
@"<PMLTransformerProtocol>"
@176@0:8@16@24@32@40@48Q56Q64Q72@80f88f92Q96Q104B112d116d124B132B136Q140Q148B156@160@168
@48@0:8@16@24@?32@40
v24@0:8@?16
@48@0:8@16@24@32@40
@"AWDProactiveModelFittingSparseFloatMatrix"
@"AWDProactiveModelFittingQuantizedSparseMatrix"
{?="timestamp"b1"featureMatrixL2norm"b1"featureMatrixScaleFactor"b1}
{?="list"^Q"count"Q"size"Q}
{?="list"^f"count"Q"size"Q}
{?="length"b1}
^Q16@0:8
Q24@0:8Q16
v32@0:8^Q16Q24
^f16@0:8
f24@0:8Q16
{?="s"[2Q]}
@20@0:8f16
@28@0:8f16Q20
@32@0:8d16Q24
d16@0:8
@"_PASSqliteDatabase"
v68@0:8@16q24@32@40@48@56B64
v76@0:8@16@24q32@40@48@56@64B72
v56@0:8@16d24@32Q40@?48
@44@0:8@16Q24B32@36
v64@0:8@16@24Q32Q40d48@?56
v84@0:8@16Q24Q32d40Q48B56Q60d68@?76
v64@0:8@16d24@32Q40Q48@?56
v52@0:8@16d24Q32B40@?44
v32@0:8@16Q24
v24@0:8d16
v40@0:8@16@24Q32
Q24@0:8@16
q24@0:8@16
v32@0:8@16@?24
@32@0:8@16@24
@24@0:8^Q16
v48@0:8@16@24q32@40
v40@0:8@16q24@32
v52@0:8@16d24d32i40@?44
@40@0:8Q16@24@32
q32@0:8@16@24
q40@0:8@16@24@32
B44@0:8@16I24@28@36
{?="columnLength"b1"rowLength"b1}
@32@0:8r^f16i24B28
@32@0:8@16Q24
{?="bucketSize"b1"columnLength"b1"minValue"b1"rowLength"b1}
@28@0:8@"NSArray"16B24
@"PMLLexicon"
{_NSRange="location"Q"length"Q}
@"NSCharacterSet"
@88@0:8@16Q24{_NSRange=QQ}32Q48Q56Q64@72@80
Q28@0:8r^S16i24
{?="gaussianScaleFactor"f"laplaceScaleFactor"f}
v24@0:8@"PMLSparseVector"16
v24@0:8@"PMLSparseMatrix"16
B36@0:8@"PMLMutableDenseVector"16B24^f28
B36@0:8@16B24^f28
@48@0:8i16{?=ff}20f28i32q36B44
@44@0:8i16{?=ff}20f28q32B40
{_PMLPreNoiseScaleFactorAndNoiseSampler=@f}28@0:8@16B24
{?=ff}16@0:8
v24@0:8{?=ff}16
v24@0:8q16
@28@0:8f16f20i24
f40@0:8@16@24@?32
Q40@0:8@16@24@?32
v48@0:8@16@24@?32@40
f24@0:8f16i20
f32@0:8Q16Q24
@"PMLTrackerMockAdapter"
@"NSDictionary"
@24@0:8^I16
@"NSMutableData"
r^f16@0:8
@32@0:8r^f16Q24
@36@0:8^f16Q24B32
@40@0:8^f16Q24@?32
@24@0:8i16i20
v32@0:8r^f16Q24
@24@0:8f16f20
@56@0:8f16f20Q24Q32Q40Q48
{?="falseNegatives"b1"falsePositives"b1"trueNegatives"b1"truePositives"b1"f1"b1"rmse"b1"secsToExecute"b1}
@24@0:8r*16
@"NSMutableDictionary"
v60@0:8@"PMLSparseVector"16@"NSData"24q32@"PMLSessionDescriptor"40@"PMLSpotlightReference"48B56
v52@0:8@"PMLSparseVector"16q24@"PMLSessionDescriptor"32@"PMLSpotlightReference"40B48
v32@0:8@"NSArray"16@"NSString"24
v24@0:8@"NSString"16
v32@0:8@"PMLSessionDescriptor"16@?<v@?q@"NSData"@?<v@?q@"PMLSparseVector"@"PMLSessionDescriptor">>24
@"_PASTuple2"32@0:8@"NSString"16@"NSString"24
v32@0:8@"PMLSessionDescriptor"16@"NSData"24
v24@0:8@?<B@?>16
@"NSDictionary"32@0:8@"NSData"16^@24
@"NSDictionary"40@0:8@"NSDictionary"16@"NSArray"24^@32
v24@0:8@?<@@?@"NSData">16
v60@0:8@16@24q32@40@48B56
v52@0:8@16q24@32@40B48
@32@0:8@16^@24
@40@0:8@16@24^@32
^{sparse_m_float=}
@24@0:8^{sparse_m_float=}16
v24@0:8^{sparse_m_float=}16
v32@0:8Q16@?24
^{sparse_m_float=}16@0:8
@32@0:8Q16Q24
v40@0:8@16Q24@32
v48@0:8@16Q24@32Q40
@116@0:8@16@24@32@40Q48Q56@64Q72d80Q88d96Q104B112
@"ETTaskDefinition"
@"PMLMetaTrainingVariables"
@"PMLEspressoTrainingVariables"
@"<ETDataProvider>"
@?24@0:8@16
i24@0:8@16
B32@0:8@16^@24
@56@0:8@16@24@32@40@?48
@56@0:8@16@24@32@40^@48
@56@0:8@16@24@32@40@48
@72@0:8d16@24@32@40@48@56d64
{?="label"b1"supervisionType"b1"timestamp"b1"confidenceScore"b1}
@"<PMLPlanProtocol>"
{?="label"b1"support"b1}
@"PMLGradientSolver"
@44@0:8@16B24f28Q32f40
@"PMLDenseVector"
@20@0:8i16
i16@0:8
@"NSLocale"
@40@0:8i16i20@24B32B36
@76@0:8i16{_NSRange=QQ}20{_NSRange=QQ}36B52B56@60B68B72
@64@0:8i16{_NSRange=QQ}20{_NSRange=QQ}36B52B56B60
@"NSDictionary"24@0:8@"NSDictionary"16
@"NSDictionary"32@0:8@"NSDictionary"16@"AWDProactiveModelFittingMinibatchStats"24
@"NSDictionary"32@0:8@"AWDProactiveModelFittingEvalMetrics"16@"AWDProactiveModelFittingMinibatchStats"24
@"NSDictionary"44@0:8@"PMLDenseVector"16f24@"AWDProactiveModelFittingMinibatchStats"28@"AWDProactiveModelFittingEvalMetrics"36
@"NSDictionary"52@0:8@"PMLDenseVector"16f24@"AWDProactiveModelFittingMinibatchStats"28@"AWDProactiveModelFittingEvalMetrics"36Q44
@44@0:8@16f24@28@36
@52@0:8@16f24@28@36Q44
@40@0:8@16Q24Q32
f32@0:8@16@24
@"DESRecordStore"
@"PMLAWDAvailableSessionsTracker"
v52@0:8@16Q24Q32Q40f48
@48@0:8@16@24@32^@40
@"<PMLTrackerAdapterProtocol>"
@60@0:8@16f24@28@36@44Q52
@68@0:8@16f24@28@36Q44@52Q60
@44@0:8@16@24Q32B40
@36@0:8@16Q24B32
{?="bucketSize"b1"minValue"b1}
@"NSData"
@36@0:8I16@20@28
r^d16@0:8
@28@0:8r^d16i24
@28@0:8r^f16i24
{?="batchSize"b1"support"b1}
@"NSURL"
@112@0:8@16@24Q32@40@48@56@64@72@80@88@96@104
@"PMLMutableDenseVector"
@28@0:8i16@20
@28@0:8i16Q20
@24@0:8i16f20
@"AWDProactiveModelFittingEvaluation"
@"AWDProactiveModelFittingLinRegFeatureMatrix"
@"AWDProactiveModelFittingLinRegObjectiveFeatures"
@"AWDProactiveModelFittingLogRegGradient"
@"AWDProactiveModelFittingLogRegWeights"
@24@0:8#16
@"_PASCFBurstTrie"
B32@0:8@16@24
@"<PMLEvaluationTrackerProtocol>"
@112@0:8@16@24@32@40Q48Q56@64B72d76d84B92Q96Q104
@"NSDictionary"32@0:8Q16^@24
@32@0:8Q16^@24
@56@0:8@16@24@32Q40@48
@"<PMLAWDMetricQueryDelegate>"
@"AWDServerConnection"
@48@0:8Q16Q24@32@40
@48@0:8Q16Q24^q32^f40
v24@0:8^f16
v24@0:8^q16
^q16@0:8
@28@0:8Q16f24
{?="k"b1"precision"b1}
@"NSLock"
{?="iteration"b1"timestamp"b1"gradientL2norm"b1"gradientScaleFactor"b1}
